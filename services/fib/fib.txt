// RO data = 12888/12888 bytes
// RW data = 4736/74448 bytes
// Stack size = 65536 bytes
// RO data = [162, 4, 0, 0, 164, 4, 0, 0, 166, 4, 0, 0, 168, 4, 0, 0, 176, 4, 0, 0, 184, 4, 0, 0, 192, 4, 0, 0, 200, 4, 0, 0, 208, 4, 0, 0, 216, 4, 0, 0, 224, 4, 0, 0, 240, 4, 0, 0, 252, 4, 0, 0, 8, 5, 0, 0, 20, 5, 0, 0, 32, 5, 0, 0, 40, 5, 0, 0, 52, 5, 0, 0, 64, 5, 0, 0, 76, 5, 0, 0, 86, 5, 0, 0, 96, 5, 0, 0, 102, 5, 0, 0, 108, 5, 0, 0, 118, 5, 0, 0, 124, 5, 0, 0, 132, 5, 0, 0, 146, 5, 0, 0, 160, 5, 0, 0, 168, 5, 0, 0, 176, 5, 0, 0, 186, 5, 0, 0, 196, 5, 0, 0, 206, 5, 0, 0, 216, 5, 0, 0, 226, 5, 0, 0, 238, 5, 0, 0, 250, 5, 0, 0, 2, 6, 0, 0, 10, 6, 0, 0, 18, 6, 0, 0, 26, 6, 0, 0, 32, 6, 0, 0, 40, 6, 0, 0, 48, 6, 0, 0, 56, 6, 0, 0, 64, 6, 0, 0, 72, 6, 0, 0, 80, 6, 0, 0, 86, 6, 0, 0, 92, 6, 0, 0, 98, 6, 0, 0, 106, 6, 0, 0, 114, 6, 0, 0, 126, 6, 0, 0, 136, 6, 0, 0, 142, 6, 0, 0, 148, 6, 0, 0, 178, 6, 0, 0, 182, 6, 0, 0, 206, 6, 0, 0, 214, 6, 0, 0, 222, 6, 0, 0, 234, 6, 0, 0, 250, 6, 0, 0, 2, 7, 0, 0, 8, 7, 0, 0, 16, 7, 0, 0, 24, 7, 0, 0, 32, 7, 0, 0, 42, 7, 0, 0, 44, 7, 0, 0, 48, 7, 0, 0, 60, 7, 0, 0, 68, 7, 0, 0, 76, 7, 0, 0, 84, 7, 0, 0, 100, 7, 0, 0, 106, 7, 0, 0, 110, 7, 0, 0, 114, 7, 0, 0, 118, 7, 0, 0, 124, 7, 0, 0, 128, 7, 0, 0, 136, 7, 0, 0, 150, 7, 0, 0, 164, 7, 0, 0, 170, 7, 0, 0, 180, 7, 0, 0, 192, 7, 0, 0, 200, 7, 0, 0, 212, 7, 0, 0, 220, 7, 0, 0, 226, 7, 0, 0, 238, 7, 0, 0, 246, 7, 0, 0, 6, 8, 0, 0, 14, 8, 0, 0, 22, 8, 0, 0, 30, 8, 0, 0, 38, 8, 0, 0, 50, 8, 0, 0, 58, 8, 0, 0, 66, 8, 0, 0, 74, 8, 0, 0, 80, 8, 0, 0, 88, 8, 0, 0, 96, 8, 0, 0, 102, 8, 0, 0, 110, 8, 0, 0, 118, 8, 0, 0, 126, 8, 0, 0, 132, 8, 0, 0, 140, 8, 0, 0, 148, 8, 0, 0, 154, 8, 0, 0, 162, 8, 0, 0, 170, 8, 0, 0, 172, 8, 0, 0, 180, 8, 0, 0, 186, 8, 0, 0, 192, 8, 0, 0, 198, 8, 0, 0, 206, 8, 0, 0, 212, 8, 0, 0, 220, 8, 0, 0, 228, 8, 0, 0, 238, 8, 0, 0, 248, 8, 0, 0, 4, 9, 0, 0, 16, 9, 0, 0, 24, 9, 0, 0, 32, 9, 0, 0, 40, 9, 0, 0, 48, 9, 0, 0, 76, 9, 0, 0, 104, 9, 0, 0, 116, 9, 0, 0, 126, 9, 0, 0, 142, 9, 0, 0, 158, 9, 0, 0, 168, 9, 0, 0, 178, 9, 0, 0, 190, 9, 0, 0, 206, 9, 0, 0, 222, 9, 0, 0, 226, 9, 0, 0, 228, 9, 0, 0, 248, 9, 0, 0, 254, 9, 0, 0, 6, 10, 0, 0, 14, 10, 0, 0, 22, 10, 0, 0, 32, 10, 0, 0, 46, 10, 0, 0, 54, 10, 0, 0, 60, 10, 0, 0, 66, 10, 0, 0, 84, 10, 0, 0, 90, 10, 0, 0, 98, 10, 0, 0, 106, 10, 0, 0, 114, 10, 0, 0, 122, 10, 0, 0, 130, 10, 0, 0, 138, 10, 0, 0, 146, 10, 0, 0, 154, 10, 0, 0, 162, 10, 0, 0, 170, 10, 0, 0, 178, 10, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 58, 11, 0, 0, 186, 10, 0, 0, 194, 10, 0, 0, 202, 10, 0, 0, 208, 10, 0, 0, 214, 10, 0, 0, 211, 8, 163, 133, 136, 106, 63, 36, 68, 115, 112, 3, 46, 138, 25, 19, 208, 49, 159, 41, 34, 56, 9, 164, 137, 108, 78, 236, 152, 250, 46, 8, 82, 12, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 142, 2, 0, 0, 0, 0, 0, 0, 250, 11, 0, 0, 0, 0, 0, 0, 41, 32, 61, 32, 32, 112, 116, 115, 44, 32, 115, 61, 110, 116, 116, 40, 32, 105, 110, 32, 41, 32, 114, 61, 44, 32, 103, 61, 32, 61, 32, 40, 44, 32, 104, 61, 44, 32, 120, 61, 108, 99, 115, 40, 44, 32, 98, 61, 44, 32, 73, 61, 102, 105, 98, 32, 44, 32, 66, 61, 83, 111, 109, 101, 93, 32, 61, 32, 116, 114, 117, 101, 32, 195, 183, 32, 99, 108, 122, 61, 102, 32, 61, 32, 110, 111, 110, 101, 78, 111, 110, 101, 102, 105, 98, 40, 100, 116, 119, 40, 44, 32, 112, 61, 65, 67, 71, 84, 44, 32, 101, 61, 44, 32, 114, 61, 32, 32, 32, 32, 44, 32, 99, 61, 44, 32, 100, 61, 111, 114, 100, 95, 103, 99, 100, 40, 211, 8, 163, 133, 136, 106, 63, 36, 68, 115, 112, 3, 46, 138, 25, 19, 208, 49, 159, 41, 34, 56, 9, 164, 137, 108, 78, 236, 152, 250, 46, 8, 119, 19, 208, 56, 230, 33, 40, 69, 108, 12, 233, 52, 207, 102, 84, 190, 221, 80, 124, 201, 183, 41, 172, 192, 23, 9, 71, 181, 181, 213, 132, 63, 32, 115, 101, 110, 100, 101, 114, 61, 109, 111, 116, 122, 107, 105, 110, 40, 106, 97, 99, 111, 98, 105, 40, 32, 32, 117, 110, 114, 97, 110, 107, 61, 32, 97, 109, 111, 117, 110, 116, 61, 32, 112, 97, 114, 116, 115, 58, 32, 102, 105, 120, 95, 109, 117, 108, 61, 255, 255, 255, 255, 255, 255, 255, 255, 109, 111, 100, 95, 101, 120, 112, 40, 44, 32, 102, 110, 118, 49, 97, 61, 32, 114, 101, 115, 117, 108, 116, 61, 32, 115, 104, 97, 114, 101, 115, 61, 109, 97, 116, 95, 112, 111, 119, 40, 99, 105, 114, 99, 117, 105, 116, 61, 44, 32, 115, 105, 110, 226, 137, 136, 115, 117, 98, 95, 103, 99, 100, 40, 2, 0, 0, 0, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 0, 0, 159, 36, 0, 0, 0, 0, 0, 0, 18, 110, 0, 0, 0, 0, 0, 0, 215, 224, 6, 0, 0, 0, 0, 0, 24, 61, 149, 0, 0, 0, 0, 0, 254, 145, 1, 107, 0, 0, 0, 0, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 108, 117, 99, 97, 115, 40, 226, 5, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 116, 114, 105, 98, 111, 110, 97, 99, 99, 105, 40, 0, 0, 0, 0, 0, 8, 6, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 112, 101, 108, 108, 40, 0, 0, 0, 56, 6, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 115, 116, 105, 114, 108, 105, 110, 103, 49, 40, 0, 0, 0, 0, 0, 0, 96, 6, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 115, 116, 105, 114, 108, 105, 110, 103, 50, 40, 0, 0, 0, 0, 0, 0, 160, 6, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 66, 101, 108, 108, 40, 0, 0, 0, 224, 6, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 100, 101, 114, 97, 110, 103, 101, 109, 101, 110, 116, 32, 61, 32, 0, 0, 8, 7, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 19, 7, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 101, 117, 108, 101, 114, 105, 97, 110, 40, 0, 0, 0, 0, 0, 0, 0, 56, 7, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 110, 97, 114, 97, 121, 97, 110, 97, 40, 0, 0, 0, 0, 0, 0, 0, 120, 7, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 24, 5, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 41, 58, 32, 0, 0, 0, 0, 0, 112, 5, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 216, 7, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 112, 101, 114, 102, 101, 99, 116, 95, 109, 97, 116, 99, 104, 105, 110, 103, 115, 32, 61, 32, 0, 0, 0, 0, 0, 8, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 99, 104, 114, 111, 109, 97, 116, 105, 99, 95, 99, 111, 117, 110, 116, 40, 107, 61, 0, 0, 0, 0, 0, 0, 40, 8, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 115, 112, 97, 110, 110, 105, 110, 103, 95, 116, 114, 101, 101, 95, 99, 111, 117, 110, 116, 32, 61, 32, 0, 0, 96, 8, 1, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 44, 32, 112, 97, 116, 104, 61, 0, 120, 5, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 136, 8, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 116, 111, 112, 111, 95, 115, 111, 114, 116, 32, 61, 32, 0, 0, 0, 0, 176, 8, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 83, 67, 67, 115, 32, 61, 32, 0, 208, 8, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 98, 105, 112, 97, 114, 116, 105, 116, 101, 95, 109, 97, 116, 99, 104, 32, 61, 32, 0, 0, 0, 0, 0, 0, 232, 8, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 115, 116, 111, 101, 114, 95, 119, 97, 103, 110, 101, 114, 32, 61, 32, 0, 16, 9, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 109, 97, 116, 114, 105, 120, 95, 114, 97, 110, 107, 32, 109, 97, 116, 61, 105, 110, 116, 101, 103, 101, 114, 95, 108, 111, 103, 95, 100, 105, 118, 40, 110, 111, 116, 32, 105, 109, 112, 108, 101, 109, 101, 110, 116, 101, 100, 32, 109, 111, 100, 95, 101, 120, 112, 95, 115, 108, 105, 100, 105, 110, 103, 40, 105, 115, 95, 119, 105, 108, 115, 111, 110, 95, 112, 114, 105, 109, 101, 40, 105, 115, 95, 105, 115, 111, 109, 111, 114, 112, 104, 105, 99, 32, 61, 32, 105, 110, 116, 101, 103, 101, 114, 95, 108, 111, 103, 95, 109, 117, 108, 40, 99, 111, 105, 110, 95, 99, 104, 97, 110, 103, 101, 95, 109, 105, 110, 40, 109, 111, 110, 116, 95, 114, 101, 100, 117, 99, 101, 51, 50, 32, 61, 32, 32, 109, 97, 120, 105, 109, 97, 108, 32, 99, 108, 105, 113, 117, 101, 115, 114, 97, 98, 105, 110, 95, 100, 101, 99, 114, 121, 112, 116, 32, 109, 61, 128, 9, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 112, 105, 99, 107, 95, 116, 104, 101, 111, 114, 101, 109, 32, 32, 226, 134, 146, 32, 50, 97, 114, 101, 97, 61, 240, 9, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 253, 9, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 128, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 120, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 109, 97, 110, 104, 97, 116, 116, 97, 110, 40, 41, 61, 0, 0, 0, 0, 72, 10, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 71, 48, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 82, 10, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 99, 104, 101, 98, 121, 115, 104, 101, 118, 40, 0, 0, 0, 0, 0, 0, 136, 10, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 71, 48, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 82, 10, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 63, 32, 0, 0, 0, 0, 0, 0, 240, 47, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 88, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 200, 10, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 99, 111, 110, 118, 101, 120, 95, 104, 117, 108, 108, 61, 32, 226, 134, 146, 32, 104, 117, 108, 108, 61, 0, 0, 0, 11, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 12, 11, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 115, 101, 103, 109, 101, 110, 116, 115, 95, 105, 110, 116, 101, 114, 115, 101, 99, 116, 32, 45, 32, 226, 136, 169, 32, 0, 0, 0, 0, 0, 0, 0, 56, 11, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 75, 11, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 76, 11, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 75, 11, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 200, 10, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 102, 105, 108, 108, 101, 100, 32, 32, 99, 101, 108, 108, 115, 32, 102, 114, 111, 109, 32, 40, 0, 0, 0, 0, 168, 11, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 175, 11, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 71, 48, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 241, 47, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 115, 99, 97, 110, 108, 105, 110, 101, 95, 102, 105, 108, 108, 32, 111, 102, 32, 32, 226, 134, 146, 32, 32, 112, 105, 120, 101, 108, 115, 0, 0, 0, 0, 12, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 17, 12, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 22, 12, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 99, 111, 104, 101, 110, 95, 115, 117, 116, 104, 101, 114, 108, 97, 110, 100, 95, 99, 108, 105, 112, 32, 32, 99, 108, 105, 112, 112, 101, 100, 32, 116, 111, 32, 0, 0, 0, 0, 0, 0, 80, 12, 1, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 75, 11, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 102, 12, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 200, 10, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 109, 105, 100, 112, 111, 105, 110, 116, 95, 99, 105, 114, 99, 108, 101, 32, 64, 40, 0, 0, 0, 0, 0, 0, 184, 12, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 71, 48, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 92, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 17, 12, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 76, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 109, 101, 114, 103, 101, 95, 115, 111, 114, 116, 32, 0, 0, 0, 0, 0, 32, 13, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 113, 117, 105, 99, 107, 95, 115, 111, 114, 116, 32, 0, 0, 0, 0, 0, 64, 13, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 104, 101, 97, 112, 95, 115, 111, 114, 116, 32, 0, 0, 0, 0, 0, 0, 96, 13, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 99, 111, 117, 110, 116, 105, 110, 103, 95, 115, 111, 114, 116, 32, 0, 0, 128, 13, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 19, 7, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 114, 97, 100, 105, 120, 95, 115, 111, 114, 116, 32, 0, 0, 0, 0, 0, 176, 13, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 44, 32, 115, 117, 109, 40, 48, 46, 46, 61, 0, 0, 0, 0, 0, 0, 240, 47, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 208, 13, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 44, 32, 115, 117, 109, 40, 46, 46, 61, 0, 0, 0, 0, 0, 0, 0, 240, 47, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 14, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 22, 14, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 105, 115, 95, 113, 117, 97, 100, 114, 97, 116, 105, 99, 95, 114, 101, 115, 105, 100, 117, 101, 40, 0, 0, 0, 96, 14, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 99, 97, 114, 109, 105, 99, 104, 97, 101, 108, 40, 0, 0, 0, 0, 0, 168, 14, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 200, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 68, 48, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 112, 114, 105, 109, 105, 116, 105, 118, 101, 95, 114, 111, 111, 116, 40, 0, 8, 15, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 112, 9, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 115, 111, 108, 111, 118, 97, 121, 95, 115, 116, 114, 97, 115, 115, 101, 110, 40, 0, 0, 0, 0, 0, 0, 0, 88, 15, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 102, 101, 114, 109, 97, 116, 95, 102, 97, 99, 116, 111, 114, 40, 0, 0, 144, 15, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 116, 114, 105, 97, 108, 95, 100, 105, 118, 105, 115, 105, 111, 110, 95, 119, 104, 101, 101, 108, 40, 0, 0, 0, 192, 15, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 112, 111, 99, 107, 108, 105, 110, 103, 116, 111, 110, 40, 0, 0, 0, 0, 248, 15, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 115, 101, 99, 114, 101, 116, 61, 0, 40, 16, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 104, 5, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 108, 102, 115, 114, 32, 0, 0, 0, 80, 16, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 98, 98, 115, 95, 110, 101, 120, 116, 32, 0, 0, 0, 0, 0, 0, 0, 104, 16, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 111, 116, 112, 95, 101, 110, 99, 114, 121, 112, 116, 32, 109, 61, 32, 99, 61, 32, 100, 61, 0, 0, 0, 0, 136, 16, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 150, 16, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 153, 16, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 43, 226, 134, 146, 0, 0, 0, 0, 240, 47, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 208, 16, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 209, 16, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 209, 16, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 164, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 116, 115, 112, 95, 104, 101, 108, 100, 95, 107, 97, 114, 112, 32, 116, 111, 117, 114, 32, 99, 111, 115, 116, 32, 61, 32, 0, 0, 0, 0, 0, 0, 56, 17, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 98, 105, 110, 95, 112, 97, 99, 107, 105, 110, 103, 95, 102, 102, 100, 32, 61, 32, 0, 0, 0, 0, 0, 0, 104, 17, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 103, 114, 101, 101, 100, 121, 95, 99, 111, 108, 111, 114, 105, 110, 103, 32, 61, 32, 0, 0, 0, 0, 0, 0, 144, 17, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 99, 111, 118, 101, 114, 32, 101, 100, 103, 101, 115, 32, 61, 32, 0, 0, 184, 17, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 115, 116, 101, 105, 110, 101, 114, 95, 97, 112, 112, 114, 111, 120, 32, 32, 97, 112, 112, 114, 111, 120, 32, 99, 111, 115, 116, 61, 0, 0, 0, 0, 216, 17, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 231, 17, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 106, 111, 98, 115, 32, 32, 226, 134, 146, 32, 111, 114, 100, 101, 114, 32, 24, 18, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 29, 18, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 117, 110, 105, 111, 110, 32, 115, 105, 122, 101, 32, 61, 32, 0, 0, 0, 72, 18, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 98, 117, 114, 110, 115, 105, 100, 101, 95, 110, 101, 99, 107, 108, 97, 99, 101, 32, 100, 105, 115, 116, 105, 110, 99, 116, 32, 99, 111, 108, 111, 114, 105, 110, 103, 115, 32, 61, 32, 0, 104, 18, 1, 0, 0, 0, 0, 0, 39, 0, 0, 0, 0, 0, 0, 0, 114, 111, 111, 107, 95, 112, 111, 108, 121, 32, 110, 61, 0, 0, 0, 0, 160, 18, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 17, 12, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 112, 101, 114, 109, 97, 110, 101, 110, 116, 32, 61, 32, 0, 0, 0, 0, 208, 18, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 100, 101, 116, 32, 61, 32, 0, 0, 240, 18, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 121, 111, 117, 110, 103, 95, 116, 97, 98, 108, 101, 97, 117, 120, 32, 195, 151, 0, 0, 0, 0, 0, 0, 0, 8, 19, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 23, 19, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 17, 12, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 102, 114, 111, 98, 101, 110, 105, 117, 115, 40, 0, 0, 0, 0, 0, 0, 80, 19, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 112, 40, 41, 32, 109, 111, 100, 32, 144, 19, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 146, 19, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 19, 7, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 113, 95, 97, 110, 97, 108, 111, 103, 91, 93, 95, 0, 0, 0, 0, 0, 200, 19, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 209, 19, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 19, 7, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 206, 166, 95, 0, 0, 0, 0, 0, 8, 20, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 68, 48, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 152, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 82, 40, 41, 32, 105, 110, 32, 0, 80, 20, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 82, 20, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 110, 101, 103, 97, 116, 105, 118, 101, 32, 99, 121, 99, 108, 101, 32, 100, 101, 116, 101, 99, 116, 101, 100, 0, 136, 20, 1, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 98, 101, 108, 108, 109, 97, 110, 95, 102, 111, 114, 100, 32, 100, 105, 115, 116, 32, 102, 114, 111, 109, 32, 0, 176, 20, 1, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 19, 7, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 102, 108, 111, 121, 100, 95, 119, 97, 114, 115, 104, 97, 108, 108, 0, 0, 232, 20, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 103, 114, 97, 112, 104, 95, 100, 105, 97, 109, 101, 116, 101, 114, 32, 61, 32, 0, 0, 0, 0, 0, 0, 0, 8, 21, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 97, 114, 116, 105, 99, 117, 108, 97, 116, 105, 111, 110, 95, 112, 111, 105, 110, 116, 115, 32, 61, 32, 0, 0, 48, 21, 1, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 98, 114, 105, 100, 103, 101, 115, 32, 61, 32, 0, 0, 0, 0, 0, 0, 88, 21, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 98, 114, 111, 110, 95, 107, 101, 114, 98, 111, 115, 99, 104, 32, 0, 0, 120, 21, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 192, 9, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 103, 114, 101, 101, 100, 121, 95, 100, 111, 109, 105, 110, 97, 116, 105, 110, 103, 95, 115, 101, 116, 32, 61, 32, 168, 21, 1, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 103, 114, 97, 104, 97, 109, 95, 104, 117, 108, 108, 32, 61, 32, 0, 0, 208, 21, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 100, 105, 97, 109, 101, 116, 101, 114, 32, 61, 32, 0, 0, 0, 0, 0, 240, 21, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 116, 114, 105, 97, 110, 103, 117, 108, 97, 116, 101, 95, 99, 111, 110, 118, 101, 120, 32, 61, 32, 0, 0, 0, 16, 22, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 109, 105, 110, 107, 111, 119, 115, 107, 105, 95, 115, 117, 109, 32, 104, 117, 108, 108, 32, 61, 32, 0, 0, 0, 56, 22, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 86, 105, 115, 105, 98, 105, 108, 105, 116, 121, 71, 114, 97, 112, 104, 32, 101, 100, 103, 101, 115, 32, 61, 32, 96, 22, 1, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 115, 116, 114, 97, 115, 115, 101, 110, 95, 50, 120, 50, 32, 65, 61, 44, 32, 65, 120, 66, 61, 0, 0, 0, 136, 22, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 128, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 151, 22, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 103, 101, 114, 115, 104, 103, 111, 114, 105, 110, 95, 98, 111, 117, 110, 100, 115, 32, 109, 97, 116, 61, 44, 32, 98, 111, 117, 110, 100, 115, 61, 0, 208, 22, 1, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 230, 22, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 44, 32, 114, 97, 110, 107, 61, 0, 48, 9, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 16, 23, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 99, 111, 110, 100, 105, 116, 105, 111, 110, 95, 110, 117, 109, 98, 101, 114, 95, 50, 120, 50, 32, 65, 61, 32, 61, 0, 0, 0, 0, 0, 0, 0, 56, 23, 1, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 79, 23, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 115, 112, 109, 118, 32, 120, 61, 32, 226, 134, 146, 32, 121, 61, 0, 0, 120, 23, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 127, 23, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 115, 105, 110, 103, 117, 108, 97, 114, 95, 118, 97, 108, 117, 101, 95, 98, 111, 117, 110, 100, 115, 32, 65, 61, 32, 207, 131, 226, 136, 136, 91, 0, 168, 23, 1, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 192, 23, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 71, 48, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 73, 48, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 112, 111, 108, 108, 97, 114, 100, 95, 114, 104, 111, 95, 98, 114, 101, 110, 116, 32, 0, 0, 0, 0, 0, 0, 8, 24, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 79, 110, 101, 68, 82, 97, 110, 103, 101, 84, 114, 101, 101, 81, 117, 101, 114, 121, 32, 91, 93, 32, 226, 134, 146, 32, 0, 0, 0, 0, 0, 0, 48, 24, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 71, 48, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 68, 24, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 226, 134, 146, 99, 61, 0, 0, 0, 208, 9, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 128, 24, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 209, 16, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 109, 104, 95, 100, 101, 99, 114, 121, 112, 116, 32, 0, 0, 0, 0, 0, 184, 24, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 209, 16, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 209, 16, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 114, 101, 99, 95, 110, 116, 104, 32, 84, 40, 0, 0, 0, 0, 0, 0, 248, 24, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 82, 10, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 115, 111, 108, 118, 101, 95, 108, 105, 110, 101, 97, 114, 51, 32, 0, 0, 40, 25, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 107, 95, 115, 104, 111, 114, 116, 101, 115, 116, 32, 0, 0, 0, 0, 0, 72, 25, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 110, 111, 32, 102, 97, 99, 116, 111, 114, 0, 0, 0, 0, 0, 0, 0, 104, 25, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 99, 102, 95, 102, 97, 99, 116, 111, 114, 32, 102, 97, 99, 116, 111, 114, 58, 32, 0, 0, 0, 0, 0, 0, 136, 25, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 114, 115, 97, 95, 107, 101, 121, 103, 101, 110, 32, 110, 61, 0, 0, 0, 176, 25, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 180, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 196, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 101, 108, 103, 97, 109, 97, 108, 95, 107, 101, 121, 103, 101, 110, 32, 112, 61, 0, 0, 0, 0, 0, 0, 0, 240, 25, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 96, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 104, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 108, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 109, 61, 44, 32, 111, 107, 61, 0, 72, 26, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 184, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 80, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 74, 26, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 103, 102, 95, 99, 111, 101, 102, 102, 91, 0, 0, 0, 0, 0, 0, 0, 144, 26, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 136, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 108, 101, 103, 101, 110, 100, 114, 101, 95, 115, 121, 109, 98, 111, 108, 32, 40, 32, 47, 0, 0, 0, 0, 0, 192, 26, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 210, 26, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 108, 117, 99, 97, 115, 95, 108, 101, 104, 109, 101, 114, 32, 77, 95, 32, 105, 115, 32, 112, 114, 105, 109, 101, 63, 32, 0, 0, 0, 0, 0, 0, 8, 27, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 23, 27, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 108, 117, 99, 97, 115, 95, 115, 101, 113, 117, 101, 110, 99, 101, 32, 85, 95, 44, 86, 95, 32, 109, 111, 100, 32, 0, 0, 0, 0, 0, 0, 0, 72, 27, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 89, 27, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 92, 27, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 100, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 71, 48, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 241, 47, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 99, 108, 111, 115, 101, 115, 116, 95, 112, 97, 105, 114, 32, 44, 32, 99, 108, 111, 115, 101, 115, 116, 61, 44, 32, 100, 105, 115, 116, 194, 178, 61, 200, 27, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 213, 27, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 75, 11, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 223, 27, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 98, 97, 105, 108, 108, 105, 101, 95, 112, 115, 119, 32, 0, 0, 0, 0, 40, 28, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 23, 27, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 110, 101, 119, 116, 111, 110, 95, 115, 113, 114, 116, 32, 0, 0, 0, 0, 88, 28, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 19, 7, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 100, 101, 116, 95, 98, 97, 114, 101, 105, 115, 115, 95, 51, 120, 51, 32, 100, 101, 116, 32, 61, 32, 0, 0, 136, 28, 1, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 115, 109, 105, 116, 104, 95, 110, 111, 114, 109, 97, 108, 95, 102, 111, 114, 109, 95, 50, 120, 50, 32, 100, 105, 97, 103, 40, 0, 0, 0, 0, 0, 176, 28, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 241, 47, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 104, 101, 114, 109, 105, 116, 101, 95, 110, 111, 114, 109, 97, 108, 95, 102, 111, 114, 109, 95, 50, 120, 50, 32, 72, 32, 61, 32, 91, 91, 93, 44, 91, 93, 93, 0, 0, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 71, 48, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 30, 29, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 71, 48, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 33, 29, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 108, 108, 108, 95, 114, 101, 100, 117, 99, 101, 95, 50, 100, 32, 98, 49, 61, 44, 32, 98, 50, 61, 0, 0, 120, 29, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 137, 29, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 108, 111, 110, 103, 95, 100, 105, 118, 32, 44, 32, 114, 101, 109, 32, 0, 176, 29, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 144, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 19, 7, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 185, 29, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 98, 97, 114, 114, 101, 116, 116, 95, 100, 105, 118, 40, 0, 0, 0, 0, 0, 30, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 96, 9, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 109, 111, 100, 95, 101, 120, 112, 95, 108, 97, 100, 100, 101, 114, 40, 0, 128, 30, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 116, 111, 111, 109, 51, 95, 54, 52, 40, 0, 0, 0, 0, 0, 0, 0, 208, 30, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 115, 116, 101, 105, 110, 95, 103, 99, 100, 40, 0, 0, 0, 0, 0, 0, 16, 31, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 136, 5, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 240, 47, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 144, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 19, 7, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 144, 9, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 64, 9, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 105, 115, 95, 112, 101, 114, 102, 101, 99, 116, 95, 115, 113, 117, 97, 114, 101, 40, 0, 0, 0, 0, 0, 0, 16, 32, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 112, 101, 114, 102, 101, 99, 116, 95, 112, 111, 119, 101, 114, 40, 0, 0, 72, 32, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 102, 119, 104, 116, 32, 0, 0, 0, 120, 32, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 99, 111, 110, 116, 105, 110, 117, 101, 100, 95, 102, 114, 97, 99, 116, 105, 111, 110, 95, 99, 111, 110, 118, 101, 114, 103, 101, 110, 116, 115, 40, 0, 144, 32, 1, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 210, 26, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 102, 97, 114, 101, 121, 95, 115, 101, 113, 117, 101, 110, 99, 101, 40, 41, 32, 108, 101, 110, 103, 116, 104, 32, 61, 32, 0, 0, 0, 0, 0, 0, 224, 32, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 239, 32, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 111, 107, 61, 32, 112, 101, 114, 109, 61, 0, 0, 0, 0, 0, 0, 0, 32, 33, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 35, 33, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 32, 99, 111, 109, 98, 61, 0, 0, 32, 33, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 80, 33, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 112, 101, 114, 109, 61, 32, 114, 97, 110, 107, 61, 0, 0, 0, 0, 0, 120, 33, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 125, 33, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 40, 5, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 99, 111, 109, 98, 61, 0, 0, 0, 184, 33, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 125, 33, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 40, 5, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 144, 19, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 82, 10, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 110, 61, 0, 0, 0, 0, 0, 0, 16, 34, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 17, 12, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 56, 5, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 99, 111, 105, 110, 95, 99, 104, 97, 110, 103, 101, 95, 99, 111, 117, 110, 116, 40, 0, 0, 0, 0, 0, 0, 72, 34, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 82, 10, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 160, 9, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 82, 10, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 107, 110, 97, 112, 115, 97, 99, 107, 32, 99, 97, 112, 61, 44, 32, 119, 115, 61, 44, 32, 118, 115, 61, 32, 226, 134, 146, 32, 109, 97, 120, 61, 160, 34, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 173, 34, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 178, 34, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 183, 34, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 117, 110, 98, 111, 117, 110, 100, 101, 100, 95, 107, 110, 97, 112, 115, 97, 99, 107, 32, 99, 97, 112, 61, 0, 0, 35, 1, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 173, 34, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 178, 34, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 17, 12, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 112, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 108, 101, 118, 101, 110, 115, 104, 116, 101, 105, 110, 40, 0, 0, 0, 0, 136, 35, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 136, 35, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 100, 97, 109, 101, 114, 97, 117, 95, 108, 101, 118, 101, 110, 115, 104, 116, 101, 105, 110, 40, 0, 0, 0, 0, 232, 35, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 109, 97, 116, 114, 105, 120, 95, 99, 104, 97, 105, 110, 40, 41, 32, 226, 134, 146, 32, 0, 0, 0, 0, 0, 48, 36, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 61, 36, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 111, 112, 116, 105, 109, 97, 108, 95, 98, 115, 116, 32, 102, 114, 101, 113, 61, 0, 0, 0, 0, 0, 0, 0, 104, 36, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 17, 12, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 168, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 110, 101, 101, 100, 108, 101, 109, 97, 110, 95, 119, 117, 110, 115, 99, 104, 40, 0, 0, 0, 0, 0, 0, 0, 208, 36, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 115, 109, 105, 116, 104, 95, 119, 97, 116, 101, 114, 109, 97, 110, 40, 0, 24, 37, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 44, 32, 108, 99, 109, 61, 0, 0, 204, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 71, 48, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 82, 10, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 88, 37, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 44, 32, 109, 111, 100, 95, 105, 110, 118, 61, 0, 0, 0, 0, 0, 0, 80, 5, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 71, 48, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 71, 48, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 82, 10, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 160, 37, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 99, 114, 116, 50, 32, 61, 32, 0, 0, 38, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 103, 97, 114, 110, 101, 114, 32, 61, 32, 0, 0, 0, 0, 0, 0, 0, 24, 38, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 110, 116, 104, 95, 114, 111, 111, 116, 40, 0, 0, 0, 0, 0, 0, 0, 56, 38, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 71, 48, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 44, 32, 99, 116, 122, 61, 44, 32, 112, 111, 112, 99, 111, 117, 110, 116, 61, 44, 32, 112, 97, 114, 105, 116, 121, 61, 0, 0, 0, 0, 0, 0, 148, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 120, 38, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 126, 38, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 137, 38, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 114, 101, 118, 95, 98, 105, 116, 115, 61, 44, 32, 103, 114, 97, 121, 95, 101, 110, 99, 61, 44, 32, 103, 114, 97, 121, 95, 100, 101, 99, 61, 0, 216, 38, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 225, 38, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 236, 38, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 112, 114, 105, 109, 101, 115, 32, 117, 112, 32, 116, 111, 32, 49, 48, 48, 58, 32, 0, 0, 0, 0, 0, 0, 40, 39, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 102, 97, 99, 116, 40, 44, 32, 98, 105, 110, 111, 109, 105, 97, 108, 40, 44, 32, 99, 97, 116, 97, 108, 97, 110, 40, 0, 0, 0, 0, 0, 0, 80, 39, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 82, 10, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 85, 39, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 71, 48, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 82, 10, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 96, 39, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 82, 10, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 107, 97, 114, 97, 116, 115, 117, 98, 97, 40, 0, 0, 0, 0, 0, 0, 224, 39, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 109, 112, 95, 97, 100, 100, 61, 44, 32, 109, 112, 95, 115, 117, 98, 61, 44, 32, 109, 112, 95, 109, 117, 108, 95, 110, 97, 105, 118, 101, 61, 0, 32, 40, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 39, 40, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 48, 40, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 109, 111, 110, 116, 95, 109, 117, 108, 51, 50, 40, 0, 0, 0, 0, 0, 112, 40, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 44, 32, 98, 97, 114, 114, 101, 116, 116, 32, 61, 32, 0, 0, 0, 0, 176, 9, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 176, 40, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 84, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 97, 110, 103, 108, 101, 61, 32, 226, 134, 146, 32, 99, 111, 115, 226, 137, 136, 0, 0, 0, 0, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 6, 41, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 128, 5, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 44, 32, 102, 105, 120, 95, 100, 105, 118, 61, 0, 0, 0, 0, 0, 0, 64, 5, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 72, 41, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 108, 99, 103, 46, 110, 101, 120, 116, 40, 41, 32, 61, 32, 0, 0, 0, 120, 41, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 120, 111, 114, 115, 104, 105, 102, 116, 54, 52, 32, 61, 32, 0, 0, 0, 152, 41, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 112, 99, 103, 46, 110, 101, 120, 116, 40, 41, 32, 61, 32, 0, 0, 0, 184, 41, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 109, 119, 99, 46, 110, 101, 120, 116, 40, 41, 32, 61, 32, 0, 0, 0, 216, 41, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 99, 114, 99, 51, 50, 61, 44, 32, 97, 100, 108, 101, 114, 51, 50, 61, 44, 32, 109, 117, 114, 109, 117, 114, 51, 61, 44, 32, 106, 101, 110, 107, 105, 110, 115, 61, 0, 0, 0, 0, 248, 41, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 254, 41, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 88, 5, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 8, 42, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 18, 42, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 101, 117, 108, 101, 114, 84, 111, 116, 105, 101, 110, 116, 32, 112, 104, 105, 40, 0, 0, 0, 0, 0, 0, 0, 112, 42, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 108, 105, 110, 101, 97, 114, 95, 115, 105, 101, 118, 101, 32, 110, 61, 32, 35, 112, 114, 105, 109, 101, 115, 61, 168, 42, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 183, 42, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 64, 48, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 108, 105, 110, 101, 97, 114, 95, 109, 117, 32, 110, 61, 44, 32, 91, 110, 93, 61, 0, 0, 0, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 12, 43, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 83, 117, 109, 79, 102, 68, 105, 118, 105, 115, 111, 114, 115, 32, 115, 105, 103, 109, 97, 40, 0, 0, 0, 0, 56, 43, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 100, 105, 118, 105, 115, 111, 114, 95, 99, 111, 117, 110, 116, 40, 0, 0, 112, 43, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 109, 111, 98, 105, 117, 115, 40, 0, 160, 43, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 100, 105, 114, 105, 99, 104, 108, 101, 116, 95, 99, 111, 110, 118, 111, 108, 117, 116, 105, 111, 110, 32, 40, 49, 32, 42, 32, 105, 100, 41, 40, 0, 200, 43, 1, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 112, 105, 95, 116, 114, 105, 97, 108, 40, 0, 0, 0, 0, 0, 0, 0, 8, 44, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 32, 5, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 210, 26, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 156, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 32, 226, 134, 146, 32, 102, 97, 105, 108, 0, 0, 0, 0, 0, 0, 0, 16, 34, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 120, 44, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 32, 226, 134, 146, 32, 102, 97, 99, 116, 111, 114, 32, 0, 0, 0, 0, 16, 34, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 168, 44, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 115, 116, 101, 114, 110, 95, 98, 114, 111, 99, 111, 116, 95, 112, 97, 116, 104, 40, 0, 0, 0, 0, 0, 0, 216, 44, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 210, 26, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 105, 115, 95, 115, 116, 114, 111, 110, 103, 95, 108, 117, 99, 97, 115, 95, 112, 114, 112, 32, 0, 0, 0, 0, 32, 45, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 200, 10, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 115, 111, 108, 118, 101, 95, 113, 117, 97, 100, 114, 97, 116, 105, 99, 95, 109, 111, 100, 40, 97, 61, 0, 0, 88, 45, 1, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 116, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 192, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 172, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 109, 105, 115, 95, 98, 114, 117, 116, 101, 102, 111, 114, 99, 101, 32, 61, 32, 0, 0, 0, 0, 0, 0, 0, 192, 45, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 115, 101, 116, 95, 99, 111, 118, 101, 114, 95, 103, 114, 101, 101, 100, 121, 32, 61, 32, 0, 0, 0, 0, 0, 232, 45, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 80, 9, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 114, 117, 110, 95, 112, 114, 111, 103, 114, 97, 109, 32, 32, 103, 97, 115, 95, 117, 115, 101, 100, 32, 0, 0, 32, 46, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 44, 46, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 102, 105, 98, 78, 32, 110, 117, 109, 95, 115, 101, 103, 109, 101, 110, 116, 115, 61, 0, 0, 0, 0, 0, 0, 88, 46, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 124, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 96, 5, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 70, 73, 66, 32, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 58, 32, 116, 105, 109, 101, 115, 108, 111, 116, 61, 32, 115, 101, 114, 118, 105, 99, 101, 95, 105, 110, 100, 101, 120, 61, 32, 114, 101, 99, 101, 105, 118, 101, 114, 61, 32, 109, 101, 109, 111, 61, 32, 103, 97, 115, 95, 108, 105, 109, 105, 116, 61, 0, 0, 0, 0, 160, 46, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 186, 46, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 16, 5, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 201, 46, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 48, 5, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 211, 46, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 217, 46, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 70, 73, 66, 32, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 32, 103, 97, 115, 58, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 52, 41, 0, 0, 0, 88, 47, 1, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 113, 47, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 20, 12, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 22, 12, 0, 0, 0, 0, 0, 0, 28, 12, 0, 0, 0, 0, 0, 0, 36, 12, 0, 0, 0, 0, 0, 0, 0, 41, 0, 0, 0, 0, 0, 0, 240, 47, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 82, 12, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 84, 12, 0, 0, 0, 0, 0, 0, 90, 12, 0, 0, 0, 0, 0, 0, 94, 12, 0, 0, 0, 0, 0, 0, 44, 32, 44, 10, 40, 40, 10, 44, 10, 93, 48, 120, 48, 98, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 102, 97, 108, 115, 101, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 119, 114, 105, 116, 101, 95, 114, 101, 115, 117, 108, 116, 32, 107, 101, 121, 61, 44, 32, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 27, 50, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 44, 50, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0]
// RW data = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 235, 57, 12, 2, 231, 1, 233, 195, 88, 75, 252, 92, 228, 140, 100, 252, 128, 69, 38, 119, 143, 230, 252, 62, 81, 133, 15, 205, 157, 177, 149, 18, 213, 57, 90, 100, 2, 167, 47, 172, 60, 22, 159, 249, 186, 230, 130, 110, 237, 194, 201, 77, 201, 154, 183, 236, 96, 229, 251, 128, 0, 3, 15, 213, 76, 254, 61, 156, 41, 239, 199, 102, 170, 211, 211, 120, 30, 204, 156, 126, 208, 97, 108, 121, 159, 178, 236, 206, 224, 238, 24, 151, 201, 113, 163, 134, 245, 29, 211, 199, 14, 14, 188, 195, 5, 17, 17, 44, 125, 106, 0, 138, 100, 99, 200, 161, 187, 126, 232, 110, 104, 55, 135, 203, 250, 200, 58, 69, 22, 203, 68, 23, 227, 224, 33, 4, 225, 229, 162, 232, 28, 37, 43, 149, 238, 81, 37, 240, 241, 167, 202, 252, 49, 80, 19, 82, 108, 30, 1, 221, 31, 132, 147, 223, 172, 131, 100, 187, 96, 217, 132, 215, 110, 89, 160, 194, 34, 123, 18, 128, 80, 114, 37, 53, 233, 253, 163, 255, 49, 62, 68, 124, 254, 17, 50, 36, 88, 72, 180, 54, 247, 134, 62, 101, 32, 233, 199, 144, 157, 95, 29, 43, 172, 73, 24, 236, 38, 103, 147, 26, 210, 149, 82, 236, 204, 164, 23, 249, 235, 40, 130, 212, 44, 105, 83, 116, 210, 114, 22, 235, 64, 243, 41, 101, 103, 30, 82, 136, 67, 160, 100, 205, 47, 241, 197, 82, 7, 37, 207, 46, 87, 7, 107, 145, 23, 250, 252, 139, 168, 50, 199, 248, 135, 54, 142, 3, 182, 80, 107, 207, 28, 170, 153, 179, 155, 170, 185, 49, 84, 25, 225, 2, 92, 116, 244, 68, 84, 136, 21, 137, 106, 95, 118, 5, 95, 135, 87, 217, 202, 150, 70, 9, 229, 14, 141, 225, 96, 190, 220, 103, 170, 105, 215, 137, 92, 139, 141, 175, 140, 159, 150, 87, 133, 30, 240, 127, 2, 210, 254, 165, 189, 140, 148, 251, 116, 224, 196, 17, 92, 96, 130, 157, 1, 138, 139, 68, 91, 63, 13, 18, 98, 43, 234, 19, 38, 85, 255, 89, 183, 189, 101, 46, 38, 186, 197, 47, 31, 79, 204, 45, 214, 80, 124, 117, 179, 197, 29, 224, 189, 125, 15, 125, 65, 63, 231, 112, 161, 250, 178, 4, 72, 85, 74, 217, 70, 37, 221, 45, 96, 213, 61, 203, 198, 132, 253, 85, 122, 31, 127, 225, 155, 240, 205, 93, 15, 25, 157, 244, 3, 126, 75, 219, 200, 99, 23, 237, 152, 72, 251, 107, 61, 156, 129, 3, 192, 204, 158, 1, 180, 107, 126, 108, 2, 245, 57, 237, 229, 19, 147, 23, 246, 212, 211, 118, 223, 14, 126, 214, 223, 152, 60, 232, 142, 108, 66, 112, 236, 113, 83, 62, 136, 13, 139, 224, 182, 78, 67, 68, 232, 42, 69, 233, 166, 182, 23, 95, 200, 62, 196, 127, 211, 178, 211, 215, 30, 98, 100, 112, 255, 224, 139, 106, 207, 108, 47, 106, 190, 248, 49, 81, 245, 2, 19, 38, 79, 80, 99, 16, 3, 173, 152, 205, 86, 188, 148, 127, 130, 156, 51, 137, 129, 111, 6, 86, 100, 175, 163, 119, 16, 187, 66, 73, 47, 116, 51, 111, 179, 230, 50, 247, 245, 197, 56, 45, 89, 148, 177, 84, 129, 74, 37, 114, 197, 88, 150, 218, 87, 190, 10, 180, 167, 105, 165, 196, 95, 58, 209, 243, 214, 198, 125, 162, 175, 163, 204, 187, 196, 186, 151, 71, 221, 44, 129, 49, 238, 21, 3, 59, 75, 33, 0, 131, 62, 78, 64, 66, 158, 220, 240, 239, 20, 72, 191, 75, 228, 53, 171, 222, 209, 222, 254, 130, 219, 171, 118, 51, 39, 2, 230, 11, 189, 214, 222, 133, 19, 172, 214, 192, 188, 156, 109, 9, 26, 247, 123, 201, 119, 230, 124, 124, 213, 50, 74, 78, 107, 27, 5, 11, 106, 178, 249, 14, 169, 228, 31, 41, 112, 62, 169, 141, 153, 14, 145, 137, 216, 52, 28, 51, 143, 10, 44, 244, 137, 94, 72, 13, 148, 231, 211, 41, 176, 251, 221, 183, 111, 197, 209, 224, 145, 8, 215, 107, 225, 1, 68, 93, 230, 141, 49, 97, 73, 44, 151, 116, 42, 177, 175, 147, 134, 243, 252, 118, 246, 137, 62, 8, 127, 131, 88, 79, 23, 211, 120, 90, 193, 238, 131, 150, 100, 33, 179, 23, 2, 137, 228, 89, 161, 144, 81, 206, 221, 5, 198, 158, 122, 202, 226, 84, 124, 148, 166, 223, 94, 254, 49, 109, 212, 174, 211, 61, 176, 141, 62, 191, 240, 18, 118, 239, 223, 64, 209, 248, 47, 53, 44, 63, 34, 236, 169, 28, 147, 72, 152, 39, 28, 176, 165, 251, 77, 56, 51, 149, 42, 182, 124, 113, 30, 30, 27, 189, 174, 139, 14, 45, 114, 57, 46, 187, 230, 86, 186, 121, 92, 45, 86, 40, 155, 2, 229, 178, 139, 200, 34, 165, 58, 102, 101, 216, 94, 187, 7, 113, 18, 233, 18, 155, 185, 162, 17, 232, 49, 191, 11, 165, 3, 169, 126, 237, 33, 162, 50, 88, 148, 249, 67, 195, 3, 224, 234, 97, 176, 185, 15, 93, 75, 95, 92, 238, 23, 2, 203, 57, 213, 98, 8, 153, 151, 130, 51, 67, 33, 105, 201, 97, 80, 77, 137, 169, 249, 195, 123, 36, 255, 32, 77, 202, 186, 7, 149, 113, 75, 84, 88, 19, 130, 201, 93, 140, 114, 108, 177, 214, 82, 153, 170, 246, 145, 56, 28, 183, 171, 124, 92, 166, 252, 68, 168, 206, 4, 239, 113, 116, 138, 184, 207, 166, 8, 168, 26, 190, 26, 225, 166, 11, 207, 139, 106, 20, 231, 250, 119, 33, 207, 124, 204, 86, 19, 52, 189, 82, 60, 77, 26, 35, 43, 170, 249, 225, 72, 26, 213, 73, 173, 171, 109, 210, 76, 205, 70, 151, 37, 209, 130, 155, 183, 135, 26, 75, 20, 184, 107, 219, 198, 0, 250, 22, 164, 77, 135, 113, 183, 154, 208, 228, 11, 62, 138, 38, 137, 133, 209, 212, 18, 132, 203, 227, 251, 196, 36, 131, 228, 147, 56, 189, 180, 224, 210, 166, 8, 2, 131, 12, 233, 210, 80, 11, 233, 17, 6, 241, 118, 169, 170, 103, 129, 72, 224, 29, 113, 154, 203, 41, 149, 231, 24, 57, 191, 255, 75, 248, 185, 170, 245, 154, 31, 82, 171, 52, 7, 105, 196, 228, 74, 89, 175, 136, 28, 131, 37, 35, 146, 244, 2, 49, 147, 249, 22, 207, 194, 168, 81, 172, 136, 228, 75, 146, 85, 220, 194, 186, 83, 12, 126, 131, 96, 108, 21, 252, 119, 79, 11, 245, 46, 108, 105, 203, 218, 9, 86, 107, 129, 169, 244, 70, 229, 81, 3, 106, 98, 99, 207, 28, 145, 38, 112, 100, 90, 204, 159, 209, 106, 199, 71, 59, 208, 95, 39, 81, 55, 172, 204, 6, 165, 13, 113, 68, 79, 7, 18, 217, 44, 36, 242, 125, 75, 199, 66, 27, 6, 49, 61, 239, 40, 244, 172, 207, 47, 227, 47, 47, 141, 192, 204, 248, 224, 68, 184, 224, 62, 9, 239, 255, 219, 165, 143, 174, 232, 55, 87, 150, 63, 49, 251, 53, 205, 35, 154, 59, 7, 166, 59, 80, 0, 178, 177, 149, 191, 45, 104, 8, 39, 59, 59, 167, 251, 15, 187, 32, 159, 96, 252, 55, 204, 231, 4, 20, 168, 107, 150, 17, 165, 148, 188, 35, 22, 237, 93, 35, 200, 87, 252, 52, 8, 50, 0, 158, 112, 67, 11, 101, 78, 234, 213, 61, 163, 40, 14, 249, 77, 130, 88, 115, 145, 182, 117, 26, 183, 120, 121, 66, 10, 166, 100, 221, 148, 142, 119, 165, 49, 29, 183, 214, 25, 121, 126, 184, 224, 66, 13, 166, 122, 124, 98, 92, 86, 143, 162, 66, 176, 161, 156, 72, 189, 177, 50, 79, 240, 5, 245, 46, 167, 124, 205, 209, 139, 4, 63, 0, 142, 73, 145, 160, 206, 189, 186, 201, 167, 121, 220, 111, 228, 185, 193, 61, 173, 227, 254, 138, 173, 133, 200, 137, 177, 250, 99, 41, 122, 254, 189, 235, 139, 251, 255, 92, 156, 171, 217, 187, 54, 31, 83, 23, 225, 219, 122, 45, 252, 64, 177, 35, 118, 205, 48, 27, 64, 213, 119, 138, 182, 177, 27, 118, 30, 47, 245, 186, 71, 63, 35, 189, 129, 21, 188, 157, 247, 236, 184, 14, 36, 210, 188, 175, 75, 254, 33, 83, 236, 147, 175, 46, 35, 84, 219, 13, 240, 189, 114, 104, 253, 53, 49, 10, 127, 198, 187, 232, 247, 44, 255, 159, 2, 163, 98, 80, 79, 112, 45, 33, 88, 5, 102, 252, 193, 115, 125, 133, 187, 141, 172, 79, 58, 108, 162, 166, 36, 91, 50, 74, 42, 130, 29, 78, 90, 142, 197, 130, 222, 231, 233, 99, 100, 42, 181, 167, 224, 240, 237, 130, 243, 240, 78, 255, 118, 183, 107, 0, 206, 74, 82, 3, 249, 94, 72, 170, 197, 248, 170, 90, 217, 90, 245, 127, 186, 66, 128, 196, 108, 115, 170, 255, 238, 47, 7, 8, 181, 224, 10, 73, 18, 238, 52, 127, 209, 157, 213, 45, 209, 103, 209, 93, 45, 76, 16, 203, 8, 221, 112, 196, 13, 240, 217, 56, 14, 95, 87, 195, 160, 249, 58, 112, 85, 89, 229, 48, 232, 19, 7, 155, 163, 171, 102, 254, 192, 240, 208, 153, 71, 251, 110, 204, 80, 233, 201, 62, 170, 59, 151, 253, 1, 93, 20, 55, 119, 135, 83, 18, 190, 157, 219, 77, 77, 94, 115, 185, 232, 162, 172, 11, 194, 2, 121, 231, 26, 76, 184, 242, 62, 132, 196, 44, 75, 160, 234, 66, 115, 91, 162, 199, 19, 116, 211, 27, 87, 215, 2, 205, 73, 175, 34, 65, 20, 215, 139, 114, 21, 104, 22, 241, 51, 90, 35, 9, 75, 211, 217, 205, 219, 155, 173, 20, 117, 159, 98, 30, 104, 97, 13, 199, 17, 56, 243, 44, 234, 210, 175, 178, 35, 249, 2, 172, 184, 113, 22, 12, 0, 56, 228, 199, 168, 7, 194, 128, 136, 78, 161, 97, 37, 228, 201, 33, 90, 107, 3, 86, 78, 98, 205, 178, 120, 254, 57, 5, 78, 183, 130, 207, 225, 197, 230, 202, 3, 155, 132, 9, 36, 227, 136, 0, 185, 218, 93, 217, 152, 172, 87, 131, 65, 87, 237, 86, 91, 192, 109, 19, 48, 151, 115, 65, 217, 58, 194, 195, 173, 97, 70, 119, 169, 200, 63, 34, 214, 126, 146, 19, 149, 224, 55, 65, 63, 68, 66, 72, 119, 164, 222, 188, 56, 203, 123, 193, 46, 128, 195, 64, 137, 211, 35, 133, 204, 77, 214, 105, 78, 230, 219, 59, 26, 198, 75, 167, 65, 110, 24, 155, 81, 121, 100, 185, 200, 22, 137, 216, 108, 99, 200, 85, 170, 70, 233, 62, 44, 249, 201, 203, 135, 231, 140, 70, 220, 194, 109, 191, 204, 21, 185, 21, 149, 184, 134, 41, 206, 9, 2, 72, 242, 55, 236, 95, 23, 15, 136, 204, 116, 62, 223, 87, 111, 115, 4, 210, 169, 78, 136, 76, 211, 133, 113, 202, 5, 183, 190, 194, 54, 50, 49, 15, 100, 118, 33, 90, 24, 9, 106, 147, 215, 197, 0, 92, 6, 255, 87, 55, 120, 203, 232, 107, 38, 144, 150, 208, 241, 32, 176, 62, 5, 187, 227, 145, 67, 22, 33, 217, 24, 6, 171, 218, 85, 16, 203, 63, 10, 163, 237, 34, 220, 170, 216, 15, 151, 20, 182, 208, 165, 128, 246, 149, 182, 156, 162, 118, 179, 92, 230, 138, 254, 112, 105, 168, 221, 29, 242, 16, 140, 21, 78, 111, 53, 28, 44, 19, 228, 199, 112, 182, 227, 60, 58, 137, 62, 93, 58, 5, 94, 78, 226, 93, 192, 177, 79, 57, 149, 138, 88, 81, 92, 34, 185, 210, 31, 66, 27, 225, 192, 39, 74, 242, 26, 139, 193, 77, 109, 76, 117, 205, 217, 47, 95, 10, 230, 84, 200, 16, 135, 25, 235, 191, 65, 118, 146, 28, 184, 26, 27, 41, 162, 15, 47, 184, 224, 123, 175, 98, 122, 250, 240, 38, 23, 249, 113, 173, 227, 210, 115, 33, 96, 208, 202, 167, 84, 88, 194, 150, 65, 148, 40, 132, 102, 73, 164, 60, 230, 58, 9, 130, 167, 61, 134, 50, 203, 133, 69, 118, 87, 231, 50, 53, 150, 215, 217, 246, 123, 108, 192, 217, 243, 103, 183, 126, 136, 214, 139, 151, 231, 1, 147, 66, 67, 123, 15, 253, 232, 162, 188, 81, 251, 211, 174, 185, 34, 62, 181, 100, 115, 119, 246, 231, 12, 90, 90, 186, 88, 51, 57, 106, 202, 137, 18, 93, 205, 207, 89, 213, 228, 154, 176, 80, 218, 86, 179, 4, 64, 162, 223, 28, 75, 185, 12, 174, 8, 22, 41, 6, 182, 19, 158, 124, 99, 226, 235, 43, 109, 252, 57, 213, 137, 14, 9, 54, 13, 249, 188, 13, 255, 231, 84, 29, 135, 141, 1, 164, 129, 146, 110, 191, 242, 184, 160, 253, 180, 167, 90, 186, 15, 77, 2, 64, 155, 104, 13, 10, 237, 103, 245, 158, 206, 142, 89, 97, 235, 90, 24, 15, 124, 4, 21, 141, 194, 230, 108, 91, 94, 188, 20, 113, 80, 206, 252, 234, 51, 113, 178, 186, 60, 144, 19, 248, 212, 78, 127, 22, 138, 185, 141, 48, 202, 54, 102, 101, 157, 158, 165, 177, 176, 74, 133, 64, 62, 168, 192, 234, 83, 6, 77, 31, 179, 211, 82, 226, 3, 211, 247, 216, 93, 108, 140, 195, 215, 57, 126, 57, 106, 197, 230, 61, 204, 231, 31, 191, 94, 66, 13, 19, 43, 176, 129, 156, 50, 20, 248, 71, 196, 182, 64, 159, 106, 254, 11, 94, 119, 113, 15, 101, 47, 251, 77, 234, 140, 228, 134, 207, 255, 65, 120, 62, 191, 93, 169, 243, 100, 255, 54, 240, 27, 204, 103, 142, 68, 108, 99, 109, 16, 73, 210, 244, 254, 28, 254, 224, 85, 109, 201, 251, 68, 116, 19, 116, 32, 78, 134, 241, 111, 61, 79, 138, 171, 102, 41, 23, 50, 208, 30, 51, 132, 171, 236, 132, 255, 34, 31, 3, 174, 23, 248, 33, 195, 146, 118, 107, 43, 166, 179, 210, 111, 244, 43, 197, 40, 52, 50, 190, 83, 88, 54, 153, 24, 119, 165, 75, 229, 215, 108, 118, 33, 234, 92, 235, 87, 189, 126, 6, 98, 81, 95, 42, 223, 217, 127, 92, 123, 216, 142, 148, 48, 117, 151, 146, 91, 156, 45, 69, 231, 69, 167, 46, 70, 156, 112, 222, 98, 191, 232, 191, 203, 213, 208, 125, 238, 82, 188, 2, 164, 145, 35, 74, 119, 181, 196, 110, 24, 15, 239, 0, 189, 162, 60, 192, 74, 142, 222, 21, 175, 55, 216, 134, 246, 34, 202, 80, 186, 42, 1, 55, 45, 165, 156, 160, 99, 29, 3, 66, 47, 172, 187, 31, 80, 128, 169, 211, 235, 58, 198, 167, 81, 197, 177, 146, 153, 196, 233, 3, 67, 231, 216, 30, 150, 104, 47, 255, 60, 120, 0, 35, 247, 183, 26, 135, 14, 210, 107, 226, 59, 228, 233, 6, 188, 16, 223, 150, 222, 217, 69, 46, 30, 110, 88, 76, 200, 58, 64, 123, 9, 85, 10, 100, 94, 11, 26, 20, 78, 48, 218, 71, 68, 92, 178, 122, 17, 39, 46, 78, 167, 58, 43, 116, 88, 66, 165, 4, 182, 203, 208, 182, 63, 96, 80, 88, 215, 248, 103, 217, 198, 3, 62, 171, 204, 34, 105, 131, 72, 233, 228, 188, 55, 236, 101, 209, 129, 44, 230, 23, 13, 129, 145, 150, 30, 60, 222, 228, 228, 77, 203, 80, 247, 99, 175, 170, 241, 108, 177, 144, 67, 190, 176, 2, 149, 85, 104, 98, 217, 94, 184, 80, 221, 19, 121, 26, 50, 202, 207, 165, 31, 152, 17, 8, 43, 61, 32, 59, 246, 216, 209, 24, 207, 220, 144, 124, 94, 41, 41, 252, 230, 27, 108, 158, 163, 87, 93, 190, 58, 31, 187, 149, 166, 251, 228, 158, 166, 111, 135, 158, 91, 81, 26, 208, 202, 44, 4, 78, 249, 148, 232, 8, 132, 4, 72, 203, 180, 233, 38, 94, 91, 25, 9, 149, 195, 146, 34, 229, 134, 184, 149, 86, 119, 10, 139, 53, 153, 63, 181, 206, 0, 52, 205, 63, 21, 139, 175, 197, 43, 133, 254, 80, 154, 248, 104, 164, 7, 195, 251, 161, 12, 128, 108, 122, 109, 143, 186, 227, 75, 40, 233, 111, 105, 62, 50, 104, 33, 253, 89, 24, 198, 232, 124, 166, 216, 144, 159, 34, 38, 29, 33, 139, 96, 250, 83, 54, 165, 239, 178, 198, 255, 244, 70, 167, 164, 140, 129, 103, 217, 23, 24, 96, 89, 96, 88, 44, 117, 190, 242, 228, 180, 3, 188, 123, 21, 22, 108, 170, 154, 11, 227, 224, 166, 119, 218, 47, 28, 156, 89, 114, 89, 197, 251, 183, 3, 230, 63, 43, 165, 24, 248, 227, 98, 1, 55, 139, 232, 212, 228, 114, 41, 162, 93, 200, 247, 216, 243, 233, 254, 212, 71, 114, 141, 37, 207, 146, 228, 52, 146, 174, 10, 161, 214, 185, 142, 191, 106, 153, 145, 224, 40, 110, 135, 18, 117, 50, 91, 150, 249, 171, 24, 32, 165, 137, 173, 202, 164, 63, 158, 222, 137, 130, 81, 82, 70, 235, 214, 15, 183, 184, 77, 161, 116, 11, 209, 112, 160, 6, 43, 33, 197, 223, 8, 116, 61, 203, 87, 189, 146, 46, 9, 195, 103, 240, 120, 68, 48, 141, 18, 181, 25, 223, 236, 244, 75, 23, 244, 156, 95, 171, 203, 120, 133, 153, 50, 81, 82, 207, 132, 141, 136, 37, 21, 128, 106, 77, 95, 119, 156, 147, 50, 153, 70, 82, 178, 155, 52, 36, 249, 116, 245, 224, 234, 182, 13, 61, 177, 32, 85, 85, 63, 115, 89, 90, 60, 221, 212, 79, 175, 167, 206, 159, 106, 104, 125, 16, 159, 33, 106, 75, 159, 18, 198, 154, 175, 40, 199, 199, 29, 171, 244, 196, 31, 149, 148, 110, 150, 208, 240, 225, 161, 94, 136, 129, 70, 8, 183, 223, 10, 132, 164, 86, 183, 125, 228, 26, 10, 171, 199, 23, 106, 32, 171, 40, 246, 19, 213, 70, 172, 185, 25, 133, 255, 18, 162, 233, 249, 29, 253, 144, 212, 249, 155, 193, 162, 169, 192, 3, 91, 72, 197, 103, 243, 171, 165, 57, 152, 128, 5, 48, 154, 208, 14, 203, 160, 23, 210, 13, 19, 117, 224, 78, 184, 92, 99, 142, 92, 134, 7, 88, 122, 124, 46, 105, 28, 11, 92, 17, 66, 211, 52, 219, 117, 77, 239, 82, 161, 223, 247, 35, 71, 252, 61, 211, 79, 191, 143, 177, 218, 95, 216, 199, 75, 170, 56, 77, 151, 144, 11, 108, 3, 211, 153, 242, 187, 115, 28, 168, 130, 120, 82, 24, 198, 254, 126, 165, 40, 64, 65, 110, 222, 230, 17, 70, 63, 144, 86, 124, 195, 92, 38, 226, 123, 172, 123, 7, 253, 186, 241, 83, 1, 75, 188, 12, 153, 79, 201, 102, 36, 134, 156, 250, 64, 249, 90, 150, 219, 253, 163, 67, 169, 39, 159, 191, 131, 190, 178, 232, 152, 179, 110, 55, 166, 232, 80, 164, 106, 73, 199, 151, 121, 117, 108, 173, 219, 18, 73, 125, 155, 22, 2, 27, 195, 141, 103, 30, 36, 235, 37, 44, 84, 19, 117, 106, 176, 250, 252, 88, 48, 212, 10, 176, 54, 218, 195, 65, 84, 26, 36, 181, 56, 238, 214, 255, 247, 141, 208, 113, 210, 197, 56, 120, 233, 241, 37, 173, 139, 53, 215, 169, 94, 168, 137, 172, 218, 19, 199, 187, 96, 141, 63, 188, 236, 203, 214, 21, 244, 86, 5, 110, 147, 14, 247, 63, 65, 183, 108, 100, 121, 220, 157, 188, 11, 214, 51, 238, 220, 77, 28, 72, 232, 131, 250, 150, 207, 22, 254, 18, 119, 174, 167, 241, 159, 233, 28, 13, 195, 210, 110, 22, 154, 28, 31, 190, 3, 251, 20, 118, 83, 147, 93, 252, 155, 129, 234, 244, 152, 145, 98, 202, 119, 71, 133, 55, 96, 159, 19, 18, 36, 188, 244, 96, 177, 73, 149, 47, 103, 156, 2, 251, 78, 44, 84, 234, 212, 218, 51, 202, 249, 233, 39, 224, 148, 181, 71, 255, 56, 126, 65, 123, 183, 161, 34, 47, 209, 166, 226, 227, 60, 97, 89, 57, 65, 93, 180, 40, 19, 107, 168, 18, 97, 195, 57, 37, 7, 11, 200, 143, 79, 21, 162, 193, 182, 189, 118, 47, 107, 54, 143, 208, 142, 164, 235, 30, 225, 119, 166, 125, 173, 254, 230, 7, 24, 162, 167, 176, 44, 39, 1, 214, 95, 193, 93, 178, 88, 58, 199, 235, 0, 195, 195, 168, 67, 120, 162, 161, 67, 157, 53, 161, 20, 97, 185, 156, 133, 240, 101, 186, 111, 42, 79, 93, 207, 86, 109, 111, 69, 50, 144, 163, 2, 4, 99, 49, 136, 130, 67, 93, 61, 224, 239, 95, 159, 150, 93, 114, 35, 32, 53, 241, 144, 133, 231, 250, 0, 91, 198, 250, 84, 158, 147, 223, 191, 203, 15, 59, 247, 155, 48, 196, 94, 137, 71, 50, 197, 207, 252, 25, 171, 152, 220, 42, 223, 29, 40, 226, 180, 232, 252, 163, 7, 220, 169, 145, 4, 255, 116, 233, 204, 27, 0, 45, 6, 62, 225, 7, 88, 73, 18, 18, 223, 36, 173, 14, 20, 190, 212, 52, 220, 214, 240, 3, 147, 112, 38, 166, 249, 216, 29, 83, 30, 84, 161, 14, 242, 251, 63, 8, 222, 58, 10, 154, 12, 210, 251, 139, 198, 95, 108, 183, 228, 83, 228, 161, 20, 59, 241, 233, 122, 228, 151, 1, 37, 164, 250, 144, 67, 27, 253, 133, 236, 113, 164, 111, 121, 231, 101, 66, 132, 64, 229, 146, 72, 191, 110, 9, 48, 32, 254, 130, 84, 220, 232, 98, 129, 126, 97, 61, 73, 181, 115, 103, 78, 52, 195, 130, 94, 97, 78, 64, 70, 80, 204, 43, 116, 114, 128, 37, 86, 101, 214, 190, 138, 17, 197, 158, 7, 41, 76, 247, 44, 144, 175, 171, 156, 14, 49, 255, 248, 122, 160, 30, 250, 174, 66, 107, 28, 122, 6, 229, 193, 51, 242, 186, 186, 141, 56, 47, 151, 196, 191, 236, 44, 253, 18, 164, 250, 95, 136, 142, 200, 208, 153, 176, 116, 27, 134, 216, 10, 128, 54, 234, 200, 166, 137, 89, 247, 192, 74, 40, 41, 124, 242, 5, 43, 38, 137, 70, 33, 109, 245, 172, 229, 20, 100, 204, 121, 2, 209, 116, 10, 7, 15, 24, 49, 154, 13, 106, 58, 235, 162, 244, 150, 228, 125, 131, 34, 25, 231, 18, 86, 100, 2, 22, 51, 108, 127, 127, 49, 207, 31, 195, 86, 14, 57, 27, 98, 250, 154, 45, 118, 192, 52, 132, 166, 53, 224, 6, 137, 185, 206, 44, 180, 251, 140, 14, 94, 8, 214, 143, 60, 169, 9, 34, 31, 137, 226, 17, 38, 124, 1, 63, 40, 224, 69, 3, 189, 84, 139, 12, 242, 19, 244, 40, 8, 67, 129, 249, 236, 76, 45, 150, 227, 187, 142, 140, 244, 169, 127, 130, 157, 77, 214, 53, 100, 222, 213, 3, 152, 205, 46, 251, 29, 231, 204, 253, 192, 106, 30, 114, 143, 184, 62, 236, 95, 203, 175, 84, 146, 79, 196, 31, 2, 95, 97, 90, 244, 176, 179, 230, 134, 189, 129, 31, 169, 3, 100, 240, 66, 166, 140, 160, 148, 50, 120, 56, 237, 200, 76, 22, 18, 70, 12, 196, 133, 216, 142, 174, 2, 25, 58, 179, 227, 50, 22, 124, 135, 25, 109, 39, 247, 68, 36, 73, 57, 40, 27, 136, 65, 161, 104, 220, 6, 178, 180, 125, 68, 247, 234, 177, 195, 139, 15, 214, 125, 107, 93, 207, 42, 168, 47, 31, 232, 97, 137, 76, 8, 7, 73, 179, 111, 25, 103, 19, 214, 169, 130, 234, 70, 158, 142, 234, 233, 11, 104, 86, 116, 178, 92, 71, 125, 222, 71, 207, 13, 59, 112, 97, 81, 150, 65, 231, 31, 90, 9, 239, 148, 254, 23, 0, 55, 88, 136, 16, 156, 226, 55, 146, 48, 35, 207, 148, 45, 175, 82, 114, 77, 13, 173, 26, 120, 16, 36, 178, 86, 85, 85, 85, 85, 85, 85, 5, 86, 85, 85, 85, 85, 85, 85, 5, 86, 85, 85, 85, 85, 85, 85, 5, 86, 85, 85, 85, 85, 85, 85, 5, 29, 221, 108, 79, 145, 244, 69, 37, 195, 245, 40, 92, 143, 194, 245, 40, 29, 221, 108, 79, 145, 244, 69, 37, 195, 245, 40, 92, 143, 194, 245, 40, 29, 221, 108, 79, 145, 244, 69, 37, 11, 215, 163, 112, 61, 10, 215, 163, 29, 221, 108, 79, 145, 244, 69, 37, 25, 134, 97, 24, 134, 97, 24, 134, 29, 221, 108, 79, 145, 244, 69, 37, 29, 221, 108, 79, 145, 244, 69, 37, 207, 247, 83, 227, 165, 155, 196, 32, 29, 221, 108, 79, 145, 244, 69, 37, 29, 221, 108, 79, 145, 244, 69, 37, 75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128, 45, 127, 149, 76, 45, 244, 81, 88, 147, 36, 73, 146, 36, 73, 146, 36, 86, 85, 85, 85, 85, 85, 85, 5, 45, 127, 149, 76, 45, 244, 81, 88, 128, 128, 128, 128, 128, 128, 128, 128, 29, 221, 108, 79, 145, 244, 69, 37, 86, 85, 85, 85, 85, 85, 85, 85, 29, 221, 108, 79, 145, 244, 69, 37, 25, 134, 97, 24, 134, 97, 24, 134, 201, 66, 22, 178, 144, 133, 44, 100, 29, 221, 108, 79, 145, 244, 69, 37, 63, 0, 206, 215, 7, 192, 249, 250, 29, 221, 108, 79, 145, 244, 69, 37, 195, 0, 205, 88, 194, 34, 231, 129, 113, 250, 253, 231, 130, 210, 99, 129, 37, 82, 6, 207, 112, 63, 80, 131, 29, 221, 108, 79, 145, 244, 69, 37, 29, 221, 108, 79, 145, 244, 69, 37, 207, 247, 83, 227, 165, 155, 196, 32, 29, 221, 108, 79, 145, 244, 69, 37, 207, 247, 83, 227, 165, 155, 196, 32, 29, 221, 108, 79, 145, 244, 69, 37, 29, 221, 108, 79, 145, 244, 69, 37, 207, 247, 83, 227, 165, 155, 196, 32, 11, 215, 163, 112, 61, 10, 215, 163, 75, 89, 134, 56, 214, 197, 109, 52, 165, 128, 102, 16, 64, 10, 104, 6, 67, 120, 180, 113, 196, 90, 124, 10, 0, 160, 163, 155, 237, 41, 146, 190, 125, 63, 53, 94, 186, 73, 12, 2, 243, 187, 108, 107, 170, 43, 62, 5, 225, 229, 20, 188, 156, 130, 151, 83, 195, 245, 40, 92, 143, 194, 245, 40, 219, 52, 182, 215, 130, 222, 27, 67, 143, 227, 56, 142, 227, 56, 142, 227, 163, 147, 192, 124, 209, 197, 55, 134, 229, 174, 159, 45, 86, 134, 111, 68, 37, 82, 6, 207, 112, 63, 80, 131, 25, 134, 97, 24, 134, 97, 24, 134, 103, 102, 102, 102, 102, 102, 102, 102, 197, 78, 236, 196, 78, 236, 196, 78, 75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128, 115, 25, 54, 232, 241, 244, 152, 149, 210, 176, 74, 219, 62, 37, 15, 118, 211, 176, 74, 219, 62, 37, 15, 118, 0, 0, 24, 118, 251, 220, 56, 117, 253, 206, 97, 132, 17, 119, 204, 171, 87, 120, 19, 177, 47, 101, 165, 57, 129, 205, 149, 80, 195, 77, 66, 11, 51, 34, 212, 91, 2, 51, 47, 35, 191, 213, 237, 189, 206, 254, 230, 219, 219, 52, 182, 215, 130, 222, 27, 67, 93, 143, 194, 245, 40, 92, 143, 2, 75, 89, 134, 56, 214, 197, 109, 52, 195, 245, 40, 92, 143, 194, 245, 40, 185, 30, 133, 235, 81, 184, 30, 5, 241, 222, 188, 154, 120, 86, 52, 18]
// Instructions = 66228
// Code size = 205956 bytes

      :                          @0
     0: 28 cf f4 02 00           jump @13292
      :                          @1
     5: 28 aa f7 02 00           jump @13351
      :                          @2
    10: 28 02 fa 02              jump @13400
      :                          @3
    14: 95 11 f0                 sp = sp + 0xfffffffffffffff0
    17: 7b 15 08                 u64 [sp + 0x8] = s0
    20: 64 72                    t0 = a0
    22: 82 78 10                 a1 = u64 [a0 + 0x10]
    25: 82 74                    t2 = u64 [a0]
    27: 51 08 1f                 jump @8 if a1 == 0
      :                          @4
    30: 82 29 18                 a2 = u64 [t0 + 0x18]
    33: aa 98 68                 jump @17 if a1 == a2
      :                          @5
    36: 33 07                    a0 = 0
    38: c9 89 09                 a2 = a2 - a1
    41: 01                       fallthrough
      :                          @6
    42: 7c 8a                    a3 = u8 [a1]
    44: c8 a7 07                 a0 = a0 + a3
    47: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
    50: 95 88 01                 a1 = a1 + 0x1
    53: 52 09 f5                 jump @6 if a2 != 0
      :                          @7
    56: 28 05                    jump @9
      :                          @8
    58: 33 07                    a0 = 0
    60: 01                       fallthrough
      :                          @9
    61: 82 2a 20                 a3 = u64 [t0 + 0x20]
    64: 51 04 51                 jump @18 if t2 == 0
      :                          @10
    67: 82 28 08                 a1 = u64 [t0 + 0x8]
    70: aa 84 4b                 jump @18 if t2 == a1
      :                          @11
    73: 33 0b                    a4 = 0
    75: 14 09 ab aa aa aa aa aa aa aa a2 = 0xaaaaaaaaaaaaaaab
    85: c9 48 08                 a1 = a1 - t2
    88: d6 98 0c                 a5 = a1 mulhu a2
    91: 98 cc 04                 a5 = a5 >> 0x4
    94: 33 03 18                 t1 = 0x18
    97: 28 08                    jump @13
      :                          @12
    99: 95 bb 01                 a4 = a4 + 0x1
   102: aa cb 2b                 jump @18 if a4 == a5
      :                          @13
   105: ca 3b 09                 a2 = a4 * t1
   108: c8 49 09                 a2 = a2 + t2
   111: 82 98 10                 a1 = u64 [a2 + 0x10]
   114: 51 08 f1                 jump @12 if a1 == 0
      :                          @14
   117: 82 99 08                 a2 = u64 [a2 + 0x8]
   120: 01                       fallthrough
      :                          @15
   121: 7c 95                    s0 = u8 [a2]
   123: c8 57 07                 a0 = a0 + s0
   126: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
   129: 95 99 01                 a2 = a2 + 0x1
   132: 52 08 f5                 jump @15 if a1 != 0
      :                          @16
   135: 28 dc                    jump @12
      :                          @17
   137: 33 07                    a0 = 0
   139: 82 2a 20                 a3 = u64 [t0 + 0x20]
   142: 52 04 b5                 jump @10 if t2 != 0
      :                          @18
   145: 51 0a 1b                 jump @22 if a3 == 0
      :                          @19
   148: 82 28 28                 a1 = u64 [t0 + 0x28]
   151: aa 8a 15                 jump @22 if a3 == a1
      :                          @20
   154: c9 a8 08                 a1 = a1 - a3
   157: 01                       fallthrough
      :                          @21
   158: 7c a9                    a2 = u8 [a3]
   160: c8 97 07                 a0 = a0 + a2
   163: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
   166: 95 aa 01                 a3 = a3 + 0x1
   169: 52 08 f5                 jump @21 if a1 != 0
      :                          @22
   172: 82 15 08                 s0 = u64 [sp + 0x8]
   175: 95 11 10                 sp = sp + 0x10
   178: 32 00                    ret
      :                          @23
   180: 95 11 e0                 sp = sp + 0xffffffffffffffe0
   183: 7b 10 18                 u64 [sp + 0x18] = ra
   186: 7b 15 10                 u64 [sp + 0x10] = s0
   189: 7b 16 08                 u64 [sp + 0x8] = s1
   192: 64 72                    t0 = a0
   194: 82 79 10                 a2 = u64 [a0 + 0x10]
   197: 82 74                    t2 = u64 [a0]
   199: 51 09 29                 jump @28 if a2 == 0
      :                          @24
   202: 82 2a 18                 a3 = u64 [t0 + 0x18]
   205: aa a9 7c                 jump @37 if a2 == a3
      :                          @25
   208: 33 07                    a0 = 0
   210: c9 9a 0a                 a3 = a3 - a2
   213: 84 8b ff 00              a4 = a1 & 0xff
   217: 01                       fallthrough
      :                          @26
   218: 7c 9c                    a5 = u8 [a2]
   220: d3 bc 0c                 a5 = a5 ^ a4
   223: 88 cc 01                 a5 = a5 <u 0x1
   226: c8 c7 07                 a0 = a0 + a5
   229: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
   232: 95 99 01                 a2 = a2 + 0x1
   235: 52 0a ef                 jump @26 if a3 != 0
      :                          @27
   238: 28 05                    jump @29
      :                          @28
   240: 33 07                    a0 = 0
   242: 01                       fallthrough
      :                          @29
   243: 82 2b 20                 a4 = u64 [t0 + 0x20]
   246: 51 04 5b                 jump @38 if t2 == 0
      :                          @30
   249: 82 29 08                 a2 = u64 [t0 + 0x8]
   252: aa 94 55                 jump @38 if t2 == a2
      :                          @31
   255: 33 0c                    a5 = 0
   257: c9 49 09                 a2 = a2 - t2
   260: 14 0a ab aa aa aa aa aa aa aa a3 = 0xaaaaaaaaaaaaaaab
   270: d6 a9 09                 a2 = a2 mulhu a3
   273: 98 90 04                 ra = a2 >> 0x4
   276: 33 03 18                 t1 = 0x18
   279: 84 8a ff 00              a3 = a1 & 0xff
   283: 28 08                    jump @33
      :                          @32
   285: 95 cc 01                 a5 = a5 + 0x1
   288: aa 0c 31                 jump @38 if a5 == ra
      :                          @33
   291: ca 3c 06                 s1 = a5 * t1
   294: c8 46 06                 s1 = s1 + t2
   297: 82 65 10                 s0 = u64 [s1 + 0x10]
   300: 51 05 f1                 jump @32 if s0 == 0
      :                          @34
   303: 82 66 08                 s1 = u64 [s1 + 0x8]
   306: 01                       fallthrough
      :                          @35
   307: 7c 69                    a2 = u8 [s1]
   309: d3 a9 09                 a2 = a2 ^ a3
   312: 88 99 01                 a2 = a2 <u 0x1
   315: c8 97 07                 a0 = a0 + a2
   318: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
   321: 95 66 01                 s1 = s1 + 0x1
   324: 52 05 ef                 jump @35 if s0 != 0
      :                          @36
   327: 28 d6                    jump @32
      :                          @37
   329: 33 07                    a0 = 0
   331: 82 2b 20                 a4 = u64 [t0 + 0x20]
   334: 52 04 ab                 jump @30 if t2 != 0
      :                          @38
   337: 51 0b 25                 jump @42 if a4 == 0
      :                          @39
   340: 82 29 28                 a2 = u64 [t0 + 0x28]
   343: aa 9b 1f                 jump @42 if a4 == a2
      :                          @40
   346: c9 b9 09                 a2 = a2 - a4
   349: 84 88 ff 00              a1 = a1 & 0xff
   353: 01                       fallthrough
      :                          @41
   354: 7c ba                    a3 = u8 [a4]
   356: d3 8a 0a                 a3 = a3 ^ a1
   359: 88 aa 01                 a3 = a3 <u 0x1
   362: c8 a7 07                 a0 = a0 + a3
   365: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
   368: 95 bb 01                 a4 = a4 + 0x1
   371: 52 09 ef                 jump @41 if a2 != 0
      :                          @42
   374: 82 10 18                 ra = u64 [sp + 0x18]
   377: 82 15 10                 s0 = u64 [sp + 0x10]
   380: 82 16 08                 s1 = u64 [sp + 0x8]
   383: 95 11 20                 sp = sp + 0x20
   386: 32 00                    ret
      :                          @43 [@dyn 1]
   388: 95 11 b8                 sp = sp + 0xffffffffffffffb8
   391: 7b 10 40                 u64 [sp + 0x40] = ra
   394: 7b 15 38                 u64 [sp + 0x38] = s0
   397: 7b 16 30                 u64 [sp + 0x30] = s1
   400: 64 85                    s0 = a1
   402: 82 88 28                 a1 = u64 [a1 + 0x28]
   405: 82 76                    s1 = u64 [a0]
   407: 82 57 20                 a0 = u64 [s0 + 0x20]
   410: 82 8a 18                 a3 = u64 [a1 + 0x18]
   413: 33 08 f0 2f 01           a1 = 0x12ff0
   418: 33 09                    a2 = 0
   420: b4 a0 01 04              ra = 4, jump [a3]
      :                          @44 [@dyn 2]
   424: 7b 15 08                 u64 [sp + 0x8] = s0
   427: 78 17 10                 u8 [sp + 0x10] = a0
   430: 49 01                    u64 [sp + 0] = 0
   432: 33 05 01                 s0 = 0x1
   435: 78 15 11                 u8 [sp + 0x11] = s0
   438: 7b 16 18                 u64 [sp + 0x18] = s1
   441: 95 67 08                 a0 = s1 + 0x8
   444: 7b 17 20                 u64 [sp + 0x20] = a0
   447: 95 66 10                 s1 = s1 + 0x10
   450: 7b 16 28                 u64 [sp + 0x28] = s1
   453: 33 06 4e                 s1 = 0x4e
   456: 64 17                    a0 = sp
   458: 95 18 18                 a1 = sp + 0x18
   461: 33 09 4e                 a2 = 0x4e
   464: 50 10 06 c3 16 03        ra = 6, jump @13936
      :                          @45 [@dyn 3]
   470: 64 17                    a0 = sp
   472: 95 18 20                 a1 = sp + 0x20
   475: 64 69                    a2 = s1
   477: 50 10 08 b6 16 03        ra = 8, jump @13936
      :                          @46 [@dyn 4]
   483: 64 17                    a0 = sp
   485: 95 18 28                 a1 = sp + 0x28
   488: 64 69                    a2 = s1
   490: 50 10 0a a9 16 03        ra = 10, jump @13936
      :                          @47 [@dyn 5]
   496: 82 17                    a0 = u64 [sp]
   498: 7c 18 10                 a1 = u8 [sp + 0x10]
   501: 51 07 57                 jump @55 if a0 == 0
      :                          @48
   504: 52 08 57                 jump @56 if a1 != 0
      :                          @49
   507: 7c 18 11                 a1 = u8 [sp + 0x11]
   510: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   513: 8e 77                    a0 = a0 >u 0
   515: 82 16 08                 s1 = u64 [sp + 0x8]
   518: 88 88 01                 a1 = a1 <u 0x1
   521: d4 87 07                 a0 = a0 | a1
   524: 52 07 27                 jump @53 if a0 != 0
      :                          @50
   527: 7c 67 34                 a0 = u8 [s1 + 0x34]
   530: 84 77 04                 a0 = a0 & 0x4
   533: 52 07 1e                 jump @53 if a0 != 0
      :                          @51
   536: 82 68 28                 a1 = u64 [s1 + 0x28]
   539: 82 67 20                 a0 = u64 [s1 + 0x20]
   542: 82 8a 18                 a3 = u64 [a1 + 0x18]
   545: 33 08 47 30 01           a1 = 0x13047
   550: 33 09 01                 a2 = 0x1
   553: 33 05 01                 s0 = 0x1
   556: b4 a0 01 0c              ra = 12, jump [a3]
      :                          @52 [@dyn 6]
   560: 52 07 1f                 jump @56 if a0 != 0
      :                          @53
   563: 82 68 28                 a1 = u64 [s1 + 0x28]
   566: 82 67 20                 a0 = u64 [s1 + 0x20]
   569: 82 8a 18                 a3 = u64 [a1 + 0x18]
   572: 33 08 f1 2f 01           a1 = 0x12ff1
   577: 33 09 01                 a2 = 0x1
   580: b4 a0 01 0e              ra = 14, jump [a3]
      :                          @54 [@dyn 7]
   584: 64 75                    s0 = a0
   586: 28 05                    jump @56
      :                          @55
   588: 8e 85                    s0 = a1 >u 0
   590: 01                       fallthrough
      :                          @56
   591: 64 57                    a0 = s0
   593: 82 10 40                 ra = u64 [sp + 0x40]
   596: 82 15 38                 s0 = u64 [sp + 0x38]
   599: 82 16 30                 s1 = u64 [sp + 0x30]
   602: 95 11 48                 sp = sp + 0x48
   605: 32 00                    ret
      :                          @57 [@dyn 8]
   607: 95 11 c0                 sp = sp + 0xffffffffffffffc0
   610: 7b 10 38                 u64 [sp + 0x38] = ra
   613: 7b 15 30                 u64 [sp + 0x30] = s0
   616: 7b 16 28                 u64 [sp + 0x28] = s1
   619: 82 77                    a0 = u64 [a0]
   621: 64 86                    s1 = a1
   623: 82 88 28                 a1 = u64 [a1 + 0x28]
   626: 82 75 08                 s0 = u64 [a0 + 0x8]
   629: 82 77 10                 a0 = u64 [a0 + 0x10]
   632: 7b 17 08                 u64 [sp + 0x8] = a0
   635: 82 67 20                 a0 = u64 [s1 + 0x20]
   638: 82 8a 18                 a3 = u64 [a1 + 0x18]
   641: 33 08 08 30 01           a1 = 0x13008
   646: 33 09 01                 a2 = 0x1
   649: b4 a0 01 12              ra = 18, jump [a3]
      :                          @58 [@dyn 9]
   653: 7b 16 10                 u64 [sp + 0x10] = s1
   656: 82 16 08                 s1 = u64 [sp + 0x8]
   659: 78 17 18                 u8 [sp + 0x18] = a0
   662: 46 11 19                 u8 [sp + 25] = 0
   665: 51 06 30                 jump @63 if s1 == 0
      :                          @59
   668: 97 66 03                 s1 = s1 << 0x3
   671: 33 07 3a                 a0 = 0x3a
   674: 7b 17                    u64 [sp] = a0
   676: 01                       fallthrough
      :                          @60
   677: 95 57 08                 a0 = s0 + 0x8
   680: 7b 17 08                 u64 [sp + 0x8] = a0
   683: 7b 15 20                 u64 [sp + 0x20] = s0
   686: 95 17 10                 a0 = sp + 0x10
   689: 95 18 20                 a1 = sp + 0x20
   692: 82 19                    a2 = u64 [sp]
   694: 50 10 14 19 17 03        ra = 20, jump @13952
      :                          @61 [@dyn 10]
   700: 95 66 f8                 s1 = s1 + 0xfffffffffffffff8
   703: 82 15 08                 s0 = u64 [sp + 0x8]
   706: 52 06 e3                 jump @60 if s1 != 0
      :                          @62
   709: 7c 17 18                 a0 = u8 [sp + 0x18]
   712: 01                       fallthrough
      :                          @63
   713: 33 08 01                 a1 = 0x1
   716: 52 07 1e                 jump @66 if a0 != 0
      :                          @64
   719: 82 17 10                 a0 = u64 [sp + 0x10]
   722: 82 78 28                 a1 = u64 [a0 + 0x28]
   725: 82 77 20                 a0 = u64 [a0 + 0x20]
   728: 82 8a 18                 a3 = u64 [a1 + 0x18]
   731: 33 08 49 30 01           a1 = 0x13049
   736: 33 09 01                 a2 = 0x1
   739: b4 a0 01 16              ra = 22, jump [a3]
      :                          @65 [@dyn 11]
   743: 64 78                    a1 = a0
   745: 01                       fallthrough
      :                          @66
   746: 64 87                    a0 = a1
   748: 82 10 38                 ra = u64 [sp + 0x38]
   751: 82 15 30                 s0 = u64 [sp + 0x30]
   754: 82 16 28                 s1 = u64 [sp + 0x28]
   757: 95 11 40                 sp = sp + 0x40
   760: 32 00                    ret
      :                          @67 [@dyn 12]
   762: 95 11 c0                 sp = sp + 0xffffffffffffffc0
   765: 7b 10 38                 u64 [sp + 0x38] = ra
   768: 7b 15 30                 u64 [sp + 0x30] = s0
   771: 7b 16 28                 u64 [sp + 0x28] = s1
   774: 64 85                    s0 = a1
   776: 82 88 28                 a1 = u64 [a1 + 0x28]
   779: 82 76                    s1 = u64 [a0]
   781: 82 57 20                 a0 = u64 [s0 + 0x20]
   784: 82 8a 18                 a3 = u64 [a1 + 0x18]
   787: 33 08 f0 2f 01           a1 = 0x12ff0
   792: 33 09                    a2 = 0
   794: b4 a0 01 1a              ra = 26, jump [a3]
      :                          @68 [@dyn 13]
   798: 7b 15 08                 u64 [sp + 0x8] = s0
   801: 78 17 10                 u8 [sp + 0x10] = a0
   804: 49 01                    u64 [sp + 0] = 0
   806: 33 05 01                 s0 = 0x1
   809: 78 15 11                 u8 [sp + 0x11] = s0
   812: 7b 16 18                 u64 [sp + 0x18] = s1
   815: 95 66 10                 s1 = s1 + 0x10
   818: 7b 16 20                 u64 [sp + 0x20] = s1
   821: 33 06 2e                 s1 = 0x2e
   824: 64 17                    a0 = sp
   826: 95 18 18                 a1 = sp + 0x18
   829: 33 09 2e                 a2 = 0x2e
   832: 50 10 1c 53 15 03        ra = 28, jump @13936
      :                          @69 [@dyn 14]
   838: 64 17                    a0 = sp
   840: 95 18 20                 a1 = sp + 0x20
   843: 64 69                    a2 = s1
   845: 50 10 1e 46 15 03        ra = 30, jump @13936
      :                          @70 [@dyn 15]
   851: 82 17                    a0 = u64 [sp]
   853: 7c 18 10                 a1 = u8 [sp + 0x10]
   856: 51 07 57                 jump @78 if a0 == 0
      :                          @71
   859: 52 08 57                 jump @79 if a1 != 0
      :                          @72
   862: 7c 18 11                 a1 = u8 [sp + 0x11]
   865: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   868: 8e 77                    a0 = a0 >u 0
   870: 82 16 08                 s1 = u64 [sp + 0x8]
   873: 88 88 01                 a1 = a1 <u 0x1
   876: d4 87 07                 a0 = a0 | a1
   879: 52 07 27                 jump @76 if a0 != 0
      :                          @73
   882: 7c 67 34                 a0 = u8 [s1 + 0x34]
   885: 84 77 04                 a0 = a0 & 0x4
   888: 52 07 1e                 jump @76 if a0 != 0
      :                          @74
   891: 82 68 28                 a1 = u64 [s1 + 0x28]
   894: 82 67 20                 a0 = u64 [s1 + 0x20]
   897: 82 8a 18                 a3 = u64 [a1 + 0x18]
   900: 33 08 47 30 01           a1 = 0x13047
   905: 33 09 01                 a2 = 0x1
   908: 33 05 01                 s0 = 0x1
   911: b4 a0 01 20              ra = 32, jump [a3]
      :                          @75 [@dyn 16]
   915: 52 07 1f                 jump @79 if a0 != 0
      :                          @76
   918: 82 68 28                 a1 = u64 [s1 + 0x28]
   921: 82 67 20                 a0 = u64 [s1 + 0x20]
   924: 82 8a 18                 a3 = u64 [a1 + 0x18]
   927: 33 08 f1 2f 01           a1 = 0x12ff1
   932: 33 09 01                 a2 = 0x1
   935: b4 a0 01 22              ra = 34, jump [a3]
      :                          @77 [@dyn 17]
   939: 64 75                    s0 = a0
   941: 28 05                    jump @79
      :                          @78
   943: 8e 85                    s0 = a1 >u 0
   945: 01                       fallthrough
      :                          @79
   946: 64 57                    a0 = s0
   948: 82 10 38                 ra = u64 [sp + 0x38]
   951: 82 15 30                 s0 = u64 [sp + 0x30]
   954: 82 16 28                 s1 = u64 [sp + 0x28]
   957: 95 11 40                 sp = sp + 0x40
   960: 32 00                    ret
      :                          @80 [@dyn 18]
   962: 95 11 d0                 sp = sp + 0xffffffffffffffd0
   965: 7b 10 28                 u64 [sp + 0x28] = ra
   968: 7b 15 20                 u64 [sp + 0x20] = s0
   971: 7b 16 18                 u64 [sp + 0x18] = s1
   974: 64 86                    s1 = a1
   976: 82 88 28                 a1 = u64 [a1 + 0x28]
   979: 82 75                    s0 = u64 [a0]
   981: 82 67 20                 a0 = u64 [s1 + 0x20]
   984: 82 8a 18                 a3 = u64 [a1 + 0x18]
   987: 33 08 08 30 01           a1 = 0x13008
   992: 33 09 01                 a2 = 0x1
   995: b4 a0 01 26              ra = 38, jump [a3]
      :                          @81 [@dyn 19]
   999: 7b 16                    u64 [sp] = s1
  1001: 78 17 08                 u8 [sp + 0x8] = a0
  1004: 46 11 09                 u8 [sp + 9] = 0
  1007: 7b 15 10                 u64 [sp + 0x10] = s0
  1010: 33 06 4e                 s1 = 0x4e
  1013: 64 17                    a0 = sp
  1015: 95 18 10                 a1 = sp + 0x10
  1018: 33 09 4e                 a2 = 0x4e
  1021: 50 10 28 d2 15 03        ra = 40, jump @13952
      :                          @82 [@dyn 20]
  1027: 95 55 08                 s0 = s0 + 0x8
  1030: 7b 15 10                 u64 [sp + 0x10] = s0
  1033: 64 17                    a0 = sp
  1035: 95 18 10                 a1 = sp + 0x10
  1038: 64 69                    a2 = s1
  1040: 50 10 2a bf 15 03        ra = 42, jump @13952
      :                          @83 [@dyn 21]
  1046: 33 07 01                 a0 = 0x1
  1049: 7c 18 08                 a1 = u8 [sp + 0x8]
  1052: 52 08 1a                 jump @85 if a1 != 0
      :                          @84
  1055: 82 17                    a0 = u64 [sp]
  1057: 82 78 28                 a1 = u64 [a0 + 0x28]
  1060: 82 77 20                 a0 = u64 [a0 + 0x20]
  1063: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1066: 33 08 49 30 01           a1 = 0x13049
  1071: 33 09 01                 a2 = 0x1
  1074: b4 a0 01 2c              ra = 44, jump [a3]
      :                          @85 [@dyn 22]
  1078: 82 10 28                 ra = u64 [sp + 0x28]
  1081: 82 15 20                 s0 = u64 [sp + 0x20]
  1084: 82 16 18                 s1 = u64 [sp + 0x18]
  1087: 95 11 30                 sp = sp + 0x30
  1090: 32 00                    ret
      :                          @86 [@dyn 23]
  1092: 95 11 c0                 sp = sp + 0xffffffffffffffc0
  1095: 7b 10 38                 u64 [sp + 0x38] = ra
  1098: 7b 15 30                 u64 [sp + 0x30] = s0
  1101: 7b 16 28                 u64 [sp + 0x28] = s1
  1104: 64 85                    s0 = a1
  1106: 82 88 28                 a1 = u64 [a1 + 0x28]
  1109: 82 76                    s1 = u64 [a0]
  1111: 82 57 20                 a0 = u64 [s0 + 0x20]
  1114: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1117: 33 08 f0 2f 01           a1 = 0x12ff0
  1122: 33 09                    a2 = 0
  1124: b4 a0 01 30              ra = 48, jump [a3]
      :                          @87 [@dyn 24]
  1128: 7b 15 08                 u64 [sp + 0x8] = s0
  1131: 78 17 10                 u8 [sp + 0x10] = a0
  1134: 49 01                    u64 [sp + 0] = 0
  1136: 33 05 01                 s0 = 0x1
  1139: 78 15 11                 u8 [sp + 0x11] = s0
  1142: 7b 16 18                 u64 [sp + 0x18] = s1
  1145: 95 66 08                 s1 = s1 + 0x8
  1148: 7b 16 20                 u64 [sp + 0x20] = s1
  1151: 33 06 4e                 s1 = 0x4e
  1154: 64 17                    a0 = sp
  1156: 95 18 18                 a1 = sp + 0x18
  1159: 33 09 4e                 a2 = 0x4e
  1162: 50 10 32 09 14 03        ra = 50, jump @13936
      :                          @88 [@dyn 25]
  1168: 64 17                    a0 = sp
  1170: 95 18 20                 a1 = sp + 0x20
  1173: 64 69                    a2 = s1
  1175: 50 10 34 fc 13 03        ra = 52, jump @13936
      :                          @89 [@dyn 26]
  1181: 82 17                    a0 = u64 [sp]
  1183: 7c 18 10                 a1 = u8 [sp + 0x10]
  1186: 51 07 57                 jump @97 if a0 == 0
      :                          @90
  1189: 52 08 57                 jump @98 if a1 != 0
      :                          @91
  1192: 7c 18 11                 a1 = u8 [sp + 0x11]
  1195: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  1198: 8e 77                    a0 = a0 >u 0
  1200: 82 16 08                 s1 = u64 [sp + 0x8]
  1203: 88 88 01                 a1 = a1 <u 0x1
  1206: d4 87 07                 a0 = a0 | a1
  1209: 52 07 27                 jump @95 if a0 != 0
      :                          @92
  1212: 7c 67 34                 a0 = u8 [s1 + 0x34]
  1215: 84 77 04                 a0 = a0 & 0x4
  1218: 52 07 1e                 jump @95 if a0 != 0
      :                          @93
  1221: 82 68 28                 a1 = u64 [s1 + 0x28]
  1224: 82 67 20                 a0 = u64 [s1 + 0x20]
  1227: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1230: 33 08 47 30 01           a1 = 0x13047
  1235: 33 09 01                 a2 = 0x1
  1238: 33 05 01                 s0 = 0x1
  1241: b4 a0 01 36              ra = 54, jump [a3]
      :                          @94 [@dyn 27]
  1245: 52 07 1f                 jump @98 if a0 != 0
      :                          @95
  1248: 82 68 28                 a1 = u64 [s1 + 0x28]
  1251: 82 67 20                 a0 = u64 [s1 + 0x20]
  1254: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1257: 33 08 f1 2f 01           a1 = 0x12ff1
  1262: 33 09 01                 a2 = 0x1
  1265: b4 a0 01 38              ra = 56, jump [a3]
      :                          @96 [@dyn 28]
  1269: 64 75                    s0 = a0
  1271: 28 05                    jump @98
      :                          @97
  1273: 8e 85                    s0 = a1 >u 0
  1275: 01                       fallthrough
      :                          @98
  1276: 64 57                    a0 = s0
  1278: 82 10 38                 ra = u64 [sp + 0x38]
  1281: 82 15 30                 s0 = u64 [sp + 0x30]
  1284: 82 16 28                 s1 = u64 [sp + 0x28]
  1287: 95 11 40                 sp = sp + 0x40
  1290: 32 00                    ret
      :                          @99 [@dyn 29]
  1292: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  1296: 7b 10 80 00              u64 [sp + 0x80] = ra
  1300: 64 82                    t0 = a1
  1302: 80 88 34                 a1 = u32 [a1 + 0x34]
  1305: 82 77                    a0 = u64 [a0]
  1307: 84 89 10                 a2 = a1 & 0x10
  1310: 52 09 1c                 jump @102 if a2 != 0
      :                          @100
  1313: 84 88 20                 a1 = a1 & 0x20
  1316: 52 08 46                 jump @105 if a1 != 0
      :                          @101
  1319: 82 77                    a0 = u64 [a0]
  1321: 33 08 01                 a1 = 0x1
  1324: 64 29                    a2 = t0
  1326: 82 10 80 00              ra = u64 [sp + 0x80]
  1330: 95 11 88 00              sp = sp + 0x88
  1334: 28 48 07 03              jump @13704
      :                          @102
  1338: 82 7a                    a3 = u64 [a0]
  1340: 33 08 81 00              a1 = 0x81
  1344: 95 17 7f                 a0 = sp + 0x7f
  1347: 33 03 57                 t1 = 0x57
  1350: 01                       fallthrough
      :                          @103
  1351: 64 8b                    a4 = a1
  1353: 98 ac 04                 a5 = a3 >> 0x4
  1356: 84 aa 0f                 a3 = a3 & 0xf
  1359: 88 a8 0a                 a1 = a3 <u 0xa
  1362: 33 09 30                 a2 = 0x30
  1365: da 83 09                 a2 = t1 if a1 == 0
  1368: be a9 09                 i32 a2 = a2 + a3
  1371: 78 79                    u8 [a0] = a2
  1373: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  1376: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
  1379: 64 ca                    a3 = a5
  1381: 52 0c e2                 jump @103 if a5 != 0
      :                          @104
  1384: 28 30                    jump @107
      :                          @105
  1386: 82 7a                    a3 = u64 [a0]
  1388: 33 08 81 00              a1 = 0x81
  1392: 95 17 7f                 a0 = sp + 0x7f
  1395: 33 03 37                 t1 = 0x37
  1398: 01                       fallthrough
      :                          @106
  1399: 64 8b                    a4 = a1
  1401: 98 ac 04                 a5 = a3 >> 0x4
  1404: 84 aa 0f                 a3 = a3 & 0xf
  1407: 88 a8 0a                 a1 = a3 <u 0xa
  1410: 33 09 30                 a2 = 0x30
  1413: da 83 09                 a2 = t1 if a1 == 0
  1416: be a9 09                 i32 a2 = a2 + a3
  1419: 78 79                    u8 [a0] = a2
  1421: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  1424: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
  1427: 64 ca                    a3 = a5
  1429: 52 0c e2                 jump @106 if a5 != 0
      :                          @107
  1432: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
  1435: 56 27 80 00 2b           jump @110 if a0 >u 128
      :                          @108
  1440: 9a 8c 81 00              a5 = 0x81 - a1
  1444: 64 1b                    a4 = sp
  1446: c8 7b 0b                 a4 = a4 + a0
  1449: 33 09 4a 30 01           a2 = 0x1304a
  1454: 33 08 01                 a1 = 0x1
  1457: 33 0a 02                 a3 = 0x2
  1460: 64 27                    a0 = t0
  1462: 50 10 3c f6 07 03        ra = 60, jump @13714
      :                          @109 [@dyn 30]
  1468: 82 10 80 00              ra = u64 [sp + 0x80]
  1472: 95 11 88 00              sp = sp + 0x88
  1476: 32 00                    ret
      :                          @110
  1478: 00                       trap
      :                          @111 [@dyn 31]
  1479: 95 11 c0                 sp = sp + 0xffffffffffffffc0
  1482: 7b 10 38                 u64 [sp + 0x38] = ra
  1485: 7b 15 30                 u64 [sp + 0x30] = s0
  1488: 7b 16 28                 u64 [sp + 0x28] = s1
  1491: 64 85                    s0 = a1
  1493: 82 88 28                 a1 = u64 [a1 + 0x28]
  1496: 82 76                    s1 = u64 [a0]
  1498: 82 57 20                 a0 = u64 [s0 + 0x20]
  1501: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1504: 33 08 f0 2f 01           a1 = 0x12ff0
  1509: 33 09                    a2 = 0
  1511: b4 a0 01 40              ra = 64, jump [a3]
      :                          @112 [@dyn 32]
  1515: 7b 15 08                 u64 [sp + 0x8] = s0
  1518: 78 17 10                 u8 [sp + 0x10] = a0
  1521: 49 01                    u64 [sp + 0] = 0
  1523: 33 05 01                 s0 = 0x1
  1526: 78 15 11                 u8 [sp + 0x11] = s0
  1529: 7b 16 18                 u64 [sp + 0x18] = s1
  1532: 95 66 08                 s1 = s1 + 0x8
  1535: 7b 16 20                 u64 [sp + 0x20] = s1
  1538: 33 06 3a                 s1 = 0x3a
  1541: 64 17                    a0 = sp
  1543: 95 18 18                 a1 = sp + 0x18
  1546: 33 09 3a                 a2 = 0x3a
  1549: 50 10 42 86 12 03        ra = 66, jump @13936
      :                          @113 [@dyn 33]
  1555: 64 17                    a0 = sp
  1557: 95 18 20                 a1 = sp + 0x20
  1560: 64 69                    a2 = s1
  1562: 50 10 44 79 12 03        ra = 68, jump @13936
      :                          @114 [@dyn 34]
  1568: 82 17                    a0 = u64 [sp]
  1570: 7c 18 10                 a1 = u8 [sp + 0x10]
  1573: 51 07 57                 jump @122 if a0 == 0
      :                          @115
  1576: 52 08 57                 jump @123 if a1 != 0
      :                          @116
  1579: 7c 18 11                 a1 = u8 [sp + 0x11]
  1582: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  1585: 8e 77                    a0 = a0 >u 0
  1587: 82 16 08                 s1 = u64 [sp + 0x8]
  1590: 88 88 01                 a1 = a1 <u 0x1
  1593: d4 87 07                 a0 = a0 | a1
  1596: 52 07 27                 jump @120 if a0 != 0
      :                          @117
  1599: 7c 67 34                 a0 = u8 [s1 + 0x34]
  1602: 84 77 04                 a0 = a0 & 0x4
  1605: 52 07 1e                 jump @120 if a0 != 0
      :                          @118
  1608: 82 68 28                 a1 = u64 [s1 + 0x28]
  1611: 82 67 20                 a0 = u64 [s1 + 0x20]
  1614: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1617: 33 08 47 30 01           a1 = 0x13047
  1622: 33 09 01                 a2 = 0x1
  1625: 33 05 01                 s0 = 0x1
  1628: b4 a0 01 46              ra = 70, jump [a3]
      :                          @119 [@dyn 35]
  1632: 52 07 1f                 jump @123 if a0 != 0
      :                          @120
  1635: 82 68 28                 a1 = u64 [s1 + 0x28]
  1638: 82 67 20                 a0 = u64 [s1 + 0x20]
  1641: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1644: 33 08 f1 2f 01           a1 = 0x12ff1
  1649: 33 09 01                 a2 = 0x1
  1652: b4 a0 01 48              ra = 72, jump [a3]
      :                          @121 [@dyn 36]
  1656: 64 75                    s0 = a0
  1658: 28 05                    jump @123
      :                          @122
  1660: 8e 85                    s0 = a1 >u 0
  1662: 01                       fallthrough
      :                          @123
  1663: 64 57                    a0 = s0
  1665: 82 10 38                 ra = u64 [sp + 0x38]
  1668: 82 15 30                 s0 = u64 [sp + 0x30]
  1671: 82 16 28                 s1 = u64 [sp + 0x28]
  1674: 95 11 40                 sp = sp + 0x40
  1677: 32 00                    ret
      :                          @124 [@dyn 37]
  1679: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  1683: 7b 10 80 00              u64 [sp + 0x80] = ra
  1687: 64 82                    t0 = a1
  1689: 80 88 34                 a1 = u32 [a1 + 0x34]
  1692: 82 77                    a0 = u64 [a0]
  1694: 84 89 10                 a2 = a1 & 0x10
  1697: 52 09 1c                 jump @127 if a2 != 0
      :                          @125
  1700: 84 88 20                 a1 = a1 & 0x20
  1703: 52 08 47                 jump @130 if a1 != 0
      :                          @126
  1706: 7c 77                    a0 = u8 [a0]
  1708: 33 08 01                 a1 = 0x1
  1711: 64 29                    a2 = t0
  1713: 82 10 80 00              ra = u64 [sp + 0x80]
  1717: 95 11 88 00              sp = sp + 0x88
  1721: 28 c5 05 03              jump @13704
      :                          @127
  1725: 7c 77                    a0 = u8 [a0]
  1727: 33 0a 81 00              a3 = 0x81
  1731: 95 18 7f                 a1 = sp + 0x7f
  1734: 33 03 57                 t1 = 0x57
  1737: 01                       fallthrough
      :                          @128
  1738: 64 ab                    a4 = a3
  1740: 84 7a 0f                 a3 = a0 & 0xf
  1743: 97 77 38                 a0 = a0 << 0x38
  1746: 98 77 3c                 a0 = a0 >> 0x3c
  1749: 88 ac 0a                 a5 = a3 <u 0xa
  1752: 33 09 30                 a2 = 0x30
  1755: da c3 09                 a2 = t1 if a5 == 0
  1758: be a9 09                 i32 a2 = a2 + a3
  1761: 78 89                    u8 [a1] = a2
  1763: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  1766: 95 ba ff                 a3 = a4 + 0xffffffffffffffff
  1769: 52 07 e1                 jump @128 if a0 != 0
      :                          @129
  1772: 28 31                    jump @132
      :                          @130
  1774: 7c 77                    a0 = u8 [a0]
  1776: 33 0a 81 00              a3 = 0x81
  1780: 95 18 7f                 a1 = sp + 0x7f
  1783: 33 03 37                 t1 = 0x37
  1786: 01                       fallthrough
      :                          @131
  1787: 64 ab                    a4 = a3
  1789: 84 7a 0f                 a3 = a0 & 0xf
  1792: 97 77 38                 a0 = a0 << 0x38
  1795: 98 77 3c                 a0 = a0 >> 0x3c
  1798: 88 ac 0a                 a5 = a3 <u 0xa
  1801: 33 09 30                 a2 = 0x30
  1804: da c3 09                 a2 = t1 if a5 == 0
  1807: be a9 09                 i32 a2 = a2 + a3
  1810: 78 89                    u8 [a1] = a2
  1812: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  1815: 95 ba ff                 a3 = a4 + 0xffffffffffffffff
  1818: 52 07 e1                 jump @131 if a0 != 0
      :                          @132
  1821: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
  1824: 56 27 80 00 2b           jump @135 if a0 >u 128
      :                          @133
  1829: 9a ac 81 00              a5 = 0x81 - a3
  1833: 64 1b                    a4 = sp
  1835: c8 7b 0b                 a4 = a4 + a0
  1838: 33 09 4a 30 01           a2 = 0x1304a
  1843: 33 08 01                 a1 = 0x1
  1846: 33 0a 02                 a3 = 0x2
  1849: 64 27                    a0 = t0
  1851: 50 10 4c 71 06 03        ra = 76, jump @13714
      :                          @134 [@dyn 38]
  1857: 82 10 80 00              ra = u64 [sp + 0x80]
  1861: 95 11 88 00              sp = sp + 0x88
  1865: 32 00                    ret
      :                          @135
  1867: 00                       trap
      :                          @136 [@dyn 39]
  1868: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  1872: 7b 10 80 00              u64 [sp + 0x80] = ra
  1876: 64 82                    t0 = a1
  1878: 80 88 34                 a1 = u32 [a1 + 0x34]
  1881: 82 77                    a0 = u64 [a0]
  1883: 84 89 10                 a2 = a1 & 0x10
  1886: 52 09 24                 jump @139 if a2 != 0
      :                          @137
  1889: 84 88 20                 a1 = a1 & 0x20
  1892: 52 08 4e                 jump @142 if a1 != 0
      :                          @138
  1895: 82 78                    a1 = u64 [a0]
  1897: 9a 87                    a0 = -a1
  1899: e3 78 07                 a0 = maxs(a1, a0)
  1902: 85 88 ff                 a1 = a1 ^ 0xffffffffffffffff
  1905: 98 88 3f                 a1 = a1 >> 0x3f
  1908: 64 29                    a2 = t0
  1910: 82 10 80 00              ra = u64 [sp + 0x80]
  1914: 95 11 88 00              sp = sp + 0x88
  1918: 28 00 05 03              jump @13704
      :                          @139
  1922: 82 7a                    a3 = u64 [a0]
  1924: 33 08 81 00              a1 = 0x81
  1928: 95 17 7f                 a0 = sp + 0x7f
  1931: 33 03 57                 t1 = 0x57
  1934: 01                       fallthrough
      :                          @140
  1935: 64 8b                    a4 = a1
  1937: 98 ac 04                 a5 = a3 >> 0x4
  1940: 84 aa 0f                 a3 = a3 & 0xf
  1943: 88 a8 0a                 a1 = a3 <u 0xa
  1946: 33 09 30                 a2 = 0x30
  1949: da 83 09                 a2 = t1 if a1 == 0
  1952: be a9 09                 i32 a2 = a2 + a3
  1955: 78 79                    u8 [a0] = a2
  1957: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  1960: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
  1963: 64 ca                    a3 = a5
  1965: 52 0c e2                 jump @140 if a5 != 0
      :                          @141
  1968: 28 30                    jump @144
      :                          @142
  1970: 82 7a                    a3 = u64 [a0]
  1972: 33 08 81 00              a1 = 0x81
  1976: 95 17 7f                 a0 = sp + 0x7f
  1979: 33 03 37                 t1 = 0x37
  1982: 01                       fallthrough
      :                          @143
  1983: 64 8b                    a4 = a1
  1985: 98 ac 04                 a5 = a3 >> 0x4
  1988: 84 aa 0f                 a3 = a3 & 0xf
  1991: 88 a8 0a                 a1 = a3 <u 0xa
  1994: 33 09 30                 a2 = 0x30
  1997: da 83 09                 a2 = t1 if a1 == 0
  2000: be a9 09                 i32 a2 = a2 + a3
  2003: 78 79                    u8 [a0] = a2
  2005: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2008: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
  2011: 64 ca                    a3 = a5
  2013: 52 0c e2                 jump @143 if a5 != 0
      :                          @144
  2016: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
  2019: 56 27 80 00 2b           jump @147 if a0 >u 128
      :                          @145
  2024: 9a 8c 81 00              a5 = 0x81 - a1
  2028: 64 1b                    a4 = sp
  2030: c8 7b 0b                 a4 = a4 + a0
  2033: 33 09 4a 30 01           a2 = 0x1304a
  2038: 33 08 01                 a1 = 0x1
  2041: 33 0a 02                 a3 = 0x2
  2044: 64 27                    a0 = t0
  2046: 50 10 50 ae 05 03        ra = 80, jump @13714
      :                          @146 [@dyn 40]
  2052: 82 10 80 00              ra = u64 [sp + 0x80]
  2056: 95 11 88 00              sp = sp + 0x88
  2060: 32 00                    ret
      :                          @147
  2062: 00                       trap
      :                          @148 [@dyn 41]
  2063: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  2067: 7b 10 80 00              u64 [sp + 0x80] = ra
  2071: 64 82                    t0 = a1
  2073: 80 88 34                 a1 = u32 [a1 + 0x34]
  2076: 82 77                    a0 = u64 [a0]
  2078: 84 89 10                 a2 = a1 & 0x10
  2081: 52 09 1c                 jump @151 if a2 != 0
      :                          @149
  2084: 84 88 20                 a1 = a1 & 0x20
  2087: 52 08 46                 jump @154 if a1 != 0
      :                          @150
  2090: 80 77                    a0 = u32 [a0]
  2092: 33 08 01                 a1 = 0x1
  2095: 64 29                    a2 = t0
  2097: 82 10 80 00              ra = u64 [sp + 0x80]
  2101: 95 11 88 00              sp = sp + 0x88
  2105: 28 45 04 03              jump @13704
      :                          @151
  2109: 81 7a                    a3 = i32 [a0]
  2111: 33 08 81 00              a1 = 0x81
  2115: 95 17 7f                 a0 = sp + 0x7f
  2118: 33 03 57                 t1 = 0x57
  2121: 01                       fallthrough
      :                          @152
  2122: 64 8b                    a4 = a1
  2124: 8b ac 04                 i32 a5 = a3 >> 0x4
  2127: 84 aa 0f                 a3 = a3 & 0xf
  2130: 88 a8 0a                 a1 = a3 <u 0xa
  2133: 33 09 30                 a2 = 0x30
  2136: da 83 09                 a2 = t1 if a1 == 0
  2139: be a9 09                 i32 a2 = a2 + a3
  2142: 78 79                    u8 [a0] = a2
  2144: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2147: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
  2150: 64 ca                    a3 = a5
  2152: 52 0c e2                 jump @152 if a5 != 0
      :                          @153
  2155: 28 30                    jump @156
      :                          @154
  2157: 81 7a                    a3 = i32 [a0]
  2159: 33 08 81 00              a1 = 0x81
  2163: 95 17 7f                 a0 = sp + 0x7f
  2166: 33 03 37                 t1 = 0x37
  2169: 01                       fallthrough
      :                          @155
  2170: 64 8b                    a4 = a1
  2172: 8b ac 04                 i32 a5 = a3 >> 0x4
  2175: 84 aa 0f                 a3 = a3 & 0xf
  2178: 88 a8 0a                 a1 = a3 <u 0xa
  2181: 33 09 30                 a2 = 0x30
  2184: da 83 09                 a2 = t1 if a1 == 0
  2187: be a9 09                 i32 a2 = a2 + a3
  2190: 78 79                    u8 [a0] = a2
  2192: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2195: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
  2198: 64 ca                    a3 = a5
  2200: 52 0c e2                 jump @155 if a5 != 0
      :                          @156
  2203: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
  2206: 56 27 80 00 2b           jump @159 if a0 >u 128
      :                          @157
  2211: 9a 8c 81 00              a5 = 0x81 - a1
  2215: 64 1b                    a4 = sp
  2217: c8 7b 0b                 a4 = a4 + a0
  2220: 33 09 4a 30 01           a2 = 0x1304a
  2225: 33 08 01                 a1 = 0x1
  2228: 33 0a 02                 a3 = 0x2
  2231: 64 27                    a0 = t0
  2233: 50 10 54 f3 04 03        ra = 84, jump @13714
      :                          @158 [@dyn 42]
  2239: 82 10 80 00              ra = u64 [sp + 0x80]
  2243: 95 11 88 00              sp = sp + 0x88
  2247: 32 00                    ret
      :                          @159
  2249: 00                       trap
      :                          @160 [@dyn 43]
  2250: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  2253: 7b 10 40                 u64 [sp + 0x40] = ra
  2256: 7b 15 38                 u64 [sp + 0x38] = s0
  2259: 7b 16 30                 u64 [sp + 0x30] = s1
  2262: 64 85                    s0 = a1
  2264: 82 88 28                 a1 = u64 [a1 + 0x28]
  2267: 82 76                    s1 = u64 [a0]
  2269: 82 57 20                 a0 = u64 [s0 + 0x20]
  2272: 82 8a 18                 a3 = u64 [a1 + 0x18]
  2275: 33 08 f0 2f 01           a1 = 0x12ff0
  2280: 33 09                    a2 = 0
  2282: b4 a0 01 58              ra = 88, jump [a3]
      :                          @161 [@dyn 44]
  2286: 7b 15 08                 u64 [sp + 0x8] = s0
  2289: 78 17 10                 u8 [sp + 0x10] = a0
  2292: 49 01                    u64 [sp + 0] = 0
  2294: 33 05 01                 s0 = 0x1
  2297: 78 15 11                 u8 [sp + 0x11] = s0
  2300: 7b 16 18                 u64 [sp + 0x18] = s1
  2303: 95 67 08                 a0 = s1 + 0x8
  2306: 7b 17 20                 u64 [sp + 0x20] = a0
  2309: 95 66 10                 s1 = s1 + 0x10
  2312: 7b 16 28                 u64 [sp + 0x28] = s1
  2315: 33 06 3a                 s1 = 0x3a
  2318: 64 17                    a0 = sp
  2320: 95 18 18                 a1 = sp + 0x18
  2323: 33 09 3a                 a2 = 0x3a
  2326: 50 10 5a 7d 0f 03        ra = 90, jump @13936
      :                          @162 [@dyn 45]
  2332: 64 17                    a0 = sp
  2334: 95 18 20                 a1 = sp + 0x20
  2337: 64 69                    a2 = s1
  2339: 50 10 5c 70 0f 03        ra = 92, jump @13936
      :                          @163 [@dyn 46]
  2345: 64 17                    a0 = sp
  2347: 95 18 28                 a1 = sp + 0x28
  2350: 64 69                    a2 = s1
  2352: 50 10 5e 63 0f 03        ra = 94, jump @13936
      :                          @164 [@dyn 47]
  2358: 82 17                    a0 = u64 [sp]
  2360: 7c 18 10                 a1 = u8 [sp + 0x10]
  2363: 51 07 57                 jump @172 if a0 == 0
      :                          @165
  2366: 52 08 57                 jump @173 if a1 != 0
      :                          @166
  2369: 7c 18 11                 a1 = u8 [sp + 0x11]
  2372: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2375: 8e 77                    a0 = a0 >u 0
  2377: 82 16 08                 s1 = u64 [sp + 0x8]
  2380: 88 88 01                 a1 = a1 <u 0x1
  2383: d4 87 07                 a0 = a0 | a1
  2386: 52 07 27                 jump @170 if a0 != 0
      :                          @167
  2389: 7c 67 34                 a0 = u8 [s1 + 0x34]
  2392: 84 77 04                 a0 = a0 & 0x4
  2395: 52 07 1e                 jump @170 if a0 != 0
      :                          @168
  2398: 82 68 28                 a1 = u64 [s1 + 0x28]
  2401: 82 67 20                 a0 = u64 [s1 + 0x20]
  2404: 82 8a 18                 a3 = u64 [a1 + 0x18]
  2407: 33 08 47 30 01           a1 = 0x13047
  2412: 33 09 01                 a2 = 0x1
  2415: 33 05 01                 s0 = 0x1
  2418: b4 a0 01 60              ra = 96, jump [a3]
      :                          @169 [@dyn 48]
  2422: 52 07 1f                 jump @173 if a0 != 0
      :                          @170
  2425: 82 68 28                 a1 = u64 [s1 + 0x28]
  2428: 82 67 20                 a0 = u64 [s1 + 0x20]
  2431: 82 8a 18                 a3 = u64 [a1 + 0x18]
  2434: 33 08 f1 2f 01           a1 = 0x12ff1
  2439: 33 09 01                 a2 = 0x1
  2442: b4 a0 01 62              ra = 98, jump [a3]
      :                          @171 [@dyn 49]
  2446: 64 75                    s0 = a0
  2448: 28 05                    jump @173
      :                          @172
  2450: 8e 85                    s0 = a1 >u 0
  2452: 01                       fallthrough
      :                          @173
  2453: 64 57                    a0 = s0
  2455: 82 10 40                 ra = u64 [sp + 0x40]
  2458: 82 15 38                 s0 = u64 [sp + 0x38]
  2461: 82 16 30                 s1 = u64 [sp + 0x30]
  2464: 95 11 48                 sp = sp + 0x48
  2467: 32 00                    ret
      :                          @174 [@dyn 50]
  2469: 95 11 c0                 sp = sp + 0xffffffffffffffc0
  2472: 7b 10 38                 u64 [sp + 0x38] = ra
  2475: 7b 15 30                 u64 [sp + 0x30] = s0
  2478: 7b 16 28                 u64 [sp + 0x28] = s1
  2481: 82 77                    a0 = u64 [a0]
  2483: 64 86                    s1 = a1
  2485: 82 88 28                 a1 = u64 [a1 + 0x28]
  2488: 82 75 08                 s0 = u64 [a0 + 0x8]
  2491: 82 77 10                 a0 = u64 [a0 + 0x10]
  2494: 7b 17 08                 u64 [sp + 0x8] = a0
  2497: 82 67 20                 a0 = u64 [s1 + 0x20]
  2500: 82 8a 18                 a3 = u64 [a1 + 0x18]
  2503: 33 08 08 30 01           a1 = 0x13008
  2508: 33 09 01                 a2 = 0x1
  2511: b4 a0 01 66              ra = 102, jump [a3]
      :                          @175 [@dyn 51]
  2515: 7b 16 10                 u64 [sp + 0x10] = s1
  2518: 82 16 08                 s1 = u64 [sp + 0x8]
  2521: 78 17 18                 u8 [sp + 0x18] = a0
  2524: 46 11 19                 u8 [sp + 25] = 0
  2527: 51 06 30                 jump @180 if s1 == 0
      :                          @176
  2530: 97 66 03                 s1 = s1 << 0x3
  2533: 33 07 4e                 a0 = 0x4e
  2536: 7b 17                    u64 [sp] = a0
  2538: 01                       fallthrough
      :                          @177
  2539: 95 57 08                 a0 = s0 + 0x8
  2542: 7b 17 08                 u64 [sp + 0x8] = a0
  2545: 7b 15 20                 u64 [sp + 0x20] = s0
  2548: 95 17 10                 a0 = sp + 0x10
  2551: 95 18 20                 a1 = sp + 0x20
  2554: 82 19                    a2 = u64 [sp]
  2556: 50 10 68 d3 0f 03        ra = 104, jump @13952
      :                          @178 [@dyn 52]
  2562: 95 66 f8                 s1 = s1 + 0xfffffffffffffff8
  2565: 82 15 08                 s0 = u64 [sp + 0x8]
  2568: 52 06 e3                 jump @177 if s1 != 0
      :                          @179
  2571: 7c 17 18                 a0 = u8 [sp + 0x18]
  2574: 01                       fallthrough
      :                          @180
  2575: 33 08 01                 a1 = 0x1
  2578: 52 07 1e                 jump @183 if a0 != 0
      :                          @181
  2581: 82 17 10                 a0 = u64 [sp + 0x10]
  2584: 82 78 28                 a1 = u64 [a0 + 0x28]
  2587: 82 77 20                 a0 = u64 [a0 + 0x20]
  2590: 82 8a 18                 a3 = u64 [a1 + 0x18]
  2593: 33 08 49 30 01           a1 = 0x13049
  2598: 33 09 01                 a2 = 0x1
  2601: b4 a0 01 6a              ra = 106, jump [a3]
      :                          @182 [@dyn 53]
  2605: 64 78                    a1 = a0
  2607: 01                       fallthrough
      :                          @183
  2608: 64 87                    a0 = a1
  2610: 82 10 38                 ra = u64 [sp + 0x38]
  2613: 82 15 30                 s0 = u64 [sp + 0x30]
  2616: 82 16 28                 s1 = u64 [sp + 0x28]
  2619: 95 11 40                 sp = sp + 0x40
  2622: 32 00                    ret
      :                          @184 [@dyn 54]
  2624: 95 11 c0                 sp = sp + 0xffffffffffffffc0
  2627: 7b 10 38                 u64 [sp + 0x38] = ra
  2630: 7b 15 30                 u64 [sp + 0x30] = s0
  2633: 7b 16 28                 u64 [sp + 0x28] = s1
  2636: 64 85                    s0 = a1
  2638: 82 88 28                 a1 = u64 [a1 + 0x28]
  2641: 82 76                    s1 = u64 [a0]
  2643: 82 57 20                 a0 = u64 [s0 + 0x20]
  2646: 82 8a 18                 a3 = u64 [a1 + 0x18]
  2649: 33 08 f0 2f 01           a1 = 0x12ff0
  2654: 33 09                    a2 = 0
  2656: b4 a0 01 6e              ra = 110, jump [a3]
      :                          @185 [@dyn 55]
  2660: 7b 15 08                 u64 [sp + 0x8] = s0
  2663: 78 17 10                 u8 [sp + 0x10] = a0
  2666: 49 01                    u64 [sp + 0] = 0
  2668: 33 05 01                 s0 = 0x1
  2671: 78 15 11                 u8 [sp + 0x11] = s0
  2674: 7b 16 18                 u64 [sp + 0x18] = s1
  2677: 95 66 08                 s1 = s1 + 0x8
  2680: 7b 16 20                 u64 [sp + 0x20] = s1
  2683: 33 09 3a                 a2 = 0x3a
  2686: 64 17                    a0 = sp
  2688: 95 18 18                 a1 = sp + 0x18
  2691: 50 10 70 10 0e 03        ra = 112, jump @13936
      :                          @186 [@dyn 56]
  2697: 33 09 52                 a2 = 0x52
  2700: 64 17                    a0 = sp
  2702: 95 18 20                 a1 = sp + 0x20
  2705: 50 10 72 02 0e 03        ra = 114, jump @13936
      :                          @187 [@dyn 57]
  2711: 82 17                    a0 = u64 [sp]
  2713: 7c 18 10                 a1 = u8 [sp + 0x10]
  2716: 51 07 57                 jump @195 if a0 == 0
      :                          @188
  2719: 52 08 57                 jump @196 if a1 != 0
      :                          @189
  2722: 7c 18 11                 a1 = u8 [sp + 0x11]
  2725: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2728: 8e 77                    a0 = a0 >u 0
  2730: 82 16 08                 s1 = u64 [sp + 0x8]
  2733: 88 88 01                 a1 = a1 <u 0x1
  2736: d4 87 07                 a0 = a0 | a1
  2739: 52 07 27                 jump @193 if a0 != 0
      :                          @190
  2742: 7c 67 34                 a0 = u8 [s1 + 0x34]
  2745: 84 77 04                 a0 = a0 & 0x4
  2748: 52 07 1e                 jump @193 if a0 != 0
      :                          @191
  2751: 82 68 28                 a1 = u64 [s1 + 0x28]
  2754: 82 67 20                 a0 = u64 [s1 + 0x20]
  2757: 82 8a 18                 a3 = u64 [a1 + 0x18]
  2760: 33 08 47 30 01           a1 = 0x13047
  2765: 33 09 01                 a2 = 0x1
  2768: 33 05 01                 s0 = 0x1
  2771: b4 a0 01 74              ra = 116, jump [a3]
      :                          @192 [@dyn 58]
  2775: 52 07 1f                 jump @196 if a0 != 0
      :                          @193
  2778: 82 68 28                 a1 = u64 [s1 + 0x28]
  2781: 82 67 20                 a0 = u64 [s1 + 0x20]
  2784: 82 8a 18                 a3 = u64 [a1 + 0x18]
  2787: 33 08 f1 2f 01           a1 = 0x12ff1
  2792: 33 09 01                 a2 = 0x1
  2795: b4 a0 01 76              ra = 118, jump [a3]
      :                          @194 [@dyn 59]
  2799: 64 75                    s0 = a0
  2801: 28 05                    jump @196
      :                          @195
  2803: 8e 85                    s0 = a1 >u 0
  2805: 01                       fallthrough
      :                          @196
  2806: 64 57                    a0 = s0
  2808: 82 10 38                 ra = u64 [sp + 0x38]
  2811: 82 15 30                 s0 = u64 [sp + 0x30]
  2814: 82 16 28                 s1 = u64 [sp + 0x28]
  2817: 95 11 40                 sp = sp + 0x40
  2820: 32 00                    ret
      :                          @197 [@dyn 60]
  2822: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  2826: 7b 10 80 00              u64 [sp + 0x80] = ra
  2830: 64 82                    t0 = a1
  2832: 80 88 34                 a1 = u32 [a1 + 0x34]
  2835: 84 89 10                 a2 = a1 & 0x10
  2838: 52 09 1c                 jump @200 if a2 != 0
      :                          @198
  2841: 84 88 20                 a1 = a1 & 0x20
  2844: 52 08 46                 jump @203 if a1 != 0
      :                          @199
  2847: 80 77                    a0 = u32 [a0]
  2849: 33 08 01                 a1 = 0x1
  2852: 64 29                    a2 = t0
  2854: 82 10 80 00              ra = u64 [sp + 0x80]
  2858: 95 11 88 00              sp = sp + 0x88
  2862: 28 50 01 03              jump @13704
      :                          @200
  2866: 81 7a                    a3 = i32 [a0]
  2868: 33 08 81 00              a1 = 0x81
  2872: 95 17 7f                 a0 = sp + 0x7f
  2875: 33 03 57                 t1 = 0x57
  2878: 01                       fallthrough
      :                          @201
  2879: 64 8b                    a4 = a1
  2881: 8b ac 04                 i32 a5 = a3 >> 0x4
  2884: 84 aa 0f                 a3 = a3 & 0xf
  2887: 88 a8 0a                 a1 = a3 <u 0xa
  2890: 33 09 30                 a2 = 0x30
  2893: da 83 09                 a2 = t1 if a1 == 0
  2896: be a9 09                 i32 a2 = a2 + a3
  2899: 78 79                    u8 [a0] = a2
  2901: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2904: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
  2907: 64 ca                    a3 = a5
  2909: 52 0c e2                 jump @201 if a5 != 0
      :                          @202
  2912: 28 30                    jump @205
      :                          @203
  2914: 81 7a                    a3 = i32 [a0]
  2916: 33 08 81 00              a1 = 0x81
  2920: 95 17 7f                 a0 = sp + 0x7f
  2923: 33 03 37                 t1 = 0x37
  2926: 01                       fallthrough
      :                          @204
  2927: 64 8b                    a4 = a1
  2929: 8b ac 04                 i32 a5 = a3 >> 0x4
  2932: 84 aa 0f                 a3 = a3 & 0xf
  2935: 88 a8 0a                 a1 = a3 <u 0xa
  2938: 33 09 30                 a2 = 0x30
  2941: da 83 09                 a2 = t1 if a1 == 0
  2944: be a9 09                 i32 a2 = a2 + a3
  2947: 78 79                    u8 [a0] = a2
  2949: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2952: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
  2955: 64 ca                    a3 = a5
  2957: 52 0c e2                 jump @204 if a5 != 0
      :                          @205
  2960: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
  2963: 56 27 80 00 2b           jump @208 if a0 >u 128
      :                          @206
  2968: 9a 8c 81 00              a5 = 0x81 - a1
  2972: 64 1b                    a4 = sp
  2974: c8 7b 0b                 a4 = a4 + a0
  2977: 33 09 4a 30 01           a2 = 0x1304a
  2982: 33 08 01                 a1 = 0x1
  2985: 33 0a 02                 a3 = 0x2
  2988: 64 27                    a0 = t0
  2990: 50 10 7a fe 01 03        ra = 122, jump @13714
      :                          @207 [@dyn 61]
  2996: 82 10 80 00              ra = u64 [sp + 0x80]
  3000: 95 11 88 00              sp = sp + 0x88
  3004: 32 00                    ret
      :                          @208
  3006: 00                       trap
      :                          @209 [@dyn 62]
  3007: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  3011: 7b 10 80 00              u64 [sp + 0x80] = ra
  3015: 64 82                    t0 = a1
  3017: 80 88 34                 a1 = u32 [a1 + 0x34]
  3020: 84 89 10                 a2 = a1 & 0x10
  3023: 52 09 1c                 jump @212 if a2 != 0
      :                          @210
  3026: 84 88 20                 a1 = a1 & 0x20
  3029: 52 08 46                 jump @215 if a1 != 0
      :                          @211
  3032: 82 77                    a0 = u64 [a0]
  3034: 33 08 01                 a1 = 0x1
  3037: 64 29                    a2 = t0
  3039: 82 10 80 00              ra = u64 [sp + 0x80]
  3043: 95 11 88 00              sp = sp + 0x88
  3047: 28 97 00 03              jump @13704
      :                          @212
  3051: 82 7a                    a3 = u64 [a0]
  3053: 33 08 81 00              a1 = 0x81
  3057: 95 17 7f                 a0 = sp + 0x7f
  3060: 33 03 57                 t1 = 0x57
  3063: 01                       fallthrough
      :                          @213
  3064: 64 8b                    a4 = a1
  3066: 98 ac 04                 a5 = a3 >> 0x4
  3069: 84 aa 0f                 a3 = a3 & 0xf
  3072: 88 a8 0a                 a1 = a3 <u 0xa
  3075: 33 09 30                 a2 = 0x30
  3078: da 83 09                 a2 = t1 if a1 == 0
  3081: be a9 09                 i32 a2 = a2 + a3
  3084: 78 79                    u8 [a0] = a2
  3086: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  3089: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
  3092: 64 ca                    a3 = a5
  3094: 52 0c e2                 jump @213 if a5 != 0
      :                          @214
  3097: 28 30                    jump @217
      :                          @215
  3099: 82 7a                    a3 = u64 [a0]
  3101: 33 08 81 00              a1 = 0x81
  3105: 95 17 7f                 a0 = sp + 0x7f
  3108: 33 03 37                 t1 = 0x37
  3111: 01                       fallthrough
      :                          @216
  3112: 64 8b                    a4 = a1
  3114: 98 ac 04                 a5 = a3 >> 0x4
  3117: 84 aa 0f                 a3 = a3 & 0xf
  3120: 88 a8 0a                 a1 = a3 <u 0xa
  3123: 33 09 30                 a2 = 0x30
  3126: da 83 09                 a2 = t1 if a1 == 0
  3129: be a9 09                 i32 a2 = a2 + a3
  3132: 78 79                    u8 [a0] = a2
  3134: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  3137: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
  3140: 64 ca                    a3 = a5
  3142: 52 0c e2                 jump @216 if a5 != 0
      :                          @217
  3145: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
  3148: 56 27 80 00 2b           jump @220 if a0 >u 128
      :                          @218
  3153: 9a 8c 81 00              a5 = 0x81 - a1
  3157: 64 1b                    a4 = sp
  3159: c8 7b 0b                 a4 = a4 + a0
  3162: 33 09 4a 30 01           a2 = 0x1304a
  3167: 33 08 01                 a1 = 0x1
  3170: 33 0a 02                 a3 = 0x2
  3173: 64 27                    a0 = t0
  3175: 50 10 7e 45 01 03        ra = 126, jump @13714
      :                          @219 [@dyn 63]
  3181: 82 10 80 00              ra = u64 [sp + 0x80]
  3185: 95 11 88 00              sp = sp + 0x88
  3189: 32 00                    ret
      :                          @220
  3191: 00                       trap
      :                          @221
  3192: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3195: 7b 10 18                 u64 [sp + 0x18] = ra
  3198: 7b 15 10                 u64 [sp + 0x10] = s0
  3201: 7b 16 08                 u64 [sp + 0x8] = s1
  3204: 82 70 10                 ra = u64 [a0 + 0x10]
  3207: 7b 17                    u64 [sp] = a0
  3209: 82 74 08                 t2 = u64 [a0 + 0x8]
  3212: 51 00 4a                 jump @233 if ra == 0
      :                          @222
  3215: 33 0a                    a3 = 0
  3217: 33 03 18                 t1 = 0x18
  3220: 33 07 00 00 01           a0 = 0x10000
  3225: 33 0c c0 22 03           a5 = 0x322c0
  3230: c8 7c 0c                 a5 = a5 + a0
  3233: 28 08                    jump @224
      :                          @223
  3235: 95 aa 01                 a3 = a3 + 0x1
  3238: aa 0a 30                 jump @233 if a3 == ra
      :                          @224
  3241: ca 3a 08                 a1 = a3 * t1
  3244: c8 48 08                 a1 = a1 + t2
  3247: 82 8b                    a4 = u64 [a1]
  3249: 51 0b f2                 jump @223 if a4 == 0
      :                          @225
  3252: ac b7 ef                 jump @223 if a0 <u a4
      :                          @226
  3255: 82 88 08                 a1 = u64 [a1 + 0x8]
  3258: 01                       fallthrough
      :                          @227
  3259: 82 c5                    s0 = u64 [a5]
  3261: c9 5c 06                 s1 = a5 - s0
  3264: ab 86 e3                 jump @223 if s1 != a1
      :                          @228
  3267: c9 b5 06                 s1 = s0 - a4
  3270: 01                       fallthrough
      :                          @229
  3271: 82 c9                    a2 = u64 [a5]
  3273: ab 59 f2                 jump @227 if a2 != s0
      :                          @230
  3276: 7b c6                    u64 [a5] = s1
  3278: 33 02                    t0 = 0
  3280: 01                       fallthrough
      :                          @231
  3281: ab 59 ea                 jump @227 if a2 != s0
      :                          @232
  3284: 28 cf                    jump @223
      :                          @233
  3286: 82 17                    a0 = u64 [sp]
  3288: 82 77                    a0 = u64 [a0]
  3290: 51 07 2e                 jump @240 if a0 == 0
      :                          @234
  3293: 33 08 aa 0a              a1 = 0xaaa
  3297: ac 78 27                 jump @240 if a1 <u a0
      :                          @235
  3300: 96 77 e8                 a0 = a0 * 0xffffffffffffffe8
  3303: 33 08 c0 22 03           a1 = 0x322c0
  3308: 95 88 00 00 01           a1 = a1 + 0x10000
  3313: 01                       fallthrough
      :                          @236
  3314: 82 89                    a2 = u64 [a1]
  3316: c9 98 0a                 a3 = a1 - a2
  3319: ab 4a 11                 jump @240 if a3 != t2
      :                          @237
  3322: c8 79 0a                 a3 = a2 + a0
  3325: 01                       fallthrough
      :                          @238
  3326: 82 8b                    a4 = u64 [a1]
  3328: ab 9b f2                 jump @236 if a4 != a2
      :                          @239
  3331: 7b 8a                    u64 [a1] = a3
  3333: 33 0c                    a5 = 0
  3335: 01                       fallthrough
      :                          @240
  3336: 82 10 18                 ra = u64 [sp + 0x18]
  3339: 82 15 10                 s0 = u64 [sp + 0x10]
  3342: 82 16 08                 s1 = u64 [sp + 0x8]
  3345: 95 11 20                 sp = sp + 0x20
  3348: 32 00                    ret
      :                          @241
  3350: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3353: 7b 10 18                 u64 [sp + 0x18] = ra
  3356: 7b 15 10                 u64 [sp + 0x10] = s0
  3359: 7b 16 08                 u64 [sp + 0x8] = s1
  3362: 82 70 10                 ra = u64 [a0 + 0x10]
  3365: 7b 17                    u64 [sp] = a0
  3367: 82 74 08                 t2 = u64 [a0 + 0x8]
  3370: 51 00 4e                 jump @253 if ra == 0
      :                          @242
  3373: 33 0a                    a3 = 0
  3375: 33 03 18                 t1 = 0x18
  3378: 33 0c c0 22 03           a5 = 0x322c0
  3383: 95 cc 00 00 01           a5 = a5 + 0x10000
  3388: 33 07 00 20              a0 = 0x2000
  3392: 28 08                    jump @244
      :                          @243
  3394: 95 aa 01                 a3 = a3 + 0x1
  3397: aa 0a 33                 jump @253 if a3 == ra
      :                          @244
  3400: ca 3a 0b                 a4 = a3 * t1
  3403: c8 4b 0b                 a4 = a4 + t2
  3406: 82 b8                    a1 = u64 [a4]
  3408: 51 08 f2                 jump @243 if a1 == 0
      :                          @245
  3411: ac 87 ef                 jump @243 if a0 <u a1
      :                          @246
  3414: 82 bb 08                 a4 = u64 [a4 + 0x8]
  3417: 97 88 03                 a1 = a1 << 0x3
  3420: 01                       fallthrough
      :                          @247
  3421: 82 c5                    s0 = u64 [a5]
  3423: c9 5c 06                 s1 = a5 - s0
  3426: ab b6 e0                 jump @243 if s1 != a4
      :                          @248
  3429: c9 85 06                 s1 = s0 - a1
  3432: 01                       fallthrough
      :                          @249
  3433: 82 c9                    a2 = u64 [a5]
  3435: ab 59 f2                 jump @247 if a2 != s0
      :                          @250
  3438: 7b c6                    u64 [a5] = s1
  3440: 33 02                    t0 = 0
  3442: 01                       fallthrough
      :                          @251
  3443: ab 59 ea                 jump @247 if a2 != s0
      :                          @252
  3446: 28 cc                    jump @243
      :                          @253
  3448: 82 17                    a0 = u64 [sp]
  3450: 82 77                    a0 = u64 [a0]
  3452: 51 07 2e                 jump @260 if a0 == 0
      :                          @254
  3455: 33 08 aa 0a              a1 = 0xaaa
  3459: ac 78 27                 jump @260 if a1 <u a0
      :                          @255
  3462: 96 77 e8                 a0 = a0 * 0xffffffffffffffe8
  3465: 33 08 c0 22 03           a1 = 0x322c0
  3470: 95 88 00 00 01           a1 = a1 + 0x10000
  3475: 01                       fallthrough
      :                          @256
  3476: 82 89                    a2 = u64 [a1]
  3478: c9 98 0a                 a3 = a1 - a2
  3481: ab 4a 11                 jump @260 if a3 != t2
      :                          @257
  3484: c8 79 0a                 a3 = a2 + a0
  3487: 01                       fallthrough
      :                          @258
  3488: 82 8b                    a4 = u64 [a1]
  3490: ab 9b f2                 jump @256 if a4 != a2
      :                          @259
  3493: 7b 8a                    u64 [a1] = a3
  3495: 33 0c                    a5 = 0
  3497: 01                       fallthrough
      :                          @260
  3498: 82 10 18                 ra = u64 [sp + 0x18]
  3501: 82 15 10                 s0 = u64 [sp + 0x10]
  3504: 82 16 08                 s1 = u64 [sp + 0x8]
  3507: 95 11 20                 sp = sp + 0x20
  3510: 32 00                    ret
      :                          @261
  3512: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3515: 7b 10 18                 u64 [sp + 0x18] = ra
  3518: 7b 15 10                 u64 [sp + 0x10] = s0
  3521: 7b 16 08                 u64 [sp + 0x8] = s1
  3524: 82 70 10                 ra = u64 [a0 + 0x10]
  3527: 7b 17                    u64 [sp] = a0
  3529: 82 74 08                 t2 = u64 [a0 + 0x8]
  3532: 51 00 4e                 jump @273 if ra == 0
      :                          @262
  3535: 33 0a                    a3 = 0
  3537: 33 03 18                 t1 = 0x18
  3540: 33 0c c0 22 03           a5 = 0x322c0
  3545: 95 cc 00 00 01           a5 = a5 + 0x10000
  3550: 33 07 00 10              a0 = 0x1000
  3554: 28 08                    jump @264
      :                          @263
  3556: 95 aa 01                 a3 = a3 + 0x1
  3559: aa 0a 33                 jump @273 if a3 == ra
      :                          @264
  3562: ca 3a 0b                 a4 = a3 * t1
  3565: c8 4b 0b                 a4 = a4 + t2
  3568: 82 b8                    a1 = u64 [a4]
  3570: 51 08 f2                 jump @263 if a1 == 0
      :                          @265
  3573: ac 87 ef                 jump @263 if a0 <u a1
      :                          @266
  3576: 82 bb 08                 a4 = u64 [a4 + 0x8]
  3579: 97 88 04                 a1 = a1 << 0x4
  3582: 01                       fallthrough
      :                          @267
  3583: 82 c5                    s0 = u64 [a5]
  3585: c9 5c 06                 s1 = a5 - s0
  3588: ab b6 e0                 jump @263 if s1 != a4
      :                          @268
  3591: c9 85 06                 s1 = s0 - a1
  3594: 01                       fallthrough
      :                          @269
  3595: 82 c9                    a2 = u64 [a5]
  3597: ab 59 f2                 jump @267 if a2 != s0
      :                          @270
  3600: 7b c6                    u64 [a5] = s1
  3602: 33 02                    t0 = 0
  3604: 01                       fallthrough
      :                          @271
  3605: ab 59 ea                 jump @267 if a2 != s0
      :                          @272
  3608: 28 cc                    jump @263
      :                          @273
  3610: 82 17                    a0 = u64 [sp]
  3612: 82 77                    a0 = u64 [a0]
  3614: 51 07 2e                 jump @280 if a0 == 0
      :                          @274
  3617: 33 08 aa 0a              a1 = 0xaaa
  3621: ac 78 27                 jump @280 if a1 <u a0
      :                          @275
  3624: 96 77 e8                 a0 = a0 * 0xffffffffffffffe8
  3627: 33 08 c0 22 03           a1 = 0x322c0
  3632: 95 88 00 00 01           a1 = a1 + 0x10000
  3637: 01                       fallthrough
      :                          @276
  3638: 82 89                    a2 = u64 [a1]
  3640: c9 98 0a                 a3 = a1 - a2
  3643: ab 4a 11                 jump @280 if a3 != t2
      :                          @277
  3646: c8 79 0a                 a3 = a2 + a0
  3649: 01                       fallthrough
      :                          @278
  3650: 82 8b                    a4 = u64 [a1]
  3652: ab 9b f2                 jump @276 if a4 != a2
      :                          @279
  3655: 7b 8a                    u64 [a1] = a3
  3657: 33 0c                    a5 = 0
  3659: 01                       fallthrough
      :                          @280
  3660: 82 10 18                 ra = u64 [sp + 0x18]
  3663: 82 15 10                 s0 = u64 [sp + 0x10]
  3666: 82 16 08                 s1 = u64 [sp + 0x8]
  3669: 95 11 20                 sp = sp + 0x20
  3672: 32 00                    ret
      :                          @281 [@dyn 64]
  3674: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  3677: 7b 10 28                 u64 [sp + 0x28] = ra
  3680: 7b 15 20                 u64 [sp + 0x20] = s0
  3683: 7b 16 18                 u64 [sp + 0x18] = s1
  3686: 64 85                    s0 = a1
  3688: 82 88 28                 a1 = u64 [a1 + 0x28]
  3691: 82 5a 20                 a3 = u64 [s0 + 0x20]
  3694: 82 8b 18                 a4 = u64 [a1 + 0x18]
  3697: 64 76                    s1 = a0
  3699: 33 08 08 30 01           a1 = 0x13008
  3704: 33 09 01                 a2 = 0x1
  3707: 64 a7                    a0 = a3
  3709: b4 b0 02 82 00           ra = 130, jump [a4]
      :                          @282 [@dyn 65]
  3714: 7b 15                    u64 [sp] = s0
  3716: 78 17 08                 u8 [sp + 0x8] = a0
  3719: 46 11 09                 u8 [sp + 9] = 0
  3722: 7b 16 10                 u64 [sp + 0x10] = s1
  3725: 33 05 3a                 s0 = 0x3a
  3728: 64 17                    a0 = sp
  3730: 95 18 10                 a1 = sp + 0x10
  3733: 33 09 3a                 a2 = 0x3a
  3736: 50 20 84 00 37 0b 03     ra = 132, jump @13952
      :                          @283 [@dyn 66]
  3743: 95 67 08                 a0 = s1 + 0x8
  3746: 7b 17 10                 u64 [sp + 0x10] = a0
  3749: 64 17                    a0 = sp
  3751: 95 18 10                 a1 = sp + 0x10
  3754: 64 59                    a2 = s0
  3756: 50 20 86 00 23 0b 03     ra = 134, jump @13952
      :                          @284 [@dyn 67]
  3763: 95 67 10                 a0 = s1 + 0x10
  3766: 7b 17 10                 u64 [sp + 0x10] = a0
  3769: 64 17                    a0 = sp
  3771: 95 18 10                 a1 = sp + 0x10
  3774: 64 59                    a2 = s0
  3776: 50 20 88 00 0f 0b 03     ra = 136, jump @13952
      :                          @285 [@dyn 68]
  3783: 95 66 18                 s1 = s1 + 0x18
  3786: 7b 16 10                 u64 [sp + 0x10] = s1
  3789: 64 17                    a0 = sp
  3791: 95 18 10                 a1 = sp + 0x10
  3794: 64 59                    a2 = s0
  3796: 50 20 8a 00 fb 0a 03     ra = 138, jump @13952
      :                          @286 [@dyn 69]
  3803: 33 07 01                 a0 = 0x1
  3806: 7c 18 08                 a1 = u8 [sp + 0x8]
  3809: 52 08 1b                 jump @288 if a1 != 0
      :                          @287
  3812: 82 17                    a0 = u64 [sp]
  3814: 82 78 28                 a1 = u64 [a0 + 0x28]
  3817: 82 77 20                 a0 = u64 [a0 + 0x20]
  3820: 82 8a 18                 a3 = u64 [a1 + 0x18]
  3823: 33 08 49 30 01           a1 = 0x13049
  3828: 33 09 01                 a2 = 0x1
  3831: b4 a0 02 8c 00           ra = 140, jump [a3]
      :                          @288 [@dyn 70]
  3836: 82 10 28                 ra = u64 [sp + 0x28]
  3839: 82 15 20                 s0 = u64 [sp + 0x20]
  3842: 82 16 18                 s1 = u64 [sp + 0x18]
  3845: 95 11 30                 sp = sp + 0x30
  3848: 32 00                    ret
      :                          @289 [@dyn 71]
  3850: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  3853: 7b 10 28                 u64 [sp + 0x28] = ra
  3856: 7b 15 20                 u64 [sp + 0x20] = s0
  3859: 7b 16 18                 u64 [sp + 0x18] = s1
  3862: 64 85                    s0 = a1
  3864: 82 88 28                 a1 = u64 [a1 + 0x28]
  3867: 82 5a 20                 a3 = u64 [s0 + 0x20]
  3870: 82 8b 18                 a4 = u64 [a1 + 0x18]
  3873: 64 76                    s1 = a0
  3875: 33 08 08 30 01           a1 = 0x13008
  3880: 33 09 01                 a2 = 0x1
  3883: 64 a7                    a0 = a3
  3885: b4 b0 02 90 00           ra = 144, jump [a4]
      :                          @290 [@dyn 72]
  3890: 7b 15                    u64 [sp] = s0
  3892: 78 17 08                 u8 [sp + 0x8] = a0
  3895: 46 11 09                 u8 [sp + 9] = 0
  3898: 7b 16 10                 u64 [sp + 0x10] = s1
  3901: 33 05 3a                 s0 = 0x3a
  3904: 64 17                    a0 = sp
  3906: 95 18 10                 a1 = sp + 0x10
  3909: 33 09 3a                 a2 = 0x3a
  3912: 50 20 92 00 87 0a 03     ra = 146, jump @13952
      :                          @291 [@dyn 73]
  3919: 95 67 08                 a0 = s1 + 0x8
  3922: 7b 17 10                 u64 [sp + 0x10] = a0
  3925: 64 17                    a0 = sp
  3927: 95 18 10                 a1 = sp + 0x10
  3930: 64 59                    a2 = s0
  3932: 50 20 94 00 73 0a 03     ra = 148, jump @13952
      :                          @292 [@dyn 74]
  3939: 95 67 10                 a0 = s1 + 0x10
  3942: 7b 17 10                 u64 [sp + 0x10] = a0
  3945: 64 17                    a0 = sp
  3947: 95 18 10                 a1 = sp + 0x10
  3950: 64 59                    a2 = s0
  3952: 50 20 96 00 5f 0a 03     ra = 150, jump @13952
      :                          @293 [@dyn 75]
  3959: 95 67 18                 a0 = s1 + 0x18
  3962: 7b 17 10                 u64 [sp + 0x10] = a0
  3965: 64 17                    a0 = sp
  3967: 95 18 10                 a1 = sp + 0x10
  3970: 64 59                    a2 = s0
  3972: 50 20 98 00 4b 0a 03     ra = 152, jump @13952
      :                          @294 [@dyn 76]
  3979: 95 67 20                 a0 = s1 + 0x20
  3982: 7b 17 10                 u64 [sp + 0x10] = a0
  3985: 64 17                    a0 = sp
  3987: 95 18 10                 a1 = sp + 0x10
  3990: 64 59                    a2 = s0
  3992: 50 20 9a 00 37 0a 03     ra = 154, jump @13952
      :                          @295 [@dyn 77]
  3999: 95 67 28                 a0 = s1 + 0x28
  4002: 7b 17 10                 u64 [sp + 0x10] = a0
  4005: 64 17                    a0 = sp
  4007: 95 18 10                 a1 = sp + 0x10
  4010: 64 59                    a2 = s0
  4012: 50 20 9c 00 23 0a 03     ra = 156, jump @13952
      :                          @296 [@dyn 78]
  4019: 95 67 30                 a0 = s1 + 0x30
  4022: 7b 17 10                 u64 [sp + 0x10] = a0
  4025: 64 17                    a0 = sp
  4027: 95 18 10                 a1 = sp + 0x10
  4030: 64 59                    a2 = s0
  4032: 50 20 9e 00 0f 0a 03     ra = 158, jump @13952
      :                          @297 [@dyn 79]
  4039: 95 67 38                 a0 = s1 + 0x38
  4042: 7b 17 10                 u64 [sp + 0x10] = a0
  4045: 64 17                    a0 = sp
  4047: 95 18 10                 a1 = sp + 0x10
  4050: 64 59                    a2 = s0
  4052: 50 20 a0 00 fb 09 03     ra = 160, jump @13952
      :                          @298 [@dyn 80]
  4059: 33 07 01                 a0 = 0x1
  4062: 7c 18 08                 a1 = u8 [sp + 0x8]
  4065: 52 08 1b                 jump @300 if a1 != 0
      :                          @299
  4068: 82 17                    a0 = u64 [sp]
  4070: 82 78 28                 a1 = u64 [a0 + 0x28]
  4073: 82 77 20                 a0 = u64 [a0 + 0x20]
  4076: 82 8a 18                 a3 = u64 [a1 + 0x18]
  4079: 33 08 49 30 01           a1 = 0x13049
  4084: 33 09 01                 a2 = 0x1
  4087: b4 a0 02 a2 00           ra = 162, jump [a3]
      :                          @300 [@dyn 81]
  4092: 82 10 28                 ra = u64 [sp + 0x28]
  4095: 82 15 20                 s0 = u64 [sp + 0x20]
  4098: 82 16 18                 s1 = u64 [sp + 0x18]
  4101: 95 11 30                 sp = sp + 0x30
  4104: 32 00                    ret
      :                          @301 [@dyn 82]
  4106: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  4109: 7b 10 28                 u64 [sp + 0x28] = ra
  4112: 7b 15 20                 u64 [sp + 0x20] = s0
  4115: 7b 16 18                 u64 [sp + 0x18] = s1
  4118: 64 85                    s0 = a1
  4120: 82 88 28                 a1 = u64 [a1 + 0x28]
  4123: 82 5a 20                 a3 = u64 [s0 + 0x20]
  4126: 82 8b 18                 a4 = u64 [a1 + 0x18]
  4129: 64 76                    s1 = a0
  4131: 33 08 08 30 01           a1 = 0x13008
  4136: 33 09 01                 a2 = 0x1
  4139: 64 a7                    a0 = a3
  4141: b4 b0 02 a6 00           ra = 166, jump [a4]
      :                          @302 [@dyn 83]
  4146: 7b 15                    u64 [sp] = s0
  4148: 78 17 08                 u8 [sp + 0x8] = a0
  4151: 46 11 09                 u8 [sp + 9] = 0
  4154: 7b 16 10                 u64 [sp + 0x10] = s1
  4157: 33 05 3a                 s0 = 0x3a
  4160: 64 17                    a0 = sp
  4162: 95 18 10                 a1 = sp + 0x10
  4165: 33 09 3a                 a2 = 0x3a
  4168: 50 20 a8 00 87 09 03     ra = 168, jump @13952
      :                          @303 [@dyn 84]
  4175: 95 66 08                 s1 = s1 + 0x8
  4178: 7b 16 10                 u64 [sp + 0x10] = s1
  4181: 64 17                    a0 = sp
  4183: 95 18 10                 a1 = sp + 0x10
  4186: 64 59                    a2 = s0
  4188: 50 20 aa 00 73 09 03     ra = 170, jump @13952
      :                          @304 [@dyn 85]
  4195: 33 07 01                 a0 = 0x1
  4198: 7c 18 08                 a1 = u8 [sp + 0x8]
  4201: 52 08 1b                 jump @306 if a1 != 0
      :                          @305
  4204: 82 17                    a0 = u64 [sp]
  4206: 82 78 28                 a1 = u64 [a0 + 0x28]
  4209: 82 77 20                 a0 = u64 [a0 + 0x20]
  4212: 82 8a 18                 a3 = u64 [a1 + 0x18]
  4215: 33 08 49 30 01           a1 = 0x13049
  4220: 33 09 01                 a2 = 0x1
  4223: b4 a0 02 ac 00           ra = 172, jump [a3]
      :                          @306 [@dyn 86]
  4228: 82 10 28                 ra = u64 [sp + 0x28]
  4231: 82 15 20                 s0 = u64 [sp + 0x20]
  4234: 82 16 18                 s1 = u64 [sp + 0x18]
  4237: 95 11 30                 sp = sp + 0x30
  4240: 32 00                    ret
      :                          @307 [@dyn 87]
  4242: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  4245: 7b 10 30                 u64 [sp + 0x30] = ra
  4248: 7b 15 28                 u64 [sp + 0x28] = s0
  4251: 7b 16 20                 u64 [sp + 0x20] = s1
  4254: 64 86                    s1 = a1
  4256: 82 88 28                 a1 = u64 [a1 + 0x28]
  4259: 82 6a 20                 a3 = u64 [s1 + 0x20]
  4262: 82 8b 18                 a4 = u64 [a1 + 0x18]
  4265: 64 75                    s0 = a0
  4267: 33 08 08 30 01           a1 = 0x13008
  4272: 33 09 01                 a2 = 0x1
  4275: 64 a7                    a0 = a3
  4277: b4 b0 02 b0 00           ra = 176, jump [a4]
      :                          @308 [@dyn 88]
  4282: 7b 16 08                 u64 [sp + 0x8] = s1
  4285: 78 17 10                 u8 [sp + 0x10] = a0
  4288: 46 11 11                 u8 [sp + 17] = 0
  4291: 33 06 80 00              s1 = 0x80
  4295: 33 07 4a                 a0 = 0x4a
  4298: 7b 17                    u64 [sp] = a0
  4300: 01                       fallthrough
      :                          @309
  4301: 7b 15 18                 u64 [sp + 0x18] = s0
  4304: 95 17 08                 a0 = sp + 0x8
  4307: 95 18 18                 a1 = sp + 0x18
  4310: 82 19                    a2 = u64 [sp]
  4312: 50 20 b2 00 f7 08 03     ra = 178, jump @13952
      :                          @310 [@dyn 89]
  4319: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  4322: 95 55 01                 s0 = s0 + 0x1
  4325: 52 06 e8                 jump @309 if s1 != 0
      :                          @311
  4328: 7c 18 10                 a1 = u8 [sp + 0x10]
  4331: 33 07 01                 a0 = 0x1
  4334: 52 08 1c                 jump @313 if a1 != 0
      :                          @312
  4337: 82 17 08                 a0 = u64 [sp + 0x8]
  4340: 82 78 28                 a1 = u64 [a0 + 0x28]
  4343: 82 77 20                 a0 = u64 [a0 + 0x20]
  4346: 82 8a 18                 a3 = u64 [a1 + 0x18]
  4349: 33 08 49 30 01           a1 = 0x13049
  4354: 33 09 01                 a2 = 0x1
  4357: b4 a0 02 b4 00           ra = 180, jump [a3]
      :                          @313 [@dyn 90]
  4362: 82 10 30                 ra = u64 [sp + 0x30]
  4365: 82 15 28                 s0 = u64 [sp + 0x28]
  4368: 82 16 20                 s1 = u64 [sp + 0x20]
  4371: 95 11 38                 sp = sp + 0x38
  4374: 32 00                    ret
      :                          @314 [@dyn 91]
  4376: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  4379: 7b 10 28                 u64 [sp + 0x28] = ra
  4382: 7b 15 20                 u64 [sp + 0x20] = s0
  4385: 7b 16 18                 u64 [sp + 0x18] = s1
  4388: 64 85                    s0 = a1
  4390: 82 88 28                 a1 = u64 [a1 + 0x28]
  4393: 82 5a 20                 a3 = u64 [s0 + 0x20]
  4396: 82 8b 18                 a4 = u64 [a1 + 0x18]
  4399: 64 76                    s1 = a0
  4401: 33 08 08 30 01           a1 = 0x13008
  4406: 33 09 01                 a2 = 0x1
  4409: 64 a7                    a0 = a3
  4411: b4 b0 02 b8 00           ra = 184, jump [a4]
      :                          @315 [@dyn 92]
  4416: 7b 15                    u64 [sp] = s0
  4418: 78 17 08                 u8 [sp + 0x8] = a0
  4421: 46 11 09                 u8 [sp + 9] = 0
  4424: 7b 16 10                 u64 [sp + 0x10] = s1
  4427: 33 05 24                 s0 = 0x24
  4430: 64 17                    a0 = sp
  4432: 95 18 10                 a1 = sp + 0x10
  4435: 33 09 24                 a2 = 0x24
  4438: 50 20 ba 00 79 08 03     ra = 186, jump @13952
      :                          @316 [@dyn 93]
  4445: 95 66 10                 s1 = s1 + 0x10
  4448: 7b 16 10                 u64 [sp + 0x10] = s1
  4451: 64 17                    a0 = sp
  4453: 95 18 10                 a1 = sp + 0x10
  4456: 64 59                    a2 = s0
  4458: 50 20 bc 00 65 08 03     ra = 188, jump @13952
      :                          @317 [@dyn 94]
  4465: 33 07 01                 a0 = 0x1
  4468: 7c 18 08                 a1 = u8 [sp + 0x8]
  4471: 52 08 1b                 jump @319 if a1 != 0
      :                          @318
  4474: 82 17                    a0 = u64 [sp]
  4476: 82 78 28                 a1 = u64 [a0 + 0x28]
  4479: 82 77 20                 a0 = u64 [a0 + 0x20]
  4482: 82 8a 18                 a3 = u64 [a1 + 0x18]
  4485: 33 08 49 30 01           a1 = 0x13049
  4490: 33 09 01                 a2 = 0x1
  4493: b4 a0 02 be 00           ra = 190, jump [a3]
      :                          @319 [@dyn 95]
  4498: 82 10 28                 ra = u64 [sp + 0x28]
  4501: 82 15 20                 s0 = u64 [sp + 0x20]
  4504: 82 16 18                 s1 = u64 [sp + 0x18]
  4507: 95 11 30                 sp = sp + 0x30
  4510: 32 00                    ret
      :                          @320 [@dyn 96]
  4512: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  4515: 7b 10 28                 u64 [sp + 0x28] = ra
  4518: 7b 15 20                 u64 [sp + 0x20] = s0
  4521: 7b 16 18                 u64 [sp + 0x18] = s1
  4524: 64 85                    s0 = a1
  4526: 82 88 28                 a1 = u64 [a1 + 0x28]
  4529: 82 5a 20                 a3 = u64 [s0 + 0x20]
  4532: 82 8b 18                 a4 = u64 [a1 + 0x18]
  4535: 64 76                    s1 = a0
  4537: 33 08 08 30 01           a1 = 0x13008
  4542: 33 09 01                 a2 = 0x1
  4545: 64 a7                    a0 = a3
  4547: b4 b0 02 c2 00           ra = 194, jump [a4]
      :                          @321 [@dyn 97]
  4552: 7b 15                    u64 [sp] = s0
  4554: 78 17 08                 u8 [sp + 0x8] = a0
  4557: 46 11 09                 u8 [sp + 9] = 0
  4560: 7b 16 10                 u64 [sp + 0x10] = s1
  4563: 33 05 4a                 s0 = 0x4a
  4566: 64 17                    a0 = sp
  4568: 95 18 10                 a1 = sp + 0x10
  4571: 33 09 4a                 a2 = 0x4a
  4574: 50 20 c4 00 f1 07 03     ra = 196, jump @13952
      :                          @322 [@dyn 98]
  4581: 95 67 01                 a0 = s1 + 0x1
  4584: 7b 17 10                 u64 [sp + 0x10] = a0
  4587: 64 17                    a0 = sp
  4589: 95 18 10                 a1 = sp + 0x10
  4592: 64 59                    a2 = s0
  4594: 50 20 c6 00 dd 07 03     ra = 198, jump @13952
      :                          @323 [@dyn 99]
  4601: 95 67 02                 a0 = s1 + 0x2
  4604: 7b 17 10                 u64 [sp + 0x10] = a0
  4607: 64 17                    a0 = sp
  4609: 95 18 10                 a1 = sp + 0x10
  4612: 64 59                    a2 = s0
  4614: 50 20 c8 00 c9 07 03     ra = 200, jump @13952
      :                          @324 [@dyn 100]
  4621: 95 67 03                 a0 = s1 + 0x3
  4624: 7b 17 10                 u64 [sp + 0x10] = a0
  4627: 64 17                    a0 = sp
  4629: 95 18 10                 a1 = sp + 0x10
  4632: 64 59                    a2 = s0
  4634: 50 20 ca 00 b5 07 03     ra = 202, jump @13952
      :                          @325 [@dyn 101]
  4641: 95 67 04                 a0 = s1 + 0x4
  4644: 7b 17 10                 u64 [sp + 0x10] = a0
  4647: 64 17                    a0 = sp
  4649: 95 18 10                 a1 = sp + 0x10
  4652: 64 59                    a2 = s0
  4654: 50 20 cc 00 a1 07 03     ra = 204, jump @13952
      :                          @326 [@dyn 102]
  4661: 95 67 05                 a0 = s1 + 0x5
  4664: 7b 17 10                 u64 [sp + 0x10] = a0
  4667: 64 17                    a0 = sp
  4669: 95 18 10                 a1 = sp + 0x10
  4672: 64 59                    a2 = s0
  4674: 50 20 ce 00 8d 07 03     ra = 206, jump @13952
      :                          @327 [@dyn 103]
  4681: 95 67 06                 a0 = s1 + 0x6
  4684: 7b 17 10                 u64 [sp + 0x10] = a0
  4687: 64 17                    a0 = sp
  4689: 95 18 10                 a1 = sp + 0x10
  4692: 64 59                    a2 = s0
  4694: 50 20 d0 00 79 07 03     ra = 208, jump @13952
      :                          @328 [@dyn 104]
  4701: 95 67 07                 a0 = s1 + 0x7
  4704: 7b 17 10                 u64 [sp + 0x10] = a0
  4707: 64 17                    a0 = sp
  4709: 95 18 10                 a1 = sp + 0x10
  4712: 64 59                    a2 = s0
  4714: 50 20 d2 00 65 07 03     ra = 210, jump @13952
      :                          @329 [@dyn 105]
  4721: 95 67 08                 a0 = s1 + 0x8
  4724: 7b 17 10                 u64 [sp + 0x10] = a0
  4727: 64 17                    a0 = sp
  4729: 95 18 10                 a1 = sp + 0x10
  4732: 64 59                    a2 = s0
  4734: 50 20 d4 00 51 07 03     ra = 212, jump @13952
      :                          @330 [@dyn 106]
  4741: 95 67 09                 a0 = s1 + 0x9
  4744: 7b 17 10                 u64 [sp + 0x10] = a0
  4747: 64 17                    a0 = sp
  4749: 95 18 10                 a1 = sp + 0x10
  4752: 64 59                    a2 = s0
  4754: 50 20 d6 00 3d 07 03     ra = 214, jump @13952
      :                          @331 [@dyn 107]
  4761: 95 67 0a                 a0 = s1 + 0xa
  4764: 7b 17 10                 u64 [sp + 0x10] = a0
  4767: 64 17                    a0 = sp
  4769: 95 18 10                 a1 = sp + 0x10
  4772: 64 59                    a2 = s0
  4774: 50 20 d8 00 29 07 03     ra = 216, jump @13952
      :                          @332 [@dyn 108]
  4781: 95 67 0b                 a0 = s1 + 0xb
  4784: 7b 17 10                 u64 [sp + 0x10] = a0
  4787: 64 17                    a0 = sp
  4789: 95 18 10                 a1 = sp + 0x10
  4792: 64 59                    a2 = s0
  4794: 50 20 da 00 15 07 03     ra = 218, jump @13952
      :                          @333 [@dyn 109]
  4801: 95 67 0c                 a0 = s1 + 0xc
  4804: 7b 17 10                 u64 [sp + 0x10] = a0
  4807: 64 17                    a0 = sp
  4809: 95 18 10                 a1 = sp + 0x10
  4812: 64 59                    a2 = s0
  4814: 50 20 dc 00 01 07 03     ra = 220, jump @13952
      :                          @334 [@dyn 110]
  4821: 95 67 0d                 a0 = s1 + 0xd
  4824: 7b 17 10                 u64 [sp + 0x10] = a0
  4827: 64 17                    a0 = sp
  4829: 95 18 10                 a1 = sp + 0x10
  4832: 64 59                    a2 = s0
  4834: 50 20 de 00 ed 06 03     ra = 222, jump @13952
      :                          @335 [@dyn 111]
  4841: 95 67 0e                 a0 = s1 + 0xe
  4844: 7b 17 10                 u64 [sp + 0x10] = a0
  4847: 64 17                    a0 = sp
  4849: 95 18 10                 a1 = sp + 0x10
  4852: 64 59                    a2 = s0
  4854: 50 20 e0 00 d9 06 03     ra = 224, jump @13952
      :                          @336 [@dyn 112]
  4861: 95 67 0f                 a0 = s1 + 0xf
  4864: 7b 17 10                 u64 [sp + 0x10] = a0
  4867: 64 17                    a0 = sp
  4869: 95 18 10                 a1 = sp + 0x10
  4872: 64 59                    a2 = s0
  4874: 50 20 e2 00 c5 06 03     ra = 226, jump @13952
      :                          @337 [@dyn 113]
  4881: 95 67 10                 a0 = s1 + 0x10
  4884: 7b 17 10                 u64 [sp + 0x10] = a0
  4887: 64 17                    a0 = sp
  4889: 95 18 10                 a1 = sp + 0x10
  4892: 64 59                    a2 = s0
  4894: 50 20 e4 00 b1 06 03     ra = 228, jump @13952
      :                          @338 [@dyn 114]
  4901: 95 67 11                 a0 = s1 + 0x11
  4904: 7b 17 10                 u64 [sp + 0x10] = a0
  4907: 64 17                    a0 = sp
  4909: 95 18 10                 a1 = sp + 0x10
  4912: 64 59                    a2 = s0
  4914: 50 20 e6 00 9d 06 03     ra = 230, jump @13952
      :                          @339 [@dyn 115]
  4921: 95 67 12                 a0 = s1 + 0x12
  4924: 7b 17 10                 u64 [sp + 0x10] = a0
  4927: 64 17                    a0 = sp
  4929: 95 18 10                 a1 = sp + 0x10
  4932: 64 59                    a2 = s0
  4934: 50 20 e8 00 89 06 03     ra = 232, jump @13952
      :                          @340 [@dyn 116]
  4941: 95 67 13                 a0 = s1 + 0x13
  4944: 7b 17 10                 u64 [sp + 0x10] = a0
  4947: 64 17                    a0 = sp
  4949: 95 18 10                 a1 = sp + 0x10
  4952: 64 59                    a2 = s0
  4954: 50 20 ea 00 75 06 03     ra = 234, jump @13952
      :                          @341 [@dyn 117]
  4961: 95 67 14                 a0 = s1 + 0x14
  4964: 7b 17 10                 u64 [sp + 0x10] = a0
  4967: 64 17                    a0 = sp
  4969: 95 18 10                 a1 = sp + 0x10
  4972: 64 59                    a2 = s0
  4974: 50 20 ec 00 61 06 03     ra = 236, jump @13952
      :                          @342 [@dyn 118]
  4981: 95 67 15                 a0 = s1 + 0x15
  4984: 7b 17 10                 u64 [sp + 0x10] = a0
  4987: 64 17                    a0 = sp
  4989: 95 18 10                 a1 = sp + 0x10
  4992: 64 59                    a2 = s0
  4994: 50 20 ee 00 4d 06 03     ra = 238, jump @13952
      :                          @343 [@dyn 119]
  5001: 95 67 16                 a0 = s1 + 0x16
  5004: 7b 17 10                 u64 [sp + 0x10] = a0
  5007: 64 17                    a0 = sp
  5009: 95 18 10                 a1 = sp + 0x10
  5012: 64 59                    a2 = s0
  5014: 50 20 f0 00 39 06 03     ra = 240, jump @13952
      :                          @344 [@dyn 120]
  5021: 95 67 17                 a0 = s1 + 0x17
  5024: 7b 17 10                 u64 [sp + 0x10] = a0
  5027: 64 17                    a0 = sp
  5029: 95 18 10                 a1 = sp + 0x10
  5032: 64 59                    a2 = s0
  5034: 50 20 f2 00 25 06 03     ra = 242, jump @13952
      :                          @345 [@dyn 121]
  5041: 95 67 18                 a0 = s1 + 0x18
  5044: 7b 17 10                 u64 [sp + 0x10] = a0
  5047: 64 17                    a0 = sp
  5049: 95 18 10                 a1 = sp + 0x10
  5052: 64 59                    a2 = s0
  5054: 50 20 f4 00 11 06 03     ra = 244, jump @13952
      :                          @346 [@dyn 122]
  5061: 95 67 19                 a0 = s1 + 0x19
  5064: 7b 17 10                 u64 [sp + 0x10] = a0
  5067: 64 17                    a0 = sp
  5069: 95 18 10                 a1 = sp + 0x10
  5072: 64 59                    a2 = s0
  5074: 50 20 f6 00 fd 05 03     ra = 246, jump @13952
      :                          @347 [@dyn 123]
  5081: 95 67 1a                 a0 = s1 + 0x1a
  5084: 7b 17 10                 u64 [sp + 0x10] = a0
  5087: 64 17                    a0 = sp
  5089: 95 18 10                 a1 = sp + 0x10
  5092: 64 59                    a2 = s0
  5094: 50 20 f8 00 e9 05 03     ra = 248, jump @13952
      :                          @348 [@dyn 124]
  5101: 95 67 1b                 a0 = s1 + 0x1b
  5104: 7b 17 10                 u64 [sp + 0x10] = a0
  5107: 64 17                    a0 = sp
  5109: 95 18 10                 a1 = sp + 0x10
  5112: 64 59                    a2 = s0
  5114: 50 20 fa 00 d5 05 03     ra = 250, jump @13952
      :                          @349 [@dyn 125]
  5121: 95 67 1c                 a0 = s1 + 0x1c
  5124: 7b 17 10                 u64 [sp + 0x10] = a0
  5127: 64 17                    a0 = sp
  5129: 95 18 10                 a1 = sp + 0x10
  5132: 64 59                    a2 = s0
  5134: 50 20 fc 00 c1 05 03     ra = 252, jump @13952
      :                          @350 [@dyn 126]
  5141: 95 67 1d                 a0 = s1 + 0x1d
  5144: 7b 17 10                 u64 [sp + 0x10] = a0
  5147: 64 17                    a0 = sp
  5149: 95 18 10                 a1 = sp + 0x10
  5152: 64 59                    a2 = s0
  5154: 50 20 fe 00 ad 05 03     ra = 254, jump @13952
      :                          @351 [@dyn 127]
  5161: 95 67 1e                 a0 = s1 + 0x1e
  5164: 7b 17 10                 u64 [sp + 0x10] = a0
  5167: 64 17                    a0 = sp
  5169: 95 18 10                 a1 = sp + 0x10
  5172: 64 59                    a2 = s0
  5174: 50 20 00 01 99 05 03     ra = 256, jump @13952
      :                          @352 [@dyn 128]
  5181: 95 66 1f                 s1 = s1 + 0x1f
  5184: 7b 16 10                 u64 [sp + 0x10] = s1
  5187: 64 17                    a0 = sp
  5189: 95 18 10                 a1 = sp + 0x10
  5192: 64 59                    a2 = s0
  5194: 50 20 02 01 85 05 03     ra = 258, jump @13952
      :                          @353 [@dyn 129]
  5201: 33 07 01                 a0 = 0x1
  5204: 7c 18 08                 a1 = u8 [sp + 0x8]
  5207: 52 08 1b                 jump @355 if a1 != 0
      :                          @354
  5210: 82 17                    a0 = u64 [sp]
  5212: 82 78 28                 a1 = u64 [a0 + 0x28]
  5215: 82 77 20                 a0 = u64 [a0 + 0x20]
  5218: 82 8a 18                 a3 = u64 [a1 + 0x18]
  5221: 33 08 49 30 01           a1 = 0x13049
  5226: 33 09 01                 a2 = 0x1
  5229: b4 a0 02 04 01           ra = 260, jump [a3]
      :                          @355 [@dyn 130]
  5234: 82 10 28                 ra = u64 [sp + 0x28]
  5237: 82 15 20                 s0 = u64 [sp + 0x20]
  5240: 82 16 18                 s1 = u64 [sp + 0x18]
  5243: 95 11 30                 sp = sp + 0x30
  5246: 32 00                    ret
      :                          @356
  5248: 95 11 28 ff              sp = sp + 0xffffffffffffff28
  5252: 7b 10 d0 00              u64 [sp + 0xd0] = ra
  5256: 7b 15 c8 00              u64 [sp + 0xc8] = s0
  5260: 7b 16 c0 00              u64 [sp + 0xc0] = s1
  5264: 33 09 15                 a2 = 0x15
  5267: 64 83                    t1 = a1
  5269: 7b 17 68                 u64 [sp + 0x68] = a0
  5272: ae 98 25                 jump @359 if a1 >=u a2
      :                          @357
  5275: 33 07 01                 a0 = 0x1
  5278: ae 37 45 05              jump @458 if a0 >=u t1
      :                          @358
  5282: 33 09 01                 a2 = 0x1
  5285: 82 17 68                 a0 = u64 [sp + 0x68]
  5288: 64 38                    a1 = t1
  5290: 82 10 d0 00              ra = u64 [sp + 0xd0]
  5294: 82 15 c8 00              s0 = u64 [sp + 0xc8]
  5298: 82 16 c0 00              s1 = u64 [sp + 0xc0]
  5302: 95 11 d8 00              sp = sp + 0xd8
  5306: 28 1a 15                 jump @825
      :                          @359
  5309: 97 37 02                 a0 = t1 << 0x2
  5312: 14 08 f8 ff ff ff ff ff ff 7f a1 = 0x7ffffffffffffff8
  5322: d2 87 07                 a0 = a0 & a1
  5325: 7b 17 20                 u64 [sp + 0x20] = a0
  5328: 33 07 c0 22 03           a0 = 0x322c0
  5333: 33 02 00 00 01           t0 = 0x10000
  5338: c8 27 09                 a2 = a0 + t0
  5341: 01                       fallthrough
      :                          @360
  5342: 82 9a                    a3 = u64 [a2]
  5344: 82 1b 20                 a4 = u64 [sp + 0x20]
  5347: c8 ab 0b                 a4 = a4 + a3
  5350: ac ab 0f 05              jump @459 if a4 <u a3
      :                          @361
  5354: 95 b8 08                 a1 = a4 + 0x8
  5357: d8 b8 0c                 a5 = a1 <u a4
  5360: d8 82 08                 a1 = t0 <u a1
  5363: d4 c8 08                 a1 = a1 | a5
  5366: 52 08 ff 04              jump @459 if a1 != 0
      :                          @362
  5370: c9 b7 08                 a1 = a0 - a4
  5373: c8 28 08                 a1 = a1 + t0
  5376: 84 8c 07                 a5 = a1 & 0x7
  5379: c8 cb 0b                 a4 = a4 + a5
  5382: 01                       fallthrough
      :                          @363
  5383: 82 95                    s0 = u64 [a2]
  5385: ab a5 d5                 jump @360 if s0 != a3
      :                          @364
  5388: 7b 9b                    u64 [a2] = a4
  5390: c9 c8 08                 a1 = a1 - a5
  5393: 7b 18 b0 00              u64 [sp + 0xb0] = a1
  5397: 33 09 c0 22 03           a2 = 0x322c0
  5402: 33 02 00 00 01           t0 = 0x10000
  5407: c8 29 0b                 a4 = a2 + t0
  5410: 01                       fallthrough
      :                          @365
  5411: 82 bc                    a5 = u64 [a4]
  5413: 95 c6 00 01              s1 = a5 + 0x100
  5417: ac c6 cc 04              jump @459 if s1 <u a5
      :                          @366
  5421: 95 67 08                 a0 = s1 + 0x8
  5424: d8 67 08                 a1 = a0 <u s1
  5427: d8 72 07                 a0 = t0 <u a0
  5430: d4 87 07                 a0 = a0 | a1
  5433: 52 07 bc 04              jump @459 if a0 != 0
      :                          @367
  5437: c9 69 07                 a0 = a2 - s1
  5440: c8 27 07                 a0 = a0 + t0
  5443: 84 78 07                 a1 = a0 & 0x7
  5446: c8 86 06                 s1 = s1 + a1
  5449: 01                       fallthrough
      :                          @368
  5450: 82 b5                    s0 = u64 [a4]
  5452: ab c5 d7                 jump @365 if s0 != a5
      :                          @369
  5455: 7b b6                    u64 [a4] = s1
  5457: 33 0c                    a5 = 0
  5459: 33 02                    t0 = 0
  5461: c9 87 04                 t2 = a0 - a1
  5464: 82 17 68                 a0 = u64 [sp + 0x68]
  5467: 95 78 10                 a1 = a0 + 0x10
  5470: 7b 18                    u64 [sp] = a1
  5472: 95 77 f8                 a0 = a0 + 0xfffffffffffffff8
  5475: 7b 17 38                 u64 [sp + 0x38] = a0
  5478: 49 11 28 10              u64 [sp + 40] = 0x10
  5482: 33 08 c0 22 03           a1 = 0x322c0
  5487: 49 11 08 01 10           u64 [sp + 8] = 0x1001
  5492: 7b 18 10                 u64 [sp + 0x10] = a1
  5495: 95 88 00 00 01           a1 = a1 + 0x10000
  5500: 7b 18 18                 u64 [sp + 0x18] = a1
  5503: 7b 13 58                 u64 [sp + 0x58] = t1
  5506: 28 0c                    jump @372
      :                          @370
  5508: 64 54                    t2 = s0
  5510: 82 1c 30                 a5 = u64 [sp + 0x30]
  5513: 01                       fallthrough
      :                          @371
  5514: ae 3c 00 04              jump @446 if a5 >=u t1
      :                          @372
  5518: 64 c0                    ra = a5
  5520: c9 c3 09                 a2 = t1 - a5
  5523: 97 cb 03                 a4 = a5 << 0x3
  5526: 82 17 68                 a0 = u64 [sp + 0x68]
  5529: c8 b7 07                 a0 = a0 + a4
  5532: 55 19 02 63              jump @380 if a2 >=u 2
      :                          @373
  5536: 64 98                    a1 = a2
  5538: c8 08 0c                 a5 = a1 + ra
  5541: 28 06                    jump @375
      :                          @374
  5543: c8 08 0c                 a5 = a1 + ra
  5546: 01                       fallthrough
      :                          @375
  5547: d8 0c 09                 a2 = a5 <u ra
  5550: d8 c3 0a                 a3 = t1 <u a5
  5553: d4 a9 09                 a2 = a2 | a3
  5556: 52 09 45 04              jump @463 if a2 != 0
      :                          @376
  5560: 88 89 0a                 a2 = a1 <u 0xa
  5563: d8 3c 0a                 a3 = a5 <u t1
  5566: d2 a9 09                 a2 = a2 & a3
  5569: 7b 12 a8 00              u64 [sp + 0xa8] = t0
  5573: 7b 10 a0 00              u64 [sp + 0xa0] = ra
  5577: 51 09 9d 00              jump @392 if a2 == 0
      :                          @377
  5581: 95 09 0a                 a2 = ra + 0xa
  5584: e6 39 0a                 a3 = minu(a2, t1)
  5587: ac 0a 27 04              jump @464 if a3 <u ra
      :                          @378
  5591: 64 45                    s0 = t2
  5593: 33 09 01                 a2 = 0x1
  5596: e4 98 09                 a2 = maxu(a1, a2)
  5599: c9 0a 06                 s1 = a3 - ra
  5602: 64 68                    a1 = s1
  5604: 7b 1a 30                 u64 [sp + 0x30] = a3
  5607: 50 20 06 01 ed 13        ra = 262, jump @825
      :                          @379 [@dyn 131]
  5613: 82 10 a0 00              ra = u64 [sp + 0xa0]
  5617: 82 1c 30                 a5 = u64 [sp + 0x30]
  5620: 82 13 58                 t1 = u64 [sp + 0x58]
  5623: 64 54                    t2 = s0
  5625: 82 12 a8 00              t0 = u64 [sp + 0xa8]
  5629: 28 6d                    jump @393
      :                          @380
  5631: 82 7a 08                 a3 = u64 [a0 + 0x8]
  5634: 82 78                    a1 = u64 [a0]
  5636: ae 8a ff 00              jump @402 if a3 >=u a1
      :                          @381
  5640: 33 08 02                 a1 = 0x2
  5643: aa 89 1f                 jump @386 if a2 == a1
      :                          @382
  5646: 82 18                    a1 = u64 [sp]
  5648: c8 8b 0b                 a4 = a4 + a1
  5651: 33 08 02                 a1 = 0x2
  5654: 01                       fallthrough
      :                          @383
  5655: 64 ac                    a5 = a3
  5657: 82 ba                    a3 = u64 [a4]
  5659: ae ca 0f                 jump @386 if a3 >=u a5
      :                          @384
  5662: 95 88 01                 a1 = a1 + 0x1
  5665: 95 bb 08                 a4 = a4 + 0x8
  5668: ab 89 f3                 jump @383 if a2 != a1
      :                          @385
  5671: 64 98                    a1 = a2
  5673: 01                       fallthrough
      :                          @386
  5674: c8 08 0c                 a5 = a1 + ra
  5677: ac 8c ce 03              jump @465 if a5 <u a1
      :                          @387
  5681: ac c3 cb 03              jump @466 if t1 <u a5
      :                          @388
  5685: 98 89 01                 a2 = a1 >> 0x1
  5688: 51 09 73 ff              jump @375 if a2 == 0
      :                          @389
  5692: 64 c6                    s1 = a5
  5694: c8 08 0a                 a3 = a1 + ra
  5697: 97 aa 03                 a3 = a3 << 0x3
  5700: 82 1b 38                 a4 = u64 [sp + 0x38]
  5703: c8 ba 0a                 a3 = a3 + a4
  5706: 64 7b                    a4 = a0
  5708: 01                       fallthrough
      :                          @390
  5709: 82 ac                    a5 = u64 [a3]
  5711: 82 b5                    s0 = u64 [a4]
  5713: 7b bc                    u64 [a4] = a5
  5715: 7b a5                    u64 [a3] = s0
  5717: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  5720: 95 bb 08                 a4 = a4 + 0x8
  5723: 95 aa f8                 a3 = a3 + 0xfffffffffffffff8
  5726: 52 09 ef                 jump @390 if a2 != 0
      :                          @391
  5729: 64 6c                    a5 = s1
  5731: 28 48 ff                 jump @375
      :                          @392
  5734: c9 0c 06                 s1 = a5 - ra
  5737: 01                       fallthrough
      :                          @393
  5738: 97 27 04                 a0 = t0 << 0x4
  5741: 7b 17 b8 00              u64 [sp + 0xb8] = a0
  5745: 82 17 28                 a0 = u64 [sp + 0x28]
  5748: 7b 1c 30                 u64 [sp + 0x30] = a5
  5751: ab 72 e4 00              jump @413 if t0 != a0
      :                          @394
  5755: 7b 16 98 00              u64 [sp + 0x98] = s1
  5759: 97 27 01                 a0 = t0 << 0x1
  5762: 7b 17 28                 u64 [sp + 0x28] = a0
  5765: 97 22 05                 t0 = t0 << 0x5
  5768: 82 16 10                 s1 = u64 [sp + 0x10]
  5771: 33 03 00 00 01           t1 = 0x10000
  5776: 82 17 18                 a0 = u64 [sp + 0x18]
  5779: 01                       fallthrough
      :                          @395
  5780: 82 78                    a1 = u64 [a0]
  5782: c8 28 09                 a2 = a1 + t0
  5785: ac 89 5c 03              jump @459 if a2 <u a1
      :                          @396
  5789: 95 9a 08                 a3 = a2 + 0x8
  5792: d8 9a 0b                 a4 = a3 <u a2
  5795: d8 a3 0a                 a3 = t1 <u a3
  5798: d4 ba 0a                 a3 = a3 | a4
  5801: 52 0a 4c 03              jump @459 if a3 != 0
      :                          @397
  5805: c9 96 0a                 a3 = s1 - a2
  5808: c8 3a 0a                 a3 = a3 + t1
  5811: 84 ab 07                 a4 = a3 & 0x7
  5814: c8 b9 09                 a2 = a2 + a4
  5817: 01                       fallthrough
      :                          @398
  5818: 82 7c                    a5 = u64 [a0]
  5820: ab 8c d8                 jump @395 if a5 != a1
      :                          @399
  5823: 7b 79                    u64 [a0] = a2
  5825: c9 ba 07                 a0 = a3 - a4
  5828: 7b 17 60                 u64 [sp + 0x60] = a0
  5831: 64 45                    s0 = t2
  5833: 64 48                    a1 = t2
  5835: 82 16 b8 00              s1 = u64 [sp + 0xb8]
  5839: 64 69                    a2 = s1
  5841: 50 20 08 01 18 f3 02     ra = 264, jump @13633
      :                          @400 [@dyn 132]
  5848: 82 17 08                 a0 = u64 [sp + 0x8]
  5851: 82 12 a8 00              t0 = u64 [sp + 0xa8]
  5855: ac 72 48                 jump @407 if t0 <u a0
      :                          @401
  5858: 82 15 60                 s0 = u64 [sp + 0x60]
  5861: c8 65 07                 a0 = s0 + s1
  5864: 82 18 98 00              a1 = u64 [sp + 0x98]
  5868: 7b 78                    u64 [a0] = a1
  5870: 82 18 a0 00              a1 = u64 [sp + 0xa0]
  5874: 7b 78 08                 u64 [a0 + 0x8] = a1
  5877: 95 22 01                 t0 = t0 + 0x1
  5880: 82 13 58                 t1 = u64 [sp + 0x58]
  5883: 64 27                    a0 = t0
  5885: 7b 15 60                 u64 [sp + 0x60] = s0
  5888: 28 da 00                 jump @419
      :                          @402
  5891: 33 08 02                 a1 = 0x2
  5894: aa 89 a1 fe              jump @374 if a2 == a1
      :                          @403
  5898: 82 18                    a1 = u64 [sp]
  5900: c8 8b 0b                 a4 = a4 + a1
  5903: 33 08 02                 a1 = 0x2
  5906: 01                       fallthrough
      :                          @404
  5907: 64 ac                    a5 = a3
  5909: 82 ba                    a3 = u64 [a4]
  5911: ac ca 90 fe              jump @374 if a3 <u a5
      :                          @405
  5915: 95 88 01                 a1 = a1 + 0x1
  5918: 95 bb 08                 a4 = a4 + 0x8
  5921: ab 89 f2                 jump @404 if a2 != a1
      :                          @406
  5924: 28 7c fe                 jump @373
      :                          @407
  5927: 82 1b 18                 a4 = u64 [sp + 0x18]
  5930: 82 1c 30                 a5 = u64 [sp + 0x30]
  5933: 82 14 60                 t2 = u64 [sp + 0x60]
  5936: 82 10 a0 00              ra = u64 [sp + 0xa0]
  5940: 01                       fallthrough
      :                          @408
  5941: 82 b7                    a0 = u64 [a4]
  5943: c9 7b 08                 a1 = a4 - a0
  5946: ab 58 19                 jump @412 if a1 != s0
      :                          @409
  5949: c9 67 08                 a1 = a0 - s1
  5952: 01                       fallthrough
      :                          @410
  5953: 82 b9                    a2 = u64 [a4]
  5955: ab 79 f2                 jump @408 if a2 != a0
      :                          @411
  5958: 7b b8                    u64 [a4] = a1
  5960: 33 0a                    a3 = 0
  5962: 82 13 58                 t1 = u64 [sp + 0x58]
  5965: 82 16 98 00              s1 = u64 [sp + 0x98]
  5969: 28 0a                    jump @413
      :                          @412
  5971: 82 13 58                 t1 = u64 [sp + 0x58]
  5974: 82 16 98 00              s1 = u64 [sp + 0x98]
  5978: 01                       fallthrough
      :                          @413
  5979: 82 17 b8 00              a0 = u64 [sp + 0xb8]
  5983: c8 47 07                 a0 = a0 + t2
  5986: 7b 76                    u64 [a0] = s1
  5988: 95 22 01                 t0 = t0 + 0x1
  5991: 7b 70 08                 u64 [a0 + 0x8] = ra
  5994: 64 45                    s0 = t2
  5996: 53 12 02 1e fe           jump @371 if t0 <u 2
      :                          @414
  6001: 64 27                    a0 = t0
  6003: 7b 15 60                 u64 [sp + 0x60] = s0
  6006: 28 64                    jump @419
      :                          @415
  6008: 64 56                    s1 = s0
  6010: 64 b8                    a1 = a4
  6012: 01                       fallthrough
      :                          @416
  6013: 82 15 a8 00              s0 = u64 [sp + 0xa8]
  6017: 95 57 08                 a0 = s0 + 0x8
  6020: 7b 17 70                 u64 [sp + 0x70] = a0
  6023: c9 89 09                 a2 = a2 - a1
  6026: 64 67                    a0 = s1
  6028: 50 20 0a 01 5d f2 02     ra = 266, jump @13633
      :                          @417 [@dyn 133]
  6035: 82 17 78                 a0 = u64 [sp + 0x78]
  6038: 82 18 b8 00              a1 = u64 [sp + 0xb8]
  6042: c8 87 07                 a0 = a0 + a1
  6045: 7b 57                    u64 [s0] = a0
  6047: 82 17 80 00              a0 = u64 [sp + 0x80]
  6051: 82 18 70                 a1 = u64 [sp + 0x70]
  6054: 7b 87                    u64 [a1] = a0
  6056: 82 1a 88 00              a3 = u64 [sp + 0x88]
  6060: 95 a8 10                 a1 = a3 + 0x10
  6063: 82 17 90 00              a0 = u64 [sp + 0x90]
  6067: 85 77 ff                 a0 = a0 ^ 0xffffffffffffffff
  6070: 82 19 98 00              a2 = u64 [sp + 0x98]
  6074: c8 97 07                 a0 = a0 + a2
  6077: 97 79 04                 a2 = a0 << 0x4
  6080: 64 a7                    a0 = a3
  6082: 50 20 0c 01 d9 f2 02     ra = 268, jump @13651
      :                          @418 [@dyn 134]
  6089: 33 02 01                 t0 = 0x1
  6092: 82 13 58                 t1 = u64 [sp + 0x58]
  6095: 82 15 60                 s0 = u64 [sp + 0x60]
  6098: 82 17 a0 00              a0 = u64 [sp + 0xa0]
  6102: ae 72 ae fd              jump @370 if t0 >=u a0
      :                          @419
  6106: 64 76                    s1 = a0
  6108: 95 7c ff                 a5 = a0 + 0xffffffffffffffff
  6111: 97 c7 04                 a0 = a5 << 0x4
  6114: c8 57 07                 a0 = a0 + s0
  6117: 82 78 08                 a1 = u64 [a0 + 0x8]
  6120: 82 77                    a0 = u64 [a0]
  6122: c8 78 08                 a1 = a1 + a0
  6125: aa 38 3e                 jump @426 if a1 == t1
      :                          @420
  6128: 97 6a 04                 a3 = s1 << 0x4
  6131: c8 5a 00                 ra = a3 + s0
  6134: 82 09 e0                 a2 = u64 [ra + 0xffffffffffffffe0]
  6137: ae 97 32                 jump @426 if a0 >=u a2
      :                          @421
  6140: 33 02 02                 t0 = 0x2
  6143: 82 14 b0 00              t2 = u64 [sp + 0xb0]
  6147: ae 62 81 fd              jump @370 if t0 >=u s1
      :                          @422
  6151: 95 6a fd                 a3 = s1 + 0xfffffffffffffffd
  6154: 97 a8 04                 a1 = a3 << 0x4
  6157: c8 58 08                 a1 = a1 + s0
  6160: 82 88                    a1 = u64 [a1]
  6162: c8 79 0b                 a4 = a2 + a0
  6165: ae 8b 2a                 jump @428 if a4 >=u a1
      :                          @423
  6168: 33 02 03                 t0 = 0x3
  6171: ae 62 69 fd              jump @370 if t0 >=u s1
      :                          @424
  6175: 82 0b c0                 a4 = u64 [ra + 0xffffffffffffffc0]
  6178: c8 89 09                 a2 = a2 + a1
  6181: ae b9 1a                 jump @428 if a2 >=u a4
      :                          @425
  6184: 28 58 01                 jump @445
      :                          @426
  6187: 82 14 b0 00              t2 = u64 [sp + 0xb0]
  6191: 53 16 03 13              jump @429 if s1 <u 3
      :                          @427
  6195: 95 6a fd                 a3 = s1 + 0xfffffffffffffffd
  6198: 97 a8 04                 a1 = a3 << 0x4
  6201: c8 58 08                 a1 = a1 + s0
  6204: 82 88                    a1 = u64 [a1]
  6206: 01                       fallthrough
      :                          @428
  6207: ac 78 07                 jump @430 if a1 <u a0
      :                          @429
  6210: 95 6a fe                 a3 = s1 + 0xfffffffffffffffe
  6213: 01                       fallthrough
      :                          @430
  6214: ae 6a b0 01              jump @460 if a3 >=u s1
      :                          @431
  6218: 95 a7 01                 a0 = a3 + 0x1
  6221: ae 67 a9 01              jump @460 if a0 >=u s1
      :                          @432
  6225: 97 a8 04                 a1 = a3 << 0x4
  6228: c8 85 09                 a2 = s0 + a1
  6231: 97 77 04                 a0 = a0 << 0x4
  6234: c8 57 07                 a0 = a0 + s0
  6237: 82 7b                    a4 = u64 [a0]
  6239: 7b 17 a8 00              u64 [sp + 0xa8] = a0
  6243: 82 78 08                 a1 = u64 [a0 + 0x8]
  6246: 82 97 08                 a0 = u64 [a2 + 0x8]
  6249: c8 b8 08                 a1 = a1 + a4
  6252: ac 78 8b 01              jump @461 if a1 <u a0
      :                          @433
  6256: ac 83 88 01              jump @462 if t1 <u a1
      :                          @434
  6260: 7b 1b 78                 u64 [sp + 0x78] = a4
  6263: 7b 1a 90 00              u64 [sp + 0x90] = a3
  6267: 7b 16 98 00              u64 [sp + 0x98] = s1
  6271: 7b 1c a0 00              u64 [sp + 0xa0] = a5
  6275: 7b 19 88 00              u64 [sp + 0x88] = a2
  6279: 82 9b                    a4 = u64 [a2]
  6281: c9 78 0a                 a3 = a1 - a0
  6284: 7b 17 80 00              u64 [sp + 0x80] = a0
  6288: 97 76 03                 s1 = a0 << 0x3
  6291: 82 17 68                 a0 = u64 [sp + 0x68]
  6294: c8 76 06                 s1 = s1 + a0
  6297: 97 b9 03                 a2 = a4 << 0x3
  6300: c8 96 05                 s0 = s1 + a2
  6303: c9 ba 07                 a0 = a3 - a4
  6306: 97 88 03                 a1 = a1 << 0x3
  6309: 7b 18 70                 u64 [sp + 0x70] = a1
  6312: 7b 1b b8 00              u64 [sp + 0xb8] = a4
  6316: ae b7 69                 jump @440 if a0 >=u a4
      :                          @435
  6319: 97 79 03                 a2 = a0 << 0x3
  6322: 7b 19 48                 u64 [sp + 0x48] = a2
  6325: 7b 17 50                 u64 [sp + 0x50] = a0
  6328: 64 47                    a0 = t2
  6330: 64 58                    a1 = s0
  6332: 50 20 0e 01 2d f1 02     ra = 270, jump @13633
      :                          @436 [@dyn 135]
  6339: 82 1b b0 00              a4 = u64 [sp + 0xb0]
  6343: 82 17 50                 a0 = u64 [sp + 0x50]
  6346: 82 18 b8 00              a1 = u64 [sp + 0xb8]
  6350: e5 78 07                 a0 = mins(a1, a0)
  6353: 82 19 48                 a2 = u64 [sp + 0x48]
  6356: c8 b9 09                 a2 = a2 + a4
  6359: 58 07 a1 fe              jump @415 if a0 <=s 0
      :                          @437
  6363: 82 17 38                 a0 = u64 [sp + 0x38]
  6366: 82 18 70                 a1 = u64 [sp + 0x70]
  6369: c8 87 07                 a0 = a0 + a1
  6372: 01                       fallthrough
      :                          @438
  6373: 82 98 f8                 a1 = u64 [a2 + 0xfffffffffffffff8]
  6376: 82 5a f8                 a3 = u64 [s0 + 0xfffffffffffffff8]
  6379: 95 99 f8                 a2 = a2 + 0xfffffffffffffff8
  6382: d8 a8 08                 a1 = a1 <u a3
  6385: 97 8a 03                 a3 = a1 << 0x3
  6388: c9 a5 05                 s0 = s0 - a3
  6391: c8 a9 09                 a2 = a2 + a3
  6394: 64 5a                    a3 = s0
  6396: da 89 0a                 a3 = a2 if a1 == 0
  6399: 82 a8                    a1 = u64 [a3]
  6401: 7b 78                    u64 [a0] = a1
  6403: d8 56 08                 a1 = s1 <u s0
  6406: d8 9b 0a                 a3 = a4 <u a2
  6409: d2 a8 08                 a1 = a1 & a3
  6412: 95 77 f8                 a0 = a0 + 0xfffffffffffffff8
  6415: 52 08 d6                 jump @438 if a1 != 0
      :                          @439
  6418: 28 66 fe                 jump @415
      :                          @440
  6421: 8f b7                    a0 = a4 >s 0
  6423: 7b 17 50                 u64 [sp + 0x50] = a0
  6426: 64 47                    a0 = t2
  6428: 64 68                    a1 = s1
  6430: 7b 1a 40                 u64 [sp + 0x40] = a3
  6433: 7b 19 48                 u64 [sp + 0x48] = a2
  6436: 50 20 10 01 c5 f0 02     ra = 272, jump @13633
      :                          @441 [@dyn 136]
  6443: 82 18 b0 00              a1 = u64 [sp + 0xb0]
  6447: 82 17 b8 00              a0 = u64 [sp + 0xb8]
  6451: 82 19 40                 a2 = u64 [sp + 0x40]
  6454: d9 97 07                 a0 = a0 <s a2
  6457: 82 19 50                 a2 = u64 [sp + 0x50]
  6460: d2 97 07                 a0 = a0 & a2
  6463: 82 19 48                 a2 = u64 [sp + 0x48]
  6466: c8 89 09                 a2 = a2 + a1
  6469: 51 07 38 fe              jump @416 if a0 == 0
      :                          @442
  6473: 82 12 68                 t0 = u64 [sp + 0x68]
  6476: 82 17 70                 a0 = u64 [sp + 0x70]
  6479: c8 72 02                 t0 = t0 + a0
  6482: 01                       fallthrough
      :                          @443
  6483: 82 5a                    a3 = u64 [s0]
  6485: 82 8b                    a4 = u64 [a1]
  6487: d8 ba 0c                 a5 = a3 <u a4
  6490: 85 c7 01                 a0 = a5 ^ 0x1
  6493: e6 ba 0a                 a3 = minu(a3, a4)
  6496: 7b 6a                    u64 [s1] = a3
  6498: 97 cc 03                 a5 = a5 << 0x3
  6501: c8 c5 05                 s0 = s0 + a5
  6504: 97 77 03                 a0 = a0 << 0x3
  6507: c8 78 08                 a1 = a1 + a0
  6510: d8 98 07                 a0 = a1 <u a2
  6513: d8 25 0a                 a3 = s0 <u t0
  6516: d2 a7 07                 a0 = a0 & a3
  6519: 95 66 08                 s1 = s1 + 0x8
  6522: 52 07 d9                 jump @443 if a0 != 0
      :                          @444
  6525: 28 00 fe                 jump @416
      :                          @445
  6528: 64 54                    t2 = s0
  6530: 64 62                    t0 = s1
  6532: 82 1c 30                 a5 = u64 [sp + 0x30]
  6535: 28 03 fc                 jump @371
      :                          @446
  6538: 82 18 28                 a1 = u64 [sp + 0x28]
  6541: 56 28 00 10 27           jump @452 if a1 >u 4096
      :                          @447
  6546: 97 87 04                 a0 = a1 << 0x4
  6549: 33 08 c0 22 03           a1 = 0x322c0
  6554: 95 88 00 00 01           a1 = a1 + 0x10000
  6559: 01                       fallthrough
      :                          @448
  6560: 82 89                    a2 = u64 [a1]
  6562: c9 98 0a                 a3 = a1 - a2
  6565: ab 4a 0f                 jump @452 if a3 != t2
      :                          @449
  6568: c9 79 0a                 a3 = a2 - a0
  6571: 01                       fallthrough
      :                          @450
  6572: 82 8b                    a4 = u64 [a1]
  6574: ab 9b f2                 jump @448 if a4 != a2
      :                          @451
  6577: 7b 8a                    u64 [a1] = a3
  6579: 01                       fallthrough
      :                          @452
  6580: 33 07 01 40              a0 = 0x4001
  6584: 82 1c b0 00              a5 = u64 [sp + 0xb0]
  6588: ac 37 27                 jump @458 if a0 <u t1
      :                          @453
  6591: 33 07 c0 22 03           a0 = 0x322c0
  6596: 95 77 00 00 01           a0 = a0 + 0x10000
  6601: 01                       fallthrough
      :                          @454
  6602: 82 78                    a1 = u64 [a0]
  6604: c9 87 09                 a2 = a0 - a1
  6607: ab c9 14                 jump @458 if a2 != a5
      :                          @455
  6610: 82 19 20                 a2 = u64 [sp + 0x20]
  6613: c9 98 09                 a2 = a1 - a2
  6616: 01                       fallthrough
      :                          @456
  6617: 82 7a                    a3 = u64 [a0]
  6619: ab 8a ef                 jump @454 if a3 != a1
      :                          @457
  6622: 7b 79                    u64 [a0] = a2
  6624: 33 0b                    a4 = 0
  6626: 01                       fallthrough
      :                          @458
  6627: 82 10 d0 00              ra = u64 [sp + 0xd0]
  6631: 82 15 c8 00              s0 = u64 [sp + 0xc8]
  6635: 82 16 c0 00              s1 = u64 [sp + 0xc0]
  6639: 95 11 d8 00              sp = sp + 0xd8
  6643: 32 00                    ret
      :                          @459
  6645: 00                       trap
      :                          @460
  6646: 00                       trap
      :                          @461
  6647: 00                       trap
      :                          @462
  6648: 00                       trap
      :                          @463
  6649: 00                       trap
      :                          @464
  6650: 00                       trap
      :                          @465
  6651: 00                       trap
      :                          @466
  6652: 00                       trap
      :                          @467
  6653: 95 11 f8                 sp = sp + 0xfffffffffffffff8
  6656: 7b 15                    u64 [sp] = s0
  6658: 98 82 01                 t0 = a1 >> 0x1
  6661: 84 24 fe                 t2 = t0 & 0xfffffffffffffffe
  6664: 95 49 ff                 a2 = t2 + 0xffffffffffffffff
  6667: ae 89 c1 00              jump @476 if a2 >=u a1
      :                          @468
  6671: 95 8a ff                 a3 = a1 + 0xffffffffffffffff
  6674: 68 aa                    a3 = clz a3
  6676: 9c a3 ff                 t1 = 0xffffffffffffffff >> a3
  6679: 97 8a 0d                 a3 = a1 << 0xd
  6682: d3 8a 0a                 a3 = a3 ^ a1
  6685: 98 ab 07                 a4 = a3 >> 0x7
  6688: d3 ba 0a                 a3 = a3 ^ a4
  6691: 97 ab 11                 a4 = a3 << 0x11
  6694: d3 ab 0b                 a4 = a4 ^ a3
  6697: d2 3b 0a                 a3 = a4 & t1
  6700: d8 8a 0c                 a5 = a3 <u a1
  6703: 64 85                    s0 = a1
  6705: 94 c5                    s0 = 0 if a5 != 0
  6707: c9 5a 0a                 a3 = a3 - s0
  6710: ae 8a 94 00              jump @474 if a3 >=u a1
      :                          @469
  6714: 97 99 03                 a2 = a2 << 0x3
  6717: c8 79 09                 a2 = a2 + a0
  6720: 97 aa 03                 a3 = a3 << 0x3
  6723: c8 7a 0a                 a3 = a3 + a0
  6726: 82 ac                    a5 = u64 [a3]
  6728: 82 95                    s0 = u64 [a2]
  6730: 7b 9c                    u64 [a2] = a5
  6732: 7b a5                    u64 [a3] = s0
  6734: ae 84 7d                 jump @475 if t2 >=u a1
      :                          @470
  6737: 97 b9 0d                 a2 = a4 << 0xd
  6740: d3 b9 09                 a2 = a2 ^ a4
  6743: 98 9a 07                 a3 = a2 >> 0x7
  6746: d3 a9 09                 a2 = a2 ^ a3
  6749: 97 9b 11                 a4 = a2 << 0x11
  6752: d3 9b 0b                 a4 = a4 ^ a2
  6755: d2 3b 09                 a2 = a4 & t1
  6758: d8 89 0a                 a3 = a2 <u a1
  6761: 64 8c                    a5 = a1
  6763: 94 ac                    a5 = 0 if a3 != 0
  6765: c9 c9 0a                 a3 = a2 - a5
  6768: ae 8a 5a                 jump @474 if a3 >=u a1
      :                          @471
  6771: 97 44 03                 t2 = t2 << 0x3
  6774: 97 aa 03                 a3 = a3 << 0x3
  6777: c8 7a 0a                 a3 = a3 + a0
  6780: 82 a9                    a2 = u64 [a3]
  6782: c8 74 04                 t2 = t2 + a0
  6785: 82 4c                    a5 = u64 [t2]
  6787: 7b 49                    u64 [t2] = a2
  6789: 86 29 01                 a2 = t0 | 0x1
  6792: 7b ac                    u64 [a3] = a5
  6794: ae 89 42                 jump @476 if a2 >=u a1
      :                          @472
  6797: 97 ba 0d                 a3 = a4 << 0xd
  6800: d3 ba 0a                 a3 = a3 ^ a4
  6803: 98 ab 07                 a4 = a3 >> 0x7
  6806: d3 ba 0a                 a3 = a3 ^ a4
  6809: 97 ab 11                 a4 = a3 << 0x11
  6812: d3 ba 0a                 a3 = a3 ^ a4
  6815: d2 3a 0a                 a3 = a3 & t1
  6818: d8 8a 0b                 a4 = a3 <u a1
  6821: 64 8c                    a5 = a1
  6823: 94 bc                    a5 = 0 if a4 != 0
  6825: c9 ca 0a                 a3 = a3 - a5
  6828: ae 8a 1e                 jump @474 if a3 >=u a1
      :                          @473
  6831: 97 99 03                 a2 = a2 << 0x3
  6834: c8 79 09                 a2 = a2 + a0
  6837: 97 aa 03                 a3 = a3 << 0x3
  6840: c8 a7 07                 a0 = a0 + a3
  6843: 82 78                    a1 = u64 [a0]
  6845: 82 9a                    a3 = u64 [a2]
  6847: 7b 98                    u64 [a2] = a1
  6849: 7b 7a                    u64 [a0] = a3
  6851: 82 15                    s0 = u64 [sp]
  6853: 95 11 08                 sp = sp + 0x8
  6856: 32 00                    ret
      :                          @474
  6858: 00                       trap
      :                          @475
  6859: 00                       trap
      :                          @476
  6860: 00                       trap
      :                          @477
  6861: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  6864: 7b 10 20                 u64 [sp + 0x20] = ra
  6867: 7b 15 18                 u64 [sp + 0x18] = s0
  6870: 7b 16 10                 u64 [sp + 0x10] = s1
  6873: 98 82 01                 t0 = a1 >> 0x1
  6876: 84 24 fe                 t2 = t0 & 0xfffffffffffffffe
  6879: 95 49 ff                 a2 = t2 + 0xffffffffffffffff
  6882: ae 89 0c 01              jump @486 if a2 >=u a1
      :                          @478
  6886: 95 8a ff                 a3 = a1 + 0xffffffffffffffff
  6889: 68 aa                    a3 = clz a3
  6891: 9c a3 ff                 t1 = 0xffffffffffffffff >> a3
  6894: 97 8a 0d                 a3 = a1 << 0xd
  6897: d3 8a 0a                 a3 = a3 ^ a1
  6900: 98 ab 07                 a4 = a3 >> 0x7
  6903: d3 ba 0a                 a3 = a3 ^ a4
  6906: 97 ab 11                 a4 = a3 << 0x11
  6909: d3 ab 0b                 a4 = a4 ^ a3
  6912: d2 3b 0a                 a3 = a4 & t1
  6915: d8 8a 0c                 a5 = a3 <u a1
  6918: 64 85                    s0 = a1
  6920: 94 c5                    s0 = 0 if a5 != 0
  6922: c9 5a 0a                 a3 = a3 - s0
  6925: ae 8a df 00              jump @484 if a3 >=u a1
      :                          @479
  6929: 97 99 04                 a2 = a2 << 0x4
  6932: c8 79 09                 a2 = a2 + a0
  6935: 82 9c 08                 a5 = u64 [a2 + 0x8]
  6938: 82 95                    s0 = u64 [a2]
  6940: 97 aa 04                 a3 = a3 << 0x4
  6943: c8 7a 0a                 a3 = a3 + a0
  6946: 7b 1c 08                 u64 [sp + 0x8] = a5
  6949: 7b 15                    u64 [sp] = s0
  6951: 82 a0                    ra = u64 [a3]
  6953: 82 a5 08                 s0 = u64 [a3 + 0x8]
  6956: 82 16 08                 s1 = u64 [sp + 0x8]
  6959: 82 1c                    a5 = u64 [sp]
  6961: 7b 90                    u64 [a2] = ra
  6963: 7b 95 08                 u64 [a2 + 0x8] = s0
  6966: 7b a6 08                 u64 [a3 + 0x8] = s1
  6969: 7b ac                    u64 [a3] = a5
  6971: ae 84 b2 00              jump @485 if t2 >=u a1
      :                          @480
  6975: 97 b9 0d                 a2 = a4 << 0xd
  6978: d3 b9 09                 a2 = a2 ^ a4
  6981: 98 9a 07                 a3 = a2 >> 0x7
  6984: d3 a9 09                 a2 = a2 ^ a3
  6987: 97 9b 11                 a4 = a2 << 0x11
  6990: d3 9b 0b                 a4 = a4 ^ a2
  6993: d2 3b 09                 a2 = a4 & t1
  6996: d8 89 0a                 a3 = a2 <u a1
  6999: 64 8c                    a5 = a1
  7001: 94 ac                    a5 = 0 if a3 != 0
  7003: c9 c9 0a                 a3 = a2 - a5
  7006: ae 8a 8e 00              jump @484 if a3 >=u a1
      :                          @481
  7010: 97 44 04                 t2 = t2 << 0x4
  7013: c8 74 04                 t2 = t2 + a0
  7016: 82 49 08                 a2 = u64 [t2 + 0x8]
  7019: 97 aa 04                 a3 = a3 << 0x4
  7022: 82 4c                    a5 = u64 [t2]
  7024: c8 7a 0a                 a3 = a3 + a0
  7027: 7b 19 08                 u64 [sp + 0x8] = a2
  7030: 82 a9                    a2 = u64 [a3]
  7032: 7b 1c                    u64 [sp] = a5
  7034: 82 ac 08                 a5 = u64 [a3 + 0x8]
  7037: 82 15 08                 s0 = u64 [sp + 0x8]
  7040: 7b 49                    u64 [t2] = a2
  7042: 82 16                    s1 = u64 [sp]
  7044: 7b 4c 08                 u64 [t2 + 0x8] = a5
  7047: 7b a5 08                 u64 [a3 + 0x8] = s0
  7050: 86 29 01                 a2 = t0 | 0x1
  7053: 7b a6                    u64 [a3] = s1
  7055: ae 89 5f                 jump @486 if a2 >=u a1
      :                          @482
  7058: 97 ba 0d                 a3 = a4 << 0xd
  7061: d3 ba 0a                 a3 = a3 ^ a4
  7064: 98 ab 07                 a4 = a3 >> 0x7
  7067: d3 ba 0a                 a3 = a3 ^ a4
  7070: 97 ab 11                 a4 = a3 << 0x11
  7073: d3 ba 0a                 a3 = a3 ^ a4
  7076: d2 3a 0a                 a3 = a3 & t1
  7079: d8 8a 0b                 a4 = a3 <u a1
  7082: 64 8c                    a5 = a1
  7084: 94 bc                    a5 = 0 if a4 != 0
  7086: c9 ca 0a                 a3 = a3 - a5
  7089: ae 8a 3b                 jump @484 if a3 >=u a1
      :                          @483
  7092: 97 99 04                 a2 = a2 << 0x4
  7095: c8 79 09                 a2 = a2 + a0
  7098: 82 98 08                 a1 = u64 [a2 + 0x8]
  7101: 82 9b                    a4 = u64 [a2]
  7103: 97 aa 04                 a3 = a3 << 0x4
  7106: c8 a7 07                 a0 = a0 + a3
  7109: 7b 18 08                 u64 [sp + 0x8] = a1
  7112: 7b 1b                    u64 [sp] = a4
  7114: 82 78                    a1 = u64 [a0]
  7116: 82 7a 08                 a3 = u64 [a0 + 0x8]
  7119: 82 1b 08                 a4 = u64 [sp + 0x8]
  7122: 82 1c                    a5 = u64 [sp]
  7124: 7b 98                    u64 [a2] = a1
  7126: 7b 9a 08                 u64 [a2 + 0x8] = a3
  7129: 7b 7b 08                 u64 [a0 + 0x8] = a4
  7132: 7b 7c                    u64 [a0] = a5
  7134: 82 10 20                 ra = u64 [sp + 0x20]
  7137: 82 15 18                 s0 = u64 [sp + 0x18]
  7140: 82 16 10                 s1 = u64 [sp + 0x10]
  7143: 95 11 28                 sp = sp + 0x28
  7146: 32 00                    ret
      :                          @484
  7148: 00                       trap
      :                          @485
  7149: 00                       trap
      :                          @486
  7150: 00                       trap
      :                          @487
  7151: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  7154: 7b 10 28                 u64 [sp + 0x28] = ra
  7157: 7b 15 20                 u64 [sp + 0x20] = s0
  7160: 7b 16 18                 u64 [sp + 0x18] = s1
  7163: 33 09 32                 a2 = 0x32
  7166: 64 82                    t0 = a1
  7168: 64 73                    t1 = a0
  7170: ae 98 33                 jump @493 if a1 >=u a2
      :                          @488
  7173: 82 37 08                 a0 = u64 [t1 + 0x8]
  7176: 82 39                    a2 = u64 [t1]
  7178: 33 08 01                 a1 = 0x1
  7181: ad 97 64 02              jump @556 if a0 <s a2
      :                          @489
  7185: 95 39 10                 a2 = t1 + 0x10
  7188: 9a 26 02                 s1 = 0x2 - t0
  7191: 33 0b 01                 a4 = 0x1
  7194: 33 08 01                 a1 = 0x1
  7197: 01                       fallthrough
      :                          @490
  7198: c8 86 0a                 a3 = s1 + a1
  7201: aa ba 46 02              jump @555 if a3 == a4
      :                          @491
  7205: 64 7c                    a5 = a0
  7207: 82 97                    a0 = u64 [a2]
  7209: 95 88 01                 a1 = a1 + 0x1
  7212: 95 99 08                 a2 = a2 + 0x8
  7215: af c7 ef                 jump @490 if a0 >=s a5
      :                          @492
  7218: 28 3f 02                 jump @556
      :                          @493
  7221: 82 37                    a0 = u64 [t1]
  7223: 82 38 08                 a1 = u64 [t1 + 0x8]
  7226: af 78 0f                 jump @496 if a1 >=s a0
      :                          @494
  7229: 33 07 01                 a0 = 0x1
  7232: 33 06 01                 s1 = 0x1
  7235: ab 62 2b                 jump @500 if t0 != s1
      :                          @495
  7238: 28 32 02                 jump @557
      :                          @496
  7241: 95 39 10                 a2 = t1 + 0x10
  7244: 9a 2a 02                 a3 = 0x2 - t0
  7247: 33 07 01                 a0 = 0x1
  7250: 33 06 01                 s1 = 0x1
  7253: 01                       fallthrough
      :                          @497
  7254: c8 6a 0c                 a5 = a3 + s1
  7257: aa 7c 1f 02              jump @557 if a5 == a0
      :                          @498
  7261: 64 8b                    a4 = a1
  7263: 82 98                    a1 = u64 [a2]
  7265: 95 99 08                 a2 = a2 + 0x8
  7268: 95 66 01                 s1 = s1 + 0x1
  7271: af b8 ef                 jump @497 if a1 >=s a4
      :                          @499
  7274: d8 26 07                 a0 = s1 <u t0
  7277: 01                       fallthrough
      :                          @500
  7278: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  7281: ae 29 20 02              jump @561 if a2 >=u t0
      :                          @501
  7285: 51 07 1b 02              jump @560 if a0 == 0
      :                          @502
  7289: 97 95 03                 s0 = a2 << 0x3
  7292: 97 67 03                 a0 = s1 << 0x3
  7295: c8 73 0a                 a3 = t1 + a0
  7298: 82 a7                    a0 = u64 [a3]
  7300: c8 35 05                 s0 = s0 + t1
  7303: 82 58                    a1 = u64 [s0]
  7305: 7b 57                    u64 [s0] = a0
  7307: 7b a8                    u64 [a3] = a1
  7309: 7b 12 08                 u64 [sp + 0x8] = t0
  7312: 7b 13 10                 u64 [sp + 0x10] = t1
  7315: 53 16 02 24              jump @506 if s1 <u 2
      :                          @503
  7319: 64 37                    a0 = t1
  7321: 64 68                    a1 = s1
  7323: 7b 1a                    u64 [sp] = a3
  7325: 50 20 12 01 85 0c        ra = 274, jump @799
      :                          @504 [@dyn 137]
  7331: 82 17 10                 a0 = u64 [sp + 0x10]
  7334: 64 68                    a1 = s1
  7336: 50 20 14 01 07 0e        ra = 276, jump @851
      :                          @505 [@dyn 138]
  7342: 82 1a                    a3 = u64 [sp]
  7344: 82 13 10                 t1 = u64 [sp + 0x10]
  7347: 82 12 08                 t0 = u64 [sp + 0x8]
  7350: 01                       fallthrough
      :                          @506
  7351: ae 26 d3 01              jump @559 if s1 >=u t0
      :                          @507
  7355: 82 59                    a2 = u64 [s0]
  7357: 82 a8                    a1 = u64 [a3]
  7359: 33 07 01                 a0 = 0x1
  7362: ad 98 1f                 jump @512 if a1 <s a2
      :                          @508
  7365: 95 a7 08                 a0 = a3 + 0x8
  7368: 95 29 ff                 a2 = t0 + 0xffffffffffffffff
  7371: 01                       fallthrough
      :                          @509
  7372: aa 69 96 01              jump @554 if a2 == s1
      :                          @510
  7376: 64 8a                    a3 = a1
  7378: 82 78                    a1 = u64 [a0]
  7380: 95 77 08                 a0 = a0 + 0x8
  7383: 95 66 01                 s1 = s1 + 0x1
  7386: af a8 f2                 jump @509 if a1 >=s a3
      :                          @511
  7389: d8 26 07                 a0 = s1 <u t0
  7392: 01                       fallthrough
      :                          @512
  7393: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  7396: ae 29 ad 01              jump @561 if a2 >=u t0
      :                          @513
  7400: 51 07 a8 01              jump @560 if a0 == 0
      :                          @514
  7404: 97 95 03                 s0 = a2 << 0x3
  7407: 97 67 03                 a0 = s1 << 0x3
  7410: c8 73 0a                 a3 = t1 + a0
  7413: 82 a7                    a0 = u64 [a3]
  7415: c8 35 05                 s0 = s0 + t1
  7418: 82 58                    a1 = u64 [s0]
  7420: 7b 57                    u64 [s0] = a0
  7422: 7b a8                    u64 [a3] = a1
  7424: 53 16 02 24              jump @518 if s1 <u 2
      :                          @515
  7428: 64 37                    a0 = t1
  7430: 64 68                    a1 = s1
  7432: 7b 1a                    u64 [sp] = a3
  7434: 50 20 16 01 18 0c        ra = 278, jump @799
      :                          @516 [@dyn 139]
  7440: 82 17 10                 a0 = u64 [sp + 0x10]
  7443: 64 68                    a1 = s1
  7445: 50 20 18 01 9a 0d        ra = 280, jump @851
      :                          @517 [@dyn 140]
  7451: 82 1a                    a3 = u64 [sp]
  7453: 82 13 10                 t1 = u64 [sp + 0x10]
  7456: 82 12 08                 t0 = u64 [sp + 0x8]
  7459: 01                       fallthrough
      :                          @518
  7460: ae 26 66 01              jump @559 if s1 >=u t0
      :                          @519
  7464: 82 59                    a2 = u64 [s0]
  7466: 82 a8                    a1 = u64 [a3]
  7468: 33 07 01                 a0 = 0x1
  7471: ad 98 1f                 jump @524 if a1 <s a2
      :                          @520
  7474: 95 a7 08                 a0 = a3 + 0x8
  7477: 95 29 ff                 a2 = t0 + 0xffffffffffffffff
  7480: 01                       fallthrough
      :                          @521
  7481: aa 69 29 01              jump @554 if a2 == s1
      :                          @522
  7485: 64 8a                    a3 = a1
  7487: 82 78                    a1 = u64 [a0]
  7489: 95 77 08                 a0 = a0 + 0x8
  7492: 95 66 01                 s1 = s1 + 0x1
  7495: af a8 f2                 jump @521 if a1 >=s a3
      :                          @523
  7498: d8 26 07                 a0 = s1 <u t0
  7501: 01                       fallthrough
      :                          @524
  7502: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  7505: ae 29 40 01              jump @561 if a2 >=u t0
      :                          @525
  7509: 51 07 3b 01              jump @560 if a0 == 0
      :                          @526
  7513: 97 95 03                 s0 = a2 << 0x3
  7516: 97 67 03                 a0 = s1 << 0x3
  7519: c8 73 0a                 a3 = t1 + a0
  7522: 82 a7                    a0 = u64 [a3]
  7524: c8 35 05                 s0 = s0 + t1
  7527: 82 58                    a1 = u64 [s0]
  7529: 7b 57                    u64 [s0] = a0
  7531: 7b a8                    u64 [a3] = a1
  7533: 53 16 02 24              jump @530 if s1 <u 2
      :                          @527
  7537: 64 37                    a0 = t1
  7539: 64 68                    a1 = s1
  7541: 7b 1a                    u64 [sp] = a3
  7543: 50 20 1a 01 ab 0b        ra = 282, jump @799
      :                          @528 [@dyn 141]
  7549: 82 17 10                 a0 = u64 [sp + 0x10]
  7552: 64 68                    a1 = s1
  7554: 50 20 1c 01 2d 0d        ra = 284, jump @851
      :                          @529 [@dyn 142]
  7560: 82 1a                    a3 = u64 [sp]
  7562: 82 13 10                 t1 = u64 [sp + 0x10]
  7565: 82 12 08                 t0 = u64 [sp + 0x8]
  7568: 01                       fallthrough
      :                          @530
  7569: ae 26 f9 00              jump @559 if s1 >=u t0
      :                          @531
  7573: 82 59                    a2 = u64 [s0]
  7575: 82 a8                    a1 = u64 [a3]
  7577: 33 07 01                 a0 = 0x1
  7580: ad 98 1f                 jump @536 if a1 <s a2
      :                          @532
  7583: 95 a7 08                 a0 = a3 + 0x8
  7586: 95 29 ff                 a2 = t0 + 0xffffffffffffffff
  7589: 01                       fallthrough
      :                          @533
  7590: aa 69 bc 00              jump @554 if a2 == s1
      :                          @534
  7594: 64 8a                    a3 = a1
  7596: 82 78                    a1 = u64 [a0]
  7598: 95 77 08                 a0 = a0 + 0x8
  7601: 95 66 01                 s1 = s1 + 0x1
  7604: af a8 f2                 jump @533 if a1 >=s a3
      :                          @535
  7607: d8 26 07                 a0 = s1 <u t0
  7610: 01                       fallthrough
      :                          @536
  7611: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  7614: ae 29 d3 00              jump @561 if a2 >=u t0
      :                          @537
  7618: 51 07 ce 00              jump @560 if a0 == 0
      :                          @538
  7622: 97 95 03                 s0 = a2 << 0x3
  7625: 97 67 03                 a0 = s1 << 0x3
  7628: c8 73 0a                 a3 = t1 + a0
  7631: 82 a7                    a0 = u64 [a3]
  7633: c8 35 05                 s0 = s0 + t1
  7636: 82 58                    a1 = u64 [s0]
  7638: 7b 57                    u64 [s0] = a0
  7640: 7b a8                    u64 [a3] = a1
  7642: 53 16 02 24              jump @542 if s1 <u 2
      :                          @539
  7646: 64 37                    a0 = t1
  7648: 64 68                    a1 = s1
  7650: 7b 1a                    u64 [sp] = a3
  7652: 50 20 1e 01 3e 0b        ra = 286, jump @799
      :                          @540 [@dyn 143]
  7658: 82 17 10                 a0 = u64 [sp + 0x10]
  7661: 64 68                    a1 = s1
  7663: 50 20 20 01 c0 0c        ra = 288, jump @851
      :                          @541 [@dyn 144]
  7669: 82 1a                    a3 = u64 [sp]
  7671: 82 13 10                 t1 = u64 [sp + 0x10]
  7674: 82 12 08                 t0 = u64 [sp + 0x8]
  7677: 01                       fallthrough
      :                          @542
  7678: ae 26 8c 00              jump @559 if s1 >=u t0
      :                          @543
  7682: 82 59                    a2 = u64 [s0]
  7684: 82 a8                    a1 = u64 [a3]
  7686: 33 07 01                 a0 = 0x1
  7689: ad 98 1e                 jump @548 if a1 <s a2
      :                          @544
  7692: 95 a7 08                 a0 = a3 + 0x8
  7695: 95 29 ff                 a2 = t0 + 0xffffffffffffffff
  7698: 01                       fallthrough
      :                          @545
  7699: aa 69 4f                 jump @554 if a2 == s1
      :                          @546
  7702: 64 8a                    a3 = a1
  7704: 82 78                    a1 = u64 [a0]
  7706: 95 77 08                 a0 = a0 + 0x8
  7709: 95 66 01                 s1 = s1 + 0x1
  7712: af a8 f3                 jump @545 if a1 >=s a3
      :                          @547
  7715: d8 26 07                 a0 = s1 <u t0
  7718: 01                       fallthrough
      :                          @548
  7719: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  7722: ae 29 67                 jump @561 if a2 >=u t0
      :                          @549
  7725: 51 07 63                 jump @560 if a0 == 0
      :                          @550
  7728: 97 97 03                 a0 = a2 << 0x3
  7731: 97 68 03                 a1 = s1 << 0x3
  7734: c8 38 08                 a1 = a1 + t1
  7737: 82 8a                    a3 = u64 [a1]
  7739: c8 37 07                 a0 = a0 + t1
  7742: 82 7b                    a4 = u64 [a0]
  7744: 7b 7a                    u64 [a0] = a3
  7746: 7b 8b                    u64 [a1] = a4
  7748: 53 16 02 42              jump @558 if s1 <u 2
      :                          @551
  7752: 64 37                    a0 = t1
  7754: 64 68                    a1 = s1
  7756: 64 35                    s0 = t1
  7758: 50 20 22 01 d4 0a        ra = 290, jump @799
      :                          @552 [@dyn 145]
  7764: 64 57                    a0 = s0
  7766: 64 68                    a1 = s1
  7768: 50 20 24 01 57 0c        ra = 292, jump @851
      :                          @553 [@dyn 146]
  7774: 33 07                    a0 = 0
  7776: 28 18                    jump @557
      :                          @554
  7778: 33 07 01                 a0 = 0x1
  7781: 28 13                    jump @557
      :                          @555
  7783: 64 28                    a1 = t0
  7785: d3 28 07                 a0 = a1 ^ t0
  7788: 88 77 01                 a0 = a0 <u 0x1
  7791: 28 09                    jump @557
      :                          @556
  7793: d3 28 07                 a0 = a1 ^ t0
  7796: 88 77 01                 a0 = a0 <u 0x1
  7799: 01                       fallthrough
      :                          @557
  7800: 82 10 28                 ra = u64 [sp + 0x28]
  7803: 82 15 20                 s0 = u64 [sp + 0x20]
  7806: 82 16 18                 s1 = u64 [sp + 0x18]
  7809: 95 11 30                 sp = sp + 0x30
  7812: 32 00                    ret
      :                          @558
  7814: 33 07                    a0 = 0
  7816: 28 f0                    jump @557
      :                          @559
  7818: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  7821: ae 29 04                 jump @561 if a2 >=u t0
      :                          @560
  7824: 00                       trap
      :                          @561
  7825: 00                       trap
      :                          @562
  7826: 95 11 c0                 sp = sp + 0xffffffffffffffc0
  7829: 7b 10 38                 u64 [sp + 0x38] = ra
  7832: 7b 15 30                 u64 [sp + 0x30] = s0
  7835: 7b 16 28                 u64 [sp + 0x28] = s1
  7838: 64 83                    t1 = a1
  7840: 64 70                    ra = a0
  7842: 55 18 32 58              jump @568 if a1 >=u 50
      :                          @563
  7846: 82 07 10                 a0 = u64 [ra + 0x10]
  7849: 82 08                    a1 = u64 [ra]
  7851: 82 09 18                 a2 = u64 [ra + 0x18]
  7854: 82 0a 08                 a3 = u64 [ra + 0x8]
  7857: d9 87 0b                 a4 = a0 <s a1
  7860: d3 78 08                 a1 = a1 ^ a0
  7863: d9 a9 09                 a2 = a2 <s a3
  7866: db 8b 09                 a2 = a4 if a1 != 0
  7869: 33 08 01                 a1 = 0x1
  7872: 52 09 a7 03              jump @631 if a2 != 0
      :                          @564
  7876: 95 09 28                 a2 = ra + 0x28
  7879: 9a 3a 02                 a3 = 0x2 - t1
  7882: 33 02 01                 t0 = 0x1
  7885: 33 08 01                 a1 = 0x1
  7888: 01                       fallthrough
      :                          @565
  7889: c8 8a 0b                 a4 = a3 + a1
  7892: aa 2b 89 03              jump @630 if a4 == t0
      :                          @566
  7896: 82 9c f8                 a5 = u64 [a2 + 0xfffffffffffffff8]
  7899: 82 96                    s1 = u64 [a2]
  7901: 82 95 f0                 s0 = u64 [a2 + 0xfffffffffffffff0]
  7904: 95 88 01                 a1 = a1 + 0x1
  7907: d9 7c 0b                 a4 = a5 <s a0
  7910: d3 c7 07                 a0 = a0 ^ a5
  7913: d9 56 06                 s1 = s1 <s s0
  7916: db 7b 06                 s1 = a4 if a0 != 0
  7919: 95 99 10                 a2 = a2 + 0x10
  7922: 64 c7                    a0 = a5
  7924: 51 06 dd                 jump @565 if s1 == 0
      :                          @567
  7927: 28 70 03                 jump @631
      :                          @568
  7930: 82 07                    a0 = u64 [ra]
  7932: 82 09 10                 a2 = u64 [ra + 0x10]
  7935: 82 0a 08                 a3 = u64 [ra + 0x8]
  7938: 82 05 18                 s0 = u64 [ra + 0x18]
  7941: d9 79 0b                 a4 = a2 <s a0
  7944: d3 97 07                 a0 = a0 ^ a2
  7947: d9 a5 0a                 a3 = s0 <s a3
  7950: db 7b 0a                 a3 = a4 if a0 != 0
  7953: 51 0a 0f                 jump @571 if a3 == 0
      :                          @569
  7956: 33 07 01                 a0 = 0x1
  7959: 33 04 01                 t2 = 0x1
  7962: ab 43 3c                 jump @575 if t1 != t2
      :                          @570
  7965: 28 51 03                 jump @632
      :                          @571
  7968: 95 0a 28                 a3 = ra + 0x28
  7971: 9a 32 02                 t0 = 0x2 - t1
  7974: 33 07 01                 a0 = 0x1
  7977: 33 04 01                 t2 = 0x1
  7980: 01                       fallthrough
      :                          @572
  7981: c8 42 08                 a1 = t0 + t2
  7984: aa 78 3e 03              jump @632 if a1 == a0
      :                          @573
  7988: 82 ac f8                 a5 = u64 [a3 + 0xfffffffffffffff8]
  7991: 82 a8                    a1 = u64 [a3]
  7993: d9 9c 0b                 a4 = a5 <s a2
  7996: d3 c9 09                 a2 = a2 ^ a5
  7999: d9 58 06                 s1 = a1 <s s0
  8002: db 9b 06                 s1 = a4 if a2 != 0
  8005: 95 aa 10                 a3 = a3 + 0x10
  8008: 95 44 01                 t2 = t2 + 0x1
  8011: 64 85                    s0 = a1
  8013: 64 c9                    a2 = a5
  8015: 51 06 de                 jump @572 if s1 == 0
      :                          @574
  8018: d8 34 07                 a0 = t2 <u t1
  8021: 01                       fallthrough
      :                          @575
  8022: 95 49 ff                 a2 = t2 + 0xffffffffffffffff
  8025: ae 39 2e 03              jump @636 if a2 >=u t1
      :                          @576
  8029: 51 07 29 03              jump @635 if a0 == 0
      :                          @577
  8033: 97 95 04                 s0 = a2 << 0x4
  8036: c8 05 05                 s0 = s0 + ra
  8039: 97 47 04                 a0 = t2 << 0x4
  8042: 82 58 08                 a1 = u64 [s0 + 0x8]
  8045: c8 70 06                 s1 = ra + a0
  8048: 82 67 08                 a0 = u64 [s1 + 0x8]
  8051: 7b 18 20                 u64 [sp + 0x20] = a1
  8054: 82 58                    a1 = u64 [s0]
  8056: 7b 57 08                 u64 [s0 + 0x8] = a0
  8059: 82 67                    a0 = u64 [s1]
  8061: 82 1a 20                 a3 = u64 [sp + 0x20]
  8064: 7b 18 18                 u64 [sp + 0x18] = a1
  8067: 82 18 18                 a1 = u64 [sp + 0x18]
  8070: 7b 57                    u64 [s0] = a0
  8072: 7b 6a 08                 u64 [s1 + 0x8] = a3
  8075: 7b 68                    u64 [s1] = a1
  8077: 7b 13                    u64 [sp] = t1
  8079: 7b 10 08                 u64 [sp + 0x8] = ra
  8082: 53 14 02 26              jump @581 if t2 <u 2
      :                          @578
  8086: 64 07                    a0 = ra
  8088: 64 48                    a1 = t2
  8090: 7b 14 10                 u64 [sp + 0x10] = t2
  8093: 50 20 26 01 b3 08        ra = 294, jump @787
      :                          @579 [@dyn 147]
  8099: 82 17 08                 a0 = u64 [sp + 0x8]
  8102: 82 18 10                 a1 = u64 [sp + 0x10]
  8105: 50 20 28 01 5d 0b        ra = 296, jump @861
      :                          @580 [@dyn 148]
  8111: 82 10 08                 ra = u64 [sp + 0x8]
  8114: 82 14 10                 t2 = u64 [sp + 0x10]
  8117: 82 13                    t1 = u64 [sp]
  8119: 01                       fallthrough
      :                          @581
  8120: ae 34 c8 02              jump @634 if t2 >=u t1
      :                          @582
  8124: 82 59                    a2 = u64 [s0]
  8126: 82 68                    a1 = u64 [s1]
  8128: 82 5a 08                 a3 = u64 [s0 + 0x8]
  8131: 82 67 08                 a0 = u64 [s1 + 0x8]
  8134: d9 98 0b                 a4 = a1 <s a2
  8137: d3 89 09                 a2 = a2 ^ a1
  8140: d9 a7 0c                 a5 = a0 <s a3
  8143: db 9b 0c                 a5 = a4 if a2 != 0
  8146: 33 0a 01                 a3 = 0x1
  8149: 52 0c 30                 jump @587 if a5 != 0
      :                          @583
  8152: 95 69 18                 a2 = s1 + 0x18
  8155: 95 3a ff                 a3 = t1 + 0xffffffffffffffff
  8158: 01                       fallthrough
      :                          @584
  8159: aa 4a 79 02              jump @629 if a3 == t2
      :                          @585
  8163: 82 9b f8                 a4 = u64 [a2 + 0xfffffffffffffff8]
  8166: 82 9c                    a5 = u64 [a2]
  8168: d9 8b 06                 s1 = a4 <s a1
  8171: d3 b8 08                 a1 = a1 ^ a4
  8174: d9 7c 05                 s0 = a5 <s a0
  8177: db 86 05                 s0 = s1 if a1 != 0
  8180: 95 99 10                 a2 = a2 + 0x10
  8183: 95 44 01                 t2 = t2 + 0x1
  8186: 64 c7                    a0 = a5
  8188: 64 b8                    a1 = a4
  8190: 51 05 e1                 jump @584 if s0 == 0
      :                          @586
  8193: d8 34 0a                 a3 = t2 <u t1
  8196: 01                       fallthrough
      :                          @587
  8197: 95 49 ff                 a2 = t2 + 0xffffffffffffffff
  8200: ae 39 7f 02              jump @636 if a2 >=u t1
      :                          @588
  8204: 51 0a 7a 02              jump @635 if a3 == 0
      :                          @589
  8208: 97 95 04                 s0 = a2 << 0x4
  8211: c8 05 05                 s0 = s0 + ra
  8214: 97 47 04                 a0 = t2 << 0x4
  8217: 82 58 08                 a1 = u64 [s0 + 0x8]
  8220: c8 70 06                 s1 = ra + a0
  8223: 82 67 08                 a0 = u64 [s1 + 0x8]
  8226: 7b 18 20                 u64 [sp + 0x20] = a1
  8229: 82 58                    a1 = u64 [s0]
  8231: 7b 57 08                 u64 [s0 + 0x8] = a0
  8234: 82 67                    a0 = u64 [s1]
  8236: 82 1a 20                 a3 = u64 [sp + 0x20]
  8239: 7b 18 18                 u64 [sp + 0x18] = a1
  8242: 82 18 18                 a1 = u64 [sp + 0x18]
  8245: 7b 57                    u64 [s0] = a0
  8247: 7b 6a 08                 u64 [s1 + 0x8] = a3
  8250: 7b 68                    u64 [s1] = a1
  8252: 53 14 02 26              jump @593 if t2 <u 2
      :                          @590
  8256: 64 07                    a0 = ra
  8258: 64 48                    a1 = t2
  8260: 7b 14 10                 u64 [sp + 0x10] = t2
  8263: 50 20 2a 01 09 08        ra = 298, jump @787
      :                          @591 [@dyn 149]
  8269: 82 17 08                 a0 = u64 [sp + 0x8]
  8272: 82 18 10                 a1 = u64 [sp + 0x10]
  8275: 50 20 2c 01 b3 0a        ra = 300, jump @861
      :                          @592 [@dyn 150]
  8281: 82 10 08                 ra = u64 [sp + 0x8]
  8284: 82 14 10                 t2 = u64 [sp + 0x10]
  8287: 82 13                    t1 = u64 [sp]
  8289: 01                       fallthrough
      :                          @593
  8290: ae 34 1e 02              jump @634 if t2 >=u t1
      :                          @594
  8294: 82 59                    a2 = u64 [s0]
  8296: 82 68                    a1 = u64 [s1]
  8298: 82 5a 08                 a3 = u64 [s0 + 0x8]
  8301: 82 67 08                 a0 = u64 [s1 + 0x8]
  8304: d9 98 0b                 a4 = a1 <s a2
  8307: d3 89 09                 a2 = a2 ^ a1
  8310: d9 a7 0c                 a5 = a0 <s a3
  8313: db 9b 0c                 a5 = a4 if a2 != 0
  8316: 33 0a 01                 a3 = 0x1
  8319: 52 0c 30                 jump @599 if a5 != 0
      :                          @595
  8322: 95 69 18                 a2 = s1 + 0x18
  8325: 95 3a ff                 a3 = t1 + 0xffffffffffffffff
  8328: 01                       fallthrough
      :                          @596
  8329: aa 4a cf 01              jump @629 if a3 == t2
      :                          @597
  8333: 82 9b f8                 a4 = u64 [a2 + 0xfffffffffffffff8]
  8336: 82 9c                    a5 = u64 [a2]
  8338: d9 8b 06                 s1 = a4 <s a1
  8341: d3 b8 08                 a1 = a1 ^ a4
  8344: d9 7c 05                 s0 = a5 <s a0
  8347: db 86 05                 s0 = s1 if a1 != 0
  8350: 95 99 10                 a2 = a2 + 0x10
  8353: 95 44 01                 t2 = t2 + 0x1
  8356: 64 c7                    a0 = a5
  8358: 64 b8                    a1 = a4
  8360: 51 05 e1                 jump @596 if s0 == 0
      :                          @598
  8363: d8 34 0a                 a3 = t2 <u t1
  8366: 01                       fallthrough
      :                          @599
  8367: 95 49 ff                 a2 = t2 + 0xffffffffffffffff
  8370: ae 39 d5 01              jump @636 if a2 >=u t1
      :                          @600
  8374: 51 0a d0 01              jump @635 if a3 == 0
      :                          @601
  8378: 97 95 04                 s0 = a2 << 0x4
  8381: c8 05 05                 s0 = s0 + ra
  8384: 97 47 04                 a0 = t2 << 0x4
  8387: 82 58 08                 a1 = u64 [s0 + 0x8]
  8390: c8 70 06                 s1 = ra + a0
  8393: 82 67 08                 a0 = u64 [s1 + 0x8]
  8396: 7b 18 20                 u64 [sp + 0x20] = a1
  8399: 82 58                    a1 = u64 [s0]
  8401: 7b 57 08                 u64 [s0 + 0x8] = a0
  8404: 82 67                    a0 = u64 [s1]
  8406: 82 1a 20                 a3 = u64 [sp + 0x20]
  8409: 7b 18 18                 u64 [sp + 0x18] = a1
  8412: 82 18 18                 a1 = u64 [sp + 0x18]
  8415: 7b 57                    u64 [s0] = a0
  8417: 7b 6a 08                 u64 [s1 + 0x8] = a3
  8420: 7b 68                    u64 [s1] = a1
  8422: 53 14 02 26              jump @605 if t2 <u 2
      :                          @602
  8426: 64 07                    a0 = ra
  8428: 64 48                    a1 = t2
  8430: 7b 14 10                 u64 [sp + 0x10] = t2
  8433: 50 20 2e 01 5f 07        ra = 302, jump @787
      :                          @603 [@dyn 151]
  8439: 82 17 08                 a0 = u64 [sp + 0x8]
  8442: 82 18 10                 a1 = u64 [sp + 0x10]
  8445: 50 20 30 01 09 0a        ra = 304, jump @861
      :                          @604 [@dyn 152]
  8451: 82 10 08                 ra = u64 [sp + 0x8]
  8454: 82 14 10                 t2 = u64 [sp + 0x10]
  8457: 82 13                    t1 = u64 [sp]
  8459: 01                       fallthrough
      :                          @605
  8460: ae 34 74 01              jump @634 if t2 >=u t1
      :                          @606
  8464: 82 59                    a2 = u64 [s0]
  8466: 82 68                    a1 = u64 [s1]
  8468: 82 5a 08                 a3 = u64 [s0 + 0x8]
  8471: 82 67 08                 a0 = u64 [s1 + 0x8]
  8474: d9 98 0b                 a4 = a1 <s a2
  8477: d3 89 09                 a2 = a2 ^ a1
  8480: d9 a7 0c                 a5 = a0 <s a3
  8483: db 9b 0c                 a5 = a4 if a2 != 0
  8486: 33 0a 01                 a3 = 0x1
  8489: 52 0c 30                 jump @611 if a5 != 0
      :                          @607
  8492: 95 69 18                 a2 = s1 + 0x18
  8495: 95 3a ff                 a3 = t1 + 0xffffffffffffffff
  8498: 01                       fallthrough
      :                          @608
  8499: aa 4a 25 01              jump @629 if a3 == t2
      :                          @609
  8503: 82 9b f8                 a4 = u64 [a2 + 0xfffffffffffffff8]
  8506: 82 9c                    a5 = u64 [a2]
  8508: d9 8b 06                 s1 = a4 <s a1
  8511: d3 b8 08                 a1 = a1 ^ a4
  8514: d9 7c 05                 s0 = a5 <s a0
  8517: db 86 05                 s0 = s1 if a1 != 0
  8520: 95 99 10                 a2 = a2 + 0x10
  8523: 95 44 01                 t2 = t2 + 0x1
  8526: 64 c7                    a0 = a5
  8528: 64 b8                    a1 = a4
  8530: 51 05 e1                 jump @608 if s0 == 0
      :                          @610
  8533: d8 34 0a                 a3 = t2 <u t1
  8536: 01                       fallthrough
      :                          @611
  8537: 95 49 ff                 a2 = t2 + 0xffffffffffffffff
  8540: ae 39 2b 01              jump @636 if a2 >=u t1
      :                          @612
  8544: 51 0a 26 01              jump @635 if a3 == 0
      :                          @613
  8548: 97 95 04                 s0 = a2 << 0x4
  8551: c8 05 05                 s0 = s0 + ra
  8554: 97 47 04                 a0 = t2 << 0x4
  8557: 82 58 08                 a1 = u64 [s0 + 0x8]
  8560: c8 70 06                 s1 = ra + a0
  8563: 82 67 08                 a0 = u64 [s1 + 0x8]
  8566: 7b 18 20                 u64 [sp + 0x20] = a1
  8569: 82 58                    a1 = u64 [s0]
  8571: 7b 57 08                 u64 [s0 + 0x8] = a0
  8574: 82 67                    a0 = u64 [s1]
  8576: 82 1a 20                 a3 = u64 [sp + 0x20]
  8579: 7b 18 18                 u64 [sp + 0x18] = a1
  8582: 82 18 18                 a1 = u64 [sp + 0x18]
  8585: 7b 57                    u64 [s0] = a0
  8587: 7b 6a 08                 u64 [s1 + 0x8] = a3
  8590: 7b 68                    u64 [s1] = a1
  8592: 53 14 02 26              jump @617 if t2 <u 2
      :                          @614
  8596: 64 07                    a0 = ra
  8598: 64 48                    a1 = t2
  8600: 7b 14 10                 u64 [sp + 0x10] = t2
  8603: 50 20 32 01 b5 06        ra = 306, jump @787
      :                          @615 [@dyn 153]
  8609: 82 17 08                 a0 = u64 [sp + 0x8]
  8612: 82 18 10                 a1 = u64 [sp + 0x10]
  8615: 50 20 34 01 5f 09        ra = 308, jump @861
      :                          @616 [@dyn 154]
  8621: 82 10 08                 ra = u64 [sp + 0x8]
  8624: 82 14 10                 t2 = u64 [sp + 0x10]
  8627: 82 13                    t1 = u64 [sp]
  8629: 01                       fallthrough
      :                          @617
  8630: ae 34 ca 00              jump @634 if t2 >=u t1
      :                          @618
  8634: 82 59                    a2 = u64 [s0]
  8636: 82 68                    a1 = u64 [s1]
  8638: 82 5a 08                 a3 = u64 [s0 + 0x8]
  8641: 82 67 08                 a0 = u64 [s1 + 0x8]
  8644: d9 98 0b                 a4 = a1 <s a2
  8647: d3 89 09                 a2 = a2 ^ a1
  8650: d9 a7 0c                 a5 = a0 <s a3
  8653: db 9b 0c                 a5 = a4 if a2 != 0
  8656: 33 0a 01                 a3 = 0x1
  8659: 52 0c 2f                 jump @623 if a5 != 0
      :                          @619
  8662: 95 69 18                 a2 = s1 + 0x18
  8665: 95 3a ff                 a3 = t1 + 0xffffffffffffffff
  8668: 01                       fallthrough
      :                          @620
  8669: aa 4a 7b                 jump @629 if a3 == t2
      :                          @621
  8672: 82 9b f8                 a4 = u64 [a2 + 0xfffffffffffffff8]
  8675: 82 9c                    a5 = u64 [a2]
  8677: d9 8b 06                 s1 = a4 <s a1
  8680: d3 b8 08                 a1 = a1 ^ a4
  8683: d9 7c 05                 s0 = a5 <s a0
  8686: db 86 05                 s0 = s1 if a1 != 0
  8689: 95 99 10                 a2 = a2 + 0x10
  8692: 95 44 01                 t2 = t2 + 0x1
  8695: 64 c7                    a0 = a5
  8697: 64 b8                    a1 = a4
  8699: 51 05 e2                 jump @620 if s0 == 0
      :                          @622
  8702: d8 34 0a                 a3 = t2 <u t1
  8705: 01                       fallthrough
      :                          @623
  8706: 95 49 ff                 a2 = t2 + 0xffffffffffffffff
  8709: ae 39 82 00              jump @636 if a2 >=u t1
      :                          @624
  8713: 51 0a 7d                 jump @635 if a3 == 0
      :                          @625
  8716: 97 97 04                 a0 = a2 << 0x4
  8719: c8 07 07                 a0 = a0 + ra
  8722: 97 48 04                 a1 = t2 << 0x4
  8725: 82 7a 08                 a3 = u64 [a0 + 0x8]
  8728: c8 08 08                 a1 = a1 + ra
  8731: 82 8b 08                 a4 = u64 [a1 + 0x8]
  8734: 7b 1a 20                 u64 [sp + 0x20] = a3
  8737: 82 7a                    a3 = u64 [a0]
  8739: 7b 7b 08                 u64 [a0 + 0x8] = a4
  8742: 82 8b                    a4 = u64 [a1]
  8744: 82 1c 20                 a5 = u64 [sp + 0x20]
  8747: 7b 1a 18                 u64 [sp + 0x18] = a3
  8750: 82 1a 18                 a3 = u64 [sp + 0x18]
  8753: 7b 7b                    u64 [a0] = a4
  8755: 7b 8c 08                 u64 [a1 + 0x8] = a5
  8758: 7b 8a                    u64 [a1] = a3
  8760: 53 14 02 44              jump @633 if t2 <u 2
      :                          @626
  8764: 64 07                    a0 = ra
  8766: 64 48                    a1 = t2
  8768: 64 45                    s0 = t2
  8770: 64 06                    s1 = ra
  8772: 50 20 36 01 0c 06        ra = 310, jump @787
      :                          @627 [@dyn 155]
  8778: 64 67                    a0 = s1
  8780: 64 58                    a1 = s0
  8782: 50 20 38 01 b8 08        ra = 312, jump @861
      :                          @628 [@dyn 156]
  8788: 33 07                    a0 = 0
  8790: 28 18                    jump @632
      :                          @629
  8792: 33 07 01                 a0 = 0x1
  8795: 28 13                    jump @632
      :                          @630
  8797: 64 38                    a1 = t1
  8799: d3 38 07                 a0 = a1 ^ t1
  8802: 88 77 01                 a0 = a0 <u 0x1
  8805: 28 09                    jump @632
      :                          @631
  8807: d3 38 07                 a0 = a1 ^ t1
  8810: 88 77 01                 a0 = a0 <u 0x1
  8813: 01                       fallthrough
      :                          @632
  8814: 82 10 38                 ra = u64 [sp + 0x38]
  8817: 82 15 30                 s0 = u64 [sp + 0x30]
  8820: 82 16 28                 s1 = u64 [sp + 0x28]
  8823: 95 11 40                 sp = sp + 0x40
  8826: 32 00                    ret
      :                          @633
  8828: 33 07                    a0 = 0
  8830: 28 f0                    jump @632
      :                          @634
  8832: 95 49 ff                 a2 = t2 + 0xffffffffffffffff
  8835: ae 39 04                 jump @636 if a2 >=u t1
      :                          @635
  8838: 00                       trap
      :                          @636
  8839: 00                       trap
      :                          @637
  8840: 95 11 c0                 sp = sp + 0xffffffffffffffc0
  8843: 7b 10 38                 u64 [sp + 0x38] = ra
  8846: 7b 15 30                 u64 [sp + 0x30] = s0
  8849: 7b 16 28                 u64 [sp + 0x28] = s1
  8852: 33 09 32                 a2 = 0x32
  8855: 64 82                    t0 = a1
  8857: 64 73                    t1 = a0
  8859: ae 98 34                 jump @643 if a1 >=u a2
      :                          @638
  8862: 82 37 18                 a0 = u64 [t1 + 0x18]
  8865: 82 39 08                 a2 = u64 [t1 + 0x8]
  8868: 33 08 01                 a1 = 0x1
  8871: ac 97 e5 02              jump @706 if a0 <u a2
      :                          @639
  8875: 95 39 28                 a2 = t1 + 0x28
  8878: 9a 26 02                 s1 = 0x2 - t0
  8881: 33 0b 01                 a4 = 0x1
  8884: 33 08 01                 a1 = 0x1
  8887: 01                       fallthrough
      :                          @640
  8888: c8 86 0a                 a3 = s1 + a1
  8891: aa ba c7 02              jump @705 if a3 == a4
      :                          @641
  8895: 64 7c                    a5 = a0
  8897: 82 97                    a0 = u64 [a2]
  8899: 95 88 01                 a1 = a1 + 0x1
  8902: 95 99 10                 a2 = a2 + 0x10
  8905: ae c7 ef                 jump @640 if a0 >=u a5
      :                          @642
  8908: 28 c0 02                 jump @706
      :                          @643
  8911: 82 37 08                 a0 = u64 [t1 + 0x8]
  8914: 82 38 18                 a1 = u64 [t1 + 0x18]
  8917: ae 78 0f                 jump @646 if a1 >=u a0
      :                          @644
  8920: 33 07 01                 a0 = 0x1
  8923: 33 06 01                 s1 = 0x1
  8926: ab 62 2b                 jump @650 if t0 != s1
      :                          @645
  8929: 28 b2 02                 jump @707
      :                          @646
  8932: 95 39 28                 a2 = t1 + 0x28
  8935: 9a 2a 02                 a3 = 0x2 - t0
  8938: 33 07 01                 a0 = 0x1
  8941: 33 06 01                 s1 = 0x1
  8944: 01                       fallthrough
      :                          @647
  8945: c8 6a 0c                 a5 = a3 + s1
  8948: aa 7c 9f 02              jump @707 if a5 == a0
      :                          @648
  8952: 64 8b                    a4 = a1
  8954: 82 98                    a1 = u64 [a2]
  8956: 95 99 10                 a2 = a2 + 0x10
  8959: 95 66 01                 s1 = s1 + 0x1
  8962: ae b8 ef                 jump @647 if a1 >=u a4
      :                          @649
  8965: d8 26 07                 a0 = s1 <u t0
  8968: 01                       fallthrough
      :                          @650
  8969: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  8972: ae 29 a0 02              jump @711 if a2 >=u t0
      :                          @651
  8976: 51 07 9b 02              jump @710 if a0 == 0
      :                          @652
  8980: 97 97 04                 a0 = a2 << 0x4
  8983: c8 73 0b                 a4 = t1 + a0
  8986: 97 65 04                 s0 = s1 << 0x4
  8989: 82 b7 08                 a0 = u64 [a4 + 0x8]
  8992: c8 35 05                 s0 = s0 + t1
  8995: 82 58 08                 a1 = u64 [s0 + 0x8]
  8998: 7b 17 20                 u64 [sp + 0x20] = a0
  9001: 82 b7                    a0 = u64 [a4]
  9003: 7b b8 08                 u64 [a4 + 0x8] = a1
  9006: 82 58                    a1 = u64 [s0]
  9008: 82 1a 20                 a3 = u64 [sp + 0x20]
  9011: 7b 17 18                 u64 [sp + 0x18] = a0
  9014: 82 17 18                 a0 = u64 [sp + 0x18]
  9017: 7b b8                    u64 [a4] = a1
  9019: 7b 5a 08                 u64 [s0 + 0x8] = a3
  9022: 7b 57                    u64 [s0] = a0
  9024: 7b 12 08                 u64 [sp + 0x8] = t0
  9027: 7b 13 10                 u64 [sp + 0x10] = t1
  9030: 53 16 02 24              jump @656 if s1 <u 2
      :                          @653
  9034: 64 37                    a0 = t1
  9036: 64 68                    a1 = s1
  9038: 7b 1b                    u64 [sp] = a4
  9040: 50 20 3a 01 dd 06        ra = 314, jump @838
      :                          @654 [@dyn 157]
  9046: 82 17 10                 a0 = u64 [sp + 0x10]
  9049: 64 68                    a1 = s1
  9051: 50 20 3c 01 39 08        ra = 316, jump @871
      :                          @655 [@dyn 158]
  9057: 82 1b                    a4 = u64 [sp]
  9059: 82 13 10                 t1 = u64 [sp + 0x10]
  9062: 82 12 08                 t0 = u64 [sp + 0x8]
  9065: 01                       fallthrough
      :                          @656
  9066: ae 26 3b 02              jump @709 if s1 >=u t0
      :                          @657
  9070: 82 b9 08                 a2 = u64 [a4 + 0x8]
  9073: 82 57 08                 a0 = u64 [s0 + 0x8]
  9076: 33 08 01                 a1 = 0x1
  9079: ac 97 1f                 jump @662 if a0 <u a2
      :                          @658
  9082: 95 55 18                 s0 = s0 + 0x18
  9085: 95 28 ff                 a1 = t0 + 0xffffffffffffffff
  9088: 01                       fallthrough
      :                          @659
  9089: aa 68 fc 01              jump @704 if a1 == s1
      :                          @660
  9093: 64 79                    a2 = a0
  9095: 82 57                    a0 = u64 [s0]
  9097: 95 55 10                 s0 = s0 + 0x10
  9100: 95 66 01                 s1 = s1 + 0x1
  9103: ae 97 f2                 jump @659 if a0 >=u a2
      :                          @661
  9106: d8 26 08                 a1 = s1 <u t0
  9109: 01                       fallthrough
      :                          @662
  9110: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  9113: ae 29 13 02              jump @711 if a2 >=u t0
      :                          @663
  9117: 51 08 0e 02              jump @710 if a1 == 0
      :                          @664
  9121: 97 97 04                 a0 = a2 << 0x4
  9124: c8 73 0b                 a4 = t1 + a0
  9127: 97 65 04                 s0 = s1 << 0x4
  9130: 82 b7 08                 a0 = u64 [a4 + 0x8]
  9133: c8 35 05                 s0 = s0 + t1
  9136: 82 58 08                 a1 = u64 [s0 + 0x8]
  9139: 7b 17 20                 u64 [sp + 0x20] = a0
  9142: 82 b7                    a0 = u64 [a4]
  9144: 7b b8 08                 u64 [a4 + 0x8] = a1
  9147: 82 58                    a1 = u64 [s0]
  9149: 82 1a 20                 a3 = u64 [sp + 0x20]
  9152: 7b 17 18                 u64 [sp + 0x18] = a0
  9155: 82 17 18                 a0 = u64 [sp + 0x18]
  9158: 7b b8                    u64 [a4] = a1
  9160: 7b 5a 08                 u64 [s0 + 0x8] = a3
  9163: 7b 57                    u64 [s0] = a0
  9165: 53 16 02 24              jump @668 if s1 <u 2
      :                          @665
  9169: 64 37                    a0 = t1
  9171: 64 68                    a1 = s1
  9173: 7b 1b                    u64 [sp] = a4
  9175: 50 20 3e 01 56 06        ra = 318, jump @838
      :                          @666 [@dyn 159]
  9181: 82 17 10                 a0 = u64 [sp + 0x10]
  9184: 64 68                    a1 = s1
  9186: 50 20 40 01 b2 07        ra = 320, jump @871
      :                          @667 [@dyn 160]
  9192: 82 1b                    a4 = u64 [sp]
  9194: 82 13 10                 t1 = u64 [sp + 0x10]
  9197: 82 12 08                 t0 = u64 [sp + 0x8]
  9200: 01                       fallthrough
      :                          @668
  9201: ae 26 b4 01              jump @709 if s1 >=u t0
      :                          @669
  9205: 82 b9 08                 a2 = u64 [a4 + 0x8]
  9208: 82 57 08                 a0 = u64 [s0 + 0x8]
  9211: 33 08 01                 a1 = 0x1
  9214: ac 97 1f                 jump @674 if a0 <u a2
      :                          @670
  9217: 95 55 18                 s0 = s0 + 0x18
  9220: 95 28 ff                 a1 = t0 + 0xffffffffffffffff
  9223: 01                       fallthrough
      :                          @671
  9224: aa 68 75 01              jump @704 if a1 == s1
      :                          @672
  9228: 64 79                    a2 = a0
  9230: 82 57                    a0 = u64 [s0]
  9232: 95 55 10                 s0 = s0 + 0x10
  9235: 95 66 01                 s1 = s1 + 0x1
  9238: ae 97 f2                 jump @671 if a0 >=u a2
      :                          @673
  9241: d8 26 08                 a1 = s1 <u t0
  9244: 01                       fallthrough
      :                          @674
  9245: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  9248: ae 29 8c 01              jump @711 if a2 >=u t0
      :                          @675
  9252: 51 08 87 01              jump @710 if a1 == 0
      :                          @676
  9256: 97 97 04                 a0 = a2 << 0x4
  9259: c8 73 0b                 a4 = t1 + a0
  9262: 97 65 04                 s0 = s1 << 0x4
  9265: 82 b7 08                 a0 = u64 [a4 + 0x8]
  9268: c8 35 05                 s0 = s0 + t1
  9271: 82 58 08                 a1 = u64 [s0 + 0x8]
  9274: 7b 17 20                 u64 [sp + 0x20] = a0
  9277: 82 b7                    a0 = u64 [a4]
  9279: 7b b8 08                 u64 [a4 + 0x8] = a1
  9282: 82 58                    a1 = u64 [s0]
  9284: 82 1a 20                 a3 = u64 [sp + 0x20]
  9287: 7b 17 18                 u64 [sp + 0x18] = a0
  9290: 82 17 18                 a0 = u64 [sp + 0x18]
  9293: 7b b8                    u64 [a4] = a1
  9295: 7b 5a 08                 u64 [s0 + 0x8] = a3
  9298: 7b 57                    u64 [s0] = a0
  9300: 53 16 02 24              jump @680 if s1 <u 2
      :                          @677
  9304: 64 37                    a0 = t1
  9306: 64 68                    a1 = s1
  9308: 7b 1b                    u64 [sp] = a4
  9310: 50 20 42 01 cf 05        ra = 322, jump @838
      :                          @678 [@dyn 161]
  9316: 82 17 10                 a0 = u64 [sp + 0x10]
  9319: 64 68                    a1 = s1
  9321: 50 20 44 01 2b 07        ra = 324, jump @871
      :                          @679 [@dyn 162]
  9327: 82 1b                    a4 = u64 [sp]
  9329: 82 13 10                 t1 = u64 [sp + 0x10]
  9332: 82 12 08                 t0 = u64 [sp + 0x8]
  9335: 01                       fallthrough
      :                          @680
  9336: ae 26 2d 01              jump @709 if s1 >=u t0
      :                          @681
  9340: 82 b9 08                 a2 = u64 [a4 + 0x8]
  9343: 82 57 08                 a0 = u64 [s0 + 0x8]
  9346: 33 08 01                 a1 = 0x1
  9349: ac 97 1f                 jump @686 if a0 <u a2
      :                          @682
  9352: 95 55 18                 s0 = s0 + 0x18
  9355: 95 28 ff                 a1 = t0 + 0xffffffffffffffff
  9358: 01                       fallthrough
      :                          @683
  9359: aa 68 ee 00              jump @704 if a1 == s1
      :                          @684
  9363: 64 79                    a2 = a0
  9365: 82 57                    a0 = u64 [s0]
  9367: 95 55 10                 s0 = s0 + 0x10
  9370: 95 66 01                 s1 = s1 + 0x1
  9373: ae 97 f2                 jump @683 if a0 >=u a2
      :                          @685
  9376: d8 26 08                 a1 = s1 <u t0
  9379: 01                       fallthrough
      :                          @686
  9380: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  9383: ae 29 05 01              jump @711 if a2 >=u t0
      :                          @687
  9387: 51 08 00 01              jump @710 if a1 == 0
      :                          @688
  9391: 97 97 04                 a0 = a2 << 0x4
  9394: c8 73 0b                 a4 = t1 + a0
  9397: 97 65 04                 s0 = s1 << 0x4
  9400: 82 b7 08                 a0 = u64 [a4 + 0x8]
  9403: c8 35 05                 s0 = s0 + t1
  9406: 82 58 08                 a1 = u64 [s0 + 0x8]
  9409: 7b 17 20                 u64 [sp + 0x20] = a0
  9412: 82 b7                    a0 = u64 [a4]
  9414: 7b b8 08                 u64 [a4 + 0x8] = a1
  9417: 82 58                    a1 = u64 [s0]
  9419: 82 1a 20                 a3 = u64 [sp + 0x20]
  9422: 7b 17 18                 u64 [sp + 0x18] = a0
  9425: 82 17 18                 a0 = u64 [sp + 0x18]
  9428: 7b b8                    u64 [a4] = a1
  9430: 7b 5a 08                 u64 [s0 + 0x8] = a3
  9433: 7b 57                    u64 [s0] = a0
  9435: 53 16 02 24              jump @692 if s1 <u 2
      :                          @689
  9439: 64 37                    a0 = t1
  9441: 64 68                    a1 = s1
  9443: 7b 1b                    u64 [sp] = a4
  9445: 50 20 46 01 48 05        ra = 326, jump @838
      :                          @690 [@dyn 163]
  9451: 82 17 10                 a0 = u64 [sp + 0x10]
  9454: 64 68                    a1 = s1
  9456: 50 20 48 01 a4 06        ra = 328, jump @871
      :                          @691 [@dyn 164]
  9462: 82 1b                    a4 = u64 [sp]
  9464: 82 13 10                 t1 = u64 [sp + 0x10]
  9467: 82 12 08                 t0 = u64 [sp + 0x8]
  9470: 01                       fallthrough
      :                          @692
  9471: ae 26 a6 00              jump @709 if s1 >=u t0
      :                          @693
  9475: 82 b9 08                 a2 = u64 [a4 + 0x8]
  9478: 82 57 08                 a0 = u64 [s0 + 0x8]
  9481: 33 08 01                 a1 = 0x1
  9484: ac 97 1e                 jump @698 if a0 <u a2
      :                          @694
  9487: 95 55 18                 s0 = s0 + 0x18
  9490: 95 28 ff                 a1 = t0 + 0xffffffffffffffff
  9493: 01                       fallthrough
      :                          @695
  9494: aa 68 67                 jump @704 if a1 == s1
      :                          @696
  9497: 64 79                    a2 = a0
  9499: 82 57                    a0 = u64 [s0]
  9501: 95 55 10                 s0 = s0 + 0x10
  9504: 95 66 01                 s1 = s1 + 0x1
  9507: ae 97 f3                 jump @695 if a0 >=u a2
      :                          @697
  9510: d8 26 08                 a1 = s1 <u t0
  9513: 01                       fallthrough
      :                          @698
  9514: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  9517: ae 29 7f                 jump @711 if a2 >=u t0
      :                          @699
  9520: 51 08 7b                 jump @710 if a1 == 0
      :                          @700
  9523: 97 97 04                 a0 = a2 << 0x4
  9526: c8 37 07                 a0 = a0 + t1
  9529: 97 68 04                 a1 = s1 << 0x4
  9532: 82 7a 08                 a3 = u64 [a0 + 0x8]
  9535: c8 38 08                 a1 = a1 + t1
  9538: 82 8b 08                 a4 = u64 [a1 + 0x8]
  9541: 7b 1a 20                 u64 [sp + 0x20] = a3
  9544: 82 7a                    a3 = u64 [a0]
  9546: 7b 7b 08                 u64 [a0 + 0x8] = a4
  9549: 82 8b                    a4 = u64 [a1]
  9551: 82 1c 20                 a5 = u64 [sp + 0x20]
  9554: 7b 1a 18                 u64 [sp + 0x18] = a3
  9557: 82 1a 18                 a3 = u64 [sp + 0x18]
  9560: 7b 7b                    u64 [a0] = a4
  9562: 7b 8c 08                 u64 [a1 + 0x8] = a5
  9565: 7b 8a                    u64 [a1] = a3
  9567: 53 16 02 42              jump @708 if s1 <u 2
      :                          @701
  9571: 64 37                    a0 = t1
  9573: 64 68                    a1 = s1
  9575: 64 35                    s0 = t1
  9577: 50 20 4a 01 c4 04        ra = 330, jump @838
      :                          @702 [@dyn 165]
  9583: 64 57                    a0 = s0
  9585: 64 68                    a1 = s1
  9587: 50 20 4c 01 21 06        ra = 332, jump @871
      :                          @703 [@dyn 166]
  9593: 33 07                    a0 = 0
  9595: 28 18                    jump @707
      :                          @704
  9597: 33 07 01                 a0 = 0x1
  9600: 28 13                    jump @707
      :                          @705
  9602: 64 28                    a1 = t0
  9604: d3 28 07                 a0 = a1 ^ t0
  9607: 88 77 01                 a0 = a0 <u 0x1
  9610: 28 09                    jump @707
      :                          @706
  9612: d3 28 07                 a0 = a1 ^ t0
  9615: 88 77 01                 a0 = a0 <u 0x1
  9618: 01                       fallthrough
      :                          @707
  9619: 82 10 38                 ra = u64 [sp + 0x38]
  9622: 82 15 30                 s0 = u64 [sp + 0x30]
  9625: 82 16 28                 s1 = u64 [sp + 0x28]
  9628: 95 11 40                 sp = sp + 0x40
  9631: 32 00                    ret
      :                          @708
  9633: 33 07                    a0 = 0
  9635: 28 f0                    jump @707
      :                          @709
  9637: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  9640: ae 29 04                 jump @711 if a2 >=u t0
      :                          @710
  9643: 00                       trap
      :                          @711
  9644: 00                       trap
      :                          @712
  9645: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  9648: 7b 10 28                 u64 [sp + 0x28] = ra
  9651: 7b 15 20                 u64 [sp + 0x20] = s0
  9654: 7b 16 18                 u64 [sp + 0x18] = s1
  9657: 33 09 32                 a2 = 0x32
  9660: 64 82                    t0 = a1
  9662: 64 73                    t1 = a0
  9664: ae 98 33                 jump @718 if a1 >=u a2
      :                          @713
  9667: 82 37 08                 a0 = u64 [t1 + 0x8]
  9670: 82 39                    a2 = u64 [t1]
  9672: 33 08 01                 a1 = 0x1
  9675: ac 79 64 02              jump @781 if a2 <u a0
      :                          @714
  9679: 95 39 10                 a2 = t1 + 0x10
  9682: 9a 26 02                 s1 = 0x2 - t0
  9685: 33 0b 01                 a4 = 0x1
  9688: 33 08 01                 a1 = 0x1
  9691: 01                       fallthrough
      :                          @715
  9692: c8 86 0a                 a3 = s1 + a1
  9695: aa ba 46 02              jump @780 if a3 == a4
      :                          @716
  9699: 64 7c                    a5 = a0
  9701: 82 97                    a0 = u64 [a2]
  9703: 95 88 01                 a1 = a1 + 0x1
  9706: 95 99 08                 a2 = a2 + 0x8
  9709: ae 7c ef                 jump @715 if a5 >=u a0
      :                          @717
  9712: 28 3f 02                 jump @781
      :                          @718
  9715: 82 37                    a0 = u64 [t1]
  9717: 82 38 08                 a1 = u64 [t1 + 0x8]
  9720: ae 87 0f                 jump @721 if a0 >=u a1
      :                          @719
  9723: 33 07 01                 a0 = 0x1
  9726: 33 06 01                 s1 = 0x1
  9729: ab 62 2b                 jump @725 if t0 != s1
      :                          @720
  9732: 28 32 02                 jump @782
      :                          @721
  9735: 95 39 10                 a2 = t1 + 0x10
  9738: 9a 2a 02                 a3 = 0x2 - t0
  9741: 33 07 01                 a0 = 0x1
  9744: 33 06 01                 s1 = 0x1
  9747: 01                       fallthrough
      :                          @722
  9748: c8 6a 0c                 a5 = a3 + s1
  9751: aa 7c 1f 02              jump @782 if a5 == a0
      :                          @723
  9755: 64 8b                    a4 = a1
  9757: 82 98                    a1 = u64 [a2]
  9759: 95 99 08                 a2 = a2 + 0x8
  9762: 95 66 01                 s1 = s1 + 0x1
  9765: ae 8b ef                 jump @722 if a4 >=u a1
      :                          @724
  9768: d8 26 07                 a0 = s1 <u t0
  9771: 01                       fallthrough
      :                          @725
  9772: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  9775: ae 29 20 02              jump @786 if a2 >=u t0
      :                          @726
  9779: 51 07 1b 02              jump @785 if a0 == 0
      :                          @727
  9783: 97 95 03                 s0 = a2 << 0x3
  9786: 97 67 03                 a0 = s1 << 0x3
  9789: c8 73 0a                 a3 = t1 + a0
  9792: 82 a7                    a0 = u64 [a3]
  9794: c8 35 05                 s0 = s0 + t1
  9797: 82 58                    a1 = u64 [s0]
  9799: 7b 57                    u64 [s0] = a0
  9801: 7b a8                    u64 [a3] = a1
  9803: 7b 12 08                 u64 [sp + 0x8] = t0
  9806: 7b 13 10                 u64 [sp + 0x10] = t1
  9809: 53 16 02 24              jump @731 if s1 <u 2
      :                          @728
  9813: 64 37                    a0 = t1
  9815: 64 68                    a1 = s1
  9817: 7b 1a                    u64 [sp] = a3
  9819: 50 20 4e 01 20 03        ra = 334, jump @812
      :                          @729 [@dyn 167]
  9825: 82 17 10                 a0 = u64 [sp + 0x10]
  9828: 64 68                    a1 = s1
  9830: 50 20 50 01 8a 05        ra = 336, jump @881
      :                          @730 [@dyn 168]
  9836: 82 1a                    a3 = u64 [sp]
  9838: 82 13 10                 t1 = u64 [sp + 0x10]
  9841: 82 12 08                 t0 = u64 [sp + 0x8]
  9844: 01                       fallthrough
      :                          @731
  9845: ae 26 d3 01              jump @784 if s1 >=u t0
      :                          @732
  9849: 82 59                    a2 = u64 [s0]
  9851: 82 a8                    a1 = u64 [a3]
  9853: 33 07 01                 a0 = 0x1
  9856: ac 89 1f                 jump @737 if a2 <u a1
      :                          @733
  9859: 95 a7 08                 a0 = a3 + 0x8
  9862: 95 29 ff                 a2 = t0 + 0xffffffffffffffff
  9865: 01                       fallthrough
      :                          @734
  9866: aa 69 96 01              jump @779 if a2 == s1
      :                          @735
  9870: 64 8a                    a3 = a1
  9872: 82 78                    a1 = u64 [a0]
  9874: 95 77 08                 a0 = a0 + 0x8
  9877: 95 66 01                 s1 = s1 + 0x1
  9880: ae 8a f2                 jump @734 if a3 >=u a1
      :                          @736
  9883: d8 26 07                 a0 = s1 <u t0
  9886: 01                       fallthrough
      :                          @737
  9887: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  9890: ae 29 ad 01              jump @786 if a2 >=u t0
      :                          @738
  9894: 51 07 a8 01              jump @785 if a0 == 0
      :                          @739
  9898: 97 95 03                 s0 = a2 << 0x3
  9901: 97 67 03                 a0 = s1 << 0x3
  9904: c8 73 0a                 a3 = t1 + a0
  9907: 82 a7                    a0 = u64 [a3]
  9909: c8 35 05                 s0 = s0 + t1
  9912: 82 58                    a1 = u64 [s0]
  9914: 7b 57                    u64 [s0] = a0
  9916: 7b a8                    u64 [a3] = a1
  9918: 53 16 02 24              jump @743 if s1 <u 2
      :                          @740
  9922: 64 37                    a0 = t1
  9924: 64 68                    a1 = s1
  9926: 7b 1a                    u64 [sp] = a3
  9928: 50 20 52 01 b3 02        ra = 338, jump @812
      :                          @741 [@dyn 169]
  9934: 82 17 10                 a0 = u64 [sp + 0x10]
  9937: 64 68                    a1 = s1
  9939: 50 20 54 01 1d 05        ra = 340, jump @881
      :                          @742 [@dyn 170]
  9945: 82 1a                    a3 = u64 [sp]
  9947: 82 13 10                 t1 = u64 [sp + 0x10]
  9950: 82 12 08                 t0 = u64 [sp + 0x8]
  9953: 01                       fallthrough
      :                          @743
  9954: ae 26 66 01              jump @784 if s1 >=u t0
      :                          @744
  9958: 82 59                    a2 = u64 [s0]
  9960: 82 a8                    a1 = u64 [a3]
  9962: 33 07 01                 a0 = 0x1
  9965: ac 89 1f                 jump @749 if a2 <u a1
      :                          @745
  9968: 95 a7 08                 a0 = a3 + 0x8
  9971: 95 29 ff                 a2 = t0 + 0xffffffffffffffff
  9974: 01                       fallthrough
      :                          @746
  9975: aa 69 29 01              jump @779 if a2 == s1
      :                          @747
  9979: 64 8a                    a3 = a1
  9981: 82 78                    a1 = u64 [a0]
  9983: 95 77 08                 a0 = a0 + 0x8
  9986: 95 66 01                 s1 = s1 + 0x1
  9989: ae 8a f2                 jump @746 if a3 >=u a1
      :                          @748
  9992: d8 26 07                 a0 = s1 <u t0
  9995: 01                       fallthrough
      :                          @749
  9996: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  9999: ae 29 40 01              jump @786 if a2 >=u t0
      :                          @750
 10003: 51 07 3b 01              jump @785 if a0 == 0
      :                          @751
 10007: 97 95 03                 s0 = a2 << 0x3
 10010: 97 67 03                 a0 = s1 << 0x3
 10013: c8 73 0a                 a3 = t1 + a0
 10016: 82 a7                    a0 = u64 [a3]
 10018: c8 35 05                 s0 = s0 + t1
 10021: 82 58                    a1 = u64 [s0]
 10023: 7b 57                    u64 [s0] = a0
 10025: 7b a8                    u64 [a3] = a1
 10027: 53 16 02 24              jump @755 if s1 <u 2
      :                          @752
 10031: 64 37                    a0 = t1
 10033: 64 68                    a1 = s1
 10035: 7b 1a                    u64 [sp] = a3
 10037: 50 20 56 01 46 02        ra = 342, jump @812
      :                          @753 [@dyn 171]
 10043: 82 17 10                 a0 = u64 [sp + 0x10]
 10046: 64 68                    a1 = s1
 10048: 50 20 58 01 b0 04        ra = 344, jump @881
      :                          @754 [@dyn 172]
 10054: 82 1a                    a3 = u64 [sp]
 10056: 82 13 10                 t1 = u64 [sp + 0x10]
 10059: 82 12 08                 t0 = u64 [sp + 0x8]
 10062: 01                       fallthrough
      :                          @755
 10063: ae 26 f9 00              jump @784 if s1 >=u t0
      :                          @756
 10067: 82 59                    a2 = u64 [s0]
 10069: 82 a8                    a1 = u64 [a3]
 10071: 33 07 01                 a0 = 0x1
 10074: ac 89 1f                 jump @761 if a2 <u a1
      :                          @757
 10077: 95 a7 08                 a0 = a3 + 0x8
 10080: 95 29 ff                 a2 = t0 + 0xffffffffffffffff
 10083: 01                       fallthrough
      :                          @758
 10084: aa 69 bc 00              jump @779 if a2 == s1
      :                          @759
 10088: 64 8a                    a3 = a1
 10090: 82 78                    a1 = u64 [a0]
 10092: 95 77 08                 a0 = a0 + 0x8
 10095: 95 66 01                 s1 = s1 + 0x1
 10098: ae 8a f2                 jump @758 if a3 >=u a1
      :                          @760
 10101: d8 26 07                 a0 = s1 <u t0
 10104: 01                       fallthrough
      :                          @761
 10105: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
 10108: ae 29 d3 00              jump @786 if a2 >=u t0
      :                          @762
 10112: 51 07 ce 00              jump @785 if a0 == 0
      :                          @763
 10116: 97 95 03                 s0 = a2 << 0x3
 10119: 97 67 03                 a0 = s1 << 0x3
 10122: c8 73 0a                 a3 = t1 + a0
 10125: 82 a7                    a0 = u64 [a3]
 10127: c8 35 05                 s0 = s0 + t1
 10130: 82 58                    a1 = u64 [s0]
 10132: 7b 57                    u64 [s0] = a0
 10134: 7b a8                    u64 [a3] = a1
 10136: 53 16 02 24              jump @767 if s1 <u 2
      :                          @764
 10140: 64 37                    a0 = t1
 10142: 64 68                    a1 = s1
 10144: 7b 1a                    u64 [sp] = a3
 10146: 50 20 5a 01 d9 01        ra = 346, jump @812
      :                          @765 [@dyn 173]
 10152: 82 17 10                 a0 = u64 [sp + 0x10]
 10155: 64 68                    a1 = s1
 10157: 50 20 5c 01 43 04        ra = 348, jump @881
      :                          @766 [@dyn 174]
 10163: 82 1a                    a3 = u64 [sp]
 10165: 82 13 10                 t1 = u64 [sp + 0x10]
 10168: 82 12 08                 t0 = u64 [sp + 0x8]
 10171: 01                       fallthrough
      :                          @767
 10172: ae 26 8c 00              jump @784 if s1 >=u t0
      :                          @768
 10176: 82 59                    a2 = u64 [s0]
 10178: 82 a8                    a1 = u64 [a3]
 10180: 33 07 01                 a0 = 0x1
 10183: ac 89 1e                 jump @773 if a2 <u a1
      :                          @769
 10186: 95 a7 08                 a0 = a3 + 0x8
 10189: 95 29 ff                 a2 = t0 + 0xffffffffffffffff
 10192: 01                       fallthrough
      :                          @770
 10193: aa 69 4f                 jump @779 if a2 == s1
      :                          @771
 10196: 64 8a                    a3 = a1
 10198: 82 78                    a1 = u64 [a0]
 10200: 95 77 08                 a0 = a0 + 0x8
 10203: 95 66 01                 s1 = s1 + 0x1
 10206: ae 8a f3                 jump @770 if a3 >=u a1
      :                          @772
 10209: d8 26 07                 a0 = s1 <u t0
 10212: 01                       fallthrough
      :                          @773
 10213: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
 10216: ae 29 67                 jump @786 if a2 >=u t0
      :                          @774
 10219: 51 07 63                 jump @785 if a0 == 0
      :                          @775
 10222: 97 97 03                 a0 = a2 << 0x3
 10225: 97 68 03                 a1 = s1 << 0x3
 10228: c8 38 08                 a1 = a1 + t1
 10231: 82 8a                    a3 = u64 [a1]
 10233: c8 37 07                 a0 = a0 + t1
 10236: 82 7b                    a4 = u64 [a0]
 10238: 7b 7a                    u64 [a0] = a3
 10240: 7b 8b                    u64 [a1] = a4
 10242: 53 16 02 42              jump @783 if s1 <u 2
      :                          @776
 10246: 64 37                    a0 = t1
 10248: 64 68                    a1 = s1
 10250: 64 35                    s0 = t1
 10252: 50 20 5e 01 6f 01        ra = 350, jump @812
      :                          @777 [@dyn 175]
 10258: 64 57                    a0 = s0
 10260: 64 68                    a1 = s1
 10262: 50 20 60 01 da 03        ra = 352, jump @881
      :                          @778 [@dyn 176]
 10268: 33 07                    a0 = 0
 10270: 28 18                    jump @782
      :                          @779
 10272: 33 07 01                 a0 = 0x1
 10275: 28 13                    jump @782
      :                          @780
 10277: 64 28                    a1 = t0
 10279: d3 28 07                 a0 = a1 ^ t0
 10282: 88 77 01                 a0 = a0 <u 0x1
 10285: 28 09                    jump @782
      :                          @781
 10287: d3 28 07                 a0 = a1 ^ t0
 10290: 88 77 01                 a0 = a0 <u 0x1
 10293: 01                       fallthrough
      :                          @782
 10294: 82 10 28                 ra = u64 [sp + 0x28]
 10297: 82 15 20                 s0 = u64 [sp + 0x20]
 10300: 82 16 18                 s1 = u64 [sp + 0x18]
 10303: 95 11 30                 sp = sp + 0x30
 10306: 32 00                    ret
      :                          @783
 10308: 33 07                    a0 = 0
 10310: 28 f0                    jump @782
      :                          @784
 10312: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
 10315: ae 29 04                 jump @786 if a2 >=u t0
      :                          @785
 10318: 00                       trap
      :                          @786
 10319: 00                       trap
      :                          @787
 10320: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 10323: 7b 10 30                 u64 [sp + 0x30] = ra
 10326: 7b 15 28                 u64 [sp + 0x28] = s0
 10329: 7b 16 20                 u64 [sp + 0x20] = s1
 10332: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
 10335: ae 8a c2 00              jump @798 if a3 >=u a1
      :                          @788
 10339: ae 89 b0 00              jump @797 if a2 >=u a1
      :                          @789
 10343: 64 73                    t1 = a0
 10345: 97 94 04                 t2 = a2 << 0x4
 10348: 95 42 f0                 t0 = t2 + 0xfffffffffffffff0
 10351: 95 46 e0                 s1 = t2 + 0xffffffffffffffe0
 10354: 95 44 e8                 t2 = t2 + 0xffffffffffffffe8
 10357: 7b 18                    u64 [sp] = a1
 10359: 28 22                    jump @792
      :                          @790
 10361: 7b 7a                    u64 [a0] = a3
 10363: 7b 70 08                 u64 [a0 + 0x8] = ra
 10366: 82 18                    a1 = u64 [sp]
 10368: 82 12 18                 t0 = u64 [sp + 0x18]
 10371: 82 16 10                 s1 = u64 [sp + 0x10]
 10374: 82 14 08                 t2 = u64 [sp + 0x8]
 10377: 01                       fallthrough
      :                          @791
 10378: 95 99 01                 a2 = a2 + 0x1
 10381: 95 22 10                 t0 = t0 + 0x10
 10384: 95 66 10                 s1 = s1 + 0x10
 10387: 95 44 10                 t2 = t2 + 0x10
 10390: aa 89 7d                 jump @797 if a2 == a1
      :                          @792
 10393: 97 9b 04                 a4 = a2 << 0x4
 10396: c8 3b 0b                 a4 = a4 + t1
 10399: 82 ba                    a3 = u64 [a4]
 10401: 82 b7 f0                 a0 = u64 [a4 + 0xfffffffffffffff0]
 10404: 82 b0 08                 ra = u64 [a4 + 0x8]
 10407: 82 bc f8                 a5 = u64 [a4 + 0xfffffffffffffff8]
 10410: d9 7a 05                 s0 = a3 <s a0
 10413: d3 a7 07                 a0 = a0 ^ a3
 10416: d9 c0 0c                 a5 = ra <s a5
 10419: db 75 0c                 a5 = s0 if a0 != 0
 10422: 51 0c d4                 jump @791 if a5 == 0
      :                          @793
 10425: 95 b7 f0                 a0 = a4 + 0xfffffffffffffff0
 10428: 82 7c 08                 a5 = u64 [a0 + 0x8]
 10431: 7b bc 08                 u64 [a4 + 0x8] = a5
 10434: 82 78                    a1 = u64 [a0]
 10436: 95 9c ff                 a5 = a2 + 0xffffffffffffffff
 10439: 7b b8                    u64 [a4] = a1
 10441: 7b 14 08                 u64 [sp + 0x8] = t2
 10444: 64 45                    s0 = t2
 10446: 7b 16 10                 u64 [sp + 0x10] = s1
 10449: 7b 12 18                 u64 [sp + 0x18] = t0
 10452: 64 2b                    a4 = t0
 10454: 51 0c a3                 jump @790 if a5 == 0
      :                          @794
 10457: c8 63 02                 t0 = t1 + s1
 10460: 82 27                    a0 = u64 [t0]
 10462: c8 53 08                 a1 = t1 + s0
 10465: 82 88                    a1 = u64 [a1]
 10467: d9 7a 04                 t2 = a3 <s a0
 10470: d3 a7 07                 a0 = a0 ^ a3
 10473: d9 80 08                 a1 = ra <s a1
 10476: db 74 08                 a1 = t2 if a0 != 0
 10479: c8 b3 07                 a0 = t1 + a4
 10482: 51 08 87                 jump @790 if a1 == 0
      :                          @795
 10485: 82 28 08                 a1 = u64 [t0 + 0x8]
 10488: 7b 78 08                 u64 [a0 + 0x8] = a1
 10491: 82 28                    a1 = u64 [t0]
 10493: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 10496: 7b 78                    u64 [a0] = a1
 10498: 95 bb f0                 a4 = a4 + 0xfffffffffffffff0
 10501: 95 66 f0                 s1 = s1 + 0xfffffffffffffff0
 10504: 95 55 f0                 s0 = s0 + 0xfffffffffffffff0
 10507: 52 0c ce                 jump @794 if a5 != 0
      :                          @796
 10510: 64 37                    a0 = t1
 10512: 28 69 ff                 jump @790
      :                          @797
 10515: 82 10 30                 ra = u64 [sp + 0x30]
 10518: 82 15 28                 s0 = u64 [sp + 0x28]
 10521: 82 16 20                 s1 = u64 [sp + 0x20]
 10524: 95 11 38                 sp = sp + 0x38
 10527: 32 00                    ret
      :                          @798
 10529: 00                       trap
      :                          @799
 10530: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
 10533: ae 8a 55                 jump @811 if a3 >=u a1
      :                          @800
 10536: ae 89 50                 jump @810 if a2 >=u a1
      :                          @801
 10539: 97 9a 03                 a3 = a2 << 0x3
 10542: c8 7a 0a                 a3 = a3 + a0
 10545: 95 a2 f8                 t0 = a3 + 0xfffffffffffffff8
 10548: 28 15                    jump @805
      :                          @802
 10550: 95 3c f8                 a5 = t1 + 0xfffffffffffffff8
 10553: 7b c4                    u64 [a5] = t2
 10555: 28 05                    jump @804
      :                          @803
 10557: 7b c4                    u64 [a5] = t2
 10559: 01                       fallthrough
      :                          @804
 10560: 95 99 01                 a2 = a2 + 0x1
 10563: 95 22 08                 t0 = t0 + 0x8
 10566: aa 89 32                 jump @810 if a2 == a1
      :                          @805
 10569: 97 93 03                 t1 = a2 << 0x3
 10572: c8 73 03                 t1 = t1 + a0
 10575: 82 34                    t2 = u64 [t1]
 10577: 82 3c f8                 a5 = u64 [t1 + 0xfffffffffffffff8]
 10580: af c4 ec                 jump @804 if t2 >=s a5
      :                          @806
 10583: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
 10586: 7b 3c                    u64 [t1] = a5
 10588: 64 2c                    a5 = t0
 10590: 51 0a d8                 jump @802 if a3 == 0
      :                          @807
 10593: 82 cb f8                 a4 = u64 [a5 + 0xfffffffffffffff8]
 10596: af b4 d9                 jump @803 if t2 >=s a4
      :                          @808
 10599: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 10602: 7b cb                    u64 [a5] = a4
 10604: 95 cc f8                 a5 = a5 + 0xfffffffffffffff8
 10607: 52 0a f2                 jump @807 if a3 != 0
      :                          @809
 10610: 64 7c                    a5 = a0
 10612: 7b c4                    u64 [a5] = t2
 10614: 28 ca                    jump @804
      :                          @810
 10616: 32 00                    ret
      :                          @811
 10618: 00                       trap
      :                          @812
 10619: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
 10622: ae 8a 55                 jump @824 if a3 >=u a1
      :                          @813
 10625: ae 89 50                 jump @823 if a2 >=u a1
      :                          @814
 10628: 97 9a 03                 a3 = a2 << 0x3
 10631: c8 7a 0a                 a3 = a3 + a0
 10634: 95 a2 f8                 t0 = a3 + 0xfffffffffffffff8
 10637: 28 15                    jump @818
      :                          @815
 10639: 95 3c f8                 a5 = t1 + 0xfffffffffffffff8
 10642: 7b c4                    u64 [a5] = t2
 10644: 28 05                    jump @817
      :                          @816
 10646: 7b c4                    u64 [a5] = t2
 10648: 01                       fallthrough
      :                          @817
 10649: 95 99 01                 a2 = a2 + 0x1
 10652: 95 22 08                 t0 = t0 + 0x8
 10655: aa 89 32                 jump @823 if a2 == a1
      :                          @818
 10658: 97 93 03                 t1 = a2 << 0x3
 10661: c8 73 03                 t1 = t1 + a0
 10664: 82 34                    t2 = u64 [t1]
 10666: 82 3c f8                 a5 = u64 [t1 + 0xfffffffffffffff8]
 10669: ae 4c ec                 jump @817 if a5 >=u t2
      :                          @819
 10672: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
 10675: 7b 3c                    u64 [t1] = a5
 10677: 64 2c                    a5 = t0
 10679: 51 0a d8                 jump @815 if a3 == 0
      :                          @820
 10682: 82 cb f8                 a4 = u64 [a5 + 0xfffffffffffffff8]
 10685: ae 4b d9                 jump @816 if a4 >=u t2
      :                          @821
 10688: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 10691: 7b cb                    u64 [a5] = a4
 10693: 95 cc f8                 a5 = a5 + 0xfffffffffffffff8
 10696: 52 0a f2                 jump @820 if a3 != 0
      :                          @822
 10699: 64 7c                    a5 = a0
 10701: 7b c4                    u64 [a5] = t2
 10703: 28 ca                    jump @817
      :                          @823
 10705: 32 00                    ret
      :                          @824
 10707: 00                       trap
      :                          @825
 10708: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
 10711: ae 8a 55                 jump @837 if a3 >=u a1
      :                          @826
 10714: ae 89 50                 jump @836 if a2 >=u a1
      :                          @827
 10717: 97 9a 03                 a3 = a2 << 0x3
 10720: c8 7a 0a                 a3 = a3 + a0
 10723: 95 a2 f8                 t0 = a3 + 0xfffffffffffffff8
 10726: 28 15                    jump @831
      :                          @828
 10728: 95 3c f8                 a5 = t1 + 0xfffffffffffffff8
 10731: 7b c4                    u64 [a5] = t2
 10733: 28 05                    jump @830
      :                          @829
 10735: 7b c4                    u64 [a5] = t2
 10737: 01                       fallthrough
      :                          @830
 10738: 95 99 01                 a2 = a2 + 0x1
 10741: 95 22 08                 t0 = t0 + 0x8
 10744: aa 89 32                 jump @836 if a2 == a1
      :                          @831
 10747: 97 93 03                 t1 = a2 << 0x3
 10750: c8 73 03                 t1 = t1 + a0
 10753: 82 34                    t2 = u64 [t1]
 10755: 82 3c f8                 a5 = u64 [t1 + 0xfffffffffffffff8]
 10758: ae c4 ec                 jump @830 if t2 >=u a5
      :                          @832
 10761: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
 10764: 7b 3c                    u64 [t1] = a5
 10766: 64 2c                    a5 = t0
 10768: 51 0a d8                 jump @828 if a3 == 0
      :                          @833
 10771: 82 cb f8                 a4 = u64 [a5 + 0xfffffffffffffff8]
 10774: ae b4 d9                 jump @829 if t2 >=u a4
      :                          @834
 10777: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 10780: 7b cb                    u64 [a5] = a4
 10782: 95 cc f8                 a5 = a5 + 0xfffffffffffffff8
 10785: 52 0a f2                 jump @833 if a3 != 0
      :                          @835
 10788: 64 7c                    a5 = a0
 10790: 7b c4                    u64 [a5] = t2
 10792: 28 ca                    jump @830
      :                          @836
 10794: 32 00                    ret
      :                          @837
 10796: 00                       trap
      :                          @838
 10797: 95 11 f8                 sp = sp + 0xfffffffffffffff8
 10800: 7b 15                    u64 [sp] = s0
 10802: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
 10805: ae 8a 79                 jump @850 if a3 >=u a1
      :                          @839
 10808: ae 89 6f                 jump @849 if a2 >=u a1
      :                          @840
 10811: 97 9a 04                 a3 = a2 << 0x4
 10814: c8 7a 0a                 a3 = a3 + a0
 10817: 95 a3 f0                 t1 = a3 + 0xfffffffffffffff0
 10820: 28 1b                    jump @844
      :                          @841
 10822: 95 ba f0                 a3 = a4 + 0xfffffffffffffff0
 10825: 7b a2                    u64 [a3] = t0
 10827: 7b a4 08                 u64 [a3 + 0x8] = t2
 10830: 28 08                    jump @843
      :                          @842
 10832: 7b a2                    u64 [a3] = t0
 10834: 7b a4 08                 u64 [a3 + 0x8] = t2
 10837: 01                       fallthrough
      :                          @843
 10838: 95 99 01                 a2 = a2 + 0x1
 10841: 95 33 10                 t1 = t1 + 0x10
 10844: aa 89 4b                 jump @849 if a2 == a1
      :                          @844
 10847: 97 9b 04                 a4 = a2 << 0x4
 10850: c8 7b 0b                 a4 = a4 + a0
 10853: 82 b4 08                 t2 = u64 [a4 + 0x8]
 10856: 82 ba f8                 a3 = u64 [a4 + 0xfffffffffffffff8]
 10859: ae a4 eb                 jump @843 if t2 >=u a3
      :                          @845
 10862: 82 ba f8                 a3 = u64 [a4 + 0xfffffffffffffff8]
 10865: 82 b5 f0                 s0 = u64 [a4 + 0xfffffffffffffff0]
 10868: 82 b2                    t0 = u64 [a4]
 10870: 7b ba 08                 u64 [a4 + 0x8] = a3
 10873: 95 9c ff                 a5 = a2 + 0xffffffffffffffff
 10876: 7b b5                    u64 [a4] = s0
 10878: 64 3a                    a3 = t1
 10880: 51 0c c6                 jump @841 if a5 == 0
      :                          @846
 10883: 82 ab f8                 a4 = u64 [a3 + 0xfffffffffffffff8]
 10886: ae b4 ca                 jump @842 if t2 >=u a4
      :                          @847
 10889: 95 ab f0                 a4 = a3 + 0xfffffffffffffff0
 10892: 82 b5 08                 s0 = u64 [a4 + 0x8]
 10895: 7b a5 08                 u64 [a3 + 0x8] = s0
 10898: 82 b5                    s0 = u64 [a4]
 10900: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 10903: 7b a5                    u64 [a3] = s0
 10905: 64 ba                    a3 = a4
 10907: 52 0c e8                 jump @846 if a5 != 0
      :                          @848
 10910: 64 7a                    a3 = a0
 10912: 7b a2                    u64 [a3] = t0
 10914: 7b a4 08                 u64 [a3 + 0x8] = t2
 10917: 28 b1                    jump @843
      :                          @849
 10919: 82 15                    s0 = u64 [sp]
 10921: 95 11 08                 sp = sp + 0x8
 10924: 32 00                    ret
      :                          @850
 10926: 00                       trap
      :                          @851
 10927: 82 7a 08                 a3 = u64 [a0 + 0x8]
 10930: 82 79                    a2 = u64 [a0]
 10932: af 9a 50                 jump @860 if a3 >=s a2
      :                          @852
 10935: 7b 7a                    u64 [a0] = a3
 10937: 33 0b 03                 a4 = 0x3
 10940: 95 7a 08                 a3 = a0 + 0x8
 10943: ac b8 41                 jump @859 if a1 <u a4
      :                          @853
 10946: 82 7b 10                 a4 = u64 [a0 + 0x10]
 10949: af 9b 3b                 jump @859 if a4 >=s a2
      :                          @854
 10952: 97 8c 03                 a5 = a1 << 0x3
 10955: c8 7c 02                 t0 = a5 + a0
 10958: 7b ab                    u64 [a3] = a4
 10960: 33 0c 03                 a5 = 0x3
 10963: 95 22 f8                 t0 = t0 + 0xfffffffffffffff8
 10966: aa c8 24                 jump @858 if a1 == a5
      :                          @855
 10969: 95 7a 10                 a3 = a0 + 0x10
 10972: 9a 87 03                 a0 = 0x3 - a1
 10975: 33 08 04                 a1 = 0x4
 10978: 33 0c 04                 a5 = 0x4
 10981: 01                       fallthrough
      :                          @856
 10982: 82 ab 08                 a4 = u64 [a3 + 0x8]
 10985: af 9b 17                 jump @859 if a4 >=s a2
      :                          @857
 10988: 7b ab                    u64 [a3] = a4
 10990: 95 cc 01                 a5 = a5 + 0x1
 10993: c8 c7 0b                 a4 = a0 + a5
 10996: 95 aa 08                 a3 = a3 + 0x8
 10999: ab 8b ef                 jump @856 if a4 != a1
      :                          @858
 11002: 64 2a                    a3 = t0
 11004: 7b a9                    u64 [a3] = a2
 11006: 32 00                    ret
      :                          @859
 11008: 7b a9                    u64 [a3] = a2
 11010: 32 00                    ret
      :                          @860
 11012: 32 00                    ret
      :                          @861
 11014: 82 7b 10                 a4 = u64 [a0 + 0x10]
 11017: 82 74                    t2 = u64 [a0]
 11019: 82 7c 18                 a5 = u64 [a0 + 0x18]
 11022: 82 72 08                 t0 = u64 [a0 + 0x8]
 11025: d9 4b 0a                 a3 = a4 <s t2
 11028: d3 4b 0b                 a4 = a4 ^ t2
 11031: d9 2c 0c                 a5 = a5 <s t0
 11034: db ba 0c                 a5 = a3 if a4 != 0
 11037: 51 0c 75                 jump @870 if a5 == 0
      :                          @862
 11040: 95 11 f0                 sp = sp + 0xfffffffffffffff0
 11043: 7b 15 08                 u64 [sp + 0x8] = s0
 11046: 95 7b 10                 a4 = a0 + 0x10
 11049: 82 ba 08                 a3 = u64 [a4 + 0x8]
 11052: 7b 7a 08                 u64 [a0 + 0x8] = a3
 11055: 82 ba                    a3 = u64 [a4]
 11057: 33 0c 03                 a5 = 0x3
 11060: 7b 7a                    u64 [a0] = a3
 11062: ac c8 4f                 jump @869 if a1 <u a5
      :                          @863
 11065: 82 7a 20                 a3 = u64 [a0 + 0x20]
 11068: 82 7c 28                 a5 = u64 [a0 + 0x28]
 11071: d9 4a 03                 t1 = a3 <s t2
 11074: d3 4a 0a                 a3 = a3 ^ t2
 11077: d9 2c 0c                 a5 = a5 <s t0
 11080: db a3 0c                 a5 = t1 if a3 != 0
 11083: 51 0c 3a                 jump @869 if a5 == 0
      :                          @864
 11086: 95 7c 20                 a5 = a0 + 0x20
 11089: 33 07 03                 a0 = 0x3
 11092: 01                       fallthrough
      :                          @865
 11093: 82 c9 08                 a2 = u64 [a5 + 0x8]
 11096: 82 ca                    a3 = u64 [a5]
 11098: 7b c9 f8                 u64 [a5 + 0xfffffffffffffff8] = a2
 11101: 7b ca f0                 u64 [a5 + 0xfffffffffffffff0] = a3
 11104: aa 78 22                 jump @868 if a1 == a0
      :                          @866
 11107: 82 ca 10                 a3 = u64 [a5 + 0x10]
 11110: 82 c3 18                 t1 = u64 [a5 + 0x18]
 11113: 64 cb                    a4 = a5
 11115: 95 cc 10                 a5 = a5 + 0x10
 11118: d9 4a 05                 s0 = a3 <s t2
 11121: d3 4a 0a                 a3 = a3 ^ t2
 11124: d9 23 09                 a2 = t1 <s t0
 11127: db a5 09                 a2 = s0 if a3 != 0
 11130: 95 77 01                 a0 = a0 + 0x1
 11133: 52 09 d8                 jump @865 if a2 != 0
      :                          @867
 11136: 28 05                    jump @869
      :                          @868
 11138: 64 cb                    a4 = a5
 11140: 01                       fallthrough
      :                          @869
 11141: 7b b4                    u64 [a4] = t2
 11143: 7b b2 08                 u64 [a4 + 0x8] = t0
 11146: 82 15 08                 s0 = u64 [sp + 0x8]
 11149: 95 11 10                 sp = sp + 0x10
 11152: 32 00                    ret
      :                          @870
 11154: 32 00                    ret
      :                          @871
 11156: 82 7a 18                 a3 = u64 [a0 + 0x18]
 11159: 82 79 08                 a2 = u64 [a0 + 0x8]
 11162: ae 9a 54                 jump @880 if a3 >=u a2
      :                          @872
 11165: 82 7b 18                 a4 = u64 [a0 + 0x18]
 11168: 82 7c 10                 a5 = u64 [a0 + 0x10]
 11171: 82 72                    t0 = u64 [a0]
 11173: 7b 7b 08                 u64 [a0 + 0x8] = a4
 11176: 7b 7c                    u64 [a0] = a5
 11178: 33 0b 03                 a4 = 0x3
 11181: 95 7c 10                 a5 = a0 + 0x10
 11184: ac b8 37                 jump @879 if a1 <u a4
      :                          @873
 11187: 82 7b 28                 a4 = u64 [a0 + 0x28]
 11190: ae 9b 31                 jump @879 if a4 >=u a2
      :                          @874
 11193: 95 77 20                 a0 = a0 + 0x20
 11196: 33 0b 03                 a4 = 0x3
 11199: 01                       fallthrough
      :                          @875
 11200: 82 7a 08                 a3 = u64 [a0 + 0x8]
 11203: 82 7c                    a5 = u64 [a0]
 11205: 7b 7a f8                 u64 [a0 + 0xfffffffffffffff8] = a3
 11208: 7b 7c f0                 u64 [a0 + 0xfffffffffffffff0] = a5
 11211: aa b8 13                 jump @878 if a1 == a4
      :                          @876
 11214: 82 7a 18                 a3 = u64 [a0 + 0x18]
 11217: 64 7c                    a5 = a0
 11219: 95 77 10                 a0 = a0 + 0x10
 11222: 95 bb 01                 a4 = a4 + 0x1
 11225: ac 9a e7                 jump @875 if a3 <u a2
      :                          @877
 11228: 28 0b                    jump @879
      :                          @878
 11230: 64 7c                    a5 = a0
 11232: 7b c2                    u64 [a5] = t0
 11234: 7b c9 08                 u64 [a5 + 0x8] = a2
 11237: 32 00                    ret
      :                          @879
 11239: 7b c2                    u64 [a5] = t0
 11241: 7b c9 08                 u64 [a5 + 0x8] = a2
 11244: 32 00                    ret
      :                          @880
 11246: 32 00                    ret
      :                          @881
 11248: 82 7a 08                 a3 = u64 [a0 + 0x8]
 11251: 82 79                    a2 = u64 [a0]
 11253: ae a9 50                 jump @890 if a2 >=u a3
      :                          @882
 11256: 7b 7a                    u64 [a0] = a3
 11258: 33 0b 03                 a4 = 0x3
 11261: 95 7a 08                 a3 = a0 + 0x8
 11264: ac b8 41                 jump @889 if a1 <u a4
      :                          @883
 11267: 82 7b 10                 a4 = u64 [a0 + 0x10]
 11270: ae b9 3b                 jump @889 if a2 >=u a4
      :                          @884
 11273: 97 8c 03                 a5 = a1 << 0x3
 11276: c8 7c 02                 t0 = a5 + a0
 11279: 7b ab                    u64 [a3] = a4
 11281: 33 0c 03                 a5 = 0x3
 11284: 95 22 f8                 t0 = t0 + 0xfffffffffffffff8
 11287: aa c8 24                 jump @888 if a1 == a5
      :                          @885
 11290: 95 7a 10                 a3 = a0 + 0x10
 11293: 9a 87 03                 a0 = 0x3 - a1
 11296: 33 08 04                 a1 = 0x4
 11299: 33 0c 04                 a5 = 0x4
 11302: 01                       fallthrough
      :                          @886
 11303: 82 ab 08                 a4 = u64 [a3 + 0x8]
 11306: ae b9 17                 jump @889 if a2 >=u a4
      :                          @887
 11309: 7b ab                    u64 [a3] = a4
 11311: 95 cc 01                 a5 = a5 + 0x1
 11314: c8 c7 0b                 a4 = a0 + a5
 11317: 95 aa 08                 a3 = a3 + 0x8
 11320: ab 8b ef                 jump @886 if a4 != a1
      :                          @888
 11323: 64 2a                    a3 = t0
 11325: 7b a9                    u64 [a3] = a2
 11327: 32 00                    ret
      :                          @889
 11329: 7b a9                    u64 [a3] = a2
 11331: 32 00                    ret
      :                          @890
 11333: 32 00                    ret
      :                          @891
 11335: 95 11 60 fe              sp = sp + 0xfffffffffffffe60
 11339: 7b 10 98 01              u64 [sp + 0x198] = ra
 11343: 7b 15 90 01              u64 [sp + 0x190] = s0
 11347: 7b 16 88 01              u64 [sp + 0x188] = s1
 11351: 33 0b 15                 a4 = 0x15
 11354: 7b 1a 48                 u64 [sp + 0x48] = a3
 11357: 7b 19 58                 u64 [sp + 0x58] = a2
 11360: 64 80                    ra = a1
 11362: ae b8 2b                 jump @896 if a1 >=u a4
      :                          @892
 11365: 64 72                    t0 = a0
 11367: 01                       fallthrough
      :                          @893
 11368: 33 07 01                 a0 = 0x1
 11371: ae 07 10                 jump @895 if a0 >=u ra
      :                          @894
 11374: 33 09 01                 a2 = 0x1
 11377: 64 27                    a0 = t0
 11379: 64 08                    a1 = ra
 11381: 50 20 62 01 06 fd        ra = 354, jump @812
      :                          @895 [@dyn 177]
 11387: 82 10 98 01              ra = u64 [sp + 0x198]
 11391: 82 15 90 01              s0 = u64 [sp + 0x190]
 11395: 82 16 88 01              s1 = u64 [sp + 0x188]
 11399: 95 11 a0 01              sp = sp + 0x1a0
 11403: 32 00                    ret
      :                          @896
 11405: 7b 17 08                 u64 [sp + 0x8] = a0
 11408: 49 11 78 01              u64 [sp + 120] = 0x1
 11412: 33 05 01 01              s0 = 0x101
 11416: 33 07 01                 a0 = 0x1
 11419: 7b 10                    u64 [sp] = ra
 11421: 01                       fallthrough
      :                          @897
 11422: 82 18 78                 a1 = u64 [sp + 0x78]
 11425: d2 87 07                 a0 = a0 & a1
 11428: 7b 17 70                 u64 [sp + 0x70] = a0
 11431: 82 12 08                 t0 = u64 [sp + 0x8]
 11434: 01                       fallthrough
      :                          @898
 11435: 81 17 48                 a0 = i32 [sp + 0x48]
 11438: 51 07 b6 05              jump @994 if a0 == 0
      :                          @899
 11442: 82 17 78                 a0 = u64 [sp + 0x78]
 11445: 84 77 01                 a0 = a0 & 0x1
 11448: 7b 12 80 00              u64 [sp + 0x80] = t0
 11452: 51 07 74 02              jump @939 if a0 == 0
      :                          @900
 11456: 98 0b 02                 a4 = ra >> 0x2
 11459: 97 b6 01                 s1 = a4 << 0x1
 11462: c8 b6 03                 t1 = s1 + a4
 11465: 54 10 31 29              jump @903 if ra <=u 49
      :                          @901
 11469: 95 b5 ff                 s0 = a4 + 0xffffffffffffffff
 11472: 97 b7 03                 a0 = a4 << 0x3
 11475: c8 27 07                 a0 = a0 + t0
 11478: 97 58 03                 a1 = s0 << 0x3
 11481: c8 28 08                 a1 = a1 + t0
 11484: 82 79                    a2 = u64 [a0]
 11486: 82 88                    a1 = u64 [a1]
 11488: ae 98 17                 jump @904 if a1 >=u a2
      :                          @902
 11491: 49 11 28 01              u64 [sp + 40] = 0x1
 11495: 64 94                    t2 = a2
 11497: 7b 15 50                 u64 [sp + 0x50] = s0
 11500: 64 b5                    s0 = a4
 11502: 64 89                    a2 = a1
 11504: 28 10                    jump @905
      :                          @903
 11506: 33 09                    a2 = 0
 11508: 28 1e 01                 jump @912
      :                          @904
 11511: 49 11 28                 u64 [sp + 40] = 0
 11514: 64 84                    t2 = a1
 11516: 7b 1b 50                 u64 [sp + 0x50] = a4
 11519: 01                       fallthrough
      :                          @905
 11520: 95 b8 01                 a1 = a4 + 0x1
 11523: 7b 18 40                 u64 [sp + 0x40] = a1
 11526: 97 88 03                 a1 = a1 << 0x3
 11529: 82 1b 80 00              a4 = u64 [sp + 0x80]
 11533: c8 b8 08                 a1 = a1 + a4
 11536: 82 87                    a0 = u64 [a1]
 11538: d8 79 02                 t0 = a2 <u a0
 11541: 95 6a ff                 a3 = s1 + 0xffffffffffffffff
 11544: 97 68 03                 a1 = s1 << 0x3
 11547: c8 b8 08                 a1 = a1 + a4
 11550: 97 ac 03                 a5 = a3 << 0x3
 11553: c8 cb 0b                 a4 = a4 + a5
 11556: 82 8c                    a5 = u64 [a1]
 11558: 82 b8                    a1 = u64 [a4]
 11560: e4 79 07                 a0 = maxu(a2, a0)
 11563: d8 74 09                 a2 = t2 <u a0
 11566: 7b 12 38                 u64 [sp + 0x38] = t0
 11569: 82 17 28                 a0 = u64 [sp + 0x28]
 11572: c8 27 07                 a0 = a0 + t0
 11575: c8 97 07                 a0 = a0 + a2
 11578: 7b 10 68                 u64 [sp + 0x68] = ra
 11581: 7b 15 60                 u64 [sp + 0x60] = s0
 11584: 7b 19 30                 u64 [sp + 0x30] = a2
 11587: ae c8 13                 jump @907 if a1 >=u a5
      :                          @906
 11590: 95 77 01                 a0 = a0 + 0x1
 11593: 7b 17 18                 u64 [sp + 0x18] = a0
 11596: 7b 1c 20                 u64 [sp + 0x20] = a5
 11599: 7b 1a 28                 u64 [sp + 0x28] = a3
 11602: 64 6a                    a3 = s1
 11604: 28 0e                    jump @908
      :                          @907
 11606: 7b 18 20                 u64 [sp + 0x20] = a1
 11609: 7b 16 28                 u64 [sp + 0x28] = s1
 11612: 64 c8                    a1 = a5
 11614: 7b 17 18                 u64 [sp + 0x18] = a0
 11617: 01                       fallthrough
      :                          @908
 11618: 86 66 01                 s1 = s1 | 0x1
 11621: 97 6b 03                 a4 = s1 << 0x3
 11624: 82 15 80 00              s0 = u64 [sp + 0x80]
 11628: c8 5b 0b                 a4 = a4 + s0
 11631: 82 bb                    a4 = u64 [a4]
 11633: d8 b8 07                 a0 = a1 <u a4
 11636: 95 34 ff                 t2 = t1 + 0xffffffffffffffff
 11639: 97 39 03                 a2 = t1 << 0x3
 11642: c8 59 09                 a2 = a2 + s0
 11645: 97 4c 03                 a5 = t2 << 0x3
 11648: c8 5c 0c                 a5 = a5 + s0
 11651: 82 92                    t0 = u64 [a2]
 11653: 82 c0                    ra = u64 [a5]
 11655: e4 b8 08                 a1 = maxu(a1, a4)
 11658: 82 19 20                 a2 = u64 [sp + 0x20]
 11661: d8 89 09                 a2 = a2 <u a1
 11664: 7b 17 20                 u64 [sp + 0x20] = a0
 11667: 82 18 18                 a1 = u64 [sp + 0x18]
 11670: c8 87 07                 a0 = a0 + a1
 11673: c8 97 07                 a0 = a0 + a2
 11676: ae 20 12                 jump @910 if ra >=u t0
      :                          @909
 11679: 95 77 01                 a0 = a0 + 0x1
 11682: 7b 17 18                 u64 [sp + 0x18] = a0
 11685: 7b 12 10                 u64 [sp + 0x10] = t0
 11688: 64 47                    a0 = t2
 11690: 64 34                    t2 = t1
 11692: 28 0d                    jump @911
      :                          @910
 11694: 7b 10 10                 u64 [sp + 0x10] = ra
 11697: 7b 17 18                 u64 [sp + 0x18] = a0
 11700: 64 37                    a0 = t1
 11702: 64 20                    ra = t0
 11704: 01                       fallthrough
      :                          @911
 11705: 82 15 60                 s0 = u64 [sp + 0x60]
 11708: 82 1c 50                 a5 = u64 [sp + 0x50]
 11711: 82 18 40                 a1 = u64 [sp + 0x40]
 11714: 82 1b 38                 a4 = u64 [sp + 0x38]
 11717: da bc 08                 a1 = a5 if a4 == 0
 11720: 95 33 01                 t1 = t1 + 0x1
 11723: 97 3c 03                 a5 = t1 << 0x3
 11726: 82 12 80 00              t0 = u64 [sp + 0x80]
 11730: c8 2c 0c                 a5 = a5 + t0
 11733: 82 cc                    a5 = u64 [a5]
 11735: 82 1b 30                 a4 = u64 [sp + 0x30]
 11738: da b8 05                 s0 = a1 if a4 == 0
 11741: 82 18 28                 a1 = u64 [sp + 0x28]
 11744: 82 1b 20                 a4 = u64 [sp + 0x20]
 11747: da b8 06                 s1 = a1 if a4 == 0
 11750: da 96 0a                 a3 = s1 if a2 == 0
 11753: d8 c0 09                 a2 = ra <u a5
 11756: db 93 07                 a0 = t1 if a2 != 0
 11759: e4 c0 0c                 a5 = maxu(ra, a5)
 11762: 82 18 10                 a1 = u64 [sp + 0x10]
 11765: d8 c8 08                 a1 = a1 <u a5
 11768: db 84 07                 a0 = t2 if a1 != 0
 11771: c8 98 08                 a1 = a1 + a2
 11774: 82 19 18                 a2 = u64 [sp + 0x18]
 11777: c8 89 09                 a2 = a2 + a1
 11780: 64 73                    t1 = a0
 11782: 64 a6                    s1 = a3
 11784: 64 5b                    a4 = s0
 11786: 82 10 68                 ra = u64 [sp + 0x68]
 11789: 33 05 01 01              s0 = 0x101
 11793: 01                       fallthrough
      :                          @912
 11794: 97 67 03                 a0 = s1 << 0x3
 11797: c8 27 07                 a0 = a0 + t0
 11800: 97 b8 03                 a1 = a4 << 0x3
 11803: c8 82 0a                 a3 = t0 + a1
 11806: 82 78                    a1 = u64 [a0]
 11808: 82 a7                    a0 = u64 [a3]
 11810: ae 87 0c                 jump @914 if a0 >=u a1
      :                          @913
 11813: 95 99 01                 a2 = a2 + 0x1
 11816: 64 8c                    a5 = a1
 11818: 64 ba                    a3 = a4
 11820: 28 0b                    jump @915
      :                          @914
 11822: 64 7c                    a5 = a0
 11824: 64 6a                    a3 = s1
 11826: 64 b6                    s1 = a4
 11828: 64 87                    a0 = a1
 11830: 01                       fallthrough
      :                          @915
 11831: 97 38 03                 a1 = t1 << 0x3
 11834: c8 28 08                 a1 = a1 + t0
 11837: 82 8b                    a4 = u64 [a1]
 11839: d8 b7 08                 a1 = a0 <u a4
 11842: e4 b7 07                 a0 = maxu(a0, a4)
 11845: c8 89 09                 a2 = a2 + a1
 11848: ae 7c 09                 jump @918 if a5 >=u a0
      :                          @916
 11851: 55 19 0b 1a              jump @920 if a2 >=u 11
      :                          @917
 11855: 28 49                    jump @923
      :                          @918
 11857: da 8a 03                 t1 = a3 if a1 == 0
 11860: 64 36                    s1 = t1
 11862: 88 97 01                 a0 = a2 <u 0x1
 11865: 82 18 70                 a1 = u64 [sp + 0x70]
 11868: d2 87 07                 a0 = a0 & a1
 11871: 51 07 39                 jump @923 if a0 == 0
      :                          @919
 11874: 28 f0 00                 jump @941
      :                          @920
 11877: 98 07 01                 a0 = ra >> 0x1
 11880: 97 08 03                 a1 = ra << 0x3
 11883: c8 28 08                 a1 = a1 + t0
 11886: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
 11889: 64 29                    a2 = t0
 11891: 01                       fallthrough
      :                          @921
 11892: 82 8a                    a3 = u64 [a1]
 11894: 82 9b                    a4 = u64 [a2]
 11896: 7b 9a                    u64 [a2] = a3
 11898: 7b 8b                    u64 [a1] = a4
 11900: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 11903: 95 99 08                 a2 = a2 + 0x8
 11906: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
 11909: 52 07 ef                 jump @921 if a0 != 0
      :                          @922
 11912: 85 66 ff                 s1 = s1 ^ 0xffffffffffffffff
 11915: c8 06 06                 s1 = s1 + ra
 11918: 82 18 70                 a1 = u64 [sp + 0x70]
 11921: 84 87 01                 a0 = a1 & 0x1
 11924: 52 07 be 00              jump @941 if a0 != 0
      :                          @923
 11928: 97 67 03                 a0 = s1 << 0x3
 11931: 82 18 58                 a1 = u64 [sp + 0x58]
 11934: 51 08 d1 00              jump @944 if a1 == 0
      :                          @924
 11938: ae 06 d3 03              jump @996 if s1 >=u ra
      :                          @925
 11942: c8 72 08                 a1 = t0 + a0
 11945: 82 19 58                 a2 = u64 [sp + 0x58]
 11948: 82 9a                    a3 = u64 [a2]
 11950: 82 89                    a2 = u64 [a1]
 11952: ac a9 c3 00              jump @945 if a2 <u a3
      :                          @926
 11956: 82 27                    a0 = u64 [t0]
 11958: 7b 29                    u64 [t0] = a2
 11960: 7b 87                    u64 [a1] = a0
 11962: 82 28                    a1 = u64 [t0]
 11964: 33 07                    a0 = 0
 11966: 95 29 08                 a2 = t0 + 0x8
 11969: 95 0a ff                 a3 = ra + 0xffffffffffffffff
 11972: 54 0a 22                 jump @931 if a3 <=u 0
      :                          @927
 11975: 97 7b 03                 a4 = a0 << 0x3
 11978: c8 9b 0b                 a4 = a4 + a2
 11981: 01                       fallthrough
      :                          @928
 11982: 82 bc                    a5 = u64 [a4]
 11984: ac 8c 16                 jump @931 if a5 <u a1
      :                          @929
 11987: 95 77 01                 a0 = a0 + 0x1
 11990: 95 bb 08                 a4 = a4 + 0x8
 11993: ab 7a f5                 jump @928 if a3 != a0
      :                          @930
 11996: 64 a7                    a0 = a3
 11998: 97 ab 03                 a4 = a3 << 0x3
 12001: c8 9b 0b                 a4 = a4 + a2
 12004: 28 09                    jump @932
      :                          @931
 12006: 97 ab 03                 a4 = a3 << 0x3
 12009: c8 9b 0b                 a4 = a4 + a2
 12012: 01                       fallthrough
      :                          @932
 12013: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 12016: ae a7 26                 jump @936 if a0 >=u a3
      :                          @933
 12019: 82 b6 f8                 s1 = u64 [a4 + 0xfffffffffffffff8]
 12022: 95 bc f8                 a5 = a4 + 0xfffffffffffffff8
 12025: 64 cb                    a4 = a5
 12027: ac 86 f2                 jump @932 if s1 <u a1
      :                          @934
 12030: 97 7b 03                 a4 = a0 << 0x3
 12033: c8 9b 0b                 a4 = a4 + a2
 12036: 82 b5                    s0 = u64 [a4]
 12038: 7b b6                    u64 [a4] = s1
 12040: 7b c5                    u64 [a5] = s0
 12042: 33 05 01 01              s0 = 0x101
 12046: 95 77 01                 a0 = a0 + 0x1
 12049: ac a7 b6                 jump @927 if a0 <u a3
      :                          @935
 12052: 28 d2                    jump @931
      :                          @936
 12054: 95 77 01                 a0 = a0 + 0x1
 12057: 7b 28                    u64 [t0] = a1
 12059: ac 70 5c 03              jump @998 if ra <u a0
      :                          @937
 12063: c9 70 00                 ra = ra - a0
 12066: 97 77 03                 a0 = a0 << 0x3
 12069: c8 72 02                 t0 = t0 + a0
 12072: 55 10 15 83 fd           jump @898 if ra >=u 21
      :                          @938
 12077: 28 3b fd                 jump @893
      :                          @939
 12080: 64 27                    a0 = t0
 12082: 64 08                    a1 = ra
 12084: 64 05                    s0 = ra
 12086: 50 20 64 01 c7 ea        ra = 356, jump @467
      :                          @940 [@dyn 178]
 12092: 82 12 80 00              t0 = u64 [sp + 0x80]
 12096: 64 50                    ra = s0
 12098: 33 05 01 01              s0 = 0x101
 12102: 82 17 48                 a0 = u64 [sp + 0x48]
 12105: 83 77 ff                 i32 a0 = a0 + 0xffffffffffffffff
 12108: 7b 17 48                 u64 [sp + 0x48] = a0
 12111: 28 71 fd                 jump @900
      :                          @941
 12114: 64 27                    a0 = t0
 12116: 64 08                    a1 = ra
 12118: 64 05                    s0 = ra
 12120: 50 20 66 01 55 f6        ra = 358, jump @712
      :                          @942 [@dyn 179]
 12126: 82 12 80 00              t0 = u64 [sp + 0x80]
 12130: 64 50                    ra = s0
 12132: 33 05 01 01              s0 = 0x101
 12136: 51 07 30 ff              jump @923 if a0 == 0
      :                          @943
 12140: 28 0f fd                 jump @895
      :                          @944
 12143: 82 18                    a1 = u64 [sp]
 12145: 28 08                    jump @946
      :                          @945
 12147: 7b 12 08                 u64 [sp + 0x8] = t0
 12150: 64 08                    a1 = ra
 12152: 01                       fallthrough
      :                          @946
 12153: ae 86 fd 02              jump @997 if s1 >=u a1
      :                          @947
 12157: 82 1b 08                 a4 = u64 [sp + 0x8]
 12160: c8 b7 07                 a0 = a0 + a4
 12163: 82 7a                    a3 = u64 [a0]
 12165: 82 b9                    a2 = u64 [a4]
 12167: 7b ba                    u64 [a4] = a3
 12169: 7b 79                    u64 [a0] = a2
 12171: 82 b0                    ra = u64 [a4]
 12173: 33 09                    a2 = 0
 12175: 95 b2 08                 t0 = a4 + 0x8
 12178: 7b 18                    u64 [sp] = a1
 12180: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 12183: 64 27                    a0 = t0
 12185: 01                       fallthrough
      :                          @948
 12186: 82 7a                    a3 = u64 [a0]
 12188: ae a0 0f                 jump @951 if ra >=u a3
      :                          @949
 12191: 95 99 01                 a2 = a2 + 0x1
 12194: 95 77 08                 a0 = a0 + 0x8
 12197: ab 98 f5                 jump @948 if a1 != a2
      :                          @950
 12200: 64 89                    a2 = a1
 12202: 01                       fallthrough
      :                          @951
 12203: 82 17                    a0 = u64 [sp]
 12205: 97 77 03                 a0 = a0 << 0x3
 12208: 82 1a 08                 a3 = u64 [sp + 0x8]
 12211: c8 a7 07                 a0 = a0 + a3
 12214: 95 7a f8                 a3 = a0 + 0xfffffffffffffff8
 12217: 01                       fallthrough
      :                          @952
 12218: 64 8b                    a4 = a1
 12220: ae 89 0e                 jump @954 if a2 >=u a1
      :                          @953
 12223: 82 a7                    a0 = u64 [a3]
 12225: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
 12228: 95 aa f8                 a3 = a3 + 0xfffffffffffffff8
 12231: ae 70 f3                 jump @952 if ra >=u a0
      :                          @954
 12234: 64 b8                    a1 = a4
 12236: ac 9b ac 02              jump @999 if a4 <u a2
      :                          @955
 12240: 33 0b                    a4 = 0
 12242: 33 0c                    a5 = 0
 12244: 33 06                    s1 = 0
 12246: 33 03                    t1 = 0
 12248: 7b 19 40                 u64 [sp + 0x40] = a2
 12251: 97 97 03                 a0 = a2 << 0x3
 12254: c8 72 09                 a2 = t0 + a0
 12257: 7b 18 30                 u64 [sp + 0x30] = a1
 12260: 97 87 03                 a0 = a1 << 0x3
 12263: c8 72 08                 a1 = t0 + a0
 12266: 33 04 80 00              t2 = 0x80
 12270: 7b 19 38                 u64 [sp + 0x38] = a2
 12273: 64 9a                    a3 = a2
 12275: 33 02 80 00              t0 = 0x80
 12279: 7b 10 50                 u64 [sp + 0x50] = ra
 12282: 28 42                    jump @958
      :                          @956
 12284: 97 00 03                 ra = ra << 0x3
 12287: c8 80 00                 ra = ra + a1
 12290: 82 17 60                 a0 = u64 [sp + 0x60]
 12293: 7b 07                    u64 [ra] = a0
 12295: 95 bb 01                 a4 = a4 + 0x1
 12298: 95 66 01                 s1 = s1 + 0x1
 12301: 82 10 50                 ra = u64 [sp + 0x50]
 12304: 82 14 68                 t2 = u64 [sp + 0x68]
 12307: 01                       fallthrough
      :                          @957
 12308: d3 cb 07                 a0 = a4 ^ a5
 12311: 64 49                    a2 = t2
 12313: 94 79                    a2 = 0 if a0 != 0
 12315: 97 99 03                 a2 = a2 << 0x3
 12318: c8 9a 0a                 a3 = a3 + a2
 12321: d3 36 07                 a0 = s1 ^ t1
 12324: 82 12 70                 t0 = u64 [sp + 0x70]
 12327: 9a 29                    a2 = -t0
 12329: 94 79                    a2 = 0 if a0 != 0
 12331: 97 99 03                 a2 = a2 << 0x3
 12334: c8 98 08                 a1 = a1 + a2
 12337: 33 05 01 01              s0 = 0x101
 12341: 82 17 78                 a0 = u64 [sp + 0x78]
 12344: ac 57 3e 01              jump @980 if a0 <u s0
      :                          @958
 12348: c9 a8 07                 a0 = a1 - a3
 12351: 98 79 03                 a2 = a0 >> 0x3
 12354: 7b 1a 80 00              u64 [sp + 0x80] = a3
 12358: 7b 19 78                 u64 [sp + 0x78] = a2
 12361: ac 59 38                 jump @965 if a2 <u s0
      :                          @959
 12364: aa cb 71                 jump @969 if a4 == a5
      :                          @960
 12367: ab 36 b4 00              jump @976 if s1 != t1
      :                          @961
 12371: 51 02 9a 00              jump @974 if t0 == 0
      :                          @962
 12375: 33 07                    a0 = 0
 12377: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
 12380: 95 16 08 01              s1 = sp + 0x108
 12384: 95 13 08 01              t1 = sp + 0x108
 12388: 01                       fallthrough
      :                          @963
 12389: 82 a9                    a2 = u64 [a3]
 12391: 78 37                    u8 [t1] = a0
 12393: 95 75 01                 s0 = a0 + 0x1
 12396: d8 90 07                 a0 = ra <u a2
 12399: c8 73 03                 t1 = t1 + a0
 12402: 95 aa f8                 a3 = a3 + 0xfffffffffffffff8
 12405: 64 57                    a0 = s0
 12407: ab 52 ee                 jump @963 if t0 != s0
      :                          @964
 12410: 82 1a 80 00              a3 = u64 [sp + 0x80]
 12414: 28 85 00                 jump @976
      :                          @965
 12417: 64 25                    s0 = t0
 12419: 64 49                    a2 = t2
 12421: d8 cb 04                 t2 = a4 <u a5
 12424: d8 36 0a                 a3 = s1 <u t1
 12427: d4 a4 02                 t0 = t2 | a3
 12430: 51 02 1f                 jump @968 if t0 == 0
      :                          @966
 12433: 82 1a 78                 a3 = u64 [sp + 0x78]
 12436: 95 a7 80                 a0 = a3 + 0xffffffffffffff80
 12439: db 47 05                 s0 = a0 if t2 != 0
 12442: da 2a 07                 a0 = a3 if t0 == 0
 12445: 64 52                    t0 = s0
 12447: da 47 09                 a2 = a0 if t2 == 0
 12450: 64 94                    t2 = a2
 12452: 82 1a 80 00              a3 = u64 [sp + 0x80]
 12456: ab cb a7                 jump @960 if a4 != a5
      :                          @967
 12459: 28 12                    jump @969
      :                          @968
 12461: 98 74 04                 t2 = a0 >> 0x4
 12464: 82 17 78                 a0 = u64 [sp + 0x78]
 12467: c9 47 02                 t0 = a0 - t2
 12470: 82 1a 80 00              a3 = u64 [sp + 0x80]
 12474: ab cb 95                 jump @960 if a4 != a5
      :                          @969
 12477: 51 04 3a                 jump @975 if t2 == 0
      :                          @970
 12480: 33 07                    a0 = 0
 12482: 95 1b 88 00              a4 = sp + 0x88
 12486: 95 1c 88 00              a5 = sp + 0x88
 12490: 01                       fallthrough
      :                          @971
 12491: 82 a5                    s0 = u64 [a3]
 12493: 78 c7                    u8 [a5] = a0
 12495: 95 79 01                 a2 = a0 + 0x1
 12498: d8 50 07                 a0 = ra <u s0
 12501: 85 77 01                 a0 = a0 ^ 0x1
 12504: c8 7c 0c                 a5 = a5 + a0
 12507: 95 aa 08                 a3 = a3 + 0x8
 12510: 64 97                    a0 = a2
 12512: ab 94 eb                 jump @971 if t2 != a2
      :                          @972
 12515: 82 1a 80 00              a3 = u64 [sp + 0x80]
 12519: ab 36 1c                 jump @976 if s1 != t1
      :                          @973
 12522: 28 69 ff                 jump @961
      :                          @974
 12525: 95 16 08 01              s1 = sp + 0x108
 12529: 95 13 08 01              t1 = sp + 0x108
 12533: 28 0e                    jump @976
      :                          @975
 12535: 95 1b 88 00              a4 = sp + 0x88
 12539: 95 1c 88 00              a5 = sp + 0x88
 12543: aa 36 54 ff              jump @961 if s1 == t1
      :                          @976
 12547: 7b 12 70                 u64 [sp + 0x70] = t0
 12550: c9 bc 07                 a0 = a5 - a4
 12553: c9 63 09                 a2 = t1 - s1
 12556: e6 97 02                 t0 = minu(a0, a2)
 12559: 51 02 05 ff              jump @957 if t0 == 0
      :                          @977
 12563: 7b 14 68                 u64 [sp + 0x68] = t2
 12566: 7c b7                    a0 = u8 [a4]
 12568: 7c 64                    t2 = u8 [s1]
 12570: 97 77 03                 a0 = a0 << 0x3
 12573: c8 a7 07                 a0 = a0 + a3
 12576: 85 40 ff                 ra = t2 ^ 0xffffffffffffffff
 12579: 97 09 03                 a2 = ra << 0x3
 12582: c8 89 09                 a2 = a2 + a1
 12585: 82 99                    a2 = u64 [a2]
 12587: 82 75                    s0 = u64 [a0]
 12589: 7b 15 60                 u64 [sp + 0x60] = s0
 12592: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 12595: 7b 79                    u64 [a0] = a2
 12597: 51 02 c7 fe              jump @956 if t0 == 0
      :                          @978
 12601: 7c b7 01                 a0 = u8 [a4 + 0x1]
 12604: 97 77 03                 a0 = a0 << 0x3
 12607: c8 a7 07                 a0 = a0 + a3
 12610: 85 49 ff                 a2 = t2 ^ 0xffffffffffffffff
 12613: 82 7a                    a3 = u64 [a0]
 12615: 97 99 03                 a2 = a2 << 0x3
 12618: 86 99 00 f8              a2 = a2 | 0xfffffffffffff800
 12622: c8 89 09                 a2 = a2 + a1
 12625: 7b 9a                    u64 [a2] = a3
 12627: 82 1a 80 00              a3 = u64 [sp + 0x80]
 12631: 7c 64 01                 t2 = u8 [s1 + 0x1]
 12634: 85 40 ff                 ra = t2 ^ 0xffffffffffffffff
 12637: 97 09 03                 a2 = ra << 0x3
 12640: c8 89 09                 a2 = a2 + a1
 12643: 82 99                    a2 = u64 [a2]
 12645: 95 bb 01                 a4 = a4 + 0x1
 12648: 95 66 01                 s1 = s1 + 0x1
 12651: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 12654: 7b 79                    u64 [a0] = a2
 12656: 52 02 c9                 jump @978 if t0 != 0
      :                          @979
 12659: 28 89 fe                 jump @956
      :                          @980
 12662: ae cb 2b                 jump @984 if a4 >=u a5
      :                          @981
 12665: 82 12 08                 t0 = u64 [sp + 0x8]
 12668: 64 a3                    t1 = a3
 12670: 01                       fallthrough
      :                          @982
 12671: 7c c7 ff                 a0 = u8 [a5 + 0xffffffffffffffff]
 12674: 97 77 03                 a0 = a0 << 0x3
 12677: c8 37 07                 a0 = a0 + t1
 12680: 82 85 f8                 s0 = u64 [a1 + 0xfffffffffffffff8]
 12683: 82 79                    a2 = u64 [a0]
 12685: 95 c6 ff                 s1 = a5 + 0xffffffffffffffff
 12688: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
 12691: 7b 75                    u64 [a0] = s0
 12693: 7b 89 f8                 u64 [a1 + 0xfffffffffffffff8] = a2
 12696: 64 a8                    a1 = a3
 12698: 64 6c                    a5 = s1
 12700: ac 6b e3                 jump @982 if a4 <u s1
      :                          @983
 12703: 28 27                    jump @986
      :                          @984
 12705: 82 12 08                 t0 = u64 [sp + 0x8]
 12708: ae 36 22                 jump @986 if s1 >=u t1
      :                          @985
 12711: 7c 37 ff                 a0 = u8 [t1 + 0xffffffffffffffff]
 12714: 85 77 ff                 a0 = a0 ^ 0xffffffffffffffff
 12717: 97 77 03                 a0 = a0 << 0x3
 12720: c8 87 07                 a0 = a0 + a1
 12723: 82 79                    a2 = u64 [a0]
 12725: 82 ab                    a4 = u64 [a3]
 12727: 95 3c ff                 a5 = t1 + 0xffffffffffffffff
 12730: 7b a9                    u64 [a3] = a2
 12732: 7b 7b                    u64 [a0] = a4
 12734: 95 aa 08                 a3 = a3 + 0x8
 12737: 64 c3                    t1 = a5
 12739: ac c6 e4                 jump @985 if s1 <u a5
      :                          @986
 12742: 82 17 38                 a0 = u64 [sp + 0x38]
 12745: c9 7a 07                 a0 = a3 - a0
 12748: 98 77 03                 a0 = a0 >> 0x3
 12751: 82 16 40                 s1 = u64 [sp + 0x40]
 12754: c8 76 06                 s1 = s1 + a0
 12757: 7b 20                    u64 [t0] = ra
 12759: 82 18                    a1 = u64 [sp]
 12761: ae 86 9d 00              jump @997 if s1 >=u a1
      :                          @987
 12765: 97 67 03                 a0 = s1 << 0x3
 12768: c8 72 09                 a2 = t0 + a0
 12771: 82 97                    a0 = u64 [a2]
 12773: 7b 27                    u64 [t0] = a0
 12775: 7b 90                    u64 [a2] = ra
 12777: 64 25                    s0 = t0
 12779: c9 68 08                 a1 = a1 - s1
 12782: 7b 18 80 00              u64 [sp + 0x80] = a1
 12786: 95 8b ff                 a4 = a1 + 0xffffffffffffffff
 12789: 95 97 08                 a0 = a2 + 0x8
 12792: ae b6 28                 jump @990 if s1 >=u a4
      :                          @988
 12795: 7b 17 78                 u64 [sp + 0x78] = a0
 12798: 64 57                    a0 = s0
 12800: 64 68                    a1 = s1
 12802: 7b 19 70                 u64 [sp + 0x70] = a2
 12805: 82 19 58                 a2 = u64 [sp + 0x58]
 12808: 82 1a 48                 a3 = u64 [sp + 0x48]
 12811: 64 b5                    s0 = a4
 12813: 50 20 68 01 3a fa        ra = 360, jump @891
      :                          @989 [@dyn 180]
 12819: 64 50                    ra = s0
 12821: 82 17 70                 a0 = u64 [sp + 0x70]
 12824: 7b 17 58                 u64 [sp + 0x58] = a0
 12827: 82 15 78                 s0 = u64 [sp + 0x78]
 12830: 28 10                    jump @992
      :                          @990
 12832: 64 b8                    a1 = a4
 12834: 82 1a 48                 a3 = u64 [sp + 0x48]
 12837: 50 20 6a 01 22 fa        ra = 362, jump @891
      :                          @991 [@dyn 181]
 12843: 64 60                    ra = s1
 12845: 01                       fallthrough
      :                          @992
 12846: 82 17 40                 a0 = u64 [sp + 0x40]
 12849: 82 18 30                 a1 = u64 [sp + 0x30]
 12852: d8 87 07                 a0 = a0 <u a1
 12855: 85 77 01                 a0 = a0 ^ 0x1
 12858: 82 18 80 00              a1 = u64 [sp + 0x80]
 12862: e6 86 08                 a1 = minu(s1, a1)
 12865: 82 19                    a2 = u64 [sp]
 12867: 98 99 03                 a2 = a2 >> 0x3
 12870: d8 98 08                 a1 = a1 <u a2
 12873: 85 88 01                 a1 = a1 ^ 0x1
 12876: 7b 18 78                 u64 [sp + 0x78] = a1
 12879: 7b 10                    u64 [sp] = ra
 12881: 7b 15 08                 u64 [sp + 0x8] = s0
 12884: 64 52                    t0 = s0
 12886: 33 08 15                 a1 = 0x15
 12889: 33 05 01 01              s0 = 0x101
 12893: ae 80 41 fa              jump @897 if ra >=u a1
      :                          @993
 12897: 28 07 fa                 jump @893
      :                          @994
 12900: 64 27                    a0 = t0
 12902: 64 08                    a1 = ra
 12904: 33 00 6c 01              ra = 0x16c
 12908: 98 82 01                 t0 = a1 >> 0x1
 12911: 28 1f 18                 jump @1399
      :                          @995 [@dyn 182]
 12914: 28 09 fa                 jump @895
      :                          @996
 12917: 00                       trap
      :                          @997
 12918: 00                       trap
      :                          @998
 12919: 00                       trap
      :                          @999
 12920: 00                       trap
      :                          @1000
 12921: 95 11 60 fe              sp = sp + 0xfffffffffffffe60
 12925: 7b 10 98 01              u64 [sp + 0x198] = ra
 12929: 7b 15 90 01              u64 [sp + 0x190] = s0
 12933: 7b 16 88 01              u64 [sp + 0x188] = s1
 12937: 33 0b 15                 a4 = 0x15
 12940: 7b 1a 48                 u64 [sp + 0x48] = a3
 12943: 7b 19 58                 u64 [sp + 0x58] = a2
 12946: 64 80                    ra = a1
 12948: ae b8 2b                 jump @1005 if a1 >=u a4
      :                          @1001
 12951: 64 72                    t0 = a0
 12953: 01                       fallthrough
      :                          @1002
 12954: 33 07 01                 a0 = 0x1
 12957: ae 07 10                 jump @1004 if a0 >=u ra
      :                          @1003
 12960: 33 09 01                 a2 = 0x1
 12963: 64 27                    a0 = t0
 12965: 64 08                    a1 = ra
 12967: 50 20 6e 01 7b f6        ra = 366, jump @799
      :                          @1004 [@dyn 183]
 12973: 82 10 98 01              ra = u64 [sp + 0x198]
 12977: 82 15 90 01              s0 = u64 [sp + 0x190]
 12981: 82 16 88 01              s1 = u64 [sp + 0x188]
 12985: 95 11 a0 01              sp = sp + 0x1a0
 12989: 32 00                    ret
      :                          @1005
 12991: 7b 17 08                 u64 [sp + 0x8] = a0
 12994: 49 11 78 01              u64 [sp + 120] = 0x1
 12998: 33 05 01 01              s0 = 0x101
 13002: 33 07 01                 a0 = 0x1
 13005: 7b 10                    u64 [sp] = ra
 13007: 01                       fallthrough
      :                          @1006
 13008: 82 18 78                 a1 = u64 [sp + 0x78]
 13011: d2 87 07                 a0 = a0 & a1
 13014: 7b 17 70                 u64 [sp + 0x70] = a0
 13017: 82 12 08                 t0 = u64 [sp + 0x8]
 13020: 01                       fallthrough
      :                          @1007
 13021: 81 17 48                 a0 = i32 [sp + 0x48]
 13024: 51 07 b6 05              jump @1103 if a0 == 0
      :                          @1008
 13028: 82 17 78                 a0 = u64 [sp + 0x78]
 13031: 84 77 01                 a0 = a0 & 0x1
 13034: 7b 12 80 00              u64 [sp + 0x80] = t0
 13038: 51 07 74 02              jump @1048 if a0 == 0
      :                          @1009
 13042: 98 0b 02                 a4 = ra >> 0x2
 13045: 97 b6 01                 s1 = a4 << 0x1
 13048: c8 b6 03                 t1 = s1 + a4
 13051: 54 10 31 29              jump @1012 if ra <=u 49
      :                          @1010
 13055: 95 b5 ff                 s0 = a4 + 0xffffffffffffffff
 13058: 97 b7 03                 a0 = a4 << 0x3
 13061: c8 27 07                 a0 = a0 + t0
 13064: 97 58 03                 a1 = s0 << 0x3
 13067: c8 28 08                 a1 = a1 + t0
 13070: 82 79                    a2 = u64 [a0]
 13072: 82 88                    a1 = u64 [a1]
 13074: af 89 17                 jump @1013 if a2 >=s a1
      :                          @1011
 13077: 49 11 28 01              u64 [sp + 40] = 0x1
 13081: 64 94                    t2 = a2
 13083: 7b 15 50                 u64 [sp + 0x50] = s0
 13086: 64 b5                    s0 = a4
 13088: 64 89                    a2 = a1
 13090: 28 10                    jump @1014
      :                          @1012
 13092: 33 09                    a2 = 0
 13094: 28 1e 01                 jump @1021
      :                          @1013
 13097: 49 11 28                 u64 [sp + 40] = 0
 13100: 64 84                    t2 = a1
 13102: 7b 1b 50                 u64 [sp + 0x50] = a4
 13105: 01                       fallthrough
      :                          @1014
 13106: 95 b8 01                 a1 = a4 + 0x1
 13109: 7b 18 40                 u64 [sp + 0x40] = a1
 13112: 97 88 03                 a1 = a1 << 0x3
 13115: 82 1b 80 00              a4 = u64 [sp + 0x80]
 13119: c8 b8 08                 a1 = a1 + a4
 13122: 82 87                    a0 = u64 [a1]
 13124: d9 97 02                 t0 = a0 <s a2
 13127: 95 6a ff                 a3 = s1 + 0xffffffffffffffff
 13130: 97 68 03                 a1 = s1 << 0x3
 13133: c8 b8 08                 a1 = a1 + a4
 13136: 97 ac 03                 a5 = a3 << 0x3
 13139: c8 cb 0b                 a4 = a4 + a5
 13142: 82 8c                    a5 = u64 [a1]
 13144: 82 b8                    a1 = u64 [a4]
 13146: e5 97 07                 a0 = mins(a0, a2)
 13149: d9 47 09                 a2 = a0 <s t2
 13152: 7b 12 38                 u64 [sp + 0x38] = t0
 13155: 82 17 28                 a0 = u64 [sp + 0x28]
 13158: c8 27 07                 a0 = a0 + t0
 13161: c8 97 07                 a0 = a0 + a2
 13164: 7b 10 68                 u64 [sp + 0x68] = ra
 13167: 7b 15 60                 u64 [sp + 0x60] = s0
 13170: 7b 19 30                 u64 [sp + 0x30] = a2
 13173: af 8c 13                 jump @1016 if a5 >=s a1
      :                          @1015
 13176: 95 77 01                 a0 = a0 + 0x1
 13179: 7b 17 18                 u64 [sp + 0x18] = a0
 13182: 7b 1c 20                 u64 [sp + 0x20] = a5
 13185: 7b 1a 28                 u64 [sp + 0x28] = a3
 13188: 64 6a                    a3 = s1
 13190: 28 0e                    jump @1017
      :                          @1016
 13192: 7b 18 20                 u64 [sp + 0x20] = a1
 13195: 7b 16 28                 u64 [sp + 0x28] = s1
 13198: 64 c8                    a1 = a5
 13200: 7b 17 18                 u64 [sp + 0x18] = a0
 13203: 01                       fallthrough
      :                          @1017
 13204: 86 66 01                 s1 = s1 | 0x1
 13207: 97 6b 03                 a4 = s1 << 0x3
 13210: 82 15 80 00              s0 = u64 [sp + 0x80]
 13214: c8 5b 0b                 a4 = a4 + s0
 13217: 82 bb                    a4 = u64 [a4]
 13219: d9 8b 07                 a0 = a4 <s a1
 13222: 95 34 ff                 t2 = t1 + 0xffffffffffffffff
 13225: 97 39 03                 a2 = t1 << 0x3
 13228: c8 59 09                 a2 = a2 + s0
 13231: 97 4c 03                 a5 = t2 << 0x3
 13234: c8 5c 0c                 a5 = a5 + s0
 13237: 82 92                    t0 = u64 [a2]
 13239: 82 c0                    ra = u64 [a5]
 13241: e5 8b 08                 a1 = mins(a4, a1)
 13244: 82 19 20                 a2 = u64 [sp + 0x20]
 13247: d9 98 09                 a2 = a1 <s a2
 13250: 7b 17 20                 u64 [sp + 0x20] = a0
 13253: 82 18 18                 a1 = u64 [sp + 0x18]
 13256: c8 87 07                 a0 = a0 + a1
 13259: c8 97 07                 a0 = a0 + a2
 13262: af 02 12                 jump @1019 if t0 >=s ra
      :                          @1018
 13265: 95 77 01                 a0 = a0 + 0x1
 13268: 7b 17 18                 u64 [sp + 0x18] = a0
 13271: 7b 12 10                 u64 [sp + 0x10] = t0
 13274: 64 47                    a0 = t2
 13276: 64 34                    t2 = t1
 13278: 28 0d                    jump @1020
      :                          @1019
 13280: 7b 10 10                 u64 [sp + 0x10] = ra
 13283: 7b 17 18                 u64 [sp + 0x18] = a0
 13286: 64 37                    a0 = t1
 13288: 64 20                    ra = t0
 13290: 01                       fallthrough
      :                          @1020
 13291: 82 15 60                 s0 = u64 [sp + 0x60]
 13294: 82 1c 50                 a5 = u64 [sp + 0x50]
 13297: 82 18 40                 a1 = u64 [sp + 0x40]
 13300: 82 1b 38                 a4 = u64 [sp + 0x38]
 13303: da bc 08                 a1 = a5 if a4 == 0
 13306: 95 33 01                 t1 = t1 + 0x1
 13309: 97 3c 03                 a5 = t1 << 0x3
 13312: 82 12 80 00              t0 = u64 [sp + 0x80]
 13316: c8 2c 0c                 a5 = a5 + t0
 13319: 82 cc                    a5 = u64 [a5]
 13321: 82 1b 30                 a4 = u64 [sp + 0x30]
 13324: da b8 05                 s0 = a1 if a4 == 0
 13327: 82 18 28                 a1 = u64 [sp + 0x28]
 13330: 82 1b 20                 a4 = u64 [sp + 0x20]
 13333: da b8 06                 s1 = a1 if a4 == 0
 13336: da 96 0a                 a3 = s1 if a2 == 0
 13339: d9 0c 09                 a2 = a5 <s ra
 13342: db 93 07                 a0 = t1 if a2 != 0
 13345: e5 0c 0c                 a5 = mins(a5, ra)
 13348: 82 18 10                 a1 = u64 [sp + 0x10]
 13351: d9 8c 08                 a1 = a5 <s a1
 13354: db 84 07                 a0 = t2 if a1 != 0
 13357: c8 98 08                 a1 = a1 + a2
 13360: 82 19 18                 a2 = u64 [sp + 0x18]
 13363: c8 89 09                 a2 = a2 + a1
 13366: 64 73                    t1 = a0
 13368: 64 a6                    s1 = a3
 13370: 64 5b                    a4 = s0
 13372: 82 10 68                 ra = u64 [sp + 0x68]
 13375: 33 05 01 01              s0 = 0x101
 13379: 01                       fallthrough
      :                          @1021
 13380: 97 67 03                 a0 = s1 << 0x3
 13383: c8 27 07                 a0 = a0 + t0
 13386: 97 b8 03                 a1 = a4 << 0x3
 13389: c8 82 0a                 a3 = t0 + a1
 13392: 82 78                    a1 = u64 [a0]
 13394: 82 a7                    a0 = u64 [a3]
 13396: af 78 0c                 jump @1023 if a1 >=s a0
      :                          @1022
 13399: 95 99 01                 a2 = a2 + 0x1
 13402: 64 8c                    a5 = a1
 13404: 64 ba                    a3 = a4
 13406: 28 0b                    jump @1024
      :                          @1023
 13408: 64 7c                    a5 = a0
 13410: 64 6a                    a3 = s1
 13412: 64 b6                    s1 = a4
 13414: 64 87                    a0 = a1
 13416: 01                       fallthrough
      :                          @1024
 13417: 97 38 03                 a1 = t1 << 0x3
 13420: c8 28 08                 a1 = a1 + t0
 13423: 82 8b                    a4 = u64 [a1]
 13425: d9 7b 08                 a1 = a4 <s a0
 13428: e5 7b 07                 a0 = mins(a4, a0)
 13431: c8 89 09                 a2 = a2 + a1
 13434: af c7 09                 jump @1027 if a0 >=s a5
      :                          @1025
 13437: 55 19 0b 1a              jump @1029 if a2 >=u 11
      :                          @1026
 13441: 28 49                    jump @1032
      :                          @1027
 13443: da 8a 03                 t1 = a3 if a1 == 0
 13446: 64 36                    s1 = t1
 13448: 88 97 01                 a0 = a2 <u 0x1
 13451: 82 18 70                 a1 = u64 [sp + 0x70]
 13454: d2 87 07                 a0 = a0 & a1
 13457: 51 07 39                 jump @1032 if a0 == 0
      :                          @1028
 13460: 28 f0 00                 jump @1050
      :                          @1029
 13463: 98 07 01                 a0 = ra >> 0x1
 13466: 97 08 03                 a1 = ra << 0x3
 13469: c8 28 08                 a1 = a1 + t0
 13472: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
 13475: 64 29                    a2 = t0
 13477: 01                       fallthrough
      :                          @1030
 13478: 82 8a                    a3 = u64 [a1]
 13480: 82 9b                    a4 = u64 [a2]
 13482: 7b 9a                    u64 [a2] = a3
 13484: 7b 8b                    u64 [a1] = a4
 13486: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 13489: 95 99 08                 a2 = a2 + 0x8
 13492: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
 13495: 52 07 ef                 jump @1030 if a0 != 0
      :                          @1031
 13498: 85 66 ff                 s1 = s1 ^ 0xffffffffffffffff
 13501: c8 06 06                 s1 = s1 + ra
 13504: 82 18 70                 a1 = u64 [sp + 0x70]
 13507: 84 87 01                 a0 = a1 & 0x1
 13510: 52 07 be 00              jump @1050 if a0 != 0
      :                          @1032
 13514: 97 67 03                 a0 = s1 << 0x3
 13517: 82 18 58                 a1 = u64 [sp + 0x58]
 13520: 51 08 d1 00              jump @1053 if a1 == 0
      :                          @1033
 13524: ae 06 d3 03              jump @1105 if s1 >=u ra
      :                          @1034
 13528: c8 72 08                 a1 = t0 + a0
 13531: 82 19 58                 a2 = u64 [sp + 0x58]
 13534: 82 9a                    a3 = u64 [a2]
 13536: 82 89                    a2 = u64 [a1]
 13538: ad 9a c3 00              jump @1054 if a3 <s a2
      :                          @1035
 13542: 82 27                    a0 = u64 [t0]
 13544: 7b 29                    u64 [t0] = a2
 13546: 7b 87                    u64 [a1] = a0
 13548: 82 28                    a1 = u64 [t0]
 13550: 33 07                    a0 = 0
 13552: 95 29 08                 a2 = t0 + 0x8
 13555: 95 0a ff                 a3 = ra + 0xffffffffffffffff
 13558: 54 0a 22                 jump @1040 if a3 <=u 0
      :                          @1036
 13561: 97 7b 03                 a4 = a0 << 0x3
 13564: c8 9b 0b                 a4 = a4 + a2
 13567: 01                       fallthrough
      :                          @1037
 13568: 82 bc                    a5 = u64 [a4]
 13570: ad c8 16                 jump @1040 if a1 <s a5
      :                          @1038
 13573: 95 77 01                 a0 = a0 + 0x1
 13576: 95 bb 08                 a4 = a4 + 0x8
 13579: ab 7a f5                 jump @1037 if a3 != a0
      :                          @1039
 13582: 64 a7                    a0 = a3
 13584: 97 ab 03                 a4 = a3 << 0x3
 13587: c8 9b 0b                 a4 = a4 + a2
 13590: 28 09                    jump @1041
      :                          @1040
 13592: 97 ab 03                 a4 = a3 << 0x3
 13595: c8 9b 0b                 a4 = a4 + a2
 13598: 01                       fallthrough
      :                          @1041
 13599: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 13602: ae a7 26                 jump @1045 if a0 >=u a3
      :                          @1042
 13605: 82 b6 f8                 s1 = u64 [a4 + 0xfffffffffffffff8]
 13608: 95 bc f8                 a5 = a4 + 0xfffffffffffffff8
 13611: 64 cb                    a4 = a5
 13613: ad 68 f2                 jump @1041 if a1 <s s1
      :                          @1043
 13616: 97 7b 03                 a4 = a0 << 0x3
 13619: c8 9b 0b                 a4 = a4 + a2
 13622: 82 b5                    s0 = u64 [a4]
 13624: 7b b6                    u64 [a4] = s1
 13626: 7b c5                    u64 [a5] = s0
 13628: 33 05 01 01              s0 = 0x101
 13632: 95 77 01                 a0 = a0 + 0x1
 13635: ac a7 b6                 jump @1036 if a0 <u a3
      :                          @1044
 13638: 28 d2                    jump @1040
      :                          @1045
 13640: 95 77 01                 a0 = a0 + 0x1
 13643: 7b 28                    u64 [t0] = a1
 13645: ac 70 5c 03              jump @1107 if ra <u a0
      :                          @1046
 13649: c9 70 00                 ra = ra - a0
 13652: 97 77 03                 a0 = a0 << 0x3
 13655: c8 72 02                 t0 = t0 + a0
 13658: 55 10 15 83 fd           jump @1007 if ra >=u 21
      :                          @1047
 13663: 28 3b fd                 jump @1002
      :                          @1048
 13666: 64 27                    a0 = t0
 13668: 64 08                    a1 = ra
 13670: 64 05                    s0 = ra
 13672: 50 20 70 01 95 e4        ra = 368, jump @467
      :                          @1049 [@dyn 184]
 13678: 82 12 80 00              t0 = u64 [sp + 0x80]
 13682: 64 50                    ra = s0
 13684: 33 05 01 01              s0 = 0x101
 13688: 82 17 48                 a0 = u64 [sp + 0x48]
 13691: 83 77 ff                 i32 a0 = a0 + 0xffffffffffffffff
 13694: 7b 17 48                 u64 [sp + 0x48] = a0
 13697: 28 71 fd                 jump @1009
      :                          @1050
 13700: 64 27                    a0 = t0
 13702: 64 08                    a1 = ra
 13704: 64 05                    s0 = ra
 13706: 50 20 72 01 65 e6        ra = 370, jump @487
      :                          @1051 [@dyn 185]
 13712: 82 12 80 00              t0 = u64 [sp + 0x80]
 13716: 64 50                    ra = s0
 13718: 33 05 01 01              s0 = 0x101
 13722: 51 07 30 ff              jump @1032 if a0 == 0
      :                          @1052
 13726: 28 0f fd                 jump @1004
      :                          @1053
 13729: 82 18                    a1 = u64 [sp]
 13731: 28 08                    jump @1055
      :                          @1054
 13733: 7b 12 08                 u64 [sp + 0x8] = t0
 13736: 64 08                    a1 = ra
 13738: 01                       fallthrough
      :                          @1055
 13739: ae 86 fd 02              jump @1106 if s1 >=u a1
      :                          @1056
 13743: 82 1b 08                 a4 = u64 [sp + 0x8]
 13746: c8 b7 07                 a0 = a0 + a4
 13749: 82 7a                    a3 = u64 [a0]
 13751: 82 b9                    a2 = u64 [a4]
 13753: 7b ba                    u64 [a4] = a3
 13755: 7b 79                    u64 [a0] = a2
 13757: 82 b0                    ra = u64 [a4]
 13759: 33 09                    a2 = 0
 13761: 95 b2 08                 t0 = a4 + 0x8
 13764: 7b 18                    u64 [sp] = a1
 13766: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 13769: 64 27                    a0 = t0
 13771: 01                       fallthrough
      :                          @1057
 13772: 82 7a                    a3 = u64 [a0]
 13774: af 0a 0f                 jump @1060 if a3 >=s ra
      :                          @1058
 13777: 95 99 01                 a2 = a2 + 0x1
 13780: 95 77 08                 a0 = a0 + 0x8
 13783: ab 98 f5                 jump @1057 if a1 != a2
      :                          @1059
 13786: 64 89                    a2 = a1
 13788: 01                       fallthrough
      :                          @1060
 13789: 82 17                    a0 = u64 [sp]
 13791: 97 77 03                 a0 = a0 << 0x3
 13794: 82 1a 08                 a3 = u64 [sp + 0x8]
 13797: c8 a7 07                 a0 = a0 + a3
 13800: 95 7a f8                 a3 = a0 + 0xfffffffffffffff8
 13803: 01                       fallthrough
      :                          @1061
 13804: 64 8b                    a4 = a1
 13806: ae 89 0e                 jump @1063 if a2 >=u a1
      :                          @1062
 13809: 82 a7                    a0 = u64 [a3]
 13811: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
 13814: 95 aa f8                 a3 = a3 + 0xfffffffffffffff8
 13817: af 07 f3                 jump @1061 if a0 >=s ra
      :                          @1063
 13820: 64 b8                    a1 = a4
 13822: ac 9b ac 02              jump @1108 if a4 <u a2
      :                          @1064
 13826: 33 0b                    a4 = 0
 13828: 33 0c                    a5 = 0
 13830: 33 06                    s1 = 0
 13832: 33 03                    t1 = 0
 13834: 7b 19 40                 u64 [sp + 0x40] = a2
 13837: 97 97 03                 a0 = a2 << 0x3
 13840: c8 72 09                 a2 = t0 + a0
 13843: 7b 18 30                 u64 [sp + 0x30] = a1
 13846: 97 87 03                 a0 = a1 << 0x3
 13849: c8 72 08                 a1 = t0 + a0
 13852: 33 04 80 00              t2 = 0x80
 13856: 7b 19 38                 u64 [sp + 0x38] = a2
 13859: 64 9a                    a3 = a2
 13861: 33 02 80 00              t0 = 0x80
 13865: 7b 10 50                 u64 [sp + 0x50] = ra
 13868: 28 42                    jump @1067
      :                          @1065
 13870: 97 00 03                 ra = ra << 0x3
 13873: c8 80 00                 ra = ra + a1
 13876: 82 17 60                 a0 = u64 [sp + 0x60]
 13879: 7b 07                    u64 [ra] = a0
 13881: 95 bb 01                 a4 = a4 + 0x1
 13884: 95 66 01                 s1 = s1 + 0x1
 13887: 82 10 50                 ra = u64 [sp + 0x50]
 13890: 82 14 68                 t2 = u64 [sp + 0x68]
 13893: 01                       fallthrough
      :                          @1066
 13894: d3 cb 07                 a0 = a4 ^ a5
 13897: 64 49                    a2 = t2
 13899: 94 79                    a2 = 0 if a0 != 0
 13901: 97 99 03                 a2 = a2 << 0x3
 13904: c8 9a 0a                 a3 = a3 + a2
 13907: d3 36 07                 a0 = s1 ^ t1
 13910: 82 12 70                 t0 = u64 [sp + 0x70]
 13913: 9a 29                    a2 = -t0
 13915: 94 79                    a2 = 0 if a0 != 0
 13917: 97 99 03                 a2 = a2 << 0x3
 13920: c8 98 08                 a1 = a1 + a2
 13923: 33 05 01 01              s0 = 0x101
 13927: 82 17 78                 a0 = u64 [sp + 0x78]
 13930: ac 57 3e 01              jump @1089 if a0 <u s0
      :                          @1067
 13934: c9 a8 07                 a0 = a1 - a3
 13937: 98 79 03                 a2 = a0 >> 0x3
 13940: 7b 1a 80 00              u64 [sp + 0x80] = a3
 13944: 7b 19 78                 u64 [sp + 0x78] = a2
 13947: ac 59 38                 jump @1074 if a2 <u s0
      :                          @1068
 13950: aa cb 71                 jump @1078 if a4 == a5
      :                          @1069
 13953: ab 36 b4 00              jump @1085 if s1 != t1
      :                          @1070
 13957: 51 02 9a 00              jump @1083 if t0 == 0
      :                          @1071
 13961: 33 07                    a0 = 0
 13963: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
 13966: 95 16 08 01              s1 = sp + 0x108
 13970: 95 13 08 01              t1 = sp + 0x108
 13974: 01                       fallthrough
      :                          @1072
 13975: 82 a9                    a2 = u64 [a3]
 13977: 78 37                    u8 [t1] = a0
 13979: 95 75 01                 s0 = a0 + 0x1
 13982: d9 09 07                 a0 = a2 <s ra
 13985: c8 73 03                 t1 = t1 + a0
 13988: 95 aa f8                 a3 = a3 + 0xfffffffffffffff8
 13991: 64 57                    a0 = s0
 13993: ab 52 ee                 jump @1072 if t0 != s0
      :                          @1073
 13996: 82 1a 80 00              a3 = u64 [sp + 0x80]
 14000: 28 85 00                 jump @1085
      :                          @1074
 14003: 64 25                    s0 = t0
 14005: 64 49                    a2 = t2
 14007: d8 cb 04                 t2 = a4 <u a5
 14010: d8 36 0a                 a3 = s1 <u t1
 14013: d4 a4 02                 t0 = t2 | a3
 14016: 51 02 1f                 jump @1077 if t0 == 0
      :                          @1075
 14019: 82 1a 78                 a3 = u64 [sp + 0x78]
 14022: 95 a7 80                 a0 = a3 + 0xffffffffffffff80
 14025: db 47 05                 s0 = a0 if t2 != 0
 14028: da 2a 07                 a0 = a3 if t0 == 0
 14031: 64 52                    t0 = s0
 14033: da 47 09                 a2 = a0 if t2 == 0
 14036: 64 94                    t2 = a2
 14038: 82 1a 80 00              a3 = u64 [sp + 0x80]
 14042: ab cb a7                 jump @1069 if a4 != a5
      :                          @1076
 14045: 28 12                    jump @1078
      :                          @1077
 14047: 98 74 04                 t2 = a0 >> 0x4
 14050: 82 17 78                 a0 = u64 [sp + 0x78]
 14053: c9 47 02                 t0 = a0 - t2
 14056: 82 1a 80 00              a3 = u64 [sp + 0x80]
 14060: ab cb 95                 jump @1069 if a4 != a5
      :                          @1078
 14063: 51 04 3a                 jump @1084 if t2 == 0
      :                          @1079
 14066: 33 07                    a0 = 0
 14068: 95 1b 88 00              a4 = sp + 0x88
 14072: 95 1c 88 00              a5 = sp + 0x88
 14076: 01                       fallthrough
      :                          @1080
 14077: 82 a5                    s0 = u64 [a3]
 14079: 78 c7                    u8 [a5] = a0
 14081: 95 79 01                 a2 = a0 + 0x1
 14084: d9 05 07                 a0 = s0 <s ra
 14087: 85 77 01                 a0 = a0 ^ 0x1
 14090: c8 7c 0c                 a5 = a5 + a0
 14093: 95 aa 08                 a3 = a3 + 0x8
 14096: 64 97                    a0 = a2
 14098: ab 94 eb                 jump @1080 if t2 != a2
      :                          @1081
 14101: 82 1a 80 00              a3 = u64 [sp + 0x80]
 14105: ab 36 1c                 jump @1085 if s1 != t1
      :                          @1082
 14108: 28 69 ff                 jump @1070
      :                          @1083
 14111: 95 16 08 01              s1 = sp + 0x108
 14115: 95 13 08 01              t1 = sp + 0x108
 14119: 28 0e                    jump @1085
      :                          @1084
 14121: 95 1b 88 00              a4 = sp + 0x88
 14125: 95 1c 88 00              a5 = sp + 0x88
 14129: aa 36 54 ff              jump @1070 if s1 == t1
      :                          @1085
 14133: 7b 12 70                 u64 [sp + 0x70] = t0
 14136: c9 bc 07                 a0 = a5 - a4
 14139: c9 63 09                 a2 = t1 - s1
 14142: e6 97 02                 t0 = minu(a0, a2)
 14145: 51 02 05 ff              jump @1066 if t0 == 0
      :                          @1086
 14149: 7b 14 68                 u64 [sp + 0x68] = t2
 14152: 7c b7                    a0 = u8 [a4]
 14154: 7c 64                    t2 = u8 [s1]
 14156: 97 77 03                 a0 = a0 << 0x3
 14159: c8 a7 07                 a0 = a0 + a3
 14162: 85 40 ff                 ra = t2 ^ 0xffffffffffffffff
 14165: 97 09 03                 a2 = ra << 0x3
 14168: c8 89 09                 a2 = a2 + a1
 14171: 82 99                    a2 = u64 [a2]
 14173: 82 75                    s0 = u64 [a0]
 14175: 7b 15 60                 u64 [sp + 0x60] = s0
 14178: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 14181: 7b 79                    u64 [a0] = a2
 14183: 51 02 c7 fe              jump @1065 if t0 == 0
      :                          @1087
 14187: 7c b7 01                 a0 = u8 [a4 + 0x1]
 14190: 97 77 03                 a0 = a0 << 0x3
 14193: c8 a7 07                 a0 = a0 + a3
 14196: 85 49 ff                 a2 = t2 ^ 0xffffffffffffffff
 14199: 82 7a                    a3 = u64 [a0]
 14201: 97 99 03                 a2 = a2 << 0x3
 14204: 86 99 00 f8              a2 = a2 | 0xfffffffffffff800
 14208: c8 89 09                 a2 = a2 + a1
 14211: 7b 9a                    u64 [a2] = a3
 14213: 82 1a 80 00              a3 = u64 [sp + 0x80]
 14217: 7c 64 01                 t2 = u8 [s1 + 0x1]
 14220: 85 40 ff                 ra = t2 ^ 0xffffffffffffffff
 14223: 97 09 03                 a2 = ra << 0x3
 14226: c8 89 09                 a2 = a2 + a1
 14229: 82 99                    a2 = u64 [a2]
 14231: 95 bb 01                 a4 = a4 + 0x1
 14234: 95 66 01                 s1 = s1 + 0x1
 14237: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 14240: 7b 79                    u64 [a0] = a2
 14242: 52 02 c9                 jump @1087 if t0 != 0
      :                          @1088
 14245: 28 89 fe                 jump @1065
      :                          @1089
 14248: ae cb 2b                 jump @1093 if a4 >=u a5
      :                          @1090
 14251: 82 12 08                 t0 = u64 [sp + 0x8]
 14254: 64 a3                    t1 = a3
 14256: 01                       fallthrough
      :                          @1091
 14257: 7c c7 ff                 a0 = u8 [a5 + 0xffffffffffffffff]
 14260: 97 77 03                 a0 = a0 << 0x3
 14263: c8 37 07                 a0 = a0 + t1
 14266: 82 85 f8                 s0 = u64 [a1 + 0xfffffffffffffff8]
 14269: 82 79                    a2 = u64 [a0]
 14271: 95 c6 ff                 s1 = a5 + 0xffffffffffffffff
 14274: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
 14277: 7b 75                    u64 [a0] = s0
 14279: 7b 89 f8                 u64 [a1 + 0xfffffffffffffff8] = a2
 14282: 64 a8                    a1 = a3
 14284: 64 6c                    a5 = s1
 14286: ac 6b e3                 jump @1091 if a4 <u s1
      :                          @1092
 14289: 28 27                    jump @1095
      :                          @1093
 14291: 82 12 08                 t0 = u64 [sp + 0x8]
 14294: ae 36 22                 jump @1095 if s1 >=u t1
      :                          @1094
 14297: 7c 37 ff                 a0 = u8 [t1 + 0xffffffffffffffff]
 14300: 85 77 ff                 a0 = a0 ^ 0xffffffffffffffff
 14303: 97 77 03                 a0 = a0 << 0x3
 14306: c8 87 07                 a0 = a0 + a1
 14309: 82 79                    a2 = u64 [a0]
 14311: 82 ab                    a4 = u64 [a3]
 14313: 95 3c ff                 a5 = t1 + 0xffffffffffffffff
 14316: 7b a9                    u64 [a3] = a2
 14318: 7b 7b                    u64 [a0] = a4
 14320: 95 aa 08                 a3 = a3 + 0x8
 14323: 64 c3                    t1 = a5
 14325: ac c6 e4                 jump @1094 if s1 <u a5
      :                          @1095
 14328: 82 17 38                 a0 = u64 [sp + 0x38]
 14331: c9 7a 07                 a0 = a3 - a0
 14334: 98 77 03                 a0 = a0 >> 0x3
 14337: 82 16 40                 s1 = u64 [sp + 0x40]
 14340: c8 76 06                 s1 = s1 + a0
 14343: 7b 20                    u64 [t0] = ra
 14345: 82 18                    a1 = u64 [sp]
 14347: ae 86 9d 00              jump @1106 if s1 >=u a1
      :                          @1096
 14351: 97 67 03                 a0 = s1 << 0x3
 14354: c8 72 09                 a2 = t0 + a0
 14357: 82 97                    a0 = u64 [a2]
 14359: 7b 27                    u64 [t0] = a0
 14361: 7b 90                    u64 [a2] = ra
 14363: 64 25                    s0 = t0
 14365: c9 68 08                 a1 = a1 - s1
 14368: 7b 18 80 00              u64 [sp + 0x80] = a1
 14372: 95 8b ff                 a4 = a1 + 0xffffffffffffffff
 14375: 95 97 08                 a0 = a2 + 0x8
 14378: ae b6 28                 jump @1099 if s1 >=u a4
      :                          @1097
 14381: 7b 17 78                 u64 [sp + 0x78] = a0
 14384: 64 57                    a0 = s0
 14386: 64 68                    a1 = s1
 14388: 7b 19 70                 u64 [sp + 0x70] = a2
 14391: 82 19 58                 a2 = u64 [sp + 0x58]
 14394: 82 1a 48                 a3 = u64 [sp + 0x48]
 14397: 64 b5                    s0 = a4
 14399: 50 20 74 01 3a fa        ra = 372, jump @1000
      :                          @1098 [@dyn 186]
 14405: 64 50                    ra = s0
 14407: 82 17 70                 a0 = u64 [sp + 0x70]
 14410: 7b 17 58                 u64 [sp + 0x58] = a0
 14413: 82 15 78                 s0 = u64 [sp + 0x78]
 14416: 28 10                    jump @1101
      :                          @1099
 14418: 64 b8                    a1 = a4
 14420: 82 1a 48                 a3 = u64 [sp + 0x48]
 14423: 50 20 76 01 22 fa        ra = 374, jump @1000
      :                          @1100 [@dyn 187]
 14429: 64 60                    ra = s1
 14431: 01                       fallthrough
      :                          @1101
 14432: 82 17 40                 a0 = u64 [sp + 0x40]
 14435: 82 18 30                 a1 = u64 [sp + 0x30]
 14438: d8 87 07                 a0 = a0 <u a1
 14441: 85 77 01                 a0 = a0 ^ 0x1
 14444: 82 18 80 00              a1 = u64 [sp + 0x80]
 14448: e6 86 08                 a1 = minu(s1, a1)
 14451: 82 19                    a2 = u64 [sp]
 14453: 98 99 03                 a2 = a2 >> 0x3
 14456: d8 98 08                 a1 = a1 <u a2
 14459: 85 88 01                 a1 = a1 ^ 0x1
 14462: 7b 18 78                 u64 [sp + 0x78] = a1
 14465: 7b 10                    u64 [sp] = ra
 14467: 7b 15 08                 u64 [sp + 0x8] = s0
 14470: 64 52                    t0 = s0
 14472: 33 08 15                 a1 = 0x15
 14475: 33 05 01 01              s0 = 0x101
 14479: ae 80 41 fa              jump @1006 if ra >=u a1
      :                          @1102
 14483: 28 07 fa                 jump @1002
      :                          @1103
 14486: 64 27                    a0 = t0
 14488: 64 08                    a1 = ra
 14490: 33 00 78 01              ra = 0x178
 14494: 98 82 01                 t0 = a1 >> 0x1
 14497: 28 13 11                 jump @1371
      :                          @1104 [@dyn 188]
 14500: 28 09 fa                 jump @1004
      :                          @1105
 14503: 00                       trap
      :                          @1106
 14504: 00                       trap
      :                          @1107
 14505: 00                       trap
      :                          @1108
 14506: 00                       trap
      :                          @1109
 14507: 95 11 50 fe              sp = sp + 0xfffffffffffffe50
 14511: 7b 10 a8 01              u64 [sp + 0x1a8] = ra
 14515: 7b 15 a0 01              u64 [sp + 0x1a0] = s0
 14519: 7b 16 98 01              u64 [sp + 0x198] = s1
 14523: 33 0b 15                 a4 = 0x15
 14526: 7b 1a 40                 u64 [sp + 0x40] = a3
 14529: 7b 19 48                 u64 [sp + 0x48] = a2
 14532: 7b 18 08                 u64 [sp + 0x8] = a1
 14535: ae b8 2e                 jump @1114 if a1 >=u a4
      :                          @1110
 14538: 82 10 08                 ra = u64 [sp + 0x8]
 14541: 64 76                    s1 = a0
 14543: 01                       fallthrough
      :                          @1111
 14544: 33 07 01                 a0 = 0x1
 14547: ae 07 10                 jump @1113 if a0 >=u ra
      :                          @1112
 14550: 33 09 01                 a2 = 0x1
 14553: 64 67                    a0 = s1
 14555: 64 08                    a1 = ra
 14557: 50 20 7a 01 50 f1        ra = 378, jump @838
      :                          @1113 [@dyn 189]
 14563: 82 10 a8 01              ra = u64 [sp + 0x1a8]
 14567: 82 15 a0 01              s0 = u64 [sp + 0x1a0]
 14571: 82 16 98 01              s1 = u64 [sp + 0x198]
 14575: 95 11 b0 01              sp = sp + 0x1b0
 14579: 32 00                    ret
      :                          @1114
 14581: 7b 17                    u64 [sp] = a0
 14583: 49 11 70 01              u64 [sp + 112] = 0x1
 14587: 33 07 01                 a0 = 0x1
 14590: 82 10 08                 ra = u64 [sp + 0x8]
 14593: 01                       fallthrough
      :                          @1115
 14594: 82 18 70                 a1 = u64 [sp + 0x70]
 14597: d2 87 07                 a0 = a0 & a1
 14600: 7b 17 68                 u64 [sp + 0x68] = a0
 14603: 82 16                    s1 = u64 [sp]
 14605: 01                       fallthrough
      :                          @1116
 14606: 81 17 40                 a0 = i32 [sp + 0x40]
 14609: 51 07 87 06              jump @1211 if a0 == 0
      :                          @1117
 14613: 82 17 70                 a0 = u64 [sp + 0x70]
 14616: 84 77 01                 a0 = a0 & 0x1
 14619: 7b 10 78                 u64 [sp + 0x78] = ra
 14622: 51 07 c2 02              jump @1157 if a0 == 0
      :                          @1118
 14626: 98 0b 02                 a4 = ra >> 0x2
 14629: 97 b5 01                 s0 = a4 << 0x1
 14632: c8 b5 03                 t1 = s0 + a4
 14635: 7b 16 80 00              u64 [sp + 0x80] = s1
 14639: 54 10 31 2b              jump @1121 if ra <=u 49
      :                          @1119
 14643: 95 ba ff                 a3 = a4 + 0xffffffffffffffff
 14646: 97 b7 04                 a0 = a4 << 0x4
 14649: c8 67 07                 a0 = a0 + s1
 14652: 82 70 08                 ra = u64 [a0 + 0x8]
 14655: 97 a7 04                 a0 = a3 << 0x4
 14658: c8 67 07                 a0 = a0 + s1
 14661: 82 78 08                 a1 = u64 [a0 + 0x8]
 14664: ae 80 17                 jump @1122 if ra >=u a1
      :                          @1120
 14667: 33 02 01                 t0 = 0x1
 14670: 64 04                    t2 = ra
 14672: 7b 1a 18                 u64 [sp + 0x18] = a3
 14675: 7b 1b 60                 u64 [sp + 0x60] = a4
 14678: 64 80                    ra = a1
 14680: 28 12                    jump @1123
      :                          @1121
 14682: 33 09                    a2 = 0
 14684: 28 0a 01                 jump @1130
      :                          @1122
 14687: 7b 1a 60                 u64 [sp + 0x60] = a3
 14690: 33 02                    t0 = 0
 14692: 64 84                    t2 = a1
 14694: 7b 1b 18                 u64 [sp + 0x18] = a4
 14697: 01                       fallthrough
      :                          @1123
 14698: 95 b8 01                 a1 = a4 + 0x1
 14701: 7b 18 50                 u64 [sp + 0x50] = a1
 14704: 97 88 04                 a1 = a1 << 0x4
 14707: c8 68 08                 a1 = a1 + s1
 14710: 82 87 08                 a0 = u64 [a1 + 0x8]
 14713: d8 07 09                 a2 = a0 <u ra
 14716: 95 5b ff                 a4 = s0 + 0xffffffffffffffff
 14719: 97 58 04                 a1 = s0 << 0x4
 14722: c8 68 08                 a1 = a1 + s1
 14725: 82 8c 08                 a5 = u64 [a1 + 0x8]
 14728: 97 b8 04                 a1 = a4 << 0x4
 14731: c8 68 08                 a1 = a1 + s1
 14734: 82 88 08                 a1 = u64 [a1 + 0x8]
 14737: e6 07 07                 a0 = minu(a0, ra)
 14740: d8 47 06                 s1 = a0 <u t2
 14743: 7b 19 38                 u64 [sp + 0x38] = a2
 14746: c8 92 07                 a0 = t0 + a2
 14749: c8 67 0a                 a3 = a0 + s1
 14752: 7b 16 30                 u64 [sp + 0x30] = s1
 14755: ae 8c 10                 jump @1125 if a5 >=u a1
      :                          @1124
 14758: 95 aa 01                 a3 = a3 + 0x1
 14761: 64 c6                    s1 = a5
 14763: 7b 1b 28                 u64 [sp + 0x28] = a4
 14766: 7b 15 58                 u64 [sp + 0x58] = s0
 14769: 28 0d                    jump @1126
      :                          @1125
 14771: 7b 1b 58                 u64 [sp + 0x58] = a4
 14774: 64 86                    s1 = a1
 14776: 7b 15 28                 u64 [sp + 0x28] = s0
 14779: 64 c8                    a1 = a5
 14781: 01                       fallthrough
      :                          @1126
 14782: 86 54 01                 t2 = s0 | 0x1
 14785: 97 4c 04                 a5 = t2 << 0x4
 14788: 82 15 80 00              s0 = u64 [sp + 0x80]
 14792: c8 5c 0c                 a5 = a5 + s0
 14795: 82 c9 08                 a2 = u64 [a5 + 0x8]
 14798: d8 89 07                 a0 = a2 <u a1
 14801: 95 3c ff                 a5 = t1 + 0xffffffffffffffff
 14804: 97 3b 04                 a4 = t1 << 0x4
 14807: c8 5b 0b                 a4 = a4 + s0
 14810: 82 b2 08                 t0 = u64 [a4 + 0x8]
 14813: 97 cb 04                 a4 = a5 << 0x4
 14816: c8 5b 0b                 a4 = a4 + s0
 14819: 82 b0 08                 ra = u64 [a4 + 0x8]
 14822: e6 89 08                 a1 = minu(a2, a1)
 14825: d8 68 09                 a2 = a1 <u s1
 14828: 7b 17 20                 u64 [sp + 0x20] = a0
 14831: c8 a7 07                 a0 = a0 + a3
 14834: c8 97 07                 a0 = a0 + a2
 14837: ae 02 11                 jump @1128 if t0 >=u ra
      :                          @1127
 14840: 95 77 01                 a0 = a0 + 0x1
 14843: 7b 12 10                 u64 [sp + 0x10] = t0
 14846: 64 72                    t0 = a0
 14848: 64 c7                    a0 = a5
 14850: 64 3c                    a5 = t1
 14852: 28 0e                    jump @1129
      :                          @1128
 14854: 7b 10 10                 u64 [sp + 0x10] = ra
 14857: 64 78                    a1 = a0
 14859: 64 37                    a0 = t1
 14861: 64 20                    ra = t0
 14863: 64 82                    t0 = a1
 14865: 01                       fallthrough
      :                          @1129
 14866: 82 1a 18                 a3 = u64 [sp + 0x18]
 14869: 82 15 50                 s0 = u64 [sp + 0x50]
 14872: 82 1b 38                 a4 = u64 [sp + 0x38]
 14875: da ba 05                 s0 = a3 if a4 == 0
 14878: 95 33 01                 t1 = t1 + 0x1
 14881: 97 3b 04                 a4 = t1 << 0x4
 14884: 82 16 80 00              s1 = u64 [sp + 0x80]
 14888: c8 6b 0b                 a4 = a4 + s1
 14891: 82 bb 08                 a4 = u64 [a4 + 0x8]
 14894: 82 1a 60                 a3 = u64 [sp + 0x60]
 14897: 82 18 30                 a1 = u64 [sp + 0x30]
 14900: da 85 0a                 a3 = s0 if a1 == 0
 14903: 82 18 28                 a1 = u64 [sp + 0x28]
 14906: 82 15 20                 s0 = u64 [sp + 0x20]
 14909: da 58 04                 t2 = a1 if s0 == 0
 14912: 82 15 58                 s0 = u64 [sp + 0x58]
 14915: da 94 05                 s0 = t2 if a2 == 0
 14918: d8 0b 09                 a2 = a4 <u ra
 14921: db 93 07                 a0 = t1 if a2 != 0
 14924: e6 0b 0b                 a4 = minu(a4, ra)
 14927: 82 18 10                 a1 = u64 [sp + 0x10]
 14930: d8 8b 08                 a1 = a4 <u a1
 14933: db 8c 07                 a0 = a5 if a1 != 0
 14936: c8 98 08                 a1 = a1 + a2
 14939: c8 82 09                 a2 = t0 + a1
 14942: 64 73                    t1 = a0
 14944: 64 ab                    a4 = a3
 14946: 82 10 78                 ra = u64 [sp + 0x78]
 14949: 01                       fallthrough
      :                          @1130
 14950: 97 57 04                 a0 = s0 << 0x4
 14953: c8 67 07                 a0 = a0 + s1
 14956: 82 78 08                 a1 = u64 [a0 + 0x8]
 14959: 97 b7 04                 a0 = a4 << 0x4
 14962: c8 67 07                 a0 = a0 + s1
 14965: 82 77 08                 a0 = u64 [a0 + 0x8]
 14968: ae 78 0c                 jump @1132 if a1 >=u a0
      :                          @1131
 14971: 95 99 01                 a2 = a2 + 0x1
 14974: 64 8c                    a5 = a1
 14976: 64 ba                    a3 = a4
 14978: 28 0b                    jump @1133
      :                          @1132
 14980: 64 7c                    a5 = a0
 14982: 64 5a                    a3 = s0
 14984: 64 b5                    s0 = a4
 14986: 64 87                    a0 = a1
 14988: 01                       fallthrough
      :                          @1133
 14989: 97 38 04                 a1 = t1 << 0x4
 14992: c8 68 08                 a1 = a1 + s1
 14995: 82 8b 08                 a4 = u64 [a1 + 0x8]
 14998: d8 7b 08                 a1 = a4 <u a0
 15001: e6 7b 07                 a0 = minu(a4, a0)
 15004: c8 89 09                 a2 = a2 + a1
 15007: ae c7 09                 jump @1136 if a0 >=u a5
      :                          @1134
 15010: 55 19 0b 1a              jump @1138 if a2 >=u 11
      :                          @1135
 15014: 28 5a                    jump @1141
      :                          @1136
 15016: da 8a 03                 t1 = a3 if a1 == 0
 15019: 64 35                    s0 = t1
 15021: 88 97 01                 a0 = a2 <u 0x1
 15024: 82 18 68                 a1 = u64 [sp + 0x68]
 15027: d2 87 07                 a0 = a0 & a1
 15030: 51 07 4a                 jump @1141 if a0 == 0
      :                          @1137
 15033: 28 40 01                 jump @1159
      :                          @1138
 15036: 98 07 01                 a0 = ra >> 0x1
 15039: 95 68 08                 a1 = s1 + 0x8
 15042: 97 09 04                 a2 = ra << 0x4
 15045: c8 69 09                 a2 = a2 + s1
 15048: 95 99 f8                 a2 = a2 + 0xfffffffffffffff8
 15051: 01                       fallthrough
      :                          @1139
 15052: 82 9a f8                 a3 = u64 [a2 + 0xfffffffffffffff8]
 15055: 82 9b                    a4 = u64 [a2]
 15057: 82 8c f8                 a5 = u64 [a1 + 0xfffffffffffffff8]
 15060: 82 86                    s1 = u64 [a1]
 15062: 7b 8a f8                 u64 [a1 + 0xfffffffffffffff8] = a3
 15065: 7b 8b                    u64 [a1] = a4
 15067: 7b 9c f8                 u64 [a2 + 0xfffffffffffffff8] = a5
 15070: 7b 96                    u64 [a2] = s1
 15072: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 15075: 95 88 10                 a1 = a1 + 0x10
 15078: 95 99 f0                 a2 = a2 + 0xfffffffffffffff0
 15081: 52 07 e3                 jump @1139 if a0 != 0
      :                          @1140
 15084: 85 57 ff                 a0 = s0 ^ 0xffffffffffffffff
 15087: c8 70 05                 s0 = ra + a0
 15090: 82 16 80 00              s1 = u64 [sp + 0x80]
 15094: 82 18 68                 a1 = u64 [sp + 0x68]
 15097: 84 87 01                 a0 = a1 & 0x1
 15100: 52 07 fd 00              jump @1159 if a0 != 0
      :                          @1141
 15104: 97 57 04                 a0 = s0 << 0x4
 15107: 82 18 48                 a1 = u64 [sp + 0x48]
 15110: 51 08 07 01              jump @1162 if a1 == 0
      :                          @1142
 15114: ae 05 a8 04              jump @1213 if s0 >=u ra
      :                          @1143
 15118: c8 76 08                 a1 = s1 + a0
 15121: 82 19 48                 a2 = u64 [sp + 0x48]
 15124: 82 99 08                 a2 = u64 [a2 + 0x8]
 15127: 82 8a 08                 a3 = u64 [a1 + 0x8]
 15130: ac a9 f7 00              jump @1163 if a2 <u a3
      :                          @1144
 15134: 82 69 08                 a2 = u64 [s1 + 0x8]
 15137: 82 6a                    a3 = u64 [s1]
 15139: 33 07                    a0 = 0
 15141: 7b 19 10 01              u64 [sp + 0x110] = a2
 15145: 7b 1a 08 01              u64 [sp + 0x108] = a3
 15149: 82 89                    a2 = u64 [a1]
 15151: 82 8a 08                 a3 = u64 [a1 + 0x8]
 15154: 82 1b 10 01              a4 = u64 [sp + 0x110]
 15158: 82 1c 08 01              a5 = u64 [sp + 0x108]
 15162: 7b 69                    u64 [s1] = a2
 15164: 7b 6a 08                 u64 [s1 + 0x8] = a3
 15167: 7b 8b 08                 u64 [a1 + 0x8] = a4
 15170: 7b 8c                    u64 [a1] = a5
 15172: 82 62                    t0 = u64 [s1]
 15174: 82 68 08                 a1 = u64 [s1 + 0x8]
 15177: 95 64 10                 t2 = s1 + 0x10
 15180: 95 0b ff                 a4 = ra + 0xffffffffffffffff
 15183: 95 63 18                 t1 = s1 + 0x18
 15186: 54 0b 22                 jump @1149 if a4 <=u 0
      :                          @1145
 15189: 97 7a 04                 a3 = a0 << 0x4
 15192: c8 3a 0a                 a3 = a3 + t1
 15195: 01                       fallthrough
      :                          @1146
 15196: 82 a9                    a2 = u64 [a3]
 15198: ac 98 16                 jump @1149 if a1 <u a2
      :                          @1147
 15201: 95 77 01                 a0 = a0 + 0x1
 15204: 95 aa 10                 a3 = a3 + 0x10
 15207: ab 7b f5                 jump @1146 if a4 != a0
      :                          @1148
 15210: 64 b7                    a0 = a4
 15212: 97 ba 04                 a3 = a4 << 0x4
 15215: c8 4a 0a                 a3 = a3 + t2
 15218: 28 09                    jump @1150
      :                          @1149
 15220: 97 ba 04                 a3 = a4 << 0x4
 15223: c8 4a 0a                 a3 = a3 + t2
 15226: 01                       fallthrough
      :                          @1150
 15227: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 15230: ae b7 45                 jump @1154 if a0 >=u a4
      :                          @1151
 15233: 82 a9 f8                 a2 = u64 [a3 + 0xfffffffffffffff8]
 15236: 95 aa f0                 a3 = a3 + 0xfffffffffffffff0
 15239: ac 98 f4                 jump @1150 if a1 <u a2
      :                          @1152
 15242: 97 79 04                 a2 = a0 << 0x4
 15245: c8 49 09                 a2 = a2 + t2
 15248: 82 9c 08                 a5 = u64 [a2 + 0x8]
 15251: 82 96                    s1 = u64 [a2]
 15253: 7b 1c 10 01              u64 [sp + 0x110] = a5
 15257: 7b 16 08 01              u64 [sp + 0x108] = s1
 15261: 82 a0                    ra = u64 [a3]
 15263: 82 a6 08                 s1 = u64 [a3 + 0x8]
 15266: 82 15 10 01              s0 = u64 [sp + 0x110]
 15270: 82 1c 08 01              a5 = u64 [sp + 0x108]
 15274: 7b 90                    u64 [a2] = ra
 15276: 82 10 78                 ra = u64 [sp + 0x78]
 15279: 7b 96 08                 u64 [a2 + 0x8] = s1
 15282: 82 16 80 00              s1 = u64 [sp + 0x80]
 15286: 7b a5 08                 u64 [a3 + 0x8] = s0
 15289: 7b ac                    u64 [a3] = a5
 15291: 95 77 01                 a0 = a0 + 0x1
 15294: ac b7 97                 jump @1145 if a0 <u a4
      :                          @1153
 15297: 28 b3                    jump @1149
      :                          @1154
 15299: 95 77 01                 a0 = a0 + 0x1
 15302: 7b 62                    u64 [s1] = t0
 15304: 7b 68 08                 u64 [s1 + 0x8] = a1
 15307: ac 70 ea 03              jump @1216 if ra <u a0
      :                          @1155
 15311: c9 70 00                 ra = ra - a0
 15314: 97 77 04                 a0 = a0 << 0x4
 15317: c8 76 06                 s1 = s1 + a0
 15320: 55 10 15 36 fd           jump @1116 if ra >=u 21
      :                          @1156
 15325: 28 f3 fc                 jump @1111
      :                          @1157
 15328: 64 67                    a0 = s1
 15330: 64 08                    a1 = ra
 15332: 50 20 7c 01 e9 de        ra = 380, jump @477
      :                          @1158 [@dyn 190]
 15338: 82 10 78                 ra = u64 [sp + 0x78]
 15341: 82 17 40                 a0 = u64 [sp + 0x40]
 15344: 83 77 ff                 i32 a0 = a0 + 0xffffffffffffffff
 15347: 7b 17 40                 u64 [sp + 0x40] = a0
 15350: 28 2c fd                 jump @1118
      :                          @1159
 15353: 64 67                    a0 = s1
 15355: 64 08                    a1 = ra
 15357: 50 20 7e 01 8b e6        ra = 382, jump @637
      :                          @1160 [@dyn 191]
 15363: 82 10 78                 ra = u64 [sp + 0x78]
 15366: 51 07 fa fe              jump @1141 if a0 == 0
      :                          @1161
 15370: 28 d9 fc                 jump @1113
      :                          @1162
 15373: 82 1c                    a5 = u64 [sp]
 15375: 28 08                    jump @1164
      :                          @1163
 15377: 64 6c                    a5 = s1
 15379: 7b 10 08                 u64 [sp + 0x8] = ra
 15382: 01                       fallthrough
      :                          @1164
 15383: 82 18 08                 a1 = u64 [sp + 0x8]
 15386: ae 85 99 03              jump @1214 if s0 >=u a1
      :                          @1165
 15390: 82 c8 08                 a1 = u64 [a5 + 0x8]
 15393: 82 c9                    a2 = u64 [a5]
 15395: 33 05                    s0 = 0
 15397: c8 c7 07                 a0 = a0 + a5
 15400: 7b 18 10 01              u64 [sp + 0x110] = a1
 15404: 7b 19 08 01              u64 [sp + 0x108] = a2
 15408: 82 78                    a1 = u64 [a0]
 15410: 82 79 08                 a2 = u64 [a0 + 0x8]
 15413: 82 1a 10 01              a3 = u64 [sp + 0x110]
 15417: 82 1b 08 01              a4 = u64 [sp + 0x108]
 15421: 7b c8                    u64 [a5] = a1
 15423: 7b c9 08                 u64 [a5 + 0x8] = a2
 15426: 7b 7a 08                 u64 [a0 + 0x8] = a3
 15429: 7b 7b                    u64 [a0] = a4
 15431: 82 c7                    a0 = u64 [a5]
 15433: 7b 17 30                 u64 [sp + 0x30] = a0
 15436: 82 c2 08                 t0 = u64 [a5 + 0x8]
 15439: 95 ca 10                 a3 = a5 + 0x10
 15442: 82 18 08                 a1 = u64 [sp + 0x8]
 15445: 95 86 ff                 s1 = a1 + 0xffffffffffffffff
 15448: 7b 1c                    u64 [sp] = a5
 15450: 95 c9 18                 a2 = a5 + 0x18
 15453: 01                       fallthrough
      :                          @1166
 15454: 82 9b                    a4 = u64 [a2]
 15456: ae 2b 0f                 jump @1169 if a4 >=u t0
      :                          @1167
 15459: 95 55 01                 s0 = s0 + 0x1
 15462: 95 99 10                 a2 = a2 + 0x10
 15465: ab 56 f5                 jump @1166 if s1 != s0
      :                          @1168
 15468: 64 65                    s0 = s1
 15470: 01                       fallthrough
      :                          @1169
 15471: 82 19 08                 a2 = u64 [sp + 0x8]
 15474: 97 99 04                 a2 = a2 << 0x4
 15477: 82 17                    a0 = u64 [sp]
 15479: c8 79 09                 a2 = a2 + a0
 15482: 95 99 f8                 a2 = a2 + 0xfffffffffffffff8
 15485: 01                       fallthrough
      :                          @1170
 15486: 64 68                    a1 = s1
 15488: ae 65 0e                 jump @1172 if s0 >=u s1
      :                          @1171
 15491: 82 9b                    a4 = u64 [a2]
 15493: 95 86 ff                 s1 = a1 + 0xffffffffffffffff
 15496: 95 99 f0                 a2 = a2 + 0xfffffffffffffff0
 15499: ae 2b f3                 jump @1170 if a4 >=u t0
      :                          @1172
 15502: ac 58 28 03              jump @1217 if a1 <u s0
      :                          @1173
 15506: 33 0c                    a5 = 0
 15508: 33 09                    a2 = 0
 15510: 33 06                    s1 = 0
 15512: 33 03                    t1 = 0
 15514: 7b 15 38                 u64 [sp + 0x38] = s0
 15517: 97 5b 04                 a4 = s0 << 0x4
 15520: c8 ba 07                 a0 = a3 + a4
 15523: 7b 18 20                 u64 [sp + 0x20] = a1
 15526: 97 8b 04                 a4 = a1 << 0x4
 15529: c8 ba 04                 t2 = a3 + a4
 15532: 33 08 80 00              a1 = 0x80
 15536: 7b 17 28                 u64 [sp + 0x28] = a0
 15539: 64 75                    s0 = a0
 15541: 33 00 80 00              ra = 0x80
 15545: 7b 12 50                 u64 [sp + 0x50] = t0
 15548: 28 30                    jump @1176
      :                          @1174
 15550: 82 15 78                 s0 = u64 [sp + 0x78]
 15553: 01                       fallthrough
      :                          @1175
 15554: d3 9c 07                 a0 = a5 ^ a2
 15557: 82 18 70                 a1 = u64 [sp + 0x70]
 15560: 64 8a                    a3 = a1
 15562: 94 7a                    a3 = 0 if a0 != 0
 15564: 97 aa 04                 a3 = a3 << 0x4
 15567: c8 a5 05                 s0 = s0 + a3
 15570: d3 36 07                 a0 = s1 ^ t1
 15573: 82 10 68                 ra = u64 [sp + 0x68]
 15576: 9a 0a                    a3 = -ra
 15578: 94 7a                    a3 = 0 if a0 != 0
 15580: 97 aa 04                 a3 = a3 << 0x4
 15583: c8 a4 04                 t2 = t2 + a3
 15586: 82 1a 80 00              a3 = u64 [sp + 0x80]
 15590: 53 2a 01 01 67 01        jump @1197 if a3 <u 257
      :                          @1176
 15596: 7b 15 78                 u64 [sp + 0x78] = s0
 15599: c9 54 05                 s0 = t2 - s0
 15602: 98 5a 04                 a3 = s0 >> 0x4
 15605: 7b 1a 80 00              u64 [sp + 0x80] = a3
 15609: 55 2a 01 01 29           jump @1179 if a3 >=u 257
      :                          @1177
 15614: 64 07                    a0 = ra
 15616: d8 9c 00                 ra = a5 <u a2
 15619: d8 36 0b                 a4 = s1 <u t1
 15622: d4 b0 02                 t0 = ra | a4
 15625: 51 02 1e                 jump @1181 if t0 == 0
      :                          @1178
 15628: 82 1a 80 00              a3 = u64 [sp + 0x80]
 15632: 95 ab 80                 a4 = a3 + 0xffffffffffffff80
 15635: db 0b 07                 a0 = a4 if ra != 0
 15638: da 2a 0b                 a4 = a3 if t0 == 0
 15641: da 0b 08                 a1 = a4 if ra == 0
 15644: 64 70                    ra = a0
 15646: 82 12 50                 t0 = u64 [sp + 0x50]
 15649: 01                       fallthrough
      :                          @1179
 15650: ab 9c 3f                 jump @1185 if a5 != a2
      :                          @1180
 15653: 28 12                    jump @1182
      :                          @1181
 15655: 98 58 05                 a1 = s0 >> 0x5
 15658: 82 17 80 00              a0 = u64 [sp + 0x80]
 15662: c9 87 00                 ra = a0 - a1
 15665: 82 12 50                 t0 = u64 [sp + 0x50]
 15668: ab 9c 2d                 jump @1185 if a5 != a2
      :                          @1182
 15671: 51 08 55                 jump @1190 if a1 == 0
      :                          @1183
 15674: 33 05                    s0 = 0
 15676: 95 1c 88 00              a5 = sp + 0x88
 15680: 82 1b 78                 a4 = u64 [sp + 0x78]
 15683: 95 19 88 00              a2 = sp + 0x88
 15687: 01                       fallthrough
      :                          @1184
 15688: 82 b7 08                 a0 = u64 [a4 + 0x8]
 15691: 78 95                    u8 [a2] = s0
 15693: 95 5a 01                 a3 = s0 + 0x1
 15696: d8 27 07                 a0 = a0 <u t0
 15699: 85 77 01                 a0 = a0 ^ 0x1
 15702: c8 79 09                 a2 = a2 + a0
 15705: 95 bb 10                 a4 = a4 + 0x10
 15708: 64 a5                    s0 = a3
 15710: ab a8 ea                 jump @1184 if a1 != a3
      :                          @1185
 15713: ab 36 41                 jump @1193 if s1 != t1
      :                          @1186
 15716: 51 00 35                 jump @1192 if ra == 0
      :                          @1187
 15719: 33 05                    s0 = 0
 15721: 95 4b f8                 a4 = t2 + 0xfffffffffffffff8
 15724: 95 16 08 01              s1 = sp + 0x108
 15728: 95 13 08 01              t1 = sp + 0x108
 15732: 01                       fallthrough
      :                          @1188
 15733: 82 b7                    a0 = u64 [a4]
 15735: 78 35                    u8 [t1] = s0
 15737: 95 5a 01                 a3 = s0 + 0x1
 15740: d8 27 07                 a0 = a0 <u t0
 15743: c8 73 03                 t1 = t1 + a0
 15746: 95 bb f0                 a4 = a4 + 0xfffffffffffffff0
 15749: 64 a5                    s0 = a3
 15751: ab a0 ee                 jump @1188 if ra != a3
      :                          @1189
 15754: 28 18                    jump @1193
      :                          @1190
 15756: 95 1c 88 00              a5 = sp + 0x88
 15760: 95 19 88 00              a2 = sp + 0x88
 15764: ab 36 0e                 jump @1193 if s1 != t1
      :                          @1191
 15767: 28 cd                    jump @1186
      :                          @1192
 15769: 95 16 08 01              s1 = sp + 0x108
 15773: 95 13 08 01              t1 = sp + 0x108
 15777: 01                       fallthrough
      :                          @1193
 15778: 7b 10 68                 u64 [sp + 0x68] = ra
 15781: 7b 18 70                 u64 [sp + 0x70] = a1
 15784: c9 c9 07                 a0 = a2 - a5
 15787: c9 63 0a                 a3 = t1 - s1
 15790: e6 a7 00                 ra = minu(a0, a3)
 15793: 51 00 0d ff              jump @1174 if ra == 0
      :                          @1194
 15797: 7c 62                    t0 = u8 [s1]
 15799: 7c c7                    a0 = u8 [a5]
 15801: 85 2b ff                 a4 = t0 ^ 0xffffffffffffffff
 15804: 97 ba 04                 a3 = a4 << 0x4
 15807: c8 4a 0a                 a3 = a3 + t2
 15810: 82 a8                    a1 = u64 [a3]
 15812: 7b 18 58                 u64 [sp + 0x58] = a1
 15815: 97 77 04                 a0 = a0 << 0x4
 15818: 82 18 78                 a1 = u64 [sp + 0x78]
 15821: c8 87 07                 a0 = a0 + a1
 15824: 82 75                    s0 = u64 [a0]
 15826: 7b 15 60                 u64 [sp + 0x60] = s0
 15829: 82 15 58                 s0 = u64 [sp + 0x58]
 15832: 7b 75                    u64 [a0] = s0
 15834: 82 aa 08                 a3 = u64 [a3 + 0x8]
 15837: 82 75 08                 s0 = u64 [a0 + 0x8]
 15840: 7b 15 58                 u64 [sp + 0x58] = s0
 15843: 95 00 ff                 ra = ra + 0xffffffffffffffff
 15846: 7b 7a 08                 u64 [a0 + 0x8] = a3
 15849: 51 00 45                 jump @1196 if ra == 0
      :                          @1195
 15852: 7c c7 01                 a0 = u8 [a5 + 0x1]
 15855: 97 77 04                 a0 = a0 << 0x4
 15858: c8 87 07                 a0 = a0 + a1
 15861: 85 2a ff                 a3 = t0 ^ 0xffffffffffffffff
 15864: 82 7b 08                 a4 = u64 [a0 + 0x8]
 15867: 86 aa 00 ff              a3 = a3 | 0xffffffffffffff00
 15871: 97 aa 04                 a3 = a3 << 0x4
 15874: c8 4a 0a                 a3 = a3 + t2
 15877: 7b ab 08                 u64 [a3 + 0x8] = a4
 15880: 82 7b                    a4 = u64 [a0]
 15882: 7b ab                    u64 [a3] = a4
 15884: 7c 62 01                 t0 = u8 [s1 + 0x1]
 15887: 85 2b ff                 a4 = t0 ^ 0xffffffffffffffff
 15890: 97 ba 04                 a3 = a4 << 0x4
 15893: c8 4a 0a                 a3 = a3 + t2
 15896: 82 a5 08                 s0 = u64 [a3 + 0x8]
 15899: 7b 75 08                 u64 [a0 + 0x8] = s0
 15902: 82 aa                    a3 = u64 [a3]
 15904: 95 cc 01                 a5 = a5 + 0x1
 15907: 95 66 01                 s1 = s1 + 0x1
 15910: 95 00 ff                 ra = ra + 0xffffffffffffffff
 15913: 7b 7a                    u64 [a0] = a3
 15915: 52 00 c1                 jump @1195 if ra != 0
      :                          @1196
 15918: 97 bb 04                 a4 = a4 << 0x4
 15921: c8 4b 0b                 a4 = a4 + t2
 15924: 82 17 60                 a0 = u64 [sp + 0x60]
 15927: 7b b7                    u64 [a4] = a0
 15929: 82 17 58                 a0 = u64 [sp + 0x58]
 15932: 7b b7 08                 u64 [a4 + 0x8] = a0
 15935: 95 cc 01                 a5 = a5 + 0x1
 15938: 95 66 01                 s1 = s1 + 0x1
 15941: 82 12 50                 t0 = u64 [sp + 0x50]
 15944: 64 85                    s0 = a1
 15946: 28 78 fe                 jump @1175
      :                          @1197
 15949: ae 9c 45                 jump @1201 if a5 >=u a2
      :                          @1198
 15952: 82 18 08                 a1 = u64 [sp + 0x8]
 15955: 01                       fallthrough
      :                          @1199
 15956: 7c 97 ff                 a0 = u8 [a2 + 0xffffffffffffffff]
 15959: 97 77 04                 a0 = a0 << 0x4
 15962: c8 57 07                 a0 = a0 + s0
 15965: 82 7b 08                 a4 = u64 [a0 + 0x8]
 15968: 82 7a                    a3 = u64 [a0]
 15970: 95 96 ff                 s1 = a2 + 0xffffffffffffffff
 15973: 82 49 f0                 a2 = u64 [t2 + 0xfffffffffffffff0]
 15976: 7b 1b 90 01              u64 [sp + 0x190] = a4
 15980: 7b 1a 88 01              u64 [sp + 0x188] = a3
 15984: 82 4b f8                 a4 = u64 [t2 + 0xfffffffffffffff8]
 15987: 7b 79                    u64 [a0] = a2
 15989: 82 19 90 01              a2 = u64 [sp + 0x190]
 15993: 82 1a 88 01              a3 = u64 [sp + 0x188]
 15997: 7b 7b 08                 u64 [a0 + 0x8] = a4
 16000: 95 4b f0                 a4 = t2 + 0xfffffffffffffff0
 16003: 7b 49 f8                 u64 [t2 + 0xfffffffffffffff8] = a2
 16006: 7b 4a f0                 u64 [t2 + 0xfffffffffffffff0] = a3
 16009: 64 b4                    t2 = a4
 16011: 64 69                    a2 = s1
 16013: ac 6c c7                 jump @1199 if a5 <u s1
      :                          @1200
 16016: 28 45                    jump @1203
      :                          @1201
 16018: 82 18 08                 a1 = u64 [sp + 0x8]
 16021: 64 5b                    a4 = s0
 16023: ae 36 3e                 jump @1203 if s1 >=u t1
      :                          @1202
 16026: 7c 37 ff                 a0 = u8 [t1 + 0xffffffffffffffff]
 16029: 85 77 ff                 a0 = a0 ^ 0xffffffffffffffff
 16032: 97 77 04                 a0 = a0 << 0x4
 16035: 82 b9 08                 a2 = u64 [a4 + 0x8]
 16038: 82 ba                    a3 = u64 [a4]
 16040: c8 47 07                 a0 = a0 + t2
 16043: 82 7c                    a5 = u64 [a0]
 16045: 7b 19 90 01              u64 [sp + 0x190] = a2
 16049: 7b 1a 88 01              u64 [sp + 0x188] = a3
 16053: 82 79 08                 a2 = u64 [a0 + 0x8]
 16056: 7b bc                    u64 [a4] = a5
 16058: 82 1a 90 01              a3 = u64 [sp + 0x190]
 16062: 82 1c 88 01              a5 = u64 [sp + 0x188]
 16066: 7b b9 08                 u64 [a4 + 0x8] = a2
 16069: 95 39 ff                 a2 = t1 + 0xffffffffffffffff
 16072: 7b 7a 08                 u64 [a0 + 0x8] = a3
 16075: 7b 7c                    u64 [a0] = a5
 16077: 95 bb 10                 a4 = a4 + 0x10
 16080: 64 93                    t1 = a2
 16082: ac 96 c8                 jump @1202 if s1 <u a2
      :                          @1203
 16085: 82 17 28                 a0 = u64 [sp + 0x28]
 16088: c9 7b 07                 a0 = a4 - a0
 16091: 98 77 04                 a0 = a0 >> 0x4
 16094: 82 19 38                 a2 = u64 [sp + 0x38]
 16097: c8 97 0c                 a5 = a0 + a2
 16100: 82 15                    s0 = u64 [sp]
 16102: 82 17 30                 a0 = u64 [sp + 0x30]
 16105: 7b 57                    u64 [s0] = a0
 16107: 7b 52 08                 u64 [s0 + 0x8] = t0
 16110: ae 8c c6 00              jump @1215 if a5 >=u a1
      :                          @1204
 16114: 82 57 08                 a0 = u64 [s0 + 0x8]
 16117: 82 59                    a2 = u64 [s0]
 16119: 97 c6 04                 s1 = a5 << 0x4
 16122: c8 56 06                 s1 = s1 + s0
 16125: 7b 17 10 01              u64 [sp + 0x110] = a0
 16129: 7b 19 08 01              u64 [sp + 0x108] = a2
 16133: 82 67                    a0 = u64 [s1]
 16135: 82 6b 08                 a4 = u64 [s1 + 0x8]
 16138: 82 19 10 01              a2 = u64 [sp + 0x110]
 16142: 82 1a 08 01              a3 = u64 [sp + 0x108]
 16146: 7b 57                    u64 [s0] = a0
 16148: 7b 5b 08                 u64 [s0 + 0x8] = a4
 16151: 7b 69 08                 u64 [s1 + 0x8] = a2
 16154: 7b 6a                    u64 [s1] = a3
 16156: c9 c8 08                 a1 = a1 - a5
 16159: 7b 18 80 00              u64 [sp + 0x80] = a1
 16163: 95 8b ff                 a4 = a1 + 0xffffffffffffffff
 16166: 95 67 10                 a0 = s1 + 0x10
 16169: ae bc 28                 jump @1207 if a5 >=u a4
      :                          @1205
 16172: 7b 17 70                 u64 [sp + 0x70] = a0
 16175: 64 57                    a0 = s0
 16177: 64 c8                    a1 = a5
 16179: 82 19 48                 a2 = u64 [sp + 0x48]
 16182: 82 1a 40                 a3 = u64 [sp + 0x40]
 16185: 7b 1b 78                 u64 [sp + 0x78] = a4
 16188: 64 c5                    s0 = a5
 16190: 50 20 80 01 6d f9        ra = 384, jump @1109
      :                          @1206 [@dyn 192]
 16196: 64 59                    a2 = s0
 16198: 82 10 78                 ra = u64 [sp + 0x78]
 16201: 7b 16 48                 u64 [sp + 0x48] = s1
 16204: 82 15 70                 s0 = u64 [sp + 0x70]
 16207: 28 16                    jump @1209
      :                          @1207
 16209: 64 b8                    a1 = a4
 16211: 64 69                    a2 = s1
 16213: 82 1a 40                 a3 = u64 [sp + 0x40]
 16216: 64 c6                    s1 = a5
 16218: 50 20 82 01 51 f9        ra = 386, jump @1109
      :                          @1208 [@dyn 193]
 16224: 64 69                    a2 = s1
 16226: 64 60                    ra = s1
 16228: 01                       fallthrough
      :                          @1209
 16229: 82 17 38                 a0 = u64 [sp + 0x38]
 16232: 82 18 20                 a1 = u64 [sp + 0x20]
 16235: d8 87 07                 a0 = a0 <u a1
 16238: 85 77 01                 a0 = a0 ^ 0x1
 16241: 82 18 80 00              a1 = u64 [sp + 0x80]
 16245: e6 89 08                 a1 = minu(a2, a1)
 16248: 82 19 08                 a2 = u64 [sp + 0x8]
 16251: 98 99 03                 a2 = a2 >> 0x3
 16254: d8 98 08                 a1 = a1 <u a2
 16257: 85 88 01                 a1 = a1 ^ 0x1
 16260: 7b 18 70                 u64 [sp + 0x70] = a1
 16263: 7b 10 08                 u64 [sp + 0x8] = ra
 16266: 7b 15                    u64 [sp] = s0
 16268: 64 56                    s1 = s0
 16270: 33 08 15                 a1 = 0x15
 16273: ae 80 71 f9              jump @1115 if ra >=u a1
      :                          @1210
 16277: 28 3b f9                 jump @1111
      :                          @1211
 16280: 64 67                    a0 = s1
 16282: 64 08                    a1 = ra
 16284: 33 00 84 01              ra = 0x184
 16288: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 16291: 7b 15 18                 u64 [sp + 0x18] = s0
 16294: 7b 16 10                 u64 [sp + 0x10] = s1
 16297: 98 82 01                 t0 = a1 >> 0x1
 16300: 28 d0 08                 jump @1342
      :                          @1212 [@dyn 194]
 16303: 28 34 f9                 jump @1113
      :                          @1213
 16306: 00                       trap
      :                          @1214
 16307: 00                       trap
      :                          @1215
 16308: 00                       trap
      :                          @1216
 16309: 00                       trap
      :                          @1217
 16310: 00                       trap
      :                          @1218
 16311: 95 11 60 fe              sp = sp + 0xfffffffffffffe60
 16315: 7b 10 98 01              u64 [sp + 0x198] = ra
 16319: 7b 15 90 01              u64 [sp + 0x190] = s0
 16323: 7b 16 88 01              u64 [sp + 0x188] = s1
 16327: 33 0b 15                 a4 = 0x15
 16330: 7b 1a 30                 u64 [sp + 0x30] = a3
 16333: 7b 19 38                 u64 [sp + 0x38] = a2
 16336: 64 80                    ra = a1
 16338: ae b8 2b                 jump @1223 if a1 >=u a4
      :                          @1219
 16341: 64 7c                    a5 = a0
 16343: 01                       fallthrough
      :                          @1220
 16344: 33 07 01                 a0 = 0x1
 16347: ae 07 10                 jump @1222 if a0 >=u ra
      :                          @1221
 16350: 33 09 01                 a2 = 0x1
 16353: 64 c7                    a0 = a5
 16355: 64 08                    a1 = ra
 16357: 50 20 86 01 6b e8        ra = 390, jump @787
      :                          @1222 [@dyn 195]
 16363: 82 10 98 01              ra = u64 [sp + 0x198]
 16367: 82 15 90 01              s0 = u64 [sp + 0x190]
 16371: 82 16 88 01              s1 = u64 [sp + 0x188]
 16375: 95 11 a0 01              sp = sp + 0x1a0
 16379: 32 00                    ret
      :                          @1223
 16381: 7b 17 08                 u64 [sp + 0x8] = a0
 16384: 49 11 58 01              u64 [sp + 88] = 0x1
 16388: 33 07 01                 a0 = 0x1
 16391: 7b 10                    u64 [sp] = ra
 16393: 01                       fallthrough
      :                          @1224
 16394: 82 18 58                 a1 = u64 [sp + 0x58]
 16397: d2 87 07                 a0 = a0 & a1
 16400: 7b 17 50                 u64 [sp + 0x50] = a0
 16403: 82 1c 08                 a5 = u64 [sp + 0x8]
 16406: 01                       fallthrough
      :                          @1225
 16407: 81 17 30                 a0 = i32 [sp + 0x30]
 16410: 51 07 3c 08              jump @1334 if a0 == 0
      :                          @1226
 16414: 82 17 58                 a0 = u64 [sp + 0x58]
 16417: 84 77 01                 a0 = a0 & 0x1
 16420: 7b 10 68                 u64 [sp + 0x68] = ra
 16423: 7b 1c 70                 u64 [sp + 0x70] = a5
 16426: 51 07 ce 03              jump @1278 if a0 == 0
      :                          @1227
 16430: 98 07 02                 a0 = ra >> 0x2
 16433: 97 72 01                 t0 = a0 << 0x1
 16436: c8 72 03                 t1 = t0 + a0
 16439: 54 10 31 3b              jump @1230 if ra <=u 49
      :                          @1228
 16443: 64 24                    t2 = t0
 16445: 95 70 ff                 ra = a0 + 0xffffffffffffffff
 16448: 97 78 04                 a1 = a0 << 0x4
 16451: c8 8c 09                 a2 = a5 + a1
 16454: 97 08 04                 a1 = ra << 0x4
 16457: c8 8c 0b                 a4 = a5 + a1
 16460: 82 98                    a1 = u64 [a2]
 16462: 82 bc                    a5 = u64 [a4]
 16464: 82 9a 08                 a3 = u64 [a2 + 0x8]
 16467: 82 b9 08                 a2 = u64 [a4 + 0x8]
 16470: d9 c8 0b                 a4 = a1 <s a5
 16473: d3 c8 06                 s1 = a1 ^ a5
 16476: d9 9a 05                 s0 = a3 <s a2
 16479: db 6b 05                 s0 = a4 if s1 != 0
 16482: 51 05 15                 jump @1231 if s0 == 0
      :                          @1229
 16485: 33 0b 01                 a4 = 0x1
 16488: 64 02                    t0 = ra
 16490: 64 70                    ra = a0
 16492: 64 9a                    a3 = a2
 16494: 64 c8                    a1 = a5
 16496: 28 0c                    jump @1232
      :                          @1230
 16498: 33 04                    t2 = 0
 16500: 28 9c 01                 jump @1248
      :                          @1231
 16503: 33 0b                    a4 = 0
 16505: 64 72                    t0 = a0
 16507: 01                       fallthrough
      :                          @1232
 16508: 95 77 01                 a0 = a0 + 0x1
 16511: 7b 17 60                 u64 [sp + 0x60] = a0
 16514: 97 77 04                 a0 = a0 << 0x4
 16517: 82 19 70                 a2 = u64 [sp + 0x70]
 16520: c8 97 07                 a0 = a0 + a2
 16523: 82 7c                    a5 = u64 [a0]
 16525: 82 77 08                 a0 = u64 [a0 + 0x8]
 16528: d9 8c 09                 a2 = a5 <s a1
 16531: d3 8c 06                 s1 = a5 ^ a1
 16534: d9 a7 05                 s0 = a0 <s a3
 16537: db 69 05                 s0 = a2 if s1 != 0
 16540: 51 05 08                 jump @1234 if s0 == 0
      :                          @1233
 16543: 95 bb 01                 a4 = a4 + 0x1
 16546: 28 0a                    jump @1235
      :                          @1234
 16548: 7b 12 60                 u64 [sp + 0x60] = t0
 16551: 64 a7                    a0 = a3
 16553: 64 8c                    a5 = a1
 16555: 01                       fallthrough
      :                          @1235
 16556: 7b 1b 40                 u64 [sp + 0x40] = a4
 16559: 7b 10 48                 u64 [sp + 0x48] = ra
 16562: 97 08 04                 a1 = ra << 0x4
 16565: 82 1a 70                 a3 = u64 [sp + 0x70]
 16568: c8 a8 08                 a1 = a1 + a3
 16571: 82 89                    a2 = u64 [a1]
 16573: 82 88 08                 a1 = u64 [a1 + 0x8]
 16576: d9 9c 06                 s1 = a5 <s a2
 16579: d3 9c 05                 s0 = a5 ^ a2
 16582: d9 87 0b                 a4 = a0 <s a1
 16585: 95 42 ff                 t0 = t2 + 0xffffffffffffffff
 16588: 97 47 04                 a0 = t2 << 0x4
 16591: c8 7a 08                 a1 = a3 + a0
 16594: 97 27 04                 a0 = t0 << 0x4
 16597: c8 a7 07                 a0 = a0 + a3
 16600: 82 8a                    a3 = u64 [a1]
 16602: 82 79                    a2 = u64 [a0]
 16604: 82 8c 08                 a5 = u64 [a1 + 0x8]
 16607: 82 78 08                 a1 = u64 [a0 + 0x8]
 16610: db 56 0b                 a4 = s1 if s0 != 0
 16613: d9 9a 07                 a0 = a3 <s a2
 16616: d3 9a 06                 s1 = a3 ^ a2
 16619: d9 8c 05                 s0 = a5 <s a1
 16622: db 67 05                 s0 = a0 if s1 != 0
 16625: 7b 1b 28                 u64 [sp + 0x28] = a4
 16628: 82 10 40                 ra = u64 [sp + 0x40]
 16631: c8 b0 00                 ra = ra + a4
 16634: 51 05 0d                 jump @1237 if s0 == 0
      :                          @1236
 16637: 95 00 01                 ra = ra + 0x1
 16640: 7b 12 20                 u64 [sp + 0x20] = t0
 16643: 64 42                    t0 = t2
 16645: 28 0a                    jump @1238
      :                          @1237
 16647: 7b 14 20                 u64 [sp + 0x20] = t2
 16650: 64 c8                    a1 = a5
 16652: 64 a9                    a2 = a3
 16654: 01                       fallthrough
      :                          @1238
 16655: 86 4b 01                 a4 = t2 | 0x1
 16658: 97 b7 04                 a0 = a4 << 0x4
 16661: 82 1a 70                 a3 = u64 [sp + 0x70]
 16664: c8 a7 07                 a0 = a0 + a3
 16667: 82 7c                    a5 = u64 [a0]
 16669: 82 77 08                 a0 = u64 [a0 + 0x8]
 16672: d9 9c 0a                 a3 = a5 <s a2
 16675: d3 9c 06                 s1 = a5 ^ a2
 16678: d9 87 05                 s0 = a0 <s a1
 16681: db 6a 05                 s0 = a3 if s1 != 0
 16684: 51 05 0b                 jump @1240 if s0 == 0
      :                          @1239
 16687: 7b 1b 20                 u64 [sp + 0x20] = a4
 16690: 95 00 01                 ra = ra + 0x1
 16693: 28 07                    jump @1241
      :                          @1240
 16695: 64 87                    a0 = a1
 16697: 64 9c                    a5 = a2
 16699: 01                       fallthrough
      :                          @1241
 16700: 64 25                    s0 = t0
 16702: 97 28 04                 a1 = t0 << 0x4
 16705: 82 16 70                 s1 = u64 [sp + 0x70]
 16708: c8 68 08                 a1 = a1 + s1
 16711: 82 89                    a2 = u64 [a1]
 16713: 82 88 08                 a1 = u64 [a1 + 0x8]
 16716: d9 9c 0a                 a3 = a5 <s a2
 16719: d3 9c 0c                 a5 = a5 ^ a2
 16722: d9 87 09                 a2 = a0 <s a1
 16725: 95 3b ff                 a4 = t1 + 0xffffffffffffffff
 16728: 97 38 04                 a1 = t1 << 0x4
 16731: c8 68 08                 a1 = a1 + s1
 16734: 97 b7 04                 a0 = a4 << 0x4
 16737: c8 67 07                 a0 = a0 + s1
 16740: 82 86                    s1 = u64 [a1]
 16742: 82 74                    t2 = u64 [a0]
 16744: 82 88 08                 a1 = u64 [a1 + 0x8]
 16747: 82 72 08                 t0 = u64 [a0 + 0x8]
 16750: db ca 09                 a2 = a3 if a5 != 0
 16753: d9 46 07                 a0 = s1 <s t2
 16756: d3 46 0a                 a3 = s1 ^ t2
 16759: d9 28 0c                 a5 = a1 <s t0
 16762: db a7 0c                 a5 = a0 if a3 != 0
 16765: c8 90 00                 ra = ra + a2
 16768: 51 0c 0e                 jump @1243 if a5 == 0
      :                          @1242
 16771: 95 00 01                 ra = ra + 0x1
 16774: 7b 1b 10                 u64 [sp + 0x10] = a4
 16777: 7b 13 18                 u64 [sp + 0x18] = t1
 16780: 28 0d                    jump @1244
      :                          @1243
 16782: 7b 1b 18                 u64 [sp + 0x18] = a4
 16785: 7b 13 10                 u64 [sp + 0x10] = t1
 16788: 64 82                    t0 = a1
 16790: 64 64                    t2 = s1
 16792: 01                       fallthrough
      :                          @1244
 16793: 95 33 01                 t1 = t1 + 0x1
 16796: 97 37 04                 a0 = t1 << 0x4
 16799: 82 18 70                 a1 = u64 [sp + 0x70]
 16802: c8 87 07                 a0 = a0 + a1
 16805: 82 76                    s1 = u64 [a0]
 16807: 82 78 08                 a1 = u64 [a0 + 0x8]
 16810: d9 46 07                 a0 = s1 <s t2
 16813: d3 46 0a                 a3 = s1 ^ t2
 16816: d9 28 0c                 a5 = a1 <s t0
 16819: db a7 0c                 a5 = a0 if a3 != 0
 16822: 7b 15 40                 u64 [sp + 0x40] = s0
 16825: 51 0c 0b                 jump @1246 if a5 == 0
      :                          @1245
 16828: 95 04 01                 t2 = ra + 0x1
 16831: 7b 18 10                 u64 [sp + 0x10] = a1
 16834: 28 0d                    jump @1247
      :                          @1246
 16836: 82 13 10                 t1 = u64 [sp + 0x10]
 16839: 7b 12 10                 u64 [sp + 0x10] = t0
 16842: 64 46                    s1 = t2
 16844: 64 04                    t2 = ra
 16846: 01                       fallthrough
      :                          @1247
 16847: 82 18 18                 a1 = u64 [sp + 0x18]
 16850: 97 87 04                 a0 = a1 << 0x4
 16853: 82 1c 70                 a5 = u64 [sp + 0x70]
 16856: c8 c7 07                 a0 = a0 + a5
 16859: 82 7a                    a3 = u64 [a0]
 16861: 82 10 48                 ra = u64 [sp + 0x48]
 16864: 82 1b 60                 a4 = u64 [sp + 0x60]
 16867: 82 15 28                 s0 = u64 [sp + 0x28]
 16870: da 5b 00                 ra = a4 if s0 == 0
 16873: 82 77 08                 a0 = u64 [a0 + 0x8]
 16876: 82 12 40                 t0 = u64 [sp + 0x40]
 16879: 82 1b 20                 a4 = u64 [sp + 0x20]
 16882: da 9b 02                 t0 = a4 if a2 == 0
 16885: d9 a6 09                 a2 = s1 <s a3
 16888: d3 6a 0a                 a3 = a3 ^ s1
 16891: 82 1b 10                 a4 = u64 [sp + 0x10]
 16894: d9 7b 07                 a0 = a4 <s a0
 16897: db a9 07                 a0 = a2 if a3 != 0
 16900: c8 74 04                 t2 = t2 + a0
 16903: db 78 03                 t1 = a1 if a0 != 0
 16906: 64 07                    a0 = ra
 16908: 82 10 68                 ra = u64 [sp + 0x68]
 16911: 01                       fallthrough
      :                          @1248
 16912: 97 28 04                 a1 = t0 << 0x4
 16915: c8 8c 0a                 a3 = a5 + a1
 16918: 97 78 04                 a1 = a0 << 0x4
 16921: c8 8c 0b                 a4 = a5 + a1
 16924: 82 a8                    a1 = u64 [a3]
 16926: 82 bc                    a5 = u64 [a4]
 16928: 82 aa 08                 a3 = u64 [a3 + 0x8]
 16931: 82 bb 08                 a4 = u64 [a4 + 0x8]
 16934: d9 c8 06                 s1 = a1 <s a5
 16937: d3 c8 09                 a2 = a1 ^ a5
 16940: d9 ba 05                 s0 = a3 <s a4
 16943: db 96 05                 s0 = s1 if a2 != 0
 16946: 51 05 0c                 jump @1250 if s0 == 0
      :                          @1249
 16949: 64 26                    s1 = t0
 16951: 95 44 01                 t2 = t2 + 0x1
 16954: 64 72                    t0 = a0
 16956: 28 09                    jump @1251
      :                          @1250
 16958: 64 76                    s1 = a0
 16960: 64 ab                    a4 = a3
 16962: 64 8c                    a5 = a1
 16964: 01                       fallthrough
      :                          @1251
 16965: 97 37 04                 a0 = t1 << 0x4
 16968: 82 18 70                 a1 = u64 [sp + 0x70]
 16971: c8 87 07                 a0 = a0 + a1
 16974: 82 78                    a1 = u64 [a0]
 16976: 82 77 08                 a0 = u64 [a0 + 0x8]
 16979: d9 c8 09                 a2 = a1 <s a5
 16982: d3 c8 0a                 a3 = a1 ^ a5
 16985: d9 b7 05                 s0 = a0 <s a4
 16988: db a9 05                 s0 = a2 if a3 != 0
 16991: 51 05 08                 jump @1253 if s0 == 0
      :                          @1252
 16994: 95 44 01                 t2 = t2 + 0x1
 16997: 28 09                    jump @1254
      :                          @1253
 16999: 64 23                    t1 = t0
 17001: 64 b7                    a0 = a4
 17003: 64 c8                    a1 = a5
 17005: 01                       fallthrough
      :                          @1254
 17006: 97 69 04                 a2 = s1 << 0x4
 17009: 82 15 70                 s0 = u64 [sp + 0x70]
 17012: c8 59 09                 a2 = a2 + s0
 17015: 82 9a                    a3 = u64 [a2]
 17017: 82 99 08                 a2 = u64 [a2 + 0x8]
 17020: d9 a8 0b                 a4 = a1 <s a3
 17023: d3 a8 08                 a1 = a1 ^ a3
 17026: d9 97 07                 a0 = a0 <s a2
 17029: db 8b 07                 a0 = a4 if a1 != 0
 17032: 51 07 4e                 jump @1260 if a0 == 0
      :                          @1255
 17035: 64 62                    t0 = s1
 17037: 33 07 01                 a0 = 0x1
 17040: 53 14 0b 4b              jump @1261 if t2 <u 11
      :                          @1256
 17044: 98 07 01                 a0 = ra >> 0x1
 17047: 95 58 08                 a1 = s0 + 0x8
 17050: 97 09 04                 a2 = ra << 0x4
 17053: c8 59 09                 a2 = a2 + s0
 17056: 95 99 f8                 a2 = a2 + 0xfffffffffffffff8
 17059: 01                       fallthrough
      :                          @1257
 17060: 82 9a f8                 a3 = u64 [a2 + 0xfffffffffffffff8]
 17063: 82 9b                    a4 = u64 [a2]
 17065: 82 8c f8                 a5 = u64 [a1 + 0xfffffffffffffff8]
 17068: 82 86                    s1 = u64 [a1]
 17070: 7b 8a f8                 u64 [a1 + 0xfffffffffffffff8] = a3
 17073: 7b 8b                    u64 [a1] = a4
 17075: 7b 9c f8                 u64 [a2 + 0xfffffffffffffff8] = a5
 17078: 7b 96                    u64 [a2] = s1
 17080: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 17083: 95 88 10                 a1 = a1 + 0x10
 17086: 95 99 f0                 a2 = a2 + 0xfffffffffffffff0
 17089: 52 07 e3                 jump @1257 if a0 != 0
      :                          @1258
 17092: 85 27 ff                 a0 = t0 ^ 0xffffffffffffffff
 17095: c8 70 02                 t0 = ra + a0
 17098: 82 18 50                 a1 = u64 [sp + 0x50]
 17101: 84 87 01                 a0 = a1 & 0x1
 17104: 51 07 18                 jump @1262 if a0 == 0
      :                          @1259
 17107: 28 41 01                 jump @1280
      :                          @1260
 17110: 64 32                    t0 = t1
 17112: 64 47                    a0 = t2
 17114: 01                       fallthrough
      :                          @1261
 17115: 88 77 01                 a0 = a0 <u 0x1
 17118: 82 18 50                 a1 = u64 [sp + 0x50]
 17121: d2 87 07                 a0 = a0 & a1
 17124: 52 07 30 01              jump @1280 if a0 != 0
      :                          @1262
 17128: 97 27 04                 a0 = t0 << 0x4
 17131: 82 18 38                 a1 = u64 [sp + 0x38]
 17134: 51 08 41 01              jump @1283 if a1 == 0
      :                          @1263
 17138: ae 02 81 05              jump @1336 if t0 >=u ra
      :                          @1264
 17142: c8 75 08                 a1 = s0 + a0
 17145: 82 1b 38                 a4 = u64 [sp + 0x38]
 17148: 82 b9                    a2 = u64 [a4]
 17150: 82 8a                    a3 = u64 [a1]
 17152: 82 bb 08                 a4 = u64 [a4 + 0x8]
 17155: 82 8c 08                 a5 = u64 [a1 + 0x8]
 17158: d9 a9 06                 s1 = a2 <s a3
 17161: d3 a9 09                 a2 = a2 ^ a3
 17164: d9 cb 0a                 a3 = a4 <s a5
 17167: db 96 0a                 a3 = s1 if a2 != 0
 17170: 52 0a 21 01              jump @1284 if a3 != 0
      :                          @1265
 17174: 82 59 08                 a2 = u64 [s0 + 0x8]
 17177: 82 5a                    a3 = u64 [s0]
 17179: 33 07                    a0 = 0
 17181: 7b 19 00 01              u64 [sp + 0x100] = a2
 17185: 7b 1a f8 00              u64 [sp + 0xf8] = a3
 17189: 82 89                    a2 = u64 [a1]
 17191: 82 8a 08                 a3 = u64 [a1 + 0x8]
 17194: 82 1b 00 01              a4 = u64 [sp + 0x100]
 17198: 82 1c f8 00              a5 = u64 [sp + 0xf8]
 17202: 7b 59                    u64 [s0] = a2
 17204: 7b 5a 08                 u64 [s0 + 0x8] = a3
 17207: 7b 8b 08                 u64 [a1 + 0x8] = a4
 17210: 7b 8c                    u64 [a1] = a5
 17212: 82 59                    a2 = u64 [s0]
 17214: 82 58 08                 a1 = u64 [s0 + 0x8]
 17217: 95 53 10                 t1 = s0 + 0x10
 17220: 95 0b ff                 a4 = ra + 0xffffffffffffffff
 17223: 95 52 18                 t0 = s0 + 0x18
 17226: 54 0b 31                 jump @1270 if a4 <=u 0
      :                          @1266
 17229: 97 7c 04                 a5 = a0 << 0x4
 17232: c8 2c 0c                 a5 = a5 + t0
 17235: 01                       fallthrough
      :                          @1267
 17236: 82 c6 f8                 s1 = u64 [a5 + 0xfffffffffffffff8]
 17239: 82 c5                    s0 = u64 [a5]
 17241: d9 69 0a                 a3 = a2 <s s1
 17244: d3 96 06                 s1 = s1 ^ a2
 17247: d9 58 05                 s0 = a1 <s s0
 17250: db 6a 05                 s0 = a3 if s1 != 0
 17253: 52 05 16                 jump @1270 if s0 != 0
      :                          @1268
 17256: 95 77 01                 a0 = a0 + 0x1
 17259: 95 cc 10                 a5 = a5 + 0x10
 17262: ab 7b e6                 jump @1267 if a4 != a0
      :                          @1269
 17265: 64 b7                    a0 = a4
 17267: 97 b6 04                 s1 = a4 << 0x4
 17270: c8 36 06                 s1 = s1 + t1
 17273: 28 09                    jump @1271
      :                          @1270
 17275: 97 b6 04                 s1 = a4 << 0x4
 17278: c8 36 06                 s1 = s1 + t1
 17281: 01                       fallthrough
      :                          @1271
 17282: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 17285: ae b7 53                 jump @1275 if a0 >=u a4
      :                          @1272
 17288: 82 6a f0                 a3 = u64 [s1 + 0xfffffffffffffff0]
 17291: 82 65 f8                 s0 = u64 [s1 + 0xfffffffffffffff8]
 17294: 95 6c f0                 a5 = s1 + 0xfffffffffffffff0
 17297: d9 a9 06                 s1 = a2 <s a3
 17300: d3 9a 0a                 a3 = a3 ^ a2
 17303: d9 58 05                 s0 = a1 <s s0
 17306: db a6 05                 s0 = s1 if a3 != 0
 17309: 64 c6                    s1 = a5
 17311: 52 05 e3                 jump @1271 if s0 != 0
      :                          @1273
 17314: 97 7a 04                 a3 = a0 << 0x4
 17317: c8 3a 0a                 a3 = a3 + t1
 17320: 82 a6 08                 s1 = u64 [a3 + 0x8]
 17323: 82 a5                    s0 = u64 [a3]
 17325: 7b 16 00 01              u64 [sp + 0x100] = s1
 17329: 7b 15 f8 00              u64 [sp + 0xf8] = s0
 17333: 82 c0                    ra = u64 [a5]
 17335: 82 c4 08                 t2 = u64 [a5 + 0x8]
 17338: 82 15 00 01              s0 = u64 [sp + 0x100]
 17342: 82 16 f8 00              s1 = u64 [sp + 0xf8]
 17346: 7b a0                    u64 [a3] = ra
 17348: 82 10 68                 ra = u64 [sp + 0x68]
 17351: 7b a4 08                 u64 [a3 + 0x8] = t2
 17354: 7b c5 08                 u64 [a5 + 0x8] = s0
 17357: 7b c6                    u64 [a5] = s1
 17359: 95 77 01                 a0 = a0 + 0x1
 17362: ac b7 7b ff              jump @1266 if a0 <u a4
      :                          @1274
 17366: 28 a5                    jump @1270
      :                          @1275
 17368: 95 77 01                 a0 = a0 + 0x1
 17371: 82 1c 70                 a5 = u64 [sp + 0x70]
 17374: 7b c9                    u64 [a5] = a2
 17376: 7b c8 08                 u64 [a5 + 0x8] = a1
 17379: ac 70 93 04              jump @1339 if ra <u a0
      :                          @1276
 17383: c9 70 00                 ra = ra - a0
 17386: 97 77 04                 a0 = a0 << 0x4
 17389: c8 7c 0c                 a5 = a5 + a0
 17392: 55 10 15 27 fc           jump @1225 if ra >=u 21
      :                          @1277
 17397: 28 e3 fb                 jump @1220
      :                          @1278
 17400: 64 c7                    a0 = a5
 17402: 64 08                    a1 = ra
 17404: 50 20 88 01 d1 d6        ra = 392, jump @477
      :                          @1279 [@dyn 196]
 17410: 82 1c 70                 a5 = u64 [sp + 0x70]
 17413: 82 10 68                 ra = u64 [sp + 0x68]
 17416: 82 17 30                 a0 = u64 [sp + 0x30]
 17419: 83 77 ff                 i32 a0 = a0 + 0xffffffffffffffff
 17422: 7b 17 30                 u64 [sp + 0x30] = a0
 17425: 28 1d fc                 jump @1227
      :                          @1280
 17428: 64 57                    a0 = s0
 17430: 64 08                    a1 = ra
 17432: 64 25                    s0 = t0
 17434: 50 20 8a 01 78 da        ra = 394, jump @562
      :                          @1281 [@dyn 197]
 17440: 64 52                    t0 = s0
 17442: 82 15 70                 s0 = u64 [sp + 0x70]
 17445: 82 10 68                 ra = u64 [sp + 0x68]
 17448: 51 07 c0 fe              jump @1262 if a0 == 0
      :                          @1282
 17452: 28 bf fb                 jump @1222
      :                          @1283
 17455: 82 18                    a1 = u64 [sp]
 17457: 28 08                    jump @1285
      :                          @1284
 17459: 7b 15 08                 u64 [sp + 0x8] = s0
 17462: 64 08                    a1 = ra
 17464: 01                       fallthrough
      :                          @1285
 17465: ae 82 3b 04              jump @1337 if t0 >=u a1
      :                          @1286
 17469: 82 1a 08                 a3 = u64 [sp + 0x8]
 17472: 82 ab 08                 a4 = u64 [a3 + 0x8]
 17475: 82 ac                    a5 = u64 [a3]
 17477: 33 09                    a2 = 0
 17479: c8 a7 07                 a0 = a0 + a3
 17482: 7b 1b 00 01              u64 [sp + 0x100] = a4
 17486: 7b 1c f8 00              u64 [sp + 0xf8] = a5
 17490: 82 7c                    a5 = u64 [a0]
 17492: 82 75 08                 s0 = u64 [a0 + 0x8]
 17495: 82 16 00 01              s1 = u64 [sp + 0x100]
 17499: 82 1b f8 00              a4 = u64 [sp + 0xf8]
 17503: 7b ac                    u64 [a3] = a5
 17505: 7b a5 08                 u64 [a3 + 0x8] = s0
 17508: 7b 76 08                 u64 [a0 + 0x8] = s1
 17511: 7b 7b                    u64 [a0] = a4
 17513: 82 a2                    t0 = u64 [a3]
 17515: 82 a0 08                 ra = u64 [a3 + 0x8]
 17518: 95 a4 10                 t2 = a3 + 0x10
 17521: 7b 18                    u64 [sp] = a1
 17523: 95 85 ff                 s0 = a1 + 0xffffffffffffffff
 17526: 95 ab 18                 a4 = a3 + 0x18
 17529: 01                       fallthrough
      :                          @1287
 17530: 82 b7 f8                 a0 = u64 [a4 + 0xfffffffffffffff8]
 17533: 82 bc                    a5 = u64 [a4]
 17535: d9 27 06                 s1 = a0 <s t0
 17538: d3 27 07                 a0 = a0 ^ t0
 17541: d9 0c 0c                 a5 = a5 <s ra
 17544: db 76 0c                 a5 = s1 if a0 != 0
 17547: 51 0c 0f                 jump @1290 if a5 == 0
      :                          @1288
 17550: 95 99 01                 a2 = a2 + 0x1
 17553: 95 bb 10                 a4 = a4 + 0x10
 17556: ab 95 e6                 jump @1287 if s0 != a2
      :                          @1289
 17559: 64 59                    a2 = s0
 17561: 01                       fallthrough
      :                          @1290
 17562: 82 17                    a0 = u64 [sp]
 17564: 97 77 04                 a0 = a0 << 0x4
 17567: 82 18 08                 a1 = u64 [sp + 0x8]
 17570: c8 87 07                 a0 = a0 + a1
 17573: 95 7b f8                 a4 = a0 + 0xfffffffffffffff8
 17576: 01                       fallthrough
      :                          @1291
 17577: 64 58                    a1 = s0
 17579: ae 59 1d                 jump @1293 if a2 >=u s0
      :                          @1292
 17582: 82 b7 f8                 a0 = u64 [a4 + 0xfffffffffffffff8]
 17585: 82 bc                    a5 = u64 [a4]
 17587: 95 85 ff                 s0 = a1 + 0xffffffffffffffff
 17590: d9 27 06                 s1 = a0 <s t0
 17593: d3 27 07                 a0 = a0 ^ t0
 17596: d9 0c 0c                 a5 = a5 <s ra
 17599: db 76 0c                 a5 = s1 if a0 != 0
 17602: 95 bb f0                 a4 = a4 + 0xfffffffffffffff0
 17605: 51 0c e4                 jump @1291 if a5 == 0
      :                          @1293
 17608: 64 97                    a0 = a2
 17610: ac 98 ad 03              jump @1340 if a1 <u a2
      :                          @1294
 17614: 33 0c                    a5 = 0
 17616: 33 05                    s0 = 0
 17618: 33 06                    s1 = 0
 17620: 33 03                    t1 = 0
 17622: 7b 17 28                 u64 [sp + 0x28] = a0
 17625: 97 77 04                 a0 = a0 << 0x4
 17628: c8 74 09                 a2 = t2 + a0
 17631: 7b 18 18                 u64 [sp + 0x18] = a1
 17634: 97 87 04                 a0 = a1 << 0x4
 17637: c8 74 04                 t2 = t2 + a0
 17640: 33 0a 80 00              a3 = 0x80
 17644: 7b 19 20                 u64 [sp + 0x20] = a2
 17647: 33 0b 80 00              a4 = 0x80
 17651: 7b 10 40                 u64 [sp + 0x40] = ra
 17654: 7b 12 58                 u64 [sp + 0x58] = t0
 17657: 28 4b                    jump @1297
      :                          @1295
 17659: 97 bb 04                 a4 = a4 << 0x4
 17662: c8 4b 0b                 a4 = a4 + t2
 17665: 82 17 50                 a0 = u64 [sp + 0x50]
 17668: 7b b7                    u64 [a4] = a0
 17670: 82 17 48                 a0 = u64 [sp + 0x48]
 17673: 7b b7 08                 u64 [a4 + 0x8] = a0
 17676: 95 cc 01                 a5 = a5 + 0x1
 17679: 95 66 01                 s1 = s1 + 0x1
 17682: 82 10 40                 ra = u64 [sp + 0x40]
 17685: 64 a9                    a2 = a3
 17687: 82 1a 70                 a3 = u64 [sp + 0x70]
 17690: 82 1b 60                 a4 = u64 [sp + 0x60]
 17693: 01                       fallthrough
      :                          @1296
 17694: d3 5c 07                 a0 = a5 ^ s0
 17697: 64 a8                    a1 = a3
 17699: 94 78                    a1 = 0 if a0 != 0
 17701: 97 88 04                 a1 = a1 << 0x4
 17704: c8 89 09                 a2 = a2 + a1
 17707: d3 36 07                 a0 = s1 ^ t1
 17710: 9a b8                    a1 = -a4
 17712: 94 78                    a1 = 0 if a0 != 0
 17714: 97 88 04                 a1 = a1 << 0x4
 17717: c8 84 04                 t2 = t2 + a1
 17720: 82 12 58                 t0 = u64 [sp + 0x58]
 17723: 82 17 68                 a0 = u64 [sp + 0x68]
 17726: 53 27 01 01 c8 01        jump @1321 if a0 <u 257
      :                          @1297
 17732: 7b 1a 70                 u64 [sp + 0x70] = a3
 17735: c9 94 07                 a0 = t2 - a2
 17738: 98 78 04                 a1 = a0 >> 0x4
 17741: 7b 18 68                 u64 [sp + 0x68] = a1
 17744: 55 28 01 01 c7 00        jump @1305 if a1 >=u 257
      :                          @1298
 17750: 7b 1b 60                 u64 [sp + 0x60] = a4
 17753: d8 5c 00                 ra = a5 <u s0
 17756: d8 36 0b                 a4 = s1 <u t1
 17759: d4 b0 02                 t0 = ra | a4
 17762: 51 02 be 00              jump @1307 if t0 == 0
      :                          @1299
 17766: 82 18 68                 a1 = u64 [sp + 0x68]
 17769: 95 87 80                 a0 = a1 + 0xffffffffffffff80
 17772: 82 1b 60                 a4 = u64 [sp + 0x60]
 17775: db 07 0b                 a4 = a0 if ra != 0
 17778: da 28 07                 a0 = a1 if t0 == 0
 17781: 82 1a 70                 a3 = u64 [sp + 0x70]
 17784: da 07 0a                 a3 = a0 if ra == 0
 17787: 82 10 40                 ra = u64 [sp + 0x40]
 17790: 82 12 58                 t0 = u64 [sp + 0x58]
 17793: aa 5c b2 00              jump @1308 if a5 == s0
      :                          @1300
 17797: aa 36 ff 00              jump @1312 if s1 == t1
      :                          @1301
 17801: c9 c5 07                 a0 = s0 - a5
 17804: c9 63 08                 a1 = t1 - s1
 17807: e6 87 02                 t0 = minu(a0, a1)
 17810: 51 02 8c                 jump @1296 if t0 == 0
      :                          @1302
 17813: 7b 1b 60                 u64 [sp + 0x60] = a4
 17816: 7b 1a 70                 u64 [sp + 0x70] = a3
 17819: 7c 60                    ra = u8 [s1]
 17821: 7c c7                    a0 = u8 [a5]
 17823: 85 0b ff                 a4 = ra ^ 0xffffffffffffffff
 17826: 97 b8 04                 a1 = a4 << 0x4
 17829: c8 48 08                 a1 = a1 + t2
 17832: 64 9a                    a3 = a2
 17834: 82 89                    a2 = u64 [a1]
 17836: 7b 19 48                 u64 [sp + 0x48] = a2
 17839: 97 77 04                 a0 = a0 << 0x4
 17842: c8 a7 07                 a0 = a0 + a3
 17845: 82 79                    a2 = u64 [a0]
 17847: 7b 19 50                 u64 [sp + 0x50] = a2
 17850: 82 19 48                 a2 = u64 [sp + 0x48]
 17853: 7b 79                    u64 [a0] = a2
 17855: 82 88 08                 a1 = u64 [a1 + 0x8]
 17858: 82 79 08                 a2 = u64 [a0 + 0x8]
 17861: 7b 19 48                 u64 [sp + 0x48] = a2
 17864: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 17867: 7b 78 08                 u64 [a0 + 0x8] = a1
 17870: 51 02 2d ff              jump @1295 if t0 == 0
      :                          @1303
 17874: 7c c7 01                 a0 = u8 [a5 + 0x1]
 17877: 97 77 04                 a0 = a0 << 0x4
 17880: c8 a7 07                 a0 = a0 + a3
 17883: 85 08 ff                 a1 = ra ^ 0xffffffffffffffff
 17886: 82 79 08                 a2 = u64 [a0 + 0x8]
 17889: 86 88 00 ff              a1 = a1 | 0xffffffffffffff00
 17893: 97 88 04                 a1 = a1 << 0x4
 17896: c8 48 08                 a1 = a1 + t2
 17899: 7b 89 08                 u64 [a1 + 0x8] = a2
 17902: 82 79                    a2 = u64 [a0]
 17904: 7b 89                    u64 [a1] = a2
 17906: 7c 60 01                 ra = u8 [s1 + 0x1]
 17909: 85 0b ff                 a4 = ra ^ 0xffffffffffffffff
 17912: 97 b8 04                 a1 = a4 << 0x4
 17915: c8 48 08                 a1 = a1 + t2
 17918: 82 89 08                 a2 = u64 [a1 + 0x8]
 17921: 7b 79 08                 u64 [a0 + 0x8] = a2
 17924: 82 88                    a1 = u64 [a1]
 17926: 95 cc 01                 a5 = a5 + 0x1
 17929: 95 66 01                 s1 = s1 + 0x1
 17932: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 17935: 7b 78                    u64 [a0] = a1
 17937: 52 02 c1                 jump @1303 if t0 != 0
      :                          @1304
 17940: 28 e7 fe                 jump @1295
      :                          @1305
 17943: 82 1a 70                 a3 = u64 [sp + 0x70]
 17946: ab 5c 6b ff              jump @1300 if a5 != s0
      :                          @1306
 17950: 28 15                    jump @1308
      :                          @1307
 17952: 98 7a 05                 a3 = a0 >> 0x5
 17955: 82 1b 68                 a4 = u64 [sp + 0x68]
 17958: c9 ab 0b                 a4 = a4 - a3
 17961: 82 10 40                 ra = u64 [sp + 0x40]
 17964: 82 12 58                 t0 = u64 [sp + 0x58]
 17967: ab 5c 56 ff              jump @1300 if a5 != s0
      :                          @1308
 17971: 51 0a af 00              jump @1317 if a3 == 0
      :                          @1309
 17975: 7b 1b 60                 u64 [sp + 0x60] = a4
 17978: 7b 14 48                 u64 [sp + 0x48] = t2
 17981: 33 07                    a0 = 0
 17983: 95 1c 78                 a5 = sp + 0x78
 17986: 7b 19 50                 u64 [sp + 0x50] = a2
 17989: 64 9b                    a4 = a2
 17991: 95 15 78                 s0 = sp + 0x78
 17994: 64 04                    t2 = ra
 17996: 64 a0                    ra = a3
 17998: 01                       fallthrough
      :                          @1310
 17999: 82 b8                    a1 = u64 [a4]
 18001: 95 7a 01                 a3 = a0 + 0x1
 18004: 82 b9 08                 a2 = u64 [a4 + 0x8]
 18007: 78 57                    u8 [s0] = a0
 18009: d9 28 07                 a0 = a1 <s t0
 18012: d3 28 08                 a1 = a1 ^ t0
 18015: d9 49 09                 a2 = a2 <s t2
 18018: db 87 09                 a2 = a0 if a1 != 0
 18021: 85 97 01                 a0 = a2 ^ 0x1
 18024: c8 75 05                 s0 = s0 + a0
 18027: 95 bb 10                 a4 = a4 + 0x10
 18030: 64 a7                    a0 = a3
 18032: ab a0 df                 jump @1310 if ra != a3
      :                          @1311
 18035: 82 19 50                 a2 = u64 [sp + 0x50]
 18038: 64 0a                    a3 = ra
 18040: 64 40                    ra = t2
 18042: 82 14 48                 t2 = u64 [sp + 0x48]
 18045: 82 1b 60                 a4 = u64 [sp + 0x60]
 18048: ab 36 09 ff              jump @1301 if s1 != t1
      :                          @1312
 18052: 51 0b 6a                 jump @1319 if a4 == 0
      :                          @1313
 18055: 7b 1a 70                 u64 [sp + 0x70] = a3
 18058: 7b 19 50                 u64 [sp + 0x50] = a2
 18061: 33 07                    a0 = 0
 18063: 64 48                    a1 = t2
 18065: 64 04                    t2 = ra
 18067: 64 b0                    ra = a4
 18069: 7b 18 48                 u64 [sp + 0x48] = a1
 18072: 95 8b f8                 a4 = a1 + 0xfffffffffffffff8
 18075: 95 16 f8 00              s1 = sp + 0xf8
 18079: 95 13 f8 00              t1 = sp + 0xf8
 18083: 01                       fallthrough
      :                          @1314
 18084: 82 b8 f8                 a1 = u64 [a4 + 0xfffffffffffffff8]
 18087: 95 79 01                 a2 = a0 + 0x1
 18090: 82 ba                    a3 = u64 [a4]
 18092: 78 37                    u8 [t1] = a0
 18094: d9 28 07                 a0 = a1 <s t0
 18097: d3 28 08                 a1 = a1 ^ t0
 18100: d9 4a 0a                 a3 = a3 <s t2
 18103: db 87 0a                 a3 = a0 if a1 != 0
 18106: c8 a3 03                 t1 = t1 + a3
 18109: 95 bb f0                 a4 = a4 + 0xfffffffffffffff0
 18112: 64 97                    a0 = a2
 18114: ab 90 e2                 jump @1314 if ra != a2
      :                          @1315
 18117: 82 19 50                 a2 = u64 [sp + 0x50]
 18120: 82 1a 70                 a3 = u64 [sp + 0x70]
 18123: 64 0b                    a4 = ra
 18125: 64 40                    ra = t2
 18127: 82 14 48                 t2 = u64 [sp + 0x48]
 18130: c9 c5 07                 a0 = s0 - a5
 18133: c9 63 08                 a1 = t1 - s1
 18136: e6 87 02                 t0 = minu(a0, a1)
 18139: 52 02 ba fe              jump @1302 if t0 != 0
      :                          @1316
 18143: 28 3f fe                 jump @1296
      :                          @1317
 18146: 95 1c 78                 a5 = sp + 0x78
 18149: 95 15 78                 s0 = sp + 0x78
 18152: ab 36 a1 fe              jump @1301 if s1 != t1
      :                          @1318
 18156: 28 98                    jump @1312
      :                          @1319
 18158: 95 16 f8 00              s1 = sp + 0xf8
 18162: 95 13 f8 00              t1 = sp + 0xf8
 18166: c9 c5 07                 a0 = s0 - a5
 18169: c9 63 08                 a1 = t1 - s1
 18172: e6 87 02                 t0 = minu(a0, a1)
 18175: 52 02 96 fe              jump @1302 if t0 != 0
      :                          @1320
 18179: 28 1b fe                 jump @1296
      :                          @1321
 18182: ae 5c 45                 jump @1324 if a5 >=u s0
      :                          @1322
 18185: 7c 57 ff                 a0 = u8 [s0 + 0xffffffffffffffff]
 18188: 97 77 04                 a0 = a0 << 0x4
 18191: c8 97 07                 a0 = a0 + a2
 18194: 82 78 08                 a1 = u64 [a0 + 0x8]
 18197: 64 93                    t1 = a2
 18199: 82 79                    a2 = u64 [a0]
 18201: 95 5a ff                 a3 = s0 + 0xffffffffffffffff
 18204: 82 4b f0                 a4 = u64 [t2 + 0xfffffffffffffff0]
 18207: 7b 18 80 01              u64 [sp + 0x180] = a1
 18211: 7b 19 78 01              u64 [sp + 0x178] = a2
 18215: 82 48 f8                 a1 = u64 [t2 + 0xfffffffffffffff8]
 18218: 7b 7b                    u64 [a0] = a4
 18220: 82 19 80 01              a2 = u64 [sp + 0x180]
 18224: 82 16 78 01              s1 = u64 [sp + 0x178]
 18228: 7b 78 08                 u64 [a0 + 0x8] = a1
 18231: 95 4b f0                 a4 = t2 + 0xfffffffffffffff0
 18234: 7b 49 f8                 u64 [t2 + 0xfffffffffffffff8] = a2
 18237: 64 39                    a2 = t1
 18239: 7b 46 f0                 u64 [t2 + 0xfffffffffffffff0] = s1
 18242: 64 b4                    t2 = a4
 18244: 64 a5                    s0 = a3
 18246: ac ac c3                 jump @1322 if a5 <u a3
      :                          @1323
 18249: 28 42                    jump @1326
      :                          @1324
 18251: 64 9b                    a4 = a2
 18253: ae 36 3e                 jump @1326 if s1 >=u t1
      :                          @1325
 18256: 7c 37 ff                 a0 = u8 [t1 + 0xffffffffffffffff]
 18259: 85 77 ff                 a0 = a0 ^ 0xffffffffffffffff
 18262: 97 77 04                 a0 = a0 << 0x4
 18265: 82 b8 08                 a1 = u64 [a4 + 0x8]
 18268: 82 b9                    a2 = u64 [a4]
 18270: c8 47 07                 a0 = a0 + t2
 18273: 82 7a                    a3 = u64 [a0]
 18275: 7b 18 80 01              u64 [sp + 0x180] = a1
 18279: 7b 19 78 01              u64 [sp + 0x178] = a2
 18283: 82 78 08                 a1 = u64 [a0 + 0x8]
 18286: 7b ba                    u64 [a4] = a3
 18288: 82 19 80 01              a2 = u64 [sp + 0x180]
 18292: 82 1a 78 01              a3 = u64 [sp + 0x178]
 18296: 7b b8 08                 u64 [a4 + 0x8] = a1
 18299: 95 38 ff                 a1 = t1 + 0xffffffffffffffff
 18302: 7b 79 08                 u64 [a0 + 0x8] = a2
 18305: 7b 7a                    u64 [a0] = a3
 18307: 95 bb 10                 a4 = a4 + 0x10
 18310: 64 83                    t1 = a1
 18312: ac 86 c8                 jump @1325 if s1 <u a1
      :                          @1326
 18315: 82 17 20                 a0 = u64 [sp + 0x20]
 18318: c9 7b 07                 a0 = a4 - a0
 18321: 98 77 04                 a0 = a0 >> 0x4
 18324: 82 18 28                 a1 = u64 [sp + 0x28]
 18327: c8 87 05                 s0 = a0 + a1
 18330: 82 17 08                 a0 = u64 [sp + 0x8]
 18333: 7b 72                    u64 [a0] = t0
 18335: 7b 70 08                 u64 [a0 + 0x8] = ra
 18338: 82 18                    a1 = u64 [sp]
 18340: ae 85 d1 00              jump @1338 if s0 >=u a1
      :                          @1327
 18344: 82 17 08                 a0 = u64 [sp + 0x8]
 18347: 82 77 08                 a0 = u64 [a0 + 0x8]
 18350: 82 19 08                 a2 = u64 [sp + 0x8]
 18353: 82 99                    a2 = u64 [a2]
 18355: 97 56 04                 s1 = s0 << 0x4
 18358: 82 1a 08                 a3 = u64 [sp + 0x8]
 18361: c8 a6 06                 s1 = s1 + a3
 18364: 7b 17 00 01              u64 [sp + 0x100] = a0
 18368: 7b 19 f8 00              u64 [sp + 0xf8] = a2
 18372: 82 67                    a0 = u64 [s1]
 18374: 82 6b 08                 a4 = u64 [s1 + 0x8]
 18377: 82 19 00 01              a2 = u64 [sp + 0x100]
 18381: 82 1a f8 00              a3 = u64 [sp + 0xf8]
 18385: 82 1c 08                 a5 = u64 [sp + 0x8]
 18388: 7b c7                    u64 [a5] = a0
 18390: 82 17 08                 a0 = u64 [sp + 0x8]
 18393: 7b 7b 08                 u64 [a0 + 0x8] = a4
 18396: 7b 69 08                 u64 [s1 + 0x8] = a2
 18399: 7b 6a                    u64 [s1] = a3
 18401: c9 58 08                 a1 = a1 - s0
 18404: 7b 18 70                 u64 [sp + 0x70] = a1
 18407: 95 8b ff                 a4 = a1 + 0xffffffffffffffff
 18410: 95 68 10                 a1 = s1 + 0x10
 18413: ae b5 22                 jump @1330 if s0 >=u a4
      :                          @1328
 18416: 7b 18 60                 u64 [sp + 0x60] = a1
 18419: 64 58                    a1 = s0
 18421: 82 19 38                 a2 = u64 [sp + 0x38]
 18424: 82 1a 30                 a3 = u64 [sp + 0x30]
 18427: 7b 1b 68                 u64 [sp + 0x68] = a4
 18430: 50 20 8c 01 b9 f7        ra = 396, jump @1218
      :                          @1329 [@dyn 198]
 18436: 82 10 68                 ra = u64 [sp + 0x68]
 18439: 7b 16 38                 u64 [sp + 0x38] = s1
 18442: 82 1c 60                 a5 = u64 [sp + 0x60]
 18445: 28 1a                    jump @1332
      :                          @1330
 18447: 7b 17 08                 u64 [sp + 0x8] = a0
 18450: 64 87                    a0 = a1
 18452: 64 b8                    a1 = a4
 18454: 64 69                    a2 = s1
 18456: 82 1a 30                 a3 = u64 [sp + 0x30]
 18459: 50 20 8e 01 9c f7        ra = 398, jump @1218
      :                          @1331 [@dyn 199]
 18465: 82 1c 08                 a5 = u64 [sp + 0x8]
 18468: 64 50                    ra = s0
 18470: 01                       fallthrough
      :                          @1332
 18471: 82 17 28                 a0 = u64 [sp + 0x28]
 18474: 82 18 18                 a1 = u64 [sp + 0x18]
 18477: d8 87 07                 a0 = a0 <u a1
 18480: 85 77 01                 a0 = a0 ^ 0x1
 18483: 82 18 70                 a1 = u64 [sp + 0x70]
 18486: e6 85 08                 a1 = minu(s0, a1)
 18489: 82 19                    a2 = u64 [sp]
 18491: 98 99 03                 a2 = a2 >> 0x3
 18494: d8 98 08                 a1 = a1 <u a2
 18497: 85 88 01                 a1 = a1 ^ 0x1
 18500: 7b 18 58                 u64 [sp + 0x58] = a1
 18503: 7b 10                    u64 [sp] = ra
 18505: 7b 1c 08                 u64 [sp + 0x8] = a5
 18508: 33 08 15                 a1 = 0x15
 18511: ae 80 bb f7              jump @1224 if ra >=u a1
      :                          @1333
 18515: 28 85 f7                 jump @1220
      :                          @1334
 18518: 64 c7                    a0 = a5
 18520: 64 08                    a1 = ra
 18522: 33 00 90 01              ra = 0x190
 18526: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 18529: 7b 10 20                 u64 [sp + 0x20] = ra
 18532: 7b 15 18                 u64 [sp + 0x18] = s0
 18535: 7b 16 10                 u64 [sp + 0x10] = s1
 18538: 98 82 01                 t0 = a1 >> 0x1
 18541: 28 fc 02                 jump @1427
      :                          @1335 [@dyn 200]
 18544: 28 7b f7                 jump @1222
      :                          @1336
 18547: 00                       trap
      :                          @1337
 18548: 00                       trap
      :                          @1338
 18549: 00                       trap
      :                          @1339
 18550: 00                       trap
      :                          @1340
 18551: 00                       trap
      :                          @1341
 18552: 51 02 81 00              jump @1352 if t0 == 0
      :                          @1342
 18556: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 18559: 97 29 01                 a2 = t0 << 0x1
 18562: 95 9c 01                 a5 = a2 + 0x1
 18565: ae 8c f3                 jump @1341 if a5 >=u a1
      :                          @1343
 18568: 64 2a                    a3 = t0
 18570: 01                       fallthrough
      :                          @1344
 18571: 95 99 02                 a2 = a2 + 0x2
 18574: ae 89 21                 jump @1347 if a2 >=u a1
      :                          @1345
 18577: 97 cb 04                 a4 = a5 << 0x4
 18580: c8 7b 0b                 a4 = a4 + a0
 18583: 82 bb 08                 a4 = u64 [a4 + 0x8]
 18586: 97 99 04                 a2 = a2 << 0x4
 18589: c8 79 09                 a2 = a2 + a0
 18592: 82 99 08                 a2 = u64 [a2 + 0x8]
 18595: d8 9b 0b                 a4 = a4 <u a2
 18598: c8 cb 0b                 a4 = a4 + a5
 18601: ac 8a 0c                 jump @1348 if a3 <u a1
      :                          @1346
 18604: 28 02 01                 jump @1367
      :                          @1347
 18607: 64 cb                    a4 = a5
 18609: ae 8a fd 00              jump @1367 if a3 >=u a1
      :                          @1348
 18613: ae 8b fa 00              jump @1368 if a4 >=u a1
      :                          @1349
 18617: 97 a9 04                 a2 = a3 << 0x4
 18620: c8 79 09                 a2 = a2 + a0
 18623: 97 ba 04                 a3 = a4 << 0x4
 18626: c8 7a 0a                 a3 = a3 + a0
 18629: 82 93 08                 t1 = u64 [a2 + 0x8]
 18632: 82 ac 08                 a5 = u64 [a3 + 0x8]
 18635: ae c3 ad                 jump @1341 if t1 >=u a5
      :                          @1350
 18638: 82 9c 08                 a5 = u64 [a2 + 0x8]
 18641: 82 93                    t1 = u64 [a2]
 18643: 7b 1c 08                 u64 [sp + 0x8] = a5
 18646: 82 a5                    s0 = u64 [a3]
 18648: 82 a4 08                 t2 = u64 [a3 + 0x8]
 18651: 7b 13                    u64 [sp] = t1
 18653: 82 1c 08                 a5 = u64 [sp + 0x8]
 18656: 7b 95                    u64 [a2] = s0
 18658: 7b 94 08                 u64 [a2 + 0x8] = t2
 18661: 82 15                    s0 = u64 [sp]
 18663: 7b ac 08                 u64 [a3 + 0x8] = a5
 18666: 97 b9 01                 a2 = a4 << 0x1
 18669: 95 9c 01                 a5 = a2 + 0x1
 18672: 7b a5                    u64 [a3] = s0
 18674: 64 ba                    a3 = a4
 18676: ac 8c 97                 jump @1344 if a5 <u a1
      :                          @1351
 18679: 28 81                    jump @1341
      :                          @1352
 18681: 33 02 02                 t0 = 0x2
 18684: 64 83                    t1 = a1
 18686: 01                       fallthrough
      :                          @1353
 18687: 95 33 ff                 t1 = t1 + 0xffffffffffffffff
 18690: ae 83 ae 00              jump @1369 if t1 >=u a1
      :                          @1354
 18694: 82 79 08                 a2 = u64 [a0 + 0x8]
 18697: 82 7a                    a3 = u64 [a0]
 18699: 97 3b 04                 a4 = t1 << 0x4
 18702: c8 7b 0b                 a4 = a4 + a0
 18705: 7b 19 08                 u64 [sp + 0x8] = a2
 18708: 7b 1a                    u64 [sp] = a3
 18710: 82 b9                    a2 = u64 [a4]
 18712: 82 ba 08                 a3 = u64 [a4 + 0x8]
 18715: 82 1c 08                 a5 = u64 [sp + 0x8]
 18718: 82 15                    s0 = u64 [sp]
 18720: 7b 79                    u64 [a0] = a2
 18722: 7b 7a 08                 u64 [a0 + 0x8] = a3
 18725: 7b bc 08                 u64 [a4 + 0x8] = a5
 18728: 7b b5                    u64 [a4] = s0
 18730: ac 23 77                 jump @1364 if t1 <u t0
      :                          @1355
 18733: 33 0a                    a3 = 0
 18735: 33 0b                    a4 = 0
 18737: 33 0c 01                 a5 = 0x1
 18740: 01                       fallthrough
      :                          @1356
 18741: 95 aa 02                 a3 = a3 + 0x2
 18744: ae 3a 20                 jump @1359 if a3 >=u t1
      :                          @1357
 18747: 97 c9 04                 a2 = a5 << 0x4
 18750: c8 79 09                 a2 = a2 + a0
 18753: 82 99 08                 a2 = u64 [a2 + 0x8]
 18756: 97 aa 04                 a3 = a3 << 0x4
 18759: c8 7a 0a                 a3 = a3 + a0
 18762: 82 aa 08                 a3 = u64 [a3 + 0x8]
 18765: d8 a9 09                 a2 = a2 <u a3
 18768: c8 c9 09                 a2 = a2 + a5
 18771: ac 3b 0a                 jump @1360 if a4 <u t1
      :                          @1358
 18774: 28 56                    jump @1365
      :                          @1359
 18776: 64 c9                    a2 = a5
 18778: ae 3b 52                 jump @1365 if a4 >=u t1
      :                          @1360
 18781: ae 39 50                 jump @1366 if a2 >=u t1
      :                          @1361
 18784: 97 ba 04                 a3 = a4 << 0x4
 18787: c8 7a 0a                 a3 = a3 + a0
 18790: 97 9b 04                 a4 = a2 << 0x4
 18793: c8 7b 0b                 a4 = a4 + a0
 18796: 82 ac 08                 a5 = u64 [a3 + 0x8]
 18799: 82 b5 08                 s0 = u64 [a4 + 0x8]
 18802: ae 5c 8d                 jump @1353 if a5 >=u s0
      :                          @1362
 18805: 82 ac 08                 a5 = u64 [a3 + 0x8]
 18808: 82 a4                    t2 = u64 [a3]
 18810: 7b 1c 08                 u64 [sp + 0x8] = a5
 18813: 82 b6                    s1 = u64 [a4]
 18815: 82 b5 08                 s0 = u64 [a4 + 0x8]
 18818: 7b 14                    u64 [sp] = t2
 18820: 82 1c 08                 a5 = u64 [sp + 0x8]
 18823: 7b a6                    u64 [a3] = s1
 18825: 7b a5 08                 u64 [a3 + 0x8] = s0
 18828: 82 16                    s1 = u64 [sp]
 18830: 7b bc 08                 u64 [a4 + 0x8] = a5
 18833: 97 9a 01                 a3 = a2 << 0x1
 18836: 95 ac 01                 a5 = a3 + 0x1
 18839: 7b b6                    u64 [a4] = s1
 18841: 64 9b                    a4 = a2
 18843: ac 3c 9a                 jump @1356 if a5 <u t1
      :                          @1363
 18846: 28 61 ff                 jump @1353
      :                          @1364
 18849: 82 15 18                 s0 = u64 [sp + 0x18]
 18852: 82 16 10                 s1 = u64 [sp + 0x10]
 18855: 95 11 20                 sp = sp + 0x20
 18858: 32 00                    ret
      :                          @1365
 18860: 00                       trap
      :                          @1366
 18861: 00                       trap
      :                          @1367
 18862: 00                       trap
      :                          @1368
 18863: 00                       trap
      :                          @1369
 18864: 00                       trap
      :                          @1370
 18865: 51 02 62                 jump @1381 if t0 == 0
      :                          @1371
 18868: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 18871: 97 2a 01                 a3 = t0 << 0x1
 18874: 95 ac 01                 a5 = a3 + 0x1
 18877: ae 8c f4                 jump @1370 if a5 >=u a1
      :                          @1372
 18880: 64 2b                    a4 = t0
 18882: 01                       fallthrough
      :                          @1373
 18883: 95 aa 02                 a3 = a3 + 0x2
 18886: ae 8a 1f                 jump @1376 if a3 >=u a1
      :                          @1374
 18889: 97 c9 03                 a2 = a5 << 0x3
 18892: c8 79 09                 a2 = a2 + a0
 18895: 97 aa 03                 a3 = a3 << 0x3
 18898: c8 7a 0a                 a3 = a3 + a0
 18901: 82 99                    a2 = u64 [a2]
 18903: 82 aa                    a3 = u64 [a3]
 18905: d9 a9 03                 t1 = a2 <s a3
 18908: c8 c3 03                 t1 = t1 + a5
 18911: ac 8b 0c                 jump @1377 if a4 <u a1
      :                          @1375
 18914: 28 a7 00                 jump @1396
      :                          @1376
 18917: 64 c3                    t1 = a5
 18919: ae 8b a2 00              jump @1396 if a4 >=u a1
      :                          @1377
 18923: ae 83 9f 00              jump @1397 if t1 >=u a1
      :                          @1378
 18927: 97 ba 03                 a3 = a4 << 0x3
 18930: c8 7a 0a                 a3 = a3 + a0
 18933: 97 3b 03                 a4 = t1 << 0x3
 18936: c8 7b 0b                 a4 = a4 + a0
 18939: 82 a9                    a2 = u64 [a3]
 18941: 82 bc                    a5 = u64 [a4]
 18943: af c9 b2                 jump @1370 if a2 >=s a5
      :                          @1379
 18946: 7b ac                    u64 [a3] = a5
 18948: 97 3a 01                 a3 = t1 << 0x1
 18951: 95 ac 01                 a5 = a3 + 0x1
 18954: 7b b9                    u64 [a4] = a2
 18956: 64 3b                    a4 = t1
 18958: ac 8c b5                 jump @1373 if a5 <u a1
      :                          @1380
 18961: 28 a0                    jump @1370
      :                          @1381
 18963: 33 02 02                 t0 = 0x2
 18966: 64 83                    t1 = a1
 18968: 01                       fallthrough
      :                          @1382
 18969: 95 33 ff                 t1 = t1 + 0xffffffffffffffff
 18972: ae 83 6e                 jump @1397 if t1 >=u a1
      :                          @1383
 18975: 97 39 03                 a2 = t1 << 0x3
 18978: c8 79 09                 a2 = a2 + a0
 18981: 82 9a                    a3 = u64 [a2]
 18983: 82 7b                    a4 = u64 [a0]
 18985: 7b 7a                    u64 [a0] = a3
 18987: 7b 9b                    u64 [a2] = a4
 18989: ac 23 58                 jump @1393 if t1 <u t0
      :                          @1384
 18992: 33 0a                    a3 = 0
 18994: 33 09                    a2 = 0
 18996: 33 0b 01                 a4 = 0x1
 18999: 01                       fallthrough
      :                          @1385
 19000: 95 aa 02                 a3 = a3 + 0x2
 19003: ae 3a 1e                 jump @1388 if a3 >=u t1
      :                          @1386
 19006: 97 bc 03                 a5 = a4 << 0x3
 19009: c8 7c 0c                 a5 = a5 + a0
 19012: 97 aa 03                 a3 = a3 << 0x3
 19015: c8 7a 0a                 a3 = a3 + a0
 19018: 82 cc                    a5 = u64 [a5]
 19020: 82 aa                    a3 = u64 [a3]
 19022: d9 ac 04                 t2 = a5 <s a3
 19025: c8 b4 04                 t2 = t2 + a4
 19028: ac 39 0a                 jump @1389 if a2 <u t1
      :                          @1387
 19031: 28 30                    jump @1394
      :                          @1388
 19033: 64 b4                    t2 = a4
 19035: ae 39 2c                 jump @1394 if a2 >=u t1
      :                          @1389
 19038: ae 34 2a                 jump @1395 if t2 >=u t1
      :                          @1390
 19041: 97 99 03                 a2 = a2 << 0x3
 19044: c8 97 0a                 a3 = a0 + a2
 19047: 97 49 03                 a2 = t2 << 0x3
 19050: c8 79 09                 a2 = a2 + a0
 19053: 82 ac                    a5 = u64 [a3]
 19055: 82 9b                    a4 = u64 [a2]
 19057: af bc a8                 jump @1382 if a5 >=s a4
      :                          @1391
 19060: 7b ab                    u64 [a3] = a4
 19062: 97 4a 01                 a3 = t2 << 0x1
 19065: 95 ab 01                 a4 = a3 + 0x1
 19068: 7b 9c                    u64 [a2] = a5
 19070: 64 49                    a2 = t2
 19072: ac 3b b8                 jump @1385 if a4 <u t1
      :                          @1392
 19075: 28 96                    jump @1382
      :                          @1393
 19077: 32 00                    ret
      :                          @1394
 19079: 00                       trap
      :                          @1395
 19080: 00                       trap
      :                          @1396
 19081: 00                       trap
      :                          @1397
 19082: 00                       trap
      :                          @1398
 19083: 51 02 62                 jump @1409 if t0 == 0
      :                          @1399
 19086: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 19089: 97 2a 01                 a3 = t0 << 0x1
 19092: 95 ac 01                 a5 = a3 + 0x1
 19095: ae 8c f4                 jump @1398 if a5 >=u a1
      :                          @1400
 19098: 64 2b                    a4 = t0
 19100: 01                       fallthrough
      :                          @1401
 19101: 95 aa 02                 a3 = a3 + 0x2
 19104: ae 8a 1f                 jump @1404 if a3 >=u a1
      :                          @1402
 19107: 97 c9 03                 a2 = a5 << 0x3
 19110: c8 79 09                 a2 = a2 + a0
 19113: 97 aa 03                 a3 = a3 << 0x3
 19116: c8 7a 0a                 a3 = a3 + a0
 19119: 82 99                    a2 = u64 [a2]
 19121: 82 aa                    a3 = u64 [a3]
 19123: d8 9a 03                 t1 = a3 <u a2
 19126: c8 c3 03                 t1 = t1 + a5
 19129: ac 8b 0c                 jump @1405 if a4 <u a1
      :                          @1403
 19132: 28 a7 00                 jump @1424
      :                          @1404
 19135: 64 c3                    t1 = a5
 19137: ae 8b a2 00              jump @1424 if a4 >=u a1
      :                          @1405
 19141: ae 83 9f 00              jump @1425 if t1 >=u a1
      :                          @1406
 19145: 97 ba 03                 a3 = a4 << 0x3
 19148: c8 7a 0a                 a3 = a3 + a0
 19151: 97 3b 03                 a4 = t1 << 0x3
 19154: c8 7b 0b                 a4 = a4 + a0
 19157: 82 a9                    a2 = u64 [a3]
 19159: 82 bc                    a5 = u64 [a4]
 19161: ae 9c b2                 jump @1398 if a5 >=u a2
      :                          @1407
 19164: 7b ac                    u64 [a3] = a5
 19166: 97 3a 01                 a3 = t1 << 0x1
 19169: 95 ac 01                 a5 = a3 + 0x1
 19172: 7b b9                    u64 [a4] = a2
 19174: 64 3b                    a4 = t1
 19176: ac 8c b5                 jump @1401 if a5 <u a1
      :                          @1408
 19179: 28 a0                    jump @1398
      :                          @1409
 19181: 33 02 02                 t0 = 0x2
 19184: 64 83                    t1 = a1
 19186: 01                       fallthrough
      :                          @1410
 19187: 95 33 ff                 t1 = t1 + 0xffffffffffffffff
 19190: ae 83 6e                 jump @1425 if t1 >=u a1
      :                          @1411
 19193: 97 39 03                 a2 = t1 << 0x3
 19196: c8 79 09                 a2 = a2 + a0
 19199: 82 9a                    a3 = u64 [a2]
 19201: 82 7b                    a4 = u64 [a0]
 19203: 7b 7a                    u64 [a0] = a3
 19205: 7b 9b                    u64 [a2] = a4
 19207: ac 23 58                 jump @1421 if t1 <u t0
      :                          @1412
 19210: 33 0a                    a3 = 0
 19212: 33 09                    a2 = 0
 19214: 33 0b 01                 a4 = 0x1
 19217: 01                       fallthrough
      :                          @1413
 19218: 95 aa 02                 a3 = a3 + 0x2
 19221: ae 3a 1e                 jump @1416 if a3 >=u t1
      :                          @1414
 19224: 97 bc 03                 a5 = a4 << 0x3
 19227: c8 7c 0c                 a5 = a5 + a0
 19230: 97 aa 03                 a3 = a3 << 0x3
 19233: c8 7a 0a                 a3 = a3 + a0
 19236: 82 cc                    a5 = u64 [a5]
 19238: 82 aa                    a3 = u64 [a3]
 19240: d8 ca 04                 t2 = a3 <u a5
 19243: c8 b4 04                 t2 = t2 + a4
 19246: ac 39 0a                 jump @1417 if a2 <u t1
      :                          @1415
 19249: 28 30                    jump @1422
      :                          @1416
 19251: 64 b4                    t2 = a4
 19253: ae 39 2c                 jump @1422 if a2 >=u t1
      :                          @1417
 19256: ae 34 2a                 jump @1423 if t2 >=u t1
      :                          @1418
 19259: 97 99 03                 a2 = a2 << 0x3
 19262: c8 97 0a                 a3 = a0 + a2
 19265: 97 49 03                 a2 = t2 << 0x3
 19268: c8 79 09                 a2 = a2 + a0
 19271: 82 ac                    a5 = u64 [a3]
 19273: 82 9b                    a4 = u64 [a2]
 19275: ae cb a8                 jump @1410 if a4 >=u a5
      :                          @1419
 19278: 7b ab                    u64 [a3] = a4
 19280: 97 4a 01                 a3 = t2 << 0x1
 19283: 95 ab 01                 a4 = a3 + 0x1
 19286: 7b 9c                    u64 [a2] = a5
 19288: 64 49                    a2 = t2
 19290: ac 3b b8                 jump @1413 if a4 <u t1
      :                          @1420
 19293: 28 96                    jump @1410
      :                          @1421
 19295: 32 00                    ret
      :                          @1422
 19297: 00                       trap
      :                          @1423
 19298: 00                       trap
      :                          @1424
 19299: 00                       trap
      :                          @1425
 19300: 00                       trap
      :                          @1426
 19301: 51 02 a0 00              jump @1437 if t0 == 0
      :                          @1427
 19305: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 19308: 97 29 01                 a2 = t0 << 0x1
 19311: 95 9c 01                 a5 = a2 + 0x1
 19314: ae 8c f3                 jump @1426 if a5 >=u a1
      :                          @1428
 19317: 64 2a                    a3 = t0
 19319: 01                       fallthrough
      :                          @1429
 19320: 95 99 02                 a2 = a2 + 0x2
 19323: ae 89 2e                 jump @1432 if a2 >=u a1
      :                          @1430
 19326: 97 cb 04                 a4 = a5 << 0x4
 19329: c8 b7 03                 t1 = a0 + a4
 19332: 97 99 04                 a2 = a2 << 0x4
 19335: c8 79 09                 a2 = a2 + a0
 19338: 82 34                    t2 = u64 [t1]
 19340: 82 9b                    a4 = u64 [a2]
 19342: 82 33 08                 t1 = u64 [t1 + 0x8]
 19345: 82 99 08                 a2 = u64 [a2 + 0x8]
 19348: d9 b4 05                 s0 = t2 <s a4
 19351: d3 b4 0b                 a4 = t2 ^ a4
 19354: d9 93 09                 a2 = t1 <s a2
 19357: db b5 09                 a2 = s0 if a4 != 0
 19360: c8 9c 04                 t2 = a5 + a2
 19363: ac 8a 0c                 jump @1433 if a3 <u a1
      :                          @1431
 19366: 28 37 01                 jump @1452
      :                          @1432
 19369: 64 c4                    t2 = a5
 19371: ae 8a 32 01              jump @1452 if a3 >=u a1
      :                          @1433
 19375: ae 84 2f 01              jump @1453 if t2 >=u a1
      :                          @1434
 19379: 97 aa 04                 a3 = a3 << 0x4
 19382: c8 a7 0c                 a5 = a0 + a3
 19385: 97 4a 04                 a3 = t2 << 0x4
 19388: c8 7a 0a                 a3 = a3 + a0
 19391: 82 c9                    a2 = u64 [a5]
 19393: 82 a5                    s0 = u64 [a3]
 19395: 82 c3 08                 t1 = u64 [a5 + 0x8]
 19398: 82 ab 08                 a4 = u64 [a3 + 0x8]
 19401: d9 59 06                 s1 = a2 <s s0
 19404: d3 59 09                 a2 = a2 ^ s0
 19407: d9 b3 0b                 a4 = t1 <s a4
 19410: db 96 0b                 a4 = s1 if a2 != 0
 19413: 51 0b 90                 jump @1426 if a4 == 0
      :                          @1435
 19416: 82 c9 08                 a2 = u64 [a5 + 0x8]
 19419: 82 cb                    a4 = u64 [a5]
 19421: 7b 19 08                 u64 [sp + 0x8] = a2
 19424: 82 a9                    a2 = u64 [a3]
 19426: 82 a6 08                 s1 = u64 [a3 + 0x8]
 19429: 7b 1b                    u64 [sp] = a4
 19431: 82 1b 08                 a4 = u64 [sp + 0x8]
 19434: 7b c9                    u64 [a5] = a2
 19436: 7b c6 08                 u64 [a5 + 0x8] = s1
 19439: 82 16                    s1 = u64 [sp]
 19441: 7b ab 08                 u64 [a3 + 0x8] = a4
 19444: 97 49 01                 a2 = t2 << 0x1
 19447: 95 9c 01                 a5 = a2 + 0x1
 19450: 7b a6                    u64 [a3] = s1
 19452: 64 4a                    a3 = t2
 19454: ac 8c 7a ff              jump @1429 if a5 <u a1
      :                          @1436
 19458: 28 63 ff                 jump @1426
      :                          @1437
 19461: 33 02 02                 t0 = 0x2
 19464: 64 83                    t1 = a1
 19466: 01                       fallthrough
      :                          @1438
 19467: 95 33 ff                 t1 = t1 + 0xffffffffffffffff
 19470: ae 83 d1 00              jump @1454 if t1 >=u a1
      :                          @1439
 19474: 82 79 08                 a2 = u64 [a0 + 0x8]
 19477: 82 7a                    a3 = u64 [a0]
 19479: 97 3b 04                 a4 = t1 << 0x4
 19482: c8 7b 0b                 a4 = a4 + a0
 19485: 7b 19 08                 u64 [sp + 0x8] = a2
 19488: 7b 1a                    u64 [sp] = a3
 19490: 82 b9                    a2 = u64 [a4]
 19492: 82 ba 08                 a3 = u64 [a4 + 0x8]
 19495: 82 1c 08                 a5 = u64 [sp + 0x8]
 19498: 82 16                    s1 = u64 [sp]
 19500: 7b 79                    u64 [a0] = a2
 19502: 7b 7a 08                 u64 [a0 + 0x8] = a3
 19505: 7b bc 08                 u64 [a4 + 0x8] = a5
 19508: 7b b6                    u64 [a4] = s1
 19510: ac 23 97 00              jump @1449 if t1 <u t0
      :                          @1440
 19514: 33 0a                    a3 = 0
 19516: 33 0b                    a4 = 0
 19518: 33 0c 01                 a5 = 0x1
 19521: 01                       fallthrough
      :                          @1441
 19522: 95 aa 02                 a3 = a3 + 0x2
 19525: ae 3a 2d                 jump @1444 if a3 >=u t1
      :                          @1442
 19528: 97 c9 04                 a2 = a5 << 0x4
 19531: c8 79 09                 a2 = a2 + a0
 19534: 97 aa 04                 a3 = a3 << 0x4
 19537: c8 7a 0a                 a3 = a3 + a0
 19540: 82 96                    s1 = u64 [a2]
 19542: 82 a5                    s0 = u64 [a3]
 19544: 82 99 08                 a2 = u64 [a2 + 0x8]
 19547: 82 aa 08                 a3 = u64 [a3 + 0x8]
 19550: d9 56 04                 t2 = s1 <s s0
 19553: d3 65 05                 s0 = s0 ^ s1
 19556: d9 a9 09                 a2 = a2 <s a3
 19559: db 54 09                 a2 = t2 if s0 != 0
 19562: c8 c9 09                 a2 = a2 + a5
 19565: ac 3b 0a                 jump @1445 if a4 <u t1
      :                          @1443
 19568: 28 6b                    jump @1450
      :                          @1444
 19570: 64 c9                    a2 = a5
 19572: ae 3b 67                 jump @1450 if a4 >=u t1
      :                          @1445
 19575: ae 39 65                 jump @1451 if a2 >=u t1
      :                          @1446
 19578: 97 ba 04                 a3 = a4 << 0x4
 19581: c8 7a 0a                 a3 = a3 + a0
 19584: 97 9b 04                 a4 = a2 << 0x4
 19587: c8 7b 0b                 a4 = a4 + a0
 19590: 82 ac                    a5 = u64 [a3]
 19592: 82 b6                    s1 = u64 [a4]
 19594: 82 a4 08                 t2 = u64 [a3 + 0x8]
 19597: 82 b5 08                 s0 = u64 [a4 + 0x8]
 19600: d9 6c 00                 ra = a5 <s s1
 19603: d3 6c 0c                 a5 = a5 ^ s1
 19606: d9 54 06                 s1 = t2 <s s0
 19609: db c0 06                 s1 = ra if a5 != 0
 19612: 51 06 6f ff              jump @1438 if s1 == 0
      :                          @1447
 19616: 82 ac 08                 a5 = u64 [a3 + 0x8]
 19619: 82 a6                    s1 = u64 [a3]
 19621: 7b 1c 08                 u64 [sp + 0x8] = a5
 19624: 82 bc                    a5 = u64 [a4]
 19626: 82 b5 08                 s0 = u64 [a4 + 0x8]
 19629: 7b 16                    u64 [sp] = s1
 19631: 82 16 08                 s1 = u64 [sp + 0x8]
 19634: 7b ac                    u64 [a3] = a5
 19636: 7b a5 08                 u64 [a3 + 0x8] = s0
 19639: 82 15                    s0 = u64 [sp]
 19641: 7b b6 08                 u64 [a4 + 0x8] = s1
 19644: 97 9a 01                 a3 = a2 << 0x1
 19647: 95 ac 01                 a5 = a3 + 0x1
 19650: 7b b5                    u64 [a4] = s0
 19652: 64 9b                    a4 = a2
 19654: ac 3c 7c ff              jump @1441 if a5 <u t1
      :                          @1448
 19658: 28 41 ff                 jump @1438
      :                          @1449
 19661: 82 10 20                 ra = u64 [sp + 0x20]
 19664: 82 15 18                 s0 = u64 [sp + 0x18]
 19667: 82 16 10                 s1 = u64 [sp + 0x10]
 19670: 95 11 28                 sp = sp + 0x28
 19673: 32 00                    ret
      :                          @1450
 19675: 00                       trap
      :                          @1451
 19676: 00                       trap
      :                          @1452
 19677: 00                       trap
      :                          @1453
 19678: 00                       trap
      :                          @1454
 19679: 00                       trap
      :                          @1455 [@dyn 201]
 19680: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 19683: 7b 10 38                 u64 [sp + 0x38] = ra
 19686: 7b 15 30                 u64 [sp + 0x30] = s0
 19689: 7b 16 28                 u64 [sp + 0x28] = s1
 19692: 64 85                    s0 = a1
 19694: 82 88 28                 a1 = u64 [a1 + 0x28]
 19697: 82 59 20                 a2 = u64 [s0 + 0x20]
 19700: 82 8a 18                 a3 = u64 [a1 + 0x18]
 19703: 64 76                    s1 = a0
 19705: 33 08 f0 2f 01           a1 = 0x12ff0
 19710: 64 97                    a0 = a2
 19712: 33 09                    a2 = 0
 19714: b4 a0 02 94 01           ra = 404, jump [a3]
      :                          @1456 [@dyn 202]
 19719: 7b 15 08                 u64 [sp + 0x8] = s0
 19722: 78 17 10                 u8 [sp + 0x10] = a0
 19725: 49 01                    u64 [sp + 0] = 0
 19727: 33 05 01                 s0 = 0x1
 19730: 78 15 11                 u8 [sp + 0x11] = s0
 19733: 7b 16 18                 u64 [sp + 0x18] = s1
 19736: 95 66 08                 s1 = s1 + 0x8
 19739: 7b 16 20                 u64 [sp + 0x20] = s1
 19742: 33 06 3a                 s1 = 0x3a
 19745: 64 17                    a0 = sp
 19747: 95 18 18                 a1 = sp + 0x18
 19750: 33 09 3a                 a2 = 0x3a
 19753: 50 20 96 01 6a cb 02     ra = 406, jump @13936
      :                          @1457 [@dyn 203]
 19760: 64 17                    a0 = sp
 19762: 95 18 20                 a1 = sp + 0x20
 19765: 64 69                    a2 = s1
 19767: 50 20 98 01 5c cb 02     ra = 408, jump @13936
      :                          @1458 [@dyn 204]
 19774: 82 17                    a0 = u64 [sp]
 19776: 7c 18 10                 a1 = u8 [sp + 0x10]
 19779: 51 07 59                 jump @1466 if a0 == 0
      :                          @1459
 19782: 52 08 59                 jump @1467 if a1 != 0
      :                          @1460
 19785: 7c 18 11                 a1 = u8 [sp + 0x11]
 19788: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 19791: 8e 77                    a0 = a0 >u 0
 19793: 82 16 08                 s1 = u64 [sp + 0x8]
 19796: 88 88 01                 a1 = a1 <u 0x1
 19799: d4 87 07                 a0 = a0 | a1
 19802: 52 07 28                 jump @1464 if a0 != 0
      :                          @1461
 19805: 7c 67 34                 a0 = u8 [s1 + 0x34]
 19808: 84 77 04                 a0 = a0 & 0x4
 19811: 52 07 1f                 jump @1464 if a0 != 0
      :                          @1462
 19814: 82 68 28                 a1 = u64 [s1 + 0x28]
 19817: 82 67 20                 a0 = u64 [s1 + 0x20]
 19820: 82 8a 18                 a3 = u64 [a1 + 0x18]
 19823: 33 08 47 30 01           a1 = 0x13047
 19828: 33 09 01                 a2 = 0x1
 19831: 33 05 01                 s0 = 0x1
 19834: b4 a0 02 9a 01           ra = 410, jump [a3]
      :                          @1463 [@dyn 205]
 19839: 52 07 20                 jump @1467 if a0 != 0
      :                          @1464
 19842: 82 68 28                 a1 = u64 [s1 + 0x28]
 19845: 82 67 20                 a0 = u64 [s1 + 0x20]
 19848: 82 8a 18                 a3 = u64 [a1 + 0x18]
 19851: 33 08 f1 2f 01           a1 = 0x12ff1
 19856: 33 09 01                 a2 = 0x1
 19859: b4 a0 02 9c 01           ra = 412, jump [a3]
      :                          @1465 [@dyn 206]
 19864: 64 75                    s0 = a0
 19866: 28 05                    jump @1467
      :                          @1466
 19868: 8e 85                    s0 = a1 >u 0
 19870: 01                       fallthrough
      :                          @1467
 19871: 64 57                    a0 = s0
 19873: 82 10 38                 ra = u64 [sp + 0x38]
 19876: 82 15 30                 s0 = u64 [sp + 0x30]
 19879: 82 16 28                 s1 = u64 [sp + 0x28]
 19882: 95 11 40                 sp = sp + 0x40
 19885: 32 00                    ret
      :                          @1468 [@dyn 207]
 19887: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 19890: 7b 10 38                 u64 [sp + 0x38] = ra
 19893: 7b 15 30                 u64 [sp + 0x30] = s0
 19896: 7b 16 28                 u64 [sp + 0x28] = s1
 19899: 64 85                    s0 = a1
 19901: 82 88 28                 a1 = u64 [a1 + 0x28]
 19904: 82 59 20                 a2 = u64 [s0 + 0x20]
 19907: 82 8a 18                 a3 = u64 [a1 + 0x18]
 19910: 64 76                    s1 = a0
 19912: 33 08 f0 2f 01           a1 = 0x12ff0
 19917: 64 97                    a0 = a2
 19919: 33 09                    a2 = 0
 19921: b4 a0 02 a0 01           ra = 416, jump [a3]
      :                          @1469 [@dyn 208]
 19926: 7b 15 08                 u64 [sp + 0x8] = s0
 19929: 78 17 10                 u8 [sp + 0x10] = a0
 19932: 49 01                    u64 [sp + 0] = 0
 19934: 33 05 01                 s0 = 0x1
 19937: 78 15 11                 u8 [sp + 0x11] = s0
 19940: 7b 16 18                 u64 [sp + 0x18] = s1
 19943: 95 66 08                 s1 = s1 + 0x8
 19946: 7b 16 20                 u64 [sp + 0x20] = s1
 19949: 33 06 4e                 s1 = 0x4e
 19952: 64 17                    a0 = sp
 19954: 95 18 18                 a1 = sp + 0x18
 19957: 33 09 4e                 a2 = 0x4e
 19960: 50 20 a2 01 9b ca 02     ra = 418, jump @13936
      :                          @1470 [@dyn 209]
 19967: 64 17                    a0 = sp
 19969: 95 18 20                 a1 = sp + 0x20
 19972: 64 69                    a2 = s1
 19974: 50 20 a4 01 8d ca 02     ra = 420, jump @13936
      :                          @1471 [@dyn 210]
 19981: 82 17                    a0 = u64 [sp]
 19983: 7c 18 10                 a1 = u8 [sp + 0x10]
 19986: 51 07 59                 jump @1479 if a0 == 0
      :                          @1472
 19989: 52 08 59                 jump @1480 if a1 != 0
      :                          @1473
 19992: 7c 18 11                 a1 = u8 [sp + 0x11]
 19995: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 19998: 8e 77                    a0 = a0 >u 0
 20000: 82 16 08                 s1 = u64 [sp + 0x8]
 20003: 88 88 01                 a1 = a1 <u 0x1
 20006: d4 87 07                 a0 = a0 | a1
 20009: 52 07 28                 jump @1477 if a0 != 0
      :                          @1474
 20012: 7c 67 34                 a0 = u8 [s1 + 0x34]
 20015: 84 77 04                 a0 = a0 & 0x4
 20018: 52 07 1f                 jump @1477 if a0 != 0
      :                          @1475
 20021: 82 68 28                 a1 = u64 [s1 + 0x28]
 20024: 82 67 20                 a0 = u64 [s1 + 0x20]
 20027: 82 8a 18                 a3 = u64 [a1 + 0x18]
 20030: 33 08 47 30 01           a1 = 0x13047
 20035: 33 09 01                 a2 = 0x1
 20038: 33 05 01                 s0 = 0x1
 20041: b4 a0 02 a6 01           ra = 422, jump [a3]
      :                          @1476 [@dyn 211]
 20046: 52 07 20                 jump @1480 if a0 != 0
      :                          @1477
 20049: 82 68 28                 a1 = u64 [s1 + 0x28]
 20052: 82 67 20                 a0 = u64 [s1 + 0x20]
 20055: 82 8a 18                 a3 = u64 [a1 + 0x18]
 20058: 33 08 f1 2f 01           a1 = 0x12ff1
 20063: 33 09 01                 a2 = 0x1
 20066: b4 a0 02 a8 01           ra = 424, jump [a3]
      :                          @1478 [@dyn 212]
 20071: 64 75                    s0 = a0
 20073: 28 05                    jump @1480
      :                          @1479
 20075: 8e 85                    s0 = a1 >u 0
 20077: 01                       fallthrough
      :                          @1480
 20078: 64 57                    a0 = s0
 20080: 82 10 38                 ra = u64 [sp + 0x38]
 20083: 82 15 30                 s0 = u64 [sp + 0x30]
 20086: 82 16 28                 s1 = u64 [sp + 0x28]
 20089: 95 11 40                 sp = sp + 0x40
 20092: 32 00                    ret
      :                          @1481 [@dyn 213]
 20094: 95 11 b0                 sp = sp + 0xffffffffffffffb0
 20097: 7b 10 48                 u64 [sp + 0x48] = ra
 20100: 7b 15 40                 u64 [sp + 0x40] = s0
 20103: 7b 16 38                 u64 [sp + 0x38] = s1
 20106: 64 85                    s0 = a1
 20108: 82 88 28                 a1 = u64 [a1 + 0x28]
 20111: 82 59 20                 a2 = u64 [s0 + 0x20]
 20114: 82 8a 18                 a3 = u64 [a1 + 0x18]
 20117: 64 76                    s1 = a0
 20119: 33 08 f0 2f 01           a1 = 0x12ff0
 20124: 64 97                    a0 = a2
 20126: 33 09                    a2 = 0
 20128: b4 a0 02 ac 01           ra = 428, jump [a3]
      :                          @1482 [@dyn 214]
 20133: 7b 15 08                 u64 [sp + 0x8] = s0
 20136: 78 17 10                 u8 [sp + 0x10] = a0
 20139: 49 01                    u64 [sp + 0] = 0
 20141: 33 05 01                 s0 = 0x1
 20144: 78 15 11                 u8 [sp + 0x11] = s0
 20147: 7b 16 18                 u64 [sp + 0x18] = s1
 20150: 95 67 08                 a0 = s1 + 0x8
 20153: 7b 17 20                 u64 [sp + 0x20] = a0
 20156: 95 67 10                 a0 = s1 + 0x10
 20159: 7b 17 28                 u64 [sp + 0x28] = a0
 20162: 95 66 18                 s1 = s1 + 0x18
 20165: 7b 16 30                 u64 [sp + 0x30] = s1
 20168: 33 06 4e                 s1 = 0x4e
 20171: 64 17                    a0 = sp
 20173: 95 18 18                 a1 = sp + 0x18
 20176: 33 09 4e                 a2 = 0x4e
 20179: 50 20 ae 01 c0 c9 02     ra = 430, jump @13936
      :                          @1483 [@dyn 215]
 20186: 64 17                    a0 = sp
 20188: 95 18 20                 a1 = sp + 0x20
 20191: 64 69                    a2 = s1
 20193: 50 20 b0 01 b2 c9 02     ra = 432, jump @13936
      :                          @1484 [@dyn 216]
 20200: 64 17                    a0 = sp
 20202: 95 18 28                 a1 = sp + 0x28
 20205: 64 69                    a2 = s1
 20207: 50 20 b2 01 a4 c9 02     ra = 434, jump @13936
      :                          @1485 [@dyn 217]
 20214: 64 17                    a0 = sp
 20216: 95 18 30                 a1 = sp + 0x30
 20219: 64 69                    a2 = s1
 20221: 50 20 b4 01 96 c9 02     ra = 436, jump @13936
      :                          @1486 [@dyn 218]
 20228: 82 17                    a0 = u64 [sp]
 20230: 7c 18 10                 a1 = u8 [sp + 0x10]
 20233: 51 07 59                 jump @1494 if a0 == 0
      :                          @1487
 20236: 52 08 59                 jump @1495 if a1 != 0
      :                          @1488
 20239: 7c 18 11                 a1 = u8 [sp + 0x11]
 20242: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 20245: 8e 77                    a0 = a0 >u 0
 20247: 82 16 08                 s1 = u64 [sp + 0x8]
 20250: 88 88 01                 a1 = a1 <u 0x1
 20253: d4 87 07                 a0 = a0 | a1
 20256: 52 07 28                 jump @1492 if a0 != 0
      :                          @1489
 20259: 7c 67 34                 a0 = u8 [s1 + 0x34]
 20262: 84 77 04                 a0 = a0 & 0x4
 20265: 52 07 1f                 jump @1492 if a0 != 0
      :                          @1490
 20268: 82 68 28                 a1 = u64 [s1 + 0x28]
 20271: 82 67 20                 a0 = u64 [s1 + 0x20]
 20274: 82 8a 18                 a3 = u64 [a1 + 0x18]
 20277: 33 08 47 30 01           a1 = 0x13047
 20282: 33 09 01                 a2 = 0x1
 20285: 33 05 01                 s0 = 0x1
 20288: b4 a0 02 b6 01           ra = 438, jump [a3]
      :                          @1491 [@dyn 219]
 20293: 52 07 20                 jump @1495 if a0 != 0
      :                          @1492
 20296: 82 68 28                 a1 = u64 [s1 + 0x28]
 20299: 82 67 20                 a0 = u64 [s1 + 0x20]
 20302: 82 8a 18                 a3 = u64 [a1 + 0x18]
 20305: 33 08 f1 2f 01           a1 = 0x12ff1
 20310: 33 09 01                 a2 = 0x1
 20313: b4 a0 02 b8 01           ra = 440, jump [a3]
      :                          @1493 [@dyn 220]
 20318: 64 75                    s0 = a0
 20320: 28 05                    jump @1495
      :                          @1494
 20322: 8e 85                    s0 = a1 >u 0
 20324: 01                       fallthrough
      :                          @1495
 20325: 64 57                    a0 = s0
 20327: 82 10 48                 ra = u64 [sp + 0x48]
 20330: 82 15 40                 s0 = u64 [sp + 0x40]
 20333: 82 16 38                 s1 = u64 [sp + 0x38]
 20336: 95 11 50                 sp = sp + 0x50
 20339: 32 00                    ret
      :                          @1496
 20341: 95 11 e8                 sp = sp + 0xffffffffffffffe8
 20344: 7b 10 10                 u64 [sp + 0x10] = ra
 20347: 7b 15 08                 u64 [sp + 0x8] = s0
 20350: 7b 16                    u64 [sp] = s1
 20352: 64 75                    s0 = a0
 20354: 82 76                    s1 = u64 [a0]
 20356: 64 68                    a1 = s1
 20358: 50 20 ba 01 ba 03        ra = 442, jump @1581
      :                          @1497 [@dyn 221]
 20364: 82 5a 18                 a3 = u64 [s0 + 0x18]
 20367: 82 57 10                 a0 = u64 [s0 + 0x10]
 20370: c9 a6 08                 a1 = s1 - a3
 20373: ae 78 3d                 jump @1501 if a1 >=u a0
      :                          @1498
 20376: 82 58                    a1 = u64 [s0]
 20378: c9 76 09                 a2 = s1 - a0
 20381: c9 9a 0a                 a3 = a3 - a2
 20384: d8 9a 0b                 a4 = a3 <u a2
 20387: c9 68 0c                 a5 = a1 - s1
 20390: d8 ac 0c                 a5 = a5 <u a3
 20393: 85 cc 01                 a5 = a5 ^ 0x1
 20396: d2 cb 0b                 a4 = a4 & a5
 20399: 52 0b 30                 jump @1502 if a4 != 0
      :                          @1499
 20402: 82 5a 08                 a3 = u64 [s0 + 0x8]
 20405: c9 98 06                 s1 = a1 - a2
 20408: 97 77 03                 a0 = a0 << 0x3
 20411: c8 7a 08                 a1 = a3 + a0
 20414: 97 67 03                 a0 = s1 << 0x3
 20417: c8 a7 07                 a0 = a0 + a3
 20420: 97 99 03                 a2 = a2 << 0x3
 20423: 50 20 bc 01 d4 ba 02     ra = 444, jump @13651
      :                          @1500 [@dyn 222]
 20430: 7b 56 10                 u64 [s0 + 0x10] = s1
 20433: 01                       fallthrough
      :                          @1501
 20434: 82 10 10                 ra = u64 [sp + 0x10]
 20437: 82 15 08                 s0 = u64 [sp + 0x8]
 20440: 82 16                    s1 = u64 [sp]
 20442: 95 11 18                 sp = sp + 0x18
 20445: 32 00                    ret
      :                          @1502
 20447: 82 58 08                 a1 = u64 [s0 + 0x8]
 20450: 97 67 03                 a0 = s1 << 0x3
 20453: c8 87 07                 a0 = a0 + a1
 20456: 97 a9 03                 a2 = a3 << 0x3
 20459: 82 10 10                 ra = u64 [sp + 0x10]
 20462: 82 15 08                 s0 = u64 [sp + 0x8]
 20465: 82 16                    s1 = u64 [sp]
 20467: 95 11 18                 sp = sp + 0x18
 20470: 28 f3 b9 02              jump @13633
      :                          @1503
 20474: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 20477: 7b 10 18                 u64 [sp + 0x18] = ra
 20480: 7b 15 10                 u64 [sp + 0x10] = s0
 20483: 7b 16 08                 u64 [sp + 0x8] = s1
 20486: 82 8a 08                 a3 = u64 [a1 + 0x8]
 20489: 82 89 18                 a2 = u64 [a1 + 0x18]
 20492: 33 0b 01                 a4 = 0x1
 20495: 64 75                    s0 = a0
 20497: aa ba 15                 jump @1507 if a3 == a4
      :                          @1504
 20500: 52 0a 15                 jump @1508 if a3 != 0
      :                          @1505
 20503: 52 09 12                 jump @1508 if a2 != 0
      :                          @1506
 20506: 33 06                    s1 = 0
 20508: 33 08 f0 2f 01           a1 = 0x12ff0
 20513: 33 07 01                 a0 = 0x1
 20516: 28 68                    jump @1517
      :                          @1507
 20518: 51 09 15                 jump @1509 if a2 == 0
      :                          @1508
 20521: 64 57                    a0 = s0
 20523: 82 10 18                 ra = u64 [sp + 0x18]
 20526: 82 15 10                 s0 = u64 [sp + 0x10]
 20529: 82 16 08                 s1 = u64 [sp + 0x8]
 20532: 95 11 20                 sp = sp + 0x20
 20535: 28 95 b3 02              jump @13547
      :                          @1509
 20539: 82 87                    a0 = u64 [a1]
 20541: 82 76 08                 s1 = u64 [a0 + 0x8]
 20544: 82 78                    a1 = u64 [a0]
 20546: 51 06 46                 jump @1516 if s1 == 0
      :                          @1510
 20549: 57 06 6b                 jump @1520 if s1 <s 0
      :                          @1511
 20552: 64 53                    t1 = s0
 20554: 85 67 ff                 a0 = s1 ^ 0xffffffffffffffff
 20557: 98 75 3f                 s0 = a0 >> 0x3f
 20560: 33 0a c0 22 03           a3 = 0x322c0
 20565: 33 02 00 00 01           t0 = 0x10000
 20570: c8 2a 0a                 a3 = a3 + t0
 20573: 01                       fallthrough
      :                          @1512
 20574: 82 ac                    a5 = u64 [a3]
 20576: c8 6c 0b                 a4 = a5 + s1
 20579: ac cb 4c                 jump @1519 if a4 <u a5
      :                          @1513
 20582: c8 5b 07                 a0 = a4 + s0
 20585: d8 b7 09                 a2 = a0 <u a4
 20588: d8 72 07                 a0 = t0 <u a0
 20591: d4 97 07                 a0 = a0 | a2
 20594: 52 07 3d                 jump @1519 if a0 != 0
      :                          @1514
 20597: 82 a7                    a0 = u64 [a3]
 20599: ab c7 e7                 jump @1512 if a0 != a5
      :                          @1515
 20602: 7b ab                    u64 [a3] = a4
 20604: 33 07 c0 22 04           a0 = 0x422c0
 20609: c9 b7 07                 a0 = a0 - a4
 20612: 64 35                    s0 = t1
 20614: 28 06                    jump @1517
      :                          @1516
 20616: 33 07 01                 a0 = 0x1
 20619: 01                       fallthrough
      :                          @1517
 20620: 7b 17                    u64 [sp] = a0
 20622: 64 69                    a2 = s1
 20624: 50 20 be 01 59 b9 02     ra = 446, jump @13633
      :                          @1518 [@dyn 223]
 20631: 7b 56                    u64 [s0] = s1
 20633: 82 17                    a0 = u64 [sp]
 20635: 7b 57 08                 u64 [s0 + 0x8] = a0
 20638: 7b 56 10                 u64 [s0 + 0x10] = s1
 20641: 82 10 18                 ra = u64 [sp + 0x18]
 20644: 82 15 10                 s0 = u64 [sp + 0x10]
 20647: 82 16 08                 s1 = u64 [sp + 0x8]
 20650: 95 11 20                 sp = sp + 0x20
 20653: 32 00                    ret
      :                          @1519
 20655: 00                       trap
      :                          @1520
 20656: 00                       trap
      :                          @1521
 20657: 95 11 f8                 sp = sp + 0xfffffffffffffff8
 20660: 7b 15                    u64 [sp] = s0
 20662: 33 03 c0 22 03           t1 = 0x322c0
 20667: 33 02 00 00 01           t0 = 0x10000
 20672: c8 23 04                 t2 = t1 + t0
 20675: 01                       fallthrough
      :                          @1522
 20676: 82 4b                    a4 = u64 [t2]
 20678: c8 7b 0c                 a5 = a4 + a0
 20681: ac bc 30                 jump @1527 if a5 <u a4
      :                          @1523
 20684: 95 c8 08                 a1 = a5 + 0x8
 20687: d8 c8 09                 a2 = a1 <u a5
 20690: d8 82 08                 a1 = t0 <u a1
 20693: d4 98 08                 a1 = a1 | a2
 20696: 52 08 21                 jump @1527 if a1 != 0
      :                          @1524
 20699: c9 c3 08                 a1 = t1 - a5
 20702: c8 28 08                 a1 = a1 + t0
 20705: 84 89 07                 a2 = a1 & 0x7
 20708: c8 9c 0c                 a5 = a5 + a2
 20711: 01                       fallthrough
      :                          @1525
 20712: 82 4a                    a3 = u64 [t2]
 20714: ab ba da                 jump @1522 if a3 != a4
      :                          @1526
 20717: 7b 4c                    u64 [t2] = a5
 20719: c9 98 07                 a0 = a1 - a2
 20722: 82 15                    s0 = u64 [sp]
 20724: 95 11 08                 sp = sp + 0x8
 20727: 32 00                    ret
      :                          @1527
 20729: 00                       trap
      :                          @1528
 20730: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 20733: 7b 10 30                 u64 [sp + 0x30] = ra
 20736: 7b 15 28                 u64 [sp + 0x28] = s0
 20739: 7b 16 20                 u64 [sp + 0x20] = s1
 20742: 64 90                    ra = a2
 20744: 51 08 90 00              jump @1540 if a1 == 0
      :                          @1529
 20748: 64 86                    s1 = a1
 20750: 82 a8 08                 a1 = u64 [a3 + 0x8]
 20753: 51 08 90 00              jump @1541 if a1 == 0
      :                          @1530
 20757: 82 a8 10                 a1 = u64 [a3 + 0x10]
 20760: 51 08 e4 00              jump @1549 if a1 == 0
      :                          @1531
 20764: 7b 18 10                 u64 [sp + 0x10] = a1
 20767: 7b 17 18                 u64 [sp + 0x18] = a0
 20770: 66 67                    a0 = cpop s1
 20772: 33 08 01                 a1 = 0x1
 20775: ab 87 2d 01              jump @1557 if a0 != a1
      :                          @1532
 20779: 82 a7                    a0 = u64 [a3]
 20781: 7b 17 08                 u64 [sp + 0x8] = a0
 20784: 95 62 ff                 t0 = s1 + 0xffffffffffffffff
 20787: 33 04 c0 22 03           t2 = 0x322c0
 20792: 33 03 00 00 01           t1 = 0x10000
 20797: c8 34 0a                 a3 = t2 + t1
 20800: 01                       fallthrough
      :                          @1533
 20801: 82 ab                    a4 = u64 [a3]
 20803: c8 0b 0c                 a5 = a4 + ra
 20806: ac bc 0e 01              jump @1557 if a5 <u a4
      :                          @1534
 20810: c8 6c 07                 a0 = a5 + s1
 20813: d8 c7 09                 a2 = a0 <u a5
 20816: d8 73 07                 a0 = t1 <u a0
 20819: d4 97 07                 a0 = a0 | a2
 20822: 52 07 fe 00              jump @1557 if a0 != 0
      :                          @1535
 20826: c9 c4 09                 a2 = t2 - a5
 20829: c8 39 09                 a2 = a2 + t1
 20832: d2 92 07                 a0 = t0 & a2
 20835: c8 7c 0c                 a5 = a5 + a0
 20838: 01                       fallthrough
      :                          @1536
 20839: 82 a5                    s0 = u64 [a3]
 20841: ab b5 d8                 jump @1533 if s0 != a4
      :                          @1537
 20844: 7b ac                    u64 [a3] = a5
 20846: 7b 10                    u64 [sp] = ra
 20848: c9 79 06                 s1 = a2 - a0
 20851: 64 67                    a0 = s1
 20853: 82 18 08                 a1 = u64 [sp + 0x8]
 20856: 82 15 10                 s0 = u64 [sp + 0x10]
 20859: 64 59                    a2 = s0
 20861: 50 20 c0 01 6c b8 02     ra = 448, jump @13633
      :                          @1538 [@dyn 224]
 20868: 54 35 00 00 01 db 00     jump @1558 if s0 <=u 65536
      :                          @1539
 20875: 82 10                    ra = u64 [sp]
 20877: 82 17 18                 a0 = u64 [sp + 0x18]
 20880: 33 08                    a1 = 0
 20882: 7b 76 08                 u64 [a0 + 0x8] = s1
 20885: 28 03 01                 jump @1565
      :                          @1540
 20888: 49 17 08                 u64 [a0 + 8] = 0
 20891: 33 08 01                 a1 = 0x1
 20894: 28 fa 00                 jump @1565
      :                          @1541
 20897: 51 00 f1 00              jump @1564 if ra == 0
      :                          @1542
 20901: 7b 17 18                 u64 [sp + 0x18] = a0
 20904: 66 67                    a0 = cpop s1
 20906: 33 08 01                 a1 = 0x1
 20909: ab 87 a7 00              jump @1557 if a0 != a1
      :                          @1543
 20913: 95 62 ff                 t0 = s1 + 0xffffffffffffffff
 20916: 33 04 c0 22 03           t2 = 0x322c0
 20921: 33 03 00 00 01           t1 = 0x10000
 20926: c8 34 0a                 a3 = t2 + t1
 20929: 01                       fallthrough
      :                          @1544
 20930: 82 ab                    a4 = u64 [a3]
 20932: c8 0b 0c                 a5 = a4 + ra
 20935: ac bc 8d 00              jump @1557 if a5 <u a4
      :                          @1545
 20939: c8 6c 07                 a0 = a5 + s1
 20942: d8 c7 09                 a2 = a0 <u a5
 20945: d8 73 07                 a0 = t1 <u a0
 20948: d4 97 07                 a0 = a0 | a2
 20951: 52 07 7d                 jump @1557 if a0 != 0
      :                          @1546
 20954: c9 c4 09                 a2 = t2 - a5
 20957: c8 39 09                 a2 = a2 + t1
 20960: d2 92 07                 a0 = t0 & a2
 20963: c8 7c 0c                 a5 = a5 + a0
 20966: 01                       fallthrough
      :                          @1547
 20967: 82 a5                    s0 = u64 [a3]
 20969: ab b5 d9                 jump @1544 if s0 != a4
      :                          @1548
 20972: 7b ac                    u64 [a3] = a5
 20974: c9 79 06                 s1 = a2 - a0
 20977: 82 17 18                 a0 = u64 [sp + 0x18]
 20980: 33 08                    a1 = 0
 20982: 7b 76 08                 u64 [a0 + 0x8] = s1
 20985: 28 9f 00                 jump @1565
      :                          @1549
 20988: 51 00 96 00              jump @1564 if ra == 0
      :                          @1550
 20992: 7b 17 18                 u64 [sp + 0x18] = a0
 20995: 66 67                    a0 = cpop s1
 20997: 33 08 01                 a1 = 0x1
 21000: ab 87 4c                 jump @1557 if a0 != a1
      :                          @1551
 21003: 95 62 ff                 t0 = s1 + 0xffffffffffffffff
 21006: 33 04 c0 22 03           t2 = 0x322c0
 21011: 33 03 00 00 01           t1 = 0x10000
 21016: c8 34 0a                 a3 = t2 + t1
 21019: 01                       fallthrough
      :                          @1552
 21020: 82 ab                    a4 = u64 [a3]
 21022: c8 0b 0c                 a5 = a4 + ra
 21025: ac bc 33                 jump @1557 if a5 <u a4
      :                          @1553
 21028: c8 6c 09                 a2 = a5 + s1
 21031: d8 c9 05                 s0 = a2 <u a5
 21034: d8 93 09                 a2 = t1 <u a2
 21037: d4 59 09                 a2 = a2 | s0
 21040: 52 09 24                 jump @1557 if a2 != 0
      :                          @1554
 21043: c9 c4 09                 a2 = t2 - a5
 21046: c8 39 09                 a2 = a2 + t1
 21049: d2 92 05                 s0 = t0 & a2
 21052: c8 5c 0c                 a5 = a5 + s0
 21055: 01                       fallthrough
      :                          @1555
 21056: 82 a7                    a0 = u64 [a3]
 21058: ab b7 da                 jump @1552 if a0 != a4
      :                          @1556
 21061: 7b ac                    u64 [a3] = a5
 21063: c9 59 06                 s1 = a2 - s0
 21066: 82 17 18                 a0 = u64 [sp + 0x18]
 21069: 33 08                    a1 = 0
 21071: 7b 76 08                 u64 [a0 + 0x8] = s1
 21074: 28 46                    jump @1565
      :                          @1557
 21076: 82 17 18                 a0 = u64 [sp + 0x18]
 21079: 7b 76 08                 u64 [a0 + 0x8] = s1
 21082: 33 08 01                 a1 = 0x1
 21085: 28 3b                    jump @1565
      :                          @1558
 21087: 33 08 c0 22 03           a1 = 0x322c0
 21092: 95 87 00 00 01           a0 = a1 + 0x10000
 21097: 82 10                    ra = u64 [sp]
 21099: 82 1c 10                 a5 = u64 [sp + 0x10]
 21102: 82 15 08                 s0 = u64 [sp + 0x8]
 21105: 01                       fallthrough
      :                          @1559
 21106: 82 78                    a1 = u64 [a0]
 21108: c9 87 09                 a2 = a0 - a1
 21111: ab 59 11                 jump @1563 if a2 != s0
      :                          @1560
 21114: c9 c8 09                 a2 = a1 - a5
 21117: 01                       fallthrough
      :                          @1561
 21118: 82 7a                    a3 = u64 [a0]
 21120: ab 8a f2                 jump @1559 if a3 != a1
      :                          @1562
 21123: 7b 79                    u64 [a0] = a2
 21125: 33 0b                    a4 = 0
 21127: 01                       fallthrough
      :                          @1563
 21128: 82 17 18                 a0 = u64 [sp + 0x18]
 21131: 33 08                    a1 = 0
 21133: 7b 76 08                 u64 [a0 + 0x8] = s1
 21136: 28 08                    jump @1565
      :                          @1564
 21138: 33 08                    a1 = 0
 21140: 7b 76 08                 u64 [a0 + 0x8] = s1
 21143: 01                       fallthrough
      :                          @1565
 21144: 7b 70 10                 u64 [a0 + 0x10] = ra
 21147: 7b 78                    u64 [a0] = a1
 21149: 82 10 30                 ra = u64 [sp + 0x30]
 21152: 82 15 28                 s0 = u64 [sp + 0x28]
 21155: 82 16 20                 s1 = u64 [sp + 0x20]
 21158: 95 11 38                 sp = sp + 0x38
 21161: 32 00                    ret
      :                          @1566
 21163: 51 07 3b                 jump @1572 if a0 == 0
      :                          @1567
 21166: 33 0a c0 22 03           a3 = 0x322c0
 21171: 33 02 00 00 01           t0 = 0x10000
 21176: c8 2a 0a                 a3 = a3 + t0
 21179: 01                       fallthrough
      :                          @1568
 21180: 82 ab                    a4 = u64 [a3]
 21182: c8 7b 09                 a2 = a4 + a0
 21185: ac b9 2c                 jump @1573 if a2 <u a4
      :                          @1569
 21188: 95 9c 01                 a5 = a2 + 0x1
 21191: 88 c8 01                 a1 = a5 <u 0x1
 21194: d8 c2 0c                 a5 = t0 <u a5
 21197: d4 c8 08                 a1 = a1 | a5
 21200: 52 08 1d                 jump @1573 if a1 != 0
      :                          @1570
 21203: 82 a8                    a1 = u64 [a3]
 21205: ab b8 e7                 jump @1568 if a1 != a4
      :                          @1571
 21208: 7b a9                    u64 [a3] = a2
 21210: 33 0c                    a5 = 0
 21212: 33 08 c0 22 04           a1 = 0x422c0
 21217: c9 98 08                 a1 = a1 - a2
 21220: 32 00                    ret
      :                          @1572
 21222: 33 08 01                 a1 = 0x1
 21225: 28 07 64 02              jump @12107
      :                          @1573
 21229: 00                       trap
      :                          @1574
 21230: 95 11 f0                 sp = sp + 0xfffffffffffffff0
 21233: 7b 15 08                 u64 [sp + 0x8] = s0
 21236: 7b 16                    u64 [sp] = s1
 21238: 97 72 04                 t0 = a0 << 0x4
 21241: 33 04 c0 22 03           t2 = 0x322c0
 21246: 33 03 00 00 01           t1 = 0x10000
 21251: c8 34 0b                 a4 = t2 + t1
 21254: 01                       fallthrough
      :                          @1575
 21255: 82 bc                    a5 = u64 [a4]
 21257: c8 2c 08                 a1 = a5 + t0
 21260: ac c8 33                 jump @1580 if a1 <u a5
      :                          @1576
 21263: 95 89 08                 a2 = a1 + 0x8
 21266: d8 89 0a                 a3 = a2 <u a1
 21269: d8 93 09                 a2 = t1 <u a2
 21272: d4 a9 09                 a2 = a2 | a3
 21275: 52 09 24                 jump @1580 if a2 != 0
      :                          @1577
 21278: c9 84 09                 a2 = t2 - a1
 21281: c8 39 09                 a2 = a2 + t1
 21284: 84 9a 07                 a3 = a2 & 0x7
 21287: c8 a8 08                 a1 = a1 + a3
 21290: 01                       fallthrough
      :                          @1578
 21291: 82 b5                    s0 = u64 [a4]
 21293: ab c5 da                 jump @1575 if s0 != a5
      :                          @1579
 21296: 7b b8                    u64 [a4] = a1
 21298: c9 a9 08                 a1 = a2 - a3
 21301: 82 15 08                 s0 = u64 [sp + 0x8]
 21304: 82 16                    s1 = u64 [sp]
 21306: 95 11 10                 sp = sp + 0x10
 21309: 32 00                    ret
      :                          @1580
 21311: 00                       trap
      :                          @1581
 21312: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 21315: 7b 10 40                 u64 [sp + 0x40] = ra
 21318: 7b 15 38                 u64 [sp + 0x38] = s0
 21321: 7b 16 30                 u64 [sp + 0x30] = s1
 21324: 95 88 01                 a1 = a1 + 0x1
 21327: 51 08 5b                 jump @1589 if a1 == 0
      :                          @1582
 21330: 64 75                    s0 = a0
 21332: 82 77                    a0 = u64 [a0]
 21334: 97 79 01                 a2 = a0 << 0x1
 21337: 33 0a 04                 a3 = 0x4
 21340: e4 a8 08                 a1 = maxu(a1, a3)
 21343: e4 89 06                 s1 = maxu(a2, a1)
 21346: 98 68 3c                 a1 = s1 >> 0x3c
 21349: 88 88 01                 a1 = a1 <u 0x1
 21352: 97 69 03                 a2 = s1 << 0x3
 21355: 97 88 03                 a1 = a1 << 0x3
 21358: 51 07 15                 jump @1584 if a0 == 0
      :                          @1583
 21361: 82 5a 08                 a3 = u64 [s0 + 0x8]
 21364: 97 77 03                 a0 = a0 << 0x3
 21367: 7b 1a 18                 u64 [sp + 0x18] = a3
 21370: 49 11 20 08              u64 [sp + 32] = 0x8
 21374: 7b 17 28                 u64 [sp + 0x28] = a0
 21377: 28 06                    jump @1585
      :                          @1584
 21379: 49 11 20                 u64 [sp + 32] = 0
 21382: 01                       fallthrough
      :                          @1585
 21383: 64 17                    a0 = sp
 21385: 95 1a 18                 a3 = sp + 0x18
 21388: 50 20 c2 01 6e fd        ra = 450, jump @1528
      :                          @1586 [@dyn 225]
 21394: 82 18                    a1 = u64 [sp]
 21396: 82 17 08                 a0 = u64 [sp + 0x8]
 21399: 51 08 14                 jump @1590 if a1 == 0
      :                          @1587
 21402: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 21412: aa 87 0d                 jump @1591 if a0 == a1
      :                          @1588
 21415: 52 07 18                 jump @1592 if a0 != 0
      :                          @1589
 21418: 00                       trap
      :                          @1590
 21419: 7b 57 08                 u64 [s0 + 0x8] = a0
 21422: 7b 56                    u64 [s0] = s1
 21424: 01                       fallthrough
      :                          @1591
 21425: 82 10 40                 ra = u64 [sp + 0x40]
 21428: 82 15 38                 s0 = u64 [sp + 0x38]
 21431: 82 16 30                 s1 = u64 [sp + 0x30]
 21434: 95 11 48                 sp = sp + 0x48
 21437: 32 00                    ret
      :                          @1592
 21439: 00                       trap
      :                          @1593
 21440: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 21443: 7b 10 40                 u64 [sp + 0x40] = ra
 21446: 7b 15 38                 u64 [sp + 0x38] = s0
 21449: 7b 16 30                 u64 [sp + 0x30] = s1
 21452: 95 88 01                 a1 = a1 + 0x1
 21455: 51 08 5d                 jump @1601 if a1 == 0
      :                          @1594
 21458: 64 75                    s0 = a0
 21460: 82 77                    a0 = u64 [a0]
 21462: 97 79 01                 a2 = a0 << 0x1
 21465: 3a 0a 18 10 03           a3 = u64 [0x31018]
 21470: 33 0b 04                 a4 = 0x4
 21473: e4 b8 08                 a1 = maxu(a1, a4)
 21476: e4 89 06                 s1 = maxu(a2, a1)
 21479: d8 a6 08                 a1 = s1 <u a3
 21482: 96 69 18                 a2 = s1 * 0x18
 21485: 97 88 03                 a1 = a1 << 0x3
 21488: 51 07 15                 jump @1596 if a0 == 0
      :                          @1595
 21491: 82 5b 08                 a4 = u64 [s0 + 0x8]
 21494: 96 77 18                 a0 = a0 * 0x18
 21497: 7b 1b 18                 u64 [sp + 0x18] = a4
 21500: 49 11 20 08              u64 [sp + 32] = 0x8
 21504: 7b 17 28                 u64 [sp + 0x28] = a0
 21507: 28 06                    jump @1597
      :                          @1596
 21509: 49 11 20                 u64 [sp + 32] = 0
 21512: 01                       fallthrough
      :                          @1597
 21513: 64 17                    a0 = sp
 21515: 95 1a 18                 a3 = sp + 0x18
 21518: 50 20 c4 01 ec fc        ra = 452, jump @1528
      :                          @1598 [@dyn 226]
 21524: 82 18                    a1 = u64 [sp]
 21526: 82 17 08                 a0 = u64 [sp + 0x8]
 21529: 51 08 14                 jump @1602 if a1 == 0
      :                          @1599
 21532: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 21542: aa 87 0d                 jump @1603 if a0 == a1
      :                          @1600
 21545: 52 07 18                 jump @1604 if a0 != 0
      :                          @1601
 21548: 00                       trap
      :                          @1602
 21549: 7b 57 08                 u64 [s0 + 0x8] = a0
 21552: 7b 56                    u64 [s0] = s1
 21554: 01                       fallthrough
      :                          @1603
 21555: 82 10 40                 ra = u64 [sp + 0x40]
 21558: 82 15 38                 s0 = u64 [sp + 0x38]
 21561: 82 16 30                 s1 = u64 [sp + 0x30]
 21564: 95 11 48                 sp = sp + 0x48
 21567: 32 00                    ret
      :                          @1604
 21569: 00                       trap
      :                          @1605
 21570: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 21573: 7b 10 40                 u64 [sp + 0x40] = ra
 21576: 7b 15 38                 u64 [sp + 0x38] = s0
 21579: 7b 16 30                 u64 [sp + 0x30] = s1
 21582: 95 88 01                 a1 = a1 + 0x1
 21585: 51 08 5b                 jump @1613 if a1 == 0
      :                          @1606
 21588: 64 75                    s0 = a0
 21590: 82 77                    a0 = u64 [a0]
 21592: 97 79 01                 a2 = a0 << 0x1
 21595: 33 0a 04                 a3 = 0x4
 21598: e4 a8 08                 a1 = maxu(a1, a3)
 21601: e4 89 06                 s1 = maxu(a2, a1)
 21604: 98 68 3b                 a1 = s1 >> 0x3b
 21607: 88 88 01                 a1 = a1 <u 0x1
 21610: 97 69 04                 a2 = s1 << 0x4
 21613: 97 88 03                 a1 = a1 << 0x3
 21616: 51 07 15                 jump @1608 if a0 == 0
      :                          @1607
 21619: 82 5a 08                 a3 = u64 [s0 + 0x8]
 21622: 97 77 04                 a0 = a0 << 0x4
 21625: 7b 1a 18                 u64 [sp + 0x18] = a3
 21628: 49 11 20 08              u64 [sp + 32] = 0x8
 21632: 7b 17 28                 u64 [sp + 0x28] = a0
 21635: 28 06                    jump @1609
      :                          @1608
 21637: 49 11 20                 u64 [sp + 32] = 0
 21640: 01                       fallthrough
      :                          @1609
 21641: 64 17                    a0 = sp
 21643: 95 1a 18                 a3 = sp + 0x18
 21646: 50 20 c6 01 6c fc        ra = 454, jump @1528
      :                          @1610 [@dyn 227]
 21652: 82 18                    a1 = u64 [sp]
 21654: 82 17 08                 a0 = u64 [sp + 0x8]
 21657: 51 08 14                 jump @1614 if a1 == 0
      :                          @1611
 21660: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 21670: aa 87 0d                 jump @1615 if a0 == a1
      :                          @1612
 21673: 52 07 18                 jump @1616 if a0 != 0
      :                          @1613
 21676: 00                       trap
      :                          @1614
 21677: 7b 57 08                 u64 [s0 + 0x8] = a0
 21680: 7b 56                    u64 [s0] = s1
 21682: 01                       fallthrough
      :                          @1615
 21683: 82 10 40                 ra = u64 [sp + 0x40]
 21686: 82 15 38                 s0 = u64 [sp + 0x38]
 21689: 82 16 30                 s1 = u64 [sp + 0x30]
 21692: 95 11 48                 sp = sp + 0x48
 21695: 32 00                    ret
      :                          @1616
 21697: 00                       trap
      :                          @1617
 21698: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 21701: 7b 10 40                 u64 [sp + 0x40] = ra
 21704: 7b 15 38                 u64 [sp + 0x38] = s0
 21707: 7b 16 30                 u64 [sp + 0x30] = s1
 21710: 95 88 01                 a1 = a1 + 0x1
 21713: 51 08 54                 jump @1625 if a1 == 0
      :                          @1618
 21716: 64 75                    s0 = a0
 21718: 82 77                    a0 = u64 [a0]
 21720: 97 79 01                 a2 = a0 << 0x1
 21723: 33 0a 08                 a3 = 0x8
 21726: e4 a8 08                 a1 = maxu(a1, a3)
 21729: e4 89 06                 s1 = maxu(a2, a1)
 21732: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
 21735: 98 88 3f                 a1 = a1 >> 0x3f
 21738: 51 07 12                 jump @1620 if a0 == 0
      :                          @1619
 21741: 82 59 08                 a2 = u64 [s0 + 0x8]
 21744: 7b 19 18                 u64 [sp + 0x18] = a2
 21747: 49 11 20 01              u64 [sp + 32] = 0x1
 21751: 7b 17 28                 u64 [sp + 0x28] = a0
 21754: 28 06                    jump @1621
      :                          @1620
 21756: 49 11 20                 u64 [sp + 32] = 0
 21759: 01                       fallthrough
      :                          @1621
 21760: 64 17                    a0 = sp
 21762: 95 1a 18                 a3 = sp + 0x18
 21765: 64 69                    a2 = s1
 21767: 50 20 c8 01 f3 fb        ra = 456, jump @1528
      :                          @1622 [@dyn 228]
 21773: 82 18                    a1 = u64 [sp]
 21775: 82 17 08                 a0 = u64 [sp + 0x8]
 21778: 51 08 14                 jump @1626 if a1 == 0
      :                          @1623
 21781: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 21791: aa 87 0d                 jump @1627 if a0 == a1
      :                          @1624
 21794: 52 07 18                 jump @1628 if a0 != 0
      :                          @1625
 21797: 00                       trap
      :                          @1626
 21798: 7b 57 08                 u64 [s0 + 0x8] = a0
 21801: 7b 56                    u64 [s0] = s1
 21803: 01                       fallthrough
      :                          @1627
 21804: 82 10 40                 ra = u64 [sp + 0x40]
 21807: 82 15 38                 s0 = u64 [sp + 0x38]
 21810: 82 16 30                 s1 = u64 [sp + 0x30]
 21813: 95 11 48                 sp = sp + 0x48
 21816: 32 00                    ret
      :                          @1628
 21818: 00                       trap
      :                          @1629
 21819: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 21822: 7b 10 40                 u64 [sp + 0x40] = ra
 21825: 7b 15 38                 u64 [sp + 0x38] = s0
 21828: 7b 16 30                 u64 [sp + 0x30] = s1
 21831: 95 88 01                 a1 = a1 + 0x1
 21834: 51 08 5b                 jump @1637 if a1 == 0
      :                          @1630
 21837: 64 75                    s0 = a0
 21839: 82 77                    a0 = u64 [a0]
 21841: 97 79 01                 a2 = a0 << 0x1
 21844: 33 0a 04                 a3 = 0x4
 21847: e4 a8 08                 a1 = maxu(a1, a3)
 21850: e4 89 06                 s1 = maxu(a2, a1)
 21853: 98 68 3a                 a1 = s1 >> 0x3a
 21856: 88 88 01                 a1 = a1 <u 0x1
 21859: 97 69 05                 a2 = s1 << 0x5
 21862: 97 88 03                 a1 = a1 << 0x3
 21865: 51 07 15                 jump @1632 if a0 == 0
      :                          @1631
 21868: 82 5a 08                 a3 = u64 [s0 + 0x8]
 21871: 97 77 05                 a0 = a0 << 0x5
 21874: 7b 1a 18                 u64 [sp + 0x18] = a3
 21877: 49 11 20 08              u64 [sp + 32] = 0x8
 21881: 7b 17 28                 u64 [sp + 0x28] = a0
 21884: 28 06                    jump @1633
      :                          @1632
 21886: 49 11 20                 u64 [sp + 32] = 0
 21889: 01                       fallthrough
      :                          @1633
 21890: 64 17                    a0 = sp
 21892: 95 1a 18                 a3 = sp + 0x18
 21895: 50 20 ca 01 73 fb        ra = 458, jump @1528
      :                          @1634 [@dyn 229]
 21901: 82 18                    a1 = u64 [sp]
 21903: 82 17 08                 a0 = u64 [sp + 0x8]
 21906: 51 08 14                 jump @1638 if a1 == 0
      :                          @1635
 21909: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 21919: aa 87 0d                 jump @1639 if a0 == a1
      :                          @1636
 21922: 52 07 18                 jump @1640 if a0 != 0
      :                          @1637
 21925: 00                       trap
      :                          @1638
 21926: 7b 57 08                 u64 [s0 + 0x8] = a0
 21929: 7b 56                    u64 [s0] = s1
 21931: 01                       fallthrough
      :                          @1639
 21932: 82 10 40                 ra = u64 [sp + 0x40]
 21935: 82 15 38                 s0 = u64 [sp + 0x38]
 21938: 82 16 30                 s1 = u64 [sp + 0x30]
 21941: 95 11 48                 sp = sp + 0x48
 21944: 32 00                    ret
      :                          @1640
 21946: 00                       trap
      :                          @1641
 21947: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 21950: 7b 10 40                 u64 [sp + 0x40] = ra
 21953: 7b 15 38                 u64 [sp + 0x38] = s0
 21956: 7b 16 30                 u64 [sp + 0x30] = s1
 21959: 95 88 01                 a1 = a1 + 0x1
 21962: 51 08 5b                 jump @1649 if a1 == 0
      :                          @1642
 21965: 64 75                    s0 = a0
 21967: 82 77                    a0 = u64 [a0]
 21969: 97 79 01                 a2 = a0 << 0x1
 21972: 33 0a 04                 a3 = 0x4
 21975: e4 a8 08                 a1 = maxu(a1, a3)
 21978: e4 89 06                 s1 = maxu(a2, a1)
 21981: 98 68 3c                 a1 = s1 >> 0x3c
 21984: 88 88 01                 a1 = a1 <u 0x1
 21987: 97 69 03                 a2 = s1 << 0x3
 21990: 97 88 03                 a1 = a1 << 0x3
 21993: 51 07 15                 jump @1644 if a0 == 0
      :                          @1643
 21996: 82 5a 08                 a3 = u64 [s0 + 0x8]
 21999: 97 77 03                 a0 = a0 << 0x3
 22002: 7b 1a 18                 u64 [sp + 0x18] = a3
 22005: 49 11 20 08              u64 [sp + 32] = 0x8
 22009: 7b 17 28                 u64 [sp + 0x28] = a0
 22012: 28 06                    jump @1645
      :                          @1644
 22014: 49 11 20                 u64 [sp + 32] = 0
 22017: 01                       fallthrough
      :                          @1645
 22018: 64 17                    a0 = sp
 22020: 95 1a 18                 a3 = sp + 0x18
 22023: 50 20 cc 01 f3 fa        ra = 460, jump @1528
      :                          @1646 [@dyn 230]
 22029: 82 18                    a1 = u64 [sp]
 22031: 82 17 08                 a0 = u64 [sp + 0x8]
 22034: 51 08 14                 jump @1650 if a1 == 0
      :                          @1647
 22037: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 22047: aa 87 0d                 jump @1651 if a0 == a1
      :                          @1648
 22050: 52 07 18                 jump @1652 if a0 != 0
      :                          @1649
 22053: 00                       trap
      :                          @1650
 22054: 7b 57 08                 u64 [s0 + 0x8] = a0
 22057: 7b 56                    u64 [s0] = s1
 22059: 01                       fallthrough
      :                          @1651
 22060: 82 10 40                 ra = u64 [sp + 0x40]
 22063: 82 15 38                 s0 = u64 [sp + 0x38]
 22066: 82 16 30                 s1 = u64 [sp + 0x30]
 22069: 95 11 48                 sp = sp + 0x48
 22072: 32 00                    ret
      :                          @1652
 22074: 00                       trap
      :                          @1653
 22075: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 22078: 7b 10 40                 u64 [sp + 0x40] = ra
 22081: 7b 15 38                 u64 [sp + 0x38] = s0
 22084: 7b 16 30                 u64 [sp + 0x30] = s1
 22087: c8 89 09                 a2 = a2 + a1
 22090: ac 89 5b                 jump @1661 if a2 <u a1
      :                          @1654
 22093: 64 75                    s0 = a0
 22095: 82 77                    a0 = u64 [a0]
 22097: 97 78 01                 a1 = a0 << 0x1
 22100: 33 0a 04                 a3 = 0x4
 22103: e4 a9 09                 a2 = maxu(a2, a3)
 22106: e4 98 06                 s1 = maxu(a1, a2)
 22109: 98 68 3b                 a1 = s1 >> 0x3b
 22112: 88 88 01                 a1 = a1 <u 0x1
 22115: 97 69 04                 a2 = s1 << 0x4
 22118: 97 88 03                 a1 = a1 << 0x3
 22121: 51 07 15                 jump @1656 if a0 == 0
      :                          @1655
 22124: 82 5a 08                 a3 = u64 [s0 + 0x8]
 22127: 97 77 04                 a0 = a0 << 0x4
 22130: 7b 1a 18                 u64 [sp + 0x18] = a3
 22133: 49 11 20 08              u64 [sp + 32] = 0x8
 22137: 7b 17 28                 u64 [sp + 0x28] = a0
 22140: 28 06                    jump @1657
      :                          @1656
 22142: 49 11 20                 u64 [sp + 32] = 0
 22145: 01                       fallthrough
      :                          @1657
 22146: 64 17                    a0 = sp
 22148: 95 1a 18                 a3 = sp + 0x18
 22151: 50 20 ce 01 73 fa        ra = 462, jump @1528
      :                          @1658 [@dyn 231]
 22157: 82 18                    a1 = u64 [sp]
 22159: 82 17 08                 a0 = u64 [sp + 0x8]
 22162: 51 08 14                 jump @1662 if a1 == 0
      :                          @1659
 22165: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 22175: aa 87 0d                 jump @1663 if a0 == a1
      :                          @1660
 22178: 52 07 18                 jump @1664 if a0 != 0
      :                          @1661
 22181: 00                       trap
      :                          @1662
 22182: 7b 57 08                 u64 [s0 + 0x8] = a0
 22185: 7b 56                    u64 [s0] = s1
 22187: 01                       fallthrough
      :                          @1663
 22188: 82 10 40                 ra = u64 [sp + 0x40]
 22191: 82 15 38                 s0 = u64 [sp + 0x38]
 22194: 82 16 30                 s1 = u64 [sp + 0x30]
 22197: 95 11 48                 sp = sp + 0x48
 22200: 32 00                    ret
      :                          @1664
 22202: 00                       trap
      :                          @1665
 22203: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 22206: 7b 10 40                 u64 [sp + 0x40] = ra
 22209: 7b 15 38                 u64 [sp + 0x38] = s0
 22212: 7b 16 30                 u64 [sp + 0x30] = s1
 22215: c8 89 09                 a2 = a2 + a1
 22218: ac 89 5b                 jump @1673 if a2 <u a1
      :                          @1666
 22221: 64 75                    s0 = a0
 22223: 82 77                    a0 = u64 [a0]
 22225: 97 78 01                 a1 = a0 << 0x1
 22228: 33 0a 04                 a3 = 0x4
 22231: e4 a9 09                 a2 = maxu(a2, a3)
 22234: e4 98 06                 s1 = maxu(a1, a2)
 22237: 98 68 3d                 a1 = s1 >> 0x3d
 22240: 88 88 01                 a1 = a1 <u 0x1
 22243: 97 69 02                 a2 = s1 << 0x2
 22246: 97 88 02                 a1 = a1 << 0x2
 22249: 51 07 15                 jump @1668 if a0 == 0
      :                          @1667
 22252: 82 5b 08                 a4 = u64 [s0 + 0x8]
 22255: 97 77 02                 a0 = a0 << 0x2
 22258: 7b 1b 18                 u64 [sp + 0x18] = a4
 22261: 49 11 20 04              u64 [sp + 32] = 0x4
 22265: 7b 17 28                 u64 [sp + 0x28] = a0
 22268: 28 06                    jump @1669
      :                          @1668
 22270: 49 11 20                 u64 [sp + 32] = 0
 22273: 01                       fallthrough
      :                          @1669
 22274: 64 17                    a0 = sp
 22276: 95 1a 18                 a3 = sp + 0x18
 22279: 50 20 d0 01 f3 f9        ra = 464, jump @1528
      :                          @1670 [@dyn 232]
 22285: 82 18                    a1 = u64 [sp]
 22287: 82 17 08                 a0 = u64 [sp + 0x8]
 22290: 51 08 14                 jump @1674 if a1 == 0
      :                          @1671
 22293: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 22303: aa 87 0d                 jump @1675 if a0 == a1
      :                          @1672
 22306: 52 07 18                 jump @1676 if a0 != 0
      :                          @1673
 22309: 00                       trap
      :                          @1674
 22310: 7b 57 08                 u64 [s0 + 0x8] = a0
 22313: 7b 56                    u64 [s0] = s1
 22315: 01                       fallthrough
      :                          @1675
 22316: 82 10 40                 ra = u64 [sp + 0x40]
 22319: 82 15 38                 s0 = u64 [sp + 0x38]
 22322: 82 16 30                 s1 = u64 [sp + 0x30]
 22325: 95 11 48                 sp = sp + 0x48
 22328: 32 00                    ret
      :                          @1676
 22330: 00                       trap
      :                          @1677 [@dyn 233]
 22331: 82 7a 08                 a3 = u64 [a0 + 0x8]
 22334: 82 79 10                 a2 = u64 [a0 + 0x10]
 22337: 64 87                    a0 = a1
 22339: 64 a8                    a1 = a3
 22341: 28 f2 b8 02              jump @13768
      :                          @1678
 22345: 82 9a                    a3 = u64 [a2]
 22347: 95 ab 90 00              a4 = a3 + 0x90
 22351: ac ab a0 02              jump @1719 if a4 <u a3
      :                          @1679
 22355: 95 b8 08                 a1 = a4 + 0x8
 22358: d8 b8 0c                 a5 = a1 <u a4
 22361: d8 82 08                 a1 = t0 <u a1
 22364: d4 c8 08                 a1 = a1 | a5
 22367: 52 08 90 02              jump @1719 if a1 != 0
      :                          @1680
 22371: c9 b3 08                 a1 = t1 - a4
 22374: c8 28 08                 a1 = a1 + t0
 22377: 84 8c 07                 a5 = a1 & 0x7
 22380: c8 cb 0b                 a4 = a4 + a5
 22383: 01                       fallthrough
      :                          @1681
 22384: 82 95                    s0 = u64 [a2]
 22386: ab a5 d7                 jump @1678 if s0 != a3
      :                          @1682
 22389: 7b 9b                    u64 [a2] = a4
 22391: 01                       fallthrough
      :                          @1683
 22392: 82 19 08                 a2 = u64 [sp + 0x8]
 22395: 82 95 10                 s0 = u64 [a2 + 0x10]
 22398: c9 c8 0b                 a4 = a1 - a5
 22401: 51 05 0f 02              jump @1716 if s0 == 0
      :                          @1684
 22405: 7b 17                    u64 [sp] = a0
 22407: 98 57 3b                 a0 = s0 >> 0x3b
 22410: 52 07 66 02              jump @1720 if a0 != 0
      :                          @1685
 22414: 7b 1b 28                 u64 [sp + 0x28] = a4
 22417: 82 98 08                 a1 = u64 [a2 + 0x8]
 22420: 7b 18 18                 u64 [sp + 0x18] = a1
 22423: 88 76 01                 s1 = a0 <u 0x1
 22426: 7b 15 20                 u64 [sp + 0x20] = s0
 22429: 97 55 04                 s0 = s0 << 0x4
 22432: 97 64 03                 t2 = s1 << 0x3
 22435: 33 03 c0 22 03           t1 = 0x322c0
 22440: 33 02 00 00 01           t0 = 0x10000
 22445: c8 23 09                 a2 = t1 + t0
 22448: 01                       fallthrough
      :                          @1686
 22449: 82 9a                    a3 = u64 [a2]
 22451: c8 5a 0b                 a4 = a3 + s0
 22454: ac ab 38 02              jump @1718 if a4 <u a3
      :                          @1687
 22458: c8 4b 08                 a1 = a4 + t2
 22461: d8 b8 0c                 a5 = a1 <u a4
 22464: d8 82 08                 a1 = t0 <u a1
 22467: d4 c8 08                 a1 = a1 | a5
 22470: 52 08 28 02              jump @1718 if a1 != 0
      :                          @1688
 22474: c9 b3 08                 a1 = t1 - a4
 22477: c8 28 08                 a1 = a1 + t0
 22480: 84 8c 07                 a5 = a1 & 0x7
 22483: c8 cb 0b                 a4 = a4 + a5
 22486: 01                       fallthrough
      :                          @1689
 22487: 82 97                    a0 = u64 [a2]
 22489: ab a7 d8                 jump @1686 if a0 != a3
      :                          @1690
 22492: 7b 9b                    u64 [a2] = a4
 22494: c9 c8 06                 s1 = a1 - a5
 22497: 64 67                    a0 = s1
 22499: 82 18 18                 a1 = u64 [sp + 0x18]
 22502: 64 59                    a2 = s0
 22504: 7b 14 10                 u64 [sp + 0x10] = t2
 22507: 50 20 d4 01 fe b1 02     ra = 468, jump @13633
      :                          @1691 [@dyn 234]
 22514: 82 14 10                 t2 = u64 [sp + 0x10]
 22517: 82 17 28                 a0 = u64 [sp + 0x28]
 22520: 82 18 20                 a1 = u64 [sp + 0x20]
 22523: 7b 78                    u64 [a0] = a1
 22525: 7b 76 08                 u64 [a0 + 0x8] = s1
 22528: 7b 78 10                 u64 [a0 + 0x10] = a1
 22531: 33 07 c0 22 03           a0 = 0x322c0
 22536: 33 03 c0 22 03           t1 = 0x322c0
 22541: 33 02 00 00 01           t0 = 0x10000
 22546: c8 23 09                 a2 = t1 + t0
 22549: 01                       fallthrough
      :                          @1692
 22550: 82 9a                    a3 = u64 [a2]
 22552: c8 5a 0b                 a4 = a3 + s0
 22555: ac ab d3 01              jump @1718 if a4 <u a3
      :                          @1693
 22559: c8 4b 08                 a1 = a4 + t2
 22562: d8 b8 0c                 a5 = a1 <u a4
 22565: d8 82 08                 a1 = t0 <u a1
 22568: d4 c8 08                 a1 = a1 | a5
 22571: 52 08 c3 01              jump @1718 if a1 != 0
      :                          @1694
 22575: c9 b3 08                 a1 = t1 - a4
 22578: c8 28 08                 a1 = a1 + t0
 22581: 84 8c 07                 a5 = a1 & 0x7
 22584: c8 cb 0b                 a4 = a4 + a5
 22587: 01                       fallthrough
      :                          @1695
 22588: 82 96                    s1 = u64 [a2]
 22590: ab a6 d8                 jump @1692 if s1 != a3
      :                          @1696
 22593: 7b 9b                    u64 [a2] = a4
 22595: c9 c8 06                 s1 = a1 - a5
 22598: 64 67                    a0 = s1
 22600: 82 18 18                 a1 = u64 [sp + 0x18]
 22603: 64 59                    a2 = s0
 22605: 50 20 d6 01 9c b1 02     ra = 470, jump @13633
      :                          @1697 [@dyn 235]
 22612: 82 14 10                 t2 = u64 [sp + 0x10]
 22615: 82 17 28                 a0 = u64 [sp + 0x28]
 22618: 82 18 20                 a1 = u64 [sp + 0x20]
 22621: 7b 78 18                 u64 [a0 + 0x18] = a1
 22624: 7b 76 20                 u64 [a0 + 0x20] = s1
 22627: 7b 78 28                 u64 [a0 + 0x28] = a1
 22630: 33 07 c0 22 03           a0 = 0x322c0
 22635: 33 03 c0 22 03           t1 = 0x322c0
 22640: 33 02 00 00 01           t0 = 0x10000
 22645: c8 23 09                 a2 = t1 + t0
 22648: 01                       fallthrough
      :                          @1698
 22649: 82 9a                    a3 = u64 [a2]
 22651: c8 5a 0b                 a4 = a3 + s0
 22654: ac ab 70 01              jump @1718 if a4 <u a3
      :                          @1699
 22658: c8 4b 08                 a1 = a4 + t2
 22661: d8 b8 0c                 a5 = a1 <u a4
 22664: d8 82 08                 a1 = t0 <u a1
 22667: d4 c8 08                 a1 = a1 | a5
 22670: 52 08 60 01              jump @1718 if a1 != 0
      :                          @1700
 22674: c9 b3 08                 a1 = t1 - a4
 22677: c8 28 08                 a1 = a1 + t0
 22680: 84 8c 07                 a5 = a1 & 0x7
 22683: c8 cb 0b                 a4 = a4 + a5
 22686: 01                       fallthrough
      :                          @1701
 22687: 82 96                    s1 = u64 [a2]
 22689: ab a6 d8                 jump @1698 if s1 != a3
      :                          @1702
 22692: 7b 9b                    u64 [a2] = a4
 22694: c9 c8 06                 s1 = a1 - a5
 22697: 64 67                    a0 = s1
 22699: 82 18 18                 a1 = u64 [sp + 0x18]
 22702: 64 59                    a2 = s0
 22704: 50 20 d8 01 39 b1 02     ra = 472, jump @13633
      :                          @1703 [@dyn 236]
 22711: 82 14 10                 t2 = u64 [sp + 0x10]
 22714: 82 17 28                 a0 = u64 [sp + 0x28]
 22717: 82 18 20                 a1 = u64 [sp + 0x20]
 22720: 7b 78 30                 u64 [a0 + 0x30] = a1
 22723: 7b 76 38                 u64 [a0 + 0x38] = s1
 22726: 7b 78 40                 u64 [a0 + 0x40] = a1
 22729: 33 07 c0 22 03           a0 = 0x322c0
 22734: 33 03 c0 22 03           t1 = 0x322c0
 22739: 33 02 00 00 01           t0 = 0x10000
 22744: c8 23 09                 a2 = t1 + t0
 22747: 01                       fallthrough
      :                          @1704
 22748: 82 9a                    a3 = u64 [a2]
 22750: c8 5a 0b                 a4 = a3 + s0
 22753: ac ab 0d 01              jump @1718 if a4 <u a3
      :                          @1705
 22757: c8 4b 08                 a1 = a4 + t2
 22760: d8 b8 0c                 a5 = a1 <u a4
 22763: d8 82 08                 a1 = t0 <u a1
 22766: d4 c8 08                 a1 = a1 | a5
 22769: 52 08 fd 00              jump @1718 if a1 != 0
      :                          @1706
 22773: c9 b3 08                 a1 = t1 - a4
 22776: c8 28 08                 a1 = a1 + t0
 22779: 84 8c 07                 a5 = a1 & 0x7
 22782: c8 cb 0b                 a4 = a4 + a5
 22785: 01                       fallthrough
      :                          @1707
 22786: 82 96                    s1 = u64 [a2]
 22788: ab a6 d8                 jump @1704 if s1 != a3
      :                          @1708
 22791: 7b 9b                    u64 [a2] = a4
 22793: c9 c8 06                 s1 = a1 - a5
 22796: 64 67                    a0 = s1
 22798: 82 18 18                 a1 = u64 [sp + 0x18]
 22801: 64 59                    a2 = s0
 22803: 50 20 da 01 d6 b0 02     ra = 474, jump @13633
      :                          @1709 [@dyn 237]
 22810: 82 14 10                 t2 = u64 [sp + 0x10]
 22813: 82 17 28                 a0 = u64 [sp + 0x28]
 22816: 82 18 20                 a1 = u64 [sp + 0x20]
 22819: 7b 78 48                 u64 [a0 + 0x48] = a1
 22822: 7b 76 50                 u64 [a0 + 0x50] = s1
 22825: 7b 78 58                 u64 [a0 + 0x58] = a1
 22828: 33 07 c0 22 03           a0 = 0x322c0
 22833: 33 03 c0 22 03           t1 = 0x322c0
 22838: 33 02 00 00 01           t0 = 0x10000
 22843: c8 23 09                 a2 = t1 + t0
 22846: 01                       fallthrough
      :                          @1710
 22847: 82 9a                    a3 = u64 [a2]
 22849: c8 5a 0b                 a4 = a3 + s0
 22852: ac ab aa 00              jump @1718 if a4 <u a3
      :                          @1711
 22856: c8 4b 08                 a1 = a4 + t2
 22859: d8 b8 0c                 a5 = a1 <u a4
 22862: d8 82 08                 a1 = t0 <u a1
 22865: d4 c8 08                 a1 = a1 | a5
 22868: 52 08 9a 00              jump @1718 if a1 != 0
      :                          @1712
 22872: c9 b3 08                 a1 = t1 - a4
 22875: c8 28 08                 a1 = a1 + t0
 22878: 84 8c 07                 a5 = a1 & 0x7
 22881: c8 cb 0b                 a4 = a4 + a5
 22884: 01                       fallthrough
      :                          @1713
 22885: 82 96                    s1 = u64 [a2]
 22887: ab a6 d8                 jump @1710 if s1 != a3
      :                          @1714
 22890: 7b 9b                    u64 [a2] = a4
 22892: c9 c8 06                 s1 = a1 - a5
 22895: 64 67                    a0 = s1
 22897: 82 18 18                 a1 = u64 [sp + 0x18]
 22900: 64 59                    a2 = s0
 22902: 50 20 dc 01 73 b0 02     ra = 476, jump @13633
      :                          @1715 [@dyn 238]
 22909: 82 1b 28                 a4 = u64 [sp + 0x28]
 22912: 82 15 20                 s0 = u64 [sp + 0x20]
 22915: 7b b5 60                 u64 [a4 + 0x60] = s0
 22918: 7b b6 68                 u64 [a4 + 0x68] = s1
 22921: 82 17                    a0 = u64 [sp]
 22923: 82 19 08                 a2 = u64 [sp + 0x8]
 22926: 28 31                    jump @1717
      :                          @1716
 22928: 49 0b                    u64 [a4 + 0] = 0
 22930: 49 1b 08 08              u64 [a4 + 8] = 0x8
 22934: 49 1b 10                 u64 [a4 + 16] = 0
 22937: 49 1b 18                 u64 [a4 + 24] = 0
 22940: 49 1b 20 08              u64 [a4 + 32] = 0x8
 22944: 49 1b 28                 u64 [a4 + 40] = 0
 22947: 49 1b 30                 u64 [a4 + 48] = 0
 22950: 49 1b 38 08              u64 [a4 + 56] = 0x8
 22954: 49 1b 40                 u64 [a4 + 64] = 0
 22957: 49 1b 48                 u64 [a4 + 72] = 0
 22960: 49 1b 50 08              u64 [a4 + 80] = 0x8
 22964: 49 1b 58                 u64 [a4 + 88] = 0
 22967: 49 1b 60                 u64 [a4 + 96] = 0
 22970: 49 1b 68 08              u64 [a4 + 104] = 0x8
 22974: 01                       fallthrough
      :                          @1717
 22975: 82 9a                    a3 = u64 [a2]
 22977: 82 98 08                 a1 = u64 [a2 + 0x8]
 22980: 82 99 10                 a2 = u64 [a2 + 0x10]
 22983: 7b b5 70                 u64 [a4 + 0x70] = s0
 22986: 7b ba 78                 u64 [a4 + 0x78] = a3
 22989: 7b b8 80 00              u64 [a4 + 0x80] = a1
 22993: 7b b9 88 00              u64 [a4 + 0x88] = a2
 22997: 33 08 06                 a1 = 0x6
 23000: 7b 78                    u64 [a0] = a1
 23002: 7b 7b 08                 u64 [a0 + 0x8] = a4
 23005: 7b 78 10                 u64 [a0 + 0x10] = a1
 23008: 82 10 40                 ra = u64 [sp + 0x40]
 23011: 82 15 38                 s0 = u64 [sp + 0x38]
 23014: 82 16 30                 s1 = u64 [sp + 0x30]
 23017: 95 11 48                 sp = sp + 0x48
 23020: 32 00                    ret
      :                          @1718
 23022: 00                       trap
      :                          @1719
 23023: 00                       trap
      :                          @1720
 23024: 00                       trap
      :                          @1721
 23025: 95 11 90                 sp = sp + 0xffffffffffffff90
 23028: 7b 10 68                 u64 [sp + 0x68] = ra
 23031: 7b 15 60                 u64 [sp + 0x60] = s0
 23034: 7b 16 58                 u64 [sp + 0x58] = s1
 23037: 64 70                    ra = a0
 23039: 51 09 27 01              jump @1741 if a2 == 0
      :                          @1722
 23043: 7b 18 10                 u64 [sp + 0x10] = a1
 23046: 3a 07 20 10 03           a0 = u64 [0x31020]
 23051: ae 79 a3 01              jump @1756 if a2 >=u a0
      :                          @1723
 23055: d8 79 02                 t0 = a2 <u a0
 23058: 7b 19 30                 u64 [sp + 0x30] = a2
 23061: 96 97 18                 a0 = a2 * 0x18
 23064: 97 22 03                 t0 = t0 << 0x3
 23067: 33 04 c0 22 03           t2 = 0x322c0
 23072: 33 03 00 00 01           t1 = 0x10000
 23077: c8 34 0b                 a4 = t2 + t1
 23080: 01                       fallthrough
      :                          @1724
 23081: 82 b6                    s1 = u64 [a4]
 23083: c8 76 0c                 a5 = s1 + a0
 23086: ac 6c 7f 01              jump @1755 if a5 <u s1
      :                          @1725
 23090: c8 2c 0a                 a3 = a5 + t0
 23093: d8 ca 05                 s0 = a3 <u a5
 23096: d8 a3 0a                 a3 = t1 <u a3
 23099: d4 5a 0a                 a3 = a3 | s0
 23102: 52 0a 6f 01              jump @1755 if a3 != 0
      :                          @1726
 23106: c9 c4 05                 s0 = t2 - a5
 23109: c8 35 05                 s0 = s0 + t1
 23112: 84 5a 07                 a3 = s0 & 0x7
 23115: c8 ac 0c                 a5 = a5 + a3
 23118: 01                       fallthrough
      :                          @1727
 23119: 82 b8                    a1 = u64 [a4]
 23121: ab 68 d8                 jump @1724 if a1 != s1
      :                          @1728
 23124: 7b bc                    u64 [a4] = a5
 23126: 01                       fallthrough
      :                          @1729
 23127: c9 a5 0c                 a5 = s0 - a3
 23130: 33 07 01                 a0 = 0x1
 23133: 64 c2                    t0 = a5
 23135: 82 19 30                 a2 = u64 [sp + 0x30]
 23138: 82 1a 10                 a3 = u64 [sp + 0x10]
 23141: 53 19 02 21 01           jump @1753 if a2 <u 2
      :                          @1730
 23146: 82 a3 10                 t1 = u64 [a3 + 0x10]
 23149: 51 03 fc 00              jump @1750 if t1 == 0
      :                          @1731
 23153: 7b 10 08                 u64 [sp + 0x8] = ra
 23156: 98 37 3c                 a0 = t1 >> 0x3c
 23159: 52 07 37 01              jump @1756 if a0 != 0
      :                          @1732
 23163: 82 a8 08                 a1 = u64 [a3 + 0x8]
 23166: 7b 18 20                 u64 [sp + 0x20] = a1
 23169: 88 77 01                 a0 = a0 <u 0x1
 23172: 97 36 03                 s1 = t1 << 0x3
 23175: 97 74 03                 t2 = a0 << 0x3
 23178: 33 05 c0 22 03           s0 = 0x322c0
 23183: 7b 15 50                 u64 [sp + 0x50] = s0
 23186: 95 55 00 00 01           s0 = s0 + 0x10000
 23191: 7b 1c                    u64 [sp] = a5
 23193: 64 c2                    t0 = a5
 23195: 7b 13 28                 u64 [sp + 0x28] = t1
 23198: 7b 14 18                 u64 [sp + 0x18] = t2
 23201: 33 00 02                 ra = 0x2
 23204: 28 06                    jump @1734
      :                          @1733
 23206: 95 00 01                 ra = ra + 0x1
 23209: 01                       fallthrough
      :                          @1734
 23210: 82 57                    a0 = u64 [s0]
 23212: c8 67 08                 a1 = a0 + s1
 23215: ac 78 e3 bd 02           jump @13935 if a1 <u a0
      :                          @1735
 23220: c8 48 09                 a2 = a1 + t2
 23223: d8 89 0a                 a3 = a2 <u a1
 23226: 8e 99 00 00 01           a2 = a2 >u 0x10000
 23231: d4 a9 09                 a2 = a2 | a3
 23234: 52 09 d0 bd 02           jump @13935 if a2 != 0
      :                          @1736
 23239: 82 19 50                 a2 = u64 [sp + 0x50]
 23242: c9 89 09                 a2 = a2 - a1
 23245: 95 99 00 00 01           a2 = a2 + 0x10000
 23250: 84 9a 07                 a3 = a2 & 0x7
 23253: c8 a8 08                 a1 = a1 + a3
 23256: 01                       fallthrough
      :                          @1737
 23257: 82 5b                    a4 = u64 [s0]
 23259: ab 7b cf                 jump @1734 if a4 != a0
      :                          @1738
 23262: 7b 58                    u64 [s0] = a1
 23264: 33 0c                    a5 = 0
 23266: c9 a9 07                 a0 = a2 - a3
 23269: 7b 17 38                 u64 [sp + 0x38] = a0
 23272: 82 18 20                 a1 = u64 [sp + 0x20]
 23275: 64 69                    a2 = s1
 23277: 7b 12 48                 u64 [sp + 0x48] = t0
 23280: 7b 10 40                 u64 [sp + 0x40] = ra
 23283: 50 20 de 01 f6 ae 02     ra = 478, jump @13633
      :                          @1739 [@dyn 239]
 23290: 82 10 40                 ra = u64 [sp + 0x40]
 23293: 82 14 18                 t2 = u64 [sp + 0x18]
 23296: 82 13 28                 t1 = u64 [sp + 0x28]
 23299: 82 12 48                 t0 = u64 [sp + 0x48]
 23302: 82 19 30                 a2 = u64 [sp + 0x30]
 23305: 7b 23                    u64 [t0] = t1
 23307: 82 17 38                 a0 = u64 [sp + 0x38]
 23310: 7b 27 08                 u64 [t0 + 0x8] = a0
 23313: 7b 23 10                 u64 [t0 + 0x10] = t1
 23316: 95 22 18                 t0 = t0 + 0x18
 23319: ab 90 8f                 jump @1733 if ra != a2
      :                          @1740
 23322: 64 97                    a0 = a2
 23324: 82 10 08                 ra = u64 [sp + 0x8]
 23327: 82 1c                    a5 = u64 [sp]
 23329: 82 1a 10                 a3 = u64 [sp + 0x10]
 23332: 28 62                    jump @1753
      :                          @1741
 23334: 82 8a                    a3 = u64 [a1]
 23336: 33 0c 08                 a5 = 0x8
 23339: 51 0a 08                 jump @1743 if a3 == 0
      :                          @1742
 23342: 54 2a 00 20 09           jump @1744 if a3 <=u 8192
      :                          @1743
 23347: 33 07                    a0 = 0
 23349: 28 62                    jump @1754
      :                          @1744
 23351: 82 87 08                 a0 = u64 [a1 + 0x8]
 23354: 97 a8 03                 a1 = a3 << 0x3
 23357: 33 05 c0 22 03           s0 = 0x322c0
 23362: 95 55 00 00 01           s0 = s0 + 0x10000
 23367: 01                       fallthrough
      :                          @1745
 23368: 82 5a                    a3 = u64 [s0]
 23370: c9 a5 0b                 a4 = s0 - a3
 23373: ab 7b 15                 jump @1749 if a4 != a0
      :                          @1746
 23376: c9 8a 0b                 a4 = a3 - a1
 23379: 01                       fallthrough
      :                          @1747
 23380: 82 5c                    a5 = u64 [s0]
 23382: ab ac f2                 jump @1745 if a5 != a3
      :                          @1748
 23385: 7b 5b                    u64 [s0] = a4
 23387: 33 07                    a0 = 0
 23389: 33 0c 08                 a5 = 0x8
 23392: 28 37                    jump @1754
      :                          @1749
 23394: 33 07                    a0 = 0
 23396: 33 0c 08                 a5 = 0x8
 23399: 28 30                    jump @1754
      :                          @1750
 23401: 95 97 ff                 a0 = a2 + 0xffffffffffffffff
 23404: 33 08 08                 a1 = 0x8
 23407: 64 c2                    t0 = a5
 23409: 01                       fallthrough
      :                          @1751
 23410: 49 02                    u64 [t0 + 0] = 0
 23412: 7b 28 08                 u64 [t0 + 0x8] = a1
 23415: 49 12 10                 u64 [t0 + 16] = 0
 23418: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 23421: 95 22 18                 t0 = t0 + 0x18
 23424: 52 07 f2                 jump @1751 if a0 != 0
      :                          @1752
 23427: 64 97                    a0 = a2
 23429: 01                       fallthrough
      :                          @1753
 23430: 82 a8 10                 a1 = u64 [a3 + 0x10]
 23433: 82 ab 08                 a4 = u64 [a3 + 0x8]
 23436: 82 aa                    a3 = u64 [a3]
 23438: 7b 28 10                 u64 [t0 + 0x10] = a1
 23441: 7b 2b 08                 u64 [t0 + 0x8] = a4
 23444: 7b 2a                    u64 [t0] = a3
 23446: 01                       fallthrough
      :                          @1754
 23447: 7b 09                    u64 [ra] = a2
 23449: 7b 0c 08                 u64 [ra + 0x8] = a5
 23452: 7b 07 10                 u64 [ra + 0x10] = a0
 23455: 82 10 68                 ra = u64 [sp + 0x68]
 23458: 82 15 60                 s0 = u64 [sp + 0x60]
 23461: 82 16 58                 s1 = u64 [sp + 0x58]
 23464: 95 11 70                 sp = sp + 0x70
 23467: 32 00                    ret
      :                          @1755
 23469: 00                       trap
      :                          @1756
 23470: 00                       trap
      :                          @1757
 23471: 82 9a                    a3 = u64 [a2]
 23473: 95 ab f0 00              a4 = a3 + 0xf0
 23477: ac ab 6a 04              jump @1822 if a4 <u a3
      :                          @1758
 23481: 95 b8 08                 a1 = a4 + 0x8
 23484: d8 b8 0c                 a5 = a1 <u a4
 23487: d8 82 08                 a1 = t0 <u a1
 23490: d4 c8 08                 a1 = a1 | a5
 23493: 52 08 5a 04              jump @1822 if a1 != 0
      :                          @1759
 23497: c9 b3 08                 a1 = t1 - a4
 23500: c8 28 08                 a1 = a1 + t0
 23503: 84 8c 07                 a5 = a1 & 0x7
 23506: c8 cb 0b                 a4 = a4 + a5
 23509: 01                       fallthrough
      :                          @1760
 23510: 82 95                    s0 = u64 [a2]
 23512: ab a5 d7                 jump @1757 if s0 != a3
      :                          @1761
 23515: 7b 9b                    u64 [a2] = a4
 23517: 01                       fallthrough
      :                          @1762
 23518: 82 19 08                 a2 = u64 [sp + 0x8]
 23521: 82 95 10                 s0 = u64 [a2 + 0x10]
 23524: c9 c8 0b                 a4 = a1 - a5
 23527: 51 05 a5 03              jump @1819 if s0 == 0
      :                          @1763
 23531: 7b 17                    u64 [sp] = a0
 23533: 98 57 3b                 a0 = s0 >> 0x3b
 23536: 52 07 30 04              jump @1823 if a0 != 0
      :                          @1764
 23540: 7b 1b 28                 u64 [sp + 0x28] = a4
 23543: 82 98 08                 a1 = u64 [a2 + 0x8]
 23546: 7b 18 18                 u64 [sp + 0x18] = a1
 23549: 88 76 01                 s1 = a0 <u 0x1
 23552: 7b 15 20                 u64 [sp + 0x20] = s0
 23555: 97 55 04                 s0 = s0 << 0x4
 23558: 97 64 03                 t2 = s1 << 0x3
 23561: 33 03 c0 22 03           t1 = 0x322c0
 23566: 33 02 00 00 01           t0 = 0x10000
 23571: c8 23 09                 a2 = t1 + t0
 23574: 01                       fallthrough
      :                          @1765
 23575: 82 9a                    a3 = u64 [a2]
 23577: c8 5a 0b                 a4 = a3 + s0
 23580: ac ab 02 04              jump @1821 if a4 <u a3
      :                          @1766
 23584: c8 4b 08                 a1 = a4 + t2
 23587: d8 b8 0c                 a5 = a1 <u a4
 23590: d8 82 08                 a1 = t0 <u a1
 23593: d4 c8 08                 a1 = a1 | a5
 23596: 52 08 f2 03              jump @1821 if a1 != 0
      :                          @1767
 23600: c9 b3 08                 a1 = t1 - a4
 23603: c8 28 08                 a1 = a1 + t0
 23606: 84 8c 07                 a5 = a1 & 0x7
 23609: c8 cb 0b                 a4 = a4 + a5
 23612: 01                       fallthrough
      :                          @1768
 23613: 82 97                    a0 = u64 [a2]
 23615: ab a7 d8                 jump @1765 if a0 != a3
      :                          @1769
 23618: 7b 9b                    u64 [a2] = a4
 23620: c9 c8 06                 s1 = a1 - a5
 23623: 64 67                    a0 = s1
 23625: 82 18 18                 a1 = u64 [sp + 0x18]
 23628: 64 59                    a2 = s0
 23630: 7b 14 10                 u64 [sp + 0x10] = t2
 23633: 50 20 e0 01 98 ad 02     ra = 480, jump @13633
      :                          @1770 [@dyn 240]
 23640: 82 14 10                 t2 = u64 [sp + 0x10]
 23643: 82 17 28                 a0 = u64 [sp + 0x28]
 23646: 82 18 20                 a1 = u64 [sp + 0x20]
 23649: 7b 78                    u64 [a0] = a1
 23651: 7b 76 08                 u64 [a0 + 0x8] = s1
 23654: 7b 78 10                 u64 [a0 + 0x10] = a1
 23657: 33 07 c0 22 03           a0 = 0x322c0
 23662: 33 03 c0 22 03           t1 = 0x322c0
 23667: 33 02 00 00 01           t0 = 0x10000
 23672: c8 23 09                 a2 = t1 + t0
 23675: 01                       fallthrough
      :                          @1771
 23676: 82 9a                    a3 = u64 [a2]
 23678: c8 5a 0b                 a4 = a3 + s0
 23681: ac ab 9d 03              jump @1821 if a4 <u a3
      :                          @1772
 23685: c8 4b 08                 a1 = a4 + t2
 23688: d8 b8 0c                 a5 = a1 <u a4
 23691: d8 82 08                 a1 = t0 <u a1
 23694: d4 c8 08                 a1 = a1 | a5
 23697: 52 08 8d 03              jump @1821 if a1 != 0
      :                          @1773
 23701: c9 b3 08                 a1 = t1 - a4
 23704: c8 28 08                 a1 = a1 + t0
 23707: 84 8c 07                 a5 = a1 & 0x7
 23710: c8 cb 0b                 a4 = a4 + a5
 23713: 01                       fallthrough
      :                          @1774
 23714: 82 96                    s1 = u64 [a2]
 23716: ab a6 d8                 jump @1771 if s1 != a3
      :                          @1775
 23719: 7b 9b                    u64 [a2] = a4
 23721: c9 c8 06                 s1 = a1 - a5
 23724: 64 67                    a0 = s1
 23726: 82 18 18                 a1 = u64 [sp + 0x18]
 23729: 64 59                    a2 = s0
 23731: 50 20 e2 01 36 ad 02     ra = 482, jump @13633
      :                          @1776 [@dyn 241]
 23738: 82 14 10                 t2 = u64 [sp + 0x10]
 23741: 82 17 28                 a0 = u64 [sp + 0x28]
 23744: 82 18 20                 a1 = u64 [sp + 0x20]
 23747: 7b 78 18                 u64 [a0 + 0x18] = a1
 23750: 7b 76 20                 u64 [a0 + 0x20] = s1
 23753: 7b 78 28                 u64 [a0 + 0x28] = a1
 23756: 33 07 c0 22 03           a0 = 0x322c0
 23761: 33 03 c0 22 03           t1 = 0x322c0
 23766: 33 02 00 00 01           t0 = 0x10000
 23771: c8 23 09                 a2 = t1 + t0
 23774: 01                       fallthrough
      :                          @1777
 23775: 82 9a                    a3 = u64 [a2]
 23777: c8 5a 0b                 a4 = a3 + s0
 23780: ac ab 3a 03              jump @1821 if a4 <u a3
      :                          @1778
 23784: c8 4b 08                 a1 = a4 + t2
 23787: d8 b8 0c                 a5 = a1 <u a4
 23790: d8 82 08                 a1 = t0 <u a1
 23793: d4 c8 08                 a1 = a1 | a5
 23796: 52 08 2a 03              jump @1821 if a1 != 0
      :                          @1779
 23800: c9 b3 08                 a1 = t1 - a4
 23803: c8 28 08                 a1 = a1 + t0
 23806: 84 8c 07                 a5 = a1 & 0x7
 23809: c8 cb 0b                 a4 = a4 + a5
 23812: 01                       fallthrough
      :                          @1780
 23813: 82 96                    s1 = u64 [a2]
 23815: ab a6 d8                 jump @1777 if s1 != a3
      :                          @1781
 23818: 7b 9b                    u64 [a2] = a4
 23820: c9 c8 06                 s1 = a1 - a5
 23823: 64 67                    a0 = s1
 23825: 82 18 18                 a1 = u64 [sp + 0x18]
 23828: 64 59                    a2 = s0
 23830: 50 20 e4 01 d3 ac 02     ra = 484, jump @13633
      :                          @1782 [@dyn 242]
 23837: 82 14 10                 t2 = u64 [sp + 0x10]
 23840: 82 17 28                 a0 = u64 [sp + 0x28]
 23843: 82 18 20                 a1 = u64 [sp + 0x20]
 23846: 7b 78 30                 u64 [a0 + 0x30] = a1
 23849: 7b 76 38                 u64 [a0 + 0x38] = s1
 23852: 7b 78 40                 u64 [a0 + 0x40] = a1
 23855: 33 07 c0 22 03           a0 = 0x322c0
 23860: 33 03 c0 22 03           t1 = 0x322c0
 23865: 33 02 00 00 01           t0 = 0x10000
 23870: c8 23 09                 a2 = t1 + t0
 23873: 01                       fallthrough
      :                          @1783
 23874: 82 9a                    a3 = u64 [a2]
 23876: c8 5a 0b                 a4 = a3 + s0
 23879: ac ab d7 02              jump @1821 if a4 <u a3
      :                          @1784
 23883: c8 4b 08                 a1 = a4 + t2
 23886: d8 b8 0c                 a5 = a1 <u a4
 23889: d8 82 08                 a1 = t0 <u a1
 23892: d4 c8 08                 a1 = a1 | a5
 23895: 52 08 c7 02              jump @1821 if a1 != 0
      :                          @1785
 23899: c9 b3 08                 a1 = t1 - a4
 23902: c8 28 08                 a1 = a1 + t0
 23905: 84 8c 07                 a5 = a1 & 0x7
 23908: c8 cb 0b                 a4 = a4 + a5
 23911: 01                       fallthrough
      :                          @1786
 23912: 82 96                    s1 = u64 [a2]
 23914: ab a6 d8                 jump @1783 if s1 != a3
      :                          @1787
 23917: 7b 9b                    u64 [a2] = a4
 23919: c9 c8 06                 s1 = a1 - a5
 23922: 64 67                    a0 = s1
 23924: 82 18 18                 a1 = u64 [sp + 0x18]
 23927: 64 59                    a2 = s0
 23929: 50 20 e6 01 70 ac 02     ra = 486, jump @13633
      :                          @1788 [@dyn 243]
 23936: 82 14 10                 t2 = u64 [sp + 0x10]
 23939: 82 17 28                 a0 = u64 [sp + 0x28]
 23942: 82 18 20                 a1 = u64 [sp + 0x20]
 23945: 7b 78 48                 u64 [a0 + 0x48] = a1
 23948: 7b 76 50                 u64 [a0 + 0x50] = s1
 23951: 7b 78 58                 u64 [a0 + 0x58] = a1
 23954: 33 07 c0 22 03           a0 = 0x322c0
 23959: 33 03 c0 22 03           t1 = 0x322c0
 23964: 33 02 00 00 01           t0 = 0x10000
 23969: c8 23 09                 a2 = t1 + t0
 23972: 01                       fallthrough
      :                          @1789
 23973: 82 9a                    a3 = u64 [a2]
 23975: c8 5a 0b                 a4 = a3 + s0
 23978: ac ab 74 02              jump @1821 if a4 <u a3
      :                          @1790
 23982: c8 4b 08                 a1 = a4 + t2
 23985: d8 b8 0c                 a5 = a1 <u a4
 23988: d8 82 08                 a1 = t0 <u a1
 23991: d4 c8 08                 a1 = a1 | a5
 23994: 52 08 64 02              jump @1821 if a1 != 0
      :                          @1791
 23998: c9 b3 08                 a1 = t1 - a4
 24001: c8 28 08                 a1 = a1 + t0
 24004: 84 8c 07                 a5 = a1 & 0x7
 24007: c8 cb 0b                 a4 = a4 + a5
 24010: 01                       fallthrough
      :                          @1792
 24011: 82 96                    s1 = u64 [a2]
 24013: ab a6 d8                 jump @1789 if s1 != a3
      :                          @1793
 24016: 7b 9b                    u64 [a2] = a4
 24018: c9 c8 06                 s1 = a1 - a5
 24021: 64 67                    a0 = s1
 24023: 82 18 18                 a1 = u64 [sp + 0x18]
 24026: 64 59                    a2 = s0
 24028: 50 20 e8 01 0d ac 02     ra = 488, jump @13633
      :                          @1794 [@dyn 244]
 24035: 82 14 10                 t2 = u64 [sp + 0x10]
 24038: 82 17 28                 a0 = u64 [sp + 0x28]
 24041: 82 18 20                 a1 = u64 [sp + 0x20]
 24044: 7b 78 60                 u64 [a0 + 0x60] = a1
 24047: 7b 76 68                 u64 [a0 + 0x68] = s1
 24050: 7b 78 70                 u64 [a0 + 0x70] = a1
 24053: 33 07 c0 22 03           a0 = 0x322c0
 24058: 33 03 c0 22 03           t1 = 0x322c0
 24063: 33 02 00 00 01           t0 = 0x10000
 24068: c8 23 09                 a2 = t1 + t0
 24071: 01                       fallthrough
      :                          @1795
 24072: 82 9a                    a3 = u64 [a2]
 24074: c8 5a 0b                 a4 = a3 + s0
 24077: ac ab 11 02              jump @1821 if a4 <u a3
      :                          @1796
 24081: c8 4b 08                 a1 = a4 + t2
 24084: d8 b8 0c                 a5 = a1 <u a4
 24087: d8 82 08                 a1 = t0 <u a1
 24090: d4 c8 08                 a1 = a1 | a5
 24093: 52 08 01 02              jump @1821 if a1 != 0
      :                          @1797
 24097: c9 b3 08                 a1 = t1 - a4
 24100: c8 28 08                 a1 = a1 + t0
 24103: 84 8c 07                 a5 = a1 & 0x7
 24106: c8 cb 0b                 a4 = a4 + a5
 24109: 01                       fallthrough
      :                          @1798
 24110: 82 96                    s1 = u64 [a2]
 24112: ab a6 d8                 jump @1795 if s1 != a3
      :                          @1799
 24115: 7b 9b                    u64 [a2] = a4
 24117: c9 c8 06                 s1 = a1 - a5
 24120: 64 67                    a0 = s1
 24122: 82 18 18                 a1 = u64 [sp + 0x18]
 24125: 64 59                    a2 = s0
 24127: 50 20 ea 01 aa ab 02     ra = 490, jump @13633
      :                          @1800 [@dyn 245]
 24134: 82 14 10                 t2 = u64 [sp + 0x10]
 24137: 82 17 28                 a0 = u64 [sp + 0x28]
 24140: 82 18 20                 a1 = u64 [sp + 0x20]
 24143: 7b 78 78                 u64 [a0 + 0x78] = a1
 24146: 7b 76 80 00              u64 [a0 + 0x80] = s1
 24150: 7b 78 88 00              u64 [a0 + 0x88] = a1
 24154: 33 07 c0 22 03           a0 = 0x322c0
 24159: 33 03 c0 22 03           t1 = 0x322c0
 24164: 33 02 00 00 01           t0 = 0x10000
 24169: c8 23 09                 a2 = t1 + t0
 24172: 01                       fallthrough
      :                          @1801
 24173: 82 9a                    a3 = u64 [a2]
 24175: c8 5a 0b                 a4 = a3 + s0
 24178: ac ab ac 01              jump @1821 if a4 <u a3
      :                          @1802
 24182: c8 4b 08                 a1 = a4 + t2
 24185: d8 b8 0c                 a5 = a1 <u a4
 24188: d8 82 08                 a1 = t0 <u a1
 24191: d4 c8 08                 a1 = a1 | a5
 24194: 52 08 9c 01              jump @1821 if a1 != 0
      :                          @1803
 24198: c9 b3 08                 a1 = t1 - a4
 24201: c8 28 08                 a1 = a1 + t0
 24204: 84 8c 07                 a5 = a1 & 0x7
 24207: c8 cb 0b                 a4 = a4 + a5
 24210: 01                       fallthrough
      :                          @1804
 24211: 82 96                    s1 = u64 [a2]
 24213: ab a6 d8                 jump @1801 if s1 != a3
      :                          @1805
 24216: 7b 9b                    u64 [a2] = a4
 24218: c9 c8 06                 s1 = a1 - a5
 24221: 64 67                    a0 = s1
 24223: 82 18 18                 a1 = u64 [sp + 0x18]
 24226: 64 59                    a2 = s0
 24228: 50 20 ec 01 45 ab 02     ra = 492, jump @13633
      :                          @1806 [@dyn 246]
 24235: 82 14 10                 t2 = u64 [sp + 0x10]
 24238: 82 17 28                 a0 = u64 [sp + 0x28]
 24241: 82 18 20                 a1 = u64 [sp + 0x20]
 24244: 7b 78 90 00              u64 [a0 + 0x90] = a1
 24248: 7b 76 98 00              u64 [a0 + 0x98] = s1
 24252: 7b 78 a0 00              u64 [a0 + 0xa0] = a1
 24256: 33 07 c0 22 03           a0 = 0x322c0
 24261: 33 03 c0 22 03           t1 = 0x322c0
 24266: 33 02 00 00 01           t0 = 0x10000
 24271: c8 23 09                 a2 = t1 + t0
 24274: 01                       fallthrough
      :                          @1807
 24275: 82 9a                    a3 = u64 [a2]
 24277: c8 5a 0b                 a4 = a3 + s0
 24280: ac ab 46 01              jump @1821 if a4 <u a3
      :                          @1808
 24284: c8 4b 08                 a1 = a4 + t2
 24287: d8 b8 0c                 a5 = a1 <u a4
 24290: d8 82 08                 a1 = t0 <u a1
 24293: d4 c8 08                 a1 = a1 | a5
 24296: 52 08 36 01              jump @1821 if a1 != 0
      :                          @1809
 24300: c9 b3 08                 a1 = t1 - a4
 24303: c8 28 08                 a1 = a1 + t0
 24306: 84 8c 07                 a5 = a1 & 0x7
 24309: c8 cb 0b                 a4 = a4 + a5
 24312: 01                       fallthrough
      :                          @1810
 24313: 82 96                    s1 = u64 [a2]
 24315: ab a6 d8                 jump @1807 if s1 != a3
      :                          @1811
 24318: 7b 9b                    u64 [a2] = a4
 24320: c9 c8 06                 s1 = a1 - a5
 24323: 64 67                    a0 = s1
 24325: 82 18 18                 a1 = u64 [sp + 0x18]
 24328: 64 59                    a2 = s0
 24330: 50 20 ee 01 df aa 02     ra = 494, jump @13633
      :                          @1812 [@dyn 247]
 24337: 82 14 10                 t2 = u64 [sp + 0x10]
 24340: 82 17 28                 a0 = u64 [sp + 0x28]
 24343: 82 18 20                 a1 = u64 [sp + 0x20]
 24346: 7b 78 a8 00              u64 [a0 + 0xa8] = a1
 24350: 7b 76 b0 00              u64 [a0 + 0xb0] = s1
 24354: 7b 78 b8 00              u64 [a0 + 0xb8] = a1
 24358: 33 07 c0 22 03           a0 = 0x322c0
 24363: 33 03 c0 22 03           t1 = 0x322c0
 24368: 33 02 00 00 01           t0 = 0x10000
 24373: c8 23 09                 a2 = t1 + t0
 24376: 01                       fallthrough
      :                          @1813
 24377: 82 9a                    a3 = u64 [a2]
 24379: c8 5a 0b                 a4 = a3 + s0
 24382: ac ab e0 00              jump @1821 if a4 <u a3
      :                          @1814
 24386: c8 4b 08                 a1 = a4 + t2
 24389: d8 b8 0c                 a5 = a1 <u a4
 24392: d8 82 08                 a1 = t0 <u a1
 24395: d4 c8 08                 a1 = a1 | a5
 24398: 52 08 d0 00              jump @1821 if a1 != 0
      :                          @1815
 24402: c9 b3 08                 a1 = t1 - a4
 24405: c8 28 08                 a1 = a1 + t0
 24408: 84 8c 07                 a5 = a1 & 0x7
 24411: c8 cb 0b                 a4 = a4 + a5
 24414: 01                       fallthrough
      :                          @1816
 24415: 82 96                    s1 = u64 [a2]
 24417: ab a6 d8                 jump @1813 if s1 != a3
      :                          @1817
 24420: 7b 9b                    u64 [a2] = a4
 24422: c9 c8 06                 s1 = a1 - a5
 24425: 64 67                    a0 = s1
 24427: 82 18 18                 a1 = u64 [sp + 0x18]
 24430: 64 59                    a2 = s0
 24432: 50 20 f0 01 79 aa 02     ra = 496, jump @13633
      :                          @1818 [@dyn 248]
 24439: 82 1b 28                 a4 = u64 [sp + 0x28]
 24442: 82 15 20                 s0 = u64 [sp + 0x20]
 24445: 7b b5 c0 00              u64 [a4 + 0xc0] = s0
 24449: 7b b6 c8 00              u64 [a4 + 0xc8] = s1
 24453: 82 17                    a0 = u64 [sp]
 24455: 82 19 08                 a2 = u64 [sp + 0x8]
 24458: 28 63                    jump @1820
      :                          @1819
 24460: 49 0b                    u64 [a4 + 0] = 0
 24462: 49 1b 08 08              u64 [a4 + 8] = 0x8
 24466: 49 1b 10                 u64 [a4 + 16] = 0
 24469: 49 1b 18                 u64 [a4 + 24] = 0
 24472: 49 1b 20 08              u64 [a4 + 32] = 0x8
 24476: 49 1b 28                 u64 [a4 + 40] = 0
 24479: 49 1b 30                 u64 [a4 + 48] = 0
 24482: 49 1b 38 08              u64 [a4 + 56] = 0x8
 24486: 49 1b 40                 u64 [a4 + 64] = 0
 24489: 49 1b 48                 u64 [a4 + 72] = 0
 24492: 49 1b 50 08              u64 [a4 + 80] = 0x8
 24496: 49 1b 58                 u64 [a4 + 88] = 0
 24499: 49 1b 60                 u64 [a4 + 96] = 0
 24502: 49 1b 68 08              u64 [a4 + 104] = 0x8
 24506: 49 1b 70                 u64 [a4 + 112] = 0
 24509: 49 1b 78                 u64 [a4 + 120] = 0
 24512: 49 2b 80 00 08           u64 [a4 + 128] = 0x8
 24517: 49 2b 90 00              u64 [a4 + 144] = 0
 24521: 49 2b 88 00              u64 [a4 + 136] = 0
 24525: 49 2b 98 00 08           u64 [a4 + 152] = 0x8
 24530: 49 2b a8 00              u64 [a4 + 168] = 0
 24534: 49 2b a0 00              u64 [a4 + 160] = 0
 24538: 49 2b b0 00 08           u64 [a4 + 176] = 0x8
 24543: 49 2b c0 00              u64 [a4 + 192] = 0
 24547: 49 2b b8 00              u64 [a4 + 184] = 0
 24551: 49 2b c8 00 08           u64 [a4 + 200] = 0x8
 24556: 01                       fallthrough
      :                          @1820
 24557: 82 9a                    a3 = u64 [a2]
 24559: 82 98 08                 a1 = u64 [a2 + 0x8]
 24562: 82 99 10                 a2 = u64 [a2 + 0x10]
 24565: 7b b5 d0 00              u64 [a4 + 0xd0] = s0
 24569: 7b ba d8 00              u64 [a4 + 0xd8] = a3
 24573: 7b b8 e0 00              u64 [a4 + 0xe0] = a1
 24577: 7b b9 e8 00              u64 [a4 + 0xe8] = a2
 24581: 33 08 0a                 a1 = 0xa
 24584: 7b 78                    u64 [a0] = a1
 24586: 7b 7b 08                 u64 [a0 + 0x8] = a4
 24589: 7b 78 10                 u64 [a0 + 0x10] = a1
 24592: 82 10 40                 ra = u64 [sp + 0x40]
 24595: 82 15 38                 s0 = u64 [sp + 0x38]
 24598: 82 16 30                 s1 = u64 [sp + 0x30]
 24601: 95 11 48                 sp = sp + 0x48
 24604: 32 00                    ret
      :                          @1821
 24606: 00                       trap
      :                          @1822
 24607: 00                       trap
      :                          @1823
 24608: 00                       trap
      :                          @1824
 24609: 82 9a                    a3 = u64 [a2]
 24611: 95 ab f0 00              a4 = a3 + 0xf0
 24615: ac ab 0f 04              jump @1880 if a4 <u a3
      :                          @1825
 24619: 95 b8 08                 a1 = a4 + 0x8
 24622: d8 b8 0c                 a5 = a1 <u a4
 24625: d8 82 08                 a1 = t0 <u a1
 24628: d4 c8 08                 a1 = a1 | a5
 24631: 52 08 ff 03              jump @1880 if a1 != 0
      :                          @1826
 24635: c9 b7 08                 a1 = a0 - a4
 24638: c8 28 08                 a1 = a1 + t0
 24641: 84 8c 07                 a5 = a1 & 0x7
 24644: c8 cb 0b                 a4 = a4 + a5
 24647: 01                       fallthrough
      :                          @1827
 24648: 82 95                    s0 = u64 [a2]
 24650: ab a5 d7                 jump @1824 if s0 != a3
      :                          @1828
 24653: 7b 9b                    u64 [a2] = a4
 24655: 01                       fallthrough
      :                          @1829
 24656: 82 19 18                 a2 = u64 [sp + 0x18]
 24659: 82 95 10                 s0 = u64 [a2 + 0x10]
 24662: c9 c8 0b                 a4 = a1 - a5
 24665: 51 05 47 03              jump @1877 if s0 == 0
      :                          @1830
 24669: 57 05 da 03              jump @1881 if s0 <s 0
      :                          @1831
 24673: 7b 1b 28                 u64 [sp + 0x28] = a4
 24676: 82 97 08                 a0 = u64 [a2 + 0x8]
 24679: 7b 17 20                 u64 [sp + 0x20] = a0
 24682: 85 56 ff                 s1 = s0 ^ 0xffffffffffffffff
 24685: 98 66 3f                 s1 = s1 >> 0x3f
 24688: 33 09 c0 22 03           a2 = 0x322c0
 24693: 33 08 00 00 01           a1 = 0x10000
 24698: c8 89 09                 a2 = a2 + a1
 24701: 01                       fallthrough
      :                          @1832
 24702: 82 9a                    a3 = u64 [a2]
 24704: c8 5a 07                 a0 = a3 + s0
 24707: ac a7 b2 03              jump @1879 if a0 <u a3
      :                          @1833
 24711: c8 67 0b                 a4 = a0 + s1
 24714: d8 7b 0c                 a5 = a4 <u a0
 24717: d8 b8 0b                 a4 = a1 <u a4
 24720: d4 cb 0b                 a4 = a4 | a5
 24723: 52 0b a2 03              jump @1879 if a4 != 0
      :                          @1834
 24727: 82 9b                    a4 = u64 [a2]
 24729: ab ab e5                 jump @1832 if a4 != a3
      :                          @1835
 24732: 7b 97                    u64 [a2] = a0
 24734: 33 0c                    a5 = 0
 24736: 33 09 c0 22 03           a2 = 0x322c0
 24741: 7b 19 08                 u64 [sp + 0x8] = a2
 24744: 95 98 00 00 01           a1 = a2 + 0x10000
 24749: c9 78 07                 a0 = a1 - a0
 24752: 7b 17                    u64 [sp] = a0
 24754: 82 18 20                 a1 = u64 [sp + 0x20]
 24757: 64 59                    a2 = s0
 24759: 50 20 f2 01 32 a9 02     ra = 498, jump @13633
      :                          @1836 [@dyn 249]
 24766: 33 0c 00 00 01           a5 = 0x10000
 24771: 82 17 28                 a0 = u64 [sp + 0x28]
 24774: 7b 75                    u64 [a0] = s0
 24776: 82 18                    a1 = u64 [sp]
 24778: 7b 78 08                 u64 [a0 + 0x8] = a1
 24781: 7b 75 10                 u64 [a0 + 0x10] = s0
 24784: 82 18 08                 a1 = u64 [sp + 0x8]
 24787: c8 c8 08                 a1 = a1 + a5
 24790: 01                       fallthrough
      :                          @1837
 24791: 82 89                    a2 = u64 [a1]
 24793: c8 59 07                 a0 = a2 + s0
 24796: ac 97 59 03              jump @1879 if a0 <u a2
      :                          @1838
 24800: c8 67 0a                 a3 = a0 + s1
 24803: d8 7a 0b                 a4 = a3 <u a0
 24806: d8 ac 0a                 a3 = a5 <u a3
 24809: d4 ba 0a                 a3 = a3 | a4
 24812: 52 0a 49 03              jump @1879 if a3 != 0
      :                          @1839
 24816: 82 8a                    a3 = u64 [a1]
 24818: ab 9a e5                 jump @1837 if a3 != a2
      :                          @1840
 24821: 7b 87                    u64 [a1] = a0
 24823: 33 0b                    a4 = 0
 24825: 33 09 c0 22 03           a2 = 0x322c0
 24830: 7b 19 08                 u64 [sp + 0x8] = a2
 24833: 95 98 00 00 01           a1 = a2 + 0x10000
 24838: c9 78 07                 a0 = a1 - a0
 24841: 7b 17                    u64 [sp] = a0
 24843: 82 18 20                 a1 = u64 [sp + 0x20]
 24846: 64 59                    a2 = s0
 24848: 50 20 f4 01 d9 a8 02     ra = 500, jump @13633
      :                          @1841 [@dyn 250]
 24855: 33 0c 00 00 01           a5 = 0x10000
 24860: 82 17 28                 a0 = u64 [sp + 0x28]
 24863: 7b 75 18                 u64 [a0 + 0x18] = s0
 24866: 82 18                    a1 = u64 [sp]
 24868: 7b 78 20                 u64 [a0 + 0x20] = a1
 24871: 7b 75 28                 u64 [a0 + 0x28] = s0
 24874: 82 18 08                 a1 = u64 [sp + 0x8]
 24877: c8 c8 08                 a1 = a1 + a5
 24880: 01                       fallthrough
      :                          @1842
 24881: 82 89                    a2 = u64 [a1]
 24883: c8 59 07                 a0 = a2 + s0
 24886: ac 97 ff 02              jump @1879 if a0 <u a2
      :                          @1843
 24890: c8 67 0a                 a3 = a0 + s1
 24893: d8 7a 0b                 a4 = a3 <u a0
 24896: d8 ac 0a                 a3 = a5 <u a3
 24899: d4 ba 0a                 a3 = a3 | a4
 24902: 52 0a ef 02              jump @1879 if a3 != 0
      :                          @1844
 24906: 82 8a                    a3 = u64 [a1]
 24908: ab 9a e5                 jump @1842 if a3 != a2
      :                          @1845
 24911: 7b 87                    u64 [a1] = a0
 24913: 33 0b                    a4 = 0
 24915: 33 09 c0 22 03           a2 = 0x322c0
 24920: 7b 19 08                 u64 [sp + 0x8] = a2
 24923: 95 98 00 00 01           a1 = a2 + 0x10000
 24928: c9 78 07                 a0 = a1 - a0
 24931: 7b 17                    u64 [sp] = a0
 24933: 82 18 20                 a1 = u64 [sp + 0x20]
 24936: 64 59                    a2 = s0
 24938: 50 20 f6 01 7f a8 02     ra = 502, jump @13633
      :                          @1846 [@dyn 251]
 24945: 33 0c 00 00 01           a5 = 0x10000
 24950: 82 17 28                 a0 = u64 [sp + 0x28]
 24953: 7b 75 30                 u64 [a0 + 0x30] = s0
 24956: 82 18                    a1 = u64 [sp]
 24958: 7b 78 38                 u64 [a0 + 0x38] = a1
 24961: 7b 75 40                 u64 [a0 + 0x40] = s0
 24964: 82 18 08                 a1 = u64 [sp + 0x8]
 24967: c8 c8 08                 a1 = a1 + a5
 24970: 01                       fallthrough
      :                          @1847
 24971: 82 89                    a2 = u64 [a1]
 24973: c8 59 07                 a0 = a2 + s0
 24976: ac 97 a5 02              jump @1879 if a0 <u a2
      :                          @1848
 24980: c8 67 0a                 a3 = a0 + s1
 24983: d8 7a 0b                 a4 = a3 <u a0
 24986: d8 ac 0a                 a3 = a5 <u a3
 24989: d4 ba 0a                 a3 = a3 | a4
 24992: 52 0a 95 02              jump @1879 if a3 != 0
      :                          @1849
 24996: 82 8a                    a3 = u64 [a1]
 24998: ab 9a e5                 jump @1847 if a3 != a2
      :                          @1850
 25001: 7b 87                    u64 [a1] = a0
 25003: 33 0b                    a4 = 0
 25005: 33 09 c0 22 03           a2 = 0x322c0
 25010: 7b 19 08                 u64 [sp + 0x8] = a2
 25013: 95 98 00 00 01           a1 = a2 + 0x10000
 25018: c9 78 07                 a0 = a1 - a0
 25021: 7b 17                    u64 [sp] = a0
 25023: 82 18 20                 a1 = u64 [sp + 0x20]
 25026: 64 59                    a2 = s0
 25028: 50 20 f8 01 25 a8 02     ra = 504, jump @13633
      :                          @1851 [@dyn 252]
 25035: 33 0c 00 00 01           a5 = 0x10000
 25040: 82 17 28                 a0 = u64 [sp + 0x28]
 25043: 7b 75 48                 u64 [a0 + 0x48] = s0
 25046: 82 18                    a1 = u64 [sp]
 25048: 7b 78 50                 u64 [a0 + 0x50] = a1
 25051: 7b 75 58                 u64 [a0 + 0x58] = s0
 25054: 82 18 08                 a1 = u64 [sp + 0x8]
 25057: c8 c8 08                 a1 = a1 + a5
 25060: 01                       fallthrough
      :                          @1852
 25061: 82 89                    a2 = u64 [a1]
 25063: c8 59 07                 a0 = a2 + s0
 25066: ac 97 4b 02              jump @1879 if a0 <u a2
      :                          @1853
 25070: c8 67 0a                 a3 = a0 + s1
 25073: d8 7a 0b                 a4 = a3 <u a0
 25076: d8 ac 0a                 a3 = a5 <u a3
 25079: d4 ba 0a                 a3 = a3 | a4
 25082: 52 0a 3b 02              jump @1879 if a3 != 0
      :                          @1854
 25086: 82 8a                    a3 = u64 [a1]
 25088: ab 9a e5                 jump @1852 if a3 != a2
      :                          @1855
 25091: 7b 87                    u64 [a1] = a0
 25093: 33 0b                    a4 = 0
 25095: 33 09 c0 22 03           a2 = 0x322c0
 25100: 7b 19 08                 u64 [sp + 0x8] = a2
 25103: 95 98 00 00 01           a1 = a2 + 0x10000
 25108: c9 78 07                 a0 = a1 - a0
 25111: 7b 17                    u64 [sp] = a0
 25113: 82 18 20                 a1 = u64 [sp + 0x20]
 25116: 64 59                    a2 = s0
 25118: 50 20 fa 01 cb a7 02     ra = 506, jump @13633
      :                          @1856 [@dyn 253]
 25125: 33 0c 00 00 01           a5 = 0x10000
 25130: 82 17 28                 a0 = u64 [sp + 0x28]
 25133: 7b 75 60                 u64 [a0 + 0x60] = s0
 25136: 82 18                    a1 = u64 [sp]
 25138: 7b 78 68                 u64 [a0 + 0x68] = a1
 25141: 7b 75 70                 u64 [a0 + 0x70] = s0
 25144: 82 18 08                 a1 = u64 [sp + 0x8]
 25147: c8 c8 08                 a1 = a1 + a5
 25150: 01                       fallthrough
      :                          @1857
 25151: 82 89                    a2 = u64 [a1]
 25153: c8 59 07                 a0 = a2 + s0
 25156: ac 97 f1 01              jump @1879 if a0 <u a2
      :                          @1858
 25160: c8 67 0a                 a3 = a0 + s1
 25163: d8 7a 0b                 a4 = a3 <u a0
 25166: d8 ac 0a                 a3 = a5 <u a3
 25169: d4 ba 0a                 a3 = a3 | a4
 25172: 52 0a e1 01              jump @1879 if a3 != 0
      :                          @1859
 25176: 82 8a                    a3 = u64 [a1]
 25178: ab 9a e5                 jump @1857 if a3 != a2
      :                          @1860
 25181: 7b 87                    u64 [a1] = a0
 25183: 33 0b                    a4 = 0
 25185: 33 09 c0 22 03           a2 = 0x322c0
 25190: 7b 19 08                 u64 [sp + 0x8] = a2
 25193: 95 98 00 00 01           a1 = a2 + 0x10000
 25198: c9 78 07                 a0 = a1 - a0
 25201: 7b 17                    u64 [sp] = a0
 25203: 82 18 20                 a1 = u64 [sp + 0x20]
 25206: 64 59                    a2 = s0
 25208: 50 20 fc 01 71 a7 02     ra = 508, jump @13633
      :                          @1861 [@dyn 254]
 25215: 33 0c 00 00 01           a5 = 0x10000
 25220: 82 17 28                 a0 = u64 [sp + 0x28]
 25223: 7b 75 78                 u64 [a0 + 0x78] = s0
 25226: 82 18                    a1 = u64 [sp]
 25228: 7b 78 80 00              u64 [a0 + 0x80] = a1
 25232: 7b 75 88 00              u64 [a0 + 0x88] = s0
 25236: 82 18 08                 a1 = u64 [sp + 0x8]
 25239: c8 c8 08                 a1 = a1 + a5
 25242: 01                       fallthrough
      :                          @1862
 25243: 82 89                    a2 = u64 [a1]
 25245: c8 59 07                 a0 = a2 + s0
 25248: ac 97 95 01              jump @1879 if a0 <u a2
      :                          @1863
 25252: c8 67 0a                 a3 = a0 + s1
 25255: d8 7a 0b                 a4 = a3 <u a0
 25258: d8 ac 0a                 a3 = a5 <u a3
 25261: d4 ba 0a                 a3 = a3 | a4
 25264: 52 0a 85 01              jump @1879 if a3 != 0
      :                          @1864
 25268: 82 8a                    a3 = u64 [a1]
 25270: ab 9a e5                 jump @1862 if a3 != a2
      :                          @1865
 25273: 7b 87                    u64 [a1] = a0
 25275: 33 0b                    a4 = 0
 25277: 33 09 c0 22 03           a2 = 0x322c0
 25282: 7b 19 08                 u64 [sp + 0x8] = a2
 25285: 95 98 00 00 01           a1 = a2 + 0x10000
 25290: c9 78 07                 a0 = a1 - a0
 25293: 7b 17                    u64 [sp] = a0
 25295: 82 18 20                 a1 = u64 [sp + 0x20]
 25298: 64 59                    a2 = s0
 25300: 50 20 fe 01 15 a7 02     ra = 510, jump @13633
      :                          @1866 [@dyn 255]
 25307: 33 0c 00 00 01           a5 = 0x10000
 25312: 82 17 28                 a0 = u64 [sp + 0x28]
 25315: 7b 75 90 00              u64 [a0 + 0x90] = s0
 25319: 82 18                    a1 = u64 [sp]
 25321: 7b 78 98 00              u64 [a0 + 0x98] = a1
 25325: 7b 75 a0 00              u64 [a0 + 0xa0] = s0
 25329: 82 18 08                 a1 = u64 [sp + 0x8]
 25332: c8 c8 08                 a1 = a1 + a5
 25335: 01                       fallthrough
      :                          @1867
 25336: 82 89                    a2 = u64 [a1]
 25338: c8 59 07                 a0 = a2 + s0
 25341: ac 97 38 01              jump @1879 if a0 <u a2
      :                          @1868
 25345: c8 67 0a                 a3 = a0 + s1
 25348: d8 7a 0b                 a4 = a3 <u a0
 25351: d8 ac 0a                 a3 = a5 <u a3
 25354: d4 ba 0a                 a3 = a3 | a4
 25357: 52 0a 28 01              jump @1879 if a3 != 0
      :                          @1869
 25361: 82 8a                    a3 = u64 [a1]
 25363: ab 9a e5                 jump @1867 if a3 != a2
      :                          @1870
 25366: 7b 87                    u64 [a1] = a0
 25368: 33 0b                    a4 = 0
 25370: 33 09 c0 22 03           a2 = 0x322c0
 25375: 7b 19 08                 u64 [sp + 0x8] = a2
 25378: 95 98 00 00 01           a1 = a2 + 0x10000
 25383: c9 78 07                 a0 = a1 - a0
 25386: 7b 17                    u64 [sp] = a0
 25388: 82 18 20                 a1 = u64 [sp + 0x20]
 25391: 64 59                    a2 = s0
 25393: 50 20 00 02 b8 a6 02     ra = 512, jump @13633
      :                          @1871 [@dyn 256]
 25400: 33 0c 00 00 01           a5 = 0x10000
 25405: 82 17 28                 a0 = u64 [sp + 0x28]
 25408: 7b 75 a8 00              u64 [a0 + 0xa8] = s0
 25412: 82 18                    a1 = u64 [sp]
 25414: 7b 78 b0 00              u64 [a0 + 0xb0] = a1
 25418: 7b 75 b8 00              u64 [a0 + 0xb8] = s0
 25422: 82 18 08                 a1 = u64 [sp + 0x8]
 25425: c8 c8 08                 a1 = a1 + a5
 25428: 01                       fallthrough
      :                          @1872
 25429: 82 89                    a2 = u64 [a1]
 25431: c8 59 07                 a0 = a2 + s0
 25434: ac 97 db 00              jump @1879 if a0 <u a2
      :                          @1873
 25438: c8 67 0a                 a3 = a0 + s1
 25441: d8 7a 0b                 a4 = a3 <u a0
 25444: d8 ac 0a                 a3 = a5 <u a3
 25447: d4 ba 0a                 a3 = a3 | a4
 25450: 52 0a cb 00              jump @1879 if a3 != 0
      :                          @1874
 25454: 82 8a                    a3 = u64 [a1]
 25456: ab 9a e5                 jump @1872 if a3 != a2
      :                          @1875
 25459: 7b 87                    u64 [a1] = a0
 25461: 33 0b                    a4 = 0
 25463: 33 08 c0 22 04           a1 = 0x422c0
 25468: c9 78 06                 s1 = a1 - a0
 25471: 64 67                    a0 = s1
 25473: 82 18 20                 a1 = u64 [sp + 0x20]
 25476: 64 59                    a2 = s0
 25478: 50 20 02 02 63 a6 02     ra = 514, jump @13633
      :                          @1876 [@dyn 257]
 25485: 82 1b 28                 a4 = u64 [sp + 0x28]
 25488: 7b b5 c0 00              u64 [a4 + 0xc0] = s0
 25492: 7b b6 c8 00              u64 [a4 + 0xc8] = s1
 25496: 82 1a 10                 a3 = u64 [sp + 0x10]
 25499: 82 19 18                 a2 = u64 [sp + 0x18]
 25502: 28 66                    jump @1878
      :                          @1877
 25504: 49 0b                    u64 [a4 + 0] = 0
 25506: 49 1b 08 01              u64 [a4 + 8] = 0x1
 25510: 49 1b 10                 u64 [a4 + 16] = 0
 25513: 49 1b 18                 u64 [a4 + 24] = 0
 25516: 49 1b 20 01              u64 [a4 + 32] = 0x1
 25520: 49 1b 28                 u64 [a4 + 40] = 0
 25523: 49 1b 30                 u64 [a4 + 48] = 0
 25526: 49 1b 38 01              u64 [a4 + 56] = 0x1
 25530: 49 1b 40                 u64 [a4 + 64] = 0
 25533: 49 1b 48                 u64 [a4 + 72] = 0
 25536: 49 1b 50 01              u64 [a4 + 80] = 0x1
 25540: 49 1b 58                 u64 [a4 + 88] = 0
 25543: 49 1b 60                 u64 [a4 + 96] = 0
 25546: 49 1b 68 01              u64 [a4 + 104] = 0x1
 25550: 49 1b 70                 u64 [a4 + 112] = 0
 25553: 49 1b 78                 u64 [a4 + 120] = 0
 25556: 49 2b 80 00 01           u64 [a4 + 128] = 0x1
 25561: 49 2b 90 00              u64 [a4 + 144] = 0
 25565: 49 2b 88 00              u64 [a4 + 136] = 0
 25569: 49 2b 98 00 01           u64 [a4 + 152] = 0x1
 25574: 49 2b a8 00              u64 [a4 + 168] = 0
 25578: 49 2b a0 00              u64 [a4 + 160] = 0
 25582: 49 2b b0 00 01           u64 [a4 + 176] = 0x1
 25587: 49 2b c0 00              u64 [a4 + 192] = 0
 25591: 49 2b b8 00              u64 [a4 + 184] = 0
 25595: 49 2b c8 00 01           u64 [a4 + 200] = 0x1
 25600: 82 1a 10                 a3 = u64 [sp + 0x10]
 25603: 01                       fallthrough
      :                          @1878
 25604: 82 97                    a0 = u64 [a2]
 25606: 82 98 08                 a1 = u64 [a2 + 0x8]
 25609: 82 99 10                 a2 = u64 [a2 + 0x10]
 25612: 7b b5 d0 00              u64 [a4 + 0xd0] = s0
 25616: 7b b7 d8 00              u64 [a4 + 0xd8] = a0
 25620: 7b b8 e0 00              u64 [a4 + 0xe0] = a1
 25624: 7b b9 e8 00              u64 [a4 + 0xe8] = a2
 25628: 33 07 0a                 a0 = 0xa
 25631: 7b a7                    u64 [a3] = a0
 25633: 7b ab 08                 u64 [a3 + 0x8] = a4
 25636: 7b a7 10                 u64 [a3 + 0x10] = a0
 25639: 82 10 40                 ra = u64 [sp + 0x40]
 25642: 82 15 38                 s0 = u64 [sp + 0x38]
 25645: 82 16 30                 s1 = u64 [sp + 0x30]
 25648: 95 11 48                 sp = sp + 0x48
 25651: 32 00                    ret
      :                          @1879
 25653: 00                       trap
      :                          @1880
 25654: 00                       trap
      :                          @1881
 25655: 00                       trap
      :                          @1882
 25656: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 25659: 7b 10 18                 u64 [sp + 0x18] = ra
 25662: 7b 15 10                 u64 [sp + 0x10] = s0
 25665: 7b 16 08                 u64 [sp + 0x8] = s1
 25668: 64 85                    s0 = a1
 25670: 7b 17                    u64 [sp] = a0
 25672: 33 09 c0 22 03           a2 = 0x322c0
 25677: 33 07 00 00 01           a0 = 0x10000
 25682: c8 79 09                 a2 = a2 + a0
 25685: 01                       fallthrough
      :                          @1883
 25686: 82 9a                    a3 = u64 [a2]
 25688: c8 5a 08                 a1 = a3 + s0
 25691: ac a8 48                 jump @1888 if a1 <u a3
      :                          @1884
 25694: 95 8b 01                 a4 = a1 + 0x1
 25697: 88 bc 01                 a5 = a4 <u 0x1
 25700: d8 b7 0b                 a4 = a0 <u a4
 25703: d4 cb 0b                 a4 = a4 | a5
 25706: 52 0b 39                 jump @1888 if a4 != 0
      :                          @1885
 25709: 82 9b                    a4 = u64 [a2]
 25711: ab ab e7                 jump @1883 if a4 != a3
      :                          @1886
 25714: 7b 98                    u64 [a2] = a1
 25716: 33 0c                    a5 = 0
 25718: 33 06 c0 22 04           s1 = 0x422c0
 25723: c9 86 06                 s1 = s1 - a1
 25726: 64 67                    a0 = s1
 25728: 33 08                    a1 = 0
 25730: 64 59                    a2 = s0
 25732: 50 20 04 02 92 a7 02     ra = 516, jump @13687
      :                          @1887 [@dyn 258]
 25739: 82 17                    a0 = u64 [sp]
 25741: 7b 75                    u64 [a0] = s0
 25743: 7b 76 08                 u64 [a0 + 0x8] = s1
 25746: 7b 75 10                 u64 [a0 + 0x10] = s0
 25749: 82 10 18                 ra = u64 [sp + 0x18]
 25752: 82 15 10                 s0 = u64 [sp + 0x10]
 25755: 82 16 08                 s1 = u64 [sp + 0x8]
 25758: 95 11 20                 sp = sp + 0x20
 25761: 32 00                    ret
      :                          @1888
 25763: 00                       trap
      :                          @1889
 25764: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 25767: 7b 10 20                 u64 [sp + 0x20] = ra
 25770: 7b 15 18                 u64 [sp + 0x18] = s0
 25773: 7b 16 10                 u64 [sp + 0x10] = s1
 25776: 64 90                    ra = a2
 25778: 7b 17 08                 u64 [sp + 0x8] = a0
 25781: 97 99 03                 a2 = a2 << 0x3
 25784: 51 08 60                 jump @1898 if a1 == 0
      :                          @1890
 25787: 33 03 c0 22 03           t1 = 0x322c0
 25792: 33 02 00 00 01           t0 = 0x10000
 25797: c8 23 04                 t2 = t1 + t0
 25800: 01                       fallthrough
      :                          @1891
 25801: 82 46                    s1 = u64 [t2]
 25803: c8 96 0c                 a5 = s1 + a2
 25806: ac 6c b4 00              jump @1906 if a5 <u s1
      :                          @1892
 25810: 95 c7 08                 a0 = a5 + 0x8
 25813: d8 c7 0a                 a3 = a0 <u a5
 25816: d8 72 07                 a0 = t0 <u a0
 25819: d4 a7 07                 a0 = a0 | a3
 25822: 52 07 a4 00              jump @1906 if a0 != 0
      :                          @1893
 25826: c9 c3 07                 a0 = t1 - a5
 25829: c8 27 07                 a0 = a0 + t0
 25832: 84 7a 07                 a3 = a0 & 0x7
 25835: c8 ac 0c                 a5 = a5 + a3
 25838: 01                       fallthrough
      :                          @1894
 25839: 82 45                    s0 = u64 [t2]
 25841: ab 65 d8                 jump @1891 if s0 != s1
      :                          @1895
 25844: 7b 4c                    u64 [t2] = a5
 25846: 33 0b                    a4 = 0
 25848: c9 a7 07                 a0 = a0 - a3
 25851: 95 09 ff                 a2 = ra + 0xffffffffffffffff
 25854: 64 7a                    a3 = a0
 25856: 01                       fallthrough
      :                          @1896
 25857: 7b a8                    u64 [a3] = a1
 25859: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 25862: 95 aa 08                 a3 = a3 + 0x8
 25865: 52 09 f8                 jump @1896 if a2 != 0
      :                          @1897
 25868: 7b a8                    u64 [a3] = a1
 25870: 82 18 08                 a1 = u64 [sp + 0x8]
 25873: 7b 80                    u64 [a1] = ra
 25875: 7b 87 08                 u64 [a1 + 0x8] = a0
 25878: 28 5b                    jump @1905
      :                          @1898
 25880: 7b 10                    u64 [sp] = ra
 25882: 33 07 c0 22 03           a0 = 0x322c0
 25887: 33 03 c0 22 03           t1 = 0x322c0
 25892: 33 02 00 00 01           t0 = 0x10000
 25897: c8 23 0a                 a3 = t1 + t0
 25900: 01                       fallthrough
      :                          @1899
 25901: 82 ab                    a4 = u64 [a3]
 25903: c8 9b 0c                 a5 = a4 + a2
 25906: ac bc 50                 jump @1906 if a5 <u a4
      :                          @1900
 25909: 95 c8 08                 a1 = a5 + 0x8
 25912: d8 c8 06                 s1 = a1 <u a5
 25915: d8 82 08                 a1 = t0 <u a1
 25918: d4 68 08                 a1 = a1 | s1
 25921: 52 08 41                 jump @1906 if a1 != 0
      :                          @1901
 25924: c9 c3 06                 s1 = t1 - a5
 25927: c8 26 06                 s1 = s1 + t0
 25930: 84 68 07                 a1 = s1 & 0x7
 25933: c8 8c 0c                 a5 = a5 + a1
 25936: 01                       fallthrough
      :                          @1902
 25937: 82 a5                    s0 = u64 [a3]
 25939: ab b5 da                 jump @1899 if s0 != a4
      :                          @1903
 25942: 7b ac                    u64 [a3] = a5
 25944: c9 86 06                 s1 = s1 - a1
 25947: 64 67                    a0 = s1
 25949: 33 08                    a1 = 0
 25951: 50 20 06 02 b7 a6 02     ra = 518, jump @13687
      :                          @1904 [@dyn 259]
 25958: 82 10                    ra = u64 [sp]
 25960: 82 18 08                 a1 = u64 [sp + 0x8]
 25963: 7b 80                    u64 [a1] = ra
 25965: 7b 86 08                 u64 [a1 + 0x8] = s1
 25968: 01                       fallthrough
      :                          @1905
 25969: 7b 80 10                 u64 [a1 + 0x10] = ra
 25972: 82 10 20                 ra = u64 [sp + 0x20]
 25975: 82 15 18                 s0 = u64 [sp + 0x18]
 25978: 82 16 10                 s1 = u64 [sp + 0x10]
 25981: 95 11 28                 sp = sp + 0x28
 25984: 32 00                    ret
      :                          @1906
 25986: 00                       trap
      :                          @1907
 25987: 95 11 98                 sp = sp + 0xffffffffffffff98
 25990: 7b 10 60                 u64 [sp + 0x60] = ra
 25993: 7b 15 58                 u64 [sp + 0x58] = s0
 25996: 7b 16 50                 u64 [sp + 0x50] = s1
 25999: 64 70                    ra = a0
 26001: 51 09 14 01              jump @1926 if a2 == 0
      :                          @1908
 26005: 7b 18 10                 u64 [sp + 0x10] = a1
 26008: 3a 07 28 10 03           a0 = u64 [0x31028]
 26013: ae 79 8a 01              jump @1940 if a2 >=u a0
      :                          @1909
 26017: d8 79 02                 t0 = a2 <u a0
 26020: 7b 19 30                 u64 [sp + 0x30] = a2
 26023: 96 97 18                 a0 = a2 * 0x18
 26026: 97 22 03                 t0 = t0 << 0x3
 26029: 33 04 c0 22 03           t2 = 0x322c0
 26034: 33 03 00 00 01           t1 = 0x10000
 26039: c8 34 0b                 a4 = t2 + t1
 26042: 01                       fallthrough
      :                          @1910
 26043: 82 b6                    s1 = u64 [a4]
 26045: c8 76 0c                 a5 = s1 + a0
 26048: ac 6c 66 01              jump @1939 if a5 <u s1
      :                          @1911
 26052: c8 2c 0a                 a3 = a5 + t0
 26055: d8 ca 05                 s0 = a3 <u a5
 26058: d8 a3 0a                 a3 = t1 <u a3
 26061: d4 5a 0a                 a3 = a3 | s0
 26064: 52 0a 56 01              jump @1939 if a3 != 0
      :                          @1912
 26068: c9 c4 05                 s0 = t2 - a5
 26071: c8 35 05                 s0 = s0 + t1
 26074: 84 5a 07                 a3 = s0 & 0x7
 26077: c8 ac 0c                 a5 = a5 + a3
 26080: 01                       fallthrough
      :                          @1913
 26081: 82 b8                    a1 = u64 [a4]
 26083: ab 68 d8                 jump @1910 if a1 != s1
      :                          @1914
 26086: 7b bc                    u64 [a4] = a5
 26088: 01                       fallthrough
      :                          @1915
 26089: c9 a5 05                 s0 = s0 - a3
 26092: 33 07 01                 a0 = 0x1
 26095: 64 53                    t1 = s0
 26097: 82 19 30                 a2 = u64 [sp + 0x30]
 26100: 82 1a 10                 a3 = u64 [sp + 0x10]
 26103: 53 19 02 08 01           jump @1937 if a2 <u 2
      :                          @1916
 26108: 82 ab 10                 a4 = u64 [a3 + 0x10]
 26111: 51 0b e3 00              jump @1934 if a4 == 0
      :                          @1917
 26115: 7b 15 08                 u64 [sp + 0x8] = s0
 26118: 7b 10                    u64 [sp] = ra
 26120: 57 0b 1f 01              jump @1940 if a4 <s 0
      :                          @1918
 26124: 82 a7 08                 a0 = u64 [a3 + 0x8]
 26127: 7b 17 20                 u64 [sp + 0x20] = a0
 26130: 85 b6 ff                 s1 = a4 ^ 0xffffffffffffffff
 26133: 98 66 3f                 s1 = s1 >> 0x3f
 26136: 33 05 c0 22 03           s0 = 0x322c0
 26141: 33 0c 00 00 01           a5 = 0x10000
 26146: 7b 15 18                 u64 [sp + 0x18] = s0
 26149: c8 c5 05                 s0 = s0 + a5
 26152: 82 13 08                 t1 = u64 [sp + 0x8]
 26155: 7b 1b 28                 u64 [sp + 0x28] = a4
 26158: 33 02 02                 t0 = 0x2
 26161: 28 06                    jump @1920
      :                          @1919
 26163: 95 22 01                 t0 = t0 + 0x1
 26166: 01                       fallthrough
      :                          @1920
 26167: 82 58                    a1 = u64 [s0]
 26169: c8 b8 07                 a0 = a1 + a4
 26172: ac 87 56 b2 02           jump @13935 if a0 <u a1
      :                          @1921
 26177: c8 67 09                 a2 = a0 + s1
 26180: d8 79 0a                 a3 = a2 <u a0
 26183: d8 9c 09                 a2 = a5 <u a2
 26186: d4 a9 09                 a2 = a2 | a3
 26189: 52 09 45 b2 02           jump @13935 if a2 != 0
      :                          @1922
 26194: 82 59                    a2 = u64 [s0]
 26196: ab 89 e3                 jump @1920 if a2 != a1
      :                          @1923
 26199: 7b 57                    u64 [s0] = a0
 26201: 82 18 18                 a1 = u64 [sp + 0x18]
 26204: c9 78 07                 a0 = a1 - a0
 26207: c8 c7 07                 a0 = a0 + a5
 26210: 7b 17 38                 u64 [sp + 0x38] = a0
 26213: 82 18 20                 a1 = u64 [sp + 0x20]
 26216: 64 b9                    a2 = a4
 26218: 7b 13 48                 u64 [sp + 0x48] = t1
 26221: 7b 12 40                 u64 [sp + 0x40] = t0
 26224: 50 20 08 02 79 a3 02     ra = 520, jump @13633
      :                          @1924 [@dyn 260]
 26231: 33 0c 00 00 01           a5 = 0x10000
 26236: 82 12 40                 t0 = u64 [sp + 0x40]
 26239: 82 1b 28                 a4 = u64 [sp + 0x28]
 26242: 82 13 48                 t1 = u64 [sp + 0x48]
 26245: 82 19 30                 a2 = u64 [sp + 0x30]
 26248: 7b 3b                    u64 [t1] = a4
 26250: 82 17 38                 a0 = u64 [sp + 0x38]
 26253: 7b 37 08                 u64 [t1 + 0x8] = a0
 26256: 7b 3b 10                 u64 [t1 + 0x10] = a4
 26259: 95 33 18                 t1 = t1 + 0x18
 26262: ab 92 9d                 jump @1919 if t0 != a2
      :                          @1925
 26265: 64 97                    a0 = a2
 26267: 82 10                    ra = u64 [sp]
 26269: 82 15 08                 s0 = u64 [sp + 0x8]
 26272: 82 1a 10                 a3 = u64 [sp + 0x10]
 26275: 28 5c                    jump @1937
      :                          @1926
 26277: 82 87                    a0 = u64 [a1]
 26279: 33 05 08                 s0 = 0x8
 26282: 51 07 66                 jump @1938 if a0 == 0
      :                          @1927
 26285: 56 37 00 00 01 2e        jump @1933 if a0 >u 65536
      :                          @1928
 26291: 82 88 08                 a1 = u64 [a1 + 0x8]
 26294: 33 0a c0 22 03           a3 = 0x322c0
 26299: 95 a5 00 00 01           s0 = a3 + 0x10000
 26304: 01                       fallthrough
      :                          @1929
 26305: 82 5a                    a3 = u64 [s0]
 26307: c9 a5 0b                 a4 = s0 - a3
 26310: ab 8b 15                 jump @1933 if a4 != a1
      :                          @1930
 26313: c9 7a 0b                 a4 = a3 - a0
 26316: 01                       fallthrough
      :                          @1931
 26317: 82 5c                    a5 = u64 [s0]
 26319: ab ac f2                 jump @1929 if a5 != a3
      :                          @1932
 26322: 7b 5b                    u64 [s0] = a4
 26324: 33 07                    a0 = 0
 26326: 33 05 08                 s0 = 0x8
 26329: 28 37                    jump @1938
      :                          @1933
 26331: 33 07                    a0 = 0
 26333: 33 05 08                 s0 = 0x8
 26336: 28 30                    jump @1938
      :                          @1934
 26338: 95 97 ff                 a0 = a2 + 0xffffffffffffffff
 26341: 33 08 01                 a1 = 0x1
 26344: 64 53                    t1 = s0
 26346: 01                       fallthrough
      :                          @1935
 26347: 49 03                    u64 [t1 + 0] = 0
 26349: 7b 38 08                 u64 [t1 + 0x8] = a1
 26352: 49 13 10                 u64 [t1 + 16] = 0
 26355: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 26358: 95 33 18                 t1 = t1 + 0x18
 26361: 52 07 f2                 jump @1935 if a0 != 0
      :                          @1936
 26364: 64 97                    a0 = a2
 26366: 01                       fallthrough
      :                          @1937
 26367: 82 a8 10                 a1 = u64 [a3 + 0x10]
 26370: 82 ab 08                 a4 = u64 [a3 + 0x8]
 26373: 82 aa                    a3 = u64 [a3]
 26375: 7b 38 10                 u64 [t1 + 0x10] = a1
 26378: 7b 3b 08                 u64 [t1 + 0x8] = a4
 26381: 7b 3a                    u64 [t1] = a3
 26383: 01                       fallthrough
      :                          @1938
 26384: 7b 09                    u64 [ra] = a2
 26386: 7b 05 08                 u64 [ra + 0x8] = s0
 26389: 7b 07 10                 u64 [ra + 0x10] = a0
 26392: 82 10 60                 ra = u64 [sp + 0x60]
 26395: 82 15 58                 s0 = u64 [sp + 0x58]
 26398: 82 16 50                 s1 = u64 [sp + 0x50]
 26401: 95 11 68                 sp = sp + 0x68
 26404: 32 00                    ret
      :                          @1939
 26406: 00                       trap
      :                          @1940
 26407: 00                       trap
      :                          @1941
 26408: 82 9a                    a3 = u64 [a2]
 26410: 95 a8 0a                 a1 = a3 + 0xa
 26413: ac a8 49                 jump @1946 if a1 <u a3
      :                          @1942
 26416: 95 8b 01                 a4 = a1 + 0x1
 26419: 88 bc 01                 a5 = a4 <u 0x1
 26422: d8 b7 0b                 a4 = a0 <u a4
 26425: d4 cb 0b                 a4 = a4 | a5
 26428: 52 0b 3a                 jump @1946 if a4 != 0
      :                          @1943
 26431: 82 9b                    a4 = u64 [a2]
 26433: ab ab e7                 jump @1941 if a4 != a3
      :                          @1944
 26436: 7b 98                    u64 [a2] = a1
 26438: 33 0c                    a5 = 0
 26440: 33 06 c0 22 04           s1 = 0x422c0
 26445: c9 86 06                 s1 = s1 - a1
 26448: 33 09 0a                 a2 = 0xa
 26451: 64 67                    a0 = s1
 26453: 33 08                    a1 = 0
 26455: 50 20 0a 02 bf a4 02     ra = 522, jump @13687
      :                          @1945 [@dyn 261]
 26462: 33 07 0a                 a0 = 0xa
 26465: 7b 57                    u64 [s0] = a0
 26467: 7b 56 08                 u64 [s0 + 0x8] = s1
 26470: 7b 57 10                 u64 [s0 + 0x10] = a0
 26473: 82 10 10                 ra = u64 [sp + 0x10]
 26476: 82 15 08                 s0 = u64 [sp + 0x8]
 26479: 82 16                    s1 = u64 [sp]
 26481: 95 11 18                 sp = sp + 0x18
 26484: 32 00                    ret
      :                          @1946
 26486: 00                       trap
      :                          @1947 [@dyn 262]
 26487: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 26490: 7b 10 38                 u64 [sp + 0x38] = ra
 26493: 7b 15 30                 u64 [sp + 0x30] = s0
 26496: 7b 16 28                 u64 [sp + 0x28] = s1
 26499: 64 86                    s1 = a1
 26501: 82 88 28                 a1 = u64 [a1 + 0x28]
 26504: 82 75 08                 s0 = u64 [a0 + 0x8]
 26507: 82 77 10                 a0 = u64 [a0 + 0x10]
 26510: 7b 17 08                 u64 [sp + 0x8] = a0
 26513: 82 67 20                 a0 = u64 [s1 + 0x20]
 26516: 82 8a 18                 a3 = u64 [a1 + 0x18]
 26519: 33 08 08 30 01           a1 = 0x13008
 26524: 33 09 01                 a2 = 0x1
 26527: b4 a0 02 0e 02           ra = 526, jump [a3]
      :                          @1948 [@dyn 263]
 26532: 7b 16 10                 u64 [sp + 0x10] = s1
 26535: 82 16 08                 s1 = u64 [sp + 0x8]
 26538: 78 17 18                 u8 [sp + 0x18] = a0
 26541: 46 11 19                 u8 [sp + 25] = 0
 26544: 51 06 31                 jump @1953 if s1 == 0
      :                          @1949
 26547: 97 66 04                 s1 = s1 << 0x4
 26550: 33 07 3e                 a0 = 0x3e
 26553: 7b 17                    u64 [sp] = a0
 26555: 01                       fallthrough
      :                          @1950
 26556: 95 57 10                 a0 = s0 + 0x10
 26559: 7b 17 08                 u64 [sp + 0x8] = a0
 26562: 7b 15 20                 u64 [sp + 0x20] = s0
 26565: 95 17 10                 a0 = sp + 0x10
 26568: 95 18 20                 a1 = sp + 0x20
 26571: 82 19                    a2 = u64 [sp]
 26573: 50 20 10 02 02 b2 02     ra = 528, jump @13952
      :                          @1951 [@dyn 264]
 26580: 95 66 f0                 s1 = s1 + 0xfffffffffffffff0
 26583: 82 15 08                 s0 = u64 [sp + 0x8]
 26586: 52 06 e2                 jump @1950 if s1 != 0
      :                          @1952
 26589: 7c 17 18                 a0 = u8 [sp + 0x18]
 26592: 01                       fallthrough
      :                          @1953
 26593: 33 08 01                 a1 = 0x1
 26596: 52 07 1f                 jump @1956 if a0 != 0
      :                          @1954
 26599: 82 17 10                 a0 = u64 [sp + 0x10]
 26602: 82 78 28                 a1 = u64 [a0 + 0x28]
 26605: 82 77 20                 a0 = u64 [a0 + 0x20]
 26608: 82 8a 18                 a3 = u64 [a1 + 0x18]
 26611: 33 08 49 30 01           a1 = 0x13049
 26616: 33 09 01                 a2 = 0x1
 26619: b4 a0 02 12 02           ra = 530, jump [a3]
      :                          @1955 [@dyn 265]
 26624: 64 78                    a1 = a0
 26626: 01                       fallthrough
      :                          @1956
 26627: 64 87                    a0 = a1
 26629: 82 10 38                 ra = u64 [sp + 0x38]
 26632: 82 15 30                 s0 = u64 [sp + 0x30]
 26635: 82 16 28                 s1 = u64 [sp + 0x28]
 26638: 95 11 40                 sp = sp + 0x40
 26641: 32 00                    ret
      :                          @1957 [@dyn 266]
 26643: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 26646: 7b 10 38                 u64 [sp + 0x38] = ra
 26649: 7b 15 30                 u64 [sp + 0x30] = s0
 26652: 7b 16 28                 u64 [sp + 0x28] = s1
 26655: 64 86                    s1 = a1
 26657: 82 88 28                 a1 = u64 [a1 + 0x28]
 26660: 82 75 08                 s0 = u64 [a0 + 0x8]
 26663: 82 77 10                 a0 = u64 [a0 + 0x10]
 26666: 7b 17 08                 u64 [sp + 0x8] = a0
 26669: 82 67 20                 a0 = u64 [s1 + 0x20]
 26672: 82 8a 18                 a3 = u64 [a1 + 0x18]
 26675: 33 08 08 30 01           a1 = 0x13008
 26680: 33 09 01                 a2 = 0x1
 26683: b4 a0 02 16 02           ra = 534, jump [a3]
      :                          @1958 [@dyn 267]
 26688: 82 18 08                 a1 = u64 [sp + 0x8]
 26691: 7b 16 10                 u64 [sp + 0x10] = s1
 26694: 78 17 18                 u8 [sp + 0x18] = a0
 26697: 46 11 19                 u8 [sp + 25] = 0
 26700: 51 08 31                 jump @1963 if a1 == 0
      :                          @1959
 26703: 96 86 18                 s1 = a1 * 0x18
 26706: 33 07 10                 a0 = 0x10
 26709: 7b 17                    u64 [sp] = a0
 26711: 01                       fallthrough
      :                          @1960
 26712: 95 57 18                 a0 = s0 + 0x18
 26715: 7b 17 08                 u64 [sp + 0x8] = a0
 26718: 7b 15 20                 u64 [sp + 0x20] = s0
 26721: 95 17 10                 a0 = sp + 0x10
 26724: 95 18 20                 a1 = sp + 0x20
 26727: 82 19                    a2 = u64 [sp]
 26729: 50 20 18 02 66 b1 02     ra = 536, jump @13952
      :                          @1961 [@dyn 268]
 26736: 95 66 e8                 s1 = s1 + 0xffffffffffffffe8
 26739: 82 15 08                 s0 = u64 [sp + 0x8]
 26742: 52 06 e2                 jump @1960 if s1 != 0
      :                          @1962
 26745: 7c 17 18                 a0 = u8 [sp + 0x18]
 26748: 01                       fallthrough
      :                          @1963
 26749: 33 08 01                 a1 = 0x1
 26752: 52 07 1f                 jump @1966 if a0 != 0
      :                          @1964
 26755: 82 17 10                 a0 = u64 [sp + 0x10]
 26758: 82 78 28                 a1 = u64 [a0 + 0x28]
 26761: 82 77 20                 a0 = u64 [a0 + 0x20]
 26764: 82 8a 18                 a3 = u64 [a1 + 0x18]
 26767: 33 08 49 30 01           a1 = 0x13049
 26772: 33 09 01                 a2 = 0x1
 26775: b4 a0 02 1a 02           ra = 538, jump [a3]
      :                          @1965 [@dyn 269]
 26780: 64 78                    a1 = a0
 26782: 01                       fallthrough
      :                          @1966
 26783: 64 87                    a0 = a1
 26785: 82 10 38                 ra = u64 [sp + 0x38]
 26788: 82 15 30                 s0 = u64 [sp + 0x30]
 26791: 82 16 28                 s1 = u64 [sp + 0x28]
 26794: 95 11 40                 sp = sp + 0x40
 26797: 32 00                    ret
      :                          @1967 [@dyn 270]
 26799: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 26802: 7b 10 38                 u64 [sp + 0x38] = ra
 26805: 7b 15 30                 u64 [sp + 0x30] = s0
 26808: 7b 16 28                 u64 [sp + 0x28] = s1
 26811: 64 86                    s1 = a1
 26813: 82 88 28                 a1 = u64 [a1 + 0x28]
 26816: 82 75 08                 s0 = u64 [a0 + 0x8]
 26819: 82 77 10                 a0 = u64 [a0 + 0x10]
 26822: 7b 17 08                 u64 [sp + 0x8] = a0
 26825: 82 67 20                 a0 = u64 [s1 + 0x20]
 26828: 82 8a 18                 a3 = u64 [a1 + 0x18]
 26831: 33 08 08 30 01           a1 = 0x13008
 26836: 33 09 01                 a2 = 0x1
 26839: b4 a0 02 1e 02           ra = 542, jump [a3]
      :                          @1968 [@dyn 271]
 26844: 82 18 08                 a1 = u64 [sp + 0x8]
 26847: 7b 16 10                 u64 [sp + 0x10] = s1
 26850: 78 17 18                 u8 [sp + 0x18] = a0
 26853: 46 11 19                 u8 [sp + 25] = 0
 26856: 51 08 31                 jump @1973 if a1 == 0
      :                          @1969
 26859: 96 86 18                 s1 = a1 * 0x18
 26862: 33 07 56                 a0 = 0x56
 26865: 7b 17                    u64 [sp] = a0
 26867: 01                       fallthrough
      :                          @1970
 26868: 95 57 18                 a0 = s0 + 0x18
 26871: 7b 17 08                 u64 [sp + 0x8] = a0
 26874: 7b 15 20                 u64 [sp + 0x20] = s0
 26877: 95 17 10                 a0 = sp + 0x10
 26880: 95 18 20                 a1 = sp + 0x20
 26883: 82 19                    a2 = u64 [sp]
 26885: 50 20 20 02 ca b0 02     ra = 544, jump @13952
      :                          @1971 [@dyn 272]
 26892: 95 66 e8                 s1 = s1 + 0xffffffffffffffe8
 26895: 82 15 08                 s0 = u64 [sp + 0x8]
 26898: 52 06 e2                 jump @1970 if s1 != 0
      :                          @1972
 26901: 7c 17 18                 a0 = u8 [sp + 0x18]
 26904: 01                       fallthrough
      :                          @1973
 26905: 33 08 01                 a1 = 0x1
 26908: 52 07 1f                 jump @1976 if a0 != 0
      :                          @1974
 26911: 82 17 10                 a0 = u64 [sp + 0x10]
 26914: 82 78 28                 a1 = u64 [a0 + 0x28]
 26917: 82 77 20                 a0 = u64 [a0 + 0x20]
 26920: 82 8a 18                 a3 = u64 [a1 + 0x18]
 26923: 33 08 49 30 01           a1 = 0x13049
 26928: 33 09 01                 a2 = 0x1
 26931: b4 a0 02 22 02           ra = 546, jump [a3]
      :                          @1975 [@dyn 273]
 26936: 64 78                    a1 = a0
 26938: 01                       fallthrough
      :                          @1976
 26939: 64 87                    a0 = a1
 26941: 82 10 38                 ra = u64 [sp + 0x38]
 26944: 82 15 30                 s0 = u64 [sp + 0x30]
 26947: 82 16 28                 s1 = u64 [sp + 0x28]
 26950: 95 11 40                 sp = sp + 0x40
 26953: 32 00                    ret
      :                          @1977 [@dyn 274]
 26955: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 26958: 7b 10 38                 u64 [sp + 0x38] = ra
 26961: 7b 15 30                 u64 [sp + 0x30] = s0
 26964: 7b 16 28                 u64 [sp + 0x28] = s1
 26967: 64 86                    s1 = a1
 26969: 82 88 28                 a1 = u64 [a1 + 0x28]
 26972: 82 75 08                 s0 = u64 [a0 + 0x8]
 26975: 82 77 10                 a0 = u64 [a0 + 0x10]
 26978: 7b 17 08                 u64 [sp + 0x8] = a0
 26981: 82 67 20                 a0 = u64 [s1 + 0x20]
 26984: 82 8a 18                 a3 = u64 [a1 + 0x18]
 26987: 33 08 08 30 01           a1 = 0x13008
 26992: 33 09 01                 a2 = 0x1
 26995: b4 a0 02 26 02           ra = 550, jump [a3]
      :                          @1978 [@dyn 275]
 27000: 7b 16 10                 u64 [sp + 0x10] = s1
 27003: 82 16 08                 s1 = u64 [sp + 0x8]
 27006: 78 17 18                 u8 [sp + 0x18] = a0
 27009: 46 11 19                 u8 [sp + 25] = 0
 27012: 51 06 31                 jump @1983 if s1 == 0
      :                          @1979
 27015: 97 66 03                 s1 = s1 << 0x3
 27018: 33 07 4e                 a0 = 0x4e
 27021: 7b 17                    u64 [sp] = a0
 27023: 01                       fallthrough
      :                          @1980
 27024: 95 57 08                 a0 = s0 + 0x8
 27027: 7b 17 08                 u64 [sp + 0x8] = a0
 27030: 7b 15 20                 u64 [sp + 0x20] = s0
 27033: 95 17 10                 a0 = sp + 0x10
 27036: 95 18 20                 a1 = sp + 0x20
 27039: 82 19                    a2 = u64 [sp]
 27041: 50 20 28 02 2e b0 02     ra = 552, jump @13952
      :                          @1981 [@dyn 276]
 27048: 95 66 f8                 s1 = s1 + 0xfffffffffffffff8
 27051: 82 15 08                 s0 = u64 [sp + 0x8]
 27054: 52 06 e2                 jump @1980 if s1 != 0
      :                          @1982
 27057: 7c 17 18                 a0 = u8 [sp + 0x18]
 27060: 01                       fallthrough
      :                          @1983
 27061: 33 08 01                 a1 = 0x1
 27064: 52 07 1f                 jump @1986 if a0 != 0
      :                          @1984
 27067: 82 17 10                 a0 = u64 [sp + 0x10]
 27070: 82 78 28                 a1 = u64 [a0 + 0x28]
 27073: 82 77 20                 a0 = u64 [a0 + 0x20]
 27076: 82 8a 18                 a3 = u64 [a1 + 0x18]
 27079: 33 08 49 30 01           a1 = 0x13049
 27084: 33 09 01                 a2 = 0x1
 27087: b4 a0 02 2a 02           ra = 554, jump [a3]
      :                          @1985 [@dyn 277]
 27092: 64 78                    a1 = a0
 27094: 01                       fallthrough
      :                          @1986
 27095: 64 87                    a0 = a1
 27097: 82 10 38                 ra = u64 [sp + 0x38]
 27100: 82 15 30                 s0 = u64 [sp + 0x30]
 27103: 82 16 28                 s1 = u64 [sp + 0x28]
 27106: 95 11 40                 sp = sp + 0x40
 27109: 32 00                    ret
      :                          @1987 [@dyn 278]
 27111: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 27114: 7b 10 38                 u64 [sp + 0x38] = ra
 27117: 7b 15 30                 u64 [sp + 0x30] = s0
 27120: 7b 16 28                 u64 [sp + 0x28] = s1
 27123: 64 86                    s1 = a1
 27125: 82 88 28                 a1 = u64 [a1 + 0x28]
 27128: 82 75 08                 s0 = u64 [a0 + 0x8]
 27131: 82 77 10                 a0 = u64 [a0 + 0x10]
 27134: 7b 17 08                 u64 [sp + 0x8] = a0
 27137: 82 67 20                 a0 = u64 [s1 + 0x20]
 27140: 82 8a 18                 a3 = u64 [a1 + 0x18]
 27143: 33 08 08 30 01           a1 = 0x13008
 27148: 33 09 01                 a2 = 0x1
 27151: b4 a0 02 2e 02           ra = 558, jump [a3]
      :                          @1988 [@dyn 279]
 27156: 7b 16 10                 u64 [sp + 0x10] = s1
 27159: 82 16 08                 s1 = u64 [sp + 0x8]
 27162: 78 17 18                 u8 [sp + 0x18] = a0
 27165: 46 11 19                 u8 [sp + 25] = 0
 27168: 51 06 31                 jump @1993 if s1 == 0
      :                          @1989
 27171: 97 66 04                 s1 = s1 << 0x4
 27174: 33 07 2e                 a0 = 0x2e
 27177: 7b 17                    u64 [sp] = a0
 27179: 01                       fallthrough
      :                          @1990
 27180: 95 57 10                 a0 = s0 + 0x10
 27183: 7b 17 08                 u64 [sp + 0x8] = a0
 27186: 7b 15 20                 u64 [sp + 0x20] = s0
 27189: 95 17 10                 a0 = sp + 0x10
 27192: 95 18 20                 a1 = sp + 0x20
 27195: 82 19                    a2 = u64 [sp]
 27197: 50 20 30 02 92 af 02     ra = 560, jump @13952
      :                          @1991 [@dyn 280]
 27204: 95 66 f0                 s1 = s1 + 0xfffffffffffffff0
 27207: 82 15 08                 s0 = u64 [sp + 0x8]
 27210: 52 06 e2                 jump @1990 if s1 != 0
      :                          @1992
 27213: 7c 17 18                 a0 = u8 [sp + 0x18]
 27216: 01                       fallthrough
      :                          @1993
 27217: 33 08 01                 a1 = 0x1
 27220: 52 07 1f                 jump @1996 if a0 != 0
      :                          @1994
 27223: 82 17 10                 a0 = u64 [sp + 0x10]
 27226: 82 78 28                 a1 = u64 [a0 + 0x28]
 27229: 82 77 20                 a0 = u64 [a0 + 0x20]
 27232: 82 8a 18                 a3 = u64 [a1 + 0x18]
 27235: 33 08 49 30 01           a1 = 0x13049
 27240: 33 09 01                 a2 = 0x1
 27243: b4 a0 02 32 02           ra = 562, jump [a3]
      :                          @1995 [@dyn 281]
 27248: 64 78                    a1 = a0
 27250: 01                       fallthrough
      :                          @1996
 27251: 64 87                    a0 = a1
 27253: 82 10 38                 ra = u64 [sp + 0x38]
 27256: 82 15 30                 s0 = u64 [sp + 0x30]
 27259: 82 16 28                 s1 = u64 [sp + 0x28]
 27262: 95 11 40                 sp = sp + 0x40
 27265: 32 00                    ret
      :                          @1997 [@dyn 282]
 27267: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 27270: 7b 10 38                 u64 [sp + 0x38] = ra
 27273: 7b 15 30                 u64 [sp + 0x30] = s0
 27276: 7b 16 28                 u64 [sp + 0x28] = s1
 27279: 64 86                    s1 = a1
 27281: 82 88 28                 a1 = u64 [a1 + 0x28]
 27284: 82 75 08                 s0 = u64 [a0 + 0x8]
 27287: 82 77 10                 a0 = u64 [a0 + 0x10]
 27290: 7b 17 08                 u64 [sp + 0x8] = a0
 27293: 82 67 20                 a0 = u64 [s1 + 0x20]
 27296: 82 8a 18                 a3 = u64 [a1 + 0x18]
 27299: 33 08 08 30 01           a1 = 0x13008
 27304: 33 09 01                 a2 = 0x1
 27307: b4 a0 02 36 02           ra = 566, jump [a3]
      :                          @1998 [@dyn 283]
 27312: 7b 16 10                 u64 [sp + 0x10] = s1
 27315: 82 16 08                 s1 = u64 [sp + 0x8]
 27318: 78 17 18                 u8 [sp + 0x18] = a0
 27321: 46 11 19                 u8 [sp + 25] = 0
 27324: 51 06 31                 jump @2003 if s1 == 0
      :                          @1999
 27327: 97 66 03                 s1 = s1 << 0x3
 27330: 33 07 3a                 a0 = 0x3a
 27333: 7b 17                    u64 [sp] = a0
 27335: 01                       fallthrough
      :                          @2000
 27336: 95 57 08                 a0 = s0 + 0x8
 27339: 7b 17 08                 u64 [sp + 0x8] = a0
 27342: 7b 15 20                 u64 [sp + 0x20] = s0
 27345: 95 17 10                 a0 = sp + 0x10
 27348: 95 18 20                 a1 = sp + 0x20
 27351: 82 19                    a2 = u64 [sp]
 27353: 50 20 38 02 f6 ae 02     ra = 568, jump @13952
      :                          @2001 [@dyn 284]
 27360: 95 66 f8                 s1 = s1 + 0xfffffffffffffff8
 27363: 82 15 08                 s0 = u64 [sp + 0x8]
 27366: 52 06 e2                 jump @2000 if s1 != 0
      :                          @2002
 27369: 7c 17 18                 a0 = u8 [sp + 0x18]
 27372: 01                       fallthrough
      :                          @2003
 27373: 33 08 01                 a1 = 0x1
 27376: 52 07 1f                 jump @2006 if a0 != 0
      :                          @2004
 27379: 82 17 10                 a0 = u64 [sp + 0x10]
 27382: 82 78 28                 a1 = u64 [a0 + 0x28]
 27385: 82 77 20                 a0 = u64 [a0 + 0x20]
 27388: 82 8a 18                 a3 = u64 [a1 + 0x18]
 27391: 33 08 49 30 01           a1 = 0x13049
 27396: 33 09 01                 a2 = 0x1
 27399: b4 a0 02 3a 02           ra = 570, jump [a3]
      :                          @2005 [@dyn 285]
 27404: 64 78                    a1 = a0
 27406: 01                       fallthrough
      :                          @2006
 27407: 64 87                    a0 = a1
 27409: 82 10 38                 ra = u64 [sp + 0x38]
 27412: 82 15 30                 s0 = u64 [sp + 0x30]
 27415: 82 16 28                 s1 = u64 [sp + 0x28]
 27418: 95 11 40                 sp = sp + 0x40
 27421: 32 00                    ret
      :                          @2007 [@dyn 286]
 27423: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 27426: 7b 10 38                 u64 [sp + 0x38] = ra
 27429: 7b 15 30                 u64 [sp + 0x30] = s0
 27432: 7b 16 28                 u64 [sp + 0x28] = s1
 27435: 7b 18 08                 u64 [sp + 0x8] = a1
 27438: 82 89 28                 a2 = u64 [a1 + 0x28]
 27441: 82 76 08                 s1 = u64 [a0 + 0x8]
 27444: 82 75 10                 s0 = u64 [a0 + 0x10]
 27447: 82 87 20                 a0 = u64 [a1 + 0x20]
 27450: 82 9a 18                 a3 = u64 [a2 + 0x18]
 27453: 33 08 08 30 01           a1 = 0x13008
 27458: 33 09 01                 a2 = 0x1
 27461: b4 a0 02 3e 02           ra = 574, jump [a3]
      :                          @2008 [@dyn 287]
 27466: 82 18 08                 a1 = u64 [sp + 0x8]
 27469: 7b 18 10                 u64 [sp + 0x10] = a1
 27472: 78 17 18                 u8 [sp + 0x18] = a0
 27475: 46 11 19                 u8 [sp + 25] = 0
 27478: 51 05 2e                 jump @2013 if s0 == 0
      :                          @2009
 27481: 33 07 4a                 a0 = 0x4a
 27484: 7b 17                    u64 [sp] = a0
 27486: 01                       fallthrough
      :                          @2010
 27487: 95 67 01                 a0 = s1 + 0x1
 27490: 7b 17 08                 u64 [sp + 0x8] = a0
 27493: 7b 16 20                 u64 [sp + 0x20] = s1
 27496: 95 17 10                 a0 = sp + 0x10
 27499: 95 18 20                 a1 = sp + 0x20
 27502: 82 19                    a2 = u64 [sp]
 27504: 50 20 40 02 5f ae 02     ra = 576, jump @13952
      :                          @2011 [@dyn 288]
 27511: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 27514: 82 16 08                 s1 = u64 [sp + 0x8]
 27517: 52 05 e2                 jump @2010 if s0 != 0
      :                          @2012
 27520: 7c 17 18                 a0 = u8 [sp + 0x18]
 27523: 01                       fallthrough
      :                          @2013
 27524: 33 08 01                 a1 = 0x1
 27527: 52 07 1f                 jump @2016 if a0 != 0
      :                          @2014
 27530: 82 17 10                 a0 = u64 [sp + 0x10]
 27533: 82 78 28                 a1 = u64 [a0 + 0x28]
 27536: 82 77 20                 a0 = u64 [a0 + 0x20]
 27539: 82 8a 18                 a3 = u64 [a1 + 0x18]
 27542: 33 08 49 30 01           a1 = 0x13049
 27547: 33 09 01                 a2 = 0x1
 27550: b4 a0 02 42 02           ra = 578, jump [a3]
      :                          @2015 [@dyn 289]
 27555: 64 78                    a1 = a0
 27557: 01                       fallthrough
      :                          @2016
 27558: 64 87                    a0 = a1
 27560: 82 10 38                 ra = u64 [sp + 0x38]
 27563: 82 15 30                 s0 = u64 [sp + 0x30]
 27566: 82 16 28                 s1 = u64 [sp + 0x28]
 27569: 95 11 40                 sp = sp + 0x40
 27572: 32 00                    ret
      :                          @2017 [@dyn 290]
 27574: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 27577: 7b 10 38                 u64 [sp + 0x38] = ra
 27580: 7b 15 30                 u64 [sp + 0x30] = s0
 27583: 7b 16 28                 u64 [sp + 0x28] = s1
 27586: 64 86                    s1 = a1
 27588: 82 88 28                 a1 = u64 [a1 + 0x28]
 27591: 82 75 08                 s0 = u64 [a0 + 0x8]
 27594: 82 77 10                 a0 = u64 [a0 + 0x10]
 27597: 7b 17 08                 u64 [sp + 0x8] = a0
 27600: 82 67 20                 a0 = u64 [s1 + 0x20]
 27603: 82 8a 18                 a3 = u64 [a1 + 0x18]
 27606: 33 08 08 30 01           a1 = 0x13008
 27611: 33 09 01                 a2 = 0x1
 27614: b4 a0 02 46 02           ra = 582, jump [a3]
      :                          @2018 [@dyn 291]
 27619: 82 18 08                 a1 = u64 [sp + 0x8]
 27622: 7b 16 10                 u64 [sp + 0x10] = s1
 27625: 78 17 18                 u8 [sp + 0x18] = a0
 27628: 46 11 19                 u8 [sp + 25] = 0
 27631: 51 08 31                 jump @2023 if a1 == 0
      :                          @2019
 27634: 96 86 18                 s1 = a1 * 0x18
 27637: 33 07 64                 a0 = 0x64
 27640: 7b 17                    u64 [sp] = a0
 27642: 01                       fallthrough
      :                          @2020
 27643: 95 57 18                 a0 = s0 + 0x18
 27646: 7b 17 08                 u64 [sp + 0x8] = a0
 27649: 7b 15 20                 u64 [sp + 0x20] = s0
 27652: 95 17 10                 a0 = sp + 0x10
 27655: 95 18 20                 a1 = sp + 0x20
 27658: 82 19                    a2 = u64 [sp]
 27660: 50 20 48 02 c3 ad 02     ra = 584, jump @13952
      :                          @2021 [@dyn 292]
 27667: 95 66 e8                 s1 = s1 + 0xffffffffffffffe8
 27670: 82 15 08                 s0 = u64 [sp + 0x8]
 27673: 52 06 e2                 jump @2020 if s1 != 0
      :                          @2022
 27676: 7c 17 18                 a0 = u8 [sp + 0x18]
 27679: 01                       fallthrough
      :                          @2023
 27680: 33 08 01                 a1 = 0x1
 27683: 52 07 1f                 jump @2026 if a0 != 0
      :                          @2024
 27686: 82 17 10                 a0 = u64 [sp + 0x10]
 27689: 82 78 28                 a1 = u64 [a0 + 0x28]
 27692: 82 77 20                 a0 = u64 [a0 + 0x20]
 27695: 82 8a 18                 a3 = u64 [a1 + 0x18]
 27698: 33 08 49 30 01           a1 = 0x13049
 27703: 33 09 01                 a2 = 0x1
 27706: b4 a0 02 4a 02           ra = 586, jump [a3]
      :                          @2025 [@dyn 293]
 27711: 64 78                    a1 = a0
 27713: 01                       fallthrough
      :                          @2026
 27714: 64 87                    a0 = a1
 27716: 82 10 38                 ra = u64 [sp + 0x38]
 27719: 82 15 30                 s0 = u64 [sp + 0x30]
 27722: 82 16 28                 s1 = u64 [sp + 0x28]
 27725: 95 11 40                 sp = sp + 0x40
 27728: 32 00                    ret
      :                          @2027 [@dyn 294]
 27730: 82 7a 08                 a3 = u64 [a0 + 0x8]
 27733: 82 79 10                 a2 = u64 [a0 + 0x10]
 27736: 64 87                    a0 = a1
 27738: 64 a8                    a1 = a3
 27740: 28 db a3 02              jump @13768
      :                          @2028 [@dyn 295]
 27744: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 27747: 7b 10 30                 u64 [sp + 0x30] = ra
 27750: 7b 15 28                 u64 [sp + 0x28] = s0
 27753: 7b 16 20                 u64 [sp + 0x20] = s1
 27756: 82 79                    a2 = u64 [a0]
 27758: 64 85                    s0 = a1
 27760: 51 09 9c 00              jump @2039 if a2 == 0
      :                          @2029
 27764: 82 58 28                 a1 = u64 [s0 + 0x28]
 27767: 95 77 08                 a0 = a0 + 0x8
 27770: 7b 17                    u64 [sp] = a0
 27772: 82 57 20                 a0 = u64 [s0 + 0x20]
 27775: 82 8a 18                 a3 = u64 [a1 + 0x18]
 27778: 33 08 84 04 01           a1 = 0x10484
 27783: 33 09 04                 a2 = 0x4
 27786: b4 a0 02 50 02           ra = 592, jump [a3]
      :                          @2030 [@dyn 296]
 27791: 7b 15 10                 u64 [sp + 0x10] = s0
 27794: 78 17 18                 u8 [sp + 0x18] = a0
 27797: 49 11 08                 u64 [sp + 8] = 0
 27800: 46 11 19                 u8 [sp + 25] = 0
 27803: 33 09 02                 a2 = 0x2
 27806: 95 17 08                 a0 = sp + 0x8
 27809: 64 18                    a1 = sp
 27811: 50 20 52 02 f0 ab 02     ra = 594, jump @13936
      :                          @2031 [@dyn 297]
 27818: 82 17 08                 a0 = u64 [sp + 0x8]
 27821: 7c 18 18                 a1 = u8 [sp + 0x18]
 27824: 51 07 7b                 jump @2040 if a0 == 0
      :                          @2032
 27827: 33 05 01                 s0 = 0x1
 27830: 52 08 78                 jump @2041 if a1 != 0
      :                          @2033
 27833: 7c 18 19                 a1 = u8 [sp + 0x19]
 27836: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 27839: 8e 77                    a0 = a0 >u 0
 27841: 82 16 10                 s1 = u64 [sp + 0x10]
 27844: 88 88 01                 a1 = a1 <u 0x1
 27847: d4 87 07                 a0 = a0 | a1
 27850: 52 07 28                 jump @2037 if a0 != 0
      :                          @2034
 27853: 7c 67 34                 a0 = u8 [s1 + 0x34]
 27856: 84 77 04                 a0 = a0 & 0x4
 27859: 52 07 1f                 jump @2037 if a0 != 0
      :                          @2035
 27862: 82 68 28                 a1 = u64 [s1 + 0x28]
 27865: 82 67 20                 a0 = u64 [s1 + 0x20]
 27868: 82 8a 18                 a3 = u64 [a1 + 0x18]
 27871: 33 08 47 30 01           a1 = 0x13047
 27876: 33 09 01                 a2 = 0x1
 27879: 33 05 01                 s0 = 0x1
 27882: b4 a0 02 54 02           ra = 596, jump [a3]
      :                          @2036 [@dyn 298]
 27887: 52 07 3f                 jump @2041 if a0 != 0
      :                          @2037
 27890: 82 68 28                 a1 = u64 [s1 + 0x28]
 27893: 82 67 20                 a0 = u64 [s1 + 0x20]
 27896: 82 8a 18                 a3 = u64 [a1 + 0x18]
 27899: 33 08 f1 2f 01           a1 = 0x12ff1
 27904: 33 09 01                 a2 = 0x1
 27907: b4 a0 02 56 02           ra = 598, jump [a3]
      :                          @2038 [@dyn 299]
 27912: 64 75                    s0 = a0
 27914: 28 24                    jump @2041
      :                          @2039
 27916: 82 58 28                 a1 = u64 [s0 + 0x28]
 27919: 82 57 20                 a0 = u64 [s0 + 0x20]
 27922: 82 8c 18                 a5 = u64 [a1 + 0x18]
 27925: 33 08 a0 04 01           a1 = 0x104a0
 27930: 33 09 04                 a2 = 0x4
 27933: 82 10 30                 ra = u64 [sp + 0x30]
 27936: 82 15 28                 s0 = u64 [sp + 0x28]
 27939: 82 16 20                 s1 = u64 [sp + 0x20]
 27942: 95 11 38                 sp = sp + 0x38
 27945: 32 0c                    jump [a5]
      :                          @2040
 27947: 8e 85                    s0 = a1 >u 0
 27949: 01                       fallthrough
      :                          @2041
 27950: 64 57                    a0 = s0
 27952: 82 10 30                 ra = u64 [sp + 0x30]
 27955: 82 15 28                 s0 = u64 [sp + 0x28]
 27958: 82 16 20                 s1 = u64 [sp + 0x20]
 27961: 95 11 38                 sp = sp + 0x38
 27964: 32 00                    ret
      :                          @2042 [@dyn 300]
 27966: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 27969: 7b 10 30                 u64 [sp + 0x30] = ra
 27972: 7b 15 28                 u64 [sp + 0x28] = s0
 27975: 7b 16 20                 u64 [sp + 0x20] = s1
 27978: 82 79                    a2 = u64 [a0]
 27980: 64 85                    s0 = a1
 27982: 51 09 9c 00              jump @2053 if a2 == 0
      :                          @2043
 27986: 82 58 28                 a1 = u64 [s0 + 0x28]
 27989: 95 77 08                 a0 = a0 + 0x8
 27992: 7b 17                    u64 [sp] = a0
 27994: 82 57 20                 a0 = u64 [s0 + 0x20]
 27997: 82 8a 18                 a3 = u64 [a1 + 0x18]
 28000: 33 08 84 04 01           a1 = 0x10484
 28005: 33 09 04                 a2 = 0x4
 28008: b4 a0 02 5a 02           ra = 602, jump [a3]
      :                          @2044 [@dyn 301]
 28013: 7b 15 10                 u64 [sp + 0x10] = s0
 28016: 78 17 18                 u8 [sp + 0x18] = a0
 28019: 49 11 08                 u64 [sp + 8] = 0
 28022: 46 11 19                 u8 [sp + 25] = 0
 28025: 33 09 3e                 a2 = 0x3e
 28028: 95 17 08                 a0 = sp + 0x8
 28031: 64 18                    a1 = sp
 28033: 50 20 5c 02 12 ab 02     ra = 604, jump @13936
      :                          @2045 [@dyn 302]
 28040: 82 17 08                 a0 = u64 [sp + 0x8]
 28043: 7c 18 18                 a1 = u8 [sp + 0x18]
 28046: 51 07 7b                 jump @2054 if a0 == 0
      :                          @2046
 28049: 33 05 01                 s0 = 0x1
 28052: 52 08 78                 jump @2055 if a1 != 0
      :                          @2047
 28055: 7c 18 19                 a1 = u8 [sp + 0x19]
 28058: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 28061: 8e 77                    a0 = a0 >u 0
 28063: 82 16 10                 s1 = u64 [sp + 0x10]
 28066: 88 88 01                 a1 = a1 <u 0x1
 28069: d4 87 07                 a0 = a0 | a1
 28072: 52 07 28                 jump @2051 if a0 != 0
      :                          @2048
 28075: 7c 67 34                 a0 = u8 [s1 + 0x34]
 28078: 84 77 04                 a0 = a0 & 0x4
 28081: 52 07 1f                 jump @2051 if a0 != 0
      :                          @2049
 28084: 82 68 28                 a1 = u64 [s1 + 0x28]
 28087: 82 67 20                 a0 = u64 [s1 + 0x20]
 28090: 82 8a 18                 a3 = u64 [a1 + 0x18]
 28093: 33 08 47 30 01           a1 = 0x13047
 28098: 33 09 01                 a2 = 0x1
 28101: 33 05 01                 s0 = 0x1
 28104: b4 a0 02 5e 02           ra = 606, jump [a3]
      :                          @2050 [@dyn 303]
 28109: 52 07 3f                 jump @2055 if a0 != 0
      :                          @2051
 28112: 82 68 28                 a1 = u64 [s1 + 0x28]
 28115: 82 67 20                 a0 = u64 [s1 + 0x20]
 28118: 82 8a 18                 a3 = u64 [a1 + 0x18]
 28121: 33 08 f1 2f 01           a1 = 0x12ff1
 28126: 33 09 01                 a2 = 0x1
 28129: b4 a0 02 60 02           ra = 608, jump [a3]
      :                          @2052 [@dyn 304]
 28134: 64 75                    s0 = a0
 28136: 28 24                    jump @2055
      :                          @2053
 28138: 82 58 28                 a1 = u64 [s0 + 0x28]
 28141: 82 57 20                 a0 = u64 [s0 + 0x20]
 28144: 82 8c 18                 a5 = u64 [a1 + 0x18]
 28147: 33 08 a0 04 01           a1 = 0x104a0
 28152: 33 09 04                 a2 = 0x4
 28155: 82 10 30                 ra = u64 [sp + 0x30]
 28158: 82 15 28                 s0 = u64 [sp + 0x28]
 28161: 82 16 20                 s1 = u64 [sp + 0x20]
 28164: 95 11 38                 sp = sp + 0x38
 28167: 32 0c                    jump [a5]
      :                          @2054
 28169: 8e 85                    s0 = a1 >u 0
 28171: 01                       fallthrough
      :                          @2055
 28172: 64 57                    a0 = s0
 28174: 82 10 30                 ra = u64 [sp + 0x30]
 28177: 82 15 28                 s0 = u64 [sp + 0x28]
 28180: 82 16 20                 s1 = u64 [sp + 0x20]
 28183: 95 11 38                 sp = sp + 0x38
 28186: 32 00                    ret
      :                          @2056 [@dyn 305]
 28188: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 28191: 7b 10 30                 u64 [sp + 0x30] = ra
 28194: 7b 15 28                 u64 [sp + 0x28] = s0
 28197: 7b 16 20                 u64 [sp + 0x20] = s1
 28200: 82 79                    a2 = u64 [a0]
 28202: 64 85                    s0 = a1
 28204: 51 09 9c 00              jump @2067 if a2 == 0
      :                          @2057
 28208: 82 58 28                 a1 = u64 [s0 + 0x28]
 28211: 95 77 08                 a0 = a0 + 0x8
 28214: 7b 17                    u64 [sp] = a0
 28216: 82 57 20                 a0 = u64 [s0 + 0x20]
 28219: 82 8a 18                 a3 = u64 [a1 + 0x18]
 28222: 33 08 84 04 01           a1 = 0x10484
 28227: 33 09 04                 a2 = 0x4
 28230: b4 a0 02 64 02           ra = 612, jump [a3]
      :                          @2058 [@dyn 306]
 28235: 7b 15 10                 u64 [sp + 0x10] = s0
 28238: 78 17 18                 u8 [sp + 0x18] = a0
 28241: 49 11 08                 u64 [sp + 8] = 0
 28244: 46 11 19                 u8 [sp + 25] = 0
 28247: 33 09 18                 a2 = 0x18
 28250: 95 17 08                 a0 = sp + 0x8
 28253: 64 18                    a1 = sp
 28255: 50 20 66 02 34 aa 02     ra = 614, jump @13936
      :                          @2059 [@dyn 307]
 28262: 82 17 08                 a0 = u64 [sp + 0x8]
 28265: 7c 18 18                 a1 = u8 [sp + 0x18]
 28268: 51 07 7b                 jump @2068 if a0 == 0
      :                          @2060
 28271: 33 05 01                 s0 = 0x1
 28274: 52 08 78                 jump @2069 if a1 != 0
      :                          @2061
 28277: 7c 18 19                 a1 = u8 [sp + 0x19]
 28280: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 28283: 8e 77                    a0 = a0 >u 0
 28285: 82 16 10                 s1 = u64 [sp + 0x10]
 28288: 88 88 01                 a1 = a1 <u 0x1
 28291: d4 87 07                 a0 = a0 | a1
 28294: 52 07 28                 jump @2065 if a0 != 0
      :                          @2062
 28297: 7c 67 34                 a0 = u8 [s1 + 0x34]
 28300: 84 77 04                 a0 = a0 & 0x4
 28303: 52 07 1f                 jump @2065 if a0 != 0
      :                          @2063
 28306: 82 68 28                 a1 = u64 [s1 + 0x28]
 28309: 82 67 20                 a0 = u64 [s1 + 0x20]
 28312: 82 8a 18                 a3 = u64 [a1 + 0x18]
 28315: 33 08 47 30 01           a1 = 0x13047
 28320: 33 09 01                 a2 = 0x1
 28323: 33 05 01                 s0 = 0x1
 28326: b4 a0 02 68 02           ra = 616, jump [a3]
      :                          @2064 [@dyn 308]
 28331: 52 07 3f                 jump @2069 if a0 != 0
      :                          @2065
 28334: 82 68 28                 a1 = u64 [s1 + 0x28]
 28337: 82 67 20                 a0 = u64 [s1 + 0x20]
 28340: 82 8a 18                 a3 = u64 [a1 + 0x18]
 28343: 33 08 f1 2f 01           a1 = 0x12ff1
 28348: 33 09 01                 a2 = 0x1
 28351: b4 a0 02 6a 02           ra = 618, jump [a3]
      :                          @2066 [@dyn 309]
 28356: 64 75                    s0 = a0
 28358: 28 24                    jump @2069
      :                          @2067
 28360: 82 58 28                 a1 = u64 [s0 + 0x28]
 28363: 82 57 20                 a0 = u64 [s0 + 0x20]
 28366: 82 8c 18                 a5 = u64 [a1 + 0x18]
 28369: 33 08 a0 04 01           a1 = 0x104a0
 28374: 33 09 04                 a2 = 0x4
 28377: 82 10 30                 ra = u64 [sp + 0x30]
 28380: 82 15 28                 s0 = u64 [sp + 0x28]
 28383: 82 16 20                 s1 = u64 [sp + 0x20]
 28386: 95 11 38                 sp = sp + 0x38
 28389: 32 0c                    jump [a5]
      :                          @2068
 28391: 8e 85                    s0 = a1 >u 0
 28393: 01                       fallthrough
      :                          @2069
 28394: 64 57                    a0 = s0
 28396: 82 10 30                 ra = u64 [sp + 0x30]
 28399: 82 15 28                 s0 = u64 [sp + 0x28]
 28402: 82 16 20                 s1 = u64 [sp + 0x20]
 28405: 95 11 38                 sp = sp + 0x38
 28408: 32 00                    ret
      :                          @2070 [@dyn 310]
 28410: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 28413: 7b 10 30                 u64 [sp + 0x30] = ra
 28416: 7b 15 28                 u64 [sp + 0x28] = s0
 28419: 7b 16 20                 u64 [sp + 0x20] = s1
 28422: 82 79                    a2 = u64 [a0]
 28424: 64 85                    s0 = a1
 28426: 51 09 9c 00              jump @2081 if a2 == 0
      :                          @2071
 28430: 82 58 28                 a1 = u64 [s0 + 0x28]
 28433: 95 77 08                 a0 = a0 + 0x8
 28436: 7b 17                    u64 [sp] = a0
 28438: 82 57 20                 a0 = u64 [s0 + 0x20]
 28441: 82 8a 18                 a3 = u64 [a1 + 0x18]
 28444: 33 08 84 04 01           a1 = 0x10484
 28449: 33 09 04                 a2 = 0x4
 28452: b4 a0 02 6e 02           ra = 622, jump [a3]
      :                          @2072 [@dyn 311]
 28457: 7b 15 10                 u64 [sp + 0x10] = s0
 28460: 78 17 18                 u8 [sp + 0x18] = a0
 28463: 49 11 08                 u64 [sp + 8] = 0
 28466: 46 11 19                 u8 [sp + 25] = 0
 28469: 33 09 6c                 a2 = 0x6c
 28472: 95 17 08                 a0 = sp + 0x8
 28475: 64 18                    a1 = sp
 28477: 50 20 70 02 56 a9 02     ra = 624, jump @13936
      :                          @2073 [@dyn 312]
 28484: 82 17 08                 a0 = u64 [sp + 0x8]
 28487: 7c 18 18                 a1 = u8 [sp + 0x18]
 28490: 51 07 7b                 jump @2082 if a0 == 0
      :                          @2074
 28493: 33 05 01                 s0 = 0x1
 28496: 52 08 78                 jump @2083 if a1 != 0
      :                          @2075
 28499: 7c 18 19                 a1 = u8 [sp + 0x19]
 28502: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 28505: 8e 77                    a0 = a0 >u 0
 28507: 82 16 10                 s1 = u64 [sp + 0x10]
 28510: 88 88 01                 a1 = a1 <u 0x1
 28513: d4 87 07                 a0 = a0 | a1
 28516: 52 07 28                 jump @2079 if a0 != 0
      :                          @2076
 28519: 7c 67 34                 a0 = u8 [s1 + 0x34]
 28522: 84 77 04                 a0 = a0 & 0x4
 28525: 52 07 1f                 jump @2079 if a0 != 0
      :                          @2077
 28528: 82 68 28                 a1 = u64 [s1 + 0x28]
 28531: 82 67 20                 a0 = u64 [s1 + 0x20]
 28534: 82 8a 18                 a3 = u64 [a1 + 0x18]
 28537: 33 08 47 30 01           a1 = 0x13047
 28542: 33 09 01                 a2 = 0x1
 28545: 33 05 01                 s0 = 0x1
 28548: b4 a0 02 72 02           ra = 626, jump [a3]
      :                          @2078 [@dyn 313]
 28553: 52 07 3f                 jump @2083 if a0 != 0
      :                          @2079
 28556: 82 68 28                 a1 = u64 [s1 + 0x28]
 28559: 82 67 20                 a0 = u64 [s1 + 0x20]
 28562: 82 8a 18                 a3 = u64 [a1 + 0x18]
 28565: 33 08 f1 2f 01           a1 = 0x12ff1
 28570: 33 09 01                 a2 = 0x1
 28573: b4 a0 02 74 02           ra = 628, jump [a3]
      :                          @2080 [@dyn 314]
 28578: 64 75                    s0 = a0
 28580: 28 24                    jump @2083
      :                          @2081
 28582: 82 58 28                 a1 = u64 [s0 + 0x28]
 28585: 82 57 20                 a0 = u64 [s0 + 0x20]
 28588: 82 8c 18                 a5 = u64 [a1 + 0x18]
 28591: 33 08 a0 04 01           a1 = 0x104a0
 28596: 33 09 04                 a2 = 0x4
 28599: 82 10 30                 ra = u64 [sp + 0x30]
 28602: 82 15 28                 s0 = u64 [sp + 0x28]
 28605: 82 16 20                 s1 = u64 [sp + 0x20]
 28608: 95 11 38                 sp = sp + 0x38
 28611: 32 0c                    jump [a5]
      :                          @2082
 28613: 8e 85                    s0 = a1 >u 0
 28615: 01                       fallthrough
      :                          @2083
 28616: 64 57                    a0 = s0
 28618: 82 10 30                 ra = u64 [sp + 0x30]
 28621: 82 15 28                 s0 = u64 [sp + 0x28]
 28624: 82 16 20                 s1 = u64 [sp + 0x20]
 28627: 95 11 38                 sp = sp + 0x38
 28630: 32 00                    ret
      :                          @2084 [@dyn 315]
 28632: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 28635: 7b 10 30                 u64 [sp + 0x30] = ra
 28638: 7b 15 28                 u64 [sp + 0x28] = s0
 28641: 7b 16 20                 u64 [sp + 0x20] = s1
 28644: 82 79                    a2 = u64 [a0]
 28646: 64 85                    s0 = a1
 28648: 51 09 9c 00              jump @2095 if a2 == 0
      :                          @2085
 28652: 82 58 28                 a1 = u64 [s0 + 0x28]
 28655: 95 77 08                 a0 = a0 + 0x8
 28658: 7b 17                    u64 [sp] = a0
 28660: 82 57 20                 a0 = u64 [s0 + 0x20]
 28663: 82 8a 18                 a3 = u64 [a1 + 0x18]
 28666: 33 08 84 04 01           a1 = 0x10484
 28671: 33 09 04                 a2 = 0x4
 28674: b4 a0 02 78 02           ra = 632, jump [a3]
      :                          @2086 [@dyn 316]
 28679: 7b 15 10                 u64 [sp + 0x10] = s0
 28682: 78 17 18                 u8 [sp + 0x18] = a0
 28685: 49 11 08                 u64 [sp + 8] = 0
 28688: 46 11 19                 u8 [sp + 25] = 0
 28691: 33 09 3a                 a2 = 0x3a
 28694: 95 17 08                 a0 = sp + 0x8
 28697: 64 18                    a1 = sp
 28699: 50 20 7a 02 78 a8 02     ra = 634, jump @13936
      :                          @2087 [@dyn 317]
 28706: 82 17 08                 a0 = u64 [sp + 0x8]
 28709: 7c 18 18                 a1 = u8 [sp + 0x18]
 28712: 51 07 7b                 jump @2096 if a0 == 0
      :                          @2088
 28715: 33 05 01                 s0 = 0x1
 28718: 52 08 78                 jump @2097 if a1 != 0
      :                          @2089
 28721: 7c 18 19                 a1 = u8 [sp + 0x19]
 28724: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 28727: 8e 77                    a0 = a0 >u 0
 28729: 82 16 10                 s1 = u64 [sp + 0x10]
 28732: 88 88 01                 a1 = a1 <u 0x1
 28735: d4 87 07                 a0 = a0 | a1
 28738: 52 07 28                 jump @2093 if a0 != 0
      :                          @2090
 28741: 7c 67 34                 a0 = u8 [s1 + 0x34]
 28744: 84 77 04                 a0 = a0 & 0x4
 28747: 52 07 1f                 jump @2093 if a0 != 0
      :                          @2091
 28750: 82 68 28                 a1 = u64 [s1 + 0x28]
 28753: 82 67 20                 a0 = u64 [s1 + 0x20]
 28756: 82 8a 18                 a3 = u64 [a1 + 0x18]
 28759: 33 08 47 30 01           a1 = 0x13047
 28764: 33 09 01                 a2 = 0x1
 28767: 33 05 01                 s0 = 0x1
 28770: b4 a0 02 7c 02           ra = 636, jump [a3]
      :                          @2092 [@dyn 318]
 28775: 52 07 3f                 jump @2097 if a0 != 0
      :                          @2093
 28778: 82 68 28                 a1 = u64 [s1 + 0x28]
 28781: 82 67 20                 a0 = u64 [s1 + 0x20]
 28784: 82 8a 18                 a3 = u64 [a1 + 0x18]
 28787: 33 08 f1 2f 01           a1 = 0x12ff1
 28792: 33 09 01                 a2 = 0x1
 28795: b4 a0 02 7e 02           ra = 638, jump [a3]
      :                          @2094 [@dyn 319]
 28800: 64 75                    s0 = a0
 28802: 28 24                    jump @2097
      :                          @2095
 28804: 82 58 28                 a1 = u64 [s0 + 0x28]
 28807: 82 57 20                 a0 = u64 [s0 + 0x20]
 28810: 82 8c 18                 a5 = u64 [a1 + 0x18]
 28813: 33 08 a0 04 01           a1 = 0x104a0
 28818: 33 09 04                 a2 = 0x4
 28821: 82 10 30                 ra = u64 [sp + 0x30]
 28824: 82 15 28                 s0 = u64 [sp + 0x28]
 28827: 82 16 20                 s1 = u64 [sp + 0x20]
 28830: 95 11 38                 sp = sp + 0x38
 28833: 32 0c                    jump [a5]
      :                          @2096
 28835: 8e 85                    s0 = a1 >u 0
 28837: 01                       fallthrough
      :                          @2097
 28838: 64 57                    a0 = s0
 28840: 82 10 30                 ra = u64 [sp + 0x30]
 28843: 82 15 28                 s0 = u64 [sp + 0x28]
 28846: 82 16 20                 s1 = u64 [sp + 0x20]
 28849: 95 11 38                 sp = sp + 0x38
 28852: 32 00                    ret
      :                          @2098 [@dyn 320]
 28854: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 28857: 7b 10 30                 u64 [sp + 0x30] = ra
 28860: 7b 15 28                 u64 [sp + 0x28] = s0
 28863: 7b 16 20                 u64 [sp + 0x20] = s1
 28866: 82 79                    a2 = u64 [a0]
 28868: 64 85                    s0 = a1
 28870: 51 09 9c 00              jump @2109 if a2 == 0
      :                          @2099
 28874: 82 58 28                 a1 = u64 [s0 + 0x28]
 28877: 95 77 08                 a0 = a0 + 0x8
 28880: 7b 17                    u64 [sp] = a0
 28882: 82 57 20                 a0 = u64 [s0 + 0x20]
 28885: 82 8a 18                 a3 = u64 [a1 + 0x18]
 28888: 33 08 84 04 01           a1 = 0x10484
 28893: 33 09 04                 a2 = 0x4
 28896: b4 a0 02 82 02           ra = 642, jump [a3]
      :                          @2100 [@dyn 321]
 28901: 7b 15 10                 u64 [sp + 0x10] = s0
 28904: 78 17 18                 u8 [sp + 0x18] = a0
 28907: 49 11 08                 u64 [sp + 8] = 0
 28910: 46 11 19                 u8 [sp + 25] = 0
 28913: 33 09 4e                 a2 = 0x4e
 28916: 95 17 08                 a0 = sp + 0x8
 28919: 64 18                    a1 = sp
 28921: 50 20 84 02 9a a7 02     ra = 644, jump @13936
      :                          @2101 [@dyn 322]
 28928: 82 17 08                 a0 = u64 [sp + 0x8]
 28931: 7c 18 18                 a1 = u8 [sp + 0x18]
 28934: 51 07 7b                 jump @2110 if a0 == 0
      :                          @2102
 28937: 33 05 01                 s0 = 0x1
 28940: 52 08 78                 jump @2111 if a1 != 0
      :                          @2103
 28943: 7c 18 19                 a1 = u8 [sp + 0x19]
 28946: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 28949: 8e 77                    a0 = a0 >u 0
 28951: 82 16 10                 s1 = u64 [sp + 0x10]
 28954: 88 88 01                 a1 = a1 <u 0x1
 28957: d4 87 07                 a0 = a0 | a1
 28960: 52 07 28                 jump @2107 if a0 != 0
      :                          @2104
 28963: 7c 67 34                 a0 = u8 [s1 + 0x34]
 28966: 84 77 04                 a0 = a0 & 0x4
 28969: 52 07 1f                 jump @2107 if a0 != 0
      :                          @2105
 28972: 82 68 28                 a1 = u64 [s1 + 0x28]
 28975: 82 67 20                 a0 = u64 [s1 + 0x20]
 28978: 82 8a 18                 a3 = u64 [a1 + 0x18]
 28981: 33 08 47 30 01           a1 = 0x13047
 28986: 33 09 01                 a2 = 0x1
 28989: 33 05 01                 s0 = 0x1
 28992: b4 a0 02 86 02           ra = 646, jump [a3]
      :                          @2106 [@dyn 323]
 28997: 52 07 3f                 jump @2111 if a0 != 0
      :                          @2107
 29000: 82 68 28                 a1 = u64 [s1 + 0x28]
 29003: 82 67 20                 a0 = u64 [s1 + 0x20]
 29006: 82 8a 18                 a3 = u64 [a1 + 0x18]
 29009: 33 08 f1 2f 01           a1 = 0x12ff1
 29014: 33 09 01                 a2 = 0x1
 29017: b4 a0 02 88 02           ra = 648, jump [a3]
      :                          @2108 [@dyn 324]
 29022: 64 75                    s0 = a0
 29024: 28 24                    jump @2111
      :                          @2109
 29026: 82 58 28                 a1 = u64 [s0 + 0x28]
 29029: 82 57 20                 a0 = u64 [s0 + 0x20]
 29032: 82 8c 18                 a5 = u64 [a1 + 0x18]
 29035: 33 08 a0 04 01           a1 = 0x104a0
 29040: 33 09 04                 a2 = 0x4
 29043: 82 10 30                 ra = u64 [sp + 0x30]
 29046: 82 15 28                 s0 = u64 [sp + 0x28]
 29049: 82 16 20                 s1 = u64 [sp + 0x20]
 29052: 95 11 38                 sp = sp + 0x38
 29055: 32 0c                    jump [a5]
      :                          @2110
 29057: 8e 85                    s0 = a1 >u 0
 29059: 01                       fallthrough
      :                          @2111
 29060: 64 57                    a0 = s0
 29062: 82 10 30                 ra = u64 [sp + 0x30]
 29065: 82 15 28                 s0 = u64 [sp + 0x28]
 29068: 82 16 20                 s1 = u64 [sp + 0x20]
 29071: 95 11 38                 sp = sp + 0x38
 29074: 32 00                    ret
      :                          @2112
 29076: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 29079: 7b 10 20                 u64 [sp + 0x20] = ra
 29082: 7b 15 18                 u64 [sp + 0x18] = s0
 29085: 7b 16 10                 u64 [sp + 0x10] = s1
 29088: 64 95                    s0 = a2
 29090: 7b 17 08                 u64 [sp + 0x8] = a0
 29093: 51 09 5e                 jump @2120 if a2 == 0
      :                          @2113
 29096: 98 57 3c                 a0 = s0 >> 0x3c
 29099: 52 07 7f                 jump @2123 if a0 != 0
      :                          @2114
 29102: 88 72 01                 t0 = a0 <u 0x1
 29105: 7b 15                    u64 [sp] = s0
 29107: 97 59 03                 a2 = s0 << 0x3
 29110: 97 22 03                 t0 = t0 << 0x3
 29113: 33 04 c0 22 03           t2 = 0x322c0
 29118: 33 03 00 00 01           t1 = 0x10000
 29123: c8 34 00                 ra = t2 + t1
 29126: 01                       fallthrough
      :                          @2115
 29127: 82 05                    s0 = u64 [ra]
 29129: c8 95 06                 s1 = s0 + a2
 29132: ac 56 5d                 jump @2122 if s1 <u s0
      :                          @2116
 29135: c8 26 07                 a0 = s1 + t0
 29138: d8 67 0b                 a4 = a0 <u s1
 29141: d8 73 07                 a0 = t1 <u a0
 29144: d4 b7 07                 a0 = a0 | a4
 29147: 52 07 4e                 jump @2122 if a0 != 0
      :                          @2117
 29150: c9 64 07                 a0 = t2 - s1
 29153: c8 37 07                 a0 = a0 + t1
 29156: 84 7b 07                 a4 = a0 & 0x7
 29159: c8 b6 06                 s1 = s1 + a4
 29162: 01                       fallthrough
      :                          @2118
 29163: 82 0a                    a3 = u64 [ra]
 29165: ab 5a da                 jump @2115 if a3 != s0
      :                          @2119
 29168: 7b 06                    u64 [ra] = s1
 29170: 33 0c                    a5 = 0
 29172: c9 b7 06                 s1 = a0 - a4
 29175: 82 15                    s0 = u64 [sp]
 29177: 64 67                    a0 = s1
 29179: 33 00 8a 02              ra = 0x28a
 29183: 28 ea 97 02              jump @13633
      :                          @2120
 29187: 33 06 08                 s1 = 0x8
 29190: 33 07 08                 a0 = 0x8
 29193: 50 20 8a 02 e0 97 02     ra = 650, jump @13633
      :                          @2121 [@dyn 325]
 29200: 82 17 08                 a0 = u64 [sp + 0x8]
 29203: 7b 75                    u64 [a0] = s0
 29205: 7b 76 08                 u64 [a0 + 0x8] = s1
 29208: 7b 75 10                 u64 [a0 + 0x10] = s0
 29211: 82 10 20                 ra = u64 [sp + 0x20]
 29214: 82 15 18                 s0 = u64 [sp + 0x18]
 29217: 82 16 10                 s1 = u64 [sp + 0x10]
 29220: 95 11 28                 sp = sp + 0x28
 29223: 32 00                    ret
      :                          @2122
 29225: 00                       trap
      :                          @2123
 29226: 00                       trap
      :                          @2124
 29227: 95 11 98                 sp = sp + 0xffffffffffffff98
 29230: 7b 10 60                 u64 [sp + 0x60] = ra
 29233: 7b 15 58                 u64 [sp + 0x58] = s0
 29236: 7b 16 50                 u64 [sp + 0x50] = s1
 29239: 51 09 33 01              jump @2145 if a2 == 0
      :                          @2125
 29243: 7b 17                    u64 [sp] = a0
 29245: 3a 07 30 10 03           a0 = u64 [0x31030]
 29250: ae 79 47 01              jump @2148 if a2 >=u a0
      :                          @2126
 29254: 64 80                    ra = a1
 29256: d8 79 02                 t0 = a2 <u a0
 29259: 7b 19 08                 u64 [sp + 0x8] = a2
 29262: 96 97 18                 a0 = a2 * 0x18
 29265: 97 22 03                 t0 = t0 << 0x3
 29268: 33 04 c0 22 03           t2 = 0x322c0
 29273: 33 03 00 00 01           t1 = 0x10000
 29278: c8 34 0b                 a4 = t2 + t1
 29281: 01                       fallthrough
      :                          @2127
 29282: 82 b8                    a1 = u64 [a4]
 29284: c8 78 05                 s0 = a1 + a0
 29287: ac 85 21 01              jump @2147 if s0 <u a1
      :                          @2128
 29291: c8 25 0a                 a3 = s0 + t0
 29294: d8 5a 0c                 a5 = a3 <u s0
 29297: d8 a3 0a                 a3 = t1 <u a3
 29300: d4 ca 0a                 a3 = a3 | a5
 29303: 52 0a 11 01              jump @2147 if a3 != 0
      :                          @2129
 29307: c9 54 0a                 a3 = t2 - s0
 29310: c8 3a 0a                 a3 = a3 + t1
 29313: 84 ac 07                 a5 = a3 & 0x7
 29316: c8 c5 05                 s0 = s0 + a5
 29319: 01                       fallthrough
      :                          @2130
 29320: 82 b6                    s1 = u64 [a4]
 29322: ab 86 d8                 jump @2127 if s1 != a1
      :                          @2131
 29325: 7b b5                    u64 [a4] = s0
 29327: 33 02                    t0 = 0
 29329: c9 ca 0a                 a3 = a3 - a5
 29332: 7b 1a 18                 u64 [sp + 0x18] = a3
 29335: 82 1a 08                 a3 = u64 [sp + 0x8]
 29338: 96 a7 18                 a0 = a3 * 0x18
 29341: c8 07 07                 a0 = a0 + ra
 29344: 7b 17 10                 u64 [sp + 0x10] = a0
 29347: 33 07 c0 22 03           a0 = 0x322c0
 29352: 7b 17 40                 u64 [sp + 0x40] = a0
 29355: 95 74 00 00 01           t2 = a0 + 0x10000
 29360: 7b 1a 38                 u64 [sp + 0x38] = a3
 29363: 7b 14 48                 u64 [sp + 0x48] = t2
 29366: 28 4c                    jump @2135
      :                          @2132
 29368: 33 09                    a2 = 0
 29370: 33 0a 08                 a3 = 0x8
 29373: 01                       fallthrough
      :                          @2133
 29374: 7b 1a 20                 u64 [sp + 0x20] = a3
 29377: 82 15 38                 s0 = u64 [sp + 0x38]
 29380: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 29383: 95 00 18                 ra = ra + 0x18
 29386: 7b 10 28                 u64 [sp + 0x28] = ra
 29389: 95 27 01                 a0 = t0 + 0x1
 29392: 7b 17 38                 u64 [sp + 0x38] = a0
 29395: 96 27 18                 a0 = t0 * 0x18
 29398: 82 16 18                 s1 = u64 [sp + 0x18]
 29401: c8 76 06                 s1 = s1 + a0
 29404: 64 a7                    a0 = a3
 29406: 50 20 8c 02 0b 97 02     ra = 652, jump @13633
      :                          @2134 [@dyn 326]
 29413: 82 10 28                 ra = u64 [sp + 0x28]
 29416: 82 17 30                 a0 = u64 [sp + 0x30]
 29419: 7b 67                    u64 [s1] = a0
 29421: 82 18 20                 a1 = u64 [sp + 0x20]
 29424: 7b 68 08                 u64 [s1 + 0x8] = a1
 29427: 7b 67 10                 u64 [s1 + 0x10] = a0
 29430: 82 12 38                 t0 = u64 [sp + 0x38]
 29433: 82 14 48                 t2 = u64 [sp + 0x48]
 29436: 7b 15 38                 u64 [sp + 0x38] = s0
 29439: 51 05 64                 jump @2144 if s0 == 0
      :                          @2135
 29442: 82 17 10                 a0 = u64 [sp + 0x10]
 29445: aa 70 5e                 jump @2144 if ra == a0
      :                          @2136
 29448: 82 0b 10                 a4 = u64 [ra + 0x10]
 29451: 82 08 08                 a1 = u64 [ra + 0x8]
 29454: 7b 1b 30                 u64 [sp + 0x30] = a4
 29457: 51 0b a7                 jump @2132 if a4 == 0
      :                          @2137
 29460: 98 b9 3c                 a2 = a4 >> 0x3c
 29463: 52 09 72                 jump @2148 if a2 != 0
      :                          @2138
 29466: 88 9a 01                 a3 = a2 <u 0x1
 29469: 97 b9 03                 a2 = a4 << 0x3
 29472: 97 a3 03                 t1 = a3 << 0x3
 29475: 01                       fallthrough
      :                          @2139
 29476: 82 4b                    a4 = u64 [t2]
 29478: c8 9b 0c                 a5 = a4 + a2
 29481: ac bc 69 a5 02           jump @13935 if a5 <u a4
      :                          @2140
 29486: c8 3c 07                 a0 = a5 + t1
 29489: d8 c7 06                 s1 = a0 <u a5
 29492: 8e 77 00 00 01           a0 = a0 >u 0x10000
 29497: d4 67 07                 a0 = a0 | s1
 29500: 52 07 56 a5 02           jump @13935 if a0 != 0
      :                          @2141
 29505: 82 17 40                 a0 = u64 [sp + 0x40]
 29508: c9 c7 07                 a0 = a0 - a5
 29511: 95 77 00 00 01           a0 = a0 + 0x10000
 29516: 84 76 07                 s1 = a0 & 0x7
 29519: c8 6c 0c                 a5 = a5 + s1
 29522: 82 14 48                 t2 = u64 [sp + 0x48]
 29525: 01                       fallthrough
      :                          @2142
 29526: 82 45                    s0 = u64 [t2]
 29528: ab b5 cc                 jump @2139 if s0 != a4
      :                          @2143
 29531: 7b 4c                    u64 [t2] = a5
 29533: c9 67 0a                 a3 = a0 - s1
 29536: 28 5e ff                 jump @2133
      :                          @2144
 29539: 82 19 08                 a2 = u64 [sp + 0x8]
 29542: 82 17                    a0 = u64 [sp]
 29544: 28 07                    jump @2146
      :                          @2145
 29546: 49 11 18 08              u64 [sp + 24] = 0x8
 29550: 01                       fallthrough
      :                          @2146
 29551: 7b 79                    u64 [a0] = a2
 29553: 82 18 18                 a1 = u64 [sp + 0x18]
 29556: 7b 78 08                 u64 [a0 + 0x8] = a1
 29559: 7b 79 10                 u64 [a0 + 0x10] = a2
 29562: 82 10 60                 ra = u64 [sp + 0x60]
 29565: 82 15 58                 s0 = u64 [sp + 0x58]
 29568: 82 16 50                 s1 = u64 [sp + 0x50]
 29571: 95 11 68                 sp = sp + 0x68
 29574: 32 00                    ret
      :                          @2147
 29576: 00                       trap
      :                          @2148
 29577: 00                       trap
      :                          @2149
 29578: 33 04                    t2 = 0
 29580: aa 87 4b                 jump @2157 if a0 == a1
      :                          @2150
 29583: 33 0a                    a3 = 0
 29585: 14 09 ab aa aa aa aa aa aa aa a2 = 0xaaaaaaaaaaaaaaab
 29595: c9 78 08                 a1 = a1 - a0
 29598: d6 98 08                 a1 = a1 mulhu a2
 29601: 98 83 04                 t1 = a1 >> 0x4
 29604: 33 02 18                 t0 = 0x18
 29607: 28 0e                    jump @2153
      :                          @2151
 29609: 33 0b                    a4 = 0
 29611: 01                       fallthrough
      :                          @2152
 29612: 95 aa 01                 a3 = a3 + 0x1
 29615: c8 b4 04                 t2 = t2 + a4
 29618: aa 3a 25                 jump @2157 if a3 == t1
      :                          @2153
 29621: ca 2a 08                 a1 = a3 * t0
 29624: c8 78 08                 a1 = a1 + a0
 29627: 82 8c 10                 a5 = u64 [a1 + 0x10]
 29630: 51 0c eb                 jump @2151 if a5 == 0
      :                          @2154
 29633: 82 88 08                 a1 = u64 [a1 + 0x8]
 29636: 33 0b                    a4 = 0
 29638: 01                       fallthrough
      :                          @2155
 29639: 7c 89                    a2 = u8 [a1]
 29641: c8 9b 0b                 a4 = a4 + a2
 29644: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 29647: 95 88 01                 a1 = a1 + 0x1
 29650: 52 0c f5                 jump @2155 if a5 != 0
      :                          @2156
 29653: 28 d7                    jump @2152
      :                          @2157
 29655: 64 47                    a0 = t2
 29657: 32 00                    ret
      :                          @2158 [@dyn 327]
 29659: 33 07 d0 04 01           a0 = 0x104d0
 29664: 32 00                    ret
      :                          @2159
 29666: 82 ab                    a4 = u64 [a3]
 29668: 95 b8 08                 a1 = a4 + 0x8
 29671: ac b8 41 01              jump @2163 if a1 <u a4
      :                          @2160
 29675: 95 8c 01                 a5 = a1 + 0x1
 29678: 88 c9 01                 a2 = a5 <u 0x1
 29681: d8 c2 0c                 a5 = t0 <u a5
 29684: d4 c9 09                 a2 = a2 | a5
 29687: 52 09 31 01              jump @2163 if a2 != 0
      :                          @2161
 29691: 82 a9                    a2 = u64 [a3]
 29693: ab b9 e5                 jump @2159 if a2 != a4
      :                          @2162
 29696: 7b a8                    u64 [a3] = a1
 29698: 33 0c                    a5 = 0
 29700: 3a 0a 78 12 03           a3 = u64 [0x31278]
 29705: 33 0b c0 22 04           a4 = 0x422c0
 29710: c9 8b 08                 a1 = a4 - a1
 29713: 97 ab 0d                 a4 = a3 << 0xd
 29716: d3 ba 0a                 a3 = a3 ^ a4
 29719: 98 ab 07                 a4 = a3 >> 0x7
 29722: d3 ba 0a                 a3 = a3 ^ a4
 29725: 97 ab 11                 a4 = a3 << 0x11
 29728: d3 ab 0b                 a4 = a4 ^ a3
 29731: 3e 0b 78 12 03           u64 [0x31278] = a4
 29736: 84 aa 01                 a3 = a3 & 0x1
 29739: 78 8a                    u8 [a1] = a3
 29741: 3a 0a 78 12 03           a3 = u64 [0x31278]
 29746: 97 ab 0d                 a4 = a3 << 0xd
 29749: d3 ba 0a                 a3 = a3 ^ a4
 29752: 98 ab 07                 a4 = a3 >> 0x7
 29755: d3 ba 0a                 a3 = a3 ^ a4
 29758: 97 ab 11                 a4 = a3 << 0x11
 29761: d3 ab 0b                 a4 = a4 ^ a3
 29764: 3e 0b 78 12 03           u64 [0x31278] = a4
 29769: 84 aa 01                 a3 = a3 & 0x1
 29772: 78 8a 01                 u8 [a1 + 0x1] = a3
 29775: 3a 0a 78 12 03           a3 = u64 [0x31278]
 29780: 97 ab 0d                 a4 = a3 << 0xd
 29783: d3 ba 0a                 a3 = a3 ^ a4
 29786: 98 ab 07                 a4 = a3 >> 0x7
 29789: d3 ba 0a                 a3 = a3 ^ a4
 29792: 97 ab 11                 a4 = a3 << 0x11
 29795: d3 ab 0b                 a4 = a4 ^ a3
 29798: 3e 0b 78 12 03           u64 [0x31278] = a4
 29803: 84 aa 01                 a3 = a3 & 0x1
 29806: 78 8a 02                 u8 [a1 + 0x2] = a3
 29809: 3a 0a 78 12 03           a3 = u64 [0x31278]
 29814: 97 ab 0d                 a4 = a3 << 0xd
 29817: d3 ba 0a                 a3 = a3 ^ a4
 29820: 98 ab 07                 a4 = a3 >> 0x7
 29823: d3 ba 0a                 a3 = a3 ^ a4
 29826: 97 ab 11                 a4 = a3 << 0x11
 29829: d3 ab 0b                 a4 = a4 ^ a3
 29832: 3e 0b 78 12 03           u64 [0x31278] = a4
 29837: 84 aa 01                 a3 = a3 & 0x1
 29840: 78 8a 03                 u8 [a1 + 0x3] = a3
 29843: 3a 0a 78 12 03           a3 = u64 [0x31278]
 29848: 97 ab 0d                 a4 = a3 << 0xd
 29851: d3 ba 0a                 a3 = a3 ^ a4
 29854: 98 ab 07                 a4 = a3 >> 0x7
 29857: d3 ba 0a                 a3 = a3 ^ a4
 29860: 97 ab 11                 a4 = a3 << 0x11
 29863: d3 ab 0b                 a4 = a4 ^ a3
 29866: 3e 0b 78 12 03           u64 [0x31278] = a4
 29871: 84 aa 01                 a3 = a3 & 0x1
 29874: 78 8a 04                 u8 [a1 + 0x4] = a3
 29877: 3a 0a 78 12 03           a3 = u64 [0x31278]
 29882: 97 ab 0d                 a4 = a3 << 0xd
 29885: d3 ba 0a                 a3 = a3 ^ a4
 29888: 98 ab 07                 a4 = a3 >> 0x7
 29891: d3 ba 0a                 a3 = a3 ^ a4
 29894: 97 ab 11                 a4 = a3 << 0x11
 29897: d3 ab 0b                 a4 = a4 ^ a3
 29900: 3e 0b 78 12 03           u64 [0x31278] = a4
 29905: 84 aa 01                 a3 = a3 & 0x1
 29908: 78 8a 05                 u8 [a1 + 0x5] = a3
 29911: 3a 0a 78 12 03           a3 = u64 [0x31278]
 29916: 97 ab 0d                 a4 = a3 << 0xd
 29919: d3 ba 0a                 a3 = a3 ^ a4
 29922: 98 ab 07                 a4 = a3 >> 0x7
 29925: d3 ba 0a                 a3 = a3 ^ a4
 29928: 97 ab 11                 a4 = a3 << 0x11
 29931: d3 ab 0b                 a4 = a4 ^ a3
 29934: 3e 0b 78 12 03           u64 [0x31278] = a4
 29939: 84 aa 01                 a3 = a3 & 0x1
 29942: 78 8a 06                 u8 [a1 + 0x6] = a3
 29945: 3a 0a 78 12 03           a3 = u64 [0x31278]
 29950: 97 ab 0d                 a4 = a3 << 0xd
 29953: d3 ba 0a                 a3 = a3 ^ a4
 29956: 98 ab 07                 a4 = a3 >> 0x7
 29959: d3 ba 0a                 a3 = a3 ^ a4
 29962: 97 ab 11                 a4 = a3 << 0x11
 29965: d3 ab 0b                 a4 = a4 ^ a3
 29968: 3e 0b 78 12 03           u64 [0x31278] = a4
 29973: 84 aa 01                 a3 = a3 & 0x1
 29976: 78 8a 07                 u8 [a1 + 0x7] = a3
 29979: 33 09 08                 a2 = 0x8
 29982: 7b 79                    u64 [a0] = a2
 29984: 7b 78 08                 u64 [a0 + 0x8] = a1
 29987: 7b 79 10                 u64 [a0 + 0x10] = a2
 29990: 32 00                    ret
      :                          @2163
 29992: 00                       trap
      :                          @2164
 29993: 82 4b                    a4 = u64 [t2]
 29995: 95 bc a0 00              a5 = a4 + 0xa0
 29999: ac bc 8d 00              jump @2171 if a5 <u a4
      :                          @2165
 30003: 95 c8 08                 a1 = a5 + 0x8
 30006: d8 c8 09                 a2 = a1 <u a5
 30009: d8 82 08                 a1 = t0 <u a1
 30012: d4 98 08                 a1 = a1 | a2
 30015: 52 08 7d                 jump @2171 if a1 != 0
      :                          @2166
 30018: c9 c3 08                 a1 = t1 - a5
 30021: c8 28 08                 a1 = a1 + t0
 30024: 84 89 07                 a2 = a1 & 0x7
 30027: c8 9c 0c                 a5 = a5 + a2
 30030: 01                       fallthrough
      :                          @2167
 30031: 82 4a                    a3 = u64 [t2]
 30033: ab ba d8                 jump @2164 if a3 != a4
      :                          @2168
 30036: 7b 4c                    u64 [t2] = a5
 30038: c9 98 02                 t0 = a1 - a2
 30041: 3a 04 38 10 03           t2 = u64 [0x31038]
 30046: 3a 0a 40 10 03           a3 = u64 [0x31040]
 30051: 33 0b 14                 a4 = 0x14
 30054: 33 0c 78 12 03           a5 = 0x31278
 30059: 33 03 64                 t1 = 0x64
 30062: 64 28                    a1 = t0
 30064: 01                       fallthrough
      :                          @2169
 30065: 3a 09 78 12 03           a2 = u64 [0x31278]
 30070: 97 95 0d                 s0 = a2 << 0xd
 30073: d3 59 09                 a2 = a2 ^ s0
 30076: 98 95 07                 s0 = a2 >> 0x7
 30079: d3 59 09                 a2 = a2 ^ s0
 30082: 97 95 11                 s0 = a2 << 0x11
 30085: d3 59 09                 a2 = a2 ^ s0
 30088: ca 49 05                 s0 = a2 * t2
 30091: 3e 09 78 12 03           u64 [0x31278] = a2
 30096: 98 59 02                 a2 = s0 >> 0x2
 30099: d6 a9 09                 a2 = a2 mulhu a3
 30102: 98 99 02                 a2 = a2 >> 0x2
 30105: ca 39 09                 a2 = a2 * t1
 30108: c9 95 05                 s0 = s0 - a2
 30111: 7b 85                    u64 [a1] = s0
 30113: 83 bb ff                 i32 a4 = a4 + 0xffffffffffffffff
 30116: 95 88 08                 a1 = a1 + 0x8
 30119: 52 0b ca                 jump @2169 if a4 != 0
      :                          @2170
 30122: 33 08 14                 a1 = 0x14
 30125: 7b 78                    u64 [a0] = a1
 30127: 7b 72 08                 u64 [a0 + 0x8] = t0
 30130: 7b 78 10                 u64 [a0 + 0x10] = a1
 30133: 82 15                    s0 = u64 [sp]
 30135: 95 11 08                 sp = sp + 0x8
 30138: 32 00                    ret
      :                          @2171
 30140: 00                       trap
      :                          @2172
 30141: 95 11 e8                 sp = sp + 0xffffffffffffffe8
 30144: 7b 10 10                 u64 [sp + 0x10] = ra
 30147: 7b 15 08                 u64 [sp + 0x8] = s0
 30150: 7b 16                    u64 [sp] = s1
 30152: 51 08 97 00              jump @2181 if a1 == 0
      :                          @2173
 30156: 97 82 03                 t0 = a1 << 0x3
 30159: 33 04 c0 22 03           t2 = 0x322c0
 30164: 33 03 00 00 01           t1 = 0x10000
 30169: c8 34 00                 ra = t2 + t1
 30172: 01                       fallthrough
      :                          @2174
 30173: 82 0b                    a4 = u64 [ra]
 30175: c8 2b 09                 a2 = a4 + t0
 30178: ac b9 96 00              jump @2183 if a2 <u a4
      :                          @2175
 30182: 95 96 08                 s1 = a2 + 0x8
 30185: d8 96 05                 s0 = s1 <u a2
 30188: d8 63 06                 s1 = t1 <u s1
 30191: d4 65 05                 s0 = s0 | s1
 30194: 52 05 86 00              jump @2183 if s0 != 0
      :                          @2176
 30198: c9 94 05                 s0 = t2 - a2
 30201: c8 35 05                 s0 = s0 + t1
 30204: 84 56 07                 s1 = s0 & 0x7
 30207: c8 69 09                 a2 = a2 + s1
 30210: 01                       fallthrough
      :                          @2177
 30211: 82 0a                    a3 = u64 [ra]
 30213: ab ba d8                 jump @2174 if a3 != a4
      :                          @2178
 30216: 7b 09                    u64 [ra] = a2
 30218: 3a 04 48 10 03           t2 = u64 [0x31048]
 30223: 3a 0b 50 10 03           a4 = u64 [0x31050]
 30228: c9 65 02                 t0 = s0 - s1
 30231: 33 0c 78 12 03           a5 = 0x31278
 30236: 33 03 64                 t1 = 0x64
 30239: 64 89                    a2 = a1
 30241: 64 2a                    a3 = t0
 30243: 01                       fallthrough
      :                          @2179
 30244: 3a 05 78 12 03           s0 = u64 [0x31278]
 30249: 97 56 0d                 s1 = s0 << 0xd
 30252: d3 65 05                 s0 = s0 ^ s1
 30255: 98 56 07                 s1 = s0 >> 0x7
 30258: d3 65 05                 s0 = s0 ^ s1
 30261: 97 56 11                 s1 = s0 << 0x11
 30264: d3 65 05                 s0 = s0 ^ s1
 30267: ca 45 06                 s1 = s0 * t2
 30270: 3e 05 78 12 03           u64 [0x31278] = s0
 30275: 98 65 02                 s0 = s1 >> 0x2
 30278: d6 b5 05                 s0 = s0 mulhu a4
 30281: 98 55 02                 s0 = s0 >> 0x2
 30284: ca 35 05                 s0 = s0 * t1
 30287: c9 56 06                 s1 = s1 - s0
 30290: 7b a6                    u64 [a3] = s1
 30292: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 30295: 95 aa 08                 a3 = a3 + 0x8
 30298: 52 09 ca                 jump @2179 if a2 != 0
      :                          @2180
 30301: 28 06                    jump @2182
      :                          @2181
 30303: 33 02 08                 t0 = 0x8
 30306: 01                       fallthrough
      :                          @2182
 30307: 7b 78                    u64 [a0] = a1
 30309: 7b 72 08                 u64 [a0 + 0x8] = t0
 30312: 7b 78 10                 u64 [a0 + 0x10] = a1
 30315: 82 10 10                 ra = u64 [sp + 0x10]
 30318: 82 15 08                 s0 = u64 [sp + 0x8]
 30321: 82 16                    s1 = u64 [sp]
 30323: 95 11 18                 sp = sp + 0x18
 30326: 32 00                    ret
      :                          @2183
 30328: 00                       trap
      :                          @2184
 30329: 82 4b                    a4 = u64 [t2]
 30331: 95 bc 50                 a5 = a4 + 0x50
 30334: ac bc 56 02              jump @2189 if a5 <u a4
      :                          @2185
 30338: 95 c8 08                 a1 = a5 + 0x8
 30341: d8 c8 09                 a2 = a1 <u a5
 30344: d8 82 08                 a1 = t0 <u a1
 30347: d4 98 08                 a1 = a1 | a2
 30350: 52 08 46 02              jump @2189 if a1 != 0
      :                          @2186
 30354: c9 c3 08                 a1 = t1 - a5
 30357: c8 28 08                 a1 = a1 + t0
 30360: 84 89 07                 a2 = a1 & 0x7
 30363: c8 9c 0c                 a5 = a5 + a2
 30366: 01                       fallthrough
      :                          @2187
 30367: 82 4a                    a3 = u64 [t2]
 30369: ab ba d8                 jump @2184 if a3 != a4
      :                          @2188
 30372: 7b 4c                    u64 [t2] = a5
 30374: 33 0c 78 12 03           a5 = 0x31278
 30379: 3a 0a 78 12 03           a3 = u64 [0x31278]
 30384: c9 98 08                 a1 = a1 - a2
 30387: 97 a9 0d                 a2 = a3 << 0xd
 30390: d3 a9 09                 a2 = a2 ^ a3
 30393: 98 9b 07                 a4 = a2 >> 0x7
 30396: 3a 0a 58 10 03           a3 = u64 [0x31058]
 30401: d3 b9 09                 a2 = a2 ^ a4
 30404: 97 9b 11                 a4 = a2 << 0x11
 30407: d3 b9 09                 a2 = a2 ^ a4
 30410: ca a9 05                 s0 = a2 * a3
 30413: 3a 0b 60 10 03           a4 = u64 [0x31060]
 30418: 3e 09 78 12 03           u64 [0x31278] = a2
 30423: 98 59 01                 a2 = s0 >> 0x1
 30426: d6 b9 09                 a2 = a2 mulhu a4
 30429: 98 99 04                 a2 = a2 >> 0x4
 30432: 33 02 32                 t0 = 0x32
 30435: ca 29 09                 a2 = a2 * t0
 30438: c9 95 05                 s0 = s0 - a2
 30441: 95 55 01                 s0 = s0 + 0x1
 30444: 7b 85                    u64 [a1] = s0
 30446: 3a 05 78 12 03           s0 = u64 [0x31278]
 30451: 97 59 0d                 a2 = s0 << 0xd
 30454: d3 95 05                 s0 = s0 ^ a2
 30457: 98 59 07                 a2 = s0 >> 0x7
 30460: d3 95 05                 s0 = s0 ^ a2
 30463: 97 59 11                 a2 = s0 << 0x11
 30466: d3 59 09                 a2 = a2 ^ s0
 30469: ca a9 05                 s0 = a2 * a3
 30472: 3e 09 78 12 03           u64 [0x31278] = a2
 30477: 98 59 01                 a2 = s0 >> 0x1
 30480: d6 b9 09                 a2 = a2 mulhu a4
 30483: 98 99 04                 a2 = a2 >> 0x4
 30486: ca 29 09                 a2 = a2 * t0
 30489: c9 95 05                 s0 = s0 - a2
 30492: 95 55 01                 s0 = s0 + 0x1
 30495: 7b 85 08                 u64 [a1 + 0x8] = s0
 30498: 3a 05 78 12 03           s0 = u64 [0x31278]
 30503: 97 59 0d                 a2 = s0 << 0xd
 30506: d3 95 05                 s0 = s0 ^ a2
 30509: 98 59 07                 a2 = s0 >> 0x7
 30512: d3 95 05                 s0 = s0 ^ a2
 30515: 97 59 11                 a2 = s0 << 0x11
 30518: d3 59 09                 a2 = a2 ^ s0
 30521: ca a9 05                 s0 = a2 * a3
 30524: 3e 09 78 12 03           u64 [0x31278] = a2
 30529: 98 59 01                 a2 = s0 >> 0x1
 30532: d6 b9 09                 a2 = a2 mulhu a4
 30535: 98 99 04                 a2 = a2 >> 0x4
 30538: ca 29 09                 a2 = a2 * t0
 30541: c9 95 05                 s0 = s0 - a2
 30544: 95 55 01                 s0 = s0 + 0x1
 30547: 7b 85 10                 u64 [a1 + 0x10] = s0
 30550: 3a 05 78 12 03           s0 = u64 [0x31278]
 30555: 97 59 0d                 a2 = s0 << 0xd
 30558: d3 95 05                 s0 = s0 ^ a2
 30561: 98 59 07                 a2 = s0 >> 0x7
 30564: d3 95 05                 s0 = s0 ^ a2
 30567: 97 59 11                 a2 = s0 << 0x11
 30570: d3 59 09                 a2 = a2 ^ s0
 30573: ca a9 05                 s0 = a2 * a3
 30576: 3e 09 78 12 03           u64 [0x31278] = a2
 30581: 98 59 01                 a2 = s0 >> 0x1
 30584: d6 b9 09                 a2 = a2 mulhu a4
 30587: 98 99 04                 a2 = a2 >> 0x4
 30590: ca 29 09                 a2 = a2 * t0
 30593: c9 95 05                 s0 = s0 - a2
 30596: 95 55 01                 s0 = s0 + 0x1
 30599: 7b 85 18                 u64 [a1 + 0x18] = s0
 30602: 3a 05 78 12 03           s0 = u64 [0x31278]
 30607: 97 59 0d                 a2 = s0 << 0xd
 30610: d3 95 05                 s0 = s0 ^ a2
 30613: 98 59 07                 a2 = s0 >> 0x7
 30616: d3 95 05                 s0 = s0 ^ a2
 30619: 97 59 11                 a2 = s0 << 0x11
 30622: d3 59 09                 a2 = a2 ^ s0
 30625: ca a9 05                 s0 = a2 * a3
 30628: 3e 09 78 12 03           u64 [0x31278] = a2
 30633: 98 59 01                 a2 = s0 >> 0x1
 30636: d6 b9 09                 a2 = a2 mulhu a4
 30639: 98 99 04                 a2 = a2 >> 0x4
 30642: ca 29 09                 a2 = a2 * t0
 30645: c9 95 05                 s0 = s0 - a2
 30648: 95 55 01                 s0 = s0 + 0x1
 30651: 7b 85 20                 u64 [a1 + 0x20] = s0
 30654: 3a 05 78 12 03           s0 = u64 [0x31278]
 30659: 97 59 0d                 a2 = s0 << 0xd
 30662: d3 95 05                 s0 = s0 ^ a2
 30665: 98 59 07                 a2 = s0 >> 0x7
 30668: d3 95 05                 s0 = s0 ^ a2
 30671: 97 59 11                 a2 = s0 << 0x11
 30674: d3 59 09                 a2 = a2 ^ s0
 30677: ca a9 05                 s0 = a2 * a3
 30680: 3e 09 78 12 03           u64 [0x31278] = a2
 30685: 98 59 01                 a2 = s0 >> 0x1
 30688: d6 b9 09                 a2 = a2 mulhu a4
 30691: 98 99 04                 a2 = a2 >> 0x4
 30694: ca 29 09                 a2 = a2 * t0
 30697: c9 95 05                 s0 = s0 - a2
 30700: 95 55 01                 s0 = s0 + 0x1
 30703: 7b 85 28                 u64 [a1 + 0x28] = s0
 30706: 3a 05 78 12 03           s0 = u64 [0x31278]
 30711: 97 59 0d                 a2 = s0 << 0xd
 30714: d3 95 05                 s0 = s0 ^ a2
 30717: 98 59 07                 a2 = s0 >> 0x7
 30720: d3 95 05                 s0 = s0 ^ a2
 30723: 97 59 11                 a2 = s0 << 0x11
 30726: d3 59 09                 a2 = a2 ^ s0
 30729: ca a9 05                 s0 = a2 * a3
 30732: 3e 09 78 12 03           u64 [0x31278] = a2
 30737: 98 59 01                 a2 = s0 >> 0x1
 30740: d6 b9 09                 a2 = a2 mulhu a4
 30743: 98 99 04                 a2 = a2 >> 0x4
 30746: ca 29 09                 a2 = a2 * t0
 30749: c9 95 05                 s0 = s0 - a2
 30752: 95 55 01                 s0 = s0 + 0x1
 30755: 7b 85 30                 u64 [a1 + 0x30] = s0
 30758: 3a 05 78 12 03           s0 = u64 [0x31278]
 30763: 97 59 0d                 a2 = s0 << 0xd
 30766: d3 95 05                 s0 = s0 ^ a2
 30769: 98 59 07                 a2 = s0 >> 0x7
 30772: d3 95 05                 s0 = s0 ^ a2
 30775: 97 59 11                 a2 = s0 << 0x11
 30778: d3 59 09                 a2 = a2 ^ s0
 30781: ca a9 05                 s0 = a2 * a3
 30784: 3e 09 78 12 03           u64 [0x31278] = a2
 30789: 98 59 01                 a2 = s0 >> 0x1
 30792: d6 b9 09                 a2 = a2 mulhu a4
 30795: 98 99 04                 a2 = a2 >> 0x4
 30798: ca 29 09                 a2 = a2 * t0
 30801: c9 95 05                 s0 = s0 - a2
 30804: 95 55 01                 s0 = s0 + 0x1
 30807: 7b 85 38                 u64 [a1 + 0x38] = s0
 30810: 3a 05 78 12 03           s0 = u64 [0x31278]
 30815: 97 59 0d                 a2 = s0 << 0xd
 30818: d3 95 05                 s0 = s0 ^ a2
 30821: 98 59 07                 a2 = s0 >> 0x7
 30824: d3 95 05                 s0 = s0 ^ a2
 30827: 97 59 11                 a2 = s0 << 0x11
 30830: d3 59 09                 a2 = a2 ^ s0
 30833: ca a9 05                 s0 = a2 * a3
 30836: 3e 09 78 12 03           u64 [0x31278] = a2
 30841: 98 59 01                 a2 = s0 >> 0x1
 30844: d6 b9 09                 a2 = a2 mulhu a4
 30847: 98 99 04                 a2 = a2 >> 0x4
 30850: ca 29 09                 a2 = a2 * t0
 30853: c9 95 05                 s0 = s0 - a2
 30856: 95 55 01                 s0 = s0 + 0x1
 30859: 7b 85 40                 u64 [a1 + 0x40] = s0
 30862: 3a 05 78 12 03           s0 = u64 [0x31278]
 30867: 97 59 0d                 a2 = s0 << 0xd
 30870: d3 95 05                 s0 = s0 ^ a2
 30873: 98 59 07                 a2 = s0 >> 0x7
 30876: d3 95 05                 s0 = s0 ^ a2
 30879: 97 59 11                 a2 = s0 << 0x11
 30882: d3 59 09                 a2 = a2 ^ s0
 30885: ca a9 0a                 a3 = a2 * a3
 30888: 3e 09 78 12 03           u64 [0x31278] = a2
 30893: 98 a9 01                 a2 = a3 >> 0x1
 30896: d6 b9 09                 a2 = a2 mulhu a4
 30899: 98 99 04                 a2 = a2 >> 0x4
 30902: ca 29 09                 a2 = a2 * t0
 30905: c9 9a 0a                 a3 = a3 - a2
 30908: 95 aa 01                 a3 = a3 + 0x1
 30911: 7b 8a 48                 u64 [a1 + 0x48] = a3
 30914: 33 09 0a                 a2 = 0xa
 30917: 7b 79                    u64 [a0] = a2
 30919: 7b 78 08                 u64 [a0 + 0x8] = a1
 30922: 7b 79 10                 u64 [a0 + 0x10] = a2
 30925: 82 15                    s0 = u64 [sp]
 30927: 95 11 08                 sp = sp + 0x8
 30930: 32 00                    ret
      :                          @2189
 30932: 00                       trap
      :                          @2190
 30933: 51 08 8c 00              jump @2198 if a1 == 0
      :                          @2191
 30937: 33 0c c0 22 03           a5 = 0x322c0
 30942: 33 02 00 00 01           t0 = 0x10000
 30947: c8 2c 03                 t1 = a5 + t0
 30950: 01                       fallthrough
      :                          @2192
 30951: 82 39                    a2 = u64 [t1]
 30953: c8 89 0a                 a3 = a2 + a1
 30956: ac 9a 82 00              jump @2199 if a3 <u a2
      :                          @2193
 30960: 95 ab 01                 a4 = a3 + 0x1
 30963: 88 bc 01                 a5 = a4 <u 0x1
 30966: d8 b2 0b                 a4 = t0 <u a4
 30969: d4 cb 0b                 a4 = a4 | a5
 30972: 52 0b 72                 jump @2199 if a4 != 0
      :                          @2194
 30975: 82 3b                    a4 = u64 [t1]
 30977: ab 9b e6                 jump @2192 if a4 != a2
      :                          @2195
 30980: 7b 3a                    u64 [t1] = a3
 30982: 33 0c c0 22 03           a5 = 0x322c0
 30987: 95 cb 00 00 01           a4 = a5 + 0x10000
 30992: c9 ab 02                 t0 = a4 - a3
 30995: 95 ca 00 00 01           a3 = a5 + 0x10000
 31000: c9 9a 03                 t1 = a3 - a2
 31003: 9a 8b                    a4 = -a1
 31005: 33 04 78 12 03           t2 = 0x31278
 31010: 33 09 b0 04 01           a2 = 0x104b0
 31015: 01                       fallthrough
      :                          @2196
 31016: 3a 0c 78 12 03           a5 = u64 [0x31278]
 31021: 97 ca 0d                 a3 = a5 << 0xd
 31024: d3 ca 0a                 a3 = a3 ^ a5
 31027: 98 ac 07                 a5 = a3 >> 0x7
 31030: d3 ca 0a                 a3 = a3 ^ a5
 31033: 97 ac 11                 a5 = a3 << 0x11
 31036: d3 ac 0c                 a5 = a5 ^ a3
 31039: 3e 0c 78 12 03           u64 [0x31278] = a5
 31044: 84 aa 03                 a3 = a3 & 0x3
 31047: c8 9a 0a                 a3 = a3 + a2
 31050: 7c aa                    a3 = u8 [a3]
 31052: c8 b3 0c                 a5 = t1 + a4
 31055: 95 bb 01                 a4 = a4 + 0x1
 31058: 78 ca                    u8 [a5] = a3
 31060: 52 0b d4                 jump @2196 if a4 != 0
      :                          @2197
 31063: 7b 78                    u64 [a0] = a1
 31065: 7b 72 08                 u64 [a0 + 0x8] = t0
 31068: 7b 78 10                 u64 [a0 + 0x10] = a1
 31071: 32 00                    ret
      :                          @2198
 31073: 33 02 01                 t0 = 0x1
 31076: 7b 78                    u64 [a0] = a1
 31078: 7b 72 08                 u64 [a0 + 0x8] = t0
 31081: 7b 78 10                 u64 [a0 + 0x10] = a1
 31084: 32 00                    ret
      :                          @2199
 31086: 00                       trap
      :                          @2200
 31087: 82 9a                    a3 = u64 [a2]
 31089: 95 ab 20                 a4 = a3 + 0x20
 31092: ac ab 2e 01              jump @2218 if a4 <u a3
      :                          @2201
 31096: 95 b7 04                 a0 = a4 + 0x4
 31099: d8 b7 0c                 a5 = a0 <u a4
 31102: d8 72 07                 a0 = t0 <u a0
 31105: d4 c7 07                 a0 = a0 | a5
 31108: 52 07 1e 01              jump @2218 if a0 != 0
      :                          @2202
 31112: c9 b6 07                 a0 = s1 - a4
 31115: c8 27 07                 a0 = a0 + t0
 31118: 84 7c 03                 a5 = a0 & 0x3
 31121: c8 cb 0b                 a4 = a4 + a5
 31124: 01                       fallthrough
      :                          @2203
 31125: 82 95                    s0 = u64 [a2]
 31127: ab a5 d8                 jump @2200 if s0 != a3
      :                          @2204
 31130: 7b 9b                    u64 [a2] = a4
 31132: c9 c7 07                 a0 = a0 - a5
 31135: 48 07 41                 u32 [a0 + 0] = 0x41
 31138: 49 11 28 08              u64 [sp + 40] = 0x8
 31142: 7b 17 30                 u64 [sp + 0x30] = a0
 31145: 33 06 01                 s1 = 0x1
 31148: 7b 16 38                 u64 [sp + 0x38] = s1
 31151: 33 08 c8 05 01           a1 = 0x105c8
 31156: c8 68 0b                 a4 = a1 + s1
 31159: 33 05 04                 s0 = 0x4
 31162: 7b 18 10                 u64 [sp + 0x10] = a1
 31165: 95 80 1a                 ra = a1 + 0x1a
 31168: 33 02 df 00              t0 = 0xdf
 31172: 33 03 f0 00              t1 = 0xf0
 31176: 33 04 00 00 11           t2 = 0x110000
 31181: 7b 10 08                 u64 [sp + 0x8] = ra
 31184: 28 1e                    jump @2208
      :                          @2205
 31186: 95 bb 01                 a4 = a4 + 0x1
 31189: 01                       fallthrough
      :                          @2206
 31190: 82 18 28                 a1 = u64 [sp + 0x28]
 31193: aa 86 6c                 jump @2215 if s1 == a1
      :                          @2207
 31196: c8 57 08                 a1 = a0 + s0
 31199: 7a 8c                    u32 [a1] = a5
 31201: 95 66 01                 s1 = s1 + 0x1
 31204: 7b 16 38                 u64 [sp + 0x38] = s1
 31207: 95 55 04                 s0 = s0 + 0x4
 31210: aa 0b 97 00              jump @2217 if a4 == ra
      :                          @2208
 31214: 7d b8                    a1 = i8 [a4]
 31216: 84 8c ff 00              a5 = a1 & 0xff
 31220: 59 08 de                 jump @2205 if a1 >=s 0
      :                          @2209
 31223: 7c b9 01                 a2 = u8 [a4 + 0x1]
 31226: 84 c8 1f                 a1 = a5 & 0x1f
 31229: 84 99 3f                 a2 = a2 & 0x3f
 31232: ae c2 2f                 jump @2213 if t0 >=u a5
      :                          @2210
 31235: 7c ba 02                 a3 = u8 [a4 + 0x2]
 31238: 97 99 06                 a2 = a2 << 0x6
 31241: 84 aa 3f                 a3 = a3 & 0x3f
 31244: d4 a9 09                 a2 = a2 | a3
 31247: ac 3c 2b                 jump @2214 if a5 <u t1
      :                          @2211
 31250: 7c ba 03                 a3 = u8 [a4 + 0x3]
 31253: 97 88 3d                 a1 = a1 << 0x3d
 31256: 98 88 2b                 a1 = a1 >> 0x2b
 31259: 97 99 06                 a2 = a2 << 0x6
 31262: 84 aa 3f                 a3 = a3 & 0x3f
 31265: d4 a9 09                 a2 = a2 | a3
 31268: d4 89 0c                 a5 = a2 | a1
 31271: aa 4c 5a                 jump @2217 if a5 == t2
      :                          @2212
 31274: 95 bb 04                 a4 = a4 + 0x4
 31277: 28 a9                    jump @2206
      :                          @2213
 31279: 95 bb 02                 a4 = a4 + 0x2
 31282: 97 88 06                 a1 = a1 << 0x6
 31285: d4 98 0c                 a5 = a1 | a2
 31288: 28 9e                    jump @2206
      :                          @2214
 31290: 95 bb 03                 a4 = a4 + 0x3
 31293: 97 88 0c                 a1 = a1 << 0xc
 31296: d4 89 0c                 a5 = a2 | a1
 31299: 28 93                    jump @2206
      :                          @2215
 31301: 82 17 10                 a0 = u64 [sp + 0x10]
 31304: c9 b7 07                 a0 = a0 - a4
 31307: 95 77 1d                 a0 = a0 + 0x1d
 31310: 98 77 02                 a0 = a0 >> 0x2
 31313: 95 79 01                 a2 = a0 + 0x1
 31316: 95 17 28                 a0 = sp + 0x28
 31319: 64 68                    a1 = s1
 31321: 7b 1b 20                 u64 [sp + 0x20] = a4
 31324: 7b 1c 18                 u64 [sp + 0x18] = a5
 31327: 50 20 90 02 5c dc        ra = 656, jump @1665
      :                          @2216 [@dyn 328]
 31333: 82 1c 18                 a5 = u64 [sp + 0x18]
 31336: 33 04 00 00 11           t2 = 0x110000
 31341: 33 03 f0 00              t1 = 0xf0
 31345: 33 02 df 00              t0 = 0xdf
 31349: 82 10 08                 ra = u64 [sp + 0x8]
 31352: 82 1b 20                 a4 = u64 [sp + 0x20]
 31355: 82 17 30                 a0 = u64 [sp + 0x30]
 31358: 28 5e ff                 jump @2207
      :                          @2217
 31361: 82 17 38                 a0 = u64 [sp + 0x38]
 31364: 82 18 30                 a1 = u64 [sp + 0x30]
 31367: 82 19 28                 a2 = u64 [sp + 0x28]
 31370: 82 1a                    a3 = u64 [sp]
 31372: 7b a7 10                 u64 [a3 + 0x10] = a0
 31375: 7b a8 08                 u64 [a3 + 0x8] = a1
 31378: 7b a9                    u64 [a3] = a2
 31380: 82 10 50                 ra = u64 [sp + 0x50]
 31383: 82 15 48                 s0 = u64 [sp + 0x48]
 31386: 82 16 40                 s1 = u64 [sp + 0x40]
 31389: 95 11 58                 sp = sp + 0x58
 31392: 32 00                    ret
      :                          @2218
 31394: 00                       trap
      :                          @2219
 31395: 82 4b                    a4 = u64 [t2]
 31397: 95 bc 50                 a5 = a4 + 0x50
 31400: ac bc 92 02              jump @2224 if a5 <u a4
      :                          @2220
 31404: 95 c8 08                 a1 = a5 + 0x8
 31407: d8 c8 09                 a2 = a1 <u a5
 31410: d8 82 08                 a1 = t0 <u a1
 31413: d4 98 08                 a1 = a1 | a2
 31416: 52 08 82 02              jump @2224 if a1 != 0
      :                          @2221
 31420: c9 c3 08                 a1 = t1 - a5
 31423: c8 28 08                 a1 = a1 + t0
 31426: 84 89 07                 a2 = a1 & 0x7
 31429: c8 9c 0c                 a5 = a5 + a2
 31432: 01                       fallthrough
      :                          @2222
 31433: 82 4a                    a3 = u64 [t2]
 31435: ab ba d8                 jump @2219 if a3 != a4
      :                          @2223
 31438: 7b 4c                    u64 [t2] = a5
 31440: 33 02 78 12 03           t0 = 0x31278
 31445: 3a 0a 78 12 03           a3 = u64 [0x31278]
 31450: c9 98 08                 a1 = a1 - a2
 31453: 97 a9 0d                 a2 = a3 << 0xd
 31456: d3 a9 09                 a2 = a2 ^ a3
 31459: 98 9a 07                 a3 = a2 >> 0x7
 31462: d3 a9 09                 a2 = a2 ^ a3
 31465: 97 9b 11                 a4 = a2 << 0x11
 31468: 3a 0a 68 10 03           a3 = u64 [0x31068]
 31473: d3 b9 09                 a2 = a2 ^ a4
 31476: 3a 0b 70 10 03           a4 = u64 [0x31070]
 31481: ca a9 0c                 a5 = a2 * a3
 31484: 3e 09 78 12 03           u64 [0x31278] = a2
 31489: d6 bc 09                 a2 = a5 mulhu a4
 31492: c9 9c 05                 s0 = a5 - a2
 31495: 98 55 01                 s0 = s0 >> 0x1
 31498: c8 59 09                 a2 = a2 + s0
 31501: 98 99 04                 a2 = a2 >> 0x4
 31504: 33 03 15                 t1 = 0x15
 31507: ca 39 09                 a2 = a2 * t1
 31510: c9 9c 0c                 a5 = a5 - a2
 31513: 95 cc f6                 a5 = a5 + 0xfffffffffffffff6
 31516: 7b 8c                    u64 [a1] = a5
 31518: 3a 09 78 12 03           a2 = u64 [0x31278]
 31523: 97 9c 0d                 a5 = a2 << 0xd
 31526: d3 c9 09                 a2 = a2 ^ a5
 31529: 98 9c 07                 a5 = a2 >> 0x7
 31532: d3 c9 09                 a2 = a2 ^ a5
 31535: 97 9c 11                 a5 = a2 << 0x11
 31538: d3 c9 09                 a2 = a2 ^ a5
 31541: ca a9 05                 s0 = a2 * a3
 31544: 3e 09 78 12 03           u64 [0x31278] = a2
 31549: d6 b5 09                 a2 = s0 mulhu a4
 31552: c9 95 0c                 a5 = s0 - a2
 31555: 98 cc 01                 a5 = a5 >> 0x1
 31558: c8 c9 09                 a2 = a2 + a5
 31561: 98 99 04                 a2 = a2 >> 0x4
 31564: ca 39 09                 a2 = a2 * t1
 31567: c9 95 05                 s0 = s0 - a2
 31570: 95 55 f6                 s0 = s0 + 0xfffffffffffffff6
 31573: 7b 85 08                 u64 [a1 + 0x8] = s0
 31576: 3a 09 78 12 03           a2 = u64 [0x31278]
 31581: 97 9c 0d                 a5 = a2 << 0xd
 31584: d3 c9 09                 a2 = a2 ^ a5
 31587: 98 9c 07                 a5 = a2 >> 0x7
 31590: d3 c9 09                 a2 = a2 ^ a5
 31593: 97 9c 11                 a5 = a2 << 0x11
 31596: d3 c9 09                 a2 = a2 ^ a5
 31599: ca a9 05                 s0 = a2 * a3
 31602: 3e 09 78 12 03           u64 [0x31278] = a2
 31607: d6 b5 09                 a2 = s0 mulhu a4
 31610: c9 95 0c                 a5 = s0 - a2
 31613: 98 cc 01                 a5 = a5 >> 0x1
 31616: c8 c9 09                 a2 = a2 + a5
 31619: 98 99 04                 a2 = a2 >> 0x4
 31622: ca 39 09                 a2 = a2 * t1
 31625: c9 95 05                 s0 = s0 - a2
 31628: 95 55 f6                 s0 = s0 + 0xfffffffffffffff6
 31631: 7b 85 10                 u64 [a1 + 0x10] = s0
 31634: 3a 09 78 12 03           a2 = u64 [0x31278]
 31639: 97 9c 0d                 a5 = a2 << 0xd
 31642: d3 c9 09                 a2 = a2 ^ a5
 31645: 98 9c 07                 a5 = a2 >> 0x7
 31648: d3 c9 09                 a2 = a2 ^ a5
 31651: 97 9c 11                 a5 = a2 << 0x11
 31654: d3 c9 09                 a2 = a2 ^ a5
 31657: ca a9 05                 s0 = a2 * a3
 31660: 3e 09 78 12 03           u64 [0x31278] = a2
 31665: d6 b5 09                 a2 = s0 mulhu a4
 31668: c9 95 0c                 a5 = s0 - a2
 31671: 98 cc 01                 a5 = a5 >> 0x1
 31674: c8 c9 09                 a2 = a2 + a5
 31677: 98 99 04                 a2 = a2 >> 0x4
 31680: ca 39 09                 a2 = a2 * t1
 31683: c9 95 05                 s0 = s0 - a2
 31686: 95 55 f6                 s0 = s0 + 0xfffffffffffffff6
 31689: 7b 85 18                 u64 [a1 + 0x18] = s0
 31692: 3a 09 78 12 03           a2 = u64 [0x31278]
 31697: 97 9c 0d                 a5 = a2 << 0xd
 31700: d3 c9 09                 a2 = a2 ^ a5
 31703: 98 9c 07                 a5 = a2 >> 0x7
 31706: d3 c9 09                 a2 = a2 ^ a5
 31709: 97 9c 11                 a5 = a2 << 0x11
 31712: d3 c9 09                 a2 = a2 ^ a5
 31715: ca a9 05                 s0 = a2 * a3
 31718: 3e 09 78 12 03           u64 [0x31278] = a2
 31723: d6 b5 09                 a2 = s0 mulhu a4
 31726: c9 95 0c                 a5 = s0 - a2
 31729: 98 cc 01                 a5 = a5 >> 0x1
 31732: c8 c9 09                 a2 = a2 + a5
 31735: 98 99 04                 a2 = a2 >> 0x4
 31738: ca 39 09                 a2 = a2 * t1
 31741: c9 95 05                 s0 = s0 - a2
 31744: 95 55 f6                 s0 = s0 + 0xfffffffffffffff6
 31747: 7b 85 20                 u64 [a1 + 0x20] = s0
 31750: 3a 09 78 12 03           a2 = u64 [0x31278]
 31755: 97 9c 0d                 a5 = a2 << 0xd
 31758: d3 c9 09                 a2 = a2 ^ a5
 31761: 98 9c 07                 a5 = a2 >> 0x7
 31764: d3 c9 09                 a2 = a2 ^ a5
 31767: 97 9c 11                 a5 = a2 << 0x11
 31770: d3 c9 09                 a2 = a2 ^ a5
 31773: ca a9 05                 s0 = a2 * a3
 31776: 3e 09 78 12 03           u64 [0x31278] = a2
 31781: d6 b5 09                 a2 = s0 mulhu a4
 31784: c9 95 0c                 a5 = s0 - a2
 31787: 98 cc 01                 a5 = a5 >> 0x1
 31790: c8 c9 09                 a2 = a2 + a5
 31793: 98 99 04                 a2 = a2 >> 0x4
 31796: ca 39 09                 a2 = a2 * t1
 31799: c9 95 05                 s0 = s0 - a2
 31802: 95 55 f6                 s0 = s0 + 0xfffffffffffffff6
 31805: 7b 85 28                 u64 [a1 + 0x28] = s0
 31808: 3a 09 78 12 03           a2 = u64 [0x31278]
 31813: 97 9c 0d                 a5 = a2 << 0xd
 31816: d3 c9 09                 a2 = a2 ^ a5
 31819: 98 9c 07                 a5 = a2 >> 0x7
 31822: d3 c9 09                 a2 = a2 ^ a5
 31825: 97 9c 11                 a5 = a2 << 0x11
 31828: d3 c9 09                 a2 = a2 ^ a5
 31831: ca a9 05                 s0 = a2 * a3
 31834: 3e 09 78 12 03           u64 [0x31278] = a2
 31839: d6 b5 09                 a2 = s0 mulhu a4
 31842: c9 95 0c                 a5 = s0 - a2
 31845: 98 cc 01                 a5 = a5 >> 0x1
 31848: c8 c9 09                 a2 = a2 + a5
 31851: 98 99 04                 a2 = a2 >> 0x4
 31854: ca 39 09                 a2 = a2 * t1
 31857: c9 95 05                 s0 = s0 - a2
 31860: 95 55 f6                 s0 = s0 + 0xfffffffffffffff6
 31863: 7b 85 30                 u64 [a1 + 0x30] = s0
 31866: 3a 09 78 12 03           a2 = u64 [0x31278]
 31871: 97 9c 0d                 a5 = a2 << 0xd
 31874: d3 c9 09                 a2 = a2 ^ a5
 31877: 98 9c 07                 a5 = a2 >> 0x7
 31880: d3 c9 09                 a2 = a2 ^ a5
 31883: 97 9c 11                 a5 = a2 << 0x11
 31886: d3 c9 09                 a2 = a2 ^ a5
 31889: ca a9 05                 s0 = a2 * a3
 31892: 3e 09 78 12 03           u64 [0x31278] = a2
 31897: d6 b5 09                 a2 = s0 mulhu a4
 31900: c9 95 0c                 a5 = s0 - a2
 31903: 98 cc 01                 a5 = a5 >> 0x1
 31906: c8 c9 09                 a2 = a2 + a5
 31909: 98 99 04                 a2 = a2 >> 0x4
 31912: ca 39 09                 a2 = a2 * t1
 31915: c9 95 05                 s0 = s0 - a2
 31918: 95 55 f6                 s0 = s0 + 0xfffffffffffffff6
 31921: 7b 85 38                 u64 [a1 + 0x38] = s0
 31924: 3a 09 78 12 03           a2 = u64 [0x31278]
 31929: 97 9c 0d                 a5 = a2 << 0xd
 31932: d3 c9 09                 a2 = a2 ^ a5
 31935: 98 9c 07                 a5 = a2 >> 0x7
 31938: d3 c9 09                 a2 = a2 ^ a5
 31941: 97 9c 11                 a5 = a2 << 0x11
 31944: d3 c9 09                 a2 = a2 ^ a5
 31947: ca a9 05                 s0 = a2 * a3
 31950: 3e 09 78 12 03           u64 [0x31278] = a2
 31955: d6 b5 09                 a2 = s0 mulhu a4
 31958: c9 95 0c                 a5 = s0 - a2
 31961: 98 cc 01                 a5 = a5 >> 0x1
 31964: c8 c9 09                 a2 = a2 + a5
 31967: 98 99 04                 a2 = a2 >> 0x4
 31970: ca 39 09                 a2 = a2 * t1
 31973: c9 95 05                 s0 = s0 - a2
 31976: 95 55 f6                 s0 = s0 + 0xfffffffffffffff6
 31979: 7b 85 40                 u64 [a1 + 0x40] = s0
 31982: 3a 09 78 12 03           a2 = u64 [0x31278]
 31987: 97 9c 0d                 a5 = a2 << 0xd
 31990: d3 c9 09                 a2 = a2 ^ a5
 31993: 98 9c 07                 a5 = a2 >> 0x7
 31996: d3 c9 09                 a2 = a2 ^ a5
 31999: 97 9c 11                 a5 = a2 << 0x11
 32002: d3 c9 09                 a2 = a2 ^ a5
 32005: ca a9 0a                 a3 = a2 * a3
 32008: 3e 09 78 12 03           u64 [0x31278] = a2
 32013: d6 ba 09                 a2 = a3 mulhu a4
 32016: c9 9a 0b                 a4 = a3 - a2
 32019: 98 bb 01                 a4 = a4 >> 0x1
 32022: c8 b9 09                 a2 = a2 + a4
 32025: 98 99 04                 a2 = a2 >> 0x4
 32028: ca 39 09                 a2 = a2 * t1
 32031: c9 9a 0a                 a3 = a3 - a2
 32034: 95 aa f6                 a3 = a3 + 0xfffffffffffffff6
 32037: 7b 8a 48                 u64 [a1 + 0x48] = a3
 32040: 33 09 0a                 a2 = 0xa
 32043: 7b 79                    u64 [a0] = a2
 32045: 7b 78 08                 u64 [a0 + 0x8] = a1
 32048: 7b 79 10                 u64 [a0 + 0x10] = a2
 32051: 82 15                    s0 = u64 [sp]
 32053: 95 11 08                 sp = sp + 0x8
 32056: 32 00                    ret
      :                          @2224
 32058: 00                       trap
      :                          @2225
 32059: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 32062: 7b 10 38                 u64 [sp + 0x38] = ra
 32065: 7b 15 30                 u64 [sp + 0x30] = s0
 32068: 7b 16 28                 u64 [sp + 0x28] = s1
 32071: 7c 89 10                 a2 = u8 [a1 + 0x10]
 32074: 33 04 08                 t2 = 0x8
 32077: 52 09 0b                 jump @2227 if a2 != 0
      :                          @2226
 32080: 82 89                    a2 = u64 [a1]
 32082: 82 8a 08                 a3 = u64 [a1 + 0x8]
 32085: ae 9a 1e                 jump @2229 if a3 >=u a2
      :                          @2227
 32088: 33 08                    a1 = 0
 32090: 33 0c                    a5 = 0
 32092: 01                       fallthrough
      :                          @2228
 32093: 7b 78                    u64 [a0] = a1
 32095: 7b 74 08                 u64 [a0 + 0x8] = t2
 32098: 7b 7c 10                 u64 [a0 + 0x10] = a5
 32101: 82 10 38                 ra = u64 [sp + 0x38]
 32104: 82 15 30                 s0 = u64 [sp + 0x30]
 32107: 82 16 28                 s1 = u64 [sp + 0x28]
 32110: 95 11 40                 sp = sp + 0x40
 32113: 32 00                    ret
      :                          @2229
 32115: c9 9a 08                 a1 = a3 - a2
 32118: 95 84 01                 t2 = a1 + 0x1
 32121: 51 04 18 01              jump @2244 if t2 == 0
      :                          @2230
 32125: 7b 1a 18                 u64 [sp + 0x18] = a3
 32128: 7b 19 20                 u64 [sp + 0x20] = a2
 32131: 7b 18                    u64 [sp] = a1
 32133: 98 48 3c                 a1 = t2 >> 0x3c
 32136: 52 08 0a 01              jump @2245 if a1 != 0
      :                          @2231
 32140: 7b 17 10                 u64 [sp + 0x10] = a0
 32143: 88 89 01                 a2 = a1 <u 0x1
 32146: 7b 14 08                 u64 [sp + 0x8] = t2
 32149: 97 44 03                 t2 = t2 << 0x3
 32152: 97 99 03                 a2 = a2 << 0x3
 32155: 33 0c c0 22 03           a5 = 0x322c0
 32160: 33 02 00 00 01           t0 = 0x10000
 32165: c8 2c 0a                 a3 = a5 + t0
 32168: 01                       fallthrough
      :                          @2232
 32169: 82 a6                    s1 = u64 [a3]
 32171: c8 46 08                 a1 = s1 + t2
 32174: ac 68 e2 00              jump @2243 if a1 <u s1
      :                          @2233
 32178: c8 98 0b                 a4 = a1 + a2
 32181: d8 8b 05                 s0 = a4 <u a1
 32184: d8 b2 0b                 a4 = t0 <u a4
 32187: d4 5b 0b                 a4 = a4 | s0
 32190: 52 0b d2 00              jump @2243 if a4 != 0
      :                          @2234
 32194: c9 8c 0b                 a4 = a5 - a1
 32197: c8 2b 0b                 a4 = a4 + t0
 32200: 84 b5 07                 s0 = a4 & 0x7
 32203: c8 58 08                 a1 = a1 + s0
 32206: 01                       fallthrough
      :                          @2235
 32207: 82 a0                    ra = u64 [a3]
 32209: ab 60 d8                 jump @2232 if ra != s1
      :                          @2236
 32212: 7b a8                    u64 [a3] = a1
 32214: 33 03                    t1 = 0
 32216: 01                       fallthrough
      :                          @2237
 32217: 3a 08 78 10 03           a1 = u64 [0x31078]
 32222: c9 5b 04                 t2 = a4 - s0
 32225: 82 17 20                 a0 = u64 [sp + 0x20]
 32228: 82 19 18                 a2 = u64 [sp + 0x18]
 32231: ae 97 57                 jump @2241 if a0 >=u a2
      :                          @2238
 32234: 33 0c                    a5 = 0
 32236: 33 09 78 12 03           a2 = 0x31278
 32241: 14 0a cd cc cc cc cc cc cc cc a3 = 0xcccccccccccccccd
 32251: 33 02 14                 t0 = 0x14
 32254: 64 45                    s0 = t2
 32256: 82 17                    a0 = u64 [sp]
 32258: 01                       fallthrough
      :                          @2239
 32259: 3a 06 78 12 03           s1 = u64 [0x31278]
 32264: 97 6b 0d                 a4 = s1 << 0xd
 32267: d3 b6 06                 s1 = s1 ^ a4
 32270: 98 6b 07                 a4 = s1 >> 0x7
 32273: d3 b6 06                 s1 = s1 ^ a4
 32276: 97 6b 11                 a4 = s1 << 0x11
 32279: d3 6b 0b                 a4 = a4 ^ s1
 32282: ca 8b 06                 s1 = a4 * a1
 32285: 3e 0b 78 12 03           u64 [0x31278] = a4
 32290: d6 a6 0b                 a4 = s1 mulhu a3
 32293: 98 bb 04                 a4 = a4 >> 0x4
 32296: ca 2b 0b                 a4 = a4 * t0
 32299: c9 b6 06                 s1 = s1 - a4
 32302: 95 66 01                 s1 = s1 + 0x1
 32305: 7b 56                    u64 [s0] = s1
 32307: 95 cc 01                 a5 = a5 + 0x1
 32310: 95 55 08                 s0 = s0 + 0x8
 32313: ab c7 ca                 jump @2239 if a0 != a5
      :                          @2240
 32316: 28 05                    jump @2242
      :                          @2241
 32318: 33 0c                    a5 = 0
 32320: 01                       fallthrough
      :                          @2242
 32321: 3a 09 78 12 03           a2 = u64 [0x31278]
 32326: 97 9a 0d                 a3 = a2 << 0xd
 32329: d3 a9 09                 a2 = a2 ^ a3
 32332: 98 9a 07                 a3 = a2 >> 0x7
 32335: d3 a9 09                 a2 = a2 ^ a3
 32338: 97 9a 11                 a3 = a2 << 0x11
 32341: d3 a9 09                 a2 = a2 ^ a3
 32344: ca 89 08                 a1 = a2 * a1
 32347: 3e 09 78 12 03           u64 [0x31278] = a2
 32352: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
 32362: d6 78 07                 a0 = a1 mulhu a0
 32365: 98 77 04                 a0 = a0 >> 0x4
 32368: 33 09 14                 a2 = 0x14
 32371: ca 97 07                 a0 = a0 * a2
 32374: c9 78 08                 a1 = a1 - a0
 32377: 95 88 01                 a1 = a1 + 0x1
 32380: 97 c7 03                 a0 = a5 << 0x3
 32383: c8 47 07                 a0 = a0 + t2
 32386: 7b 78                    u64 [a0] = a1
 32388: 95 cc 01                 a5 = a5 + 0x1
 32391: 82 17 10                 a0 = u64 [sp + 0x10]
 32394: 82 18 08                 a1 = u64 [sp + 0x8]
 32397: 28 d0 fe                 jump @2228
      :                          @2243
 32400: 00                       trap
      :                          @2244
 32401: 00                       trap
      :                          @2245
 32402: 00                       trap
      :                          @2246
 32403: 95 11 e8                 sp = sp + 0xffffffffffffffe8
 32406: 7b 10 10                 u64 [sp + 0x10] = ra
 32409: 7b 15 08                 u64 [sp + 0x8] = s0
 32412: 7b 16                    u64 [sp] = s1
 32414: 97 82 03                 t0 = a1 << 0x3
 32417: 33 04 c0 22 03           t2 = 0x322c0
 32422: 33 03 00 00 01           t1 = 0x10000
 32427: c8 34 00                 ra = t2 + t1
 32430: 01                       fallthrough
      :                          @2247
 32431: 82 0b                    a4 = u64 [ra]
 32433: c8 2b 09                 a2 = a4 + t0
 32436: ac b9 50                 jump @2254 if a2 <u a4
      :                          @2248
 32439: 95 9a 08                 a3 = a2 + 0x8
 32442: d8 9a 05                 s0 = a3 <u a2
 32445: d8 a3 0a                 a3 = t1 <u a3
 32448: d4 5a 0a                 a3 = a3 | s0
 32451: 52 0a 41                 jump @2254 if a3 != 0
      :                          @2249
 32454: c9 94 0a                 a3 = t2 - a2
 32457: c8 3a 0a                 a3 = a3 + t1
 32460: 84 a5 07                 s0 = a3 & 0x7
 32463: c8 59 09                 a2 = a2 + s0
 32466: 01                       fallthrough
      :                          @2250
 32467: 82 06                    s1 = u64 [ra]
 32469: ab b6 da                 jump @2247 if s1 != a4
      :                          @2251
 32472: 7b 09                    u64 [ra] = a2
 32474: c9 5a 09                 a2 = a3 - s0
 32477: 33 0b                    a4 = 0
 32479: 64 9a                    a3 = a2
 32481: 01                       fallthrough
      :                          @2252
 32482: 95 bc 01                 a5 = a4 + 0x1
 32485: 7b ab                    u64 [a3] = a4
 32487: 95 aa 08                 a3 = a3 + 0x8
 32490: 64 cb                    a4 = a5
 32492: ab c8 f6                 jump @2252 if a1 != a5
      :                          @2253
 32495: 7b 78                    u64 [a0] = a1
 32497: 7b 79 08                 u64 [a0 + 0x8] = a2
 32500: 7b 78 10                 u64 [a0 + 0x10] = a1
 32503: 82 10 10                 ra = u64 [sp + 0x10]
 32506: 82 15 08                 s0 = u64 [sp + 0x8]
 32509: 82 16                    s1 = u64 [sp]
 32511: 95 11 18                 sp = sp + 0x18
 32514: 32 00                    ret
      :                          @2254
 32516: 00                       trap
      :                          @2255
 32517: 51 08 86 00              jump @2263 if a1 == 0
      :                          @2256
 32521: 33 09 c0 22 03           a2 = 0x322c0
 32526: 33 0c c0 22 03           a5 = 0x322c0
 32531: 33 02 00 00 01           t0 = 0x10000
 32536: c8 2c 03                 t1 = a5 + t0
 32539: 01                       fallthrough
      :                          @2257
 32540: 82 3a                    a3 = u64 [t1]
 32542: c8 8a 04                 t2 = a3 + a1
 32545: ac a4 77                 jump @2264 if t2 <u a3
      :                          @2258
 32548: 95 4b 01                 a4 = t2 + 0x1
 32551: 88 bc 01                 a5 = a4 <u 0x1
 32554: d8 b2 0b                 a4 = t0 <u a4
 32557: d4 cb 0b                 a4 = a4 | a5
 32560: 52 0b 68                 jump @2264 if a4 != 0
      :                          @2259
 32563: 82 3b                    a4 = u64 [t1]
 32565: ab ab e7                 jump @2257 if a4 != a3
      :                          @2260
 32568: 7b 34                    u64 [t1] = t2
 32570: 33 0b c0 22 03           a4 = 0x322c0
 32575: 95 b9 00 00 01           a2 = a4 + 0x10000
 32580: c9 49 02                 t0 = a2 - t2
 32583: 95 bb 00 00 01           a4 = a4 + 0x10000
 32588: c9 ab 03                 t1 = a4 - a3
 32591: 9a 8b                    a4 = -a1
 32593: 33 0c 78 12 03           a5 = 0x31278
 32598: 01                       fallthrough
      :                          @2261
 32599: 3a 0a 78 12 03           a3 = u64 [0x31278]
 32604: 97 a9 0d                 a2 = a3 << 0xd
 32607: d3 a9 09                 a2 = a2 ^ a3
 32610: 98 9a 07                 a3 = a2 >> 0x7
 32613: d3 a9 09                 a2 = a2 ^ a3
 32616: 97 9a 11                 a3 = a2 << 0x11
 32619: d3 9a 0a                 a3 = a3 ^ a2
 32622: 3e 0a 78 12 03           u64 [0x31278] = a3
 32627: 84 99 03                 a2 = a2 & 0x3
 32630: c8 b3 0a                 a3 = t1 + a4
 32633: 95 bb 01                 a4 = a4 + 0x1
 32636: 78 a9                    u8 [a3] = a2
 32638: 52 0b d9                 jump @2261 if a4 != 0
      :                          @2262
 32641: 7b 78                    u64 [a0] = a1
 32643: 7b 72 08                 u64 [a0 + 0x8] = t0
 32646: 7b 78 10                 u64 [a0 + 0x10] = a1
 32649: 32 00                    ret
      :                          @2263
 32651: 33 02 01                 t0 = 0x1
 32654: 7b 78                    u64 [a0] = a1
 32656: 7b 72 08                 u64 [a0 + 0x8] = t0
 32659: 7b 78 10                 u64 [a0 + 0x10] = a1
 32662: 32 00                    ret
      :                          @2264
 32664: 00                       trap
      :                          @2265
 32665: 95 11 e8                 sp = sp + 0xffffffffffffffe8
 32668: 7b 10 10                 u64 [sp + 0x10] = ra
 32671: 7b 15 08                 u64 [sp + 0x8] = s0
 32674: 7b 16                    u64 [sp] = s1
 32676: 97 82 03                 t0 = a1 << 0x3
 32679: 33 04 c0 22 03           t2 = 0x322c0
 32684: 33 03 00 00 01           t1 = 0x10000
 32689: c8 34 00                 ra = t2 + t1
 32692: 01                       fallthrough
      :                          @2266
 32693: 82 0b                    a4 = u64 [ra]
 32695: c8 2b 09                 a2 = a4 + t0
 32698: ac b9 91 00              jump @2273 if a2 <u a4
      :                          @2267
 32702: 95 96 08                 s1 = a2 + 0x8
 32705: d8 96 05                 s0 = s1 <u a2
 32708: d8 63 06                 s1 = t1 <u s1
 32711: d4 65 05                 s0 = s0 | s1
 32714: 52 05 81 00              jump @2273 if s0 != 0
      :                          @2268
 32718: c9 94 05                 s0 = t2 - a2
 32721: c8 35 05                 s0 = s0 + t1
 32724: 84 56 07                 s1 = s0 & 0x7
 32727: c8 69 09                 a2 = a2 + s1
 32730: 01                       fallthrough
      :                          @2269
 32731: 82 0a                    a3 = u64 [ra]
 32733: ab ba d8                 jump @2266 if a3 != a4
      :                          @2270
 32736: 7b 09                    u64 [ra] = a2
 32738: 3a 04 80 10 03           t2 = u64 [0x31080]
 32743: 3a 0b 88 10 03           a4 = u64 [0x31088]
 32748: c9 65 02                 t0 = s0 - s1
 32751: 33 0c 78 12 03           a5 = 0x31278
 32756: 33 03 e8 03              t1 = 0x3e8
 32760: 64 8a                    a3 = a1
 32762: 64 29                    a2 = t0
 32764: 01                       fallthrough
      :                          @2271
 32765: 3a 05 78 12 03           s0 = u64 [0x31278]
 32770: 97 56 0d                 s1 = s0 << 0xd
 32773: d3 65 05                 s0 = s0 ^ s1
 32776: 98 56 07                 s1 = s0 >> 0x7
 32779: d3 65 05                 s0 = s0 ^ s1
 32782: 97 56 11                 s1 = s0 << 0x11
 32785: d3 65 05                 s0 = s0 ^ s1
 32788: ca 45 06                 s1 = s0 * t2
 32791: 3e 05 78 12 03           u64 [0x31278] = s0
 32796: 98 65 03                 s0 = s1 >> 0x3
 32799: d6 b5 05                 s0 = s0 mulhu a4
 32802: 98 55 04                 s0 = s0 >> 0x4
 32805: ca 35 05                 s0 = s0 * t1
 32808: c9 56 06                 s1 = s1 - s0
 32811: 7b 96                    u64 [a2] = s1
 32813: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 32816: 95 99 08                 a2 = a2 + 0x8
 32819: 52 0a ca                 jump @2271 if a3 != 0
      :                          @2272
 32822: 7b 78                    u64 [a0] = a1
 32824: 7b 72 08                 u64 [a0 + 0x8] = t0
 32827: 7b 78 10                 u64 [a0 + 0x10] = a1
 32830: 82 10 10                 ra = u64 [sp + 0x10]
 32833: 82 15 08                 s0 = u64 [sp + 0x8]
 32836: 82 16                    s1 = u64 [sp]
 32838: 95 11 18                 sp = sp + 0x18
 32841: 32 00                    ret
      :                          @2273
 32843: 00                       trap
      :                          @2274
 32844: 82 4b                    a4 = u64 [t2]
 32846: 95 bc 28                 a5 = a4 + 0x28
 32849: ac bc 4d                 jump @2279 if a5 <u a4
      :                          @2275
 32852: 95 c8 08                 a1 = a5 + 0x8
 32855: d8 c8 09                 a2 = a1 <u a5
 32858: d8 82 08                 a1 = t0 <u a1
 32861: d4 98 08                 a1 = a1 | a2
 32864: 52 08 3e                 jump @2279 if a1 != 0
      :                          @2276
 32867: c9 c3 08                 a1 = t1 - a5
 32870: c8 28 08                 a1 = a1 + t0
 32873: 84 89 07                 a2 = a1 & 0x7
 32876: c8 9c 0c                 a5 = a5 + a2
 32879: 01                       fallthrough
      :                          @2277
 32880: 82 4a                    a3 = u64 [t2]
 32882: ab ba da                 jump @2274 if a3 != a4
      :                          @2278
 32885: 7b 4c                    u64 [t2] = a5
 32887: c9 98 08                 a1 = a1 - a2
 32890: 49 08                    u64 [a1 + 0] = 0
 32892: 49 18 08 01              u64 [a1 + 8] = 0x1
 32896: 49 18 10 02              u64 [a1 + 16] = 0x2
 32900: 49 18 18 03              u64 [a1 + 24] = 0x3
 32904: 49 18 20 04              u64 [a1 + 32] = 0x4
 32908: 33 09 05                 a2 = 0x5
 32911: 7b 79                    u64 [a0] = a2
 32913: 7b 78 08                 u64 [a0 + 0x8] = a1
 32916: 7b 79 10                 u64 [a0 + 0x10] = a2
 32919: 82 15                    s0 = u64 [sp]
 32921: 95 11 08                 sp = sp + 0x8
 32924: 32 00                    ret
      :                          @2279
 32926: 00                       trap
      :                          @2280
 32927: 82 4b                    a4 = u64 [t2]
 32929: 95 bc 40                 a5 = a4 + 0x40
 32932: ac bc 81 01              jump @2285 if a5 <u a4
      :                          @2281
 32936: 95 c8 08                 a1 = a5 + 0x8
 32939: d8 c8 09                 a2 = a1 <u a5
 32942: d8 82 08                 a1 = t0 <u a1
 32945: d4 98 08                 a1 = a1 | a2
 32948: 52 08 71 01              jump @2285 if a1 != 0
      :                          @2282
 32952: c9 c3 08                 a1 = t1 - a5
 32955: c8 28 08                 a1 = a1 + t0
 32958: 84 89 07                 a2 = a1 & 0x7
 32961: c8 9c 0c                 a5 = a5 + a2
 32964: 01                       fallthrough
      :                          @2283
 32965: 82 4a                    a3 = u64 [t2]
 32967: ab ba d8                 jump @2280 if a3 != a4
      :                          @2284
 32970: 7b 4c                    u64 [t2] = a5
 32972: 33 0a 78 12 03           a3 = 0x31278
 32977: 3a 0b 78 12 03           a4 = u64 [0x31278]
 32982: c9 98 08                 a1 = a1 - a2
 32985: 97 b9 0d                 a2 = a4 << 0xd
 32988: d3 b9 09                 a2 = a2 ^ a4
 32991: 98 9b 07                 a4 = a2 >> 0x7
 32994: d3 b9 09                 a2 = a2 ^ a4
 32997: 97 9b 11                 a4 = a2 << 0x11
 33000: d3 9b 0b                 a4 = a4 ^ a2
 33003: 97 9c 02                 a5 = a2 << 0x2
 33006: c8 c9 09                 a2 = a2 + a5
 33009: 3e 0b 78 12 03           u64 [0x31278] = a4
 33014: 84 99 07                 a2 = a2 & 0x7
 33017: 7b 89                    u64 [a1] = a2
 33019: 3a 09 78 12 03           a2 = u64 [0x31278]
 33024: 97 9b 0d                 a4 = a2 << 0xd
 33027: d3 b9 09                 a2 = a2 ^ a4
 33030: 98 9b 07                 a4 = a2 >> 0x7
 33033: d3 b9 09                 a2 = a2 ^ a4
 33036: 97 9b 11                 a4 = a2 << 0x11
 33039: d3 9b 0b                 a4 = a4 ^ a2
 33042: 97 9c 02                 a5 = a2 << 0x2
 33045: c8 c9 09                 a2 = a2 + a5
 33048: 3e 0b 78 12 03           u64 [0x31278] = a4
 33053: 84 99 07                 a2 = a2 & 0x7
 33056: 7b 89 08                 u64 [a1 + 0x8] = a2
 33059: 3a 09 78 12 03           a2 = u64 [0x31278]
 33064: 97 9b 0d                 a4 = a2 << 0xd
 33067: d3 b9 09                 a2 = a2 ^ a4
 33070: 98 9b 07                 a4 = a2 >> 0x7
 33073: d3 b9 09                 a2 = a2 ^ a4
 33076: 97 9b 11                 a4 = a2 << 0x11
 33079: d3 9b 0b                 a4 = a4 ^ a2
 33082: 97 9c 02                 a5 = a2 << 0x2
 33085: c8 c9 09                 a2 = a2 + a5
 33088: 3e 0b 78 12 03           u64 [0x31278] = a4
 33093: 84 99 07                 a2 = a2 & 0x7
 33096: 7b 89 10                 u64 [a1 + 0x10] = a2
 33099: 3a 09 78 12 03           a2 = u64 [0x31278]
 33104: 97 9b 0d                 a4 = a2 << 0xd
 33107: d3 b9 09                 a2 = a2 ^ a4
 33110: 98 9b 07                 a4 = a2 >> 0x7
 33113: d3 b9 09                 a2 = a2 ^ a4
 33116: 97 9b 11                 a4 = a2 << 0x11
 33119: d3 9b 0b                 a4 = a4 ^ a2
 33122: 97 9c 02                 a5 = a2 << 0x2
 33125: c8 c9 09                 a2 = a2 + a5
 33128: 3e 0b 78 12 03           u64 [0x31278] = a4
 33133: 84 99 07                 a2 = a2 & 0x7
 33136: 7b 89 18                 u64 [a1 + 0x18] = a2
 33139: 3a 09 78 12 03           a2 = u64 [0x31278]
 33144: 97 9b 0d                 a4 = a2 << 0xd
 33147: d3 b9 09                 a2 = a2 ^ a4
 33150: 98 9b 07                 a4 = a2 >> 0x7
 33153: d3 b9 09                 a2 = a2 ^ a4
 33156: 97 9b 11                 a4 = a2 << 0x11
 33159: d3 9b 0b                 a4 = a4 ^ a2
 33162: 97 9c 02                 a5 = a2 << 0x2
 33165: c8 c9 09                 a2 = a2 + a5
 33168: 3e 0b 78 12 03           u64 [0x31278] = a4
 33173: 84 99 07                 a2 = a2 & 0x7
 33176: 7b 89 20                 u64 [a1 + 0x20] = a2
 33179: 3a 09 78 12 03           a2 = u64 [0x31278]
 33184: 97 9b 0d                 a4 = a2 << 0xd
 33187: d3 b9 09                 a2 = a2 ^ a4
 33190: 98 9b 07                 a4 = a2 >> 0x7
 33193: d3 b9 09                 a2 = a2 ^ a4
 33196: 97 9b 11                 a4 = a2 << 0x11
 33199: d3 9b 0b                 a4 = a4 ^ a2
 33202: 97 9c 02                 a5 = a2 << 0x2
 33205: c8 c9 09                 a2 = a2 + a5
 33208: 3e 0b 78 12 03           u64 [0x31278] = a4
 33213: 84 99 07                 a2 = a2 & 0x7
 33216: 7b 89 28                 u64 [a1 + 0x28] = a2
 33219: 3a 09 78 12 03           a2 = u64 [0x31278]
 33224: 97 9b 0d                 a4 = a2 << 0xd
 33227: d3 b9 09                 a2 = a2 ^ a4
 33230: 98 9b 07                 a4 = a2 >> 0x7
 33233: d3 b9 09                 a2 = a2 ^ a4
 33236: 97 9b 11                 a4 = a2 << 0x11
 33239: d3 9b 0b                 a4 = a4 ^ a2
 33242: 97 9c 02                 a5 = a2 << 0x2
 33245: c8 c9 09                 a2 = a2 + a5
 33248: 3e 0b 78 12 03           u64 [0x31278] = a4
 33253: 84 99 07                 a2 = a2 & 0x7
 33256: 7b 89 30                 u64 [a1 + 0x30] = a2
 33259: 3a 09 78 12 03           a2 = u64 [0x31278]
 33264: 97 9b 0d                 a4 = a2 << 0xd
 33267: d3 b9 09                 a2 = a2 ^ a4
 33270: 98 9b 07                 a4 = a2 >> 0x7
 33273: d3 b9 09                 a2 = a2 ^ a4
 33276: 97 9b 11                 a4 = a2 << 0x11
 33279: d3 9b 0b                 a4 = a4 ^ a2
 33282: 97 9c 02                 a5 = a2 << 0x2
 33285: c8 c9 09                 a2 = a2 + a5
 33288: 3e 0b 78 12 03           u64 [0x31278] = a4
 33293: 84 99 07                 a2 = a2 & 0x7
 33296: 7b 89 38                 u64 [a1 + 0x38] = a2
 33299: 33 09 08                 a2 = 0x8
 33302: 7b 79                    u64 [a0] = a2
 33304: 7b 78 08                 u64 [a0 + 0x8] = a1
 33307: 7b 79 10                 u64 [a0 + 0x10] = a2
 33310: 82 15                    s0 = u64 [sp]
 33312: c8 91 01                 sp = sp + a2
 33315: 32 00                    ret
      :                          @2285
 33317: 00                       trap
      :                          @2286
 33318: 82 0b                    a4 = u64 [ra]
 33320: c8 2b 09                 a2 = a4 + t0
 33323: ac b9 92 00              jump @2293 if a2 <u a4
      :                          @2287
 33327: 95 9a 08                 a3 = a2 + 0x8
 33330: d8 9a 05                 s0 = a3 <u a2
 33333: d8 a3 0a                 a3 = t1 <u a3
 33336: d4 5a 0a                 a3 = a3 | s0
 33339: 52 0a 82 00              jump @2293 if a3 != 0
      :                          @2288
 33343: c9 94 0a                 a3 = t2 - a2
 33346: c8 3a 0a                 a3 = a3 + t1
 33349: 84 a5 07                 s0 = a3 & 0x7
 33352: c8 59 09                 a2 = a2 + s0
 33355: 01                       fallthrough
      :                          @2289
 33356: 82 06                    s1 = u64 [ra]
 33358: ab b6 d8                 jump @2286 if s1 != a4
      :                          @2290
 33361: 7b 09                    u64 [ra] = a2
 33363: c9 5a 02                 t0 = a3 - s0
 33366: 33 04 78 12 03           t2 = 0x31278
 33371: 3a 0b 90 10 03           a4 = u64 [0x31090]
 33376: 14 0c cd cc cc cc cc cc cc cc a5 = 0xcccccccccccccccd
 33386: 33 03 14                 t1 = 0x14
 33389: 64 89                    a2 = a1
 33391: 64 2a                    a3 = t0
 33393: 01                       fallthrough
      :                          @2291
 33394: 3a 05 78 12 03           s0 = u64 [0x31278]
 33399: 97 56 0d                 s1 = s0 << 0xd
 33402: d3 65 05                 s0 = s0 ^ s1
 33405: 98 56 07                 s1 = s0 >> 0x7
 33408: d3 65 05                 s0 = s0 ^ s1
 33411: 97 56 11                 s1 = s0 << 0x11
 33414: d3 65 05                 s0 = s0 ^ s1
 33417: ca b5 06                 s1 = s0 * a4
 33420: 3e 05 78 12 03           u64 [0x31278] = s0
 33425: d6 c6 05                 s0 = s1 mulhu a5
 33428: 98 55 04                 s0 = s0 >> 0x4
 33431: ca 35 05                 s0 = s0 * t1
 33434: c9 56 06                 s1 = s1 - s0
 33437: 7b a6                    u64 [a3] = s1
 33439: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 33442: 95 aa 08                 a3 = a3 + 0x8
 33445: 52 09 cd                 jump @2291 if a2 != 0
      :                          @2292
 33448: 7b 78                    u64 [a0] = a1
 33450: 7b 72 08                 u64 [a0 + 0x8] = t0
 33453: 7b 78 10                 u64 [a0 + 0x10] = a1
 33456: 82 10 10                 ra = u64 [sp + 0x10]
 33459: 82 15 08                 s0 = u64 [sp + 0x8]
 33462: 82 16                    s1 = u64 [sp]
 33464: 95 11 18                 sp = sp + 0x18
 33467: 32 00                    ret
      :                          @2293
 33469: 00                       trap
      :                          @2294
 33470: 82 0b                    a4 = u64 [ra]
 33472: c8 2b 09                 a2 = a4 + t0
 33475: ac b9 8d 00              jump @2301 if a2 <u a4
      :                          @2295
 33479: 95 9a 08                 a3 = a2 + 0x8
 33482: d8 9a 05                 s0 = a3 <u a2
 33485: d8 a3 0a                 a3 = t1 <u a3
 33488: d4 5a 0a                 a3 = a3 | s0
 33491: 52 0a 7d                 jump @2301 if a3 != 0
      :                          @2296
 33494: c9 94 0a                 a3 = t2 - a2
 33497: c8 3a 0a                 a3 = a3 + t1
 33500: 84 a5 07                 s0 = a3 & 0x7
 33503: c8 59 09                 a2 = a2 + s0
 33506: 01                       fallthrough
      :                          @2297
 33507: 82 06                    s1 = u64 [ra]
 33509: ab b6 d9                 jump @2294 if s1 != a4
      :                          @2298
 33512: 7b 09                    u64 [ra] = a2
 33514: c9 5a 02                 t0 = a3 - s0
 33517: 3a 03 98 10 03           t1 = u64 [0x31098]
 33522: 3a 0b a0 10 03           a4 = u64 [0x310a0]
 33527: 33 04 78 12 03           t2 = 0x31278
 33532: 33 09 10 27              a2 = 0x2710
 33536: 64 8a                    a3 = a1
 33538: 64 2c                    a5 = t0
 33540: 01                       fallthrough
      :                          @2299
 33541: 3a 05 78 12 03           s0 = u64 [0x31278]
 33546: 97 56 0d                 s1 = s0 << 0xd
 33549: d3 65 05                 s0 = s0 ^ s1
 33552: 98 56 07                 s1 = s0 >> 0x7
 33555: d3 65 05                 s0 = s0 ^ s1
 33558: 97 56 11                 s1 = s0 << 0x11
 33561: d3 65 05                 s0 = s0 ^ s1
 33564: ca 35 06                 s1 = s0 * t1
 33567: 3e 05 78 12 03           u64 [0x31278] = s0
 33572: d6 b6 05                 s0 = s1 mulhu a4
 33575: 98 55 0b                 s0 = s0 >> 0xb
 33578: ca 95 05                 s0 = s0 * a2
 33581: c9 56 06                 s1 = s1 - s0
 33584: 7b c6                    u64 [a5] = s1
 33586: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 33589: 95 cc 08                 a5 = a5 + 0x8
 33592: 52 0a cd                 jump @2299 if a3 != 0
      :                          @2300
 33595: 7b 78                    u64 [a0] = a1
 33597: 7b 72 08                 u64 [a0 + 0x8] = t0
 33600: 7b 78 10                 u64 [a0 + 0x10] = a1
 33603: 82 10 10                 ra = u64 [sp + 0x10]
 33606: 82 15 08                 s0 = u64 [sp + 0x8]
 33609: 82 16                    s1 = u64 [sp]
 33611: 95 11 18                 sp = sp + 0x18
 33614: 32 00                    ret
      :                          @2301
 33616: 00                       trap
      :                          @2302
 33617: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 33620: 7b 10 30                 u64 [sp + 0x30] = ra
 33623: 7b 15 28                 u64 [sp + 0x28] = s0
 33626: 7b 16 20                 u64 [sp + 0x20] = s1
 33629: 7c 89 10                 a2 = u8 [a1 + 0x10]
 33632: 33 0c 08                 a5 = 0x8
 33635: 52 09 0b                 jump @2304 if a2 != 0
      :                          @2303
 33638: 82 89                    a2 = u64 [a1]
 33640: 82 88 08                 a1 = u64 [a1 + 0x8]
 33643: ae 98 1e                 jump @2306 if a1 >=u a2
      :                          @2304
 33646: 33 09                    a2 = 0
 33648: 33 08                    a1 = 0
 33650: 01                       fallthrough
      :                          @2305
 33651: 7b 79                    u64 [a0] = a2
 33653: 7b 7c 08                 u64 [a0 + 0x8] = a5
 33656: 7b 78 10                 u64 [a0 + 0x10] = a1
 33659: 82 10 30                 ra = u64 [sp + 0x30]
 33662: 82 15 28                 s0 = u64 [sp + 0x28]
 33665: 82 16 20                 s1 = u64 [sp + 0x20]
 33668: 95 11 38                 sp = sp + 0x38
 33671: 32 00                    ret
      :                          @2306
 33673: c9 98 03                 t1 = a1 - a2
 33676: 95 33 01                 t1 = t1 + 0x1
 33679: 51 03 9f 00              jump @2321 if t1 == 0
      :                          @2307
 33683: 7b 19 08                 u64 [sp + 0x8] = a2
 33686: 7b 18 10                 u64 [sp + 0x10] = a1
 33689: 7b 17 18                 u64 [sp + 0x18] = a0
 33692: 98 38 3c                 a1 = t1 >> 0x3c
 33695: 52 08 90 00              jump @2322 if a1 != 0
      :                          @2308
 33699: 88 8c 01                 a5 = a1 <u 0x1
 33702: 7b 13                    u64 [sp] = t1
 33704: 97 30 03                 ra = t1 << 0x3
 33707: 97 cc 03                 a5 = a5 << 0x3
 33710: 33 0a c0 22 03           a3 = 0x322c0
 33715: 33 02 00 00 01           t0 = 0x10000
 33720: c8 2a 09                 a2 = a3 + t0
 33723: 01                       fallthrough
      :                          @2309
 33724: 82 95                    s0 = u64 [a2]
 33726: c8 05 06                 s1 = s0 + ra
 33729: ac 56 6c                 jump @2320 if s1 <u s0
      :                          @2310
 33732: c8 c6 08                 a1 = s1 + a5
 33735: d8 68 0b                 a4 = a1 <u s1
 33738: d8 82 08                 a1 = t0 <u a1
 33741: d4 b8 08                 a1 = a1 | a4
 33744: 52 08 5d                 jump @2320 if a1 != 0
      :                          @2311
 33747: c9 6a 08                 a1 = a3 - s1
 33750: c8 28 08                 a1 = a1 + t0
 33753: 84 8b 07                 a4 = a1 & 0x7
 33756: c8 b6 06                 s1 = s1 + a4
 33759: 01                       fallthrough
      :                          @2312
 33760: 82 93                    t1 = u64 [a2]
 33762: ab 53 da                 jump @2309 if t1 != s0
      :                          @2313
 33765: 7b 96                    u64 [a2] = s1
 33767: 33 04                    t2 = 0
 33769: 01                       fallthrough
      :                          @2314
 33770: c9 b8 0c                 a5 = a1 - a4
 33773: 82 17 10                 a0 = u64 [sp + 0x10]
 33776: 82 16 08                 s1 = u64 [sp + 0x8]
 33779: ae 76 21                 jump @2318 if s1 >=u a0
      :                          @2315
 33782: 33 08                    a1 = 0
 33784: c9 76 09                 a2 = s1 - a0
 33787: 64 ca                    a3 = a5
 33789: 01                       fallthrough
      :                          @2316
 33790: c8 86 0b                 a4 = s1 + a1
 33793: ca bb 0b                 a4 = a4 * a4
 33796: 7b ab                    u64 [a3] = a4
 33798: 95 88 01                 a1 = a1 + 0x1
 33801: c8 89 0b                 a4 = a2 + a1
 33804: 95 aa 08                 a3 = a3 + 0x8
 33807: 52 0b ef                 jump @2316 if a4 != 0
      :                          @2317
 33810: 28 05                    jump @2319
      :                          @2318
 33812: 33 08                    a1 = 0
 33814: 01                       fallthrough
      :                          @2319
 33815: ca 77 07                 a0 = a0 * a0
 33818: 97 89 03                 a2 = a1 << 0x3
 33821: c8 c9 09                 a2 = a2 + a5
 33824: 7b 97                    u64 [a2] = a0
 33826: 95 88 01                 a1 = a1 + 0x1
 33829: 82 17 18                 a0 = u64 [sp + 0x18]
 33832: 82 19                    a2 = u64 [sp]
 33834: 28 49 ff                 jump @2305
      :                          @2320
 33837: 00                       trap
      :                          @2321
 33838: 00                       trap
      :                          @2322
 33839: 00                       trap
      :                          @2323
 33840: 95 11 80                 sp = sp + 0xffffffffffffff80
 33843: 7b 10 78                 u64 [sp + 0x78] = ra
 33846: 7b 15 70                 u64 [sp + 0x70] = s0
 33849: 7b 16 68                 u64 [sp + 0x68] = s1
 33852: 82 7b 18                 a4 = u64 [a0 + 0x18]
 33855: 7b 1b 20                 u64 [sp + 0x20] = a4
 33858: 95 bb 01                 a4 = a4 + 0x1
 33861: 51 0b 58 06              jump @2383 if a4 == 0
      :                          @2324
 33865: 64 84                    t2 = a1
 33867: 82 75 08                 s0 = u64 [a0 + 0x8]
 33870: 88 59 08                 a2 = s0 <u 0x8
 33873: 95 5c 01                 a5 = s0 + 0x1
 33876: 98 c2 03                 t0 = a5 >> 0x3
 33879: 84 ca f8                 a3 = a5 & 0xfffffffffffffff8
 33882: c9 2a 0a                 a3 = a3 - t0
 33885: db 95 0a                 a3 = s0 if a2 != 0
 33888: 98 a9 01                 a2 = a3 >> 0x1
 33891: 7b 15 60                 u64 [sp + 0x60] = s0
 33894: 7b 17 10                 u64 [sp + 0x10] = a0
 33897: ae b9 1d                 jump @2327 if a2 >=u a4
      :                          @2325
 33900: 7b 1c 18                 u64 [sp + 0x18] = a5
 33903: 95 a8 01                 a1 = a3 + 0x1
 33906: e4 8b 07                 a0 = maxu(a4, a1)
 33909: 55 17 08 89 00           jump @2334 if a0 >=u 8
      :                          @2326
 33914: 88 77 04                 a0 = a0 <u 0x4
 33917: 33 03 04                 t1 = 0x4
 33920: 93 73 08                 t1 = 0x8 if a0 == 0
 33923: 28 ba 00                 jump @2338
      :                          @2327
 33926: 7b 1a 08                 u64 [sp + 0x8] = a3
 33929: 82 78                    a1 = u64 [a0]
 33931: 64 c6                    s1 = a5
 33933: 84 c7 07                 a0 = a5 & 0x7
 33936: 8e 77                    a0 = a0 >u 0
 33938: c8 27 07                 a0 = a0 + t0
 33941: 51 07 36                 jump @2330 if a0 == 0
      :                          @2328
 33944: 14 02 01 01 01 01 01 01 01 01 t0 = 0x101010101010101
 33954: 14 09 7f 7f 7f 7f 7f 7f 7f 7f a2 = 0x7f7f7f7f7f7f7f7f
 33964: 64 8a                    a3 = a1
 33966: 01                       fallthrough
      :                          @2329
 33967: 82 ab                    a4 = u64 [a3]
 33969: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 33972: d4 9b 0c                 a5 = a4 | a2
 33975: 85 bb ff                 a4 = a4 ^ 0xffffffffffffffff
 33978: 98 bb 07                 a4 = a4 >> 0x7
 33981: d2 2b 0b                 a4 = a4 & t0
 33984: c8 cb 0b                 a4 = a4 + a5
 33987: 7b ab                    u64 [a3] = a4
 33989: 95 aa 08                 a3 = a3 + 0x8
 33992: 52 07 e7                 jump @2329 if a0 != 0
      :                          @2330
 33995: 7b 18 58                 u64 [sp + 0x58] = a1
 33998: 55 16 08 93 02           jump @2358 if s1 >=u 8
      :                          @2331
 34003: 95 87 08                 a0 = a1 + 0x8
 34006: 64 69                    a2 = s1
 34008: 7b 14 50                 u64 [sp + 0x50] = t2
 34011: 50 20 92 02 c0 85 02     ra = 658, jump @13651
      :                          @2332 [@dyn 329]
 34018: 82 14 50                 t2 = u64 [sp + 0x50]
 34021: 82 12 58                 t0 = u64 [sp + 0x58]
 34024: 82 19 20                 a2 = u64 [sp + 0x20]
 34027: 52 06 c9 02              jump @2359 if s1 != 0
      :                          @2333
 34031: 82 17 08                 a0 = u64 [sp + 0x8]
 34034: c9 97 07                 a0 = a0 - a2
 34037: 82 18 10                 a1 = u64 [sp + 0x10]
 34040: 7b 87 10                 u64 [a1 + 0x10] = a0
 34043: 28 92 05                 jump @2381
      :                          @2334
 34046: 98 78 3d                 a1 = a0 >> 0x3d
 34049: 52 08 9d 05              jump @2384 if a1 != 0
      :                          @2335
 34053: 97 77 03                 a0 = a0 << 0x3
 34056: 33 03 01                 t1 = 0x1
 34059: 53 17 0e 32              jump @2338 if a0 <u 14
      :                          @2336
 34063: 3a 08 b8 10 03           a1 = u64 [0x310b8]
 34068: d6 87 08                 a1 = a0 mulhu a1
 34071: c9 87 07                 a0 = a0 - a1
 34074: 98 77 01                 a0 = a0 >> 0x1
 34077: c8 87 07                 a0 = a0 + a1
 34080: 98 77 02                 a0 = a0 >> 0x2
 34083: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 34086: 68 77                    a0 = clz a0
 34088: 9c 73 ff                 t1 = 0xffffffffffffffff >> a0
 34091: 14 07 fe ff ff ff ff ff ff 0f a0 = 0xffffffffffffffe
 34101: ac 37 68 05              jump @2383 if a0 <u t1
      :                          @2337
 34105: 95 33 01                 t1 = t1 + 0x1
 34108: 01                       fallthrough
      :                          @2338
 34109: 97 39 04                 a2 = t1 << 0x4
 34112: 95 38 08                 a1 = t1 + 0x8
 34115: c8 89 07                 a0 = a2 + a1
 34118: ac 97 57 05              jump @2383 if a0 <u a2
      :                          @2339
 34122: 7b 18 58                 u64 [sp + 0x58] = a1
 34125: 7b 14 50                 u64 [sp + 0x50] = t2
 34128: 33 00 c0 22 03           ra = 0x322c0
 34133: 33 04 00 00 01           t2 = 0x10000
 34138: c8 40 0c                 a5 = ra + t2
 34141: 01                       fallthrough
      :                          @2340
 34142: 82 c5                    s0 = u64 [a5]
 34144: c8 75 06                 s1 = s0 + a0
 34147: ac 56 39 05              jump @2382 if s1 <u s0
      :                          @2341
 34151: 95 68 08                 a1 = s1 + 0x8
 34154: d8 68 0b                 a4 = a1 <u s1
 34157: d8 84 08                 a1 = t2 <u a1
 34160: d4 b8 08                 a1 = a1 | a4
 34163: 52 08 29 05              jump @2382 if a1 != 0
      :                          @2342
 34167: c9 60 08                 a1 = ra - s1
 34170: c8 48 08                 a1 = a1 + t2
 34173: 84 8b 07                 a4 = a1 & 0x7
 34176: c8 b6 06                 s1 = s1 + a4
 34179: 01                       fallthrough
      :                          @2343
 34180: 82 ca                    a3 = u64 [a5]
 34182: ab 5a d8                 jump @2340 if a3 != s0
      :                          @2344
 34185: 7b c6                    u64 [a5] = s1
 34187: 33 02                    t0 = 0
 34189: c9 b8 08                 a1 = a1 - a4
 34192: c8 98 07                 a0 = a1 + a2
 34195: 95 35 ff                 s0 = t1 + 0xffffffffffffffff
 34198: 88 3a 09                 a3 = t1 <u 0x9
 34201: 98 38 03                 a1 = t1 >> 0x3
 34204: 84 39 f8                 a2 = t1 & 0xfffffffffffffff8
 34207: c9 89 06                 s1 = a2 - a1
 34210: db a5 06                 s1 = s0 if a3 != 0
 34213: 33 08 ff 00              a1 = 0xff
 34217: 7b 17 08                 u64 [sp + 0x8] = a0
 34220: 82 19 58                 a2 = u64 [sp + 0x58]
 34223: 50 20 94 02 67 86 02     ra = 660, jump @13687
      :                          @2345 [@dyn 330]
 34230: 82 17 10                 a0 = u64 [sp + 0x10]
 34233: 82 74                    t2 = u64 [a0]
 34235: 82 18 20                 a1 = u64 [sp + 0x20]
 34238: c9 86 06                 s1 = s1 - a1
 34241: 82 19 18                 a2 = u64 [sp + 0x18]
 34244: 51 09 81 04              jump @2374 if a2 == 0
      :                          @2346
 34248: 7b 16                    u64 [sp] = s1
 34250: 3a 06 a8 10 03           s1 = u64 [0x310a8]
 34255: 3a 07 b0 10 03           a0 = u64 [0x310b0]
 34260: 7b 17 40                 u64 [sp + 0x40] = a0
 34263: 82 17 50                 a0 = u64 [sp + 0x50]
 34266: 82 78                    a1 = u64 [a0]
 34268: 7b 18 38                 u64 [sp + 0x38] = a1
 34271: 82 77 08                 a0 = u64 [a0 + 0x8]
 34274: 7b 17 30                 u64 [sp + 0x30] = a0
 34277: 33 07                    a0 = 0
 34279: 95 48 f0                 a1 = t2 + 0xfffffffffffffff0
 34282: 7b 18 28                 u64 [sp + 0x28] = a1
 34285: 82 19 60                 a2 = u64 [sp + 0x60]
 34288: 82 10 08                 ra = u64 [sp + 0x8]
 34291: 7b 16 58                 u64 [sp + 0x58] = s1
 34294: 7b 14 48                 u64 [sp + 0x48] = t2
 34297: 28 47                    jump @2350
      :                          @2347
 34299: c8 90 07                 a0 = ra + a2
 34302: 98 38 39                 a1 = t1 >> 0x39
 34305: 95 9a f8                 a3 = a2 + 0xfffffffffffffff8
 34308: d2 5a 0a                 a3 = a3 & s0
 34311: c8 0a 0a                 a3 = a3 + ra
 34314: 78 78                    u8 [a0] = a1
 34316: 78 a8 08                 u8 [a3 + 0x8] = a1
 34319: c9 24 08                 a1 = t2 - t0
 34322: 95 88 f0                 a1 = a1 + 0xfffffffffffffff0
 34325: 97 99 04                 a2 = a2 << 0x4
 34328: c9 90 07                 a0 = ra - a2
 34331: 95 77 f0                 a0 = a0 + 0xfffffffffffffff0
 34334: 33 09 10                 a2 = 0x10
 34337: 64 06                    s1 = ra
 34339: 50 20 96 02 c6 83 02     ra = 662, jump @13633
      :                          @2348 [@dyn 331]
 34346: 64 60                    ra = s1
 34348: 82 16 58                 s1 = u64 [sp + 0x58]
 34351: 82 14 48                 t2 = u64 [sp + 0x48]
 34354: 82 19 60                 a2 = u64 [sp + 0x60]
 34357: 82 18 50                 a1 = u64 [sp + 0x50]
 34360: 01                       fallthrough
      :                          @2349
 34361: 95 87 01                 a0 = a1 + 0x1
 34364: aa 98 0b 01              jump @2356 if a1 == a2
      :                          @2350
 34368: 64 78                    a1 = a0
 34370: c8 47 07                 a0 = a0 + t2
 34373: 7d 77                    a0 = i8 [a0]
 34375: 57 07 f2                 jump @2349 if a0 <s 0
      :                          @2351
 34378: 7b 18 50                 u64 [sp + 0x50] = a1
 34381: 97 82 04                 t0 = a1 << 0x4
 34384: 82 17 28                 a0 = u64 [sp + 0x28]
 34387: c9 27 08                 a1 = a0 - t0
 34390: 82 88                    a1 = u64 [a1]
 34392: 82 19 38                 a2 = u64 [sp + 0x38]
 34395: d3 98 08                 a1 = a1 ^ a2
 34398: 82 17 40                 a0 = u64 [sp + 0x40]
 34401: ca 78 08                 a1 = a1 * a0
 34404: 82 1a 30                 a3 = u64 [sp + 0x30]
 34407: d3 a8 08                 a1 = a1 ^ a3
 34410: 9e 88 38                 a1 = a1 >>r 0x38
 34413: ca 78 08                 a1 = a1 * a0
 34416: d3 89 09                 a2 = a2 ^ a1
 34419: 9e 99 28                 a2 = a2 >>r 0x28
 34422: ca 79 0a                 a3 = a2 * a0
 34425: d3 a8 08                 a1 = a1 ^ a3
 34428: dc 98 03                 t1 = a1 <<r a2
 34431: d2 53 09                 a2 = t1 & s0
 34434: c8 90 0a                 a3 = ra + a2
 34437: 7c ab 01                 a4 = u8 [a3 + 0x1]
 34440: 7c ac                    a5 = u8 [a3]
 34442: 7c a7 02                 a0 = u8 [a3 + 0x2]
 34445: 7c a8 03                 a1 = u8 [a3 + 0x3]
 34448: 97 bb 08                 a4 = a4 << 0x8
 34451: d4 cb 0b                 a4 = a4 | a5
 34454: 97 77 10                 a0 = a0 << 0x10
 34457: 97 88 18                 a1 = a1 << 0x18
 34460: d4 87 07                 a0 = a0 | a1
 34463: d4 b7 07                 a0 = a0 | a4
 34466: 7c a8 05                 a1 = u8 [a3 + 0x5]
 34469: 7c ab 04                 a4 = u8 [a3 + 0x4]
 34472: 7c ac 06                 a5 = u8 [a3 + 0x6]
 34475: 7c aa 07                 a3 = u8 [a3 + 0x7]
 34478: 97 88 08                 a1 = a1 << 0x8
 34481: d4 b8 08                 a1 = a1 | a4
 34484: 97 cc 10                 a5 = a5 << 0x10
 34487: 97 aa 18                 a3 = a3 << 0x18
 34490: d4 ca 0a                 a3 = a3 | a5
 34493: d4 a8 08                 a1 = a1 | a3
 34496: 97 88 20                 a1 = a1 << 0x20
 34499: d4 87 07                 a0 = a0 | a1
 34502: d2 67 0b                 a4 = a0 & s1
 34505: 52 0b 5d                 jump @2354 if a4 != 0
      :                          @2352
 34508: 33 0a 08                 a3 = 0x8
 34511: 01                       fallthrough
      :                          @2353
 34512: c8 a9 09                 a2 = a2 + a3
 34515: d2 59 09                 a2 = a2 & s0
 34518: c8 90 07                 a0 = ra + a2
 34521: 7c 78 01                 a1 = u8 [a0 + 0x1]
 34524: 7c 7b                    a4 = u8 [a0]
 34526: 7c 7c 02                 a5 = u8 [a0 + 0x2]
 34529: 7c 76 03                 s1 = u8 [a0 + 0x3]
 34532: 97 88 08                 a1 = a1 << 0x8
 34535: d4 b8 08                 a1 = a1 | a4
 34538: 97 cc 10                 a5 = a5 << 0x10
 34541: 97 66 18                 s1 = s1 << 0x18
 34544: d4 6c 0c                 a5 = a5 | s1
 34547: d4 c8 08                 a1 = a1 | a5
 34550: 7c 7b 05                 a4 = u8 [a0 + 0x5]
 34553: 7c 7c 04                 a5 = u8 [a0 + 0x4]
 34556: 7c 76 06                 s1 = u8 [a0 + 0x6]
 34559: 7c 77 07                 a0 = u8 [a0 + 0x7]
 34562: 97 bb 08                 a4 = a4 << 0x8
 34565: d4 cb 0b                 a4 = a4 | a5
 34568: 97 66 10                 s1 = s1 << 0x10
 34571: 97 77 18                 a0 = a0 << 0x18
 34574: d4 67 07                 a0 = a0 | s1
 34577: 82 16 58                 s1 = u64 [sp + 0x58]
 34580: d4 b7 07                 a0 = a0 | a4
 34583: 97 77 20                 a0 = a0 << 0x20
 34586: d4 87 07                 a0 = a0 | a1
 34589: d2 67 0b                 a4 = a0 & s1
 34592: 95 aa 08                 a3 = a3 + 0x8
 34595: 51 0b ad                 jump @2353 if a4 == 0
      :                          @2354
 34598: 6a b7                    a0 = ctz a4
 34600: 98 77 03                 a0 = a0 >> 0x3
 34603: c8 97 07                 a0 = a0 + a2
 34606: d2 57 09                 a2 = a0 & s0
 34609: c8 90 07                 a0 = ra + a2
 34612: 7d 77                    a0 = i8 [a0]
 34614: 57 07 c5 fe              jump @2347 if a0 <s 0
      :                          @2355
 34618: 82 07                    a0 = u64 [ra]
 34620: d2 67 07                 a0 = a0 & s1
 34623: 6a 79                    a2 = ctz a0
 34625: 98 99 03                 a2 = a2 >> 0x3
 34628: 28 b7 fe                 jump @2347
      :                          @2356
 34631: 82 17 10                 a0 = u64 [sp + 0x10]
 34634: 7b 70                    u64 [a0] = ra
 34636: 7b 75 08                 u64 [a0 + 0x8] = s0
 34639: 82 18                    a1 = u64 [sp]
 34641: 7b 78 10                 u64 [a0 + 0x10] = a1
 34644: 82 18 20                 a1 = u64 [sp + 0x20]
 34647: 7b 78 18                 u64 [a0 + 0x18] = a1
 34650: 52 09 fd 02              jump @2375 if a2 != 0
      :                          @2357
 34654: 28 2f 03                 jump @2381
      :                          @2358
 34657: c8 68 07                 a0 = a1 + s1
 34660: 82 18 58                 a1 = u64 [sp + 0x58]
 34663: 7c 82 01                 t0 = u8 [a1 + 0x1]
 34666: 82 18 58                 a1 = u64 [sp + 0x58]
 34669: 7c 83                    t1 = u8 [a1]
 34671: 82 18 58                 a1 = u64 [sp + 0x58]
 34674: 7c 8a 03                 a3 = u8 [a1 + 0x3]
 34677: 82 18 58                 a1 = u64 [sp + 0x58]
 34680: 7c 8b 02                 a4 = u8 [a1 + 0x2]
 34683: 82 18 58                 a1 = u64 [sp + 0x58]
 34686: 7c 8c 06                 a5 = u8 [a1 + 0x6]
 34689: 82 18 58                 a1 = u64 [sp + 0x58]
 34692: 7c 86 07                 s1 = u8 [a1 + 0x7]
 34695: 82 18 58                 a1 = u64 [sp + 0x58]
 34698: 7c 88 04                 a1 = u8 [a1 + 0x4]
 34701: 82 19 58                 a2 = u64 [sp + 0x58]
 34704: 7c 99 05                 a2 = u8 [a2 + 0x5]
 34707: 78 7c 06                 u8 [a0 + 0x6] = a5
 34710: 78 76 07                 u8 [a0 + 0x7] = s1
 34713: 82 15 60                 s0 = u64 [sp + 0x60]
 34716: 78 78 04                 u8 [a0 + 0x4] = a1
 34719: 78 79 05                 u8 [a0 + 0x5] = a2
 34722: 78 7b 02                 u8 [a0 + 0x2] = a4
 34725: 78 7a 03                 u8 [a0 + 0x3] = a3
 34728: 78 73                    u8 [a0] = t1
 34730: 78 72 01                 u8 [a0 + 0x1] = t0
 34733: 82 12 58                 t0 = u64 [sp + 0x58]
 34736: 82 19 20                 a2 = u64 [sp + 0x20]
 34739: 01                       fallthrough
      :                          @2359
 34740: 33 07                    a0 = 0
 34742: 3a 06 a8 10 03           s1 = u64 [0x310a8]
 34747: 3a 08 b0 10 03           a1 = u64 [0x310b0]
 34752: 7b 18 40                 u64 [sp + 0x40] = a1
 34755: 95 28 f0                 a1 = t0 + 0xfffffffffffffff0
 34758: 7b 18 18                 u64 [sp + 0x18] = a1
 34761: 82 48                    a1 = u64 [t2]
 34763: 7b 18 38                 u64 [sp + 0x38] = a1
 34766: 82 48 08                 a1 = u64 [t2 + 0x8]
 34769: 7b 18 30                 u64 [sp + 0x30] = a1
 34772: 33 08 80 00              a1 = 0x80
 34776: 28 25                    jump @2362
      :                          @2360
 34778: 98 47 39                 a0 = t2 >> 0x39
 34781: 95 b8 f8                 a1 = a4 + 0xfffffffffffffff8
 34784: d2 58 08                 a1 = a1 & s0
 34787: c8 28 08                 a1 = a1 + t0
 34790: 82 19 28                 a2 = u64 [sp + 0x28]
 34793: 78 97                    u8 [a2] = a0
 34795: 78 87 08                 u8 [a1 + 0x8] = a0
 34798: 82 19 20                 a2 = u64 [sp + 0x20]
 34801: 33 08 80 00              a1 = 0x80
 34805: 01                       fallthrough
      :                          @2361
 34806: 95 b7 01                 a0 = a4 + 0x1
 34809: aa 5b f6 fc              jump @2333 if a4 == s0
      :                          @2362
 34813: 64 7b                    a4 = a0
 34815: c8 72 0a                 a3 = t0 + a0
 34818: 7c a7                    a0 = u8 [a3]
 34820: ab 87 f2                 jump @2361 if a0 != a1
      :                          @2363
 34823: 7b 1a 28                 u64 [sp + 0x28] = a3
 34826: 7b 1b 50                 u64 [sp + 0x50] = a4
 34829: 97 b7 04                 a0 = a4 << 0x4
 34832: c9 72 08                 a1 = t0 - a0
 34835: 95 88 f0                 a1 = a1 + 0xfffffffffffffff0
 34838: 82 19 18                 a2 = u64 [sp + 0x18]
 34841: c9 79 09                 a2 = a2 - a0
 34844: 7b 19 48                 u64 [sp + 0x48] = a2
 34847: 01                       fallthrough
      :                          @2364
 34848: 82 17 48                 a0 = u64 [sp + 0x48]
 34851: 82 77                    a0 = u64 [a0]
 34853: 82 19 38                 a2 = u64 [sp + 0x38]
 34856: d3 97 07                 a0 = a0 ^ a2
 34859: 82 1a 40                 a3 = u64 [sp + 0x40]
 34862: ca a7 07                 a0 = a0 * a3
 34865: 82 1b 30                 a4 = u64 [sp + 0x30]
 34868: d3 b7 07                 a0 = a0 ^ a4
 34871: 9e 77 38                 a0 = a0 >>r 0x38
 34874: ca a7 07                 a0 = a0 * a3
 34877: d3 79 09                 a2 = a2 ^ a0
 34880: 9e 99 28                 a2 = a2 >>r 0x28
 34883: ca a9 0a                 a3 = a2 * a3
 34886: d3 a7 07                 a0 = a0 ^ a3
 34889: dc 97 04                 t2 = a0 <<r a2
 34892: d2 54 00                 ra = t2 & s0
 34895: c8 02 09                 a2 = t0 + ra
 34898: 7c 9a 01                 a3 = u8 [a2 + 0x1]
 34901: 7c 9c                    a5 = u8 [a2]
 34903: 7c 9b 02                 a4 = u8 [a2 + 0x2]
 34906: 7c 97 03                 a0 = u8 [a2 + 0x3]
 34909: 97 aa 08                 a3 = a3 << 0x8
 34912: d4 ca 0a                 a3 = a3 | a5
 34915: 97 bb 10                 a4 = a4 << 0x10
 34918: 97 77 18                 a0 = a0 << 0x18
 34921: d4 b7 07                 a0 = a0 | a4
 34924: d4 a7 07                 a0 = a0 | a3
 34927: 7c 9a 05                 a3 = u8 [a2 + 0x5]
 34930: 7c 9b 04                 a4 = u8 [a2 + 0x4]
 34933: 7c 9c 06                 a5 = u8 [a2 + 0x6]
 34936: 7c 99 07                 a2 = u8 [a2 + 0x7]
 34939: 97 aa 08                 a3 = a3 << 0x8
 34942: d4 ba 0a                 a3 = a3 | a4
 34945: 97 cc 10                 a5 = a5 << 0x10
 34948: 97 99 18                 a2 = a2 << 0x18
 34951: d4 c9 09                 a2 = a2 | a5
 34954: d4 a9 09                 a2 = a2 | a3
 34957: 97 99 20                 a2 = a2 << 0x20
 34960: d4 97 07                 a0 = a0 | a2
 34963: d2 67 0a                 a3 = a0 & s1
 34966: 64 0c                    a5 = ra
 34968: 52 0a 66                 jump @2367 if a3 != 0
      :                          @2365
 34971: 33 09 08                 a2 = 0x8
 34974: 64 0c                    a5 = ra
 34976: 01                       fallthrough
      :                          @2366
 34977: c8 9c 0c                 a5 = a5 + a2
 34980: d2 5c 0c                 a5 = a5 & s0
 34983: c8 c2 07                 a0 = t0 + a5
 34986: 7c 7a 01                 a3 = u8 [a0 + 0x1]
 34989: 7c 7b                    a4 = u8 [a0]
 34991: 7c 72 02                 t0 = u8 [a0 + 0x2]
 34994: 7c 73 03                 t1 = u8 [a0 + 0x3]
 34997: 97 aa 08                 a3 = a3 << 0x8
 35000: d4 ba 0a                 a3 = a3 | a4
 35003: 97 22 10                 t0 = t0 << 0x10
 35006: 97 33 18                 t1 = t1 << 0x18
 35009: d4 23 0b                 a4 = t1 | t0
 35012: 82 12 58                 t0 = u64 [sp + 0x58]
 35015: d4 ab 03                 t1 = a4 | a3
 35018: 7c 7b 05                 a4 = u8 [a0 + 0x5]
 35021: 7c 75 04                 s0 = u8 [a0 + 0x4]
 35024: 64 6a                    a3 = s1
 35026: 7c 76 06                 s1 = u8 [a0 + 0x6]
 35029: 7c 77 07                 a0 = u8 [a0 + 0x7]
 35032: 97 bb 08                 a4 = a4 << 0x8
 35035: d4 5b 0b                 a4 = a4 | s0
 35038: 97 66 10                 s1 = s1 << 0x10
 35041: 97 77 18                 a0 = a0 << 0x18
 35044: d4 67 07                 a0 = a0 | s1
 35047: 64 a6                    s1 = a3
 35049: 82 15 60                 s0 = u64 [sp + 0x60]
 35052: d4 b7 07                 a0 = a0 | a4
 35055: 97 77 20                 a0 = a0 << 0x20
 35058: d4 37 07                 a0 = a0 | t1
 35061: d2 7a 0a                 a3 = a3 & a0
 35064: 95 99 08                 a2 = a2 + 0x8
 35067: 51 0a a6                 jump @2366 if a3 == 0
      :                          @2367
 35070: 6a a7                    a0 = ctz a3
 35072: 98 77 03                 a0 = a0 >> 0x3
 35075: c8 c7 07                 a0 = a0 + a5
 35078: d2 57 09                 a2 = a0 & s0
 35081: c8 92 07                 a0 = t0 + a2
 35084: 7d 77                    a0 = i8 [a0]
 35086: 57 07 0e                 jump @2369 if a0 <s 0
      :                          @2368
 35089: 82 27                    a0 = u64 [t0]
 35091: d2 67 07                 a0 = a0 & s1
 35094: 6a 79                    a2 = ctz a0
 35096: 98 99 03                 a2 = a2 >> 0x3
 35099: 01                       fallthrough
      :                          @2369
 35100: 82 1b 50                 a4 = u64 [sp + 0x50]
 35103: c9 0b 07                 a0 = a4 - ra
 35106: c9 09 0a                 a3 = a2 - ra
 35109: d3 a7 07                 a0 = a0 ^ a3
 35112: d2 57 07                 a0 = a0 & s0
 35115: 33 0a 08                 a3 = 0x8
 35118: ac a7 ac fe              jump @2360 if a0 <u a3
      :                          @2370
 35122: 97 97 04                 a0 = a2 << 0x4
 35125: c9 72 07                 a0 = t0 - a0
 35128: 95 77 f0                 a0 = a0 + 0xfffffffffffffff0
 35131: c8 92 0a                 a3 = t0 + a2
 35134: 7c a3                    t1 = u8 [a3]
 35136: 98 4c 39                 a5 = t2 >> 0x39
 35139: 95 99 f8                 a2 = a2 + 0xfffffffffffffff8
 35142: d2 59 09                 a2 = a2 & s0
 35145: c8 29 09                 a2 = a2 + t0
 35148: 78 ac                    u8 [a3] = a5
 35150: 78 9c 08                 u8 [a2 + 0x8] = a5
 35153: 51 23 ff 00 c5 00        jump @2372 if t1 == 255
      :                          @2371
 35159: 7c 79                    a2 = u8 [a0]
 35161: 7c 8a                    a3 = u8 [a1]
 35163: 78 89                    u8 [a1] = a2
 35165: 78 7a                    u8 [a0] = a3
 35167: 7c 79 01                 a2 = u8 [a0 + 0x1]
 35170: 7c 8a 01                 a3 = u8 [a1 + 0x1]
 35173: 78 89 01                 u8 [a1 + 0x1] = a2
 35176: 78 7a 01                 u8 [a0 + 0x1] = a3
 35179: 7c 79 02                 a2 = u8 [a0 + 0x2]
 35182: 7c 8a 02                 a3 = u8 [a1 + 0x2]
 35185: 78 89 02                 u8 [a1 + 0x2] = a2
 35188: 78 7a 02                 u8 [a0 + 0x2] = a3
 35191: 7c 79 03                 a2 = u8 [a0 + 0x3]
 35194: 7c 8a 03                 a3 = u8 [a1 + 0x3]
 35197: 78 89 03                 u8 [a1 + 0x3] = a2
 35200: 78 7a 03                 u8 [a0 + 0x3] = a3
 35203: 7c 79 04                 a2 = u8 [a0 + 0x4]
 35206: 7c 8a 04                 a3 = u8 [a1 + 0x4]
 35209: 78 89 04                 u8 [a1 + 0x4] = a2
 35212: 78 7a 04                 u8 [a0 + 0x4] = a3
 35215: 7c 79 05                 a2 = u8 [a0 + 0x5]
 35218: 7c 8a 05                 a3 = u8 [a1 + 0x5]
 35221: 78 89 05                 u8 [a1 + 0x5] = a2
 35224: 78 7a 05                 u8 [a0 + 0x5] = a3
 35227: 7c 79 06                 a2 = u8 [a0 + 0x6]
 35230: 7c 8a 06                 a3 = u8 [a1 + 0x6]
 35233: 78 89 06                 u8 [a1 + 0x6] = a2
 35236: 78 7a 06                 u8 [a0 + 0x6] = a3
 35239: 7c 79 07                 a2 = u8 [a0 + 0x7]
 35242: 7c 8a 07                 a3 = u8 [a1 + 0x7]
 35245: 78 89 07                 u8 [a1 + 0x7] = a2
 35248: 78 7a 07                 u8 [a0 + 0x7] = a3
 35251: 7c 79 08                 a2 = u8 [a0 + 0x8]
 35254: 7c 8a 08                 a3 = u8 [a1 + 0x8]
 35257: 78 89 08                 u8 [a1 + 0x8] = a2
 35260: 78 7a 08                 u8 [a0 + 0x8] = a3
 35263: 7c 79 09                 a2 = u8 [a0 + 0x9]
 35266: 7c 8a 09                 a3 = u8 [a1 + 0x9]
 35269: 78 89 09                 u8 [a1 + 0x9] = a2
 35272: 78 7a 09                 u8 [a0 + 0x9] = a3
 35275: 7c 79 0a                 a2 = u8 [a0 + 0xa]
 35278: 7c 8a 0a                 a3 = u8 [a1 + 0xa]
 35281: 78 89 0a                 u8 [a1 + 0xa] = a2
 35284: 78 7a 0a                 u8 [a0 + 0xa] = a3
 35287: 7c 79 0b                 a2 = u8 [a0 + 0xb]
 35290: 7c 8a 0b                 a3 = u8 [a1 + 0xb]
 35293: 78 89 0b                 u8 [a1 + 0xb] = a2
 35296: 78 7a 0b                 u8 [a0 + 0xb] = a3
 35299: 7c 79 0c                 a2 = u8 [a0 + 0xc]
 35302: 7c 8a 0c                 a3 = u8 [a1 + 0xc]
 35305: 78 89 0c                 u8 [a1 + 0xc] = a2
 35308: 78 7a 0c                 u8 [a0 + 0xc] = a3
 35311: 7c 79 0d                 a2 = u8 [a0 + 0xd]
 35314: 7c 8a 0d                 a3 = u8 [a1 + 0xd]
 35317: 78 89 0d                 u8 [a1 + 0xd] = a2
 35320: 78 7a 0d                 u8 [a0 + 0xd] = a3
 35323: 7c 79 0e                 a2 = u8 [a0 + 0xe]
 35326: 7c 8a 0e                 a3 = u8 [a1 + 0xe]
 35329: 78 89 0e                 u8 [a1 + 0xe] = a2
 35332: 78 7a 0e                 u8 [a0 + 0xe] = a3
 35335: 7c 79 0f                 a2 = u8 [a0 + 0xf]
 35338: 7c 8a 0f                 a3 = u8 [a1 + 0xf]
 35341: 78 89 0f                 u8 [a1 + 0xf] = a2
 35344: 78 7a 0f                 u8 [a0 + 0xf] = a3
 35347: 28 0d fe                 jump @2364
      :                          @2372
 35350: 95 b9 f8                 a2 = a4 + 0xfffffffffffffff8
 35353: d2 59 09                 a2 = a2 & s0
 35356: c8 29 09                 a2 = a2 + t0
 35359: 82 1b 28                 a4 = u64 [sp + 0x28]
 35362: 46 0b ff 00              u8 [a4 + 0] = 0xff
 35366: 46 19 08 ff 00           u8 [a2 + 8] = 0xff
 35371: 33 09 10                 a2 = 0x10
 35374: 50 20 98 02 bb 7f 02     ra = 664, jump @13633
      :                          @2373 [@dyn 332]
 35381: 82 1b 50                 a4 = u64 [sp + 0x50]
 35384: 82 12 58                 t0 = u64 [sp + 0x58]
 35387: 82 19 20                 a2 = u64 [sp + 0x20]
 35390: 33 08 80 00              a1 = 0x80
 35394: 28 b4 fd                 jump @2361
      :                          @2374
 35397: 82 19 08                 a2 = u64 [sp + 0x8]
 35400: 7b 79                    u64 [a0] = a2
 35402: 7b 75 08                 u64 [a0 + 0x8] = s0
 35405: 7b 76 10                 u64 [a0 + 0x10] = s1
 35408: 7b 78 18                 u64 [a0 + 0x18] = a1
 35411: 82 19 60                 a2 = u64 [sp + 0x60]
 35414: 01                       fallthrough
      :                          @2375
 35415: 82 18 18                 a1 = u64 [sp + 0x18]
 35418: 97 88 04                 a1 = a1 << 0x4
 35421: c8 89 07                 a0 = a2 + a1
 35424: 95 77 09                 a0 = a0 + 0x9
 35427: 33 09 00 00 01           a2 = 0x10000
 35432: ac 79 25                 jump @2381 if a2 <u a0
      :                          @2376
 35435: c9 84 08                 a1 = t2 - a1
 35438: 33 0a c0 22 03           a3 = 0x322c0
 35443: 95 a9 00 00 01           a2 = a3 + 0x10000
 35448: 01                       fallthrough
      :                          @2377
 35449: 82 9a                    a3 = u64 [a2]
 35451: c9 a9 0b                 a4 = a2 - a3
 35454: ab 8b 0f                 jump @2381 if a4 != a1
      :                          @2378
 35457: c9 7a 0b                 a4 = a3 - a0
 35460: 01                       fallthrough
      :                          @2379
 35461: 82 9c                    a5 = u64 [a2]
 35463: ab ac f2                 jump @2377 if a5 != a3
      :                          @2380
 35466: 7b 9b                    u64 [a2] = a4
 35468: 01                       fallthrough
      :                          @2381
 35469: 82 10 78                 ra = u64 [sp + 0x78]
 35472: 82 15 70                 s0 = u64 [sp + 0x70]
 35475: 82 16 68                 s1 = u64 [sp + 0x68]
 35478: 95 11 80 00              sp = sp + 0x80
 35482: 32 00                    ret
      :                          @2382
 35484: 00                       trap
      :                          @2383
 35485: 00                       trap
      :                          @2384
 35486: 00                       trap
      :                          @2385
 35487: 82 9a                    a3 = u64 [a2]
 35489: 95 ab 08                 a4 = a3 + 0x8
 35492: ac ab 15 01              jump @2412 if a4 <u a3
      :                          @2386
 35496: 95 b7 08                 a0 = a4 + 0x8
 35499: d8 b7 0c                 a5 = a0 <u a4
 35502: d8 72 07                 a0 = t0 <u a0
 35505: d4 c7 07                 a0 = a0 | a5
 35508: 52 07 05 01              jump @2412 if a0 != 0
      :                          @2387
 35512: c9 b6 07                 a0 = s1 - a4
 35515: c8 27 07                 a0 = a0 + t0
 35518: 84 7c 07                 a5 = a0 & 0x7
 35521: c8 cb 0b                 a4 = a4 + a5
 35524: 01                       fallthrough
      :                          @2388
 35525: 82 95                    s0 = u64 [a2]
 35527: ab a5 d8                 jump @2385 if s0 != a3
      :                          @2389
 35530: 7b 9b                    u64 [a2] = a4
 35532: c9 c7 02                 t0 = a0 - a5
 35535: 33 08 00 04 01           a1 = 0x10400
 35540: 7b 28                    u64 [t0] = a1
 35542: 33 08 c0 22 03           a1 = 0x322c0
 35547: 33 03 00 00 01           t1 = 0x10000
 35552: c8 38 0a                 a3 = a1 + t1
 35555: 01                       fallthrough
      :                          @2390
 35556: 82 ab                    a4 = u64 [a3]
 35558: 95 bc 10                 a5 = a4 + 0x10
 35561: ac bc d1 00              jump @2413 if a5 <u a4
      :                          @2391
 35565: 95 c9 08                 a2 = a5 + 0x8
 35568: d8 c9 05                 s0 = a2 <u a5
 35571: d8 93 09                 a2 = t1 <u a2
 35574: d4 59 09                 a2 = a2 | s0
 35577: 52 09 c1 00              jump @2413 if a2 != 0
      :                          @2392
 35581: c9 c8 05                 s0 = a1 - a5
 35584: c8 35 05                 s0 = s0 + t1
 35587: 84 59 07                 a2 = s0 & 0x7
 35590: c8 9c 0c                 a5 = a5 + a2
 35593: 01                       fallthrough
      :                          @2393
 35594: 82 a7                    a0 = u64 [a3]
 35596: ab b7 d8                 jump @2390 if a0 != a4
      :                          @2394
 35599: 7b ac                    u64 [a3] = a5
 35601: c9 95 05                 s0 = s0 - a2
 35604: 7b 52                    u64 [s0] = t0
 35606: 33 07 20 04 01           a0 = 0x10420
 35611: 7b 57 08                 u64 [s0 + 0x8] = a0
 35614: 01                       fallthrough
      :                          @2395
 35615: 3a 09 80 12 03           a2 = u64 [0x31280]
 35620: 52 09 0b                 jump @2397 if a2 != 0
      :                          @2396
 35623: 3e 05 80 12 03           u64 [0x31280] = s0
 35628: 33 08                    a1 = 0
 35630: 01                       fallthrough
      :                          @2397
 35631: 51 09 7a                 jump @2411 if a2 == 0
      :                          @2398
 35634: 7b 19                    u64 [sp] = a2
 35636: 82 57 08                 a0 = u64 [s0 + 0x8]
 35639: 7b 17 08                 u64 [sp + 0x8] = a0
 35642: 82 56                    s1 = u64 [s0]
 35644: 82 78                    a1 = u64 [a0]
 35646: 64 67                    a0 = s1
 35648: b4 80 02 9a 02           ra = 666, jump [a1]
      :                          @2399 [@dyn 333]
 35653: 82 17 08                 a0 = u64 [sp + 0x8]
 35656: 82 77 08                 a0 = u64 [a0 + 0x8]
 35659: 95 79 ff ff fe           a2 = a0 + 0xfffffffffffeffff
 35664: 53 39 00 00 ff 32        jump @2405 if a2 <u 4294901760
      :                          @2400
 35670: 33 08 c0 22 03           a1 = 0x322c0
 35675: 95 88 00 00 01           a1 = a1 + 0x10000
 35680: 01                       fallthrough
      :                          @2401
 35681: 82 89                    a2 = u64 [a1]
 35683: c9 98 0a                 a3 = a1 - a2
 35686: ab 6a 1c                 jump @2405 if a3 != s1
      :                          @2402
 35689: c9 79 0a                 a3 = a2 - a0
 35692: 01                       fallthrough
      :                          @2403
 35693: 82 8b                    a4 = u64 [a1]
 35695: ab 9b f2                 jump @2401 if a4 != a2
      :                          @2404
 35698: 7b 8a                    u64 [a1] = a3
 35700: 33 0c                    a5 = 0
 35702: 33 07 c0 22 03           a0 = 0x322c0
 35707: 95 77 00 00 01           a0 = a0 + 0x10000
 35712: 28 0d                    jump @2406
      :                          @2405
 35714: 33 07 c0 22 03           a0 = 0x322c0
 35719: 95 77 00 00 01           a0 = a0 + 0x10000
 35724: 01                       fallthrough
      :                          @2406
 35725: 82 78                    a1 = u64 [a0]
 35727: c9 87 09                 a2 = a0 - a1
 35730: ab 59 14                 jump @2410 if a2 != s0
      :                          @2407
 35733: 95 89 f0                 a2 = a1 + 0xfffffffffffffff0
 35736: 01                       fallthrough
      :                          @2408
 35737: 82 7a                    a3 = u64 [a0]
 35739: ab 8a f2                 jump @2406 if a3 != a1
      :                          @2409
 35742: 7b 79                    u64 [a0] = a2
 35744: 33 0b                    a4 = 0
 35746: 82 15                    s0 = u64 [sp]
 35748: 28 05                    jump @2411
      :                          @2410
 35750: 82 15                    s0 = u64 [sp]
 35752: 01                       fallthrough
      :                          @2411
 35753: 64 57                    a0 = s0
 35755: 82 10 20                 ra = u64 [sp + 0x20]
 35758: 82 15 18                 s0 = u64 [sp + 0x18]
 35761: 82 16 10                 s1 = u64 [sp + 0x10]
 35764: 95 11 28                 sp = sp + 0x28
 35767: 32 00                    ret
      :                          @2412
 35769: 00                       trap
      :                          @2413
 35770: 00                       trap
      :                          @2414
 35771: 51 08 14                 jump @2418 if a1 == 0
      :                          @2415
 35774: 64 7a                    a3 = a0
 35776: 64 8b                    a4 = a1
 35778: 01                       fallthrough
      :                          @2416
 35779: 64 b9                    a2 = a4
 35781: cd ba 0b                 a4 = a3 %u a4
 35784: 64 9a                    a3 = a2
 35786: 52 0b f9                 jump @2416 if a4 != 0
      :                          @2417
 35789: 28 07                    jump @2419
      :                          @2418
 35791: 64 79                    a2 = a0
 35793: 51 07 0b                 jump @2420 if a0 == 0
      :                          @2419
 35796: cb 97 07                 a0 = a0 /u a2
 35799: ca 87 07                 a0 = a0 * a1
 35802: 32 00                    ret
      :                          @2420
 35804: 00                       trap
      :                          @2421
 35805: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 35808: 7b 10 28                 u64 [sp + 0x28] = ra
 35811: 7b 15 20                 u64 [sp + 0x20] = s0
 35814: 7b 16 18                 u64 [sp + 0x18] = s1
 35817: 64 75                    s0 = a0
 35819: 51 09 3a                 jump @2425 if a2 == 0
      :                          @2422
 35822: 14 07 00 00 00 00 00 00 00 80 a0 = 0x8000000000000000
 35832: d3 87 07                 a0 = a0 ^ a1
 35835: e1 97 07                 a0 = a0 | ~a2
 35838: 51 07 4d                 jump @2427 if a0 == 0
      :                          @2423
 35841: cc 98 06                 s1 = a1 /s a2
 35844: ca 96 07                 a0 = s1 * a2
 35847: c9 78 0a                 a3 = a1 - a0
 35850: 64 17                    a0 = sp
 35852: 64 98                    a1 = a2
 35854: 64 a9                    a2 = a3
 35856: 50 20 9c 02 cd           ra = 668, jump @2421
      :                          @2424 [@dyn 334]
 35861: 82 17 10                 a0 = u64 [sp + 0x10]
 35864: 82 19 08                 a2 = u64 [sp + 0x8]
 35867: 82 18                    a1 = u64 [sp]
 35869: ca 76 0a                 a3 = s1 * a0
 35872: c9 a9 09                 a2 = a2 - a3
 35875: 28 12                    jump @2426
      :                          @2425
 35877: 8e 8a                    a3 = a1 >u 0
 35879: 89 8b                    a4 = a1 <s 0
 35881: 33 07 ff                 a0 = 0xffffffffffffffff
 35884: da ba 07                 a0 = a3 if a4 == 0
 35887: 9a 8a                    a3 = -a1
 35889: e3 a8 08                 a1 = maxs(a1, a3)
 35892: 01                       fallthrough
      :                          @2426
 35893: 7b 58                    u64 [s0] = a1
 35895: 7b 57 08                 u64 [s0 + 0x8] = a0
 35898: 7b 59 10                 u64 [s0 + 0x10] = a2
 35901: 82 10 28                 ra = u64 [sp + 0x28]
 35904: 82 15 20                 s0 = u64 [sp + 0x20]
 35907: 82 16 18                 s1 = u64 [sp + 0x18]
 35910: 95 11 30                 sp = sp + 0x30
 35913: 32 00                    ret
      :                          @2427
 35915: 00                       trap
      :                          @2428 [@dyn 335]
 35916: 82 18                    a1 = u64 [sp]
 35918: 33 07 01                 a0 = 0x1
 35921: ab 78 1a                 jump @2430 if a1 != a0
      :                          @2429
 35924: 82 18 08                 a1 = u64 [sp + 0x8]
 35927: ce 58 08                 a1 = a1 %s s0
 35930: c8 58 08                 a1 = a1 + s0
 35933: ce 58 08                 a1 = a1 %s s0
 35936: 82 10 20                 ra = u64 [sp + 0x20]
 35939: 82 15 18                 s0 = u64 [sp + 0x18]
 35942: 95 11 28                 sp = sp + 0x28
 35945: 32 00                    ret
      :                          @2430
 35947: 33 07                    a0 = 0
 35949: 82 10 20                 ra = u64 [sp + 0x20]
 35952: 82 15 18                 s0 = u64 [sp + 0x18]
 35955: 95 11 28                 sp = sp + 0x28
 35958: 32 00                    ret
      :                          @2431
 35960: d8 87 08                 a1 = a0 <u a1
 35963: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
 35966: db 89 04                 t2 = a2 if a1 != 0
 35969: da 8c 03                 t1 = a5 if a1 == 0
 35972: ae 43 26                 jump @2436 if t1 >=u t2
      :                          @2432
 35975: c8 34 08                 a1 = t2 + t1
 35978: 95 88 01                 a1 = a1 + 0x1
 35981: 98 8c 01                 a5 = a1 >> 0x1
 35984: 64 29                    a2 = t0
 35986: 33 08 01                 a1 = 0x1
 35989: 01                       fallthrough
      :                          @2433
 35990: 83 99 ff                 i32 a2 = a2 + 0xffffffffffffffff
 35993: 51 09 df                 jump @2431 if a2 == 0
      :                          @2434
 35996: d6 c8 0a                 a3 = a1 mulhu a5
 35999: ca c8 08                 a1 = a1 * a5
 36002: db ab 08                 a1 = a4 if a3 != 0
 36005: ae 87 f1                 jump @2433 if a0 >=u a1
      :                          @2435
 36008: 28 d0                    jump @2431
      :                          @2436
 36010: 64 37                    a0 = t1
 36012: 32 00                    ret
      :                          @2437
 36014: 84 89 01                 a2 = a1 & 0x1
 36017: 52 09 09                 jump @2439 if a2 != 0
      :                          @2438
 36020: 33 07                    a0 = 0
 36022: 28 47 34 02              jump @12262
      :                          @2439
 36026: cd 87 0c                 a5 = a0 %u a1
 36029: 51 0c 4f                 jump @2450 if a5 == 0
      :                          @2440
 36032: 33 07 01                 a0 = 0x1
 36035: 33 03 03                 t1 = 0x3
 36038: 33 02 05                 t0 = 0x5
 36041: 64 8b                    a4 = a1
 36043: 28 18                    jump @2443
      :                          @2441
 36045: 64 c8                    a1 = a5
 36047: 01                       fallthrough
      :                          @2442
 36048: d2 8b 0a                 a3 = a4 & a1
 36051: 84 aa 02                 a3 = a3 & 0x2
 36054: 9a 79                    a2 = -a0
 36056: cd 8b 0c                 a5 = a4 %u a1
 36059: db a9 07                 a0 = a2 if a3 != 0
 36062: 64 8b                    a4 = a1
 36064: 51 0c 38                 jump @2451 if a5 == 0
      :                          @2443
 36067: 84 c8 01                 a1 = a5 & 0x1
 36070: 52 08 e7                 jump @2441 if a1 != 0
      :                          @2444
 36073: 84 b8 07                 a1 = a4 & 0x7
 36076: aa 38 06                 jump @2446 if a1 == t1
      :                          @2445
 36079: ab 28 12                 jump @2448 if a1 != t0
      :                          @2446
 36082: 98 c8 01                 a1 = a5 >> 0x1
 36085: 84 ca 02                 a3 = a5 & 0x2
 36088: 9a 77                    a0 = -a0
 36090: 64 8c                    a5 = a1
 36092: 51 0a f6                 jump @2446 if a3 == 0
      :                          @2447
 36095: 28 d1                    jump @2442
      :                          @2448
 36097: 84 c8 02                 a1 = a5 & 0x2
 36100: 98 cc 01                 a5 = a5 >> 0x1
 36103: 51 08 fa                 jump @2448 if a1 == 0
      :                          @2449
 36106: 28 c3                    jump @2441
      :                          @2450
 36108: 33 07 01                 a0 = 0x1
 36111: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 36114: 94 87                    a0 = 0 if a1 != 0
 36116: 28 e9 33 02              jump @12262
      :                          @2451
 36120: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 36123: 94 87                    a0 = 0 if a1 != 0
 36125: 32 00                    ret
      :                          @2452
 36127: 33 08 02                 a1 = 0x2
 36130: aa 87 2a                 jump @2461 if a0 == a1
      :                          @2453
 36133: 95 77 01                 a0 = a0 + 0x1
 36136: ac 97 fd                 jump @2453 if a0 <u a2
      :                          @2454
 36139: 84 78 01                 a1 = a0 & 0x1
 36142: 51 08 f1                 jump @2452 if a1 == 0
      :                          @2455
 36145: ac a7 20                 jump @2462 if a0 <u a3
      :                          @2456
 36148: 33 08 03                 a1 = 0x3
 36151: 01                       fallthrough
      :                          @2457
 36152: 51 08 1b                 jump @2463 if a1 == 0
      :                          @2458
 36155: cd 87 0b                 a4 = a0 %u a1
 36158: 51 0b e7                 jump @2453 if a4 == 0
      :                          @2459
 36161: 95 88 02                 a1 = a1 + 0x2
 36164: ca 88 0b                 a4 = a1 * a1
 36167: ae b7 f1                 jump @2457 if a0 >=u a4
      :                          @2460
 36170: 32 00                    ret
      :                          @2461
 36172: 33 07 02                 a0 = 0x2
 36175: 32 00                    ret
      :                          @2462
 36177: 32 00                    ret
      :                          @2463
 36179: 00                       trap
      :                          @2464
 36180: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 36183: 7b 10 40                 u64 [sp + 0x40] = ra
 36186: 7b 15 38                 u64 [sp + 0x38] = s0
 36189: 7b 16 30                 u64 [sp + 0x30] = s1
 36192: 7b 17 08                 u64 [sp + 0x8] = a0
 36195: 33 06                    s1 = 0
 36197: 95 75 ff                 s0 = a0 + 0xffffffffffffffff
 36200: 49 11 18                 u64 [sp + 24] = 0
 36203: 33 07 08                 a0 = 0x8
 36206: 7b 17 20                 u64 [sp + 0x20] = a0
 36209: 84 58 01                 a1 = s0 & 0x1
 36212: 49 11 28                 u64 [sp + 40] = 0
 36215: 7b 15 10                 u64 [sp + 0x10] = s0
 36218: 52 08 46                 jump @2470 if a1 != 0
      :                          @2465
 36221: 33 06                    s1 = 0
 36223: 33 09 02                 a2 = 0x2
 36226: 82 1a 10                 a3 = u64 [sp + 0x10]
 36229: 28 1b                    jump @2467
      :                          @2466
 36231: 97 68 03                 a1 = s1 << 0x3
 36234: c8 78 08                 a1 = a1 + a0
 36237: 7b 89                    u64 [a1] = a2
 36239: 95 66 01                 s1 = s1 + 0x1
 36242: 98 a5 01                 s0 = a3 >> 0x1
 36245: 84 a8 02                 a1 = a3 & 0x2
 36248: 7b 16 28                 u64 [sp + 0x28] = s1
 36251: 64 5a                    a3 = s0
 36253: 52 08 23                 jump @2470 if a1 != 0
      :                          @2467
 36256: 82 18 18                 a1 = u64 [sp + 0x18]
 36259: ab 86 e4                 jump @2466 if s1 != a1
      :                          @2468
 36262: 95 17 18                 a0 = sp + 0x18
 36265: 64 68                    a1 = s1
 36267: 64 a5                    s0 = a3
 36269: 50 20 a0 02 93 c5        ra = 672, jump @1581
      :                          @2469 [@dyn 336]
 36275: 64 5a                    a3 = s0
 36277: 33 09 02                 a2 = 0x2
 36280: 82 16 28                 s1 = u64 [sp + 0x28]
 36283: 82 17 20                 a0 = u64 [sp + 0x20]
 36286: 28 c9                    jump @2466
      :                          @2470
 36288: 55 15 09 32              jump @2476 if s0 >=u 9
      :                          @2471
 36292: 82 18 18                 a1 = u64 [sp + 0x18]
 36295: 54 15 01 79              jump @2485 if s0 <=u 1
      :                          @2472
 36299: ab 86 15                 jump @2475 if s1 != a1
      :                          @2473
 36302: 95 17 18                 a0 = sp + 0x18
 36305: 64 68                    a1 = s1
 36307: 50 20 a2 02 6d c5        ra = 674, jump @1581
      :                          @2474 [@dyn 337]
 36313: 82 16 28                 s1 = u64 [sp + 0x28]
 36316: 82 18 18                 a1 = u64 [sp + 0x18]
 36319: 01                       fallthrough
      :                          @2475
 36320: 7b 18                    u64 [sp] = a1
 36322: 82 17 20                 a0 = u64 [sp + 0x20]
 36325: 97 68 03                 a1 = s1 << 0x3
 36328: c8 78 08                 a1 = a1 + a0
 36331: 7b 85                    u64 [a1] = s0
 36333: 95 66 01                 s1 = s1 + 0x1
 36336: 28 56                    jump @2486
      :                          @2476
 36338: 33 09 03                 a2 = 0x3
 36341: 28 0b                    jump @2478
      :                          @2477
 36343: 95 99 02                 a2 = a2 + 0x2
 36346: ca 99 07                 a0 = a2 * a2
 36349: ac 75 c7                 jump @2471 if s0 <u a0
      :                          @2478
 36352: 51 09 7f 01              jump @2526 if a2 == 0
      :                          @2479
 36356: cd 95 07                 a0 = s0 %u a2
 36359: 52 07 f0                 jump @2477 if a0 != 0
      :                          @2480
 36362: 28 1c                    jump @2482
      :                          @2481
 36364: 82 17 20                 a0 = u64 [sp + 0x20]
 36367: 97 68 03                 a1 = s1 << 0x3
 36370: c8 87 07                 a0 = a0 + a1
 36373: 7b 79                    u64 [a0] = a2
 36375: 95 66 01                 s1 = s1 + 0x1
 36378: cb 95 05                 s0 = s0 /u a2
 36381: cd 95 07                 a0 = s0 %u a2
 36384: 7b 16 28                 u64 [sp + 0x28] = s1
 36387: 52 07 d4                 jump @2477 if a0 != 0
      :                          @2482
 36390: 82 17 18                 a0 = u64 [sp + 0x18]
 36393: ab 76 e3                 jump @2481 if s1 != a0
      :                          @2483
 36396: 95 17 18                 a0 = sp + 0x18
 36399: 64 68                    a1 = s1
 36401: 64 96                    s1 = a2
 36403: 50 20 a4 02 0d c5        ra = 676, jump @1581
      :                          @2484 [@dyn 338]
 36409: 64 69                    a2 = s1
 36411: 82 16 28                 s1 = u64 [sp + 0x28]
 36414: 28 ce                    jump @2481
      :                          @2485
 36416: 7b 18                    u64 [sp] = a1
 36418: 82 17 20                 a0 = u64 [sp + 0x20]
 36421: 01                       fallthrough
      :                          @2486
 36422: 64 68                    a1 = s1
 36424: 64 75                    s0 = a0
 36426: 50 20 a6 02 36 86        ra = 678, jump @356
      :                          @2487 [@dyn 339]
 36432: 33 02 02                 t0 = 0x2
 36435: ae 26 0c                 jump @2489 if s1 >=u t0
      :                          @2488
 36438: 64 68                    a1 = s1
 36440: 82 1b 08                 a4 = u64 [sp + 0x8]
 36443: 64 54                    t2 = s0
 36445: 28 57                    jump @2498
      :                          @2489
 36447: 82 5c                    a5 = u64 [s0]
 36449: 95 57 10                 a0 = s0 + 0x10
 36452: 33 0a 01                 a3 = 0x1
 36455: c9 6a 08                 a1 = a3 - s1
 36458: 33 09 02                 a2 = 0x2
 36461: 82 1b 08                 a4 = u64 [sp + 0x8]
 36464: 64 54                    t2 = s0
 36466: 01                       fallthrough
      :                          @2490
 36467: 64 c5                    s0 = a5
 36469: 82 7c f8                 a5 = u64 [a0 + 0xfffffffffffffff8]
 36472: aa 5c 13                 jump @2493 if a5 == s0
      :                          @2491
 36475: 95 99 01                 a2 = a2 + 0x1
 36478: c8 98 0a                 a3 = a1 + a2
 36481: 95 77 08                 a0 = a0 + 0x8
 36484: ab 2a ef                 jump @2490 if a3 != t0
      :                          @2492
 36487: 64 68                    a1 = s1
 36489: 28 2b                    jump @2498
      :                          @2493
 36491: 95 98 ff                 a1 = a2 + 0xffffffffffffffff
 36494: ae 69 26                 jump @2498 if a2 >=u s1
      :                          @2494
 36497: c9 96 09                 a2 = s1 - a2
 36500: 28 0b                    jump @2496
      :                          @2495
 36502: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 36505: 95 77 08                 a0 = a0 + 0x8
 36508: 51 09 18                 jump @2498 if a2 == 0
      :                          @2496
 36511: 97 8a 03                 a3 = a1 << 0x3
 36514: c8 4a 0a                 a3 = a3 + t2
 36517: 82 76                    s1 = u64 [a0]
 36519: 82 ac f8                 a5 = u64 [a3 + 0xfffffffffffffff8]
 36522: aa c6 ec                 jump @2495 if s1 == a5
      :                          @2497
 36525: 7b a6                    u64 [a3] = s1
 36527: 95 88 01                 a1 = a1 + 0x1
 36530: 28 e4                    jump @2495
      :                          @2498
 36532: 53 1b 03 5a              jump @2510 if a4 <u 3
      :                          @2499
 36536: 97 88 03                 a1 = a1 << 0x3
 36539: c8 48 08                 a1 = a1 + t2
 36542: 33 02 02                 t0 = 0x2
 36545: 33 03 01                 t1 = 0x1
 36548: 28 05                    jump @2501
      :                          @2500
 36550: aa b2 48                 jump @2510 if t0 == a4
      :                          @2501
 36553: 64 27                    a0 = t0
 36555: 95 22 01                 t0 = t0 + 0x1
 36558: 64 4a                    a3 = t2
 36560: 28 05                    jump @2503
      :                          @2502
 36562: aa 3c f4                 jump @2500 if a5 == t1
      :                          @2503
 36565: aa 8a 6e                 jump @2518 if a3 == a1
      :                          @2504
 36568: 82 ac                    a5 = u64 [a3]
 36570: 51 0c a6 00              jump @2527 if a5 == 0
      :                          @2505
 36574: 82 19 10                 a2 = u64 [sp + 0x10]
 36577: ac c9 e5                 jump @2500 if a2 <u a5
      :                          @2506
 36580: 95 aa 08                 a3 = a3 + 0x8
 36583: 82 19 10                 a2 = u64 [sp + 0x10]
 36586: cb c9 06                 s1 = a2 /u a5
 36589: 33 0c 01                 a5 = 0x1
 36592: 64 75                    s0 = a0
 36594: 28 0b                    jump @2508
      :                          @2507
 36596: 98 66 01                 s1 = s1 >> 0x1
 36599: ca 55 05                 s0 = s0 * s0
 36602: 51 06 d8                 jump @2502 if s1 == 0
      :                          @2508
 36605: 84 69 01                 a2 = s1 & 0x1
 36608: cd b5 05                 s0 = s0 %u a4
 36611: 51 09 f1                 jump @2507 if a2 == 0
      :                          @2509
 36614: ca c5 09                 a2 = s0 * a5
 36617: cd b9 0c                 a5 = a2 %u a4
 36620: 28 e8                    jump @2507
      :                          @2510
 36622: 82 18                    a1 = u64 [sp]
 36624: 51 08 2f                 jump @2517 if a1 == 0
      :                          @2511
 36627: 56 28 00 20 2c           jump @2517 if a1 >u 8192
      :                          @2512
 36632: 97 87 03                 a0 = a1 << 0x3
 36635: 33 08 c0 22 03           a1 = 0x322c0
 36640: 95 88 00 00 01           a1 = a1 + 0x10000
 36645: 01                       fallthrough
      :                          @2513
 36646: 82 89                    a2 = u64 [a1]
 36648: c9 98 0a                 a3 = a1 - a2
 36651: ab 4a 14                 jump @2517 if a3 != t2
      :                          @2514
 36654: c9 79 0a                 a3 = a2 - a0
 36657: 01                       fallthrough
      :                          @2515
 36658: 82 8b                    a4 = u64 [a1]
 36660: ab 9b f2                 jump @2513 if a4 != a2
      :                          @2516
 36663: 7b 8a                    u64 [a1] = a3
 36665: 33 0c                    a5 = 0
 36667: 33 07                    a0 = 0
 36669: 28 34                    jump @2525
      :                          @2517
 36671: 33 07                    a0 = 0
 36673: 28 30                    jump @2525
      :                          @2518
 36675: 82 19                    a2 = u64 [sp]
 36677: 51 09 2c                 jump @2525 if a2 == 0
      :                          @2519
 36680: 33 08 00 20              a1 = 0x2000
 36684: ac 98 25                 jump @2525 if a1 <u a2
      :                          @2520
 36687: 97 98 03                 a1 = a2 << 0x3
 36690: 33 09 c0 22 03           a2 = 0x322c0
 36695: 95 99 00 00 01           a2 = a2 + 0x10000
 36700: 01                       fallthrough
      :                          @2521
 36701: 82 9a                    a3 = u64 [a2]
 36703: c9 a9 0b                 a4 = a2 - a3
 36706: ab 4b 0f                 jump @2525 if a4 != t2
      :                          @2522
 36709: c9 8a 0b                 a4 = a3 - a1
 36712: 01                       fallthrough
      :                          @2523
 36713: 82 9c                    a5 = u64 [a2]
 36715: ab ac f2                 jump @2521 if a5 != a3
      :                          @2524
 36718: 7b 9b                    u64 [a2] = a4
 36720: 01                       fallthrough
      :                          @2525
 36721: 82 10 40                 ra = u64 [sp + 0x40]
 36724: 82 15 38                 s0 = u64 [sp + 0x38]
 36727: 82 16 30                 s1 = u64 [sp + 0x30]
 36730: 95 11 48                 sp = sp + 0x48
 36733: 32 00                    ret
      :                          @2526
 36735: 00                       trap
      :                          @2527
 36736: 00                       trap
      :                          @2528 [@dyn 340]
 36737: 82 17 10                 a0 = u64 [sp + 0x10]
 36740: 52 17 01 4c              jump @2530 if a0 != 1
      :                          @2529
 36744: 82 17 18                 a0 = u64 [sp + 0x18]
 36747: 82 1b 08                 a4 = u64 [sp + 0x8]
 36750: 82 18                    a1 = u64 [sp]
 36752: c9 b8 08                 a1 = a1 - a4
 36755: ce 58 08                 a1 = a1 %s s0
 36758: 9a 59                    a2 = -s0
 36760: e3 95 09                 a2 = maxs(s0, a2)
 36763: 99 8a 3f                 a3 = a1 >>a 0x3f
 36766: d2 9a 0a                 a3 = a3 & a2
 36769: c8 a8 08                 a1 = a1 + a3
 36772: ce 57 07                 a0 = a0 %s s0
 36775: c8 57 07                 a0 = a0 + s0
 36778: ce 57 07                 a0 = a0 %s s0
 36781: ca 78 07                 a0 = a1 * a0
 36784: ce 57 07                 a0 = a0 %s s0
 36787: 99 78 3f                 a1 = a0 >>a 0x3f
 36790: d2 98 08                 a1 = a1 & a2
 36793: c8 87 07                 a0 = a0 + a1
 36796: ca 67 07                 a0 = a0 * s1
 36799: c8 b7 07                 a0 = a0 + a4
 36802: 82 10 38                 ra = u64 [sp + 0x38]
 36805: 82 15 30                 s0 = u64 [sp + 0x30]
 36808: 82 16 28                 s1 = u64 [sp + 0x28]
 36811: 95 11 40                 sp = sp + 0x40
 36814: 32 00                    ret
      :                          @2530
 36816: 00                       trap
      :                          @2531
 36817: 95 11 98                 sp = sp + 0xffffffffffffff98
 36820: 7b 10 60                 u64 [sp + 0x60] = ra
 36823: 7b 15 58                 u64 [sp + 0x58] = s0
 36826: 7b 16 50                 u64 [sp + 0x50] = s1
 36829: 82 86 08                 s1 = u64 [a1 + 0x8]
 36832: 51 06 a2 01              jump @2549 if s1 == 0
      :                          @2532
 36836: 64 85                    s0 = a1
 36838: 82 89                    a2 = u64 [a1]
 36840: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 36850: d3 98 08                 a1 = a1 ^ a2
 36853: e1 68 08                 a1 = a1 | ~s1
 36856: 51 08 89 01              jump @2548 if a1 == 0
      :                          @2533
 36860: 7b 17 30                 u64 [sp + 0x30] = a0
 36863: 82 77                    a0 = u64 [a0]
 36865: 7b 17 28                 u64 [sp + 0x28] = a0
 36868: 7b 19 18                 u64 [sp + 0x18] = a2
 36871: ce 69 08                 a1 = a2 %s s1
 36874: 9a 67                    a0 = -s1
 36876: e3 76 09                 a2 = maxs(s1, a0)
 36879: 99 87 3f                 a0 = a1 >>a 0x3f
 36882: 7b 19 20                 u64 [sp + 0x20] = a2
 36885: d2 97 07                 a0 = a0 & a2
 36888: c8 78 08                 a1 = a1 + a0
 36891: 95 17 38                 a0 = sp + 0x38
 36894: 64 69                    a2 = s1
 36896: 50 20 aa 02 bd fb        ra = 682, jump @2421
      :                          @2534 [@dyn 341]
 36902: 82 17 38                 a0 = u64 [sp + 0x38]
 36905: 52 17 01 5a 01           jump @2550 if a0 != 1
      :                          @2535
 36910: 82 17 40                 a0 = u64 [sp + 0x40]
 36913: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 36923: d3 87 09                 a2 = a0 ^ a1
 36926: e1 69 09                 a2 = a2 | ~s1
 36929: 51 09 40 01              jump @2548 if a2 == 0
      :                          @2536
 36933: ce 67 07                 a0 = a0 %s s1
 36936: c8 67 07                 a0 = a0 + s1
 36939: d3 78 08                 a1 = a1 ^ a0
 36942: e1 68 08                 a1 = a1 | ~s1
 36945: 51 08 30 01              jump @2548 if a1 == 0
      :                          @2537
 36949: 82 18 30                 a1 = u64 [sp + 0x30]
 36952: 82 88 08                 a1 = u64 [a1 + 0x8]
 36955: 82 19 28                 a2 = u64 [sp + 0x28]
 36958: c9 98 09                 a2 = a1 - a2
 36961: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 36971: d3 89 0a                 a3 = a2 ^ a1
 36974: e1 6a 0a                 a3 = a3 | ~s1
 36977: 51 0a 10 01              jump @2548 if a3 == 0
      :                          @2538
 36981: ce 67 07                 a0 = a0 %s s1
 36984: ce 69 09                 a2 = a2 %s s1
 36987: 99 9a 3f                 a3 = a2 >>a 0x3f
 36990: 82 1b 20                 a4 = u64 [sp + 0x20]
 36993: d2 ba 0a                 a3 = a3 & a4
 36996: c8 a9 09                 a2 = a2 + a3
 36999: ca 79 09                 a2 = a2 * a0
 37002: d3 89 07                 a0 = a2 ^ a1
 37005: e1 67 07                 a0 = a0 | ~s1
 37008: 51 07 f1 00              jump @2548 if a0 == 0
      :                          @2539
 37012: 82 55 10                 s0 = u64 [s0 + 0x10]
 37015: 51 05 eb 00              jump @2549 if s0 == 0
      :                          @2540
 37019: 82 17 18                 a0 = u64 [sp + 0x18]
 37022: ca 76 08                 a1 = s1 * a0
 37025: 14 07 00 00 00 00 00 00 00 80 a0 = 0x8000000000000000
 37035: d3 87 07                 a0 = a0 ^ a1
 37038: e1 57 07                 a0 = a0 | ~s0
 37041: 51 07 d0 00              jump @2548 if a0 == 0
      :                          @2541
 37045: 7b 19 10                 u64 [sp + 0x10] = a2
 37048: 7b 18                    u64 [sp] = a1
 37050: ce 58 08                 a1 = a1 %s s0
 37053: 9a 57                    a0 = -s0
 37055: e3 75 09                 a2 = maxs(s0, a0)
 37058: 99 87 3f                 a0 = a1 >>a 0x3f
 37061: 7b 19 08                 u64 [sp + 0x8] = a2
 37064: d2 97 07                 a0 = a0 & a2
 37067: c8 78 08                 a1 = a1 + a0
 37070: 95 17 38                 a0 = sp + 0x38
 37073: 64 59                    a2 = s0
 37075: 50 20 ac 02 0a fb        ra = 684, jump @2421
      :                          @2542 [@dyn 342]
 37081: 82 17 38                 a0 = u64 [sp + 0x38]
 37084: 52 17 01 a7 00           jump @2550 if a0 != 1
      :                          @2543
 37089: 82 17 40                 a0 = u64 [sp + 0x40]
 37092: 14 09 00 00 00 00 00 00 00 80 a2 = 0x8000000000000000
 37102: d3 97 08                 a1 = a0 ^ a2
 37105: e1 58 08                 a1 = a1 | ~s0
 37108: 51 08 8d 00              jump @2548 if a1 == 0
      :                          @2544
 37112: ce 57 08                 a1 = a0 %s s0
 37115: c8 58 08                 a1 = a1 + s0
 37118: d3 89 09                 a2 = a2 ^ a1
 37121: e1 59 07                 a0 = a2 | ~s0
 37124: 51 07 7d                 jump @2548 if a0 == 0
      :                          @2545
 37127: 82 17 10                 a0 = u64 [sp + 0x10]
 37130: ce 67 07                 a0 = a0 %s s1
 37133: 99 79 3f                 a2 = a0 >>a 0x3f
 37136: 82 1a 20                 a3 = u64 [sp + 0x20]
 37139: d2 a9 09                 a2 = a2 & a3
 37142: 82 1a 30                 a3 = u64 [sp + 0x30]
 37145: 82 aa 10                 a3 = u64 [a3 + 0x10]
 37148: c8 97 07                 a0 = a0 + a2
 37151: 82 19 18                 a2 = u64 [sp + 0x18]
 37154: ca 97 07                 a0 = a0 * a2
 37157: 82 19 28                 a2 = u64 [sp + 0x28]
 37160: c8 97 07                 a0 = a0 + a2
 37163: c9 7a 0a                 a3 = a3 - a0
 37166: 14 09 00 00 00 00 00 00 00 80 a2 = 0x8000000000000000
 37176: d3 9a 0b                 a4 = a3 ^ a2
 37179: e1 5b 0b                 a4 = a4 | ~s0
 37182: 51 0b 43                 jump @2548 if a4 == 0
      :                          @2546
 37185: ce 58 08                 a1 = a1 %s s0
 37188: ce 5a 0a                 a3 = a3 %s s0
 37191: 99 ab 3f                 a4 = a3 >>a 0x3f
 37194: 82 1c 08                 a5 = u64 [sp + 0x8]
 37197: d2 cb 0b                 a4 = a4 & a5
 37200: c8 ba 0a                 a3 = a3 + a4
 37203: ca 8a 08                 a1 = a3 * a1
 37206: d3 89 09                 a2 = a2 ^ a1
 37209: e1 59 09                 a2 = a2 | ~s0
 37212: 51 09 25                 jump @2548 if a2 == 0
      :                          @2547
 37215: ce 58 08                 a1 = a1 %s s0
 37218: 99 89 3f                 a2 = a1 >>a 0x3f
 37221: d2 c9 09                 a2 = a2 & a5
 37224: c8 98 08                 a1 = a1 + a2
 37227: 82 19                    a2 = u64 [sp]
 37229: ca 98 08                 a1 = a1 * a2
 37232: c8 87 07                 a0 = a0 + a1
 37235: 82 10 60                 ra = u64 [sp + 0x60]
 37238: 82 15 58                 s0 = u64 [sp + 0x58]
 37241: 82 16 50                 s1 = u64 [sp + 0x50]
 37244: 95 11 68                 sp = sp + 0x68
 37247: 32 00                    ret
      :                          @2548
 37249: 00                       trap
      :                          @2549
 37250: 00                       trap
      :                          @2550
 37251: 00                       trap
      :                          @2551
 37252: 82 95                    s0 = u64 [a2]
 37254: 95 5c 65                 a5 = s0 + 0x65
 37257: ac 5c 0a 01              jump @2570 if a5 <u s0
      :                          @2552
 37261: 95 ca 01                 a3 = a5 + 0x1
 37264: 88 ab 01                 a4 = a3 <u 0x1
 37267: d8 a8 0a                 a3 = a1 <u a3
 37270: d4 ba 0a                 a3 = a3 | a4
 37273: 52 0a fa 00              jump @2570 if a3 != 0
      :                          @2553
 37277: 82 9a                    a3 = u64 [a2]
 37279: ab 5a e5                 jump @2551 if a3 != s0
      :                          @2554
 37282: 7b 9c                    u64 [a2] = a5
 37284: 33 0b                    a4 = 0
 37286: 7b 17                    u64 [sp] = a0
 37288: 33 07 c0 22 03           a0 = 0x322c0
 37293: 7b 17 10                 u64 [sp + 0x10] = a0
 37296: 95 78 00 00 01           a1 = a0 + 0x10000
 37301: c9 c8 06                 s1 = a1 - a5
 37304: 33 08 01                 a1 = 0x1
 37307: 33 09 65                 a2 = 0x65
 37310: 64 67                    a0 = s1
 37312: 50 20 ae 02 56 7a 02     ra = 686, jump @13687
      :                          @2555 [@dyn 343]
 37319: 33 0b 65                 a4 = 0x65
 37322: 64 63                    t1 = s1
 37324: 33 08                    a1 = 0
 37326: 49 11 18                 u64 [sp + 24] = 0
 37329: 33 07 08                 a0 = 0x8
 37332: 7b 17 20                 u64 [sp + 0x20] = a0
 37335: 49 11 28                 u64 [sp + 40] = 0
 37338: 82 1a 10                 a3 = u64 [sp + 0x10]
 37341: 95 a9 9f ff 00           a2 = a3 + 0xff9f
 37346: c9 59 06                 s1 = a2 - s0
 37349: 33 05 02                 s0 = 0x2
 37352: 33 0c 05                 a5 = 0x5
 37355: 33 02 64                 t0 = 0x64
 37358: 7b 13 08                 u64 [sp + 0x8] = t1
 37361: 28 10                    jump @2557
      :                          @2556
 37363: 95 55 01                 s0 = s0 + 0x1
 37366: 95 c9 02                 a2 = a5 + 0x2
 37369: c8 c6 06                 s1 = s1 + a5
 37372: 64 9c                    a5 = a2
 37374: aa b5 53                 jump @2564 if s0 == a4
      :                          @2557
 37377: c8 53 09                 a2 = t1 + s0
 37380: 7c 99                    a2 = u8 [a2]
 37382: 51 09 ed                 jump @2556 if a2 == 0
      :                          @2558
 37385: 82 19 18                 a2 = u64 [sp + 0x18]
 37388: ab 98 22                 jump @2561 if a1 != a2
      :                          @2559
 37391: 95 17 18                 a0 = sp + 0x18
 37394: 7b 1c 10                 u64 [sp + 0x10] = a5
 37397: 50 20 b0 02 2b c1        ra = 688, jump @1581
      :                          @2560 [@dyn 344]
 37403: 82 1c 10                 a5 = u64 [sp + 0x10]
 37406: 33 02 64                 t0 = 0x64
 37409: 33 0b 65                 a4 = 0x65
 37412: 82 13 08                 t1 = u64 [sp + 0x8]
 37415: 82 18 28                 a1 = u64 [sp + 0x28]
 37418: 82 17 20                 a0 = u64 [sp + 0x20]
 37421: 01                       fallthrough
      :                          @2561
 37422: 97 89 03                 a2 = a1 << 0x3
 37425: c8 79 09                 a2 = a2 + a0
 37428: 7b 95                    u64 [a2] = s0
 37430: 95 88 01                 a1 = a1 + 0x1
 37433: ca 55 09                 a2 = s0 * s0
 37436: 7b 18 28                 u64 [sp + 0x28] = a1
 37439: 64 6a                    a3 = s1
 37441: ac 92 b2                 jump @2556 if t0 <u a2
      :                          @2562
 37444: 46 0a                    u8 [a3 + 0] = 0
 37446: c8 59 09                 a2 = a2 + s0
 37449: c8 5a 0a                 a3 = a3 + s0
 37452: ac b9 f8                 jump @2562 if a2 <u a4
      :                          @2563
 37455: 28 a4                    jump @2556
      :                          @2564
 37457: 82 17 28                 a0 = u64 [sp + 0x28]
 37460: 82 18 20                 a1 = u64 [sp + 0x20]
 37463: 82 19 18                 a2 = u64 [sp + 0x18]
 37466: 82 1a                    a3 = u64 [sp]
 37468: 7b a7 10                 u64 [a3 + 0x10] = a0
 37471: 7b a8 08                 u64 [a3 + 0x8] = a1
 37474: 7b a9                    u64 [a3] = a2
 37476: 33 07 c0 22 03           a0 = 0x322c0
 37481: 95 77 00 00 01           a0 = a0 + 0x10000
 37486: 01                       fallthrough
      :                          @2565
 37487: 82 78                    a1 = u64 [a0]
 37489: c9 87 09                 a2 = a0 - a1
 37492: ab 39 11                 jump @2569 if a2 != t1
      :                          @2566
 37495: 95 89 9b                 a2 = a1 + 0xffffffffffffff9b
 37498: 01                       fallthrough
      :                          @2567
 37499: 82 7a                    a3 = u64 [a0]
 37501: ab 8a f2                 jump @2565 if a3 != a1
      :                          @2568
 37504: 7b 79                    u64 [a0] = a2
 37506: 33 0b                    a4 = 0
 37508: 01                       fallthrough
      :                          @2569
 37509: 82 10 40                 ra = u64 [sp + 0x40]
 37512: 82 15 38                 s0 = u64 [sp + 0x38]
 37515: 82 16 30                 s1 = u64 [sp + 0x30]
 37518: 95 11 48                 sp = sp + 0x48
 37521: 32 00                    ret
      :                          @2570
 37523: 00                       trap
      :                          @2571
 37524: 51 07 41                 jump @2574 if a0 == 0
      :                          @2572
 37527: 95 11 f0                 sp = sp + 0xfffffffffffffff0
 37530: 7b 10 08                 u64 [sp + 0x8] = ra
 37533: 7b 15                    u64 [sp] = s0
 37535: 64 75                    s0 = a0
 37537: 98 77 01                 a0 = a0 >> 0x1
 37540: 50 20 b2 02 f0           ra = 690, jump @2571
      :                          @2573 [@dyn 345]
 37545: 64 79                    a2 = a0
 37547: 97 87 01                 a0 = a1 << 0x1
 37550: c9 97 07                 a0 = a0 - a2
 37553: ca 97 07                 a0 = a0 * a2
 37556: ca 99 09                 a2 = a2 * a2
 37559: ca 88 08                 a1 = a1 * a1
 37562: c8 98 08                 a1 = a1 + a2
 37565: 84 55 01                 s0 = s0 & 0x1
 37568: 9a 59                    a2 = -s0
 37570: d2 79 09                 a2 = a2 & a0
 37573: db 58 07                 a0 = a1 if s0 != 0
 37576: c8 98 08                 a1 = a1 + a2
 37579: 82 10 08                 ra = u64 [sp + 0x8]
 37582: 82 15                    s0 = u64 [sp]
 37584: 95 11 10                 sp = sp + 0x10
 37587: 32 00                    ret
      :                          @2574
 37589: 33 08 01                 a1 = 0x1
 37592: 32 00                    ret
      :                          @2575
 37594: 51 07 44                 jump @2581 if a0 == 0
      :                          @2576
 37597: 33 0a 01                 a3 = 0x1
 37600: 33 09 02                 a2 = 0x2
 37603: 64 78                    a1 = a0
 37605: aa a7 2b                 jump @2580 if a0 == a3
      :                          @2577
 37608: 9a 7a 01                 a3 = 0x1 - a0
 37611: 33 02 02                 t0 = 0x2
 37614: 33 0b 02                 a4 = 0x2
 37617: 33 0c 02                 a5 = 0x2
 37620: 33 08 01                 a1 = 0x1
 37623: 01                       fallthrough
      :                          @2578
 37624: ca 8c 08                 a1 = a5 * a1
 37627: cb b8 08                 a1 = a1 /u a4
 37630: 95 bb 01                 a4 = a4 + 0x1
 37633: c8 ba 09                 a2 = a3 + a4
 37636: 95 cc 04                 a5 = a5 + 0x4
 37639: ab 29 f1                 jump @2578 if a2 != t0
      :                          @2579
 37642: 95 79 01                 a2 = a0 + 0x1
 37645: 51 09 18                 jump @2582 if a2 == 0
      :                          @2580
 37648: 97 77 02                 a0 = a0 << 0x2
 37651: 95 77 fe                 a0 = a0 + 0xfffffffffffffffe
 37654: ca 78 07                 a0 = a1 * a0
 37657: cb 97 07                 a0 = a0 /u a2
 37660: 32 00                    ret
      :                          @2581
 37662: 33 07 01                 a0 = 0x1
 37665: 28 97 12 02              jump @11977
      :                          @2582
 37669: 00                       trap
      :                          @2583
 37670: d6 a7 09                 a2 = a0 mulhu a3
 37673: 98 9b 04                 a4 = a2 >> 0x4
 37676: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 37679: c8 b9 09                 a2 = a2 + a4
 37682: c8 37 07                 a0 = a0 + t1
 37685: c9 97 07                 a0 = a0 - a2
 37688: 01                       fallthrough
      :                          @2584
 37689: d6 a7 09                 a2 = a0 mulhu a3
 37692: 98 9b 04                 a4 = a2 >> 0x4
 37695: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 37698: c8 b9 09                 a2 = a2 + a4
 37701: ca 82 0b                 a4 = t0 * a1
 37704: c8 b7 07                 a0 = a0 + a4
 37707: c9 97 07                 a0 = a0 - a2
 37710: d6 a7 09                 a2 = a0 mulhu a3
 37713: 98 9b 04                 a4 = a2 >> 0x4
 37716: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 37719: c8 b9 09                 a2 = a2 + a4
 37722: c9 97 07                 a0 = a0 - a2
 37725: 95 00 01                 ra = ra + 0x1
 37728: 95 19 48                 a2 = sp + 0x48
 37731: c8 94 04                 t2 = t2 + a2
 37734: 7b 47                    u64 [t2] = a0
 37736: 51 10 08 38 02           jump @2615 if ra == 8
      :                          @2585
 37741: 97 04 03                 t2 = ra << 0x3
 37744: 51 00 27 02              jump @2614 if ra == 0
      :                          @2586
 37748: 33 07 01                 a0 = 0x1
 37751: 33 0b 09                 a4 = 0x9
 37754: 64 09                    a2 = ra
 37756: 28 0b                    jump @2588
      :                          @2587
 37758: 98 99 01                 a2 = a2 >> 0x1
 37761: ca bb 0b                 a4 = a4 * a4
 37764: 51 09 2c                 jump @2590 if a2 == 0
      :                          @2588
 37767: d6 ab 0c                 a5 = a4 mulhu a3
 37770: 98 c5 04                 s0 = a5 >> 0x4
 37773: 84 cc f0                 a5 = a5 & 0xfffffffffffffff0
 37776: c8 5c 0c                 a5 = a5 + s0
 37779: 84 95 01                 s0 = a2 & 0x1
 37782: c9 cb 0b                 a4 = a4 - a5
 37785: 51 05 e5                 jump @2587 if s0 == 0
      :                          @2589
 37788: ca b7 07                 a0 = a0 * a4
 37791: d6 a7 0c                 a5 = a0 mulhu a3
 37794: 98 c5 04                 s0 = a5 >> 0x4
 37797: 84 cc f0                 a5 = a5 & 0xfffffffffffffff0
 37800: c8 5c 0c                 a5 = a5 + s0
 37803: c9 c7 07                 a0 = a0 - a5
 37806: 28 d0                    jump @2587
      :                          @2590
 37808: 82 19 38                 a2 = u64 [sp + 0x38]
 37811: ca 97 07                 a0 = a0 * a2
 37814: 82 19 40                 a2 = u64 [sp + 0x40]
 37817: c8 97 07                 a0 = a0 + a2
 37820: 97 09 01                 a2 = ra << 0x1
 37823: 33 0c 01                 a5 = 0x1
 37826: 33 0b 09                 a4 = 0x9
 37829: 28 0b                    jump @2592
      :                          @2591
 37831: 98 99 01                 a2 = a2 >> 0x1
 37834: ca bb 0b                 a4 = a4 * a4
 37837: 51 09 2c                 jump @2594 if a2 == 0
      :                          @2592
 37840: d6 ab 05                 s0 = a4 mulhu a3
 37843: 98 56 04                 s1 = s0 >> 0x4
 37846: 84 55 f0                 s0 = s0 & 0xfffffffffffffff0
 37849: c8 65 05                 s0 = s0 + s1
 37852: 84 96 01                 s1 = a2 & 0x1
 37855: c9 5b 0b                 a4 = a4 - s0
 37858: 51 06 e5                 jump @2591 if s1 == 0
      :                          @2593
 37861: ca bc 0c                 a5 = a5 * a4
 37864: d6 ac 06                 s1 = a5 mulhu a3
 37867: 98 65 04                 s0 = s1 >> 0x4
 37870: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 37873: c8 65 05                 s0 = s0 + s1
 37876: c9 5c 0c                 a5 = a5 - s0
 37879: 28 d0                    jump @2591
      :                          @2594
 37881: d6 a7 09                 a2 = a0 mulhu a3
 37884: 98 9b 04                 a4 = a2 >> 0x4
 37887: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 37890: c8 b9 09                 a2 = a2 + a4
 37893: 82 1b 30                 a4 = u64 [sp + 0x30]
 37896: ca bc 0b                 a4 = a5 * a4
 37899: c8 b7 07                 a0 = a0 + a4
 37902: c9 97 07                 a0 = a0 - a2
 37905: 97 09 01                 a2 = ra << 0x1
 37908: c8 09 09                 a2 = a2 + ra
 37911: 33 0c 01                 a5 = 0x1
 37914: 33 0b 09                 a4 = 0x9
 37917: 28 0b                    jump @2596
      :                          @2595
 37919: 98 99 01                 a2 = a2 >> 0x1
 37922: ca bb 0b                 a4 = a4 * a4
 37925: 51 09 2c                 jump @2598 if a2 == 0
      :                          @2596
 37928: d6 ab 06                 s1 = a4 mulhu a3
 37931: 98 65 04                 s0 = s1 >> 0x4
 37934: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 37937: c8 65 05                 s0 = s0 + s1
 37940: 84 96 01                 s1 = a2 & 0x1
 37943: c9 5b 0b                 a4 = a4 - s0
 37946: 51 06 e5                 jump @2595 if s1 == 0
      :                          @2597
 37949: ca bc 0c                 a5 = a5 * a4
 37952: d6 ac 06                 s1 = a5 mulhu a3
 37955: 98 65 04                 s0 = s1 >> 0x4
 37958: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 37961: c8 65 05                 s0 = s0 + s1
 37964: c9 5c 0c                 a5 = a5 - s0
 37967: 28 d0                    jump @2595
      :                          @2598
 37969: d6 a7 09                 a2 = a0 mulhu a3
 37972: 98 9b 04                 a4 = a2 >> 0x4
 37975: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 37978: c8 b9 09                 a2 = a2 + a4
 37981: 82 1b 28                 a4 = u64 [sp + 0x28]
 37984: ca bc 0b                 a4 = a5 * a4
 37987: c8 b7 07                 a0 = a0 + a4
 37990: c9 97 07                 a0 = a0 - a2
 37993: 97 09 02                 a2 = ra << 0x2
 37996: 33 0c 01                 a5 = 0x1
 37999: 33 0b 09                 a4 = 0x9
 38002: 28 0b                    jump @2600
      :                          @2599
 38004: 98 99 01                 a2 = a2 >> 0x1
 38007: ca bb 0b                 a4 = a4 * a4
 38010: 51 09 2c                 jump @2602 if a2 == 0
      :                          @2600
 38013: d6 ab 06                 s1 = a4 mulhu a3
 38016: 98 65 04                 s0 = s1 >> 0x4
 38019: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 38022: c8 65 05                 s0 = s0 + s1
 38025: 84 96 01                 s1 = a2 & 0x1
 38028: c9 5b 0b                 a4 = a4 - s0
 38031: 51 06 e5                 jump @2599 if s1 == 0
      :                          @2601
 38034: ca bc 0c                 a5 = a5 * a4
 38037: d6 ac 06                 s1 = a5 mulhu a3
 38040: 98 65 04                 s0 = s1 >> 0x4
 38043: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 38046: c8 65 05                 s0 = s0 + s1
 38049: c9 5c 0c                 a5 = a5 - s0
 38052: 28 d0                    jump @2599
      :                          @2602
 38054: d6 a7 09                 a2 = a0 mulhu a3
 38057: 98 9b 04                 a4 = a2 >> 0x4
 38060: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 38063: c8 b9 09                 a2 = a2 + a4
 38066: 82 1b 20                 a4 = u64 [sp + 0x20]
 38069: ca bc 0b                 a4 = a5 * a4
 38072: c8 b7 07                 a0 = a0 + a4
 38075: c9 97 07                 a0 = a0 - a2
 38078: 97 09 02                 a2 = ra << 0x2
 38081: c8 09 09                 a2 = a2 + ra
 38084: 33 0c 01                 a5 = 0x1
 38087: 33 0b 09                 a4 = 0x9
 38090: 28 0b                    jump @2604
      :                          @2603
 38092: 98 99 01                 a2 = a2 >> 0x1
 38095: ca bb 0b                 a4 = a4 * a4
 38098: 51 09 2c                 jump @2606 if a2 == 0
      :                          @2604
 38101: d6 ab 06                 s1 = a4 mulhu a3
 38104: 98 65 04                 s0 = s1 >> 0x4
 38107: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 38110: c8 65 05                 s0 = s0 + s1
 38113: 84 96 01                 s1 = a2 & 0x1
 38116: c9 5b 0b                 a4 = a4 - s0
 38119: 51 06 e5                 jump @2603 if s1 == 0
      :                          @2605
 38122: ca bc 0c                 a5 = a5 * a4
 38125: d6 ac 06                 s1 = a5 mulhu a3
 38128: 98 65 04                 s0 = s1 >> 0x4
 38131: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 38134: c8 65 05                 s0 = s0 + s1
 38137: c9 5c 0c                 a5 = a5 - s0
 38140: 28 d0                    jump @2603
      :                          @2606
 38142: d6 a7 09                 a2 = a0 mulhu a3
 38145: 98 9b 04                 a4 = a2 >> 0x4
 38148: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 38151: c8 b9 09                 a2 = a2 + a4
 38154: 82 1b 18                 a4 = u64 [sp + 0x18]
 38157: ca bc 0b                 a4 = a5 * a4
 38160: c8 b7 07                 a0 = a0 + a4
 38163: c9 97 07                 a0 = a0 - a2
 38166: 96 09 06                 a2 = ra * 0x6
 38169: 33 0c 01                 a5 = 0x1
 38172: 33 0b 09                 a4 = 0x9
 38175: 28 0b                    jump @2608
      :                          @2607
 38177: 98 99 01                 a2 = a2 >> 0x1
 38180: ca bb 0b                 a4 = a4 * a4
 38183: 51 09 2c                 jump @2610 if a2 == 0
      :                          @2608
 38186: d6 ab 06                 s1 = a4 mulhu a3
 38189: 98 65 04                 s0 = s1 >> 0x4
 38192: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 38195: c8 65 05                 s0 = s0 + s1
 38198: 84 96 01                 s1 = a2 & 0x1
 38201: c9 5b 0b                 a4 = a4 - s0
 38204: 51 06 e5                 jump @2607 if s1 == 0
      :                          @2609
 38207: ca bc 0c                 a5 = a5 * a4
 38210: d6 ac 06                 s1 = a5 mulhu a3
 38213: 98 65 04                 s0 = s1 >> 0x4
 38216: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 38219: c8 65 05                 s0 = s0 + s1
 38222: c9 5c 0c                 a5 = a5 - s0
 38225: 28 d0                    jump @2607
      :                          @2610
 38227: 82 19 10                 a2 = u64 [sp + 0x10]
 38230: ca 9c 03                 t1 = a5 * a2
 38233: c9 04 09                 a2 = t2 - ra
 38236: 33 02 01                 t0 = 0x1
 38239: 33 0b 09                 a4 = 0x9
 38242: 28 0c                    jump @2612
      :                          @2611
 38244: 98 99 01                 a2 = a2 >> 0x1
 38247: ca bb 0b                 a4 = a4 * a4
 38250: 51 09 bc fd              jump @2583 if a2 == 0
      :                          @2612
 38254: d6 ab 0c                 a5 = a4 mulhu a3
 38257: 98 c5 04                 s0 = a5 >> 0x4
 38260: 84 cc f0                 a5 = a5 & 0xfffffffffffffff0
 38263: c8 5c 0c                 a5 = a5 + s0
 38266: 84 95 01                 s0 = a2 & 0x1
 38269: c9 cb 0b                 a4 = a4 - a5
 38272: 51 05 e4                 jump @2611 if s0 == 0
      :                          @2613
 38275: ca b2 0c                 a5 = t0 * a4
 38278: d6 ac 06                 s1 = a5 mulhu a3
 38281: 98 65 04                 s0 = s1 >> 0x4
 38284: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 38287: c8 65 05                 s0 = s0 + s1
 38290: c9 5c 02                 t0 = a5 - s0
 38293: 28 cf                    jump @2611
      :                          @2614
 38295: 33 02 01                 t0 = 0x1
 38298: 82 17 08                 a0 = u64 [sp + 0x8]
 38301: 28 9c fd                 jump @2584
      :                          @2615
 38304: 82 17 80 00              a0 = u64 [sp + 0x80]
 38308: 82 18 78                 a1 = u64 [sp + 0x78]
 38311: 82 19 70                 a2 = u64 [sp + 0x70]
 38314: 82 1a 68                 a3 = u64 [sp + 0x68]
 38317: 82 1b                    a4 = u64 [sp]
 38319: 7b b7 38                 u64 [a4 + 0x38] = a0
 38322: 7b b8 30                 u64 [a4 + 0x30] = a1
 38325: 7b b9 28                 u64 [a4 + 0x28] = a2
 38328: 7b ba 20                 u64 [a4 + 0x20] = a3
 38331: 82 17 60                 a0 = u64 [sp + 0x60]
 38334: 82 18 58                 a1 = u64 [sp + 0x58]
 38337: 82 19 50                 a2 = u64 [sp + 0x50]
 38340: 82 1a 48                 a3 = u64 [sp + 0x48]
 38343: 7b b7 18                 u64 [a4 + 0x18] = a0
 38346: 7b b8 10                 u64 [a4 + 0x10] = a1
 38349: 7b b9 08                 u64 [a4 + 0x8] = a2
 38352: 7b ba                    u64 [a4] = a3
 38354: 82 10 98 00              ra = u64 [sp + 0x98]
 38358: 82 15 90 00              s0 = u64 [sp + 0x90]
 38362: 82 16 88 00              s1 = u64 [sp + 0x88]
 38366: 95 11 a0 00              sp = sp + 0xa0
 38370: 32 00                    ret
      :                          @2616
 38372: 51 08 9a 00              jump @2620 if a1 == 0
      :                          @2617
 38376: 33 0a ff                 a3 = 0xffffffffffffffff
 38379: 33 09 20 83 b8 ed        a2 = 0xffffffffedb88320
 38385: 01                       fallthrough
      :                          @2618
 38386: 7c 7b                    a4 = u8 [a0]
 38388: d3 ba 0a                 a3 = a3 ^ a4
 38391: 97 ab 3f                 a4 = a3 << 0x3f
 38394: 99 bb 3f                 a4 = a4 >>a 0x3f
 38397: 8b aa 01                 i32 a3 = a3 >> 0x1
 38400: d2 9b 0b                 a4 = a4 & a2
 38403: d3 ba 0a                 a3 = a3 ^ a4
 38406: 97 ab 3f                 a4 = a3 << 0x3f
 38409: 99 bb 3f                 a4 = a4 >>a 0x3f
 38412: 8b aa 01                 i32 a3 = a3 >> 0x1
 38415: d2 9b 0b                 a4 = a4 & a2
 38418: d3 ba 0a                 a3 = a3 ^ a4
 38421: 97 ab 3f                 a4 = a3 << 0x3f
 38424: 99 bb 3f                 a4 = a4 >>a 0x3f
 38427: 8b aa 01                 i32 a3 = a3 >> 0x1
 38430: d2 9b 0b                 a4 = a4 & a2
 38433: d3 ba 0a                 a3 = a3 ^ a4
 38436: 97 ab 3f                 a4 = a3 << 0x3f
 38439: 99 bb 3f                 a4 = a4 >>a 0x3f
 38442: 8b aa 01                 i32 a3 = a3 >> 0x1
 38445: d2 9b 0b                 a4 = a4 & a2
 38448: d3 ba 0a                 a3 = a3 ^ a4
 38451: 97 ab 3f                 a4 = a3 << 0x3f
 38454: 99 bb 3f                 a4 = a4 >>a 0x3f
 38457: 8b aa 01                 i32 a3 = a3 >> 0x1
 38460: d2 9b 0b                 a4 = a4 & a2
 38463: d3 ba 0a                 a3 = a3 ^ a4
 38466: 97 ab 3f                 a4 = a3 << 0x3f
 38469: 99 bb 3f                 a4 = a4 >>a 0x3f
 38472: 8b aa 01                 i32 a3 = a3 >> 0x1
 38475: d2 9b 0b                 a4 = a4 & a2
 38478: d3 ba 0a                 a3 = a3 ^ a4
 38481: 97 ab 3f                 a4 = a3 << 0x3f
 38484: 99 bb 3f                 a4 = a4 >>a 0x3f
 38487: 8b aa 01                 i32 a3 = a3 >> 0x1
 38490: d2 9b 0b                 a4 = a4 & a2
 38493: d3 ba 0a                 a3 = a3 ^ a4
 38496: 97 ab 3f                 a4 = a3 << 0x3f
 38499: 99 bb 3f                 a4 = a4 >>a 0x3f
 38502: 8b aa 01                 i32 a3 = a3 >> 0x1
 38505: d2 9b 0b                 a4 = a4 & a2
 38508: d3 ba 0a                 a3 = a3 ^ a4
 38511: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 38514: 95 77 01                 a0 = a0 + 0x1
 38517: 52 08 7d ff              jump @2618 if a1 != 0
      :                          @2619
 38521: 85 a7 ff                 a0 = a3 ^ 0xffffffffffffffff
 38524: 32 00                    ret
      :                          @2620
 38526: 33 07                    a0 = 0
 38528: 28 a1 54 02              jump @13020
      :                          @2621
 38532: 84 78 01                 a1 = a0 & 0x1
 38535: 52 08 1a                 jump @2626 if a1 != 0
      :                          @2622
 38538: 64 79                    a2 = a0
 38540: 01                       fallthrough
      :                          @2623
 38541: 64 98                    a1 = a2
 38543: 84 9a 01                 a3 = a2 & 0x1
 38546: 98 99 01                 a2 = a2 >> 0x1
 38549: 51 0a f8                 jump @2623 if a3 == 0
      :                          @2624
 38552: 98 77 01                 a0 = a0 >> 0x1
 38555: 53 18 09 0c              jump @2627 if a1 <u 9
      :                          @2625
 38559: 28 1b                    jump @2630
      :                          @2626
 38561: 64 78                    a1 = a0
 38563: 55 17 09 17              jump @2630 if a0 >=u 9
      :                          @2627
 38567: 33 09 01                 a2 = 0x1
 38570: ae 89 0e                 jump @2629 if a2 >=u a1
      :                          @2628
 38573: cb 87 07                 a0 = a0 /u a1
 38576: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 38579: ca 87 07                 a0 = a0 * a1
 38582: 32 00                    ret
      :                          @2629
 38584: 32 00                    ret
      :                          @2630
 38586: 33 09 03                 a2 = 0x3
 38589: 28 0b                    jump @2632
      :                          @2631
 38591: 95 99 02                 a2 = a2 + 0x2
 38594: ca 99 0a                 a3 = a2 * a2
 38597: ac a8 e2                 jump @2627 if a1 <u a3
      :                          @2632
 38600: 51 09 1e                 jump @2637 if a2 == 0
      :                          @2633
 38603: cd 98 0a                 a3 = a1 %u a2
 38606: 52 0a f1                 jump @2631 if a3 != 0
      :                          @2634
 38609: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
 38612: 01                       fallthrough
      :                          @2635
 38613: cb 98 08                 a1 = a1 /u a2
 38616: cd 98 0b                 a4 = a1 %u a2
 38619: 51 0b fa                 jump @2635 if a4 == 0
      :                          @2636
 38622: cb 97 07                 a0 = a0 /u a2
 38625: ca a7 07                 a0 = a0 * a3
 38628: 28 db                    jump @2631
      :                          @2637
 38630: 00                       trap
      :                          @2638
 38631: 82 6a                    a3 = u64 [s1]
 38633: c8 9a 05                 s0 = a3 + a2
 38636: ac a5 66 02              jump @2680 if s0 <u a3
      :                          @2639
 38640: 95 5b 01                 a4 = s0 + 0x1
 38643: 88 bc 01                 a5 = a4 <u 0x1
 38646: d8 b2 0b                 a4 = t0 <u a4
 38649: d4 cb 0b                 a4 = a4 | a5
 38652: 52 0b 56 02              jump @2680 if a4 != 0
      :                          @2640
 38656: 82 6b                    a4 = u64 [s1]
 38658: ab ab e5                 jump @2638 if a4 != a3
      :                          @2641
 38661: 7b 65                    u64 [s1] = s0
 38663: 33 0c                    a5 = 0
 38665: 7b 18 18                 u64 [sp + 0x18] = a1
 38668: 7b 17                    u64 [sp] = a0
 38670: 33 06 c0 22 03           s1 = 0x322c0
 38675: 95 68 00 00 01           a1 = s1 + 0x10000
 38680: c9 58 07                 a0 = a1 - s0
 38683: 7b 17 10                 u64 [sp + 0x10] = a0
 38686: 33 08                    a1 = 0
 38688: 64 95                    s0 = a2
 38690: 50 20 b4 02 f4 74 02     ra = 692, jump @13687
      :                          @2642 [@dyn 346]
 38697: 33 03 00 00 01           t1 = 0x10000
 38702: 64 62                    t0 = s1
 38704: 49 11 40                 u64 [sp + 64] = 0
 38707: 49 11 48 08              u64 [sp + 72] = 0x8
 38711: 49 11 50                 u64 [sp + 80] = 0
 38714: 7b 15 08                 u64 [sp + 0x8] = s0
 38717: 97 59 03                 a2 = s0 << 0x3
 38720: c8 36 07                 a0 = s1 + t1
 38723: 01                       fallthrough
      :                          @2643
 38724: 82 78                    a1 = u64 [a0]
 38726: c8 98 0a                 a3 = a1 + a2
 38729: ac 8a 09 02              jump @2680 if a3 <u a1
      :                          @2644
 38733: 95 ab 08                 a4 = a3 + 0x8
 38736: d8 ab 0c                 a5 = a4 <u a3
 38739: d8 b3 0b                 a4 = t1 <u a4
 38742: d4 cb 0b                 a4 = a4 | a5
 38745: 52 0b f9 01              jump @2680 if a4 != 0
      :                          @2645
 38749: c9 a2 0b                 a4 = t0 - a3
 38752: c8 3b 0b                 a4 = a4 + t1
 38755: 84 bc 07                 a5 = a4 & 0x7
 38758: c8 ca 0a                 a3 = a3 + a5
 38761: 01                       fallthrough
      :                          @2646
 38762: 82 76                    s1 = u64 [a0]
 38764: ab 86 d8                 jump @2643 if s1 != a1
      :                          @2647
 38767: 7b 7a                    u64 [a0] = a3
 38769: 33 05                    s0 = 0
 38771: c9 cb 07                 a0 = a4 - a5
 38774: 7b 17 38                 u64 [sp + 0x38] = a0
 38777: 33 08                    a1 = 0
 38779: 50 20 b6 02 9b 74 02     ra = 694, jump @13687
      :                          @2648 [@dyn 347]
 38786: 82 19 08                 a2 = u64 [sp + 0x8]
 38789: 97 99 02                 a2 = a2 << 0x2
 38792: 33 07 c0 22 03           a0 = 0x322c0
 38797: 33 03 c0 22 03           t1 = 0x322c0
 38802: 33 02 00 00 01           t0 = 0x10000
 38807: c8 23 0a                 a3 = t1 + t0
 38810: 01                       fallthrough
      :                          @2649
 38811: 82 ab                    a4 = u64 [a3]
 38813: c8 9b 0c                 a5 = a4 + a2
 38816: ac bc b2 01              jump @2680 if a5 <u a4
      :                          @2650
 38820: 95 c8 04                 a1 = a5 + 0x4
 38823: d8 c8 06                 s1 = a1 <u a5
 38826: d8 82 08                 a1 = t0 <u a1
 38829: d4 68 08                 a1 = a1 | s1
 38832: 52 08 a2 01              jump @2680 if a1 != 0
      :                          @2651
 38836: c9 c3 06                 s1 = t1 - a5
 38839: c8 26 06                 s1 = s1 + t0
 38842: 84 68 03                 a1 = s1 & 0x3
 38845: c8 8c 0c                 a5 = a5 + a1
 38848: 01                       fallthrough
      :                          @2652
 38849: 82 a5                    s0 = u64 [a3]
 38851: ab b5 d8                 jump @2649 if s0 != a4
      :                          @2653
 38854: 7b ac                    u64 [a3] = a5
 38856: c9 86 06                 s1 = s1 - a1
 38859: 64 67                    a0 = s1
 38861: 33 08                    a1 = 0
 38863: 50 20 b8 02 47 74 02     ra = 696, jump @13687
      :                          @2654 [@dyn 348]
 38870: 82 17 38                 a0 = u64 [sp + 0x38]
 38873: 49 17 08 01              u64 [a0 + 8] = 0x1
 38877: 33 02 02                 t0 = 0x2
 38880: 7b 16 30                 u64 [sp + 0x30] = s1
 38883: 48 16 04 01              u32 [s1 + 4] = 0x1
 38887: 82 14 18                 t2 = u64 [sp + 0x18]
 38890: 82 10 10                 ra = u64 [sp + 0x10]
 38893: ae 24 60                 jump @2661 if t2 >=u t0
      :                          @2655
 38896: 82 17 50                 a0 = u64 [sp + 0x50]
 38899: 82 18 48                 a1 = u64 [sp + 0x48]
 38902: 82 19 40                 a2 = u64 [sp + 0x40]
 38905: 82 1a                    a3 = u64 [sp]
 38907: 7b a7 10                 u64 [a3 + 0x10] = a0
 38910: 7b a8 08                 u64 [a3 + 0x8] = a1
 38913: 7b a9                    u64 [a3] = a2
 38915: 82 1c 08                 a5 = u64 [sp + 0x8]
 38918: 7b ac 18                 u64 [a3 + 0x18] = a5
 38921: 82 17 38                 a0 = u64 [sp + 0x38]
 38924: 7b a7 20                 u64 [a3 + 0x20] = a0
 38927: 7b ac 28                 u64 [a3 + 0x28] = a5
 38930: 7b ac 30                 u64 [a3 + 0x30] = a5
 38933: 82 17 30                 a0 = u64 [sp + 0x30]
 38936: 7b a7 38                 u64 [a3 + 0x38] = a0
 38939: 7b ac 40                 u64 [a3 + 0x40] = a5
 38942: 33 07 c0 22 03           a0 = 0x322c0
 38947: 95 77 00 00 01           a0 = a0 + 0x10000
 38952: 01                       fallthrough
      :                          @2656
 38953: 82 78                    a1 = u64 [a0]
 38955: c9 87 09                 a2 = a0 - a1
 38958: ab 09 11                 jump @2660 if a2 != ra
      :                          @2657
 38961: c9 c8 09                 a2 = a1 - a5
 38964: 01                       fallthrough
      :                          @2658
 38965: 82 7a                    a3 = u64 [a0]
 38967: ab 8a f2                 jump @2656 if a3 != a1
      :                          @2659
 38970: 7b 79                    u64 [a0] = a2
 38972: 33 0b                    a4 = 0
 38974: 01                       fallthrough
      :                          @2660
 38975: 82 10 68                 ra = u64 [sp + 0x68]
 38978: 82 15 60                 s0 = u64 [sp + 0x60]
 38981: 82 16 58                 s1 = u64 [sp + 0x58]
 38984: 95 11 70                 sp = sp + 0x70
 38987: 32 00                    ret
      :                          @2661
 38989: 33 08                    a1 = 0
 38991: 33 09 08                 a2 = 0x8
 38994: 28 34                    jump @2664
      :                          @2662
 38996: 82 37                    a0 = u64 [t1]
 38998: 97 5a 03                 a3 = s0 << 0x3
 39001: 82 19 38                 a2 = u64 [sp + 0x38]
 39004: c8 9a 0a                 a3 = a3 + a2
 39007: ca 67 07                 a0 = a0 * s1
 39010: 7b a7                    u64 [a3] = a0
 39012: 97 59 02                 a2 = s0 << 0x2
 39015: 82 17 30                 a0 = u64 [sp + 0x30]
 39018: c8 79 09                 a2 = a2 + a0
 39021: 48 09                    u32 [a2 + 0] = 0
 39023: 01                       fallthrough
      :                          @2663
 39024: d8 42 07                 a0 = t0 <u t2
 39027: c8 72 02                 t0 = t0 + a0
 39030: d8 24 09                 a2 = t2 <u t0
 39033: 85 99 01                 a2 = a2 ^ 0x1
 39036: d2 97 07                 a0 = a0 & a2
 39039: 82 19 20                 a2 = u64 [sp + 0x20]
 39042: 51 07 6e ff              jump @2655 if a0 == 0
      :                          @2664
 39046: ac 24 cb 00              jump @2679 if t2 <u t0
      :                          @2665
 39050: c8 20 07                 a0 = ra + t0
 39053: 7c 77                    a0 = u8 [a0]
 39055: 7b 12 28                 u64 [sp + 0x28] = t0
 39058: 51 07 0b                 jump @2668 if a0 == 0
      :                          @2666
 39061: 7b 19 20                 u64 [sp + 0x20] = a2
 39064: 52 08 55                 jump @2672 if a1 != 0
      :                          @2667
 39067: 28 d5                    jump @2663
      :                          @2668
 39069: 82 17 40                 a0 = u64 [sp + 0x40]
 39072: ab 78 1c                 jump @2671 if a1 != a0
      :                          @2669
 39075: 95 17 40                 a0 = sp + 0x40
 39078: 50 20 ba 02 9a ba        ra = 698, jump @1581
      :                          @2670 [@dyn 349]
 39084: 82 12 28                 t0 = u64 [sp + 0x28]
 39087: 82 10 10                 ra = u64 [sp + 0x10]
 39090: 82 14 18                 t2 = u64 [sp + 0x18]
 39093: 82 18 50                 a1 = u64 [sp + 0x50]
 39096: 82 19 48                 a2 = u64 [sp + 0x48]
 39099: 01                       fallthrough
      :                          @2671
 39100: 97 87 03                 a0 = a1 << 0x3
 39103: c8 97 07                 a0 = a0 + a2
 39106: 7b 72                    u64 [a0] = t0
 39108: 95 88 01                 a1 = a1 + 0x1
 39111: 7b 18 50                 u64 [sp + 0x50] = a1
 39114: 95 27 ff                 a0 = t0 + 0xffffffffffffffff
 39117: 97 29 03                 a2 = t0 << 0x3
 39120: 82 1a 38                 a3 = u64 [sp + 0x38]
 39123: c8 a9 09                 a2 = a2 + a3
 39126: 7b 97                    u64 [a2] = a0
 39128: 82 17 48                 a0 = u64 [sp + 0x48]
 39131: 7b 17 20                 u64 [sp + 0x20] = a0
 39134: 97 27 02                 a0 = t0 << 0x2
 39137: 82 19 30                 a2 = u64 [sp + 0x30]
 39140: c8 97 07                 a0 = a0 + a2
 39143: 48 07 ff                 u32 [a0 + 0] = 0xffffffffffffffff
 39146: 51 08 86                 jump @2663 if a1 == 0
      :                          @2672
 39149: 97 29 03                 a2 = t0 << 0x3
 39152: 82 13 38                 t1 = u64 [sp + 0x38]
 39155: c8 93 03                 t1 = t1 + a2
 39158: 97 2a 02                 a3 = t0 << 0x2
 39161: 82 17 30                 a0 = u64 [sp + 0x30]
 39164: c8 7a 0a                 a3 = a3 + a0
 39167: 97 8b 03                 a4 = a1 << 0x3
 39170: 82 1c 20                 a5 = u64 [sp + 0x20]
 39173: 01                       fallthrough
      :                          @2673
 39174: 82 c6                    s1 = u64 [a5]
 39176: ca 26 05                 s0 = s1 * t0
 39179: ac 54 65 ff              jump @2663 if t2 <u s0
      :                          @2674
 39183: c8 50 07                 a0 = ra + s0
 39186: 46 07 01                 u8 [a0 + 0] = 0x1
 39189: 51 06 3b                 jump @2678 if s1 == 0
      :                          @2675
 39192: cd 62 07                 a0 = t0 %u s1
 39195: 51 07 39 ff              jump @2662 if a0 == 0
      :                          @2676
 39199: 82 37                    a0 = u64 [t1]
 39201: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 39204: 97 59 03                 a2 = s0 << 0x3
 39207: 82 12 38                 t0 = u64 [sp + 0x38]
 39210: c8 29 09                 a2 = a2 + t0
 39213: 82 12 28                 t0 = u64 [sp + 0x28]
 39216: ca 67 07                 a0 = a0 * s1
 39219: 7b 97                    u64 [a2] = a0
 39221: 81 a7                    a0 = i32 [a3]
 39223: 95 cc 08                 a5 = a5 + 0x8
 39226: 97 55 02                 s0 = s0 << 0x2
 39229: 82 19 30                 a2 = u64 [sp + 0x30]
 39232: c8 95 05                 s0 = s0 + a2
 39235: 8d 77                    i32 a0 = -a0
 39237: 95 bb f8                 a4 = a4 + 0xfffffffffffffff8
 39240: 7a 57                    u32 [s0] = a0
 39242: 52 0b bc                 jump @2673 if a4 != 0
      :                          @2677
 39245: 28 23 ff                 jump @2663
      :                          @2678
 39248: 00                       trap
      :                          @2679
 39249: 00                       trap
      :                          @2680
 39250: 00                       trap
      :                          @2681
 39251: 33 02 01                 t0 = 0x1
 39254: 55 17 04 16              jump @2684 if a0 >=u 4
      :                          @2682
 39258: 33 09 01                 a2 = 0x1
 39261: 01                       fallthrough
      :                          @2683
 39262: 88 7a 02                 a3 = a0 <u 0x2
 39265: 95 77 01                 a0 = a0 + 0x1
 39268: da a7 02                 t0 = a0 if a3 == 0
 39271: ca 92 07                 a0 = t0 * a2
 39274: 32 00                    ret
      :                          @2684
 39276: 33 0a 02                 a3 = 0x2
 39279: 33 09 01                 a2 = 0x1
 39282: 28 14                    jump @2686
      :                          @2685
 39284: 95 a8 fe                 a1 = a3 + 0xfffffffffffffffe
 39287: 88 88 01                 a1 = a1 <u 0x1
 39290: c9 8a 0a                 a3 = a3 - a1
 39293: 95 aa 02                 a3 = a3 + 0x2
 39296: ca aa 08                 a1 = a3 * a3
 39299: ac 87 db                 jump @2683 if a0 <u a1
      :                          @2686
 39302: 51 0a 24                 jump @2691 if a3 == 0
      :                          @2687
 39305: cd a7 0b                 a4 = a0 %u a3
 39308: 52 0b e8                 jump @2685 if a4 != 0
      :                          @2688
 39311: 33 0b 01                 a4 = 0x1
 39314: 33 0c 01                 a5 = 0x1
 39317: 01                       fallthrough
      :                          @2689
 39318: cb a7 07                 a0 = a0 /u a3
 39321: ca ac 0c                 a5 = a5 * a3
 39324: cd a7 08                 a1 = a0 %u a3
 39327: c8 cb 0b                 a4 = a4 + a5
 39330: 51 08 f4                 jump @2689 if a1 == 0
      :                          @2690
 39333: ca 9b 09                 a2 = a4 * a2
 39336: 28 cc                    jump @2685
      :                          @2691
 39338: 00                       trap
      :                          @2692
 39339: 33 09 04                 a2 = 0x4
 39342: 33 08 01                 a1 = 0x1
 39345: ae 97 0e                 jump @2694 if a0 >=u a2
      :                          @2693
 39348: 88 77 02                 a0 = a0 <u 0x2
 39351: 85 77 01                 a0 = a0 ^ 0x1
 39354: cf 78 07                 a0 = a1 << a0
 39357: 32 00                    ret
      :                          @2694
 39359: 33 09 02                 a2 = 0x2
 39362: 33 08 01                 a1 = 0x1
 39365: 28 14                    jump @2696
      :                          @2695
 39367: 95 9a fe                 a3 = a2 + 0xfffffffffffffffe
 39370: 88 aa 01                 a3 = a3 <u 0x1
 39373: c9 a9 09                 a2 = a2 - a3
 39376: 95 99 02                 a2 = a2 + 0x2
 39379: ca 99 0a                 a3 = a2 * a2
 39382: ac a7 de                 jump @2693 if a0 <u a3
      :                          @2696
 39385: 51 09 21                 jump @2701 if a2 == 0
      :                          @2697
 39388: cd 97 0a                 a3 = a0 %u a2
 39391: 52 0a e8                 jump @2695 if a3 != 0
      :                          @2698
 39394: 33 0a ff                 a3 = 0xffffffffffffffff
 39397: 01                       fallthrough
      :                          @2699
 39398: cb 97 07                 a0 = a0 /u a2
 39401: cd 97 0b                 a4 = a0 %u a2
 39404: 95 aa 01                 a3 = a3 + 0x1
 39407: 51 0b f7                 jump @2699 if a4 == 0
      :                          @2700
 39410: 95 aa 02                 a3 = a3 + 0x2
 39413: ca 8a 08                 a1 = a3 * a1
 39416: 28 cf                    jump @2695
      :                          @2701
 39418: 00                       trap
      :                          @2702
 39419: 33 08 01                 a1 = 0x1
 39422: 55 17 04 13              jump @2706 if a0 >=u 4
      :                          @2703
 39426: 64 7a                    a3 = a0
 39428: 01                       fallthrough
      :                          @2704
 39429: 88 a9 02                 a2 = a3 <u 0x2
 39432: 9a 87                    a0 = -a1
 39434: db 98 07                 a0 = a1 if a2 != 0
 39437: 32 00                    ret
      :                          @2705
 39439: 32 00                    ret
      :                          @2706
 39441: 33 09 02                 a2 = 0x2
 39444: 33 08 01                 a1 = 0x1
 39447: 28 17                    jump @2709
      :                          @2707
 39449: 64 7a                    a3 = a0
 39451: 01                       fallthrough
      :                          @2708
 39452: 95 9b fe                 a4 = a2 + 0xfffffffffffffffe
 39455: 88 bb 01                 a4 = a4 <u 0x1
 39458: c9 b9 09                 a2 = a2 - a4
 39461: 95 99 02                 a2 = a2 + 0x2
 39464: ca 99 0b                 a4 = a2 * a2
 39467: ac ba da                 jump @2704 if a3 <u a4
      :                          @2709
 39470: 51 09 18                 jump @2713 if a2 == 0
      :                          @2710
 39473: cb 97 0a                 a3 = a0 /u a2
 39476: ca 9a 0b                 a4 = a3 * a2
 39479: ab b7 e2                 jump @2707 if a0 != a4
      :                          @2711
 39482: cd 9a 07                 a0 = a3 %u a2
 39485: 51 07 d2                 jump @2705 if a0 == 0
      :                          @2712
 39488: 9a 88                    a1 = -a1
 39490: 64 a7                    a0 = a3
 39492: 28 d8                    jump @2708
      :                          @2713
 39494: 00                       trap
      :                          @2714
 39495: 82 9a                    a3 = u64 [a2]
 39497: c8 6a 05                 s0 = a3 + s1
 39500: ac a5 fb 01              jump @2759 if s0 <u a3
      :                          @2715
 39504: 95 5b 01                 a4 = s0 + 0x1
 39507: 88 bc 01                 a5 = a4 <u 0x1
 39510: d8 b2 0b                 a4 = t0 <u a4
 39513: d4 cb 0b                 a4 = a4 | a5
 39516: 52 0b eb 01              jump @2759 if a4 != 0
      :                          @2716
 39520: 82 9b                    a4 = u64 [a2]
 39522: ab ab e5                 jump @2714 if a4 != a3
      :                          @2717
 39525: 7b 95                    u64 [a2] = s0
 39527: 33 0c                    a5 = 0
 39529: 7b 18 10                 u64 [sp + 0x10] = a1
 39532: 7b 17                    u64 [sp] = a0
 39534: 33 07 c0 22 03           a0 = 0x322c0
 39539: 7b 17 20                 u64 [sp + 0x20] = a0
 39542: 95 78 00 00 01           a1 = a0 + 0x10000
 39547: c9 58 07                 a0 = a1 - s0
 39550: 7b 17 18                 u64 [sp + 0x18] = a0
 39553: 33 08                    a1 = 0
 39555: 64 69                    a2 = s1
 39557: 50 20 bc 02 91 71 02     ra = 700, jump @13687
      :                          @2718 [@dyn 350]
 39564: 33 03 00 00 01           t1 = 0x10000
 39569: 82 12 20                 t0 = u64 [sp + 0x20]
 39572: 49 11 28                 u64 [sp + 40] = 0
 39575: 49 11 30 08              u64 [sp + 48] = 0x8
 39579: 49 11 38                 u64 [sp + 56] = 0
 39582: 7b 16 08                 u64 [sp + 0x8] = s1
 39585: 97 69 02                 a2 = s1 << 0x2
 39588: c8 32 07                 a0 = t0 + t1
 39591: 01                       fallthrough
      :                          @2719
 39592: 82 78                    a1 = u64 [a0]
 39594: c8 98 0a                 a3 = a1 + a2
 39597: ac 8a 9b 01              jump @2760 if a3 <u a1
      :                          @2720
 39601: 95 ab 04                 a4 = a3 + 0x4
 39604: d8 ab 0c                 a5 = a4 <u a3
 39607: d8 b3 0b                 a4 = t1 <u a4
 39610: d4 cb 0b                 a4 = a4 | a5
 39613: 52 0b 8b 01              jump @2760 if a4 != 0
      :                          @2721
 39617: c9 a2 0b                 a4 = t0 - a3
 39620: c8 3b 0b                 a4 = a4 + t1
 39623: 84 bc 03                 a5 = a4 & 0x3
 39626: c8 ca 0a                 a3 = a3 + a5
 39629: 01                       fallthrough
      :                          @2722
 39630: 82 76                    s1 = u64 [a0]
 39632: ab 86 d8                 jump @2719 if s1 != a1
      :                          @2723
 39635: 7b 7a                    u64 [a0] = a3
 39637: c9 cb 05                 s0 = a4 - a5
 39640: 64 57                    a0 = s0
 39642: 33 08                    a1 = 0
 39644: 50 20 be 02 3a 71 02     ra = 702, jump @13687
      :                          @2724 [@dyn 351]
 39651: 64 50                    ra = s0
 39653: 33 05 02                 s0 = 0x2
 39656: 48 10 04 01              u32 [ra + 4] = 0x1
 39660: 82 14 10                 t2 = u64 [sp + 0x10]
 39663: ae 54 20                 jump @2726 if t2 >=u s0
      :                          @2725
 39666: 82 16 08                 s1 = u64 [sp + 0x8]
 39669: 82 17                    a0 = u64 [sp]
 39671: 7b 76                    u64 [a0] = s1
 39673: 7b 70 08                 u64 [a0 + 0x8] = ra
 39676: 7b 76 10                 u64 [a0 + 0x10] = s1
 39679: 82 13 18                 t1 = u64 [sp + 0x18]
 39682: 33 07 c0 22 03           a0 = 0x322c0
 39687: 95 77 00 00 01           a0 = a0 + 0x10000
 39692: 28 15 01                 jump @2752
      :                          @2726
 39695: 33 08                    a1 = 0
 39697: 49 11 20 08              u64 [sp + 32] = 0x8
 39701: 82 13 18                 t1 = u64 [sp + 0x18]
 39704: 28 1e                    jump @2729
      :                          @2727
 39706: 97 66 02                 s1 = s1 << 0x2
 39709: c8 06 06                 s1 = s1 + ra
 39712: 48 06                    u32 [s1 + 0] = 0
 39714: 01                       fallthrough
      :                          @2728
 39715: d8 45 07                 a0 = s0 <u t2
 39718: c8 75 05                 s0 = s0 + a0
 39721: d8 54 09                 a2 = t2 <u s0
 39724: 85 99 01                 a2 = a2 ^ 0x1
 39727: d2 97 07                 a0 = a0 & a2
 39730: 51 07 9a 00              jump @2744 if a0 == 0
      :                          @2729
 39734: ac 54 10 01              jump @2758 if t2 <u s0
      :                          @2730
 39738: c8 53 07                 a0 = t1 + s0
 39741: 7c 77                    a0 = u8 [a0]
 39743: 51 07 08                 jump @2733 if a0 == 0
      :                          @2731
 39746: 52 08 4a                 jump @2738 if a1 != 0
      :                          @2732
 39749: 28 de                    jump @2728
      :                          @2733
 39751: 82 17 28                 a0 = u64 [sp + 0x28]
 39754: ab 78 1e                 jump @2736 if a1 != a0
      :                          @2734
 39757: 95 17 28                 a0 = sp + 0x28
 39760: 64 06                    s1 = ra
 39762: 50 20 c0 02 ee b7        ra = 704, jump @1581
      :                          @2735 [@dyn 352]
 39768: 64 60                    ra = s1
 39770: 82 14 10                 t2 = u64 [sp + 0x10]
 39773: 82 13 18                 t1 = u64 [sp + 0x18]
 39776: 82 18 38                 a1 = u64 [sp + 0x38]
 39779: 82 19 30                 a2 = u64 [sp + 0x30]
 39782: 28 06                    jump @2737
      :                          @2736
 39784: 82 19 20                 a2 = u64 [sp + 0x20]
 39787: 01                       fallthrough
      :                          @2737
 39788: 97 87 03                 a0 = a1 << 0x3
 39791: c8 97 07                 a0 = a0 + a2
 39794: 7b 75                    u64 [a0] = s0
 39796: 95 88 01                 a1 = a1 + 0x1
 39799: 7b 18 38                 u64 [sp + 0x38] = a1
 39802: 82 17 30                 a0 = u64 [sp + 0x30]
 39805: 7b 17 20                 u64 [sp + 0x20] = a0
 39808: 97 57 02                 a0 = s0 << 0x2
 39811: c8 07 07                 a0 = a0 + ra
 39814: 48 07 ff                 u32 [a0 + 0] = 0xffffffffffffffff
 39817: 51 08 9a                 jump @2728 if a1 == 0
      :                          @2738
 39820: 97 59 02                 a2 = s0 << 0x2
 39823: c8 09 09                 a2 = a2 + ra
 39826: 97 8a 03                 a3 = a1 << 0x3
 39829: 82 1b 20                 a4 = u64 [sp + 0x20]
 39832: 01                       fallthrough
      :                          @2739
 39833: 82 b7                    a0 = u64 [a4]
 39835: ca 57 06                 s1 = a0 * s0
 39838: ac 64 85                 jump @2728 if t2 <u s1
      :                          @2740
 39841: c8 63 0c                 a5 = t1 + s1
 39844: 33 02 01                 t0 = 0x1
 39847: 78 c2                    u8 [a5] = t0
 39849: 51 07 9c 00              jump @2757 if a0 == 0
      :                          @2741
 39853: cd 75 07                 a0 = s0 %u a0
 39856: 51 07 6a ff              jump @2727 if a0 == 0
      :                          @2742
 39860: 81 97                    a0 = i32 [a2]
 39862: 95 bb 08                 a4 = a4 + 0x8
 39865: 97 66 02                 s1 = s1 << 0x2
 39868: c8 06 06                 s1 = s1 + ra
 39871: 8d 77                    i32 a0 = -a0
 39873: 95 aa f8                 a3 = a3 + 0xfffffffffffffff8
 39876: 7a 67                    u32 [s1] = a0
 39878: 52 0a d3                 jump @2739 if a3 != 0
      :                          @2743
 39881: 28 5a ff                 jump @2728
      :                          @2744
 39884: 82 18 28                 a1 = u64 [sp + 0x28]
 39887: 82 16 08                 s1 = u64 [sp + 0x8]
 39890: 82 17                    a0 = u64 [sp]
 39892: 7b 76                    u64 [a0] = s1
 39894: 7b 70 08                 u64 [a0 + 0x8] = ra
 39897: 7b 76 10                 u64 [a0 + 0x10] = s1
 39900: 82 15 20                 s0 = u64 [sp + 0x20]
 39903: 51 08 37                 jump @2751 if a1 == 0
      :                          @2745
 39906: 56 28 00 20 34           jump @2751 if a1 >u 8192
      :                          @2746
 39911: 97 88 03                 a1 = a1 << 0x3
 39914: 33 09 c0 22 03           a2 = 0x322c0
 39919: 95 99 00 00 01           a2 = a2 + 0x10000
 39924: 01                       fallthrough
      :                          @2747
 39925: 82 97                    a0 = u64 [a2]
 39927: c9 79 0a                 a3 = a2 - a0
 39930: ab 5a 1c                 jump @2751 if a3 != s0
      :                          @2748
 39933: c9 87 0a                 a3 = a0 - a1
 39936: 01                       fallthrough
      :                          @2749
 39937: 82 9b                    a4 = u64 [a2]
 39939: ab 7b f2                 jump @2747 if a4 != a0
      :                          @2750
 39942: 7b 9a                    u64 [a2] = a3
 39944: 33 0c                    a5 = 0
 39946: 33 07 c0 22 03           a0 = 0x322c0
 39951: 95 77 00 00 01           a0 = a0 + 0x10000
 39956: 28 0d                    jump @2752
      :                          @2751
 39958: 33 07 c0 22 03           a0 = 0x322c0
 39963: 95 77 00 00 01           a0 = a0 + 0x10000
 39968: 01                       fallthrough
      :                          @2752
 39969: 82 78                    a1 = u64 [a0]
 39971: c9 87 09                 a2 = a0 - a1
 39974: ab 39 11                 jump @2756 if a2 != t1
      :                          @2753
 39977: c9 68 09                 a2 = a1 - s1
 39980: 01                       fallthrough
      :                          @2754
 39981: 82 7a                    a3 = u64 [a0]
 39983: ab 8a f2                 jump @2752 if a3 != a1
      :                          @2755
 39986: 7b 79                    u64 [a0] = a2
 39988: 33 0b                    a4 = 0
 39990: 01                       fallthrough
      :                          @2756
 39991: 82 10 50                 ra = u64 [sp + 0x50]
 39994: 82 15 48                 s0 = u64 [sp + 0x48]
 39997: 82 16 40                 s1 = u64 [sp + 0x40]
 40000: 95 11 58                 sp = sp + 0x58
 40003: 32 00                    ret
      :                          @2757
 40005: 00                       trap
      :                          @2758
 40006: 00                       trap
      :                          @2759
 40007: 00                       trap
      :                          @2760
 40008: 00                       trap
      :                          @2761
 40009: c8 98 08                 a1 = a1 + a2
 40012: 01                       fallthrough
      :                          @2762
 40013: 95 99 01                 a2 = a2 + 0x1
 40016: ca 99 0a                 a3 = a2 * a2
 40019: ac a7 1a                 jump @2767 if a0 <u a3
      :                          @2763
 40022: 51 09 1b                 jump @2768 if a2 == 0
      :                          @2764
 40025: cb 97 0a                 a3 = a0 /u a2
 40028: ca 9a 0b                 a4 = a3 * a2
 40031: ab 7b ee                 jump @2762 if a4 != a0
      :                          @2765
 40034: aa a9 e7                 jump @2761 if a2 == a3
      :                          @2766
 40037: c8 98 08                 a1 = a1 + a2
 40040: c8 a8 08                 a1 = a1 + a3
 40043: 28 e2                    jump @2762
      :                          @2767
 40045: 64 87                    a0 = a1
 40047: 32 00                    ret
      :                          @2768
 40049: 00                       trap
      :                          @2769
 40050: 33 08                    a1 = 0
 40052: 33 09 02                 a2 = 0x2
 40055: ae 97 07                 jump @2771 if a0 >=u a2
      :                          @2770
 40058: 64 87                    a0 = a1
 40060: 32 00                    ret
      :                          @2771
 40062: 33 02 09                 t0 = 0x9
 40065: 33 0b 02                 a4 = 0x2
 40068: 28 18                    jump @2774
      :                          @2772
 40070: 95 88 01                 a1 = a1 + 0x1
 40073: 01                       fallthrough
      :                          @2773
 40074: d8 7b 0a                 a3 = a4 <u a0
 40077: c8 ab 0b                 a4 = a4 + a3
 40080: 85 aa 01                 a3 = a3 ^ 0x1
 40083: d8 b7 0c                 a5 = a0 <u a4
 40086: d4 ca 0a                 a3 = a3 | a5
 40089: 52 0a e1                 jump @2770 if a3 != 0
      :                          @2774
 40092: ac 9b ee                 jump @2773 if a4 <u a2
      :                          @2775
 40095: 84 bc 01                 a5 = a4 & 0x1
 40098: 52 0c 08                 jump @2778 if a5 != 0
      :                          @2776
 40101: aa 9b e1                 jump @2772 if a4 == a2
      :                          @2777
 40104: 28 e2                    jump @2773
      :                          @2778
 40106: ac 2b dc                 jump @2772 if a4 <u t0
      :                          @2779
 40109: 33 0c 03                 a5 = 0x3
 40112: 01                       fallthrough
      :                          @2780
 40113: 51 0c 14                 jump @2784 if a5 == 0
      :                          @2781
 40116: cd cb 0a                 a3 = a4 %u a5
 40119: 51 0a d3                 jump @2773 if a3 == 0
      :                          @2782
 40122: 95 cc 02                 a5 = a5 + 0x2
 40125: ca cc 0a                 a3 = a5 * a5
 40128: ae ab f1                 jump @2780 if a4 >=u a3
      :                          @2783
 40131: 28 c3                    jump @2772
      :                          @2784
 40133: 00                       trap
      :                          @2785
 40134: 14 09 00 00 00 00 00 00 00 80 a2 = 0x8000000000000000
 40144: d3 79 09                 a2 = a2 ^ a0
 40147: e1 89 09                 a2 = a2 | ~a1
 40150: 51 09 57                 jump @2792 if a2 == 0
      :                          @2786
 40153: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
 40156: 33 0b 03                 a4 = 0x3
 40159: 8e 9a                    a3 = a2 >u 0
 40161: ae b8 16                 jump @2788 if a1 >=u a4
      :                          @2787
 40164: 95 a8 ff                 a1 = a3 + 0xffffffffffffffff
 40167: d3 a9 09                 a2 = a2 ^ a3
 40170: 8e 97                    a0 = a2 >u 0
 40172: 95 79 ff                 a2 = a0 + 0xffffffffffffffff
 40175: 33 07 01                 a0 = 0x1
 40178: db 89 07                 a0 = a2 if a1 != 0
 40181: 32 00                    ret
      :                          @2788
 40183: 98 9b 3f                 a4 = a2 >> 0x3f
 40186: c8 9b 0b                 a4 = a4 + a2
 40189: 99 bb 01                 a4 = a4 >>a 0x1
 40192: ce 87 02                 t0 = a0 %s a1
 40195: 9a 8c                    a5 = -a1
 40197: e3 c8 0c                 a5 = maxs(a1, a5)
 40200: 99 27 3f                 a0 = t0 >>a 0x3f
 40203: d2 c7 07                 a0 = a0 & a5
 40206: c8 27 07                 a0 = a0 + t0
 40209: 28 0b                    jump @2790
      :                          @2789
 40211: 98 bb 01                 a4 = a4 >> 0x1
 40214: ca 77 07                 a0 = a0 * a0
 40217: 51 0b cb                 jump @2787 if a4 == 0
      :                          @2790
 40220: 84 bc 01                 a5 = a4 & 0x1
 40223: cd 87 07                 a0 = a0 %u a1
 40226: 51 0c f1                 jump @2789 if a5 == 0
      :                          @2791
 40229: ca a7 0a                 a3 = a0 * a3
 40232: cd 8a 0a                 a3 = a3 %u a1
 40235: 28 e8                    jump @2789
      :                          @2792
 40237: 00                       trap
      :                          @2793
 40238: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 40241: 7b 10 18                 u64 [sp + 0x18] = ra
 40244: 7b 15 10                 u64 [sp + 0x10] = s0
 40247: 7b 16 08                 u64 [sp + 0x8] = s1
 40250: 33 0a 01                 a3 = 0x1
 40253: 51 07 0e                 jump @2796 if a0 == 0
      :                          @2794
 40256: 33 09 02                 a2 = 0x2
 40259: ab 98 0d                 jump @2797 if a1 != a2
      :                          @2795
 40262: 64 74                    t2 = a0
 40264: 28 73 01                 jump @2842
      :                          @2796
 40267: 33 04                    t2 = 0
 40269: 28 6e 01                 jump @2842
      :                          @2797
 40272: 95 84 ff                 t2 = a1 + 0xffffffffffffffff
 40275: 8e 42                    t0 = t2 >u 0
 40277: 98 43 01                 t1 = t2 >> 0x1
 40280: 64 29                    a2 = t0
 40282: 55 18 03 59              jump @2810 if a1 >=u 3
      :                          @2798
 40286: 33 0a 01                 a3 = 0x1
 40289: ab a9 57 01              jump @2841 if a2 != a3
      :                          @2799
 40293: 33 0c                    a5 = 0
 40295: 84 49 01                 a2 = t2 & 0x1
 40298: 52 09 6b                 jump @2814 if a2 != 0
      :                          @2800
 40301: 64 49                    a2 = t2
 40303: 01                       fallthrough
      :                          @2801
 40304: 98 90 01                 ra = a2 >> 0x1
 40307: 84 9a 02                 a3 = a2 & 0x2
 40310: 83 cc 01                 i32 a5 = a5 + 0x1
 40313: 64 09                    a2 = ra
 40315: 51 0a f5                 jump @2801 if a3 == 0
      :                          @2802
 40318: 55 18 03 5d              jump @2815 if a1 >=u 3
      :                          @2803
 40322: 33 09 02                 a2 = 0x2
 40325: ab 24 13                 jump @2806 if t2 != t0
      :                          @2804
 40328: 64 23                    t1 = t0
 40330: 64 2b                    a4 = t0
 40332: 64 24                    t2 = t0
 40334: 51 00 c2 00              jump @2829 if ra == 0
      :                          @2805
 40338: 64 0a                    a3 = ra
 40340: 64 2b                    a4 = t0
 40342: 28 0c                    jump @2808
      :                          @2806
 40344: 28                       jump @2806
      :                          @2807
 40345: 98 aa 01                 a3 = a3 >> 0x1
 40348: ca 99 09                 a2 = a2 * a2
 40351: 51 0a 69                 jump @2821 if a3 == 0
      :                          @2808
 40354: 84 a6 01                 s1 = a3 & 0x1
 40357: cd 89 09                 a2 = a2 %u a1
 40360: 51 06 f1                 jump @2807 if s1 == 0
      :                          @2809
 40363: ca b9 0b                 a4 = a2 * a4
 40366: cd 8b 0b                 a4 = a4 %u a1
 40369: 28 e8                    jump @2807
      :                          @2810
 40371: 64 7b                    a4 = a0
 40373: 64 3a                    a3 = t1
 40375: 64 29                    a2 = t0
 40377: 28 0b                    jump @2812
      :                          @2811
 40379: 98 aa 01                 a3 = a3 >> 0x1
 40382: ca bb 0b                 a4 = a4 * a4
 40385: 51 0a 9d                 jump @2798 if a3 == 0
      :                          @2812
 40388: 84 ac 01                 a5 = a3 & 0x1
 40391: cd 8b 0b                 a4 = a4 %u a1
 40394: 51 0c f1                 jump @2811 if a5 == 0
      :                          @2813
 40397: ca 9b 09                 a2 = a4 * a2
 40400: cd 89 09                 a2 = a2 %u a1
 40403: 28 e8                    jump @2811
      :                          @2814
 40405: 64 40                    ra = t2
 40407: 53 18 03 ab              jump @2803 if a1 <u 3
      :                          @2815
 40411: 33 0a 02                 a3 = 0x2
 40414: 28 08                    jump @2817
      :                          @2816
 40416: 95 9a 01                 a3 = a2 + 0x1
 40419: aa 4b a5                 jump @2804 if a4 == t2
      :                          @2817
 40422: 64 a9                    a2 = a3
 40424: 64 35                    s0 = t1
 40426: 64 2b                    a4 = t0
 40428: 28 0b                    jump @2819
      :                          @2818
 40430: 98 55 01                 s0 = s0 >> 0x1
 40433: ca aa 0a                 a3 = a3 * a3
 40436: 51 05 ec                 jump @2816 if s0 == 0
      :                          @2819
 40439: 84 56 01                 s1 = s0 & 0x1
 40442: cd 8a 0a                 a3 = a3 %u a1
 40445: 51 06 f1                 jump @2818 if s1 == 0
      :                          @2820
 40448: ca ba 0b                 a4 = a3 * a4
 40451: cd 8b 0b                 a4 = a4 %u a1
 40454: 28 e8                    jump @2818
      :                          @2821
 40456: 64 7a                    a3 = a0
 40458: 64 09                    a2 = ra
 40460: 64 23                    t1 = t0
 40462: 28 0b                    jump @2823
      :                          @2822
 40464: 98 99 01                 a2 = a2 >> 0x1
 40467: ca aa 0a                 a3 = a3 * a3
 40470: 51 09 14                 jump @2825 if a2 == 0
      :                          @2823
 40473: 84 96 01                 s1 = a2 & 0x1
 40476: cd 8a 0a                 a3 = a3 %u a1
 40479: 51 06 f1                 jump @2822 if s1 == 0
      :                          @2824
 40482: ca 3a 06                 s1 = a3 * t1
 40485: cd 86 03                 t1 = s1 %u a1
 40488: 28 e8                    jump @2822
      :                          @2825
 40490: 95 06 01                 s1 = ra + 0x1
 40493: 33 09 03                 a2 = 0x3
 40496: 64 24                    t2 = t0
 40498: 28 0b                    jump @2827
      :                          @2826
 40500: 98 a6 01                 s1 = a3 >> 0x1
 40503: ca 77 07                 a0 = a0 * a0
 40506: ae a9 16                 jump @2829 if a2 >=u a3
      :                          @2827
 40509: 64 6a                    a3 = s1
 40511: 84 65 02                 s0 = s1 & 0x2
 40514: cd 87 07                 a0 = a0 %u a1
 40517: 51 05 ef                 jump @2826 if s0 == 0
      :                          @2828
 40520: ca 47 06                 s1 = a0 * t2
 40523: cd 86 04                 t2 = s1 %u a1
 40526: 28 e6                    jump @2826
      :                          @2829
 40528: 33 0a 01                 a3 = 0x1
 40531: aa a3 68                 jump @2842 if t1 == a3
      :                          @2830
 40534: 33 07 01                 a0 = 0x1
 40537: 33 09                    a2 = 0
 40539: 64 3a                    a3 = t1
 40541: 28 07                    jump @2832
      :                          @2831
 40543: 33 09                    a2 = 0
 40545: 64 3a                    a3 = t1
 40547: 01                       fallthrough
      :                          @2832
 40548: aa 7a 11                 jump @2835 if a3 == a0
      :                          @2833
 40551: ca aa 0a                 a3 = a3 * a3
 40554: 83 99 01                 i32 a2 = a2 + 0x1
 40557: cd 8a 0a                 a3 = a3 %u a1
 40560: ab 9c f4                 jump @2832 if a5 != a2
      :                          @2834
 40563: 28 45                    jump @2841
      :                          @2835
 40565: 85 9a ff                 a3 = a2 ^ 0xffffffffffffffff
 40568: c8 ca 0a                 a3 = a3 + a5
 40571: cf a7 0c                 a5 = a0 << a3
 40574: 64 2a                    a3 = t0
 40576: 28 0b                    jump @2837
      :                          @2836
 40578: 98 cc 01                 a5 = a5 >> 0x1
 40581: ca bb 0b                 a4 = a4 * a4
 40584: 51 0c 14                 jump @2839 if a5 == 0
      :                          @2837
 40587: 84 c5 01                 s0 = a5 & 0x1
 40590: cd 8b 0b                 a4 = a4 %u a1
 40593: 51 05 f1                 jump @2836 if s0 == 0
      :                          @2838
 40596: ca ab 0a                 a3 = a4 * a3
 40599: cd 8a 0a                 a3 = a3 %u a1
 40602: 28 e8                    jump @2836
      :                          @2839
 40604: ca aa 0b                 a4 = a3 * a3
 40607: cd 8b 0b                 a4 = a4 %u a1
 40610: ca 3b 0c                 a5 = a4 * t1
 40613: cd 8c 03                 t1 = a5 %u a1
 40616: ca 4a 0c                 a5 = a3 * t2
 40619: 33 0a 01                 a3 = 0x1
 40622: cd 8c 04                 t2 = a5 %u a1
 40625: 64 9c                    a5 = a2
 40627: ab a3 ac                 jump @2831 if t1 != a3
      :                          @2840
 40630: 28 05                    jump @2842
      :                          @2841
 40632: 33 0a                    a3 = 0
 40634: 01                       fallthrough
      :                          @2842
 40635: 64 a7                    a0 = a3
 40637: 64 48                    a1 = t2
 40639: 82 10 18                 ra = u64 [sp + 0x18]
 40642: 82 15 10                 s0 = u64 [sp + 0x10]
 40645: 82 16 08                 s1 = u64 [sp + 0x8]
 40648: 95 11 20                 sp = sp + 0x20
 40651: 32 00                    ret
      :                          @2843
 40653: 51 07 eb 00              jump @2861 if a0 == 0
      :                          @2844
 40657: 95 82 ff                 t0 = a1 + 0xffffffffffffffff
 40660: 98 24 01                 t2 = t0 >> 0x1
 40663: 33 03 01                 t1 = 0x1
 40666: 64 7b                    a4 = a0
 40668: 64 4a                    a3 = t2
 40670: 28 0b                    jump @2846
      :                          @2845
 40672: 98 aa 01                 a3 = a3 >> 0x1
 40675: ca 99 0b                 a4 = a2 * a2
 40678: 51 0a 14                 jump @2848 if a3 == 0
      :                          @2846
 40681: 84 ac 01                 a5 = a3 & 0x1
 40684: cd 8b 09                 a2 = a4 %u a1
 40687: 51 0c f1                 jump @2845 if a5 == 0
      :                          @2847
 40690: ca 39 0b                 a4 = a2 * t1
 40693: cd 8b 03                 t1 = a4 %u a1
 40696: 28 e8                    jump @2845
      :                          @2848
 40698: 33 0a 01                 a3 = 0x1
 40701: ab a3 c4 00              jump @2862 if t1 != a3
      :                          @2849
 40705: 95 11 f0                 sp = sp + 0xfffffffffffffff0
 40708: 7b 15 08                 u64 [sp + 0x8] = s0
 40711: 7b 16                    u64 [sp] = s1
 40713: cd 87 07                 a0 = a0 %u a1
 40716: 01                       fallthrough
      :                          @2850
 40717: ca aa 09                 a2 = a3 * a3
 40720: c8 89 09                 a2 = a2 + a1
 40723: c9 79 09                 a2 = a2 - a0
 40726: cd 89 03                 t1 = a2 %u a1
 40729: 33 0c 01                 a5 = 0x1
 40732: 64 39                    a2 = t1
 40734: 64 4b                    a4 = t2
 40736: 28 0b                    jump @2852
      :                          @2851
 40738: 98 bb 01                 a4 = a4 >> 0x1
 40741: ca 99 09                 a2 = a2 * a2
 40744: 51 0b 14                 jump @2854 if a4 == 0
      :                          @2852
 40747: 84 b5 01                 s0 = a4 & 0x1
 40750: cd 89 09                 a2 = a2 %u a1
 40753: 51 05 f1                 jump @2851 if s0 == 0
      :                          @2853
 40756: ca c9 0c                 a5 = a2 * a5
 40759: cd 8c 0c                 a5 = a5 %u a1
 40762: 28 e8                    jump @2851
      :                          @2854
 40764: aa 2c 0c                 jump @2857 if a5 == t0
      :                          @2855
 40767: 95 aa 01                 a3 = a3 + 0x1
 40770: ab 8a cb                 jump @2850 if a3 != a1
      :                          @2856
 40773: 33 0a                    a3 = 0
 40775: 01                       fallthrough
      :                          @2857
 40776: 33 0c                    a5 = 0
 40778: 95 87 01                 a0 = a1 + 0x1
 40781: 33 0b 01                 a4 = 0x1
 40784: 33 02 04                 t0 = 0x4
 40787: 33 04 01                 t2 = 0x1
 40790: 28 2e                    jump @2859
      :                          @2858
 40792: 98 97 01                 a0 = a2 >> 0x1
 40795: ca aa 05                 s0 = a3 * a3
 40798: cd 85 05                 s0 = s0 %u a1
 40801: ca bb 06                 s1 = a4 * a4
 40804: cd 86 06                 s1 = s1 %u a1
 40807: ca 36 06                 s1 = s1 * t1
 40810: cd 86 06                 s1 = s1 %u a1
 40813: c8 65 05                 s0 = s0 + s1
 40816: ca ba 0a                 a3 = a3 * a4
 40819: cd 85 05                 s0 = s0 %u a1
 40822: cd 8a 0a                 a3 = a3 %u a1
 40825: 97 aa 01                 a3 = a3 << 0x1
 40828: cd 8a 0b                 a4 = a3 %u a1
 40831: 64 5a                    a3 = s0
 40833: ac 29 46                 jump @2863 if a2 <u t0
      :                          @2859
 40836: 64 79                    a2 = a0
 40838: 84 77 02                 a0 = a0 & 0x2
 40841: 51 07 cf                 jump @2858 if a0 == 0
      :                          @2860
 40844: ca 4a 07                 a0 = a3 * t2
 40847: cd 87 07                 a0 = a0 %u a1
 40850: ca bc 05                 s0 = a5 * a4
 40853: cd 85 05                 s0 = s0 %u a1
 40856: ca 35 05                 s0 = s0 * t1
 40859: cd 85 05                 s0 = s0 %u a1
 40862: c8 57 07                 a0 = a0 + s0
 40865: ca b4 05                 s0 = t2 * a4
 40868: cd 87 04                 t2 = a0 %u a1
 40871: cd 85 07                 a0 = s0 %u a1
 40874: ca ca 0c                 a5 = a3 * a5
 40877: cd 8c 0c                 a5 = a5 %u a1
 40880: c8 c7 07                 a0 = a0 + a5
 40883: cd 87 0c                 a5 = a0 %u a1
 40886: 28 a2                    jump @2858
      :                          @2861
 40888: 33 07 01                 a0 = 0x1
 40891: 33 08                    a1 = 0
 40893: 28 61 22 02              jump @12275
      :                          @2862
 40897: 33 07                    a0 = 0
 40899: 64 48                    a1 = t2
 40901: 32 00                    ret
      :                          @2863
 40903: 33 07 01                 a0 = 0x1
 40906: 82 15 08                 s0 = u64 [sp + 0x8]
 40909: 82 16                    s1 = u64 [sp]
 40911: 95 11 10                 sp = sp + 0x10
 40914: 64 48                    a1 = t2
 40916: 32 00                    ret
      :                          @2864
 40918: 51 17 02 2d              jump @2869 if a0 == 2
      :                          @2865
 40922: 84 78 3f                 a1 = a0 & 0x3f
 40925: 51 08 2d                 jump @2870 if a1 == 0
      :                          @2866
 40928: 9b 78 ff                 a1 = 0xffffffffffffffff << a0
 40931: 85 88 ff                 a1 = a1 ^ 0xffffffffffffffff
 40934: 95 77 fe                 a0 = a0 + 0xfffffffffffffffe
 40937: 33 09 04                 a2 = 0x4
 40940: 01                       fallthrough
      :                          @2867
 40941: ca 99 09                 a2 = a2 * a2
 40944: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
 40947: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 40950: cd 89 09                 a2 = a2 %u a1
 40953: 52 07 f4                 jump @2867 if a0 != 0
      :                          @2868
 40956: 88 98 01                 a1 = a2 <u 0x1
 40959: 64 87                    a0 = a1
 40961: 32 00                    ret
      :                          @2869
 40963: 33 07 01                 a0 = 0x1
 40966: 28 93 b5 01              jump @10997
      :                          @2870
 40970: 00                       trap
      :                          @2871
 40971: 51 17 01 15              jump @2874 if a0 == 1
      :                          @2872
 40975: 52 07 20                 jump @2875 if a0 != 0
      :                          @2873
 40978: 33 07 02                 a0 = 0x2
 40981: cd 97 03                 t1 = a0 %u a2
 40984: 33 07                    a0 = 0
 40986: 64 38                    a1 = t1
 40988: 28 b3 b6 01              jump @11010
      :                          @2874
 40992: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 40995: 8e 93                    t1 = a2 >u 0
 40997: 64 3b                    a4 = t1
 40999: 64 b7                    a0 = a4
 41001: 64 38                    a1 = t1
 41003: 28 a4 b6 01              jump @11010
      :                          @2875
 41007: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 41010: 7b 10 18                 u64 [sp + 0x18] = ra
 41013: 7b 15 10                 u64 [sp + 0x10] = s0
 41016: 7b 16 08                 u64 [sp + 0x8] = s1
 41019: 33 04                    t2 = 0
 41021: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
 41024: 8e a3                    t1 = a3 >u 0
 41026: 33 0c 02                 a5 = 0x2
 41029: cd 9c 05                 s0 = a5 %u a2
 41032: 9a 9a                    a3 = -a2
 41034: e3 a9 02                 t0 = maxs(a2, a3)
 41037: 64 3a                    a3 = t1
 41039: 01                       fallthrough
      :                          @2876
 41040: ca 85 0b                 a4 = s0 * a1
 41043: d8 7c 05                 s0 = a5 <u a0
 41046: 85 50 01                 ra = s0 ^ 0x1
 41049: c8 5c 0c                 a5 = a5 + s0
 41052: ca 84 05                 s0 = t2 * a1
 41055: c9 5a 05                 s0 = a3 - s0
 41058: c9 b3 06                 s1 = t1 - a4
 41061: ce 95 05                 s0 = s0 %s a2
 41064: 99 5b 3f                 a4 = s0 >>a 0x3f
 41067: d2 2b 0b                 a4 = a4 & t0
 41070: c8 5b 0b                 a4 = a4 + s0
 41073: ce 96 04                 t2 = s1 %s a2
 41076: d8 c7 05                 s0 = a0 <u a5
 41079: d4 50 00                 ra = ra | s0
 41082: 99 46 3f                 s1 = t2 >>a 0x3f
 41085: d2 26 06                 s1 = s1 & t0
 41088: 64 35                    s0 = t1
 41090: c8 46 03                 t1 = s1 + t2
 41093: 64 a4                    t2 = a3
 41095: 64 ba                    a3 = a4
 41097: 51 00 c7                 jump @2876 if ra == 0
      :                          @2877
 41100: 82 10 18                 ra = u64 [sp + 0x18]
 41103: 82 15 10                 s0 = u64 [sp + 0x10]
 41106: 82 16 08                 s1 = u64 [sp + 0x8]
 41109: 95 11 20                 sp = sp + 0x20
 41112: 64 b7                    a0 = a4
 41114: 64 38                    a1 = t1
 41116: 32 00                    ret
      :                          @2878
 41118: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 41121: 7b 10 18                 u64 [sp + 0x18] = ra
 41124: 7b 15 10                 u64 [sp + 0x10] = s0
 41127: 7b 16 08                 u64 [sp + 0x8] = s1
 41130: 95 73 ff                 t1 = a0 + 0xffffffffffffffff
 41133: 9a 78                    a1 = -a0
 41135: e3 87 02                 t0 = maxs(a0, a1)
 41138: 33 0b 01                 a4 = 0x1
 41141: 33 0a 05                 a3 = 0x5
 41144: 33 09 04                 a2 = 0x4
 41147: 01                       fallthrough
      :                          @2879
 41148: ce 7a 05                 s0 = a3 %s a0
 41151: 99 58 3f                 a1 = s0 >>a 0x3f
 41154: d2 28 08                 a1 = a1 & t0
 41157: c8 85 05                 s0 = s0 + a1
 41160: 64 36                    s1 = t1
 41162: 33 0c 01                 a5 = 0x1
 41165: 28 0b                    jump @2881
      :                          @2880
 41167: 98 86 01                 s1 = a1 >> 0x1
 41170: ca 55 05                 s0 = s0 * s0
 41173: ac 98 16                 jump @2883 if a1 <u a2
      :                          @2881
 41176: 64 68                    a1 = s1
 41178: 84 66 02                 s1 = s1 & 0x2
 41181: cd 75 05                 s0 = s0 %u a0
 41184: 51 06 ef                 jump @2880 if s1 == 0
      :                          @2882
 41187: ca c5 0c                 a5 = s0 * a5
 41190: cd 7c 0c                 a5 = a5 %u a0
 41193: 28 e6                    jump @2880
      :                          @2883
 41195: 95 c8 ff                 a1 = a5 + 0xffffffffffffffff
 41198: 88 88 01                 a1 = a1 <u 0x1
 41201: d3 3c 0c                 a5 = a5 ^ t1
 41204: 8e cc                    a5 = a5 >u 0
 41206: d4 c8 08                 a1 = a1 | a5
 41209: 51 08 0f                 jump @2885 if a1 == 0
      :                          @2884
 41212: 97 b8 01                 a1 = a4 << 0x1
 41215: 9a aa                    a3 = -a3
 41217: c9 8a 0a                 a3 = a3 - a1
 41220: 9a bb                    a4 = -a4
 41222: 28 b6                    jump @2879
      :                          @2885
 41224: 95 74 01                 t2 = a0 + 0x1
 41227: 33 0b                    a4 = 0
 41229: 84 48 01                 a1 = t2 & 0x1
 41232: 52 08 14                 jump @2888 if a1 != 0
      :                          @2886
 41235: 64 48                    a1 = t2
 41237: 01                       fallthrough
      :                          @2887
 41238: 98 84 01                 t2 = a1 >> 0x1
 41241: 84 89 02                 a2 = a1 & 0x2
 41244: 83 bb 01                 i32 a4 = a4 + 0x1
 41247: 64 48                    a1 = t2
 41249: 51 09 f5                 jump @2887 if a2 == 0
      :                          @2888
 41252: 33 08 01                 a1 = 0x1
 41255: 51 04 b6 00              jump @2897 if t2 == 0
      :                          @2889
 41259: 9a a8 01                 a1 = 0x1 - a3
 41262: 99 89 3f                 a2 = a1 >>a 0x3f
 41265: 98 99 3e                 a2 = a2 >> 0x3e
 41268: c8 98 08                 a1 = a1 + a2
 41271: 33 09 01                 a2 = 0x1
 41274: 99 83 02                 t1 = a1 >>a 0x2
 41277: ab 94 0c                 jump @2891 if t2 != a2
      :                          @2890
 41280: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 41283: 8e 8c                    a5 = a1 >u 0
 41285: 64 ca                    a3 = a5
 41287: 28 4e                    jump @2893
      :                          @2891
 41289: 33 05                    s0 = 0
 41291: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 41294: 8e 8c                    a5 = a1 >u 0
 41296: 33 08 02                 a1 = 0x2
 41299: cd 78 06                 s1 = a1 %u a0
 41302: 64 c9                    a2 = a5
 41304: 01                       fallthrough
      :                          @2892
 41305: ca 36 0a                 a3 = s1 * t1
 41308: 64 c6                    s1 = a5
 41310: d8 48 0c                 a5 = a1 <u t2
 41313: 85 c0 01                 ra = a5 ^ 0x1
 41316: c8 c8 08                 a1 = a1 + a5
 41319: ca 35 0c                 a5 = s0 * t1
 41322: c9 c9 0c                 a5 = a2 - a5
 41325: c9 a6 05                 s0 = s1 - a3
 41328: ce 7c 0a                 a3 = a5 %s a0
 41331: 99 ac 3f                 a5 = a3 >>a 0x3f
 41334: d2 2c 0c                 a5 = a5 & t0
 41337: c8 ca 0a                 a3 = a3 + a5
 41340: ce 75 0c                 a5 = s0 %s a0
 41343: d8 84 05                 s0 = t2 <u a1
 41346: d4 50 00                 ra = ra | s0
 41349: 99 c5 3f                 s0 = a5 >>a 0x3f
 41352: d2 25 05                 s0 = s0 & t0
 41355: c8 5c 0c                 a5 = a5 + s0
 41358: 64 95                    s0 = a2
 41360: 64 a9                    a2 = a3
 41362: 51 00 c7                 jump @2892 if ra == 0
      :                          @2893
 41365: 33 08 01                 a1 = 0x1
 41368: 51 0a 45                 jump @2897 if a3 == 0
      :                          @2894
 41371: e3 8b 0b                 a4 = maxs(a4, a1)
 41374: ce 73 08                 a1 = t1 %s a0
 41377: 99 89 3f                 a2 = a1 >>a 0x3f
 41380: d2 29 09                 a2 = a2 & t0
 41383: c8 98 08                 a1 = a1 + a2
 41386: cd 78 09                 a2 = a1 %u a0
 41389: 97 99 01                 a2 = a2 << 0x1
 41392: 01                       fallthrough
      :                          @2895
 41393: 83 bb ff                 i32 a4 = a4 + 0xffffffffffffffff
 41396: 8e b8                    a1 = a4 >u 0
 41398: 51 0b 27                 jump @2897 if a4 == 0
      :                          @2896
 41401: ca ca 0a                 a3 = a3 * a5
 41404: ce 7a 06                 s1 = a3 %s a0
 41407: 99 6a 3f                 a3 = s1 >>a 0x3f
 41410: d2 2a 0a                 a3 = a3 & t0
 41413: c8 6a 0a                 a3 = a3 + s1
 41416: ca cc 0c                 a5 = a5 * a5
 41419: c9 9c 0c                 a5 = a5 - a2
 41422: ce 7c 06                 s1 = a5 %s a0
 41425: 99 6c 3f                 a5 = s1 >>a 0x3f
 41428: d2 2c 0c                 a5 = a5 & t0
 41431: c8 6c 0c                 a5 = a5 + s1
 41434: 52 0a d7                 jump @2895 if a3 != 0
      :                          @2897
 41437: 64 87                    a0 = a1
 41439: 82 10 18                 ra = u64 [sp + 0x18]
 41442: 82 15 10                 s0 = u64 [sp + 0x10]
 41445: 82 16 08                 s1 = u64 [sp + 0x8]
 41448: 95 11 20                 sp = sp + 0x20
 41451: 32 00                    ret
      :                          @2898
 41453: 95 11 f0                 sp = sp + 0xfffffffffffffff0
 41456: 7b 15 08                 u64 [sp + 0x8] = s0
 41459: 7b 16                    u64 [sp] = s1
 41461: 95 74 ff                 t2 = a0 + 0xffffffffffffffff
 41464: 84 48 01                 a1 = t2 & 0x1
 41467: 52 08 81 00              jump @2913 if a1 != 0
      :                          @2899
 41471: 33 09 90 05 01           a2 = 0x10590
 41476: 95 93 38                 t1 = a2 + 0x38
 41479: 33 02 01                 t0 = 0x1
 41482: 28 06                    jump @2901
      :                          @2900
 41484: aa 39 14 02              jump @2954 if a2 == t1
      :                          @2901
 41488: 82 9a                    a3 = u64 [a2]
 41490: cd 7a 08                 a1 = a3 %u a0
 41493: 51 08 0b 02              jump @2954 if a1 == 0
      :                          @2902
 41497: 33 0c                    a5 = 0
 41499: 95 99 08                 a2 = a2 + 0x8
 41502: 33 05 01                 s0 = 0x1
 41505: 64 48                    a1 = t2
 41507: 01                       fallthrough
      :                          @2903
 41508: 64 5b                    a4 = s0
 41510: 84 86 02                 s1 = a1 & 0x2
 41513: 98 88 01                 a1 = a1 >> 0x1
 41516: 83 cc 01                 i32 a5 = a5 + 0x1
 41519: 83 55 01                 i32 s0 = s0 + 0x1
 41522: 51 06 f2                 jump @2903 if s1 == 0
      :                          @2904
 41525: 33 0c 01                 a5 = 0x1
 41528: 28 0b                    jump @2906
      :                          @2905
 41530: 98 88 01                 a1 = a1 >> 0x1
 41533: ca aa 0a                 a3 = a3 * a3
 41536: 51 08 14                 jump @2908 if a1 == 0
      :                          @2906
 41539: 84 85 01                 s0 = a1 & 0x1
 41542: cd 7a 0a                 a3 = a3 %u a0
 41545: 51 05 f1                 jump @2905 if s0 == 0
      :                          @2907
 41548: ca ca 0c                 a5 = a3 * a5
 41551: cd 7c 0c                 a5 = a5 %u a0
 41554: 28 e8                    jump @2905
      :                          @2908
 41556: 95 c8 ff                 a1 = a5 + 0xffffffffffffffff
 41559: 88 88 01                 a1 = a1 <u 0x1
 41562: d3 4c 0a                 a3 = a5 ^ t2
 41565: 88 aa 01                 a3 = a3 <u 0x1
 41568: d4 a8 08                 a1 = a1 | a3
 41571: 52 08 a9                 jump @2900 if a1 != 0
      :                          @2909
 41574: e3 2b 08                 a1 = maxs(a4, t0)
 41577: 01                       fallthrough
      :                          @2910
 41578: 83 88 ff                 i32 a1 = a1 + 0xffffffffffffffff
 41581: 51 08 be 01              jump @2955 if a1 == 0
      :                          @2911
 41585: ca cc 0a                 a3 = a5 * a5
 41588: cd 7a 0c                 a5 = a3 %u a0
 41591: ab 4c f3                 jump @2910 if a5 != t2
      :                          @2912
 41594: 28 92                    jump @2900
      :                          @2913
 41596: 33 08 01                 a1 = 0x1
 41599: 33 0a 02                 a3 = 0x2
 41602: 64 49                    a2 = t2
 41604: 28 0b                    jump @2915
      :                          @2914
 41606: 98 99 01                 a2 = a2 >> 0x1
 41609: ca aa 0a                 a3 = a3 * a3
 41612: 51 09 14                 jump @2917 if a2 == 0
      :                          @2915
 41615: 84 9b 01                 a4 = a2 & 0x1
 41618: cd 7a 0a                 a3 = a3 %u a0
 41621: 51 0b f1                 jump @2914 if a4 == 0
      :                          @2916
 41624: ca 8a 08                 a1 = a3 * a1
 41627: cd 78 08                 a1 = a1 %u a0
 41630: 28 e8                    jump @2914
      :                          @2917
 41632: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
 41635: 8e 99                    a2 = a2 >u 0
 41637: d3 48 08                 a1 = a1 ^ t2
 41640: 8e 88                    a1 = a1 >u 0
 41642: d2 98 08                 a1 = a1 & a2
 41645: 52 08 7e 01              jump @2955 if a1 != 0
      :                          @2918
 41649: 33 0a 45 01              a3 = 0x145
 41653: cd 7a 08                 a1 = a3 %u a0
 41656: 51 08 68 01              jump @2954 if a1 == 0
      :                          @2919
 41660: 33 08 01                 a1 = 0x1
 41663: 64 49                    a2 = t2
 41665: 28 0b                    jump @2921
      :                          @2920
 41667: 98 99 01                 a2 = a2 >> 0x1
 41670: ca aa 0a                 a3 = a3 * a3
 41673: 51 09 14                 jump @2923 if a2 == 0
      :                          @2921
 41676: 84 9b 01                 a4 = a2 & 0x1
 41679: cd 7a 0a                 a3 = a3 %u a0
 41682: 51 0b f1                 jump @2920 if a4 == 0
      :                          @2922
 41685: ca 8a 08                 a1 = a3 * a1
 41688: cd 78 08                 a1 = a1 %u a0
 41691: 28 e8                    jump @2920
      :                          @2923
 41693: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
 41696: 8e 99                    a2 = a2 >u 0
 41698: d3 48 08                 a1 = a1 ^ t2
 41701: 8e 88                    a1 = a1 >u 0
 41703: d2 98 08                 a1 = a1 & a2
 41706: 52 08 41 01              jump @2955 if a1 != 0
      :                          @2924
 41710: 33 0a 9f 24              a3 = 0x249f
 41714: cd 7a 08                 a1 = a3 %u a0
 41717: 51 08 2b 01              jump @2954 if a1 == 0
      :                          @2925
 41721: 33 08 01                 a1 = 0x1
 41724: 64 49                    a2 = t2
 41726: 28 0b                    jump @2927
      :                          @2926
 41728: 98 99 01                 a2 = a2 >> 0x1
 41731: ca aa 0a                 a3 = a3 * a3
 41734: 51 09 14                 jump @2929 if a2 == 0
      :                          @2927
 41737: 84 9b 01                 a4 = a2 & 0x1
 41740: cd 7a 0a                 a3 = a3 %u a0
 41743: 51 0b f1                 jump @2926 if a4 == 0
      :                          @2928
 41746: ca 8a 08                 a1 = a3 * a1
 41749: cd 78 08                 a1 = a1 %u a0
 41752: 28 e8                    jump @2926
      :                          @2929
 41754: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
 41757: 8e 99                    a2 = a2 >u 0
 41759: d3 48 08                 a1 = a1 ^ t2
 41762: 8e 88                    a1 = a1 >u 0
 41764: d2 98 08                 a1 = a1 & a2
 41767: 52 08 04 01              jump @2955 if a1 != 0
      :                          @2930
 41771: 33 0a 12 6e              a3 = 0x6e12
 41775: cd 7a 08                 a1 = a3 %u a0
 41778: 51 08 ee 00              jump @2954 if a1 == 0
      :                          @2931
 41782: 33 08 01                 a1 = 0x1
 41785: 64 49                    a2 = t2
 41787: 28 0b                    jump @2933
      :                          @2932
 41789: 98 99 01                 a2 = a2 >> 0x1
 41792: ca aa 0a                 a3 = a3 * a3
 41795: 51 09 14                 jump @2935 if a2 == 0
      :                          @2933
 41798: 84 9b 01                 a4 = a2 & 0x1
 41801: cd 7a 0a                 a3 = a3 %u a0
 41804: 51 0b f1                 jump @2932 if a4 == 0
      :                          @2934
 41807: ca 8a 08                 a1 = a3 * a1
 41810: cd 78 08                 a1 = a1 %u a0
 41813: 28 e8                    jump @2932
      :                          @2935
 41815: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
 41818: 8e 99                    a2 = a2 >u 0
 41820: d3 48 08                 a1 = a1 ^ t2
 41823: 8e 88                    a1 = a1 >u 0
 41825: d2 98 08                 a1 = a1 & a2
 41828: 52 08 c7 00              jump @2955 if a1 != 0
      :                          @2936
 41832: 33 0a d7 e0 06           a3 = 0x6e0d7
 41837: cd 7a 08                 a1 = a3 %u a0
 41840: 51 08 b0 00              jump @2954 if a1 == 0
      :                          @2937
 41844: 33 08 01                 a1 = 0x1
 41847: 64 49                    a2 = t2
 41849: 28 0b                    jump @2939
      :                          @2938
 41851: 98 99 01                 a2 = a2 >> 0x1
 41854: ca aa 0a                 a3 = a3 * a3
 41857: 51 09 14                 jump @2941 if a2 == 0
      :                          @2939
 41860: 84 9b 01                 a4 = a2 & 0x1
 41863: cd 7a 0a                 a3 = a3 %u a0
 41866: 51 0b f1                 jump @2938 if a4 == 0
      :                          @2940
 41869: ca 8a 08                 a1 = a3 * a1
 41872: cd 78 08                 a1 = a1 %u a0
 41875: 28 e8                    jump @2938
      :                          @2941
 41877: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
 41880: 8e 99                    a2 = a2 >u 0
 41882: d3 48 08                 a1 = a1 ^ t2
 41885: 8e 88                    a1 = a1 >u 0
 41887: d2 98 08                 a1 = a1 & a2
 41890: 52 08 89 00              jump @2955 if a1 != 0
      :                          @2942
 41894: 33 0a 18 3d 95 00        a3 = 0x953d18
 41900: cd 7a 08                 a1 = a3 %u a0
 41903: 51 08 71                 jump @2954 if a1 == 0
      :                          @2943
 41906: 33 08 01                 a1 = 0x1
 41909: 64 49                    a2 = t2
 41911: 28 0b                    jump @2945
      :                          @2944
 41913: 98 99 01                 a2 = a2 >> 0x1
 41916: ca aa 0a                 a3 = a3 * a3
 41919: 51 09 14                 jump @2947 if a2 == 0
      :                          @2945
 41922: 84 9b 01                 a4 = a2 & 0x1
 41925: cd 7a 0a                 a3 = a3 %u a0
 41928: 51 0b f1                 jump @2944 if a4 == 0
      :                          @2946
 41931: ca 8a 08                 a1 = a3 * a1
 41934: cd 78 08                 a1 = a1 %u a0
 41937: 28 e8                    jump @2944
      :                          @2947
 41939: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
 41942: 8e 99                    a2 = a2 >u 0
 41944: d3 48 08                 a1 = a1 ^ t2
 41947: 8e 88                    a1 = a1 >u 0
 41949: d2 98 08                 a1 = a1 & a2
 41952: 52 08 4b                 jump @2955 if a1 != 0
      :                          @2948
 41955: 33 0a fe 91 01 6b        a3 = 0x6b0191fe
 41961: cd 7a 08                 a1 = a3 %u a0
 41964: 51 08 34                 jump @2954 if a1 == 0
      :                          @2949
 41967: 33 08 01                 a1 = 0x1
 41970: 64 49                    a2 = t2
 41972: 28 0b                    jump @2951
      :                          @2950
 41974: 98 99 01                 a2 = a2 >> 0x1
 41977: ca aa 0a                 a3 = a3 * a3
 41980: 51 09 14                 jump @2953 if a2 == 0
      :                          @2951
 41983: 84 9b 01                 a4 = a2 & 0x1
 41986: cd 7a 0a                 a3 = a3 %u a0
 41989: 51 0b f1                 jump @2950 if a4 == 0
      :                          @2952
 41992: ca 8a 08                 a1 = a3 * a1
 41995: cd 78 08                 a1 = a1 %u a0
 41998: 28 e8                    jump @2950
      :                          @2953
 42000: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
 42003: 8e 99                    a2 = a2 >u 0
 42005: d3 48 08                 a1 = a1 ^ t2
 42008: 8e 88                    a1 = a1 >u 0
 42010: d2 98 08                 a1 = a1 & a2
 42013: 52 08 0e                 jump @2955 if a1 != 0
      :                          @2954
 42016: 82 15 08                 s0 = u64 [sp + 0x8]
 42019: 82 16                    s1 = u64 [sp]
 42021: 95 11 10                 sp = sp + 0x10
 42024: 28 76 fc                 jump @2878
      :                          @2955
 42027: 33 07                    a0 = 0
 42029: 82 15 08                 s0 = u64 [sp + 0x8]
 42032: 82 16                    s1 = u64 [sp]
 42034: 95 11 10                 sp = sp + 0x10
 42037: 32 00                    ret
      :                          @2956
 42039: 55 17 02 08              jump @2958 if a0 >=u 2
      :                          @2957
 42043: 28 87 b5 01              jump @11043
      :                          @2958
 42047: 64 79                    a2 = a0
 42049: 01                       fallthrough
      :                          @2959
 42050: 51 09 15                 jump @2962 if a2 == 0
      :                          @2960
 42053: 64 98                    a1 = a2
 42055: cb 97 09                 a2 = a0 /u a2
 42058: c8 89 09                 a2 = a2 + a1
 42061: 98 99 01                 a2 = a2 >> 0x1
 42064: ac 89 f2                 jump @2959 if a2 <u a1
      :                          @2961
 42067: 64 87                    a0 = a1
 42069: 32 00                    ret
      :                          @2962
 42071: 00                       trap
      :                          @2963
 42072: 95 11 f0                 sp = sp + 0xfffffffffffffff0
 42075: 7b 15 08                 u64 [sp + 0x8] = s0
 42078: 7b 16                    u64 [sp] = s1
 42080: 82 78                    a1 = u64 [a0]
 42082: 82 73 08                 t1 = u64 [a0 + 0x8]
 42085: 82 72 10                 t0 = u64 [a0 + 0x10]
 42088: 82 7a 18                 a3 = u64 [a0 + 0x18]
 42091: 82 79 20                 a2 = u64 [a0 + 0x20]
 42094: 82 74 28                 t2 = u64 [a0 + 0x28]
 42097: 82 7c 30                 a5 = u64 [a0 + 0x30]
 42100: 82 7b 38                 a4 = u64 [a0 + 0x38]
 42103: 82 77 40                 a0 = u64 [a0 + 0x40]
 42106: 51 08 0c                 jump @2965 if a1 == 0
      :                          @2964
 42109: ca 89 05                 s0 = a2 * a1
 42112: ca a3 06                 s1 = t1 * a3
 42115: ab 65 39                 jump @2966 if s0 != s1
      :                          @2965
 42118: ca 97 05                 s0 = a0 * a2
 42121: ca 4b 06                 s1 = a4 * t2
 42124: c9 65 05                 s0 = s0 - s1
 42127: ca 85 08                 a1 = s0 * a1
 42130: ca a7 07                 a0 = a0 * a3
 42133: ca 4c 06                 s1 = a5 * t2
 42136: c9 76 06                 s1 = s1 - a0
 42139: ca 36 07                 a0 = s1 * t1
 42142: ca ab 0a                 a3 = a4 * a3
 42145: ca 9c 09                 a2 = a5 * a2
 42148: c9 9a 0a                 a3 = a3 - a2
 42151: ca 2a 09                 a2 = a3 * t0
 42154: c8 98 08                 a1 = a1 + a2
 42157: c8 87 07                 a0 = a0 + a1
 42160: 82 15 08                 s0 = u64 [sp + 0x8]
 42163: 82 16                    s1 = u64 [sp]
 42165: 95 11 10                 sp = sp + 0x10
 42168: 28 ed b7 01              jump @11056
      :                          @2966
 42172: ca 87 07                 a0 = a0 * a1
 42175: ca c2 09                 a2 = t0 * a5
 42178: c9 97 07                 a0 = a0 - a2
 42181: ca 8b 09                 a2 = a4 * a1
 42184: ca c3 0b                 a4 = t1 * a5
 42187: c9 9b 0b                 a4 = a4 - a2
 42190: ca 84 09                 a2 = t2 * a1
 42193: ca a2 0a                 a3 = t0 * a3
 42196: c9 a9 09                 a2 = a2 - a3
 42199: c9 65 05                 s0 = s0 - s1
 42202: ca 57 07                 a0 = a0 * s0
 42205: ca 9b 0a                 a3 = a4 * a2
 42208: c8 a7 07                 a0 = a0 + a3
 42211: 51 18 ff 13              jump @2968 if a1 == 4294967295
      :                          @2967
 42215: cc 87 07                 a0 = a0 /s a1
 42218: 82 15 08                 s0 = u64 [sp + 0x8]
 42221: 82 16                    s1 = u64 [sp]
 42223: 95 11 10                 sp = sp + 0x10
 42226: 28 b3 b7 01              jump @11056
      :                          @2968
 42230: 14 09 00 00 00 00 00 00 00 80 a2 = 0x8000000000000000
 42240: aa 97 11                 jump @2970 if a0 == a2
      :                          @2969
 42243: 9a 77                    a0 = -a0
 42245: 82 15 08                 s0 = u64 [sp + 0x8]
 42248: 82 16                    s1 = u64 [sp]
 42250: 95 11 10                 sp = sp + 0x10
 42253: 28 98 b7 01              jump @11056
      :                          @2970
 42257: 00                       trap
      :                          @2971
 42258: 82 72                    t0 = u64 [a0]
 42260: 82 79 08                 a2 = u64 [a0 + 0x8]
 42263: 82 7a 10                 a3 = u64 [a0 + 0x10]
 42266: 9a 28                    a1 = -t0
 42268: e3 82 0b                 a4 = maxs(t0, a1)
 42271: 51 09 40                 jump @2981 if a2 == 0
      :                          @2972
 42274: 9a 98                    a1 = -a2
 42276: e3 89 08                 a1 = maxs(a2, a1)
 42279: 01                       fallthrough
      :                          @2973
 42280: 64 8c                    a5 = a1
 42282: cd 8b 08                 a1 = a4 %u a1
 42285: 64 cb                    a4 = a5
 42287: 52 08 f9                 jump @2973 if a1 != 0
      :                          @2974
 42290: 82 7b 18                 a4 = u64 [a0 + 0x18]
 42293: 51 0a 32                 jump @2982 if a3 == 0
      :                          @2975
 42296: 9a a7                    a0 = -a3
 42298: e3 7a 08                 a1 = maxs(a3, a0)
 42301: 01                       fallthrough
      :                          @2976
 42302: 64 87                    a0 = a1
 42304: cd 8c 08                 a1 = a5 %u a1
 42307: 64 7c                    a5 = a0
 42309: 52 08 f9                 jump @2976 if a1 != 0
      :                          @2977
 42312: 51 0b 24                 jump @2983 if a4 == 0
      :                          @2978
 42315: 9a b8                    a1 = -a4
 42317: e3 8b 0c                 a5 = maxs(a4, a1)
 42320: 64 78                    a1 = a0
 42322: 01                       fallthrough
      :                          @2979
 42323: 64 c7                    a0 = a5
 42325: cd c8 0c                 a5 = a1 %u a5
 42328: 64 78                    a1 = a0
 42330: 52 0c f9                 jump @2979 if a5 != 0
      :                          @2980
 42333: 28 12                    jump @2984
      :                          @2981
 42335: 64 bc                    a5 = a4
 42337: 82 7b 18                 a4 = u64 [a0 + 0x18]
 42340: 52 0a d4                 jump @2975 if a3 != 0
      :                          @2982
 42343: 64 c7                    a0 = a5
 42345: 52 0b e2                 jump @2978 if a4 != 0
      :                          @2983
 42348: 51 07 16                 jump @2985 if a0 == 0
      :                          @2984
 42351: ca 2b 08                 a1 = a4 * t0
 42354: ca 9a 09                 a2 = a3 * a2
 42357: c9 98 08                 a1 = a1 - a2
 42360: 9a 89                    a2 = -a1
 42362: e3 98 08                 a1 = maxs(a1, a2)
 42365: cb 78 08                 a1 = a1 /u a0
 42368: 32 00                    ret
      :                          @2985
 42370: 00                       trap
      :                          @2986
 42371: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 42374: 7b 10 40                 u64 [sp + 0x40] = ra
 42377: 7b 15 38                 u64 [sp + 0x38] = s0
 42380: 7b 16 30                 u64 [sp + 0x30] = s1
 42383: 82 86                    s1 = u64 [a1]
 42385: 82 89 10                 a2 = u64 [a1 + 0x10]
 42388: 82 8a 08                 a3 = u64 [a1 + 0x8]
 42391: 82 8b 18                 a4 = u64 [a1 + 0x18]
 42394: d4 69 08                 a1 = a2 | s1
 42397: 64 75                    s0 = a0
 42399: 51 08 89 00              jump @2994 if a1 == 0
      :                          @2987
 42403: 7b 1a                    u64 [sp] = a3
 42405: 7b 1b 08                 u64 [sp + 0x8] = a4
 42408: 95 17 18                 a0 = sp + 0x18
 42411: 64 68                    a1 = s1
 42413: 7b 19 10                 u64 [sp + 0x10] = a2
 42416: 50 20 c2 02 2d e6        ra = 706, jump @2421
      :                          @2988 [@dyn 353]
 42422: 82 17 18                 a0 = u64 [sp + 0x18]
 42425: 51 07 8d 00              jump @2998 if a0 == 0
      :                          @2989
 42429: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 42439: d3 86 09                 a2 = s1 ^ a1
 42442: e1 79 09                 a2 = a2 | ~a0
 42445: 51 09 77                 jump @2996 if a2 == 0
      :                          @2990
 42448: 82 12 10                 t0 = u64 [sp + 0x10]
 42451: d3 82 08                 a1 = t0 ^ a1
 42454: e1 78 08                 a1 = a1 | ~a0
 42457: 51 08 6b                 jump @2996 if a1 == 0
      :                          @2991
 42460: 82 18 20                 a1 = u64 [sp + 0x20]
 42463: 82 19 28                 a2 = u64 [sp + 0x28]
 42466: 82 1c                    a5 = u64 [sp]
 42468: ca c8 08                 a1 = a1 * a5
 42471: 82 1b 08                 a4 = u64 [sp + 0x8]
 42474: ca b9 09                 a2 = a2 * a4
 42477: c8 98 08                 a1 = a1 + a2
 42480: 14 09 00 00 00 00 00 00 00 80 a2 = 0x8000000000000000
 42490: d3 98 0a                 a3 = a1 ^ a2
 42493: e1 7a 0a                 a3 = a3 | ~a0
 42496: 51 0a 45                 jump @2997 if a3 == 0
      :                          @2992
 42499: ce 78 08                 a1 = a1 %s a0
 42502: c8 78 08                 a1 = a1 + a0
 42505: d3 89 09                 a2 = a2 ^ a1
 42508: e1 79 09                 a2 = a2 | ~a0
 42511: 51 09 36                 jump @2997 if a2 == 0
      :                          @2993
 42514: cc 76 09                 a2 = s1 /s a0
 42517: cc 72 0a                 a3 = t0 /s a0
 42520: ca ca 0a                 a3 = a3 * a5
 42523: ce 78 08                 a1 = a1 %s a0
 42526: ca b9 09                 a2 = a2 * a4
 42529: c9 a9 0b                 a4 = a2 - a3
 42532: 64 8a                    a3 = a1
 42534: 28 05                    jump @2995
      :                          @2994
 42536: 33 07                    a0 = 0
 42538: 01                       fallthrough
      :                          @2995
 42539: 7b 57                    u64 [s0] = a0
 42541: 7b 5a 08                 u64 [s0 + 0x8] = a3
 42544: 7b 5b 18                 u64 [s0 + 0x18] = a4
 42547: 49 15 10                 u64 [s0 + 16] = 0
 42550: 82 10 40                 ra = u64 [sp + 0x40]
 42553: 82 15 38                 s0 = u64 [sp + 0x38]
 42556: 82 16 30                 s1 = u64 [sp + 0x30]
 42559: 95 11 48                 sp = sp + 0x48
 42562: 32 00                    ret
      :                          @2996
 42564: 00                       trap
      :                          @2997
 42565: 00                       trap
      :                          @2998
 42566: 00                       trap
      :                          @2999
 42567: 64 82                    t0 = a1
 42569: 64 93                    t1 = a2
 42571: ca 88 0c                 a5 = a1 * a1
 42574: ca 99 08                 a1 = a2 * a2
 42577: c8 8c 0c                 a5 = a5 + a1
 42580: 51 0c 39                 jump @3003 if a5 == 0
      :                          @3000
 42583: 97 c8 01                 a1 = a5 << 0x1
 42586: 51 08 45                 jump @3005 if a1 == 0
      :                          @3001
 42589: ca a2 04                 t2 = t0 * a3
 42592: ca b3 09                 a2 = t1 * a4
 42595: c8 49 09                 a2 = a2 + t2
 42598: 97 99 01                 a2 = a2 << 0x1
 42601: c8 c9 09                 a2 = a2 + a5
 42604: cc 89 09                 a2 = a2 /s a1
 42607: ca 29 08                 a1 = a2 * t0
 42610: c9 8a 08                 a1 = a3 - a1
 42613: ca 39 09                 a2 = a2 * t1
 42616: c9 9b 09                 a2 = a4 - a2
 42619: ca 88 0a                 a3 = a1 * a1
 42622: ca 99 0b                 a4 = a2 * a2
 42625: c8 ba 04                 t2 = a3 + a4
 42628: 64 3b                    a4 = t1
 42630: 64 2a                    a3 = t0
 42632: ad c4 bf                 jump @2999 if t2 <s a5
      :                          @3002
 42635: 28 07                    jump @3004
      :                          @3003
 42637: 64 b9                    a2 = a4
 42639: 64 a8                    a1 = a3
 42641: 01                       fallthrough
      :                          @3004
 42642: 7b 72                    u64 [a0] = t0
 42644: 7b 73 08                 u64 [a0 + 0x8] = t1
 42647: 7b 78 10                 u64 [a0 + 0x10] = a1
 42650: 7b 79 18                 u64 [a0 + 0x18] = a2
 42653: 32 00                    ret
      :                          @3005
 42655: 00                       trap
      :                          @3006
 42656: 95 11 e8                 sp = sp + 0xffffffffffffffe8
 42659: 7b 10 10                 u64 [sp + 0x10] = ra
 42662: 7b 15 08                 u64 [sp + 0x8] = s0
 42665: 7b 16                    u64 [sp] = s1
 42667: 51 08 34                 jump @3009 if a1 == 0
      :                          @3007
 42670: 64 85                    s0 = a1
 42672: 64 76                    s1 = a0
 42674: 33 08 01                 a1 = 0x1
 42677: 33 07                    a0 = 0
 42679: 64 59                    a2 = s0
 42681: 50 20 c4 02 cb 62 02     ra = 708, jump @13629
      :                          @3008 [@dyn 354]
 42688: ca 68 08                 a1 = a1 * s1
 42691: d6 67 07                 a0 = a0 mulhu s1
 42694: c8 78 08                 a1 = a1 + a0
 42697: d8 58 09                 a2 = a1 <u s0
 42700: 95 57 ff                 a0 = s0 + 0xffffffffffffffff
 42703: db 98 07                 a0 = a1 if a2 != 0
 42706: 82 10 10                 ra = u64 [sp + 0x10]
 42709: 82 15 08                 s0 = u64 [sp + 0x8]
 42712: 82 16                    s1 = u64 [sp]
 42714: 95 11 18                 sp = sp + 0x18
 42717: 32 00                    ret
      :                          @3009
 42719: 00                       trap
      :                          @3010
 42720: 82 ab                    a4 = u64 [a3]
 42722: 95 bc 80 00              a5 = a4 + 0x80
 42726: ac bc 98 02              jump @3060 if a5 <u a4
      :                          @3011
 42730: 95 c9 08                 a2 = a5 + 0x8
 42733: d8 c9 05                 s0 = a2 <u a5
 42736: d8 92 09                 a2 = t0 <u a2
 42739: d4 59 09                 a2 = a2 | s0
 42742: 52 09 88 02              jump @3060 if a2 != 0
      :                          @3012
 42746: c9 c3 05                 s0 = t1 - a5
 42749: c8 25 05                 s0 = s0 + t0
 42752: 84 59 07                 a2 = s0 & 0x7
 42755: c8 9c 0c                 a5 = a5 + a2
 42758: 01                       fallthrough
      :                          @3013
 42759: 82 a8                    a1 = u64 [a3]
 42761: ab b8 d7                 jump @3010 if a1 != a4
      :                          @3014
 42764: 7b ac                    u64 [a3] = a5
 42766: 01                       fallthrough
      :                          @3015
 42767: c9 95 06                 s1 = s0 - a2
 42770: 82 19 10                 a2 = u64 [sp + 0x10]
 42773: 95 98 ff                 a1 = a2 + 0xffffffffffffffff
 42776: 8e 85                    s0 = a1 >u 0
 42778: 7b 65                    u64 [s1] = s0
 42780: cd 97 07                 a0 = a0 %u a2
 42783: 7b 67 08                 u64 [s1 + 0x8] = a0
 42786: ca 77 08                 a1 = a0 * a0
 42789: cd 98 08                 a1 = a1 %u a2
 42792: 7b 68 10                 u64 [s1 + 0x10] = a1
 42795: ca 87 08                 a1 = a0 * a1
 42798: cd 98 08                 a1 = a1 %u a2
 42801: 7b 68 18                 u64 [s1 + 0x18] = a1
 42804: ca 87 08                 a1 = a0 * a1
 42807: cd 98 08                 a1 = a1 %u a2
 42810: 7b 68 20                 u64 [s1 + 0x20] = a1
 42813: ca 87 08                 a1 = a0 * a1
 42816: cd 98 08                 a1 = a1 %u a2
 42819: 7b 68 28                 u64 [s1 + 0x28] = a1
 42822: ca 87 08                 a1 = a0 * a1
 42825: cd 98 08                 a1 = a1 %u a2
 42828: 7b 68 30                 u64 [s1 + 0x30] = a1
 42831: ca 87 08                 a1 = a0 * a1
 42834: cd 98 08                 a1 = a1 %u a2
 42837: 7b 68 38                 u64 [s1 + 0x38] = a1
 42840: ca 87 08                 a1 = a0 * a1
 42843: cd 98 08                 a1 = a1 %u a2
 42846: 7b 68 40                 u64 [s1 + 0x40] = a1
 42849: ca 87 08                 a1 = a0 * a1
 42852: cd 98 08                 a1 = a1 %u a2
 42855: 7b 68 48                 u64 [s1 + 0x48] = a1
 42858: ca 87 08                 a1 = a0 * a1
 42861: cd 98 08                 a1 = a1 %u a2
 42864: 7b 68 50                 u64 [s1 + 0x50] = a1
 42867: ca 87 08                 a1 = a0 * a1
 42870: cd 98 08                 a1 = a1 %u a2
 42873: 7b 68 58                 u64 [s1 + 0x58] = a1
 42876: ca 87 08                 a1 = a0 * a1
 42879: cd 98 08                 a1 = a1 %u a2
 42882: 7b 68 60                 u64 [s1 + 0x60] = a1
 42885: ca 87 08                 a1 = a0 * a1
 42888: cd 98 08                 a1 = a1 %u a2
 42891: 7b 68 68                 u64 [s1 + 0x68] = a1
 42894: ca 87 08                 a1 = a0 * a1
 42897: cd 98 08                 a1 = a1 %u a2
 42900: 7b 68 70                 u64 [s1 + 0x70] = a1
 42903: ca 87 07                 a0 = a0 * a1
 42906: cd 97 07                 a0 = a0 %u a2
 42909: 7b 67 78                 u64 [s1 + 0x78] = a0
 42912: 49 11 38                 u64 [sp + 56] = 0
 42915: 33 00 01                 ra = 0x1
 42918: 7b 10 40                 u64 [sp + 0x40] = ra
 42921: 49 11 48                 u64 [sp + 72] = 0
 42924: 51 04 66 01              jump @3044 if t2 == 0
      :                          @3016
 42928: 7b 16 08                 u64 [sp + 0x8] = s1
 42931: 33 08                    a1 = 0
 42933: 33 07 01                 a0 = 0x1
 42936: 28 2a                    jump @3020
      :                          @3017
 42938: 95 17 38                 a0 = sp + 0x38
 42941: 64 46                    s1 = t2
 42943: 50 20 c6 02 03 ad        ra = 710, jump @1617
      :                          @3018 [@dyn 355]
 42949: 64 64                    t2 = s1
 42951: 82 16 48                 s1 = u64 [sp + 0x48]
 42954: 82 17 40                 a0 = u64 [sp + 0x40]
 42957: 01                       fallthrough
      :                          @3019
 42958: 84 48 01                 a1 = t2 & 0x1
 42961: c8 67 09                 a2 = a0 + s1
 42964: 78 98                    u8 [a2] = a1
 42966: 95 68 01                 a1 = s1 + 0x1
 42969: 98 44 01                 t2 = t2 >> 0x1
 42972: 7b 18 48                 u64 [sp + 0x48] = a1
 42975: 51 04 0d                 jump @3022 if t2 == 0
      :                          @3020
 42978: 82 19 38                 a2 = u64 [sp + 0x38]
 42981: aa 98 d5                 jump @3017 if a1 == a2
      :                          @3021
 42984: 64 86                    s1 = a1
 42986: 28 e4                    jump @3019
      :                          @3022
 42988: 82 10 40                 ra = u64 [sp + 0x40]
 42991: 98 87 01                 a0 = a1 >> 0x1
 42994: 51 07 1d                 jump @3025 if a0 == 0
      :                          @3023
 42997: c8 60 09                 a2 = ra + s1
 43000: 64 0a                    a3 = ra
 43002: 01                       fallthrough
      :                          @3024
 43003: 7c 9b                    a4 = u8 [a2]
 43005: 7c ac                    a5 = u8 [a3]
 43007: 78 ab                    u8 [a3] = a4
 43009: 78 9c                    u8 [a2] = a5
 43011: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 43014: 95 aa 01                 a3 = a3 + 0x1
 43017: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 43020: 52 07 ef                 jump @3024 if a0 != 0
      :                          @3025
 43023: 82 19 10                 a2 = u64 [sp + 0x10]
 43026: 51 08 fc 00              jump @3043 if a1 == 0
      :                          @3026
 43030: 7b 16                    u64 [sp] = s1
 43032: 33 03                    t1 = 0
 43034: 33 06 ff                 s1 = 0xffffffffffffffff
 43037: 7b 10 20                 u64 [sp + 0x20] = ra
 43040: 28 0f                    jump @3028
      :                          @3027
 43042: ca 55 07                 a0 = s0 * s0
 43045: 95 33 01                 t1 = t1 + 0x1
 43048: cd 97 05                 s0 = a0 %u a2
 43051: ae 83 e3 00              jump @3043 if t1 >=u a1
      :                          @3028
 43055: c8 30 07                 a0 = ra + t1
 43058: 7c 77                    a0 = u8 [a0]
 43060: 51 07 ee                 jump @3027 if a0 == 0
      :                          @3029
 43063: c9 38 07                 a0 = a1 - t1
 43066: 33 09 04                 a2 = 0x4
 43069: e6 97 0c                 a5 = minu(a0, a2)
 43072: 7b 18 18                 u64 [sp + 0x18] = a1
 43075: e4 38 07                 a0 = maxu(a1, t1)
 43078: 7b 13 30                 u64 [sp + 0x30] = t1
 43081: c9 37 07                 a0 = a0 - t1
 43084: 33 02 01                 t0 = 0x1
 43087: 53 1c 02 62              jump @3036 if a5 <u 2
      :                          @3030
 43091: 82 19 30                 a2 = u64 [sp + 0x30]
 43094: 82 18 18                 a1 = u64 [sp + 0x18]
 43097: e6 89 09                 a2 = minu(a2, a1)
 43100: 82 1b                    a4 = u64 [sp]
 43102: c9 9b 0b                 a4 = a4 - a2
 43105: 33 08 02                 a1 = 0x2
 43108: 33 02 01                 t0 = 0x1
 43111: 7b 1c 28                 u64 [sp + 0x28] = a5
 43114: 01                       fallthrough
      :                          @3031
 43115: 64 8a                    a3 = a1
 43117: d8 c8 04                 t2 = a1 <u a5
 43120: c8 48 08                 a1 = a1 + t2
 43123: 33 09 01                 a2 = 0x1
 43126: e4 9a 09                 a2 = maxu(a3, a2)
 43129: 9a 90                    ra = -a2
 43131: 33 03 ff                 t1 = 0xffffffffffffffff
 43134: 01                       fallthrough
      :                          @3032
 43135: aa 3b fc 00              jump @3057 if a4 == t1
      :                          @3033
 43139: 95 33 01                 t1 = t1 + 0x1
 43142: c8 30 09                 a2 = ra + t1
 43145: ab 69 f6                 jump @3032 if a2 != s1
      :                          @3034
 43148: 82 19 30                 a2 = u64 [sp + 0x30]
 43151: c8 93 03                 t1 = t1 + a2
 43154: 82 10 20                 ra = u64 [sp + 0x20]
 43157: c8 03 03                 t1 = t1 + ra
 43160: 7c 39                    a2 = u8 [t1]
 43162: 84 99 01                 a2 = a2 & 0x1
 43165: 82 1c 28                 a5 = u64 [sp + 0x28]
 43168: 51 09 11                 jump @3036 if a2 == 0
      :                          @3035
 43171: d8 8c 09                 a2 = a5 <u a1
 43174: 85 99 01                 a2 = a2 ^ 0x1
 43177: d2 94 09                 a2 = t2 & a2
 43180: 64 a2                    t0 = a3
 43182: 52 09 bd                 jump @3031 if a2 != 0
      :                          @3036
 43185: 33 09 01                 a2 = 0x1
 43188: 64 28                    a1 = t0
 43190: e4 92 0b                 a4 = maxu(t0, a2)
 43193: 33 02                    t0 = 0
 43195: 82 13 30                 t1 = u64 [sp + 0x30]
 43198: 64 39                    a2 = t1
 43200: 64 ba                    a3 = a4
 43202: 01                       fallthrough
      :                          @3037
 43203: 51 07 b9 00              jump @3058 if a0 == 0
      :                          @3038
 43207: c8 90 0c                 a5 = ra + a2
 43210: 7c cc                    a5 = u8 [a5]
 43212: 97 22 01                 t0 = t0 << 0x1
 43215: d4 c2 02                 t0 = t0 | a5
 43218: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 43221: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 43224: 95 99 01                 a2 = a2 + 0x1
 43227: 52 0a e8                 jump @3037 if a3 != 0
      :                          @3039
 43230: 82 19 10                 a2 = u64 [sp + 0x10]
 43233: 01                       fallthrough
      :                          @3040
 43234: ca 55 07                 a0 = s0 * s0
 43237: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 43240: cd 97 05                 s0 = a0 %u a2
 43243: 52 0b f7                 jump @3040 if a4 != 0
      :                          @3041
 43246: 55 12 10 8f 00           jump @3059 if t0 >=u 16
      :                          @3042
 43251: 97 22 03                 t0 = t0 << 0x3
 43254: 82 17 08                 a0 = u64 [sp + 0x8]
 43257: c8 72 02                 t0 = t0 + a0
 43260: 82 27                    a0 = u64 [t0]
 43262: ca 57 07                 a0 = a0 * s0
 43265: c8 83 03                 t1 = t1 + a1
 43268: 82 18 18                 a1 = u64 [sp + 0x18]
 43271: cd 97 05                 s0 = a0 %u a2
 43274: ac 83 25 ff              jump @3028 if t1 <u a1
      :                          @3043
 43278: 82 16 08                 s1 = u64 [sp + 0x8]
 43281: 01                       fallthrough
      :                          @3044
 43282: 82 17 38                 a0 = u64 [sp + 0x38]
 43285: 51 07 35                 jump @3051 if a0 == 0
      :                          @3045
 43288: 56 37 00 00 01 32        jump @3051 if a0 >u 65536
      :                          @3046
 43294: 33 09 c0 22 03           a2 = 0x322c0
 43299: 95 98 00 00 01           a1 = a2 + 0x10000
 43304: 01                       fallthrough
      :                          @3047
 43305: 82 89                    a2 = u64 [a1]
 43307: c9 98 0a                 a3 = a1 - a2
 43310: ab 0a 1c                 jump @3051 if a3 != ra
      :                          @3048
 43313: c9 79 0a                 a3 = a2 - a0
 43316: 01                       fallthrough
      :                          @3049
 43317: 82 8b                    a4 = u64 [a1]
 43319: ab 9b f2                 jump @3047 if a4 != a2
      :                          @3050
 43322: 7b 8a                    u64 [a1] = a3
 43324: 33 0c                    a5 = 0
 43326: 33 07 c0 22 03           a0 = 0x322c0
 43331: 95 77 00 00 01           a0 = a0 + 0x10000
 43336: 28 0d                    jump @3052
      :                          @3051
 43338: 33 07 c0 22 03           a0 = 0x322c0
 43343: 95 77 00 00 01           a0 = a0 + 0x10000
 43348: 01                       fallthrough
      :                          @3052
 43349: 82 78                    a1 = u64 [a0]
 43351: c9 87 09                 a2 = a0 - a1
 43354: ab 69 11                 jump @3056 if a2 != s1
      :                          @3053
 43357: 95 89 80                 a2 = a1 + 0xffffffffffffff80
 43360: 01                       fallthrough
      :                          @3054
 43361: 82 7a                    a3 = u64 [a0]
 43363: ab 8a f2                 jump @3052 if a3 != a1
      :                          @3055
 43366: 7b 79                    u64 [a0] = a2
 43368: 33 0b                    a4 = 0
 43370: 01                       fallthrough
      :                          @3056
 43371: 64 57                    a0 = s0
 43373: 82 10 60                 ra = u64 [sp + 0x60]
 43376: 82 15 58                 s0 = u64 [sp + 0x58]
 43379: 82 16 50                 s1 = u64 [sp + 0x50]
 43382: 95 11 68                 sp = sp + 0x68
 43385: 32 00                    ret
      :                          @3057
 43387: 00                       trap
      :                          @3058
 43388: 00                       trap
      :                          @3059
 43389: 00                       trap
      :                          @3060
 43390: 00                       trap
      :                          @3061
 43391: 33 0a 02                 a3 = 0x2
 43394: ae a8 09                 jump @3064 if a1 >=u a3
      :                          @3062
 43397: 33 07                    a0 = 0
 43399: 32 00                    ret
      :                          @3063
 43401: 32 00                    ret
      :                          @3064
 43403: 64 79                    a2 = a0
 43405: 33 0c                    a5 = 0
 43407: 95 87 ff                 a0 = a1 + 0xffffffffffffffff
 43410: 97 8a 03                 a3 = a1 << 0x3
 43413: c8 9a 0a                 a3 = a3 + a2
 43416: 95 a4 f8                 t2 = a3 + 0xfffffffffffffff8
 43419: 33 02 01                 t0 = 0x1
 43422: 01                       fallthrough
      :                          @3065
 43423: c8 c8 09                 a2 = a1 + a5
 43426: aa 29 e3                 jump @3062 if a2 == t0
      :                          @3066
 43429: 82 ab f0                 a4 = u64 [a3 + 0xfffffffffffffff0]
 43432: 82 a3 f8                 t1 = u64 [a3 + 0xfffffffffffffff8]
 43435: 95 a9 f8                 a2 = a3 + 0xfffffffffffffff8
 43438: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 43441: 64 9a                    a3 = a2
 43443: ae 3b ec                 jump @3065 if a4 >=u t1
      :                          @3067
 43446: c8 c8 03                 t1 = a1 + a5
 43449: 9a c2                    t0 = -a5
 43451: 64 4c                    a5 = t2
 43453: 01                       fallthrough
      :                          @3068
 43454: 82 ca                    a3 = u64 [a5]
 43456: ac ab 0d                 jump @3071 if a4 <u a3
      :                          @3069
 43459: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 43462: 95 cc f8                 a5 = a5 + 0xfffffffffffffff8
 43465: ac 87 f5                 jump @3068 if a0 <u a1
      :                          @3070
 43468: 00                       trap
      :                          @3071
 43469: 7b 9a f8                 u64 [a2 + 0xfffffffffffffff8] = a3
 43472: 7b cb                    u64 [a5] = a4
 43474: c9 38 08                 a1 = a1 - t1
 43477: 33 0a 02                 a3 = 0x2
 43480: 33 07 01                 a0 = 0x1
 43483: ac a8 ae                 jump @3063 if a1 <u a3
      :                          @3072
 43486: 98 28 01                 a1 = t0 >> 0x1
 43489: 01                       fallthrough
      :                          @3073
 43490: 82 4a                    a3 = u64 [t2]
 43492: 82 9b                    a4 = u64 [a2]
 43494: 7b 9a                    u64 [a2] = a3
 43496: 7b 4b                    u64 [t2] = a4
 43498: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 43501: 95 99 08                 a2 = a2 + 0x8
 43504: 95 44 f8                 t2 = t2 + 0xfffffffffffffff8
 43507: 52 08 ef                 jump @3073 if a1 != 0
      :                          @3074
 43510: 28 93                    jump @3063
      :                          @3075
 43512: c8 a8 02                 t0 = a1 + a3
 43515: 51 02 42                 jump @3081 if t0 == 0
      :                          @3076
 43518: 82 74 f8                 t2 = u64 [a0 + 0xfffffffffffffff8]
 43521: 95 7b f8                 a4 = a0 + 0xfffffffffffffff8
 43524: 95 a9 ff                 a2 = a3 + 0xffffffffffffffff
 43527: 95 a3 09                 t1 = a3 + 0x9
 43530: 64 9a                    a3 = a2
 43532: 64 b7                    a0 = a4
 43534: ae 34 ea                 jump @3075 if t2 >=u t1
      :                          @3077
 43537: c8 98 07                 a0 = a1 + a2
 43540: 95 7a 01                 a3 = a0 + 0x1
 43543: 95 4c 01                 a5 = t2 + 0x1
 43546: 7b bc                    u64 [a4] = a5
 43548: ae 8a 21                 jump @3081 if a3 >=u a1
      :                          @3078
 43551: 85 9a ff                 a3 = a2 ^ 0xffffffffffffffff
 43554: 95 bb 08                 a4 = a4 + 0x8
 43557: 95 4c 02                 a5 = t2 + 0x2
 43560: 01                       fallthrough
      :                          @3079
 43561: ae 87 18                 jump @3082 if a0 >=u a1
      :                          @3080
 43564: 7b bc                    u64 [a4] = a5
 43566: 95 cc 01                 a5 = a5 + 0x1
 43569: 95 bb 08                 a4 = a4 + 0x8
 43572: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 43575: 95 77 01                 a0 = a0 + 0x1
 43578: 52 0a ef                 jump @3079 if a3 != 0
      :                          @3081
 43581: 8e 27                    a0 = t0 >u 0
 43583: 32 00                    ret
      :                          @3082
 43585: 00                       trap
      :                          @3083
 43586: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 43589: 7b 10 30                 u64 [sp + 0x30] = ra
 43592: 7b 15 28                 u64 [sp + 0x28] = s0
 43595: 7b 16 20                 u64 [sp + 0x20] = s1
 43598: 7b 17 08                 u64 [sp + 0x8] = a0
 43601: 51 08 3e 01              jump @3112 if a1 == 0
      :                          @3084
 43605: 57 08 4e 01              jump @3117 if a1 <s 0
      :                          @3085
 43609: 85 87 ff                 a0 = a1 ^ 0xffffffffffffffff
 43612: 98 77 3f                 a0 = a0 >> 0x3f
 43615: 33 0a c0 22 03           a3 = 0x322c0
 43620: 33 09 00 00 01           a2 = 0x10000
 43625: c8 9a 0a                 a3 = a3 + a2
 43628: 01                       fallthrough
      :                          @3086
 43629: 82 a5                    s0 = u64 [a3]
 43631: c8 85 06                 s1 = s0 + a1
 43634: ac 56 30 01              jump @3116 if s1 <u s0
      :                          @3087
 43638: c8 76 0b                 a4 = s1 + a0
 43641: d8 6b 0c                 a5 = a4 <u s1
 43644: d8 b9 0b                 a4 = a2 <u a4
 43647: d4 cb 0b                 a4 = a4 | a5
 43650: 52 0b 20 01              jump @3116 if a4 != 0
      :                          @3088
 43654: 82 ab                    a4 = u64 [a3]
 43656: ab 5b e5                 jump @3086 if a4 != s0
      :                          @3089
 43659: 7b a6                    u64 [a3] = s1
 43661: 33 0c                    a5 = 0
 43663: 7b 18 18                 u64 [sp + 0x18] = a1
 43666: 33 08 c0 22 03           a1 = 0x322c0
 43671: 7b 18                    u64 [sp] = a1
 43673: 95 87 00 00 01           a0 = a1 + 0x10000
 43678: c9 67 07                 a0 = a0 - s1
 43681: 7b 17 10                 u64 [sp + 0x10] = a0
 43684: 33 08                    a1 = 0
 43686: 82 19 18                 a2 = u64 [sp + 0x18]
 43689: 50 20 c8 02 6d 61 02     ra = 712, jump @13687
      :                          @3090 [@dyn 356]
 43696: 33 07                    a0 = 0
 43698: 33 00                    ra = 0
 43700: 82 18                    a1 = u64 [sp]
 43702: 95 8a 00 00 01           a3 = a1 + 0x10000
 43707: 82 19 18                 a2 = u64 [sp + 0x18]
 43710: c9 5a 0a                 a3 = a3 - s0
 43713: 9a 98                    a1 = -a2
 43715: 7b 18                    u64 [sp] = a1
 43717: 9a 92 02                 t0 = 0x2 - a2
 43720: 33 04 01                 t2 = 0x1
 43723: 01                       fallthrough
      :                          @3091
 43724: 97 08 03                 a1 = ra << 0x3
 43727: 82 19 08                 a2 = u64 [sp + 0x8]
 43730: c8 98 08                 a1 = a1 + a2
 43733: 82 83                    t1 = u64 [a1]
 43735: 51 03 53                 jump @3101 if t1 == 0
      :                          @3092
 43738: 33 06                    s1 = 0
 43740: 82 15                    s0 = u64 [sp]
 43742: 64 38                    a1 = t1
 43744: 01                       fallthrough
      :                          @3093
 43745: 51 05 bf 00              jump @3114 if s0 == 0
      :                          @3094
 43749: c8 5a 09                 a2 = a3 + s0
 43752: 7c 99                    a2 = u8 [a2]
 43754: 88 99 01                 a2 = a2 <u 0x1
 43757: be 96 06                 i32 s1 = s1 + a2
 43760: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 43763: 95 55 01                 s0 = s0 + 0x1
 43766: 52 08 eb                 jump @3093 if a1 != 0
      :                          @3095
 43769: 85 05 ff                 s0 = ra ^ 0xffffffffffffffff
 43772: 82 18 18                 a1 = u64 [sp + 0x18]
 43775: c8 85 05                 s0 = s0 + a1
 43778: 51 05 36                 jump @3102 if s0 == 0
      :                          @3096
 43781: 64 58                    a1 = s0
 43783: aa 45 18                 jump @3099 if s0 == t2
      :                          @3097
 43786: 33 08 01                 a1 = 0x1
 43789: 33 0b 01                 a4 = 0x1
 43792: 01                       fallthrough
      :                          @3098
 43793: 95 b9 01                 a2 = a4 + 0x1
 43796: c8 92 0c                 a5 = t0 + a2
 43799: ca 8b 08                 a1 = a4 * a1
 43802: 64 9b                    a4 = a2
 43804: ab 4c f5                 jump @3098 if a5 != t2
      :                          @3099
 43807: ca 58 09                 a2 = a1 * s0
 43810: 82 18 18                 a1 = u64 [sp + 0x18]
 43813: ac 83 1c                 jump @3103 if t1 <u a1
      :                          @3100
 43816: 28 79                    jump @3115
      :                          @3101
 43818: 33 06                    s1 = 0
 43820: 85 05 ff                 s0 = ra ^ 0xffffffffffffffff
 43823: 82 18 18                 a1 = u64 [sp + 0x18]
 43826: c8 85 05                 s0 = s0 + a1
 43829: 52 05 d0                 jump @3096 if s0 != 0
      :                          @3102
 43832: 33 09 01                 a2 = 0x1
 43835: 82 18 18                 a1 = u64 [sp + 0x18]
 43838: ae 83 63                 jump @3115 if t1 >=u a1
      :                          @3103
 43841: 95 00 01                 ra = ra + 0x1
 43844: ca 69 09                 a2 = a2 * s1
 43847: c8 97 07                 a0 = a0 + a2
 43850: 82 19 10                 a2 = u64 [sp + 0x10]
 43853: c8 93 03                 t1 = t1 + a2
 43856: 78 34                    u8 [t1] = t2
 43858: 95 22 01                 t0 = t0 + 0x1
 43861: ab 80 77 ff              jump @3091 if ra != a1
      :                          @3104
 43865: 33 0a 00 00 ff           a3 = 0xffffffffffff0000
 43870: 95 89 ff ff fe           a2 = a1 + 0xfffffffffffeffff
 43875: ac a9 2f                 jump @3113 if a2 <u a3
      :                          @3105
 43878: 33 06 c0 22 03           s1 = 0x322c0
 43883: 95 66 00 00 01           s1 = s1 + 0x10000
 43888: 01                       fallthrough
      :                          @3106
 43889: 82 69                    a2 = u64 [s1]
 43891: c9 96 0a                 a3 = s1 - a2
 43894: 82 1b 10                 a4 = u64 [sp + 0x10]
 43897: ab ba 19                 jump @3113 if a3 != a4
      :                          @3107
 43900: c9 89 0a                 a3 = a2 - a1
 43903: 01                       fallthrough
      :                          @3108
 43904: 82 6b                    a4 = u64 [s1]
 43906: ab 9b ef                 jump @3106 if a4 != a2
      :                          @3109
 43909: 7b 6a                    u64 [s1] = a3
 43911: 33 0c                    a5 = 0
 43913: 01                       fallthrough
      :                          @3110
 43914: ab 9b e7                 jump @3106 if a4 != a2
      :                          @3111
 43917: 28 05                    jump @3113
      :                          @3112
 43919: 33 07                    a0 = 0
 43921: 01                       fallthrough
      :                          @3113
 43922: 82 10 30                 ra = u64 [sp + 0x30]
 43925: 82 15 28                 s0 = u64 [sp + 0x28]
 43928: 82 16 20                 s1 = u64 [sp + 0x20]
 43931: 95 11 38                 sp = sp + 0x38
 43934: 32 00                    ret
      :                          @3114
 43936: 00                       trap
      :                          @3115
 43937: 00                       trap
      :                          @3116
 43938: 00                       trap
      :                          @3117
 43939: 00                       trap
      :                          @3118
 43940: 82 ab                    a4 = u64 [a3]
 43942: 95 bc 28                 a5 = a4 + 0x28
 43945: ac bc 73 01              jump @3139 if a5 <u a4
      :                          @3119
 43949: 95 c9 08                 a2 = a5 + 0x8
 43952: d8 c9 06                 s1 = a2 <u a5
 43955: d8 92 09                 a2 = t0 <u a2
 43958: d4 69 09                 a2 = a2 | s1
 43961: 52 09 63 01              jump @3139 if a2 != 0
      :                          @3120
 43965: c9 c3 06                 s1 = t1 - a5
 43968: c8 26 06                 s1 = s1 + t0
 43971: 84 69 07                 a2 = s1 & 0x7
 43974: c8 9c 0c                 a5 = a5 + a2
 43977: 01                       fallthrough
      :                          @3121
 43978: 82 a5                    s0 = u64 [a3]
 43980: ab b5 d8                 jump @3118 if s0 != a4
      :                          @3122
 43983: 7b ac                    u64 [a3] = a5
 43985: c9 96 00                 ra = s1 - a2
 43988: 49 00                    u64 [ra + 0] = 0
 43990: 49 10 08 01              u64 [ra + 8] = 0x1
 43994: 49 10 10 02              u64 [ra + 16] = 0x2
 43998: 49 10 18 03              u64 [ra + 24] = 0x3
 44002: 49 10 20 04              u64 [ra + 32] = 0x4
 44006: 33 07 c0 22 03           a0 = 0x322c0
 44011: 33 03 c0 22 03           t1 = 0x322c0
 44016: 33 02 00 00 01           t0 = 0x10000
 44021: c8 23 0a                 a3 = t1 + t0
 44024: 01                       fallthrough
      :                          @3123
 44025: 82 ab                    a4 = u64 [a3]
 44027: 95 b6 28                 s1 = a4 + 0x28
 44030: ac b6 1e 01              jump @3139 if s1 <u a4
      :                          @3124
 44034: 95 6c 08                 a5 = s1 + 0x8
 44037: d8 6c 05                 s0 = a5 <u s1
 44040: d8 c2 0c                 a5 = t0 <u a5
 44043: d4 5c 0c                 a5 = a5 | s0
 44046: 52 0c 0e 01              jump @3139 if a5 != 0
      :                          @3125
 44050: c9 63 05                 s0 = t1 - s1
 44053: c8 25 05                 s0 = s0 + t0
 44056: 84 5c 07                 a5 = s0 & 0x7
 44059: c8 c6 06                 s1 = s1 + a5
 44062: 01                       fallthrough
      :                          @3126
 44063: 82 a9                    a2 = u64 [a3]
 44065: ab b9 d8                 jump @3123 if a2 != a4
      :                          @3127
 44068: 7b a6                    u64 [a3] = s1
 44070: 01                       fallthrough
      :                          @3128
 44071: 7b 14 08                 u64 [sp + 0x8] = t2
 44074: 14 07 ab aa aa aa aa aa aa aa a0 = 0xaaaaaaaaaaaaaaab
 44084: d6 78 07                 a0 = a1 mulhu a0
 44087: 98 77 04                 a0 = a0 >> 0x4
 44090: 55 18 78 e3 00           jump @3140 if a1 >=u 120
      :                          @3129
 44095: c9 c5 05                 s0 = s0 - a5
 44098: 96 79 e8 00              a2 = a0 * 0xe8
 44102: c8 89 06                 s1 = a2 + a1
 44105: 97 79 03                 a2 = a0 << 0x3
 44108: c8 90 07                 a0 = ra + a2
 44111: 82 78                    a1 = u64 [a0]
 44113: 7b 18                    u64 [sp] = a1
 44115: 95 78 08                 a1 = a0 + 0x8
 44118: 9a 99 20                 a2 = 0x20 - a2
 44121: 7b 10 10                 u64 [sp + 0x10] = ra
 44124: 50 20 ca 02 3f 5e 02     ra = 714, jump @13651
      :                          @3130 [@dyn 357]
 44131: 82 17                    a0 = u64 [sp]
 44133: 7b 57                    u64 [s0] = a0
 44135: 84 67 ff 00              a0 = s1 & 0xff
 44139: 96 77 ab 00              a0 = a0 * 0xab
 44143: 98 77 0a                 a0 = a0 >> 0xa
 44146: 96 78 06                 a1 = a0 * 0x6
 44149: bf 86 06                 i32 s1 = s1 - a1
 44152: 97 79 03                 a2 = a0 << 0x3
 44155: 82 17 10                 a0 = u64 [sp + 0x10]
 44158: c8 97 07                 a0 = a0 + a2
 44161: 82 78                    a1 = u64 [a0]
 44163: 7b 18                    u64 [sp] = a1
 44165: 95 78 08                 a1 = a0 + 0x8
 44168: 9a 99 18                 a2 = 0x18 - a2
 44171: 50 20 cc 02 10 5e 02     ra = 716, jump @13651
      :                          @3131 [@dyn 358]
 44178: 82 17                    a0 = u64 [sp]
 44180: 7b 57 08                 u64 [s0 + 0x8] = a0
 44183: 84 67 01                 a0 = s1 & 0x1
 44186: 7b 17                    u64 [sp] = a0
 44188: 97 66 02                 s1 = s1 << 0x2
 44191: 84 69 f8 03              a2 = s1 & 0x3f8
 44195: 82 17 10                 a0 = u64 [sp + 0x10]
 44198: c8 97 07                 a0 = a0 + a2
 44201: 82 76                    s1 = u64 [a0]
 44203: 95 78 08                 a1 = a0 + 0x8
 44206: 9a 99 10                 a2 = 0x10 - a2
 44209: 50 20 ce 02 ea 5d 02     ra = 718, jump @13651
      :                          @3132 [@dyn 359]
 44216: 7b 56 10                 u64 [s0 + 0x10] = s1
 44219: 82 19                    a2 = u64 [sp]
 44221: 97 99 03                 a2 = a2 << 0x3
 44224: 82 17 10                 a0 = u64 [sp + 0x10]
 44227: c8 97 07                 a0 = a0 + a2
 44230: 82 76                    s1 = u64 [a0]
 44232: 95 78 08                 a1 = a0 + 0x8
 44235: 85 99 08                 a2 = a2 ^ 0x8
 44238: 50 20 d0 02 cd 5d 02     ra = 720, jump @13651
      :                          @3133 [@dyn 360]
 44245: 82 1c 10                 a5 = u64 [sp + 0x10]
 44248: 7b 56 18                 u64 [s0 + 0x18] = s1
 44251: 82 c7                    a0 = u64 [a5]
 44253: 7b 57 20                 u64 [s0 + 0x20] = a0
 44256: 82 18 08                 a1 = u64 [sp + 0x8]
 44259: 49 08 05                 u64 [a1 + 0] = 0x5
 44262: 7b 85 08                 u64 [a1 + 0x8] = s0
 44265: 49 18 10 05              u64 [a1 + 16] = 0x5
 44269: 33 07 c0 22 03           a0 = 0x322c0
 44274: 95 77 00 00 01           a0 = a0 + 0x10000
 44279: 01                       fallthrough
      :                          @3134
 44280: 82 78                    a1 = u64 [a0]
 44282: c9 87 09                 a2 = a0 - a1
 44285: ab c9 11                 jump @3138 if a2 != a5
      :                          @3135
 44288: 95 89 d8                 a2 = a1 + 0xffffffffffffffd8
 44291: 01                       fallthrough
      :                          @3136
 44292: 82 7a                    a3 = u64 [a0]
 44294: ab 8a f2                 jump @3134 if a3 != a1
      :                          @3137
 44297: 7b 79                    u64 [a0] = a2
 44299: 33 0b                    a4 = 0
 44301: 01                       fallthrough
      :                          @3138
 44302: 82 10 28                 ra = u64 [sp + 0x28]
 44305: 82 15 20                 s0 = u64 [sp + 0x20]
 44308: 82 16 18                 s1 = u64 [sp + 0x18]
 44311: 95 11 30                 sp = sp + 0x30
 44314: 32 00                    ret
      :                          @3139
 44316: 00                       trap
      :                          @3140
 44317: 00                       trap
      :                          @3141
 44318: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 44321: 7b 10 18                 u64 [sp + 0x18] = ra
 44324: 7b 15 10                 u64 [sp + 0x10] = s0
 44327: 7b 16 08                 u64 [sp + 0x8] = s1
 44330: 7b 18                    u64 [sp] = a1
 44332: 33 04                    t2 = 0
 44334: 51 08 79                 jump @3154 if a1 == 0
      :                          @3142
 44337: 33 08                    a1 = 0
 44339: 33 00 0f                 ra = 0xf
 44342: 28 11                    jump @3145
      :                          @3143
 44344: c8 43 03                 t1 = t1 + t2
 44347: c9 23 04                 t2 = t1 - t0
 44350: 01                       fallthrough
      :                          @3144
 44351: 95 88 01                 a1 = a1 + 0x1
 44354: 82 19                    a2 = u64 [sp]
 44356: aa 98 63                 jump @3154 if a1 == a2
      :                          @3145
 44359: 97 89 03                 a2 = a1 << 0x3
 44362: 51 08 16                 jump @3148 if a1 == 0
      :                          @3146
 44365: c8 79 0a                 a3 = a2 + a0
 44368: 82 ac f8                 a5 = u64 [a3 + 0xfffffffffffffff8]
 44371: 95 c2 01                 t0 = a5 + 0x1
 44374: c8 79 09                 a2 = a2 + a0
 44377: 82 93                    t1 = u64 [a2]
 44379: ae 32 e4                 jump @3144 if t0 >=u t1
      :                          @3147
 44382: 28 0c                    jump @3149
      :                          @3148
 44384: 33 02                    t0 = 0
 44386: c8 79 09                 a2 = a2 + a0
 44389: 82 93                    t1 = u64 [a2]
 44391: 54 03 d8                 jump @3144 if t1 <=u 0
      :                          @3149
 44394: 85 8a ff                 a3 = a1 ^ 0xffffffffffffffff
 44397: 82 19                    a2 = u64 [sp]
 44399: c8 9a 0a                 a3 = a3 + a2
 44402: 51 0a c6                 jump @3143 if a3 == 0
      :                          @3150
 44405: 33 09 01                 a2 = 0x1
 44408: 33 05 01                 s0 = 0x1
 44411: 01                       fallthrough
      :                          @3151
 44412: d8 a5 06                 s1 = s0 <u a3
 44415: 85 6b 01                 a4 = s1 ^ 0x1
 44418: c8 52 0c                 a5 = t0 + s0
 44421: c8 56 06                 s1 = s1 + s0
 44424: c9 c0 0c                 a5 = ra - a5
 44427: ca 9c 09                 a2 = a5 * a2
 44430: d8 6a 0c                 a5 = a3 <u s1
 44433: d4 cb 0b                 a4 = a4 | a5
 44436: cb 59 09                 a2 = a2 /u s0
 44439: 64 65                    s0 = s1
 44441: 51 0b e3                 jump @3151 if a4 == 0
      :                          @3152
 44444: 95 22 01                 t0 = t0 + 0x1
 44447: c8 94 04                 t2 = t2 + a2
 44450: ab 32 d3                 jump @3150 if t0 != t1
      :                          @3153
 44453: 28 9a                    jump @3144
      :                          @3154
 44455: 64 47                    a0 = t2
 44457: 82 10 18                 ra = u64 [sp + 0x18]
 44460: 82 15 10                 s0 = u64 [sp + 0x10]
 44463: 82 16 08                 s1 = u64 [sp + 0x8]
 44466: 95 11 20                 sp = sp + 0x20
 44469: 32 00                    ret
      :                          @3155
 44471: 82 9a                    a3 = u64 [a2]
 44473: 95 ab 28                 a4 = a3 + 0x28
 44476: ac ab 5b 04              jump @3240 if a4 <u a3
      :                          @3156
 44480: 95 b7 08                 a0 = a4 + 0x8
 44483: d8 b7 0c                 a5 = a0 <u a4
 44486: d8 72 07                 a0 = t0 <u a0
 44489: d4 c7 07                 a0 = a0 | a5
 44492: 52 07 4b 04              jump @3240 if a0 != 0
      :                          @3157
 44496: c9 b5 07                 a0 = s0 - a4
 44499: c8 27 07                 a0 = a0 + t0
 44502: 84 7c 07                 a5 = a0 & 0x7
 44505: c8 cb 0b                 a4 = a4 + a5
 44508: 01                       fallthrough
      :                          @3158
 44509: 82 96                    s1 = u64 [a2]
 44511: ab a6 d8                 jump @3155 if s1 != a3
      :                          @3159
 44514: 7b 9b                    u64 [a2] = a4
 44516: c9 c7 02                 t0 = a0 - a5
 44519: 49 11 08 05              u64 [sp + 8] = 0x5
 44523: 7b 12 10                 u64 [sp + 0x10] = t0
 44526: 49 11 18                 u64 [sp + 24] = 0
 44529: 33 09 01                 a2 = 0x1
 44532: 33 08 0f                 a1 = 0xf
 44535: 33 0a 01                 a3 = 0x1
 44538: 01                       fallthrough
      :                          @3160
 44539: 88 a7 04                 a0 = a3 <u 0x4
 44542: c9 a8 0b                 a4 = a1 - a3
 44545: c8 7a 0c                 a5 = a3 + a0
 44548: ca 9b 09                 a2 = a4 * a2
 44551: 88 cb 05                 a4 = a5 <u 0x5
 44554: d2 b7 07                 a0 = a0 & a4
 44557: cb a9 09                 a2 = a2 /u a3
 44560: 64 ca                    a3 = a5
 44562: 52 07 e9                 jump @3160 if a0 != 0
      :                          @3161
 44565: ae 94 08                 jump @3163 if t2 >=u a2
      :                          @3162
 44568: 33 05                    s0 = 0
 44570: 28 57 02                 jump @3202
      :                          @3163
 44573: 33 08 01                 a1 = 0x1
 44576: 33 0a 0e                 a3 = 0xe
 44579: 33 0b 01                 a4 = 0x1
 44582: 01                       fallthrough
      :                          @3164
 44583: 88 b6 04                 s1 = a4 <u 0x4
 44586: c9 ba 0c                 a5 = a3 - a4
 44589: c8 6b 07                 a0 = a4 + s1
 44592: ca 8c 08                 a1 = a5 * a1
 44595: 88 7c 05                 a5 = a0 <u 0x5
 44598: d2 6c 0c                 a5 = a5 & s1
 44601: cb b8 08                 a1 = a1 /u a4
 44604: 64 7b                    a4 = a0
 44606: 52 0c e9                 jump @3164 if a5 != 0
      :                          @3165
 44609: c9 94 04                 t2 = t2 - a2
 44612: 33 05 01                 s0 = 0x1
 44615: ac 84 2a 02              jump @3202 if t2 <u a1
      :                          @3166
 44619: 33 09 01                 a2 = 0x1
 44622: 33 0a 0d                 a3 = 0xd
 44625: 33 0b 01                 a4 = 0x1
 44628: 01                       fallthrough
      :                          @3167
 44629: 88 b6 04                 s1 = a4 <u 0x4
 44632: c9 ba 0c                 a5 = a3 - a4
 44635: c8 6b 07                 a0 = a4 + s1
 44638: ca 9c 09                 a2 = a5 * a2
 44641: 88 7c 05                 a5 = a0 <u 0x5
 44644: d2 6c 0c                 a5 = a5 & s1
 44647: cb b9 09                 a2 = a2 /u a4
 44650: 64 7b                    a4 = a0
 44652: 52 0c e9                 jump @3167 if a5 != 0
      :                          @3168
 44655: c9 84 04                 t2 = t2 - a1
 44658: 33 05 02                 s0 = 0x2
 44661: ac 94 fc 01              jump @3202 if t2 <u a2
      :                          @3169
 44665: 33 08 01                 a1 = 0x1
 44668: 33 0a 0c                 a3 = 0xc
 44671: 33 0b 01                 a4 = 0x1
 44674: 01                       fallthrough
      :                          @3170
 44675: 88 b6 04                 s1 = a4 <u 0x4
 44678: c9 ba 0c                 a5 = a3 - a4
 44681: c8 6b 07                 a0 = a4 + s1
 44684: ca 8c 08                 a1 = a5 * a1
 44687: 88 7c 05                 a5 = a0 <u 0x5
 44690: d2 6c 0c                 a5 = a5 & s1
 44693: cb b8 08                 a1 = a1 /u a4
 44696: 64 7b                    a4 = a0
 44698: 52 0c e9                 jump @3170 if a5 != 0
      :                          @3171
 44701: c9 94 04                 t2 = t2 - a2
 44704: 33 05 03                 s0 = 0x3
 44707: ac 84 ce 01              jump @3202 if t2 <u a1
      :                          @3172
 44711: 33 09 01                 a2 = 0x1
 44714: 33 0a 0b                 a3 = 0xb
 44717: 33 0b 01                 a4 = 0x1
 44720: 01                       fallthrough
      :                          @3173
 44721: 88 b6 04                 s1 = a4 <u 0x4
 44724: c9 ba 0c                 a5 = a3 - a4
 44727: c8 6b 07                 a0 = a4 + s1
 44730: ca 9c 09                 a2 = a5 * a2
 44733: 88 7c 05                 a5 = a0 <u 0x5
 44736: d2 6c 0c                 a5 = a5 & s1
 44739: cb b9 09                 a2 = a2 /u a4
 44742: 64 7b                    a4 = a0
 44744: 52 0c e9                 jump @3173 if a5 != 0
      :                          @3174
 44747: c9 84 04                 t2 = t2 - a1
 44750: 33 05 04                 s0 = 0x4
 44753: ac 94 a0 01              jump @3202 if t2 <u a2
      :                          @3175
 44757: 33 08 01                 a1 = 0x1
 44760: 33 0a 0a                 a3 = 0xa
 44763: 33 0b 01                 a4 = 0x1
 44766: 01                       fallthrough
      :                          @3176
 44767: 88 b6 04                 s1 = a4 <u 0x4
 44770: c9 ba 0c                 a5 = a3 - a4
 44773: c8 6b 07                 a0 = a4 + s1
 44776: ca 8c 08                 a1 = a5 * a1
 44779: 88 7c 05                 a5 = a0 <u 0x5
 44782: d2 6c 0c                 a5 = a5 & s1
 44785: cb b8 08                 a1 = a1 /u a4
 44788: 64 7b                    a4 = a0
 44790: 52 0c e9                 jump @3176 if a5 != 0
      :                          @3177
 44793: c9 94 04                 t2 = t2 - a2
 44796: 33 05 05                 s0 = 0x5
 44799: ac 84 72 01              jump @3202 if t2 <u a1
      :                          @3178
 44803: 33 09 01                 a2 = 0x1
 44806: 33 0a 09                 a3 = 0x9
 44809: 33 0b 01                 a4 = 0x1
 44812: 01                       fallthrough
      :                          @3179
 44813: 88 b6 04                 s1 = a4 <u 0x4
 44816: c9 ba 0c                 a5 = a3 - a4
 44819: c8 6b 07                 a0 = a4 + s1
 44822: ca 9c 09                 a2 = a5 * a2
 44825: 88 7c 05                 a5 = a0 <u 0x5
 44828: d2 6c 0c                 a5 = a5 & s1
 44831: cb b9 09                 a2 = a2 /u a4
 44834: 64 7b                    a4 = a0
 44836: 52 0c e9                 jump @3179 if a5 != 0
      :                          @3180
 44839: c9 84 04                 t2 = t2 - a1
 44842: 33 05 06                 s0 = 0x6
 44845: ac 94 44 01              jump @3202 if t2 <u a2
      :                          @3181
 44849: 33 08 01                 a1 = 0x1
 44852: 33 0a 08                 a3 = 0x8
 44855: 33 0b 01                 a4 = 0x1
 44858: 01                       fallthrough
      :                          @3182
 44859: 88 b6 04                 s1 = a4 <u 0x4
 44862: c9 ba 0c                 a5 = a3 - a4
 44865: c8 6b 07                 a0 = a4 + s1
 44868: ca 8c 08                 a1 = a5 * a1
 44871: 88 7c 05                 a5 = a0 <u 0x5
 44874: d2 6c 0c                 a5 = a5 & s1
 44877: cb b8 08                 a1 = a1 /u a4
 44880: 64 7b                    a4 = a0
 44882: 52 0c e9                 jump @3182 if a5 != 0
      :                          @3183
 44885: c9 94 04                 t2 = t2 - a2
 44888: 33 05 07                 s0 = 0x7
 44891: ac 84 16 01              jump @3202 if t2 <u a1
      :                          @3184
 44895: 33 09 01                 a2 = 0x1
 44898: 33 0a 07                 a3 = 0x7
 44901: 33 0b 01                 a4 = 0x1
 44904: 01                       fallthrough
      :                          @3185
 44905: 88 b6 04                 s1 = a4 <u 0x4
 44908: c9 ba 0c                 a5 = a3 - a4
 44911: c8 6b 07                 a0 = a4 + s1
 44914: ca 9c 09                 a2 = a5 * a2
 44917: 88 7c 05                 a5 = a0 <u 0x5
 44920: d2 6c 0c                 a5 = a5 & s1
 44923: cb b9 09                 a2 = a2 /u a4
 44926: 64 7b                    a4 = a0
 44928: 52 0c e9                 jump @3185 if a5 != 0
      :                          @3186
 44931: c9 84 04                 t2 = t2 - a1
 44934: 33 05 08                 s0 = 0x8
 44937: ac 94 e8 00              jump @3202 if t2 <u a2
      :                          @3187
 44941: 33 08 01                 a1 = 0x1
 44944: 33 0a 06                 a3 = 0x6
 44947: 33 0b 01                 a4 = 0x1
 44950: 01                       fallthrough
      :                          @3188
 44951: 88 b6 04                 s1 = a4 <u 0x4
 44954: c9 ba 0c                 a5 = a3 - a4
 44957: c8 6b 07                 a0 = a4 + s1
 44960: ca 8c 08                 a1 = a5 * a1
 44963: 88 7c 05                 a5 = a0 <u 0x5
 44966: d2 6c 0c                 a5 = a5 & s1
 44969: cb b8 08                 a1 = a1 /u a4
 44972: 64 7b                    a4 = a0
 44974: 52 0c e9                 jump @3188 if a5 != 0
      :                          @3189
 44977: c9 94 04                 t2 = t2 - a2
 44980: 33 05 09                 s0 = 0x9
 44983: ac 84 ba 00              jump @3202 if t2 <u a1
      :                          @3190
 44987: 33 09 01                 a2 = 0x1
 44990: 33 0a 05                 a3 = 0x5
 44993: 33 0b 01                 a4 = 0x1
 44996: 01                       fallthrough
      :                          @3191
 44997: 88 b6 04                 s1 = a4 <u 0x4
 45000: c9 ba 0c                 a5 = a3 - a4
 45003: c8 6b 07                 a0 = a4 + s1
 45006: ca 9c 09                 a2 = a5 * a2
 45009: 88 7c 05                 a5 = a0 <u 0x5
 45012: d2 6c 0c                 a5 = a5 & s1
 45015: cb b9 09                 a2 = a2 /u a4
 45018: 64 7b                    a4 = a0
 45020: 52 0c e9                 jump @3191 if a5 != 0
      :                          @3192
 45023: c9 84 04                 t2 = t2 - a1
 45026: 33 05 0a                 s0 = 0xa
 45029: ac 94 8c 00              jump @3202 if t2 <u a2
      :                          @3193
 45033: 33 08 01                 a1 = 0x1
 45036: 33 0a 04                 a3 = 0x4
 45039: 33 0b 01                 a4 = 0x1
 45042: 01                       fallthrough
      :                          @3194
 45043: 88 b6 04                 s1 = a4 <u 0x4
 45046: c9 ba 0c                 a5 = a3 - a4
 45049: c8 6b 07                 a0 = a4 + s1
 45052: ca 8c 08                 a1 = a5 * a1
 45055: 88 7c 05                 a5 = a0 <u 0x5
 45058: d2 6c 0c                 a5 = a5 & s1
 45061: cb b8 08                 a1 = a1 /u a4
 45064: 64 7b                    a4 = a0
 45066: 52 0c e9                 jump @3194 if a5 != 0
      :                          @3195
 45069: c9 94 04                 t2 = t2 - a2
 45072: 33 05 0b                 s0 = 0xb
 45075: ac 84 5e                 jump @3202 if t2 <u a1
      :                          @3196
 45078: 33 09 01                 a2 = 0x1
 45081: 33 0a 03                 a3 = 0x3
 45084: 33 0b 01                 a4 = 0x1
 45087: 01                       fallthrough
      :                          @3197
 45088: 88 b6 04                 s1 = a4 <u 0x4
 45091: c9 ba 0c                 a5 = a3 - a4
 45094: c8 6b 07                 a0 = a4 + s1
 45097: ca 9c 09                 a2 = a5 * a2
 45100: 88 7c 05                 a5 = a0 <u 0x5
 45103: d2 6c 0c                 a5 = a5 & s1
 45106: cb b9 09                 a2 = a2 /u a4
 45109: 64 7b                    a4 = a0
 45111: 52 0c e9                 jump @3197 if a5 != 0
      :                          @3198
 45114: c9 84 04                 t2 = t2 - a1
 45117: 33 05 0c                 s0 = 0xc
 45120: ac 94 31                 jump @3202 if t2 <u a2
      :                          @3199
 45123: 33 08 01                 a1 = 0x1
 45126: 33 0a 02                 a3 = 0x2
 45129: 33 0b 01                 a4 = 0x1
 45132: 01                       fallthrough
      :                          @3200
 45133: 88 b6 04                 s1 = a4 <u 0x4
 45136: c9 ba 0c                 a5 = a3 - a4
 45139: c8 6b 07                 a0 = a4 + s1
 45142: ca 8c 08                 a1 = a5 * a1
 45145: 88 7c 05                 a5 = a0 <u 0x5
 45148: d2 6c 0c                 a5 = a5 & s1
 45151: cb b8 08                 a1 = a1 /u a4
 45154: 64 7b                    a4 = a0
 45156: 52 0c e9                 jump @3200 if a5 != 0
      :                          @3201
 45159: c9 94 04                 t2 = t2 - a2
 45162: 33 05 0d                 s0 = 0xd
 45165: ae 84 77 01              jump @3236 if t2 >=u a1
      :                          @3202
 45169: 7b 25                    u64 [t0] = s0
 45171: 33 08 01                 a1 = 0x1
 45174: 7b 18 18                 u64 [sp + 0x18] = a1
 45177: c8 85 00                 ra = s0 + a1
 45180: 33 0a 0f                 a3 = 0xf
 45183: 64 05                    s0 = ra
 45185: 33 0b 01                 a4 = 0x1
 45188: 33 0c 01                 a5 = 0x1
 45191: 28 09                    jump @3204
      :                          @3203
 45193: 33 0b 01                 a4 = 0x1
 45196: 33 0c 01                 a5 = 0x1
 45199: 01                       fallthrough
      :                          @3204
 45200: 88 c7 03                 a0 = a5 <u 0x3
 45203: c8 c5 09                 a2 = s0 + a5
 45206: c8 7c 06                 s1 = a5 + a0
 45209: c9 9a 09                 a2 = a3 - a2
 45212: ca b9 09                 a2 = a2 * a4
 45215: 88 6b 04                 a4 = s1 <u 0x4
 45218: d2 b7 07                 a0 = a0 & a4
 45221: cb c9 0b                 a4 = a2 /u a5
 45224: 64 6c                    a5 = s1
 45226: 52 07 e6                 jump @3204 if a0 != 0
      :                          @3205
 45229: ac b4 13                 jump @3209 if t2 <u a4
      :                          @3206
 45232: 95 55 01                 s0 = s0 + 0x1
 45235: c9 b4 04                 t2 = t2 - a4
 45238: ab a5 d3                 jump @3203 if s0 != a3
      :                          @3207
 45241: 54 10 0e 1d              jump @3210 if ra <=u 14
      :                          @3208
 45245: 28 08 01                 jump @3235
      :                          @3209
 45248: 97 87 03                 a0 = a1 << 0x3
 45251: c8 27 07                 a0 = a0 + t0
 45254: 7b 75                    u64 [a0] = s0
 45256: 95 88 01                 a1 = a1 + 0x1
 45259: 7b 18 18                 u64 [sp + 0x18] = a1
 45262: 95 50 01                 ra = s0 + 0x1
 45265: 56 10 0e f4 00           jump @3235 if ra >u 14
      :                          @3210
 45270: 33 0a 0f                 a3 = 0xf
 45273: 64 06                    s1 = ra
 45275: 33 0b 01                 a4 = 0x1
 45278: 33 0c 01                 a5 = 0x1
 45281: 28 09                    jump @3212
      :                          @3211
 45283: 33 0b 01                 a4 = 0x1
 45286: 33 0c 01                 a5 = 0x1
 45289: 01                       fallthrough
      :                          @3212
 45290: 88 c5 02                 s0 = a5 <u 0x2
 45293: c8 c6 09                 a2 = s1 + a5
 45296: c8 5c 07                 a0 = a5 + s0
 45299: c9 9a 09                 a2 = a3 - a2
 45302: ca b9 09                 a2 = a2 * a4
 45305: 88 7b 03                 a4 = a0 <u 0x3
 45308: d2 b5 05                 s0 = s0 & a4
 45311: cb c9 0b                 a4 = a2 /u a5
 45314: 64 7c                    a5 = a0
 45316: 52 05 e6                 jump @3212 if s0 != 0
      :                          @3213
 45319: ac b4 13                 jump @3217 if t2 <u a4
      :                          @3214
 45322: 95 66 01                 s1 = s1 + 0x1
 45325: c9 b4 04                 t2 = t2 - a4
 45328: ab a6 d3                 jump @3211 if s1 != a3
      :                          @3215
 45331: 54 10 0e 1d              jump @3218 if ra <=u 14
      :                          @3216
 45335: 28 ae 00                 jump @3235
      :                          @3217
 45338: 97 87 03                 a0 = a1 << 0x3
 45341: c8 27 07                 a0 = a0 + t0
 45344: 7b 76                    u64 [a0] = s1
 45346: 95 88 01                 a1 = a1 + 0x1
 45349: 7b 18 18                 u64 [sp + 0x18] = a1
 45352: 95 60 01                 ra = s1 + 0x1
 45355: 56 10 0e 9a 00           jump @3235 if ra >u 14
      :                          @3218
 45360: 9a 09 0e                 a2 = 0xe - ra
 45363: 33 0a ff                 a3 = 0xffffffffffffffff
 45366: 64 05                    s0 = ra
 45368: 01                       fallthrough
      :                          @3219
 45369: ac 94 17                 jump @3223 if t2 <u a2
      :                          @3220
 45372: c9 94 04                 t2 = t2 - a2
 45375: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 45378: 95 55 01                 s0 = s0 + 0x1
 45381: ab a9 f4                 jump @3219 if a2 != a3
      :                          @3221
 45384: 33 07 0e                 a0 = 0xe
 45387: ae 07 3b                 jump @3227 if a0 >=u ra
      :                          @3222
 45390: 28 77                    jump @3235
      :                          @3223
 45392: 52 18 05 1f              jump @3226 if a1 != 5
      :                          @3224
 45396: 95 17 08                 a0 = sp + 0x8
 45399: 33 08 05                 a1 = 0x5
 45402: 7b 13                    u64 [sp] = t1
 45404: 64 46                    s1 = t2
 45406: 50 20 d2 02 e2 a1        ra = 722, jump @1581
      :                          @3225 [@dyn 361]
 45412: 64 64                    t2 = s1
 45414: 82 13                    t1 = u64 [sp]
 45416: 82 18 18                 a1 = u64 [sp + 0x18]
 45419: 82 12 10                 t0 = u64 [sp + 0x10]
 45422: 01                       fallthrough
      :                          @3226
 45423: 97 87 03                 a0 = a1 << 0x3
 45426: c8 27 07                 a0 = a0 + t0
 45429: 7b 75                    u64 [a0] = s0
 45431: 95 88 01                 a1 = a1 + 0x1
 45434: 7b 18 18                 u64 [sp + 0x18] = a1
 45437: 95 50 01                 ra = s0 + 0x1
 45440: 33 07 0e                 a0 = 0xe
 45443: ac 07 42                 jump @3235 if a0 <u ra
      :                          @3227
 45446: 33 09 0f                 a2 = 0xf
 45449: 01                       fallthrough
      :                          @3228
 45450: 51 04 0e                 jump @3231 if t2 == 0
      :                          @3229
 45453: 95 00 01                 ra = ra + 0x1
 45456: 95 44 ff                 t2 = t2 + 0xffffffffffffffff
 45459: ab 90 f7                 jump @3228 if ra != a2
      :                          @3230
 45462: 28 2f                    jump @3235
      :                          @3231
 45464: 82 17 08                 a0 = u64 [sp + 0x8]
 45467: ab 78 1b                 jump @3234 if a1 != a0
      :                          @3232
 45470: 95 17 08                 a0 = sp + 0x8
 45473: 64 35                    s0 = t1
 45475: 64 06                    s1 = ra
 45477: 50 20 d4 02 9b a1        ra = 724, jump @1581
      :                          @3233 [@dyn 362]
 45483: 64 60                    ra = s1
 45485: 64 53                    t1 = s0
 45487: 82 18 18                 a1 = u64 [sp + 0x18]
 45490: 82 12 10                 t0 = u64 [sp + 0x10]
 45493: 01                       fallthrough
      :                          @3234
 45494: 97 87 03                 a0 = a1 << 0x3
 45497: c8 27 07                 a0 = a0 + t0
 45500: 7b 70                    u64 [a0] = ra
 45502: 95 88 01                 a1 = a1 + 0x1
 45505: 7b 18 18                 u64 [sp + 0x18] = a1
 45508: 01                       fallthrough
      :                          @3235
 45509: 82 17 18                 a0 = u64 [sp + 0x18]
 45512: 82 18 10                 a1 = u64 [sp + 0x10]
 45515: 82 19 08                 a2 = u64 [sp + 0x8]
 45518: 7b 37 10                 u64 [t1 + 0x10] = a0
 45521: 7b 38 08                 u64 [t1 + 0x8] = a1
 45524: 7b 39                    u64 [t1] = a2
 45526: 82 10 30                 ra = u64 [sp + 0x30]
 45529: 82 15 28                 s0 = u64 [sp + 0x28]
 45532: 82 16 20                 s1 = u64 [sp + 0x20]
 45535: 95 11 38                 sp = sp + 0x38
 45538: 32 00                    ret
      :                          @3236
 45540: 33 0a 01                 a3 = 0x1
 45543: 33 09 01                 a2 = 0x1
 45546: 33 0b 01                 a4 = 0x1
 45549: 01                       fallthrough
      :                          @3237
 45550: 88 b6 04                 s1 = a4 <u 0x4
 45553: c9 ba 0c                 a5 = a3 - a4
 45556: c8 6b 07                 a0 = a4 + s1
 45559: ca 9c 09                 a2 = a5 * a2
 45562: 88 7c 05                 a5 = a0 <u 0x5
 45565: d2 6c 0c                 a5 = a5 & s1
 45568: cb b9 09                 a2 = a2 /u a4
 45571: 64 7b                    a4 = a0
 45573: 52 0c e9                 jump @3237 if a5 != 0
      :                          @3238
 45576: c9 84 06                 s1 = t2 - a1
 45579: ae 96 0d                 jump @3241 if s1 >=u a2
      :                          @3239
 45582: 49 02 0e                 u64 [t0 + 0] = 0xe
 45585: 49 11 18 01              u64 [sp + 24] = 0x1
 45589: 28 b0                    jump @3235
      :                          @3240
 45591: 00                       trap
      :                          @3241
 45592: 33 00                    ra = 0
 45594: 33 08                    a1 = 0
 45596: c9 96 04                 t2 = s1 - a2
 45599: 33 0a 0f                 a3 = 0xf
 45602: 64 05                    s0 = ra
 45604: 33 0b 01                 a4 = 0x1
 45607: 33 0c 01                 a5 = 0x1
 45610: 28 66 fe                 jump @3204
      :                          @3242
 45613: 82 6a                    a3 = u64 [s1]
 45615: c8 9a 0b                 a4 = a3 + a2
 45618: ac ab de 00              jump @3263 if a4 <u a3
      :                          @3243
 45622: 95 bc 08                 a5 = a4 + 0x8
 45625: d8 bc 05                 s0 = a5 <u a4
 45628: d8 c2 0c                 a5 = t0 <u a5
 45631: d4 5c 0c                 a5 = a5 | s0
 45634: 52 0c ce 00              jump @3263 if a5 != 0
      :                          @3244
 45638: c9 b3 05                 s0 = t1 - a4
 45641: c8 25 05                 s0 = s0 + t0
 45644: 84 5c 07                 a5 = s0 & 0x7
 45647: c8 cb 0b                 a4 = a4 + a5
 45650: 01                       fallthrough
      :                          @3245
 45651: 82 68                    a1 = u64 [s1]
 45653: ab a8 d8                 jump @3242 if a1 != a3
      :                          @3246
 45656: 7b 6b                    u64 [s1] = a4
 45658: c9 c5 05                 s0 = s0 - a5
 45661: 64 57                    a0 = s0
 45663: 33 08                    a1 = 0
 45665: 7b 19 08                 u64 [sp + 0x8] = a2
 45668: 50 20 d6 02 b2 59 02     ra = 726, jump @13687
      :                          @3247 [@dyn 363]
 45675: 64 50                    ra = s0
 45677: 33 07 01                 a0 = 0x1
 45680: 7b 57                    u64 [s0] = a0
 45682: 82 14 10                 t2 = u64 [sp + 0x10]
 45685: 51 04 67                 jump @3255 if t2 == 0
      :                          @3248
 45688: 33 07 01                 a0 = 0x1
 45691: 01                       fallthrough
      :                          @3249
 45692: ac 74 93 00              jump @3262 if t2 <u a0
      :                          @3250
 45696: d8 47 02                 t0 = a0 <u t2
 45699: c8 27 03                 t1 = a0 + t0
 45702: 97 7b 03                 a4 = a0 << 0x3
 45705: c8 0b 0b                 a4 = a4 + ra
 45708: 33 08 01                 a1 = 0x1
 45711: 33 0c 02                 a5 = 0x2
 45714: 33 0a 05                 a3 = 0x5
 45717: 01                       fallthrough
      :                          @3251
 45718: c9 87 08                 a1 = a0 - a1
 45721: ac 84 75                 jump @3261 if t2 <u a1
      :                          @3252
 45724: 97 88 03                 a1 = a1 << 0x3
 45727: c8 08 08                 a1 = a1 + ra
 45730: 82 88                    a1 = u64 [a1]
 45732: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
 45735: 82 b6                    s1 = u64 [a4]
 45737: 84 99 01                 a2 = a2 & 0x1
 45740: 9a 85                    s0 = -a1
 45742: db 98 05                 s0 = a1 if a2 != 0
 45745: c8 65 05                 s0 = s0 + s1
 45748: 7b b5                    u64 [a4] = s0
 45750: ca ca 08                 a1 = a3 * a5
 45753: 98 88 01                 a1 = a1 >> 0x1
 45756: 95 cc 01                 a5 = a5 + 0x1
 45759: 95 aa 03                 a3 = a3 + 0x3
 45762: ae 87 d4                 jump @3251 if a0 >=u a1
      :                          @3253
 45765: d8 34 07                 a0 = t2 <u t1
 45768: 85 77 01                 a0 = a0 ^ 0x1
 45771: d2 72 08                 a1 = t0 & a0
 45774: 64 37                    a0 = t1
 45776: 52 08 ac                 jump @3249 if a1 != 0
      :                          @3254
 45779: 97 46 03                 s1 = t2 << 0x3
 45782: c8 06 06                 s1 = s1 + ra
 45785: 82 67                    a0 = u64 [s1]
 45787: 01                       fallthrough
      :                          @3255
 45788: 33 08 c0 22 03           a1 = 0x322c0
 45793: 95 88 00 00 01           a1 = a1 + 0x10000
 45798: 82 16 08                 s1 = u64 [sp + 0x8]
 45801: 01                       fallthrough
      :                          @3256
 45802: 82 89                    a2 = u64 [a1]
 45804: c9 98 0a                 a3 = a1 - a2
 45807: ab 0a 11                 jump @3260 if a3 != ra
      :                          @3257
 45810: c9 69 0a                 a3 = a2 - s1
 45813: 01                       fallthrough
      :                          @3258
 45814: 82 8b                    a4 = u64 [a1]
 45816: ab 9b f2                 jump @3256 if a4 != a2
      :                          @3259
 45819: 7b 8a                    u64 [a1] = a3
 45821: 33 0c                    a5 = 0
 45823: 01                       fallthrough
      :                          @3260
 45824: 82 10 28                 ra = u64 [sp + 0x28]
 45827: 82 15 20                 s0 = u64 [sp + 0x20]
 45830: 82 16 18                 s1 = u64 [sp + 0x18]
 45833: 95 11 30                 sp = sp + 0x30
 45836: 32 00                    ret
      :                          @3261
 45838: 00                       trap
      :                          @3262
 45839: 00                       trap
      :                          @3263
 45840: 00                       trap
      :                          @3264 [@dyn 364]
 45841: 82 18 18                 a1 = u64 [sp + 0x18]
 45844: 51 08 2d                 jump @3271 if a1 == 0
      :                          @3265
 45847: 56 28 00 20 2a           jump @3271 if a1 >u 8192
      :                          @3266
 45852: 82 17 20                 a0 = u64 [sp + 0x20]
 45855: 97 88 03                 a1 = a1 << 0x3
 45858: 33 09 c0 22 03           a2 = 0x322c0
 45863: 95 99 00 00 01           a2 = a2 + 0x10000
 45868: 01                       fallthrough
      :                          @3267
 45869: 82 9a                    a3 = u64 [a2]
 45871: c9 a9 0b                 a4 = a2 - a3
 45874: ab 7b 0f                 jump @3271 if a4 != a0
      :                          @3268
 45877: c9 8a 0b                 a4 = a3 - a1
 45880: 01                       fallthrough
      :                          @3269
 45881: 82 9c                    a5 = u64 [a2]
 45883: ab ac f2                 jump @3267 if a5 != a3
      :                          @3270
 45886: 7b 9b                    u64 [a2] = a4
 45888: 01                       fallthrough
      :                          @3271
 45889: 82 17 10                 a0 = u64 [sp + 0x10]
 45892: 82 18 08                 a1 = u64 [sp + 0x8]
 45895: 82 19                    a2 = u64 [sp]
 45897: 7b 67 10                 u64 [s1 + 0x10] = a0
 45900: 7b 68 08                 u64 [s1 + 0x8] = a1
 45903: 7b 69                    u64 [s1] = a2
 45905: 82 10 40                 ra = u64 [sp + 0x40]
 45908: 82 15 38                 s0 = u64 [sp + 0x38]
 45911: 82 16 30                 s1 = u64 [sp + 0x30]
 45914: 95 11 48                 sp = sp + 0x48
 45917: 32 00                    ret
      :                          @3272
 45919: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 45922: 7b 10 20                 u64 [sp + 0x20] = ra
 45925: 7b 15 18                 u64 [sp + 0x18] = s0
 45928: 7b 16 10                 u64 [sp + 0x10] = s1
 45931: 64 a6                    s1 = a3
 45933: 51 07 62                 jump @3282 if a0 == 0
      :                          @3273
 45936: 7b 16                    u64 [sp] = s1
 45938: e6 78 05                 s0 = minu(a1, a0)
 45941: 51 05 01 01              jump @3295 if s0 == 0
      :                          @3274
 45945: 82 98 10                 a1 = u64 [a2 + 0x10]
 45948: c9 57 06                 s1 = a0 - s0
 45951: 7b 19 08                 u64 [sp + 0x8] = a2
 45954: 28 0c                    jump @3276
      :                          @3275
 45956: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 45959: 95 66 01                 s1 = s1 + 0x1
 45962: 51 05 ec 00              jump @3295 if s0 == 0
      :                          @3276
 45966: 82 97                    a0 = u64 [a2]
 45968: ab 78 12                 jump @3279 if a1 != a0
      :                          @3277
 45971: 64 97                    a0 = a2
 45973: 50 20 da 02 ab 9f        ra = 730, jump @1581
      :                          @3278 [@dyn 365]
 45979: 82 19 08                 a2 = u64 [sp + 0x8]
 45982: 82 98 10                 a1 = u64 [a2 + 0x10]
 45985: 01                       fallthrough
      :                          @3279
 45986: 82 97 08                 a0 = u64 [a2 + 0x8]
 45989: 97 8a 03                 a3 = a1 << 0x3
 45992: c8 a7 07                 a0 = a0 + a3
 45995: 7b 75                    u64 [a0] = s0
 45997: 95 88 01                 a1 = a1 + 0x1
 46000: 7b 98 10                 u64 [a2 + 0x10] = a1
 46003: 64 67                    a0 = s1
 46005: 64 58                    a1 = s0
 46007: 82 1a                    a3 = u64 [sp]
 46009: 50 20 dc 02 a6           ra = 732, jump @3272
      :                          @3280 [@dyn 366]
 46014: 82 19 08                 a2 = u64 [sp + 0x8]
 46017: 82 98 10                 a1 = u64 [a2 + 0x10]
 46020: 51 08 c0                 jump @3275 if a1 == 0
      :                          @3281
 46023: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 46026: 7b 98 10                 u64 [a2 + 0x10] = a1
 46029: 28 b7                    jump @3275
      :                          @3282
 46031: 82 9a 10                 a3 = u64 [a2 + 0x10]
 46034: 82 98 08                 a1 = u64 [a2 + 0x8]
 46037: 7b 1a 08                 u64 [sp + 0x8] = a3
 46040: 51 0a 60                 jump @3290 if a3 == 0
      :                          @3283
 46043: 7b 16                    u64 [sp] = s1
 46045: 98 a7 3c                 a0 = a3 >> 0x3c
 46048: 52 07 a5 00              jump @3297 if a0 != 0
      :                          @3284
 46052: 88 72 01                 t0 = a0 <u 0x1
 46055: 97 a9 03                 a2 = a3 << 0x3
 46058: 97 22 03                 t0 = t0 << 0x3
 46061: 33 04 c0 22 03           t2 = 0x322c0
 46066: 33 03 00 00 01           t1 = 0x10000
 46071: c8 34 00                 ra = t2 + t1
 46074: 01                       fallthrough
      :                          @3285
 46075: 82 06                    s1 = u64 [ra]
 46077: c8 96 05                 s0 = s1 + a2
 46080: ac 65 84 00              jump @3296 if s0 <u s1
      :                          @3286
 46084: c8 25 07                 a0 = s0 + t0
 46087: d8 57 0b                 a4 = a0 <u s0
 46090: d8 73 07                 a0 = t1 <u a0
 46093: d4 b7 07                 a0 = a0 | a4
 46096: 52 07 74                 jump @3296 if a0 != 0
      :                          @3287
 46099: c9 54 07                 a0 = t2 - s0
 46102: c8 37 07                 a0 = a0 + t1
 46105: 84 7b 07                 a4 = a0 & 0x7
 46108: c8 b5 05                 s0 = s0 + a4
 46111: 01                       fallthrough
      :                          @3288
 46112: 82 0a                    a3 = u64 [ra]
 46114: ab 6a d9                 jump @3285 if a3 != s1
      :                          @3289
 46117: 7b 05                    u64 [ra] = s0
 46119: 33 0c                    a5 = 0
 46121: c9 b7 05                 s0 = a0 - a4
 46124: 82 16                    s1 = u64 [sp]
 46126: 64 57                    a0 = s0
 46128: 33 00 de 02              ra = 0x2de
 46132: 28 b5 55 02              jump @13633
      :                          @3290
 46136: 33 09                    a2 = 0
 46138: 33 05 08                 s0 = 0x8
 46141: 33 07 08                 a0 = 0x8
 46144: 50 20 de 02 a9 55 02     ra = 734, jump @13633
      :                          @3291 [@dyn 367]
 46151: 82 68 10                 a1 = u64 [s1 + 0x10]
 46154: 82 67                    a0 = u64 [s1]
 46156: ab 78 0f                 jump @3294 if a1 != a0
      :                          @3292
 46159: 64 67                    a0 = s1
 46161: 50 20 e0 02 6f 9f        ra = 736, jump @1593
      :                          @3293 [@dyn 368]
 46167: 82 68 10                 a1 = u64 [s1 + 0x10]
 46170: 01                       fallthrough
      :                          @3294
 46171: 82 67 08                 a0 = u64 [s1 + 0x8]
 46174: 96 89 18                 a2 = a1 * 0x18
 46177: c8 97 07                 a0 = a0 + a2
 46180: 82 19 08                 a2 = u64 [sp + 0x8]
 46183: 7b 79                    u64 [a0] = a2
 46185: 7b 75 08                 u64 [a0 + 0x8] = s0
 46188: 7b 79 10                 u64 [a0 + 0x10] = a2
 46191: 95 88 01                 a1 = a1 + 0x1
 46194: 7b 68 10                 u64 [s1 + 0x10] = a1
 46197: 01                       fallthrough
      :                          @3295
 46198: 82 10 20                 ra = u64 [sp + 0x20]
 46201: 82 15 18                 s0 = u64 [sp + 0x18]
 46204: 82 16 10                 s1 = u64 [sp + 0x10]
 46207: 95 11 28                 sp = sp + 0x28
 46210: 32 00                    ret
      :                          @3296
 46212: 00                       trap
      :                          @3297
 46213: 00                       trap
      :                          @3298
 46214: 82 5a                    a3 = u64 [s0]
 46216: c8 9a 0b                 a4 = a3 + a2
 46219: ac ab 5a 01              jump @3327 if a4 <u a3
      :                          @3299
 46223: 95 bc 08                 a5 = a4 + 0x8
 46226: d8 bc 06                 s1 = a5 <u a4
 46229: d8 c2 0c                 a5 = t0 <u a5
 46232: d4 6c 0c                 a5 = a5 | s1
 46235: 52 0c 4a 01              jump @3327 if a5 != 0
      :                          @3300
 46239: c9 b3 06                 s1 = t1 - a4
 46242: c8 26 06                 s1 = s1 + t0
 46245: 84 6c 07                 a5 = s1 & 0x7
 46248: c8 cb 0b                 a4 = a4 + a5
 46251: 01                       fallthrough
      :                          @3301
 46252: 82 58                    a1 = u64 [s0]
 46254: ab a8 d8                 jump @3298 if a1 != a3
      :                          @3302
 46257: 7b 5b                    u64 [s0] = a4
 46259: c9 c6 06                 s1 = s1 - a5
 46262: 64 67                    a0 = s1
 46264: 33 08                    a1 = 0
 46266: 7b 19 08                 u64 [sp + 0x8] = a2
 46269: 50 20 e2 02 59 57 02     ra = 738, jump @13687
      :                          @3303 [@dyn 369]
 46276: 33 07 01                 a0 = 0x1
 46279: 7b 67                    u64 [s1] = a0
 46281: 82 15 10                 s0 = u64 [sp + 0x10]
 46284: 51 05 dd 00              jump @3319 if s0 == 0
      :                          @3304
 46288: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 46291: ac 85 10 01              jump @3325 if s0 <u a1
      :                          @3305
 46295: ac 75 0d 01              jump @3326 if s0 <u a0
      :                          @3306
 46299: 97 88 03                 a1 = a1 << 0x3
 46302: c8 68 08                 a1 = a1 + s1
 46305: 82 88                    a1 = u64 [a1]
 46307: 97 79 03                 a2 = a0 << 0x3
 46310: c8 69 09                 a2 = a2 + s1
 46313: 82 9a                    a3 = u64 [a2]
 46315: d8 57 0b                 a4 = a0 <u s0
 46318: c8 b7 07                 a0 = a0 + a4
 46321: c8 a8 08                 a1 = a1 + a3
 46324: d8 75 0a                 a3 = s0 <u a0
 46327: 85 aa 01                 a3 = a3 ^ 0x1
 46330: d2 ba 0a                 a3 = a3 & a4
 46333: 7b 98                    u64 [a2] = a1
 46335: 52 0a d1                 jump @3304 if a3 != 0
      :                          @3307
 46338: 33 07 05                 a0 = 0x5
 46341: ac 75 a4 00              jump @3319 if s0 <u a0
      :                          @3308
 46345: 95 78 fb                 a1 = a0 + 0xfffffffffffffffb
 46348: ac 85 d7 00              jump @3325 if s0 <u a1
      :                          @3309
 46352: ac 75 d4 00              jump @3326 if s0 <u a0
      :                          @3310
 46356: 97 88 03                 a1 = a1 << 0x3
 46359: c8 68 08                 a1 = a1 + s1
 46362: 82 88                    a1 = u64 [a1]
 46364: 97 79 03                 a2 = a0 << 0x3
 46367: c8 69 09                 a2 = a2 + s1
 46370: 82 9a                    a3 = u64 [a2]
 46372: d8 57 0b                 a4 = a0 <u s0
 46375: c8 b7 07                 a0 = a0 + a4
 46378: c8 a8 08                 a1 = a1 + a3
 46381: d8 75 0a                 a3 = s0 <u a0
 46384: 85 aa 01                 a3 = a3 ^ 0x1
 46387: d2 ba 0a                 a3 = a3 & a4
 46390: 7b 98                    u64 [a2] = a1
 46392: 52 0a d1                 jump @3308 if a3 != 0
      :                          @3311
 46395: 33 07 0a                 a0 = 0xa
 46398: ac 75 6b                 jump @3319 if s0 <u a0
      :                          @3312
 46401: 95 78 f6                 a1 = a0 + 0xfffffffffffffff6
 46404: ac 85 9f 00              jump @3325 if s0 <u a1
      :                          @3313
 46408: ac 75 9c 00              jump @3326 if s0 <u a0
      :                          @3314
 46412: 97 88 03                 a1 = a1 << 0x3
 46415: c8 68 08                 a1 = a1 + s1
 46418: 82 88                    a1 = u64 [a1]
 46420: 97 79 03                 a2 = a0 << 0x3
 46423: c8 69 09                 a2 = a2 + s1
 46426: 82 9a                    a3 = u64 [a2]
 46428: d8 57 0b                 a4 = a0 <u s0
 46431: c8 b7 07                 a0 = a0 + a4
 46434: c8 a8 08                 a1 = a1 + a3
 46437: d8 75 0a                 a3 = s0 <u a0
 46440: 85 aa 01                 a3 = a3 ^ 0x1
 46443: d2 ba 0a                 a3 = a3 & a4
 46446: 7b 98                    u64 [a2] = a1
 46448: 52 0a d1                 jump @3312 if a3 != 0
      :                          @3315
 46451: 33 07 19                 a0 = 0x19
 46454: ac 75 33                 jump @3319 if s0 <u a0
      :                          @3316
 46457: 95 78 e7                 a1 = a0 + 0xffffffffffffffe7
 46460: ac 85 67                 jump @3325 if s0 <u a1
      :                          @3317
 46463: ac 75 65                 jump @3326 if s0 <u a0
      :                          @3318
 46466: 97 88 03                 a1 = a1 << 0x3
 46469: c8 68 08                 a1 = a1 + s1
 46472: 82 88                    a1 = u64 [a1]
 46474: 97 79 03                 a2 = a0 << 0x3
 46477: c8 69 09                 a2 = a2 + s1
 46480: 82 9a                    a3 = u64 [a2]
 46482: d8 57 0b                 a4 = a0 <u s0
 46485: c8 b7 07                 a0 = a0 + a4
 46488: c8 a8 08                 a1 = a1 + a3
 46491: d8 75 0a                 a3 = s0 <u a0
 46494: 85 aa 01                 a3 = a3 ^ 0x1
 46497: d2 ba 0a                 a3 = a3 & a4
 46500: 7b 98                    u64 [a2] = a1
 46502: 52 0a d3                 jump @3316 if a3 != 0
      :                          @3319
 46505: 97 55 03                 s0 = s0 << 0x3
 46508: c8 65 05                 s0 = s0 + s1
 46511: 82 57                    a0 = u64 [s0]
 46513: 33 08 c0 22 03           a1 = 0x322c0
 46518: 95 88 00 00 01           a1 = a1 + 0x10000
 46523: 82 15 08                 s0 = u64 [sp + 0x8]
 46526: 01                       fallthrough
      :                          @3320
 46527: 82 89                    a2 = u64 [a1]
 46529: c9 98 0a                 a3 = a1 - a2
 46532: ab 6a 11                 jump @3324 if a3 != s1
      :                          @3321
 46535: c9 59 0a                 a3 = a2 - s0
 46538: 01                       fallthrough
      :                          @3322
 46539: 82 8b                    a4 = u64 [a1]
 46541: ab 9b f2                 jump @3320 if a4 != a2
      :                          @3323
 46544: 7b 8a                    u64 [a1] = a3
 46546: 33 0c                    a5 = 0
 46548: 01                       fallthrough
      :                          @3324
 46549: 82 10 28                 ra = u64 [sp + 0x28]
 46552: 82 15 20                 s0 = u64 [sp + 0x20]
 46555: 82 16 18                 s1 = u64 [sp + 0x18]
 46558: 95 11 30                 sp = sp + 0x30
 46561: 32 00                    ret
      :                          @3325
 46563: 00                       trap
      :                          @3326
 46564: 00                       trap
      :                          @3327
 46565: 00                       trap
      :                          @3328
 46566: 82 0b                    a4 = u64 [ra]
 46568: c8 7b 09                 a2 = a4 + a0
 46571: ac b9 c8 01              jump @3374 if a2 <u a4
      :                          @3329
 46575: 95 9a 08                 a3 = a2 + 0x8
 46578: d8 9a 05                 s0 = a3 <u a2
 46581: d8 a2 0a                 a3 = t0 <u a3
 46584: d4 5a 0a                 a3 = a3 | s0
 46587: 52 0a b8 01              jump @3374 if a3 != 0
      :                          @3330
 46591: c9 94 0a                 a3 = t2 - a2
 46594: c8 2a 0a                 a3 = a3 + t0
 46597: 84 a5 07                 s0 = a3 & 0x7
 46600: c8 59 09                 a2 = a2 + s0
 46603: 01                       fallthrough
      :                          @3331
 46604: 82 06                    s1 = u64 [ra]
 46606: ab b6 d8                 jump @3328 if s1 != a4
      :                          @3332
 46609: 7b 09                    u64 [ra] = a2
 46611: 01                       fallthrough
      :                          @3333
 46612: c9 5a 0c                 a5 = a3 - s0
 46615: 51 03 b6 00              jump @3350 if t1 == 0
      :                          @3334
 46619: 14 0a ff ff ff ff ff ff ff 7f a3 = 0x7fffffffffffffff
 46629: 64 3b                    a4 = t1
 46631: 64 c9                    a2 = a5
 46633: 01                       fallthrough
      :                          @3335
 46634: 7b 9a                    u64 [a2] = a3
 46636: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 46639: 95 99 08                 a2 = a2 + 0x8
 46642: 52 0b f8                 jump @3335 if a4 != 0
      :                          @3336
 46645: 14 02 ff ff ff ff ff ff ff 7f t0 = 0x7fffffffffffffff
 46655: 7b 92                    u64 [a2] = t0
 46657: 49 0c                    u64 [a5 + 0] = 0
 46659: 33 0a 01                 a3 = 0x1
 46662: 28 14                    jump @3338
      :                          @3337
 46664: d8 3a 09                 a2 = a3 <u t1
 46667: c8 9a 0a                 a3 = a3 + a2
 46670: d8 a3 0b                 a4 = t1 <u a3
 46673: 85 bb 01                 a4 = a4 ^ 0x1
 46676: d2 b9 09                 a2 = a2 & a4
 46679: 51 09 2a                 jump @3342 if a2 == 0
      :                          @3338
 46682: 95 ab ff                 a4 = a3 + 0xffffffffffffffff
 46685: ac b3 55 01              jump @3373 if t1 <u a4
      :                          @3339
 46689: 97 bb 03                 a4 = a4 << 0x3
 46692: c8 cb 0b                 a4 = a4 + a5
 46695: 82 b9                    a2 = u64 [a4]
 46697: aa 29 df                 jump @3337 if a2 == t0
      :                          @3340
 46700: ac a3 60                 jump @3349 if t1 <u a3
      :                          @3341
 46703: 97 ab 03                 a4 = a3 << 0x3
 46706: c8 cb 0b                 a4 = a4 + a5
 46709: 82 b6                    s1 = u64 [a4]
 46711: 95 99 01                 a2 = a2 + 0x1
 46714: e5 96 09                 a2 = mins(s1, a2)
 46717: 7b b9                    u64 [a4] = a2
 46719: 28 c9                    jump @3337
      :                          @3342
 46721: 33 0a 05                 a3 = 0x5
 46724: ac a3 a0 00              jump @3359 if t1 <u a3
      :                          @3343
 46728: 14 02 ff ff ff ff ff ff ff 7f t0 = 0x7fffffffffffffff
 46738: 28 25                    jump @3346
      :                          @3344
 46740: 97 ab 03                 a4 = a3 << 0x3
 46743: c8 cb 0b                 a4 = a4 + a5
 46746: 82 b6                    s1 = u64 [a4]
 46748: 95 99 01                 a2 = a2 + 0x1
 46751: e5 96 09                 a2 = mins(s1, a2)
 46754: 7b b9                    u64 [a4] = a2
 46756: 01                       fallthrough
      :                          @3345
 46757: d8 3a 09                 a2 = a3 <u t1
 46760: c8 9a 0a                 a3 = a3 + a2
 46763: d8 a3 0b                 a4 = t1 <u a3
 46766: 85 bb 01                 a4 = a4 ^ 0x1
 46769: d2 b9 09                 a2 = a2 & a4
 46772: 51 09 1f                 jump @3351 if a2 == 0
      :                          @3346
 46775: 95 ab fb                 a4 = a3 + 0xfffffffffffffffb
 46778: ac b3 f8 00              jump @3373 if t1 <u a4
      :                          @3347
 46782: 97 bb 03                 a4 = a4 << 0x3
 46785: c8 cb 0b                 a4 = a4 + a5
 46788: 82 b9                    a2 = u64 [a4]
 46790: aa 29 df                 jump @3345 if a2 == t0
      :                          @3348
 46793: ae a3 cb                 jump @3344 if t1 >=u a3
      :                          @3349
 46796: 00                       trap
      :                          @3350
 46797: 49 0c                    u64 [a5 + 0] = 0
 46799: 64 c8                    a1 = a5
 46801: 28 5a                    jump @3360
      :                          @3351
 46803: 33 0a 0a                 a3 = 0xa
 46806: ac a3 4e                 jump @3359 if t1 <u a3
      :                          @3352
 46809: 14 02 ff ff ff ff ff ff ff 7f t0 = 0x7fffffffffffffff
 46819: 28 14                    jump @3354
      :                          @3353
 46821: d8 3a 09                 a2 = a3 <u t1
 46824: c8 9a 0a                 a3 = a3 + a2
 46827: d8 a3 0b                 a4 = t1 <u a3
 46830: 85 bb 01                 a4 = a4 ^ 0x1
 46833: d2 b9 09                 a2 = a2 & a4
 46836: 51 09 2a                 jump @3358 if a2 == 0
      :                          @3354
 46839: 95 ab f6                 a4 = a3 + 0xfffffffffffffff6
 46842: ac b3 b8 00              jump @3373 if t1 <u a4
      :                          @3355
 46846: 97 bb 03                 a4 = a4 << 0x3
 46849: c8 cb 0b                 a4 = a4 + a5
 46852: 82 b9                    a2 = u64 [a4]
 46854: aa 29 df                 jump @3353 if a2 == t0
      :                          @3356
 46857: ac a3 c3                 jump @3349 if t1 <u a3
      :                          @3357
 46860: 97 ab 03                 a4 = a3 << 0x3
 46863: c8 cb 0b                 a4 = a4 + a5
 46866: 82 b6                    s1 = u64 [a4]
 46868: 95 99 01                 a2 = a2 + 0x1
 46871: e5 96 09                 a2 = mins(s1, a2)
 46874: 7b b9                    u64 [a4] = a2
 46876: 28 c9                    jump @3353
      :                          @3358
 46878: 33 0a 19                 a3 = 0x19
 46881: ae a3 4b                 jump @3366 if t1 >=u a3
      :                          @3359
 46884: 97 38 03                 a1 = t1 << 0x3
 46887: c8 c8 08                 a1 = a1 + a5
 46890: 01                       fallthrough
      :                          @3360
 46891: 82 88                    a1 = u64 [a1]
 46893: 33 09 c0 22 03           a2 = 0x322c0
 46898: 95 99 00 00 01           a2 = a2 + 0x10000
 46903: 01                       fallthrough
      :                          @3361
 46904: 82 9a                    a3 = u64 [a2]
 46906: c9 a9 0b                 a4 = a2 - a3
 46909: ab cb 0f                 jump @3365 if a4 != a5
      :                          @3362
 46912: c9 7a 0b                 a4 = a3 - a0
 46915: 01                       fallthrough
      :                          @3363
 46916: 82 96                    s1 = u64 [a2]
 46918: ab a6 f2                 jump @3361 if s1 != a3
      :                          @3364
 46921: 7b 9b                    u64 [a2] = a4
 46923: 01                       fallthrough
      :                          @3365
 46924: 33 07 ff                 a0 = 0xffffffffffffffff
 46927: 14 09 ff ff ff ff ff ff ff 7f a2 = 0x7fffffffffffffff
 46937: d3 89 09                 a2 = a2 ^ a1
 46940: db 98 07                 a0 = a1 if a2 != 0
 46943: 82 10 10                 ra = u64 [sp + 0x10]
 46946: 82 15 08                 s0 = u64 [sp + 0x8]
 46949: 82 16                    s1 = u64 [sp]
 46951: 95 11 18                 sp = sp + 0x18
 46954: 32 00                    ret
      :                          @3366
 46956: 14 02 ff ff ff ff ff ff ff 7f t0 = 0x7fffffffffffffff
 46966: 28 25                    jump @3369
      :                          @3367
 46968: 97 ab 03                 a4 = a3 << 0x3
 46971: c8 cb 0b                 a4 = a4 + a5
 46974: 82 b6                    s1 = u64 [a4]
 46976: 95 99 01                 a2 = a2 + 0x1
 46979: e5 96 09                 a2 = mins(s1, a2)
 46982: 7b b9                    u64 [a4] = a2
 46984: 01                       fallthrough
      :                          @3368
 46985: d8 3a 09                 a2 = a3 <u t1
 46988: c8 9a 0a                 a3 = a3 + a2
 46991: d8 a3 0b                 a4 = t1 <u a3
 46994: 85 bb 01                 a4 = a4 ^ 0x1
 46997: d2 b9 09                 a2 = a2 & a4
 47000: 51 09 8c                 jump @3359 if a2 == 0
      :                          @3369
 47003: 95 ab e7                 a4 = a3 + 0xffffffffffffffe7
 47006: ac b3 14                 jump @3373 if t1 <u a4
      :                          @3370
 47009: 97 bb 03                 a4 = a4 << 0x3
 47012: c8 cb 0b                 a4 = a4 + a5
 47015: 82 b9                    a2 = u64 [a4]
 47017: aa 29 e0                 jump @3368 if a2 == t0
      :                          @3371
 47020: ae a3 cc                 jump @3367 if t1 >=u a3
      :                          @3372
 47023: 28 1d ff                 jump @3349
      :                          @3373
 47026: 00                       trap
      :                          @3374
 47027: 00                       trap
      :                          @3375
 47028: 95 11 b0                 sp = sp + 0xffffffffffffffb0
 47031: 7b 10 48                 u64 [sp + 0x48] = ra
 47034: 7b 15 40                 u64 [sp + 0x40] = s0
 47037: 7b 16 38                 u64 [sp + 0x38] = s1
 47040: 7b 19                    u64 [sp] = a2
 47042: 7b 17 10                 u64 [sp + 0x10] = a0
 47045: 95 b0 01                 ra = a4 + 0x1
 47048: 97 07 03                 a0 = ra << 0x3
 47051: 7b 17 20                 u64 [sp + 0x20] = a0
 47054: 7b 1b 28                 u64 [sp + 0x28] = a4
 47057: 7b 1a 08                 u64 [sp + 0x8] = a3
 47060: 7b 18 18                 u64 [sp + 0x18] = a1
 47063: 52 00 0d                 jump @3378 if ra != 0
      :                          @3376
 47066: 33 07 08                 a0 = 0x8
 47069: 7b 17 30                 u64 [sp + 0x30] = a0
 47072: 52 08 72                 jump @3387 if a1 != 0
      :                          @3377
 47075: 00                       trap
      :                          @3378
 47076: 98 07 3c                 a0 = ra >> 0x3c
 47079: 52 07 33 01              jump @3410 if a0 != 0
      :                          @3379
 47083: 88 72 01                 t0 = a0 <u 0x1
 47086: 97 22 03                 t0 = t0 << 0x3
 47089: 33 04 c0 22 03           t2 = 0x322c0
 47094: 33 03 00 00 01           t1 = 0x10000
 47099: c8 34 0a                 a3 = t2 + t1
 47102: 01                       fallthrough
      :                          @3380
 47103: 82 ab                    a4 = u64 [a3]
 47105: 82 1c 20                 a5 = u64 [sp + 0x20]
 47108: c8 bc 0c                 a5 = a5 + a4
 47111: ac bc 12 01              jump @3409 if a5 <u a4
      :                          @3381
 47115: c8 2c 09                 a2 = a5 + t0
 47118: d8 c9 06                 s1 = a2 <u a5
 47121: d8 93 09                 a2 = t1 <u a2
 47124: d4 69 09                 a2 = a2 | s1
 47127: 52 09 02 01              jump @3409 if a2 != 0
      :                          @3382
 47131: c9 c4 06                 s1 = t2 - a5
 47134: c8 36 06                 s1 = s1 + t1
 47137: 84 69 07                 a2 = s1 & 0x7
 47140: c8 9c 0c                 a5 = a5 + a2
 47143: 01                       fallthrough
      :                          @3383
 47144: 82 a7                    a0 = u64 [a3]
 47146: ab b7 d5                 jump @3380 if a0 != a4
      :                          @3384
 47149: 7b ac                    u64 [a3] = a5
 47151: 64 05                    s0 = ra
 47153: c9 96 07                 a0 = s1 - a2
 47156: 7b 17 30                 u64 [sp + 0x30] = a0
 47159: 33 08                    a1 = 0
 47161: 82 19 20                 a2 = u64 [sp + 0x20]
 47164: 50 20 e4 02 da 53 02     ra = 740, jump @13687
      :                          @3385 [@dyn 370]
 47171: 82 18 18                 a1 = u64 [sp + 0x18]
 47174: 51 08 73                 jump @3396 if a1 == 0
      :                          @3386
 47177: 64 50                    ra = s0
 47179: 82 1b 28                 a4 = u64 [sp + 0x28]
 47182: 33 0a                    a3 = 0
 47184: 28 12                    jump @3389
      :                          @3387
 47186: 33 0a                    a3 = 0
 47188: 28 0e                    jump @3389
      :                          @3388
 47190: 95 aa 01                 a3 = a3 + 0x1
 47193: 82 18 18                 a1 = u64 [sp + 0x18]
 47196: 82 1b 28                 a4 = u64 [sp + 0x28]
 47199: aa 8a 63                 jump @3397 if a3 == a1
      :                          @3389
 47202: 97 a2 03                 t0 = a3 << 0x3
 47205: 82 18 10                 a1 = u64 [sp + 0x10]
 47208: c8 28 08                 a1 = a1 + t0
 47211: 82 83                    t1 = u64 [a1]
 47213: ac 3b e9                 jump @3388 if a4 <u t1
      :                          @3390
 47216: 82 18 08                 a1 = u64 [sp + 0x8]
 47219: ae 8a 96 00              jump @3404 if a3 >=u a1
      :                          @3391
 47223: 82 18                    a1 = u64 [sp]
 47225: c8 82 02                 t0 = t0 + a1
 47228: 82 17 28                 a0 = u64 [sp + 0x28]
 47231: 01                       fallthrough
      :                          @3392
 47232: ae 07 97 00              jump @3407 if a0 >=u ra
      :                          @3393
 47236: c9 37 09                 a2 = a0 - t1
 47239: ae 09 91 00              jump @3408 if a2 >=u ra
      :                          @3394
 47243: 97 7c 03                 a5 = a0 << 0x3
 47246: 82 16 30                 s1 = u64 [sp + 0x30]
 47249: c8 6c 0c                 a5 = a5 + s1
 47252: 97 99 03                 a2 = a2 << 0x3
 47255: c8 69 09                 a2 = a2 + s1
 47258: 82 94                    t2 = u64 [a2]
 47260: 82 29                    a2 = u64 [t0]
 47262: 82 c6                    s1 = u64 [a5]
 47264: d8 73 05                 s0 = t1 <u a0
 47267: c9 57 07                 a0 = a0 - s0
 47270: c8 49 09                 a2 = a2 + t2
 47273: e4 96 09                 a2 = maxu(s1, a2)
 47276: d8 37 06                 s1 = a0 <u t1
 47279: e0 65 06                 s1 = s0 & ~s1
 47282: 7b c9                    u64 [a5] = a2
 47284: 52 06 cc                 jump @3392 if s1 != 0
      :                          @3395
 47287: 28 9f                    jump @3388
      :                          @3396
 47289: 64 50                    ra = s0
 47291: 82 1b 28                 a4 = u64 [sp + 0x28]
 47294: 51 1b ff 5d              jump @3411 if a4 == 4294967295
      :                          @3397
 47298: 97 b7 03                 a0 = a4 << 0x3
 47301: 82 18 30                 a1 = u64 [sp + 0x30]
 47304: c8 87 07                 a0 = a0 + a1
 47307: 82 77                    a0 = u64 [a0]
 47309: 33 08 00 20              a1 = 0x2000
 47313: ac 08 2a                 jump @3403 if a1 <u ra
      :                          @3398
 47316: 33 08 c0 22 03           a1 = 0x322c0
 47321: 95 88 00 00 01           a1 = a1 + 0x10000
 47326: 01                       fallthrough
      :                          @3399
 47327: 82 89                    a2 = u64 [a1]
 47329: c9 98 0a                 a3 = a1 - a2
 47332: 82 1b 30                 a4 = u64 [sp + 0x30]
 47335: ab ba 14                 jump @3403 if a3 != a4
      :                          @3400
 47338: 82 1a 20                 a3 = u64 [sp + 0x20]
 47341: c9 a9 0a                 a3 = a2 - a3
 47344: 01                       fallthrough
      :                          @3401
 47345: 82 8b                    a4 = u64 [a1]
 47347: ab 9b ec                 jump @3399 if a4 != a2
      :                          @3402
 47350: 7b 8a                    u64 [a1] = a3
 47352: 33 0c                    a5 = 0
 47354: 01                       fallthrough
      :                          @3403
 47355: 82 10 48                 ra = u64 [sp + 0x48]
 47358: 82 15 40                 s0 = u64 [sp + 0x40]
 47361: 82 16 38                 s1 = u64 [sp + 0x38]
 47364: 95 11 50                 sp = sp + 0x50
 47367: 32 00                    ret
      :                          @3404
 47369: 82 19 28                 a2 = u64 [sp + 0x28]
 47372: 51 19 ff 0b              jump @3407 if a2 == 4294967295
      :                          @3405
 47376: c9 39 09                 a2 = a2 - t1
 47379: ae 09 05                 jump @3408 if a2 >=u ra
      :                          @3406
 47382: 00                       trap
      :                          @3407
 47383: 00                       trap
      :                          @3408
 47384: 00                       trap
      :                          @3409
 47385: 00                       trap
      :                          @3410
 47386: 00                       trap
      :                          @3411
 47387: 00                       trap
      :                          @3412
 47388: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 47391: 7b 10 40                 u64 [sp + 0x40] = ra
 47394: 7b 15 38                 u64 [sp + 0x38] = s0
 47397: 7b 16 30                 u64 [sp + 0x30] = s1
 47400: 7b 1a 20                 u64 [sp + 0x20] = a3
 47403: 7b 19 10                 u64 [sp + 0x10] = a2
 47406: 64 85                    s0 = a1
 47408: 7b 17 18                 u64 [sp + 0x18] = a0
 47411: 95 b8 01                 a1 = a4 + 0x1
 47414: 33 04 08                 t2 = 0x8
 47417: 97 80 03                 ra = a1 << 0x3
 47420: 7b 15 28                 u64 [sp + 0x28] = s0
 47423: 52 08 0b                 jump @3415 if a1 != 0
      :                          @3413
 47426: 33 07                    a0 = 0
 47428: 52 05 da 00              jump @3433 if s0 != 0
      :                          @3414
 47432: 28 72                    jump @3423
      :                          @3415
 47434: 7b 1b 08                 u64 [sp + 0x8] = a4
 47437: 7b 18                    u64 [sp] = a1
 47439: 98 87 3c                 a0 = a1 >> 0x3c
 47442: 52 07 2f 01              jump @3448 if a0 != 0
      :                          @3416
 47446: 88 72 01                 t0 = a0 <u 0x1
 47449: 97 22 03                 t0 = t0 << 0x3
 47452: 33 04 c0 22 03           t2 = 0x322c0
 47457: 33 03 00 00 01           t1 = 0x10000
 47462: c8 34 0a                 a3 = t2 + t1
 47465: 01                       fallthrough
      :                          @3417
 47466: 82 ab                    a4 = u64 [a3]
 47468: c8 0b 0c                 a5 = a4 + ra
 47471: ac bc 11 01              jump @3447 if a5 <u a4
      :                          @3418
 47475: c8 2c 09                 a2 = a5 + t0
 47478: d8 c9 05                 s0 = a2 <u a5
 47481: d8 93 09                 a2 = t1 <u a2
 47484: d4 59 09                 a2 = a2 | s0
 47487: 52 09 01 01              jump @3447 if a2 != 0
      :                          @3419
 47491: c9 c4 05                 s0 = t2 - a5
 47494: c8 35 05                 s0 = s0 + t1
 47497: 84 59 07                 a2 = s0 & 0x7
 47500: c8 9c 0c                 a5 = a5 + a2
 47503: 01                       fallthrough
      :                          @3420
 47504: 82 a7                    a0 = u64 [a3]
 47506: ab b7 d8                 jump @3417 if a0 != a4
      :                          @3421
 47509: 7b ac                    u64 [a3] = a5
 47511: c9 95 05                 s0 = s0 - a2
 47514: 64 57                    a0 = s0
 47516: 33 08                    a1 = 0
 47518: 64 09                    a2 = ra
 47520: 64 06                    s1 = ra
 47522: 50 20 e6 02 74 52 02     ra = 742, jump @13687
      :                          @3422 [@dyn 371]
 47529: 64 54                    t2 = s0
 47531: 64 60                    ra = s1
 47533: 82 18                    a1 = u64 [sp]
 47535: 82 1b 08                 a4 = u64 [sp + 0x8]
 47538: 82 15 28                 s0 = u64 [sp + 0x28]
 47541: 33 07                    a0 = 0
 47543: 52 05 67                 jump @3433 if s0 != 0
      :                          @3423
 47546: d8 b7 0a                 a3 = a0 <u a4
 47549: c8 a7 07                 a0 = a0 + a3
 47552: d8 7b 09                 a2 = a4 <u a0
 47555: 85 99 01                 a2 = a2 ^ 0x1
 47558: d2 a9 09                 a2 = a2 & a3
 47561: 52 09 f1                 jump @3423 if a2 != 0
      :                          @3424
 47564: 51 1b ff b2 00           jump @3445 if a4 == 4294967295
      :                          @3425
 47569: 97 b7 03                 a0 = a4 << 0x3
 47572: c8 47 07                 a0 = a0 + t2
 47575: 82 77                    a0 = u64 [a0]
 47577: 33 09 00 20              a2 = 0x2000
 47581: ac 89 24                 jump @3431 if a2 <u a1
      :                          @3426
 47584: 33 08 c0 22 03           a1 = 0x322c0
 47589: 95 88 00 00 01           a1 = a1 + 0x10000
 47594: 01                       fallthrough
      :                          @3427
 47595: 82 89                    a2 = u64 [a1]
 47597: c9 98 0a                 a3 = a1 - a2
 47600: ab 4a 11                 jump @3431 if a3 != t2
      :                          @3428
 47603: c9 09 0a                 a3 = a2 - ra
 47606: 01                       fallthrough
      :                          @3429
 47607: 82 8b                    a4 = u64 [a1]
 47609: ab 9b f2                 jump @3427 if a4 != a2
      :                          @3430
 47612: 7b 8a                    u64 [a1] = a3
 47614: 33 0c                    a5 = 0
 47616: 01                       fallthrough
      :                          @3431
 47617: 82 10 40                 ra = u64 [sp + 0x40]
 47620: 82 15 38                 s0 = u64 [sp + 0x38]
 47623: 82 16 30                 s1 = u64 [sp + 0x30]
 47626: 95 11 48                 sp = sp + 0x48
 47629: 32 00                    ret
      :                          @3432
 47631: d8 b7 0a                 a3 = a0 <u a4
 47634: c8 a7 07                 a0 = a0 + a3
 47637: d8 7b 09                 a2 = a4 <u a0
 47640: e0 9a 09                 a2 = a3 & ~a2
 47643: 51 09 b1                 jump @3424 if a2 == 0
      :                          @3433
 47646: 64 5c                    a5 = s0
 47648: 82 19 18                 a2 = u64 [sp + 0x18]
 47651: ae 87 49                 jump @3440 if a0 >=u a1
      :                          @3434
 47654: 33 06                    s1 = 0
 47656: 97 7a 03                 a3 = a0 << 0x3
 47659: c8 a4 02                 t0 = t2 + a3
 47662: 82 1a 18                 a3 = u64 [sp + 0x18]
 47665: 82 1c 10                 a5 = u64 [sp + 0x10]
 47668: 28 0e                    jump @3436
      :                          @3435
 47670: 95 66 01                 s1 = s1 + 0x1
 47673: 95 cc 08                 a5 = a5 + 0x8
 47676: 95 aa 08                 a3 = a3 + 0x8
 47679: aa 65 d0                 jump @3432 if s0 == s1
      :                          @3436
 47682: 82 a9                    a2 = u64 [a3]
 47684: ac 97 f2                 jump @3435 if a0 <u a2
      :                          @3437
 47687: c9 97 09                 a2 = a0 - a2
 47690: ae 89 32                 jump @3443 if a2 >=u a1
      :                          @3438
 47693: 82 15 20                 s0 = u64 [sp + 0x20]
 47696: ae 56 2d                 jump @3444 if s1 >=u s0
      :                          @3439
 47699: 97 99 03                 a2 = a2 << 0x3
 47702: c8 49 09                 a2 = a2 + t2
 47705: 82 99                    a2 = u64 [a2]
 47707: 82 c5                    s0 = u64 [a5]
 47709: 82 23                    t1 = u64 [t0]
 47711: c8 59 09                 a2 = a2 + s0
 47714: e4 93 09                 a2 = maxu(t1, a2)
 47717: 82 15 28                 s0 = u64 [sp + 0x28]
 47720: 7b 29                    u64 [t0] = a2
 47722: 28 cc                    jump @3435
      :                          @3440
 47724: 82 9a                    a3 = u64 [a2]
 47726: ae a7 11                 jump @3446 if a0 >=u a3
      :                          @3441
 47729: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 47732: 95 99 08                 a2 = a2 + 0x8
 47735: 52 0c f5                 jump @3440 if a5 != 0
      :                          @3442
 47738: 28 95                    jump @3432
      :                          @3443
 47740: 00                       trap
      :                          @3444
 47741: 00                       trap
      :                          @3445
 47742: 00                       trap
      :                          @3446
 47743: 00                       trap
      :                          @3447
 47744: 00                       trap
      :                          @3448
 47745: 00                       trap
      :                          @3449
 47746: 95 11 78 ff              sp = sp + 0xffffffffffffff78
 47750: 7b 10 80 00              u64 [sp + 0x80] = ra
 47754: 7b 15 78                 u64 [sp + 0x78] = s0
 47757: 7b 16 70                 u64 [sp + 0x70] = s1
 47760: 64 a5                    s0 = a3
 47762: 7b 19 30                 u64 [sp + 0x30] = a2
 47765: 7b 17 10                 u64 [sp + 0x10] = a0
 47768: 95 a9 01                 a2 = a3 + 0x1
 47771: 33 06 08                 s1 = 0x8
 47774: 7b 18 18                 u64 [sp + 0x18] = a1
 47777: 51 09 68                 jump @3458 if a2 == 0
      :                          @3450
 47780: 98 97 3c                 a0 = a2 >> 0x3c
 47783: 52 07 4e 02              jump @3514 if a0 != 0
      :                          @3451
 47787: 88 72 01                 t0 = a0 <u 0x1
 47790: 7b 19 38                 u64 [sp + 0x38] = a2
 47793: 97 99 03                 a2 = a2 << 0x3
 47796: 97 22 03                 t0 = t0 << 0x3
 47799: 33 04 c0 22 03           t2 = 0x322c0
 47804: 33 03 00 00 01           t1 = 0x10000
 47809: c8 34 00                 ra = t2 + t1
 47812: 01                       fallthrough
      :                          @3452
 47813: 82 06                    s1 = u64 [ra]
 47815: c8 96 0c                 a5 = s1 + a2
 47818: ac 6c 2a 02              jump @3513 if a5 <u s1
      :                          @3453
 47822: c8 2c 07                 a0 = a5 + t0
 47825: d8 c7 0a                 a3 = a0 <u a5
 47828: d8 73 07                 a0 = t1 <u a0
 47831: d4 a7 07                 a0 = a0 | a3
 47834: 52 07 1a 02              jump @3513 if a0 != 0
      :                          @3454
 47838: c9 c4 07                 a0 = t2 - a5
 47841: c8 37 07                 a0 = a0 + t1
 47844: 84 7a 07                 a3 = a0 & 0x7
 47847: c8 ac 0c                 a5 = a5 + a3
 47850: 01                       fallthrough
      :                          @3455
 47851: 82 08                    a1 = u64 [ra]
 47853: ab 68 d8                 jump @3452 if a1 != s1
      :                          @3456
 47856: 7b 0c                    u64 [ra] = a5
 47858: 33 0b                    a4 = 0
 47860: c9 a7 06                 s1 = a0 - a3
 47863: 64 67                    a0 = s1
 47865: 33 08                    a1 = 0
 47867: 50 20 e8 02 1b 51 02     ra = 744, jump @13687
      :                          @3457 [@dyn 372]
 47874: 82 18 18                 a1 = u64 [sp + 0x18]
 47877: 82 19 38                 a2 = u64 [sp + 0x38]
 47880: 01                       fallthrough
      :                          @3458
 47881: 7b 19 58                 u64 [sp + 0x58] = a2
 47884: 7b 16 60                 u64 [sp + 0x60] = s1
 47887: 7b 19 68                 u64 [sp + 0x68] = a2
 47890: 95 89 01                 a2 = a1 + 0x1
 47893: 95 17 40                 a0 = sp + 0x40
 47896: 95 18 58                 a1 = sp + 0x58
 47899: 50 20 ea 02 d6 9e        ra = 746, jump @1721
      :                          @3459 [@dyn 373]
 47905: 82 18 18                 a1 = u64 [sp + 0x18]
 47908: 51 08 e4 00              jump @3477 if a1 == 0
      :                          @3460
 47912: 82 12 50                 t0 = u64 [sp + 0x50]
 47915: 51 05 e2 00              jump @3478 if s0 == 0
      :                          @3461
 47919: 82 17 48                 a0 = u64 [sp + 0x48]
 47922: 7b 17 08                 u64 [sp + 0x8] = a0
 47925: 33 0c 01                 a5 = 0x1
 47928: 7b 12                    u64 [sp] = t0
 47930: 01                       fallthrough
      :                          @3462
 47931: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
 47934: ae 89 98 01              jump @3502 if a2 >=u a1
      :                          @3463
 47938: ae 29 95 01              jump @3503 if a2 >=u t0
      :                          @3464
 47942: 82 17 10                 a0 = u64 [sp + 0x10]
 47945: c8 97 07                 a0 = a0 + a2
 47948: 7b 17 38                 u64 [sp + 0x38] = a0
 47951: 96 c3 18                 t1 = a5 * 0x18
 47954: 82 17 08                 a0 = u64 [sp + 0x8]
 47957: c8 73 03                 t1 = t1 + a0
 47960: d8 2c 09                 a2 = a5 <u t0
 47963: 84 99 01                 a2 = a2 & 0x1
 47966: 95 36 f8                 s1 = t1 + 0xfffffffffffffff8
 47969: 51 09 77 01              jump @3504 if a2 == 0
      :                          @3465
 47973: d8 8c 07                 a0 = a5 <u a1
 47976: 7b 17 20                 u64 [sp + 0x20] = a0
 47979: c8 7c 0c                 a5 = a5 + a0
 47982: 7b 1c 28                 u64 [sp + 0x28] = a5
 47985: 95 3c f0                 a5 = t1 + 0xfffffffffffffff0
 47988: 95 32 10                 t0 = t1 + 0x10
 47991: 95 33 08                 t1 = t1 + 0x8
 47994: 33 09 01                 a2 = 0x1
 47997: 01                       fallthrough
      :                          @3466
 47998: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
 48001: ae 5a 54 01              jump @3501 if a3 >=u s0
      :                          @3467
 48005: 82 17 38                 a0 = u64 [sp + 0x38]
 48008: 7c 70                    ra = u8 [a0]
 48010: 82 1b 30                 a4 = u64 [sp + 0x30]
 48013: c8 ab 0b                 a4 = a4 + a3
 48016: 7c b8                    a1 = u8 [a4]
 48018: 82 6b                    a4 = u64 [s1]
 48020: 97 94 03                 t2 = a2 << 0x3
 48023: ab 80 1c                 jump @3471 if ra != a1
      :                          @3468
 48026: ae ba 51 01              jump @3507 if a3 >=u a4
      :                          @3469
 48030: 82 c7                    a0 = u64 [a5]
 48032: 97 aa 03                 a3 = a3 << 0x3
 48035: c8 a7 07                 a0 = a0 + a3
 48038: 82 7a                    a3 = u64 [a0]
 48040: 82 2b                    a4 = u64 [t0]
 48042: 95 aa 01                 a3 = a3 + 0x1
 48045: ac b9 28                 jump @3474 if a2 <u a4
      :                          @3470
 48048: 28 41 01                 jump @3510
      :                          @3471
 48051: ae b9 3e 01              jump @3510 if a2 >=u a4
      :                          @3472
 48055: 82 2b                    a4 = u64 [t0]
 48057: ae ba 32 01              jump @3507 if a3 >=u a4
      :                          @3473
 48061: 82 c8                    a1 = u64 [a5]
 48063: 82 37                    a0 = u64 [t1]
 48065: c8 48 08                 a1 = a1 + t2
 48068: 82 88                    a1 = u64 [a1]
 48070: 97 aa 03                 a3 = a3 << 0x3
 48073: c8 a7 07                 a0 = a0 + a3
 48076: 82 77                    a0 = u64 [a0]
 48078: e4 78 0a                 a3 = maxu(a1, a0)
 48081: ae b9 20 01              jump @3510 if a2 >=u a4
      :                          @3474
 48085: 82 37                    a0 = u64 [t1]
 48087: d8 59 08                 a1 = a2 <u s0
 48090: c8 89 09                 a2 = a2 + a1
 48093: c8 47 07                 a0 = a0 + t2
 48096: d8 95 0b                 a4 = s0 <u a2
 48099: 85 bb 01                 a4 = a4 ^ 0x1
 48102: d2 b8 08                 a1 = a1 & a4
 48105: 7b 7a                    u64 [a0] = a3
 48107: 52 08 93                 jump @3466 if a1 != 0
      :                          @3475
 48110: 82 17 20                 a0 = u64 [sp + 0x20]
 48113: 85 79 01                 a2 = a0 ^ 0x1
 48116: 82 18 18                 a1 = u64 [sp + 0x18]
 48119: 82 1c 28                 a5 = u64 [sp + 0x28]
 48122: d8 c8 0a                 a3 = a1 <u a5
 48125: d4 a9 09                 a2 = a2 | a3
 48128: 82 12                    t0 = u64 [sp]
 48130: 51 09 39 ff              jump @3462 if a2 == 0
      :                          @3476
 48134: 28 1d                    jump @3480
      :                          @3477
 48136: 82 12 50                 t0 = u64 [sp + 0x50]
 48139: 28 18                    jump @3480
      :                          @3478
 48141: 33 07 01                 a0 = 0x1
 48144: 01                       fallthrough
      :                          @3479
 48145: d8 87 09                 a2 = a0 <u a1
 48148: 85 9a 01                 a3 = a2 ^ 0x1
 48151: c8 97 07                 a0 = a0 + a2
 48154: d8 78 09                 a2 = a1 <u a0
 48157: d4 a9 09                 a2 = a2 | a3
 48160: 51 09 f1                 jump @3479 if a2 == 0
      :                          @3480
 48163: ae 28 cf 00              jump @3511 if a1 >=u t0
      :                          @3481
 48167: 82 14 48                 t2 = u64 [sp + 0x48]
 48170: 33 03 18                 t1 = 0x18
 48173: ca 38 07                 a0 = a1 * t1
 48176: c8 47 07                 a0 = a0 + t2
 48179: 82 79 10                 a2 = u64 [a0 + 0x10]
 48182: ae 95 bd 00              jump @3512 if s0 >=u a2
      :                          @3482
 48186: 82 77 08                 a0 = u64 [a0 + 0x8]
 48189: 33 09                    a2 = 0
 48191: 97 55 03                 s0 = s0 << 0x3
 48194: c8 57 07                 a0 = a0 + s0
 48197: 82 77                    a0 = u64 [a0]
 48199: 7b 17 38                 u64 [sp + 0x38] = a0
 48202: 33 0c c0 22 03           a5 = 0x322c0
 48207: 33 08 00 00 01           a1 = 0x10000
 48212: c8 8c 0c                 a5 = a5 + a1
 48215: 33 07 00 20              a0 = 0x2000
 48219: 28 08                    jump @3484
      :                          @3483
 48221: 95 99 01                 a2 = a2 + 0x1
 48224: aa 29 33                 jump @3493 if a2 == t0
      :                          @3484
 48227: ca 39 0b                 a4 = a2 * t1
 48230: c8 4b 0b                 a4 = a4 + t2
 48233: 82 b6                    s1 = u64 [a4]
 48235: 51 06 f2                 jump @3483 if s1 == 0
      :                          @3485
 48238: ac 67 ef                 jump @3483 if a0 <u s1
      :                          @3486
 48241: 82 b5 08                 s0 = u64 [a4 + 0x8]
 48244: 97 60 03                 ra = s1 << 0x3
 48247: 01                       fallthrough
      :                          @3487
 48248: 82 cb                    a4 = u64 [a5]
 48250: c9 bc 08                 a1 = a5 - a4
 48253: ab 58 e0                 jump @3483 if a1 != s0
      :                          @3488
 48256: c9 0b 08                 a1 = a4 - ra
 48259: 01                       fallthrough
      :                          @3489
 48260: 82 ca                    a3 = u64 [a5]
 48262: ab ba f2                 jump @3487 if a3 != a4
      :                          @3490
 48265: 7b c8                    u64 [a5] = a1
 48267: 33 06                    s1 = 0
 48269: 01                       fallthrough
      :                          @3491
 48270: ab ba ea                 jump @3487 if a3 != a4
      :                          @3492
 48273: 28 cc                    jump @3483
      :                          @3493
 48275: 82 18 40                 a1 = u64 [sp + 0x40]
 48278: 51 08 2c                 jump @3500 if a1 == 0
      :                          @3494
 48281: 33 09 aa 0a              a2 = 0xaaa
 48285: ac 89 25                 jump @3500 if a2 <u a1
      :                          @3495
 48288: 96 88 e8                 a1 = a1 * 0xffffffffffffffe8
 48291: 33 09 c0 22 03           a2 = 0x322c0
 48296: 95 99 00 00 01           a2 = a2 + 0x10000
 48301: 01                       fallthrough
      :                          @3496
 48302: 82 9b                    a4 = u64 [a2]
 48304: c9 b9 0a                 a3 = a2 - a4
 48307: ab 4a 0f                 jump @3500 if a3 != t2
      :                          @3497
 48310: c8 8b 0a                 a3 = a4 + a1
 48313: 01                       fallthrough
      :                          @3498
 48314: 82 9c                    a5 = u64 [a2]
 48316: ab bc f2                 jump @3496 if a5 != a4
      :                          @3499
 48319: 7b 9a                    u64 [a2] = a3
 48321: 01                       fallthrough
      :                          @3500
 48322: 82 17 38                 a0 = u64 [sp + 0x38]
 48325: 82 10 80 00              ra = u64 [sp + 0x80]
 48329: 82 15 78                 s0 = u64 [sp + 0x78]
 48332: 82 16 70                 s1 = u64 [sp + 0x70]
 48335: 95 11 88 00              sp = sp + 0x88
 48339: 32 00                    ret
      :                          @3501
 48341: 00                       trap
      :                          @3502
 48342: 00                       trap
      :                          @3503
 48343: 00                       trap
      :                          @3504
 48344: 82 17 38                 a0 = u64 [sp + 0x38]
 48347: 7c 77                    a0 = u8 [a0]
 48349: 82 18 30                 a1 = u64 [sp + 0x30]
 48352: 7c 88                    a1 = u8 [a1]
 48354: 82 6b                    a4 = u64 [s1]
 48356: ab 87 08                 jump @3508 if a0 != a1
      :                          @3505
 48359: 52 0b 09                 jump @3509 if a4 != 0
      :                          @3506
 48362: 00                       trap
      :                          @3507
 48363: 00                       trap
      :                          @3508
 48364: 54 1b 01 05              jump @3510 if a4 <=u 1
      :                          @3509
 48368: 00                       trap
      :                          @3510
 48369: 00                       trap
      :                          @3511
 48370: 00                       trap
      :                          @3512
 48371: 00                       trap
      :                          @3513
 48372: 00                       trap
      :                          @3514
 48373: 00                       trap
      :                          @3515
 48374: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 48377: 7b 10 30                 u64 [sp + 0x30] = ra
 48380: 7b 15 28                 u64 [sp + 0x28] = s0
 48383: 7b 16 20                 u64 [sp + 0x20] = s1
 48386: 7b 17 10                 u64 [sp + 0x10] = a0
 48389: 51 08 1f 01              jump @3546 if a1 == 0
      :                          @3516
 48393: 98 89 3c                 a2 = a1 >> 0x3c
 48396: 52 09 2d 01              jump @3550 if a2 != 0
      :                          @3517
 48400: 88 92 01                 t0 = a2 <u 0x1
 48403: 7b 18 08                 u64 [sp + 0x8] = a1
 48406: 97 87 03                 a0 = a1 << 0x3
 48409: 97 22 03                 t0 = t0 << 0x3
 48412: 33 04 c0 22 03           t2 = 0x322c0
 48417: 33 03 00 00 01           t1 = 0x10000
 48422: c8 34 00                 ra = t2 + t1
 48425: 01                       fallthrough
      :                          @3518
 48426: 82 05                    s0 = u64 [ra]
 48428: c8 75 06                 s1 = s0 + a0
 48431: ac 56 09 01              jump @3549 if s1 <u s0
      :                          @3519
 48435: c8 26 09                 a2 = s1 + t0
 48438: d8 69 0b                 a4 = a2 <u s1
 48441: d8 93 09                 a2 = t1 <u a2
 48444: d4 b9 09                 a2 = a2 | a4
 48447: 52 09 f9 00              jump @3549 if a2 != 0
      :                          @3520
 48451: c9 64 09                 a2 = t2 - s1
 48454: c8 39 09                 a2 = a2 + t1
 48457: 84 9b 07                 a4 = a2 & 0x7
 48460: c8 b6 06                 s1 = s1 + a4
 48463: 01                       fallthrough
      :                          @3521
 48464: 82 0a                    a3 = u64 [ra]
 48466: ab 5a d8                 jump @3518 if a3 != s0
      :                          @3522
 48469: 7b 06                    u64 [ra] = s1
 48471: 33 0c                    a5 = 0
 48473: 01                       fallthrough
      :                          @3523
 48474: c9 b9 0b                 a4 = a2 - a4
 48477: 33 09 01                 a2 = 0x1
 48480: 33 0a 02                 a3 = 0x2
 48483: 33 08 01                 a1 = 0x1
 48486: 7b 1b 18                 u64 [sp + 0x18] = a4
 48489: 82 16 08                 s1 = u64 [sp + 0x8]
 48492: ac a6 1b                 jump @3527 if s1 <u a3
      :                          @3524
 48495: 95 6a ff                 a3 = s1 + 0xffffffffffffffff
 48498: 33 0c 01                 a5 = 0x1
 48501: 82 1b 18                 a4 = u64 [sp + 0x18]
 48504: 01                       fallthrough
      :                          @3525
 48505: 7b bc                    u64 [a4] = a5
 48507: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 48510: 95 bb 08                 a4 = a4 + 0x8
 48513: 52 0a f8                 jump @3525 if a3 != 0
      :                          @3526
 48516: 64 68                    a1 = s1
 48518: 01                       fallthrough
      :                          @3527
 48519: 7b 17                    u64 [sp] = a0
 48521: 33 02                    t0 = 0
 48523: 33 07                    a0 = 0
 48525: 7b b9                    u64 [a4] = a2
 48527: 01                       fallthrough
      :                          @3528
 48528: 97 70 03                 ra = a0 << 0x3
 48531: 51 07 4a                 jump @3536 if a0 == 0
      :                          @3529
 48534: 82 16 10                 s1 = u64 [sp + 0x10]
 48537: c8 06 09                 a2 = s1 + ra
 48540: 82 99                    a2 = u64 [a2]
 48542: 64 7b                    a4 = a0
 48544: ae 87 2f                 jump @3534 if a0 >=u a1
      :                          @3530
 48547: 82 14 18                 t2 = u64 [sp + 0x18]
 48550: c8 04 05                 s0 = t2 + ra
 48553: 64 76                    s1 = a0
 48555: 82 1b 10                 a4 = u64 [sp + 0x10]
 48558: 28 0e                    jump @3532
      :                          @3531
 48560: 95 44 08                 t2 = t2 + 0x8
 48563: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 48566: 95 bb 08                 a4 = a4 + 0x8
 48569: 51 06 24                 jump @3536 if s1 == 0
      :                          @3532
 48572: 82 b3                    t1 = u64 [a4]
 48574: ae 93 f2                 jump @3531 if t1 >=u a2
      :                          @3533
 48577: 82 4a                    a3 = u64 [t2]
 48579: 82 5c                    a5 = u64 [s0]
 48581: 95 aa 01                 a3 = a3 + 0x1
 48584: e4 ac 0a                 a3 = maxu(a5, a3)
 48587: 7b 5a                    u64 [s0] = a3
 48589: 28 e3                    jump @3531
      :                          @3534
 48591: 82 6a                    a3 = u64 [s1]
 48593: ac 9a 69                 jump @3551 if a3 <u a2
      :                          @3535
 48596: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 48599: 95 66 08                 s1 = s1 + 0x8
 48602: 52 0b f5                 jump @3534 if a4 != 0
      :                          @3536
 48605: aa 87 5a                 jump @3548 if a0 == a1
      :                          @3537
 48608: 82 19 18                 a2 = u64 [sp + 0x18]
 48611: c8 90 00                 ra = ra + a2
 48614: 82 09                    a2 = u64 [ra]
 48616: 95 77 01                 a0 = a0 + 0x1
 48619: e4 92 02                 t0 = maxu(t0, a2)
 48622: 82 19 08                 a2 = u64 [sp + 0x8]
 48625: ab 97 9f                 jump @3528 if a0 != a2
      :                          @3538
 48628: 56 29 00 20 33           jump @3547 if a2 >u 8192
      :                          @3539
 48633: 33 09 c0 22 03           a2 = 0x322c0
 48638: 95 99 00 00 01           a2 = a2 + 0x10000
 48643: 01                       fallthrough
      :                          @3540
 48644: 82 98                    a1 = u64 [a2]
 48646: c9 89 07                 a0 = a2 - a1
 48649: 82 1a 18                 a3 = u64 [sp + 0x18]
 48652: ab a7 1b                 jump @3547 if a0 != a3
      :                          @3541
 48655: 82 17                    a0 = u64 [sp]
 48657: c9 78 07                 a0 = a1 - a0
 48660: 01                       fallthrough
      :                          @3542
 48661: 82 9a                    a3 = u64 [a2]
 48663: ab 8a ed                 jump @3540 if a3 != a1
      :                          @3543
 48666: 7b 97                    u64 [a2] = a0
 48668: 33 0b                    a4 = 0
 48670: 01                       fallthrough
      :                          @3544
 48671: ab 8a e5                 jump @3540 if a3 != a1
      :                          @3545
 48674: 28 05                    jump @3547
      :                          @3546
 48676: 33 02                    t0 = 0
 48678: 01                       fallthrough
      :                          @3547
 48679: 64 27                    a0 = t0
 48681: 82 10 30                 ra = u64 [sp + 0x30]
 48684: 82 15 28                 s0 = u64 [sp + 0x28]
 48687: 82 16 20                 s1 = u64 [sp + 0x20]
 48690: 95 11 38                 sp = sp + 0x38
 48693: 32 00                    ret
      :                          @3548
 48695: 00                       trap
      :                          @3549
 48696: 00                       trap
      :                          @3550
 48697: 00                       trap
      :                          @3551
 48698: 00                       trap
      :                          @3552
 48699: 95 11 70 ff              sp = sp + 0xffffffffffffff70
 48703: 7b 10 88 00              u64 [sp + 0x88] = ra
 48707: 7b 15 80 00              u64 [sp + 0x80] = s0
 48711: 7b 16 78                 u64 [sp + 0x78] = s1
 48714: 64 a5                    s0 = a3
 48716: 7b 19 30                 u64 [sp + 0x30] = a2
 48719: 7b 17 08                 u64 [sp + 0x8] = a0
 48722: 95 a9 01                 a2 = a3 + 0x1
 48725: 33 06 08                 s1 = 0x8
 48728: 7b 18 10                 u64 [sp + 0x10] = a1
 48731: 51 09 68                 jump @3561 if a2 == 0
      :                          @3553
 48734: 98 97 3c                 a0 = a2 >> 0x3c
 48737: 52 07 8e 02              jump @3621 if a0 != 0
      :                          @3554
 48741: 88 72 01                 t0 = a0 <u 0x1
 48744: 7b 19 40                 u64 [sp + 0x40] = a2
 48747: 97 99 03                 a2 = a2 << 0x3
 48750: 97 22 03                 t0 = t0 << 0x3
 48753: 33 04 c0 22 03           t2 = 0x322c0
 48758: 33 03 00 00 01           t1 = 0x10000
 48763: c8 34 00                 ra = t2 + t1
 48766: 01                       fallthrough
      :                          @3555
 48767: 82 06                    s1 = u64 [ra]
 48769: c8 96 0c                 a5 = s1 + a2
 48772: ac 6c 68 02              jump @3618 if a5 <u s1
      :                          @3556
 48776: c8 2c 07                 a0 = a5 + t0
 48779: d8 c7 0a                 a3 = a0 <u a5
 48782: d8 73 07                 a0 = t1 <u a0
 48785: d4 a7 07                 a0 = a0 | a3
 48788: 52 07 58 02              jump @3618 if a0 != 0
      :                          @3557
 48792: c9 c4 07                 a0 = t2 - a5
 48795: c8 37 07                 a0 = a0 + t1
 48798: 84 7a 07                 a3 = a0 & 0x7
 48801: c8 ac 0c                 a5 = a5 + a3
 48804: 01                       fallthrough
      :                          @3558
 48805: 82 08                    a1 = u64 [ra]
 48807: ab 68 d8                 jump @3555 if a1 != s1
      :                          @3559
 48810: 7b 0c                    u64 [ra] = a5
 48812: 33 0b                    a4 = 0
 48814: c9 a7 06                 s1 = a0 - a3
 48817: 64 67                    a0 = s1
 48819: 33 08                    a1 = 0
 48821: 50 20 ec 02 61 4d 02     ra = 748, jump @13687
      :                          @3560 [@dyn 374]
 48828: 82 18 10                 a1 = u64 [sp + 0x10]
 48831: 82 19 40                 a2 = u64 [sp + 0x40]
 48834: 01                       fallthrough
      :                          @3561
 48835: 7b 19 60                 u64 [sp + 0x60] = a2
 48838: 7b 16 68                 u64 [sp + 0x68] = s1
 48841: 7b 19 70                 u64 [sp + 0x70] = a2
 48844: 95 89 01                 a2 = a1 + 0x1
 48847: 95 17 48                 a0 = sp + 0x48
 48850: 95 18 60                 a1 = sp + 0x60
 48853: 50 20 ee 02 1c 9b        ra = 750, jump @1721
      :                          @3562 [@dyn 375]
 48859: 82 18 10                 a1 = u64 [sp + 0x10]
 48862: 82 12 58                 t0 = u64 [sp + 0x58]
 48865: 82 14 50                 t2 = u64 [sp + 0x50]
 48868: 33 07                    a0 = 0
 48870: 33 09 18                 a2 = 0x18
 48873: 01                       fallthrough
      :                          @3563
 48874: ae 27 ff 01              jump @3615 if a0 >=u t0
      :                          @3564
 48878: ca 97 0a                 a3 = a0 * a2
 48881: c8 4a 0a                 a3 = a3 + t2
 48884: 82 ab 10                 a4 = u64 [a3 + 0x10]
 48887: 51 0b e5 01              jump @3610 if a4 == 0
      :                          @3565
 48891: d8 87 0c                 a5 = a0 <u a1
 48894: c8 c7 0b                 a4 = a0 + a5
 48897: 82 aa 08                 a3 = u64 [a3 + 0x8]
 48900: 85 c6 01                 s1 = a5 ^ 0x1
 48903: d8 b8 0c                 a5 = a1 <u a4
 48906: d4 6c 0c                 a5 = a5 | s1
 48909: 7b a7                    u64 [a3] = a0
 48911: 64 b7                    a0 = a4
 48913: 51 0c d9                 jump @3563 if a5 == 0
      :                          @3566
 48916: 33 07                    a0 = 0
 48918: 01                       fallthrough
      :                          @3567
 48919: 82 49 10                 a2 = u64 [t2 + 0x10]
 48922: ae 97 c3 01              jump @3611 if a0 >=u a2
      :                          @3568
 48926: d8 57 0c                 a5 = a0 <u s0
 48929: 82 49 08                 a2 = u64 [t2 + 0x8]
 48932: 85 ca 01                 a3 = a5 ^ 0x1
 48935: 97 7b 03                 a4 = a0 << 0x3
 48938: c8 7c 0c                 a5 = a5 + a0
 48941: c8 b9 09                 a2 = a2 + a4
 48944: d8 c5 0b                 a4 = s0 <u a5
 48947: d4 ba 0a                 a3 = a3 | a4
 48950: 7b 97                    u64 [a2] = a0
 48952: 64 c7                    a0 = a5
 48954: 51 0a dd                 jump @3567 if a3 == 0
      :                          @3569
 48957: 7b 14 28                 u64 [sp + 0x28] = t2
 48960: 51 08 e9 00              jump @3585 if a1 == 0
      :                          @3570
 48964: 33 07 01                 a0 = 0x1
 48967: 51 05 d0 00              jump @3584 if s0 == 0
      :                          @3571
 48971: 7b 12                    u64 [sp] = t0
 48973: 01                       fallthrough
      :                          @3572
 48974: 95 79 ff                 a2 = a0 + 0xffffffffffffffff
 48977: ae 89 8d 01              jump @3612 if a2 >=u a1
      :                          @3573
 48981: ae 29 8a 01              jump @3613 if a2 >=u t0
      :                          @3574
 48985: 96 73 18                 t1 = a0 * 0x18
 48988: c8 43 03                 t1 = t1 + t2
 48991: 95 3a f8                 a3 = t1 + 0xfffffffffffffff8
 48994: 7b 1a 40                 u64 [sp + 0x40] = a3
 48997: ae 27 7b 01              jump @3614 if a0 >=u t0
      :                          @3575
 49001: d8 87 08                 a1 = a0 <u a1
 49004: 7b 18 18                 u64 [sp + 0x18] = a1
 49007: c8 87 07                 a0 = a0 + a1
 49010: 7b 17 20                 u64 [sp + 0x20] = a0
 49013: 82 17 08                 a0 = u64 [sp + 0x8]
 49016: c8 97 07                 a0 = a0 + a2
 49019: 7b 17 38                 u64 [sp + 0x38] = a0
 49022: 95 32 f0                 t0 = t1 + 0xfffffffffffffff0
 49025: 95 34 10                 t2 = t1 + 0x10
 49028: 95 33 08                 t1 = t1 + 0x8
 49031: 33 09 01                 a2 = 0x1
 49034: 01                       fallthrough
      :                          @3576
 49035: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
 49038: ae 5a 4a 01              jump @3606 if a3 >=u s0
      :                          @3577
 49042: 82 17 40                 a0 = u64 [sp + 0x40]
 49045: 82 7b                    a4 = u64 [a0]
 49047: ae b9 57 01              jump @3620 if a2 >=u a4
      :                          @3578
 49051: 82 4c                    a5 = u64 [t2]
 49053: ae ca 3c 01              jump @3607 if a3 >=u a5
      :                          @3579
 49057: ae ba 39 01              jump @3608 if a3 >=u a4
      :                          @3580
 49061: ae c9 36 01              jump @3609 if a2 >=u a5
      :                          @3581
 49065: 82 17 38                 a0 = u64 [sp + 0x38]
 49068: 7c 7b                    a4 = u8 [a0]
 49070: 82 1c 30                 a5 = u64 [sp + 0x30]
 49073: c8 ac 0c                 a5 = a5 + a3
 49076: 7c cc                    a5 = u8 [a5]
 49078: 82 27                    a0 = u64 [t0]
 49080: d3 cb 0b                 a4 = a4 ^ a5
 49083: 97 9c 03                 a5 = a2 << 0x3
 49086: 82 30                    ra = u64 [t1]
 49088: c8 c7 08                 a1 = a0 + a5
 49091: 82 88                    a1 = u64 [a1]
 49093: 97 a6 03                 s1 = a3 << 0x3
 49096: c8 60 0a                 a3 = ra + s1
 49099: 82 aa                    a3 = u64 [a3]
 49101: c8 67 07                 a0 = a0 + s1
 49104: 95 88 01                 a1 = a1 + 0x1
 49107: 82 77                    a0 = u64 [a0]
 49109: 95 aa 01                 a3 = a3 + 0x1
 49112: e6 a8 08                 a1 = minu(a1, a3)
 49115: 8e ba                    a3 = a4 >u 0
 49117: c8 a7 07                 a0 = a0 + a3
 49120: e6 78 07                 a0 = minu(a1, a0)
 49123: d8 59 08                 a1 = a2 <u s0
 49126: c8 89 09                 a2 = a2 + a1
 49129: c8 0c 0c                 a5 = a5 + ra
 49132: d8 95 0a                 a3 = s0 <u a2
 49135: 85 aa 01                 a3 = a3 ^ 0x1
 49138: d2 a8 08                 a1 = a1 & a3
 49141: 7b c7                    u64 [a5] = a0
 49143: 52 08 94                 jump @3576 if a1 != 0
      :                          @3582
 49146: 82 18 10                 a1 = u64 [sp + 0x10]
 49149: 82 17 20                 a0 = u64 [sp + 0x20]
 49152: d8 78 09                 a2 = a1 <u a0
 49155: 85 99 01                 a2 = a2 ^ 0x1
 49158: 82 1a 18                 a3 = u64 [sp + 0x18]
 49161: d2 a9 09                 a2 = a2 & a3
 49164: 82 14 28                 t2 = u64 [sp + 0x28]
 49167: 82 12                    t0 = u64 [sp]
 49169: 52 09 3d ff              jump @3572 if a2 != 0
      :                          @3583
 49173: 28 14                    jump @3585
      :                          @3584
 49175: d8 87 09                 a2 = a0 <u a1
 49178: c8 97 07                 a0 = a0 + a2
 49181: d8 78 0a                 a3 = a1 <u a0
 49184: 85 aa 01                 a3 = a3 ^ 0x1
 49187: d2 a9 09                 a2 = a2 & a3
 49190: 52 09 f1                 jump @3584 if a2 != 0
      :                          @3585
 49193: ae 28 c1 00              jump @3616 if a1 >=u t0
      :                          @3586
 49197: 33 03 18                 t1 = 0x18
 49200: ca 38 07                 a0 = a1 * t1
 49203: c8 47 07                 a0 = a0 + t2
 49206: 82 79 10                 a2 = u64 [a0 + 0x10]
 49209: ae 95 b2 00              jump @3617 if s0 >=u a2
      :                          @3587
 49213: 64 20                    ra = t0
 49215: 82 77 08                 a0 = u64 [a0 + 0x8]
 49218: 33 09                    a2 = 0
 49220: 97 55 03                 s0 = s0 << 0x3
 49223: c8 57 07                 a0 = a0 + s0
 49226: 82 77                    a0 = u64 [a0]
 49228: 33 0b c0 22 03           a4 = 0x322c0
 49233: 33 08 00 00 01           a1 = 0x10000
 49238: c8 8b 0b                 a4 = a4 + a1
 49241: 33 02 00 20              t0 = 0x2000
 49245: 28 0b                    jump @3589
      :                          @3588
 49247: 95 99 01                 a2 = a2 + 0x1
 49250: 82 14 28                 t2 = u64 [sp + 0x28]
 49253: aa 09 33                 jump @3598 if a2 == ra
      :                          @3589
 49256: ca 39 0c                 a5 = a2 * t1
 49259: c8 4c 0c                 a5 = a5 + t2
 49262: 82 c5                    s0 = u64 [a5]
 49264: 51 05 ef                 jump @3588 if s0 == 0
      :                          @3590
 49267: ac 52 ec                 jump @3588 if t0 <u s0
      :                          @3591
 49270: 82 c6 08                 s1 = u64 [a5 + 0x8]
 49273: 97 54 03                 t2 = s0 << 0x3
 49276: 01                       fallthrough
      :                          @3592
 49277: 82 bc                    a5 = u64 [a4]
 49279: c9 cb 08                 a1 = a4 - a5
 49282: ab 68 dd                 jump @3588 if a1 != s1
      :                          @3593
 49285: c9 4c 08                 a1 = a5 - t2
 49288: 01                       fallthrough
      :                          @3594
 49289: 82 ba                    a3 = u64 [a4]
 49291: ab ca f2                 jump @3592 if a3 != a5
      :                          @3595
 49294: 7b b8                    u64 [a4] = a1
 49296: 33 05                    s0 = 0
 49298: 01                       fallthrough
      :                          @3596
 49299: ab ca ea                 jump @3592 if a3 != a5
      :                          @3597
 49302: 28 c9                    jump @3588
      :                          @3598
 49304: 82 19 48                 a2 = u64 [sp + 0x48]
 49307: 51 09 2c                 jump @3605 if a2 == 0
      :                          @3599
 49310: 33 08 aa 0a              a1 = 0xaaa
 49314: ac 98 25                 jump @3605 if a1 <u a2
      :                          @3600
 49317: 96 99 e8                 a2 = a2 * 0xffffffffffffffe8
 49320: 33 0a c0 22 03           a3 = 0x322c0
 49325: 95 aa 00 00 01           a3 = a3 + 0x10000
 49330: 01                       fallthrough
      :                          @3601
 49331: 82 ab                    a4 = u64 [a3]
 49333: c9 ba 08                 a1 = a3 - a4
 49336: ab 48 0f                 jump @3605 if a1 != t2
      :                          @3602
 49339: c8 9b 08                 a1 = a4 + a2
 49342: 01                       fallthrough
      :                          @3603
 49343: 82 ac                    a5 = u64 [a3]
 49345: ab bc f2                 jump @3601 if a5 != a4
      :                          @3604
 49348: 7b a8                    u64 [a3] = a1
 49350: 01                       fallthrough
      :                          @3605
 49351: 82 10 88 00              ra = u64 [sp + 0x88]
 49355: 82 15 80 00              s0 = u64 [sp + 0x80]
 49359: 82 16 78                 s1 = u64 [sp + 0x78]
 49362: 95 11 90 00              sp = sp + 0x90
 49366: 32 00                    ret
      :                          @3606
 49368: 00                       trap
      :                          @3607
 49369: 00                       trap
      :                          @3608
 49370: 00                       trap
      :                          @3609
 49371: 00                       trap
      :                          @3610
 49372: 00                       trap
      :                          @3611
 49373: 00                       trap
      :                          @3612
 49374: 00                       trap
      :                          @3613
 49375: 00                       trap
      :                          @3614
 49376: 82 18 40                 a1 = u64 [sp + 0x40]
 49379: 82 8b                    a4 = u64 [a1]
 49381: 53 1b 02 08              jump @3619 if a4 <u 2
      :                          @3615
 49385: 00                       trap
      :                          @3616
 49386: 00                       trap
      :                          @3617
 49387: 00                       trap
      :                          @3618
 49388: 00                       trap
      :                          @3619
 49389: 00                       trap
      :                          @3620
 49390: 00                       trap
      :                          @3621
 49391: 00                       trap
      :                          @3622
 49392: 95 11 60 ff              sp = sp + 0xffffffffffffff60
 49396: 7b 10 98 00              u64 [sp + 0x98] = ra
 49400: 7b 15 90 00              u64 [sp + 0x90] = s0
 49404: 7b 16 88 00              u64 [sp + 0x88] = s1
 49408: 64 a5                    s0 = a3
 49410: 7b 19 50                 u64 [sp + 0x50] = a2
 49413: 7b 17 08                 u64 [sp + 0x8] = a0
 49416: 95 a9 01                 a2 = a3 + 0x1
 49419: 33 06 08                 s1 = 0x8
 49422: 7b 18 10                 u64 [sp + 0x10] = a1
 49425: 51 09 68                 jump @3631 if a2 == 0
      :                          @3623
 49428: 98 97 3c                 a0 = a2 >> 0x3c
 49431: 52 07 5f 03              jump @3705 if a0 != 0
      :                          @3624
 49435: 88 72 01                 t0 = a0 <u 0x1
 49438: 7b 19 48                 u64 [sp + 0x48] = a2
 49441: 97 99 03                 a2 = a2 << 0x3
 49444: 97 22 03                 t0 = t0 << 0x3
 49447: 33 04 c0 22 03           t2 = 0x322c0
 49452: 33 03 00 00 01           t1 = 0x10000
 49457: c8 34 00                 ra = t2 + t1
 49460: 01                       fallthrough
      :                          @3625
 49461: 82 07                    a0 = u64 [ra]
 49463: c8 97 0c                 a5 = a0 + a2
 49466: ac 7c 39 03              jump @3702 if a5 <u a0
      :                          @3626
 49470: c8 2c 08                 a1 = a5 + t0
 49473: d8 c8 0a                 a3 = a1 <u a5
 49476: d8 83 08                 a1 = t1 <u a1
 49479: d4 a8 08                 a1 = a1 | a3
 49482: 52 08 29 03              jump @3702 if a1 != 0
      :                          @3627
 49486: c9 c4 08                 a1 = t2 - a5
 49489: c8 38 08                 a1 = a1 + t1
 49492: 84 8a 07                 a3 = a1 & 0x7
 49495: c8 ac 0c                 a5 = a5 + a3
 49498: 01                       fallthrough
      :                          @3628
 49499: 82 06                    s1 = u64 [ra]
 49501: ab 76 d8                 jump @3625 if s1 != a0
      :                          @3629
 49504: 7b 0c                    u64 [ra] = a5
 49506: 33 0b                    a4 = 0
 49508: c9 a8 06                 s1 = a1 - a3
 49511: 64 67                    a0 = s1
 49513: 33 08                    a1 = 0
 49515: 50 20 f0 02 ab 4a 02     ra = 752, jump @13687
      :                          @3630 [@dyn 376]
 49522: 82 18 10                 a1 = u64 [sp + 0x10]
 49525: 82 19 48                 a2 = u64 [sp + 0x48]
 49528: 01                       fallthrough
      :                          @3631
 49529: 7b 19 70                 u64 [sp + 0x70] = a2
 49532: 7b 16 78                 u64 [sp + 0x78] = s1
 49535: 7b 19 80 00              u64 [sp + 0x80] = a2
 49539: 95 89 01                 a2 = a1 + 0x1
 49542: 95 17 58                 a0 = sp + 0x58
 49545: 95 18 70                 a1 = sp + 0x70
 49548: 50 20 f2 02 65 98        ra = 754, jump @1721
      :                          @3632 [@dyn 377]
 49554: 82 18 10                 a1 = u64 [sp + 0x10]
 49557: 82 16 68                 s1 = u64 [sp + 0x68]
 49560: 82 14 60                 t2 = u64 [sp + 0x60]
 49563: 33 07                    a0 = 0
 49565: 33 02 18                 t0 = 0x18
 49568: 01                       fallthrough
      :                          @3633
 49569: ae 67 cf 02              jump @3699 if a0 >=u s1
      :                          @3634
 49573: ca 27 09                 a2 = a0 * t0
 49576: c8 49 09                 a2 = a2 + t2
 49579: 82 9a 10                 a3 = u64 [a2 + 0x10]
 49582: 51 0a b5 02              jump @3694 if a3 == 0
      :                          @3635
 49586: d8 87 0a                 a3 = a0 <u a1
 49589: c8 a7 0b                 a4 = a0 + a3
 49592: 82 99 08                 a2 = u64 [a2 + 0x8]
 49595: 85 aa 01                 a3 = a3 ^ 0x1
 49598: d8 b8 0c                 a5 = a1 <u a4
 49601: d4 ca 0a                 a3 = a3 | a5
 49604: 7b 97                    u64 [a2] = a0
 49606: 64 b7                    a0 = a4
 49608: 51 0a d9                 jump @3633 if a3 == 0
      :                          @3636
 49611: 33 07                    a0 = 0
 49613: 01                       fallthrough
      :                          @3637
 49614: 82 49 10                 a2 = u64 [t2 + 0x10]
 49617: ae 97 93 02              jump @3695 if a0 >=u a2
      :                          @3638
 49621: d8 57 0c                 a5 = a0 <u s0
 49624: 82 49 08                 a2 = u64 [t2 + 0x8]
 49627: 85 ca 01                 a3 = a5 ^ 0x1
 49630: 97 7b 03                 a4 = a0 << 0x3
 49633: c8 7c 0c                 a5 = a5 + a0
 49636: c8 b9 09                 a2 = a2 + a4
 49639: d8 c5 0b                 a4 = s0 <u a5
 49642: d4 ba 0a                 a3 = a3 | a4
 49645: 7b 97                    u64 [a2] = a0
 49647: 64 c7                    a0 = a5
 49649: 51 0a dd                 jump @3637 if a3 == 0
      :                          @3639
 49652: 7b 14 38                 u64 [sp + 0x38] = t2
 49655: 51 08 20                 jump @3643 if a1 == 0
      :                          @3640
 49658: 33 07 01                 a0 = 0x1
 49661: 51 05 08                 jump @3642 if s0 == 0
      :                          @3641
 49664: 7b 16                    u64 [sp] = s1
 49666: 28 9d 00                 jump @3657
      :                          @3642
 49669: d8 87 0a                 a3 = a0 <u a1
 49672: c8 a7 07                 a0 = a0 + a3
 49675: d8 78 09                 a2 = a1 <u a0
 49678: 85 99 01                 a2 = a2 ^ 0x1
 49681: d2 a9 09                 a2 = a2 & a3
 49684: 52 09 f1                 jump @3642 if a2 != 0
      :                          @3643
 49687: ae 68 5a 02              jump @3700 if a1 >=u s1
      :                          @3644
 49691: 33 03 18                 t1 = 0x18
 49694: ca 38 07                 a0 = a1 * t1
 49697: c8 47 07                 a0 = a0 + t2
 49700: 82 79 10                 a2 = u64 [a0 + 0x10]
 49703: ae 95 4b 02              jump @3701 if s0 >=u a2
      :                          @3645
 49707: 64 60                    ra = s1
 49709: 82 77 08                 a0 = u64 [a0 + 0x8]
 49712: 33 09                    a2 = 0
 49714: 97 5a 03                 a3 = s0 << 0x3
 49717: c8 a7 07                 a0 = a0 + a3
 49720: 82 77                    a0 = u64 [a0]
 49722: 33 0a c0 22 03           a3 = 0x322c0
 49727: 95 ab 00 00 01           a4 = a3 + 0x10000
 49732: 33 02 00 20              t0 = 0x2000
 49736: 28 0c                    jump @3647
      :                          @3646
 49738: 95 99 01                 a2 = a2 + 0x1
 49741: 82 14 38                 t2 = u64 [sp + 0x38]
 49744: aa 09 ce 01              jump @3682 if a2 == ra
      :                          @3647
 49748: ca 39 0c                 a5 = a2 * t1
 49751: c8 4c 0c                 a5 = a5 + t2
 49754: 82 c6                    s1 = u64 [a5]
 49756: 51 06 ee                 jump @3646 if s1 == 0
      :                          @3648
 49759: ac 62 eb                 jump @3646 if t0 <u s1
      :                          @3649
 49762: 82 cc 08                 a5 = u64 [a5 + 0x8]
 49765: 97 64 03                 t2 = s1 << 0x3
 49768: 01                       fallthrough
      :                          @3650
 49769: 82 b5                    s0 = u64 [a4]
 49771: c9 5b 0a                 a3 = a4 - s0
 49774: ab ca dc                 jump @3646 if a3 != a5
      :                          @3651
 49777: c9 45 0a                 a3 = s0 - t2
 49780: 01                       fallthrough
      :                          @3652
 49781: 82 b8                    a1 = u64 [a4]
 49783: ab 58 f2                 jump @3650 if a1 != s0
      :                          @3653
 49786: 7b ba                    u64 [a4] = a3
 49788: 33 06                    s1 = 0
 49790: 01                       fallthrough
      :                          @3654
 49791: ab 58 ea                 jump @3650 if a1 != s0
      :                          @3655
 49794: 28 c8                    jump @3646
      :                          @3656
 49796: 82 18 10                 a1 = u64 [sp + 0x10]
 49799: 82 17 18                 a0 = u64 [sp + 0x18]
 49802: d8 87 0a                 a3 = a0 <u a1
 49805: c8 a7 07                 a0 = a0 + a3
 49808: d8 78 09                 a2 = a1 <u a0
 49811: e0 9a 09                 a2 = a3 & ~a2
 49814: 82 14 38                 t2 = u64 [sp + 0x38]
 49817: 82 16                    s1 = u64 [sp]
 49819: 51 09 7c ff              jump @3643 if a2 == 0
      :                          @3657
 49823: 95 79 ff                 a2 = a0 + 0xffffffffffffffff
 49826: ae 89 c3 01              jump @3696 if a2 >=u a1
      :                          @3658
 49830: ae 69 c0 01              jump @3697 if a2 >=u s1
      :                          @3659
 49834: 96 7a 18                 a3 = a0 * 0x18
 49837: c8 4a 0a                 a3 = a3 + t2
 49840: 95 a8 f8                 a1 = a3 + 0xfffffffffffffff8
 49843: 7b 18 48                 u64 [sp + 0x48] = a1
 49846: ae 67 b1 01              jump @3698 if a0 >=u s1
      :                          @3660
 49850: 82 18 08                 a1 = u64 [sp + 0x8]
 49853: c8 89 09                 a2 = a2 + a1
 49856: 7c 94                    t2 = u8 [a2]
 49858: 95 a9 f0                 a2 = a3 + 0xfffffffffffffff0
 49861: 7b 19 40                 u64 [sp + 0x40] = a2
 49864: 95 a2 10                 t0 = a3 + 0x10
 49867: 95 a3 08                 t1 = a3 + 0x8
 49870: 7b 17 18                 u64 [sp + 0x18] = a0
 49873: 54 17 01 d9 00           jump @3674 if a0 <=u 1
      :                          @3661
 49878: c8 87 09                 a2 = a0 + a1
 49881: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
 49884: 7b 19 30                 u64 [sp + 0x30] = a2
 49887: 95 a7 e0                 a0 = a3 + 0xffffffffffffffe0
 49890: 7b 17 28                 u64 [sp + 0x28] = a0
 49893: 95 a7 d8                 a0 = a3 + 0xffffffffffffffd8
 49896: 7b 17 20                 u64 [sp + 0x20] = a0
 49899: 33 09 01                 a2 = 0x1
 49902: 28 14                    jump @3663
      :                          @3662
 49904: d8 59 07                 a0 = a2 <u s0
 49907: c8 79 09                 a2 = a2 + a0
 49910: d8 95 08                 a1 = s0 <u a2
 49913: 85 88 01                 a1 = a1 ^ 0x1
 49916: d2 87 07                 a0 = a0 & a1
 49919: 51 07 85                 jump @3656 if a0 == 0
      :                          @3663
 49922: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
 49925: ae 5a 5b 01              jump @3691 if a3 >=u s0
      :                          @3664
 49929: 82 17 48                 a0 = u64 [sp + 0x48]
 49932: 82 7b                    a4 = u64 [a0]
 49934: ae b9 67 01              jump @3704 if a2 >=u a4
      :                          @3665
 49938: 82 2c                    a5 = u64 [t0]
 49940: ae ca 4d 01              jump @3692 if a3 >=u a5
      :                          @3666
 49944: ae ba 47 01              jump @3690 if a3 >=u a4
      :                          @3667
 49948: ae c9 46 01              jump @3693 if a2 >=u a5
      :                          @3668
 49952: 82 17 40                 a0 = u64 [sp + 0x40]
 49955: 82 77                    a0 = u64 [a0]
 49957: 97 90 03                 ra = a2 << 0x3
 49960: c8 07 0b                 a4 = a0 + ra
 49963: 82 36                    s1 = u64 [t1]
 49965: 82 b8                    a1 = u64 [a4]
 49967: 97 ab 03                 a4 = a3 << 0x3
 49970: c8 b7 07                 a0 = a0 + a4
 49973: c8 6b 0b                 a4 = a4 + s1
 49976: 64 5c                    a5 = s0
 49978: 82 b5                    s0 = u64 [a4]
 49980: 82 1b 50                 a4 = u64 [sp + 0x50]
 49983: c8 ba 0a                 a3 = a3 + a4
 49986: 7c ab                    a4 = u8 [a3]
 49988: 95 88 01                 a1 = a1 + 0x1
 49991: 95 55 01                 s0 = s0 + 0x1
 49994: 82 77                    a0 = u64 [a0]
 49996: e6 58 08                 a1 = minu(a1, s0)
 49999: 64 c5                    s0 = a5
 50001: d3 b4 0a                 a3 = t2 ^ a4
 50004: 8e aa                    a3 = a3 >u 0
 50006: c8 a7 07                 a0 = a0 + a3
 50009: e6 78 07                 a0 = minu(a1, a0)
 50012: c8 06 06                 s1 = s1 + ra
 50015: 7b 67                    u64 [s1] = a0
 50017: 53 19 02 8f              jump @3662 if a2 <u 2
      :                          @3669
 50021: 95 9a fe                 a3 = a2 + 0xfffffffffffffffe
 50024: 82 17 50                 a0 = u64 [sp + 0x50]
 50027: c8 a7 07                 a0 = a0 + a3
 50030: 7c 77                    a0 = u8 [a0]
 50032: ab 74 80                 jump @3662 if t2 != a0
      :                          @3670
 50035: 82 17 30                 a0 = u64 [sp + 0x30]
 50038: 7c 77                    a0 = u8 [a0]
 50040: ab b7 78 ff              jump @3662 if a0 != a4
      :                          @3671
 50044: 82 2b                    a4 = u64 [t0]
 50046: ae b9 f7 00              jump @3704 if a2 >=u a4
      :                          @3672
 50050: 82 17 28                 a0 = u64 [sp + 0x28]
 50053: 82 7b                    a4 = u64 [a0]
 50055: ae ba d8 00              jump @3690 if a3 >=u a4
      :                          @3673
 50059: 82 37                    a0 = u64 [t1]
 50061: 82 18 20                 a1 = u64 [sp + 0x20]
 50064: 82 88                    a1 = u64 [a1]
 50066: c8 07 07                 a0 = a0 + ra
 50069: 97 aa 03                 a3 = a3 << 0x3
 50072: c8 a8 08                 a1 = a1 + a3
 50075: 82 88                    a1 = u64 [a1]
 50077: 82 7a                    a3 = u64 [a0]
 50079: 95 88 01                 a1 = a1 + 0x1
 50082: e6 8a 08                 a1 = minu(a3, a1)
 50085: 7b 78                    u64 [a0] = a1
 50087: 28 49 ff                 jump @3662
      :                          @3674
 50090: 33 09 01                 a2 = 0x1
 50093: 01                       fallthrough
      :                          @3675
 50094: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
 50097: ae 5a af 00              jump @3691 if a3 >=u s0
      :                          @3676
 50101: 82 17 48                 a0 = u64 [sp + 0x48]
 50104: 82 7b                    a4 = u64 [a0]
 50106: ae b9 bb 00              jump @3704 if a2 >=u a4
      :                          @3677
 50110: 82 2c                    a5 = u64 [t0]
 50112: ae ca a1 00              jump @3692 if a3 >=u a5
      :                          @3678
 50116: ae ba 9b 00              jump @3690 if a3 >=u a4
      :                          @3679
 50120: ae c9 9a 00              jump @3693 if a2 >=u a5
      :                          @3680
 50124: 82 17 40                 a0 = u64 [sp + 0x40]
 50127: 82 7b                    a4 = u64 [a0]
 50129: 97 9c 03                 a5 = a2 << 0x3
 50132: c8 cb 06                 s1 = a4 + a5
 50135: 82 30                    ra = u64 [t1]
 50137: 82 66                    s1 = u64 [s1]
 50139: 97 a7 03                 a0 = a3 << 0x3
 50142: c8 7b 0b                 a4 = a4 + a0
 50145: c8 07 07                 a0 = a0 + ra
 50148: 82 77                    a0 = u64 [a0]
 50150: 82 18 50                 a1 = u64 [sp + 0x50]
 50153: c8 8a 0a                 a3 = a3 + a1
 50156: 7c aa                    a3 = u8 [a3]
 50158: 95 66 01                 s1 = s1 + 0x1
 50161: 95 77 01                 a0 = a0 + 0x1
 50164: 82 bb                    a4 = u64 [a4]
 50166: e6 76 07                 a0 = minu(s1, a0)
 50169: d3 a4 0a                 a3 = t2 ^ a3
 50172: 8e aa                    a3 = a3 >u 0
 50174: c8 ba 0a                 a3 = a3 + a4
 50177: e6 a7 07                 a0 = minu(a0, a3)
 50180: d8 59 0a                 a3 = a2 <u s0
 50183: c8 a9 09                 a2 = a2 + a3
 50186: c8 0c 0c                 a5 = a5 + ra
 50189: d8 95 0b                 a4 = s0 <u a2
 50192: 85 bb 01                 a4 = a4 ^ 0x1
 50195: d2 ba 0a                 a3 = a3 & a4
 50198: 7b c7                    u64 [a5] = a0
 50200: 52 0a 96                 jump @3675 if a3 != 0
      :                          @3681
 50203: 28 69 fe                 jump @3656
      :                          @3682
 50206: 82 18 58                 a1 = u64 [sp + 0x58]
 50209: 51 08 2c                 jump @3689 if a1 == 0
      :                          @3683
 50212: 33 09 aa 0a              a2 = 0xaaa
 50216: ac 89 25                 jump @3689 if a2 <u a1
      :                          @3684
 50219: 96 88 e8                 a1 = a1 * 0xffffffffffffffe8
 50222: 33 09 c0 22 03           a2 = 0x322c0
 50227: 95 99 00 00 01           a2 = a2 + 0x10000
 50232: 01                       fallthrough
      :                          @3685
 50233: 82 9a                    a3 = u64 [a2]
 50235: c9 a9 0b                 a4 = a2 - a3
 50238: ab 4b 0f                 jump @3689 if a4 != t2
      :                          @3686
 50241: c8 8a 0b                 a4 = a3 + a1
 50244: 01                       fallthrough
      :                          @3687
 50245: 82 9c                    a5 = u64 [a2]
 50247: ab ac f2                 jump @3685 if a5 != a3
      :                          @3688
 50250: 7b 9b                    u64 [a2] = a4
 50252: 01                       fallthrough
      :                          @3689
 50253: 82 10 98 00              ra = u64 [sp + 0x98]
 50257: 82 15 90 00              s0 = u64 [sp + 0x90]
 50261: 82 16 88 00              s1 = u64 [sp + 0x88]
 50265: 95 11 a0 00              sp = sp + 0xa0
 50269: 32 00                    ret
      :                          @3690
 50271: 00                       trap
      :                          @3691
 50272: 00                       trap
      :                          @3692
 50273: 00                       trap
      :                          @3693
 50274: 00                       trap
      :                          @3694
 50275: 00                       trap
      :                          @3695
 50276: 00                       trap
      :                          @3696
 50277: 00                       trap
      :                          @3697
 50278: 00                       trap
      :                          @3698
 50279: 82 18 48                 a1 = u64 [sp + 0x48]
 50282: 82 8b                    a4 = u64 [a1]
 50284: 53 1b 02 08              jump @3703 if a4 <u 2
      :                          @3699
 50288: 00                       trap
      :                          @3700
 50289: 00                       trap
      :                          @3701
 50290: 00                       trap
      :                          @3702
 50291: 00                       trap
      :                          @3703
 50292: 00                       trap
      :                          @3704
 50293: 00                       trap
      :                          @3705
 50294: 00                       trap
      :                          @3706
 50295: 95 11 08 ff              sp = sp + 0xffffffffffffff08
 50299: 7b 10 f0 00              u64 [sp + 0xf0] = ra
 50303: 7b 15 e8 00              u64 [sp + 0xe8] = s0
 50307: 7b 16 e0 00              u64 [sp + 0xe0] = s1
 50311: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
 50314: 7b 17 40                 u64 [sp + 0x40] = a0
 50317: 51 09 68 04              jump @3790 if a2 == 0
      :                          @3707
 50321: 98 97 3c                 a0 = a2 >> 0x3c
 50324: 52 07 70 04              jump @3792 if a0 != 0
      :                          @3708
 50328: 7b 18 78                 u64 [sp + 0x78] = a1
 50331: 88 72 01                 t0 = a0 <u 0x1
 50334: 7b 19 10                 u64 [sp + 0x10] = a2
 50337: 97 99 03                 a2 = a2 << 0x3
 50340: 97 22 03                 t0 = t0 << 0x3
 50343: 33 04 c0 22 03           t2 = 0x322c0
 50348: 33 03 00 00 01           t1 = 0x10000
 50353: c8 34 0b                 a4 = t2 + t1
 50356: 01                       fallthrough
      :                          @3709
 50357: 82 b6                    s1 = u64 [a4]
 50359: c8 96 0c                 a5 = s1 + a2
 50362: ac 6c 3a 04              jump @3789 if a5 <u s1
      :                          @3710
 50366: c8 2c 0a                 a3 = a5 + t0
 50369: d8 ca 05                 s0 = a3 <u a5
 50372: d8 a3 0a                 a3 = t1 <u a3
 50375: d4 5a 0a                 a3 = a3 | s0
 50378: 52 0a 2a 04              jump @3789 if a3 != 0
      :                          @3711
 50382: c9 c4 05                 s0 = t2 - a5
 50385: c8 35 05                 s0 = s0 + t1
 50388: 84 5a 07                 a3 = s0 & 0x7
 50391: c8 ac 0c                 a5 = a5 + a3
 50394: 01                       fallthrough
      :                          @3712
 50395: 82 b7                    a0 = u64 [a4]
 50397: ab 67 d8                 jump @3709 if a0 != s1
      :                          @3713
 50400: 7b bc                    u64 [a4] = a5
 50402: c9 a5 06                 s1 = s0 - a3
 50405: 64 67                    a0 = s1
 50407: 33 08                    a1 = 0
 50409: 50 20 f4 02 2d 47 02     ra = 756, jump @13687
      :                          @3714 [@dyn 378]
 50416: 82 15 10                 s0 = u64 [sp + 0x10]
 50419: 7b 15 c8 00              u64 [sp + 0xc8] = s0
 50423: 7b 16 d0 00              u64 [sp + 0xd0] = s1
 50427: 7b 15 d8 00              u64 [sp + 0xd8] = s0
 50431: 95 17 b0 00              a0 = sp + 0xb0
 50435: 95 18 c8 00              a1 = sp + 0xc8
 50439: 64 59                    a2 = s0
 50441: 50 20 f6 02 e8 94        ra = 758, jump @1721
      :                          @3715 [@dyn 379]
 50447: 82 18 c0 00              a1 = u64 [sp + 0xc0]
 50451: 55 15 02 bc 00           jump @3737 if s0 >=u 2
      :                          @3716
 50456: 82 17 78                 a0 = u64 [sp + 0x78]
 50459: 51 08 e8 03              jump @3791 if a1 == 0
      :                          @3717
 50463: 82 1a b8 00              a3 = u64 [sp + 0xb8]
 50467: 82 a9 10                 a2 = u64 [a3 + 0x10]
 50470: 95 77 fe                 a0 = a0 + 0xfffffffffffffffe
 50473: ae 97 75 03              jump @3772 if a0 >=u a2
      :                          @3718
 50477: 64 a2                    t0 = a3
 50479: 82 a9 08                 a2 = u64 [a3 + 0x8]
 50482: 33 00                    ra = 0
 50484: 97 77 03                 a0 = a0 << 0x3
 50487: c8 97 07                 a0 = a0 + a2
 50490: 82 77                    a0 = u64 [a0]
 50492: 7b 17 a8 00              u64 [sp + 0xa8] = a0
 50496: 33 03 18                 t1 = 0x18
 50499: 33 0a c0 22 03           a3 = 0x322c0
 50504: 95 ab 00 00 01           a4 = a3 + 0x10000
 50509: 33 07 00 20              a0 = 0x2000
 50513: 28 08                    jump @3720
      :                          @3719
 50515: 95 00 01                 ra = ra + 0x1
 50518: aa 80 33                 jump @3729 if ra == a1
      :                          @3720
 50521: ca 30 0c                 a5 = ra * t1
 50524: c8 2c 0c                 a5 = a5 + t0
 50527: 82 c6                    s1 = u64 [a5]
 50529: 51 06 f2                 jump @3719 if s1 == 0
      :                          @3721
 50532: ac 67 ef                 jump @3719 if a0 <u s1
      :                          @3722
 50535: 82 cc 08                 a5 = u64 [a5 + 0x8]
 50538: 97 64 03                 t2 = s1 << 0x3
 50541: 01                       fallthrough
      :                          @3723
 50542: 82 b5                    s0 = u64 [a4]
 50544: c9 5b 0a                 a3 = a4 - s0
 50547: ab ca e0                 jump @3719 if a3 != a5
      :                          @3724
 50550: c9 45 0a                 a3 = s0 - t2
 50553: 01                       fallthrough
      :                          @3725
 50554: 82 b9                    a2 = u64 [a4]
 50556: ab 59 f2                 jump @3723 if a2 != s0
      :                          @3726
 50559: 7b ba                    u64 [a4] = a3
 50561: 33 06                    s1 = 0
 50563: 01                       fallthrough
      :                          @3727
 50564: ab 59 ea                 jump @3723 if a2 != s0
      :                          @3728
 50567: 28 cc                    jump @3719
      :                          @3729
 50569: 82 18 b0 00              a1 = u64 [sp + 0xb0]
 50573: 51 08 2c                 jump @3736 if a1 == 0
      :                          @3730
 50576: 33 09 aa 0a              a2 = 0xaaa
 50580: ac 89 25                 jump @3736 if a2 <u a1
      :                          @3731
 50583: 96 88 e8                 a1 = a1 * 0xffffffffffffffe8
 50586: 33 09 c0 22 03           a2 = 0x322c0
 50591: 95 99 00 00 01           a2 = a2 + 0x10000
 50596: 01                       fallthrough
      :                          @3732
 50597: 82 9a                    a3 = u64 [a2]
 50599: c9 a9 0b                 a4 = a2 - a3
 50602: ab 2b 0f                 jump @3736 if a4 != t0
      :                          @3733
 50605: c8 8a 0b                 a4 = a3 + a1
 50608: 01                       fallthrough
      :                          @3734
 50609: 82 9c                    a5 = u64 [a2]
 50611: ab ac f2                 jump @3732 if a5 != a3
      :                          @3735
 50614: 7b 9b                    u64 [a2] = a4
 50616: 01                       fallthrough
      :                          @3736
 50617: 82 17 a8 00              a0 = u64 [sp + 0xa8]
 50621: 82 10 f0 00              ra = u64 [sp + 0xf0]
 50625: 82 15 e8 00              s0 = u64 [sp + 0xe8]
 50629: 82 16 e0 00              s1 = u64 [sp + 0xe0]
 50633: 95 11 f8 00              sp = sp + 0xf8
 50637: 32 00                    ret
      :                          @3737
 50639: 82 1a b8 00              a3 = u64 [sp + 0xb8]
 50643: 82 17 40                 a0 = u64 [sp + 0x40]
 50646: 95 77 08                 a0 = a0 + 0x8
 50649: 7b 17 a8 00              u64 [sp + 0xa8] = a0
 50653: 95 a7 28                 a0 = a3 + 0x28
 50656: 7b 17 38                 u64 [sp + 0x38] = a0
 50659: 82 19 78                 a2 = u64 [sp + 0x78]
 50662: 7b 18 50                 u64 [sp + 0x50] = a1
 50665: 7b 1a 48                 u64 [sp + 0x48] = a3
 50668: ae 89 76 01              jump @3756 if a2 >=u a1
      :                          @3738
 50672: 9a 99 01                 a2 = 0x1 - a2
 50675: 7b 19 20                 u64 [sp + 0x20] = a2
 50678: 9a 87 01                 a0 = 0x1 - a1
 50681: 7b 17 18                 u64 [sp + 0x18] = a0
 50684: 33 0c 02                 a5 = 0x2
 50687: 82 1b 10                 a4 = u64 [sp + 0x10]
 50690: 01                       fallthrough
      :                          @3739
 50691: 64 c7                    a0 = a5
 50693: 33 0c                    a5 = 0
 50695: 64 79                    a2 = a0
 50697: d8 b7 07                 a0 = a0 <u a4
 50700: 7b 17                    u64 [sp] = a0
 50702: c8 97 07                 a0 = a0 + a2
 50705: 7b 17 08                 u64 [sp + 0x8] = a0
 50708: c9 9b 0b                 a4 = a4 - a2
 50711: 7b 1b 28                 u64 [sp + 0x28] = a4
 50714: 7b 19 30                 u64 [sp + 0x30] = a2
 50717: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 50720: 7b 19 58                 u64 [sp + 0x58] = a2
 50723: 28 1e                    jump @3741
      :                          @3740
 50725: 82 18 28                 a1 = u64 [sp + 0x28]
 50728: d8 8c 07                 a0 = a5 <u a1
 50731: c8 7c 0c                 a5 = a5 + a0
 50734: d8 c8 08                 a1 = a1 <u a5
 50737: 85 88 01                 a1 = a1 ^ 0x1
 50740: d2 87 07                 a0 = a0 & a1
 50743: 82 18 50                 a1 = u64 [sp + 0x50]
 50746: 82 1a 48                 a3 = u64 [sp + 0x48]
 50749: 51 07 0d 01              jump @3754 if a0 == 0
      :                          @3741
 50753: ae 8c af 02              jump @3785 if a5 >=u a1
      :                          @3742
 50757: 96 c5 18                 s0 = a5 * 0x18
 50760: c8 5a 0a                 a3 = a3 + s0
 50763: 82 ab 10                 a4 = u64 [a3 + 0x10]
 50766: 82 17 30                 a0 = u64 [sp + 0x30]
 50769: c8 c7 07                 a0 = a0 + a5
 50772: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 50775: ae b8 4b 02              jump @3776 if a1 >=u a4
      :                          @3743
 50779: 7b 17 a0 00              u64 [sp + 0xa0] = a0
 50783: 82 a7 08                 a0 = u64 [a3 + 0x8]
 50786: 97 80 03                 ra = a1 << 0x3
 50789: c8 07 07                 a0 = a0 + ra
 50792: 49 07 ff                 u64 [a0 + 0] = 0xffffffffffffffff
 50795: 7b 18 98 00              u64 [sp + 0x98] = a1
 50799: ae 8c b6                 jump @3740 if a5 >=u a1
      :                          @3744
 50802: 95 a7 10                 a0 = a3 + 0x10
 50805: 7b 17 90 00              u64 [sp + 0x90] = a0
 50809: 82 18 78                 a1 = u64 [sp + 0x78]
 50812: ae 8c 4f 02              jump @3782 if a5 >=u a1
      :                          @3745
 50816: 33 09                    a2 = 0
 50818: 95 aa 08                 a3 = a3 + 0x8
 50821: 7b 1a 70                 u64 [sp + 0x70] = a3
 50824: 97 c3 03                 t1 = a5 << 0x3
 50827: 82 18 40                 a1 = u64 [sp + 0x40]
 50830: c8 38 07                 a0 = a1 + t1
 50833: 7b 17 68                 u64 [sp + 0x68] = a0
 50836: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 50840: 97 77 03                 a0 = a0 << 0x3
 50843: c8 87 07                 a0 = a0 + a1
 50846: 7b 17 60                 u64 [sp + 0x60] = a0
 50849: 82 17 20                 a0 = u64 [sp + 0x20]
 50852: c8 c7 07                 a0 = a0 + a5
 50855: 7b 17 80 00              u64 [sp + 0x80] = a0
 50859: 82 17 18                 a0 = u64 [sp + 0x18]
 50862: c8 c7 07                 a0 = a0 + a5
 50865: 7b 17 88 00              u64 [sp + 0x88] = a0
 50869: 82 18 38                 a1 = u64 [sp + 0x38]
 50872: c8 85 05                 s0 = s0 + a1
 50875: 01                       fallthrough
      :                          @3746
 50876: 82 17 90 00              a0 = u64 [sp + 0x90]
 50880: 82 7b                    a4 = u64 [a0]
 50882: 64 c7                    a0 = a5
 50884: c8 9c 0c                 a5 = a5 + a2
 50887: ae bc 2a 02              jump @3786 if a5 >=u a4
      :                          @3747
 50891: 82 1c 88 00              a5 = u64 [sp + 0x88]
 50895: c8 9c 0c                 a5 = a5 + a2
 50898: 51 0c cd 01              jump @3773 if a5 == 0
      :                          @3748
 50902: 82 56                    s1 = u64 [s0]
 50904: 82 1a 98 00              a3 = u64 [sp + 0x98]
 50908: ae 6a 16 02              jump @3787 if a3 >=u s1
      :                          @3749
 50912: 82 1c 80 00              a5 = u64 [sp + 0x80]
 50916: c8 9c 0c                 a5 = a5 + a2
 50919: 51 0c 0c 02              jump @3788 if a5 == 0
      :                          @3750
 50923: 82 18 78                 a1 = u64 [sp + 0x78]
 50926: 82 1c a0 00              a5 = u64 [sp + 0xa0]
 50930: ae 8c af 01              jump @3775 if a5 >=u a1
      :                          @3751
 50934: ae ba ad 01              jump @3777 if a3 >=u a4
      :                          @3752
 50938: 82 18 70                 a1 = u64 [sp + 0x70]
 50941: 82 8b                    a4 = u64 [a1]
 50943: 82 5c f8                 a5 = u64 [s0 + 0xfffffffffffffff8]
 50946: c8 3b 0a                 a3 = a4 + t1
 50949: 82 aa                    a3 = u64 [a3]
 50951: c8 0c 0c                 a5 = a5 + ra
 50954: 82 cc                    a5 = u64 [a5]
 50956: c8 ca 0a                 a3 = a3 + a5
 50959: 82 18 68                 a1 = u64 [sp + 0x68]
 50962: 82 8c                    a5 = u64 [a1]
 50964: 82 16 a8 00              s1 = u64 [sp + 0xa8]
 50968: c8 36 06                 s1 = s1 + t1
 50971: 82 18 60                 a1 = u64 [sp + 0x60]
 50974: 82 84                    t2 = u64 [a1]
 50976: 82 66                    s1 = u64 [s1]
 50978: c8 0b 0b                 a4 = a4 + ra
 50981: 82 b2                    t0 = u64 [a4]
 50983: ca 4c 0c                 a5 = a5 * t2
 50986: ca c6 0c                 a5 = s1 * a5
 50989: c8 ca 0a                 a3 = a3 + a5
 50992: e6 a2 0a                 a3 = minu(t0, a3)
 50995: 7b ba                    u64 [a4] = a3
 50997: 95 99 01                 a2 = a2 + 0x1
 51000: 95 33 08                 t1 = t1 + 0x8
 51003: 95 55 18                 s0 = s0 + 0x18
 51006: 64 7c                    a5 = a0
 51008: 82 17 58                 a0 = u64 [sp + 0x58]
 51011: ab 97 79 ff              jump @3746 if a0 != a2
      :                          @3753
 51015: 28 de fe                 jump @3740
      :                          @3754
 51018: 82 17                    a0 = u64 [sp]
 51020: 85 77 01                 a0 = a0 ^ 0x1
 51023: 82 1b 10                 a4 = u64 [sp + 0x10]
 51026: 82 1c 08                 a5 = u64 [sp + 0x8]
 51029: d8 cb 09                 a2 = a4 <u a5
 51032: d4 97 07                 a0 = a0 | a2
 51035: 51 07 a8 fe              jump @3739 if a0 == 0
      :                          @3755
 51039: 28 32 01                 jump @3771
      :                          @3756
 51042: 9a 87 01                 a0 = 0x1 - a1
 51045: 7b 17 80 00              u64 [sp + 0x80] = a0
 51049: 33 09 02                 a2 = 0x2
 51052: 82 1b 10                 a4 = u64 [sp + 0x10]
 51055: 01                       fallthrough
      :                          @3757
 51056: 33 0c                    a5 = 0
 51058: d8 b9 07                 a0 = a2 <u a4
 51061: 7b 17 30                 u64 [sp + 0x30] = a0
 51064: c8 97 07                 a0 = a0 + a2
 51067: 7b 17 58                 u64 [sp + 0x58] = a0
 51070: c9 9b 0b                 a4 = a4 - a2
 51073: 7b 1b 60                 u64 [sp + 0x60] = a4
 51076: 7b 19 68                 u64 [sp + 0x68] = a2
 51079: 28 24                    jump @3759
      :                          @3758
 51081: 82 1c 70                 a5 = u64 [sp + 0x70]
 51084: 82 18 60                 a1 = u64 [sp + 0x60]
 51087: d8 8c 07                 a0 = a5 <u a1
 51090: c8 7c 0c                 a5 = a5 + a0
 51093: d8 c8 08                 a1 = a1 <u a5
 51096: 85 88 01                 a1 = a1 ^ 0x1
 51099: d2 87 07                 a0 = a0 & a1
 51102: 82 18 50                 a1 = u64 [sp + 0x50]
 51105: 82 1a 48                 a3 = u64 [sp + 0x48]
 51108: 82 19 68                 a2 = u64 [sp + 0x68]
 51111: 51 07 d2 00              jump @3770 if a0 == 0
      :                          @3759
 51115: ae 8c 45 01              jump @3785 if a5 >=u a1
      :                          @3760
 51119: 96 c3 18                 t1 = a5 * 0x18
 51122: c8 3a 04                 t2 = a3 + t1
 51125: 82 4b 10                 a4 = u64 [t2 + 0x10]
 51128: c8 9c 00                 ra = a5 + a2
 51131: 95 0a ff                 a3 = ra + 0xffffffffffffffff
 51134: ae ba e5 00              jump @3777 if a3 >=u a4
      :                          @3761
 51138: 82 48 08                 a1 = u64 [t2 + 0x8]
 51141: 97 a2 03                 t0 = a3 << 0x3
 51144: c8 28 08                 a1 = a1 + t0
 51147: 49 08 ff                 u64 [a1 + 0] = 0xffffffffffffffff
 51150: 7b 1c 70                 u64 [sp + 0x70] = a5
 51153: ae ac b8                 jump @3758 if a5 >=u a3
      :                          @3762
 51156: 95 47 10                 a0 = t2 + 0x10
 51159: 7b 17 a0 00              u64 [sp + 0xa0] = a0
 51163: 82 18 78                 a1 = u64 [sp + 0x78]
 51166: ae 80 c6 00              jump @3778 if ra >=u a1
      :                          @3763
 51170: 95 44 08                 t2 = t2 + 0x8
 51173: 7b 14 98 00              u64 [sp + 0x98] = t2
 51177: 82 1c 70                 a5 = u64 [sp + 0x70]
 51180: 97 c8 03                 a1 = a5 << 0x3
 51183: 82 17 40                 a0 = u64 [sp + 0x40]
 51186: c8 87 09                 a2 = a0 + a1
 51189: 7b 19 90 00              u64 [sp + 0x90] = a2
 51193: 97 00 03                 ra = ra << 0x3
 51196: c8 07 07                 a0 = a0 + ra
 51199: 7b 17 88 00              u64 [sp + 0x88] = a0
 51203: 82 17 38                 a0 = u64 [sp + 0x38]
 51206: c8 73 03                 t1 = t1 + a0
 51209: 01                       fallthrough
      :                          @3764
 51210: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 51214: 82 7b                    a4 = u64 [a0]
 51216: ae bc e1 00              jump @3786 if a5 >=u a4
      :                          @3765
 51220: 82 16 80 00              s1 = u64 [sp + 0x80]
 51224: c8 c6 06                 s1 = s1 + a5
 51227: 51 06 84 00              jump @3773 if s1 == 0
      :                          @3766
 51231: 82 36                    s1 = u64 [t1]
 51233: ae 6a d1 00              jump @3787 if a3 >=u s1
      :                          @3767
 51237: ae ba 7e                 jump @3777 if a3 >=u a4
      :                          @3768
 51240: 82 17 98 00              a0 = u64 [sp + 0x98]
 51244: 82 7b                    a4 = u64 [a0]
 51246: 82 36 f8                 s1 = u64 [t1 + 0xfffffffffffffff8]
 51249: 64 a0                    ra = a3
 51251: c8 8b 0a                 a3 = a4 + a1
 51254: 82 aa                    a3 = u64 [a3]
 51256: c8 26 06                 s1 = s1 + t0
 51259: 82 66                    s1 = u64 [s1]
 51261: c8 6a 0a                 a3 = a3 + s1
 51264: 82 17 90 00              a0 = u64 [sp + 0x90]
 51268: 82 76                    s1 = u64 [a0]
 51270: 82 14 a8 00              t2 = u64 [sp + 0xa8]
 51274: c8 84 04                 t2 = t2 + a1
 51277: 82 17 88 00              a0 = u64 [sp + 0x88]
 51281: 82 75                    s0 = u64 [a0]
 51283: 82 49                    a2 = u64 [t2]
 51285: c8 2b 0b                 a4 = a4 + t0
 51288: 82 b7                    a0 = u64 [a4]
 51290: ca 56 06                 s1 = s1 * s0
 51293: ca 69 09                 a2 = a2 * s1
 51296: c8 a9 09                 a2 = a2 + a3
 51299: 64 0a                    a3 = ra
 51301: e6 97 07                 a0 = minu(a0, a2)
 51304: 7b b7                    u64 [a4] = a0
 51306: 95 cc 01                 a5 = a5 + 0x1
 51309: 95 88 08                 a1 = a1 + 0x8
 51312: 95 33 18                 t1 = t1 + 0x18
 51315: ab c0 97                 jump @3764 if ra != a5
      :                          @3769
 51318: 28 13 ff                 jump @3758
      :                          @3770
 51321: 82 17 30                 a0 = u64 [sp + 0x30]
 51324: 85 77 01                 a0 = a0 ^ 0x1
 51327: 82 1b 10                 a4 = u64 [sp + 0x10]
 51330: 82 1c 58                 a5 = u64 [sp + 0x58]
 51333: d8 cb 09                 a2 = a4 <u a5
 51336: d4 97 07                 a0 = a0 | a2
 51339: 64 c9                    a2 = a5
 51341: 51 07 e3 fe              jump @3757 if a0 == 0
      :                          @3771
 51345: 82 17 78                 a0 = u64 [sp + 0x78]
 51348: 82 a9 10                 a2 = u64 [a3 + 0x10]
 51351: 95 77 fe                 a0 = a0 + 0xfffffffffffffffe
 51354: ac 97 93 fc              jump @3718 if a0 <u a2
      :                          @3772
 51358: 00                       trap
      :                          @3773
 51359: 00                       trap
      :                          @3774
 51360: 00                       trap
      :                          @3775
 51361: 00                       trap
      :                          @3776
 51362: 00                       trap
      :                          @3777
 51363: 00                       trap
      :                          @3778
 51364: 64 a5                    s0 = a3
 51366: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 51370: 82 7b                    a4 = u64 [a0]
 51372: 82 1a 48                 a3 = u64 [sp + 0x48]
 51375: 82 1c 70                 a5 = u64 [sp + 0x70]
 51378: ae bc 3f                 jump @3786 if a5 >=u a4
      :                          @3779
 51381: 95 cb 01                 a4 = a5 + 0x1
 51384: 82 19 50                 a2 = u64 [sp + 0x50]
 51387: ae 9b e5                 jump @3774 if a4 >=u a2
      :                          @3780
 51390: 96 b7 18                 a0 = a4 * 0x18
 51393: c8 a7 07                 a0 = a0 + a3
 51396: 82 76 10                 s1 = u64 [a0 + 0x10]
 51399: ae 65 2b                 jump @3787 if s0 >=u s1
      :                          @3781
 51402: 00                       trap
      :                          @3782
 51403: 82 17 90 00              a0 = u64 [sp + 0x90]
 51407: 82 7b                    a4 = u64 [a0]
 51409: ae bc 20                 jump @3786 if a5 >=u a4
      :                          @3783
 51412: 95 cb 01                 a4 = a5 + 0x1
 51415: 82 19 50                 a2 = u64 [sp + 0x50]
 51418: 82 1a 48                 a3 = u64 [sp + 0x48]
 51421: ae 9b c3                 jump @3774 if a4 >=u a2
      :                          @3784
 51424: 96 b7 18                 a0 = a4 * 0x18
 51427: c8 a7 07                 a0 = a0 + a3
 51430: 82 76 10                 s1 = u64 [a0 + 0x10]
 51433: 82 1a 98 00              a3 = u64 [sp + 0x98]
 51437: ae 6a 05                 jump @3787 if a3 >=u s1
      :                          @3785
 51440: 00                       trap
      :                          @3786
 51441: 00                       trap
      :                          @3787
 51442: 00                       trap
      :                          @3788
 51443: 00                       trap
      :                          @3789
 51444: 00                       trap
      :                          @3790
 51445: 49 21 b0 00              u64 [sp + 176] = 0
 51449: 49 21 b8 00 08           u64 [sp + 184] = 0x8
 51454: 49 21 c0 00              u64 [sp + 192] = 0
 51458: 00                       trap
      :                          @3791
 51459: 00                       trap
      :                          @3792
 51460: 00                       trap
      :                          @3793
 51461: 95 11 68 ff              sp = sp + 0xffffffffffffff68
 51465: 7b 10 90 00              u64 [sp + 0x90] = ra
 51469: 7b 15 88 00              u64 [sp + 0x88] = s0
 51473: 7b 16 80 00              u64 [sp + 0x80] = s1
 51477: 7b 18 10                 u64 [sp + 0x10] = a1
 51480: 7b 17 48                 u64 [sp + 0x48] = a0
 51483: 51 08 90 00              jump @3805 if a1 == 0
      :                          @3794
 51487: 98 87 3c                 a0 = a1 >> 0x3c
 51490: 52 07 6d 04              jump @3899 if a0 != 0
      :                          @3795
 51494: 88 72 01                 t0 = a0 <u 0x1
 51497: 97 89 03                 a2 = a1 << 0x3
 51500: 97 22 03                 t0 = t0 << 0x3
 51503: 33 04 c0 22 03           t2 = 0x322c0
 51508: 33 03 00 00 01           t1 = 0x10000
 51513: c8 34 0b                 a4 = t2 + t1
 51516: 01                       fallthrough
      :                          @3796
 51517: 82 b6                    s1 = u64 [a4]
 51519: c8 96 0c                 a5 = s1 + a2
 51522: ac 6c 4b 04              jump @3897 if a5 <u s1
      :                          @3797
 51526: c8 2c 0a                 a3 = a5 + t0
 51529: d8 ca 05                 s0 = a3 <u a5
 51532: d8 a3 0a                 a3 = t1 <u a3
 51535: d4 5a 0a                 a3 = a3 | s0
 51538: 52 0a 3b 04              jump @3897 if a3 != 0
      :                          @3798
 51542: c9 c4 05                 s0 = t2 - a5
 51545: c8 35 05                 s0 = s0 + t1
 51548: 84 5a 07                 a3 = s0 & 0x7
 51551: c8 ac 0c                 a5 = a5 + a3
 51554: 01                       fallthrough
      :                          @3799
 51555: 82 b7                    a0 = u64 [a4]
 51557: ab 67 d8                 jump @3796 if a0 != s1
      :                          @3800
 51560: 7b bc                    u64 [a4] = a5
 51562: c9 a5 05                 s0 = s0 - a3
 51565: 64 57                    a0 = s0
 51567: 33 08                    a1 = 0
 51569: 50 20 f8 02 a5 42 02     ra = 760, jump @13687
      :                          @3801 [@dyn 380]
 51576: 82 16 10                 s1 = u64 [sp + 0x10]
 51579: 7b 16 68                 u64 [sp + 0x68] = s1
 51582: 7b 15 70                 u64 [sp + 0x70] = s0
 51585: 7b 16 78                 u64 [sp + 0x78] = s1
 51588: 95 17 50                 a0 = sp + 0x50
 51591: 95 18 68                 a1 = sp + 0x68
 51594: 64 69                    a2 = s1
 51596: 50 20 fa 02 65 90        ra = 762, jump @1721
      :                          @3802 [@dyn 381]
 51602: 95 65 01                 s0 = s1 + 0x1
 51605: 51 05 fb 03              jump @3900 if s0 == 0
      :                          @3803
 51609: 98 57 3c                 a0 = s0 >> 0x3c
 51612: 52 07 f3 03              jump @3899 if a0 != 0
      :                          @3804
 51616: 88 77 01                 a0 = a0 <u 0x1
 51619: 7b 15 38                 u64 [sp + 0x38] = s0
 51622: 97 59 03                 a2 = s0 << 0x3
 51625: 28 1c                    jump @3806
      :                          @3805
 51627: 49 11 50                 u64 [sp + 80] = 0
 51630: 49 11 58 08              u64 [sp + 88] = 0x8
 51634: 49 11 60                 u64 [sp + 96] = 0
 51637: 95 88 01                 a1 = a1 + 0x1
 51640: 98 87 3c                 a0 = a1 >> 0x3c
 51643: 88 77 01                 a0 = a0 <u 0x1
 51646: 7b 18 38                 u64 [sp + 0x38] = a1
 51649: 97 89 03                 a2 = a1 << 0x3
 51652: 01                       fallthrough
      :                          @3806
 51653: 97 72 03                 t0 = a0 << 0x3
 51656: 33 04 c0 22 03           t2 = 0x322c0
 51661: 33 03 00 00 01           t1 = 0x10000
 51666: c8 34 0a                 a3 = t2 + t1
 51669: 01                       fallthrough
      :                          @3807
 51670: 82 ab                    a4 = u64 [a3]
 51672: c8 9b 0c                 a5 = a4 + a2
 51675: ac bc b2 03              jump @3897 if a5 <u a4
      :                          @3808
 51679: c8 2c 07                 a0 = a5 + t0
 51682: d8 c7 06                 s1 = a0 <u a5
 51685: d8 73 07                 a0 = t1 <u a0
 51688: d4 67 07                 a0 = a0 | s1
 51691: 52 07 a2 03              jump @3897 if a0 != 0
      :                          @3809
 51695: c9 c4 06                 s1 = t2 - a5
 51698: c8 36 08                 a1 = s1 + t1
 51701: 84 86 07                 s1 = a1 & 0x7
 51704: c8 6c 0c                 a5 = a5 + s1
 51707: 01                       fallthrough
      :                          @3810
 51708: 82 a7                    a0 = u64 [a3]
 51710: ab b7 d8                 jump @3807 if a0 != a4
      :                          @3811
 51713: 7b ac                    u64 [a3] = a5
 51715: 33 05                    s0 = 0
 51717: c9 68 06                 s1 = a1 - s1
 51720: 64 67                    a0 = s1
 51722: 33 08                    a1 = 0
 51724: 7b 19 18                 u64 [sp + 0x18] = a2
 51727: 50 20 fc 02 07 42 02     ra = 764, jump @13687
      :                          @3812 [@dyn 382]
 51734: 82 18 10                 a1 = u64 [sp + 0x10]
 51737: 51 08 79 01              jump @3841 if a1 == 0
      :                          @3813
 51741: 82 15 38                 s0 = u64 [sp + 0x38]
 51744: 51 18 ff 70 03           jump @3900 if a1 == 4294967295
      :                          @3814
 51749: 33 07 01                 a0 = 0x1
 51752: 82 12 48                 t0 = u64 [sp + 0x48]
 51755: 01                       fallthrough
      :                          @3815
 51756: 95 7a ff                 a3 = a0 + 0xffffffffffffffff
 51759: ae 5a 62 03              jump @3901 if a3 >=u s0
      :                          @3816
 51763: ae 8a 4a 03              jump @3890 if a3 >=u a1
      :                          @3817
 51767: ae 57 54 03              jump @3895 if a0 >=u s0
      :                          @3818
 51771: d8 87 09                 a2 = a0 <u a1
 51774: 97 ab 03                 a4 = a3 << 0x3
 51777: c8 b6 0a                 a3 = s1 + a4
 51780: 82 aa                    a3 = u64 [a3]
 51782: c8 2b 0b                 a4 = a4 + t0
 51785: 82 bc                    a5 = u64 [a4]
 51787: 97 7b 03                 a4 = a0 << 0x3
 51790: c8 97 07                 a0 = a0 + a2
 51793: 85 99 01                 a2 = a2 ^ 0x1
 51796: c8 6b 0b                 a4 = a4 + s1
 51799: c8 ac 0c                 a5 = a5 + a3
 51802: d8 78 0a                 a3 = a1 <u a0
 51805: d4 a9 09                 a2 = a2 | a3
 51808: 7b bc                    u64 [a4] = a5
 51810: 51 09 ca                 jump @3815 if a2 == 0
      :                          @3819
 51813: 7b 16 28                 u64 [sp + 0x28] = s1
 51816: 82 17 60                 a0 = u64 [sp + 0x60]
 51819: 82 19 58                 a2 = u64 [sp + 0x58]
 51822: 7b 19 48                 u64 [sp + 0x48] = a2
 51825: 7b 17 40                 u64 [sp + 0x40] = a0
 51828: ae 75 fc 01              jump @3868 if s0 >=u a0
      :                          @3820
 51832: 33 0a 01                 a3 = 0x1
 51835: 28 17                    jump @3822
      :                          @3821
 51837: 82 17                    a0 = u64 [sp]
 51839: 85 77 01                 a0 = a0 ^ 0x1
 51842: 82 18 10                 a1 = u64 [sp + 0x10]
 51845: 82 1a 08                 a3 = u64 [sp + 0x8]
 51848: d8 a8 09                 a2 = a1 <u a3
 51851: d4 97 07                 a0 = a0 | a2
 51854: 52 07 f0 02              jump @3891 if a0 != 0
      :                          @3822
 51858: 33 06                    s1 = 0
 51860: d8 8a 07                 a0 = a3 <u a1
 51863: 7b 17                    u64 [sp] = a0
 51865: c8 a7 07                 a0 = a0 + a3
 51868: 7b 17 08                 u64 [sp + 0x8] = a0
 51871: 7b 1a 30                 u64 [sp + 0x30] = a3
 51874: c9 a8 08                 a1 = a1 - a3
 51877: 7b 18 20                 u64 [sp + 0x20] = a1
 51880: 28 1a                    jump @3824
      :                          @3823
 51882: 82 18 20                 a1 = u64 [sp + 0x20]
 51885: d8 86 07                 a0 = s1 <u a1
 51888: c8 76 06                 s1 = s1 + a0
 51891: d8 68 09                 a2 = a1 <u s1
 51894: 85 99 01                 a2 = a2 ^ 0x1
 51897: d2 97 07                 a0 = a0 & a2
 51900: 82 15 38                 s0 = u64 [sp + 0x38]
 51903: 51 07 be                 jump @3821 if a0 == 0
      :                          @3824
 51906: 82 18 40                 a1 = u64 [sp + 0x40]
 51909: ae 86 c4 02              jump @3893 if s1 >=u a1
      :                          @3825
 51913: 96 60 18                 ra = s1 * 0x18
 51916: 82 17 48                 a0 = u64 [sp + 0x48]
 51919: c8 70 00                 ra = ra + a0
 51922: 82 0b 10                 a4 = u64 [ra + 0x10]
 51925: 82 1a 30                 a3 = u64 [sp + 0x30]
 51928: c8 6a 0a                 a3 = a3 + s1
 51931: 95 a9 ff                 a2 = a3 + 0xffffffffffffffff
 51934: ae b9 ac 02              jump @3894 if a2 >=u a4
      :                          @3826
 51938: 82 07 08                 a0 = u64 [ra + 0x8]
 51941: 97 92 03                 t0 = a2 << 0x3
 51944: c8 27 07                 a0 = a0 + t0
 51947: 49 07 ff                 u64 [a0 + 0] = 0xffffffffffffffff
 51950: ae 5a a3 02              jump @3901 if a3 >=u s0
      :                          @3827
 51954: ae 56 9c 02              jump @3898 if s1 >=u s0
      :                          @3828
 51958: ac 69 b4                 jump @3823 if a2 <u s1
      :                          @3829
 51961: 97 aa 03                 a3 = a3 << 0x3
 51964: 82 18 28                 a1 = u64 [sp + 0x28]
 51967: c8 8a 0a                 a3 = a3 + a1
 51970: 82 a7                    a0 = u64 [a3]
 51972: 97 6a 03                 a3 = s1 << 0x3
 51975: c8 8a 0a                 a3 = a3 + a1
 51978: 82 aa                    a3 = u64 [a3]
 51980: 95 03 10                 t1 = ra + 0x10
 51983: 95 00 08                 ra = ra + 0x8
 51986: c9 a7 05                 s0 = a0 - a3
 51989: 64 67                    a0 = s1
 51991: 01                       fallthrough
      :                          @3830
 51992: ae 76 26                 jump @3835 if s1 >=u a0
      :                          @3831
 51995: 82 3b                    a4 = u64 [t1]
 51997: 95 7a ff                 a3 = a0 + 0xffffffffffffffff
 52000: ae ba 5c 02              jump @3889 if a3 >=u a4
      :                          @3832
 52004: 82 0b                    a4 = u64 [ra]
 52006: 97 aa 03                 a3 = a3 << 0x3
 52009: c8 ba 0a                 a3 = a3 + a4
 52012: 82 ab                    a4 = u64 [a3]
 52014: 82 18 40                 a1 = u64 [sp + 0x40]
 52017: ac 97 15                 jump @3836 if a0 <u a2
      :                          @3833
 52020: 33 04                    t2 = 0
 52022: 82 3a                    a3 = u64 [t1]
 52024: ac a9 33                 jump @3839 if a2 <u a3
      :                          @3834
 52027: 28 40 02                 jump @3888
      :                          @3835
 52030: 33 0b                    a4 = 0
 52032: 82 18 40                 a1 = u64 [sp + 0x40]
 52035: ae 97 f1                 jump @3833 if a0 >=u a2
      :                          @3836
 52038: 95 7a 01                 a3 = a0 + 0x1
 52041: ae 8a 34 02              jump @3890 if a3 >=u a1
      :                          @3837
 52045: 96 ac 18                 a5 = a3 * 0x18
 52048: 82 18 48                 a1 = u64 [sp + 0x48]
 52051: c8 8c 0c                 a5 = a5 + a1
 52054: 82 ca 10                 a3 = u64 [a5 + 0x10]
 52057: ae a9 22 02              jump @3888 if a2 >=u a3
      :                          @3838
 52061: 82 ca 08                 a3 = u64 [a5 + 0x8]
 52064: c8 2a 0a                 a3 = a3 + t0
 52067: 82 a4                    t2 = u64 [a3]
 52069: 82 3a                    a3 = u64 [t1]
 52071: ae a9 14 02              jump @3888 if a2 >=u a3
      :                          @3839
 52075: 82 0a                    a3 = u64 [ra]
 52077: c8 5b 0b                 a4 = a4 + s0
 52080: c8 2a 0a                 a3 = a3 + t0
 52083: 82 ac                    a5 = u64 [a3]
 52085: c8 4b 0b                 a4 = a4 + t2
 52088: d8 97 08                 a1 = a0 <u a2
 52091: c8 87 07                 a0 = a0 + a1
 52094: e6 bc 0b                 a4 = minu(a5, a4)
 52097: d8 79 0c                 a5 = a2 <u a0
 52100: 85 cc 01                 a5 = a5 ^ 0x1
 52103: d2 c8 08                 a1 = a1 & a5
 52106: 7b ab                    u64 [a3] = a4
 52108: 52 08 8c                 jump @3830 if a1 != 0
      :                          @3840
 52111: 28 1b ff                 jump @3823
      :                          @3841
 52114: 82 17 60                 a0 = u64 [sp + 0x60]
 52117: 82 15 38                 s0 = u64 [sp + 0x38]
 52120: 51 07 f0 01              jump @3892 if a0 == 0
      :                          @3842
 52124: 64 72                    t0 = a0
 52126: 82 14 58                 t2 = u64 [sp + 0x58]
 52129: 82 49 10                 a2 = u64 [t2 + 0x10]
 52132: 95 87 ff                 a0 = a1 + 0xffffffffffffffff
 52135: ae 97 e5 01              jump @3896 if a0 >=u a2
      :                          @3843
 52139: 82 48 08                 a1 = u64 [t2 + 0x8]
 52142: 97 77 03                 a0 = a0 << 0x3
 52145: c8 87 07                 a0 = a0 + a1
 52148: 82 77                    a0 = u64 [a0]
 52150: 7b 17 48                 u64 [sp + 0x48] = a0
 52153: 33 07 00 20              a0 = 0x2000
 52157: ac 57 25                 jump @3849 if a0 <u s0
      :                          @3844
 52160: 33 09 c0 22 03           a2 = 0x322c0
 52165: 95 99 00 00 01           a2 = a2 + 0x10000
 52170: 01                       fallthrough
      :                          @3845
 52171: 82 9a                    a3 = u64 [a2]
 52173: c9 a9 08                 a1 = a2 - a3
 52176: ab 68 12                 jump @3849 if a1 != s1
      :                          @3846
 52179: 82 18 18                 a1 = u64 [sp + 0x18]
 52182: c9 8a 08                 a1 = a3 - a1
 52185: 01                       fallthrough
      :                          @3847
 52186: 82 9b                    a4 = u64 [a2]
 52188: ab ab ef                 jump @3845 if a4 != a3
      :                          @3848
 52191: 7b 98                    u64 [a2] = a1
 52193: 01                       fallthrough
      :                          @3849
 52194: 33 0b                    a4 = 0
 52196: 33 0c c0 22 03           a5 = 0x322c0
 52201: 33 08 00 00 01           a1 = 0x10000
 52206: c8 8c 0c                 a5 = a5 + a1
 52209: 33 03 18                 t1 = 0x18
 52212: 28 08                    jump @3851
      :                          @3850
 52214: 95 bb 01                 a4 = a4 + 0x1
 52217: aa 2b 33                 jump @3860 if a4 == t0
      :                          @3851
 52220: ca 3b 0a                 a3 = a4 * t1
 52223: c8 4a 0a                 a3 = a3 + t2
 52226: 82 a9                    a2 = u64 [a3]
 52228: 51 09 f2                 jump @3850 if a2 == 0
      :                          @3852
 52231: ac 97 ef                 jump @3850 if a0 <u a2
      :                          @3853
 52234: 82 a5 08                 s0 = u64 [a3 + 0x8]
 52237: 97 90 03                 ra = a2 << 0x3
 52240: 01                       fallthrough
      :                          @3854
 52241: 82 ca                    a3 = u64 [a5]
 52243: c9 ac 08                 a1 = a5 - a3
 52246: ab 58 e0                 jump @3850 if a1 != s0
      :                          @3855
 52249: c9 0a 08                 a1 = a3 - ra
 52252: 01                       fallthrough
      :                          @3856
 52253: 82 c6                    s1 = u64 [a5]
 52255: ab a6 f2                 jump @3854 if s1 != a3
      :                          @3857
 52258: 7b c8                    u64 [a5] = a1
 52260: 33 09                    a2 = 0
 52262: 01                       fallthrough
      :                          @3858
 52263: ab a6 ea                 jump @3854 if s1 != a3
      :                          @3859
 52266: 28 cc                    jump @3850
      :                          @3860
 52268: 82 18 50                 a1 = u64 [sp + 0x50]
 52271: 51 08 2c                 jump @3867 if a1 == 0
      :                          @3861
 52274: 33 09 aa 0a              a2 = 0xaaa
 52278: ac 89 25                 jump @3867 if a2 <u a1
      :                          @3862
 52281: 96 88 e8                 a1 = a1 * 0xffffffffffffffe8
 52284: 33 09 c0 22 03           a2 = 0x322c0
 52289: 95 99 00 00 01           a2 = a2 + 0x10000
 52294: 01                       fallthrough
      :                          @3863
 52295: 82 9a                    a3 = u64 [a2]
 52297: c9 a9 0b                 a4 = a2 - a3
 52300: ab 4b 0f                 jump @3867 if a4 != t2
      :                          @3864
 52303: c8 8a 0b                 a4 = a3 + a1
 52306: 01                       fallthrough
      :                          @3865
 52307: 82 9c                    a5 = u64 [a2]
 52309: ab ac f2                 jump @3863 if a5 != a3
      :                          @3866
 52312: 7b 9b                    u64 [a2] = a4
 52314: 01                       fallthrough
      :                          @3867
 52315: 82 17 48                 a0 = u64 [sp + 0x48]
 52318: 82 10 90 00              ra = u64 [sp + 0x90]
 52322: 82 15 88 00              s0 = u64 [sp + 0x88]
 52326: 82 16 80 00              s1 = u64 [sp + 0x80]
 52330: 95 11 98 00              sp = sp + 0x98
 52334: 32 00                    ret
      :                          @3868
 52336: 33 0c 01                 a5 = 0x1
 52339: 28 17                    jump @3870
      :                          @3869
 52341: 82 17                    a0 = u64 [sp]
 52343: 85 77 01                 a0 = a0 ^ 0x1
 52346: 82 18 10                 a1 = u64 [sp + 0x10]
 52349: 82 1c 08                 a5 = u64 [sp + 0x8]
 52352: d8 c8 09                 a2 = a1 <u a5
 52355: d4 97 07                 a0 = a0 | a2
 52358: 52 07 f8 00              jump @3891 if a0 != 0
      :                          @3870
 52362: 33 06                    s1 = 0
 52364: d8 8c 07                 a0 = a5 <u a1
 52367: 7b 17                    u64 [sp] = a0
 52369: c8 c7 07                 a0 = a0 + a5
 52372: 7b 17 08                 u64 [sp + 0x8] = a0
 52375: c9 c8 08                 a1 = a1 - a5
 52378: 7b 18 20                 u64 [sp + 0x20] = a1
 52381: 82 18 40                 a1 = u64 [sp + 0x40]
 52384: 7b 1c 30                 u64 [sp + 0x30] = a5
 52387: 28 1d                    jump @3872
      :                          @3871
 52389: 82 19 20                 a2 = u64 [sp + 0x20]
 52392: d8 96 07                 a0 = s1 <u a2
 52395: c8 76 06                 s1 = s1 + a0
 52398: d8 69 09                 a2 = a2 <u s1
 52401: 85 99 01                 a2 = a2 ^ 0x1
 52404: d2 97 07                 a0 = a0 & a2
 52407: 82 15 38                 s0 = u64 [sp + 0x38]
 52410: 82 1c 30                 a5 = u64 [sp + 0x30]
 52413: 51 07 b8                 jump @3869 if a0 == 0
      :                          @3872
 52416: ae 86 c9 00              jump @3893 if s1 >=u a1
      :                          @3873
 52420: 96 62 18                 t0 = s1 * 0x18
 52423: 82 17 48                 a0 = u64 [sp + 0x48]
 52426: c8 72 02                 t0 = t0 + a0
 52429: 82 2b 10                 a4 = u64 [t0 + 0x10]
 52432: c8 c6 0a                 a3 = s1 + a5
 52435: 95 a9 ff                 a2 = a3 + 0xffffffffffffffff
 52438: ae b9 b4 00              jump @3894 if a2 >=u a4
      :                          @3874
 52442: 82 27 08                 a0 = u64 [t0 + 0x8]
 52445: 97 90 03                 ra = a2 << 0x3
 52448: c8 07 07                 a0 = a0 + ra
 52451: 49 07 ff                 u64 [a0 + 0] = 0xffffffffffffffff
 52454: ae 5a ab 00              jump @3901 if a3 >=u s0
      :                          @3875
 52458: ac 69 bb                 jump @3871 if a2 <u s1
      :                          @3876
 52461: 97 aa 03                 a3 = a3 << 0x3
 52464: 82 1b 28                 a4 = u64 [sp + 0x28]
 52467: c8 ba 0a                 a3 = a3 + a4
 52470: 82 a7                    a0 = u64 [a3]
 52472: 97 6a 03                 a3 = s1 << 0x3
 52475: c8 ba 0a                 a3 = a3 + a4
 52478: 82 aa                    a3 = u64 [a3]
 52480: 95 25 10                 s0 = t0 + 0x10
 52483: 95 22 08                 t0 = t0 + 0x8
 52486: c9 a7 03                 t1 = a0 - a3
 52489: 64 64                    t2 = s1
 52491: 01                       fallthrough
      :                          @3877
 52492: ae 46 21                 jump @3882 if s1 >=u t2
      :                          @3878
 52495: 82 5b                    a4 = u64 [s0]
 52497: 95 4a ff                 a3 = t2 + 0xffffffffffffffff
 52500: ae ba 68                 jump @3889 if a3 >=u a4
      :                          @3879
 52503: 82 27                    a0 = u64 [t0]
 52505: 97 aa 03                 a3 = a3 << 0x3
 52508: c8 a7 07                 a0 = a0 + a3
 52511: 82 7b                    a4 = u64 [a0]
 52513: ac 94 11                 jump @3883 if t2 <u a2
      :                          @3880
 52516: 33 07                    a0 = 0
 52518: 82 5a                    a3 = u64 [s0]
 52520: ac a9 2c                 jump @3886 if a2 <u a3
      :                          @3881
 52523: 28 50                    jump @3888
      :                          @3882
 52525: 33 0b                    a4 = 0
 52527: ae 94 f5                 jump @3880 if t2 >=u a2
      :                          @3883
 52530: 95 4a 01                 a3 = t2 + 0x1
 52533: ae 8a 48                 jump @3890 if a3 >=u a1
      :                          @3884
 52536: 96 a7 18                 a0 = a3 * 0x18
 52539: 82 1a 48                 a3 = u64 [sp + 0x48]
 52542: c8 a7 07                 a0 = a0 + a3
 52545: 82 7a 10                 a3 = u64 [a0 + 0x10]
 52548: ae a9 37                 jump @3888 if a2 >=u a3
      :                          @3885
 52551: 82 77 08                 a0 = u64 [a0 + 0x8]
 52554: c8 07 07                 a0 = a0 + ra
 52557: 82 77                    a0 = u64 [a0]
 52559: 82 5a                    a3 = u64 [s0]
 52561: ae a9 2a                 jump @3888 if a2 >=u a3
      :                          @3886
 52564: 82 2a                    a3 = u64 [t0]
 52566: c8 3b 0b                 a4 = a4 + t1
 52569: c8 0a 0a                 a3 = a3 + ra
 52572: 82 ac                    a5 = u64 [a3]
 52574: c8 b7 07                 a0 = a0 + a4
 52577: d8 94 0b                 a4 = t2 <u a2
 52580: c8 b4 04                 t2 = t2 + a4
 52583: e6 7c 07                 a0 = minu(a5, a0)
 52586: d8 49 0c                 a5 = a2 <u t2
 52589: 85 cc 01                 a5 = a5 ^ 0x1
 52592: d2 cb 0b                 a4 = a4 & a5
 52595: 7b a7                    u64 [a3] = a0
 52597: 52 0b 97                 jump @3877 if a4 != 0
      :                          @3887
 52600: 28 2d ff                 jump @3871
      :                          @3888
 52603: 00                       trap
      :                          @3889
 52604: 00                       trap
      :                          @3890
 52605: 00                       trap
      :                          @3891
 52606: 82 17 40                 a0 = u64 [sp + 0x40]
 52609: 82 16 28                 s1 = u64 [sp + 0x28]
 52612: 52 07 18 fe              jump @3842 if a0 != 0
      :                          @3892
 52616: 00                       trap
      :                          @3893
 52617: 00                       trap
      :                          @3894
 52618: 00                       trap
      :                          @3895
 52619: 00                       trap
      :                          @3896
 52620: 00                       trap
      :                          @3897
 52621: 00                       trap
      :                          @3898
 52622: 00                       trap
      :                          @3899
 52623: 00                       trap
      :                          @3900
 52624: 00                       trap
      :                          @3901
 52625: 00                       trap
      :                          @3902
 52626: 95 11 60 ff              sp = sp + 0xffffffffffffff60
 52630: 7b 10 98 00              u64 [sp + 0x98] = ra
 52634: 7b 15 90 00              u64 [sp + 0x90] = s0
 52638: 7b 16 88 00              u64 [sp + 0x88] = s1
 52642: 64 a6                    s1 = a3
 52644: 95 a2 01                 t0 = a3 + 0x1
 52647: 7b 19 30                 u64 [sp + 0x30] = a2
 52650: 7b 17                    u64 [sp] = a0
 52652: 7b 18 18                 u64 [sp + 0x18] = a1
 52655: 52 02 0b                 jump @3904 if t0 != 0
      :                          @3903
 52658: 33 09                    a2 = 0
 52660: 33 07 08                 a0 = 0x8
 52663: 28 98 00                 jump @3917
      :                          @3904
 52666: 7b 16 50                 u64 [sp + 0x50] = s1
 52669: 98 27 3c                 a0 = t0 >> 0x3c
 52672: 52 07 0d 03              jump @3983 if a0 != 0
      :                          @3905
 52676: 88 73 01                 t1 = a0 <u 0x1
 52679: 97 27 03                 a0 = t0 << 0x3
 52682: 97 33 03                 t1 = t1 << 0x3
 52685: 33 00 c0 22 03           ra = 0x322c0
 52690: 33 04 00 00 01           t2 = 0x10000
 52695: c8 40 0c                 a5 = ra + t2
 52698: 01                       fallthrough
      :                          @3906
 52699: 82 c5                    s0 = u64 [a5]
 52701: c8 75 06                 s1 = s0 + a0
 52704: ac 56 ea 02              jump @3980 if s1 <u s0
      :                          @3907
 52708: c8 36 0a                 a3 = s1 + t1
 52711: d8 6a 0b                 a4 = a3 <u s1
 52714: d8 a4 0a                 a3 = t2 <u a3
 52717: d4 ba 0a                 a3 = a3 | a4
 52720: 52 0a da 02              jump @3980 if a3 != 0
      :                          @3908
 52724: c9 60 0a                 a3 = ra - s1
 52727: c8 4a 0a                 a3 = a3 + t2
 52730: 84 ab 07                 a4 = a3 & 0x7
 52733: c8 b6 06                 s1 = s1 + a4
 52736: 01                       fallthrough
      :                          @3909
 52737: 82 c8                    a1 = u64 [a5]
 52739: ab 58 d8                 jump @3906 if a1 != s0
      :                          @3910
 52742: 7b c6                    u64 [a5] = s1
 52744: 01                       fallthrough
      :                          @3911
 52745: c9 ba 07                 a0 = a3 - a4
 52748: 53 12 02 28              jump @3915 if t0 <u 2
      :                          @3912
 52752: 14 09 ff ff ff ff ff ff ff 3f a2 = 0x3fffffffffffffff
 52762: 82 16 50                 s1 = u64 [sp + 0x50]
 52765: 64 6b                    a4 = s1
 52767: 64 7c                    a5 = a0
 52769: 82 18 18                 a1 = u64 [sp + 0x18]
 52772: 01                       fallthrough
      :                          @3913
 52773: 7b c9                    u64 [a5] = a2
 52775: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 52778: 95 cc 08                 a5 = a5 + 0x8
 52781: 52 0b f8                 jump @3913 if a4 != 0
      :                          @3914
 52784: 64 69                    a2 = s1
 52786: 28 0d                    jump @3916
      :                          @3915
 52788: 33 09                    a2 = 0
 52790: 64 7c                    a5 = a0
 52792: 82 16 50                 s1 = u64 [sp + 0x50]
 52795: 82 18 18                 a1 = u64 [sp + 0x18]
 52798: 01                       fallthrough
      :                          @3916
 52799: 14 0a ff ff ff ff ff ff ff 3f a3 = 0x3fffffffffffffff
 52809: 7b ca                    u64 [a5] = a3
 52811: 95 99 01                 a2 = a2 + 0x1
 52814: 01                       fallthrough
      :                          @3917
 52815: 7b 12 70                 u64 [sp + 0x70] = t0
 52818: 7b 17 78                 u64 [sp + 0x78] = a0
 52821: 7b 19 80 00              u64 [sp + 0x80] = a2
 52825: 95 89 01                 a2 = a1 + 0x1
 52828: 95 17 58                 a0 = sp + 0x58
 52831: 95 18 70                 a1 = sp + 0x70
 52834: 50 20 fe 02 8f 8b        ra = 766, jump @1721
      :                          @3918 [@dyn 383]
 52840: 82 1b 68                 a4 = u64 [sp + 0x68]
 52843: 51 0b 4e 02              jump @3971 if a4 == 0
      :                          @3919
 52847: 82 14 60                 t2 = u64 [sp + 0x60]
 52850: 82 47 10                 a0 = u64 [t2 + 0x10]
 52853: 51 07 53 02              jump @3978 if a0 == 0
      :                          @3920
 52857: 82 47 08                 a0 = u64 [t2 + 0x8]
 52860: 49 07                    u64 [a0 + 0] = 0
 52862: 82 18 18                 a1 = u64 [sp + 0x18]
 52865: 7b 14 20                 u64 [sp + 0x20] = t2
 52868: 7b 1b 28                 u64 [sp + 0x28] = a4
 52871: 51 08 5b                 jump @3929 if a1 == 0
      :                          @3921
 52874: 33 07 01                 a0 = 0x1
 52877: 33 09 18                 a2 = 0x18
 52880: 14 0a ff ff ff ff ff ff ff 3f a3 = 0x3fffffffffffffff
 52890: 01                       fallthrough
      :                          @3922
 52891: ae b7 1f 02              jump @3972 if a0 >=u a4
      :                          @3923
 52895: ca 97 0b                 a4 = a0 * a2
 52898: c8 4b 0b                 a4 = a4 + t2
 52901: 82 bc 10                 a5 = u64 [a4 + 0x10]
 52904: 51 0c 11 02              jump @3971 if a5 == 0
      :                          @3924
 52908: d8 87 0c                 a5 = a0 <u a1
 52911: c8 c7 07                 a0 = a0 + a5
 52914: 82 bb 08                 a4 = u64 [a4 + 0x8]
 52917: 85 c5 01                 s0 = a5 ^ 0x1
 52920: d8 78 0c                 a5 = a1 <u a0
 52923: d4 5c 0c                 a5 = a5 | s0
 52926: 7b ba                    u64 [a4] = a3
 52928: 82 1b 28                 a4 = u64 [sp + 0x28]
 52931: 51 0c d8                 jump @3922 if a5 == 0
      :                          @3925
 52934: 52 06 20                 jump @3930 if s1 != 0
      :                          @3926
 52937: 33 07 01                 a0 = 0x1
 52940: 01                       fallthrough
      :                          @3927
 52941: d8 87 09                 a2 = a0 <u a1
 52944: 85 9a 01                 a3 = a2 ^ 0x1
 52947: c8 97 07                 a0 = a0 + a2
 52950: d8 78 09                 a2 = a1 <u a0
 52953: d4 a9 09                 a2 = a2 | a3
 52956: 51 09 f1                 jump @3927 if a2 == 0
      :                          @3928
 52959: 28 28 01                 jump @3946
      :                          @3929
 52962: 51 06 25 01              jump @3946 if s1 == 0
      :                          @3930
 52966: 33 07 01                 a0 = 0x1
 52969: 14 0a ff ff ff ff ff ff ff 3f a3 = 0x3fffffffffffffff
 52979: 01                       fallthrough
      :                          @3931
 52980: 82 49 10                 a2 = u64 [t2 + 0x10]
 52983: ae 97 c4 01              jump @3973 if a0 >=u a2
      :                          @3932
 52987: d8 67 0c                 a5 = a0 <u s1
 52990: 82 49 08                 a2 = u64 [t2 + 0x8]
 52993: 97 7b 03                 a4 = a0 << 0x3
 52996: c8 c7 07                 a0 = a0 + a5
 52999: 85 cc 01                 a5 = a5 ^ 0x1
 53002: c8 b9 09                 a2 = a2 + a4
 53005: d8 76 0b                 a4 = s1 <u a0
 53008: d4 cb 0b                 a4 = a4 | a5
 53011: 7b 9a                    u64 [a2] = a3
 53013: 51 0b df                 jump @3931 if a4 == 0
      :                          @3933
 53016: 82 1b 28                 a4 = u64 [sp + 0x28]
 53019: 51 08 ec 00              jump @3946 if a1 == 0
      :                          @3934
 53023: 33 0a 01                 a3 = 0x1
 53026: 01                       fallthrough
      :                          @3935
 53027: 95 a9 ff                 a2 = a3 + 0xffffffffffffffff
 53030: ae 89 96 01              jump @3974 if a2 >=u a1
      :                          @3936
 53034: ae b9 93 01              jump @3975 if a2 >=u a4
      :                          @3937
 53038: 64 ac                    a5 = a3
 53040: 64 47                    a0 = t2
 53042: 64 a8                    a1 = a3
 53044: 96 c4 18                 t2 = a5 * 0x18
 53047: c8 74 04                 t2 = t2 + a0
 53050: 95 47 f8                 a0 = t2 + 0xfffffffffffffff8
 53053: 7b 17 50                 u64 [sp + 0x50] = a0
 53056: ae bc 7e 01              jump @3976 if a5 >=u a4
      :                          @3938
 53060: 82 17 18                 a0 = u64 [sp + 0x18]
 53063: d8 78 07                 a0 = a1 <u a0
 53066: 7b 17 08                 u64 [sp + 0x8] = a0
 53069: c8 78 08                 a1 = a1 + a0
 53072: 7b 18 10                 u64 [sp + 0x10] = a1
 53075: 97 99 03                 a2 = a2 << 0x3
 53078: 82 17                    a0 = u64 [sp]
 53080: c8 97 07                 a0 = a0 + a2
 53083: 7b 17 40                 u64 [sp + 0x40] = a0
 53086: 95 47 f0                 a0 = t2 + 0xfffffffffffffff0
 53089: 7b 17 38                 u64 [sp + 0x38] = a0
 53092: 95 47 10                 a0 = t2 + 0x10
 53095: 7b 17 48                 u64 [sp + 0x48] = a0
 53098: 95 44 08                 t2 = t2 + 0x8
 53101: 33 09 01                 a2 = 0x1
 53104: 01                       fallthrough
      :                          @3939
 53105: 95 9b ff                 a4 = a2 + 0xffffffffffffffff
 53108: ae 6b 41 01              jump @3967 if a4 >=u s1
      :                          @3940
 53112: 82 17 50                 a0 = u64 [sp + 0x50]
 53115: 82 7a                    a3 = u64 [a0]
 53117: ae a9 4f 01              jump @3982 if a2 >=u a3
      :                          @3941
 53121: 82 17 48                 a0 = u64 [sp + 0x48]
 53124: 82 7c                    a5 = u64 [a0]
 53126: ae cb 30 01              jump @3968 if a4 >=u a5
      :                          @3942
 53130: ae ab 2d 01              jump @3969 if a4 >=u a3
      :                          @3943
 53134: ae c9 2a 01              jump @3970 if a2 >=u a5
      :                          @3944
 53138: 82 17 40                 a0 = u64 [sp + 0x40]
 53141: 82 7a                    a3 = u64 [a0]
 53143: 97 bb 03                 a4 = a4 << 0x3
 53146: 82 1c 30                 a5 = u64 [sp + 0x30]
 53149: c8 bc 0c                 a5 = a5 + a4
 53152: 82 cc                    a5 = u64 [a5]
 53154: d8 ac 02                 t0 = a5 <u a3
 53157: 82 17 38                 a0 = u64 [sp + 0x38]
 53160: 82 78                    a1 = u64 [a0]
 53162: c9 ca 00                 ra = a3 - a5
 53165: 64 63                    t1 = s1
 53167: 97 96 03                 s1 = a2 << 0x3
 53170: 82 45                    s0 = u64 [t2]
 53172: c8 68 07                 a0 = a1 + s1
 53175: 82 77                    a0 = u64 [a0]
 53177: c8 b8 08                 a1 = a1 + a4
 53180: c8 5b 0b                 a4 = a4 + s0
 53183: 82 bb                    a4 = u64 [a4]
 53185: 82 88                    a1 = u64 [a1]
 53187: c9 ac 0c                 a5 = a5 - a3
 53190: db 20 0c                 a5 = ra if t0 != 0
 53193: e6 b7 07                 a0 = minu(a0, a4)
 53196: e6 87 07                 a0 = minu(a0, a1)
 53199: c8 65 05                 s0 = s0 + s1
 53202: 64 36                    s1 = t1
 53204: d8 39 08                 a1 = a2 <u t1
 53207: c8 89 09                 a2 = a2 + a1
 53210: c8 c7 07                 a0 = a0 + a5
 53213: d8 93 0a                 a3 = t1 <u a2
 53216: 85 aa 01                 a3 = a3 ^ 0x1
 53219: d2 a8 08                 a1 = a1 & a3
 53222: 7b 57                    u64 [s0] = a0
 53224: 52 08 89                 jump @3939 if a1 != 0
      :                          @3945
 53227: 82 17 08                 a0 = u64 [sp + 0x8]
 53230: 85 77 01                 a0 = a0 ^ 0x1
 53233: 82 18 18                 a1 = u64 [sp + 0x18]
 53236: 82 1a 10                 a3 = u64 [sp + 0x10]
 53239: d8 a8 09                 a2 = a1 <u a3
 53242: d4 97 07                 a0 = a0 | a2
 53245: 82 14 20                 t2 = u64 [sp + 0x20]
 53248: 82 1b 28                 a4 = u64 [sp + 0x28]
 53251: 51 07 20 ff              jump @3935 if a0 == 0
      :                          @3946
 53255: ae b8 c0 00              jump @3977 if a1 >=u a4
      :                          @3947
 53259: 33 02 18                 t0 = 0x18
 53262: ca 28 07                 a0 = a1 * t0
 53265: c8 47 07                 a0 = a0 + t2
 53268: 82 79 10                 a2 = u64 [a0 + 0x10]
 53271: ae 96 b2 00              jump @3979 if s1 >=u a2
      :                          @3948
 53275: 82 77 08                 a0 = u64 [a0 + 0x8]
 53278: 33 09                    a2 = 0
 53280: 97 68 03                 a1 = s1 << 0x3
 53283: c8 87 07                 a0 = a0 + a1
 53286: 82 77                    a0 = u64 [a0]
 53288: 33 0b c0 22 03           a4 = 0x322c0
 53293: 95 bb 00 00 01           a4 = a4 + 0x10000
 53298: 33 03 00 20              t1 = 0x2000
 53302: 28 0e                    jump @3950
      :                          @3949
 53304: 95 99 01                 a2 = a2 + 0x1
 53307: 82 14 20                 t2 = u64 [sp + 0x20]
 53310: 82 18 28                 a1 = u64 [sp + 0x28]
 53313: aa 89 33                 jump @3959 if a2 == a1
      :                          @3950
 53316: ca 29 0c                 a5 = a2 * t0
 53319: c8 4c 0c                 a5 = a5 + t2
 53322: 82 c5                    s0 = u64 [a5]
 53324: 51 05 ec                 jump @3949 if s0 == 0
      :                          @3951
 53327: ac 53 e9                 jump @3949 if t1 <u s0
      :                          @3952
 53330: 82 c6 08                 s1 = u64 [a5 + 0x8]
 53333: 97 54 03                 t2 = s0 << 0x3
 53336: 01                       fallthrough
      :                          @3953
 53337: 82 bc                    a5 = u64 [a4]
 53339: c9 cb 08                 a1 = a4 - a5
 53342: ab 68 da                 jump @3949 if a1 != s1
      :                          @3954
 53345: c9 4c 08                 a1 = a5 - t2
 53348: 01                       fallthrough
      :                          @3955
 53349: 82 ba                    a3 = u64 [a4]
 53351: ab ca f2                 jump @3953 if a3 != a5
      :                          @3956
 53354: 7b b8                    u64 [a4] = a1
 53356: 33 05                    s0 = 0
 53358: 01                       fallthrough
      :                          @3957
 53359: ab ca ea                 jump @3953 if a3 != a5
      :                          @3958
 53362: 28 c6                    jump @3949
      :                          @3959
 53364: 82 19 58                 a2 = u64 [sp + 0x58]
 53367: 51 09 2c                 jump @3966 if a2 == 0
      :                          @3960
 53370: 33 08 aa 0a              a1 = 0xaaa
 53374: ac 98 25                 jump @3966 if a1 <u a2
      :                          @3961
 53377: 96 9b e8                 a4 = a2 * 0xffffffffffffffe8
 53380: 33 09 c0 22 03           a2 = 0x322c0
 53385: 95 99 00 00 01           a2 = a2 + 0x10000
 53390: 01                       fallthrough
      :                          @3962
 53391: 82 9a                    a3 = u64 [a2]
 53393: c9 a9 08                 a1 = a2 - a3
 53396: ab 48 0f                 jump @3966 if a1 != t2
      :                          @3963
 53399: c8 ba 08                 a1 = a3 + a4
 53402: 01                       fallthrough
      :                          @3964
 53403: 82 9c                    a5 = u64 [a2]
 53405: ab ac f2                 jump @3962 if a5 != a3
      :                          @3965
 53408: 7b 98                    u64 [a2] = a1
 53410: 01                       fallthrough
      :                          @3966
 53411: 82 10 98 00              ra = u64 [sp + 0x98]
 53415: 82 15 90 00              s0 = u64 [sp + 0x90]
 53419: 82 16 88 00              s1 = u64 [sp + 0x88]
 53423: 95 11 a0 00              sp = sp + 0xa0
 53427: 32 00                    ret
      :                          @3967
 53429: 00                       trap
      :                          @3968
 53430: 00                       trap
      :                          @3969
 53431: 00                       trap
      :                          @3970
 53432: 00                       trap
      :                          @3971
 53433: 00                       trap
      :                          @3972
 53434: 00                       trap
      :                          @3973
 53435: 00                       trap
      :                          @3974
 53436: 00                       trap
      :                          @3975
 53437: 00                       trap
      :                          @3976
 53438: 82 17 50                 a0 = u64 [sp + 0x50]
 53441: 82 7a                    a3 = u64 [a0]
 53443: 53 1a 02 08              jump @3981 if a3 <u 2
      :                          @3977
 53447: 00                       trap
      :                          @3978
 53448: 00                       trap
      :                          @3979
 53449: 00                       trap
      :                          @3980
 53450: 00                       trap
      :                          @3981
 53451: 00                       trap
      :                          @3982
 53452: 00                       trap
      :                          @3983
 53453: 00                       trap
      :                          @3984
 53454: 95 11 70 ff              sp = sp + 0xffffffffffffff70
 53458: 7b 10 88 00              u64 [sp + 0x88] = ra
 53462: 7b 15 80 00              u64 [sp + 0x80] = s0
 53466: 7b 16 78                 u64 [sp + 0x78] = s1
 53469: 64 a5                    s0 = a3
 53471: 7b 19 30                 u64 [sp + 0x30] = a2
 53474: 7b 17 10                 u64 [sp + 0x10] = a0
 53477: 95 a9 01                 a2 = a3 + 0x1
 53480: 33 06 08                 s1 = 0x8
 53483: 7b 18 18                 u64 [sp + 0x18] = a1
 53486: 51 09 68                 jump @3993 if a2 == 0
      :                          @3985
 53489: 98 97 3c                 a0 = a2 >> 0x3c
 53492: 52 07 0c 03              jump @4062 if a0 != 0
      :                          @3986
 53496: 88 72 01                 t0 = a0 <u 0x1
 53499: 7b 19 40                 u64 [sp + 0x40] = a2
 53502: 97 99 03                 a2 = a2 << 0x3
 53505: 97 22 03                 t0 = t0 << 0x3
 53508: 33 04 c0 22 03           t2 = 0x322c0
 53513: 33 03 00 00 01           t1 = 0x10000
 53518: c8 34 00                 ra = t2 + t1
 53521: 01                       fallthrough
      :                          @3987
 53522: 82 06                    s1 = u64 [ra]
 53524: c8 96 0c                 a5 = s1 + a2
 53527: ac 6c e8 02              jump @4061 if a5 <u s1
      :                          @3988
 53531: c8 2c 07                 a0 = a5 + t0
 53534: d8 c7 0a                 a3 = a0 <u a5
 53537: d8 73 07                 a0 = t1 <u a0
 53540: d4 a7 07                 a0 = a0 | a3
 53543: 52 07 d8 02              jump @4061 if a0 != 0
      :                          @3989
 53547: c9 c4 07                 a0 = t2 - a5
 53550: c8 37 07                 a0 = a0 + t1
 53553: 84 7a 07                 a3 = a0 & 0x7
 53556: c8 ac 0c                 a5 = a5 + a3
 53559: 01                       fallthrough
      :                          @3990
 53560: 82 08                    a1 = u64 [ra]
 53562: ab 68 d8                 jump @3987 if a1 != s1
      :                          @3991
 53565: 7b 0c                    u64 [ra] = a5
 53567: 33 0b                    a4 = 0
 53569: c9 a7 06                 s1 = a0 - a3
 53572: 64 67                    a0 = s1
 53574: 33 08                    a1 = 0
 53576: 50 20 00 03 ce 3a 02     ra = 768, jump @13687
      :                          @3992 [@dyn 384]
 53583: 82 18 18                 a1 = u64 [sp + 0x18]
 53586: 82 19 40                 a2 = u64 [sp + 0x40]
 53589: 01                       fallthrough
      :                          @3993
 53590: 7b 19 60                 u64 [sp + 0x60] = a2
 53593: 7b 16 68                 u64 [sp + 0x68] = s1
 53596: 7b 19 70                 u64 [sp + 0x70] = a2
 53599: 95 89 01                 a2 = a1 + 0x1
 53602: 95 17 48                 a0 = sp + 0x48
 53605: 95 18 60                 a1 = sp + 0x60
 53608: 50 20 02 03 89 88        ra = 770, jump @1721
      :                          @3994 [@dyn 385]
 53614: 82 10 18                 ra = u64 [sp + 0x18]
 53617: 51 00 70                 jump @4005 if ra == 0
      :                          @3995
 53620: 82 16 50                 s1 = u64 [sp + 0x50]
 53623: 82 12 58                 t0 = u64 [sp + 0x58]
 53626: 33 07 01                 a0 = 0x1
 53629: 33 0a 18                 a3 = 0x18
 53632: 01                       fallthrough
      :                          @3996
 53633: 95 79 ff                 a2 = a0 + 0xffffffffffffffff
 53636: ae 29 6d 02              jump @4051 if a2 >=u t0
      :                          @3997
 53640: ca a9 08                 a1 = a2 * a3
 53643: c8 68 08                 a1 = a1 + s1
 53646: 82 89 10                 a2 = u64 [a1 + 0x10]
 53649: 51 09 5f 02              jump @4050 if a2 == 0
      :                          @3998
 53653: ae 27 5d 02              jump @4052 if a0 >=u t0
      :                          @3999
 53657: ca a7 09                 a2 = a0 * a3
 53660: c8 69 09                 a2 = a2 + s1
 53663: 82 9b 10                 a4 = u64 [a2 + 0x10]
 53666: 51 0b 4e 02              jump @4050 if a4 == 0
      :                          @4000
 53670: 82 88 08                 a1 = u64 [a1 + 0x8]
 53673: d8 07 0b                 a4 = a0 <u ra
 53676: c8 b7 07                 a0 = a0 + a4
 53679: 82 88                    a1 = u64 [a1]
 53681: 85 bb 01                 a4 = a4 ^ 0x1
 53684: 82 99 08                 a2 = u64 [a2 + 0x8]
 53687: d8 70 0c                 a5 = ra <u a0
 53690: d4 cb 0b                 a4 = a4 | a5
 53693: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 53696: 7b 98                    u64 [a2] = a1
 53698: 51 0b bf                 jump @3996 if a4 == 0
      :                          @4001
 53701: 52 05 2f                 jump @4008 if s0 != 0
      :                          @4002
 53704: 33 07 01                 a0 = 0x1
 53707: 01                       fallthrough
      :                          @4003
 53708: d8 07 08                 a1 = a0 <u ra
 53711: 85 89 01                 a2 = a1 ^ 0x1
 53714: c8 87 07                 a0 = a0 + a1
 53717: d8 70 08                 a1 = ra <u a0
 53720: d4 98 08                 a1 = a1 | a2
 53723: 51 08 f1                 jump @4003 if a1 == 0
      :                          @4004
 53726: 28 60 01                 jump @4027
      :                          @4005
 53729: 82 12 58                 t0 = u64 [sp + 0x58]
 53732: 51 05 5a 01              jump @4027 if s0 == 0
      :                          @4006
 53736: 51 02 08 02              jump @4050 if t0 == 0
      :                          @4007
 53740: 82 16 50                 s1 = u64 [sp + 0x50]
 53743: 33 07 01                 a0 = 0x1
 53746: 28 06                    jump @4009
      :                          @4008
 53748: 33 07 01                 a0 = 0x1
 53751: 01                       fallthrough
      :                          @4009
 53752: 82 6a 10                 a3 = u64 [s1 + 0x10]
 53755: 95 79 ff                 a2 = a0 + 0xffffffffffffffff
 53758: ae a9 f5 01              jump @4053 if a2 >=u a3
      :                          @4010
 53762: ae a7 f2 01              jump @4054 if a0 >=u a3
      :                          @4011
 53766: 82 68 08                 a1 = u64 [s1 + 0x8]
 53769: d8 57 0a                 a3 = a0 <u s0
 53772: 97 99 03                 a2 = a2 << 0x3
 53775: c8 89 09                 a2 = a2 + a1
 53778: 82 99                    a2 = u64 [a2]
 53780: 97 7b 03                 a4 = a0 << 0x3
 53783: c8 a7 07                 a0 = a0 + a3
 53786: 85 aa 01                 a3 = a3 ^ 0x1
 53789: c8 b8 08                 a1 = a1 + a4
 53792: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 53795: d8 75 0b                 a4 = s0 <u a0
 53798: d4 ba 0a                 a3 = a3 | a4
 53801: 7b 89                    u64 [a1] = a2
 53803: 51 0a cd                 jump @4009 if a3 == 0
      :                          @4012
 53806: 51 00 10 01              jump @4027 if ra == 0
      :                          @4013
 53810: 33 07 01                 a0 = 0x1
 53813: 7b 12 08                 u64 [sp + 0x8] = t0
 53816: 7b 16                    u64 [sp] = s1
 53818: 01                       fallthrough
      :                          @4014
 53819: 95 79 ff                 a2 = a0 + 0xffffffffffffffff
 53822: ae 09 b7 01              jump @4055 if a2 >=u ra
      :                          @4015
 53826: ae 29 af 01              jump @4051 if a2 >=u t0
      :                          @4016
 53830: 96 73 18                 t1 = a0 * 0x18
 53833: c8 36 0a                 a3 = s1 + t1
 53836: 95 a6 f8                 s1 = a3 + 0xfffffffffffffff8
 53839: ae 27 a7 01              jump @4056 if a0 >=u t0
      :                          @4017
 53843: d8 07 08                 a1 = a0 <u ra
 53846: 7b 18 20                 u64 [sp + 0x20] = a1
 53849: c8 87 07                 a0 = a0 + a1
 53852: 7b 17 28                 u64 [sp + 0x28] = a0
 53855: 82 17 10                 a0 = u64 [sp + 0x10]
 53858: c8 97 07                 a0 = a0 + a2
 53861: 7b 17 38                 u64 [sp + 0x38] = a0
 53864: 95 a2 f0                 t0 = a3 + 0xfffffffffffffff0
 53867: 95 ac 10                 a5 = a3 + 0x10
 53870: 95 aa 08                 a3 = a3 + 0x8
 53873: 7b 1a 40                 u64 [sp + 0x40] = a3
 53876: 33 09 01                 a2 = 0x1
 53879: 01                       fallthrough
      :                          @4018
 53880: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
 53883: ae 5a 74 01              jump @4049 if a3 >=u s0
      :                          @4019
 53887: 82 6b                    a4 = u64 [s1]
 53889: ae ba 7b 01              jump @4058 if a3 >=u a4
      :                          @4020
 53893: 82 cb                    a4 = u64 [a5]
 53895: ae b9 67 01              jump @4048 if a2 >=u a4
      :                          @4021
 53899: 82 17 38                 a0 = u64 [sp + 0x38]
 53902: 7c 78                    a1 = u8 [a0]
 53904: 82 1b 30                 a4 = u64 [sp + 0x30]
 53907: c8 ab 0b                 a4 = a4 + a3
 53910: 7c bb                    a4 = u8 [a4]
 53912: d3 b8 08                 a1 = a1 ^ a4
 53915: 64 cb                    a4 = a5
 53917: 82 27                    a0 = u64 [t0]
 53919: 88 88 01                 a1 = a1 <u 0x1
 53922: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 53925: 97 a4 03                 t2 = a3 << 0x3
 53928: c8 47 07                 a0 = a0 + t2
 53931: 82 1c 40                 a5 = u64 [sp + 0x40]
 53934: 82 c0                    ra = u64 [a5]
 53936: 82 7c                    a5 = u64 [a0]
 53938: 86 87 02                 a0 = a1 | 0x2
 53941: 97 98 03                 a1 = a2 << 0x3
 53944: c8 80 00                 ra = ra + a1
 53947: c8 c7 07                 a0 = a0 + a5
 53950: 7b 07                    u64 [ra] = a0
 53952: 64 bc                    a5 = a4
 53954: 82 bb                    a4 = u64 [a4]
 53956: ae b9 2a 01              jump @4048 if a2 >=u a4
      :                          @4022
 53960: 82 6b                    a4 = u64 [s1]
 53962: ae b9 24 01              jump @4048 if a2 >=u a4
      :                          @4023
 53966: 64 23                    t1 = t0
 53968: 64 60                    ra = s1
 53970: 82 17 40                 a0 = u64 [sp + 0x40]
 53973: 82 77                    a0 = u64 [a0]
 53975: 82 3b                    a4 = u64 [t1]
 53977: c8 87 07                 a0 = a0 + a1
 53980: c8 8b 0b                 a4 = a4 + a1
 53983: 82 bb                    a4 = u64 [a4]
 53985: 82 76                    s1 = u64 [a0]
 53987: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 53990: e3 b6 0b                 a4 = maxs(s1, a4)
 53993: 7b 7b                    u64 [a0] = a4
 53995: 82 cb                    a4 = u64 [a5]
 53997: ae b9 01 01              jump @4048 if a2 >=u a4
      :                          @4024
 54001: ae ba 0b 01              jump @4058 if a3 >=u a4
      :                          @4025
 54005: 64 32                    t0 = t1
 54007: 82 17 40                 a0 = u64 [sp + 0x40]
 54010: 82 77                    a0 = u64 [a0]
 54012: c8 78 08                 a1 = a1 + a0
 54015: c8 47 07                 a0 = a0 + t2
 54018: 82 77                    a0 = u64 [a0]
 54020: 82 8a                    a3 = u64 [a1]
 54022: d8 59 0b                 a4 = a2 <u s0
 54025: c8 b9 09                 a2 = a2 + a4
 54028: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 54031: e3 7a 07                 a0 = maxs(a3, a0)
 54034: d8 95 0a                 a3 = s0 <u a2
 54037: 85 aa 01                 a3 = a3 ^ 0x1
 54040: d2 ba 0a                 a3 = a3 & a4
 54043: 7b 87                    u64 [a1] = a0
 54045: 64 06                    s1 = ra
 54047: 52 0a 59 ff              jump @4018 if a3 != 0
      :                          @4026
 54051: 82 17 20                 a0 = u64 [sp + 0x20]
 54054: 85 79 01                 a2 = a0 ^ 0x1
 54057: 82 10 18                 ra = u64 [sp + 0x18]
 54060: 82 17 28                 a0 = u64 [sp + 0x28]
 54063: d8 70 08                 a1 = ra <u a0
 54066: d4 98 08                 a1 = a1 | a2
 54069: 82 12 08                 t0 = u64 [sp + 0x8]
 54072: 82 16                    s1 = u64 [sp]
 54074: 51 08 01 ff              jump @4014 if a1 == 0
      :                          @4027
 54078: ae 20 bf 00              jump @4059 if ra >=u t0
      :                          @4028
 54082: 82 14 50                 t2 = u64 [sp + 0x50]
 54085: 33 03 18                 t1 = 0x18
 54088: ca 30 07                 a0 = ra * t1
 54091: c8 47 07                 a0 = a0 + t2
 54094: 82 79 10                 a2 = u64 [a0 + 0x10]
 54097: ae 95 ad 00              jump @4060 if s0 >=u a2
      :                          @4029
 54101: 82 77 08                 a0 = u64 [a0 + 0x8]
 54104: 33 08                    a1 = 0
 54106: 97 59 03                 a2 = s0 << 0x3
 54109: c8 97 07                 a0 = a0 + a2
 54112: 82 77                    a0 = u64 [a0]
 54114: 7b 17 40                 u64 [sp + 0x40] = a0
 54117: 33 09 c0 22 03           a2 = 0x322c0
 54122: 95 9b 00 00 01           a4 = a2 + 0x10000
 54127: 33 07 00 20              a0 = 0x2000
 54131: 28 08                    jump @4031
      :                          @4030
 54133: 95 88 01                 a1 = a1 + 0x1
 54136: aa 28 33                 jump @4040 if a1 == t0
      :                          @4031
 54139: ca 38 0c                 a5 = a1 * t1
 54142: c8 4c 0c                 a5 = a5 + t2
 54145: 82 c5                    s0 = u64 [a5]
 54147: 51 05 f2                 jump @4030 if s0 == 0
      :                          @4032
 54150: ac 57 ef                 jump @4030 if a0 <u s0
      :                          @4033
 54153: 82 c6 08                 s1 = u64 [a5 + 0x8]
 54156: 97 50 03                 ra = s0 << 0x3
 54159: 01                       fallthrough
      :                          @4034
 54160: 82 bc                    a5 = u64 [a4]
 54162: c9 cb 09                 a2 = a4 - a5
 54165: ab 69 e0                 jump @4030 if a2 != s1
      :                          @4035
 54168: c9 0c 09                 a2 = a5 - ra
 54171: 01                       fallthrough
      :                          @4036
 54172: 82 ba                    a3 = u64 [a4]
 54174: ab ca f2                 jump @4034 if a3 != a5
      :                          @4037
 54177: 7b b9                    u64 [a4] = a2
 54179: 33 05                    s0 = 0
 54181: 01                       fallthrough
      :                          @4038
 54182: ab ca ea                 jump @4034 if a3 != a5
      :                          @4039
 54185: 28 cc                    jump @4030
      :                          @4040
 54187: 82 18 48                 a1 = u64 [sp + 0x48]
 54190: 51 08 2c                 jump @4047 if a1 == 0
      :                          @4041
 54193: 33 09 aa 0a              a2 = 0xaaa
 54197: ac 89 25                 jump @4047 if a2 <u a1
      :                          @4042
 54200: 96 88 e8                 a1 = a1 * 0xffffffffffffffe8
 54203: 33 09 c0 22 03           a2 = 0x322c0
 54208: 95 99 00 00 01           a2 = a2 + 0x10000
 54213: 01                       fallthrough
      :                          @4043
 54214: 82 9b                    a4 = u64 [a2]
 54216: c9 b9 0a                 a3 = a2 - a4
 54219: ab 4a 0f                 jump @4047 if a3 != t2
      :                          @4044
 54222: c8 8b 0a                 a3 = a4 + a1
 54225: 01                       fallthrough
      :                          @4045
 54226: 82 9c                    a5 = u64 [a2]
 54228: ab bc f2                 jump @4043 if a5 != a4
      :                          @4046
 54231: 7b 9a                    u64 [a2] = a3
 54233: 01                       fallthrough
      :                          @4047
 54234: 82 17 40                 a0 = u64 [sp + 0x40]
 54237: 82 10 88 00              ra = u64 [sp + 0x88]
 54241: 82 15 80 00              s0 = u64 [sp + 0x80]
 54245: 82 16 78                 s1 = u64 [sp + 0x78]
 54248: 95 11 90 00              sp = sp + 0x90
 54252: 32 00                    ret
      :                          @4048
 54254: 00                       trap
      :                          @4049
 54255: 00                       trap
      :                          @4050
 54256: 00                       trap
      :                          @4051
 54257: 00                       trap
      :                          @4052
 54258: 00                       trap
      :                          @4053
 54259: 00                       trap
      :                          @4054
 54260: 00                       trap
      :                          @4055
 54261: 00                       trap
      :                          @4056
 54262: 82 68                    a1 = u64 [s1]
 54264: 52 08 fa                 jump @4052 if a1 != 0
      :                          @4057
 54267: 00                       trap
      :                          @4058
 54268: 00                       trap
      :                          @4059
 54269: 00                       trap
      :                          @4060
 54270: 00                       trap
      :                          @4061
 54271: 00                       trap
      :                          @4062
 54272: 00                       trap
      :                          @4063
 54273: 95 11 70 ff              sp = sp + 0xffffffffffffff70
 54277: 7b 10 88 00              u64 [sp + 0x88] = ra
 54281: 7b 15 80 00              u64 [sp + 0x80] = s0
 54285: 7b 16 78                 u64 [sp + 0x78] = s1
 54288: 64 a6                    s1 = a3
 54290: 7b 19 30                 u64 [sp + 0x30] = a2
 54293: 7b 17 10                 u64 [sp + 0x10] = a0
 54296: 95 a9 01                 a2 = a3 + 0x1
 54299: 33 05 08                 s0 = 0x8
 54302: 7b 18 18                 u64 [sp + 0x18] = a1
 54305: 51 09 68                 jump @4072 if a2 == 0
      :                          @4064
 54308: 98 97 3c                 a0 = a2 >> 0x3c
 54311: 52 07 50 02              jump @4124 if a0 != 0
      :                          @4065
 54315: 88 72 01                 t0 = a0 <u 0x1
 54318: 7b 19 40                 u64 [sp + 0x40] = a2
 54321: 97 99 03                 a2 = a2 << 0x3
 54324: 97 22 03                 t0 = t0 << 0x3
 54327: 33 04 c0 22 03           t2 = 0x322c0
 54332: 33 03 00 00 01           t1 = 0x10000
 54337: c8 34 00                 ra = t2 + t1
 54340: 01                       fallthrough
      :                          @4066
 54341: 82 07                    a0 = u64 [ra]
 54343: c8 97 0c                 a5 = a0 + a2
 54346: ac 7c 2a 02              jump @4121 if a5 <u a0
      :                          @4067
 54350: c8 2c 08                 a1 = a5 + t0
 54353: d8 c8 0a                 a3 = a1 <u a5
 54356: d8 83 08                 a1 = t1 <u a1
 54359: d4 a8 08                 a1 = a1 | a3
 54362: 52 08 1a 02              jump @4121 if a1 != 0
      :                          @4068
 54366: c9 c4 08                 a1 = t2 - a5
 54369: c8 38 08                 a1 = a1 + t1
 54372: 84 8a 07                 a3 = a1 & 0x7
 54375: c8 ac 0c                 a5 = a5 + a3
 54378: 01                       fallthrough
      :                          @4069
 54379: 82 05                    s0 = u64 [ra]
 54381: ab 75 d8                 jump @4066 if s0 != a0
      :                          @4070
 54384: 7b 0c                    u64 [ra] = a5
 54386: 33 0b                    a4 = 0
 54388: c9 a8 05                 s0 = a1 - a3
 54391: 64 57                    a0 = s0
 54393: 33 08                    a1 = 0
 54395: 50 20 04 03 9b 37 02     ra = 772, jump @13687
      :                          @4071 [@dyn 386]
 54402: 82 18 18                 a1 = u64 [sp + 0x18]
 54405: 82 19 40                 a2 = u64 [sp + 0x40]
 54408: 01                       fallthrough
      :                          @4072
 54409: 7b 19 60                 u64 [sp + 0x60] = a2
 54412: 7b 15 68                 u64 [sp + 0x68] = s0
 54415: 7b 19 70                 u64 [sp + 0x70] = a2
 54418: 95 89 01                 a2 = a1 + 0x1
 54421: 95 17 48                 a0 = sp + 0x48
 54424: 95 18 60                 a1 = sp + 0x60
 54427: 50 20 06 03 56 85        ra = 774, jump @1721
      :                          @4073 [@dyn 387]
 54433: 82 1b 18                 a4 = u64 [sp + 0x18]
 54436: 51 0b 08 01              jump @4089 if a4 == 0
      :                          @4074
 54440: 82 18 58                 a1 = u64 [sp + 0x58]
 54443: 82 10 50                 ra = u64 [sp + 0x50]
 54446: 7b 18 08                 u64 [sp + 0x8] = a1
 54449: 51 06 09 01              jump @4092 if s1 == 0
      :                          @4075
 54453: 33 07                    a0 = 0
 54455: 33 05 01                 s0 = 0x1
 54458: 7b 10                    u64 [sp] = ra
 54460: 01                       fallthrough
      :                          @4076
 54461: 95 5a ff                 a3 = s0 + 0xffffffffffffffff
 54464: ae ba a3 01              jump @4114 if a3 >=u a4
      :                          @4077
 54468: ae 8a a1 01              jump @4116 if a3 >=u a1
      :                          @4078
 54472: 96 54 18                 t2 = s0 * 0x18
 54475: c8 04 04                 t2 = t2 + ra
 54478: 95 49 f8                 a2 = t2 + 0xfffffffffffffff8
 54481: 7b 19 40                 u64 [sp + 0x40] = a2
 54484: ae 85 92 01              jump @4117 if s0 >=u a1
      :                          @4079
 54488: d8 b5 08                 a1 = s0 <u a4
 54491: 7b 18 20                 u64 [sp + 0x20] = a1
 54494: c8 85 05                 s0 = s0 + a1
 54497: 7b 15 28                 u64 [sp + 0x28] = s0
 54500: 82 18 10                 a1 = u64 [sp + 0x10]
 54503: c8 a8 08                 a1 = a1 + a3
 54506: 7b 18 38                 u64 [sp + 0x38] = a1
 54509: 95 42 f0                 t0 = t2 + 0xfffffffffffffff0
 54512: 95 40 10                 ra = t2 + 0x10
 54515: 95 44 08                 t2 = t2 + 0x8
 54518: 33 0a 01                 a3 = 0x1
 54521: 01                       fallthrough
      :                          @4080
 54522: 95 ab ff                 a4 = a3 + 0xffffffffffffffff
 54525: ae 6b 67 01              jump @4115 if a4 >=u s1
      :                          @4081
 54529: 82 18 40                 a1 = u64 [sp + 0x40]
 54532: 82 8c                    a5 = u64 [a1]
 54534: ae cb 70 01              jump @4123 if a4 >=u a5
      :                          @4082
 54538: ae ca 69 01              jump @4120 if a3 >=u a5
      :                          @4083
 54542: 82 0c                    a5 = u64 [ra]
 54544: ae cb 66 01              jump @4123 if a4 >=u a5
      :                          @4084
 54548: ae ca 5f 01              jump @4120 if a3 >=u a5
      :                          @4085
 54552: 82 18 38                 a1 = u64 [sp + 0x38]
 54555: 7c 8c                    a5 = u8 [a1]
 54557: 82 15 30                 s0 = u64 [sp + 0x30]
 54560: c8 b5 05                 s0 = s0 + a4
 54563: 7c 55                    s0 = u8 [s0]
 54565: d3 5c 0c                 a5 = a5 ^ s0
 54568: 82 25                    s0 = u64 [t0]
 54570: 88 cc 01                 a5 = a5 <u 0x1
 54573: 95 c8 ff                 a1 = a5 + 0xffffffffffffffff
 54576: 97 bb 03                 a4 = a4 << 0x3
 54579: c8 b5 0c                 a5 = s0 + a4
 54582: 82 c9                    a2 = u64 [a5]
 54584: 82 43                    t1 = u64 [t2]
 54586: 97 ac 03                 a5 = a3 << 0x3
 54589: c8 c5 05                 s0 = s0 + a5
 54592: 82 55                    s0 = u64 [s0]
 54594: c8 3b 0b                 a4 = a4 + t1
 54597: 82 bb                    a4 = u64 [a4]
 54599: 86 88 02                 a1 = a1 | 0x2
 54602: c8 98 08                 a1 = a1 + a2
 54605: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 54608: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 54611: e3 b5 09                 a2 = maxs(s0, a4)
 54614: e3 98 08                 a1 = maxs(a1, a2)
 54617: 3e 02 00 00 03           u64 [0x30000] = t0
 54622: 8f 82                    t0 = a1 >s 0
 54624: 93 28                    a1 = 0 if t0 == 0
 54626: 3a 02 00 00 03           t0 = u64 [0x30000]
 54631: c8 c3 03                 t1 = t1 + a5
 54634: 7b 38                    u64 [t1] = a1
 54636: 82 0b                    a4 = u64 [ra]
 54638: ae ba f5 00              jump @4114 if a3 >=u a4
      :                          @4086
 54642: 82 48                    a1 = u64 [t2]
 54644: d8 6a 09                 a2 = a3 <u s1
 54647: c8 9a 0a                 a3 = a3 + a2
 54650: c8 c8 08                 a1 = a1 + a5
 54653: 82 88                    a1 = u64 [a1]
 54655: d8 a6 0b                 a4 = s1 <u a3
 54658: 85 bb 01                 a4 = a4 ^ 0x1
 54661: d2 b9 09                 a2 = a2 & a4
 54664: e3 87 07                 a0 = maxs(a0, a1)
 54667: 52 09 6f ff              jump @4080 if a2 != 0
      :                          @4087
 54671: 82 18 20                 a1 = u64 [sp + 0x20]
 54674: 85 88 01                 a1 = a1 ^ 0x1
 54677: 82 1b 18                 a4 = u64 [sp + 0x18]
 54680: 82 15 28                 s0 = u64 [sp + 0x28]
 54683: d8 5b 09                 a2 = a4 <u s0
 54686: d4 89 09                 a2 = a2 | a1
 54689: 82 10                    ra = u64 [sp]
 54691: 82 18 08                 a1 = u64 [sp + 0x8]
 54694: 51 09 17 ff              jump @4076 if a2 == 0
      :                          @4088
 54698: 28 0b                    jump @4090
      :                          @4089
 54700: 82 10 50                 ra = u64 [sp + 0x50]
 54703: 82 18 58                 a1 = u64 [sp + 0x58]
 54706: 33 07                    a0 = 0
 54708: 01                       fallthrough
      :                          @4090
 54709: 52 08 23                 jump @4095 if a1 != 0
      :                          @4091
 54712: 28 6b                    jump @4106
      :                          @4092
 54714: 33 07 01                 a0 = 0x1
 54717: 01                       fallthrough
      :                          @4093
 54718: d8 b7 08                 a1 = a0 <u a4
 54721: 85 89 01                 a2 = a1 ^ 0x1
 54724: c8 87 07                 a0 = a0 + a1
 54727: d8 7b 08                 a1 = a4 <u a0
 54730: d4 98 08                 a1 = a1 | a2
 54733: 51 08 f1                 jump @4093 if a1 == 0
      :                          @4094
 54736: 33 07                    a0 = 0
 54738: 82 18 08                 a1 = u64 [sp + 0x8]
 54741: 51 08 4e                 jump @4106 if a1 == 0
      :                          @4095
 54744: 33 02                    t0 = 0
 54746: 33 03 18                 t1 = 0x18
 54749: 33 0a c0 22 03           a3 = 0x322c0
 54754: 95 ab 00 00 01           a4 = a3 + 0x10000
 54759: 28 08                    jump @4097
      :                          @4096
 54761: 95 22 01                 t0 = t0 + 0x1
 54764: aa 82 37                 jump @4106 if t0 == a1
      :                          @4097
 54767: ca 32 0c                 a5 = t0 * t1
 54770: c8 0c 0c                 a5 = a5 + ra
 54773: 82 c6                    s1 = u64 [a5]
 54775: 51 06 f2                 jump @4096 if s1 == 0
      :                          @4098
 54778: 33 09 00 20              a2 = 0x2000
 54782: ac 69 eb                 jump @4096 if a2 <u s1
      :                          @4099
 54785: 82 cc 08                 a5 = u64 [a5 + 0x8]
 54788: 97 64 03                 t2 = s1 << 0x3
 54791: 01                       fallthrough
      :                          @4100
 54792: 82 b5                    s0 = u64 [a4]
 54794: c9 5b 0a                 a3 = a4 - s0
 54797: ab ca dc                 jump @4096 if a3 != a5
      :                          @4101
 54800: c9 45 0a                 a3 = s0 - t2
 54803: 01                       fallthrough
      :                          @4102
 54804: 82 b9                    a2 = u64 [a4]
 54806: ab 59 f2                 jump @4100 if a2 != s0
      :                          @4103
 54809: 7b ba                    u64 [a4] = a3
 54811: 33 06                    s1 = 0
 54813: 01                       fallthrough
      :                          @4104
 54814: ab 59 ea                 jump @4100 if a2 != s0
      :                          @4105
 54817: 28 c8                    jump @4096
      :                          @4106
 54819: 82 18 48                 a1 = u64 [sp + 0x48]
 54822: 51 08 2c                 jump @4113 if a1 == 0
      :                          @4107
 54825: 33 09 aa 0a              a2 = 0xaaa
 54829: ac 89 25                 jump @4113 if a2 <u a1
      :                          @4108
 54832: 96 88 e8                 a1 = a1 * 0xffffffffffffffe8
 54835: 33 09 c0 22 03           a2 = 0x322c0
 54840: 95 99 00 00 01           a2 = a2 + 0x10000
 54845: 01                       fallthrough
      :                          @4109
 54846: 82 9a                    a3 = u64 [a2]
 54848: c9 a9 0b                 a4 = a2 - a3
 54851: ab 0b 0f                 jump @4113 if a4 != ra
      :                          @4110
 54854: c8 8a 0b                 a4 = a3 + a1
 54857: 01                       fallthrough
      :                          @4111
 54858: 82 9c                    a5 = u64 [a2]
 54860: ab ac f2                 jump @4109 if a5 != a3
      :                          @4112
 54863: 7b 9b                    u64 [a2] = a4
 54865: 01                       fallthrough
      :                          @4113
 54866: 82 10 88 00              ra = u64 [sp + 0x88]
 54870: 82 15 80 00              s0 = u64 [sp + 0x80]
 54874: 82 16 78                 s1 = u64 [sp + 0x78]
 54877: 95 11 90 00              sp = sp + 0x90
 54881: 32 00                    ret
      :                          @4114
 54883: 00                       trap
      :                          @4115
 54884: 00                       trap
      :                          @4116
 54885: 00                       trap
      :                          @4117
 54886: 82 17 40                 a0 = u64 [sp + 0x40]
 54889: 82 7c                    a5 = u64 [a0]
 54891: 51 0c 0a                 jump @4122 if a5 == 0
      :                          @4118
 54894: 51 1c 01 05              jump @4120 if a5 == 1
      :                          @4119
 54898: 00                       trap
      :                          @4120
 54899: 00                       trap
      :                          @4121
 54900: 00                       trap
      :                          @4122
 54901: 00                       trap
      :                          @4123
 54902: 00                       trap
      :                          @4124
 54903: 00                       trap
      :                          @4125
 54904: 51 07 31                 jump @4131 if a0 == 0
      :                          @4126
 54907: 51 08 26                 jump @4130 if a1 == 0
      :                          @4127
 54910: 6a 79                    a2 = ctz a0
 54912: d0 97 09                 a2 = a0 >> a2
 54915: 64 8a                    a3 = a1
 54917: 01                       fallthrough
      :                          @4128
 54918: 6a ab                    a4 = ctz a3
 54920: d0 ba 0a                 a3 = a3 >> a4
 54923: e4 a9 0b                 a4 = maxu(a2, a3)
 54926: e6 a9 09                 a2 = minu(a2, a3)
 54929: c9 9b 0a                 a3 = a4 - a2
 54932: ab 9b f2                 jump @4128 if a4 != a2
      :                          @4129
 54935: d4 87 07                 a0 = a0 | a1
 54938: 6a 77                    a0 = ctz a0
 54940: cf 7b 07                 a0 = a4 << a0
 54943: 32 00                    ret
      :                          @4130
 54945: 64 78                    a1 = a0
 54947: 64 87                    a0 = a1
 54949: 28 0d 94 01              jump @11175
      :                          @4131
 54953: 64 87                    a0 = a1
 54955: 28 07 94 01              jump @11175
      :                          @4132
 54959: 64 ba                    a3 = a4
 54961: d6 8b 0b                 a4 = a4 mulhu a1
 54964: ca 8a 0c                 a5 = a3 * a1
 54967: db b9 0c                 a5 = a2 if a4 != 0
 54970: 97 ab 01                 a4 = a3 << 0x1
 54973: ae c7 f2                 jump @4132 if a0 >=u a5
      :                          @4133
 54976: 33 09                    a2 = 0
 54978: 51 0a 28                 jump @4136 if a3 == 0
      :                          @4134
 54981: 33 02 ff                 t0 = 0xffffffffffffffff
 54984: 01                       fallthrough
      :                          @4135
 54985: c8 9a 0c                 a5 = a3 + a2
 54988: 95 cc 01                 a5 = a5 + 0x1
 54991: 98 c4 01                 t2 = a5 >> 0x1
 54994: d6 84 03                 t1 = t2 mulhu a1
 54997: ca 84 0b                 a4 = t2 * a1
 55000: db 32 0b                 a4 = t0 if t1 != 0
 55003: d8 b7 0b                 a4 = a0 <u a4
 55006: 95 4c ff                 a5 = t2 + 0xffffffffffffffff
 55009: db bc 0a                 a3 = a5 if a4 != 0
 55012: da b4 09                 a2 = t2 if a4 == 0
 55015: ac a9 e2                 jump @4135 if a2 <u a3
      :                          @4136
 55018: 64 97                    a0 = a2
 55020: 32 00                    ret
      :                          @4137
 55022: 33 03 02                 t1 = 0x2
 55025: ae 38 09                 jump @4139 if a1 >=u t1
      :                          @4138
 55028: 49 07                    u64 [a0 + 0] = 0
 55030: 28 4b 9a 01              jump @11251
      :                          @4139
 55034: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 55037: 7b 10 28                 u64 [sp + 0x28] = ra
 55040: 7b 15 20                 u64 [sp + 0x20] = s0
 55043: 7b 16 18                 u64 [sp + 0x18] = s1
 55046: 7b 17 08                 u64 [sp + 0x8] = a0
 55049: 68 87                    a0 = clz a1
 55051: 33 0b 40                 a4 = 0x40
 55054: c9 7b 0a                 a3 = a4 - a0
 55057: 33 02 01                 t0 = 0x1
 55060: 33 0c ff                 a5 = 0xffffffffffffffff
 55063: 7b 1a 10                 u64 [sp + 0x10] = a3
 55066: 28 0f                    jump @4142
      :                          @4140
 55068: ca 96 07                 a0 = s1 * a2
 55071: 33 0b 40                 a4 = 0x40
 55074: ab 87 89 00              jump @4155 if a0 != a1
      :                          @4141
 55078: 28 9f 00                 jump @4157
      :                          @4142
 55081: 33 05                    s0 = 0
 55083: d8 a3 00                 ra = t1 <u a3
 55086: c1 3b 07                 i32 a0 = a4 /u t1
 55089: cf 72 07                 a0 = t0 << a0
 55092: e6 78 06                 s1 = minu(a1, a0)
 55095: 95 66 01                 s1 = s1 + 0x1
 55098: 83 3a 01                 i32 a3 = t1 + 0x1
 55101: 28 11                    jump @4144
      :                          @4143
 55103: d8 78 07                 a0 = a1 <u a0
 55106: 95 29 ff                 a2 = t0 + 0xffffffffffffffff
 55109: db 79 06                 s1 = a2 if a0 != 0
 55112: da 72 05                 s0 = t0 if a0 == 0
 55115: ae 65 26                 jump @4148 if s0 >=u s1
      :                          @4144
 55118: c8 65 07                 a0 = s0 + s1
 55121: 95 77 01                 a0 = a0 + 0x1
 55124: 98 72 01                 t0 = a0 >> 0x1
 55127: 33 07 01                 a0 = 0x1
 55130: 64 a9                    a2 = a3
 55132: 01                       fallthrough
      :                          @4145
 55133: 83 99 ff                 i32 a2 = a2 + 0xffffffffffffffff
 55136: 51 09 df                 jump @4143 if a2 == 0
      :                          @4146
 55139: d6 27 04                 t2 = a0 mulhu t0
 55142: ca 27 07                 a0 = a0 * t0
 55145: db 4c 07                 a0 = a5 if t2 != 0
 55148: ae 78 f1                 jump @4145 if a1 >=u a0
      :                          @4147
 55151: 28 d0                    jump @4143
      :                          @4148
 55153: 33 02 01                 t0 = 0x1
 55156: 33 04 03                 t2 = 0x3
 55159: ae 52 34                 jump @4155 if t0 >=u s0
      :                          @4149
 55162: 51 03 2d                 jump @4154 if t1 == 0
      :                          @4150
 55165: 64 39                    a2 = t1
 55167: 64 56                    s1 = s0
 55169: 51 13 01 9b              jump @4140 if t1 == 1
      :                          @4151
 55173: 33 09 01                 a2 = 0x1
 55176: 64 37                    a0 = t1
 55178: 64 56                    s1 = s0
 55180: 01                       fallthrough
      :                          @4152
 55181: 64 7a                    a3 = a0
 55183: 84 77 01                 a0 = a0 & 0x1
 55186: 33 0b 01                 a4 = 0x1
 55189: db 76 0b                 a4 = s1 if a0 != 0
 55192: ca 9b 09                 a2 = a4 * a2
 55195: 8b a7 01                 i32 a0 = a3 >> 0x1
 55198: ca 66 06                 s1 = s1 * s1
 55201: ac a4 ec                 jump @4152 if t2 <u a3
      :                          @4153
 55204: 28 78 ff                 jump @4140
      :                          @4154
 55207: 51 18 01 1e              jump @4157 if a1 == 1
      :                          @4155
 55211: be 03 03                 i32 t1 = t1 + ra
 55214: 85 07 01                 a0 = ra ^ 0x1
 55217: 82 1a 10                 a3 = u64 [sp + 0x10]
 55220: d8 3a 09                 a2 = a3 <u t1
 55223: d4 97 07                 a0 = a0 | a2
 55226: 51 07 6f ff              jump @4142 if a0 == 0
      :                          @4156
 55230: 33 08                    a1 = 0
 55232: 82 17 08                 a0 = u64 [sp + 0x8]
 55235: 28 0f                    jump @4158
      :                          @4157
 55237: 82 17 08                 a0 = u64 [sp + 0x8]
 55240: 7b 75 08                 u64 [a0 + 0x8] = s0
 55243: 7a 73 10                 u32 [a0 + 0x10] = t1
 55246: 33 08 01                 a1 = 0x1
 55249: 01                       fallthrough
      :                          @4158
 55250: 82 10 28                 ra = u64 [sp + 0x28]
 55253: 82 15 20                 s0 = u64 [sp + 0x20]
 55256: 82 16 18                 s1 = u64 [sp + 0x18]
 55259: 95 11 30                 sp = sp + 0x30
 55262: 7b 78                    u64 [a0] = a1
 55264: 32 00                    ret
      :                          @4159
 55266: 95 11 a8                 sp = sp + 0xffffffffffffffa8
 55269: 7b 10 50                 u64 [sp + 0x50] = ra
 55272: 7b 15 48                 u64 [sp + 0x48] = s0
 55275: 7b 16 40                 u64 [sp + 0x40] = s1
 55278: 64 82                    t0 = a1
 55280: 7b 17                    u64 [sp] = a0
 55282: 49 11 28                 u64 [sp + 40] = 0
 55285: 33 07 01                 a0 = 0x1
 55288: 7b 17 30                 u64 [sp + 0x30] = a0
 55291: d3 78 08                 a1 = a1 ^ a0
 55294: d3 79 0a                 a3 = a2 ^ a0
 55297: d4 a8 08                 a1 = a1 | a3
 55300: 49 11 38                 u64 [sp + 56] = 0
 55303: 52 08 24                 jump @4161 if a1 != 0
      :                          @4160
 55306: 82 17 38                 a0 = u64 [sp + 0x38]
 55309: 82 18 30                 a1 = u64 [sp + 0x30]
 55312: 82 19 28                 a2 = u64 [sp + 0x28]
 55315: 82 1a                    a3 = u64 [sp]
 55317: 7b a7 10                 u64 [a3 + 0x10] = a0
 55320: 7b a8 08                 u64 [a3 + 0x8] = a1
 55323: 7b a9                    u64 [a3] = a2
 55325: 82 10 50                 ra = u64 [sp + 0x50]
 55328: 82 15 48                 s0 = u64 [sp + 0x48]
 55331: 82 16 40                 s1 = u64 [sp + 0x40]
 55334: 95 11 58                 sp = sp + 0x58
 55337: 32 00                    ret
      :                          @4161
 55339: 33 08                    a1 = 0
 55341: 33 03                    t1 = 0
 55343: 33 04                    t2 = 0
 55345: 33 05 01                 s0 = 0x1
 55348: 33 06 01                 s1 = 0x1
 55351: 33 00 01                 ra = 0x1
 55354: 33 0c 01                 a5 = 0x1
 55357: 7b 19 20                 u64 [sp + 0x20] = a2
 55360: 7b 12 18                 u64 [sp + 0x18] = t0
 55363: 28 28                    jump @4164
      :                          @4162
 55365: 82 17 30                 a0 = u64 [sp + 0x30]
 55368: c8 87 0a                 a3 = a0 + a1
 55371: 46 0a 52                 u8 [a3 + 0] = 0x52
 55374: 64 50                    ra = s0
 55376: 64 63                    t1 = s1
 55378: 01                       fallthrough
      :                          @4163
 55379: 95 88 01                 a1 = a1 + 0x1
 55382: c8 c3 06                 s1 = t1 + a5
 55385: d3 26 0b                 a4 = s1 ^ t0
 55388: c8 40 05                 s0 = ra + t2
 55391: d3 95 0a                 a3 = s0 ^ a2
 55394: d4 ba 0a                 a3 = a3 | a4
 55397: 7b 18 38                 u64 [sp + 0x38] = a1
 55400: 51 0a a2                 jump @4160 if a3 == 0
      :                          @4164
 55403: ca 25 0b                 a4 = s0 * t0
 55406: ca 96 0a                 a3 = s1 * a2
 55409: ae ba 2a                 jump @4168 if a3 >=u a4
      :                          @4165
 55412: 82 17 28                 a0 = u64 [sp + 0x28]
 55415: ab 78 ce                 jump @4162 if a1 != a0
      :                          @4166
 55418: 95 17 28                 a0 = sp + 0x28
 55421: 7b 14 10                 u64 [sp + 0x10] = t2
 55424: 7b 1c 08                 u64 [sp + 0x8] = a5
 55427: 50 20 08 03 3f 7c ff     ra = 776, jump @1617
      :                          @4167 [@dyn 388]
 55434: 82 1c 08                 a5 = u64 [sp + 0x8]
 55437: 82 14 10                 t2 = u64 [sp + 0x10]
 55440: 82 12 18                 t0 = u64 [sp + 0x18]
 55443: 82 19 20                 a2 = u64 [sp + 0x20]
 55446: 82 18 38                 a1 = u64 [sp + 0x38]
 55449: 28 ac                    jump @4162
      :                          @4168
 55451: 82 1a 28                 a3 = u64 [sp + 0x28]
 55454: ab a8 26                 jump @4171 if a1 != a3
      :                          @4169
 55457: 95 17 28                 a0 = sp + 0x28
 55460: 7b 13 10                 u64 [sp + 0x10] = t1
 55463: 7b 10 08                 u64 [sp + 0x8] = ra
 55466: 50 20 0a 03 18 7c ff     ra = 778, jump @1617
      :                          @4170 [@dyn 389]
 55473: 82 10 08                 ra = u64 [sp + 0x8]
 55476: 82 13 10                 t1 = u64 [sp + 0x10]
 55479: 82 12 18                 t0 = u64 [sp + 0x18]
 55482: 82 19 20                 a2 = u64 [sp + 0x20]
 55485: 82 18 38                 a1 = u64 [sp + 0x38]
 55488: 82 17 30                 a0 = u64 [sp + 0x30]
 55491: 01                       fallthrough
      :                          @4171
 55492: c8 87 0a                 a3 = a0 + a1
 55495: 46 0a 4c                 u8 [a3 + 0] = 0x4c
 55498: 64 54                    t2 = s0
 55500: 64 6c                    a5 = s1
 55502: 28 85                    jump @4163
      :                          @4172
 55504: 95 17 30                 a0 = sp + 0x30
 55507: 50 20 0c 03 6d 7a ff     ra = 780, jump @1581
      :                          @4173 [@dyn 390]
 55514: 82 1b 40                 a4 = u64 [sp + 0x40]
 55517: 82 17 38                 a0 = u64 [sp + 0x38]
 55520: 01                       fallthrough
      :                          @4174
 55521: cb 65 09                 a2 = s0 /u s1
 55524: 97 ba 03                 a3 = a4 << 0x3
 55527: c8 a7 08                 a1 = a0 + a3
 55530: 7b 89                    u64 [a1] = a2
 55532: 95 b8 01                 a1 = a4 + 0x1
 55535: ca 69 09                 a2 = a2 * s1
 55538: c9 95 09                 a2 = s0 - a2
 55541: 7b 18 40                 u64 [sp + 0x40] = a1
 55544: 64 65                    s0 = s1
 55546: 51 09 0f                 jump @4177 if a2 == 0
      :                          @4175
 55549: 82 1a 30                 a3 = u64 [sp + 0x30]
 55552: 64 96                    s1 = a2
 55554: aa a8 ce                 jump @4172 if a1 == a3
      :                          @4176
 55557: 64 8b                    a4 = a1
 55559: 28 da                    jump @4174
      :                          @4177
 55561: 7b 1b 20                 u64 [sp + 0x20] = a4
 55564: 7b 1a 28                 u64 [sp + 0x28] = a3
 55567: 49 11 48                 u64 [sp + 72] = 0
 55570: 49 11 50 08              u64 [sp + 80] = 0x8
 55574: 49 11 58                 u64 [sp + 88] = 0
 55577: 51 08 05 01              jump @4194 if a1 == 0
      :                          @4178
 55581: 82 16 38                 s1 = u64 [sp + 0x38]
 55584: 82 65                    s0 = u64 [s1]
 55586: 95 17 48                 a0 = sp + 0x48
 55589: 33 08                    a1 = 0
 55591: 50 20 0e 03 1b 7b ff     ra = 782, jump @1605
      :                          @4179 [@dyn 391]
 55598: 82 18 58                 a1 = u64 [sp + 0x58]
 55601: 82 12 50                 t0 = u64 [sp + 0x50]
 55604: 97 89 04                 a2 = a1 << 0x4
 55607: c8 92 0a                 a3 = t0 + a2
 55610: 7b a5                    u64 [a3] = s0
 55612: 33 09 01                 a2 = 0x1
 55615: 7b a9 08                 u64 [a3 + 0x8] = a2
 55618: c8 98 08                 a1 = a1 + a2
 55621: 7b 18 58                 u64 [sp + 0x58] = a1
 55624: 82 1a 20                 a3 = u64 [sp + 0x20]
 55627: 51 0a 81 00              jump @4186 if a3 == 0
      :                          @4180
 55631: 64 53                    t1 = s0
 55633: 33 05                    s0 = 0
 55635: 95 66 08                 s1 = s1 + 0x8
 55638: 33 0a 01                 a3 = 0x1
 55641: 82 1b 28                 a4 = u64 [sp + 0x28]
 55644: 28 2c                    jump @4182
      :                          @4181
 55646: ca 4c 09                 a2 = a5 * t2
 55649: c8 a9 03                 t1 = a2 + a3
 55652: ca 0c 09                 a2 = a5 * ra
 55655: c8 59 09                 a2 = a2 + s0
 55658: 97 8a 04                 a3 = a1 << 0x4
 55661: c8 2a 0a                 a3 = a3 + t0
 55664: 7b a3                    u64 [a3] = t1
 55666: 7b a9 08                 u64 [a3 + 0x8] = a2
 55669: 95 88 01                 a1 = a1 + 0x1
 55672: 7b 18 58                 u64 [sp + 0x58] = a1
 55675: 95 bb f8                 a4 = a4 + 0xfffffffffffffff8
 55678: 95 66 08                 s1 = s1 + 0x8
 55681: 64 05                    s0 = ra
 55683: 64 4a                    a3 = t2
 55685: 51 0b 43                 jump @4185 if a4 == 0
      :                          @4182
 55688: 82 17 48                 a0 = u64 [sp + 0x48]
 55691: 82 6c                    a5 = u64 [s1]
 55693: 64 34                    t2 = t1
 55695: 64 90                    ra = a2
 55697: ab 78 cd                 jump @4181 if a1 != a0
      :                          @4183
 55700: 95 17 48                 a0 = sp + 0x48
 55703: 7b 1b 28                 u64 [sp + 0x28] = a4
 55706: 7b 15 20                 u64 [sp + 0x20] = s0
 55709: 7b 14 18                 u64 [sp + 0x18] = t2
 55712: 7b 1a 10                 u64 [sp + 0x10] = a3
 55715: 7b 10 08                 u64 [sp + 0x8] = ra
 55718: 64 c5                    s0 = a5
 55720: 50 20 10 03 9a 7a ff     ra = 784, jump @1605
      :                          @4184 [@dyn 392]
 55727: 64 5c                    a5 = s0
 55729: 82 10 08                 ra = u64 [sp + 0x8]
 55732: 82 1a 10                 a3 = u64 [sp + 0x10]
 55735: 82 14 18                 t2 = u64 [sp + 0x18]
 55738: 82 15 20                 s0 = u64 [sp + 0x20]
 55741: 82 1b 28                 a4 = u64 [sp + 0x28]
 55744: 82 18 58                 a1 = u64 [sp + 0x58]
 55747: 82 12 50                 t0 = u64 [sp + 0x50]
 55750: 28 98                    jump @4181
      :                          @4185
 55752: 82 16 38                 s1 = u64 [sp + 0x38]
 55755: 01                       fallthrough
      :                          @4186
 55756: 82 18 58                 a1 = u64 [sp + 0x58]
 55759: 82 19 50                 a2 = u64 [sp + 0x50]
 55762: 82 1a 48                 a3 = u64 [sp + 0x48]
 55765: 82 17 30                 a0 = u64 [sp + 0x30]
 55768: 82 1b                    a4 = u64 [sp]
 55770: 7b b8 10                 u64 [a4 + 0x10] = a1
 55773: 7b b9 08                 u64 [a4 + 0x8] = a2
 55776: 7b ba                    u64 [a4] = a3
 55778: 51 07 2e                 jump @4193 if a0 == 0
      :                          @4187
 55781: 33 08 00 20              a1 = 0x2000
 55785: ac 78 27                 jump @4193 if a1 <u a0
      :                          @4188
 55788: 97 77 03                 a0 = a0 << 0x3
 55791: 33 08 c0 22 03           a1 = 0x322c0
 55796: 95 88 00 00 01           a1 = a1 + 0x10000
 55801: 01                       fallthrough
      :                          @4189
 55802: 82 89                    a2 = u64 [a1]
 55804: c9 98 0a                 a3 = a1 - a2
 55807: ab 6a 11                 jump @4193 if a3 != s1
      :                          @4190
 55810: c9 79 0a                 a3 = a2 - a0
 55813: 01                       fallthrough
      :                          @4191
 55814: 82 8b                    a4 = u64 [a1]
 55816: ab 9b f2                 jump @4189 if a4 != a2
      :                          @4192
 55819: 7b 8a                    u64 [a1] = a3
 55821: 33 0c                    a5 = 0
 55823: 01                       fallthrough
      :                          @4193
 55824: 82 10 70                 ra = u64 [sp + 0x70]
 55827: 82 15 68                 s0 = u64 [sp + 0x68]
 55830: 82 16 60                 s1 = u64 [sp + 0x60]
 55833: 95 11 78                 sp = sp + 0x78
 55836: 32 00                    ret
      :                          @4194
 55838: 00                       trap
      :                          @4195
 55839: 82 bc                    a5 = u64 [a4]
 55841: 95 c6 20                 s1 = a5 + 0x20
 55844: ac c6 cb 00              jump @4207 if s1 <u a5
      :                          @4196
 55848: 95 67 08                 a0 = s1 + 0x8
 55851: d8 67 08                 a1 = a0 <u s1
 55854: d8 72 07                 a0 = t0 <u a0
 55857: d4 87 07                 a0 = a0 | a1
 55860: 52 07 bb 00              jump @4207 if a0 != 0
      :                          @4197
 55864: c9 69 07                 a0 = a2 - s1
 55867: c8 27 07                 a0 = a0 + t0
 55870: 84 78 07                 a1 = a0 & 0x7
 55873: c8 86 06                 s1 = s1 + a1
 55876: 01                       fallthrough
      :                          @4198
 55877: 82 b5                    s0 = u64 [a4]
 55879: ab c5 d8                 jump @4195 if s0 != a5
      :                          @4199
 55882: 7b b6                    u64 [a4] = s1
 55884: 33 0b                    a4 = 0
 55886: c9 87 07                 a0 = a0 - a1
 55889: 49 07                    u64 [a0 + 0] = 0
 55891: 33 09 01                 a2 = 0x1
 55894: 7b 79 08                 u64 [a0 + 0x8] = a2
 55897: 7b 79 10                 u64 [a0 + 0x10] = a2
 55900: 7b 73 18                 u64 [a0 + 0x18] = t1
 55903: 33 08 02                 a1 = 0x2
 55906: 7b 18 20                 u64 [sp + 0x20] = a1
 55909: 7b 17 28                 u64 [sp + 0x28] = a0
 55912: 7b 18 30                 u64 [sp + 0x30] = a1
 55915: 64 3a                    a3 = t1
 55917: 33 0c 01                 a5 = 0x1
 55920: 7b 13 08                 u64 [sp + 0x8] = t1
 55923: 28 2c                    jump @4201
      :                          @4200
 55925: c8 3c 09                 a2 = a5 + t1
 55928: cb 59 0a                 a3 = a2 /u s0
 55931: ca 6a 09                 a2 = a3 * s1
 55934: c9 b9 09                 a2 = a2 - a4
 55937: ca 5a 0a                 a3 = a3 * s0
 55940: c9 ca 0a                 a3 = a3 - a5
 55943: 97 8b 04                 a4 = a1 << 0x4
 55946: c8 7b 0b                 a4 = a4 + a0
 55949: 7b b6                    u64 [a4] = s1
 55951: 7b b5 08                 u64 [a4 + 0x8] = s0
 55954: 95 88 01                 a1 = a1 + 0x1
 55957: 7b 18 30                 u64 [sp + 0x30] = a1
 55960: 64 6b                    a4 = s1
 55962: 64 5c                    a5 = s0
 55964: ac 93 31                 jump @4205 if t1 <u a2
      :                          @4201
 55967: 51 0a 4f                 jump @4206 if a3 == 0
      :                          @4202
 55970: 64 96                    s1 = a2
 55972: 64 a5                    s0 = a3
 55974: 82 19 20                 a2 = u64 [sp + 0x20]
 55977: ab 98 cc                 jump @4200 if a1 != a2
      :                          @4203
 55980: 95 17 20                 a0 = sp + 0x20
 55983: 7b 1b 18                 u64 [sp + 0x18] = a4
 55986: 7b 1c 10                 u64 [sp + 0x10] = a5
 55989: 50 20 12 03 8d 79 ff     ra = 786, jump @1605
      :                          @4204 [@dyn 393]
 55996: 82 1c 10                 a5 = u64 [sp + 0x10]
 55999: 82 1b 18                 a4 = u64 [sp + 0x18]
 56002: 82 13 08                 t1 = u64 [sp + 0x8]
 56005: 82 18 30                 a1 = u64 [sp + 0x30]
 56008: 82 17 28                 a0 = u64 [sp + 0x28]
 56011: 28 aa                    jump @4200
      :                          @4205
 56013: 82 17 30                 a0 = u64 [sp + 0x30]
 56016: 82 18 28                 a1 = u64 [sp + 0x28]
 56019: 82 19 20                 a2 = u64 [sp + 0x20]
 56022: 82 1a                    a3 = u64 [sp]
 56024: 7b a7 10                 u64 [a3 + 0x10] = a0
 56027: 7b a8 08                 u64 [a3 + 0x8] = a1
 56030: 7b a9                    u64 [a3] = a2
 56032: 82 10 48                 ra = u64 [sp + 0x48]
 56035: 82 15 40                 s0 = u64 [sp + 0x40]
 56038: 82 16 38                 s1 = u64 [sp + 0x38]
 56041: 95 11 50                 sp = sp + 0x50
 56044: 32 00                    ret
      :                          @4206
 56046: 00                       trap
      :                          @4207
 56047: 00                       trap
      :                          @4208
 56048: 95 11 90                 sp = sp + 0xffffffffffffff90
 56051: 7b 10 68                 u64 [sp + 0x68] = ra
 56054: 7b 15 60                 u64 [sp + 0x60] = s0
 56057: 7b 16 58                 u64 [sp + 0x58] = s1
 56060: ae 87 08                 jump @4210 if a0 >=u a1
      :                          @4209
 56063: 33 07                    a0 = 0
 56065: 28 f1 01                 jump @4251
      :                          @4210
 56068: 7b 17 10                 u64 [sp + 0x10] = a0
 56071: 14 07 fe ff ff ff ff ff ff 0f a0 = 0xffffffffffffffe
 56081: ac 87 03 02              jump @4265 if a0 <u a1
      :                          @4211
 56085: 95 89 01                 a2 = a1 + 0x1
 56088: 14 07 ff ff ff ff ff ff ff 0f a0 = 0xfffffffffffffff
 56098: d8 78 02                 t0 = a1 <u a0
 56101: 7b 19 20                 u64 [sp + 0x20] = a2
 56104: 97 99 03                 a2 = a2 << 0x3
 56107: 97 22 03                 t0 = t0 << 0x3
 56110: 33 04 c0 22 03           t2 = 0x322c0
 56115: 33 03 00 00 01           t1 = 0x10000
 56120: c8 34 00                 ra = t2 + t1
 56123: 01                       fallthrough
      :                          @4212
 56124: 82 06                    s1 = u64 [ra]
 56126: c8 96 0c                 a5 = s1 + a2
 56129: ac 6c d0 01              jump @4262 if a5 <u s1
      :                          @4213
 56133: c8 2c 0a                 a3 = a5 + t0
 56136: d8 ca 05                 s0 = a3 <u a5
 56139: d8 a3 0a                 a3 = t1 <u a3
 56142: d4 5a 0a                 a3 = a3 | s0
 56145: 52 0a c0 01              jump @4262 if a3 != 0
      :                          @4214
 56149: c9 c4 05                 s0 = t2 - a5
 56152: c8 35 05                 s0 = s0 + t1
 56155: 84 5a 07                 a3 = s0 & 0x7
 56158: c8 ac 0c                 a5 = a5 + a3
 56161: 01                       fallthrough
      :                          @4215
 56162: 82 07                    a0 = u64 [ra]
 56164: ab 67 d8                 jump @4212 if a0 != s1
      :                          @4216
 56167: 7b 0c                    u64 [ra] = a5
 56169: 33 0b                    a4 = 0
 56171: 7b 18 08                 u64 [sp + 0x8] = a1
 56174: c9 a5 05                 s0 = s0 - a3
 56177: 64 57                    a0 = s0
 56179: 33 08                    a1 = 0
 56181: 50 20 14 03 a1 30 02     ra = 788, jump @13687
      :                          @4217 [@dyn 394]
 56188: 82 17 20                 a0 = u64 [sp + 0x20]
 56191: 7b 17 40                 u64 [sp + 0x40] = a0
 56194: 7b 15 48                 u64 [sp + 0x48] = s0
 56197: 7b 17 50                 u64 [sp + 0x50] = a0
 56200: 82 15 10                 s0 = u64 [sp + 0x10]
 56203: 95 59 01                 a2 = s0 + 0x1
 56206: 95 17 28                 a0 = sp + 0x28
 56209: 95 18 40                 a1 = sp + 0x40
 56212: 50 20 16 03 5d 7e ff     ra = 790, jump @1721
      :                          @4218 [@dyn 395]
 56219: 82 19 38                 a2 = u64 [sp + 0x38]
 56222: 51 09 70 01              jump @4259 if a2 == 0
      :                          @4219
 56226: 82 18 30                 a1 = u64 [sp + 0x30]
 56229: 82 87 10                 a0 = u64 [a1 + 0x10]
 56232: 51 07 67 01              jump @4260 if a0 == 0
      :                          @4220
 56236: 7b 19 20                 u64 [sp + 0x20] = a2
 56239: 7b 18                    u64 [sp] = a1
 56241: 82 89 08                 a2 = u64 [a1 + 0x8]
 56244: 33 08 01                 a1 = 0x1
 56247: 7b 98                    u64 [a2] = a1
 56249: 52 05 90 00              jump @4235 if s0 != 0
      :                          @4221
 56253: 82 17 08                 a0 = u64 [sp + 0x8]
 56256: 82 18 20                 a1 = u64 [sp + 0x20]
 56259: ae 85 4d 01              jump @4261 if s0 >=u a1
      :                          @4222
 56263: 33 03 18                 t1 = 0x18
 56266: ca 35 08                 a1 = s0 * t1
 56269: 82 10                    ra = u64 [sp]
 56271: c8 08 08                 a1 = a1 + ra
 56274: 82 89 10                 a2 = u64 [a1 + 0x10]
 56277: ae 97 2e 01              jump @4255 if a0 >=u a2
      :                          @4223
 56281: 82 8a 08                 a3 = u64 [a1 + 0x8]
 56284: 33 09                    a2 = 0
 56286: 97 78 03                 a1 = a0 << 0x3
 56289: c8 8a 07                 a0 = a3 + a1
 56292: 82 77                    a0 = u64 [a0]
 56294: 33 0b c0 22 03           a4 = 0x322c0
 56299: 95 bb 00 00 01           a4 = a4 + 0x10000
 56304: 33 02 00 20              t0 = 0x2000
 56308: 28 0c                    jump @4225
      :                          @4224
 56310: 95 99 01                 a2 = a2 + 0x1
 56313: 82 18 20                 a1 = u64 [sp + 0x20]
 56316: aa 89 c7 00              jump @4244 if a2 == a1
      :                          @4225
 56320: ca 39 0c                 a5 = a2 * t1
 56323: c8 0c 0c                 a5 = a5 + ra
 56326: 82 c5                    s0 = u64 [a5]
 56328: 51 05 ee                 jump @4224 if s0 == 0
      :                          @4226
 56331: ac 52 eb                 jump @4224 if t0 <u s0
      :                          @4227
 56334: 82 c6 08                 s1 = u64 [a5 + 0x8]
 56337: 97 54 03                 t2 = s0 << 0x3
 56340: 01                       fallthrough
      :                          @4228
 56341: 82 bc                    a5 = u64 [a4]
 56343: c9 cb 08                 a1 = a4 - a5
 56346: ab 68 dc                 jump @4224 if a1 != s1
      :                          @4229
 56349: c9 4c 08                 a1 = a5 - t2
 56352: 01                       fallthrough
      :                          @4230
 56353: 82 ba                    a3 = u64 [a4]
 56355: ab ca f2                 jump @4228 if a3 != a5
      :                          @4231
 56358: 7b b8                    u64 [a4] = a1
 56360: 33 05                    s0 = 0
 56362: 01                       fallthrough
      :                          @4232
 56363: ab ca ea                 jump @4228 if a3 != a5
      :                          @4233
 56366: 28 c8                    jump @4224
      :                          @4234
 56368: 82 15 10                 s0 = u64 [sp + 0x10]
 56371: 82 18 18                 a1 = u64 [sp + 0x18]
 56374: d8 58 09                 a2 = a1 <u s0
 56377: c8 98 08                 a1 = a1 + a2
 56380: 85 99 01                 a2 = a2 ^ 0x1
 56383: d8 85 0a                 a3 = s0 <u a1
 56386: d4 a9 09                 a2 = a2 | a3
 56389: 52 09 78 ff              jump @4221 if a2 != 0
      :                          @4235
 56393: 82 17 08                 a0 = u64 [sp + 0x8]
 56396: 7b 18 18                 u64 [sp + 0x18] = a1
 56399: e6 78 06                 s1 = minu(a1, a0)
 56402: 51 06 de                 jump @4234 if s1 == 0
      :                          @4236
 56405: 82 1c 18                 a5 = u64 [sp + 0x18]
 56408: 95 c7 ff                 a0 = a5 + 0xffffffffffffffff
 56411: 82 19 20                 a2 = u64 [sp + 0x20]
 56414: ae 97 a5 00              jump @4255 if a0 >=u a2
      :                          @4237
 56418: 96 c2 18                 t0 = a5 * 0x18
 56421: 82 18                    a1 = u64 [sp]
 56423: c8 82 02                 t0 = t0 + a1
 56426: 95 20 f8                 ra = t0 + 0xfffffffffffffff8
 56429: ae 9c 97 00              jump @4256 if a5 >=u a2
      :                          @4238
 56433: 95 29 f0                 a2 = t0 + 0xfffffffffffffff0
 56436: 95 25 10                 s0 = t0 + 0x10
 56439: 95 22 08                 t0 = t0 + 0x8
 56442: 33 0a 01                 a3 = 0x1
 56445: 01                       fallthrough
      :                          @4239
 56446: 82 0c                    a5 = u64 [ra]
 56448: 95 ab ff                 a4 = a3 + 0xffffffffffffffff
 56451: ae cb 90 00              jump @4264 if a4 >=u a5
      :                          @4240
 56455: ae ca 79                 jump @4252 if a3 >=u a5
      :                          @4241
 56458: 82 5c                    a5 = u64 [s0]
 56460: ae ca 76                 jump @4254 if a3 >=u a5
      :                          @4242
 56463: 82 9c                    a5 = u64 [a2]
 56465: d8 6a 03                 t1 = a3 <u s1
 56468: 97 bb 03                 a4 = a4 << 0x3
 56471: c8 cb 0b                 a4 = a4 + a5
 56474: 97 a4 03                 t2 = a3 << 0x3
 56477: c8 4c 0c                 a5 = a5 + t2
 56480: 82 cc                    a5 = u64 [a5]
 56482: 82 28                    a1 = u64 [t0]
 56484: 82 bb                    a4 = u64 [a4]
 56486: c8 3a 0a                 a3 = a3 + t1
 56489: ca 7c 0c                 a5 = a5 * a0
 56492: c8 48 08                 a1 = a1 + t2
 56495: c9 cb 0b                 a4 = a4 - a5
 56498: d8 a6 0c                 a5 = s1 <u a3
 56501: 85 cc 01                 a5 = a5 ^ 0x1
 56504: d2 c3 0c                 a5 = t1 & a5
 56507: 7b 8b                    u64 [a1] = a4
 56509: 52 0c c1                 jump @4239 if a5 != 0
      :                          @4243
 56512: 28 70 ff                 jump @4234
      :                          @4244
 56515: 82 18 28                 a1 = u64 [sp + 0x28]
 56518: 51 08 2c                 jump @4251 if a1 == 0
      :                          @4245
 56521: 33 09 aa 0a              a2 = 0xaaa
 56525: ac 89 25                 jump @4251 if a2 <u a1
      :                          @4246
 56528: 96 88 e8                 a1 = a1 * 0xffffffffffffffe8
 56531: 33 09 c0 22 03           a2 = 0x322c0
 56536: 95 99 00 00 01           a2 = a2 + 0x10000
 56541: 01                       fallthrough
      :                          @4247
 56542: 82 9a                    a3 = u64 [a2]
 56544: c9 a9 0b                 a4 = a2 - a3
 56547: ab 0b 0f                 jump @4251 if a4 != ra
      :                          @4248
 56550: c8 8a 0b                 a4 = a3 + a1
 56553: 01                       fallthrough
      :                          @4249
 56554: 82 9c                    a5 = u64 [a2]
 56556: ab ac f2                 jump @4247 if a5 != a3
      :                          @4250
 56559: 7b 9b                    u64 [a2] = a4
 56561: 01                       fallthrough
      :                          @4251
 56562: 82 10 68                 ra = u64 [sp + 0x68]
 56565: 82 15 60                 s0 = u64 [sp + 0x60]
 56568: 82 16 58                 s1 = u64 [sp + 0x58]
 56571: 95 11 70                 sp = sp + 0x70
 56574: 32 00                    ret
      :                          @4252
 56576: 00                       trap
      :                          @4253
 56577: 00                       trap
      :                          @4254
 56578: 00                       trap
      :                          @4255
 56579: 00                       trap
      :                          @4256
 56580: 82 0b                    a4 = u64 [ra]
 56582: 51 0b 0c                 jump @4263 if a4 == 0
      :                          @4257
 56585: 51 1b 01 f8              jump @4253 if a4 == 1
      :                          @4258
 56589: 00                       trap
      :                          @4259
 56590: 00                       trap
      :                          @4260
 56591: 00                       trap
      :                          @4261
 56592: 00                       trap
      :                          @4262
 56593: 00                       trap
      :                          @4263
 56594: 00                       trap
      :                          @4264
 56595: 00                       trap
      :                          @4265
 56596: 00                       trap
      :                          @4266
 56597: 95 11 90                 sp = sp + 0xffffffffffffff90
 56600: 7b 10 68                 u64 [sp + 0x68] = ra
 56603: 7b 15 60                 u64 [sp + 0x60] = s0
 56606: 7b 16 58                 u64 [sp + 0x58] = s1
 56609: ae 87 08                 jump @4268 if a0 >=u a1
      :                          @4267
 56612: 33 07                    a0 = 0
 56614: 28 f1 01                 jump @4309
      :                          @4268
 56617: 7b 17 10                 u64 [sp + 0x10] = a0
 56620: 14 07 fe ff ff ff ff ff ff 0f a0 = 0xffffffffffffffe
 56630: ac 87 fe 01              jump @4320 if a0 <u a1
      :                          @4269
 56634: 95 89 01                 a2 = a1 + 0x1
 56637: 14 07 ff ff ff ff ff ff ff 0f a0 = 0xfffffffffffffff
 56647: d8 78 02                 t0 = a1 <u a0
 56650: 7b 19 20                 u64 [sp + 0x20] = a2
 56653: 97 99 03                 a2 = a2 << 0x3
 56656: 97 22 03                 t0 = t0 << 0x3
 56659: 33 04 c0 22 03           t2 = 0x322c0
 56664: 33 03 00 00 01           t1 = 0x10000
 56669: c8 34 00                 ra = t2 + t1
 56672: 01                       fallthrough
      :                          @4270
 56673: 82 06                    s1 = u64 [ra]
 56675: c8 96 0c                 a5 = s1 + a2
 56678: ac 6c cd 01              jump @4319 if a5 <u s1
      :                          @4271
 56682: c8 2c 0a                 a3 = a5 + t0
 56685: d8 ca 05                 s0 = a3 <u a5
 56688: d8 a3 0a                 a3 = t1 <u a3
 56691: d4 5a 0a                 a3 = a3 | s0
 56694: 52 0a bd 01              jump @4319 if a3 != 0
      :                          @4272
 56698: c9 c4 05                 s0 = t2 - a5
 56701: c8 35 05                 s0 = s0 + t1
 56704: 84 5a 07                 a3 = s0 & 0x7
 56707: c8 ac 0c                 a5 = a5 + a3
 56710: 01                       fallthrough
      :                          @4273
 56711: 82 07                    a0 = u64 [ra]
 56713: ab 67 d8                 jump @4270 if a0 != s1
      :                          @4274
 56716: 7b 0c                    u64 [ra] = a5
 56718: 33 0b                    a4 = 0
 56720: 7b 18 08                 u64 [sp + 0x8] = a1
 56723: c9 a5 05                 s0 = s0 - a3
 56726: 64 57                    a0 = s0
 56728: 33 08                    a1 = 0
 56730: 50 20 18 03 7c 2e 02     ra = 792, jump @13687
      :                          @4275 [@dyn 396]
 56737: 82 17 20                 a0 = u64 [sp + 0x20]
 56740: 7b 17 40                 u64 [sp + 0x40] = a0
 56743: 7b 15 48                 u64 [sp + 0x48] = s0
 56746: 7b 17 50                 u64 [sp + 0x50] = a0
 56749: 82 15 10                 s0 = u64 [sp + 0x10]
 56752: 95 59 01                 a2 = s0 + 0x1
 56755: 95 17 28                 a0 = sp + 0x28
 56758: 95 18 40                 a1 = sp + 0x40
 56761: 50 20 1a 03 38 7c ff     ra = 794, jump @1721
      :                          @4276 [@dyn 397]
 56768: 82 19 38                 a2 = u64 [sp + 0x38]
 56771: 51 09 6c 01              jump @4315 if a2 == 0
      :                          @4277
 56775: 82 18 30                 a1 = u64 [sp + 0x30]
 56778: 82 87 10                 a0 = u64 [a1 + 0x10]
 56781: 51 07 63 01              jump @4316 if a0 == 0
      :                          @4278
 56785: 7b 19 20                 u64 [sp + 0x20] = a2
 56788: 7b 18                    u64 [sp] = a1
 56790: 82 89 08                 a2 = u64 [a1 + 0x8]
 56793: 33 08 01                 a1 = 0x1
 56796: 7b 98                    u64 [a2] = a1
 56798: 52 05 90 00              jump @4293 if s0 != 0
      :                          @4279
 56802: 82 17 08                 a0 = u64 [sp + 0x8]
 56805: 82 18 20                 a1 = u64 [sp + 0x20]
 56808: ae 85 49 01              jump @4317 if s0 >=u a1
      :                          @4280
 56812: 33 03 18                 t1 = 0x18
 56815: ca 35 08                 a1 = s0 * t1
 56818: 82 10                    ra = u64 [sp]
 56820: c8 08 08                 a1 = a1 + ra
 56823: 82 89 10                 a2 = u64 [a1 + 0x10]
 56826: ae 97 38 01              jump @4318 if a0 >=u a2
      :                          @4281
 56830: 82 8a 08                 a3 = u64 [a1 + 0x8]
 56833: 33 09                    a2 = 0
 56835: 97 78 03                 a1 = a0 << 0x3
 56838: c8 8a 07                 a0 = a3 + a1
 56841: 82 77                    a0 = u64 [a0]
 56843: 33 0b c0 22 03           a4 = 0x322c0
 56848: 95 bb 00 00 01           a4 = a4 + 0x10000
 56853: 33 02 00 20              t0 = 0x2000
 56857: 28 0c                    jump @4283
      :                          @4282
 56859: 95 99 01                 a2 = a2 + 0x1
 56862: 82 18 20                 a1 = u64 [sp + 0x20]
 56865: aa 89 c7 00              jump @4302 if a2 == a1
      :                          @4283
 56869: ca 39 0c                 a5 = a2 * t1
 56872: c8 0c 0c                 a5 = a5 + ra
 56875: 82 c5                    s0 = u64 [a5]
 56877: 51 05 ee                 jump @4282 if s0 == 0
      :                          @4284
 56880: ac 52 eb                 jump @4282 if t0 <u s0
      :                          @4285
 56883: 82 c6 08                 s1 = u64 [a5 + 0x8]
 56886: 97 54 03                 t2 = s0 << 0x3
 56889: 01                       fallthrough
      :                          @4286
 56890: 82 bc                    a5 = u64 [a4]
 56892: c9 cb 08                 a1 = a4 - a5
 56895: ab 68 dc                 jump @4282 if a1 != s1
      :                          @4287
 56898: c9 4c 08                 a1 = a5 - t2
 56901: 01                       fallthrough
      :                          @4288
 56902: 82 ba                    a3 = u64 [a4]
 56904: ab ca f2                 jump @4286 if a3 != a5
      :                          @4289
 56907: 7b b8                    u64 [a4] = a1
 56909: 33 05                    s0 = 0
 56911: 01                       fallthrough
      :                          @4290
 56912: ab ca ea                 jump @4286 if a3 != a5
      :                          @4291
 56915: 28 c8                    jump @4282
      :                          @4292
 56917: 82 15 10                 s0 = u64 [sp + 0x10]
 56920: 82 18 18                 a1 = u64 [sp + 0x18]
 56923: d8 58 09                 a2 = a1 <u s0
 56926: c8 98 08                 a1 = a1 + a2
 56929: 85 99 01                 a2 = a2 ^ 0x1
 56932: d8 85 0a                 a3 = s0 <u a1
 56935: d4 a9 09                 a2 = a2 | a3
 56938: 52 09 78 ff              jump @4279 if a2 != 0
      :                          @4293
 56942: 82 17 08                 a0 = u64 [sp + 0x8]
 56945: 7b 18 18                 u64 [sp + 0x18] = a1
 56948: e6 78 05                 s0 = minu(a1, a0)
 56951: 51 05 de                 jump @4292 if s0 == 0
      :                          @4294
 56954: 82 1b 18                 a4 = u64 [sp + 0x18]
 56957: 95 b9 ff                 a2 = a4 + 0xffffffffffffffff
 56960: 82 18 20                 a1 = u64 [sp + 0x20]
 56963: ae 89 a3 00              jump @4311 if a2 >=u a1
      :                          @4295
 56967: 96 bc 18                 a5 = a4 * 0x18
 56970: 82 17                    a0 = u64 [sp]
 56972: c8 7c 0c                 a5 = a5 + a0
 56975: 95 c7 f8                 a0 = a5 + 0xfffffffffffffff8
 56978: ae 8b 95 00              jump @4312 if a4 >=u a1
      :                          @4296
 56982: 95 c0 f0                 ra = a5 + 0xfffffffffffffff0
 56985: 95 c6 10                 s1 = a5 + 0x10
 56988: 95 cc 08                 a5 = a5 + 0x8
 56991: 33 09 01                 a2 = 0x1
 56994: 01                       fallthrough
      :                          @4297
 56995: 82 7a                    a3 = u64 [a0]
 56997: ae a9 89 00              jump @4314 if a2 >=u a3
      :                          @4298
 57001: 95 9b ff                 a4 = a2 + 0xffffffffffffffff
 57004: ae ab 79                 jump @4310 if a4 >=u a3
      :                          @4299
 57007: 82 6a                    a3 = u64 [s1]
 57009: ae a9 7d                 jump @4314 if a2 >=u a3
      :                          @4300
 57012: 82 04                    t2 = u64 [ra]
 57014: d8 59 02                 t0 = a2 <u s0
 57017: 97 93 03                 t1 = a2 << 0x3
 57020: c8 34 0a                 a3 = t2 + t1
 57023: 82 aa                    a3 = u64 [a3]
 57025: 97 bb 03                 a4 = a4 << 0x3
 57028: c8 4b 0b                 a4 = a4 + t2
 57031: 82 c8                    a1 = u64 [a5]
 57033: 82 bb                    a4 = u64 [a4]
 57035: ca 9a 0a                 a3 = a3 * a2
 57038: c8 29 09                 a2 = a2 + t0
 57041: c8 38 08                 a1 = a1 + t1
 57044: c8 ba 0a                 a3 = a3 + a4
 57047: d8 95 0b                 a4 = s0 <u a2
 57050: 85 bb 01                 a4 = a4 ^ 0x1
 57053: d2 b2 0b                 a4 = t0 & a4
 57056: 7b 8a                    u64 [a1] = a3
 57058: 52 0b c1                 jump @4297 if a4 != 0
      :                          @4301
 57061: 28 70 ff                 jump @4292
      :                          @4302
 57064: 82 18 28                 a1 = u64 [sp + 0x28]
 57067: 51 08 2c                 jump @4309 if a1 == 0
      :                          @4303
 57070: 33 09 aa 0a              a2 = 0xaaa
 57074: ac 89 25                 jump @4309 if a2 <u a1
      :                          @4304
 57077: 96 88 e8                 a1 = a1 * 0xffffffffffffffe8
 57080: 33 09 c0 22 03           a2 = 0x322c0
 57085: 95 99 00 00 01           a2 = a2 + 0x10000
 57090: 01                       fallthrough
      :                          @4305
 57091: 82 9a                    a3 = u64 [a2]
 57093: c9 a9 0b                 a4 = a2 - a3
 57096: ab 0b 0f                 jump @4309 if a4 != ra
      :                          @4306
 57099: c8 8a 0b                 a4 = a3 + a1
 57102: 01                       fallthrough
      :                          @4307
 57103: 82 9c                    a5 = u64 [a2]
 57105: ab ac f2                 jump @4305 if a5 != a3
      :                          @4308
 57108: 7b 9b                    u64 [a2] = a4
 57110: 01                       fallthrough
      :                          @4309
 57111: 82 10 68                 ra = u64 [sp + 0x68]
 57114: 82 15 60                 s0 = u64 [sp + 0x60]
 57117: 82 16 58                 s1 = u64 [sp + 0x58]
 57120: 95 11 70                 sp = sp + 0x70
 57123: 32 00                    ret
      :                          @4310
 57125: 00                       trap
      :                          @4311
 57126: 00                       trap
      :                          @4312
 57127: 82 7a                    a3 = u64 [a0]
 57129: 54 1a 01 05              jump @4314 if a3 <=u 1
      :                          @4313
 57133: 00                       trap
      :                          @4314
 57134: 00                       trap
      :                          @4315
 57135: 00                       trap
      :                          @4316
 57136: 00                       trap
      :                          @4317
 57137: 00                       trap
      :                          @4318
 57138: 00                       trap
      :                          @4319
 57139: 00                       trap
      :                          @4320
 57140: 00                       trap
      :                          @4321
 57141: 82 ab                    a4 = u64 [a3]
 57143: c8 9b 0c                 a5 = a4 + a2
 57146: ac bc ce 01              jump @4371 if a5 <u a4
      :                          @4322
 57150: 95 c8 08                 a1 = a5 + 0x8
 57153: d8 c8 06                 s1 = a1 <u a5
 57156: d8 82 08                 a1 = t0 <u a1
 57159: d4 68 08                 a1 = a1 | s1
 57162: 52 08 be 01              jump @4371 if a1 != 0
      :                          @4323
 57166: c9 c3 06                 s1 = t1 - a5
 57169: c8 26 06                 s1 = s1 + t0
 57172: 84 68 07                 a1 = s1 & 0x7
 57175: c8 8c 0c                 a5 = a5 + a1
 57178: 01                       fallthrough
      :                          @4324
 57179: 82 a5                    s0 = u64 [a3]
 57181: ab b5 d8                 jump @4321 if s0 != a4
      :                          @4325
 57184: 7b ac                    u64 [a3] = a5
 57186: c9 86 06                 s1 = s1 - a1
 57189: 64 67                    a0 = s1
 57191: 33 08                    a1 = 0
 57193: 50 20 1c 03 ad 2c 02     ra = 796, jump @13687
      :                          @4326 [@dyn 398]
 57200: 82 19 18                 a2 = u64 [sp + 0x18]
 57203: 7b 19 38                 u64 [sp + 0x38] = a2
 57206: 7b 16 40                 u64 [sp + 0x40] = s1
 57209: 7b 19 48                 u64 [sp + 0x48] = a2
 57212: 95 17 20                 a0 = sp + 0x20
 57215: 95 18 38                 a1 = sp + 0x38
 57218: 50 20 1e 03 6f 7a ff     ra = 798, jump @1721
      :                          @4327 [@dyn 399]
 57225: 82 17 30                 a0 = u64 [sp + 0x30]
 57228: 7b 17 18                 u64 [sp + 0x18] = a0
 57231: 51 07 77 01              jump @4369 if a0 == 0
      :                          @4328
 57235: 82 10 28                 ra = u64 [sp + 0x28]
 57238: 82 07 10                 a0 = u64 [ra + 0x10]
 57241: 51 07 6d 01              jump @4369 if a0 == 0
      :                          @4329
 57245: 82 08 08                 a1 = u64 [ra + 0x8]
 57248: 33 07 01                 a0 = 0x1
 57251: 7b 87                    u64 [a1] = a0
 57253: 82 1b 08                 a4 = u64 [sp + 0x8]
 57256: 51 0b b3 00              jump @4341 if a4 == 0
      :                          @4330
 57260: 7b 10                    u64 [sp] = ra
 57262: 01                       fallthrough
      :                          @4331
 57263: 95 79 ff                 a2 = a0 + 0xffffffffffffffff
 57266: 82 18 18                 a1 = u64 [sp + 0x18]
 57269: ae 89 4e 01              jump @4366 if a2 >=u a1
      :                          @4332
 57273: 96 95 18                 s0 = a2 * 0x18
 57276: c8 05 05                 s0 = s0 + ra
 57279: 82 5a 10                 a3 = u64 [s0 + 0x10]
 57282: ae a9 42 01              jump @4367 if a2 >=u a3
      :                          @4333
 57286: 82 18 18                 a1 = u64 [sp + 0x18]
 57289: ae 87 3c 01              jump @4368 if a0 >=u a1
      :                          @4334
 57293: 96 73 18                 t1 = a0 * 0x18
 57296: c8 03 03                 t1 = t1 + ra
 57299: 82 38 10                 a1 = u64 [t1 + 0x10]
 57302: 51 08 2c 01              jump @4365 if a1 == 0
      :                          @4335
 57306: d8 b7 00                 ra = a0 <u a4
 57309: 82 58 08                 a1 = u64 [s0 + 0x8]
 57312: 7b 10 10                 u64 [sp + 0x10] = ra
 57315: c8 70 00                 ra = ra + a0
 57318: 95 56 10                 s1 = s0 + 0x10
 57321: 97 99 03                 a2 = a2 << 0x3
 57324: c8 98 08                 a1 = a1 + a2
 57327: 82 88                    a1 = u64 [a1]
 57329: 82 39 08                 a2 = u64 [t1 + 0x8]
 57332: 95 55 08                 s0 = s0 + 0x8
 57335: 95 32 10                 t0 = t1 + 0x10
 57338: 95 33 08                 t1 = t1 + 0x8
 57341: 7b 98                    u64 [a2] = a1
 57343: 33 09 01                 a2 = 0x1
 57346: 01                       fallthrough
      :                          @4336
 57347: 82 2b                    a4 = u64 [t0]
 57349: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
 57352: ae ba f7 00              jump @4362 if a3 >=u a4
      :                          @4337
 57356: 82 6c                    a5 = u64 [s1]
 57358: ae ca f2 00              jump @4363 if a3 >=u a5
      :                          @4338
 57362: ae b9 ef 00              jump @4364 if a2 >=u a4
      :                          @4339
 57366: 82 34                    t2 = u64 [t1]
 57368: d8 79 0b                 a4 = a2 <u a0
 57371: 82 5c                    a5 = u64 [s0]
 57373: 97 aa 03                 a3 = a3 << 0x3
 57376: c8 a4 08                 a1 = t2 + a3
 57379: 82 88                    a1 = u64 [a1]
 57381: c8 ca 0a                 a3 = a3 + a5
 57384: 82 aa                    a3 = u64 [a3]
 57386: 97 9c 03                 a5 = a2 << 0x3
 57389: c8 b9 09                 a2 = a2 + a4
 57392: c8 4c 0c                 a5 = a5 + t2
 57395: c8 a8 08                 a1 = a1 + a3
 57398: d8 97 0a                 a3 = a0 <u a2
 57401: 85 aa 01                 a3 = a3 ^ 0x1
 57404: d2 ba 0a                 a3 = a3 & a4
 57407: 7b c8                    u64 [a5] = a1
 57409: 52 0a c2                 jump @4336 if a3 != 0
      :                          @4340
 57412: 82 17 10                 a0 = u64 [sp + 0x10]
 57415: 85 77 01                 a0 = a0 ^ 0x1
 57418: 82 1b 08                 a4 = u64 [sp + 0x8]
 57421: d8 0b 08                 a1 = a4 <u ra
 57424: d4 78 08                 a1 = a1 | a0
 57427: 64 07                    a0 = ra
 57429: 82 10                    ra = u64 [sp]
 57431: 51 08 58 ff              jump @4331 if a1 == 0
      :                          @4341
 57435: 82 17 18                 a0 = u64 [sp + 0x18]
 57438: ae 7b a9 00              jump @4370 if a4 >=u a0
      :                          @4342
 57442: 33 03 18                 t1 = 0x18
 57445: ca 3b 07                 a0 = a4 * t1
 57448: c8 07 07                 a0 = a0 + ra
 57451: 82 78 10                 a1 = u64 [a0 + 0x10]
 57454: 51 08 94 00              jump @4365 if a1 == 0
      :                          @4343
 57458: 82 77 08                 a0 = u64 [a0 + 0x8]
 57461: 33 0a                    a3 = 0
 57463: 82 77                    a0 = u64 [a0]
 57465: 33 0b c0 22 03           a4 = 0x322c0
 57470: 95 bc 00 00 01           a5 = a4 + 0x10000
 57475: 33 02 00 20              t0 = 0x2000
 57479: 28 0b                    jump @4345
      :                          @4344
 57481: 95 aa 01                 a3 = a3 + 0x1
 57484: 82 18 18                 a1 = u64 [sp + 0x18]
 57487: aa 8a 33                 jump @4354 if a3 == a1
      :                          @4345
 57490: ca 3a 08                 a1 = a3 * t1
 57493: c8 08 08                 a1 = a1 + ra
 57496: 82 85                    s0 = u64 [a1]
 57498: 51 05 ef                 jump @4344 if s0 == 0
      :                          @4346
 57501: ac 52 ec                 jump @4344 if t0 <u s0
      :                          @4347
 57504: 82 86 08                 s1 = u64 [a1 + 0x8]
 57507: 97 54 03                 t2 = s0 << 0x3
 57510: 01                       fallthrough
      :                          @4348
 57511: 82 c8                    a1 = u64 [a5]
 57513: c9 8c 0b                 a4 = a5 - a1
 57516: ab 6b dd                 jump @4344 if a4 != s1
      :                          @4349
 57519: c9 48 0b                 a4 = a1 - t2
 57522: 01                       fallthrough
      :                          @4350
 57523: 82 c9                    a2 = u64 [a5]
 57525: ab 89 f2                 jump @4348 if a2 != a1
      :                          @4351
 57528: 7b cb                    u64 [a5] = a4
 57530: 33 05                    s0 = 0
 57532: 01                       fallthrough
      :                          @4352
 57533: ab 89 ea                 jump @4348 if a2 != a1
      :                          @4353
 57536: 28 c9                    jump @4344
      :                          @4354
 57538: 82 19 20                 a2 = u64 [sp + 0x20]
 57541: 51 09 2c                 jump @4361 if a2 == 0
      :                          @4355
 57544: 33 08 aa 0a              a1 = 0xaaa
 57548: ac 98 25                 jump @4361 if a1 <u a2
      :                          @4356
 57551: 96 99 e8                 a2 = a2 * 0xffffffffffffffe8
 57554: 33 0a c0 22 03           a3 = 0x322c0
 57559: 95 aa 00 00 01           a3 = a3 + 0x10000
 57564: 01                       fallthrough
      :                          @4357
 57565: 82 a8                    a1 = u64 [a3]
 57567: c9 8a 0b                 a4 = a3 - a1
 57570: ab 0b 0f                 jump @4361 if a4 != ra
      :                          @4358
 57573: c8 98 0b                 a4 = a1 + a2
 57576: 01                       fallthrough
      :                          @4359
 57577: 82 ac                    a5 = u64 [a3]
 57579: ab 8c f2                 jump @4357 if a5 != a1
      :                          @4360
 57582: 7b ab                    u64 [a3] = a4
 57584: 01                       fallthrough
      :                          @4361
 57585: 82 10 60                 ra = u64 [sp + 0x60]
 57588: 82 15 58                 s0 = u64 [sp + 0x58]
 57591: 82 16 50                 s1 = u64 [sp + 0x50]
 57594: 95 11 68                 sp = sp + 0x68
 57597: 32 00                    ret
      :                          @4362
 57599: 00                       trap
      :                          @4363
 57600: 00                       trap
      :                          @4364
 57601: 00                       trap
      :                          @4365
 57602: 00                       trap
      :                          @4366
 57603: 00                       trap
      :                          @4367
 57604: 00                       trap
      :                          @4368
 57605: 00                       trap
      :                          @4369
 57606: 00                       trap
      :                          @4370
 57607: 00                       trap
      :                          @4371
 57608: 00                       trap
      :                          @4372
 57609: 83 72                    i32 t0 = a0 + 0
 57611: 51 02 34                 jump @4377 if t0 == 0
      :                          @4373
 57614: 33 07                    a0 = 0
 57616: 33 09 01                 a2 = 0x1
 57619: aa 92 2a                 jump @4376 if t0 == a2
      :                          @4374
 57622: 33 0a 02                 a3 = 0x2
 57625: 01                       fallthrough
      :                          @4375
 57626: d8 2a 0b                 a4 = a3 <u t0
 57629: 85 bc 01                 a5 = a4 ^ 0x1
 57632: 97 a8 20                 a1 = a3 << 0x20
 57635: be ba 0a                 i32 a3 = a3 + a4
 57638: d8 a2 0b                 a4 = t0 <u a3
 57641: d4 cb 0b                 a4 = a4 | a5
 57644: 98 88 20                 a1 = a1 >> 0x20
 57647: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 57650: c8 97 0c                 a5 = a0 + a2
 57653: 64 79                    a2 = a0
 57655: ca 8c 07                 a0 = a5 * a1
 57658: 51 0b e0                 jump @4375 if a4 == 0
      :                          @4376
 57661: 32 00                    ret
      :                          @4377
 57663: 33 07 01                 a0 = 0x1
 57666: 28 55 b3 00              jump @8106
      :                          @4378
 57670: 95 11 90                 sp = sp + 0xffffffffffffff90
 57673: 7b 10 68                 u64 [sp + 0x68] = ra
 57676: 7b 15 60                 u64 [sp + 0x60] = s0
 57679: 7b 16 58                 u64 [sp + 0x58] = s1
 57682: ae 87 14                 jump @4381 if a0 >=u a1
      :                          @4379
 57685: 33 07                    a0 = 0
 57687: 01                       fallthrough
      :                          @4380
 57688: 82 10 68                 ra = u64 [sp + 0x68]
 57691: 82 15 60                 s0 = u64 [sp + 0x60]
 57694: 82 16 58                 s1 = u64 [sp + 0x58]
 57697: 95 11 70                 sp = sp + 0x70
 57700: 32 00                    ret
      :                          @4381
 57702: 64 79                    a2 = a0
 57704: 98 77 3c                 a0 = a0 >> 0x3c
 57707: 52 07 16 02              jump @4448 if a0 != 0
      :                          @4382
 57711: 88 72 01                 t0 = a0 <u 0x1
 57714: 7b 19 10                 u64 [sp + 0x10] = a2
 57717: 97 99 03                 a2 = a2 << 0x3
 57720: 97 22 03                 t0 = t0 << 0x3
 57723: 33 04 c0 22 03           t2 = 0x322c0
 57728: 33 03 00 00 01           t1 = 0x10000
 57733: c8 34 00                 ra = t2 + t1
 57736: 01                       fallthrough
      :                          @4383
 57737: 82 06                    s1 = u64 [ra]
 57739: c8 96 0c                 a5 = s1 + a2
 57742: ac 6c ed 01              jump @4445 if a5 <u s1
      :                          @4384
 57746: c8 2c 0a                 a3 = a5 + t0
 57749: d8 ca 05                 s0 = a3 <u a5
 57752: d8 a3 0a                 a3 = t1 <u a3
 57755: d4 5a 0a                 a3 = a3 | s0
 57758: 52 0a dd 01              jump @4445 if a3 != 0
      :                          @4385
 57762: c9 c4 05                 s0 = t2 - a5
 57765: c8 35 05                 s0 = s0 + t1
 57768: 84 5a 07                 a3 = s0 & 0x7
 57771: c8 ac 0c                 a5 = a5 + a3
 57774: 01                       fallthrough
      :                          @4386
 57775: 82 07                    a0 = u64 [ra]
 57777: ab 67 d8                 jump @4383 if a0 != s1
      :                          @4387
 57780: 7b 0c                    u64 [ra] = a5
 57782: 33 0b                    a4 = 0
 57784: 7b 18                    u64 [sp] = a1
 57786: c9 a5 05                 s0 = s0 - a3
 57789: 64 57                    a0 = s0
 57791: 33 08                    a1 = 0
 57793: 50 20 20 03 55 2a 02     ra = 800, jump @13687
      :                          @4388 [@dyn 400]
 57800: 82 19 10                 a2 = u64 [sp + 0x10]
 57803: 7b 19 40                 u64 [sp + 0x40] = a2
 57806: 7b 15 48                 u64 [sp + 0x48] = s0
 57809: 7b 19 50                 u64 [sp + 0x50] = a2
 57812: 95 99 01                 a2 = a2 + 0x1
 57815: 95 17 28                 a0 = sp + 0x28
 57818: 95 18 40                 a1 = sp + 0x40
 57821: 50 20 22 03 14 78 ff     ra = 802, jump @1721
      :                          @4389 [@dyn 401]
 57828: 82 18 38                 a1 = u64 [sp + 0x38]
 57831: 51 08 90 01              jump @4441 if a1 == 0
      :                          @4390
 57835: 82 10 30                 ra = u64 [sp + 0x30]
 57838: 82 07 10                 a0 = u64 [ra + 0x10]
 57841: 51 07 88 01              jump @4443 if a0 == 0
      :                          @4391
 57845: 82 07 08                 a0 = u64 [ra + 0x8]
 57848: 33 0a 01                 a3 = 0x1
 57851: 7b 7a                    u64 [a0] = a3
 57853: 7b 18 20                 u64 [sp + 0x20] = a1
 57856: 7b 10 08                 u64 [sp + 0x8] = ra
 57859: 28 2c                    jump @4395
      :                          @4392
 57861: 82 07                    a0 = u64 [ra]
 57863: 51 07 6d 01              jump @4438 if a0 == 0
      :                          @4393
 57867: 82 47                    a0 = u64 [t2]
 57869: 49 07                    u64 [a0 + 0] = 0
 57871: 01                       fallthrough
      :                          @4394
 57872: 82 17 10                 a0 = u64 [sp + 0x10]
 57875: 82 1a 18                 a3 = u64 [sp + 0x18]
 57878: d8 7a 08                 a1 = a3 <u a0
 57881: c8 8a 0a                 a3 = a3 + a1
 57884: 85 89 01                 a2 = a1 ^ 0x1
 57887: d8 a7 08                 a1 = a0 <u a3
 57890: d4 89 09                 a2 = a2 | a1
 57893: 82 10 08                 ra = u64 [sp + 0x8]
 57896: 82 18 20                 a1 = u64 [sp + 0x20]
 57899: 52 09 99 00              jump @4412 if a2 != 0
      :                          @4395
 57903: 95 a7 ff                 a0 = a3 + 0xffffffffffffffff
 57906: 96 a6 18                 s1 = a3 * 0x18
 57909: c8 06 06                 s1 = s1 + ra
 57912: 95 60 10                 ra = s1 + 0x10
 57915: 95 64 08                 t2 = s1 + 0x8
 57918: 7b 1a 18                 u64 [sp + 0x18] = a3
 57921: ae 87 78                 jump @4409 if a0 >=u a1
      :                          @4396
 57924: 95 65 f8                 s0 = s1 + 0xfffffffffffffff8
 57927: ae 8a 24 01              jump @4435 if a3 >=u a1
      :                          @4397
 57931: 51 07 ba                 jump @4392 if a0 == 0
      :                          @4398
 57934: 82 58                    a1 = u64 [s0]
 57936: 51 08 25 01              jump @4439 if a1 == 0
      :                          @4399
 57940: 82 08                    a1 = u64 [ra]
 57942: 51 08 1e 01              jump @4438 if a1 == 0
      :                          @4400
 57946: 95 66 f0                 s1 = s1 + 0xfffffffffffffff0
 57949: 82 68                    a1 = u64 [s1]
 57951: 82 88                    a1 = u64 [a1]
 57953: 82 49                    a2 = u64 [t2]
 57955: 7b 98                    u64 [a2] = a1
 57957: 33 0a 01                 a3 = 0x1
 57960: 33 02 08                 t0 = 0x8
 57963: 64 79                    a2 = a0
 57965: 01                       fallthrough
      :                          @4401
 57966: 82 5b                    a4 = u64 [s0]
 57968: 95 ac ff                 a5 = a3 + 0xffffffffffffffff
 57971: ae bc f7 00              jump @4434 if a5 >=u a4
      :                          @4402
 57975: 82 68                    a1 = u64 [s1]
 57977: c8 28 08                 a1 = a1 + t0
 57980: 82 83 f8                 t1 = u64 [a1 + 0xfffffffffffffff8]
 57983: 95 ac 01                 a5 = a3 + 0x1
 57986: ae 7a 14                 jump @4406 if a3 >=u a0
      :                          @4403
 57989: ae ba f1 00              jump @4440 if a3 >=u a4
      :                          @4404
 57993: 82 88                    a1 = u64 [a1]
 57995: ca c8 08                 a1 = a1 * a5
 57998: 82 0b                    a4 = u64 [ra]
 58000: ac ba 0e                 jump @4407 if a3 <u a4
      :                          @4405
 58003: 28 e3 00                 jump @4440
      :                          @4406
 58006: 33 08                    a1 = 0
 58008: 82 0b                    a4 = u64 [ra]
 58010: ae ba dc 00              jump @4440 if a3 >=u a4
      :                          @4407
 58014: 82 4a                    a3 = u64 [t2]
 58016: ca 93 0b                 a4 = t1 * a2
 58019: c8 2a 0a                 a3 = a3 + t0
 58022: c8 b8 08                 a1 = a1 + a4
 58025: 7b a8                    u64 [a3] = a1
 58027: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 58030: 95 22 08                 t0 = t0 + 0x8
 58033: 64 ca                    a3 = a5
 58035: 52 09 bb                 jump @4401 if a2 != 0
      :                          @4408
 58038: 28 5a ff                 jump @4394
      :                          @4409
 58041: ae 8a c3 00              jump @4446 if a3 >=u a1
      :                          @4410
 58045: 51 07 48 ff              jump @4392 if a0 == 0
      :                          @4411
 58049: 28 b7 00                 jump @4442
      :                          @4412
 58052: ae 87 b4 00              jump @4442 if a0 >=u a1
      :                          @4413
 58056: 33 03 18                 t1 = 0x18
 58059: ca 37 07                 a0 = a0 * t1
 58062: c8 07 07                 a0 = a0 + ra
 58065: 82 79 10                 a2 = u64 [a0 + 0x10]
 58068: 82 18                    a1 = u64 [sp]
 58070: ae 98 a4 00              jump @4444 if a1 >=u a2
      :                          @4414
 58074: 82 77 08                 a0 = u64 [a0 + 0x8]
 58077: 33 09                    a2 = 0
 58079: 97 88 03                 a1 = a1 << 0x3
 58082: c8 87 07                 a0 = a0 + a1
 58085: 82 77                    a0 = u64 [a0]
 58087: 33 0b c0 22 03           a4 = 0x322c0
 58092: 95 bc 00 00 01           a5 = a4 + 0x10000
 58097: 33 02 00 20              t0 = 0x2000
 58101: 28 0b                    jump @4416
      :                          @4415
 58103: 95 99 01                 a2 = a2 + 0x1
 58106: 82 18 20                 a1 = u64 [sp + 0x20]
 58109: aa 89 33                 jump @4425 if a2 == a1
      :                          @4416
 58112: ca 39 08                 a1 = a2 * t1
 58115: c8 08 08                 a1 = a1 + ra
 58118: 82 86                    s1 = u64 [a1]
 58120: 51 06 ef                 jump @4415 if s1 == 0
      :                          @4417
 58123: ac 62 ec                 jump @4415 if t0 <u s1
      :                          @4418
 58126: 82 88 08                 a1 = u64 [a1 + 0x8]
 58129: 97 64 03                 t2 = s1 << 0x3
 58132: 01                       fallthrough
      :                          @4419
 58133: 82 c5                    s0 = u64 [a5]
 58135: c9 5c 0b                 a4 = a5 - s0
 58138: ab 8b dd                 jump @4415 if a4 != a1
      :                          @4420
 58141: c9 45 0b                 a4 = s0 - t2
 58144: 01                       fallthrough
      :                          @4421
 58145: 82 ca                    a3 = u64 [a5]
 58147: ab 5a f2                 jump @4419 if a3 != s0
      :                          @4422
 58150: 7b cb                    u64 [a5] = a4
 58152: 33 06                    s1 = 0
 58154: 01                       fallthrough
      :                          @4423
 58155: ab 5a ea                 jump @4419 if a3 != s0
      :                          @4424
 58158: 28 c9                    jump @4415
      :                          @4425
 58160: 82 18 28                 a1 = u64 [sp + 0x28]
 58163: 51 08 25 fe              jump @4380 if a1 == 0
      :                          @4426
 58167: 33 09 aa 0a              a2 = 0xaaa
 58171: ac 89 1d fe              jump @4380 if a2 <u a1
      :                          @4427
 58175: 96 88 e8                 a1 = a1 * 0xffffffffffffffe8
 58178: 33 09 c0 22 03           a2 = 0x322c0
 58183: 95 99 00 00 01           a2 = a2 + 0x10000
 58188: 01                       fallthrough
      :                          @4428
 58189: 82 9a                    a3 = u64 [a2]
 58191: c9 a9 0b                 a4 = a2 - a3
 58194: ab 0b 06 fe              jump @4380 if a4 != ra
      :                          @4429
 58198: c8 8a 0b                 a4 = a3 + a1
 58201: 01                       fallthrough
      :                          @4430
 58202: 82 9c                    a5 = u64 [a2]
 58204: ab ac f1                 jump @4428 if a5 != a3
      :                          @4431
 58207: 7b 9b                    u64 [a2] = a4
 58209: 33 06                    s1 = 0
 58211: 01                       fallthrough
      :                          @4432
 58212: ab ac e9                 jump @4428 if a5 != a3
      :                          @4433
 58215: 28 f1 fd                 jump @4380
      :                          @4434
 58218: 00                       trap
      :                          @4435
 58219: 51 07 08                 jump @4437 if a0 == 0
      :                          @4436
 58222: 82 57                    a0 = u64 [s0]
 58224: 51 07 05                 jump @4439 if a0 == 0
      :                          @4437
 58227: 00                       trap
      :                          @4438
 58228: 00                       trap
      :                          @4439
 58229: 00                       trap
      :                          @4440
 58230: 00                       trap
      :                          @4441
 58231: 00                       trap
      :                          @4442
 58232: 00                       trap
      :                          @4443
 58233: 00                       trap
      :                          @4444
 58234: 00                       trap
      :                          @4445
 58235: 00                       trap
      :                          @4446
 58236: 51 07 f7                 jump @4437 if a0 == 0
      :                          @4447
 58239: 28 f9                    jump @4442
      :                          @4448
 58241: 00                       trap
      :                          @4449
 58242: 33 03                    t1 = 0
 58244: 51 08 3b                 jump @4457 if a1 == 0
      :                          @4450
 58247: 33 04                    t2 = 0
 58249: 33 02 18                 t0 = 0x18
 58252: 28 11                    jump @4453
      :                          @4451
 58254: 33 0a                    a3 = 0
 58256: 01                       fallthrough
      :                          @4452
 58257: 95 44 01                 t2 = t2 + 0x1
 58260: 84 aa 01                 a3 = a3 & 0x1
 58263: be 3a 03                 i32 t1 = a3 + t1
 58266: aa 84 25                 jump @4457 if t2 == a1
      :                          @4453
 58269: ca 24 09                 a2 = t2 * t0
 58272: c8 79 09                 a2 = a2 + a0
 58275: 82 9c 10                 a5 = u64 [a2 + 0x10]
 58278: 51 0c e8                 jump @4451 if a5 == 0
      :                          @4454
 58281: 82 9b 08                 a4 = u64 [a2 + 0x8]
 58284: 33 0a                    a3 = 0
 58286: 01                       fallthrough
      :                          @4455
 58287: 7c b9                    a2 = u8 [a4]
 58289: c8 9a 0a                 a3 = a3 + a2
 58292: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 58295: 95 bb 01                 a4 = a4 + 0x1
 58298: 52 0c f5                 jump @4455 if a5 != 0
      :                          @4456
 58301: 28 d4                    jump @4452
      :                          @4457
 58303: 88 37 01                 a0 = t1 <u 0x1
 58306: 95 33 fe                 t1 = t1 + 0xfffffffffffffffe
 58309: 88 38 01                 a1 = t1 <u 0x1
 58312: d4 78 08                 a1 = a1 | a0
 58315: 32 00                    ret
      :                          @4458
 58317: 95 82 ff                 t0 = a1 + 0xffffffffffffffff
 58320: ae 72 7a                 jump @4466 if t0 >=u a0
      :                          @4459
 58323: 95 11 f0                 sp = sp + 0xfffffffffffffff0
 58326: 7b 15 08                 u64 [sp + 0x8] = s0
 58329: c9 87 09                 a2 = a0 - a1
 58332: e6 98 04                 t2 = minu(a1, a2)
 58335: 33 09 01                 a2 = 0x1
 58338: c8 97 03                 t1 = a0 + a2
 58341: 33 0a 01                 a3 = 0x1
 58344: 51 04 27                 jump @4462 if t2 == 0
      :                          @4460
 58347: 33 0a 01                 a3 = 0x1
 58350: 33 0b 01                 a4 = 0x1
 58353: 01                       fallthrough
      :                          @4461
 58354: d8 4b 08                 a1 = a4 <u t2
 58357: 85 8c 01                 a5 = a1 ^ 0x1
 58360: c9 b3 05                 s0 = t1 - a4
 58363: c8 b8 08                 a1 = a1 + a4
 58366: ca a5 0a                 a3 = s0 * a3
 58369: d8 84 05                 s0 = t2 <u a1
 58372: d4 5c 0c                 a5 = a5 | s0
 58375: cb ba 0a                 a3 = a3 /u a4
 58378: 64 8b                    a4 = a1
 58380: 51 0c e6                 jump @4461 if a5 == 0
      :                          @4462
 58383: c9 27 08                 a1 = a0 - t0
 58386: e6 82 02                 t0 = minu(t0, a1)
 58389: 51 02 27                 jump @4465 if t0 == 0
      :                          @4463
 58392: 33 09 01                 a2 = 0x1
 58395: 33 0c 01                 a5 = 0x1
 58398: 01                       fallthrough
      :                          @4464
 58399: d8 2c 08                 a1 = a5 <u t0
 58402: 85 85 01                 s0 = a1 ^ 0x1
 58405: c9 c3 0b                 a4 = t1 - a5
 58408: c8 c8 08                 a1 = a1 + a5
 58411: ca 9b 09                 a2 = a4 * a2
 58414: d8 82 0b                 a4 = t0 <u a1
 58417: d4 5b 0b                 a4 = a4 | s0
 58420: cb c9 09                 a2 = a2 /u a5
 58423: 64 8c                    a5 = a1
 58425: 51 0b e6                 jump @4464 if a4 == 0
      :                          @4465
 58428: ca a9 08                 a1 = a2 * a3
 58431: cb 78 07                 a0 = a1 /u a0
 58434: 82 15 08                 s0 = u64 [sp + 0x8]
 58437: 95 11 10                 sp = sp + 0x10
 58440: 32 00                    ret
      :                          @4466
 58442: 33 07                    a0 = 0
 58444: 28 ae b2 00              jump @8136
      :                          @4467
 58448: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 58451: 7b 10 20                 u64 [sp + 0x20] = ra
 58454: 7b 15 18                 u64 [sp + 0x18] = s0
 58457: 7b 16 10                 u64 [sp + 0x10] = s1
 58460: 64 74                    t2 = a0
 58462: 33 08 02                 a1 = 0x2
 58465: 33 07 01                 a0 = 0x1
 58468: ac 84 f5 00              jump @4485 if t2 <u a1
      :                          @4468
 58472: 95 49 01                 a2 = t2 + 0x1
 58475: 7b 19                    u64 [sp] = a2
 58477: 97 99 03                 a2 = a2 << 0x3
 58480: 33 07 c0 22 03           a0 = 0x322c0
 58485: 33 03 c0 22 03           t1 = 0x322c0
 58490: 33 02 00 00 01           t0 = 0x10000
 58495: c8 23 06                 s1 = t1 + t0
 58498: 01                       fallthrough
      :                          @4469
 58499: 82 6a                    a3 = u64 [s1]
 58501: c8 9a 0b                 a4 = a3 + a2
 58504: ac ab e3 00              jump @4490 if a4 <u a3
      :                          @4470
 58508: 95 bc 08                 a5 = a4 + 0x8
 58511: d8 bc 05                 s0 = a5 <u a4
 58514: d8 c2 0c                 a5 = t0 <u a5
 58517: d4 5c 0c                 a5 = a5 | s0
 58520: 52 0c d3 00              jump @4490 if a5 != 0
      :                          @4471
 58524: c9 b3 05                 s0 = t1 - a4
 58527: c8 25 05                 s0 = s0 + t0
 58530: 84 5c 07                 a5 = s0 & 0x7
 58533: c8 cb 0b                 a4 = a4 + a5
 58536: 01                       fallthrough
      :                          @4472
 58537: 82 68                    a1 = u64 [s1]
 58539: ab a8 d8                 jump @4469 if a1 != a3
      :                          @4473
 58542: 7b 6b                    u64 [s1] = a4
 58544: c9 c5 06                 s1 = s0 - a5
 58547: 64 67                    a0 = s1
 58549: 33 08                    a1 = 0
 58551: 7b 19 08                 u64 [sp + 0x8] = a2
 58554: 64 45                    s0 = t2
 58556: 50 20 24 03 5a 27 02     ra = 804, jump @13687
      :                          @4474 [@dyn 402]
 58563: 64 63                    t1 = s1
 58565: 64 5b                    a4 = s0
 58567: 49 06 01                 u64 [s1 + 0] = 0x1
 58570: 49 16 08 01              u64 [s1 + 8] = 0x1
 58574: 33 07 02                 a0 = 0x2
 58577: 01                       fallthrough
      :                          @4475
 58578: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 58581: ac 8b 92 00              jump @4486 if a4 <u a1
      :                          @4476
 58585: 95 79 fe                 a2 = a0 + 0xfffffffffffffffe
 58588: ac 9b 8c 00              jump @4487 if a4 <u a2
      :                          @4477
 58592: 95 7a 02                 a3 = a0 + 0x2
 58595: 51 0a 86 00              jump @4488 if a3 == 0
      :                          @4478
 58599: ac 7b 83 00              jump @4489 if a4 <u a0
      :                          @4479
 58603: d8 b7 02                 t0 = a0 <u a4
 58606: 97 7c 01                 a5 = a0 << 0x1
 58609: c8 7c 05                 s0 = a5 + a0
 58612: 97 76 03                 s1 = a0 << 0x3
 58615: c8 27 07                 a0 = a0 + t0
 58618: 97 88 03                 a1 = a1 << 0x3
 58621: c8 38 08                 a1 = a1 + t1
 58624: 82 88                    a1 = u64 [a1]
 58626: 97 99 03                 a2 = a2 << 0x3
 58629: c8 39 09                 a2 = a2 + t1
 58632: 82 99                    a2 = u64 [a2]
 58634: 95 55 fd                 s0 = s0 + 0xfffffffffffffffd
 58637: 95 cc 01                 a5 = a5 + 0x1
 58640: ca c8 08                 a1 = a1 * a5
 58643: ca 59 09                 a2 = a2 * s0
 58646: c8 98 08                 a1 = a1 + a2
 58649: c8 36 06                 s1 = s1 + t1
 58652: cb a8 08                 a1 = a1 /u a3
 58655: d8 7b 09                 a2 = a4 <u a0
 58658: 85 99 01                 a2 = a2 ^ 0x1
 58661: d2 92 09                 a2 = t0 & a2
 58664: 7b 68                    u64 [s1] = a1
 58666: 52 09 a8                 jump @4475 if a2 != 0
      :                          @4480
 58669: 97 b6 03                 s1 = a4 << 0x3
 58672: c8 36 06                 s1 = s1 + t1
 58675: 82 67                    a0 = u64 [s1]
 58677: 33 08 c0 22 03           a1 = 0x322c0
 58682: 95 88 00 00 01           a1 = a1 + 0x10000
 58687: 82 16 08                 s1 = u64 [sp + 0x8]
 58690: 01                       fallthrough
      :                          @4481
 58691: 82 89                    a2 = u64 [a1]
 58693: c9 98 0a                 a3 = a1 - a2
 58696: ab 3a 11                 jump @4485 if a3 != t1
      :                          @4482
 58699: c9 69 0a                 a3 = a2 - s1
 58702: 01                       fallthrough
      :                          @4483
 58703: 82 8b                    a4 = u64 [a1]
 58705: ab 9b f2                 jump @4481 if a4 != a2
      :                          @4484
 58708: 7b 8a                    u64 [a1] = a3
 58710: 33 0c                    a5 = 0
 58712: 01                       fallthrough
      :                          @4485
 58713: 82 10 20                 ra = u64 [sp + 0x20]
 58716: 82 15 18                 s0 = u64 [sp + 0x18]
 58719: 82 16 10                 s1 = u64 [sp + 0x10]
 58722: 95 11 28                 sp = sp + 0x28
 58725: 32 00                    ret
      :                          @4486
 58727: 00                       trap
      :                          @4487
 58728: 00                       trap
      :                          @4488
 58729: 00                       trap
      :                          @4489
 58730: 00                       trap
      :                          @4490
 58731: 00                       trap
      :                          @4491
 58732: 95 11 70 ff              sp = sp + 0xffffffffffffff70
 58736: 7b 10 88 00              u64 [sp + 0x88] = ra
 58740: 7b 15 80 00              u64 [sp + 0x80] = s0
 58744: 7b 16 78                 u64 [sp + 0x78] = s1
 58747: 82 8a 10                 a3 = u64 [a1 + 0x10]
 58750: 64 76                    s1 = a0
 58752: 51 0a 4a 01              jump @4512 if a3 == 0
      :                          @4492
 58756: 98 a7 3c                 a0 = a3 >> 0x3c
 58759: 52 07 75 01              jump @4519 if a0 != 0
      :                          @4493
 58763: 7b 19 30                 u64 [sp + 0x30] = a2
 58766: 7b 18 38                 u64 [sp + 0x38] = a1
 58769: 88 72 01                 t0 = a0 <u 0x1
 58772: 7b 1a 40                 u64 [sp + 0x40] = a3
 58775: 97 a9 03                 a2 = a3 << 0x3
 58778: 97 22 03                 t0 = t0 << 0x3
 58781: 33 04 c0 22 03           t2 = 0x322c0
 58786: 33 03 00 00 01           t1 = 0x10000
 58791: c8 34 00                 ra = t2 + t1
 58794: 01                       fallthrough
      :                          @4494
 58795: 82 05                    s0 = u64 [ra]
 58797: c8 95 0c                 a5 = s0 + a2
 58800: ac 5c 4b 01              jump @4518 if a5 <u s0
      :                          @4495
 58804: c8 2c 07                 a0 = a5 + t0
 58807: d8 c7 0a                 a3 = a0 <u a5
 58810: d8 73 07                 a0 = t1 <u a0
 58813: d4 a7 07                 a0 = a0 | a3
 58816: 52 07 3b 01              jump @4518 if a0 != 0
      :                          @4496
 58820: c9 c4 07                 a0 = t2 - a5
 58823: c8 37 07                 a0 = a0 + t1
 58826: 84 7a 07                 a3 = a0 & 0x7
 58829: c8 ac 0c                 a5 = a5 + a3
 58832: 01                       fallthrough
      :                          @4497
 58833: 82 08                    a1 = u64 [ra]
 58835: ab 58 d8                 jump @4494 if a1 != s0
      :                          @4498
 58838: 7b 0c                    u64 [ra] = a5
 58840: 33 0b                    a4 = 0
 58842: c9 a7 05                 s0 = a0 - a3
 58845: 64 57                    a0 = s0
 58847: 33 08                    a1 = 0
 58849: 50 20 26 03 35 26 02     ra = 806, jump @13687
      :                          @4499 [@dyn 403]
 58856: 82 19 40                 a2 = u64 [sp + 0x40]
 58859: 7b 19 60                 u64 [sp + 0x60] = a2
 58862: 7b 15 68                 u64 [sp + 0x68] = s0
 58865: 7b 19 70                 u64 [sp + 0x70] = a2
 58868: 95 17 48                 a0 = sp + 0x48
 58871: 95 18 60                 a1 = sp + 0x60
 58874: 50 20 28 03 f7 73 ff     ra = 808, jump @1721
      :                          @4500 [@dyn 404]
 58881: 82 17 58                 a0 = u64 [sp + 0x58]
 58884: 82 1a 50                 a3 = u64 [sp + 0x50]
 58887: 82 1c 30                 a5 = u64 [sp + 0x30]
 58890: 82 c8 08                 a1 = u64 [a5 + 0x8]
 58893: 82 19 38                 a2 = u64 [sp + 0x38]
 58896: 82 9b 08                 a4 = u64 [a2 + 0x8]
 58899: 82 c9 10                 a2 = u64 [a5 + 0x10]
 58902: 7b 19 38                 u64 [sp + 0x38] = a2
 58905: 33 09                    a2 = 0
 58907: 95 88 10                 a1 = a1 + 0x10
 58910: 7b 18 28                 u64 [sp + 0x28] = a1
 58913: 7b 16 18                 u64 [sp + 0x18] = s1
 58916: 7b 17 10                 u64 [sp + 0x10] = a0
 58919: 7b 1a 08                 u64 [sp + 0x8] = a3
 58922: 7b 1b                    u64 [sp] = a4
 58924: 01                       fallthrough
      :                          @4501
 58925: aa 79 cd 00              jump @4517 if a2 == a0
      :                          @4502
 58929: 33 0c                    a5 = 0
 58931: 95 97 01                 a0 = a2 + 0x1
 58934: 7b 17 20                 u64 [sp + 0x20] = a0
 58937: 96 97 18                 a0 = a2 * 0x18
 58940: c8 7a 02                 t0 = a3 + a0
 58943: 95 23 10                 t1 = t0 + 0x10
 58946: 95 22 08                 t0 = t0 + 0x8
 58949: c8 7b 04                 t2 = a4 + a0
 58952: 95 46 10                 s1 = t2 + 0x10
 58955: 95 44 08                 t2 = t2 + 0x8
 58958: 33 08 01                 a1 = 0x1
 58961: 01                       fallthrough
      :                          @4503
 58962: 33 00                    ra = 0
 58964: 33 0a                    a3 = 0
 58966: 64 c7                    a0 = a5
 58968: 7b 18 30                 u64 [sp + 0x30] = a1
 58971: 82 1c 28                 a5 = u64 [sp + 0x28]
 58974: 01                       fallthrough
      :                          @4504
 58975: 82 38                    a1 = u64 [t1]
 58977: ae 87 96 00              jump @4514 if a0 >=u a1
      :                          @4505
 58981: 82 68                    a1 = u64 [s1]
 58983: ae 8a 91 00              jump @4515 if a3 >=u a1
      :                          @4506
 58987: 82 18 38                 a1 = u64 [sp + 0x38]
 58990: aa a8 8b 00              jump @4516 if a1 == a3
      :                          @4507
 58994: 82 c8                    a1 = u64 [a5]
 58996: ae 87 83 00              jump @4514 if a0 >=u a1
      :                          @4508
 59000: 82 28                    a1 = u64 [t0]
 59002: 82 45                    s0 = u64 [t2]
 59004: 97 79 03                 a2 = a0 << 0x3
 59007: 82 cb f8                 a4 = u64 [a5 + 0xfffffffffffffff8]
 59010: c8 98 08                 a1 = a1 + a2
 59013: c8 05 05                 s0 = s0 + ra
 59016: 82 55                    s0 = u64 [s0]
 59018: c8 b9 09                 a2 = a2 + a4
 59021: 82 99                    a2 = u64 [a2]
 59023: 82 8b                    a4 = u64 [a1]
 59025: 95 aa 01                 a3 = a3 + 0x1
 59028: ca 59 09                 a2 = a2 * s0
 59031: 82 15 40                 s0 = u64 [sp + 0x40]
 59034: c8 b9 09                 a2 = a2 + a4
 59037: 7b 89                    u64 [a1] = a2
 59039: 95 cc 18                 a5 = a5 + 0x18
 59042: 95 00 08                 ra = ra + 0x8
 59045: ab a5 ba                 jump @4504 if s0 != a3
      :                          @4509
 59048: 82 1c 30                 a5 = u64 [sp + 0x30]
 59051: d8 5c 08                 a1 = a5 <u s0
 59054: c8 c8 08                 a1 = a1 + a5
 59057: ac 5c a1                 jump @4503 if a5 <u s0
      :                          @4510
 59060: 82 1c 20                 a5 = u64 [sp + 0x20]
 59063: 64 c9                    a2 = a5
 59065: 82 16 18                 s1 = u64 [sp + 0x18]
 59068: 82 17 10                 a0 = u64 [sp + 0x10]
 59071: 82 1a 08                 a3 = u64 [sp + 0x8]
 59074: 82 1b                    a4 = u64 [sp]
 59076: ab 5c 69 ff              jump @4501 if a5 != s0
      :                          @4511
 59080: 28 0d                    jump @4513
      :                          @4512
 59082: 49 11 48                 u64 [sp + 72] = 0
 59085: 49 11 50 08              u64 [sp + 80] = 0x8
 59089: 49 11 58                 u64 [sp + 88] = 0
 59092: 01                       fallthrough
      :                          @4513
 59093: 82 17 58                 a0 = u64 [sp + 0x58]
 59096: 82 18 50                 a1 = u64 [sp + 0x50]
 59099: 82 19 48                 a2 = u64 [sp + 0x48]
 59102: 7b 67 10                 u64 [s1 + 0x10] = a0
 59105: 7b 68 08                 u64 [s1 + 0x8] = a1
 59108: 7b 69                    u64 [s1] = a2
 59110: 82 10 88 00              ra = u64 [sp + 0x88]
 59114: 82 15 80 00              s0 = u64 [sp + 0x80]
 59118: 82 16 78                 s1 = u64 [sp + 0x78]
 59121: 95 11 90 00              sp = sp + 0x90
 59125: 32 00                    ret
      :                          @4514
 59127: 00                       trap
      :                          @4515
 59128: 00                       trap
      :                          @4516
 59129: 00                       trap
      :                          @4517
 59130: 00                       trap
      :                          @4518
 59131: 00                       trap
      :                          @4519
 59132: 00                       trap
      :                          @4520
 59133: 95 11 48 ff              sp = sp + 0xffffffffffffff48
 59137: 7b 10 b0 00              u64 [sp + 0xb0] = ra
 59141: 7b 15 a8 00              u64 [sp + 0xa8] = s0
 59145: 7b 16 a0 00              u64 [sp + 0xa0] = s1
 59149: 82 8b 10                 a4 = u64 [a1 + 0x10]
 59152: 7b 17                    u64 [sp] = a0
 59154: 51 0b ea 01              jump @4553 if a4 == 0
      :                          @4521
 59158: 7b 19 40                 u64 [sp + 0x40] = a2
 59161: 98 b7 3c                 a0 = a4 >> 0x3c
 59164: 52 07 0e 04              jump @4623 if a0 != 0
      :                          @4522
 59168: 64 8a                    a3 = a1
 59170: 64 b8                    a1 = a4
 59172: 7b 1a 50                 u64 [sp + 0x50] = a3
 59175: 88 72 01                 t0 = a0 <u 0x1
 59178: 7b 1b 08                 u64 [sp + 0x8] = a4
 59181: 97 b9 03                 a2 = a4 << 0x3
 59184: 97 22 03                 t0 = t0 << 0x3
 59187: 33 04 c0 22 03           t2 = 0x322c0
 59192: 33 03 00 00 01           t1 = 0x10000
 59197: c8 34 0b                 a4 = t2 + t1
 59200: 01                       fallthrough
      :                          @4523
 59201: 82 b6                    s1 = u64 [a4]
 59203: c8 96 0c                 a5 = s1 + a2
 59206: ac 6c 4c 31 02           jump @13935 if a5 <u s1
      :                          @4524
 59211: c8 2c 0a                 a3 = a5 + t0
 59214: d8 ca 05                 s0 = a3 <u a5
 59217: d8 a3 0a                 a3 = t1 <u a3
 59220: d4 5a 0a                 a3 = a3 | s0
 59223: 52 0a 3b 31 02           jump @13935 if a3 != 0
      :                          @4525
 59228: c9 c4 05                 s0 = t2 - a5
 59231: c8 35 05                 s0 = s0 + t1
 59234: 84 5a 07                 a3 = s0 & 0x7
 59237: c8 ac 0c                 a5 = a5 + a3
 59240: 01                       fallthrough
      :                          @4526
 59241: 82 b7                    a0 = u64 [a4]
 59243: ab 67 d6                 jump @4523 if a0 != s1
      :                          @4527
 59246: 7b bc                    u64 [a4] = a5
 59248: c9 a5 05                 s0 = s0 - a3
 59251: 64 57                    a0 = s0
 59253: 33 08                    a1 = 0
 59255: 50 20 2a 03 9f 24 02     ra = 810, jump @13687
      :                          @4528 [@dyn 405]
 59262: 82 16 08                 s1 = u64 [sp + 0x8]
 59265: 7b 16 88 00              u64 [sp + 0x88] = s1
 59269: 7b 15 90 00              u64 [sp + 0x90] = s0
 59273: 7b 16 98 00              u64 [sp + 0x98] = s1
 59277: 95 17 58                 a0 = sp + 0x58
 59280: 95 18 88 00              a1 = sp + 0x88
 59284: 64 69                    a2 = s1
 59286: 50 20 2c 03 5b 72 ff     ra = 812, jump @1721
      :                          @4529 [@dyn 406]
 59293: 82 1b 60                 a4 = u64 [sp + 0x60]
 59296: 82 17 68                 a0 = u64 [sp + 0x68]
 59299: 33 0a                    a3 = 0
 59301: 33 09                    a2 = 0
 59303: 95 bb 10                 a4 = a4 + 0x10
 59306: 33 0c 01                 a5 = 0x1
 59309: 01                       fallthrough
      :                          @4530
 59310: aa 97 79 03              jump @4620 if a0 == a2
      :                          @4531
 59314: 82 b8                    a1 = u64 [a4]
 59316: ae 89 74 03              jump @4621 if a2 >=u a1
      :                          @4532
 59320: 82 b8 f8                 a1 = u64 [a4 + 0xfffffffffffffff8]
 59323: 95 99 01                 a2 = a2 + 0x1
 59326: c8 a8 08                 a1 = a1 + a3
 59329: 7b 8c                    u64 [a1] = a5
 59331: 95 bb 18                 a4 = a4 + 0x18
 59334: 95 aa 08                 a3 = a3 + 0x8
 59337: ab 96 e5                 jump @4530 if s1 != a2
      :                          @4533
 59340: 3a 07 c0 10 03           a0 = u64 [0x310c0]
 59345: ae 76 59 03              jump @4623 if s1 >=u a0
      :                          @4534
 59349: 82 18 50                 a1 = u64 [sp + 0x50]
 59352: 82 80 08                 ra = u64 [a1 + 0x8]
 59355: d8 76 02                 t0 = s1 <u a0
 59358: 96 67 18                 a0 = s1 * 0x18
 59361: 97 22 03                 t0 = t0 << 0x3
 59364: 33 04 c0 22 03           t2 = 0x322c0
 59369: 33 03 00 00 01           t1 = 0x10000
 59374: c8 34 0b                 a4 = t2 + t1
 59377: 01                       fallthrough
      :                          @4535
 59378: 82 b8                    a1 = u64 [a4]
 59380: c8 78 05                 s0 = a1 + a0
 59383: ac 85 32 03              jump @4622 if s0 <u a1
      :                          @4536
 59387: c8 25 0a                 a3 = s0 + t0
 59390: d8 5a 0c                 a5 = a3 <u s0
 59393: d8 a3 0a                 a3 = t1 <u a3
 59396: d4 ca 0a                 a3 = a3 | a5
 59399: 52 0a 22 03              jump @4622 if a3 != 0
      :                          @4537
 59403: c9 54 0a                 a3 = t2 - s0
 59406: c8 3a 0a                 a3 = a3 + t1
 59409: 84 ac 07                 a5 = a3 & 0x7
 59412: c8 c5 05                 s0 = s0 + a5
 59415: 01                       fallthrough
      :                          @4538
 59416: 82 b6                    s1 = u64 [a4]
 59418: ab 86 d8                 jump @4535 if s1 != a1
      :                          @4539
 59421: 7b b5                    u64 [a4] = s0
 59423: 33 02                    t0 = 0
 59425: c9 ca 0a                 a3 = a3 - a5
 59428: 7b 1a 18                 u64 [sp + 0x18] = a3
 59431: 82 1a 08                 a3 = u64 [sp + 0x8]
 59434: 96 a7 18                 a0 = a3 * 0x18
 59437: c8 07 07                 a0 = a0 + ra
 59440: 7b 17 10                 u64 [sp + 0x10] = a0
 59443: 33 07 c0 22 03           a0 = 0x322c0
 59448: 7b 17 48                 u64 [sp + 0x48] = a0
 59451: 95 74 00 00 01           t2 = a0 + 0x10000
 59456: 7b 1a 38                 u64 [sp + 0x38] = a3
 59459: 7b 14 50                 u64 [sp + 0x50] = t2
 59462: 28 4c                    jump @4543
      :                          @4540
 59464: 33 09                    a2 = 0
 59466: 33 0a 08                 a3 = 0x8
 59469: 01                       fallthrough
      :                          @4541
 59470: 7b 1a 20                 u64 [sp + 0x20] = a3
 59473: 82 15 38                 s0 = u64 [sp + 0x38]
 59476: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 59479: 95 00 18                 ra = ra + 0x18
 59482: 7b 10 28                 u64 [sp + 0x28] = ra
 59485: 95 27 01                 a0 = t0 + 0x1
 59488: 7b 17 38                 u64 [sp + 0x38] = a0
 59491: 96 27 18                 a0 = t0 * 0x18
 59494: 82 16 18                 s1 = u64 [sp + 0x18]
 59497: c8 76 06                 s1 = s1 + a0
 59500: 64 a7                    a0 = a3
 59502: 50 20 2e 03 7b 21 02     ra = 814, jump @13633
      :                          @4542 [@dyn 407]
 59509: 82 10 28                 ra = u64 [sp + 0x28]
 59512: 82 17 30                 a0 = u64 [sp + 0x30]
 59515: 7b 67                    u64 [s1] = a0
 59517: 82 18 20                 a1 = u64 [sp + 0x20]
 59520: 7b 68 08                 u64 [s1 + 0x8] = a1
 59523: 7b 67 10                 u64 [s1 + 0x10] = a0
 59526: 82 12 38                 t0 = u64 [sp + 0x38]
 59529: 82 14 50                 t2 = u64 [sp + 0x50]
 59532: 7b 15 38                 u64 [sp + 0x38] = s0
 59535: 51 05 65                 jump @4552 if s0 == 0
      :                          @4543
 59538: 82 17 10                 a0 = u64 [sp + 0x10]
 59541: aa 70 5f                 jump @4552 if ra == a0
      :                          @4544
 59544: 82 0b 10                 a4 = u64 [ra + 0x10]
 59547: 82 08 08                 a1 = u64 [ra + 0x8]
 59550: 7b 1b 30                 u64 [sp + 0x30] = a4
 59553: 51 0b a7                 jump @4540 if a4 == 0
      :                          @4545
 59556: 98 b9 3c                 a2 = a4 >> 0x3c
 59559: 52 09 83 02              jump @4623 if a2 != 0
      :                          @4546
 59563: 88 9a 01                 a3 = a2 <u 0x1
 59566: 97 b9 03                 a2 = a4 << 0x3
 59569: 97 a3 03                 t1 = a3 << 0x3
 59572: 01                       fallthrough
      :                          @4547
 59573: 82 4b                    a4 = u64 [t2]
 59575: c8 9b 0c                 a5 = a4 + a2
 59578: ac bc d8 2f 02           jump @13935 if a5 <u a4
      :                          @4548
 59583: c8 3c 07                 a0 = a5 + t1
 59586: d8 c7 06                 s1 = a0 <u a5
 59589: 8e 77 00 00 01           a0 = a0 >u 0x10000
 59594: d4 67 07                 a0 = a0 | s1
 59597: 52 07 c5 2f 02           jump @13935 if a0 != 0
      :                          @4549
 59602: 82 17 48                 a0 = u64 [sp + 0x48]
 59605: c9 c7 07                 a0 = a0 - a5
 59608: 95 77 00 00 01           a0 = a0 + 0x10000
 59613: 84 76 07                 s1 = a0 & 0x7
 59616: c8 6c 0c                 a5 = a5 + s1
 59619: 82 14 50                 t2 = u64 [sp + 0x50]
 59622: 01                       fallthrough
      :                          @4550
 59623: 82 45                    s0 = u64 [t2]
 59625: ab b5 cc                 jump @4547 if s0 != a4
      :                          @4551
 59628: 7b 4c                    u64 [t2] = a5
 59630: c9 67 0a                 a3 = a0 - s1
 59633: 28 5d ff                 jump @4541
      :                          @4552
 59636: 82 19 40                 a2 = u64 [sp + 0x40]
 59639: 82 1b 08                 a4 = u64 [sp + 0x8]
 59642: 28 11                    jump @4554
      :                          @4553
 59644: 49 11 58                 u64 [sp + 88] = 0
 59647: 49 11 18 08              u64 [sp + 24] = 0x8
 59651: 49 11 60 08              u64 [sp + 96] = 0x8
 59655: 49 11 68                 u64 [sp + 104] = 0
 59658: 01                       fallthrough
      :                          @4554
 59659: 7b 1b 70                 u64 [sp + 0x70] = a4
 59662: 82 17 18                 a0 = u64 [sp + 0x18]
 59665: 7b 17 78                 u64 [sp + 0x78] = a0
 59668: 7b 1b 80 00              u64 [sp + 0x80] = a4
 59672: 49 11 48 aa 0a           u64 [sp + 72] = 0xaaa
 59677: 33 05 c0 22 03           s0 = 0x322c0
 59682: 95 58 00 00 01           a1 = s0 + 0x10000
 59687: 7b 18 50                 u64 [sp + 0x50] = a1
 59690: 28 22                    jump @4556
      :                          @4555
 59692: 82 17 98 00              a0 = u64 [sp + 0x98]
 59696: 82 19 90 00              a2 = u64 [sp + 0x90]
 59700: 82 1a 88 00              a3 = u64 [sp + 0x88]
 59704: 7b 17 80 00              u64 [sp + 0x80] = a0
 59708: 7b 19 78                 u64 [sp + 0x78] = a2
 59711: 82 19 40                 a2 = u64 [sp + 0x40]
 59714: 8b 99 01                 i32 a2 = a2 >> 0x1
 59717: 7b 1a 70                 u64 [sp + 0x70] = a3
 59720: 51 09 34 01              jump @4600 if a2 == 0
      :                          @4556
 59724: 7b 19 40                 u64 [sp + 0x40] = a2
 59727: 84 97 01                 a0 = a2 & 0x1
 59730: 51 07 9d 00              jump @4578 if a0 == 0
      :                          @4557
 59734: 95 17 88 00              a0 = sp + 0x88
 59738: 95 18 58                 a1 = sp + 0x58
 59741: 95 19 70                 a2 = sp + 0x70
 59744: 50 20 30 03 0c fc        ra = 816, jump @4491
      :                          @4558 [@dyn 408]
 59750: 82 13 68                 t1 = u64 [sp + 0x68]
 59753: 82 12 60                 t0 = u64 [sp + 0x60]
 59756: 82 16 50                 s1 = u64 [sp + 0x50]
 59759: 33 04 18                 t2 = 0x18
 59762: 33 00 00 20              ra = 0x2000
 59766: 51 03 3d                 jump @4570 if t1 == 0
      :                          @4559
 59769: 33 09                    a2 = 0
 59771: 28 08                    jump @4561
      :                          @4560
 59773: 95 99 01                 a2 = a2 + 0x1
 59776: aa 39 33                 jump @4570 if a2 == t1
      :                          @4561
 59779: ca 49 0a                 a3 = a2 * t2
 59782: c8 2a 0a                 a3 = a3 + t0
 59785: 82 ab                    a4 = u64 [a3]
 59787: 51 0b f2                 jump @4560 if a4 == 0
      :                          @4562
 59790: ac b0 ef                 jump @4560 if ra <u a4
      :                          @4563
 59793: 82 aa 08                 a3 = u64 [a3 + 0x8]
 59796: 97 bb 03                 a4 = a4 << 0x3
 59799: 01                       fallthrough
      :                          @4564
 59800: 82 67                    a0 = u64 [s1]
 59802: c9 76 05                 s0 = s1 - a0
 59805: ab a5 e0                 jump @4560 if s0 != a3
      :                          @4565
 59808: c9 b7 0c                 a5 = a0 - a4
 59811: 01                       fallthrough
      :                          @4566
 59812: 82 65                    s0 = u64 [s1]
 59814: ab 75 f2                 jump @4564 if s0 != a0
      :                          @4567
 59817: 7b 6c                    u64 [s1] = a5
 59819: 33 08                    a1 = 0
 59821: 01                       fallthrough
      :                          @4568
 59822: ab 75 ea                 jump @4564 if s0 != a0
      :                          @4569
 59825: 28 cc                    jump @4560
      :                          @4570
 59827: 82 18 58                 a1 = u64 [sp + 0x58]
 59830: 51 08 23                 jump @4577 if a1 == 0
      :                          @4571
 59833: 82 17 48                 a0 = u64 [sp + 0x48]
 59836: ac 87 1d                 jump @4577 if a0 <u a1
      :                          @4572
 59839: 96 88 e8                 a1 = a1 * 0xffffffffffffffe8
 59842: 01                       fallthrough
      :                          @4573
 59843: 82 69                    a2 = u64 [s1]
 59845: c9 96 07                 a0 = s1 - a2
 59848: ab 27 11                 jump @4577 if a0 != t0
      :                          @4574
 59851: c8 89 07                 a0 = a2 + a1
 59854: 01                       fallthrough
      :                          @4575
 59855: 82 6a                    a3 = u64 [s1]
 59857: ab 9a f2                 jump @4573 if a3 != a2
      :                          @4576
 59860: 7b 67                    u64 [s1] = a0
 59862: 33 0b                    a4 = 0
 59864: 01                       fallthrough
      :                          @4577
 59865: 82 17 98 00              a0 = u64 [sp + 0x98]
 59869: 82 18 90 00              a1 = u64 [sp + 0x90]
 59873: 82 19 88 00              a2 = u64 [sp + 0x88]
 59877: 7b 17 68                 u64 [sp + 0x68] = a0
 59880: 7b 18 60                 u64 [sp + 0x60] = a1
 59883: 7b 19 58                 u64 [sp + 0x58] = a2
 59886: 01                       fallthrough
      :                          @4578
 59887: 95 17 88 00              a0 = sp + 0x88
 59891: 95 18 70                 a1 = sp + 0x70
 59894: 95 19 70                 a2 = sp + 0x70
 59897: 50 20 32 03 73 fb        ra = 818, jump @4491
      :                          @4579 [@dyn 409]
 59903: 82 13 80 00              t1 = u64 [sp + 0x80]
 59907: 82 12 78                 t0 = u64 [sp + 0x78]
 59910: 82 18 50                 a1 = u64 [sp + 0x50]
 59913: 33 04 18                 t2 = 0x18
 59916: 33 00 00 20              ra = 0x2000
 59920: 51 03 3d                 jump @4591 if t1 == 0
      :                          @4580
 59923: 33 09                    a2 = 0
 59925: 28 08                    jump @4582
      :                          @4581
 59927: 95 99 01                 a2 = a2 + 0x1
 59930: aa 39 33                 jump @4591 if a2 == t1
      :                          @4582
 59933: ca 49 0a                 a3 = a2 * t2
 59936: c8 2a 0a                 a3 = a3 + t0
 59939: 82 ab                    a4 = u64 [a3]
 59941: 51 0b f2                 jump @4581 if a4 == 0
      :                          @4583
 59944: ac b0 ef                 jump @4581 if ra <u a4
      :                          @4584
 59947: 82 aa 08                 a3 = u64 [a3 + 0x8]
 59950: 97 bb 03                 a4 = a4 << 0x3
 59953: 01                       fallthrough
      :                          @4585
 59954: 82 85                    s0 = u64 [a1]
 59956: c9 58 06                 s1 = a1 - s0
 59959: ab a6 e0                 jump @4581 if s1 != a3
      :                          @4586
 59962: c9 b5 0c                 a5 = s0 - a4
 59965: 01                       fallthrough
      :                          @4587
 59966: 82 86                    s1 = u64 [a1]
 59968: ab 56 f2                 jump @4585 if s1 != s0
      :                          @4588
 59971: 7b 8c                    u64 [a1] = a5
 59973: 33 07                    a0 = 0
 59975: 01                       fallthrough
      :                          @4589
 59976: ab 56 ea                 jump @4585 if s1 != s0
      :                          @4590
 59979: 28 cc                    jump @4581
      :                          @4591
 59981: 82 19 70                 a2 = u64 [sp + 0x70]
 59984: 51 09 dc fe              jump @4555 if a2 == 0
      :                          @4592
 59988: 82 17 48                 a0 = u64 [sp + 0x48]
 59991: ac 97 d5 fe              jump @4555 if a0 <u a2
      :                          @4593
 59995: 96 9c e8                 a5 = a2 * 0xffffffffffffffe8
 59998: 01                       fallthrough
      :                          @4594
 59999: 82 89                    a2 = u64 [a1]
 60001: c9 98 07                 a0 = a1 - a2
 60004: ab 27 c8 fe              jump @4555 if a0 != t0
      :                          @4595
 60008: c8 c9 07                 a0 = a2 + a5
 60011: 01                       fallthrough
      :                          @4596
 60012: 82 8a                    a3 = u64 [a1]
 60014: ab 9a f1                 jump @4594 if a3 != a2
      :                          @4597
 60017: 7b 87                    u64 [a1] = a0
 60019: 33 0b                    a4 = 0
 60021: 01                       fallthrough
      :                          @4598
 60022: ab 9a e9                 jump @4594 if a3 != a2
      :                          @4599
 60025: 28 b3 fe                 jump @4555
      :                          @4600
 60028: 82 10 80 00              ra = u64 [sp + 0x80]
 60032: 82 17 68                 a0 = u64 [sp + 0x68]
 60035: 82 19 60                 a2 = u64 [sp + 0x60]
 60038: 82 1a 58                 a3 = u64 [sp + 0x58]
 60041: 82 14 78                 t2 = u64 [sp + 0x78]
 60044: 82 18                    a1 = u64 [sp]
 60046: 7b 87 10                 u64 [a1 + 0x10] = a0
 60049: 7b 89 08                 u64 [a1 + 0x8] = a2
 60052: 7b 8a                    u64 [a1] = a3
 60054: 51 00 4e                 jump @4612 if ra == 0
      :                          @4601
 60057: 33 09                    a2 = 0
 60059: 33 03 18                 t1 = 0x18
 60062: 33 0b c0 22 03           a4 = 0x322c0
 60067: 95 ba 00 00 01           a3 = a4 + 0x10000
 60072: 33 02 00 20              t0 = 0x2000
 60076: 28 08                    jump @4603
      :                          @4602
 60078: 95 99 01                 a2 = a2 + 0x1
 60081: aa 09 33                 jump @4612 if a2 == ra
      :                          @4603
 60084: ca 39 07                 a0 = a2 * t1
 60087: c8 47 07                 a0 = a0 + t2
 60090: 82 75                    s0 = u64 [a0]
 60092: 51 05 f2                 jump @4602 if s0 == 0
      :                          @4604
 60095: ac 52 ef                 jump @4602 if t0 <u s0
      :                          @4605
 60098: 82 76 08                 s1 = u64 [a0 + 0x8]
 60101: 97 55 03                 s0 = s0 << 0x3
 60104: 01                       fallthrough
      :                          @4606
 60105: 82 a7                    a0 = u64 [a3]
 60107: c9 7a 0b                 a4 = a3 - a0
 60110: ab 6b e0                 jump @4602 if a4 != s1
      :                          @4607
 60113: c9 57 0b                 a4 = a0 - s0
 60116: 01                       fallthrough
      :                          @4608
 60117: 82 ac                    a5 = u64 [a3]
 60119: ab 7c f2                 jump @4606 if a5 != a0
      :                          @4609
 60122: 7b ab                    u64 [a3] = a4
 60124: 33 08                    a1 = 0
 60126: 01                       fallthrough
      :                          @4610
 60127: ab 7c ea                 jump @4606 if a5 != a0
      :                          @4611
 60130: 28 cc                    jump @4602
      :                          @4612
 60132: 82 18 70                 a1 = u64 [sp + 0x70]
 60135: 51 08 2e                 jump @4619 if a1 == 0
      :                          @4613
 60138: 33 07 aa 0a              a0 = 0xaaa
 60142: ac 87 27                 jump @4619 if a0 <u a1
      :                          @4614
 60145: 96 88 e8                 a1 = a1 * 0xffffffffffffffe8
 60148: 33 09 c0 22 03           a2 = 0x322c0
 60153: 95 99 00 00 01           a2 = a2 + 0x10000
 60158: 01                       fallthrough
      :                          @4615
 60159: 82 97                    a0 = u64 [a2]
 60161: c9 79 0a                 a3 = a2 - a0
 60164: ab 4a 11                 jump @4619 if a3 != t2
      :                          @4616
 60167: c8 87 0a                 a3 = a0 + a1
 60170: 01                       fallthrough
      :                          @4617
 60171: 82 9b                    a4 = u64 [a2]
 60173: ab 7b f2                 jump @4615 if a4 != a0
      :                          @4618
 60176: 7b 9a                    u64 [a2] = a3
 60178: 33 0c                    a5 = 0
 60180: 01                       fallthrough
      :                          @4619
 60181: 82 10 b0 00              ra = u64 [sp + 0xb0]
 60185: 82 15 a8 00              s0 = u64 [sp + 0xa8]
 60189: 82 16 a0 00              s1 = u64 [sp + 0xa0]
 60193: 95 11 b8 00              sp = sp + 0xb8
 60197: 32 00                    ret
      :                          @4620
 60199: 00                       trap
      :                          @4621
 60200: 00                       trap
      :                          @4622
 60201: 00                       trap
      :                          @4623
 60202: 00                       trap
      :                          @4624
 60203: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 60206: 7b 10 30                 u64 [sp + 0x30] = ra
 60209: 7b 15 28                 u64 [sp + 0x28] = s0
 60212: 7b 16 20                 u64 [sp + 0x20] = s1
 60215: 82 75 10                 s0 = u64 [a0 + 0x10]
 60218: 84 58 3f                 a1 = s0 & 0x3f
 60221: 56 18 3b 32 01           jump @4652 if a1 >u 59
      :                          @4625
 60226: 7b 17 10                 u64 [sp + 0x10] = a0
 60229: 9b 57 01                 a0 = 0x1 << s0
 60232: 7b 17 18                 u64 [sp + 0x18] = a0
 60235: 7b 18 08                 u64 [sp + 0x8] = a1
 60238: 88 82 3c                 t0 = a1 <u 0x3c
 60241: 9b 59 08                 a2 = 0x8 << s0
 60244: 97 22 03                 t0 = t0 << 0x3
 60247: 33 04 c0 22 03           t2 = 0x322c0
 60252: 33 03 00 00 01           t1 = 0x10000
 60257: c8 34 00                 ra = t2 + t1
 60260: 01                       fallthrough
      :                          @4626
 60261: 82 0b                    a4 = u64 [ra]
 60263: c8 9b 0c                 a5 = a4 + a2
 60266: ac bc 04 01              jump @4651 if a5 <u a4
      :                          @4627
 60270: c8 2c 07                 a0 = a5 + t0
 60273: d8 c7 06                 s1 = a0 <u a5
 60276: d8 73 07                 a0 = t1 <u a0
 60279: d4 67 07                 a0 = a0 | s1
 60282: 52 07 f4 00              jump @4651 if a0 != 0
      :                          @4628
 60286: c9 c4 06                 s1 = t2 - a5
 60289: c8 36 0a                 a3 = s1 + t1
 60292: 84 a6 07                 s1 = a3 & 0x7
 60295: c8 6c 0c                 a5 = a5 + s1
 60298: 01                       fallthrough
      :                          @4629
 60299: 82 07                    a0 = u64 [ra]
 60301: ab b7 d8                 jump @4626 if a0 != a4
      :                          @4630
 60304: 7b 0c                    u64 [ra] = a5
 60306: c9 6a 06                 s1 = a3 - s1
 60309: 64 67                    a0 = s1
 60311: 33 08                    a1 = 0
 60313: 7b 19                    u64 [sp] = a2
 60315: 50 20 34 03 7b 20 02     ra = 820, jump @13687
      :                          @4631 [@dyn 410]
 60322: 33 09                    a2 = 0
 60324: 82 17 10                 a0 = u64 [sp + 0x10]
 60327: 82 73 08                 t1 = u64 [a0 + 0x8]
 60330: 33 04 01                 t2 = 0x1
 60333: 64 62                    t0 = s1
 60335: 7b 64                    u64 [s1] = t2
 60337: 28 0b                    jump @4633
      :                          @4632
 60339: 95 99 01                 a2 = a2 + 0x1
 60342: 82 17 18                 a0 = u64 [sp + 0x18]
 60345: aa 79 6d                 jump @4642 if a2 == a0
      :                          @4633
 60348: 66 97                    a0 = cpop a2
 60350: 84 78 01                 a1 = a0 & 0x1
 60353: 88 88 01                 a1 = a1 <u 0x1
 60356: 8e 77                    a0 = a0 >u 0
 60358: d2 87 07                 a0 = a0 & a1
 60361: 51 07 ea                 jump @4632 if a0 == 0
      :                          @4634
 60364: 6a 98                    a1 = ctz a2
 60366: 95 87 01                 a0 = a1 + 0x1
 60369: ae 57 e2                 jump @4632 if a0 >=u s0
      :                          @4635
 60372: cf 84 0a                 a3 = t2 << a1
 60375: d3 9a 00                 ra = a3 ^ a2
 60378: 96 88 18                 a1 = a1 * 0x18
 60381: c8 38 08                 a1 = a1 + t1
 60384: 95 8a 10                 a3 = a1 + 0x10
 60387: 95 86 08                 s1 = a1 + 0x8
 60390: 97 9b 03                 a4 = a2 << 0x3
 60393: c8 2b 0b                 a4 = a4 + t0
 60396: 28 08                    jump @4637
      :                          @4636
 60398: 95 77 01                 a0 = a0 + 0x1
 60401: aa 75 c2                 jump @4632 if s0 == a0
      :                          @4637
 60404: cf 74 0c                 a5 = t2 << a0
 60407: d2 9c 08                 a1 = a5 & a2
 60410: 51 08 f4                 jump @4636 if a1 == 0
      :                          @4638
 60413: 82 a8                    a1 = u64 [a3]
 60415: ae 87 6d                 jump @4649 if a0 >=u a1
      :                          @4639
 60418: 82 68                    a1 = u64 [s1]
 60420: c8 78 08                 a1 = a1 + a0
 60423: 7c 88                    a1 = u8 [a1]
 60425: 51 08 e5                 jump @4636 if a1 == 0
      :                          @4640
 60428: d3 c0 08                 a1 = ra ^ a5
 60431: 82 1c 18                 a5 = u64 [sp + 0x18]
 60434: ae c8 5b                 jump @4650 if a1 >=u a5
      :                          @4641
 60437: 82 bc                    a5 = u64 [a4]
 60439: 97 88 03                 a1 = a1 << 0x3
 60442: c8 28 08                 a1 = a1 + t0
 60445: 82 88                    a1 = u64 [a1]
 60447: c8 c8 08                 a1 = a1 + a5
 60450: 7b b8                    u64 [a4] = a1
 60452: 28 ca                    jump @4636
      :                          @4642
 60454: 82 17 18                 a0 = u64 [sp + 0x18]
 60457: 97 77 03                 a0 = a0 << 0x3
 60460: c8 27 07                 a0 = a0 + t0
 60463: 82 77 f8                 a0 = u64 [a0 + 0xfffffffffffffff8]
 60466: 33 08 0d                 a1 = 0xd
 60469: 82 16                    s1 = u64 [sp]
 60471: 82 19 08                 a2 = u64 [sp + 0x8]
 60474: ac 98 24                 jump @4648 if a1 <u a2
      :                          @4643
 60477: 33 08 c0 22 03           a1 = 0x322c0
 60482: 95 88 00 00 01           a1 = a1 + 0x10000
 60487: 01                       fallthrough
      :                          @4644
 60488: 82 89                    a2 = u64 [a1]
 60490: c9 98 0a                 a3 = a1 - a2
 60493: ab 2a 11                 jump @4648 if a3 != t0
      :                          @4645
 60496: c9 69 0a                 a3 = a2 - s1
 60499: 01                       fallthrough
      :                          @4646
 60500: 82 8b                    a4 = u64 [a1]
 60502: ab 9b f2                 jump @4644 if a4 != a2
      :                          @4647
 60505: 7b 8a                    u64 [a1] = a3
 60507: 33 0c                    a5 = 0
 60509: 01                       fallthrough
      :                          @4648
 60510: 82 10 30                 ra = u64 [sp + 0x30]
 60513: 82 15 28                 s0 = u64 [sp + 0x28]
 60516: 82 16 20                 s1 = u64 [sp + 0x20]
 60519: 95 11 38                 sp = sp + 0x38
 60522: 32 00                    ret
      :                          @4649
 60524: 00                       trap
      :                          @4650
 60525: 00                       trap
      :                          @4651
 60526: 00                       trap
      :                          @4652
 60527: 00                       trap
      :                          @4653
 60528: 95 11 a8                 sp = sp + 0xffffffffffffffa8
 60531: 7b 10 50                 u64 [sp + 0x50] = ra
 60534: 7b 15 48                 u64 [sp + 0x48] = s0
 60537: 7b 16 40                 u64 [sp + 0x40] = s1
 60540: 82 79 10                 a2 = u64 [a0 + 0x10]
 60543: 49 11 20                 u64 [sp + 32] = 0
 60546: 51 09 bd 00              jump @4670 if a2 == 0
      :                          @4654
 60550: 98 9a 3d                 a3 = a2 >> 0x3d
 60553: 52 0a c9 00              jump @4673 if a3 != 0
      :                          @4655
 60557: 7b 18 08                 u64 [sp + 0x8] = a1
 60560: 7b 17 10                 u64 [sp + 0x10] = a0
 60563: 88 a7 01                 a0 = a3 <u 0x1
 60566: 7b 19 18                 u64 [sp + 0x18] = a2
 60569: 97 99 02                 a2 = a2 << 0x2
 60572: 97 72 02                 t0 = a0 << 0x2
 60575: 33 04 c0 22 03           t2 = 0x322c0
 60580: 33 03 00 00 01           t1 = 0x10000
 60585: c8 34 0a                 a3 = t2 + t1
 60588: 01                       fallthrough
      :                          @4656
 60589: 82 ab                    a4 = u64 [a3]
 60591: c8 9b 0c                 a5 = a4 + a2
 60594: ac bc 9f 00              jump @4672 if a5 <u a4
      :                          @4657
 60598: c8 2c 07                 a0 = a5 + t0
 60601: d8 c7 06                 s1 = a0 <u a5
 60604: d8 73 07                 a0 = t1 <u a0
 60607: d4 67 07                 a0 = a0 | s1
 60610: 52 07 8f 00              jump @4672 if a0 != 0
      :                          @4658
 60614: c9 c4 06                 s1 = t2 - a5
 60617: c8 36 08                 a1 = s1 + t1
 60620: 84 86 03                 s1 = a1 & 0x3
 60623: c8 6c 0c                 a5 = a5 + s1
 60626: 01                       fallthrough
      :                          @4659
 60627: 82 a7                    a0 = u64 [a3]
 60629: ab b7 d8                 jump @4656 if a0 != a4
      :                          @4660
 60632: 7b ac                    u64 [a3] = a5
 60634: 33 05                    s0 = 0
 60636: c9 68 06                 s1 = a1 - s1
 60639: 64 67                    a0 = s1
 60641: 33 08                    a1 = 0
 60643: 7b 19                    u64 [sp] = a2
 60645: 50 20 36 03 31 1f 02     ra = 822, jump @13687
      :                          @4661 [@dyn 411]
 60652: 82 15 18                 s0 = u64 [sp + 0x18]
 60655: 7b 15 28                 u64 [sp + 0x28] = s0
 60658: 7b 16 30                 u64 [sp + 0x30] = s1
 60661: 7b 15 38                 u64 [sp + 0x38] = s0
 60664: 95 1b 28                 a4 = sp + 0x28
 60667: 95 1c 20                 a5 = sp + 0x20
 60670: 33 07                    a0 = 0
 60672: 64 58                    a1 = s0
 60674: 82 19 08                 a2 = u64 [sp + 0x8]
 60677: 82 1a 10                 a3 = u64 [sp + 0x10]
 60680: 50 20 38 03 4b           ra = 824, jump @4674
      :                          @4662 [@dyn 412]
 60685: 82 17 20                 a0 = u64 [sp + 0x20]
 60688: 33 08 00 40              a1 = 0x4000
 60692: ac 58 2f                 jump @4671 if a1 <u s0
      :                          @4663
 60695: 33 08 c0 22 03           a1 = 0x322c0
 60700: 95 88 00 00 01           a1 = a1 + 0x10000
 60705: 82 15                    s0 = u64 [sp]
 60707: 01                       fallthrough
      :                          @4664
 60708: 82 89                    a2 = u64 [a1]
 60710: c9 98 0a                 a3 = a1 - a2
 60713: ab 6a 1a                 jump @4671 if a3 != s1
      :                          @4665
 60716: c9 59 0a                 a3 = a2 - s0
 60719: 01                       fallthrough
      :                          @4666
 60720: 82 8b                    a4 = u64 [a1]
 60722: ab 9b f2                 jump @4664 if a4 != a2
      :                          @4667
 60725: 7b 8a                    u64 [a1] = a3
 60727: 33 0c                    a5 = 0
 60729: 01                       fallthrough
      :                          @4668
 60730: ab 9b ea                 jump @4664 if a4 != a2
      :                          @4669
 60733: 28 06                    jump @4671
      :                          @4670
 60735: 33 07 01                 a0 = 0x1
 60738: 01                       fallthrough
      :                          @4671
 60739: 82 10 50                 ra = u64 [sp + 0x50]
 60742: 82 15 48                 s0 = u64 [sp + 0x48]
 60745: 82 16 40                 s1 = u64 [sp + 0x40]
 60748: 95 11 58                 sp = sp + 0x58
 60751: 32 00                    ret
      :                          @4672
 60753: 00                       trap
      :                          @4673
 60754: 00                       trap
      :                          @4674
 60755: 95 11 88                 sp = sp + 0xffffffffffffff88
 60758: 7b 10 70                 u64 [sp + 0x70] = ra
 60761: 7b 15 68                 u64 [sp + 0x68] = s0
 60764: 7b 16 60                 u64 [sp + 0x60] = s1
 60767: 7b 19 58                 u64 [sp + 0x58] = a2
 60770: 7b 18 50                 u64 [sp + 0x50] = a1
 60773: ab 87 0d                 jump @4676 if a0 != a1
      :                          @4675
 60776: 82 c7                    a0 = u64 [a5]
 60778: 95 77 01                 a0 = a0 + 0x1
 60781: 7b c7                    u64 [a5] = a0
 60783: 28 e4 00                 jump @4694
      :                          @4676
 60786: 64 74                    t2 = a0
 60788: 82 b8 08                 a1 = u64 [a4 + 0x8]
 60791: 82 b3 10                 t1 = u64 [a4 + 0x10]
 60794: 97 77 02                 a0 = a0 << 0x2
 60797: 7b 18 18                 u64 [sp + 0x18] = a1
 60800: c8 87 07                 a0 = a0 + a1
 60803: 7b 17 30                 u64 [sp + 0x30] = a0
 60806: 95 47 01                 a0 = t2 + 0x1
 60809: 7b 17 28                 u64 [sp + 0x28] = a0
 60812: 7b 1c 48                 u64 [sp + 0x48] = a5
 60815: 7b 1b 40                 u64 [sp + 0x40] = a4
 60818: 7b 1a 38                 u64 [sp + 0x38] = a3
 60821: 51 04 90 00              jump @4690 if t2 == 0
      :                          @4677
 60825: 82 a8 10                 a1 = u64 [a3 + 0x10]
 60828: ae 84 c5 00              jump @4695 if t2 >=u a1
      :                          @4678
 60832: 82 a7 08                 a0 = u64 [a3 + 0x8]
 60835: 96 48 18                 a1 = t2 * 0x18
 60838: c8 87 07                 a0 = a0 + a1
 60841: 95 78 10                 a1 = a0 + 0x10
 60844: 7b 18 10                 u64 [sp + 0x10] = a1
 60847: 95 75 08                 s0 = a0 + 0x8
 60850: ae 34 b0 00              jump @4696 if t2 >=u t1
      :                          @4679
 60854: 33 02                    t0 = 0
 60856: 81 17 58                 a0 = i32 [sp + 0x58]
 60859: 7b 17 08                 u64 [sp + 0x8] = a0
 60862: 7b 13                    u64 [sp] = t1
 60864: 28 32                    jump @4683
      :                          @4680
 60866: 82 17 30                 a0 = u64 [sp + 0x30]
 60869: 7a 79                    u32 [a0] = a2
 60871: 82 17 28                 a0 = u64 [sp + 0x28]
 60874: 82 18 50                 a1 = u64 [sp + 0x50]
 60877: 82 19 58                 a2 = u64 [sp + 0x58]
 60880: 82 1c 48                 a5 = u64 [sp + 0x48]
 60883: 64 46                    s1 = t2
 60885: 7b 12 20                 u64 [sp + 0x20] = t0
 60888: 50 20 3a 03 7b ff        ra = 826, jump @4674
      :                          @4681 [@dyn 413]
 60894: 82 12 20                 t0 = u64 [sp + 0x20]
 60897: 64 64                    t2 = s1
 60899: 82 1a 38                 a3 = u64 [sp + 0x38]
 60902: 82 1b 40                 a4 = u64 [sp + 0x40]
 60905: 82 13                    t1 = u64 [sp]
 60907: 01                       fallthrough
      :                          @4682
 60908: 82 17 08                 a0 = u64 [sp + 0x8]
 60911: aa 72 64                 jump @4694 if t0 == a0
      :                          @4683
 60914: 82 17 10                 a0 = u64 [sp + 0x10]
 60917: 82 77                    a0 = u64 [a0]
 60919: 33 08                    a1 = 0
 60921: 64 29                    a2 = t0
 60923: 83 22 01                 i32 t0 = t0 + 0x1
 60926: 82 16 18                 s1 = u64 [sp + 0x18]
 60929: 28 0b                    jump @4685
      :                          @4684
 60931: 95 88 01                 a1 = a1 + 0x1
 60934: 95 66 04                 s1 = s1 + 0x4
 60937: aa 84 b9                 jump @4680 if t2 == a1
      :                          @4685
 60940: aa 87 90 00              jump @4705 if a0 == a1
      :                          @4686
 60944: 82 5c                    a5 = u64 [s0]
 60946: c8 8c 0c                 a5 = a5 + a1
 60949: 7c cc                    a5 = u8 [a5]
 60951: 51 0c ec                 jump @4684 if a5 == 0
      :                          @4687
 60954: ae 38 83 00              jump @4706 if a1 >=u t1
      :                          @4688
 60958: 81 6c                    a5 = i32 [s1]
 60960: ab 9c e3                 jump @4684 if a5 != a2
      :                          @4689
 60963: 28 c9                    jump @4682
      :                          @4690
 60965: 33 07                    a0 = 0
 60967: ae 34 77                 jump @4707 if t2 >=u t1
      :                          @4691
 60970: 81 15 58                 s0 = i32 [sp + 0x58]
 60973: 01                       fallthrough
      :                          @4692
 60974: 83 76 01                 i32 s1 = a0 + 0x1
 60977: 82 18 30                 a1 = u64 [sp + 0x30]
 60980: 7a 87                    u32 [a1] = a0
 60982: 82 17 28                 a0 = u64 [sp + 0x28]
 60985: 82 18 50                 a1 = u64 [sp + 0x50]
 60988: 82 19 58                 a2 = u64 [sp + 0x58]
 60991: 82 1c 48                 a5 = u64 [sp + 0x48]
 60994: 50 20 3c 03 11 ff        ra = 828, jump @4674
      :                          @4693 [@dyn 414]
 61000: 82 1a 38                 a3 = u64 [sp + 0x38]
 61003: 82 1b 40                 a4 = u64 [sp + 0x40]
 61006: 64 67                    a0 = s1
 61008: ab 65 de                 jump @4692 if s0 != s1
      :                          @4694
 61011: 82 10 70                 ra = u64 [sp + 0x70]
 61014: 82 15 68                 s0 = u64 [sp + 0x68]
 61017: 82 16 60                 s1 = u64 [sp + 0x60]
 61020: 95 11 78                 sp = sp + 0x78
 61023: 32 00                    ret
      :                          @4695
 61025: 00                       trap
      :                          @4696
 61026: 82 17 10                 a0 = u64 [sp + 0x10]
 61029: 82 77                    a0 = u64 [a0]
 61031: 33 0a                    a3 = 0
 61033: 81 12 58                 t0 = i32 [sp + 0x58]
 61036: 01                       fallthrough
      :                          @4697
 61037: 33 08                    a1 = 0
 61039: 83 ab 01                 i32 a4 = a3 + 0x1
 61042: 82 1c 18                 a5 = u64 [sp + 0x18]
 61045: 28 0b                    jump @4699
      :                          @4698
 61047: 95 88 01                 a1 = a1 + 0x1
 61050: 95 cc 04                 a5 = a5 + 0x4
 61053: aa 84 22                 jump @4708 if t2 == a1
      :                          @4699
 61056: aa 87 1c                 jump @4705 if a0 == a1
      :                          @4700
 61059: 82 59                    a2 = u64 [s0]
 61061: c8 89 09                 a2 = a2 + a1
 61064: 7c 99                    a2 = u8 [a2]
 61066: 51 09 ed                 jump @4698 if a2 == 0
      :                          @4701
 61069: ae 38 10                 jump @4706 if a1 >=u t1
      :                          @4702
 61072: 81 c9                    a2 = i32 [a5]
 61074: ab a9 e5                 jump @4698 if a2 != a3
      :                          @4703
 61077: 64 ba                    a3 = a4
 61079: ab 2b d6                 jump @4697 if a4 != t0
      :                          @4704
 61082: 28 b9                    jump @4694
      :                          @4705
 61084: 00                       trap
      :                          @4706
 61085: 00                       trap
      :                          @4707
 61086: 00                       trap
      :                          @4708
 61087: 00                       trap
      :                          @4709
 61088: 95 11 38 ff              sp = sp + 0xffffffffffffff38
 61092: 7b 10 c0 00              u64 [sp + 0xc0] = ra
 61096: 7b 15 b8 00              u64 [sp + 0xb8] = s0
 61100: 7b 16 b0 00              u64 [sp + 0xb0] = s1
 61104: 82 76 10                 s1 = u64 [a0 + 0x10]
 61107: 51 06 8f 05              jump @4861 if s1 == 0
      :                          @4710
 61111: 98 68 3c                 a1 = s1 >> 0x3c
 61114: 52 08 88 05              jump @4861 if a1 != 0
      :                          @4711
 61118: 7b 17 60                 u64 [sp + 0x60] = a0
 61121: 88 82 01                 t0 = a1 <u 0x1
 61124: 97 69 03                 a2 = s1 << 0x3
 61127: 97 22 03                 t0 = t0 << 0x3
 61130: 33 04 c0 22 03           t2 = 0x322c0
 61135: 33 03 00 00 01           t1 = 0x10000
 61140: c8 34 00                 ra = t2 + t1
 61143: 01                       fallthrough
      :                          @4712
 61144: 82 05                    s0 = u64 [ra]
 61146: c8 95 0c                 a5 = s0 + a2
 61149: ac 5c 64 05              jump @4860 if a5 <u s0
      :                          @4713
 61153: c8 2c 07                 a0 = a5 + t0
 61156: d8 c7 0a                 a3 = a0 <u a5
 61159: d8 73 07                 a0 = t1 <u a0
 61162: d4 a7 07                 a0 = a0 | a3
 61165: 52 07 54 05              jump @4860 if a0 != 0
      :                          @4714
 61169: c9 c4 07                 a0 = t2 - a5
 61172: c8 37 07                 a0 = a0 + t1
 61175: 84 7a 07                 a3 = a0 & 0x7
 61178: c8 ac 0c                 a5 = a5 + a3
 61181: 01                       fallthrough
      :                          @4715
 61182: 82 08                    a1 = u64 [ra]
 61184: ab 58 d8                 jump @4712 if a1 != s0
      :                          @4716
 61187: 7b 0c                    u64 [ra] = a5
 61189: 33 0b                    a4 = 0
 61191: c9 a7 05                 s0 = a0 - a3
 61194: 64 57                    a0 = s0
 61196: 33 08                    a1 = 0
 61198: 50 20 3e 03 08 1d 02     ra = 830, jump @13687
      :                          @4717 [@dyn 415]
 61205: 7b 16 98 00              u64 [sp + 0x98] = s1
 61209: 7b 15 a0 00              u64 [sp + 0xa0] = s0
 61213: 7b 16 a8 00              u64 [sp + 0xa8] = s1
 61217: 95 17 68                 a0 = sp + 0x68
 61220: 95 18 98 00              a1 = sp + 0x98
 61224: 64 69                    a2 = s1
 61226: 50 20 40 03 c7 6a ff     ra = 832, jump @1721
      :                          @4718 [@dyn 416]
 61233: 82 17 60                 a0 = u64 [sp + 0x60]
 61236: 82 73 08                 t1 = u64 [a0 + 0x8]
 61239: 82 17 78                 a0 = u64 [sp + 0x78]
 61242: 7b 17 48                 u64 [sp + 0x48] = a0
 61245: 82 17 70                 a0 = u64 [sp + 0x70]
 61248: 7b 17 30                 u64 [sp + 0x30] = a0
 61251: 33 07                    a0 = 0
 61253: 01                       fallthrough
      :                          @4719
 61254: 96 78 18                 a1 = a0 * 0x18
 61257: c8 83 0a                 a3 = t1 + a1
 61260: 95 ab 10                 a4 = a3 + 0x10
 61263: 95 aa 08                 a3 = a3 + 0x8
 61266: 82 19 30                 a2 = u64 [sp + 0x30]
 61269: c8 98 08                 a1 = a1 + a2
 61272: 95 80 10                 ra = a1 + 0x10
 61275: 95 84 08                 t2 = a1 + 0x8
 61278: 82 18 48                 a1 = u64 [sp + 0x48]
 61281: ae 87 39                 jump @4727 if a0 >=u a1
      :                          @4720
 61284: 33 0c                    a5 = 0
 61286: 33 09                    a2 = 0
 61288: 28 08                    jump @4722
      :                          @4721
 61290: 95 99 01                 a2 = a2 + 0x1
 61293: aa 69 52                 jump @4733 if a2 == s1
      :                          @4722
 61296: aa 79 fa                 jump @4721 if a2 == a0
      :                          @4723
 61299: 82 b8                    a1 = u64 [a4]
 61301: ae 89 cd 00              jump @4744 if a2 >=u a1
      :                          @4724
 61305: 82 a8                    a1 = u64 [a3]
 61307: 97 92 03                 t0 = a2 << 0x3
 61310: c8 28 08                 a1 = a1 + t0
 61313: 82 85                    s0 = u64 [a1]
 61315: 51 05 e7                 jump @4721 if s0 == 0
      :                          @4725
 61318: 82 08                    a1 = u64 [ra]
 61320: ae 89 ba 00              jump @4744 if a2 >=u a1
      :                          @4726
 61324: 82 48                    a1 = u64 [t2]
 61326: 95 cc 01                 a5 = a5 + 0x1
 61329: c8 28 08                 a1 = a1 + t0
 61332: 9a 55                    s0 = -s0
 61334: 7b 85                    u64 [a1] = s0
 61336: 28 d2                    jump @4721
      :                          @4727
 61338: 33 09                    a2 = 0
 61340: 28 0a                    jump @4729
      :                          @4728
 61342: 95 99 01                 a2 = a2 + 0x1
 61345: 33 0c                    a5 = 0
 61347: aa 69 1c                 jump @4733 if a2 == s1
      :                          @4729
 61350: aa 79 f8                 jump @4728 if a2 == a0
      :                          @4730
 61353: 82 b8                    a1 = u64 [a4]
 61355: ae 89 97 00              jump @4744 if a2 >=u a1
      :                          @4731
 61359: 82 a8                    a1 = u64 [a3]
 61361: 97 9c 03                 a5 = a2 << 0x3
 61364: c8 c8 08                 a1 = a1 + a5
 61367: 82 88                    a1 = u64 [a1]
 61369: 51 08 e5                 jump @4728 if a1 == 0
      :                          @4732
 61372: 28 89 04                 jump @4864
      :                          @4733
 61375: 82 18 48                 a1 = u64 [sp + 0x48]
 61378: aa 87 43 04              jump @4845 if a0 == a1
      :                          @4734
 61382: 82 08                    a1 = u64 [ra]
 61384: ae 87 3e 04              jump @4846 if a0 >=u a1
      :                          @4735
 61388: 82 48                    a1 = u64 [t2]
 61390: 95 79 01                 a2 = a0 + 0x1
 61393: 97 77 03                 a0 = a0 << 0x3
 61396: c8 87 07                 a0 = a0 + a1
 61399: 7b 7c                    u64 [a0] = a5
 61401: 64 97                    a0 = a2
 61403: ab 69 6b ff              jump @4719 if a2 != s1
      :                          @4736
 61407: 95 65 ff                 s0 = s1 + 0xffffffffffffffff
 61410: 7b 15 60                 u64 [sp + 0x60] = s0
 61413: 51 05 5e                 jump @4745 if s0 == 0
      :                          @4737
 61416: 97 59 03                 a2 = s0 << 0x3
 61419: 33 07 c0 22 03           a0 = 0x322c0
 61424: 33 03 c0 22 03           t1 = 0x322c0
 61429: 33 02 00 00 01           t0 = 0x10000
 61434: c8 23 0a                 a3 = t1 + t0
 61437: 01                       fallthrough
      :                          @4738
 61438: 82 ab                    a4 = u64 [a3]
 61440: c8 9b 0c                 a5 = a4 + a2
 61443: ac bc 3e 04              jump @4860 if a5 <u a4
      :                          @4739
 61447: 95 c8 08                 a1 = a5 + 0x8
 61450: d8 c8 06                 s1 = a1 <u a5
 61453: d8 82 08                 a1 = t0 <u a1
 61456: d4 68 08                 a1 = a1 | s1
 61459: 52 08 2e 04              jump @4860 if a1 != 0
      :                          @4740
 61463: c9 c3 06                 s1 = t1 - a5
 61466: c8 26 06                 s1 = s1 + t0
 61469: 84 68 07                 a1 = s1 & 0x7
 61472: c8 8c 0c                 a5 = a5 + a1
 61475: 01                       fallthrough
      :                          @4741
 61476: 82 a5                    s0 = u64 [a3]
 61478: ab b5 d8                 jump @4738 if s0 != a4
      :                          @4742
 61481: 7b ac                    u64 [a3] = a5
 61483: c9 86 06                 s1 = s1 - a1
 61486: 64 67                    a0 = s1
 61488: 33 08                    a1 = 0
 61490: 50 20 42 03 e4 1b 02     ra = 834, jump @13687
      :                          @4743 [@dyn 417]
 61497: 64 67                    a0 = s1
 61499: 82 15 60                 s0 = u64 [sp + 0x60]
 61502: 64 56                    s1 = s0
 61504: 28 09                    jump @4746
      :                          @4744
 61506: 00                       trap
      :                          @4745
 61507: 33 06                    s1 = 0
 61509: 33 07 08                 a0 = 0x8
 61512: 01                       fallthrough
      :                          @4746
 61513: 7b 16 98 00              u64 [sp + 0x98] = s1
 61517: 7b 17 a0 00              u64 [sp + 0xa0] = a0
 61521: 7b 16 a8 00              u64 [sp + 0xa8] = s1
 61525: 95 17 80 00              a0 = sp + 0x80
 61529: 95 18 98 00              a1 = sp + 0x98
 61533: 64 69                    a2 = s1
 61535: 50 20 44 03 92 69 ff     ra = 836, jump @1721
      :                          @4747 [@dyn 418]
 61542: 51 05 70                 jump @4757 if s0 == 0
      :                          @4748
 61545: 82 10 90 00              ra = u64 [sp + 0x90]
 61549: 82 17 88 00              a0 = u64 [sp + 0x88]
 61553: 7b 17 28                 u64 [sp + 0x28] = a0
 61556: 33 07                    a0 = 0
 61558: 01                       fallthrough
      :                          @4749
 61559: 82 18 48                 a1 = u64 [sp + 0x48]
 61562: aa 87 8b 03              jump @4845 if a0 == a1
      :                          @4750
 61566: 96 7a 18                 a3 = a0 * 0x18
 61569: 82 15 30                 s0 = u64 [sp + 0x30]
 61572: c8 a5 05                 s0 = s0 + a3
 61575: 95 53 10                 t1 = s0 + 0x10
 61578: ae 07 ad 03              jump @4854 if a0 >=u ra
      :                          @4751
 61582: 64 62                    t0 = s1
 61584: 33 0b                    a4 = 0
 61586: 33 09                    a2 = 0
 61588: 95 77 01                 a0 = a0 + 0x1
 61591: 95 54 08                 t2 = s0 + 0x8
 61594: 82 18 28                 a1 = u64 [sp + 0x28]
 61597: c8 8a 0a                 a3 = a3 + a1
 61600: 95 a6 10                 s1 = a3 + 0x10
 61603: 95 ac 08                 a5 = a3 + 0x8
 61606: 82 18 60                 a1 = u64 [sp + 0x60]
 61609: 01                       fallthrough
      :                          @4752
 61610: 82 3a                    a3 = u64 [t1]
 61612: ae a9 98 03              jump @4863 if a2 >=u a3
      :                          @4753
 61616: 82 6a                    a3 = u64 [s1]
 61618: ae a9 92 03              jump @4863 if a2 >=u a3
      :                          @4754
 61622: 82 4a                    a3 = u64 [t2]
 61624: c8 ba 0a                 a3 = a3 + a4
 61627: 82 c5                    s0 = u64 [a5]
 61629: 82 aa                    a3 = u64 [a3]
 61631: 95 99 01                 a2 = a2 + 0x1
 61634: c8 b5 05                 s0 = s0 + a4
 61637: 7b 5a                    u64 [s0] = a3
 61639: 95 bb 08                 a4 = a4 + 0x8
 61642: ab 98 e0                 jump @4752 if a1 != a2
      :                          @4755
 61645: 64 26                    s1 = t0
 61647: ab 27 a8                 jump @4749 if a0 != t0
      :                          @4756
 61650: 64 07                    a0 = ra
 61652: 28 0e                    jump @4758
      :                          @4757
 61654: 82 17 88 00              a0 = u64 [sp + 0x88]
 61658: 7b 17 28                 u64 [sp + 0x28] = a0
 61661: 82 17 90 00              a0 = u64 [sp + 0x90]
 61665: 01                       fallthrough
      :                          @4758
 61666: 82 18 80 00              a1 = u64 [sp + 0x80]
 61670: 7b 18                    u64 [sp] = a1
 61672: 95 7b ff                 a4 = a0 + 0xffffffffffffffff
 61675: 7b 17 50                 u64 [sp + 0x50] = a0
 61678: 51 0b 71 01              jump @4784 if a4 == 0
      :                          @4759
 61682: 33 05                    s0 = 0
 61684: 33 06 01                 s1 = 0x1
 61687: 49 11 18 08              u64 [sp + 24] = 0x8
 61691: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 61701: 7b 18 38                 u64 [sp + 0x38] = a1
 61704: 7b 1b 08                 u64 [sp + 0x8] = a4
 61707: 01                       fallthrough
      :                          @4760
 61708: 51 06 fb 01              jump @4809 if s1 == 0
      :                          @4761
 61712: 95 59 01                 a2 = s0 + 0x1
 61715: 96 58 18                 a1 = s0 * 0x18
 61718: 7b 18 10                 u64 [sp + 0x10] = a1
 61721: 97 58 03                 a1 = s0 << 0x3
 61724: 7b 19 20                 u64 [sp + 0x20] = a2
 61727: ae 79 08 01              jump @4780 if a2 >=u a0
      :                          @4762
 61731: 82 14 28                 t2 = u64 [sp + 0x28]
 61734: 82 17 10                 a0 = u64 [sp + 0x10]
 61737: c8 74 04                 t2 = t2 + a0
 61740: 95 47 08                 a0 = t2 + 0x8
 61743: 7b 17 58                 u64 [sp + 0x58] = a0
 61746: 95 44 10                 t2 = t2 + 0x10
 61749: 7b 14 60                 u64 [sp + 0x60] = t2
 61752: 82 19 20                 a2 = u64 [sp + 0x20]
 61755: 51 16 ff 74              jump @4771 if s1 == 4294967295
      :                          @4763
 61759: 96 9a 18                 a3 = a2 * 0x18
 61762: 95 99 01                 a2 = a2 + 0x1
 61765: 7b 19 40                 u64 [sp + 0x40] = a2
 61768: 82 17 28                 a0 = u64 [sp + 0x28]
 61771: c8 7a 0a                 a3 = a3 + a0
 61774: 95 a4 08                 t2 = a3 + 0x8
 61777: 95 a3 10                 t1 = a3 + 0x10
 61780: 82 10 18                 ra = u64 [sp + 0x18]
 61783: 82 1a 20                 a3 = u64 [sp + 0x20]
 61786: 01                       fallthrough
      :                          @4764
 61787: 82 3c                    a5 = u64 [t1]
 61789: ae ca a6 01              jump @4805 if a3 >=u a5
      :                          @4765
 61793: 82 17 60                 a0 = u64 [sp + 0x60]
 61796: 82 7b                    a4 = u64 [a0]
 61798: ae b5 9e 01              jump @4806 if s0 >=u a4
      :                          @4766
 61802: ae c5 9b 01              jump @4807 if s0 >=u a5
      :                          @4767
 61806: ae ba 98 01              jump @4808 if a3 >=u a4
      :                          @4768
 61810: 82 49                    a2 = u64 [t2]
 61812: 82 17 58                 a0 = u64 [sp + 0x58]
 61815: 82 7b                    a4 = u64 [a0]
 61817: c8 09 0c                 a5 = a2 + ra
 61820: 82 c2                    t0 = u64 [a5]
 61822: c8 8b 07                 a0 = a4 + a1
 61825: 82 77                    a0 = u64 [a0]
 61827: c8 89 09                 a2 = a2 + a1
 61830: 82 99                    a2 = u64 [a2]
 61832: c8 0b 0b                 a4 = a4 + ra
 61835: 82 bb                    a4 = u64 [a4]
 61837: 95 aa 01                 a3 = a3 + 0x1
 61840: ca 27 07                 a0 = a0 * t0
 61843: ca 9b 09                 a2 = a4 * a2
 61846: c9 97 07                 a0 = a0 - a2
 61849: cc 67 07                 a0 = a0 /s s1
 61852: 7b c7                    u64 [a5] = a0
 61854: 82 17 50                 a0 = u64 [sp + 0x50]
 61857: 95 00 08                 ra = ra + 0x8
 61860: ab a7 b7                 jump @4764 if a0 != a3
      :                          @4769
 61863: 82 19 40                 a2 = u64 [sp + 0x40]
 61866: ab 79 95                 jump @4763 if a2 != a0
      :                          @4770
 61869: 28 7a                    jump @4780
      :                          @4771
 61871: 82 14 20                 t2 = u64 [sp + 0x20]
 61874: 01                       fallthrough
      :                          @4772
 61875: 96 4b 18                 a4 = t2 * 0x18
 61878: 95 44 01                 t2 = t2 + 0x1
 61881: 82 17 28                 a0 = u64 [sp + 0x28]
 61884: c8 7b 0b                 a4 = a4 + a0
 61887: 82 17 50                 a0 = u64 [sp + 0x50]
 61890: 95 b9 08                 a2 = a4 + 0x8
 61893: 7b 19 40                 u64 [sp + 0x40] = a2
 61896: 95 b2 10                 t0 = a4 + 0x10
 61899: 82 13 18                 t1 = u64 [sp + 0x18]
 61902: 82 1a 20                 a3 = u64 [sp + 0x20]
 61905: 01                       fallthrough
      :                          @4773
 61906: 82 2c                    a5 = u64 [t0]
 61908: ae ca 2f 01              jump @4805 if a3 >=u a5
      :                          @4774
 61912: 82 19 60                 a2 = u64 [sp + 0x60]
 61915: 82 9b                    a4 = u64 [a2]
 61917: ae b5 27 01              jump @4806 if s0 >=u a4
      :                          @4775
 61921: ae c5 24 01              jump @4807 if s0 >=u a5
      :                          @4776
 61925: ae ba 21 01              jump @4808 if a3 >=u a4
      :                          @4777
 61929: 82 19 40                 a2 = u64 [sp + 0x40]
 61932: 82 9c                    a5 = u64 [a2]
 61934: 82 19 58                 a2 = u64 [sp + 0x58]
 61937: 82 96                    s1 = u64 [a2]
 61939: c8 3c 0b                 a4 = a5 + t1
 61942: 82 b0                    ra = u64 [a4]
 61944: c8 86 09                 a2 = s1 + a1
 61947: 82 99                    a2 = u64 [a2]
 61949: c8 8c 0c                 a5 = a5 + a1
 61952: 82 cc                    a5 = u64 [a5]
 61954: c8 36 06                 s1 = s1 + t1
 61957: 82 66                    s1 = u64 [s1]
 61959: ca 09 09                 a2 = a2 * ra
 61962: ca c6 0c                 a5 = s1 * a5
 61965: c9 c9 0c                 a5 = a2 - a5
 61968: 82 19 38                 a2 = u64 [sp + 0x38]
 61971: aa 9c f1 01              jump @4844 if a5 == a2
      :                          @4778
 61975: 95 aa 01                 a3 = a3 + 0x1
 61978: 9a c9                    a2 = -a5
 61980: 7b b9                    u64 [a4] = a2
 61982: 95 33 08                 t1 = t1 + 0x8
 61985: ab a7 b1                 jump @4773 if a0 != a3
      :                          @4779
 61988: ab 74 8f                 jump @4772 if t2 != a0
      :                          @4780
 61991: aa 75 16 02              jump @4856 if s0 == a0
      :                          @4781
 61995: 82 1b 28                 a4 = u64 [sp + 0x28]
 61998: 82 17 10                 a0 = u64 [sp + 0x10]
 62001: c8 7b 0b                 a4 = a4 + a0
 62004: 82 ba 10                 a3 = u64 [a4 + 0x10]
 62007: ae a5 07 02              jump @4857 if s0 >=u a3
      :                          @4782
 62011: 82 b7 08                 a0 = u64 [a4 + 0x8]
 62014: c8 87 07                 a0 = a0 + a1
 62017: 82 76                    s1 = u64 [a0]
 62019: 82 17 50                 a0 = u64 [sp + 0x50]
 62022: 82 18 18                 a1 = u64 [sp + 0x18]
 62025: 95 88 08                 a1 = a1 + 0x8
 62028: 7b 18 18                 u64 [sp + 0x18] = a1
 62031: 82 18 20                 a1 = u64 [sp + 0x20]
 62034: 64 85                    s0 = a1
 62036: 82 1b 08                 a4 = u64 [sp + 0x8]
 62039: ab b8 b5 fe              jump @4760 if a1 != a4
      :                          @4783
 62043: 51 07 e4 01              jump @4858 if a0 == 0
      :                          @4784
 62047: 33 03 18                 t1 = 0x18
 62050: ca 3b 07                 a0 = a4 * t1
 62053: 82 18 28                 a1 = u64 [sp + 0x28]
 62056: c8 87 07                 a0 = a0 + a1
 62059: 82 79 10                 a2 = u64 [a0 + 0x10]
 62062: ae 9b d2 01              jump @4859 if a4 >=u a2
      :                          @4785
 62066: 82 77 08                 a0 = u64 [a0 + 0x8]
 62069: 33 09                    a2 = 0
 62071: 97 bb 03                 a4 = a4 << 0x3
 62074: c8 b7 07                 a0 = a0 + a4
 62077: 82 77                    a0 = u64 [a0]
 62079: 33 0b c0 22 03           a4 = 0x322c0
 62084: 95 ba 00 00 01           a3 = a4 + 0x10000
 62089: 33 02 00 20              t0 = 0x2000
 62093: 28 0b                    jump @4787
      :                          @4786
 62095: 95 99 01                 a2 = a2 + 0x1
 62098: 82 18 50                 a1 = u64 [sp + 0x50]
 62101: aa 89 36                 jump @4796 if a2 == a1
      :                          @4787
 62104: ca 39 0c                 a5 = a2 * t1
 62107: 82 18 28                 a1 = u64 [sp + 0x28]
 62110: c8 8c 0c                 a5 = a5 + a1
 62113: 82 c5                    s0 = u64 [a5]
 62115: 51 05 ec                 jump @4786 if s0 == 0
      :                          @4788
 62118: ac 52 e9                 jump @4786 if t0 <u s0
      :                          @4789
 62121: 82 c0 08                 ra = u64 [a5 + 0x8]
 62124: 97 54 03                 t2 = s0 << 0x3
 62127: 01                       fallthrough
      :                          @4790
 62128: 82 ac                    a5 = u64 [a3]
 62130: c9 ca 0b                 a4 = a3 - a5
 62133: ab 0b da                 jump @4786 if a4 != ra
      :                          @4791
 62136: c9 4c 0b                 a4 = a5 - t2
 62139: 01                       fallthrough
      :                          @4792
 62140: 82 a5                    s0 = u64 [a3]
 62142: ab c5 f2                 jump @4790 if s0 != a5
      :                          @4793
 62145: 7b ab                    u64 [a3] = a4
 62147: 33 06                    s1 = 0
 62149: 01                       fallthrough
      :                          @4794
 62150: ab c5 ea                 jump @4790 if s0 != a5
      :                          @4795
 62153: 28 c6                    jump @4786
      :                          @4796
 62155: 82 19                    a2 = u64 [sp]
 62157: 51 09 9c 00              jump @4824 if a2 == 0
      :                          @4797
 62161: 56 29 aa 0a 98 00        jump @4824 if a2 >u 2730
      :                          @4798
 62167: 96 98 e8                 a1 = a2 * 0xffffffffffffffe8
 62170: 33 09 c0 22 03           a2 = 0x322c0
 62175: 95 99 00 00 01           a2 = a2 + 0x10000
 62180: 01                       fallthrough
      :                          @4799
 62181: 82 9a                    a3 = u64 [a2]
 62183: c9 a9 0b                 a4 = a2 - a3
 62186: 82 1c 28                 a5 = u64 [sp + 0x28]
 62189: ab cb 7c                 jump @4824 if a4 != a5
      :                          @4800
 62192: c8 8a 0b                 a4 = a3 + a1
 62195: 01                       fallthrough
      :                          @4801
 62196: 82 9c                    a5 = u64 [a2]
 62198: ab ac ef                 jump @4799 if a5 != a3
      :                          @4802
 62201: 7b 9b                    u64 [a2] = a4
 62203: 33 06                    s1 = 0
 62205: 01                       fallthrough
      :                          @4803
 62206: ab ac e7                 jump @4799 if a5 != a3
      :                          @4804
 62209: 28 68                    jump @4824
      :                          @4805
 62211: 00                       trap
      :                          @4806
 62212: 00                       trap
      :                          @4807
 62213: 00                       trap
      :                          @4808
 62214: 00                       trap
      :                          @4809
 62215: 51 07 54                 jump @4821 if a0 == 0
      :                          @4810
 62218: 33 07                    a0 = 0
 62220: 33 03 18                 t1 = 0x18
 62223: 33 0a c0 22 03           a3 = 0x322c0
 62228: 95 ab 00 00 01           a4 = a3 + 0x10000
 62233: 33 02 00 20              t0 = 0x2000
 62237: 28 0b                    jump @4812
      :                          @4811
 62239: 95 77 01                 a0 = a0 + 0x1
 62242: 82 18 50                 a1 = u64 [sp + 0x50]
 62245: aa 87 36                 jump @4821 if a0 == a1
      :                          @4812
 62248: ca 37 0c                 a5 = a0 * t1
 62251: 82 18 28                 a1 = u64 [sp + 0x28]
 62254: c8 8c 0c                 a5 = a5 + a1
 62257: 82 c6                    s1 = u64 [a5]
 62259: 51 06 ec                 jump @4811 if s1 == 0
      :                          @4813
 62262: ac 62 e9                 jump @4811 if t0 <u s1
      :                          @4814
 62265: 82 cc 08                 a5 = u64 [a5 + 0x8]
 62268: 97 64 03                 t2 = s1 << 0x3
 62271: 01                       fallthrough
      :                          @4815
 62272: 82 b5                    s0 = u64 [a4]
 62274: c9 5b 0a                 a3 = a4 - s0
 62277: ab ca da                 jump @4811 if a3 != a5
      :                          @4816
 62280: c9 45 0a                 a3 = s0 - t2
 62283: 01                       fallthrough
      :                          @4817
 62284: 82 b9                    a2 = u64 [a4]
 62286: ab 59 f2                 jump @4815 if a2 != s0
      :                          @4818
 62289: 7b ba                    u64 [a4] = a3
 62291: 33 06                    s1 = 0
 62293: 01                       fallthrough
      :                          @4819
 62294: ab 59 ea                 jump @4815 if a2 != s0
      :                          @4820
 62297: 28 c6                    jump @4811
      :                          @4821
 62299: 82 18                    a1 = u64 [sp]
 62301: 51 08 09                 jump @4823 if a1 == 0
      :                          @4822
 62304: 54 28 aa 0a a7 00        jump @4847 if a1 <=u 2730
      :                          @4823
 62310: 33 07                    a0 = 0
 62312: 01                       fallthrough
      :                          @4824
 62313: 82 18 48                 a1 = u64 [sp + 0x48]
 62316: 51 08 54                 jump @4836 if a1 == 0
      :                          @4825
 62319: 33 08                    a1 = 0
 62321: 33 03 18                 t1 = 0x18
 62324: 33 0a c0 22 03           a3 = 0x322c0
 62329: 95 ab 00 00 01           a4 = a3 + 0x10000
 62334: 33 02 00 20              t0 = 0x2000
 62338: 28 0b                    jump @4827
      :                          @4826
 62340: 95 88 01                 a1 = a1 + 0x1
 62343: 82 19 48                 a2 = u64 [sp + 0x48]
 62346: aa 98 36                 jump @4836 if a1 == a2
      :                          @4827
 62349: ca 38 0c                 a5 = a1 * t1
 62352: 82 19 30                 a2 = u64 [sp + 0x30]
 62355: c8 9c 0c                 a5 = a5 + a2
 62358: 82 c6                    s1 = u64 [a5]
 62360: 51 06 ec                 jump @4826 if s1 == 0
      :                          @4828
 62363: ac 62 e9                 jump @4826 if t0 <u s1
      :                          @4829
 62366: 82 cc 08                 a5 = u64 [a5 + 0x8]
 62369: 97 64 03                 t2 = s1 << 0x3
 62372: 01                       fallthrough
      :                          @4830
 62373: 82 b5                    s0 = u64 [a4]
 62375: c9 5b 0a                 a3 = a4 - s0
 62378: ab ca da                 jump @4826 if a3 != a5
      :                          @4831
 62381: c9 45 0a                 a3 = s0 - t2
 62384: 01                       fallthrough
      :                          @4832
 62385: 82 b9                    a2 = u64 [a4]
 62387: ab 59 f2                 jump @4830 if a2 != s0
      :                          @4833
 62390: 7b ba                    u64 [a4] = a3
 62392: 33 06                    s1 = 0
 62394: 01                       fallthrough
      :                          @4834
 62395: ab 59 ea                 jump @4830 if a2 != s0
      :                          @4835
 62398: 28 c6                    jump @4826
      :                          @4836
 62400: 82 18 68                 a1 = u64 [sp + 0x68]
 62403: 51 08 2f                 jump @4843 if a1 == 0
      :                          @4837
 62406: 33 09 aa 0a              a2 = 0xaaa
 62410: ac 89 28                 jump @4843 if a2 <u a1
      :                          @4838
 62413: 96 88 e8                 a1 = a1 * 0xffffffffffffffe8
 62416: 33 09 c0 22 03           a2 = 0x322c0
 62421: 95 99 00 00 01           a2 = a2 + 0x10000
 62426: 01                       fallthrough
      :                          @4839
 62427: 82 9a                    a3 = u64 [a2]
 62429: c9 a9 0b                 a4 = a2 - a3
 62432: 82 1c 30                 a5 = u64 [sp + 0x30]
 62435: ab cb 0f                 jump @4843 if a4 != a5
      :                          @4840
 62438: c8 8a 0b                 a4 = a3 + a1
 62441: 01                       fallthrough
      :                          @4841
 62442: 82 9c                    a5 = u64 [a2]
 62444: ab ac ef                 jump @4839 if a5 != a3
      :                          @4842
 62447: 7b 9b                    u64 [a2] = a4
 62449: 01                       fallthrough
      :                          @4843
 62450: 82 10 c0 00              ra = u64 [sp + 0xc0]
 62454: 82 15 b8 00              s0 = u64 [sp + 0xb8]
 62458: 82 16 b0 00              s1 = u64 [sp + 0xb0]
 62462: 95 11 c8 00              sp = sp + 0xc8
 62466: 32 00                    ret
      :                          @4844
 62468: 00                       trap
      :                          @4845
 62469: 00                       trap
      :                          @4846
 62470: 00                       trap
      :                          @4847
 62471: 96 88 e8                 a1 = a1 * 0xffffffffffffffe8
 62474: 33 09 c0 22 03           a2 = 0x322c0
 62479: 95 99 00 00 01           a2 = a2 + 0x10000
 62484: 01                       fallthrough
      :                          @4848
 62485: 82 9a                    a3 = u64 [a2]
 62487: c9 a9 07                 a0 = a2 - a3
 62490: 82 1b 28                 a4 = u64 [sp + 0x28]
 62493: ab b7 49 ff              jump @4823 if a0 != a4
      :                          @4849
 62497: c8 8a 07                 a0 = a3 + a1
 62500: 01                       fallthrough
      :                          @4850
 62501: 82 9b                    a4 = u64 [a2]
 62503: ab ab 08                 jump @4852 if a4 != a3
      :                          @4851
 62506: 7b 97                    u64 [a2] = a0
 62508: 33 0c                    a5 = 0
 62510: 01                       fallthrough
      :                          @4852
 62511: 33 07                    a0 = 0
 62513: ab ab e4                 jump @4848 if a4 != a3
      :                          @4853
 62516: 28 35 ff                 jump @4824
      :                          @4854
 62519: 82 38                    a1 = u64 [t1]
 62521: 51 08 0a                 jump @4862 if a1 == 0
      :                          @4855
 62524: 00                       trap
      :                          @4856
 62525: 00                       trap
      :                          @4857
 62526: 00                       trap
      :                          @4858
 62527: 00                       trap
      :                          @4859
 62528: 00                       trap
      :                          @4860
 62529: 00                       trap
      :                          @4861
 62530: 00                       trap
      :                          @4862
 62531: 00                       trap
      :                          @4863
 62532: 00                       trap
      :                          @4864
 62533: 00                       trap
      :                          @4865
 62534: 95 11 70 ff              sp = sp + 0xffffffffffffff70
 62538: 7b 10 88 00              u64 [sp + 0x88] = ra
 62542: 7b 15 80 00              u64 [sp + 0x80] = s0
 62546: 7b 16 78                 u64 [sp + 0x78] = s1
 62549: 82 82 10                 t0 = u64 [a1 + 0x10]
 62552: 7b 17                    u64 [sp] = a0
 62554: 97 27 03                 a0 = t0 << 0x3
 62557: 7b 17 28                 u64 [sp + 0x28] = a0
 62560: 51 02 f1 01              jump @4904 if t0 == 0
      :                          @4866
 62564: 98 27 3c                 a0 = t0 >> 0x3c
 62567: 52 07 d9 02              jump @4934 if a0 != 0
      :                          @4867
 62571: 7b 18 38                 u64 [sp + 0x38] = a1
 62574: 7b 12 40                 u64 [sp + 0x40] = t0
 62577: 88 77 01                 a0 = a0 <u 0x1
 62580: 97 72 03                 t0 = a0 << 0x3
 62583: 33 08 c0 22 03           a1 = 0x322c0
 62588: 33 03 00 00 01           t1 = 0x10000
 62593: c8 38 0a                 a3 = a1 + t1
 62596: 01                       fallthrough
      :                          @4868
 62597: 82 ab                    a4 = u64 [a3]
 62599: 82 1c 28                 a5 = u64 [sp + 0x28]
 62602: c8 bc 0c                 a5 = a5 + a4
 62605: ac bc b2 02              jump @4933 if a5 <u a4
      :                          @4869
 62609: c8 2c 09                 a2 = a5 + t0
 62612: d8 c9 06                 s1 = a2 <u a5
 62615: d8 93 09                 a2 = t1 <u a2
 62618: d4 69 09                 a2 = a2 | s1
 62621: 52 09 a2 02              jump @4933 if a2 != 0
      :                          @4870
 62625: c9 c8 06                 s1 = a1 - a5
 62628: c8 36 06                 s1 = s1 + t1
 62631: 84 69 07                 a2 = s1 & 0x7
 62634: c8 9c 0c                 a5 = a5 + a2
 62637: 01                       fallthrough
      :                          @4871
 62638: 82 a7                    a0 = u64 [a3]
 62640: ab b7 d5                 jump @4868 if a0 != a4
      :                          @4872
 62643: 7b ac                    u64 [a3] = a5
 62645: c9 96 05                 s0 = s1 - a2
 62648: 64 57                    a0 = s0
 62650: 33 08                    a1 = 0
 62652: 82 19 28                 a2 = u64 [sp + 0x28]
 62655: 50 20 46 03 57 17 02     ra = 838, jump @13687
      :                          @4873 [@dyn 419]
 62662: 82 17 38                 a0 = u64 [sp + 0x38]
 62665: 82 77 08                 a0 = u64 [a0 + 0x8]
 62668: 7b 17 20                 u64 [sp + 0x20] = a0
 62671: 33 0a                    a3 = 0
 62673: 33 09 18                 a2 = 0x18
 62676: 82 12 40                 t0 = u64 [sp + 0x40]
 62679: 28 05                    jump @4875
      :                          @4874
 62681: aa 2a 3d                 jump @4880 if a3 == t0
      :                          @4875
 62684: 33 07                    a0 = 0
 62686: ca 9a 08                 a1 = a3 * a2
 62689: 95 aa 01                 a3 = a3 + 0x1
 62692: 82 1b 20                 a4 = u64 [sp + 0x20]
 62695: c8 b8 08                 a1 = a1 + a4
 62698: 95 8b 10                 a4 = a1 + 0x10
 62701: 95 8c 08                 a5 = a1 + 0x8
 62704: 64 56                    s1 = s0
 62706: 28 0b                    jump @4877
      :                          @4876
 62708: 95 77 01                 a0 = a0 + 0x1
 62711: 95 66 08                 s1 = s1 + 0x8
 62714: aa 72 df                 jump @4874 if t0 == a0
      :                          @4877
 62717: 82 b8                    a1 = u64 [a4]
 62719: ae 87 82 01              jump @4907 if a0 >=u a1
      :                          @4878
 62723: 82 c8                    a1 = u64 [a5]
 62725: c8 78 08                 a1 = a1 + a0
 62728: 7c 88                    a1 = u8 [a1]
 62730: 51 08 ea                 jump @4876 if a1 == 0
      :                          @4879
 62733: 82 68                    a1 = u64 [s1]
 62735: 95 88 01                 a1 = a1 + 0x1
 62738: 7b 68                    u64 [s1] = a1
 62740: 28 e0                    jump @4876
      :                          @4880
 62742: 33 08                    a1 = 0
 62744: 64 56                    s1 = s0
 62746: 33 05                    s0 = 0
 62748: 49 11 48                 u64 [sp + 72] = 0
 62751: 33 07 08                 a0 = 0x8
 62754: 7b 17 50                 u64 [sp + 0x50] = a0
 62757: 49 11 58                 u64 [sp + 88] = 0
 62760: 7b 16 08                 u64 [sp + 0x8] = s1
 62763: 28 1a                    jump @4883
      :                          @4881
 62765: 97 89 03                 a2 = a1 << 0x3
 62768: c8 79 09                 a2 = a2 + a0
 62771: 7b 95                    u64 [a2] = s0
 62773: 95 88 01                 a1 = a1 + 0x1
 62776: 7b 18 58                 u64 [sp + 0x58] = a1
 62779: 01                       fallthrough
      :                          @4882
 62780: 95 55 01                 s0 = s0 + 0x1
 62783: 95 66 08                 s1 = s1 + 0x8
 62786: aa 52 23                 jump @4887 if t0 == s0
      :                          @4883
 62789: 82 69                    a2 = u64 [s1]
 62791: 52 09 f5                 jump @4882 if a2 != 0
      :                          @4884
 62794: 82 19 48                 a2 = u64 [sp + 0x48]
 62797: ab 98 e0                 jump @4881 if a1 != a2
      :                          @4885
 62800: 95 17 48                 a0 = sp + 0x48
 62803: 50 20 48 03 ed 5d ff     ra = 840, jump @1581
      :                          @4886 [@dyn 420]
 62810: 82 12 40                 t0 = u64 [sp + 0x40]
 62813: 82 18 58                 a1 = u64 [sp + 0x58]
 62816: 82 17 50                 a0 = u64 [sp + 0x50]
 62819: 28 ca                    jump @4881
      :                          @4887
 62821: 49 11 60                 u64 [sp + 96] = 0
 62824: 49 11 10 08              u64 [sp + 16] = 0x8
 62828: 49 11 68 08              u64 [sp + 104] = 0x8
 62832: 49 11 70                 u64 [sp + 112] = 0
 62835: 51 08 0f 01              jump @4908 if a1 == 0
      :                          @4888
 62839: 82 1a 50                 a3 = u64 [sp + 0x50]
 62842: 33 09                    a2 = 0
 62844: 82 15 08                 s0 = u64 [sp + 0x8]
 62847: 28 0f                    jump @4890
      :                          @4889
 62849: 82 18 58                 a1 = u64 [sp + 0x58]
 62852: 82 15 08                 s0 = u64 [sp + 0x8]
 62855: 82 19 18                 a2 = u64 [sp + 0x18]
 62858: 51 08 df 00              jump @4905 if a1 == 0
      :                          @4890
 62862: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 62865: 7b 18 58                 u64 [sp + 0x58] = a1
 62868: 97 88 03                 a1 = a1 << 0x3
 62871: c8 a8 08                 a1 = a1 + a3
 62874: 82 17 60                 a0 = u64 [sp + 0x60]
 62877: 82 8b                    a4 = u64 [a1]
 62879: ab 79 24                 jump @4893 if a2 != a0
      :                          @4891
 62882: 95 17 60                 a0 = sp + 0x60
 62885: 64 98                    a1 = a2
 62887: 64 a6                    s1 = a3
 62889: 7b 1b 38                 u64 [sp + 0x38] = a4
 62892: 50 20 4a 03 94 5d ff     ra = 842, jump @1581
      :                          @4892 [@dyn 421]
 62899: 82 1b 38                 a4 = u64 [sp + 0x38]
 62902: 64 6a                    a3 = s1
 62904: 82 12 40                 t0 = u64 [sp + 0x40]
 62907: 82 19 70                 a2 = u64 [sp + 0x70]
 62910: 82 18 68                 a1 = u64 [sp + 0x68]
 62913: 28 06                    jump @4894
      :                          @4893
 62915: 82 18 10                 a1 = u64 [sp + 0x10]
 62918: 01                       fallthrough
      :                          @4894
 62919: 97 97 03                 a0 = a2 << 0x3
 62922: c8 87 07                 a0 = a0 + a1
 62925: 7b 7b                    u64 [a0] = a4
 62927: 95 99 01                 a2 = a2 + 0x1
 62930: 7b 19 70                 u64 [sp + 0x70] = a2
 62933: ae 2b 69 01              jump @4932 if a4 >=u t0
      :                          @4895
 62937: 7b 18 10                 u64 [sp + 0x10] = a1
 62940: 7b 19 18                 u64 [sp + 0x18] = a2
 62943: 64 56                    s1 = s0
 62945: 33 05                    s0 = 0
 62947: 96 b7 18                 a0 = a4 * 0x18
 62950: 82 18 20                 a1 = u64 [sp + 0x20]
 62953: c8 87 07                 a0 = a0 + a1
 62956: 95 79 10                 a2 = a0 + 0x10
 62959: 95 7b 08                 a4 = a0 + 0x8
 62962: 7b 19 38                 u64 [sp + 0x38] = a2
 62965: 7b 1b 30                 u64 [sp + 0x30] = a4
 62968: 28 1e                    jump @4898
      :                          @4896
 62970: 82 1a 50                 a3 = u64 [sp + 0x50]
 62973: 97 87 03                 a0 = a1 << 0x3
 62976: c8 a7 07                 a0 = a0 + a3
 62979: 7b 75                    u64 [a0] = s0
 62981: 95 88 01                 a1 = a1 + 0x1
 62984: 7b 18 58                 u64 [sp + 0x58] = a1
 62987: 01                       fallthrough
      :                          @4897
 62988: 95 55 01                 s0 = s0 + 0x1
 62991: 95 66 08                 s1 = s1 + 0x8
 62994: aa 52 6f ff              jump @4889 if t0 == s0
      :                          @4898
 62998: 82 98                    a1 = u64 [a2]
 63000: ae 85 25 01              jump @4931 if s0 >=u a1
      :                          @4899
 63004: 82 b7                    a0 = u64 [a4]
 63006: c8 57 07                 a0 = a0 + s0
 63009: 7c 77                    a0 = u8 [a0]
 63011: 51 07 e9                 jump @4897 if a0 == 0
      :                          @4900
 63014: 82 67                    a0 = u64 [s1]
 63016: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 63019: 7b 67                    u64 [s1] = a0
 63021: 52 07 df                 jump @4897 if a0 != 0
      :                          @4901
 63024: 82 18 58                 a1 = u64 [sp + 0x58]
 63027: 82 17 48                 a0 = u64 [sp + 0x48]
 63030: ab 78 c4                 jump @4896 if a1 != a0
      :                          @4902
 63033: 95 17 48                 a0 = sp + 0x48
 63036: 50 20 4c 03 04 5d ff     ra = 844, jump @1581
      :                          @4903 [@dyn 422]
 63043: 82 1b 30                 a4 = u64 [sp + 0x30]
 63046: 82 19 38                 a2 = u64 [sp + 0x38]
 63049: 82 12 40                 t0 = u64 [sp + 0x40]
 63052: 82 18 58                 a1 = u64 [sp + 0x58]
 63055: 28 ab                    jump @4896
      :                          @4904
 63057: 33 09                    a2 = 0
 63059: 49 11 48                 u64 [sp + 72] = 0
 63062: 33 05 08                 s0 = 0x8
 63065: 7b 15 50                 u64 [sp + 0x50] = s0
 63068: 49 11 58                 u64 [sp + 88] = 0
 63071: 49 11 60                 u64 [sp + 96] = 0
 63074: 7b 15 68                 u64 [sp + 0x68] = s0
 63077: 49 11 70                 u64 [sp + 112] = 0
 63080: 01                       fallthrough
      :                          @4905
 63081: ab 29 1f                 jump @4909 if a2 != t0
      :                          @4906
 63084: 82 17 70                 a0 = u64 [sp + 0x70]
 63087: 82 18 68                 a1 = u64 [sp + 0x68]
 63090: 82 19 60                 a2 = u64 [sp + 0x60]
 63093: 82 1a                    a3 = u64 [sp]
 63095: 7b a7 10                 u64 [a3 + 0x10] = a0
 63098: 7b a8 08                 u64 [a3 + 0x8] = a1
 63101: 7b a9                    u64 [a3] = a2
 63103: 28 4b                    jump @4916
      :                          @4907
 63105: 00                       trap
      :                          @4908
 63106: 82 15 08                 s0 = u64 [sp + 0x8]
 63109: 51 02 e7                 jump @4906 if t0 == 0
      :                          @4909
 63112: 82 18 60                 a1 = u64 [sp + 0x60]
 63115: 14 07 00 00 00 00 00 00 00 80 a0 = 0x8000000000000000
 63125: 82 19                    a2 = u64 [sp]
 63127: 7b 97                    u64 [a2] = a0
 63129: 51 08 31                 jump @4916 if a1 == 0
      :                          @4910
 63132: 33 07 00 20              a0 = 0x2000
 63136: ac 87 2a                 jump @4916 if a0 <u a1
      :                          @4911
 63139: 82 17 68                 a0 = u64 [sp + 0x68]
 63142: 97 88 03                 a1 = a1 << 0x3
 63145: 33 09 c0 22 03           a2 = 0x322c0
 63150: 95 99 00 00 01           a2 = a2 + 0x10000
 63155: 01                       fallthrough
      :                          @4912
 63156: 82 9a                    a3 = u64 [a2]
 63158: c9 a9 0b                 a4 = a2 - a3
 63161: ab 7b 11                 jump @4916 if a4 != a0
      :                          @4913
 63164: c9 8a 0b                 a4 = a3 - a1
 63167: 01                       fallthrough
      :                          @4914
 63168: 82 9c                    a5 = u64 [a2]
 63170: ab ac f2                 jump @4912 if a5 != a3
      :                          @4915
 63173: 7b 9b                    u64 [a2] = a4
 63175: 33 06                    s1 = 0
 63177: 01                       fallthrough
      :                          @4916
 63178: 82 18 48                 a1 = u64 [sp + 0x48]
 63181: 51 08 31                 jump @4923 if a1 == 0
      :                          @4917
 63184: 33 07 00 20              a0 = 0x2000
 63188: ac 87 2a                 jump @4923 if a0 <u a1
      :                          @4918
 63191: 82 17 50                 a0 = u64 [sp + 0x50]
 63194: 97 88 03                 a1 = a1 << 0x3
 63197: 33 09 c0 22 03           a2 = 0x322c0
 63202: 95 99 00 00 01           a2 = a2 + 0x10000
 63207: 01                       fallthrough
      :                          @4919
 63208: 82 9a                    a3 = u64 [a2]
 63210: c9 a9 0b                 a4 = a2 - a3
 63213: ab 7b 11                 jump @4923 if a4 != a0
      :                          @4920
 63216: c9 8a 0b                 a4 = a3 - a1
 63219: 01                       fallthrough
      :                          @4921
 63220: 82 9c                    a5 = u64 [a2]
 63222: ab ac f2                 jump @4919 if a5 != a3
      :                          @4922
 63225: 7b 9b                    u64 [a2] = a4
 63227: 33 06                    s1 = 0
 63229: 01                       fallthrough
      :                          @4923
 63230: 51 02 2e                 jump @4930 if t0 == 0
      :                          @4924
 63233: 33 07 00 20              a0 = 0x2000
 63237: ac 27 27                 jump @4930 if a0 <u t0
      :                          @4925
 63240: 33 07 c0 22 03           a0 = 0x322c0
 63245: 95 77 00 00 01           a0 = a0 + 0x10000
 63250: 01                       fallthrough
      :                          @4926
 63251: 82 78                    a1 = u64 [a0]
 63253: c9 87 09                 a2 = a0 - a1
 63256: ab 59 14                 jump @4930 if a2 != s0
      :                          @4927
 63259: 82 19 28                 a2 = u64 [sp + 0x28]
 63262: c9 98 09                 a2 = a1 - a2
 63265: 01                       fallthrough
      :                          @4928
 63266: 82 7a                    a3 = u64 [a0]
 63268: ab 8a ef                 jump @4926 if a3 != a1
      :                          @4929
 63271: 7b 79                    u64 [a0] = a2
 63273: 33 0b                    a4 = 0
 63275: 01                       fallthrough
      :                          @4930
 63276: 82 10 88 00              ra = u64 [sp + 0x88]
 63280: 82 15 80 00              s0 = u64 [sp + 0x80]
 63284: 82 16 78                 s1 = u64 [sp + 0x78]
 63287: 95 11 90 00              sp = sp + 0x90
 63291: 32 00                    ret
      :                          @4931
 63293: 00                       trap
      :                          @4932
 63294: 00                       trap
      :                          @4933
 63295: 00                       trap
      :                          @4934
 63296: 00                       trap
      :                          @4935
 63297: 95 11 30 ff              sp = sp + 0xffffffffffffff30
 63301: 7b 10 c8 00              u64 [sp + 0xc8] = ra
 63305: 7b 15 c0 00              u64 [sp + 0xc0] = s0
 63309: 7b 16 b8 00              u64 [sp + 0xb8] = s1
 63313: 7b 18 28                 u64 [sp + 0x28] = a1
 63316: 82 83 10                 t1 = u64 [a1 + 0x10]
 63319: 7b 17 10                 u64 [sp + 0x10] = a0
 63322: 7b 13 30                 u64 [sp + 0x30] = t1
 63325: 51 03 17 01              jump @4955 if t1 == 0
      :                          @4936
 63329: 98 37 3b                 a0 = t1 >> 0x3b
 63332: 52 07 a2 02              jump @4992 if a0 != 0
      :                          @4937
 63336: 88 72 01                 t0 = a0 <u 0x1
 63339: 97 39 04                 a2 = t1 << 0x4
 63342: 97 22 03                 t0 = t0 << 0x3
 63345: 33 04 c0 22 03           t2 = 0x322c0
 63350: 33 03 00 00 01           t1 = 0x10000
 63355: c8 34 0b                 a4 = t2 + t1
 63358: 01                       fallthrough
      :                          @4938
 63359: 82 b6                    s1 = u64 [a4]
 63361: c8 96 0c                 a5 = s1 + a2
 63364: ac 6c 81 02              jump @4991 if a5 <u s1
      :                          @4939
 63368: c8 2c 0a                 a3 = a5 + t0
 63371: d8 ca 05                 s0 = a3 <u a5
 63374: d8 a3 0a                 a3 = t1 <u a3
 63377: d4 5a 0a                 a3 = a3 | s0
 63380: 52 0a 71 02              jump @4991 if a3 != 0
      :                          @4940
 63384: c9 c4 05                 s0 = t2 - a5
 63387: c8 35 05                 s0 = s0 + t1
 63390: 84 5a 07                 a3 = s0 & 0x7
 63393: c8 ac 0c                 a5 = a5 + a3
 63396: 01                       fallthrough
      :                          @4941
 63397: 82 b7                    a0 = u64 [a4]
 63399: ab 67 d8                 jump @4938 if a0 != s1
      :                          @4942
 63402: 7b bc                    u64 [a4] = a5
 63404: c9 a5 05                 s0 = s0 - a3
 63407: 64 57                    a0 = s0
 63409: 33 08                    a1 = 0
 63411: 50 20 4e 03 63 14 02     ra = 846, jump @13687
      :                          @4943 [@dyn 423]
 63418: 82 19 30                 a2 = u64 [sp + 0x30]
 63421: 7b 19 38                 u64 [sp + 0x38] = a2
 63424: 7b 15 18                 u64 [sp + 0x18] = s0
 63427: 7b 15 40                 u64 [sp + 0x40] = s0
 63430: 7b 19 48                 u64 [sp + 0x48] = a2
 63433: 97 99 03                 a2 = a2 << 0x3
 63436: 33 07 c0 22 03           a0 = 0x322c0
 63441: 33 03 c0 22 03           t1 = 0x322c0
 63446: 33 02 00 00 01           t0 = 0x10000
 63451: c8 23 0a                 a3 = t1 + t0
 63454: 01                       fallthrough
      :                          @4944
 63455: 82 ab                    a4 = u64 [a3]
 63457: c8 9b 0c                 a5 = a4 + a2
 63460: ac bc 21 02              jump @4991 if a5 <u a4
      :                          @4945
 63464: 95 c8 08                 a1 = a5 + 0x8
 63467: d8 c8 06                 s1 = a1 <u a5
 63470: d8 82 08                 a1 = t0 <u a1
 63473: d4 68 08                 a1 = a1 | s1
 63476: 52 08 11 02              jump @4991 if a1 != 0
      :                          @4946
 63480: c9 c3 06                 s1 = t1 - a5
 63483: c8 26 06                 s1 = s1 + t0
 63486: 84 68 07                 a1 = s1 & 0x7
 63489: c8 8c 0c                 a5 = a5 + a1
 63492: 01                       fallthrough
      :                          @4947
 63493: 82 a5                    s0 = u64 [a3]
 63495: ab b5 d8                 jump @4944 if s0 != a4
      :                          @4948
 63498: 7b ac                    u64 [a3] = a5
 63500: c9 86 05                 s0 = s1 - a1
 63503: 64 57                    a0 = s0
 63505: 33 08                    a1 = 0
 63507: 50 20 50 03 03 14 02     ra = 848, jump @13687
      :                          @4949 [@dyn 424]
 63514: 82 19 30                 a2 = u64 [sp + 0x30]
 63517: 7b 19 50                 u64 [sp + 0x50] = a2
 63520: 7b 15 58                 u64 [sp + 0x58] = s0
 63523: 7b 19 60                 u64 [sp + 0x60] = a2
 63526: 33 07 c0 22 03           a0 = 0x322c0
 63531: 33 06 00 00 01           s1 = 0x10000
 63536: c8 67 07                 a0 = a0 + s1
 63539: 01                       fallthrough
      :                          @4950
 63540: 82 7a                    a3 = u64 [a0]
 63542: c8 9a 08                 a1 = a3 + a2
 63545: ac a8 cc 01              jump @4991 if a1 <u a3
      :                          @4951
 63549: 95 8b 01                 a4 = a1 + 0x1
 63552: 88 bc 01                 a5 = a4 <u 0x1
 63555: d8 b6 0b                 a4 = s1 <u a4
 63558: d4 cb 0b                 a4 = a4 | a5
 63561: 52 0b bc 01              jump @4991 if a4 != 0
      :                          @4952
 63565: 82 7b                    a4 = u64 [a0]
 63567: ab ab e5                 jump @4950 if a4 != a3
      :                          @4953
 63570: 7b 78                    u64 [a0] = a1
 63572: 33 0c                    a5 = 0
 63574: 7b 15 08                 u64 [sp + 0x8] = s0
 63577: 33 07 c0 22 04           a0 = 0x422c0
 63582: c9 87 06                 s1 = a0 - a1
 63585: 64 67                    a0 = s1
 63587: 33 08                    a1 = 0
 63589: 50 20 52 03 b1 13 02     ra = 850, jump @13687
      :                          @4954 [@dyn 425]
 63596: 82 13 30                 t1 = u64 [sp + 0x30]
 63599: 82 15 18                 s0 = u64 [sp + 0x18]
 63602: 28 21                    jump @4956
      :                          @4955
 63604: 49 11 38                 u64 [sp + 56] = 0
 63607: 33 08 08                 a1 = 0x8
 63610: 7b 18 40                 u64 [sp + 0x40] = a1
 63613: 49 11 48                 u64 [sp + 72] = 0
 63616: 49 11 50                 u64 [sp + 80] = 0
 63619: 7b 18 08                 u64 [sp + 0x8] = a1
 63622: 7b 18 58                 u64 [sp + 0x58] = a1
 63625: 49 11 60                 u64 [sp + 96] = 0
 63628: 33 06 01                 s1 = 0x1
 63631: 33 05 08                 s0 = 0x8
 63634: 01                       fallthrough
      :                          @4956
 63635: 7b 13 68                 u64 [sp + 0x68] = t1
 63638: 7b 16 70                 u64 [sp + 0x70] = s1
 63641: 7b 13 78                 u64 [sp + 0x78] = t1
 63644: 49 21 80 00              u64 [sp + 128] = 0
 63648: 49 21 88 00 08           u64 [sp + 136] = 0x8
 63653: 49 21 90 00              u64 [sp + 144] = 0
 63657: 49 21 98 00              u64 [sp + 152] = 0
 63661: 49 21 a0 00              u64 [sp + 160] = 0
 63665: 49 21 a8 00 08           u64 [sp + 168] = 0x8
 63670: 49 21 b0 00              u64 [sp + 176] = 0
 63674: 51 03 21 01              jump @4989 if t1 == 0
      :                          @4957
 63678: 7b 16 20                 u64 [sp + 0x20] = s1
 63681: 33 06                    s1 = 0
 63683: 7b 15 18                 u64 [sp + 0x18] = s0
 63686: 28 0b                    jump @4959
      :                          @4958
 63688: 95 66 01                 s1 = s1 + 0x1
 63691: 95 55 10                 s0 = s0 + 0x10
 63694: aa 63 2f                 jump @4962 if t1 == s1
      :                          @4959
 63697: 82 57                    a0 = u64 [s0]
 63699: 52 07 f5                 jump @4958 if a0 != 0
      :                          @4960
 63702: 95 19 38                 a2 = sp + 0x38
 63705: 95 1a 50                 a3 = sp + 0x50
 63708: 95 1b 80 00              a4 = sp + 0x80
 63712: 95 1c 68                 a5 = sp + 0x68
 63715: 95 14 98 00              t2 = sp + 0x98
 63719: 95 17 a0 00              a0 = sp + 0xa0
 63723: 7b 17                    u64 [sp] = a0
 63725: 64 67                    a0 = s1
 63727: 82 18 28                 a1 = u64 [sp + 0x28]
 63730: 50 20 54 03 15 01        ra = 852, jump @4993
      :                          @4961 [@dyn 426]
 63736: 82 13 30                 t1 = u64 [sp + 0x30]
 63739: 28 cd                    jump @4958
      :                          @4962
 63741: 82 18 80 00              a1 = u64 [sp + 0x80]
 63745: 82 19 b0 00              a2 = u64 [sp + 0xb0]
 63749: 82 1a a8 00              a3 = u64 [sp + 0xa8]
 63753: 82 1b a0 00              a4 = u64 [sp + 0xa0]
 63757: 82 17 88 00              a0 = u64 [sp + 0x88]
 63761: 82 1c 10                 a5 = u64 [sp + 0x10]
 63764: 7b c9 10                 u64 [a5 + 0x10] = a2
 63767: 7b ca 08                 u64 [a5 + 0x8] = a3
 63770: 7b cb                    u64 [a5] = a4
 63772: 51 08 2c                 jump @4969 if a1 == 0
      :                          @4963
 63775: 33 09 00 20              a2 = 0x2000
 63779: ac 89 25                 jump @4969 if a2 <u a1
      :                          @4964
 63782: 97 88 03                 a1 = a1 << 0x3
 63785: 33 09 c0 22 03           a2 = 0x322c0
 63790: 95 99 00 00 01           a2 = a2 + 0x10000
 63795: 01                       fallthrough
      :                          @4965
 63796: 82 9a                    a3 = u64 [a2]
 63798: c9 a9 0b                 a4 = a2 - a3
 63801: ab 7b 0f                 jump @4969 if a4 != a0
      :                          @4966
 63804: c9 8a 0b                 a4 = a3 - a1
 63807: 01                       fallthrough
      :                          @4967
 63808: 82 9c                    a5 = u64 [a2]
 63810: ab ac f2                 jump @4965 if a5 != a3
      :                          @4968
 63813: 7b 9b                    u64 [a2] = a4
 63815: 01                       fallthrough
      :                          @4969
 63816: 33 07 00 00 01           a0 = 0x10000
 63821: 33 08 01 00 01           a1 = 0x10001
 63826: 82 16 18                 s1 = u64 [sp + 0x18]
 63829: 82 15 08                 s0 = u64 [sp + 0x8]
 63832: ae 83 9b 00              jump @4990 if t1 >=u a1
      :                          @4970
 63836: 33 08 c0 22 03           a1 = 0x322c0
 63841: 95 87 00 00 01           a0 = a1 + 0x10000
 63846: 01                       fallthrough
      :                          @4971
 63847: 82 78                    a1 = u64 [a0]
 63849: c9 87 09                 a2 = a0 - a1
 63852: 82 1a 20                 a3 = u64 [sp + 0x20]
 63855: ab a9 11                 jump @4975 if a2 != a3
      :                          @4972
 63858: c9 38 09                 a2 = a1 - t1
 63861: 01                       fallthrough
      :                          @4973
 63862: 82 7a                    a3 = u64 [a0]
 63864: ab 8a ef                 jump @4971 if a3 != a1
      :                          @4974
 63867: 7b 79                    u64 [a0] = a2
 63869: 33 0b                    a4 = 0
 63871: 01                       fallthrough
      :                          @4975
 63872: 33 07 00 20              a0 = 0x2000
 63876: ac 37 6f                 jump @4990 if a0 <u t1
      :                          @4976
 63879: 97 37 03                 a0 = t1 << 0x3
 63882: 33 08 c0 22 03           a1 = 0x322c0
 63887: 95 88 00 00 01           a1 = a1 + 0x10000
 63892: 01                       fallthrough
      :                          @4977
 63893: 82 89                    a2 = u64 [a1]
 63895: c9 98 0a                 a3 = a1 - a2
 63898: ab 5a 11                 jump @4981 if a3 != s0
      :                          @4978
 63901: c9 79 0a                 a3 = a2 - a0
 63904: 01                       fallthrough
      :                          @4979
 63905: 82 8b                    a4 = u64 [a1]
 63907: ab 9b f2                 jump @4977 if a4 != a2
      :                          @4980
 63910: 7b 8a                    u64 [a1] = a3
 63912: 33 0c                    a5 = 0
 63914: 01                       fallthrough
      :                          @4981
 63915: 33 07 00 10              a0 = 0x1000
 63919: ac 37 44                 jump @4990 if a0 <u t1
      :                          @4982
 63922: 97 37 04                 a0 = t1 << 0x4
 63925: 33 08 c0 22 03           a1 = 0x322c0
 63930: 95 88 00 00 01           a1 = a1 + 0x10000
 63935: 01                       fallthrough
      :                          @4983
 63936: 82 89                    a2 = u64 [a1]
 63938: c9 98 0a                 a3 = a1 - a2
 63941: ab 6a 2e                 jump @4990 if a3 != s1
      :                          @4984
 63944: c9 79 0a                 a3 = a2 - a0
 63947: 01                       fallthrough
      :                          @4985
 63948: 82 8b                    a4 = u64 [a1]
 63950: ab 9b f2                 jump @4983 if a4 != a2
      :                          @4986
 63953: 7b 8a                    u64 [a1] = a3
 63955: 33 0c                    a5 = 0
 63957: 01                       fallthrough
      :                          @4987
 63958: ab 9b ea                 jump @4983 if a4 != a2
      :                          @4988
 63961: 28 1a                    jump @4990
      :                          @4989
 63963: 82 17 b0 00              a0 = u64 [sp + 0xb0]
 63967: 82 18 a8 00              a1 = u64 [sp + 0xa8]
 63971: 82 19 a0 00              a2 = u64 [sp + 0xa0]
 63975: 82 1a 10                 a3 = u64 [sp + 0x10]
 63978: 7b a7 10                 u64 [a3 + 0x10] = a0
 63981: 7b a8 08                 u64 [a3 + 0x8] = a1
 63984: 7b a9                    u64 [a3] = a2
 63986: 01                       fallthrough
      :                          @4990
 63987: 82 10 c8 00              ra = u64 [sp + 0xc8]
 63991: 82 15 c0 00              s0 = u64 [sp + 0xc0]
 63995: 82 16 b8 00              s1 = u64 [sp + 0xb8]
 63999: 95 11 d0 00              sp = sp + 0xd0
 64003: 32 00                    ret
      :                          @4991
 64005: 00                       trap
      :                          @4992
 64006: 00                       trap
      :                          @4993
 64007: 95 11 30 ff              sp = sp + 0xffffffffffffff30
 64011: 7b 10 c8 00              u64 [sp + 0xc8] = ra
 64015: 7b 15 c0 00              u64 [sp + 0xc0] = s0
 64019: 7b 16 b8 00              u64 [sp + 0xb8] = s1
 64023: 82 92 10                 t0 = u64 [a2 + 0x10]
 64026: 7b 18 50                 u64 [sp + 0x50] = a1
 64029: 64 75                    s0 = a0
 64031: ae 27 65 02              jump @5032 if a0 >=u t0
      :                          @4994
 64035: 82 96 08                 s1 = u64 [a2 + 0x8]
 64038: 82 47                    a0 = u64 [t2]
 64040: 97 58 04                 a1 = s0 << 0x4
 64043: 7b 16 48                 u64 [sp + 0x48] = s1
 64046: c8 86 06                 s1 = s1 + a1
 64049: 49 06 01                 u64 [s1 + 0] = 0x1
 64052: 7b 67 08                 u64 [s1 + 0x8] = a0
 64055: 82 a8 10                 a1 = u64 [a3 + 0x10]
 64058: 7b 18 20                 u64 [sp + 0x20] = a1
 64061: ae 85 48 02              jump @5033 if s0 >=u a1
      :                          @4995
 64065: 7b 16 08                 u64 [sp + 0x8] = s1
 64068: 82 a0 08                 ra = u64 [a3 + 0x8]
 64071: 97 58 03                 a1 = s0 << 0x3
 64074: c8 08 08                 a1 = a1 + ra
 64077: 7b 18 68                 u64 [sp + 0x68] = a1
 64080: 7b 87                    u64 [a1] = a0
 64082: 82 b8 10                 a1 = u64 [a4 + 0x10]
 64085: 82 b6                    s1 = u64 [a4]
 64087: 95 77 01                 a0 = a0 + 0x1
 64090: 7b 47                    u64 [t2] = a0
 64092: 7b 1b 70                 u64 [sp + 0x70] = a4
 64095: 7b 19 40                 u64 [sp + 0x40] = a2
 64098: 7b 14 18                 u64 [sp + 0x18] = t2
 64101: 7b 1c 38                 u64 [sp + 0x38] = a5
 64104: 7b 1a 30                 u64 [sp + 0x30] = a3
 64107: ab 68 28                 jump @4998 if a1 != s1
      :                          @4996
 64110: 64 b7                    a0 = a4
 64112: 64 26                    s1 = t0
 64114: 7b 10 98 00              u64 [sp + 0x98] = ra
 64118: 50 20 56 03 ca 58 ff     ra = 854, jump @1581
      :                          @4997 [@dyn 427]
 64125: 82 10 98 00              ra = u64 [sp + 0x98]
 64129: 82 1a 30                 a3 = u64 [sp + 0x30]
 64132: 82 1c 38                 a5 = u64 [sp + 0x38]
 64135: 82 19 40                 a2 = u64 [sp + 0x40]
 64138: 64 62                    t0 = s1
 64140: 82 1b 70                 a4 = u64 [sp + 0x70]
 64143: 82 b8 10                 a1 = u64 [a4 + 0x10]
 64146: 01                       fallthrough
      :                          @4998
 64147: 82 b6 08                 s1 = u64 [a4 + 0x8]
 64150: 97 87 03                 a0 = a1 << 0x3
 64153: c8 67 07                 a0 = a0 + s1
 64156: 7b 75                    u64 [a0] = s0
 64158: 82 c7 10                 a0 = u64 [a5 + 0x10]
 64161: 95 88 01                 a1 = a1 + 0x1
 64164: 7b b8 10                 u64 [a4 + 0x10] = a1
 64167: 7b 17 80 00              u64 [sp + 0x80] = a0
 64171: ae 75 d6 01              jump @5029 if s0 >=u a0
      :                          @4999
 64175: 82 c7 08                 a0 = u64 [a5 + 0x8]
 64178: 7b 15 58                 u64 [sp + 0x58] = s0
 64181: 7b 17 78                 u64 [sp + 0x78] = a0
 64184: c8 57 07                 a0 = a0 + s0
 64187: 46 07 01                 u8 [a0 + 0] = 0x1
 64190: 82 17 50                 a0 = u64 [sp + 0x50]
 64193: 82 73 10                 t1 = u64 [a0 + 0x10]
 64196: 82 17 d0 00              a0 = u64 [sp + 0xd0]
 64200: 7b 17 28                 u64 [sp + 0x28] = a0
 64203: 51 03 ca 00              jump @5013 if t1 == 0
      :                          @5000
 64207: 82 17 58                 a0 = u64 [sp + 0x58]
 64210: ae 37 b4 01              jump @5034 if a0 >=u t1
      :                          @5001
 64214: 82 18 50                 a1 = u64 [sp + 0x50]
 64217: 82 85 08                 s0 = u64 [a1 + 0x8]
 64220: 33 06                    s1 = 0
 64222: 96 78 18                 a1 = a0 * 0x18
 64225: c8 85 07                 a0 = s0 + a1
 64228: 95 78 10                 a1 = a0 + 0x10
 64231: 7b 18 90 00              u64 [sp + 0x90] = a1
 64235: 95 77 08                 a0 = a0 + 0x8
 64238: 7b 17 88 00              u64 [sp + 0x88] = a0
 64242: 82 15 48                 s0 = u64 [sp + 0x48]
 64245: 7b 13 60                 u64 [sp + 0x60] = t1
 64248: 7b 12 10                 u64 [sp + 0x10] = t0
 64251: 28 50                    jump @5006
      :                          @5002
 64253: 82 17 28                 a0 = u64 [sp + 0x28]
 64256: 7b 17                    u64 [sp] = a0
 64258: 64 67                    a0 = s1
 64260: 82 18 50                 a1 = u64 [sp + 0x50]
 64263: 82 1b 70                 a4 = u64 [sp + 0x70]
 64266: 82 1c 38                 a5 = u64 [sp + 0x38]
 64269: 82 14 18                 t2 = u64 [sp + 0x18]
 64272: 50 20 58 03 f7 fe        ra = 856, jump @4993
      :                          @5003 [@dyn 428]
 64278: 82 1a 30                 a3 = u64 [sp + 0x30]
 64281: 82 19 40                 a2 = u64 [sp + 0x40]
 64284: 82 12 10                 t0 = u64 [sp + 0x10]
 64287: 82 1b 70                 a4 = u64 [sp + 0x70]
 64290: 82 10 98 00              ra = u64 [sp + 0x98]
 64294: 64 07                    a0 = ra
 64296: 82 18 20                 a1 = u64 [sp + 0x20]
 64299: ae 86 58 01              jump @5031 if s1 >=u a1
      :                          @5004
 64303: 82 18 68                 a1 = u64 [sp + 0x68]
 64306: 82 83                    t1 = u64 [a1]
 64308: 82 77                    a0 = u64 [a0]
 64310: e6 73 07                 a0 = minu(t1, a0)
 64313: 7b 87                    u64 [a1] = a0
 64315: 82 13 60                 t1 = u64 [sp + 0x60]
 64318: 01                       fallthrough
      :                          @5005
 64319: 95 66 01                 s1 = s1 + 0x1
 64322: 95 00 08                 ra = ra + 0x8
 64325: 95 55 10                 s0 = s0 + 0x10
 64328: aa 63 4d                 jump @5013 if t1 == s1
      :                          @5006
 64331: 82 17 90 00              a0 = u64 [sp + 0x90]
 64335: 82 78                    a1 = u64 [a0]
 64337: ae 86 2e 01              jump @5027 if s1 >=u a1
      :                          @5007
 64341: 82 17 88 00              a0 = u64 [sp + 0x88]
 64345: 82 77                    a0 = u64 [a0]
 64347: c8 67 07                 a0 = a0 + s1
 64350: 7c 77                    a0 = u8 [a0]
 64352: 51 07 df                 jump @5005 if a0 == 0
      :                          @5008
 64355: ae 26 1d 01              jump @5028 if s1 >=u t0
      :                          @5009
 64359: 7b 10 98 00              u64 [sp + 0x98] = ra
 64363: 82 57                    a0 = u64 [s0]
 64365: 51 07 90                 jump @5002 if a0 == 0
      :                          @5010
 64368: 82 17 80 00              a0 = u64 [sp + 0x80]
 64372: ae 76 0e 01              jump @5030 if s1 >=u a0
      :                          @5011
 64376: 82 17 78                 a0 = u64 [sp + 0x78]
 64379: c8 67 07                 a0 = a0 + s1
 64382: 7c 77                    a0 = u8 [a0]
 64384: 82 10 98 00              ra = u64 [sp + 0x98]
 64388: 51 07 bb                 jump @5005 if a0 == 0
      :                          @5012
 64391: 97 67 04                 a0 = s1 << 0x4
 64394: 82 18 48                 a1 = u64 [sp + 0x48]
 64397: c8 87 07                 a0 = a0 + a1
 64400: 95 77 08                 a0 = a0 + 0x8
 64403: 28 9c                    jump @5004
      :                          @5013
 64405: 82 18 08                 a1 = u64 [sp + 0x8]
 64408: 82 87                    a0 = u64 [a1]
 64410: 51 07 ed 00              jump @5035 if a0 == 0
      :                          @5014
 64414: 95 87 08                 a0 = a1 + 0x8
 64417: 82 18 68                 a1 = u64 [sp + 0x68]
 64420: 82 88                    a1 = u64 [a1]
 64422: 82 77                    a0 = u64 [a0]
 64424: ab 78 c5 00              jump @5026 if a1 != a0
      :                          @5015
 64428: 33 08                    a1 = 0
 64430: 49 21 a0 00              u64 [sp + 160] = 0
 64434: 33 07 08                 a0 = 0x8
 64437: 82 b6 10                 s1 = u64 [a4 + 0x10]
 64440: 82 b9 08                 a2 = u64 [a4 + 0x8]
 64443: 7b 17 a8 00              u64 [sp + 0xa8] = a0
 64447: 49 21 b0 00              u64 [sp + 176] = 0
 64451: 97 6a 03                 a3 = s1 << 0x3
 64454: c8 a9 09                 a2 = a2 + a3
 64457: 95 9a f8                 a3 = a2 + 0xfffffffffffffff8
 64460: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 64463: 33 0c ff                 a5 = 0xffffffffffffffff
 64466: 28 1d                    jump @5017
      :                          @5016
 64468: 97 89 03                 a2 = a1 << 0x3
 64471: c8 79 09                 a2 = a2 + a0
 64474: 7b 95                    u64 [a2] = s0
 64476: 95 88 01                 a1 = a1 + 0x1
 64479: 7b 18 b0 00              u64 [sp + 0xb0] = a1
 64483: 95 aa f8                 a3 = a3 + 0xfffffffffffffff8
 64486: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 64489: 82 19 58                 a2 = u64 [sp + 0x58]
 64492: aa 95 45                 jump @5022 if s0 == a2
      :                          @5017
 64495: aa c6 42                 jump @5022 if s1 == a5
      :                          @5018
 64498: 7b b6 10                 u64 [a4 + 0x10] = s1
 64501: 82 a5                    s0 = u64 [a3]
 64503: 82 19 80 00              a2 = u64 [sp + 0x80]
 64507: ae 95 86 00              jump @5029 if s0 >=u a2
      :                          @5019
 64511: 82 19 78                 a2 = u64 [sp + 0x78]
 64514: c8 59 09                 a2 = a2 + s0
 64517: 46 09                    u8 [a2 + 0] = 0
 64519: 82 19 a0 00              a2 = u64 [sp + 0xa0]
 64523: ab 98 c9                 jump @5016 if a1 != a2
      :                          @5020
 64526: 95 17 a0 00              a0 = sp + 0xa0
 64530: 7b 1a 98 00              u64 [sp + 0x98] = a3
 64534: 50 20 5a 03 2a 57 ff     ra = 858, jump @1581
      :                          @5021 [@dyn 429]
 64541: 33 0c ff                 a5 = 0xffffffffffffffff
 64544: 82 1a 98 00              a3 = u64 [sp + 0x98]
 64548: 82 1b 70                 a4 = u64 [sp + 0x70]
 64551: 82 18 b0 00              a1 = u64 [sp + 0xb0]
 64555: 82 17 a8 00              a0 = u64 [sp + 0xa8]
 64559: 28 a5                    jump @5016
      :                          @5022
 64561: 82 15 28                 s0 = u64 [sp + 0x28]
 64564: 82 58 10                 a1 = u64 [s0 + 0x10]
 64567: 82 57                    a0 = u64 [s0]
 64569: ab 78 10                 jump @5025 if a1 != a0
      :                          @5023
 64572: 64 57                    a0 = s0
 64574: 50 20 5c 03 82 57 ff     ra = 860, jump @1593
      :                          @5024 [@dyn 430]
 64581: 82 58 10                 a1 = u64 [s0 + 0x10]
 64584: 01                       fallthrough
      :                          @5025
 64585: 82 57 08                 a0 = u64 [s0 + 0x8]
 64588: 82 19 b0 00              a2 = u64 [sp + 0xb0]
 64592: 96 8a 18                 a3 = a1 * 0x18
 64595: c8 a7 07                 a0 = a0 + a3
 64598: 7b 79 10                 u64 [a0 + 0x10] = a2
 64601: 82 19 a8 00              a2 = u64 [sp + 0xa8]
 64605: 7b 79 08                 u64 [a0 + 0x8] = a2
 64608: 82 19 a0 00              a2 = u64 [sp + 0xa0]
 64612: 7b 79                    u64 [a0] = a2
 64614: 95 88 01                 a1 = a1 + 0x1
 64617: 7b 58 10                 u64 [s0 + 0x10] = a1
 64620: 01                       fallthrough
      :                          @5026
 64621: 82 10 c8 00              ra = u64 [sp + 0xc8]
 64625: 82 15 c0 00              s0 = u64 [sp + 0xc0]
 64629: 82 16 b8 00              s1 = u64 [sp + 0xb8]
 64633: 95 11 d0 00              sp = sp + 0xd0
 64637: 32 00                    ret
      :                          @5027
 64639: 00                       trap
      :                          @5028
 64640: 00                       trap
      :                          @5029
 64641: 00                       trap
      :                          @5030
 64642: 00                       trap
      :                          @5031
 64643: 00                       trap
      :                          @5032
 64644: 00                       trap
      :                          @5033
 64645: 00                       trap
      :                          @5034
 64646: 00                       trap
      :                          @5035
 64647: 00                       trap
      :                          @5036
 64648: 95 11 70 ff              sp = sp + 0xffffffffffffff70
 64652: 7b 10 88 00              u64 [sp + 0x88] = ra
 64656: 7b 15 80 00              u64 [sp + 0x80] = s0
 64660: 7b 16 78                 u64 [sp + 0x78] = s1
 64663: 82 7b 10                 a4 = u64 [a0 + 0x10]
 64666: 51 0b cc 01              jump @5072 if a4 == 0
      :                          @5037
 64670: 64 75                    s0 = a0
 64672: 82 77 08                 a0 = u64 [a0 + 0x8]
 64675: 82 76 10                 s1 = u64 [a0 + 0x10]
 64678: 97 69 04                 a2 = s1 << 0x4
 64681: 7b 19 08                 u64 [sp + 0x8] = a2
 64684: 51 06 2c 01              jump @5060 if s1 == 0
      :                          @5038
 64688: 7b 15 20                 u64 [sp + 0x20] = s0
 64691: 98 67 3b                 a0 = s1 >> 0x3b
 64694: 52 07 b2 01              jump @5074 if a0 != 0
      :                          @5039
 64698: 7b 1b 40                 u64 [sp + 0x40] = a4
 64701: 88 72 01                 t0 = a0 <u 0x1
 64704: 97 22 03                 t0 = t0 << 0x3
 64707: 33 04 c0 22 03           t2 = 0x322c0
 64712: 33 03 00 00 01           t1 = 0x10000
 64717: c8 34 00                 ra = t2 + t1
 64720: 01                       fallthrough
      :                          @5040
 64721: 82 0b                    a4 = u64 [ra]
 64723: c8 9b 0c                 a5 = a4 + a2
 64726: ac bc 91 01              jump @5073 if a5 <u a4
      :                          @5041
 64730: c8 2c 07                 a0 = a5 + t0
 64733: d8 c7 05                 s0 = a0 <u a5
 64736: d8 73 07                 a0 = t1 <u a0
 64739: d4 57 07                 a0 = a0 | s0
 64742: 52 07 81 01              jump @5073 if a0 != 0
      :                          @5042
 64746: c9 c4 05                 s0 = t2 - a5
 64749: c8 35 0a                 a3 = s0 + t1
 64752: 84 a5 07                 s0 = a3 & 0x7
 64755: c8 5c 0c                 a5 = a5 + s0
 64758: 01                       fallthrough
      :                          @5043
 64759: 82 07                    a0 = u64 [ra]
 64761: ab b7 d8                 jump @5040 if a0 != a4
      :                          @5044
 64764: 7b 0c                    u64 [ra] = a5
 64766: c9 5a 05                 s0 = a3 - s0
 64769: 64 57                    a0 = s0
 64771: 33 08                    a1 = 0
 64773: 50 20 5e 03 11 0f 02     ra = 862, jump @13687
      :                          @5045 [@dyn 431]
 64780: 33 03                    t1 = 0
 64782: 7b 16 48                 u64 [sp + 0x48] = s1
 64785: 7b 15                    u64 [sp] = s0
 64787: 7b 15 50                 u64 [sp + 0x50] = s0
 64790: 7b 16 58                 u64 [sp + 0x58] = s1
 64793: 33 07 01                 a0 = 0x1
 64796: 82 18 40                 a1 = u64 [sp + 0x40]
 64799: e4 78 07                 a0 = maxu(a1, a0)
 64802: 7b 17 18                 u64 [sp + 0x18] = a0
 64805: 33 05 c0 22 03           s0 = 0x322c0
 64810: 33 0c 00 00 01           a5 = 0x10000
 64815: 7b 15 10                 u64 [sp + 0x10] = s0
 64818: c8 c5 05                 s0 = s0 + a5
 64821: 33 0b                    a4 = 0
 64823: 33 02 01                 t0 = 0x1
 64826: 28 18                    jump @5048
      :                          @5046
 64828: 82 13 40                 t1 = u64 [sp + 0x40]
 64831: c8 73 03                 t1 = t1 + a0
 64834: 82 19 30                 a2 = u64 [sp + 0x30]
 64837: 82 17 18                 a0 = u64 [sp + 0x18]
 64840: aa 79 dc 00              jump @5063 if a2 == a0
      :                          @5047
 64844: 64 9b                    a4 = a2
 64846: 95 92 01                 t0 = a2 + 0x1
 64849: 01                       fallthrough
      :                          @5048
 64850: 82 58                    a1 = u64 [s0]
 64852: c8 68 07                 a0 = a1 + s1
 64855: ac 87 0e 01              jump @5071 if a0 <u a1
      :                          @5049
 64859: 95 79 01                 a2 = a0 + 0x1
 64862: 88 9a 01                 a3 = a2 <u 0x1
 64865: d8 9c 09                 a2 = a5 <u a2
 64868: d4 a9 09                 a2 = a2 | a3
 64871: 52 09 fe 00              jump @5071 if a2 != 0
      :                          @5050
 64875: 82 59                    a2 = u64 [s0]
 64877: ab 89 e5                 jump @5048 if a2 != a1
      :                          @5051
 64880: 7b 57                    u64 [s0] = a0
 64882: 7b 12 30                 u64 [sp + 0x30] = t0
 64885: 7b 13 40                 u64 [sp + 0x40] = t1
 64888: 82 18 10                 a1 = u64 [sp + 0x10]
 64891: c9 78 07                 a0 = a1 - a0
 64894: c8 c7 07                 a0 = a0 + a5
 64897: 7b 17 38                 u64 [sp + 0x38] = a0
 64900: 33 08                    a1 = 0
 64902: 64 69                    a2 = s1
 64904: 7b 1b 28                 u64 [sp + 0x28] = a4
 64907: 50 20 60 03 8b 0e 02     ra = 864, jump @13687
      :                          @5052 [@dyn 432]
 64914: 7b 16 60                 u64 [sp + 0x60] = s1
 64917: 82 17 38                 a0 = u64 [sp + 0x38]
 64920: 7b 17 68                 u64 [sp + 0x68] = a0
 64923: 7b 16 70                 u64 [sp + 0x70] = s1
 64926: 95 19 60                 a2 = sp + 0x60
 64929: 95 1a 48                 a3 = sp + 0x48
 64932: 82 17 28                 a0 = u64 [sp + 0x28]
 64935: 82 18 20                 a1 = u64 [sp + 0x20]
 64938: 50 20 62 03 bf 00        ra = 866, jump @5075
      :                          @5053 [@dyn 433]
 64944: 82 12 38                 t0 = u64 [sp + 0x38]
 64947: 33 0c 00 00 01           a5 = 0x10000
 64952: ac 6c 84                 jump @5046 if a5 <u s1
      :                          @5054
 64955: 82 58                    a1 = u64 [s0]
 64957: c9 85 09                 a2 = s0 - a1
 64960: ab 29 7c ff              jump @5046 if a2 != t0
      :                          @5055
 64964: c9 68 09                 a2 = a1 - s1
 64967: 01                       fallthrough
      :                          @5056
 64968: 82 5a                    a3 = u64 [s0]
 64970: ab 8a f1                 jump @5054 if a3 != a1
      :                          @5057
 64973: 7b 59                    u64 [s0] = a2
 64975: 33 0b                    a4 = 0
 64977: 01                       fallthrough
      :                          @5058
 64978: ab 8a e9                 jump @5054 if a3 != a1
      :                          @5059
 64981: 28 67 ff                 jump @5046
      :                          @5060
 64984: 33 03                    t1 = 0
 64986: 33 07                    a0 = 0
 64988: 49 11 48                 u64 [sp + 72] = 0
 64991: 49 01 08                 u64 [sp + 0] = 0x8
 64994: 49 11 50 08              u64 [sp + 80] = 0x8
 64998: 49 11 58                 u64 [sp + 88] = 0
 65001: 33 09 01                 a2 = 0x1
 65004: e4 9b 09                 a2 = maxu(a4, a2)
 65007: 7b 19 30                 u64 [sp + 0x30] = a2
 65010: 01                       fallthrough
      :                          @5061
 65011: 7b 13 40                 u64 [sp + 0x40] = t1
 65014: 95 79 01                 a2 = a0 + 0x1
 65017: 7b 19 38                 u64 [sp + 0x38] = a2
 65020: 49 11 60                 u64 [sp + 96] = 0
 65023: 49 11 68 01              u64 [sp + 104] = 0x1
 65027: 49 11 70                 u64 [sp + 112] = 0
 65030: 95 19 60                 a2 = sp + 0x60
 65033: 95 1a 48                 a3 = sp + 0x48
 65036: 64 58                    a1 = s0
 65038: 50 20 64 03 5b           ra = 868, jump @5075
      :                          @5062 [@dyn 434]
 65043: 82 13 40                 t1 = u64 [sp + 0x40]
 65046: c8 73 03                 t1 = t1 + a0
 65049: 82 1a 38                 a3 = u64 [sp + 0x38]
 65052: 64 a7                    a0 = a3
 65054: 82 19 30                 a2 = u64 [sp + 0x30]
 65057: ab a9 d2                 jump @5061 if a2 != a3
      :                          @5063
 65060: 82 12 08                 t0 = u64 [sp + 0x8]
 65063: 82 15                    s0 = u64 [sp]
 65065: 51 06 29                 jump @5070 if s1 == 0
      :                          @5064
 65068: 56 26 00 10 26           jump @5070 if s1 >u 4096
      :                          @5065
 65073: 33 07 c0 22 03           a0 = 0x322c0
 65078: 95 77 00 00 01           a0 = a0 + 0x10000
 65083: 01                       fallthrough
      :                          @5066
 65084: 82 78                    a1 = u64 [a0]
 65086: c9 87 09                 a2 = a0 - a1
 65089: ab 59 11                 jump @5070 if a2 != s0
      :                          @5067
 65092: c9 28 09                 a2 = a1 - t0
 65095: 01                       fallthrough
      :                          @5068
 65096: 82 7a                    a3 = u64 [a0]
 65098: ab 8a f2                 jump @5066 if a3 != a1
      :                          @5069
 65101: 7b 79                    u64 [a0] = a2
 65103: 33 0b                    a4 = 0
 65105: 01                       fallthrough
      :                          @5070
 65106: 64 37                    a0 = t1
 65108: 82 10 88 00              ra = u64 [sp + 0x88]
 65112: 82 15 80 00              s0 = u64 [sp + 0x80]
 65116: 82 16 78                 s1 = u64 [sp + 0x78]
 65119: 95 11 90 00              sp = sp + 0x90
 65123: 32 00                    ret
      :                          @5071
 65125: 00                       trap
      :                          @5072
 65126: 00                       trap
      :                          @5073
 65127: 00                       trap
      :                          @5074
 65128: 00                       trap
      :                          @5075
 65129: 95 11 88                 sp = sp + 0xffffffffffffff88
 65132: 7b 10 70                 u64 [sp + 0x70] = ra
 65135: 7b 15 68                 u64 [sp + 0x68] = s0
 65138: 7b 16 60                 u64 [sp + 0x60] = s1
 65141: 64 82                    t0 = a1
 65143: 82 88 10                 a1 = u64 [a1 + 0x10]
 65146: 7b 1a 50                 u64 [sp + 0x50] = a3
 65149: 7b 19 48                 u64 [sp + 0x48] = a2
 65152: 51 08 dd 00              jump @5094 if a1 == 0
      :                          @5076
 65156: 82 29 08                 a2 = u64 [t0 + 0x8]
 65159: 82 9a 10                 a3 = u64 [a2 + 0x10]
 65162: 51 0a bc 00              jump @5089 if a3 == 0
      :                          @5077
 65166: ae 87 d0 00              jump @5095 if a0 >=u a1
      :                          @5078
 65170: 33 05                    s0 = 0
 65172: 7b 17 08                 u64 [sp + 0x8] = a0
 65175: 96 78 18                 a1 = a0 * 0x18
 65178: c8 89 07                 a0 = a2 + a1
 65181: 95 7b 10                 a4 = a0 + 0x10
 65184: 82 19 48                 a2 = u64 [sp + 0x48]
 65187: 82 93 10                 t1 = u64 [a2 + 0x10]
 65190: 82 18 50                 a1 = u64 [sp + 0x50]
 65193: 82 86 08                 s1 = u64 [a1 + 0x8]
 65196: 82 94 08                 t2 = u64 [a2 + 0x8]
 65199: 82 88 10                 a1 = u64 [a1 + 0x10]
 65202: 7b 18 40                 u64 [sp + 0x40] = a1
 65205: 95 7c 08                 a5 = a0 + 0x8
 65208: 7b 16                    u64 [sp] = s1
 65210: 33 09 01                 a2 = 0x1
 65213: 7b 12 38                 u64 [sp + 0x38] = t0
 65216: 7b 1a 30                 u64 [sp + 0x30] = a3
 65219: 7b 13 28                 u64 [sp + 0x28] = t1
 65222: 7b 1b 20                 u64 [sp + 0x20] = a4
 65225: 7b 14 18                 u64 [sp + 0x18] = t2
 65228: 7b 1c 10                 u64 [sp + 0x10] = a5
 65231: 28 0e                    jump @5080
      :                          @5079
 65233: 95 55 01                 s0 = s0 + 0x1
 65236: d8 a5 09                 a2 = s0 <u a3
 65239: 95 66 10                 s1 = s1 + 0x10
 65242: aa 5a 6f                 jump @5090 if a3 == s0
      :                          @5080
 65245: 82 b8                    a1 = u64 [a4]
 65247: ae 85 7b                 jump @5091 if s0 >=u a1
      :                          @5081
 65250: 82 c7                    a0 = u64 [a5]
 65252: c8 57 07                 a0 = a0 + s0
 65255: 7c 77                    a0 = u8 [a0]
 65257: 51 07 e8                 jump @5079 if a0 == 0
      :                          @5082
 65260: ae 35 6f                 jump @5092 if s0 >=u t1
      :                          @5083
 65263: c8 54 07                 a0 = t2 + s0
 65266: 7c 78                    a1 = u8 [a0]
 65268: 52 08 dd                 jump @5079 if a1 != 0
      :                          @5084
 65271: 33 08 01                 a1 = 0x1
 65274: 78 78                    u8 [a0] = a1
 65276: 82 17 40                 a0 = u64 [sp + 0x40]
 65279: ae 75 5d                 jump @5093 if s0 >=u a0
      :                          @5085
 65282: 82 67                    a0 = u64 [s1]
 65284: 51 07 2f                 jump @5088 if a0 == 0
      :                          @5086
 65287: 82 67 08                 a0 = u64 [s1 + 0x8]
 65290: 64 28                    a1 = t0
 65292: 7b 19 58                 u64 [sp + 0x58] = a2
 65295: 82 19 48                 a2 = u64 [sp + 0x48]
 65298: 82 1a 50                 a3 = u64 [sp + 0x50]
 65301: 50 20 66 03 54 ff        ra = 870, jump @5075
      :                          @5087 [@dyn 435]
 65307: 82 1c 10                 a5 = u64 [sp + 0x10]
 65310: 82 14 18                 t2 = u64 [sp + 0x18]
 65313: 82 1b 20                 a4 = u64 [sp + 0x20]
 65316: 82 13 28                 t1 = u64 [sp + 0x28]
 65319: 82 19 58                 a2 = u64 [sp + 0x58]
 65322: 82 1a 30                 a3 = u64 [sp + 0x30]
 65325: 82 12 38                 t0 = u64 [sp + 0x38]
 65328: 51 07 a1                 jump @5079 if a0 == 0
      :                          @5088
 65331: 49 06 01                 u64 [s1 + 0] = 0x1
 65334: 97 55 04                 s0 = s0 << 0x4
 65337: 82 17                    a0 = u64 [sp]
 65339: c8 75 05                 s0 = s0 + a0
 65342: 82 17 08                 a0 = u64 [sp + 0x8]
 65345: 7b 57 08                 u64 [s0 + 0x8] = a0
 65348: 28 05                    jump @5090
      :                          @5089
 65350: 33 09                    a2 = 0
 65352: 01                       fallthrough
      :                          @5090
 65353: 84 97 01                 a0 = a2 & 0x1
 65356: 82 10 70                 ra = u64 [sp + 0x70]
 65359: 82 15 68                 s0 = u64 [sp + 0x68]
 65362: 82 16 60                 s1 = u64 [sp + 0x60]
 65365: 95 11 78                 sp = sp + 0x78
 65368: 32 00                    ret
      :                          @5091
 65370: 00                       trap
      :                          @5092
 65371: 00                       trap
      :                          @5093
 65372: 00                       trap
      :                          @5094
 65373: 00                       trap
      :                          @5095
 65374: 00                       trap
      :                          @5096
 65375: 95 11 48 ff              sp = sp + 0xffffffffffffff48
 65379: 7b 10 b0 00              u64 [sp + 0xb0] = ra
 65383: 7b 15 a8 00              u64 [sp + 0xa8] = s0
 65387: 49 21 a0 00 0a           u64 [sp + 160] = 0xa
 65392: 64 74                    t2 = a0
 65394: 82 78 10                 a1 = u64 [a0 + 0x10]
 65397: 51 08 98 04              jump @5192 if a1 == 0
      :                          @5097
 65401: 98 87 3c                 a0 = a1 >> 0x3c
 65404: 52 07 8a 05              jump @5233 if a0 != 0
      :                          @5098
 65408: 88 72 01                 t0 = a0 <u 0x1
 65411: 7b 18 38                 u64 [sp + 0x38] = a1
 65414: 97 87 03                 a0 = a1 << 0x3
 65417: 97 22 03                 t0 = t0 << 0x3
 65420: 33 00 c0 22 03           ra = 0x322c0
 65425: 33 03 00 00 01           t1 = 0x10000
 65430: c8 30 0a                 a3 = ra + t1
 65433: 01                       fallthrough
      :                          @5099
 65434: 82 ab                    a4 = u64 [a3]
 65436: c8 7b 0c                 a5 = a4 + a0
 65439: ac bc 62 05              jump @5228 if a5 <u a4
      :                          @5100
 65443: c8 2c 09                 a2 = a5 + t0
 65446: d8 c9 06                 s1 = a2 <u a5
 65449: d8 93 09                 a2 = t1 <u a2
 65452: d4 69 09                 a2 = a2 | s1
 65455: 52 09 52 05              jump @5228 if a2 != 0
      :                          @5101
 65459: c9 c0 06                 s1 = ra - a5
 65462: c8 36 06                 s1 = s1 + t1
 65465: 84 69 07                 a2 = s1 & 0x7
 65468: c8 9c 0c                 a5 = a5 + a2
 65471: 01                       fallthrough
      :                          @5102
 65472: 82 a8                    a1 = u64 [a3]
 65474: ab b8 d8                 jump @5099 if a1 != a4
      :                          @5103
 65477: 7b ac                    u64 [a3] = a5
 65479: 33 05                    s0 = 0
 65481: c9 96 06                 s1 = s1 - a2
 65484: 33 08                    a1 = 0
 65486: 64 6a                    a3 = s1
 65488: 82 1b 38                 a4 = u64 [sp + 0x38]
 65491: 01                       fallthrough
      :                          @5104
 65492: 95 89 01                 a2 = a1 + 0x1
 65495: 7b a8                    u64 [a3] = a1
 65497: 95 aa 08                 a3 = a3 + 0x8
 65500: 64 98                    a1 = a2
 65502: ab 9b f6                 jump @5104 if a4 != a2
      :                          @5105
 65505: 7b 16 20                 u64 [sp + 0x20] = s1
 65508: 7b 17 10                 u64 [sp + 0x10] = a0
 65511: 53 1b 02 2f 04           jump @5193 if a4 <u 2
      :                          @5106
 65516: 82 40 08                 ra = u64 [t2 + 0x8]
 65519: 95 07 10                 a0 = ra + 0x10
 65522: 7b 17 08                 u64 [sp + 0x8] = a0
 65525: 33 03 ff                 t1 = 0xffffffffffffffff
 65528: 33 07 c0 22 03           a0 = 0x322c0
 65533: 7b 17 30                 u64 [sp + 0x30] = a0
 65536: 95 77 00 00 01           a0 = a0 + 0x10000
 65541: 7b 17 40                 u64 [sp + 0x40] = a0
 65544: 7b 1b 70                 u64 [sp + 0x70] = a4
 65547: 7b 1b 68                 u64 [sp + 0x68] = a4
 65550: 64 b6                    s1 = a4
 65552: 7b 1b 78                 u64 [sp + 0x78] = a4
 65555: 7b 14 18                 u64 [sp + 0x18] = t2
 65558: 7b 10 28                 u64 [sp + 0x28] = ra
 65561: 28 0a                    jump @5108
      :                          @5107
 65563: 82 18 68                 a1 = u64 [sp + 0x68]
 65566: 54 18 01 cf 04           jump @5222 if a1 <=u 1
      :                          @5108
 65571: 64 65                    s0 = s1
 65573: 7b 16 98 00              u64 [sp + 0x98] = s1
 65577: 7b 13 48                 u64 [sp + 0x48] = t1
 65580: 51 06 bc 00              jump @5123 if s1 == 0
      :                          @5109
 65584: 57 05 d6 04              jump @5233 if s0 <s 0
      :                          @5110
 65588: 85 57 ff                 a0 = s0 ^ 0xffffffffffffffff
 65591: 98 77 3f                 a0 = a0 >> 0x3f
 65594: 33 0c 00 00 01           a5 = 0x10000
 65599: 82 16 40                 s1 = u64 [sp + 0x40]
 65602: 01                       fallthrough
      :                          @5111
 65603: 82 69                    a2 = u64 [s1]
 65605: c8 59 08                 a1 = a2 + s0
 65608: ac 98 ba 04              jump @5229 if a1 <u a2
      :                          @5112
 65612: c8 78 0a                 a3 = a1 + a0
 65615: d8 8a 0b                 a4 = a3 <u a1
 65618: d8 ac 0a                 a3 = a5 <u a3
 65621: d4 ba 0a                 a3 = a3 | a4
 65624: 52 0a aa 04              jump @5229 if a3 != 0
      :                          @5113
 65628: 82 6a                    a3 = u64 [s1]
 65630: ab 9a e5                 jump @5111 if a3 != a2
      :                          @5114
 65633: 7b 68                    u64 [s1] = a1
 65635: 33 0b                    a4 = 0
 65637: 82 16 30                 s1 = u64 [sp + 0x30]
 65640: c9 86 06                 s1 = s1 - a1
 65643: c8 c6 07                 a0 = s1 + a5
 65646: 7b 17 90 00              u64 [sp + 0x90] = a0
 65650: 33 08                    a1 = 0
 65652: 64 59                    a2 = s0
 65654: 50 20 68 03 a0 0b 02     ra = 872, jump @13687
      :                          @5115 [@dyn 436]
 65661: 98 57 3c                 a0 = s0 >> 0x3c
 65664: 52 07 86 04              jump @5233 if a0 != 0
      :                          @5116
 65668: 88 77 01                 a0 = a0 <u 0x1
 65671: 97 59 03                 a2 = s0 << 0x3
 65674: 97 72 03                 t0 = a0 << 0x3
 65677: 82 14 30                 t2 = u64 [sp + 0x30]
 65680: 33 03 00 00 01           t1 = 0x10000
 65685: 82 15 40                 s0 = u64 [sp + 0x40]
 65688: 01                       fallthrough
      :                          @5117
 65689: 82 58                    a1 = u64 [s0]
 65691: c8 98 0a                 a3 = a1 + a2
 65694: ac 8a 65 04              jump @5230 if a3 <u a1
      :                          @5118
 65698: c8 2a 0b                 a4 = a3 + t0
 65701: d8 ab 0c                 a5 = a4 <u a3
 65704: d8 b3 0b                 a4 = t1 <u a4
 65707: d4 cb 0b                 a4 = a4 | a5
 65710: 52 0b 55 04              jump @5230 if a4 != 0
      :                          @5119
 65714: c9 a4 0b                 a4 = t2 - a3
 65717: c8 3b 0b                 a4 = a4 + t1
 65720: 84 bc 07                 a5 = a4 & 0x7
 65723: c8 ca 0a                 a3 = a3 + a5
 65726: 01                       fallthrough
      :                          @5120
 65727: 82 57                    a0 = u64 [s0]
 65729: ab 87 d8                 jump @5117 if a0 != a1
      :                          @5121
 65732: 7b 5a                    u64 [s0] = a3
 65734: 33 06                    s1 = 0
 65736: c9 cb 07                 a0 = a4 - a5
 65739: 7b 17 88 00              u64 [sp + 0x88] = a0
 65743: 33 08                    a1 = 0
 65745: 50 20 6a 03 45 0b 02     ra = 874, jump @13687
      :                          @5122 [@dyn 437]
 65752: 82 14 18                 t2 = u64 [sp + 0x18]
 65755: 82 10 28                 ra = u64 [sp + 0x28]
 65758: 82 15 98 00              s0 = u64 [sp + 0x98]
 65762: 82 12 90 00              t0 = u64 [sp + 0x90]
 65766: 28 0b                    jump @5124
      :                          @5123
 65768: 49 21 88 00 08           u64 [sp + 136] = 0x8
 65773: 33 02 01                 t0 = 0x1
 65776: 01                       fallthrough
      :                          @5124
 65777: 49 21 80 00              u64 [sp + 128] = 0
 65781: 33 03                    t1 = 0
 65783: 82 18 68                 a1 = u64 [sp + 0x68]
 65786: 95 87 ff                 a0 = a1 + 0xffffffffffffffff
 65789: 7b 17 60                 u64 [sp + 0x60] = a0
 65792: 33 07 01                 a0 = 0x1
 65795: e4 78 0a                 a3 = maxu(a1, a0)
 65798: 7b 12 90 00              u64 [sp + 0x90] = t0
 65802: 28 06                    jump @5126
      :                          @5125
 65804: aa a3 8d 02              jump @5175 if t1 == a3
      :                          @5126
 65808: 33 09                    a2 = 0
 65810: 33 06                    s1 = 0
 65812: 64 32                    t0 = t1
 65814: 82 17 80 00              a0 = u64 [sp + 0x80]
 65818: 95 33 01                 t1 = t1 + 0x1
 65821: 82 1c 88 00              a5 = u64 [sp + 0x88]
 65825: 28 17                    jump @5129
      :                          @5127
 65827: 33 09 01                 a2 = 0x1
 65830: 7b 16 80 00              u64 [sp + 0x80] = s1
 65834: 01                       fallthrough
      :                          @5128
 65835: 95 66 01                 s1 = s1 + 0x1
 65838: 95 cc 08                 a5 = a5 + 0x8
 65841: 82 15 98 00              s0 = u64 [sp + 0x98]
 65845: aa 6a 39                 jump @5135 if a3 == s1
      :                          @5129
 65848: aa 65 6c 03              jump @5212 if s0 == s1
      :                          @5130
 65852: 82 1b 90 00              a4 = u64 [sp + 0x90]
 65856: c8 6b 0b                 a4 = a4 + s1
 65859: 7c bb                    a4 = u8 [a4]
 65861: 52 0b e6                 jump @5128 if a4 != 0
      :                          @5131
 65864: 52 19 01 db              jump @5127 if a2 != 1
      :                          @5132
 65868: 82 18 98 00              a1 = u64 [sp + 0x98]
 65872: 82 19 80 00              a2 = u64 [sp + 0x80]
 65876: ae 89 ac 03              jump @5227 if a2 >=u a1
      :                          @5133
 65880: 82 cb                    a4 = u64 [a5]
 65882: 97 99 03                 a2 = a2 << 0x3
 65885: 82 18 88 00              a1 = u64 [sp + 0x88]
 65889: c8 89 09                 a2 = a2 + a1
 65892: 82 95                    s0 = u64 [a2]
 65894: 33 09 01                 a2 = 0x1
 65897: ac b5 ba                 jump @5127 if s0 <u a4
      :                          @5134
 65900: 28 bf                    jump @5128
      :                          @5135
 65902: 51 09 96 03              jump @5231 if a2 == 0
      :                          @5136
 65906: 82 18 80 00              a1 = u64 [sp + 0x80]
 65910: ae 58 83 03              jump @5224 if a1 >=u s0
      :                          @5137
 65914: 82 1c 90 00              a5 = u64 [sp + 0x90]
 65918: 64 86                    s1 = a1
 65920: c8 8c 09                 a2 = a5 + a1
 65923: 46 09 01                 u8 [a2 + 0] = 0x1
 65926: 82 18 60                 a1 = u64 [sp + 0x60]
 65929: aa 82 78                 jump @5150 if t0 == a1
      :                          @5138
 65932: 64 a7                    a0 = a3
 65934: 64 58                    a1 = s0
 65936: 64 c9                    a2 = a5
 65938: 82 1b 78                 a4 = u64 [sp + 0x78]
 65941: 64 c2                    t0 = a5
 65943: ae b6 51                 jump @5146 if s1 >=u a4
      :                          @5139
 65946: 33 09                    a2 = 0
 65948: 33 07                    a0 = 0
 65950: 82 1b 80 00              a4 = u64 [sp + 0x80]
 65954: 96 b8 18                 a1 = a4 * 0x18
 65957: c8 08 08                 a1 = a1 + ra
 65960: 95 8b 10                 a4 = a1 + 0x10
 65963: 95 8c 08                 a5 = a1 + 0x8
 65966: 28 26                    jump @5142
      :                          @5140
 65968: 82 c8                    a1 = u64 [a5]
 65970: 82 16 88 00              s1 = u64 [sp + 0x88]
 65974: c8 96 06                 s1 = s1 + a2
 65977: 82 65                    s0 = u64 [s1]
 65979: c8 98 08                 a1 = a1 + a2
 65982: 82 88                    a1 = u64 [a1]
 65984: c8 58 08                 a1 = a1 + s0
 65987: 82 15 98 00              s0 = u64 [sp + 0x98]
 65991: 7b 68                    u64 [s1] = a1
 65993: 01                       fallthrough
      :                          @5141
 65994: 95 77 01                 a0 = a0 + 0x1
 65997: 95 99 08                 a2 = a2 + 0x8
 66000: aa 7a 3c ff              jump @5125 if a3 == a0
      :                          @5142
 66004: aa 75 d0 02              jump @5212 if s0 == a0
      :                          @5143
 66008: c8 72 08                 a1 = t0 + a0
 66011: 7c 88                    a1 = u8 [a1]
 66013: 52 08 ed                 jump @5141 if a1 != 0
      :                          @5144
 66016: 82 b8                    a1 = u64 [a4]
 66018: ac 87 ce                 jump @5140 if a0 <u a1
      :                          @5145
 66021: 28 23 03                 jump @5235
      :                          @5146
 66024: 51 08 bc 02              jump @5212 if a1 == 0
      :                          @5147
 66028: 7c 9b                    a4 = u8 [a2]
 66030: 51 0b 19 03              jump @5234 if a4 == 0
      :                          @5148
 66034: 95 99 01                 a2 = a2 + 0x1
 66037: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 66040: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 66043: 52 07 ed                 jump @5146 if a0 != 0
      :                          @5149
 66046: 28 0e ff                 jump @5125
      :                          @5150
 66049: 82 18 78                 a1 = u64 [sp + 0x78]
 66052: ae 87 04 03              jump @5235 if a0 >=u a1
      :                          @5151
 66056: 96 70 18                 ra = a0 * 0x18
 66059: 82 1b 28                 a4 = u64 [sp + 0x28]
 66062: c8 b0 00                 ra = ra + a4
 66065: 95 02 10                 t0 = ra + 0x10
 66068: 82 15 48                 s0 = u64 [sp + 0x48]
 66071: 82 19 80 00              a2 = u64 [sp + 0x80]
 66075: ae 89 e0 02              jump @5226 if a2 >=u a1
      :                          @5152
 66079: 97 9c 03                 a5 = a2 << 0x3
 66082: 82 18 88 00              a1 = u64 [sp + 0x88]
 66086: 7b 1c 58                 u64 [sp + 0x58] = a5
 66089: c8 c8 08                 a1 = a1 + a5
 66092: 82 88                    a1 = u64 [a1]
 66094: 33 0c                    a5 = 0
 66096: 64 96                    s1 = a2
 66098: 33 09                    a2 = 0
 66100: e6 85 05                 s0 = minu(s0, a1)
 66103: 7b 15 48                 u64 [sp + 0x48] = s0
 66106: 95 00 08                 ra = ra + 0x8
 66109: 96 68 18                 a1 = s1 * 0x18
 66112: c8 b8 08                 a1 = a1 + a4
 66115: 95 83 10                 t1 = a1 + 0x10
 66118: 7b 18 70                 u64 [sp + 0x70] = a1
 66121: 95 84 08                 t2 = a1 + 0x8
 66124: 82 1b 08                 a4 = u64 [sp + 0x8]
 66127: 01                       fallthrough
      :                          @5153
 66128: 82 28                    a1 = u64 [t0]
 66130: ae 89 ae 02              jump @5227 if a2 >=u a1
      :                          @5154
 66134: 82 38                    a1 = u64 [t1]
 66136: ae 89 a8 02              jump @5227 if a2 >=u a1
      :                          @5155
 66140: 82 08                    a1 = u64 [ra]
 66142: 82 45                    s0 = u64 [t2]
 66144: c8 c8 08                 a1 = a1 + a5
 66147: 82 86                    s1 = u64 [a1]
 66149: c8 c5 05                 s0 = s0 + a5
 66152: 82 55                    s0 = u64 [s0]
 66154: c8 65 05                 s0 = s0 + s1
 66157: 7b 85                    u64 [a1] = s0
 66159: 82 28                    a1 = u64 [t0]
 66161: ae 89 8f 02              jump @5227 if a2 >=u a1
      :                          @5156
 66165: 82 18 78                 a1 = u64 [sp + 0x78]
 66168: aa 98 82 02              jump @5225 if a1 == a2
      :                          @5157
 66172: 82 b8                    a1 = u64 [a4]
 66174: ae 87 8a 02              jump @5235 if a0 >=u a1
      :                          @5158
 66178: 82 08                    a1 = u64 [ra]
 66180: c8 c8 08                 a1 = a1 + a5
 66183: 82 b5 f8                 s0 = u64 [a4 + 0xfffffffffffffff8]
 66186: 82 88                    a1 = u64 [a1]
 66188: 95 99 01                 a2 = a2 + 0x1
 66191: 97 76 03                 s1 = a0 << 0x3
 66194: c8 65 05                 s0 = s0 + s1
 66197: 7b 58                    u64 [s0] = a1
 66199: 95 bb 18                 a4 = a4 + 0x18
 66202: 95 cc 08                 a5 = a5 + 0x8
 66205: 82 15 98 00              s0 = u64 [sp + 0x98]
 66209: ab 9a af                 jump @5153 if a3 != a2
      :                          @5159
 66212: 82 17 20                 a0 = u64 [sp + 0x20]
 66215: 82 18 58                 a1 = u64 [sp + 0x58]
 66218: c8 87 07                 a0 = a0 + a1
 66221: 95 78 08                 a1 = a0 + 0x8
 66224: 82 19 80 00              a2 = u64 [sp + 0x80]
 66228: 85 96 ff                 s1 = a2 ^ 0xffffffffffffffff
 66231: c8 65 09                 a2 = s0 + s1
 66234: 97 99 03                 a2 = a2 << 0x3
 66237: 50 20 6c 03 de 07 02     ra = 876, jump @13651
      :                          @5160 [@dyn 438]
 66244: 82 17 70                 a0 = u64 [sp + 0x70]
 66247: 82 78                    a1 = u64 [a0]
 66249: 7b 18 68                 u64 [sp + 0x68] = a1
 66252: 82 78 08                 a1 = u64 [a0 + 0x8]
 66255: 7b 18                    u64 [sp] = a1
 66257: 95 78 18                 a1 = a0 + 0x18
 66260: 7b 16 50                 u64 [sp + 0x50] = s1
 66263: 82 19 78                 a2 = u64 [sp + 0x78]
 66266: c8 96 06                 s1 = s1 + a2
 66269: 96 69 18                 a2 = s1 * 0x18
 66272: 50 20 6e 03 bb 07 02     ra = 878, jump @13651
      :                          @5161 [@dyn 439]
 66279: 82 18 68                 a1 = u64 [sp + 0x68]
 66282: 82 16                    s1 = u64 [sp]
 66284: 82 17 78                 a0 = u64 [sp + 0x78]
 66287: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 66290: 82 14 18                 t2 = u64 [sp + 0x18]
 66293: 7b 17 70                 u64 [sp + 0x70] = a0
 66296: 7b 47 10                 u64 [t2 + 0x10] = a0
 66299: 82 1c 40                 a5 = u64 [sp + 0x40]
 66302: 51 08 22                 jump @5168 if a1 == 0
      :                          @5162
 66305: 56 28 00 20 1f           jump @5168 if a1 >u 8192
      :                          @5163
 66310: 97 87 03                 a0 = a1 << 0x3
 66313: 01                       fallthrough
      :                          @5164
 66314: 82 c8                    a1 = u64 [a5]
 66316: c9 8c 09                 a2 = a5 - a1
 66319: ab 69 11                 jump @5168 if a2 != s1
      :                          @5165
 66322: c9 78 09                 a2 = a1 - a0
 66325: 01                       fallthrough
      :                          @5166
 66326: 82 ca                    a3 = u64 [a5]
 66328: ab 8a f2                 jump @5164 if a3 != a1
      :                          @5167
 66331: 7b c9                    u64 [a5] = a2
 66333: 33 0b                    a4 = 0
 66335: 01                       fallthrough
      :                          @5168
 66336: 95 56 ff                 s1 = s0 + 0xffffffffffffffff
 66339: 82 17 70                 a0 = u64 [sp + 0x70]
 66342: 51 07 7e                 jump @5177 if a0 == 0
      :                          @5169
 66345: 7b 16                    u64 [sp] = s1
 66347: 82 18 78                 a1 = u64 [sp + 0x78]
 66350: 96 87 18                 a0 = a1 * 0x18
 66353: 95 76 e8                 s1 = a0 + 0xffffffffffffffe8
 66356: 82 18 08                 a1 = u64 [sp + 0x8]
 66359: 01                       fallthrough
      :                          @5170
 66360: 82 8a                    a3 = u64 [a1]
 66362: 82 17 80 00              a0 = u64 [sp + 0x80]
 66366: ae a7 c7 01              jump @5232 if a0 >=u a3
      :                          @5171
 66370: 82 87 f8                 a0 = u64 [a1 + 0xfffffffffffffff8]
 66373: 82 19 58                 a2 = u64 [sp + 0x58]
 66376: c8 97 07                 a0 = a0 + a2
 66379: 7b 18 78                 u64 [sp + 0x78] = a1
 66382: 95 78 08                 a1 = a0 + 0x8
 66385: 82 19 50                 a2 = u64 [sp + 0x50]
 66388: c8 a9 09                 a2 = a2 + a3
 66391: 97 99 03                 a2 = a2 << 0x3
 66394: 7b 1a 68                 u64 [sp + 0x68] = a3
 66397: 50 20 70 03 3e 07 02     ra = 880, jump @13651
      :                          @5172 [@dyn 440]
 66404: 82 18 78                 a1 = u64 [sp + 0x78]
 66407: 82 17 68                 a0 = u64 [sp + 0x68]
 66410: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 66413: 7b 87                    u64 [a1] = a0
 66415: 95 66 e8                 s1 = s1 + 0xffffffffffffffe8
 66418: 95 88 18                 a1 = a1 + 0x18
 66421: 52 06 c3                 jump @5170 if s1 != 0
      :                          @5173
 66424: 82 17 70                 a0 = u64 [sp + 0x70]
 66427: 7b 17 78                 u64 [sp + 0x78] = a0
 66430: 82 17 60                 a0 = u64 [sp + 0x60]
 66433: 7b 17 68                 u64 [sp + 0x68] = a0
 66436: 82 14 18                 t2 = u64 [sp + 0x18]
 66439: 82 13 48                 t1 = u64 [sp + 0x48]
 66442: 82 10 28                 ra = u64 [sp + 0x28]
 66445: 82 12 90 00              t0 = u64 [sp + 0x90]
 66449: 82 16                    s1 = u64 [sp]
 66451: 52 05 2b                 jump @5178 if s0 != 0
      :                          @5174
 66454: 28 85 fc                 jump @5107
      :                          @5175
 66457: 64 56                    s1 = s0
 66459: 82 13 48                 t1 = u64 [sp + 0x48]
 66462: 52 05 20                 jump @5178 if s0 != 0
      :                          @5176
 66465: 28 7a fc                 jump @5107
      :                          @5177
 66468: 49 11 70                 u64 [sp + 112] = 0
 66471: 49 11 78                 u64 [sp + 120] = 0
 66474: 82 17 60                 a0 = u64 [sp + 0x60]
 66477: 7b 17 68                 u64 [sp + 0x68] = a0
 66480: 82 13 48                 t1 = u64 [sp + 0x48]
 66483: 82 10 28                 ra = u64 [sp + 0x28]
 66486: 82 12 90 00              t0 = u64 [sp + 0x90]
 66490: 51 05 61 fc              jump @5107 if s0 == 0
      :                          @5178
 66494: 54 25 00 20 11           jump @5181 if s0 <=u 8192
      :                          @5179
 66499: 82 1c 40                 a5 = u64 [sp + 0x40]
 66502: 54 35 00 00 01 2a        jump @5186 if s0 <=u 65536
      :                          @5180
 66508: 28 4f fc                 jump @5107
      :                          @5181
 66511: 97 57 03                 a0 = s0 << 0x3
 66514: 82 1c 40                 a5 = u64 [sp + 0x40]
 66517: 01                       fallthrough
      :                          @5182
 66518: 82 c8                    a1 = u64 [a5]
 66520: c9 8c 09                 a2 = a5 - a1
 66523: 82 1a 88 00              a3 = u64 [sp + 0x88]
 66527: ab a9 11                 jump @5186 if a2 != a3
      :                          @5183
 66530: c9 78 09                 a2 = a1 - a0
 66533: 01                       fallthrough
      :                          @5184
 66534: 82 ca                    a3 = u64 [a5]
 66536: ab 8a ee                 jump @5182 if a3 != a1
      :                          @5185
 66539: 7b c9                    u64 [a5] = a2
 66541: 33 0b                    a4 = 0
 66543: 01                       fallthrough
      :                          @5186
 66544: 82 c7                    a0 = u64 [a5]
 66546: c9 7c 08                 a1 = a5 - a0
 66549: ab 28 26 fc              jump @5107 if a1 != t0
      :                          @5187
 66553: c9 57 08                 a1 = a0 - s0
 66556: 01                       fallthrough
      :                          @5188
 66557: 82 c9                    a2 = u64 [a5]
 66559: ab 79 f1                 jump @5186 if a2 != a0
      :                          @5189
 66562: 7b c8                    u64 [a5] = a1
 66564: 33 0a                    a3 = 0
 66566: 01                       fallthrough
      :                          @5190
 66567: ab 79 e9                 jump @5186 if a2 != a0
      :                          @5191
 66570: 28 11 fc                 jump @5107
      :                          @5192
 66573: 82 40 08                 ra = u64 [t2 + 0x8]
 66576: 33 03 ff                 t1 = 0xffffffffffffffff
 66579: 28 96 00                 jump @5214
      :                          @5193
 66582: 49 11 70 01              u64 [sp + 112] = 0x1
 66586: 33 03 ff                 t1 = 0xffffffffffffffff
 66589: 01                       fallthrough
      :                          @5194
 66590: 33 07 c0 22 03           a0 = 0x322c0
 66595: 95 77 00 00 01           a0 = a0 + 0x10000
 66600: 82 1c 10                 a5 = u64 [sp + 0x10]
 66603: 82 16 20                 s1 = u64 [sp + 0x20]
 66606: 01                       fallthrough
      :                          @5195
 66607: 82 78                    a1 = u64 [a0]
 66609: c9 87 09                 a2 = a0 - a1
 66612: ab 69 15                 jump @5199 if a2 != s1
      :                          @5196
 66615: c9 c8 09                 a2 = a1 - a5
 66618: 01                       fallthrough
      :                          @5197
 66619: 82 7a                    a3 = u64 [a0]
 66621: ab 8a f2                 jump @5195 if a3 != a1
      :                          @5198
 66624: 7b 79                    u64 [a0] = a2
 66626: 33 0b                    a4 = 0
 66628: 82 40 08                 ra = u64 [t2 + 0x8]
 66631: 28 06                    jump @5200
      :                          @5199
 66633: 82 40 08                 ra = u64 [t2 + 0x8]
 66636: 01                       fallthrough
      :                          @5200
 66637: 82 17 70                 a0 = u64 [sp + 0x70]
 66640: 51 07 59                 jump @5214 if a0 == 0
      :                          @5201
 66643: 7b 13 48                 u64 [sp + 0x48] = t1
 66646: 33 07                    a0 = 0
 66648: 33 03 18                 t1 = 0x18
 66651: 33 09 c0 22 03           a2 = 0x322c0
 66656: 95 9a 00 00 01           a3 = a2 + 0x10000
 66661: 33 02 00 20              t0 = 0x2000
 66665: 28 0b                    jump @5203
      :                          @5202
 66667: 95 77 01                 a0 = a0 + 0x1
 66670: 82 18 70                 a1 = u64 [sp + 0x70]
 66673: aa 87 34                 jump @5213 if a0 == a1
      :                          @5203
 66676: ca 37 0b                 a4 = a0 * t1
 66679: c8 0b 0b                 a4 = a4 + ra
 66682: 82 bc                    a5 = u64 [a4]
 66684: 51 0c ef                 jump @5202 if a5 == 0
      :                          @5204
 66687: ac c2 ec                 jump @5202 if t0 <u a5
      :                          @5205
 66690: 82 bb 08                 a4 = u64 [a4 + 0x8]
 66693: 97 cc 03                 a5 = a5 << 0x3
 66696: 01                       fallthrough
      :                          @5206
 66697: 82 a6                    s1 = u64 [a3]
 66699: c9 6a 09                 a2 = a3 - s1
 66702: ab b9 dd                 jump @5202 if a2 != a4
      :                          @5207
 66705: c9 c6 09                 a2 = s1 - a5
 66708: 01                       fallthrough
      :                          @5208
 66709: 82 a5                    s0 = u64 [a3]
 66711: ab 65 f2                 jump @5206 if s0 != s1
      :                          @5209
 66714: 7b a9                    u64 [a3] = a2
 66716: 33 08                    a1 = 0
 66718: 01                       fallthrough
      :                          @5210
 66719: ab 65 ea                 jump @5206 if s0 != s1
      :                          @5211
 66722: 28 c9                    jump @5202
      :                          @5212
 66724: 00                       trap
      :                          @5213
 66725: 82 13 48                 t1 = u64 [sp + 0x48]
 66728: 01                       fallthrough
      :                          @5214
 66729: 82 47                    a0 = u64 [t2]
 66731: 51 07 2e                 jump @5221 if a0 == 0
      :                          @5215
 66734: 33 08 aa 0a              a1 = 0xaaa
 66738: ac 78 27                 jump @5221 if a1 <u a0
      :                          @5216
 66741: 96 77 e8                 a0 = a0 * 0xffffffffffffffe8
 66744: 33 08 c0 22 03           a1 = 0x322c0
 66749: 95 88 00 00 01           a1 = a1 + 0x10000
 66754: 01                       fallthrough
      :                          @5217
 66755: 82 89                    a2 = u64 [a1]
 66757: c9 98 0a                 a3 = a1 - a2
 66760: ab 0a 11                 jump @5221 if a3 != ra
      :                          @5218
 66763: c8 79 0a                 a3 = a2 + a0
 66766: 01                       fallthrough
      :                          @5219
 66767: 82 8b                    a4 = u64 [a1]
 66769: ab 9b f2                 jump @5217 if a4 != a2
      :                          @5220
 66772: 7b 8a                    u64 [a1] = a3
 66774: 33 0c                    a5 = 0
 66776: 01                       fallthrough
      :                          @5221
 66777: 64 37                    a0 = t1
 66779: 82 10 b0 00              ra = u64 [sp + 0xb0]
 66783: 82 15 a8 00              s0 = u64 [sp + 0xa8]
 66787: 82 16 a0 00              s1 = u64 [sp + 0xa0]
 66791: 95 11 b8 00              sp = sp + 0xb8
 66795: 32 00                    ret
      :                          @5222
 66797: 82 18 38                 a1 = u64 [sp + 0x38]
 66800: 54 28 00 20 2e ff        jump @5194 if a1 <=u 8192
      :                          @5223
 66806: 28 57 ff                 jump @5200
      :                          @5224
 66809: 00                       trap
      :                          @5225
 66810: 00                       trap
      :                          @5226
 66811: 82 27                    a0 = u64 [t0]
 66813: 51 07 0c                 jump @5236 if a0 == 0
      :                          @5227
 66816: 00                       trap
      :                          @5228
 66817: 00                       trap
      :                          @5229
 66818: 00                       trap
      :                          @5230
 66819: 00                       trap
      :                          @5231
 66820: 00                       trap
      :                          @5232
 66821: 00                       trap
      :                          @5233
 66822: 00                       trap
      :                          @5234
 66823: 00                       trap
      :                          @5235
 66824: 00                       trap
      :                          @5236
 66825: 00                       trap
      :                          @5237
 66826: 95 11 b0                 sp = sp + 0xffffffffffffffb0
 66829: 7b 10 48                 u64 [sp + 0x48] = ra
 66832: 7b 15 40                 u64 [sp + 0x40] = s0
 66835: 7b 16 38                 u64 [sp + 0x38] = s1
 66838: 82 72 10                 t0 = u64 [a0 + 0x10]
 66841: 51 02 8d 01              jump @5266 if t0 == 0
      :                          @5238
 66845: 98 29 3c                 a2 = t0 >> 0x3c
 66848: 52 09 4a 02              jump @5295 if a2 != 0
      :                          @5239
 66852: 7b 17 28                 u64 [sp + 0x28] = a0
 66855: 7b 18 30                 u64 [sp + 0x30] = a1
 66858: 88 90 01                 ra = a2 <u 0x1
 66861: 97 27 03                 a0 = t0 << 0x3
 66864: 97 00 03                 ra = ra << 0x3
 66867: 33 05 c0 22 03           s0 = 0x322c0
 66872: 33 08 00 00 01           a1 = 0x10000
 66877: c8 85 0c                 a5 = s0 + a1
 66880: 01                       fallthrough
      :                          @5240
 66881: 82 ca                    a3 = u64 [a5]
 66883: c8 7a 09                 a2 = a3 + a0
 66886: ac a9 23 02              jump @5294 if a2 <u a3
      :                          @5241
 66890: c8 09 0b                 a4 = a2 + ra
 66893: d8 9b 06                 s1 = a4 <u a2
 66896: d8 b8 0b                 a4 = a1 <u a4
 66899: d4 6b 0b                 a4 = a4 | s1
 66902: 52 0b 13 02              jump @5294 if a4 != 0
      :                          @5242
 66906: c9 95 0b                 a4 = s0 - a2
 66909: c8 8b 0b                 a4 = a4 + a1
 66912: 84 b6 07                 s1 = a4 & 0x7
 66915: c8 69 09                 a2 = a2 + s1
 66918: 01                       fallthrough
      :                          @5243
 66919: 82 c3                    t1 = u64 [a5]
 66921: ab a3 d8                 jump @5240 if t1 != a3
      :                          @5244
 66924: 7b c9                    u64 [a5] = a2
 66926: 33 04                    t2 = 0
 66928: c9 6b 06                 s1 = a4 - s1
 66931: 33 0a                    a3 = 0
 66933: 64 68                    a1 = s1
 66935: 01                       fallthrough
      :                          @5245
 66936: 95 ab 01                 a4 = a3 + 0x1
 66939: 7b 8a                    u64 [a1] = a3
 66941: 95 88 08                 a1 = a1 + 0x8
 66944: 64 ba                    a3 = a4
 66946: ab b2 f6                 jump @5245 if t0 != a4
      :                          @5246
 66949: 82 18 28                 a1 = u64 [sp + 0x28]
 66952: 82 85 08                 s0 = u64 [a1 + 0x8]
 66955: 82 1a 30                 a3 = u64 [sp + 0x30]
 66958: 82 a8 10                 a1 = u64 [a3 + 0x10]
 66961: 82 a4 08                 t2 = u64 [a3 + 0x8]
 66964: 95 2a ff                 a3 = t0 + 0xffffffffffffffff
 66967: 7b 1a                    u64 [sp] = a3
 66969: 51 0a 23 01              jump @5269 if a3 == 0
      :                          @5247
 66973: 7b 16 28                 u64 [sp + 0x28] = s1
 66976: 49 11 20                 u64 [sp + 32] = 0
 66979: 33 0c                    a5 = 0
 66981: 33 0a c0 22 03           a3 = 0x322c0
 66986: c8 7a 0a                 a3 = a3 + a0
 66989: 9a 9b f0 ff 00           a4 = 0xfff0 - a2
 66994: c8 ba 0a                 a3 = a3 + a4
 66997: 7b 1a 08                 u64 [sp + 0x8] = a3
 67000: 95 aa 08                 a3 = a3 + 0x8
 67003: 7b 1a 18                 u64 [sp + 0x18] = a3
 67006: 7b 15 10                 u64 [sp + 0x10] = s0
 67009: 28 15                    jump @5249
      :                          @5248
 67011: 82 1c 30                 a5 = u64 [sp + 0x30]
 67014: d8 2c 09                 a2 = a5 <u t0
 67017: 85 99 01                 a2 = a2 ^ 0x1
 67020: 7b 19 20                 u64 [sp + 0x20] = a2
 67023: 82 15 10                 s0 = u64 [sp + 0x10]
 67026: aa 2c 52 01              jump @5281 if a5 == t0
      :                          @5249
 67030: 33 06                    s1 = 0
 67032: 96 ca 18                 a3 = a5 * 0x18
 67035: c8 5a 0a                 a3 = a3 + s0
 67038: 82 a3 10                 t1 = u64 [a3 + 0x10]
 67041: 97 cb 03                 a4 = a5 << 0x3
 67044: 95 c9 01                 a2 = a5 + 0x1
 67047: 7b 19 30                 u64 [sp + 0x30] = a2
 67050: 95 a5 08                 s0 = a3 + 0x8
 67053: 82 10 28                 ra = u64 [sp + 0x28]
 67056: c8 b0 0a                 a3 = ra + a4
 67059: 01                       fallthrough
      :                          @5250
 67060: aa 62 cf                 jump @5248 if t0 == s1
      :                          @5251
 67063: aa 63 6f 01              jump @5291 if t1 == s1
      :                          @5252
 67067: 82 ab                    a4 = u64 [a3]
 67069: ae 8b 66 01              jump @5288 if a4 >=u a1
      :                          @5253
 67073: 82 0c                    a5 = u64 [ra]
 67075: 96 bb 18                 a4 = a4 * 0x18
 67078: c8 4b 0b                 a4 = a4 + t2
 67081: 82 b9 10                 a2 = u64 [a4 + 0x10]
 67084: ae 9c 5c 01              jump @5293 if a5 >=u a2
      :                          @5254
 67088: 82 59                    a2 = u64 [s0]
 67090: 82 bb 08                 a4 = u64 [a4 + 0x8]
 67093: c8 69 09                 a2 = a2 + s1
 67096: 7c 99                    a2 = u8 [a2]
 67098: c8 cb 0b                 a4 = a4 + a5
 67101: 7c bb                    a4 = u8 [a4]
 67103: 8e 99                    a2 = a2 >u 0
 67105: 8e bb                    a4 = a4 >u 0
 67107: 95 00 08                 ra = ra + 0x8
 67110: 95 66 01                 s1 = s1 + 0x1
 67113: aa b9 cb                 jump @5250 if a2 == a4
      :                          @5255
 67116: 33 0a 01                 a3 = 0x1
 67119: 82 15 18                 s0 = u64 [sp + 0x18]
 67122: 82 1b 08                 a4 = u64 [sp + 0x8]
 67125: 64 2c                    a5 = t0
 67127: 01                       fallthrough
      :                          @5256
 67128: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 67131: 51 0c 71                 jump @5267 if a5 == 0
      :                          @5257
 67134: 64 a0                    ra = a3
 67136: 64 59                    a2 = s0
 67138: 82 b3                    t1 = u64 [a4]
 67140: 82 b6 08                 s1 = u64 [a4 + 0x8]
 67143: 95 bb f8                 a4 = a4 + 0xfffffffffffffff8
 67146: 95 aa 01                 a3 = a3 + 0x1
 67149: 95 55 f8                 s0 = s0 + 0xfffffffffffffff8
 67152: ae 63 e8                 jump @5256 if t1 >=u s1
      :                          @5258
 67155: 82 15 18                 s0 = u64 [sp + 0x18]
 67158: 82 1a                    a3 = u64 [sp]
 67160: 01                       fallthrough
      :                          @5259
 67161: 82 56                    s1 = u64 [s0]
 67163: ac 63 0f                 jump @5262 if t1 <u s1
      :                          @5260
 67166: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 67169: 95 55 f8                 s0 = s0 + 0xfffffffffffffff8
 67172: ac 2a f5                 jump @5259 if a3 <u t0
      :                          @5261
 67175: 28 fd 00                 jump @5289
      :                          @5262
 67178: 49 11 20                 u64 [sp + 32] = 0
 67181: 49 11 30                 u64 [sp + 48] = 0
 67184: 7b b6 08                 u64 [a4 + 0x8] = s1
 67187: c9 c2 0a                 a3 = t0 - a5
 67190: 7b 53                    u64 [s0] = t1
 67192: 82 1c 30                 a5 = u64 [sp + 0x30]
 67195: 82 15 10                 s0 = u64 [sp + 0x10]
 67198: 53 1a 02 58 ff           jump @5249 if a3 <u 2
      :                          @5263
 67203: 98 06 01                 s1 = ra >> 0x1
 67206: 82 1a 18                 a3 = u64 [sp + 0x18]
 67209: 01                       fallthrough
      :                          @5264
 67210: 82 ab                    a4 = u64 [a3]
 67212: 82 9c                    a5 = u64 [a2]
 67214: 7b 9b                    u64 [a2] = a4
 67216: 7b ac                    u64 [a3] = a5
 67218: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 67221: 95 99 08                 a2 = a2 + 0x8
 67224: 95 aa f8                 a3 = a3 + 0xfffffffffffffff8
 67227: 52 06 ef                 jump @5264 if s1 != 0
      :                          @5265
 67230: 49 11 20                 u64 [sp + 32] = 0
 67233: 33 0c                    a5 = 0
 67235: 28 33 ff                 jump @5249
      :                          @5266
 67238: 33 05 01                 s0 = 0x1
 67241: 28 a9 00                 jump @5287
      :                          @5267
 67244: 33 08 00 20              a1 = 0x2000
 67248: 82 16 28                 s1 = u64 [sp + 0x28]
 67251: 82 15 20                 s0 = u64 [sp + 0x20]
 67254: ae 28 48                 jump @5274 if a1 >=u t0
      :                          @5268
 67257: 28 99 00                 jump @5287
      :                          @5269
 67260: 82 57 10                 a0 = u64 [s0 + 0x10]
 67263: 51 07 a6 00              jump @5290 if a0 == 0
      :                          @5270
 67267: 82 6b                    a4 = u64 [s1]
 67269: ae 8b 9e 00              jump @5288 if a4 >=u a1
      :                          @5271
 67273: 96 b7 18                 a0 = a4 * 0x18
 67276: c8 74 04                 t2 = t2 + a0
 67279: 82 49 10                 a2 = u64 [t2 + 0x10]
 67282: ae 9b 95 00              jump @5292 if a4 >=u a2
      :                          @5272
 67286: 82 57 08                 a0 = u64 [s0 + 0x8]
 67289: 82 48 08                 a1 = u64 [t2 + 0x8]
 67292: 7c 77                    a0 = u8 [a0]
 67294: c8 b8 08                 a1 = a1 + a4
 67297: 7c 88                    a1 = u8 [a1]
 67299: 8e 79                    a2 = a0 >u 0
 67301: 8e 88                    a1 = a1 >u 0
 67303: 33 05 01                 s0 = 0x1
 67306: 33 07 08                 a0 = 0x8
 67309: aa 89 44                 jump @5282 if a2 == a1
      :                          @5273
 67312: 33 05                    s0 = 0
 67314: 33 08 c0 22 03           a1 = 0x322c0
 67319: 95 88 00 00 01           a1 = a1 + 0x10000
 67324: 28 0d                    jump @5275
      :                          @5274
 67326: 33 08 c0 22 03           a1 = 0x322c0
 67331: 95 88 00 00 01           a1 = a1 + 0x10000
 67336: 01                       fallthrough
      :                          @5275
 67337: 82 89                    a2 = u64 [a1]
 67339: c9 98 0a                 a3 = a1 - a2
 67342: ab 6a 44                 jump @5287 if a3 != s1
      :                          @5276
 67345: c9 79 0a                 a3 = a2 - a0
 67348: 01                       fallthrough
      :                          @5277
 67349: 82 8b                    a4 = u64 [a1]
 67351: ab 9b f2                 jump @5275 if a4 != a2
      :                          @5278
 67354: 7b 8a                    u64 [a1] = a3
 67356: 33 0c                    a5 = 0
 67358: 01                       fallthrough
      :                          @5279
 67359: ab 9b ea                 jump @5275 if a4 != a2
      :                          @5280
 67362: 28 30                    jump @5287
      :                          @5281
 67364: 33 08 00 20              a1 = 0x2000
 67368: 82 16 28                 s1 = u64 [sp + 0x28]
 67371: 82 15 20                 s0 = u64 [sp + 0x20]
 67374: ac 28 24                 jump @5287 if a1 <u t0
      :                          @5282
 67377: 33 08 c0 22 03           a1 = 0x322c0
 67382: 95 88 00 00 01           a1 = a1 + 0x10000
 67387: 01                       fallthrough
      :                          @5283
 67388: 82 89                    a2 = u64 [a1]
 67390: c9 98 0a                 a3 = a1 - a2
 67393: ab 6a 11                 jump @5287 if a3 != s1
      :                          @5284
 67396: c9 79 0a                 a3 = a2 - a0
 67399: 01                       fallthrough
      :                          @5285
 67400: 82 8b                    a4 = u64 [a1]
 67402: ab 9b f2                 jump @5283 if a4 != a2
      :                          @5286
 67405: 7b 8a                    u64 [a1] = a3
 67407: 33 0c                    a5 = 0
 67409: 01                       fallthrough
      :                          @5287
 67410: 84 57 01                 a0 = s0 & 0x1
 67413: 82 10 48                 ra = u64 [sp + 0x48]
 67416: 82 15 40                 s0 = u64 [sp + 0x40]
 67419: 82 16 38                 s1 = u64 [sp + 0x38]
 67422: 95 11 50                 sp = sp + 0x50
 67425: 32 00                    ret
      :                          @5288
 67427: 00                       trap
      :                          @5289
 67428: 00                       trap
      :                          @5290
 67429: 00                       trap
      :                          @5291
 67430: 00                       trap
      :                          @5292
 67431: 00                       trap
      :                          @5293
 67432: 00                       trap
      :                          @5294
 67433: 00                       trap
      :                          @5295
 67434: 00                       trap
      :                          @5296
 67435: 95 11 b0                 sp = sp + 0xffffffffffffffb0
 67438: 7b 10 48                 u64 [sp + 0x48] = ra
 67441: 7b 15 40                 u64 [sp + 0x40] = s0
 67444: 49 11 38 04              u64 [sp + 56] = 0x4
 67448: 82 89                    a2 = u64 [a1]
 67450: 82 8a 10                 a3 = u64 [a1 + 0x10]
 67453: 82 8b 08                 a4 = u64 [a1 + 0x8]
 67456: 82 8c 18                 a5 = u64 [a1 + 0x18]
 67459: 7b 17 30                 u64 [sp + 0x30] = a0
 67462: 7b 19 20                 u64 [sp + 0x20] = a2
 67465: 7b 1a 18                 u64 [sp + 0x18] = a3
 67468: c9 9a 09                 a2 = a3 - a2
 67471: 9a 9a                    a3 = -a2
 67473: e3 a9 09                 a2 = maxs(a2, a3)
 67476: 7b 1b 28                 u64 [sp + 0x28] = a4
 67479: 7b 1c 10                 u64 [sp + 0x10] = a5
 67482: ab bc 07                 jump @5298 if a5 != a4
      :                          @5297
 67485: 64 9a                    a3 = a2
 67487: 28 15                    jump @5300
      :                          @5298
 67489: c9 bc 0a                 a3 = a5 - a4
 67492: 9a ab                    a4 = -a3
 67494: e3 ba 0b                 a4 = maxs(a3, a4)
 67497: 01                       fallthrough
      :                          @5299
 67498: 64 ba                    a3 = a4
 67500: cd b9 0b                 a4 = a2 %u a4
 67503: 64 a9                    a2 = a3
 67505: 52 0b f9                 jump @5299 if a4 != 0
      :                          @5300
 67508: 82 89 10                 a2 = u64 [a1 + 0x10]
 67511: 82 86 20                 s1 = u64 [a1 + 0x20]
 67514: 82 8b 18                 a4 = u64 [a1 + 0x18]
 67517: 82 8c 28                 a5 = u64 [a1 + 0x28]
 67520: c9 96 06                 s1 = s1 - a2
 67523: 9a 69                    a2 = -s1
 67525: e3 96 09                 a2 = maxs(s1, a2)
 67528: ab bc 07                 jump @5302 if a5 != a4
      :                          @5301
 67531: 64 9b                    a4 = a2
 67533: 28 15                    jump @5304
      :                          @5302
 67535: c9 bc 0c                 a5 = a5 - a4
 67538: 9a cb                    a4 = -a5
 67540: e3 bc 0c                 a5 = maxs(a5, a4)
 67543: 01                       fallthrough
      :                          @5303
 67544: 64 cb                    a4 = a5
 67546: cd c9 0c                 a5 = a2 %u a5
 67549: 64 b9                    a2 = a4
 67551: 52 0c f9                 jump @5303 if a5 != 0
      :                          @5304
 67554: 82 8c 20                 a5 = u64 [a1 + 0x20]
 67557: 82 85 30                 s0 = u64 [a1 + 0x30]
 67560: 82 89 28                 a2 = u64 [a1 + 0x28]
 67563: 82 86 38                 s1 = u64 [a1 + 0x38]
 67566: c9 c5 05                 s0 = s0 - a5
 67569: 9a 5c                    a5 = -s0
 67571: e3 c5 0c                 a5 = maxs(s0, a5)
 67574: ab 96 07                 jump @5306 if s1 != a2
      :                          @5305
 67577: 64 c4                    t2 = a5
 67579: 28 15                    jump @5308
      :                          @5306
 67581: c9 96 06                 s1 = s1 - a2
 67584: 9a 69                    a2 = -s1
 67586: e3 96 09                 a2 = maxs(s1, a2)
 67589: 01                       fallthrough
      :                          @5307
 67590: 64 94                    t2 = a2
 67592: cd 9c 09                 a2 = a5 %u a2
 67595: 64 4c                    a5 = t2
 67597: 52 09 f9                 jump @5307 if a2 != 0
      :                          @5308
 67600: 82 80 20                 ra = u64 [a1 + 0x20]
 67603: 82 87 28                 a0 = u64 [a1 + 0x28]
 67606: 7b 17                    u64 [sp] = a0
 67608: 82 87 30                 a0 = u64 [a1 + 0x30]
 67611: 7b 17 08                 u64 [sp + 0x8] = a0
 67614: 82 86 30                 s1 = u64 [a1 + 0x30]
 67617: 82 87                    a0 = u64 [a1]
 67619: 82 89 38                 a2 = u64 [a1 + 0x38]
 67622: 82 85 08                 s0 = u64 [a1 + 0x8]
 67625: 82 88 38                 a1 = u64 [a1 + 0x38]
 67628: c9 67 07                 a0 = a0 - s1
 67631: 9a 76                    s1 = -a0
 67633: e3 67 03                 t1 = maxs(a0, s1)
 67636: ab 95 07                 jump @5310 if s0 != a2
      :                          @5309
 67639: 64 32                    t0 = t1
 67641: 28 15                    jump @5312
      :                          @5310
 67643: c9 95 05                 s0 = s0 - a2
 67646: 9a 57                    a0 = -s0
 67648: e3 75 09                 a2 = maxs(s0, a0)
 67651: 01                       fallthrough
      :                          @5311
 67652: 64 92                    t0 = a2
 67654: cd 93 09                 a2 = t1 %u a2
 67657: 64 23                    t1 = t0
 67659: 52 09 f9                 jump @5311 if a2 != 0
      :                          @5312
 67662: c8 ab 03                 t1 = a4 + a3
 67665: 82 16 28                 s1 = u64 [sp + 0x28]
 67668: 82 15 18                 s0 = u64 [sp + 0x18]
 67671: ca 65 07                 a0 = s0 * s1
 67674: 82 1c 10                 a5 = u64 [sp + 0x10]
 67677: ca c0 09                 a2 = ra * a5
 67680: c8 97 07                 a0 = a0 + a2
 67683: ca 08 09                 a2 = a1 * ra
 67686: 82 1b 20                 a4 = u64 [sp + 0x20]
 67689: ca 8b 08                 a1 = a4 * a1
 67692: ca bc 0b                 a4 = a5 * a4
 67695: 82 1a                    a3 = u64 [sp]
 67697: ca 5a 0c                 a5 = a3 * s0
 67700: c8 cb 0b                 a4 = a4 + a5
 67703: c8 b9 09                 a2 = a2 + a4
 67706: 82 1c 08                 a5 = u64 [sp + 0x8]
 67709: ca ac 0b                 a4 = a5 * a3
 67712: c8 b8 08                 a1 = a1 + a4
 67715: c8 87 07                 a0 = a0 + a1
 67718: c9 79 09                 a2 = a2 - a0
 67721: c8 42 02                 t0 = t0 + t2
 67724: c8 32 0a                 a3 = t0 + t1
 67727: ca c6 07                 a0 = s1 * a5
 67730: c8 97 07                 a0 = a0 + a2
 67733: 9a 78                    a1 = -a0
 67735: e3 87 07                 a0 = maxs(a0, a1)
 67738: c9 a7 08                 a1 = a0 - a3
 67741: 95 88 02                 a1 = a1 + 0x2
 67744: 98 89 3f                 a2 = a1 >> 0x3f
 67747: c8 98 08                 a1 = a1 + a2
 67750: 82 19 30                 a2 = u64 [sp + 0x30]
 67753: 7b 97                    u64 [a2] = a0
 67755: 7b 9a 08                 u64 [a2 + 0x8] = a3
 67758: 99 88 01                 a1 = a1 >>a 0x1
 67761: 7b 98 10                 u64 [a2 + 0x10] = a1
 67764: 82 10 48                 ra = u64 [sp + 0x48]
 67767: 82 15 40                 s0 = u64 [sp + 0x40]
 67770: 82 16 38                 s1 = u64 [sp + 0x38]
 67773: 95 11 50                 sp = sp + 0x50
 67776: 32 00                    ret
      :                          @5313
 67778: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 67781: 7b 10 18                 u64 [sp + 0x18] = ra
 67784: 7b 15 10                 u64 [sp + 0x10] = s0
 67787: 7b 16 08                 u64 [sp + 0x8] = s1
 67790: 7b 17                    u64 [sp] = a0
 67792: 51 0a 72                 jump @5320 if a3 == 0
      :                          @5314
 67795: 64 92                    t0 = a2
 67797: 33 04                    t2 = 0
 67799: 95 9c 08                 a5 = a2 + 0x8
 67802: 9a a0                    ra = -a3
 67804: 14 03 00 00 00 00 00 00 00 80 t1 = 0x8000000000000000
 67814: 33 0b 01                 a4 = 0x1
 67817: 28 11                    jump @5316
      :                          @5315
 67819: 95 bb 01                 a4 = a4 + 0x1
 67822: c8 b0 07                 a0 = ra + a4
 67825: 95 cc 10                 a5 = a5 + 0x10
 67828: 33 09 01                 a2 = 0x1
 67831: aa 97 4e                 jump @5321 if a0 == a2
      :                          @5316
 67834: c8 b0 09                 a2 = ra + a4
 67837: 82 c5                    s0 = u64 [a5]
 67839: 64 ba                    a3 = a4
 67841: 93 9a                    a3 = 0 if a2 == 0
 67843: 97 a9 04                 a2 = a3 << 0x4
 67846: c8 29 09                 a2 = a2 + t0
 67849: 82 96 08                 s1 = u64 [a2 + 0x8]
 67852: d9 58 0a                 a3 = a1 <s s0
 67855: d9 68 07                 a0 = a1 <s s1
 67858: aa 7a d9                 jump @5315 if a3 == a0
      :                          @5317
 67861: aa 56 41                 jump @5322 if s1 == s0
      :                          @5318
 67864: 82 ca f8                 a3 = u64 [a5 + 0xfffffffffffffff8]
 67867: 82 97                    a0 = u64 [a2]
 67869: c9 58 09                 a2 = a1 - s0
 67872: c9 a7 07                 a0 = a0 - a3
 67875: ca 97 09                 a2 = a0 * a2
 67878: c9 56 06                 s1 = s1 - s0
 67881: d3 39 07                 a0 = a2 ^ t1
 67884: e1 67 07                 a0 = a0 | ~s1
 67887: 51 07 28                 jump @5323 if a0 == 0
      :                          @5319
 67890: cc 69 07                 a0 = a2 /s s1
 67893: c8 a7 07                 a0 = a0 + a3
 67896: 82 19                    a2 = u64 [sp]
 67898: d9 79 07                 a0 = a2 <s a0
 67901: d3 74 04                 t2 = t2 ^ a0
 67904: 28 ab                    jump @5315
      :                          @5320
 67906: 33 04                    t2 = 0
 67908: 01                       fallthrough
      :                          @5321
 67909: 84 47 01                 a0 = t2 & 0x1
 67912: 82 10 18                 ra = u64 [sp + 0x18]
 67915: 82 15 10                 s0 = u64 [sp + 0x10]
 67918: 82 16 08                 s1 = u64 [sp + 0x8]
 67921: 95 11 20                 sp = sp + 0x20
 67924: 32 00                    ret
      :                          @5322
 67926: 00                       trap
      :                          @5323
 67927: 00                       trap
      :                          @5324
 67928: 95 11 90                 sp = sp + 0xffffffffffffff90
 67931: 7b 10 68                 u64 [sp + 0x68] = ra
 67934: 7b 15 60                 u64 [sp + 0x60] = s0
 67937: 7b 16 58                 u64 [sp + 0x58] = s1
 67940: 7b 18 38                 u64 [sp + 0x38] = a1
 67943: 64 72                    t0 = a0
 67945: 7b 19 08                 u64 [sp + 0x8] = a2
 67948: 7b 17                    u64 [sp] = a0
 67950: 55 19 03 51              jump @5332 if a2 >=u 3
      :                          @5325
 67954: 51 09 6a 01              jump @5351 if a2 == 0
      :                          @5326
 67958: 97 99 04                 a2 = a2 << 0x4
 67961: 33 07 c0 22 03           a0 = 0x322c0
 67966: 33 03 c0 22 03           t1 = 0x322c0
 67971: 33 02 00 00 01           t0 = 0x10000
 67976: c8 23 0a                 a3 = t1 + t0
 67979: 01                       fallthrough
      :                          @5327
 67980: 82 ab                    a4 = u64 [a3]
 67982: c8 9b 0c                 a5 = a4 + a2
 67985: ac bc 79 01              jump @5357 if a5 <u a4
      :                          @5328
 67989: 95 c8 08                 a1 = a5 + 0x8
 67992: d8 c8 06                 s1 = a1 <u a5
 67995: d8 82 08                 a1 = t0 <u a1
 67998: d4 68 08                 a1 = a1 | s1
 68001: 52 08 69 01              jump @5357 if a1 != 0
      :                          @5329
 68005: c9 c3 06                 s1 = t1 - a5
 68008: c8 26 06                 s1 = s1 + t0
 68011: 84 68 07                 a1 = s1 & 0x7
 68014: c8 8c 0c                 a5 = a5 + a1
 68017: 01                       fallthrough
      :                          @5330
 68018: 82 a5                    s0 = u64 [a3]
 68020: ab b5 d8                 jump @5327 if s0 != a4
      :                          @5331
 68023: 7b ac                    u64 [a3] = a5
 68025: c9 86 06                 s1 = s1 - a1
 68028: 28 24 01                 jump @5352
      :                          @5332
 68031: 33 05                    s0 = 0
 68033: 82 18 38                 a1 = u64 [sp + 0x38]
 68036: 95 88 18                 a1 = a1 + 0x18
 68039: 33 06 01                 s1 = 0x1
 68042: 28 0e                    jump @5335
      :                          @5333
 68044: 64 75                    s0 = a0
 68046: 01                       fallthrough
      :                          @5334
 68047: 95 66 01                 s1 = s1 + 0x1
 68050: 95 88 10                 a1 = a1 + 0x10
 68053: aa 69 2d                 jump @5340 if a2 == s1
      :                          @5335
 68056: 64 57                    a0 = s0
 68058: ae 95 2f 01              jump @5356 if s0 >=u a2
      :                          @5336
 68062: 82 8b f8                 a4 = u64 [a1 + 0xfffffffffffffff8]
 68065: 97 7a 04                 a3 = a0 << 0x4
 68068: 82 1c 38                 a5 = u64 [sp + 0x38]
 68071: c8 ca 0a                 a3 = a3 + a5
 68074: 82 ac                    a5 = u64 [a3]
 68076: 64 65                    s0 = s1
 68078: ad cb e1                 jump @5334 if a4 <s a5
      :                          @5337
 68081: ab cb db                 jump @5333 if a4 != a5
      :                          @5338
 68084: 82 8b                    a4 = u64 [a1]
 68086: 82 aa 08                 a3 = u64 [a3 + 0x8]
 68089: 64 75                    s0 = a0
 68091: af ab d4                 jump @5334 if a4 >=s a3
      :                          @5339
 68094: 64 65                    s0 = s1
 68096: 28 cf                    jump @5334
      :                          @5340
 68098: 33 08                    a1 = 0
 68100: 49 11 40                 u64 [sp + 64] = 0
 68103: 49 11 18 08              u64 [sp + 24] = 0x8
 68107: 49 11 48 08              u64 [sp + 72] = 0x8
 68111: 49 11 50                 u64 [sp + 80] = 0
 68114: 82 17 38                 a0 = u64 [sp + 0x38]
 68117: 95 77 08                 a0 = a0 + 0x8
 68120: 7b 17 10                 u64 [sp + 0x10] = a0
 68123: 64 56                    s1 = s0
 68125: 01                       fallthrough
      :                          @5341
 68126: ae 96 ea 00              jump @5355 if s1 >=u a2
      :                          @5342
 68130: 7b 15 20                 u64 [sp + 0x20] = s0
 68133: 97 67 04                 a0 = s1 << 0x4
 68136: 82 1a 38                 a3 = u64 [sp + 0x38]
 68139: c8 a7 07                 a0 = a0 + a3
 68142: 82 7a                    a3 = u64 [a0]
 68144: 7b 1a 30                 u64 [sp + 0x30] = a3
 68147: 82 1a 40                 a3 = u64 [sp + 0x40]
 68150: 82 77 08                 a0 = u64 [a0 + 0x8]
 68153: 7b 17 28                 u64 [sp + 0x28] = a0
 68156: ab a8 18                 jump @5345 if a1 != a3
      :                          @5343
 68159: 95 17 40                 a0 = sp + 0x40
 68162: 50 20 72 03 00 4a ff     ra = 882, jump @1605
      :                          @5344 [@dyn 441]
 68169: 82 19 08                 a2 = u64 [sp + 0x8]
 68172: 82 18 50                 a1 = u64 [sp + 0x50]
 68175: 82 17 48                 a0 = u64 [sp + 0x48]
 68178: 28 06                    jump @5346
      :                          @5345
 68180: 82 17 18                 a0 = u64 [sp + 0x18]
 68183: 01                       fallthrough
      :                          @5346
 68184: 33 04                    t2 = 0
 68186: 97 8a 04                 a3 = a1 << 0x4
 68189: 7b 17 18                 u64 [sp + 0x18] = a0
 68192: c8 7a 0a                 a3 = a3 + a0
 68195: 82 17 30                 a0 = u64 [sp + 0x30]
 68198: 7b a7                    u64 [a3] = a0
 68200: 82 17 28                 a0 = u64 [sp + 0x28]
 68203: 7b a7 08                 u64 [a3 + 0x8] = a0
 68206: 95 88 01                 a1 = a1 + 0x1
 68209: 7b 18 50                 u64 [sp + 0x50] = a1
 68212: 95 66 01                 s1 = s1 + 0x1
 68215: cd 96 06                 s1 = s1 %u a2
 68218: 82 1a 10                 a3 = u64 [sp + 0x10]
 68221: 01                       fallthrough
      :                          @5347
 68222: ae 96 8a 00              jump @5355 if s1 >=u a2
      :                          @5348
 68226: 95 43 01                 t1 = t2 + 0x1
 68229: 97 6c 04                 a5 = s1 << 0x4
 68232: 82 17 38                 a0 = u64 [sp + 0x38]
 68235: c8 7c 0c                 a5 = a5 + a0
 68238: 82 c7                    a0 = u64 [a5]
 68240: 82 a5                    s0 = u64 [a3]
 68242: 82 cc 08                 a5 = u64 [a5 + 0x8]
 68245: 82 a2 f8                 t0 = u64 [a3 + 0xfffffffffffffff8]
 68248: 82 1b 30                 a4 = u64 [sp + 0x30]
 68251: c9 b7 07                 a0 = a0 - a4
 68254: 82 10 28                 ra = u64 [sp + 0x28]
 68257: c9 05 05                 s0 = s0 - ra
 68260: ca 75 07                 a0 = s0 * a0
 68263: c9 0c 0c                 a5 = a5 - ra
 68266: c9 2b 0b                 a4 = a4 - t0
 68269: ca cb 0b                 a4 = a4 * a5
 68272: c8 b7 07                 a0 = a0 + a4
 68275: 89 77                    a0 = a0 <s 0
 68277: db 74 06                 s1 = t2 if a0 != 0
 68280: 95 aa 10                 a3 = a3 + 0x10
 68283: 64 34                    t2 = t1
 68285: ab 39 c1                 jump @5347 if a2 != t1
      :                          @5349
 68288: 82 15 20                 s0 = u64 [sp + 0x20]
 68291: ab 56 5b ff              jump @5341 if s1 != s0
      :                          @5350
 68295: 82 17 50                 a0 = u64 [sp + 0x50]
 68298: 82 18 48                 a1 = u64 [sp + 0x48]
 68301: 82 19 40                 a2 = u64 [sp + 0x40]
 68304: 82 1a                    a3 = u64 [sp]
 68306: 7b a7 10                 u64 [a3 + 0x10] = a0
 68309: 7b a8 08                 u64 [a3 + 0x8] = a1
 68312: 7b a9                    u64 [a3] = a2
 68314: 28 20                    jump @5354
      :                          @5351
 68316: 33 06 08                 s1 = 0x8
 68319: 01                       fallthrough
      :                          @5352
 68320: 64 67                    a0 = s1
 68322: 82 18 38                 a1 = u64 [sp + 0x38]
 68325: 50 20 74 03 04 ff 01     ra = 884, jump @13633
      :                          @5353 [@dyn 442]
 68332: 82 17 08                 a0 = u64 [sp + 0x8]
 68335: 82 18                    a1 = u64 [sp]
 68337: 7b 87                    u64 [a1] = a0
 68339: 7b 86 08                 u64 [a1 + 0x8] = s1
 68342: 7b 87 10                 u64 [a1 + 0x10] = a0
 68345: 01                       fallthrough
      :                          @5354
 68346: 82 10 68                 ra = u64 [sp + 0x68]
 68349: 82 15 60                 s0 = u64 [sp + 0x60]
 68352: 82 16 58                 s1 = u64 [sp + 0x58]
 68355: 95 11 70                 sp = sp + 0x70
 68358: 32 00                    ret
      :                          @5355
 68360: 00                       trap
      :                          @5356
 68361: 00                       trap
      :                          @5357
 68362: 00                       trap
      :                          @5358
 68363: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 68366: 7b 10 20                 u64 [sp + 0x20] = ra
 68369: 7b 15 18                 u64 [sp + 0x18] = s0
 68372: 7b 16 10                 u64 [sp + 0x10] = s1
 68375: 98 85 01                 s0 = a1 >> 0x1
 68378: 7b 17                    u64 [sp] = a0
 68380: 51 05 53                 jump @5366 if s0 == 0
      :                          @5359
 68383: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 68386: 82 16                    s1 = u64 [sp]
 68388: 7b 18 08                 u64 [sp + 0x8] = a1
 68391: 01                       fallthrough
      :                          @5360
 68392: 64 67                    a0 = s1
 68394: 64 59                    a2 = s0
 68396: 82 1a 08                 a3 = u64 [sp + 0x8]
 68399: 50 20 76 03 4f           ra = 886, jump @5368
      :                          @5361 [@dyn 443]
 68404: 82 18 08                 a1 = u64 [sp + 0x8]
 68407: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 68410: 52 15 ff ee              jump @5360 if s0 != 4294967295
      :                          @5362
 68414: 97 87 03                 a0 = a1 << 0x3
 68417: c8 67 07                 a0 = a0 + s1
 68420: 95 76 f8                 s1 = a0 + 0xfffffffffffffff8
 68423: 64 85                    s0 = a1
 68425: 01                       fallthrough
      :                          @5363
 68426: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 68429: ae 85 30                 jump @5367 if s0 >=u a1
      :                          @5364
 68432: 82 6a                    a3 = u64 [s1]
 68434: 82 17                    a0 = u64 [sp]
 68436: 82 79                    a2 = u64 [a0]
 68438: 7b 7a                    u64 [a0] = a3
 68440: 7b 69                    u64 [s1] = a2
 68442: 33 09                    a2 = 0
 68444: 64 5a                    a3 = s0
 68446: 50 20 78 03 20           ra = 888, jump @5368
      :                          @5365 [@dyn 444]
 68451: 82 18 08                 a1 = u64 [sp + 0x8]
 68454: 95 66 f8                 s1 = s1 + 0xfffffffffffffff8
 68457: 33 07 01                 a0 = 0x1
 68460: ac 57 de                 jump @5363 if a0 <u s0
      :                          @5366
 68463: 82 10 20                 ra = u64 [sp + 0x20]
 68466: 82 15 18                 s0 = u64 [sp + 0x18]
 68469: 82 16 10                 s1 = u64 [sp + 0x10]
 68472: 95 11 28                 sp = sp + 0x28
 68475: 32 00                    ret
      :                          @5367
 68477: 00                       trap
      :                          @5368
 68478: 95 11 f0                 sp = sp + 0xfffffffffffffff0
 68481: 7b 15 08                 u64 [sp + 0x8] = s0
 68484: 7b 16                    u64 [sp] = s1
 68486: 97 94 01                 t2 = a2 << 0x1
 68489: 95 45 01                 s0 = t2 + 0x1
 68492: ae a5 65                 jump @5379 if s0 >=u a3
      :                          @5369
 68495: ae 89 6e                 jump @5382 if a2 >=u a1
      :                          @5370
 68498: ae 85 69                 jump @5380 if s0 >=u a1
      :                          @5371
 68501: 97 93 03                 t1 = a2 << 0x3
 68504: c8 73 03                 t1 = t1 + a0
 68507: 82 32                    t0 = u64 [t1]
 68509: 97 5c 03                 a5 = s0 << 0x3
 68512: c8 7c 0c                 a5 = a5 + a0
 68515: 82 cc                    a5 = u64 [a5]
 68517: d8 c2 0b                 a4 = t0 <u a5
 68520: 95 46 02                 s1 = t2 + 0x2
 68523: da b9 05                 s0 = a2 if a4 == 0
 68526: ae a6 24                 jump @5376 if s1 >=u a3
      :                          @5372
 68529: ae 85 4a                 jump @5380 if s0 >=u a1
      :                          @5373
 68532: ae 86 48                 jump @5381 if s1 >=u a1
      :                          @5374
 68535: 97 5b 03                 a4 = s0 << 0x3
 68538: c8 7b 0b                 a4 = a4 + a0
 68541: 82 bb                    a4 = u64 [a4]
 68543: 97 6c 03                 a5 = s1 << 0x3
 68546: c8 7c 0c                 a5 = a5 + a0
 68549: 82 cc                    a5 = u64 [a5]
 68551: d8 cb 0b                 a4 = a4 <u a5
 68554: da b5 06                 s1 = s0 if a4 == 0
 68557: ab 96 0a                 jump @5377 if s1 != a2
      :                          @5375
 68560: 28 21                    jump @5379
      :                          @5376
 68562: 64 56                    s1 = s0
 68564: aa 95 1d                 jump @5379 if s0 == a2
      :                          @5377
 68567: ae 86 25                 jump @5381 if s1 >=u a1
      :                          @5378
 68570: 97 69 03                 a2 = s1 << 0x3
 68573: c8 79 09                 a2 = a2 + a0
 68576: 82 9b                    a4 = u64 [a2]
 68578: 7b 3b                    u64 [t1] = a4
 68580: 97 64 01                 t2 = s1 << 0x1
 68583: 95 45 01                 s0 = t2 + 0x1
 68586: 7b 92                    u64 [a2] = t0
 68588: 64 69                    a2 = s1
 68590: ac a5 a1                 jump @5369 if s0 <u a3
      :                          @5379
 68593: 82 15 08                 s0 = u64 [sp + 0x8]
 68596: 82 16                    s1 = u64 [sp]
 68598: 95 11 10                 sp = sp + 0x10
 68601: 32 00                    ret
      :                          @5380
 68603: 00                       trap
      :                          @5381
 68604: 00                       trap
      :                          @5382
 68605: 00                       trap
      :                          @5383
 68606: 95 11 b0                 sp = sp + 0xffffffffffffffb0
 68609: 7b 10 48                 u64 [sp + 0x48] = ra
 68612: 7b 15 40                 u64 [sp + 0x40] = s0
 68615: 7b 16 38                 u64 [sp + 0x38] = s1
 68618: 64 92                    t0 = a2
 68620: 82 19 50                 a2 = u64 [sp + 0x50]
 68623: c9 72 00                 ra = t0 - a0
 68626: c9 8c 06                 s1 = a5 - a1
 68629: ca 06 03                 t1 = s1 * ra
 68632: c9 8a 06                 s1 = a3 - a1
 68635: c9 b7 05                 s0 = a0 - a4
 68638: ca 65 05                 s0 = s0 * s1
 68641: c8 53 03                 t1 = t1 + s0
 68644: 7b 13 30                 u64 [sp + 0x30] = t1
 68647: c9 89 05                 s0 = a2 - a1
 68650: ca 05 00                 ra = s0 * ra
 68653: c9 47 05                 s0 = a0 - t2
 68656: ca 65 05                 s0 = s0 * s1
 68659: c8 50 00                 ra = ra + s0
 68662: 7b 14 20                 u64 [sp + 0x20] = t2
 68665: c9 b4 06                 s1 = t2 - a4
 68668: 64 b4                    t2 = a4
 68670: 7b 18 18                 u64 [sp + 0x18] = a1
 68673: c9 c8 05                 s0 = a1 - a5
 68676: ca 56 05                 s0 = s1 * s0
 68679: 7b 19 28                 u64 [sp + 0x28] = a2
 68682: c9 c9 03                 t1 = a2 - a5
 68685: 64 78                    a1 = a0
 68687: c9 7b 0b                 a4 = a4 - a0
 68690: 82 17 30                 a0 = u64 [sp + 0x30]
 68693: ca b3 0b                 a4 = t1 * a4
 68696: c8 5b 09                 a2 = a4 + s0
 68699: 7b 1a 10                 u64 [sp + 0x10] = a3
 68702: c9 ca 0b                 a4 = a3 - a5
 68705: ca b6 0b                 a4 = s1 * a4
 68708: 7b 12 08                 u64 [sp + 0x8] = t0
 68711: c9 24 06                 s1 = t2 - t0
 68714: ca 63 06                 s1 = t1 * s1
 68717: 8f 7a                    a3 = a0 >s 0
 68719: 89 05                    s0 = ra <s 0
 68721: d2 5a 0a                 a3 = a3 & s0
 68724: c8 b6 03                 t1 = s1 + a4
 68727: 52 0a 0d                 jump @5385 if a3 != 0
      :                          @5384
 68730: 89 7a                    a3 = a0 <s 0
 68732: 8f 0b                    a4 = ra >s 0
 68734: d2 ba 0a                 a3 = a3 & a4
 68737: 51 0a 1e                 jump @5388 if a3 == 0
      :                          @5385
 68740: 8f 9a                    a3 = a2 >s 0
 68742: 89 3b                    a4 = t1 <s 0
 68744: d2 ba 0a                 a3 = a3 & a4
 68747: 33 02 01                 t0 = 0x1
 68750: 52 0a f0 00              jump @5397 if a3 != 0
      :                          @5386
 68754: 89 9a                    a3 = a2 <s 0
 68756: 8f 3b                    a4 = t1 >s 0
 68758: d2 ba 0a                 a3 = a3 & a4
 68761: 51 0a 7f                 jump @5392 if a3 == 0
      :                          @5387
 68764: 28 e2 00                 jump @5397
      :                          @5388
 68767: 52 07 3a                 jump @5390 if a0 != 0
      :                          @5389
 68770: 82 17 08                 a0 = u64 [sp + 0x8]
 68773: e5 78 0a                 a3 = mins(a1, a0)
 68776: d9 a4 0a                 a3 = t2 <s a3
 68779: 85 aa ff                 a3 = a3 ^ 0xffffffffffffffff
 68782: e3 78 0b                 a4 = maxs(a1, a0)
 68785: d9 4b 0b                 a4 = a4 <s t2
 68788: e0 ba 0a                 a3 = a3 & ~a4
 68791: 82 16 10                 s1 = u64 [sp + 0x10]
 68794: 82 17 18                 a0 = u64 [sp + 0x18]
 68797: e5 67 0b                 a4 = mins(a0, s1)
 68800: d9 bc 0b                 a4 = a5 <s a4
 68803: 85 bb 01                 a4 = a4 ^ 0x1
 68806: d2 ba 0a                 a3 = a3 & a4
 68809: e3 67 0b                 a4 = maxs(a0, s1)
 68812: d9 cb 0b                 a4 = a4 <s a5
 68815: e0 ba 0a                 a3 = a3 & ~a4
 68818: 33 02 01                 t0 = 0x1
 68821: 52 0a a9 00              jump @5397 if a3 != 0
      :                          @5390
 68825: 52 00 3f                 jump @5392 if ra != 0
      :                          @5391
 68828: 82 17 08                 a0 = u64 [sp + 0x8]
 68831: e5 78 0a                 a3 = mins(a1, a0)
 68834: 82 16 20                 s1 = u64 [sp + 0x20]
 68837: d9 a6 0a                 a3 = s1 <s a3
 68840: 85 aa ff                 a3 = a3 ^ 0xffffffffffffffff
 68843: e3 78 0b                 a4 = maxs(a1, a0)
 68846: d9 6b 0b                 a4 = a4 <s s1
 68849: e0 ba 0a                 a3 = a3 & ~a4
 68852: 82 16 10                 s1 = u64 [sp + 0x10]
 68855: 82 17 18                 a0 = u64 [sp + 0x18]
 68858: e5 67 0b                 a4 = mins(a0, s1)
 68861: 82 15 28                 s0 = u64 [sp + 0x28]
 68864: d9 b5 0b                 a4 = s0 <s a4
 68867: 85 bb 01                 a4 = a4 ^ 0x1
 68870: d2 ba 0a                 a3 = a3 & a4
 68873: e3 67 0b                 a4 = maxs(a0, s1)
 68876: d9 5b 0b                 a4 = a4 <s s0
 68879: e0 ba 0a                 a3 = a3 & ~a4
 68882: 33 02 01                 t0 = 0x1
 68885: 52 0a 69                 jump @5397 if a3 != 0
      :                          @5392
 68888: 52 09 39                 jump @5394 if a2 != 0
      :                          @5393
 68891: 82 1a 20                 a3 = u64 [sp + 0x20]
 68894: e5 a4 09                 a2 = mins(t2, a3)
 68897: d9 98 09                 a2 = a1 <s a2
 68900: 85 99 ff                 a2 = a2 ^ 0xffffffffffffffff
 68903: e3 a4 0a                 a3 = maxs(t2, a3)
 68906: d9 8a 07                 a0 = a3 <s a1
 68909: e0 79 07                 a0 = a2 & ~a0
 68912: 82 1a 28                 a3 = u64 [sp + 0x28]
 68915: e5 ac 09                 a2 = mins(a5, a3)
 68918: 82 18 18                 a1 = u64 [sp + 0x18]
 68921: d9 98 09                 a2 = a1 <s a2
 68924: 85 99 01                 a2 = a2 ^ 0x1
 68927: d2 97 07                 a0 = a0 & a2
 68930: e3 ac 09                 a2 = maxs(a5, a3)
 68933: d9 89 08                 a1 = a2 <s a1
 68936: e0 87 07                 a0 = a0 & ~a1
 68939: 33 02 01                 t0 = 0x1
 68942: 52 07 30                 jump @5397 if a0 != 0
      :                          @5394
 68945: 52 03 2a                 jump @5396 if t1 != 0
      :                          @5395
 68948: 82 18 20                 a1 = u64 [sp + 0x20]
 68951: e5 84 07                 a0 = mins(t2, a1)
 68954: 82 19 08                 a2 = u64 [sp + 0x8]
 68957: d9 79 07                 a0 = a2 <s a0
 68960: e3 84 08                 a1 = maxs(t2, a1)
 68963: d9 98 08                 a1 = a1 <s a2
 68966: d4 87 07                 a0 = a0 | a1
 68969: 82 1a 28                 a3 = u64 [sp + 0x28]
 68972: e5 ac 08                 a1 = mins(a5, a3)
 68975: 82 19 10                 a2 = u64 [sp + 0x10]
 68978: d9 89 08                 a1 = a2 <s a1
 68981: d4 87 07                 a0 = a0 | a1
 68984: 51 07 16                 jump @5398 if a0 == 0
      :                          @5396
 68987: 33 02                    t0 = 0
 68989: 01                       fallthrough
      :                          @5397
 68990: 64 27                    a0 = t0
 68992: 82 10 48                 ra = u64 [sp + 0x48]
 68995: 82 15 40                 s0 = u64 [sp + 0x40]
 68998: 82 16 38                 s1 = u64 [sp + 0x38]
 69001: 95 11 50                 sp = sp + 0x50
 69004: 32 00                    ret
      :                          @5398
 69006: e3 ac 07                 a0 = maxs(a5, a3)
 69009: d9 97 07                 a0 = a0 <s a2
 69012: 85 72 01                 t0 = a0 ^ 0x1
 69015: 28 e7                    jump @5397
      :                          @5399
 69017: 95 11 a0                 sp = sp + 0xffffffffffffffa0
 69020: 7b 10 58                 u64 [sp + 0x58] = ra
 69023: 7b 15 50                 u64 [sp + 0x50] = s0
 69026: 7b 16 48                 u64 [sp + 0x48] = s1
 69029: 7b 1b 28                 u64 [sp + 0x28] = a4
 69032: 51 08 d6 01              jump @5440 if a1 == 0
      :                          @5400
 69036: 64 80                    ra = a1
 69038: ae 8a d1 01              jump @5441 if a3 >=u a1
      :                          @5401
 69042: 96 ab 18                 a4 = a3 * 0x18
 69045: c8 7b 0b                 a4 = a4 + a0
 69048: 82 b8 10                 a1 = u64 [a4 + 0x10]
 69051: ae 89 c5 01              jump @5442 if a2 >=u a1
      :                          @5402
 69055: 82 b8 08                 a1 = u64 [a4 + 0x8]
 69058: c8 98 08                 a1 = a1 + a2
 69061: 7c 8b                    a4 = u8 [a1]
 69063: 7c 18 28                 a1 = u8 [sp + 0x28]
 69066: aa 8b a4 01              jump @5437 if a4 == a1
      :                          @5403
 69070: 7b 1b 10                 u64 [sp + 0x10] = a4
 69073: 7b 17 18                 u64 [sp + 0x18] = a0
 69076: 82 77 10                 a0 = u64 [a0 + 0x10]
 69079: 7b 17 20                 u64 [sp + 0x20] = a0
 69082: 33 03 c0 22 03           t1 = 0x322c0
 69087: 33 02 00 00 01           t0 = 0x10000
 69092: c8 23 04                 t2 = t1 + t0
 69095: 01                       fallthrough
      :                          @5404
 69096: 82 46                    s1 = u64 [t2]
 69098: 95 6c 10                 a5 = s1 + 0x10
 69101: ac 6c 94 01              jump @5443 if a5 <u s1
      :                          @5405
 69105: 95 c7 08                 a0 = a5 + 0x8
 69108: d8 c7 08                 a1 = a0 <u a5
 69111: d8 72 07                 a0 = t0 <u a0
 69114: d4 87 07                 a0 = a0 | a1
 69117: 52 07 84 01              jump @5443 if a0 != 0
      :                          @5406
 69121: c9 c3 07                 a0 = t1 - a5
 69124: c8 27 07                 a0 = a0 + t0
 69127: 84 78 07                 a1 = a0 & 0x7
 69130: c8 8c 0c                 a5 = a5 + a1
 69133: 01                       fallthrough
      :                          @5407
 69134: 82 45                    s0 = u64 [t2]
 69136: ab 65 d8                 jump @5404 if s0 != s1
      :                          @5408
 69139: 7b 4c                    u64 [t2] = a5
 69141: c9 87 07                 a0 = a0 - a1
 69144: 7b 79                    u64 [a0] = a2
 69146: 7b 7a 08                 u64 [a0 + 0x8] = a3
 69149: 33 0a 01                 a3 = 0x1
 69152: 7b 1a 30                 u64 [sp + 0x30] = a3
 69155: 7b 17 38                 u64 [sp + 0x38] = a0
 69158: 33 04 18                 t2 = 0x18
 69161: 7b 10 08                 u64 [sp + 0x8] = ra
 69164: 82 12 18                 t0 = u64 [sp + 0x18]
 69167: 82 13 10                 t1 = u64 [sp + 0x10]
 69170: 28 1d                    jump @5411
      :                          @5409
 69172: 82 17 38                 a0 = u64 [sp + 0x38]
 69175: 97 89 04                 a2 = a1 << 0x4
 69178: c8 79 09                 a2 = a2 + a0
 69181: 7b 96                    u64 [a2] = s1
 69183: 7b 95 08                 u64 [a2 + 0x8] = s0
 69186: 95 88 01                 a1 = a1 + 0x1
 69189: 7b 18 40                 u64 [sp + 0x40] = a1
 69192: 01                       fallthrough
      :                          @5410
 69193: 64 8a                    a3 = a1
 69195: 51 08 f1 00              jump @5430 if a1 == 0
      :                          @5411
 69199: 95 a8 ff                 a1 = a3 + 0xffffffffffffffff
 69202: 7b 18 40                 u64 [sp + 0x40] = a1
 69205: 97 8b 04                 a4 = a1 << 0x4
 69208: c8 b7 09                 a2 = a0 + a4
 69211: 82 95 08                 s0 = u64 [a2 + 0x8]
 69214: ae 05 1e 01              jump @5438 if s0 >=u ra
      :                          @5412
 69218: 82 96                    s1 = u64 [a2]
 69220: ca 45 0c                 a5 = s0 * t2
 69223: c8 2c 0c                 a5 = a5 + t0
 69226: 82 c9 10                 a2 = u64 [a5 + 0x10]
 69229: ae 96 10 01              jump @5439 if s1 >=u a2
      :                          @5413
 69233: 82 c9 08                 a2 = u64 [a5 + 0x8]
 69236: c8 69 09                 a2 = a2 + s1
 69239: 7c 9c                    a5 = u8 [a2]
 69241: ab 3c d0                 jump @5410 if a5 != t1
      :                          @5414
 69244: 82 1c 28                 a5 = u64 [sp + 0x28]
 69247: 78 9c                    u8 [a2] = a5
 69249: 51 06 14                 jump @5416 if s1 == 0
      :                          @5415
 69252: 95 68 ff                 a1 = s1 + 0xffffffffffffffff
 69255: c8 7b 0b                 a4 = a4 + a0
 69258: 7b b8                    u64 [a4] = a1
 69260: 7b b5 08                 u64 [a4 + 0x8] = s0
 69263: 7b 1a 40                 u64 [sp + 0x40] = a3
 69266: 64 a8                    a1 = a3
 69268: 01                       fallthrough
      :                          @5416
 69269: 95 6a 01                 a3 = s1 + 0x1
 69272: 82 19 20                 a2 = u64 [sp + 0x20]
 69275: ae 9a 3c                 jump @5421 if a3 >=u a2
      :                          @5417
 69278: 82 19 30                 a2 = u64 [sp + 0x30]
 69281: ab 98 24                 jump @5420 if a1 != a2
      :                          @5418
 69284: 95 17 30                 a0 = sp + 0x30
 69287: 7b 1a                    u64 [sp] = a3
 69289: 50 20 7a 03 99 45 ff     ra = 890, jump @1605
      :                          @5419 [@dyn 445]
 69296: 82 1a                    a3 = u64 [sp]
 69298: 33 04 18                 t2 = 0x18
 69301: 82 13 10                 t1 = u64 [sp + 0x10]
 69304: 82 12 18                 t0 = u64 [sp + 0x18]
 69307: 82 10 08                 ra = u64 [sp + 0x8]
 69310: 82 18 40                 a1 = u64 [sp + 0x40]
 69313: 82 17 38                 a0 = u64 [sp + 0x38]
 69316: 01                       fallthrough
      :                          @5420
 69317: 97 89 04                 a2 = a1 << 0x4
 69320: c8 79 09                 a2 = a2 + a0
 69323: 7b 9a                    u64 [a2] = a3
 69325: 7b 95 08                 u64 [a2 + 0x8] = s0
 69328: 95 88 01                 a1 = a1 + 0x1
 69331: 7b 18 40                 u64 [sp + 0x40] = a1
 69334: 01                       fallthrough
      :                          @5421
 69335: 51 05 3b                 jump @5426 if s0 == 0
      :                          @5422
 69338: 82 17 30                 a0 = u64 [sp + 0x30]
 69341: ab 78 1d                 jump @5425 if a1 != a0
      :                          @5423
 69344: 95 17 30                 a0 = sp + 0x30
 69347: 50 20 7c 03 5f 45 ff     ra = 892, jump @1605
      :                          @5424 [@dyn 446]
 69354: 33 04 18                 t2 = 0x18
 69357: 82 13 10                 t1 = u64 [sp + 0x10]
 69360: 82 12 18                 t0 = u64 [sp + 0x18]
 69363: 82 10 08                 ra = u64 [sp + 0x8]
 69366: 82 18 40                 a1 = u64 [sp + 0x40]
 69369: 01                       fallthrough
      :                          @5425
 69370: 82 17 38                 a0 = u64 [sp + 0x38]
 69373: 95 59 ff                 a2 = s0 + 0xffffffffffffffff
 69376: 97 8a 04                 a3 = a1 << 0x4
 69379: c8 7a 0a                 a3 = a3 + a0
 69382: 7b a6                    u64 [a3] = s1
 69384: 7b a9 08                 u64 [a3 + 0x8] = a2
 69387: 95 88 01                 a1 = a1 + 0x1
 69390: 7b 18 40                 u64 [sp + 0x40] = a1
 69393: 01                       fallthrough
      :                          @5426
 69394: 95 55 01                 s0 = s0 + 0x1
 69397: ae 05 34 ff              jump @5410 if s0 >=u ra
      :                          @5427
 69401: 82 17 30                 a0 = u64 [sp + 0x30]
 69404: ab 78 18 ff              jump @5409 if a1 != a0
      :                          @5428
 69408: 95 17 30                 a0 = sp + 0x30
 69411: 50 20 7e 03 1f 45 ff     ra = 894, jump @1605
      :                          @5429 [@dyn 447]
 69418: 33 04 18                 t2 = 0x18
 69421: 82 13 10                 t1 = u64 [sp + 0x10]
 69424: 82 12 18                 t0 = u64 [sp + 0x18]
 69427: 82 10 08                 ra = u64 [sp + 0x8]
 69430: 82 18 40                 a1 = u64 [sp + 0x40]
 69433: 28 fb fe                 jump @5409
      :                          @5430
 69436: 82 18 30                 a1 = u64 [sp + 0x30]
 69439: 51 08 2f                 jump @5437 if a1 == 0
      :                          @5431
 69442: 33 07 00 10              a0 = 0x1000
 69446: ac 87 28                 jump @5437 if a0 <u a1
      :                          @5432
 69449: 82 17 38                 a0 = u64 [sp + 0x38]
 69452: 97 88 04                 a1 = a1 << 0x4
 69455: 33 09 c0 22 03           a2 = 0x322c0
 69460: 95 99 00 00 01           a2 = a2 + 0x10000
 69465: 01                       fallthrough
      :                          @5433
 69466: 82 9a                    a3 = u64 [a2]
 69468: c9 a9 0b                 a4 = a2 - a3
 69471: ab 7b 0f                 jump @5437 if a4 != a0
      :                          @5434
 69474: c9 8a 0b                 a4 = a3 - a1
 69477: 01                       fallthrough
      :                          @5435
 69478: 82 9c                    a5 = u64 [a2]
 69480: ab ac f2                 jump @5433 if a5 != a3
      :                          @5436
 69483: 7b 9b                    u64 [a2] = a4
 69485: 01                       fallthrough
      :                          @5437
 69486: 82 10 58                 ra = u64 [sp + 0x58]
 69489: 82 15 50                 s0 = u64 [sp + 0x50]
 69492: 82 16 48                 s1 = u64 [sp + 0x48]
 69495: 95 11 60                 sp = sp + 0x60
 69498: 32 00                    ret
      :                          @5438
 69500: 00                       trap
      :                          @5439
 69501: 00                       trap
      :                          @5440
 69502: 00                       trap
      :                          @5441
 69503: 00                       trap
      :                          @5442
 69504: 00                       trap
      :                          @5443
 69505: 00                       trap
      :                          @5444
 69506: 82 9a                    a3 = u64 [a2]
 69508: 95 a6 14                 s1 = a3 + 0x14
 69511: ac a6 f0 03              jump @5509 if s1 <u a3
      :                          @5445
 69515: 95 6b 01                 a4 = s1 + 0x1
 69518: 88 bc 01                 a5 = a4 <u 0x1
 69521: d8 b8 0b                 a4 = a1 <u a4
 69524: d4 cb 0b                 a4 = a4 | a5
 69527: 52 0b e0 03              jump @5509 if a4 != 0
      :                          @5446
 69531: 82 9b                    a4 = u64 [a2]
 69533: ab ab e5                 jump @5444 if a4 != a3
      :                          @5447
 69536: 7b 96                    u64 [a2] = s1
 69538: 33 0c                    a5 = 0
 69540: 7b 17                    u64 [sp] = a0
 69542: 33 05 c0 22 03           s0 = 0x322c0
 69547: 7b 15 30                 u64 [sp + 0x30] = s0
 69550: 95 55 00 00 01           s0 = s0 + 0x10000
 69555: c9 65 05                 s0 = s0 - s1
 69558: 33 09 14                 a2 = 0x14
 69561: 33 06 14                 s1 = 0x14
 69564: 64 57                    a0 = s0
 69566: 33 08                    a1 = 0
 69568: 50 20 80 03 56 fc 01     ra = 896, jump @13687
      :                          @5448 [@dyn 448]
 69575: 7b 16 88 00              u64 [sp + 0x88] = s1
 69579: 7b 15 90 00              u64 [sp + 0x90] = s0
 69583: 7b 16 98 00              u64 [sp + 0x98] = s1
 69587: 95 17 70                 a0 = sp + 0x70
 69590: 95 18 88 00              a1 = sp + 0x88
 69594: 33 09 14                 a2 = 0x14
 69597: 50 20 82 03 a6 55 ff     ra = 898, jump @1907
      :                          @5449 [@dyn 449]
 69604: 33 02                    t0 = 0
 69606: 82 13 38                 t1 = u64 [sp + 0x38]
 69609: 82 39                    a2 = u64 [t1]
 69611: 82 3a 08                 a3 = u64 [t1 + 0x8]
 69614: 82 37 10                 a0 = u64 [t1 + 0x10]
 69617: 82 3b 18                 a4 = u64 [t1 + 0x18]
 69620: 82 18 80 00              a1 = u64 [sp + 0x80]
 69624: 7b 18 10                 u64 [sp + 0x10] = a1
 69627: 82 18 78                 a1 = u64 [sp + 0x78]
 69630: 7b 18 08                 u64 [sp + 0x8] = a1
 69633: 7b 19 20                 u64 [sp + 0x20] = a2
 69636: c9 97 07                 a0 = a0 - a2
 69639: 7b 17 28                 u64 [sp + 0x28] = a0
 69642: 7b 1a 50                 u64 [sp + 0x50] = a3
 69645: 7b 1b 48                 u64 [sp + 0x48] = a4
 69648: c9 ab 0b                 a4 = a4 - a3
 69651: 7b 1b 40                 u64 [sp + 0x40] = a4
 69654: 14 07 00 00 00 00 00 00 00 80 a0 = 0x8000000000000000
 69664: 7b 17 60                 u64 [sp + 0x60] = a0
 69667: 28 0d                    jump @5451
      :                          @5450
 69669: 95 22 01                 t0 = t0 + 0x1
 69672: 82 13 38                 t1 = u64 [sp + 0x38]
 69675: 51 12 14 24 03           jump @5506 if t0 == 20
      :                          @5451
 69680: 49 21 88 00              u64 [sp + 136] = 0
 69684: 49 21 90 00 08           u64 [sp + 144] = 0x8
 69689: 82 17 50                 a0 = u64 [sp + 0x50]
 69692: d9 72 08                 a1 = t0 <s a0
 69695: 82 17 48                 a0 = u64 [sp + 0x48]
 69698: d9 72 07                 a0 = t0 <s a0
 69701: e0 87 09                 a2 = a0 & ~a1
 69704: 49 21 98 00              u64 [sp + 152] = 0
 69708: 7b 12 58                 u64 [sp + 0x58] = t0
 69711: 52 09 0c                 jump @5453 if a2 != 0
      :                          @5452
 69714: 85 88 01                 a1 = a1 ^ 0x1
 69717: d4 87 07                 a0 = a0 | a1
 69720: 52 07 71                 jump @5460 if a0 != 0
      :                          @5453
 69723: 82 17 50                 a0 = u64 [sp + 0x50]
 69726: 82 18 48                 a1 = u64 [sp + 0x48]
 69729: aa 78 14 03              jump @5507 if a1 == a0
      :                          @5454
 69733: 82 17 50                 a0 = u64 [sp + 0x50]
 69736: c9 72 07                 a0 = t0 - a0
 69739: 82 18 28                 a1 = u64 [sp + 0x28]
 69742: ca 78 05                 s0 = a1 * a0
 69745: 82 17 60                 a0 = u64 [sp + 0x60]
 69748: d3 57 07                 a0 = a0 ^ s0
 69751: 82 18 40                 a1 = u64 [sp + 0x40]
 69754: e1 87 07                 a0 = a0 | ~a1
 69757: 51 07 f9 02              jump @5508 if a0 == 0
      :                          @5455
 69761: 82 17 88 00              a0 = u64 [sp + 0x88]
 69765: 51 07 0a                 jump @5457 if a0 == 0
      :                          @5456
 69768: 33 08                    a1 = 0
 69770: 33 07 08                 a0 = 0x8
 69773: 28 1f                    jump @5459
      :                          @5457
 69775: 95 17 88 00              a0 = sp + 0x88
 69779: 33 08                    a1 = 0
 69781: 64 36                    s1 = t1
 69783: 50 20 84 03 a9 42 ff     ra = 900, jump @1581
      :                          @5458 [@dyn 450]
 69790: 64 63                    t1 = s1
 69792: 82 12 58                 t0 = u64 [sp + 0x58]
 69795: 82 18 98 00              a1 = u64 [sp + 0x98]
 69799: 82 17 90 00              a0 = u64 [sp + 0x90]
 69803: 01                       fallthrough
      :                          @5459
 69804: 82 19 40                 a2 = u64 [sp + 0x40]
 69807: cc 95 09                 a2 = s0 /s a2
 69810: 82 1a 20                 a3 = u64 [sp + 0x20]
 69813: c8 a9 09                 a2 = a2 + a3
 69816: 97 8a 03                 a3 = a1 << 0x3
 69819: c8 7a 0a                 a3 = a3 + a0
 69822: 7b a9                    u64 [a3] = a2
 69824: 95 86 01                 s1 = a1 + 0x1
 69827: 7b 16 98 00              u64 [sp + 0x98] = s1
 69831: 28 08                    jump @5461
      :                          @5460
 69833: 33 06                    s1 = 0
 69835: 33 07 08                 a0 = 0x8
 69838: 01                       fallthrough
      :                          @5461
 69839: 82 38 18                 a1 = u64 [t1 + 0x18]
 69842: 82 35 28                 s0 = u64 [t1 + 0x28]
 69845: 82 34 10                 t2 = u64 [t1 + 0x10]
 69848: 82 39 20                 a2 = u64 [t1 + 0x20]
 69851: d9 82 0a                 a3 = t0 <s a1
 69854: d9 52 0b                 a4 = t0 <s s0
 69857: e0 ab 0c                 a5 = a4 & ~a3
 69860: 52 0c 0c                 jump @5463 if a5 != 0
      :                          @5462
 69863: 85 aa 01                 a3 = a3 ^ 0x1
 69866: d4 ba 0a                 a3 = a3 | a4
 69869: 52 0a 66                 jump @5469 if a3 != 0
      :                          @5463
 69872: aa 85 85 02              jump @5507 if s0 == a1
      :                          @5464
 69876: c9 82 0a                 a3 = t0 - a1
 69879: c9 49 09                 a2 = a2 - t2
 69882: ca a9 09                 a2 = a2 * a3
 69885: c9 85 05                 s0 = s0 - a1
 69888: 82 18 60                 a1 = u64 [sp + 0x60]
 69891: d3 98 08                 a1 = a1 ^ a2
 69894: e1 58 08                 a1 = a1 | ~s0
 69897: 51 08 6d 02              jump @5508 if a1 == 0
      :                          @5465
 69901: 82 18 88 00              a1 = u64 [sp + 0x88]
 69905: ab 86 2c                 jump @5468 if s1 != a1
      :                          @5466
 69908: 95 17 88 00              a0 = sp + 0x88
 69912: 64 68                    a1 = s1
 69914: 64 36                    s1 = t1
 69916: 7b 14 68                 u64 [sp + 0x68] = t2
 69919: 7b 19 18                 u64 [sp + 0x18] = a2
 69922: 50 20 86 03 1e 42 ff     ra = 902, jump @1581
      :                          @5467 [@dyn 451]
 69929: 82 19 18                 a2 = u64 [sp + 0x18]
 69932: 82 14 68                 t2 = u64 [sp + 0x68]
 69935: 64 63                    t1 = s1
 69937: 82 12 58                 t0 = u64 [sp + 0x58]
 69940: 82 16 98 00              s1 = u64 [sp + 0x98]
 69944: 82 17 90 00              a0 = u64 [sp + 0x90]
 69948: 01                       fallthrough
      :                          @5468
 69949: cc 59 08                 a1 = a2 /s s0
 69952: c8 48 08                 a1 = a1 + t2
 69955: 97 69 03                 a2 = s1 << 0x3
 69958: c8 79 09                 a2 = a2 + a0
 69961: 7b 98                    u64 [a2] = a1
 69963: 95 66 01                 s1 = s1 + 0x1
 69966: 7b 16 98 00              u64 [sp + 0x98] = s1
 69970: 01                       fallthrough
      :                          @5469
 69971: 82 38 28                 a1 = u64 [t1 + 0x28]
 69974: 82 35 38                 s0 = u64 [t1 + 0x38]
 69977: 82 34 20                 t2 = u64 [t1 + 0x20]
 69980: 82 39 30                 a2 = u64 [t1 + 0x30]
 69983: d9 82 0a                 a3 = t0 <s a1
 69986: d9 52 0b                 a4 = t0 <s s0
 69989: e0 ab 0c                 a5 = a4 & ~a3
 69992: 52 0c 0c                 jump @5471 if a5 != 0
      :                          @5470
 69995: 85 aa 01                 a3 = a3 ^ 0x1
 69998: d4 ba 0a                 a3 = a3 | a4
 70001: 52 0a 66                 jump @5477 if a3 != 0
      :                          @5471
 70004: aa 85 01 02              jump @5507 if s0 == a1
      :                          @5472
 70008: c9 82 0a                 a3 = t0 - a1
 70011: c9 49 09                 a2 = a2 - t2
 70014: ca a9 09                 a2 = a2 * a3
 70017: c9 85 05                 s0 = s0 - a1
 70020: 82 18 60                 a1 = u64 [sp + 0x60]
 70023: d3 98 08                 a1 = a1 ^ a2
 70026: e1 58 08                 a1 = a1 | ~s0
 70029: 51 08 e9 01              jump @5508 if a1 == 0
      :                          @5473
 70033: 82 18 88 00              a1 = u64 [sp + 0x88]
 70037: ab 86 2c                 jump @5476 if s1 != a1
      :                          @5474
 70040: 95 17 88 00              a0 = sp + 0x88
 70044: 64 68                    a1 = s1
 70046: 64 36                    s1 = t1
 70048: 7b 14 68                 u64 [sp + 0x68] = t2
 70051: 7b 19 18                 u64 [sp + 0x18] = a2
 70054: 50 20 88 03 9a 41 ff     ra = 904, jump @1581
      :                          @5475 [@dyn 452]
 70061: 82 19 18                 a2 = u64 [sp + 0x18]
 70064: 82 14 68                 t2 = u64 [sp + 0x68]
 70067: 64 63                    t1 = s1
 70069: 82 12 58                 t0 = u64 [sp + 0x58]
 70072: 82 16 98 00              s1 = u64 [sp + 0x98]
 70076: 82 17 90 00              a0 = u64 [sp + 0x90]
 70080: 01                       fallthrough
      :                          @5476
 70081: cc 59 08                 a1 = a2 /s s0
 70084: c8 48 08                 a1 = a1 + t2
 70087: 97 69 03                 a2 = s1 << 0x3
 70090: c8 79 09                 a2 = a2 + a0
 70093: 7b 98                    u64 [a2] = a1
 70095: 95 66 01                 s1 = s1 + 0x1
 70098: 7b 16 98 00              u64 [sp + 0x98] = s1
 70102: 01                       fallthrough
      :                          @5477
 70103: 82 38 38                 a1 = u64 [t1 + 0x38]
 70106: 82 35 08                 s0 = u64 [t1 + 0x8]
 70109: 82 34 30                 t2 = u64 [t1 + 0x30]
 70112: 82 39                    a2 = u64 [t1]
 70114: d9 82 0a                 a3 = t0 <s a1
 70117: d9 52 0b                 a4 = t0 <s s0
 70120: e0 ab 0c                 a5 = a4 & ~a3
 70123: 52 0c 0c                 jump @5479 if a5 != 0
      :                          @5478
 70126: 85 aa 01                 a3 = a3 ^ 0x1
 70129: d4 ba 0a                 a3 = a3 | a4
 70132: 52 0a 5d                 jump @5485 if a3 != 0
      :                          @5479
 70135: aa 85 7e 01              jump @5507 if s0 == a1
      :                          @5480
 70139: c9 82 0a                 a3 = t0 - a1
 70142: c9 49 09                 a2 = a2 - t2
 70145: ca a9 09                 a2 = a2 * a3
 70148: c9 85 05                 s0 = s0 - a1
 70151: 82 18 60                 a1 = u64 [sp + 0x60]
 70154: d3 98 08                 a1 = a1 ^ a2
 70157: e1 58 08                 a1 = a1 | ~s0
 70160: 51 08 66 01              jump @5508 if a1 == 0
      :                          @5481
 70164: 82 18 88 00              a1 = u64 [sp + 0x88]
 70168: ab 86 23                 jump @5484 if s1 != a1
      :                          @5482
 70171: 95 17 88 00              a0 = sp + 0x88
 70175: 64 68                    a1 = s1
 70177: 7b 14 68                 u64 [sp + 0x68] = t2
 70180: 64 96                    s1 = a2
 70182: 50 20 8a 03 1a 41 ff     ra = 906, jump @1581
      :                          @5483 [@dyn 453]
 70189: 64 69                    a2 = s1
 70191: 82 14 68                 t2 = u64 [sp + 0x68]
 70194: 82 16 98 00              s1 = u64 [sp + 0x98]
 70198: 82 17 90 00              a0 = u64 [sp + 0x90]
 70202: 01                       fallthrough
      :                          @5484
 70203: cc 59 08                 a1 = a2 /s s0
 70206: c8 48 08                 a1 = a1 + t2
 70209: 97 69 03                 a2 = s1 << 0x3
 70212: c8 97 07                 a0 = a0 + a2
 70215: 7b 78                    u64 [a0] = a1
 70217: 95 66 01                 s1 = s1 + 0x1
 70220: 7b 16 98 00              u64 [sp + 0x98] = s1
 70224: 01                       fallthrough
      :                          @5485
 70225: 82 17 90 00              a0 = u64 [sp + 0x90]
 70229: 68 68                    a1 = clz s1
 70231: 9a 8a 40                 a3 = 0x40 - a1
 70234: 7b 17 68                 u64 [sp + 0x68] = a0
 70237: 64 68                    a1 = s1
 70239: 33 09                    a2 = 0
 70241: 50 20 8c 03 18 20 ff     ra = 908, jump @1000
      :                          @5486 [@dyn 454]
 70248: 82 12 58                 t0 = u64 [sp + 0x58]
 70251: 33 03 01                 t1 = 0x1
 70254: 33 04 13                 t2 = 0x13
 70257: ae 63 a1 00              jump @5497 if t1 >=u s1
      :                          @5487
 70261: 64 60                    ra = s1
 70263: 82 17 10                 a0 = u64 [sp + 0x10]
 70266: ae 72 6c                 jump @5494 if t0 >=u a0
      :                          @5488
 70269: 33 09                    a2 = 0
 70271: 96 27 18                 a0 = t0 * 0x18
 70274: 82 18 08                 a1 = u64 [sp + 0x8]
 70277: c8 87 07                 a0 = a0 + a1
 70280: 95 7a 10                 a3 = a0 + 0x10
 70283: 95 7b 08                 a4 = a0 + 0x8
 70286: 33 07 01                 a0 = 0x1
 70289: 28 0b                    jump @5490
      :                          @5489
 70291: 95 99 02                 a2 = a2 + 0x2
 70294: 86 97 01                 a0 = a2 | 0x1
 70297: ae 07 79                 jump @5497 if a0 >=u ra
      :                          @5490
 70300: 97 98 03                 a1 = a2 << 0x3
 70303: 82 1c 68                 a5 = u64 [sp + 0x68]
 70306: c8 c8 08                 a1 = a1 + a5
 70309: 82 88                    a1 = u64 [a1]
 70311: 97 77 03                 a0 = a0 << 0x3
 70314: c8 c7 07                 a0 = a0 + a5
 70317: 82 7c                    a5 = u64 [a0]
 70319: 3e 02 00 00 03           u64 [0x30000] = t0
 70324: 8f 82                    t0 = a1 >s 0
 70326: 64 87                    a0 = a1
 70328: 93 27                    a0 = 0 if t0 == 0
 70330: 3a 02 00 00 03           t0 = u64 [0x30000]
 70335: e5 4c 0c                 a5 = mins(a5, t2)
 70338: ac 7c d1                 jump @5489 if a5 <u a0
      :                          @5491
 70341: 82 a8                    a1 = u64 [a3]
 70343: ae 87 b2 00              jump @5511 if a0 >=u a1
      :                          @5492
 70347: 82 b8                    a1 = u64 [a4]
 70349: d8 c7 05                 s0 = a0 <u a5
 70352: 85 56 01                 s1 = s0 ^ 0x1
 70355: c8 78 08                 a1 = a1 + a0
 70358: c8 57 07                 a0 = a0 + s0
 70361: d8 7c 05                 s0 = a5 <u a0
 70364: d4 65 05                 s0 = s0 | s1
 70367: 78 83                    u8 [a1] = t1
 70369: 51 05 e4                 jump @5491 if s0 == 0
      :                          @5493
 70372: 28 af                    jump @5489
      :                          @5494
 70374: 82 17 68                 a0 = u64 [sp + 0x68]
 70377: 95 77 08                 a0 = a0 + 0x8
 70380: 33 08 01                 a1 = 0x1
 70383: 01                       fallthrough
      :                          @5495
 70384: 82 79 f8                 a2 = u64 [a0 + 0xfffffffffffffff8]
 70387: 82 7a                    a3 = u64 [a0]
 70389: 3e 02 00 00 03           u64 [0x30000] = t0
 70394: 8f 92                    t0 = a2 >s 0
 70396: 93 29                    a2 = 0 if t0 == 0
 70398: 3a 02 00 00 03           t0 = u64 [0x30000]
 70403: e5 4a 0a                 a3 = mins(a3, t2)
 70406: ae 9a 72                 jump @5510 if a3 >=u a2
      :                          @5496
 70409: 95 88 02                 a1 = a1 + 0x2
 70412: 95 77 10                 a0 = a0 + 0x10
 70415: ac 08 e1                 jump @5495 if a1 <u ra
      :                          @5497
 70418: 82 17 88 00              a0 = u64 [sp + 0x88]
 70422: 82 16 30                 s1 = u64 [sp + 0x30]
 70425: 33 05 00 00 01           s0 = 0x10000
 70430: 51 07 07 fd              jump @5450 if a0 == 0
      :                          @5498
 70434: 56 27 00 20 03 fd        jump @5450 if a0 >u 8192
      :                          @5499
 70440: 97 77 03                 a0 = a0 << 0x3
 70443: 01                       fallthrough
      :                          @5500
 70444: c8 56 09                 a2 = s1 + s0
 70447: 82 98                    a1 = u64 [a2]
 70449: c9 89 0a                 a3 = a2 - a1
 70452: 82 1b 68                 a4 = u64 [sp + 0x68]
 70455: ab ba ee fc              jump @5450 if a3 != a4
      :                          @5501
 70459: c9 78 0a                 a3 = a1 - a0
 70462: 01                       fallthrough
      :                          @5502
 70463: 82 9b                    a4 = u64 [a2]
 70465: ab 8b eb                 jump @5500 if a4 != a1
      :                          @5503
 70468: 7b 9a                    u64 [a2] = a3
 70470: 33 0c                    a5 = 0
 70472: 01                       fallthrough
      :                          @5504
 70473: ab 8b e3                 jump @5500 if a4 != a1
      :                          @5505
 70476: 28 d9 fc                 jump @5450
      :                          @5506
 70479: 82 17 80 00              a0 = u64 [sp + 0x80]
 70483: 82 18 78                 a1 = u64 [sp + 0x78]
 70486: 82 19 70                 a2 = u64 [sp + 0x70]
 70489: 82 1a                    a3 = u64 [sp]
 70491: 7b a7 10                 u64 [a3 + 0x10] = a0
 70494: 7b a8 08                 u64 [a3 + 0x8] = a1
 70497: 7b a9                    u64 [a3] = a2
 70499: 82 10 b0 00              ra = u64 [sp + 0xb0]
 70503: 82 15 a8 00              s0 = u64 [sp + 0xa8]
 70507: 82 16 a0 00              s1 = u64 [sp + 0xa0]
 70511: 95 11 b8 00              sp = sp + 0xb8
 70515: 32 00                    ret
      :                          @5507
 70517: 00                       trap
      :                          @5508
 70518: 00                       trap
      :                          @5509
 70519: 00                       trap
      :                          @5510
 70520: 00                       trap
      :                          @5511
 70521: 00                       trap
      :                          @5512
 70522: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 70525: 7b 10 30                 u64 [sp + 0x30] = ra
 70528: 7b 15 28                 u64 [sp + 0x28] = s0
 70531: 7b 16 20                 u64 [sp + 0x20] = s1
 70534: 64 9c                    a5 = a2
 70536: 64 84                    t2 = a1
 70538: 89 88 10                 a1 = a1 <s 0x10
 70541: 85 88 01                 a1 = a1 ^ 0x1
 70544: 97 88 01                 a1 = a1 << 0x1
 70547: 89 99 10                 a2 = a2 <s 0x10
 70550: 85 99 01                 a2 = a2 ^ 0x1
 70553: 97 99 03                 a2 = a2 << 0x3
 70556: d4 98 00                 ra = a1 | a2
 70559: 89 a8 10                 a1 = a3 <s 0x10
 70562: 85 88 01                 a1 = a1 ^ 0x1
 70565: 97 88 01                 a1 = a1 << 0x1
 70568: 89 b9 10                 a2 = a4 <s 0x10
 70571: 85 99 01                 a2 = a2 ^ 0x1
 70574: 97 99 03                 a2 = a2 << 0x3
 70577: d4 98 02                 t0 = a1 | a2
 70580: d4 20 08                 a1 = ra | t0
 70583: 7b 17                    u64 [sp] = a0
 70585: 51 08 11 01              jump @5532 if a1 == 0
      :                          @5513
 70589: 88 08 01                 a1 = ra <u 0x1
 70592: 14 03 00 00 00 00 00 00 00 80 t1 = 0x8000000000000000
 70602: 7b 13 08                 u64 [sp + 0x8] = t1
 70605: 28 52                    jump @5516
      :                          @5514
 70607: c8 48 08                 a1 = a1 + t2
 70610: 89 87                    a0 = a1 <s 0
 70612: 89 8b 10                 a4 = a1 <s 0x10
 70615: 85 bb 01                 a4 = a4 ^ 0x1
 70618: 97 bb 01                 a4 = a4 << 0x1
 70621: 94 7b 01                 a4 = 0x1 if a0 != 0
 70624: 01                       fallthrough
      :                          @5515
 70625: 83 07                    i32 a0 = ra + 0
 70627: 83 66                    i32 s1 = s1 + 0
 70629: d3 67 07                 a0 = a0 ^ s1
 70632: 89 96                    s1 = a2 <s 0
 70634: 89 93 10                 t1 = a2 <s 0x10
 70637: 85 35 01                 s0 = t1 ^ 0x1
 70640: 97 55 03                 s0 = s0 << 0x3
 70643: 94 65 04                 s0 = 0x4 if s1 != 0
 70646: d4 5b 0b                 a4 = a4 | s0
 70649: db 7b 02                 t0 = a4 if a0 != 0
 70652: da 7b 00                 ra = a4 if a0 == 0
 70655: 82 1b 18                 a4 = u64 [sp + 0x18]
 70658: db 79 0b                 a4 = a2 if a0 != 0
 70661: 82 1c 10                 a5 = u64 [sp + 0x10]
 70664: da 79 0c                 a5 = a2 if a0 == 0
 70667: db 78 0a                 a3 = a1 if a0 != 0
 70670: da 78 04                 t2 = a1 if a0 == 0
 70673: 83 07                    i32 a0 = ra + 0
 70675: d4 20 08                 a1 = ra | t0
 70678: 83 89                    i32 a2 = a1 + 0
 70680: 88 78 01                 a1 = a0 <u 0x1
 70683: 51 09 af 00              jump @5532 if a2 == 0
      :                          @5516
 70687: d2 20 07                 a0 = ra & t0
 70690: 83 77                    i32 a0 = a0 + 0
 70692: 52 07 b9 00              jump @5533 if a0 != 0
      :                          @5517
 70696: 84 88 01                 a1 = a1 & 0x1
 70699: 64 26                    s1 = t0
 70701: da 80 06                 s1 = ra if a1 == 0
 70704: 84 67 08                 a0 = s1 & 0x8
 70707: c9 cb 05                 s0 = a4 - a5
 70710: 7b 1b 18                 u64 [sp + 0x18] = a4
 70713: 7b 1c 10                 u64 [sp + 0x10] = a5
 70716: 52 07 2c                 jump @5523 if a0 != 0
      :                          @5518
 70719: 84 67 04                 a0 = s1 & 0x4
 70722: 52 07 48                 jump @5526 if a0 != 0
      :                          @5519
 70725: 84 67 02                 a0 = s1 & 0x2
 70728: c9 4a 09                 a2 = a3 - t2
 70731: 52 07 5c                 jump @5529 if a0 != 0
      :                          @5520
 70734: aa 4a a4 00              jump @5535 if a3 == t2
      :                          @5521
 70738: ca 54 07                 a0 = t2 * s0
 70741: 82 18 08                 a1 = u64 [sp + 0x8]
 70744: d3 78 08                 a1 = a1 ^ a0
 70747: e1 98 08                 a1 = a1 | ~a2
 70750: 51 08 95 00              jump @5536 if a1 == 0
      :                          @5522
 70754: 33 08                    a1 = 0
 70756: 9a 77                    a0 = -a0
 70758: 28 59                    jump @5531
      :                          @5523
 70760: aa cb 8a 00              jump @5535 if a4 == a5
      :                          @5524
 70764: c9 4a 07                 a0 = a3 - t2
 70767: 9a c8 0f                 a1 = 0xf - a5
 70770: ca 87 07                 a0 = a0 * a1
 70773: 82 18 08                 a1 = u64 [sp + 0x8]
 70776: d3 78 08                 a1 = a1 ^ a0
 70779: e1 58 08                 a1 = a1 | ~s0
 70782: 51 08 75                 jump @5536 if a1 == 0
      :                          @5525
 70785: cc 57 08                 a1 = a0 /s s0
 70788: 33 09 0f                 a2 = 0xf
 70791: 28 48 ff                 jump @5514
      :                          @5526
 70794: aa cb 68                 jump @5535 if a4 == a5
      :                          @5527
 70797: c9 a4 07                 a0 = t2 - a3
 70800: ca c7 07                 a0 = a0 * a5
 70803: 82 18 08                 a1 = u64 [sp + 0x8]
 70806: d3 78 08                 a1 = a1 ^ a0
 70809: e1 58 08                 a1 = a1 | ~s0
 70812: 51 08 57                 jump @5536 if a1 == 0
      :                          @5528
 70815: 33 09                    a2 = 0
 70817: cc 57 08                 a1 = a0 /s s0
 70820: 28 2b ff                 jump @5514
      :                          @5529
 70823: aa 4a 4b                 jump @5535 if a3 == t2
      :                          @5530
 70826: 33 08 0f                 a1 = 0xf
 70829: c9 48 07                 a0 = a1 - t2
 70832: ca 57 07                 a0 = a0 * s0
 70835: 82 15 08                 s0 = u64 [sp + 0x8]
 70838: d3 75 05                 s0 = s0 ^ a0
 70841: e1 95 05                 s0 = s0 | ~a2
 70844: 51 05 37                 jump @5536 if s0 == 0
      :                          @5531
 70847: 33 0b                    a4 = 0
 70849: cc 97 09                 a2 = a0 /s a2
 70852: c8 c9 09                 a2 = a2 + a5
 70855: 28 1a ff                 jump @5515
      :                          @5532
 70858: 82 18                    a1 = u64 [sp]
 70860: 7b 84 08                 u64 [a1 + 0x8] = t2
 70863: 7b 8c 10                 u64 [a1 + 0x10] = a5
 70866: 7b 8a 18                 u64 [a1 + 0x18] = a3
 70869: 7b 8b 20                 u64 [a1 + 0x20] = a4
 70872: 33 07 01                 a0 = 0x1
 70875: 28 07                    jump @5534
      :                          @5533
 70877: 33 07                    a0 = 0
 70879: 82 18                    a1 = u64 [sp]
 70881: 01                       fallthrough
      :                          @5534
 70882: 7b 87                    u64 [a1] = a0
 70884: 82 10 30                 ra = u64 [sp + 0x30]
 70887: 82 15 28                 s0 = u64 [sp + 0x28]
 70890: 82 16 20                 s1 = u64 [sp + 0x20]
 70893: 95 11 38                 sp = sp + 0x38
 70896: 32 00                    ret
      :                          @5535
 70898: 00                       trap
      :                          @5536
 70899: 00                       trap
      :                          @5537
 70900: c9 a5 09                 a2 = s0 - a3
 70903: 97 99 01                 a2 = a2 << 0x1
 70906: 95 99 05                 a2 = a2 + 0x5
 70909: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 70912: 01                       fallthrough
      :                          @5538
 70913: c8 9c 0c                 a5 = a5 + a2
 70916: 95 55 01                 s0 = s0 + 0x1
 70919: 95 44 02                 t2 = t2 + 0x2
 70922: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 70925: 82 19 30                 a2 = u64 [sp + 0x30]
 70928: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 70931: 7b 19 30                 u64 [sp + 0x30] = a2
 70934: ad 5a 95 00              jump @5544 if a3 <s s0
      :                          @5539
 70938: 82 19 38                 a2 = u64 [sp + 0x38]
 70941: c9 89 09                 a2 = a2 - a1
 70944: ae 90 5a                 jump @5542 if ra >=u a2
      :                          @5540
 70947: c8 2a 09                 a2 = a3 + t0
 70950: 97 8b 04                 a4 = a1 << 0x4
 70953: c8 7b 0b                 a4 = a4 + a0
 70956: 7b b9 08                 u64 [a4 + 0x8] = a2
 70959: 7b b9 18                 u64 [a4 + 0x18] = a2
 70962: c8 53 09                 a2 = t1 + s0
 70965: 7b b9                    u64 [a4] = a2
 70967: 7b b9 20                 u64 [a4 + 0x20] = a2
 70970: c9 a2 09                 a2 = t0 - a3
 70973: 7b b9 28                 u64 [a4 + 0x28] = a2
 70976: 7b b9 38                 u64 [a4 + 0x38] = a2
 70979: c8 52 09                 a2 = t0 + s0
 70982: 7b b9 48                 u64 [a4 + 0x48] = a2
 70985: 7b b9 58                 u64 [a4 + 0x58] = a2
 70988: c8 3a 09                 a2 = a3 + t1
 70991: 7b b9 40                 u64 [a4 + 0x40] = a2
 70994: 7b b9 60                 u64 [a4 + 0x60] = a2
 70997: c9 a3 09                 a2 = t1 - a3
 71000: 7b b9 50                 u64 [a4 + 0x50] = a2
 71003: 7b b9 70                 u64 [a4 + 0x70] = a2
 71006: 82 19 30                 a2 = u64 [sp + 0x30]
 71009: 7b b9 10                 u64 [a4 + 0x10] = a2
 71012: 7b b9 30                 u64 [a4 + 0x30] = a2
 71015: 7b b6 68                 u64 [a4 + 0x68] = s1
 71018: 7b b6 78                 u64 [a4 + 0x78] = s1
 71021: 95 88 08                 a1 = a1 + 0x8
 71024: 7b 18 48                 u64 [sp + 0x48] = a1
 71027: 59 0c 81                 jump @5537 if a5 >=s 0
      :                          @5541
 71030: 64 49                    a2 = t2
 71032: 28 89                    jump @5538
      :                          @5542
 71034: 95 17 38                 a0 = sp + 0x38
 71037: 33 09 08                 a2 = 0x8
 71040: 7b 1a 28                 u64 [sp + 0x28] = a3
 71043: 7b 1c 20                 u64 [sp + 0x20] = a5
 71046: 7b 14 18                 u64 [sp + 0x18] = t2
 71049: 50 20 8e 03 b2 40 ff     ra = 910, jump @1653
      :                          @5543 [@dyn 455]
 71056: 33 00 07                 ra = 0x7
 71059: 82 14 18                 t2 = u64 [sp + 0x18]
 71062: 82 1c 20                 a5 = u64 [sp + 0x20]
 71065: 82 13 08                 t1 = u64 [sp + 0x8]
 71068: 82 12 10                 t0 = u64 [sp + 0x10]
 71071: 82 1a 28                 a3 = u64 [sp + 0x28]
 71074: 82 18 48                 a1 = u64 [sp + 0x48]
 71077: 82 17 40                 a0 = u64 [sp + 0x40]
 71080: 28 7b ff                 jump @5540
      :                          @5544
 71083: 82 17 48                 a0 = u64 [sp + 0x48]
 71086: 82 18 40                 a1 = u64 [sp + 0x40]
 71089: 82 19 38                 a2 = u64 [sp + 0x38]
 71092: 82 1a                    a3 = u64 [sp]
 71094: 7b a7 10                 u64 [a3 + 0x10] = a0
 71097: 7b a8 08                 u64 [a3 + 0x8] = a1
 71100: 7b a9                    u64 [a3] = a2
 71102: 82 10 60                 ra = u64 [sp + 0x60]
 71105: 82 15 58                 s0 = u64 [sp + 0x58]
 71108: 82 16 50                 s1 = u64 [sp + 0x50]
 71111: 95 11 68                 sp = sp + 0x68
 71114: 32 00                    ret
      :                          @5545
 71116: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 71119: 7b 10 38                 u64 [sp + 0x38] = ra
 71122: 7b 15 30                 u64 [sp + 0x30] = s0
 71125: 7b 16 28                 u64 [sp + 0x28] = s1
 71128: 64 89                    a2 = a1
 71130: 98 88 01                 a1 = a1 >> 0x1
 71133: 51 08 8f 01              jump @5577 if a1 == 0
      :                          @5546
 71137: 7b 19 20                 u64 [sp + 0x20] = a2
 71140: 64 75                    s0 = a0
 71142: 64 86                    s1 = a1
 71144: 50 20 90 03 e4           ra = 912, jump @5545
      :                          @5547 [@dyn 456]
 71149: 82 17 20                 a0 = u64 [sp + 0x20]
 71152: c9 67 08                 a1 = a0 - s1
 71155: 7b 16 08                 u64 [sp + 0x8] = s1
 71158: 97 67 03                 a0 = s1 << 0x3
 71161: 7b 15 10                 u64 [sp + 0x10] = s0
 71164: c8 57 07                 a0 = a0 + s0
 71167: 50 20 92 03 cd           ra = 914, jump @5545
      :                          @5548 [@dyn 457]
 71172: 82 18 20                 a1 = u64 [sp + 0x20]
 71175: 98 87 3c                 a0 = a1 >> 0x3c
 71178: 52 07 73 01              jump @5581 if a0 != 0
      :                          @5549
 71182: 88 77 01                 a0 = a0 <u 0x1
 71185: 97 89 03                 a2 = a1 << 0x3
 71188: 97 72 03                 t0 = a0 << 0x3
 71191: 33 04 c0 22 03           t2 = 0x322c0
 71196: 33 03 00 00 01           t1 = 0x10000
 71201: c8 34 00                 ra = t2 + t1
 71204: 82 18 10                 a1 = u64 [sp + 0x10]
 71207: 01                       fallthrough
      :                          @5550
 71208: 82 05                    s0 = u64 [ra]
 71210: c8 95 0b                 a4 = s0 + a2
 71213: ac 5b 4f 01              jump @5580 if a4 <u s0
      :                          @5551
 71217: c8 2b 0c                 a5 = a4 + t0
 71220: d8 bc 06                 s1 = a5 <u a4
 71223: d8 c3 0c                 a5 = t1 <u a5
 71226: d4 6c 0c                 a5 = a5 | s1
 71229: 52 0c 3f 01              jump @5580 if a5 != 0
      :                          @5552
 71233: c9 b4 0c                 a5 = t2 - a4
 71236: c8 3c 0a                 a3 = a5 + t1
 71239: 84 ac 07                 a5 = a3 & 0x7
 71242: c8 cb 0b                 a4 = a4 + a5
 71245: 01                       fallthrough
      :                          @5553
 71246: 82 07                    a0 = u64 [ra]
 71248: ab 57 d8                 jump @5550 if a0 != s0
      :                          @5554
 71251: 7b 0b                    u64 [ra] = a4
 71253: 7b 1c                    u64 [sp] = a5
 71255: c9 ca 06                 s1 = a3 - a5
 71258: 64 67                    a0 = s1
 71260: 7b 19 18                 u64 [sp + 0x18] = a2
 71263: 50 20 94 03 8a f3 01     ra = 916, jump @13633
      :                          @5555 [@dyn 458]
 71270: 64 62                    t0 = s1
 71272: 82 10 10                 ra = u64 [sp + 0x10]
 71275: 82 14 20                 t2 = u64 [sp + 0x20]
 71278: 33 0a                    a3 = 0
 71280: 33 07                    a0 = 0
 71282: 64 68                    a1 = s1
 71284: 82 16 08                 s1 = u64 [sp + 0x8]
 71287: 64 63                    t1 = s1
 71289: 28 14                    jump @5557
      :                          @5556
 71291: 95 77 01                 a0 = a0 + 0x1
 71294: d8 6a 09                 a2 = a3 <u s1
 71297: d8 43 0b                 a4 = t1 <u t2
 71300: d2 b9 09                 a2 = a2 & a4
 71303: 95 88 08                 a1 = a1 + 0x8
 71306: 51 09 2c                 jump @5562 if a2 == 0
      :                          @5557
 71309: 97 a9 03                 a2 = a3 << 0x3
 71312: c8 09 09                 a2 = a2 + ra
 71315: 82 9b                    a4 = u64 [a2]
 71317: 97 39 03                 a2 = t1 << 0x3
 71320: c8 09 09                 a2 = a2 + ra
 71323: 82 9c                    a5 = u64 [a2]
 71325: ae bc 0e                 jump @5560 if a5 >=u a4
      :                          @5558
 71328: ae 47 da 00              jump @5578 if a0 >=u t2
      :                          @5559
 71332: 7b 8c                    u64 [a1] = a5
 71334: 95 33 01                 t1 = t1 + 0x1
 71337: 28 d2                    jump @5556
      :                          @5560
 71339: ae 47 cf 00              jump @5578 if a0 >=u t2
      :                          @5561
 71343: 7b 8b                    u64 [a1] = a4
 71345: 95 aa 01                 a3 = a3 + 0x1
 71348: 28 c7                    jump @5556
      :                          @5562
 71350: 64 29                    a2 = t0
 71352: ae 6a 30                 jump @5566 if a3 >=u s1
      :                          @5563
 71355: 95 7b ff                 a4 = a0 + 0xffffffffffffffff
 71358: 97 ac 03                 a5 = a3 << 0x3
 71361: c8 0c 0c                 a5 = a5 + ra
 71364: c9 a6 0a                 a3 = s1 - a3
 71367: e4 74 02                 t0 = maxu(t2, a0)
 71370: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 71373: 01                       fallthrough
      :                          @5564
 71374: aa b2 ac 00              jump @5578 if t0 == a4
      :                          @5565
 71378: 82 c6                    s1 = u64 [a5]
 71380: 7b 86                    u64 [a1] = s1
 71382: 95 77 01                 a0 = a0 + 0x1
 71385: 95 cc 08                 a5 = a5 + 0x8
 71388: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 71391: 95 bb 01                 a4 = a4 + 0x1
 71394: 95 88 08                 a1 = a1 + 0x8
 71397: 52 0a e9                 jump @5564 if a3 != 0
      :                          @5566
 71400: 64 96                    s1 = a2
 71402: ae 43 47                 jump @5570 if t1 >=u t2
      :                          @5567
 71405: e4 47 02                 t0 = maxu(a0, t2)
 71408: c9 34 0a                 a3 = t2 - t1
 71411: 97 38 03                 a1 = t1 << 0x3
 71414: c8 08 08                 a1 = a1 + ra
 71417: 97 7b 03                 a4 = a0 << 0x3
 71420: 82 19 18                 a2 = u64 [sp + 0x18]
 71423: c9 9b 0b                 a4 = a4 - a2
 71426: 33 0c c0 22 03           a5 = 0x322c0
 71431: 82 19                    a2 = u64 [sp]
 71433: c8 95 05                 s0 = s0 + a2
 71436: c9 5c 0c                 a5 = a5 - s0
 71439: c8 cb 0b                 a4 = a4 + a5
 71442: 95 bb 00 00 01           a4 = a4 + 0x10000
 71447: c9 72 07                 a0 = t0 - a0
 71450: 01                       fallthrough
      :                          @5568
 71451: 51 07 60                 jump @5579 if a0 == 0
      :                          @5569
 71454: 82 8c                    a5 = u64 [a1]
 71456: 7b bc                    u64 [a4] = a5
 71458: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 71461: 95 88 08                 a1 = a1 + 0x8
 71464: 95 bb 08                 a4 = a4 + 0x8
 71467: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 71470: 52 0a ed                 jump @5568 if a3 != 0
      :                          @5570
 71473: 64 07                    a0 = ra
 71475: 64 68                    a1 = s1
 71477: 82 19 18                 a2 = u64 [sp + 0x18]
 71480: 64 45                    s0 = t2
 71482: 50 20 96 03 af f2 01     ra = 918, jump @13633
      :                          @5571 [@dyn 459]
 71489: 82 1c 18                 a5 = u64 [sp + 0x18]
 71492: 33 07 00 20              a0 = 0x2000
 71496: ac 57 24                 jump @5577 if a0 <u s0
      :                          @5572
 71499: 33 07 c0 22 03           a0 = 0x322c0
 71504: 95 77 00 00 01           a0 = a0 + 0x10000
 71509: 01                       fallthrough
      :                          @5573
 71510: 82 78                    a1 = u64 [a0]
 71512: c9 87 09                 a2 = a0 - a1
 71515: ab 69 11                 jump @5577 if a2 != s1
      :                          @5574
 71518: c9 c8 09                 a2 = a1 - a5
 71521: 01                       fallthrough
      :                          @5575
 71522: 82 7a                    a3 = u64 [a0]
 71524: ab 8a f2                 jump @5573 if a3 != a1
      :                          @5576
 71527: 7b 79                    u64 [a0] = a2
 71529: 33 0b                    a4 = 0
 71531: 01                       fallthrough
      :                          @5577
 71532: 82 10 38                 ra = u64 [sp + 0x38]
 71535: 82 15 30                 s0 = u64 [sp + 0x30]
 71538: 82 16 28                 s1 = u64 [sp + 0x28]
 71541: 95 11 40                 sp = sp + 0x40
 71544: 32 00                    ret
      :                          @5578
 71546: 00                       trap
      :                          @5579
 71547: 00                       trap
      :                          @5580
 71548: 00                       trap
      :                          @5581
 71549: 00                       trap
      :                          @5582
 71550: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 71553: 7b 10 18                 u64 [sp + 0x18] = ra
 71556: 7b 15 10                 u64 [sp + 0x10] = s0
 71559: 7b 16 08                 u64 [sp + 0x8] = s1
 71562: 33 02 02                 t0 = 0x2
 71565: ae 28 11                 jump @5584 if a1 >=u t0
      :                          @5583
 71568: 82 10 18                 ra = u64 [sp + 0x18]
 71571: 82 15 10                 s0 = u64 [sp + 0x10]
 71574: 82 16 08                 s1 = u64 [sp + 0x8]
 71577: 95 11 20                 sp = sp + 0x20
 71580: 32 00                    ret
      :                          @5584
 71582: 64 86                    s1 = a1
 71584: 64 73                    t1 = a0
 71586: 33 04 01                 t2 = 0x1
 71589: 01                       fallthrough
      :                          @5585
 71590: 97 67 02                 a0 = s1 << 0x2
 71593: 84 77 f8                 a0 = a0 & 0xfffffffffffffff8
 71596: c8 37 07                 a0 = a0 + t1
 71599: 82 78                    a1 = u64 [a0]
 71601: 33 05                    s0 = 0
 71603: 95 67 ff                 a0 = s1 + 0xffffffffffffffff
 71606: 28 05                    jump @5587
      :                          @5586
 71608: ac 57 48                 jump @5598 if a0 <u s0
      :                          @5587
 71611: ae 65 76                 jump @5607 if s0 >=u s1
      :                          @5588
 71614: 97 59 03                 a2 = s0 << 0x3
 71617: c8 39 09                 a2 = a2 + t1
 71620: 01                       fallthrough
      :                          @5589
 71621: 82 9a                    a3 = u64 [a2]
 71623: ae 8a 0e                 jump @5592 if a3 >=u a1
      :                          @5590
 71626: 95 55 01                 s0 = s0 + 0x1
 71629: 95 99 08                 a2 = a2 + 0x8
 71632: ab 56 f5                 jump @5589 if s1 != s0
      :                          @5591
 71635: 28 5d                    jump @5606
      :                          @5592
 71637: ae 67 5a                 jump @5605 if a0 >=u s1
      :                          @5593
 71640: 97 7b 03                 a4 = a0 << 0x3
 71643: c8 3b 0b                 a4 = a4 + t1
 71646: 82 bc                    a5 = u64 [a4]
 71648: ae c8 0e                 jump @5596 if a1 >=u a5
      :                          @5594
 71651: e4 47 07                 a0 = maxu(a0, t2)
 71654: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 71657: ac 67 ef                 jump @5593 if a0 <u s1
      :                          @5595
 71660: 28 43                    jump @5605
      :                          @5596
 71662: ac 57 ca                 jump @5586 if a0 <u s0
      :                          @5597
 71665: 7b 9c                    u64 [a2] = a5
 71667: 7b ba                    u64 [a4] = a3
 71669: 95 55 01                 s0 = s0 + 0x1
 71672: e4 47 07                 a0 = maxu(a0, t2)
 71675: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 71678: 28 ba                    jump @5586
      :                          @5598
 71680: 51 07 1c                 jump @5602 if a0 == 0
      :                          @5599
 71683: 95 78 01                 a1 = a0 + 0x1
 71686: ae 67 2d                 jump @5609 if a0 >=u s1
      :                          @5600
 71689: 64 37                    a0 = t1
 71691: 7b 13                    u64 [sp] = t1
 71693: 50 20 98 03 71 ff        ra = 920, jump @5582
      :                          @5601 [@dyn 460]
 71699: 82 13                    t1 = u64 [sp]
 71701: 33 02 02                 t0 = 0x2
 71704: 33 04 01                 t2 = 0x1
 71707: 01                       fallthrough
      :                          @5602
 71708: ac 56 16                 jump @5608 if s1 <u s0
      :                          @5603
 71711: c9 56 06                 s1 = s1 - s0
 71714: 97 55 03                 s0 = s0 << 0x3
 71717: c8 53 03                 t1 = t1 + s0
 71720: ae 26 7e ff              jump @5585 if s1 >=u t0
      :                          @5604
 71724: 28 64 ff                 jump @5583
      :                          @5605
 71727: 00                       trap
      :                          @5606
 71728: 00                       trap
      :                          @5607
 71729: 00                       trap
      :                          @5608
 71730: 00                       trap
      :                          @5609
 71731: 00                       trap
      :                          @5610
 71732: 95 11 a0                 sp = sp + 0xffffffffffffffa0
 71735: 7b 10 58                 u64 [sp + 0x58] = ra
 71738: 7b 15 50                 u64 [sp + 0x50] = s0
 71741: 7b 16 48                 u64 [sp + 0x48] = s1
 71744: 51 09 d9 01              jump @5651 if a2 == 0
      :                          @5611
 71748: 64 86                    s1 = a1
 71750: 7b 17                    u64 [sp] = a0
 71752: 64 67                    a0 = s1
 71754: 51 19 01 2d              jump @5615 if a2 == 1
      :                          @5612
 71758: 95 68 08                 a1 = s1 + 0x8
 71761: 82 65                    s0 = u64 [s1]
 71763: 95 97 ff                 a0 = a2 + 0xffffffffffffffff
 71766: 97 77 03                 a0 = a0 << 0x3
 71769: 98 7a 03                 a3 = a0 >> 0x3
 71772: 64 67                    a0 = s1
 71774: 01                       fallthrough
      :                          @5613
 71775: 82 8b                    a4 = u64 [a1]
 71777: d8 5b 0c                 a5 = a4 <u s0
 71780: e4 b5 05                 s0 = maxu(s0, a4)
 71783: da c8 07                 a0 = a1 if a5 == 0
 71786: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 71789: 95 88 08                 a1 = a1 + 0x8
 71792: 52 0a ef                 jump @5613 if a3 != 0
      :                          @5614
 71795: 51 07 d9 01              jump @5658 if a0 == 0
      :                          @5615
 71799: 82 77                    a0 = u64 [a0]
 71801: 95 78 01                 a1 = a0 + 0x1
 71804: 33 05 08                 s0 = 0x8
 71807: 97 87 03                 a0 = a1 << 0x3
 71810: 7b 17 20                 u64 [sp + 0x20] = a0
 71813: 7b 18 10                 u64 [sp + 0x10] = a1
 71816: 51 08 6d                 jump @5624 if a1 == 0
      :                          @5616
 71819: 98 87 3c                 a0 = a1 >> 0x3c
 71822: 52 07 bd 01              jump @5657 if a0 != 0
      :                          @5617
 71826: 7b 19 28                 u64 [sp + 0x28] = a2
 71829: 88 72 01                 t0 = a0 <u 0x1
 71832: 97 22 03                 t0 = t0 << 0x3
 71835: 33 04 c0 22 03           t2 = 0x322c0
 71840: 33 03 00 00 01           t1 = 0x10000
 71845: c8 34 0a                 a3 = t2 + t1
 71848: 01                       fallthrough
      :                          @5618
 71849: 82 ab                    a4 = u64 [a3]
 71851: 82 1c 20                 a5 = u64 [sp + 0x20]
 71854: c8 bc 0c                 a5 = a5 + a4
 71857: ac bc 99 01              jump @5656 if a5 <u a4
      :                          @5619
 71861: c8 2c 09                 a2 = a5 + t0
 71864: d8 c9 05                 s0 = a2 <u a5
 71867: d8 93 09                 a2 = t1 <u a2
 71870: d4 59 09                 a2 = a2 | s0
 71873: 52 09 89 01              jump @5656 if a2 != 0
      :                          @5620
 71877: c9 c4 05                 s0 = t2 - a5
 71880: c8 35 05                 s0 = s0 + t1
 71883: 84 59 07                 a2 = s0 & 0x7
 71886: c8 9c 0c                 a5 = a5 + a2
 71889: 01                       fallthrough
      :                          @5621
 71890: 82 a7                    a0 = u64 [a3]
 71892: ab b7 d5                 jump @5618 if a0 != a4
      :                          @5622
 71895: 7b ac                    u64 [a3] = a5
 71897: c9 95 05                 s0 = s0 - a2
 71900: 64 57                    a0 = s0
 71902: 33 08                    a1 = 0
 71904: 82 19 20                 a2 = u64 [sp + 0x20]
 71907: 50 20 9a 03 33 f3 01     ra = 922, jump @13687
      :                          @5623 [@dyn 461]
 71914: 82 18 10                 a1 = u64 [sp + 0x10]
 71917: 82 19 28                 a2 = u64 [sp + 0x28]
 71920: 97 9a 03                 a3 = a2 << 0x3
 71923: 28 06                    jump @5625
      :                          @5624
 71925: 97 9a 03                 a3 = a2 << 0x3
 71928: 01                       fallthrough
      :                          @5625
 71929: 82 67                    a0 = u64 [s1]
 71931: ae 87 4d 01              jump @5654 if a0 >=u a1
      :                          @5626
 71935: 97 77 03                 a0 = a0 << 0x3
 71938: c8 57 07                 a0 = a0 + s0
 71941: 82 7b                    a4 = u64 [a0]
 71943: 95 66 08                 s1 = s1 + 0x8
 71946: 95 bb 01                 a4 = a4 + 0x1
 71949: 95 aa f8                 a3 = a3 + 0xfffffffffffffff8
 71952: 7b 7b                    u64 [a0] = a4
 71954: 52 0a e7                 jump @5625 if a3 != 0
      :                          @5627
 71957: 7b 15 08                 u64 [sp + 0x8] = s0
 71960: 98 97 3c                 a0 = a2 >> 0x3c
 71963: 52 07 30 01              jump @5657 if a0 != 0
      :                          @5628
 71967: 88 72 01                 t0 = a0 <u 0x1
 71970: 97 97 03                 a0 = a2 << 0x3
 71973: 97 22 03                 t0 = t0 << 0x3
 71976: 33 04 c0 22 03           t2 = 0x322c0
 71981: 33 03 00 00 01           t1 = 0x10000
 71986: c8 34 00                 ra = t2 + t1
 71989: 01                       fallthrough
      :                          @5629
 71990: 82 06                    s1 = u64 [ra]
 71992: c8 76 0c                 a5 = s1 + a0
 71995: ac 6c 0e 01              jump @5655 if a5 <u s1
      :                          @5630
 71999: c8 2c 0a                 a3 = a5 + t0
 72002: d8 ca 05                 s0 = a3 <u a5
 72005: d8 a3 0a                 a3 = t1 <u a3
 72008: d4 5a 0a                 a3 = a3 | s0
 72011: 52 0a fe 00              jump @5655 if a3 != 0
      :                          @5631
 72015: c9 c4 05                 s0 = t2 - a5
 72018: c8 35 05                 s0 = s0 + t1
 72021: 84 5a 07                 a3 = s0 & 0x7
 72024: c8 ac 0c                 a5 = a5 + a3
 72027: 01                       fallthrough
      :                          @5632
 72028: 82 08                    a1 = u64 [ra]
 72030: ab 68 d8                 jump @5629 if a1 != s1
      :                          @5633
 72033: 7b 0c                    u64 [ra] = a5
 72035: 33 0b                    a4 = 0
 72037: 01                       fallthrough
      :                          @5634
 72038: c9 a5 07                 a0 = s0 - a3
 72041: 7b 19 30                 u64 [sp + 0x30] = a2
 72044: 7b 17 38                 u64 [sp + 0x38] = a0
 72047: 49 11 40                 u64 [sp + 64] = 0
 72050: 82 18 10                 a1 = u64 [sp + 0x10]
 72053: 51 08 b1 00              jump @5652 if a1 == 0
      :                          @5635
 72057: 33 08                    a1 = 0
 72059: 33 06                    s1 = 0
 72061: 82 19 20                 a2 = u64 [sp + 0x20]
 72064: 82 1a 08                 a3 = u64 [sp + 0x8]
 72067: c8 a9 09                 a2 = a2 + a3
 72070: 7b 19 18                 u64 [sp + 0x18] = a2
 72073: 28 11                    jump @5637
      :                          @5636
 72075: 82 1a 28                 a3 = u64 [sp + 0x28]
 72078: 95 aa 08                 a3 = a3 + 0x8
 72081: 95 66 01                 s1 = s1 + 0x1
 72084: 82 19 18                 a2 = u64 [sp + 0x18]
 72087: aa 9a 39                 jump @5643 if a3 == a2
      :                          @5637
 72090: 7b 1a 28                 u64 [sp + 0x28] = a3
 72093: 82 a5                    s0 = u64 [a3]
 72095: 52 05 19                 jump @5640 if s0 != 0
      :                          @5638
 72098: 28 e9                    jump @5636
      :                          @5639
 72100: 97 89 03                 a2 = a1 << 0x3
 72103: c8 79 09                 a2 = a2 + a0
 72106: 7b 96                    u64 [a2] = s1
 72108: 95 88 01                 a1 = a1 + 0x1
 72111: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 72114: 7b 18 40                 u64 [sp + 0x40] = a1
 72117: 51 05 d6                 jump @5636 if s0 == 0
      :                          @5640
 72120: 82 19 30                 a2 = u64 [sp + 0x30]
 72123: ab 98 e9                 jump @5639 if a1 != a2
      :                          @5641
 72126: 95 17 30                 a0 = sp + 0x30
 72129: 50 20 9c 03 7f 39 ff     ra = 924, jump @1581
      :                          @5642 [@dyn 462]
 72136: 82 18 40                 a1 = u64 [sp + 0x40]
 72139: 82 17 38                 a0 = u64 [sp + 0x38]
 72142: 28 d6                    jump @5639
      :                          @5643
 72144: 82 17 40                 a0 = u64 [sp + 0x40]
 72147: 82 18 38                 a1 = u64 [sp + 0x38]
 72150: 82 19 30                 a2 = u64 [sp + 0x30]
 72153: 82 1a                    a3 = u64 [sp]
 72155: 7b a7 10                 u64 [a3 + 0x10] = a0
 72158: 7b a8 08                 u64 [a3 + 0x8] = a1
 72161: 33 07 00 20              a0 = 0x2000
 72165: 7b a9                    u64 [a3] = a2
 72167: 82 18 10                 a1 = u64 [sp + 0x10]
 72170: 82 1c 08                 a5 = u64 [sp + 0x8]
 72173: ac 87 4d                 jump @5653 if a0 <u a1
      :                          @5644
 72176: 33 07 c0 22 03           a0 = 0x322c0
 72181: 95 77 00 00 01           a0 = a0 + 0x10000
 72186: 01                       fallthrough
      :                          @5645
 72187: 82 78                    a1 = u64 [a0]
 72189: c9 87 09                 a2 = a0 - a1
 72192: ab c9 3a                 jump @5653 if a2 != a5
      :                          @5646
 72195: 82 19 20                 a2 = u64 [sp + 0x20]
 72198: c9 98 09                 a2 = a1 - a2
 72201: 01                       fallthrough
      :                          @5647
 72202: 82 7a                    a3 = u64 [a0]
 72204: ab 8a ef                 jump @5645 if a3 != a1
      :                          @5648
 72207: 7b 79                    u64 [a0] = a2
 72209: 33 0b                    a4 = 0
 72211: 01                       fallthrough
      :                          @5649
 72212: ab 8a e7                 jump @5645 if a3 != a1
      :                          @5650
 72215: 28 23                    jump @5653
      :                          @5651
 72217: 49 07                    u64 [a0 + 0] = 0
 72219: 33 08 08                 a1 = 0x8
 72222: 7b 78 08                 u64 [a0 + 0x8] = a1
 72225: 49 17 10                 u64 [a0 + 16] = 0
 72228: 28 16                    jump @5653
      :                          @5652
 72230: 82 17 40                 a0 = u64 [sp + 0x40]
 72233: 82 18 38                 a1 = u64 [sp + 0x38]
 72236: 82 19 30                 a2 = u64 [sp + 0x30]
 72239: 82 1a                    a3 = u64 [sp]
 72241: 7b a7 10                 u64 [a3 + 0x10] = a0
 72244: 7b a8 08                 u64 [a3 + 0x8] = a1
 72247: 7b a9                    u64 [a3] = a2
 72249: 01                       fallthrough
      :                          @5653
 72250: 82 10 58                 ra = u64 [sp + 0x58]
 72253: 82 15 50                 s0 = u64 [sp + 0x50]
 72256: 82 16 48                 s1 = u64 [sp + 0x48]
 72259: 95 11 60                 sp = sp + 0x60
 72262: 32 00                    ret
      :                          @5654
 72264: 00                       trap
      :                          @5655
 72265: 00                       trap
      :                          @5656
 72266: 00                       trap
      :                          @5657
 72267: 00                       trap
      :                          @5658
 72268: 00                       trap
      :                          @5659
 72269: 95 11 80                 sp = sp + 0xffffffffffffff80
 72272: 7b 10 78                 u64 [sp + 0x78] = ra
 72275: 7b 15 70                 u64 [sp + 0x70] = s0
 72278: 7b 16 68                 u64 [sp + 0x68] = s1
 72281: 7b 17 48                 u64 [sp + 0x48] = a0
 72284: 97 87 03                 a0 = a1 << 0x3
 72287: 7b 17 50                 u64 [sp + 0x50] = a0
 72290: 7b 18 40                 u64 [sp + 0x40] = a1
 72293: 51 08 66                 jump @5668 if a1 == 0
      :                          @5660
 72296: 98 87 3c                 a0 = a1 >> 0x3c
 72299: 52 07 06 02              jump @5704 if a0 != 0
      :                          @5661
 72303: 88 77 01                 a0 = a0 <u 0x1
 72306: 97 72 03                 t0 = a0 << 0x3
 72309: 33 08 c0 22 03           a1 = 0x322c0
 72314: 33 03 00 00 01           t1 = 0x10000
 72319: c8 38 0a                 a3 = a1 + t1
 72322: 01                       fallthrough
      :                          @5662
 72323: 82 ab                    a4 = u64 [a3]
 72325: 82 1c 50                 a5 = u64 [sp + 0x50]
 72328: c8 bc 0c                 a5 = a5 + a4
 72331: ac bc e5 01              jump @5703 if a5 <u a4
      :                          @5663
 72335: c8 2c 09                 a2 = a5 + t0
 72338: d8 c9 06                 s1 = a2 <u a5
 72341: d8 93 09                 a2 = t1 <u a2
 72344: d4 69 09                 a2 = a2 | s1
 72347: 52 09 d5 01              jump @5703 if a2 != 0
      :                          @5664
 72351: c9 c8 06                 s1 = a1 - a5
 72354: c8 36 06                 s1 = s1 + t1
 72357: 84 69 07                 a2 = s1 & 0x7
 72360: c8 9c 0c                 a5 = a5 + a2
 72363: 01                       fallthrough
      :                          @5665
 72364: 82 a7                    a0 = u64 [a3]
 72366: ab b7 d5                 jump @5662 if a0 != a4
      :                          @5666
 72369: 7b ac                    u64 [a3] = a5
 72371: c9 96 06                 s1 = s1 - a2
 72374: 64 67                    a0 = s1
 72376: 33 08                    a1 = 0
 72378: 82 15 50                 s0 = u64 [sp + 0x50]
 72381: 64 59                    a2 = s0
 72383: 50 20 9e 03 57 f1 01     ra = 926, jump @13687
      :                          @5667 [@dyn 463]
 72390: 7b 15 28                 u64 [sp + 0x28] = s0
 72393: 28 09                    jump @5669
      :                          @5668
 72395: 49 11 28                 u64 [sp + 40] = 0
 72398: 33 06 08                 s1 = 0x8
 72401: 01                       fallthrough
      :                          @5669
 72402: 33 02                    t0 = 0
 72404: 82 17 48                 a0 = u64 [sp + 0x48]
 72407: 95 75 f8                 s0 = a0 + 0xfffffffffffffff8
 72410: 33 03 c0 22 03           t1 = 0x322c0
 72415: 33 0c 00 00 01           a5 = 0x10000
 72420: c8 c3 0b                 a4 = t1 + a5
 72423: 49 11 10 00 08           u64 [sp + 16] = 0x800
 72428: 49 11 08 08 f8 00        u64 [sp + 8] = 0xf808
 72434: 7b 16 20                 u64 [sp + 0x20] = s1
 72437: 7b 15 18                 u64 [sp + 0x18] = s0
 72440: 7b 13 38                 u64 [sp + 0x38] = t1
 72443: 7b 1b                    u64 [sp] = a4
 72445: 33 04 01                 t2 = 0x1
 72448: 28 21                    jump @5672
      :                          @5670
 72450: 82 1a 30                 a3 = u64 [sp + 0x30]
 72453: 95 a7 08                 a0 = a3 + 0x8
 72456: 82 12 60                 t0 = u64 [sp + 0x60]
 72459: 95 22 08                 t0 = t0 + 0x8
 72462: 82 19 40                 a2 = u64 [sp + 0x40]
 72465: 82 13 38                 t1 = u64 [sp + 0x38]
 72468: 33 0c 00 00 01           a5 = 0x10000
 72473: 55 1a 39 17 01           jump @5694 if a3 >=u 57
      :                          @5671
 72478: 64 74                    t2 = a0
 72480: 01                       fallthrough
      :                          @5672
 72481: 82 b5                    s0 = u64 [a4]
 72483: 95 57 ff 07              a0 = s0 + 0x7ff
 72487: 95 77 01                 a0 = a0 + 0x1
 72490: ac 57 45 01              jump @5702 if a0 <u s0
      :                          @5673
 72494: 95 78 08                 a1 = a0 + 0x8
 72497: d8 78 09                 a2 = a1 <u a0
 72500: d8 8c 08                 a1 = a5 <u a1
 72503: d4 98 08                 a1 = a1 | a2
 72506: 52 08 35 01              jump @5702 if a1 != 0
      :                          @5674
 72510: c9 73 08                 a1 = t1 - a0
 72513: c8 c8 08                 a1 = a1 + a5
 72516: 84 86 07                 s1 = a1 & 0x7
 72519: c8 67 07                 a0 = a0 + s1
 72522: 01                       fallthrough
      :                          @5675
 72523: 82 b9                    a2 = u64 [a4]
 72525: ab 59 d4                 jump @5672 if a2 != s0
      :                          @5676
 72528: 7b b7                    u64 [a4] = a0
 72530: 7b 14 30                 u64 [sp + 0x30] = t2
 72533: c9 68 07                 a0 = a1 - s1
 72536: 7b 17 58                 u64 [sp + 0x58] = a0
 72539: 33 08                    a1 = 0
 72541: 82 19 10                 a2 = u64 [sp + 0x10]
 72544: 7b 12 60                 u64 [sp + 0x60] = t0
 72547: 50 20 a0 03 b3 f0 01     ra = 928, jump @13687
      :                          @5677 [@dyn 464]
 72554: 82 1b 58                 a4 = u64 [sp + 0x58]
 72557: 82 1c 60                 a5 = u64 [sp + 0x60]
 72560: 82 12 40                 t0 = u64 [sp + 0x40]
 72563: 82 17 50                 a0 = u64 [sp + 0x50]
 72566: 82 18 48                 a1 = u64 [sp + 0x48]
 72569: 51 02 26                 jump @5680 if t0 == 0
      :                          @5678
 72572: 82 89                    a2 = u64 [a1]
 72574: d0 c9 09                 a2 = a2 >> a5
 72577: 84 99 ff 00              a2 = a2 & 0xff
 72581: 97 99 03                 a2 = a2 << 0x3
 72584: c8 b9 09                 a2 = a2 + a4
 72587: 82 9a                    a3 = u64 [a2]
 72589: 95 88 08                 a1 = a1 + 0x8
 72592: 95 aa 01                 a3 = a3 + 0x1
 72595: 95 77 f8                 a0 = a0 + 0xfffffffffffffff8
 72598: 7b 9a                    u64 [a2] = a3
 72600: 52 07 e4                 jump @5678 if a0 != 0
      :                          @5679
 72603: 82 b7                    a0 = u64 [a4]
 72605: 28 05                    jump @5681
      :                          @5680
 72607: 33 07                    a0 = 0
 72609: 01                       fallthrough
      :                          @5681
 72610: 82 18 38                 a1 = u64 [sp + 0x38]
 72613: c8 65 05                 s0 = s0 + s1
 72616: c9 58 08                 a1 = a1 - s0
 72619: 82 19 08                 a2 = u64 [sp + 0x8]
 72622: c8 98 08                 a1 = a1 + a2
 72625: 33 09 ff 00              a2 = 0xff
 72629: 01                       fallthrough
      :                          @5682
 72630: 82 8a                    a3 = u64 [a1]
 72632: c8 a7 07                 a0 = a0 + a3
 72635: 7b 87                    u64 [a1] = a0
 72637: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 72640: 95 88 08                 a1 = a1 + 0x8
 72643: 52 09 f3                 jump @5682 if a2 != 0
      :                          @5683
 72646: 82 18 50                 a1 = u64 [sp + 0x50]
 72649: 82 16 20                 s1 = u64 [sp + 0x20]
 72652: 82 15 18                 s0 = u64 [sp + 0x18]
 72655: 51 02 2e                 jump @5686 if t0 == 0
      :                          @5684
 72658: c8 85 07                 a0 = s0 + a1
 72661: 82 79                    a2 = u64 [a0]
 72663: d0 c9 07                 a0 = a2 >> a5
 72666: 84 77 ff 00              a0 = a0 & 0xff
 72670: 97 77 03                 a0 = a0 << 0x3
 72673: c8 7b 0a                 a3 = a4 + a0
 72676: 82 a7                    a0 = u64 [a3]
 72678: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 72681: 7b a7                    u64 [a3] = a0
 72683: ae 27 83 00              jump @5701 if a0 >=u t0
      :                          @5685
 72687: 97 77 03                 a0 = a0 << 0x3
 72690: c8 67 07                 a0 = a0 + s1
 72693: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
 72696: 7b 79                    u64 [a0] = a2
 72698: 52 08 d8                 jump @5684 if a1 != 0
      :                          @5686
 72701: 82 17 48                 a0 = u64 [sp + 0x48]
 72704: 64 68                    a1 = s1
 72706: 82 19 28                 a2 = u64 [sp + 0x28]
 72709: 50 20 a2 03 e4 ed 01     ra = 930, jump @13633
      :                          @5687 [@dyn 465]
 72716: 82 1c 58                 a5 = u64 [sp + 0x58]
 72719: 82 1b                    a4 = u64 [sp]
 72721: 01                       fallthrough
      :                          @5688
 72722: 82 b7                    a0 = u64 [a4]
 72724: c9 7b 08                 a1 = a4 - a0
 72727: ab c8 eb fe              jump @5670 if a1 != a5
      :                          @5689
 72731: 95 78 00 f8              a1 = a0 + 0xfffffffffffff800
 72735: 01                       fallthrough
      :                          @5690
 72736: 82 b9                    a2 = u64 [a4]
 72738: ab 79 f0                 jump @5688 if a2 != a0
      :                          @5691
 72741: 7b b8                    u64 [a4] = a1
 72743: 33 0a                    a3 = 0
 72745: 01                       fallthrough
      :                          @5692
 72746: ab 79 e8                 jump @5688 if a2 != a0
      :                          @5693
 72749: 28 d5 fe                 jump @5670
      :                          @5694
 72752: 33 07 00 e0              a0 = 0xffffffffffffe000
 72756: 95 98 ff df              a1 = a2 + 0xffffffffffffdfff
 72760: ac 78 27                 jump @5700 if a1 <u a0
      :                          @5695
 72763: 33 07 c0 22 03           a0 = 0x322c0
 72768: 95 77 00 00 01           a0 = a0 + 0x10000
 72773: 01                       fallthrough
      :                          @5696
 72774: 82 78                    a1 = u64 [a0]
 72776: c9 87 09                 a2 = a0 - a1
 72779: ab 69 14                 jump @5700 if a2 != s1
      :                          @5697
 72782: 82 19 28                 a2 = u64 [sp + 0x28]
 72785: c9 98 09                 a2 = a1 - a2
 72788: 01                       fallthrough
      :                          @5698
 72789: 82 7a                    a3 = u64 [a0]
 72791: ab 8a ef                 jump @5696 if a3 != a1
      :                          @5699
 72794: 7b 79                    u64 [a0] = a2
 72796: 33 0b                    a4 = 0
 72798: 01                       fallthrough
      :                          @5700
 72799: 82 10 78                 ra = u64 [sp + 0x78]
 72802: 82 15 70                 s0 = u64 [sp + 0x70]
 72805: 82 16 68                 s1 = u64 [sp + 0x68]
 72808: 95 11 80 00              sp = sp + 0x80
 72812: 32 00                    ret
      :                          @5701
 72814: 00                       trap
      :                          @5702
 72815: 00                       trap
      :                          @5703
 72816: 00                       trap
      :                          @5704
 72817: 00                       trap
      :                          @5705
 72818: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 72821: 7b 10 20                 u64 [sp + 0x20] = ra
 72824: 7b 15 18                 u64 [sp + 0x18] = s0
 72827: 7b 16 10                 u64 [sp + 0x10] = s1
 72830: 51 09 9e 00              jump @5718 if a2 == 0
      :                          @5706
 72834: 64 86                    s1 = a1
 72836: 98 98 3c                 a1 = a2 >> 0x3c
 72839: 52 08 b0 00              jump @5721 if a1 != 0
      :                          @5707
 72843: 7b 17                    u64 [sp] = a0
 72845: 88 82 01                 t0 = a1 <u 0x1
 72848: 7b 19 08                 u64 [sp + 0x8] = a2
 72851: 97 99 03                 a2 = a2 << 0x3
 72854: 97 22 03                 t0 = t0 << 0x3
 72857: 33 04 c0 22 03           t2 = 0x322c0
 72862: 33 03 00 00 01           t1 = 0x10000
 72867: c8 34 00                 ra = t2 + t1
 72870: 01                       fallthrough
      :                          @5708
 72871: 82 07                    a0 = u64 [ra]
 72873: c8 97 0c                 a5 = a0 + a2
 72876: ac 7c 8a 00              jump @5720 if a5 <u a0
      :                          @5709
 72880: c8 2c 0a                 a3 = a5 + t0
 72883: d8 ca 05                 s0 = a3 <u a5
 72886: d8 a3 0a                 a3 = t1 <u a3
 72889: d4 5a 0a                 a3 = a3 | s0
 72892: 52 0a 7a                 jump @5720 if a3 != 0
      :                          @5710
 72895: c9 c4 05                 s0 = t2 - a5
 72898: c8 35 05                 s0 = s0 + t1
 72901: 84 5a 07                 a3 = s0 & 0x7
 72904: c8 ac 0c                 a5 = a5 + a3
 72907: 01                       fallthrough
      :                          @5711
 72908: 82 08                    a1 = u64 [ra]
 72910: ab 78 d9                 jump @5708 if a1 != a0
      :                          @5712
 72913: 7b 0c                    u64 [ra] = a5
 72915: 33 0b                    a4 = 0
 72917: c9 a5 05                 s0 = s0 - a3
 72920: 64 57                    a0 = s0
 72922: 33 08                    a1 = 0
 72924: 50 20 a4 03 3a ef 01     ra = 932, jump @13687
      :                          @5713 [@dyn 466]
 72931: 33 07                    a0 = 0
 72933: 64 58                    a1 = s0
 72935: 82 19 08                 a2 = u64 [sp + 0x8]
 72938: 28 0b                    jump @5715
      :                          @5714
 72940: 95 88 08                 a1 = a1 + 0x8
 72943: 95 66 08                 s1 = s1 + 0x8
 72946: aa 79 26                 jump @5717 if a2 == a0
      :                          @5715
 72949: 82 6c                    a5 = u64 [s1]
 72951: 82 8a                    a3 = u64 [a1]
 72953: 64 7b                    a4 = a0
 72955: 95 77 01                 a0 = a0 + 0x1
 72958: c8 ac 0c                 a5 = a5 + a3
 72961: d4 b7 0a                 a3 = a0 | a4
 72964: 7b 8c                    u64 [a1] = a5
 72966: ae 9a e6                 jump @5714 if a3 >=u a2
      :                          @5716
 72969: 97 aa 03                 a3 = a3 << 0x3
 72972: c8 5a 0a                 a3 = a3 + s0
 72975: 82 ab                    a4 = u64 [a3]
 72977: c8 cb 0b                 a4 = a4 + a5
 72980: 7b ab                    u64 [a3] = a4
 72982: 28 d6                    jump @5714
      :                          @5717
 72984: 82 17                    a0 = u64 [sp]
 72986: 28 06                    jump @5719
      :                          @5718
 72988: 33 05 08                 s0 = 0x8
 72991: 01                       fallthrough
      :                          @5719
 72992: 7b 79                    u64 [a0] = a2
 72994: 7b 75 08                 u64 [a0 + 0x8] = s0
 72997: 7b 79 10                 u64 [a0 + 0x10] = a2
 73000: 82 10 20                 ra = u64 [sp + 0x20]
 73003: 82 15 18                 s0 = u64 [sp + 0x18]
 73006: 82 16 10                 s1 = u64 [sp + 0x10]
 73009: 95 11 28                 sp = sp + 0x28
 73012: 32 00                    ret
      :                          @5720
 73014: 00                       trap
      :                          @5721
 73015: 00                       trap
      :                          @5722
 73016: ae 89 20                 jump @5726 if a2 >=u a1
      :                          @5723
 73019: 33 0a                    a3 = 0
 73021: 01                       fallthrough
      :                          @5724
 73022: 97 9b 03                 a4 = a2 << 0x3
 73025: c8 7b 0b                 a4 = a4 + a0
 73028: 82 bb                    a4 = u64 [a4]
 73030: 95 9c 01                 a5 = a2 + 0x1
 73033: d2 c9 09                 a2 = a2 & a5
 73036: c8 ba 0a                 a3 = a3 + a4
 73039: 51 09 0a                 jump @5727 if a2 == 0
      :                          @5725
 73042: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 73045: ac 89 e9                 jump @5724 if a2 <u a1
      :                          @5726
 73048: 00                       trap
      :                          @5727
 73049: 64 a7                    a0 = a3
 73051: 32 00                    ret
      :                          @5728
 73053: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 73056: 7b 10 28                 u64 [sp + 0x28] = ra
 73059: 7b 15 20                 u64 [sp + 0x20] = s0
 73062: 7b 16 18                 u64 [sp + 0x18] = s1
 73065: 97 95 01                 s0 = a2 << 0x1
 73068: 64 86                    s1 = a1
 73070: 64 73                    t1 = a0
 73072: 51 05 75                 jump @5738 if s0 == 0
      :                          @5729
 73075: 7b 13 08                 u64 [sp + 0x8] = t1
 73078: 7b 15 10                 u64 [sp + 0x10] = s0
 73081: 98 57 3c                 a0 = s0 >> 0x3c
 73084: 52 07 f9 00              jump @5753 if a0 != 0
      :                          @5730
 73088: 88 72 01                 t0 = a0 <u 0x1
 73091: 7b 19                    u64 [sp] = a2
 73093: 97 99 04                 a2 = a2 << 0x4
 73096: 97 22 03                 t0 = t0 << 0x3
 73099: 33 04 c0 22 03           t2 = 0x322c0
 73104: 33 03 00 00 01           t1 = 0x10000
 73109: c8 34 00                 ra = t2 + t1
 73112: 01                       fallthrough
      :                          @5731
 73113: 82 05                    s0 = u64 [ra]
 73115: c8 95 0c                 a5 = s0 + a2
 73118: ac 5c d6 00              jump @5752 if a5 <u s0
      :                          @5732
 73122: c8 2c 07                 a0 = a5 + t0
 73125: d8 c7 0a                 a3 = a0 <u a5
 73128: d8 73 07                 a0 = t1 <u a0
 73131: d4 a7 07                 a0 = a0 | a3
 73134: 52 07 c6 00              jump @5752 if a0 != 0
      :                          @5733
 73138: c9 c4 07                 a0 = t2 - a5
 73141: c8 37 07                 a0 = a0 + t1
 73144: 84 7a 07                 a3 = a0 & 0x7
 73147: c8 ac 0c                 a5 = a5 + a3
 73150: 01                       fallthrough
      :                          @5734
 73151: 82 08                    a1 = u64 [ra]
 73153: ab 58 d8                 jump @5731 if a1 != s0
      :                          @5735
 73156: 7b 0c                    u64 [ra] = a5
 73158: 33 0b                    a4 = 0
 73160: c9 a7 05                 s0 = a0 - a3
 73163: 64 57                    a0 = s0
 73165: 33 08                    a1 = 0
 73167: 50 20 a6 03 47 ee 01     ra = 934, jump @13687
      :                          @5736 [@dyn 467]
 73174: 64 54                    t2 = s0
 73176: 82 15 10                 s0 = u64 [sp + 0x10]
 73179: 82 19                    a2 = u64 [sp]
 73181: 82 13 08                 t1 = u64 [sp + 0x8]
 73184: 52 09 0b                 jump @5739 if a2 != 0
      :                          @5737
 73187: 28 75                    jump @5748
      :                          @5738
 73189: 33 04 08                 t2 = 0x8
 73192: 51 09 70                 jump @5748 if a2 == 0
      :                          @5739
 73195: e6 59 07                 a0 = minu(a2, s0)
 73198: c9 57 08                 a1 = a0 - s0
 73201: 97 92 03                 t0 = a2 << 0x3
 73204: c8 24 0a                 a3 = t2 + t0
 73207: 64 97                    a0 = a2
 73209: 64 9b                    a4 = a2
 73211: 01                       fallthrough
      :                          @5740
 73212: 51 08 77                 jump @5751 if a1 == 0
      :                          @5741
 73215: 82 6c                    a5 = u64 [s1]
 73217: 7b ac                    u64 [a3] = a5
 73219: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 73222: 95 66 08                 s1 = s1 + 0x8
 73225: 95 88 01                 a1 = a1 + 0x1
 73228: 95 77 01                 a0 = a0 + 0x1
 73231: 95 aa 08                 a3 = a3 + 0x8
 73234: 52 0b ea                 jump @5740 if a4 != 0
      :                          @5742
 73237: 33 07 02                 a0 = 0x2
 73240: ac 79 40                 jump @5748 if a2 <u a0
      :                          @5743
 73243: c8 24 08                 a1 = t2 + t0
 73246: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
 73249: 95 57 fe                 a0 = s0 + 0xfffffffffffffffe
 73252: 97 98 04                 a1 = a2 << 0x4
 73255: c8 48 08                 a1 = a1 + t2
 73258: 95 8b f8                 a4 = a1 + 0xfffffffffffffff8
 73261: 33 02 01                 t0 = 0x1
 73264: 64 98                    a1 = a2
 73266: 01                       fallthrough
      :                          @5744
 73267: ae 57 40                 jump @5751 if a0 >=u s0
      :                          @5745
 73270: 95 76 01                 s1 = a0 + 0x1
 73273: ae 56 38                 jump @5749 if s1 >=u s0
      :                          @5746
 73276: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 73279: ae 58 33                 jump @5750 if a1 >=u s0
      :                          @5747
 73282: 82 bc f8                 a5 = u64 [a4 + 0xfffffffffffffff8]
 73285: 82 b6                    s1 = u64 [a4]
 73287: c8 6c 0c                 a5 = a5 + s1
 73290: 7b ac                    u64 [a3] = a5
 73292: 95 aa f8                 a3 = a3 + 0xfffffffffffffff8
 73295: 95 77 fe                 a0 = a0 + 0xfffffffffffffffe
 73298: 95 bb f0                 a4 = a4 + 0xfffffffffffffff0
 73301: ac 82 de                 jump @5744 if t0 <u a1
      :                          @5748
 73304: 7b 39 18                 u64 [t1 + 0x18] = a2
 73307: 7b 35                    u64 [t1] = s0
 73309: 7b 34 08                 u64 [t1 + 0x8] = t2
 73312: 7b 35 10                 u64 [t1 + 0x10] = s0
 73315: 82 10 28                 ra = u64 [sp + 0x28]
 73318: 82 15 20                 s0 = u64 [sp + 0x20]
 73321: 82 16 18                 s1 = u64 [sp + 0x18]
 73324: 95 11 30                 sp = sp + 0x30
 73327: 32 00                    ret
      :                          @5749
 73329: 00                       trap
      :                          @5750
 73330: 00                       trap
      :                          @5751
 73331: 00                       trap
      :                          @5752
 73332: 00                       trap
      :                          @5753
 73333: 00                       trap
      :                          @5754
 73334: 64 7a                    a3 = a0
 73336: 82 7b 18                 a4 = u64 [a0 + 0x18]
 73339: c8 8b 07                 a0 = a4 + a1
 73342: c8 b9 09                 a2 = a2 + a4
 73345: ae 79 0d                 jump @5757 if a2 >=u a0
      :                          @5755
 73348: 33 07                    a0 = 0
 73350: 28 00 c5 00              jump @9403
      :                          @5756
 73354: 64 a7                    a0 = a3
 73356: 32 00                    ret
      :                          @5757
 73358: 82 a8 10                 a1 = u64 [a3 + 0x10]
 73361: 82 ab 08                 a4 = u64 [a3 + 0x8]
 73364: 33 0a                    a3 = 0
 73366: 28 0b                    jump @5759
      :                          @5758
 73368: 98 77 01                 a0 = a0 >> 0x1
 73371: 98 99 01                 a2 = a2 >> 0x1
 73374: ac 79 ec                 jump @5756 if a2 <u a0
      :                          @5759
 73377: 84 7c 01                 a5 = a0 & 0x1
 73380: 51 0c 15                 jump @5762 if a5 == 0
      :                          @5760
 73383: ae 87 2b                 jump @5765 if a0 >=u a1
      :                          @5761
 73386: 97 7c 03                 a5 = a0 << 0x3
 73389: c8 bc 0c                 a5 = a5 + a4
 73392: 82 cc                    a5 = u64 [a5]
 73394: c8 ca 0a                 a3 = a3 + a5
 73397: 95 77 01                 a0 = a0 + 0x1
 73400: 01                       fallthrough
      :                          @5762
 73401: 84 9c 01                 a5 = a2 & 0x1
 73404: 52 0c dc                 jump @5758 if a5 != 0
      :                          @5763
 73407: ae 89 14                 jump @5766 if a2 >=u a1
      :                          @5764
 73410: 97 9c 03                 a5 = a2 << 0x3
 73413: c8 bc 0c                 a5 = a5 + a4
 73416: 82 cc                    a5 = u64 [a5]
 73418: c8 ca 0a                 a3 = a3 + a5
 73421: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 73424: 28 c8                    jump @5758
      :                          @5765
 73426: 00                       trap
      :                          @5766
 73427: 00                       trap
      :                          @5767
 73428: cd 87 0a                 a3 = a0 %u a1
 73431: 51 0a 32                 jump @5773 if a3 == 0
      :                          @5768
 73434: 95 8c ff                 a5 = a1 + 0xffffffffffffffff
 73437: 33 09 03                 a2 = 0x3
 73440: 8e c7                    a0 = a5 >u 0
 73442: ae 98 14                 jump @5771 if a1 >=u a2
      :                          @5769
 73445: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 73448: 88 77 01                 a0 = a0 <u 0x1
 73451: 32 00                    ret
      :                          @5770
 73453: 98 bc 01                 a5 = a4 >> 0x1
 73456: ca aa 0a                 a3 = a3 * a3
 73459: ae b9 f2                 jump @5769 if a2 >=u a4
      :                          @5771
 73462: 64 cb                    a4 = a5
 73464: 84 cc 02                 a5 = a5 & 0x2
 73467: cd 8a 0a                 a3 = a3 %u a1
 73470: 51 0c ef                 jump @5770 if a5 == 0
      :                          @5772
 73473: ca 7a 07                 a0 = a3 * a0
 73476: cd 87 07                 a0 = a0 %u a1
 73479: 28 e6                    jump @5770
      :                          @5773
 73481: 33 07 01                 a0 = 0x1
 73484: 28 29 c6 00              jump @9433
      :                          @5774 [@dyn 468]
 73488: 3a 07 80 12 03           a0 = u64 [0x31280]
 73493: 51 07 ab 05              jump @5842 if a0 == 0
      :                          @5775
 73497: 82 75 08                 s0 = u64 [a0 + 0x8]
 73500: 3a 08 c8 10 03           a1 = u64 [0x310c8]
 73505: 7b 18 08                 u64 [sp + 0x8] = a1
 73508: 82 77                    a0 = u64 [a0]
 73510: 7b 17 48                 u64 [sp + 0x48] = a0
 73513: 82 58 18                 a1 = u64 [s0 + 0x18]
 73516: b4 80 02 aa 03           ra = 938, jump [a1]
      :                          @5776 [@dyn 469]
 73521: 82 58 20                 a1 = u64 [s0 + 0x20]
 73524: 64 76                    s1 = a0
 73526: 82 17 48                 a0 = u64 [sp + 0x48]
 73529: b4 80 02 ac 03           ra = 940, jump [a1]
      :                          @5777 [@dyn 470]
 73534: 82 10 08                 ra = u64 [sp + 0x8]
 73537: 82 69                    a2 = u64 [s1]
 73539: 82 68 08                 a1 = u64 [s1 + 0x8]
 73542: d3 97 07                 a0 = a0 ^ a2
 73545: ca 07 07                 a0 = a0 * ra
 73548: d3 87 07                 a0 = a0 ^ a1
 73551: 9e 77 38                 a0 = a0 >>r 0x38
 73554: 82 6a 20                 a3 = u64 [s1 + 0x20]
 73557: ca 07 08                 a1 = a0 * ra
 73560: d3 89 09                 a2 = a2 ^ a1
 73563: 9e 97 28                 a0 = a2 >>r 0x28
 73566: d3 7a 0a                 a3 = a3 ^ a0
 73569: ca 0a 09                 a2 = a3 * ra
 73572: d3 89 09                 a2 = a2 ^ a1
 73575: 9e 99 38                 a2 = a2 >>r 0x38
 73578: ca 09 09                 a2 = a2 * ra
 73581: d3 79 0a                 a3 = a2 ^ a0
 73584: 9e aa 28                 a3 = a3 >>r 0x28
 73587: 82 6b 28                 a4 = u64 [s1 + 0x28]
 73590: ca 0a 0c                 a5 = a3 * ra
 73593: d3 c9 09                 a2 = a2 ^ a5
 73596: dc a9 09                 a2 = a2 <<r a3
 73599: d3 7b 0b                 a4 = a4 ^ a0
 73602: ca 0b 0a                 a3 = a4 * ra
 73605: d3 8a 0a                 a3 = a3 ^ a1
 73608: 9e aa 38                 a3 = a3 >>r 0x38
 73611: ca 0a 0a                 a3 = a3 * ra
 73614: d3 7a 0b                 a4 = a3 ^ a0
 73617: 9e bb 28                 a4 = a4 >>r 0x28
 73620: 82 6c 30                 a5 = u64 [s1 + 0x30]
 73623: ca 0b 05                 s0 = a4 * ra
 73626: d3 5a 0a                 a3 = a3 ^ s0
 73629: dc ba 0a                 a3 = a3 <<r a4
 73632: d3 7c 0c                 a5 = a5 ^ a0
 73635: ca 0c 0b                 a4 = a5 * ra
 73638: d3 8b 0b                 a4 = a4 ^ a1
 73641: 9e bb 38                 a4 = a4 >>r 0x38
 73644: ca 0b 0b                 a4 = a4 * ra
 73647: d3 7b 0c                 a5 = a4 ^ a0
 73650: 9e cc 28                 a5 = a5 >>r 0x28
 73653: 82 66 38                 s1 = u64 [s1 + 0x38]
 73656: ca 0c 05                 s0 = a5 * ra
 73659: d3 5b 0b                 a4 = a4 ^ s0
 73662: dc cb 0b                 a4 = a4 <<r a5
 73665: d3 76 06                 s1 = s1 ^ a0
 73668: ca 06 0c                 a5 = s1 * ra
 73671: d3 c8 08                 a1 = a1 ^ a5
 73674: 9e 88 38                 a1 = a1 >>r 0x38
 73677: ca 08 08                 a1 = a1 * ra
 73680: d3 87 07                 a0 = a0 ^ a1
 73683: 9e 77 28                 a0 = a0 >>r 0x28
 73686: ca 07 0c                 a5 = a0 * ra
 73689: d3 c8 08                 a1 = a1 ^ a5
 73692: dc 78 07                 a0 = a1 <<r a0
 73695: 7b 19 88 00              u64 [sp + 0x88] = a2
 73699: 7b 1a 90 00              u64 [sp + 0x90] = a3
 73703: 7b 1b 98 00              u64 [sp + 0x98] = a4
 73707: 7b 17 a0 00              u64 [sp + 0xa0] = a0
 73711: 33 0a 48 05 01           a3 = 0x10548
 73716: 7b 1a 68                 u64 [sp + 0x68] = a3
 73719: 49 21 80 00              u64 [sp + 128] = 0
 73723: 82 18 60                 a1 = u64 [sp + 0x60]
 73726: 49 11 78                 u64 [sp + 120] = 0
 73729: 49 11 70                 u64 [sp + 112] = 0
 73732: 49 11 60                 u64 [sp + 96] = 0
 73735: 33 07 01                 a0 = 0x1
 73738: 51 08 26 04              jump @5824 if a1 == 0
      :                          @5778
 73742: 82 19 58                 a2 = u64 [sp + 0x58]
 73745: 97 87 03                 a0 = a1 << 0x3
 73748: c8 97 07                 a0 = a0 + a2
 73751: 7b 17 20                 u64 [sp + 0x20] = a0
 73754: 3a 07 d0 10 03           a0 = u64 [0x310d0]
 73759: 7b 17 40                 u64 [sp + 0x40] = a0
 73762: 14 07 01 01 01 01 01 01 01 01 a0 = 0x101010101010101
 73772: 7b 17 18                 u64 [sp + 0x18] = a0
 73775: 49 11 38 ff fe fe fe     u64 [sp + 56] = 0xfffffffffefefeff
 73782: 01                       fallthrough
      :                          @5779
 73783: 64 97                    a0 = a2
 73785: 82 99                    a2 = u64 [a2]
 73787: 82 18 88 00              a1 = u64 [sp + 0x88]
 73791: 33 04                    t2 = 0
 73793: 82 1a 90 00              a3 = u64 [sp + 0x90]
 73797: 95 77 08                 a0 = a0 + 0x8
 73800: 7b 17 30                 u64 [sp + 0x30] = a0
 73803: 7b 19 48                 u64 [sp + 0x48] = a2
 73806: d3 98 07                 a0 = a1 ^ a2
 73809: ca 07 07                 a0 = a0 * ra
 73812: d3 a7 07                 a0 = a0 ^ a3
 73815: 9e 77 38                 a0 = a0 >>r 0x38
 73818: ca 07 07                 a0 = a0 * ra
 73821: d3 78 08                 a1 = a1 ^ a0
 73824: 9e 88 28                 a1 = a1 >>r 0x28
 73827: ca 08 0a                 a3 = a1 * ra
 73830: d3 a7 07                 a0 = a0 ^ a3
 73833: dc 87 0c                 a5 = a0 <<r a1
 73836: 82 12 68                 t0 = u64 [sp + 0x68]
 73839: 82 18 70                 a1 = u64 [sp + 0x70]
 73842: 98 c9 39                 a2 = a5 >> 0x39
 73845: 82 17 18                 a0 = u64 [sp + 0x18]
 73848: 7b 19 10                 u64 [sp + 0x10] = a2
 73851: ca 79 03                 t1 = a2 * a0
 73854: 95 2b f0                 a4 = t0 + 0xfffffffffffffff0
 73857: 7b 1c 28                 u64 [sp + 0x28] = a5
 73860: 01                       fallthrough
      :                          @5780
 73861: d2 8c 0c                 a5 = a5 & a1
 73864: c8 c2 07                 a0 = t0 + a5
 73867: 7c 7a 01                 a3 = u8 [a0 + 0x1]
 73870: 7c 76                    s1 = u8 [a0]
 73872: 7c 79 02                 a2 = u8 [a0 + 0x2]
 73875: 7c 75 03                 s0 = u8 [a0 + 0x3]
 73878: 97 aa 08                 a3 = a3 << 0x8
 73881: d4 6a 0a                 a3 = a3 | s1
 73884: 97 99 10                 a2 = a2 << 0x10
 73887: 97 55 18                 s0 = s0 << 0x18
 73890: d4 59 09                 a2 = a2 | s0
 73893: d4 a9 09                 a2 = a2 | a3
 73896: 7c 7a 05                 a3 = u8 [a0 + 0x5]
 73899: 7c 75 04                 s0 = u8 [a0 + 0x4]
 73902: 7c 76 06                 s1 = u8 [a0 + 0x6]
 73905: 7c 77 07                 a0 = u8 [a0 + 0x7]
 73908: 97 aa 08                 a3 = a3 << 0x8
 73911: d4 5a 0a                 a3 = a3 | s0
 73914: 97 66 10                 s1 = s1 << 0x10
 73917: 97 77 18                 a0 = a0 << 0x18
 73920: d4 67 07                 a0 = a0 | s1
 73923: d4 a7 07                 a0 = a0 | a3
 73926: 97 77 20                 a0 = a0 << 0x20
 73929: d4 97 06                 s1 = a0 | a2
 73932: d3 36 07                 a0 = s1 ^ t1
 73935: 82 1a 38                 a3 = u64 [sp + 0x38]
 73938: 97 a9 20                 a2 = a3 << 0x20
 73941: c8 a9 09                 a2 = a2 + a3
 73944: c8 79 09                 a2 = a2 + a0
 73947: 82 1a 40                 a3 = u64 [sp + 0x40]
 73950: e0 7a 07                 a0 = a3 & ~a0
 73953: d2 97 07                 a0 = a0 & a2
 73956: 01                       fallthrough
      :                          @5781
 73957: 51 07 24                 jump @5784 if a0 == 0
      :                          @5782
 73960: 6a 79                    a2 = ctz a0
 73962: 98 99 03                 a2 = a2 >> 0x3
 73965: c8 c9 09                 a2 = a2 + a5
 73968: d2 89 0a                 a3 = a2 & a1
 73971: 97 a9 04                 a2 = a3 << 0x4
 73974: c9 9b 09                 a2 = a4 - a2
 73977: 82 99                    a2 = u64 [a2]
 73979: 95 75 ff                 s0 = a0 + 0xffffffffffffffff
 73982: d2 57 07                 a0 = a0 & s0
 73985: 82 15 48                 s0 = u64 [sp + 0x48]
 73988: ab 59 e1                 jump @5781 if a2 != s0
      :                          @5783
 73991: 28 1a                    jump @5786
      :                          @5784
 73993: 97 67 01                 a0 = s1 << 0x1
 73996: 82 19 40                 a2 = u64 [sp + 0x40]
 73999: d2 69 09                 a2 = a2 & s1
 74002: d2 97 07                 a0 = a0 & a2
 74005: 52 07 2b                 jump @5789 if a0 != 0
      :                          @5785
 74008: 95 44 08                 t2 = t2 + 0x8
 74011: c8 4c 0c                 a5 = a5 + t2
 74014: 28 67 ff                 jump @5780
      :                          @5786
 74017: 9a a7                    a0 = -a3
 74019: 97 77 04                 a0 = a0 << 0x4
 74022: c8 72 02                 t0 = t0 + a0
 74025: 81 27 f8                 a0 = i32 [t0 + 0xfffffffffffffff8]
 74028: 01                       fallthrough
      :                          @5787
 74029: 83 77 01                 i32 a0 = a0 + 0x1
 74032: 7a 27 f8                 u32 [t0 + 0xfffffffffffffff8] = a0
 74035: 82 17 20                 a0 = u64 [sp + 0x20]
 74038: 82 19 30                 a2 = u64 [sp + 0x30]
 74041: ab 79 fe fe              jump @5779 if a2 != a0
      :                          @5788
 74045: 28 13 02                 jump @5803
      :                          @5789
 74048: 82 19 28                 a2 = u64 [sp + 0x28]
 74051: d2 89 09                 a2 = a2 & a1
 74054: c8 92 07                 a0 = t0 + a2
 74057: 7c 7a 01                 a3 = u8 [a0 + 0x1]
 74060: 7c 7b                    a4 = u8 [a0]
 74062: 7c 7c 02                 a5 = u8 [a0 + 0x2]
 74065: 7c 76 03                 s1 = u8 [a0 + 0x3]
 74068: 97 aa 08                 a3 = a3 << 0x8
 74071: d4 ba 0a                 a3 = a3 | a4
 74074: 97 cc 10                 a5 = a5 << 0x10
 74077: 97 66 18                 s1 = s1 << 0x18
 74080: d4 6c 0c                 a5 = a5 | s1
 74083: d4 ca 0a                 a3 = a3 | a5
 74086: 7c 7b 05                 a4 = u8 [a0 + 0x5]
 74089: 7c 7c 04                 a5 = u8 [a0 + 0x4]
 74092: 7c 76 06                 s1 = u8 [a0 + 0x6]
 74095: 7c 77 07                 a0 = u8 [a0 + 0x7]
 74098: 97 bb 08                 a4 = a4 << 0x8
 74101: d4 cb 0b                 a4 = a4 | a5
 74104: 97 66 10                 s1 = s1 << 0x10
 74107: 97 77 18                 a0 = a0 << 0x18
 74110: d4 67 07                 a0 = a0 | s1
 74113: d4 b7 07                 a0 = a0 | a4
 74116: 97 77 20                 a0 = a0 << 0x20
 74119: d4 a7 07                 a0 = a0 | a3
 74122: 82 1a 40                 a3 = u64 [sp + 0x40]
 74125: d2 a7 07                 a0 = a0 & a3
 74128: 52 07 5d                 jump @5792 if a0 != 0
      :                          @5790
 74131: 33 0a 08                 a3 = 0x8
 74134: 82 13 40                 t1 = u64 [sp + 0x40]
 74137: 01                       fallthrough
      :                          @5791
 74138: c8 a9 09                 a2 = a2 + a3
 74141: d2 89 09                 a2 = a2 & a1
 74144: c8 92 07                 a0 = t0 + a2
 74147: 7c 7b 01                 a4 = u8 [a0 + 0x1]
 74150: 7c 7c                    a5 = u8 [a0]
 74152: 7c 76 02                 s1 = u8 [a0 + 0x2]
 74155: 7c 75 03                 s0 = u8 [a0 + 0x3]
 74158: 97 bb 08                 a4 = a4 << 0x8
 74161: d4 cb 0b                 a4 = a4 | a5
 74164: 97 66 10                 s1 = s1 << 0x10
 74167: 97 55 18                 s0 = s0 << 0x18
 74170: d4 65 05                 s0 = s0 | s1
 74173: d4 5b 0b                 a4 = a4 | s0
 74176: 7c 7c 05                 a5 = u8 [a0 + 0x5]
 74179: 7c 76 04                 s1 = u8 [a0 + 0x4]
 74182: 7c 75 06                 s0 = u8 [a0 + 0x6]
 74185: 7c 77 07                 a0 = u8 [a0 + 0x7]
 74188: 97 cc 08                 a5 = a5 << 0x8
 74191: d4 6c 0c                 a5 = a5 | s1
 74194: 97 55 10                 s0 = s0 << 0x10
 74197: 97 77 18                 a0 = a0 << 0x18
 74200: d4 57 07                 a0 = a0 | s0
 74203: d4 c7 07                 a0 = a0 | a5
 74206: 97 77 20                 a0 = a0 << 0x20
 74209: d4 b7 07                 a0 = a0 | a4
 74212: d2 37 07                 a0 = a0 & t1
 74215: 95 aa 08                 a3 = a3 + 0x8
 74218: 51 07 b0                 jump @5791 if a0 == 0
      :                          @5792
 74221: 6a 77                    a0 = ctz a0
 74223: 98 77 03                 a0 = a0 >> 0x3
 74226: c8 97 07                 a0 = a0 + a2
 74229: d2 87 09                 a2 = a0 & a1
 74232: c8 92 07                 a0 = t0 + a2
 74235: 7d 77                    a0 = i8 [a0]
 74237: 57 07 16                 jump @5794 if a0 <s 0
      :                          @5793
 74240: 82 27                    a0 = u64 [t0]
 74242: 82 19 40                 a2 = u64 [sp + 0x40]
 74245: d2 97 07                 a0 = a0 & a2
 74248: 6a 79                    a2 = ctz a0
 74250: 98 99 03                 a2 = a2 >> 0x3
 74253: c8 92 07                 a0 = t0 + a2
 74256: 7c 77                    a0 = u8 [a0]
 74258: 01                       fallthrough
      :                          @5794
 74259: 82 1a 78                 a3 = u64 [sp + 0x78]
 74262: 8e aa                    a3 = a3 >u 0
 74264: 84 7b 01                 a4 = a0 & 0x1
 74267: 88 b7 01                 a0 = a4 <u 0x1
 74270: d4 a7 07                 a0 = a0 | a3
 74273: 51 07 3f                 jump @5796 if a0 == 0
      :                          @5795
 74276: 82 17 78                 a0 = u64 [sp + 0x78]
 74279: c9 b7 07                 a0 = a0 - a4
 74282: 7b 17 78                 u64 [sp + 0x78] = a0
 74285: 95 97 f8                 a0 = a2 + 0xfffffffffffffff8
 74288: d2 87 07                 a0 = a0 & a1
 74291: c8 27 07                 a0 = a0 + t0
 74294: c8 92 08                 a1 = t0 + a2
 74297: 82 1a 10                 a3 = u64 [sp + 0x10]
 74300: 78 8a                    u8 [a1] = a3
 74302: 78 7a 08                 u8 [a0 + 0x8] = a3
 74305: 82 18 80 00              a1 = u64 [sp + 0x80]
 74309: 33 07                    a0 = 0
 74311: 95 88 01                 a1 = a1 + 0x1
 74314: 7b 18 80 00              u64 [sp + 0x80] = a1
 74318: 97 99 04                 a2 = a2 << 0x4
 74321: c9 92 02                 t0 = t0 - a2
 74324: 82 18 48                 a1 = u64 [sp + 0x48]
 74327: 7b 28 f0                 u64 [t0 + 0xfffffffffffffff0] = a1
 74330: 48 12 f8                 u32 [t0 + 4294967288] = 0
 74333: 28 d0 fe                 jump @5787
      :                          @5796
 74336: 7b 1b                    u64 [sp] = a4
 74338: 95 17 68                 a0 = sp + 0x68
 74341: 95 18 88 00              a1 = sp + 0x88
 74345: 50 20 ae 03 c7 61 ff     ra = 942, jump @2323
      :                          @5797 [@dyn 471]
 74352: 82 18 70                 a1 = u64 [sp + 0x70]
 74355: 82 12 68                 t0 = u64 [sp + 0x68]
 74358: 82 16 28                 s1 = u64 [sp + 0x28]
 74361: d2 86 06                 s1 = s1 & a1
 74364: c8 62 07                 a0 = t0 + s1
 74367: 7c 79 01                 a2 = u8 [a0 + 0x1]
 74370: 7c 7a                    a3 = u8 [a0]
 74372: 7c 7b 02                 a4 = u8 [a0 + 0x2]
 74375: 7c 7c 03                 a5 = u8 [a0 + 0x3]
 74378: 97 99 08                 a2 = a2 << 0x8
 74381: d4 a9 09                 a2 = a2 | a3
 74384: 97 bb 10                 a4 = a4 << 0x10
 74387: 97 cc 18                 a5 = a5 << 0x18
 74390: d4 cb 0b                 a4 = a4 | a5
 74393: d4 b9 09                 a2 = a2 | a4
 74396: 7c 7a 05                 a3 = u8 [a0 + 0x5]
 74399: 7c 7b 04                 a4 = u8 [a0 + 0x4]
 74402: 7c 7c 06                 a5 = u8 [a0 + 0x6]
 74405: 7c 77 07                 a0 = u8 [a0 + 0x7]
 74408: 97 aa 08                 a3 = a3 << 0x8
 74411: d4 ba 0a                 a3 = a3 | a4
 74414: 97 cc 10                 a5 = a5 << 0x10
 74417: 97 77 18                 a0 = a0 << 0x18
 74420: d4 c7 07                 a0 = a0 | a5
 74423: d4 a7 07                 a0 = a0 | a3
 74426: 97 77 20                 a0 = a0 << 0x20
 74429: d4 97 07                 a0 = a0 | a2
 74432: 82 19 40                 a2 = u64 [sp + 0x40]
 74435: d2 97 07                 a0 = a0 & a2
 74438: 52 07 5d                 jump @5800 if a0 != 0
      :                          @5798
 74441: 33 09 08                 a2 = 0x8
 74444: 82 13 40                 t1 = u64 [sp + 0x40]
 74447: 01                       fallthrough
      :                          @5799
 74448: c8 96 06                 s1 = s1 + a2
 74451: d2 86 06                 s1 = s1 & a1
 74454: c8 62 07                 a0 = t0 + s1
 74457: 7c 7a 01                 a3 = u8 [a0 + 0x1]
 74460: 7c 7b                    a4 = u8 [a0]
 74462: 7c 7c 02                 a5 = u8 [a0 + 0x2]
 74465: 7c 75 03                 s0 = u8 [a0 + 0x3]
 74468: 97 aa 08                 a3 = a3 << 0x8
 74471: d4 ba 0a                 a3 = a3 | a4
 74474: 97 cc 10                 a5 = a5 << 0x10
 74477: 97 55 18                 s0 = s0 << 0x18
 74480: d4 5c 0c                 a5 = a5 | s0
 74483: d4 ca 0a                 a3 = a3 | a5
 74486: 7c 7b 05                 a4 = u8 [a0 + 0x5]
 74489: 7c 7c 04                 a5 = u8 [a0 + 0x4]
 74492: 7c 75 06                 s0 = u8 [a0 + 0x6]
 74495: 7c 77 07                 a0 = u8 [a0 + 0x7]
 74498: 97 bb 08                 a4 = a4 << 0x8
 74501: d4 cb 0b                 a4 = a4 | a5
 74504: 97 55 10                 s0 = s0 << 0x10
 74507: 97 77 18                 a0 = a0 << 0x18
 74510: d4 57 07                 a0 = a0 | s0
 74513: d4 b7 07                 a0 = a0 | a4
 74516: 97 77 20                 a0 = a0 << 0x20
 74519: d4 a7 07                 a0 = a0 | a3
 74522: d2 37 07                 a0 = a0 & t1
 74525: 95 99 08                 a2 = a2 + 0x8
 74528: 51 07 b0                 jump @5799 if a0 == 0
      :                          @5800
 74531: 6a 77                    a0 = ctz a0
 74533: 98 77 03                 a0 = a0 >> 0x3
 74536: c8 67 07                 a0 = a0 + s1
 74539: d2 87 09                 a2 = a0 & a1
 74542: c8 92 07                 a0 = t0 + a2
 74545: 7d 77                    a0 = i8 [a0]
 74547: 82 10 08                 ra = u64 [sp + 0x8]
 74550: 57 07 15                 jump @5802 if a0 <s 0
      :                          @5801
 74553: 82 27                    a0 = u64 [t0]
 74555: 82 19 40                 a2 = u64 [sp + 0x40]
 74558: d2 97 07                 a0 = a0 & a2
 74561: 6a 79                    a2 = ctz a0
 74563: 98 99 03                 a2 = a2 >> 0x3
 74566: 82 1b                    a4 = u64 [sp]
 74568: 28 dc fe                 jump @5795
      :                          @5802
 74571: 82 1b                    a4 = u64 [sp]
 74573: 28 d7 fe                 jump @5795
      :                          @5803
 74576: 82 14 80 00              t2 = u64 [sp + 0x80]
 74580: 82 1a 68                 a3 = u64 [sp + 0x68]
 74583: 51 04 1c 01              jump @5833 if t2 == 0
      :                          @5804
 74587: 82 a7                    a0 = u64 [a3]
 74589: 95 a9 08                 a2 = a3 + 0x8
 74592: 82 1c 40                 a5 = u64 [sp + 0x40]
 74595: 64 a0                    ra = a3
 74597: e0 7c 0b                 a4 = a5 & ~a0
 74600: 33 03 03                 t1 = 0x3
 74603: 33 07 01                 a0 = 0x1
 74606: 7b 1a 38                 u64 [sp + 0x38] = a3
 74609: 28 11                    jump @5806
      :                          @5805
 74611: 95 44 ff                 t2 = t2 + 0xffffffffffffffff
 74614: cb b7 08                 a1 = a0 /u a4
 74617: ca a8 07                 a0 = a1 * a3
 74620: 64 2b                    a4 = t0
 74622: 51 04 ae 00              jump @5823 if t2 == 0
      :                          @5806
 74626: 51 0b 09                 jump @5809 if a4 == 0
      :                          @5807
 74629: 52 00 14                 jump @5810 if ra != 0
      :                          @5808
 74632: 28 a4 00                 jump @5823
      :                          @5809
 74635: 82 9a                    a3 = u64 [a2]
 74637: e0 ac 0b                 a4 = a5 & ~a3
 74640: 95 00 80                 ra = ra + 0xffffffffffffff80
 74643: 95 99 08                 a2 = a2 + 0x8
 74646: 51 0b f5                 jump @5809 if a4 == 0
      :                          @5810
 74649: 95 ba ff                 a3 = a4 + 0xffffffffffffffff
 74652: d2 ba 02                 t0 = a3 & a4
 74655: 6a ba                    a3 = ctz a4
 74657: 97 aa 01                 a3 = a3 << 0x1
 74660: 84 aa f0 00              a3 = a3 & 0xf0
 74664: c9 a0 0a                 a3 = ra - a3
 74667: 81 a6 f8                 s1 = i32 [a3 + 0xfffffffffffffff8]
 74670: 82 a5 f0                 s0 = u64 [a3 + 0xfffffffffffffff0]
 74673: 88 6a 03                 a3 = s1 <u 0x3
 74676: 95 5b fe                 a4 = s0 + 0xfffffffffffffffe
 74679: 8e bb                    a4 = a4 >u 0
 74681: d4 ba 0a                 a3 = a3 | a4
 74684: 52 0a 0f                 jump @5812 if a3 != 0
      :                          @5811
 74687: 83 68 3e                 i32 a1 = s1 + 0x3e
 74690: 9b 8a 01                 a3 = 0x1 << a1
 74693: 64 75                    s0 = a0
 74695: 64 a6                    s1 = a3
 74697: 28 4b                    jump @5819
      :                          @5812
 74699: 33 0a 01                 a3 = 0x1
 74702: aa a6 38                 jump @5817 if s1 == a3
      :                          @5813
 74705: 7b 12 48                 u64 [sp + 0x48] = t0
 74708: 64 5b                    a4 = s0
 74710: 33 08 02                 a1 = 0x2
 74713: aa 86 23                 jump @5816 if s1 == a1
      :                          @5814
 74716: 83 62 ff                 i32 t0 = s1 + 0xffffffffffffffff
 74719: 33 0a 01                 a3 = 0x1
 74722: 64 5b                    a4 = s0
 74724: 01                       fallthrough
      :                          @5815
 74725: 64 26                    s1 = t0
 74727: 84 2c 01                 a5 = t0 & 0x1
 74730: 33 08 01                 a1 = 0x1
 74733: db cb 08                 a1 = a4 if a5 != 0
 74736: ca a8 0a                 a3 = a1 * a3
 74739: 8b 22 01                 i32 t0 = t0 >> 0x1
 74742: ca bb 0b                 a4 = a4 * a4
 74745: ac 63 ec                 jump @5815 if t1 <u s1
      :                          @5816
 74748: ca ab 06                 s1 = a4 * a3
 74751: 82 1c 40                 a5 = u64 [sp + 0x40]
 74754: 82 12 48                 t0 = u64 [sp + 0x48]
 74757: 01                       fallthrough
      :                          @5817
 74758: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 74761: ca 56 0a                 a3 = s1 * s0
 74764: 51 0a 15                 jump @5821 if a3 == 0
      :                          @5818
 74767: 64 75                    s0 = a0
 74769: 64 a6                    s1 = a3
 74771: 01                       fallthrough
      :                          @5819
 74772: 64 6b                    a4 = s1
 74774: cd 65 06                 s1 = s0 %u s1
 74777: 64 b5                    s0 = a4
 74779: 52 06 f9                 jump @5819 if s1 != 0
      :                          @5820
 74782: 28 55 ff                 jump @5805
      :                          @5821
 74785: 51 07 c3 00              jump @5844 if a0 == 0
      :                          @5822
 74789: 33 0a                    a3 = 0
 74791: 64 7b                    a4 = a0
 74793: 28 4a ff                 jump @5805
      :                          @5823
 74796: 82 1a 38                 a3 = u64 [sp + 0x38]
 74799: 01                       fallthrough
      :                          @5824
 74800: 82 19 70                 a2 = u64 [sp + 0x70]
 74803: 51 09 49                 jump @5834 if a2 == 0
      :                          @5825
 74806: 97 98 04                 a1 = a2 << 0x4
 74809: c8 89 09                 a2 = a2 + a1
 74812: 95 95 19                 s0 = a2 + 0x19
 74815: 33 09 00 00 01           a2 = 0x10000
 74820: ac 59 38                 jump @5834 if a2 <u s0
      :                          @5826
 74823: c9 8a 08                 a1 = a3 - a1
 74826: 95 88 f0                 a1 = a1 + 0xfffffffffffffff0
 74829: 33 0a c0 22 03           a3 = 0x322c0
 74834: 95 a9 00 00 01           a2 = a3 + 0x10000
 74839: 01                       fallthrough
      :                          @5827
 74840: 82 9a                    a3 = u64 [a2]
 74842: c9 a9 0b                 a4 = a2 - a3
 74845: ab 8b 1f                 jump @5834 if a4 != a1
      :                          @5828
 74848: c9 5a 0b                 a4 = a3 - s0
 74851: 01                       fallthrough
      :                          @5829
 74852: 82 9c                    a5 = u64 [a2]
 74854: ab ac f2                 jump @5827 if a5 != a3
      :                          @5830
 74857: 7b 9b                    u64 [a2] = a4
 74859: 33 06                    s1 = 0
 74861: 01                       fallthrough
      :                          @5831
 74862: ab ac ea                 jump @5827 if a5 != a3
      :                          @5832
 74865: 28 0b                    jump @5834
      :                          @5833
 74867: 33 07 01                 a0 = 0x1
 74870: 82 19 70                 a2 = u64 [sp + 0x70]
 74873: 52 09 bd                 jump @5825 if a2 != 0
      :                          @5834
 74876: 82 18 50                 a1 = u64 [sp + 0x50]
 74879: 51 08 2f                 jump @5841 if a1 == 0
      :                          @5835
 74882: 33 09 00 20              a2 = 0x2000
 74886: ac 89 28                 jump @5841 if a2 <u a1
      :                          @5836
 74889: 82 15 58                 s0 = u64 [sp + 0x58]
 74892: 97 88 03                 a1 = a1 << 0x3
 74895: 33 09 c0 22 03           a2 = 0x322c0
 74900: 95 99 00 00 01           a2 = a2 + 0x10000
 74905: 01                       fallthrough
      :                          @5837
 74906: 82 9a                    a3 = u64 [a2]
 74908: c9 a9 0b                 a4 = a2 - a3
 74911: ab 5b 0f                 jump @5841 if a4 != s0
      :                          @5838
 74914: c9 8a 0b                 a4 = a3 - a1
 74917: 01                       fallthrough
      :                          @5839
 74918: 82 9c                    a5 = u64 [a2]
 74920: ab ac f2                 jump @5837 if a5 != a3
      :                          @5840
 74923: 7b 9b                    u64 [a2] = a4
 74925: 01                       fallthrough
      :                          @5841
 74926: 82 10 b8 00              ra = u64 [sp + 0xb8]
 74930: 82 15 b0 00              s0 = u64 [sp + 0xb0]
 74934: 82 16 a8 00              s1 = u64 [sp + 0xa8]
 74938: 95 11 c0 00              sp = sp + 0xc0
 74942: 32 00                    ret
      :                          @5842
 74944: 33 00 b0 03              ra = 0x3b0
 74948: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 74951: 7b 10 20                 u64 [sp + 0x20] = ra
 74954: 7b 15 18                 u64 [sp + 0x18] = s0
 74957: 7b 16 10                 u64 [sp + 0x10] = s1
 74960: 33 06 c0 22 03           s1 = 0x322c0
 74965: 33 02 00 00 01           t0 = 0x10000
 74970: c8 26 09                 a2 = s1 + t0
 74973: 28 c2 65 ff              jump @2385
      :                          @5843 [@dyn 472]
 74977: 28 38 fa                 jump @5775
      :                          @5844
 74980: 00                       trap
      :                          @5845
 74981: 51 08 4a                 jump @5854 if a1 == 0
      :                          @5846
 74984: 64 7a                    a3 = a0
 74986: 64 8b                    a4 = a1
 74988: 01                       fallthrough
      :                          @5847
 74989: 64 b9                    a2 = a4
 74991: cd ba 0b                 a4 = a3 %u a4
 74994: 64 9a                    a3 = a2
 74996: 52 0b f9                 jump @5847 if a4 != 0
      :                          @5848
 74999: 33 0b 01                 a4 = 0x1
 75002: ab b9 39                 jump @5855 if a2 != a4
      :                          @5849
 75005: 64 7a                    a3 = a0
 75007: 01                       fallthrough
      :                          @5850
 75008: cd 8a 0c                 a5 = a3 %u a1
 75011: 33 0a 01                 a3 = 0x1
 75014: 64 b9                    a2 = a4
 75016: aa ac 20                 jump @5853 if a5 == a3
      :                          @5851
 75019: d8 89 0b                 a4 = a2 <u a1
 75022: 85 b2 01                 t0 = a4 ^ 0x1
 75025: c8 9b 0b                 a4 = a4 + a2
 75028: d8 b8 0a                 a3 = a1 <u a4
 75031: d4 a2 02                 t0 = t0 | a3
 75034: ca 7c 0a                 a3 = a5 * a0
 75037: 51 02 e3                 jump @5850 if t0 == 0
      :                          @5852
 75040: 33 0a                    a3 = 0
 75042: 33 07                    a0 = 0
 75044: 64 98                    a1 = a2
 75046: 32 00                    ret
      :                          @5853
 75048: 33 07 01                 a0 = 0x1
 75051: 64 98                    a1 = a2
 75053: 32 00                    ret
      :                          @5854
 75055: 51 17 01 0c              jump @5856 if a0 == 1
      :                          @5855
 75059: 33 0a                    a3 = 0
 75061: 33 07                    a0 = 0
 75063: 64 98                    a1 = a2
 75065: 32 00                    ret
      :                          @5856
 75067: 00                       trap
      :                          @5857
 75068: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 75071: 7b 10 38                 u64 [sp + 0x38] = ra
 75074: 7b 15 30                 u64 [sp + 0x30] = s0
 75077: 7b 16 28                 u64 [sp + 0x28] = s1
 75080: 64 70                    ra = a0
 75082: 84 77 01                 a0 = a0 & 0x1
 75085: 52 07 25                 jump @5859 if a0 != 0
      :                          @5858
 75088: 3a 08 78 12 03           a1 = u64 [0x31278]
 75093: 49 11 20                 u64 [sp + 32] = 0
 75096: 97 89 0d                 a2 = a1 << 0xd
 75099: d3 98 08                 a1 = a1 ^ a2
 75102: 98 89 07                 a2 = a1 >> 0x7
 75105: d3 98 08                 a1 = a1 ^ a2
 75108: 97 89 11                 a2 = a1 << 0x11
 75111: d3 98 08                 a1 = a1 ^ a2
 75114: 3e 08 78 12 03           u64 [0x31278] = a1
 75119: 28 e8 00                 jump @5878
      :                          @5859
 75122: 33 09                    a2 = 0
 75124: 95 07 fe                 a0 = ra + 0xfffffffffffffffe
 75127: 7b 17 18                 u64 [sp + 0x18] = a0
 75130: 95 07 ff                 a0 = ra + 0xffffffffffffffff
 75133: 7b 17 10                 u64 [sp + 0x10] = a0
 75136: 3a 07 d8 10 03           a0 = u64 [0x310d8]
 75141: 7b 17 08                 u64 [sp + 0x8] = a0
 75144: 33 0a 05                 a3 = 0x5
 75147: 33 0c 03                 a5 = 0x3
 75150: 01                       fallthrough
      :                          @5860
 75151: 95 97 fb                 a0 = a2 + 0xfffffffffffffffb
 75154: 88 77 01                 a0 = a0 <u 0x1
 75157: 7b 17 20                 u64 [sp + 0x20] = a0
 75160: aa a9 bf 00              jump @5878 if a2 == a3
      :                          @5861
 75164: 3a 07 78 12 03           a0 = u64 [0x31278]
 75169: 97 78 0d                 a1 = a0 << 0xd
 75172: d3 87 07                 a0 = a0 ^ a1
 75175: 98 78 07                 a1 = a0 >> 0x7
 75178: d3 87 07                 a0 = a0 ^ a1
 75181: 97 78 11                 a1 = a0 << 0x11
 75184: d3 87 07                 a0 = a0 ^ a1
 75187: 3e 07 78 12 03           u64 [0x31278] = a0
 75192: 82 18 08                 a1 = u64 [sp + 0x8]
 75195: ca 87 07                 a0 = a0 * a1
 75198: 82 18 18                 a1 = u64 [sp + 0x18]
 75201: cd 87 0b                 a4 = a0 %u a1
 75204: 95 bb 02                 a4 = a4 + 0x2
 75207: cd 0b 07                 a0 = a4 %u ra
 75210: 33 05 01                 s0 = 0x1
 75213: 64 02                    t0 = ra
 75215: 33 06 01                 s1 = 0x1
 75218: 51 07 49                 jump @5872 if a0 == 0
      :                          @5862
 75221: 33 06 01                 s1 = 0x1
 75224: 64 03                    t1 = ra
 75226: 28 18                    jump @5865
      :                          @5863
 75228: 64 72                    t0 = a0
 75230: 01                       fallthrough
      :                          @5864
 75231: d2 23 07                 a0 = t1 & t0
 75234: 84 78 02                 a1 = a0 & 0x2
 75237: 9a 64                    t2 = -s1
 75239: cd 23 07                 a0 = t1 %u t0
 75242: db 84 06                 s1 = t2 if a1 != 0
 75245: 64 23                    t1 = t0
 75247: 51 07 2c                 jump @5872 if a0 == 0
      :                          @5865
 75250: 84 78 01                 a1 = a0 & 0x1
 75253: 52 08 e7                 jump @5863 if a1 != 0
      :                          @5866
 75256: 84 38 07                 a1 = t1 & 0x7
 75259: aa c8 06                 jump @5868 if a1 == a5
      :                          @5867
 75262: ab a8 12                 jump @5870 if a1 != a3
      :                          @5868
 75265: 98 72 01                 t0 = a0 >> 0x1
 75268: 84 78 02                 a1 = a0 & 0x2
 75271: 9a 66                    s1 = -s1
 75273: 64 27                    a0 = t0
 75275: 51 08 f6                 jump @5868 if a1 == 0
      :                          @5869
 75278: 28 d1                    jump @5864
      :                          @5870
 75280: 84 78 02                 a1 = a0 & 0x2
 75283: 98 77 01                 a0 = a0 >> 0x1
 75286: 51 08 fa                 jump @5870 if a1 == 0
      :                          @5871
 75289: 28 c3                    jump @5863
      :                          @5872
 75291: 83 99 01                 i32 a2 = a2 + 0x1
 75294: 82 17 10                 a0 = u64 [sp + 0x10]
 75297: 28 0b                    jump @5874
      :                          @5873
 75299: 98 87 01                 a0 = a1 >> 0x1
 75302: ca bb 0b                 a4 = a4 * a4
 75305: ae 8c 16                 jump @5876 if a5 >=u a1
      :                          @5874
 75308: 64 78                    a1 = a0
 75310: 84 77 02                 a0 = a0 & 0x2
 75313: cd 0b 0b                 a4 = a4 %u ra
 75316: 51 07 ef                 jump @5873 if a0 == 0
      :                          @5875
 75319: ca 5b 07                 a0 = a4 * s0
 75322: cd 07 05                 s0 = a0 %u ra
 75325: 28 e6                    jump @5873
      :                          @5876
 75327: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 75330: 8e 27                    a0 = t0 >u 0
 75332: 88 68 01                 a1 = s1 <u 0x1
 75335: d4 87 07                 a0 = a0 | a1
 75338: 52 07 0d                 jump @5878 if a0 != 0
      :                          @5877
 75341: c9 65 05                 s0 = s0 - s1
 75344: ce 05 07                 a0 = s0 %s ra
 75347: 51 07 3c ff              jump @5860 if a0 == 0
      :                          @5878
 75351: 82 17 20                 a0 = u64 [sp + 0x20]
 75354: 82 10 38                 ra = u64 [sp + 0x38]
 75357: 82 15 30                 s0 = u64 [sp + 0x30]
 75360: 82 16 28                 s1 = u64 [sp + 0x28]
 75363: 95 11 40                 sp = sp + 0x40
 75366: 32 00                    ret
      :                          @5879
 75368: c8 a2 09                 a2 = t0 + a3
 75371: 98 99 01                 a2 = a2 >> 0x1
 75374: d6 99 0b                 a4 = a2 mulhu a2
 75377: ca 99 0c                 a5 = a2 * a2
 75380: db b3 0c                 a5 = t1 if a4 != 0
 75383: aa 8c 17                 jump @5882 if a5 == a1
      :                          @5880
 75386: d8 8c 0b                 a4 = a5 <u a1
 75389: 95 9c 01                 a5 = a2 + 0x1
 75392: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 75395: da b9 02                 t0 = a2 if a4 == 0
 75398: db bc 0a                 a3 = a5 if a4 != 0
 75401: ae a2 df                 jump @5879 if t0 >=u a3
      :                          @5881
 75404: 28 0b                    jump @5884
      :                          @5882
 75406: 64 92                    t0 = a2
 75408: 28 07                    jump @5884
      :                          @5883
 75410: 64 ba                    a3 = a4
 75412: aa 34 3e                 jump @5888 if t2 == t1
      :                          @5884
 75415: 95 22 01                 t0 = t0 + 0x1
 75418: ca 22 09                 a2 = t0 * t0
 75421: c9 89 03                 t1 = a2 - a1
 75424: 33 0c                    a5 = 0
 75426: 64 3a                    a3 = t1
 75428: 01                       fallthrough
      :                          @5885
 75429: c8 ca 0b                 a4 = a3 + a5
 75432: 98 bb 01                 a4 = a4 >> 0x1
 75435: ca bb 04                 t2 = a4 * a4
 75438: d6 bb 05                 s0 = a4 mulhu a4
 75441: 33 09 ff                 a2 = 0xffffffffffffffff
 75444: da 54 09                 a2 = t2 if s0 == 0
 75447: aa 39 db                 jump @5883 if a2 == t1
      :                          @5886
 75450: d8 39 09                 a2 = a2 <u t1
 75453: 95 b5 01                 s0 = a4 + 0x1
 75456: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 75459: da 9b 0a                 a3 = a4 if a2 == 0
 75462: db 95 0c                 a5 = s0 if a2 != 0
 75465: ae ca dc                 jump @5885 if a3 >=u a5
      :                          @5887
 75468: ca aa 04                 t2 = a3 * a3
 75471: ab 34 c8                 jump @5884 if t2 != t1
      :                          @5888
 75474: c9 a2 08                 a1 = t0 - a3
 75477: c8 2a 0a                 a3 = a3 + t0
 75480: 7b 78 08                 u64 [a0 + 0x8] = a1
 75483: 7b 7a 10                 u64 [a0 + 0x10] = a3
 75486: 33 08 01                 a1 = 0x1
 75489: 7b 78                    u64 [a0] = a1
 75491: 82 15 08                 s0 = u64 [sp + 0x8]
 75494: 95 11 10                 sp = sp + 0x10
 75497: 32 00                    ret
      :                          @5889
 75499: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 75502: 7b 10 38                 u64 [sp + 0x38] = ra
 75505: 7b 15 30                 u64 [sp + 0x30] = s0
 75508: 7b 16 28                 u64 [sp + 0x28] = s1
 75511: 64 85                    s0 = a1
 75513: 49 11 10                 u64 [sp + 16] = 0
 75516: 33 0a 08                 a3 = 0x8
 75519: 7b 1a 18                 u64 [sp + 0x18] = a3
 75522: 84 89 01                 a2 = a1 & 0x1
 75525: 49 11 20                 u64 [sp + 32] = 0
 75528: 7b 17                    u64 [sp] = a0
 75530: 33 08                    a1 = 0
 75532: 52 09 3c                 jump @5895 if a2 != 0
      :                          @5890
 75535: 33 07 02                 a0 = 0x2
 75538: 28 1b                    jump @5892
      :                          @5891
 75540: 97 89 03                 a2 = a1 << 0x3
 75543: c8 a9 09                 a2 = a2 + a3
 75546: 7b 97                    u64 [a2] = a0
 75548: 95 88 01                 a1 = a1 + 0x1
 75551: 98 56 01                 s1 = s0 >> 0x1
 75554: 84 59 02                 a2 = s0 & 0x2
 75557: 7b 18 20                 u64 [sp + 0x20] = a1
 75560: 64 65                    s0 = s1
 75562: 52 09 21                 jump @5896 if a2 != 0
      :                          @5892
 75565: 82 19 10                 a2 = u64 [sp + 0x10]
 75568: ab 98 e4                 jump @5891 if a1 != a2
      :                          @5893
 75571: 95 17 10                 a0 = sp + 0x10
 75574: 50 20 b2 03 0a 2c ff     ra = 946, jump @1581
      :                          @5894 [@dyn 473]
 75581: 33 07 02                 a0 = 0x2
 75584: 82 18 20                 a1 = u64 [sp + 0x20]
 75587: 82 1a 18                 a3 = u64 [sp + 0x18]
 75590: 28 ce                    jump @5891
      :                          @5895
 75592: 64 56                    s1 = s0
 75594: 01                       fallthrough
      :                          @5896
 75595: 14 05 ab aa aa aa aa aa aa aa s0 = 0xaaaaaaaaaaaaaaab
 75605: ca 56 07                 a0 = s1 * s0
 75608: 14 0a 00 00 00 00 55 55 55 55 a3 = 0x5555555500000000
 75618: 14 09 55 55 55 55 55 55 55 55 a2 = 0x5555555555555555
 75628: ae 79 e2 00              jump @5919 if a2 >=u a0
      :                          @5897
 75632: 55 16 19 4f              jump @5904 if s1 >=u 25
      :                          @5898
 75636: 54 16 01 2a              jump @5903 if s1 <=u 1
      :                          @5899
 75640: 82 17 10                 a0 = u64 [sp + 0x10]
 75643: ab 78 11                 jump @5902 if a1 != a0
      :                          @5900
 75646: 95 17 10                 a0 = sp + 0x10
 75649: 50 20 b4 03 bf 2b ff     ra = 948, jump @1581
      :                          @5901 [@dyn 474]
 75656: 82 18 20                 a1 = u64 [sp + 0x20]
 75659: 01                       fallthrough
      :                          @5902
 75660: 82 17 18                 a0 = u64 [sp + 0x18]
 75663: 97 89 03                 a2 = a1 << 0x3
 75666: c8 97 07                 a0 = a0 + a2
 75669: 7b 76                    u64 [a0] = s1
 75671: 95 88 01                 a1 = a1 + 0x1
 75674: 7b 18 20                 u64 [sp + 0x20] = a1
 75677: 01                       fallthrough
      :                          @5903
 75678: 82 17 20                 a0 = u64 [sp + 0x20]
 75681: 82 18 18                 a1 = u64 [sp + 0x18]
 75684: 82 19 10                 a2 = u64 [sp + 0x10]
 75687: 82 1a                    a3 = u64 [sp]
 75689: 7b a7 10                 u64 [a3 + 0x10] = a0
 75692: 7b a8 08                 u64 [a3 + 0x8] = a1
 75695: 7b a9                    u64 [a3] = a2
 75697: 82 10 38                 ra = u64 [sp + 0x38]
 75700: 82 15 30                 s0 = u64 [sp + 0x30]
 75703: 82 16 28                 s1 = u64 [sp + 0x28]
 75706: 95 11 40                 sp = sp + 0x40
 75709: 32 00                    ret
      :                          @5904
 75711: 33 09 05                 a2 = 0x5
 75714: 28 0e                    jump @5906
      :                          @5905
 75716: 82 19 08                 a2 = u64 [sp + 0x8]
 75719: 95 99 06                 a2 = a2 + 0x6
 75722: ca 99 07                 a0 = a2 * a2
 75725: ac 76 a7                 jump @5898 if s1 <u a0
      :                          @5906
 75728: 51 09 c8 00              jump @5924 if a2 == 0
      :                          @5907
 75732: cd 96 07                 a0 = s1 %u a2
 75735: 64 95                    s0 = a2
 75737: 51 07 31                 jump @5912 if a0 == 0
      :                          @5908
 75740: 64 57                    a0 = s0
 75742: 95 55 02                 s0 = s0 + 0x2
 75745: 51 05 b7 00              jump @5924 if s0 == 0
      :                          @5909
 75749: 7b 17 08                 u64 [sp + 0x8] = a0
 75752: cd 56 07                 a0 = s1 %u s0
 75755: 52 07 d9                 jump @5905 if a0 != 0
      :                          @5910
 75758: 28 4b                    jump @5916
      :                          @5911
 75760: 82 17 18                 a0 = u64 [sp + 0x18]
 75763: 97 89 03                 a2 = a1 << 0x3
 75766: c8 97 07                 a0 = a0 + a2
 75769: 7b 75                    u64 [a0] = s0
 75771: 95 88 01                 a1 = a1 + 0x1
 75774: cb 56 06                 s1 = s1 /u s0
 75777: cd 56 07                 a0 = s1 %u s0
 75780: 7b 18 20                 u64 [sp + 0x20] = a1
 75783: 52 07 d5                 jump @5908 if a0 != 0
      :                          @5912
 75786: 82 17 10                 a0 = u64 [sp + 0x10]
 75789: ab 78 e3                 jump @5911 if a1 != a0
      :                          @5913
 75792: 95 17 10                 a0 = sp + 0x10
 75795: 50 20 b6 03 2d 2b ff     ra = 950, jump @1581
      :                          @5914 [@dyn 475]
 75802: 82 18 20                 a1 = u64 [sp + 0x20]
 75805: 28 d3                    jump @5911
      :                          @5915
 75807: 82 17 18                 a0 = u64 [sp + 0x18]
 75810: 97 89 03                 a2 = a1 << 0x3
 75813: c8 97 07                 a0 = a0 + a2
 75816: 7b 75                    u64 [a0] = s0
 75818: 95 88 01                 a1 = a1 + 0x1
 75821: cb 56 06                 s1 = s1 /u s0
 75824: cd 56 07                 a0 = s1 %u s0
 75827: 7b 18 20                 u64 [sp + 0x20] = a1
 75830: 52 07 8e                 jump @5905 if a0 != 0
      :                          @5916
 75833: 82 17 10                 a0 = u64 [sp + 0x10]
 75836: ab 78 e3                 jump @5915 if a1 != a0
      :                          @5917
 75839: 95 17 10                 a0 = sp + 0x10
 75842: 50 20 b8 03 fe 2a ff     ra = 952, jump @1581
      :                          @5918 [@dyn 476]
 75849: 82 18 20                 a1 = u64 [sp + 0x20]
 75852: 28 d3                    jump @5915
      :                          @5919
 75854: 3a 0a e0 10 03           a3 = u64 [0x310e0]
 75859: 33 0b 03                 a4 = 0x3
 75862: 7b 15 08                 u64 [sp + 0x8] = s0
 75865: 28 20                    jump @5921
      :                          @5920
 75867: 82 17 18                 a0 = u64 [sp + 0x18]
 75870: 97 89 03                 a2 = a1 << 0x3
 75873: c8 97 07                 a0 = a0 + a2
 75876: 7b 7b                    u64 [a0] = a4
 75878: 95 88 01                 a1 = a1 + 0x1
 75881: d6 56 06                 s1 = s1 mulhu s0
 75884: 98 66 01                 s1 = s1 >> 0x1
 75887: ca 56 07                 a0 = s1 * s0
 75890: 7b 18 20                 u64 [sp + 0x20] = a1
 75893: ae a7 fb fe              jump @5897 if a0 >=u a3
      :                          @5921
 75897: 82 17 10                 a0 = u64 [sp + 0x10]
 75900: ab 78 df                 jump @5920 if a1 != a0
      :                          @5922
 75903: 95 17 10                 a0 = sp + 0x10
 75906: 64 a5                    s0 = a3
 75908: 50 20 ba 03 bc 2a ff     ra = 954, jump @1581
      :                          @5923 [@dyn 477]
 75915: 33 0b 03                 a4 = 0x3
 75918: 64 5a                    a3 = s0
 75920: 82 15 08                 s0 = u64 [sp + 0x8]
 75923: 82 18 20                 a1 = u64 [sp + 0x20]
 75926: 28 c5                    jump @5920
      :                          @5924
 75928: 00                       trap
      :                          @5925 [@dyn 478]
 75929: 82 13 40                 t1 = u64 [sp + 0x40]
 75932: 82 14 38                 t2 = u64 [sp + 0x38]
 75935: 97 39 03                 a2 = t1 << 0x3
 75938: 51 03 8d 00              jump @5936 if t1 == 0
      :                          @5926
 75942: 7b 13 10                 u64 [sp + 0x10] = t1
 75945: 98 37 3c                 a0 = t1 >> 0x3c
 75948: 52 07 f8 01              jump @5982 if a0 != 0
      :                          @5927
 75952: 88 77 01                 a0 = a0 <u 0x1
 75955: 97 72 03                 t0 = a0 << 0x3
 75958: 33 08 c0 22 03           a1 = 0x322c0
 75963: 33 00 c0 22 03           ra = 0x322c0
 75968: 33 03 00 00 01           t1 = 0x10000
 75973: c8 30 0a                 a3 = ra + t1
 75976: 01                       fallthrough
      :                          @5928
 75977: 82 a6                    s1 = u64 [a3]
 75979: c8 96 0b                 a4 = s1 + a2
 75982: ac 6b d5 01              jump @5981 if a4 <u s1
      :                          @5929
 75986: c8 2b 0c                 a5 = a4 + t0
 75989: d8 bc 05                 s0 = a5 <u a4
 75992: d8 c3 0c                 a5 = t1 <u a5
 75995: d4 5c 0c                 a5 = a5 | s0
 75998: 52 0c c5 01              jump @5981 if a5 != 0
      :                          @5930
 76002: c9 b0 0c                 a5 = ra - a4
 76005: c8 3c 0c                 a5 = a5 + t1
 76008: 84 c5 07                 s0 = a5 & 0x7
 76011: c8 5b 0b                 a4 = a4 + s0
 76014: 01                       fallthrough
      :                          @5931
 76015: 82 a7                    a0 = u64 [a3]
 76017: ab 67 d8                 jump @5928 if a0 != s1
      :                          @5932
 76020: 7b ab                    u64 [a3] = a4
 76022: c9 5c 07                 a0 = a5 - s0
 76025: 7b 17 20                 u64 [sp + 0x20] = a0
 76028: 7b 14                    u64 [sp] = t2
 76030: 64 48                    a1 = t2
 76032: 7b 19 08                 u64 [sp + 0x8] = a2
 76035: 50 20 be 03 e6 e0 01     ra = 958, jump @13633
      :                          @5933 [@dyn 479]
 76042: 82 17 20                 a0 = u64 [sp + 0x20]
 76045: 82 18 10                 a1 = u64 [sp + 0x10]
 76048: 50 20 c0 03 70 eb fe     ra = 960, jump @356
      :                          @5934 [@dyn 480]
 76055: 82 13 10                 t1 = u64 [sp + 0x10]
 76058: 33 07 02                 a0 = 0x2
 76061: ae 73 1c                 jump @5937 if t1 >=u a0
      :                          @5935
 76064: 64 37                    a0 = t1
 76066: 82 14                    t2 = u64 [sp]
 76068: 82 19 08                 a2 = u64 [sp + 0x8]
 76071: 82 10 18                 ra = u64 [sp + 0x18]
 76074: 82 12 20                 t0 = u64 [sp + 0x20]
 76077: 28 79                    jump @5947
      :                          @5936
 76079: 33 07                    a0 = 0
 76081: 33 02 08                 t0 = 0x8
 76084: 82 10 18                 ra = u64 [sp + 0x18]
 76087: 28 6f                    jump @5947
      :                          @5937
 76089: 82 12 20                 t0 = u64 [sp + 0x20]
 76092: 82 2c                    a5 = u64 [t0]
 76094: 33 08 c0 22 03           a1 = 0x322c0
 76099: 82 19 08                 a2 = u64 [sp + 0x8]
 76102: c9 98 08                 a1 = a1 - a2
 76105: c8 65 05                 s0 = s0 + s1
 76108: 95 88 10 00 01           a1 = a1 + 0x10010
 76113: c9 58 08                 a1 = a1 - s0
 76116: 9a 35 01                 s0 = 0x1 - t1
 76119: 33 0a 02                 a3 = 0x2
 76122: 82 10 18                 ra = u64 [sp + 0x18]
 76125: 01                       fallthrough
      :                          @5938
 76126: 64 c6                    s1 = a5
 76128: 82 8c f8                 a5 = u64 [a1 + 0xfffffffffffffff8]
 76131: aa 6c 15                 jump @5941 if a5 == s1
      :                          @5939
 76134: 95 aa 01                 a3 = a3 + 0x1
 76137: c8 a5 0b                 a4 = s0 + a3
 76140: 95 88 08                 a1 = a1 + 0x8
 76143: ab 7b ef                 jump @5938 if a4 != a0
      :                          @5940
 76146: 64 37                    a0 = t1
 76148: 82 14                    t2 = u64 [sp]
 76150: 28 30                    jump @5947
      :                          @5941
 76152: 95 a7 ff                 a0 = a3 + 0xffffffffffffffff
 76155: ae 3a 28                 jump @5946 if a3 >=u t1
      :                          @5942
 76158: c9 a3 06                 s1 = t1 - a3
 76161: 82 14                    t2 = u64 [sp]
 76163: 28 0b                    jump @5944
      :                          @5943
 76165: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 76168: 95 88 08                 a1 = a1 + 0x8
 76171: 51 06 1b                 jump @5947 if s1 == 0
      :                          @5944
 76174: 97 7a 03                 a3 = a0 << 0x3
 76177: c8 2a 0a                 a3 = a3 + t0
 76180: 82 8b                    a4 = u64 [a1]
 76182: 82 ac f8                 a5 = u64 [a3 + 0xfffffffffffffff8]
 76185: aa cb ec                 jump @5943 if a4 == a5
      :                          @5945
 76188: 7b ab                    u64 [a3] = a4
 76190: 95 77 01                 a0 = a0 + 0x1
 76193: 28 e4                    jump @5943
      :                          @5946
 76195: 82 14                    t2 = u64 [sp]
 76197: 01                       fallthrough
      :                          @5947
 76198: 33 0c 01                 a5 = 0x1
 76201: 33 0a 02                 a3 = 0x2
 76204: 82 18 28                 a1 = u64 [sp + 0x28]
 76207: 28 0b                    jump @5949
      :                          @5948
 76209: 98 88 01                 a1 = a1 >> 0x1
 76212: ca aa 0a                 a3 = a3 * a3
 76215: 51 08 14                 jump @5951 if a1 == 0
      :                          @5949
 76218: 84 8b 01                 a4 = a1 & 0x1
 76221: cd 0a 0a                 a3 = a3 %u ra
 76224: 51 0b f1                 jump @5948 if a4 == 0
      :                          @5950
 76227: ca ca 0b                 a4 = a3 * a5
 76230: cd 0b 0c                 a5 = a4 %u ra
 76233: 28 e8                    jump @5948
      :                          @5951
 76235: 7b 12 20                 u64 [sp + 0x20] = t0
 76238: 33 02 01                 t0 = 0x1
 76241: ab 2c 65                 jump @5964 if a5 != t0
      :                          @5952
 76244: 97 77 03                 a0 = a0 << 0x3
 76247: 82 1a 20                 a3 = u64 [sp + 0x20]
 76250: c8 7a 08                 a1 = a3 + a0
 76253: 01                       fallthrough
      :                          @5953
 76254: d3 8a 07                 a0 = a3 ^ a1
 76257: 88 77 01                 a0 = a0 <u 0x1
 76260: aa 8a 55                 jump @5965 if a3 == a1
      :                          @5954
 76263: 82 ac                    a5 = u64 [a3]
 76265: 51 0c b9 00              jump @5980 if a5 == 0
      :                          @5955
 76269: 33 0b 01                 a4 = 0x1
 76272: 82 15 28                 s0 = u64 [sp + 0x28]
 76275: ae c5 1b                 jump @5960 if s0 >=u a5
      :                          @5956
 76278: 95 aa 08                 a3 = a3 + 0x8
 76281: 95 b6 ff                 s1 = a4 + 0xffffffffffffffff
 76284: 64 0b                    a4 = ra
 76286: 01                       fallthrough
      :                          @5957
 76287: 64 bc                    a5 = a4
 76289: cd b6 0b                 a4 = s1 %u a4
 76292: 64 c6                    s1 = a5
 76294: 52 0b f9                 jump @5957 if a4 != 0
      :                          @5958
 76297: aa 2c d5                 jump @5953 if a5 == t0
      :                          @5959
 76300: 28 2d                    jump @5965
      :                          @5960
 76302: 82 1b 28                 a4 = u64 [sp + 0x28]
 76305: cb cb 0c                 a5 = a4 /u a5
 76308: 33 0b 01                 a4 = 0x1
 76311: 33 06 02                 s1 = 0x2
 76314: 28 0b                    jump @5962
      :                          @5961
 76316: 98 cc 01                 a5 = a5 >> 0x1
 76319: ca 66 06                 s1 = s1 * s1
 76322: 51 0c d4                 jump @5956 if a5 == 0
      :                          @5962
 76325: 84 c5 01                 s0 = a5 & 0x1
 76328: cd 06 06                 s1 = s1 %u ra
 76331: 51 05 f1                 jump @5961 if s0 == 0
      :                          @5963
 76334: ca b6 0b                 a4 = s1 * a4
 76337: cd 0b 0b                 a4 = a4 %u ra
 76340: 28 e8                    jump @5961
      :                          @5964
 76342: 33 07                    a0 = 0
 76344: 01                       fallthrough
      :                          @5965
 76345: 82 15 20                 s0 = u64 [sp + 0x20]
 76348: 51 03 29                 jump @5972 if t1 == 0
      :                          @5966
 76351: 56 23 00 20 26           jump @5972 if t1 >u 8192
      :                          @5967
 76356: 33 08 c0 22 03           a1 = 0x322c0
 76361: 95 88 00 00 01           a1 = a1 + 0x10000
 76366: 01                       fallthrough
      :                          @5968
 76367: 82 86                    s1 = u64 [a1]
 76369: c9 68 0a                 a3 = a1 - s1
 76372: ab 5a 11                 jump @5972 if a3 != s0
      :                          @5969
 76375: c9 96 0a                 a3 = s1 - a2
 76378: 01                       fallthrough
      :                          @5970
 76379: 82 8b                    a4 = u64 [a1]
 76381: ab 6b f2                 jump @5968 if a4 != s1
      :                          @5971
 76384: 7b 8a                    u64 [a1] = a3
 76386: 33 0c                    a5 = 0
 76388: 01                       fallthrough
      :                          @5972
 76389: 82 18 30                 a1 = u64 [sp + 0x30]
 76392: 51 08 2c                 jump @5979 if a1 == 0
      :                          @5973
 76395: 33 09 00 20              a2 = 0x2000
 76399: ac 89 25                 jump @5979 if a2 <u a1
      :                          @5974
 76402: 97 88 03                 a1 = a1 << 0x3
 76405: 33 09 c0 22 03           a2 = 0x322c0
 76410: 95 99 00 00 01           a2 = a2 + 0x10000
 76415: 01                       fallthrough
      :                          @5975
 76416: 82 9a                    a3 = u64 [a2]
 76418: c9 a9 0b                 a4 = a2 - a3
 76421: ab 4b 0f                 jump @5979 if a4 != t2
      :                          @5976
 76424: c9 8a 0b                 a4 = a3 - a1
 76427: 01                       fallthrough
      :                          @5977
 76428: 82 9c                    a5 = u64 [a2]
 76430: ab ac f2                 jump @5975 if a5 != a3
      :                          @5978
 76433: 7b 9b                    u64 [a2] = a4
 76435: 01                       fallthrough
      :                          @5979
 76436: 82 10 58                 ra = u64 [sp + 0x58]
 76439: 82 15 50                 s0 = u64 [sp + 0x50]
 76442: 82 16 48                 s1 = u64 [sp + 0x48]
 76445: 95 11 60                 sp = sp + 0x60
 76448: 32 00                    ret
      :                          @5980
 76450: 00                       trap
      :                          @5981
 76451: 00                       trap
      :                          @5982
 76452: 00                       trap
      :                          @5983
 76453: 98 aa 01                 a3 = a3 >> 0x1
 76456: ca 77 0c                 a5 = a0 * a0
 76459: 51 0a 38                 jump @5986 if a3 == 0
      :                          @5984
 76462: d6 bc 09                 a2 = a5 mulhu a4
 76465: c9 9c 07                 a0 = a5 - a2
 76468: 98 77 01                 a0 = a0 >> 0x1
 76471: c8 97 07                 a0 = a0 + a2
 76474: 98 77 04                 a0 = a0 >> 0x4
 76477: ca 47 07                 a0 = a0 * t2
 76480: 84 a9 01                 a2 = a3 & 0x1
 76483: c9 7c 07                 a0 = a5 - a0
 76486: 51 09 df                 jump @5983 if a2 == 0
      :                          @5985
 76489: ca 75 08                 a1 = s0 * a0
 76492: d6 b8 09                 a2 = a1 mulhu a4
 76495: c9 98 0c                 a5 = a1 - a2
 76498: 98 cc 01                 a5 = a5 >> 0x1
 76501: c8 c9 09                 a2 = a2 + a5
 76504: 98 99 04                 a2 = a2 >> 0x4
 76507: ca 49 09                 a2 = a2 * t2
 76510: c9 98 05                 s0 = a1 - a2
 76513: 28 c4                    jump @5983
      :                          @5986
 76515: 3a 07 f0 10 03           a0 = u64 [0x310f0]
 76520: ca 32 09                 a2 = t0 * t1
 76523: d6 79 07                 a0 = a2 mulhu a0
 76526: c9 79 0a                 a3 = a2 - a0
 76529: 98 aa 01                 a3 = a3 >> 0x1
 76532: c8 a7 07                 a0 = a0 + a3
 76535: 98 77 04                 a0 = a0 >> 0x4
 76538: 96 77 15                 a0 = a0 * 0x15
 76541: c9 79 0a                 a3 = a2 - a0
 76544: 3a 09 f8 10 03           a2 = u64 [0x310f8]
 76549: 95 aa 01                 a3 = a3 + 0x1
 76552: 33 07 01                 a0 = 0x1
 76555: 33 0b 17                 a4 = 0x17
 76558: 28 0b                    jump @5988
      :                          @5987
 76560: 98 aa 01                 a3 = a3 >> 0x1
 76563: ca 88 05                 s0 = a1 * a1
 76566: 51 0a 38                 jump @5990 if a3 == 0
      :                          @5988
 76569: d6 95 0c                 a5 = s0 mulhu a2
 76572: c9 c5 08                 a1 = s0 - a5
 76575: 98 88 01                 a1 = a1 >> 0x1
 76578: c8 c8 08                 a1 = a1 + a5
 76581: 98 88 04                 a1 = a1 >> 0x4
 76584: ca b8 08                 a1 = a1 * a4
 76587: 84 ac 01                 a5 = a3 & 0x1
 76590: c9 85 08                 a1 = s0 - a1
 76593: 51 0c df                 jump @5987 if a5 == 0
      :                          @5989
 76596: ca 87 05                 s0 = a0 * a1
 76599: d6 95 0c                 a5 = s0 mulhu a2
 76602: c9 c5 07                 a0 = s0 - a5
 76605: 98 77 01                 a0 = a0 >> 0x1
 76608: c8 c7 07                 a0 = a0 + a5
 76611: 98 77 04                 a0 = a0 >> 0x4
 76614: ca b7 07                 a0 = a0 * a4
 76617: c9 75 07                 a0 = s0 - a0
 76620: 28 c4                    jump @5987
      :                          @5990
 76622: 82 15 08                 s0 = u64 [sp + 0x8]
 76625: 95 11 10                 sp = sp + 0x10
 76628: 32 00                    ret
      :                          @5991
 76630: 82 ab                    a4 = u64 [a3]
 76632: 95 bc 18                 a5 = a4 + 0x18
 76635: ac bc c7 03              jump @6048 if a5 <u a4
      :                          @5992
 76639: 95 c9 08                 a2 = a5 + 0x8
 76642: d8 c9 06                 s1 = a2 <u a5
 76645: d8 92 09                 a2 = t0 <u a2
 76648: d4 69 09                 a2 = a2 | s1
 76651: 52 09 b7 03              jump @6048 if a2 != 0
      :                          @5993
 76655: c9 c3 06                 s1 = t1 - a5
 76658: c8 26 06                 s1 = s1 + t0
 76661: 84 69 07                 a2 = s1 & 0x7
 76664: c8 9c 0c                 a5 = a5 + a2
 76667: 01                       fallthrough
      :                          @5994
 76668: 82 a5                    s0 = u64 [a3]
 76670: ab b5 d8                 jump @5991 if s0 != a4
      :                          @5995
 76673: 7b ac                    u64 [a3] = a5
 76675: 01                       fallthrough
      :                          @5996
 76676: c9 96 06                 s1 = s1 - a2
 76679: 3a 02 08 11 03           t0 = u64 [0x31108]
 76684: 49 11 18 03              u64 [sp + 24] = 0x3
 76688: 7b 16 20                 u64 [sp + 0x20] = s1
 76691: d6 28 07                 a0 = a1 mulhu t0
 76694: 98 77 0b                 a0 = a0 >> 0xb
 76697: 33 0b 29 08              a4 = 0x829
 76701: ca b7 07                 a0 = a0 * a4
 76704: c9 78 08                 a1 = a1 - a0
 76707: 7b 68                    u64 [s1] = a1
 76709: 49 11 28 01              u64 [sp + 40] = 0x1
 76713: 33 0c 78 12 03           a5 = 0x31278
 76718: 3a 07 78 12 03           a0 = u64 [0x31278]
 76723: 3a 05 00 11 03           s0 = u64 [0x31100]
 76728: 97 78 0d                 a1 = a0 << 0xd
 76731: d3 87 07                 a0 = a0 ^ a1
 76734: 98 78 07                 a1 = a0 >> 0x7
 76737: d3 87 07                 a0 = a0 ^ a1
 76740: 97 78 11                 a1 = a0 << 0x11
 76743: d3 87 07                 a0 = a0 ^ a1
 76746: ca 57 09                 a2 = a0 * s0
 76749: 3e 07 78 12 03           u64 [0x31278] = a0
 76754: 82 18 28                 a1 = u64 [sp + 0x28]
 76757: 82 17 18                 a0 = u64 [sp + 0x18]
 76760: d6 29 0a                 a3 = a2 mulhu t0
 76763: 98 aa 0b                 a3 = a3 >> 0xb
 76766: ca ba 0a                 a3 = a3 * a4
 76769: c9 a9 06                 s1 = a2 - a3
 76772: 7b 14 08                 u64 [sp + 0x8] = t2
 76775: ab 78 22                 jump @5999 if a1 != a0
      :                          @5997
 76778: 95 17 18                 a0 = sp + 0x18
 76781: 7b 12 10                 u64 [sp + 0x10] = t0
 76784: 49 01 29 08              u64 [sp + 0] = 0x829
 76788: 50 20 c2 03 4c 27 ff     ra = 962, jump @1581
      :                          @5998 [@dyn 481]
 76795: 82 1b                    a4 = u64 [sp]
 76797: 33 0c 78 12 03           a5 = 0x31278
 76802: 82 12 10                 t0 = u64 [sp + 0x10]
 76805: 82 18 28                 a1 = u64 [sp + 0x28]
 76808: 01                       fallthrough
      :                          @5999
 76809: 82 17 20                 a0 = u64 [sp + 0x20]
 76812: 97 89 03                 a2 = a1 << 0x3
 76815: c8 97 07                 a0 = a0 + a2
 76818: 7b 76                    u64 [a0] = s1
 76820: 95 88 01                 a1 = a1 + 0x1
 76823: 7b 18 28                 u64 [sp + 0x28] = a1
 76826: 3a 07 78 12 03           a0 = u64 [0x31278]
 76831: 97 78 0d                 a1 = a0 << 0xd
 76834: d3 87 07                 a0 = a0 ^ a1
 76837: 98 78 07                 a1 = a0 >> 0x7
 76840: d3 87 07                 a0 = a0 ^ a1
 76843: 97 78 11                 a1 = a0 << 0x11
 76846: d3 87 07                 a0 = a0 ^ a1
 76849: ca 57 09                 a2 = a0 * s0
 76852: 3e 07 78 12 03           u64 [0x31278] = a0
 76857: 82 18 28                 a1 = u64 [sp + 0x28]
 76860: 82 17 18                 a0 = u64 [sp + 0x18]
 76863: d6 29 0a                 a3 = a2 mulhu t0
 76866: 98 aa 0b                 a3 = a3 >> 0xb
 76869: ca ba 0a                 a3 = a3 * a4
 76872: c9 a9 05                 s0 = a2 - a3
 76875: ab 78 11                 jump @6002 if a1 != a0
      :                          @6000
 76878: 95 17 18                 a0 = sp + 0x18
 76881: 50 20 c4 03 ef 26 ff     ra = 964, jump @1581
      :                          @6001 [@dyn 482]
 76888: 82 18 28                 a1 = u64 [sp + 0x28]
 76891: 01                       fallthrough
      :                          @6002
 76892: 82 12 20                 t0 = u64 [sp + 0x20]
 76895: 97 80 03                 ra = a1 << 0x3
 76898: c8 02 07                 a0 = t0 + ra
 76901: 7b 75                    u64 [a0] = s0
 76903: 95 84 01                 t2 = a1 + 0x1
 76906: 7b 14 28                 u64 [sp + 0x28] = t2
 76909: 33 07 c0 22 03           a0 = 0x322c0
 76914: 33 08 c0 22 03           a1 = 0x322c0
 76919: 33 03 00 00 01           t1 = 0x10000
 76924: c8 38 0b                 a4 = a1 + t1
 76927: 7b 12 10                 u64 [sp + 0x10] = t0
 76930: 01                       fallthrough
      :                          @6003
 76931: 82 bc                    a5 = u64 [a4]
 76933: 95 c6 50                 s1 = a5 + 0x50
 76936: ac c6 9b 02              jump @6049 if s1 <u a5
      :                          @6004
 76940: 95 6a 08                 a3 = s1 + 0x8
 76943: d8 6a 05                 s0 = a3 <u s1
 76946: d8 a3 0a                 a3 = t1 <u a3
 76949: d4 5a 0a                 a3 = a3 | s0
 76952: 52 0a 8b 02              jump @6049 if a3 != 0
      :                          @6005
 76956: c9 68 05                 s0 = a1 - s1
 76959: c8 35 05                 s0 = s0 + t1
 76962: 84 5a 07                 a3 = s0 & 0x7
 76965: c8 a6 06                 s1 = s1 + a3
 76968: 01                       fallthrough
      :                          @6006
 76969: 82 b9                    a2 = u64 [a4]
 76971: ab c9 d8                 jump @6003 if a2 != a5
      :                          @6007
 76974: 7b b6                    u64 [a4] = s1
 76976: 01                       fallthrough
      :                          @6008
 76977: c9 a5 03                 t1 = s0 - a3
 76980: 51 04 fa 01              jump @6039 if t2 == 0
      :                          @6009
 76984: 33 0a                    a3 = 0
 76986: 97 44 03                 t2 = t2 << 0x3
 76989: c8 24 04                 t2 = t2 + t0
 76992: 3a 08 08 11 03           a1 = u64 [0x31108]
 76997: 95 07 08                 a0 = ra + 0x8
 77000: 33 09 29 08              a2 = 0x829
 77004: 64 2b                    a4 = t0
 77006: 01                       fallthrough
      :                          @6010
 77007: 82 bc                    a5 = u64 [a4]
 77009: 95 bb 08                 a4 = a4 + 0x8
 77012: c8 ca 0a                 a3 = a3 + a5
 77015: d6 8a 0c                 a5 = a3 mulhu a1
 77018: 98 cc 0b                 a5 = a5 >> 0xb
 77021: ca 9c 0c                 a5 = a5 * a2
 77024: 95 77 f8                 a0 = a0 + 0xfffffffffffffff8
 77027: c9 ca 0a                 a3 = a3 - a5
 77030: 52 07 e9                 jump @6010 if a0 != 0
      :                          @6011
 77033: 33 00                    ra = 0
 77035: 33 08                    a1 = 0
 77037: 49 03 01                 u64 [t1 + 0] = 0x1
 77040: 3a 0c 08 11 03           a5 = u64 [0x31108]
 77045: 7b 3a 08                 u64 [t1 + 0x8] = a3
 77048: 33 06 29 08              s1 = 0x829
 77052: 64 27                    a0 = t0
 77054: 28 21                    jump @6013
      :                          @6012
 77056: 82 79                    a2 = u64 [a0]
 77058: 95 7a 08                 a3 = a0 + 0x8
 77061: 95 88 01                 a1 = a1 + 0x1
 77064: ca 95 07                 a0 = s0 * a2
 77067: c8 07 07                 a0 = a0 + ra
 77070: d6 c7 09                 a2 = a0 mulhu a5
 77073: 98 99 0b                 a2 = a2 >> 0xb
 77076: ca 69 09                 a2 = a2 * s1
 77079: c9 97 00                 ra = a0 - a2
 77082: 64 a7                    a0 = a3
 77084: aa 4a 3f                 jump @6018 if a3 == t2
      :                          @6013
 77087: 33 05 01                 s0 = 0x1
 77090: 51 08 de                 jump @6012 if a1 == 0
      :                          @6014
 77093: 33 05 01                 s0 = 0x1
 77096: 33 09 02                 a2 = 0x2
 77099: 64 8a                    a3 = a1
 77101: 28 0b                    jump @6016
      :                          @6015
 77103: 98 aa 01                 a3 = a3 >> 0x1
 77106: ca 99 09                 a2 = a2 * a2
 77109: 51 0a cb                 jump @6012 if a3 == 0
      :                          @6016
 77112: d6 c9 0b                 a4 = a2 mulhu a5
 77115: 98 bb 0b                 a4 = a4 >> 0xb
 77118: ca 6b 0b                 a4 = a4 * s1
 77121: 84 a2 01                 t0 = a3 & 0x1
 77124: c9 b9 09                 a2 = a2 - a4
 77127: 51 02 e8                 jump @6015 if t0 == 0
      :                          @6017
 77130: ca 95 0b                 a4 = s0 * a2
 77133: d6 cb 05                 s0 = a4 mulhu a5
 77136: 98 55 0b                 s0 = s0 >> 0xb
 77139: ca 65 05                 s0 = s0 * s1
 77142: c9 5b 05                 s0 = a4 - s0
 77145: 28 d6                    jump @6015
      :                          @6018
 77147: 33 02                    t0 = 0
 77149: 33 0c                    a5 = 0
 77151: 49 13 10 02              u64 [t1 + 16] = 0x2
 77155: 3a 06 08 11 03           s1 = u64 [0x31108]
 77160: 7b 30 18                 u64 [t1 + 0x18] = ra
 77163: 33 0b 29 08              a4 = 0x829
 77167: 82 10 10                 ra = u64 [sp + 0x10]
 77170: 28 21                    jump @6020
      :                          @6019
 77172: 82 07                    a0 = u64 [ra]
 77174: 95 08 08                 a1 = ra + 0x8
 77177: 95 cc 01                 a5 = a5 + 0x1
 77180: ca 75 07                 a0 = s0 * a0
 77183: c8 27 07                 a0 = a0 + t0
 77186: d6 67 09                 a2 = a0 mulhu s1
 77189: 98 99 0b                 a2 = a2 >> 0xb
 77192: ca b9 09                 a2 = a2 * a4
 77195: c9 97 02                 t0 = a0 - a2
 77198: 64 80                    ra = a1
 77200: aa 48 3c                 jump @6025 if a1 == t2
      :                          @6020
 77203: 33 05 01                 s0 = 0x1
 77206: 51 0c de                 jump @6019 if a5 == 0
      :                          @6021
 77209: 33 09 03                 a2 = 0x3
 77212: 64 c8                    a1 = a5
 77214: 28 0b                    jump @6023
      :                          @6022
 77216: 98 88 01                 a1 = a1 >> 0x1
 77219: ca 99 09                 a2 = a2 * a2
 77222: 51 08 ce                 jump @6019 if a1 == 0
      :                          @6023
 77225: d6 69 0a                 a3 = a2 mulhu s1
 77228: 98 aa 0b                 a3 = a3 >> 0xb
 77231: ca ba 0a                 a3 = a3 * a4
 77234: 84 87 01                 a0 = a1 & 0x1
 77237: c9 a9 09                 a2 = a2 - a3
 77240: 51 07 e8                 jump @6022 if a0 == 0
      :                          @6024
 77243: ca 95 07                 a0 = s0 * a2
 77246: d6 67 0a                 a3 = a0 mulhu s1
 77249: 98 aa 0b                 a3 = a3 >> 0xb
 77252: ca ba 0a                 a3 = a3 * a4
 77255: c9 a7 05                 s0 = a0 - a3
 77258: 28 d6                    jump @6022
      :                          @6025
 77260: 33 00                    ra = 0
 77262: 33 0c                    a5 = 0
 77264: 49 13 20 03              u64 [t1 + 32] = 0x3
 77268: 3a 06 08 11 03           s1 = u64 [0x31108]
 77273: 7b 32 28                 u64 [t1 + 0x28] = t0
 77276: 33 0a 29 08              a3 = 0x829
 77280: 82 12 10                 t0 = u64 [sp + 0x10]
 77283: 28 21                    jump @6027
      :                          @6026
 77285: 82 27                    a0 = u64 [t0]
 77287: 95 28 08                 a1 = t0 + 0x8
 77290: 95 cc 01                 a5 = a5 + 0x1
 77293: ca 75 07                 a0 = s0 * a0
 77296: c8 07 07                 a0 = a0 + ra
 77299: d6 67 09                 a2 = a0 mulhu s1
 77302: 98 99 0b                 a2 = a2 >> 0xb
 77305: ca a9 09                 a2 = a2 * a3
 77308: c9 97 00                 ra = a0 - a2
 77311: 64 82                    t0 = a1
 77313: aa 48 3c                 jump @6032 if a1 == t2
      :                          @6027
 77316: 33 05 01                 s0 = 0x1
 77319: 51 0c de                 jump @6026 if a5 == 0
      :                          @6028
 77322: 33 09 04                 a2 = 0x4
 77325: 64 c8                    a1 = a5
 77327: 28 0b                    jump @6030
      :                          @6029
 77329: 98 88 01                 a1 = a1 >> 0x1
 77332: ca 99 09                 a2 = a2 * a2
 77335: 51 08 ce                 jump @6026 if a1 == 0
      :                          @6030
 77338: d6 69 0b                 a4 = a2 mulhu s1
 77341: 98 bb 0b                 a4 = a4 >> 0xb
 77344: ca ab 0b                 a4 = a4 * a3
 77347: 84 87 01                 a0 = a1 & 0x1
 77350: c9 b9 09                 a2 = a2 - a4
 77353: 51 07 e8                 jump @6029 if a0 == 0
      :                          @6031
 77356: ca 95 07                 a0 = s0 * a2
 77359: d6 67 0b                 a4 = a0 mulhu s1
 77362: 98 bb 0b                 a4 = a4 >> 0xb
 77365: ca ab 0b                 a4 = a4 * a3
 77368: c9 b7 05                 s0 = a0 - a4
 77371: 28 d6                    jump @6029
      :                          @6032
 77373: 33 02                    t0 = 0
 77375: 33 0c                    a5 = 0
 77377: 49 13 30 04              u64 [t1 + 48] = 0x4
 77381: 3a 06 08 11 03           s1 = u64 [0x31108]
 77386: 7b 30 38                 u64 [t1 + 0x38] = ra
 77389: 33 0b 29 08              a4 = 0x829
 77393: 82 10 10                 ra = u64 [sp + 0x10]
 77396: 28 21                    jump @6034
      :                          @6033
 77398: 82 07                    a0 = u64 [ra]
 77400: 95 08 08                 a1 = ra + 0x8
 77403: 95 cc 01                 a5 = a5 + 0x1
 77406: ca 75 07                 a0 = s0 * a0
 77409: c8 27 07                 a0 = a0 + t0
 77412: d6 67 09                 a2 = a0 mulhu s1
 77415: 98 99 0b                 a2 = a2 >> 0xb
 77418: ca b9 09                 a2 = a2 * a4
 77421: c9 97 02                 t0 = a0 - a2
 77424: 64 80                    ra = a1
 77426: aa 48 5a                 jump @6040 if a1 == t2
      :                          @6034
 77429: 33 05 01                 s0 = 0x1
 77432: 51 0c de                 jump @6033 if a5 == 0
      :                          @6035
 77435: 33 09 05                 a2 = 0x5
 77438: 64 c8                    a1 = a5
 77440: 28 0b                    jump @6037
      :                          @6036
 77442: 98 88 01                 a1 = a1 >> 0x1
 77445: ca 99 09                 a2 = a2 * a2
 77448: 51 08 ce                 jump @6033 if a1 == 0
      :                          @6037
 77451: d6 69 0a                 a3 = a2 mulhu s1
 77454: 98 aa 0b                 a3 = a3 >> 0xb
 77457: ca ba 0a                 a3 = a3 * a4
 77460: 84 87 01                 a0 = a1 & 0x1
 77463: c9 a9 09                 a2 = a2 - a3
 77466: 51 07 e8                 jump @6036 if a0 == 0
      :                          @6038
 77469: ca 95 07                 a0 = s0 * a2
 77472: d6 67 0a                 a3 = a0 mulhu s1
 77475: 98 aa 0b                 a3 = a3 >> 0xb
 77478: ca ba 0a                 a3 = a3 * a4
 77481: c9 a7 05                 s0 = a0 - a3
 77484: 28 d6                    jump @6036
      :                          @6039
 77486: 33 02                    t0 = 0
 77488: 49 03 01                 u64 [t1 + 0] = 0x1
 77491: 49 13 10 02              u64 [t1 + 16] = 0x2
 77495: 49 13 20 03              u64 [t1 + 32] = 0x3
 77499: 49 13 30 04              u64 [t1 + 48] = 0x4
 77503: 49 13 08                 u64 [t1 + 8] = 0
 77506: 49 13 18                 u64 [t1 + 24] = 0
 77509: 49 13 28                 u64 [t1 + 40] = 0
 77512: 49 13 38                 u64 [t1 + 56] = 0
 77515: 01                       fallthrough
      :                          @6040
 77516: 33 08 05                 a1 = 0x5
 77519: 7b 32 48                 u64 [t1 + 0x48] = t0
 77522: 82 17 18                 a0 = u64 [sp + 0x18]
 77525: 7b 38 40                 u64 [t1 + 0x40] = a1
 77528: 82 19 08                 a2 = u64 [sp + 0x8]
 77531: 7b 98                    u64 [a2] = a1
 77533: 7b 93 08                 u64 [a2 + 0x8] = t1
 77536: 7b 98 10                 u64 [a2 + 0x10] = a1
 77539: 82 16 10                 s1 = u64 [sp + 0x10]
 77542: 51 07 2e                 jump @6047 if a0 == 0
      :                          @6041
 77545: 33 08 00 20              a1 = 0x2000
 77549: ac 78 27                 jump @6047 if a1 <u a0
      :                          @6042
 77552: 97 77 03                 a0 = a0 << 0x3
 77555: 33 08 c0 22 03           a1 = 0x322c0
 77560: 95 88 00 00 01           a1 = a1 + 0x10000
 77565: 01                       fallthrough
      :                          @6043
 77566: 82 89                    a2 = u64 [a1]
 77568: c9 98 0a                 a3 = a1 - a2
 77571: ab 6a 11                 jump @6047 if a3 != s1
      :                          @6044
 77574: c9 79 0a                 a3 = a2 - a0
 77577: 01                       fallthrough
      :                          @6045
 77578: 82 8b                    a4 = u64 [a1]
 77580: ab 9b f2                 jump @6043 if a4 != a2
      :                          @6046
 77583: 7b 8a                    u64 [a1] = a3
 77585: 33 0c                    a5 = 0
 77587: 01                       fallthrough
      :                          @6047
 77588: 82 10 40                 ra = u64 [sp + 0x40]
 77591: 82 15 38                 s0 = u64 [sp + 0x38]
 77594: 82 16 30                 s1 = u64 [sp + 0x30]
 77597: 95 11 48                 sp = sp + 0x48
 77600: 32 00                    ret
      :                          @6048
 77602: 00                       trap
      :                          @6049
 77603: 00                       trap
      :                          @6050
 77604: 64 8a                    a3 = a1
 77606: 64 9b                    a4 = a2
 77608: 01                       fallthrough
      :                          @6051
 77609: 64 ac                    a5 = a3
 77611: ac a4 57                 jump @6066 if t2 <u a3
      :                          @6052
 77614: ae 4c 54                 jump @6066 if a5 >=u t2
      :                          @6053
 77617: 95 ca 01                 a3 = a5 + 0x1
 77620: ac 3c f5                 jump @6051 if a5 <u t1
      :                          @6054
 77623: 84 c8 01                 a1 = a5 & 0x1
 77626: 51 08 23                 jump @6061 if a1 == 0
      :                          @6055
 77629: ac 2c 19                 jump @6060 if a5 <u t0
      :                          @6056
 77632: 33 08 03                 a1 = 0x3
 77635: 01                       fallthrough
      :                          @6057
 77636: 51 08 5e                 jump @6069 if a1 == 0
      :                          @6058
 77639: cd 8c 09                 a2 = a5 %u a1
 77642: 51 09 df                 jump @6051 if a2 == 0
      :                          @6059
 77645: 95 88 02                 a1 = a1 + 0x2
 77648: ca 88 09                 a2 = a1 * a1
 77651: ae 9c f1                 jump @6057 if a5 >=u a2
      :                          @6060
 77654: 64 a8                    a1 = a3
 77656: 33 09 01                 a2 = 0x1
 77659: 28 16                    jump @6064
      :                          @6061
 77661: 33 08 03                 a1 = 0x3
 77664: ab 3c c9                 jump @6051 if a5 != t1
      :                          @6062
 77667: 33 09 01                 a2 = 0x1
 77670: 28 0b                    jump @6064
      :                          @6063
 77672: 98 cc 01                 a5 = a5 >> 0x1
 77675: ca aa 0b                 a4 = a3 * a3
 77678: 51 0c b6                 jump @6050 if a5 == 0
      :                          @6064
 77681: 84 c5 01                 s0 = a5 & 0x1
 77684: cd 7b 0a                 a3 = a4 %u a0
 77687: 51 05 f1                 jump @6063 if s0 == 0
      :                          @6065
 77690: ca 9a 09                 a2 = a3 * a2
 77693: cd 79 09                 a2 = a2 %u a0
 77696: 28 e8                    jump @6063
      :                          @6066
 77698: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 77701: 64 79                    a2 = a0
 77703: 01                       fallthrough
      :                          @6067
 77704: 64 98                    a1 = a2
 77706: cd 9b 09                 a2 = a4 %u a2
 77709: 64 8b                    a4 = a1
 77711: 52 09 f9                 jump @6067 if a2 != 0
      :                          @6068
 77714: 88 89 02                 a2 = a1 <u 0x2
 77717: d8 78 07                 a0 = a1 <u a0
 77720: e0 97 07                 a0 = a0 & ~a2
 77723: 82 15                    s0 = u64 [sp]
 77725: 95 11 08                 sp = sp + 0x8
 77728: 32 00                    ret
      :                          @6069
 77730: 00                       trap
      :                          @6070
 77731: 95 11 68 ff              sp = sp + 0xffffffffffffff68
 77735: 7b 10 90 00              u64 [sp + 0x90] = ra
 77739: 7b 15 88 00              u64 [sp + 0x88] = s0
 77743: 49 21 80 00 02           u64 [sp + 128] = 0x2
 77748: 7b 17                    u64 [sp] = a0
 77750: 82 76 10                 s1 = u64 [a0 + 0x10]
 77753: 51 06 97 00              jump @6083 if s1 == 0
      :                          @6071
 77757: 98 67 3c                 a0 = s1 >> 0x3c
 77760: 52 07 26 03              jump @6156 if a0 != 0
      :                          @6072
 77764: 88 72 01                 t0 = a0 <u 0x1
 77767: 97 67 03                 a0 = s1 << 0x3
 77770: 97 22 03                 t0 = t0 << 0x3
 77773: 33 04 c0 22 03           t2 = 0x322c0
 77778: 33 03 00 00 01           t1 = 0x10000
 77783: c8 34 00                 ra = t2 + t1
 77786: 01                       fallthrough
      :                          @6073
 77787: 82 05                    s0 = u64 [ra]
 77789: c8 75 0c                 a5 = s0 + a0
 77792: ac 5c 05 03              jump @6155 if a5 <u s0
      :                          @6074
 77796: c8 2c 08                 a1 = a5 + t0
 77799: d8 c8 0a                 a3 = a1 <u a5
 77802: d8 83 08                 a1 = t1 <u a1
 77805: d4 a8 08                 a1 = a1 | a3
 77808: 52 08 f5 02              jump @6155 if a1 != 0
      :                          @6075
 77812: c9 c4 08                 a1 = t2 - a5
 77815: c8 38 08                 a1 = a1 + t1
 77818: 84 8a 07                 a3 = a1 & 0x7
 77821: c8 ac 0c                 a5 = a5 + a3
 77824: 01                       fallthrough
      :                          @6076
 77825: 82 09                    a2 = u64 [ra]
 77827: ab 59 d8                 jump @6073 if a2 != s0
      :                          @6077
 77830: 7b 0c                    u64 [ra] = a5
 77832: 33 0b                    a4 = 0
 77834: 01                       fallthrough
      :                          @6078
 77835: c9 a8 07                 a0 = a1 - a3
 77838: 33 08 01                 a1 = 0x1
 77841: 64 79                    a2 = a0
 77843: 53 16 02 2f              jump @6082 if s1 <u 2
      :                          @6079
 77847: 95 68 ff                 a1 = s1 + 0xffffffffffffffff
 77850: 14 0a ff ff ff ff ff ff ff 7f a3 = 0x7fffffffffffffff
 77860: 64 79                    a2 = a0
 77862: 01                       fallthrough
      :                          @6080
 77863: 7b 9a                    u64 [a2] = a3
 77865: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 77868: 95 99 08                 a2 = a2 + 0x8
 77871: 52 08 f8                 jump @6080 if a1 != 0
      :                          @6081
 77874: 64 68                    a1 = s1
 77876: 14 0a ff ff ff ff ff ff ff 7f a3 = 0x7fffffffffffffff
 77886: 7b 9a                    u64 [a2] = a3
 77888: 28 16                    jump @6084
      :                          @6082
 77890: 14 0a ff ff ff ff ff ff ff 7f a3 = 0x7fffffffffffffff
 77900: 7b 9a                    u64 [a2] = a3
 77902: 28 08                    jump @6084
      :                          @6083
 77904: 33 08                    a1 = 0
 77906: 33 07 08                 a0 = 0x8
 77909: 01                       fallthrough
      :                          @6084
 77910: 9b 69 01                 a2 = 0x1 << s1
 77913: 7b 16 68                 u64 [sp + 0x68] = s1
 77916: 7b 17 70                 u64 [sp + 0x70] = a0
 77919: 7b 18 78                 u64 [sp + 0x78] = a1
 77922: 95 17 50                 a0 = sp + 0x50
 77925: 95 18 68                 a1 = sp + 0x68
 77928: 7b 19 08                 u64 [sp + 0x8] = a2
 77931: 50 20 c6 03 86 29 ff     ra = 966, jump @1721
      :                          @6085 [@dyn 483]
 77938: 82 18 60                 a1 = u64 [sp + 0x60]
 77941: 7b 18 28                 u64 [sp + 0x28] = a1
 77944: 53 18 02 6a 02           jump @6152 if a1 <u 2
      :                          @6086
 77949: 82 18 58                 a1 = u64 [sp + 0x58]
 77952: 82 87 28                 a0 = u64 [a1 + 0x28]
 77955: 51 07 61 02              jump @6154 if a0 == 0
      :                          @6087
 77959: 7b 18 20                 u64 [sp + 0x20] = a1
 77962: 82 87 20                 a0 = u64 [a1 + 0x20]
 77965: 84 68 3f                 a1 = s1 & 0x3f
 77968: 49 07                    u64 [a0 + 0] = 0
 77970: 51 08 2f 01              jump @6117 if a1 == 0
      :                          @6088
 77974: 82 17                    a0 = u64 [sp]
 77976: 82 77 08                 a0 = u64 [a0 + 0x8]
 77979: 33 08 02                 a1 = 0x2
 77982: 82 19 08                 a2 = u64 [sp + 0x8]
 77985: e4 89 08                 a1 = maxu(a2, a1)
 77988: 7b 18 10                 u64 [sp + 0x10] = a1
 77991: 95 77 10                 a0 = a0 + 0x10
 77994: 7b 17 18                 u64 [sp + 0x18] = a0
 77997: 33 0c 01                 a5 = 0x1
 78000: 28 0c                    jump @6090
      :                          @6089
 78002: 95 cc 01                 a5 = a5 + 0x1
 78005: 82 17 10                 a0 = u64 [sp + 0x10]
 78008: aa 7c 09 01              jump @6117 if a5 == a0
      :                          @6090
 78012: 84 c8 01                 a1 = a5 & 0x1
 78015: 51 08 f3                 jump @6089 if a1 == 0
      :                          @6091
 78018: 82 17 28                 a0 = u64 [sp + 0x28]
 78021: ae 7c ca 00              jump @6109 if a5 >=u a0
      :                          @6092
 78025: 33 07                    a0 = 0
 78027: 96 c8 18                 a1 = a5 * 0x18
 78030: 82 19 20                 a2 = u64 [sp + 0x20]
 78033: c8 98 08                 a1 = a1 + a2
 78036: 95 89 10                 a2 = a1 + 0x10
 78039: 7b 19 40                 u64 [sp + 0x40] = a2
 78042: 95 88 08                 a1 = a1 + 0x8
 78045: 7b 18 38                 u64 [sp + 0x38] = a1
 78048: 7b 1c 30                 u64 [sp + 0x30] = a5
 78051: 28 0b                    jump @6094
      :                          @6093
 78053: 95 77 01                 a0 = a0 + 0x1
 78056: 82 1c 30                 a5 = u64 [sp + 0x30]
 78059: aa 67 c7                 jump @6089 if a0 == s1
      :                          @6094
 78062: 9b 7a 01                 a3 = 0x1 << a0
 78065: d2 ca 08                 a1 = a3 & a5
 78068: 51 08 f1                 jump @6093 if a1 == 0
      :                          @6095
 78071: 82 18 30                 a1 = u64 [sp + 0x30]
 78074: d3 8a 0a                 a3 = a3 ^ a1
 78077: 51 0a e8                 jump @6093 if a3 == 0
      :                          @6096
 78080: 82 18 28                 a1 = u64 [sp + 0x28]
 78083: ae 8a 76                 jump @6105 if a3 >=u a1
      :                          @6097
 78086: 33 03                    t1 = 0
 78088: 33 0b                    a4 = 0
 78090: 96 a8 18                 a1 = a3 * 0x18
 78093: 82 19 20                 a2 = u64 [sp + 0x20]
 78096: c8 98 08                 a1 = a1 + a2
 78099: 95 89 10                 a2 = a1 + 0x10
 78102: 7b 19 48                 u64 [sp + 0x48] = a2
 78105: 95 80 08                 ra = a1 + 0x8
 78108: 82 15 18                 s0 = u64 [sp + 0x18]
 78111: 28 37                    jump @6100
      :                          @6098
 78113: 82 18 38                 a1 = u64 [sp + 0x38]
 78116: 82 8c                    a5 = u64 [a1]
 78118: 64 64                    t2 = s1
 78120: 82 06                    s1 = u64 [ra]
 78122: 97 79 03                 a2 = a0 << 0x3
 78125: 82 52 f8                 t0 = u64 [s0 + 0xfffffffffffffff8]
 78128: c8 9c 0c                 a5 = a5 + a2
 78131: c8 36 06                 s1 = s1 + t1
 78134: 82 66                    s1 = u64 [s1]
 78136: c8 29 09                 a2 = a2 + t0
 78139: 82 99                    a2 = u64 [a2]
 78141: 82 c8                    a1 = u64 [a5]
 78143: c8 69 09                 a2 = a2 + s1
 78146: 64 46                    s1 = t2
 78148: e6 98 08                 a1 = minu(a1, a2)
 78151: 7b c8                    u64 [a5] = a1
 78153: 01                       fallthrough
      :                          @6099
 78154: 95 bb 01                 a4 = a4 + 0x1
 78157: 95 55 18                 s0 = s0 + 0x18
 78160: 95 33 08                 t1 = t1 + 0x8
 78163: aa b6 92                 jump @6093 if s1 == a4
      :                          @6100
 78166: d0 ba 0c                 a5 = a3 >> a4
 78169: 84 cc 01                 a5 = a5 & 0x1
 78172: 51 0c ee                 jump @6099 if a5 == 0
      :                          @6101
 78175: 82 18 40                 a1 = u64 [sp + 0x40]
 78178: 82 8c                    a5 = u64 [a1]
 78180: ae c7 7b 01              jump @6149 if a0 >=u a5
      :                          @6102
 78184: 82 18 48                 a1 = u64 [sp + 0x48]
 78187: 82 8c                    a5 = u64 [a1]
 78189: ae cb 71 01              jump @6148 if a4 >=u a5
      :                          @6103
 78193: 82 5c                    a5 = u64 [s0]
 78195: ac c7 ae                 jump @6098 if a0 <u a5
      :                          @6104
 78198: 28 69 01                 jump @6149
      :                          @6105
 78201: 33 08                    a1 = 0
 78203: 01                       fallthrough
      :                          @6106
 78204: d0 8a 0b                 a4 = a3 >> a1
 78207: 84 bb 01                 a4 = a4 & 0x1
 78210: 52 0b 67 01              jump @6159 if a4 != 0
      :                          @6107
 78214: 95 88 01                 a1 = a1 + 0x1
 78217: ab 86 f3                 jump @6106 if s1 != a1
      :                          @6108
 78220: 28 59 ff                 jump @6093
      :                          @6109
 78223: 33 08                    a1 = 0
 78225: 28 09                    jump @6111
      :                          @6110
 78227: 95 88 01                 a1 = a1 + 0x1
 78230: aa 68 1c ff              jump @6089 if a1 == s1
      :                          @6111
 78234: 33 07 01                 a0 = 0x1
 78237: cf 87 0a                 a3 = a0 << a1
 78240: d2 ca 09                 a2 = a3 & a5
 78243: 51 09 f0                 jump @6110 if a2 == 0
      :                          @6112
 78246: aa ca ed                 jump @6110 if a3 == a5
      :                          @6113
 78249: 33 09                    a2 = 0
 78251: d3 ca 0a                 a3 = a3 ^ a5
 78254: 01                       fallthrough
      :                          @6114
 78255: d0 9a 0b                 a4 = a3 >> a2
 78258: 84 bb 01                 a4 = a4 & 0x1
 78261: 52 0b 33 01              jump @6158 if a4 != 0
      :                          @6115
 78265: 95 99 01                 a2 = a2 + 0x1
 78268: ab 96 f3                 jump @6114 if s1 != a2
      :                          @6116
 78271: 28 d4                    jump @6110
      :                          @6117
 78273: 51 06 26 01              jump @6157 if s1 == 0
      :                          @6118
 78277: 82 17 08                 a0 = u64 [sp + 0x8]
 78280: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 78283: 82 10 20                 ra = u64 [sp + 0x20]
 78286: 82 18 28                 a1 = u64 [sp + 0x28]
 78289: ae 87 12 01              jump @6153 if a0 >=u a1
      :                          @6119
 78293: 96 77 18                 a0 = a0 * 0x18
 78296: c8 07 07                 a0 = a0 + ra
 78299: 82 79 10                 a2 = u64 [a0 + 0x10]
 78302: 51 09 02 01              jump @6150 if a2 == 0
      :                          @6120
 78306: 82 18                    a1 = u64 [sp]
 78308: 82 88 08                 a1 = u64 [a1 + 0x8]
 78311: 82 8a 10                 a3 = u64 [a1 + 0x10]
 78314: 51 0a f6 00              jump @6150 if a3 == 0
      :                          @6121
 78318: 82 7a 08                 a3 = u64 [a0 + 0x8]
 78321: 82 87 08                 a0 = u64 [a1 + 0x8]
 78324: 82 ac                    a5 = u64 [a3]
 78326: 82 77                    a0 = u64 [a0]
 78328: c8 c7 07                 a0 = a0 + a5
 78331: 53 16 02 54              jump @6129 if s1 <u 2
      :                          @6122
 78335: 53 19 02 e2 00           jump @6151 if a2 <u 2
      :                          @6123
 78340: 82 8b 28                 a4 = u64 [a1 + 0x28]
 78343: 51 0b d9 00              jump @6150 if a4 == 0
      :                          @6124
 78347: 82 8b 20                 a4 = u64 [a1 + 0x20]
 78350: 82 ac 08                 a5 = u64 [a3 + 0x8]
 78353: 82 bb                    a4 = u64 [a4]
 78355: c8 cb 0b                 a4 = a4 + a5
 78358: 95 66 fe                 s1 = s1 + 0xfffffffffffffffe
 78361: e6 b7 07                 a0 = minu(a0, a4)
 78364: 51 06 33                 jump @6129 if s1 == 0
      :                          @6125
 78367: 95 88 40                 a1 = a1 + 0x40
 78370: 95 aa 10                 a3 = a3 + 0x10
 78373: 95 9b fe                 a4 = a2 + 0xfffffffffffffffe
 78376: 01                       fallthrough
      :                          @6126
 78377: 51 0b b8 00              jump @6151 if a4 == 0
      :                          @6127
 78381: 82 8c                    a5 = u64 [a1]
 78383: 51 0c b1 00              jump @6150 if a5 == 0
      :                          @6128
 78387: 82 8c f8                 a5 = u64 [a1 + 0xfffffffffffffff8]
 78390: 82 a5                    s0 = u64 [a3]
 78392: 82 cc                    a5 = u64 [a5]
 78394: c8 5c 0c                 a5 = a5 + s0
 78397: e6 c7 07                 a0 = minu(a0, a5)
 78400: 95 88 18                 a1 = a1 + 0x18
 78403: 95 aa 08                 a3 = a3 + 0x8
 78406: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 78409: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 78412: 52 06 dd                 jump @6126 if s1 != 0
      :                          @6129
 78415: 33 08                    a1 = 0
 78417: 33 03 18                 t1 = 0x18
 78420: 33 0a c0 22 03           a3 = 0x322c0
 78425: 95 ab 00 00 01           a4 = a3 + 0x10000
 78430: 33 02 00 20              t0 = 0x2000
 78434: 28 0b                    jump @6131
      :                          @6130
 78436: 95 88 01                 a1 = a1 + 0x1
 78439: 82 19 28                 a2 = u64 [sp + 0x28]
 78442: aa 98 33                 jump @6140 if a1 == a2
      :                          @6131
 78445: ca 38 0c                 a5 = a1 * t1
 78448: c8 0c 0c                 a5 = a5 + ra
 78451: 82 c6                    s1 = u64 [a5]
 78453: 51 06 ef                 jump @6130 if s1 == 0
      :                          @6132
 78456: ac 62 ec                 jump @6130 if t0 <u s1
      :                          @6133
 78459: 82 cc 08                 a5 = u64 [a5 + 0x8]
 78462: 97 64 03                 t2 = s1 << 0x3
 78465: 01                       fallthrough
      :                          @6134
 78466: 82 b5                    s0 = u64 [a4]
 78468: c9 5b 0a                 a3 = a4 - s0
 78471: ab ca dd                 jump @6130 if a3 != a5
      :                          @6135
 78474: c9 45 0a                 a3 = s0 - t2
 78477: 01                       fallthrough
      :                          @6136
 78478: 82 b9                    a2 = u64 [a4]
 78480: ab 59 f2                 jump @6134 if a2 != s0
      :                          @6137
 78483: 7b ba                    u64 [a4] = a3
 78485: 33 06                    s1 = 0
 78487: 01                       fallthrough
      :                          @6138
 78488: ab 59 ea                 jump @6134 if a2 != s0
      :                          @6139
 78491: 28 c9                    jump @6130
      :                          @6140
 78493: 82 18 50                 a1 = u64 [sp + 0x50]
 78496: 51 08 2c                 jump @6147 if a1 == 0
      :                          @6141
 78499: 33 09 aa 0a              a2 = 0xaaa
 78503: ac 89 25                 jump @6147 if a2 <u a1
      :                          @6142
 78506: 96 88 e8                 a1 = a1 * 0xffffffffffffffe8
 78509: 33 09 c0 22 03           a2 = 0x322c0
 78514: 95 99 00 00 01           a2 = a2 + 0x10000
 78519: 01                       fallthrough
      :                          @6143
 78520: 82 9a                    a3 = u64 [a2]
 78522: c9 a9 0b                 a4 = a2 - a3
 78525: ab 0b 0f                 jump @6147 if a4 != ra
      :                          @6144
 78528: c8 8a 0b                 a4 = a3 + a1
 78531: 01                       fallthrough
      :                          @6145
 78532: 82 9c                    a5 = u64 [a2]
 78534: ab ac f2                 jump @6143 if a5 != a3
      :                          @6146
 78537: 7b 9b                    u64 [a2] = a4
 78539: 01                       fallthrough
      :                          @6147
 78540: 82 10 90 00              ra = u64 [sp + 0x90]
 78544: 82 15 88 00              s0 = u64 [sp + 0x88]
 78548: 82 16 80 00              s1 = u64 [sp + 0x80]
 78552: 95 11 98 00              sp = sp + 0x98
 78556: 32 00                    ret
      :                          @6148
 78558: 00                       trap
      :                          @6149
 78559: 00                       trap
      :                          @6150
 78560: 00                       trap
      :                          @6151
 78561: 00                       trap
      :                          @6152
 78562: 00                       trap
      :                          @6153
 78563: 00                       trap
      :                          @6154
 78564: 00                       trap
      :                          @6155
 78565: 00                       trap
      :                          @6156
 78566: 00                       trap
      :                          @6157
 78567: 00                       trap
      :                          @6158
 78568: 00                       trap
      :                          @6159
 78569: 82 18 40                 a1 = u64 [sp + 0x40]
 78572: 82 8c                    a5 = u64 [a1]
 78574: ae c7 f1                 jump @6149 if a0 >=u a5
      :                          @6160
 78577: 00                       trap
      :                          @6161
 78578: 82 9a                    a3 = u64 [a2]
 78580: 95 a8 14                 a1 = a3 + 0x14
 78583: ac a8 15 02              jump @6215 if a1 <u a3
      :                          @6162
 78587: 95 8b 01                 a4 = a1 + 0x1
 78590: 88 bc 01                 a5 = a4 <u 0x1
 78593: d8 b6 0b                 a4 = s1 <u a4
 78596: d4 cb 0b                 a4 = a4 | a5
 78599: 52 0b 05 02              jump @6215 if a4 != 0
      :                          @6163
 78603: 82 9b                    a4 = u64 [a2]
 78605: ab ab e5                 jump @6161 if a4 != a3
      :                          @6164
 78608: 7b 98                    u64 [a2] = a1
 78610: 33 0c                    a5 = 0
 78612: 7b 17                    u64 [sp] = a0
 78614: 33 07 c0 22 04           a0 = 0x422c0
 78619: c9 87 06                 s1 = a0 - a1
 78622: 33 09 14                 a2 = 0x14
 78625: 64 67                    a0 = s1
 78627: 33 08                    a1 = 0
 78629: 50 20 c8 03 f1 d8 01     ra = 968, jump @13687
      :                          @6165 [@dyn 484]
 78636: 33 00 14                 ra = 0x14
 78639: 82 52 10                 t0 = u64 [s0 + 0x10]
 78642: 49 11 30                 u64 [sp + 48] = 0
 78645: 64 57                    a0 = s0
 78647: 33 05 08                 s0 = 0x8
 78650: 7b 15 38                 u64 [sp + 0x38] = s0
 78653: 49 11 40                 u64 [sp + 64] = 0
 78656: 51 02 0f 02              jump @6222 if t0 == 0
      :                          @6166
 78660: 64 64                    t2 = s1
 78662: 82 73 08                 t1 = u64 [a0 + 0x8]
 78665: 33 08                    a1 = 0
 78667: 33 07                    a0 = 0
 78669: 95 39 18                 a2 = t1 + 0x18
 78672: 7b 19 28                 u64 [sp + 0x28] = a2
 78675: 96 29 18                 a2 = t0 * 0x18
 78678: 95 99 e8                 a2 = a2 + 0xffffffffffffffe8
 78681: 14 0b 00 00 00 00 ab aa aa aa a4 = 0xaaaaaaab00000000
 78691: 14 0a ab aa aa aa aa aa aa aa a3 = 0xaaaaaaaaaaaaaaab
 78701: d6 a9 09                 a2 = a2 mulhu a3
 78704: 98 99 04                 a2 = a2 >> 0x4
 78707: 7b 19 20                 u64 [sp + 0x20] = a2
 78710: 33 0c 01                 a5 = 0x1
 78713: 33 06 13                 s1 = 0x13
 78716: 7b 13 18                 u64 [sp + 0x18] = t1
 78719: 7b 12 08                 u64 [sp + 0x8] = t0
 78722: 28 05                    jump @6168
      :                          @6167
 78724: 7c 47                    a0 = u8 [t2]
 78726: 01                       fallthrough
      :                          @6168
 78727: 84 77 ff 00              a0 = a0 & 0xff
 78731: 51 07 76                 jump @6188 if a0 == 0
      :                          @6169
 78734: 7c 47 01                 a0 = u8 [t2 + 0x1]
 78737: 51 07 70                 jump @6188 if a0 == 0
      :                          @6170
 78740: 7c 47 02                 a0 = u8 [t2 + 0x2]
 78743: 51 07 6a                 jump @6188 if a0 == 0
      :                          @6171
 78746: 7c 47 03                 a0 = u8 [t2 + 0x3]
 78749: 51 07 64                 jump @6188 if a0 == 0
      :                          @6172
 78752: 7c 47 04                 a0 = u8 [t2 + 0x4]
 78755: 51 07 5e                 jump @6188 if a0 == 0
      :                          @6173
 78758: 7c 47 05                 a0 = u8 [t2 + 0x5]
 78761: 51 07 58                 jump @6188 if a0 == 0
      :                          @6174
 78764: 7c 47 06                 a0 = u8 [t2 + 0x6]
 78767: 51 07 52                 jump @6188 if a0 == 0
      :                          @6175
 78770: 7c 47 07                 a0 = u8 [t2 + 0x7]
 78773: 51 07 4c                 jump @6188 if a0 == 0
      :                          @6176
 78776: 7c 47 08                 a0 = u8 [t2 + 0x8]
 78779: 51 07 46                 jump @6188 if a0 == 0
      :                          @6177
 78782: 7c 47 09                 a0 = u8 [t2 + 0x9]
 78785: 51 07 40                 jump @6188 if a0 == 0
      :                          @6178
 78788: 7c 47 0a                 a0 = u8 [t2 + 0xa]
 78791: 51 07 3a                 jump @6188 if a0 == 0
      :                          @6179
 78794: 7c 47 0b                 a0 = u8 [t2 + 0xb]
 78797: 51 07 34                 jump @6188 if a0 == 0
      :                          @6180
 78800: 7c 47 0c                 a0 = u8 [t2 + 0xc]
 78803: 51 07 2e                 jump @6188 if a0 == 0
      :                          @6181
 78806: 7c 47 0d                 a0 = u8 [t2 + 0xd]
 78809: 51 07 28                 jump @6188 if a0 == 0
      :                          @6182
 78812: 7c 47 0e                 a0 = u8 [t2 + 0xe]
 78815: 51 07 22                 jump @6188 if a0 == 0
      :                          @6183
 78818: 7c 47 0f                 a0 = u8 [t2 + 0xf]
 78821: 51 07 1c                 jump @6188 if a0 == 0
      :                          @6184
 78824: 7c 47 10                 a0 = u8 [t2 + 0x10]
 78827: 51 07 16                 jump @6188 if a0 == 0
      :                          @6185
 78830: 7c 47 11                 a0 = u8 [t2 + 0x11]
 78833: 51 07 10                 jump @6188 if a0 == 0
      :                          @6186
 78836: 7c 47 12                 a0 = u8 [t2 + 0x12]
 78839: 51 07 0a                 jump @6188 if a0 == 0
      :                          @6187
 78842: 7c 47 13                 a0 = u8 [t2 + 0x13]
 78845: 52 07 10 01              jump @6216 if a0 != 0
      :                          @6188
 78849: 82 39 10                 a2 = u64 [t1 + 0x10]
 78852: 51 09 2a                 jump @6194 if a2 == 0
      :                          @6189
 78855: 82 3b 08                 a4 = u64 [t1 + 0x8]
 78858: 33 0a                    a3 = 0
 78860: 01                       fallthrough
      :                          @6190
 78861: 82 b7                    a0 = u64 [a4]
 78863: ae 07 fb 00              jump @6213 if a0 >=u ra
      :                          @6191
 78867: c8 47 07                 a0 = a0 + t2
 78870: 7c 77                    a0 = u8 [a0]
 78872: 88 77 01                 a0 = a0 <u 0x1
 78875: c8 7a 0a                 a3 = a3 + a0
 78878: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 78881: 95 bb 08                 a4 = a4 + 0x8
 78884: 52 09 e9                 jump @6190 if a2 != 0
      :                          @6192
 78887: ab c2 0c                 jump @6195 if t0 != a5
      :                          @6193
 78890: 33 09                    a2 = 0
 78892: 28 72                    jump @6204
      :                          @6194
 78894: 33 0a                    a3 = 0
 78896: aa c2 fa                 jump @6193 if t0 == a5
      :                          @6195
 78899: 7b 15 10                 u64 [sp + 0x10] = s0
 78902: 33 09                    a2 = 0
 78904: 33 0c                    a5 = 0
 78906: 64 3b                    a4 = t1
 78908: 28 1c                    jump @6198
      :                          @6196
 78910: 33 09                    a2 = 0
 78912: 01                       fallthrough
      :                          @6197
 78913: 95 cc 01                 a5 = a5 + 0x1
 78916: d8 a9 07                 a0 = a2 <u a3
 78919: e4 9a 0a                 a3 = maxu(a3, a2)
 78922: 64 29                    a2 = t0
 78924: da 7c 09                 a2 = a5 if a0 == 0
 78927: da 73 0b                 a4 = t1 if a0 == 0
 78930: 82 17 20                 a0 = u64 [sp + 0x20]
 78933: aa 7c 36                 jump @6203 if a5 == a0
      :                          @6198
 78936: 64 92                    t0 = a2
 78938: 96 c3 18                 t1 = a5 * 0x18
 78941: 82 17 28                 a0 = u64 [sp + 0x28]
 78944: c8 73 03                 t1 = t1 + a0
 78947: 82 35 10                 s0 = u64 [t1 + 0x10]
 78950: 51 05 d8                 jump @6196 if s0 == 0
      :                          @6199
 78953: 82 36 08                 s1 = u64 [t1 + 0x8]
 78956: 33 09                    a2 = 0
 78958: 01                       fallthrough
      :                          @6200
 78959: 82 67                    a0 = u64 [s1]
 78961: ae 07 99 00              jump @6213 if a0 >=u ra
      :                          @6201
 78965: c8 47 07                 a0 = a0 + t2
 78968: 7c 77                    a0 = u8 [a0]
 78970: 88 77 01                 a0 = a0 <u 0x1
 78973: c8 79 09                 a2 = a2 + a0
 78976: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 78979: 95 66 08                 s1 = s1 + 0x8
 78982: 52 05 e9                 jump @6200 if s0 != 0
      :                          @6202
 78985: 28 b8                    jump @6197
      :                          @6203
 78987: 82 12 08                 t0 = u64 [sp + 0x8]
 78990: 82 13 18                 t1 = u64 [sp + 0x18]
 78993: 82 15 10                 s0 = u64 [sp + 0x10]
 78996: 33 0c 01                 a5 = 0x1
 78999: 33 06 13                 s1 = 0x13
 79002: 51 0b b5 00              jump @6222 if a4 == 0
      :                          @6204
 79006: 82 17 30                 a0 = u64 [sp + 0x30]
 79009: ab 78 2e                 jump @6207 if a1 != a0
      :                          @6205
 79012: 95 17 30                 a0 = sp + 0x30
 79015: 64 45                    s0 = t2
 79017: 64 26                    s1 = t0
 79019: 7b 19 10                 u64 [sp + 0x10] = a2
 79022: 50 20 ca 03 92 1e ff     ra = 970, jump @1581
      :                          @6206 [@dyn 485]
 79029: 82 19 10                 a2 = u64 [sp + 0x10]
 79032: 64 62                    t0 = s1
 79034: 33 06 13                 s1 = 0x13
 79037: 33 0c 01                 a5 = 0x1
 79040: 82 13 18                 t1 = u64 [sp + 0x18]
 79043: 33 00 14                 ra = 0x14
 79046: 64 54                    t2 = s0
 79048: 82 18 40                 a1 = u64 [sp + 0x40]
 79051: 82 15 38                 s0 = u64 [sp + 0x38]
 79054: 01                       fallthrough
      :                          @6207
 79055: 97 87 03                 a0 = a1 << 0x3
 79058: c8 57 07                 a0 = a0 + s0
 79061: 7b 79                    u64 [a0] = a2
 79063: 95 88 01                 a1 = a1 + 0x1
 79066: 7b 18 40                 u64 [sp + 0x40] = a1
 79069: ae 29 2e                 jump @6214 if a2 >=u t0
      :                          @6208
 79072: 96 97 18                 a0 = a2 * 0x18
 79075: c8 37 07                 a0 = a0 + t1
 79078: 82 7a 10                 a3 = u64 [a0 + 0x10]
 79081: 51 0a 9b fe              jump @6167 if a3 == 0
      :                          @6209
 79085: 82 79 08                 a2 = u64 [a0 + 0x8]
 79088: 97 aa 03                 a3 = a3 << 0x3
 79091: 01                       fallthrough
      :                          @6210
 79092: 82 97                    a0 = u64 [a2]
 79094: ac 76 14                 jump @6213 if s1 <u a0
      :                          @6211
 79097: 95 99 08                 a2 = a2 + 0x8
 79100: c8 47 07                 a0 = a0 + t2
 79103: 95 aa f8                 a3 = a3 + 0xfffffffffffffff8
 79106: 78 7c                    u8 [a0] = a5
 79108: 52 0a f0                 jump @6210 if a3 != 0
      :                          @6212
 79111: 28 7d fe                 jump @6167
      :                          @6213
 79114: 00                       trap
      :                          @6214
 79115: 00                       trap
      :                          @6215
 79116: 00                       trap
      :                          @6216
 79117: 82 17 40                 a0 = u64 [sp + 0x40]
 79120: 82 18 38                 a1 = u64 [sp + 0x38]
 79123: 82 19 30                 a2 = u64 [sp + 0x30]
 79126: 82 1a                    a3 = u64 [sp]
 79128: 7b a7 10                 u64 [a3 + 0x10] = a0
 79131: 7b a8 08                 u64 [a3 + 0x8] = a1
 79134: 7b a9                    u64 [a3] = a2
 79136: 33 07 c0 22 03           a0 = 0x322c0
 79141: 95 77 00 00 01           a0 = a0 + 0x10000
 79146: 01                       fallthrough
      :                          @6217
 79147: 82 78                    a1 = u64 [a0]
 79149: c9 87 09                 a2 = a0 - a1
 79152: ab 49 11                 jump @6221 if a2 != t2
      :                          @6218
 79155: 95 89 ec                 a2 = a1 + 0xffffffffffffffec
 79158: 01                       fallthrough
      :                          @6219
 79159: 82 7a                    a3 = u64 [a0]
 79161: ab 8a f2                 jump @6217 if a3 != a1
      :                          @6220
 79164: 7b 79                    u64 [a0] = a2
 79166: 33 0b                    a4 = 0
 79168: 01                       fallthrough
      :                          @6221
 79169: 82 10 58                 ra = u64 [sp + 0x58]
 79172: 82 15 50                 s0 = u64 [sp + 0x50]
 79175: 82 16 48                 s1 = u64 [sp + 0x48]
 79178: 95 11 60                 sp = sp + 0x60
 79181: 32 00                    ret
      :                          @6222
 79183: 00                       trap
      :                          @6223 [@dyn 486]
 79184: 49 11 10                 u64 [sp + 16] = 0
 79187: 33 07 08                 a0 = 0x8
 79190: 7b 17 18                 u64 [sp + 0x18] = a0
 79193: 49 11 20                 u64 [sp + 32] = 0
 79196: 51 06 aa 00              jump @6243 if s1 == 0
      :                          @6224
 79200: 97 66 03                 s1 = s1 << 0x3
 79203: c8 65 03                 t1 = s0 + s1
 79206: 33 06 64                 s1 = 0x64
 79209: 64 52                    t0 = s0
 79211: 7b 13                    u64 [sp] = t1
 79213: 28 13                    jump @6226
      :                          @6225
 79215: 97 89 03                 a2 = a1 << 0x3
 79218: c8 79 09                 a2 = a2 + a0
 79221: 7b 95                    u64 [a2] = s0
 79223: 95 88 01                 a1 = a1 + 0x1
 79226: 7b 18 20                 u64 [sp + 0x20] = a1
 79229: aa 32 4d                 jump @6234 if t0 == t1
      :                          @6226
 79232: 82 18 20                 a1 = u64 [sp + 0x20]
 79235: 82 25                    s0 = u64 [t0]
 79237: 95 22 08                 t0 = t0 + 0x8
 79240: 95 7a f8                 a3 = a0 + 0xfffffffffffffff8
 79243: 97 89 03                 a2 = a1 << 0x3
 79246: 01                       fallthrough
      :                          @6227
 79247: 51 09 1b                 jump @6231 if a2 == 0
      :                          @6228
 79250: 82 ac 08                 a5 = u64 [a3 + 0x8]
 79253: 95 ab 08                 a4 = a3 + 0x8
 79256: c8 5c 0c                 a5 = a5 + s0
 79259: 95 99 f8                 a2 = a2 + 0xfffffffffffffff8
 79262: 64 ba                    a3 = a4
 79264: ac c6 ef                 jump @6227 if s1 <u a5
      :                          @6229
 79267: 7b bc                    u64 [a4] = a5
 79269: ab 32 db                 jump @6226 if t0 != t1
      :                          @6230
 79272: 28 22                    jump @6234
      :                          @6231
 79274: 82 19 10                 a2 = u64 [sp + 0x10]
 79277: ab 98 c2                 jump @6225 if a1 != a2
      :                          @6232
 79280: 95 17 10                 a0 = sp + 0x10
 79283: 7b 12 08                 u64 [sp + 0x8] = t0
 79286: 50 20 ce 03 8a 1d ff     ra = 974, jump @1581
      :                          @6233 [@dyn 487]
 79293: 82 13                    t1 = u64 [sp]
 79295: 82 12 08                 t0 = u64 [sp + 0x8]
 79298: 82 18 20                 a1 = u64 [sp + 0x20]
 79301: 82 17 18                 a0 = u64 [sp + 0x18]
 79304: 28 a7                    jump @6225
      :                          @6234
 79306: 82 19 10                 a2 = u64 [sp + 0x10]
 79309: 82 17 20                 a0 = u64 [sp + 0x20]
 79312: 51 09 39                 jump @6244 if a2 == 0
      :                          @6235
 79315: 33 08 00 20              a1 = 0x2000
 79319: ac 98 32                 jump @6244 if a1 <u a2
      :                          @6236
 79322: 82 18 18                 a1 = u64 [sp + 0x18]
 79325: 97 99 03                 a2 = a2 << 0x3
 79328: 33 0a c0 22 03           a3 = 0x322c0
 79333: 95 aa 00 00 01           a3 = a3 + 0x10000
 79338: 01                       fallthrough
      :                          @6237
 79339: 82 ab                    a4 = u64 [a3]
 79341: c9 ba 0c                 a5 = a3 - a4
 79344: ab 8c 19                 jump @6244 if a5 != a1
      :                          @6238
 79347: c9 9b 0c                 a5 = a4 - a2
 79350: 01                       fallthrough
      :                          @6239
 79351: 82 a6                    s1 = u64 [a3]
 79353: ab b6 f2                 jump @6237 if s1 != a4
      :                          @6240
 79356: 7b ac                    u64 [a3] = a5
 79358: 33 05                    s0 = 0
 79360: 01                       fallthrough
      :                          @6241
 79361: ab b6 ea                 jump @6237 if s1 != a4
      :                          @6242
 79364: 28 05                    jump @6244
      :                          @6243
 79366: 33 07                    a0 = 0
 79368: 01                       fallthrough
      :                          @6244
 79369: 82 10 38                 ra = u64 [sp + 0x38]
 79372: 82 15 30                 s0 = u64 [sp + 0x30]
 79375: 82 16 28                 s1 = u64 [sp + 0x28]
 79378: 95 11 40                 sp = sp + 0x40
 79381: 32 00                    ret
      :                          @6245
 79383: 95 11 a8                 sp = sp + 0xffffffffffffffa8
 79386: 7b 10 50                 u64 [sp + 0x50] = ra
 79389: 7b 15 48                 u64 [sp + 0x48] = s0
 79392: 7b 16 40                 u64 [sp + 0x40] = s1
 79395: 82 79 10                 a2 = u64 [a0 + 0x10]
 79398: 51 09 e0 01              jump @6294 if a2 == 0
      :                          @6246
 79402: 64 76                    s1 = a0
 79404: 98 97 3b                 a0 = a2 >> 0x3b
 79407: 52 07 d9 01              jump @6296 if a0 != 0
      :                          @6247
 79411: 88 72 01                 t0 = a0 <u 0x1
 79414: 7b 19 28                 u64 [sp + 0x28] = a2
 79417: 97 99 04                 a2 = a2 << 0x4
 79420: 97 22 03                 t0 = t0 << 0x3
 79423: 33 04 c0 22 03           t2 = 0x322c0
 79428: 33 03 00 00 01           t1 = 0x10000
 79433: c8 34 00                 ra = t2 + t1
 79436: 01                       fallthrough
      :                          @6248
 79437: 82 0b                    a4 = u64 [ra]
 79439: c8 9b 05                 s0 = a4 + a2
 79442: ac b5 b5 01              jump @6295 if s0 <u a4
      :                          @6249
 79446: c8 25 07                 a0 = s0 + t0
 79449: d8 57 0c                 a5 = a0 <u s0
 79452: d8 73 07                 a0 = t1 <u a0
 79455: d4 c7 07                 a0 = a0 | a5
 79458: 52 07 a5 01              jump @6295 if a0 != 0
      :                          @6250
 79462: c9 54 0a                 a3 = t2 - s0
 79465: c8 3a 0a                 a3 = a3 + t1
 79468: 84 ac 07                 a5 = a3 & 0x7
 79471: c8 c5 05                 s0 = s0 + a5
 79474: 01                       fallthrough
      :                          @6251
 79475: 82 07                    a0 = u64 [ra]
 79477: ab b7 d8                 jump @6248 if a0 != a4
      :                          @6252
 79480: 7b 05                    u64 [ra] = s0
 79482: c9 ca 07                 a0 = a3 - a5
 79485: 7b 17 20                 u64 [sp + 0x20] = a0
 79488: 33 08                    a1 = 0
 79490: 7b 19                    u64 [sp] = a2
 79492: 50 20 d0 03 92 d5 01     ra = 976, jump @13687
      :                          @6253 [@dyn 488]
 79499: 82 67 08                 a0 = u64 [s1 + 0x8]
 79502: 7b 17 18                 u64 [sp + 0x18] = a0
 79505: 33 09 c0 22 03           a2 = 0x322c0
 79510: 33 0b 00 00 01           a4 = 0x10000
 79515: 95 97 08 00 01           a0 = a2 + 0x10008
 79520: c9 57 07                 a0 = a0 - s0
 79523: 7b 17 08                 u64 [sp + 0x8] = a0
 79526: 7b 19 10                 u64 [sp + 0x10] = a2
 79529: c8 b9 05                 s0 = a2 + a4
 79532: 82 1c 28                 a5 = u64 [sp + 0x28]
 79535: 33 03                    t1 = 0
 79537: 33 02 01                 t0 = 0x1
 79540: 28 0f                    jump @6256
      :                          @6254
 79542: 82 18 30                 a1 = u64 [sp + 0x30]
 79545: aa c8 d9 00              jump @6278 if a1 == a5
      :                          @6255
 79549: 64 83                    t1 = a1
 79551: 95 82 01                 t0 = a1 + 0x1
 79554: 01                       fallthrough
      :                          @6256
 79555: 82 58                    a1 = u64 [s0]
 79557: c8 c8 07                 a0 = a1 + a5
 79560: ac 87 3d 01              jump @6293 if a0 <u a1
      :                          @6257
 79564: 95 79 01                 a2 = a0 + 0x1
 79567: 88 9a 01                 a3 = a2 <u 0x1
 79570: d8 9b 09                 a2 = a4 <u a2
 79573: d4 a9 09                 a2 = a2 | a3
 79576: 52 09 2d 01              jump @6293 if a2 != 0
      :                          @6258
 79580: 82 59                    a2 = u64 [s0]
 79582: ab 89 e5                 jump @6256 if a2 != a1
      :                          @6259
 79585: 7b 57                    u64 [s0] = a0
 79587: 7b 12 30                 u64 [sp + 0x30] = t0
 79590: 82 18 10                 a1 = u64 [sp + 0x10]
 79593: c9 78 07                 a0 = a1 - a0
 79596: c8 b7 06                 s1 = a0 + a4
 79599: 64 67                    a0 = s1
 79601: 33 08                    a1 = 0
 79603: 64 c9                    a2 = a5
 79605: 7b 13 38                 u64 [sp + 0x38] = t1
 79608: 50 20 d2 03 1e d5 01     ra = 978, jump @13687
      :                          @6260 [@dyn 489]
 79615: 82 1c 28                 a5 = u64 [sp + 0x28]
 79618: 82 13 38                 t1 = u64 [sp + 0x38]
 79621: 33 04 01                 t2 = 0x1
 79624: 33 07                    a0 = 0
 79626: 96 38 18                 a1 = t1 * 0x18
 79629: 82 19 18                 a2 = u64 [sp + 0x18]
 79632: c8 98 08                 a1 = a1 + a2
 79635: 95 89 10                 a2 = a1 + 0x10
 79638: 95 8a 08                 a3 = a1 + 0x8
 79641: 82 1b 08                 a4 = u64 [sp + 0x8]
 79644: 82 12 20                 t0 = u64 [sp + 0x20]
 79647: 28 0b                    jump @6262
      :                          @6261
 79649: 95 77 01                 a0 = a0 + 0x1
 79652: 95 bb 10                 a4 = a4 + 0x10
 79655: aa 7c 26                 jump @6267 if a5 == a0
      :                          @6262
 79658: 82 98                    a1 = u64 [a2]
 79660: ae 87 86 00              jump @6281 if a0 >=u a1
      :                          @6263
 79664: 82 a8                    a1 = u64 [a3]
 79666: c8 78 08                 a1 = a1 + a0
 79669: 7c 88                    a1 = u8 [a1]
 79671: 51 08 ea                 jump @6261 if a1 == 0
      :                          @6264
 79674: 82 b8 f8                 a1 = u64 [a4 + 0xfffffffffffffff8]
 79677: 51 08 e4                 jump @6261 if a1 == 0
      :                          @6265
 79680: 82 b8                    a1 = u64 [a4]
 79682: ae c8 c2 00              jump @6292 if a1 >=u a5
      :                          @6266
 79686: c8 68 08                 a1 = a1 + s1
 79689: 78 84                    u8 [a1] = t2
 79691: 28 d6                    jump @6261
      :                          @6267
 79693: 33 07                    a0 = 0
 79695: 01                       fallthrough
      :                          @6268
 79696: c8 76 08                 a1 = s1 + a0
 79699: 7c 88                    a1 = u8 [a1]
 79701: 51 08 0c                 jump @6271 if a1 == 0
      :                          @6269
 79704: 95 77 01                 a0 = a0 + 0x1
 79707: ab 7c f5                 jump @6268 if a5 != a0
      :                          @6270
 79710: 28 a8 00                 jump @6294
      :                          @6271
 79713: 97 38 04                 a1 = t1 << 0x4
 79716: c8 28 08                 a1 = a1 + t0
 79719: 7b 84                    u64 [a1] = t2
 79721: 7b 87 08                 u64 [a1 + 0x8] = a0
 79724: 33 0b 00 00 01           a4 = 0x10000
 79729: ac cb 45 ff              jump @6254 if a4 <u a5
      :                          @6272
 79733: 82 57                    a0 = u64 [s0]
 79735: c9 75 08                 a1 = s0 - a0
 79738: ab 68 3c ff              jump @6254 if a1 != s1
      :                          @6273
 79742: c9 c7 08                 a1 = a0 - a5
 79745: 01                       fallthrough
      :                          @6274
 79746: 82 59                    a2 = u64 [s0]
 79748: ab 79 f1                 jump @6272 if a2 != a0
      :                          @6275
 79751: 7b 58                    u64 [s0] = a1
 79753: 33 0a                    a3 = 0
 79755: 01                       fallthrough
      :                          @6276
 79756: ab 79 e9                 jump @6272 if a2 != a0
      :                          @6277
 79759: 28 27 ff                 jump @6254
      :                          @6278
 79762: 82 15 20                 s0 = u64 [sp + 0x20]
 79765: 82 57                    a0 = u64 [s0]
 79767: 51 07 6f                 jump @6294 if a0 == 0
      :                          @6279
 79770: 82 57 08                 a0 = u64 [s0 + 0x8]
 79773: 82 12                    t0 = u64 [sp]
 79775: 52 1c 01 14              jump @6282 if a5 != 1
      :                          @6280
 79779: 33 02 10                 t0 = 0x10
 79782: 33 08 c0 22 03           a1 = 0x322c0
 79787: 95 88 00 00 01           a1 = a1 + 0x10000
 79792: 28 2d                    jump @6287
      :                          @6281
 79794: 00                       trap
      :                          @6282
 79795: c8 25 08                 a1 = s0 + t0
 79798: 95 59 10                 a2 = s0 + 0x10
 79801: 01                       fallthrough
      :                          @6283
 79802: 82 9a                    a3 = u64 [a2]
 79804: 51 0a 4a                 jump @6294 if a3 == 0
      :                          @6284
 79807: 82 9a 08                 a3 = u64 [a2 + 0x8]
 79810: 95 99 10                 a2 = a2 + 0x10
 79813: e4 a7 07                 a0 = maxu(a0, a3)
 79816: ab 89 f2                 jump @6283 if a2 != a1
      :                          @6285
 79819: 33 08 00 10              a1 = 0x1000
 79823: ac c8 24                 jump @6291 if a1 <u a5
      :                          @6286
 79826: 33 08 c0 22 03           a1 = 0x322c0
 79831: 95 88 00 00 01           a1 = a1 + 0x10000
 79836: 01                       fallthrough
      :                          @6287
 79837: 82 89                    a2 = u64 [a1]
 79839: c9 98 0a                 a3 = a1 - a2
 79842: ab 5a 11                 jump @6291 if a3 != s0
      :                          @6288
 79845: c9 29 0a                 a3 = a2 - t0
 79848: 01                       fallthrough
      :                          @6289
 79849: 82 8b                    a4 = u64 [a1]
 79851: ab 9b f2                 jump @6287 if a4 != a2
      :                          @6290
 79854: 7b 8a                    u64 [a1] = a3
 79856: 33 0c                    a5 = 0
 79858: 01                       fallthrough
      :                          @6291
 79859: 95 77 01                 a0 = a0 + 0x1
 79862: 82 10 50                 ra = u64 [sp + 0x50]
 79865: 82 15 48                 s0 = u64 [sp + 0x48]
 79868: 82 16 40                 s1 = u64 [sp + 0x40]
 79871: 95 11 58                 sp = sp + 0x58
 79874: 32 00                    ret
      :                          @6292
 79876: 00                       trap
      :                          @6293
 79877: 00                       trap
      :                          @6294
 79878: 00                       trap
      :                          @6295
 79879: 00                       trap
      :                          @6296
 79880: 00                       trap
      :                          @6297
 79881: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 79884: 7b 10 20                 u64 [sp + 0x20] = ra
 79887: 7b 15 18                 u64 [sp + 0x18] = s0
 79890: 7b 16 10                 u64 [sp + 0x10] = s1
 79893: 84 89 1f                 a2 = a1 & 0x1f
 79896: 33 0a 1f                 a3 = 0x1f
 79899: aa a9 85 00              jump @6312 if a2 == a3
      :                          @6298
 79903: 51 08 81 00              jump @6312 if a1 == 0
      :                          @6299
 79907: 49 01                    u64 [sp + 0] = 0
 79909: 33 00                    ra = 0
 79911: 90 89 01                 i32 a2 = 0x1 << a1
 79914: 33 0a 01                 a3 = 0x1
 79917: e3 a9 09                 a2 = maxs(a2, a3)
 79920: 7b 19 08                 u64 [sp + 0x8] = a2
 79923: 28 10                    jump @6302
      :                          @6300
 79925: 82 1a                    a3 = u64 [sp]
 79927: e4 9a 0a                 a3 = maxu(a3, a2)
 79930: 7b 1a                    u64 [sp] = a3
 79932: 01                       fallthrough
      :                          @6301
 79933: 82 19 08                 a2 = u64 [sp + 0x8]
 79936: aa 90 63                 jump @6313 if ra == a2
      :                          @6302
 79939: 33 09                    a2 = 0
 79941: 33 0c                    a5 = 0
 79943: 64 05                    s0 = ra
 79945: 83 00 01                 i32 ra = ra + 0x1
 79948: 33 04 01                 t2 = 0x1
 79951: 28 08                    jump @6304
      :                          @6303
 79953: 83 44 01                 i32 t2 = t2 + 0x1
 79956: aa 8c e1                 jump @6300 if a5 == a1
      :                          @6304
 79959: 64 ca                    a3 = a5
 79961: c6 c5 0b                 i32 a4 = s0 >> a5
 79964: 84 bb 01                 a4 = a4 & 0x1
 79967: 95 cc 01                 a5 = a5 + 0x1
 79970: 51 0b ef                 jump @6303 if a4 == 0
      :                          @6305
 79973: 95 99 01                 a2 = a2 + 0x1
 79976: ae 8c e9                 jump @6303 if a5 >=u a1
      :                          @6306
 79979: 96 aa 18                 a3 = a3 * 0x18
 79982: c8 7a 0a                 a3 = a3 + a0
 79985: 95 a2 10                 t0 = a3 + 0x10
 79988: 95 a3 08                 t1 = a3 + 0x8
 79991: 64 46                    s1 = t2
 79993: 64 ca                    a3 = a5
 79995: 28 0b                    jump @6308
      :                          @6307
 79997: 95 aa 01                 a3 = a3 + 0x1
 80000: 83 66 01                 i32 s1 = s1 + 0x1
 80003: aa a8 ce                 jump @6303 if a1 == a3
      :                          @6308
 80006: c6 65 0b                 i32 a4 = s0 >> s1
 80009: 84 bb 01                 a4 = a4 & 0x1
 80012: 51 0b f1                 jump @6307 if a4 == 0
      :                          @6309
 80015: 82 2b                    a4 = u64 [t0]
 80017: ae ba 22                 jump @6314 if a3 >=u a4
      :                          @6310
 80020: 82 3b                    a4 = u64 [t1]
 80022: c8 ab 0b                 a4 = a4 + a3
 80025: 7c bb                    a4 = u8 [a4]
 80027: 51 0b e2                 jump @6307 if a4 == 0
      :                          @6311
 80030: 28 9f                    jump @6301
      :                          @6312
 80032: 49 01                    u64 [sp + 0] = 0
 80034: 01                       fallthrough
      :                          @6313
 80035: 82 17                    a0 = u64 [sp]
 80037: 82 10 20                 ra = u64 [sp + 0x20]
 80040: 82 15 18                 s0 = u64 [sp + 0x18]
 80043: 82 16 10                 s1 = u64 [sp + 0x10]
 80046: 95 11 28                 sp = sp + 0x28
 80049: 32 00                    ret
      :                          @6314
 80051: 00                       trap
      :                          @6315
 80052: 95 11 50 ff              sp = sp + 0xffffffffffffff50
 80056: 7b 10 a8 00              u64 [sp + 0xa8] = ra
 80060: 7b 15 a0 00              u64 [sp + 0xa0] = s0
 80064: 7b 16 98 00              u64 [sp + 0x98] = s1
 80068: 82 89 10                 a2 = u64 [a1 + 0x10]
 80071: 7b 17 08                 u64 [sp + 0x8] = a0
 80074: 51 09 ed 01              jump @6351 if a2 == 0
      :                          @6316
 80078: 57 09 dc 02              jump @6384 if a2 <s 0
      :                          @6317
 80082: 85 95 ff                 s0 = a2 ^ 0xffffffffffffffff
 80085: 98 53 3f                 t1 = s0 >> 0x3f
 80088: 33 05 c0 22 03           s0 = 0x322c0
 80093: 33 02 00 00 01           t0 = 0x10000
 80098: c8 25 05                 s0 = s0 + t0
 80101: 01                       fallthrough
      :                          @6318
 80102: 82 5b                    a4 = u64 [s0]
 80104: c8 9b 0a                 a3 = a4 + a2
 80107: ac ba b9 02              jump @6378 if a3 <u a4
      :                          @6319
 80111: c8 3a 0c                 a5 = a3 + t1
 80114: d8 ac 06                 s1 = a5 <u a3
 80117: d8 c2 0c                 a5 = t0 <u a5
 80120: d4 6c 0c                 a5 = a5 | s1
 80123: 52 0c a9 02              jump @6378 if a5 != 0
      :                          @6320
 80127: 82 5c                    a5 = u64 [s0]
 80129: ab bc e5                 jump @6318 if a5 != a4
      :                          @6321
 80132: 7b 5a                    u64 [s0] = a3
 80134: 7b 18 60                 u64 [sp + 0x60] = a1
 80137: 33 06 c0 22 04           s1 = 0x422c0
 80142: c9 a6 06                 s1 = s1 - a3
 80145: 64 67                    a0 = s1
 80147: 33 08                    a1 = 0
 80149: 7b 19 40                 u64 [sp + 0x40] = a2
 80152: 50 20 d4 03 fe d2 01     ra = 980, jump @13687
      :                          @6322 [@dyn 490]
 80159: 82 17 40                 a0 = u64 [sp + 0x40]
 80162: 7b 17 80 00              u64 [sp + 0x80] = a0
 80166: 7b 16 88 00              u64 [sp + 0x88] = s1
 80170: 82 17 40                 a0 = u64 [sp + 0x40]
 80173: 7b 17 90 00              u64 [sp + 0x90] = a0
 80177: 95 17 68                 a0 = sp + 0x68
 80180: 95 18 80 00              a1 = sp + 0x80
 80184: 82 19 40                 a2 = u64 [sp + 0x40]
 80187: 50 20 d6 03 48 2c ff     ra = 982, jump @1907
      :                          @6323 [@dyn 491]
 80194: 82 13 40                 t1 = u64 [sp + 0x40]
 80197: 49 21 80 00              u64 [sp + 128] = 0
 80201: 33 0b 08                 a4 = 0x8
 80204: 7b 1b 88 00              u64 [sp + 0x88] = a4
 80208: 49 21 90 00              u64 [sp + 144] = 0
 80212: 51 03 7b 01              jump @6352 if t1 == 0
      :                          @6324
 80216: 82 19 70                 a2 = u64 [sp + 0x70]
 80219: 33 08                    a1 = 0
 80221: 33 05                    s0 = 0
 80223: 82 17 60                 a0 = u64 [sp + 0x60]
 80226: 82 77 08                 a0 = u64 [a0 + 0x8]
 80229: 7b 17                    u64 [sp] = a0
 80231: 82 14 78                 t2 = u64 [sp + 0x78]
 80234: 7b 19 48                 u64 [sp + 0x48] = a2
 80237: 95 97 10                 a0 = a2 + 0x10
 80240: 7b 17 28                 u64 [sp + 0x28] = a0
 80243: 33 07 01                 a0 = 0x1
 80246: 7b 14 10                 u64 [sp + 0x10] = t2
 80249: 28 0f                    jump @6326
      :                          @6325
 80251: 82 17 20                 a0 = u64 [sp + 0x20]
 80254: 95 77 01                 a0 = a0 + 0x1
 80257: 82 15 18                 s0 = u64 [sp + 0x18]
 80260: aa 35 4b 01              jump @6352 if s0 == t1
      :                          @6326
 80264: 7b 17 20                 u64 [sp + 0x20] = a0
 80267: 95 56 01                 s1 = s0 + 0x1
 80270: 7b 16 18                 u64 [sp + 0x18] = s1
 80273: ae 36 ea                 jump @6325 if s1 >=u t1
      :                          @6327
 80276: 96 57 18                 a0 = s0 * 0x18
 80279: 82 19                    a2 = u64 [sp]
 80281: c8 79 09                 a2 = a2 + a0
 80284: 95 9a 10                 a3 = a2 + 0x10
 80287: 95 9c 08                 a5 = a2 + 0x8
 80290: ae 45 f8 00              jump @6346 if s0 >=u t2
      :                          @6328
 80294: 82 19 48                 a2 = u64 [sp + 0x48]
 80297: c8 97 07                 a0 = a0 + a2
 80300: 95 79 10                 a2 = a0 + 0x10
 80303: 7b 19 60                 u64 [sp + 0x60] = a2
 80306: 95 77 08                 a0 = a0 + 0x8
 80309: 7b 17 58                 u64 [sp + 0x58] = a0
 80312: 7b 1c 38                 u64 [sp + 0x38] = a5
 80315: 7b 1a 30                 u64 [sp + 0x30] = a3
 80318: 28 08                    jump @6330
      :                          @6329
 80320: 95 66 01                 s1 = s1 + 0x1
 80323: aa 36 b8                 jump @6325 if s1 == t1
      :                          @6330
 80326: 82 a9                    a2 = u64 [a3]
 80328: ae 96 de 01              jump @6380 if s1 >=u a2
      :                          @6331
 80332: 82 c7                    a0 = u64 [a5]
 80334: c8 67 07                 a0 = a0 + s1
 80337: 7c 77                    a0 = u8 [a0]
 80339: 51 07 ed                 jump @6329 if a0 == 0
      :                          @6332
 80342: 82 17 60                 a0 = u64 [sp + 0x60]
 80345: 82 79                    a2 = u64 [a0]
 80347: ae 96 cb 01              jump @6380 if s1 >=u a2
      :                          @6333
 80351: 82 17 58                 a0 = u64 [sp + 0x58]
 80354: 82 77                    a0 = u64 [a0]
 80356: c8 67 07                 a0 = a0 + s1
 80359: 7c 77                    a0 = u8 [a0]
 80361: 52 07 d7                 jump @6329 if a0 != 0
      :                          @6334
 80364: 82 17 80 00              a0 = u64 [sp + 0x80]
 80368: ab 78 1d                 jump @6337 if a1 != a0
      :                          @6335
 80371: 95 17 80 00              a0 = sp + 0x80
 80375: 50 20 d8 03 4b 1a ff     ra = 984, jump @1605
      :                          @6336 [@dyn 492]
 80382: 82 14 10                 t2 = u64 [sp + 0x10]
 80385: 82 13 40                 t1 = u64 [sp + 0x40]
 80388: 82 18 90 00              a1 = u64 [sp + 0x90]
 80392: 82 1b 88 00              a4 = u64 [sp + 0x88]
 80396: 01                       fallthrough
      :                          @6337
 80397: 97 87 04                 a0 = a1 << 0x4
 80400: c8 b7 07                 a0 = a0 + a4
 80403: 7b 75                    u64 [a0] = s0
 80405: 7b 76 08                 u64 [a0 + 0x8] = s1
 80408: 95 88 01                 a1 = a1 + 0x1
 80411: 7b 18 90 00              u64 [sp + 0x90] = a1
 80415: ae 46 5b 01              jump @6373 if s1 >=u t2
      :                          @6338
 80419: 7b 1b 50                 u64 [sp + 0x50] = a4
 80422: 33 07                    a0 = 0
 80424: 96 69 18                 a2 = s1 * 0x18
 80427: 82 1a 48                 a3 = u64 [sp + 0x48]
 80430: c8 a9 09                 a2 = a2 + a3
 80433: 95 90 10                 ra = a2 + 0x10
 80436: 95 9c 08                 a5 = a2 + 0x8
 80439: 82 1a 28                 a3 = u64 [sp + 0x28]
 80442: 01                       fallthrough
      :                          @6339
 80443: 82 19 60                 a2 = u64 [sp + 0x60]
 80446: 82 99                    a2 = u64 [a2]
 80448: ae 97 68 01              jump @6382 if a0 >=u a2
      :                          @6340
 80452: 64 5b                    a4 = s0
 80454: 82 19 58                 a2 = u64 [sp + 0x58]
 80457: 82 99                    a2 = u64 [a2]
 80459: c8 79 09                 a2 = a2 + a0
 80462: 46 09 01                 u8 [a2 + 0] = 0x1
 80465: aa 74 28 01              jump @6372 if t2 == a0
      :                          @6341
 80469: 82 a9                    a2 = u64 [a3]
 80471: 64 b5                    s0 = a4
 80473: ae 9b 4a 01              jump @6377 if a4 >=u a2
      :                          @6342
 80477: 82 a9 f8                 a2 = u64 [a3 + 0xfffffffffffffff8]
 80480: c8 59 09                 a2 = a2 + s0
 80483: 33 02 01                 t0 = 0x1
 80486: 78 92                    u8 [a2] = t0
 80488: 82 09                    a2 = u64 [ra]
 80490: ae 97 3e 01              jump @6382 if a0 >=u a2
      :                          @6343
 80494: 82 c9                    a2 = u64 [a5]
 80496: c8 79 09                 a2 = a2 + a0
 80499: 46 09 01                 u8 [a2 + 0] = 0x1
 80502: 82 a9                    a2 = u64 [a3]
 80504: ae 96 2e 01              jump @6380 if s1 >=u a2
      :                          @6344
 80508: 82 a9 f8                 a2 = u64 [a3 + 0xfffffffffffffff8]
 80511: 95 77 01                 a0 = a0 + 0x1
 80514: c8 69 09                 a2 = a2 + s1
 80517: 46 09 01                 u8 [a2 + 0] = 0x1
 80520: 95 aa 18                 a3 = a3 + 0x18
 80523: ab 73 b0                 jump @6339 if t1 != a0
      :                          @6345
 80526: 82 1b 50                 a4 = u64 [sp + 0x50]
 80529: 82 1c 38                 a5 = u64 [sp + 0x38]
 80532: 82 1a 30                 a3 = u64 [sp + 0x30]
 80535: 28 29 ff                 jump @6329
      :                          @6346
 80538: 82 a9                    a2 = u64 [a3]
 80540: 64 67                    a0 = s1
 80542: 01                       fallthrough
      :                          @6347
 80543: ae 97 06 01              jump @6379 if a0 >=u a2
      :                          @6348
 80547: 82 ca                    a3 = u64 [a5]
 80549: c8 7a 0a                 a3 = a3 + a0
 80552: 7c aa                    a3 = u8 [a3]
 80554: 52 0a 01 01              jump @6385 if a3 != 0
      :                          @6349
 80558: 95 77 01                 a0 = a0 + 0x1
 80561: ab 73 ee                 jump @6347 if t1 != a0
      :                          @6350
 80564: 28 c7 fe                 jump @6325
      :                          @6351
 80567: 49 11 68                 u64 [sp + 104] = 0
 80570: 49 11 70 08              u64 [sp + 112] = 0x8
 80574: 49 11 78                 u64 [sp + 120] = 0
 80577: 49 21 80 00              u64 [sp + 128] = 0
 80581: 49 21 88 00 08           u64 [sp + 136] = 0x8
 80586: 49 21 90 00              u64 [sp + 144] = 0
 80590: 01                       fallthrough
      :                          @6352
 80591: 82 17 90 00              a0 = u64 [sp + 0x90]
 80595: 82 19 88 00              a2 = u64 [sp + 0x88]
 80599: 82 1a 80 00              a3 = u64 [sp + 0x80]
 80603: 82 10 78                 ra = u64 [sp + 0x78]
 80606: 82 14 70                 t2 = u64 [sp + 0x70]
 80609: 82 18 08                 a1 = u64 [sp + 0x8]
 80612: 7b 87 10                 u64 [a1 + 0x10] = a0
 80615: 7b 89 08                 u64 [a1 + 0x8] = a2
 80618: 7b 8a                    u64 [a1] = a3
 80620: 51 00 4a                 jump @6364 if ra == 0
      :                          @6353
 80623: 33 09                    a2 = 0
 80625: 33 03 18                 t1 = 0x18
 80628: 33 02 00 00 01           t0 = 0x10000
 80633: 33 0c c0 22 03           a5 = 0x322c0
 80638: c8 2c 0a                 a3 = a5 + t0
 80641: 28 08                    jump @6355
      :                          @6354
 80643: 95 99 01                 a2 = a2 + 0x1
 80646: aa 09 30                 jump @6364 if a2 == ra
      :                          @6355
 80649: ca 39 07                 a0 = a2 * t1
 80652: c8 47 07                 a0 = a0 + t2
 80655: 82 76                    s1 = u64 [a0]
 80657: 51 06 f2                 jump @6354 if s1 == 0
      :                          @6356
 80660: ac 62 ef                 jump @6354 if t0 <u s1
      :                          @6357
 80663: 82 75 08                 s0 = u64 [a0 + 0x8]
 80666: 01                       fallthrough
      :                          @6358
 80667: 82 a7                    a0 = u64 [a3]
 80669: c9 7a 0c                 a5 = a3 - a0
 80672: ab 5c e3                 jump @6354 if a5 != s0
      :                          @6359
 80675: c9 67 0c                 a5 = a0 - s1
 80678: 01                       fallthrough
      :                          @6360
 80679: 82 ab                    a4 = u64 [a3]
 80681: ab 7b f2                 jump @6358 if a4 != a0
      :                          @6361
 80684: 7b ac                    u64 [a3] = a5
 80686: 33 08                    a1 = 0
 80688: 01                       fallthrough
      :                          @6362
 80689: ab 7b ea                 jump @6358 if a4 != a0
      :                          @6363
 80692: 28 cf                    jump @6354
      :                          @6364
 80694: 82 18 68                 a1 = u64 [sp + 0x68]
 80697: 51 08 2e                 jump @6371 if a1 == 0
      :                          @6365
 80700: 33 07 aa 0a              a0 = 0xaaa
 80704: ac 87 27                 jump @6371 if a0 <u a1
      :                          @6366
 80707: 96 88 e8                 a1 = a1 * 0xffffffffffffffe8
 80710: 33 09 c0 22 03           a2 = 0x322c0
 80715: 95 99 00 00 01           a2 = a2 + 0x10000
 80720: 01                       fallthrough
      :                          @6367
 80721: 82 97                    a0 = u64 [a2]
 80723: c9 79 0a                 a3 = a2 - a0
 80726: ab 4a 11                 jump @6371 if a3 != t2
      :                          @6368
 80729: c8 87 0a                 a3 = a0 + a1
 80732: 01                       fallthrough
      :                          @6369
 80733: 82 9b                    a4 = u64 [a2]
 80735: ab 7b f2                 jump @6367 if a4 != a0
      :                          @6370
 80738: 7b 9a                    u64 [a2] = a3
 80740: 33 0c                    a5 = 0
 80742: 01                       fallthrough
      :                          @6371
 80743: 82 10 a8 00              ra = u64 [sp + 0xa8]
 80747: 82 15 a0 00              s0 = u64 [sp + 0xa0]
 80751: 82 16 98 00              s1 = u64 [sp + 0x98]
 80755: 95 11 b0 00              sp = sp + 0xb0
 80759: 32 00                    ret
      :                          @6372
 80761: 00                       trap
      :                          @6373
 80762: 82 17 60                 a0 = u64 [sp + 0x60]
 80765: 82 77                    a0 = u64 [a0]
 80767: 51 07 28                 jump @6381 if a0 == 0
      :                          @6374
 80770: 82 17 58                 a0 = u64 [sp + 0x58]
 80773: 82 77                    a0 = u64 [a0]
 80775: 46 07 01                 u8 [a0 + 0] = 0x1
 80778: 51 04 1f                 jump @6383 if t2 == 0
      :                          @6375
 80781: 82 17 48                 a0 = u64 [sp + 0x48]
 80784: 82 79 10                 a2 = u64 [a0 + 0x10]
 80787: ae 95 10                 jump @6377 if s0 >=u a2
      :                          @6376
 80790: 82 17 48                 a0 = u64 [sp + 0x48]
 80793: 82 77 08                 a0 = u64 [a0 + 0x8]
 80796: c8 57 07                 a0 = a0 + s0
 80799: 46 07 01                 u8 [a0 + 0] = 0x1
 80802: 00                       trap
      :                          @6377
 80803: 00                       trap
      :                          @6378
 80804: 00                       trap
      :                          @6379
 80805: 00                       trap
      :                          @6380
 80806: 00                       trap
      :                          @6381
 80807: 00                       trap
      :                          @6382
 80808: 00                       trap
      :                          @6383
 80809: 00                       trap
      :                          @6384
 80810: 00                       trap
      :                          @6385
 80811: 00                       trap
      :                          @6386
 80812: 95 11 98                 sp = sp + 0xffffffffffffff98
 80815: 7b 10 60                 u64 [sp + 0x60] = ra
 80818: 7b 15 58                 u64 [sp + 0x58] = s0
 80821: 7b 16 50                 u64 [sp + 0x50] = s1
 80824: 7b 18 20                 u64 [sp + 0x20] = a1
 80827: 51 09 8d 02              jump @6446 if a2 == 0
      :                          @6387
 80831: 64 9a                    a3 = a2
 80833: 57 09 86 02              jump @6445 if a2 <s 0
      :                          @6388
 80837: 64 a9                    a2 = a3
 80839: 85 a5 ff                 s0 = a3 ^ 0xffffffffffffffff
 80842: 98 55 3f                 s0 = s0 >> 0x3f
 80845: 33 0a c0 22 03           a3 = 0x322c0
 80850: 33 02 00 00 01           t0 = 0x10000
 80855: c8 2a 0a                 a3 = a3 + t0
 80858: 01                       fallthrough
      :                          @6389
 80859: 82 a8                    a1 = u64 [a3]
 80861: c8 98 06                 s1 = a1 + a2
 80864: ac 86 b2 dc 01           jump @13935 if s1 <u a1
      :                          @6390
 80869: c8 56 0b                 a4 = s1 + s0
 80872: d8 6b 0c                 a5 = a4 <u s1
 80875: d8 b2 0b                 a4 = t0 <u a4
 80878: d4 cb 0b                 a4 = a4 | a5
 80881: 52 0b a1 dc 01           jump @13935 if a4 != 0
      :                          @6391
 80886: 82 ab                    a4 = u64 [a3]
 80888: ab 8b e3                 jump @6389 if a4 != a1
      :                          @6392
 80891: 7b a6                    u64 [a3] = s1
 80893: 33 0c                    a5 = 0
 80895: 7b 18 18                 u64 [sp + 0x18] = a1
 80898: 7b 17 38                 u64 [sp + 0x38] = a0
 80901: 33 05 c0 22 03           s0 = 0x322c0
 80906: 95 57 00 00 01           a0 = s0 + 0x10000
 80911: c9 67 07                 a0 = a0 - s1
 80914: 7b 17 48                 u64 [sp + 0x48] = a0
 80917: 33 08                    a1 = 0
 80919: 64 96                    s1 = a2
 80921: 50 20 da 03 fd cf 01     ra = 986, jump @13687
      :                          @6393 [@dyn 493]
 80928: 98 67 3c                 a0 = s1 >> 0x3c
 80931: 52 07 24 02              jump @6445 if a0 != 0
      :                          @6394
 80935: 88 7c 01                 a5 = a0 <u 0x1
 80938: 97 67 03                 a0 = s1 << 0x3
 80941: 97 c4 03                 t2 = a5 << 0x3
 80944: 95 58 00 00 01           a1 = s0 + 0x10000
 80949: 64 5c                    a5 = s0
 80951: 33 00 00 00 01           ra = 0x10000
 80956: 01                       fallthrough
      :                          @6395
 80957: 82 82                    t0 = u64 [a1]
 80959: c8 72 05                 s0 = t0 + a0
 80962: ac 25 04 02              jump @6444 if s0 <u t0
      :                          @6396
 80966: c8 45 09                 a2 = s0 + t2
 80969: d8 59 0a                 a3 = a2 <u s0
 80972: d8 90 09                 a2 = ra <u a2
 80975: d4 a9 09                 a2 = a2 | a3
 80978: 52 09 f4 01              jump @6444 if a2 != 0
      :                          @6397
 80982: c9 5c 09                 a2 = a5 - s0
 80985: c8 09 09                 a2 = a2 + ra
 80988: 84 93 07                 t1 = a2 & 0x7
 80991: c8 35 05                 s0 = s0 + t1
 80994: 01                       fallthrough
      :                          @6398
 80995: 82 8a                    a3 = u64 [a1]
 80997: ab 2a d8                 jump @6395 if a3 != t0
      :                          @6399
 81000: 7b 85                    u64 [a1] = s0
 81002: 01                       fallthrough
      :                          @6400
 81003: 33 0b f8 ff 00           a4 = 0xfff8
 81008: c9 39 0a                 a3 = a2 - t1
 81011: 33 08 01                 a1 = 0x1
 81014: 7b 17 08                 u64 [sp + 0x8] = a0
 81017: 7b 1a 30                 u64 [sp + 0x30] = a3
 81020: 53 16 02 41              jump @6403 if s1 <u 2
      :                          @6401
 81024: 95 79 f8                 a2 = a0 + 0xfffffffffffffff8
 81027: 33 08 ff 00              a1 = 0xff
 81031: 64 a7                    a0 = a3
 81033: 7b 12 40                 u64 [sp + 0x40] = t0
 81036: 7b 13 28                 u64 [sp + 0x28] = t1
 81039: 49 01 f8 ff 00           u64 [sp + 0] = 0xfff8
 81044: 50 20 dc 03 82 cf 01     ra = 988, jump @13687
      :                          @6402 [@dyn 494]
 81051: 82 1b                    a4 = u64 [sp]
 81053: 82 13 28                 t1 = u64 [sp + 0x28]
 81056: 82 12 40                 t0 = u64 [sp + 0x40]
 81059: 82 1a 30                 a3 = u64 [sp + 0x30]
 81062: 82 17 08                 a0 = u64 [sp + 0x8]
 81065: c8 b7 09                 a2 = a0 + a4
 81068: 33 08 c0 22 03           a1 = 0x322c0
 81073: c8 98 08                 a1 = a1 + a2
 81076: c9 58 09                 a2 = a1 - s0
 81079: 49 09 ff                 u64 [a2 + 0] = 0xffffffffffffffff
 81082: 64 68                    a1 = s1
 81084: 01                       fallthrough
      :                          @6403
 81085: 49 11 40                 u64 [sp + 64] = 0
 81088: 33 0c                    a5 = 0
 81090: 49 0a                    u64 [a3 + 0] = 0
 81092: c9 7b 07                 a0 = a4 - a0
 81095: c8 32 09                 a2 = t0 + t1
 81098: 33 0a c0 22 03           a3 = 0x322c0
 81103: c8 a7 07                 a0 = a0 + a3
 81106: c9 97 07                 a0 = a0 - a2
 81109: 82 19 38                 a2 = u64 [sp + 0x38]
 81112: 82 94 10                 t2 = u64 [a2 + 0x10]
 81115: 82 92 08                 t0 = u64 [a2 + 0x8]
 81118: 95 77 10                 a0 = a0 + 0x10
 81121: 7b 17 28                 u64 [sp + 0x28] = a0
 81124: 82 17 18                 a0 = u64 [sp + 0x18]
 81127: c9 7a 09                 a2 = a3 - a0
 81130: 95 99 00 00 01           a2 = a2 + 0x10000
 81135: 9a 67                    a0 = -s1
 81137: 7b 17 18                 u64 [sp + 0x18] = a0
 81140: 33 03 18                 t1 = 0x18
 81143: 82 15 48                 s0 = u64 [sp + 0x48]
 81146: 7b 16 10                 u64 [sp + 0x10] = s1
 81149: 28 0f                    jump @6405
      :                          @6404
 81151: 82 16 10                 s1 = u64 [sp + 0x10]
 81154: 82 15 48                 s0 = u64 [sp + 0x48]
 81157: 82 1c 38                 a5 = u64 [sp + 0x38]
 81160: aa 6c c7 00              jump @6424 if a5 == s1
      :                          @6405
 81164: 33 0b                    a4 = 0
 81166: 95 cc 01                 a5 = a5 + 0x1
 81169: 7b 1c 38                 u64 [sp + 0x38] = a5
 81172: 82 17 28                 a0 = u64 [sp + 0x28]
 81175: 01                       fallthrough
      :                          @6406
 81176: aa b6 2d 01              jump @6443 if s1 == a4
      :                          @6407
 81180: 64 ba                    a3 = a4
 81182: 64 70                    ra = a0
 81184: c8 b5 07                 a0 = s0 + a4
 81187: 7c 7c                    a5 = u8 [a0]
 81189: 95 bb 01                 a4 = a4 + 0x1
 81192: 95 07 08                 a0 = ra + 0x8
 81195: 52 0c ed                 jump @6406 if a5 != 0
      :                          @6408
 81198: ae 8a 15 01              jump @6441 if a3 >=u a1
      :                          @6409
 81202: ae 6b 36                 jump @6416 if a4 >=u s1
      :                          @6410
 81205: 97 a7 03                 a0 = a3 << 0x3
 81208: 82 1c 30                 a5 = u64 [sp + 0x30]
 81211: c8 c7 07                 a0 = a0 + a5
 81214: 82 77                    a0 = u64 [a0]
 81216: 28 1a                    jump @6413
      :                          @6411
 81218: 82 0c                    a5 = u64 [ra]
 81220: d8 7c 05                 s0 = a5 <u a0
 81223: db 5b 0a                 a3 = a4 if s0 != 0
 81226: 82 15 48                 s0 = u64 [sp + 0x48]
 81229: e6 c7 07                 a0 = minu(a0, a5)
 81232: 01                       fallthrough
      :                          @6412
 81233: 95 bb 01                 a4 = a4 + 0x1
 81236: 95 00 08                 ra = ra + 0x8
 81239: aa b6 11                 jump @6416 if s1 == a4
      :                          @6413
 81242: c8 b5 0c                 a5 = s0 + a4
 81245: 7c cc                    a5 = u8 [a5]
 81247: 52 0c f2                 jump @6412 if a5 != 0
      :                          @6414
 81250: ac 8b e0                 jump @6411 if a4 <u a1
      :                          @6415
 81253: 28 dd 00                 jump @6440
      :                          @6416
 81256: ae 6a dc 00              jump @6442 if a3 >=u s1
      :                          @6417
 81260: c8 a5 07                 a0 = s0 + a3
 81263: 46 07 01                 u8 [a0 + 0] = 0x1
 81266: 97 aa 03                 a3 = a3 << 0x3
 81269: 82 16 30                 s1 = u64 [sp + 0x30]
 81272: c8 a6 07                 a0 = s1 + a3
 81275: 82 77                    a0 = u64 [a0]
 81277: 82 1b 40                 a4 = u64 [sp + 0x40]
 81280: c8 7b 0b                 a4 = a4 + a0
 81283: 7b 1b 40                 u64 [sp + 0x40] = a4
 81286: 82 15 20                 s0 = u64 [sp + 0x20]
 81289: c8 a5 00                 ra = s0 + a3
 81292: 82 17 18                 a0 = u64 [sp + 0x18]
 81295: 28 0f                    jump @6419
      :                          @6418
 81297: 95 66 08                 s1 = s1 + 0x8
 81300: 95 77 01                 a0 = a0 + 0x1
 81303: 95 55 08                 s0 = s0 + 0x8
 81306: 51 07 65 ff              jump @6404 if a0 == 0
      :                          @6419
 81310: c8 79 0a                 a3 = a2 + a0
 81313: 7c aa                    a3 = u8 [a3]
 81315: 52 0a ee                 jump @6418 if a3 != 0
      :                          @6420
 81318: 82 0b                    a4 = u64 [ra]
 81320: ae 4b 98 00              jump @6438 if a4 >=u t2
      :                          @6421
 81324: 82 5a                    a3 = u64 [s0]
 81326: ca 3b 0c                 a5 = a4 * t1
 81329: c8 2c 0c                 a5 = a5 + t0
 81332: 82 cb 10                 a4 = u64 [a5 + 0x10]
 81335: ae ba 8a 00              jump @6439 if a3 >=u a4
      :                          @6422
 81339: 82 cb 08                 a4 = u64 [a5 + 0x8]
 81342: 97 aa 03                 a3 = a3 << 0x3
 81345: c8 ba 0a                 a3 = a3 + a4
 81348: 82 aa                    a3 = u64 [a3]
 81350: 82 6b                    a4 = u64 [s1]
 81352: ae ba c9                 jump @6418 if a3 >=u a4
      :                          @6423
 81355: 7b 6a                    u64 [s1] = a3
 81357: 28 c4                    jump @6418
      :                          @6424
 81359: 54 26 00 20 0d           jump @6427 if s1 <=u 8192
      :                          @6425
 81364: 54 36 00 00 01 3a        jump @6432 if s1 <=u 65536
      :                          @6426
 81370: 28 55                    jump @6437
      :                          @6427
 81372: 33 07 c0 22 03           a0 = 0x322c0
 81377: 95 77 00 00 01           a0 = a0 + 0x10000
 81382: 82 12 08                 t0 = u64 [sp + 0x8]
 81385: 82 1c 30                 a5 = u64 [sp + 0x30]
 81388: 01                       fallthrough
      :                          @6428
 81389: 82 78                    a1 = u64 [a0]
 81391: c9 87 09                 a2 = a0 - a1
 81394: ab c9 1c                 jump @6432 if a2 != a5
      :                          @6429
 81397: c9 28 09                 a2 = a1 - t0
 81400: 01                       fallthrough
      :                          @6430
 81401: 82 7a                    a3 = u64 [a0]
 81403: ab 8a f2                 jump @6428 if a3 != a1
      :                          @6431
 81406: 7b 79                    u64 [a0] = a2
 81408: 33 0b                    a4 = 0
 81410: 33 07 c0 22 03           a0 = 0x322c0
 81415: 95 77 00 00 01           a0 = a0 + 0x10000
 81420: 28 0d                    jump @6433
      :                          @6432
 81422: 33 07 c0 22 03           a0 = 0x322c0
 81427: 95 77 00 00 01           a0 = a0 + 0x10000
 81432: 01                       fallthrough
      :                          @6433
 81433: 82 78                    a1 = u64 [a0]
 81435: c9 87 09                 a2 = a0 - a1
 81438: ab 59 11                 jump @6437 if a2 != s0
      :                          @6434
 81441: c9 68 09                 a2 = a1 - s1
 81444: 01                       fallthrough
      :                          @6435
 81445: 82 7a                    a3 = u64 [a0]
 81447: ab 8a f2                 jump @6433 if a3 != a1
      :                          @6436
 81450: 7b 79                    u64 [a0] = a2
 81452: 33 0b                    a4 = 0
 81454: 01                       fallthrough
      :                          @6437
 81455: 82 17 40                 a0 = u64 [sp + 0x40]
 81458: 82 10 60                 ra = u64 [sp + 0x60]
 81461: 82 15 58                 s0 = u64 [sp + 0x58]
 81464: 82 16 50                 s1 = u64 [sp + 0x50]
 81467: 95 11 68                 sp = sp + 0x68
 81470: 32 00                    ret
      :                          @6438
 81472: 00                       trap
      :                          @6439
 81473: 00                       trap
      :                          @6440
 81474: 00                       trap
      :                          @6441
 81475: 00                       trap
      :                          @6442
 81476: 00                       trap
      :                          @6443
 81477: 00                       trap
      :                          @6444
 81478: 00                       trap
      :                          @6445
 81479: 00                       trap
      :                          @6446
 81480: 00                       trap
      :                          @6447
 81481: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 81484: 7b 10 20                 u64 [sp + 0x20] = ra
 81487: 7b 15 18                 u64 [sp + 0x18] = s0
 81490: 7b 16 10                 u64 [sp + 0x10] = s1
 81493: 64 95                    s0 = a2
 81495: 7b 17 08                 u64 [sp + 0x8] = a0
 81498: 51 09 61                 jump @6455 if a2 == 0
      :                          @6448
 81501: 98 57 3b                 a0 = s0 >> 0x3b
 81504: 52 07 b4 00              jump @6462 if a0 != 0
      :                          @6449
 81508: 7b 15                    u64 [sp] = s0
 81510: 97 59 04                 a2 = s0 << 0x4
 81513: 88 72 01                 t0 = a0 <u 0x1
 81516: 97 22 03                 t0 = t0 << 0x3
 81519: 33 04 c0 22 03           t2 = 0x322c0
 81524: 33 03 00 00 01           t1 = 0x10000
 81529: c8 34 00                 ra = t2 + t1
 81532: 01                       fallthrough
      :                          @6450
 81533: 82 05                    s0 = u64 [ra]
 81535: c8 95 06                 s1 = s0 + a2
 81538: ac 56 91 00              jump @6461 if s1 <u s0
      :                          @6451
 81542: c8 26 07                 a0 = s1 + t0
 81545: d8 67 0b                 a4 = a0 <u s1
 81548: d8 73 07                 a0 = t1 <u a0
 81551: d4 b7 07                 a0 = a0 | a4
 81554: 52 07 81 00              jump @6461 if a0 != 0
      :                          @6452
 81558: c9 64 07                 a0 = t2 - s1
 81561: c8 37 07                 a0 = a0 + t1
 81564: 84 7b 07                 a4 = a0 & 0x7
 81567: c8 b6 06                 s1 = s1 + a4
 81570: 01                       fallthrough
      :                          @6453
 81571: 82 0a                    a3 = u64 [ra]
 81573: ab 5a d8                 jump @6450 if a3 != s0
      :                          @6454
 81576: 7b 06                    u64 [ra] = s1
 81578: 33 0c                    a5 = 0
 81580: c9 b7 06                 s1 = a0 - a4
 81583: 82 15                    s0 = u64 [sp]
 81585: 64 67                    a0 = s1
 81587: 33 00 de 03              ra = 0x3de
 81591: 28 32 cb 01              jump @13633
      :                          @6455
 81595: 33 06 08                 s1 = 0x8
 81598: 33 07 08                 a0 = 0x8
 81601: 50 20 de 03 28 cb 01     ra = 990, jump @13633
      :                          @6456 [@dyn 495]
 81608: 68 57                    a0 = clz s0
 81610: 9a 7a 40                 a3 = 0x40 - a0
 81613: 64 67                    a0 = s1
 81615: 64 58                    a1 = s0
 81617: 33 09                    a2 = 0
 81619: 50 20 e0 03 d8 f9 fe     ra = 992, jump @1109
      :                          @6457 [@dyn 496]
 81626: 51 05 1a                 jump @6460 if s0 == 0
      :                          @6458
 81629: 64 57                    a0 = s0
 81631: 64 68                    a1 = s1
 81633: 64 69                    a2 = s1
 81635: 01                       fallthrough
      :                          @6459
 81636: 82 9a                    a3 = u64 [a2]
 81638: 7b 8a                    u64 [a1] = a3
 81640: 95 99 10                 a2 = a2 + 0x10
 81643: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 81646: 95 88 08                 a1 = a1 + 0x8
 81649: 52 07 f3                 jump @6459 if a0 != 0
      :                          @6460
 81652: 97 57 04                 a0 = s0 << 0x4
 81655: 98 77 03                 a0 = a0 >> 0x3
 81658: 82 18 08                 a1 = u64 [sp + 0x8]
 81661: 7b 87                    u64 [a1] = a0
 81663: 7b 86 08                 u64 [a1 + 0x8] = s1
 81666: 7b 85 10                 u64 [a1 + 0x10] = s0
 81669: 82 10 20                 ra = u64 [sp + 0x20]
 81672: 82 15 18                 s0 = u64 [sp + 0x18]
 81675: 82 16 10                 s1 = u64 [sp + 0x10]
 81678: 95 11 28                 sp = sp + 0x28
 81681: 32 00                    ret
      :                          @6461
 81683: 00                       trap
      :                          @6462
 81684: 00                       trap
      :                          @6463
 81685: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 81688: 7b 10 38                 u64 [sp + 0x38] = ra
 81691: 7b 15 30                 u64 [sp + 0x30] = s0
 81694: 7b 16 28                 u64 [sp + 0x28] = s1
 81697: 84 89 3f                 a2 = a1 & 0x3f
 81700: 7b 19 08                 u64 [sp + 0x8] = a2
 81703: 51 09 8c 00              jump @6477 if a2 == 0
      :                          @6464
 81707: 33 09                    a2 = 0
 81709: 33 06 01                 s1 = 0x1
 81712: 33 0a 18                 a3 = 0x18
 81715: 28 1f                    jump @6466
      :                          @6465
 81717: 82 1c 10                 a5 = u64 [sp + 0x10]
 81720: 84 cc 01                 a5 = a5 & 0x1
 81723: 9a b9                    a2 = -a4
 81725: db cb 09                 a2 = a4 if a5 != 0
 81728: 82 1b 08                 a4 = u64 [sp + 0x8]
 81731: 82 16 18                 s1 = u64 [sp + 0x18]
 81734: d0 b6 0b                 a4 = s1 >> a4
 81737: 82 1c 20                 a5 = u64 [sp + 0x20]
 81740: c8 c9 09                 a2 = a2 + a5
 81743: 52 0b 64                 jump @6477 if a4 != 0
      :                          @6466
 81746: 7b 19 20                 u64 [sp + 0x20] = a2
 81749: 33 0b                    a4 = 0
 81751: 33 02                    t0 = 0
 81753: 95 69 01                 a2 = s1 + 0x1
 81756: 7b 19 18                 u64 [sp + 0x18] = a2
 81759: 66 69                    a2 = cpop s1
 81761: 7b 19 10                 u64 [sp + 0x10] = a2
 81764: 33 0c 09                 a5 = 0x9
 81767: 28 14                    jump @6470
      :                          @6467
 81769: 95 bb 01                 a4 = a4 + 0x1
 81772: 55 15 09 c9              jump @6465 if s0 >=u 9
      :                          @6468
 81776: 33 09 09                 a2 = 0x9
 81779: e4 92 0c                 a5 = maxu(t0, a2)
 81782: 28 05                    jump @6470
      :                          @6469
 81784: aa c5 bd                 jump @6465 if s0 == a5
      :                          @6470
 81787: 33 03                    t1 = 0
 81789: 64 25                    s0 = t0
 81791: 95 22 01                 t0 = t0 + 0x1
 81794: 28 08                    jump @6472
      :                          @6471
 81796: 95 33 01                 t1 = t1 + 0x1
 81799: aa 83 e2                 jump @6467 if t1 == a1
      :                          @6472
 81802: d0 36 09                 a2 = s1 >> t1
 81805: 84 99 01                 a2 = a2 & 0x1
 81808: 51 09 f4                 jump @6471 if a2 == 0
      :                          @6473
 81811: ca a3 09                 a2 = t1 * a3
 81814: c8 79 09                 a2 = a2 + a0
 81817: 82 94 10                 t2 = u64 [a2 + 0x10]
 81820: 82 90 08                 ra = u64 [a2 + 0x8]
 81823: 97 44 03                 t2 = t2 << 0x3
 81826: 01                       fallthrough
      :                          @6474
 81827: 51 04 d5                 jump @6469 if t2 == 0
      :                          @6475
 81830: 82 09                    a2 = u64 [ra]
 81832: 95 00 08                 ra = ra + 0x8
 81835: 95 44 f8                 t2 = t2 + 0xfffffffffffffff8
 81838: ab 59 f5                 jump @6474 if a2 != s0
      :                          @6476
 81841: 28 d3                    jump @6471
      :                          @6477
 81843: 64 97                    a0 = a2
 81845: 82 10 38                 ra = u64 [sp + 0x38]
 81848: 82 15 30                 s0 = u64 [sp + 0x30]
 81851: 82 16 28                 s1 = u64 [sp + 0x28]
 81854: 95 11 40                 sp = sp + 0x40
 81857: 32 00                    ret
      :                          @6478
 81859: ca c9 09                 a2 = a2 * a5
 81862: 95 00 01                 ra = ra + 0x1
 81865: c8 94 04                 t2 = t2 + a2
 81868: aa 70 47                 jump @6487 if ra == a0
      :                          @6479
 81871: 64 09                    a2 = ra
 81873: 64 7c                    a5 = a0
 81875: 01                       fallthrough
      :                          @6480
 81876: 64 cb                    a4 = a5
 81878: cd c9 0c                 a5 = a2 %u a5
 81881: 64 b9                    a2 = a4
 81883: 52 0c f9                 jump @6480 if a5 != 0
      :                          @6481
 81886: 83 bc                    i32 a5 = a4 + 0
 81888: 51 0c 27                 jump @6486 if a5 == 0
      :                          @6482
 81891: 64 89                    a2 = a1
 81893: aa 2c de                 jump @6478 if a5 == t0
      :                          @6483
 81896: 33 0c 01                 a5 = 0x1
 81899: 64 89                    a2 = a1
 81901: 01                       fallthrough
      :                          @6484
 81902: 83 b5                    i32 s0 = a4 + 0
 81904: 84 b6 01                 s1 = a4 & 0x1
 81907: 33 0a 01                 a3 = 0x1
 81910: db 69 0a                 a3 = a2 if s1 != 0
 81913: ca ca 0c                 a5 = a3 * a5
 81916: 8b bb 01                 i32 a4 = a4 >> 0x1
 81919: ca 99 09                 a2 = a2 * a2
 81922: ac 53 ec                 jump @6484 if t1 <u s0
      :                          @6485
 81925: 28 be                    jump @6478
      :                          @6486
 81927: 33 09 01                 a2 = 0x1
 81930: c8 90 00                 ra = ra + a2
 81933: c8 94 04                 t2 = t2 + a2
 81936: ab 70 bf                 jump @6479 if ra != a0
      :                          @6487
 81939: cb 74 07                 a0 = t2 /u a0
 81942: 82 10 18                 ra = u64 [sp + 0x18]
 81945: 82 15 10                 s0 = u64 [sp + 0x10]
 81948: 82 16 08                 s1 = u64 [sp + 0x8]
 81951: 95 11 20                 sp = sp + 0x20
 81954: 32 00                    ret
      :                          @6488
 81956: 82 cb                    a4 = u64 [a5]
 81958: c8 3b 09                 a2 = a4 + t1
 81961: ac b9 0b 01              jump @6512 if a2 <u a4
      :                          @6489
 81965: 95 95 08                 s0 = a2 + 0x8
 81968: d8 95 06                 s1 = s0 <u a2
 81971: d8 54 05                 s0 = t2 <u s0
 81974: d4 65 05                 s0 = s0 | s1
 81977: 52 05 fb 00              jump @6512 if s0 != 0
      :                          @6490
 81981: c9 90 05                 s0 = ra - a2
 81984: c8 45 05                 s0 = s0 + t2
 81987: 84 56 07                 s1 = s0 & 0x7
 81990: c8 69 09                 a2 = a2 + s1
 81993: 01                       fallthrough
      :                          @6491
 81994: 82 ca                    a3 = u64 [a5]
 81996: ab ba d8                 jump @6488 if a3 != a4
      :                          @6492
 81999: 7b c9                    u64 [a5] = a2
 82001: 33 02                    t0 = 0
 82003: 33 0b                    a4 = 0
 82005: c9 65 09                 a2 = s0 - s1
 82008: 33 03 01                 t1 = 0x1
 82011: 28 23                    jump @6496
      :                          @6493
 82013: 64 bc                    a5 = a4
 82015: ca bc 0c                 a5 = a5 * a4
 82018: 28 06                    jump @6495
      :                          @6494
 82020: ca bc 0c                 a5 = a5 * a4
 82023: 01                       fallthrough
      :                          @6495
 82024: 95 b6 01                 s1 = a4 + 0x1
 82027: ca aa 0a                 a3 = a3 * a3
 82030: ca ca 0a                 a3 = a3 * a5
 82033: 97 bb 03                 a4 = a4 << 0x3
 82036: c8 9b 0b                 a4 = a4 + a2
 82039: 7b ba                    u64 [a4] = a3
 82041: 64 6b                    a4 = s1
 82043: aa 86 55                 jump @6506 if s1 == a1
      :                          @6496
 82046: 33 0a 01                 a3 = 0x1
 82049: 33 0c 01                 a5 = 0x1
 82052: 51 0b e4                 jump @6495 if a4 == 0
      :                          @6497
 82055: 64 8a                    a3 = a1
 82057: 64 bc                    a5 = a4
 82059: aa 3b d9                 jump @6494 if a4 == t1
      :                          @6498
 82062: 33 0a 01                 a3 = 0x1
 82065: 64 8c                    a5 = a1
 82067: 33 06 01                 s1 = 0x1
 82070: 01                       fallthrough
      :                          @6499
 82071: 95 65 01                 s0 = s1 + 0x1
 82074: ca ac 0a                 a3 = a5 * a3
 82077: cb 6a 0a                 a3 = a3 /u s1
 82080: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 82083: 64 56                    s1 = s0
 82085: ab 5b f2                 jump @6499 if a4 != s0
      :                          @6500
 82088: c9 b7 0c                 a5 = a0 - a4
 82091: ca ca 0a                 a3 = a3 * a5
 82094: cb ba 0a                 a3 = a3 /u a4
 82097: 51 0b 1a                 jump @6505 if a4 == 0
      :                          @6501
 82100: aa 3b a9                 jump @6493 if a4 == t1
      :                          @6502
 82103: 33 0c 01                 a5 = 0x1
 82106: 33 06 01                 s1 = 0x1
 82109: 01                       fallthrough
      :                          @6503
 82110: 95 65 01                 s0 = s1 + 0x1
 82113: ca c6 0c                 a5 = s1 * a5
 82116: 64 56                    s1 = s0
 82118: ab 5b f8                 jump @6503 if a4 != s0
      :                          @6504
 82121: 28 9b                    jump @6494
      :                          @6505
 82123: 33 0c 01                 a5 = 0x1
 82126: 28 9a                    jump @6495
      :                          @6506
 82128: 33 0a 01                 a3 = 0x1
 82131: 33 0b 01                 a4 = 0x1
 82134: aa a8 35                 jump @6511 if a1 == a3
      :                          @6507
 82137: 33 03 01                 t1 = 0x1
 82140: 64 8b                    a4 = a1
 82142: 33 0c 01                 a5 = 0x1
 82145: 33 0a 01                 a3 = 0x1
 82148: 01                       fallthrough
      :                          @6508
 82149: 95 a6 01                 s1 = a3 + 0x1
 82152: ca cb 0c                 a5 = a4 * a5
 82155: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 82158: cb ac 0c                 a5 = a5 /u a3
 82161: 64 6a                    a3 = s1
 82163: ab 3b f2                 jump @6508 if a4 != t1
      :                          @6509
 82166: cb 8c 0a                 a3 = a5 /u a1
 82169: 33 0b 01                 a4 = 0x1
 82172: 33 0c 01                 a5 = 0x1
 82175: 01                       fallthrough
      :                          @6510
 82176: 95 c6 01                 s1 = a5 + 0x1
 82179: ca bc 0b                 a4 = a5 * a4
 82182: 64 6c                    a5 = s1
 82184: ab 68 f8                 jump @6510 if a1 != s1
      :                          @6511
 82187: ca 8b 0b                 a4 = a4 * a1
 82190: ca aa 0a                 a3 = a3 * a3
 82193: ca ba 0a                 a3 = a3 * a4
 82196: 97 88 03                 a1 = a1 << 0x3
 82199: c8 98 08                 a1 = a1 + a2
 82202: 7b 8a                    u64 [a1] = a3
 82204: 82 18                    a1 = u64 [sp]
 82206: 7b 87                    u64 [a1] = a0
 82208: 7b 89 08                 u64 [a1 + 0x8] = a2
 82211: 7b 87 10                 u64 [a1 + 0x10] = a0
 82214: 82 10 18                 ra = u64 [sp + 0x18]
 82217: 82 15 10                 s0 = u64 [sp + 0x10]
 82220: 82 16 08                 s1 = u64 [sp + 0x8]
 82223: 95 11 20                 sp = sp + 0x20
 82226: 32 00                    ret
      :                          @6512
 82228: 00                       trap
      :                          @6513
 82229: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 82232: 7b 10 28                 u64 [sp + 0x28] = ra
 82235: 7b 15 20                 u64 [sp + 0x20] = s0
 82238: 7b 16 18                 u64 [sp + 0x18] = s1
 82241: 8b 89 06                 i32 a2 = a1 >> 0x6
 82244: 97 9a 06                 a3 = a2 << 0x6
 82247: 52 0a 8d 00              jump @6526 if a3 != 0
      :                          @6514
 82251: 64 79                    a2 = a0
 82253: 84 87 3f                 a0 = a1 & 0x3f
 82256: 7b 17                    u64 [sp] = a0
 82258: 33 03                    t1 = 0
 82260: 51 07 70                 jump @6525 if a0 == 0
      :                          @6515
 82263: 95 90 10                 ra = a2 + 0x10
 82266: 33 0b 01                 a4 = 0x1
 82269: 28 1b                    jump @6517
      :                          @6516
 82271: 82 17 08                 a0 = u64 [sp + 0x8]
 82274: 84 77 01                 a0 = a0 & 0x1
 82277: 9a c9                    a2 = -a5
 82279: db 7c 09                 a2 = a5 if a0 != 0
 82282: 82 17                    a0 = u64 [sp]
 82284: 82 1b 10                 a4 = u64 [sp + 0x10]
 82287: d0 7b 07                 a0 = a4 >> a0
 82290: c8 93 03                 t1 = t1 + a2
 82293: 52 07 4f                 jump @6525 if a0 != 0
      :                          @6517
 82296: 33 07                    a0 = 0
 82298: 95 b9 01                 a2 = a4 + 0x1
 82301: 7b 19 10                 u64 [sp + 0x10] = a2
 82304: 66 b9                    a2 = cpop a4
 82306: 7b 19 08                 u64 [sp + 0x8] = a2
 82309: 33 0c 01                 a5 = 0x1
 82312: 28 0a                    jump @6519
      :                          @6518
 82314: ca c5 0c                 a5 = s0 * a5
 82317: 64 67                    a0 = s1
 82319: aa 86 d0                 jump @6516 if s1 == a1
      :                          @6519
 82322: 33 05                    s0 = 0
 82324: 33 02                    t0 = 0
 82326: 95 76 01                 s1 = a0 + 0x1
 82329: 64 04                    t2 = ra
 82331: 28 1a                    jump @6522
      :                          @6520
 82333: 82 4a f8                 a3 = u64 [t2 + 0xfffffffffffffff8]
 82336: 97 79 03                 a2 = a0 << 0x3
 82339: c8 a9 09                 a2 = a2 + a3
 82342: 82 99                    a2 = u64 [a2]
 82344: c8 95 05                 s0 = s0 + a2
 82347: 01                       fallthrough
      :                          @6521
 82348: 95 22 01                 t0 = t0 + 0x1
 82351: 95 44 18                 t2 = t2 + 0x18
 82354: aa 28 d8                 jump @6518 if a1 == t0
      :                          @6522
 82357: d0 2b 0a                 a3 = a4 >> t0
 82360: 84 aa 01                 a3 = a3 & 0x1
 82363: 51 0a f1                 jump @6521 if a3 == 0
      :                          @6523
 82366: 82 4a                    a3 = u64 [t2]
 82368: ac a7 dd                 jump @6520 if a0 <u a3
      :                          @6524
 82371: 00                       trap
      :                          @6525
 82372: 64 37                    a0 = t1
 82374: 82 10 28                 ra = u64 [sp + 0x28]
 82377: 82 15 20                 s0 = u64 [sp + 0x20]
 82380: 82 16 18                 s1 = u64 [sp + 0x18]
 82383: 95 11 30                 sp = sp + 0x30
 82386: 32 00                    ret
      :                          @6526
 82388: 00                       trap
      :                          @6527
 82389: 51 07 4f                 jump @6538 if a0 == 0
      :                          @6528
 82392: 33 03                    t1 = 0
 82394: ca 78 02                 t0 = a1 * a0
 82397: 95 7b ff                 a4 = a0 + 0xffffffffffffffff
 82400: 33 09 01                 a2 = 0x1
 82403: 64 8a                    a3 = a1
 82405: 28 05                    jump @6530
      :                          @6529
 82407: 64 8a                    a3 = a1
 82409: 01                       fallthrough
      :                          @6530
 82410: c8 ab 0c                 a5 = a4 + a3
 82413: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 82416: ca c9 09                 a2 = a2 * a5
 82419: 52 0a f7                 jump @6530 if a3 != 0
      :                          @6531
 82422: 95 33 01                 t1 = t1 + 0x1
 82425: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 82428: ab 73 eb                 jump @6529 if t1 != a0
      :                          @6532
 82431: 51 02 2c                 jump @6539 if t0 == 0
      :                          @6533
 82434: 33 08 01                 a1 = 0x1
 82437: 64 27                    a0 = t0
 82439: aa 82 12                 jump @6536 if t0 == a1
      :                          @6534
 82442: 33 07 01                 a0 = 0x1
 82445: 01                       fallthrough
      :                          @6535
 82446: 95 8a 01                 a3 = a1 + 0x1
 82449: ca 78 07                 a0 = a1 * a0
 82452: 64 a8                    a1 = a3
 82454: ab a2 f8                 jump @6535 if t0 != a3
      :                          @6536
 82457: ca 27 07                 a0 = a0 * t0
 82460: 51 09 15                 jump @6540 if a2 == 0
      :                          @6537
 82463: cb 97 07                 a0 = a0 /u a2
 82466: 32 00                    ret
      :                          @6538
 82468: 33 07 01                 a0 = 0x1
 82471: 28 e7 d5 00              jump @10176
      :                          @6539
 82475: 33 07 01                 a0 = 0x1
 82478: 52 09 f1                 jump @6537 if a2 != 0
      :                          @6540
 82481: 00                       trap
      :                          @6541
 82482: 51 07 63                 jump @6547 if a0 == 0
      :                          @6542
 82485: 95 11 f0                 sp = sp + 0xfffffffffffffff0
 82488: 7b 15 08                 u64 [sp + 0x8] = s0
 82491: 7b 16                    u64 [sp] = s1
 82493: 33 02                    t0 = 0
 82495: 33 06                    s1 = 0
 82497: 33 03 01                 t1 = 0x1
 82500: 33 0c 01                 a5 = 0x1
 82503: 33 09 01                 a2 = 0x1
 82506: 33 0a 01                 a3 = 0x1
 82509: 28 22                    jump @6544
      :                          @6543
 82511: 64 c8                    a1 = a5
 82513: ca cc 0c                 a5 = a5 * a5
 82516: ca a9 0b                 a4 = a2 * a3
 82519: c8 bc 0c                 a5 = a5 + a4
 82522: c8 68 08                 a1 = a1 + s1
 82525: ca 98 09                 a2 = a1 * a2
 82528: ca a8 0a                 a3 = a1 * a3
 82531: ca 66 06                 s1 = s1 * s1
 82534: 98 77 01                 a0 = a0 >> 0x1
 82537: c8 b6 06                 s1 = s1 + a4
 82540: 51 07 1d                 jump @6546 if a0 == 0
      :                          @6544
 82543: 84 78 01                 a1 = a0 & 0x1
 82546: 51 08 dd                 jump @6543 if a1 == 0
      :                          @6545
 82549: ca c3 04                 t2 = t1 * a5
 82552: ca a2 05                 s0 = t0 * a3
 82555: ca 93 08                 a1 = t1 * a2
 82558: c8 54 03                 t1 = t2 + s0
 82561: ca 62 02                 t0 = t0 * s1
 82564: c8 82 02                 t0 = t0 + a1
 82567: 28 c8                    jump @6543
      :                          @6546
 82569: 82 15 08                 s0 = u64 [sp + 0x8]
 82572: 82 16                    s1 = u64 [sp]
 82574: 95 11 10                 sp = sp + 0x10
 82577: 64 27                    a0 = t0
 82579: 32 00                    ret
      :                          @6547
 82581: 33 07                    a0 = 0
 82583: 28 e4 b3 00              jump @9661
      :                          @6548
 82587: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 82590: 7b 10 40                 u64 [sp + 0x40] = ra
 82593: 7b 15 38                 u64 [sp + 0x38] = s0
 82596: 7b 16 30                 u64 [sp + 0x30] = s1
 82599: 95 79 01                 a2 = a0 + 0x1
 82602: 51 09 70 01              jump @6577 if a2 == 0
      :                          @6549
 82606: 64 85                    s0 = a1
 82608: 98 98 3c                 a1 = a2 >> 0x3c
 82611: 52 08 68 01              jump @6578 if a1 != 0
      :                          @6550
 82615: 7b 17 08                 u64 [sp + 0x8] = a0
 82618: 88 82 01                 t0 = a1 <u 0x1
 82621: 7b 19 28                 u64 [sp + 0x28] = a2
 82624: 97 99 03                 a2 = a2 << 0x3
 82627: 97 22 03                 t0 = t0 << 0x3
 82630: 33 04 c0 22 03           t2 = 0x322c0
 82635: 33 03 00 00 01           t1 = 0x10000
 82640: c8 34 00                 ra = t2 + t1
 82643: 01                       fallthrough
      :                          @6551
 82644: 82 0b                    a4 = u64 [ra]
 82646: c8 9b 0c                 a5 = a4 + a2
 82649: ac bc 40 01              jump @6576 if a5 <u a4
      :                          @6552
 82653: c8 2c 07                 a0 = a5 + t0
 82656: d8 c7 06                 s1 = a0 <u a5
 82659: d8 73 07                 a0 = t1 <u a0
 82662: d4 67 07                 a0 = a0 | s1
 82665: 52 07 30 01              jump @6576 if a0 != 0
      :                          @6553
 82669: c9 c4 06                 s1 = t2 - a5
 82672: c8 36 0a                 a3 = s1 + t1
 82675: 84 a6 07                 s1 = a3 & 0x7
 82678: c8 6c 0c                 a5 = a5 + s1
 82681: 01                       fallthrough
      :                          @6554
 82682: 82 07                    a0 = u64 [ra]
 82684: ab b7 d8                 jump @6551 if a0 != a4
      :                          @6555
 82687: 7b 0c                    u64 [ra] = a5
 82689: c9 6a 06                 s1 = a3 - s1
 82692: 64 67                    a0 = s1
 82694: 33 08                    a1 = 0
 82696: 7b 19                    u64 [sp] = a2
 82698: 50 20 e2 03 0c c9 01     ra = 994, jump @13687
      :                          @6556 [@dyn 497]
 82705: 33 07 01                 a0 = 0x1
 82708: 64 64                    t2 = s1
 82710: 7b 67                    u64 [s1] = a0
 82712: 82 19 08                 a2 = u64 [sp + 0x8]
 82715: 51 09 cb 00              jump @6568 if a2 == 0
      :                          @6557
 82719: 95 57 ff                 a0 = s0 + 0xffffffffffffffff
 82722: 7b 17 20                 u64 [sp + 0x20] = a0
 82725: 33 07 01                 a0 = 0x1
 82728: 82 1c 28                 a5 = u64 [sp + 0x28]
 82731: 33 02 01                 t0 = 0x1
 82734: 28 1a                    jump @6559
      :                          @6558
 82736: 82 19 08                 a2 = u64 [sp + 0x8]
 82739: 82 1a 18                 a3 = u64 [sp + 0x18]
 82742: d8 a9 07                 a0 = a2 <u a3
 82745: 85 77 01                 a0 = a0 ^ 0x1
 82748: 82 18 10                 a1 = u64 [sp + 0x10]
 82751: d2 78 08                 a1 = a1 & a0
 82754: 64 a7                    a0 = a3
 82756: 51 08 93 00              jump @6567 if a1 == 0
      :                          @6559
 82760: ae c7 d0 00              jump @6575 if a0 >=u a5
      :                          @6560
 82764: d8 97 08                 a1 = a0 <u a2
 82767: 7b 18 10                 u64 [sp + 0x10] = a1
 82770: c8 78 08                 a1 = a1 + a0
 82773: 7b 18 18                 u64 [sp + 0x18] = a1
 82776: 97 76 03                 s1 = a0 << 0x3
 82779: c8 46 06                 s1 = s1 + t2
 82782: 82 6b                    a4 = u64 [s1]
 82784: 33 08 01                 a1 = 0x1
 82787: 33 03 02                 t1 = 0x2
 82790: 33 0a 05                 a3 = 0x5
 82793: 33 09 02                 a2 = 0x2
 82796: 28 1e                    jump @6563
      :                          @6561
 82798: 82 1c 28                 a5 = u64 [sp + 0x28]
 82801: 01                       fallthrough
      :                          @6562
 82802: ca 3a 08                 a1 = a3 * t1
 82805: 98 88 01                 a1 = a1 >> 0x1
 82808: 95 a9 02                 a2 = a3 + 0x2
 82811: ca 39 09                 a2 = a2 * t1
 82814: 98 99 01                 a2 = a2 >> 0x1
 82817: 95 33 01                 t1 = t1 + 0x1
 82820: 95 aa 03                 a3 = a3 + 0x3
 82823: ac 87 a9                 jump @6558 if a0 <u a1
      :                          @6563
 82826: c9 87 08                 a1 = a0 - a1
 82829: ae c8 8a 00              jump @6574 if a1 >=u a5
      :                          @6564
 82833: 97 88 03                 a1 = a1 << 0x3
 82836: c8 48 08                 a1 = a1 + t2
 82839: 82 88                    a1 = u64 [a1]
 82841: 83 3c ff                 i32 a5 = t1 + 0xffffffffffffffff
 82844: 84 cc 01                 a5 = a5 & 0x1
 82847: 82 10 20                 ra = u64 [sp + 0x20]
 82850: db c2 00                 ra = t0 if a5 != 0
 82853: ca 08 08                 a1 = a1 * ra
 82856: cd 58 08                 a1 = a1 %u s0
 82859: c8 b8 08                 a1 = a1 + a4
 82862: cd 58 0b                 a4 = a1 %u s0
 82865: 7b 6b                    u64 [s1] = a4
 82867: ac 97 bb                 jump @6561 if a0 <u a2
      :                          @6565
 82870: c9 97 08                 a1 = a0 - a2
 82873: 82 1c 28                 a5 = u64 [sp + 0x28]
 82876: ae c8 5b                 jump @6574 if a1 >=u a5
      :                          @6566
 82879: 97 88 03                 a1 = a1 << 0x3
 82882: c8 48 08                 a1 = a1 + t2
 82885: 82 88                    a1 = u64 [a1]
 82887: ca 08 08                 a1 = a1 * ra
 82890: cd 58 08                 a1 = a1 %u s0
 82893: c8 b8 08                 a1 = a1 + a4
 82896: cd 58 0b                 a4 = a1 %u s0
 82899: 7b 6b                    u64 [s1] = a4
 82901: 28 9d                    jump @6562
      :                          @6567
 82903: 97 97 03                 a0 = a2 << 0x3
 82906: c8 47 07                 a0 = a0 + t2
 82909: 82 77                    a0 = u64 [a0]
 82911: 33 08 00 20              a1 = 0x2000
 82915: ac c8 26                 jump @6573 if a1 <u a5
      :                          @6568
 82918: 33 08 c0 22 03           a1 = 0x322c0
 82923: 95 88 00 00 01           a1 = a1 + 0x10000
 82928: 82 16                    s1 = u64 [sp]
 82930: 01                       fallthrough
      :                          @6569
 82931: 82 89                    a2 = u64 [a1]
 82933: c9 98 0a                 a3 = a1 - a2
 82936: ab 4a 11                 jump @6573 if a3 != t2
      :                          @6570
 82939: c9 69 0a                 a3 = a2 - s1
 82942: 01                       fallthrough
      :                          @6571
 82943: 82 8b                    a4 = u64 [a1]
 82945: ab 9b f2                 jump @6569 if a4 != a2
      :                          @6572
 82948: 7b 8a                    u64 [a1] = a3
 82950: 33 0c                    a5 = 0
 82952: 01                       fallthrough
      :                          @6573
 82953: 82 10 40                 ra = u64 [sp + 0x40]
 82956: 82 15 38                 s0 = u64 [sp + 0x38]
 82959: 82 16 30                 s1 = u64 [sp + 0x30]
 82962: 95 11 48                 sp = sp + 0x48
 82965: 32 00                    ret
      :                          @6574
 82967: 00                       trap
      :                          @6575
 82968: 00                       trap
      :                          @6576
 82969: 00                       trap
      :                          @6577
 82970: 00                       trap
      :                          @6578
 82971: 00                       trap
      :                          @6579
 82972: 51 18 01 b0 d7 00        jump @10216 if a1 == 1
      :                          @6580
 82978: 83 79                    i32 a2 = a0 + 0
 82980: 51 09 39                 jump @6585 if a2 == 0
      :                          @6581
 82983: 33 0b 01                 a4 = 0x1
 82986: 64 8a                    a3 = a1
 82988: aa b9 23                 jump @6584 if a2 == a4
      :                          @6582
 82991: 33 02 03                 t0 = 0x3
 82994: 64 8a                    a3 = a1
 82996: 33 09 01                 a2 = 0x1
 82999: 01                       fallthrough
      :                          @6583
 83000: 83 73                    i32 t1 = a0 + 0
 83002: 84 7b 01                 a4 = a0 & 0x1
 83005: 33 0c 01                 a5 = 0x1
 83008: db ba 0c                 a5 = a3 if a4 != 0
 83011: ca 9c 09                 a2 = a5 * a2
 83014: 8b 77 01                 i32 a0 = a0 >> 0x1
 83017: ca aa 0a                 a3 = a3 * a3
 83020: ac 32 ec                 jump @6583 if t0 <u t1
      :                          @6584
 83023: ca 9a 09                 a2 = a3 * a2
 83026: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 83029: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 83032: cb 89 07                 a0 = a2 /u a1
 83035: 32 00                    ret
      :                          @6585
 83037: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 83040: cb 89 07                 a0 = a2 /u a1
 83043: 28 69 d7 00              jump @10216
      :                          @6586
 83047: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 83050: 7b 10 28                 u64 [sp + 0x28] = ra
 83053: 7b 15 20                 u64 [sp + 0x20] = s0
 83056: 7b 16 18                 u64 [sp + 0x18] = s1
 83059: 7b 18 08                 u64 [sp + 0x8] = a1
 83062: 51 07 11                 jump @6589 if a0 == 0
      :                          @6587
 83065: 64 75                    s0 = a0
 83067: 52 15 01 20              jump @6591 if s0 != 1
      :                          @6588
 83071: 82 16 08                 s1 = u64 [sp + 0x8]
 83074: 95 66 01                 s1 = s1 + 0x1
 83077: 28 06                    jump @6590
      :                          @6589
 83079: 33 06 01                 s1 = 0x1
 83082: 01                       fallthrough
      :                          @6590
 83083: 64 67                    a0 = s1
 83085: 82 10 28                 ra = u64 [sp + 0x28]
 83088: 82 15 20                 s0 = u64 [sp + 0x20]
 83091: 82 16 18                 s1 = u64 [sp + 0x18]
 83094: 95 11 30                 sp = sp + 0x30
 83097: 32 00                    ret
      :                          @6591
 83099: 82 17 08                 a0 = u64 [sp + 0x8]
 83102: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 83105: 7b 17                    u64 [sp] = a0
 83107: 51 07 ce 00              jump @6604 if a0 == 0
      :                          @6592
 83111: 33 00 03                 ra = 0x3
 83114: 33 06 01                 s1 = 0x1
 83117: 33 0b 01                 a4 = 0x1
 83120: 28 49                    jump @6597
      :                          @6593
 83122: 33 0a                    a3 = 0
 83124: 33 09 01                 a2 = 0x1
 83127: 01                       fallthrough
      :                          @6594
 83128: 95 97 ff                 a0 = a2 + 0xffffffffffffffff
 83131: d8 79 0b                 a4 = a2 <u a0
 83134: 88 98 01                 a1 = a2 <u 0x1
 83137: c9 8a 08                 a1 = a3 - a1
 83140: d8 8a 0a                 a3 = a3 <u a1
 83143: db 9b 0a                 a3 = a4 if a2 != 0
 83146: 94 a7                    a0 = 0 if a3 != 0
 83148: 94 a8                    a1 = 0 if a3 != 0
 83150: 82 19                    a2 = u64 [sp]
 83152: 50 20 e4 03 b4 c4 01     ra = 996, jump @13629
      :                          @6595 [@dyn 498]
 83159: d6 76 08                 a1 = s1 mulhu a0
 83162: ca 76 06                 s1 = s1 * a0
 83165: 94 86 ff                 s1 = 0xffffffffffffffff if a1 != 0
 83168: 33 00 03                 ra = 0x3
 83171: 82 1b 10                 a4 = u64 [sp + 0x10]
 83174: 01                       fallthrough
      :                          @6596
 83175: d8 5b 07                 a0 = a4 <u s0
 83178: c8 7b 0b                 a4 = a4 + a0
 83181: 85 77 01                 a0 = a0 ^ 0x1
 83184: d8 b5 08                 a1 = s0 <u a4
 83187: d4 87 07                 a0 = a0 | a1
 83190: 52 07 95                 jump @6590 if a0 != 0
      :                          @6597
 83193: cd b5 07                 a0 = s0 %u a4
 83196: 52 07 eb                 jump @6596 if a0 != 0
      :                          @6598
 83199: 83 b7                    i32 a0 = a4 + 0
 83201: 7b 1b 10                 u64 [sp + 0x10] = a4
 83204: 51 07 ae                 jump @6593 if a0 == 0
      :                          @6599
 83207: 52 17 01 0b              jump @6601 if a0 != 1
      :                          @6600
 83211: 33 0a                    a3 = 0
 83213: 82 19 08                 a2 = u64 [sp + 0x8]
 83216: 28 a8                    jump @6594
      :                          @6601
 83218: 64 64                    t2 = s1
 83220: 64 53                    t1 = s0
 83222: 33 09                    a2 = 0
 83224: 33 0a                    a3 = 0
 83226: 33 07 01                 a0 = 0x1
 83229: 82 18 08                 a1 = u64 [sp + 0x8]
 83232: 01                       fallthrough
      :                          @6602
 83233: 84 bc 01                 a5 = a4 & 0x1
 83236: 9a c5                    s0 = -a5
 83238: 83 b2                    i32 t0 = a4 + 0
 83240: 33 06 01                 s1 = 0x1
 83243: db c8 06                 s1 = a1 if a5 != 0
 83246: d2 95 05                 s0 = s0 & a2
 83249: ca a6 0a                 a3 = s1 * a3
 83252: d6 76 0c                 a5 = s1 mulhu a0
 83255: c8 ca 0a                 a3 = a3 + a5
 83258: ca 75 0c                 a5 = s0 * a0
 83261: c8 ca 0a                 a3 = a3 + a5
 83264: ca 76 07                 a0 = s1 * a0
 83267: 8b bb 01                 i32 a4 = a4 >> 0x1
 83270: ca 98 09                 a2 = a1 * a2
 83273: d6 88 0c                 a5 = a1 mulhu a1
 83276: c8 9c 0c                 a5 = a5 + a2
 83279: c8 c9 09                 a2 = a2 + a5
 83282: ca 88 08                 a1 = a1 * a1
 83285: ac 20 cc                 jump @6602 if ra <u t0
      :                          @6603
 83288: d6 87 0b                 a4 = a0 mulhu a1
 83291: ca 97 09                 a2 = a0 * a2
 83294: c8 b9 09                 a2 = a2 + a4
 83297: ca 8a 0a                 a3 = a3 * a1
 83300: c8 9a 0a                 a3 = a3 + a2
 83303: ca 87 09                 a2 = a0 * a1
 83306: 64 35                    s0 = t1
 83308: 64 46                    s1 = t2
 83310: 28 4a ff                 jump @6594
      :                          @6604
 83313: 33 06 01                 s1 = 0x1
 83316: 33 07 ff                 a0 = 0xffffffffffffffff
 83319: 33 08 01                 a1 = 0x1
 83322: 28 15                    jump @6606
      :                          @6605
 83324: d8 58 09                 a2 = a1 <u s0
 83327: c8 98 08                 a1 = a1 + a2
 83330: 85 99 01                 a2 = a2 ^ 0x1
 83333: d8 85 0a                 a3 = s0 <u a1
 83336: d4 a9 09                 a2 = a2 | a3
 83339: 52 09 00 ff              jump @6590 if a2 != 0
      :                          @6606
 83343: cd 85 09                 a2 = s0 %u a1
 83346: 52 09 ea                 jump @6605 if a2 != 0
      :                          @6607
 83349: d6 86 09                 a2 = s1 mulhu a1
 83352: ca 86 06                 s1 = s1 * a1
 83355: db 97 06                 s1 = a0 if a2 != 0
 83358: 28 de                    jump @6605
      :                          @6608
 83360: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 83363: 7b 10 40                 u64 [sp + 0x40] = ra
 83366: 7b 15 38                 u64 [sp + 0x38] = s0
 83369: 7b 16 30                 u64 [sp + 0x30] = s1
 83372: 64 93                    t1 = a2
 83374: 98 9a 3c                 a3 = a2 >> 0x3c
 83377: 97 99 03                 a2 = a2 << 0x3
 83380: 7b 13 28                 u64 [sp + 0x28] = t1
 83383: 7b 17                    u64 [sp] = a0
 83385: 7b 18 18                 u64 [sp + 0x18] = a1
 83388: 7b 1a 20                 u64 [sp + 0x20] = a3
 83391: 51 03 61                 jump @6617 if t1 == 0
      :                          @6609
 83394: 52 0a e8 01              jump @6663 if a3 != 0
      :                          @6610
 83398: 88 a2 01                 t0 = a3 <u 0x1
 83401: 97 22 03                 t0 = t0 << 0x3
 83404: 33 04 c0 22 03           t2 = 0x322c0
 83409: 33 03 00 00 01           t1 = 0x10000
 83414: c8 34 0a                 a3 = t2 + t1
 83417: 01                       fallthrough
      :                          @6611
 83418: 82 ab                    a4 = u64 [a3]
 83420: c8 9b 0c                 a5 = a4 + a2
 83423: ac bc ca 01              jump @6662 if a5 <u a4
      :                          @6612
 83427: c8 2c 07                 a0 = a5 + t0
 83430: d8 c7 05                 s0 = a0 <u a5
 83433: d8 73 07                 a0 = t1 <u a0
 83436: d4 57 07                 a0 = a0 | s0
 83439: 52 07 ba 01              jump @6662 if a0 != 0
      :                          @6613
 83443: c9 c4 05                 s0 = t2 - a5
 83446: c8 35 05                 s0 = s0 + t1
 83449: 84 56 07                 s1 = s0 & 0x7
 83452: c8 6c 0c                 a5 = a5 + s1
 83455: 01                       fallthrough
      :                          @6614
 83456: 82 a7                    a0 = u64 [a3]
 83458: ab b7 d8                 jump @6611 if a0 != a4
      :                          @6615
 83461: 7b ac                    u64 [a3] = a5
 83463: c9 65 06                 s1 = s0 - s1
 83466: 64 67                    a0 = s1
 83468: 33 08                    a1 = 0
 83470: 64 95                    s0 = a2
 83472: 50 20 e6 03 06 c6 01     ra = 998, jump @13687
      :                          @6616 [@dyn 499]
 83479: 64 64                    t2 = s1
 83481: 64 59                    a2 = s0
 83483: 82 13 28                 t1 = u64 [sp + 0x28]
 83486: 28 06                    jump @6618
      :                          @6617
 83488: 33 04 08                 t2 = 0x8
 83491: 01                       fallthrough
      :                          @6618
 83492: 95 30 ff                 ra = t1 + 0xffffffffffffffff
 83495: 33 0b 01                 a4 = 0x1
 83498: 33 02 04                 t0 = 0x4
 83501: 01                       fallthrough
      :                          @6619
 83502: ac b0 69                 jump @6633 if ra <u a4
      :                          @6620
 83505: 64 b7                    a0 = a4
 83507: 33 06 01                 s1 = 0x1
 83510: 64 bc                    a5 = a4
 83512: ae 2b 21                 jump @6624 if a4 >=u t0
      :                          @6621
 83515: 88 cb 02                 a4 = a5 <u 0x2
 83518: 9a 6a                    a3 = -s1
 83520: db b6 0a                 a3 = s1 if a4 != 0
 83523: ae 37 53                 jump @6632 if a0 >=u t1
      :                          @6622
 83526: d8 07 0b                 a4 = a0 <u ra
 83529: c8 7b 0b                 a4 = a4 + a0
 83532: 97 78 03                 a1 = a0 << 0x3
 83535: c8 48 08                 a1 = a1 + t2
 83538: 7b 8a                    u64 [a1] = a3
 83540: ac 07 da                 jump @6619 if a0 <u ra
      :                          @6623
 83543: 28 40                    jump @6633
      :                          @6624
 83545: 33 08 02                 a1 = 0x2
 83548: 33 06 01                 s1 = 0x1
 83551: 64 7b                    a4 = a0
 83553: 28 17                    jump @6627
      :                          @6625
 83555: 64 bc                    a5 = a4
 83557: 01                       fallthrough
      :                          @6626
 83558: 95 8a fe                 a3 = a1 + 0xfffffffffffffffe
 83561: 88 aa 01                 a3 = a3 <u 0x1
 83564: c9 a8 08                 a1 = a1 - a3
 83567: 95 88 02                 a1 = a1 + 0x2
 83570: ca 88 0a                 a3 = a1 * a1
 83573: ac ac c6                 jump @6621 if a5 <u a3
      :                          @6627
 83576: 51 08 2f 01              jump @6660 if a1 == 0
      :                          @6628
 83580: cb 8b 0c                 a5 = a4 /u a1
 83583: ca 8c 05                 s0 = a5 * a1
 83586: ab 5b e1                 jump @6625 if a4 != s0
      :                          @6629
 83589: cd 8c 0b                 a4 = a5 %u a1
 83592: 51 0b 09                 jump @6631 if a4 == 0
      :                          @6630
 83595: 9a 66                    s1 = -s1
 83597: 64 cb                    a4 = a5
 83599: 28 d7                    jump @6626
      :                          @6631
 83601: 33 0a                    a3 = 0
 83603: ac 37 b3                 jump @6622 if a0 <u t1
      :                          @6632
 83606: 00                       trap
      :                          @6633
 83607: 82 17 20                 a0 = u64 [sp + 0x20]
 83610: 52 07 10 01              jump @6663 if a0 != 0
      :                          @6634
 83614: 7b 10 08                 u64 [sp + 0x8] = ra
 83617: 7b 14 10                 u64 [sp + 0x10] = t2
 83620: 88 72 01                 t0 = a0 <u 0x1
 83623: 97 22 03                 t0 = t0 << 0x3
 83626: 33 04 c0 22 03           t2 = 0x322c0
 83631: 33 03 00 00 01           t1 = 0x10000
 83636: c8 34 0a                 a3 = t2 + t1
 83639: 01                       fallthrough
      :                          @6635
 83640: 82 ab                    a4 = u64 [a3]
 83642: c8 9b 0c                 a5 = a4 + a2
 83645: ac bc ec 00              jump @6662 if a5 <u a4
      :                          @6636
 83649: c8 2c 07                 a0 = a5 + t0
 83652: d8 c7 08                 a1 = a0 <u a5
 83655: d8 73 07                 a0 = t1 <u a0
 83658: d4 87 07                 a0 = a0 | a1
 83661: 52 07 dc 00              jump @6662 if a0 != 0
      :                          @6637
 83665: c9 c4 07                 a0 = t2 - a5
 83668: c8 37 07                 a0 = a0 + t1
 83671: 84 76 07                 s1 = a0 & 0x7
 83674: c8 6c 0c                 a5 = a5 + s1
 83677: 01                       fallthrough
      :                          @6638
 83678: 82 a8                    a1 = u64 [a3]
 83680: ab b8 d8                 jump @6635 if a1 != a4
      :                          @6639
 83683: 7b ac                    u64 [a3] = a5
 83685: c9 67 05                 s0 = a0 - s1
 83688: 64 57                    a0 = s0
 83690: 33 08                    a1 = 0
 83692: 7b 19 20                 u64 [sp + 0x20] = a2
 83695: 50 20 e8 03 27 c5 01     ra = 1000, jump @13687
      :                          @6640 [@dyn 500]
 83702: 64 54                    t2 = s0
 83704: 33 0a 01                 a3 = 0x1
 83707: 82 18 28                 a1 = u64 [sp + 0x28]
 83710: 82 15 18                 s0 = u64 [sp + 0x18]
 83713: 82 12 10                 t0 = u64 [sp + 0x10]
 83716: 82 13 08                 t1 = u64 [sp + 0x8]
 83719: 01                       fallthrough
      :                          @6641
 83720: ac a3 5a                 jump @6651 if t1 <u a3
      :                          @6642
 83723: 64 a7                    a0 = a3
 83725: 33 0b                    a4 = 0
 83727: d8 3a 0a                 a3 = a3 <u t1
 83730: c8 7a 0a                 a3 = a3 + a0
 83733: 33 06 01                 s1 = 0x1
 83736: 28 2b                    jump @6645
      :                          @6643
 83738: 97 6c 03                 a5 = s1 << 0x3
 83741: c8 2c 0c                 a5 = a5 + t0
 83744: 82 cc                    a5 = u64 [a5]
 83746: 97 99 03                 a2 = a2 << 0x3
 83749: c8 59 09                 a2 = a2 + s0
 83752: 82 99                    a2 = u64 [a2]
 83754: ca c9 09                 a2 = a2 * a5
 83757: c8 9b 0b                 a4 = a4 + a2
 83760: 01                       fallthrough
      :                          @6644
 83761: d8 76 09                 a2 = s1 <u a0
 83764: c8 96 06                 s1 = s1 + a2
 83767: d8 67 0c                 a5 = a0 <u s1
 83770: 85 cc 01                 a5 = a5 ^ 0x1
 83773: d2 c9 09                 a2 = a2 & a5
 83776: 51 09 14                 jump @6649 if a2 == 0
      :                          @6645
 83779: cb 67 09                 a2 = a0 /u s1
 83782: ca 69 0c                 a5 = a2 * s1
 83785: ab c7 e8                 jump @6644 if a0 != a5
      :                          @6646
 83788: ae 86 59                 jump @6658 if s1 >=u a1
      :                          @6647
 83791: ac 89 cb                 jump @6643 if a2 <u a1
      :                          @6648
 83794: 28 54                    jump @6659
      :                          @6649
 83796: ae 87 54                 jump @6661 if a0 >=u a1
      :                          @6650
 83799: 97 79 03                 a2 = a0 << 0x3
 83802: c8 49 09                 a2 = a2 + t2
 83805: 7b 9b                    u64 [a2] = a4
 83807: ac 37 a9                 jump @6641 if a0 <u t1
      :                          @6651
 83810: 82 19                    a2 = u64 [sp]
 83812: 7b 98                    u64 [a2] = a1
 83814: 7b 94 08                 u64 [a2 + 0x8] = t2
 83817: 33 07 00 20              a0 = 0x2000
 83821: 7b 98 10                 u64 [a2 + 0x10] = a1
 83824: 82 15 20                 s0 = u64 [sp + 0x20]
 83827: ac 87 24                 jump @6657 if a0 <u a1
      :                          @6652
 83830: 33 07 c0 22 03           a0 = 0x322c0
 83835: 95 77 00 00 01           a0 = a0 + 0x10000
 83840: 01                       fallthrough
      :                          @6653
 83841: 82 78                    a1 = u64 [a0]
 83843: c9 87 09                 a2 = a0 - a1
 83846: ab 29 11                 jump @6657 if a2 != t0
      :                          @6654
 83849: c9 58 09                 a2 = a1 - s0
 83852: 01                       fallthrough
      :                          @6655
 83853: 82 7a                    a3 = u64 [a0]
 83855: ab 8a f2                 jump @6653 if a3 != a1
      :                          @6656
 83858: 7b 79                    u64 [a0] = a2
 83860: 33 0b                    a4 = 0
 83862: 01                       fallthrough
      :                          @6657
 83863: 82 10 40                 ra = u64 [sp + 0x40]
 83866: 82 15 38                 s0 = u64 [sp + 0x38]
 83869: 82 16 30                 s1 = u64 [sp + 0x30]
 83872: 95 11 48                 sp = sp + 0x48
 83875: 32 00                    ret
      :                          @6658
 83877: 00                       trap
      :                          @6659
 83878: 00                       trap
      :                          @6660
 83879: 00                       trap
      :                          @6661
 83880: 00                       trap
      :                          @6662
 83881: 00                       trap
      :                          @6663
 83882: 00                       trap
      :                          @6664
 83883: 82 45                    s0 = u64 [t2]
 83885: 95 5b 30                 a4 = s0 + 0x30
 83888: ac 5b e8 01              jump @6716 if a4 <u s0
      :                          @6665
 83892: 95 ba 08                 a3 = a4 + 0x8
 83895: d8 ba 0c                 a5 = a3 <u a4
 83898: d8 a2 0a                 a3 = t0 <u a3
 83901: d4 ca 0a                 a3 = a3 | a5
 83904: 52 0a d8 01              jump @6716 if a3 != 0
      :                          @6666
 83908: c9 b3 0c                 a5 = t1 - a4
 83911: c8 2c 00                 ra = a5 + t0
 83914: 84 0a 07                 a3 = ra & 0x7
 83917: c8 ab 0b                 a4 = a4 + a3
 83920: 01                       fallthrough
      :                          @6667
 83921: 82 46                    s1 = u64 [t2]
 83923: ab 56 d8                 jump @6664 if s1 != s0
      :                          @6668
 83926: 7b 4b                    u64 [t2] = a4
 83928: 01                       fallthrough
      :                          @6669
 83929: c9 a0 0b                 a4 = ra - a3
 83932: 14 0a ff ff ff ff ff ff ff 3f a3 = 0x3fffffffffffffff
 83942: 7b ba 08                 u64 [a4 + 0x8] = a3
 83945: 7b ba 10                 u64 [a4 + 0x10] = a3
 83948: 7b ba 18                 u64 [a4 + 0x18] = a3
 83951: 7b ba 20                 u64 [a4 + 0x20] = a3
 83954: 7b ba 28                 u64 [a4 + 0x28] = a3
 83957: 49 0b                    u64 [a4 + 0] = 0
 83959: 33 0a 18                 a3 = 0x18
 83962: ca a9 02                 t0 = a2 * a3
 83965: 51 09 1d 01              jump @6700 if a2 == 0
      :                          @6670
 83969: c8 28 00                 ra = a1 + t0
 83972: 33 03 05                 t1 = 0x5
 83975: 33 04 06                 t2 = 0x6
 83978: 64 8c                    a5 = a1
 83980: 28 08                    jump @6672
      :                          @6671
 83982: 95 cc 18                 a5 = a5 + 0x18
 83985: aa 0c 2d                 jump @6676 if a5 == ra
      :                          @6672
 83988: 82 ca                    a3 = u64 [a5]
 83990: ac a3 80 01              jump @6714 if t1 <u a3
      :                          @6673
 83994: 82 c9 08                 a2 = u64 [a5 + 0x8]
 83997: ae 49 7a 01              jump @6715 if a2 >=u t2
      :                          @6674
 84001: 82 c5 10                 s0 = u64 [a5 + 0x10]
 84004: 97 aa 03                 a3 = a3 << 0x3
 84007: c8 ba 0a                 a3 = a3 + a4
 84010: 82 aa                    a3 = u64 [a3]
 84012: 97 99 03                 a2 = a2 << 0x3
 84015: c8 b9 09                 a2 = a2 + a4
 84018: 82 96                    s1 = u64 [a2]
 84020: c8 5a 0a                 a3 = a3 + s0
 84023: af 6a d7                 jump @6671 if a3 >=s s1
      :                          @6675
 84026: 7b 9a                    u64 [a2] = a3
 84028: 28 d2                    jump @6671
      :                          @6676
 84030: 33 03 05                 t1 = 0x5
 84033: 64 8c                    a5 = a1
 84035: 28 08                    jump @6678
      :                          @6677
 84037: 95 cc 18                 a5 = a5 + 0x18
 84040: aa 0c 2d                 jump @6682 if a5 == ra
      :                          @6678
 84043: 82 ca                    a3 = u64 [a5]
 84045: ac a3 49 01              jump @6714 if t1 <u a3
      :                          @6679
 84049: 82 c9 08                 a2 = u64 [a5 + 0x8]
 84052: ac 93 43 01              jump @6715 if t1 <u a2
      :                          @6680
 84056: 82 c6 10                 s1 = u64 [a5 + 0x10]
 84059: 97 aa 03                 a3 = a3 << 0x3
 84062: c8 ba 0a                 a3 = a3 + a4
 84065: 82 aa                    a3 = u64 [a3]
 84067: 97 99 03                 a2 = a2 << 0x3
 84070: c8 b9 09                 a2 = a2 + a4
 84073: 82 95                    s0 = u64 [a2]
 84075: c8 6a 0a                 a3 = a3 + s1
 84078: af 5a d7                 jump @6677 if a3 >=s s0
      :                          @6681
 84081: 7b 9a                    u64 [a2] = a3
 84083: 28 d2                    jump @6677
      :                          @6682
 84085: 33 03 05                 t1 = 0x5
 84088: 64 8c                    a5 = a1
 84090: 28 08                    jump @6684
      :                          @6683
 84092: 95 cc 18                 a5 = a5 + 0x18
 84095: aa 0c 2d                 jump @6688 if a5 == ra
      :                          @6684
 84098: 82 ca                    a3 = u64 [a5]
 84100: ac a3 12 01              jump @6714 if t1 <u a3
      :                          @6685
 84104: 82 c9 08                 a2 = u64 [a5 + 0x8]
 84107: ac 93 0c 01              jump @6715 if t1 <u a2
      :                          @6686
 84111: 82 c6 10                 s1 = u64 [a5 + 0x10]
 84114: 97 aa 03                 a3 = a3 << 0x3
 84117: c8 ba 0a                 a3 = a3 + a4
 84120: 82 aa                    a3 = u64 [a3]
 84122: 97 99 03                 a2 = a2 << 0x3
 84125: c8 b9 09                 a2 = a2 + a4
 84128: 82 95                    s0 = u64 [a2]
 84130: c8 6a 0a                 a3 = a3 + s1
 84133: af 5a d7                 jump @6683 if a3 >=s s0
      :                          @6687
 84136: 7b 9a                    u64 [a2] = a3
 84138: 28 d2                    jump @6683
      :                          @6688
 84140: 33 03 05                 t1 = 0x5
 84143: 64 8c                    a5 = a1
 84145: 28 08                    jump @6690
      :                          @6689
 84147: 95 cc 18                 a5 = a5 + 0x18
 84150: aa 0c 2d                 jump @6694 if a5 == ra
      :                          @6690
 84153: 82 ca                    a3 = u64 [a5]
 84155: ac a3 db 00              jump @6714 if t1 <u a3
      :                          @6691
 84159: 82 c9 08                 a2 = u64 [a5 + 0x8]
 84162: ac 93 d5 00              jump @6715 if t1 <u a2
      :                          @6692
 84166: 82 c6 10                 s1 = u64 [a5 + 0x10]
 84169: 97 aa 03                 a3 = a3 << 0x3
 84172: c8 ba 0a                 a3 = a3 + a4
 84175: 82 aa                    a3 = u64 [a3]
 84177: 97 99 03                 a2 = a2 << 0x3
 84180: c8 b9 09                 a2 = a2 + a4
 84183: 82 95                    s0 = u64 [a2]
 84185: c8 6a 0a                 a3 = a3 + s1
 84188: af 5a d7                 jump @6689 if a3 >=s s0
      :                          @6693
 84191: 7b 9a                    u64 [a2] = a3
 84193: 28 d2                    jump @6689
      :                          @6694
 84195: 33 03 05                 t1 = 0x5
 84198: 64 8c                    a5 = a1
 84200: 28 08                    jump @6696
      :                          @6695
 84202: 95 cc 18                 a5 = a5 + 0x18
 84205: aa 0c 2d                 jump @6700 if a5 == ra
      :                          @6696
 84208: 82 ca                    a3 = u64 [a5]
 84210: ac a3 a4 00              jump @6714 if t1 <u a3
      :                          @6697
 84214: 82 c9 08                 a2 = u64 [a5 + 0x8]
 84217: ac 93 9e 00              jump @6715 if t1 <u a2
      :                          @6698
 84221: 82 c6 10                 s1 = u64 [a5 + 0x10]
 84224: 97 aa 03                 a3 = a3 << 0x3
 84227: c8 ba 0a                 a3 = a3 + a4
 84230: 82 aa                    a3 = u64 [a3]
 84232: 97 99 03                 a2 = a2 << 0x3
 84235: c8 b9 09                 a2 = a2 + a4
 84238: 82 95                    s0 = u64 [a2]
 84240: c8 6a 0a                 a3 = a3 + s1
 84243: af 5a d7                 jump @6695 if a3 >=s s0
      :                          @6699
 84246: 7b 9a                    u64 [a2] = a3
 84248: 28 d2                    jump @6695
      :                          @6700
 84250: 33 0c 06                 a5 = 0x6
 84253: 01                       fallthrough
      :                          @6701
 84254: 51 02 5f                 jump @6712 if t0 == 0
      :                          @6702
 84257: 82 8a                    a3 = u64 [a1]
 84259: ae ca 73                 jump @6714 if a3 >=u a5
      :                          @6703
 84262: 82 89 08                 a2 = u64 [a1 + 0x8]
 84265: ae c9 6e                 jump @6715 if a2 >=u a5
      :                          @6704
 84268: 97 aa 03                 a3 = a3 << 0x3
 84271: c8 ba 0a                 a3 = a3 + a4
 84274: 82 aa                    a3 = u64 [a3]
 84276: 82 86 10                 s1 = u64 [a1 + 0x10]
 84279: 97 99 03                 a2 = a2 << 0x3
 84282: c8 b9 09                 a2 = a2 + a4
 84285: 82 99                    a2 = u64 [a2]
 84287: 95 88 18                 a1 = a1 + 0x18
 84290: c8 6a 0a                 a3 = a3 + s1
 84293: 95 22 e8                 t0 = t0 + 0xffffffffffffffe8
 84296: af 9a d6                 jump @6701 if a3 >=s a2
      :                          @6705
 84299: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 84309: 7b 78                    u64 [a0] = a1
 84311: 33 07 c0 22 03           a0 = 0x322c0
 84316: 95 77 00 00 01           a0 = a0 + 0x10000
 84321: 01                       fallthrough
      :                          @6706
 84322: 82 78                    a1 = u64 [a0]
 84324: c9 87 09                 a2 = a0 - a1
 84327: ab b9 22                 jump @6713 if a2 != a4
      :                          @6707
 84330: 95 89 d0                 a2 = a1 + 0xffffffffffffffd0
 84333: 01                       fallthrough
      :                          @6708
 84334: 82 7a                    a3 = u64 [a0]
 84336: ab 8a f2                 jump @6706 if a3 != a1
      :                          @6709
 84339: 7b 79                    u64 [a0] = a2
 84341: 33 0c                    a5 = 0
 84343: 01                       fallthrough
      :                          @6710
 84344: ab 8a ea                 jump @6706 if a3 != a1
      :                          @6711
 84347: 28 0e                    jump @6713
      :                          @6712
 84349: 33 08 06                 a1 = 0x6
 84352: 7b 78                    u64 [a0] = a1
 84354: 7b 7b 08                 u64 [a0 + 0x8] = a4
 84357: 7b 78 10                 u64 [a0 + 0x10] = a1
 84360: 01                       fallthrough
      :                          @6713
 84361: 82 10 10                 ra = u64 [sp + 0x10]
 84364: 82 15 08                 s0 = u64 [sp + 0x8]
 84367: 82 16                    s1 = u64 [sp]
 84369: 95 11 18                 sp = sp + 0x18
 84372: 32 00                    ret
      :                          @6714
 84374: 00                       trap
      :                          @6715
 84375: 00                       trap
      :                          @6716
 84376: 00                       trap
      :                          @6717
 84377: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 84380: 7b 10 40                 u64 [sp + 0x40] = ra
 84383: 7b 15 38                 u64 [sp + 0x38] = s0
 84386: 7b 16 30                 u64 [sp + 0x30] = s1
 84389: 7b 17 08                 u64 [sp + 0x8] = a0
 84392: 7b 18 28                 u64 [sp + 0x28] = a1
 84395: 51 08 b9 00              jump @6729 if a1 == 0
      :                          @6718
 84399: 33 08                    a1 = 0
 84401: 14 04 00 00 00 00 00 00 00 80 t2 = 0x8000000000000000
 84411: 7b 14 10                 u64 [sp + 0x10] = t2
 84414: 82 15 10                 s0 = u64 [sp + 0x10]
 84417: 01                       fallthrough
      :                          @6719
 84418: 33 07                    a0 = 0
 84420: 64 84                    t2 = a1
 84422: 95 88 01                 a1 = a1 + 0x1
 84425: 7b 18                    u64 [sp] = a1
 84427: 96 4a 18                 a3 = t2 * 0x18
 84430: 82 18 08                 a1 = u64 [sp + 0x8]
 84433: c8 8a 0a                 a3 = a3 + a1
 84436: 95 a8 10                 a1 = a3 + 0x10
 84439: 7b 18 20                 u64 [sp + 0x20] = a1
 84442: 95 aa 08                 a3 = a3 + 0x8
 84445: 7b 1a 18                 u64 [sp + 0x18] = a3
 84448: 33 0b 01                 a4 = 0x1
 84451: 28 11                    jump @6721
      :                          @6720
 84453: 82 18 28                 a1 = u64 [sp + 0x28]
 84456: d8 87 0b                 a4 = a0 <u a1
 84459: c8 7b 0b                 a4 = a4 + a0
 84462: 33 09 18                 a2 = 0x18
 84465: ae 87 6a                 jump @6728 if a0 >=u a1
      :                          @6721
 84468: 33 02                    t0 = 0
 84470: 33 0a                    a3 = 0
 84472: 96 7c 18                 a5 = a0 * 0x18
 84475: 64 b7                    a0 = a4
 84477: 82 18 08                 a1 = u64 [sp + 0x8]
 84480: c8 8c 0c                 a5 = a5 + a1
 84483: 95 c3 08                 t1 = a5 + 0x8
 84486: 95 c0 10                 ra = a5 + 0x10
 84489: 28 0e                    jump @6723
      :                          @6722
 84491: 95 aa 01                 a3 = a3 + 0x1
 84494: 95 22 08                 t0 = t0 + 0x8
 84497: 82 18 28                 a1 = u64 [sp + 0x28]
 84500: aa a8 d1                 jump @6720 if a1 == a3
      :                          @6723
 84503: 82 0b                    a4 = u64 [ra]
 84505: ae b4 59                 jump @6730 if t2 >=u a4
      :                          @6724
 84508: 82 18 20                 a1 = u64 [sp + 0x20]
 84511: 82 8c                    a5 = u64 [a1]
 84513: ae ca 52                 jump @6731 if a3 >=u a5
      :                          @6725
 84516: ae ba 50                 jump @6732 if a3 >=u a4
      :                          @6726
 84519: 82 3b                    a4 = u64 [t1]
 84521: 82 18 18                 a1 = u64 [sp + 0x18]
 84524: 82 8c                    a5 = u64 [a1]
 84526: 97 49 03                 a2 = t2 << 0x3
 84529: c8 b9 09                 a2 = a2 + a4
 84532: 82 98                    a1 = u64 [a2]
 84534: c8 2c 0c                 a5 = a5 + t0
 84537: 82 cc                    a5 = u64 [a5]
 84539: c8 c8 09                 a2 = a1 + a5
 84542: d9 89 08                 a1 = a2 <s a1
 84545: 89 cc                    a5 = a5 <s 0
 84547: d3 c8 08                 a1 = a1 ^ a5
 84550: c8 2b 0b                 a4 = a4 + t0
 84553: 82 b6                    s1 = u64 [a4]
 84555: 99 9c 3f                 a5 = a2 >>a 0x3f
 84558: d3 5c 0c                 a5 = a5 ^ s0
 84561: da 89 0c                 a5 = a2 if a1 == 0
 84564: af 6c b7                 jump @6722 if a5 >=s s1
      :                          @6727
 84567: 7b bc                    u64 [a4] = a5
 84569: 28 b2                    jump @6722
      :                          @6728
 84571: 82 17 28                 a0 = u64 [sp + 0x28]
 84574: 82 18                    a1 = u64 [sp]
 84576: ab 78 62 ff              jump @6719 if a1 != a0
      :                          @6729
 84580: 82 10 40                 ra = u64 [sp + 0x40]
 84583: 82 15 38                 s0 = u64 [sp + 0x38]
 84586: 82 16 30                 s1 = u64 [sp + 0x30]
 84589: 95 11 48                 sp = sp + 0x48
 84592: 32 00                    ret
      :                          @6730
 84594: 00                       trap
      :                          @6731
 84595: 00                       trap
      :                          @6732
 84596: 00                       trap
      :                          @6733
 84597: 95 11 70 ff              sp = sp + 0xffffffffffffff70
 84601: 7b 10 88 00              u64 [sp + 0x88] = ra
 84605: 7b 15 80 00              u64 [sp + 0x80] = s0
 84609: 7b 16 78                 u64 [sp + 0x78] = s1
 84612: 82 78 10                 a1 = u64 [a0 + 0x10]
 84615: 51 08 81 02              jump @6780 if a1 == 0
      :                          @6734
 84619: 98 89 3c                 a2 = a1 >> 0x3c
 84622: 52 09 c1 02              jump @6793 if a2 != 0
      :                          @6735
 84626: 88 92 01                 t0 = a2 <u 0x1
 84629: 7b 18 28                 u64 [sp + 0x28] = a1
 84632: 97 88 03                 a1 = a1 << 0x3
 84635: 7b 18 10                 u64 [sp + 0x10] = a1
 84638: 97 22 03                 t0 = t0 << 0x3
 84641: 33 04 c0 22 03           t2 = 0x322c0
 84646: 33 03 00 00 01           t1 = 0x10000
 84651: c8 34 0a                 a3 = t2 + t1
 84654: 01                       fallthrough
      :                          @6736
 84655: 82 ab                    a4 = u64 [a3]
 84657: 82 15 10                 s0 = u64 [sp + 0x10]
 84660: c8 b5 05                 s0 = s0 + a4
 84663: ac b5 97 02              jump @6792 if s0 <u a4
      :                          @6737
 84667: c8 25 09                 a2 = s0 + t0
 84670: d8 59 0c                 a5 = a2 <u s0
 84673: d8 93 09                 a2 = t1 <u a2
 84676: d4 c9 09                 a2 = a2 | a5
 84679: 52 09 87 02              jump @6792 if a2 != 0
      :                          @6738
 84683: c9 54 09                 a2 = t2 - s0
 84686: c8 39 09                 a2 = a2 + t1
 84689: 84 9c 07                 a5 = a2 & 0x7
 84692: c8 c5 05                 s0 = s0 + a5
 84695: 01                       fallthrough
      :                          @6739
 84696: 82 a8                    a1 = u64 [a3]
 84698: ab b8 d5                 jump @6736 if a1 != a4
      :                          @6740
 84701: 7b a5                    u64 [a3] = s0
 84703: 01                       fallthrough
      :                          @6741
 84704: 7b 17 50                 u64 [sp + 0x50] = a0
 84707: c9 c9 03                 t1 = a2 - a5
 84710: 33 04 01                 t2 = 0x1
 84713: 64 37                    a0 = t1
 84715: 82 19 28                 a2 = u64 [sp + 0x28]
 84718: 7b 13 38                 u64 [sp + 0x38] = t1
 84721: 53 19 02 2e              jump @6744 if a2 <u 2
      :                          @6742
 84725: 82 16 10                 s1 = u64 [sp + 0x10]
 84728: 95 69 f8                 a2 = s1 + 0xfffffffffffffff8
 84731: 33 08 ff 00              a1 = 0xff
 84735: 64 37                    a0 = t1
 84737: 50 20 ea 03 15 c1 01     ra = 1002, jump @13687
      :                          @6743 [@dyn 501]
 84744: 82 13 38                 t1 = u64 [sp + 0x38]
 84747: 33 07 c0 22 03           a0 = 0x322c0
 84752: c8 67 07                 a0 = a0 + s1
 84755: 95 77 f8 ff 00           a0 = a0 + 0xfff8
 84760: c9 57 07                 a0 = a0 - s0
 84763: 82 14 28                 t2 = u64 [sp + 0x28]
 84766: 01                       fallthrough
      :                          @6744
 84767: 33 06                    s1 = 0
 84769: 33 09                    a2 = 0
 84771: 49 07 ff                 u64 [a0 + 0] = 0xffffffffffffffff
 84774: 97 40 03                 ra = t2 << 0x3
 84777: 82 17 50                 a0 = u64 [sp + 0x50]
 84780: 82 77 08                 a0 = u64 [a0 + 0x8]
 84783: 7b 17 20                 u64 [sp + 0x20] = a0
 84786: 33 07 c0 22 03           a0 = 0x322c0
 84791: 95 7c 00 00 01           a5 = a0 + 0x10000
 84796: 82 15 28                 s0 = u64 [sp + 0x28]
 84799: 7b 14 30                 u64 [sp + 0x30] = t2
 84802: 7b 10                    u64 [sp] = ra
 84804: 7b 1c 48                 u64 [sp + 0x48] = a5
 84807: 28 09                    jump @6746
      :                          @6745
 84809: 82 19 18                 a2 = u64 [sp + 0x18]
 84812: aa 59 d2 01              jump @6782 if a2 == s0
      :                          @6746
 84816: 7b 19 18                 u64 [sp + 0x18] = a2
 84819: 33 08 ff 00              a1 = 0xff
 84823: 64 37                    a0 = t1
 84825: 64 09                    a2 = ra
 84827: 50 20 ec 03 bb c0 01     ra = 1004, jump @13687
      :                          @6747 [@dyn 502]
 84834: 82 18 18                 a1 = u64 [sp + 0x18]
 84837: 82 17 30                 a0 = u64 [sp + 0x30]
 84840: 49 11 58                 u64 [sp + 88] = 0
 84843: 95 19 68                 a2 = sp + 0x68
 84846: 49 19 08                 u64 [a2 + 8] = 0
 84849: 49 09                    u64 [a2 + 0] = 0
 84851: 49 11 60 08              u64 [sp + 96] = 0x8
 84855: aa 78 d6 01              jump @6791 if a1 == a0
      :                          @6748
 84859: 7b 16 08                 u64 [sp + 0x8] = s1
 84862: 97 87 03                 a0 = a1 << 0x3
 84865: 82 19 38                 a2 = u64 [sp + 0x38]
 84868: c8 97 07                 a0 = a0 + a2
 84871: 49 07                    u64 [a0 + 0] = 0
 84873: 95 17 58                 a0 = sp + 0x58
 84876: 50 20 ee 03 e9 03 ff     ra = 1006, jump @1496
      :                          @6749 [@dyn 503]
 84883: 82 14 30                 t2 = u64 [sp + 0x30]
 84886: 82 1a 70                 a3 = u64 [sp + 0x70]
 84889: 82 1b 68                 a4 = u64 [sp + 0x68]
 84892: 82 12 58                 t0 = u64 [sp + 0x58]
 84895: c8 ab 07                 a0 = a4 + a3
 84898: d8 27 08                 a1 = a0 <u t0
 84901: 64 26                    s1 = t0
 84903: 82 10 60                 ra = u64 [sp + 0x60]
 84906: 94 86                    s1 = 0 if a1 != 0
 84908: c9 67 07                 a0 = a0 - s1
 84911: 97 77 03                 a0 = a0 << 0x3
 84914: c8 07 07                 a0 = a0 + ra
 84917: 82 18 18                 a1 = u64 [sp + 0x18]
 84920: 7b 78                    u64 [a0] = a1
 84922: 95 aa 01                 a3 = a3 + 0x1
 84925: 7b 1a 70                 u64 [sp + 0x70] = a3
 84928: 82 13 38                 t1 = u64 [sp + 0x38]
 84931: 33 09 ff                 a2 = 0xffffffffffffffff
 84934: 82 1c 48                 a5 = u64 [sp + 0x48]
 84937: 52 0a 67                 jump @6762 if a3 != 0
      :                          @6750
 84940: 82 17 18                 a0 = u64 [sp + 0x18]
 84943: 95 77 01                 a0 = a0 + 0x1
 84946: 7b 17 18                 u64 [sp + 0x18] = a0
 84949: 82 10                    ra = u64 [sp]
 84951: 64 07                    a0 = ra
 84953: 64 39                    a2 = t1
 84955: 82 16 08                 s1 = u64 [sp + 0x8]
 84958: 01                       fallthrough
      :                          @6751
 84959: 64 68                    a1 = s1
 84961: 82 96                    s1 = u64 [a2]
 84963: 95 99 08                 a2 = a2 + 0x8
 84966: 88 6a ff                 a3 = s1 <u 0xffffffffffffffff
 84969: d8 68 0b                 a4 = a1 <u s1
 84972: d2 ba 0a                 a3 = a3 & a4
 84975: 95 77 f8                 a0 = a0 + 0xfffffffffffffff8
 84978: da a8 06                 s1 = a1 if a3 == 0
 84981: 52 07 ea                 jump @6751 if a0 != 0
      :                          @6752
 84984: 51 02 51 ff              jump @6745 if t0 == 0
      :                          @6753
 84988: 56 22 00 20 4d ff        jump @6745 if t0 >u 8192
      :                          @6754
 84994: 82 17 60                 a0 = u64 [sp + 0x60]
 84997: 97 22 03                 t0 = t0 << 0x3
 85000: 01                       fallthrough
      :                          @6755
 85001: 82 c9                    a2 = u64 [a5]
 85003: c9 9c 0a                 a3 = a5 - a2
 85006: ab 7a 3b ff              jump @6745 if a3 != a0
      :                          @6756
 85010: c9 29 0a                 a3 = a2 - t0
 85013: 82 18 48                 a1 = u64 [sp + 0x48]
 85016: 01                       fallthrough
      :                          @6757
 85017: 82 8b                    a4 = u64 [a1]
 85019: ab 9b 06                 jump @6759 if a4 != a2
      :                          @6758
 85022: 7b 8a                    u64 [a1] = a3
 85024: 01                       fallthrough
      :                          @6759
 85025: 82 1c 48                 a5 = u64 [sp + 0x48]
 85028: ab 9b e5                 jump @6755 if a4 != a2
      :                          @6760
 85031: 28 22 ff                 jump @6745
      :                          @6761
 85034: 82 15 28                 s0 = u64 [sp + 0x28]
 85037: 51 0a 9f                 jump @6750 if a3 == 0
      :                          @6762
 85040: 95 b7 01                 a0 = a4 + 0x1
 85043: d8 27 06                 s1 = a0 <u t0
 85046: 64 28                    a1 = t0
 85048: 94 68                    a1 = 0 if s1 != 0
 85050: 97 b6 03                 s1 = a4 << 0x3
 85053: c9 87 0b                 a4 = a0 - a1
 85056: 7b 1b 68                 u64 [sp + 0x68] = a4
 85059: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 85062: 7b 1a 70                 u64 [sp + 0x70] = a3
 85065: c8 06 06                 s1 = s1 + ra
 85068: 82 67                    a0 = u64 [s1]
 85070: ae 57 fe 00              jump @6790 if a0 >=u s0
      :                          @6763
 85074: 96 76 18                 s1 = a0 * 0x18
 85077: 82 18 20                 a1 = u64 [sp + 0x20]
 85080: c8 86 06                 s1 = s1 + a1
 85083: 82 68 10                 a1 = u64 [s1 + 0x10]
 85086: 51 08 cc                 jump @6761 if a1 == 0
      :                          @6764
 85089: 82 66 08                 s1 = u64 [s1 + 0x8]
 85092: ae 47 7d                 jump @6773 if a0 >=u t2
      :                          @6765
 85095: 97 77 03                 a0 = a0 << 0x3
 85098: c8 37 07                 a0 = a0 + t1
 85101: 7b 17 40                 u64 [sp + 0x40] = a0
 85104: 97 85 03                 s0 = a1 << 0x3
 85107: 28 2d                    jump @6768
      :                          @6766
 85109: c8 ab 07                 a0 = a4 + a3
 85112: d8 27 08                 a1 = a0 <u t0
 85115: 64 2c                    a5 = t0
 85117: 94 8c                    a5 = 0 if a1 != 0
 85119: c9 c7 07                 a0 = a0 - a5
 85122: 97 77 03                 a0 = a0 << 0x3
 85125: c8 07 07                 a0 = a0 + ra
 85128: 7b 76                    u64 [a0] = s1
 85130: 95 aa 01                 a3 = a3 + 0x1
 85133: 7b 1a 70                 u64 [sp + 0x70] = a3
 85136: 82 1c 48                 a5 = u64 [sp + 0x48]
 85139: 01                       fallthrough
      :                          @6767
 85140: 95 55 f8                 s0 = s0 + 0xfffffffffffffff8
 85143: 82 16 50                 s1 = u64 [sp + 0x50]
 85146: 95 66 08                 s1 = s1 + 0x8
 85149: 51 05 8d                 jump @6761 if s0 == 0
      :                          @6768
 85152: 7b 16 50                 u64 [sp + 0x50] = s1
 85155: 82 66                    s1 = u64 [s1]
 85157: ae 46 61                 jump @6778 if s1 >=u t2
      :                          @6769
 85160: 97 67 03                 a0 = s1 << 0x3
 85163: c8 37 07                 a0 = a0 + t1
 85166: 82 78                    a1 = u64 [a0]
 85168: ab 98 e4                 jump @6767 if a1 != a2
      :                          @6770
 85171: 82 18 40                 a1 = u64 [sp + 0x40]
 85174: 82 88                    a1 = u64 [a1]
 85176: 95 88 01                 a1 = a1 + 0x1
 85179: 7b 78                    u64 [a0] = a1
 85181: ab 2a b8                 jump @6766 if a3 != t0
      :                          @6771
 85184: 95 17 58                 a0 = sp + 0x58
 85187: 50 20 f0 03 b2 02 ff     ra = 1008, jump @1496
      :                          @6772 [@dyn 504]
 85194: 33 09 ff                 a2 = 0xffffffffffffffff
 85197: 82 14 30                 t2 = u64 [sp + 0x30]
 85200: 82 13 38                 t1 = u64 [sp + 0x38]
 85203: 82 1a 70                 a3 = u64 [sp + 0x70]
 85206: 82 12 58                 t0 = u64 [sp + 0x58]
 85209: 82 1b 68                 a4 = u64 [sp + 0x68]
 85212: 82 10 60                 ra = u64 [sp + 0x60]
 85215: 28 96                    jump @6766
      :                          @6773
 85217: 97 88 03                 a1 = a1 << 0x3
 85220: 01                       fallthrough
      :                          @6774
 85221: 64 65                    s0 = s1
 85223: 82 66                    s1 = u64 [s1]
 85225: ae 46 1d                 jump @6778 if s1 >=u t2
      :                          @6775
 85228: 97 66 03                 s1 = s1 << 0x3
 85231: c8 36 06                 s1 = s1 + t1
 85234: 82 6c                    a5 = u64 [s1]
 85236: aa 9c 13                 jump @6779 if a5 == a2
      :                          @6776
 85239: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
 85242: 95 56 08                 s1 = s0 + 0x8
 85245: 82 1c 48                 a5 = u64 [sp + 0x48]
 85248: 52 08 e5                 jump @6774 if a1 != 0
      :                          @6777
 85251: 28 27 ff                 jump @6761
      :                          @6778
 85254: 00                       trap
      :                          @6779
 85255: 00                       trap
      :                          @6780
 85256: 33 06                    s1 = 0
 85258: 01                       fallthrough
      :                          @6781
 85259: 64 67                    a0 = s1
 85261: 82 10 88 00              ra = u64 [sp + 0x88]
 85265: 82 15 80 00              s0 = u64 [sp + 0x80]
 85269: 82 16 78                 s1 = u64 [sp + 0x78]
 85272: 95 11 90 00              sp = sp + 0x90
 85276: 32 00                    ret
      :                          @6782
 85278: 56 25 00 20 ed           jump @6781 if s0 >u 8192
      :                          @6783
 85283: 33 07 c0 22 03           a0 = 0x322c0
 85288: 95 77 00 00 01           a0 = a0 + 0x10000
 85293: 01                       fallthrough
      :                          @6784
 85294: 82 78                    a1 = u64 [a0]
 85296: c9 87 09                 a2 = a0 - a1
 85299: ab 39 d8                 jump @6781 if a2 != t1
      :                          @6785
 85302: 82 19 10                 a2 = u64 [sp + 0x10]
 85305: c9 98 09                 a2 = a1 - a2
 85308: 01                       fallthrough
      :                          @6786
 85309: 82 7a                    a3 = u64 [a0]
 85311: ab 8a ef                 jump @6784 if a3 != a1
      :                          @6787
 85314: 7b 79                    u64 [a0] = a2
 85316: 33 0b                    a4 = 0
 85318: 01                       fallthrough
      :                          @6788
 85319: ab 8a e7                 jump @6784 if a3 != a1
      :                          @6789
 85322: 28 c1                    jump @6781
      :                          @6790
 85324: 00                       trap
      :                          @6791
 85325: 00                       trap
      :                          @6792
 85326: 00                       trap
      :                          @6793
 85327: 00                       trap
      :                          @6794
 85328: 95 11 60 ff              sp = sp + 0xffffffffffffff60
 85332: 7b 10 98 00              u64 [sp + 0x98] = ra
 85336: 7b 15 90 00              u64 [sp + 0x90] = s0
 85340: 7b 16 88 00              u64 [sp + 0x88] = s1
 85344: 7b 18 38                 u64 [sp + 0x38] = a1
 85347: 82 8a 10                 a3 = u64 [a1 + 0x10]
 85350: 7b 17 28                 u64 [sp + 0x28] = a0
 85353: 49 11 68                 u64 [sp + 104] = 0
 85356: 7b 1a 48                 u64 [sp + 0x48] = a3
 85359: 51 0a bd 01              jump @6828 if a3 == 0
      :                          @6795
 85363: 98 a7 3c                 a0 = a3 >> 0x3c
 85366: 52 07 9e 03              jump @6872 if a0 != 0
      :                          @6796
 85370: 88 77 01                 a0 = a0 <u 0x1
 85373: 97 a9 03                 a2 = a3 << 0x3
 85376: 97 72 03                 t0 = a0 << 0x3
 85379: 33 04 c0 22 03           t2 = 0x322c0
 85384: 33 03 00 00 01           t1 = 0x10000
 85389: c8 34 0a                 a3 = t2 + t1
 85392: 01                       fallthrough
      :                          @6797
 85393: 82 ab                    a4 = u64 [a3]
 85395: c8 9b 0c                 a5 = a4 + a2
 85398: ac bc 7b 03              jump @6869 if a5 <u a4
      :                          @6798
 85402: c8 2c 07                 a0 = a5 + t0
 85405: d8 c7 06                 s1 = a0 <u a5
 85408: d8 73 07                 a0 = t1 <u a0
 85411: d4 67 07                 a0 = a0 | s1
 85414: 52 07 6b 03              jump @6869 if a0 != 0
      :                          @6799
 85418: c9 c4 06                 s1 = t2 - a5
 85421: c8 36 08                 a1 = s1 + t1
 85424: 84 86 07                 s1 = a1 & 0x7
 85427: c8 6c 0c                 a5 = a5 + s1
 85430: 01                       fallthrough
      :                          @6800
 85431: 82 a7                    a0 = u64 [a3]
 85433: ab b7 d8                 jump @6797 if a0 != a4
      :                          @6801
 85436: 7b ac                    u64 [a3] = a5
 85438: 33 05                    s0 = 0
 85440: c9 68 07                 a0 = a1 - s1
 85443: 7b 17 60                 u64 [sp + 0x60] = a0
 85446: 33 08                    a1 = 0
 85448: 7b 19 40                 u64 [sp + 0x40] = a2
 85451: 50 20 f2 03 4b be 01     ra = 1010, jump @13687
      :                          @6802 [@dyn 505]
 85458: 82 19 40                 a2 = u64 [sp + 0x40]
 85461: 33 03 c0 22 03           t1 = 0x322c0
 85466: 33 02 00 00 01           t0 = 0x10000
 85471: c8 23 07                 a0 = t1 + t0
 85474: 01                       fallthrough
      :                          @6803
 85475: 82 7a                    a3 = u64 [a0]
 85477: c8 9a 0b                 a4 = a3 + a2
 85480: ac ab 29 03              jump @6869 if a4 <u a3
      :                          @6804
 85484: 95 b8 08                 a1 = a4 + 0x8
 85487: d8 b8 0c                 a5 = a1 <u a4
 85490: d8 82 08                 a1 = t0 <u a1
 85493: d4 c8 08                 a1 = a1 | a5
 85496: 52 08 19 03              jump @6869 if a1 != 0
      :                          @6805
 85500: c9 b3 08                 a1 = t1 - a4
 85503: c8 28 08                 a1 = a1 + t0
 85506: 84 8c 07                 a5 = a1 & 0x7
 85509: c8 cb 0b                 a4 = a4 + a5
 85512: 01                       fallthrough
      :                          @6806
 85513: 82 75                    s0 = u64 [a0]
 85515: ab a5 d8                 jump @6803 if s0 != a3
      :                          @6807
 85518: 7b 7b                    u64 [a0] = a4
 85520: 33 06                    s1 = 0
 85522: c9 c8 07                 a0 = a1 - a5
 85525: 7b 17 50                 u64 [sp + 0x50] = a0
 85528: 33 08                    a1 = 0
 85530: 50 20 f4 03 fc bd 01     ra = 1012, jump @13687
      :                          @6808 [@dyn 506]
 85537: 82 14 40                 t2 = u64 [sp + 0x40]
 85540: 33 03 c0 22 03           t1 = 0x322c0
 85545: 33 02 00 00 01           t0 = 0x10000
 85550: c8 23 07                 a0 = t1 + t0
 85553: 82 19 48                 a2 = u64 [sp + 0x48]
 85556: 01                       fallthrough
      :                          @6809
 85557: 82 76                    s1 = u64 [a0]
 85559: c8 46 0a                 a3 = s1 + t2
 85562: ac 6a d8 02              jump @6870 if a3 <u s1
      :                          @6810
 85566: 95 ab 08                 a4 = a3 + 0x8
 85569: d8 ab 0c                 a5 = a4 <u a3
 85572: d8 b2 0b                 a4 = t0 <u a4
 85575: d4 cb 0b                 a4 = a4 | a5
 85578: 52 0b c8 02              jump @6870 if a4 != 0
      :                          @6811
 85582: c9 a3 0b                 a4 = t1 - a3
 85585: c8 2b 0b                 a4 = a4 + t0
 85588: 84 b5 07                 s0 = a4 & 0x7
 85591: c8 5a 0a                 a3 = a3 + s0
 85594: 01                       fallthrough
      :                          @6812
 85595: 82 7c                    a5 = u64 [a0]
 85597: ab 6c d8                 jump @6809 if a5 != s1
      :                          @6813
 85600: 7b 7a                    u64 [a0] = a3
 85602: 01                       fallthrough
      :                          @6814
 85603: c9 5b 07                 a0 = a4 - s0
 85606: 49 11 30 01              u64 [sp + 48] = 0x1
 85610: 7b 17 58                 u64 [sp + 0x58] = a0
 85613: 53 19 02 27              jump @6817 if a2 <u 2
      :                          @6815
 85617: 95 49 f8                 a2 = t2 + 0xfffffffffffffff8
 85620: 33 08 ff 00              a1 = 0xff
 85624: 82 17 58                 a0 = u64 [sp + 0x58]
 85627: 50 20 f6 03 9b bd 01     ra = 1014, jump @13687
      :                          @6816 [@dyn 507]
 85634: 82 19 48                 a2 = u64 [sp + 0x48]
 85637: c8 65 05                 s0 = s0 + s1
 85640: 33 07 b8 22 04           a0 = 0x422b8
 85645: c9 57 07                 a0 = a0 - s0
 85648: 7b 19 30                 u64 [sp + 0x30] = a2
 85651: 01                       fallthrough
      :                          @6817
 85652: 49 07 ff                 u64 [a0 + 0] = 0xffffffffffffffff
 85655: 33 07 c0 22 03           a0 = 0x322c0
 85660: 33 06 00 00 01           s1 = 0x10000
 85665: c8 67 07                 a0 = a0 + s1
 85668: 01                       fallthrough
      :                          @6818
 85669: 82 7a                    a3 = u64 [a0]
 85671: c8 9a 08                 a1 = a3 + a2
 85674: ac a8 67 02              jump @6869 if a1 <u a3
      :                          @6819
 85678: 95 8b 01                 a4 = a1 + 0x1
 85681: 88 bc 01                 a5 = a4 <u 0x1
 85684: d8 b6 0b                 a4 = s1 <u a4
 85687: d4 cb 0b                 a4 = a4 | a5
 85690: 52 0b 57 02              jump @6869 if a4 != 0
      :                          @6820
 85694: 82 7b                    a4 = u64 [a0]
 85696: ab ab e5                 jump @6818 if a4 != a3
      :                          @6821
 85699: 7b 78                    u64 [a0] = a1
 85701: 33 0c                    a5 = 0
 85703: 33 07 c0 22 04           a0 = 0x422c0
 85708: c9 87 07                 a0 = a0 - a1
 85711: 7b 17 40                 u64 [sp + 0x40] = a0
 85714: 33 08                    a1 = 0
 85716: 50 20 f8 03 42 bd 01     ra = 1016, jump @13687
      :                          @6822 [@dyn 508]
 85723: 82 1a 48                 a3 = u64 [sp + 0x48]
 85726: 33 05                    s0 = 0
 85728: 82 16 60                 s1 = u64 [sp + 0x60]
 85731: 28 0b                    jump @6824
      :                          @6823
 85733: 95 55 01                 s0 = s0 + 0x1
 85736: 95 66 08                 s1 = s1 + 0x8
 85739: aa 5a 37                 jump @6827 if a3 == s0
      :                          @6824
 85742: 82 67                    a0 = u64 [s1]
 85744: 52 07 f5                 jump @6823 if a0 != 0
      :                          @6825
 85747: 82 17 38                 a0 = u64 [sp + 0x38]
 85750: 7b 17 18                 u64 [sp + 0x18] = a0
 85753: 7b 1a 10                 u64 [sp + 0x10] = a3
 85756: 82 17 40                 a0 = u64 [sp + 0x40]
 85759: 7b 17 08                 u64 [sp + 0x8] = a0
 85762: 95 18 68                 a1 = sp + 0x68
 85765: 82 17 30                 a0 = u64 [sp + 0x30]
 85768: 7b 17                    u64 [sp] = a0
 85770: 64 57                    a0 = s0
 85772: 82 19 60                 a2 = u64 [sp + 0x60]
 85775: 82 1b 50                 a4 = u64 [sp + 0x50]
 85778: 64 ac                    a5 = a3
 85780: 82 14 58                 t2 = u64 [sp + 0x58]
 85783: 50 20 fa 03 fe 01        ra = 1018, jump @6873
      :                          @6826 [@dyn 509]
 85789: 82 1a 48                 a3 = u64 [sp + 0x48]
 85792: 28 c5                    jump @6823
      :                          @6827
 85794: 82 10 40                 ra = u64 [sp + 0x40]
 85797: 33 0b                    a4 = 0
 85799: c8 a0 09                 a2 = ra + a3
 85802: 28 17                    jump @6829
      :                          @6828
 85804: 49 11 50 08              u64 [sp + 80] = 0x8
 85808: 33 00 01                 ra = 0x1
 85811: 49 11 60 08              u64 [sp + 96] = 0x8
 85815: 49 11 58 08              u64 [sp + 88] = 0x8
 85819: 33 0b                    a4 = 0
 85821: c8 a0 09                 a2 = ra + a3
 85824: 01                       fallthrough
      :                          @6829
 85825: aa ba cd 00              jump @6843 if a3 == a4
      :                          @6830
 85829: 64 b8                    a1 = a4
 85831: c8 b0 07                 a0 = ra + a4
 85834: 7c 77                    a0 = u8 [a0]
 85836: 95 bb 01                 a4 = a4 + 0x1
 85839: 51 07 f2                 jump @6829 if a0 == 0
      :                          @6831
 85842: 7b 19 20                 u64 [sp + 0x20] = a2
 85845: 7b 1b 38                 u64 [sp + 0x38] = a4
 85848: c8 0b 0b                 a4 = a4 + ra
 85851: 7b 1b 30                 u64 [sp + 0x30] = a4
 85854: 33 03 c0 22 03           t1 = 0x322c0
 85859: 33 02 00 00 01           t0 = 0x10000
 85864: c8 23 04                 t2 = t1 + t0
 85867: 01                       fallthrough
      :                          @6832
 85868: 82 4b                    a4 = u64 [t2]
 85870: 95 bc 20                 a5 = a4 + 0x20
 85873: ac bc a2 01              jump @6871 if a5 <u a4
      :                          @6833
 85877: 95 c7 08                 a0 = a5 + 0x8
 85880: d8 c7 09                 a2 = a0 <u a5
 85883: d8 72 07                 a0 = t0 <u a0
 85886: d4 97 07                 a0 = a0 | a2
 85889: 52 07 92 01              jump @6871 if a0 != 0
      :                          @6834
 85893: c9 c3 07                 a0 = t1 - a5
 85896: c8 27 07                 a0 = a0 + t0
 85899: 84 79 07                 a2 = a0 & 0x7
 85902: c8 9c 0c                 a5 = a5 + a2
 85905: 01                       fallthrough
      :                          @6835
 85906: 82 45                    s0 = u64 [t2]
 85908: ab b5 d8                 jump @6832 if s0 != a4
      :                          @6836
 85911: 7b 4c                    u64 [t2] = a5
 85913: c9 97 02                 t0 = a0 - a2
 85916: 7b 28                    u64 [t0] = a1
 85918: 49 11 70 04              u64 [sp + 112] = 0x4
 85922: 7b 12 78                 u64 [sp + 0x78] = t0
 85925: 33 08 01                 a1 = 0x1
 85928: 7b 18 80 00              u64 [sp + 0x80] = a1
 85932: 82 17 20                 a0 = u64 [sp + 0x20]
 85935: 82 1c 38                 a5 = u64 [sp + 0x38]
 85938: 82 1b 30                 a4 = u64 [sp + 0x30]
 85941: 64 b6                    s1 = a4
 85943: 01                       fallthrough
      :                          @6837
 85944: aa 76 72                 jump @6845 if s1 == a0
      :                          @6838
 85947: 64 c5                    s0 = a5
 85949: 7c 69                    a2 = u8 [s1]
 85951: 95 6b 01                 a4 = s1 + 0x1
 85954: 95 cc 01                 a5 = a5 + 0x1
 85957: 64 b6                    s1 = a4
 85959: 51 09 f1                 jump @6837 if a2 == 0
      :                          @6839
 85962: 82 19 70                 a2 = u64 [sp + 0x70]
 85965: aa 98 16                 jump @6841 if a1 == a2
      :                          @6840
 85968: 97 89 03                 a2 = a1 << 0x3
 85971: c8 29 09                 a2 = a2 + t0
 85974: 7b 95                    u64 [a2] = s0
 85976: 95 88 01                 a1 = a1 + 0x1
 85979: 7b 18 80 00              u64 [sp + 0x80] = a1
 85983: 64 b6                    s1 = a4
 85985: 28 d7                    jump @6837
      :                          @6841
 85987: 95 17 70                 a0 = sp + 0x70
 85990: 7b 10 40                 u64 [sp + 0x40] = ra
 85993: 7b 1c 38                 u64 [sp + 0x38] = a5
 85996: 7b 1b 30                 u64 [sp + 0x30] = a4
 85999: 64 86                    s1 = a1
 86001: 50 20 fc 03 ca 05 ff     ra = 1020, jump @1641
      :                          @6842 [@dyn 510]
 86008: 64 68                    a1 = s1
 86010: 82 1b 30                 a4 = u64 [sp + 0x30]
 86013: 82 1c 38                 a5 = u64 [sp + 0x38]
 86016: 82 17 20                 a0 = u64 [sp + 0x20]
 86019: 82 10 40                 ra = u64 [sp + 0x40]
 86022: 82 1a 48                 a3 = u64 [sp + 0x48]
 86025: 82 12 78                 t0 = u64 [sp + 0x78]
 86028: 28 c4                    jump @6840
      :                          @6843
 86030: 82 18 28                 a1 = u64 [sp + 0x28]
 86033: 49 08                    u64 [a1 + 0] = 0
 86035: 49 18 08 08              u64 [a1 + 8] = 0x8
 86039: 49 18 10                 u64 [a1 + 16] = 0
 86042: 33 07 00 00 ff           a0 = 0xffffffffffff0000
 86047: 95 a8 ff ff fe           a1 = a3 + 0xfffffffffffeffff
 86052: ae 78 29                 jump @6846 if a1 >=u a0
      :                          @6844
 86055: 28 d8 00                 jump @6868
      :                          @6845
 86058: 82 17 80 00              a0 = u64 [sp + 0x80]
 86062: 82 18 78                 a1 = u64 [sp + 0x78]
 86065: 82 19 70                 a2 = u64 [sp + 0x70]
 86068: 82 1b 28                 a4 = u64 [sp + 0x28]
 86071: 7b b7 10                 u64 [a4 + 0x10] = a0
 86074: 7b b8 08                 u64 [a4 + 0x8] = a1
 86077: 7b b9                    u64 [a4] = a2
 86079: 33 07 00 00 ff           a0 = 0xffffffffffff0000
 86084: 95 a8 ff ff fe           a1 = a3 + 0xfffffffffffeffff
 86089: ac 78 b6 00              jump @6868 if a1 <u a0
      :                          @6846
 86093: 33 07 c0 22 03           a0 = 0x322c0
 86098: 95 77 00 00 01           a0 = a0 + 0x10000
 86103: 01                       fallthrough
      :                          @6847
 86104: 82 78                    a1 = u64 [a0]
 86106: c9 87 09                 a2 = a0 - a1
 86109: ab 09 11                 jump @6851 if a2 != ra
      :                          @6848
 86112: c9 a8 09                 a2 = a1 - a3
 86115: 01                       fallthrough
      :                          @6849
 86116: 82 7c                    a5 = u64 [a0]
 86118: ab 8c f2                 jump @6847 if a5 != a1
      :                          @6850
 86121: 7b 79                    u64 [a0] = a2
 86123: 33 0b                    a4 = 0
 86125: 01                       fallthrough
      :                          @6851
 86126: 51 0a 91 00              jump @6868 if a3 == 0
      :                          @6852
 86130: 33 07 00 20              a0 = 0x2000
 86134: ac a7 89 00              jump @6868 if a0 <u a3
      :                          @6853
 86138: 97 a7 03                 a0 = a3 << 0x3
 86141: 33 08 c0 22 03           a1 = 0x322c0
 86146: 95 88 00 00 01           a1 = a1 + 0x10000
 86151: 01                       fallthrough
      :                          @6854
 86152: 82 89                    a2 = u64 [a1]
 86154: c9 98 0a                 a3 = a1 - a2
 86157: 82 1b 58                 a4 = u64 [sp + 0x58]
 86160: ab ba 1c                 jump @6858 if a3 != a4
      :                          @6855
 86163: c9 79 0a                 a3 = a2 - a0
 86166: 01                       fallthrough
      :                          @6856
 86167: 82 8b                    a4 = u64 [a1]
 86169: ab 9b ef                 jump @6854 if a4 != a2
      :                          @6857
 86172: 7b 8a                    u64 [a1] = a3
 86174: 33 0c                    a5 = 0
 86176: 33 08 c0 22 03           a1 = 0x322c0
 86181: 95 88 00 00 01           a1 = a1 + 0x10000
 86186: 28 0d                    jump @6859
      :                          @6858
 86188: 33 08 c0 22 03           a1 = 0x322c0
 86193: 95 88 00 00 01           a1 = a1 + 0x10000
 86198: 01                       fallthrough
      :                          @6859
 86199: 82 89                    a2 = u64 [a1]
 86201: c9 98 0a                 a3 = a1 - a2
 86204: 82 1b 50                 a4 = u64 [sp + 0x50]
 86207: ab ba 1c                 jump @6863 if a3 != a4
      :                          @6860
 86210: c9 79 0a                 a3 = a2 - a0
 86213: 01                       fallthrough
      :                          @6861
 86214: 82 8b                    a4 = u64 [a1]
 86216: ab 9b ef                 jump @6859 if a4 != a2
      :                          @6862
 86219: 7b 8a                    u64 [a1] = a3
 86221: 33 0c                    a5 = 0
 86223: 33 08 c0 22 03           a1 = 0x322c0
 86228: 95 88 00 00 01           a1 = a1 + 0x10000
 86233: 28 0d                    jump @6864
      :                          @6863
 86235: 33 08 c0 22 03           a1 = 0x322c0
 86240: 95 88 00 00 01           a1 = a1 + 0x10000
 86245: 01                       fallthrough
      :                          @6864
 86246: 82 89                    a2 = u64 [a1]
 86248: c9 98 0a                 a3 = a1 - a2
 86251: 82 1b 60                 a4 = u64 [sp + 0x60]
 86254: ab ba 11                 jump @6868 if a3 != a4
      :                          @6865
 86257: c9 79 0a                 a3 = a2 - a0
 86260: 01                       fallthrough
      :                          @6866
 86261: 82 8b                    a4 = u64 [a1]
 86263: ab 9b ef                 jump @6864 if a4 != a2
      :                          @6867
 86266: 7b 8a                    u64 [a1] = a3
 86268: 33 0c                    a5 = 0
 86270: 01                       fallthrough
      :                          @6868
 86271: 82 10 98 00              ra = u64 [sp + 0x98]
 86275: 82 15 90 00              s0 = u64 [sp + 0x90]
 86279: 82 16 88 00              s1 = u64 [sp + 0x88]
 86283: 95 11 a0 00              sp = sp + 0xa0
 86287: 32 00                    ret
      :                          @6869
 86289: 00                       trap
      :                          @6870
 86290: 00                       trap
      :                          @6871
 86291: 00                       trap
      :                          @6872
 86292: 00                       trap
      :                          @6873
 86293: 95 11 38 ff              sp = sp + 0xffffffffffffff38
 86297: 7b 10 c0 00              u64 [sp + 0xc0] = ra
 86301: 7b 15 b8 00              u64 [sp + 0xb8] = s0
 86305: 7b 16 b0 00              u64 [sp + 0xb0] = s1
 86309: 82 86                    s1 = u64 [a1]
 86311: 7b 14 78                 u64 [sp + 0x78] = t2
 86314: 64 72                    t0 = a0
 86316: 95 64 01                 t2 = s1 + 0x1
 86319: 7b 18 70                 u64 [sp + 0x70] = a1
 86322: 7b 84                    u64 [a1] = t2
 86324: ae a7 94 01              jump @6899 if a0 >=u a3
      :                          @6874
 86328: 97 23 03                 t1 = t0 << 0x3
 86331: c8 39 07                 a0 = a2 + t1
 86334: 7b 17 20                 u64 [sp + 0x20] = a0
 86337: 7b 74                    u64 [a0] = t2
 86339: ae c2 86 01              jump @6900 if t0 >=u a5
      :                          @6875
 86343: 82 15 e0 00              s0 = u64 [sp + 0xe0]
 86347: 82 58 10                 a1 = u64 [s0 + 0x10]
 86350: c8 3b 07                 a0 = a4 + t1
 86353: 7b 17 88 00              u64 [sp + 0x88] = a0
 86357: 7b 74                    u64 [a0] = t2
 86359: ae 82 73 01              jump @6901 if t0 >=u a1
      :                          @6876
 86363: 7b 15 68                 u64 [sp + 0x68] = s0
 86366: 82 55 08                 s0 = u64 [s0 + 0x8]
 86369: 96 28 18                 a1 = t0 * 0x18
 86372: c8 58 08                 a1 = a1 + s0
 86375: 82 85 10                 s0 = u64 [a1 + 0x10]
 86378: 51 05 4a 01              jump @6896 if s0 == 0
      :                          @6877
 86382: 82 17 d8 00              a0 = u64 [sp + 0xd8]
 86386: 7b 17 80 00              u64 [sp + 0x80] = a0
 86390: 82 17 d0 00              a0 = u64 [sp + 0xd0]
 86394: 82 10 c8 00              ra = u64 [sp + 0xc8]
 86398: 82 86 08                 s1 = u64 [a1 + 0x8]
 86401: 7b 12 58                 u64 [sp + 0x58] = t0
 86404: 7b 10 50                 u64 [sp + 0x50] = ra
 86407: ae 02 44 01              jump @6902 if t0 >=u ra
      :                          @6878
 86411: 49 21 98 00              u64 [sp + 152] = 0
 86415: 82 18 78                 a1 = u64 [sp + 0x78]
 86418: c8 38 08                 a1 = a1 + t1
 86421: 7b 18 a0 00              u64 [sp + 0xa0] = a1
 86425: c8 27 08                 a1 = a0 + t0
 86428: 7b 18 28                 u64 [sp + 0x28] = a1
 86431: 97 55 03                 s0 = s0 << 0x3
 86434: 64 73                    t1 = a0
 86436: 7b 1a 48                 u64 [sp + 0x48] = a3
 86439: 7b 1c 60                 u64 [sp + 0x60] = a5
 86442: 7b 19 40                 u64 [sp + 0x40] = a2
 86445: 7b 17 38                 u64 [sp + 0x38] = a0
 86448: 7b 1b 30                 u64 [sp + 0x30] = a4
 86451: 28 1d                    jump @6882
      :                          @6879
 86453: 82 16 a8 00              s1 = u64 [sp + 0xa8]
 86457: 95 55 f8                 s0 = s0 + 0xfffffffffffffff8
 86460: 95 66 08                 s1 = s1 + 0x8
 86463: 52 05 11                 jump @6882 if s0 != 0
      :                          @6880
 86466: 28 f2 00                 jump @6896
      :                          @6881
 86469: e6 84 04                 t2 = minu(t2, a1)
 86472: 82 17 88 00              a0 = u64 [sp + 0x88]
 86476: 7b 74                    u64 [a0] = t2
 86478: 28 e7                    jump @6879
      :                          @6882
 86480: 7b 16 a8 00              u64 [sp + 0xa8] = s1
 86484: 82 66                    s1 = u64 [s1]
 86486: ae a6 42 01              jump @6907 if s1 >=u a3
      :                          @6883
 86490: 97 67 03                 a0 = s1 << 0x3
 86493: c8 79 08                 a1 = a2 + a0
 86496: 82 88                    a1 = u64 [a1]
 86498: 51 08 0e                 jump @6886 if a1 == 0
      :                          @6884
 86501: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 86505: 82 77                    a0 = u64 [a0]
 86507: ab 76 da                 jump @6881 if s1 != a0
      :                          @6885
 86510: 28 c7                    jump @6879
      :                          @6886
 86512: ae 06 29 01              jump @6908 if s1 >=u ra
      :                          @6887
 86516: 82 14 78                 t2 = u64 [sp + 0x78]
 86519: 7b 17 90 00              u64 [sp + 0x90] = a0
 86523: c8 47 07                 a0 = a0 + t2
 86526: 7b 72                    u64 [a0] = t0
 86528: 82 17 68                 a0 = u64 [sp + 0x68]
 86531: 7b 17 18                 u64 [sp + 0x18] = a0
 86534: 82 17 80 00              a0 = u64 [sp + 0x80]
 86538: 7b 17 10                 u64 [sp + 0x10] = a0
 86541: 7b 13 08                 u64 [sp + 0x8] = t1
 86544: 7b 10                    u64 [sp] = ra
 86546: 64 67                    a0 = s1
 86548: 82 18 70                 a1 = u64 [sp + 0x70]
 86551: 50 20 fe 03 fe fe        ra = 1022, jump @6873
      :                          @6888 [@dyn 511]
 86557: 82 1c 60                 a5 = u64 [sp + 0x60]
 86560: ae c6 a6 00              jump @6897 if s1 >=u a5
      :                          @6889
 86564: 82 19 88 00              a2 = u64 [sp + 0x88]
 86568: 82 92                    t0 = u64 [a2]
 86570: 82 18 90 00              a1 = u64 [sp + 0x90]
 86574: 82 17 30                 a0 = u64 [sp + 0x30]
 86577: c8 78 08                 a1 = a1 + a0
 86580: 82 8a                    a3 = u64 [a1]
 86582: 82 1b a0 00              a4 = u64 [sp + 0xa0]
 86586: 82 b6                    s1 = u64 [a4]
 86588: 82 1b 98 00              a4 = u64 [sp + 0x98]
 86592: 83 bb 01                 i32 a4 = a4 + 0x1
 86595: e6 a2 04                 t2 = minu(t0, a3)
 86598: 88 6a ff                 a3 = s1 <u 0xffffffffffffffff
 86601: 7b 1b 98 00              u64 [sp + 0x98] = a4
 86605: 89 bb 02                 a4 = a4 <s 0x2
 86608: d4 ba 0a                 a3 = a3 | a4
 86611: 7b 94                    u64 [a2] = t2
 86613: 64 7b                    a4 = a0
 86615: 52 0a 1f                 jump @6892 if a3 != 0
      :                          @6890
 86618: 82 12 58                 t0 = u64 [sp + 0x58]
 86621: 82 1a 48                 a3 = u64 [sp + 0x48]
 86624: 82 19 40                 a2 = u64 [sp + 0x40]
 86627: 82 10 50                 ra = u64 [sp + 0x50]
 86630: 82 17 80 00              a0 = u64 [sp + 0x80]
 86634: 82 13 38                 t1 = u64 [sp + 0x38]
 86637: 82 16 a8 00              s1 = u64 [sp + 0xa8]
 86641: ac 72 31                 jump @6895 if t0 <u a0
      :                          @6891
 86644: 28 53                    jump @6898
      :                          @6892
 86646: 82 12 58                 t0 = u64 [sp + 0x58]
 86649: 82 1a 48                 a3 = u64 [sp + 0x48]
 86652: 82 19 40                 a2 = u64 [sp + 0x40]
 86655: 82 10 50                 ra = u64 [sp + 0x50]
 86658: 82 13 38                 t1 = u64 [sp + 0x38]
 86661: 33 07 ff                 a0 = 0xffffffffffffffff
 86664: aa 76 2d ff              jump @6879 if s1 == a0
      :                          @6893
 86668: 82 88                    a1 = u64 [a1]
 86670: 82 17 20                 a0 = u64 [sp + 0x20]
 86673: 82 77                    a0 = u64 [a0]
 86675: ac 78 22 ff              jump @6879 if a1 <u a0
      :                          @6894
 86679: 82 17 80 00              a0 = u64 [sp + 0x80]
 86683: 82 16 a8 00              s1 = u64 [sp + 0xa8]
 86687: ae 72 28                 jump @6898 if t0 >=u a0
      :                          @6895
 86690: 82 17 28                 a0 = u64 [sp + 0x28]
 86693: 33 08 01                 a1 = 0x1
 86696: 78 78                    u8 [a0] = a1
 86698: 95 55 f8                 s0 = s0 + 0xfffffffffffffff8
 86701: 95 66 08                 s1 = s1 + 0x8
 86704: 52 05 20 ff              jump @6882 if s0 != 0
      :                          @6896
 86708: 82 10 c0 00              ra = u64 [sp + 0xc0]
 86712: 82 15 b8 00              s0 = u64 [sp + 0xb8]
 86716: 82 16 b0 00              s1 = u64 [sp + 0xb0]
 86720: 95 11 c8 00              sp = sp + 0xc8
 86724: 32 00                    ret
      :                          @6897
 86726: 00                       trap
      :                          @6898
 86727: 00                       trap
      :                          @6899
 86728: 00                       trap
      :                          @6900
 86729: 00                       trap
      :                          @6901
 86730: 00                       trap
      :                          @6902
 86731: 82 66                    s1 = u64 [s1]
 86733: ae a6 4b                 jump @6907 if s1 >=u a3
      :                          @6903
 86736: 64 78                    a1 = a0
 86738: 97 65 03                 s0 = s1 << 0x3
 86741: c8 59 07                 a0 = a2 + s0
 86744: 82 77                    a0 = u64 [a0]
 86746: 52 07 40                 jump @6909 if a0 != 0
      :                          @6904
 86749: ae 06 3c                 jump @6908 if s1 >=u ra
      :                          @6905
 86752: 82 14 78                 t2 = u64 [sp + 0x78]
 86755: c8 54 07                 a0 = t2 + s0
 86758: 7b 72                    u64 [a0] = t0
 86760: 82 17 68                 a0 = u64 [sp + 0x68]
 86763: 7b 17 18                 u64 [sp + 0x18] = a0
 86766: 82 17 80 00              a0 = u64 [sp + 0x80]
 86770: 7b 17 10                 u64 [sp + 0x10] = a0
 86773: 7b 18 08                 u64 [sp + 0x8] = a1
 86776: 7b 10                    u64 [sp] = ra
 86778: 64 67                    a0 = s1
 86780: 82 18 70                 a1 = u64 [sp + 0x70]
 86783: 64 b6                    s1 = a4
 86785: 50 20 00 04 14 fe        ra = 1024, jump @6873
      :                          @6906 [@dyn 512]
 86791: 82 19 88 00              a2 = u64 [sp + 0x88]
 86795: 82 97                    a0 = u64 [a2]
 86797: c8 65 05                 s0 = s0 + s1
 86800: 82 58                    a1 = u64 [s0]
 86802: e6 87 07                 a0 = minu(a0, a1)
 86805: 7b 97                    u64 [a2] = a0
 86807: 00                       trap
      :                          @6907
 86808: 00                       trap
      :                          @6908
 86809: 00                       trap
      :                          @6909
 86810: 00                       trap
      :                          @6910
 86811: 95 11 70 ff              sp = sp + 0xffffffffffffff70
 86815: 7b 10 88 00              u64 [sp + 0x88] = ra
 86819: 7b 15 80 00              u64 [sp + 0x80] = s0
 86823: 7b 16 78                 u64 [sp + 0x78] = s1
 86826: 7b 18 28                 u64 [sp + 0x28] = a1
 86829: 82 89 10                 a2 = u64 [a1 + 0x10]
 86832: 49 11 58                 u64 [sp + 88] = 0
 86835: 51 09 35 01              jump @6933 if a2 == 0
      :                          @6911
 86839: 7b 17 18                 u64 [sp + 0x18] = a0
 86842: 98 97 3c                 a0 = a2 >> 0x3c
 86845: 52 07 4a 02              jump @6959 if a0 != 0
      :                          @6912
 86849: 88 77 01                 a0 = a0 <u 0x1
 86852: 7b 19 50                 u64 [sp + 0x50] = a2
 86855: 97 99 03                 a2 = a2 << 0x3
 86858: 97 72 03                 t0 = a0 << 0x3
 86861: 33 04 c0 22 03           t2 = 0x322c0
 86866: 33 03 00 00 01           t1 = 0x10000
 86871: c8 34 0a                 a3 = t2 + t1
 86874: 01                       fallthrough
      :                          @6913
 86875: 82 ab                    a4 = u64 [a3]
 86877: c8 9b 0c                 a5 = a4 + a2
 86880: ac bc 25 02              jump @6957 if a5 <u a4
      :                          @6914
 86884: c8 2c 07                 a0 = a5 + t0
 86887: d8 c7 06                 s1 = a0 <u a5
 86890: d8 73 07                 a0 = t1 <u a0
 86893: d4 67 07                 a0 = a0 | s1
 86896: 52 07 15 02              jump @6957 if a0 != 0
      :                          @6915
 86900: c9 c4 06                 s1 = t2 - a5
 86903: c8 36 08                 a1 = s1 + t1
 86906: 84 86 07                 s1 = a1 & 0x7
 86909: c8 6c 0c                 a5 = a5 + s1
 86912: 01                       fallthrough
      :                          @6916
 86913: 82 a7                    a0 = u64 [a3]
 86915: ab b7 d8                 jump @6913 if a0 != a4
      :                          @6917
 86918: 7b ac                    u64 [a3] = a5
 86920: 33 05                    s0 = 0
 86922: c9 68 07                 a0 = a1 - s1
 86925: 7b 17 40                 u64 [sp + 0x40] = a0
 86928: 33 08                    a1 = 0
 86930: 7b 19 30                 u64 [sp + 0x30] = a2
 86933: 50 20 02 04 81 b8 01     ra = 1026, jump @13687
      :                          @6918 [@dyn 513]
 86940: 82 19 30                 a2 = u64 [sp + 0x30]
 86943: 33 03 c0 22 03           t1 = 0x322c0
 86948: 33 02 00 00 01           t0 = 0x10000
 86953: c8 23 07                 a0 = t1 + t0
 86956: 01                       fallthrough
      :                          @6919
 86957: 82 7a                    a3 = u64 [a0]
 86959: c8 9a 0b                 a4 = a3 + a2
 86962: ac ab d3 01              jump @6957 if a4 <u a3
      :                          @6920
 86966: 95 b8 08                 a1 = a4 + 0x8
 86969: d8 b8 0c                 a5 = a1 <u a4
 86972: d8 82 08                 a1 = t0 <u a1
 86975: d4 c8 08                 a1 = a1 | a5
 86978: 52 08 c3 01              jump @6957 if a1 != 0
      :                          @6921
 86982: c9 b3 08                 a1 = t1 - a4
 86985: c8 28 08                 a1 = a1 + t0
 86988: 84 8c 07                 a5 = a1 & 0x7
 86991: c8 cb 0b                 a4 = a4 + a5
 86994: 01                       fallthrough
      :                          @6922
 86995: 82 75                    s0 = u64 [a0]
 86997: ab a5 d8                 jump @6919 if s0 != a3
      :                          @6923
 87000: 7b 7b                    u64 [a0] = a4
 87002: 33 06                    s1 = 0
 87004: c9 c8 07                 a0 = a1 - a5
 87007: 7b 17 38                 u64 [sp + 0x38] = a0
 87010: 33 08                    a1 = 0
 87012: 50 20 04 04 32 b8 01     ra = 1028, jump @13687
      :                          @6924 [@dyn 514]
 87019: 82 13 30                 t1 = u64 [sp + 0x30]
 87022: 33 07 c0 22 03           a0 = 0x322c0
 87027: 33 02 00 00 01           t0 = 0x10000
 87032: c8 27 09                 a2 = a0 + t0
 87035: 01                       fallthrough
      :                          @6925
 87036: 82 96                    s1 = u64 [a2]
 87038: c8 36 0a                 a3 = s1 + t1
 87041: ac 6a 85 01              jump @6958 if a3 <u s1
      :                          @6926
 87045: 95 ab 08                 a4 = a3 + 0x8
 87048: d8 ab 0c                 a5 = a4 <u a3
 87051: d8 b2 0b                 a4 = t0 <u a4
 87054: d4 cb 0b                 a4 = a4 | a5
 87057: 52 0b 75 01              jump @6958 if a4 != 0
      :                          @6927
 87061: c9 a7 0b                 a4 = a0 - a3
 87064: c8 2b 0b                 a4 = a4 + t0
 87067: 84 b5 07                 s0 = a4 & 0x7
 87070: c8 5a 0a                 a3 = a3 + s0
 87073: 01                       fallthrough
      :                          @6928
 87074: 82 9c                    a5 = u64 [a2]
 87076: ab 6c d8                 jump @6925 if a5 != s1
      :                          @6929
 87079: 7b 9a                    u64 [a2] = a3
 87081: 33 08                    a1 = 0
 87083: 01                       fallthrough
      :                          @6930
 87084: c9 5b 0c                 a5 = a4 - s0
 87087: 82 1a 50                 a3 = u64 [sp + 0x50]
 87090: 7b 1c 48                 u64 [sp + 0x48] = a5
 87093: 53 1a 02 4a              jump @6934 if a3 <u 2
      :                          @6931
 87097: 95 39 f8                 a2 = t1 + 0xfffffffffffffff8
 87100: 33 08 ff 00              a1 = 0xff
 87104: 64 c7                    a0 = a5
 87106: 50 20 06 04 d4 b7 01     ra = 1030, jump @13687
      :                          @6932 [@dyn 515]
 87113: 82 1c 48                 a5 = u64 [sp + 0x48]
 87116: 82 1a 50                 a3 = u64 [sp + 0x50]
 87119: 82 13 30                 t1 = u64 [sp + 0x30]
 87122: c8 65 05                 s0 = s0 + s1
 87125: 33 07 c0 22 04           a0 = 0x422c0
 87130: c9 57 07                 a0 = a0 - s0
 87133: 33 08 ff                 a1 = 0xffffffffffffffff
 87136: 7b 78 f8                 u64 [a0 + 0xfffffffffffffff8] = a1
 87139: 7b 1a 20                 u64 [sp + 0x20] = a3
 87142: 28 21                    jump @6935
      :                          @6933
 87144: 49 11 60                 u64 [sp + 96] = 0
 87147: 33 08 08                 a1 = 0x8
 87150: 7b 18 68                 u64 [sp + 0x68] = a1
 87153: 49 11 70                 u64 [sp + 112] = 0
 87156: 49 17 10                 u64 [a0 + 16] = 0
 87159: 7b 78 08                 u64 [a0 + 0x8] = a1
 87162: 49 07                    u64 [a0 + 0] = 0
 87164: 28 f8 00                 jump @6956
      :                          @6934
 87167: 49 0c ff                 u64 [a5 + 0] = 0xffffffffffffffff
 87170: 49 11 20 01              u64 [sp + 32] = 0x1
 87174: 01                       fallthrough
      :                          @6935
 87175: 33 06                    s1 = 0
 87177: 49 11 60                 u64 [sp + 96] = 0
 87180: 49 11 68 08              u64 [sp + 104] = 0x8
 87184: 49 11 70                 u64 [sp + 112] = 0
 87187: 82 15 40                 s0 = u64 [sp + 0x40]
 87190: 28 0b                    jump @6937
      :                          @6936
 87192: 95 66 01                 s1 = s1 + 0x1
 87195: 95 55 08                 s0 = s0 + 0x8
 87198: aa 6a 3b                 jump @6940 if a3 == s1
      :                          @6937
 87201: 82 57                    a0 = u64 [s0]
 87203: 52 07 f5                 jump @6936 if a0 != 0
      :                          @6938
 87206: 95 17 60                 a0 = sp + 0x60
 87209: 7b 17 10                 u64 [sp + 0x10] = a0
 87212: 82 17 28                 a0 = u64 [sp + 0x28]
 87215: 7b 17 08                 u64 [sp + 0x8] = a0
 87218: 95 18 58                 a1 = sp + 0x58
 87221: 82 17 20                 a0 = u64 [sp + 0x20]
 87224: 7b 17                    u64 [sp] = a0
 87226: 64 67                    a0 = s1
 87228: 82 19 40                 a2 = u64 [sp + 0x40]
 87231: 82 1b 38                 a4 = u64 [sp + 0x38]
 87234: 82 1c 50                 a5 = u64 [sp + 0x50]
 87237: 82 14 48                 t2 = u64 [sp + 0x48]
 87240: 50 20 08 04 c0 00        ra = 1032, jump @6960
      :                          @6939 [@dyn 516]
 87246: 82 1c 48                 a5 = u64 [sp + 0x48]
 87249: 82 1a 50                 a3 = u64 [sp + 0x50]
 87252: 82 13 30                 t1 = u64 [sp + 0x30]
 87255: 28 c1                    jump @6936
      :                          @6940
 87257: 82 17 70                 a0 = u64 [sp + 0x70]
 87260: 82 18 68                 a1 = u64 [sp + 0x68]
 87263: 82 19 60                 a2 = u64 [sp + 0x60]
 87266: 82 1b 18                 a4 = u64 [sp + 0x18]
 87269: 7b b7 10                 u64 [a4 + 0x10] = a0
 87272: 7b b8 08                 u64 [a4 + 0x8] = a1
 87275: 33 07 00 20              a0 = 0x2000
 87279: 7b b9                    u64 [a4] = a2
 87281: ac a7 83 00              jump @6956 if a0 <u a3
      :                          @6941
 87285: 33 07 c0 22 03           a0 = 0x322c0
 87290: 95 77 00 00 01           a0 = a0 + 0x10000
 87295: 01                       fallthrough
      :                          @6942
 87296: 82 78                    a1 = u64 [a0]
 87298: c9 87 09                 a2 = a0 - a1
 87301: ab c9 1c                 jump @6946 if a2 != a5
      :                          @6943
 87304: c9 38 09                 a2 = a1 - t1
 87307: 01                       fallthrough
      :                          @6944
 87308: 82 7a                    a3 = u64 [a0]
 87310: ab 8a f2                 jump @6942 if a3 != a1
      :                          @6945
 87313: 7b 79                    u64 [a0] = a2
 87315: 33 0b                    a4 = 0
 87317: 33 07 c0 22 03           a0 = 0x322c0
 87322: 95 77 00 00 01           a0 = a0 + 0x10000
 87327: 28 0d                    jump @6947
      :                          @6946
 87329: 33 07 c0 22 03           a0 = 0x322c0
 87334: 95 77 00 00 01           a0 = a0 + 0x10000
 87339: 01                       fallthrough
      :                          @6947
 87340: 82 78                    a1 = u64 [a0]
 87342: c9 87 09                 a2 = a0 - a1
 87345: 82 1a 38                 a3 = u64 [sp + 0x38]
 87348: ab a9 1c                 jump @6951 if a2 != a3
      :                          @6948
 87351: c9 38 09                 a2 = a1 - t1
 87354: 01                       fallthrough
      :                          @6949
 87355: 82 7a                    a3 = u64 [a0]
 87357: ab 8a ef                 jump @6947 if a3 != a1
      :                          @6950
 87360: 7b 79                    u64 [a0] = a2
 87362: 33 0b                    a4 = 0
 87364: 33 07 c0 22 03           a0 = 0x322c0
 87369: 95 77 00 00 01           a0 = a0 + 0x10000
 87374: 28 0d                    jump @6952
      :                          @6951
 87376: 33 07 c0 22 03           a0 = 0x322c0
 87381: 95 77 00 00 01           a0 = a0 + 0x10000
 87386: 01                       fallthrough
      :                          @6952
 87387: 82 78                    a1 = u64 [a0]
 87389: c9 87 09                 a2 = a0 - a1
 87392: 82 1a 40                 a3 = u64 [sp + 0x40]
 87395: ab a9 11                 jump @6956 if a2 != a3
      :                          @6953
 87398: c9 38 09                 a2 = a1 - t1
 87401: 01                       fallthrough
      :                          @6954
 87402: 82 7a                    a3 = u64 [a0]
 87404: ab 8a ef                 jump @6952 if a3 != a1
      :                          @6955
 87407: 7b 79                    u64 [a0] = a2
 87409: 33 0b                    a4 = 0
 87411: 01                       fallthrough
      :                          @6956
 87412: 82 10 88 00              ra = u64 [sp + 0x88]
 87416: 82 15 80 00              s0 = u64 [sp + 0x80]
 87420: 82 16 78                 s1 = u64 [sp + 0x78]
 87423: 95 11 90 00              sp = sp + 0x90
 87427: 32 00                    ret
      :                          @6957
 87429: 00                       trap
      :                          @6958
 87430: 00                       trap
      :                          @6959
 87431: 00                       trap
      :                          @6960
 87432: 95 11 50 ff              sp = sp + 0xffffffffffffff50
 87436: 7b 10 a8 00              u64 [sp + 0xa8] = ra
 87440: 7b 15 a0 00              u64 [sp + 0xa0] = s0
 87444: 7b 16 98 00              u64 [sp + 0x98] = s1
 87448: 82 86                    s1 = u64 [a1]
 87450: 7b 14 58                 u64 [sp + 0x58] = t2
 87453: 7b 1b 90 00              u64 [sp + 0x90] = a4
 87457: 95 64 01                 t2 = s1 + 0x1
 87460: 7b 18 50                 u64 [sp + 0x50] = a1
 87463: 7b 84                    u64 [a1] = t2
 87465: ae a7 6f 01              jump @6986 if a0 >=u a3
      :                          @6961
 87469: 97 73 03                 t1 = a0 << 0x3
 87472: c8 39 08                 a1 = a2 + t1
 87475: 7b 18 48                 u64 [sp + 0x48] = a1
 87478: 7b 84                    u64 [a1] = t2
 87480: ae c7 61 01              jump @6987 if a0 >=u a5
      :                          @6962
 87484: 82 1b b8 00              a4 = u64 [sp + 0xb8]
 87488: 82 b8 10                 a1 = u64 [a4 + 0x10]
 87491: 82 16 90 00              s1 = u64 [sp + 0x90]
 87495: c8 36 06                 s1 = s1 + t1
 87498: 7b 16 70                 u64 [sp + 0x70] = s1
 87501: 7b 64                    u64 [s1] = t2
 87503: ae 87 47 01              jump @6984 if a0 >=u a1
      :                          @6963
 87507: 7b 1c 88 00              u64 [sp + 0x88] = a5
 87511: 82 b8 08                 a1 = u64 [a4 + 0x8]
 87514: 96 7c 18                 a5 = a0 * 0x18
 87517: c8 c8 08                 a1 = a1 + a5
 87520: 82 86 10                 s1 = u64 [a1 + 0x10]
 87523: 51 06 1e 01              jump @6980 if s1 == 0
      :                          @6964
 87527: 82 1c c0 00              a5 = u64 [sp + 0xc0]
 87531: 7b 1c 68                 u64 [sp + 0x68] = a5
 87534: 82 10 b0 00              ra = u64 [sp + 0xb0]
 87538: 82 85 08                 s0 = u64 [a1 + 0x8]
 87541: 82 18 58                 a1 = u64 [sp + 0x58]
 87544: c8 38 08                 a1 = a1 + t1
 87547: 7b 18 60                 u64 [sp + 0x60] = a1
 87550: 97 6c 03                 a5 = s1 << 0x3
 87553: 7b 17 38                 u64 [sp + 0x38] = a0
 87556: 7b 1a 30                 u64 [sp + 0x30] = a3
 87559: 7b 19 28                 u64 [sp + 0x28] = a2
 87562: 7b 1b 40                 u64 [sp + 0x40] = a4
 87565: 7b 10 20                 u64 [sp + 0x20] = ra
 87568: 28 23                    jump @6967
      :                          @6965
 87570: 82 17 38                 a0 = u64 [sp + 0x38]
 87573: 82 1a 30                 a3 = u64 [sp + 0x30]
 87576: 82 19 28                 a2 = u64 [sp + 0x28]
 87579: 82 1b 40                 a4 = u64 [sp + 0x40]
 87582: 82 10 20                 ra = u64 [sp + 0x20]
 87585: 82 15 78                 s0 = u64 [sp + 0x78]
 87588: 82 1c 80 00              a5 = u64 [sp + 0x80]
 87592: 01                       fallthrough
      :                          @6966
 87593: 95 cc f8                 a5 = a5 + 0xfffffffffffffff8
 87596: 95 55 08                 s0 = s0 + 0x8
 87599: 51 0c d2 00              jump @6980 if a5 == 0
      :                          @6967
 87603: 82 56                    s1 = u64 [s0]
 87605: ae a6 de 00              jump @6981 if s1 >=u a3
      :                          @6968
 87609: 97 62 03                 t0 = s1 << 0x3
 87612: c8 29 08                 a1 = a2 + t0
 87615: 82 83                    t1 = u64 [a1]
 87617: 51 03 19                 jump @6972 if t1 == 0
      :                          @6969
 87620: ae 07 d0 00              jump @6982 if a0 >=u ra
      :                          @6970
 87624: 82 18 60                 a1 = u64 [sp + 0x60]
 87627: 82 88                    a1 = u64 [a1]
 87629: aa 86 dc                 jump @6966 if s1 == a1
      :                          @6971
 87632: e6 34 04                 t2 = minu(t2, t1)
 87635: 82 18 70                 a1 = u64 [sp + 0x70]
 87638: 7b 84                    u64 [a1] = t2
 87640: 28 d1                    jump @6966
      :                          @6972
 87642: 82 13 68                 t1 = u64 [sp + 0x68]
 87645: ae 06 b8 00              jump @6983 if s1 >=u ra
      :                          @6973
 87649: 7b 1c 80 00              u64 [sp + 0x80] = a5
 87653: 7b 15 78                 u64 [sp + 0x78] = s0
 87656: 82 14 58                 t2 = u64 [sp + 0x58]
 87659: 64 25                    s0 = t0
 87661: c8 24 08                 a1 = t2 + t0
 87664: 7b 87                    u64 [a1] = a0
 87666: 7b 13 10                 u64 [sp + 0x10] = t1
 87669: 7b 1b 08                 u64 [sp + 0x8] = a4
 87672: 7b 10                    u64 [sp] = ra
 87674: 64 67                    a0 = s1
 87676: 82 18 50                 a1 = u64 [sp + 0x50]
 87679: 82 1b 90 00              a4 = u64 [sp + 0x90]
 87683: 82 1c 88 00              a5 = u64 [sp + 0x88]
 87687: 50 20 0a 04 01 ff        ra = 1034, jump @6960
      :                          @6974 [@dyn 517]
 87693: 82 18 88 00              a1 = u64 [sp + 0x88]
 87697: ae 86 86 00              jump @6985 if s1 >=u a1
      :                          @6975
 87701: 82 1a 70                 a3 = u64 [sp + 0x70]
 87704: 82 a7                    a0 = u64 [a3]
 87706: 82 18 90 00              a1 = u64 [sp + 0x90]
 87710: c8 58 08                 a1 = a1 + s0
 87713: 82 89                    a2 = u64 [a1]
 87715: e6 97 04                 t2 = minu(a0, a2)
 87718: 7b a4                    u64 [a3] = t2
 87720: 82 87                    a0 = u64 [a1]
 87722: 82 18 48                 a1 = u64 [sp + 0x48]
 87725: 82 88                    a1 = u64 [a1]
 87727: ae 78 63 ff              jump @6965 if a1 >=u a0
      :                          @6976
 87731: 82 13 68                 t1 = u64 [sp + 0x68]
 87734: 82 38 10                 a1 = u64 [t1 + 0x10]
 87737: 82 37                    a0 = u64 [t1]
 87739: ab 78 19                 jump @6979 if a1 != a0
      :                          @6977
 87742: 64 37                    a0 = t1
 87744: 7b 14 18                 u64 [sp + 0x18] = t2
 87747: 50 20 0c 04 7f fd fe     ra = 1036, jump @1605
      :                          @6978 [@dyn 518]
 87754: 82 14 18                 t2 = u64 [sp + 0x18]
 87757: 82 13 68                 t1 = u64 [sp + 0x68]
 87760: 82 38 10                 a1 = u64 [t1 + 0x10]
 87763: 01                       fallthrough
      :                          @6979
 87764: 82 17 38                 a0 = u64 [sp + 0x38]
 87767: 82 1a 30                 a3 = u64 [sp + 0x30]
 87770: 82 19 28                 a2 = u64 [sp + 0x28]
 87773: 82 10 20                 ra = u64 [sp + 0x20]
 87776: 82 15 78                 s0 = u64 [sp + 0x78]
 87779: 82 32 08                 t0 = u64 [t1 + 0x8]
 87782: 97 8c 04                 a5 = a1 << 0x4
 87785: c8 2c 0c                 a5 = a5 + t0
 87788: 7b c7                    u64 [a5] = a0
 87790: 7b c6 08                 u64 [a5 + 0x8] = s1
 87793: 95 88 01                 a1 = a1 + 0x1
 87796: 7b 38 10                 u64 [t1 + 0x10] = a1
 87799: 82 1b 40                 a4 = u64 [sp + 0x40]
 87802: 82 1c 80 00              a5 = u64 [sp + 0x80]
 87806: 28 2b ff                 jump @6966
      :                          @6980
 87809: 82 10 a8 00              ra = u64 [sp + 0xa8]
 87813: 82 15 a0 00              s0 = u64 [sp + 0xa0]
 87817: 82 16 98 00              s1 = u64 [sp + 0x98]
 87821: 95 11 b0 00              sp = sp + 0xb0
 87825: 32 00                    ret
      :                          @6981
 87827: 00                       trap
      :                          @6982
 87828: 00                       trap
      :                          @6983
 87829: 00                       trap
      :                          @6984
 87830: 00                       trap
      :                          @6985
 87831: 00                       trap
      :                          @6986
 87832: 00                       trap
      :                          @6987
 87833: 00                       trap
      :                          @6988
 87834: 95 11 c8 fe              sp = sp + 0xfffffffffffffec8
 87838: 7b 10 30 01              u64 [sp + 0x130] = ra
 87842: 7b 15 28 01              u64 [sp + 0x128] = s0
 87846: 7b 16 20 01              u64 [sp + 0x120] = s1
 87850: 64 92                    t0 = a2
 87852: 82 8c 10                 a5 = u64 [a1 + 0x10]
 87855: 82 99 10                 a2 = u64 [a2 + 0x10]
 87858: 7b 19 60                 u64 [sp + 0x60] = a2
 87861: d4 c9 09                 a2 = a2 | a5
 87864: 7b 1a 50                 u64 [sp + 0x50] = a3
 87867: 64 76                    s1 = a0
 87869: 7b 18 a0 00              u64 [sp + 0xa0] = a1
 87873: 7b 12 a8 00              u64 [sp + 0xa8] = t0
 87877: 7b 1b 58                 u64 [sp + 0x58] = a4
 87880: 52 09 b2 00              jump @7008 if a2 != 0
      :                          @6989
 87884: 82 b8 10                 a1 = u64 [a4 + 0x10]
 87887: 82 b7                    a0 = u64 [a4]
 87889: ab 78 17                 jump @6992 if a1 != a0
      :                          @6990
 87892: 64 b7                    a0 = a4
 87894: 50 20 0e 04 6a fc fe     ra = 1038, jump @1593
      :                          @6991 [@dyn 519]
 87901: 82 1b 58                 a4 = u64 [sp + 0x58]
 87904: 82 12 a8 00              t0 = u64 [sp + 0xa8]
 87908: 82 b8 10                 a1 = u64 [a4 + 0x10]
 87911: 01                       fallthrough
      :                          @6992
 87912: 82 b7 08                 a0 = u64 [a4 + 0x8]
 87915: 82 69 10                 a2 = u64 [s1 + 0x10]
 87918: 96 8a 18                 a3 = a1 * 0x18
 87921: c8 a7 07                 a0 = a0 + a3
 87924: 7b 79 10                 u64 [a0 + 0x10] = a2
 87927: 82 69 08                 a2 = u64 [s1 + 0x8]
 87930: 7b 79 08                 u64 [a0 + 0x8] = a2
 87933: 82 69                    a2 = u64 [s1]
 87935: 7b 79                    u64 [a0] = a2
 87937: 82 29                    a2 = u64 [t0]
 87939: 95 88 01                 a1 = a1 + 0x1
 87942: 7b b8 10                 u64 [a4 + 0x10] = a1
 87945: 51 09 31                 jump @6999 if a2 == 0
      :                          @6993
 87948: 33 07 00 20              a0 = 0x2000
 87952: ac 97 2a                 jump @6999 if a0 <u a2
      :                          @6994
 87955: 82 27 08                 a0 = u64 [t0 + 0x8]
 87958: 97 98 03                 a1 = a2 << 0x3
 87961: 33 09 c0 22 03           a2 = 0x322c0
 87966: 95 99 00 00 01           a2 = a2 + 0x10000
 87971: 01                       fallthrough
      :                          @6995
 87972: 82 9a                    a3 = u64 [a2]
 87974: c9 a9 0b                 a4 = a2 - a3
 87977: ab 7b 11                 jump @6999 if a4 != a0
      :                          @6996
 87980: c9 8a 0b                 a4 = a3 - a1
 87983: 01                       fallthrough
      :                          @6997
 87984: 82 9c                    a5 = u64 [a2]
 87986: ab ac f2                 jump @6995 if a5 != a3
      :                          @6998
 87989: 7b 9b                    u64 [a2] = a4
 87991: 33 06                    s1 = 0
 87993: 01                       fallthrough
      :                          @6999
 87994: 82 19 a0 00              a2 = u64 [sp + 0xa0]
 87998: 82 98                    a1 = u64 [a2]
 88000: 51 08 bb 05              jump @7113 if a1 == 0
      :                          @7000
 88004: 33 07 00 20              a0 = 0x2000
 88008: ac 87 b3 05              jump @7113 if a0 <u a1
      :                          @7001
 88012: 82 97 08                 a0 = u64 [a2 + 0x8]
 88015: 97 88 03                 a1 = a1 << 0x3
 88018: 33 09 c0 22 03           a2 = 0x322c0
 88023: 95 99 00 00 01           a2 = a2 + 0x10000
 88028: 01                       fallthrough
      :                          @7002
 88029: 82 9a                    a3 = u64 [a2]
 88031: c9 a9 0b                 a4 = a2 - a3
 88034: ab 7b 99 05              jump @7113 if a4 != a0
      :                          @7003
 88038: c9 8a 0b                 a4 = a3 - a1
 88041: 01                       fallthrough
      :                          @7004
 88042: 82 9c                    a5 = u64 [a2]
 88044: ab ac f1                 jump @7002 if a5 != a3
      :                          @7005
 88047: 7b 9b                    u64 [a2] = a4
 88049: 33 06                    s1 = 0
 88051: 01                       fallthrough
      :                          @7006
 88052: ab ac e9                 jump @7002 if a5 != a3
      :                          @7007
 88055: 28 84 05                 jump @7113
      :                          @7008
 88058: 7b 16 10                 u64 [sp + 0x10] = s1
 88061: 51 0c b5 04              jump @7085 if a5 == 0
      :                          @7009
 88065: 98 c7 3c                 a0 = a5 >> 0x3c
 88068: 52 07 8c 05              jump @7117 if a0 != 0
      :                          @7010
 88072: 82 88 08                 a1 = u64 [a1 + 0x8]
 88075: 88 72 01                 t0 = a0 <u 0x1
 88078: 7b 1c 08                 u64 [sp + 0x8] = a5
 88081: 97 c9 03                 a2 = a5 << 0x3
 88084: 97 22 03                 t0 = t0 << 0x3
 88087: 33 04 c0 22 03           t2 = 0x322c0
 88092: 33 03 00 00 01           t1 = 0x10000
 88097: c8 34 00                 ra = t2 + t1
 88100: 01                       fallthrough
      :                          @7011
 88101: 82 06                    s1 = u64 [ra]
 88103: c8 96 0c                 a5 = s1 + a2
 88106: ac 6c 65 05              jump @7116 if a5 <u s1
      :                          @7012
 88110: c8 2c 0a                 a3 = a5 + t0
 88113: d8 ca 05                 s0 = a3 <u a5
 88116: d8 a3 0a                 a3 = t1 <u a3
 88119: d4 5a 0a                 a3 = a3 | s0
 88122: 52 0a 55 05              jump @7116 if a3 != 0
      :                          @7013
 88126: c9 c4 05                 s0 = t2 - a5
 88129: c8 35 05                 s0 = s0 + t1
 88132: 84 5a 07                 a3 = s0 & 0x7
 88135: c8 ac 0c                 a5 = a5 + a3
 88138: 01                       fallthrough
      :                          @7014
 88139: 82 07                    a0 = u64 [ra]
 88141: ab 67 d8                 jump @7011 if a0 != s1
      :                          @7015
 88144: 7b 0c                    u64 [ra] = a5
 88146: 33 0b                    a4 = 0
 88148: c9 a5 05                 s0 = s0 - a3
 88151: 64 57                    a0 = s0
 88153: 7b 19 48                 u64 [sp + 0x48] = a2
 88156: 50 20 10 04 8d b1 01     ra = 1040, jump @13633
      :                          @7016 [@dyn 520]
 88163: 82 17 10                 a0 = u64 [sp + 0x10]
 88166: 82 79 10                 a2 = u64 [a0 + 0x10]
 88169: 82 18 48                 a1 = u64 [sp + 0x48]
 88172: c8 58 08                 a1 = a1 + s0
 88175: 7b 18 30                 u64 [sp + 0x30] = a1
 88178: 82 77 08                 a0 = u64 [a0 + 0x8]
 88181: 7b 17 40                 u64 [sp + 0x40] = a0
 88184: 98 97 3c                 a0 = a2 >> 0x3c
 88187: 7b 17 20                 u64 [sp + 0x20] = a0
 88190: 88 77 01                 a0 = a0 <u 0x1
 88193: 7b 19 98 00              u64 [sp + 0x98] = a2
 88197: 97 99 03                 a2 = a2 << 0x3
 88200: 97 77 03                 a0 = a0 << 0x3
 88203: 7b 17 18                 u64 [sp + 0x18] = a0
 88206: 82 17 50                 a0 = u64 [sp + 0x50]
 88209: 82 78 10                 a1 = u64 [a0 + 0x10]
 88212: 7b 18 80 00              u64 [sp + 0x80] = a1
 88216: 82 77 08                 a0 = u64 [a0 + 0x8]
 88219: 7b 17 38                 u64 [sp + 0x38] = a0
 88222: 33 03 c0 22 03           t1 = 0x322c0
 88227: 33 06 00 00 01           s1 = 0x10000
 88232: c8 63 04                 t2 = t1 + s1
 88235: 82 17 08                 a0 = u64 [sp + 0x8]
 88238: 7b 17 b8 00              u64 [sp + 0xb8] = a0
 88242: 7b 15                    u64 [sp] = s0
 88244: 64 50                    ra = s0
 88246: 7b 19 28                 u64 [sp + 0x28] = a2
 88249: 7b 13 90 00              u64 [sp + 0x90] = t1
 88253: 7b 14 88 00              u64 [sp + 0x88] = t2
 88257: 28 3a                    jump @7018
      :                          @7017
 88259: 82 15 48                 s0 = u64 [sp + 0x48]
 88262: 82 19 28                 a2 = u64 [sp + 0x28]
 88265: 82 13 90 00              t1 = u64 [sp + 0x90]
 88269: 33 06 00 00 01           s1 = 0x10000
 88274: 82 14 88 00              t2 = u64 [sp + 0x88]
 88278: 82 10 68                 ra = u64 [sp + 0x68]
 88281: 82 27 08                 a0 = u64 [t0 + 0x8]
 88284: 95 00 08                 ra = ra + 0x8
 88287: 97 8a 03                 a3 = a1 << 0x3
 88290: c8 7a 0a                 a3 = a3 + a0
 88293: 82 1b b0 00              a4 = u64 [sp + 0xb0]
 88297: 7b ab                    u64 [a3] = a4
 88299: 95 88 01                 a1 = a1 + 0x1
 88302: 7b 18 60                 u64 [sp + 0x60] = a1
 88305: 7b 28 10                 u64 [t0 + 0x10] = a1
 88308: 82 18 30                 a1 = u64 [sp + 0x30]
 88311: aa 80 c0 03              jump @7086 if ra == a1
      :                          @7018
 88315: 82 07                    a0 = u64 [ra]
 88317: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 88321: 33 05 08                 s0 = 0x8
 88324: 82 17 98 00              a0 = u64 [sp + 0x98]
 88328: 51 07 41                 jump @7026 if a0 == 0
      :                          @7019
 88331: 82 17 20                 a0 = u64 [sp + 0x20]
 88334: 52 07 82 04              jump @7117 if a0 != 0
      :                          @7020
 88338: 82 12 18                 t0 = u64 [sp + 0x18]
 88341: 01                       fallthrough
      :                          @7021
 88342: 82 47                    a0 = u64 [t2]
 88344: c8 97 08                 a1 = a0 + a2
 88347: ac 78 74 04              jump @7116 if a1 <u a0
      :                          @7022
 88351: c8 28 0b                 a4 = a1 + t0
 88354: d8 8b 0a                 a3 = a4 <u a1
 88357: d8 b6 0b                 a4 = s1 <u a4
 88360: d4 ba 0a                 a3 = a3 | a4
 88363: 52 0a 64 04              jump @7116 if a3 != 0
      :                          @7023
 88367: c9 83 05                 s0 = t1 - a1
 88370: c8 65 05                 s0 = s0 + s1
 88373: 84 5a 07                 a3 = s0 & 0x7
 88376: c8 a8 08                 a1 = a1 + a3
 88379: 01                       fallthrough
      :                          @7024
 88380: 82 4b                    a4 = u64 [t2]
 88382: ab 7b d8                 jump @7021 if a4 != a0
      :                          @7025
 88385: 7b 48                    u64 [t2] = a1
 88387: 33 0c                    a5 = 0
 88389: c9 a5 05                 s0 = s0 - a3
 88392: 01                       fallthrough
      :                          @7026
 88393: 7b 10 68                 u64 [sp + 0x68] = ra
 88396: 64 57                    a0 = s0
 88398: 82 18 40                 a1 = u64 [sp + 0x40]
 88401: 50 20 12 04 98 b0 01     ra = 1042, jump @13633
      :                          @7027 [@dyn 521]
 88408: 82 18 98 00              a1 = u64 [sp + 0x98]
 88412: 7b 18 c0 00              u64 [sp + 0xc0] = a1
 88416: 7b 15 c8 00              u64 [sp + 0xc8] = s0
 88420: 7b 18 d0 00              u64 [sp + 0xd0] = a1
 88424: 95 17 c0 00              a0 = sp + 0xc0
 88428: 50 20 14 04 d4 f9 fe     ra = 1044, jump @1581
      :                          @7028 [@dyn 522]
 88435: 82 17 d0 00              a0 = u64 [sp + 0xd0]
 88439: 82 18 c8 00              a1 = u64 [sp + 0xc8]
 88443: 97 79 03                 a2 = a0 << 0x3
 88446: c8 98 08                 a1 = a1 + a2
 88449: 82 19 b0 00              a2 = u64 [sp + 0xb0]
 88453: 7b 89                    u64 [a1] = a2
 88455: 95 77 01                 a0 = a0 + 0x1
 88458: 7b 17 d0 00              u64 [sp + 0xd0] = a0
 88462: 96 97 18                 a0 = a2 * 0x18
 88465: 82 18 38                 a1 = u64 [sp + 0x38]
 88468: c8 87 07                 a0 = a0 + a1
 88471: 95 7a 10                 a3 = a0 + 0x10
 88474: 95 7c 08                 a5 = a0 + 0x8
 88477: 82 17 80 00              a0 = u64 [sp + 0x80]
 88481: 7b 1a 78                 u64 [sp + 0x78] = a3
 88484: 7b 1c 70                 u64 [sp + 0x70] = a5
 88487: ae 79 1e 01              jump @7047 if a2 >=u a0
      :                          @7029
 88491: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 88495: 82 76 08                 s1 = u64 [a0 + 0x8]
 88498: 82 19 b8 00              a2 = u64 [sp + 0xb8]
 88502: 97 99 03                 a2 = a2 << 0x3
 88505: c8 96 0b                 a4 = s1 + a2
 88508: 82 12 a8 00              t0 = u64 [sp + 0xa8]
 88512: 82 13 90 00              t1 = u64 [sp + 0x90]
 88516: 33 04 00 00 01           t2 = 0x10000
 88521: 82 10 88 00              ra = u64 [sp + 0x88]
 88525: 01                       fallthrough
      :                          @7030
 88526: 51 09 10 01              jump @7048 if a2 == 0
      :                          @7031
 88530: 82 67                    a0 = u64 [s1]
 88532: 82 a8                    a1 = u64 [a3]
 88534: ae 87 bc 03              jump @7119 if a0 >=u a1
      :                          @7032
 88538: 82 c8                    a1 = u64 [a5]
 88540: c8 78 08                 a1 = a1 + a0
 88543: 7c 88                    a1 = u8 [a1]
 88545: 95 66 08                 s1 = s1 + 0x8
 88548: 95 99 f8                 a2 = a2 + 0xfffffffffffffff8
 88551: 51 08 e7                 jump @7030 if a1 == 0
      :                          @7033
 88554: 7b 1b 60                 u64 [sp + 0x60] = a4
 88557: 01                       fallthrough
      :                          @7034
 88558: 82 08                    a1 = u64 [ra]
 88560: 95 89 20                 a2 = a1 + 0x20
 88563: ac 89 9b 03              jump @7115 if a2 <u a1
      :                          @7035
 88567: 95 9a 08                 a3 = a2 + 0x8
 88570: d8 9a 0b                 a4 = a3 <u a2
 88573: d8 a4 0a                 a3 = t2 <u a3
 88576: d4 ba 0a                 a3 = a3 | a4
 88579: 52 0a 8b 03              jump @7115 if a3 != 0
      :                          @7036
 88583: c9 93 0a                 a3 = t1 - a2
 88586: c8 4a 0a                 a3 = a3 + t2
 88589: 84 ab 07                 a4 = a3 & 0x7
 88592: c8 b9 09                 a2 = a2 + a4
 88595: 01                       fallthrough
      :                          @7037
 88596: 82 0c                    a5 = u64 [ra]
 88598: ab 8c d8                 jump @7034 if a5 != a1
      :                          @7038
 88601: 7b 09                    u64 [ra] = a2
 88603: c9 ba 09                 a2 = a3 - a4
 88606: 7b 97                    u64 [a2] = a0
 88608: 49 21 08 01 04           u64 [sp + 264] = 0x4
 88613: 7b 19 10 01              u64 [sp + 0x110] = a2
 88617: 49 21 18 01 01           u64 [sp + 280] = 0x1
 88622: 82 1a 78                 a3 = u64 [sp + 0x78]
 88625: 82 1c 70                 a5 = u64 [sp + 0x70]
 88628: 82 1b 60                 a4 = u64 [sp + 0x60]
 88631: 49 21 b8 00 01           u64 [sp + 184] = 0x1
 88636: 01                       fallthrough
      :                          @7039
 88637: aa b6 6b                 jump @7046 if s1 == a4
      :                          @7040
 88640: 82 65                    s0 = u64 [s1]
 88642: 82 a8                    a1 = u64 [a3]
 88644: ae 85 49 03              jump @7114 if s0 >=u a1
      :                          @7041
 88648: 82 c7                    a0 = u64 [a5]
 88650: c8 57 07                 a0 = a0 + s0
 88653: 7c 77                    a0 = u8 [a0]
 88655: 95 66 08                 s1 = s1 + 0x8
 88658: 82 18 b8 00              a1 = u64 [sp + 0xb8]
 88662: 51 07 e7                 jump @7039 if a0 == 0
      :                          @7042
 88665: 82 17 08 01              a0 = u64 [sp + 0x108]
 88669: aa 78 18                 jump @7044 if a1 == a0
      :                          @7043
 88672: 97 87 03                 a0 = a1 << 0x3
 88675: c8 97 07                 a0 = a0 + a2
 88678: 7b 75                    u64 [a0] = s0
 88680: 95 88 01                 a1 = a1 + 0x1
 88683: 7b 18 18 01              u64 [sp + 0x118] = a1
 88687: 7b 18 b8 00              u64 [sp + 0xb8] = a1
 88691: 28 ca                    jump @7039
      :                          @7044
 88693: 95 17 08 01              a0 = sp + 0x108
 88697: 82 18 b8 00              a1 = u64 [sp + 0xb8]
 88701: 50 20 16 04 3e fb fe     ra = 1046, jump @1641
      :                          @7045 [@dyn 523]
 88708: 82 18 b8 00              a1 = u64 [sp + 0xb8]
 88712: 82 1b 60                 a4 = u64 [sp + 0x60]
 88715: 82 1c 70                 a5 = u64 [sp + 0x70]
 88718: 82 1a 78                 a3 = u64 [sp + 0x78]
 88721: 82 10 88 00              ra = u64 [sp + 0x88]
 88725: 33 04 00 00 01           t2 = 0x10000
 88730: 82 13 90 00              t1 = u64 [sp + 0x90]
 88734: 82 12 a8 00              t0 = u64 [sp + 0xa8]
 88738: 82 19 10 01              a2 = u64 [sp + 0x110]
 88742: 28 ba                    jump @7043
      :                          @7046
 88744: 82 17 18 01              a0 = u64 [sp + 0x118]
 88748: 82 18 10 01              a1 = u64 [sp + 0x110]
 88752: 82 19 08 01              a2 = u64 [sp + 0x108]
 88756: 82 25 10                 s0 = u64 [t0 + 0x10]
 88759: 7b 17 e8 00              u64 [sp + 0xe8] = a0
 88763: 7b 18 e0 00              u64 [sp + 0xe0] = a1
 88767: 7b 19 d8 00              u64 [sp + 0xd8] = a2
 88771: 28 2c                    jump @7049
      :                          @7047
 88773: 82 12 a8 00              t0 = u64 [sp + 0xa8]
 88777: 82 13 90 00              t1 = u64 [sp + 0x90]
 88781: 33 04 00 00 01           t2 = 0x10000
 88786: 82 10 88 00              ra = u64 [sp + 0x88]
 88790: 82 17 b8 00              a0 = u64 [sp + 0xb8]
 88794: 52 07 b7 02              jump @7118 if a0 != 0
      :                          @7048
 88798: 49 21 d8 00              u64 [sp + 216] = 0
 88802: 49 21 e0 00 08           u64 [sp + 224] = 0x8
 88807: 49 21 e8 00              u64 [sp + 232] = 0
 88811: 82 15 60                 s0 = u64 [sp + 0x60]
 88814: 01                       fallthrough
      :                          @7049
 88815: 82 17 80 00              a0 = u64 [sp + 0x80]
 88819: 82 18 b0 00              a1 = u64 [sp + 0xb0]
 88823: ae 78 f5 00              jump @7068 if a1 >=u a0
      :                          @7050
 88827: 82 22 08                 t0 = u64 [t0 + 0x8]
 88830: 97 59 03                 a2 = s0 << 0x3
 88833: c8 92 05                 s0 = t0 + a2
 88836: 82 1b 58                 a4 = u64 [sp + 0x58]
 88839: 01                       fallthrough
      :                          @7051
 88840: 51 09 eb 00              jump @7069 if a2 == 0
      :                          @7052
 88844: 82 27                    a0 = u64 [t0]
 88846: 82 a8                    a1 = u64 [a3]
 88848: ae 87 82 02              jump @7119 if a0 >=u a1
      :                          @7053
 88852: 82 c8                    a1 = u64 [a5]
 88854: c8 78 08                 a1 = a1 + a0
 88857: 7c 88                    a1 = u8 [a1]
 88859: 95 22 08                 t0 = t0 + 0x8
 88862: 95 99 f8                 a2 = a2 + 0xfffffffffffffff8
 88865: 51 08 e7                 jump @7051 if a1 == 0
      :                          @7054
 88868: 7b 15 b8 00              u64 [sp + 0xb8] = s0
 88872: 01                       fallthrough
      :                          @7055
 88873: 82 08                    a1 = u64 [ra]
 88875: 95 89 20                 a2 = a1 + 0x20
 88878: ac 89 60 02              jump @7115 if a2 <u a1
      :                          @7056
 88882: 95 9a 08                 a3 = a2 + 0x8
 88885: d8 9a 0c                 a5 = a3 <u a2
 88888: d8 a4 0a                 a3 = t2 <u a3
 88891: d4 ca 0a                 a3 = a3 | a5
 88894: 52 0a 50 02              jump @7115 if a3 != 0
      :                          @7057
 88898: c9 93 0a                 a3 = t1 - a2
 88901: c8 4a 06                 s1 = a3 + t2
 88904: 84 6a 07                 a3 = s1 & 0x7
 88907: c8 a9 09                 a2 = a2 + a3
 88910: 01                       fallthrough
      :                          @7058
 88911: 82 0c                    a5 = u64 [ra]
 88913: ab 8c d8                 jump @7055 if a5 != a1
      :                          @7059
 88916: 7b 09                    u64 [ra] = a2
 88918: 33 05                    s0 = 0
 88920: c9 a6 03                 t1 = s1 - a3
 88923: 7b 37                    u64 [t1] = a0
 88925: 49 21 08 01 04           u64 [sp + 264] = 0x4
 88930: 7b 13 10 01              u64 [sp + 0x110] = t1
 88934: 33 09 01                 a2 = 0x1
 88937: 7b 19 18 01              u64 [sp + 0x118] = a2
 88941: 82 1a 78                 a3 = u64 [sp + 0x78]
 88944: 82 1c 70                 a5 = u64 [sp + 0x70]
 88947: 82 16 b8 00              s1 = u64 [sp + 0xb8]
 88951: 01                       fallthrough
      :                          @7060
 88952: aa 62 5a                 jump @7067 if t0 == s1
      :                          @7061
 88955: 82 25                    s0 = u64 [t0]
 88957: 82 a8                    a1 = u64 [a3]
 88959: ae 85 0e 02              jump @7114 if s0 >=u a1
      :                          @7062
 88963: 82 c7                    a0 = u64 [a5]
 88965: c8 57 07                 a0 = a0 + s0
 88968: 7c 77                    a0 = u8 [a0]
 88970: 95 22 08                 t0 = t0 + 0x8
 88973: 51 07 eb                 jump @7060 if a0 == 0
      :                          @7063
 88976: 82 17 08 01              a0 = u64 [sp + 0x108]
 88980: aa 79 14                 jump @7065 if a2 == a0
      :                          @7064
 88983: 97 97 03                 a0 = a2 << 0x3
 88986: c8 37 07                 a0 = a0 + t1
 88989: 7b 75                    u64 [a0] = s0
 88991: 95 99 01                 a2 = a2 + 0x1
 88994: 7b 19 18 01              u64 [sp + 0x118] = a2
 88998: 28 d2                    jump @7060
      :                          @7065
 89000: 95 17 08 01              a0 = sp + 0x108
 89004: 64 98                    a1 = a2
 89006: 64 26                    s1 = t0
 89008: 7b 19 60                 u64 [sp + 0x60] = a2
 89011: 50 20 18 04 08 fa fe     ra = 1048, jump @1641
      :                          @7066 [@dyn 524]
 89018: 82 19 60                 a2 = u64 [sp + 0x60]
 89021: 64 62                    t0 = s1
 89023: 82 16 b8 00              s1 = u64 [sp + 0xb8]
 89027: 82 1c 70                 a5 = u64 [sp + 0x70]
 89030: 82 1a 78                 a3 = u64 [sp + 0x78]
 89033: 82 1b 58                 a4 = u64 [sp + 0x58]
 89036: 82 13 10 01              t1 = u64 [sp + 0x110]
 89040: 28 c7                    jump @7064
      :                          @7067
 89042: 82 17 18 01              a0 = u64 [sp + 0x118]
 89046: 82 18 10 01              a1 = u64 [sp + 0x110]
 89050: 82 19 08 01              a2 = u64 [sp + 0x108]
 89054: 7b 17 00 01              u64 [sp + 0x100] = a0
 89058: 7b 18 f8 00              u64 [sp + 0xf8] = a1
 89062: 7b 19 f0 00              u64 [sp + 0xf0] = a2
 89066: 28 17                    jump @7070
      :                          @7068
 89068: 82 1b 58                 a4 = u64 [sp + 0x58]
 89071: 52 05 a2 01              jump @7118 if s0 != 0
      :                          @7069
 89075: 49 21 f0 00              u64 [sp + 240] = 0
 89079: 49 21 f8 00 08           u64 [sp + 248] = 0x8
 89084: 49 21 00 01              u64 [sp + 256] = 0
 89088: 01                       fallthrough
      :                          @7070
 89089: 95 17 c0 00              a0 = sp + 0xc0
 89093: 95 18 d8 00              a1 = sp + 0xd8
 89097: 95 19 f0 00              a2 = sp + 0xf0
 89101: 82 1a 50                 a3 = u64 [sp + 0x50]
 89104: 50 20 1a 04 0a fb        ra = 1050, jump @6988
      :                          @7071 [@dyn 525]
 89110: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 89114: 82 73 10                 t1 = u64 [a0 + 0x10]
 89117: 51 03 2f                 jump @7076 if t1 == 0
      :                          @7072
 89120: 82 78 08                 a1 = u64 [a0 + 0x8]
 89123: 9a 3b                    a4 = -t1
 89125: 33 09 01                 a2 = 0x1
 89128: 33 0a 01                 a3 = 0x1
 89131: 82 12 a8 00              t0 = u64 [sp + 0xa8]
 89135: 33 06 01                 s1 = 0x1
 89138: 82 15 b0 00              s0 = u64 [sp + 0xb0]
 89142: 01                       fallthrough
      :                          @7073
 89143: 82 8c                    a5 = u64 [a1]
 89145: aa c5 20                 jump @7077 if s0 == a5
      :                          @7074
 89148: 95 aa 01                 a3 = a3 + 0x1
 89151: c8 ab 0c                 a5 = a4 + a3
 89154: 95 88 08                 a1 = a1 + 0x8
 89157: ab 6c f2                 jump @7073 if a5 != s1
      :                          @7075
 89160: 33 09                    a2 = 0
 89162: 28 42                    jump @7082
      :                          @7076
 89164: 33 0a                    a3 = 0
 89166: 33 09                    a2 = 0
 89168: 82 12 a8 00              t0 = u64 [sp + 0xa8]
 89172: 82 15 b0 00              s0 = u64 [sp + 0xb0]
 89176: 01                       fallthrough
      :                          @7077
 89177: aa a3 33                 jump @7082 if t1 == a3
      :                          @7078
 89180: 82 7b 08                 a4 = u64 [a0 + 0x8]
 89183: c9 a3 08                 a1 = t1 - a3
 89186: 97 aa 03                 a3 = a3 << 0x3
 89189: c8 ba 0a                 a3 = a3 + a4
 89192: 28 0e                    jump @7080
      :                          @7079
 89194: 95 99 01                 a2 = a2 + 0x1
 89197: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 89200: 95 aa 08                 a3 = a3 + 0x8
 89203: 51 08 19                 jump @7082 if a1 == 0
      :                          @7080
 89206: 82 ab                    a4 = u64 [a3]
 89208: aa b5 f2                 jump @7079 if s0 == a4
      :                          @7081
 89211: 97 9c 03                 a5 = a2 << 0x3
 89214: c9 ca 0c                 a5 = a3 - a5
 89217: 7b cb                    u64 [a5] = a4
 89219: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 89222: 95 aa 08                 a3 = a3 + 0x8
 89225: 52 08 ed                 jump @7080 if a1 != 0
      :                          @7082
 89228: 82 28 10                 a1 = u64 [t0 + 0x10]
 89231: 82 2a                    a3 = u64 [t0]
 89233: c9 93 09                 a2 = t1 - a2
 89236: 7b 19 b8 00              u64 [sp + 0xb8] = a2
 89240: 7b 79 10                 u64 [a0 + 0x10] = a2
 89243: ab a8 28 fc              jump @7017 if a1 != a3
      :                          @7083
 89247: 64 27                    a0 = t0
 89249: 50 20 1c 04 9f f6 fe     ra = 1052, jump @1581
      :                          @7084 [@dyn 526]
 89256: 82 12 a8 00              t0 = u64 [sp + 0xa8]
 89260: 82 28 10                 a1 = u64 [t0 + 0x10]
 89263: 28 14 fc                 jump @7017
      :                          @7085
 89266: 82 27 08                 a0 = u64 [t0 + 0x8]
 89269: 28 2d                    jump @7092
      :                          @7086
 89271: 82 19 08                 a2 = u64 [sp + 0x8]
 89274: 56 29 00 20 28           jump @7092 if a2 >u 8192
      :                          @7087
 89279: 33 08 c0 22 03           a1 = 0x322c0
 89284: 95 88 00 00 01           a1 = a1 + 0x10000
 89289: 82 16                    s1 = u64 [sp]
 89291: 01                       fallthrough
      :                          @7088
 89292: 82 89                    a2 = u64 [a1]
 89294: c9 98 0a                 a3 = a1 - a2
 89297: ab 6a 11                 jump @7092 if a3 != s1
      :                          @7089
 89300: c9 59 0a                 a3 = a2 - s0
 89303: 01                       fallthrough
      :                          @7090
 89304: 82 8b                    a4 = u64 [a1]
 89306: ab 9b f2                 jump @7088 if a4 != a2
      :                          @7091
 89309: 7b 8a                    u64 [a1] = a3
 89311: 33 0c                    a5 = 0
 89313: 01                       fallthrough
      :                          @7092
 89314: 82 28                    a1 = u64 [t0]
 89316: 51 08 2c                 jump @7099 if a1 == 0
      :                          @7093
 89319: 56 28 00 20 29           jump @7099 if a1 >u 8192
      :                          @7094
 89324: 97 88 03                 a1 = a1 << 0x3
 89327: 33 09 c0 22 03           a2 = 0x322c0
 89332: 95 99 00 00 01           a2 = a2 + 0x10000
 89337: 01                       fallthrough
      :                          @7095
 89338: 82 9a                    a3 = u64 [a2]
 89340: c9 a9 0b                 a4 = a2 - a3
 89343: ab 7b 11                 jump @7099 if a4 != a0
      :                          @7096
 89346: c9 8a 0b                 a4 = a3 - a1
 89349: 01                       fallthrough
      :                          @7097
 89350: 82 9c                    a5 = u64 [a2]
 89352: ab ac f2                 jump @7095 if a5 != a3
      :                          @7098
 89355: 7b 9b                    u64 [a2] = a4
 89357: 33 06                    s1 = 0
 89359: 01                       fallthrough
      :                          @7099
 89360: 82 19 a0 00              a2 = u64 [sp + 0xa0]
 89364: 82 98                    a1 = u64 [a2]
 89366: 51 08 31                 jump @7106 if a1 == 0
      :                          @7100
 89369: 33 07 00 20              a0 = 0x2000
 89373: ac 87 2a                 jump @7106 if a0 <u a1
      :                          @7101
 89376: 82 97 08                 a0 = u64 [a2 + 0x8]
 89379: 97 88 03                 a1 = a1 << 0x3
 89382: 33 09 c0 22 03           a2 = 0x322c0
 89387: 95 99 00 00 01           a2 = a2 + 0x10000
 89392: 01                       fallthrough
      :                          @7102
 89393: 82 9a                    a3 = u64 [a2]
 89395: c9 a9 0b                 a4 = a2 - a3
 89398: ab 7b 11                 jump @7106 if a4 != a0
      :                          @7103
 89401: c9 8a 0b                 a4 = a3 - a1
 89404: 01                       fallthrough
      :                          @7104
 89405: 82 9c                    a5 = u64 [a2]
 89407: ab ac f2                 jump @7102 if a5 != a3
      :                          @7105
 89410: 7b 9b                    u64 [a2] = a4
 89412: 33 06                    s1 = 0
 89414: 01                       fallthrough
      :                          @7106
 89415: 82 19 10                 a2 = u64 [sp + 0x10]
 89418: 82 98                    a1 = u64 [a2]
 89420: 51 08 2f                 jump @7113 if a1 == 0
      :                          @7107
 89423: 33 07 00 20              a0 = 0x2000
 89427: ac 87 28                 jump @7113 if a0 <u a1
      :                          @7108
 89430: 82 97 08                 a0 = u64 [a2 + 0x8]
 89433: 97 88 03                 a1 = a1 << 0x3
 89436: 33 09 c0 22 03           a2 = 0x322c0
 89441: 95 99 00 00 01           a2 = a2 + 0x10000
 89446: 01                       fallthrough
      :                          @7109
 89447: 82 9a                    a3 = u64 [a2]
 89449: c9 a9 0b                 a4 = a2 - a3
 89452: ab 7b 0f                 jump @7113 if a4 != a0
      :                          @7110
 89455: c9 8a 0b                 a4 = a3 - a1
 89458: 01                       fallthrough
      :                          @7111
 89459: 82 9c                    a5 = u64 [a2]
 89461: ab ac f2                 jump @7109 if a5 != a3
      :                          @7112
 89464: 7b 9b                    u64 [a2] = a4
 89466: 01                       fallthrough
      :                          @7113
 89467: 82 10 30 01              ra = u64 [sp + 0x130]
 89471: 82 15 28 01              s0 = u64 [sp + 0x128]
 89475: 82 16 20 01              s1 = u64 [sp + 0x120]
 89479: 95 11 38 01              sp = sp + 0x138
 89483: 32 00                    ret
      :                          @7114
 89485: 00                       trap
      :                          @7115
 89486: 00                       trap
      :                          @7116
 89487: 00                       trap
      :                          @7117
 89488: 00                       trap
      :                          @7118
 89489: 00                       trap
      :                          @7119
 89490: 00                       trap
      :                          @7120
 89491: 95 11 a0                 sp = sp + 0xffffffffffffffa0
 89494: 7b 10 58                 u64 [sp + 0x58] = ra
 89497: 7b 15 50                 u64 [sp + 0x50] = s0
 89500: 7b 16 48                 u64 [sp + 0x48] = s1
 89503: 82 89 10                 a2 = u64 [a1 + 0x10]
 89506: 51 09 b7 01              jump @7159 if a2 == 0
      :                          @7121
 89510: 57 09 da 01              jump @7165 if a2 <s 0
      :                          @7122
 89514: 7b 18 28                 u64 [sp + 0x28] = a1
 89517: 85 95 ff                 s0 = a2 ^ 0xffffffffffffffff
 89520: 98 55 3f                 s0 = s0 >> 0x3f
 89523: 33 08 c0 22 03           a1 = 0x322c0
 89528: 33 02 00 00 01           t0 = 0x10000
 89533: c8 28 08                 a1 = a1 + t0
 89536: 01                       fallthrough
      :                          @7123
 89537: 82 8b                    a4 = u64 [a1]
 89539: c8 9b 0a                 a3 = a4 + a2
 89542: ac ba b9 01              jump @7164 if a3 <u a4
      :                          @7124
 89546: c8 5a 0c                 a5 = a3 + s0
 89549: d8 ac 06                 s1 = a5 <u a3
 89552: d8 c2 0c                 a5 = t0 <u a5
 89555: d4 6c 0c                 a5 = a5 | s1
 89558: 52 0c a9 01              jump @7164 if a5 != 0
      :                          @7125
 89562: 82 8c                    a5 = u64 [a1]
 89564: ab bc e5                 jump @7123 if a5 != a4
      :                          @7126
 89567: 7b 8a                    u64 [a1] = a3
 89569: 33 06                    s1 = 0
 89571: 7b 17 18                 u64 [sp + 0x18] = a0
 89574: 33 07 c0 22 04           a0 = 0x422c0
 89579: c9 a7 05                 s0 = a0 - a3
 89582: 64 57                    a0 = s0
 89584: 33 08                    a1 = 0
 89586: 7b 19 20                 u64 [sp + 0x20] = a2
 89589: 50 20 1e 04 21 ae 01     ra = 1054, jump @13687
      :                          @7127 [@dyn 527]
 89596: 64 50                    ra = s0
 89598: 82 14 20                 t2 = u64 [sp + 0x20]
 89601: 33 08                    a1 = 0
 89603: 49 11 30                 u64 [sp + 48] = 0
 89606: 33 05 08                 s0 = 0x8
 89609: 7b 15 38                 u64 [sp + 0x38] = s0
 89612: 49 11 40                 u64 [sp + 64] = 0
 89615: c8 40 0a                 a3 = ra + t2
 89618: 82 17 28                 a0 = u64 [sp + 0x28]
 89621: 82 77 08                 a0 = u64 [a0 + 0x8]
 89624: 7b 17 28                 u64 [sp + 0x28] = a0
 89627: 9a 4b                    a4 = -t2
 89629: 64 b7                    a0 = a4
 89631: 01                       fallthrough
      :                          @7128
 89632: 51 07 f2 00              jump @7151 if a0 == 0
      :                          @7129
 89636: c8 7a 09                 a2 = a3 + a0
 89639: 7c 99                    a2 = u8 [a2]
 89641: 95 77 01                 a0 = a0 + 0x1
 89644: 52 09 f4                 jump @7128 if a2 != 0
      :                          @7130
 89647: 7b 15                    u64 [sp] = s0
 89649: 7b 1b 08                 u64 [sp + 0x8] = a4
 89652: 7b 1a 10                 u64 [sp + 0x10] = a3
 89655: 33 03                    t1 = 0
 89657: 33 06                    s1 = 0
 89659: 33 0b                    a4 = 0
 89661: 28 23                    jump @7133
      :                          @7131
 89663: 33 0c                    a5 = 0
 89665: 01                       fallthrough
      :                          @7132
 89666: c8 b0 07                 a0 = ra + a4
 89669: 7c 77                    a0 = u8 [a0]
 89671: 95 b9 01                 a2 = a4 + 0x1
 89674: 88 77 01                 a0 = a0 <u 0x1
 89677: c8 c7 07                 a0 = a0 + a5
 89680: d8 73 0a                 a3 = t1 <u a0
 89683: 64 26                    s1 = t0
 89685: db ab 06                 s1 = a4 if a3 != 0
 89688: e4 37 03                 t1 = maxu(a0, t1)
 89691: 64 9b                    a4 = a2
 89693: aa 49 3d                 jump @7140 if a2 == t2
      :                          @7133
 89696: 64 62                    t0 = s1
 89698: 96 b7 18                 a0 = a4 * 0x18
 89701: 82 19 28                 a2 = u64 [sp + 0x28]
 89704: c8 97 07                 a0 = a0 + a2
 89707: 82 7a 10                 a3 = u64 [a0 + 0x10]
 89710: 51 0a d1                 jump @7131 if a3 == 0
      :                          @7134
 89713: 82 79 08                 a2 = u64 [a0 + 0x8]
 89716: 33 07                    a0 = 0
 89718: 33 0c                    a5 = 0
 89720: 28 14                    jump @7137
      :                          @7135
 89722: c8 70 06                 s1 = ra + a0
 89725: 7c 66                    s1 = u8 [s1]
 89727: 88 66 01                 s1 = s1 <u 0x1
 89730: 01                       fallthrough
      :                          @7136
 89731: 95 77 01                 a0 = a0 + 0x1
 89734: c8 6c 0c                 a5 = a5 + s1
 89737: aa 7a b9                 jump @7132 if a3 == a0
      :                          @7137
 89740: c8 79 05                 s0 = a2 + a0
 89743: 7c 56                    s1 = u8 [s0]
 89745: 51 06 f2                 jump @7136 if s1 == 0
      :                          @7138
 89748: ac 47 e6                 jump @7135 if a0 <u t2
      :                          @7139
 89751: 28 e5 00                 jump @7161
      :                          @7140
 89754: 82 17 30                 a0 = u64 [sp + 0x30]
 89757: ab 78 1c                 jump @7143 if a1 != a0
      :                          @7141
 89760: 95 17 30                 a0 = sp + 0x30
 89763: 64 05                    s0 = ra
 89765: 50 20 20 04 9b f4 fe     ra = 1056, jump @1581
      :                          @7142 [@dyn 528]
 89772: 64 50                    ra = s0
 89774: 82 14 20                 t2 = u64 [sp + 0x20]
 89777: 82 18 40                 a1 = u64 [sp + 0x40]
 89780: 82 15 38                 s0 = u64 [sp + 0x38]
 89783: 28 05                    jump @7144
      :                          @7143
 89785: 82 15                    s0 = u64 [sp]
 89787: 01                       fallthrough
      :                          @7144
 89788: 97 87 03                 a0 = a1 << 0x3
 89791: c8 57 07                 a0 = a0 + s0
 89794: 7b 76                    u64 [a0] = s1
 89796: 95 88 01                 a1 = a1 + 0x1
 89799: 7b 18 40                 u64 [sp + 0x40] = a1
 89802: 33 0c 01                 a5 = 0x1
 89805: ae 46 b1 00              jump @7163 if s1 >=u t2
      :                          @7145
 89809: 33 07                    a0 = 0
 89811: c8 60 09                 a2 = ra + s1
 89814: 46 09 01                 u8 [a2 + 0] = 0x1
 89817: 96 69 18                 a2 = s1 * 0x18
 89820: 82 1a 28                 a3 = u64 [sp + 0x28]
 89823: c8 a9 09                 a2 = a2 + a3
 89826: 95 9a 10                 a3 = a2 + 0x10
 89829: 95 9b 08                 a4 = a2 + 0x8
 89832: 28 08                    jump @7147
      :                          @7146
 89834: 95 77 01                 a0 = a0 + 0x1
 89837: aa 74 1a                 jump @7150 if t2 == a0
      :                          @7147
 89840: 82 a9                    a2 = u64 [a3]
 89842: ae 97 8b 00              jump @7162 if a0 >=u a2
      :                          @7148
 89846: 82 b9                    a2 = u64 [a4]
 89848: c8 79 09                 a2 = a2 + a0
 89851: 7c 99                    a2 = u8 [a2]
 89853: 51 09 ed                 jump @7146 if a2 == 0
      :                          @7149
 89856: c8 70 09                 a2 = ra + a0
 89859: 78 9c                    u8 [a2] = a5
 89861: 28 e5                    jump @7146
      :                          @7150
 89863: 82 1a 10                 a3 = u64 [sp + 0x10]
 89866: 82 1b 08                 a4 = u64 [sp + 0x8]
 89869: 64 b7                    a0 = a4
 89871: 28 11 ff                 jump @7128
      :                          @7151
 89874: 82 17 40                 a0 = u64 [sp + 0x40]
 89877: 82 18 38                 a1 = u64 [sp + 0x38]
 89880: 82 1a 18                 a3 = u64 [sp + 0x18]
 89883: 7b a7 10                 u64 [a3 + 0x10] = a0
 89886: 7b a8 08                 u64 [a3 + 0x8] = a1
 89889: 82 17 30                 a0 = u64 [sp + 0x30]
 89892: 33 08 00 00 ff           a1 = 0xffffffffffff0000
 89897: 95 49 ff ff fe           a2 = t2 + 0xfffffffffffeffff
 89902: 7b a7                    u64 [a3] = a0
 89904: ac 89 3e                 jump @7160 if a2 <u a1
      :                          @7152
 89907: 33 07 c0 22 03           a0 = 0x322c0
 89912: 95 77 00 00 01           a0 = a0 + 0x10000
 89917: 01                       fallthrough
      :                          @7153
 89918: 82 78                    a1 = u64 [a0]
 89920: c9 87 09                 a2 = a0 - a1
 89923: ab 09 2b                 jump @7160 if a2 != ra
      :                          @7154
 89926: c9 48 09                 a2 = a1 - t2
 89929: 01                       fallthrough
      :                          @7155
 89930: 82 7a                    a3 = u64 [a0]
 89932: ab 8a f2                 jump @7153 if a3 != a1
      :                          @7156
 89935: 7b 79                    u64 [a0] = a2
 89937: 33 0b                    a4 = 0
 89939: 01                       fallthrough
      :                          @7157
 89940: ab 8a ea                 jump @7153 if a3 != a1
      :                          @7158
 89943: 28 17                    jump @7160
      :                          @7159
 89945: 49 11 30                 u64 [sp + 48] = 0
 89948: 33 08 08                 a1 = 0x8
 89951: 7b 18 38                 u64 [sp + 0x38] = a1
 89954: 49 11 40                 u64 [sp + 64] = 0
 89957: 49 17 10                 u64 [a0 + 16] = 0
 89960: 7b 78 08                 u64 [a0 + 0x8] = a1
 89963: 49 07                    u64 [a0 + 0] = 0
 89965: 01                       fallthrough
      :                          @7160
 89966: 82 10 58                 ra = u64 [sp + 0x58]
 89969: 82 15 50                 s0 = u64 [sp + 0x50]
 89972: 82 16 48                 s1 = u64 [sp + 0x48]
 89975: 95 11 60                 sp = sp + 0x60
 89978: 32 00                    ret
      :                          @7161
 89980: 00                       trap
      :                          @7162
 89981: 00                       trap
      :                          @7163
 89982: 00                       trap
      :                          @7164
 89983: 00                       trap
      :                          @7165
 89984: 00                       trap
      :                          @7166
 89985: 95 11 b0                 sp = sp + 0xffffffffffffffb0
 89988: 7b 10 48                 u64 [sp + 0x48] = ra
 89991: 7b 15 40                 u64 [sp + 0x40] = s0
 89994: 7b 16 38                 u64 [sp + 0x38] = s1
 89997: 51 09 ac 00              jump @7176 if a2 == 0
      :                          @7167
 90001: 7b 17                    u64 [sp] = a0
 90003: 82 86                    s1 = u64 [a1]
 90005: 82 8a 08                 a3 = u64 [a1 + 0x8]
 90008: 33 0b                    a4 = 0
 90010: 95 92 ff                 t0 = a2 + 0xffffffffffffffff
 90013: 7b 18 08                 u64 [sp + 0x8] = a1
 90016: 95 83 18                 t1 = a1 + 0x18
 90019: 33 08 ff                 a1 = 0xffffffffffffffff
 90022: 7b 1a 30                 u64 [sp + 0x30] = a3
 90025: 64 6c                    a5 = s1
 90027: 7b 19 10                 u64 [sp + 0x10] = a2
 90030: 28 1c                    jump @7170
      :                          @7168
 90032: 64 c9                    a2 = a5
 90034: 01                       fallthrough
      :                          @7169
 90035: 64 9c                    a5 = a2
 90037: 82 12 28                 t0 = u64 [sp + 0x28]
 90040: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 90043: 82 13 20                 t1 = u64 [sp + 0x20]
 90046: 95 33 10                 t1 = t1 + 0x10
 90049: 82 19 10                 a2 = u64 [sp + 0x10]
 90052: 82 1b 18                 a4 = u64 [sp + 0x18]
 90055: aa 9b 51                 jump @7175 if a4 == a2
      :                          @7170
 90058: 95 b7 01                 a0 = a4 + 0x1
 90061: 7b 17 18                 u64 [sp + 0x18] = a0
 90064: 7b 12 28                 u64 [sp + 0x28] = t0
 90067: 7b 13 20                 u64 [sp + 0x20] = t1
 90070: ae 97 da                 jump @7168 if a0 >=u a2
      :                          @7171
 90073: 97 bb 04                 a4 = a4 << 0x4
 90076: 82 17 08                 a0 = u64 [sp + 0x8]
 90079: c8 7b 0b                 a4 = a4 + a0
 90082: 82 b5                    s0 = u64 [a4]
 90084: 82 bb 08                 a4 = u64 [a4 + 0x8]
 90087: 64 c9                    a2 = a5
 90089: 28 0b                    jump @7173
      :                          @7172
 90091: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 90094: 95 33 10                 t1 = t1 + 0x10
 90097: 51 02 c2                 jump @7169 if t0 == 0
      :                          @7173
 90100: 82 34 f8                 t2 = u64 [t1 + 0xfffffffffffffff8]
 90103: 82 30                    ra = u64 [t1]
 90105: c9 45 0c                 a5 = s0 - t2
 90108: c9 0b 07                 a0 = a4 - ra
 90111: ca cc 0c                 a5 = a5 * a5
 90114: ca 77 07                 a0 = a0 * a0
 90117: c8 7c 0c                 a5 = a5 + a0
 90120: ae 8c e3                 jump @7172 if a5 >=u a1
      :                          @7174
 90123: 64 56                    s1 = s0
 90125: 64 ba                    a3 = a4
 90127: 64 49                    a2 = t2
 90129: 7b 10 30                 u64 [sp + 0x30] = ra
 90132: 64 c8                    a1 = a5
 90134: 28 d5                    jump @7172
      :                          @7175
 90136: 82 17                    a0 = u64 [sp]
 90138: 7b 76                    u64 [a0] = s1
 90140: 7b 7a 08                 u64 [a0 + 0x8] = a3
 90143: 7b 7c 10                 u64 [a0 + 0x10] = a5
 90146: 82 19 30                 a2 = u64 [sp + 0x30]
 90149: 7b 79 18                 u64 [a0 + 0x18] = a2
 90152: 7b 78 20                 u64 [a0 + 0x20] = a1
 90155: 82 10 48                 ra = u64 [sp + 0x48]
 90158: 82 15 40                 s0 = u64 [sp + 0x40]
 90161: 82 16 38                 s1 = u64 [sp + 0x38]
 90164: 95 11 50                 sp = sp + 0x50
 90167: 32 00                    ret
      :                          @7176
 90169: 00                       trap
      :                          @7177
 90170: 95 11 88                 sp = sp + 0xffffffffffffff88
 90173: 7b 10 70                 u64 [sp + 0x70] = ra
 90176: 7b 15 68                 u64 [sp + 0x68] = s0
 90179: 7b 16 60                 u64 [sp + 0x60] = s1
 90182: 64 95                    s0 = a2
 90184: 97 99 04                 a2 = a2 << 0x4
 90187: 7b 19 28                 u64 [sp + 0x28] = a2
 90190: 7b 17 10                 u64 [sp + 0x10] = a0
 90193: 51 05 62                 jump @7185 if s0 == 0
      :                          @7178
 90196: 64 50                    ra = s0
 90198: 98 55 3b                 s0 = s0 >> 0x3b
 90201: 52 05 f3 02              jump @7235 if s0 != 0
      :                          @7179
 90205: 88 52 01                 t0 = s0 <u 0x1
 90208: 97 22 03                 t0 = t0 << 0x3
 90211: 33 04 c0 22 03           t2 = 0x322c0
 90216: 33 03 00 00 01           t1 = 0x10000
 90221: c8 34 0b                 a4 = t2 + t1
 90224: 01                       fallthrough
      :                          @7180
 90225: 82 b6                    s1 = u64 [a4]
 90227: 82 1c 28                 a5 = u64 [sp + 0x28]
 90230: c8 6c 0c                 a5 = a5 + s1
 90233: ac 6c d2 02              jump @7234 if a5 <u s1
      :                          @7181
 90237: c8 2c 0a                 a3 = a5 + t0
 90240: d8 ca 05                 s0 = a3 <u a5
 90243: d8 a3 0a                 a3 = t1 <u a3
 90246: d4 5a 0a                 a3 = a3 | s0
 90249: 52 0a c2 02              jump @7234 if a3 != 0
      :                          @7182
 90253: c9 c4 05                 s0 = t2 - a5
 90256: c8 35 05                 s0 = s0 + t1
 90259: 84 5a 07                 a3 = s0 & 0x7
 90262: c8 ac 0c                 a5 = a5 + a3
 90265: 01                       fallthrough
      :                          @7183
 90266: 82 b7                    a0 = u64 [a4]
 90268: ab 67 d5                 jump @7180 if a0 != s1
      :                          @7184
 90271: 7b bc                    u64 [a4] = a5
 90273: c9 a5 06                 s1 = s0 - a3
 90276: 82 19 28                 a2 = u64 [sp + 0x28]
 90279: 64 05                    s0 = ra
 90281: 64 67                    a0 = s1
 90283: 33 00 22 04              ra = 0x422
 90287: 28 3a a9 01              jump @13633
      :                          @7185
 90291: 33 09                    a2 = 0
 90293: 33 06 08                 s1 = 0x8
 90296: 33 07 08                 a0 = 0x8
 90299: 50 20 22 04 2e a9 01     ra = 1058, jump @13633
      :                          @7186 [@dyn 529]
 90306: 68 57                    a0 = clz s0
 90308: 9a 7a 40                 a3 = 0x40 - a0
 90311: 64 67                    a0 = s1
 90313: 64 58                    a1 = s0
 90315: 33 09                    a2 = 0
 90317: 50 20 24 04 ea de fe     ra = 1060, jump @1218
      :                          @7187 [@dyn 530]
 90324: 49 11 30                 u64 [sp + 48] = 0
 90327: 49 11 38 08              u64 [sp + 56] = 0x8
 90331: 49 11 40                 u64 [sp + 64] = 0
 90334: 7b 15 08                 u64 [sp + 0x8] = s0
 90337: 7b 16 20                 u64 [sp + 0x20] = s1
 90340: 51 05 96 01              jump @7215 if s0 == 0
      :                          @7188
 90344: 33 08                    a1 = 0
 90346: 82 13 28                 t1 = u64 [sp + 0x28]
 90349: c8 63 03                 t1 = t1 + s1
 90352: 33 02 08                 t0 = 0x8
 90355: 33 04 02                 t2 = 0x2
 90358: 64 60                    ra = s1
 90360: 28 1d                    jump @7190
      :                          @7189
 90362: 95 00 10                 ra = ra + 0x10
 90365: 97 a7 04                 a0 = a3 << 0x4
 90368: c8 27 07                 a0 = a0 + t0
 90371: 7b 76                    u64 [a0] = s1
 90373: 82 18 28                 a1 = u64 [sp + 0x28]
 90376: 7b 78 08                 u64 [a0 + 0x8] = a1
 90379: 95 a8 01                 a1 = a3 + 0x1
 90382: 7b 18 40                 u64 [sp + 0x40] = a1
 90385: aa 30 83 00              jump @7199 if ra == t1
      :                          @7190
 90389: 82 06                    s1 = u64 [ra]
 90391: 82 07 08                 a0 = u64 [ra + 0x8]
 90394: 7b 17 28                 u64 [sp + 0x28] = a0
 90397: ac 48 4c                 jump @7196 if a1 <u t2
      :                          @7191
 90400: 97 89 04                 a2 = a1 << 0x4
 90403: c8 29 09                 a2 = a2 + t0
 90406: 95 99 f0                 a2 = a2 + 0xfffffffffffffff0
 90409: 01                       fallthrough
      :                          @7192
 90410: 82 9a f0                 a3 = u64 [a2 + 0xfffffffffffffff0]
 90413: 82 9b                    a4 = u64 [a2]
 90415: 82 9c f8                 a5 = u64 [a2 + 0xfffffffffffffff8]
 90418: 82 97 08                 a0 = u64 [a2 + 0x8]
 90421: c9 ab 0b                 a4 = a4 - a3
 90424: 82 15 28                 s0 = u64 [sp + 0x28]
 90427: c9 c5 05                 s0 = s0 - a5
 90430: ca 5b 0b                 a4 = a4 * s0
 90433: c9 c7 07                 a0 = a0 - a5
 90436: c9 6a 0a                 a3 = a3 - s1
 90439: ca a7 07                 a0 = a0 * a3
 90442: c8 b7 07                 a0 = a0 + a4
 90445: 5a 07 1c                 jump @7196 if a0 >s 0
      :                          @7193
 90448: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 90451: 33 0a 01                 a3 = 0x1
 90454: 95 99 f0                 a2 = a2 + 0xfffffffffffffff0
 90457: ac 8a d1                 jump @7192 if a3 <u a1
      :                          @7194
 90460: 82 18 30                 a1 = u64 [sp + 0x30]
 90463: 49 11 40 01              u64 [sp + 64] = 0x1
 90467: 52 18 01 97              jump @7189 if a1 != 1
      :                          @7195
 90471: 28 0d                    jump @7197
      :                          @7196
 90473: 64 8a                    a3 = a1
 90475: 82 18 30                 a1 = u64 [sp + 0x30]
 90478: 7b 1a 40                 u64 [sp + 0x40] = a3
 90481: ab 8a 89                 jump @7189 if a3 != a1
      :                          @7197
 90484: 95 17 30                 a0 = sp + 0x30
 90487: 64 35                    s0 = t1
 90489: 7b 10 18                 u64 [sp + 0x18] = ra
 90492: 50 20 26 04 c6 f2 fe     ra = 1062, jump @1605
      :                          @7198 [@dyn 531]
 90499: 82 10 18                 ra = u64 [sp + 0x18]
 90502: 33 04 02                 t2 = 0x2
 90505: 64 53                    t1 = s0
 90507: 82 1a 40                 a3 = u64 [sp + 0x40]
 90510: 82 12 38                 t0 = u64 [sp + 0x38]
 90513: 28 69 ff                 jump @7189
      :                          @7199
 90516: 33 05                    s0 = 0
 90518: 49 11 48                 u64 [sp + 72] = 0
 90521: 33 02 08                 t0 = 0x8
 90524: 7b 12 50                 u64 [sp + 0x50] = t0
 90527: 49 11 58                 u64 [sp + 88] = 0
 90530: 28 1d                    jump @7201
      :                          @7200
 90532: 95 33 f0                 t1 = t1 + 0xfffffffffffffff0
 90535: 97 69 04                 a2 = s1 << 0x4
 90538: c8 92 07                 a0 = t0 + a2
 90541: 7b 70                    u64 [a0] = ra
 90543: 7b 74 08                 u64 [a0 + 0x8] = t2
 90546: 95 65 01                 s0 = s1 + 0x1
 90549: 7b 15 58                 u64 [sp + 0x58] = s0
 90552: 82 17 20                 a0 = u64 [sp + 0x20]
 90555: aa 37 80 00              jump @7210 if a0 == t1
      :                          @7201
 90559: 82 30 f0                 ra = u64 [t1 + 0xfffffffffffffff0]
 90562: 82 34 f8                 t2 = u64 [t1 + 0xfffffffffffffff8]
 90565: 53 15 02 4a              jump @7207 if s0 <u 2
      :                          @7202
 90569: 97 59 04                 a2 = s0 << 0x4
 90572: c8 29 09                 a2 = a2 + t0
 90575: 95 99 f0                 a2 = a2 + 0xfffffffffffffff0
 90578: 01                       fallthrough
      :                          @7203
 90579: 82 9a f0                 a3 = u64 [a2 + 0xfffffffffffffff0]
 90582: 82 9b                    a4 = u64 [a2]
 90584: 82 9c f8                 a5 = u64 [a2 + 0xfffffffffffffff8]
 90587: 82 98 08                 a1 = u64 [a2 + 0x8]
 90590: c9 ab 0b                 a4 = a4 - a3
 90593: c9 c4 07                 a0 = t2 - a5
 90596: ca 7b 07                 a0 = a4 * a0
 90599: c9 c8 08                 a1 = a1 - a5
 90602: c9 0a 0a                 a3 = a3 - ra
 90605: ca a8 0a                 a3 = a1 * a3
 90608: c8 a7 07                 a0 = a0 + a3
 90611: 5a 07 1c                 jump @7207 if a0 >s 0
      :                          @7204
 90614: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 90617: 33 06 01                 s1 = 0x1
 90620: 95 99 f0                 a2 = a2 + 0xfffffffffffffff0
 90623: ac 56 d4                 jump @7203 if s1 <u s0
      :                          @7205
 90626: 82 18 48                 a1 = u64 [sp + 0x48]
 90629: 49 11 58 01              u64 [sp + 88] = 0x1
 90633: 52 18 01 9b              jump @7200 if a1 != 1
      :                          @7206
 90637: 28 0d                    jump @7208
      :                          @7207
 90639: 64 56                    s1 = s0
 90641: 82 18 48                 a1 = u64 [sp + 0x48]
 90644: 7b 15 58                 u64 [sp + 0x58] = s0
 90647: ab 85 8d                 jump @7200 if s0 != a1
      :                          @7208
 90650: 95 17 48                 a0 = sp + 0x48
 90653: 64 35                    s0 = t1
 90655: 7b 14 28                 u64 [sp + 0x28] = t2
 90658: 64 06                    s1 = ra
 90660: 50 20 28 04 1e f2 fe     ra = 1064, jump @1605
      :                          @7209 [@dyn 532]
 90667: 64 60                    ra = s1
 90669: 82 14 28                 t2 = u64 [sp + 0x28]
 90672: 64 53                    t1 = s0
 90674: 82 16 58                 s1 = u64 [sp + 0x58]
 90677: 82 12 50                 t0 = u64 [sp + 0x50]
 90680: 28 6c ff                 jump @7200
      :                          @7210
 90683: 82 17 40                 a0 = u64 [sp + 0x40]
 90686: 51 07 53                 jump @7216 if a0 == 0
      :                          @7211
 90689: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 90692: 7b 18 40                 u64 [sp + 0x40] = a1
 90695: 82 17 48                 a0 = u64 [sp + 0x48]
 90698: 7b 17 28                 u64 [sp + 0x28] = a0
 90701: 51 05 4f                 jump @7217 if s0 == 0
      :                          @7212
 90704: 82 17 30                 a0 = u64 [sp + 0x30]
 90707: 7b 16 58                 u64 [sp + 0x58] = s1
 90710: 82 1a 50                 a3 = u64 [sp + 0x50]
 90713: c9 87 07                 a0 = a0 - a1
 90716: ae 67 48                 jump @7218 if a0 >=u s1
      :                          @7213
 90719: 95 17 30                 a0 = sp + 0x30
 90722: 7b 19 18                 u64 [sp + 0x18] = a2
 90725: 64 69                    a2 = s1
 90727: 7b 1a                    u64 [sp] = a3
 90729: 50 20 2a 04 d2 f3 fe     ra = 1066, jump @1653
      :                          @7214 [@dyn 533]
 90736: 82 1a                    a3 = u64 [sp]
 90738: 82 19 18                 a2 = u64 [sp + 0x18]
 90741: 82 18 40                 a1 = u64 [sp + 0x40]
 90744: 28 2c                    jump @7218
      :                          @7215
 90746: 33 09                    a2 = 0
 90748: 33 06                    s1 = 0
 90750: 49 11 28                 u64 [sp + 40] = 0
 90753: 33 08                    a1 = 0
 90755: 49 11 48                 u64 [sp + 72] = 0
 90758: 33 0a 08                 a3 = 0x8
 90761: 7b 1a 50                 u64 [sp + 0x50] = a3
 90764: 49 11 58                 u64 [sp + 88] = 0
 90767: 28 15                    jump @7218
      :                          @7216
 90769: 33 08                    a1 = 0
 90771: 82 17 48                 a0 = u64 [sp + 0x48]
 90774: 7b 17 28                 u64 [sp + 0x28] = a0
 90777: 52 05 b7                 jump @7212 if s0 != 0
      :                          @7217
 90780: 82 1a 50                 a3 = u64 [sp + 0x50]
 90783: 33 09                    a2 = 0
 90785: 33 06                    s1 = 0
 90787: 01                       fallthrough
      :                          @7218
 90788: 7b 18 18                 u64 [sp + 0x18] = a1
 90791: 82 17 38                 a0 = u64 [sp + 0x38]
 90794: 97 88 04                 a1 = a1 << 0x4
 90797: c8 87 07                 a0 = a0 + a1
 90800: 64 a8                    a1 = a3
 90802: 64 a5                    s0 = a3
 90804: 50 20 2c 04 35 a7 01     ra = 1068, jump @13633
      :                          @7219 [@dyn 534]
 90811: 64 5c                    a5 = s0
 90813: 82 15 18                 s0 = u64 [sp + 0x18]
 90816: c8 65 05                 s0 = s0 + s1
 90819: 7b 15 40                 u64 [sp + 0x40] = s0
 90822: 82 16 28                 s1 = u64 [sp + 0x28]
 90825: 51 06 2c                 jump @7226 if s1 == 0
      :                          @7220
 90828: 56 26 00 10 29           jump @7226 if s1 >u 4096
      :                          @7221
 90833: 97 66 04                 s1 = s1 << 0x4
 90836: 33 07 c0 22 03           a0 = 0x322c0
 90841: 95 77 00 00 01           a0 = a0 + 0x10000
 90846: 01                       fallthrough
      :                          @7222
 90847: 82 78                    a1 = u64 [a0]
 90849: c9 87 09                 a2 = a0 - a1
 90852: ab c9 11                 jump @7226 if a2 != a5
      :                          @7223
 90855: c9 68 09                 a2 = a1 - s1
 90858: 01                       fallthrough
      :                          @7224
 90859: 82 7a                    a3 = u64 [a0]
 90861: ab 8a f2                 jump @7222 if a3 != a1
      :                          @7225
 90864: 7b 79                    u64 [a0] = a2
 90866: 33 0b                    a4 = 0
 90868: 01                       fallthrough
      :                          @7226
 90869: 82 17 40                 a0 = u64 [sp + 0x40]
 90872: 82 18 38                 a1 = u64 [sp + 0x38]
 90875: 82 19 30                 a2 = u64 [sp + 0x30]
 90878: 82 1a 10                 a3 = u64 [sp + 0x10]
 90881: 7b a7 10                 u64 [a3 + 0x10] = a0
 90884: 7b a8 08                 u64 [a3 + 0x8] = a1
 90887: 7b a9                    u64 [a3] = a2
 90889: 82 18 08                 a1 = u64 [sp + 0x8]
 90892: 82 16 20                 s1 = u64 [sp + 0x20]
 90895: 51 08 2e                 jump @7233 if a1 == 0
      :                          @7227
 90898: 33 07 00 10              a0 = 0x1000
 90902: ac 87 27                 jump @7233 if a0 <u a1
      :                          @7228
 90905: 97 87 04                 a0 = a1 << 0x4
 90908: 33 08 c0 22 03           a1 = 0x322c0
 90913: 95 88 00 00 01           a1 = a1 + 0x10000
 90918: 01                       fallthrough
      :                          @7229
 90919: 82 89                    a2 = u64 [a1]
 90921: c9 98 0a                 a3 = a1 - a2
 90924: ab 6a 11                 jump @7233 if a3 != s1
      :                          @7230
 90927: c9 79 0a                 a3 = a2 - a0
 90930: 01                       fallthrough
      :                          @7231
 90931: 82 8b                    a4 = u64 [a1]
 90933: ab 9b f2                 jump @7229 if a4 != a2
      :                          @7232
 90936: 7b 8a                    u64 [a1] = a3
 90938: 33 0c                    a5 = 0
 90940: 01                       fallthrough
      :                          @7233
 90941: 82 10 70                 ra = u64 [sp + 0x70]
 90944: 82 15 68                 s0 = u64 [sp + 0x68]
 90947: 82 16 60                 s1 = u64 [sp + 0x60]
 90950: 95 11 78                 sp = sp + 0x78
 90953: 32 00                    ret
      :                          @7234
 90955: 00                       trap
      :                          @7235
 90956: 00                       trap
      :                          @7236 [@dyn 535]
 90957: 82 18 60                 a1 = u64 [sp + 0x60]
 90960: 55 18 02 3d              jump @7245 if a1 >=u 2
      :                          @7237
 90964: 82 18 50                 a1 = u64 [sp + 0x50]
 90967: 51 08 31                 jump @7244 if a1 == 0
      :                          @7238
 90970: 56 28 00 10 2e           jump @7244 if a1 >u 4096
      :                          @7239
 90975: 82 17 58                 a0 = u64 [sp + 0x58]
 90978: 97 88 04                 a1 = a1 << 0x4
 90981: 33 09 c0 22 03           a2 = 0x322c0
 90986: 95 99 00 00 01           a2 = a2 + 0x10000
 90991: 01                       fallthrough
      :                          @7240
 90992: 82 9a                    a3 = u64 [a2]
 90994: c9 a9 0b                 a4 = a2 - a3
 90997: ab 7b 13                 jump @7244 if a4 != a0
      :                          @7241
 91000: c9 8a 0b                 a4 = a3 - a1
 91003: 01                       fallthrough
      :                          @7242
 91004: 82 9c                    a5 = u64 [a2]
 91006: ab ac f2                 jump @7240 if a5 != a3
      :                          @7243
 91009: 7b 9b                    u64 [a2] = a4
 91011: 33 07                    a0 = 0
 91013: 28 26 01                 jump @7257
      :                          @7244
 91016: 33 07                    a0 = 0
 91018: 28 21 01                 jump @7257
      :                          @7245
 91021: 82 17 58                 a0 = u64 [sp + 0x58]
 91024: 7b 17 40                 u64 [sp + 0x40] = a0
 91027: 33 07                    a0 = 0
 91029: 33 09                    a2 = 0
 91031: 33 0a 01                 a3 = 0x1
 91034: 01                       fallthrough
      :                          @7246
 91035: 7b 17 18                 u64 [sp + 0x18] = a0
 91038: 97 97 04                 a0 = a2 << 0x4
 91041: 95 9b 01                 a4 = a2 + 0x1
 91044: d3 8b 09                 a2 = a4 ^ a1
 91047: 7b 1b 10                 u64 [sp + 0x10] = a4
 91050: 93 9b                    a4 = 0 if a2 == 0
 91052: 82 19 40                 a2 = u64 [sp + 0x40]
 91055: c8 97 07                 a0 = a0 + a2
 91058: 82 7c 08                 a5 = u64 [a0 + 0x8]
 91061: 97 bb 04                 a4 = a4 << 0x4
 91064: c8 9b 0b                 a4 = a4 + a2
 91067: 82 b9                    a2 = u64 [a4]
 91069: 82 bb 08                 a4 = u64 [a4 + 0x8]
 91072: 82 77                    a0 = u64 [a0]
 91074: 7b 1b                    u64 [sp] = a4
 91076: 7b 1c 48                 u64 [sp + 0x48] = a5
 91079: c9 cb 0b                 a4 = a4 - a5
 91082: 7b 1b 30                 u64 [sp + 0x30] = a4
 91085: 7b 19 08                 u64 [sp + 0x8] = a2
 91088: 7b 17 38                 u64 [sp + 0x38] = a0
 91091: c9 79 09                 a2 = a2 - a0
 91094: 7b 19 28                 u64 [sp + 0x28] = a2
 91097: 64 a9                    a2 = a3
 91099: 01                       fallthrough
      :                          @7247
 91100: 64 97                    a0 = a2
 91102: ae 89 dc 00              jump @7258 if a2 >=u a1
      :                          @7248
 91106: 95 79 01                 a2 = a0 + 0x1
 91109: d3 89 0a                 a3 = a2 ^ a1
 91112: 93 a9                    a2 = 0 if a3 == 0
 91114: 97 9a 04                 a3 = a2 << 0x4
 91117: 82 1c 40                 a5 = u64 [sp + 0x40]
 91120: c8 ca 0a                 a3 = a3 + a5
 91123: 82 ab                    a4 = u64 [a3]
 91125: 82 aa 08                 a3 = u64 [a3 + 0x8]
 91128: 82 14 38                 t2 = u64 [sp + 0x38]
 91131: c9 b4 0b                 a4 = t2 - a4
 91134: 82 13 30                 t1 = u64 [sp + 0x30]
 91137: ca 3b 0b                 a4 = a4 * t1
 91140: 82 15 48                 s0 = u64 [sp + 0x48]
 91143: c9 5a 0a                 a3 = a3 - s0
 91146: 82 16 28                 s1 = u64 [sp + 0x28]
 91149: ca 6a 0a                 a3 = a3 * s1
 91152: c8 ab 0b                 a4 = a4 + a3
 91155: 97 7a 04                 a3 = a0 << 0x4
 91158: c8 ca 0a                 a3 = a3 + a5
 91161: 7b 17 20                 u64 [sp + 0x20] = a0
 91164: 82 a2 08                 t0 = u64 [a3 + 0x8]
 91167: 9a b0                    ra = -a4
 91169: 82 a7                    a0 = u64 [a3]
 91171: e3 0b 0c                 a5 = maxs(a4, ra)
 91174: c9 52 0b                 a4 = t0 - s0
 91177: 64 8a                    a3 = a1
 91179: ca 6b 05                 s0 = a4 * s1
 91182: c9 74 0b                 a4 = t2 - a0
 91185: ca 3b 08                 a1 = a4 * t1
 91188: c8 58 08                 a1 = a1 + s0
 91191: 9a 85                    s0 = -a1
 91193: e3 58 05                 s0 = maxs(a1, s0)
 91196: 64 a8                    a1 = a3
 91198: ad c5 9e                 jump @7247 if s0 <s a5
      :                          @7249
 91201: 82 19 48                 a2 = u64 [sp + 0x48]
 91204: c9 29 0c                 a5 = a2 - t0
 91207: ca bb 09                 a2 = a4 * a4
 91210: ca cc 0b                 a4 = a5 * a5
 91213: c8 9b 0b                 a4 = a4 + a2
 91216: 82 19 18                 a2 = u64 [sp + 0x18]
 91219: e4 b9 0b                 a4 = maxu(a2, a4)
 91222: 82 19 08                 a2 = u64 [sp + 0x8]
 91225: c9 79 07                 a0 = a2 - a0
 91228: 82 19                    a2 = u64 [sp]
 91230: c9 29 09                 a2 = a2 - t0
 91233: ca 77 07                 a0 = a0 * a0
 91236: ca 99 09                 a2 = a2 * a2
 91239: c8 97 07                 a0 = a0 + a2
 91242: e4 7b 07                 a0 = maxu(a4, a0)
 91245: 82 19 10                 a2 = u64 [sp + 0x10]
 91248: 82 1a 20                 a3 = u64 [sp + 0x20]
 91251: ab 89 28 ff              jump @7246 if a2 != a1
      :                          @7250
 91255: 82 16 50                 s1 = u64 [sp + 0x50]
 91258: 51 06 31                 jump @7257 if s1 == 0
      :                          @7251
 91261: 33 08 00 10              a1 = 0x1000
 91265: ac 68 2a                 jump @7257 if a1 <u s1
      :                          @7252
 91268: 97 66 04                 s1 = s1 << 0x4
 91271: 33 08 c0 22 03           a1 = 0x322c0
 91276: 95 88 00 00 01           a1 = a1 + 0x10000
 91281: 01                       fallthrough
      :                          @7253
 91282: 82 89                    a2 = u64 [a1]
 91284: c9 98 0a                 a3 = a1 - a2
 91287: 82 1b 40                 a4 = u64 [sp + 0x40]
 91290: ab ba 11                 jump @7257 if a3 != a4
      :                          @7254
 91293: c9 69 0a                 a3 = a2 - s1
 91296: 01                       fallthrough
      :                          @7255
 91297: 82 8b                    a4 = u64 [a1]
 91299: ab 9b ef                 jump @7253 if a4 != a2
      :                          @7256
 91302: 7b 8a                    u64 [a1] = a3
 91304: 33 0c                    a5 = 0
 91306: 01                       fallthrough
      :                          @7257
 91307: 82 10 78                 ra = u64 [sp + 0x78]
 91310: 82 15 70                 s0 = u64 [sp + 0x70]
 91313: 82 16 68                 s1 = u64 [sp + 0x68]
 91316: 95 11 80 00              sp = sp + 0x80
 91320: 32 00                    ret
      :                          @7258
 91322: 00                       trap
      :                          @7259
 91323: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 91326: 7b 10 30                 u64 [sp + 0x30] = ra
 91329: 7b 15 28                 u64 [sp + 0x28] = s0
 91332: 7b 16 20                 u64 [sp + 0x20] = s1
 91335: 64 86                    s1 = a1
 91337: 7b 17                    u64 [sp] = a0
 91339: 49 11 08                 u64 [sp + 8] = 0
 91342: 33 07 08                 a0 = 0x8
 91345: 7b 17 10                 u64 [sp + 0x10] = a0
 91348: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 91351: 33 05 02                 s0 = 0x2
 91354: 49 11 18                 u64 [sp + 24] = 0
 91357: ac 58 42                 jump @7265 if a1 <u s0
      :                          @7260
 91360: 33 08                    a1 = 0
 91362: 33 0b 18                 a4 = 0x18
 91365: 28 1f                    jump @7262
      :                          @7261
 91367: 95 59 ff                 a2 = s0 + 0xffffffffffffffff
 91370: ca b8 0a                 a3 = a1 * a4
 91373: c8 7a 0a                 a3 = a3 + a0
 91376: 49 0a                    u64 [a3 + 0] = 0
 91378: 7b a9 08                 u64 [a3 + 0x8] = a2
 91381: 7b a5 10                 u64 [a3 + 0x10] = s0
 91384: 95 88 01                 a1 = a1 + 0x1
 91387: 95 55 01                 s0 = s0 + 0x1
 91390: 7b 18 18                 u64 [sp + 0x18] = a1
 91393: aa 56 1e                 jump @7265 if s1 == s0
      :                          @7262
 91396: 82 19 08                 a2 = u64 [sp + 0x8]
 91399: ab 98 e0                 jump @7261 if a1 != a2
      :                          @7263
 91402: 95 17 08                 a0 = sp + 0x8
 91405: 50 20 30 04 b3 ee fe     ra = 1072, jump @1593
      :                          @7264 [@dyn 536]
 91412: 33 0b 18                 a4 = 0x18
 91415: 82 18 18                 a1 = u64 [sp + 0x18]
 91418: 82 17 10                 a0 = u64 [sp + 0x10]
 91421: 28 ca                    jump @7261
      :                          @7265
 91423: 82 17 18                 a0 = u64 [sp + 0x18]
 91426: 82 18 10                 a1 = u64 [sp + 0x10]
 91429: 82 19 08                 a2 = u64 [sp + 0x8]
 91432: 82 1a                    a3 = u64 [sp]
 91434: 7b a7 10                 u64 [a3 + 0x10] = a0
 91437: 7b a8 08                 u64 [a3 + 0x8] = a1
 91440: 7b a9                    u64 [a3] = a2
 91442: 82 10 30                 ra = u64 [sp + 0x30]
 91445: 82 15 28                 s0 = u64 [sp + 0x28]
 91448: 82 16 20                 s1 = u64 [sp + 0x20]
 91451: 95 11 38                 sp = sp + 0x38
 91454: 32 00                    ret
      :                          @7266
 91456: 95 11 90                 sp = sp + 0xffffffffffffff90
 91459: 7b 10 68                 u64 [sp + 0x68] = ra
 91462: 7b 15 60                 u64 [sp + 0x60] = s0
 91465: 7b 16 58                 u64 [sp + 0x58] = s1
 91468: 7b 1a 10                 u64 [sp + 0x10] = a3
 91471: 49 11 40                 u64 [sp + 64] = 0
 91474: 33 0a 08                 a3 = 0x8
 91477: 7b 1a 48                 u64 [sp + 0x48] = a3
 91480: 49 11 50                 u64 [sp + 80] = 0
 91483: 51 09 90 00              jump @7275 if a2 == 0
      :                          @7267
 91487: 51 0b 8c 00              jump @7275 if a4 == 0
      :                          @7268
 91491: 7b 17                    u64 [sp] = a0
 91493: 33 0a                    a3 = 0
 91495: 97 99 04                 a2 = a2 << 0x4
 91498: c8 89 09                 a2 = a2 + a1
 91501: 7b 19 08                 u64 [sp + 0x8] = a2
 91504: 97 bb 04                 a4 = a4 << 0x4
 91507: 82 17 10                 a0 = u64 [sp + 0x10]
 91510: c8 b7 02                 t0 = a0 + a4
 91513: 33 07 08                 a0 = 0x8
 91516: 7b 12 20                 u64 [sp + 0x20] = t0
 91519: 28 0e                    jump @7270
      :                          @7269
 91521: 82 18 18                 a1 = u64 [sp + 0x18]
 91524: 95 88 10                 a1 = a1 + 0x10
 91527: 82 19 08                 a2 = u64 [sp + 0x8]
 91530: aa 98 6c                 jump @7276 if a1 == a2
      :                          @7270
 91533: 82 8c                    a5 = u64 [a1]
 91535: 7b 18 18                 u64 [sp + 0x18] = a1
 91538: 82 8b 08                 a4 = u64 [a1 + 0x8]
 91541: 82 15 10                 s0 = u64 [sp + 0x10]
 91544: 7b 1c 30                 u64 [sp + 0x30] = a5
 91547: 7b 1b 28                 u64 [sp + 0x28] = a4
 91550: 28 1f                    jump @7272
      :                          @7271
 91552: c8 c9 08                 a1 = a2 + a5
 91555: c8 b6 06                 s1 = s1 + a4
 91558: 97 a9 04                 a2 = a3 << 0x4
 91561: c8 79 09                 a2 = a2 + a0
 91564: 7b 98                    u64 [a2] = a1
 91566: 7b 96 08                 u64 [a2 + 0x8] = s1
 91569: 95 aa 01                 a3 = a3 + 0x1
 91572: 95 55 10                 s0 = s0 + 0x10
 91575: 7b 1a 50                 u64 [sp + 0x50] = a3
 91578: aa 25 c7                 jump @7269 if s0 == t0
      :                          @7272
 91581: 82 59                    a2 = u64 [s0]
 91583: 82 18 40                 a1 = u64 [sp + 0x40]
 91586: 82 56 08                 s1 = u64 [s0 + 0x8]
 91589: ab 8a db                 jump @7271 if a3 != a1
      :                          @7273
 91592: 95 17 40                 a0 = sp + 0x40
 91595: 64 a8                    a1 = a3
 91597: 7b 19 38                 u64 [sp + 0x38] = a2
 91600: 50 20 32 04 72 ee fe     ra = 1074, jump @1605
      :                          @7274 [@dyn 537]
 91607: 82 19 38                 a2 = u64 [sp + 0x38]
 91610: 82 1b 28                 a4 = u64 [sp + 0x28]
 91613: 82 1c 30                 a5 = u64 [sp + 0x30]
 91616: 82 12 20                 t0 = u64 [sp + 0x20]
 91619: 82 1a 50                 a3 = u64 [sp + 0x50]
 91622: 82 17 48                 a0 = u64 [sp + 0x48]
 91625: 28 b7                    jump @7271
      :                          @7275
 91627: 49 07                    u64 [a0 + 0] = 0
 91629: 49 17 08 08              u64 [a0 + 8] = 0x8
 91633: 49 17 10                 u64 [a0 + 16] = 0
 91636: 28 42                    jump @7284
      :                          @7276
 91638: 82 15 48                 s0 = u64 [sp + 0x48]
 91641: 82 16 40                 s1 = u64 [sp + 0x40]
 91644: 82 17                    a0 = u64 [sp]
 91646: 64 58                    a1 = s0
 91648: 64 a9                    a2 = a3
 91650: 50 20 34 04 38 fa        ra = 1076, jump @7177
      :                          @7277 [@dyn 538]
 91656: 51 06 2e                 jump @7284 if s1 == 0
      :                          @7278
 91659: 33 07 00 10              a0 = 0x1000
 91663: ac 67 27                 jump @7284 if a0 <u s1
      :                          @7279
 91666: 97 67 04                 a0 = s1 << 0x4
 91669: 33 08 c0 22 03           a1 = 0x322c0
 91674: 95 88 00 00 01           a1 = a1 + 0x10000
 91679: 01                       fallthrough
      :                          @7280
 91680: 82 89                    a2 = u64 [a1]
 91682: c9 98 0a                 a3 = a1 - a2
 91685: ab 5a 11                 jump @7284 if a3 != s0
      :                          @7281
 91688: c9 79 0a                 a3 = a2 - a0
 91691: 01                       fallthrough
      :                          @7282
 91692: 82 8b                    a4 = u64 [a1]
 91694: ab 9b f2                 jump @7280 if a4 != a2
      :                          @7283
 91697: 7b 8a                    u64 [a1] = a3
 91699: 33 0c                    a5 = 0
 91701: 01                       fallthrough
      :                          @7284
 91702: 82 10 68                 ra = u64 [sp + 0x68]
 91705: 82 15 60                 s0 = u64 [sp + 0x60]
 91708: 82 16 58                 s1 = u64 [sp + 0x58]
 91711: 95 11 70                 sp = sp + 0x70
 91714: 32 00                    ret
      :                          @7285
 91716: 95 11 c8 fe              sp = sp + 0xfffffffffffffec8
 91720: 7b 10 30 01              u64 [sp + 0x130] = ra
 91724: 7b 15 28 01              u64 [sp + 0x128] = s0
 91728: 7b 16 20 01              u64 [sp + 0x120] = s1
 91732: 82 89 10                 a2 = u64 [a1 + 0x10]
 91735: 7b 17                    u64 [sp] = a0
 91737: 51 09 5c 03              jump @7320 if a2 == 0
      :                          @7286
 91741: 57 09 92 03              jump @7326 if a2 <s 0
      :                          @7287
 91745: 7b 18 e8 00              u64 [sp + 0xe8] = a1
 91749: 85 97 ff                 a0 = a2 ^ 0xffffffffffffffff
 91752: 98 77 3f                 a0 = a0 >> 0x3f
 91755: 33 08 c0 22 03           a1 = 0x322c0
 91760: 33 05 00 00 01           s0 = 0x10000
 91765: c8 58 08                 a1 = a1 + s0
 91768: 01                       fallthrough
      :                          @7288
 91769: 82 8b                    a4 = u64 [a1]
 91771: c8 9b 0a                 a3 = a4 + a2
 91774: ac ba 70 03              jump @7325 if a3 <u a4
      :                          @7289
 91778: c8 7a 0c                 a5 = a3 + a0
 91781: d8 ac 06                 s1 = a5 <u a3
 91784: d8 c5 0c                 a5 = s0 <u a5
 91787: d4 6c 0c                 a5 = a5 | s1
 91790: 52 0c 60 03              jump @7325 if a5 != 0
      :                          @7290
 91794: 82 8c                    a5 = u64 [a1]
 91796: ab bc e5                 jump @7288 if a5 != a4
      :                          @7291
 91799: 7b 8a                    u64 [a1] = a3
 91801: 33 06                    s1 = 0
 91803: 33 05 c0 22 04           s0 = 0x422c0
 91808: c9 a5 05                 s0 = s0 - a3
 91811: 64 57                    a0 = s0
 91813: 33 08                    a1 = 0
 91815: 7b 19 40                 u64 [sp + 0x40] = a2
 91818: 50 20 36 04 6c a5 01     ra = 1078, jump @13687
      :                          @7292 [@dyn 539]
 91825: 82 17 40                 a0 = u64 [sp + 0x40]
 91828: 7b 17 08 01              u64 [sp + 0x108] = a0
 91832: 7b 15 10 01              u64 [sp + 0x110] = s0
 91836: 82 17 40                 a0 = u64 [sp + 0x40]
 91839: 7b 17 18 01              u64 [sp + 0x118] = a0
 91843: 95 17 f0 00              a0 = sp + 0xf0
 91847: 95 18 08 01              a1 = sp + 0x108
 91851: 82 19 40                 a2 = u64 [sp + 0x40]
 91854: 50 20 38 04 b5 fe fe     ra = 1080, jump @1907
      :                          @7293 [@dyn 540]
 91861: 82 18 40                 a1 = u64 [sp + 0x40]
 91864: 82 17 e8 00              a0 = u64 [sp + 0xe8]
 91868: 82 77 08                 a0 = u64 [a0 + 0x8]
 91871: 33 0a                    a3 = 0
 91873: 82 19 00 01              a2 = u64 [sp + 0x100]
 91877: 7b 19 10                 u64 [sp + 0x10] = a2
 91880: 82 19 f8 00              a2 = u64 [sp + 0xf8]
 91884: 7b 19 28                 u64 [sp + 0x28] = a2
 91887: 7b 17 a0 00              u64 [sp + 0xa0] = a0
 91891: 95 77 08                 a0 = a0 + 0x8
 91894: 7b 17 38                 u64 [sp + 0x38] = a0
 91897: 9a 80                    ra = -a1
 91899: 7b 10 88 00              u64 [sp + 0x88] = ra
 91903: 28 09                    jump @7295
      :                          @7294
 91905: 82 1a 08                 a3 = u64 [sp + 0x8]
 91908: aa 8a bf 02              jump @7321 if a3 == a1
      :                          @7295
 91912: 7b 1a 30                 u64 [sp + 0x30] = a3
 91915: 95 a7 01                 a0 = a3 + 0x1
 91918: 7b 17 08                 u64 [sp + 0x8] = a0
 91921: ae 87 f0                 jump @7294 if a0 >=u a1
      :                          @7296
 91924: 82 1a 30                 a3 = u64 [sp + 0x30]
 91927: 95 a7 02                 a0 = a3 + 0x2
 91930: 97 a8 04                 a1 = a3 << 0x4
 91933: 82 19 a0 00              a2 = u64 [sp + 0xa0]
 91937: c8 98 08                 a1 = a1 + a2
 91940: 7b 18 50                 u64 [sp + 0x50] = a1
 91943: 95 88 08                 a1 = a1 + 0x8
 91946: 7b 18 48                 u64 [sp + 0x48] = a1
 91949: 96 a8 18                 a1 = a3 * 0x18
 91952: 82 19 28                 a2 = u64 [sp + 0x28]
 91955: c8 98 08                 a1 = a1 + a2
 91958: 95 89 10                 a2 = a1 + 0x10
 91961: 7b 19 20                 u64 [sp + 0x20] = a2
 91964: 95 88 08                 a1 = a1 + 0x8
 91967: 7b 18 18                 u64 [sp + 0x18] = a1
 91970: 82 19 08                 a2 = u64 [sp + 0x8]
 91973: 28 1b                    jump @7299
      :                          @7297
 91975: 82 77 08                 a0 = u64 [a0 + 0x8]
 91978: c8 b7 07                 a0 = a0 + a4
 91981: 46 07 01                 u8 [a0 + 0] = 0x1
 91984: 01                       fallthrough
      :                          @7298
 91985: 82 18 40                 a1 = u64 [sp + 0x40]
 91988: 82 19 60                 a2 = u64 [sp + 0x60]
 91991: d8 89 07                 a0 = a2 <u a1
 91994: c8 97 07                 a0 = a0 + a2
 91997: ae 89 a4                 jump @7294 if a2 >=u a1
      :                          @7299
 92000: 82 18 50                 a1 = u64 [sp + 0x50]
 92003: 82 8a                    a3 = u64 [a1]
 92005: 82 18 48                 a1 = u64 [sp + 0x48]
 92008: 82 8b                    a4 = u64 [a1]
 92010: 7b 19 58                 u64 [sp + 0x58] = a2
 92013: 97 98 04                 a1 = a2 << 0x4
 92016: 82 19 a0 00              a2 = u64 [sp + 0xa0]
 92020: c8 98 08                 a1 = a1 + a2
 92023: 82 89                    a2 = u64 [a1]
 92025: 82 88 08                 a1 = u64 [a1 + 0x8]
 92028: 7b 17 60                 u64 [sp + 0x60] = a0
 92031: c9 a9 07                 a0 = a2 - a3
 92034: 7b 17 98 00              u64 [sp + 0x98] = a0
 92038: c9 b8 07                 a0 = a1 - a4
 92041: 7b 17 90 00              u64 [sp + 0x90] = a0
 92045: e5 9a 07                 a0 = mins(a3, a2)
 92048: 7b 17 80 00              u64 [sp + 0x80] = a0
 92052: 7b 1a c0 00              u64 [sp + 0xc0] = a3
 92056: 7b 19 b0 00              u64 [sp + 0xb0] = a2
 92060: e3 9a 07                 a0 = maxs(a3, a2)
 92063: 7b 17 78                 u64 [sp + 0x78] = a0
 92066: e5 8b 07                 a0 = mins(a4, a1)
 92069: 7b 17 70                 u64 [sp + 0x70] = a0
 92072: 7b 1b b8 00              u64 [sp + 0xb8] = a4
 92076: 7b 18 a8 00              u64 [sp + 0xa8] = a1
 92080: e3 8b 07                 a0 = maxs(a4, a1)
 92083: 7b 17 68                 u64 [sp + 0x68] = a0
 92086: 33 0a 01                 a3 = 0x1
 92089: 82 19 38                 a2 = u64 [sp + 0x38]
 92092: 28 18                    jump @7301
      :                          @7300
 92094: 82 1a e0 00              a3 = u64 [sp + 0xe0]
 92098: 95 aa 01                 a3 = a3 + 0x1
 92101: c8 a0 07                 a0 = ra + a3
 92104: 82 19 e8 00              a2 = u64 [sp + 0xe8]
 92108: 95 99 10                 a2 = a2 + 0x10
 92111: 51 17 01 b3 01           jump @7315 if a0 == 1
      :                          @7301
 92116: c8 a0 07                 a0 = ra + a3
 92119: 7b 1a e0 00              u64 [sp + 0xe0] = a3
 92123: 64 a8                    a1 = a3
 92125: 93 78                    a1 = 0 if a0 == 0
 92127: 82 93                    t1 = u64 [a2]
 92129: 7b 19 e8 00              u64 [sp + 0xe8] = a2
 92133: 82 96 f8                 s1 = u64 [a2 + 0xfffffffffffffff8]
 92136: 97 88 04                 a1 = a1 << 0x4
 92139: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 92143: c8 78 08                 a1 = a1 + a0
 92146: 82 8b                    a4 = u64 [a1]
 92148: 82 89 08                 a2 = u64 [a1 + 0x8]
 92151: 82 1a b8 00              a3 = u64 [sp + 0xb8]
 92155: c9 a3 07                 a0 = t1 - a3
 92158: 82 18 98 00              a1 = u64 [sp + 0x98]
 92162: ca 87 04                 t2 = a0 * a1
 92165: 82 1c c0 00              a5 = u64 [sp + 0xc0]
 92169: c9 6c 07                 a0 = a5 - s1
 92172: 82 15 90 00              s0 = u64 [sp + 0x90]
 92176: ca 57 07                 a0 = a0 * s0
 92179: c8 74 04                 t2 = t2 + a0
 92182: c9 a9 07                 a0 = a2 - a3
 92185: ca 87 08                 a1 = a0 * a1
 92188: c9 bc 07                 a0 = a5 - a4
 92191: ca 57 07                 a0 = a0 * s0
 92194: c8 78 05                 s0 = a1 + a0
 92197: 7b 1b c8 00              u64 [sp + 0xc8] = a4
 92201: c9 6b 07                 a0 = a4 - s1
 92204: 64 6b                    a4 = s1
 92206: c9 3a 0a                 a3 = a3 - t1
 92209: ca a7 02                 t0 = a0 * a3
 92212: 7b 19 d0 00              u64 [sp + 0xd0] = a2
 92216: c9 39 0a                 a3 = a2 - t1
 92219: c9 c6 00                 ra = s1 - a5
 92222: ca 0a 0c                 a5 = a3 * ra
 92225: c8 c2 02                 t0 = t0 + a5
 92228: 82 1c a8 00              a5 = u64 [sp + 0xa8]
 92232: 7b 13 d8 00              u64 [sp + 0xd8] = t1
 92236: c9 3c 0c                 a5 = a5 - t1
 92239: ca c7 07                 a0 = a0 * a5
 92242: 82 18 b0 00              a1 = u64 [sp + 0xb0]
 92246: c9 86 0c                 a5 = s1 - a1
 92249: ca ca 0a                 a3 = a3 * a5
 92252: 8f 4c                    a5 = t2 >s 0
 92254: 89 58                    a1 = s0 <s 0
 92256: d2 c8 08                 a1 = a1 & a5
 92259: c8 a7 07                 a0 = a0 + a3
 92262: 52 08 0e                 jump @7303 if a1 != 0
      :                          @7302
 92265: 89 48                    a1 = t2 <s 0
 92267: 8f 5a                    a3 = s0 >s 0
 92269: d2 a8 08                 a1 = a1 & a3
 92272: 51 08 a6 00              jump @7310 if a1 == 0
      :                          @7303
 92276: 8f 28                    a1 = t0 >s 0
 92278: 89 7a                    a3 = a0 <s 0
 92280: d2 a8 08                 a1 = a1 & a3
 92283: 82 10 88 00              ra = u64 [sp + 0x88]
 92287: 52 08 d2 fe              jump @7298 if a1 != 0
      :                          @7304
 92291: 89 28                    a1 = t0 <s 0
 92293: 8f 7a                    a3 = a0 >s 0
 92295: d2 a8 08                 a1 = a1 & a3
 92298: 52 08 c7 fe              jump @7298 if a1 != 0
      :                          @7305
 92302: 52 02 42                 jump @7307 if t0 != 0
      :                          @7306
 92305: 82 19 c8 00              a2 = u64 [sp + 0xc8]
 92309: e5 9b 08                 a1 = mins(a4, a2)
 92312: 82 1c c0 00              a5 = u64 [sp + 0xc0]
 92316: d9 8c 08                 a1 = a5 <s a1
 92319: 85 88 ff                 a1 = a1 ^ 0xffffffffffffffff
 92322: e3 9b 0a                 a3 = maxs(a4, a2)
 92325: d9 ca 0a                 a3 = a3 <s a5
 92328: e0 a8 08                 a1 = a1 & ~a3
 92331: 82 19 d0 00              a2 = u64 [sp + 0xd0]
 92335: 82 15 d8 00              s0 = u64 [sp + 0xd8]
 92339: e5 95 0a                 a3 = mins(s0, a2)
 92342: 82 1c b8 00              a5 = u64 [sp + 0xb8]
 92346: d9 ac 0a                 a3 = a5 <s a3
 92349: 85 aa 01                 a3 = a3 ^ 0x1
 92352: d2 a8 08                 a1 = a1 & a3
 92355: e3 95 0a                 a3 = maxs(s0, a2)
 92358: d9 ca 0a                 a3 = a3 <s a5
 92361: e0 a8 08                 a1 = a1 & ~a3
 92364: 52 08 85 fe              jump @7298 if a1 != 0
      :                          @7307
 92368: 52 07 ee fe              jump @7300 if a0 != 0
      :                          @7308
 92372: 82 18 c8 00              a1 = u64 [sp + 0xc8]
 92376: e5 8b 07                 a0 = mins(a4, a1)
 92379: 82 1a b0 00              a3 = u64 [sp + 0xb0]
 92383: d9 7a 07                 a0 = a3 <s a0
 92386: 85 77 ff                 a0 = a0 ^ 0xffffffffffffffff
 92389: e3 8b 08                 a1 = maxs(a4, a1)
 92392: d9 a8 08                 a1 = a1 <s a3
 92395: e0 87 07                 a0 = a0 & ~a1
 92398: 82 19 d0 00              a2 = u64 [sp + 0xd0]
 92402: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 92406: e5 9b 08                 a1 = mins(a4, a2)
 92409: 82 1a a8 00              a3 = u64 [sp + 0xa8]
 92413: d9 8a 08                 a1 = a3 <s a1
 92416: e0 87 07                 a0 = a0 & ~a1
 92419: e3 9b 08                 a1 = maxs(a4, a2)
 92422: d9 a8 08                 a1 = a1 <s a3
 92425: 85 88 01                 a1 = a1 ^ 0x1
 92428: d2 87 07                 a0 = a0 & a1
 92431: 51 07 af fe              jump @7300 if a0 == 0
      :                          @7309
 92435: 28 3e fe                 jump @7298
      :                          @7310
 92438: 82 10 88 00              ra = u64 [sp + 0x88]
 92442: 52 04 2d                 jump @7312 if t2 != 0
      :                          @7311
 92445: 82 18 80 00              a1 = u64 [sp + 0x80]
 92449: d9 8b 08                 a1 = a4 <s a1
 92452: 82 1a 78                 a3 = u64 [sp + 0x78]
 92455: d9 ba 0a                 a3 = a3 <s a4
 92458: d4 a8 08                 a1 = a1 | a3
 92461: 82 1a 70                 a3 = u64 [sp + 0x70]
 92464: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 92468: d9 a9 0a                 a3 = a2 <s a3
 92471: 82 1c 68                 a5 = u64 [sp + 0x68]
 92474: d9 9c 0c                 a5 = a5 <s a2
 92477: d4 ca 0a                 a3 = a3 | a5
 92480: d4 a8 08                 a1 = a1 | a3
 92483: 51 08 0e fe              jump @7298 if a1 == 0
      :                          @7312
 92487: 52 05 47 ff              jump @7305 if s0 != 0
      :                          @7313
 92491: 82 18 80 00              a1 = u64 [sp + 0x80]
 92495: 82 19 c8 00              a2 = u64 [sp + 0xc8]
 92499: d9 89 08                 a1 = a2 <s a1
 92502: 85 88 ff                 a1 = a1 ^ 0xffffffffffffffff
 92505: 82 1a 78                 a3 = u64 [sp + 0x78]
 92508: d9 9a 0a                 a3 = a3 <s a2
 92511: e0 a8 08                 a1 = a1 & ~a3
 92514: 82 1a 70                 a3 = u64 [sp + 0x70]
 92517: 82 19 d0 00              a2 = u64 [sp + 0xd0]
 92521: d9 a9 0a                 a3 = a2 <s a3
 92524: 85 aa 01                 a3 = a3 ^ 0x1
 92527: d2 a8 08                 a1 = a1 & a3
 92530: 82 1a 68                 a3 = u64 [sp + 0x68]
 92533: d9 9a 0a                 a3 = a3 <s a2
 92536: e0 a8 08                 a1 = a1 & ~a3
 92539: 51 08 13 ff              jump @7305 if a1 == 0
      :                          @7314
 92543: 28 d2 fd                 jump @7298
      :                          @7315
 92546: 82 18 10                 a1 = u64 [sp + 0x10]
 92549: 82 1b 30                 a4 = u64 [sp + 0x30]
 92552: ae 8b 63                 jump @7322 if a4 >=u a1
      :                          @7316
 92555: 82 17 20                 a0 = u64 [sp + 0x20]
 92558: 82 7a                    a3 = u64 [a0]
 92560: 82 1c 58                 a5 = u64 [sp + 0x58]
 92563: ae ac 59                 jump @7323 if a5 >=u a3
      :                          @7317
 92566: 82 17 18                 a0 = u64 [sp + 0x18]
 92569: 82 77                    a0 = u64 [a0]
 92571: c8 c7 07                 a0 = a0 + a5
 92574: 46 07 01                 u8 [a0 + 0] = 0x1
 92577: ae 8c 4c                 jump @7324 if a5 >=u a1
      :                          @7318
 92580: 96 c7 18                 a0 = a5 * 0x18
 92583: 82 18 28                 a1 = u64 [sp + 0x28]
 92586: c8 87 07                 a0 = a0 + a1
 92589: 82 79 10                 a2 = u64 [a0 + 0x10]
 92592: ac 9b 97 fd              jump @7297 if a4 <u a2
      :                          @7319
 92596: 00                       trap
      :                          @7320
 92597: 49 21 f0 00              u64 [sp + 240] = 0
 92601: 49 21 f8 00 08           u64 [sp + 248] = 0x8
 92606: 49 21 00 01              u64 [sp + 256] = 0
 92610: 01                       fallthrough
      :                          @7321
 92611: 82 17 00 01              a0 = u64 [sp + 0x100]
 92615: 82 18 f8 00              a1 = u64 [sp + 0xf8]
 92619: 82 19 f0 00              a2 = u64 [sp + 0xf0]
 92623: 82 1a                    a3 = u64 [sp]
 92625: 7b a7 10                 u64 [a3 + 0x10] = a0
 92628: 7b a8 08                 u64 [a3 + 0x8] = a1
 92631: 7b a9                    u64 [a3] = a2
 92633: 82 10 30 01              ra = u64 [sp + 0x130]
 92637: 82 15 28 01              s0 = u64 [sp + 0x128]
 92641: 82 16 20 01              s1 = u64 [sp + 0x120]
 92645: 95 11 38 01              sp = sp + 0x138
 92649: 32 00                    ret
      :                          @7322
 92651: 00                       trap
      :                          @7323
 92652: 00                       trap
      :                          @7324
 92653: 00                       trap
      :                          @7325
 92654: 00                       trap
      :                          @7326
 92655: 00                       trap
      :                          @7327
 92656: 95 11 b0                 sp = sp + 0xffffffffffffffb0
 92659: 7b 10 48                 u64 [sp + 0x48] = ra
 92662: 7b 15 40                 u64 [sp + 0x40] = s0
 92665: 7b 16 38                 u64 [sp + 0x38] = s1
 92668: 82 89 10                 a2 = u64 [a1 + 0x10]
 92671: 7b 17                    u64 [sp] = a0
 92673: 51 09 f6 00              jump @7345 if a2 == 0
      :                          @7328
 92677: 64 86                    s1 = a1
 92679: 98 98 3b                 a1 = a2 >> 0x3b
 92682: 52 08 1c 01              jump @7350 if a1 != 0
      :                          @7329
 92686: 88 83 01                 t1 = a1 <u 0x1
 92689: 7b 19 08                 u64 [sp + 0x8] = a2
 92692: 97 97 04                 a0 = a2 << 0x4
 92695: 97 33 03                 t1 = t1 << 0x3
 92698: 33 00 c0 22 03           ra = 0x322c0
 92703: 33 04 00 00 01           t2 = 0x10000
 92708: c8 40 0c                 a5 = ra + t2
 92711: 01                       fallthrough
      :                          @7330
 92712: 82 c9                    a2 = u64 [a5]
 92714: c8 79 08                 a1 = a2 + a0
 92717: ac 98 f8 00              jump @7349 if a1 <u a2
      :                          @7331
 92721: c8 38 0b                 a4 = a1 + t1
 92724: d8 8b 05                 s0 = a4 <u a1
 92727: d8 b4 0b                 a4 = t2 <u a4
 92730: d4 5b 0b                 a4 = a4 | s0
 92733: 52 0b e8 00              jump @7349 if a4 != 0
      :                          @7332
 92737: c9 80 05                 s0 = ra - a1
 92740: c8 45 05                 s0 = s0 + t2
 92743: 84 5b 07                 a4 = s0 & 0x7
 92746: c8 b8 08                 a1 = a1 + a4
 92749: 01                       fallthrough
      :                          @7333
 92750: 82 ca                    a3 = u64 [a5]
 92752: ab 9a d8                 jump @7330 if a3 != a2
      :                          @7334
 92755: 7b c8                    u64 [a5] = a1
 92757: 33 08                    a1 = 0
 92759: 33 07                    a0 = 0
 92761: c9 b5 02                 t0 = s0 - a4
 92764: 82 13 08                 t1 = u64 [sp + 0x8]
 92767: 7b 13 20                 u64 [sp + 0x20] = t1
 92770: 82 64 08                 t2 = u64 [s1 + 0x8]
 92773: 7b 12 28                 u64 [sp + 0x28] = t0
 92776: 49 11 30                 u64 [sp + 48] = 0
 92779: 33 00 18                 ra = 0x18
 92782: 28 24                    jump @7336
      :                          @7335
 92784: 82 19 10                 a2 = u64 [sp + 0x10]
 92787: c9 59 07                 a0 = a2 - s0
 92790: c8 95 05                 s0 = s0 + a2
 92793: 97 89 04                 a2 = a1 << 0x4
 92796: c8 29 09                 a2 = a2 + t0
 92799: 7b 97                    u64 [a2] = a0
 92801: 7b 95 08                 u64 [a2 + 0x8] = s0
 92804: 95 88 01                 a1 = a1 + 0x1
 92807: 7b 18 30                 u64 [sp + 0x30] = a1
 92810: 82 19 18                 a2 = u64 [sp + 0x18]
 92813: 64 97                    a0 = a2
 92815: aa 39 73                 jump @7346 if a2 == t1
      :                          @7336
 92818: ca 07 0a                 a3 = a0 * ra
 92821: c8 4a 0a                 a3 = a3 + t2
 92824: 82 a9 10                 a2 = u64 [a3 + 0x10]
 92827: ae 97 89 00              jump @7348 if a0 >=u a2
      :                          @7337
 92831: 82 ac 08                 a5 = u64 [a3 + 0x8]
 92834: 97 7a 03                 a3 = a0 << 0x3
 92837: c8 ca 0a                 a3 = a3 + a5
 92840: 82 aa                    a3 = u64 [a3]
 92842: 7b 1a 10                 u64 [sp + 0x10] = a3
 92845: 33 05                    s0 = 0
 92847: 33 0a                    a3 = 0
 92849: 95 7b 01                 a4 = a0 + 0x1
 92852: 7b 1b 18                 u64 [sp + 0x18] = a4
 92855: 28 0b                    jump @7339
      :                          @7338
 92857: 95 aa 01                 a3 = a3 + 0x1
 92860: 95 cc 08                 a5 = a5 + 0x8
 92863: aa a3 15                 jump @7342 if t1 == a3
      :                          @7339
 92866: aa a7 f7                 jump @7338 if a0 == a3
      :                          @7340
 92869: ae 9a 5e                 jump @7347 if a3 >=u a2
      :                          @7341
 92872: 82 cb                    a4 = u64 [a5]
 92874: 9a b6                    s1 = -a4
 92876: e3 6b 0b                 a4 = maxs(a4, s1)
 92879: c8 b5 05                 s0 = s0 + a4
 92882: 28 e7                    jump @7338
      :                          @7342
 92884: 82 17 20                 a0 = u64 [sp + 0x20]
 92887: ab 78 99                 jump @7335 if a1 != a0
      :                          @7343
 92890: 95 17 20                 a0 = sp + 0x20
 92893: 64 46                    s1 = t2
 92895: 50 20 3a 04 63 e9 fe     ra = 1082, jump @1605
      :                          @7344 [@dyn 541]
 92902: 33 00 18                 ra = 0x18
 92905: 64 64                    t2 = s1
 92907: 82 13 08                 t1 = u64 [sp + 0x8]
 92910: 82 18 30                 a1 = u64 [sp + 0x30]
 92913: 82 12 28                 t0 = u64 [sp + 0x28]
 92916: 28 7c ff                 jump @7335
      :                          @7345
 92919: 49 11 20                 u64 [sp + 32] = 0
 92922: 49 11 28 08              u64 [sp + 40] = 0x8
 92926: 49 11 30                 u64 [sp + 48] = 0
 92929: 01                       fallthrough
      :                          @7346
 92930: 82 17 30                 a0 = u64 [sp + 0x30]
 92933: 82 18 28                 a1 = u64 [sp + 0x28]
 92936: 82 19 20                 a2 = u64 [sp + 0x20]
 92939: 82 1a                    a3 = u64 [sp]
 92941: 7b a7 10                 u64 [a3 + 0x10] = a0
 92944: 7b a8 08                 u64 [a3 + 0x8] = a1
 92947: 7b a9                    u64 [a3] = a2
 92949: 82 10 48                 ra = u64 [sp + 0x48]
 92952: 82 15 40                 s0 = u64 [sp + 0x40]
 92955: 82 16 38                 s1 = u64 [sp + 0x38]
 92958: 95 11 50                 sp = sp + 0x50
 92961: 32 00                    ret
      :                          @7347
 92963: 00                       trap
      :                          @7348
 92964: 00                       trap
      :                          @7349
 92965: 00                       trap
      :                          @7350
 92966: 00                       trap
      :                          @7351
 92967: 95 11 68 ff              sp = sp + 0xffffffffffffff68
 92971: 7b 10 90 00              u64 [sp + 0x90] = ra
 92975: 7b 15 88 00              u64 [sp + 0x88] = s0
 92979: 7b 16 80 00              u64 [sp + 0x80] = s1
 92983: 82 78 10                 a1 = u64 [a0 + 0x10]
 92986: 51 08 65 02              jump @7408 if a1 == 0
      :                          @7352
 92990: 7b 17 20                 u64 [sp + 0x20] = a0
 92993: 82 70 08                 ra = u64 [a0 + 0x8]
 92996: 33 04                    t2 = 0
 92998: 33 0a                    a3 = 0
 93000: 95 09 10                 a2 = ra + 0x10
 93003: 82 07 10                 a0 = u64 [ra + 0x10]
 93006: 7b 17 50                 u64 [sp + 0x50] = a0
 93009: 33 02 01                 t0 = 0x1
 93012: 7b 19 18                 u64 [sp + 0x18] = a2
 93015: 64 93                    t1 = a2
 93017: 33 07 01                 a0 = 0x1
 93020: 01                       fallthrough
      :                          @7353
 93021: 84 77 01                 a0 = a0 & 0x1
 93024: 51 07 33 02              jump @7406 if a0 == 0
      :                          @7354
 93028: 82 17 50                 a0 = u64 [sp + 0x50]
 93031: e4 7a 0c                 a5 = maxu(a3, a0)
 93034: 97 a7 03                 a0 = a3 << 0x3
 93037: 7b 17 60                 u64 [sp + 0x60] = a0
 93040: 64 a7                    a0 = a3
 93042: 28 11                    jump @7357
      :                          @7355
 93044: ab 89 3e                 jump @7364 if a2 != a1
      :                          @7356
 93047: 82 17 60                 a0 = u64 [sp + 0x60]
 93050: 95 77 08                 a0 = a0 + 0x8
 93053: 7b 17 60                 u64 [sp + 0x60] = a0
 93056: 64 57                    a0 = s0
 93058: 01                       fallthrough
      :                          @7357
 93059: aa c7 77 01              jump @7384 if a0 == a5
      :                          @7358
 93063: 95 75 01                 s0 = a0 + 0x1
 93066: 64 36                    s1 = t1
 93068: 64 49                    a2 = t2
 93070: 01                       fallthrough
      :                          @7359
 93071: 82 6b                    a4 = u64 [s1]
 93073: ae b7 00 02              jump @7404 if a0 >=u a4
      :                          @7360
 93077: 82 6b f8                 a4 = u64 [s1 + 0xfffffffffffffff8]
 93080: 97 7a 03                 a3 = a0 << 0x3
 93083: c8 ab 0b                 a4 = a4 + a3
 93086: 82 bb                    a4 = u64 [a4]
 93088: 52 0b d4                 jump @7355 if a4 != 0
      :                          @7361
 93091: 95 99 01                 a2 = a2 + 0x1
 93094: 95 66 18                 s1 = s1 + 0x18
 93097: ac 89 e6                 jump @7359 if a2 <u a1
      :                          @7362
 93100: ae 28 cb                 jump @7356 if a1 >=u t0
      :                          @7363
 93103: 28 f1 01                 jump @7409
      :                          @7364
 93106: 7b 15                    u64 [sp] = s0
 93108: 7b 13 08                 u64 [sp + 0x8] = t1
 93111: 7b 12 10                 u64 [sp + 0x10] = t0
 93114: 96 43 18                 t1 = t2 * 0x18
 93117: c8 03 03                 t1 = t1 + ra
 93120: 82 3b 10                 a4 = u64 [t1 + 0x10]
 93123: 7b 1b 78                 u64 [sp + 0x78] = a4
 93126: 82 3b 08                 a4 = u64 [t1 + 0x8]
 93129: 7b 1b 70                 u64 [sp + 0x70] = a4
 93132: 82 3b                    a4 = u64 [t1]
 93134: 96 99 18                 a2 = a2 * 0x18
 93137: 7b 10 28                 u64 [sp + 0x28] = ra
 93140: c8 09 09                 a2 = a2 + ra
 93143: 7b 1b 68                 u64 [sp + 0x68] = a4
 93146: 82 9b                    a4 = u64 [a2]
 93148: 82 9c 08                 a5 = u64 [a2 + 0x8]
 93151: 82 96 10                 s1 = u64 [a2 + 0x10]
 93154: 7b 3b                    u64 [t1] = a4
 93156: 7b 3c 08                 u64 [t1 + 0x8] = a5
 93159: 7b 36 10                 u64 [t1 + 0x10] = s1
 93162: 82 1b 78                 a4 = u64 [sp + 0x78]
 93165: 7b 9b 10                 u64 [a2 + 0x10] = a4
 93168: 82 1b 70                 a4 = u64 [sp + 0x70]
 93171: 7b 9b 08                 u64 [a2 + 0x8] = a4
 93174: 82 1b 68                 a4 = u64 [sp + 0x68]
 93177: 95 3c 10                 a5 = t1 + 0x10
 93180: 7b 1c 58                 u64 [sp + 0x58] = a5
 93183: 7b 9b                    u64 [a2] = a4
 93185: 64 8c                    a5 = a1
 93187: 7b 14 30                 u64 [sp + 0x30] = t2
 93190: 64 45                    s0 = t2
 93192: 82 19 18                 a2 = u64 [sp + 0x18]
 93195: 82 1b 50                 a4 = u64 [sp + 0x50]
 93198: ae b7 1a                 jump @7367 if a0 >=u a4
      :                          @7365
 93201: 33 0b                    a4 = 0
 93203: 95 33 08                 t1 = t1 + 0x8
 93206: 7b 13 40                 u64 [sp + 0x40] = t1
 93209: 28 38                    jump @7373
      :                          @7366
 93211: 95 99 18                 a2 = a2 + 0x18
 93214: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 93217: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 93220: 51 0c b3 00              jump @7382 if a5 == 0
      :                          @7367
 93224: 51 05 f3                 jump @7366 if s0 == 0
      :                          @7368
 93227: 82 9b                    a4 = u64 [a2]
 93229: ae b7 64 01              jump @7404 if a0 >=u a4
      :                          @7369
 93233: 82 9b f8                 a4 = u64 [a2 + 0xfffffffffffffff8]
 93236: c8 ab 0b                 a4 = a4 + a3
 93239: 82 bb                    a4 = u64 [a4]
 93241: 51 0b e2                 jump @7366 if a4 == 0
      :                          @7370
 93244: 82 1b 58                 a4 = u64 [sp + 0x58]
 93247: 82 bb                    a4 = u64 [a4]
 93249: ac b7 da                 jump @7366 if a0 <u a4
      :                          @7371
 93252: 28 4d 01                 jump @7404
      :                          @7372
 93255: 82 1b 38                 a4 = u64 [sp + 0x38]
 93258: 95 bb 01                 a4 = a4 + 0x1
 93261: aa 8b 8a 00              jump @7382 if a4 == a1
      :                          @7373
 93265: 82 19 30                 a2 = u64 [sp + 0x30]
 93268: 7b 1b 38                 u64 [sp + 0x38] = a4
 93271: aa 9b f0                 jump @7372 if a4 == a2
      :                          @7374
 93274: 82 1b 38                 a4 = u64 [sp + 0x38]
 93277: 96 b0 18                 ra = a4 * 0x18
 93280: 82 19 28                 a2 = u64 [sp + 0x28]
 93283: c8 90 00                 ra = ra + a2
 93286: 82 0b 10                 a4 = u64 [ra + 0x10]
 93289: ae b7 28 01              jump @7404 if a0 >=u a4
      :                          @7375
 93293: 82 09 08                 a2 = u64 [ra + 0x8]
 93296: c8 a9 09                 a2 = a2 + a3
 93299: 82 99                    a2 = u64 [a2]
 93301: 7b 19 48                 u64 [sp + 0x48] = a2
 93304: 51 09 cf                 jump @7372 if a2 == 0
      :                          @7376
 93307: 82 19 58                 a2 = u64 [sp + 0x58]
 93310: 82 9b                    a4 = u64 [a2]
 93312: ae b7 11 01              jump @7404 if a0 >=u a4
      :                          @7377
 93316: 82 19 40                 a2 = u64 [sp + 0x40]
 93319: 82 99                    a2 = u64 [a2]
 93321: c8 a9 09                 a2 = a2 + a3
 93324: 82 99                    a2 = u64 [a2]
 93326: 95 06 10                 s1 = ra + 0x10
 93329: 95 00 08                 ra = ra + 0x8
 93332: 82 14 60                 t2 = u64 [sp + 0x60]
 93335: 64 7b                    a4 = a0
 93337: 01                       fallthrough
      :                          @7378
 93338: 82 1c 58                 a5 = u64 [sp + 0x58]
 93341: 82 cc                    a5 = u64 [a5]
 93343: ae cb f3 00              jump @7405 if a4 >=u a5
      :                          @7379
 93347: 82 6c                    a5 = u64 [s1]
 93349: ae cb ed 00              jump @7405 if a4 >=u a5
      :                          @7380
 93353: 82 1c 40                 a5 = u64 [sp + 0x40]
 93356: 82 cc                    a5 = u64 [a5]
 93358: 82 02                    t0 = u64 [ra]
 93360: c8 4c 0c                 a5 = a5 + t2
 93363: 82 cc                    a5 = u64 [a5]
 93365: c8 42 02                 t0 = t0 + t2
 93368: 82 23                    t1 = u64 [t0]
 93370: 95 bb 01                 a4 = a4 + 0x1
 93373: 82 15 48                 s0 = u64 [sp + 0x48]
 93376: ca 5c 0c                 a5 = a5 * s0
 93379: ca 93 05                 s0 = t1 * a2
 93382: c9 5c 0c                 a5 = a5 - s0
 93385: 7b 2c                    u64 [t0] = a5
 93387: 95 44 08                 t2 = t2 + 0x8
 93390: 82 1c 50                 a5 = u64 [sp + 0x50]
 93393: ab bc c9                 jump @7378 if a5 != a4
      :                          @7381
 93396: 28 73 ff                 jump @7372
      :                          @7382
 93399: 82 14 30                 t2 = u64 [sp + 0x30]
 93402: 95 44 01                 t2 = t2 + 0x1
 93405: d8 84 07                 a0 = t2 <u a1
 93408: 82 12 10                 t0 = u64 [sp + 0x10]
 93411: 95 22 01                 t0 = t0 + 0x1
 93414: 82 13 08                 t1 = u64 [sp + 0x8]
 93417: 95 33 18                 t1 = t1 + 0x18
 93420: 82 10 28                 ra = u64 [sp + 0x28]
 93423: 82 1a                    a3 = u64 [sp]
 93425: ab 84 6c fe              jump @7353 if t2 != a1
      :                          @7383
 93429: 7b 18 30                 u64 [sp + 0x30] = a1
 93432: 28 06                    jump @7385
      :                          @7384
 93434: 7b 14 30                 u64 [sp + 0x30] = t2
 93437: 01                       fallthrough
      :                          @7385
 93438: 33 07                    a0 = 0
 93440: 33 03 18                 t1 = 0x18
 93443: 33 0a c0 22 03           a3 = 0x322c0
 93448: 95 ab 00 00 01           a4 = a3 + 0x10000
 93453: 33 02 00 20              t0 = 0x2000
 93457: 28 08                    jump @7387
      :                          @7386
 93459: 95 77 01                 a0 = a0 + 0x1
 93462: aa 87 33                 jump @7396 if a0 == a1
      :                          @7387
 93465: ca 37 0c                 a5 = a0 * t1
 93468: c8 0c 0c                 a5 = a5 + ra
 93471: 82 c6                    s1 = u64 [a5]
 93473: 51 06 f2                 jump @7386 if s1 == 0
      :                          @7388
 93476: ac 62 ef                 jump @7386 if t0 <u s1
      :                          @7389
 93479: 82 cc 08                 a5 = u64 [a5 + 0x8]
 93482: 97 64 03                 t2 = s1 << 0x3
 93485: 01                       fallthrough
      :                          @7390
 93486: 82 b5                    s0 = u64 [a4]
 93488: c9 5b 0a                 a3 = a4 - s0
 93491: ab ca e0                 jump @7386 if a3 != a5
      :                          @7391
 93494: c9 45 0a                 a3 = s0 - t2
 93497: 01                       fallthrough
      :                          @7392
 93498: 82 b9                    a2 = u64 [a4]
 93500: ab 59 f2                 jump @7390 if a2 != s0
      :                          @7393
 93503: 7b ba                    u64 [a4] = a3
 93505: 33 06                    s1 = 0
 93507: 01                       fallthrough
      :                          @7394
 93508: ab 59 ea                 jump @7390 if a2 != s0
      :                          @7395
 93511: 28 cc                    jump @7386
      :                          @7396
 93513: 82 17 20                 a0 = u64 [sp + 0x20]
 93516: 82 77                    a0 = u64 [a0]
 93518: 51 07 2e                 jump @7403 if a0 == 0
      :                          @7397
 93521: 33 08 aa 0a              a1 = 0xaaa
 93525: ac 78 27                 jump @7403 if a1 <u a0
      :                          @7398
 93528: 96 77 e8                 a0 = a0 * 0xffffffffffffffe8
 93531: 33 08 c0 22 03           a1 = 0x322c0
 93536: 95 88 00 00 01           a1 = a1 + 0x10000
 93541: 01                       fallthrough
      :                          @7399
 93542: 82 89                    a2 = u64 [a1]
 93544: c9 98 0a                 a3 = a1 - a2
 93547: ab 0a 11                 jump @7403 if a3 != ra
      :                          @7400
 93550: c8 79 0a                 a3 = a2 + a0
 93553: 01                       fallthrough
      :                          @7401
 93554: 82 8b                    a4 = u64 [a1]
 93556: ab 9b f2                 jump @7399 if a4 != a2
      :                          @7402
 93559: 7b 8a                    u64 [a1] = a3
 93561: 33 0c                    a5 = 0
 93563: 01                       fallthrough
      :                          @7403
 93564: 82 17 30                 a0 = u64 [sp + 0x30]
 93567: 82 10 90 00              ra = u64 [sp + 0x90]
 93571: 82 15 88 00              s0 = u64 [sp + 0x88]
 93575: 82 16 80 00              s1 = u64 [sp + 0x80]
 93579: 95 11 98 00              sp = sp + 0x98
 93583: 32 00                    ret
      :                          @7404
 93585: 00                       trap
      :                          @7405
 93586: 00                       trap
      :                          @7406
 93587: 7b 14 30                 u64 [sp + 0x30] = t2
 93590: 82 17 50                 a0 = u64 [sp + 0x50]
 93593: ae 7a 65 ff              jump @7385 if a3 >=u a0
      :                          @7407
 93597: 28 0a                    jump @7410
      :                          @7408
 93599: 00                       trap
      :                          @7409
 93600: e4 28 07                 a0 = maxu(a1, t0)
 93603: 7b 17 30                 u64 [sp + 0x30] = a0
 93606: 00                       trap
      :                          @7410
 93607: 00                       trap
      :                          @7411
 93608: 82 7b                    a4 = u64 [a0]
 93610: 82 7a 08                 a3 = u64 [a0 + 0x8]
 93613: 82 72 18                 t0 = u64 [a0 + 0x18]
 93616: 82 79 10                 a2 = u64 [a0 + 0x10]
 93619: ca b2 0c                 a5 = t0 * a4
 93622: ca a9 08                 a1 = a2 * a3
 93625: 33 07 ff                 a0 = 0xffffffffffffffff
 93628: aa 8c 71 cf 00           jump @10691 if a5 == a1
      :                          @7412
 93633: c9 8c 0c                 a5 = a5 - a1
 93636: 9a b7                    a0 = -a4
 93638: e3 7b 07                 a0 = maxs(a4, a0)
 93641: 9a a8                    a1 = -a3
 93643: e3 8a 08                 a1 = maxs(a3, a1)
 93646: c8 78 03                 t1 = a1 + a0
 93649: 9a 9b                    a4 = -a2
 93651: e3 b9 0a                 a3 = maxs(a2, a4)
 93654: 9a 2b                    a4 = -t0
 93656: e3 b2 0b                 a4 = maxs(t0, a4)
 93659: c8 ab 09                 a2 = a4 + a3
 93662: e3 93 09                 a2 = maxs(t1, a2)
 93665: c8 b8 08                 a1 = a1 + a4
 93668: c8 a7 07                 a0 = a0 + a3
 93671: e3 78 07                 a0 = maxs(a1, a0)
 93674: ca 79 07                 a0 = a2 * a0
 93677: 9a c8                    a1 = -a5
 93679: e3 8c 08                 a1 = maxs(a5, a1)
 93682: cb 87 07                 a0 = a0 /u a1
 93685: 28 38 cf 00              jump @10691
      :                          @7413
 93689: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 93692: 7b 10 30                 u64 [sp + 0x30] = ra
 93695: 7b 15 28                 u64 [sp + 0x28] = s0
 93698: 7b 16 20                 u64 [sp + 0x20] = s1
 93701: 82 80 10                 ra = u64 [a1 + 0x10]
 93704: 51 00 ce 00              jump @7429 if ra == 0
      :                          @7414
 93708: 98 0a 3c                 a3 = ra >> 0x3c
 93711: 52 0a e3 00              jump @7433 if a3 != 0
      :                          @7415
 93715: 7b 19 08                 u64 [sp + 0x8] = a2
 93718: 7b 18 10                 u64 [sp + 0x10] = a1
 93721: 7b 17                    u64 [sp] = a0
 93723: 88 a2 01                 t0 = a3 <u 0x1
 93726: 97 09 03                 a2 = ra << 0x3
 93729: 97 22 03                 t0 = t0 << 0x3
 93732: 33 04 c0 22 03           t2 = 0x322c0
 93737: 33 03 00 00 01           t1 = 0x10000
 93742: c8 34 0b                 a4 = t2 + t1
 93745: 01                       fallthrough
      :                          @7416
 93746: 82 b6                    s1 = u64 [a4]
 93748: c8 96 0c                 a5 = s1 + a2
 93751: ac 6c ba 00              jump @7432 if a5 <u s1
      :                          @7417
 93755: c8 2c 0a                 a3 = a5 + t0
 93758: d8 ca 05                 s0 = a3 <u a5
 93761: d8 a3 0a                 a3 = t1 <u a3
 93764: d4 5a 0a                 a3 = a3 | s0
 93767: 52 0a aa 00              jump @7432 if a3 != 0
      :                          @7418
 93771: c9 c4 05                 s0 = t2 - a5
 93774: c8 35 05                 s0 = s0 + t1
 93777: 84 5a 07                 a3 = s0 & 0x7
 93780: c8 ac 0c                 a5 = a5 + a3
 93783: 01                       fallthrough
      :                          @7419
 93784: 82 b7                    a0 = u64 [a4]
 93786: ab 67 d8                 jump @7416 if a0 != s1
      :                          @7420
 93789: 7b bc                    u64 [a4] = a5
 93791: c9 a5 07                 a0 = s0 - a3
 93794: 7b 17 18                 u64 [sp + 0x18] = a0
 93797: 33 08                    a1 = 0
 93799: 64 05                    s0 = ra
 93801: 50 20 3c 04 ad 9d 01     ra = 1084, jump @13687
      :                          @7421 [@dyn 542]
 93808: 64 50                    ra = s0
 93810: 82 17 10                 a0 = u64 [sp + 0x10]
 93813: 82 73 08                 t1 = u64 [a0 + 0x8]
 93816: 82 17 08                 a0 = u64 [sp + 0x8]
 93819: 82 78 10                 a1 = u64 [a0 + 0x10]
 93822: 82 7a 08                 a3 = u64 [a0 + 0x8]
 93825: 33 04                    t2 = 0
 93827: 33 02 18                 t0 = 0x18
 93830: 28 08                    jump @7423
      :                          @7422
 93832: 95 44 01                 t2 = t2 + 0x1
 93835: aa 04 44                 jump @7428 if t2 == ra
      :                          @7423
 93838: ca 24 07                 a0 = t2 * t0
 93841: c8 37 07                 a0 = a0 + t1
 93844: 82 76 10                 s1 = u64 [a0 + 0x10]
 93847: 51 06 f1                 jump @7422 if s1 == 0
      :                          @7424
 93850: 82 7c 08                 a5 = u64 [a0 + 0x8]
 93853: 97 66 04                 s1 = s1 << 0x4
 93856: c8 c6 06                 s1 = s1 + a5
 93859: 97 45 03                 s0 = t2 << 0x3
 93862: 82 17 18                 a0 = u64 [sp + 0x18]
 93865: c8 75 05                 s0 = s0 + a0
 93868: 01                       fallthrough
      :                          @7425
 93869: 82 c7                    a0 = u64 [a5]
 93871: ae 87 41                 jump @7431 if a0 >=u a1
      :                          @7426
 93874: 82 c9 08                 a2 = u64 [a5 + 0x8]
 93877: 97 77 03                 a0 = a0 << 0x3
 93880: c8 a7 07                 a0 = a0 + a3
 93883: 82 77                    a0 = u64 [a0]
 93885: 82 5b                    a4 = u64 [s0]
 93887: ca 97 07                 a0 = a0 * a2
 93890: c8 b7 07                 a0 = a0 + a4
 93893: 95 cc 10                 a5 = a5 + 0x10
 93896: 7b 57                    u64 [s0] = a0
 93898: ab 6c e3                 jump @7425 if a5 != s1
      :                          @7427
 93901: 28 bb                    jump @7422
      :                          @7428
 93903: 82 17                    a0 = u64 [sp]
 93905: 82 18 18                 a1 = u64 [sp + 0x18]
 93908: 28 06                    jump @7430
      :                          @7429
 93910: 33 08 08                 a1 = 0x8
 93913: 01                       fallthrough
      :                          @7430
 93914: 7b 70                    u64 [a0] = ra
 93916: 7b 78 08                 u64 [a0 + 0x8] = a1
 93919: 7b 70 10                 u64 [a0 + 0x10] = ra
 93922: 82 10 30                 ra = u64 [sp + 0x30]
 93925: 82 15 28                 s0 = u64 [sp + 0x28]
 93928: 82 16 20                 s1 = u64 [sp + 0x20]
 93931: 95 11 38                 sp = sp + 0x38
 93934: 32 00                    ret
      :                          @7431
 93936: 00                       trap
      :                          @7432
 93937: 00                       trap
      :                          @7433
 93938: 00                       trap
      :                          @7434
 93939: 51 08 3f                 jump @7441 if a1 == 0
      :                          @7435
 93942: 64 73                    t1 = a0
 93944: 33 04                    t2 = 0
 93946: 33 07                    a0 = 0
 93948: 96 88 18                 a1 = a1 * 0x18
 93951: c8 83 02                 t0 = t1 + a1
 93954: 28 08                    jump @7437
      :                          @7436
 93956: 95 33 18                 t1 = t1 + 0x18
 93959: aa 23 30                 jump @7442 if t1 == t0
      :                          @7437
 93962: 82 3b 10                 a4 = u64 [t1 + 0x10]
 93965: 51 0b f7                 jump @7436 if a4 == 0
      :                          @7438
 93968: 82 3c 08                 a5 = u64 [t1 + 0x8]
 93971: 97 bb 03                 a4 = a4 << 0x3
 93974: 01                       fallthrough
      :                          @7439
 93975: 82 c8                    a1 = u64 [a5]
 93977: 95 cc 08                 a5 = a5 + 0x8
 93980: 9a 89                    a2 = -a1
 93982: ca 88 0a                 a3 = a1 * a1
 93985: c8 a4 04                 t2 = t2 + a3
 93988: e3 87 07                 a0 = maxs(a0, a1)
 93991: 95 bb f8                 a4 = a4 + 0xfffffffffffffff8
 93994: e3 97 07                 a0 = maxs(a0, a2)
 93997: 52 0b ea                 jump @7439 if a4 != 0
      :                          @7440
 94000: 28 d4                    jump @7436
      :                          @7441
 94002: 33 07                    a0 = 0
 94004: 33 04                    t2 = 0
 94006: 01                       fallthrough
      :                          @7442
 94007: 33 09                    a2 = 0
 94009: 33 02 ff                 t0 = 0xffffffffffffffff
 94012: 64 48                    a1 = t2
 94014: 01                       fallthrough
      :                          @7443
 94015: c8 98 0c                 a5 = a1 + a2
 94018: 98 cc 01                 a5 = a5 >> 0x1
 94021: d6 cc 03                 t1 = a5 mulhu a5
 94024: ca cc 0b                 a4 = a5 * a5
 94027: db 32 0b                 a4 = t0 if t1 != 0
 94030: aa 4b 17                 jump @7446 if a4 == t2
      :                          @7444
 94033: d8 4b 0b                 a4 = a4 <u t2
 94036: 95 c3 01                 t1 = a5 + 0x1
 94039: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 94042: da bc 08                 a1 = a5 if a4 == 0
 94045: db b3 09                 a2 = t1 if a4 != 0
 94048: ae 98 df                 jump @7443 if a1 >=u a2
      :                          @7445
 94051: 32 00                    ret
      :                          @7446
 94053: 64 c8                    a1 = a5
 94055: 32 00                    ret
      :                          @7447
 94057: 55 17 02 0c              jump @7449 if a0 >=u 2
      :                          @7448
 94061: 33 07                    a0 = 0
 94063: 64 c8                    a1 = a5
 94065: 28 d6 d3 00              jump @10758
      :                          @7449
 94069: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 94072: 7b 10 18                 u64 [sp + 0x18] = ra
 94075: 7b 15 10                 u64 [sp + 0x10] = s0
 94078: 7b 16 08                 u64 [sp + 0x8] = s1
 94081: 3a 09 78 12 03           a2 = u64 [0x31278]
 94086: 97 9a 0d                 a3 = a2 << 0xd
 94089: d3 a9 09                 a2 = a2 ^ a3
 94092: 98 9a 07                 a3 = a2 >> 0x7
 94095: d3 a9 09                 a2 = a2 ^ a3
 94098: 97 9a 11                 a3 = a2 << 0x11
 94101: d3 a9 09                 a2 = a2 ^ a3
 94104: 3a 0a 10 11 03           a3 = u64 [0x31110]
 94109: 3e 09 78 12 03           u64 [0x31278] = a2
 94114: 3a 0b 78 12 03           a4 = u64 [0x31278]
 94119: 49 01                    u64 [sp + 0] = 0
 94121: ca a9 0c                 a5 = a2 * a3
 94124: 97 b9 0d                 a2 = a4 << 0xd
 94127: d3 b9 09                 a2 = a2 ^ a4
 94130: 98 9b 07                 a4 = a2 >> 0x7
 94133: d3 b9 09                 a2 = a2 ^ a4
 94136: 97 9b 11                 a4 = a2 << 0x11
 94139: d3 b9 09                 a2 = a2 ^ a4
 94142: 3e 09 78 12 03           u64 [0x31278] = a2
 94147: 3a 06 78 12 03           s1 = u64 [0x31278]
 94152: ca a9 09                 a2 = a2 * a3
 94155: cd 79 09                 a2 = a2 %u a0
 94158: 97 6b 0d                 a4 = s1 << 0xd
 94161: d3 b6 06                 s1 = s1 ^ a4
 94164: 98 6b 07                 a4 = s1 >> 0x7
 94167: d3 b6 06                 s1 = s1 ^ a4
 94170: 97 6b 11                 a4 = s1 << 0x11
 94173: d3 6b 0b                 a4 = a4 ^ s1
 94176: ca ab 0a                 a3 = a4 * a3
 94179: 3e 0b 78 12 03           u64 [0x31278] = a4
 94184: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 94187: cd 7c 03                 t1 = a5 %u a0
 94190: cd 8a 00                 ra = a3 %u a1
 94193: 95 00 01                 ra = ra + 0x1
 94196: 33 04 01                 t2 = 0x1
 94199: 33 02 01                 t0 = 0x1
 94202: 28 0f                    jump @7452
      :                          @7450
 94204: 33 0c 01                 a5 = 0x1
 94207: 64 a3                    t1 = a3
 94209: 01                       fallthrough
      :                          @7451
 94210: 97 44 01                 t2 = t2 << 0x1
 94213: 52 1c 01 6b              jump @7461 if a5 != 1
      :                          @7452
 94217: 64 3a                    a3 = t1
 94219: 64 48                    a1 = t2
 94221: 51 04 ef                 jump @7450 if t2 == 0
      :                          @7453
 94224: ca 33 0b                 a4 = t1 * t1
 94227: c8 9b 0b                 a4 = a4 + a2
 94230: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 94233: cd 7b 03                 t1 = a4 %u a0
 94236: 52 08 f4                 jump @7453 if a1 != 0
      :                          @7454
 94239: 33 06                    s1 = 0
 94241: 7b 13                    u64 [sp] = t1
 94243: 64 08                    a1 = ra
 94245: 28 07                    jump @7456
      :                          @7455
 94247: 7b 13                    u64 [sp] = t1
 94249: 64 08                    a1 = ra
 94251: 01                       fallthrough
      :                          @7456
 94252: ca 33 0b                 a4 = t1 * t1
 94255: c8 9b 0b                 a4 = a4 + a2
 94258: cd 7b 03                 t1 = a4 %u a0
 94261: d8 a3 0b                 a4 = t1 <u a3
 94264: c9 3a 0c                 a5 = a3 - t1
 94267: c9 a3 05                 s0 = t1 - a3
 94270: db bc 05                 s0 = a5 if a4 != 0
 94273: ca 25 0b                 a4 = s0 * t0
 94276: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 94279: cd 7b 02                 t0 = a4 %u a0
 94282: 52 08 e2                 jump @7456 if a1 != 0
      :                          @7457
 94285: 64 2b                    a4 = t0
 94287: 64 78                    a1 = a0
 94289: 01                       fallthrough
      :                          @7458
 94290: 64 8c                    a5 = a1
 94292: cd 8b 08                 a1 = a4 %u a1
 94295: 64 cb                    a4 = a5
 94297: 52 08 f9                 jump @7458 if a1 != 0
      :                          @7459
 94300: c8 06 06                 s1 = s1 + ra
 94303: d8 46 08                 a1 = s1 <u t2
 94306: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
 94309: 88 bb 01                 a4 = a4 <u 0x1
 94312: d2 b8 08                 a1 = a1 & a4
 94315: 52 08 bc                 jump @7455 if a1 != 0
      :                          @7460
 94318: 28 94                    jump @7451
      :                          @7461
 94320: 82 15                    s0 = u64 [sp]
 94322: ab 7c 2c                 jump @7466 if a5 != a0
      :                          @7462
 94325: 33 0b 01                 a4 = 0x1
 94328: 01                       fallthrough
      :                          @7463
 94329: ca 55 08                 a1 = s0 * s0
 94332: c8 98 08                 a1 = a1 + a2
 94335: cd 78 05                 s0 = a1 %u a0
 94338: d8 a5 0c                 a5 = s0 <u a3
 94341: c9 5a 06                 s1 = a3 - s0
 94344: c9 a5 08                 a1 = s0 - a3
 94347: db c6 08                 a1 = s1 if a5 != 0
 94350: 64 76                    s1 = a0
 94352: 01                       fallthrough
      :                          @7464
 94353: 64 6c                    a5 = s1
 94355: cd 68 06                 s1 = a1 %u s1
 94358: 64 c8                    a1 = a5
 94360: 52 06 f9                 jump @7464 if s1 != 0
      :                          @7465
 94363: ae cb de                 jump @7463 if a4 >=u a5
      :                          @7466
 94366: d3 c7 07                 a0 = a0 ^ a5
 94369: 8e 77                    a0 = a0 >u 0
 94371: 82 10 18                 ra = u64 [sp + 0x18]
 94374: 82 15 10                 s0 = u64 [sp + 0x10]
 94377: 82 16 08                 s1 = u64 [sp + 0x8]
 94380: 95 11 20                 sp = sp + 0x20
 94383: 64 c8                    a1 = a5
 94385: 32 00                    ret
      :                          @7467 [@dyn 543]
 94387: 64 78                    a1 = a0
 94389: 95 17 28                 a0 = sp + 0x28
 94392: 64 69                    a2 = s1
 94394: 50 20 40 04 23 1b ff     ra = 1088, jump @2421
      :                          @7468 [@dyn 544]
 94401: 82 17 28                 a0 = u64 [sp + 0x28]
 94404: 52 17 01 6d 01           jump @7494 if a0 != 1
      :                          @7469
 94409: 82 17 30                 a0 = u64 [sp + 0x30]
 94412: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 94422: d3 87 09                 a2 = a0 ^ a1
 94425: e1 69 09                 a2 = a2 | ~s1
 94428: 51 09 52 01              jump @7491 if a2 == 0
      :                          @7470
 94432: ce 67 07                 a0 = a0 %s s1
 94435: c8 67 09                 a2 = a0 + s1
 94438: d3 89 07                 a0 = a2 ^ a1
 94441: e1 67 07                 a0 = a0 | ~s1
 94444: 51 07 42 01              jump @7491 if a0 == 0
      :                          @7471
 94448: 7b 19                    u64 [sp] = a2
 94450: 82 18 20                 a1 = u64 [sp + 0x20]
 94453: ca 88 07                 a0 = a1 * a1
 94456: d6 88 08                 a1 = a1 mulhu a1
 94459: 64 69                    a2 = s1
 94461: 50 20 42 04 b9 98 01     ra = 1090, jump @13631
      :                          @7472 [@dyn 545]
 94468: c8 67 07                 a0 = a0 + s1
 94471: 7b 17 08                 u64 [sp + 0x8] = a0
 94474: 97 57 02                 a0 = s0 << 0x2
 94477: 98 58 3e                 a1 = s0 >> 0x3e
 94480: 64 69                    a2 = s1
 94482: 50 20 44 04 a4 98 01     ra = 1092, jump @13631
      :                          @7473 [@dyn 546]
 94489: 82 18 18                 a1 = u64 [sp + 0x18]
 94492: ca 87 09                 a2 = a0 * a1
 94495: d6 87 08                 a1 = a0 mulhu a1
 94498: 64 97                    a0 = a2
 94500: 64 69                    a2 = s1
 94502: 50 20 46 04 90 98 01     ra = 1094, jump @13631
      :                          @7474 [@dyn 547]
 94509: cd 67 07                 a0 = a0 %u s1
 94512: 82 18 08                 a1 = u64 [sp + 0x8]
 94515: c9 78 07                 a0 = a1 - a0
 94518: cd 67 07                 a0 = a0 %u s1
 94521: 64 68                    a1 = s1
 94523: 50 20 48 04 f3 2b ff     ra = 1096, jump @2793
      :                          @7475 [@dyn 548]
 94530: 52 17 01 87 00           jump @7483 if a0 != 1
      :                          @7476
 94535: 82 17                    a0 = u64 [sp]
 94537: ce 67 07                 a0 = a0 %s s1
 94540: 9a 69                    a2 = -s1
 94542: e3 96 09                 a2 = maxs(s1, a2)
 94545: 99 7a 3f                 a3 = a0 >>a 0x3f
 94548: d2 a9 09                 a2 = a2 & a3
 94551: c8 97 07                 a0 = a0 + a2
 94554: 82 19 20                 a2 = u64 [sp + 0x20]
 94557: cd 69 09                 a2 = a2 %u s1
 94560: c9 96 09                 a2 = s1 - a2
 94563: cd 69 09                 a2 = a2 %u s1
 94566: c8 89 0a                 a3 = a2 + a1
 94569: cd 6a 0a                 a3 = a3 %u s1
 94572: c9 86 08                 a1 = s1 - a1
 94575: c8 98 08                 a1 = a1 + a2
 94578: cd 68 08                 a1 = a1 %u s1
 94581: ca 7a 09                 a2 = a3 * a0
 94584: cd 69 02                 t0 = a2 %u s1
 94587: ca 78 07                 a0 = a1 * a0
 94590: cd 67 03                 t1 = a0 %u s1
 94593: ab 32 4f                 jump @7484 if t0 != t1
      :                          @7477
 94596: 33 08 c0 22 03           a1 = 0x322c0
 94601: 33 03 00 00 01           t1 = 0x10000
 94606: c8 38 0a                 a3 = a1 + t1
 94609: 01                       fallthrough
      :                          @7478
 94610: 82 ab                    a4 = u64 [a3]
 94612: 95 bc 08                 a5 = a4 + 0x8
 94615: ac bc 98 00              jump @7492 if a5 <u a4
      :                          @7479
 94619: 95 c7 08                 a0 = a5 + 0x8
 94622: d8 c7 09                 a2 = a0 <u a5
 94625: d8 73 07                 a0 = t1 <u a0
 94628: d4 97 07                 a0 = a0 | a2
 94631: 52 07 88 00              jump @7492 if a0 != 0
      :                          @7480
 94635: c9 c8 09                 a2 = a1 - a5
 94638: c8 39 09                 a2 = a2 + t1
 94641: 84 97 07                 a0 = a2 & 0x7
 94644: c8 7c 0c                 a5 = a5 + a0
 94647: 01                       fallthrough
      :                          @7481
 94648: 82 a5                    s0 = u64 [a3]
 94650: ab b5 d8                 jump @7478 if s0 != a4
      :                          @7482
 94653: 7b ac                    u64 [a3] = a5
 94655: c9 79 09                 a2 = a2 - a0
 94658: 7b 92                    u64 [a2] = t0
 94660: 33 07 01                 a0 = 0x1
 94663: 28 4e                    jump @7490
      :                          @7483
 94665: 33 07                    a0 = 0
 94667: 33 09 08                 a2 = 0x8
 94670: 28 47                    jump @7490
      :                          @7484
 94672: 33 07 c0 22 03           a0 = 0x322c0
 94677: 33 04 00 00 01           t2 = 0x10000
 94682: c8 47 0b                 a4 = a0 + t2
 94685: 01                       fallthrough
      :                          @7485
 94686: 82 b6                    s1 = u64 [a4]
 94688: 95 6c 10                 a5 = s1 + 0x10
 94691: ac 6c 4d                 jump @7493 if a5 <u s1
      :                          @7486
 94694: 95 c9 08                 a2 = a5 + 0x8
 94697: d8 c9 0a                 a3 = a2 <u a5
 94700: d8 94 09                 a2 = t2 <u a2
 94703: d4 a9 09                 a2 = a2 | a3
 94706: 52 09 3e                 jump @7493 if a2 != 0
      :                          @7487
 94709: c9 c7 09                 a2 = a0 - a5
 94712: c8 49 09                 a2 = a2 + t2
 94715: 84 9a 07                 a3 = a2 & 0x7
 94718: c8 ac 0c                 a5 = a5 + a3
 94721: 01                       fallthrough
      :                          @7488
 94722: 82 b8                    a1 = u64 [a4]
 94724: ab 68 da                 jump @7485 if a1 != s1
      :                          @7489
 94727: 7b bc                    u64 [a4] = a5
 94729: c9 a9 09                 a2 = a2 - a3
 94732: 7b 92                    u64 [a2] = t0
 94734: 7b 93 08                 u64 [a2 + 0x8] = t1
 94737: 33 07 02                 a0 = 0x2
 94740: 01                       fallthrough
      :                          @7490
 94741: 82 18 10                 a1 = u64 [sp + 0x10]
 94744: 7b 87                    u64 [a1] = a0
 94746: 7b 89 08                 u64 [a1 + 0x8] = a2
 94749: 7b 87 10                 u64 [a1 + 0x10] = a0
 94752: 82 10 50                 ra = u64 [sp + 0x50]
 94755: 82 15 48                 s0 = u64 [sp + 0x48]
 94758: 82 16 40                 s1 = u64 [sp + 0x40]
 94761: 95 11 58                 sp = sp + 0x58
 94764: 32 00                    ret
      :                          @7491
 94766: 00                       trap
      :                          @7492
 94767: 00                       trap
      :                          @7493
 94768: 00                       trap
      :                          @7494
 94769: 00                       trap
      :                          @7495 [@dyn 549]
 94770: 3a 09 20 11 03           a2 = u64 [0x31120]
 94775: 7b 17 30                 u64 [sp + 0x30] = a0
 94778: 7b 18 38                 u64 [sp + 0x38] = a1
 94781: d6 95 07                 a0 = s0 mulhu a2
 94784: 98 77 09                 a0 = a0 >> 0x9
 94787: 96 77 f5 03              a0 = a0 * 0x3f5
 94791: c9 75 07                 a0 = s0 - a0
 94794: 33 08 f5 03              a1 = 0x3f5
 94798: 50 20 4c 04 e0 2a ff     ra = 1100, jump @2793
      :                          @7496 [@dyn 550]
 94805: 7b 17 28                 u64 [sp + 0x28] = a0
 94808: 64 85                    s0 = a1
 94810: 95 17 40                 a0 = sp + 0x40
 94813: 33 08 f1 03              a1 = 0x3f1
 94817: 33 09 f5 03              a2 = 0x3f5
 94821: 50 20 4e 04 78 19 ff     ra = 1102, jump @2421
      :                          @7497 [@dyn 551]
 94828: 82 17 40                 a0 = u64 [sp + 0x40]
 94831: 52 17 01 1a 02           jump @7511 if a0 != 1
      :                          @7498
 94836: 7b 15 18                 u64 [sp + 0x18] = s0
 94839: 82 16 48                 s1 = u64 [sp + 0x48]
 94842: 95 17 40                 a0 = sp + 0x40
 94845: 33 08 f5 03              a1 = 0x3f5
 94849: 33 09 f1 03              a2 = 0x3f1
 94853: 50 20 50 04 58 19 ff     ra = 1104, jump @2421
      :                          @7499 [@dyn 552]
 94860: 82 17 40                 a0 = u64 [sp + 0x40]
 94863: 52 17 01 fa 01           jump @7511 if a0 != 1
      :                          @7500
 94868: 3a 07 20 11 03           a0 = u64 [0x31120]
 94873: 82 15 38                 s0 = u64 [sp + 0x38]
 94876: 82 18 30                 a1 = u64 [sp + 0x30]
 94879: 93 85                    s0 = 0 if a1 == 0
 94881: 82 12 18                 t0 = u64 [sp + 0x18]
 94884: 82 18 28                 a1 = u64 [sp + 0x28]
 94887: 93 82                    t0 = 0 if a1 == 0
 94889: 82 19 48                 a2 = u64 [sp + 0x48]
 94892: d5 76 08                 a1 = s1 mulh a0
 94895: c8 68 08                 a1 = a1 + s1
 94898: 98 8a 3f                 a3 = a1 >> 0x3f
 94901: 99 88 09                 a1 = a1 >>a 0x9
 94904: c8 a8 08                 a1 = a1 + a3
 94907: 33 03 f5 03              t1 = 0x3f5
 94911: ca 38 08                 a1 = a1 * t1
 94914: c9 86 08                 a1 = s1 - a1
 94917: 88 8a 0b fc              a3 = a1 <u 0xfffffffffffffc0b
 94921: 3a 0b 18 11 03           a4 = u64 [0x31118]
 94926: 33 0c f5 03              a5 = 0x3f5
 94930: 94 ac                    a5 = 0 if a3 != 0
 94932: c8 c8 08                 a1 = a1 + a5
 94935: d5 b9 0a                 a3 = a2 mulh a4
 94938: c8 9a 0a                 a3 = a3 + a2
 94941: 98 ac 3f                 a5 = a3 >> 0x3f
 94944: 99 aa 09                 a3 = a3 >>a 0x9
 94947: c8 ca 0a                 a3 = a3 + a5
 94950: 96 aa f1 03              a3 = a3 * 0x3f1
 94954: c9 a9 09                 a2 = a2 - a3
 94957: 88 9a 0f fc              a3 = a2 <u 0xfffffffffffffc0f
 94961: 33 0c f1 03              a5 = 0x3f1
 94965: 94 ac                    a5 = 0 if a3 != 0
 94967: c8 c9 09                 a2 = a2 + a5
 94970: 49 11 40                 u64 [sp + 64] = 0
 94973: 49 11 48 08              u64 [sp + 72] = 0x8
 94977: 49 11 50                 u64 [sp + 80] = 0
 94980: 9a 5a f1 03              a3 = 0x3f1 - s0
 94984: d6 ba 0b                 a4 = a3 mulhu a4
 94987: 98 bb 09                 a4 = a4 >> 0x9
 94990: 96 bb f1 03              a4 = a4 * 0x3f1
 94994: c9 ba 0a                 a3 = a3 - a4
 94997: 7b 1a 30                 u64 [sp + 0x30] = a3
 95000: c9 23 0a                 a3 = t1 - t0
 95003: d6 7a 07                 a0 = a3 mulhu a0
 95006: 98 77 09                 a0 = a0 >> 0x9
 95009: ca 37 07                 a0 = a0 * t1
 95012: c9 7a 0a                 a3 = a3 - a0
 95015: 7b 1a 38                 u64 [sp + 0x38] = a3
 95018: ca 39 09                 a2 = a2 * t1
 95021: 96 88 f1 03              a1 = a1 * 0x3f1
 95025: 7b 18 10                 u64 [sp + 0x10] = a1
 95028: 3a 06 28 11 03           s1 = u64 [0x31128]
 95033: 7b 19 28                 u64 [sp + 0x28] = a2
 95036: ca 59 09                 a2 = a2 * s0
 95039: 7b 19 08                 u64 [sp + 0x8] = a2
 95042: ca 28 07                 a0 = a1 * t0
 95045: 7b 17 18                 u64 [sp + 0x18] = a0
 95048: c8 97 07                 a0 = a0 + a2
 95051: d6 67 08                 a1 = a0 mulhu s1
 95054: 98 88 13                 a1 = a1 >> 0x13
 95057: 33 05 a5 98 0f           s0 = 0xf98a5
 95062: ca 58 08                 a1 = a1 * s0
 95065: c9 87 07                 a0 = a0 - a1
 95068: 7b 17                    u64 [sp] = a0
 95070: 95 17 40                 a0 = sp + 0x40
 95073: 33 08                    a1 = 0
 95075: 50 20 52 04 dd df fe     ra = 1106, jump @1581
      :                          @7501 [@dyn 553]
 95082: 64 52                    t0 = s0
 95084: 64 6c                    a5 = s1
 95086: 82 19 50                 a2 = u64 [sp + 0x50]
 95089: 82 17 48                 a0 = u64 [sp + 0x48]
 95092: 82 18 40                 a1 = u64 [sp + 0x40]
 95095: 97 9a 03                 a3 = a2 << 0x3
 95098: c8 7a 0a                 a3 = a3 + a0
 95101: 82 1b                    a4 = u64 [sp]
 95103: 7b ab                    u64 [a3] = a4
 95105: 95 99 01                 a2 = a2 + 0x1
 95108: 7b 19 50                 u64 [sp + 0x50] = a2
 95111: 82 1a 38                 a3 = u64 [sp + 0x38]
 95114: 82 1b 10                 a4 = u64 [sp + 0x10]
 95117: ca ab 0a                 a3 = a4 * a3
 95120: 7b 1a 38                 u64 [sp + 0x38] = a3
 95123: 82 15 08                 s0 = u64 [sp + 0x8]
 95126: c8 a5 05                 s0 = s0 + a3
 95129: d6 65 0a                 a3 = s0 mulhu s1
 95132: 98 aa 13                 a3 = a3 >> 0x13
 95135: ca 2a 0a                 a3 = a3 * t0
 95138: c9 a5 0b                 a4 = s0 - a3
 95141: ab 89 25                 jump @7504 if a2 != a1
      :                          @7502
 95144: 95 17 40                 a0 = sp + 0x40
 95147: 64 c5                    s0 = a5
 95149: 64 26                    s1 = t0
 95151: 7b 1b 10                 u64 [sp + 0x10] = a4
 95154: 50 20 54 04 8e df fe     ra = 1108, jump @1581
      :                          @7503 [@dyn 554]
 95161: 82 1b 10                 a4 = u64 [sp + 0x10]
 95164: 64 62                    t0 = s1
 95166: 64 5c                    a5 = s0
 95168: 82 19 50                 a2 = u64 [sp + 0x50]
 95171: 82 17 48                 a0 = u64 [sp + 0x48]
 95174: 82 18 40                 a1 = u64 [sp + 0x40]
 95177: 01                       fallthrough
      :                          @7504
 95178: 82 15 20                 s0 = u64 [sp + 0x20]
 95181: 97 9a 03                 a3 = a2 << 0x3
 95184: c8 7a 0a                 a3 = a3 + a0
 95187: 7b ab                    u64 [a3] = a4
 95189: 95 99 01                 a2 = a2 + 0x1
 95192: 7b 19 50                 u64 [sp + 0x50] = a2
 95195: 82 1a 30                 a3 = u64 [sp + 0x30]
 95198: 82 1b 28                 a4 = u64 [sp + 0x28]
 95201: ca ab 06                 s1 = a4 * a3
 95204: 82 1a 18                 a3 = u64 [sp + 0x18]
 95207: c8 6a 0a                 a3 = a3 + s1
 95210: d6 ca 0b                 a4 = a3 mulhu a5
 95213: 98 bb 13                 a4 = a4 >> 0x13
 95216: ca 2b 0b                 a4 = a4 * t0
 95219: c9 ba 0b                 a4 = a3 - a4
 95222: ab 89 1d                 jump @7507 if a2 != a1
      :                          @7505
 95225: 95 17 40                 a0 = sp + 0x40
 95228: 7b 1b 30                 u64 [sp + 0x30] = a4
 95231: 50 20 56 04 41 df fe     ra = 1110, jump @1581
      :                          @7506 [@dyn 555]
 95238: 82 1b 30                 a4 = u64 [sp + 0x30]
 95241: 82 19 50                 a2 = u64 [sp + 0x50]
 95244: 82 18 40                 a1 = u64 [sp + 0x40]
 95247: 82 17 48                 a0 = u64 [sp + 0x48]
 95250: 01                       fallthrough
      :                          @7507
 95251: 97 9a 03                 a3 = a2 << 0x3
 95254: c8 7a 0a                 a3 = a3 + a0
 95257: 7b ab                    u64 [a3] = a4
 95259: 95 99 01                 a2 = a2 + 0x1
 95262: 7b 19 50                 u64 [sp + 0x50] = a2
 95265: ab 89 14                 jump @7510 if a2 != a1
      :                          @7508
 95268: 95 17 40                 a0 = sp + 0x40
 95271: 50 20 58 04 19 df fe     ra = 1112, jump @1581
      :                          @7509 [@dyn 556]
 95278: 82 19 50                 a2 = u64 [sp + 0x50]
 95281: 82 17 48                 a0 = u64 [sp + 0x48]
 95284: 01                       fallthrough
      :                          @7510
 95285: 82 18 38                 a1 = u64 [sp + 0x38]
 95288: c8 68 08                 a1 = a1 + s1
 95291: 97 8a 20                 a3 = a1 << 0x20
 95294: 14 0b 00 00 00 00 71 3f 50 83 a4 = 0x83503f7100000000
 95304: d6 ba 0a                 a3 = a3 mulhu a4
 95307: 98 aa 33                 a3 = a3 >> 0x33
 95310: 33 0b a5 98 0f           a4 = 0xf98a5
 95315: ca ba 0a                 a3 = a3 * a4
 95318: bf a8 08                 i32 a1 = a1 - a3
 95321: 97 88 20                 a1 = a1 << 0x20
 95324: 98 88 20                 a1 = a1 >> 0x20
 95327: 97 9a 03                 a3 = a2 << 0x3
 95330: c8 a7 07                 a0 = a0 + a3
 95333: 7b 78                    u64 [a0] = a1
 95335: 95 99 01                 a2 = a2 + 0x1
 95338: 7b 19 50                 u64 [sp + 0x50] = a2
 95341: 82 17 48                 a0 = u64 [sp + 0x48]
 95344: 82 18 40                 a1 = u64 [sp + 0x40]
 95347: 7b 59 10                 u64 [s0 + 0x10] = a2
 95350: 7b 57 08                 u64 [s0 + 0x8] = a0
 95353: 7b 58                    u64 [s0] = a1
 95355: 82 10 68                 ra = u64 [sp + 0x68]
 95358: 82 15 60                 s0 = u64 [sp + 0x60]
 95361: 82 16 58                 s1 = u64 [sp + 0x58]
 95364: 95 11 70                 sp = sp + 0x70
 95367: 32 00                    ret
      :                          @7511
 95369: 00                       trap
      :                          @7512
 95370: 82 9a                    a3 = u64 [a2]
 95372: 95 ab 40                 a4 = a3 + 0x40
 95375: ac ab 03 a4 01           jump @13935 if a4 <u a3
      :                          @7513
 95380: 95 b8 08                 a1 = a4 + 0x8
 95383: d8 b8 0c                 a5 = a1 <u a4
 95386: d8 82 08                 a1 = t0 <u a1
 95389: d4 c8 08                 a1 = a1 | a5
 95392: 52 08 f2 a3 01           jump @13935 if a1 != 0
      :                          @7514
 95397: c9 b7 08                 a1 = a0 - a4
 95400: c8 28 08                 a1 = a1 + t0
 95403: 84 8c 07                 a5 = a1 & 0x7
 95406: c8 cb 0b                 a4 = a4 + a5
 95409: 01                       fallthrough
      :                          @7515
 95410: 82 95                    s0 = u64 [a2]
 95412: ab a5 d6                 jump @7512 if s0 != a3
      :                          @7516
 95415: 7b 9b                    u64 [a2] = a4
 95417: 01                       fallthrough
      :                          @7517
 95418: c9 c8 08                 a1 = a1 - a5
 95421: 49 11 18 08              u64 [sp + 24] = 0x8
 95425: 7b 18 20                 u64 [sp + 0x20] = a1
 95428: 49 11 28                 u64 [sp + 40] = 0
 95431: 33 0c 78 12 03           a5 = 0x31278
 95436: 3a 07 78 12 03           a0 = u64 [0x31278]
 95441: 3a 06 30 11 03           s1 = u64 [0x31130]
 95446: 97 78 0d                 a1 = a0 << 0xd
 95449: d3 87 07                 a0 = a0 ^ a1
 95452: 98 78 07                 a1 = a0 >> 0x7
 95455: d3 87 07                 a0 = a0 ^ a1
 95458: 97 78 11                 a1 = a0 << 0x11
 95461: d3 87 07                 a0 = a0 ^ a1
 95464: ca 67 09                 a2 = a0 * s1
 95467: 3e 07 78 12 03           u64 [0x31278] = a0
 95472: 14 05 cd cc cc cc cc cc cc cc s0 = 0xcccccccccccccccd
 95482: d6 59 07                 a0 = a2 mulhu s0
 95485: 98 77 03                 a0 = a0 >> 0x3
 95488: 82 18 28                 a1 = u64 [sp + 0x28]
 95491: 82 1a 18                 a3 = u64 [sp + 0x18]
 95494: 33 02 0a                 t0 = 0xa
 95497: ca 27 07                 a0 = a0 * t0
 95500: c9 79 0b                 a4 = a2 - a0
 95503: 95 b3 01                 t1 = a4 + 0x1
 95506: 7b 13 08                 u64 [sp + 0x8] = t1
 95509: ab a8 24                 jump @7520 if a1 != a3
      :                          @7518
 95512: 95 17 18                 a0 = sp + 0x18
 95515: 7b 15                    u64 [sp] = s0
 95517: 64 b5                    s0 = a4
 95519: 50 20 5a 04 21 de fe     ra = 1114, jump @1581
      :                          @7519 [@dyn 557]
 95526: 33 02 0a                 t0 = 0xa
 95529: 64 5b                    a4 = s0
 95531: 82 15                    s0 = u64 [sp]
 95533: 33 0c 78 12 03           a5 = 0x31278
 95538: 82 13 08                 t1 = u64 [sp + 0x8]
 95541: 82 18 28                 a1 = u64 [sp + 0x28]
 95544: 01                       fallthrough
      :                          @7520
 95545: 82 17 20                 a0 = u64 [sp + 0x20]
 95548: 97 89 03                 a2 = a1 << 0x3
 95551: c8 97 07                 a0 = a0 + a2
 95554: 7b 73                    u64 [a0] = t1
 95556: 95 88 01                 a1 = a1 + 0x1
 95559: 7b 18 28                 u64 [sp + 0x28] = a1
 95562: 3a 07 78 12 03           a0 = u64 [0x31278]
 95567: 97 78 0d                 a1 = a0 << 0xd
 95570: d3 87 07                 a0 = a0 ^ a1
 95573: 98 78 07                 a1 = a0 >> 0x7
 95576: d3 87 07                 a0 = a0 ^ a1
 95579: 97 78 11                 a1 = a0 << 0x11
 95582: d3 87 07                 a0 = a0 ^ a1
 95585: ca 67 09                 a2 = a0 * s1
 95588: 3e 07 78 12 03           u64 [0x31278] = a0
 95593: d6 59 07                 a0 = a2 mulhu s0
 95596: 98 77 03                 a0 = a0 >> 0x3
 95599: 82 18 28                 a1 = u64 [sp + 0x28]
 95602: 82 1a 18                 a3 = u64 [sp + 0x18]
 95605: 96 77 0a                 a0 = a0 * 0xa
 95608: c9 79 09                 a2 = a2 - a0
 95611: c8 b9 09                 a2 = a2 + a4
 95614: 95 95 02                 s0 = a2 + 0x2
 95617: ab a8 14                 jump @7523 if a1 != a3
      :                          @7521
 95620: 95 17 18                 a0 = sp + 0x18
 95623: 50 20 5c 04 b9 dd fe     ra = 1116, jump @1581
      :                          @7522 [@dyn 558]
 95630: 82 13 08                 t1 = u64 [sp + 0x8]
 95633: 82 18 28                 a1 = u64 [sp + 0x28]
 95636: 01                       fallthrough
      :                          @7523
 95637: 82 17 20                 a0 = u64 [sp + 0x20]
 95640: 97 89 03                 a2 = a1 << 0x3
 95643: c8 97 07                 a0 = a0 + a2
 95646: 7b 75                    u64 [a0] = s0
 95648: 95 88 01                 a1 = a1 + 0x1
 95651: 7b 18 28                 u64 [sp + 0x28] = a1
 95654: 33 0c 78 12 03           a5 = 0x31278
 95659: 3a 07 78 12 03           a0 = u64 [0x31278]
 95664: c8 53 03                 t1 = t1 + s0
 95667: 97 78 0d                 a1 = a0 << 0xd
 95670: d3 87 07                 a0 = a0 ^ a1
 95673: 98 78 07                 a1 = a0 >> 0x7
 95676: d3 87 07                 a0 = a0 ^ a1
 95679: 97 78 11                 a1 = a0 << 0x11
 95682: d3 87 07                 a0 = a0 ^ a1
 95685: ca 67 09                 a2 = a0 * s1
 95688: 3e 07 78 12 03           u64 [0x31278] = a0
 95693: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
 95703: d6 b9 07                 a0 = a2 mulhu a4
 95706: 98 77 03                 a0 = a0 >> 0x3
 95709: 33 02 0a                 t0 = 0xa
 95712: 82 18 28                 a1 = u64 [sp + 0x28]
 95715: 82 1a 18                 a3 = u64 [sp + 0x18]
 95718: ca 27 07                 a0 = a0 * t0
 95721: c9 79 09                 a2 = a2 - a0
 95724: c8 39 09                 a2 = a2 + t1
 95727: 95 95 01                 s0 = a2 + 0x1
 95730: ab a8 23                 jump @7526 if a1 != a3
      :                          @7524
 95733: 95 17 18                 a0 = sp + 0x18
 95736: 7b 13 08                 u64 [sp + 0x8] = t1
 95739: 7b 1b                    u64 [sp] = a4
 95741: 50 20 5e 04 43 dd fe     ra = 1118, jump @1581
      :                          @7525 [@dyn 559]
 95748: 82 1b                    a4 = u64 [sp]
 95750: 82 13 08                 t1 = u64 [sp + 0x8]
 95753: 33 02 0a                 t0 = 0xa
 95756: 33 0c 78 12 03           a5 = 0x31278
 95761: 82 18 28                 a1 = u64 [sp + 0x28]
 95764: 01                       fallthrough
      :                          @7526
 95765: 82 17 20                 a0 = u64 [sp + 0x20]
 95768: 97 89 03                 a2 = a1 << 0x3
 95771: c8 97 07                 a0 = a0 + a2
 95774: 7b 75                    u64 [a0] = s0
 95776: 95 88 01                 a1 = a1 + 0x1
 95779: 7b 18 28                 u64 [sp + 0x28] = a1
 95782: 3a 07 78 12 03           a0 = u64 [0x31278]
 95787: c8 53 03                 t1 = t1 + s0
 95790: 97 78 0d                 a1 = a0 << 0xd
 95793: d3 87 07                 a0 = a0 ^ a1
 95796: 98 78 07                 a1 = a0 >> 0x7
 95799: d3 87 07                 a0 = a0 ^ a1
 95802: 97 78 11                 a1 = a0 << 0x11
 95805: d3 87 07                 a0 = a0 ^ a1
 95808: ca 67 09                 a2 = a0 * s1
 95811: 3e 07 78 12 03           u64 [0x31278] = a0
 95816: d6 b9 07                 a0 = a2 mulhu a4
 95819: 98 77 03                 a0 = a0 >> 0x3
 95822: 82 18 28                 a1 = u64 [sp + 0x28]
 95825: 82 1a 18                 a3 = u64 [sp + 0x18]
 95828: 96 77 0a                 a0 = a0 * 0xa
 95831: c9 79 09                 a2 = a2 - a0
 95834: c8 39 09                 a2 = a2 + t1
 95837: 95 95 01                 s0 = a2 + 0x1
 95840: ab a8 17                 jump @7529 if a1 != a3
      :                          @7527
 95843: 95 17 18                 a0 = sp + 0x18
 95846: 7b 13 08                 u64 [sp + 0x8] = t1
 95849: 50 20 60 04 d7 dc fe     ra = 1120, jump @1581
      :                          @7528 [@dyn 560]
 95856: 82 13 08                 t1 = u64 [sp + 0x8]
 95859: 82 18 28                 a1 = u64 [sp + 0x28]
 95862: 01                       fallthrough
      :                          @7529
 95863: 82 17 20                 a0 = u64 [sp + 0x20]
 95866: 97 89 03                 a2 = a1 << 0x3
 95869: c8 97 07                 a0 = a0 + a2
 95872: 7b 75                    u64 [a0] = s0
 95874: 95 88 01                 a1 = a1 + 0x1
 95877: 7b 18 28                 u64 [sp + 0x28] = a1
 95880: 33 0b 78 12 03           a4 = 0x31278
 95885: 3a 07 78 12 03           a0 = u64 [0x31278]
 95890: c8 53 03                 t1 = t1 + s0
 95893: 97 78 0d                 a1 = a0 << 0xd
 95896: d3 87 07                 a0 = a0 ^ a1
 95899: 98 78 07                 a1 = a0 >> 0x7
 95902: d3 87 07                 a0 = a0 ^ a1
 95905: 97 78 11                 a1 = a0 << 0x11
 95908: d3 87 07                 a0 = a0 ^ a1
 95911: ca 67 09                 a2 = a0 * s1
 95914: 3e 07 78 12 03           u64 [0x31278] = a0
 95919: 14 0c cd cc cc cc cc cc cc cc a5 = 0xcccccccccccccccd
 95929: d6 c9 07                 a0 = a2 mulhu a5
 95932: 98 77 03                 a0 = a0 >> 0x3
 95935: 33 02 0a                 t0 = 0xa
 95938: 82 18 28                 a1 = u64 [sp + 0x28]
 95941: 82 1a 18                 a3 = u64 [sp + 0x18]
 95944: ca 27 07                 a0 = a0 * t0
 95947: c9 79 09                 a2 = a2 - a0
 95950: c8 39 09                 a2 = a2 + t1
 95953: 95 95 01                 s0 = a2 + 0x1
 95956: ab a8 23                 jump @7532 if a1 != a3
      :                          @7530
 95959: 95 17 18                 a0 = sp + 0x18
 95962: 7b 13 08                 u64 [sp + 0x8] = t1
 95965: 7b 1c                    u64 [sp] = a5
 95967: 50 20 62 04 61 dc fe     ra = 1122, jump @1581
      :                          @7531 [@dyn 561]
 95974: 82 1c                    a5 = u64 [sp]
 95976: 82 13 08                 t1 = u64 [sp + 0x8]
 95979: 33 02 0a                 t0 = 0xa
 95982: 33 0b 78 12 03           a4 = 0x31278
 95987: 82 18 28                 a1 = u64 [sp + 0x28]
 95990: 01                       fallthrough
      :                          @7532
 95991: 82 17 20                 a0 = u64 [sp + 0x20]
 95994: 97 89 03                 a2 = a1 << 0x3
 95997: c8 97 07                 a0 = a0 + a2
 96000: 7b 75                    u64 [a0] = s0
 96002: 95 88 01                 a1 = a1 + 0x1
 96005: 7b 18 28                 u64 [sp + 0x28] = a1
 96008: 3a 07 78 12 03           a0 = u64 [0x31278]
 96013: c8 53 03                 t1 = t1 + s0
 96016: 97 78 0d                 a1 = a0 << 0xd
 96019: d3 87 07                 a0 = a0 ^ a1
 96022: 98 78 07                 a1 = a0 >> 0x7
 96025: d3 87 07                 a0 = a0 ^ a1
 96028: 97 78 11                 a1 = a0 << 0x11
 96031: d3 87 07                 a0 = a0 ^ a1
 96034: ca 67 09                 a2 = a0 * s1
 96037: 3e 07 78 12 03           u64 [0x31278] = a0
 96042: d6 c9 07                 a0 = a2 mulhu a5
 96045: 98 77 03                 a0 = a0 >> 0x3
 96048: 82 18 28                 a1 = u64 [sp + 0x28]
 96051: 82 1a 18                 a3 = u64 [sp + 0x18]
 96054: 96 77 0a                 a0 = a0 * 0xa
 96057: c9 79 09                 a2 = a2 - a0
 96060: c8 39 09                 a2 = a2 + t1
 96063: 95 95 01                 s0 = a2 + 0x1
 96066: ab a8 17                 jump @7535 if a1 != a3
      :                          @7533
 96069: 95 17 18                 a0 = sp + 0x18
 96072: 7b 13 08                 u64 [sp + 0x8] = t1
 96075: 50 20 64 04 f5 db fe     ra = 1124, jump @1581
      :                          @7534 [@dyn 562]
 96082: 82 13 08                 t1 = u64 [sp + 0x8]
 96085: 82 18 28                 a1 = u64 [sp + 0x28]
 96088: 01                       fallthrough
      :                          @7535
 96089: 82 17 20                 a0 = u64 [sp + 0x20]
 96092: 97 89 03                 a2 = a1 << 0x3
 96095: c8 97 07                 a0 = a0 + a2
 96098: 7b 75                    u64 [a0] = s0
 96100: 95 88 01                 a1 = a1 + 0x1
 96103: 7b 18 28                 u64 [sp + 0x28] = a1
 96106: 33 0b 78 12 03           a4 = 0x31278
 96111: 3a 07 78 12 03           a0 = u64 [0x31278]
 96116: c8 53 03                 t1 = t1 + s0
 96119: 97 78 0d                 a1 = a0 << 0xd
 96122: d3 87 07                 a0 = a0 ^ a1
 96125: 98 78 07                 a1 = a0 >> 0x7
 96128: d3 87 07                 a0 = a0 ^ a1
 96131: 97 78 11                 a1 = a0 << 0x11
 96134: d3 87 07                 a0 = a0 ^ a1
 96137: ca 67 09                 a2 = a0 * s1
 96140: 3e 07 78 12 03           u64 [0x31278] = a0
 96145: 14 0c cd cc cc cc cc cc cc cc a5 = 0xcccccccccccccccd
 96155: d6 c9 07                 a0 = a2 mulhu a5
 96158: 98 77 03                 a0 = a0 >> 0x3
 96161: 33 02 0a                 t0 = 0xa
 96164: 82 18 28                 a1 = u64 [sp + 0x28]
 96167: 82 1a 18                 a3 = u64 [sp + 0x18]
 96170: ca 27 07                 a0 = a0 * t0
 96173: c9 79 09                 a2 = a2 - a0
 96176: c8 39 09                 a2 = a2 + t1
 96179: 95 95 01                 s0 = a2 + 0x1
 96182: ab a8 23                 jump @7538 if a1 != a3
      :                          @7536
 96185: 95 17 18                 a0 = sp + 0x18
 96188: 7b 13 08                 u64 [sp + 0x8] = t1
 96191: 7b 1c                    u64 [sp] = a5
 96193: 50 20 66 04 7f db fe     ra = 1126, jump @1581
      :                          @7537 [@dyn 563]
 96200: 82 1c                    a5 = u64 [sp]
 96202: 82 13 08                 t1 = u64 [sp + 0x8]
 96205: 33 02 0a                 t0 = 0xa
 96208: 33 0b 78 12 03           a4 = 0x31278
 96213: 82 18 28                 a1 = u64 [sp + 0x28]
 96216: 01                       fallthrough
      :                          @7538
 96217: 82 17 20                 a0 = u64 [sp + 0x20]
 96220: 97 89 03                 a2 = a1 << 0x3
 96223: c8 97 07                 a0 = a0 + a2
 96226: 7b 75                    u64 [a0] = s0
 96228: 95 88 01                 a1 = a1 + 0x1
 96231: 7b 18 28                 u64 [sp + 0x28] = a1
 96234: 3a 07 78 12 03           a0 = u64 [0x31278]
 96239: c8 53 03                 t1 = t1 + s0
 96242: 97 78 0d                 a1 = a0 << 0xd
 96245: d3 87 07                 a0 = a0 ^ a1
 96248: 98 78 07                 a1 = a0 >> 0x7
 96251: d3 87 07                 a0 = a0 ^ a1
 96254: 97 78 11                 a1 = a0 << 0x11
 96257: d3 87 07                 a0 = a0 ^ a1
 96260: ca 67 09                 a2 = a0 * s1
 96263: 3e 07 78 12 03           u64 [0x31278] = a0
 96268: d6 c9 07                 a0 = a2 mulhu a5
 96271: 98 77 03                 a0 = a0 >> 0x3
 96274: 82 18 28                 a1 = u64 [sp + 0x28]
 96277: 82 1a 18                 a3 = u64 [sp + 0x18]
 96280: 96 77 0a                 a0 = a0 * 0xa
 96283: c9 79 09                 a2 = a2 - a0
 96286: c8 39 09                 a2 = a2 + t1
 96289: 95 95 01                 s0 = a2 + 0x1
 96292: ab a8 17                 jump @7541 if a1 != a3
      :                          @7539
 96295: 95 17 18                 a0 = sp + 0x18
 96298: 7b 13 08                 u64 [sp + 0x8] = t1
 96301: 50 20 68 04 13 db fe     ra = 1128, jump @1581
      :                          @7540 [@dyn 564]
 96308: 82 13 08                 t1 = u64 [sp + 0x8]
 96311: 82 18 28                 a1 = u64 [sp + 0x28]
 96314: 01                       fallthrough
      :                          @7541
 96315: 82 17 20                 a0 = u64 [sp + 0x20]
 96318: 97 89 03                 a2 = a1 << 0x3
 96321: c8 97 07                 a0 = a0 + a2
 96324: 7b 75                    u64 [a0] = s0
 96326: 95 88 01                 a1 = a1 + 0x1
 96329: 7b 18 28                 u64 [sp + 0x28] = a1
 96332: 33 07 78 12 03           a0 = 0x31278
 96337: 3a 08 78 12 03           a1 = u64 [0x31278]
 96342: c8 35 05                 s0 = s0 + t1
 96345: 97 89 0d                 a2 = a1 << 0xd
 96348: d3 98 08                 a1 = a1 ^ a2
 96351: 98 89 07                 a2 = a1 >> 0x7
 96354: d3 98 08                 a1 = a1 ^ a2
 96357: 97 89 11                 a2 = a1 << 0x11
 96360: d3 98 08                 a1 = a1 ^ a2
 96363: ca 68 09                 a2 = a1 * s1
 96366: 3e 08 78 12 03           u64 [0x31278] = a1
 96371: 14 08 cd cc cc cc cc cc cc cc a1 = 0xcccccccccccccccd
 96381: d6 89 08                 a1 = a2 mulhu a1
 96384: 98 88 03                 a1 = a1 >> 0x3
 96387: 96 88 0a                 a1 = a1 * 0xa
 96390: c9 89 09                 a2 = a2 - a1
 96393: c8 95 08                 a1 = s0 + a2
 96396: 95 88 01                 a1 = a1 + 0x1
 96399: 33 09 01                 a2 = 0x1
 96402: 01                       fallthrough
      :                          @7542
 96403: 3a 0a 78 12 03           a3 = u64 [0x31278]
 96408: 97 ab 0d                 a4 = a3 << 0xd
 96411: d3 ba 0a                 a3 = a3 ^ a4
 96414: 98 ab 07                 a4 = a3 >> 0x7
 96417: d3 ba 0a                 a3 = a3 ^ a4
 96420: 97 ab 11                 a4 = a3 << 0x11
 96423: d3 ba 0a                 a3 = a3 ^ a4
 96426: ca 6a 0b                 a4 = a3 * s1
 96429: cd 8b 05                 s0 = a4 %u a1
 96432: 3e 0a 78 12 03           u64 [0x31278] = a3
 96437: 64 5a                    a3 = s0
 96439: 64 8c                    a5 = a1
 96441: 01                       fallthrough
      :                          @7543
 96442: 64 cb                    a4 = a5
 96444: cd ca 0c                 a5 = a3 %u a5
 96447: 64 ba                    a3 = a4
 96449: 52 0c f9                 jump @7543 if a5 != 0
      :                          @7544
 96452: ab 9b cf                 jump @7542 if a4 != a2
      :                          @7545
 96455: 82 1a 28                 a3 = u64 [sp + 0x28]
 96458: 82 12 20                 t0 = u64 [sp + 0x20]
 96461: 51 0a 6f                 jump @7554 if a3 == 0
      :                          @7546
 96464: 7b 12 08                 u64 [sp + 0x8] = t0
 96467: 7b 1a                    u64 [sp] = a3
 96469: 97 a7 03                 a0 = a3 << 0x3
 96472: 33 00 c0 22 03           ra = 0x322c0
 96477: 33 04 00 00 01           t2 = 0x10000
 96482: c8 40 0c                 a5 = ra + t2
 96485: 01                       fallthrough
      :                          @7547
 96486: 82 c9                    a2 = u64 [a5]
 96488: c8 79 0b                 a4 = a2 + a0
 96491: ac 9b a5 00              jump @7563 if a4 <u a2
      :                          @7548
 96495: 95 ba 08                 a3 = a4 + 0x8
 96498: d8 ba 06                 s1 = a3 <u a4
 96501: d8 a4 0a                 a3 = t2 <u a3
 96504: d4 6a 0a                 a3 = a3 | s1
 96507: 52 0a 95 00              jump @7563 if a3 != 0
      :                          @7549
 96511: c9 b0 0a                 a3 = ra - a4
 96514: c8 4a 0a                 a3 = a3 + t2
 96517: 84 a6 07                 s1 = a3 & 0x7
 96520: c8 6b 0b                 a4 = a4 + s1
 96523: 01                       fallthrough
      :                          @7550
 96524: 82 c2                    t0 = u64 [a5]
 96526: ab 92 d8                 jump @7547 if t0 != a2
      :                          @7551
 96529: 7b cb                    u64 [a5] = a4
 96531: 33 03                    t1 = 0
 96533: c9 6a 07                 a0 = a3 - s1
 96536: 82 12 08                 t0 = u64 [sp + 0x8]
 96539: 64 2c                    a5 = t0
 96541: 64 7b                    a4 = a0
 96543: 82 1a                    a3 = u64 [sp]
 96545: 64 a6                    s1 = a3
 96547: 01                       fallthrough
      :                          @7552
 96548: 82 c9                    a2 = u64 [a5]
 96550: ca 59 09                 a2 = a2 * s0
 96553: cd 89 09                 a2 = a2 %u a1
 96556: 7b b9                    u64 [a4] = a2
 96558: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 96561: 95 bb 08                 a4 = a4 + 0x8
 96564: 95 cc 08                 a5 = a5 + 0x8
 96567: 52 06 ed                 jump @7552 if s1 != 0
      :                          @7553
 96570: 28 06                    jump @7555
      :                          @7554
 96572: 33 07 08                 a0 = 0x8
 96575: 01                       fallthrough
      :                          @7555
 96576: 82 19 10                 a2 = u64 [sp + 0x10]
 96579: 7b 97 08                 u64 [a2 + 0x8] = a0
 96582: 82 17 18                 a0 = u64 [sp + 0x18]
 96585: 7b 9a                    u64 [a2] = a3
 96587: 7b 9a 10                 u64 [a2 + 0x10] = a3
 96590: 7b 98 18                 u64 [a2 + 0x18] = a1
 96593: 7b 95 20                 u64 [a2 + 0x20] = s0
 96596: 51 07 2e                 jump @7562 if a0 == 0
      :                          @7556
 96599: 33 08 00 20              a1 = 0x2000
 96603: ac 78 27                 jump @7562 if a1 <u a0
      :                          @7557
 96606: 97 77 03                 a0 = a0 << 0x3
 96609: 33 08 c0 22 03           a1 = 0x322c0
 96614: 95 88 00 00 01           a1 = a1 + 0x10000
 96619: 01                       fallthrough
      :                          @7558
 96620: 82 89                    a2 = u64 [a1]
 96622: c9 98 0a                 a3 = a1 - a2
 96625: ab 2a 11                 jump @7562 if a3 != t0
      :                          @7559
 96628: c9 79 0a                 a3 = a2 - a0
 96631: 01                       fallthrough
      :                          @7560
 96632: 82 8b                    a4 = u64 [a1]
 96634: ab 9b f2                 jump @7558 if a4 != a2
      :                          @7561
 96637: 7b 8a                    u64 [a1] = a3
 96639: 33 0c                    a5 = 0
 96641: 01                       fallthrough
      :                          @7562
 96642: 82 10 40                 ra = u64 [sp + 0x40]
 96645: 82 15 38                 s0 = u64 [sp + 0x38]
 96648: 82 16 30                 s1 = u64 [sp + 0x30]
 96651: 95 11 48                 sp = sp + 0x48
 96654: 32 00                    ret
      :                          @7563
 96656: 00                       trap
      :                          @7564 [@dyn 565]
 96657: 82 17 20                 a0 = u64 [sp + 0x20]
 96660: 52 17 01 1a 01           jump @7586 if a0 != 1
      :                          @7565
 96665: 51 06 14 01              jump @7585 if s1 == 0
      :                          @7566
 96669: 82 17 28                 a0 = u64 [sp + 0x28]
 96672: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 96682: d3 87 09                 a2 = a0 ^ a1
 96685: e1 69 09                 a2 = a2 | ~s1
 96688: 51 09 fc 00              jump @7584 if a2 == 0
      :                          @7567
 96692: ce 67 07                 a0 = a0 %s s1
 96695: c8 67 07                 a0 = a0 + s1
 96698: d3 78 08                 a1 = a1 ^ a0
 96701: e1 68 08                 a1 = a1 | ~s1
 96704: 51 08 ec 00              jump @7584 if a1 == 0
      :                          @7568
 96708: 49 11 20                 u64 [sp + 32] = 0
 96711: 49 11 28 01              u64 [sp + 40] = 0x1
 96715: 49 11 30                 u64 [sp + 48] = 0
 96718: 82 1a 18                 a3 = u64 [sp + 0x18]
 96721: 51 0a bc 00              jump @7583 if a3 == 0
      :                          @7569
 96725: 7b 15                    u64 [sp] = s0
 96727: 33 08                    a1 = 0
 96729: ce 67 07                 a0 = a0 %s s1
 96732: 82 19 10                 a2 = u64 [sp + 0x10]
 96735: ca 97 07                 a0 = a0 * a2
 96738: cd 67 0b                 a4 = a0 %u s1
 96741: 97 a5 03                 s0 = a3 << 0x3
 96744: 82 1c 08                 a5 = u64 [sp + 0x8]
 96747: 95 cc f8                 a5 = a5 + 0xfffffffffffffff8
 96750: 33 07 01                 a0 = 0x1
 96753: 7b 1c 18                 u64 [sp + 0x18] = a5
 96756: 28 19                    jump @7571
      :                          @7570
 96758: c8 87 09                 a2 = a0 + a1
 96761: 33 0a 01                 a3 = 0x1
 96764: 78 9a                    u8 [a2] = a3
 96766: c8 a8 08                 a1 = a1 + a3
 96769: 7b 18 30                 u64 [sp + 0x30] = a1
 96772: c9 6b 0b                 a4 = a4 - s1
 96775: 95 55 f8                 s0 = s0 + 0xfffffffffffffff8
 96778: 51 05 5d                 jump @7580 if s0 == 0
      :                          @7571
 96781: c8 5c 09                 a2 = a5 + s0
 96784: 82 96                    s1 = u64 [a2]
 96786: ae 6b 34                 jump @7577 if a4 >=u s1
      :                          @7572
 96789: 82 17 20                 a0 = u64 [sp + 0x20]
 96792: ab 78 18                 jump @7575 if a1 != a0
      :                          @7573
 96795: 95 17 20                 a0 = sp + 0x20
 96798: 64 b6                    s1 = a4
 96800: 50 20 6c 04 a2 da fe     ra = 1132, jump @1617
      :                          @7574 [@dyn 566]
 96807: 82 1c 18                 a5 = u64 [sp + 0x18]
 96810: 64 6b                    a4 = s1
 96812: 82 18 30                 a1 = u64 [sp + 0x30]
 96815: 01                       fallthrough
      :                          @7575
 96816: 82 17 28                 a0 = u64 [sp + 0x28]
 96819: c8 87 09                 a2 = a0 + a1
 96822: 46 09                    u8 [a2 + 0] = 0
 96824: 95 88 01                 a1 = a1 + 0x1
 96827: 7b 18 30                 u64 [sp + 0x30] = a1
 96830: 95 55 f8                 s0 = s0 + 0xfffffffffffffff8
 96833: 52 05 cc                 jump @7571 if s0 != 0
      :                          @7576
 96836: 28 23                    jump @7580
      :                          @7577
 96838: 82 19 20                 a2 = u64 [sp + 0x20]
 96841: ab 98 ad                 jump @7570 if a1 != a2
      :                          @7578
 96844: 95 17 20                 a0 = sp + 0x20
 96847: 7b 1b 10                 u64 [sp + 0x10] = a4
 96850: 50 20 6e 04 70 da fe     ra = 1134, jump @1617
      :                          @7579 [@dyn 567]
 96857: 82 1c 18                 a5 = u64 [sp + 0x18]
 96860: 82 1b 10                 a4 = u64 [sp + 0x10]
 96863: 82 18 30                 a1 = u64 [sp + 0x30]
 96866: 82 17 28                 a0 = u64 [sp + 0x28]
 96869: 28 91                    jump @7570
      :                          @7580
 96871: 98 87 01                 a0 = a1 >> 0x1
 96874: 82 15                    s0 = u64 [sp]
 96876: 51 07 21                 jump @7583 if a0 == 0
      :                          @7581
 96879: 82 19 28                 a2 = u64 [sp + 0x28]
 96882: c8 98 08                 a1 = a1 + a2
 96885: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 96888: 01                       fallthrough
      :                          @7582
 96889: 7c 8a                    a3 = u8 [a1]
 96891: 7c 9b                    a4 = u8 [a2]
 96893: 78 9a                    u8 [a2] = a3
 96895: 78 8b                    u8 [a1] = a4
 96897: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 96900: 95 99 01                 a2 = a2 + 0x1
 96903: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 96906: 52 07 ef                 jump @7582 if a0 != 0
      :                          @7583
 96909: 82 17 30                 a0 = u64 [sp + 0x30]
 96912: 82 18 28                 a1 = u64 [sp + 0x28]
 96915: 82 19 20                 a2 = u64 [sp + 0x20]
 96918: 7b 57 10                 u64 [s0 + 0x10] = a0
 96921: 7b 58 08                 u64 [s0 + 0x8] = a1
 96924: 7b 59                    u64 [s0] = a2
 96926: 82 10 48                 ra = u64 [sp + 0x48]
 96929: 82 15 40                 s0 = u64 [sp + 0x40]
 96932: 82 16 38                 s1 = u64 [sp + 0x38]
 96935: 95 11 50                 sp = sp + 0x50
 96938: 32 00                    ret
      :                          @7584
 96940: 00                       trap
      :                          @7585
 96941: 00                       trap
      :                          @7586
 96942: 00                       trap
      :                          @7587
 96943: 95 11 40 ff              sp = sp + 0xffffffffffffff40
 96947: 7b 10 b8 00              u64 [sp + 0xb8] = ra
 96951: 7b 15 b0 00              u64 [sp + 0xb0] = s0
 96955: 7b 16 a8 00              u64 [sp + 0xa8] = s1
 96959: 33 0a 03                 a3 = 0x3
 96962: ae a9 0e                 jump @7589 if a2 >=u a3
      :                          @7588
 96965: 97 97 03                 a0 = a2 << 0x3
 96968: c8 87 07                 a0 = a0 + a1
 96971: 82 77                    a0 = u64 [a0]
 96973: 28 fe 03                 jump @7686
      :                          @7589
 96976: 33 03 c0 22 03           t1 = 0x322c0
 96981: 33 02 00 00 01           t0 = 0x10000
 96986: c8 23 04                 t2 = t1 + t0
 96989: 01                       fallthrough
      :                          @7590
 96990: 82 4a                    a3 = u64 [t2]
 96992: 95 ab 18                 a4 = a3 + 0x18
 96995: ac ab 02 04              jump @7695 if a4 <u a3
      :                          @7591
 96999: 95 bc 08                 a5 = a4 + 0x8
 97002: d8 bc 06                 s1 = a5 <u a4
 97005: d8 c2 0c                 a5 = t0 <u a5
 97008: d4 6c 0c                 a5 = a5 | s1
 97011: 52 0c f2 03              jump @7695 if a5 != 0
      :                          @7592
 97015: c9 b3 05                 s0 = t1 - a4
 97018: c8 25 00                 ra = s0 + t0
 97021: 84 0c 07                 a5 = ra & 0x7
 97024: c8 cb 0b                 a4 = a4 + a5
 97027: 01                       fallthrough
      :                          @7593
 97028: 82 46                    s1 = u64 [t2]
 97030: ab a6 d8                 jump @7590 if s1 != a3
      :                          @7594
 97033: 7b 4b                    u64 [t2] = a4
 97035: 64 76                    s1 = a0
 97037: 7b 19 20                 u64 [sp + 0x20] = a2
 97040: 7b 18                    u64 [sp] = a1
 97042: c9 c0 05                 s0 = ra - a5
 97045: 33 09 18                 a2 = 0x18
 97048: 64 57                    a0 = s0
 97050: 33 08                    a1 = 0
 97052: 50 20 70 04 fa 90 01     ra = 1136, jump @13687
      :                          @7595 [@dyn 568]
 97059: 49 21 90 00 03           u64 [sp + 144] = 0x3
 97064: 7b 15 98 00              u64 [sp + 0x98] = s0
 97068: 49 21 a0 00 03           u64 [sp + 160] = 0x3
 97073: 95 17 30                 a0 = sp + 0x30
 97076: 95 18 90 00              a1 = sp + 0x90
 97080: 33 09 03                 a2 = 0x3
 97083: 50 20 72 04 b6 de fe     ra = 1138, jump @1721
      :                          @7596 [@dyn 569]
 97090: 82 1b 40                 a4 = u64 [sp + 0x40]
 97093: 33 07 01                 a0 = 0x1
 97096: e4 7b 09                 a2 = maxu(a4, a0)
 97099: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 97102: 51 09 95 03              jump @7693 if a2 == 0
      :                          @7597
 97106: 82 1a 38                 a3 = u64 [sp + 0x38]
 97109: 82 a8 28                 a1 = u64 [a3 + 0x28]
 97112: 51 08 87 03              jump @7689 if a1 == 0
      :                          @7598
 97116: 82 a8 20                 a1 = u64 [a3 + 0x20]
 97119: 49 08 01                 u64 [a1 + 0] = 0x1
 97122: 51 19 01 80 03           jump @7692 if a2 == 1
      :                          @7599
 97127: 82 a8 40                 a1 = u64 [a3 + 0x40]
 97130: 53 18 02 76 03           jump @7690 if a1 <u 2
      :                          @7600
 97135: 82 a7 38                 a0 = u64 [a3 + 0x38]
 97138: 49 17 08 01              u64 [a0 + 8] = 0x1
 97142: 51 0b 6b 03              jump @7691 if a4 == 0
      :                          @7601
 97146: 82 a8 10                 a1 = u64 [a3 + 0x10]
 97149: 51 08 62 03              jump @7689 if a1 == 0
      :                          @7602
 97153: 82 67                    a0 = u64 [s1]
 97155: 82 a8 08                 a1 = u64 [a3 + 0x8]
 97158: 7b 87                    u64 [a1] = a0
 97160: 82 a8 10                 a1 = u64 [a3 + 0x10]
 97163: 53 18 02 59 03           jump @7694 if a1 <u 2
      :                          @7603
 97168: 82 68 08                 a1 = u64 [s1 + 0x8]
 97171: 82 a9 08                 a2 = u64 [a3 + 0x8]
 97174: 7b 98 08                 u64 [a2 + 0x8] = a1
 97177: 82 a8 10                 a1 = u64 [a3 + 0x10]
 97180: 53 18 03 44 03           jump @7690 if a1 <u 3
      :                          @7604
 97185: 82 68 10                 a1 = u64 [s1 + 0x10]
 97188: 7b 1a 28                 u64 [sp + 0x28] = a3
 97191: 82 a9 08                 a2 = u64 [a3 + 0x8]
 97194: 98 b7 3c                 a0 = a4 >> 0x3c
 97197: 7b 98 10                 u64 [a2 + 0x10] = a1
 97200: 52 07 37 03              jump @7697 if a0 != 0
      :                          @7605
 97204: 82 18 30                 a1 = u64 [sp + 0x30]
 97207: 7b 18 10                 u64 [sp + 0x10] = a1
 97210: 82 18 20                 a1 = u64 [sp + 0x20]
 97213: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
 97216: 7b 18 18                 u64 [sp + 0x18] = a1
 97219: 88 72 01                 t0 = a0 <u 0x1
 97222: 7b 1b 20                 u64 [sp + 0x20] = a4
 97225: 97 b9 03                 a2 = a4 << 0x3
 97228: 97 22 03                 t0 = t0 << 0x3
 97231: 33 04 c0 22 03           t2 = 0x322c0
 97236: 33 03 00 00 01           t1 = 0x10000
 97241: c8 34 00                 ra = t2 + t1
 97244: 01                       fallthrough
      :                          @7606
 97245: 82 05                    s0 = u64 [ra]
 97247: c8 95 0c                 a5 = s0 + a2
 97250: ac 5c 04 03              jump @7696 if a5 <u s0
      :                          @7607
 97254: c8 2c 07                 a0 = a5 + t0
 97257: d8 c7 0a                 a3 = a0 <u a5
 97260: d8 73 07                 a0 = t1 <u a0
 97263: d4 a7 07                 a0 = a0 | a3
 97266: 52 07 f4 02              jump @7696 if a0 != 0
      :                          @7608
 97270: c9 c4 07                 a0 = t2 - a5
 97273: c8 37 07                 a0 = a0 + t1
 97276: 84 7a 07                 a3 = a0 & 0x7
 97279: c8 ac 0c                 a5 = a5 + a3
 97282: 01                       fallthrough
      :                          @7609
 97283: 82 08                    a1 = u64 [ra]
 97285: ab 58 d8                 jump @7606 if a1 != s0
      :                          @7610
 97288: 7b 0c                    u64 [ra] = a5
 97290: 33 0b                    a4 = 0
 97292: c9 a7 06                 s1 = a0 - a3
 97295: 64 67                    a0 = s1
 97297: 33 08                    a1 = 0
 97299: 50 20 74 04 03 90 01     ra = 1140, jump @13687
      :                          @7611 [@dyn 570]
 97306: 82 15 20                 s0 = u64 [sp + 0x20]
 97309: 7b 15 90 00              u64 [sp + 0x90] = s0
 97313: 7b 16 98 00              u64 [sp + 0x98] = s1
 97317: 7b 15 a0 00              u64 [sp + 0xa0] = s0
 97321: 95 17 48                 a0 = sp + 0x48
 97324: 95 18 90 00              a1 = sp + 0x90
 97328: 64 59                    a2 = s0
 97330: 50 20 76 04 bf dd fe     ra = 1142, jump @1721
      :                          @7612 [@dyn 571]
 97337: 64 59                    a2 = s0
 97339: 82 1b 50                 a4 = u64 [sp + 0x50]
 97342: 82 17 58                 a0 = u64 [sp + 0x58]
 97345: 33 0a                    a3 = 0
 97347: 33 05                    s0 = 0
 97349: 95 bb 10                 a4 = a4 + 0x10
 97352: 33 0c 01                 a5 = 0x1
 97355: 82 16 28                 s1 = u64 [sp + 0x28]
 97358: 01                       fallthrough
      :                          @7613
 97359: aa 57 8e 02              jump @7687 if a0 == s0
      :                          @7614
 97363: 82 b8                    a1 = u64 [a4]
 97365: ae 85 89 02              jump @7688 if s0 >=u a1
      :                          @7615
 97369: 82 b8 f8                 a1 = u64 [a4 + 0xfffffffffffffff8]
 97372: 95 55 01                 s0 = s0 + 0x1
 97375: c8 a8 08                 a1 = a1 + a3
 97378: 7b 8c                    u64 [a1] = a5
 97380: 95 bb 18                 a4 = a4 + 0x18
 97383: 95 aa 08                 a3 = a3 + 0x8
 97386: ab 59 e5                 jump @7613 if a2 != s0
      :                          @7616
 97389: 49 11 08 aa 0a           u64 [sp + 8] = 0xaaa
 97394: 33 05 c0 22 03           s0 = 0x322c0
 97399: 95 55 00 00 01           s0 = s0 + 0x10000
 97404: 82 17 18                 a0 = u64 [sp + 0x18]
 97407: 28 18                    jump @7618
      :                          @7617
 97409: 82 17 60                 a0 = u64 [sp + 0x60]
 97412: 7b 17 10                 u64 [sp + 0x10] = a0
 97415: 82 16 68                 s1 = u64 [sp + 0x68]
 97418: 82 19 70                 a2 = u64 [sp + 0x70]
 97421: 82 17 18                 a0 = u64 [sp + 0x18]
 97424: 98 77 01                 a0 = a0 >> 0x1
 97427: 51 07 f1 00              jump @7646 if a0 == 0
      :                          @7618
 97431: 7b 17 18                 u64 [sp + 0x18] = a0
 97434: 84 77 01                 a0 = a0 & 0x1
 97437: 7b 16 28                 u64 [sp + 0x28] = s1
 97440: 7b 19 20                 u64 [sp + 0x20] = a2
 97443: 51 07 3b                 jump @7622 if a0 == 0
      :                          @7619
 97446: 95 17 90 00              a0 = sp + 0x90
 97450: 64 68                    a1 = s1
 97452: 50 20 78 04 7f f5 fe     ra = 1144, jump @2124
      :                          @7620 [@dyn 572]
 97459: 95 17 78                 a0 = sp + 0x78
 97462: 95 18 48                 a1 = sp + 0x48
 97465: 95 19 90 00              a2 = sp + 0x90
 97469: 50 20 7a 04 2b 02        ra = 1146, jump @7698
      :                          @7621 [@dyn 573]
 97475: 82 19 20                 a2 = u64 [sp + 0x20]
 97478: 82 16 28                 s1 = u64 [sp + 0x28]
 97481: 82 17 78                 a0 = u64 [sp + 0x78]
 97484: 82 18 80 00              a1 = u64 [sp + 0x80]
 97488: 82 1a 88 00              a3 = u64 [sp + 0x88]
 97492: 7b 17 48                 u64 [sp + 0x48] = a0
 97495: 7b 18 50                 u64 [sp + 0x50] = a1
 97498: 7b 1a 58                 u64 [sp + 0x58] = a3
 97501: 01                       fallthrough
      :                          @7622
 97502: 95 17 78                 a0 = sp + 0x78
 97505: 64 68                    a1 = s1
 97507: 50 20 7c 04 48 f5 fe     ra = 1148, jump @2124
      :                          @7623 [@dyn 574]
 97514: 95 17 90 00              a0 = sp + 0x90
 97518: 82 18 28                 a1 = u64 [sp + 0x28]
 97521: 82 19 20                 a2 = u64 [sp + 0x20]
 97524: 50 20 7e 04 37 f5 fe     ra = 1150, jump @2124
      :                          @7624 [@dyn 575]
 97531: 95 17 60                 a0 = sp + 0x60
 97534: 95 18 78                 a1 = sp + 0x78
 97537: 95 19 90 00              a2 = sp + 0x90
 97541: 50 20 80 04 e3 01        ra = 1152, jump @7698
      :                          @7625 [@dyn 576]
 97547: 82 13 20                 t1 = u64 [sp + 0x20]
 97550: 82 12 28                 t0 = u64 [sp + 0x28]
 97553: 33 04 18                 t2 = 0x18
 97556: 33 00 00 20              ra = 0x2000
 97560: 51 03 3d                 jump @7637 if t1 == 0
      :                          @7626
 97563: 33 07                    a0 = 0
 97565: 28 08                    jump @7628
      :                          @7627
 97567: 95 77 01                 a0 = a0 + 0x1
 97570: aa 37 33                 jump @7637 if a0 == t1
      :                          @7628
 97573: ca 47 08                 a1 = a0 * t2
 97576: c8 28 08                 a1 = a1 + t0
 97579: 82 89                    a2 = u64 [a1]
 97581: 51 09 f2                 jump @7627 if a2 == 0
      :                          @7629
 97584: ac 90 ef                 jump @7627 if ra <u a2
      :                          @7630
 97587: 82 88 08                 a1 = u64 [a1 + 0x8]
 97590: 97 99 03                 a2 = a2 << 0x3
 97593: 01                       fallthrough
      :                          @7631
 97594: 82 5a                    a3 = u64 [s0]
 97596: c9 a5 0b                 a4 = s0 - a3
 97599: ab 8b e0                 jump @7627 if a4 != a1
      :                          @7632
 97602: c9 9a 0b                 a4 = a3 - a2
 97605: 01                       fallthrough
      :                          @7633
 97606: 82 5c                    a5 = u64 [s0]
 97608: ab ac f2                 jump @7631 if a5 != a3
      :                          @7634
 97611: 7b 5b                    u64 [s0] = a4
 97613: 33 06                    s1 = 0
 97615: 01                       fallthrough
      :                          @7635
 97616: ab ac ea                 jump @7631 if a5 != a3
      :                          @7636
 97619: 28 cc                    jump @7627
      :                          @7637
 97621: 82 17 10                 a0 = u64 [sp + 0x10]
 97624: 51 07 29 ff              jump @7617 if a0 == 0
      :                          @7638
 97628: 82 18 08                 a1 = u64 [sp + 0x8]
 97631: ac 78 22 ff              jump @7617 if a1 <u a0
      :                          @7639
 97635: 96 77 e8                 a0 = a0 * 0xffffffffffffffe8
 97638: 01                       fallthrough
      :                          @7640
 97639: 82 58                    a1 = u64 [s0]
 97641: c9 85 09                 a2 = s0 - a1
 97644: ab 29 15 ff              jump @7617 if a2 != t0
      :                          @7641
 97648: c8 78 09                 a2 = a1 + a0
 97651: 01                       fallthrough
      :                          @7642
 97652: 82 5a                    a3 = u64 [s0]
 97654: ab 8a f1                 jump @7640 if a3 != a1
      :                          @7643
 97657: 7b 59                    u64 [s0] = a2
 97659: 33 0b                    a4 = 0
 97661: 01                       fallthrough
      :                          @7644
 97662: ab 8a e9                 jump @7640 if a3 != a1
      :                          @7645
 97665: 28 00 ff                 jump @7617
      :                          @7646
 97668: 82 17 48                 a0 = u64 [sp + 0x48]
 97671: 7b 17 20                 u64 [sp + 0x20] = a0
 97674: 82 13 50                 t1 = u64 [sp + 0x50]
 97677: 82 17 58                 a0 = u64 [sp + 0x58]
 97680: 7b 17 28                 u64 [sp + 0x28] = a0
 97683: 51 09 51                 jump @7658 if a2 == 0
      :                          @7647
 97686: 33 07                    a0 = 0
 97688: 33 0b c0 22 03           a4 = 0x322c0
 97693: 95 ba 00 00 01           a3 = a4 + 0x10000
 97698: 28 0c                    jump @7649
      :                          @7648
 97700: 95 77 01                 a0 = a0 + 0x1
 97703: 64 46                    s1 = t2
 97705: 64 29                    a2 = t0
 97707: aa 27 39                 jump @7658 if a0 == t0
      :                          @7649
 97710: 64 92                    t0 = a2
 97712: 96 75 18                 s0 = a0 * 0x18
 97715: 64 64                    t2 = s1
 97717: c8 65 05                 s0 = s0 + s1
 97720: 82 5c                    a5 = u64 [s0]
 97722: 51 0c ea                 jump @7648 if a5 == 0
      :                          @7650
 97725: 56 2c 00 20 e7           jump @7648 if a5 >u 8192
      :                          @7651
 97730: 82 55 08                 s0 = u64 [s0 + 0x8]
 97733: 97 cc 03                 a5 = a5 << 0x3
 97736: 01                       fallthrough
      :                          @7652
 97737: 82 a9                    a2 = u64 [a3]
 97739: c9 9a 0b                 a4 = a3 - a2
 97742: ab 5b d6                 jump @7648 if a4 != s0
      :                          @7653
 97745: c9 c9 0b                 a4 = a2 - a5
 97748: 01                       fallthrough
      :                          @7654
 97749: 82 a8                    a1 = u64 [a3]
 97751: ab 98 f2                 jump @7652 if a1 != a2
      :                          @7655
 97754: 7b ab                    u64 [a3] = a4
 97756: 33 00                    ra = 0
 97758: 01                       fallthrough
      :                          @7656
 97759: ab 98 ea                 jump @7652 if a1 != a2
      :                          @7657
 97762: 28 c2                    jump @7648
      :                          @7658
 97764: 82 18 10                 a1 = u64 [sp + 0x10]
 97767: 51 08 2a                 jump @7665 if a1 == 0
      :                          @7659
 97770: 56 28 aa 0a 27           jump @7665 if a1 >u 2730
      :                          @7660
 97775: 96 87 e8                 a0 = a1 * 0xffffffffffffffe8
 97778: 33 09 c0 22 03           a2 = 0x322c0
 97783: 95 99 00 00 01           a2 = a2 + 0x10000
 97788: 01                       fallthrough
      :                          @7661
 97789: 82 9b                    a4 = u64 [a2]
 97791: c9 b9 08                 a1 = a2 - a4
 97794: ab 68 0f                 jump @7665 if a1 != s1
      :                          @7662
 97797: c8 7b 08                 a1 = a4 + a0
 97800: 01                       fallthrough
      :                          @7663
 97801: 82 9a                    a3 = u64 [a2]
 97803: ab ba f2                 jump @7661 if a3 != a4
      :                          @7664
 97806: 7b 98                    u64 [a2] = a1
 97808: 01                       fallthrough
      :                          @7665
 97809: 82 16 28                 s1 = u64 [sp + 0x28]
 97812: 51 06 cd 00              jump @7691 if s1 == 0
      :                          @7666
 97816: 82 37 10                 a0 = u64 [t1 + 0x10]
 97819: 53 17 03 c2 00           jump @7687 if a0 <u 3
      :                          @7667
 97824: 82 37 08                 a0 = u64 [t1 + 0x8]
 97827: 33 0c                    a5 = 0
 97829: 82 15                    s0 = u64 [sp]
 97831: 82 58 10                 a1 = u64 [s0 + 0x10]
 97834: 82 79                    a2 = u64 [a0]
 97836: 82 7a 08                 a3 = u64 [a0 + 0x8]
 97839: 82 5b 08                 a4 = u64 [s0 + 0x8]
 97842: 82 77 10                 a0 = u64 [a0 + 0x10]
 97845: 82 55                    s0 = u64 [s0]
 97847: ca 98 08                 a1 = a1 * a2
 97850: ca ab 09                 a2 = a4 * a3
 97853: c8 98 08                 a1 = a1 + a2
 97856: 7b 18 18                 u64 [sp + 0x18] = a1
 97859: ca 75 07                 a0 = s0 * a0
 97862: 7b 17 10                 u64 [sp + 0x10] = a0
 97865: 33 02 18                 t0 = 0x18
 97868: 33 05 c0 22 03           s0 = 0x322c0
 97873: 95 55 00 00 01           s0 = s0 + 0x10000
 97878: 33 00 00 20              ra = 0x2000
 97882: 28 08                    jump @7669
      :                          @7668
 97884: 95 cc 01                 a5 = a5 + 0x1
 97887: aa 6c 33                 jump @7678 if a5 == s1
      :                          @7669
 97890: ca 2c 07                 a0 = a5 * t0
 97893: c8 37 07                 a0 = a0 + t1
 97896: 82 7b                    a4 = u64 [a0]
 97898: 51 0b f2                 jump @7668 if a4 == 0
      :                          @7670
 97901: ac b0 ef                 jump @7668 if ra <u a4
      :                          @7671
 97904: 82 77 08                 a0 = u64 [a0 + 0x8]
 97907: 97 bb 03                 a4 = a4 << 0x3
 97910: 01                       fallthrough
      :                          @7672
 97911: 82 59                    a2 = u64 [s0]
 97913: c9 95 0a                 a3 = s0 - a2
 97916: ab 7a e0                 jump @7668 if a3 != a0
      :                          @7673
 97919: c9 b9 0a                 a3 = a2 - a4
 97922: 01                       fallthrough
      :                          @7674
 97923: 82 58                    a1 = u64 [s0]
 97925: ab 98 f2                 jump @7672 if a1 != a2
      :                          @7675
 97928: 7b 5a                    u64 [s0] = a3
 97930: 33 04                    t2 = 0
 97932: 01                       fallthrough
      :                          @7676
 97933: ab 98 ea                 jump @7672 if a1 != a2
      :                          @7677
 97936: 28 cc                    jump @7668
      :                          @7678
 97938: 82 18 20                 a1 = u64 [sp + 0x20]
 97941: 51 08 2c                 jump @7685 if a1 == 0
      :                          @7679
 97944: 56 28 aa 0a 29           jump @7685 if a1 >u 2730
      :                          @7680
 97949: 96 89 e8                 a2 = a1 * 0xffffffffffffffe8
 97952: 33 07 c0 22 03           a0 = 0x322c0
 97957: 95 77 00 00 01           a0 = a0 + 0x10000
 97962: 01                       fallthrough
      :                          @7681
 97963: 82 7a                    a3 = u64 [a0]
 97965: c9 a7 08                 a1 = a0 - a3
 97968: ab 38 11                 jump @7685 if a1 != t1
      :                          @7682
 97971: c8 9a 08                 a1 = a3 + a2
 97974: 01                       fallthrough
      :                          @7683
 97975: 82 7b                    a4 = u64 [a0]
 97977: ab ab f2                 jump @7681 if a4 != a3
      :                          @7684
 97980: 7b 78                    u64 [a0] = a1
 97982: 33 0c                    a5 = 0
 97984: 01                       fallthrough
      :                          @7685
 97985: 82 17 18                 a0 = u64 [sp + 0x18]
 97988: 82 18 10                 a1 = u64 [sp + 0x10]
 97991: c8 87 07                 a0 = a0 + a1
 97994: 01                       fallthrough
      :                          @7686
 97995: 82 10 b8 00              ra = u64 [sp + 0xb8]
 97999: 82 15 b0 00              s0 = u64 [sp + 0xb0]
 98003: 82 16 a8 00              s1 = u64 [sp + 0xa8]
 98007: 95 11 c0 00              sp = sp + 0xc0
 98011: 32 00                    ret
      :                          @7687
 98013: 00                       trap
      :                          @7688
 98014: 00                       trap
      :                          @7689
 98015: 00                       trap
      :                          @7690
 98016: 00                       trap
      :                          @7691
 98017: 00                       trap
      :                          @7692
 98018: 00                       trap
      :                          @7693
 98019: 00                       trap
      :                          @7694
 98020: 00                       trap
      :                          @7695
 98021: 00                       trap
      :                          @7696
 98022: 00                       trap
      :                          @7697
 98023: 00                       trap
      :                          @7698
 98024: 95 11 50 ff              sp = sp + 0xffffffffffffff50
 98028: 7b 10 a8 00              u64 [sp + 0xa8] = ra
 98032: 7b 15 a0 00              u64 [sp + 0xa0] = s0
 98036: 7b 16 98 00              u64 [sp + 0x98] = s1
 98040: 7b 18 30                 u64 [sp + 0x30] = a1
 98043: 82 86 10                 s1 = u64 [a1 + 0x10]
 98046: 64 7b                    a4 = a0
 98048: 7b 19 28                 u64 [sp + 0x28] = a2
 98051: 51 06 52 01              jump @7719 if s1 == 0
      :                          @7699
 98055: 98 67 3c                 a0 = s1 >> 0x3c
 98058: 52 07 ac 02              jump @7765 if a0 != 0
      :                          @7700
 98062: 7b 1b                    u64 [sp] = a4
 98064: 88 72 01                 t0 = a0 <u 0x1
 98067: 97 69 03                 a2 = s1 << 0x3
 98070: 97 22 03                 t0 = t0 << 0x3
 98073: 33 04 c0 22 03           t2 = 0x322c0
 98078: 33 03 00 00 01           t1 = 0x10000
 98083: c8 34 00                 ra = t2 + t1
 98086: 01                       fallthrough
      :                          @7701
 98087: 82 05                    s0 = u64 [ra]
 98089: c8 95 0c                 a5 = s0 + a2
 98092: ac 5c 89 02              jump @7764 if a5 <u s0
      :                          @7702
 98096: c8 2c 07                 a0 = a5 + t0
 98099: d8 c7 0a                 a3 = a0 <u a5
 98102: d8 73 07                 a0 = t1 <u a0
 98105: d4 a7 07                 a0 = a0 | a3
 98108: 52 07 79 02              jump @7764 if a0 != 0
      :                          @7703
 98112: c9 c4 07                 a0 = t2 - a5
 98115: c8 37 07                 a0 = a0 + t1
 98118: 84 7a 07                 a3 = a0 & 0x7
 98121: c8 ac 0c                 a5 = a5 + a3
 98124: 01                       fallthrough
      :                          @7704
 98125: 82 08                    a1 = u64 [ra]
 98127: ab 58 d8                 jump @7701 if a1 != s0
      :                          @7705
 98130: 7b 0c                    u64 [ra] = a5
 98132: 33 0b                    a4 = 0
 98134: c9 a7 05                 s0 = a0 - a3
 98137: 64 57                    a0 = s0
 98139: 33 08                    a1 = 0
 98141: 50 20 82 04 b9 8c 01     ra = 1154, jump @13687
      :                          @7706 [@dyn 577]
 98148: 7b 16 80 00              u64 [sp + 0x80] = s1
 98152: 7b 15 88 00              u64 [sp + 0x88] = s0
 98156: 7b 16 90 00              u64 [sp + 0x90] = s1
 98160: 95 17 68                 a0 = sp + 0x68
 98163: 95 18 80 00              a1 = sp + 0x80
 98167: 64 69                    a2 = s1
 98169: 50 20 84 04 78 da fe     ra = 1156, jump @1721
      :                          @7707 [@dyn 578]
 98176: 82 17 30                 a0 = u64 [sp + 0x30]
 98179: 82 7a 08                 a3 = u64 [a0 + 0x8]
 98182: 82 17 28                 a0 = u64 [sp + 0x28]
 98185: 82 70 10                 ra = u64 [a0 + 0x10]
 98188: 82 77 08                 a0 = u64 [a0 + 0x8]
 98191: 82 18 78                 a1 = u64 [sp + 0x78]
 98194: 82 1b 70                 a4 = u64 [sp + 0x70]
 98197: 33 09                    a2 = 0
 98199: 7b 17 38                 u64 [sp + 0x38] = a0
 98202: 95 77 10                 a0 = a0 + 0x10
 98205: 7b 17 40                 u64 [sp + 0x40] = a0
 98208: 7b 18 18                 u64 [sp + 0x18] = a1
 98211: 7b 1a 10                 u64 [sp + 0x10] = a3
 98214: 7b 1b 08                 u64 [sp + 0x8] = a4
 98217: 01                       fallthrough
      :                          @7708
 98218: 96 93 18                 t1 = a2 * 0x18
 98221: c8 3a 02                 t0 = a3 + t1
 98224: 95 27 10                 a0 = t0 + 0x10
 98227: 7b 17 60                 u64 [sp + 0x60] = a0
 98230: ae 89 ea 01              jump @7760 if a2 >=u a1
      :                          @7709
 98234: 33 07                    a0 = 0
 98236: 95 99 01                 a2 = a2 + 0x1
 98239: 7b 19 20                 u64 [sp + 0x20] = a2
 98242: 95 22 08                 t0 = t0 + 0x8
 98245: 7b 12 50                 u64 [sp + 0x50] = t0
 98248: c8 b3 03                 t1 = t1 + a4
 98251: 95 38 10                 a1 = t1 + 0x10
 98254: 7b 18 58                 u64 [sp + 0x58] = a1
 98257: 95 33 08                 t1 = t1 + 0x8
 98260: 33 0c 01                 a5 = 0x1
 98263: 01                       fallthrough
      :                          @7710
 98264: 33 09                    a2 = 0
 98266: 33 0b                    a4 = 0
 98268: 7b 1c 48                 u64 [sp + 0x48] = a5
 98271: 82 15 40                 s0 = u64 [sp + 0x40]
 98274: 01                       fallthrough
      :                          @7711
 98275: 82 18 60                 a1 = u64 [sp + 0x60]
 98278: 82 8c                    a5 = u64 [a1]
 98280: ae cb d0 01              jump @7767 if a4 >=u a5
      :                          @7712
 98284: aa b0 b3 01              jump @7759 if ra == a4
      :                          @7713
 98288: 82 5c                    a5 = u64 [s0]
 98290: ae c7 c9 01              jump @7770 if a0 >=u a5
      :                          @7714
 98294: 82 18 58                 a1 = u64 [sp + 0x58]
 98297: 82 8c                    a5 = u64 [a1]
 98299: ae c7 c0 01              jump @7770 if a0 >=u a5
      :                          @7715
 98303: 82 18 50                 a1 = u64 [sp + 0x50]
 98306: 82 8c                    a5 = u64 [a1]
 98308: c8 9c 0c                 a5 = a5 + a2
 98311: 82 54 f8                 t2 = u64 [s0 + 0xfffffffffffffff8]
 98314: 82 cc                    a5 = u64 [a5]
 98316: 64 62                    t0 = s1
 98318: 82 36                    s1 = u64 [t1]
 98320: 97 7a 03                 a3 = a0 << 0x3
 98323: c8 a4 04                 t2 = t2 + a3
 98326: 82 48                    a1 = u64 [t2]
 98328: c8 6a 0a                 a3 = a3 + s1
 98331: 82 a6                    s1 = u64 [a3]
 98333: ca c8 08                 a1 = a1 * a5
 98336: 95 bb 01                 a4 = a4 + 0x1
 98339: c8 68 08                 a1 = a1 + s1
 98342: 64 26                    s1 = t0
 98344: 7b a8                    u64 [a3] = a1
 98346: 95 55 18                 s0 = s0 + 0x18
 98349: 95 99 08                 a2 = a2 + 0x8
 98352: ab b2 b3                 jump @7711 if t0 != a4
      :                          @7716
 98355: 82 18 48                 a1 = u64 [sp + 0x48]
 98358: d8 68 0c                 a5 = a1 <u s1
 98361: c8 8c 0c                 a5 = a5 + a1
 98364: 64 87                    a0 = a1
 98366: ac 68 9a                 jump @7710 if a1 <u s1
      :                          @7717
 98369: 82 18 18                 a1 = u64 [sp + 0x18]
 98372: 82 19 20                 a2 = u64 [sp + 0x20]
 98375: 82 1a 10                 a3 = u64 [sp + 0x10]
 98378: 82 1b 08                 a4 = u64 [sp + 0x8]
 98381: ab 69 5d ff              jump @7708 if a2 != s1
      :                          @7718
 98385: 82 1b                    a4 = u64 [sp]
 98387: 28 18                    jump @7720
      :                          @7719
 98389: 64 62                    t0 = s1
 98391: 49 11 68                 u64 [sp + 104] = 0
 98394: 82 97 08                 a0 = u64 [a2 + 0x8]
 98397: 7b 17 38                 u64 [sp + 0x38] = a0
 98400: 82 90 10                 ra = u64 [a2 + 0x10]
 98403: 49 11 70 08              u64 [sp + 112] = 0x8
 98407: 49 11 78                 u64 [sp + 120] = 0
 98410: 01                       fallthrough
      :                          @7720
 98411: 82 17 78                 a0 = u64 [sp + 0x78]
 98414: 82 18 70                 a1 = u64 [sp + 0x70]
 98417: 82 1a 68                 a3 = u64 [sp + 0x68]
 98420: 7b b7 10                 u64 [a4 + 0x10] = a0
 98423: 7b b8 08                 u64 [a4 + 0x8] = a1
 98426: 7b ba                    u64 [a4] = a3
 98428: 51 00 53                 jump @7732 if ra == 0
      :                          @7721
 98431: 64 03                    t1 = ra
 98433: 33 08                    a1 = 0
 98435: 33 04 18                 t2 = 0x18
 98438: 33 0a c0 22 03           a3 = 0x322c0
 98443: 95 aa 00 00 01           a3 = a3 + 0x10000
 98448: 33 09 00 20              a2 = 0x2000
 98452: 28 08                    jump @7723
      :                          @7722
 98454: 95 88 01                 a1 = a1 + 0x1
 98457: aa 38 36                 jump @7732 if a1 == t1
      :                          @7723
 98460: ca 48 0c                 a5 = a1 * t2
 98463: 82 17 38                 a0 = u64 [sp + 0x38]
 98466: c8 7c 0c                 a5 = a5 + a0
 98469: 82 c5                    s0 = u64 [a5]
 98471: 51 05 ef                 jump @7722 if s0 == 0
      :                          @7724
 98474: ac 59 ec                 jump @7722 if a2 <u s0
      :                          @7725
 98477: 82 cc 08                 a5 = u64 [a5 + 0x8]
 98480: 97 50 03                 ra = s0 << 0x3
 98483: 01                       fallthrough
      :                          @7726
 98484: 82 ab                    a4 = u64 [a3]
 98486: c9 ba 07                 a0 = a3 - a4
 98489: ab c7 dd                 jump @7722 if a0 != a5
      :                          @7727
 98492: c9 0b 07                 a0 = a4 - ra
 98495: 01                       fallthrough
      :                          @7728
 98496: 82 a6                    s1 = u64 [a3]
 98498: ab b6 f2                 jump @7726 if s1 != a4
      :                          @7729
 98501: 7b a7                    u64 [a3] = a0
 98503: 33 05                    s0 = 0
 98505: 01                       fallthrough
      :                          @7730
 98506: ab b6 ea                 jump @7726 if s1 != a4
      :                          @7731
 98509: 28 c9                    jump @7722
      :                          @7732
 98511: 82 17 28                 a0 = u64 [sp + 0x28]
 98514: 82 77                    a0 = u64 [a0]
 98516: 51 07 2f                 jump @7739 if a0 == 0
      :                          @7733
 98519: 56 27 aa 0a 2c           jump @7739 if a0 >u 2730
      :                          @7734
 98524: 96 77 e8                 a0 = a0 * 0xffffffffffffffe8
 98527: 33 08 c0 22 03           a1 = 0x322c0
 98532: 95 88 00 00 01           a1 = a1 + 0x10000
 98537: 01                       fallthrough
      :                          @7735
 98538: 82 89                    a2 = u64 [a1]
 98540: c9 98 0a                 a3 = a1 - a2
 98543: 82 1b 38                 a4 = u64 [sp + 0x38]
 98546: ab ba 11                 jump @7739 if a3 != a4
      :                          @7736
 98549: c8 79 0a                 a3 = a2 + a0
 98552: 01                       fallthrough
      :                          @7737
 98553: 82 8b                    a4 = u64 [a1]
 98555: ab 9b ef                 jump @7735 if a4 != a2
      :                          @7738
 98558: 7b 8a                    u64 [a1] = a3
 98560: 33 0c                    a5 = 0
 98562: 01                       fallthrough
      :                          @7739
 98563: 82 17 30                 a0 = u64 [sp + 0x30]
 98566: 82 74 08                 t2 = u64 [a0 + 0x8]
 98569: 51 02 51                 jump @7751 if t0 == 0
      :                          @7740
 98572: 33 08                    a1 = 0
 98574: 33 03 18                 t1 = 0x18
 98577: 33 0a c0 22 03           a3 = 0x322c0
 98582: 33 0b 00 00 01           a4 = 0x10000
 98587: c8 ba 06                 s1 = a3 + a4
 98590: 33 00 00 20              ra = 0x2000
 98594: 28 08                    jump @7742
      :                          @7741
 98596: 95 88 01                 a1 = a1 + 0x1
 98599: aa 28 33                 jump @7751 if a1 == t0
      :                          @7742
 98602: ca 38 0c                 a5 = a1 * t1
 98605: c8 4c 0c                 a5 = a5 + t2
 98608: 82 c5                    s0 = u64 [a5]
 98610: 51 05 f2                 jump @7741 if s0 == 0
      :                          @7743
 98613: ac 50 ef                 jump @7741 if ra <u s0
      :                          @7744
 98616: 82 cc 08                 a5 = u64 [a5 + 0x8]
 98619: 97 55 03                 s0 = s0 << 0x3
 98622: 01                       fallthrough
      :                          @7745
 98623: 82 6b                    a4 = u64 [s1]
 98625: c9 b6 0a                 a3 = s1 - a4
 98628: ab ca e0                 jump @7741 if a3 != a5
      :                          @7746
 98631: c9 5b 0a                 a3 = a4 - s0
 98634: 01                       fallthrough
      :                          @7747
 98635: 82 69                    a2 = u64 [s1]
 98637: ab b9 f2                 jump @7745 if a2 != a4
      :                          @7748
 98640: 7b 6a                    u64 [s1] = a3
 98642: 33 07                    a0 = 0
 98644: 01                       fallthrough
      :                          @7749
 98645: ab b9 ea                 jump @7745 if a2 != a4
      :                          @7750
 98648: 28 cc                    jump @7741
      :                          @7751
 98650: 82 17 30                 a0 = u64 [sp + 0x30]
 98653: 82 78                    a1 = u64 [a0]
 98655: 51 08 2e                 jump @7758 if a1 == 0
      :                          @7752
 98658: 33 07 aa 0a              a0 = 0xaaa
 98662: ac 87 27                 jump @7758 if a0 <u a1
      :                          @7753
 98665: 96 88 e8                 a1 = a1 * 0xffffffffffffffe8
 98668: 33 09 c0 22 03           a2 = 0x322c0
 98673: 95 99 00 00 01           a2 = a2 + 0x10000
 98678: 01                       fallthrough
      :                          @7754
 98679: 82 9a                    a3 = u64 [a2]
 98681: c9 a9 07                 a0 = a2 - a3
 98684: ab 47 11                 jump @7758 if a0 != t2
      :                          @7755
 98687: c8 8a 07                 a0 = a3 + a1
 98690: 01                       fallthrough
      :                          @7756
 98691: 82 9b                    a4 = u64 [a2]
 98693: ab ab f2                 jump @7754 if a4 != a3
      :                          @7757
 98696: 7b 97                    u64 [a2] = a0
 98698: 33 0c                    a5 = 0
 98700: 01                       fallthrough
      :                          @7758
 98701: 82 10 a8 00              ra = u64 [sp + 0xa8]
 98705: 82 15 a0 00              s0 = u64 [sp + 0xa0]
 98709: 82 16 98 00              s1 = u64 [sp + 0x98]
 98713: 95 11 b0 00              sp = sp + 0xb0
 98717: 32 00                    ret
      :                          @7759
 98719: 00                       trap
      :                          @7760
 98720: 82 17 60                 a0 = u64 [sp + 0x60]
 98723: 82 77                    a0 = u64 [a0]
 98725: 51 07 12                 jump @7766 if a0 == 0
      :                          @7761
 98728: 51 00 11                 jump @7768 if ra == 0
      :                          @7762
 98731: 82 17 38                 a0 = u64 [sp + 0x38]
 98734: 82 77 10                 a0 = u64 [a0 + 0x10]
 98737: 51 07 09                 jump @7769 if a0 == 0
      :                          @7763
 98740: 00                       trap
      :                          @7764
 98741: 00                       trap
      :                          @7765
 98742: 00                       trap
      :                          @7766
 98743: 00                       trap
      :                          @7767
 98744: 00                       trap
      :                          @7768
 98745: 00                       trap
      :                          @7769
 98746: 00                       trap
      :                          @7770
 98747: 00                       trap
      :                          @7771 [@dyn 579]
 98748: 82 18 18                 a1 = u64 [sp + 0x18]
 98751: 82 17 20                 a0 = u64 [sp + 0x20]
 98754: 7b 17                    u64 [sp] = a0
 98756: 82 17 28                 a0 = u64 [sp + 0x28]
 98759: 7b 17 08                 u64 [sp + 0x8] = a0
 98762: 95 17 18                 a0 = sp + 0x18
 98765: 64 59                    a2 = s0
 98767: 50 20 88 04 0e 0a ff     ra = 1160, jump @2421
      :                          @7772 [@dyn 580]
 98774: 82 18 18                 a1 = u64 [sp + 0x18]
 98777: 51 08 37                 jump @7775 if a1 == 0
      :                          @7773
 98780: cc 86 07                 a0 = s1 /s a1
 98783: ca 87 08                 a1 = a0 * a1
 98786: ab 68 31                 jump @7776 if a1 != s1
      :                          @7774
 98789: 82 18 20                 a1 = u64 [sp + 0x20]
 98792: 82 19 28                 a2 = u64 [sp + 0x28]
 98795: 82 1a                    a3 = u64 [sp]
 98797: ca a8 0a                 a3 = a1 * a3
 98800: ca 7a 0a                 a3 = a3 * a0
 98803: 82 1b 08                 a4 = u64 [sp + 0x8]
 98806: ca b8 08                 a1 = a1 * a4
 98809: ca 78 08                 a1 = a1 * a0
 98812: ca 97 07                 a0 = a0 * a2
 98815: 82 19 10                 a2 = u64 [sp + 0x10]
 98818: 7b 9a 08                 u64 [a2 + 0x8] = a3
 98821: 7b 98 10                 u64 [a2 + 0x10] = a1
 98824: 7b 97 18                 u64 [a2 + 0x18] = a0
 98827: 33 07 01                 a0 = 0x1
 98830: 28 1c                    jump @7778
      :                          @7775
 98832: 51 06 0a                 jump @7777 if s1 == 0
      :                          @7776
 98835: 33 07                    a0 = 0
 98837: 82 19 10                 a2 = u64 [sp + 0x10]
 98840: 28 12                    jump @7778
      :                          @7777
 98842: 82 19 10                 a2 = u64 [sp + 0x10]
 98845: 49 19 18                 u64 [a2 + 24] = 0
 98848: 49 19 10                 u64 [a2 + 16] = 0
 98851: 49 19 08                 u64 [a2 + 8] = 0
 98854: 33 07 01                 a0 = 0x1
 98857: 01                       fallthrough
      :                          @7778
 98858: 7b 97                    u64 [a2] = a0
 98860: 82 10 40                 ra = u64 [sp + 0x40]
 98863: 82 15 38                 s0 = u64 [sp + 0x38]
 98866: 82 16 30                 s1 = u64 [sp + 0x30]
 98869: 95 11 48                 sp = sp + 0x48
 98872: 32 00                    ret
      :                          @7779
 98874: 82 9a                    a3 = u64 [a2]
 98876: 95 ab 08                 a4 = a3 + 0x8
 98879: ac ab ed 06              jump @7902 if a4 <u a3
      :                          @7780
 98883: 95 b8 08                 a1 = a4 + 0x8
 98886: d8 b8 0c                 a5 = a1 <u a4
 98889: d8 82 08                 a1 = t0 <u a1
 98892: d4 c8 08                 a1 = a1 | a5
 98895: 52 08 dd 06              jump @7902 if a1 != 0
      :                          @7781
 98899: c9 b3 08                 a1 = t1 - a4
 98902: c8 28 08                 a1 = a1 + t0
 98905: 84 8c 07                 a5 = a1 & 0x7
 98908: c8 cb 0b                 a4 = a4 + a5
 98911: 01                       fallthrough
      :                          @7782
 98912: 82 95                    s0 = u64 [a2]
 98914: ab a5 d8                 jump @7779 if s0 != a3
      :                          @7783
 98917: 7b 9b                    u64 [a2] = a4
 98919: 33 06                    s1 = 0
 98921: 7b 17                    u64 [sp] = a0
 98923: c9 c8 05                 s0 = a1 - a5
 98926: 49 05                    u64 [s0 + 0] = 0
 98928: 95 17 b8 00              a0 = sp + 0xb8
 98932: 33 08                    a1 = 0
 98934: 50 20 8a 04 c5 d2 fe     ra = 1162, jump @1629
      :                          @7784 [@dyn 581]
 98941: 82 12 c8 00              t0 = u64 [sp + 0xc8]
 98945: 82 18 c0 00              a1 = u64 [sp + 0xc0]
 98949: 97 27 05                 a0 = t0 << 0x5
 98952: 7b 18 88 00              u64 [sp + 0x88] = a1
 98956: c8 87 07                 a0 = a0 + a1
 98959: 49 07 ff                 u64 [a0 + 0] = 0xffffffffffffffff
 98962: 49 17 08 01              u64 [a0 + 8] = 0x1
 98966: 7b 75 10                 u64 [a0 + 0x10] = s0
 98969: 49 17 18 01              u64 [a0 + 24] = 0x1
 98973: 95 2c 01                 a5 = t0 + 0x1
 98976: 7b 1c c8 00              u64 [sp + 0xc8] = a5
 98980: 82 19 98 00              a2 = u64 [sp + 0x98]
 98984: 82 97 10                 a0 = u64 [a2 + 0x10]
 98987: 7b 17 10                 u64 [sp + 0x10] = a0
 98990: 82 97 08                 a0 = u64 [a2 + 0x8]
 98993: 7b 17 08                 u64 [sp + 0x8] = a0
 98996: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 99006: 7b 18 18                 u64 [sp + 0x18] = a1
 99009: 33 02 c0 22 03           t0 = 0x322c0
 99014: 33 04 00 00 01           t2 = 0x10000
 99019: c8 42 03                 t1 = t0 + t2
 99022: 7b 12 38                 u64 [sp + 0x38] = t0
 99025: 7b 13 30                 u64 [sp + 0x30] = t1
 99028: 28 0a                    jump @7786
      :                          @7785
 99030: 82 1c c8 00              a5 = u64 [sp + 0xc8]
 99034: 51 0c 52 05              jump @7871 if a5 == 0
      :                          @7786
 99038: 95 c7 ff                 a0 = a5 + 0xffffffffffffffff
 99041: 7b 17 c8 00              u64 [sp + 0xc8] = a0
 99045: 97 7a 05                 a3 = a0 << 0x5
 99048: 82 18 88 00              a1 = u64 [sp + 0x88]
 99052: c8 8a 0a                 a3 = a3 + a1
 99055: 82 a8 08                 a1 = u64 [a3 + 0x8]
 99058: 82 19 18                 a2 = u64 [sp + 0x18]
 99061: aa 98 86 05              jump @7879 if a1 == a2
      :                          @7787
 99065: 82 a9                    a2 = u64 [a3]
 99067: 51 07 85 00              jump @7792 if a0 == 0
      :                          @7788
 99071: 95 aa 10                 a3 = a3 + 0x10
 99074: 82 16 88 00              s1 = u64 [sp + 0x88]
 99078: 82 6b                    a4 = u64 [s1]
 99080: 7b 1b 48                 u64 [sp + 0x48] = a4
 99083: 82 6b 08                 a4 = u64 [s1 + 0x8]
 99086: 7b 1b 20                 u64 [sp + 0x20] = a4
 99089: 7b 69                    u64 [s1] = a2
 99091: 7b 68 08                 u64 [s1 + 0x8] = a1
 99094: 82 a8 08                 a1 = u64 [a3 + 0x8]
 99097: 82 69 18                 a2 = u64 [s1 + 0x18]
 99100: 7b 19 50                 u64 [sp + 0x50] = a2
 99103: 82 a9                    a2 = u64 [a3]
 99105: 7b 68 18                 u64 [s1 + 0x18] = a1
 99108: 82 68 18                 a1 = u64 [s1 + 0x18]
 99111: 82 6a 10                 a3 = u64 [s1 + 0x10]
 99114: 7b 1a 60                 u64 [sp + 0x60] = a3
 99117: 7b 69 10                 u64 [s1 + 0x10] = a2
 99120: 7b 18 e8 00              u64 [sp + 0xe8] = a1
 99124: 82 68 10                 a1 = u64 [s1 + 0x10]
 99127: 7b 18 e0 00              u64 [sp + 0xe0] = a1
 99131: 82 68 08                 a1 = u64 [s1 + 0x8]
 99134: 7b 18 d8 00              u64 [sp + 0xd8] = a1
 99138: 82 68                    a1 = u64 [s1]
 99140: 7b 18 d0 00              u64 [sp + 0xd0] = a1
 99144: 64 c2                    t0 = a5
 99146: 55 1c 04 42              jump @7793 if a5 >=u 4
      :                          @7789
 99150: 33 0b                    a4 = 0
 99152: 33 07 01                 a0 = 0x1
 99155: 01                       fallthrough
      :                          @7790
 99156: 95 22 fe                 t0 = t0 + 0xfffffffffffffffe
 99159: ab 27 db 00              jump @7803 if a0 != t0
      :                          @7791
 99163: 97 78 05                 a1 = a0 << 0x5
 99166: c8 68 08                 a1 = a1 + s1
 99169: 82 89 18                 a2 = u64 [a1 + 0x18]
 99172: 97 bb 05                 a4 = a4 << 0x5
 99175: c8 6b 0b                 a4 = a4 + s1
 99178: 7b b9 18                 u64 [a4 + 0x18] = a2
 99181: 82 89 10                 a2 = u64 [a1 + 0x10]
 99184: 7b b9 10                 u64 [a4 + 0x10] = a2
 99187: 82 89 08                 a2 = u64 [a1 + 0x8]
 99190: 7b b9 08                 u64 [a4 + 0x8] = a2
 99193: 82 88                    a1 = u64 [a1]
 99195: 7b b8                    u64 [a4] = a1
 99197: 28 b8 00                 jump @7804
      :                          @7792
 99200: 82 ab 10                 a4 = u64 [a3 + 0x10]
 99203: 82 ac 18                 a5 = u64 [a3 + 0x18]
 99206: 7b 19 48                 u64 [sp + 0x48] = a2
 99209: 28 af 01                 jump @7818
      :                          @7793
 99212: 33 0a                    a3 = 0
 99214: 33 08 02                 a1 = 0x2
 99217: e4 87 03                 t1 = maxu(a0, a1)
 99220: 95 33 fe                 t1 = t1 + 0xfffffffffffffffe
 99223: 33 07 01                 a0 = 0x1
 99226: 28 36                    jump @7796
      :                          @7794
 99228: d8 cb 0b                 a4 = a4 <u a5
 99231: 01                       fallthrough
      :                          @7795
 99232: c8 7b 0b                 a4 = a4 + a0
 99235: 97 b7 05                 a0 = a4 << 0x5
 99238: c8 67 07                 a0 = a0 + s1
 99241: 82 78 18                 a1 = u64 [a0 + 0x18]
 99244: 97 aa 05                 a3 = a3 << 0x5
 99247: c8 6a 0a                 a3 = a3 + s1
 99250: 7b a8 18                 u64 [a3 + 0x18] = a1
 99253: 82 78 10                 a1 = u64 [a0 + 0x10]
 99256: 7b a8 10                 u64 [a3 + 0x10] = a1
 99259: 82 78 08                 a1 = u64 [a0 + 0x8]
 99262: 7b a8 08                 u64 [a3 + 0x8] = a1
 99265: 82 78                    a1 = u64 [a0]
 99267: 97 b7 01                 a0 = a4 << 0x1
 99270: 95 77 01                 a0 = a0 + 0x1
 99273: 7b a8                    u64 [a3] = a1
 99275: 64 ba                    a3 = a4
 99277: ac 73 87                 jump @7790 if t1 <u a0
      :                          @7796
 99280: 97 78 05                 a1 = a0 << 0x5
 99283: c8 68 08                 a1 = a1 + s1
 99286: 95 79 01                 a2 = a0 + 0x1
 99289: 97 99 05                 a2 = a2 << 0x5
 99292: c8 69 09                 a2 = a2 + s1
 99295: 82 8b                    a4 = u64 [a1]
 99297: 82 9c                    a5 = u64 [a2]
 99299: ab cb b9                 jump @7794 if a4 != a5
      :                          @7797
 99302: 82 84 18                 t2 = u64 [a1 + 0x18]
 99305: 82 90 18                 ra = u64 [a2 + 0x18]
 99308: 82 88 10                 a1 = u64 [a1 + 0x10]
 99311: 82 95 10                 s0 = u64 [a2 + 0x10]
 99314: e6 04 06                 s1 = minu(t2, ra)
 99317: 95 66 01                 s1 = s1 + 0x1
 99320: 01                       fallthrough
      :                          @7798
 99321: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 99324: 51 06 1d                 jump @7801 if s1 == 0
      :                          @7799
 99327: 82 89                    a2 = u64 [a1]
 99329: 82 5b                    a4 = u64 [s0]
 99331: 95 88 08                 a1 = a1 + 0x8
 99334: 95 55 08                 s0 = s0 + 0x8
 99337: d8 b9 0c                 a5 = a2 <u a4
 99340: d3 b9 09                 a2 = a2 ^ a4
 99343: 8e 99                    a2 = a2 >u 0
 99345: 94 c9 ff                 a2 = 0xffffffffffffffff if a5 != 0
 99348: 51 09 e5                 jump @7798 if a2 == 0
      :                          @7800
 99351: 28 0e                    jump @7802
      :                          @7801
 99353: d8 04 08                 a1 = t2 <u ra
 99356: d3 04 0b                 a4 = t2 ^ ra
 99359: 8e b9                    a2 = a4 >u 0
 99361: 94 89 ff                 a2 = 0xffffffffffffffff if a1 != 0
 99364: 01                       fallthrough
      :                          @7802
 99365: 95 99 01                 a2 = a2 + 0x1
 99368: 88 9b 02                 a4 = a2 <u 0x2
 99371: 82 16 88 00              s1 = u64 [sp + 0x88]
 99375: 28 71 ff                 jump @7795
      :                          @7803
 99378: 64 b7                    a0 = a4
 99380: 01                       fallthrough
      :                          @7804
 99381: 82 19 e8 00              a2 = u64 [sp + 0xe8]
 99385: 97 78 05                 a1 = a0 << 0x5
 99388: c8 68 08                 a1 = a1 + s1
 99391: 7b 19 98 00              u64 [sp + 0x98] = a2
 99395: 7b 89 18                 u64 [a1 + 0x18] = a2
 99398: 82 19 e0 00              a2 = u64 [sp + 0xe0]
 99402: 7b 19 90 00              u64 [sp + 0x90] = a2
 99406: 7b 89 10                 u64 [a1 + 0x10] = a2
 99409: 82 19 d8 00              a2 = u64 [sp + 0xd8]
 99413: 7b 19 78                 u64 [sp + 0x78] = a2
 99416: 7b 89 08                 u64 [a1 + 0x8] = a2
 99419: 82 19 d0 00              a2 = u64 [sp + 0xd0]
 99423: 7b 89                    u64 [a1] = a2
 99425: 51 07 9d 00              jump @7816 if a0 == 0
      :                          @7805
 99429: 7b 19 80 00              u64 [sp + 0x80] = a2
 99433: 28 28                    jump @7808
      :                          @7806
 99435: ac 89 8f 00              jump @7815 if a2 <u a1
      :                          @7807
 99439: 82 58 18                 a1 = u64 [s0 + 0x18]
 99442: 97 77 05                 a0 = a0 << 0x5
 99445: c8 67 07                 a0 = a0 + s1
 99448: 7b 78 18                 u64 [a0 + 0x18] = a1
 99451: 82 58 10                 a1 = u64 [s0 + 0x10]
 99454: 7b 78 10                 u64 [a0 + 0x10] = a1
 99457: 82 58 08                 a1 = u64 [s0 + 0x8]
 99460: 7b 78 08                 u64 [a0 + 0x8] = a1
 99463: 82 58                    a1 = u64 [s0]
 99465: 7b 78                    u64 [a0] = a1
 99467: 64 47                    a0 = t2
 99469: 54 1c 01 74              jump @7817 if a5 <=u 1
      :                          @7808
 99473: 95 7c ff                 a5 = a0 + 0xffffffffffffffff
 99476: 98 c4 01                 t2 = a5 >> 0x1
 99479: 97 45 05                 s0 = t2 << 0x5
 99482: c8 65 05                 s0 = s0 + s1
 99485: 82 58                    a1 = u64 [s0]
 99487: ab 89 cc                 jump @7806 if a2 != a1
      :                          @7809
 99490: 82 53 18                 t1 = u64 [s0 + 0x18]
 99493: 82 58 10                 a1 = u64 [s0 + 0x10]
 99496: 82 19 98 00              a2 = u64 [sp + 0x98]
 99500: e6 39 09                 a2 = minu(a2, t1)
 99503: 95 99 01                 a2 = a2 + 0x1
 99506: 82 1b 90 00              a4 = u64 [sp + 0x90]
 99510: 01                       fallthrough
      :                          @7810
 99511: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 99514: 51 09 20                 jump @7813 if a2 == 0
      :                          @7811
 99517: 82 ba                    a3 = u64 [a4]
 99519: 82 86                    s1 = u64 [a1]
 99521: 95 bb 08                 a4 = a4 + 0x8
 99524: 95 88 08                 a1 = a1 + 0x8
 99527: d8 6a 00                 ra = a3 <u s1
 99530: d3 6a 0a                 a3 = a3 ^ s1
 99533: 8e a2                    t0 = a3 >u 0
 99535: 33 0a ff                 a3 = 0xffffffffffffffff
 99538: db 0a 02                 t0 = a3 if ra != 0
 99541: 51 02 e2                 jump @7810 if t0 == 0
      :                          @7812
 99544: 28 12                    jump @7814
      :                          @7813
 99546: 82 19 98 00              a2 = u64 [sp + 0x98]
 99550: d8 39 08                 a1 = a2 <u t1
 99553: d3 39 09                 a2 = a2 ^ t1
 99556: 8e 92                    t0 = a2 >u 0
 99558: 94 82 ff                 t0 = 0xffffffffffffffff if a1 != 0
 99561: 01                       fallthrough
      :                          @7814
 99562: 95 22 01                 t0 = t0 + 0x1
 99565: 82 16 88 00              s1 = u64 [sp + 0x88]
 99569: 82 19 80 00              a2 = u64 [sp + 0x80]
 99573: 55 12 02 7a ff           jump @7807 if t0 >=u 2
      :                          @7815
 99578: 64 74                    t2 = a0
 99580: 28 05                    jump @7817
      :                          @7816
 99582: 33 04                    t2 = 0
 99584: 01                       fallthrough
      :                          @7817
 99585: 97 44 05                 t2 = t2 << 0x5
 99588: c8 64 04                 t2 = t2 + s1
 99591: 7b 49                    u64 [t2] = a2
 99593: 82 17 78                 a0 = u64 [sp + 0x78]
 99596: 7b 47 08                 u64 [t2 + 0x8] = a0
 99599: 82 17 90 00              a0 = u64 [sp + 0x90]
 99603: 7b 47 10                 u64 [t2 + 0x10] = a0
 99606: 82 17 98 00              a0 = u64 [sp + 0x98]
 99610: 7b 47 18                 u64 [t2 + 0x18] = a0
 99613: 82 17 18                 a0 = u64 [sp + 0x18]
 99616: 82 12 38                 t0 = u64 [sp + 0x38]
 99619: 33 04 00 00 01           t2 = 0x10000
 99624: 82 13 30                 t1 = u64 [sp + 0x30]
 99627: 82 1b 60                 a4 = u64 [sp + 0x60]
 99630: 82 18 20                 a1 = u64 [sp + 0x20]
 99633: 82 1c 50                 a5 = u64 [sp + 0x50]
 99636: aa 78 47 03              jump @7879 if a1 == a0
      :                          @7818
 99640: 7b 18 20                 u64 [sp + 0x20] = a1
 99643: 88 c7 01                 a0 = a5 <u 0x1
 99646: 88 b8 01                 a1 = a4 <u 0x1
 99649: d4 87 07                 a0 = a0 | a1
 99652: 52 07 e9 03              jump @7903 if a0 != 0
      :                          @7819
 99656: 97 c0 03                 ra = a5 << 0x3
 99659: 7b 1b 60                 u64 [sp + 0x60] = a4
 99662: c8 b0 07                 a0 = ra + a4
 99665: 82 75 f8                 s0 = u64 [a0 + 0xfffffffffffffff8]
 99668: 7b 1c 50                 u64 [sp + 0x50] = a5
 99671: 7b 10 78                 u64 [sp + 0x78] = ra
 99674: 52 15 05 4e              jump @7824 if s0 != 5
      :                          @7820
 99678: 82 18 b0 00              a1 = u64 [sp + 0xb0]
 99682: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 99686: ab 78 24                 jump @7823 if a1 != a0
      :                          @7821
 99689: 95 17 a0 00              a0 = sp + 0xa0
 99693: 50 20 8c 04 d3 cd fe     ra = 1164, jump @1581
      :                          @7822 [@dyn 582]
 99700: 82 10 78                 ra = u64 [sp + 0x78]
 99703: 82 1c 50                 a5 = u64 [sp + 0x50]
 99706: 82 13 30                 t1 = u64 [sp + 0x30]
 99709: 33 04 00 00 01           t2 = 0x10000
 99714: 82 12 38                 t0 = u64 [sp + 0x38]
 99717: 82 18 b0 00              a1 = u64 [sp + 0xb0]
 99721: 01                       fallthrough
      :                          @7823
 99722: 82 17 a8 00              a0 = u64 [sp + 0xa8]
 99726: 82 19 48                 a2 = u64 [sp + 0x48]
 99729: 85 99 ff                 a2 = a2 ^ 0xffffffffffffffff
 99732: 97 8a 03                 a3 = a1 << 0x3
 99735: c8 a7 07                 a0 = a0 + a3
 99738: 7b 79                    u64 [a0] = a2
 99740: 95 88 01                 a1 = a1 + 0x1
 99743: 7b 18 b0 00              u64 [sp + 0xb0] = a1
 99747: 55 18 03 a6 02           jump @7872 if a1 >=u 3
      :                          @7824
 99752: 82 17 10                 a0 = u64 [sp + 0x10]
 99755: ae 75 7e 03              jump @7899 if s0 >=u a0
      :                          @7825
 99759: 96 57 18                 a0 = s0 * 0x18
 99762: 82 18 08                 a1 = u64 [sp + 0x8]
 99765: c8 87 07                 a0 = a0 + a1
 99768: 82 78 10                 a1 = u64 [a0 + 0x10]
 99771: 51 08 40 02              jump @7862 if a1 == 0
      :                          @7826
 99775: 82 75 08                 s0 = u64 [a0 + 0x8]
 99778: 97 88 04                 a1 = a1 << 0x4
 99781: 98 c7 3c                 a0 = a5 >> 0x3c
 99784: c8 58 08                 a1 = a1 + s0
 99787: 7b 18 40                 u64 [sp + 0x40] = a1
 99790: 52 07 0a 02              jump @7857 if a0 != 0
      :                          @7827
 99794: 88 77 01                 a0 = a0 <u 0x1
 99797: 97 76 03                 s1 = a0 << 0x3
 99800: 97 cc 03                 a5 = a5 << 0x3
 99803: 82 1a 40                 a3 = u64 [sp + 0x40]
 99806: 7b 16 98 00              u64 [sp + 0x98] = s1
 99810: 7b 1c 28                 u64 [sp + 0x28] = a5
 99813: 28 41                    jump @7831
      :                          @7828
 99815: 33 04                    t2 = 0
 99817: 82 10 78                 ra = u64 [sp + 0x78]
 99820: 82 16 98 00              s1 = u64 [sp + 0x98]
 99824: 01                       fallthrough
      :                          @7829
 99825: 97 44 05                 t2 = t2 << 0x5
 99828: c8 a4 04                 t2 = t2 + a3
 99831: 7b 49                    u64 [t2] = a2
 99833: 82 17 58                 a0 = u64 [sp + 0x58]
 99836: 7b 47 08                 u64 [t2 + 0x8] = a0
 99839: 82 17 80 00              a0 = u64 [sp + 0x80]
 99843: 7b 47 10                 u64 [t2 + 0x10] = a0
 99846: 82 17 90 00              a0 = u64 [sp + 0x90]
 99850: 7b 47 18                 u64 [t2 + 0x18] = a0
 99853: 82 12 38                 t0 = u64 [sp + 0x38]
 99856: 33 04 00 00 01           t2 = 0x10000
 99861: 82 13 30                 t1 = u64 [sp + 0x30]
 99864: 82 1a 40                 a3 = u64 [sp + 0x40]
 99867: 82 1c 28                 a5 = u64 [sp + 0x28]
 99870: 01                       fallthrough
      :                          @7830
 99871: 82 15 68                 s0 = u64 [sp + 0x68]
 99874: aa a5 d9 01              jump @7862 if s0 == a3
      :                          @7831
 99878: 64 57                    a0 = s0
 99880: 82 55                    s0 = u64 [s0]
 99882: 82 7b 08                 a4 = u64 [a0 + 0x8]
 99885: 95 77 10                 a0 = a0 + 0x10
 99888: 7b 17 68                 u64 [sp + 0x68] = a0
 99891: 64 c7                    a0 = a5
 99893: 82 18 60                 a1 = u64 [sp + 0x60]
 99896: 01                       fallthrough
      :                          @7832
 99897: 51 07 10                 jump @7835 if a0 == 0
      :                          @7833
 99900: 82 89                    a2 = u64 [a1]
 99902: 95 88 08                 a1 = a1 + 0x8
 99905: 95 77 f8                 a0 = a0 + 0xfffffffffffffff8
 99908: ab 59 f5                 jump @7832 if a2 != s0
      :                          @7834
 99911: 28 d8                    jump @7830
      :                          @7835
 99913: 7b 1b 90 00              u64 [sp + 0x90] = a4
 99917: 01                       fallthrough
      :                          @7836
 99918: 82 37                    a0 = u64 [t1]
 99920: c8 07 08                 a1 = a0 + ra
 99923: ac 78 d7 02              jump @7900 if a1 <u a0
      :                          @7837
 99927: c8 68 09                 a2 = a1 + s1
 99930: d8 89 0a                 a3 = a2 <u a1
 99933: d8 94 09                 a2 = t2 <u a2
 99936: d4 a9 09                 a2 = a2 | a3
 99939: 52 09 c7 02              jump @7900 if a2 != 0
      :                          @7838
 99943: c9 82 09                 a2 = t0 - a1
 99946: c8 49 09                 a2 = a2 + t2
 99949: 84 9a 07                 a3 = a2 & 0x7
 99952: c8 a8 08                 a1 = a1 + a3
 99955: 01                       fallthrough
      :                          @7839
 99956: 82 3b                    a4 = u64 [t1]
 99958: ab 7b d8                 jump @7836 if a4 != a0
      :                          @7840
 99961: 7b 38                    u64 [t1] = a1
 99963: 33 0c                    a5 = 0
 99965: c9 a9 06                 s1 = a2 - a3
 99968: 64 67                    a0 = s1
 99970: 82 18 60                 a1 = u64 [sp + 0x60]
 99973: 64 09                    a2 = ra
 99975: 50 20 8e 04 62 83 01     ra = 1166, jump @13633
      :                          @7841 [@dyn 583]
 99982: 82 18 50                 a1 = u64 [sp + 0x50]
 99985: 7b 18 d0 00              u64 [sp + 0xd0] = a1
 99989: 7b 16 d8 00              u64 [sp + 0xd8] = s1
 99993: 7b 18 e0 00              u64 [sp + 0xe0] = a1
 99997: 95 17 d0 00              a0 = sp + 0xd0
100001: 50 20 90 04 9f cc fe     ra = 1168, jump @1581
      :                          @7842 [@dyn 584]
100008: 82 17 e0 00              a0 = u64 [sp + 0xe0]
100012: 82 18 d8 00              a1 = u64 [sp + 0xd8]
100016: 97 79 03                 a2 = a0 << 0x3
100019: c8 98 08                 a1 = a1 + a2
100022: 7b 85                    u64 [a1] = s0
100024: 82 15 c8 00              s0 = u64 [sp + 0xc8]
100028: 82 18 b8 00              a1 = u64 [sp + 0xb8]
100032: 95 77 01                 a0 = a0 + 0x1
100035: 7b 17 e0 00              u64 [sp + 0xe0] = a0
100039: 64 57                    a0 = s0
100041: ab 85 15                 jump @7845 if s0 != a1
      :                          @7843
100044: 95 17 b8 00              a0 = sp + 0xb8
100048: 64 58                    a1 = s0
100050: 50 20 92 04 69 ce fe     ra = 1170, jump @1629
      :                          @7844 [@dyn 585]
100057: 82 17 c8 00              a0 = u64 [sp + 0xc8]
100061: 01                       fallthrough
      :                          @7845
100062: 82 1a c0 00              a3 = u64 [sp + 0xc0]
100066: 82 18 48                 a1 = u64 [sp + 0x48]
100069: 82 19 90 00              a2 = u64 [sp + 0x90]
100073: c9 98 08                 a1 = a1 - a2
100076: 97 79 05                 a2 = a0 << 0x5
100079: c8 a9 09                 a2 = a2 + a3
100082: 7b 98                    u64 [a2] = a1
100084: 82 18 d0 00              a1 = u64 [sp + 0xd0]
100088: 7b 98 08                 u64 [a2 + 0x8] = a1
100091: 82 18 d8 00              a1 = u64 [sp + 0xd8]
100095: 7b 98 10                 u64 [a2 + 0x10] = a1
100098: 82 18 e0 00              a1 = u64 [sp + 0xe0]
100102: 7b 98 18                 u64 [a2 + 0x18] = a1
100105: 95 77 01                 a0 = a0 + 0x1
100108: 7b 17 c8 00              u64 [sp + 0xc8] = a0
100112: 97 57 05                 a0 = s0 << 0x5
100115: c8 a7 07                 a0 = a0 + a3
100118: 82 79                    a2 = u64 [a0]
100120: 82 78 08                 a1 = u64 [a0 + 0x8]
100123: 7b 18 58                 u64 [sp + 0x58] = a1
100126: 82 78 10                 a1 = u64 [a0 + 0x10]
100129: 7b 18 80 00              u64 [sp + 0x80] = a1
100133: 82 77 18                 a0 = u64 [a0 + 0x18]
100136: 7b 17 90 00              u64 [sp + 0x90] = a0
100140: 7b 1a 88 00              u64 [sp + 0x88] = a3
100144: 51 05 b7 fe              jump @7828 if s0 == 0
      :                          @7846
100148: 82 10 78                 ra = u64 [sp + 0x78]
100151: 7b 19 70                 u64 [sp + 0x70] = a2
100154: 28 2d                    jump @7849
      :                          @7847
100156: ac 79 93 00              jump @7856 if a2 <u a0
      :                          @7848
100160: 82 87 18                 a0 = u64 [a1 + 0x18]
100163: 97 55 05                 s0 = s0 << 0x5
100166: c8 a5 05                 s0 = s0 + a3
100169: 7b 57 18                 u64 [s0 + 0x18] = a0
100172: 82 87 10                 a0 = u64 [a1 + 0x10]
100175: 7b 57 10                 u64 [s0 + 0x10] = a0
100178: 82 87 08                 a0 = u64 [a1 + 0x8]
100181: 7b 57 08                 u64 [s0 + 0x8] = a0
100184: 82 87                    a0 = u64 [a1]
100186: 7b 57                    u64 [s0] = a0
100188: 64 45                    s0 = t2
100190: 82 16 98 00              s1 = u64 [sp + 0x98]
100194: 54 1c 01 8f fe           jump @7829 if a5 <=u 1
      :                          @7849
100199: 95 5c ff                 a5 = s0 + 0xffffffffffffffff
100202: 98 c4 01                 t2 = a5 >> 0x1
100205: 97 48 05                 a1 = t2 << 0x5
100208: c8 a8 08                 a1 = a1 + a3
100211: 82 87                    a0 = u64 [a1]
100213: ab 79 c7                 jump @7847 if a2 != a0
      :                          @7850
100216: 82 83 18                 t1 = u64 [a1 + 0x18]
100219: 82 86 10                 s1 = u64 [a1 + 0x10]
100222: 82 17 90 00              a0 = u64 [sp + 0x90]
100226: e6 37 0a                 a3 = minu(a0, t1)
100229: 95 aa 01                 a3 = a3 + 0x1
100232: 82 17 80 00              a0 = u64 [sp + 0x80]
100236: 01                       fallthrough
      :                          @7851
100237: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
100240: 51 0a 1d                 jump @7854 if a3 == 0
      :                          @7852
100243: 82 79                    a2 = u64 [a0]
100245: 82 6b                    a4 = u64 [s1]
100247: 95 77 08                 a0 = a0 + 0x8
100250: 95 66 08                 s1 = s1 + 0x8
100253: d8 b9 00                 ra = a2 <u a4
100256: d3 b9 09                 a2 = a2 ^ a4
100259: 8e 92                    t0 = a2 >u 0
100261: 94 02 ff                 t0 = 0xffffffffffffffff if ra != 0
100264: 51 02 e5                 jump @7851 if t0 == 0
      :                          @7853
100267: 28 12                    jump @7855
      :                          @7854
100269: 82 19 90 00              a2 = u64 [sp + 0x90]
100273: d8 39 07                 a0 = a2 <u t1
100276: d3 39 09                 a2 = a2 ^ t1
100279: 8e 92                    t0 = a2 >u 0
100281: 94 72 ff                 t0 = 0xffffffffffffffff if a0 != 0
100284: 01                       fallthrough
      :                          @7855
100285: 95 22 01                 t0 = t0 + 0x1
100288: 82 1a 88 00              a3 = u64 [sp + 0x88]
100292: 82 10 78                 ra = u64 [sp + 0x78]
100295: 82 19 70                 a2 = u64 [sp + 0x70]
100298: 55 12 02 76 ff           jump @7848 if t0 >=u 2
      :                          @7856
100303: 64 54                    t2 = s0
100305: 82 16 98 00              s1 = u64 [sp + 0x98]
100309: 28 1c fe                 jump @7829
      :                          @7857
100312: 82 1b 60                 a4 = u64 [sp + 0x60]
100315: 82 1c 40                 a5 = u64 [sp + 0x40]
100318: 01                       fallthrough
      :                          @7858
100319: 82 57                    a0 = u64 [s0]
100321: 95 55 10                 s0 = s0 + 0x10
100324: 64 08                    a1 = ra
100326: 64 b9                    a2 = a4
100328: 01                       fallthrough
      :                          @7859
100329: 51 08 42 01              jump @7901 if a1 == 0
      :                          @7860
100333: 82 9a                    a3 = u64 [a2]
100335: 95 99 08                 a2 = a2 + 0x8
100338: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
100341: ab 7a f4                 jump @7859 if a3 != a0
      :                          @7861
100344: ab c5 e7                 jump @7858 if s0 != a5
      :                          @7862
100347: 82 1c 60                 a5 = u64 [sp + 0x60]
100350: 82 18 20                 a1 = u64 [sp + 0x20]
100353: 51 08 d5 fa              jump @7785 if a1 == 0
      :                          @7863
100357: 56 28 00 20 d1 fa        jump @7785 if a1 >u 8192
      :                          @7864
100363: 97 87 03                 a0 = a1 << 0x3
100366: 01                       fallthrough
      :                          @7865
100367: 82 38                    a1 = u64 [t1]
100369: c9 83 09                 a2 = t1 - a1
100372: ab c9 c2 fa              jump @7785 if a2 != a5
      :                          @7866
100376: c9 78 09                 a2 = a1 - a0
100379: 01                       fallthrough
      :                          @7867
100380: 82 3a                    a3 = u64 [t1]
100382: ab 8a f1                 jump @7865 if a3 != a1
      :                          @7868
100385: 7b 39                    u64 [t1] = a2
100387: 33 0b                    a4 = 0
100389: 01                       fallthrough
      :                          @7869
100390: ab 8a e9                 jump @7865 if a3 != a1
      :                          @7870
100393: 28 ad fa                 jump @7785
      :                          @7871
100396: 82 18 b0 00              a1 = u64 [sp + 0xb0]
100400: 82 19 a8 00              a2 = u64 [sp + 0xa8]
100404: 82 1a a0 00              a3 = u64 [sp + 0xa0]
100408: 82 13 c0 00              t1 = u64 [sp + 0xc0]
100412: 82 17                    a0 = u64 [sp]
100414: 7b 78 10                 u64 [a0 + 0x10] = a1
100417: 7b 79 08                 u64 [a0 + 0x8] = a2
100420: 7b 7a                    u64 [a0] = a3
100422: 28 9f 00                 jump @7891
      :                          @7872
100425: 82 16 60                 s1 = u64 [sp + 0x60]
100428: 82 18 20                 a1 = u64 [sp + 0x20]
100431: 51 08 2c                 jump @7879 if a1 == 0
      :                          @7873
100434: 56 28 00 20 29           jump @7879 if a1 >u 8192
      :                          @7874
100439: 97 87 03                 a0 = a1 << 0x3
100442: 33 08 c0 22 03           a1 = 0x322c0
100447: 95 88 00 00 01           a1 = a1 + 0x10000
100452: 01                       fallthrough
      :                          @7875
100453: 82 89                    a2 = u64 [a1]
100455: c9 98 0a                 a3 = a1 - a2
100458: ab 6a 11                 jump @7879 if a3 != s1
      :                          @7876
100461: c9 79 0a                 a3 = a2 - a0
100464: 01                       fallthrough
      :                          @7877
100465: 82 8b                    a4 = u64 [a1]
100467: ab 9b f2                 jump @7875 if a4 != a2
      :                          @7878
100470: 7b 8a                    u64 [a1] = a3
100472: 33 0c                    a5 = 0
100474: 01                       fallthrough
      :                          @7879
100475: 82 14 c8 00              t2 = u64 [sp + 0xc8]
100479: 82 19 b0 00              a2 = u64 [sp + 0xb0]
100483: 82 1a a8 00              a3 = u64 [sp + 0xa8]
100487: 82 1b a0 00              a4 = u64 [sp + 0xa0]
100491: 82 13 c0 00              t1 = u64 [sp + 0xc0]
100495: 82 17                    a0 = u64 [sp]
100497: 7b 79 10                 u64 [a0 + 0x10] = a2
100500: 7b 7a 08                 u64 [a0 + 0x8] = a3
100503: 7b 7b                    u64 [a0] = a4
100505: 51 04 4c                 jump @7891 if t2 == 0
      :                          @7880
100508: 33 09                    a2 = 0
100510: 33 0a c0 22 03           a3 = 0x322c0
100515: 95 ab 00 00 01           a4 = a3 + 0x10000
100520: 33 02 00 20              t0 = 0x2000
100524: 28 08                    jump @7882
      :                          @7881
100526: 95 99 01                 a2 = a2 + 0x1
100529: aa 49 34                 jump @7891 if a2 == t2
      :                          @7882
100532: 97 9c 05                 a5 = a2 << 0x5
100535: c8 3c 0c                 a5 = a5 + t1
100538: 82 c6 08                 s1 = u64 [a5 + 0x8]
100541: 51 06 f1                 jump @7881 if s1 == 0
      :                          @7883
100544: ac 62 ee                 jump @7881 if t0 <u s1
      :                          @7884
100547: 82 cc 10                 a5 = u64 [a5 + 0x10]
100550: 97 66 03                 s1 = s1 << 0x3
100553: 01                       fallthrough
      :                          @7885
100554: 82 b5                    s0 = u64 [a4]
100556: c9 5b 0a                 a3 = a4 - s0
100559: ab ca df                 jump @7881 if a3 != a5
      :                          @7886
100562: c9 65 0a                 a3 = s0 - s1
100565: 01                       fallthrough
      :                          @7887
100566: 82 b7                    a0 = u64 [a4]
100568: ab 57 f2                 jump @7885 if a0 != s0
      :                          @7888
100571: 7b ba                    u64 [a4] = a3
100573: 33 08                    a1 = 0
100575: 01                       fallthrough
      :                          @7889
100576: ab 57 ea                 jump @7885 if a0 != s0
      :                          @7890
100579: 28 cb                    jump @7881
      :                          @7891
100581: 82 18 b8 00              a1 = u64 [sp + 0xb8]
100585: 51 08 2e                 jump @7898 if a1 == 0
      :                          @7892
100588: 33 07 00 08              a0 = 0x800
100592: ac 87 27                 jump @7898 if a0 <u a1
      :                          @7893
100595: 97 88 05                 a1 = a1 << 0x5
100598: 33 09 c0 22 03           a2 = 0x322c0
100603: 95 99 00 00 01           a2 = a2 + 0x10000
100608: 01                       fallthrough
      :                          @7894
100609: 82 9a                    a3 = u64 [a2]
100611: c9 a9 07                 a0 = a2 - a3
100614: ab 37 11                 jump @7898 if a0 != t1
      :                          @7895
100617: c9 8a 07                 a0 = a3 - a1
100620: 01                       fallthrough
      :                          @7896
100621: 82 9b                    a4 = u64 [a2]
100623: ab ab f2                 jump @7894 if a4 != a3
      :                          @7897
100626: 7b 97                    u64 [a2] = a0
100628: 33 0c                    a5 = 0
100630: 01                       fallthrough
      :                          @7898
100631: 82 10 00 01              ra = u64 [sp + 0x100]
100635: 82 15 f8 00              s0 = u64 [sp + 0xf8]
100639: 82 16 f0 00              s1 = u64 [sp + 0xf0]
100643: 95 11 08 01              sp = sp + 0x108
100647: 32 00                    ret
      :                          @7899
100649: 00                       trap
      :                          @7900
100650: 00                       trap
      :                          @7901
100651: 00                       trap
      :                          @7902
100652: 00                       trap
      :                          @7903
100653: 00                       trap
      :                          @7904
100654: 95 11 90                 sp = sp + 0xffffffffffffff90
100657: 7b 10 68                 u64 [sp + 0x68] = ra
100660: 7b 15 60                 u64 [sp + 0x60] = s0
100663: 7b 16 58                 u64 [sp + 0x58] = s1
100666: 64 72                    t0 = a0
100668: 84 79 01                 a2 = a0 & 0x1
100671: 33 07 01                 a0 = 0x1
100674: 33 08 02                 a1 = 0x2
100677: 51 09 a8 01              jump @7934 if a2 == 0
      :                          @7905
100681: 33 09                    a2 = 0
100683: 64 26                    s1 = t0
100685: 01                       fallthrough
      :                          @7906
100686: c8 96 0a                 a3 = s1 + a2
100689: 98 aa 01                 a3 = a3 >> 0x1
100692: ca aa 08                 a1 = a3 * a3
100695: d6 aa 0c                 a5 = a3 mulhu a3
100698: 33 0b ff                 a4 = 0xffffffffffffffff
100701: da c8 0b                 a4 = a1 if a5 == 0
100704: aa 2b 80 01              jump @7931 if a4 == t0
      :                          @7907
100708: d8 2b 08                 a1 = a4 <u t0
100711: 95 ab 01                 a4 = a3 + 0x1
100714: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
100717: da 8a 06                 s1 = a3 if a1 == 0
100720: db 8b 09                 a2 = a4 if a1 != 0
100723: ae 96 db                 jump @7906 if s1 >=u a2
      :                          @7908
100726: ca 66 08                 a1 = s1 * s1
100729: aa 82 6d 01              jump @7932 if t0 == a1
      :                          @7909
100733: 33 04                    t2 = 0
100735: 49 11 40                 u64 [sp + 64] = 0
100738: 33 00                    ra = 0
100740: 33 0c                    a5 = 0
100742: c9 82 0b                 a4 = t0 - a1
100745: 49 11 48 01              u64 [sp + 72] = 0x1
100749: 33 09 87 13              a2 = 0x1387
100753: 64 65                    s0 = s1
100755: 64 63                    t1 = s1
100757: 49 11 38 01              u64 [sp + 56] = 0x1
100761: 7b 12 18                 u64 [sp + 0x18] = t0
100764: 7b 19                    u64 [sp] = a2
100766: 01                       fallthrough
      :                          @7910
100767: 7b 1b 08                 u64 [sp + 0x8] = a4
100770: ca 3b 07                 a0 = a4 * t1
100773: 7b 17 10                 u64 [sp + 0x10] = a0
100776: 64 0a                    a3 = ra
100778: e3 9c 00                 ra = maxs(a5, a2)
100781: 7b 14 30                 u64 [sp + 0x30] = t2
100784: 82 19 40                 a2 = u64 [sp + 0x40]
100787: 82 1b 48                 a4 = u64 [sp + 0x48]
100790: 82 18 38                 a1 = u64 [sp + 0x38]
100793: 64 a4                    t2 = a3
100795: 28 0c                    jump @7913
      :                          @7911
100797: 64 a4                    t2 = a3
100799: 01                       fallthrough
      :                          @7912
100800: 82 17 50                 a0 = u64 [sp + 0x50]
100803: aa 07 27 01              jump @7933 if a0 == ra
      :                          @7913
100807: ca b3 07                 a0 = t1 * a4
100810: c8 97 07                 a0 = a0 + a2
100813: 7b 17 48                 u64 [sp + 0x48] = a0
100816: d6 77 07                 a0 = a0 mulhu a0
100819: 7b 1c 50                 u64 [sp + 0x50] = a5
100822: 83 cc 01                 i32 a5 = a5 + 0x1
100825: 52 07 e7                 jump @7912 if a0 != 0
      :                          @7914
100828: ca 43 07                 a0 = t1 * t2
100831: 64 4a                    a3 = t2
100833: c8 87 04                 t2 = a0 + a1
100836: d6 44 07                 a0 = t2 mulhu t2
100839: 52 07 d6                 jump @7911 if a0 != 0
      :                          @7915
100842: 7b 1a 38                 u64 [sp + 0x38] = a3
100845: 7b 1b 40                 u64 [sp + 0x40] = a4
100848: 7b 1c 20                 u64 [sp + 0x20] = a5
100851: 7b 15 28                 u64 [sp + 0x28] = s0
100854: 82 17 48                 a0 = u64 [sp + 0x48]
100857: ca 77 07                 a0 = a0 * a0
100860: ca 44 08                 a1 = t2 * t2
100863: d6 28 09                 a2 = a1 mulhu t0
100866: ca 28 0c                 a5 = a1 * t0
100869: d8 c7 08                 a1 = a0 <u a5
100872: 8e 9b                    a4 = a2 >u 0
100874: da 98 0b                 a4 = a1 if a2 == 0
100877: c9 c7 08                 a1 = a0 - a5
100880: c9 7c 0c                 a5 = a5 - a0
100883: da b8 0c                 a5 = a1 if a4 == 0
100886: 33 05                    s0 = 0
100888: 64 c8                    a1 = a5
100890: 01                       fallthrough
      :                          @7916
100891: c8 58 09                 a2 = a1 + s0
100894: 98 99 01                 a2 = a2 >> 0x1
100897: ca 99 07                 a0 = a2 * a2
100900: d6 99 02                 t0 = a2 mulhu a2
100903: 33 0b ff                 a4 = 0xffffffffffffffff
100906: da 27 0b                 a4 = a0 if t0 == 0
100909: aa cb 1a                 jump @7919 if a4 == a5
      :                          @7917
100912: d8 cb 07                 a0 = a4 <u a5
100915: 95 9b 01                 a4 = a2 + 0x1
100918: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
100921: da 79 08                 a1 = a2 if a0 == 0
100924: db 7b 05                 s0 = a4 if a0 != 0
100927: ae 58 dc                 jump @7916 if a1 >=u s0
      :                          @7918
100930: ca 88 07                 a0 = a1 * a1
100933: 28 05                    jump @7920
      :                          @7919
100935: 64 98                    a1 = a2
100937: 01                       fallthrough
      :                          @7920
100938: 8e 89                    a2 = a1 >u 0
100940: d3 c7 07                 a0 = a0 ^ a5
100943: 88 77 01                 a0 = a0 <u 0x1
100946: d2 97 07                 a0 = a0 & a2
100949: 82 12 18                 t0 = u64 [sp + 0x18]
100952: 82 1b 28                 a4 = u64 [sp + 0x28]
100955: 82 1c 20                 a5 = u64 [sp + 0x20]
100958: 51 07 22                 jump @7924 if a0 == 0
      :                          @7921
100961: 82 17 48                 a0 = u64 [sp + 0x48]
100964: c8 87 07                 a0 = a0 + a1
100967: 64 29                    a2 = t0
100969: 01                       fallthrough
      :                          @7922
100970: 64 98                    a1 = a2
100972: cd 97 09                 a2 = a0 %u a2
100975: 64 87                    a0 = a1
100977: 52 09 f9                 jump @7922 if a2 != 0
      :                          @7923
100980: 88 87 02                 a0 = a1 <u 0x2
100983: d8 28 09                 a2 = a1 <u t0
100986: e0 79 07                 a0 = a2 & ~a0
100989: 52 07 7e                 jump @7935 if a0 != 0
      :                          @7924
100992: 82 17 10                 a0 = u64 [sp + 0x10]
100995: 82 18 30                 a1 = u64 [sp + 0x30]
100998: c9 87 05                 s0 = a0 - a1
101001: d6 55 08                 a1 = s0 mulhu s0
101004: ca 55 07                 a0 = s0 * s0
101007: d8 72 09                 a2 = t0 <u a0
101010: 9a 88                    a1 = -a1
101012: c9 98 08                 a1 = a1 - a2
101015: 59 08 12                 jump @7926 if a1 >=s 0
      :                          @7925
101018: 82 18 38                 a1 = u64 [sp + 0x38]
101021: 82 19 40                 a2 = u64 [sp + 0x40]
101024: 7b 1b 30                 u64 [sp + 0x30] = a4
101027: 82 1b 48                 a4 = u64 [sp + 0x48]
101030: 28 1a ff                 jump @7912
      :                          @7926
101033: 82 19 08                 a2 = u64 [sp + 0x8]
101036: 51 09 3e                 jump @7933 if a2 == 0
      :                          @7927
101039: 7b 14 30                 u64 [sp + 0x30] = t2
101042: c9 72 07                 a0 = t0 - a0
101045: 50 20 94 04 cf 7e 01     ra = 1172, jump @13629
      :                          @7928 [@dyn 586]
101052: 51 07 44                 jump @7936 if a0 == 0
      :                          @7929
101055: 64 7b                    a4 = a0
101057: 33 07                    a0 = 0
101059: c8 65 08                 a1 = s0 + s1
101062: cb b8 03                 t1 = a1 /u a4
101065: 82 12 18                 t0 = u64 [sp + 0x18]
101068: 82 19                    a2 = u64 [sp]
101070: 82 14 28                 t2 = u64 [sp + 0x28]
101073: 82 1c 20                 a5 = u64 [sp + 0x20]
101076: 82 10 30                 ra = u64 [sp + 0x30]
101079: 82 1a 50                 a3 = u64 [sp + 0x50]
101082: ad 9a c5 fe              jump @7910 if a3 <s a2
      :                          @7930
101086: 28 0f                    jump @7934
      :                          @7931
101088: 64 a6                    s1 = a3
101090: ab 82 9b fe              jump @7909 if t0 != a1
      :                          @7932
101094: 64 68                    a1 = s1
101096: 28 05                    jump @7934
      :                          @7933
101098: 33 07                    a0 = 0
101100: 01                       fallthrough
      :                          @7934
101101: 82 10 68                 ra = u64 [sp + 0x68]
101104: 82 15 60                 s0 = u64 [sp + 0x60]
101107: 82 16 58                 s1 = u64 [sp + 0x58]
101110: 95 11 70                 sp = sp + 0x70
101113: 32 00                    ret
      :                          @7935
101115: 33 07 01                 a0 = 0x1
101118: 28 ef                    jump @7934
      :                          @7936
101120: 00                       trap
      :                          @7937
101121: 33 0b 02                 a4 = 0x2
101124: aa b9 2e                 jump @7946 if a2 == a4
      :                          @7938
101127: 64 98                    a1 = a2
101129: 95 99 01                 a2 = a2 + 0x1
101132: ac 79 fb                 jump @7938 if a2 <u a0
      :                          @7939
101135: 84 9b 01                 a4 = a2 & 0x1
101138: 51 0b ef                 jump @7937 if a4 == 0
      :                          @7940
101141: ac a9 1a                 jump @7945 if a2 <u a3
      :                          @7941
101144: 33 0b 03                 a4 = 0x3
101147: 01                       fallthrough
      :                          @7942
101148: 51 0b 04 01              jump @7964 if a4 == 0
      :                          @7943
101152: cd b9 0c                 a5 = a2 %u a4
101155: 51 0c e4                 jump @7938 if a5 == 0
      :                          @7944
101158: 95 bb 02                 a4 = a4 + 0x2
101161: ca bb 0c                 a5 = a4 * a4
101164: ae c9 f0                 jump @7942 if a2 >=u a5
      :                          @7945
101167: 64 9b                    a4 = a2
101169: 01                       fallthrough
      :                          @7946
101170: 7b 1b 10                 u64 [sp + 0x10] = a4
101173: 33 09 78 12 03           a2 = 0x31278
101178: 3a 0a 40 11 03           a3 = u64 [0x31140]
101183: 33 02 e8 03              t0 = 0x3e8
101187: 33 0c 02                 a5 = 0x2
101190: 33 04 09                 t2 = 0x9
101193: 01                       fallthrough
      :                          @7947
101194: 3a 07 78 12 03           a0 = u64 [0x31278]
101199: 97 7b 0d                 a4 = a0 << 0xd
101202: d3 b7 07                 a0 = a0 ^ a4
101205: 98 7b 07                 a4 = a0 >> 0x7
101208: d3 b7 07                 a0 = a0 ^ a4
101211: 97 7b 11                 a4 = a0 << 0x11
101214: d3 b7 07                 a0 = a0 ^ a4
101217: ca 37 0b                 a4 = a0 * t1
101220: 3e 07 78 12 03           u64 [0x31278] = a0
101225: 98 b7 03                 a0 = a4 >> 0x3
101228: d6 a7 07                 a0 = a0 mulhu a3
101231: 98 77 04                 a0 = a0 >> 0x4
101234: ca 27 07                 a0 = a0 * t0
101237: c9 7b 0b                 a4 = a4 - a0
101240: 95 b7 64                 a0 = a4 + 0x64
101243: 28 08                    jump @7949
      :                          @7948
101245: 33 05 02                 s0 = 0x2
101248: aa 57 2e                 jump @7957 if a0 == s0
      :                          @7949
101251: 64 76                    s1 = a0
101253: 95 77 01                 a0 = a0 + 0x1
101256: ac c7 fb                 jump @7949 if a0 <u a5
      :                          @7950
101259: 84 7b 01                 a4 = a0 & 0x1
101262: 51 0b ef                 jump @7948 if a4 == 0
      :                          @7951
101265: ac 47 1a                 jump @7956 if a0 <u t2
      :                          @7952
101268: 33 05 03                 s0 = 0x3
101271: 01                       fallthrough
      :                          @7953
101272: 51 05 88 00              jump @7964 if s0 == 0
      :                          @7954
101276: cd 57 0b                 a4 = a0 %u s0
101279: 51 0b e4                 jump @7949 if a4 == 0
      :                          @7955
101282: 95 55 02                 s0 = s0 + 0x2
101285: ca 55 0b                 a4 = s0 * s0
101288: ae b7 f0                 jump @7953 if a0 >=u a4
      :                          @7956
101291: 64 75                    s0 = a0
101293: 01                       fallthrough
      :                          @7957
101294: aa 86 9c                 jump @7947 if s1 == a1
      :                          @7958
101297: ca 86 06                 s1 = s1 * a1
101300: 51 06 6c                 jump @7964 if s1 == 0
      :                          @7959
101303: 7b 10 08                 u64 [sp + 0x8] = ra
101306: 33 07 01 00 01           a0 = 0x10001
101311: cd 67 08                 a1 = a0 %u s1
101314: 95 17 18                 a0 = sp + 0x18
101317: 7b 18                    u64 [sp] = a1
101319: 64 69                    a2 = s1
101321: 50 20 96 04 14 00 ff     ra = 1174, jump @2421
      :                          @7960 [@dyn 587]
101328: 82 17 18                 a0 = u64 [sp + 0x18]
101331: 52 17 01 4f              jump @7966 if a0 != 1
      :                          @7961
101335: 82 17 20                 a0 = u64 [sp + 0x20]
101338: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
101348: d3 87 09                 a2 = a0 ^ a1
101351: e1 69 09                 a2 = a2 | ~s1
101354: 82 1a 08                 a3 = u64 [sp + 0x8]
101357: 51 09 34                 jump @7965 if a2 == 0
      :                          @7962
101360: ce 67 07                 a0 = a0 %s s1
101363: c8 67 07                 a0 = a0 + s1
101366: d3 78 08                 a1 = a1 ^ a0
101369: e1 68 08                 a1 = a1 | ~s1
101372: 51 08 25                 jump @7965 if a1 == 0
      :                          @7963
101375: ce 67 07                 a0 = a0 %s s1
101378: 82 18 10                 a1 = u64 [sp + 0x10]
101381: ca 85 08                 a1 = s0 * a1
101384: 7b a8                    u64 [a3] = a1
101386: 82 18                    a1 = u64 [sp]
101388: 7b a8 08                 u64 [a3 + 0x8] = a1
101391: 7b a7 10                 u64 [a3 + 0x10] = a0
101394: 82 10 40                 ra = u64 [sp + 0x40]
101397: 82 15 38                 s0 = u64 [sp + 0x38]
101400: 82 16 30                 s1 = u64 [sp + 0x30]
101403: 95 11 48                 sp = sp + 0x48
101406: 32 00                    ret
      :                          @7964
101408: 00                       trap
      :                          @7965
101409: 00                       trap
      :                          @7966
101410: 00                       trap
      :                          @7967
101411: aa 6c 2e                 jump @7976 if a5 == s1
      :                          @7968
101414: 64 c5                    s0 = a5
101416: 95 cc 01                 a5 = a5 + 0x1
101419: ac 8c fb                 jump @7968 if a5 <u a1
      :                          @7969
101422: 84 ca 01                 a3 = a5 & 0x1
101425: 51 0a f2                 jump @7967 if a3 == 0
      :                          @7970
101428: ac 9c 1a                 jump @7975 if a5 <u a2
      :                          @7971
101431: 33 0a 03                 a3 = 0x3
101434: 01                       fallthrough
      :                          @7972
101435: 51 0a 8f 00              jump @7983 if a3 == 0
      :                          @7973
101439: cd ac 0b                 a4 = a5 %u a3
101442: 51 0b e4                 jump @7968 if a4 == 0
      :                          @7974
101445: 95 aa 02                 a3 = a3 + 0x2
101448: ca aa 0b                 a4 = a3 * a3
101451: ae bc f0                 jump @7972 if a5 >=u a4
      :                          @7975
101454: 64 c6                    s1 = a5
101456: 01                       fallthrough
      :                          @7976
101457: 7b 12                    u64 [sp] = t0
101459: 7b 17 08                 u64 [sp + 0x8] = a0
101462: 64 67                    a0 = s1
101464: 50 20 98 04 fc 00 ff     ra = 1176, jump @2464
      :                          @7977 [@dyn 588]
101471: 3a 08 78 12 03           a1 = u64 [0x31278]
101476: 97 89 0d                 a2 = a1 << 0xd
101479: d3 98 08                 a1 = a1 ^ a2
101482: 98 89 07                 a2 = a1 >> 0x7
101485: d3 98 08                 a1 = a1 ^ a2
101488: 97 89 11                 a2 = a1 << 0x11
101491: d3 98 08                 a1 = a1 ^ a2
101494: 95 59 ff                 a2 = s0 + 0xffffffffffffffff
101497: 3e 08 78 12 03           u64 [0x31278] = a1
101502: 51 09 4c                 jump @7983 if a2 == 0
      :                          @7978
101505: 82 1a                    a3 = u64 [sp]
101507: ca a8 08                 a1 = a1 * a3
101510: cd 98 08                 a1 = a1 %u a2
101513: 95 88 01                 a1 = a1 + 0x1
101516: 8e 59                    a2 = s0 >u 0
101518: 64 7b                    a4 = a0
101520: 64 8a                    a3 = a1
101522: 28 0b                    jump @7980
      :                          @7979
101524: 98 aa 01                 a3 = a3 >> 0x1
101527: ca bb 0b                 a4 = a4 * a4
101530: 51 0a 14                 jump @7982 if a3 == 0
      :                          @7980
101533: 84 ac 01                 a5 = a3 & 0x1
101536: cd 6b 0b                 a4 = a4 %u s1
101539: 51 0c f1                 jump @7979 if a5 == 0
      :                          @7981
101542: ca 9b 09                 a2 = a4 * a2
101545: cd 69 09                 a2 = a2 %u s1
101548: 28 e8                    jump @7979
      :                          @7982
101550: 82 1a 08                 a3 = u64 [sp + 0x8]
101553: 7b a6                    u64 [a3] = s1
101555: 7b a7 08                 u64 [a3 + 0x8] = a0
101558: 7b a9 10                 u64 [a3 + 0x10] = a2
101561: 7b a8 18                 u64 [a3 + 0x18] = a1
101564: 82 10 20                 ra = u64 [sp + 0x20]
101567: 82 15 18                 s0 = u64 [sp + 0x18]
101570: 82 16 10                 s1 = u64 [sp + 0x10]
101573: 95 11 28                 sp = sp + 0x28
101576: 32 00                    ret
      :                          @7983
101578: 00                       trap
      :                          @7984
101579: 98 77 01                 a0 = a0 >> 0x1
101582: ca aa 0a                 a3 = a3 * a3
101585: 51 07 14                 jump @7987 if a0 == 0
      :                          @7985
101588: 84 7b 01                 a4 = a0 & 0x1
101591: cd 8a 0a                 a3 = a3 %u a1
101594: 51 0b f1                 jump @7984 if a4 == 0
      :                          @7986
101597: ca 6a 0b                 a4 = a3 * s1
101600: cd 8b 06                 s1 = a4 %u a1
101603: 28 e8                    jump @7984
      :                          @7987
101605: 95 17 10                 a0 = sp + 0x10
101608: 64 98                    a1 = a2
101610: 64 59                    a2 = s0
101612: 50 20 9a 04 f1 fe fe     ra = 1178, jump @2421
      :                          @7988 [@dyn 589]
101619: 82 17 10                 a0 = u64 [sp + 0x10]
101622: 52 17 01 52              jump @7993 if a0 != 1
      :                          @7989
101626: 82 17 18                 a0 = u64 [sp + 0x18]
101629: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
101639: d3 87 09                 a2 = a0 ^ a1
101642: e1 59 09                 a2 = a2 | ~s0
101645: 51 09 3a                 jump @7992 if a2 == 0
      :                          @7990
101648: ce 57 07                 a0 = a0 %s s0
101651: c8 57 07                 a0 = a0 + s0
101654: d3 78 08                 a1 = a1 ^ a0
101657: e1 58 08                 a1 = a1 | ~s0
101660: 51 08 2b                 jump @7992 if a1 == 0
      :                          @7991
101663: ce 57 08                 a1 = a0 %s s0
101666: cd 56 07                 a0 = s1 %u s0
101669: 82 19 08                 a2 = u64 [sp + 0x8]
101672: ca 97 09                 a2 = a0 * a2
101675: 82 1a                    a3 = u64 [sp]
101677: c8 a9 09                 a2 = a2 + a3
101680: cd 59 09                 a2 = a2 %u s0
101683: ca 89 08                 a1 = a2 * a1
101686: cd 58 08                 a1 = a1 %u s0
101689: 82 10 38                 ra = u64 [sp + 0x38]
101692: 82 15 30                 s0 = u64 [sp + 0x30]
101695: 82 16 28                 s1 = u64 [sp + 0x28]
101698: 95 11 40                 sp = sp + 0x40
101701: 32 00                    ret
      :                          @7992
101703: 00                       trap
      :                          @7993
101704: 00                       trap
      :                          @7994
101705: 95 11 b0                 sp = sp + 0xffffffffffffffb0
101708: 7b 10 48                 u64 [sp + 0x48] = ra
101711: 7b 15 40                 u64 [sp + 0x40] = s0
101714: 7b 16 38                 u64 [sp + 0x38] = s1
101717: 88 82 01                 t0 = a1 <u 0x1
101720: d8 b8 06                 s1 = a1 <u a4
101723: 85 63 01                 t1 = s1 ^ 0x1
101726: 88 96 01                 s1 = a2 <u 0x1
101729: d4 26 05                 s0 = s1 | t0
101732: d4 35 05                 s0 = s0 | t1
101735: d8 b9 06                 s1 = a2 <u a4
101738: 85 66 01                 s1 = s1 ^ 0x1
101741: d4 56 02                 t0 = s1 | s0
101744: 51 02 08                 jump @7996 if t0 == 0
      :                          @7995
101747: 33 07                    a0 = 0
101749: 28 c3 00                 jump @8011
      :                          @7996
101752: 64 45                    s0 = t2
101754: 64 c6                    s1 = a5
101756: 7b 17                    u64 [sp] = a0
101758: 7b 1a 08                 u64 [sp + 0x8] = a3
101761: 7b 18 10                 u64 [sp + 0x10] = a1
101764: 95 17 20                 a0 = sp + 0x20
101767: 64 98                    a1 = a2
101769: 64 b9                    a2 = a4
101771: 7b 1b 18                 u64 [sp + 0x18] = a4
101774: 50 20 9c 04 4f fe fe     ra = 1180, jump @2421
      :                          @7997 [@dyn 590]
101781: 82 17 20                 a0 = u64 [sp + 0x20]
101784: 52 17 01 af 00           jump @8013 if a0 != 1
      :                          @7998
101789: 82 17 28                 a0 = u64 [sp + 0x28]
101792: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
101802: d3 87 09                 a2 = a0 ^ a1
101805: 82 12 18                 t0 = u64 [sp + 0x18]
101808: e1 29 09                 a2 = a2 | ~t0
101811: 51 09 93 00              jump @8012 if a2 == 0
      :                          @7999
101815: ce 27 07                 a0 = a0 %s t0
101818: c8 27 07                 a0 = a0 + t0
101821: d3 78 08                 a1 = a1 ^ a0
101824: e1 28 08                 a1 = a1 | ~t0
101827: 51 08 83 00              jump @8012 if a1 == 0
      :                          @8000
101831: ce 27 08                 a1 = a0 %s t0
101834: 82 13 10                 t1 = u64 [sp + 0x10]
101837: ca 38 07                 a0 = a1 * t1
101840: cd 27 07                 a0 = a0 %u t0
101843: 82 19                    a2 = u64 [sp]
101845: ca 98 08                 a1 = a1 * a2
101848: cd 28 0a                 a3 = a1 %u t0
101851: 33 08 01                 a1 = 0x1
101854: 33 09 01                 a2 = 0x1
101857: 82 14 08                 t2 = u64 [sp + 0x8]
101860: 51 0a 22                 jump @8005 if a3 == 0
      :                          @8001
101863: 33 09 01                 a2 = 0x1
101866: 28 0b                    jump @8003
      :                          @8002
101868: 98 aa 01                 a3 = a3 >> 0x1
101871: ca bb 06                 s1 = a4 * a4
101874: 51 0a 14                 jump @8005 if a3 == 0
      :                          @8003
101877: 84 ac 01                 a5 = a3 & 0x1
101880: cd 46 0b                 a4 = s1 %u t2
101883: 51 0c f1                 jump @8002 if a5 == 0
      :                          @8004
101886: ca 9b 09                 a2 = a4 * a2
101889: cd 49 09                 a2 = a2 %u t2
101892: 28 e8                    jump @8002
      :                          @8005
101894: 51 07 22                 jump @8010 if a0 == 0
      :                          @8006
101897: 33 08 01                 a1 = 0x1
101900: 28 0b                    jump @8008
      :                          @8007
101902: 98 77 01                 a0 = a0 >> 0x1
101905: ca aa 05                 s0 = a3 * a3
101908: 51 07 14                 jump @8010 if a0 == 0
      :                          @8008
101911: 84 7b 01                 a4 = a0 & 0x1
101914: cd 45 0a                 a3 = s0 %u t2
101917: 51 0b f1                 jump @8007 if a4 == 0
      :                          @8009
101920: ca 8a 08                 a1 = a3 * a1
101923: cd 48 08                 a1 = a1 %u t2
101926: 28 e8                    jump @8007
      :                          @8010
101928: ca 98 07                 a0 = a1 * a2
101931: cd 47 07                 a0 = a0 %u t2
101934: cd 27 07                 a0 = a0 %u t0
101937: d3 37 07                 a0 = a0 ^ t1
101940: 88 77 01                 a0 = a0 <u 0x1
101943: 01                       fallthrough
      :                          @8011
101944: 82 10 48                 ra = u64 [sp + 0x48]
101947: 82 15 40                 s0 = u64 [sp + 0x40]
101950: 82 16 38                 s1 = u64 [sp + 0x38]
101953: 95 11 50                 sp = sp + 0x50
101956: 32 00                    ret
      :                          @8012
101958: 00                       trap
      :                          @8013
101959: 00                       trap
      :                          @8014
101960: 82 4b                    a4 = u64 [t2]
101962: c8 9b 0c                 a5 = a4 + a2
101965: ac bc da 00              jump @8035 if a5 <u a4
      :                          @8015
101969: 95 c8 08                 a1 = a5 + 0x8
101972: d8 c8 06                 s1 = a1 <u a5
101975: d8 82 08                 a1 = t0 <u a1
101978: d4 68 08                 a1 = a1 | s1
101981: 52 08 ca 00              jump @8035 if a1 != 0
      :                          @8016
101985: c9 c3 06                 s1 = t1 - a5
101988: c8 26 06                 s1 = s1 + t0
101991: 84 68 07                 a1 = s1 & 0x7
101994: c8 8c 0c                 a5 = a5 + a1
101997: 01                       fallthrough
      :                          @8017
101998: 82 47                    a0 = u64 [t2]
102000: ab b7 d8                 jump @8014 if a0 != a4
      :                          @8018
102003: 7b 4c                    u64 [t2] = a5
102005: c9 86 06                 s1 = s1 - a1
102008: 64 67                    a0 = s1
102010: 33 08                    a1 = 0
102012: 7b 1a 10                 u64 [sp + 0x10] = a3
102015: 64 05                    s0 = ra
102017: 50 20 9e 04 95 7d 01     ra = 1182, jump @13687
      :                          @8019 [@dyn 591]
102024: 64 64                    t2 = s1
102026: 64 56                    s1 = s0
102028: 82 1a 10                 a3 = u64 [sp + 0x10]
102031: 33 07                    a0 = 0
102033: 14 09 00 00 00 00 00 00 00 80 a2 = 0x8000000000000000
102043: 33 02 02                 t0 = 0x2
102046: 82 13 18                 t1 = u64 [sp + 0x18]
102049: 01                       fallthrough
      :                          @8020
102050: 51 07 35                 jump @8025 if a0 == 0
      :                          @8021
102053: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
102056: ac 8a 7e                 jump @8034 if a3 <u a1
      :                          @8022
102059: 97 88 03                 a1 = a1 << 0x3
102062: c8 48 08                 a1 = a1 + t2
102065: 82 88                    a1 = u64 [a1]
102067: 82 6b 08                 a4 = u64 [s1 + 0x8]
102070: ca 8b 08                 a1 = a4 * a1
102073: 9a 8b                    a4 = -a1
102075: ac 27 1f                 jump @8026 if a0 <u t0
      :                          @8023
102078: 95 78 fe                 a1 = a0 + 0xfffffffffffffffe
102081: ac 8a 65                 jump @8034 if a3 <u a1
      :                          @8024
102084: 97 88 03                 a1 = a1 << 0x3
102087: c8 48 08                 a1 = a1 + t2
102090: 82 88                    a1 = u64 [a1]
102092: 82 6c 10                 a5 = u64 [s1 + 0x10]
102095: ca 8c 08                 a1 = a5 * a1
102098: c9 8b 0b                 a4 = a4 - a1
102101: 28 05                    jump @8026
      :                          @8025
102103: 82 3b                    a4 = u64 [t1]
102105: 01                       fallthrough
      :                          @8026
102106: 82 68                    a1 = u64 [s1]
102108: 51 08 47                 jump @8031 if a1 == 0
      :                          @8027
102111: d3 9b 0c                 a5 = a4 ^ a2
102114: e1 8c 0c                 a5 = a5 | ~a1
102117: 51 0c 3f                 jump @8032 if a5 == 0
      :                          @8028
102120: ac 7a 3d                 jump @8033 if a3 <u a0
      :                          @8029
102123: d8 a7 0c                 a5 = a0 <u a3
102126: 97 75 03                 s0 = a0 << 0x3
102129: c8 c7 07                 a0 = a0 + a5
102132: c8 45 05                 s0 = s0 + t2
102135: cc 8b 08                 a1 = a4 /s a1
102138: d8 7a 0b                 a4 = a3 <u a0
102141: 85 bb 01                 a4 = a4 ^ 0x1
102144: d2 cb 0b                 a4 = a4 & a5
102147: 7b 58                    u64 [s0] = a1
102149: 52 0b 9d                 jump @8020 if a4 != 0
      :                          @8030
102152: 82 17 08                 a0 = u64 [sp + 0x8]
102155: 82 18                    a1 = u64 [sp]
102157: 7b 87                    u64 [a1] = a0
102159: 7b 84 08                 u64 [a1 + 0x8] = t2
102162: 7b 87 10                 u64 [a1 + 0x10] = a0
102165: 82 10 30                 ra = u64 [sp + 0x30]
102168: 82 15 28                 s0 = u64 [sp + 0x28]
102171: 82 16 20                 s1 = u64 [sp + 0x20]
102174: 95 11 38                 sp = sp + 0x38
102177: 32 00                    ret
      :                          @8031
102179: 00                       trap
      :                          @8032
102180: 00                       trap
      :                          @8033
102181: 00                       trap
      :                          @8034
102182: 00                       trap
      :                          @8035
102183: 00                       trap
      :                          @8036
102184: 33 02                    t0 = 0
102186: 51 08 30                 jump @8041 if a1 == 0
      :                          @8037
102189: 64 83                    t1 = a1
102191: 64 8b                    a4 = a1
102193: 01                       fallthrough
      :                          @8038
102194: 98 bb 01                 a4 = a4 >> 0x1
102197: c8 2b 0b                 a4 = a4 + t0
102200: 97 bc 03                 a5 = a4 << 0x3
102203: c8 7c 0c                 a5 = a5 + a0
102206: 82 cc                    a5 = u64 [a5]
102208: aa 9c 2a                 jump @8043 if a5 == a2
      :                          @8039
102211: d9 9c 04                 t2 = a5 <s a2
102214: d9 c9 0c                 a5 = a2 <s a5
102217: db cb 03                 t1 = a4 if a5 != 0
102220: 95 bb 01                 a4 = a4 + 0x1
102223: db 4b 02                 t0 = a4 if t2 != 0
102226: c9 23 0b                 a4 = t1 - t0
102229: ac 32 dd                 jump @8038 if t0 <u t1
      :                          @8040
102232: 28 1a                    jump @8044
      :                          @8041
102234: 33 0c                    a5 = 0
102236: 33 07                    a0 = 0
102238: 28 50 b5 00              jump @10773
      :                          @8042
102242: e4 2c 07                 a0 = maxu(a5, t0)
102245: c9 27 07                 a0 = a0 - t0
102248: 32 00                    ret
      :                          @8043
102250: 64 b2                    t0 = a4
102252: 33 09                    a2 = 0
102254: 64 8b                    a4 = a1
102256: 28 07                    jump @8045
      :                          @8044
102258: 33 09                    a2 = 0
102260: 64 8b                    a4 = a1
102262: 01                       fallthrough
      :                          @8045
102263: 98 bb 01                 a4 = a4 >> 0x1
102266: c8 9b 0c                 a5 = a4 + a2
102269: 97 cb 03                 a4 = a5 << 0x3
102272: c8 7b 0b                 a4 = a4 + a0
102275: 82 bb                    a4 = u64 [a4]
102277: aa ab dd                 jump @8042 if a4 == a3
      :                          @8046
102280: d9 ab 03                 t1 = a4 <s a3
102283: d9 ba 0b                 a4 = a3 <s a4
102286: db bc 08                 a1 = a5 if a4 != 0
102289: 95 cc 01                 a5 = a5 + 0x1
102292: db 3c 09                 a2 = a5 if t1 != 0
102295: c9 98 0b                 a4 = a1 - a2
102298: ac 89 dd                 jump @8045 if a2 <u a1
      :                          @8047
102301: e4 29 07                 a0 = maxu(a2, t0)
102304: c9 27 07                 a0 = a0 - t0
102307: 32 00                    ret
      :                          @8048 [@dyn 592]
102309: 7b 17 50                 u64 [sp + 0x50] = a0
102312: 84 67 ff 00              a0 = s1 & 0xff
102316: 97 77 02                 a0 = a0 << 0x2
102319: 33 08 00 00 01           a1 = 0x10000
102324: c8 87 07                 a0 = a0 + a1
102327: 81 77                    a0 = i32 [a0]
102329: 32 07                    jump [a0]
      :                          @8049 [@dyn 593]
102331: 3a 08 78 12 03           a1 = u64 [0x31278]
102336: 97 89 0d                 a2 = a1 << 0xd
102339: d3 98 08                 a1 = a1 ^ a2
102342: 98 89 07                 a2 = a1 >> 0x7
102345: d3 98 08                 a1 = a1 ^ a2
102348: 97 89 11                 a2 = a1 << 0x11
102351: d3 98 08                 a1 = a1 ^ a2
102354: 3a 09 60 11 03           a2 = u64 [0x31160]
102359: 3a 0a 70 11 03           a3 = u64 [0x31170]
102364: 3e 08 78 12 03           u64 [0x31278] = a1
102369: ca 98 07                 a0 = a1 * a2
102372: 98 78 01                 a1 = a0 >> 0x1
102375: d6 a8 08                 a1 = a1 mulhu a3
102378: 98 88 04                 a1 = a1 >> 0x4
102381: 96 88 32                 a1 = a1 * 0x32
102384: c9 87 0a                 a3 = a0 - a1
102387: 7a 1a 20 01              u32 [sp + 0x120] = a3
102391: 33 07 02                 a0 = 0x2
102394: 33 08 02                 a1 = 0x2
102397: 52 0a 07                 jump @8051 if a3 != 0
      :                          @8050
102400: 28 4d 60 01              jump @13091
      :                          @8051
102404: 33 08 01                 a1 = 0x1
102407: aa 8a 07                 jump @8053 if a3 == a1
      :                          @8052
102410: 28 21 60 01              jump @13089
      :                          @8053
102414: 33 08 01                 a1 = 0x1
102417: 28 3c 60 01              jump @13091
      :                          @8054 [@dyn 594]
102421: 3a 08 78 12 03           a1 = u64 [0x31278]
102426: 97 89 0d                 a2 = a1 << 0xd
102429: d3 98 08                 a1 = a1 ^ a2
102432: 98 89 07                 a2 = a1 >> 0x7
102435: d3 98 08                 a1 = a1 ^ a2
102438: 3a 09 60 11 03           a2 = u64 [0x31160]
102443: 97 8a 11                 a3 = a1 << 0x11
102446: d3 a8 08                 a1 = a1 ^ a3
102449: ca 98 09                 a2 = a1 * a2
102452: 3e 08 78 12 03           u64 [0x31278] = a1
102457: 14 07 89 88 88 88 88 88 88 88 a0 = 0x8888888888888889
102467: d6 79 07                 a0 = a2 mulhu a0
102470: 98 77 04                 a0 = a0 >> 0x4
102473: 96 77 1e                 a0 = a0 * 0x1e
102476: c9 79 08                 a1 = a2 - a0
102479: bf 79 09                 i32 a2 = a2 - a0
102482: 33 07 03                 a0 = 0x3
102485: 7a 18 20 01              u32 [sp + 0x120] = a1
102489: ac 79 07                 jump @8056 if a2 <u a0
      :                          @8055
102492: 28 e5 52 01              jump @12877
      :                          @8056
102496: 97 88 03                 a1 = a1 << 0x3
102499: 33 07 a8 2f 01           a0 = 0x12fa8
102504: c8 87 07                 a0 = a0 + a1
102507: 82 7b                    a4 = u64 [a0]
102509: 28 fb 52 01              jump @12879
      :                          @8057 [@dyn 595]
102513: 3a 08 78 12 03           a1 = u64 [0x31278]
102518: 97 89 0d                 a2 = a1 << 0xd
102521: d3 98 08                 a1 = a1 ^ a2
102524: 98 89 07                 a2 = a1 >> 0x7
102527: d3 98 08                 a1 = a1 ^ a2
102530: 3a 09 60 11 03           a2 = u64 [0x31160]
102535: 97 8a 11                 a3 = a1 << 0x11
102538: d3 a8 08                 a1 = a1 ^ a3
102541: ca 98 09                 a2 = a1 * a2
102544: 3e 08 78 12 03           u64 [0x31278] = a1
102549: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
102559: d6 79 07                 a0 = a2 mulhu a0
102562: 98 77 05                 a0 = a0 >> 0x5
102565: 96 77 28                 a0 = a0 * 0x28
102568: c9 79 09                 a2 = a2 - a0
102571: 7a 19 20 01              u32 [sp + 0x120] = a2
102575: 52 09 07                 jump @8059 if a2 != 0
      :                          @8058
102578: 28 42 60 01              jump @13101
      :                          @8059
102582: 33 07 01                 a0 = 0x1
102585: aa 79 07                 jump @8061 if a2 == a0
      :                          @8060
102588: 28 3c 60 01              jump @13102
      :                          @8061
102592: 33 07 01                 a0 = 0x1
102595: 28 59 60 01              jump @13104
      :                          @8062 [@dyn 596]
102599: 3a 09 78 12 03           a2 = u64 [0x31278]
102604: 3a 08 60 11 03           a1 = u64 [0x31160]
102609: 97 9a 0d                 a3 = a2 << 0xd
102612: d3 a9 09                 a2 = a2 ^ a3
102615: 98 9a 07                 a3 = a2 >> 0x7
102618: d3 a9 09                 a2 = a2 ^ a3
102621: 97 9a 11                 a3 = a2 << 0x11
102624: d3 a9 09                 a2 = a2 ^ a3
102627: ca 89 0a                 a3 = a2 * a1
102630: 3e 09 78 12 03           u64 [0x31278] = a2
102635: 14 09 cd cc cc cc cc cc cc cc a2 = 0xcccccccccccccccd
102645: d6 9a 09                 a2 = a3 mulhu a2
102648: 98 99 04                 a2 = a2 >> 0x4
102651: 33 0b 14                 a4 = 0x14
102654: ca b9 09                 a2 = a2 * a4
102657: c9 9a 0a                 a3 = a3 - a2
102660: 7b 1a c8 01              u64 [sp + 0x1c8] = a3
102664: 3a 09 78 12 03           a2 = u64 [0x31278]
102669: 97 9a 0d                 a3 = a2 << 0xd
102672: d3 a9 09                 a2 = a2 ^ a3
102675: 98 9a 07                 a3 = a2 >> 0x7
102678: d3 a9 09                 a2 = a2 ^ a3
102681: 97 9a 11                 a3 = a2 << 0x11
102684: d3 a9 09                 a2 = a2 ^ a3
102687: 3e 09 78 12 03           u64 [0x31278] = a2
102692: 82 17 c8 01              a0 = u64 [sp + 0x1c8]
102696: 95 7a 01                 a3 = a0 + 0x1
102699: 52 0a 07                 jump @8064 if a3 != 0
      :                          @8063
102702: 28 69 63 01              jump @13240
      :                          @8064
102706: ca 89 08                 a1 = a2 * a1
102709: cd a8 08                 a1 = a1 %u a3
102712: 7b 18 20 01              u64 [sp + 0x120] = a1
102716: 50 20 aa 04 b4 49 ff     ra = 1194, jump @4208
      :                          @8065 [@dyn 597]
102723: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
102727: 95 17 c8 01              a0 = sp + 0x1c8
102731: 7b 17 90 02              u64 [sp + 0x290] = a0
102735: 33 07 2c 0c              a0 = 0xc2c
102739: 7b 17 98 02              u64 [sp + 0x298] = a0
102743: 95 18 20 01              a1 = sp + 0x120
102747: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
102751: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
102755: 95 17 e0 01              a0 = sp + 0x1e0
102759: 7b 17 b0 02              u64 [sp + 0x2b0] = a0
102763: 33 07 98 0c              a0 = 0xc98
102767: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
102771: 33 07 70 06 01           a0 = 0x10670
102776: 7b 17 38 02              u64 [sp + 0x238] = a0
102780: 49 21 40 02 03           u64 [sp + 576] = 0x3
102785: 49 21 58 02              u64 [sp + 600] = 0
102789: 95 18 90 02              a1 = sp + 0x290
102793: 7b 18 48 02              u64 [sp + 0x248] = a1
102797: 49 21 50 02 03           u64 [sp + 592] = 0x3
102802: 95 17 08 02              a0 = sp + 0x208
102806: 95 18 38 02              a1 = sp + 0x238
102810: 50 20 ac 04 60 be fe     ra = 1196, jump @1503
      :                          @8066 [@dyn 598]
102817: 82 16 10 02              s1 = u64 [sp + 0x210]
102821: 82 1b 18 02              a4 = u64 [sp + 0x218]
102825: 82 17 08 02              a0 = u64 [sp + 0x208]
102829: 7b 17 70                 u64 [sp + 0x70] = a0
102832: 33 07 02                 a0 = 0x2
102835: 33 08                    a1 = 0
102837: 33 09                    a2 = 0
102839: 64 6a                    a3 = s1
102841: 33 00 ae 04              ra = 0x4ae
102845: 0a 64                    ecalli 100 // 'log'
102847: 01                       fallthrough
      :                          @8067 [@dyn 599]
102848: 82 1c 70                 a5 = u64 [sp + 0x70]
102851: 82 17 68                 a0 = u64 [sp + 0x68]
102854: c8 c7 07                 a0 = a0 + a5
102857: 55 37 00 00 ff 0a        jump @8069 if a0 >=u 4294901760
      :                          @8068
102863: 28 b4 50 01              jump @12868
      :                          @8069
102867: 33 07 c0 22 03           a0 = 0x322c0
102872: 95 77 00 00 01           a0 = a0 + 0x10000
102877: 01                       fallthrough
      :                          @8070
102878: 82 78                    a1 = u64 [a0]
102880: c9 87 09                 a2 = a0 - a1
102883: aa 69 07                 jump @8072 if a2 == s1
      :                          @8071
102886: 28 9d 50 01              jump @12868
      :                          @8072
102890: c9 c8 09                 a2 = a1 - a5
102893: 01                       fallthrough
      :                          @8073
102894: 82 7a                    a3 = u64 [a0]
102896: ab 8a ee                 jump @8070 if a3 != a1
      :                          @8074
102899: 7b 79                    u64 [a0] = a2
102901: 33 0b                    a4 = 0
102903: 01                       fallthrough
      :                          @8075
102904: ab 8a e6                 jump @8070 if a3 != a1
      :                          @8076
102907: 28 88 50 01              jump @12868
      :                          @8077 [@dyn 600]
102911: 3a 09 78 12 03           a2 = u64 [0x31278]
102916: 3a 08 60 11 03           a1 = u64 [0x31160]
102921: 97 9a 0d                 a3 = a2 << 0xd
102924: d3 a9 09                 a2 = a2 ^ a3
102927: 98 9a 07                 a3 = a2 >> 0x7
102930: d3 a9 09                 a2 = a2 ^ a3
102933: 97 9a 11                 a3 = a2 << 0x11
102936: d3 a9 09                 a2 = a2 ^ a3
102939: ca 89 0a                 a3 = a2 * a1
102942: 3e 09 78 12 03           u64 [0x31278] = a2
102947: 14 09 cd cc cc cc cc cc cc cc a2 = 0xcccccccccccccccd
102957: d6 9a 09                 a2 = a3 mulhu a2
102960: 98 99 04                 a2 = a2 >> 0x4
102963: 33 0b 14                 a4 = 0x14
102966: ca b9 09                 a2 = a2 * a4
102969: c9 9a 0a                 a3 = a3 - a2
102972: 7b 1a c8 01              u64 [sp + 0x1c8] = a3
102976: 3a 09 78 12 03           a2 = u64 [0x31278]
102981: 97 9a 0d                 a3 = a2 << 0xd
102984: d3 a9 09                 a2 = a2 ^ a3
102987: 98 9a 07                 a3 = a2 >> 0x7
102990: d3 a9 09                 a2 = a2 ^ a3
102993: 97 9a 11                 a3 = a2 << 0x11
102996: d3 a9 09                 a2 = a2 ^ a3
102999: 3e 09 78 12 03           u64 [0x31278] = a2
103004: 82 17 c8 01              a0 = u64 [sp + 0x1c8]
103008: 95 7a 01                 a3 = a0 + 0x1
103011: 52 0a 07                 jump @8079 if a3 != 0
      :                          @8078
103014: 28 31 62 01              jump @13240
      :                          @8079
103018: ca 89 08                 a1 = a2 * a1
103021: cd a8 08                 a1 = a1 %u a3
103024: 7b 18 20 01              u64 [sp + 0x120] = a1
103028: 50 20 b2 04 a1 4a ff     ra = 1202, jump @4266
      :                          @8080 [@dyn 601]
103035: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
103039: 95 17 c8 01              a0 = sp + 0x1c8
103043: 7b 17 90 02              u64 [sp + 0x290] = a0
103047: 33 07 2c 0c              a0 = 0xc2c
103051: 7b 17 98 02              u64 [sp + 0x298] = a0
103055: 95 18 20 01              a1 = sp + 0x120
103059: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
103063: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
103067: 95 18 e0 01              a1 = sp + 0x1e0
103071: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
103075: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
103079: 33 07 b0 06 01           a0 = 0x106b0
103084: 7b 17 38 02              u64 [sp + 0x238] = a0
103088: 49 21 40 02 03           u64 [sp + 576] = 0x3
103093: 49 21 58 02              u64 [sp + 600] = 0
103097: 95 18 90 02              a1 = sp + 0x290
103101: 7b 18 48 02              u64 [sp + 0x248] = a1
103105: 49 21 50 02 03           u64 [sp + 592] = 0x3
103110: 95 17 08 02              a0 = sp + 0x208
103114: 95 18 38 02              a1 = sp + 0x238
103118: 50 20 b4 04 2c bd fe     ra = 1204, jump @1503
      :                          @8081 [@dyn 602]
103125: 82 16 10 02              s1 = u64 [sp + 0x210]
103129: 82 1b 18 02              a4 = u64 [sp + 0x218]
103133: 82 17 08 02              a0 = u64 [sp + 0x208]
103137: 7b 17 70                 u64 [sp + 0x70] = a0
103140: 33 07 02                 a0 = 0x2
103143: 33 08                    a1 = 0
103145: 33 09                    a2 = 0
103147: 64 6a                    a3 = s1
103149: 33 00 b6 04              ra = 0x4b6
103153: 0a 64                    ecalli 100 // 'log'
103155: 01                       fallthrough
      :                          @8082 [@dyn 603]
103156: 82 1c 70                 a5 = u64 [sp + 0x70]
103159: 82 17 68                 a0 = u64 [sp + 0x68]
103162: c8 c7 07                 a0 = a0 + a5
103165: 55 37 00 00 ff 0a        jump @8084 if a0 >=u 4294901760
      :                          @8083
103171: 28 80 4f 01              jump @12868
      :                          @8084
103175: 33 07 c0 22 03           a0 = 0x322c0
103180: 95 77 00 00 01           a0 = a0 + 0x10000
103185: 01                       fallthrough
      :                          @8085
103186: 82 78                    a1 = u64 [a0]
103188: c9 87 09                 a2 = a0 - a1
103191: aa 69 07                 jump @8087 if a2 == s1
      :                          @8086
103194: 28 69 4f 01              jump @12868
      :                          @8087
103198: c9 c8 09                 a2 = a1 - a5
103201: 01                       fallthrough
      :                          @8088
103202: 82 7a                    a3 = u64 [a0]
103204: ab 8a ee                 jump @8085 if a3 != a1
      :                          @8089
103207: 7b 79                    u64 [a0] = a2
103209: 33 0b                    a4 = 0
103211: 01                       fallthrough
      :                          @8090
103212: ab 8a e6                 jump @8085 if a3 != a1
      :                          @8091
103215: 28 54 4f 01              jump @12868
      :                          @8092 [@dyn 604]
103219: 3a 08 78 12 03           a1 = u64 [0x31278]
103224: 97 89 0d                 a2 = a1 << 0xd
103227: d3 98 08                 a1 = a1 ^ a2
103230: 98 89 07                 a2 = a1 >> 0x7
103233: d3 98 08                 a1 = a1 ^ a2
103236: 3a 09 60 11 03           a2 = u64 [0x31160]
103241: 97 8a 11                 a3 = a1 << 0x11
103244: d3 a8 08                 a1 = a1 ^ a3
103247: ca 98 09                 a2 = a1 * a2
103250: 3e 08 78 12 03           u64 [0x31278] = a1
103255: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
103265: d6 79 07                 a0 = a2 mulhu a0
103268: 98 77 04                 a0 = a0 >> 0x4
103271: 96 77 14                 a0 = a0 * 0x14
103274: c9 79 07                 a0 = a2 - a0
103277: 7b 17 20 01              u64 [sp + 0x120] = a0
103281: 33 00 ba 04              ra = 0x4ba
103285: 95 11 98                 sp = sp + 0xffffffffffffff98
103288: 7b 10 60                 u64 [sp + 0x60] = ra
103291: 7b 15 58                 u64 [sp + 0x58] = s0
103294: 7b 16 50                 u64 [sp + 0x50] = s1
103297: 7b 17 08                 u64 [sp + 0x8] = a0
103300: 95 77 01                 a0 = a0 + 0x1
103303: 7b 17 18                 u64 [sp + 0x18] = a0
103306: 97 79 03                 a2 = a0 << 0x3
103309: 33 07 c0 22 03           a0 = 0x322c0
103314: 33 03 c0 22 03           t1 = 0x322c0
103319: 33 02 00 00 01           t0 = 0x10000
103324: c8 23 0a                 a3 = t1 + t0
103327: 28 96 4b ff              jump @4321
      :                          @8093 [@dyn 605]
103331: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
103335: 95 17 20 01              a0 = sp + 0x120
103339: 7b 17 38 02              u64 [sp + 0x238] = a0
103343: 33 07 2c 0c              a0 = 0xc2c
103347: 7b 17 40 02              u64 [sp + 0x240] = a0
103351: 95 18 e0 01              a1 = sp + 0x1e0
103355: 7b 18 48 02              u64 [sp + 0x248] = a1
103359: 7b 17 50 02              u64 [sp + 0x250] = a0
103363: 33 07 e8 06 01           a0 = 0x106e8
103368: 7b 17 90 02              u64 [sp + 0x290] = a0
103372: 49 21 98 02 02           u64 [sp + 664] = 0x2
103377: 49 21 b0 02              u64 [sp + 688] = 0
103381: 95 18 38 02              a1 = sp + 0x238
103385: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
103389: 49 21 a8 02 02           u64 [sp + 680] = 0x2
103394: 95 17 08 02              a0 = sp + 0x208
103398: 95 18 90 02              a1 = sp + 0x290
103402: 50 20 bc 04 10 bc fe     ra = 1212, jump @1503
      :                          @8094 [@dyn 606]
103409: 82 16 10 02              s1 = u64 [sp + 0x210]
103413: 82 1b 18 02              a4 = u64 [sp + 0x218]
103417: 82 17 08 02              a0 = u64 [sp + 0x208]
103421: 7b 17 70                 u64 [sp + 0x70] = a0
103424: 33 07 02                 a0 = 0x2
103427: 33 08                    a1 = 0
103429: 33 09                    a2 = 0
103431: 64 6a                    a3 = s1
103433: 33 00 be 04              ra = 0x4be
103437: 0a 64                    ecalli 100 // 'log'
103439: 01                       fallthrough
      :                          @8095 [@dyn 607]
103440: 82 1c 70                 a5 = u64 [sp + 0x70]
103443: 82 17 68                 a0 = u64 [sp + 0x68]
103446: c8 c7 07                 a0 = a0 + a5
103449: 55 37 00 00 ff 0a        jump @8097 if a0 >=u 4294901760
      :                          @8096
103455: 28 64 4e 01              jump @12868
      :                          @8097
103459: 33 07 c0 22 03           a0 = 0x322c0
103464: 95 77 00 00 01           a0 = a0 + 0x10000
103469: 01                       fallthrough
      :                          @8098
103470: 82 78                    a1 = u64 [a0]
103472: c9 87 09                 a2 = a0 - a1
103475: aa 69 07                 jump @8100 if a2 == s1
      :                          @8099
103478: 28 4d 4e 01              jump @12868
      :                          @8100
103482: c9 c8 09                 a2 = a1 - a5
103485: 01                       fallthrough
      :                          @8101
103486: 82 7a                    a3 = u64 [a0]
103488: ab 8a ee                 jump @8098 if a3 != a1
      :                          @8102
103491: 7b 79                    u64 [a0] = a2
103493: 33 0b                    a4 = 0
103495: 01                       fallthrough
      :                          @8103
103496: ab 8a e6                 jump @8098 if a3 != a1
      :                          @8104
103499: 28 38 4e 01              jump @12868
      :                          @8105 [@dyn 608]
103503: 3a 08 78 12 03           a1 = u64 [0x31278]
103508: 97 89 0d                 a2 = a1 << 0xd
103511: d3 98 08                 a1 = a1 ^ a2
103514: 98 89 07                 a2 = a1 >> 0x7
103517: d3 98 08                 a1 = a1 ^ a2
103520: 3a 09 60 11 03           a2 = u64 [0x31160]
103525: 97 8a 11                 a3 = a1 << 0x11
103528: d3 a8 08                 a1 = a1 ^ a3
103531: ca 98 09                 a2 = a1 * a2
103534: 3e 08 78 12 03           u64 [0x31278] = a1
103539: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
103549: d6 79 07                 a0 = a2 mulhu a0
103552: 98 77 04                 a0 = a0 >> 0x4
103555: 33 08 14                 a1 = 0x14
103558: ca 87 07                 a0 = a0 * a1
103561: c9 79 07                 a0 = a2 - a0
103564: 7a 17 20 01              u32 [sp + 0x120] = a0
103568: 50 20 c2 04 79 4c ff     ra = 1218, jump @4372
      :                          @8106 [@dyn 609]
103575: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
103579: 95 17 20 01              a0 = sp + 0x120
103583: 7b 17 38 02              u64 [sp + 0x238] = a0
103587: 33 07 62 0c              a0 = 0xc62
103591: 7b 17 40 02              u64 [sp + 0x240] = a0
103595: 95 17 e0 01              a0 = sp + 0x1e0
103599: 7b 17 48 02              u64 [sp + 0x248] = a0
103603: 33 07 2c 0c              a0 = 0xc2c
103607: 7b 17 50 02              u64 [sp + 0x250] = a0
103611: 33 07 18 07 01           a0 = 0x10718
103616: 7b 17 90 02              u64 [sp + 0x290] = a0
103620: 49 21 98 02 02           u64 [sp + 664] = 0x2
103625: 49 21 b0 02              u64 [sp + 688] = 0
103629: 95 18 38 02              a1 = sp + 0x238
103633: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
103637: 49 21 a8 02 02           u64 [sp + 680] = 0x2
103642: 95 17 08 02              a0 = sp + 0x208
103646: 95 18 90 02              a1 = sp + 0x290
103650: 50 20 c4 04 18 bb fe     ra = 1220, jump @1503
      :                          @8107 [@dyn 610]
103657: 82 16 10 02              s1 = u64 [sp + 0x210]
103661: 82 1b 18 02              a4 = u64 [sp + 0x218]
103665: 82 17 08 02              a0 = u64 [sp + 0x208]
103669: 7b 17 70                 u64 [sp + 0x70] = a0
103672: 33 07 02                 a0 = 0x2
103675: 33 08                    a1 = 0
103677: 33 09                    a2 = 0
103679: 64 6a                    a3 = s1
103681: 33 00 c6 04              ra = 0x4c6
103685: 0a 64                    ecalli 100 // 'log'
103687: 01                       fallthrough
      :                          @8108 [@dyn 611]
103688: 82 1c 70                 a5 = u64 [sp + 0x70]
103691: 82 17 68                 a0 = u64 [sp + 0x68]
103694: c8 c7 07                 a0 = a0 + a5
103697: 55 37 00 00 ff 0a        jump @8110 if a0 >=u 4294901760
      :                          @8109
103703: 28 6c 4d 01              jump @12868
      :                          @8110
103707: 33 07 c0 22 03           a0 = 0x322c0
103712: 95 77 00 00 01           a0 = a0 + 0x10000
103717: 01                       fallthrough
      :                          @8111
103718: 82 78                    a1 = u64 [a0]
103720: c9 87 09                 a2 = a0 - a1
103723: aa 69 07                 jump @8113 if a2 == s1
      :                          @8112
103726: 28 55 4d 01              jump @12868
      :                          @8113
103730: c9 c8 09                 a2 = a1 - a5
103733: 01                       fallthrough
      :                          @8114
103734: 82 7a                    a3 = u64 [a0]
103736: ab 8a ee                 jump @8111 if a3 != a1
      :                          @8115
103739: 7b 79                    u64 [a0] = a2
103741: 33 0b                    a4 = 0
103743: 01                       fallthrough
      :                          @8116
103744: ab 8a e6                 jump @8111 if a3 != a1
      :                          @8117
103747: 28 40 4d 01              jump @12868
      :                          @8118 [@dyn 612]
103751: 3a 09 78 12 03           a2 = u64 [0x31278]
103756: 3a 08 60 11 03           a1 = u64 [0x31160]
103761: 97 9a 0d                 a3 = a2 << 0xd
103764: d3 a9 09                 a2 = a2 ^ a3
103767: 98 9a 07                 a3 = a2 >> 0x7
103770: d3 a9 09                 a2 = a2 ^ a3
103773: 97 9a 11                 a3 = a2 << 0x11
103776: d3 a9 09                 a2 = a2 ^ a3
103779: ca 89 0a                 a3 = a2 * a1
103782: 3e 09 78 12 03           u64 [0x31278] = a2
103787: 14 09 cd cc cc cc cc cc cc cc a2 = 0xcccccccccccccccd
103797: d6 9a 09                 a2 = a3 mulhu a2
103800: 98 99 04                 a2 = a2 >> 0x4
103803: 33 0b 14                 a4 = 0x14
103806: ca b9 09                 a2 = a2 * a4
103809: c9 9a 0a                 a3 = a3 - a2
103812: 95 aa 01                 a3 = a3 + 0x1
103815: 7b 1a c8 01              u64 [sp + 0x1c8] = a3
103819: 3a 09 78 12 03           a2 = u64 [0x31278]
103824: 97 9a 0d                 a3 = a2 << 0xd
103827: d3 a9 09                 a2 = a2 ^ a3
103830: 98 9a 07                 a3 = a2 >> 0x7
103833: d3 a9 09                 a2 = a2 ^ a3
103836: 97 9a 11                 a3 = a2 << 0x11
103839: d3 a9 09                 a2 = a2 ^ a3
103842: 3e 09 78 12 03           u64 [0x31278] = a2
103847: 82 17 c8 01              a0 = u64 [sp + 0x1c8]
103851: 52 07 07                 jump @8120 if a0 != 0
      :                          @8119
103854: 28 e9 5e 01              jump @13240
      :                          @8120
103858: ca 89 08                 a1 = a2 * a1
103861: cd 78 08                 a1 = a1 %u a0
103864: 7b 18 20 01              u64 [sp + 0x120] = a1
103868: 50 20 ca 04 8a 4b ff     ra = 1226, jump @4378
      :                          @8121 [@dyn 613]
103875: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
103879: 95 17 c8 01              a0 = sp + 0x1c8
103883: 7b 17 90 02              u64 [sp + 0x290] = a0
103887: 33 07 2c 0c              a0 = 0xc2c
103891: 7b 17 98 02              u64 [sp + 0x298] = a0
103895: 95 18 20 01              a1 = sp + 0x120
103899: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
103903: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
103907: 95 18 e0 01              a1 = sp + 0x1e0
103911: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
103915: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
103919: 33 07 48 07 01           a0 = 0x10748
103924: 7b 17 38 02              u64 [sp + 0x238] = a0
103928: 49 21 40 02 03           u64 [sp + 576] = 0x3
103933: 49 21 58 02              u64 [sp + 600] = 0
103937: 95 18 90 02              a1 = sp + 0x290
103941: 7b 18 48 02              u64 [sp + 0x248] = a1
103945: 49 21 50 02 03           u64 [sp + 592] = 0x3
103950: 95 17 08 02              a0 = sp + 0x208
103954: 95 18 38 02              a1 = sp + 0x238
103958: 50 20 cc 04 e4 b9 fe     ra = 1228, jump @1503
      :                          @8122 [@dyn 614]
103965: 82 16 10 02              s1 = u64 [sp + 0x210]
103969: 82 1b 18 02              a4 = u64 [sp + 0x218]
103973: 82 17 08 02              a0 = u64 [sp + 0x208]
103977: 7b 17 70                 u64 [sp + 0x70] = a0
103980: 33 07 02                 a0 = 0x2
103983: 33 08                    a1 = 0
103985: 33 09                    a2 = 0
103987: 64 6a                    a3 = s1
103989: 33 00 ce 04              ra = 0x4ce
103993: 0a 64                    ecalli 100 // 'log'
103995: 01                       fallthrough
      :                          @8123 [@dyn 615]
103996: 82 1c 70                 a5 = u64 [sp + 0x70]
103999: 82 17 68                 a0 = u64 [sp + 0x68]
104002: c8 c7 07                 a0 = a0 + a5
104005: 55 37 00 00 ff 0a        jump @8125 if a0 >=u 4294901760
      :                          @8124
104011: 28 38 4c 01              jump @12868
      :                          @8125
104015: 33 07 c0 22 03           a0 = 0x322c0
104020: 95 77 00 00 01           a0 = a0 + 0x10000
104025: 01                       fallthrough
      :                          @8126
104026: 82 78                    a1 = u64 [a0]
104028: c9 87 09                 a2 = a0 - a1
104031: aa 69 07                 jump @8128 if a2 == s1
      :                          @8127
104034: 28 21 4c 01              jump @12868
      :                          @8128
104038: c9 c8 09                 a2 = a1 - a5
104041: 01                       fallthrough
      :                          @8129
104042: 82 7a                    a3 = u64 [a0]
104044: ab 8a ee                 jump @8126 if a3 != a1
      :                          @8130
104047: 7b 79                    u64 [a0] = a2
104049: 33 0b                    a4 = 0
104051: 01                       fallthrough
      :                          @8131
104052: ab 8a e6                 jump @8126 if a3 != a1
      :                          @8132
104055: 28 0c 4c 01              jump @12868
      :                          @8133 [@dyn 616]
104059: 3a 09 78 12 03           a2 = u64 [0x31278]
104064: 3a 08 60 11 03           a1 = u64 [0x31160]
104069: 97 9a 0d                 a3 = a2 << 0xd
104072: d3 a9 09                 a2 = a2 ^ a3
104075: 98 9a 07                 a3 = a2 >> 0x7
104078: d3 a9 09                 a2 = a2 ^ a3
104081: 97 9a 11                 a3 = a2 << 0x11
104084: d3 a9 09                 a2 = a2 ^ a3
104087: ca 89 0a                 a3 = a2 * a1
104090: 3e 09 78 12 03           u64 [0x31278] = a2
104095: 14 09 cd cc cc cc cc cc cc cc a2 = 0xcccccccccccccccd
104105: d6 9a 09                 a2 = a3 mulhu a2
104108: 98 99 04                 a2 = a2 >> 0x4
104111: 33 0b 14                 a4 = 0x14
104114: ca b9 09                 a2 = a2 * a4
104117: c9 9a 0a                 a3 = a3 - a2
104120: 95 aa 01                 a3 = a3 + 0x1
104123: 7b 1a c8 01              u64 [sp + 0x1c8] = a3
104127: 3a 09 78 12 03           a2 = u64 [0x31278]
104132: 97 9a 0d                 a3 = a2 << 0xd
104135: d3 a9 09                 a2 = a2 ^ a3
104138: 98 9a 07                 a3 = a2 >> 0x7
104141: d3 a9 09                 a2 = a2 ^ a3
104144: 97 9a 11                 a3 = a2 << 0x11
104147: d3 a9 09                 a2 = a2 ^ a3
104150: 3e 09 78 12 03           u64 [0x31278] = a2
104155: 82 17 c8 01              a0 = u64 [sp + 0x1c8]
104159: 52 07 07                 jump @8135 if a0 != 0
      :                          @8134
104162: 28 b5 5d 01              jump @13240
      :                          @8135
104166: ca 89 08                 a1 = a2 * a1
104169: cd 78 08                 a1 = a1 %u a0
104172: 95 88 01                 a1 = a1 + 0x1
104175: 7b 18 20 01              u64 [sp + 0x120] = a1
104179: 50 20 d2 04 da 4c ff     ra = 1234, jump @4458
      :                          @8136 [@dyn 617]
104186: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
104190: 95 17 c8 01              a0 = sp + 0x1c8
104194: 7b 17 90 02              u64 [sp + 0x290] = a0
104198: 33 07 2c 0c              a0 = 0xc2c
104202: 7b 17 98 02              u64 [sp + 0x298] = a0
104206: 95 18 20 01              a1 = sp + 0x120
104210: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
104214: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
104218: 95 18 e0 01              a1 = sp + 0x1e0
104222: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
104226: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
104230: 33 07 88 07 01           a0 = 0x10788
104235: 7b 17 38 02              u64 [sp + 0x238] = a0
104239: 49 21 40 02 03           u64 [sp + 576] = 0x3
104244: 49 21 58 02              u64 [sp + 600] = 0
104248: 95 18 90 02              a1 = sp + 0x290
104252: 7b 18 48 02              u64 [sp + 0x248] = a1
104256: 49 21 50 02 03           u64 [sp + 592] = 0x3
104261: 95 17 08 02              a0 = sp + 0x208
104265: 95 18 38 02              a1 = sp + 0x238
104269: 50 20 d4 04 ad b8 fe     ra = 1236, jump @1503
      :                          @8137 [@dyn 618]
104276: 82 16 10 02              s1 = u64 [sp + 0x210]
104280: 82 1b 18 02              a4 = u64 [sp + 0x218]
104284: 82 17 08 02              a0 = u64 [sp + 0x208]
104288: 7b 17 70                 u64 [sp + 0x70] = a0
104291: 33 07 02                 a0 = 0x2
104294: 33 08                    a1 = 0
104296: 33 09                    a2 = 0
104298: 64 6a                    a3 = s1
104300: 33 00 d6 04              ra = 0x4d6
104304: 0a 64                    ecalli 100 // 'log'
104306: 01                       fallthrough
      :                          @8138 [@dyn 619]
104307: 82 1c 70                 a5 = u64 [sp + 0x70]
104310: 82 17 68                 a0 = u64 [sp + 0x68]
104313: c8 c7 07                 a0 = a0 + a5
104316: 55 37 00 00 ff 0a        jump @8140 if a0 >=u 4294901760
      :                          @8139
104322: 28 01 4b 01              jump @12868
      :                          @8140
104326: 33 07 c0 22 03           a0 = 0x322c0
104331: 95 77 00 00 01           a0 = a0 + 0x10000
104336: 01                       fallthrough
      :                          @8141
104337: 82 78                    a1 = u64 [a0]
104339: c9 87 09                 a2 = a0 - a1
104342: aa 69 07                 jump @8143 if a2 == s1
      :                          @8142
104345: 28 ea 4a 01              jump @12868
      :                          @8143
104349: c9 c8 09                 a2 = a1 - a5
104352: 01                       fallthrough
      :                          @8144
104353: 82 7a                    a3 = u64 [a0]
104355: ab 8a ee                 jump @8141 if a3 != a1
      :                          @8145
104358: 7b 79                    u64 [a0] = a2
104360: 33 0b                    a4 = 0
104362: 01                       fallthrough
      :                          @8146
104363: ab 8a e6                 jump @8141 if a3 != a1
      :                          @8147
104366: 28 d5 4a 01              jump @12868
      :                          @8148 [@dyn 620]
104370: 3a 08 78 12 03           a1 = u64 [0x31278]
104375: 97 89 0d                 a2 = a1 << 0xd
104378: d3 98 08                 a1 = a1 ^ a2
104381: 98 89 07                 a2 = a1 >> 0x7
104384: d3 98 08                 a1 = a1 ^ a2
104387: 3a 09 60 11 03           a2 = u64 [0x31160]
104392: 97 8a 11                 a3 = a1 << 0x11
104395: d3 a8 08                 a1 = a1 ^ a3
104398: ca 98 09                 a2 = a1 * a2
104401: 3e 08 78 12 03           u64 [0x31278] = a1
104406: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
104416: d6 79 07                 a0 = a2 mulhu a0
104419: 98 77 04                 a0 = a0 >> 0x4
104422: 96 77 14                 a0 = a0 * 0x14
104425: c9 79 07                 a0 = a2 - a0
104428: 7b 17 20 01              u64 [sp + 0x120] = a0
104432: 50 20 da 04 60 4c ff     ra = 1242, jump @4467
      :                          @8149 [@dyn 621]
104439: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
104443: 95 17 20 01              a0 = sp + 0x120
104447: 7b 17 38 02              u64 [sp + 0x238] = a0
104451: 33 07 2c 0c              a0 = 0xc2c
104455: 7b 17 40 02              u64 [sp + 0x240] = a0
104459: 95 18 e0 01              a1 = sp + 0x1e0
104463: 7b 18 48 02              u64 [sp + 0x248] = a1
104467: 7b 17 50 02              u64 [sp + 0x250] = a0
104471: 33 07 b8 07 01           a0 = 0x107b8
104476: 7b 17 90 02              u64 [sp + 0x290] = a0
104480: 49 21 98 02 02           u64 [sp + 664] = 0x2
104485: 49 21 b0 02              u64 [sp + 688] = 0
104489: 95 18 38 02              a1 = sp + 0x238
104493: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
104497: 49 21 a8 02 02           u64 [sp + 680] = 0x2
104502: 95 17 08 02              a0 = sp + 0x208
104506: 95 18 90 02              a1 = sp + 0x290
104510: 50 20 dc 04 bc b7 fe     ra = 1244, jump @1503
      :                          @8150 [@dyn 622]
104517: 82 16 10 02              s1 = u64 [sp + 0x210]
104521: 82 1b 18 02              a4 = u64 [sp + 0x218]
104525: 82 17 08 02              a0 = u64 [sp + 0x208]
104529: 7b 17 70                 u64 [sp + 0x70] = a0
104532: 33 07 02                 a0 = 0x2
104535: 33 08                    a1 = 0
104537: 33 09                    a2 = 0
104539: 64 6a                    a3 = s1
104541: 33 00 de 04              ra = 0x4de
104545: 0a 64                    ecalli 100 // 'log'
104547: 01                       fallthrough
      :                          @8151 [@dyn 623]
104548: 82 1c 70                 a5 = u64 [sp + 0x70]
104551: 82 17 68                 a0 = u64 [sp + 0x68]
104554: c8 c7 07                 a0 = a0 + a5
104557: 55 37 00 00 ff 0a        jump @8153 if a0 >=u 4294901760
      :                          @8152
104563: 28 10 4a 01              jump @12868
      :                          @8153
104567: 33 07 c0 22 03           a0 = 0x322c0
104572: 95 77 00 00 01           a0 = a0 + 0x10000
104577: 01                       fallthrough
      :                          @8154
104578: 82 78                    a1 = u64 [a0]
104580: c9 87 09                 a2 = a0 - a1
104583: aa 69 07                 jump @8156 if a2 == s1
      :                          @8155
104586: 28 f9 49 01              jump @12868
      :                          @8156
104590: c9 c8 09                 a2 = a1 - a5
104593: 01                       fallthrough
      :                          @8157
104594: 82 7a                    a3 = u64 [a0]
104596: ab 8a ee                 jump @8154 if a3 != a1
      :                          @8158
104599: 7b 79                    u64 [a0] = a2
104601: 33 0b                    a4 = 0
104603: 01                       fallthrough
      :                          @8159
104604: ab 8a e6                 jump @8154 if a3 != a1
      :                          @8160
104607: 28 e4 49 01              jump @12868
      :                          @8161 [@dyn 624]
104611: 95 17 90 02              a0 = sp + 0x290
104615: 33 09 04                 a2 = 0x4
104618: 33 08                    a1 = 0
104620: 50 20 e2 04 f8 cb fe     ra = 1250, jump @1889
      :                          @8162 [@dyn 625]
104627: 95 17 20 01              a0 = sp + 0x120
104631: 95 18 90 02              a1 = sp + 0x290
104635: 33 09 04                 a2 = 0x4
104638: 50 20 e4 04 33 c1 fe     ra = 1252, jump @1721
      :                          @8163 [@dyn 626]
104645: 33 04 04                 t2 = 0x4
104648: 33 07                    a0 = 0
104650: 33 0c 10                 a5 = 0x10
104653: 33 0a 78 12 03           a3 = 0x31278
104658: 33 02 02                 t0 = 0x2
104661: 33 03 03                 t1 = 0x3
104664: 33 06 70                 s1 = 0x70
104667: 01                       fallthrough
      :                          @8164
104668: 3a 08 78 12 03           a1 = u64 [0x31278]
104673: 97 89 0d                 a2 = a1 << 0xd
104676: d3 98 08                 a1 = a1 ^ a2
104679: 98 8b 07                 a4 = a1 >> 0x7
104682: d3 8b 0b                 a4 = a4 ^ a1
104685: 97 b8 11                 a1 = a4 << 0x11
104688: d3 b8 08                 a1 = a1 ^ a4
104691: 3e 08 78 12 03           u64 [0x31278] = a1
104696: 82 18 30 01              a1 = u64 [sp + 0x130]
104700: ac 87 07                 jump @8166 if a0 <u a1
      :                          @8165
104703: 28 8d 5b 01              jump @13229
      :                          @8166
104707: 82 18 28 01              a1 = u64 [sp + 0x128]
104711: c8 c8 08                 a1 = a1 + a5
104714: 82 89                    a2 = u64 [a1]
104716: 52 09 07                 jump @8168 if a2 != 0
      :                          @8167
104719: 28 79 5b 01              jump @13227
      :                          @8168
104723: 82 88 f8                 a1 = u64 [a1 + 0xfffffffffffffff8]
104726: 84 bb 01                 a4 = a4 & 0x1
104729: 7b 8b                    u64 [a1] = a4
104731: 3a 08 78 12 03           a1 = u64 [0x31278]
104736: 97 89 0d                 a2 = a1 << 0xd
104739: d3 98 08                 a1 = a1 ^ a2
104742: 98 8b 07                 a4 = a1 >> 0x7
104745: d3 8b 0b                 a4 = a4 ^ a1
104748: 97 b8 11                 a1 = a4 << 0x11
104751: d3 b8 08                 a1 = a1 ^ a4
104754: 3e 08 78 12 03           u64 [0x31278] = a1
104759: 82 18 30 01              a1 = u64 [sp + 0x130]
104763: ac 87 07                 jump @8170 if a0 <u a1
      :                          @8169
104766: 28 4e 5b 01              jump @13229
      :                          @8170
104770: 82 19 28 01              a2 = u64 [sp + 0x128]
104774: c8 c9 09                 a2 = a2 + a5
104777: 82 98                    a1 = u64 [a2]
104779: ae 28 07                 jump @8172 if a1 >=u t0
      :                          @8171
104782: 28 75 5a 01              jump @13209
      :                          @8172
104786: 82 98 f8                 a1 = u64 [a2 + 0xfffffffffffffff8]
104789: 84 bb 01                 a4 = a4 & 0x1
104792: 7b 8b 08                 u64 [a1 + 0x8] = a4
104795: 3a 08 78 12 03           a1 = u64 [0x31278]
104800: 97 89 0d                 a2 = a1 << 0xd
104803: d3 98 08                 a1 = a1 ^ a2
104806: 98 8b 07                 a4 = a1 >> 0x7
104809: d3 8b 0b                 a4 = a4 ^ a1
104812: 97 b8 11                 a1 = a4 << 0x11
104815: d3 b8 08                 a1 = a1 ^ a4
104818: 3e 08 78 12 03           u64 [0x31278] = a1
104823: 82 18 30 01              a1 = u64 [sp + 0x130]
104827: ac 87 07                 jump @8174 if a0 <u a1
      :                          @8173
104830: 28 0e 5b 01              jump @13229
      :                          @8174
104834: 82 19 28 01              a2 = u64 [sp + 0x128]
104838: c8 c9 09                 a2 = a2 + a5
104841: 82 98                    a1 = u64 [a2]
104843: ae 38 07                 jump @8176 if a1 >=u t1
      :                          @8175
104846: 28 37 5a 01              jump @13211
      :                          @8176
104850: 82 98 f8                 a1 = u64 [a2 + 0xfffffffffffffff8]
104853: 84 bb 01                 a4 = a4 & 0x1
104856: 7b 8b 10                 u64 [a1 + 0x10] = a4
104859: 3a 08 78 12 03           a1 = u64 [0x31278]
104864: 97 89 0d                 a2 = a1 << 0xd
104867: d3 98 08                 a1 = a1 ^ a2
104870: 98 8b 07                 a4 = a1 >> 0x7
104873: d3 8b 0b                 a4 = a4 ^ a1
104876: 97 b8 11                 a1 = a4 << 0x11
104879: d3 b8 08                 a1 = a1 ^ a4
104882: 3e 08 78 12 03           u64 [0x31278] = a1
104887: 82 18 30 01              a1 = u64 [sp + 0x130]
104891: ac 87 07                 jump @8178 if a0 <u a1
      :                          @8177
104894: 28 ce 5a 01              jump @13229
      :                          @8178
104898: 82 19 28 01              a2 = u64 [sp + 0x128]
104902: c8 c9 09                 a2 = a2 + a5
104905: 82 98                    a1 = u64 [a2]
104907: ae 48 07                 jump @8180 if a1 >=u t2
      :                          @8179
104910: 28 f6 59 01              jump @13210
      :                          @8180
104914: 82 98 f8                 a1 = u64 [a2 + 0xfffffffffffffff8]
104917: 84 bb 01                 a4 = a4 & 0x1
104920: 7b 8b 18                 u64 [a1 + 0x18] = a4
104923: 95 cc 18                 a5 = a5 + 0x18
104926: 95 77 01                 a0 = a0 + 0x1
104929: ab 6c fb fe              jump @8164 if a5 != s1
      :                          @8181
104933: 3a 08 78 12 03           a1 = u64 [0x31278]
104938: 97 89 0d                 a2 = a1 << 0xd
104941: d3 98 08                 a1 = a1 ^ a2
104944: 98 89 07                 a2 = a1 >> 0x7
104947: d3 98 08                 a1 = a1 ^ a2
104950: 3a 09 60 11 03           a2 = u64 [0x31160]
104955: 97 8a 11                 a3 = a1 << 0x11
104958: d3 a8 08                 a1 = a1 ^ a3
104961: ca 98 09                 a2 = a1 * a2
104964: 3e 08 78 12 03           u64 [0x31278] = a1
104969: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
104979: d6 79 07                 a0 = a2 mulhu a0
104982: 98 78 02                 a1 = a0 >> 0x2
104985: 84 77 fc                 a0 = a0 & 0xfffffffffffffffc
104988: c8 87 07                 a0 = a0 + a1
104991: bf 79 09                 i32 a2 = a2 - a0
104994: 83 99 01                 i32 a2 = a2 + 0x1
104997: 7a 19 c8 01              u32 [sp + 0x1c8] = a2
105001: 95 17 e0 01              a0 = sp + 0x1e0
105005: 95 18 20 01              a1 = sp + 0x120
105009: 95 16 e0 01              s1 = sp + 0x1e0
105013: 50 20 e6 04 c8 4c ff     ra = 1254, jump @4520
      :                          @8182 [@dyn 627]
105020: 95 17 c8 01              a0 = sp + 0x1c8
105024: 7b 17 38 02              u64 [sp + 0x238] = a0
105028: 33 07 62 0c              a0 = 0xc62
105032: 7b 17 40 02              u64 [sp + 0x240] = a0
105036: 7b 16 48 02              u64 [sp + 0x248] = s1
105040: 33 07 14 02              a0 = 0x214
105044: 7b 17 50 02              u64 [sp + 0x250] = a0
105048: 33 07 e0 07 01           a0 = 0x107e0
105053: 7b 17 90 02              u64 [sp + 0x290] = a0
105057: 49 21 98 02 02           u64 [sp + 664] = 0x2
105062: 49 21 b0 02              u64 [sp + 688] = 0
105066: 95 18 38 02              a1 = sp + 0x238
105070: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
105074: 49 21 a8 02 02           u64 [sp + 680] = 0x2
105079: 95 17 08 02              a0 = sp + 0x208
105083: 95 18 90 02              a1 = sp + 0x290
105087: 50 20 e8 04 7b b5 fe     ra = 1256, jump @1503
      :                          @8183 [@dyn 628]
105094: 82 16 10 02              s1 = u64 [sp + 0x210]
105098: 82 1b 18 02              a4 = u64 [sp + 0x218]
105102: 82 17 08 02              a0 = u64 [sp + 0x208]
105106: 7b 17 70                 u64 [sp + 0x70] = a0
105109: 33 07 02                 a0 = 0x2
105112: 33 08                    a1 = 0
105114: 33 09                    a2 = 0
105116: 64 6a                    a3 = s1
105118: 33 00 ea 04              ra = 0x4ea
105122: 0a 64                    ecalli 100 // 'log'
105124: 01                       fallthrough
      :                          @8184 [@dyn 629]
105125: 82 1c 70                 a5 = u64 [sp + 0x70]
105128: 82 17 68                 a0 = u64 [sp + 0x68]
105131: c8 c7 07                 a0 = a0 + a5
105134: 33 08 00 00 ff           a1 = 0xffffffffffff0000
105139: ac 87 2f                 jump @8190 if a0 <u a1
      :                          @8185
105142: 33 07 c0 22 03           a0 = 0x322c0
105147: 95 77 00 00 01           a0 = a0 + 0x10000
105152: 01                       fallthrough
      :                          @8186
105153: 82 78                    a1 = u64 [a0]
105155: c9 87 09                 a2 = a0 - a1
105158: ab 69 1c                 jump @8190 if a2 != s1
      :                          @8187
105161: c9 c8 09                 a2 = a1 - a5
105164: 01                       fallthrough
      :                          @8188
105165: 82 7a                    a3 = u64 [a0]
105167: ab 8a f2                 jump @8186 if a3 != a1
      :                          @8189
105170: 7b 79                    u64 [a0] = a2
105172: 33 0b                    a4 = 0
105174: 95 17 e0 01              a0 = sp + 0x1e0
105178: 33 00 ec 04              ra = 0x4ec
105182: 28 38 72 fe              jump @241
      :                          @8190
105186: 95 17 e0 01              a0 = sp + 0x1e0
105190: 50 20 ec 04 30 72 fe     ra = 1260, jump @241
      :                          @8191 [@dyn 630]
105197: 95 17 20 01              a0 = sp + 0x120
105201: 50 20 ee 04 25 72 fe     ra = 1262, jump @241
      :                          @8192 [@dyn 631]
105208: 28 8b 47 01              jump @12868
      :                          @8193 [@dyn 632]
105212: 95 17 90 02              a0 = sp + 0x290
105216: 33 08 06                 a1 = 0x6
105219: 50 20 f2 04 35 c9 fe     ra = 1266, jump @1882
      :                          @8194 [@dyn 633]
105226: 95 17 08 02              a0 = sp + 0x208
105230: 95 18 90 02              a1 = sp + 0x290
105234: 33 09 06                 a2 = 0x6
105237: 50 20 f4 04 6e ca fe     ra = 1268, jump @1907
      :                          @8195 [@dyn 634]
105244: 3a 07 78 12 03           a0 = u64 [0x31278]
105249: 97 79 0d                 a2 = a0 << 0xd
105252: d3 97 07                 a0 = a0 ^ a2
105255: 98 79 07                 a2 = a0 >> 0x7
105258: d3 97 07                 a0 = a0 ^ a2
105261: 97 79 11                 a2 = a0 << 0x11
105264: d3 79 09                 a2 = a2 ^ a0
105267: 3e 09 78 12 03           u64 [0x31278] = a2
105272: 82 1c 18 02              a5 = u64 [sp + 0x218]
105276: 52 0c 07                 jump @8197 if a5 != 0
      :                          @8196
105279: 28 55 59 01              jump @13237
      :                          @8197
105283: 82 1b 10 02              a4 = u64 [sp + 0x210]
105287: 82 b9 10                 a2 = u64 [a4 + 0x10]
105290: 56 19 01 08              jump @8199 if a2 >u 1
      :                          @8198
105294: 28 51 59 01              jump @13248
      :                          @8199
105298: 82 b8 08                 a1 = u64 [a4 + 0x8]
105301: 84 79 01                 a2 = a0 & 0x1
105304: 78 89 01                 u8 [a1 + 0x1] = a2
105307: 56 1c 01 08              jump @8201 if a5 >u 1
      :                          @8200
105311: 28 2d 59 01              jump @13229
      :                          @8201
105315: 82 b7 28                 a0 = u64 [a4 + 0x28]
105318: 52 07 07                 jump @8203 if a0 != 0
      :                          @8202
105321: 28 3a 59 01              jump @13252
      :                          @8203
105325: 82 b7 20                 a0 = u64 [a4 + 0x20]
105328: 78 79                    u8 [a0] = a2
105330: 3a 07 78 12 03           a0 = u64 [0x31278]
105335: 97 79 0d                 a2 = a0 << 0xd
105338: d3 97 07                 a0 = a0 ^ a2
105341: 98 79 07                 a2 = a0 >> 0x7
105344: d3 97 07                 a0 = a0 ^ a2
105347: 97 79 11                 a2 = a0 << 0x11
105350: d3 79 09                 a2 = a2 ^ a0
105353: 3e 09 78 12 03           u64 [0x31278] = a2
105358: 82 18 18 02              a1 = u64 [sp + 0x218]
105362: 52 08 07                 jump @8205 if a1 != 0
      :                          @8204
105365: 28 f6 58 01              jump @13228
      :                          @8205
105369: 82 1a 10 02              a3 = u64 [sp + 0x210]
105373: 82 a9 10                 a2 = u64 [a3 + 0x10]
105376: 55 19 03 08              jump @8207 if a2 >=u 3
      :                          @8206
105380: 28 07 59 01              jump @13260
      :                          @8207
105384: 82 a9 08                 a2 = u64 [a3 + 0x8]
105387: 84 77 01                 a0 = a0 & 0x1
105390: 78 97 02                 u8 [a2 + 0x2] = a0
105393: 55 18 03 08              jump @8209 if a1 >=u 3
      :                          @8208
105397: 28 10 58 01              jump @13211
      :                          @8209
105401: 82 a8 40                 a1 = u64 [a3 + 0x40]
105404: 52 08 07                 jump @8211 if a1 != 0
      :                          @8210
105407: 28 cc 58 01              jump @13228
      :                          @8211
105411: 82 a8 38                 a1 = u64 [a3 + 0x38]
105414: 78 87                    u8 [a1] = a0
105416: 3a 07 78 12 03           a0 = u64 [0x31278]
105421: 97 79 0d                 a2 = a0 << 0xd
105424: d3 97 07                 a0 = a0 ^ a2
105427: 98 79 07                 a2 = a0 >> 0x7
105430: d3 97 07                 a0 = a0 ^ a2
105433: 97 79 11                 a2 = a0 << 0x11
105436: d3 79 09                 a2 = a2 ^ a0
105439: 3e 09 78 12 03           u64 [0x31278] = a2
105444: 82 18 18 02              a1 = u64 [sp + 0x218]
105448: 52 08 07                 jump @8213 if a1 != 0
      :                          @8212
105451: 28 a0 58 01              jump @13228
      :                          @8213
105455: 82 1a 10 02              a3 = u64 [sp + 0x210]
105459: 82 a9 10                 a2 = u64 [a3 + 0x10]
105462: 55 19 04 08              jump @8215 if a2 >=u 4
      :                          @8214
105466: 28 a4 58 01              jump @13247
      :                          @8215
105470: 82 a9 08                 a2 = u64 [a3 + 0x8]
105473: 84 77 01                 a0 = a0 & 0x1
105476: 78 97 03                 u8 [a2 + 0x3] = a0
105479: 55 18 04 08              jump @8217 if a1 >=u 4
      :                          @8216
105483: 28 b9 57 01              jump @13210
      :                          @8217
105487: 82 a8 58                 a1 = u64 [a3 + 0x58]
105490: 52 08 07                 jump @8219 if a1 != 0
      :                          @8218
105493: 28 76 58 01              jump @13228
      :                          @8219
105497: 82 a8 50                 a1 = u64 [a3 + 0x50]
105500: 78 87                    u8 [a1] = a0
105502: 3a 07 78 12 03           a0 = u64 [0x31278]
105507: 97 79 0d                 a2 = a0 << 0xd
105510: d3 97 07                 a0 = a0 ^ a2
105513: 98 79 07                 a2 = a0 >> 0x7
105516: d3 97 07                 a0 = a0 ^ a2
105519: 97 79 11                 a2 = a0 << 0x11
105522: d3 79 09                 a2 = a2 ^ a0
105525: 3e 09 78 12 03           u64 [0x31278] = a2
105530: 82 18 18 02              a1 = u64 [sp + 0x218]
105534: 52 08 07                 jump @8221 if a1 != 0
      :                          @8220
105537: 28 4a 58 01              jump @13228
      :                          @8221
105541: 82 1a 10 02              a3 = u64 [sp + 0x210]
105545: 82 a9 10                 a2 = u64 [a3 + 0x10]
105548: 55 19 05 08              jump @8223 if a2 >=u 5
      :                          @8222
105552: 28 5c 58 01              jump @13261
      :                          @8223
105556: 82 a9 08                 a2 = u64 [a3 + 0x8]
105559: 84 77 01                 a0 = a0 & 0x1
105562: 78 97 04                 u8 [a2 + 0x4] = a0
105565: 55 18 05 08              jump @8225 if a1 >=u 5
      :                          @8224
105569: 28 2d 58 01              jump @13231
      :                          @8225
105573: 82 a8 70                 a1 = u64 [a3 + 0x70]
105576: 52 08 07                 jump @8227 if a1 != 0
      :                          @8226
105579: 28 20 58 01              jump @13228
      :                          @8227
105583: 82 a8 68                 a1 = u64 [a3 + 0x68]
105586: 78 87                    u8 [a1] = a0
105588: 3a 07 78 12 03           a0 = u64 [0x31278]
105593: 97 79 0d                 a2 = a0 << 0xd
105596: d3 97 07                 a0 = a0 ^ a2
105599: 98 79 07                 a2 = a0 >> 0x7
105602: d3 97 07                 a0 = a0 ^ a2
105605: 97 79 11                 a2 = a0 << 0x11
105608: d3 79 09                 a2 = a2 ^ a0
105611: 3e 09 78 12 03           u64 [0x31278] = a2
105616: 82 18 18 02              a1 = u64 [sp + 0x218]
105620: 52 08 07                 jump @8229 if a1 != 0
      :                          @8228
105623: 28 f4 57 01              jump @13228
      :                          @8229
105627: 82 1a 10 02              a3 = u64 [sp + 0x210]
105631: 82 a9 10                 a2 = u64 [a3 + 0x10]
105634: 55 19 06 08              jump @8231 if a2 >=u 6
      :                          @8230
105638: 28 0d 58 01              jump @13266
      :                          @8231
105642: 82 a9 08                 a2 = u64 [a3 + 0x8]
105645: 84 77 01                 a0 = a0 & 0x1
105648: 78 97 05                 u8 [a2 + 0x5] = a0
105651: 55 18 06 08              jump @8233 if a1 >=u 6
      :                          @8232
105655: 28 db 57 01              jump @13235
      :                          @8233
105659: 82 a8 88 00              a1 = u64 [a3 + 0x88]
105663: 52 08 07                 jump @8235 if a1 != 0
      :                          @8234
105666: 28 c9 57 01              jump @13228
      :                          @8235
105670: 82 a8 80 00              a1 = u64 [a3 + 0x80]
105674: 78 87                    u8 [a1] = a0
105676: 3a 07 78 12 03           a0 = u64 [0x31278]
105681: 97 79 0d                 a2 = a0 << 0xd
105684: d3 97 07                 a0 = a0 ^ a2
105687: 98 79 07                 a2 = a0 >> 0x7
105690: d3 97 07                 a0 = a0 ^ a2
105693: 97 79 11                 a2 = a0 << 0x11
105696: d3 79 09                 a2 = a2 ^ a0
105699: 3e 09 78 12 03           u64 [0x31278] = a2
105704: 82 18 18 02              a1 = u64 [sp + 0x218]
105708: 55 18 02 08              jump @8237 if a1 >=u 2
      :                          @8236
105712: 28 d3 56 01              jump @13209
      :                          @8237
105716: 82 1b 10 02              a4 = u64 [sp + 0x210]
105720: 82 b9 28                 a2 = u64 [a4 + 0x28]
105723: 33 0c 03                 a5 = 0x3
105726: ae c9 07                 jump @8239 if a2 >=u a5
      :                          @8238
105729: 28 9e 57 01              jump @13248
      :                          @8239
105733: 82 ba 20                 a3 = u64 [a4 + 0x20]
105736: 84 79 01                 a2 = a0 & 0x1
105739: 78 a9 02                 u8 [a3 + 0x2] = a2
105742: 55 18 03 08              jump @8241 if a1 >=u 3
      :                          @8240
105746: 28 97 57 01              jump @13258
      :                          @8241
105750: 82 b8 40                 a1 = u64 [a4 + 0x40]
105753: 55 18 02 08              jump @8243 if a1 >=u 2
      :                          @8242
105757: 28 a6 56 01              jump @13209
      :                          @8243
105761: 82 b8 38                 a1 = u64 [a4 + 0x38]
105764: 78 89 01                 u8 [a1 + 0x1] = a2
105767: 3a 09 78 12 03           a2 = u64 [0x31278]
105772: 97 9a 0d                 a3 = a2 << 0xd
105775: d3 a9 09                 a2 = a2 ^ a3
105778: 98 9a 07                 a3 = a2 >> 0x7
105781: d3 9a 0a                 a3 = a3 ^ a2
105784: 97 a9 11                 a2 = a3 << 0x11
105787: d3 a9 09                 a2 = a2 ^ a3
105790: 3e 09 78 12 03           u64 [0x31278] = a2
105795: 82 18 18 02              a1 = u64 [sp + 0x218]
105799: 55 18 02 08              jump @8245 if a1 >=u 2
      :                          @8244
105803: 28 4a 57 01              jump @13238
      :                          @8245
105807: 82 1b 10 02              a4 = u64 [sp + 0x210]
105811: 82 b9 28                 a2 = u64 [a4 + 0x28]
105814: 55 19 04 08              jump @8247 if a2 >=u 4
      :                          @8246
105818: 28 44 57 01              jump @13247
      :                          @8247
105822: 82 b9 20                 a2 = u64 [a4 + 0x20]
105825: 84 aa 01                 a3 = a3 & 0x1
105828: 78 9a 03                 u8 [a2 + 0x3] = a3
105831: 55 18 04 08              jump @8249 if a1 >=u 4
      :                          @8248
105835: 28 31 57 01              jump @13245
      :                          @8249
105839: 82 b8 58                 a1 = u64 [a4 + 0x58]
105842: 55 18 02 08              jump @8251 if a1 >=u 2
      :                          @8250
105846: 28 1f 57 01              jump @13238
      :                          @8251
105850: 82 b8 50                 a1 = u64 [a4 + 0x50]
105853: 78 8a 01                 u8 [a1 + 0x1] = a3
105856: 3a 09 78 12 03           a2 = u64 [0x31278]
105861: 97 9a 0d                 a3 = a2 << 0xd
105864: d3 a9 09                 a2 = a2 ^ a3
105867: 98 9a 07                 a3 = a2 >> 0x7
105870: d3 9a 0a                 a3 = a3 ^ a2
105873: 97 a9 11                 a2 = a3 << 0x11
105876: d3 a9 09                 a2 = a2 ^ a3
105879: 3e 09 78 12 03           u64 [0x31278] = a2
105884: 82 18 18 02              a1 = u64 [sp + 0x218]
105888: 55 18 02 08              jump @8253 if a1 >=u 2
      :                          @8252
105892: 28 f1 56 01              jump @13238
      :                          @8253
105896: 82 1b 10 02              a4 = u64 [sp + 0x210]
105900: 82 b9 28                 a2 = u64 [a4 + 0x28]
105903: 55 19 05 08              jump @8255 if a2 >=u 5
      :                          @8254
105907: 28 ed 56 01              jump @13249
      :                          @8255
105911: 82 b9 20                 a2 = u64 [a4 + 0x20]
105914: 84 aa 01                 a3 = a3 & 0x1
105917: 78 9a 04                 u8 [a2 + 0x4] = a3
105920: 55 18 05 08              jump @8257 if a1 >=u 5
      :                          @8256
105924: 28 d9 56 01              jump @13246
      :                          @8257
105928: 82 b8 70                 a1 = u64 [a4 + 0x70]
105931: 55 18 02 08              jump @8259 if a1 >=u 2
      :                          @8258
105935: 28 c6 56 01              jump @13238
      :                          @8259
105939: 82 b8 68                 a1 = u64 [a4 + 0x68]
105942: 78 8a 01                 u8 [a1 + 0x1] = a3
105945: 3a 09 78 12 03           a2 = u64 [0x31278]
105950: 97 9a 0d                 a3 = a2 << 0xd
105953: d3 a9 09                 a2 = a2 ^ a3
105956: 98 9a 07                 a3 = a2 >> 0x7
105959: d3 9a 0a                 a3 = a3 ^ a2
105962: 97 a9 11                 a2 = a3 << 0x11
105965: d3 a9 09                 a2 = a2 ^ a3
105968: 3e 09 78 12 03           u64 [0x31278] = a2
105973: 82 18 18 02              a1 = u64 [sp + 0x218]
105977: 55 18 02 08              jump @8261 if a1 >=u 2
      :                          @8260
105981: 28 98 56 01              jump @13238
      :                          @8261
105985: 82 1b 10 02              a4 = u64 [sp + 0x210]
105989: 82 b9 28                 a2 = u64 [a4 + 0x28]
105992: 55 19 06 08              jump @8263 if a2 >=u 6
      :                          @8262
105996: 28 95 56 01              jump @13250
      :                          @8263
106000: 82 b9 20                 a2 = u64 [a4 + 0x20]
106003: 84 aa 01                 a3 = a3 & 0x1
106006: 78 9a 05                 u8 [a2 + 0x5] = a3
106009: 55 18 06 08              jump @8265 if a1 >=u 6
      :                          @8264
106013: 28 85 56 01              jump @13251
      :                          @8265
106017: 82 b8 88 00              a1 = u64 [a4 + 0x88]
106021: 55 18 02 08              jump @8267 if a1 >=u 2
      :                          @8266
106025: 28 6c 56 01              jump @13238
      :                          @8267
106029: 82 b8 80 00              a1 = u64 [a4 + 0x80]
106033: 78 8a 01                 u8 [a1 + 0x1] = a3
106036: 3a 09 78 12 03           a2 = u64 [0x31278]
106041: 97 9a 0d                 a3 = a2 << 0xd
106044: d3 a9 09                 a2 = a2 ^ a3
106047: 98 9b 07                 a4 = a2 >> 0x7
106050: d3 9b 0b                 a4 = a4 ^ a2
106053: 97 b9 11                 a2 = a4 << 0x11
106056: d3 b9 09                 a2 = a2 ^ a4
106059: 3e 09 78 12 03           u64 [0x31278] = a2
106064: 82 18 18 02              a1 = u64 [sp + 0x218]
106068: 55 18 03 08              jump @8269 if a1 >=u 3
      :                          @8268
106072: 28 34 56 01              jump @13229
      :                          @8269
106076: 82 1c 10 02              a5 = u64 [sp + 0x210]
106080: 82 c9 40                 a2 = u64 [a5 + 0x40]
106083: 55 19 04 08              jump @8271 if a2 >=u 4
      :                          @8270
106087: 28 38 56 01              jump @13248
      :                          @8271
106091: 82 c9 38                 a2 = u64 [a5 + 0x38]
106094: 84 bb 01                 a4 = a4 & 0x1
106097: 78 9b 03                 u8 [a2 + 0x3] = a4
106100: 55 18 04 08              jump @8273 if a1 >=u 4
      :                          @8272
106104: 28 35 56 01              jump @13262
      :                          @8273
106108: 82 c8 58                 a1 = u64 [a5 + 0x58]
106111: 55 18 03 08              jump @8275 if a1 >=u 3
      :                          @8274
106115: 28 13 56 01              jump @13239
      :                          @8275
106119: 82 c8 50                 a1 = u64 [a5 + 0x50]
106122: 78 8b 02                 u8 [a1 + 0x2] = a4
106125: 3a 09 78 12 03           a2 = u64 [0x31278]
106130: 97 9a 0d                 a3 = a2 << 0xd
106133: d3 a9 09                 a2 = a2 ^ a3
106136: 98 9a 07                 a3 = a2 >> 0x7
106139: d3 9a 0a                 a3 = a3 ^ a2
106142: 97 a9 11                 a2 = a3 << 0x11
106145: d3 a9 09                 a2 = a2 ^ a3
106148: 3e 09 78 12 03           u64 [0x31278] = a2
106153: 82 18 18 02              a1 = u64 [sp + 0x218]
106157: 55 18 03 08              jump @8277 if a1 >=u 3
      :                          @8276
106161: 28 e5 55 01              jump @13239
      :                          @8277
106165: 82 1b 10 02              a4 = u64 [sp + 0x210]
106169: 82 b9 40                 a2 = u64 [a4 + 0x40]
106172: 55 19 05 08              jump @8279 if a2 >=u 5
      :                          @8278
106176: 28 e0 55 01              jump @13249
      :                          @8279
106180: 82 b9 38                 a2 = u64 [a4 + 0x38]
106183: 84 aa 01                 a3 = a3 & 0x1
106186: 78 9a 04                 u8 [a2 + 0x4] = a3
106189: 55 18 05 08              jump @8281 if a1 >=u 5
      :                          @8280
106193: 28 cc 55 01              jump @13246
      :                          @8281
106197: 82 b8 70                 a1 = u64 [a4 + 0x70]
106200: 55 18 03 08              jump @8283 if a1 >=u 3
      :                          @8282
106204: 28 ba 55 01              jump @13239
      :                          @8283
106208: 82 b8 68                 a1 = u64 [a4 + 0x68]
106211: 78 8a 02                 u8 [a1 + 0x2] = a3
106214: 3a 09 78 12 03           a2 = u64 [0x31278]
106219: 97 9a 0d                 a3 = a2 << 0xd
106222: d3 a9 09                 a2 = a2 ^ a3
106225: 98 9a 07                 a3 = a2 >> 0x7
106228: d3 9a 0a                 a3 = a3 ^ a2
106231: 97 a9 11                 a2 = a3 << 0x11
106234: d3 a9 09                 a2 = a2 ^ a3
106237: 3e 09 78 12 03           u64 [0x31278] = a2
106242: 82 18 18 02              a1 = u64 [sp + 0x218]
106246: 55 18 03 08              jump @8285 if a1 >=u 3
      :                          @8284
106250: 28 8c 55 01              jump @13239
      :                          @8285
106254: 82 1b 10 02              a4 = u64 [sp + 0x210]
106258: 82 b9 40                 a2 = u64 [a4 + 0x40]
106261: 55 19 06 08              jump @8287 if a2 >=u 6
      :                          @8286
106265: 28 88 55 01              jump @13250
      :                          @8287
106269: 82 b9 38                 a2 = u64 [a4 + 0x38]
106272: 84 aa 01                 a3 = a3 & 0x1
106275: 78 9a 05                 u8 [a2 + 0x5] = a3
106278: 55 18 06 08              jump @8289 if a1 >=u 6
      :                          @8288
106282: 28 78 55 01              jump @13251
      :                          @8289
106286: 82 b8 88 00              a1 = u64 [a4 + 0x88]
106290: 55 18 03 08              jump @8291 if a1 >=u 3
      :                          @8290
106294: 28 60 55 01              jump @13239
      :                          @8291
106298: 82 b8 80 00              a1 = u64 [a4 + 0x80]
106302: 78 8a 02                 u8 [a1 + 0x2] = a3
106305: 3a 09 78 12 03           a2 = u64 [0x31278]
106310: 97 9a 0d                 a3 = a2 << 0xd
106313: d3 a9 09                 a2 = a2 ^ a3
106316: 98 9b 07                 a4 = a2 >> 0x7
106319: d3 9b 0b                 a4 = a4 ^ a2
106322: 97 b9 11                 a2 = a4 << 0x11
106325: d3 b9 09                 a2 = a2 ^ a4
106328: 3e 09 78 12 03           u64 [0x31278] = a2
106333: 82 18 18 02              a1 = u64 [sp + 0x218]
106337: 55 18 04 08              jump @8293 if a1 >=u 4
      :                          @8292
106341: 28 27 55 01              jump @13229
      :                          @8293
106345: 82 1c 10 02              a5 = u64 [sp + 0x210]
106349: 82 c9 58                 a2 = u64 [a5 + 0x58]
106352: 55 19 05 08              jump @8295 if a2 >=u 5
      :                          @8294
106356: 28 2b 55 01              jump @13248
      :                          @8295
106360: 82 c9 50                 a2 = u64 [a5 + 0x50]
106363: 84 bb 01                 a4 = a4 & 0x1
106366: 78 9b 04                 u8 [a2 + 0x4] = a4
106369: 55 18 05 08              jump @8297 if a1 >=u 5
      :                          @8296
106373: 28 25 55 01              jump @13259
      :                          @8297
106377: 82 c8 70                 a1 = u64 [a5 + 0x70]
106380: 55 18 04 08              jump @8299 if a1 >=u 4
      :                          @8298
106384: 28 0c 55 01              jump @13245
      :                          @8299
106388: 82 c8 68                 a1 = u64 [a5 + 0x68]
106391: 78 8b 03                 u8 [a1 + 0x3] = a4
106394: 3a 09 78 12 03           a2 = u64 [0x31278]
106399: 97 9a 0d                 a3 = a2 << 0xd
106402: d3 a9 09                 a2 = a2 ^ a3
106405: 98 9a 07                 a3 = a2 >> 0x7
106408: d3 9a 0a                 a3 = a3 ^ a2
106411: 97 a9 11                 a2 = a3 << 0x11
106414: d3 a9 09                 a2 = a2 ^ a3
106417: 3e 09 78 12 03           u64 [0x31278] = a2
106422: 82 18 18 02              a1 = u64 [sp + 0x218]
106426: 55 18 04 08              jump @8301 if a1 >=u 4
      :                          @8300
106430: 28 de 54 01              jump @13245
      :                          @8301
106434: 82 1b 10 02              a4 = u64 [sp + 0x210]
106438: 82 b9 58                 a2 = u64 [a4 + 0x58]
106441: 55 19 06 08              jump @8303 if a2 >=u 6
      :                          @8302
106445: 28 d4 54 01              jump @13250
      :                          @8303
106449: 82 b9 50                 a2 = u64 [a4 + 0x50]
106452: 84 aa 01                 a3 = a3 & 0x1
106455: 78 9a 05                 u8 [a2 + 0x5] = a3
106458: 55 18 06 08              jump @8305 if a1 >=u 6
      :                          @8304
106462: 28 c4 54 01              jump @13251
      :                          @8305
106466: 82 b8 88 00              a1 = u64 [a4 + 0x88]
106470: 55 18 04 08              jump @8307 if a1 >=u 4
      :                          @8306
106474: 28 b2 54 01              jump @13245
      :                          @8307
106478: 82 b8 80 00              a1 = u64 [a4 + 0x80]
106482: 78 8a 03                 u8 [a1 + 0x3] = a3
106485: 3a 09 78 12 03           a2 = u64 [0x31278]
106490: 97 9a 0d                 a3 = a2 << 0xd
106493: d3 a9 09                 a2 = a2 ^ a3
106496: 98 9b 07                 a4 = a2 >> 0x7
106499: d3 9b 0b                 a4 = a4 ^ a2
106502: 97 b9 11                 a2 = a4 << 0x11
106505: d3 b9 09                 a2 = a2 ^ a4
106508: 3e 09 78 12 03           u64 [0x31278] = a2
106513: 82 18 18 02              a1 = u64 [sp + 0x218]
106517: 55 18 05 08              jump @8309 if a1 >=u 5
      :                          @8308
106521: 28 73 54 01              jump @13229
      :                          @8309
106525: 82 17 10 02              a0 = u64 [sp + 0x210]
106529: 82 79 70                 a2 = u64 [a0 + 0x70]
106532: 55 19 06 08              jump @8311 if a2 >=u 6
      :                          @8310
106536: 28 77 54 01              jump @13248
      :                          @8311
106540: 82 79 68                 a2 = u64 [a0 + 0x68]
106543: 84 bb 01                 a4 = a4 & 0x1
106546: 78 9b 05                 u8 [a2 + 0x5] = a4
106549: 55 18 06 08              jump @8313 if a1 >=u 6
      :                          @8312
106553: 28 7c 54 01              jump @13268
      :                          @8313
106557: 82 78 88 00              a1 = u64 [a0 + 0x88]
106561: 55 18 05 08              jump @8315 if a1 >=u 5
      :                          @8314
106565: 28 58 54 01              jump @13246
      :                          @8315
106569: 82 77 80 00              a0 = u64 [a0 + 0x80]
106573: 78 7b 04                 u8 [a0 + 0x4] = a4
106576: 95 17 08 02              a0 = sp + 0x208
106580: 50 20 f6 04 d7 4a ff     ra = 1270, jump @4624
      :                          @8316 [@dyn 635]
106587: 7b 17 20 01              u64 [sp + 0x120] = a0
106591: 95 17 20 01              a0 = sp + 0x120
106595: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
106599: 33 07 2c 0c              a0 = 0xc2c
106603: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
106607: 33 07 18 08 01           a0 = 0x10818
106612: 7b 17 90 02              u64 [sp + 0x290] = a0
106616: 49 21 98 02 01           u64 [sp + 664] = 0x1
106621: 49 21 b0 02              u64 [sp + 688] = 0
106625: 95 18 e0 01              a1 = sp + 0x1e0
106629: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
106633: 49 21 a8 02 01           u64 [sp + 680] = 0x1
106638: 95 17 38 02              a0 = sp + 0x238
106642: 95 18 90 02              a1 = sp + 0x290
106646: 50 20 f8 04 64 af fe     ra = 1272, jump @1503
      :                          @8317 [@dyn 636]
106653: 82 16 40 02              s1 = u64 [sp + 0x240]
106657: 82 1b 48 02              a4 = u64 [sp + 0x248]
106661: 82 17 38 02              a0 = u64 [sp + 0x238]
106665: 7b 17 70                 u64 [sp + 0x70] = a0
106668: 33 07 02                 a0 = 0x2
106671: 33 08                    a1 = 0
106673: 33 09                    a2 = 0
106675: 64 6a                    a3 = s1
106677: 33 00 fa 04              ra = 0x4fa
106681: 0a 64                    ecalli 100 // 'log'
106683: 01                       fallthrough
      :                          @8318 [@dyn 637]
106684: 82 1c 70                 a5 = u64 [sp + 0x70]
106687: 82 17 68                 a0 = u64 [sp + 0x68]
106690: c8 c7 07                 a0 = a0 + a5
106693: 33 08 00 00 ff           a1 = 0xffffffffffff0000
106698: ae 87 07                 jump @8320 if a0 >=u a1
      :                          @8319
106701: 28 ab 41 01              jump @12867
      :                          @8320
106705: 33 07 c0 22 03           a0 = 0x322c0
106710: 95 77 00 00 01           a0 = a0 + 0x10000
106715: 01                       fallthrough
      :                          @8321
106716: 82 78                    a1 = u64 [a0]
106718: c9 87 09                 a2 = a0 - a1
106721: aa 69 07                 jump @8323 if a2 == s1
      :                          @8322
106724: 28 94 41 01              jump @12867
      :                          @8323
106728: c9 c8 09                 a2 = a1 - a5
106731: 01                       fallthrough
      :                          @8324
106732: 82 7a                    a3 = u64 [a0]
106734: ab 8a ee                 jump @8321 if a3 != a1
      :                          @8325
106737: 7b 79                    u64 [a0] = a2
106739: 33 0b                    a4 = 0
106741: 01                       fallthrough
      :                          @8326
106742: ab 8a e6                 jump @8321 if a3 != a1
      :                          @8327
106745: 28 7f 41 01              jump @12867
      :                          @8328 [@dyn 638]
106749: 95 17 90 02              a0 = sp + 0x290
106753: 33 08 05                 a1 = 0x5
106756: 50 20 fe 04 34 c3 fe     ra = 1278, jump @1882
      :                          @8329 [@dyn 639]
106763: 95 17 e0 01              a0 = sp + 0x1e0
106767: 95 18 90 02              a1 = sp + 0x290
106771: 33 09 05                 a2 = 0x5
106774: 50 20 00 05 6d c4 fe     ra = 1280, jump @1907
      :                          @8330 [@dyn 640]
106781: 3a 07 78 12 03           a0 = u64 [0x31278]
106786: 97 79 0d                 a2 = a0 << 0xd
106789: d3 97 07                 a0 = a0 ^ a2
106792: 98 79 07                 a2 = a0 >> 0x7
106795: d3 97 07                 a0 = a0 ^ a2
106798: 97 79 11                 a2 = a0 << 0x11
106801: d3 79 09                 a2 = a2 ^ a0
106804: 3e 09 78 12 03           u64 [0x31278] = a2
106809: 82 1c f0 01              a5 = u64 [sp + 0x1f0]
106813: 52 0c 07                 jump @8332 if a5 != 0
      :                          @8331
106816: 28 54 53 01              jump @13237
      :                          @8332
106820: 82 1b e8 01              a4 = u64 [sp + 0x1e8]
106824: 82 b9 10                 a2 = u64 [a4 + 0x10]
106827: 56 19 01 08              jump @8334 if a2 >u 1
      :                          @8333
106831: 28 50 53 01              jump @13248
      :                          @8334
106835: 82 b8 08                 a1 = u64 [a4 + 0x8]
106838: 84 79 01                 a2 = a0 & 0x1
106841: 78 89 01                 u8 [a1 + 0x1] = a2
106844: 56 1c 01 08              jump @8336 if a5 >u 1
      :                          @8335
106848: 28 2c 53 01              jump @13229
      :                          @8336
106852: 82 b7 28                 a0 = u64 [a4 + 0x28]
106855: 52 07 07                 jump @8338 if a0 != 0
      :                          @8337
106858: 28 39 53 01              jump @13252
      :                          @8338
106862: 82 b7 20                 a0 = u64 [a4 + 0x20]
106865: 78 79                    u8 [a0] = a2
106867: 3a 07 78 12 03           a0 = u64 [0x31278]
106872: 97 79 0d                 a2 = a0 << 0xd
106875: d3 97 07                 a0 = a0 ^ a2
106878: 98 79 07                 a2 = a0 >> 0x7
106881: d3 97 07                 a0 = a0 ^ a2
106884: 97 79 11                 a2 = a0 << 0x11
106887: d3 79 09                 a2 = a2 ^ a0
106890: 3e 09 78 12 03           u64 [0x31278] = a2
106895: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
106899: 52 08 07                 jump @8340 if a1 != 0
      :                          @8339
106902: 28 f5 52 01              jump @13228
      :                          @8340
106906: 82 1a e8 01              a3 = u64 [sp + 0x1e8]
106910: 82 a9 10                 a2 = u64 [a3 + 0x10]
106913: 55 19 03 08              jump @8342 if a2 >=u 3
      :                          @8341
106917: 28 06 53 01              jump @13260
      :                          @8342
106921: 82 a9 08                 a2 = u64 [a3 + 0x8]
106924: 84 77 01                 a0 = a0 & 0x1
106927: 78 97 02                 u8 [a2 + 0x2] = a0
106930: 55 18 03 08              jump @8344 if a1 >=u 3
      :                          @8343
106934: 28 0f 52 01              jump @13211
      :                          @8344
106938: 82 a8 40                 a1 = u64 [a3 + 0x40]
106941: 52 08 07                 jump @8346 if a1 != 0
      :                          @8345
106944: 28 cb 52 01              jump @13228
      :                          @8346
106948: 82 a8 38                 a1 = u64 [a3 + 0x38]
106951: 78 87                    u8 [a1] = a0
106953: 3a 07 78 12 03           a0 = u64 [0x31278]
106958: 97 79 0d                 a2 = a0 << 0xd
106961: d3 97 07                 a0 = a0 ^ a2
106964: 98 79 07                 a2 = a0 >> 0x7
106967: d3 97 07                 a0 = a0 ^ a2
106970: 97 79 11                 a2 = a0 << 0x11
106973: d3 79 09                 a2 = a2 ^ a0
106976: 3e 09 78 12 03           u64 [0x31278] = a2
106981: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
106985: 52 08 07                 jump @8348 if a1 != 0
      :                          @8347
106988: 28 9f 52 01              jump @13228
      :                          @8348
106992: 82 1a e8 01              a3 = u64 [sp + 0x1e8]
106996: 82 a9 10                 a2 = u64 [a3 + 0x10]
106999: 55 19 04 08              jump @8350 if a2 >=u 4
      :                          @8349
107003: 28 a3 52 01              jump @13247
      :                          @8350
107007: 82 a9 08                 a2 = u64 [a3 + 0x8]
107010: 84 77 01                 a0 = a0 & 0x1
107013: 78 97 03                 u8 [a2 + 0x3] = a0
107016: 55 18 04 08              jump @8352 if a1 >=u 4
      :                          @8351
107020: 28 b8 51 01              jump @13210
      :                          @8352
107024: 82 a8 58                 a1 = u64 [a3 + 0x58]
107027: 52 08 07                 jump @8354 if a1 != 0
      :                          @8353
107030: 28 75 52 01              jump @13228
      :                          @8354
107034: 82 a8 50                 a1 = u64 [a3 + 0x50]
107037: 78 87                    u8 [a1] = a0
107039: 3a 07 78 12 03           a0 = u64 [0x31278]
107044: 97 79 0d                 a2 = a0 << 0xd
107047: d3 97 07                 a0 = a0 ^ a2
107050: 98 79 07                 a2 = a0 >> 0x7
107053: d3 97 07                 a0 = a0 ^ a2
107056: 97 79 11                 a2 = a0 << 0x11
107059: d3 79 09                 a2 = a2 ^ a0
107062: 3e 09 78 12 03           u64 [0x31278] = a2
107067: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
107071: 52 08 07                 jump @8356 if a1 != 0
      :                          @8355
107074: 28 49 52 01              jump @13228
      :                          @8356
107078: 82 1a e8 01              a3 = u64 [sp + 0x1e8]
107082: 82 a9 10                 a2 = u64 [a3 + 0x10]
107085: 55 19 05 08              jump @8358 if a2 >=u 5
      :                          @8357
107089: 28 5b 52 01              jump @13261
      :                          @8358
107093: 82 a9 08                 a2 = u64 [a3 + 0x8]
107096: 84 77 01                 a0 = a0 & 0x1
107099: 78 97 04                 u8 [a2 + 0x4] = a0
107102: 55 18 05 08              jump @8360 if a1 >=u 5
      :                          @8359
107106: 28 2c 52 01              jump @13231
      :                          @8360
107110: 82 a8 70                 a1 = u64 [a3 + 0x70]
107113: 52 08 07                 jump @8362 if a1 != 0
      :                          @8361
107116: 28 1f 52 01              jump @13228
      :                          @8362
107120: 82 a8 68                 a1 = u64 [a3 + 0x68]
107123: 78 87                    u8 [a1] = a0
107125: 3a 07 78 12 03           a0 = u64 [0x31278]
107130: 97 79 0d                 a2 = a0 << 0xd
107133: d3 97 07                 a0 = a0 ^ a2
107136: 98 79 07                 a2 = a0 >> 0x7
107139: d3 97 07                 a0 = a0 ^ a2
107142: 97 79 11                 a2 = a0 << 0x11
107145: d3 79 09                 a2 = a2 ^ a0
107148: 3e 09 78 12 03           u64 [0x31278] = a2
107153: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
107157: 55 18 02 08              jump @8364 if a1 >=u 2
      :                          @8363
107161: 28 2a 51 01              jump @13209
      :                          @8364
107165: 82 1b e8 01              a4 = u64 [sp + 0x1e8]
107169: 82 b9 28                 a2 = u64 [a4 + 0x28]
107172: 55 19 03 08              jump @8366 if a2 >=u 3
      :                          @8365
107176: 28 f7 51 01              jump @13248
      :                          @8366
107180: 82 ba 20                 a3 = u64 [a4 + 0x20]
107183: 84 79 01                 a2 = a0 & 0x1
107186: 78 a9 02                 u8 [a3 + 0x2] = a2
107189: 55 18 03 08              jump @8368 if a1 >=u 3
      :                          @8367
107193: 28 f0 51 01              jump @13258
      :                          @8368
107197: 82 b8 40                 a1 = u64 [a4 + 0x40]
107200: 55 18 02 08              jump @8370 if a1 >=u 2
      :                          @8369
107204: 28 ff 50 01              jump @13209
      :                          @8370
107208: 82 b8 38                 a1 = u64 [a4 + 0x38]
107211: 78 89 01                 u8 [a1 + 0x1] = a2
107214: 3a 09 78 12 03           a2 = u64 [0x31278]
107219: 97 9a 0d                 a3 = a2 << 0xd
107222: d3 a9 09                 a2 = a2 ^ a3
107225: 98 9a 07                 a3 = a2 >> 0x7
107228: d3 9a 0a                 a3 = a3 ^ a2
107231: 97 a9 11                 a2 = a3 << 0x11
107234: d3 a9 09                 a2 = a2 ^ a3
107237: 3e 09 78 12 03           u64 [0x31278] = a2
107242: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
107246: 55 18 02 08              jump @8372 if a1 >=u 2
      :                          @8371
107250: 28 d1 50 01              jump @13209
      :                          @8372
107254: 82 1b e8 01              a4 = u64 [sp + 0x1e8]
107258: 82 b9 28                 a2 = u64 [a4 + 0x28]
107261: 55 19 04 08              jump @8374 if a2 >=u 4
      :                          @8373
107265: 28 9d 51 01              jump @13247
      :                          @8374
107269: 82 b9 20                 a2 = u64 [a4 + 0x20]
107272: 84 aa 01                 a3 = a3 & 0x1
107275: 78 9a 03                 u8 [a2 + 0x3] = a3
107278: 55 18 04 08              jump @8376 if a1 >=u 4
      :                          @8375
107282: 28 b2 50 01              jump @13210
      :                          @8376
107286: 82 b8 58                 a1 = u64 [a4 + 0x58]
107289: 55 18 02 08              jump @8378 if a1 >=u 2
      :                          @8377
107293: 28 a6 50 01              jump @13209
      :                          @8378
107297: 82 b8 50                 a1 = u64 [a4 + 0x50]
107300: 78 8a 01                 u8 [a1 + 0x1] = a3
107303: 3a 09 78 12 03           a2 = u64 [0x31278]
107308: 97 9a 0d                 a3 = a2 << 0xd
107311: d3 a9 09                 a2 = a2 ^ a3
107314: 98 9a 07                 a3 = a2 >> 0x7
107317: d3 9a 0a                 a3 = a3 ^ a2
107320: 97 a9 11                 a2 = a3 << 0x11
107323: d3 a9 09                 a2 = a2 ^ a3
107326: 3e 09 78 12 03           u64 [0x31278] = a2
107331: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
107335: 55 18 02 08              jump @8380 if a1 >=u 2
      :                          @8379
107339: 28 4a 51 01              jump @13238
      :                          @8380
107343: 82 1b e8 01              a4 = u64 [sp + 0x1e8]
107347: 82 b9 28                 a2 = u64 [a4 + 0x28]
107350: 55 19 05 08              jump @8382 if a2 >=u 5
      :                          @8381
107354: 28 46 51 01              jump @13249
      :                          @8382
107358: 82 b9 20                 a2 = u64 [a4 + 0x20]
107361: 84 aa 01                 a3 = a3 & 0x1
107364: 78 9a 04                 u8 [a2 + 0x4] = a3
107367: 55 18 05 08              jump @8384 if a1 >=u 5
      :                          @8383
107371: 28 32 51 01              jump @13246
      :                          @8384
107375: 82 b8 70                 a1 = u64 [a4 + 0x70]
107378: 55 18 02 08              jump @8386 if a1 >=u 2
      :                          @8385
107382: 28 1f 51 01              jump @13238
      :                          @8386
107386: 82 b8 68                 a1 = u64 [a4 + 0x68]
107389: 78 8a 01                 u8 [a1 + 0x1] = a3
107392: 3a 09 78 12 03           a2 = u64 [0x31278]
107397: 97 9a 0d                 a3 = a2 << 0xd
107400: d3 a9 09                 a2 = a2 ^ a3
107403: 98 9b 07                 a4 = a2 >> 0x7
107406: d3 9b 0b                 a4 = a4 ^ a2
107409: 97 b9 11                 a2 = a4 << 0x11
107412: d3 b9 09                 a2 = a2 ^ a4
107415: 3e 09 78 12 03           u64 [0x31278] = a2
107420: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
107424: 55 18 03 08              jump @8388 if a1 >=u 3
      :                          @8387
107428: 28 e8 50 01              jump @13229
      :                          @8388
107432: 82 1c e8 01              a5 = u64 [sp + 0x1e8]
107436: 82 c9 40                 a2 = u64 [a5 + 0x40]
107439: 55 19 04 08              jump @8390 if a2 >=u 4
      :                          @8389
107443: 28 ec 50 01              jump @13248
      :                          @8390
107447: 82 c9 38                 a2 = u64 [a5 + 0x38]
107450: 84 bb 01                 a4 = a4 & 0x1
107453: 78 9b 03                 u8 [a2 + 0x3] = a4
107456: 55 18 04 08              jump @8392 if a1 >=u 4
      :                          @8391
107460: 28 e9 50 01              jump @13262
      :                          @8392
107464: 82 c8 58                 a1 = u64 [a5 + 0x58]
107467: 55 18 03 08              jump @8394 if a1 >=u 3
      :                          @8393
107471: 28 c7 50 01              jump @13239
      :                          @8394
107475: 82 c8 50                 a1 = u64 [a5 + 0x50]
107478: 78 8b 02                 u8 [a1 + 0x2] = a4
107481: 3a 09 78 12 03           a2 = u64 [0x31278]
107486: 97 9a 0d                 a3 = a2 << 0xd
107489: d3 a9 09                 a2 = a2 ^ a3
107492: 98 9a 07                 a3 = a2 >> 0x7
107495: d3 9a 0a                 a3 = a3 ^ a2
107498: 97 a9 11                 a2 = a3 << 0x11
107501: d3 a9 09                 a2 = a2 ^ a3
107504: 3e 09 78 12 03           u64 [0x31278] = a2
107509: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
107513: 55 18 03 08              jump @8396 if a1 >=u 3
      :                          @8395
107517: 28 99 50 01              jump @13239
      :                          @8396
107521: 82 1b e8 01              a4 = u64 [sp + 0x1e8]
107525: 82 b9 40                 a2 = u64 [a4 + 0x40]
107528: 55 19 05 08              jump @8398 if a2 >=u 5
      :                          @8397
107532: 28 94 50 01              jump @13249
      :                          @8398
107536: 82 b9 38                 a2 = u64 [a4 + 0x38]
107539: 84 aa 01                 a3 = a3 & 0x1
107542: 78 9a 04                 u8 [a2 + 0x4] = a3
107545: 55 18 05 08              jump @8400 if a1 >=u 5
      :                          @8399
107549: 28 80 50 01              jump @13246
      :                          @8400
107553: 82 b8 70                 a1 = u64 [a4 + 0x70]
107556: 55 18 03 08              jump @8402 if a1 >=u 3
      :                          @8401
107560: 28 6e 50 01              jump @13239
      :                          @8402
107564: 82 b8 68                 a1 = u64 [a4 + 0x68]
107567: 78 8a 02                 u8 [a1 + 0x2] = a3
107570: 3a 09 78 12 03           a2 = u64 [0x31278]
107575: 97 9a 0d                 a3 = a2 << 0xd
107578: d3 a9 09                 a2 = a2 ^ a3
107581: 98 9b 07                 a4 = a2 >> 0x7
107584: d3 9b 0b                 a4 = a4 ^ a2
107587: 97 b9 11                 a2 = a4 << 0x11
107590: d3 b9 09                 a2 = a2 ^ a4
107593: 3e 09 78 12 03           u64 [0x31278] = a2
107598: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
107602: 33 0a 04                 a3 = 0x4
107605: ae a8 07                 jump @8404 if a1 >=u a3
      :                          @8403
107608: 28 34 50 01              jump @13229
      :                          @8404
107612: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
107616: 82 79 58                 a2 = u64 [a0 + 0x58]
107619: 33 0c 05                 a5 = 0x5
107622: ae c9 07                 jump @8406 if a2 >=u a5
      :                          @8405
107625: 28 36 50 01              jump @13248
      :                          @8406
107629: 82 79 50                 a2 = u64 [a0 + 0x50]
107632: 84 bb 01                 a4 = a4 & 0x1
107635: 78 9b 04                 u8 [a2 + 0x4] = a4
107638: 55 18 05 08              jump @8408 if a1 >=u 5
      :                          @8407
107642: 28 30 50 01              jump @13259
      :                          @8408
107646: 82 78 70                 a1 = u64 [a0 + 0x70]
107649: 55 18 04 08              jump @8410 if a1 >=u 4
      :                          @8409
107653: 28 17 50 01              jump @13245
      :                          @8410
107657: 82 77 68                 a0 = u64 [a0 + 0x68]
107660: 78 7b 03                 u8 [a0 + 0x3] = a4
107663: 3a 08 78 12 03           a1 = u64 [0x31278]
107668: 97 89 0d                 a2 = a1 << 0xd
107671: d3 98 08                 a1 = a1 ^ a2
107674: 98 89 07                 a2 = a1 >> 0x7
107677: d3 98 08                 a1 = a1 ^ a2
107680: 97 89 11                 a2 = a1 << 0x11
107683: d3 89 09                 a2 = a2 ^ a1
107686: 3e 09 78 12 03           u64 [0x31278] = a2
107691: 84 88 03                 a1 = a1 & 0x3
107694: 95 88 01                 a1 = a1 + 0x1
107697: 7a 18 c8 01              u32 [sp + 0x1c8] = a1
107701: 95 17 e0 01              a0 = sp + 0x1e0
107705: 50 20 02 05 b7 47 ff     ra = 1282, jump @4653
      :                          @8411 [@dyn 641]
107712: 7b 17 20 01              u64 [sp + 0x120] = a0
107716: 95 17 c8 01              a0 = sp + 0x1c8
107720: 7b 17 38 02              u64 [sp + 0x238] = a0
107724: 33 07 62 0c              a0 = 0xc62
107728: 7b 17 40 02              u64 [sp + 0x240] = a0
107732: 95 17 20 01              a0 = sp + 0x120
107736: 7b 17 48 02              u64 [sp + 0x248] = a0
107740: 33 07 2c 0c              a0 = 0xc2c
107744: 7b 17 50 02              u64 [sp + 0x250] = a0
107748: 33 07 40 08 01           a0 = 0x10840
107753: 7b 17 90 02              u64 [sp + 0x290] = a0
107757: 49 21 98 02 02           u64 [sp + 664] = 0x2
107762: 49 21 b0 02              u64 [sp + 688] = 0
107766: 95 18 38 02              a1 = sp + 0x238
107770: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
107774: 49 21 a8 02 02           u64 [sp + 680] = 0x2
107779: 95 17 08 02              a0 = sp + 0x208
107783: 95 18 90 02              a1 = sp + 0x290
107787: 50 20 04 05 ef aa fe     ra = 1284, jump @1503
      :                          @8412 [@dyn 642]
107794: 82 16 10 02              s1 = u64 [sp + 0x210]
107798: 82 1b 18 02              a4 = u64 [sp + 0x218]
107802: 82 17 08 02              a0 = u64 [sp + 0x208]
107806: 7b 17 70                 u64 [sp + 0x70] = a0
107809: 33 07 02                 a0 = 0x2
107812: 33 08                    a1 = 0
107814: 33 09                    a2 = 0
107816: 64 6a                    a3 = s1
107818: 33 00 06 05              ra = 0x506
107822: 0a 64                    ecalli 100 // 'log'
107824: 01                       fallthrough
      :                          @8413 [@dyn 643]
107825: 82 1c 70                 a5 = u64 [sp + 0x70]
107828: 82 17 68                 a0 = u64 [sp + 0x68]
107831: c8 c7 07                 a0 = a0 + a5
107834: 33 08 00 00 ff           a1 = 0xffffffffffff0000
107839: ae 87 07                 jump @8415 if a0 >=u a1
      :                          @8414
107842: 28 6d 88 00              jump @10545
      :                          @8415
107846: 33 07 c0 22 03           a0 = 0x322c0
107851: 95 77 00 00 01           a0 = a0 + 0x10000
107856: 01                       fallthrough
      :                          @8416
107857: 82 78                    a1 = u64 [a0]
107859: c9 87 09                 a2 = a0 - a1
107862: aa 69 07                 jump @8418 if a2 == s1
      :                          @8417
107865: 28 56 88 00              jump @10545
      :                          @8418
107869: c9 c8 09                 a2 = a1 - a5
107872: 01                       fallthrough
      :                          @8419
107873: 82 7a                    a3 = u64 [a0]
107875: ab 8a ee                 jump @8416 if a3 != a1
      :                          @8420
107878: 7b 79                    u64 [a0] = a2
107880: 33 0b                    a4 = 0
107882: 01                       fallthrough
      :                          @8421
107883: ab 8a e6                 jump @8416 if a3 != a1
      :                          @8422
107886: 28 41 88 00              jump @10545
      :                          @8423 [@dyn 644]
107890: 95 17 90 02              a0 = sp + 0x290
107894: 33 09 05                 a2 = 0x5
107897: 33 08                    a1 = 0
107899: 50 20 0a 05 29 bf fe     ra = 1290, jump @1889
      :                          @8424 [@dyn 645]
107906: 95 17 08 02              a0 = sp + 0x208
107910: 95 18 90 02              a1 = sp + 0x290
107914: 33 09 05                 a2 = 0x5
107917: 50 20 0c 05 64 b4 fe     ra = 1292, jump @1721
      :                          @8425 [@dyn 646]
107924: 3a 07 78 12 03           a0 = u64 [0x31278]
107929: 97 79 0d                 a2 = a0 << 0xd
107932: d3 97 07                 a0 = a0 ^ a2
107935: 98 79 07                 a2 = a0 >> 0x7
107938: d3 97 07                 a0 = a0 ^ a2
107941: 97 79 11                 a2 = a0 << 0x11
107944: d3 79 09                 a2 = a2 ^ a0
107947: 3e 09 78 12 03           u64 [0x31278] = a2
107952: 82 1c 18 02              a5 = u64 [sp + 0x218]
107956: 52 0c 07                 jump @8427 if a5 != 0
      :                          @8426
107959: 28 dd 4e 01              jump @13237
      :                          @8427
107963: 82 1b 10 02              a4 = u64 [sp + 0x210]
107967: 82 b9 10                 a2 = u64 [a4 + 0x10]
107970: 56 19 01 08              jump @8429 if a2 >u 1
      :                          @8428
107974: 28 d9 4e 01              jump @13248
      :                          @8429
107978: 82 b8 08                 a1 = u64 [a4 + 0x8]
107981: 84 79 01                 a2 = a0 & 0x1
107984: 7b 89 08                 u64 [a1 + 0x8] = a2
107987: 56 1c 01 08              jump @8431 if a5 >u 1
      :                          @8430
107991: 28 b5 4e 01              jump @13229
      :                          @8431
107995: 82 b7 28                 a0 = u64 [a4 + 0x28]
107998: 52 07 07                 jump @8433 if a0 != 0
      :                          @8432
108001: 28 c2 4e 01              jump @13252
      :                          @8433
108005: 82 b7 20                 a0 = u64 [a4 + 0x20]
108008: 7b 79                    u64 [a0] = a2
108010: 3a 07 78 12 03           a0 = u64 [0x31278]
108015: 97 79 0d                 a2 = a0 << 0xd
108018: d3 97 07                 a0 = a0 ^ a2
108021: 98 79 07                 a2 = a0 >> 0x7
108024: d3 97 07                 a0 = a0 ^ a2
108027: 97 79 11                 a2 = a0 << 0x11
108030: d3 79 09                 a2 = a2 ^ a0
108033: 3e 09 78 12 03           u64 [0x31278] = a2
108038: 82 18 18 02              a1 = u64 [sp + 0x218]
108042: 52 08 07                 jump @8435 if a1 != 0
      :                          @8434
108045: 28 7e 4e 01              jump @13228
      :                          @8435
108049: 82 1a 10 02              a3 = u64 [sp + 0x210]
108053: 82 a9 10                 a2 = u64 [a3 + 0x10]
108056: 55 19 03 08              jump @8437 if a2 >=u 3
      :                          @8436
108060: 28 8f 4e 01              jump @13260
      :                          @8437
108064: 82 a9 08                 a2 = u64 [a3 + 0x8]
108067: 84 77 01                 a0 = a0 & 0x1
108070: 7b 97 10                 u64 [a2 + 0x10] = a0
108073: 55 18 03 08              jump @8439 if a1 >=u 3
      :                          @8438
108077: 28 98 4d 01              jump @13211
      :                          @8439
108081: 82 a8 40                 a1 = u64 [a3 + 0x40]
108084: 52 08 07                 jump @8441 if a1 != 0
      :                          @8440
108087: 28 54 4e 01              jump @13228
      :                          @8441
108091: 82 a8 38                 a1 = u64 [a3 + 0x38]
108094: 7b 87                    u64 [a1] = a0
108096: 3a 07 78 12 03           a0 = u64 [0x31278]
108101: 97 79 0d                 a2 = a0 << 0xd
108104: d3 97 07                 a0 = a0 ^ a2
108107: 98 79 07                 a2 = a0 >> 0x7
108110: d3 97 07                 a0 = a0 ^ a2
108113: 97 79 11                 a2 = a0 << 0x11
108116: d3 79 09                 a2 = a2 ^ a0
108119: 3e 09 78 12 03           u64 [0x31278] = a2
108124: 82 18 18 02              a1 = u64 [sp + 0x218]
108128: 52 08 07                 jump @8443 if a1 != 0
      :                          @8442
108131: 28 28 4e 01              jump @13228
      :                          @8443
108135: 82 1a 10 02              a3 = u64 [sp + 0x210]
108139: 82 a9 10                 a2 = u64 [a3 + 0x10]
108142: 55 19 04 08              jump @8445 if a2 >=u 4
      :                          @8444
108146: 28 2c 4e 01              jump @13247
      :                          @8445
108150: 82 a9 08                 a2 = u64 [a3 + 0x8]
108153: 84 77 01                 a0 = a0 & 0x1
108156: 7b 97 18                 u64 [a2 + 0x18] = a0
108159: 55 18 04 08              jump @8447 if a1 >=u 4
      :                          @8446
108163: 28 41 4d 01              jump @13210
      :                          @8447
108167: 82 a8 58                 a1 = u64 [a3 + 0x58]
108170: 52 08 07                 jump @8449 if a1 != 0
      :                          @8448
108173: 28 fe 4d 01              jump @13228
      :                          @8449
108177: 82 a8 50                 a1 = u64 [a3 + 0x50]
108180: 7b 87                    u64 [a1] = a0
108182: 3a 07 78 12 03           a0 = u64 [0x31278]
108187: 97 79 0d                 a2 = a0 << 0xd
108190: d3 97 07                 a0 = a0 ^ a2
108193: 98 79 07                 a2 = a0 >> 0x7
108196: d3 97 07                 a0 = a0 ^ a2
108199: 97 79 11                 a2 = a0 << 0x11
108202: d3 79 09                 a2 = a2 ^ a0
108205: 3e 09 78 12 03           u64 [0x31278] = a2
108210: 82 18 18 02              a1 = u64 [sp + 0x218]
108214: 52 08 07                 jump @8451 if a1 != 0
      :                          @8450
108217: 28 d2 4d 01              jump @13228
      :                          @8451
108221: 82 1a 10 02              a3 = u64 [sp + 0x210]
108225: 82 a9 10                 a2 = u64 [a3 + 0x10]
108228: 55 19 05 08              jump @8453 if a2 >=u 5
      :                          @8452
108232: 28 e4 4d 01              jump @13261
      :                          @8453
108236: 82 a9 08                 a2 = u64 [a3 + 0x8]
108239: 84 77 01                 a0 = a0 & 0x1
108242: 7b 97 20                 u64 [a2 + 0x20] = a0
108245: 55 18 05 08              jump @8455 if a1 >=u 5
      :                          @8454
108249: 28 b5 4d 01              jump @13231
      :                          @8455
108253: 82 a8 70                 a1 = u64 [a3 + 0x70]
108256: 52 08 07                 jump @8457 if a1 != 0
      :                          @8456
108259: 28 a8 4d 01              jump @13228
      :                          @8457
108263: 82 a8 68                 a1 = u64 [a3 + 0x68]
108266: 7b 87                    u64 [a1] = a0
108268: 3a 07 78 12 03           a0 = u64 [0x31278]
108273: 97 79 0d                 a2 = a0 << 0xd
108276: d3 97 07                 a0 = a0 ^ a2
108279: 98 79 07                 a2 = a0 >> 0x7
108282: d3 97 07                 a0 = a0 ^ a2
108285: 97 79 11                 a2 = a0 << 0x11
108288: d3 79 09                 a2 = a2 ^ a0
108291: 3e 09 78 12 03           u64 [0x31278] = a2
108296: 82 18 18 02              a1 = u64 [sp + 0x218]
108300: 55 18 02 08              jump @8459 if a1 >=u 2
      :                          @8458
108304: 28 b3 4c 01              jump @13209
      :                          @8459
108308: 82 1b 10 02              a4 = u64 [sp + 0x210]
108312: 82 b9 28                 a2 = u64 [a4 + 0x28]
108315: 55 19 03 08              jump @8461 if a2 >=u 3
      :                          @8460
108319: 28 80 4d 01              jump @13248
      :                          @8461
108323: 82 ba 20                 a3 = u64 [a4 + 0x20]
108326: 84 79 01                 a2 = a0 & 0x1
108329: 7b a9 10                 u64 [a3 + 0x10] = a2
108332: 55 18 03 08              jump @8463 if a1 >=u 3
      :                          @8462
108336: 28 79 4d 01              jump @13258
      :                          @8463
108340: 82 b8 40                 a1 = u64 [a4 + 0x40]
108343: 55 18 02 08              jump @8465 if a1 >=u 2
      :                          @8464
108347: 28 88 4c 01              jump @13209
      :                          @8465
108351: 82 b8 38                 a1 = u64 [a4 + 0x38]
108354: 7b 89 08                 u64 [a1 + 0x8] = a2
108357: 3a 09 78 12 03           a2 = u64 [0x31278]
108362: 97 9a 0d                 a3 = a2 << 0xd
108365: d3 a9 09                 a2 = a2 ^ a3
108368: 98 9a 07                 a3 = a2 >> 0x7
108371: d3 9a 0a                 a3 = a3 ^ a2
108374: 97 a9 11                 a2 = a3 << 0x11
108377: d3 a9 09                 a2 = a2 ^ a3
108380: 3e 09 78 12 03           u64 [0x31278] = a2
108385: 82 18 18 02              a1 = u64 [sp + 0x218]
108389: 55 18 02 08              jump @8467 if a1 >=u 2
      :                          @8466
108393: 28 5a 4c 01              jump @13209
      :                          @8467
108397: 82 1b 10 02              a4 = u64 [sp + 0x210]
108401: 82 b9 28                 a2 = u64 [a4 + 0x28]
108404: 55 19 04 08              jump @8469 if a2 >=u 4
      :                          @8468
108408: 28 26 4d 01              jump @13247
      :                          @8469
108412: 82 b9 20                 a2 = u64 [a4 + 0x20]
108415: 84 aa 01                 a3 = a3 & 0x1
108418: 7b 9a 18                 u64 [a2 + 0x18] = a3
108421: 55 18 04 08              jump @8471 if a1 >=u 4
      :                          @8470
108425: 28 3b 4c 01              jump @13210
      :                          @8471
108429: 82 b8 58                 a1 = u64 [a4 + 0x58]
108432: 55 18 02 08              jump @8473 if a1 >=u 2
      :                          @8472
108436: 28 2f 4c 01              jump @13209
      :                          @8473
108440: 82 b8 50                 a1 = u64 [a4 + 0x50]
108443: 7b 8a 08                 u64 [a1 + 0x8] = a3
108446: 3a 09 78 12 03           a2 = u64 [0x31278]
108451: 97 9a 0d                 a3 = a2 << 0xd
108454: d3 a9 09                 a2 = a2 ^ a3
108457: 98 9a 07                 a3 = a2 >> 0x7
108460: d3 9a 0a                 a3 = a3 ^ a2
108463: 97 a9 11                 a2 = a3 << 0x11
108466: d3 a9 09                 a2 = a2 ^ a3
108469: 3e 09 78 12 03           u64 [0x31278] = a2
108474: 82 18 18 02              a1 = u64 [sp + 0x218]
108478: 55 18 02 08              jump @8475 if a1 >=u 2
      :                          @8474
108482: 28 d3 4c 01              jump @13238
      :                          @8475
108486: 82 1b 10 02              a4 = u64 [sp + 0x210]
108490: 82 b9 28                 a2 = u64 [a4 + 0x28]
108493: 55 19 05 08              jump @8477 if a2 >=u 5
      :                          @8476
108497: 28 cf 4c 01              jump @13249
      :                          @8477
108501: 82 b9 20                 a2 = u64 [a4 + 0x20]
108504: 84 aa 01                 a3 = a3 & 0x1
108507: 7b 9a 20                 u64 [a2 + 0x20] = a3
108510: 55 18 05 08              jump @8479 if a1 >=u 5
      :                          @8478
108514: 28 bb 4c 01              jump @13246
      :                          @8479
108518: 82 b8 70                 a1 = u64 [a4 + 0x70]
108521: 55 18 02 08              jump @8481 if a1 >=u 2
      :                          @8480
108525: 28 a8 4c 01              jump @13238
      :                          @8481
108529: 82 b8 68                 a1 = u64 [a4 + 0x68]
108532: 7b 8a 08                 u64 [a1 + 0x8] = a3
108535: 3a 09 78 12 03           a2 = u64 [0x31278]
108540: 97 9a 0d                 a3 = a2 << 0xd
108543: d3 a9 09                 a2 = a2 ^ a3
108546: 98 9b 07                 a4 = a2 >> 0x7
108549: d3 9b 0b                 a4 = a4 ^ a2
108552: 97 b9 11                 a2 = a4 << 0x11
108555: d3 b9 09                 a2 = a2 ^ a4
108558: 3e 09 78 12 03           u64 [0x31278] = a2
108563: 82 18 18 02              a1 = u64 [sp + 0x218]
108567: 55 18 03 08              jump @8483 if a1 >=u 3
      :                          @8482
108571: 28 71 4c 01              jump @13229
      :                          @8483
108575: 82 1c 10 02              a5 = u64 [sp + 0x210]
108579: 82 c9 40                 a2 = u64 [a5 + 0x40]
108582: 55 19 04 08              jump @8485 if a2 >=u 4
      :                          @8484
108586: 28 75 4c 01              jump @13248
      :                          @8485
108590: 82 c9 38                 a2 = u64 [a5 + 0x38]
108593: 84 bb 01                 a4 = a4 & 0x1
108596: 7b 9b 18                 u64 [a2 + 0x18] = a4
108599: 55 18 04 08              jump @8487 if a1 >=u 4
      :                          @8486
108603: 28 72 4c 01              jump @13262
      :                          @8487
108607: 82 c8 58                 a1 = u64 [a5 + 0x58]
108610: 55 18 03 08              jump @8489 if a1 >=u 3
      :                          @8488
108614: 28 50 4c 01              jump @13239
      :                          @8489
108618: 82 c8 50                 a1 = u64 [a5 + 0x50]
108621: 7b 8b 10                 u64 [a1 + 0x10] = a4
108624: 3a 09 78 12 03           a2 = u64 [0x31278]
108629: 97 9a 0d                 a3 = a2 << 0xd
108632: d3 a9 09                 a2 = a2 ^ a3
108635: 98 9a 07                 a3 = a2 >> 0x7
108638: d3 9a 0a                 a3 = a3 ^ a2
108641: 97 a9 11                 a2 = a3 << 0x11
108644: d3 a9 09                 a2 = a2 ^ a3
108647: 3e 09 78 12 03           u64 [0x31278] = a2
108652: 82 18 18 02              a1 = u64 [sp + 0x218]
108656: 55 18 03 08              jump @8491 if a1 >=u 3
      :                          @8490
108660: 28 22 4c 01              jump @13239
      :                          @8491
108664: 82 1b 10 02              a4 = u64 [sp + 0x210]
108668: 82 b9 40                 a2 = u64 [a4 + 0x40]
108671: 55 19 05 08              jump @8493 if a2 >=u 5
      :                          @8492
108675: 28 1d 4c 01              jump @13249
      :                          @8493
108679: 82 b9 38                 a2 = u64 [a4 + 0x38]
108682: 84 aa 01                 a3 = a3 & 0x1
108685: 7b 9a 20                 u64 [a2 + 0x20] = a3
108688: 55 18 05 08              jump @8495 if a1 >=u 5
      :                          @8494
108692: 28 09 4c 01              jump @13246
      :                          @8495
108696: 82 b8 70                 a1 = u64 [a4 + 0x70]
108699: 55 18 03 08              jump @8497 if a1 >=u 3
      :                          @8496
108703: 28 f7 4b 01              jump @13239
      :                          @8497
108707: 82 b8 68                 a1 = u64 [a4 + 0x68]
108710: 7b 8a 10                 u64 [a1 + 0x10] = a3
108713: 3a 09 78 12 03           a2 = u64 [0x31278]
108718: 97 9a 0d                 a3 = a2 << 0xd
108721: d3 a9 09                 a2 = a2 ^ a3
108724: 98 9b 07                 a4 = a2 >> 0x7
108727: d3 9b 0b                 a4 = a4 ^ a2
108730: 97 b9 11                 a2 = a4 << 0x11
108733: d3 b9 09                 a2 = a2 ^ a4
108736: 3e 09 78 12 03           u64 [0x31278] = a2
108741: 82 18 18 02              a1 = u64 [sp + 0x218]
108745: 55 18 04 08              jump @8499 if a1 >=u 4
      :                          @8498
108749: 28 bf 4b 01              jump @13229
      :                          @8499
108753: 82 17 10 02              a0 = u64 [sp + 0x210]
108757: 82 79 58                 a2 = u64 [a0 + 0x58]
108760: 55 19 05 08              jump @8501 if a2 >=u 5
      :                          @8500
108764: 28 c3 4b 01              jump @13248
      :                          @8501
108768: 82 79 50                 a2 = u64 [a0 + 0x50]
108771: 84 bb 01                 a4 = a4 & 0x1
108774: 7b 9b 20                 u64 [a2 + 0x20] = a4
108777: 55 18 05 08              jump @8503 if a1 >=u 5
      :                          @8502
108781: 28 bd 4b 01              jump @13259
      :                          @8503
108785: 82 78 70                 a1 = u64 [a0 + 0x70]
108788: 55 18 04 08              jump @8505 if a1 >=u 4
      :                          @8504
108792: 28 a4 4b 01              jump @13245
      :                          @8505
108796: 82 77 68                 a0 = u64 [a0 + 0x68]
108799: 7b 7b 18                 u64 [a0 + 0x18] = a4
108802: 95 17 08 02              a0 = sp + 0x208
108806: 50 20 0e 05 9a 45 ff     ra = 1294, jump @4709
      :                          @8506 [@dyn 647]
108813: 7b 17 20 01              u64 [sp + 0x120] = a0
108817: 95 17 20 01              a0 = sp + 0x120
108821: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
108825: 33 07 2c 0c              a0 = 0xc2c
108829: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
108833: 33 07 78 08 01           a0 = 0x10878
108838: 7b 17 90 02              u64 [sp + 0x290] = a0
108842: 49 21 98 02 01           u64 [sp + 664] = 0x1
108847: 49 21 b0 02              u64 [sp + 688] = 0
108851: 95 18 e0 01              a1 = sp + 0x1e0
108855: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
108859: 49 21 a8 02 01           u64 [sp + 680] = 0x1
108864: 95 17 38 02              a0 = sp + 0x238
108868: 95 18 90 02              a1 = sp + 0x290
108872: 50 20 10 05 b2 a6 fe     ra = 1296, jump @1503
      :                          @8507 [@dyn 648]
108879: 82 16 40 02              s1 = u64 [sp + 0x240]
108883: 82 1b 48 02              a4 = u64 [sp + 0x248]
108887: 82 17 38 02              a0 = u64 [sp + 0x238]
108891: 7b 17 70                 u64 [sp + 0x70] = a0
108894: 33 07 02                 a0 = 0x2
108897: 33 08                    a1 = 0
108899: 33 09                    a2 = 0
108901: 64 6a                    a3 = s1
108903: 33 00 12 05              ra = 0x512
108907: 0a 64                    ecalli 100 // 'log'
108909: 01                       fallthrough
      :                          @8508 [@dyn 649]
108910: 82 1c 70                 a5 = u64 [sp + 0x70]
108913: 82 17 68                 a0 = u64 [sp + 0x68]
108916: c8 c7 07                 a0 = a0 + a5
108919: 33 08 00 00 ff           a1 = 0xffffffffffff0000
108924: ae 87 07                 jump @8510 if a0 >=u a1
      :                          @8509
108927: 28 0c 34 01              jump @12767
      :                          @8510
108931: 33 07 c0 22 03           a0 = 0x322c0
108936: 95 77 00 00 01           a0 = a0 + 0x10000
108941: 01                       fallthrough
      :                          @8511
108942: 82 78                    a1 = u64 [a0]
108944: c9 87 09                 a2 = a0 - a1
108947: aa 69 07                 jump @8513 if a2 == s1
      :                          @8512
108950: 28 f5 33 01              jump @12767
      :                          @8513
108954: c9 c8 09                 a2 = a1 - a5
108957: 01                       fallthrough
      :                          @8514
108958: 82 7a                    a3 = u64 [a0]
108960: ab 8a ee                 jump @8511 if a3 != a1
      :                          @8515
108963: 7b 79                    u64 [a0] = a2
108965: 33 0b                    a4 = 0
108967: 01                       fallthrough
      :                          @8516
108968: ab 8a e6                 jump @8511 if a3 != a1
      :                          @8517
108971: 28 e0 33 01              jump @12767
      :                          @8518 [@dyn 650]
108975: 95 17 90 02              a0 = sp + 0x290
108979: 33 08 06                 a1 = 0x6
108982: 50 20 16 05 82 ba fe     ra = 1302, jump @1882
      :                          @8519 [@dyn 651]
108989: 95 17 e0 01              a0 = sp + 0x1e0
108993: 95 18 90 02              a1 = sp + 0x290
108997: 33 09 06                 a2 = 0x6
109000: 50 20 18 05 bb bb fe     ra = 1304, jump @1907
      :                          @8520 [@dyn 652]
109007: 3a 07 78 12 03           a0 = u64 [0x31278]
109012: 97 79 0d                 a2 = a0 << 0xd
109015: d3 97 07                 a0 = a0 ^ a2
109018: 98 79 07                 a2 = a0 >> 0x7
109021: d3 97 07                 a0 = a0 ^ a2
109024: 97 79 11                 a2 = a0 << 0x11
109027: d3 79 09                 a2 = a2 ^ a0
109030: 3e 09 78 12 03           u64 [0x31278] = a2
109035: 82 1c f0 01              a5 = u64 [sp + 0x1f0]
109039: 52 0c 07                 jump @8522 if a5 != 0
      :                          @8521
109042: 28 a2 4a 01              jump @13237
      :                          @8522
109046: 82 1b e8 01              a4 = u64 [sp + 0x1e8]
109050: 82 b9 10                 a2 = u64 [a4 + 0x10]
109053: 56 19 01 08              jump @8524 if a2 >u 1
      :                          @8523
109057: 28 9e 4a 01              jump @13248
      :                          @8524
109061: 82 b8 08                 a1 = u64 [a4 + 0x8]
109064: 84 79 01                 a2 = a0 & 0x1
109067: 78 89 01                 u8 [a1 + 0x1] = a2
109070: 56 1c 01 08              jump @8526 if a5 >u 1
      :                          @8525
109074: 28 7a 4a 01              jump @13229
      :                          @8526
109078: 82 b7 28                 a0 = u64 [a4 + 0x28]
109081: 52 07 07                 jump @8528 if a0 != 0
      :                          @8527
109084: 28 95 4a 01              jump @13264
      :                          @8528
109088: 82 b7 20                 a0 = u64 [a4 + 0x20]
109091: 78 79                    u8 [a0] = a2
109093: 3a 07 78 12 03           a0 = u64 [0x31278]
109098: 97 79 0d                 a2 = a0 << 0xd
109101: d3 97 07                 a0 = a0 ^ a2
109104: 98 79 07                 a2 = a0 >> 0x7
109107: d3 97 07                 a0 = a0 ^ a2
109110: 97 79 11                 a2 = a0 << 0x11
109113: d3 79 09                 a2 = a2 ^ a0
109116: 3e 09 78 12 03           u64 [0x31278] = a2
109121: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
109125: 52 08 07                 jump @8530 if a1 != 0
      :                          @8529
109128: 28 43 4a 01              jump @13228
      :                          @8530
109132: 82 1a e8 01              a3 = u64 [sp + 0x1e8]
109136: 82 a9 10                 a2 = u64 [a3 + 0x10]
109139: 55 19 03 08              jump @8532 if a2 >=u 3
      :                          @8531
109143: 28 54 4a 01              jump @13260
      :                          @8532
109147: 82 a9 08                 a2 = u64 [a3 + 0x8]
109150: 84 77 01                 a0 = a0 & 0x1
109153: 78 97 02                 u8 [a2 + 0x2] = a0
109156: 55 18 03 08              jump @8534 if a1 >=u 3
      :                          @8533
109160: 28 5d 49 01              jump @13211
      :                          @8534
109164: 82 a8 40                 a1 = u64 [a3 + 0x40]
109167: 52 08 07                 jump @8536 if a1 != 0
      :                          @8535
109170: 28 3c 4a 01              jump @13263
      :                          @8536
109174: 82 a8 38                 a1 = u64 [a3 + 0x38]
109177: 78 87                    u8 [a1] = a0
109179: 3a 07 78 12 03           a0 = u64 [0x31278]
109184: 97 79 0d                 a2 = a0 << 0xd
109187: d3 97 07                 a0 = a0 ^ a2
109190: 98 79 07                 a2 = a0 >> 0x7
109193: d3 97 07                 a0 = a0 ^ a2
109196: 97 79 11                 a2 = a0 << 0x11
109199: d3 79 09                 a2 = a2 ^ a0
109202: 3e 09 78 12 03           u64 [0x31278] = a2
109207: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
109211: 52 08 07                 jump @8538 if a1 != 0
      :                          @8537
109214: 28 ed 49 01              jump @13228
      :                          @8538
109218: 82 1a e8 01              a3 = u64 [sp + 0x1e8]
109222: 82 a9 10                 a2 = u64 [a3 + 0x10]
109225: 55 19 04 08              jump @8540 if a2 >=u 4
      :                          @8539
109229: 28 f1 49 01              jump @13247
      :                          @8540
109233: 82 a9 08                 a2 = u64 [a3 + 0x8]
109236: 84 77 01                 a0 = a0 & 0x1
109239: 78 97 03                 u8 [a2 + 0x3] = a0
109242: 55 18 04 08              jump @8542 if a1 >=u 4
      :                          @8541
109246: 28 06 49 01              jump @13210
      :                          @8542
109250: 82 a8 58                 a1 = u64 [a3 + 0x58]
109253: 52 08 07                 jump @8544 if a1 != 0
      :                          @8543
109256: 28 e6 49 01              jump @13263
      :                          @8544
109260: 82 a8 50                 a1 = u64 [a3 + 0x50]
109263: 78 87                    u8 [a1] = a0
109265: 3a 07 78 12 03           a0 = u64 [0x31278]
109270: 97 79 0d                 a2 = a0 << 0xd
109273: d3 97 07                 a0 = a0 ^ a2
109276: 98 79 07                 a2 = a0 >> 0x7
109279: d3 97 07                 a0 = a0 ^ a2
109282: 97 79 11                 a2 = a0 << 0x11
109285: d3 79 09                 a2 = a2 ^ a0
109288: 3e 09 78 12 03           u64 [0x31278] = a2
109293: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
109297: 52 08 07                 jump @8546 if a1 != 0
      :                          @8545
109300: 28 97 49 01              jump @13228
      :                          @8546
109304: 82 1a e8 01              a3 = u64 [sp + 0x1e8]
109308: 82 a9 10                 a2 = u64 [a3 + 0x10]
109311: 55 19 05 08              jump @8548 if a2 >=u 5
      :                          @8547
109315: 28 a9 49 01              jump @13261
      :                          @8548
109319: 82 a9 08                 a2 = u64 [a3 + 0x8]
109322: 84 77 01                 a0 = a0 & 0x1
109325: 78 97 04                 u8 [a2 + 0x4] = a0
109328: 55 18 05 08              jump @8550 if a1 >=u 5
      :                          @8549
109332: 28 7a 49 01              jump @13231
      :                          @8550
109336: 82 a8 70                 a1 = u64 [a3 + 0x70]
109339: 52 08 07                 jump @8552 if a1 != 0
      :                          @8551
109342: 28 90 49 01              jump @13263
      :                          @8552
109346: 82 a8 68                 a1 = u64 [a3 + 0x68]
109349: 78 87                    u8 [a1] = a0
109351: 3a 07 78 12 03           a0 = u64 [0x31278]
109356: 97 79 0d                 a2 = a0 << 0xd
109359: d3 97 07                 a0 = a0 ^ a2
109362: 98 79 07                 a2 = a0 >> 0x7
109365: d3 97 07                 a0 = a0 ^ a2
109368: 97 79 11                 a2 = a0 << 0x11
109371: d3 79 09                 a2 = a2 ^ a0
109374: 3e 09 78 12 03           u64 [0x31278] = a2
109379: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
109383: 52 08 07                 jump @8554 if a1 != 0
      :                          @8553
109386: 28 41 49 01              jump @13228
      :                          @8554
109390: 82 1a e8 01              a3 = u64 [sp + 0x1e8]
109394: 82 a9 10                 a2 = u64 [a3 + 0x10]
109397: 55 19 06 08              jump @8556 if a2 >=u 6
      :                          @8555
109401: 28 5a 49 01              jump @13266
      :                          @8556
109405: 82 a9 08                 a2 = u64 [a3 + 0x8]
109408: 84 77 01                 a0 = a0 & 0x1
109411: 78 97 05                 u8 [a2 + 0x5] = a0
109414: 55 18 06 08              jump @8558 if a1 >=u 6
      :                          @8557
109418: 28 28 49 01              jump @13235
      :                          @8558
109422: 82 a8 88 00              a1 = u64 [a3 + 0x88]
109426: 52 08 07                 jump @8560 if a1 != 0
      :                          @8559
109429: 28 39 49 01              jump @13263
      :                          @8560
109433: 82 a8 80 00              a1 = u64 [a3 + 0x80]
109437: 78 87                    u8 [a1] = a0
109439: 3a 07 78 12 03           a0 = u64 [0x31278]
109444: 97 79 0d                 a2 = a0 << 0xd
109447: d3 97 07                 a0 = a0 ^ a2
109450: 98 79 07                 a2 = a0 >> 0x7
109453: d3 97 07                 a0 = a0 ^ a2
109456: 97 79 11                 a2 = a0 << 0x11
109459: d3 79 09                 a2 = a2 ^ a0
109462: 3e 09 78 12 03           u64 [0x31278] = a2
109467: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
109471: 55 18 02 08              jump @8562 if a1 >=u 2
      :                          @8561
109475: 28 20 48 01              jump @13209
      :                          @8562
109479: 82 1b e8 01              a4 = u64 [sp + 0x1e8]
109483: 82 b9 28                 a2 = u64 [a4 + 0x28]
109486: 33 0c 03                 a5 = 0x3
109489: ae c9 07                 jump @8564 if a2 >=u a5
      :                          @8563
109492: 28 eb 48 01              jump @13248
      :                          @8564
109496: 82 b9 20                 a2 = u64 [a4 + 0x20]
109499: 84 7a 01                 a3 = a0 & 0x1
109502: 78 9a 02                 u8 [a2 + 0x2] = a3
109505: 55 18 03 08              jump @8566 if a1 >=u 3
      :                          @8565
109509: 28 e4 48 01              jump @13258
      :                          @8566
109513: 82 b9 40                 a2 = u64 [a4 + 0x40]
109516: 55 19 02 08              jump @8568 if a2 >=u 2
      :                          @8567
109520: 28 e4 48 01              jump @13267
      :                          @8568
109524: 82 b8 38                 a1 = u64 [a4 + 0x38]
109527: 78 8a 01                 u8 [a1 + 0x1] = a3
109530: 3a 09 78 12 03           a2 = u64 [0x31278]
109535: 97 9a 0d                 a3 = a2 << 0xd
109538: d3 a9 09                 a2 = a2 ^ a3
109541: 98 9a 07                 a3 = a2 >> 0x7
109544: d3 9a 0a                 a3 = a3 ^ a2
109547: 97 a9 11                 a2 = a3 << 0x11
109550: d3 a9 09                 a2 = a2 ^ a3
109553: 3e 09 78 12 03           u64 [0x31278] = a2
109558: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
109562: 55 18 02 08              jump @8570 if a1 >=u 2
      :                          @8569
109566: 28 97 48 01              jump @13238
      :                          @8570
109570: 82 1b e8 01              a4 = u64 [sp + 0x1e8]
109574: 82 b9 28                 a2 = u64 [a4 + 0x28]
109577: 55 19 04 08              jump @8572 if a2 >=u 4
      :                          @8571
109581: 28 91 48 01              jump @13247
      :                          @8572
109585: 82 b9 20                 a2 = u64 [a4 + 0x20]
109588: 84 aa 01                 a3 = a3 & 0x1
109591: 78 9a 03                 u8 [a2 + 0x3] = a3
109594: 55 18 04 08              jump @8574 if a1 >=u 4
      :                          @8573
109598: 28 7e 48 01              jump @13245
      :                          @8574
109602: 82 b9 58                 a2 = u64 [a4 + 0x58]
109605: 55 19 02 08              jump @8576 if a2 >=u 2
      :                          @8575
109609: 28 8b 48 01              jump @13267
      :                          @8576
109613: 82 b8 50                 a1 = u64 [a4 + 0x50]
109616: 78 8a 01                 u8 [a1 + 0x1] = a3
109619: 3a 09 78 12 03           a2 = u64 [0x31278]
109624: 97 9a 0d                 a3 = a2 << 0xd
109627: d3 a9 09                 a2 = a2 ^ a3
109630: 98 9a 07                 a3 = a2 >> 0x7
109633: d3 9a 0a                 a3 = a3 ^ a2
109636: 97 a9 11                 a2 = a3 << 0x11
109639: d3 a9 09                 a2 = a2 ^ a3
109642: 3e 09 78 12 03           u64 [0x31278] = a2
109647: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
109651: 55 18 02 08              jump @8578 if a1 >=u 2
      :                          @8577
109655: 28 3e 48 01              jump @13238
      :                          @8578
109659: 82 1b e8 01              a4 = u64 [sp + 0x1e8]
109663: 82 b9 28                 a2 = u64 [a4 + 0x28]
109666: 55 19 05 08              jump @8580 if a2 >=u 5
      :                          @8579
109670: 28 3a 48 01              jump @13249
      :                          @8580
109674: 82 b9 20                 a2 = u64 [a4 + 0x20]
109677: 84 aa 01                 a3 = a3 & 0x1
109680: 78 9a 04                 u8 [a2 + 0x4] = a3
109683: 55 18 05 08              jump @8582 if a1 >=u 5
      :                          @8581
109687: 28 26 48 01              jump @13246
      :                          @8582
109691: 82 b9 70                 a2 = u64 [a4 + 0x70]
109694: 55 19 02 08              jump @8584 if a2 >=u 2
      :                          @8583
109698: 28 32 48 01              jump @13267
      :                          @8584
109702: 82 b8 68                 a1 = u64 [a4 + 0x68]
109705: 78 8a 01                 u8 [a1 + 0x1] = a3
109708: 3a 09 78 12 03           a2 = u64 [0x31278]
109713: 97 9a 0d                 a3 = a2 << 0xd
109716: d3 a9 09                 a2 = a2 ^ a3
109719: 98 9a 07                 a3 = a2 >> 0x7
109722: d3 9a 0a                 a3 = a3 ^ a2
109725: 97 a9 11                 a2 = a3 << 0x11
109728: d3 a9 09                 a2 = a2 ^ a3
109731: 3e 09 78 12 03           u64 [0x31278] = a2
109736: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
109740: 55 18 02 08              jump @8586 if a1 >=u 2
      :                          @8585
109744: 28 e5 47 01              jump @13238
      :                          @8586
109748: 82 1b e8 01              a4 = u64 [sp + 0x1e8]
109752: 82 b9 28                 a2 = u64 [a4 + 0x28]
109755: 55 19 06 08              jump @8588 if a2 >=u 6
      :                          @8587
109759: 28 e2 47 01              jump @13250
      :                          @8588
109763: 82 b9 20                 a2 = u64 [a4 + 0x20]
109766: 84 aa 01                 a3 = a3 & 0x1
109769: 78 9a 05                 u8 [a2 + 0x5] = a3
109772: 55 18 06 08              jump @8590 if a1 >=u 6
      :                          @8589
109776: 28 d2 47 01              jump @13251
      :                          @8590
109780: 82 b9 88 00              a2 = u64 [a4 + 0x88]
109784: 55 19 02 08              jump @8592 if a2 >=u 2
      :                          @8591
109788: 28 d8 47 01              jump @13267
      :                          @8592
109792: 82 b8 80 00              a1 = u64 [a4 + 0x80]
109796: 78 8a 01                 u8 [a1 + 0x1] = a3
109799: 3a 09 78 12 03           a2 = u64 [0x31278]
109804: 97 9a 0d                 a3 = a2 << 0xd
109807: d3 a9 09                 a2 = a2 ^ a3
109810: 98 9b 07                 a4 = a2 >> 0x7
109813: d3 9b 0b                 a4 = a4 ^ a2
109816: 97 b9 11                 a2 = a4 << 0x11
109819: d3 b9 09                 a2 = a2 ^ a4
109822: 3e 09 78 12 03           u64 [0x31278] = a2
109827: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
109831: 55 18 03 08              jump @8594 if a1 >=u 3
      :                          @8593
109835: 28 81 47 01              jump @13229
      :                          @8594
109839: 82 1c e8 01              a5 = u64 [sp + 0x1e8]
109843: 82 c9 40                 a2 = u64 [a5 + 0x40]
109846: 55 19 04 08              jump @8596 if a2 >=u 4
      :                          @8595
109850: 28 85 47 01              jump @13248
      :                          @8596
109854: 82 c9 38                 a2 = u64 [a5 + 0x38]
109857: 84 bb 01                 a4 = a4 & 0x1
109860: 78 9b 03                 u8 [a2 + 0x3] = a4
109863: 55 18 04 08              jump @8598 if a1 >=u 4
      :                          @8597
109867: 28 82 47 01              jump @13262
      :                          @8598
109871: 82 c9 58                 a2 = u64 [a5 + 0x58]
109874: 55 19 03 08              jump @8600 if a2 >=u 3
      :                          @8599
109878: 28 81 47 01              jump @13270
      :                          @8600
109882: 82 c8 50                 a1 = u64 [a5 + 0x50]
109885: 78 8b 02                 u8 [a1 + 0x2] = a4
109888: 3a 09 78 12 03           a2 = u64 [0x31278]
109893: 97 9a 0d                 a3 = a2 << 0xd
109896: d3 a9 09                 a2 = a2 ^ a3
109899: 98 9a 07                 a3 = a2 >> 0x7
109902: d3 9a 0a                 a3 = a3 ^ a2
109905: 97 a9 11                 a2 = a3 << 0x11
109908: d3 a9 09                 a2 = a2 ^ a3
109911: 3e 09 78 12 03           u64 [0x31278] = a2
109916: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
109920: 55 18 03 08              jump @8602 if a1 >=u 3
      :                          @8601
109924: 28 32 47 01              jump @13239
      :                          @8602
109928: 82 1b e8 01              a4 = u64 [sp + 0x1e8]
109932: 82 b9 40                 a2 = u64 [a4 + 0x40]
109935: 55 19 05 08              jump @8604 if a2 >=u 5
      :                          @8603
109939: 28 2d 47 01              jump @13249
      :                          @8604
109943: 82 b9 38                 a2 = u64 [a4 + 0x38]
109946: 84 aa 01                 a3 = a3 & 0x1
109949: 78 9a 04                 u8 [a2 + 0x4] = a3
109952: 55 18 05 08              jump @8606 if a1 >=u 5
      :                          @8605
109956: 28 19 47 01              jump @13246
      :                          @8606
109960: 82 b9 70                 a2 = u64 [a4 + 0x70]
109963: 55 19 03 08              jump @8608 if a2 >=u 3
      :                          @8607
109967: 28 28 47 01              jump @13270
      :                          @8608
109971: 82 b8 68                 a1 = u64 [a4 + 0x68]
109974: 78 8a 02                 u8 [a1 + 0x2] = a3
109977: 3a 09 78 12 03           a2 = u64 [0x31278]
109982: 97 9a 0d                 a3 = a2 << 0xd
109985: d3 a9 09                 a2 = a2 ^ a3
109988: 98 9a 07                 a3 = a2 >> 0x7
109991: d3 9a 0a                 a3 = a3 ^ a2
109994: 97 a9 11                 a2 = a3 << 0x11
109997: d3 a9 09                 a2 = a2 ^ a3
110000: 3e 09 78 12 03           u64 [0x31278] = a2
110005: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
110009: 55 18 03 08              jump @8610 if a1 >=u 3
      :                          @8609
110013: 28 d9 46 01              jump @13239
      :                          @8610
110017: 82 1b e8 01              a4 = u64 [sp + 0x1e8]
110021: 82 b9 40                 a2 = u64 [a4 + 0x40]
110024: 55 19 06 08              jump @8612 if a2 >=u 6
      :                          @8611
110028: 28 d5 46 01              jump @13250
      :                          @8612
110032: 82 b9 38                 a2 = u64 [a4 + 0x38]
110035: 84 aa 01                 a3 = a3 & 0x1
110038: 78 9a 05                 u8 [a2 + 0x5] = a3
110041: 55 18 06 08              jump @8614 if a1 >=u 6
      :                          @8613
110045: 28 c5 46 01              jump @13251
      :                          @8614
110049: 82 b9 88 00              a2 = u64 [a4 + 0x88]
110053: 55 19 03 08              jump @8616 if a2 >=u 3
      :                          @8615
110057: 28 ce 46 01              jump @13270
      :                          @8616
110061: 82 b8 80 00              a1 = u64 [a4 + 0x80]
110065: 78 8a 02                 u8 [a1 + 0x2] = a3
110068: 3a 09 78 12 03           a2 = u64 [0x31278]
110073: 97 9a 0d                 a3 = a2 << 0xd
110076: d3 a9 09                 a2 = a2 ^ a3
110079: 98 9b 07                 a4 = a2 >> 0x7
110082: d3 9b 0b                 a4 = a4 ^ a2
110085: 97 b9 11                 a2 = a4 << 0x11
110088: d3 b9 09                 a2 = a2 ^ a4
110091: 3e 09 78 12 03           u64 [0x31278] = a2
110096: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
110100: 55 18 04 08              jump @8618 if a1 >=u 4
      :                          @8617
110104: 28 74 46 01              jump @13229
      :                          @8618
110108: 82 1c e8 01              a5 = u64 [sp + 0x1e8]
110112: 82 c9 58                 a2 = u64 [a5 + 0x58]
110115: 55 19 05 08              jump @8620 if a2 >=u 5
      :                          @8619
110119: 28 78 46 01              jump @13248
      :                          @8620
110123: 82 c9 50                 a2 = u64 [a5 + 0x50]
110126: 84 bb 01                 a4 = a4 & 0x1
110129: 78 9b 04                 u8 [a2 + 0x4] = a4
110132: 55 18 05 08              jump @8622 if a1 >=u 5
      :                          @8621
110136: 28 72 46 01              jump @13259
      :                          @8622
110140: 82 c9 70                 a2 = u64 [a5 + 0x70]
110143: 55 19 04 08              jump @8624 if a2 >=u 4
      :                          @8623
110147: 28 7d 46 01              jump @13277
      :                          @8624
110151: 82 c8 68                 a1 = u64 [a5 + 0x68]
110154: 78 8b 03                 u8 [a1 + 0x3] = a4
110157: 3a 09 78 12 03           a2 = u64 [0x31278]
110162: 97 9a 0d                 a3 = a2 << 0xd
110165: d3 a9 09                 a2 = a2 ^ a3
110168: 98 9a 07                 a3 = a2 >> 0x7
110171: d3 9a 0a                 a3 = a3 ^ a2
110174: 97 a9 11                 a2 = a3 << 0x11
110177: d3 a9 09                 a2 = a2 ^ a3
110180: 3e 09 78 12 03           u64 [0x31278] = a2
110185: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
110189: 55 18 04 08              jump @8626 if a1 >=u 4
      :                          @8625
110193: 28 2b 46 01              jump @13245
      :                          @8626
110197: 82 1b e8 01              a4 = u64 [sp + 0x1e8]
110201: 82 b9 58                 a2 = u64 [a4 + 0x58]
110204: 55 19 06 08              jump @8628 if a2 >=u 6
      :                          @8627
110208: 28 21 46 01              jump @13250
      :                          @8628
110212: 82 b9 50                 a2 = u64 [a4 + 0x50]
110215: 84 aa 01                 a3 = a3 & 0x1
110218: 78 9a 05                 u8 [a2 + 0x5] = a3
110221: 55 18 06 08              jump @8630 if a1 >=u 6
      :                          @8629
110225: 28 11 46 01              jump @13251
      :                          @8630
110229: 82 b9 88 00              a2 = u64 [a4 + 0x88]
110233: 55 19 04 08              jump @8632 if a2 >=u 4
      :                          @8631
110237: 28 23 46 01              jump @13277
      :                          @8632
110241: 82 b8 80 00              a1 = u64 [a4 + 0x80]
110245: 78 8a 03                 u8 [a1 + 0x3] = a3
110248: 3a 09 78 12 03           a2 = u64 [0x31278]
110253: 97 9a 0d                 a3 = a2 << 0xd
110256: d3 a9 09                 a2 = a2 ^ a3
110259: 98 9b 07                 a4 = a2 >> 0x7
110262: d3 9b 0b                 a4 = a4 ^ a2
110265: 97 b9 11                 a2 = a4 << 0x11
110268: d3 b9 09                 a2 = a2 ^ a4
110271: 3e 09 78 12 03           u64 [0x31278] = a2
110276: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
110280: 55 18 05 08              jump @8634 if a1 >=u 5
      :                          @8633
110284: 28 c0 45 01              jump @13229
      :                          @8634
110288: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
110292: 82 79 70                 a2 = u64 [a0 + 0x70]
110295: 33 0c 06                 a5 = 0x6
110298: ae c9 07                 jump @8636 if a2 >=u a5
      :                          @8635
110301: 28 c2 45 01              jump @13248
      :                          @8636
110305: 82 79 68                 a2 = u64 [a0 + 0x68]
110308: 84 bb 01                 a4 = a4 & 0x1
110311: 78 9b 05                 u8 [a2 + 0x5] = a4
110314: 55 18 06 08              jump @8638 if a1 >=u 6
      :                          @8637
110318: 28 c7 45 01              jump @13268
      :                          @8638
110322: 82 79 88 00              a2 = u64 [a0 + 0x88]
110326: 33 0a 05                 a3 = 0x5
110329: ae a9 07                 jump @8640 if a2 >=u a3
      :                          @8639
110332: 28 cf 45 01              jump @13288
      :                          @8640
110336: 82 79 80 00              a2 = u64 [a0 + 0x80]
110340: 78 9b 04                 u8 [a2 + 0x4] = a4
110343: 50 20 1a 05 7b 34 ff     ra = 1306, jump @4449
      :                          @8641 [@dyn 653]
110350: 84 77 01                 a0 = a0 & 0x1
110353: 84 88 01                 a1 = a1 & 0x1
110356: 78 17 c8 01              u8 [sp + 0x1c8] = a0
110360: 78 18 20 01              u8 [sp + 0x120] = a1
110364: 95 17 c8 01              a0 = sp + 0x1c8
110368: 7b 17 38 02              u64 [sp + 0x238] = a0
110372: 33 07 84 0c              a0 = 0xc84
110376: 7b 17 40 02              u64 [sp + 0x240] = a0
110380: 95 18 20 01              a1 = sp + 0x120
110384: 7b 18 48 02              u64 [sp + 0x248] = a1
110388: 7b 17 50 02              u64 [sp + 0x250] = a0
110392: 33 07 90 08 01           a0 = 0x10890
110397: 7b 17 90 02              u64 [sp + 0x290] = a0
110401: 49 21 98 02 02           u64 [sp + 664] = 0x2
110406: 49 21 b0 02              u64 [sp + 688] = 0
110410: 95 18 38 02              a1 = sp + 0x238
110414: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
110418: 49 21 a8 02 02           u64 [sp + 680] = 0x2
110423: 95 17 08 02              a0 = sp + 0x208
110427: 95 18 90 02              a1 = sp + 0x290
110431: 50 20 1c 05 9b a0 fe     ra = 1308, jump @1503
      :                          @8642 [@dyn 654]
110438: 82 16 10 02              s1 = u64 [sp + 0x210]
110442: 82 1b 18 02              a4 = u64 [sp + 0x218]
110446: 82 17 08 02              a0 = u64 [sp + 0x208]
110450: 7b 17 70                 u64 [sp + 0x70] = a0
110453: 33 07 02                 a0 = 0x2
110456: 33 08                    a1 = 0
110458: 33 09                    a2 = 0
110460: 64 6a                    a3 = s1
110462: 33 00 1e 05              ra = 0x51e
110466: 0a 64                    ecalli 100 // 'log'
110468: 01                       fallthrough
      :                          @8643 [@dyn 655]
110469: 82 1c 70                 a5 = u64 [sp + 0x70]
110472: 82 17 68                 a0 = u64 [sp + 0x68]
110475: c8 c7 07                 a0 = a0 + a5
110478: 33 08 00 00 ff           a1 = 0xffffffffffff0000
110483: ae 87 06                 jump @8645 if a0 >=u a1
      :                          @8644
110486: 28 19 7e                 jump @10545
      :                          @8645
110489: 33 07 c0 22 03           a0 = 0x322c0
110494: 95 77 00 00 01           a0 = a0 + 0x10000
110499: 01                       fallthrough
      :                          @8646
110500: 82 78                    a1 = u64 [a0]
110502: c9 87 09                 a2 = a0 - a1
110505: aa 69 06                 jump @8648 if a2 == s1
      :                          @8647
110508: 28 03 7e                 jump @10545
      :                          @8648
110511: c9 c8 09                 a2 = a1 - a5
110514: 01                       fallthrough
      :                          @8649
110515: 82 7a                    a3 = u64 [a0]
110517: ab 8a ef                 jump @8646 if a3 != a1
      :                          @8650
110520: 7b 79                    u64 [a0] = a2
110522: 33 0b                    a4 = 0
110524: 01                       fallthrough
      :                          @8651
110525: ab 8a e7                 jump @8646 if a3 != a1
      :                          @8652
110528: 28 ef 7d                 jump @10545
      :                          @8653 [@dyn 656]
110531: 95 17 90 02              a0 = sp + 0x290
110535: 33 08 05                 a1 = 0x5
110538: 50 20 22 05 6e b4 fe     ra = 1314, jump @1882
      :                          @8654 [@dyn 657]
110545: 95 17 e0 01              a0 = sp + 0x1e0
110549: 95 18 90 02              a1 = sp + 0x290
110553: 33 09 05                 a2 = 0x5
110556: 50 20 24 05 a7 b5 fe     ra = 1316, jump @1907
      :                          @8655 [@dyn 658]
110563: 3a 07 78 12 03           a0 = u64 [0x31278]
110568: 97 78 0d                 a1 = a0 << 0xd
110571: d3 87 07                 a0 = a0 ^ a1
110574: 98 78 07                 a1 = a0 >> 0x7
110577: d3 87 07                 a0 = a0 ^ a1
110580: 97 78 11                 a1 = a0 << 0x11
110583: d3 78 08                 a1 = a1 ^ a0
110586: 84 77 01                 a0 = a0 & 0x1
110589: 3e 08 78 12 03           u64 [0x31278] = a1
110594: 51 07 25                 jump @8661 if a0 == 0
      :                          @8656
110597: 82 17 f0 01              a0 = u64 [sp + 0x1f0]
110601: 52 07 07                 jump @8658 if a0 != 0
      :                          @8657
110604: 28 ac 44 01              jump @13271
      :                          @8658
110608: 82 1a e8 01              a3 = u64 [sp + 0x1e8]
110612: 82 a8 10                 a1 = u64 [a3 + 0x10]
110615: 56 18 01 08              jump @8660 if a1 >u 1
      :                          @8659
110619: 28 71 44 01              jump @13229
      :                          @8660
110623: 82 a7 08                 a0 = u64 [a3 + 0x8]
110626: 46 17 01 01              u8 [a0 + 1] = 0x1
110630: 01                       fallthrough
      :                          @8661
110631: 3a 07 78 12 03           a0 = u64 [0x31278]
110636: 97 78 0d                 a1 = a0 << 0xd
110639: d3 87 07                 a0 = a0 ^ a1
110642: 98 78 07                 a1 = a0 >> 0x7
110645: d3 87 07                 a0 = a0 ^ a1
110648: 97 78 11                 a1 = a0 << 0x11
110651: d3 78 08                 a1 = a1 ^ a0
110654: 84 77 01                 a0 = a0 & 0x1
110657: 3e 08 78 12 03           u64 [0x31278] = a1
110662: 51 07 25                 jump @8667 if a0 == 0
      :                          @8662
110665: 82 17 f0 01              a0 = u64 [sp + 0x1f0]
110669: 52 07 07                 jump @8664 if a0 != 0
      :                          @8663
110672: 28 68 44 01              jump @13271
      :                          @8664
110676: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
110680: 82 78 10                 a1 = u64 [a0 + 0x10]
110683: 55 18 03 08              jump @8666 if a1 >=u 3
      :                          @8665
110687: 28 37 44 01              jump @13239
      :                          @8666
110691: 82 77 08                 a0 = u64 [a0 + 0x8]
110694: 46 17 02 01              u8 [a0 + 2] = 0x1
110698: 01                       fallthrough
      :                          @8667
110699: 3a 08 78 12 03           a1 = u64 [0x31278]
110704: 97 89 0d                 a2 = a1 << 0xd
110707: d3 98 08                 a1 = a1 ^ a2
110710: 98 89 07                 a2 = a1 >> 0x7
110713: d3 98 08                 a1 = a1 ^ a2
110716: 97 89 11                 a2 = a1 << 0x11
110719: d3 89 09                 a2 = a2 ^ a1
110722: 84 88 01                 a1 = a1 & 0x1
110725: 3e 09 78 12 03           u64 [0x31278] = a2
110730: 51 08 27                 jump @8673 if a1 == 0
      :                          @8668
110733: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
110737: 52 08 07                 jump @8670 if a1 != 0
      :                          @8669
110740: 28 f7 43 01              jump @13228
      :                          @8670
110744: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
110748: 82 98 10                 a1 = u64 [a2 + 0x10]
110751: 33 0a 04                 a3 = 0x4
110754: ae a8 07                 jump @8672 if a1 >=u a3
      :                          @8671
110757: 28 f7 43 01              jump @13245
      :                          @8672
110761: 82 98 08                 a1 = u64 [a2 + 0x8]
110764: 46 18 03 01              u8 [a1 + 3] = 0x1
110768: 01                       fallthrough
      :                          @8673
110769: 3a 08 78 12 03           a1 = u64 [0x31278]
110774: 97 89 0d                 a2 = a1 << 0xd
110777: d3 98 08                 a1 = a1 ^ a2
110780: 98 89 07                 a2 = a1 >> 0x7
110783: d3 98 08                 a1 = a1 ^ a2
110786: 97 89 11                 a2 = a1 << 0x11
110789: d3 89 09                 a2 = a2 ^ a1
110792: 84 88 01                 a1 = a1 & 0x1
110795: 3e 09 78 12 03           u64 [0x31278] = a2
110800: 51 08 25                 jump @8679 if a1 == 0
      :                          @8674
110803: 82 17 f0 01              a0 = u64 [sp + 0x1f0]
110807: 52 07 07                 jump @8676 if a0 != 0
      :                          @8675
110810: 28 de 43 01              jump @13271
      :                          @8676
110814: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
110818: 82 78 10                 a1 = u64 [a0 + 0x10]
110821: 55 18 05 08              jump @8678 if a1 >=u 5
      :                          @8677
110825: 28 bc 43 01              jump @13254
      :                          @8678
110829: 82 77 08                 a0 = u64 [a0 + 0x8]
110832: 46 17 04 01              u8 [a0 + 4] = 0x1
110836: 01                       fallthrough
      :                          @8679
110837: 3a 07 78 12 03           a0 = u64 [0x31278]
110842: 97 78 0d                 a1 = a0 << 0xd
110845: d3 87 07                 a0 = a0 ^ a1
110848: 98 78 07                 a1 = a0 >> 0x7
110851: d3 87 07                 a0 = a0 ^ a1
110854: 97 78 11                 a1 = a0 << 0x11
110857: d3 78 08                 a1 = a1 ^ a0
110860: 84 77 01                 a0 = a0 & 0x1
110863: 3e 08 78 12 03           u64 [0x31278] = a1
110868: 51 07 28                 jump @8685 if a0 == 0
      :                          @8680
110871: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
110875: 55 18 02 08              jump @8682 if a1 >=u 2
      :                          @8681
110879: 28 89 43 01              jump @13257
      :                          @8682
110883: 82 1a e8 01              a3 = u64 [sp + 0x1e8]
110887: 82 a8 28                 a1 = u64 [a3 + 0x28]
110890: 33 0b 03                 a4 = 0x3
110893: ae b8 07                 jump @8684 if a1 >=u a4
      :                          @8683
110896: 28 5c 43 01              jump @13229
      :                          @8684
110900: 82 a7 20                 a0 = u64 [a3 + 0x20]
110903: 46 17 02 01              u8 [a0 + 2] = 0x1
110907: 01                       fallthrough
      :                          @8685
110908: 3a 07 78 12 03           a0 = u64 [0x31278]
110913: 97 78 0d                 a1 = a0 << 0xd
110916: d3 87 07                 a0 = a0 ^ a1
110919: 98 78 07                 a1 = a0 >> 0x7
110922: d3 87 07                 a0 = a0 ^ a1
110925: 97 78 11                 a1 = a0 << 0x11
110928: d3 78 08                 a1 = a1 ^ a0
110931: 84 77 01                 a0 = a0 & 0x1
110934: 3e 08 78 12 03           u64 [0x31278] = a1
110939: 51 07 26                 jump @8691 if a0 == 0
      :                          @8686
110942: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
110946: 55 18 02 08              jump @8688 if a1 >=u 2
      :                          @8687
110950: 28 42 43 01              jump @13257
      :                          @8688
110954: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
110958: 82 78 28                 a1 = u64 [a0 + 0x28]
110961: 55 18 04 08              jump @8690 if a1 >=u 4
      :                          @8689
110965: 28 32 43 01              jump @13256
      :                          @8690
110969: 82 77 20                 a0 = u64 [a0 + 0x20]
110972: 46 17 03 01              u8 [a0 + 3] = 0x1
110976: 01                       fallthrough
      :                          @8691
110977: 3a 08 78 12 03           a1 = u64 [0x31278]
110982: 97 89 0d                 a2 = a1 << 0xd
110985: d3 98 08                 a1 = a1 ^ a2
110988: 98 89 07                 a2 = a1 >> 0x7
110991: d3 98 08                 a1 = a1 ^ a2
110994: 97 89 11                 a2 = a1 << 0x11
110997: d3 89 09                 a2 = a2 ^ a1
111000: 84 88 01                 a1 = a1 & 0x1
111003: 3e 09 78 12 03           u64 [0x31278] = a2
111008: 51 08 28                 jump @8697 if a1 == 0
      :                          @8692
111011: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
111015: 55 18 02 08              jump @8694 if a1 >=u 2
      :                          @8693
111019: 28 fd 42 01              jump @13257
      :                          @8694
111023: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
111027: 82 98 28                 a1 = u64 [a2 + 0x28]
111030: 33 0a 05                 a3 = 0x5
111033: ae a8 07                 jump @8696 if a1 >=u a3
      :                          @8695
111036: 28 e9 42 01              jump @13254
      :                          @8696
111040: 82 98 20                 a1 = u64 [a2 + 0x20]
111043: 46 18 04 01              u8 [a1 + 4] = 0x1
111047: 01                       fallthrough
      :                          @8697
111048: 3a 08 78 12 03           a1 = u64 [0x31278]
111053: 97 89 0d                 a2 = a1 << 0xd
111056: d3 98 08                 a1 = a1 ^ a2
111059: 98 89 07                 a2 = a1 >> 0x7
111062: d3 98 08                 a1 = a1 ^ a2
111065: 97 89 11                 a2 = a1 << 0x11
111068: d3 89 09                 a2 = a2 ^ a1
111071: 84 88 01                 a1 = a1 & 0x1
111074: 3e 09 78 12 03           u64 [0x31278] = a2
111079: 51 08 28                 jump @8703 if a1 == 0
      :                          @8698
111082: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
111086: 55 18 03 08              jump @8700 if a1 >=u 3
      :                          @8699
111090: 28 b4 42 01              jump @13255
      :                          @8700
111094: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
111098: 82 98 40                 a1 = u64 [a2 + 0x40]
111101: 33 0a 04                 a3 = 0x4
111104: ae a8 07                 jump @8702 if a1 >=u a3
      :                          @8701
111107: 28 89 42 01              jump @13229
      :                          @8702
111111: 82 97 38                 a0 = u64 [a2 + 0x38]
111114: 46 17 03 01              u8 [a0 + 3] = 0x1
111118: 01                       fallthrough
      :                          @8703
111119: 3a 08 78 12 03           a1 = u64 [0x31278]
111124: 97 89 0d                 a2 = a1 << 0xd
111127: d3 98 08                 a1 = a1 ^ a2
111130: 98 89 07                 a2 = a1 >> 0x7
111133: d3 98 08                 a1 = a1 ^ a2
111136: 97 89 11                 a2 = a1 << 0x11
111139: d3 89 09                 a2 = a2 ^ a1
111142: 84 88 01                 a1 = a1 & 0x1
111145: 3e 09 78 12 03           u64 [0x31278] = a2
111150: 51 08 28                 jump @8709 if a1 == 0
      :                          @8704
111153: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
111157: 55 18 03 08              jump @8706 if a1 >=u 3
      :                          @8705
111161: 28 6d 42 01              jump @13255
      :                          @8706
111165: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
111169: 82 98 40                 a1 = u64 [a2 + 0x40]
111172: 33 0a 05                 a3 = 0x5
111175: ae a8 07                 jump @8708 if a1 >=u a3
      :                          @8707
111178: 28 5b 42 01              jump @13254
      :                          @8708
111182: 82 98 38                 a1 = u64 [a2 + 0x38]
111185: 46 18 04 01              u8 [a1 + 4] = 0x1
111189: 01                       fallthrough
      :                          @8709
111190: 3a 08 78 12 03           a1 = u64 [0x31278]
111195: 97 89 0d                 a2 = a1 << 0xd
111198: d3 98 08                 a1 = a1 ^ a2
111201: 98 89 07                 a2 = a1 >> 0x7
111204: d3 98 08                 a1 = a1 ^ a2
111207: 97 89 11                 a2 = a1 << 0x11
111210: d3 89 09                 a2 = a2 ^ a1
111213: 84 88 01                 a1 = a1 & 0x1
111216: 3e 09 78 12 03           u64 [0x31278] = a2
111221: 51 08 28                 jump @8715 if a1 == 0
      :                          @8710
111224: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
111228: 55 18 04 08              jump @8712 if a1 >=u 4
      :                          @8711
111232: 28 27 42 01              jump @13256
      :                          @8712
111236: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
111240: 82 98 58                 a1 = u64 [a2 + 0x58]
111243: 33 0a 05                 a3 = 0x5
111246: ae a8 07                 jump @8714 if a1 >=u a3
      :                          @8713
111249: 28 fb 41 01              jump @13229
      :                          @8714
111253: 82 97 50                 a0 = u64 [a2 + 0x50]
111256: 46 17 04 01              u8 [a0 + 4] = 0x1
111260: 01                       fallthrough
      :                          @8715
111261: 95 17 90 02              a0 = sp + 0x290
111265: 95 18 e0 01              a1 = sp + 0x1e0
111269: 50 20 26 05 a1 41 ff     ra = 1318, jump @4865
      :                          @8716 [@dyn 659]
111276: 82 17 90 02              a0 = u64 [sp + 0x290]
111280: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
111290: aa 87 07                 jump @8718 if a0 == a1
      :                          @8717
111293: 28 bf 32 01              jump @12920
      :                          @8718
111297: 49 21 08 02              u64 [sp + 520] = 0
111301: 49 21 10 02 08           u64 [sp + 528] = 0x8
111306: 49 21 18 02              u64 [sp + 536] = 0
111310: 28 c7 32 01              jump @12921
      :                          @8719 [@dyn 660]
111314: 95 17 90 02              a0 = sp + 0x290
111318: 33 08 05                 a1 = 0x5
111321: 50 20 2a 05 5f b1 fe     ra = 1322, jump @1882
      :                          @8720 [@dyn 661]
111328: 95 17 e0 01              a0 = sp + 0x1e0
111332: 95 18 90 02              a1 = sp + 0x290
111336: 33 09 05                 a2 = 0x5
111339: 50 20 2c 05 98 b2 fe     ra = 1324, jump @1907
      :                          @8721 [@dyn 662]
111346: 3a 08 78 12 03           a1 = u64 [0x31278]
111351: 97 89 0d                 a2 = a1 << 0xd
111354: d3 98 08                 a1 = a1 ^ a2
111357: 98 89 07                 a2 = a1 >> 0x7
111360: d3 98 08                 a1 = a1 ^ a2
111363: 97 89 11                 a2 = a1 << 0x11
111366: d3 89 09                 a2 = a2 ^ a1
111369: 84 88 01                 a1 = a1 & 0x1
111372: 3e 09 78 12 03           u64 [0x31278] = a2
111377: 51 08 27                 jump @8727 if a1 == 0
      :                          @8722
111380: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
111384: 52 08 07                 jump @8724 if a1 != 0
      :                          @8723
111387: 28 a8 41 01              jump @13280
      :                          @8724
111391: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
111395: 82 98 10                 a1 = u64 [a2 + 0x10]
111398: 33 0a 02                 a3 = 0x2
111401: ae a8 07                 jump @8726 if a1 >=u a3
      :                          @8725
111404: 28 69 41 01              jump @13238
      :                          @8726
111408: 82 98 08                 a1 = u64 [a2 + 0x8]
111411: 46 18 01 01              u8 [a1 + 1] = 0x1
111415: 01                       fallthrough
      :                          @8727
111416: 3a 08 78 12 03           a1 = u64 [0x31278]
111421: 97 89 0d                 a2 = a1 << 0xd
111424: d3 98 08                 a1 = a1 ^ a2
111427: 98 89 07                 a2 = a1 >> 0x7
111430: d3 98 08                 a1 = a1 ^ a2
111433: 97 89 11                 a2 = a1 << 0x11
111436: d3 89 09                 a2 = a2 ^ a1
111439: 84 88 01                 a1 = a1 & 0x1
111442: 3e 09 78 12 03           u64 [0x31278] = a2
111447: 51 08 25                 jump @8733 if a1 == 0
      :                          @8728
111450: 82 17 f0 01              a0 = u64 [sp + 0x1f0]
111454: 52 07 07                 jump @8730 if a0 != 0
      :                          @8729
111457: 28 57 41 01              jump @13271
      :                          @8730
111461: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
111465: 82 78 10                 a1 = u64 [a0 + 0x10]
111468: 55 18 03 08              jump @8732 if a1 >=u 3
      :                          @8731
111472: 28 26 41 01              jump @13239
      :                          @8732
111476: 82 77 08                 a0 = u64 [a0 + 0x8]
111479: 46 17 02 01              u8 [a0 + 2] = 0x1
111483: 01                       fallthrough
      :                          @8733
111484: 3a 08 78 12 03           a1 = u64 [0x31278]
111489: 97 89 0d                 a2 = a1 << 0xd
111492: d3 98 08                 a1 = a1 ^ a2
111495: 98 89 07                 a2 = a1 >> 0x7
111498: d3 98 08                 a1 = a1 ^ a2
111501: 97 89 11                 a2 = a1 << 0x11
111504: d3 89 09                 a2 = a2 ^ a1
111507: 84 88 01                 a1 = a1 & 0x1
111510: 3e 09 78 12 03           u64 [0x31278] = a2
111515: 51 08 27                 jump @8739 if a1 == 0
      :                          @8734
111518: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
111522: 52 08 07                 jump @8736 if a1 != 0
      :                          @8735
111525: 28 1e 41 01              jump @13280
      :                          @8736
111529: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
111533: 82 98 10                 a1 = u64 [a2 + 0x10]
111536: 33 0a 04                 a3 = 0x4
111539: ae a8 07                 jump @8738 if a1 >=u a3
      :                          @8737
111542: 28 f1 40 01              jump @13256
      :                          @8738
111546: 82 98 08                 a1 = u64 [a2 + 0x8]
111549: 46 18 03 01              u8 [a1 + 3] = 0x1
111553: 01                       fallthrough
      :                          @8739
111554: 3a 08 78 12 03           a1 = u64 [0x31278]
111559: 97 89 0d                 a2 = a1 << 0xd
111562: d3 98 08                 a1 = a1 ^ a2
111565: 98 89 07                 a2 = a1 >> 0x7
111568: d3 98 08                 a1 = a1 ^ a2
111571: 97 89 11                 a2 = a1 << 0x11
111574: d3 89 09                 a2 = a2 ^ a1
111577: 84 88 01                 a1 = a1 & 0x1
111580: 3e 09 78 12 03           u64 [0x31278] = a2
111585: 51 08 25                 jump @8745 if a1 == 0
      :                          @8740
111588: 82 17 f0 01              a0 = u64 [sp + 0x1f0]
111592: 52 07 07                 jump @8742 if a0 != 0
      :                          @8741
111595: 28 d9 40 01              jump @13281
      :                          @8742
111599: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
111603: 82 78 10                 a1 = u64 [a0 + 0x10]
111606: 55 18 05 08              jump @8744 if a1 >=u 5
      :                          @8743
111610: 28 ab 40 01              jump @13254
      :                          @8744
111614: 82 77 08                 a0 = u64 [a0 + 0x8]
111617: 46 17 04 01              u8 [a0 + 4] = 0x1
111621: 01                       fallthrough
      :                          @8745
111622: 3a 08 78 12 03           a1 = u64 [0x31278]
111627: 97 89 0d                 a2 = a1 << 0xd
111630: d3 98 08                 a1 = a1 ^ a2
111633: 98 89 07                 a2 = a1 >> 0x7
111636: d3 98 08                 a1 = a1 ^ a2
111639: 97 89 11                 a2 = a1 << 0x11
111642: d3 89 09                 a2 = a2 ^ a1
111645: 84 88 01                 a1 = a1 & 0x1
111648: 3e 09 78 12 03           u64 [0x31278] = a2
111653: 51 08 24                 jump @8751 if a1 == 0
      :                          @8746
111656: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
111660: 55 18 02 08              jump @8748 if a1 >=u 2
      :                          @8747
111664: 28 78 40 01              jump @13257
      :                          @8748
111668: 82 18 e8 01              a1 = u64 [sp + 0x1e8]
111672: 82 89 28                 a2 = u64 [a1 + 0x28]
111675: 52 09 07                 jump @8750 if a2 != 0
      :                          @8749
111678: 28 56 40 01              jump @13237
      :                          @8750
111682: 82 88 20                 a1 = u64 [a1 + 0x20]
111685: 46 08 01                 u8 [a1 + 0] = 0x1
111688: 01                       fallthrough
      :                          @8751
111689: 3a 08 78 12 03           a1 = u64 [0x31278]
111694: 97 89 0d                 a2 = a1 << 0xd
111697: d3 98 08                 a1 = a1 ^ a2
111700: 98 89 07                 a2 = a1 >> 0x7
111703: d3 98 08                 a1 = a1 ^ a2
111706: 97 89 11                 a2 = a1 << 0x11
111709: d3 89 09                 a2 = a2 ^ a1
111712: 84 88 01                 a1 = a1 & 0x1
111715: 3e 09 78 12 03           u64 [0x31278] = a2
111720: 51 08 28                 jump @8757 if a1 == 0
      :                          @8752
111723: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
111727: 55 18 02 08              jump @8754 if a1 >=u 2
      :                          @8753
111731: 28 35 40 01              jump @13257
      :                          @8754
111735: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
111739: 82 98 28                 a1 = u64 [a2 + 0x28]
111742: 33 0a 03                 a3 = 0x3
111745: ae a8 07                 jump @8756 if a1 >=u a3
      :                          @8755
111748: 28 08 40 01              jump @13229
      :                          @8756
111752: 82 97 20                 a0 = u64 [a2 + 0x20]
111755: 46 17 02 01              u8 [a0 + 2] = 0x1
111759: 01                       fallthrough
      :                          @8757
111760: 3a 08 78 12 03           a1 = u64 [0x31278]
111765: 97 89 0d                 a2 = a1 << 0xd
111768: d3 98 08                 a1 = a1 ^ a2
111771: 98 89 07                 a2 = a1 >> 0x7
111774: d3 98 08                 a1 = a1 ^ a2
111777: 97 89 11                 a2 = a1 << 0x11
111780: d3 89 09                 a2 = a2 ^ a1
111783: 84 88 01                 a1 = a1 & 0x1
111786: 3e 09 78 12 03           u64 [0x31278] = a2
111791: 51 08 28                 jump @8763 if a1 == 0
      :                          @8758
111794: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
111798: 55 18 02 08              jump @8760 if a1 >=u 2
      :                          @8759
111802: 28 ee 3f 01              jump @13257
      :                          @8760
111806: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
111810: 82 98 28                 a1 = u64 [a2 + 0x28]
111813: 33 0a 04                 a3 = 0x4
111816: ae a8 07                 jump @8762 if a1 >=u a3
      :                          @8761
111819: 28 dc 3f 01              jump @13256
      :                          @8762
111823: 82 98 20                 a1 = u64 [a2 + 0x20]
111826: 46 18 03 01              u8 [a1 + 3] = 0x1
111830: 01                       fallthrough
      :                          @8763
111831: 3a 08 78 12 03           a1 = u64 [0x31278]
111836: 97 89 0d                 a2 = a1 << 0xd
111839: d3 98 08                 a1 = a1 ^ a2
111842: 98 89 07                 a2 = a1 >> 0x7
111845: d3 98 08                 a1 = a1 ^ a2
111848: 97 89 11                 a2 = a1 << 0x11
111851: d3 89 09                 a2 = a2 ^ a1
111854: 84 88 01                 a1 = a1 & 0x1
111857: 3e 09 78 12 03           u64 [0x31278] = a2
111862: 51 08 26                 jump @8769 if a1 == 0
      :                          @8764
111865: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
111869: 55 18 02 08              jump @8766 if a1 >=u 2
      :                          @8765
111873: 28 a7 3f 01              jump @13257
      :                          @8766
111877: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
111881: 82 78 28                 a1 = u64 [a0 + 0x28]
111884: 55 18 05 08              jump @8768 if a1 >=u 5
      :                          @8767
111888: 28 95 3f 01              jump @13254
      :                          @8768
111892: 82 77 20                 a0 = u64 [a0 + 0x20]
111895: 46 17 04 01              u8 [a0 + 4] = 0x1
111899: 01                       fallthrough
      :                          @8769
111900: 3a 08 78 12 03           a1 = u64 [0x31278]
111905: 97 89 0d                 a2 = a1 << 0xd
111908: d3 98 08                 a1 = a1 ^ a2
111911: 98 89 07                 a2 = a1 >> 0x7
111914: d3 98 08                 a1 = a1 ^ a2
111917: 97 89 11                 a2 = a1 << 0x11
111920: d3 89 09                 a2 = a2 ^ a1
111923: 84 88 01                 a1 = a1 & 0x1
111926: 3e 09 78 12 03           u64 [0x31278] = a2
111931: 51 08 24                 jump @8775 if a1 == 0
      :                          @8770
111934: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
111938: 55 18 03 08              jump @8772 if a1 >=u 3
      :                          @8771
111942: 28 60 3f 01              jump @13255
      :                          @8772
111946: 82 18 e8 01              a1 = u64 [sp + 0x1e8]
111950: 82 89 40                 a2 = u64 [a1 + 0x40]
111953: 52 09 07                 jump @8774 if a2 != 0
      :                          @8773
111956: 28 40 3f 01              jump @13237
      :                          @8774
111960: 82 88 38                 a1 = u64 [a1 + 0x38]
111963: 46 08 01                 u8 [a1 + 0] = 0x1
111966: 01                       fallthrough
      :                          @8775
111967: 3a 08 78 12 03           a1 = u64 [0x31278]
111972: 97 89 0d                 a2 = a1 << 0xd
111975: d3 98 08                 a1 = a1 ^ a2
111978: 98 89 07                 a2 = a1 >> 0x7
111981: d3 98 08                 a1 = a1 ^ a2
111984: 97 89 11                 a2 = a1 << 0x11
111987: d3 89 09                 a2 = a2 ^ a1
111990: 84 88 01                 a1 = a1 & 0x1
111993: 3e 09 78 12 03           u64 [0x31278] = a2
111998: 51 08 26                 jump @8781 if a1 == 0
      :                          @8776
112001: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
112005: 55 18 03 08              jump @8778 if a1 >=u 3
      :                          @8777
112009: 28 1d 3f 01              jump @13255
      :                          @8778
112013: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
112017: 82 78 40                 a1 = u64 [a0 + 0x40]
112020: 55 18 02 08              jump @8780 if a1 >=u 2
      :                          @8779
112024: 28 10 3f 01              jump @13257
      :                          @8780
112028: 82 77 38                 a0 = u64 [a0 + 0x38]
112031: 46 17 01 01              u8 [a0 + 1] = 0x1
112035: 01                       fallthrough
      :                          @8781
112036: 3a 07 78 12 03           a0 = u64 [0x31278]
112041: 97 78 0d                 a1 = a0 << 0xd
112044: d3 87 07                 a0 = a0 ^ a1
112047: 98 78 07                 a1 = a0 >> 0x7
112050: d3 87 07                 a0 = a0 ^ a1
112053: 97 78 11                 a1 = a0 << 0x11
112056: d3 78 08                 a1 = a1 ^ a0
112059: 84 77 01                 a0 = a0 & 0x1
112062: 3e 08 78 12 03           u64 [0x31278] = a1
112067: 51 07 28                 jump @8787 if a0 == 0
      :                          @8782
112070: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
112074: 55 18 03 08              jump @8784 if a1 >=u 3
      :                          @8783
112078: 28 d8 3e 01              jump @13255
      :                          @8784
112082: 82 1a e8 01              a3 = u64 [sp + 0x1e8]
112086: 82 a8 40                 a1 = u64 [a3 + 0x40]
112089: 33 0b 04                 a4 = 0x4
112092: ae b8 07                 jump @8786 if a1 >=u a4
      :                          @8785
112095: 28 ad 3e 01              jump @13229
      :                          @8786
112099: 82 a7 38                 a0 = u64 [a3 + 0x38]
112102: 46 17 03 01              u8 [a0 + 3] = 0x1
112106: 01                       fallthrough
      :                          @8787
112107: 3a 07 78 12 03           a0 = u64 [0x31278]
112112: 97 78 0d                 a1 = a0 << 0xd
112115: d3 87 07                 a0 = a0 ^ a1
112118: 98 78 07                 a1 = a0 >> 0x7
112121: d3 87 07                 a0 = a0 ^ a1
112124: 97 78 11                 a1 = a0 << 0x11
112127: d3 78 08                 a1 = a1 ^ a0
112130: 84 77 01                 a0 = a0 & 0x1
112133: 3e 08 78 12 03           u64 [0x31278] = a1
112138: 51 07 26                 jump @8793 if a0 == 0
      :                          @8788
112141: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
112145: 55 18 03 08              jump @8790 if a1 >=u 3
      :                          @8789
112149: 28 91 3e 01              jump @13255
      :                          @8790
112153: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
112157: 82 78 40                 a1 = u64 [a0 + 0x40]
112160: 55 18 05 08              jump @8792 if a1 >=u 5
      :                          @8791
112164: 28 81 3e 01              jump @13254
      :                          @8792
112168: 82 77 38                 a0 = u64 [a0 + 0x38]
112171: 46 17 04 01              u8 [a0 + 4] = 0x1
112175: 01                       fallthrough
      :                          @8793
112176: 3a 08 78 12 03           a1 = u64 [0x31278]
112181: 97 89 0d                 a2 = a1 << 0xd
112184: d3 98 08                 a1 = a1 ^ a2
112187: 98 89 07                 a2 = a1 >> 0x7
112190: d3 98 08                 a1 = a1 ^ a2
112193: 97 89 11                 a2 = a1 << 0x11
112196: d3 89 09                 a2 = a2 ^ a1
112199: 84 88 01                 a1 = a1 & 0x1
112202: 3e 09 78 12 03           u64 [0x31278] = a2
112207: 51 08 24                 jump @8799 if a1 == 0
      :                          @8794
112210: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
112214: 55 18 04 08              jump @8796 if a1 >=u 4
      :                          @8795
112218: 28 4d 3e 01              jump @13256
      :                          @8796
112222: 82 18 e8 01              a1 = u64 [sp + 0x1e8]
112226: 82 89 58                 a2 = u64 [a1 + 0x58]
112229: 52 09 07                 jump @8798 if a2 != 0
      :                          @8797
112232: 28 2c 3e 01              jump @13237
      :                          @8798
112236: 82 88 50                 a1 = u64 [a1 + 0x50]
112239: 46 08 01                 u8 [a1 + 0] = 0x1
112242: 01                       fallthrough
      :                          @8799
112243: 3a 08 78 12 03           a1 = u64 [0x31278]
112248: 97 89 0d                 a2 = a1 << 0xd
112251: d3 98 08                 a1 = a1 ^ a2
112254: 98 89 07                 a2 = a1 >> 0x7
112257: d3 98 08                 a1 = a1 ^ a2
112260: 97 89 11                 a2 = a1 << 0x11
112263: d3 89 09                 a2 = a2 ^ a1
112266: 84 88 01                 a1 = a1 & 0x1
112269: 3e 09 78 12 03           u64 [0x31278] = a2
112274: 51 08 26                 jump @8805 if a1 == 0
      :                          @8800
112277: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
112281: 55 18 04 08              jump @8802 if a1 >=u 4
      :                          @8801
112285: 28 0a 3e 01              jump @13256
      :                          @8802
112289: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
112293: 82 78 58                 a1 = u64 [a0 + 0x58]
112296: 55 18 02 08              jump @8804 if a1 >=u 2
      :                          @8803
112300: 28 fc 3d 01              jump @13257
      :                          @8804
112304: 82 77 50                 a0 = u64 [a0 + 0x50]
112307: 46 17 01 01              u8 [a0 + 1] = 0x1
112311: 01                       fallthrough
      :                          @8805
112312: 3a 08 78 12 03           a1 = u64 [0x31278]
112317: 97 89 0d                 a2 = a1 << 0xd
112320: d3 98 08                 a1 = a1 ^ a2
112323: 98 89 07                 a2 = a1 >> 0x7
112326: d3 98 08                 a1 = a1 ^ a2
112329: 97 89 11                 a2 = a1 << 0x11
112332: d3 89 09                 a2 = a2 ^ a1
112335: 84 88 01                 a1 = a1 & 0x1
112338: 3e 09 78 12 03           u64 [0x31278] = a2
112343: 51 08 28                 jump @8811 if a1 == 0
      :                          @8806
112346: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
112350: 55 18 04 08              jump @8808 if a1 >=u 4
      :                          @8807
112354: 28 c5 3d 01              jump @13256
      :                          @8808
112358: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
112362: 82 98 58                 a1 = u64 [a2 + 0x58]
112365: 33 0a 03                 a3 = 0x3
112368: ae a8 07                 jump @8810 if a1 >=u a3
      :                          @8809
112371: 28 b3 3d 01              jump @13255
      :                          @8810
112375: 82 98 50                 a1 = u64 [a2 + 0x50]
112378: 46 18 02 01              u8 [a1 + 2] = 0x1
112382: 01                       fallthrough
      :                          @8811
112383: 3a 08 78 12 03           a1 = u64 [0x31278]
112388: 97 89 0d                 a2 = a1 << 0xd
112391: d3 98 08                 a1 = a1 ^ a2
112394: 98 89 07                 a2 = a1 >> 0x7
112397: d3 98 08                 a1 = a1 ^ a2
112400: 97 89 11                 a2 = a1 << 0x11
112403: d3 89 09                 a2 = a2 ^ a1
112406: 84 88 01                 a1 = a1 & 0x1
112409: 3e 09 78 12 03           u64 [0x31278] = a2
112414: 51 08 28                 jump @8817 if a1 == 0
      :                          @8812
112417: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
112421: 55 18 04 08              jump @8814 if a1 >=u 4
      :                          @8813
112425: 28 7e 3d 01              jump @13256
      :                          @8814
112429: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
112433: 82 98 58                 a1 = u64 [a2 + 0x58]
112436: 33 0a 05                 a3 = 0x5
112439: ae a8 07                 jump @8816 if a1 >=u a3
      :                          @8815
112442: 28 52 3d 01              jump @13229
      :                          @8816
112446: 82 97 50                 a0 = u64 [a2 + 0x50]
112449: 46 17 04 01              u8 [a0 + 4] = 0x1
112453: 01                       fallthrough
      :                          @8817
112454: 3a 08 78 12 03           a1 = u64 [0x31278]
112459: 97 89 0d                 a2 = a1 << 0xd
112462: d3 98 08                 a1 = a1 ^ a2
112465: 98 89 07                 a2 = a1 >> 0x7
112468: d3 98 08                 a1 = a1 ^ a2
112471: 97 89 11                 a2 = a1 << 0x11
112474: d3 89 09                 a2 = a2 ^ a1
112477: 84 88 01                 a1 = a1 & 0x1
112480: 3e 09 78 12 03           u64 [0x31278] = a2
112485: 51 08 24                 jump @8823 if a1 == 0
      :                          @8818
112488: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
112492: 55 18 05 08              jump @8820 if a1 >=u 5
      :                          @8819
112496: 28 35 3d 01              jump @13254
      :                          @8820
112500: 82 18 e8 01              a1 = u64 [sp + 0x1e8]
112504: 82 89 70                 a2 = u64 [a1 + 0x70]
112507: 52 09 07                 jump @8822 if a2 != 0
      :                          @8821
112510: 28 16 3d 01              jump @13237
      :                          @8822
112514: 82 88 68                 a1 = u64 [a1 + 0x68]
112517: 46 08 01                 u8 [a1 + 0] = 0x1
112520: 01                       fallthrough
      :                          @8823
112521: 3a 08 78 12 03           a1 = u64 [0x31278]
112526: 97 89 0d                 a2 = a1 << 0xd
112529: d3 98 08                 a1 = a1 ^ a2
112532: 98 89 07                 a2 = a1 >> 0x7
112535: d3 98 08                 a1 = a1 ^ a2
112538: 97 89 11                 a2 = a1 << 0x11
112541: d3 89 09                 a2 = a2 ^ a1
112544: 84 88 01                 a1 = a1 & 0x1
112547: 3e 09 78 12 03           u64 [0x31278] = a2
112552: 51 08 26                 jump @8829 if a1 == 0
      :                          @8824
112555: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
112559: 55 18 05 08              jump @8826 if a1 >=u 5
      :                          @8825
112563: 28 f2 3c 01              jump @13254
      :                          @8826
112567: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
112571: 82 78 70                 a1 = u64 [a0 + 0x70]
112574: 55 18 02 08              jump @8828 if a1 >=u 2
      :                          @8827
112578: 28 e6 3c 01              jump @13257
      :                          @8828
112582: 82 77 68                 a0 = u64 [a0 + 0x68]
112585: 46 17 01 01              u8 [a0 + 1] = 0x1
112589: 01                       fallthrough
      :                          @8829
112590: 3a 08 78 12 03           a1 = u64 [0x31278]
112595: 97 89 0d                 a2 = a1 << 0xd
112598: d3 98 08                 a1 = a1 ^ a2
112601: 98 89 07                 a2 = a1 >> 0x7
112604: d3 98 08                 a1 = a1 ^ a2
112607: 97 89 11                 a2 = a1 << 0x11
112610: d3 89 09                 a2 = a2 ^ a1
112613: 84 88 01                 a1 = a1 & 0x1
112616: 3e 09 78 12 03           u64 [0x31278] = a2
112621: 51 08 28                 jump @8835 if a1 == 0
      :                          @8830
112624: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
112628: 55 18 05 08              jump @8832 if a1 >=u 5
      :                          @8831
112632: 28 ad 3c 01              jump @13254
      :                          @8832
112636: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
112640: 82 98 70                 a1 = u64 [a2 + 0x70]
112643: 33 0a 03                 a3 = 0x3
112646: ae a8 07                 jump @8834 if a1 >=u a3
      :                          @8833
112649: 28 9d 3c 01              jump @13255
      :                          @8834
112653: 82 98 68                 a1 = u64 [a2 + 0x68]
112656: 46 18 02 01              u8 [a1 + 2] = 0x1
112660: 01                       fallthrough
      :                          @8835
112661: 3a 08 78 12 03           a1 = u64 [0x31278]
112666: 97 89 0d                 a2 = a1 << 0xd
112669: d3 98 08                 a1 = a1 ^ a2
112672: 98 89 07                 a2 = a1 >> 0x7
112675: d3 98 08                 a1 = a1 ^ a2
112678: 97 89 11                 a2 = a1 << 0x11
112681: d3 89 09                 a2 = a2 ^ a1
112684: 84 88 01                 a1 = a1 & 0x1
112687: 3e 09 78 12 03           u64 [0x31278] = a2
112692: 51 08 28                 jump @8841 if a1 == 0
      :                          @8836
112695: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
112699: 55 18 05 08              jump @8838 if a1 >=u 5
      :                          @8837
112703: 28 66 3c 01              jump @13254
      :                          @8838
112707: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
112711: 82 78 70                 a1 = u64 [a0 + 0x70]
112714: 33 09 04                 a2 = 0x4
112717: ae 98 07                 jump @8840 if a1 >=u a2
      :                          @8839
112720: 28 57 3c 01              jump @13256
      :                          @8840
112724: 82 77 68                 a0 = u64 [a0 + 0x68]
112727: 46 17 03 01              u8 [a0 + 3] = 0x1
112731: 01                       fallthrough
      :                          @8841
112732: 95 17 08 02              a0 = sp + 0x208
112736: 95 18 e0 01              a1 = sp + 0x1e0
112740: 95 16 08 02              s1 = sp + 0x208
112744: 50 20 2e 05 d9 3e ff     ra = 1326, jump @4935
      :                          @8842 [@dyn 663]
112751: 7b 16 20 01              u64 [sp + 0x120] = s1
112755: 33 07 14 02              a0 = 0x214
112759: 7b 17 28 01              u64 [sp + 0x128] = a0
112763: 33 07 d8 08 01           a0 = 0x108d8
112768: 7b 17 90 02              u64 [sp + 0x290] = a0
112772: 49 21 98 02 01           u64 [sp + 664] = 0x1
112777: 49 21 b0 02              u64 [sp + 688] = 0
112781: 95 18 20 01              a1 = sp + 0x120
112785: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
112789: 49 21 a8 02 01           u64 [sp + 680] = 0x1
112794: 95 17 38 02              a0 = sp + 0x238
112798: 95 18 90 02              a1 = sp + 0x290
112802: 50 20 30 05 58 97 fe     ra = 1328, jump @1503
      :                          @8843 [@dyn 664]
112809: 82 16 40 02              s1 = u64 [sp + 0x240]
112813: 82 1b 48 02              a4 = u64 [sp + 0x248]
112817: 82 17 38 02              a0 = u64 [sp + 0x238]
112821: 7b 17 70                 u64 [sp + 0x70] = a0
112824: 33 07 02                 a0 = 0x2
112827: 33 08                    a1 = 0
112829: 33 09                    a2 = 0
112831: 64 6a                    a3 = s1
112833: 33 00 32 05              ra = 0x532
112837: 0a 64                    ecalli 100 // 'log'
112839: 01                       fallthrough
      :                          @8844 [@dyn 665]
112840: 82 1c 70                 a5 = u64 [sp + 0x70]
112843: 82 17 68                 a0 = u64 [sp + 0x68]
112846: c8 c7 07                 a0 = a0 + a5
112849: 33 08 00 00 ff           a1 = 0xffffffffffff0000
112854: ae 87 06                 jump @8846 if a0 >=u a1
      :                          @8845
112857: 28 cb 74                 jump @10544
      :                          @8846
112860: 33 07 c0 22 03           a0 = 0x322c0
112865: 95 77 00 00 01           a0 = a0 + 0x10000
112870: 01                       fallthrough
      :                          @8847
112871: 82 78                    a1 = u64 [a0]
112873: c9 87 09                 a2 = a0 - a1
112876: aa 69 06                 jump @8849 if a2 == s1
      :                          @8848
112879: 28 b5 74                 jump @10544
      :                          @8849
112882: c9 c8 09                 a2 = a1 - a5
112885: 01                       fallthrough
      :                          @8850
112886: 82 7a                    a3 = u64 [a0]
112888: ab 8a ef                 jump @8847 if a3 != a1
      :                          @8851
112891: 7b 79                    u64 [a0] = a2
112893: 33 0b                    a4 = 0
112895: 01                       fallthrough
      :                          @8852
112896: ab 8a e7                 jump @8847 if a3 != a1
      :                          @8853
112899: 28 a1 74                 jump @10544
      :                          @8854 [@dyn 666]
112902: 95 17 90 02              a0 = sp + 0x290
112906: 33 08 04                 a1 = 0x4
112909: 50 20 36 05 2b ab fe     ra = 1334, jump @1882
      :                          @8855 [@dyn 667]
112916: 95 17 08 02              a0 = sp + 0x208
112920: 95 18 90 02              a1 = sp + 0x290
112924: 33 09 04                 a2 = 0x4
112927: 50 20 38 05 64 ac fe     ra = 1336, jump @1907
      :                          @8856 [@dyn 668]
112934: 33 04 04                 t2 = 0x4
112937: 33 07                    a0 = 0
112939: 33 0c 10                 a5 = 0x10
112942: 33 0a 78 12 03           a3 = 0x31278
112947: 33 02 02                 t0 = 0x2
112950: 33 03 03                 t1 = 0x3
112953: 33 06 70                 s1 = 0x70
112956: 01                       fallthrough
      :                          @8857
112957: 3a 08 78 12 03           a1 = u64 [0x31278]
112962: 97 89 0d                 a2 = a1 << 0xd
112965: d3 98 08                 a1 = a1 ^ a2
112968: 98 8b 07                 a4 = a1 >> 0x7
112971: d3 8b 0b                 a4 = a4 ^ a1
112974: 97 b8 11                 a1 = a4 << 0x11
112977: d3 b8 08                 a1 = a1 ^ a4
112980: 3e 08 78 12 03           u64 [0x31278] = a1
112985: 82 18 18 02              a1 = u64 [sp + 0x218]
112989: ac 87 07                 jump @8859 if a0 <u a1
      :                          @8858
112992: 28 2c 3b 01              jump @13229
      :                          @8859
112996: 82 18 10 02              a1 = u64 [sp + 0x210]
113000: c8 c8 08                 a1 = a1 + a5
113003: 82 89                    a2 = u64 [a1]
113005: 52 09 07                 jump @8861 if a2 != 0
      :                          @8860
113008: 28 23 3b 01              jump @13236
      :                          @8861
113012: 82 88 f8                 a1 = u64 [a1 + 0xfffffffffffffff8]
113015: 84 bb 01                 a4 = a4 & 0x1
113018: 78 8b                    u8 [a1] = a4
113020: 3a 08 78 12 03           a1 = u64 [0x31278]
113025: 97 89 0d                 a2 = a1 << 0xd
113028: d3 98 08                 a1 = a1 ^ a2
113031: 98 8b 07                 a4 = a1 >> 0x7
113034: d3 8b 0b                 a4 = a4 ^ a1
113037: 97 b8 11                 a1 = a4 << 0x11
113040: d3 b8 08                 a1 = a1 ^ a4
113043: 3e 08 78 12 03           u64 [0x31278] = a1
113048: 82 18 18 02              a1 = u64 [sp + 0x218]
113052: ac 87 07                 jump @8863 if a0 <u a1
      :                          @8862
113055: 28 ed 3a 01              jump @13229
      :                          @8863
113059: 82 19 10 02              a2 = u64 [sp + 0x210]
113063: c8 c9 09                 a2 = a2 + a5
113066: 82 98                    a1 = u64 [a2]
113068: ae 28 07                 jump @8865 if a1 >=u t0
      :                          @8864
113071: 28 14 3a 01              jump @13209
      :                          @8865
113075: 82 98 f8                 a1 = u64 [a2 + 0xfffffffffffffff8]
113078: 84 bb 01                 a4 = a4 & 0x1
113081: 78 8b 01                 u8 [a1 + 0x1] = a4
113084: 3a 08 78 12 03           a1 = u64 [0x31278]
113089: 97 89 0d                 a2 = a1 << 0xd
113092: d3 98 08                 a1 = a1 ^ a2
113095: 98 8b 07                 a4 = a1 >> 0x7
113098: d3 8b 0b                 a4 = a4 ^ a1
113101: 97 b8 11                 a1 = a4 << 0x11
113104: d3 b8 08                 a1 = a1 ^ a4
113107: 3e 08 78 12 03           u64 [0x31278] = a1
113112: 82 18 18 02              a1 = u64 [sp + 0x218]
113116: ac 87 07                 jump @8867 if a0 <u a1
      :                          @8866
113119: 28 ad 3a 01              jump @13229
      :                          @8867
113123: 82 19 10 02              a2 = u64 [sp + 0x210]
113127: c8 c9 09                 a2 = a2 + a5
113130: 82 98                    a1 = u64 [a2]
113132: ae 38 07                 jump @8869 if a1 >=u t1
      :                          @8868
113135: 28 d6 39 01              jump @13211
      :                          @8869
113139: 82 98 f8                 a1 = u64 [a2 + 0xfffffffffffffff8]
113142: 84 bb 01                 a4 = a4 & 0x1
113145: 78 8b 02                 u8 [a1 + 0x2] = a4
113148: 3a 08 78 12 03           a1 = u64 [0x31278]
113153: 97 89 0d                 a2 = a1 << 0xd
113156: d3 98 08                 a1 = a1 ^ a2
113159: 98 8b 07                 a4 = a1 >> 0x7
113162: d3 8b 0b                 a4 = a4 ^ a1
113165: 97 b8 11                 a1 = a4 << 0x11
113168: d3 b8 08                 a1 = a1 ^ a4
113171: 3e 08 78 12 03           u64 [0x31278] = a1
113176: 82 18 18 02              a1 = u64 [sp + 0x218]
113180: ac 87 07                 jump @8871 if a0 <u a1
      :                          @8870
113183: 28 6d 3a 01              jump @13229
      :                          @8871
113187: 82 19 10 02              a2 = u64 [sp + 0x210]
113191: c8 c9 09                 a2 = a2 + a5
113194: 82 98                    a1 = u64 [a2]
113196: ae 48 07                 jump @8873 if a1 >=u t2
      :                          @8872
113199: 28 95 39 01              jump @13210
      :                          @8873
113203: 82 98 f8                 a1 = u64 [a2 + 0xfffffffffffffff8]
113206: 84 bb 01                 a4 = a4 & 0x1
113209: 78 8b 03                 u8 [a1 + 0x3] = a4
113212: 95 cc 18                 a5 = a5 + 0x18
113215: 95 77 01                 a0 = a0 + 0x1
113218: ab 6c fb fe              jump @8857 if a5 != s1
      :                          @8874
113222: 95 17 08 02              a0 = sp + 0x208
113226: 50 20 3a 05 3e 42 ff     ra = 1338, jump @5036
      :                          @8875 [@dyn 669]
113233: 7b 17 20 01              u64 [sp + 0x120] = a0
113237: 95 17 20 01              a0 = sp + 0x120
113241: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
113245: 33 07 2c 0c              a0 = 0xc2c
113249: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
113253: 33 07 00 09 01           a0 = 0x10900
113258: 7b 17 90 02              u64 [sp + 0x290] = a0
113262: 49 21 98 02 01           u64 [sp + 664] = 0x1
113267: 49 21 b0 02              u64 [sp + 688] = 0
113271: 95 18 e0 01              a1 = sp + 0x1e0
113275: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
113279: 49 21 a8 02 01           u64 [sp + 680] = 0x1
113284: 95 17 38 02              a0 = sp + 0x238
113288: 95 18 90 02              a1 = sp + 0x290
113292: 50 20 3c 05 6e 95 fe     ra = 1340, jump @1503
      :                          @8876 [@dyn 670]
113299: 82 16 40 02              s1 = u64 [sp + 0x240]
113303: 82 1b 48 02              a4 = u64 [sp + 0x248]
113307: 82 17 38 02              a0 = u64 [sp + 0x238]
113311: 7b 17 70                 u64 [sp + 0x70] = a0
113314: 33 07 02                 a0 = 0x2
113317: 33 08                    a1 = 0
113319: 33 09                    a2 = 0
113321: 64 6a                    a3 = s1
113323: 33 00 3e 05              ra = 0x53e
113327: 0a 64                    ecalli 100 // 'log'
113329: 01                       fallthrough
      :                          @8877 [@dyn 671]
113330: 82 1c 70                 a5 = u64 [sp + 0x70]
113333: 82 17 68                 a0 = u64 [sp + 0x68]
113336: c8 c7 07                 a0 = a0 + a5
113339: 33 08 00 00 ff           a1 = 0xffffffffffff0000
113344: ae 87 07                 jump @8879 if a0 >=u a1
      :                          @8878
113347: 28 b5 27 01              jump @12867
      :                          @8879
113351: 33 07 c0 22 03           a0 = 0x322c0
113356: 95 77 00 00 01           a0 = a0 + 0x10000
113361: 01                       fallthrough
      :                          @8880
113362: 82 78                    a1 = u64 [a0]
113364: c9 87 09                 a2 = a0 - a1
113367: aa 69 07                 jump @8882 if a2 == s1
      :                          @8881
113370: 28 9e 27 01              jump @12867
      :                          @8882
113374: c9 c8 09                 a2 = a1 - a5
113377: 01                       fallthrough
      :                          @8883
113378: 82 7a                    a3 = u64 [a0]
113380: ab 8a ee                 jump @8880 if a3 != a1
      :                          @8884
113383: 7b 79                    u64 [a0] = a2
113385: 33 0b                    a4 = 0
113387: 01                       fallthrough
      :                          @8885
113388: ab 8a e6                 jump @8880 if a3 != a1
      :                          @8886
113391: 28 89 27 01              jump @12867
      :                          @8887 [@dyn 672]
113395: 95 17 90 02              a0 = sp + 0x290
113399: 33 09 06                 a2 = 0x6
113402: 33 08                    a1 = 0
113404: 50 20 42 05 a8 a9 fe     ra = 1346, jump @1889
      :                          @8888 [@dyn 673]
113411: 95 17 08 02              a0 = sp + 0x208
113415: 95 18 90 02              a1 = sp + 0x290
113419: 33 09 06                 a2 = 0x6
113422: 50 20 44 05 e3 9e fe     ra = 1348, jump @1721
      :                          @8889 [@dyn 674]
113429: 3a 07 78 12 03           a0 = u64 [0x31278]
113434: 97 79 0d                 a2 = a0 << 0xd
113437: d3 97 07                 a0 = a0 ^ a2
113440: 98 79 07                 a2 = a0 >> 0x7
113443: d3 97 07                 a0 = a0 ^ a2
113446: 97 79 11                 a2 = a0 << 0x11
113449: d3 97 07                 a0 = a0 ^ a2
113452: 3e 07 78 12 03           u64 [0x31278] = a0
113457: 82 16 18 02              s1 = u64 [sp + 0x218]
113461: 52 06 07                 jump @8891 if s1 != 0
      :                          @8890
113464: 28 5c 39 01              jump @13237
      :                          @8891
113468: 82 1c 10 02              a5 = u64 [sp + 0x210]
113472: 82 c9 10                 a2 = u64 [a5 + 0x10]
113475: 56 19 01 08              jump @8893 if a2 >u 1
      :                          @8892
113479: 28 58 39 01              jump @13248
      :                          @8893
113483: 3a 02 60 11 03           t0 = u64 [0x31160]
113488: ca 27 07                 a0 = a0 * t0
113491: 14 08 cd cc cc cc cc cc cc cc a1 = 0xcccccccccccccccd
113501: d6 87 08                 a1 = a0 mulhu a1
113504: 98 88 03                 a1 = a1 >> 0x3
113507: 82 ca 08                 a3 = u64 [a5 + 0x8]
113510: 96 88 0a                 a1 = a1 * 0xa
113513: c9 87 09                 a2 = a0 - a1
113516: 7b a9 08                 u64 [a3 + 0x8] = a2
113519: 56 16 01 08              jump @8895 if s1 >u 1
      :                          @8894
113523: 28 19 39 01              jump @13229
      :                          @8895
113527: 82 c7 28                 a0 = u64 [a5 + 0x28]
113530: 52 07 07                 jump @8897 if a0 != 0
      :                          @8896
113533: 28 26 39 01              jump @13252
      :                          @8897
113537: 82 c7 20                 a0 = u64 [a5 + 0x20]
113540: 7b 79                    u64 [a0] = a2
113542: 3a 08 78 12 03           a1 = u64 [0x31278]
113547: 97 89 0d                 a2 = a1 << 0xd
113550: d3 98 08                 a1 = a1 ^ a2
113553: 98 89 07                 a2 = a1 >> 0x7
113556: d3 98 08                 a1 = a1 ^ a2
113559: 97 8c 11                 a5 = a1 << 0x11
113562: d3 8c 0c                 a5 = a5 ^ a1
113565: 3e 0c 78 12 03           u64 [0x31278] = a5
113570: 82 18 18 02              a1 = u64 [sp + 0x218]
113574: 52 08 07                 jump @8899 if a1 != 0
      :                          @8898
113577: 28 fb 38 01              jump @13253
      :                          @8899
113581: 82 17 10 02              a0 = u64 [sp + 0x210]
113585: 82 79 10                 a2 = u64 [a0 + 0x10]
113588: 55 19 03 08              jump @8901 if a2 >=u 3
      :                          @8900
113592: 28 f3 38 01              jump @13260
      :                          @8901
113596: ca 2c 09                 a2 = a5 * t0
113599: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
113609: d6 b9 0b                 a4 = a2 mulhu a4
113612: 98 bb 03                 a4 = a4 >> 0x3
113615: 82 7c 08                 a5 = u64 [a0 + 0x8]
113618: 96 bb 0a                 a4 = a4 * 0xa
113621: c9 b9 09                 a2 = a2 - a4
113624: 7b c9 10                 u64 [a5 + 0x10] = a2
113627: 55 18 03 08              jump @8903 if a1 >=u 3
      :                          @8902
113631: 28 e6 37 01              jump @13211
      :                          @8903
113635: 82 78 40                 a1 = u64 [a0 + 0x40]
113638: 52 08 07                 jump @8905 if a1 != 0
      :                          @8904
113641: 28 bb 38 01              jump @13253
      :                          @8905
113645: 82 77 38                 a0 = u64 [a0 + 0x38]
113648: 7b 79                    u64 [a0] = a2
113650: 3a 08 78 12 03           a1 = u64 [0x31278]
113655: 97 89 0d                 a2 = a1 << 0xd
113658: d3 98 08                 a1 = a1 ^ a2
113661: 98 89 07                 a2 = a1 >> 0x7
113664: d3 98 08                 a1 = a1 ^ a2
113667: 97 8c 11                 a5 = a1 << 0x11
113670: d3 8c 0c                 a5 = a5 ^ a1
113673: 3e 0c 78 12 03           u64 [0x31278] = a5
113678: 82 18 18 02              a1 = u64 [sp + 0x218]
113682: 52 08 07                 jump @8907 if a1 != 0
      :                          @8906
113685: 28 8f 38 01              jump @13253
      :                          @8907
113689: 82 17 10 02              a0 = u64 [sp + 0x210]
113693: 82 79 10                 a2 = u64 [a0 + 0x10]
113696: 55 19 04 08              jump @8909 if a2 >=u 4
      :                          @8908
113700: 28 7a 38 01              jump @13247
      :                          @8909
113704: ca 2c 09                 a2 = a5 * t0
113707: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
113717: d6 b9 0b                 a4 = a2 mulhu a4
113720: 98 bb 03                 a4 = a4 >> 0x3
113723: 82 7c 08                 a5 = u64 [a0 + 0x8]
113726: 96 bb 0a                 a4 = a4 * 0xa
113729: c9 b9 09                 a2 = a2 - a4
113732: 7b c9 18                 u64 [a5 + 0x18] = a2
113735: 55 18 04 08              jump @8911 if a1 >=u 4
      :                          @8910
113739: 28 79 37 01              jump @13210
      :                          @8911
113743: 82 78 58                 a1 = u64 [a0 + 0x58]
113746: 52 08 07                 jump @8913 if a1 != 0
      :                          @8912
113749: 28 4f 38 01              jump @13253
      :                          @8913
113753: 82 77 50                 a0 = u64 [a0 + 0x50]
113756: 7b 79                    u64 [a0] = a2
113758: 3a 08 78 12 03           a1 = u64 [0x31278]
113763: 97 89 0d                 a2 = a1 << 0xd
113766: d3 98 08                 a1 = a1 ^ a2
113769: 98 89 07                 a2 = a1 >> 0x7
113772: d3 98 08                 a1 = a1 ^ a2
113775: 97 8c 11                 a5 = a1 << 0x11
113778: d3 8c 0c                 a5 = a5 ^ a1
113781: 3e 0c 78 12 03           u64 [0x31278] = a5
113786: 82 18 18 02              a1 = u64 [sp + 0x218]
113790: 52 08 07                 jump @8915 if a1 != 0
      :                          @8914
113793: 28 23 38 01              jump @13253
      :                          @8915
113797: 82 17 10 02              a0 = u64 [sp + 0x210]
113801: 82 79 10                 a2 = u64 [a0 + 0x10]
113804: 55 19 05 08              jump @8917 if a2 >=u 5
      :                          @8916
113808: 28 1c 38 01              jump @13261
      :                          @8917
113812: ca 2c 09                 a2 = a5 * t0
113815: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
113825: d6 b9 0b                 a4 = a2 mulhu a4
113828: 98 bb 03                 a4 = a4 >> 0x3
113831: 82 7c 08                 a5 = u64 [a0 + 0x8]
113834: 96 bb 0a                 a4 = a4 * 0xa
113837: c9 b9 09                 a2 = a2 - a4
113840: 7b c9 20                 u64 [a5 + 0x20] = a2
113843: 55 18 05 08              jump @8919 if a1 >=u 5
      :                          @8918
113847: 28 d7 37 01              jump @13231
      :                          @8919
113851: 82 78 70                 a1 = u64 [a0 + 0x70]
113854: 52 08 07                 jump @8921 if a1 != 0
      :                          @8920
113857: 28 e3 37 01              jump @13253
      :                          @8921
113861: 82 77 68                 a0 = u64 [a0 + 0x68]
113864: 7b 79                    u64 [a0] = a2
113866: 3a 08 78 12 03           a1 = u64 [0x31278]
113871: 97 89 0d                 a2 = a1 << 0xd
113874: d3 98 08                 a1 = a1 ^ a2
113877: 98 89 07                 a2 = a1 >> 0x7
113880: d3 98 08                 a1 = a1 ^ a2
113883: 97 8c 11                 a5 = a1 << 0x11
113886: d3 8c 0c                 a5 = a5 ^ a1
113889: 3e 0c 78 12 03           u64 [0x31278] = a5
113894: 82 18 18 02              a1 = u64 [sp + 0x218]
113898: 52 08 07                 jump @8923 if a1 != 0
      :                          @8922
113901: 28 b7 37 01              jump @13253
      :                          @8923
113905: 82 17 10 02              a0 = u64 [sp + 0x210]
113909: 82 79 10                 a2 = u64 [a0 + 0x10]
113912: 55 19 06 08              jump @8925 if a2 >=u 6
      :                          @8924
113916: 28 b7 37 01              jump @13266
      :                          @8925
113920: ca 2c 09                 a2 = a5 * t0
113923: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
113933: d6 b9 0b                 a4 = a2 mulhu a4
113936: 98 bb 03                 a4 = a4 >> 0x3
113939: 82 7c 08                 a5 = u64 [a0 + 0x8]
113942: 96 bb 0a                 a4 = a4 * 0xa
113945: c9 b9 09                 a2 = a2 - a4
113948: 7b c9 28                 u64 [a5 + 0x28] = a2
113951: 55 18 06 08              jump @8927 if a1 >=u 6
      :                          @8926
113955: 28 6f 37 01              jump @13235
      :                          @8927
113959: 82 78 88 00              a1 = u64 [a0 + 0x88]
113963: 52 08 07                 jump @8929 if a1 != 0
      :                          @8928
113966: 28 76 37 01              jump @13253
      :                          @8929
113970: 82 77 80 00              a0 = u64 [a0 + 0x80]
113974: 7b 79                    u64 [a0] = a2
113976: 3a 08 78 12 03           a1 = u64 [0x31278]
113981: 97 89 0d                 a2 = a1 << 0xd
113984: d3 98 08                 a1 = a1 ^ a2
113987: 98 89 07                 a2 = a1 >> 0x7
113990: d3 98 08                 a1 = a1 ^ a2
113993: 97 86 11                 s1 = a1 << 0x11
113996: d3 86 06                 s1 = s1 ^ a1
113999: 3e 06 78 12 03           u64 [0x31278] = s1
114004: 82 18 18 02              a1 = u64 [sp + 0x218]
114008: 55 18 02 08              jump @8931 if a1 >=u 2
      :                          @8930
114012: 28 67 36 01              jump @13209
      :                          @8931
114016: 82 17 10 02              a0 = u64 [sp + 0x210]
114020: 82 79 28                 a2 = u64 [a0 + 0x28]
114023: 55 19 03 08              jump @8933 if a2 >=u 3
      :                          @8932
114027: 28 34 37 01              jump @13248
      :                          @8933
114031: ca 26 09                 a2 = s1 * t0
114034: 14 0a cd cc cc cc cc cc cc cc a3 = 0xcccccccccccccccd
114044: d6 a9 0a                 a3 = a2 mulhu a3
114047: 98 aa 03                 a3 = a3 >> 0x3
114050: 82 76 20                 s1 = u64 [a0 + 0x20]
114053: 96 aa 0a                 a3 = a3 * 0xa
114056: c9 a9 0a                 a3 = a2 - a3
114059: 7b 6a 10                 u64 [s1 + 0x10] = a3
114062: 55 18 03 08              jump @8935 if a1 >=u 3
      :                          @8934
114066: 28 17 37 01              jump @13258
      :                          @8935
114070: 82 78 40                 a1 = u64 [a0 + 0x40]
114073: 55 18 02 08              jump @8937 if a1 >=u 2
      :                          @8936
114077: 28 f8 36 01              jump @13238
      :                          @8937
114081: 82 77 38                 a0 = u64 [a0 + 0x38]
114084: 7b 7a 08                 u64 [a0 + 0x8] = a3
114087: 3a 08 78 12 03           a1 = u64 [0x31278]
114092: 97 8a 0d                 a3 = a1 << 0xd
114095: d3 a8 08                 a1 = a1 ^ a3
114098: 98 8a 07                 a3 = a1 >> 0x7
114101: d3 a8 08                 a1 = a1 ^ a3
114104: 97 8c 11                 a5 = a1 << 0x11
114107: d3 8c 0c                 a5 = a5 ^ a1
114110: 3e 0c 78 12 03           u64 [0x31278] = a5
114115: 82 18 18 02              a1 = u64 [sp + 0x218]
114119: 55 18 02 08              jump @8939 if a1 >=u 2
      :                          @8938
114123: 28 ca 36 01              jump @13238
      :                          @8939
114127: 82 17 10 02              a0 = u64 [sp + 0x210]
114131: 82 79 28                 a2 = u64 [a0 + 0x28]
114134: 55 19 04 08              jump @8941 if a2 >=u 4
      :                          @8940
114138: 28 c4 36 01              jump @13247
      :                          @8941
114142: ca 2c 09                 a2 = a5 * t0
114145: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
114155: d6 b9 0b                 a4 = a2 mulhu a4
114158: 98 bb 03                 a4 = a4 >> 0x3
114161: 82 76 20                 s1 = u64 [a0 + 0x20]
114164: 96 bb 0a                 a4 = a4 * 0xa
114167: c9 b9 0c                 a5 = a2 - a4
114170: 7b 6c 18                 u64 [s1 + 0x18] = a5
114173: 55 18 04 08              jump @8943 if a1 >=u 4
      :                          @8942
114177: 28 9b 36 01              jump @13245
      :                          @8943
114181: 82 78 58                 a1 = u64 [a0 + 0x58]
114184: 55 18 02 08              jump @8945 if a1 >=u 2
      :                          @8944
114188: 28 89 36 01              jump @13238
      :                          @8945
114192: 82 77 50                 a0 = u64 [a0 + 0x50]
114195: 7b 7c 08                 u64 [a0 + 0x8] = a5
114198: 3a 08 78 12 03           a1 = u64 [0x31278]
114203: 97 8a 0d                 a3 = a1 << 0xd
114206: d3 a8 08                 a1 = a1 ^ a3
114209: 98 8a 07                 a3 = a1 >> 0x7
114212: d3 a8 08                 a1 = a1 ^ a3
114215: 97 8c 11                 a5 = a1 << 0x11
114218: d3 8c 0c                 a5 = a5 ^ a1
114221: 3e 0c 78 12 03           u64 [0x31278] = a5
114226: 82 18 18 02              a1 = u64 [sp + 0x218]
114230: 55 18 02 08              jump @8947 if a1 >=u 2
      :                          @8946
114234: 28 5b 36 01              jump @13238
      :                          @8947
114238: 82 17 10 02              a0 = u64 [sp + 0x210]
114242: 82 79 28                 a2 = u64 [a0 + 0x28]
114245: 55 19 05 08              jump @8949 if a2 >=u 5
      :                          @8948
114249: 28 57 36 01              jump @13249
      :                          @8949
114253: ca 2c 09                 a2 = a5 * t0
114256: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
114266: d6 b9 0b                 a4 = a2 mulhu a4
114269: 98 bb 03                 a4 = a4 >> 0x3
114272: 82 76 20                 s1 = u64 [a0 + 0x20]
114275: 96 bb 0a                 a4 = a4 * 0xa
114278: c9 b9 0c                 a5 = a2 - a4
114281: 7b 6c 20                 u64 [s1 + 0x20] = a5
114284: 55 18 05 08              jump @8951 if a1 >=u 5
      :                          @8950
114288: 28 2d 36 01              jump @13246
      :                          @8951
114292: 82 78 70                 a1 = u64 [a0 + 0x70]
114295: 55 18 02 08              jump @8953 if a1 >=u 2
      :                          @8952
114299: 28 1a 36 01              jump @13238
      :                          @8953
114303: 82 77 68                 a0 = u64 [a0 + 0x68]
114306: 7b 7c 08                 u64 [a0 + 0x8] = a5
114309: 3a 08 78 12 03           a1 = u64 [0x31278]
114314: 97 8a 0d                 a3 = a1 << 0xd
114317: d3 a8 08                 a1 = a1 ^ a3
114320: 98 8a 07                 a3 = a1 >> 0x7
114323: d3 a8 08                 a1 = a1 ^ a3
114326: 97 8c 11                 a5 = a1 << 0x11
114329: d3 8c 0c                 a5 = a5 ^ a1
114332: 3e 0c 78 12 03           u64 [0x31278] = a5
114337: 82 18 18 02              a1 = u64 [sp + 0x218]
114341: 55 18 02 08              jump @8955 if a1 >=u 2
      :                          @8954
114345: 28 ec 35 01              jump @13238
      :                          @8955
114349: 82 1a 10 02              a3 = u64 [sp + 0x210]
114353: 82 a9 28                 a2 = u64 [a3 + 0x28]
114356: 55 19 06 08              jump @8957 if a2 >=u 6
      :                          @8956
114360: 28 e9 35 01              jump @13250
      :                          @8957
114364: ca 2c 09                 a2 = a5 * t0
114367: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
114377: d6 b9 0b                 a4 = a2 mulhu a4
114380: 98 bb 03                 a4 = a4 >> 0x3
114383: 82 ac 20                 a5 = u64 [a3 + 0x20]
114386: 96 bb 0a                 a4 = a4 * 0xa
114389: c9 b9 09                 a2 = a2 - a4
114392: 7b c9 28                 u64 [a5 + 0x28] = a2
114395: 55 18 06 08              jump @8959 if a1 >=u 6
      :                          @8958
114399: 28 c3 35 01              jump @13251
      :                          @8959
114403: 82 a8 88 00              a1 = u64 [a3 + 0x88]
114407: 55 18 02 08              jump @8961 if a1 >=u 2
      :                          @8960
114411: 28 aa 35 01              jump @13238
      :                          @8961
114415: 82 a8 80 00              a1 = u64 [a3 + 0x80]
114419: 7b 89 08                 u64 [a1 + 0x8] = a2
114422: 3a 09 78 12 03           a2 = u64 [0x31278]
114427: 97 9a 0d                 a3 = a2 << 0xd
114430: d3 a9 09                 a2 = a2 ^ a3
114433: 98 9a 07                 a3 = a2 >> 0x7
114436: d3 a9 09                 a2 = a2 ^ a3
114439: 97 96 11                 s1 = a2 << 0x11
114442: d3 96 06                 s1 = s1 ^ a2
114445: 3e 06 78 12 03           u64 [0x31278] = s1
114450: 82 18 18 02              a1 = u64 [sp + 0x218]
114454: 55 18 03 08              jump @8963 if a1 >=u 3
      :                          @8962
114458: 28 72 35 01              jump @13229
      :                          @8963
114462: 82 17 10 02              a0 = u64 [sp + 0x210]
114466: 82 79 40                 a2 = u64 [a0 + 0x40]
114469: 55 19 04 08              jump @8965 if a2 >=u 4
      :                          @8964
114473: 28 76 35 01              jump @13248
      :                          @8965
114477: ca 26 09                 a2 = s1 * t0
114480: 14 0a cd cc cc cc cc cc cc cc a3 = 0xcccccccccccccccd
114490: d6 a9 0a                 a3 = a2 mulhu a3
114493: 98 aa 03                 a3 = a3 >> 0x3
114496: 82 7b 38                 a4 = u64 [a0 + 0x38]
114499: 96 aa 0a                 a3 = a3 * 0xa
114502: c9 a9 0a                 a3 = a2 - a3
114505: 7b ba 18                 u64 [a4 + 0x18] = a3
114508: 55 18 04 08              jump @8967 if a1 >=u 4
      :                          @8966
114512: 28 78 35 01              jump @13285
      :                          @8967
114516: 82 78 58                 a1 = u64 [a0 + 0x58]
114519: 55 18 03 08              jump @8969 if a1 >=u 3
      :                          @8968
114523: 28 3b 35 01              jump @13239
      :                          @8969
114527: 82 77 50                 a0 = u64 [a0 + 0x50]
114530: 7b 7a 10                 u64 [a0 + 0x10] = a3
114533: 3a 08 78 12 03           a1 = u64 [0x31278]
114538: 97 8a 0d                 a3 = a1 << 0xd
114541: d3 a8 08                 a1 = a1 ^ a3
114544: 98 8a 07                 a3 = a1 >> 0x7
114547: d3 a8 08                 a1 = a1 ^ a3
114550: 97 8c 11                 a5 = a1 << 0x11
114553: d3 8c 0c                 a5 = a5 ^ a1
114556: 3e 0c 78 12 03           u64 [0x31278] = a5
114561: 82 18 18 02              a1 = u64 [sp + 0x218]
114565: 55 18 03 08              jump @8971 if a1 >=u 3
      :                          @8970
114569: 28 0d 35 01              jump @13239
      :                          @8971
114573: 82 17 10 02              a0 = u64 [sp + 0x210]
114577: 82 79 40                 a2 = u64 [a0 + 0x40]
114580: 55 19 05 08              jump @8973 if a2 >=u 5
      :                          @8972
114584: 28 08 35 01              jump @13249
      :                          @8973
114588: ca 2c 09                 a2 = a5 * t0
114591: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
114601: d6 b9 0b                 a4 = a2 mulhu a4
114604: 98 bb 03                 a4 = a4 >> 0x3
114607: 82 76 38                 s1 = u64 [a0 + 0x38]
114610: 96 bb 0a                 a4 = a4 * 0xa
114613: c9 b9 0c                 a5 = a2 - a4
114616: 7b 6c 20                 u64 [s1 + 0x20] = a5
114619: 55 18 05 08              jump @8975 if a1 >=u 5
      :                          @8974
114623: 28 de 34 01              jump @13246
      :                          @8975
114627: 82 78 70                 a1 = u64 [a0 + 0x70]
114630: 55 18 03 08              jump @8977 if a1 >=u 3
      :                          @8976
114634: 28 cc 34 01              jump @13239
      :                          @8977
114638: 82 77 68                 a0 = u64 [a0 + 0x68]
114641: 7b 7c 10                 u64 [a0 + 0x10] = a5
114644: 3a 08 78 12 03           a1 = u64 [0x31278]
114649: 97 8a 0d                 a3 = a1 << 0xd
114652: d3 a8 08                 a1 = a1 ^ a3
114655: 98 8a 07                 a3 = a1 >> 0x7
114658: d3 a8 08                 a1 = a1 ^ a3
114661: 97 8c 11                 a5 = a1 << 0x11
114664: d3 8c 0c                 a5 = a5 ^ a1
114667: 3e 0c 78 12 03           u64 [0x31278] = a5
114672: 82 18 18 02              a1 = u64 [sp + 0x218]
114676: 55 18 03 08              jump @8979 if a1 >=u 3
      :                          @8978
114680: 28 9e 34 01              jump @13239
      :                          @8979
114684: 82 1a 10 02              a3 = u64 [sp + 0x210]
114688: 82 a9 40                 a2 = u64 [a3 + 0x40]
114691: 55 19 06 08              jump @8981 if a2 >=u 6
      :                          @8980
114695: 28 9a 34 01              jump @13250
      :                          @8981
114699: ca 2c 09                 a2 = a5 * t0
114702: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
114712: d6 b9 0b                 a4 = a2 mulhu a4
114715: 98 bb 03                 a4 = a4 >> 0x3
114718: 82 ac 38                 a5 = u64 [a3 + 0x38]
114721: 96 bb 0a                 a4 = a4 * 0xa
114724: c9 b9 09                 a2 = a2 - a4
114727: 7b c9 28                 u64 [a5 + 0x28] = a2
114730: 55 18 06 08              jump @8983 if a1 >=u 6
      :                          @8982
114734: 28 74 34 01              jump @13251
      :                          @8983
114738: 82 a8 88 00              a1 = u64 [a3 + 0x88]
114742: 55 18 03 08              jump @8985 if a1 >=u 3
      :                          @8984
114746: 28 5c 34 01              jump @13239
      :                          @8985
114750: 82 a8 80 00              a1 = u64 [a3 + 0x80]
114754: 7b 89 10                 u64 [a1 + 0x10] = a2
114757: 3a 09 78 12 03           a2 = u64 [0x31278]
114762: 97 9a 0d                 a3 = a2 << 0xd
114765: d3 a9 09                 a2 = a2 ^ a3
114768: 98 9a 07                 a3 = a2 >> 0x7
114771: d3 a9 09                 a2 = a2 ^ a3
114774: 97 96 11                 s1 = a2 << 0x11
114777: d3 96 06                 s1 = s1 ^ a2
114780: 3e 06 78 12 03           u64 [0x31278] = s1
114785: 82 18 18 02              a1 = u64 [sp + 0x218]
114789: 55 18 04 08              jump @8987 if a1 >=u 4
      :                          @8986
114793: 28 23 34 01              jump @13229
      :                          @8987
114797: 82 17 10 02              a0 = u64 [sp + 0x210]
114801: 82 79 58                 a2 = u64 [a0 + 0x58]
114804: 55 19 05 08              jump @8989 if a2 >=u 5
      :                          @8988
114808: 28 27 34 01              jump @13248
      :                          @8989
114812: ca 26 09                 a2 = s1 * t0
114815: 14 0a cd cc cc cc cc cc cc cc a3 = 0xcccccccccccccccd
114825: d6 a9 0a                 a3 = a2 mulhu a3
114828: 98 aa 03                 a3 = a3 >> 0x3
114831: 82 7b 50                 a4 = u64 [a0 + 0x50]
114834: 96 aa 0a                 a3 = a3 * 0xa
114837: c9 a9 0a                 a3 = a2 - a3
114840: 7b ba 20                 u64 [a4 + 0x20] = a3
114843: 55 18 05 08              jump @8991 if a1 >=u 5
      :                          @8990
114847: 28 2a 34 01              jump @13286
      :                          @8991
114851: 82 78 70                 a1 = u64 [a0 + 0x70]
114854: 55 18 04 08              jump @8993 if a1 >=u 4
      :                          @8992
114858: 28 f2 33 01              jump @13245
      :                          @8993
114862: 82 77 68                 a0 = u64 [a0 + 0x68]
114865: 7b 7a 18                 u64 [a0 + 0x18] = a3
114868: 3a 08 78 12 03           a1 = u64 [0x31278]
114873: 97 8a 0d                 a3 = a1 << 0xd
114876: d3 a8 08                 a1 = a1 ^ a3
114879: 98 8a 07                 a3 = a1 >> 0x7
114882: d3 a8 08                 a1 = a1 ^ a3
114885: 97 8c 11                 a5 = a1 << 0x11
114888: d3 8c 0c                 a5 = a5 ^ a1
114891: 3e 0c 78 12 03           u64 [0x31278] = a5
114896: 82 18 18 02              a1 = u64 [sp + 0x218]
114900: 55 18 04 08              jump @8995 if a1 >=u 4
      :                          @8994
114904: 28 c4 33 01              jump @13245
      :                          @8995
114908: 82 1a 10 02              a3 = u64 [sp + 0x210]
114912: 82 a9 58                 a2 = u64 [a3 + 0x58]
114915: 55 19 06 08              jump @8997 if a2 >=u 6
      :                          @8996
114919: 28 ba 33 01              jump @13250
      :                          @8997
114923: ca 2c 09                 a2 = a5 * t0
114926: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
114936: d6 b9 0b                 a4 = a2 mulhu a4
114939: 98 bb 03                 a4 = a4 >> 0x3
114942: 82 ac 50                 a5 = u64 [a3 + 0x50]
114945: 96 bb 0a                 a4 = a4 * 0xa
114948: c9 b9 09                 a2 = a2 - a4
114951: 7b c9 28                 u64 [a5 + 0x28] = a2
114954: 55 18 06 08              jump @8999 if a1 >=u 6
      :                          @8998
114958: 28 94 33 01              jump @13251
      :                          @8999
114962: 82 a8 88 00              a1 = u64 [a3 + 0x88]
114966: 55 18 04 08              jump @9001 if a1 >=u 4
      :                          @9000
114970: 28 82 33 01              jump @13245
      :                          @9001
114974: 82 a8 80 00              a1 = u64 [a3 + 0x80]
114978: 7b 89 18                 u64 [a1 + 0x18] = a2
114981: 3a 09 78 12 03           a2 = u64 [0x31278]
114986: 97 9a 0d                 a3 = a2 << 0xd
114989: d3 a9 09                 a2 = a2 ^ a3
114992: 98 9a 07                 a3 = a2 >> 0x7
114995: d3 a9 09                 a2 = a2 ^ a3
114998: 97 96 11                 s1 = a2 << 0x11
115001: d3 96 06                 s1 = s1 ^ a2
115004: 3e 06 78 12 03           u64 [0x31278] = s1
115009: 82 18 18 02              a1 = u64 [sp + 0x218]
115013: 55 18 05 08              jump @9003 if a1 >=u 5
      :                          @9002
115017: 28 43 33 01              jump @13229
      :                          @9003
115021: 82 17 10 02              a0 = u64 [sp + 0x210]
115025: 82 79 70                 a2 = u64 [a0 + 0x70]
115028: 33 0c 06                 a5 = 0x6
115031: ae c9 07                 jump @9005 if a2 >=u a5
      :                          @9004
115034: 28 45 33 01              jump @13248
      :                          @9005
115038: ca 26 09                 a2 = s1 * t0
115041: 14 0a cd cc cc cc cc cc cc cc a3 = 0xcccccccccccccccd
115051: d6 a9 0a                 a3 = a2 mulhu a3
115054: 98 aa 03                 a3 = a3 >> 0x3
115057: 82 7b 68                 a4 = u64 [a0 + 0x68]
115060: 33 06 0a                 s1 = 0xa
115063: ca 6a 0a                 a3 = a3 * s1
115066: c9 a9 09                 a2 = a2 - a3
115069: 7b b9 28                 u64 [a4 + 0x28] = a2
115072: 55 18 06 08              jump @9007 if a1 >=u 6
      :                          @9006
115076: 28 46 33 01              jump @13287
      :                          @9007
115080: 82 78 88 00              a1 = u64 [a0 + 0x88]
115084: 33 0a 05                 a3 = 0x5
115087: ae a8 07                 jump @9009 if a1 >=u a3
      :                          @9008
115090: 28 0b 33 01              jump @13246
      :                          @9009
115094: 82 77 80 00              a0 = u64 [a0 + 0x80]
115098: 7b 79 20                 u64 [a0 + 0x20] = a2
115101: 82 17 18 02              a0 = u64 [sp + 0x218]
115105: 82 18 10 02              a1 = u64 [sp + 0x210]
115109: 82 19 08 02              a2 = u64 [sp + 0x208]
115113: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
115117: 7b 18 98 02              u64 [sp + 0x298] = a1
115121: 7b 19 90 02              u64 [sp + 0x290] = a2
115125: 95 17 90 02              a0 = sp + 0x290
115129: 50 20 46 05 a6 3d ff     ra = 1350, jump @5096
      :                          @9010 [@dyn 675]
115136: 7b 17 20 01              u64 [sp + 0x120] = a0
115140: 95 17 20 01              a0 = sp + 0x120
115144: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
115148: 33 07 2c 0c              a0 = 0xc2c
115152: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
115156: 33 07 20 09 01           a0 = 0x10920
115161: 7b 17 90 02              u64 [sp + 0x290] = a0
115165: 49 21 98 02 01           u64 [sp + 664] = 0x1
115170: 49 21 b0 02              u64 [sp + 688] = 0
115174: 95 18 e0 01              a1 = sp + 0x1e0
115178: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
115182: 49 21 a8 02 01           u64 [sp + 680] = 0x1
115187: 95 17 38 02              a0 = sp + 0x238
115191: 95 18 90 02              a1 = sp + 0x290
115195: 50 20 48 05 ff 8d fe     ra = 1352, jump @1503
      :                          @9011 [@dyn 676]
115202: 82 16 40 02              s1 = u64 [sp + 0x240]
115206: 82 1b 48 02              a4 = u64 [sp + 0x248]
115210: 82 17 38 02              a0 = u64 [sp + 0x238]
115214: 7b 17 70                 u64 [sp + 0x70] = a0
115217: 33 07 02                 a0 = 0x2
115220: 33 08                    a1 = 0
115222: 33 09                    a2 = 0
115224: 64 6a                    a3 = s1
115226: 33 00 4a 05              ra = 0x54a
115230: 0a 64                    ecalli 100 // 'log'
115232: 01                       fallthrough
      :                          @9012 [@dyn 677]
115233: 82 1c 70                 a5 = u64 [sp + 0x70]
115236: 82 17 68                 a0 = u64 [sp + 0x68]
115239: c8 c7 07                 a0 = a0 + a5
115242: 55 37 00 00 ff 0a        jump @9014 if a0 >=u 4294901760
      :                          @9013
115248: 28 53 20 01              jump @12868
      :                          @9014
115252: 33 07 c0 22 03           a0 = 0x322c0
115257: 95 77 00 00 01           a0 = a0 + 0x10000
115262: 01                       fallthrough
      :                          @9015
115263: 82 78                    a1 = u64 [a0]
115265: c9 87 09                 a2 = a0 - a1
115268: aa 69 07                 jump @9017 if a2 == s1
      :                          @9016
115271: 28 3c 20 01              jump @12868
      :                          @9017
115275: c9 c8 09                 a2 = a1 - a5
115278: 01                       fallthrough
      :                          @9018
115279: 82 7a                    a3 = u64 [a0]
115281: ab 8a ee                 jump @9015 if a3 != a1
      :                          @9019
115284: 7b 79                    u64 [a0] = a2
115286: 33 0b                    a4 = 0
115288: 01                       fallthrough
      :                          @9020
115289: ab 8a e6                 jump @9015 if a3 != a1
      :                          @9021
115292: 28 27 20 01              jump @12868
      :                          @9022 [@dyn 678]
115296: 95 17 90 02              a0 = sp + 0x290
115300: 33 08 05                 a1 = 0x5
115303: 50 20 4e 05 d1 a1 fe     ra = 1358, jump @1882
      :                          @9023 [@dyn 679]
115310: 95 17 e0 01              a0 = sp + 0x1e0
115314: 95 18 90 02              a1 = sp + 0x290
115318: 33 09 05                 a2 = 0x5
115321: 50 20 50 05 0a a3 fe     ra = 1360, jump @1907
      :                          @9024 [@dyn 680]
115328: 95 17 90 02              a0 = sp + 0x290
115332: 33 08 05                 a1 = 0x5
115335: 50 20 52 05 b1 a1 fe     ra = 1362, jump @1882
      :                          @9025 [@dyn 681]
115342: 95 17 08 02              a0 = sp + 0x208
115346: 95 18 90 02              a1 = sp + 0x290
115350: 33 09 05                 a2 = 0x5
115353: 50 20 54 05 ea a2 fe     ra = 1364, jump @1907
      :                          @9026 [@dyn 682]
115360: 49 11 70                 u64 [sp + 112] = 0
115363: 33 07                    a0 = 0
115365: 49 11 60 01              u64 [sp + 96] = 0x1
115369: 33 00 78 12 03           ra = 0x31278
115374: 28 1f                    jump @9029
      :                          @9027
115376: 95 77 01                 a0 = a0 + 0x1
115379: 82 18 60                 a1 = u64 [sp + 0x60]
115382: 95 88 01                 a1 = a1 + 0x1
115385: 7b 18 60                 u64 [sp + 0x60] = a1
115388: 82 18 70                 a1 = u64 [sp + 0x70]
115391: 95 88 18                 a1 = a1 + 0x18
115394: 7b 18 70                 u64 [sp + 0x70] = a1
115397: 52 17 05 08              jump @9029 if a0 != 5
      :                          @9028
115401: 28 a6 2c 01              jump @13078
      :                          @9029
115405: 56 17 03 e3              jump @9027 if a0 >u 3
      :                          @9030
115409: 82 1c 70                 a5 = u64 [sp + 0x70]
115412: 82 19 60                 a2 = u64 [sp + 0x60]
115415: 01                       fallthrough
      :                          @9031
115416: 3a 08 78 12 03           a1 = u64 [0x31278]
115421: 97 8a 0d                 a3 = a1 << 0xd
115424: d3 a8 08                 a1 = a1 ^ a3
115427: 98 8a 07                 a3 = a1 >> 0x7
115430: d3 8a 02                 t0 = a3 ^ a1
115433: 97 28 11                 a1 = t0 << 0x11
115436: d3 28 08                 a1 = a1 ^ t0
115439: 3e 08 78 12 03           u64 [0x31278] = a1
115444: 3a 08 78 12 03           a1 = u64 [0x31278]
115449: 97 8a 0d                 a3 = a1 << 0xd
115452: d3 a8 08                 a1 = a1 ^ a3
115455: 98 8b 07                 a4 = a1 >> 0x7
115458: d3 8b 0b                 a4 = a4 ^ a1
115461: 97 b8 11                 a1 = a4 << 0x11
115464: d3 b8 08                 a1 = a1 ^ a4
115467: 3e 08 78 12 03           u64 [0x31278] = a1
115472: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
115476: ac 87 07                 jump @9033 if a0 <u a1
      :                          @9032
115479: 28 75 31 01              jump @13229
      :                          @9033
115483: 82 14 e8 01              t2 = u64 [sp + 0x1e8]
115487: 96 73 18                 t1 = a0 * 0x18
115490: c8 34 06                 s1 = t2 + t1
115493: 82 6a 10                 a3 = u64 [s1 + 0x10]
115496: ac a9 07                 jump @9035 if a2 <u a3
      :                          @9034
115499: 28 1a 1d 01              jump @12826
      :                          @9035
115503: 82 6a 08                 a3 = u64 [s1 + 0x8]
115506: c8 9a 06                 s1 = a3 + a2
115509: 84 2a 01                 a3 = t0 & 0x1
115512: 78 6a                    u8 [s1] = a3
115514: ac 89 07                 jump @9037 if a2 <u a1
      :                          @9036
115517: 28 82 31 01              jump @13276
      :                          @9037
115521: c8 c4 04                 t2 = t2 + a5
115524: 82 48 28                 a1 = u64 [t2 + 0x28]
115527: ac 87 07                 jump @9039 if a0 <u a1
      :                          @9038
115530: 28 42 31 01              jump @13229
      :                          @9039
115534: 82 48 20                 a1 = u64 [t2 + 0x20]
115537: c8 78 08                 a1 = a1 + a0
115540: 78 8a                    u8 [a1] = a3
115542: 82 18 18 02              a1 = u64 [sp + 0x218]
115546: ac 87 07                 jump @9041 if a0 <u a1
      :                          @9040
115549: 28 2f 31 01              jump @13229
      :                          @9041
115553: 82 16 10 02              s1 = u64 [sp + 0x210]
115557: c8 63 03                 t1 = t1 + s1
115560: 82 3a 10                 a3 = u64 [t1 + 0x10]
115563: ac a9 07                 jump @9043 if a2 <u a3
      :                          @9042
115566: 28 d7 1c 01              jump @12826
      :                          @9043
115570: 82 3a 08                 a3 = u64 [t1 + 0x8]
115573: c8 9a 0a                 a3 = a3 + a2
115576: 84 bb 01                 a4 = a4 & 0x1
115579: 78 ab                    u8 [a3] = a4
115581: ac 89 07                 jump @9045 if a2 <u a1
      :                          @9044
115584: 28 3f 31 01              jump @13276
      :                          @9045
115588: c8 c6 06                 s1 = s1 + a5
115591: 82 68 28                 a1 = u64 [s1 + 0x28]
115594: ac 87 07                 jump @9047 if a0 <u a1
      :                          @9046
115597: 28 ff 30 01              jump @13229
      :                          @9047
115601: 82 68 20                 a1 = u64 [s1 + 0x20]
115604: c8 78 08                 a1 = a1 + a0
115607: 78 8b                    u8 [a1] = a4
115609: 95 99 01                 a2 = a2 + 0x1
115612: 95 cc 18                 a5 = a5 + 0x18
115615: 52 19 05 39 ff           jump @9031 if a2 != 5
      :                          @9048
115620: 28 0c ff                 jump @9027
      :                          @9049 [@dyn 683]
115623: 3a 08 78 12 03           a1 = u64 [0x31278]
115628: 97 89 0d                 a2 = a1 << 0xd
115631: d3 89 09                 a2 = a2 ^ a1
115634: 98 9a 07                 a3 = a2 >> 0x7
115637: 3a 08 60 11 03           a1 = u64 [0x31160]
115642: d3 a9 09                 a2 = a2 ^ a3
115645: 97 9a 11                 a3 = a2 << 0x11
115648: d3 a9 09                 a2 = a2 ^ a3
115651: ca 89 0a                 a3 = a2 * a1
115654: 3e 09 78 12 03           u64 [0x31278] = a2
115659: 14 09 cd cc cc cc cc cc cc cc a2 = 0xcccccccccccccccd
115669: d6 9a 0b                 a4 = a3 mulhu a2
115672: 98 bb 03                 a4 = a4 >> 0x3
115675: 3a 06 78 12 03           s1 = u64 [0x31278]
115680: 96 bb 0a                 a4 = a4 * 0xa
115683: c9 ba 0a                 a3 = a3 - a4
115686: 7b 1a 70                 u64 [sp + 0x70] = a3
115689: 97 6a 0d                 a3 = s1 << 0xd
115692: d3 6a 0a                 a3 = a3 ^ s1
115695: 98 ab 07                 a4 = a3 >> 0x7
115698: d3 ba 0a                 a3 = a3 ^ a4
115701: 97 ab 11                 a4 = a3 << 0x11
115704: d3 ba 0a                 a3 = a3 ^ a4
115707: ca 8a 0b                 a4 = a3 * a1
115710: 3e 0a 78 12 03           u64 [0x31278] = a3
115715: d6 9b 0a                 a3 = a4 mulhu a2
115718: 98 aa 03                 a3 = a3 >> 0x3
115721: 3a 0c 78 12 03           a5 = u64 [0x31278]
115726: 96 aa 0a                 a3 = a3 * 0xa
115729: c9 ab 0b                 a4 = a4 - a3
115732: 7b 1b 60                 u64 [sp + 0x60] = a4
115735: 97 ca 0d                 a3 = a5 << 0xd
115738: d3 ca 0a                 a3 = a3 ^ a5
115741: 98 ab 07                 a4 = a3 >> 0x7
115744: d3 ba 0a                 a3 = a3 ^ a4
115747: 97 ab 11                 a4 = a3 << 0x11
115750: d3 ba 0a                 a3 = a3 ^ a4
115753: ca 8a 0b                 a4 = a3 * a1
115756: 3e 0a 78 12 03           u64 [0x31278] = a3
115761: d6 9b 0a                 a3 = a4 mulhu a2
115764: 98 ac 02                 a5 = a3 >> 0x2
115767: 84 aa fc                 a3 = a3 & 0xfffffffffffffffc
115770: 3a 07 78 12 03           a0 = u64 [0x31278]
115775: c8 ca 0a                 a3 = a3 + a5
115778: c9 ab 0b                 a4 = a4 - a3
115781: 7b 1b 58                 u64 [sp + 0x58] = a4
115784: 97 7a 0d                 a3 = a0 << 0xd
115787: d3 a7 07                 a0 = a0 ^ a3
115790: 98 7a 07                 a3 = a0 >> 0x7
115793: d3 a7 07                 a0 = a0 ^ a3
115796: 97 7a 11                 a3 = a0 << 0x11
115799: d3 a7 07                 a0 = a0 ^ a3
115802: ca 87 08                 a1 = a0 * a1
115805: 3e 07 78 12 03           u64 [0x31278] = a0
115810: d6 98 07                 a0 = a1 mulhu a2
115813: 98 79 02                 a2 = a0 >> 0x2
115816: 84 77 fc                 a0 = a0 & 0xfffffffffffffffc
115819: c8 97 07                 a0 = a0 + a2
115822: c9 78 06                 s1 = a1 - a0
115825: 33 07 40                 a0 = 0x40
115828: 50 20 58 05 3d 8c fe     ra = 1368, jump @1521
      :                          @9050 [@dyn 684]
115835: 64 78                    a1 = a0
115837: 82 19 70                 a2 = u64 [sp + 0x70]
115840: 82 17 58                 a0 = u64 [sp + 0x58]
115843: c8 97 07                 a0 = a0 + a2
115846: 95 77 01                 a0 = a0 + 0x1
115849: 82 1a 60                 a3 = u64 [sp + 0x60]
115852: c8 a6 06                 s1 = s1 + a3
115855: 95 66 01                 s1 = s1 + 0x1
115858: 7b 89                    u64 [a1] = a2
115860: 7b 8a 08                 u64 [a1 + 0x8] = a3
115863: 7b 87 10                 u64 [a1 + 0x10] = a0
115866: 7b 8a 18                 u64 [a1 + 0x18] = a3
115869: 7b 87 20                 u64 [a1 + 0x20] = a0
115872: 7b 86 28                 u64 [a1 + 0x28] = s1
115875: 7b 89 30                 u64 [a1 + 0x30] = a2
115878: 7b 86 38                 u64 [a1 + 0x38] = s1
115881: 33 06 04                 s1 = 0x4
115884: 7b 16 e0 01              u64 [sp + 0x1e0] = s1
115888: 7b 18 e8 01              u64 [sp + 0x1e8] = a1
115892: 7b 16 f0 01              u64 [sp + 0x1f0] = s1
115896: 95 17 90 02              a0 = sp + 0x290
115900: 50 20 5a 05 af 42 ff     ra = 1370, jump @5296
      :                          @9051 [@dyn 685]
115907: 82 17 90 02              a0 = u64 [sp + 0x290]
115911: 82 18 98 02              a1 = u64 [sp + 0x298]
115915: 82 19 a0 02              a2 = u64 [sp + 0x2a0]
115919: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
115923: 7b 18 c8 01              u64 [sp + 0x1c8] = a1
115927: 7b 19 20 01              u64 [sp + 0x120] = a2
115931: 95 17 e0 01              a0 = sp + 0x1e0
115935: 7b 17 90 02              u64 [sp + 0x290] = a0
115939: 33 07 2c 02              a0 = 0x22c
115943: 7b 17 98 02              u64 [sp + 0x298] = a0
115947: 95 17 b0 01              a0 = sp + 0x1b0
115951: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
115955: 33 07 98 0c              a0 = 0xc98
115959: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
115963: 95 18 c8 01              a1 = sp + 0x1c8
115967: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
115971: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
115975: 95 18 20 01              a1 = sp + 0x120
115979: 7b 18 c0 02              u64 [sp + 0x2c0] = a1
115983: 7b 17 c8 02              u64 [sp + 0x2c8] = a0
115987: 33 07 08 0a 01           a0 = 0x10a08
115992: 7b 17 38 02              u64 [sp + 0x238] = a0
115996: 7b 16 40 02              u64 [sp + 0x240] = s1
116000: 49 21 58 02              u64 [sp + 600] = 0
116004: 95 17 90 02              a0 = sp + 0x290
116008: 7b 17 48 02              u64 [sp + 0x248] = a0
116012: 7b 16 50 02              u64 [sp + 0x250] = s1
116016: 95 17 08 02              a0 = sp + 0x208
116020: 95 18 38 02              a1 = sp + 0x238
116024: 50 20 5c 05 c2 8a fe     ra = 1372, jump @1503
      :                          @9052 [@dyn 686]
116031: 82 16 10 02              s1 = u64 [sp + 0x210]
116035: 82 1b 18 02              a4 = u64 [sp + 0x218]
116039: 82 17 08 02              a0 = u64 [sp + 0x208]
116043: 7b 17 70                 u64 [sp + 0x70] = a0
116046: 33 07 02                 a0 = 0x2
116049: 33 08                    a1 = 0
116051: 33 09                    a2 = 0
116053: 64 6a                    a3 = s1
116055: 33 00 5e 05              ra = 0x55e
116059: 0a 64                    ecalli 100 // 'log'
116061: 01                       fallthrough
      :                          @9053 [@dyn 687]
116062: 82 1c 70                 a5 = u64 [sp + 0x70]
116065: 82 17 68                 a0 = u64 [sp + 0x68]
116068: c8 c7 07                 a0 = a0 + a5
116071: 53 37 00 00 ff 25        jump @9059 if a0 <u 4294901760
      :                          @9054
116077: 33 07 c0 22 03           a0 = 0x322c0
116082: 95 77 00 00 01           a0 = a0 + 0x10000
116087: 01                       fallthrough
      :                          @9055
116088: 82 78                    a1 = u64 [a0]
116090: c9 87 09                 a2 = a0 - a1
116093: ab 69 0f                 jump @9059 if a2 != s1
      :                          @9056
116096: c9 c8 09                 a2 = a1 - a5
116099: 01                       fallthrough
      :                          @9057
116100: 82 7a                    a3 = u64 [a0]
116102: ab 8a f2                 jump @9055 if a3 != a1
      :                          @9058
116105: 7b 79                    u64 [a0] = a2
116107: 01                       fallthrough
      :                          @9059
116108: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
116112: 52 08 07                 jump @9061 if a1 != 0
      :                          @9060
116115: 28 f0 1c 01              jump @12868
      :                          @9061
116119: 54 28 00 10 09           jump @9063 if a1 <=u 4096
      :                          @9062
116124: 28 e7 1c 01              jump @12868
      :                          @9063
116128: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
116132: 97 88 04                 a1 = a1 << 0x4
116135: 33 09 c0 22 03           a2 = 0x322c0
116140: 95 99 00 00 01           a2 = a2 + 0x10000
116145: 01                       fallthrough
      :                          @9064
116146: 82 9a                    a3 = u64 [a2]
116148: c9 a9 0b                 a4 = a2 - a3
116151: aa 7b 07                 jump @9066 if a4 == a0
      :                          @9065
116154: 28 c9 1c 01              jump @12868
      :                          @9066
116158: c9 8a 0b                 a4 = a3 - a1
116161: 01                       fallthrough
      :                          @9067
116162: 82 9c                    a5 = u64 [a2]
116164: ab ac ee                 jump @9064 if a5 != a3
      :                          @9068
116167: 7b 9b                    u64 [a2] = a4
116169: 33 06                    s1 = 0
116171: 01                       fallthrough
      :                          @9069
116172: ab ac e6                 jump @9064 if a5 != a3
      :                          @9070
116175: 28 b4 1c 01              jump @12868
      :                          @9071 [@dyn 688]
116179: 3a 08 78 12 03           a1 = u64 [0x31278]
116184: 97 89 0d                 a2 = a1 << 0xd
116187: d3 89 09                 a2 = a2 ^ a1
116190: 98 9a 07                 a3 = a2 >> 0x7
116193: 3a 08 60 11 03           a1 = u64 [0x31160]
116198: d3 a9 09                 a2 = a2 ^ a3
116201: 97 9a 11                 a3 = a2 << 0x11
116204: d3 9a 0a                 a3 = a3 ^ a2
116207: ca 8a 0b                 a4 = a3 * a1
116210: 3a 09 70 11 03           a2 = u64 [0x31170]
116215: 3e 0a 78 12 03           u64 [0x31278] = a3
116220: 98 ba 01                 a3 = a4 >> 0x1
116223: d6 9a 0a                 a3 = a3 mulhu a2
116226: 98 ac 04                 a5 = a3 >> 0x4
116229: 3a 06 78 12 03           s1 = u64 [0x31278]
116234: 96 cc 32                 a5 = a5 * 0x32
116237: c9 cb 0b                 a4 = a4 - a5
116240: 97 6c 0d                 a5 = s1 << 0xd
116243: d3 c6 06                 s1 = s1 ^ a5
116246: 98 6c 07                 a5 = s1 >> 0x7
116249: d3 c6 06                 s1 = s1 ^ a5
116252: 97 6c 11                 a5 = s1 << 0x11
116255: d3 6c 0c                 a5 = a5 ^ s1
116258: ca 8c 06                 s1 = a5 * a1
116261: 3e 0c 78 12 03           u64 [0x31278] = a5
116266: 98 6c 01                 a5 = s1 >> 0x1
116269: d6 9c 0c                 a5 = a5 mulhu a2
116272: 98 cc 04                 a5 = a5 >> 0x4
116275: 96 cc 32                 a5 = a5 * 0x32
116278: c9 c6 06                 s1 = s1 - a5
116281: 7b 1b 20 01              u64 [sp + 0x120] = a4
116285: 7b 16 28 01              u64 [sp + 0x128] = s1
116289: 3a 0b 78 12 03           a4 = u64 [0x31278]
116294: 97 bc 0d                 a5 = a4 << 0xd
116297: d3 cb 0b                 a4 = a4 ^ a5
116300: 98 bc 07                 a5 = a4 >> 0x7
116303: d3 cb 0b                 a4 = a4 ^ a5
116306: 97 bc 11                 a5 = a4 << 0x11
116309: d3 cb 0b                 a4 = a4 ^ a5
116312: ca 8b 0c                 a5 = a4 * a1
116315: 3e 0b 78 12 03           u64 [0x31278] = a4
116320: 98 cb 01                 a4 = a5 >> 0x1
116323: d6 9b 0b                 a4 = a4 mulhu a2
116326: 98 bb 04                 a4 = a4 >> 0x4
116329: 3a 06 78 12 03           s1 = u64 [0x31278]
116334: 96 bb 32                 a4 = a4 * 0x32
116337: c9 bc 0c                 a5 = a5 - a4
116340: 97 6b 0d                 a4 = s1 << 0xd
116343: d3 b6 06                 s1 = s1 ^ a4
116346: 98 6b 07                 a4 = s1 >> 0x7
116349: d3 b6 06                 s1 = s1 ^ a4
116352: 97 6b 11                 a4 = s1 << 0x11
116355: d3 6b 0b                 a4 = a4 ^ s1
116358: ca 8b 08                 a1 = a4 * a1
116361: 3e 0b 78 12 03           u64 [0x31278] = a4
116366: 98 87 01                 a0 = a1 >> 0x1
116369: d6 97 07                 a0 = a0 mulhu a2
116372: 98 77 04                 a0 = a0 >> 0x4
116375: 96 77 32                 a0 = a0 * 0x32
116378: c9 78 08                 a1 = a1 - a0
116381: 82 17 20 01              a0 = u64 [sp + 0x120]
116385: 7b 1c e0 01              u64 [sp + 0x1e0] = a5
116389: 7b 18 e8 01              u64 [sp + 0x1e8] = a1
116393: 82 19 28 01              a2 = u64 [sp + 0x128]
116397: c9 c7 07                 a0 = a0 - a5
116400: 9a 7a                    a3 = -a0
116402: e3 a7 07                 a0 = maxs(a0, a3)
116405: c9 89 09                 a2 = a2 - a1
116408: 9a 98                    a1 = -a2
116410: e3 89 08                 a1 = maxs(a2, a1)
116413: c8 87 07                 a0 = a0 + a1
116416: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
116420: 95 17 20 01              a0 = sp + 0x120
116424: 7b 17 90 02              u64 [sp + 0x290] = a0
116428: 33 07 9e 01              a0 = 0x19e
116432: 7b 17 98 02              u64 [sp + 0x298] = a0
116436: 95 18 e0 01              a1 = sp + 0x1e0
116440: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
116444: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
116448: 95 17 c8 01              a0 = sp + 0x1c8
116452: 7b 17 b0 02              u64 [sp + 0x2b0] = a0
116456: 33 07 2c 0c              a0 = 0xc2c
116460: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
116464: 33 07 58 0a 01           a0 = 0x10a58
116469: 7b 17 38 02              u64 [sp + 0x238] = a0
116473: 49 21 40 02 03           u64 [sp + 576] = 0x3
116478: 49 21 58 02              u64 [sp + 600] = 0
116482: 95 18 90 02              a1 = sp + 0x290
116486: 7b 18 48 02              u64 [sp + 0x248] = a1
116490: 49 21 50 02 03           u64 [sp + 592] = 0x3
116495: 95 17 08 02              a0 = sp + 0x208
116499: 95 18 38 02              a1 = sp + 0x238
116503: 50 20 62 05 e3 88 fe     ra = 1378, jump @1503
      :                          @9072 [@dyn 689]
116510: 82 16 10 02              s1 = u64 [sp + 0x210]
116514: 82 1b 18 02              a4 = u64 [sp + 0x218]
116518: 82 17 08 02              a0 = u64 [sp + 0x208]
116522: 7b 17 70                 u64 [sp + 0x70] = a0
116525: 33 07 02                 a0 = 0x2
116528: 33 08                    a1 = 0
116530: 33 09                    a2 = 0
116532: 64 6a                    a3 = s1
116534: 33 00 64 05              ra = 0x564
116538: 0a 64                    ecalli 100 // 'log'
116540: 01                       fallthrough
      :                          @9073 [@dyn 690]
116541: 82 1c 70                 a5 = u64 [sp + 0x70]
116544: 82 17 68                 a0 = u64 [sp + 0x68]
116547: c8 c7 07                 a0 = a0 + a5
116550: 55 37 00 00 ff 0a        jump @9075 if a0 >=u 4294901760
      :                          @9074
116556: 28 37 1b 01              jump @12868
      :                          @9075
116560: 33 07 c0 22 03           a0 = 0x322c0
116565: 95 77 00 00 01           a0 = a0 + 0x10000
116570: 01                       fallthrough
      :                          @9076
116571: 82 78                    a1 = u64 [a0]
116573: c9 87 09                 a2 = a0 - a1
116576: aa 69 07                 jump @9078 if a2 == s1
      :                          @9077
116579: 28 20 1b 01              jump @12868
      :                          @9078
116583: c9 c8 09                 a2 = a1 - a5
116586: 01                       fallthrough
      :                          @9079
116587: 82 7a                    a3 = u64 [a0]
116589: ab 8a ee                 jump @9076 if a3 != a1
      :                          @9080
116592: 7b 79                    u64 [a0] = a2
116594: 33 0b                    a4 = 0
116596: 01                       fallthrough
      :                          @9081
116597: ab 8a e6                 jump @9076 if a3 != a1
      :                          @9082
116600: 28 0b 1b 01              jump @12868
      :                          @9083 [@dyn 691]
116604: 3a 08 78 12 03           a1 = u64 [0x31278]
116609: 97 89 0d                 a2 = a1 << 0xd
116612: d3 89 09                 a2 = a2 ^ a1
116615: 98 9a 07                 a3 = a2 >> 0x7
116618: 3a 08 60 11 03           a1 = u64 [0x31160]
116623: d3 a9 09                 a2 = a2 ^ a3
116626: 97 9a 11                 a3 = a2 << 0x11
116629: d3 9a 0a                 a3 = a3 ^ a2
116632: ca 8a 0b                 a4 = a3 * a1
116635: 3a 09 70 11 03           a2 = u64 [0x31170]
116640: 3e 0a 78 12 03           u64 [0x31278] = a3
116645: 98 ba 01                 a3 = a4 >> 0x1
116648: d6 9a 0a                 a3 = a3 mulhu a2
116651: 98 ac 04                 a5 = a3 >> 0x4
116654: 3a 06 78 12 03           s1 = u64 [0x31278]
116659: 96 cc 32                 a5 = a5 * 0x32
116662: c9 cb 0b                 a4 = a4 - a5
116665: 97 6c 0d                 a5 = s1 << 0xd
116668: d3 c6 06                 s1 = s1 ^ a5
116671: 98 6c 07                 a5 = s1 >> 0x7
116674: d3 c6 06                 s1 = s1 ^ a5
116677: 97 6c 11                 a5 = s1 << 0x11
116680: d3 6c 0c                 a5 = a5 ^ s1
116683: ca 8c 06                 s1 = a5 * a1
116686: 3e 0c 78 12 03           u64 [0x31278] = a5
116691: 98 6c 01                 a5 = s1 >> 0x1
116694: d6 9c 0c                 a5 = a5 mulhu a2
116697: 98 cc 04                 a5 = a5 >> 0x4
116700: 96 cc 32                 a5 = a5 * 0x32
116703: c9 c6 06                 s1 = s1 - a5
116706: 7b 1b 20 01              u64 [sp + 0x120] = a4
116710: 7b 16 28 01              u64 [sp + 0x128] = s1
116714: 3a 0b 78 12 03           a4 = u64 [0x31278]
116719: 97 bc 0d                 a5 = a4 << 0xd
116722: d3 cb 0b                 a4 = a4 ^ a5
116725: 98 bc 07                 a5 = a4 >> 0x7
116728: d3 cb 0b                 a4 = a4 ^ a5
116731: 97 bc 11                 a5 = a4 << 0x11
116734: d3 cb 0b                 a4 = a4 ^ a5
116737: ca 8b 0c                 a5 = a4 * a1
116740: 3e 0b 78 12 03           u64 [0x31278] = a4
116745: 98 cb 01                 a4 = a5 >> 0x1
116748: d6 9b 0b                 a4 = a4 mulhu a2
116751: 98 bb 04                 a4 = a4 >> 0x4
116754: 3a 06 78 12 03           s1 = u64 [0x31278]
116759: 96 bb 32                 a4 = a4 * 0x32
116762: c9 bc 0c                 a5 = a5 - a4
116765: 97 6b 0d                 a4 = s1 << 0xd
116768: d3 b6 06                 s1 = s1 ^ a4
116771: 98 6b 07                 a4 = s1 >> 0x7
116774: d3 b6 06                 s1 = s1 ^ a4
116777: 97 6b 11                 a4 = s1 << 0x11
116780: d3 6b 0b                 a4 = a4 ^ s1
116783: ca 8b 08                 a1 = a4 * a1
116786: 3e 0b 78 12 03           u64 [0x31278] = a4
116791: 98 87 01                 a0 = a1 >> 0x1
116794: d6 97 07                 a0 = a0 mulhu a2
116797: 98 77 04                 a0 = a0 >> 0x4
116800: 96 77 32                 a0 = a0 * 0x32
116803: c9 78 08                 a1 = a1 - a0
116806: 82 17 20 01              a0 = u64 [sp + 0x120]
116810: 7b 1c e0 01              u64 [sp + 0x1e0] = a5
116814: 7b 18 e8 01              u64 [sp + 0x1e8] = a1
116818: 82 19 28 01              a2 = u64 [sp + 0x128]
116822: c9 c7 07                 a0 = a0 - a5
116825: 9a 7a                    a3 = -a0
116827: e3 a7 07                 a0 = maxs(a0, a3)
116830: c9 89 09                 a2 = a2 - a1
116833: 9a 98                    a1 = -a2
116835: e3 89 08                 a1 = maxs(a2, a1)
116838: e4 87 07                 a0 = maxu(a0, a1)
116841: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
116845: 95 17 20 01              a0 = sp + 0x120
116849: 7b 17 90 02              u64 [sp + 0x290] = a0
116853: 33 07 9e 01              a0 = 0x19e
116857: 7b 17 98 02              u64 [sp + 0x298] = a0
116861: 95 18 e0 01              a1 = sp + 0x1e0
116865: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
116869: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
116873: 95 17 c8 01              a0 = sp + 0x1c8
116877: 7b 17 b0 02              u64 [sp + 0x2b0] = a0
116881: 33 07 2c 0c              a0 = 0xc2c
116885: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
116889: 33 07 98 0a 01           a0 = 0x10a98
116894: 7b 17 38 02              u64 [sp + 0x238] = a0
116898: 49 21 40 02 03           u64 [sp + 576] = 0x3
116903: 49 21 58 02              u64 [sp + 600] = 0
116907: 95 18 90 02              a1 = sp + 0x290
116911: 7b 18 48 02              u64 [sp + 0x248] = a1
116915: 49 21 50 02 03           u64 [sp + 592] = 0x3
116920: 95 17 08 02              a0 = sp + 0x208
116924: 95 18 38 02              a1 = sp + 0x238
116928: 50 20 68 05 3a 87 fe     ra = 1384, jump @1503
      :                          @9084 [@dyn 692]
116935: 82 16 10 02              s1 = u64 [sp + 0x210]
116939: 82 1b 18 02              a4 = u64 [sp + 0x218]
116943: 82 17 08 02              a0 = u64 [sp + 0x208]
116947: 7b 17 70                 u64 [sp + 0x70] = a0
116950: 33 07 02                 a0 = 0x2
116953: 33 08                    a1 = 0
116955: 33 09                    a2 = 0
116957: 64 6a                    a3 = s1
116959: 33 00 6a 05              ra = 0x56a
116963: 0a 64                    ecalli 100 // 'log'
116965: 01                       fallthrough
      :                          @9085 [@dyn 693]
116966: 82 1c 70                 a5 = u64 [sp + 0x70]
116969: 82 17 68                 a0 = u64 [sp + 0x68]
116972: c8 c7 07                 a0 = a0 + a5
116975: 55 37 00 00 ff 0a        jump @9087 if a0 >=u 4294901760
      :                          @9086
116981: 28 8e 19 01              jump @12868
      :                          @9087
116985: 33 07 c0 22 03           a0 = 0x322c0
116990: 95 77 00 00 01           a0 = a0 + 0x10000
116995: 01                       fallthrough
      :                          @9088
116996: 82 78                    a1 = u64 [a0]
116998: c9 87 09                 a2 = a0 - a1
117001: aa 69 07                 jump @9090 if a2 == s1
      :                          @9089
117004: 28 77 19 01              jump @12868
      :                          @9090
117008: c9 c8 09                 a2 = a1 - a5
117011: 01                       fallthrough
      :                          @9091
117012: 82 7a                    a3 = u64 [a0]
117014: ab 8a ee                 jump @9088 if a3 != a1
      :                          @9092
117017: 7b 79                    u64 [a0] = a2
117019: 33 0b                    a4 = 0
117021: 01                       fallthrough
      :                          @9093
117022: ab 8a e6                 jump @9088 if a3 != a1
      :                          @9094
117025: 28 62 19 01              jump @12868
      :                          @9095 [@dyn 694]
117029: 3a 07 78 12 03           a0 = u64 [0x31278]
117034: 97 78 0d                 a1 = a0 << 0xd
117037: d3 87 07                 a0 = a0 ^ a1
117040: 98 78 07                 a1 = a0 >> 0x7
117043: 3a 09 60 11 03           a2 = u64 [0x31160]
117048: d3 87 07                 a0 = a0 ^ a1
117051: 97 78 11                 a1 = a0 << 0x11
117054: d3 87 07                 a0 = a0 ^ a1
117057: ca 97 08                 a1 = a0 * a2
117060: 64 9c                    a5 = a2
117062: 7b 19 58                 u64 [sp + 0x58] = a2
117065: 3e 07 78 12 03           u64 [0x31278] = a0
117070: 14 09 cd cc cc cc cc cc cc cc a2 = 0xcccccccccccccccd
117080: d6 98 07                 a0 = a1 mulhu a2
117083: 98 77 03                 a0 = a0 >> 0x3
117086: 3a 0a 78 12 03           a3 = u64 [0x31278]
117091: 96 77 0a                 a0 = a0 * 0xa
117094: c9 78 08                 a1 = a1 - a0
117097: 7b 18 70                 u64 [sp + 0x70] = a1
117100: 97 a7 0d                 a0 = a3 << 0xd
117103: d3 a7 07                 a0 = a0 ^ a3
117106: 98 78 07                 a1 = a0 >> 0x7
117109: d3 87 07                 a0 = a0 ^ a1
117112: 97 78 11                 a1 = a0 << 0x11
117115: d3 87 07                 a0 = a0 ^ a1
117118: ca c7 08                 a1 = a0 * a5
117121: 3e 07 78 12 03           u64 [0x31278] = a0
117126: d6 98 07                 a0 = a1 mulhu a2
117129: 98 77 03                 a0 = a0 >> 0x3
117132: 3a 0a 78 12 03           a3 = u64 [0x31278]
117137: 96 77 0a                 a0 = a0 * 0xa
117140: c9 78 08                 a1 = a1 - a0
117143: 7b 18 60                 u64 [sp + 0x60] = a1
117146: 97 a7 0d                 a0 = a3 << 0xd
117149: d3 a7 07                 a0 = a0 ^ a3
117152: 98 78 07                 a1 = a0 >> 0x7
117155: d3 87 07                 a0 = a0 ^ a1
117158: 97 78 11                 a1 = a0 << 0x11
117161: d3 87 07                 a0 = a0 ^ a1
117164: ca c7 08                 a1 = a0 * a5
117167: 3e 07 78 12 03           u64 [0x31278] = a0
117172: d6 98 07                 a0 = a1 mulhu a2
117175: 7b 19 48                 u64 [sp + 0x48] = a2
117178: 98 76 02                 s1 = a0 >> 0x2
117181: 84 77 fc                 a0 = a0 & 0xfffffffffffffffc
117184: 3a 0a 78 12 03           a3 = u64 [0x31278]
117189: c8 67 07                 a0 = a0 + s1
117192: c9 78 08                 a1 = a1 - a0
117195: 7b 18 40                 u64 [sp + 0x40] = a1
117198: 97 a7 0d                 a0 = a3 << 0xd
117201: d3 a7 07                 a0 = a0 ^ a3
117204: 98 78 07                 a1 = a0 >> 0x7
117207: d3 87 07                 a0 = a0 ^ a1
117210: 97 78 11                 a1 = a0 << 0x11
117213: d3 87 07                 a0 = a0 ^ a1
117216: ca c7 08                 a1 = a0 * a5
117219: 3e 07 78 12 03           u64 [0x31278] = a0
117224: d6 98 07                 a0 = a1 mulhu a2
117227: 98 79 02                 a2 = a0 >> 0x2
117230: 84 77 fc                 a0 = a0 & 0xfffffffffffffffc
117233: c8 97 07                 a0 = a0 + a2
117236: c9 78 06                 s1 = a1 - a0
117239: 33 07 40                 a0 = 0x40
117242: 50 20 6e 05 b7 86 fe     ra = 1390, jump @1521
      :                          @9096 [@dyn 695]
117249: 82 19 70                 a2 = u64 [sp + 0x70]
117252: 82 18 40                 a1 = u64 [sp + 0x40]
117255: c8 98 08                 a1 = a1 + a2
117258: 95 88 01                 a1 = a1 + 0x1
117261: 82 1a 60                 a3 = u64 [sp + 0x60]
117264: c8 a6 06                 s1 = s1 + a3
117267: 95 66 01                 s1 = s1 + 0x1
117270: 7b 79                    u64 [a0] = a2
117272: 7b 7a 08                 u64 [a0 + 0x8] = a3
117275: 7b 78 10                 u64 [a0 + 0x10] = a1
117278: 7b 7a 18                 u64 [a0 + 0x18] = a3
117281: 7b 78 20                 u64 [a0 + 0x20] = a1
117284: 7b 76 28                 u64 [a0 + 0x28] = s1
117287: 7b 79 30                 u64 [a0 + 0x30] = a2
117290: 7b 76 38                 u64 [a0 + 0x38] = s1
117293: 49 21 e0 01 04           u64 [sp + 480] = 0x4
117298: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
117302: 49 21 f0 01 04           u64 [sp + 496] = 0x4
117307: 3a 07 78 12 03           a0 = u64 [0x31278]
117312: 97 78 0d                 a1 = a0 << 0xd
117315: d3 87 07                 a0 = a0 ^ a1
117318: 98 78 07                 a1 = a0 >> 0x7
117321: d3 87 07                 a0 = a0 ^ a1
117324: 97 78 11                 a1 = a0 << 0x11
117327: d3 87 07                 a0 = a0 ^ a1
117330: 82 1b 58                 a4 = u64 [sp + 0x58]
117333: ca b7 08                 a1 = a0 * a4
117336: 3e 07 78 12 03           u64 [0x31278] = a0
117341: 82 16 48                 s1 = u64 [sp + 0x48]
117344: d6 68 07                 a0 = a1 mulhu s1
117347: 98 77 04                 a0 = a0 >> 0x4
117350: 3a 0a 78 12 03           a3 = u64 [0x31278]
117355: 33 0c 78 12 03           a5 = 0x31278
117360: 96 77 14                 a0 = a0 * 0x14
117363: c9 78 07                 a0 = a1 - a0
117366: 97 a8 0d                 a1 = a3 << 0xd
117369: d3 a8 08                 a1 = a1 ^ a3
117372: 98 8a 07                 a3 = a1 >> 0x7
117375: d3 a8 08                 a1 = a1 ^ a3
117378: 97 8a 11                 a3 = a1 << 0x11
117381: d3 a8 08                 a1 = a1 ^ a3
117384: ca b8 0b                 a4 = a1 * a4
117387: 3e 08 78 12 03           u64 [0x31278] = a1
117392: d6 6b 08                 a1 = a4 mulhu s1
117395: 98 88 04                 a1 = a1 >> 0x4
117398: 96 88 14                 a1 = a1 * 0x14
117401: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
117405: 82 1a f0 01              a3 = u64 [sp + 0x1f0]
117409: c9 8b 08                 a1 = a4 - a1
117412: 7b 17 20 01              u64 [sp + 0x120] = a0
117416: 7b 18 28 01              u64 [sp + 0x128] = a1
117420: 50 20 70 05 16 3e ff     ra = 1392, jump @5313
      :                          @9097 [@dyn 696]
117427: 78 17 c8 01              u8 [sp + 0x1c8] = a0
117431: 95 17 20 01              a0 = sp + 0x120
117435: 7b 17 90 02              u64 [sp + 0x290] = a0
117439: 33 07 9e 01              a0 = 0x19e
117443: 7b 17 98 02              u64 [sp + 0x298] = a0
117447: 95 17 e0 01              a0 = sp + 0x1e0
117451: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
117455: 33 07 2c 02              a0 = 0x22c
117459: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
117463: 95 17 c8 01              a0 = sp + 0x1c8
117467: 7b 17 b0 02              u64 [sp + 0x2b0] = a0
117471: 33 07 84 0c              a0 = 0xc84
117475: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
117479: 33 07 d0 0a 01           a0 = 0x10ad0
117484: 7b 17 38 02              u64 [sp + 0x238] = a0
117488: 49 21 40 02 03           u64 [sp + 576] = 0x3
117493: 49 21 58 02              u64 [sp + 600] = 0
117497: 95 18 90 02              a1 = sp + 0x290
117501: 7b 18 48 02              u64 [sp + 0x248] = a1
117505: 49 21 50 02 03           u64 [sp + 592] = 0x3
117510: 95 17 08 02              a0 = sp + 0x208
117514: 95 18 38 02              a1 = sp + 0x238
117518: 50 20 72 05 ec 84 fe     ra = 1394, jump @1503
      :                          @9098 [@dyn 697]
117525: 82 16 10 02              s1 = u64 [sp + 0x210]
117529: 82 1b 18 02              a4 = u64 [sp + 0x218]
117533: 82 17 08 02              a0 = u64 [sp + 0x208]
117537: 7b 17 70                 u64 [sp + 0x70] = a0
117540: 33 07 02                 a0 = 0x2
117543: 33 08                    a1 = 0
117545: 33 09                    a2 = 0
117547: 64 6a                    a3 = s1
117549: 33 00 74 05              ra = 0x574
117553: 0a 64                    ecalli 100 // 'log'
117555: 01                       fallthrough
      :                          @9099 [@dyn 698]
117556: 82 1c 70                 a5 = u64 [sp + 0x70]
117559: 82 17 68                 a0 = u64 [sp + 0x68]
117562: c8 c7 07                 a0 = a0 + a5
117565: 53 37 00 00 ff 25        jump @9105 if a0 <u 4294901760
      :                          @9100
117571: 33 07 c0 22 03           a0 = 0x322c0
117576: 95 77 00 00 01           a0 = a0 + 0x10000
117581: 01                       fallthrough
      :                          @9101
117582: 82 78                    a1 = u64 [a0]
117584: c9 87 09                 a2 = a0 - a1
117587: ab 69 0f                 jump @9105 if a2 != s1
      :                          @9102
117590: c9 c8 09                 a2 = a1 - a5
117593: 01                       fallthrough
      :                          @9103
117594: 82 7a                    a3 = u64 [a0]
117596: ab 8a f2                 jump @9101 if a3 != a1
      :                          @9104
117599: 7b 79                    u64 [a0] = a2
117601: 01                       fallthrough
      :                          @9105
117602: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
117606: 52 08 07                 jump @9107 if a1 != 0
      :                          @9106
117609: 28 1a 17 01              jump @12868
      :                          @9107
117613: 54 28 00 10 09           jump @9109 if a1 <=u 4096
      :                          @9108
117618: 28 11 17 01              jump @12868
      :                          @9109
117622: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
117626: 97 88 04                 a1 = a1 << 0x4
117629: 33 09 c0 22 03           a2 = 0x322c0
117634: 95 99 00 00 01           a2 = a2 + 0x10000
117639: 01                       fallthrough
      :                          @9110
117640: 82 9a                    a3 = u64 [a2]
117642: c9 a9 0b                 a4 = a2 - a3
117645: aa 7b 07                 jump @9112 if a4 == a0
      :                          @9111
117648: 28 f3 16 01              jump @12868
      :                          @9112
117652: c9 8a 0b                 a4 = a3 - a1
117655: 01                       fallthrough
      :                          @9113
117656: 82 9c                    a5 = u64 [a2]
117658: ab ac ee                 jump @9110 if a5 != a3
      :                          @9114
117661: 7b 9b                    u64 [a2] = a4
117663: 33 06                    s1 = 0
117665: 01                       fallthrough
      :                          @9115
117666: ab ac e6                 jump @9110 if a5 != a3
      :                          @9116
117669: 28 de 16 01              jump @12868
      :                          @9117 [@dyn 699]
117673: 3a 07 78 12 03           a0 = u64 [0x31278]
117678: 3a 08 60 11 03           a1 = u64 [0x31160]
117683: 7b 18 70                 u64 [sp + 0x70] = a1
117686: 97 78 0d                 a1 = a0 << 0xd
117689: d3 87 07                 a0 = a0 ^ a1
117692: 98 78 07                 a1 = a0 >> 0x7
117695: d3 87 07                 a0 = a0 ^ a1
117698: 97 78 11                 a1 = a0 << 0x11
117701: d3 78 08                 a1 = a1 ^ a0
117704: 97 79 02                 a2 = a0 << 0x2
117707: c8 97 07                 a0 = a0 + a2
117710: 3e 08 78 12 03           u64 [0x31278] = a1
117715: 84 77 07                 a0 = a0 & 0x7
117718: 95 76 03                 s1 = a0 + 0x3
117721: 64 67                    a0 = s1
117723: 50 20 78 05 13 87 fe     ra = 1400, jump @1574
      :                          @9118 [@dyn 700]
117730: 7b 17 20 01              u64 [sp + 0x120] = a0
117734: 3a 03 70 11 03           t1 = u64 [0x31170]
117739: 7b 18 28 01              u64 [sp + 0x128] = a1
117743: 49 21 30 01              u64 [sp + 304] = 0
117747: 33 02 32                 t0 = 0x32
117750: 7b 13 48                 u64 [sp + 0x48] = t1
117753: 28 49                    jump @9121
      :                          @9119
117755: 82 1a 70                 a3 = u64 [sp + 0x70]
117758: ca ab 07                 a0 = a4 * a3
117761: 98 79 01                 a2 = a0 >> 0x1
117764: d6 39 09                 a2 = a2 mulhu t1
117767: 98 99 04                 a2 = a2 >> 0x4
117770: ca 29 09                 a2 = a2 * t0
117773: c9 97 07                 a0 = a0 - a2
117776: ca ac 09                 a2 = a5 * a3
117779: 98 9a 01                 a3 = a2 >> 0x1
117782: d6 3a 0a                 a3 = a3 mulhu t1
117785: 98 aa 04                 a3 = a3 >> 0x4
117788: 82 1b 28 01              a4 = u64 [sp + 0x128]
117792: ca 2a 0a                 a3 = a3 * t0
117795: c9 a9 09                 a2 = a2 - a3
117798: 97 8a 04                 a3 = a1 << 0x4
117801: c8 ba 0a                 a3 = a3 + a4
117804: 7b a7                    u64 [a3] = a0
117806: 7b a9 08                 u64 [a3 + 0x8] = a2
117809: 95 89 01                 a2 = a1 + 0x1
117812: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
117815: 7b 19 30 01              u64 [sp + 0x130] = a2
117819: 52 06 07                 jump @9121 if s1 != 0
      :                          @9120
117822: 28 03 ff 00              jump @12405
      :                          @9121
117826: 3a 07 78 12 03           a0 = u64 [0x31278]
117831: 97 78 0d                 a1 = a0 << 0xd
117834: d3 87 07                 a0 = a0 ^ a1
117837: 98 78 07                 a1 = a0 >> 0x7
117840: d3 87 07                 a0 = a0 ^ a1
117843: 97 78 11                 a1 = a0 << 0x11
117846: d3 78 0b                 a4 = a1 ^ a0
117849: 3e 0b 78 12 03           u64 [0x31278] = a4
117854: 3a 07 78 12 03           a0 = u64 [0x31278]
117859: 97 78 0d                 a1 = a0 << 0xd
117862: d3 87 07                 a0 = a0 ^ a1
117865: 98 78 07                 a1 = a0 >> 0x7
117868: d3 87 07                 a0 = a0 ^ a1
117871: 97 78 11                 a1 = a0 << 0x11
117874: d3 78 0c                 a5 = a1 ^ a0
117877: 3e 0c 78 12 03           u64 [0x31278] = a5
117882: 82 18 30 01              a1 = u64 [sp + 0x130]
117886: 82 17 20 01              a0 = u64 [sp + 0x120]
117890: ab 78 79 ff              jump @9119 if a1 != a0
      :                          @9122
117894: 95 17 20 01              a0 = sp + 0x120
117898: 7b 1b 60                 u64 [sp + 0x60] = a4
117901: 7b 1c 58                 u64 [sp + 0x58] = a5
117904: 50 20 7a 05 b2 87 fe     ra = 1402, jump @1605
      :                          @9123 [@dyn 701]
117911: 82 1c 58                 a5 = u64 [sp + 0x58]
117914: 82 1b 60                 a4 = u64 [sp + 0x60]
117917: 33 02 32                 t0 = 0x32
117920: 82 13 48                 t1 = u64 [sp + 0x48]
117923: 82 18 30 01              a1 = u64 [sp + 0x130]
117927: 28 54 ff                 jump @9119
      :                          @9124 [@dyn 702]
117930: 3a 08 78 12 03           a1 = u64 [0x31278]
117935: 97 89 0d                 a2 = a1 << 0xd
117938: d3 89 09                 a2 = a2 ^ a1
117941: 98 9a 07                 a3 = a2 >> 0x7
117944: 3a 08 60 11 03           a1 = u64 [0x31160]
117949: d3 a9 09                 a2 = a2 ^ a3
117952: 97 9a 11                 a3 = a2 << 0x11
117955: d3 9a 0a                 a3 = a3 ^ a2
117958: ca 8a 0b                 a4 = a3 * a1
117961: 3a 09 70 11 03           a2 = u64 [0x31170]
117966: 3e 0a 78 12 03           u64 [0x31278] = a3
117971: 98 ba 01                 a3 = a4 >> 0x1
117974: d6 9a 0a                 a3 = a3 mulhu a2
117977: 98 ac 04                 a5 = a3 >> 0x4
117980: 3a 06 78 12 03           s1 = u64 [0x31278]
117985: 96 cc 32                 a5 = a5 * 0x32
117988: c9 cb 0b                 a4 = a4 - a5
117991: 97 6c 0d                 a5 = s1 << 0xd
117994: d3 c6 06                 s1 = s1 ^ a5
117997: 98 6c 07                 a5 = s1 >> 0x7
118000: d3 c6 06                 s1 = s1 ^ a5
118003: 97 6c 11                 a5 = s1 << 0x11
118006: d3 6c 0c                 a5 = a5 ^ s1
118009: ca 8c 06                 s1 = a5 * a1
118012: 3e 0c 78 12 03           u64 [0x31278] = a5
118017: 98 6c 01                 a5 = s1 >> 0x1
118020: d6 9c 0c                 a5 = a5 mulhu a2
118023: 98 cc 04                 a5 = a5 >> 0x4
118026: 96 cc 32                 a5 = a5 * 0x32
118029: c9 c6 06                 s1 = s1 - a5
118032: 7b 1b b0 01              u64 [sp + 0x1b0] = a4
118036: 7b 16 b8 01              u64 [sp + 0x1b8] = s1
118040: 3a 0b 78 12 03           a4 = u64 [0x31278]
118045: 97 bc 0d                 a5 = a4 << 0xd
118048: d3 cb 0b                 a4 = a4 ^ a5
118051: 98 bc 07                 a5 = a4 >> 0x7
118054: d3 cb 0b                 a4 = a4 ^ a5
118057: 97 bc 11                 a5 = a4 << 0x11
118060: d3 cb 0b                 a4 = a4 ^ a5
118063: ca 8b 0c                 a5 = a4 * a1
118066: 3e 0b 78 12 03           u64 [0x31278] = a4
118071: 98 cb 01                 a4 = a5 >> 0x1
118074: d6 9b 0b                 a4 = a4 mulhu a2
118077: 98 bb 04                 a4 = a4 >> 0x4
118080: 3a 06 78 12 03           s1 = u64 [0x31278]
118085: 96 bb 32                 a4 = a4 * 0x32
118088: c9 bc 0c                 a5 = a5 - a4
118091: 97 6b 0d                 a4 = s1 << 0xd
118094: d3 b6 06                 s1 = s1 ^ a4
118097: 98 6b 07                 a4 = s1 >> 0x7
118100: d3 b6 06                 s1 = s1 ^ a4
118103: 97 6b 11                 a4 = s1 << 0x11
118106: d3 6b 0b                 a4 = a4 ^ s1
118109: ca 8b 06                 s1 = a4 * a1
118112: 3e 0b 78 12 03           u64 [0x31278] = a4
118117: 98 6b 01                 a4 = s1 >> 0x1
118120: d6 9b 0b                 a4 = a4 mulhu a2
118123: 98 bb 04                 a4 = a4 >> 0x4
118126: 96 bb 32                 a4 = a4 * 0x32
118129: c9 b6 06                 s1 = s1 - a4
118132: 7b 1c c8 01              u64 [sp + 0x1c8] = a5
118136: 7b 16 d0 01              u64 [sp + 0x1d0] = s1
118140: 3a 0b 78 12 03           a4 = u64 [0x31278]
118145: 97 bc 0d                 a5 = a4 << 0xd
118148: d3 cb 0b                 a4 = a4 ^ a5
118151: 98 bc 07                 a5 = a4 >> 0x7
118154: d3 cb 0b                 a4 = a4 ^ a5
118157: 97 bc 11                 a5 = a4 << 0x11
118160: d3 cb 0b                 a4 = a4 ^ a5
118163: ca 8b 0c                 a5 = a4 * a1
118166: 3e 0b 78 12 03           u64 [0x31278] = a4
118171: 98 cb 01                 a4 = a5 >> 0x1
118174: d6 9b 0b                 a4 = a4 mulhu a2
118177: 98 bb 04                 a4 = a4 >> 0x4
118180: 3a 06 78 12 03           s1 = u64 [0x31278]
118185: 96 bb 32                 a4 = a4 * 0x32
118188: c9 bc 0c                 a5 = a5 - a4
118191: 97 6b 0d                 a4 = s1 << 0xd
118194: d3 b6 06                 s1 = s1 ^ a4
118197: 98 6b 07                 a4 = s1 >> 0x7
118200: d3 b6 06                 s1 = s1 ^ a4
118203: 97 6b 11                 a4 = s1 << 0x11
118206: d3 6b 0b                 a4 = a4 ^ s1
118209: ca 8b 06                 s1 = a4 * a1
118212: 3e 0b 78 12 03           u64 [0x31278] = a4
118217: 98 6b 01                 a4 = s1 >> 0x1
118220: d6 9b 0b                 a4 = a4 mulhu a2
118223: 98 bb 04                 a4 = a4 >> 0x4
118226: 96 bb 32                 a4 = a4 * 0x32
118229: c9 b6 06                 s1 = s1 - a4
118232: 7b 1c 20 01              u64 [sp + 0x120] = a5
118236: 7b 16 28 01              u64 [sp + 0x128] = s1
118240: 3a 0b 78 12 03           a4 = u64 [0x31278]
118245: 97 bc 0d                 a5 = a4 << 0xd
118248: d3 cb 0b                 a4 = a4 ^ a5
118251: 98 bc 07                 a5 = a4 >> 0x7
118254: d3 cb 0b                 a4 = a4 ^ a5
118257: 97 bc 11                 a5 = a4 << 0x11
118260: d3 cb 0b                 a4 = a4 ^ a5
118263: ca 8b 0c                 a5 = a4 * a1
118266: 3e 0b 78 12 03           u64 [0x31278] = a4
118271: 98 cb 01                 a4 = a5 >> 0x1
118274: d6 9b 0b                 a4 = a4 mulhu a2
118277: 98 bb 04                 a4 = a4 >> 0x4
118280: 3a 06 78 12 03           s1 = u64 [0x31278]
118285: 96 bb 32                 a4 = a4 * 0x32
118288: c9 bc 04                 t2 = a5 - a4
118291: 97 6b 0d                 a4 = s1 << 0xd
118294: d3 6b 0b                 a4 = a4 ^ s1
118297: 98 bc 07                 a5 = a4 >> 0x7
118300: d3 cb 0b                 a4 = a4 ^ a5
118303: 97 bc 11                 a5 = a4 << 0x11
118306: d3 cb 0b                 a4 = a4 ^ a5
118309: ca 8b 06                 s1 = a4 * a1
118312: 3e 0b 78 12 03           u64 [0x31278] = a4
118317: 98 67 01                 a0 = s1 >> 0x1
118320: d6 97 07                 a0 = a0 mulhu a2
118323: 98 77 04                 a0 = a0 >> 0x4
118326: 96 72 32                 t0 = a0 * 0x32
118329: 82 17 b0 01              a0 = u64 [sp + 0x1b0]
118333: 82 18 b8 01              a1 = u64 [sp + 0x1b8]
118337: 82 19 c8 01              a2 = u64 [sp + 0x1c8]
118341: 82 1a d0 01              a3 = u64 [sp + 0x1d0]
118345: 82 1b 20 01              a4 = u64 [sp + 0x120]
118349: 82 1c 28 01              a5 = u64 [sp + 0x128]
118353: c9 26 06                 s1 = s1 - t0
118356: 7b 14 e0 01              u64 [sp + 0x1e0] = t2
118360: 7b 16 e8 01              u64 [sp + 0x1e8] = s1
118364: 7b 16                    u64 [sp] = s1
118366: 50 20 7e 05 a0 3d ff     ra = 1406, jump @5383
      :                          @9125 [@dyn 703]
118373: 78 17 10 01              u8 [sp + 0x110] = a0
118377: 95 17 b0 01              a0 = sp + 0x1b0
118381: 7b 17 90 02              u64 [sp + 0x290] = a0
118385: 33 07 9e 01              a0 = 0x19e
118389: 7b 17 98 02              u64 [sp + 0x298] = a0
118393: 95 18 c8 01              a1 = sp + 0x1c8
118397: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
118401: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
118405: 95 18 20 01              a1 = sp + 0x120
118409: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
118413: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
118417: 95 18 e0 01              a1 = sp + 0x1e0
118421: 7b 18 c0 02              u64 [sp + 0x2c0] = a1
118425: 7b 17 c8 02              u64 [sp + 0x2c8] = a0
118429: 95 17 10 01              a0 = sp + 0x110
118433: 7b 17 d0 02              u64 [sp + 0x2d0] = a0
118437: 33 07 84 0c              a0 = 0xc84
118441: 7b 17 d8 02              u64 [sp + 0x2d8] = a0
118445: 33 07 58 0b 01           a0 = 0x10b58
118450: 7b 17 38 02              u64 [sp + 0x238] = a0
118454: 49 21 40 02 05           u64 [sp + 576] = 0x5
118459: 49 21 58 02              u64 [sp + 600] = 0
118463: 95 18 90 02              a1 = sp + 0x290
118467: 7b 18 48 02              u64 [sp + 0x248] = a1
118471: 49 21 50 02 05           u64 [sp + 592] = 0x5
118476: 95 17 08 02              a0 = sp + 0x208
118480: 95 18 38 02              a1 = sp + 0x238
118484: 50 20 80 05 26 81 fe     ra = 1408, jump @1503
      :                          @9126 [@dyn 704]
118491: 82 16 10 02              s1 = u64 [sp + 0x210]
118495: 82 1b 18 02              a4 = u64 [sp + 0x218]
118499: 82 17 08 02              a0 = u64 [sp + 0x208]
118503: 7b 17 70                 u64 [sp + 0x70] = a0
118506: 33 07 02                 a0 = 0x2
118509: 33 08                    a1 = 0
118511: 33 09                    a2 = 0
118513: 64 6a                    a3 = s1
118515: 33 00 82 05              ra = 0x582
118519: 0a 64                    ecalli 100 // 'log'
118521: 01                       fallthrough
      :                          @9127 [@dyn 705]
118522: 82 1c 70                 a5 = u64 [sp + 0x70]
118525: 82 17 68                 a0 = u64 [sp + 0x68]
118528: c8 c7 07                 a0 = a0 + a5
118531: 55 37 00 00 ff 0a        jump @9129 if a0 >=u 4294901760
      :                          @9128
118537: 28 7a 13 01              jump @12868
      :                          @9129
118541: 33 07 c0 22 03           a0 = 0x322c0
118546: 95 77 00 00 01           a0 = a0 + 0x10000
118551: 01                       fallthrough
      :                          @9130
118552: 82 78                    a1 = u64 [a0]
118554: c9 87 09                 a2 = a0 - a1
118557: aa 69 07                 jump @9132 if a2 == s1
      :                          @9131
118560: 28 63 13 01              jump @12868
      :                          @9132
118564: c9 c8 09                 a2 = a1 - a5
118567: 01                       fallthrough
      :                          @9133
118568: 82 7a                    a3 = u64 [a0]
118570: ab 8a ee                 jump @9130 if a3 != a1
      :                          @9134
118573: 7b 79                    u64 [a0] = a2
118575: 33 0b                    a4 = 0
118577: 01                       fallthrough
      :                          @9135
118578: ab 8a e6                 jump @9130 if a3 != a1
      :                          @9136
118581: 28 4e 13 01              jump @12868
      :                          @9137 [@dyn 706]
118585: 3a 07 60 11 03           a0 = u64 [0x31160]
118590: 7b 17 70                 u64 [sp + 0x70] = a0
118593: 95 17 90 02              a0 = sp + 0x290
118597: 33 00 86 05              ra = 0x586
118601: 95 11 e8                 sp = sp + 0xffffffffffffffe8
118604: 7b 10 10                 u64 [sp + 0x10] = ra
118607: 7b 15 08                 u64 [sp + 0x8] = s0
118610: 7b 16                    u64 [sp] = s1
118612: 64 75                    s0 = a0
118614: 33 09 c0 22 03           a2 = 0x322c0
118619: 33 07 00 00 01           a0 = 0x10000
118624: c8 79 09                 a2 = a2 + a0
118627: 28 c5 97 fe              jump @1941
      :                          @9138 [@dyn 707]
118631: 95 17 e0 01              a0 = sp + 0x1e0
118635: 95 18 90 02              a1 = sp + 0x290
118639: 33 00 88 05              ra = 0x588
118643: 95 11 b8                 sp = sp + 0xffffffffffffffb8
118646: 7b 10 40                 u64 [sp + 0x40] = ra
118649: 7b 15 38                 u64 [sp + 0x38] = s0
118652: 7b 16 30                 u64 [sp + 0x30] = s1
118655: 7b 18 18                 u64 [sp + 0x18] = a1
118658: 7b 17 10                 u64 [sp + 0x10] = a0
118661: 33 07 c0 22 03           a0 = 0x322c0
118666: 33 02 00 00 01           t0 = 0x10000
118671: c8 27 09                 a2 = a0 + t0
118674: 28 8f 90 fe              jump @1824
      :                          @9139 [@dyn 708]
118678: 33 07                    a0 = 0
118680: 33 04 10                 t2 = 0x10
118683: 33 0a 78 12 03           a3 = 0x31278
118688: 14 0b ab aa aa aa aa aa aa aa a4 = 0xaaaaaaaaaaaaaaab
118698: 33 00 0a                 ra = 0xa
118701: 33 03 00 01              t1 = 0x100
118705: 01                       fallthrough
      :                          @9140
118706: 3a 08 78 12 03           a1 = u64 [0x31278]
118711: 97 89 0d                 a2 = a1 << 0xd
118714: d3 98 08                 a1 = a1 ^ a2
118717: 98 89 07                 a2 = a1 >> 0x7
118720: d3 98 08                 a1 = a1 ^ a2
118723: 97 89 11                 a2 = a1 << 0x11
118726: d3 89 02                 t0 = a2 ^ a1
118729: 3e 02 78 12 03           u64 [0x31278] = t0
118734: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
118738: ac 87 07                 jump @9142 if a0 <u a1
      :                          @9141
118741: 28 b7 24 01              jump @13229
      :                          @9142
118745: 82 18 e8 01              a1 = u64 [sp + 0x1e8]
118749: c8 48 08                 a1 = a1 + t2
118752: 82 89                    a2 = u64 [a1]
118754: 52 09 07                 jump @9144 if a2 != 0
      :                          @9143
118757: 28 ae 24 01              jump @13236
      :                          @9144
118761: 82 19 70                 a2 = u64 [sp + 0x70]
118764: ca 92 09                 a2 = t0 * a2
118767: d6 b9 0c                 a5 = a2 mulhu a4
118770: 98 c6 01                 s1 = a5 >> 0x1
118773: 82 88 f8                 a1 = u64 [a1 + 0xfffffffffffffff8]
118776: 84 cc fe                 a5 = a5 & 0xfffffffffffffffe
118779: c8 6c 0c                 a5 = a5 + s1
118782: c9 c9 09                 a2 = a2 - a5
118785: 78 89                    u8 [a1] = a2
118787: 3a 08 78 12 03           a1 = u64 [0x31278]
118792: 97 89 0d                 a2 = a1 << 0xd
118795: d3 98 08                 a1 = a1 ^ a2
118798: 98 89 07                 a2 = a1 >> 0x7
118801: d3 98 08                 a1 = a1 ^ a2
118804: 97 8c 11                 a5 = a1 << 0x11
118807: d3 8c 0c                 a5 = a5 ^ a1
118810: 3e 0c 78 12 03           u64 [0x31278] = a5
118815: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
118819: ac 87 07                 jump @9146 if a0 <u a1
      :                          @9145
118822: 28 66 24 01              jump @13229
      :                          @9146
118826: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
118830: c8 49 09                 a2 = a2 + t2
118833: 82 98                    a1 = u64 [a2]
118835: 55 18 02 08              jump @9148 if a1 >=u 2
      :                          @9147
118839: 28 8c 23 01              jump @13209
      :                          @9148
118843: 82 18 70                 a1 = u64 [sp + 0x70]
118846: ca 8c 08                 a1 = a5 * a1
118849: d6 b8 0c                 a5 = a1 mulhu a4
118852: 98 c6 01                 s1 = a5 >> 0x1
118855: 82 99 f8                 a2 = u64 [a2 + 0xfffffffffffffff8]
118858: 84 cc fe                 a5 = a5 & 0xfffffffffffffffe
118861: c8 6c 0c                 a5 = a5 + s1
118864: c9 c8 08                 a1 = a1 - a5
118867: 78 98 01                 u8 [a2 + 0x1] = a1
118870: 3a 08 78 12 03           a1 = u64 [0x31278]
118875: 97 89 0d                 a2 = a1 << 0xd
118878: d3 98 08                 a1 = a1 ^ a2
118881: 98 89 07                 a2 = a1 >> 0x7
118884: d3 98 08                 a1 = a1 ^ a2
118887: 97 8c 11                 a5 = a1 << 0x11
118890: d3 8c 0c                 a5 = a5 ^ a1
118893: 3e 0c 78 12 03           u64 [0x31278] = a5
118898: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
118902: ac 87 07                 jump @9150 if a0 <u a1
      :                          @9149
118905: 28 13 24 01              jump @13229
      :                          @9150
118909: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
118913: c8 49 09                 a2 = a2 + t2
118916: 82 98                    a1 = u64 [a2]
118918: 55 18 03 08              jump @9152 if a1 >=u 3
      :                          @9151
118922: 28 3b 23 01              jump @13211
      :                          @9152
118926: 82 18 70                 a1 = u64 [sp + 0x70]
118929: ca 8c 08                 a1 = a5 * a1
118932: d6 b8 0c                 a5 = a1 mulhu a4
118935: 98 c6 01                 s1 = a5 >> 0x1
118938: 82 99 f8                 a2 = u64 [a2 + 0xfffffffffffffff8]
118941: 84 cc fe                 a5 = a5 & 0xfffffffffffffffe
118944: c8 6c 0c                 a5 = a5 + s1
118947: c9 c8 08                 a1 = a1 - a5
118950: 78 98 02                 u8 [a2 + 0x2] = a1
118953: 3a 08 78 12 03           a1 = u64 [0x31278]
118958: 97 89 0d                 a2 = a1 << 0xd
118961: d3 98 08                 a1 = a1 ^ a2
118964: 98 89 07                 a2 = a1 >> 0x7
118967: d3 98 08                 a1 = a1 ^ a2
118970: 97 8c 11                 a5 = a1 << 0x11
118973: d3 8c 0c                 a5 = a5 ^ a1
118976: 3e 0c 78 12 03           u64 [0x31278] = a5
118981: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
118985: ac 87 07                 jump @9154 if a0 <u a1
      :                          @9153
118988: 28 c0 23 01              jump @13229
      :                          @9154
118992: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
118996: c8 49 09                 a2 = a2 + t2
118999: 82 98                    a1 = u64 [a2]
119001: 55 18 04 08              jump @9156 if a1 >=u 4
      :                          @9155
119005: 28 e7 22 01              jump @13210
      :                          @9156
119009: 82 18 70                 a1 = u64 [sp + 0x70]
119012: ca 8c 08                 a1 = a5 * a1
119015: d6 b8 0c                 a5 = a1 mulhu a4
119018: 98 c6 01                 s1 = a5 >> 0x1
119021: 82 99 f8                 a2 = u64 [a2 + 0xfffffffffffffff8]
119024: 84 cc fe                 a5 = a5 & 0xfffffffffffffffe
119027: c8 6c 0c                 a5 = a5 + s1
119030: c9 c8 08                 a1 = a1 - a5
119033: 78 98 03                 u8 [a2 + 0x3] = a1
119036: 3a 08 78 12 03           a1 = u64 [0x31278]
119041: 97 89 0d                 a2 = a1 << 0xd
119044: d3 98 08                 a1 = a1 ^ a2
119047: 98 89 07                 a2 = a1 >> 0x7
119050: d3 98 08                 a1 = a1 ^ a2
119053: 97 8c 11                 a5 = a1 << 0x11
119056: d3 8c 0c                 a5 = a5 ^ a1
119059: 3e 0c 78 12 03           u64 [0x31278] = a5
119064: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
119068: ac 87 07                 jump @9158 if a0 <u a1
      :                          @9157
119071: 28 6d 23 01              jump @13229
      :                          @9158
119075: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
119079: c8 49 09                 a2 = a2 + t2
119082: 82 98                    a1 = u64 [a2]
119084: 55 18 05 08              jump @9160 if a1 >=u 5
      :                          @9159
119088: 28 5e 23 01              jump @13231
      :                          @9160
119092: 82 18 70                 a1 = u64 [sp + 0x70]
119095: ca 8c 08                 a1 = a5 * a1
119098: d6 b8 0c                 a5 = a1 mulhu a4
119101: 98 c6 01                 s1 = a5 >> 0x1
119104: 82 99 f8                 a2 = u64 [a2 + 0xfffffffffffffff8]
119107: 84 cc fe                 a5 = a5 & 0xfffffffffffffffe
119110: c8 6c 0c                 a5 = a5 + s1
119113: c9 c8 08                 a1 = a1 - a5
119116: 78 98 04                 u8 [a2 + 0x4] = a1
119119: 3a 08 78 12 03           a1 = u64 [0x31278]
119124: 97 89 0d                 a2 = a1 << 0xd
119127: d3 98 08                 a1 = a1 ^ a2
119130: 98 89 07                 a2 = a1 >> 0x7
119133: d3 98 08                 a1 = a1 ^ a2
119136: 97 8c 11                 a5 = a1 << 0x11
119139: d3 8c 0c                 a5 = a5 ^ a1
119142: 3e 0c 78 12 03           u64 [0x31278] = a5
119147: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
119151: ac 87 07                 jump @9162 if a0 <u a1
      :                          @9161
119154: 28 1a 23 01              jump @13229
      :                          @9162
119158: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
119162: c8 49 09                 a2 = a2 + t2
119165: 82 98                    a1 = u64 [a2]
119167: 55 18 06 08              jump @9164 if a1 >=u 6
      :                          @9163
119171: 28 0f 23 01              jump @13235
      :                          @9164
119175: 82 18 70                 a1 = u64 [sp + 0x70]
119178: ca 8c 08                 a1 = a5 * a1
119181: d6 b8 0c                 a5 = a1 mulhu a4
119184: 98 c6 01                 s1 = a5 >> 0x1
119187: 82 99 f8                 a2 = u64 [a2 + 0xfffffffffffffff8]
119190: 84 cc fe                 a5 = a5 & 0xfffffffffffffffe
119193: c8 6c 0c                 a5 = a5 + s1
119196: c9 c8 08                 a1 = a1 - a5
119199: 78 98 05                 u8 [a2 + 0x5] = a1
119202: 3a 08 78 12 03           a1 = u64 [0x31278]
119207: 97 89 0d                 a2 = a1 << 0xd
119210: d3 98 08                 a1 = a1 ^ a2
119213: 98 89 07                 a2 = a1 >> 0x7
119216: d3 98 08                 a1 = a1 ^ a2
119219: 97 8c 11                 a5 = a1 << 0x11
119222: d3 8c 0c                 a5 = a5 ^ a1
119225: 3e 0c 78 12 03           u64 [0x31278] = a5
119230: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
119234: ac 87 07                 jump @9166 if a0 <u a1
      :                          @9165
119237: 28 c7 22 01              jump @13229
      :                          @9166
119241: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
119245: c8 49 09                 a2 = a2 + t2
119248: 82 98                    a1 = u64 [a2]
119250: 55 18 07 08              jump @9168 if a1 >=u 7
      :                          @9167
119254: 28 c2 22 01              jump @13241
      :                          @9168
119258: 82 18 70                 a1 = u64 [sp + 0x70]
119261: ca 8c 08                 a1 = a5 * a1
119264: d6 b8 0c                 a5 = a1 mulhu a4
119267: 98 c6 01                 s1 = a5 >> 0x1
119270: 82 99 f8                 a2 = u64 [a2 + 0xfffffffffffffff8]
119273: 84 cc fe                 a5 = a5 & 0xfffffffffffffffe
119276: c8 6c 0c                 a5 = a5 + s1
119279: c9 c8 08                 a1 = a1 - a5
119282: 78 98 06                 u8 [a2 + 0x6] = a1
119285: 3a 08 78 12 03           a1 = u64 [0x31278]
119290: 97 89 0d                 a2 = a1 << 0xd
119293: d3 98 08                 a1 = a1 ^ a2
119296: 98 89 07                 a2 = a1 >> 0x7
119299: d3 98 08                 a1 = a1 ^ a2
119302: 97 8c 11                 a5 = a1 << 0x11
119305: d3 8c 0c                 a5 = a5 ^ a1
119308: 3e 0c 78 12 03           u64 [0x31278] = a5
119313: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
119317: ac 87 07                 jump @9170 if a0 <u a1
      :                          @9169
119320: 28 74 22 01              jump @13229
      :                          @9170
119324: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
119328: c8 49 09                 a2 = a2 + t2
119331: 82 98                    a1 = u64 [a2]
119333: 55 18 08 08              jump @9172 if a1 >=u 8
      :                          @9171
119337: 28 70 22 01              jump @13242
      :                          @9172
119341: 82 18 70                 a1 = u64 [sp + 0x70]
119344: ca 8c 08                 a1 = a5 * a1
119347: d6 b8 0c                 a5 = a1 mulhu a4
119350: 98 c6 01                 s1 = a5 >> 0x1
119353: 82 99 f8                 a2 = u64 [a2 + 0xfffffffffffffff8]
119356: 84 cc fe                 a5 = a5 & 0xfffffffffffffffe
119359: c8 6c 0c                 a5 = a5 + s1
119362: c9 c8 08                 a1 = a1 - a5
119365: 78 98 07                 u8 [a2 + 0x7] = a1
119368: 3a 08 78 12 03           a1 = u64 [0x31278]
119373: 97 89 0d                 a2 = a1 << 0xd
119376: d3 98 08                 a1 = a1 ^ a2
119379: 98 89 07                 a2 = a1 >> 0x7
119382: d3 98 08                 a1 = a1 ^ a2
119385: 97 8c 11                 a5 = a1 << 0x11
119388: d3 8c 0c                 a5 = a5 ^ a1
119391: 3e 0c 78 12 03           u64 [0x31278] = a5
119396: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
119400: ac 87 07                 jump @9174 if a0 <u a1
      :                          @9173
119403: 28 21 22 01              jump @13229
      :                          @9174
119407: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
119411: c8 49 09                 a2 = a2 + t2
119414: 82 98                    a1 = u64 [a2]
119416: 55 18 09 08              jump @9176 if a1 >=u 9
      :                          @9175
119420: 28 1e 22 01              jump @13243
      :                          @9176
119424: 82 18 70                 a1 = u64 [sp + 0x70]
119427: ca 8c 08                 a1 = a5 * a1
119430: d6 b8 0c                 a5 = a1 mulhu a4
119433: 98 c6 01                 s1 = a5 >> 0x1
119436: 82 99 f8                 a2 = u64 [a2 + 0xfffffffffffffff8]
119439: 84 cc fe                 a5 = a5 & 0xfffffffffffffffe
119442: c8 6c 0c                 a5 = a5 + s1
119445: c9 c8 08                 a1 = a1 - a5
119448: 78 98 08                 u8 [a2 + 0x8] = a1
119451: 3a 08 78 12 03           a1 = u64 [0x31278]
119456: 97 89 0d                 a2 = a1 << 0xd
119459: d3 98 08                 a1 = a1 ^ a2
119462: 98 89 07                 a2 = a1 >> 0x7
119465: d3 98 08                 a1 = a1 ^ a2
119468: 97 8c 11                 a5 = a1 << 0x11
119471: d3 8c 0c                 a5 = a5 ^ a1
119474: 3e 0c 78 12 03           u64 [0x31278] = a5
119479: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
119483: ac 87 07                 jump @9178 if a0 <u a1
      :                          @9177
119486: 28 ce 21 01              jump @13229
      :                          @9178
119490: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
119494: c8 49 09                 a2 = a2 + t2
119497: 82 98                    a1 = u64 [a2]
119499: ae 08 07                 jump @9180 if a1 >=u ra
      :                          @9179
119502: 28 cd 21 01              jump @13244
      :                          @9180
119506: 82 18 70                 a1 = u64 [sp + 0x70]
119509: ca 8c 08                 a1 = a5 * a1
119512: d6 b8 0c                 a5 = a1 mulhu a4
119515: 98 c6 01                 s1 = a5 >> 0x1
119518: 82 99 f8                 a2 = u64 [a2 + 0xfffffffffffffff8]
119521: 84 cc fe                 a5 = a5 & 0xfffffffffffffffe
119524: c8 6c 0c                 a5 = a5 + s1
119527: c9 c8 08                 a1 = a1 - a5
119530: 78 98 09                 u8 [a2 + 0x9] = a1
119533: 95 44 18                 t2 = t2 + 0x18
119536: 95 77 01                 a0 = a0 + 0x1
119539: ab 34 bf fc              jump @9140 if t2 != t1
      :                          @9181
119543: 3a 08 78 12 03           a1 = u64 [0x31278]
119548: 97 89 0d                 a2 = a1 << 0xd
119551: d3 98 08                 a1 = a1 ^ a2
119554: 98 89 07                 a2 = a1 >> 0x7
119557: d3 98 08                 a1 = a1 ^ a2
119560: 97 89 11                 a2 = a1 << 0x11
119563: d3 98 08                 a1 = a1 ^ a2
119566: 82 1c 70                 a5 = u64 [sp + 0x70]
119569: ca c8 09                 a2 = a1 * a5
119572: 3e 08 78 12 03           u64 [0x31278] = a1
119577: 14 08 cd cc cc cc cc cc cc cc a1 = 0xcccccccccccccccd
119587: d6 89 0a                 a3 = a2 mulhu a1
119590: 98 aa 03                 a3 = a3 >> 0x3
119593: 96 aa 0a                 a3 = a3 * 0xa
119596: c9 a9 09                 a2 = a2 - a3
119599: 7b 19 b0 01              u64 [sp + 0x1b0] = a2
119603: 3a 09 78 12 03           a2 = u64 [0x31278]
119608: 97 9a 0d                 a3 = a2 << 0xd
119611: d3 a9 09                 a2 = a2 ^ a3
119614: 98 9a 07                 a3 = a2 >> 0x7
119617: d3 a9 09                 a2 = a2 ^ a3
119620: 97 9a 11                 a3 = a2 << 0x11
119623: d3 a9 09                 a2 = a2 ^ a3
119626: ca c9 0a                 a3 = a2 * a5
119629: 3e 09 78 12 03           u64 [0x31278] = a2
119634: d6 8a 08                 a1 = a3 mulhu a1
119637: 98 88 03                 a1 = a1 >> 0x3
119640: 96 88 0a                 a1 = a1 * 0xa
119643: c9 8a 0a                 a3 = a3 - a1
119646: 7b 1a c8 01              u64 [sp + 0x1c8] = a3
119650: 3a 08 78 12 03           a1 = u64 [0x31278]
119655: 97 89 0d                 a2 = a1 << 0xd
119658: d3 98 08                 a1 = a1 ^ a2
119661: 98 89 07                 a2 = a1 >> 0x7
119664: d3 98 08                 a1 = a1 ^ a2
119667: 97 89 11                 a2 = a1 << 0x11
119670: d3 98 08                 a1 = a1 ^ a2
119673: ca c8 0b                 a4 = a1 * a5
119676: 3e 08 78 12 03           u64 [0x31278] = a1
119681: 14 07 ab aa aa aa aa aa aa aa a0 = 0xaaaaaaaaaaaaaaab
119691: d6 7b 07                 a0 = a4 mulhu a0
119694: 98 7c 01                 a5 = a0 >> 0x1
119697: 84 77 fe                 a0 = a0 & 0xfffffffffffffffe
119700: 82 19 b0 01              a2 = u64 [sp + 0x1b0]
119704: 82 1a c8 01              a3 = u64 [sp + 0x1c8]
119708: 82 16 e8 01              s1 = u64 [sp + 0x1e8]
119712: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
119716: 7b 18 60                 u64 [sp + 0x60] = a1
119719: c8 c7 07                 a0 = a0 + a5
119722: c9 7b 0b                 a4 = a4 - a0
119725: 95 bb 03                 a4 = a4 + 0x3
119728: 7b 1b 70                 u64 [sp + 0x70] = a4
119731: 64 67                    a0 = s1
119733: 50 20 8a 05 e4 39 ff     ra = 1418, jump @5399
      :                          @9182 [@dyn 709]
119740: 82 18 60                 a1 = u64 [sp + 0x60]
119743: 96 87 18                 a0 = a1 * 0x18
119746: c8 67 07                 a0 = a0 + s1
119749: 7b 16 80 00              u64 [sp + 0x80] = s1
119753: 7b 17 88 00              u64 [sp + 0x88] = a0
119757: 49 21 90 00              u64 [sp + 144] = 0
119761: 49 21 a0 00              u64 [sp + 160] = 0
119765: 95 17 80 00              a0 = sp + 0x80
119769: 82 18 70                 a1 = u64 [sp + 0x70]
119772: 50 20 8c 05 d8 2c fe     ra = 1420, jump @23
      :                          @9183 [@dyn 710]
119779: 7b 17 20 01              u64 [sp + 0x120] = a0
119783: 95 17 20 01              a0 = sp + 0x120
119787: 7b 17 90 02              u64 [sp + 0x290] = a0
119791: 33 07 2c 0c              a0 = 0xc2c
119795: 7b 17 98 02              u64 [sp + 0x298] = a0
119799: 95 18 b0 01              a1 = sp + 0x1b0
119803: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
119807: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
119811: 95 18 c8 01              a1 = sp + 0x1c8
119815: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
119819: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
119823: 33 07 c0 0b 01           a0 = 0x10bc0
119828: 7b 17 38 02              u64 [sp + 0x238] = a0
119832: 49 21 40 02 04           u64 [sp + 576] = 0x4
119837: 49 21 58 02              u64 [sp + 600] = 0
119841: 95 17 90 02              a0 = sp + 0x290
119845: 7b 17 48 02              u64 [sp + 0x248] = a0
119849: 49 21 50 02 03           u64 [sp + 592] = 0x3
119854: 95 17 08 02              a0 = sp + 0x208
119858: 95 18 38 02              a1 = sp + 0x238
119862: 50 20 8e 05 c4 7b fe     ra = 1422, jump @1503
      :                          @9184 [@dyn 711]
119869: 82 16 10 02              s1 = u64 [sp + 0x210]
119873: 82 1b 18 02              a4 = u64 [sp + 0x218]
119877: 82 17 08 02              a0 = u64 [sp + 0x208]
119881: 7b 17 70                 u64 [sp + 0x70] = a0
119884: 33 07 02                 a0 = 0x2
119887: 33 08                    a1 = 0
119889: 33 09                    a2 = 0
119891: 64 6a                    a3 = s1
119893: 33 00 90 05              ra = 0x590
119897: 0a 64                    ecalli 100 // 'log'
119899: 01                       fallthrough
      :                          @9185 [@dyn 712]
119900: 82 1c 70                 a5 = u64 [sp + 0x70]
119903: 82 17 68                 a0 = u64 [sp + 0x68]
119906: c8 c7 07                 a0 = a0 + a5
119909: 33 08 00 00 ff           a1 = 0xffffffffffff0000
119914: ae 87 06                 jump @9187 if a0 >=u a1
      :                          @9186
119917: 28 42 59                 jump @10545
      :                          @9187
119920: 33 07 c0 22 03           a0 = 0x322c0
119925: 95 77 00 00 01           a0 = a0 + 0x10000
119930: 01                       fallthrough
      :                          @9188
119931: 82 78                    a1 = u64 [a0]
119933: c9 87 09                 a2 = a0 - a1
119936: aa 69 06                 jump @9190 if a2 == s1
      :                          @9189
119939: 28 2c 59                 jump @10545
      :                          @9190
119942: c9 c8 09                 a2 = a1 - a5
119945: 01                       fallthrough
      :                          @9191
119946: 82 7a                    a3 = u64 [a0]
119948: ab 8a ef                 jump @9188 if a3 != a1
      :                          @9192
119951: 7b 79                    u64 [a0] = a2
119953: 33 0b                    a4 = 0
119955: 01                       fallthrough
      :                          @9193
119956: ab 8a e7                 jump @9188 if a3 != a1
      :                          @9194
119959: 28 18 59                 jump @10545
      :                          @9195 [@dyn 713]
119962: 3a 08 78 12 03           a1 = u64 [0x31278]
119967: 97 89 0d                 a2 = a1 << 0xd
119970: d3 89 09                 a2 = a2 ^ a1
119973: 98 9a 07                 a3 = a2 >> 0x7
119976: 3a 08 60 11 03           a1 = u64 [0x31160]
119981: d3 a9 09                 a2 = a2 ^ a3
119984: 97 9a 11                 a3 = a2 << 0x11
119987: d3 a9 09                 a2 = a2 ^ a3
119990: ca 89 0a                 a3 = a2 * a1
119993: 3e 09 78 12 03           u64 [0x31278] = a2
119998: 14 09 cd cc cc cc cc cc cc cc a2 = 0xcccccccccccccccd
120008: d6 9a 0b                 a4 = a3 mulhu a2
120011: 98 bb 03                 a4 = a4 >> 0x3
120014: 3a 06 78 12 03           s1 = u64 [0x31278]
120019: 96 bb 0a                 a4 = a4 * 0xa
120022: c9 ba 0a                 a3 = a3 - a4
120025: 7b 1a 70                 u64 [sp + 0x70] = a3
120028: 97 6a 0d                 a3 = s1 << 0xd
120031: d3 6a 0a                 a3 = a3 ^ s1
120034: 98 ab 07                 a4 = a3 >> 0x7
120037: d3 ba 0a                 a3 = a3 ^ a4
120040: 97 ab 11                 a4 = a3 << 0x11
120043: d3 ba 0a                 a3 = a3 ^ a4
120046: ca 8a 0b                 a4 = a3 * a1
120049: 3e 0a 78 12 03           u64 [0x31278] = a3
120054: d6 9b 0a                 a3 = a4 mulhu a2
120057: 98 aa 03                 a3 = a3 >> 0x3
120060: 3a 0c 78 12 03           a5 = u64 [0x31278]
120065: 96 aa 0a                 a3 = a3 * 0xa
120068: c9 ab 0b                 a4 = a4 - a3
120071: 7b 1b 60                 u64 [sp + 0x60] = a4
120074: 97 ca 0d                 a3 = a5 << 0xd
120077: d3 ca 0a                 a3 = a3 ^ a5
120080: 98 ab 07                 a4 = a3 >> 0x7
120083: d3 ba 0a                 a3 = a3 ^ a4
120086: 97 ab 11                 a4 = a3 << 0x11
120089: d3 ba 0a                 a3 = a3 ^ a4
120092: ca 8a 0b                 a4 = a3 * a1
120095: 3e 0a 78 12 03           u64 [0x31278] = a3
120100: d6 9b 0a                 a3 = a4 mulhu a2
120103: 98 ac 02                 a5 = a3 >> 0x2
120106: 84 aa fc                 a3 = a3 & 0xfffffffffffffffc
120109: 3a 07 78 12 03           a0 = u64 [0x31278]
120114: c8 ca 0a                 a3 = a3 + a5
120117: c9 ab 0b                 a4 = a4 - a3
120120: 7b 1b 58                 u64 [sp + 0x58] = a4
120123: 97 7a 0d                 a3 = a0 << 0xd
120126: d3 a7 07                 a0 = a0 ^ a3
120129: 98 7a 07                 a3 = a0 >> 0x7
120132: d3 a7 07                 a0 = a0 ^ a3
120135: 97 7a 11                 a3 = a0 << 0x11
120138: d3 a7 07                 a0 = a0 ^ a3
120141: ca 87 08                 a1 = a0 * a1
120144: 3e 07 78 12 03           u64 [0x31278] = a0
120149: d6 98 07                 a0 = a1 mulhu a2
120152: 98 79 02                 a2 = a0 >> 0x2
120155: 84 77 fc                 a0 = a0 & 0xfffffffffffffffc
120158: c8 97 07                 a0 = a0 + a2
120161: c9 78 06                 s1 = a1 - a0
120164: 33 07 40                 a0 = 0x40
120167: 50 20 94 05 4a 7b fe     ra = 1428, jump @1521
      :                          @9196 [@dyn 714]
120174: 64 78                    a1 = a0
120176: 82 19 70                 a2 = u64 [sp + 0x70]
120179: 82 17 58                 a0 = u64 [sp + 0x58]
120182: c8 97 07                 a0 = a0 + a2
120185: 95 77 01                 a0 = a0 + 0x1
120188: 82 1a 60                 a3 = u64 [sp + 0x60]
120191: c8 a6 06                 s1 = s1 + a3
120194: 95 66 01                 s1 = s1 + 0x1
120197: 7b 89                    u64 [a1] = a2
120199: 7b 8a 08                 u64 [a1 + 0x8] = a3
120202: 7b 87 10                 u64 [a1 + 0x10] = a0
120205: 7b 8a 18                 u64 [a1 + 0x18] = a3
120208: 7b 87 20                 u64 [a1 + 0x20] = a0
120211: 7b 86 28                 u64 [a1 + 0x28] = s1
120214: 7b 89 30                 u64 [a1 + 0x30] = a2
120217: 7b 86 38                 u64 [a1 + 0x38] = s1
120220: 49 21 20 01 04           u64 [sp + 288] = 0x4
120225: 7b 18 28 01              u64 [sp + 0x128] = a1
120229: 49 21 30 01 04           u64 [sp + 304] = 0x4
120234: 95 17 e0 01              a0 = sp + 0x1e0
120238: 33 00 96 05              ra = 0x596
120242: 95 11 48 ff              sp = sp + 0xffffffffffffff48
120246: 7b 10 b0 00              u64 [sp + 0xb0] = ra
120250: 7b 15 a8 00              u64 [sp + 0xa8] = s0
120254: 7b 16 a0 00              u64 [sp + 0xa0] = s1
120258: 7b 18 38                 u64 [sp + 0x38] = a1
120261: 33 09 c0 22 03           a2 = 0x322c0
120266: 33 08 00 00 01           a1 = 0x10000
120271: c8 89 09                 a2 = a2 + a1
120274: 28 b0 39 ff              jump @5444
      :                          @9197 [@dyn 715]
120278: 82 17 f0 01              a0 = u64 [sp + 0x1f0]
120282: 82 18 e8 01              a1 = u64 [sp + 0x1e8]
120286: 33 09 18                 a2 = 0x18
120289: ca 97 07                 a0 = a0 * a2
120292: c8 87 07                 a0 = a0 + a1
120295: 7b 18 b0 00              u64 [sp + 0xb0] = a1
120299: 7b 17 b8 00              u64 [sp + 0xb8] = a0
120303: 49 21 c0 00              u64 [sp + 192] = 0
120307: 49 21 d0 00              u64 [sp + 208] = 0
120311: 95 17 b0 00              a0 = sp + 0xb0
120315: 50 20 98 05 13 2a fe     ra = 1432, jump @3
      :                          @9198 [@dyn 716]
120322: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
120326: 95 17 20 01              a0 = sp + 0x120
120330: 7b 17 38 02              u64 [sp + 0x238] = a0
120334: 33 07 2c 02              a0 = 0x22c
120338: 7b 17 40 02              u64 [sp + 0x240] = a0
120342: 95 17 c8 01              a0 = sp + 0x1c8
120346: 7b 17 48 02              u64 [sp + 0x248] = a0
120350: 33 07 2c 0c              a0 = 0xc2c
120354: 7b 17 50 02              u64 [sp + 0x250] = a0
120358: 33 07 20 0c 01           a0 = 0x10c20
120363: 7b 17 90 02              u64 [sp + 0x290] = a0
120367: 49 21 98 02 03           u64 [sp + 664] = 0x3
120372: 49 21 b0 02              u64 [sp + 688] = 0
120376: 95 17 38 02              a0 = sp + 0x238
120380: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
120384: 49 21 a8 02 02           u64 [sp + 680] = 0x2
120389: 95 17 08 02              a0 = sp + 0x208
120393: 95 18 90 02              a1 = sp + 0x290
120397: 50 20 9a 05 ad 79 fe     ra = 1434, jump @1503
      :                          @9199 [@dyn 717]
120404: 82 16 10 02              s1 = u64 [sp + 0x210]
120408: 82 1b 18 02              a4 = u64 [sp + 0x218]
120412: 82 17 08 02              a0 = u64 [sp + 0x208]
120416: 7b 17 70                 u64 [sp + 0x70] = a0
120419: 33 07 02                 a0 = 0x2
120422: 33 08                    a1 = 0
120424: 33 09                    a2 = 0
120426: 64 6a                    a3 = s1
120428: 33 00 9c 05              ra = 0x59c
120432: 0a 64                    ecalli 100 // 'log'
120434: 01                       fallthrough
      :                          @9200 [@dyn 718]
120435: 82 1c 70                 a5 = u64 [sp + 0x70]
120438: 82 17 68                 a0 = u64 [sp + 0x68]
120441: c8 c7 07                 a0 = a0 + a5
120444: 33 08 00 00 ff           a1 = 0xffffffffffff0000
120449: ac 87 2f                 jump @9206 if a0 <u a1
      :                          @9201
120452: 33 07 c0 22 03           a0 = 0x322c0
120457: 95 77 00 00 01           a0 = a0 + 0x10000
120462: 01                       fallthrough
      :                          @9202
120463: 82 78                    a1 = u64 [a0]
120465: c9 87 09                 a2 = a0 - a1
120468: ab 69 1c                 jump @9206 if a2 != s1
      :                          @9203
120471: c9 c8 09                 a2 = a1 - a5
120474: 01                       fallthrough
      :                          @9204
120475: 82 7a                    a3 = u64 [a0]
120477: ab 8a f2                 jump @9202 if a3 != a1
      :                          @9205
120480: 7b 79                    u64 [a0] = a2
120482: 33 0b                    a4 = 0
120484: 95 17 e0 01              a0 = sp + 0x1e0
120488: 33 00 9e 05              ra = 0x59e
120492: 28 cc 35 fe              jump @221
      :                          @9206
120496: 95 17 e0 01              a0 = sp + 0x1e0
120500: 50 20 9e 05 c4 35 fe     ra = 1438, jump @221
      :                          @9207 [@dyn 719]
120507: 82 18 20 01              a1 = u64 [sp + 0x120]
120511: 52 08 07                 jump @9209 if a1 != 0
      :                          @9208
120514: 28 c1 0b 01              jump @12868
      :                          @9209
120518: 54 28 00 10 09           jump @9211 if a1 <=u 4096
      :                          @9210
120523: 28 b8 0b 01              jump @12868
      :                          @9211
120527: 82 17 28 01              a0 = u64 [sp + 0x128]
120531: 97 88 04                 a1 = a1 << 0x4
120534: 33 09 c0 22 03           a2 = 0x322c0
120539: 95 99 00 00 01           a2 = a2 + 0x10000
120544: 01                       fallthrough
      :                          @9212
120545: 82 9a                    a3 = u64 [a2]
120547: c9 a9 0b                 a4 = a2 - a3
120550: aa 7b 07                 jump @9214 if a4 == a0
      :                          @9213
120553: 28 9a 0b 01              jump @12868
      :                          @9214
120557: c9 8a 0b                 a4 = a3 - a1
120560: 01                       fallthrough
      :                          @9215
120561: 82 9c                    a5 = u64 [a2]
120563: ab ac ee                 jump @9212 if a5 != a3
      :                          @9216
120566: 7b 9b                    u64 [a2] = a4
120568: 33 06                    s1 = 0
120570: 01                       fallthrough
      :                          @9217
120571: ab ac e6                 jump @9212 if a5 != a3
      :                          @9218
120574: 28 85 0b 01              jump @12868
      :                          @9219 [@dyn 720]
120578: 3a 08 78 12 03           a1 = u64 [0x31278]
120583: 97 89 0d                 a2 = a1 << 0xd
120586: d3 89 09                 a2 = a2 ^ a1
120589: 98 9a 07                 a3 = a2 >> 0x7
120592: 3a 03 60 11 03           t1 = u64 [0x31160]
120597: d3 a9 09                 a2 = a2 ^ a3
120600: 97 9a 11                 a3 = a2 << 0x11
120603: d3 a9 09                 a2 = a2 ^ a3
120606: ca 39 0b                 a4 = a2 * t1
120609: 3e 09 78 12 03           u64 [0x31278] = a2
120614: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
120624: d6 7b 0a                 a3 = a4 mulhu a0
120627: 98 ac 04                 a5 = a3 >> 0x4
120630: 3a 06 78 12 03           s1 = u64 [0x31278]
120635: 96 cc 14                 a5 = a5 * 0x14
120638: c9 cb 08                 a1 = a4 - a5
120641: 7b 18 70                 u64 [sp + 0x70] = a1
120644: 97 6b 0d                 a4 = s1 << 0xd
120647: d3 6b 0b                 a4 = a4 ^ s1
120650: 98 bc 07                 a5 = a4 >> 0x7
120653: d3 cb 0b                 a4 = a4 ^ a5
120656: 97 bc 11                 a5 = a4 << 0x11
120659: d3 cb 0b                 a4 = a4 ^ a5
120662: ca 3b 0c                 a5 = a4 * t1
120665: 3e 0b 78 12 03           u64 [0x31278] = a4
120670: d6 7c 0b                 a4 = a5 mulhu a0
120673: 98 bb 04                 a4 = a4 >> 0x4
120676: 3a 06 78 12 03           s1 = u64 [0x31278]
120681: 96 bb 14                 a4 = a4 * 0x14
120684: c9 bc 09                 a2 = a5 - a4
120687: 7b 19 60                 u64 [sp + 0x60] = a2
120690: 97 6b 0d                 a4 = s1 << 0xd
120693: d3 6b 0b                 a4 = a4 ^ s1
120696: 98 bc 07                 a5 = a4 >> 0x7
120699: d3 cb 0b                 a4 = a4 ^ a5
120702: 97 bc 11                 a5 = a4 << 0x11
120705: d3 cb 0b                 a4 = a4 ^ a5
120708: ca 3b 0c                 a5 = a4 * t1
120711: 3e 0b 78 12 03           u64 [0x31278] = a4
120716: d6 7c 0b                 a4 = a5 mulhu a0
120719: 98 bb 04                 a4 = a4 >> 0x4
120722: 3a 06 78 12 03           s1 = u64 [0x31278]
120727: 96 bb 14                 a4 = a4 * 0x14
120730: c9 bc 0a                 a3 = a5 - a4
120733: 7b 1a 58                 u64 [sp + 0x58] = a3
120736: 97 6b 0d                 a4 = s1 << 0xd
120739: d3 6b 0b                 a4 = a4 ^ s1
120742: 98 bc 07                 a5 = a4 >> 0x7
120745: d3 cb 0b                 a4 = a4 ^ a5
120748: 97 bc 11                 a5 = a4 << 0x11
120751: d3 cb 0b                 a4 = a4 ^ a5
120754: ca 3b 06                 s1 = a4 * t1
120757: 3e 0b 78 12 03           u64 [0x31278] = a4
120762: d6 76 07                 a0 = s1 mulhu a0
120765: 98 77 04                 a0 = a0 >> 0x4
120768: 96 77 14                 a0 = a0 * 0x14
120771: c9 76 06                 s1 = s1 - a0
120774: 49 21 e8 01              u64 [sp + 488] = 0
120778: 49 21 e0 01              u64 [sp + 480] = 0
120782: 49 21 f0 01 0f           u64 [sp + 496] = 0xf
120787: 49 21 f8 01 0f           u64 [sp + 504] = 0xf
120792: 95 17 08 02              a0 = sp + 0x208
120796: 64 6b                    a4 = s1
120798: 50 20 a2 05 9c 3b ff     ra = 1442, jump @5512
      :                          @9220 [@dyn 721]
120805: 82 17 70                 a0 = u64 [sp + 0x70]
120808: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
120812: 82 17 60                 a0 = u64 [sp + 0x60]
120815: 7b 17 b8 01              u64 [sp + 0x1b8] = a0
120819: 82 17 58                 a0 = u64 [sp + 0x58]
120822: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
120826: 7b 16 d0 01              u64 [sp + 0x1d0] = s1
120830: 95 17 b0 01              a0 = sp + 0x1b0
120834: 7b 17 90 02              u64 [sp + 0x290] = a0
120838: 33 07 9e 01              a0 = 0x19e
120842: 7b 17 98 02              u64 [sp + 0x298] = a0
120846: 95 18 c8 01              a1 = sp + 0x1c8
120850: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
120854: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
120858: 95 17 e0 01              a0 = sp + 0x1e0
120862: 7b 17 b0 02              u64 [sp + 0x2b0] = a0
120866: 33 07 aa 01              a0 = 0x1aa
120870: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
120874: 95 17 08 02              a0 = sp + 0x208
120878: 7b 17 c0 02              u64 [sp + 0x2c0] = a0
120882: 33 07 62 02              a0 = 0x262
120886: 7b 17 c8 02              u64 [sp + 0x2c8] = a0
120890: 33 07 78 0c 01           a0 = 0x10c78
120895: 7b 17 38 02              u64 [sp + 0x238] = a0
120899: 49 21 40 02 04           u64 [sp + 576] = 0x4
120904: 49 21 58 02              u64 [sp + 600] = 0
120908: 95 18 90 02              a1 = sp + 0x290
120912: 7b 18 48 02              u64 [sp + 0x248] = a1
120916: 49 21 50 02 04           u64 [sp + 592] = 0x4
120921: 95 17 20 01              a0 = sp + 0x120
120925: 95 18 38 02              a1 = sp + 0x238
120929: 50 20 a4 05 99 77 fe     ra = 1444, jump @1503
      :                          @9221 [@dyn 722]
120936: 82 16 28 01              s1 = u64 [sp + 0x128]
120940: 82 1b 30 01              a4 = u64 [sp + 0x130]
120944: 82 17 20 01              a0 = u64 [sp + 0x120]
120948: 7b 17 70                 u64 [sp + 0x70] = a0
120951: 33 07 02                 a0 = 0x2
120954: 33 08                    a1 = 0
120956: 33 09                    a2 = 0
120958: 64 6a                    a3 = s1
120960: 33 00 a6 05              ra = 0x5a6
120964: 0a 64                    ecalli 100 // 'log'
120966: 01                       fallthrough
      :                          @9222 [@dyn 723]
120967: 82 1c 70                 a5 = u64 [sp + 0x70]
120970: 82 17 68                 a0 = u64 [sp + 0x68]
120973: c8 c7 07                 a0 = a0 + a5
120976: 55 37 00 00 ff 0a        jump @9224 if a0 >=u 4294901760
      :                          @9223
120982: 28 ed 09 01              jump @12868
      :                          @9224
120986: 33 07 c0 22 03           a0 = 0x322c0
120991: 95 77 00 00 01           a0 = a0 + 0x10000
120996: 01                       fallthrough
      :                          @9225
120997: 82 78                    a1 = u64 [a0]
120999: c9 87 09                 a2 = a0 - a1
121002: aa 69 07                 jump @9227 if a2 == s1
      :                          @9226
121005: 28 d6 09 01              jump @12868
      :                          @9227
121009: c9 c8 09                 a2 = a1 - a5
121012: 01                       fallthrough
      :                          @9228
121013: 82 7a                    a3 = u64 [a0]
121015: ab 8a ee                 jump @9225 if a3 != a1
      :                          @9229
121018: 7b 79                    u64 [a0] = a2
121020: 33 0b                    a4 = 0
121022: 01                       fallthrough
      :                          @9230
121023: ab 8a e6                 jump @9225 if a3 != a1
      :                          @9231
121026: 28 c1 09 01              jump @12868
      :                          @9232 [@dyn 724]
121030: 3a 08 78 12 03           a1 = u64 [0x31278]
121035: 97 89 0d                 a2 = a1 << 0xd
121038: d3 89 09                 a2 = a2 ^ a1
121041: 98 9a 07                 a3 = a2 >> 0x7
121044: 3a 08 60 11 03           a1 = u64 [0x31160]
121049: d3 a9 09                 a2 = a2 ^ a3
121052: 97 9a 11                 a3 = a2 << 0x11
121055: d3 a9 09                 a2 = a2 ^ a3
121058: ca 89 0a                 a3 = a2 * a1
121061: 3e 09 78 12 03           u64 [0x31278] = a2
121066: 14 09 cd cc cc cc cc cc cc cc a2 = 0xcccccccccccccccd
121076: d6 9a 0b                 a4 = a3 mulhu a2
121079: 98 bb 04                 a4 = a4 >> 0x4
121082: 96 bb 14                 a4 = a4 * 0x14
121085: c9 ba 0a                 a3 = a3 - a4
121088: 7b 1a 10 01              u64 [sp + 0x110] = a3
121092: 3a 0a 78 12 03           a3 = u64 [0x31278]
121097: 97 ab 0d                 a4 = a3 << 0xd
121100: d3 ba 0a                 a3 = a3 ^ a4
121103: 98 ab 07                 a4 = a3 >> 0x7
121106: d3 ba 0a                 a3 = a3 ^ a4
121109: 97 ab 11                 a4 = a3 << 0x11
121112: d3 ba 0a                 a3 = a3 ^ a4
121115: ca 8a 0b                 a4 = a3 * a1
121118: 3e 0a 78 12 03           u64 [0x31278] = a3
121123: d6 9b 0a                 a3 = a4 mulhu a2
121126: 98 aa 04                 a3 = a3 >> 0x4
121129: 96 aa 14                 a3 = a3 * 0x14
121132: c9 ab 0b                 a4 = a4 - a3
121135: 7b 1b b0 01              u64 [sp + 0x1b0] = a4
121139: 3a 0a 78 12 03           a3 = u64 [0x31278]
121144: 97 ab 0d                 a4 = a3 << 0xd
121147: d3 ba 0a                 a3 = a3 ^ a4
121150: 98 ab 07                 a4 = a3 >> 0x7
121153: d3 ba 0a                 a3 = a3 ^ a4
121156: 97 ab 11                 a4 = a3 << 0x11
121159: d3 ba 0a                 a3 = a3 ^ a4
121162: ca 8a 0b                 a4 = a3 * a1
121165: 3e 0a 78 12 03           u64 [0x31278] = a3
121170: d6 9b 07                 a0 = a4 mulhu a2
121173: 98 77 03                 a0 = a0 >> 0x3
121176: 96 77 0a                 a0 = a0 * 0xa
121179: 82 18 10 01              a1 = u64 [sp + 0x110]
121183: 82 19 b0 01              a2 = u64 [sp + 0x1b0]
121187: c9 7b 0a                 a3 = a4 - a0
121190: 95 aa 01                 a3 = a3 + 0x1
121193: 7b 1a c8 01              u64 [sp + 0x1c8] = a3
121197: 95 17 e0 01              a0 = sp + 0x1e0
121201: 33 00 aa 05              ra = 0x5aa
121205: 95 11 98                 sp = sp + 0xffffffffffffff98
121208: 7b 10 60                 u64 [sp + 0x60] = ra
121211: 7b 15 58                 u64 [sp + 0x58] = s0
121214: 7b 16 50                 u64 [sp + 0x50] = s1
121217: 64 92                    t0 = a2
121219: 64 83                    t1 = a1
121221: 7b 17                    u64 [sp] = a0
121223: 33 08                    a1 = 0
121225: 33 05                    s0 = 0
121227: 49 11 38                 u64 [sp + 56] = 0
121230: 33 07 08                 a0 = 0x8
121233: 7b 17 40                 u64 [sp + 0x40] = a0
121236: 49 11 48                 u64 [sp + 72] = 0
121239: 9a ac 01                 a5 = 0x1 - a3
121242: 33 04 03                 t2 = 0x3
121245: 33 00 07                 ra = 0x7
121248: 7b 13 30                 u64 [sp + 0x30] = t1
121251: 64 26                    s1 = t0
121253: 7b 12 10                 u64 [sp + 0x10] = t0
121256: 7b 13 08                 u64 [sp + 0x8] = t1
121259: 28 6f 3b ff              jump @5539
      :                          @9233 [@dyn 725]
121263: 82 17 f0 01              a0 = u64 [sp + 0x1f0]
121267: 7b 17 20 01              u64 [sp + 0x120] = a0
121271: 95 17 10 01              a0 = sp + 0x110
121275: 7b 17 90 02              u64 [sp + 0x290] = a0
121279: 33 07 98 0c              a0 = 0xc98
121283: 7b 17 98 02              u64 [sp + 0x298] = a0
121287: 95 18 b0 01              a1 = sp + 0x1b0
121291: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
121295: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
121299: 95 18 c8 01              a1 = sp + 0x1c8
121303: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
121307: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
121311: 95 17 20 01              a0 = sp + 0x120
121315: 7b 17 c0 02              u64 [sp + 0x2c0] = a0
121319: 33 07 2c 0c              a0 = 0xc2c
121323: 7b 17 c8 02              u64 [sp + 0x2c8] = a0
121327: 33 07 d0 0c 01           a0 = 0x10cd0
121332: 7b 17 38 02              u64 [sp + 0x238] = a0
121336: 49 21 40 02 05           u64 [sp + 576] = 0x5
121341: 49 21 58 02              u64 [sp + 600] = 0
121345: 95 17 90 02              a0 = sp + 0x290
121349: 7b 17 48 02              u64 [sp + 0x248] = a0
121353: 49 21 50 02 04           u64 [sp + 592] = 0x4
121358: 95 17 08 02              a0 = sp + 0x208
121362: 95 18 38 02              a1 = sp + 0x238
121366: 50 20 ac 05 e4 75 fe     ra = 1452, jump @1503
      :                          @9234 [@dyn 726]
121373: 82 16 10 02              s1 = u64 [sp + 0x210]
121377: 82 1b 18 02              a4 = u64 [sp + 0x218]
121381: 82 17 08 02              a0 = u64 [sp + 0x208]
121385: 7b 17 70                 u64 [sp + 0x70] = a0
121388: 33 07 02                 a0 = 0x2
121391: 33 08                    a1 = 0
121393: 33 09                    a2 = 0
121395: 64 6a                    a3 = s1
121397: 33 00 ae 05              ra = 0x5ae
121401: 0a 64                    ecalli 100 // 'log'
121403: 01                       fallthrough
      :                          @9235 [@dyn 727]
121404: 82 1c 70                 a5 = u64 [sp + 0x70]
121407: 82 17 68                 a0 = u64 [sp + 0x68]
121410: c8 c7 07                 a0 = a0 + a5
121413: 53 37 00 00 ff 25        jump @9241 if a0 <u 4294901760
      :                          @9236
121419: 33 07 c0 22 03           a0 = 0x322c0
121424: 95 77 00 00 01           a0 = a0 + 0x10000
121429: 01                       fallthrough
      :                          @9237
121430: 82 78                    a1 = u64 [a0]
121432: c9 87 09                 a2 = a0 - a1
121435: ab 69 0f                 jump @9241 if a2 != s1
      :                          @9238
121438: c9 c8 09                 a2 = a1 - a5
121441: 01                       fallthrough
      :                          @9239
121442: 82 7a                    a3 = u64 [a0]
121444: ab 8a f2                 jump @9237 if a3 != a1
      :                          @9240
121447: 7b 79                    u64 [a0] = a2
121449: 01                       fallthrough
      :                          @9241
121450: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
121454: 52 08 07                 jump @9243 if a1 != 0
      :                          @9242
121457: 28 12 08 01              jump @12868
      :                          @9243
121461: 54 28 00 10 09           jump @9245 if a1 <=u 4096
      :                          @9244
121466: 28 09 08 01              jump @12868
      :                          @9245
121470: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
121474: 97 88 04                 a1 = a1 << 0x4
121477: 33 09 c0 22 03           a2 = 0x322c0
121482: 95 99 00 00 01           a2 = a2 + 0x10000
121487: 01                       fallthrough
      :                          @9246
121488: 82 9a                    a3 = u64 [a2]
121490: c9 a9 0b                 a4 = a2 - a3
121493: aa 7b 07                 jump @9248 if a4 == a0
      :                          @9247
121496: 28 eb 07 01              jump @12868
      :                          @9248
121500: c9 8a 0b                 a4 = a3 - a1
121503: 01                       fallthrough
      :                          @9249
121504: 82 9c                    a5 = u64 [a2]
121506: ab ac ee                 jump @9246 if a5 != a3
      :                          @9250
121509: 7b 9b                    u64 [a2] = a4
121511: 33 06                    s1 = 0
121513: 01                       fallthrough
      :                          @9251
121514: ab ac e6                 jump @9246 if a5 != a3
      :                          @9252
121517: 28 d6 07 01              jump @12868
      :                          @9253 [@dyn 728]
121521: 3a 08 78 12 03           a1 = u64 [0x31278]
121526: 97 89 0d                 a2 = a1 << 0xd
121529: d3 98 08                 a1 = a1 ^ a2
121532: 98 89 07                 a2 = a1 >> 0x7
121535: d3 98 08                 a1 = a1 ^ a2
121538: 3a 09 60 11 03           a2 = u64 [0x31160]
121543: 97 8a 11                 a3 = a1 << 0x11
121546: d3 a8 08                 a1 = a1 ^ a3
121549: ca 98 09                 a2 = a1 * a2
121552: 3e 08 78 12 03           u64 [0x31278] = a1
121557: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
121567: d6 79 07                 a0 = a2 mulhu a0
121570: 98 77 04                 a0 = a0 >> 0x4
121573: 96 77 14                 a0 = a0 * 0x14
121576: c9 79 08                 a1 = a2 - a0
121579: 95 88 01                 a1 = a1 + 0x1
121582: 95 17 08 02              a0 = sp + 0x208
121586: 95 16 08 02              s1 = sp + 0x208
121590: 50 20 b2 05 a3 a4 fe     ra = 1458, jump @2265
      :                          @9254 [@dyn 729]
121597: 82 17 10 02              a0 = u64 [sp + 0x210]
121601: 82 18 18 02              a1 = u64 [sp + 0x218]
121605: 50 20 b4 05 c7 3a ff     ra = 1460, jump @5545
      :                          @9255 [@dyn 730]
121612: 7b 16 e0 01              u64 [sp + 0x1e0] = s1
121616: 33 07 34 02              a0 = 0x234
121620: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
121624: 33 07 30 0d 01           a0 = 0x10d30
121629: 7b 17 90 02              u64 [sp + 0x290] = a0
121633: 49 21 98 02 01           u64 [sp + 664] = 0x1
121638: 49 21 b0 02              u64 [sp + 688] = 0
121642: 95 18 e0 01              a1 = sp + 0x1e0
121646: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
121650: 49 21 a8 02 01           u64 [sp + 680] = 0x1
121655: 95 17 38 02              a0 = sp + 0x238
121659: 95 18 90 02              a1 = sp + 0x290
121663: 50 20 b6 05 bb 74 fe     ra = 1462, jump @1503
      :                          @9256 [@dyn 731]
121670: 82 16 40 02              s1 = u64 [sp + 0x240]
121674: 82 1b 48 02              a4 = u64 [sp + 0x248]
121678: 82 17 38 02              a0 = u64 [sp + 0x238]
121682: 7b 17 70                 u64 [sp + 0x70] = a0
121685: 33 07 02                 a0 = 0x2
121688: 33 08                    a1 = 0
121690: 33 09                    a2 = 0
121692: 64 6a                    a3 = s1
121694: 33 00 b8 05              ra = 0x5b8
121698: 0a 64                    ecalli 100 // 'log'
121700: 01                       fallthrough
      :                          @9257 [@dyn 732]
121701: 82 1c 70                 a5 = u64 [sp + 0x70]
121704: 82 17 68                 a0 = u64 [sp + 0x68]
121707: c8 c7 07                 a0 = a0 + a5
121710: 53 37 00 00 ff 25        jump @9263 if a0 <u 4294901760
      :                          @9258
121716: 33 07 c0 22 03           a0 = 0x322c0
121721: 95 77 00 00 01           a0 = a0 + 0x10000
121726: 01                       fallthrough
      :                          @9259
121727: 82 78                    a1 = u64 [a0]
121729: c9 87 09                 a2 = a0 - a1
121732: ab 69 0f                 jump @9263 if a2 != s1
      :                          @9260
121735: c9 c8 09                 a2 = a1 - a5
121738: 01                       fallthrough
      :                          @9261
121739: 82 7a                    a3 = u64 [a0]
121741: ab 8a f2                 jump @9259 if a3 != a1
      :                          @9262
121744: 7b 79                    u64 [a0] = a2
121746: 01                       fallthrough
      :                          @9263
121747: 82 18 08 02              a1 = u64 [sp + 0x208]
121751: 52 08 07                 jump @9265 if a1 != 0
      :                          @9264
121754: 28 e9 06 01              jump @12868
      :                          @9265
121758: 54 28 00 20 09           jump @9267 if a1 <=u 8192
      :                          @9266
121763: 28 e0 06 01              jump @12868
      :                          @9267
121767: 82 17 10 02              a0 = u64 [sp + 0x210]
121771: 97 88 03                 a1 = a1 << 0x3
121774: 33 09 c0 22 03           a2 = 0x322c0
121779: 95 99 00 00 01           a2 = a2 + 0x10000
121784: 01                       fallthrough
      :                          @9268
121785: 82 9a                    a3 = u64 [a2]
121787: c9 a9 0b                 a4 = a2 - a3
121790: aa 7b 07                 jump @9270 if a4 == a0
      :                          @9269
121793: 28 c2 06 01              jump @12868
      :                          @9270
121797: c9 8a 0b                 a4 = a3 - a1
121800: 01                       fallthrough
      :                          @9271
121801: 82 9c                    a5 = u64 [a2]
121803: ab ac ee                 jump @9268 if a5 != a3
      :                          @9272
121806: 7b 9b                    u64 [a2] = a4
121808: 33 06                    s1 = 0
121810: 01                       fallthrough
      :                          @9273
121811: ab ac e6                 jump @9268 if a5 != a3
      :                          @9274
121814: 28 ad 06 01              jump @12868
      :                          @9275 [@dyn 733]
121818: 3a 08 78 12 03           a1 = u64 [0x31278]
121823: 97 89 0d                 a2 = a1 << 0xd
121826: d3 98 08                 a1 = a1 ^ a2
121829: 98 89 07                 a2 = a1 >> 0x7
121832: d3 98 08                 a1 = a1 ^ a2
121835: 3a 09 60 11 03           a2 = u64 [0x31160]
121840: 97 8a 11                 a3 = a1 << 0x11
121843: d3 a8 08                 a1 = a1 ^ a3
121846: ca 98 09                 a2 = a1 * a2
121849: 3e 08 78 12 03           u64 [0x31278] = a1
121854: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
121864: d6 79 07                 a0 = a2 mulhu a0
121867: 98 77 04                 a0 = a0 >> 0x4
121870: 96 77 14                 a0 = a0 * 0x14
121873: c9 79 08                 a1 = a2 - a0
121876: 95 88 01                 a1 = a1 + 0x1
121879: 95 17 08 02              a0 = sp + 0x208
121883: 95 16 08 02              s1 = sp + 0x208
121887: 50 20 bc 05 7a a3 fe     ra = 1468, jump @2265
      :                          @9276 [@dyn 734]
121894: 82 17 10 02              a0 = u64 [sp + 0x210]
121898: 82 18 18 02              a1 = u64 [sp + 0x218]
121902: 50 20 be 05 50 3b ff     ra = 1470, jump @5582
      :                          @9277 [@dyn 735]
121909: 7b 16 e0 01              u64 [sp + 0x1e0] = s1
121913: 33 07 34 02              a0 = 0x234
121917: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
121921: 33 07 50 0d 01           a0 = 0x10d50
121926: 7b 17 90 02              u64 [sp + 0x290] = a0
121930: 49 21 98 02 01           u64 [sp + 664] = 0x1
121935: 49 21 b0 02              u64 [sp + 688] = 0
121939: 95 18 e0 01              a1 = sp + 0x1e0
121943: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
121947: 49 21 a8 02 01           u64 [sp + 680] = 0x1
121952: 95 17 38 02              a0 = sp + 0x238
121956: 95 18 90 02              a1 = sp + 0x290
121960: 50 20 c0 05 92 73 fe     ra = 1472, jump @1503
      :                          @9278 [@dyn 736]
121967: 82 16 40 02              s1 = u64 [sp + 0x240]
121971: 82 1b 48 02              a4 = u64 [sp + 0x248]
121975: 82 17 38 02              a0 = u64 [sp + 0x238]
121979: 7b 17 70                 u64 [sp + 0x70] = a0
121982: 33 07 02                 a0 = 0x2
121985: 33 08                    a1 = 0
121987: 33 09                    a2 = 0
121989: 64 6a                    a3 = s1
121991: 33 00 c2 05              ra = 0x5c2
121995: 0a 64                    ecalli 100 // 'log'
121997: 01                       fallthrough
      :                          @9279 [@dyn 737]
121998: 82 1c 70                 a5 = u64 [sp + 0x70]
122001: 82 17 68                 a0 = u64 [sp + 0x68]
122004: c8 c7 07                 a0 = a0 + a5
122007: 53 37 00 00 ff 25        jump @9285 if a0 <u 4294901760
      :                          @9280
122013: 33 07 c0 22 03           a0 = 0x322c0
122018: 95 77 00 00 01           a0 = a0 + 0x10000
122023: 01                       fallthrough
      :                          @9281
122024: 82 78                    a1 = u64 [a0]
122026: c9 87 09                 a2 = a0 - a1
122029: ab 69 0f                 jump @9285 if a2 != s1
      :                          @9282
122032: c9 c8 09                 a2 = a1 - a5
122035: 01                       fallthrough
      :                          @9283
122036: 82 7a                    a3 = u64 [a0]
122038: ab 8a f2                 jump @9281 if a3 != a1
      :                          @9284
122041: 7b 79                    u64 [a0] = a2
122043: 01                       fallthrough
      :                          @9285
122044: 82 18 08 02              a1 = u64 [sp + 0x208]
122048: 52 08 07                 jump @9287 if a1 != 0
      :                          @9286
122051: 28 c0 05 01              jump @12868
      :                          @9287
122055: 54 28 00 20 09           jump @9289 if a1 <=u 8192
      :                          @9288
122060: 28 b7 05 01              jump @12868
      :                          @9289
122064: 82 17 10 02              a0 = u64 [sp + 0x210]
122068: 97 88 03                 a1 = a1 << 0x3
122071: 33 09 c0 22 03           a2 = 0x322c0
122076: 95 99 00 00 01           a2 = a2 + 0x10000
122081: 01                       fallthrough
      :                          @9290
122082: 82 9a                    a3 = u64 [a2]
122084: c9 a9 0b                 a4 = a2 - a3
122087: aa 7b 07                 jump @9292 if a4 == a0
      :                          @9291
122090: 28 99 05 01              jump @12868
      :                          @9292
122094: c9 8a 0b                 a4 = a3 - a1
122097: 01                       fallthrough
      :                          @9293
122098: 82 9c                    a5 = u64 [a2]
122100: ab ac ee                 jump @9290 if a5 != a3
      :                          @9294
122103: 7b 9b                    u64 [a2] = a4
122105: 33 06                    s1 = 0
122107: 01                       fallthrough
      :                          @9295
122108: ab ac e6                 jump @9290 if a5 != a3
      :                          @9296
122111: 28 84 05 01              jump @12868
      :                          @9297 [@dyn 738]
122115: 3a 08 78 12 03           a1 = u64 [0x31278]
122120: 97 89 0d                 a2 = a1 << 0xd
122123: d3 98 08                 a1 = a1 ^ a2
122126: 98 89 07                 a2 = a1 >> 0x7
122129: d3 98 08                 a1 = a1 ^ a2
122132: 3a 09 60 11 03           a2 = u64 [0x31160]
122137: 97 8a 11                 a3 = a1 << 0x11
122140: d3 a8 08                 a1 = a1 ^ a3
122143: ca 98 09                 a2 = a1 * a2
122146: 3e 08 78 12 03           u64 [0x31278] = a1
122151: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
122161: d6 79 07                 a0 = a2 mulhu a0
122164: 98 77 04                 a0 = a0 >> 0x4
122167: 96 77 14                 a0 = a0 * 0x14
122170: c9 79 08                 a1 = a2 - a0
122173: 95 88 01                 a1 = a1 + 0x1
122176: 95 17 08 02              a0 = sp + 0x208
122180: 95 16 08 02              s1 = sp + 0x208
122184: 50 20 c6 05 51 a2 fe     ra = 1478, jump @2265
      :                          @9298 [@dyn 739]
122191: 82 17 10 02              a0 = u64 [sp + 0x210]
122195: 82 18 18 02              a1 = u64 [sp + 0x218]
122199: 50 20 c8 05 b4 2d ff     ra = 1480, jump @5358
      :                          @9299 [@dyn 740]
122206: 7b 16 e0 01              u64 [sp + 0x1e0] = s1
122210: 33 07 34 02              a0 = 0x234
122214: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
122218: 33 07 70 0d 01           a0 = 0x10d70
122223: 7b 17 90 02              u64 [sp + 0x290] = a0
122227: 49 21 98 02 01           u64 [sp + 664] = 0x1
122232: 49 21 b0 02              u64 [sp + 688] = 0
122236: 95 18 e0 01              a1 = sp + 0x1e0
122240: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
122244: 49 21 a8 02 01           u64 [sp + 680] = 0x1
122249: 95 17 38 02              a0 = sp + 0x238
122253: 95 18 90 02              a1 = sp + 0x290
122257: 50 20 ca 05 69 72 fe     ra = 1482, jump @1503
      :                          @9300 [@dyn 741]
122264: 82 16 40 02              s1 = u64 [sp + 0x240]
122268: 82 1b 48 02              a4 = u64 [sp + 0x248]
122272: 82 17 38 02              a0 = u64 [sp + 0x238]
122276: 7b 17 70                 u64 [sp + 0x70] = a0
122279: 33 07 02                 a0 = 0x2
122282: 33 08                    a1 = 0
122284: 33 09                    a2 = 0
122286: 64 6a                    a3 = s1
122288: 33 00 cc 05              ra = 0x5cc
122292: 0a 64                    ecalli 100 // 'log'
122294: 01                       fallthrough
      :                          @9301 [@dyn 742]
122295: 82 1c 70                 a5 = u64 [sp + 0x70]
122298: 82 17 68                 a0 = u64 [sp + 0x68]
122301: c8 c7 07                 a0 = a0 + a5
122304: 53 37 00 00 ff 25        jump @9307 if a0 <u 4294901760
      :                          @9302
122310: 33 07 c0 22 03           a0 = 0x322c0
122315: 95 77 00 00 01           a0 = a0 + 0x10000
122320: 01                       fallthrough
      :                          @9303
122321: 82 78                    a1 = u64 [a0]
122323: c9 87 09                 a2 = a0 - a1
122326: ab 69 0f                 jump @9307 if a2 != s1
      :                          @9304
122329: c9 c8 09                 a2 = a1 - a5
122332: 01                       fallthrough
      :                          @9305
122333: 82 7a                    a3 = u64 [a0]
122335: ab 8a f2                 jump @9303 if a3 != a1
      :                          @9306
122338: 7b 79                    u64 [a0] = a2
122340: 01                       fallthrough
      :                          @9307
122341: 82 18 08 02              a1 = u64 [sp + 0x208]
122345: 52 08 07                 jump @9309 if a1 != 0
      :                          @9308
122348: 28 97 04 01              jump @12868
      :                          @9309
122352: 54 28 00 20 09           jump @9311 if a1 <=u 8192
      :                          @9310
122357: 28 8e 04 01              jump @12868
      :                          @9311
122361: 82 17 10 02              a0 = u64 [sp + 0x210]
122365: 97 88 03                 a1 = a1 << 0x3
122368: 33 09 c0 22 03           a2 = 0x322c0
122373: 95 99 00 00 01           a2 = a2 + 0x10000
122378: 01                       fallthrough
      :                          @9312
122379: 82 9a                    a3 = u64 [a2]
122381: c9 a9 0b                 a4 = a2 - a3
122384: aa 7b 07                 jump @9314 if a4 == a0
      :                          @9313
122387: 28 70 04 01              jump @12868
      :                          @9314
122391: c9 8a 0b                 a4 = a3 - a1
122394: 01                       fallthrough
      :                          @9315
122395: 82 9c                    a5 = u64 [a2]
122397: ab ac ee                 jump @9312 if a5 != a3
      :                          @9316
122400: 7b 9b                    u64 [a2] = a4
122402: 33 06                    s1 = 0
122404: 01                       fallthrough
      :                          @9317
122405: ab ac e6                 jump @9312 if a5 != a3
      :                          @9318
122408: 28 5b 04 01              jump @12868
      :                          @9319 [@dyn 743]
122412: 3a 08 78 12 03           a1 = u64 [0x31278]
122417: 97 89 0d                 a2 = a1 << 0xd
122420: d3 98 08                 a1 = a1 ^ a2
122423: 98 89 07                 a2 = a1 >> 0x7
122426: d3 98 08                 a1 = a1 ^ a2
122429: 3a 09 60 11 03           a2 = u64 [0x31160]
122434: 97 8a 11                 a3 = a1 << 0x11
122437: d3 a8 08                 a1 = a1 ^ a3
122440: ca 98 09                 a2 = a1 * a2
122443: 3e 08 78 12 03           u64 [0x31278] = a1
122448: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
122458: d6 79 07                 a0 = a2 mulhu a0
122461: 98 77 04                 a0 = a0 >> 0x4
122464: 96 77 14                 a0 = a0 * 0x14
122467: c9 79 08                 a1 = a2 - a0
122470: 95 88 01                 a1 = a1 + 0x1
122473: 95 17 20 01              a0 = sp + 0x120
122477: 33 00 d0 05              ra = 0x5d0
122481: 95 11 e8                 sp = sp + 0xffffffffffffffe8
122484: 7b 10 10                 u64 [sp + 0x10] = ra
122487: 7b 15 08                 u64 [sp + 0x8] = s0
122490: 7b 16                    u64 [sp] = s1
122492: 97 82 03                 t0 = a1 << 0x3
122495: 33 04 c0 22 03           t2 = 0x322c0
122500: 33 03 00 00 01           t1 = 0x10000
122505: c8 34 00                 ra = t2 + t1
122508: 28 9a a3 fe              jump @2286
      :                          @9320 [@dyn 744]
122512: 82 18 28 01              a1 = u64 [sp + 0x128]
122516: 82 19 30 01              a2 = u64 [sp + 0x130]
122520: 95 17 e0 01              a0 = sp + 0x1e0
122524: 95 16 e0 01              s1 = sp + 0x1e0
122528: 50 20 d2 05 94 39 ff     ra = 1490, jump @5610
      :                          @9321 [@dyn 745]
122535: 95 17 20 01              a0 = sp + 0x120
122539: 7b 17 38 02              u64 [sp + 0x238] = a0
122543: 33 07 34 02              a0 = 0x234
122547: 7b 17 40 02              u64 [sp + 0x240] = a0
122551: 7b 16 48 02              u64 [sp + 0x248] = s1
122555: 7b 17 50 02              u64 [sp + 0x250] = a0
122559: 33 07 90 0d 01           a0 = 0x10d90
122564: 7b 17 90 02              u64 [sp + 0x290] = a0
122568: 49 21 98 02 02           u64 [sp + 664] = 0x2
122573: 49 21 b0 02              u64 [sp + 688] = 0
122577: 95 18 38 02              a1 = sp + 0x238
122581: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
122585: 49 21 a8 02 02           u64 [sp + 680] = 0x2
122590: 95 17 08 02              a0 = sp + 0x208
122594: 95 18 90 02              a1 = sp + 0x290
122598: 50 20 d4 05 14 71 fe     ra = 1492, jump @1503
      :                          @9322 [@dyn 746]
122605: 82 16 10 02              s1 = u64 [sp + 0x210]
122609: 82 1b 18 02              a4 = u64 [sp + 0x218]
122613: 82 17 08 02              a0 = u64 [sp + 0x208]
122617: 7b 17 70                 u64 [sp + 0x70] = a0
122620: 33 07 02                 a0 = 0x2
122623: 33 08                    a1 = 0
122625: 33 09                    a2 = 0
122627: 64 6a                    a3 = s1
122629: 33 00 d6 05              ra = 0x5d6
122633: 0a 64                    ecalli 100 // 'log'
122635: 01                       fallthrough
      :                          @9323 [@dyn 747]
122636: 82 1c 70                 a5 = u64 [sp + 0x70]
122639: 82 17 68                 a0 = u64 [sp + 0x68]
122642: c8 c7 07                 a0 = a0 + a5
122645: 53 37 00 00 ff 25        jump @9329 if a0 <u 4294901760
      :                          @9324
122651: 33 07 c0 22 03           a0 = 0x322c0
122656: 95 77 00 00 01           a0 = a0 + 0x10000
122661: 01                       fallthrough
      :                          @9325
122662: 82 78                    a1 = u64 [a0]
122664: c9 87 09                 a2 = a0 - a1
122667: ab 69 0f                 jump @9329 if a2 != s1
      :                          @9326
122670: c9 c8 09                 a2 = a1 - a5
122673: 01                       fallthrough
      :                          @9327
122674: 82 7a                    a3 = u64 [a0]
122676: ab 8a f2                 jump @9325 if a3 != a1
      :                          @9328
122679: 7b 79                    u64 [a0] = a2
122681: 01                       fallthrough
      :                          @9329
122682: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
122686: 51 08 30                 jump @9336 if a1 == 0
      :                          @9330
122689: 56 28 00 20 2d           jump @9336 if a1 >u 8192
      :                          @9331
122694: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
122698: 97 88 03                 a1 = a1 << 0x3
122701: 33 09 c0 22 03           a2 = 0x322c0
122706: 95 99 00 00 01           a2 = a2 + 0x10000
122711: 01                       fallthrough
      :                          @9332
122712: 82 9a                    a3 = u64 [a2]
122714: c9 a9 0b                 a4 = a2 - a3
122717: ab 7b 11                 jump @9336 if a4 != a0
      :                          @9333
122720: c9 8a 0b                 a4 = a3 - a1
122723: 01                       fallthrough
      :                          @9334
122724: 82 9c                    a5 = u64 [a2]
122726: ab ac f2                 jump @9332 if a5 != a3
      :                          @9335
122729: 7b 9b                    u64 [a2] = a4
122731: 33 06                    s1 = 0
122733: 01                       fallthrough
      :                          @9336
122734: 82 18 20 01              a1 = u64 [sp + 0x120]
122738: 52 08 07                 jump @9338 if a1 != 0
      :                          @9337
122741: 28 0e 03 01              jump @12868
      :                          @9338
122745: 54 28 00 20 09           jump @9340 if a1 <=u 8192
      :                          @9339
122750: 28 05 03 01              jump @12868
      :                          @9340
122754: 82 17 28 01              a0 = u64 [sp + 0x128]
122758: 97 88 03                 a1 = a1 << 0x3
122761: 33 09 c0 22 03           a2 = 0x322c0
122766: 95 99 00 00 01           a2 = a2 + 0x10000
122771: 01                       fallthrough
      :                          @9341
122772: 82 9a                    a3 = u64 [a2]
122774: c9 a9 0b                 a4 = a2 - a3
122777: aa 7b 07                 jump @9343 if a4 == a0
      :                          @9342
122780: 28 e7 02 01              jump @12868
      :                          @9343
122784: c9 8a 0b                 a4 = a3 - a1
122787: 01                       fallthrough
      :                          @9344
122788: 82 9c                    a5 = u64 [a2]
122790: ab ac ee                 jump @9341 if a5 != a3
      :                          @9345
122793: 7b 9b                    u64 [a2] = a4
122795: 33 06                    s1 = 0
122797: 01                       fallthrough
      :                          @9346
122798: ab ac e6                 jump @9341 if a5 != a3
      :                          @9347
122801: 28 d2 02 01              jump @12868
      :                          @9348 [@dyn 748]
122805: 3a 08 78 12 03           a1 = u64 [0x31278]
122810: 97 89 0d                 a2 = a1 << 0xd
122813: d3 98 08                 a1 = a1 ^ a2
122816: 98 89 07                 a2 = a1 >> 0x7
122819: d3 98 08                 a1 = a1 ^ a2
122822: 3a 09 60 11 03           a2 = u64 [0x31160]
122827: 97 8a 11                 a3 = a1 << 0x11
122830: d3 a8 08                 a1 = a1 ^ a3
122833: ca 98 09                 a2 = a1 * a2
122836: 3e 08 78 12 03           u64 [0x31278] = a1
122841: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
122851: d6 79 07                 a0 = a2 mulhu a0
122854: 98 77 04                 a0 = a0 >> 0x4
122857: 96 77 14                 a0 = a0 * 0x14
122860: c9 79 08                 a1 = a2 - a0
122863: 95 88 01                 a1 = a1 + 0x1
122866: 95 17 08 02              a0 = sp + 0x208
122870: 95 16 08 02              s1 = sp + 0x208
122874: 33 00 da 05              ra = 0x5da
122878: 95 11 e8                 sp = sp + 0xffffffffffffffe8
122881: 7b 10 10                 u64 [sp + 0x10] = ra
122884: 7b 15 08                 u64 [sp + 0x8] = s0
122887: 7b 16                    u64 [sp] = s1
122889: 97 82 03                 t0 = a1 << 0x3
122892: 33 04 c0 22 03           t2 = 0x322c0
122897: 33 03 00 00 01           t1 = 0x10000
122902: c8 34 00                 ra = t2 + t1
122905: 28 a5 a2 fe              jump @2294
      :                          @9349 [@dyn 749]
122909: 82 17 10 02              a0 = u64 [sp + 0x210]
122913: 82 18 18 02              a1 = u64 [sp + 0x218]
122917: 50 20 dc 05 28 3a ff     ra = 1500, jump @5659
      :                          @9350 [@dyn 750]
122924: 7b 16 e0 01              u64 [sp + 0x1e0] = s1
122928: 33 07 34 02              a0 = 0x234
122932: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
122936: 33 07 c0 0d 01           a0 = 0x10dc0
122941: 7b 17 90 02              u64 [sp + 0x290] = a0
122945: 49 21 98 02 01           u64 [sp + 664] = 0x1
122950: 49 21 b0 02              u64 [sp + 688] = 0
122954: 95 18 e0 01              a1 = sp + 0x1e0
122958: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
122962: 49 21 a8 02 01           u64 [sp + 680] = 0x1
122967: 95 17 38 02              a0 = sp + 0x238
122971: 95 18 90 02              a1 = sp + 0x290
122975: 50 20 de 05 9b 6f fe     ra = 1502, jump @1503
      :                          @9351 [@dyn 751]
122982: 82 16 40 02              s1 = u64 [sp + 0x240]
122986: 82 1b 48 02              a4 = u64 [sp + 0x248]
122990: 82 17 38 02              a0 = u64 [sp + 0x238]
122994: 7b 17 70                 u64 [sp + 0x70] = a0
122997: 33 07 02                 a0 = 0x2
123000: 33 08                    a1 = 0
123002: 33 09                    a2 = 0
123004: 64 6a                    a3 = s1
123006: 33 00 e0 05              ra = 0x5e0
123010: 0a 64                    ecalli 100 // 'log'
123012: 01                       fallthrough
      :                          @9352 [@dyn 752]
123013: 82 1c 70                 a5 = u64 [sp + 0x70]
123016: 82 17 68                 a0 = u64 [sp + 0x68]
123019: c8 c7 07                 a0 = a0 + a5
123022: 53 37 00 00 ff 25        jump @9358 if a0 <u 4294901760
      :                          @9353
123028: 33 07 c0 22 03           a0 = 0x322c0
123033: 95 77 00 00 01           a0 = a0 + 0x10000
123038: 01                       fallthrough
      :                          @9354
123039: 82 78                    a1 = u64 [a0]
123041: c9 87 09                 a2 = a0 - a1
123044: ab 69 0f                 jump @9358 if a2 != s1
      :                          @9355
123047: c9 c8 09                 a2 = a1 - a5
123050: 01                       fallthrough
      :                          @9356
123051: 82 7a                    a3 = u64 [a0]
123053: ab 8a f2                 jump @9354 if a3 != a1
      :                          @9357
123056: 7b 79                    u64 [a0] = a2
123058: 01                       fallthrough
      :                          @9358
123059: 82 18 08 02              a1 = u64 [sp + 0x208]
123063: 52 08 07                 jump @9360 if a1 != 0
      :                          @9359
123066: 28 c9 01 01              jump @12868
      :                          @9360
123070: 54 28 00 20 09           jump @9362 if a1 <=u 8192
      :                          @9361
123075: 28 c0 01 01              jump @12868
      :                          @9362
123079: 82 17 10 02              a0 = u64 [sp + 0x210]
123083: 97 88 03                 a1 = a1 << 0x3
123086: 33 09 c0 22 03           a2 = 0x322c0
123091: 95 99 00 00 01           a2 = a2 + 0x10000
123096: 01                       fallthrough
      :                          @9363
123097: 82 9a                    a3 = u64 [a2]
123099: c9 a9 0b                 a4 = a2 - a3
123102: aa 7b 07                 jump @9365 if a4 == a0
      :                          @9364
123105: 28 a2 01 01              jump @12868
      :                          @9365
123109: c9 8a 0b                 a4 = a3 - a1
123112: 01                       fallthrough
      :                          @9366
123113: 82 9c                    a5 = u64 [a2]
123115: ab ac ee                 jump @9363 if a5 != a3
      :                          @9367
123118: 7b 9b                    u64 [a2] = a4
123120: 33 06                    s1 = 0
123122: 01                       fallthrough
      :                          @9368
123123: ab ac e6                 jump @9363 if a5 != a3
      :                          @9369
123126: 28 8d 01 01              jump @12868
      :                          @9370 [@dyn 753]
123130: 3a 07 78 12 03           a0 = u64 [0x31278]
123135: 33 0a 78 12 03           a3 = 0x31278
123140: 97 78 0d                 a1 = a0 << 0xd
123143: d3 87 07                 a0 = a0 ^ a1
123146: 98 78 07                 a1 = a0 >> 0x7
123149: 3a 06 60 11 03           s1 = u64 [0x31160]
123154: d3 87 07                 a0 = a0 ^ a1
123157: 97 78 11                 a1 = a0 << 0x11
123160: d3 87 07                 a0 = a0 ^ a1
123163: ca 67 08                 a1 = a0 * s1
123166: 3e 07 78 12 03           u64 [0x31278] = a0
123171: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
123181: d6 78 07                 a0 = a1 mulhu a0
123184: 98 77 04                 a0 = a0 >> 0x4
123187: 33 09 14                 a2 = 0x14
123190: ca 97 07                 a0 = a0 * a2
123193: c9 78 08                 a1 = a1 - a0
123196: 95 88 01                 a1 = a1 + 0x1
123199: 7b 18 70                 u64 [sp + 0x70] = a1
123202: 95 17 20 01              a0 = sp + 0x120
123206: 50 20 e4 05 77 94 fe     ra = 1508, jump @2172
      :                          @9371 [@dyn 754]
123213: 82 18 28 01              a1 = u64 [sp + 0x128]
123217: 82 19 30 01              a2 = u64 [sp + 0x130]
123221: 95 17 e0 01              a0 = sp + 0x1e0
123225: 50 20 e6 05 19 3b ff     ra = 1510, jump @5705
      :                          @9372 [@dyn 755]
123232: 3a 07 78 12 03           a0 = u64 [0x31278]
123237: 97 78 0d                 a1 = a0 << 0xd
123240: d3 87 07                 a0 = a0 ^ a1
123243: 98 78 07                 a1 = a0 >> 0x7
123246: d3 87 07                 a0 = a0 ^ a1
123249: 97 78 11                 a1 = a0 << 0x11
123252: d3 78 09                 a2 = a1 ^ a0
123255: 3e 09 78 12 03           u64 [0x31278] = a2
123260: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
123264: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
123268: ca 69 09                 a2 = a2 * s1
123271: 82 1a 70                 a3 = u64 [sp + 0x70]
123274: cd a9 09                 a2 = a2 %u a3
123277: 7b 19 b0 01              u64 [sp + 0x1b0] = a2
123281: 7b 17 70                 u64 [sp + 0x70] = a0
123284: 50 20 e8 05 a4 3b ff     ra = 1512, jump @5722
      :                          @9373 [@dyn 756]
123291: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
123295: 95 17 20 01              a0 = sp + 0x120
123299: 7b 17 90 02              u64 [sp + 0x290] = a0
123303: 33 07 34 02              a0 = 0x234
123307: 7b 17 98 02              u64 [sp + 0x298] = a0
123311: 95 17 b0 01              a0 = sp + 0x1b0
123315: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
123319: 33 07 2c 0c              a0 = 0xc2c
123323: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
123327: 95 18 c8 01              a1 = sp + 0x1c8
123331: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
123335: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
123339: 33 07 e0 0d 01           a0 = 0x10de0
123344: 7b 17 38 02              u64 [sp + 0x238] = a0
123348: 49 21 40 02 03           u64 [sp + 576] = 0x3
123353: 49 21 58 02              u64 [sp + 600] = 0
123357: 95 18 90 02              a1 = sp + 0x290
123361: 7b 18 48 02              u64 [sp + 0x248] = a1
123365: 49 21 50 02 03           u64 [sp + 592] = 0x3
123370: 95 17 08 02              a0 = sp + 0x208
123374: 95 18 38 02              a1 = sp + 0x238
123378: 50 20 ea 05 08 6e fe     ra = 1514, jump @1503
      :                          @9374 [@dyn 757]
123385: 82 16 10 02              s1 = u64 [sp + 0x210]
123389: 82 1b 18 02              a4 = u64 [sp + 0x218]
123393: 82 17 08 02              a0 = u64 [sp + 0x208]
123397: 7b 17 60                 u64 [sp + 0x60] = a0
123400: 33 07 02                 a0 = 0x2
123403: 33 08                    a1 = 0
123405: 33 09                    a2 = 0
123407: 64 6a                    a3 = s1
123409: 33 00 ec 05              ra = 0x5ec
123413: 0a 64                    ecalli 100 // 'log'
123415: 01                       fallthrough
      :                          @9375 [@dyn 758]
123416: 82 1c 60                 a5 = u64 [sp + 0x60]
123419: 82 17 68                 a0 = u64 [sp + 0x68]
123422: c8 c7 07                 a0 = a0 + a5
123425: 53 37 00 00 ff 25        jump @9381 if a0 <u 4294901760
      :                          @9376
123431: 33 07 c0 22 03           a0 = 0x322c0
123436: 95 77 00 00 01           a0 = a0 + 0x10000
123441: 01                       fallthrough
      :                          @9377
123442: 82 78                    a1 = u64 [a0]
123444: c9 87 09                 a2 = a0 - a1
123447: ab 69 0f                 jump @9381 if a2 != s1
      :                          @9378
123450: c9 c8 09                 a2 = a1 - a5
123453: 01                       fallthrough
      :                          @9379
123454: 82 7a                    a3 = u64 [a0]
123456: ab 8a f2                 jump @9377 if a3 != a1
      :                          @9380
123459: 7b 79                    u64 [a0] = a2
123461: 01                       fallthrough
      :                          @9381
123462: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
123466: 82 16 70                 s1 = u64 [sp + 0x70]
123469: 51 07 2a                 jump @9388 if a0 == 0
      :                          @9382
123472: 56 27 00 20 27           jump @9388 if a0 >u 8192
      :                          @9383
123477: 97 77 03                 a0 = a0 << 0x3
123480: 33 08 c0 22 03           a1 = 0x322c0
123485: 95 88 00 00 01           a1 = a1 + 0x10000
123490: 01                       fallthrough
      :                          @9384
123491: 82 89                    a2 = u64 [a1]
123493: c9 98 0a                 a3 = a1 - a2
123496: ab 6a 0f                 jump @9388 if a3 != s1
      :                          @9385
123499: c9 79 0a                 a3 = a2 - a0
123502: 01                       fallthrough
      :                          @9386
123503: 82 8b                    a4 = u64 [a1]
123505: ab 9b f2                 jump @9384 if a4 != a2
      :                          @9387
123508: 7b 8a                    u64 [a1] = a3
123510: 01                       fallthrough
      :                          @9388
123511: 82 18 20 01              a1 = u64 [sp + 0x120]
123515: 52 08 07                 jump @9390 if a1 != 0
      :                          @9389
123518: 28 05 00 01              jump @12868
      :                          @9390
123522: 54 28 00 20 09           jump @9392 if a1 <=u 8192
      :                          @9391
123527: 28 fc ff 00              jump @12868
      :                          @9392
123531: 82 17 28 01              a0 = u64 [sp + 0x128]
123535: 97 88 03                 a1 = a1 << 0x3
123538: 33 09 c0 22 03           a2 = 0x322c0
123543: 95 99 00 00 01           a2 = a2 + 0x10000
123548: 01                       fallthrough
      :                          @9393
123549: 82 9a                    a3 = u64 [a2]
123551: c9 a9 0b                 a4 = a2 - a3
123554: aa 7b 07                 jump @9395 if a4 == a0
      :                          @9394
123557: 28 de ff 00              jump @12868
      :                          @9395
123561: c9 8a 0b                 a4 = a3 - a1
123564: 01                       fallthrough
      :                          @9396
123565: 82 9c                    a5 = u64 [a2]
123567: ab ac ee                 jump @9393 if a5 != a3
      :                          @9397
123570: 7b 9b                    u64 [a2] = a4
123572: 33 06                    s1 = 0
123574: 01                       fallthrough
      :                          @9398
123575: ab ac e6                 jump @9393 if a5 != a3
      :                          @9399
123578: 28 c9 ff 00              jump @12868
      :                          @9400 [@dyn 759]
123582: 33 0a 78 12 03           a3 = 0x31278
123587: 3a 07 78 12 03           a0 = u64 [0x31278]
123592: 97 78 0d                 a1 = a0 << 0xd
123595: d3 87 07                 a0 = a0 ^ a1
123598: 98 78 07                 a1 = a0 >> 0x7
123601: 3a 09 60 11 03           a2 = u64 [0x31160]
123606: 7b 19 70                 u64 [sp + 0x70] = a2
123609: d3 87 07                 a0 = a0 ^ a1
123612: 97 78 11                 a1 = a0 << 0x11
123615: d3 87 07                 a0 = a0 ^ a1
123618: ca 97 08                 a1 = a0 * a2
123621: 3e 07 78 12 03           u64 [0x31278] = a0
123626: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
123636: d6 78 07                 a0 = a1 mulhu a0
123639: 98 77 04                 a0 = a0 >> 0x4
123642: 33 09 14                 a2 = 0x14
123645: ca 97 07                 a0 = a0 * a2
123648: c9 78 08                 a1 = a1 - a0
123651: 95 86 01                 s1 = a1 + 0x1
123654: 95 17 20 01              a0 = sp + 0x120
123658: 64 68                    a1 = s1
123660: 50 20 f0 05 b1 92 fe     ra = 1520, jump @2172
      :                          @9401 [@dyn 760]
123667: 82 18 28 01              a1 = u64 [sp + 0x128]
123671: 82 19 30 01              a2 = u64 [sp + 0x130]
123675: 95 17 08 02              a0 = sp + 0x208
123679: 50 20 f2 05 3e 3a ff     ra = 1522, jump @5728
      :                          @9402 [@dyn 761]
123686: 3a 07 78 12 03           a0 = u64 [0x31278]
123691: 97 78 0d                 a1 = a0 << 0xd
123694: d3 87 07                 a0 = a0 ^ a1
123697: 98 78 07                 a1 = a0 >> 0x7
123700: d3 87 07                 a0 = a0 ^ a1
123703: 97 78 11                 a1 = a0 << 0x11
123706: d3 87 07                 a0 = a0 ^ a1
123709: 3e 07 78 12 03           u64 [0x31278] = a0
123714: 3a 08 78 12 03           a1 = u64 [0x31278]
123719: 82 1b 70                 a4 = u64 [sp + 0x70]
123722: ca b7 07                 a0 = a0 * a4
123725: cd 67 07                 a0 = a0 %u s1
123728: 97 89 0d                 a2 = a1 << 0xd
123731: d3 98 08                 a1 = a1 ^ a2
123734: 98 89 07                 a2 = a1 >> 0x7
123737: d3 98 08                 a1 = a1 ^ a2
123740: 97 89 11                 a2 = a1 << 0x11
123743: d3 98 08                 a1 = a1 ^ a2
123746: ca b8 09                 a2 = a1 * a4
123749: 3e 08 78 12 03           u64 [0x31278] = a1
123754: cd 69 09                 a2 = a2 %u s1
123757: e6 97 08                 a1 = minu(a0, a2)
123760: e4 97 09                 a2 = maxu(a0, a2)
123763: 7b 18 10 01              u64 [sp + 0x110] = a1
123767: 7b 19 b0 01              u64 [sp + 0x1b0] = a2
123771: 95 17 08 02              a0 = sp + 0x208
123775: 50 20 f4 05 f7 3a ff     ra = 1524, jump @5754
      :                          @9403 [@dyn 762]
123782: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
123786: 95 17 20 01              a0 = sp + 0x120
123790: 7b 17 90 02              u64 [sp + 0x290] = a0
123794: 33 07 34 02              a0 = 0x234
123798: 7b 17 98 02              u64 [sp + 0x298] = a0
123802: 95 17 10 01              a0 = sp + 0x110
123806: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
123810: 33 07 2c 0c              a0 = 0xc2c
123814: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
123818: 95 18 b0 01              a1 = sp + 0x1b0
123822: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
123826: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
123830: 95 18 c8 01              a1 = sp + 0x1c8
123834: 7b 18 c0 02              u64 [sp + 0x2c0] = a1
123838: 7b 17 c8 02              u64 [sp + 0x2c8] = a0
123842: 33 07 20 0e 01           a0 = 0x10e20
123847: 7b 17 38 02              u64 [sp + 0x238] = a0
123851: 49 21 40 02 04           u64 [sp + 576] = 0x4
123856: 49 21 58 02              u64 [sp + 600] = 0
123860: 95 18 90 02              a1 = sp + 0x290
123864: 7b 18 48 02              u64 [sp + 0x248] = a1
123868: 49 21 50 02 04           u64 [sp + 592] = 0x4
123873: 95 17 e0 01              a0 = sp + 0x1e0
123877: 95 18 38 02              a1 = sp + 0x238
123881: 50 20 f6 05 11 6c fe     ra = 1526, jump @1503
      :                          @9404 [@dyn 763]
123888: 82 16 e8 01              s1 = u64 [sp + 0x1e8]
123892: 82 1b f0 01              a4 = u64 [sp + 0x1f0]
123896: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
123900: 7b 17 70                 u64 [sp + 0x70] = a0
123903: 33 07 02                 a0 = 0x2
123906: 33 08                    a1 = 0
123908: 33 09                    a2 = 0
123910: 64 6a                    a3 = s1
123912: 33 00 f8 05              ra = 0x5f8
123916: 0a 64                    ecalli 100 // 'log'
123918: 01                       fallthrough
      :                          @9405 [@dyn 764]
123919: 82 1c 70                 a5 = u64 [sp + 0x70]
123922: 82 17 68                 a0 = u64 [sp + 0x68]
123925: c8 c7 07                 a0 = a0 + a5
123928: 53 37 00 00 ff 25        jump @9411 if a0 <u 4294901760
      :                          @9406
123934: 33 07 c0 22 03           a0 = 0x322c0
123939: 95 77 00 00 01           a0 = a0 + 0x10000
123944: 01                       fallthrough
      :                          @9407
123945: 82 78                    a1 = u64 [a0]
123947: c9 87 09                 a2 = a0 - a1
123950: ab 69 0f                 jump @9411 if a2 != s1
      :                          @9408
123953: c9 c8 09                 a2 = a1 - a5
123956: 01                       fallthrough
      :                          @9409
123957: 82 7a                    a3 = u64 [a0]
123959: ab 8a f2                 jump @9407 if a3 != a1
      :                          @9410
123962: 7b 79                    u64 [a0] = a2
123964: 01                       fallthrough
      :                          @9411
123965: 82 18 08 02              a1 = u64 [sp + 0x208]
123969: 51 08 30                 jump @9418 if a1 == 0
      :                          @9412
123972: 56 28 00 20 2d           jump @9418 if a1 >u 8192
      :                          @9413
123977: 82 17 10 02              a0 = u64 [sp + 0x210]
123981: 97 88 03                 a1 = a1 << 0x3
123984: 33 09 c0 22 03           a2 = 0x322c0
123989: 95 99 00 00 01           a2 = a2 + 0x10000
123994: 01                       fallthrough
      :                          @9414
123995: 82 9a                    a3 = u64 [a2]
123997: c9 a9 0b                 a4 = a2 - a3
124000: ab 7b 11                 jump @9418 if a4 != a0
      :                          @9415
124003: c9 8a 0b                 a4 = a3 - a1
124006: 01                       fallthrough
      :                          @9416
124007: 82 9c                    a5 = u64 [a2]
124009: ab ac f2                 jump @9414 if a5 != a3
      :                          @9417
124012: 7b 9b                    u64 [a2] = a4
124014: 33 06                    s1 = 0
124016: 01                       fallthrough
      :                          @9418
124017: 82 18 20 01              a1 = u64 [sp + 0x120]
124021: 52 08 07                 jump @9420 if a1 != 0
      :                          @9419
124024: 28 0b fe 00              jump @12868
      :                          @9420
124028: 54 28 00 20 09           jump @9422 if a1 <=u 8192
      :                          @9421
124033: 28 02 fe 00              jump @12868
      :                          @9422
124037: 82 17 28 01              a0 = u64 [sp + 0x128]
124041: 97 88 03                 a1 = a1 << 0x3
124044: 33 09 c0 22 03           a2 = 0x322c0
124049: 95 99 00 00 01           a2 = a2 + 0x10000
124054: 01                       fallthrough
      :                          @9423
124055: 82 9a                    a3 = u64 [a2]
124057: c9 a9 0b                 a4 = a2 - a3
124060: aa 7b 07                 jump @9425 if a4 == a0
      :                          @9424
124063: 28 e4 fd 00              jump @12868
      :                          @9425
124067: c9 8a 0b                 a4 = a3 - a1
124070: 01                       fallthrough
      :                          @9426
124071: 82 9c                    a5 = u64 [a2]
124073: ab ac ee                 jump @9423 if a5 != a3
      :                          @9427
124076: 7b 9b                    u64 [a2] = a4
124078: 33 06                    s1 = 0
124080: 01                       fallthrough
      :                          @9428
124081: ab ac e6                 jump @9423 if a5 != a3
      :                          @9429
124084: 28 cf fd 00              jump @12868
      :                          @9430 [@dyn 765]
124088: 3a 09 78 12 03           a2 = u64 [0x31278]
124093: 3a 07 60 11 03           a0 = u64 [0x31160]
124098: 97 9a 0d                 a3 = a2 << 0xd
124101: d3 a9 09                 a2 = a2 ^ a3
124104: 98 9a 07                 a3 = a2 >> 0x7
124107: d3 a9 09                 a2 = a2 ^ a3
124110: 97 9a 11                 a3 = a2 << 0x11
124113: d3 a9 09                 a2 = a2 ^ a3
124116: ca 79 0a                 a3 = a2 * a0
124119: 3a 0b 70 11 03           a4 = u64 [0x31170]
124124: 3e 09 78 12 03           u64 [0x31278] = a2
124129: 98 a9 01                 a2 = a3 >> 0x1
124132: d6 b9 09                 a2 = a2 mulhu a4
124135: 98 99 04                 a2 = a2 >> 0x4
124138: 33 0b 32                 a4 = 0x32
124141: ca b9 09                 a2 = a2 * a4
124144: c9 9a 0a                 a3 = a3 - a2
124147: 86 a9 01                 a2 = a3 | 0x1
124150: 95 99 02                 a2 = a2 + 0x2
124153: 7b 19 20 01              u64 [sp + 0x120] = a2
124157: 3a 09 78 12 03           a2 = u64 [0x31278]
124162: 97 9a 0d                 a3 = a2 << 0xd
124165: d3 a9 09                 a2 = a2 ^ a3
124168: 98 9a 07                 a3 = a2 >> 0x7
124171: d3 a9 09                 a2 = a2 ^ a3
124174: 97 9a 11                 a3 = a2 << 0x11
124177: d3 a9 09                 a2 = a2 ^ a3
124180: 3e 09 78 12 03           u64 [0x31278] = a2
124185: 82 18 20 01              a1 = u64 [sp + 0x120]
124189: 52 08 07                 jump @9432 if a1 != 0
      :                          @9431
124192: 28 77 0f 01              jump @13240
      :                          @9432
124196: ca 79 07                 a0 = a2 * a0
124199: cd 87 07                 a0 = a0 %u a1
124202: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
124206: 50 20 fc 05 a6 39 ff     ra = 1532, jump @5767
      :                          @9433 [@dyn 766]
124213: 78 17 c8 01              u8 [sp + 0x1c8] = a0
124217: 95 17 e0 01              a0 = sp + 0x1e0
124221: 7b 17 90 02              u64 [sp + 0x290] = a0
124225: 33 07 2c 0c              a0 = 0xc2c
124229: 7b 17 98 02              u64 [sp + 0x298] = a0
124233: 95 18 20 01              a1 = sp + 0x120
124237: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
124241: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
124245: 95 17 c8 01              a0 = sp + 0x1c8
124249: 7b 17 b0 02              u64 [sp + 0x2b0] = a0
124253: 33 07 84 0c              a0 = 0xc84
124257: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
124261: 33 07 78 0e 01           a0 = 0x10e78
124266: 7b 17 38 02              u64 [sp + 0x238] = a0
124270: 49 21 40 02 03           u64 [sp + 576] = 0x3
124275: 49 21 58 02              u64 [sp + 600] = 0
124279: 95 18 90 02              a1 = sp + 0x290
124283: 7b 18 48 02              u64 [sp + 0x248] = a1
124287: 49 21 50 02 03           u64 [sp + 592] = 0x3
124292: 95 17 08 02              a0 = sp + 0x208
124296: 95 18 38 02              a1 = sp + 0x238
124300: 50 20 fe 05 6e 6a fe     ra = 1534, jump @1503
      :                          @9434 [@dyn 767]
124307: 82 16 10 02              s1 = u64 [sp + 0x210]
124311: 82 1b 18 02              a4 = u64 [sp + 0x218]
124315: 82 17 08 02              a0 = u64 [sp + 0x208]
124319: 7b 17 70                 u64 [sp + 0x70] = a0
124322: 33 07 02                 a0 = 0x2
124325: 33 08                    a1 = 0
124327: 33 09                    a2 = 0
124329: 64 6a                    a3 = s1
124331: 33 00 00 06              ra = 0x600
124335: 0a 64                    ecalli 100 // 'log'
124337: 01                       fallthrough
      :                          @9435 [@dyn 768]
124338: 82 1c 70                 a5 = u64 [sp + 0x70]
124341: 82 17 68                 a0 = u64 [sp + 0x68]
124344: c8 c7 07                 a0 = a0 + a5
124347: 55 37 00 00 ff 0a        jump @9437 if a0 >=u 4294901760
      :                          @9436
124353: 28 c2 fc 00              jump @12868
      :                          @9437
124357: 33 07 c0 22 03           a0 = 0x322c0
124362: 95 77 00 00 01           a0 = a0 + 0x10000
124367: 01                       fallthrough
      :                          @9438
124368: 82 78                    a1 = u64 [a0]
124370: c9 87 09                 a2 = a0 - a1
124373: aa 69 07                 jump @9440 if a2 == s1
      :                          @9439
124376: 28 ab fc 00              jump @12868
      :                          @9440
124380: c9 c8 09                 a2 = a1 - a5
124383: 01                       fallthrough
      :                          @9441
124384: 82 7a                    a3 = u64 [a0]
124386: ab 8a ee                 jump @9438 if a3 != a1
      :                          @9442
124389: 7b 79                    u64 [a0] = a2
124391: 33 0b                    a4 = 0
124393: 01                       fallthrough
      :                          @9443
124394: ab 8a e6                 jump @9438 if a3 != a1
      :                          @9444
124397: 28 96 fc 00              jump @12868
      :                          @9445 [@dyn 769]
124401: 3a 08 78 12 03           a1 = u64 [0x31278]
124406: 97 89 0d                 a2 = a1 << 0xd
124409: d3 98 08                 a1 = a1 ^ a2
124412: 98 89 07                 a2 = a1 >> 0x7
124415: d3 98 08                 a1 = a1 ^ a2
124418: 97 89 11                 a2 = a1 << 0x11
124421: d3 98 08                 a1 = a1 ^ a2
124424: 3a 09 60 11 03           a2 = u64 [0x31160]
124429: 3a 0a 68 11 03           a3 = u64 [0x31168]
124434: 3e 08 78 12 03           u64 [0x31278] = a1
124439: ca 98 07                 a0 = a1 * a2
124442: 98 78 03                 a1 = a0 >> 0x3
124445: d6 a8 08                 a1 = a1 mulhu a3
124448: 98 88 04                 a1 = a1 >> 0x4
124451: 96 88 e8 03              a1 = a1 * 0x3e8
124455: c9 87 07                 a0 = a0 - a1
124458: 95 77 02                 a0 = a0 + 0x2
124461: 7b 17 20 01              u64 [sp + 0x120] = a0
124465: 33 00 04 06              ra = 0x604
124469: 95 11 40 ff              sp = sp + 0xffffffffffffff40
124473: 7b 10 b8 00              u64 [sp + 0xb8] = ra
124477: 7b 15 b0 00              u64 [sp + 0xb0] = s0
124481: 7b 16 a8 00              u64 [sp + 0xa8] = s1
124485: 64 78                    a1 = a0
124487: 95 17 50                 a0 = sp + 0x50
124490: 33 00 a8 03              ra = 0x3a8
124494: 28 9d 40 ff              jump @5889
      :                          @9446 [@dyn 770]
124498: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
124502: 95 17 20 01              a0 = sp + 0x120
124506: 7b 17 38 02              u64 [sp + 0x238] = a0
124510: 33 07 2c 0c              a0 = 0xc2c
124514: 7b 17 40 02              u64 [sp + 0x240] = a0
124518: 95 18 e0 01              a1 = sp + 0x1e0
124522: 7b 18 48 02              u64 [sp + 0x248] = a1
124526: 7b 17 50 02              u64 [sp + 0x250] = a0
124530: 33 07 b8 0e 01           a0 = 0x10eb8
124535: 7b 17 90 02              u64 [sp + 0x290] = a0
124539: 49 21 98 02 02           u64 [sp + 664] = 0x2
124544: 49 21 b0 02              u64 [sp + 688] = 0
124548: 95 18 38 02              a1 = sp + 0x238
124552: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
124556: 49 21 a8 02 02           u64 [sp + 680] = 0x2
124561: 95 17 08 02              a0 = sp + 0x208
124565: 95 18 90 02              a1 = sp + 0x290
124569: 50 20 06 06 61 69 fe     ra = 1542, jump @1503
      :                          @9447 [@dyn 771]
124576: 82 16 10 02              s1 = u64 [sp + 0x210]
124580: 82 1b 18 02              a4 = u64 [sp + 0x218]
124584: 82 17 08 02              a0 = u64 [sp + 0x208]
124588: 7b 17 70                 u64 [sp + 0x70] = a0
124591: 33 07 02                 a0 = 0x2
124594: 33 08                    a1 = 0
124596: 33 09                    a2 = 0
124598: 64 6a                    a3 = s1
124600: 33 00 08 06              ra = 0x608
124604: 0a 64                    ecalli 100 // 'log'
124606: 01                       fallthrough
      :                          @9448 [@dyn 772]
124607: 82 1c 70                 a5 = u64 [sp + 0x70]
124610: 82 17 68                 a0 = u64 [sp + 0x68]
124613: c8 c7 07                 a0 = a0 + a5
124616: 55 37 00 00 ff 0a        jump @9450 if a0 >=u 4294901760
      :                          @9449
124622: 28 b5 fb 00              jump @12868
      :                          @9450
124626: 33 07 c0 22 03           a0 = 0x322c0
124631: 95 77 00 00 01           a0 = a0 + 0x10000
124636: 01                       fallthrough
      :                          @9451
124637: 82 78                    a1 = u64 [a0]
124639: c9 87 09                 a2 = a0 - a1
124642: aa 69 07                 jump @9453 if a2 == s1
      :                          @9452
124645: 28 9e fb 00              jump @12868
      :                          @9453
124649: c9 c8 09                 a2 = a1 - a5
124652: 01                       fallthrough
      :                          @9454
124653: 82 7a                    a3 = u64 [a0]
124655: ab 8a ee                 jump @9451 if a3 != a1
      :                          @9455
124658: 7b 79                    u64 [a0] = a2
124660: 33 0b                    a4 = 0
124662: 01                       fallthrough
      :                          @9456
124663: ab 8a e6                 jump @9451 if a3 != a1
      :                          @9457
124666: 28 89 fb 00              jump @12868
      :                          @9458 [@dyn 773]
124670: 3a 09 78 12 03           a2 = u64 [0x31278]
124675: 3a 07 60 11 03           a0 = u64 [0x31160]
124680: 97 9a 0d                 a3 = a2 << 0xd
124683: d3 a9 09                 a2 = a2 ^ a3
124686: 98 9a 07                 a3 = a2 >> 0x7
124689: d3 a9 09                 a2 = a2 ^ a3
124692: 97 9a 11                 a3 = a2 << 0x11
124695: d3 a9 09                 a2 = a2 ^ a3
124698: ca 79 0a                 a3 = a2 * a0
124701: 3a 0b 68 11 03           a4 = u64 [0x31168]
124706: 3e 09 78 12 03           u64 [0x31278] = a2
124711: 98 a9 03                 a2 = a3 >> 0x3
124714: d6 b9 09                 a2 = a2 mulhu a4
124717: 98 99 04                 a2 = a2 >> 0x4
124720: 33 0b e8 03              a4 = 0x3e8
124724: ca b9 09                 a2 = a2 * a4
124727: c9 9a 0a                 a3 = a3 - a2
124730: 95 aa 02                 a3 = a3 + 0x2
124733: 7b 1a c8 01              u64 [sp + 0x1c8] = a3
124737: 3a 09 78 12 03           a2 = u64 [0x31278]
124742: 97 9a 0d                 a3 = a2 << 0xd
124745: d3 a9 09                 a2 = a2 ^ a3
124748: 98 9a 07                 a3 = a2 >> 0x7
124751: d3 a9 09                 a2 = a2 ^ a3
124754: 97 9a 11                 a3 = a2 << 0x11
124757: d3 a9 09                 a2 = a2 ^ a3
124760: 3e 09 78 12 03           u64 [0x31278] = a2
124765: 82 18 c8 01              a1 = u64 [sp + 0x1c8]
124769: 95 8a ff                 a3 = a1 + 0xffffffffffffffff
124772: 52 0a 07                 jump @9460 if a3 != 0
      :                          @9459
124775: 28 30 0d 01              jump @13240
      :                          @9460
124779: ca 79 07                 a0 = a2 * a0
124782: cd a7 07                 a0 = a0 %u a3
124785: 95 77 01                 a0 = a0 + 0x1
124788: 7b 17 20 01              u64 [sp + 0x120] = a0
124792: 50 20 0c 06 6d 3d ff     ra = 1548, jump @5845
      :                          @9461 [@dyn 774]
124799: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
124803: 7b 18 e8 01              u64 [sp + 0x1e8] = a1
124807: 95 17 20 01              a0 = sp + 0x120
124811: 7b 17 90 02              u64 [sp + 0x290] = a0
124815: 33 07 2c 0c              a0 = 0xc2c
124819: 7b 17 98 02              u64 [sp + 0x298] = a0
124823: 95 18 c8 01              a1 = sp + 0x1c8
124827: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
124831: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
124835: 95 17 e0 01              a0 = sp + 0x1e0
124839: 7b 17 b0 02              u64 [sp + 0x2b0] = a0
124843: 33 07 76 02              a0 = 0x276
124847: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
124851: 33 07 d8 0e 01           a0 = 0x10ed8
124856: 7b 17 38 02              u64 [sp + 0x238] = a0
124860: 49 21 40 02 03           u64 [sp + 576] = 0x3
124865: 49 21 58 02              u64 [sp + 600] = 0
124869: 95 18 90 02              a1 = sp + 0x290
124873: 7b 18 48 02              u64 [sp + 0x248] = a1
124877: 49 21 50 02 03           u64 [sp + 592] = 0x3
124882: 95 17 08 02              a0 = sp + 0x208
124886: 95 18 38 02              a1 = sp + 0x238
124890: 50 20 0e 06 20 68 fe     ra = 1550, jump @1503
      :                          @9462 [@dyn 775]
124897: 82 16 10 02              s1 = u64 [sp + 0x210]
124901: 82 1b 18 02              a4 = u64 [sp + 0x218]
124905: 82 17 08 02              a0 = u64 [sp + 0x208]
124909: 7b 17 70                 u64 [sp + 0x70] = a0
124912: 33 07 02                 a0 = 0x2
124915: 33 08                    a1 = 0
124917: 33 09                    a2 = 0
124919: 64 6a                    a3 = s1
124921: 33 00 10 06              ra = 0x610
124925: 0a 64                    ecalli 100 // 'log'
124927: 01                       fallthrough
      :                          @9463 [@dyn 776]
124928: 82 1c 70                 a5 = u64 [sp + 0x70]
124931: 82 17 68                 a0 = u64 [sp + 0x68]
124934: c8 c7 07                 a0 = a0 + a5
124937: 55 37 00 00 ff 0a        jump @9465 if a0 >=u 4294901760
      :                          @9464
124943: 28 74 fa 00              jump @12868
      :                          @9465
124947: 33 07 c0 22 03           a0 = 0x322c0
124952: 95 77 00 00 01           a0 = a0 + 0x10000
124957: 01                       fallthrough
      :                          @9466
124958: 82 78                    a1 = u64 [a0]
124960: c9 87 09                 a2 = a0 - a1
124963: aa 69 07                 jump @9468 if a2 == s1
      :                          @9467
124966: 28 5d fa 00              jump @12868
      :                          @9468
124970: c9 c8 09                 a2 = a1 - a5
124973: 01                       fallthrough
      :                          @9469
124974: 82 7a                    a3 = u64 [a0]
124976: ab 8a ee                 jump @9466 if a3 != a1
      :                          @9470
124979: 7b 79                    u64 [a0] = a2
124981: 33 0b                    a4 = 0
124983: 01                       fallthrough
      :                          @9471
124984: ab 8a e6                 jump @9466 if a3 != a1
      :                          @9472
124987: 28 48 fa 00              jump @12868
      :                          @9473 [@dyn 777]
124991: 3a 08 78 12 03           a1 = u64 [0x31278]
124996: 97 89 0d                 a2 = a1 << 0xd
124999: d3 98 08                 a1 = a1 ^ a2
125002: 98 89 07                 a2 = a1 >> 0x7
125005: d3 98 08                 a1 = a1 ^ a2
125008: 97 89 11                 a2 = a1 << 0x11
125011: d3 98 08                 a1 = a1 ^ a2
125014: 3a 09 60 11 03           a2 = u64 [0x31160]
125019: 3a 0a 70 11 03           a3 = u64 [0x31170]
125024: 3e 08 78 12 03           u64 [0x31278] = a1
125029: ca 98 07                 a0 = a1 * a2
125032: 98 78 01                 a1 = a0 >> 0x1
125035: d6 a8 08                 a1 = a1 mulhu a3
125038: 98 88 04                 a1 = a1 >> 0x4
125041: 96 88 32                 a1 = a1 * 0x32
125044: c9 87 07                 a0 = a0 - a1
125047: 86 77 01                 a0 = a0 | 0x1
125050: 95 77 02                 a0 = a0 + 0x2
125053: 7b 17 20 01              u64 [sp + 0x120] = a0
125057: 50 20 14 06 d3 a4 fe     ra = 1556, jump @2464
      :                          @9474 [@dyn 778]
125064: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
125068: 95 17 20 01              a0 = sp + 0x120
125072: 7b 17 38 02              u64 [sp + 0x238] = a0
125076: 33 07 2c 0c              a0 = 0xc2c
125080: 7b 17 40 02              u64 [sp + 0x240] = a0
125084: 95 17 e0 01              a0 = sp + 0x1e0
125088: 7b 17 48 02              u64 [sp + 0x248] = a0
125092: 33 07 7c                 a0 = 0x7c
125095: 7b 17 50 02              u64 [sp + 0x250] = a0
125099: 33 07 18 0f 01           a0 = 0x10f18
125104: 7b 17 90 02              u64 [sp + 0x290] = a0
125108: 49 21 98 02 02           u64 [sp + 664] = 0x2
125113: 49 21 b0 02              u64 [sp + 688] = 0
125117: 95 18 38 02              a1 = sp + 0x238
125121: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
125125: 49 21 a8 02 02           u64 [sp + 680] = 0x2
125130: 95 17 08 02              a0 = sp + 0x208
125134: 95 18 90 02              a1 = sp + 0x290
125138: 50 20 16 06 28 67 fe     ra = 1558, jump @1503
      :                          @9475 [@dyn 779]
125145: 82 16 10 02              s1 = u64 [sp + 0x210]
125149: 82 1b 18 02              a4 = u64 [sp + 0x218]
125153: 82 17 08 02              a0 = u64 [sp + 0x208]
125157: 7b 17 70                 u64 [sp + 0x70] = a0
125160: 33 07 02                 a0 = 0x2
125163: 33 08                    a1 = 0
125165: 33 09                    a2 = 0
125167: 64 6a                    a3 = s1
125169: 33 00 18 06              ra = 0x618
125173: 0a 64                    ecalli 100 // 'log'
125175: 01                       fallthrough
      :                          @9476 [@dyn 780]
125176: 82 1c 70                 a5 = u64 [sp + 0x70]
125179: 82 17 68                 a0 = u64 [sp + 0x68]
125182: c8 c7 07                 a0 = a0 + a5
125185: 55 37 00 00 ff 0a        jump @9478 if a0 >=u 4294901760
      :                          @9477
125191: 28 7c f9 00              jump @12868
      :                          @9478
125195: 33 07 c0 22 03           a0 = 0x322c0
125200: 95 77 00 00 01           a0 = a0 + 0x10000
125205: 01                       fallthrough
      :                          @9479
125206: 82 78                    a1 = u64 [a0]
125208: c9 87 09                 a2 = a0 - a1
125211: aa 69 07                 jump @9481 if a2 == s1
      :                          @9480
125214: 28 65 f9 00              jump @12868
      :                          @9481
125218: c9 c8 09                 a2 = a1 - a5
125221: 01                       fallthrough
      :                          @9482
125222: 82 7a                    a3 = u64 [a0]
125224: ab 8a ee                 jump @9479 if a3 != a1
      :                          @9483
125227: 7b 79                    u64 [a0] = a2
125229: 33 0b                    a4 = 0
125231: 01                       fallthrough
      :                          @9484
125232: ab 8a e6                 jump @9479 if a3 != a1
      :                          @9485
125235: 28 50 f9 00              jump @12868
      :                          @9486 [@dyn 781]
125239: 3a 08 78 12 03           a1 = u64 [0x31278]
125244: 97 89 0d                 a2 = a1 << 0xd
125247: d3 98 08                 a1 = a1 ^ a2
125250: 98 89 07                 a2 = a1 >> 0x7
125253: 3a 0a 60 11 03           a3 = u64 [0x31160]
125258: d3 98 08                 a1 = a1 ^ a2
125261: 97 89 11                 a2 = a1 << 0x11
125264: d3 98 08                 a1 = a1 ^ a2
125267: ca a8 09                 a2 = a1 * a3
125270: 3a 0a 70 11 03           a3 = u64 [0x31170]
125275: 3e 08 78 12 03           u64 [0x31278] = a1
125280: 98 97 01                 a0 = a2 >> 0x1
125283: d6 a7 07                 a0 = a0 mulhu a3
125286: 98 77 04                 a0 = a0 >> 0x4
125289: 96 77 32                 a0 = a0 * 0x32
125292: c9 79 09                 a2 = a2 - a0
125295: 86 97 01                 a0 = a2 | 0x1
125298: 95 78 02                 a1 = a0 + 0x2
125301: 7b 18 e0 01              u64 [sp + 0x1e0] = a1
125305: 9a 76                    s1 = -a0
125307: 33 0a 01                 a3 = 0x1
125310: 33 0b 02                 a4 = 0x2
125313: 33 0c 01                 a5 = 0x1
125316: 01                       fallthrough
      :                          @9487
125317: ca ac 0a                 a3 = a5 * a3
125320: 95 cc 01                 a5 = a5 + 0x1
125323: c8 c6 09                 a2 = s1 + a5
125326: cd 8a 0a                 a3 = a3 %u a1
125329: ab b9 f4                 jump @9487 if a2 != a4
      :                          @9488
125332: 95 77 01                 a0 = a0 + 0x1
125335: d3 a7 07                 a0 = a0 ^ a3
125338: 88 77 01                 a0 = a0 <u 0x1
125341: 78 17 20 01              u8 [sp + 0x120] = a0
125345: 95 17 e0 01              a0 = sp + 0x1e0
125349: 7b 17 38 02              u64 [sp + 0x238] = a0
125353: 33 07 2c 0c              a0 = 0xc2c
125357: 7b 17 40 02              u64 [sp + 0x240] = a0
125361: 95 17 20 01              a0 = sp + 0x120
125365: 7b 17 48 02              u64 [sp + 0x248] = a0
125369: 33 07 84 0c              a0 = 0xc84
125373: 7b 17 50 02              u64 [sp + 0x250] = a0
125377: 33 07 38 0f 01           a0 = 0x10f38
125382: 7b 17 90 02              u64 [sp + 0x290] = a0
125386: 49 21 98 02 02           u64 [sp + 664] = 0x2
125391: 49 21 b0 02              u64 [sp + 688] = 0
125395: 95 18 38 02              a1 = sp + 0x238
125399: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
125403: 49 21 a8 02 02           u64 [sp + 680] = 0x2
125408: 95 17 08 02              a0 = sp + 0x208
125412: 95 18 90 02              a1 = sp + 0x290
125416: 50 20 1c 06 12 66 fe     ra = 1564, jump @1503
      :                          @9489 [@dyn 782]
125423: 82 16 10 02              s1 = u64 [sp + 0x210]
125427: 82 1b 18 02              a4 = u64 [sp + 0x218]
125431: 82 17 08 02              a0 = u64 [sp + 0x208]
125435: 7b 17 70                 u64 [sp + 0x70] = a0
125438: 33 07 02                 a0 = 0x2
125441: 33 08                    a1 = 0
125443: 33 09                    a2 = 0
125445: 64 6a                    a3 = s1
125447: 33 00 1e 06              ra = 0x61e
125451: 0a 64                    ecalli 100 // 'log'
125453: 01                       fallthrough
      :                          @9490 [@dyn 783]
125454: 82 1c 70                 a5 = u64 [sp + 0x70]
125457: 82 17 68                 a0 = u64 [sp + 0x68]
125460: c8 c7 07                 a0 = a0 + a5
125463: 55 37 00 00 ff 0a        jump @9492 if a0 >=u 4294901760
      :                          @9491
125469: 28 66 f8 00              jump @12868
      :                          @9492
125473: 33 07 c0 22 03           a0 = 0x322c0
125478: 95 77 00 00 01           a0 = a0 + 0x10000
125483: 01                       fallthrough
      :                          @9493
125484: 82 78                    a1 = u64 [a0]
125486: c9 87 09                 a2 = a0 - a1
125489: aa 69 07                 jump @9495 if a2 == s1
      :                          @9494
125492: 28 4f f8 00              jump @12868
      :                          @9495
125496: c9 c8 09                 a2 = a1 - a5
125499: 01                       fallthrough
      :                          @9496
125500: 82 7a                    a3 = u64 [a0]
125502: ab 8a ee                 jump @9493 if a3 != a1
      :                          @9497
125505: 7b 79                    u64 [a0] = a2
125507: 33 0b                    a4 = 0
125509: 01                       fallthrough
      :                          @9498
125510: ab 8a e6                 jump @9493 if a3 != a1
      :                          @9499
125513: 28 3a f8 00              jump @12868
      :                          @9500 [@dyn 784]
125517: 3a 08 78 12 03           a1 = u64 [0x31278]
125522: 97 89 0d                 a2 = a1 << 0xd
125525: d3 98 08                 a1 = a1 ^ a2
125528: 98 89 07                 a2 = a1 >> 0x7
125531: d3 98 08                 a1 = a1 ^ a2
125534: 97 89 11                 a2 = a1 << 0x11
125537: d3 98 08                 a1 = a1 ^ a2
125540: 3a 09 60 11 03           a2 = u64 [0x31160]
125545: 3a 0a 68 11 03           a3 = u64 [0x31168]
125550: 3e 08 78 12 03           u64 [0x31278] = a1
125555: ca 98 07                 a0 = a1 * a2
125558: 98 78 03                 a1 = a0 >> 0x3
125561: d6 a8 08                 a1 = a1 mulhu a3
125564: 98 88 04                 a1 = a1 >> 0x4
125567: 96 88 e8 03              a1 = a1 * 0x3e8
125571: c9 87 07                 a0 = a0 - a1
125574: 95 77 03                 a0 = a0 + 0x3
125577: 86 77 01                 a0 = a0 | 0x1
125580: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
125584: 50 20 22 06 ac 3a ff     ra = 1570, jump @5857
      :                          @9501 [@dyn 785]
125591: 78 17 20 01              u8 [sp + 0x120] = a0
125595: 95 17 e0 01              a0 = sp + 0x1e0
125599: 7b 17 38 02              u64 [sp + 0x238] = a0
125603: 33 07 2c 0c              a0 = 0xc2c
125607: 7b 17 40 02              u64 [sp + 0x240] = a0
125611: 95 17 20 01              a0 = sp + 0x120
125615: 7b 17 48 02              u64 [sp + 0x248] = a0
125619: 33 07 84 0c              a0 = 0xc84
125623: 7b 17 50 02              u64 [sp + 0x250] = a0
125627: 33 07 70 0f 01           a0 = 0x10f70
125632: 7b 17 90 02              u64 [sp + 0x290] = a0
125636: 49 21 98 02 02           u64 [sp + 664] = 0x2
125641: 49 21 b0 02              u64 [sp + 688] = 0
125645: 95 18 38 02              a1 = sp + 0x238
125649: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
125653: 49 21 a8 02 02           u64 [sp + 680] = 0x2
125658: 95 17 08 02              a0 = sp + 0x208
125662: 95 18 90 02              a1 = sp + 0x290
125666: 50 20 24 06 18 65 fe     ra = 1572, jump @1503
      :                          @9502 [@dyn 786]
125673: 82 16 10 02              s1 = u64 [sp + 0x210]
125677: 82 1b 18 02              a4 = u64 [sp + 0x218]
125681: 82 17 08 02              a0 = u64 [sp + 0x208]
125685: 7b 17 70                 u64 [sp + 0x70] = a0
125688: 33 07 02                 a0 = 0x2
125691: 33 08                    a1 = 0
125693: 33 09                    a2 = 0
125695: 64 6a                    a3 = s1
125697: 33 00 26 06              ra = 0x626
125701: 0a 64                    ecalli 100 // 'log'
125703: 01                       fallthrough
      :                          @9503 [@dyn 787]
125704: 82 1c 70                 a5 = u64 [sp + 0x70]
125707: 82 17 68                 a0 = u64 [sp + 0x68]
125710: c8 c7 07                 a0 = a0 + a5
125713: 55 37 00 00 ff 0a        jump @9505 if a0 >=u 4294901760
      :                          @9504
125719: 28 6c f7 00              jump @12868
      :                          @9505
125723: 33 07 c0 22 03           a0 = 0x322c0
125728: 95 77 00 00 01           a0 = a0 + 0x10000
125733: 01                       fallthrough
      :                          @9506
125734: 82 78                    a1 = u64 [a0]
125736: c9 87 09                 a2 = a0 - a1
125739: aa 69 07                 jump @9508 if a2 == s1
      :                          @9507
125742: 28 55 f7 00              jump @12868
      :                          @9508
125746: c9 c8 09                 a2 = a1 - a5
125749: 01                       fallthrough
      :                          @9509
125750: 82 7a                    a3 = u64 [a0]
125752: ab 8a ee                 jump @9506 if a3 != a1
      :                          @9510
125755: 7b 79                    u64 [a0] = a2
125757: 33 0b                    a4 = 0
125759: 01                       fallthrough
      :                          @9511
125760: ab 8a e6                 jump @9506 if a3 != a1
      :                          @9512
125763: 28 40 f7 00              jump @12868
      :                          @9513 [@dyn 788]
125767: 3a 08 78 12 03           a1 = u64 [0x31278]
125772: 97 89 0d                 a2 = a1 << 0xd
125775: d3 98 08                 a1 = a1 ^ a2
125778: 98 89 07                 a2 = a1 >> 0x7
125781: d3 98 08                 a1 = a1 ^ a2
125784: 97 89 11                 a2 = a1 << 0x11
125787: d3 98 08                 a1 = a1 ^ a2
125790: 3a 09 60 11 03           a2 = u64 [0x31160]
125795: 3a 0a 68 11 03           a3 = u64 [0x31168]
125800: 3e 08 78 12 03           u64 [0x31278] = a1
125805: ca 98 07                 a0 = a1 * a2
125808: 98 78 02                 a1 = a0 >> 0x2
125811: d6 a8 08                 a1 = a1 mulhu a3
125814: 98 88 04                 a1 = a1 >> 0x4
125817: 96 88 f4 01              a1 = a1 * 0x1f4
125821: c9 87 07                 a0 = a0 - a1
125824: 97 77 01                 a0 = a0 << 0x1
125827: 95 78 09                 a1 = a0 + 0x9
125830: 7b 18 20 01              u64 [sp + 0x120] = a1
125834: 95 17 08 02              a0 = sp + 0x208
125838: 95 16 08 02              s1 = sp + 0x208
125842: 33 00 2a 06              ra = 0x62a
125846: 95 11 f0                 sp = sp + 0xfffffffffffffff0
125849: 7b 15 08                 u64 [sp + 0x8] = s0
125852: 33 0a                    a3 = 0
125854: 33 03 ff                 t1 = 0xffffffffffffffff
125857: 64 82                    t0 = a1
125859: 28 c5 3a ff              jump @5879
      :                          @9514 [@dyn 789]
125863: 95 17 20 01              a0 = sp + 0x120
125867: 7b 17 38 02              u64 [sp + 0x238] = a0
125871: 33 07 2c 0c              a0 = 0xc2c
125875: 7b 17 40 02              u64 [sp + 0x240] = a0
125879: 7b 16 48 02              u64 [sp + 0x248] = s1
125883: 33 07 58 02              a0 = 0x258
125887: 7b 17 50 02              u64 [sp + 0x250] = a0
125891: 33 07 a0 0f 01           a0 = 0x10fa0
125896: 7b 17 90 02              u64 [sp + 0x290] = a0
125900: 49 21 98 02 02           u64 [sp + 664] = 0x2
125905: 49 21 b0 02              u64 [sp + 688] = 0
125909: 95 18 38 02              a1 = sp + 0x238
125913: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
125917: 49 21 a8 02 02           u64 [sp + 680] = 0x2
125922: 95 17 e0 01              a0 = sp + 0x1e0
125926: 95 18 90 02              a1 = sp + 0x290
125930: 50 20 2c 06 10 64 fe     ra = 1580, jump @1503
      :                          @9515 [@dyn 790]
125937: 82 16 e8 01              s1 = u64 [sp + 0x1e8]
125941: 82 1b f0 01              a4 = u64 [sp + 0x1f0]
125945: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
125949: 7b 17 70                 u64 [sp + 0x70] = a0
125952: 33 07 02                 a0 = 0x2
125955: 33 08                    a1 = 0
125957: 33 09                    a2 = 0
125959: 64 6a                    a3 = s1
125961: 33 00 2e 06              ra = 0x62e
125965: 0a 64                    ecalli 100 // 'log'
125967: 01                       fallthrough
      :                          @9516 [@dyn 791]
125968: 82 1c 70                 a5 = u64 [sp + 0x70]
125971: 82 17 68                 a0 = u64 [sp + 0x68]
125974: c8 c7 07                 a0 = a0 + a5
125977: 55 37 00 00 ff 0a        jump @9518 if a0 >=u 4294901760
      :                          @9517
125983: 28 64 f6 00              jump @12868
      :                          @9518
125987: 33 07 c0 22 03           a0 = 0x322c0
125992: 95 77 00 00 01           a0 = a0 + 0x10000
125997: 01                       fallthrough
      :                          @9519
125998: 82 78                    a1 = u64 [a0]
126000: c9 87 09                 a2 = a0 - a1
126003: aa 69 07                 jump @9521 if a2 == s1
      :                          @9520
126006: 28 4d f6 00              jump @12868
      :                          @9521
126010: c9 c8 09                 a2 = a1 - a5
126013: 01                       fallthrough
      :                          @9522
126014: 82 7a                    a3 = u64 [a0]
126016: ab 8a ee                 jump @9519 if a3 != a1
      :                          @9523
126019: 7b 79                    u64 [a0] = a2
126021: 33 0b                    a4 = 0
126023: 01                       fallthrough
      :                          @9524
126024: ab 8a e6                 jump @9519 if a3 != a1
      :                          @9525
126027: 28 38 f6 00              jump @12868
      :                          @9526 [@dyn 792]
126031: 3a 08 78 12 03           a1 = u64 [0x31278]
126036: 97 89 0d                 a2 = a1 << 0xd
126039: d3 98 08                 a1 = a1 ^ a2
126042: 98 89 07                 a2 = a1 >> 0x7
126045: d3 98 08                 a1 = a1 ^ a2
126048: 97 89 11                 a2 = a1 << 0x11
126051: d3 98 08                 a1 = a1 ^ a2
126054: 3a 09 60 11 03           a2 = u64 [0x31160]
126059: 3a 0a 68 11 03           a3 = u64 [0x31168]
126064: 3e 08 78 12 03           u64 [0x31278] = a1
126069: ca 98 07                 a0 = a1 * a2
126072: 98 78 03                 a1 = a0 >> 0x3
126075: d6 a8 08                 a1 = a1 mulhu a3
126078: 98 88 04                 a1 = a1 >> 0x4
126081: 96 88 e8 03              a1 = a1 * 0x3e8
126085: c9 87 07                 a0 = a0 - a1
126088: 95 78 02                 a1 = a0 + 0x2
126091: 7b 18 20 01              u64 [sp + 0x120] = a1
126095: 95 17 08 02              a0 = sp + 0x208
126099: 95 16 08 02              s1 = sp + 0x208
126103: 50 20 32 06 54 3a ff     ra = 1586, jump @5889
      :                          @9527 [@dyn 793]
126110: 95 17 20 01              a0 = sp + 0x120
126114: 7b 17 38 02              u64 [sp + 0x238] = a0
126118: 33 07 2c 0c              a0 = 0xc2c
126122: 7b 17 40 02              u64 [sp + 0x240] = a0
126126: 7b 16 48 02              u64 [sp + 0x248] = s1
126130: 33 07 34 02              a0 = 0x234
126134: 7b 17 50 02              u64 [sp + 0x250] = a0
126138: 33 07 d8 0f 01           a0 = 0x10fd8
126143: 7b 17 90 02              u64 [sp + 0x290] = a0
126147: 49 21 98 02 02           u64 [sp + 664] = 0x2
126152: 49 21 b0 02              u64 [sp + 688] = 0
126156: 95 18 38 02              a1 = sp + 0x238
126160: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
126164: 49 21 a8 02 02           u64 [sp + 680] = 0x2
126169: 95 17 e0 01              a0 = sp + 0x1e0
126173: 95 18 90 02              a1 = sp + 0x290
126177: 50 20 34 06 19 63 fe     ra = 1588, jump @1503
      :                          @9528 [@dyn 794]
126184: 82 18 08 02              a1 = u64 [sp + 0x208]
126188: 51 08 2e                 jump @9535 if a1 == 0
      :                          @9529
126191: 56 28 00 20 2b           jump @9535 if a1 >u 8192
      :                          @9530
126196: 82 17 10 02              a0 = u64 [sp + 0x210]
126200: 97 88 03                 a1 = a1 << 0x3
126203: 33 09 c0 22 03           a2 = 0x322c0
126208: 95 99 00 00 01           a2 = a2 + 0x10000
126213: 01                       fallthrough
      :                          @9531
126214: 82 9a                    a3 = u64 [a2]
126216: c9 a9 0b                 a4 = a2 - a3
126219: ab 7b 0f                 jump @9535 if a4 != a0
      :                          @9532
126222: c9 8a 0b                 a4 = a3 - a1
126225: 01                       fallthrough
      :                          @9533
126226: 82 9c                    a5 = u64 [a2]
126228: ab ac f2                 jump @9531 if a5 != a3
      :                          @9534
126231: 7b 9b                    u64 [a2] = a4
126233: 01                       fallthrough
      :                          @9535
126234: 82 16 e8 01              s1 = u64 [sp + 0x1e8]
126238: 82 1b f0 01              a4 = u64 [sp + 0x1f0]
126242: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
126246: 7b 17 70                 u64 [sp + 0x70] = a0
126249: 33 07 02                 a0 = 0x2
126252: 33 08                    a1 = 0
126254: 33 09                    a2 = 0
126256: 64 6a                    a3 = s1
126258: 33 00 36 06              ra = 0x636
126262: 0a 64                    ecalli 100 // 'log'
126264: 01                       fallthrough
      :                          @9536 [@dyn 795]
126265: 82 1c 70                 a5 = u64 [sp + 0x70]
126268: 82 17 68                 a0 = u64 [sp + 0x68]
126271: c8 c7 07                 a0 = a0 + a5
126274: 55 37 00 00 ff 0a        jump @9538 if a0 >=u 4294901760
      :                          @9537
126280: 28 3b f5 00              jump @12868
      :                          @9538
126284: 33 07 c0 22 03           a0 = 0x322c0
126289: 95 77 00 00 01           a0 = a0 + 0x10000
126294: 01                       fallthrough
      :                          @9539
126295: 82 78                    a1 = u64 [a0]
126297: c9 87 09                 a2 = a0 - a1
126300: aa 69 07                 jump @9541 if a2 == s1
      :                          @9540
126303: 28 24 f5 00              jump @12868
      :                          @9541
126307: c9 c8 09                 a2 = a1 - a5
126310: 01                       fallthrough
      :                          @9542
126311: 82 7a                    a3 = u64 [a0]
126313: ab 8a ee                 jump @9539 if a3 != a1
      :                          @9543
126316: 7b 79                    u64 [a0] = a2
126318: 33 0b                    a4 = 0
126320: 01                       fallthrough
      :                          @9544
126321: ab 8a e6                 jump @9539 if a3 != a1
      :                          @9545
126324: 28 0f f5 00              jump @12868
      :                          @9546 [@dyn 796]
126328: 3a 08 78 12 03           a1 = u64 [0x31278]
126333: 97 89 0d                 a2 = a1 << 0xd
126336: d3 98 08                 a1 = a1 ^ a2
126339: 98 89 07                 a2 = a1 >> 0x7
126342: d3 98 08                 a1 = a1 ^ a2
126345: 97 89 11                 a2 = a1 << 0x11
126348: d3 98 08                 a1 = a1 ^ a2
126351: 3a 09 60 11 03           a2 = u64 [0x31160]
126356: 3a 0a 68 11 03           a3 = u64 [0x31168]
126361: 3e 08 78 12 03           u64 [0x31278] = a1
126366: ca 98 07                 a0 = a1 * a2
126369: 98 78 03                 a1 = a0 >> 0x3
126372: d6 a8 08                 a1 = a1 mulhu a3
126375: 98 88 04                 a1 = a1 >> 0x4
126378: 96 88 e8 03              a1 = a1 * 0x3e8
126382: c9 87 07                 a0 = a0 - a1
126385: 95 77 03                 a0 = a0 + 0x3
126388: 86 77 01                 a0 = a0 | 0x1
126391: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
126395: 33 00 3a 06              ra = 0x63a
126399: 95 11 a0                 sp = sp + 0xffffffffffffffa0
126402: 7b 10 58                 u64 [sp + 0x58] = ra
126405: 7b 15 50                 u64 [sp + 0x50] = s0
126408: 7b 16 48                 u64 [sp + 0x48] = s1
126411: 7b 17 18                 u64 [sp + 0x18] = a0
126414: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
126417: 95 17 30                 a0 = sp + 0x30
126420: 7b 18 28                 u64 [sp + 0x28] = a1
126423: 33 00 bc 03              ra = 0x3bc
126427: 28 10 39 ff              jump @5889
      :                          @9547 [@dyn 797]
126431: 78 17 20 01              u8 [sp + 0x120] = a0
126435: 95 17 e0 01              a0 = sp + 0x1e0
126439: 7b 17 38 02              u64 [sp + 0x238] = a0
126443: 33 07 2c 0c              a0 = 0xc2c
126447: 7b 17 40 02              u64 [sp + 0x240] = a0
126451: 95 17 20 01              a0 = sp + 0x120
126455: 7b 17 48 02              u64 [sp + 0x248] = a0
126459: 33 07 84 0c              a0 = 0xc84
126463: 7b 17 50 02              u64 [sp + 0x250] = a0
126467: 33 07 08 10 01           a0 = 0x11008
126472: 7b 17 90 02              u64 [sp + 0x290] = a0
126476: 49 21 98 02 02           u64 [sp + 664] = 0x2
126481: 49 21 b0 02              u64 [sp + 688] = 0
126485: 95 18 38 02              a1 = sp + 0x238
126489: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
126493: 49 21 a8 02 02           u64 [sp + 680] = 0x2
126498: 95 17 08 02              a0 = sp + 0x208
126502: 95 18 90 02              a1 = sp + 0x290
126506: 50 20 3c 06 d0 61 fe     ra = 1596, jump @1503
      :                          @9548 [@dyn 798]
126513: 82 16 10 02              s1 = u64 [sp + 0x210]
126517: 82 1b 18 02              a4 = u64 [sp + 0x218]
126521: 82 17 08 02              a0 = u64 [sp + 0x208]
126525: 7b 17 70                 u64 [sp + 0x70] = a0
126528: 33 07 02                 a0 = 0x2
126531: 33 08                    a1 = 0
126533: 33 09                    a2 = 0
126535: 64 6a                    a3 = s1
126537: 33 00 3e 06              ra = 0x63e
126541: 0a 64                    ecalli 100 // 'log'
126543: 01                       fallthrough
      :                          @9549 [@dyn 799]
126544: 82 1c 70                 a5 = u64 [sp + 0x70]
126547: 82 17 68                 a0 = u64 [sp + 0x68]
126550: c8 c7 07                 a0 = a0 + a5
126553: 55 37 00 00 ff 0a        jump @9551 if a0 >=u 4294901760
      :                          @9550
126559: 28 24 f4 00              jump @12868
      :                          @9551
126563: 33 07 c0 22 03           a0 = 0x322c0
126568: 95 77 00 00 01           a0 = a0 + 0x10000
126573: 01                       fallthrough
      :                          @9552
126574: 82 78                    a1 = u64 [a0]
126576: c9 87 09                 a2 = a0 - a1
126579: aa 69 07                 jump @9554 if a2 == s1
      :                          @9553
126582: 28 0d f4 00              jump @12868
      :                          @9554
126586: c9 c8 09                 a2 = a1 - a5
126589: 01                       fallthrough
      :                          @9555
126590: 82 7a                    a3 = u64 [a0]
126592: ab 8a ee                 jump @9552 if a3 != a1
      :                          @9556
126595: 7b 79                    u64 [a0] = a2
126597: 33 0b                    a4 = 0
126599: 01                       fallthrough
      :                          @9557
126600: ab 8a e6                 jump @9552 if a3 != a1
      :                          @9558
126603: 28 f8 f3 00              jump @12868
      :                          @9559 [@dyn 800]
126607: 33 00 42 06              ra = 0x642
126611: 95 11 f0                 sp = sp + 0xfffffffffffffff0
126614: 7b 15 08                 u64 [sp + 0x8] = s0
126617: 3a 07 78 12 03           a0 = u64 [0x31278]
126622: 97 79 0d                 a2 = a0 << 0xd
126625: d3 97 07                 a0 = a0 ^ a2
126628: 98 79 07                 a2 = a0 >> 0x7
126631: d3 97 07                 a0 = a0 ^ a2
126634: 97 79 11                 a2 = a0 << 0x11
126637: d3 79 02                 t0 = a2 ^ a0
126640: 3e 02 78 12 03           u64 [0x31278] = t0
126645: 3a 07 78 12 03           a0 = u64 [0x31278]
126650: 3a 03 e8 10 03           t1 = u64 [0x310e8]
126655: 97 7a 0d                 a3 = a0 << 0xd
126658: d3 a7 07                 a0 = a0 ^ a3
126661: 98 7a 07                 a3 = a0 >> 0x7
126664: d3 a7 07                 a0 = a0 ^ a3
126667: 97 7a 11                 a3 = a0 << 0x11
126670: d3 a7 07                 a0 = a0 ^ a3
126673: 3a 0a f0 10 03           a3 = u64 [0x310f0]
126678: ca 37 0b                 a4 = a0 * t1
126681: 3e 07 78 12 03           u64 [0x31278] = a0
126686: d6 ab 07                 a0 = a4 mulhu a3
126689: c9 7b 08                 a1 = a4 - a0
126692: 98 88 01                 a1 = a1 >> 0x1
126695: c8 87 07                 a0 = a0 + a1
126698: 98 77 04                 a0 = a0 >> 0x4
126701: 33 08 15                 a1 = 0x15
126704: ca 87 07                 a0 = a0 * a1
126707: c9 7b 0a                 a3 = a4 - a0
126710: 95 aa 01                 a3 = a3 + 0x1
126713: 3a 0b f8 10 03           a4 = u64 [0x310f8]
126718: 33 05 01                 s0 = 0x1
126721: 33 0c 05                 a5 = 0x5
126724: 33 04 17                 t2 = 0x17
126727: 28 a7 3b ff              jump @5984
      :                          @9560 [@dyn 801]
126731: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
126735: 95 17 e0 01              a0 = sp + 0x1e0
126739: 7b 17 08 02              u64 [sp + 0x208] = a0
126743: 33 07 2c 0c              a0 = 0xc2c
126747: 7b 17 10 02              u64 [sp + 0x210] = a0
126751: 33 07 f8 2f 01           a0 = 0x12ff8
126756: 7b 17 90 02              u64 [sp + 0x290] = a0
126760: 49 21 98 02 01           u64 [sp + 664] = 0x1
126765: 49 21 b0 02              u64 [sp + 688] = 0
126769: 95 18 08 02              a1 = sp + 0x208
126773: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
126777: 49 21 a8 02 01           u64 [sp + 680] = 0x1
126782: 95 17 38 02              a0 = sp + 0x238
126786: 95 18 90 02              a1 = sp + 0x290
126790: 50 20 44 06 b4 60 fe     ra = 1604, jump @1503
      :                          @9561 [@dyn 802]
126797: 82 16 40 02              s1 = u64 [sp + 0x240]
126801: 82 1b 48 02              a4 = u64 [sp + 0x248]
126805: 82 17 38 02              a0 = u64 [sp + 0x238]
126809: 7b 17 70                 u64 [sp + 0x70] = a0
126812: 33 07 02                 a0 = 0x2
126815: 33 08                    a1 = 0
126817: 33 09                    a2 = 0
126819: 64 6a                    a3 = s1
126821: 33 00 46 06              ra = 0x646
126825: 0a 64                    ecalli 100 // 'log'
126827: 01                       fallthrough
      :                          @9562 [@dyn 803]
126828: 82 1c 70                 a5 = u64 [sp + 0x70]
126831: 82 17 68                 a0 = u64 [sp + 0x68]
126834: c8 c7 07                 a0 = a0 + a5
126837: 55 37 00 00 ff 0a        jump @9564 if a0 >=u 4294901760
      :                          @9563
126843: 28 08 f3 00              jump @12868
      :                          @9564
126847: 33 07 c0 22 03           a0 = 0x322c0
126852: 95 77 00 00 01           a0 = a0 + 0x10000
126857: 01                       fallthrough
      :                          @9565
126858: 82 78                    a1 = u64 [a0]
126860: c9 87 09                 a2 = a0 - a1
126863: aa 69 07                 jump @9567 if a2 == s1
      :                          @9566
126866: 28 f1 f2 00              jump @12868
      :                          @9567
126870: c9 c8 09                 a2 = a1 - a5
126873: 01                       fallthrough
      :                          @9568
126874: 82 7a                    a3 = u64 [a0]
126876: ab 8a ee                 jump @9565 if a3 != a1
      :                          @9569
126879: 7b 79                    u64 [a0] = a2
126881: 33 0b                    a4 = 0
126883: 01                       fallthrough
      :                          @9570
126884: ab 8a e6                 jump @9565 if a3 != a1
      :                          @9571
126887: 28 dc f2 00              jump @12868
      :                          @9572 [@dyn 804]
126891: 3a 08 78 12 03           a1 = u64 [0x31278]
126896: 97 89 0d                 a2 = a1 << 0xd
126899: d3 98 08                 a1 = a1 ^ a2
126902: 98 89 07                 a2 = a1 >> 0x7
126905: d3 98 08                 a1 = a1 ^ a2
126908: 97 89 11                 a2 = a1 << 0x11
126911: d3 98 08                 a1 = a1 ^ a2
126914: 3a 09 60 11 03           a2 = u64 [0x31160]
126919: 3a 0a 68 11 03           a3 = u64 [0x31168]
126924: 3e 08 78 12 03           u64 [0x31278] = a1
126929: ca 98 07                 a0 = a1 * a2
126932: 98 78 03                 a1 = a0 >> 0x3
126935: d6 a8 08                 a1 = a1 mulhu a3
126938: 98 88 04                 a1 = a1 >> 0x4
126941: 96 88 e8 03              a1 = a1 * 0x3e8
126945: c9 87 08                 a1 = a0 - a1
126948: 7b 18 20 01              u64 [sp + 0x120] = a1
126952: 95 17 e0 01              a0 = sp + 0x1e0
126956: 95 16 e0 01              s1 = sp + 0x1e0
126960: 33 00 4a 06              ra = 0x64a
126964: 95 11 b8                 sp = sp + 0xffffffffffffffb8
126967: 7b 10 40                 u64 [sp + 0x40] = ra
126970: 7b 15 38                 u64 [sp + 0x38] = s0
126973: 7b 16 30                 u64 [sp + 0x30] = s1
126976: 64 74                    t2 = a0
126978: 33 07 c0 22 03           a0 = 0x322c0
126983: 33 03 c0 22 03           t1 = 0x322c0
126988: 33 02 00 00 01           t0 = 0x10000
126993: c8 23 0a                 a3 = t1 + t0
126996: 28 42 3b ff              jump @5991
      :                          @9573 [@dyn 805]
127000: 95 17 20 01              a0 = sp + 0x120
127004: 7b 17 38 02              u64 [sp + 0x238] = a0
127008: 33 07 2c 0c              a0 = 0xc2c
127012: 7b 17 40 02              u64 [sp + 0x240] = a0
127016: 7b 16 48 02              u64 [sp + 0x248] = s1
127020: 33 07 0c 02              a0 = 0x20c
127024: 7b 17 50 02              u64 [sp + 0x250] = a0
127028: 33 07 30 10 01           a0 = 0x11030
127033: 7b 17 90 02              u64 [sp + 0x290] = a0
127037: 49 21 98 02 02           u64 [sp + 664] = 0x2
127042: 49 21 b0 02              u64 [sp + 688] = 0
127046: 95 18 38 02              a1 = sp + 0x238
127050: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
127054: 49 21 a8 02 02           u64 [sp + 680] = 0x2
127059: 95 17 08 02              a0 = sp + 0x208
127063: 95 18 90 02              a1 = sp + 0x290
127067: 50 20 4c 06 9f 5f fe     ra = 1612, jump @1503
      :                          @9574 [@dyn 806]
127074: 82 16 10 02              s1 = u64 [sp + 0x210]
127078: 82 1b 18 02              a4 = u64 [sp + 0x218]
127082: 82 17 08 02              a0 = u64 [sp + 0x208]
127086: 7b 17 70                 u64 [sp + 0x70] = a0
127089: 33 07 02                 a0 = 0x2
127092: 33 08                    a1 = 0
127094: 33 09                    a2 = 0
127096: 64 6a                    a3 = s1
127098: 33 00 4e 06              ra = 0x64e
127102: 0a 64                    ecalli 100 // 'log'
127104: 01                       fallthrough
      :                          @9575 [@dyn 807]
127105: 82 1c 70                 a5 = u64 [sp + 0x70]
127108: 82 17 68                 a0 = u64 [sp + 0x68]
127111: c8 c7 07                 a0 = a0 + a5
127114: 53 37 00 00 ff 25        jump @9581 if a0 <u 4294901760
      :                          @9576
127120: 33 07 c0 22 03           a0 = 0x322c0
127125: 95 77 00 00 01           a0 = a0 + 0x10000
127130: 01                       fallthrough
      :                          @9577
127131: 82 78                    a1 = u64 [a0]
127133: c9 87 09                 a2 = a0 - a1
127136: ab 69 0f                 jump @9581 if a2 != s1
      :                          @9578
127139: c9 c8 09                 a2 = a1 - a5
127142: 01                       fallthrough
      :                          @9579
127143: 82 7a                    a3 = u64 [a0]
127145: ab 8a f2                 jump @9577 if a3 != a1
      :                          @9580
127148: 7b 79                    u64 [a0] = a2
127150: 01                       fallthrough
      :                          @9581
127151: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
127155: 52 08 07                 jump @9583 if a1 != 0
      :                          @9582
127158: 28 cd f1 00              jump @12868
      :                          @9583
127162: 54 28 00 10 09           jump @9585 if a1 <=u 4096
      :                          @9584
127167: 28 c4 f1 00              jump @12868
      :                          @9585
127171: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
127175: 97 88 04                 a1 = a1 << 0x4
127178: 33 09 c0 22 03           a2 = 0x322c0
127183: 95 99 00 00 01           a2 = a2 + 0x10000
127188: 01                       fallthrough
      :                          @9586
127189: 82 9a                    a3 = u64 [a2]
127191: c9 a9 0b                 a4 = a2 - a3
127194: aa 7b 07                 jump @9588 if a4 == a0
      :                          @9587
127197: 28 a6 f1 00              jump @12868
      :                          @9588
127201: c9 8a 0b                 a4 = a3 - a1
127204: 01                       fallthrough
      :                          @9589
127205: 82 9c                    a5 = u64 [a2]
127207: ab ac ee                 jump @9586 if a5 != a3
      :                          @9590
127210: 7b 9b                    u64 [a2] = a4
127212: 33 06                    s1 = 0
127214: 01                       fallthrough
      :                          @9591
127215: ab ac e6                 jump @9586 if a5 != a3
      :                          @9592
127218: 28 91 f1 00              jump @12868
      :                          @9593 [@dyn 808]
127222: 3a 08 78 12 03           a1 = u64 [0x31278]
127227: 97 89 0d                 a2 = a1 << 0xd
127230: d3 98 08                 a1 = a1 ^ a2
127233: 98 89 07                 a2 = a1 >> 0x7
127236: d3 98 08                 a1 = a1 ^ a2
127239: 97 89 11                 a2 = a1 << 0x11
127242: d3 89 09                 a2 = a2 ^ a1
127245: 3e 09 78 12 03           u64 [0x31278] = a2
127250: 87 87 1d dd              i32 a0 = a1 * 0xffffffffffffdd1d
127254: 97 78 38                 a1 = a0 << 0x38
127257: 98 88 39                 a1 = a1 >> 0x39
127260: 98 77 01                 a0 = a0 >> 0x1
127263: 84 77 80 00              a0 = a0 & 0x80
127267: d4 87 07                 a0 = a0 | a1
127270: 78 17 20 01              u8 [sp + 0x120] = a0
127274: 95 17 20 01              a0 = sp + 0x120
127278: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
127282: 33 07 8a 0c              a0 = 0xc8a
127286: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
127290: 49 21 90 02 02           u64 [sp + 656] = 0x2
127295: 49 21 a0 02              u64 [sp + 672] = 0
127299: 49 21 a8 02 02           u64 [sp + 680] = 0x2
127304: 49 21 b0 02              u64 [sp + 688] = 0
127308: 14 08 20 00 00 00 08 00 00 00 a1 = 0x800000020
127318: 7b 18 b8 02              u64 [sp + 0x2b8] = a1
127322: 46 21 c0 02 03           u8 [sp + 704] = 0x3
127327: 33 08 58 10 01           a1 = 0x11058
127332: 7b 18 38 02              u64 [sp + 0x238] = a1
127336: 49 21 40 02 01           u64 [sp + 576] = 0x1
127341: 95 18 90 02              a1 = sp + 0x290
127345: 7b 18 58 02              u64 [sp + 0x258] = a1
127349: 49 21 60 02 01           u64 [sp + 608] = 0x1
127354: 95 18 e0 01              a1 = sp + 0x1e0
127358: 7b 18 48 02              u64 [sp + 0x248] = a1
127362: 49 21 50 02 01           u64 [sp + 592] = 0x1
127367: 95 17 08 02              a0 = sp + 0x208
127371: 95 18 38 02              a1 = sp + 0x238
127375: 50 20 52 06 6b 5e fe     ra = 1618, jump @1503
      :                          @9594 [@dyn 809]
127382: 82 16 10 02              s1 = u64 [sp + 0x210]
127386: 82 1b 18 02              a4 = u64 [sp + 0x218]
127390: 82 17 08 02              a0 = u64 [sp + 0x208]
127394: 7b 17 70                 u64 [sp + 0x70] = a0
127397: 33 07 02                 a0 = 0x2
127400: 33 08                    a1 = 0
127402: 33 09                    a2 = 0
127404: 64 6a                    a3 = s1
127406: 33 00 54 06              ra = 0x654
127410: 0a 64                    ecalli 100 // 'log'
127412: 01                       fallthrough
      :                          @9595 [@dyn 810]
127413: 82 1c 70                 a5 = u64 [sp + 0x70]
127416: 82 17 68                 a0 = u64 [sp + 0x68]
127419: c8 c7 07                 a0 = a0 + a5
127422: 55 37 00 00 ff 0a        jump @9597 if a0 >=u 4294901760
      :                          @9596
127428: 28 bf f0 00              jump @12868
      :                          @9597
127432: 33 07 c0 22 03           a0 = 0x322c0
127437: 95 77 00 00 01           a0 = a0 + 0x10000
127442: 01                       fallthrough
      :                          @9598
127443: 82 78                    a1 = u64 [a0]
127445: c9 87 09                 a2 = a0 - a1
127448: aa 69 07                 jump @9600 if a2 == s1
      :                          @9599
127451: 28 a8 f0 00              jump @12868
      :                          @9600
127455: c9 c8 09                 a2 = a1 - a5
127458: 01                       fallthrough
      :                          @9601
127459: 82 7a                    a3 = u64 [a0]
127461: ab 8a ee                 jump @9598 if a3 != a1
      :                          @9602
127464: 7b 79                    u64 [a0] = a2
127466: 33 0b                    a4 = 0
127468: 01                       fallthrough
      :                          @9603
127469: ab 8a e6                 jump @9598 if a3 != a1
      :                          @9604
127472: 28 93 f0 00              jump @12868
      :                          @9605 [@dyn 811]
127476: 3a 03 60 11 03           t1 = u64 [0x31160]
127481: 33 08 78 12 03           a1 = 0x31278
127486: 3a 09 d8 11 03           a2 = u64 [0x311d8]
127491: 33 0a a5 98 0f           a3 = 0xf98a5
127496: 33 02 01                 t0 = 0x1
127499: 01                       fallthrough
      :                          @9606
127500: 3a 07 78 12 03           a0 = u64 [0x31278]
127505: 97 7b 0d                 a4 = a0 << 0xd
127508: d3 b7 07                 a0 = a0 ^ a4
127511: 98 7b 07                 a4 = a0 >> 0x7
127514: d3 b7 07                 a0 = a0 ^ a4
127517: 97 7b 11                 a4 = a0 << 0x11
127520: d3 b7 07                 a0 = a0 ^ a4
127523: 3e 07 78 12 03           u64 [0x31278] = a0
127528: ca 37 07                 a0 = a0 * t1
127531: d6 97 0b                 a4 = a0 mulhu a2
127534: 98 bb 13                 a4 = a4 >> 0x13
127537: ca ab 0b                 a4 = a4 * a3
127540: c9 b7 07                 a0 = a0 - a4
127543: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
127547: 64 7b                    a4 = a0
127549: 64 ac                    a5 = a3
127551: 01                       fallthrough
      :                          @9607
127552: 64 c6                    s1 = a5
127554: cd cb 0c                 a5 = a4 %u a5
127557: 64 6b                    a4 = s1
127559: 52 0c f9                 jump @9607 if a5 != 0
      :                          @9608
127562: ab 26 c2                 jump @9606 if s1 != t0
      :                          @9609
127565: 3a 08 d8 11 03           a1 = u64 [0x311d8]
127570: ca 77 07                 a0 = a0 * a0
127573: d6 87 08                 a1 = a0 mulhu a1
127576: 98 88 13                 a1 = a1 >> 0x13
127579: 96 88 a5 98 0f           a1 = a1 * 0xf98a5
127584: c9 87 07                 a0 = a0 - a1
127587: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
127591: 95 17 e0 01              a0 = sp + 0x1e0
127595: 7b 17 08 02              u64 [sp + 0x208] = a0
127599: 33 07 2c 0c              a0 = 0xc2c
127603: 7b 17 10 02              u64 [sp + 0x210] = a0
127607: 33 07 78 10 01           a0 = 0x11078
127612: 7b 17 90 02              u64 [sp + 0x290] = a0
127616: 49 21 98 02 01           u64 [sp + 664] = 0x1
127621: 49 21 b0 02              u64 [sp + 688] = 0
127625: 95 18 08 02              a1 = sp + 0x208
127629: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
127633: 49 21 a8 02 01           u64 [sp + 680] = 0x1
127638: 95 17 38 02              a0 = sp + 0x238
127642: 95 18 90 02              a1 = sp + 0x290
127646: 50 20 58 06 5c 5d fe     ra = 1624, jump @1503
      :                          @9610 [@dyn 812]
127653: 82 16 40 02              s1 = u64 [sp + 0x240]
127657: 82 1b 48 02              a4 = u64 [sp + 0x248]
127661: 82 17 38 02              a0 = u64 [sp + 0x238]
127665: 7b 17 70                 u64 [sp + 0x70] = a0
127668: 33 07 02                 a0 = 0x2
127671: 33 08                    a1 = 0
127673: 33 09                    a2 = 0
127675: 64 6a                    a3 = s1
127677: 33 00 5a 06              ra = 0x65a
127681: 0a 64                    ecalli 100 // 'log'
127683: 01                       fallthrough
      :                          @9611 [@dyn 813]
127684: 82 1c 70                 a5 = u64 [sp + 0x70]
127687: 82 17 68                 a0 = u64 [sp + 0x68]
127690: c8 c7 07                 a0 = a0 + a5
127693: 55 37 00 00 ff 0a        jump @9613 if a0 >=u 4294901760
      :                          @9612
127699: 28 b0 ef 00              jump @12868
      :                          @9613
127703: 33 07 c0 22 03           a0 = 0x322c0
127708: 95 77 00 00 01           a0 = a0 + 0x10000
127713: 01                       fallthrough
      :                          @9614
127714: 82 78                    a1 = u64 [a0]
127716: c9 87 09                 a2 = a0 - a1
127719: aa 69 07                 jump @9616 if a2 == s1
      :                          @9615
127722: 28 99 ef 00              jump @12868
      :                          @9616
127726: c9 c8 09                 a2 = a1 - a5
127729: 01                       fallthrough
      :                          @9617
127730: 82 7a                    a3 = u64 [a0]
127732: ab 8a ee                 jump @9614 if a3 != a1
      :                          @9618
127735: 7b 79                    u64 [a0] = a2
127737: 33 0b                    a4 = 0
127739: 01                       fallthrough
      :                          @9619
127740: ab 8a e6                 jump @9614 if a3 != a1
      :                          @9620
127743: 28 84 ef 00              jump @12868
      :                          @9621 [@dyn 814]
127747: 3a 08 78 12 03           a1 = u64 [0x31278]
127752: 97 89 0d                 a2 = a1 << 0xd
127755: d3 98 08                 a1 = a1 ^ a2
127758: 98 89 07                 a2 = a1 >> 0x7
127761: 3a 0a 60 11 03           a3 = u64 [0x31160]
127766: d3 98 08                 a1 = a1 ^ a2
127769: 97 89 11                 a2 = a1 << 0x11
127772: d3 98 08                 a1 = a1 ^ a2
127775: ca a8 09                 a2 = a1 * a3
127778: 3e 08 78 12 03           u64 [0x31278] = a1
127783: 7b 19 c8 01              u64 [sp + 0x1c8] = a2
127787: 3a 08 78 12 03           a1 = u64 [0x31278]
127792: 97 89 0d                 a2 = a1 << 0xd
127795: d3 98 08                 a1 = a1 ^ a2
127798: 98 89 07                 a2 = a1 >> 0x7
127801: d3 98 08                 a1 = a1 ^ a2
127804: 97 89 11                 a2 = a1 << 0x11
127807: d3 98 08                 a1 = a1 ^ a2
127810: 3e 08 78 12 03           u64 [0x31278] = a1
127815: 82 17 c8 01              a0 = u64 [sp + 0x1c8]
127819: ca a8 08                 a1 = a1 * a3
127822: d3 78 08                 a1 = a1 ^ a0
127825: 7b 18 20 01              u64 [sp + 0x120] = a1
127829: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
127833: 95 17 c8 01              a0 = sp + 0x1c8
127837: 7b 17 90 02              u64 [sp + 0x290] = a0
127841: 33 07 2c 0c              a0 = 0xc2c
127845: 7b 17 98 02              u64 [sp + 0x298] = a0
127849: 95 18 20 01              a1 = sp + 0x120
127853: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
127857: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
127861: 95 18 e0 01              a1 = sp + 0x1e0
127865: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
127869: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
127873: 33 07 a0 10 01           a0 = 0x110a0
127878: 7b 17 38 02              u64 [sp + 0x238] = a0
127882: 49 21 40 02 03           u64 [sp + 576] = 0x3
127887: 49 21 58 02              u64 [sp + 600] = 0
127891: 95 18 90 02              a1 = sp + 0x290
127895: 7b 18 48 02              u64 [sp + 0x248] = a1
127899: 49 21 50 02 03           u64 [sp + 592] = 0x3
127904: 95 17 08 02              a0 = sp + 0x208
127908: 95 18 38 02              a1 = sp + 0x238
127912: 50 20 5e 06 52 5c fe     ra = 1630, jump @1503
      :                          @9622 [@dyn 815]
127919: 82 16 10 02              s1 = u64 [sp + 0x210]
127923: 82 1b 18 02              a4 = u64 [sp + 0x218]
127927: 82 17 08 02              a0 = u64 [sp + 0x208]
127931: 7b 17 70                 u64 [sp + 0x70] = a0
127934: 33 07 02                 a0 = 0x2
127937: 33 08                    a1 = 0
127939: 33 09                    a2 = 0
127941: 64 6a                    a3 = s1
127943: 33 00 60 06              ra = 0x660
127947: 0a 64                    ecalli 100 // 'log'
127949: 01                       fallthrough
      :                          @9623 [@dyn 816]
127950: 82 1c 70                 a5 = u64 [sp + 0x70]
127953: 82 17 68                 a0 = u64 [sp + 0x68]
127956: c8 c7 07                 a0 = a0 + a5
127959: 55 37 00 00 ff 0a        jump @9625 if a0 >=u 4294901760
      :                          @9624
127965: 28 a6 ee 00              jump @12868
      :                          @9625
127969: 33 07 c0 22 03           a0 = 0x322c0
127974: 95 77 00 00 01           a0 = a0 + 0x10000
127979: 01                       fallthrough
      :                          @9626
127980: 82 78                    a1 = u64 [a0]
127982: c9 87 09                 a2 = a0 - a1
127985: aa 69 07                 jump @9628 if a2 == s1
      :                          @9627
127988: 28 8f ee 00              jump @12868
      :                          @9628
127992: c9 c8 09                 a2 = a1 - a5
127995: 01                       fallthrough
      :                          @9629
127996: 82 7a                    a3 = u64 [a0]
127998: ab 8a ee                 jump @9626 if a3 != a1
      :                          @9630
128001: 7b 79                    u64 [a0] = a2
128003: 33 0b                    a4 = 0
128005: 01                       fallthrough
      :                          @9631
128006: ab 8a e6                 jump @9626 if a3 != a1
      :                          @9632
128009: 28 7a ee 00              jump @12868
      :                          @9633 [@dyn 817]
128013: 3a 06 60 11 03           s1 = u64 [0x31160]
128018: 95 17 e0 01              a0 = sp + 0x1e0
128022: 33 00 64 06              ra = 0x664
128026: 95 11 a8                 sp = sp + 0xffffffffffffffa8
128029: 7b 10 50                 u64 [sp + 0x50] = ra
128032: 7b 15 48                 u64 [sp + 0x48] = s0
128035: 7b 16 40                 u64 [sp + 0x40] = s1
128038: 7b 17                    u64 [sp] = a0
128040: 33 06 c0 22 03           s1 = 0x322c0
128045: 33 02 00 00 01           t0 = 0x10000
128050: c8 26 09                 a2 = s1 + t0
128053: 28 3a 85 fe              jump @2200
      :                          @9634 [@dyn 818]
128057: 3a 07 78 12 03           a0 = u64 [0x31278]
128062: 97 78 0d                 a1 = a0 << 0xd
128065: d3 87 07                 a0 = a0 ^ a1
128068: 98 78 07                 a1 = a0 >> 0x7
128071: d3 87 07                 a0 = a0 ^ a1
128074: 97 78 11                 a1 = a0 << 0x11
128077: d3 87 07                 a0 = a0 ^ a1
128080: 3a 0a f0 11 03           a3 = u64 [0x311f0]
128085: ca 67 0c                 a5 = a0 * s1
128088: 3e 07 78 12 03           u64 [0x31278] = a0
128093: d6 ac 07                 a0 = a5 mulhu a3
128096: 98 77 03                 a0 = a0 >> 0x3
128099: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
128103: 96 77 1a                 a0 = a0 * 0x1a
128106: c9 7c 07                 a0 = a5 - a0
128109: ac 87 07                 jump @9636 if a0 <u a1
      :                          @9635
128112: 28 1c 00 01              jump @13229
      :                          @9636
128116: 82 18 e8 01              a1 = u64 [sp + 0x1e8]
128120: 97 77 02                 a0 = a0 << 0x2
128123: c8 87 07                 a0 = a0 + a1
128126: 81 77                    a0 = i32 [a0]
128128: 7a 17 b0 01              u32 [sp + 0x1b0] = a0
128132: 3a 07 78 12 03           a0 = u64 [0x31278]
128137: 97 78 0d                 a1 = a0 << 0xd
128140: d3 87 07                 a0 = a0 ^ a1
128143: 98 78 07                 a1 = a0 >> 0x7
128146: d3 87 07                 a0 = a0 ^ a1
128149: 97 78 11                 a1 = a0 << 0x11
128152: d3 87 07                 a0 = a0 ^ a1
128155: ca 67 08                 a1 = a0 * s1
128158: 3e 07 78 12 03           u64 [0x31278] = a0
128163: d6 a8 07                 a0 = a1 mulhu a3
128166: 98 77 03                 a0 = a0 >> 0x3
128169: 96 79 1a                 a2 = a0 * 0x1a
128172: 80 17 b0 01              a0 = u32 [sp + 0x1b0]
128176: c9 98 08                 a1 = a1 - a2
128179: 84 79 df ff 1f           a2 = a0 & 0x1fffdf
128184: 95 9a bf                 a3 = a2 + 0xffffffffffffffbf
128187: 78 18 10 01              u8 [sp + 0x110] = a1
128191: 56 1a 19 37              jump @9638 if a3 >u 25
      :                          @9637
128195: 88 7a 61                 a3 = a0 <u 0x61
128198: 33 0c bf                 a5 = 0xffffffffffffffbf
128201: 93 ac 9f                 a5 = 0xffffffffffffff9f if a3 == 0
128204: 33 06 41                 s1 = 0x41
128207: 93 a6 61                 s1 = 0x61 if a3 == 0
128210: c8 c7 07                 a0 = a0 + a5
128213: c8 87 07                 a0 = a0 + a1
128216: 84 7a ff 00              a3 = a0 & 0xff
128220: 96 aa 4f                 a3 = a3 * 0x4f
128223: 98 aa 0b                 a3 = a3 >> 0xb
128226: 96 aa 1a                 a3 = a3 * 0x1a
128229: c8 67 07                 a0 = a0 + s1
128232: bf a7 0a                 i32 a3 = a0 - a3
128235: 84 a7 ff 00              a0 = a3 & 0xff
128239: 84 aa 5f                 a3 = a3 & 0x5f
128242: 95 aa bf                 a3 = a3 + 0xffffffffffffffbf
128245: 01                       fallthrough
      :                          @9638
128246: 7a 17 c8 01              u32 [sp + 0x1c8] = a0
128250: 56 1a 19 40              jump @9640 if a3 >u 25
      :                          @9639
128254: 84 89 ff 00              a2 = a1 & 0xff
128258: 33 02 1a                 t0 = 0x1a
128261: c9 82 08                 a1 = t0 - a1
128264: 88 7b 61                 a4 = a0 <u 0x61
128267: 33 06 bf                 s1 = 0xffffffffffffffbf
128270: 93 b6 9f                 s1 = 0xffffffffffffff9f if a4 == 0
128273: 33 0c 61                 a5 = 0x61
128276: 33 0a 41                 a3 = 0x41
128279: da bc 0a                 a3 = a5 if a4 == 0
128282: 93 98                    a1 = 0 if a2 == 0
128284: c8 67 07                 a0 = a0 + s1
128287: c8 87 07                 a0 = a0 + a1
128290: 84 78 ff 00              a1 = a0 & 0xff
128294: 96 88 4f                 a1 = a1 * 0x4f
128297: 98 88 0b                 a1 = a1 >> 0xb
128300: ca 28 08                 a1 = a1 * t0
128303: c8 a7 07                 a0 = a0 + a3
128306: bf 87 07                 i32 a0 = a0 - a1
128309: 84 77 ff 00              a0 = a0 & 0xff
128313: 01                       fallthrough
      :                          @9640
128314: 7a 17 20 01              u32 [sp + 0x120] = a0
128318: 95 17 b0 01              a0 = sp + 0x1b0
128322: 7b 17 90 02              u64 [sp + 0x290] = a0
128326: 33 07 86 0c              a0 = 0xc86
128330: 7b 17 98 02              u64 [sp + 0x298] = a0
128334: 95 18 10 01              a1 = sp + 0x110
128338: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
128342: 33 08 60 0c              a1 = 0xc60
128346: 7b 18 a8 02              u64 [sp + 0x2a8] = a1
128350: 95 18 c8 01              a1 = sp + 0x1c8
128354: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
128358: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
128362: 95 18 20 01              a1 = sp + 0x120
128366: 7b 18 c0 02              u64 [sp + 0x2c0] = a1
128370: 7b 17 c8 02              u64 [sp + 0x2c8] = a0
128374: 33 07 d8 10 01           a0 = 0x110d8
128379: 7b 17 38 02              u64 [sp + 0x238] = a0
128383: 49 21 40 02 04           u64 [sp + 576] = 0x4
128388: 49 21 58 02              u64 [sp + 600] = 0
128392: 95 18 90 02              a1 = sp + 0x290
128396: 7b 18 48 02              u64 [sp + 0x248] = a1
128400: 49 21 50 02 04           u64 [sp + 592] = 0x4
128405: 95 17 08 02              a0 = sp + 0x208
128409: 95 18 38 02              a1 = sp + 0x238
128413: 50 20 66 06 5d 5a fe     ra = 1638, jump @1503
      :                          @9641 [@dyn 819]
128420: 82 16 10 02              s1 = u64 [sp + 0x210]
128424: 82 1b 18 02              a4 = u64 [sp + 0x218]
128428: 82 17 08 02              a0 = u64 [sp + 0x208]
128432: 7b 17 70                 u64 [sp + 0x70] = a0
128435: 33 07 02                 a0 = 0x2
128438: 33 08                    a1 = 0
128440: 33 09                    a2 = 0
128442: 64 6a                    a3 = s1
128444: 33 00 68 06              ra = 0x668
128448: 0a 64                    ecalli 100 // 'log'
128450: 01                       fallthrough
      :                          @9642 [@dyn 820]
128451: 82 1c 70                 a5 = u64 [sp + 0x70]
128454: 82 17 68                 a0 = u64 [sp + 0x68]
128457: c8 c7 07                 a0 = a0 + a5
128460: 53 37 00 00 ff 25        jump @9648 if a0 <u 4294901760
      :                          @9643
128466: 33 07 c0 22 03           a0 = 0x322c0
128471: 95 77 00 00 01           a0 = a0 + 0x10000
128476: 01                       fallthrough
      :                          @9644
128477: 82 78                    a1 = u64 [a0]
128479: c9 87 09                 a2 = a0 - a1
128482: ab 69 0f                 jump @9648 if a2 != s1
      :                          @9645
128485: c9 c8 09                 a2 = a1 - a5
128488: 01                       fallthrough
      :                          @9646
128489: 82 7a                    a3 = u64 [a0]
128491: ab 8a f2                 jump @9644 if a3 != a1
      :                          @9647
128494: 7b 79                    u64 [a0] = a2
128496: 01                       fallthrough
      :                          @9648
128497: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
128501: 52 08 07                 jump @9650 if a1 != 0
      :                          @9649
128504: 28 8b ec 00              jump @12868
      :                          @9650
128508: 54 28 00 40 09           jump @9652 if a1 <=u 16384
      :                          @9651
128513: 28 82 ec 00              jump @12868
      :                          @9652
128517: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
128521: 97 88 02                 a1 = a1 << 0x2
128524: 33 09 c0 22 03           a2 = 0x322c0
128529: 95 99 00 00 01           a2 = a2 + 0x10000
128534: 01                       fallthrough
      :                          @9653
128535: 82 9a                    a3 = u64 [a2]
128537: c9 a9 0b                 a4 = a2 - a3
128540: aa 7b 07                 jump @9655 if a4 == a0
      :                          @9654
128543: 28 64 ec 00              jump @12868
      :                          @9655
128547: c9 8a 0b                 a4 = a3 - a1
128550: 01                       fallthrough
      :                          @9656
128551: 82 9c                    a5 = u64 [a2]
128553: ab ac ee                 jump @9653 if a5 != a3
      :                          @9657
128556: 7b 9b                    u64 [a2] = a4
128558: 33 06                    s1 = 0
128560: 01                       fallthrough
      :                          @9658
128561: ab ac e6                 jump @9653 if a5 != a3
      :                          @9659
128564: 28 4f ec 00              jump @12868
      :                          @9660 [@dyn 821]
128568: 3a 08 78 12 03           a1 = u64 [0x31278]
128573: 97 89 0d                 a2 = a1 << 0xd
128576: d3 98 08                 a1 = a1 ^ a2
128579: 98 89 07                 a2 = a1 >> 0x7
128582: d3 98 08                 a1 = a1 ^ a2
128585: 97 89 11                 a2 = a1 << 0x11
128588: d3 98 08                 a1 = a1 ^ a2
128591: 3a 09 60 11 03           a2 = u64 [0x31160]
128596: 3a 0a 70 11 03           a3 = u64 [0x31170]
128601: 3e 08 78 12 03           u64 [0x31278] = a1
128606: ca 98 07                 a0 = a1 * a2
128609: 98 78 01                 a1 = a0 >> 0x1
128612: d6 a8 08                 a1 = a1 mulhu a3
128615: 98 88 04                 a1 = a1 >> 0x4
128618: 96 88 32                 a1 = a1 * 0x32
128621: c9 87 07                 a0 = a0 - a1
128624: 7b 17 20 01              u64 [sp + 0x120] = a0
128628: 50 20 6c 06 be 4b ff     ra = 1644, jump @6541
      :                          @9661 [@dyn 822]
128635: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
128639: 95 17 20 01              a0 = sp + 0x120
128643: 7b 17 38 02              u64 [sp + 0x238] = a0
128647: 33 07 2c 0c              a0 = 0xc2c
128651: 7b 17 40 02              u64 [sp + 0x240] = a0
128655: 95 18 e0 01              a1 = sp + 0x1e0
128659: 7b 18 48 02              u64 [sp + 0x248] = a1
128663: 7b 17 50 02              u64 [sp + 0x250] = a0
128667: 33 07 18 11 01           a0 = 0x11118
128672: 7b 17 90 02              u64 [sp + 0x290] = a0
128676: 49 21 98 02 02           u64 [sp + 664] = 0x2
128681: 49 21 b0 02              u64 [sp + 688] = 0
128685: 95 18 38 02              a1 = sp + 0x238
128689: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
128693: 49 21 a8 02 02           u64 [sp + 680] = 0x2
128698: 95 17 08 02              a0 = sp + 0x208
128702: 95 18 90 02              a1 = sp + 0x290
128706: 50 20 6e 06 38 59 fe     ra = 1646, jump @1503
      :                          @9662 [@dyn 823]
128713: 82 16 10 02              s1 = u64 [sp + 0x210]
128717: 82 1b 18 02              a4 = u64 [sp + 0x218]
128721: 82 17 08 02              a0 = u64 [sp + 0x208]
128725: 7b 17 70                 u64 [sp + 0x70] = a0
128728: 33 07 02                 a0 = 0x2
128731: 33 08                    a1 = 0
128733: 33 09                    a2 = 0
128735: 64 6a                    a3 = s1
128737: 33 00 70 06              ra = 0x670
128741: 0a 64                    ecalli 100 // 'log'
128743: 01                       fallthrough
      :                          @9663 [@dyn 824]
128744: 82 1c 70                 a5 = u64 [sp + 0x70]
128747: 82 17 68                 a0 = u64 [sp + 0x68]
128750: c8 c7 07                 a0 = a0 + a5
128753: 55 37 00 00 ff 0a        jump @9665 if a0 >=u 4294901760
      :                          @9664
128759: 28 8c eb 00              jump @12868
      :                          @9665
128763: 33 07 c0 22 03           a0 = 0x322c0
128768: 95 77 00 00 01           a0 = a0 + 0x10000
128773: 01                       fallthrough
      :                          @9666
128774: 82 78                    a1 = u64 [a0]
128776: c9 87 09                 a2 = a0 - a1
128779: aa 69 07                 jump @9668 if a2 == s1
      :                          @9667
128782: 28 75 eb 00              jump @12868
      :                          @9668
128786: c9 c8 09                 a2 = a1 - a5
128789: 01                       fallthrough
      :                          @9669
128790: 82 7a                    a3 = u64 [a0]
128792: ab 8a ee                 jump @9666 if a3 != a1
      :                          @9670
128795: 7b 79                    u64 [a0] = a2
128797: 33 0b                    a4 = 0
128799: 01                       fallthrough
      :                          @9671
128800: ab 8a e6                 jump @9666 if a3 != a1
      :                          @9672
128803: 28 60 eb 00              jump @12868
      :                          @9673 [@dyn 825]
128807: 95 17 90 02              a0 = sp + 0x290
128811: 33 09 05                 a2 = 0x5
128814: 33 08                    a1 = 0
128816: 50 20 74 06 74 6d fe     ra = 1652, jump @1889
      :                          @9674 [@dyn 826]
128823: 95 17 08 02              a0 = sp + 0x208
128827: 95 18 90 02              a1 = sp + 0x290
128831: 33 09 05                 a2 = 0x5
128834: 50 20 76 06 af 62 fe     ra = 1654, jump @1721
      :                          @9675 [@dyn 827]
128841: 82 17 18 02              a0 = u64 [sp + 0x218]
128845: 52 07 07                 jump @9677 if a0 != 0
      :                          @9676
128848: 28 53 fd 00              jump @13252
      :                          @9677
128852: 82 17 10 02              a0 = u64 [sp + 0x210]
128856: 82 78 10                 a1 = u64 [a0 + 0x10]
128859: 52 08 07                 jump @9679 if a1 != 0
      :                          @9678
128862: 28 60 fd 00              jump @13275
      :                          @9679
128866: 82 77 08                 a0 = u64 [a0 + 0x8]
128869: 49 07                    u64 [a0 + 0] = 0
128871: 3a 08 78 12 03           a1 = u64 [0x31278]
128876: 97 89 0d                 a2 = a1 << 0xd
128879: d3 98 08                 a1 = a1 ^ a2
128882: 98 89 07                 a2 = a1 >> 0x7
128885: d3 98 08                 a1 = a1 ^ a2
128888: 97 89 11                 a2 = a1 << 0x11
128891: d3 89 09                 a2 = a2 ^ a1
128894: 3e 09 78 12 03           u64 [0x31278] = a2
128899: 82 17 18 02              a0 = u64 [sp + 0x218]
128903: 52 07 07                 jump @9681 if a0 != 0
      :                          @9680
128906: 28 19 fd 00              jump @13252
      :                          @9681
128910: 82 17 10 02              a0 = u64 [sp + 0x210]
128914: 82 78 10                 a1 = u64 [a0 + 0x10]
128917: 55 18 02 08              jump @9683 if a1 >=u 2
      :                          @9682
128921: 28 2a fc 00              jump @13209
      :                          @9683
128925: 3a 0a 60 11 03           a3 = u64 [0x31160]
128930: 3a 08 70 11 03           a1 = u64 [0x31170]
128935: ca a9 09                 a2 = a2 * a3
128938: 98 9b 01                 a4 = a2 >> 0x1
128941: d6 8b 08                 a1 = a4 mulhu a1
128944: 98 88 04                 a1 = a1 >> 0x4
128947: 82 77 08                 a0 = u64 [a0 + 0x8]
128950: 96 88 32                 a1 = a1 * 0x32
128953: c9 89 09                 a2 = a2 - a1
128956: 95 99 01                 a2 = a2 + 0x1
128959: 7b 79 08                 u64 [a0 + 0x8] = a2
128962: 3a 08 78 12 03           a1 = u64 [0x31278]
128967: 97 89 0d                 a2 = a1 << 0xd
128970: d3 98 08                 a1 = a1 ^ a2
128973: 98 89 07                 a2 = a1 >> 0x7
128976: d3 98 08                 a1 = a1 ^ a2
128979: 97 89 11                 a2 = a1 << 0x11
128982: d3 89 09                 a2 = a2 ^ a1
128985: 3e 09 78 12 03           u64 [0x31278] = a2
128990: 82 17 18 02              a0 = u64 [sp + 0x218]
128994: 52 07 07                 jump @9685 if a0 != 0
      :                          @9684
128997: 28 be fc 00              jump @13252
      :                          @9685
129001: 82 17 10 02              a0 = u64 [sp + 0x210]
129005: 82 78 10                 a1 = u64 [a0 + 0x10]
129008: 55 18 03 08              jump @9687 if a1 >=u 3
      :                          @9686
129012: 28 d1 fb 00              jump @13211
      :                          @9687
129016: 3a 08 70 11 03           a1 = u64 [0x31170]
129021: ca a9 09                 a2 = a2 * a3
129024: 98 9b 01                 a4 = a2 >> 0x1
129027: d6 8b 08                 a1 = a4 mulhu a1
129030: 98 88 04                 a1 = a1 >> 0x4
129033: 82 77 08                 a0 = u64 [a0 + 0x8]
129036: 96 88 32                 a1 = a1 * 0x32
129039: c9 89 09                 a2 = a2 - a1
129042: 95 99 01                 a2 = a2 + 0x1
129045: 7b 79 10                 u64 [a0 + 0x10] = a2
129048: 3a 08 78 12 03           a1 = u64 [0x31278]
129053: 97 89 0d                 a2 = a1 << 0xd
129056: d3 98 08                 a1 = a1 ^ a2
129059: 98 89 07                 a2 = a1 >> 0x7
129062: d3 98 08                 a1 = a1 ^ a2
129065: 97 89 11                 a2 = a1 << 0x11
129068: d3 89 09                 a2 = a2 ^ a1
129071: 3e 09 78 12 03           u64 [0x31278] = a2
129076: 82 17 18 02              a0 = u64 [sp + 0x218]
129080: 52 07 07                 jump @9689 if a0 != 0
      :                          @9688
129083: 28 68 fc 00              jump @13252
      :                          @9689
129087: 82 17 10 02              a0 = u64 [sp + 0x210]
129091: 82 78 10                 a1 = u64 [a0 + 0x10]
129094: 55 18 04 08              jump @9691 if a1 >=u 4
      :                          @9690
129098: 28 7a fb 00              jump @13210
      :                          @9691
129102: 3a 08 70 11 03           a1 = u64 [0x31170]
129107: ca a9 09                 a2 = a2 * a3
129110: 98 9b 01                 a4 = a2 >> 0x1
129113: d6 8b 08                 a1 = a4 mulhu a1
129116: 98 88 04                 a1 = a1 >> 0x4
129119: 82 77 08                 a0 = u64 [a0 + 0x8]
129122: 96 88 32                 a1 = a1 * 0x32
129125: c9 89 09                 a2 = a2 - a1
129128: 95 99 01                 a2 = a2 + 0x1
129131: 7b 79 18                 u64 [a0 + 0x18] = a2
129134: 3a 08 78 12 03           a1 = u64 [0x31278]
129139: 97 89 0d                 a2 = a1 << 0xd
129142: d3 98 08                 a1 = a1 ^ a2
129145: 98 89 07                 a2 = a1 >> 0x7
129148: d3 98 08                 a1 = a1 ^ a2
129151: 97 89 11                 a2 = a1 << 0x11
129154: d3 89 09                 a2 = a2 ^ a1
129157: 3e 09 78 12 03           u64 [0x31278] = a2
129162: 82 17 18 02              a0 = u64 [sp + 0x218]
129166: 52 07 07                 jump @9693 if a0 != 0
      :                          @9692
129169: 28 12 fc 00              jump @13252
      :                          @9693
129173: 82 17 10 02              a0 = u64 [sp + 0x210]
129177: 82 78 10                 a1 = u64 [a0 + 0x10]
129180: 55 18 05 08              jump @9695 if a1 >=u 5
      :                          @9694
129184: 28 ee fb 00              jump @13231
      :                          @9695
129188: 3a 08 70 11 03           a1 = u64 [0x31170]
129193: ca a9 09                 a2 = a2 * a3
129196: 98 9b 01                 a4 = a2 >> 0x1
129199: d6 8b 08                 a1 = a4 mulhu a1
129202: 98 88 04                 a1 = a1 >> 0x4
129205: 82 77 08                 a0 = u64 [a0 + 0x8]
129208: 96 88 32                 a1 = a1 * 0x32
129211: c9 89 09                 a2 = a2 - a1
129214: 95 99 01                 a2 = a2 + 0x1
129217: 7b 79 20                 u64 [a0 + 0x20] = a2
129220: 3a 08 78 12 03           a1 = u64 [0x31278]
129225: 97 89 0d                 a2 = a1 << 0xd
129228: d3 98 08                 a1 = a1 ^ a2
129231: 98 89 07                 a2 = a1 >> 0x7
129234: d3 98 08                 a1 = a1 ^ a2
129237: 97 89 11                 a2 = a1 << 0x11
129240: d3 89 09                 a2 = a2 ^ a1
129243: 3e 09 78 12 03           u64 [0x31278] = a2
129248: 82 18 18 02              a1 = u64 [sp + 0x218]
129252: 55 18 02 08              jump @9697 if a1 >=u 2
      :                          @9696
129256: 28 db fa 00              jump @13209
      :                          @9697
129260: 82 17 10 02              a0 = u64 [sp + 0x210]
129264: 82 78 28                 a1 = u64 [a0 + 0x28]
129267: 52 08 07                 jump @9699 if a1 != 0
      :                          @9698
129270: 28 c8 fb 00              jump @13275
      :                          @9699
129274: 3a 08 70 11 03           a1 = u64 [0x31170]
129279: ca a9 09                 a2 = a2 * a3
129282: 98 9b 01                 a4 = a2 >> 0x1
129285: d6 8b 08                 a1 = a4 mulhu a1
129288: 98 88 04                 a1 = a1 >> 0x4
129291: 82 7c 20                 a5 = u64 [a0 + 0x20]
129294: 96 88 32                 a1 = a1 * 0x32
129297: c9 89 09                 a2 = a2 - a1
129300: 95 99 01                 a2 = a2 + 0x1
129303: 7b c9                    u64 [a5] = a2
129305: 82 78 28                 a1 = u64 [a0 + 0x28]
129308: 55 18 02 08              jump @9701 if a1 >=u 2
      :                          @9700
129312: 28 a3 fa 00              jump @13209
      :                          @9701
129316: 82 77 20                 a0 = u64 [a0 + 0x20]
129319: 49 17 08                 u64 [a0 + 8] = 0
129322: 3a 08 78 12 03           a1 = u64 [0x31278]
129327: 97 8b 0d                 a4 = a1 << 0xd
129330: d3 b8 08                 a1 = a1 ^ a4
129333: 98 8b 07                 a4 = a1 >> 0x7
129336: d3 b8 08                 a1 = a1 ^ a4
129339: 97 8b 11                 a4 = a1 << 0x11
129342: d3 8b 0b                 a4 = a4 ^ a1
129345: 3e 0b 78 12 03           u64 [0x31278] = a4
129350: 82 18 18 02              a1 = u64 [sp + 0x218]
129354: 55 18 02 08              jump @9703 if a1 >=u 2
      :                          @9702
129358: 28 3e fb 00              jump @13229
      :                          @9703
129362: 82 19 10 02              a2 = u64 [sp + 0x210]
129366: 82 98 28                 a1 = u64 [a2 + 0x28]
129369: 55 18 03 08              jump @9705 if a1 >=u 3
      :                          @9704
129373: 28 68 fa 00              jump @13211
      :                          @9705
129377: 3a 08 70 11 03           a1 = u64 [0x31170]
129382: ca ab 0b                 a4 = a4 * a3
129385: 98 bc 01                 a5 = a4 >> 0x1
129388: d6 8c 08                 a1 = a5 mulhu a1
129391: 98 88 04                 a1 = a1 >> 0x4
129394: 82 99 20                 a2 = u64 [a2 + 0x20]
129397: 96 88 32                 a1 = a1 * 0x32
129400: c9 8b 0b                 a4 = a4 - a1
129403: 95 bb 01                 a4 = a4 + 0x1
129406: 7b 9b 10                 u64 [a2 + 0x10] = a4
129409: 3a 09 78 12 03           a2 = u64 [0x31278]
129414: 97 9b 0d                 a4 = a2 << 0xd
129417: d3 b9 09                 a2 = a2 ^ a4
129420: 98 9b 07                 a4 = a2 >> 0x7
129423: d3 b9 09                 a2 = a2 ^ a4
129426: 97 9b 11                 a4 = a2 << 0x11
129429: d3 b9 09                 a2 = a2 ^ a4
129432: 3e 09 78 12 03           u64 [0x31278] = a2
129437: 82 18 18 02              a1 = u64 [sp + 0x218]
129441: 55 18 02 08              jump @9707 if a1 >=u 2
      :                          @9706
129445: 28 e7 fa 00              jump @13229
      :                          @9707
129449: 82 1b 10 02              a4 = u64 [sp + 0x210]
129453: 82 b8 28                 a1 = u64 [a4 + 0x28]
129456: 55 18 04 08              jump @9709 if a1 >=u 4
      :                          @9708
129460: 28 10 fa 00              jump @13210
      :                          @9709
129464: 3a 08 70 11 03           a1 = u64 [0x31170]
129469: ca a9 09                 a2 = a2 * a3
129472: 98 9c 01                 a5 = a2 >> 0x1
129475: d6 8c 08                 a1 = a5 mulhu a1
129478: 98 88 04                 a1 = a1 >> 0x4
129481: 82 bb 20                 a4 = u64 [a4 + 0x20]
129484: 96 88 32                 a1 = a1 * 0x32
129487: c9 89 09                 a2 = a2 - a1
129490: 95 99 01                 a2 = a2 + 0x1
129493: 7b b9 18                 u64 [a4 + 0x18] = a2
129496: 3a 09 78 12 03           a2 = u64 [0x31278]
129501: 97 9b 0d                 a4 = a2 << 0xd
129504: d3 b9 09                 a2 = a2 ^ a4
129507: 98 9b 07                 a4 = a2 >> 0x7
129510: d3 b9 09                 a2 = a2 ^ a4
129513: 97 9b 11                 a4 = a2 << 0x11
129516: d3 b9 09                 a2 = a2 ^ a4
129519: 3e 09 78 12 03           u64 [0x31278] = a2
129524: 82 18 18 02              a1 = u64 [sp + 0x218]
129528: 55 18 02 08              jump @9711 if a1 >=u 2
      :                          @9710
129532: 28 90 fa 00              jump @13229
      :                          @9711
129536: 82 17 10 02              a0 = u64 [sp + 0x210]
129540: 82 78 28                 a1 = u64 [a0 + 0x28]
129543: 55 18 05 08              jump @9713 if a1 >=u 5
      :                          @9712
129547: 28 83 fa 00              jump @13231
      :                          @9713
129551: 3a 08 70 11 03           a1 = u64 [0x31170]
129556: ca a9 09                 a2 = a2 * a3
129559: 98 9b 01                 a4 = a2 >> 0x1
129562: d6 8b 08                 a1 = a4 mulhu a1
129565: 98 88 04                 a1 = a1 >> 0x4
129568: 82 77 20                 a0 = u64 [a0 + 0x20]
129571: 96 88 32                 a1 = a1 * 0x32
129574: c9 89 09                 a2 = a2 - a1
129577: 95 99 01                 a2 = a2 + 0x1
129580: 7b 79 20                 u64 [a0 + 0x20] = a2
129583: 3a 08 78 12 03           a1 = u64 [0x31278]
129588: 97 89 0d                 a2 = a1 << 0xd
129591: d3 98 08                 a1 = a1 ^ a2
129594: 98 89 07                 a2 = a1 >> 0x7
129597: d3 98 08                 a1 = a1 ^ a2
129600: 97 89 11                 a2 = a1 << 0x11
129603: d3 89 09                 a2 = a2 ^ a1
129606: 3e 09 78 12 03           u64 [0x31278] = a2
129611: 82 18 18 02              a1 = u64 [sp + 0x218]
129615: 55 18 03 08              jump @9715 if a1 >=u 3
      :                          @9714
129619: 28 39 fa 00              jump @13229
      :                          @9715
129623: 82 18 10 02              a1 = u64 [sp + 0x210]
129627: 82 8b 40                 a4 = u64 [a1 + 0x40]
129630: 52 0b 07                 jump @9717 if a4 != 0
      :                          @9716
129633: 28 5a fa 00              jump @13274
      :                          @9717
129637: 3a 0b 70 11 03           a4 = u64 [0x31170]
129642: ca a9 09                 a2 = a2 * a3
129645: 98 9c 01                 a5 = a2 >> 0x1
129648: d6 bc 0b                 a4 = a5 mulhu a4
129651: 98 bb 04                 a4 = a4 >> 0x4
129654: 82 88 38                 a1 = u64 [a1 + 0x38]
129657: 96 bb 32                 a4 = a4 * 0x32
129660: c9 b9 09                 a2 = a2 - a4
129663: 95 99 01                 a2 = a2 + 0x1
129666: 7b 89                    u64 [a1] = a2
129668: 3a 09 78 12 03           a2 = u64 [0x31278]
129673: 97 9b 0d                 a4 = a2 << 0xd
129676: d3 b9 09                 a2 = a2 ^ a4
129679: 98 9b 07                 a4 = a2 >> 0x7
129682: d3 b9 09                 a2 = a2 ^ a4
129685: 97 9b 11                 a4 = a2 << 0x11
129688: d3 9b 0b                 a4 = a4 ^ a2
129691: 3e 0b 78 12 03           u64 [0x31278] = a4
129696: 82 18 18 02              a1 = u64 [sp + 0x218]
129700: 55 18 03 08              jump @9719 if a1 >=u 3
      :                          @9718
129704: 28 e4 f9 00              jump @13229
      :                          @9719
129708: 82 17 10 02              a0 = u64 [sp + 0x210]
129712: 82 78 40                 a1 = u64 [a0 + 0x40]
129715: 55 18 02 08              jump @9721 if a1 >=u 2
      :                          @9720
129719: 28 0c f9 00              jump @13209
      :                          @9721
129723: 3a 08 70 11 03           a1 = u64 [0x31170]
129728: ca ab 0b                 a4 = a4 * a3
129731: 98 bc 01                 a5 = a4 >> 0x1
129734: d6 8c 08                 a1 = a5 mulhu a1
129737: 98 88 04                 a1 = a1 >> 0x4
129740: 82 77 38                 a0 = u64 [a0 + 0x38]
129743: 96 88 32                 a1 = a1 * 0x32
129746: c9 8b 0b                 a4 = a4 - a1
129749: 95 bb 01                 a4 = a4 + 0x1
129752: 7b 7b 08                 u64 [a0 + 0x8] = a4
129755: 82 17 10 02              a0 = u64 [sp + 0x210]
129759: 82 78 40                 a1 = u64 [a0 + 0x40]
129762: 55 18 03 08              jump @9723 if a1 >=u 3
      :                          @9722
129766: 28 d9 f9 00              jump @13276
      :                          @9723
129770: 82 77 38                 a0 = u64 [a0 + 0x38]
129773: 49 17 10                 u64 [a0 + 16] = 0
129776: 3a 08 78 12 03           a1 = u64 [0x31278]
129781: 97 89 0d                 a2 = a1 << 0xd
129784: d3 98 08                 a1 = a1 ^ a2
129787: 98 89 07                 a2 = a1 >> 0x7
129790: d3 98 08                 a1 = a1 ^ a2
129793: 97 89 11                 a2 = a1 << 0x11
129796: d3 89 09                 a2 = a2 ^ a1
129799: 3e 09 78 12 03           u64 [0x31278] = a2
129804: 82 18 18 02              a1 = u64 [sp + 0x218]
129808: 55 18 03 08              jump @9725 if a1 >=u 3
      :                          @9724
129812: 28 78 f9 00              jump @13229
      :                          @9725
129816: 82 1b 10 02              a4 = u64 [sp + 0x210]
129820: 82 b8 40                 a1 = u64 [a4 + 0x40]
129823: 55 18 04 08              jump @9727 if a1 >=u 4
      :                          @9726
129827: 28 79 f9 00              jump @13245
      :                          @9727
129831: 3a 08 70 11 03           a1 = u64 [0x31170]
129836: ca a9 09                 a2 = a2 * a3
129839: 98 9c 01                 a5 = a2 >> 0x1
129842: d6 8c 08                 a1 = a5 mulhu a1
129845: 98 88 04                 a1 = a1 >> 0x4
129848: 82 bb 38                 a4 = u64 [a4 + 0x38]
129851: 96 88 32                 a1 = a1 * 0x32
129854: c9 89 09                 a2 = a2 - a1
129857: 95 99 01                 a2 = a2 + 0x1
129860: 7b b9 18                 u64 [a4 + 0x18] = a2
129863: 3a 09 78 12 03           a2 = u64 [0x31278]
129868: 97 9b 0d                 a4 = a2 << 0xd
129871: d3 b9 09                 a2 = a2 ^ a4
129874: 98 9b 07                 a4 = a2 >> 0x7
129877: d3 b9 09                 a2 = a2 ^ a4
129880: 97 9b 11                 a4 = a2 << 0x11
129883: d3 b9 09                 a2 = a2 ^ a4
129886: 3e 09 78 12 03           u64 [0x31278] = a2
129891: 82 18 18 02              a1 = u64 [sp + 0x218]
129895: 55 18 03 08              jump @9729 if a1 >=u 3
      :                          @9728
129899: 28 21 f9 00              jump @13229
      :                          @9729
129903: 82 17 10 02              a0 = u64 [sp + 0x210]
129907: 82 78 40                 a1 = u64 [a0 + 0x40]
129910: 55 18 05 08              jump @9731 if a1 >=u 5
      :                          @9730
129914: 28 23 f9 00              jump @13246
      :                          @9731
129918: 3a 08 70 11 03           a1 = u64 [0x31170]
129923: ca a9 09                 a2 = a2 * a3
129926: 98 9b 01                 a4 = a2 >> 0x1
129929: d6 8b 08                 a1 = a4 mulhu a1
129932: 98 88 04                 a1 = a1 >> 0x4
129935: 82 77 38                 a0 = u64 [a0 + 0x38]
129938: 96 88 32                 a1 = a1 * 0x32
129941: c9 89 09                 a2 = a2 - a1
129944: 95 99 01                 a2 = a2 + 0x1
129947: 7b 79 20                 u64 [a0 + 0x20] = a2
129950: 3a 08 78 12 03           a1 = u64 [0x31278]
129955: 97 89 0d                 a2 = a1 << 0xd
129958: d3 98 08                 a1 = a1 ^ a2
129961: 98 89 07                 a2 = a1 >> 0x7
129964: d3 98 08                 a1 = a1 ^ a2
129967: 97 89 11                 a2 = a1 << 0x11
129970: d3 89 09                 a2 = a2 ^ a1
129973: 3e 09 78 12 03           u64 [0x31278] = a2
129978: 82 18 18 02              a1 = u64 [sp + 0x218]
129982: 56 18 03 08              jump @9733 if a1 >u 3
      :                          @9732
129986: 28 ca f8 00              jump @13229
      :                          @9733
129990: 82 18 10 02              a1 = u64 [sp + 0x210]
129994: 82 8b 58                 a4 = u64 [a1 + 0x58]
129997: 52 0b 07                 jump @9735 if a4 != 0
      :                          @9734
130000: 28 eb f8 00              jump @13274
      :                          @9735
130004: 3a 0b 70 11 03           a4 = u64 [0x31170]
130009: ca a9 09                 a2 = a2 * a3
130012: 98 9c 01                 a5 = a2 >> 0x1
130015: d6 bc 0b                 a4 = a5 mulhu a4
130018: 98 bb 04                 a4 = a4 >> 0x4
130021: 82 88 50                 a1 = u64 [a1 + 0x50]
130024: 96 bb 32                 a4 = a4 * 0x32
130027: c9 b9 09                 a2 = a2 - a4
130030: 95 99 01                 a2 = a2 + 0x1
130033: 7b 89                    u64 [a1] = a2
130035: 3a 09 78 12 03           a2 = u64 [0x31278]
130040: 97 9b 0d                 a4 = a2 << 0xd
130043: d3 b9 09                 a2 = a2 ^ a4
130046: 98 9b 07                 a4 = a2 >> 0x7
130049: d3 b9 09                 a2 = a2 ^ a4
130052: 97 9b 11                 a4 = a2 << 0x11
130055: d3 b9 09                 a2 = a2 ^ a4
130058: 3e 09 78 12 03           u64 [0x31278] = a2
130063: 82 18 18 02              a1 = u64 [sp + 0x218]
130067: 55 18 04 08              jump @9737 if a1 >=u 4
      :                          @9736
130071: 28 75 f8 00              jump @13229
      :                          @9737
130075: 82 1b 10 02              a4 = u64 [sp + 0x210]
130079: 82 b8 58                 a1 = u64 [a4 + 0x58]
130082: 55 18 02 08              jump @9739 if a1 >=u 2
      :                          @9738
130086: 28 6f f8 00              jump @13238
      :                          @9739
130090: 3a 08 70 11 03           a1 = u64 [0x31170]
130095: ca a9 09                 a2 = a2 * a3
130098: 98 9c 01                 a5 = a2 >> 0x1
130101: d6 8c 08                 a1 = a5 mulhu a1
130104: 98 88 04                 a1 = a1 >> 0x4
130107: 82 bb 50                 a4 = u64 [a4 + 0x50]
130110: 96 88 32                 a1 = a1 * 0x32
130113: c9 89 09                 a2 = a2 - a1
130116: 95 99 01                 a2 = a2 + 0x1
130119: 7b b9 08                 u64 [a4 + 0x8] = a2
130122: 3a 09 78 12 03           a2 = u64 [0x31278]
130127: 97 9b 0d                 a4 = a2 << 0xd
130130: d3 b9 09                 a2 = a2 ^ a4
130133: 98 9b 07                 a4 = a2 >> 0x7
130136: d3 b9 09                 a2 = a2 ^ a4
130139: 97 9b 11                 a4 = a2 << 0x11
130142: d3 9b 0b                 a4 = a4 ^ a2
130145: 3e 0b 78 12 03           u64 [0x31278] = a4
130150: 82 18 18 02              a1 = u64 [sp + 0x218]
130154: 55 18 04 08              jump @9741 if a1 >=u 4
      :                          @9740
130158: 28 1e f8 00              jump @13229
      :                          @9741
130162: 82 17 10 02              a0 = u64 [sp + 0x210]
130166: 82 78 58                 a1 = u64 [a0 + 0x58]
130169: 55 18 03 08              jump @9743 if a1 >=u 3
      :                          @9742
130173: 28 19 f8 00              jump @13239
      :                          @9743
130177: 3a 08 70 11 03           a1 = u64 [0x31170]
130182: ca ab 0b                 a4 = a4 * a3
130185: 98 bc 01                 a5 = a4 >> 0x1
130188: d6 8c 08                 a1 = a5 mulhu a1
130191: 98 88 04                 a1 = a1 >> 0x4
130194: 82 77 50                 a0 = u64 [a0 + 0x50]
130197: 96 88 32                 a1 = a1 * 0x32
130200: c9 8b 0b                 a4 = a4 - a1
130203: 95 bb 01                 a4 = a4 + 0x1
130206: 7b 7b 10                 u64 [a0 + 0x10] = a4
130209: 82 1b 10 02              a4 = u64 [sp + 0x210]
130213: 82 b8 58                 a1 = u64 [a4 + 0x58]
130216: 55 18 04 08              jump @9745 if a1 >=u 4
      :                          @9744
130220: 28 13 f8 00              jump @13276
      :                          @9745
130224: 82 b8 50                 a1 = u64 [a4 + 0x50]
130227: 49 18 18                 u64 [a1 + 24] = 0
130230: 3a 09 78 12 03           a2 = u64 [0x31278]
130235: 97 9b 0d                 a4 = a2 << 0xd
130238: d3 b9 09                 a2 = a2 ^ a4
130241: 98 9b 07                 a4 = a2 >> 0x7
130244: d3 b9 09                 a2 = a2 ^ a4
130247: 97 9b 11                 a4 = a2 << 0x11
130250: d3 9b 0b                 a4 = a4 ^ a2
130253: 3e 0b 78 12 03           u64 [0x31278] = a4
130258: 82 18 18 02              a1 = u64 [sp + 0x218]
130262: 55 18 04 08              jump @9747 if a1 >=u 4
      :                          @9746
130266: 28 c2 f7 00              jump @13245
      :                          @9747
130270: 82 17 10 02              a0 = u64 [sp + 0x210]
130274: 82 78 58                 a1 = u64 [a0 + 0x58]
130277: 55 18 05 08              jump @9749 if a1 >=u 5
      :                          @9748
130281: 28 b4 f7 00              jump @13246
      :                          @9749
130285: 3a 08 70 11 03           a1 = u64 [0x31170]
130290: ca ab 0b                 a4 = a4 * a3
130293: 98 bc 01                 a5 = a4 >> 0x1
130296: d6 8c 08                 a1 = a5 mulhu a1
130299: 98 88 04                 a1 = a1 >> 0x4
130302: 82 77 50                 a0 = u64 [a0 + 0x50]
130305: 96 88 32                 a1 = a1 * 0x32
130308: c9 8b 0b                 a4 = a4 - a1
130311: 95 bb 01                 a4 = a4 + 0x1
130314: 7b 7b 20                 u64 [a0 + 0x20] = a4
130317: 3a 08 78 12 03           a1 = u64 [0x31278]
130322: 97 8b 0d                 a4 = a1 << 0xd
130325: d3 b8 08                 a1 = a1 ^ a4
130328: 98 8b 07                 a4 = a1 >> 0x7
130331: d3 b8 08                 a1 = a1 ^ a4
130334: 97 8b 11                 a4 = a1 << 0x11
130337: d3 8b 0b                 a4 = a4 ^ a1
130340: 3e 0b 78 12 03           u64 [0x31278] = a4
130345: 82 18 18 02              a1 = u64 [sp + 0x218]
130349: 55 18 05 08              jump @9751 if a1 >=u 5
      :                          @9750
130353: 28 5b f7 00              jump @13229
      :                          @9751
130357: 82 18 10 02              a1 = u64 [sp + 0x210]
130361: 82 89 70                 a2 = u64 [a1 + 0x70]
130364: 52 09 07                 jump @9753 if a2 != 0
      :                          @9752
130367: 28 88 f7 00              jump @13284
      :                          @9753
130371: 3a 09 70 11 03           a2 = u64 [0x31170]
130376: ca ab 0b                 a4 = a4 * a3
130379: 98 bc 01                 a5 = a4 >> 0x1
130382: d6 9c 09                 a2 = a5 mulhu a2
130385: 98 99 04                 a2 = a2 >> 0x4
130388: 82 88 68                 a1 = u64 [a1 + 0x68]
130391: 96 99 32                 a2 = a2 * 0x32
130394: c9 9b 0b                 a4 = a4 - a2
130397: 95 bb 01                 a4 = a4 + 0x1
130400: 7b 8b                    u64 [a1] = a4
130402: 3a 09 78 12 03           a2 = u64 [0x31278]
130407: 97 9b 0d                 a4 = a2 << 0xd
130410: d3 b9 09                 a2 = a2 ^ a4
130413: 98 9b 07                 a4 = a2 >> 0x7
130416: d3 b9 09                 a2 = a2 ^ a4
130419: 97 9b 11                 a4 = a2 << 0x11
130422: d3 9b 0b                 a4 = a4 ^ a2
130425: 3e 0b 78 12 03           u64 [0x31278] = a4
130430: 82 18 18 02              a1 = u64 [sp + 0x218]
130434: 55 18 05 08              jump @9755 if a1 >=u 5
      :                          @9754
130438: 28 06 f7 00              jump @13229
      :                          @9755
130442: 82 1c 10 02              a5 = u64 [sp + 0x210]
130446: 82 c8 70                 a1 = u64 [a5 + 0x70]
130449: 55 18 02 08              jump @9757 if a1 >=u 2
      :                          @9756
130453: 28 2a f7 00              jump @13276
      :                          @9757
130457: 3a 08 70 11 03           a1 = u64 [0x31170]
130462: ca ab 09                 a2 = a4 * a3
130465: 98 9b 01                 a4 = a2 >> 0x1
130468: d6 8b 08                 a1 = a4 mulhu a1
130471: 98 88 04                 a1 = a1 >> 0x4
130474: 82 cc 68                 a5 = u64 [a5 + 0x68]
130477: 96 88 32                 a1 = a1 * 0x32
130480: c9 89 09                 a2 = a2 - a1
130483: 95 99 01                 a2 = a2 + 0x1
130486: 7b c9 08                 u64 [a5 + 0x8] = a2
130489: 3a 09 78 12 03           a2 = u64 [0x31278]
130494: 97 9b 0d                 a4 = a2 << 0xd
130497: d3 b9 09                 a2 = a2 ^ a4
130500: 98 9b 07                 a4 = a2 >> 0x7
130503: d3 b9 09                 a2 = a2 ^ a4
130506: 97 9b 11                 a4 = a2 << 0x11
130509: d3 b9 09                 a2 = a2 ^ a4
130512: 3e 09 78 12 03           u64 [0x31278] = a2
130517: 82 18 18 02              a1 = u64 [sp + 0x218]
130521: 55 18 05 08              jump @9759 if a1 >=u 5
      :                          @9758
130525: 28 af f6 00              jump @13229
      :                          @9759
130529: 82 1b 10 02              a4 = u64 [sp + 0x210]
130533: 82 b8 70                 a1 = u64 [a4 + 0x70]
130536: 55 18 03 08              jump @9761 if a1 >=u 3
      :                          @9760
130540: 28 aa f6 00              jump @13239
      :                          @9761
130544: 3a 08 70 11 03           a1 = u64 [0x31170]
130549: ca a9 09                 a2 = a2 * a3
130552: 98 9c 01                 a5 = a2 >> 0x1
130555: d6 8c 08                 a1 = a5 mulhu a1
130558: 98 88 04                 a1 = a1 >> 0x4
130561: 82 bb 68                 a4 = u64 [a4 + 0x68]
130564: 96 88 32                 a1 = a1 * 0x32
130567: c9 89 09                 a2 = a2 - a1
130570: 95 99 01                 a2 = a2 + 0x1
130573: 7b b9 10                 u64 [a4 + 0x10] = a2
130576: 3a 09 78 12 03           a2 = u64 [0x31278]
130581: 97 9b 0d                 a4 = a2 << 0xd
130584: d3 b9 09                 a2 = a2 ^ a4
130587: 98 9b 07                 a4 = a2 >> 0x7
130590: d3 b9 09                 a2 = a2 ^ a4
130593: 97 9b 11                 a4 = a2 << 0x11
130596: d3 9b 0b                 a4 = a4 ^ a2
130599: 3e 0b 78 12 03           u64 [0x31278] = a4
130604: 82 18 18 02              a1 = u64 [sp + 0x218]
130608: 55 18 05 08              jump @9763 if a1 >=u 5
      :                          @9762
130612: 28 58 f6 00              jump @13229
      :                          @9763
130616: 82 17 10 02              a0 = u64 [sp + 0x210]
130620: 82 78 70                 a1 = u64 [a0 + 0x70]
130623: 55 18 04 08              jump @9765 if a1 >=u 4
      :                          @9764
130627: 28 59 f6 00              jump @13245
      :                          @9765
130631: 3a 08 70 11 03           a1 = u64 [0x31170]
130636: ca ab 0a                 a3 = a4 * a3
130639: 98 ab 01                 a4 = a3 >> 0x1
130642: d6 8b 08                 a1 = a4 mulhu a1
130645: 98 88 04                 a1 = a1 >> 0x4
130648: 33 0b 32                 a4 = 0x32
130651: 82 77 68                 a0 = u64 [a0 + 0x68]
130654: ca b8 08                 a1 = a1 * a4
130657: c9 8a 0a                 a3 = a3 - a1
130660: 95 aa 01                 a3 = a3 + 0x1
130663: 7b 7a 18                 u64 [a0 + 0x18] = a3
130666: 82 17 10 02              a0 = u64 [sp + 0x210]
130670: 82 78 70                 a1 = u64 [a0 + 0x70]
130673: 55 18 05 08              jump @9767 if a1 >=u 5
      :                          @9766
130677: 28 4a f6 00              jump @13276
      :                          @9767
130681: 82 77 68                 a0 = u64 [a0 + 0x68]
130684: 49 17 20                 u64 [a0 + 32] = 0
130687: 95 17 08 02              a0 = sp + 0x208
130691: 50 20 78 06 20 31 ff     ra = 1656, jump @6070
      :                          @9768 [@dyn 828]
130698: 7b 17 20 01              u64 [sp + 0x120] = a0
130702: 95 17 20 01              a0 = sp + 0x120
130706: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
130710: 33 07 2c 0c              a0 = 0xc2c
130714: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
130718: 33 07 58 11 01           a0 = 0x11158
130723: 7b 17 90 02              u64 [sp + 0x290] = a0
130727: 49 21 98 02 01           u64 [sp + 664] = 0x1
130732: 49 21 b0 02              u64 [sp + 688] = 0
130736: 95 18 e0 01              a1 = sp + 0x1e0
130740: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
130744: 49 21 a8 02 01           u64 [sp + 680] = 0x1
130749: 95 17 38 02              a0 = sp + 0x238
130753: 95 18 90 02              a1 = sp + 0x290
130757: 50 20 7a 06 35 51 fe     ra = 1658, jump @1503
      :                          @9769 [@dyn 829]
130764: 82 16 40 02              s1 = u64 [sp + 0x240]
130768: 82 1b 48 02              a4 = u64 [sp + 0x248]
130772: 82 17 38 02              a0 = u64 [sp + 0x238]
130776: 7b 17 70                 u64 [sp + 0x70] = a0
130779: 33 07 02                 a0 = 0x2
130782: 33 08                    a1 = 0
130784: 33 09                    a2 = 0
130786: 64 6a                    a3 = s1
130788: 33 00 7c 06              ra = 0x67c
130792: 0a 64                    ecalli 100 // 'log'
130794: 01                       fallthrough
      :                          @9770 [@dyn 830]
130795: 82 1c 70                 a5 = u64 [sp + 0x70]
130798: 82 17 68                 a0 = u64 [sp + 0x68]
130801: c8 c7 07                 a0 = a0 + a5
130804: 33 08 00 00 ff           a1 = 0xffffffffffff0000
130809: ae 87 07                 jump @9772 if a0 >=u a1
      :                          @9771
130812: 28 8f de 00              jump @12767
      :                          @9772
130816: 33 07 c0 22 03           a0 = 0x322c0
130821: 95 77 00 00 01           a0 = a0 + 0x10000
130826: 01                       fallthrough
      :                          @9773
130827: 82 78                    a1 = u64 [a0]
130829: c9 87 09                 a2 = a0 - a1
130832: aa 69 07                 jump @9775 if a2 == s1
      :                          @9774
130835: 28 78 de 00              jump @12767
      :                          @9775
130839: c9 c8 09                 a2 = a1 - a5
130842: 01                       fallthrough
      :                          @9776
130843: 82 7a                    a3 = u64 [a0]
130845: ab 8a ee                 jump @9773 if a3 != a1
      :                          @9777
130848: 7b 79                    u64 [a0] = a2
130850: 33 0b                    a4 = 0
130852: 01                       fallthrough
      :                          @9778
130853: ab 8a e6                 jump @9773 if a3 != a1
      :                          @9779
130856: 28 63 de 00              jump @12767
      :                          @9780 [@dyn 831]
130860: 95 17 08 02              a0 = sp + 0x208
130864: 33 00 80 06              ra = 0x680
130868: 95 11 f8                 sp = sp + 0xfffffffffffffff8
130871: 7b 15                    u64 [sp] = s0
130873: 33 03 c0 22 03           t1 = 0x322c0
130878: 33 02 00 00 01           t0 = 0x10000
130883: c8 23 04                 t2 = t1 + t0
130886: 28 33 77 fe              jump @2184
      :                          @9781 [@dyn 832]
130890: 82 17 10 02              a0 = u64 [sp + 0x210]
130894: 82 18 18 02              a1 = u64 [sp + 0x218]
130898: 7b 17 70                 u64 [sp + 0x70] = a0
130901: 33 00 82 06              ra = 0x682
130905: 95 11 c0                 sp = sp + 0xffffffffffffffc0
130908: 7b 10 38                 u64 [sp + 0x38] = ra
130911: 7b 15 30                 u64 [sp + 0x30] = s0
130914: 7b 16 28                 u64 [sp + 0x28] = s1
130917: 64 86                    s1 = a1
130919: 64 75                    s0 = a0
130921: 68 87                    a0 = clz a1
130923: 9a 7a 40                 a3 = 0x40 - a0
130926: 64 57                    a0 = s0
130928: 33 09                    a2 = 0
130930: 33 00 cc 03              ra = 0x3cc
130934: 28 d1 2c fe              jump @891
      :                          @9782 [@dyn 833]
130938: 7b 17 20 01              u64 [sp + 0x120] = a0
130942: 95 17 20 01              a0 = sp + 0x120
130946: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
130950: 33 07 2c 0c              a0 = 0xc2c
130954: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
130958: 33 07 80 11 01           a0 = 0x11180
130963: 7b 17 90 02              u64 [sp + 0x290] = a0
130967: 49 21 98 02 01           u64 [sp + 664] = 0x1
130972: 49 21 b0 02              u64 [sp + 688] = 0
130976: 95 18 e0 01              a1 = sp + 0x1e0
130980: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
130984: 49 21 a8 02 01           u64 [sp + 680] = 0x1
130989: 95 17 38 02              a0 = sp + 0x238
130993: 95 18 90 02              a1 = sp + 0x290
130997: 50 20 84 06 45 50 fe     ra = 1668, jump @1503
      :                          @9783 [@dyn 834]
131004: 82 16 40 02              s1 = u64 [sp + 0x240]
131008: 82 1b 48 02              a4 = u64 [sp + 0x248]
131012: 82 17 38 02              a0 = u64 [sp + 0x238]
131016: 7b 17 60                 u64 [sp + 0x60] = a0
131019: 33 07 02                 a0 = 0x2
131022: 33 08                    a1 = 0
131024: 33 09                    a2 = 0
131026: 64 6a                    a3 = s1
131028: 33 00 86 06              ra = 0x686
131032: 0a 64                    ecalli 100 // 'log'
131034: 01                       fallthrough
      :                          @9784 [@dyn 835]
131035: 82 1c 60                 a5 = u64 [sp + 0x60]
131038: 82 17 68                 a0 = u64 [sp + 0x68]
131041: c8 c7 07                 a0 = a0 + a5
131044: 53 37 00 00 ff 25        jump @9790 if a0 <u 4294901760
      :                          @9785
131050: 33 07 c0 22 03           a0 = 0x322c0
131055: 95 77 00 00 01           a0 = a0 + 0x10000
131060: 01                       fallthrough
      :                          @9786
131061: 82 78                    a1 = u64 [a0]
131063: c9 87 09                 a2 = a0 - a1
131066: ab 69 0f                 jump @9790 if a2 != s1
      :                          @9787
131069: c9 c8 09                 a2 = a1 - a5
131072: 01                       fallthrough
      :                          @9788
131073: 82 7a                    a3 = u64 [a0]
131075: ab 8a f2                 jump @9786 if a3 != a1
      :                          @9789
131078: 7b 79                    u64 [a0] = a2
131080: 01                       fallthrough
      :                          @9790
131081: 82 17 08 02              a0 = u64 [sp + 0x208]
131085: 82 16 70                 s1 = u64 [sp + 0x70]
131088: 52 07 07                 jump @9792 if a0 != 0
      :                          @9791
131091: 28 70 e2 00              jump @12868
      :                          @9792
131095: 54 27 00 20 09           jump @9794 if a0 <=u 8192
      :                          @9793
131100: 28 67 e2 00              jump @12868
      :                          @9794
131104: 97 77 03                 a0 = a0 << 0x3
131107: 33 08 c0 22 03           a1 = 0x322c0
131112: 95 88 00 00 01           a1 = a1 + 0x10000
131117: 01                       fallthrough
      :                          @9795
131118: 82 89                    a2 = u64 [a1]
131120: c9 98 0a                 a3 = a1 - a2
131123: aa 6a 07                 jump @9797 if a3 == s1
      :                          @9796
131126: 28 4d e2 00              jump @12868
      :                          @9797
131130: c9 79 0a                 a3 = a2 - a0
131133: 01                       fallthrough
      :                          @9798
131134: 82 8b                    a4 = u64 [a1]
131136: ab 9b ee                 jump @9795 if a4 != a2
      :                          @9799
131139: 7b 8a                    u64 [a1] = a3
131141: 33 0c                    a5 = 0
131143: 01                       fallthrough
      :                          @9800
131144: ab 9b e6                 jump @9795 if a4 != a2
      :                          @9801
131147: 28 38 e2 00              jump @12868
      :                          @9802 [@dyn 836]
131151: 95 17 90 02              a0 = sp + 0x290
131155: 33 08 0a                 a1 = 0xa
131158: 50 20 8a 06 e2 63 fe     ra = 1674, jump @1882
      :                          @9803 [@dyn 837]
131165: 95 17 08 02              a0 = sp + 0x208
131169: 95 18 90 02              a1 = sp + 0x290
131173: 33 09 0a                 a2 = 0xa
131176: 50 20 8c 06 1b 65 fe     ra = 1676, jump @1907
      :                          @9804 [@dyn 838]
131183: 49 11 70                 u64 [sp + 112] = 0
131186: 33 07                    a0 = 0
131188: 33 04 01                 t2 = 0x1
131191: 33 0b 78 12 03           a4 = 0x31278
131196: 33 00 18                 ra = 0x18
131199: 28 1b                    jump @9807
      :                          @9805
131201: 95 77 01                 a0 = a0 + 0x1
131204: 95 44 01                 t2 = t2 + 0x1
131207: 82 18 70                 a1 = u64 [sp + 0x70]
131210: 95 88 18                 a1 = a1 + 0x18
131213: 7b 18 70                 u64 [sp + 0x70] = a1
131216: 33 08 0a                 a1 = 0xa
131219: ab 87 07                 jump @9807 if a0 != a1
      :                          @9806
131222: 28 b0 df 00              jump @12827
      :                          @9807
131226: 56 17 08 e7              jump @9805 if a0 >u 8
      :                          @9808
131230: 82 16 70                 s1 = u64 [sp + 0x70]
131233: 64 49                    a2 = t2
131235: 01                       fallthrough
      :                          @9809
131236: 3a 08 78 12 03           a1 = u64 [0x31278]
131241: 97 8a 0d                 a3 = a1 << 0xd
131244: d3 a8 08                 a1 = a1 ^ a3
131247: 98 8c 07                 a5 = a1 >> 0x7
131250: d3 8c 0c                 a5 = a5 ^ a1
131253: 97 c8 11                 a1 = a5 << 0x11
131256: d3 c8 08                 a1 = a1 ^ a5
131259: 3e 08 78 12 03           u64 [0x31278] = a1
131264: 82 18 18 02              a1 = u64 [sp + 0x218]
131268: ac 87 07                 jump @9811 if a0 <u a1
      :                          @9810
131271: 28 c5 f3 00              jump @13229
      :                          @9811
131275: 82 13 10 02              t1 = u64 [sp + 0x210]
131279: ca 07 02                 t0 = a0 * ra
131282: c8 32 02                 t0 = t0 + t1
131285: 82 2a 10                 a3 = u64 [t0 + 0x10]
131288: ac a9 07                 jump @9813 if a2 <u a3
      :                          @9812
131291: 28 6a df 00              jump @12826
      :                          @9813
131295: 82 2a 08                 a3 = u64 [t0 + 0x8]
131298: c8 9a 0a                 a3 = a3 + a2
131301: 84 cc 01                 a5 = a5 & 0x1
131304: 78 ac                    u8 [a3] = a5
131306: ac 89 07                 jump @9815 if a2 <u a1
      :                          @9814
131309: 28 d2 f3 00              jump @13276
      :                          @9815
131313: c8 63 03                 t1 = t1 + s1
131316: 82 38 28                 a1 = u64 [t1 + 0x28]
131319: ac 87 07                 jump @9817 if a0 <u a1
      :                          @9816
131322: 28 92 f3 00              jump @13229
      :                          @9817
131326: 82 38 20                 a1 = u64 [t1 + 0x20]
131329: c8 78 08                 a1 = a1 + a0
131332: 78 8c                    u8 [a1] = a5
131334: 95 99 01                 a2 = a2 + 0x1
131337: 95 66 18                 s1 = s1 + 0x18
131340: 52 19 0a 98              jump @9809 if a2 != 10
      :                          @9818
131344: 28 71 ff                 jump @9805
      :                          @9819 [@dyn 839]
131347: 95 17 90 02              a0 = sp + 0x290
131351: 33 08 08                 a1 = 0x8
131354: 50 20 90 06 1e 63 fe     ra = 1680, jump @1882
      :                          @9820 [@dyn 840]
131361: 95 17 e0 01              a0 = sp + 0x1e0
131365: 95 18 90 02              a1 = sp + 0x290
131369: 33 09 08                 a2 = 0x8
131372: 50 20 92 06 57 64 fe     ra = 1682, jump @1907
      :                          @9821 [@dyn 841]
131379: 49 11 70                 u64 [sp + 112] = 0
131382: 33 07                    a0 = 0
131384: 33 04 01                 t2 = 0x1
131387: 33 0b 78 12 03           a4 = 0x31278
131392: 33 00 18                 ra = 0x18
131395: 28 19                    jump @9824
      :                          @9822
131397: 95 77 01                 a0 = a0 + 0x1
131400: 95 44 01                 t2 = t2 + 0x1
131403: 82 18 70                 a1 = u64 [sp + 0x70]
131406: 95 88 18                 a1 = a1 + 0x18
131409: 7b 18 70                 u64 [sp + 0x70] = a1
131412: 52 17 08 08              jump @9824 if a0 != 8
      :                          @9823
131416: 28 94 df 00              jump @12838
      :                          @9824
131420: 56 17 06 e9              jump @9822 if a0 >u 6
      :                          @9825
131424: 82 16 70                 s1 = u64 [sp + 0x70]
131427: 64 49                    a2 = t2
131429: 01                       fallthrough
      :                          @9826
131430: 3a 08 78 12 03           a1 = u64 [0x31278]
131435: 97 8a 0d                 a3 = a1 << 0xd
131438: d3 a8 08                 a1 = a1 ^ a3
131441: 98 8c 07                 a5 = a1 >> 0x7
131444: d3 8c 0c                 a5 = a5 ^ a1
131447: 97 c8 11                 a1 = a5 << 0x11
131450: d3 c8 08                 a1 = a1 ^ a5
131453: 3e 08 78 12 03           u64 [0x31278] = a1
131458: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
131462: ac 87 07                 jump @9828 if a0 <u a1
      :                          @9827
131465: 28 03 f3 00              jump @13229
      :                          @9828
131469: 82 13 e8 01              t1 = u64 [sp + 0x1e8]
131473: ca 07 02                 t0 = a0 * ra
131476: c8 32 02                 t0 = t0 + t1
131479: 82 2a 10                 a3 = u64 [t0 + 0x10]
131482: ac a9 07                 jump @9830 if a2 <u a3
      :                          @9829
131485: 28 a8 de 00              jump @12826
      :                          @9830
131489: 82 2a 08                 a3 = u64 [t0 + 0x8]
131492: c8 9a 0a                 a3 = a3 + a2
131495: 84 cc 01                 a5 = a5 & 0x1
131498: 78 ac                    u8 [a3] = a5
131500: ac 89 07                 jump @9832 if a2 <u a1
      :                          @9831
131503: 28 10 f3 00              jump @13276
      :                          @9832
131507: c8 63 03                 t1 = t1 + s1
131510: 82 38 28                 a1 = u64 [t1 + 0x28]
131513: ac 87 07                 jump @9834 if a0 <u a1
      :                          @9833
131516: 28 d0 f2 00              jump @13229
      :                          @9834
131520: 82 38 20                 a1 = u64 [t1 + 0x20]
131523: c8 78 08                 a1 = a1 + a0
131526: 78 8c                    u8 [a1] = a5
131528: 95 99 01                 a2 = a2 + 0x1
131531: 95 66 18                 s1 = s1 + 0x18
131534: 52 19 08 98              jump @9826 if a2 != 8
      :                          @9835
131538: 28 73 ff                 jump @9822
      :                          @9836 [@dyn 842]
131541: 95 17 90 02              a0 = sp + 0x290
131545: 33 09 06                 a2 = 0x6
131548: 33 08                    a1 = 0
131550: 50 20 96 06 c6 62 fe     ra = 1686, jump @1889
      :                          @9837 [@dyn 843]
131557: 95 17 b0 01              a0 = sp + 0x1b0
131561: 95 18 90 02              a1 = sp + 0x290
131565: 33 09 06                 a2 = 0x6
131568: 50 20 98 06 01 58 fe     ra = 1688, jump @1721
      :                          @9838 [@dyn 844]
131575: 3a 07 78 12 03           a0 = u64 [0x31278]
131580: 97 79 0d                 a2 = a0 << 0xd
131583: d3 97 07                 a0 = a0 ^ a2
131586: 98 79 07                 a2 = a0 >> 0x7
131589: d3 97 07                 a0 = a0 ^ a2
131592: 97 79 11                 a2 = a0 << 0x11
131595: d3 97 07                 a0 = a0 ^ a2
131598: 3e 07 78 12 03           u64 [0x31278] = a0
131603: 82 1c c0 01              a5 = u64 [sp + 0x1c0]
131607: 52 0c 07                 jump @9840 if a5 != 0
      :                          @9839
131610: 28 7a f2 00              jump @13237
      :                          @9840
131614: 82 1b b8 01              a4 = u64 [sp + 0x1b8]
131618: 82 b9 10                 a2 = u64 [a4 + 0x10]
131621: 56 19 01 08              jump @9842 if a2 >u 1
      :                          @9841
131625: 28 76 f2 00              jump @13248
      :                          @9842
131629: 3a 02 60 11 03           t0 = u64 [0x31160]
131634: ca 27 07                 a0 = a0 * t0
131637: 14 08 cd cc cc cc cc cc cc cc a1 = 0xcccccccccccccccd
131647: d6 87 08                 a1 = a0 mulhu a1
131650: 98 88 04                 a1 = a1 >> 0x4
131653: 82 ba 08                 a3 = u64 [a4 + 0x8]
131656: 96 88 14                 a1 = a1 * 0x14
131659: c9 87 07                 a0 = a0 - a1
131662: 95 79 01                 a2 = a0 + 0x1
131665: 7b a9 08                 u64 [a3 + 0x8] = a2
131668: 56 1c 01 08              jump @9844 if a5 >u 1
      :                          @9843
131672: 28 34 f2 00              jump @13229
      :                          @9844
131676: 82 b7 28                 a0 = u64 [a4 + 0x28]
131679: 52 07 07                 jump @9846 if a0 != 0
      :                          @9845
131682: 28 41 f2 00              jump @13252
      :                          @9846
131686: 82 b7 20                 a0 = u64 [a4 + 0x20]
131689: 7b 79                    u64 [a0] = a2
131691: 3a 08 78 12 03           a1 = u64 [0x31278]
131696: 97 89 0d                 a2 = a1 << 0xd
131699: d3 98 08                 a1 = a1 ^ a2
131702: 98 89 07                 a2 = a1 >> 0x7
131705: d3 98 08                 a1 = a1 ^ a2
131708: 97 8b 11                 a4 = a1 << 0x11
131711: d3 8b 0b                 a4 = a4 ^ a1
131714: 3e 0b 78 12 03           u64 [0x31278] = a4
131719: 82 18 c0 01              a1 = u64 [sp + 0x1c0]
131723: 52 08 07                 jump @9848 if a1 != 0
      :                          @9847
131726: 28 fd f1 00              jump @13228
      :                          @9848
131730: 82 17 b8 01              a0 = u64 [sp + 0x1b8]
131734: 82 79 10                 a2 = u64 [a0 + 0x10]
131737: 55 19 03 08              jump @9850 if a2 >=u 3
      :                          @9849
131741: 28 0e f2 00              jump @13260
      :                          @9850
131745: ca 2b 09                 a2 = a4 * t0
131748: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
131758: d6 b9 0b                 a4 = a2 mulhu a4
131761: 98 bb 04                 a4 = a4 >> 0x4
131764: 82 76 08                 s1 = u64 [a0 + 0x8]
131767: 96 bb 14                 a4 = a4 * 0x14
131770: c9 b9 09                 a2 = a2 - a4
131773: 95 99 01                 a2 = a2 + 0x1
131776: 7b 69 10                 u64 [s1 + 0x10] = a2
131779: 55 18 03 08              jump @9852 if a1 >=u 3
      :                          @9851
131783: 28 fe f0 00              jump @13211
      :                          @9852
131787: 82 78 40                 a1 = u64 [a0 + 0x40]
131790: 52 08 07                 jump @9854 if a1 != 0
      :                          @9853
131793: 28 ba f1 00              jump @13228
      :                          @9854
131797: 82 77 38                 a0 = u64 [a0 + 0x38]
131800: 7b 79                    u64 [a0] = a2
131802: 3a 08 78 12 03           a1 = u64 [0x31278]
131807: 97 89 0d                 a2 = a1 << 0xd
131810: d3 98 08                 a1 = a1 ^ a2
131813: 98 89 07                 a2 = a1 >> 0x7
131816: d3 98 08                 a1 = a1 ^ a2
131819: 97 8b 11                 a4 = a1 << 0x11
131822: d3 8b 0b                 a4 = a4 ^ a1
131825: 3e 0b 78 12 03           u64 [0x31278] = a4
131830: 82 18 c0 01              a1 = u64 [sp + 0x1c0]
131834: 52 08 07                 jump @9856 if a1 != 0
      :                          @9855
131837: 28 8e f1 00              jump @13228
      :                          @9856
131841: 82 17 b8 01              a0 = u64 [sp + 0x1b8]
131845: 82 79 10                 a2 = u64 [a0 + 0x10]
131848: 55 19 04 08              jump @9858 if a2 >=u 4
      :                          @9857
131852: 28 92 f1 00              jump @13247
      :                          @9858
131856: ca 2b 09                 a2 = a4 * t0
131859: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
131869: d6 b9 0b                 a4 = a2 mulhu a4
131872: 98 bb 04                 a4 = a4 >> 0x4
131875: 82 76 08                 s1 = u64 [a0 + 0x8]
131878: 96 bb 14                 a4 = a4 * 0x14
131881: c9 b9 09                 a2 = a2 - a4
131884: 95 99 01                 a2 = a2 + 0x1
131887: 7b 69 18                 u64 [s1 + 0x18] = a2
131890: 55 18 04 08              jump @9860 if a1 >=u 4
      :                          @9859
131894: 28 8e f0 00              jump @13210
      :                          @9860
131898: 82 78 58                 a1 = u64 [a0 + 0x58]
131901: 52 08 07                 jump @9862 if a1 != 0
      :                          @9861
131904: 28 4b f1 00              jump @13228
      :                          @9862
131908: 82 77 50                 a0 = u64 [a0 + 0x50]
131911: 7b 79                    u64 [a0] = a2
131913: 3a 08 78 12 03           a1 = u64 [0x31278]
131918: 97 89 0d                 a2 = a1 << 0xd
131921: d3 98 08                 a1 = a1 ^ a2
131924: 98 89 07                 a2 = a1 >> 0x7
131927: d3 98 08                 a1 = a1 ^ a2
131930: 97 8b 11                 a4 = a1 << 0x11
131933: d3 8b 0b                 a4 = a4 ^ a1
131936: 3e 0b 78 12 03           u64 [0x31278] = a4
131941: 82 18 c0 01              a1 = u64 [sp + 0x1c0]
131945: 52 08 07                 jump @9864 if a1 != 0
      :                          @9863
131948: 28 1f f1 00              jump @13228
      :                          @9864
131952: 82 17 b8 01              a0 = u64 [sp + 0x1b8]
131956: 82 79 10                 a2 = u64 [a0 + 0x10]
131959: 55 19 05 08              jump @9866 if a2 >=u 5
      :                          @9865
131963: 28 31 f1 00              jump @13261
      :                          @9866
131967: ca 2b 09                 a2 = a4 * t0
131970: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
131980: d6 b9 0b                 a4 = a2 mulhu a4
131983: 98 bb 04                 a4 = a4 >> 0x4
131986: 82 76 08                 s1 = u64 [a0 + 0x8]
131989: 96 bb 14                 a4 = a4 * 0x14
131992: c9 b9 09                 a2 = a2 - a4
131995: 95 99 01                 a2 = a2 + 0x1
131998: 7b 69 20                 u64 [s1 + 0x20] = a2
132001: 55 18 05 08              jump @9868 if a1 >=u 5
      :                          @9867
132005: 28 e9 f0 00              jump @13231
      :                          @9868
132009: 82 78 70                 a1 = u64 [a0 + 0x70]
132012: 52 08 07                 jump @9870 if a1 != 0
      :                          @9869
132015: 28 dc f0 00              jump @13228
      :                          @9870
132019: 82 77 68                 a0 = u64 [a0 + 0x68]
132022: 7b 79                    u64 [a0] = a2
132024: 3a 08 78 12 03           a1 = u64 [0x31278]
132029: 97 89 0d                 a2 = a1 << 0xd
132032: d3 98 08                 a1 = a1 ^ a2
132035: 98 89 07                 a2 = a1 >> 0x7
132038: d3 98 08                 a1 = a1 ^ a2
132041: 97 8b 11                 a4 = a1 << 0x11
132044: d3 8b 0b                 a4 = a4 ^ a1
132047: 3e 0b 78 12 03           u64 [0x31278] = a4
132052: 82 18 c0 01              a1 = u64 [sp + 0x1c0]
132056: 52 08 07                 jump @9872 if a1 != 0
      :                          @9871
132059: 28 b0 f0 00              jump @13228
      :                          @9872
132063: 82 17 b8 01              a0 = u64 [sp + 0x1b8]
132067: 82 79 10                 a2 = u64 [a0 + 0x10]
132070: 55 19 06 08              jump @9874 if a2 >=u 6
      :                          @9873
132074: 28 c9 f0 00              jump @13266
      :                          @9874
132078: ca 2b 09                 a2 = a4 * t0
132081: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
132091: d6 b9 0b                 a4 = a2 mulhu a4
132094: 98 bb 04                 a4 = a4 >> 0x4
132097: 82 76 08                 s1 = u64 [a0 + 0x8]
132100: 96 bb 14                 a4 = a4 * 0x14
132103: c9 b9 09                 a2 = a2 - a4
132106: 95 99 01                 a2 = a2 + 0x1
132109: 7b 69 28                 u64 [s1 + 0x28] = a2
132112: 55 18 06 08              jump @9876 if a1 >=u 6
      :                          @9875
132116: 28 7e f0 00              jump @13235
      :                          @9876
132120: 82 78 88 00              a1 = u64 [a0 + 0x88]
132124: 52 08 07                 jump @9878 if a1 != 0
      :                          @9877
132127: 28 6c f0 00              jump @13228
      :                          @9878
132131: 82 77 80 00              a0 = u64 [a0 + 0x80]
132135: 7b 79                    u64 [a0] = a2
132137: 3a 08 78 12 03           a1 = u64 [0x31278]
132142: 97 89 0d                 a2 = a1 << 0xd
132145: d3 98 08                 a1 = a1 ^ a2
132148: 98 89 07                 a2 = a1 >> 0x7
132151: d3 98 08                 a1 = a1 ^ a2
132154: 97 8c 11                 a5 = a1 << 0x11
132157: d3 8c 0c                 a5 = a5 ^ a1
132160: 3e 0c 78 12 03           u64 [0x31278] = a5
132165: 82 18 c0 01              a1 = u64 [sp + 0x1c0]
132169: 55 18 02 08              jump @9880 if a1 >=u 2
      :                          @9879
132173: 28 76 ef 00              jump @13209
      :                          @9880
132177: 82 17 b8 01              a0 = u64 [sp + 0x1b8]
132181: 82 79 28                 a2 = u64 [a0 + 0x28]
132184: 55 19 03 08              jump @9882 if a2 >=u 3
      :                          @9881
132188: 28 43 f0 00              jump @13248
      :                          @9882
132192: ca 2c 09                 a2 = a5 * t0
132195: 14 0a cd cc cc cc cc cc cc cc a3 = 0xcccccccccccccccd
132205: d6 a9 0a                 a3 = a2 mulhu a3
132208: 98 aa 04                 a3 = a3 >> 0x4
132211: 82 76 20                 s1 = u64 [a0 + 0x20]
132214: 96 aa 14                 a3 = a3 * 0x14
132217: c9 a9 09                 a2 = a2 - a3
132220: 95 9a 01                 a3 = a2 + 0x1
132223: 7b 6a 10                 u64 [s1 + 0x10] = a3
132226: 55 18 03 08              jump @9884 if a1 >=u 3
      :                          @9883
132230: 28 23 f0 00              jump @13258
      :                          @9884
132234: 82 78 40                 a1 = u64 [a0 + 0x40]
132237: 55 18 02 08              jump @9886 if a1 >=u 2
      :                          @9885
132241: 28 04 f0 00              jump @13238
      :                          @9886
132245: 82 77 38                 a0 = u64 [a0 + 0x38]
132248: 7b 7a 08                 u64 [a0 + 0x8] = a3
132251: 3a 08 78 12 03           a1 = u64 [0x31278]
132256: 97 8a 0d                 a3 = a1 << 0xd
132259: d3 a8 08                 a1 = a1 ^ a3
132262: 98 8a 07                 a3 = a1 >> 0x7
132265: d3 a8 08                 a1 = a1 ^ a3
132268: 97 8b 11                 a4 = a1 << 0x11
132271: d3 8b 0b                 a4 = a4 ^ a1
132274: 3e 0b 78 12 03           u64 [0x31278] = a4
132279: 82 18 c0 01              a1 = u64 [sp + 0x1c0]
132283: 55 18 02 08              jump @9888 if a1 >=u 2
      :                          @9887
132287: 28 d6 ef 00              jump @13238
      :                          @9888
132291: 82 17 b8 01              a0 = u64 [sp + 0x1b8]
132295: 82 79 28                 a2 = u64 [a0 + 0x28]
132298: 55 19 04 08              jump @9890 if a2 >=u 4
      :                          @9889
132302: 28 d0 ef 00              jump @13247
      :                          @9890
132306: ca 2b 09                 a2 = a4 * t0
132309: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
132319: d6 b9 0b                 a4 = a2 mulhu a4
132322: 98 bb 04                 a4 = a4 >> 0x4
132325: 82 76 20                 s1 = u64 [a0 + 0x20]
132328: 96 bb 14                 a4 = a4 * 0x14
132331: c9 b9 09                 a2 = a2 - a4
132334: 95 9b 01                 a4 = a2 + 0x1
132337: 7b 6b 18                 u64 [s1 + 0x18] = a4
132340: 55 18 04 08              jump @9892 if a1 >=u 4
      :                          @9891
132344: 28 a4 ef 00              jump @13245
      :                          @9892
132348: 82 78 58                 a1 = u64 [a0 + 0x58]
132351: 55 18 02 08              jump @9894 if a1 >=u 2
      :                          @9893
132355: 28 92 ef 00              jump @13238
      :                          @9894
132359: 82 77 50                 a0 = u64 [a0 + 0x50]
132362: 7b 7b 08                 u64 [a0 + 0x8] = a4
132365: 3a 08 78 12 03           a1 = u64 [0x31278]
132370: 97 8a 0d                 a3 = a1 << 0xd
132373: d3 a8 08                 a1 = a1 ^ a3
132376: 98 8a 07                 a3 = a1 >> 0x7
132379: d3 a8 08                 a1 = a1 ^ a3
132382: 97 8b 11                 a4 = a1 << 0x11
132385: d3 8b 0b                 a4 = a4 ^ a1
132388: 3e 0b 78 12 03           u64 [0x31278] = a4
132393: 82 18 c0 01              a1 = u64 [sp + 0x1c0]
132397: 55 18 02 08              jump @9896 if a1 >=u 2
      :                          @9895
132401: 28 64 ef 00              jump @13238
      :                          @9896
132405: 82 17 b8 01              a0 = u64 [sp + 0x1b8]
132409: 82 79 28                 a2 = u64 [a0 + 0x28]
132412: 55 19 05 08              jump @9898 if a2 >=u 5
      :                          @9897
132416: 28 60 ef 00              jump @13249
      :                          @9898
132420: ca 2b 09                 a2 = a4 * t0
132423: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
132433: d6 b9 0b                 a4 = a2 mulhu a4
132436: 98 bb 04                 a4 = a4 >> 0x4
132439: 82 76 20                 s1 = u64 [a0 + 0x20]
132442: 96 bb 14                 a4 = a4 * 0x14
132445: c9 b9 09                 a2 = a2 - a4
132448: 95 9b 01                 a4 = a2 + 0x1
132451: 7b 6b 20                 u64 [s1 + 0x20] = a4
132454: 55 18 05 08              jump @9900 if a1 >=u 5
      :                          @9899
132458: 28 33 ef 00              jump @13246
      :                          @9900
132462: 82 78 70                 a1 = u64 [a0 + 0x70]
132465: 55 18 02 08              jump @9902 if a1 >=u 2
      :                          @9901
132469: 28 20 ef 00              jump @13238
      :                          @9902
132473: 82 77 68                 a0 = u64 [a0 + 0x68]
132476: 7b 7b 08                 u64 [a0 + 0x8] = a4
132479: 3a 08 78 12 03           a1 = u64 [0x31278]
132484: 97 8a 0d                 a3 = a1 << 0xd
132487: d3 a8 08                 a1 = a1 ^ a3
132490: 98 8a 07                 a3 = a1 >> 0x7
132493: d3 a8 08                 a1 = a1 ^ a3
132496: 97 8b 11                 a4 = a1 << 0x11
132499: d3 8b 0b                 a4 = a4 ^ a1
132502: 3e 0b 78 12 03           u64 [0x31278] = a4
132507: 82 18 c0 01              a1 = u64 [sp + 0x1c0]
132511: 55 18 02 08              jump @9904 if a1 >=u 2
      :                          @9903
132515: 28 f2 ee 00              jump @13238
      :                          @9904
132519: 82 1a b8 01              a3 = u64 [sp + 0x1b8]
132523: 82 a9 28                 a2 = u64 [a3 + 0x28]
132526: 55 19 06 08              jump @9906 if a2 >=u 6
      :                          @9905
132530: 28 ef ee 00              jump @13250
      :                          @9906
132534: ca 2b 09                 a2 = a4 * t0
132537: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
132547: d6 b9 0b                 a4 = a2 mulhu a4
132550: 98 bb 04                 a4 = a4 >> 0x4
132553: 82 a6 20                 s1 = u64 [a3 + 0x20]
132556: 96 bb 14                 a4 = a4 * 0x14
132559: c9 b9 09                 a2 = a2 - a4
132562: 95 99 01                 a2 = a2 + 0x1
132565: 7b 69 28                 u64 [s1 + 0x28] = a2
132568: 55 18 06 08              jump @9908 if a1 >=u 6
      :                          @9907
132572: 28 c6 ee 00              jump @13251
      :                          @9908
132576: 82 a8 88 00              a1 = u64 [a3 + 0x88]
132580: 55 18 02 08              jump @9910 if a1 >=u 2
      :                          @9909
132584: 28 ad ee 00              jump @13238
      :                          @9910
132588: 82 a8 80 00              a1 = u64 [a3 + 0x80]
132592: 7b 89 08                 u64 [a1 + 0x8] = a2
132595: 3a 09 78 12 03           a2 = u64 [0x31278]
132600: 97 9a 0d                 a3 = a2 << 0xd
132603: d3 a9 09                 a2 = a2 ^ a3
132606: 98 9a 07                 a3 = a2 >> 0x7
132609: d3 a9 09                 a2 = a2 ^ a3
132612: 97 9c 11                 a5 = a2 << 0x11
132615: d3 9c 0c                 a5 = a5 ^ a2
132618: 3e 0c 78 12 03           u64 [0x31278] = a5
132623: 82 18 c0 01              a1 = u64 [sp + 0x1c0]
132627: 55 18 03 08              jump @9912 if a1 >=u 3
      :                          @9911
132631: 28 75 ee 00              jump @13229
      :                          @9912
132635: 82 17 b8 01              a0 = u64 [sp + 0x1b8]
132639: 82 79 40                 a2 = u64 [a0 + 0x40]
132642: 55 19 04 08              jump @9914 if a2 >=u 4
      :                          @9913
132646: 28 79 ee 00              jump @13248
      :                          @9914
132650: ca 2c 09                 a2 = a5 * t0
132653: 14 0a cd cc cc cc cc cc cc cc a3 = 0xcccccccccccccccd
132663: d6 a9 0a                 a3 = a2 mulhu a3
132666: 98 aa 04                 a3 = a3 >> 0x4
132669: 82 76 38                 s1 = u64 [a0 + 0x38]
132672: 96 aa 14                 a3 = a3 * 0x14
132675: c9 a9 09                 a2 = a2 - a3
132678: 95 9a 01                 a3 = a2 + 0x1
132681: 7b 6a 18                 u64 [s1 + 0x18] = a3
132684: 55 18 04 08              jump @9916 if a1 >=u 4
      :                          @9915
132688: 28 5d ee 00              jump @13262
      :                          @9916
132692: 82 78 58                 a1 = u64 [a0 + 0x58]
132695: 55 18 03 08              jump @9918 if a1 >=u 3
      :                          @9917
132699: 28 3b ee 00              jump @13239
      :                          @9918
132703: 82 77 50                 a0 = u64 [a0 + 0x50]
132706: 7b 7a 10                 u64 [a0 + 0x10] = a3
132709: 3a 08 78 12 03           a1 = u64 [0x31278]
132714: 97 8a 0d                 a3 = a1 << 0xd
132717: d3 a8 08                 a1 = a1 ^ a3
132720: 98 8a 07                 a3 = a1 >> 0x7
132723: d3 a8 08                 a1 = a1 ^ a3
132726: 97 8b 11                 a4 = a1 << 0x11
132729: d3 8b 0b                 a4 = a4 ^ a1
132732: 3e 0b 78 12 03           u64 [0x31278] = a4
132737: 82 18 c0 01              a1 = u64 [sp + 0x1c0]
132741: 55 18 03 08              jump @9920 if a1 >=u 3
      :                          @9919
132745: 28 0d ee 00              jump @13239
      :                          @9920
132749: 82 17 b8 01              a0 = u64 [sp + 0x1b8]
132753: 82 79 40                 a2 = u64 [a0 + 0x40]
132756: 55 19 05 08              jump @9922 if a2 >=u 5
      :                          @9921
132760: 28 08 ee 00              jump @13249
      :                          @9922
132764: ca 2b 09                 a2 = a4 * t0
132767: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
132777: d6 b9 0b                 a4 = a2 mulhu a4
132780: 98 bb 04                 a4 = a4 >> 0x4
132783: 82 76 38                 s1 = u64 [a0 + 0x38]
132786: 96 bb 14                 a4 = a4 * 0x14
132789: c9 b9 09                 a2 = a2 - a4
132792: 95 9b 01                 a4 = a2 + 0x1
132795: 7b 6b 20                 u64 [s1 + 0x20] = a4
132798: 55 18 05 08              jump @9924 if a1 >=u 5
      :                          @9923
132802: 28 db ed 00              jump @13246
      :                          @9924
132806: 82 78 70                 a1 = u64 [a0 + 0x70]
132809: 55 18 03 08              jump @9926 if a1 >=u 3
      :                          @9925
132813: 28 c9 ed 00              jump @13239
      :                          @9926
132817: 82 77 68                 a0 = u64 [a0 + 0x68]
132820: 7b 7b 10                 u64 [a0 + 0x10] = a4
132823: 3a 08 78 12 03           a1 = u64 [0x31278]
132828: 97 8a 0d                 a3 = a1 << 0xd
132831: d3 a8 08                 a1 = a1 ^ a3
132834: 98 8a 07                 a3 = a1 >> 0x7
132837: d3 a8 08                 a1 = a1 ^ a3
132840: 97 8b 11                 a4 = a1 << 0x11
132843: d3 8b 0b                 a4 = a4 ^ a1
132846: 3e 0b 78 12 03           u64 [0x31278] = a4
132851: 82 18 c0 01              a1 = u64 [sp + 0x1c0]
132855: 55 18 03 08              jump @9928 if a1 >=u 3
      :                          @9927
132859: 28 9b ed 00              jump @13239
      :                          @9928
132863: 82 1a b8 01              a3 = u64 [sp + 0x1b8]
132867: 82 a9 40                 a2 = u64 [a3 + 0x40]
132870: 55 19 06 08              jump @9930 if a2 >=u 6
      :                          @9929
132874: 28 97 ed 00              jump @13250
      :                          @9930
132878: ca 2b 09                 a2 = a4 * t0
132881: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
132891: d6 b9 0b                 a4 = a2 mulhu a4
132894: 98 bb 04                 a4 = a4 >> 0x4
132897: 82 a6 38                 s1 = u64 [a3 + 0x38]
132900: 96 bb 14                 a4 = a4 * 0x14
132903: c9 b9 09                 a2 = a2 - a4
132906: 95 99 01                 a2 = a2 + 0x1
132909: 7b 69 28                 u64 [s1 + 0x28] = a2
132912: 55 18 06 08              jump @9932 if a1 >=u 6
      :                          @9931
132916: 28 6e ed 00              jump @13251
      :                          @9932
132920: 82 a8 88 00              a1 = u64 [a3 + 0x88]
132924: 55 18 03 08              jump @9934 if a1 >=u 3
      :                          @9933
132928: 28 56 ed 00              jump @13239
      :                          @9934
132932: 82 a8 80 00              a1 = u64 [a3 + 0x80]
132936: 7b 89 10                 u64 [a1 + 0x10] = a2
132939: 3a 09 78 12 03           a2 = u64 [0x31278]
132944: 97 9a 0d                 a3 = a2 << 0xd
132947: d3 a9 09                 a2 = a2 ^ a3
132950: 98 9a 07                 a3 = a2 >> 0x7
132953: d3 a9 09                 a2 = a2 ^ a3
132956: 97 9c 11                 a5 = a2 << 0x11
132959: d3 9c 0c                 a5 = a5 ^ a2
132962: 3e 0c 78 12 03           u64 [0x31278] = a5
132967: 82 18 c0 01              a1 = u64 [sp + 0x1c0]
132971: 55 18 04 08              jump @9936 if a1 >=u 4
      :                          @9935
132975: 28 1d ed 00              jump @13229
      :                          @9936
132979: 82 17 b8 01              a0 = u64 [sp + 0x1b8]
132983: 82 79 58                 a2 = u64 [a0 + 0x58]
132986: 55 19 05 08              jump @9938 if a2 >=u 5
      :                          @9937
132990: 28 21 ed 00              jump @13248
      :                          @9938
132994: ca 2c 09                 a2 = a5 * t0
132997: 14 0a cd cc cc cc cc cc cc cc a3 = 0xcccccccccccccccd
133007: d6 a9 0a                 a3 = a2 mulhu a3
133010: 98 aa 04                 a3 = a3 >> 0x4
133013: 82 76 50                 s1 = u64 [a0 + 0x50]
133016: 96 aa 14                 a3 = a3 * 0x14
133019: c9 a9 09                 a2 = a2 - a3
133022: 95 9a 01                 a3 = a2 + 0x1
133025: 7b 6a 20                 u64 [s1 + 0x20] = a3
133028: 55 18 05 08              jump @9940 if a1 >=u 5
      :                          @9939
133032: 28 02 ed 00              jump @13259
      :                          @9940
133036: 82 78 70                 a1 = u64 [a0 + 0x70]
133039: 55 18 04 08              jump @9942 if a1 >=u 4
      :                          @9941
133043: 28 e9 ec 00              jump @13245
      :                          @9942
133047: 82 77 68                 a0 = u64 [a0 + 0x68]
133050: 7b 7a 18                 u64 [a0 + 0x18] = a3
133053: 3a 08 78 12 03           a1 = u64 [0x31278]
133058: 97 8a 0d                 a3 = a1 << 0xd
133061: d3 a8 08                 a1 = a1 ^ a3
133064: 98 8a 07                 a3 = a1 >> 0x7
133067: d3 a8 08                 a1 = a1 ^ a3
133070: 97 8b 11                 a4 = a1 << 0x11
133073: d3 8b 0b                 a4 = a4 ^ a1
133076: 3e 0b 78 12 03           u64 [0x31278] = a4
133081: 82 18 c0 01              a1 = u64 [sp + 0x1c0]
133085: 55 18 04 08              jump @9944 if a1 >=u 4
      :                          @9943
133089: 28 bb ec 00              jump @13245
      :                          @9944
133093: 82 1a b8 01              a3 = u64 [sp + 0x1b8]
133097: 82 a9 58                 a2 = u64 [a3 + 0x58]
133100: 55 19 06 08              jump @9946 if a2 >=u 6
      :                          @9945
133104: 28 b1 ec 00              jump @13250
      :                          @9946
133108: ca 2b 09                 a2 = a4 * t0
133111: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
133121: d6 b9 0b                 a4 = a2 mulhu a4
133124: 98 bb 04                 a4 = a4 >> 0x4
133127: 82 a6 50                 s1 = u64 [a3 + 0x50]
133130: 96 bb 14                 a4 = a4 * 0x14
133133: c9 b9 09                 a2 = a2 - a4
133136: 95 99 01                 a2 = a2 + 0x1
133139: 7b 69 28                 u64 [s1 + 0x28] = a2
133142: 55 18 06 08              jump @9948 if a1 >=u 6
      :                          @9947
133146: 28 88 ec 00              jump @13251
      :                          @9948
133150: 82 a8 88 00              a1 = u64 [a3 + 0x88]
133154: 55 18 04 08              jump @9950 if a1 >=u 4
      :                          @9949
133158: 28 76 ec 00              jump @13245
      :                          @9950
133162: 82 a8 80 00              a1 = u64 [a3 + 0x80]
133166: 7b 89 18                 u64 [a1 + 0x18] = a2
133169: 3a 09 78 12 03           a2 = u64 [0x31278]
133174: 97 9a 0d                 a3 = a2 << 0xd
133177: d3 a9 09                 a2 = a2 ^ a3
133180: 98 9a 07                 a3 = a2 >> 0x7
133183: d3 a9 09                 a2 = a2 ^ a3
133186: 97 9c 11                 a5 = a2 << 0x11
133189: d3 9c 0c                 a5 = a5 ^ a2
133192: 3e 0c 78 12 03           u64 [0x31278] = a5
133197: 82 18 c0 01              a1 = u64 [sp + 0x1c0]
133201: 55 18 05 08              jump @9952 if a1 >=u 5
      :                          @9951
133205: 28 37 ec 00              jump @13229
      :                          @9952
133209: 82 17 b8 01              a0 = u64 [sp + 0x1b8]
133213: 82 79 70                 a2 = u64 [a0 + 0x70]
133216: 55 19 06 08              jump @9954 if a2 >=u 6
      :                          @9953
133220: 28 3b ec 00              jump @13248
      :                          @9954
133224: ca 2c 09                 a2 = a5 * t0
133227: 14 0a cd cc cc cc cc cc cc cc a3 = 0xcccccccccccccccd
133237: d6 a9 0a                 a3 = a2 mulhu a3
133240: 98 aa 04                 a3 = a3 >> 0x4
133243: 33 0c 14                 a5 = 0x14
133246: 82 76 68                 s1 = u64 [a0 + 0x68]
133249: ca ca 0a                 a3 = a3 * a5
133252: c9 a9 09                 a2 = a2 - a3
133255: 95 99 01                 a2 = a2 + 0x1
133258: 7b 69 28                 u64 [s1 + 0x28] = a2
133261: 55 18 06 08              jump @9956 if a1 >=u 6
      :                          @9955
133265: 28 24 ec 00              jump @13268
      :                          @9956
133269: 7b 12 70                 u64 [sp + 0x70] = t0
133272: 82 78 88 00              a1 = u64 [a0 + 0x88]
133276: 55 18 05 08              jump @9958 if a1 >=u 5
      :                          @9957
133280: 28 fd eb 00              jump @13246
      :                          @9958
133284: 82 77 80 00              a0 = u64 [a0 + 0x80]
133288: 7b 79 20                 u64 [a0 + 0x20] = a2
133291: 95 17 c8 01              a0 = sp + 0x1c8
133295: 33 08 06                 a1 = 0x6
133298: 50 20 9a 06 e1 75 fe     ra = 1690, jump @2246
      :                          @9959 [@dyn 845]
133305: 49 21 20 01              u64 [sp + 288] = 0
133309: 82 18 d0 01              a1 = u64 [sp + 0x1d0]
133313: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
133317: 49 21 28 01 08           u64 [sp + 296] = 0x8
133322: 49 21 30 01              u64 [sp + 304] = 0
133326: 95 17 e0 01              a0 = sp + 0x1e0
133330: 50 20 9c 06 c2 68 fe     ra = 1692, jump @2112
      :                          @9960 [@dyn 846]
133337: 3a 07 78 12 03           a0 = u64 [0x31278]
133342: 97 79 0d                 a2 = a0 << 0xd
133345: d3 97 07                 a0 = a0 ^ a2
133348: 98 79 07                 a2 = a0 >> 0x7
133351: d3 97 07                 a0 = a0 ^ a2
133354: 97 79 11                 a2 = a0 << 0x11
133357: d3 97 07                 a0 = a0 ^ a2
133360: 3e 07 78 12 03           u64 [0x31278] = a0
133365: 82 16 f0 01              s1 = u64 [sp + 0x1f0]
133369: 82 19 70                 a2 = u64 [sp + 0x70]
133372: 52 06 07                 jump @9962 if s1 != 0
      :                          @9961
133375: 28 98 eb 00              jump @13240
      :                          @9962
133379: 82 18 e8 01              a1 = u64 [sp + 0x1e8]
133383: ca 97 07                 a0 = a0 * a2
133386: cd 67 09                 a2 = a0 %u s1
133389: 97 97 03                 a0 = a2 << 0x3
133392: c8 87 07                 a0 = a0 + a1
133395: 82 78                    a1 = u64 [a0]
133397: 7b 18 60                 u64 [sp + 0x60] = a1
133400: 95 78 08                 a1 = a0 + 0x8
133403: 85 99 ff                 a2 = a2 ^ 0xffffffffffffffff
133406: c8 69 09                 a2 = a2 + s1
133409: 97 99 03                 a2 = a2 << 0x3
133412: 50 20 9e 06 77 01 01     ra = 1694, jump @13651
      :                          @9963 [@dyn 847]
133419: 82 18 30 01              a1 = u64 [sp + 0x130]
133423: 82 17 20 01              a0 = u64 [sp + 0x120]
133427: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
133430: 7b 16 f0 01              u64 [sp + 0x1f0] = s1
133434: ab 78 13                 jump @9966 if a1 != a0
      :                          @9964
133437: 95 17 20 01              a0 = sp + 0x120
133441: 50 20 a0 06 ff 49 fe     ra = 1696, jump @1581
      :                          @9965 [@dyn 848]
133448: 82 18 30 01              a1 = u64 [sp + 0x130]
133452: 01                       fallthrough
      :                          @9966
133453: 82 17 28 01              a0 = u64 [sp + 0x128]
133457: 97 89 03                 a2 = a1 << 0x3
133460: c8 97 07                 a0 = a0 + a2
133463: 82 19 60                 a2 = u64 [sp + 0x60]
133466: 7b 79                    u64 [a0] = a2
133468: 95 88 01                 a1 = a1 + 0x1
133471: 7b 18 30 01              u64 [sp + 0x130] = a1
133475: 3a 07 78 12 03           a0 = u64 [0x31278]
133480: 97 79 0d                 a2 = a0 << 0xd
133483: d3 97 07                 a0 = a0 ^ a2
133486: 98 79 07                 a2 = a0 >> 0x7
133489: d3 97 07                 a0 = a0 ^ a2
133492: 97 79 11                 a2 = a0 << 0x11
133495: d3 97 07                 a0 = a0 ^ a2
133498: 3e 07 78 12 03           u64 [0x31278] = a0
133503: 82 16 f0 01              s1 = u64 [sp + 0x1f0]
133507: 82 19 70                 a2 = u64 [sp + 0x70]
133510: 52 06 07                 jump @9968 if s1 != 0
      :                          @9967
133513: 28 0e eb 00              jump @13240
      :                          @9968
133517: 82 18 e8 01              a1 = u64 [sp + 0x1e8]
133521: ca 97 07                 a0 = a0 * a2
133524: cd 67 09                 a2 = a0 %u s1
133527: 97 97 03                 a0 = a2 << 0x3
133530: c8 87 07                 a0 = a0 + a1
133533: 82 78                    a1 = u64 [a0]
133535: 7b 18 60                 u64 [sp + 0x60] = a1
133538: 95 78 08                 a1 = a0 + 0x8
133541: 85 99 ff                 a2 = a2 ^ 0xffffffffffffffff
133544: c8 69 09                 a2 = a2 + s1
133547: 97 99 03                 a2 = a2 << 0x3
133550: 50 20 a2 06 ed 00 01     ra = 1698, jump @13651
      :                          @9969 [@dyn 849]
133557: 82 18 30 01              a1 = u64 [sp + 0x130]
133561: 82 17 20 01              a0 = u64 [sp + 0x120]
133565: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
133568: 7b 16 f0 01              u64 [sp + 0x1f0] = s1
133572: ab 78 13                 jump @9972 if a1 != a0
      :                          @9970
133575: 95 17 20 01              a0 = sp + 0x120
133579: 50 20 a4 06 75 49 fe     ra = 1700, jump @1581
      :                          @9971 [@dyn 850]
133586: 82 18 30 01              a1 = u64 [sp + 0x130]
133590: 01                       fallthrough
      :                          @9972
133591: 82 17 28 01              a0 = u64 [sp + 0x128]
133595: 97 89 03                 a2 = a1 << 0x3
133598: c8 97 07                 a0 = a0 + a2
133601: 82 19 60                 a2 = u64 [sp + 0x60]
133604: 7b 79                    u64 [a0] = a2
133606: 95 88 01                 a1 = a1 + 0x1
133609: 7b 18 30 01              u64 [sp + 0x130] = a1
133613: 3a 07 78 12 03           a0 = u64 [0x31278]
133618: 97 79 0d                 a2 = a0 << 0xd
133621: d3 97 07                 a0 = a0 ^ a2
133624: 98 79 07                 a2 = a0 >> 0x7
133627: d3 97 07                 a0 = a0 ^ a2
133630: 97 79 11                 a2 = a0 << 0x11
133633: d3 97 07                 a0 = a0 ^ a2
133636: 3e 07 78 12 03           u64 [0x31278] = a0
133641: 82 16 f0 01              s1 = u64 [sp + 0x1f0]
133645: 82 18 70                 a1 = u64 [sp + 0x70]
133648: 52 06 07                 jump @9974 if s1 != 0
      :                          @9973
133651: 28 84 ea 00              jump @13240
      :                          @9974
133655: 82 1a e8 01              a3 = u64 [sp + 0x1e8]
133659: ca 87 07                 a0 = a0 * a1
133662: cd 67 09                 a2 = a0 %u s1
133665: 97 97 03                 a0 = a2 << 0x3
133668: 7b 1a 70                 u64 [sp + 0x70] = a3
133671: c8 a7 07                 a0 = a0 + a3
133674: 82 78                    a1 = u64 [a0]
133676: 7b 18 60                 u64 [sp + 0x60] = a1
133679: 95 78 08                 a1 = a0 + 0x8
133682: 85 99 ff                 a2 = a2 ^ 0xffffffffffffffff
133685: c8 69 09                 a2 = a2 + s1
133688: 97 99 03                 a2 = a2 << 0x3
133691: 50 20 a6 06 60 00 01     ra = 1702, jump @13651
      :                          @9975 [@dyn 851]
133698: 82 18 30 01              a1 = u64 [sp + 0x130]
133702: 82 17 20 01              a0 = u64 [sp + 0x120]
133706: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
133709: 7b 16 f0 01              u64 [sp + 0x1f0] = s1
133713: ab 78 13                 jump @9978 if a1 != a0
      :                          @9976
133716: 95 17 20 01              a0 = sp + 0x120
133720: 50 20 a8 06 e8 48 fe     ra = 1704, jump @1581
      :                          @9977 [@dyn 852]
133727: 82 18 30 01              a1 = u64 [sp + 0x130]
133731: 01                       fallthrough
      :                          @9978
133732: 82 17 28 01              a0 = u64 [sp + 0x128]
133736: 97 89 03                 a2 = a1 << 0x3
133739: c8 97 07                 a0 = a0 + a2
133742: 82 19 60                 a2 = u64 [sp + 0x60]
133745: 7b 79                    u64 [a0] = a2
133747: 95 89 01                 a2 = a1 + 0x1
133750: 7b 19 30 01              u64 [sp + 0x130] = a2
133754: 82 18 28 01              a1 = u64 [sp + 0x128]
133758: 95 17 b0 01              a0 = sp + 0x1b0
133762: 50 20 aa 06 2a 31 ff     ra = 1706, jump @6386
      :                          @9979 [@dyn 853]
133769: 7b 17 10 01              u64 [sp + 0x110] = a0
133773: 95 17 20 01              a0 = sp + 0x120
133777: 7b 17 38 02              u64 [sp + 0x238] = a0
133781: 33 07 34 02              a0 = 0x234
133785: 7b 17 40 02              u64 [sp + 0x240] = a0
133789: 95 17 10 01              a0 = sp + 0x110
133793: 7b 17 48 02              u64 [sp + 0x248] = a0
133797: 33 07 2c 0c              a0 = 0xc2c
133801: 7b 17 50 02              u64 [sp + 0x250] = a0
133805: 33 07 f8 11 01           a0 = 0x111f8
133810: 7b 17 90 02              u64 [sp + 0x290] = a0
133814: 49 21 98 02 02           u64 [sp + 664] = 0x2
133819: 49 21 b0 02              u64 [sp + 688] = 0
133823: 95 18 38 02              a1 = sp + 0x238
133827: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
133831: 49 21 a8 02 02           u64 [sp + 680] = 0x2
133836: 95 17 08 02              a0 = sp + 0x208
133840: 95 18 90 02              a1 = sp + 0x290
133844: 50 20 ac 06 26 45 fe     ra = 1708, jump @1503
      :                          @9980 [@dyn 854]
133851: 82 16 10 02              s1 = u64 [sp + 0x210]
133855: 82 1b 18 02              a4 = u64 [sp + 0x218]
133859: 82 17 08 02              a0 = u64 [sp + 0x208]
133863: 7b 17 60                 u64 [sp + 0x60] = a0
133866: 33 07 02                 a0 = 0x2
133869: 33 08                    a1 = 0
133871: 33 09                    a2 = 0
133873: 64 6a                    a3 = s1
133875: 33 00 ae 06              ra = 0x6ae
133879: 0a 64                    ecalli 100 // 'log'
133881: 01                       fallthrough
      :                          @9981 [@dyn 855]
133882: 82 1c 60                 a5 = u64 [sp + 0x60]
133885: 82 17 68                 a0 = u64 [sp + 0x68]
133888: c8 c7 07                 a0 = a0 + a5
133891: 53 37 00 00 ff 27        jump @9987 if a0 <u 4294901760
      :                          @9982
133897: 33 07 c0 22 03           a0 = 0x322c0
133902: 95 77 00 00 01           a0 = a0 + 0x10000
133907: 01                       fallthrough
      :                          @9983
133908: 82 78                    a1 = u64 [a0]
133910: c9 87 09                 a2 = a0 - a1
133913: ab 69 11                 jump @9987 if a2 != s1
      :                          @9984
133916: c9 c8 09                 a2 = a1 - a5
133919: 01                       fallthrough
      :                          @9985
133920: 82 7a                    a3 = u64 [a0]
133922: ab 8a f2                 jump @9983 if a3 != a1
      :                          @9986
133925: 7b 79                    u64 [a0] = a2
133927: 33 0b                    a4 = 0
133929: 01                       fallthrough
      :                          @9987
133930: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
133934: 82 16 70                 s1 = u64 [sp + 0x70]
133937: 51 07 2c                 jump @9994 if a0 == 0
      :                          @9988
133940: 56 27 00 20 29           jump @9994 if a0 >u 8192
      :                          @9989
133945: 97 77 03                 a0 = a0 << 0x3
133948: 33 08 c0 22 03           a1 = 0x322c0
133953: 95 88 00 00 01           a1 = a1 + 0x10000
133958: 01                       fallthrough
      :                          @9990
133959: 82 89                    a2 = u64 [a1]
133961: c9 98 0a                 a3 = a1 - a2
133964: ab 6a 11                 jump @9994 if a3 != s1
      :                          @9991
133967: c9 79 0a                 a3 = a2 - a0
133970: 01                       fallthrough
      :                          @9992
133971: 82 8b                    a4 = u64 [a1]
133973: ab 9b f2                 jump @9990 if a4 != a2
      :                          @9993
133976: 7b 8a                    u64 [a1] = a3
133978: 33 0c                    a5 = 0
133980: 01                       fallthrough
      :                          @9994
133981: 82 18 20 01              a1 = u64 [sp + 0x120]
133985: 51 08 30                 jump @10001 if a1 == 0
      :                          @9995
133988: 56 28 00 20 2d           jump @10001 if a1 >u 8192
      :                          @9996
133993: 82 17 28 01              a0 = u64 [sp + 0x128]
133997: 97 88 03                 a1 = a1 << 0x3
134000: 33 09 c0 22 03           a2 = 0x322c0
134005: 95 99 00 00 01           a2 = a2 + 0x10000
134010: 01                       fallthrough
      :                          @9997
134011: 82 9a                    a3 = u64 [a2]
134013: c9 a9 0b                 a4 = a2 - a3
134016: ab 7b 11                 jump @10001 if a4 != a0
      :                          @9998
134019: c9 8a 0b                 a4 = a3 - a1
134022: 01                       fallthrough
      :                          @9999
134023: 82 9c                    a5 = u64 [a2]
134025: ab ac f2                 jump @9997 if a5 != a3
      :                          @10000
134028: 7b 9b                    u64 [a2] = a4
134030: 33 06                    s1 = 0
134032: 01                       fallthrough
      :                          @10001
134033: 82 18 c8 01              a1 = u64 [sp + 0x1c8]
134037: 51 08 3b                 jump @10008 if a1 == 0
      :                          @10002
134040: 56 28 00 20 38           jump @10008 if a1 >u 8192
      :                          @10003
134045: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
134049: 97 88 03                 a1 = a1 << 0x3
134052: 33 09 c0 22 03           a2 = 0x322c0
134057: 95 99 00 00 01           a2 = a2 + 0x10000
134062: 01                       fallthrough
      :                          @10004
134063: 82 9a                    a3 = u64 [a2]
134065: c9 a9 0b                 a4 = a2 - a3
134068: ab 7b 1c                 jump @10008 if a4 != a0
      :                          @10005
134071: c9 8a 0b                 a4 = a3 - a1
134074: 01                       fallthrough
      :                          @10006
134075: 82 9c                    a5 = u64 [a2]
134077: ab ac f2                 jump @10004 if a5 != a3
      :                          @10007
134080: 7b 9b                    u64 [a2] = a4
134082: 33 06                    s1 = 0
134084: 95 17 b0 01              a0 = sp + 0x1b0
134088: 33 00 b0 06              ra = 0x6b0
134092: 28 4a 01 fe              jump @241
      :                          @10008
134096: 95 17 b0 01              a0 = sp + 0x1b0
134100: 50 20 b0 06 42 01 fe     ra = 1712, jump @241
      :                          @10009 [@dyn 856]
134107: 28 a8 d6 00              jump @12868
      :                          @10010 [@dyn 857]
134111: 33 06                    s1 = 0
134113: 3a 02 60 11 03           t0 = u64 [0x31160]
134118: 49 21 20 01              u64 [sp + 288] = 0
134122: 49 21 28 01 08           u64 [sp + 296] = 0x8
134127: 49 21 30 01              u64 [sp + 304] = 0
134131: 3a 03 70 11 03           t1 = u64 [0x31170]
134136: 33 0c 78 12 03           a5 = 0x31278
134141: 33 04 32                 t2 = 0x32
134144: 33 00 0a                 ra = 0xa
134147: 7b 12 60                 u64 [sp + 0x60] = t0
134150: 7b 13 58                 u64 [sp + 0x58] = t1
134153: 28 39                    jump @10013
      :                          @10011
134155: 95 67 01                 a0 = s1 + 0x1
134158: ca 29 09                 a2 = a2 * t0
134161: 98 9a 01                 a3 = a2 >> 0x1
134164: d6 3a 0a                 a3 = a3 mulhu t1
134167: 98 aa 04                 a3 = a3 >> 0x4
134170: ca 4a 0a                 a3 = a3 * t2
134173: 82 1b 28 01              a4 = u64 [sp + 0x128]
134177: c9 a9 09                 a2 = a2 - a3
134180: 95 99 01                 a2 = a2 + 0x1
134183: 97 8a 04                 a3 = a1 << 0x4
134186: c8 ba 0a                 a3 = a3 + a4
134189: 7b a6                    u64 [a3] = s1
134191: 7b a9 08                 u64 [a3 + 0x8] = a2
134194: 95 89 01                 a2 = a1 + 0x1
134197: 7b 19 30 01              u64 [sp + 0x130] = a2
134201: 64 76                    s1 = a0
134203: ab 07 07                 jump @10013 if a0 != ra
      :                          @10012
134206: 28 20 c0 00              jump @12433
      :                          @10013
134210: 3a 07 78 12 03           a0 = u64 [0x31278]
134215: 97 78 0d                 a1 = a0 << 0xd
134218: d3 87 07                 a0 = a0 ^ a1
134221: 98 78 07                 a1 = a0 >> 0x7
134224: d3 87 07                 a0 = a0 ^ a1
134227: 97 78 11                 a1 = a0 << 0x11
134230: d3 78 09                 a2 = a1 ^ a0
134233: 3e 09 78 12 03           u64 [0x31278] = a2
134238: 82 18 30 01              a1 = u64 [sp + 0x130]
134242: 82 17 20 01              a0 = u64 [sp + 0x120]
134246: ab 78 a5                 jump @10011 if a1 != a0
      :                          @10014
134249: 95 17 20 01              a0 = sp + 0x120
134253: 7b 19 70                 u64 [sp + 0x70] = a2
134256: 50 20 b4 06 d2 47 fe     ra = 1716, jump @1605
      :                          @10015 [@dyn 858]
134263: 82 19 70                 a2 = u64 [sp + 0x70]
134266: 33 00 0a                 ra = 0xa
134269: 33 04 32                 t2 = 0x32
134272: 33 0c 78 12 03           a5 = 0x31278
134277: 82 13 58                 t1 = u64 [sp + 0x58]
134280: 82 12 60                 t0 = u64 [sp + 0x60]
134283: 82 18 30 01              a1 = u64 [sp + 0x130]
134287: 28 7c ff                 jump @10011
      :                          @10016 [@dyn 859]
134290: 49 21 08 02              u64 [sp + 520] = 0
134294: 49 21 10 02 08           u64 [sp + 528] = 0x8
134299: 49 21 18 02              u64 [sp + 536] = 0
134303: 33 06 78 12 03           s1 = 0x31278
134308: 49 11 70 03              u64 [sp + 112] = 0x3
134312: 28 37                    jump @10019
      :                          @10017
134314: 82 17 10 02              a0 = u64 [sp + 0x210]
134318: 82 19 a0 02              a2 = u64 [sp + 0x2a0]
134322: 96 8a 18                 a3 = a1 * 0x18
134325: c8 7a 0a                 a3 = a3 + a0
134328: 7b a9 10                 u64 [a3 + 0x10] = a2
134331: 82 19 98 02              a2 = u64 [sp + 0x298]
134335: 7b a9 08                 u64 [a3 + 0x8] = a2
134338: 82 19 90 02              a2 = u64 [sp + 0x290]
134342: 7b a9                    u64 [a3] = a2
134344: 95 88 01                 a1 = a1 + 0x1
134347: 82 19 70                 a2 = u64 [sp + 0x70]
134350: 83 99 ff                 i32 a2 = a2 + 0xffffffffffffffff
134353: 7b 18 18 02              u64 [sp + 0x218] = a1
134357: 7b 19 70                 u64 [sp + 0x70] = a2
134360: 52 09 07                 jump @10019 if a2 != 0
      :                          @10018
134363: 28 a4 c0 00              jump @12461
      :                          @10019
134367: 49 21 90 02              u64 [sp + 656] = 0
134371: 49 21 98 02 08           u64 [sp + 664] = 0x8
134376: 49 21 a0 02              u64 [sp + 672] = 0
134380: 3a 07 78 12 03           a0 = u64 [0x31278]
134385: 97 78 0d                 a1 = a0 << 0xd
134388: d3 87 07                 a0 = a0 ^ a1
134391: 98 78 07                 a1 = a0 >> 0x7
134394: d3 87 07                 a0 = a0 ^ a1
134397: 97 78 11                 a1 = a0 << 0x11
134400: d3 78 08                 a1 = a1 ^ a0
134403: 84 77 01                 a0 = a0 & 0x1
134406: 3e 08 78 12 03           u64 [0x31278] = a1
134411: 52 07 32                 jump @10024 if a0 != 0
      :                          @10020
134414: 82 18 a0 02              a1 = u64 [sp + 0x2a0]
134418: 82 17 90 02              a0 = u64 [sp + 0x290]
134422: ab 78 13                 jump @10023 if a1 != a0
      :                          @10021
134425: 95 17 90 02              a0 = sp + 0x290
134429: 50 20 b8 06 23 46 fe     ra = 1720, jump @1581
      :                          @10022 [@dyn 860]
134436: 82 18 a0 02              a1 = u64 [sp + 0x2a0]
134440: 01                       fallthrough
      :                          @10023
134441: 82 17 98 02              a0 = u64 [sp + 0x298]
134445: 97 89 03                 a2 = a1 << 0x3
134448: c8 97 07                 a0 = a0 + a2
134451: 49 07                    u64 [a0 + 0] = 0
134453: 95 88 01                 a1 = a1 + 0x1
134456: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
134460: 01                       fallthrough
      :                          @10024
134461: 3a 07 78 12 03           a0 = u64 [0x31278]
134466: 97 78 0d                 a1 = a0 << 0xd
134469: d3 87 07                 a0 = a0 ^ a1
134472: 98 78 07                 a1 = a0 >> 0x7
134475: d3 87 07                 a0 = a0 ^ a1
134478: 97 78 11                 a1 = a0 << 0x11
134481: d3 78 08                 a1 = a1 ^ a0
134484: 84 77 01                 a0 = a0 & 0x1
134487: 3e 08 78 12 03           u64 [0x31278] = a1
134492: 52 07 33                 jump @10029 if a0 != 0
      :                          @10025
134495: 82 18 a0 02              a1 = u64 [sp + 0x2a0]
134499: 82 17 90 02              a0 = u64 [sp + 0x290]
134503: ab 78 13                 jump @10028 if a1 != a0
      :                          @10026
134506: 95 17 90 02              a0 = sp + 0x290
134510: 50 20 ba 06 d2 45 fe     ra = 1722, jump @1581
      :                          @10027 [@dyn 861]
134517: 82 18 a0 02              a1 = u64 [sp + 0x2a0]
134521: 01                       fallthrough
      :                          @10028
134522: 82 17 98 02              a0 = u64 [sp + 0x298]
134526: 97 89 03                 a2 = a1 << 0x3
134529: c8 97 07                 a0 = a0 + a2
134532: 49 07 01                 u64 [a0 + 0] = 0x1
134535: 95 88 01                 a1 = a1 + 0x1
134538: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
134542: 01                       fallthrough
      :                          @10029
134543: 3a 07 78 12 03           a0 = u64 [0x31278]
134548: 97 78 0d                 a1 = a0 << 0xd
134551: d3 87 07                 a0 = a0 ^ a1
134554: 98 78 07                 a1 = a0 >> 0x7
134557: d3 87 07                 a0 = a0 ^ a1
134560: 97 78 11                 a1 = a0 << 0x11
134563: d3 78 08                 a1 = a1 ^ a0
134566: 84 77 01                 a0 = a0 & 0x1
134569: 3e 08 78 12 03           u64 [0x31278] = a1
134574: 52 07 33                 jump @10034 if a0 != 0
      :                          @10030
134577: 82 18 a0 02              a1 = u64 [sp + 0x2a0]
134581: 82 17 90 02              a0 = u64 [sp + 0x290]
134585: ab 78 13                 jump @10033 if a1 != a0
      :                          @10031
134588: 95 17 90 02              a0 = sp + 0x290
134592: 50 20 bc 06 80 45 fe     ra = 1724, jump @1581
      :                          @10032 [@dyn 862]
134599: 82 18 a0 02              a1 = u64 [sp + 0x2a0]
134603: 01                       fallthrough
      :                          @10033
134604: 82 17 98 02              a0 = u64 [sp + 0x298]
134608: 97 89 03                 a2 = a1 << 0x3
134611: c8 97 07                 a0 = a0 + a2
134614: 49 07 02                 u64 [a0 + 0] = 0x2
134617: 95 88 01                 a1 = a1 + 0x1
134620: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
134624: 01                       fallthrough
      :                          @10034
134625: 3a 07 78 12 03           a0 = u64 [0x31278]
134630: 97 78 0d                 a1 = a0 << 0xd
134633: d3 87 07                 a0 = a0 ^ a1
134636: 98 78 07                 a1 = a0 >> 0x7
134639: d3 87 07                 a0 = a0 ^ a1
134642: 97 78 11                 a1 = a0 << 0x11
134645: d3 78 08                 a1 = a1 ^ a0
134648: 84 77 01                 a0 = a0 & 0x1
134651: 3e 08 78 12 03           u64 [0x31278] = a1
134656: 52 07 33                 jump @10039 if a0 != 0
      :                          @10035
134659: 82 18 a0 02              a1 = u64 [sp + 0x2a0]
134663: 82 17 90 02              a0 = u64 [sp + 0x290]
134667: ab 78 13                 jump @10038 if a1 != a0
      :                          @10036
134670: 95 17 90 02              a0 = sp + 0x290
134674: 50 20 be 06 2e 45 fe     ra = 1726, jump @1581
      :                          @10037 [@dyn 863]
134681: 82 18 a0 02              a1 = u64 [sp + 0x2a0]
134685: 01                       fallthrough
      :                          @10038
134686: 82 17 98 02              a0 = u64 [sp + 0x298]
134690: 97 89 03                 a2 = a1 << 0x3
134693: c8 97 07                 a0 = a0 + a2
134696: 49 07 03                 u64 [a0 + 0] = 0x3
134699: 95 88 01                 a1 = a1 + 0x1
134702: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
134706: 01                       fallthrough
      :                          @10039
134707: 3a 07 78 12 03           a0 = u64 [0x31278]
134712: 97 78 0d                 a1 = a0 << 0xd
134715: d3 87 07                 a0 = a0 ^ a1
134718: 98 78 07                 a1 = a0 >> 0x7
134721: d3 87 07                 a0 = a0 ^ a1
134724: 97 78 11                 a1 = a0 << 0x11
134727: d3 78 08                 a1 = a1 ^ a0
134730: 84 77 01                 a0 = a0 & 0x1
134733: 3e 08 78 12 03           u64 [0x31278] = a1
134738: 52 07 33                 jump @10044 if a0 != 0
      :                          @10040
134741: 82 18 a0 02              a1 = u64 [sp + 0x2a0]
134745: 82 17 90 02              a0 = u64 [sp + 0x290]
134749: ab 78 13                 jump @10043 if a1 != a0
      :                          @10041
134752: 95 17 90 02              a0 = sp + 0x290
134756: 50 20 c0 06 dc 44 fe     ra = 1728, jump @1581
      :                          @10042 [@dyn 864]
134763: 82 18 a0 02              a1 = u64 [sp + 0x2a0]
134767: 01                       fallthrough
      :                          @10043
134768: 82 17 98 02              a0 = u64 [sp + 0x298]
134772: 97 89 03                 a2 = a1 << 0x3
134775: c8 97 07                 a0 = a0 + a2
134778: 49 07 04                 u64 [a0 + 0] = 0x4
134781: 95 88 01                 a1 = a1 + 0x1
134784: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
134788: 01                       fallthrough
      :                          @10044
134789: 3a 07 78 12 03           a0 = u64 [0x31278]
134794: 97 78 0d                 a1 = a0 << 0xd
134797: d3 87 07                 a0 = a0 ^ a1
134800: 98 78 07                 a1 = a0 >> 0x7
134803: d3 87 07                 a0 = a0 ^ a1
134806: 97 78 11                 a1 = a0 << 0x11
134809: d3 78 08                 a1 = a1 ^ a0
134812: 84 77 01                 a0 = a0 & 0x1
134815: 3e 08 78 12 03           u64 [0x31278] = a1
134820: 52 07 33                 jump @10049 if a0 != 0
      :                          @10045
134823: 82 18 a0 02              a1 = u64 [sp + 0x2a0]
134827: 82 17 90 02              a0 = u64 [sp + 0x290]
134831: ab 78 13                 jump @10048 if a1 != a0
      :                          @10046
134834: 95 17 90 02              a0 = sp + 0x290
134838: 50 20 c2 06 8a 44 fe     ra = 1730, jump @1581
      :                          @10047 [@dyn 865]
134845: 82 18 a0 02              a1 = u64 [sp + 0x2a0]
134849: 01                       fallthrough
      :                          @10048
134850: 82 17 98 02              a0 = u64 [sp + 0x298]
134854: 97 89 03                 a2 = a1 << 0x3
134857: c8 97 07                 a0 = a0 + a2
134860: 49 07 05                 u64 [a0 + 0] = 0x5
134863: 95 88 01                 a1 = a1 + 0x1
134866: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
134870: 01                       fallthrough
      :                          @10049
134871: 3a 07 78 12 03           a0 = u64 [0x31278]
134876: 97 78 0d                 a1 = a0 << 0xd
134879: d3 87 07                 a0 = a0 ^ a1
134882: 98 78 07                 a1 = a0 >> 0x7
134885: d3 87 07                 a0 = a0 ^ a1
134888: 97 78 11                 a1 = a0 << 0x11
134891: d3 78 08                 a1 = a1 ^ a0
134894: 84 77 01                 a0 = a0 & 0x1
134897: 3e 08 78 12 03           u64 [0x31278] = a1
134902: 52 07 33                 jump @10054 if a0 != 0
      :                          @10050
134905: 82 18 a0 02              a1 = u64 [sp + 0x2a0]
134909: 82 17 90 02              a0 = u64 [sp + 0x290]
134913: ab 78 13                 jump @10053 if a1 != a0
      :                          @10051
134916: 95 17 90 02              a0 = sp + 0x290
134920: 50 20 c4 06 38 44 fe     ra = 1732, jump @1581
      :                          @10052 [@dyn 866]
134927: 82 18 a0 02              a1 = u64 [sp + 0x2a0]
134931: 01                       fallthrough
      :                          @10053
134932: 82 17 98 02              a0 = u64 [sp + 0x298]
134936: 97 89 03                 a2 = a1 << 0x3
134939: c8 97 07                 a0 = a0 + a2
134942: 49 07 06                 u64 [a0 + 0] = 0x6
134945: 95 88 01                 a1 = a1 + 0x1
134948: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
134952: 01                       fallthrough
      :                          @10054
134953: 3a 07 78 12 03           a0 = u64 [0x31278]
134958: 97 78 0d                 a1 = a0 << 0xd
134961: d3 87 07                 a0 = a0 ^ a1
134964: 98 78 07                 a1 = a0 >> 0x7
134967: d3 87 07                 a0 = a0 ^ a1
134970: 97 78 11                 a1 = a0 << 0x11
134973: d3 78 08                 a1 = a1 ^ a0
134976: 84 77 01                 a0 = a0 & 0x1
134979: 3e 08 78 12 03           u64 [0x31278] = a1
134984: 52 07 33                 jump @10059 if a0 != 0
      :                          @10055
134987: 82 18 a0 02              a1 = u64 [sp + 0x2a0]
134991: 82 17 90 02              a0 = u64 [sp + 0x290]
134995: ab 78 13                 jump @10058 if a1 != a0
      :                          @10056
134998: 95 17 90 02              a0 = sp + 0x290
135002: 50 20 c6 06 e6 43 fe     ra = 1734, jump @1581
      :                          @10057 [@dyn 867]
135009: 82 18 a0 02              a1 = u64 [sp + 0x2a0]
135013: 01                       fallthrough
      :                          @10058
135014: 82 17 98 02              a0 = u64 [sp + 0x298]
135018: 97 89 03                 a2 = a1 << 0x3
135021: c8 97 07                 a0 = a0 + a2
135024: 49 07 07                 u64 [a0 + 0] = 0x7
135027: 95 88 01                 a1 = a1 + 0x1
135030: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
135034: 01                       fallthrough
      :                          @10059
135035: 3a 07 78 12 03           a0 = u64 [0x31278]
135040: 97 78 0d                 a1 = a0 << 0xd
135043: d3 87 07                 a0 = a0 ^ a1
135046: 98 78 07                 a1 = a0 >> 0x7
135049: d3 87 07                 a0 = a0 ^ a1
135052: 97 78 11                 a1 = a0 << 0x11
135055: d3 78 08                 a1 = a1 ^ a0
135058: 84 77 01                 a0 = a0 & 0x1
135061: 3e 08 78 12 03           u64 [0x31278] = a1
135066: 52 07 33                 jump @10064 if a0 != 0
      :                          @10060
135069: 82 18 a0 02              a1 = u64 [sp + 0x2a0]
135073: 82 17 90 02              a0 = u64 [sp + 0x290]
135077: ab 78 13                 jump @10063 if a1 != a0
      :                          @10061
135080: 95 17 90 02              a0 = sp + 0x290
135084: 50 20 c8 06 94 43 fe     ra = 1736, jump @1581
      :                          @10062 [@dyn 868]
135091: 82 18 a0 02              a1 = u64 [sp + 0x2a0]
135095: 01                       fallthrough
      :                          @10063
135096: 82 17 98 02              a0 = u64 [sp + 0x298]
135100: 97 89 03                 a2 = a1 << 0x3
135103: c8 97 07                 a0 = a0 + a2
135106: 49 07 08                 u64 [a0 + 0] = 0x8
135109: 95 88 01                 a1 = a1 + 0x1
135112: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
135116: 01                       fallthrough
      :                          @10064
135117: 3a 07 78 12 03           a0 = u64 [0x31278]
135122: 97 78 0d                 a1 = a0 << 0xd
135125: d3 87 07                 a0 = a0 ^ a1
135128: 98 78 07                 a1 = a0 >> 0x7
135131: d3 87 07                 a0 = a0 ^ a1
135134: 97 78 11                 a1 = a0 << 0x11
135137: d3 78 08                 a1 = a1 ^ a0
135140: 84 77 01                 a0 = a0 & 0x1
135143: 3e 08 78 12 03           u64 [0x31278] = a1
135148: 52 07 33                 jump @10069 if a0 != 0
      :                          @10065
135151: 82 18 a0 02              a1 = u64 [sp + 0x2a0]
135155: 82 17 90 02              a0 = u64 [sp + 0x290]
135159: ab 78 13                 jump @10068 if a1 != a0
      :                          @10066
135162: 95 17 90 02              a0 = sp + 0x290
135166: 50 20 ca 06 42 43 fe     ra = 1738, jump @1581
      :                          @10067 [@dyn 869]
135173: 82 18 a0 02              a1 = u64 [sp + 0x2a0]
135177: 01                       fallthrough
      :                          @10068
135178: 82 17 98 02              a0 = u64 [sp + 0x298]
135182: 97 89 03                 a2 = a1 << 0x3
135185: c8 97 07                 a0 = a0 + a2
135188: 49 07 09                 u64 [a0 + 0] = 0x9
135191: 95 88 01                 a1 = a1 + 0x1
135194: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
135198: 01                       fallthrough
      :                          @10069
135199: 82 18 18 02              a1 = u64 [sp + 0x218]
135203: 82 17 08 02              a0 = u64 [sp + 0x208]
135207: ab 78 83 fc              jump @10017 if a1 != a0
      :                          @10070
135211: 95 17 08 02              a0 = sp + 0x208
135215: 50 20 cc 06 91 43 fe     ra = 1740, jump @1593
      :                          @10071 [@dyn 870]
135222: 82 18 18 02              a1 = u64 [sp + 0x218]
135226: 28 70 fc                 jump @10017
      :                          @10072 [@dyn 871]
135229: 3a 07 78 12 03           a0 = u64 [0x31278]
135234: 97 79 0d                 a2 = a0 << 0xd
135237: d3 97 07                 a0 = a0 ^ a2
135240: 98 7a 07                 a3 = a0 >> 0x7
135243: 3a 09 60 11 03           a2 = u64 [0x31160]
135248: d3 a7 07                 a0 = a0 ^ a3
135251: 97 7a 11                 a3 = a0 << 0x11
135254: d3 a7 07                 a0 = a0 ^ a3
135257: ca 97 0a                 a3 = a0 * a2
135260: 3e 07 78 12 03           u64 [0x31278] = a0
135265: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
135275: d6 ba 07                 a0 = a3 mulhu a4
135278: 98 77 03                 a0 = a0 >> 0x3
135281: 96 77 0a                 a0 = a0 * 0xa
135284: 3a 0c 78 12 03           a5 = u64 [0x31278]
135289: c9 7a 07                 a0 = a3 - a0
135292: 95 77 01                 a0 = a0 + 0x1
135295: 97 ca 0d                 a3 = a5 << 0xd
135298: d3 ca 0a                 a3 = a3 ^ a5
135301: 98 ac 07                 a5 = a3 >> 0x7
135304: d3 ca 0a                 a3 = a3 ^ a5
135307: 97 ac 11                 a5 = a3 << 0x11
135310: d3 ca 0a                 a3 = a3 ^ a5
135313: ca 9a 09                 a2 = a3 * a2
135316: 3e 0a 78 12 03           u64 [0x31278] = a3
135321: d6 b9 08                 a1 = a2 mulhu a4
135324: 98 8a 02                 a3 = a1 >> 0x2
135327: 84 88 fc                 a1 = a1 & 0xfffffffffffffffc
135330: c8 a8 08                 a1 = a1 + a3
135333: c9 89 08                 a1 = a2 - a1
135336: 95 88 02                 a1 = a1 + 0x2
135339: 33 00 d0 06              ra = 0x6d0
135343: 95 11 e0                 sp = sp + 0xffffffffffffffe0
135346: 7b 10 18                 u64 [sp + 0x18] = ra
135349: 7b 15 10                 u64 [sp + 0x10] = s0
135352: 7b 16 08                 u64 [sp + 0x8] = s1
135355: 33 04                    t2 = 0
135357: 33 00                    ra = 0
135359: 33 02 01                 t0 = 0x1
135362: 33 03 03                 t1 = 0x3
135365: 33 09                    a2 = 0
135367: 64 7c                    a5 = a0
135369: 28 0b 2f ff              jump @6480
      :                          @10073 [@dyn 872]
135373: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
135377: 95 17 e0 01              a0 = sp + 0x1e0
135381: 7b 17 08 02              u64 [sp + 0x208] = a0
135385: 33 07 2c 0c              a0 = 0xc2c
135389: 7b 17 10 02              u64 [sp + 0x210] = a0
135393: 33 07 90 12 01           a0 = 0x11290
135398: 7b 17 90 02              u64 [sp + 0x290] = a0
135402: 49 21 98 02 01           u64 [sp + 664] = 0x1
135407: 49 21 b0 02              u64 [sp + 688] = 0
135411: 95 18 08 02              a1 = sp + 0x208
135415: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
135419: 49 21 a8 02 01           u64 [sp + 680] = 0x1
135424: 95 17 38 02              a0 = sp + 0x238
135428: 95 18 90 02              a1 = sp + 0x290
135432: 50 20 d2 06 f2 3e fe     ra = 1746, jump @1503
      :                          @10074 [@dyn 873]
135439: 82 16 40 02              s1 = u64 [sp + 0x240]
135443: 82 1b 48 02              a4 = u64 [sp + 0x248]
135447: 82 17 38 02              a0 = u64 [sp + 0x238]
135451: 7b 17 70                 u64 [sp + 0x70] = a0
135454: 33 07 02                 a0 = 0x2
135457: 33 08                    a1 = 0
135459: 33 09                    a2 = 0
135461: 64 6a                    a3 = s1
135463: 33 00 d4 06              ra = 0x6d4
135467: 0a 64                    ecalli 100 // 'log'
135469: 01                       fallthrough
      :                          @10075 [@dyn 874]
135470: 82 1c 70                 a5 = u64 [sp + 0x70]
135473: 82 17 68                 a0 = u64 [sp + 0x68]
135476: c8 c7 07                 a0 = a0 + a5
135479: 55 37 00 00 ff 0a        jump @10077 if a0 >=u 4294901760
      :                          @10076
135485: 28 46 d1 00              jump @12868
      :                          @10077
135489: 33 07 c0 22 03           a0 = 0x322c0
135494: 95 77 00 00 01           a0 = a0 + 0x10000
135499: 01                       fallthrough
      :                          @10078
135500: 82 78                    a1 = u64 [a0]
135502: c9 87 09                 a2 = a0 - a1
135505: aa 69 07                 jump @10080 if a2 == s1
      :                          @10079
135508: 28 2f d1 00              jump @12868
      :                          @10080
135512: c9 c8 09                 a2 = a1 - a5
135515: 01                       fallthrough
      :                          @10081
135516: 82 7a                    a3 = u64 [a0]
135518: ab 8a ee                 jump @10078 if a3 != a1
      :                          @10082
135521: 7b 79                    u64 [a0] = a2
135523: 33 0b                    a4 = 0
135525: 01                       fallthrough
      :                          @10083
135526: ab 8a e6                 jump @10078 if a3 != a1
      :                          @10084
135529: 28 1a d1 00              jump @12868
      :                          @10085 [@dyn 875]
135533: 3a 08 78 12 03           a1 = u64 [0x31278]
135538: 97 89 0d                 a2 = a1 << 0xd
135541: d3 98 08                 a1 = a1 ^ a2
135544: 98 89 07                 a2 = a1 >> 0x7
135547: d3 98 08                 a1 = a1 ^ a2
135550: 3a 09 60 11 03           a2 = u64 [0x31160]
135555: 97 8a 11                 a3 = a1 << 0x11
135558: d3 a8 08                 a1 = a1 ^ a3
135561: ca 98 09                 a2 = a1 * a2
135564: 3e 08 78 12 03           u64 [0x31278] = a1
135569: 14 07 ab aa aa aa aa aa aa aa a0 = 0xaaaaaaaaaaaaaaab
135579: d6 79 07                 a0 = a2 mulhu a0
135582: 98 77 02                 a0 = a0 >> 0x2
135585: 96 77 06                 a0 = a0 * 0x6
135588: c9 79 08                 a1 = a2 - a0
135591: 95 88 01                 a1 = a1 + 0x1
135594: 7b 18 20 01              u64 [sp + 0x120] = a1
135598: 95 17 08 02              a0 = sp + 0x208
135602: 95 16 08 02              s1 = sp + 0x208
135606: 33 00 d8 06              ra = 0x6d8
135610: 95 11 e0                 sp = sp + 0xffffffffffffffe0
135613: 7b 10 18                 u64 [sp + 0x18] = ra
135616: 7b 15 10                 u64 [sp + 0x10] = s0
135619: 7b 16 08                 u64 [sp + 0x8] = s1
135622: 7b 17                    u64 [sp] = a0
135624: 95 87 01                 a0 = a1 + 0x1
135627: 97 73 03                 t1 = a0 << 0x3
135630: 33 00 c0 22 03           ra = 0x322c0
135635: 33 04 00 00 01           t2 = 0x10000
135640: c8 40 0c                 a5 = ra + t2
135643: 28 49 2e ff              jump @6488
      :                          @10086 [@dyn 876]
135647: 95 17 20 01              a0 = sp + 0x120
135651: 7b 17 38 02              u64 [sp + 0x238] = a0
135655: 33 07 2c 0c              a0 = 0xc2c
135659: 7b 17 40 02              u64 [sp + 0x240] = a0
135663: 7b 16 48 02              u64 [sp + 0x248] = s1
135667: 33 07 34 02              a0 = 0x234
135671: 7b 17 50 02              u64 [sp + 0x250] = a0
135675: 33 07 b0 12 01           a0 = 0x112b0
135680: 7b 17 90 02              u64 [sp + 0x290] = a0
135684: 49 21 98 02 02           u64 [sp + 664] = 0x2
135689: 49 21 b0 02              u64 [sp + 688] = 0
135693: 95 18 38 02              a1 = sp + 0x238
135697: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
135701: 49 21 a8 02 02           u64 [sp + 680] = 0x2
135706: 95 17 e0 01              a0 = sp + 0x1e0
135710: 95 18 90 02              a1 = sp + 0x290
135714: 50 20 da 06 d8 3d fe     ra = 1754, jump @1503
      :                          @10087 [@dyn 877]
135721: 82 18 08 02              a1 = u64 [sp + 0x208]
135725: 51 08 2e                 jump @10094 if a1 == 0
      :                          @10088
135728: 56 28 00 20 2b           jump @10094 if a1 >u 8192
      :                          @10089
135733: 82 17 10 02              a0 = u64 [sp + 0x210]
135737: 97 88 03                 a1 = a1 << 0x3
135740: 33 09 c0 22 03           a2 = 0x322c0
135745: 95 99 00 00 01           a2 = a2 + 0x10000
135750: 01                       fallthrough
      :                          @10090
135751: 82 9a                    a3 = u64 [a2]
135753: c9 a9 0b                 a4 = a2 - a3
135756: ab 7b 0f                 jump @10094 if a4 != a0
      :                          @10091
135759: c9 8a 0b                 a4 = a3 - a1
135762: 01                       fallthrough
      :                          @10092
135763: 82 9c                    a5 = u64 [a2]
135765: ab ac f2                 jump @10090 if a5 != a3
      :                          @10093
135768: 7b 9b                    u64 [a2] = a4
135770: 01                       fallthrough
      :                          @10094
135771: 82 16 e8 01              s1 = u64 [sp + 0x1e8]
135775: 82 1b f0 01              a4 = u64 [sp + 0x1f0]
135779: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
135783: 7b 17 70                 u64 [sp + 0x70] = a0
135786: 33 07 02                 a0 = 0x2
135789: 33 08                    a1 = 0
135791: 33 09                    a2 = 0
135793: 64 6a                    a3 = s1
135795: 33 00 dc 06              ra = 0x6dc
135799: 0a 64                    ecalli 100 // 'log'
135801: 01                       fallthrough
      :                          @10095 [@dyn 878]
135802: 82 1c 70                 a5 = u64 [sp + 0x70]
135805: 82 17 68                 a0 = u64 [sp + 0x68]
135808: c8 c7 07                 a0 = a0 + a5
135811: 55 37 00 00 ff 0a        jump @10097 if a0 >=u 4294901760
      :                          @10096
135817: 28 fa cf 00              jump @12868
      :                          @10097
135821: 33 07 c0 22 03           a0 = 0x322c0
135826: 95 77 00 00 01           a0 = a0 + 0x10000
135831: 01                       fallthrough
      :                          @10098
135832: 82 78                    a1 = u64 [a0]
135834: c9 87 09                 a2 = a0 - a1
135837: aa 69 07                 jump @10100 if a2 == s1
      :                          @10099
135840: 28 e3 cf 00              jump @12868
      :                          @10100
135844: c9 c8 09                 a2 = a1 - a5
135847: 01                       fallthrough
      :                          @10101
135848: 82 7a                    a3 = u64 [a0]
135850: ab 8a ee                 jump @10098 if a3 != a1
      :                          @10102
135853: 7b 79                    u64 [a0] = a2
135855: 33 0b                    a4 = 0
135857: 01                       fallthrough
      :                          @10103
135858: ab 8a e6                 jump @10098 if a3 != a1
      :                          @10104
135861: 28 ce cf 00              jump @12868
      :                          @10105 [@dyn 879]
135865: 95 17 90 02              a0 = sp + 0x290
135869: 33 09 04                 a2 = 0x4
135872: 33 08                    a1 = 0
135874: 50 20 e0 06 e2 51 fe     ra = 1760, jump @1889
      :                          @10106 [@dyn 880]
135881: 95 17 08 02              a0 = sp + 0x208
135885: 95 18 90 02              a1 = sp + 0x290
135889: 33 09 04                 a2 = 0x4
135892: 50 20 e2 06 1d 47 fe     ra = 1762, jump @1721
      :                          @10107 [@dyn 881]
135899: 33 07                    a0 = 0
135901: 33 0b 10                 a4 = 0x10
135904: 33 00 78 12 03           ra = 0x31278
135909: 33 03 03                 t1 = 0x3
135912: 33 04 70                 t2 = 0x70
135915: 33 02 04                 t0 = 0x4
135918: 01                       fallthrough
      :                          @10108
135919: 3a 08 78 12 03           a1 = u64 [0x31278]
135924: 97 89 0d                 a2 = a1 << 0xd
135927: d3 98 08                 a1 = a1 ^ a2
135930: 98 89 07                 a2 = a1 >> 0x7
135933: d3 89 09                 a2 = a2 ^ a1
135936: 97 98 11                 a1 = a2 << 0x11
135939: d3 98 08                 a1 = a1 ^ a2
135942: 3e 08 78 12 03           u64 [0x31278] = a1
135947: 82 18 18 02              a1 = u64 [sp + 0x218]
135951: ac 87 07                 jump @10110 if a0 <u a1
      :                          @10109
135954: 28 7a e1 00              jump @13229
      :                          @10110
135958: 82 18 10 02              a1 = u64 [sp + 0x210]
135962: c8 b8 08                 a1 = a1 + a4
135965: 82 8a                    a3 = u64 [a1]
135967: 52 0a 07                 jump @10112 if a3 != 0
      :                          @10111
135970: 28 72 e1 00              jump @13237
      :                          @10112
135974: 82 88 f8                 a1 = u64 [a1 + 0xfffffffffffffff8]
135977: 84 99 01                 a2 = a2 & 0x1
135980: 7b 89                    u64 [a1] = a2
135982: 3a 08 78 12 03           a1 = u64 [0x31278]
135987: 97 89 0d                 a2 = a1 << 0xd
135990: d3 98 08                 a1 = a1 ^ a2
135993: 98 8a 07                 a3 = a1 >> 0x7
135996: d3 8a 0a                 a3 = a3 ^ a1
135999: 97 a8 11                 a1 = a3 << 0x11
136002: d3 a8 08                 a1 = a1 ^ a3
136005: 3e 08 78 12 03           u64 [0x31278] = a1
136010: 82 18 18 02              a1 = u64 [sp + 0x218]
136014: ac 87 07                 jump @10114 if a0 <u a1
      :                          @10113
136017: 28 3b e1 00              jump @13229
      :                          @10114
136021: 82 18 10 02              a1 = u64 [sp + 0x210]
136025: c8 b8 08                 a1 = a1 + a4
136028: 82 89                    a2 = u64 [a1]
136030: 55 19 02 08              jump @10116 if a2 >=u 2
      :                          @10115
136034: 28 2d e1 00              jump @13232
      :                          @10116
136038: 82 88 f8                 a1 = u64 [a1 + 0xfffffffffffffff8]
136041: 84 aa 01                 a3 = a3 & 0x1
136044: 7b 8a 08                 u64 [a1 + 0x8] = a3
136047: 3a 08 78 12 03           a1 = u64 [0x31278]
136052: 97 89 0d                 a2 = a1 << 0xd
136055: d3 98 08                 a1 = a1 ^ a2
136058: 98 8a 07                 a3 = a1 >> 0x7
136061: d3 8a 0a                 a3 = a3 ^ a1
136064: 97 a8 11                 a1 = a3 << 0x11
136067: d3 a8 08                 a1 = a1 ^ a3
136070: 3e 08 78 12 03           u64 [0x31278] = a1
136075: 82 18 18 02              a1 = u64 [sp + 0x218]
136079: ac 87 07                 jump @10118 if a0 <u a1
      :                          @10117
136082: 28 fa e0 00              jump @13229
      :                          @10118
136086: 82 18 10 02              a1 = u64 [sp + 0x210]
136090: c8 b8 08                 a1 = a1 + a4
136093: 82 89                    a2 = u64 [a1]
136095: ae 39 07                 jump @10120 if a2 >=u t1
      :                          @10119
136098: 28 ee e0 00              jump @13233
      :                          @10120
136102: 82 88 f8                 a1 = u64 [a1 + 0xfffffffffffffff8]
136105: 84 aa 01                 a3 = a3 & 0x1
136108: 7b 8a 10                 u64 [a1 + 0x10] = a3
136111: 3a 08 78 12 03           a1 = u64 [0x31278]
136116: 97 89 0d                 a2 = a1 << 0xd
136119: d3 98 08                 a1 = a1 ^ a2
136122: 98 86 07                 s1 = a1 >> 0x7
136125: d3 86 06                 s1 = s1 ^ a1
136128: 97 68 11                 a1 = s1 << 0x11
136131: d3 68 08                 a1 = a1 ^ s1
136134: 3e 08 78 12 03           u64 [0x31278] = a1
136139: 82 18 18 02              a1 = u64 [sp + 0x218]
136143: ac 87 07                 jump @10122 if a0 <u a1
      :                          @10121
136146: 28 ba e0 00              jump @13229
      :                          @10122
136150: 82 1c 10 02              a5 = u64 [sp + 0x210]
136154: c8 bc 0a                 a3 = a5 + a4
136157: 82 a9                    a2 = u64 [a3]
136159: ae 29 07                 jump @10124 if a2 >=u t0
      :                          @10123
136162: 28 af e0 00              jump @13234
      :                          @10124
136166: 82 a9 f8                 a2 = u64 [a3 + 0xfffffffffffffff8]
136169: 84 66 01                 s1 = s1 & 0x1
136172: 7b 96 18                 u64 [a2 + 0x18] = s1
136175: 95 bb 18                 a4 = a4 + 0x18
136178: 95 77 01                 a0 = a0 + 0x1
136181: ab 4b fa fe              jump @10108 if a4 != t2
      :                          @10125
136185: 64 c7                    a0 = a5
136187: 50 20 e4 06 3a 2d ff     ra = 1764, jump @6513
      :                          @10126 [@dyn 882]
136194: 7b 17 20 01              u64 [sp + 0x120] = a0
136198: 95 17 20 01              a0 = sp + 0x120
136202: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
136206: 33 07 2c 0c              a0 = 0xc2c
136210: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
136214: 33 07 e0 12 01           a0 = 0x112e0
136219: 7b 17 90 02              u64 [sp + 0x290] = a0
136223: 49 21 98 02 01           u64 [sp + 664] = 0x1
136228: 49 21 b0 02              u64 [sp + 688] = 0
136232: 95 18 e0 01              a1 = sp + 0x1e0
136236: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
136240: 49 21 a8 02 01           u64 [sp + 680] = 0x1
136245: 95 17 38 02              a0 = sp + 0x238
136249: 95 18 90 02              a1 = sp + 0x290
136253: 50 20 e6 06 bd 3b fe     ra = 1766, jump @1503
      :                          @10127 [@dyn 883]
136260: 82 16 40 02              s1 = u64 [sp + 0x240]
136264: 82 1b 48 02              a4 = u64 [sp + 0x248]
136268: 82 17 38 02              a0 = u64 [sp + 0x238]
136272: 7b 17 70                 u64 [sp + 0x70] = a0
136275: 33 07 02                 a0 = 0x2
136278: 33 08                    a1 = 0
136280: 33 09                    a2 = 0
136282: 64 6a                    a3 = s1
136284: 33 00 e8 06              ra = 0x6e8
136288: 0a 64                    ecalli 100 // 'log'
136290: 01                       fallthrough
      :                          @10128 [@dyn 884]
136291: 82 1c 70                 a5 = u64 [sp + 0x70]
136294: 82 17 68                 a0 = u64 [sp + 0x68]
136297: c8 c7 07                 a0 = a0 + a5
136300: 33 08 00 00 ff           a1 = 0xffffffffffff0000
136305: ae 87 07                 jump @10130 if a0 >=u a1
      :                          @10129
136308: 28 17 c9 00              jump @12767
      :                          @10130
136312: 33 07 c0 22 03           a0 = 0x322c0
136317: 95 77 00 00 01           a0 = a0 + 0x10000
136322: 01                       fallthrough
      :                          @10131
136323: 82 78                    a1 = u64 [a0]
136325: c9 87 09                 a2 = a0 - a1
136328: aa 69 07                 jump @10133 if a2 == s1
      :                          @10132
136331: 28 00 c9 00              jump @12767
      :                          @10133
136335: c9 c8 09                 a2 = a1 - a5
136338: 01                       fallthrough
      :                          @10134
136339: 82 7a                    a3 = u64 [a0]
136341: ab 8a ee                 jump @10131 if a3 != a1
      :                          @10135
136344: 7b 79                    u64 [a0] = a2
136346: 33 0b                    a4 = 0
136348: 01                       fallthrough
      :                          @10136
136349: ab 8a e6                 jump @10131 if a3 != a1
      :                          @10137
136352: 28 eb c8 00              jump @12767
      :                          @10138 [@dyn 885]
136356: 49 21 08 02              u64 [sp + 520] = 0
136360: 49 21 10 02 08           u64 [sp + 528] = 0x8
136365: 49 21 18 02              u64 [sp + 536] = 0
136369: 3a 07 78 12 03           a0 = u64 [0x31278]
136374: 3a 02 60 11 03           t0 = u64 [0x31160]
136379: 97 78 0d                 a1 = a0 << 0xd
136382: d3 87 07                 a0 = a0 ^ a1
136385: 98 78 07                 a1 = a0 >> 0x7
136388: d3 87 07                 a0 = a0 ^ a1
136391: 97 78 11                 a1 = a0 << 0x11
136394: d3 87 07                 a0 = a0 ^ a1
136397: 3a 0c e8 11 03           a5 = u64 [0x311e8]
136402: ca 27 09                 a2 = a0 * t0
136405: 3e 07 78 12 03           u64 [0x31278] = a0
136410: d5 c9 07                 a0 = a2 mulh a5
136413: 98 7a 3f                 a3 = a0 >> 0x3f
136416: 99 77 03                 a0 = a0 >>a 0x3
136419: 82 18 18 02              a1 = u64 [sp + 0x218]
136423: 82 1b 08 02              a4 = u64 [sp + 0x208]
136427: c8 a7 07                 a0 = a0 + a3
136430: 33 03 14                 t1 = 0x14
136433: ca 37 07                 a0 = a0 * t1
136436: c9 79 0a                 a3 = a2 - a0
136439: 7b 12 70                 u64 [sp + 0x70] = t0
136442: ab b8 23                 jump @10141 if a1 != a4
      :                          @10139
136445: 95 17 08 02              a0 = sp + 0x208
136449: 64 c6                    s1 = a5
136451: 7b 1a 60                 u64 [sp + 0x60] = a3
136454: 50 20 ec 06 3a 3e fe     ra = 1772, jump @1581
      :                          @10140 [@dyn 886]
136461: 82 1a 60                 a3 = u64 [sp + 0x60]
136464: 33 03 14                 t1 = 0x14
136467: 64 6c                    a5 = s1
136469: 82 12 70                 t0 = u64 [sp + 0x70]
136472: 82 18 18 02              a1 = u64 [sp + 0x218]
136476: 01                       fallthrough
      :                          @10141
136477: 82 17 10 02              a0 = u64 [sp + 0x210]
136481: 97 89 03                 a2 = a1 << 0x3
136484: c8 97 07                 a0 = a0 + a2
136487: 7b 7a                    u64 [a0] = a3
136489: 95 88 01                 a1 = a1 + 0x1
136492: 7b 18 18 02              u64 [sp + 0x218] = a1
136496: 3a 07 78 12 03           a0 = u64 [0x31278]
136501: 97 78 0d                 a1 = a0 << 0xd
136504: d3 87 07                 a0 = a0 ^ a1
136507: 98 78 07                 a1 = a0 >> 0x7
136510: d3 87 07                 a0 = a0 ^ a1
136513: 97 78 11                 a1 = a0 << 0x11
136516: d3 87 07                 a0 = a0 ^ a1
136519: ca 27 09                 a2 = a0 * t0
136522: 3e 07 78 12 03           u64 [0x31278] = a0
136527: d5 c9 07                 a0 = a2 mulh a5
136530: 98 7a 3f                 a3 = a0 >> 0x3f
136533: 82 18 18 02              a1 = u64 [sp + 0x218]
136537: 82 1b 08 02              a4 = u64 [sp + 0x208]
136541: 99 77 03                 a0 = a0 >>a 0x3
136544: c8 a7 07                 a0 = a0 + a3
136547: 96 77 14                 a0 = a0 * 0x14
136550: c9 79 06                 s1 = a2 - a0
136553: ab b8 16                 jump @10144 if a1 != a4
      :                          @10142
136556: 95 17 08 02              a0 = sp + 0x208
136560: 50 20 ee 06 d0 3d fe     ra = 1774, jump @1581
      :                          @10143 [@dyn 887]
136567: 82 12 70                 t0 = u64 [sp + 0x70]
136570: 82 18 18 02              a1 = u64 [sp + 0x218]
136574: 01                       fallthrough
      :                          @10144
136575: 82 17 10 02              a0 = u64 [sp + 0x210]
136579: 97 89 03                 a2 = a1 << 0x3
136582: c8 97 07                 a0 = a0 + a2
136585: 7b 76                    u64 [a0] = s1
136587: 95 88 01                 a1 = a1 + 0x1
136590: 7b 18 18 02              u64 [sp + 0x218] = a1
136594: 3a 07 78 12 03           a0 = u64 [0x31278]
136599: 97 78 0d                 a1 = a0 << 0xd
136602: d3 87 07                 a0 = a0 ^ a1
136605: 98 78 07                 a1 = a0 >> 0x7
136608: d3 87 07                 a0 = a0 ^ a1
136611: 97 78 11                 a1 = a0 << 0x11
136614: d3 87 07                 a0 = a0 ^ a1
136617: 3a 0c e8 11 03           a5 = u64 [0x311e8]
136622: ca 27 09                 a2 = a0 * t0
136625: 3e 07 78 12 03           u64 [0x31278] = a0
136630: d5 c9 07                 a0 = a2 mulh a5
136633: 98 7a 3f                 a3 = a0 >> 0x3f
136636: 99 77 03                 a0 = a0 >>a 0x3
136639: 82 18 18 02              a1 = u64 [sp + 0x218]
136643: 82 1b 08 02              a4 = u64 [sp + 0x208]
136647: c8 a7 07                 a0 = a0 + a3
136650: 33 03 14                 t1 = 0x14
136653: ca 37 07                 a0 = a0 * t1
136656: c9 79 0a                 a3 = a2 - a0
136659: ab b8 23                 jump @10147 if a1 != a4
      :                          @10145
136662: 95 17 08 02              a0 = sp + 0x208
136666: 64 c6                    s1 = a5
136668: 7b 1a 60                 u64 [sp + 0x60] = a3
136671: 50 20 f0 06 61 3d fe     ra = 1776, jump @1581
      :                          @10146 [@dyn 888]
136678: 82 1a 60                 a3 = u64 [sp + 0x60]
136681: 33 03 14                 t1 = 0x14
136684: 64 6c                    a5 = s1
136686: 82 12 70                 t0 = u64 [sp + 0x70]
136689: 82 18 18 02              a1 = u64 [sp + 0x218]
136693: 01                       fallthrough
      :                          @10147
136694: 82 17 10 02              a0 = u64 [sp + 0x210]
136698: 97 89 03                 a2 = a1 << 0x3
136701: c8 97 07                 a0 = a0 + a2
136704: 7b 7a                    u64 [a0] = a3
136706: 95 88 01                 a1 = a1 + 0x1
136709: 7b 18 18 02              u64 [sp + 0x218] = a1
136713: 3a 07 78 12 03           a0 = u64 [0x31278]
136718: 97 78 0d                 a1 = a0 << 0xd
136721: d3 87 07                 a0 = a0 ^ a1
136724: 98 78 07                 a1 = a0 >> 0x7
136727: d3 87 07                 a0 = a0 ^ a1
136730: 97 78 11                 a1 = a0 << 0x11
136733: d3 87 07                 a0 = a0 ^ a1
136736: ca 27 09                 a2 = a0 * t0
136739: 3e 07 78 12 03           u64 [0x31278] = a0
136744: d5 c9 07                 a0 = a2 mulh a5
136747: 98 7a 3f                 a3 = a0 >> 0x3f
136750: 82 18 18 02              a1 = u64 [sp + 0x218]
136754: 82 1b 08 02              a4 = u64 [sp + 0x208]
136758: 99 77 03                 a0 = a0 >>a 0x3
136761: c8 a7 07                 a0 = a0 + a3
136764: 96 77 14                 a0 = a0 * 0x14
136767: c9 79 06                 s1 = a2 - a0
136770: ab b8 16                 jump @10150 if a1 != a4
      :                          @10148
136773: 95 17 08 02              a0 = sp + 0x208
136777: 50 20 f2 06 f7 3c fe     ra = 1778, jump @1581
      :                          @10149 [@dyn 889]
136784: 82 12 70                 t0 = u64 [sp + 0x70]
136787: 82 18 18 02              a1 = u64 [sp + 0x218]
136791: 01                       fallthrough
      :                          @10150
136792: 82 17 10 02              a0 = u64 [sp + 0x210]
136796: 97 89 03                 a2 = a1 << 0x3
136799: c8 97 07                 a0 = a0 + a2
136802: 7b 76                    u64 [a0] = s1
136804: 95 88 01                 a1 = a1 + 0x1
136807: 7b 18 18 02              u64 [sp + 0x218] = a1
136811: 3a 08 78 12 03           a1 = u64 [0x31278]
136816: 97 89 0d                 a2 = a1 << 0xd
136819: d3 98 08                 a1 = a1 ^ a2
136822: 98 89 07                 a2 = a1 >> 0x7
136825: d3 98 08                 a1 = a1 ^ a2
136828: 97 89 11                 a2 = a1 << 0x11
136831: d3 98 08                 a1 = a1 ^ a2
136834: 3a 09 e8 11 03           a2 = u64 [0x311e8]
136839: ca 28 0a                 a3 = a1 * t0
136842: 3e 08 78 12 03           u64 [0x31278] = a1
136847: d5 9a 07                 a0 = a3 mulh a2
136850: 98 7b 3f                 a4 = a0 >> 0x3f
136853: 99 77 03                 a0 = a0 >>a 0x3
136856: 82 18 18 02              a1 = u64 [sp + 0x218]
136860: 82 19 08 02              a2 = u64 [sp + 0x208]
136864: c8 b7 07                 a0 = a0 + a4
136867: 33 0b 14                 a4 = 0x14
136870: ca b7 07                 a0 = a0 * a4
136873: c9 7a 06                 s1 = a3 - a0
136876: ab 98 13                 jump @10153 if a1 != a2
      :                          @10151
136879: 95 17 08 02              a0 = sp + 0x208
136883: 50 20 f4 06 8d 3c fe     ra = 1780, jump @1581
      :                          @10152 [@dyn 890]
136890: 82 18 18 02              a1 = u64 [sp + 0x218]
136894: 01                       fallthrough
      :                          @10153
136895: 82 19 10 02              a2 = u64 [sp + 0x210]
136899: 97 87 03                 a0 = a1 << 0x3
136902: 7b 19 60                 u64 [sp + 0x60] = a2
136905: c8 97 07                 a0 = a0 + a2
136908: 7b 76                    u64 [a0] = s1
136910: 95 87 01                 a0 = a1 + 0x1
136913: 7b 17 18 02              u64 [sp + 0x218] = a0
136917: 33 0a 01                 a3 = 0x1
136920: 7b 17 70                 u64 [sp + 0x70] = a0
136923: 51 07 07                 jump @10155 if a0 == 0
      :                          @10154
136926: 28 33 cd 00              jump @12889
      :                          @10155
136930: 7b 1a 20 01              u64 [sp + 0x120] = a3
136934: 95 17 20 01              a0 = sp + 0x120
136938: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
136942: 33 07 98 0c              a0 = 0xc98
136946: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
136950: 33 07 f8 12 01           a0 = 0x112f8
136955: 7b 17 90 02              u64 [sp + 0x290] = a0
136959: 49 21 98 02 01           u64 [sp + 664] = 0x1
136964: 49 21 b0 02              u64 [sp + 688] = 0
136968: 95 17 e0 01              a0 = sp + 0x1e0
136972: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
136976: 49 21 a8 02 01           u64 [sp + 680] = 0x1
136981: 95 17 38 02              a0 = sp + 0x238
136985: 95 18 90 02              a1 = sp + 0x290
136989: 50 20 f6 06 dd 38 fe     ra = 1782, jump @1503
      :                          @10156 [@dyn 891]
136996: 82 16 40 02              s1 = u64 [sp + 0x240]
137000: 82 1b 48 02              a4 = u64 [sp + 0x248]
137004: 82 17 38 02              a0 = u64 [sp + 0x238]
137008: 7b 17 70                 u64 [sp + 0x70] = a0
137011: 33 07 02                 a0 = 0x2
137014: 33 08                    a1 = 0
137016: 33 09                    a2 = 0
137018: 64 6a                    a3 = s1
137020: 33 00 f8 06              ra = 0x6f8
137024: 0a 64                    ecalli 100 // 'log'
137026: 01                       fallthrough
      :                          @10157 [@dyn 892]
137027: 82 1c 70                 a5 = u64 [sp + 0x70]
137030: 82 17 68                 a0 = u64 [sp + 0x68]
137033: c8 c7 07                 a0 = a0 + a5
137036: 53 37 00 00 ff 25        jump @10163 if a0 <u 4294901760
      :                          @10158
137042: 33 07 c0 22 03           a0 = 0x322c0
137047: 95 77 00 00 01           a0 = a0 + 0x10000
137052: 01                       fallthrough
      :                          @10159
137053: 82 78                    a1 = u64 [a0]
137055: c9 87 09                 a2 = a0 - a1
137058: ab 69 0f                 jump @10163 if a2 != s1
      :                          @10160
137061: c9 c8 09                 a2 = a1 - a5
137064: 01                       fallthrough
      :                          @10161
137065: 82 7a                    a3 = u64 [a0]
137067: ab 8a f2                 jump @10159 if a3 != a1
      :                          @10162
137070: 7b 79                    u64 [a0] = a2
137072: 01                       fallthrough
      :                          @10163
137073: 82 17 08 02              a0 = u64 [sp + 0x208]
137077: 52 07 07                 jump @10165 if a0 != 0
      :                          @10164
137080: 28 0b cb 00              jump @12868
      :                          @10165
137084: 54 27 00 20 09           jump @10167 if a0 <=u 8192
      :                          @10166
137089: 28 02 cb 00              jump @12868
      :                          @10167
137093: 97 77 03                 a0 = a0 << 0x3
137096: 33 08 c0 22 03           a1 = 0x322c0
137101: 95 88 00 00 01           a1 = a1 + 0x10000
137106: 01                       fallthrough
      :                          @10168
137107: 82 89                    a2 = u64 [a1]
137109: c9 98 0a                 a3 = a1 - a2
137112: 82 1b 60                 a4 = u64 [sp + 0x60]
137115: aa ba 07                 jump @10170 if a3 == a4
      :                          @10169
137118: 28 e5 ca 00              jump @12868
      :                          @10170
137122: c9 79 0a                 a3 = a2 - a0
137125: 01                       fallthrough
      :                          @10171
137126: 82 8b                    a4 = u64 [a1]
137128: ab 9b eb                 jump @10168 if a4 != a2
      :                          @10172
137131: 7b 8a                    u64 [a1] = a3
137133: 33 0c                    a5 = 0
137135: 01                       fallthrough
      :                          @10173
137136: ab 9b e3                 jump @10168 if a4 != a2
      :                          @10174
137139: 28 d0 ca 00              jump @12868
      :                          @10175 [@dyn 893]
137143: 3a 08 78 12 03           a1 = u64 [0x31278]
137148: 97 89 0d                 a2 = a1 << 0xd
137151: d3 98 08                 a1 = a1 ^ a2
137154: 98 89 07                 a2 = a1 >> 0x7
137157: d3 98 08                 a1 = a1 ^ a2
137160: 97 89 11                 a2 = a1 << 0x11
137163: d3 89 09                 a2 = a2 ^ a1
137166: 3e 09 78 12 03           u64 [0x31278] = a2
137171: 84 88 03                 a1 = a1 & 0x3
137174: 95 88 01                 a1 = a1 + 0x1
137177: 7b 18 c8 01              u64 [sp + 0x1c8] = a1
137181: 3a 08 78 12 03           a1 = u64 [0x31278]
137186: 97 89 0d                 a2 = a1 << 0xd
137189: d3 98 08                 a1 = a1 ^ a2
137192: 98 89 07                 a2 = a1 >> 0x7
137195: d3 98 08                 a1 = a1 ^ a2
137198: 97 89 11                 a2 = a1 << 0x11
137201: d3 89 09                 a2 = a2 ^ a1
137204: 3e 09 78 12 03           u64 [0x31278] = a2
137209: 82 17 c8 01              a0 = u64 [sp + 0x1c8]
137213: 84 88 03                 a1 = a1 & 0x3
137216: 95 88 01                 a1 = a1 + 0x1
137219: 7b 18 20 01              u64 [sp + 0x120] = a1
137223: 50 20 fc 06 ce 29 ff     ra = 1788, jump @6527
      :                          @10176 [@dyn 894]
137230: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
137234: 95 17 c8 01              a0 = sp + 0x1c8
137238: 7b 17 90 02              u64 [sp + 0x290] = a0
137242: 33 07 2c 0c              a0 = 0xc2c
137246: 7b 17 98 02              u64 [sp + 0x298] = a0
137250: 95 18 20 01              a1 = sp + 0x120
137254: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
137258: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
137262: 95 18 e0 01              a1 = sp + 0x1e0
137266: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
137270: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
137274: 33 07 20 13 01           a0 = 0x11320
137279: 7b 17 38 02              u64 [sp + 0x238] = a0
137283: 49 21 40 02 03           u64 [sp + 576] = 0x3
137288: 49 21 58 02              u64 [sp + 600] = 0
137292: 95 18 90 02              a1 = sp + 0x290
137296: 7b 18 48 02              u64 [sp + 0x248] = a1
137300: 49 21 50 02 03           u64 [sp + 592] = 0x3
137305: 95 17 08 02              a0 = sp + 0x208
137309: 95 18 38 02              a1 = sp + 0x238
137313: 50 20 fe 06 99 37 fe     ra = 1790, jump @1503
      :                          @10177 [@dyn 895]
137320: 82 16 10 02              s1 = u64 [sp + 0x210]
137324: 82 1b 18 02              a4 = u64 [sp + 0x218]
137328: 82 17 08 02              a0 = u64 [sp + 0x208]
137332: 7b 17 70                 u64 [sp + 0x70] = a0
137335: 33 07 02                 a0 = 0x2
137338: 33 08                    a1 = 0
137340: 33 09                    a2 = 0
137342: 64 6a                    a3 = s1
137344: 33 00 00 07              ra = 0x700
137348: 0a 64                    ecalli 100 // 'log'
137350: 01                       fallthrough
      :                          @10178 [@dyn 896]
137351: 82 1c 70                 a5 = u64 [sp + 0x70]
137354: 82 17 68                 a0 = u64 [sp + 0x68]
137357: c8 c7 07                 a0 = a0 + a5
137360: 55 37 00 00 ff 0a        jump @10180 if a0 >=u 4294901760
      :                          @10179
137366: 28 ed c9 00              jump @12868
      :                          @10180
137370: 33 07 c0 22 03           a0 = 0x322c0
137375: 95 77 00 00 01           a0 = a0 + 0x10000
137380: 01                       fallthrough
      :                          @10181
137381: 82 78                    a1 = u64 [a0]
137383: c9 87 09                 a2 = a0 - a1
137386: aa 69 07                 jump @10183 if a2 == s1
      :                          @10182
137389: 28 d6 c9 00              jump @12868
      :                          @10183
137393: c9 c8 09                 a2 = a1 - a5
137396: 01                       fallthrough
      :                          @10184
137397: 82 7a                    a3 = u64 [a0]
137399: ab 8a ee                 jump @10181 if a3 != a1
      :                          @10185
137402: 7b 79                    u64 [a0] = a2
137404: 33 0b                    a4 = 0
137406: 01                       fallthrough
      :                          @10186
137407: ab 8a e6                 jump @10181 if a3 != a1
      :                          @10187
137410: 28 c1 c9 00              jump @12868
      :                          @10188 [@dyn 897]
137414: 3a 08 78 12 03           a1 = u64 [0x31278]
137419: 97 89 0d                 a2 = a1 << 0xd
137422: d3 89 09                 a2 = a2 ^ a1
137425: 98 9a 07                 a3 = a2 >> 0x7
137428: 3a 08 60 11 03           a1 = u64 [0x31160]
137433: d3 a9 09                 a2 = a2 ^ a3
137436: 97 9a 11                 a3 = a2 << 0x11
137439: d3 a9 09                 a2 = a2 ^ a3
137442: ca 89 0a                 a3 = a2 * a1
137445: 3e 09 78 12 03           u64 [0x31278] = a2
137450: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
137460: d6 ba 09                 a2 = a3 mulhu a4
137463: 98 9c 04                 a5 = a2 >> 0x4
137466: 96 cc 14                 a5 = a5 * 0x14
137469: c9 ca 0a                 a3 = a3 - a5
137472: 95 aa 02                 a3 = a3 + 0x2
137475: 7b 1a c8 01              u64 [sp + 0x1c8] = a3
137479: 3a 0a 78 12 03           a3 = u64 [0x31278]
137484: 97 ac 0d                 a5 = a3 << 0xd
137487: d3 ca 0a                 a3 = a3 ^ a5
137490: 98 ac 07                 a5 = a3 >> 0x7
137493: d3 ca 0a                 a3 = a3 ^ a5
137496: 97 ac 11                 a5 = a3 << 0x11
137499: d3 ca 0a                 a3 = a3 ^ a5
137502: ca 8a 0c                 a5 = a3 * a1
137505: 3e 0a 78 12 03           u64 [0x31278] = a3
137510: d6 bc 07                 a0 = a5 mulhu a4
137513: 98 77 04                 a0 = a0 >> 0x4
137516: 82 18 c8 01              a1 = u64 [sp + 0x1c8]
137520: 96 77 14                 a0 = a0 * 0x14
137523: c9 7c 09                 a2 = a5 - a0
137526: 95 97 02                 a0 = a2 + 0x2
137529: 7b 17 20 01              u64 [sp + 0x120] = a0
137533: 64 8b                    a4 = a1
137535: 64 7c                    a5 = a0
137537: 01                       fallthrough
      :                          @10189
137538: 64 ca                    a3 = a5
137540: cd cb 0c                 a5 = a4 %u a5
137543: 64 ab                    a4 = a3
137545: 52 0c f9                 jump @10189 if a5 != 0
      :                          @10190
137548: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
137551: 95 99 01                 a2 = a2 + 0x1
137554: ca 89 08                 a1 = a2 * a1
137557: c9 78 08                 a1 = a1 - a0
137560: 94 a8                    a1 = 0 if a3 != 0
137562: 7b 18 e0 01              u64 [sp + 0x1e0] = a1
137566: 95 17 c8 01              a0 = sp + 0x1c8
137570: 7b 17 90 02              u64 [sp + 0x290] = a0
137574: 33 07 2c 0c              a0 = 0xc2c
137578: 7b 17 98 02              u64 [sp + 0x298] = a0
137582: 95 18 20 01              a1 = sp + 0x120
137586: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
137590: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
137594: 95 18 e0 01              a1 = sp + 0x1e0
137598: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
137602: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
137606: 33 07 60 13 01           a0 = 0x11360
137611: 7b 17 38 02              u64 [sp + 0x238] = a0
137615: 49 21 40 02 03           u64 [sp + 576] = 0x3
137620: 49 21 58 02              u64 [sp + 600] = 0
137624: 95 18 90 02              a1 = sp + 0x290
137628: 7b 18 48 02              u64 [sp + 0x248] = a1
137632: 49 21 50 02 03           u64 [sp + 592] = 0x3
137637: 95 17 08 02              a0 = sp + 0x208
137641: 95 18 38 02              a1 = sp + 0x238
137645: 50 20 04 07 4d 36 fe     ra = 1796, jump @1503
      :                          @10191 [@dyn 898]
137652: 82 16 10 02              s1 = u64 [sp + 0x210]
137656: 82 1b 18 02              a4 = u64 [sp + 0x218]
137660: 82 17 08 02              a0 = u64 [sp + 0x208]
137664: 7b 17 70                 u64 [sp + 0x70] = a0
137667: 33 07 02                 a0 = 0x2
137670: 33 08                    a1 = 0
137672: 33 09                    a2 = 0
137674: 64 6a                    a3 = s1
137676: 33 00 06 07              ra = 0x706
137680: 0a 64                    ecalli 100 // 'log'
137682: 01                       fallthrough
      :                          @10192 [@dyn 899]
137683: 82 1c 70                 a5 = u64 [sp + 0x70]
137686: 82 17 68                 a0 = u64 [sp + 0x68]
137689: c8 c7 07                 a0 = a0 + a5
137692: 55 37 00 00 ff 0a        jump @10194 if a0 >=u 4294901760
      :                          @10193
137698: 28 a1 c8 00              jump @12868
      :                          @10194
137702: 33 07 c0 22 03           a0 = 0x322c0
137707: 95 77 00 00 01           a0 = a0 + 0x10000
137712: 01                       fallthrough
      :                          @10195
137713: 82 78                    a1 = u64 [a0]
137715: c9 87 09                 a2 = a0 - a1
137718: aa 69 07                 jump @10197 if a2 == s1
      :                          @10196
137721: 28 8a c8 00              jump @12868
      :                          @10197
137725: c9 c8 09                 a2 = a1 - a5
137728: 01                       fallthrough
      :                          @10198
137729: 82 7a                    a3 = u64 [a0]
137731: ab 8a ee                 jump @10195 if a3 != a1
      :                          @10199
137734: 7b 79                    u64 [a0] = a2
137736: 33 0b                    a4 = 0
137738: 01                       fallthrough
      :                          @10200
137739: ab 8a e6                 jump @10195 if a3 != a1
      :                          @10201
137742: 28 75 c8 00              jump @12868
      :                          @10202 [@dyn 900]
137746: 3a 08 78 12 03           a1 = u64 [0x31278]
137751: 97 89 0d                 a2 = a1 << 0xd
137754: d3 98 08                 a1 = a1 ^ a2
137757: 98 89 07                 a2 = a1 >> 0x7
137760: 3a 0a 60 11 03           a3 = u64 [0x31160]
137765: d3 98 08                 a1 = a1 ^ a2
137768: 97 89 11                 a2 = a1 << 0x11
137771: d3 98 08                 a1 = a1 ^ a2
137774: ca a8 09                 a2 = a1 * a3
137777: 3a 0b 70 11 03           a4 = u64 [0x31170]
137782: 3e 08 78 12 03           u64 [0x31278] = a1
137787: 98 98 01                 a1 = a2 >> 0x1
137790: d6 b8 08                 a1 = a1 mulhu a4
137793: 98 88 04                 a1 = a1 >> 0x4
137796: 96 88 32                 a1 = a1 * 0x32
137799: c9 89 09                 a2 = a2 - a1
137802: 7b 19 c8 01              u64 [sp + 0x1c8] = a2
137806: 3a 08 78 12 03           a1 = u64 [0x31278]
137811: 97 89 0d                 a2 = a1 << 0xd
137814: d3 98 08                 a1 = a1 ^ a2
137817: 98 89 07                 a2 = a1 >> 0x7
137820: d3 98 08                 a1 = a1 ^ a2
137823: 97 89 11                 a2 = a1 << 0x11
137826: d3 98 08                 a1 = a1 ^ a2
137829: ca a8 09                 a2 = a1 * a3
137832: 3a 0a b0 11 03           a3 = u64 [0x311b0]
137837: 3e 08 78 12 03           u64 [0x31278] = a1
137842: 98 97 02                 a0 = a2 >> 0x2
137845: d6 a7 07                 a0 = a0 mulhu a3
137848: 98 77 02                 a0 = a0 >> 0x2
137851: 96 78 64                 a1 = a0 * 0x64
137854: 82 17 c8 01              a0 = u64 [sp + 0x1c8]
137858: c9 89 08                 a1 = a2 - a1
137861: 95 88 01                 a1 = a1 + 0x1
137864: 7b 18 20 01              u64 [sp + 0x120] = a1
137868: 50 20 0a 07 0f 28 ff     ra = 1802, jump @6548
      :                          @10203 [@dyn 901]
137875: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
137879: 95 17 c8 01              a0 = sp + 0x1c8
137883: 7b 17 90 02              u64 [sp + 0x290] = a0
137887: 33 07 2c 0c              a0 = 0xc2c
137891: 7b 17 98 02              u64 [sp + 0x298] = a0
137895: 95 18 20 01              a1 = sp + 0x120
137899: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
137903: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
137907: 95 18 e0 01              a1 = sp + 0x1e0
137911: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
137915: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
137919: 33 07 98 13 01           a0 = 0x11398
137924: 7b 17 38 02              u64 [sp + 0x238] = a0
137928: 49 21 40 02 03           u64 [sp + 576] = 0x3
137933: 49 21 58 02              u64 [sp + 600] = 0
137937: 95 18 90 02              a1 = sp + 0x290
137941: 7b 18 48 02              u64 [sp + 0x248] = a1
137945: 49 21 50 02 03           u64 [sp + 592] = 0x3
137950: 95 17 08 02              a0 = sp + 0x208
137954: 95 18 38 02              a1 = sp + 0x238
137958: 50 20 0c 07 14 35 fe     ra = 1804, jump @1503
      :                          @10204 [@dyn 902]
137965: 82 16 10 02              s1 = u64 [sp + 0x210]
137969: 82 1b 18 02              a4 = u64 [sp + 0x218]
137973: 82 17 08 02              a0 = u64 [sp + 0x208]
137977: 7b 17 70                 u64 [sp + 0x70] = a0
137980: 33 07 02                 a0 = 0x2
137983: 33 08                    a1 = 0
137985: 33 09                    a2 = 0
137987: 64 6a                    a3 = s1
137989: 33 00 0e 07              ra = 0x70e
137993: 0a 64                    ecalli 100 // 'log'
137995: 01                       fallthrough
      :                          @10205 [@dyn 903]
137996: 82 1c 70                 a5 = u64 [sp + 0x70]
137999: 82 17 68                 a0 = u64 [sp + 0x68]
138002: c8 c7 07                 a0 = a0 + a5
138005: 55 37 00 00 ff 0a        jump @10207 if a0 >=u 4294901760
      :                          @10206
138011: 28 68 c7 00              jump @12868
      :                          @10207
138015: 33 07 c0 22 03           a0 = 0x322c0
138020: 95 77 00 00 01           a0 = a0 + 0x10000
138025: 01                       fallthrough
      :                          @10208
138026: 82 78                    a1 = u64 [a0]
138028: c9 87 09                 a2 = a0 - a1
138031: aa 69 07                 jump @10210 if a2 == s1
      :                          @10209
138034: 28 51 c7 00              jump @12868
      :                          @10210
138038: c9 c8 09                 a2 = a1 - a5
138041: 01                       fallthrough
      :                          @10211
138042: 82 7a                    a3 = u64 [a0]
138044: ab 8a ee                 jump @10208 if a3 != a1
      :                          @10212
138047: 7b 79                    u64 [a0] = a2
138049: 33 0b                    a4 = 0
138051: 01                       fallthrough
      :                          @10213
138052: ab 8a e6                 jump @10208 if a3 != a1
      :                          @10214
138055: 28 3c c7 00              jump @12868
      :                          @10215 [@dyn 904]
138059: 3a 08 78 12 03           a1 = u64 [0x31278]
138064: 97 89 0d                 a2 = a1 << 0xd
138067: d3 89 09                 a2 = a2 ^ a1
138070: 98 9a 07                 a3 = a2 >> 0x7
138073: 3a 08 60 11 03           a1 = u64 [0x31160]
138078: d3 a9 09                 a2 = a2 ^ a3
138081: 97 9a 11                 a3 = a2 << 0x11
138084: d3 a9 09                 a2 = a2 ^ a3
138087: ca 89 0a                 a3 = a2 * a1
138090: 3e 09 78 12 03           u64 [0x31278] = a2
138095: 14 09 cd cc cc cc cc cc cc cc a2 = 0xcccccccccccccccd
138105: d6 9a 0b                 a4 = a3 mulhu a2
138108: 98 bb 04                 a4 = a4 >> 0x4
138111: 33 0c 14                 a5 = 0x14
138114: ca cb 0b                 a4 = a4 * a5
138117: c9 ba 0a                 a3 = a3 - a4
138120: 7b 1a c8 01              u64 [sp + 0x1c8] = a3
138124: 3a 0a 78 12 03           a3 = u64 [0x31278]
138129: 97 ab 0d                 a4 = a3 << 0xd
138132: d3 ba 0a                 a3 = a3 ^ a4
138135: 98 ab 07                 a4 = a3 >> 0x7
138138: d3 ba 0a                 a3 = a3 ^ a4
138141: 97 ab 11                 a4 = a3 << 0x11
138144: d3 ba 0a                 a3 = a3 ^ a4
138147: ca 8a 08                 a1 = a3 * a1
138150: 3e 0a 78 12 03           u64 [0x31278] = a3
138155: d6 98 07                 a0 = a1 mulhu a2
138158: 98 79 02                 a2 = a0 >> 0x2
138161: 84 77 fc                 a0 = a0 & 0xfffffffffffffffc
138164: c8 79 09                 a2 = a2 + a0
138167: 82 17 c8 01              a0 = u64 [sp + 0x1c8]
138171: c9 98 08                 a1 = a1 - a2
138174: 95 88 01                 a1 = a1 + 0x1
138177: 7b 18 20 01              u64 [sp + 0x120] = a1
138181: 50 20 12 07 57 28 ff     ra = 1810, jump @6579
      :                          @10216 [@dyn 905]
138188: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
138192: 95 17 c8 01              a0 = sp + 0x1c8
138196: 7b 17 90 02              u64 [sp + 0x290] = a0
138200: 33 07 2c 0c              a0 = 0xc2c
138204: 7b 17 98 02              u64 [sp + 0x298] = a0
138208: 95 18 20 01              a1 = sp + 0x120
138212: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
138216: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
138220: 95 18 e0 01              a1 = sp + 0x1e0
138224: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
138228: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
138232: 33 07 d8 13 01           a0 = 0x113d8
138237: 7b 17 38 02              u64 [sp + 0x238] = a0
138241: 49 21 40 02 03           u64 [sp + 576] = 0x3
138246: 49 21 58 02              u64 [sp + 600] = 0
138250: 95 18 90 02              a1 = sp + 0x290
138254: 7b 18 48 02              u64 [sp + 0x248] = a1
138258: 49 21 50 02 03           u64 [sp + 592] = 0x3
138263: 95 17 08 02              a0 = sp + 0x208
138267: 95 18 38 02              a1 = sp + 0x238
138271: 50 20 14 07 db 33 fe     ra = 1812, jump @1503
      :                          @10217 [@dyn 906]
138278: 82 16 10 02              s1 = u64 [sp + 0x210]
138282: 82 1b 18 02              a4 = u64 [sp + 0x218]
138286: 82 17 08 02              a0 = u64 [sp + 0x208]
138290: 7b 17 70                 u64 [sp + 0x70] = a0
138293: 33 07 02                 a0 = 0x2
138296: 33 08                    a1 = 0
138298: 33 09                    a2 = 0
138300: 64 6a                    a3 = s1
138302: 33 00 16 07              ra = 0x716
138306: 0a 64                    ecalli 100 // 'log'
138308: 01                       fallthrough
      :                          @10218 [@dyn 907]
138309: 82 1c 70                 a5 = u64 [sp + 0x70]
138312: 82 17 68                 a0 = u64 [sp + 0x68]
138315: c8 c7 07                 a0 = a0 + a5
138318: 55 37 00 00 ff 0a        jump @10220 if a0 >=u 4294901760
      :                          @10219
138324: 28 2f c6 00              jump @12868
      :                          @10220
138328: 33 07 c0 22 03           a0 = 0x322c0
138333: 95 77 00 00 01           a0 = a0 + 0x10000
138338: 01                       fallthrough
      :                          @10221
138339: 82 78                    a1 = u64 [a0]
138341: c9 87 09                 a2 = a0 - a1
138344: aa 69 07                 jump @10223 if a2 == s1
      :                          @10222
138347: 28 18 c6 00              jump @12868
      :                          @10223
138351: c9 c8 09                 a2 = a1 - a5
138354: 01                       fallthrough
      :                          @10224
138355: 82 7a                    a3 = u64 [a0]
138357: ab 8a ee                 jump @10221 if a3 != a1
      :                          @10225
138360: 7b 79                    u64 [a0] = a2
138362: 33 0b                    a4 = 0
138364: 01                       fallthrough
      :                          @10226
138365: ab 8a e6                 jump @10221 if a3 != a1
      :                          @10227
138368: 28 03 c6 00              jump @12868
      :                          @10228 [@dyn 908]
138372: 3a 08 78 12 03           a1 = u64 [0x31278]
138377: 97 89 0d                 a2 = a1 << 0xd
138380: d3 89 09                 a2 = a2 ^ a1
138383: 98 9a 07                 a3 = a2 >> 0x7
138386: 3a 08 60 11 03           a1 = u64 [0x31160]
138391: d3 a9 09                 a2 = a2 ^ a3
138394: 97 9a 11                 a3 = a2 << 0x11
138397: d3 a9 09                 a2 = a2 ^ a3
138400: ca 89 0a                 a3 = a2 * a1
138403: 3e 09 78 12 03           u64 [0x31278] = a2
138408: 14 09 cd cc cc cc cc cc cc cc a2 = 0xcccccccccccccccd
138418: d6 9a 0b                 a4 = a3 mulhu a2
138421: 98 bb 03                 a4 = a4 >> 0x3
138424: 33 0c 0a                 a5 = 0xa
138427: ca cb 0b                 a4 = a4 * a5
138430: c9 ba 0a                 a3 = a3 - a4
138433: 95 aa 01                 a3 = a3 + 0x1
138436: 7b 1a c8 01              u64 [sp + 0x1c8] = a3
138440: 3a 0a 78 12 03           a3 = u64 [0x31278]
138445: 97 ab 0d                 a4 = a3 << 0xd
138448: d3 ba 0a                 a3 = a3 ^ a4
138451: 98 ab 07                 a4 = a3 >> 0x7
138454: d3 ba 0a                 a3 = a3 ^ a4
138457: 97 ab 11                 a4 = a3 << 0x11
138460: d3 ba 0a                 a3 = a3 ^ a4
138463: ca 8a 08                 a1 = a3 * a1
138466: 3e 0a 78 12 03           u64 [0x31278] = a3
138471: d6 98 07                 a0 = a1 mulhu a2
138474: 98 79 02                 a2 = a0 >> 0x2
138477: 84 7a fc                 a3 = a0 & 0xfffffffffffffffc
138480: 82 17 c8 01              a0 = u64 [sp + 0x1c8]
138484: c8 a9 09                 a2 = a2 + a3
138487: c9 98 08                 a1 = a1 - a2
138490: 7b 18 20 01              u64 [sp + 0x120] = a1
138494: 50 20 1a 07 69 27 ff     ra = 1818, jump @6586
      :                          @10229 [@dyn 909]
138501: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
138505: 95 17 c8 01              a0 = sp + 0x1c8
138509: 7b 17 90 02              u64 [sp + 0x290] = a0
138513: 33 07 2c 0c              a0 = 0xc2c
138517: 7b 17 98 02              u64 [sp + 0x298] = a0
138521: 95 18 20 01              a1 = sp + 0x120
138525: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
138529: 33 08 98 0c              a1 = 0xc98
138533: 7b 18 a8 02              u64 [sp + 0x2a8] = a1
138537: 95 18 e0 01              a1 = sp + 0x1e0
138541: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
138545: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
138549: 33 07 10 14 01           a0 = 0x11410
138554: 7b 17 38 02              u64 [sp + 0x238] = a0
138558: 49 21 40 02 03           u64 [sp + 576] = 0x3
138563: 49 21 58 02              u64 [sp + 600] = 0
138567: 95 18 90 02              a1 = sp + 0x290
138571: 7b 18 48 02              u64 [sp + 0x248] = a1
138575: 49 21 50 02 03           u64 [sp + 592] = 0x3
138580: 95 17 08 02              a0 = sp + 0x208
138584: 95 18 38 02              a1 = sp + 0x238
138588: 50 20 1c 07 9e 32 fe     ra = 1820, jump @1503
      :                          @10230 [@dyn 910]
138595: 82 16 10 02              s1 = u64 [sp + 0x210]
138599: 82 1b 18 02              a4 = u64 [sp + 0x218]
138603: 82 17 08 02              a0 = u64 [sp + 0x208]
138607: 7b 17 70                 u64 [sp + 0x70] = a0
138610: 33 07 02                 a0 = 0x2
138613: 33 08                    a1 = 0
138615: 33 09                    a2 = 0
138617: 64 6a                    a3 = s1
138619: 33 00 1e 07              ra = 0x71e
138623: 0a 64                    ecalli 100 // 'log'
138625: 01                       fallthrough
      :                          @10231 [@dyn 911]
138626: 82 1c 70                 a5 = u64 [sp + 0x70]
138629: 82 17 68                 a0 = u64 [sp + 0x68]
138632: c8 c7 07                 a0 = a0 + a5
138635: 55 37 00 00 ff 0a        jump @10233 if a0 >=u 4294901760
      :                          @10232
138641: 28 f2 c4 00              jump @12868
      :                          @10233
138645: 33 07 c0 22 03           a0 = 0x322c0
138650: 95 77 00 00 01           a0 = a0 + 0x10000
138655: 01                       fallthrough
      :                          @10234
138656: 82 78                    a1 = u64 [a0]
138658: c9 87 09                 a2 = a0 - a1
138661: aa 69 07                 jump @10236 if a2 == s1
      :                          @10235
138664: 28 db c4 00              jump @12868
      :                          @10236
138668: c9 c8 09                 a2 = a1 - a5
138671: 01                       fallthrough
      :                          @10237
138672: 82 7a                    a3 = u64 [a0]
138674: ab 8a ee                 jump @10234 if a3 != a1
      :                          @10238
138677: 7b 79                    u64 [a0] = a2
138679: 33 0b                    a4 = 0
138681: 01                       fallthrough
      :                          @10239
138682: ab 8a e6                 jump @10234 if a3 != a1
      :                          @10240
138685: 28 c6 c4 00              jump @12868
      :                          @10241 [@dyn 912]
138689: 3a 08 78 12 03           a1 = u64 [0x31278]
138694: 97 89 0d                 a2 = a1 << 0xd
138697: d3 98 08                 a1 = a1 ^ a2
138700: 98 89 07                 a2 = a1 >> 0x7
138703: d3 98 08                 a1 = a1 ^ a2
138706: 3a 09 60 11 03           a2 = u64 [0x31160]
138711: 97 8a 11                 a3 = a1 << 0x11
138714: d3 a8 08                 a1 = a1 ^ a3
138717: ca 98 09                 a2 = a1 * a2
138720: 3e 08 78 12 03           u64 [0x31278] = a1
138725: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
138735: d6 79 07                 a0 = a2 mulhu a0
138738: 98 77 04                 a0 = a0 >> 0x4
138741: 96 77 14                 a0 = a0 * 0x14
138744: c9 79 09                 a2 = a2 - a0
138747: 95 99 01                 a2 = a2 + 0x1
138750: 49 21 e0 00              u64 [sp + 224] = 0
138754: 7b 19 e8 00              u64 [sp + 0xe8] = a2
138758: 46 21 f0 00              u8 [sp + 240] = 0
138762: 95 17 e0 01              a0 = sp + 0x1e0
138766: 95 18 e0 00              a1 = sp + 0xe0
138770: 50 20 22 07 3f 65 fe     ra = 1826, jump @2302
      :                          @10242 [@dyn 913]
138777: 82 18 e8 01              a1 = u64 [sp + 0x1e8]
138781: 82 19 f0 01              a2 = u64 [sp + 0x1f0]
138785: 95 17 38 02              a0 = sp + 0x238
138789: 95 16 38 02              s1 = sp + 0x238
138793: 7b 18 70                 u64 [sp + 0x70] = a1
138796: 50 20 24 07 74 27 ff     ra = 1828, jump @6608
      :                          @10243 [@dyn 914]
138803: 7b 16 20 01              u64 [sp + 0x120] = s1
138807: 33 07 24 02              a0 = 0x224
138811: 7b 17 28 01              u64 [sp + 0x128] = a0
138815: 33 07 40 14 01           a0 = 0x11440
138820: 7b 17 90 02              u64 [sp + 0x290] = a0
138824: 49 21 98 02 01           u64 [sp + 664] = 0x1
138829: 49 21 b0 02              u64 [sp + 688] = 0
138833: 95 18 20 01              a1 = sp + 0x120
138837: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
138841: 49 21 a8 02 01           u64 [sp + 680] = 0x1
138846: 95 17 08 02              a0 = sp + 0x208
138850: 95 18 90 02              a1 = sp + 0x290
138854: 50 20 26 07 94 31 fe     ra = 1830, jump @1503
      :                          @10244 [@dyn 915]
138861: 82 18 38 02              a1 = u64 [sp + 0x238]
138865: 51 08 2e                 jump @10251 if a1 == 0
      :                          @10245
138868: 56 28 00 20 2b           jump @10251 if a1 >u 8192
      :                          @10246
138873: 82 17 40 02              a0 = u64 [sp + 0x240]
138877: 97 88 03                 a1 = a1 << 0x3
138880: 33 09 c0 22 03           a2 = 0x322c0
138885: 95 99 00 00 01           a2 = a2 + 0x10000
138890: 01                       fallthrough
      :                          @10247
138891: 82 9a                    a3 = u64 [a2]
138893: c9 a9 0b                 a4 = a2 - a3
138896: ab 7b 0f                 jump @10251 if a4 != a0
      :                          @10248
138899: c9 8a 0b                 a4 = a3 - a1
138902: 01                       fallthrough
      :                          @10249
138903: 82 9c                    a5 = u64 [a2]
138905: ab ac f2                 jump @10247 if a5 != a3
      :                          @10250
138908: 7b 9b                    u64 [a2] = a4
138910: 01                       fallthrough
      :                          @10251
138911: 82 16 10 02              s1 = u64 [sp + 0x210]
138915: 82 1b 18 02              a4 = u64 [sp + 0x218]
138919: 82 17 08 02              a0 = u64 [sp + 0x208]
138923: 7b 17 60                 u64 [sp + 0x60] = a0
138926: 33 07 02                 a0 = 0x2
138929: 33 08                    a1 = 0
138931: 33 09                    a2 = 0
138933: 64 6a                    a3 = s1
138935: 33 00 28 07              ra = 0x728
138939: 0a 64                    ecalli 100 // 'log'
138941: 01                       fallthrough
      :                          @10252 [@dyn 916]
138942: 82 1c 60                 a5 = u64 [sp + 0x60]
138945: 82 17 68                 a0 = u64 [sp + 0x68]
138948: c8 c7 07                 a0 = a0 + a5
138951: 53 37 00 00 ff 25        jump @10258 if a0 <u 4294901760
      :                          @10253
138957: 33 07 c0 22 03           a0 = 0x322c0
138962: 95 77 00 00 01           a0 = a0 + 0x10000
138967: 01                       fallthrough
      :                          @10254
138968: 82 78                    a1 = u64 [a0]
138970: c9 87 09                 a2 = a0 - a1
138973: ab 69 0f                 jump @10258 if a2 != s1
      :                          @10255
138976: c9 c8 09                 a2 = a1 - a5
138979: 01                       fallthrough
      :                          @10256
138980: 82 7a                    a3 = u64 [a0]
138982: ab 8a f2                 jump @10254 if a3 != a1
      :                          @10257
138985: 7b 79                    u64 [a0] = a2
138987: 01                       fallthrough
      :                          @10258
138988: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
138992: 82 16 70                 s1 = u64 [sp + 0x70]
138995: 52 07 07                 jump @10260 if a0 != 0
      :                          @10259
138998: 28 8d c3 00              jump @12868
      :                          @10260
139002: 54 27 00 20 09           jump @10262 if a0 <=u 8192
      :                          @10261
139007: 28 84 c3 00              jump @12868
      :                          @10262
139011: 97 77 03                 a0 = a0 << 0x3
139014: 33 08 c0 22 03           a1 = 0x322c0
139019: 95 88 00 00 01           a1 = a1 + 0x10000
139024: 01                       fallthrough
      :                          @10263
139025: 82 89                    a2 = u64 [a1]
139027: c9 98 0a                 a3 = a1 - a2
139030: aa 6a 07                 jump @10265 if a3 == s1
      :                          @10264
139033: 28 6a c3 00              jump @12868
      :                          @10265
139037: c9 79 0a                 a3 = a2 - a0
139040: 01                       fallthrough
      :                          @10266
139041: 82 8b                    a4 = u64 [a1]
139043: ab 9b ee                 jump @10263 if a4 != a2
      :                          @10267
139046: 7b 8a                    u64 [a1] = a3
139048: 33 0c                    a5 = 0
139050: 01                       fallthrough
      :                          @10268
139051: ab 9b e6                 jump @10263 if a4 != a2
      :                          @10269
139054: 28 55 c3 00              jump @12868
      :                          @10270 [@dyn 917]
139058: 3a 08 78 12 03           a1 = u64 [0x31278]
139063: 97 89 0d                 a2 = a1 << 0xd
139066: d3 98 08                 a1 = a1 ^ a2
139069: 98 8a 07                 a3 = a1 >> 0x7
139072: 3a 09 60 11 03           a2 = u64 [0x31160]
139077: d3 a8 08                 a1 = a1 ^ a3
139080: 97 8a 11                 a3 = a1 << 0x11
139083: d3 a8 08                 a1 = a1 ^ a3
139086: ca 98 0a                 a3 = a1 * a2
139089: 3e 08 78 12 03           u64 [0x31278] = a1
139094: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
139104: d6 ba 08                 a1 = a3 mulhu a4
139107: 98 8c 02                 a5 = a1 >> 0x2
139110: 84 88 fc                 a1 = a1 & 0xfffffffffffffffc
139113: c8 c8 08                 a1 = a1 + a5
139116: 3a 06 78 12 03           s1 = u64 [0x31278]
139121: c9 8a 08                 a1 = a3 - a1
139124: 95 8a 03                 a3 = a1 + 0x3
139127: 97 6c 0d                 a5 = s1 << 0xd
139130: d3 c6 06                 s1 = s1 ^ a5
139133: 98 6c 07                 a5 = s1 >> 0x7
139136: d3 c6 06                 s1 = s1 ^ a5
139139: 97 6c 11                 a5 = s1 << 0x11
139142: d3 6c 0c                 a5 = a5 ^ s1
139145: ca 9c 09                 a2 = a5 * a2
139148: 3e 0c 78 12 03           u64 [0x31278] = a5
139153: d6 b9 07                 a0 = a2 mulhu a4
139156: 98 7b 02                 a4 = a0 >> 0x2
139159: 84 77 fc                 a0 = a0 & 0xfffffffffffffffc
139162: c8 b7 07                 a0 = a0 + a4
139165: c9 79 07                 a0 = a2 - a0
139168: 95 79 03                 a2 = a0 + 0x3
139171: 7b 1a c8 01              u64 [sp + 0x1c8] = a3
139175: 7b 19 20 01              u64 [sp + 0x120] = a2
139179: 52 08 07                 jump @10272 if a1 != 0
      :                          @10271
139182: 28 cf d3 00              jump @13194
      :                          @10272
139186: 52 18 01 08              jump @10274 if a1 != 1
      :                          @10273
139190: 28 de d3 00              jump @13198
      :                          @10274
139194: 51 18 02 08              jump @10276 if a1 == 2
      :                          @10275
139198: 28 e9 d3 00              jump @13201
      :                          @10276
139202: 51 07 c6 d3 00           jump @13197 if a0 == 0
      :                          @10277
139207: 28 e0 d3 00              jump @13201
      :                          @10278 [@dyn 918]
139211: 3a 02 60 11 03           t0 = u64 [0x31160]
139216: 49 21 c8 01              u64 [sp + 456] = 0
139220: 49 21 d0 01 08           u64 [sp + 464] = 0x8
139225: 49 21 d8 01              u64 [sp + 472] = 0
139229: 33 06 0c                 s1 = 0xc
139232: 33 03 78 12 03           t1 = 0x31278
139237: 14 04 ab aa aa aa aa aa aa aa t2 = 0xaaaaaaaaaaaaaaab
139247: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
139257: 7b 17 70                 u64 [sp + 0x70] = a0
139260: 7b 12 40                 u64 [sp + 0x40] = t0
139263: 7b 14 38                 u64 [sp + 0x38] = t2
139266: 28 58                    jump @10281
      :                          @10279
139268: ca 29 07                 a0 = a2 * t0
139271: d6 47 09                 a2 = a0 mulhu t2
139274: 98 99 02                 a2 = a2 >> 0x2
139277: 96 99 06                 a2 = a2 * 0x6
139280: c9 97 07                 a0 = a0 - a2
139283: ca 2a 09                 a2 = a3 * t0
139286: d6 49 0a                 a3 = a2 mulhu t2
139289: 98 aa 02                 a3 = a3 >> 0x2
139292: 96 aa 06                 a3 = a3 * 0x6
139295: c9 a9 09                 a2 = a2 - a3
139298: ca 2c 0a                 a3 = a5 * t0
139301: 82 1b 70                 a4 = u64 [sp + 0x70]
139304: d6 ba 0b                 a4 = a3 mulhu a4
139307: 98 bb 04                 a4 = a4 >> 0x4
139310: 82 1c d0 01              a5 = u64 [sp + 0x1d0]
139314: 96 bb 14                 a4 = a4 * 0x14
139317: c9 ba 0a                 a3 = a3 - a4
139320: 96 8b 18                 a4 = a1 * 0x18
139323: c8 cb 0b                 a4 = a4 + a5
139326: 7b b7                    u64 [a4] = a0
139328: 7b b9 08                 u64 [a4 + 0x8] = a2
139331: 95 aa f6                 a3 = a3 + 0xfffffffffffffff6
139334: 7b ba 10                 u64 [a4 + 0x10] = a3
139337: 95 89 01                 a2 = a1 + 0x1
139340: 83 66 ff                 i32 s1 = s1 + 0xffffffffffffffff
139343: 7b 19 d8 01              u64 [sp + 0x1d8] = a2
139347: 52 06 07                 jump @10281 if s1 != 0
      :                          @10280
139350: 28 cb ad 00              jump @12472
      :                          @10281
139354: 3a 07 78 12 03           a0 = u64 [0x31278]
139359: 97 78 0d                 a1 = a0 << 0xd
139362: d3 87 07                 a0 = a0 ^ a1
139365: 98 78 07                 a1 = a0 >> 0x7
139368: d3 87 07                 a0 = a0 ^ a1
139371: 97 78 11                 a1 = a0 << 0x11
139374: d3 78 09                 a2 = a1 ^ a0
139377: 3e 09 78 12 03           u64 [0x31278] = a2
139382: 3a 07 78 12 03           a0 = u64 [0x31278]
139387: 97 78 0d                 a1 = a0 << 0xd
139390: d3 87 07                 a0 = a0 ^ a1
139393: 98 78 07                 a1 = a0 >> 0x7
139396: d3 87 07                 a0 = a0 ^ a1
139399: 97 78 11                 a1 = a0 << 0x11
139402: d3 78 0a                 a3 = a1 ^ a0
139405: 3e 0a 78 12 03           u64 [0x31278] = a3
139410: 3a 07 78 12 03           a0 = u64 [0x31278]
139415: 97 78 0d                 a1 = a0 << 0xd
139418: d3 87 07                 a0 = a0 ^ a1
139421: 98 78 07                 a1 = a0 >> 0x7
139424: d3 87 07                 a0 = a0 ^ a1
139427: 97 78 11                 a1 = a0 << 0x11
139430: d3 78 0c                 a5 = a1 ^ a0
139433: 3e 0c 78 12 03           u64 [0x31278] = a5
139438: 82 18 d8 01              a1 = u64 [sp + 0x1d8]
139442: 82 17 c8 01              a0 = u64 [sp + 0x1c8]
139446: ab 78 4e ff              jump @10279 if a1 != a0
      :                          @10282
139450: 95 17 c8 01              a0 = sp + 0x1c8
139454: 7b 19 60                 u64 [sp + 0x60] = a2
139457: 7b 1a 58                 u64 [sp + 0x58] = a3
139460: 7b 1c 48                 u64 [sp + 0x48] = a5
139463: 50 20 2e 07 f9 32 fe     ra = 1838, jump @1593
      :                          @10283 [@dyn 919]
139470: 82 1c 48                 a5 = u64 [sp + 0x48]
139473: 82 1a 58                 a3 = u64 [sp + 0x58]
139476: 82 19 60                 a2 = u64 [sp + 0x60]
139479: 82 14 38                 t2 = u64 [sp + 0x38]
139482: 33 03 78 12 03           t1 = 0x31278
139487: 82 12 40                 t0 = u64 [sp + 0x40]
139490: 82 18 d8 01              a1 = u64 [sp + 0x1d8]
139494: 28 1e ff                 jump @10279
      :                          @10284 [@dyn 920]
139497: 14 08 ff ff ff ff ff ff ff 3f a1 = 0x3fffffffffffffff
139507: 95 17 90 02              a0 = sp + 0x290
139511: 33 09 05                 a2 = 0x5
139514: 50 20 32 07 aa 43 fe     ra = 1842, jump @1889
      :                          @10285 [@dyn 921]
139521: 95 17 08 02              a0 = sp + 0x208
139525: 95 18 90 02              a1 = sp + 0x290
139529: 33 09 05                 a2 = 0x5
139532: 50 20 34 07 e5 38 fe     ra = 1844, jump @1721
      :                          @10286 [@dyn 922]
139539: 82 17 18 02              a0 = u64 [sp + 0x218]
139543: 52 07 07                 jump @10288 if a0 != 0
      :                          @10287
139546: 28 89 d3 00              jump @13252
      :                          @10288
139550: 82 17 10 02              a0 = u64 [sp + 0x210]
139554: 82 78 10                 a1 = u64 [a0 + 0x10]
139557: 52 08 07                 jump @10290 if a1 != 0
      :                          @10289
139560: 28 6c d3 00              jump @13237
      :                          @10290
139564: 82 77 08                 a0 = u64 [a0 + 0x8]
139567: 49 07                    u64 [a0 + 0] = 0
139569: 82 18 18 02              a1 = u64 [sp + 0x218]
139573: 55 18 02 08              jump @10292 if a1 >=u 2
      :                          @10291
139577: 28 8a d2 00              jump @13209
      :                          @10292
139581: 82 18 10 02              a1 = u64 [sp + 0x210]
139585: 82 89 28                 a2 = u64 [a1 + 0x28]
139588: 55 19 02 08              jump @10294 if a2 >=u 2
      :                          @10293
139592: 28 47 d3 00              jump @13232
      :                          @10294
139596: 82 87 20                 a0 = u64 [a1 + 0x20]
139599: 49 17 08                 u64 [a0 + 8] = 0
139602: 82 18 18 02              a1 = u64 [sp + 0x218]
139606: 55 18 03 08              jump @10296 if a1 >=u 3
      :                          @10295
139610: 28 6b d2 00              jump @13211
      :                          @10296
139614: 82 17 10 02              a0 = u64 [sp + 0x210]
139618: 82 79 40                 a2 = u64 [a0 + 0x40]
139621: 55 19 03 08              jump @10298 if a2 >=u 3
      :                          @10297
139625: 28 27 d3 00              jump @13233
      :                          @10298
139629: 82 78 38                 a1 = u64 [a0 + 0x38]
139632: 49 18 10                 u64 [a1 + 16] = 0
139635: 82 18 18 02              a1 = u64 [sp + 0x218]
139639: 55 18 04 08              jump @10300 if a1 >=u 4
      :                          @10299
139643: 28 49 d2 00              jump @13210
      :                          @10300
139647: 82 79 58                 a2 = u64 [a0 + 0x58]
139650: 55 19 04 08              jump @10302 if a2 >=u 4
      :                          @10301
139654: 28 0b d3 00              jump @13234
      :                          @10302
139658: 82 79 50                 a2 = u64 [a0 + 0x50]
139661: 49 19 18                 u64 [a2 + 24] = 0
139664: 55 18 05 08              jump @10304 if a1 >=u 5
      :                          @10303
139668: 28 16 d3 00              jump @13259
      :                          @10304
139672: 82 79 70                 a2 = u64 [a0 + 0x70]
139675: 55 19 05 08              jump @10306 if a2 >=u 5
      :                          @10305
139679: 28 26 d3 00              jump @13282
      :                          @10306
139683: 82 77 68                 a0 = u64 [a0 + 0x68]
139686: 3a 0c 60 11 03           a5 = u64 [0x31160]
139691: 49 17 20                 u64 [a0 + 32] = 0
139694: 33 04 0a                 t2 = 0xa
139697: 33 00 78 12 03           ra = 0x31278
139702: 14 03 cd cc cc cc cc cc cc cc t1 = 0xcccccccccccccccd
139712: 01                       fallthrough
      :                          @10307
139713: 3a 07 78 12 03           a0 = u64 [0x31278]
139718: 97 78 0d                 a1 = a0 << 0xd
139721: d3 87 07                 a0 = a0 ^ a1
139724: 98 78 07                 a1 = a0 >> 0x7
139727: d3 87 07                 a0 = a0 ^ a1
139730: 97 78 11                 a1 = a0 << 0x11
139733: d3 87 07                 a0 = a0 ^ a1
139736: 3e 07 78 12 03           u64 [0x31278] = a0
139741: 3a 08 78 12 03           a1 = u64 [0x31278]
139746: ca c7 07                 a0 = a0 * a5
139749: 97 89 0d                 a2 = a1 << 0xd
139752: d3 98 08                 a1 = a1 ^ a2
139755: 98 89 07                 a2 = a1 >> 0x7
139758: d3 98 08                 a1 = a1 ^ a2
139761: 97 89 11                 a2 = a1 << 0x11
139764: d3 89 09                 a2 = a2 ^ a1
139767: 3e 09 78 12 03           u64 [0x31278] = a2
139772: 3a 08 78 12 03           a1 = u64 [0x31278]
139777: d6 37 0b                 a4 = a0 mulhu t1
139780: 98 b2 02                 t0 = a4 >> 0x2
139783: 97 86 0d                 s1 = a1 << 0xd
139786: d3 68 08                 a1 = a1 ^ s1
139789: 98 86 07                 s1 = a1 >> 0x7
139792: d3 68 08                 a1 = a1 ^ s1
139795: 97 86 11                 s1 = a1 << 0x11
139798: d3 86 06                 s1 = s1 ^ a1
139801: 3e 06 78 12 03           u64 [0x31278] = s1
139806: 82 18 18 02              a1 = u64 [sp + 0x218]
139810: 84 bb fc                 a4 = a4 & 0xfffffffffffffffc
139813: c8 2b 0b                 a4 = a4 + t0
139816: c9 b7 07                 a0 = a0 - a4
139819: ac 87 07                 jump @10309 if a0 <u a1
      :                          @10308
139822: 28 5e d2 00              jump @13229
      :                          @10309
139826: 64 cb                    a4 = a5
139828: ca c9 02                 t0 = a2 * a5
139831: 82 19 10 02              a2 = u64 [sp + 0x210]
139835: d6 32 0c                 a5 = t0 mulhu t1
139838: 98 ca 02                 a3 = a5 >> 0x2
139841: 96 77 18                 a0 = a0 * 0x18
139844: c8 79 09                 a2 = a2 + a0
139847: 82 98 10                 a1 = u64 [a2 + 0x10]
139850: 84 cc fc                 a5 = a5 & 0xfffffffffffffffc
139853: c8 ca 0a                 a3 = a3 + a5
139856: c9 a2 07                 a0 = t0 - a3
139859: ac 87 07                 jump @10311 if a0 <u a1
      :                          @10310
139862: 28 36 d2 00              jump @13229
      :                          @10311
139866: 82 98 08                 a1 = u64 [a2 + 0x8]
139869: 64 bc                    a5 = a4
139871: ca b6 09                 a2 = s1 * a4
139874: d6 39 0a                 a3 = a2 mulhu t1
139877: 97 77 03                 a0 = a0 << 0x3
139880: c8 87 07                 a0 = a0 + a1
139883: 82 78                    a1 = u64 [a0]
139885: 98 aa 04                 a3 = a3 >> 0x4
139888: 33 0b 14                 a4 = 0x14
139891: ca ba 0a                 a3 = a3 * a4
139894: c9 a9 09                 a2 = a2 - a3
139897: e5 89 08                 a1 = mins(a2, a1)
139900: 95 44 ff                 t2 = t2 + 0xffffffffffffffff
139903: 7b 78                    u64 [a0] = a1
139905: 52 04 40 ff              jump @10307 if t2 != 0
      :                          @10312
139909: 82 17 10 02              a0 = u64 [sp + 0x210]
139913: 82 18 18 02              a1 = u64 [sp + 0x218]
139917: 50 20 36 07 0c 27 ff     ra = 1846, jump @6717
      :                          @10313 [@dyn 923]
139924: 95 17 08 02              a0 = sp + 0x208
139928: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
139932: 33 07 44 02              a0 = 0x244
139936: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
139940: 33 07 f8 14 01           a0 = 0x114f8
139945: 7b 17 90 02              u64 [sp + 0x290] = a0
139949: 49 21 98 02 01           u64 [sp + 664] = 0x1
139954: 49 21 b0 02              u64 [sp + 688] = 0
139958: 95 18 e0 01              a1 = sp + 0x1e0
139962: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
139966: 49 21 a8 02 01           u64 [sp + 680] = 0x1
139971: 95 17 38 02              a0 = sp + 0x238
139975: 95 18 90 02              a1 = sp + 0x290
139979: 50 20 38 07 2f 2d fe     ra = 1848, jump @1503
      :                          @10314 [@dyn 924]
139986: 82 16 40 02              s1 = u64 [sp + 0x240]
139990: 82 1b 48 02              a4 = u64 [sp + 0x248]
139994: 82 17 38 02              a0 = u64 [sp + 0x238]
139998: 7b 17 70                 u64 [sp + 0x70] = a0
140001: 33 07 02                 a0 = 0x2
140004: 33 08                    a1 = 0
140006: 33 09                    a2 = 0
140008: 64 6a                    a3 = s1
140010: 33 00 3a 07              ra = 0x73a
140014: 0a 64                    ecalli 100 // 'log'
140016: 01                       fallthrough
      :                          @10315 [@dyn 925]
140017: 82 1c 70                 a5 = u64 [sp + 0x70]
140020: 82 17 68                 a0 = u64 [sp + 0x68]
140023: c8 c7 07                 a0 = a0 + a5
140026: 33 08 00 00 ff           a1 = 0xffffffffffff0000
140031: ae 87 07                 jump @10317 if a0 >=u a1
      :                          @10316
140034: 28 89 ba 00              jump @12767
      :                          @10317
140038: 33 07 c0 22 03           a0 = 0x322c0
140043: 95 77 00 00 01           a0 = a0 + 0x10000
140048: 01                       fallthrough
      :                          @10318
140049: 82 78                    a1 = u64 [a0]
140051: c9 87 09                 a2 = a0 - a1
140054: aa 69 07                 jump @10320 if a2 == s1
      :                          @10319
140057: 28 72 ba 00              jump @12767
      :                          @10320
140061: c9 c8 09                 a2 = a1 - a5
140064: 01                       fallthrough
      :                          @10321
140065: 82 7a                    a3 = u64 [a0]
140067: ab 8a ee                 jump @10318 if a3 != a1
      :                          @10322
140070: 7b 79                    u64 [a0] = a2
140072: 33 0b                    a4 = 0
140074: 01                       fallthrough
      :                          @10323
140075: ab 8a e6                 jump @10318 if a3 != a1
      :                          @10324
140078: 28 5d ba 00              jump @12767
      :                          @10325 [@dyn 926]
140082: 3a 06 60 11 03           s1 = u64 [0x31160]
140087: 49 21 90 02              u64 [sp + 656] = 0
140091: 49 21 98 02 08           u64 [sp + 664] = 0x8
140096: 49 21 a0 02              u64 [sp + 672] = 0
140100: 95 17 08 02              a0 = sp + 0x208
140104: 95 18 90 02              a1 = sp + 0x290
140108: 33 09 0a                 a2 = 0xa
140111: 50 20 3e 07 a2 36 fe     ra = 1854, jump @1721
      :                          @10326 [@dyn 927]
140118: 33 02 0a                 t0 = 0xa
140121: 64 69                    a2 = s1
140123: 49 11 18                 u64 [sp + 24] = 0
140126: 33 00                    ra = 0
140128: 49 11 10 01              u64 [sp + 16] = 0x1
140132: 33 0c 78 12 03           a5 = 0x31278
140137: 14 03 ab aa aa aa aa aa aa aa t1 = 0xaaaaaaaaaaaaaaab
140147: 14 08 00 00 00 00 55 55 55 55 a1 = 0x5555555500000000
140157: 14 04 55 55 55 55 55 55 55 55 t2 = 0x5555555555555555
140167: 7b 16 58                 u64 [sp + 0x58] = s1
140170: 7b 13 48                 u64 [sp + 0x48] = t1
140173: 7b 14 40                 u64 [sp + 0x40] = t2
140176: 28 1e                    jump @10329
      :                          @10327
140178: 95 00 01                 ra = ra + 0x1
140181: 82 17 10                 a0 = u64 [sp + 0x10]
140184: 95 77 01                 a0 = a0 + 0x1
140187: 7b 17 10                 u64 [sp + 0x10] = a0
140190: 82 17 18                 a0 = u64 [sp + 0x18]
140193: 95 77 18                 a0 = a0 + 0x18
140196: 7b 17 18                 u64 [sp + 0x18] = a0
140199: ab 20 07                 jump @10329 if ra != t0
      :                          @10328
140202: 28 38 b9 00              jump @12758
      :                          @10329
140206: 56 10 08 e4              jump @10327 if ra >u 8
      :                          @10330
140210: 82 1a 18                 a3 = u64 [sp + 0x18]
140213: 82 16 10                 s1 = u64 [sp + 0x10]
140216: 7b 10 60                 u64 [sp + 0x60] = ra
140219: 28 31                    jump @10333
      :                          @10331
140221: 33 02 0a                 t0 = 0xa
140224: 82 10 60                 ra = u64 [sp + 0x60]
140227: 33 0c 78 12 03           a5 = 0x31278
140232: 82 13 48                 t1 = u64 [sp + 0x48]
140235: 82 14 40                 t2 = u64 [sp + 0x40]
140238: 82 b7 20                 a0 = u64 [a4 + 0x20]
140241: 97 89 03                 a2 = a1 << 0x3
140244: c8 97 07                 a0 = a0 + a2
140247: 7b 70                    u64 [a0] = ra
140249: 95 88 01                 a1 = a1 + 0x1
140252: 7b b8 28                 u64 [a4 + 0x28] = a1
140255: 82 19 58                 a2 = u64 [sp + 0x58]
140258: 01                       fallthrough
      :                          @10332
140259: 95 66 01                 s1 = s1 + 0x1
140262: 95 aa 18                 a3 = a3 + 0x18
140265: aa 26 a9                 jump @10327 if s1 == t0
      :                          @10333
140268: 3a 07 78 12 03           a0 = u64 [0x31278]
140273: 97 78 0d                 a1 = a0 << 0xd
140276: d3 87 07                 a0 = a0 ^ a1
140279: 98 78 07                 a1 = a0 >> 0x7
140282: d3 87 07                 a0 = a0 ^ a1
140285: 97 78 11                 a1 = a0 << 0x11
140288: d3 87 07                 a0 = a0 ^ a1
140291: ca 39 08                 a1 = a2 * t1
140294: ca 87 08                 a1 = a0 * a1
140297: 3e 07 78 12 03           u64 [0x31278] = a0
140302: ac 84 d5                 jump @10332 if t2 <u a1
      :                          @10334
140305: 82 1c 18 02              a5 = u64 [sp + 0x218]
140309: ac c0 07                 jump @10336 if ra <u a5
      :                          @10335
140312: 28 a9 cf 00              jump @13207
      :                          @10336
140316: 82 12 10 02              t0 = u64 [sp + 0x210]
140320: 96 07 18                 a0 = ra * 0x18
140323: c8 27 07                 a0 = a0 + t0
140326: 82 78 10                 a1 = u64 [a0 + 0x10]
140329: 82 79                    a2 = u64 [a0]
140331: 95 7b 10                 a4 = a0 + 0x10
140334: 7b 1a 70                 u64 [sp + 0x70] = a3
140337: ab 98 28                 jump @10339 if a1 != a2
      :                          @10337
140340: 7b 1c 38                 u64 [sp + 0x38] = a5
140343: 7b 12 30                 u64 [sp + 0x30] = t0
140346: 7b 1b 28                 u64 [sp + 0x28] = a4
140349: 7b 17 20                 u64 [sp + 0x20] = a0
140352: 50 20 40 07 00 2f fe     ra = 1856, jump @1581
      :                          @10338 [@dyn 928]
140359: 82 17 20                 a0 = u64 [sp + 0x20]
140362: 82 1b 28                 a4 = u64 [sp + 0x28]
140365: 82 12 30                 t0 = u64 [sp + 0x30]
140368: 82 1c 38                 a5 = u64 [sp + 0x38]
140371: 82 1a 70                 a3 = u64 [sp + 0x70]
140374: 82 b8                    a1 = u64 [a4]
140376: 01                       fallthrough
      :                          @10339
140377: 82 77 08                 a0 = u64 [a0 + 0x8]
140380: 97 89 03                 a2 = a1 << 0x3
140383: c8 97 07                 a0 = a0 + a2
140386: 7b 76                    u64 [a0] = s1
140388: 95 88 01                 a1 = a1 + 0x1
140391: 7b b8                    u64 [a4] = a1
140393: ac c6 07                 jump @10341 if s1 <u a5
      :                          @10340
140396: 28 56 cf 00              jump @13208
      :                          @10341
140400: c8 a2 0b                 a4 = t0 + a3
140403: 82 b8 28                 a1 = u64 [a4 + 0x28]
140406: 82 b7 18                 a0 = u64 [a4 + 0x18]
140409: ab 78 44 ff              jump @10331 if a1 != a0
      :                          @10342
140413: 95 b7 18                 a0 = a4 + 0x18
140416: 7b 1b 38                 u64 [sp + 0x38] = a4
140419: 50 20 42 07 bd 2e fe     ra = 1858, jump @1581
      :                          @10343 [@dyn 929]
140426: 82 1b 38                 a4 = u64 [sp + 0x38]
140429: 82 1a 70                 a3 = u64 [sp + 0x70]
140432: 82 b8 28                 a1 = u64 [a4 + 0x28]
140435: 28 2a ff                 jump @10331
      :                          @10344 [@dyn 930]
140438: 49 21 90 02              u64 [sp + 656] = 0
140442: 49 21 98 02 08           u64 [sp + 664] = 0x8
140447: 49 21 a0 02              u64 [sp + 672] = 0
140451: 95 17 e0 01              a0 = sp + 0x1e0
140455: 95 18 90 02              a1 = sp + 0x290
140459: 33 09 08                 a2 = 0x8
140462: 50 20 46 07 43 35 fe     ra = 1862, jump @1721
      :                          @10345 [@dyn 931]
140469: 33 09 08                 a2 = 0x8
140472: 49 11 30                 u64 [sp + 48] = 0
140475: 33 07                    a0 = 0
140477: 49 11 28 01              u64 [sp + 40] = 0x1
140481: 33 02 78 12 03           t0 = 0x31278
140486: 28 1e                    jump @10348
      :                          @10346
140488: 95 77 01                 a0 = a0 + 0x1
140491: 82 18 28                 a1 = u64 [sp + 0x28]
140494: 95 88 01                 a1 = a1 + 0x1
140497: 7b 18 28                 u64 [sp + 0x28] = a1
140500: 82 18 30                 a1 = u64 [sp + 0x30]
140503: 95 88 18                 a1 = a1 + 0x18
140506: 7b 18 30                 u64 [sp + 0x30] = a1
140509: ab 97 07                 jump @10348 if a0 != a2
      :                          @10347
140512: 28 b9 b8 00              jump @12769
      :                          @10348
140516: 56 17 06 e4              jump @10346 if a0 >u 6
      :                          @10349
140520: 82 1c 30                 a5 = u64 [sp + 0x30]
140523: 82 16 28                 s1 = u64 [sp + 0x28]
140526: 7b 17 60                 u64 [sp + 0x60] = a0
140529: 28 28                    jump @10352
      :                          @10350
140531: 82 17 60                 a0 = u64 [sp + 0x60]
140534: 33 02 78 12 03           t0 = 0x31278
140539: 82 ba 20                 a3 = u64 [a4 + 0x20]
140542: 97 89 03                 a2 = a1 << 0x3
140545: c8 a9 09                 a2 = a2 + a3
140548: 7b 97                    u64 [a2] = a0
140550: 95 88 01                 a1 = a1 + 0x1
140553: 7b b8 28                 u64 [a4 + 0x28] = a1
140556: 33 09 08                 a2 = 0x8
140559: 01                       fallthrough
      :                          @10351
140560: 95 66 01                 s1 = s1 + 0x1
140563: 95 cc 18                 a5 = a5 + 0x18
140566: aa 96 b2                 jump @10346 if s1 == a2
      :                          @10352
140569: 3a 0a 78 12 03           a3 = u64 [0x31278]
140574: 97 a8 0d                 a1 = a3 << 0xd
140577: d3 8a 0a                 a3 = a3 ^ a1
140580: 98 a8 07                 a1 = a3 >> 0x7
140583: d3 8a 0a                 a3 = a3 ^ a1
140586: 97 a8 11                 a1 = a3 << 0x11
140589: d3 a8 08                 a1 = a1 ^ a3
140592: 84 aa 01                 a3 = a3 & 0x1
140595: 3e 08 78 12 03           u64 [0x31278] = a1
140600: 52 0a d8                 jump @10351 if a3 != 0
      :                          @10353
140603: 82 1a f0 01              a3 = u64 [sp + 0x1f0]
140607: ac a7 07                 jump @10355 if a0 <u a3
      :                          @10354
140610: 28 7b ce 00              jump @13203
      :                          @10355
140614: 82 12 e8 01              t0 = u64 [sp + 0x1e8]
140618: 96 77 18                 a0 = a0 * 0x18
140621: c8 27 07                 a0 = a0 + t0
140624: 82 78 10                 a1 = u64 [a0 + 0x10]
140627: 82 79                    a2 = u64 [a0]
140629: 95 7b 10                 a4 = a0 + 0x10
140632: 7b 1c 70                 u64 [sp + 0x70] = a5
140635: ab 98 28                 jump @10358 if a1 != a2
      :                          @10356
140638: 7b 1a 58                 u64 [sp + 0x58] = a3
140641: 7b 12 48                 u64 [sp + 0x48] = t0
140644: 7b 1b 40                 u64 [sp + 0x40] = a4
140647: 7b 17 38                 u64 [sp + 0x38] = a0
140650: 50 20 48 07 d6 2d fe     ra = 1864, jump @1581
      :                          @10357 [@dyn 932]
140657: 82 17 38                 a0 = u64 [sp + 0x38]
140660: 82 1b 40                 a4 = u64 [sp + 0x40]
140663: 82 12 48                 t0 = u64 [sp + 0x48]
140666: 82 1a 58                 a3 = u64 [sp + 0x58]
140669: 82 1c 70                 a5 = u64 [sp + 0x70]
140672: 82 b8                    a1 = u64 [a4]
140674: 01                       fallthrough
      :                          @10358
140675: 82 77 08                 a0 = u64 [a0 + 0x8]
140678: 97 89 03                 a2 = a1 << 0x3
140681: c8 97 07                 a0 = a0 + a2
140684: 7b 76                    u64 [a0] = s1
140686: 95 88 01                 a1 = a1 + 0x1
140689: 7b b8                    u64 [a4] = a1
140691: ac a6 07                 jump @10360 if s1 <u a3
      :                          @10359
140694: 28 29 ce 00              jump @13205
      :                          @10360
140698: c8 c2 0b                 a4 = t0 + a5
140701: 82 b8 28                 a1 = u64 [a4 + 0x28]
140704: 82 b7 18                 a0 = u64 [a4 + 0x18]
140707: ab 78 50 ff              jump @10350 if a1 != a0
      :                          @10361
140711: 95 b7 18                 a0 = a4 + 0x18
140714: 7b 1b 58                 u64 [sp + 0x58] = a4
140717: 50 20 4a 07 93 2d fe     ra = 1866, jump @1581
      :                          @10362 [@dyn 933]
140724: 82 1b 58                 a4 = u64 [sp + 0x58]
140727: 82 1c 70                 a5 = u64 [sp + 0x70]
140730: 82 b8 28                 a1 = u64 [a4 + 0x28]
140733: 28 36 ff                 jump @10350
      :                          @10363 [@dyn 934]
140736: 49 21 90 02              u64 [sp + 656] = 0
140740: 49 21 98 02 08           u64 [sp + 664] = 0x8
140745: 49 21 a0 02              u64 [sp + 672] = 0
140749: 95 17 e0 01              a0 = sp + 0x1e0
140753: 95 18 90 02              a1 = sp + 0x290
140757: 33 09 08                 a2 = 0x8
140760: 50 20 4e 07 19 34 fe     ra = 1870, jump @1721
      :                          @10364 [@dyn 935]
140767: 33 02 08                 t0 = 0x8
140770: 49 11 30                 u64 [sp + 48] = 0
140773: 33 07                    a0 = 0
140775: 49 11 28 01              u64 [sp + 40] = 0x1
140779: 33 03 78 12 03           t1 = 0x31278
140784: 28 1e                    jump @10367
      :                          @10365
140786: 95 77 01                 a0 = a0 + 0x1
140789: 82 18 28                 a1 = u64 [sp + 0x28]
140792: 95 88 01                 a1 = a1 + 0x1
140795: 7b 18 28                 u64 [sp + 0x28] = a1
140798: 82 18 30                 a1 = u64 [sp + 0x30]
140801: 95 88 18                 a1 = a1 + 0x18
140804: 7b 18 30                 u64 [sp + 0x30] = a1
140807: ab 27 07                 jump @10367 if a0 != t0
      :                          @10366
140810: 28 67 b8 00              jump @12787
      :                          @10367
140814: 56 17 06 e4              jump @10365 if a0 >u 6
      :                          @10368
140818: 82 1c 30                 a5 = u64 [sp + 0x30]
140821: 82 16 28                 s1 = u64 [sp + 0x28]
140824: 7b 17 60                 u64 [sp + 0x60] = a0
140827: 28 28                    jump @10371
      :                          @10369
140829: 33 02 08                 t0 = 0x8
140832: 82 17 60                 a0 = u64 [sp + 0x60]
140835: 33 03 78 12 03           t1 = 0x31278
140840: 82 ab 20                 a4 = u64 [a3 + 0x20]
140843: 97 89 03                 a2 = a1 << 0x3
140846: c8 b9 09                 a2 = a2 + a4
140849: 7b 97                    u64 [a2] = a0
140851: 95 88 01                 a1 = a1 + 0x1
140854: 7b a8 28                 u64 [a3 + 0x28] = a1
140857: 01                       fallthrough
      :                          @10370
140858: 95 66 01                 s1 = s1 + 0x1
140861: 95 cc 18                 a5 = a5 + 0x18
140864: aa 26 b2                 jump @10365 if s1 == t0
      :                          @10371
140867: 3a 09 78 12 03           a2 = u64 [0x31278]
140872: 97 98 0d                 a1 = a2 << 0xd
140875: d3 89 09                 a2 = a2 ^ a1
140878: 98 98 07                 a1 = a2 >> 0x7
140881: d3 89 09                 a2 = a2 ^ a1
140884: 97 98 11                 a1 = a2 << 0x11
140887: d3 98 08                 a1 = a1 ^ a2
140890: 84 99 01                 a2 = a2 & 0x1
140893: 3e 08 78 12 03           u64 [0x31278] = a1
140898: 52 09 d8                 jump @10370 if a2 != 0
      :                          @10372
140901: 82 1b f0 01              a4 = u64 [sp + 0x1f0]
140905: ac b7 07                 jump @10374 if a0 <u a4
      :                          @10373
140908: 28 52 cd 00              jump @13204
      :                          @10374
140912: 82 12 e8 01              t0 = u64 [sp + 0x1e8]
140916: 96 77 18                 a0 = a0 * 0x18
140919: c8 27 07                 a0 = a0 + t0
140922: 82 78 10                 a1 = u64 [a0 + 0x10]
140925: 82 79                    a2 = u64 [a0]
140927: 95 7a 10                 a3 = a0 + 0x10
140930: 7b 1c 70                 u64 [sp + 0x70] = a5
140933: ab 98 28                 jump @10377 if a1 != a2
      :                          @10375
140936: 7b 1b 58                 u64 [sp + 0x58] = a4
140939: 7b 12 48                 u64 [sp + 0x48] = t0
140942: 7b 1a 40                 u64 [sp + 0x40] = a3
140945: 7b 17 38                 u64 [sp + 0x38] = a0
140948: 50 20 50 07 ac 2c fe     ra = 1872, jump @1581
      :                          @10376 [@dyn 936]
140955: 82 17 38                 a0 = u64 [sp + 0x38]
140958: 82 1a 40                 a3 = u64 [sp + 0x40]
140961: 82 12 48                 t0 = u64 [sp + 0x48]
140964: 82 1b 58                 a4 = u64 [sp + 0x58]
140967: 82 1c 70                 a5 = u64 [sp + 0x70]
140970: 82 a8                    a1 = u64 [a3]
140972: 01                       fallthrough
      :                          @10377
140973: 82 77 08                 a0 = u64 [a0 + 0x8]
140976: 97 89 03                 a2 = a1 << 0x3
140979: c8 97 07                 a0 = a0 + a2
140982: 7b 76                    u64 [a0] = s1
140984: 95 88 01                 a1 = a1 + 0x1
140987: 7b a8                    u64 [a3] = a1
140989: ac b6 07                 jump @10379 if s1 <u a4
      :                          @10378
140992: 28 00 cd 00              jump @13206
      :                          @10379
140996: c8 c2 0a                 a3 = t0 + a5
140999: 82 a8 28                 a1 = u64 [a3 + 0x28]
141002: 82 a7 18                 a0 = u64 [a3 + 0x18]
141005: ab 78 50 ff              jump @10369 if a1 != a0
      :                          @10380
141009: 95 a7 18                 a0 = a3 + 0x18
141012: 7b 1a 58                 u64 [sp + 0x58] = a3
141015: 50 20 52 07 69 2c fe     ra = 1874, jump @1581
      :                          @10381 [@dyn 937]
141022: 82 1a 58                 a3 = u64 [sp + 0x58]
141025: 82 1c 70                 a5 = u64 [sp + 0x70]
141028: 82 a8 28                 a1 = u64 [a3 + 0x28]
141031: 28 36 ff                 jump @10369
      :                          @10382 [@dyn 938]
141034: 95 17 90 02              a0 = sp + 0x290
141038: 33 08 06                 a1 = 0x6
141041: 50 20 56 07 47 3d fe     ra = 1878, jump @1882
      :                          @10383 [@dyn 939]
141048: 95 17 e0 01              a0 = sp + 0x1e0
141052: 95 18 90 02              a1 = sp + 0x290
141056: 33 09 06                 a2 = 0x6
141059: 50 20 58 07 80 3e fe     ra = 1880, jump @1907
      :                          @10384 [@dyn 940]
141066: 33 0a 78 12 03           a3 = 0x31278
141071: 3a 07 78 12 03           a0 = u64 [0x31278]
141076: 97 78 0d                 a1 = a0 << 0xd
141079: d3 87 07                 a0 = a0 ^ a1
141082: 98 78 07                 a1 = a0 >> 0x7
141085: d3 87 07                 a0 = a0 ^ a1
141088: 97 78 11                 a1 = a0 << 0x11
141091: d3 78 08                 a1 = a1 ^ a0
141094: 84 77 01                 a0 = a0 & 0x1
141097: 3e 08 78 12 03           u64 [0x31278] = a1
141102: 52 07 3d                 jump @10394 if a0 != 0
      :                          @10385
141105: 82 1c f0 01              a5 = u64 [sp + 0x1f0]
141109: 52 0c 07                 jump @10387 if a5 != 0
      :                          @10386
141112: 28 5c cd 00              jump @13237
      :                          @10387
141116: 82 1b e8 01              a4 = u64 [sp + 0x1e8]
141120: 82 b9 10                 a2 = u64 [a4 + 0x10]
141123: 56 19 01 08              jump @10389 if a2 >u 1
      :                          @10388
141127: 28 6b cd 00              jump @13265
      :                          @10389
141131: 82 b8 08                 a1 = u64 [a4 + 0x8]
141134: 46 18 01 01              u8 [a1 + 1] = 0x1
141138: 56 1c 01 08              jump @10391 if a5 >u 1
      :                          @10390
141142: 28 36 cd 00              jump @13229
      :                          @10391
141146: 82 b7 28                 a0 = u64 [a4 + 0x28]
141149: 52 07 07                 jump @10393 if a0 != 0
      :                          @10392
141152: 28 64 cd 00              jump @13281
      :                          @10393
141156: 82 b7 20                 a0 = u64 [a4 + 0x20]
141159: 46 07 01                 u8 [a0 + 0] = 0x1
141162: 01                       fallthrough
      :                          @10394
141163: 3a 07 78 12 03           a0 = u64 [0x31278]
141168: 97 78 0d                 a1 = a0 << 0xd
141171: d3 87 07                 a0 = a0 ^ a1
141174: 98 78 07                 a1 = a0 >> 0x7
141177: d3 87 07                 a0 = a0 ^ a1
141180: 97 78 11                 a1 = a0 << 0x11
141183: d3 78 08                 a1 = a1 ^ a0
141186: 84 77 01                 a0 = a0 & 0x1
141189: 3e 08 78 12 03           u64 [0x31278] = a1
141194: 52 07 3d                 jump @10404 if a0 != 0
      :                          @10395
141197: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
141201: 52 08 07                 jump @10397 if a1 != 0
      :                          @10396
141204: 28 f7 cc 00              jump @13228
      :                          @10397
141208: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
141212: 82 79 10                 a2 = u64 [a0 + 0x10]
141215: 55 19 03 08              jump @10399 if a2 >=u 3
      :                          @10398
141219: 28 2a cd 00              jump @13290
      :                          @10399
141223: 82 79 08                 a2 = u64 [a0 + 0x8]
141226: 46 19 02 01              u8 [a2 + 2] = 0x1
141230: 55 18 03 08              jump @10401 if a1 >=u 3
      :                          @10400
141234: 28 f4 cc 00              jump @13255
      :                          @10401
141238: 82 78 40                 a1 = u64 [a0 + 0x40]
141241: 52 08 07                 jump @10403 if a1 != 0
      :                          @10402
141244: 28 cf cc 00              jump @13228
      :                          @10403
141248: 82 77 38                 a0 = u64 [a0 + 0x38]
141251: 46 07 01                 u8 [a0 + 0] = 0x1
141254: 01                       fallthrough
      :                          @10404
141255: 3a 08 78 12 03           a1 = u64 [0x31278]
141260: 97 89 0d                 a2 = a1 << 0xd
141263: d3 98 08                 a1 = a1 ^ a2
141266: 98 89 07                 a2 = a1 >> 0x7
141269: d3 98 08                 a1 = a1 ^ a2
141272: 97 89 11                 a2 = a1 << 0x11
141275: d3 89 09                 a2 = a2 ^ a1
141278: 84 88 01                 a1 = a1 & 0x1
141281: 3e 09 78 12 03           u64 [0x31278] = a2
141286: 52 08 3f                 jump @10414 if a1 != 0
      :                          @10405
141289: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
141293: 52 08 07                 jump @10407 if a1 != 0
      :                          @10406
141296: 28 9b cc 00              jump @13228
      :                          @10407
141300: 82 1a e8 01              a3 = u64 [sp + 0x1e8]
141304: 82 a9 10                 a2 = u64 [a3 + 0x10]
141307: 55 19 04 08              jump @10409 if a2 >=u 4
      :                          @10408
141311: 28 c7 cc 00              jump @13283
      :                          @10409
141315: 82 a9 08                 a2 = u64 [a3 + 0x8]
141318: 33 0c 01                 a5 = 0x1
141321: 78 9c 03                 u8 [a2 + 0x3] = a5
141324: 55 18 04 08              jump @10411 if a1 >=u 4
      :                          @10410
141328: 28 97 cc 00              jump @13256
      :                          @10411
141332: 82 a8 58                 a1 = u64 [a3 + 0x58]
141335: 52 08 07                 jump @10413 if a1 != 0
      :                          @10412
141338: 28 71 cc 00              jump @13228
      :                          @10413
141342: 82 a8 50                 a1 = u64 [a3 + 0x50]
141345: 46 08 01                 u8 [a1 + 0] = 0x1
141348: 01                       fallthrough
      :                          @10414
141349: 3a 08 78 12 03           a1 = u64 [0x31278]
141354: 97 89 0d                 a2 = a1 << 0xd
141357: d3 98 08                 a1 = a1 ^ a2
141360: 98 89 07                 a2 = a1 >> 0x7
141363: d3 98 08                 a1 = a1 ^ a2
141366: 97 89 11                 a2 = a1 << 0x11
141369: d3 89 09                 a2 = a2 ^ a1
141372: 84 88 01                 a1 = a1 & 0x1
141375: 3e 09 78 12 03           u64 [0x31278] = a2
141380: 52 08 3d                 jump @10424 if a1 != 0
      :                          @10415
141383: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
141387: 52 08 07                 jump @10417 if a1 != 0
      :                          @10416
141390: 28 3d cc 00              jump @13228
      :                          @10417
141394: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
141398: 82 79 10                 a2 = u64 [a0 + 0x10]
141401: 55 19 05 08              jump @10419 if a2 >=u 5
      :                          @10418
141405: 28 64 cc 00              jump @13278
      :                          @10419
141409: 82 79 08                 a2 = u64 [a0 + 0x8]
141412: 46 19 04 01              u8 [a2 + 4] = 0x1
141416: 55 18 05 08              jump @10421 if a1 >=u 5
      :                          @10420
141420: 28 39 cc 00              jump @13254
      :                          @10421
141424: 82 78 70                 a1 = u64 [a0 + 0x70]
141427: 52 08 07                 jump @10423 if a1 != 0
      :                          @10422
141430: 28 15 cc 00              jump @13228
      :                          @10423
141434: 82 77 68                 a0 = u64 [a0 + 0x68]
141437: 46 07 01                 u8 [a0 + 0] = 0x1
141440: 01                       fallthrough
      :                          @10424
141441: 3a 08 78 12 03           a1 = u64 [0x31278]
141446: 97 89 0d                 a2 = a1 << 0xd
141449: d3 98 08                 a1 = a1 ^ a2
141452: 98 89 07                 a2 = a1 >> 0x7
141455: d3 98 08                 a1 = a1 ^ a2
141458: 97 89 11                 a2 = a1 << 0x11
141461: d3 89 09                 a2 = a2 ^ a1
141464: 84 88 01                 a1 = a1 & 0x1
141467: 3e 09 78 12 03           u64 [0x31278] = a2
141472: 52 08 41                 jump @10434 if a1 != 0
      :                          @10425
141475: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
141479: 52 08 07                 jump @10427 if a1 != 0
      :                          @10426
141482: 28 e1 cb 00              jump @13228
      :                          @10427
141486: 82 1a e8 01              a3 = u64 [sp + 0x1e8]
141490: 82 a9 10                 a2 = u64 [a3 + 0x10]
141493: 55 19 06 08              jump @10429 if a2 >=u 6
      :                          @10428
141497: 28 00 cc 00              jump @13272
      :                          @10429
141501: 82 a9 08                 a2 = u64 [a3 + 0x8]
141504: 33 0c 01                 a5 = 0x1
141507: 78 9c 05                 u8 [a2 + 0x5] = a5
141510: 55 18 06 08              jump @10431 if a1 >=u 6
      :                          @10430
141514: 28 f0 cb 00              jump @13273
      :                          @10431
141518: 82 a8 88 00              a1 = u64 [a3 + 0x88]
141522: 52 08 07                 jump @10433 if a1 != 0
      :                          @10432
141525: 28 b6 cb 00              jump @13228
      :                          @10433
141529: 82 a8 80 00              a1 = u64 [a3 + 0x80]
141533: 46 08 01                 u8 [a1 + 0] = 0x1
141536: 01                       fallthrough
      :                          @10434
141537: 3a 08 78 12 03           a1 = u64 [0x31278]
141542: 97 89 0d                 a2 = a1 << 0xd
141545: d3 98 08                 a1 = a1 ^ a2
141548: 98 89 07                 a2 = a1 >> 0x7
141551: d3 98 08                 a1 = a1 ^ a2
141554: 97 89 11                 a2 = a1 << 0x11
141557: d3 89 09                 a2 = a2 ^ a1
141560: 84 88 01                 a1 = a1 & 0x1
141563: 3e 09 78 12 03           u64 [0x31278] = a2
141568: 52 08 40                 jump @10444 if a1 != 0
      :                          @10435
141571: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
141575: 55 18 02 08              jump @10437 if a1 >=u 2
      :                          @10436
141579: 28 9d cb 00              jump @13257
      :                          @10437
141583: 82 1a e8 01              a3 = u64 [sp + 0x1e8]
141587: 82 a9 28                 a2 = u64 [a3 + 0x28]
141590: 55 19 03 08              jump @10439 if a2 >=u 3
      :                          @10438
141594: 28 98 cb 00              jump @13265
      :                          @10439
141598: 82 a9 20                 a2 = u64 [a3 + 0x20]
141601: 46 19 02 01              u8 [a2 + 2] = 0x1
141605: 55 18 03 08              jump @10441 if a1 >=u 3
      :                          @10440
141609: 28 80 cb 00              jump @13258
      :                          @10441
141613: 82 a8 40                 a1 = u64 [a3 + 0x40]
141616: 55 18 02 08              jump @10443 if a1 >=u 2
      :                          @10442
141620: 28 58 cb 00              jump @13229
      :                          @10443
141624: 82 a7 38                 a0 = u64 [a3 + 0x38]
141627: 46 17 01 01              u8 [a0 + 1] = 0x1
141631: 01                       fallthrough
      :                          @10444
141632: 3a 07 78 12 03           a0 = u64 [0x31278]
141637: 97 78 0d                 a1 = a0 << 0xd
141640: d3 87 07                 a0 = a0 ^ a1
141643: 98 78 07                 a1 = a0 >> 0x7
141646: d3 87 07                 a0 = a0 ^ a1
141649: 97 78 11                 a1 = a0 << 0x11
141652: d3 78 08                 a1 = a1 ^ a0
141655: 84 77 01                 a0 = a0 & 0x1
141658: 3e 08 78 12 03           u64 [0x31278] = a1
141663: 52 07 42                 jump @10454 if a0 != 0
      :                          @10445
141666: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
141670: 55 18 02 08              jump @10447 if a1 >=u 2
      :                          @10446
141674: 28 3e cb 00              jump @13257
      :                          @10447
141678: 82 1b e8 01              a4 = u64 [sp + 0x1e8]
141682: 82 b9 28                 a2 = u64 [a4 + 0x28]
141685: 33 0c 04                 a5 = 0x4
141688: ae c9 07                 jump @10449 if a2 >=u a5
      :                          @10448
141691: 28 4b cb 00              jump @13283
      :                          @10449
141695: 82 b9 20                 a2 = u64 [a4 + 0x20]
141698: 46 19 03 01              u8 [a2 + 3] = 0x1
141702: 55 18 04 08              jump @10451 if a1 >=u 4
      :                          @10450
141706: 28 1d cb 00              jump @13256
      :                          @10451
141710: 82 b8 58                 a1 = u64 [a4 + 0x58]
141713: 55 18 02 08              jump @10453 if a1 >=u 2
      :                          @10452
141717: 28 f7 ca 00              jump @13229
      :                          @10453
141721: 82 b7 50                 a0 = u64 [a4 + 0x50]
141724: 46 17 01 01              u8 [a0 + 1] = 0x1
141728: 01                       fallthrough
      :                          @10454
141729: 3a 07 78 12 03           a0 = u64 [0x31278]
141734: 97 78 0d                 a1 = a0 << 0xd
141737: d3 87 07                 a0 = a0 ^ a1
141740: 98 78 07                 a1 = a0 >> 0x7
141743: d3 87 07                 a0 = a0 ^ a1
141746: 97 78 11                 a1 = a0 << 0x11
141749: d3 78 08                 a1 = a1 ^ a0
141752: 84 77 01                 a0 = a0 & 0x1
141755: 3e 08 78 12 03           u64 [0x31278] = a1
141760: 52 07 40                 jump @10464 if a0 != 0
      :                          @10455
141763: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
141767: 55 18 02 08              jump @10457 if a1 >=u 2
      :                          @10456
141771: 28 dd ca 00              jump @13257
      :                          @10457
141775: 82 1a e8 01              a3 = u64 [sp + 0x1e8]
141779: 82 a9 28                 a2 = u64 [a3 + 0x28]
141782: 55 19 05 08              jump @10459 if a2 >=u 5
      :                          @10458
141786: 28 e7 ca 00              jump @13278
      :                          @10459
141790: 82 a9 20                 a2 = u64 [a3 + 0x20]
141793: 46 19 04 01              u8 [a2 + 4] = 0x1
141797: 55 18 05 08              jump @10461 if a1 >=u 5
      :                          @10460
141801: 28 bc ca 00              jump @13254
      :                          @10461
141805: 82 a8 70                 a1 = u64 [a3 + 0x70]
141808: 55 18 02 08              jump @10463 if a1 >=u 2
      :                          @10462
141812: 28 98 ca 00              jump @13229
      :                          @10463
141816: 82 a7 68                 a0 = u64 [a3 + 0x68]
141819: 46 17 01 01              u8 [a0 + 1] = 0x1
141823: 01                       fallthrough
      :                          @10464
141824: 3a 07 78 12 03           a0 = u64 [0x31278]
141829: 97 78 0d                 a1 = a0 << 0xd
141832: d3 87 07                 a0 = a0 ^ a1
141835: 98 78 07                 a1 = a0 >> 0x7
141838: d3 87 07                 a0 = a0 ^ a1
141841: 97 78 11                 a1 = a0 << 0x11
141844: d3 78 08                 a1 = a1 ^ a0
141847: 84 77 01                 a0 = a0 & 0x1
141850: 3e 08 78 12 03           u64 [0x31278] = a1
141855: 52 07 44                 jump @10474 if a0 != 0
      :                          @10465
141858: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
141862: 55 18 02 08              jump @10467 if a1 >=u 2
      :                          @10466
141866: 28 7e ca 00              jump @13257
      :                          @10467
141870: 82 1b e8 01              a4 = u64 [sp + 0x1e8]
141874: 82 b9 28                 a2 = u64 [a4 + 0x28]
141877: 33 0c 06                 a5 = 0x6
141880: ae c9 07                 jump @10469 if a2 >=u a5
      :                          @10468
141883: 28 7e ca 00              jump @13272
      :                          @10469
141887: 82 b9 20                 a2 = u64 [a4 + 0x20]
141890: 46 19 05 01              u8 [a2 + 5] = 0x1
141894: 55 18 06 08              jump @10471 if a1 >=u 6
      :                          @10470
141898: 28 70 ca 00              jump @13273
      :                          @10471
141902: 82 b8 88 00              a1 = u64 [a4 + 0x88]
141906: 55 18 02 08              jump @10473 if a1 >=u 2
      :                          @10472
141910: 28 36 ca 00              jump @13229
      :                          @10473
141914: 82 b7 80 00              a0 = u64 [a4 + 0x80]
141918: 46 17 01 01              u8 [a0 + 1] = 0x1
141922: 01                       fallthrough
      :                          @10474
141923: 3a 07 78 12 03           a0 = u64 [0x31278]
141928: 97 78 0d                 a1 = a0 << 0xd
141931: d3 87 07                 a0 = a0 ^ a1
141934: 98 78 07                 a1 = a0 >> 0x7
141937: d3 87 07                 a0 = a0 ^ a1
141940: 97 78 11                 a1 = a0 << 0x11
141943: d3 78 08                 a1 = a1 ^ a0
141946: 84 77 01                 a0 = a0 & 0x1
141949: 3e 08 78 12 03           u64 [0x31278] = a1
141954: 52 07 40                 jump @10484 if a0 != 0
      :                          @10475
141957: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
141961: 55 18 03 08              jump @10477 if a1 >=u 3
      :                          @10476
141965: 28 19 ca 00              jump @13255
      :                          @10477
141969: 82 1a e8 01              a3 = u64 [sp + 0x1e8]
141973: 82 a9 40                 a2 = u64 [a3 + 0x40]
141976: 55 19 04 08              jump @10479 if a2 >=u 4
      :                          @10478
141980: 28 16 ca 00              jump @13265
      :                          @10479
141984: 82 a7 38                 a0 = u64 [a3 + 0x38]
141987: 46 17 03 01              u8 [a0 + 3] = 0x1
141991: 55 18 04 08              jump @10481 if a1 >=u 4
      :                          @10480
141995: 28 02 ca 00              jump @13262
      :                          @10481
141999: 82 a8 58                 a1 = u64 [a3 + 0x58]
142002: 55 18 03 08              jump @10483 if a1 >=u 3
      :                          @10482
142006: 28 f0 c9 00              jump @13255
      :                          @10483
142010: 82 a7 50                 a0 = u64 [a3 + 0x50]
142013: 46 17 02 01              u8 [a0 + 2] = 0x1
142017: 01                       fallthrough
      :                          @10484
142018: 3a 08 78 12 03           a1 = u64 [0x31278]
142023: 97 89 0d                 a2 = a1 << 0xd
142026: d3 98 08                 a1 = a1 ^ a2
142029: 98 89 07                 a2 = a1 >> 0x7
142032: d3 98 08                 a1 = a1 ^ a2
142035: 97 89 11                 a2 = a1 << 0x11
142038: d3 89 09                 a2 = a2 ^ a1
142041: 84 88 01                 a1 = a1 & 0x1
142044: 3e 09 78 12 03           u64 [0x31278] = a2
142049: 52 08 42                 jump @10494 if a1 != 0
      :                          @10485
142052: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
142056: 55 18 03 08              jump @10487 if a1 >=u 3
      :                          @10486
142060: 28 ba c9 00              jump @13255
      :                          @10487
142064: 82 1a e8 01              a3 = u64 [sp + 0x1e8]
142068: 82 a9 40                 a2 = u64 [a3 + 0x40]
142071: 55 19 05 08              jump @10489 if a2 >=u 5
      :                          @10488
142075: 28 c6 c9 00              jump @13278
      :                          @10489
142079: 82 a9 38                 a2 = u64 [a3 + 0x38]
142082: 33 0c 01                 a5 = 0x1
142085: 78 9c 04                 u8 [a2 + 0x4] = a5
142088: 55 18 05 08              jump @10491 if a1 >=u 5
      :                          @10490
142092: 28 99 c9 00              jump @13254
      :                          @10491
142096: 82 a8 70                 a1 = u64 [a3 + 0x70]
142099: 55 18 03 08              jump @10493 if a1 >=u 3
      :                          @10492
142103: 28 8f c9 00              jump @13255
      :                          @10493
142107: 82 a8 68                 a1 = u64 [a3 + 0x68]
142110: 46 18 02 01              u8 [a1 + 2] = 0x1
142114: 01                       fallthrough
      :                          @10494
142115: 3a 08 78 12 03           a1 = u64 [0x31278]
142120: 97 89 0d                 a2 = a1 << 0xd
142123: d3 98 08                 a1 = a1 ^ a2
142126: 98 89 07                 a2 = a1 >> 0x7
142129: d3 98 08                 a1 = a1 ^ a2
142132: 97 89 11                 a2 = a1 << 0x11
142135: d3 89 09                 a2 = a2 ^ a1
142138: 84 88 01                 a1 = a1 & 0x1
142141: 3e 09 78 12 03           u64 [0x31278] = a2
142146: 52 08 42                 jump @10504 if a1 != 0
      :                          @10495
142149: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
142153: 55 18 03 08              jump @10497 if a1 >=u 3
      :                          @10496
142157: 28 59 c9 00              jump @13255
      :                          @10497
142161: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
142165: 82 79 40                 a2 = u64 [a0 + 0x40]
142168: 55 19 06 08              jump @10499 if a2 >=u 6
      :                          @10498
142172: 28 5d c9 00              jump @13272
      :                          @10499
142176: 82 79 38                 a2 = u64 [a0 + 0x38]
142179: 46 19 05 01              u8 [a2 + 5] = 0x1
142183: 55 18 06 08              jump @10501 if a1 >=u 6
      :                          @10500
142187: 28 4f c9 00              jump @13273
      :                          @10501
142191: 82 78 88 00              a1 = u64 [a0 + 0x88]
142195: 55 18 03 08              jump @10503 if a1 >=u 3
      :                          @10502
142199: 28 2f c9 00              jump @13255
      :                          @10503
142203: 82 77 80 00              a0 = u64 [a0 + 0x80]
142207: 46 17 02 01              u8 [a0 + 2] = 0x1
142211: 01                       fallthrough
      :                          @10504
142212: 3a 07 78 12 03           a0 = u64 [0x31278]
142217: 97 78 0d                 a1 = a0 << 0xd
142220: d3 87 07                 a0 = a0 ^ a1
142223: 98 78 07                 a1 = a0 >> 0x7
142226: d3 87 07                 a0 = a0 ^ a1
142229: 97 78 11                 a1 = a0 << 0x11
142232: d3 78 08                 a1 = a1 ^ a0
142235: 84 77 01                 a0 = a0 & 0x1
142238: 3e 08 78 12 03           u64 [0x31278] = a1
142243: 52 07 42                 jump @10514 if a0 != 0
      :                          @10505
142246: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
142250: 55 18 04 08              jump @10507 if a1 >=u 4
      :                          @10506
142254: 28 f9 c8 00              jump @13256
      :                          @10507
142258: 82 1b e8 01              a4 = u64 [sp + 0x1e8]
142262: 82 b9 58                 a2 = u64 [a4 + 0x58]
142265: 33 0c 05                 a5 = 0x5
142268: ae c9 07                 jump @10509 if a2 >=u a5
      :                          @10508
142271: 28 f3 c8 00              jump @13265
      :                          @10509
142275: 82 b7 50                 a0 = u64 [a4 + 0x50]
142278: 46 17 04 01              u8 [a0 + 4] = 0x1
142282: 55 18 05 08              jump @10511 if a1 >=u 5
      :                          @10510
142286: 28 dc c8 00              jump @13259
      :                          @10511
142290: 82 b8 70                 a1 = u64 [a4 + 0x70]
142293: 55 18 04 08              jump @10513 if a1 >=u 4
      :                          @10512
142297: 28 ce c8 00              jump @13256
      :                          @10513
142301: 82 b7 68                 a0 = u64 [a4 + 0x68]
142304: 46 17 03 01              u8 [a0 + 3] = 0x1
142308: 01                       fallthrough
      :                          @10514
142309: 3a 07 78 12 03           a0 = u64 [0x31278]
142314: 97 78 0d                 a1 = a0 << 0xd
142317: d3 87 07                 a0 = a0 ^ a1
142320: 98 78 07                 a1 = a0 >> 0x7
142323: d3 87 07                 a0 = a0 ^ a1
142326: 97 78 11                 a1 = a0 << 0x11
142329: d3 78 08                 a1 = a1 ^ a0
142332: 84 77 01                 a0 = a0 & 0x1
142335: 3e 08 78 12 03           u64 [0x31278] = a1
142340: 52 07 42                 jump @10524 if a0 != 0
      :                          @10515
142343: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
142347: 55 18 04 08              jump @10517 if a1 >=u 4
      :                          @10516
142351: 28 98 c8 00              jump @13256
      :                          @10517
142355: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
142359: 82 79 58                 a2 = u64 [a0 + 0x58]
142362: 55 19 06 08              jump @10519 if a2 >=u 6
      :                          @10518
142366: 28 9b c8 00              jump @13272
      :                          @10519
142370: 82 79 50                 a2 = u64 [a0 + 0x50]
142373: 46 19 05 01              u8 [a2 + 5] = 0x1
142377: 55 18 06 08              jump @10521 if a1 >=u 6
      :                          @10520
142381: 28 8d c8 00              jump @13273
      :                          @10521
142385: 82 78 88 00              a1 = u64 [a0 + 0x88]
142389: 55 18 04 08              jump @10523 if a1 >=u 4
      :                          @10522
142393: 28 6e c8 00              jump @13256
      :                          @10523
142397: 82 77 80 00              a0 = u64 [a0 + 0x80]
142401: 46 17 03 01              u8 [a0 + 3] = 0x1
142405: 01                       fallthrough
      :                          @10524
142406: 3a 08 78 12 03           a1 = u64 [0x31278]
142411: 97 89 0d                 a2 = a1 << 0xd
142414: d3 98 08                 a1 = a1 ^ a2
142417: 98 89 07                 a2 = a1 >> 0x7
142420: d3 98 08                 a1 = a1 ^ a2
142423: 97 89 11                 a2 = a1 << 0x11
142426: d3 89 09                 a2 = a2 ^ a1
142429: 84 88 01                 a1 = a1 & 0x1
142432: 3e 09 78 12 03           u64 [0x31278] = a2
142437: 52 08 42                 jump @10534 if a1 != 0
      :                          @10525
142440: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
142444: 55 18 05 08              jump @10527 if a1 >=u 5
      :                          @10526
142448: 28 35 c8 00              jump @13254
      :                          @10527
142452: 82 1a e8 01              a3 = u64 [sp + 0x1e8]
142456: 82 a9 70                 a2 = u64 [a3 + 0x70]
142459: 55 19 06 08              jump @10529 if a2 >=u 6
      :                          @10528
142463: 28 33 c8 00              jump @13265
      :                          @10529
142467: 82 a7 68                 a0 = u64 [a3 + 0x68]
142470: 46 17 05 01              u8 [a0 + 5] = 0x1
142474: 55 18 06 08              jump @10531 if a1 >=u 6
      :                          @10530
142478: 28 27 c8 00              jump @13268
      :                          @10531
142482: 82 a8 88 00              a1 = u64 [a3 + 0x88]
142486: 55 18 05 08              jump @10533 if a1 >=u 5
      :                          @10532
142490: 28 0b c8 00              jump @13254
      :                          @10533
142494: 82 a7 80 00              a0 = u64 [a3 + 0x80]
142498: 46 17 04 01              u8 [a0 + 4] = 0x1
142502: 01                       fallthrough
      :                          @10534
142503: 49 21 08 02              u64 [sp + 520] = 0
142507: 49 21 10 02 08           u64 [sp + 528] = 0x8
142512: 49 21 18 02              u64 [sp + 536] = 0
142516: 49 21 f8 00              u64 [sp + 248] = 0
142520: 49 21 00 01 08           u64 [sp + 256] = 0x8
142525: 49 21 08 01              u64 [sp + 264] = 0
142529: 95 17 38 02              a0 = sp + 0x238
142533: 33 08 06                 a1 = 0x6
142536: 50 20 5a 07 cb 51 fe     ra = 1882, jump @2246
      :                          @10535 [@dyn 941]
142543: 82 17 08 01              a0 = u64 [sp + 0x108]
142547: 82 18 00 01              a1 = u64 [sp + 0x100]
142551: 82 19 f8 00              a2 = u64 [sp + 0xf8]
142555: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
142559: 7b 18 98 02              u64 [sp + 0x298] = a1
142563: 7b 19 90 02              u64 [sp + 0x290] = a2
142567: 95 17 90 02              a0 = sp + 0x290
142571: 95 18 38 02              a1 = sp + 0x238
142575: 95 19 f8 00              a2 = sp + 0xf8
142579: 95 1a e0 01              a3 = sp + 0x1e0
142583: 95 1b 08 02              a4 = sp + 0x208
142587: 50 20 5c 07 1f 2a ff     ra = 1884, jump @6988
      :                          @10536 [@dyn 942]
142594: 82 17 18 02              a0 = u64 [sp + 0x218]
142598: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
142602: 95 17 c8 01              a0 = sp + 0x1c8
142606: 7b 17 20 01              u64 [sp + 0x120] = a0
142610: 33 07 2c 0c              a0 = 0xc2c
142614: 7b 17 28 01              u64 [sp + 0x128] = a0
142618: 33 07 88 15 01           a0 = 0x11588
142623: 7b 17 90 02              u64 [sp + 0x290] = a0
142627: 49 21 98 02 02           u64 [sp + 664] = 0x2
142632: 49 21 b0 02              u64 [sp + 688] = 0
142636: 95 17 20 01              a0 = sp + 0x120
142640: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
142644: 49 21 a8 02 01           u64 [sp + 680] = 0x1
142649: 95 17 38 02              a0 = sp + 0x238
142653: 95 18 90 02              a1 = sp + 0x290
142657: 50 20 5e 07 b9 22 fe     ra = 1886, jump @1503
      :                          @10537 [@dyn 943]
142664: 82 16 40 02              s1 = u64 [sp + 0x240]
142668: 82 1b 48 02              a4 = u64 [sp + 0x248]
142672: 82 17 38 02              a0 = u64 [sp + 0x238]
142676: 7b 17 70                 u64 [sp + 0x70] = a0
142679: 33 07 02                 a0 = 0x2
142682: 33 08                    a1 = 0
142684: 33 09                    a2 = 0
142686: 64 6a                    a3 = s1
142688: 33 00 60 07              ra = 0x760
142692: 0a 64                    ecalli 100 // 'log'
142694: 01                       fallthrough
      :                          @10538 [@dyn 944]
142695: 82 1c 70                 a5 = u64 [sp + 0x70]
142698: 82 17 68                 a0 = u64 [sp + 0x68]
142701: c8 c7 07                 a0 = a0 + a5
142704: 33 08 00 00 ff           a1 = 0xffffffffffff0000
142709: ac 87 2f                 jump @10544 if a0 <u a1
      :                          @10539
142712: 33 07 c0 22 03           a0 = 0x322c0
142717: 95 77 00 00 01           a0 = a0 + 0x10000
142722: 01                       fallthrough
      :                          @10540
142723: 82 78                    a1 = u64 [a0]
142725: c9 87 09                 a2 = a0 - a1
142728: ab 69 1c                 jump @10544 if a2 != s1
      :                          @10541
142731: c9 c8 09                 a2 = a1 - a5
142734: 01                       fallthrough
      :                          @10542
142735: 82 7a                    a3 = u64 [a0]
142737: ab 8a f2                 jump @10540 if a3 != a1
      :                          @10543
142740: 7b 79                    u64 [a0] = a2
142742: 33 0b                    a4 = 0
142744: 95 17 08 02              a0 = sp + 0x208
142748: 33 00 62 07              ra = 0x762
142752: 28 76 df fd              jump @241
      :                          @10544
142756: 95 17 08 02              a0 = sp + 0x208
142760: 50 20 62 07 6e df fd     ra = 1890, jump @241
      :                          @10545 [@dyn 945]
142767: 95 17 e0 01              a0 = sp + 0x1e0
142771: 33 00 80 0b              ra = 0xb80
142775: 28 c1 de fd              jump @221
      :                          @10546 [@dyn 946]
142779: 3a 06 60 11 03           s1 = u64 [0x31160]
142784: 95 17 90 02              a0 = sp + 0x290
142788: 33 08 0a                 a1 = 0xa
142791: 50 20 66 07 71 36 fe     ra = 1894, jump @1882
      :                          @10547 [@dyn 947]
142798: 95 17 e0 01              a0 = sp + 0x1e0
142802: 95 18 90 02              a1 = sp + 0x290
142806: 33 09 0a                 a2 = 0xa
142809: 50 20 68 07 aa 37 fe     ra = 1896, jump @1907
      :                          @10548 [@dyn 948]
142816: 33 03 0a                 t1 = 0xa
142819: 64 6c                    a5 = s1
142821: 49 11 70                 u64 [sp + 112] = 0
142824: 33 07                    a0 = 0
142826: 33 06 78 12 03           s1 = 0x31278
142831: 14 0b ab aa aa aa aa aa aa aa a4 = 0xaaaaaaaaaaaaaaab
142841: 14 02 55 55 55 55 55 55 55 55 t0 = 0x5555555555555555
142851: 49 11 60 01              u64 [sp + 96] = 0x1
142855: 28 1e                    jump @10551
      :                          @10549
142857: 95 77 01                 a0 = a0 + 0x1
142860: 82 18 60                 a1 = u64 [sp + 0x60]
142863: 95 88 01                 a1 = a1 + 0x1
142866: 7b 18 60                 u64 [sp + 0x60] = a1
142869: 82 18 70                 a1 = u64 [sp + 0x70]
142872: 95 88 18                 a1 = a1 + 0x18
142875: 7b 18 70                 u64 [sp + 0x70] = a1
142878: ab 37 07                 jump @10551 if a0 != t1
      :                          @10550
142881: 28 39 b1 00              jump @12805
      :                          @10551
142885: 56 17 08 e4              jump @10549 if a0 >u 8
      :                          @10552
142889: 82 14 70                 t2 = u64 [sp + 0x70]
142892: 82 19 60                 a2 = u64 [sp + 0x60]
142895: 28 1d                    jump @10555
      :                          @10553
142897: 82 08 20                 a1 = u64 [ra + 0x20]
142900: c8 78 08                 a1 = a1 + a0
142903: 46 08 01                 u8 [a1 + 0] = 0x1
142906: 33 03 0a                 t1 = 0xa
142909: 33 06 78 12 03           s1 = 0x31278
142914: 01                       fallthrough
      :                          @10554
142915: 95 99 01                 a2 = a2 + 0x1
142918: 95 44 18                 t2 = t2 + 0x18
142921: aa 39 c0                 jump @10549 if a2 == t1
      :                          @10555
142924: 3a 08 78 12 03           a1 = u64 [0x31278]
142929: 97 8a 0d                 a3 = a1 << 0xd
142932: d3 a8 08                 a1 = a1 ^ a3
142935: 98 8a 07                 a3 = a1 >> 0x7
142938: d3 a8 08                 a1 = a1 ^ a3
142941: 97 8a 11                 a3 = a1 << 0x11
142944: d3 a8 08                 a1 = a1 ^ a3
142947: ca bc 0a                 a3 = a5 * a4
142950: ca a8 0a                 a3 = a1 * a3
142953: 3e 08 78 12 03           u64 [0x31278] = a1
142958: ac a2 d5                 jump @10554 if t0 <u a3
      :                          @10556
142961: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
142965: ac 87 07                 jump @10558 if a0 <u a1
      :                          @10557
142968: 28 14 c6 00              jump @13229
      :                          @10558
142972: 82 10 e8 01              ra = u64 [sp + 0x1e8]
142976: 96 73 18                 t1 = a0 * 0x18
142979: c8 03 03                 t1 = t1 + ra
142982: 82 3a 10                 a3 = u64 [t1 + 0x10]
142985: ac a9 07                 jump @10560 if a2 <u a3
      :                          @10559
142988: 28 b9 b1 00              jump @12826
      :                          @10560
142992: 82 3a 08                 a3 = u64 [t1 + 0x8]
142995: c8 9a 0a                 a3 = a3 + a2
142998: 46 0a 01                 u8 [a3 + 0] = 0x1
143001: ac 89 07                 jump @10562 if a2 <u a1
      :                          @10561
143004: 28 23 c6 00              jump @13276
      :                          @10562
143008: c8 40 00                 ra = ra + t2
143011: 82 08 28                 a1 = u64 [ra + 0x28]
143014: ac 87 8b                 jump @10553 if a0 <u a1
      :                          @10563
143017: 28 e3 c5 00              jump @13229
      :                          @10564 [@dyn 949]
143021: 3a 02 60 11 03           t0 = u64 [0x31160]
143026: 49 21 e0 01              u64 [sp + 480] = 0
143030: 49 21 e8 01 08           u64 [sp + 488] = 0x8
143035: 49 21 f0 01              u64 [sp + 496] = 0
143039: 3a 03 b0 11 03           t1 = u64 [0x311b0]
143044: 33 06 14                 s1 = 0x14
143047: 33 0c 78 12 03           a5 = 0x31278
143052: 33 04 64                 t2 = 0x64
143055: 7b 12 58                 u64 [sp + 0x58] = t0
143058: 7b 13 48                 u64 [sp + 0x48] = t1
143061: 28 46                    jump @10567
      :                          @10565
143063: ca 29 07                 a0 = a2 * t0
143066: 98 79 02                 a2 = a0 >> 0x2
143069: d6 39 09                 a2 = a2 mulhu t1
143072: 98 99 02                 a2 = a2 >> 0x2
143075: ca 49 09                 a2 = a2 * t2
143078: c9 97 07                 a0 = a0 - a2
143081: ca 2a 09                 a2 = a3 * t0
143084: 98 9a 02                 a3 = a2 >> 0x2
143087: d6 3a 0a                 a3 = a3 mulhu t1
143090: 98 aa 02                 a3 = a3 >> 0x2
143093: 82 1b e8 01              a4 = u64 [sp + 0x1e8]
143097: ca 4a 0a                 a3 = a3 * t2
143100: c9 a9 09                 a2 = a2 - a3
143103: 97 8a 04                 a3 = a1 << 0x4
143106: c8 ba 0a                 a3 = a3 + a4
143109: 7b a7                    u64 [a3] = a0
143111: 7b a9 08                 u64 [a3 + 0x8] = a2
143114: 95 89 01                 a2 = a1 + 0x1
143117: 83 66 ff                 i32 s1 = s1 + 0xffffffffffffffff
143120: 7b 19 f0 01              u64 [sp + 0x1f0] = a2
143124: 52 06 07                 jump @10567 if s1 != 0
      :                          @10566
143127: 28 d5 9f 00              jump @12487
      :                          @10567
143131: 3a 07 78 12 03           a0 = u64 [0x31278]
143136: 97 78 0d                 a1 = a0 << 0xd
143139: d3 87 07                 a0 = a0 ^ a1
143142: 98 78 07                 a1 = a0 >> 0x7
143145: d3 87 07                 a0 = a0 ^ a1
143148: 97 78 11                 a1 = a0 << 0x11
143151: d3 78 09                 a2 = a1 ^ a0
143154: 3e 09 78 12 03           u64 [0x31278] = a2
143159: 3a 07 78 12 03           a0 = u64 [0x31278]
143164: 97 78 0d                 a1 = a0 << 0xd
143167: d3 87 07                 a0 = a0 ^ a1
143170: 98 78 07                 a1 = a0 >> 0x7
143173: d3 87 07                 a0 = a0 ^ a1
143176: 97 78 11                 a1 = a0 << 0x11
143179: d3 78 0a                 a3 = a1 ^ a0
143182: 3e 0a 78 12 03           u64 [0x31278] = a3
143187: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
143191: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
143195: ab 78 7c ff              jump @10565 if a1 != a0
      :                          @10568
143199: 95 17 e0 01              a0 = sp + 0x1e0
143203: 7b 19 70                 u64 [sp + 0x70] = a2
143206: 7b 1a 60                 u64 [sp + 0x60] = a3
143209: 50 20 6c 07 d9 24 fe     ra = 1900, jump @1605
      :                          @10569 [@dyn 950]
143216: 82 1a 60                 a3 = u64 [sp + 0x60]
143219: 82 19 70                 a2 = u64 [sp + 0x70]
143222: 33 04 64                 t2 = 0x64
143225: 33 0c 78 12 03           a5 = 0x31278
143230: 82 13 48                 t1 = u64 [sp + 0x48]
143233: 82 12 58                 t0 = u64 [sp + 0x58]
143236: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
143240: 28 4f ff                 jump @10565
      :                          @10570 [@dyn 951]
143243: 3a 02 60 11 03           t0 = u64 [0x31160]
143248: 49 21 08 02              u64 [sp + 520] = 0
143252: 49 21 10 02 08           u64 [sp + 528] = 0x8
143257: 49 21 18 02              u64 [sp + 536] = 0
143261: 3a 03 b0 11 03           t1 = u64 [0x311b0]
143266: 33 06 14                 s1 = 0x14
143269: 33 0c 78 12 03           a5 = 0x31278
143274: 33 04 64                 t2 = 0x64
143277: 7b 12 58                 u64 [sp + 0x58] = t0
143280: 7b 13 48                 u64 [sp + 0x48] = t1
143283: 28 46                    jump @10573
      :                          @10571
143285: ca 29 07                 a0 = a2 * t0
143288: 98 79 02                 a2 = a0 >> 0x2
143291: d6 39 09                 a2 = a2 mulhu t1
143294: 98 99 02                 a2 = a2 >> 0x2
143297: ca 49 09                 a2 = a2 * t2
143300: c9 97 0b                 a4 = a0 - a2
143303: ca 2a 09                 a2 = a3 * t0
143306: 98 9a 02                 a3 = a2 >> 0x2
143309: d6 3a 0a                 a3 = a3 mulhu t1
143312: 98 aa 02                 a3 = a3 >> 0x2
143315: 82 17 10 02              a0 = u64 [sp + 0x210]
143319: ca 4a 0a                 a3 = a3 * t2
143322: c9 a9 09                 a2 = a2 - a3
143325: 97 8a 04                 a3 = a1 << 0x4
143328: c8 7a 0a                 a3 = a3 + a0
143331: 7b ab                    u64 [a3] = a4
143333: 7b a9 08                 u64 [a3 + 0x8] = a2
143336: 95 88 01                 a1 = a1 + 0x1
143339: 83 66 ff                 i32 s1 = s1 + 0xffffffffffffffff
143342: 7b 18 18 02              u64 [sp + 0x218] = a1
143346: 52 06 07                 jump @10573 if s1 != 0
      :                          @10572
143349: 28 04 a0 00              jump @12515
      :                          @10573
143353: 3a 07 78 12 03           a0 = u64 [0x31278]
143358: 97 78 0d                 a1 = a0 << 0xd
143361: d3 87 07                 a0 = a0 ^ a1
143364: 98 78 07                 a1 = a0 >> 0x7
143367: d3 87 07                 a0 = a0 ^ a1
143370: 97 78 11                 a1 = a0 << 0x11
143373: d3 78 09                 a2 = a1 ^ a0
143376: 3e 09 78 12 03           u64 [0x31278] = a2
143381: 3a 07 78 12 03           a0 = u64 [0x31278]
143386: 97 78 0d                 a1 = a0 << 0xd
143389: d3 87 07                 a0 = a0 ^ a1
143392: 98 78 07                 a1 = a0 >> 0x7
143395: d3 87 07                 a0 = a0 ^ a1
143398: 97 78 11                 a1 = a0 << 0x11
143401: d3 78 0a                 a3 = a1 ^ a0
143404: 3e 0a 78 12 03           u64 [0x31278] = a3
143409: 82 18 18 02              a1 = u64 [sp + 0x218]
143413: 82 17 08 02              a0 = u64 [sp + 0x208]
143417: ab 78 7c ff              jump @10571 if a1 != a0
      :                          @10574
143421: 95 17 08 02              a0 = sp + 0x208
143425: 7b 19 70                 u64 [sp + 0x70] = a2
143428: 7b 1a 60                 u64 [sp + 0x60] = a3
143431: 50 20 70 07 fb 23 fe     ra = 1904, jump @1605
      :                          @10575 [@dyn 952]
143438: 82 1a 60                 a3 = u64 [sp + 0x60]
143441: 82 19 70                 a2 = u64 [sp + 0x70]
143444: 33 04 64                 t2 = 0x64
143447: 33 0c 78 12 03           a5 = 0x31278
143452: 82 13 48                 t1 = u64 [sp + 0x48]
143455: 82 12 58                 t0 = u64 [sp + 0x58]
143458: 82 18 18 02              a1 = u64 [sp + 0x218]
143462: 28 4f ff                 jump @10571
      :                          @10576 [@dyn 953]
143465: 3a 02 60 11 03           t0 = u64 [0x31160]
143470: 49 21 20 01              u64 [sp + 288] = 0
143474: 49 21 28 01 08           u64 [sp + 296] = 0x8
143479: 49 21 30 01              u64 [sp + 304] = 0
143483: 3a 03 b0 11 03           t1 = u64 [0x311b0]
143488: 33 06 0a                 s1 = 0xa
143491: 33 0c 78 12 03           a5 = 0x31278
143496: 33 04 64                 t2 = 0x64
143499: 7b 12 58                 u64 [sp + 0x58] = t0
143502: 7b 13 48                 u64 [sp + 0x48] = t1
143505: 28 46                    jump @10579
      :                          @10577
143507: ca 29 07                 a0 = a2 * t0
143510: 98 79 02                 a2 = a0 >> 0x2
143513: d6 39 09                 a2 = a2 mulhu t1
143516: 98 99 02                 a2 = a2 >> 0x2
143519: ca 49 09                 a2 = a2 * t2
143522: c9 97 07                 a0 = a0 - a2
143525: ca 2a 09                 a2 = a3 * t0
143528: 98 9a 02                 a3 = a2 >> 0x2
143531: d6 3a 0a                 a3 = a3 mulhu t1
143534: 98 aa 02                 a3 = a3 >> 0x2
143537: 82 1b 28 01              a4 = u64 [sp + 0x128]
143541: ca 4a 0a                 a3 = a3 * t2
143544: c9 a9 09                 a2 = a2 - a3
143547: 97 8a 04                 a3 = a1 << 0x4
143550: c8 ba 0a                 a3 = a3 + a4
143553: 7b a7                    u64 [a3] = a0
143555: 7b a9 08                 u64 [a3 + 0x8] = a2
143558: 95 89 01                 a2 = a1 + 0x1
143561: 83 66 ff                 i32 s1 = s1 + 0xffffffffffffffff
143564: 7b 19 30 01              u64 [sp + 0x130] = a2
143568: 52 06 07                 jump @10579 if s1 != 0
      :                          @10578
143571: 28 17 a0 00              jump @12536
      :                          @10579
143575: 3a 07 78 12 03           a0 = u64 [0x31278]
143580: 97 78 0d                 a1 = a0 << 0xd
143583: d3 87 07                 a0 = a0 ^ a1
143586: 98 78 07                 a1 = a0 >> 0x7
143589: d3 87 07                 a0 = a0 ^ a1
143592: 97 78 11                 a1 = a0 << 0x11
143595: d3 78 09                 a2 = a1 ^ a0
143598: 3e 09 78 12 03           u64 [0x31278] = a2
143603: 3a 07 78 12 03           a0 = u64 [0x31278]
143608: 97 78 0d                 a1 = a0 << 0xd
143611: d3 87 07                 a0 = a0 ^ a1
143614: 98 78 07                 a1 = a0 >> 0x7
143617: d3 87 07                 a0 = a0 ^ a1
143620: 97 78 11                 a1 = a0 << 0x11
143623: d3 78 0a                 a3 = a1 ^ a0
143626: 3e 0a 78 12 03           u64 [0x31278] = a3
143631: 82 18 30 01              a1 = u64 [sp + 0x130]
143635: 82 17 20 01              a0 = u64 [sp + 0x120]
143639: ab 78 7c ff              jump @10577 if a1 != a0
      :                          @10580
143643: 95 17 20 01              a0 = sp + 0x120
143647: 7b 19 70                 u64 [sp + 0x70] = a2
143650: 7b 1a 60                 u64 [sp + 0x60] = a3
143653: 50 20 74 07 1d 23 fe     ra = 1908, jump @1605
      :                          @10581 [@dyn 954]
143660: 82 1a 60                 a3 = u64 [sp + 0x60]
143663: 82 19 70                 a2 = u64 [sp + 0x70]
143666: 33 04 64                 t2 = 0x64
143669: 33 0c 78 12 03           a5 = 0x31278
143674: 82 13 48                 t1 = u64 [sp + 0x48]
143677: 82 12 58                 t0 = u64 [sp + 0x58]
143680: 82 18 30 01              a1 = u64 [sp + 0x130]
143684: 28 4f ff                 jump @10577
      :                          @10582 [@dyn 955]
143687: 3a 02 60 11 03           t0 = u64 [0x31160]
143692: 49 21 b0 01              u64 [sp + 432] = 0
143696: 49 21 b8 01 08           u64 [sp + 440] = 0x8
143701: 49 21 c0 01              u64 [sp + 448] = 0
143705: 49 21 c8 01              u64 [sp + 456] = 0
143709: 49 21 d0 01 08           u64 [sp + 464] = 0x8
143714: 49 21 d8 01              u64 [sp + 472] = 0
143718: 3a 03 70 11 03           t1 = u64 [0x31170]
143723: 33 0c 05                 a5 = 0x5
143726: 33 04 78 12 03           t2 = 0x31278
143731: 33 00 32                 ra = 0x32
143734: 7b 12 60                 u64 [sp + 0x60] = t0
143737: 7b 13 58                 u64 [sp + 0x58] = t1
143740: 28 49                    jump @10585
      :                          @10583
143742: 82 1c 70                 a5 = u64 [sp + 0x70]
143745: ca 29 07                 a0 = a2 * t0
143748: 98 79 01                 a2 = a0 >> 0x1
143751: d6 39 09                 a2 = a2 mulhu t1
143754: 98 99 04                 a2 = a2 >> 0x4
143757: ca 09 09                 a2 = a2 * ra
143760: c9 97 07                 a0 = a0 - a2
143763: ca 26 09                 a2 = s1 * t0
143766: 98 9a 01                 a3 = a2 >> 0x1
143769: d6 3a 0a                 a3 = a3 mulhu t1
143772: 98 aa 04                 a3 = a3 >> 0x4
143775: 82 1b d0 01              a4 = u64 [sp + 0x1d0]
143779: ca 0a 0a                 a3 = a3 * ra
143782: c9 a9 09                 a2 = a2 - a3
143785: 97 8a 04                 a3 = a1 << 0x4
143788: c8 ba 0a                 a3 = a3 + a4
143791: 7b a7                    u64 [a3] = a0
143793: 7b a9 08                 u64 [a3 + 0x8] = a2
143796: 95 86 01                 s1 = a1 + 0x1
143799: 83 cc ff                 i32 a5 = a5 + 0xffffffffffffffff
143802: 7b 16 d8 01              u64 [sp + 0x1d8] = s1
143806: 52 0c 07                 jump @10585 if a5 != 0
      :                          @10584
143809: 28 75 a0 00              jump @12569
      :                          @10585
143813: 3a 07 78 12 03           a0 = u64 [0x31278]
143818: 97 78 0d                 a1 = a0 << 0xd
143821: d3 87 07                 a0 = a0 ^ a1
143824: 98 78 07                 a1 = a0 >> 0x7
143827: d3 87 07                 a0 = a0 ^ a1
143830: 97 78 11                 a1 = a0 << 0x11
143833: d3 78 09                 a2 = a1 ^ a0
143836: 3e 09 78 12 03           u64 [0x31278] = a2
143841: 3a 07 78 12 03           a0 = u64 [0x31278]
143846: 97 78 0d                 a1 = a0 << 0xd
143849: d3 87 07                 a0 = a0 ^ a1
143852: 98 78 07                 a1 = a0 >> 0x7
143855: d3 87 07                 a0 = a0 ^ a1
143858: 97 76 11                 s1 = a0 << 0x11
143861: d3 76 06                 s1 = s1 ^ a0
143864: 3e 06 78 12 03           u64 [0x31278] = s1
143869: 82 18 c0 01              a1 = u64 [sp + 0x1c0]
143873: 82 17 b0 01              a0 = u64 [sp + 0x1b0]
143877: 7b 1c 70                 u64 [sp + 0x70] = a5
143880: ab 78 27                 jump @10588 if a1 != a0
      :                          @10586
143883: 95 17 b0 01              a0 = sp + 0x1b0
143887: 7b 19 48                 u64 [sp + 0x48] = a2
143890: 50 20 78 07 30 22 fe     ra = 1912, jump @1605
      :                          @10587 [@dyn 956]
143897: 82 19 48                 a2 = u64 [sp + 0x48]
143900: 33 00 32                 ra = 0x32
143903: 33 04 78 12 03           t2 = 0x31278
143908: 82 13 58                 t1 = u64 [sp + 0x58]
143911: 82 12 60                 t0 = u64 [sp + 0x60]
143914: 82 18 c0 01              a1 = u64 [sp + 0x1c0]
143918: 01                       fallthrough
      :                          @10588
143919: ca 29 07                 a0 = a2 * t0
143922: 98 79 01                 a2 = a0 >> 0x1
143925: d6 39 09                 a2 = a2 mulhu t1
143928: 98 99 04                 a2 = a2 >> 0x4
143931: ca 09 09                 a2 = a2 * ra
143934: c9 97 07                 a0 = a0 - a2
143937: ca 26 09                 a2 = s1 * t0
143940: 98 9a 01                 a3 = a2 >> 0x1
143943: d6 3a 0a                 a3 = a3 mulhu t1
143946: 98 aa 04                 a3 = a3 >> 0x4
143949: 82 1b b8 01              a4 = u64 [sp + 0x1b8]
143953: ca 0a 0a                 a3 = a3 * ra
143956: c9 a9 09                 a2 = a2 - a3
143959: 97 8a 04                 a3 = a1 << 0x4
143962: c8 ba 0a                 a3 = a3 + a4
143965: 7b a7                    u64 [a3] = a0
143967: 7b a9 08                 u64 [a3 + 0x8] = a2
143970: 95 88 01                 a1 = a1 + 0x1
143973: 7b 18 c0 01              u64 [sp + 0x1c0] = a1
143977: 3a 07 78 12 03           a0 = u64 [0x31278]
143982: 97 78 0d                 a1 = a0 << 0xd
143985: d3 87 07                 a0 = a0 ^ a1
143988: 98 78 07                 a1 = a0 >> 0x7
143991: d3 87 07                 a0 = a0 ^ a1
143994: 97 78 11                 a1 = a0 << 0x11
143997: d3 78 09                 a2 = a1 ^ a0
144000: 3e 09 78 12 03           u64 [0x31278] = a2
144005: 3a 07 78 12 03           a0 = u64 [0x31278]
144010: 97 78 0d                 a1 = a0 << 0xd
144013: d3 87 07                 a0 = a0 ^ a1
144016: 98 78 07                 a1 = a0 >> 0x7
144019: d3 87 07                 a0 = a0 ^ a1
144022: 97 76 11                 s1 = a0 << 0x11
144025: d3 76 06                 s1 = s1 ^ a0
144028: 3e 06 78 12 03           u64 [0x31278] = s1
144033: 82 18 d8 01              a1 = u64 [sp + 0x1d8]
144037: 82 17 c8 01              a0 = u64 [sp + 0x1c8]
144041: ab 78 d5 fe              jump @10583 if a1 != a0
      :                          @10589
144045: 95 17 c8 01              a0 = sp + 0x1c8
144049: 7b 19 48                 u64 [sp + 0x48] = a2
144052: 50 20 7a 07 8e 21 fe     ra = 1914, jump @1605
      :                          @10590 [@dyn 957]
144059: 82 19 48                 a2 = u64 [sp + 0x48]
144062: 33 00 32                 ra = 0x32
144065: 33 04 78 12 03           t2 = 0x31278
144070: 82 13 58                 t1 = u64 [sp + 0x58]
144073: 82 12 60                 t0 = u64 [sp + 0x60]
144076: 82 18 d8 01              a1 = u64 [sp + 0x1d8]
144080: 28 ae fe                 jump @10583
      :                          @10591 [@dyn 958]
144083: 3a 02 60 11 03           t0 = u64 [0x31160]
144088: 49 21 20 01              u64 [sp + 288] = 0
144092: 49 21 28 01 08           u64 [sp + 296] = 0x8
144097: 49 21 30 01              u64 [sp + 304] = 0
144101: 3a 03 b0 11 03           t1 = u64 [0x311b0]
144106: 33 06 0a                 s1 = 0xa
144109: 33 0c 78 12 03           a5 = 0x31278
144114: 33 04 64                 t2 = 0x64
144117: 7b 12 58                 u64 [sp + 0x58] = t0
144120: 7b 13 48                 u64 [sp + 0x48] = t1
144123: 28 46                    jump @10594
      :                          @10592
144125: ca 29 07                 a0 = a2 * t0
144128: 98 79 02                 a2 = a0 >> 0x2
144131: d6 39 09                 a2 = a2 mulhu t1
144134: 98 99 02                 a2 = a2 >> 0x2
144137: ca 49 09                 a2 = a2 * t2
144140: c9 97 07                 a0 = a0 - a2
144143: ca 2a 09                 a2 = a3 * t0
144146: 98 9a 02                 a3 = a2 >> 0x2
144149: d6 3a 0a                 a3 = a3 mulhu t1
144152: 98 aa 02                 a3 = a3 >> 0x2
144155: 82 1b 28 01              a4 = u64 [sp + 0x128]
144159: ca 4a 0a                 a3 = a3 * t2
144162: c9 a9 09                 a2 = a2 - a3
144165: 97 8a 04                 a3 = a1 << 0x4
144168: c8 ba 0a                 a3 = a3 + a4
144171: 7b a7                    u64 [a3] = a0
144173: 7b a9 08                 u64 [a3 + 0x8] = a2
144176: 95 89 01                 a2 = a1 + 0x1
144179: 83 66 ff                 i32 s1 = s1 + 0xffffffffffffffff
144182: 7b 19 30 01              u64 [sp + 0x130] = a2
144186: 52 06 07                 jump @10594 if s1 != 0
      :                          @10593
144189: 28 d5 a0 00              jump @12617
      :                          @10594
144193: 3a 07 78 12 03           a0 = u64 [0x31278]
144198: 97 78 0d                 a1 = a0 << 0xd
144201: d3 87 07                 a0 = a0 ^ a1
144204: 98 78 07                 a1 = a0 >> 0x7
144207: d3 87 07                 a0 = a0 ^ a1
144210: 97 78 11                 a1 = a0 << 0x11
144213: d3 78 09                 a2 = a1 ^ a0
144216: 3e 09 78 12 03           u64 [0x31278] = a2
144221: 3a 07 78 12 03           a0 = u64 [0x31278]
144226: 97 78 0d                 a1 = a0 << 0xd
144229: d3 87 07                 a0 = a0 ^ a1
144232: 98 78 07                 a1 = a0 >> 0x7
144235: d3 87 07                 a0 = a0 ^ a1
144238: 97 78 11                 a1 = a0 << 0x11
144241: d3 78 0a                 a3 = a1 ^ a0
144244: 3e 0a 78 12 03           u64 [0x31278] = a3
144249: 82 18 30 01              a1 = u64 [sp + 0x130]
144253: 82 17 20 01              a0 = u64 [sp + 0x120]
144257: ab 78 7c ff              jump @10592 if a1 != a0
      :                          @10595
144261: 95 17 20 01              a0 = sp + 0x120
144265: 7b 19 70                 u64 [sp + 0x70] = a2
144268: 7b 1a 60                 u64 [sp + 0x60] = a3
144271: 50 20 7e 07 b3 20 fe     ra = 1918, jump @1605
      :                          @10596 [@dyn 959]
144278: 82 1a 60                 a3 = u64 [sp + 0x60]
144281: 82 19 70                 a2 = u64 [sp + 0x70]
144284: 33 04 64                 t2 = 0x64
144287: 33 0c 78 12 03           a5 = 0x31278
144292: 82 13 48                 t1 = u64 [sp + 0x48]
144295: 82 12 58                 t0 = u64 [sp + 0x58]
144298: 82 18 30 01              a1 = u64 [sp + 0x130]
144302: 28 4f ff                 jump @10592
      :                          @10597 [@dyn 960]
144305: 3a 08 78 12 03           a1 = u64 [0x31278]
144310: 97 89 0d                 a2 = a1 << 0xd
144313: d3 98 08                 a1 = a1 ^ a2
144316: 98 89 07                 a2 = a1 >> 0x7
144319: d3 98 08                 a1 = a1 ^ a2
144322: 97 89 11                 a2 = a1 << 0x11
144325: d3 89 09                 a2 = a2 ^ a1
144328: 3a 08 60 11 03           a1 = u64 [0x31160]
144333: 3e 09 78 12 03           u64 [0x31278] = a2
144338: 3a 0a 78 12 03           a3 = u64 [0x31278]
144343: ca 89 0b                 a4 = a2 * a1
144346: 97 a9 0d                 a2 = a3 << 0xd
144349: d3 a9 09                 a2 = a2 ^ a3
144352: 98 9a 07                 a3 = a2 >> 0x7
144355: d3 a9 09                 a2 = a2 ^ a3
144358: 97 9a 11                 a3 = a2 << 0x11
144361: d3 9a 0a                 a3 = a3 ^ a2
144364: 3a 09 e8 11 03           a2 = u64 [0x311e8]
144369: ca 8a 0c                 a5 = a3 * a1
144372: 3e 0a 78 12 03           u64 [0x31278] = a3
144377: d5 9b 0a                 a3 = a4 mulh a2
144380: 98 a6 3f                 s1 = a3 >> 0x3f
144383: 99 aa 02                 a3 = a3 >>a 0x2
144386: c8 a6 06                 s1 = s1 + a3
144389: 96 66 0a                 s1 = s1 * 0xa
144392: c9 6b 02                 t0 = a4 - s1
144395: d5 9c 06                 s1 = a5 mulh a2
144398: 98 6b 3f                 a4 = s1 >> 0x3f
144401: 99 66 02                 s1 = s1 >>a 0x2
144404: 3a 07 78 12 03           a0 = u64 [0x31278]
144409: c8 6b 0b                 a4 = a4 + s1
144412: 96 bb 0a                 a4 = a4 * 0xa
144415: 97 7a 0d                 a3 = a0 << 0xd
144418: d3 a7 07                 a0 = a0 ^ a3
144421: 98 7a 07                 a3 = a0 >> 0x7
144424: d3 a7 07                 a0 = a0 ^ a3
144427: 97 7a 11                 a3 = a0 << 0x11
144430: d3 a7 07                 a0 = a0 ^ a3
144433: 3e 07 78 12 03           u64 [0x31278] = a0
144438: 3a 0a 78 12 03           a3 = u64 [0x31278]
144443: c9 bc 0c                 a5 = a5 - a4
144446: ca 87 07                 a0 = a0 * a1
144449: 97 ab 0d                 a4 = a3 << 0xd
144452: d3 ba 0a                 a3 = a3 ^ a4
144455: 98 ab 07                 a4 = a3 >> 0x7
144458: d3 ba 0a                 a3 = a3 ^ a4
144461: 97 ab 11                 a4 = a3 << 0x11
144464: d3 ba 0a                 a3 = a3 ^ a4
144467: ca 8a 0b                 a4 = a3 * a1
144470: 3e 0a 78 12 03           u64 [0x31278] = a3
144475: d5 97 0a                 a3 = a0 mulh a2
144478: 98 a6 3f                 s1 = a3 >> 0x3f
144481: 99 aa 02                 a3 = a3 >>a 0x2
144484: c8 6a 0a                 a3 = a3 + s1
144487: 96 aa 0a                 a3 = a3 * 0xa
144490: c9 a7 07                 a0 = a0 - a3
144493: d5 9b 0a                 a3 = a4 mulh a2
144496: 98 a6 3f                 s1 = a3 >> 0x3f
144499: 99 aa 02                 a3 = a3 >>a 0x2
144502: c8 6a 0a                 a3 = a3 + s1
144505: 96 aa 0a                 a3 = a3 * 0xa
144508: c9 ab 0b                 a4 = a4 - a3
144511: 7b 1c 28 01              u64 [sp + 0x128] = a5
144515: 7b 12 20 01              u64 [sp + 0x120] = t0
144519: 7b 17 30 01              u64 [sp + 0x130] = a0
144523: 7b 1b 38 01              u64 [sp + 0x138] = a4
144527: 3a 07 78 12 03           a0 = u64 [0x31278]
144532: 97 7a 0d                 a3 = a0 << 0xd
144535: d3 a7 07                 a0 = a0 ^ a3
144538: 98 7a 07                 a3 = a0 >> 0x7
144541: d3 a7 07                 a0 = a0 ^ a3
144544: 97 7a 11                 a3 = a0 << 0x11
144547: d3 a7 07                 a0 = a0 ^ a3
144550: 3e 07 78 12 03           u64 [0x31278] = a0
144555: 3a 0a 78 12 03           a3 = u64 [0x31278]
144560: ca 87 07                 a0 = a0 * a1
144563: 97 ab 0d                 a4 = a3 << 0xd
144566: d3 ba 0a                 a3 = a3 ^ a4
144569: 98 ab 07                 a4 = a3 >> 0x7
144572: d3 ba 0a                 a3 = a3 ^ a4
144575: 97 ab 11                 a4 = a3 << 0x11
144578: d3 ba 0a                 a3 = a3 ^ a4
144581: ca 8a 0c                 a5 = a3 * a1
144584: 3e 0a 78 12 03           u64 [0x31278] = a3
144589: d5 97 0a                 a3 = a0 mulh a2
144592: 98 ab 3f                 a4 = a3 >> 0x3f
144595: 99 aa 02                 a3 = a3 >>a 0x2
144598: c8 ba 0a                 a3 = a3 + a4
144601: 96 aa 0a                 a3 = a3 * 0xa
144604: c9 a7 0b                 a4 = a0 - a3
144607: d5 9c 07                 a0 = a5 mulh a2
144610: 98 7a 3f                 a3 = a0 >> 0x3f
144613: 99 77 02                 a0 = a0 >>a 0x2
144616: 3a 06 78 12 03           s1 = u64 [0x31278]
144621: c8 a7 07                 a0 = a0 + a3
144624: 96 77 0a                 a0 = a0 * 0xa
144627: 97 6a 0d                 a3 = s1 << 0xd
144630: d3 a6 06                 s1 = s1 ^ a3
144633: 98 6a 07                 a3 = s1 >> 0x7
144636: d3 a6 06                 s1 = s1 ^ a3
144639: 97 6a 11                 a3 = s1 << 0x11
144642: d3 6a 0a                 a3 = a3 ^ s1
144645: 3e 0a 78 12 03           u64 [0x31278] = a3
144650: 3a 06 78 12 03           s1 = u64 [0x31278]
144655: c9 7c 0c                 a5 = a5 - a0
144658: ca 8a 07                 a0 = a3 * a1
144661: 97 6a 0d                 a3 = s1 << 0xd
144664: d3 a6 06                 s1 = s1 ^ a3
144667: 98 6a 07                 a3 = s1 >> 0x7
144670: d3 a6 06                 s1 = s1 ^ a3
144673: 97 6a 11                 a3 = s1 << 0x11
144676: d3 6a 0a                 a3 = a3 ^ s1
144679: ca 8a 08                 a1 = a3 * a1
144682: 3e 0a 78 12 03           u64 [0x31278] = a3
144687: d5 97 0a                 a3 = a0 mulh a2
144690: 98 a6 3f                 s1 = a3 >> 0x3f
144693: 99 aa 02                 a3 = a3 >>a 0x2
144696: c8 6a 0a                 a3 = a3 + s1
144699: 96 aa 0a                 a3 = a3 * 0xa
144702: c9 a7 07                 a0 = a0 - a3
144705: d5 98 09                 a2 = a1 mulh a2
144708: 98 9a 3f                 a3 = a2 >> 0x3f
144711: 99 99 02                 a2 = a2 >>a 0x2
144714: c8 a9 09                 a2 = a2 + a3
144717: 96 99 0a                 a2 = a2 * 0xa
144720: c9 98 08                 a1 = a1 - a2
144723: 7b 1c e8 01              u64 [sp + 0x1e8] = a5
144727: 7b 1b e0 01              u64 [sp + 0x1e0] = a4
144731: 7b 17 f0 01              u64 [sp + 0x1f0] = a0
144735: 7b 18 f8 01              u64 [sp + 0x1f8] = a1
144739: 95 17 08 02              a0 = sp + 0x208
144743: 95 18 20 01              a1 = sp + 0x120
144747: 95 19 e0 01              a2 = sp + 0x1e0
144751: 95 16 e0 01              s1 = sp + 0x1e0
144755: 33 00 82 07              ra = 0x782
144759: 95 11 e0                 sp = sp + 0xffffffffffffffe0
144762: 7b 10 18                 u64 [sp + 0x18] = ra
144765: 7b 15 10                 u64 [sp + 0x10] = s0
144768: 7b 16 08                 u64 [sp + 0x8] = s1
144771: 82 82                    t0 = u64 [a1]
144773: 82 8b 18                 a4 = u64 [a1 + 0x18]
144776: 82 95                    s0 = u64 [a2]
144778: 82 9a 18                 a3 = u64 [a2 + 0x18]
144781: c8 2b 03                 t1 = a4 + t0
144784: 82 84 10                 t2 = u64 [a1 + 0x10]
144787: 82 90 08                 ra = u64 [a2 + 0x8]
144790: c8 5a 06                 s1 = a3 + s0
144793: ca 36 03                 t1 = s1 * t1
144796: c9 24 06                 s1 = t2 - t0
144799: c8 50 0c                 a5 = ra + s0
144802: ca 6c 0c                 a5 = a5 * s1
144805: c8 b4 04                 t2 = t2 + a4
144808: ca 54 06                 s1 = t2 * s0
144811: 82 99 10                 a2 = u64 [a2 + 0x10]
144814: c9 a0 04                 t2 = ra - a3
144817: 82 88 08                 a1 = u64 [a1 + 0x8]
144820: ca 24 04                 t2 = t2 * t0
144823: c9 59 05                 s0 = a2 - s0
144826: ca b5 05                 s0 = s0 * a4
144829: c8 82 02                 t0 = t0 + a1
144832: c9 b8 08                 a1 = a1 - a4
144835: ca a2 0b                 a4 = t0 * a3
144838: c8 a9 09                 a2 = a2 + a3
144841: ca 98 08                 a1 = a1 * a2
144844: c8 35 09                 a2 = s0 + t1
144847: c9 8b 08                 a1 = a4 - a1
144850: c9 89 09                 a2 = a2 - a1
144853: c8 65 05                 s0 = s0 + s1
144856: c9 63 08                 a1 = t1 - s1
144859: c8 4b 0b                 a4 = a4 + t2
144862: c8 4c 0c                 a5 = a5 + t2
144865: c8 c8 08                 a1 = a1 + a5
144868: 7b 7b 08                 u64 [a0 + 0x8] = a4
144871: 7b 79                    u64 [a0] = a2
144873: 7b 75 10                 u64 [a0 + 0x10] = s0
144876: 7b 78 18                 u64 [a0 + 0x18] = a1
144879: 82 10 18                 ra = u64 [sp + 0x18]
144882: 82 15 10                 s0 = u64 [sp + 0x10]
144885: 82 16 08                 s1 = u64 [sp + 0x8]
144888: 95 11 20                 sp = sp + 0x20
144891: 32 00                    ret
      :                          @10598 [@dyn 961]
144893: 95 17 20 01              a0 = sp + 0x120
144897: 7b 17 90 02              u64 [sp + 0x290] = a0
144901: 33 07 b6 00              a0 = 0xb6
144905: 7b 17 98 02              u64 [sp + 0x298] = a0
144909: 7b 16 a0 02              u64 [sp + 0x2a0] = s1
144913: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
144917: 95 18 08 02              a1 = sp + 0x208
144921: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
144925: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
144929: 33 07 a0 16 01           a0 = 0x116a0
144934: 7b 17 38 02              u64 [sp + 0x238] = a0
144938: 49 21 40 02 03           u64 [sp + 576] = 0x3
144943: 49 21 58 02              u64 [sp + 600] = 0
144947: 95 18 90 02              a1 = sp + 0x290
144951: 7b 18 48 02              u64 [sp + 0x248] = a1
144955: 49 21 50 02 03           u64 [sp + 592] = 0x3
144960: 95 17 c8 01              a0 = sp + 0x1c8
144964: 95 18 38 02              a1 = sp + 0x238
144968: 50 20 84 07 b2 19 fe     ra = 1924, jump @1503
      :                          @10599 [@dyn 962]
144975: 82 16 d0 01              s1 = u64 [sp + 0x1d0]
144979: 82 1b d8 01              a4 = u64 [sp + 0x1d8]
144983: 82 17 c8 01              a0 = u64 [sp + 0x1c8]
144987: 7b 17 70                 u64 [sp + 0x70] = a0
144990: 33 07 02                 a0 = 0x2
144993: 33 08                    a1 = 0
144995: 33 09                    a2 = 0
144997: 64 6a                    a3 = s1
144999: 33 00 86 07              ra = 0x786
145003: 0a 64                    ecalli 100 // 'log'
145005: 01                       fallthrough
      :                          @10600 [@dyn 963]
145006: 82 1c 70                 a5 = u64 [sp + 0x70]
145009: 82 17 68                 a0 = u64 [sp + 0x68]
145012: c8 c7 07                 a0 = a0 + a5
145015: 55 37 00 00 ff 0a        jump @10602 if a0 >=u 4294901760
      :                          @10601
145021: 28 06 ac 00              jump @12868
      :                          @10602
145025: 33 07 c0 22 03           a0 = 0x322c0
145030: 95 77 00 00 01           a0 = a0 + 0x10000
145035: 01                       fallthrough
      :                          @10603
145036: 82 78                    a1 = u64 [a0]
145038: c9 87 09                 a2 = a0 - a1
145041: aa 69 07                 jump @10605 if a2 == s1
      :                          @10604
145044: 28 ef ab 00              jump @12868
      :                          @10605
145048: c9 c8 09                 a2 = a1 - a5
145051: 01                       fallthrough
      :                          @10606
145052: 82 7a                    a3 = u64 [a0]
145054: ab 8a ee                 jump @10603 if a3 != a1
      :                          @10607
145057: 7b 79                    u64 [a0] = a2
145059: 33 0b                    a4 = 0
145061: 01                       fallthrough
      :                          @10608
145062: ab 8a e6                 jump @10603 if a3 != a1
      :                          @10609
145065: 28 da ab 00              jump @12868
      :                          @10610 [@dyn 964]
145069: 3a 06 60 11 03           s1 = u64 [0x31160]
145074: 95 17 90 02              a0 = sp + 0x290
145078: 33 09 04                 a2 = 0x4
145081: 33 08                    a1 = 0
145083: 50 20 8a 07 e9 2d fe     ra = 1930, jump @1889
      :                          @10611 [@dyn 965]
145090: 95 17 20 01              a0 = sp + 0x120
145094: 95 18 90 02              a1 = sp + 0x290
145098: 33 09 04                 a2 = 0x4
145101: 50 20 8c 07 24 23 fe     ra = 1932, jump @1721
      :                          @10612 [@dyn 966]
145108: 33 07                    a0 = 0
145110: 33 02 10                 t0 = 0x10
145113: 33 04 78 12 03           t2 = 0x31278
145118: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
145128: 33 00 14                 ra = 0x14
145131: 33 03 04                 t1 = 0x4
145134: 01                       fallthrough
      :                          @10613
145135: 3a 08 78 12 03           a1 = u64 [0x31278]
145140: 97 89 0d                 a2 = a1 << 0xd
145143: d3 98 08                 a1 = a1 ^ a2
145146: 98 89 07                 a2 = a1 >> 0x7
145149: d3 98 08                 a1 = a1 ^ a2
145152: 97 8c 11                 a5 = a1 << 0x11
145155: d3 8c 0c                 a5 = a5 ^ a1
145158: 3e 0c 78 12 03           u64 [0x31278] = a5
145163: 82 18 30 01              a1 = u64 [sp + 0x130]
145167: ac 87 07                 jump @10615 if a0 <u a1
      :                          @10614
145170: 28 7a bd 00              jump @13229
      :                          @10615
145174: 82 18 28 01              a1 = u64 [sp + 0x128]
145178: c8 28 08                 a1 = a1 + t0
145181: 82 89                    a2 = u64 [a1]
145183: 52 09 07                 jump @10617 if a2 != 0
      :                          @10616
145186: 28 66 bd 00              jump @13227
      :                          @10617
145190: ca 6c 09                 a2 = a5 * s1
145193: d6 b9 0c                 a5 = a2 mulhu a4
145196: 98 cc 04                 a5 = a5 >> 0x4
145199: 82 88 f8                 a1 = u64 [a1 + 0xfffffffffffffff8]
145202: ca 0c 0c                 a5 = a5 * ra
145205: c9 c9 09                 a2 = a2 - a5
145208: 95 99 f6                 a2 = a2 + 0xfffffffffffffff6
145211: 7b 89                    u64 [a1] = a2
145213: 3a 08 78 12 03           a1 = u64 [0x31278]
145218: 97 89 0d                 a2 = a1 << 0xd
145221: d3 98 08                 a1 = a1 ^ a2
145224: 98 89 07                 a2 = a1 >> 0x7
145227: d3 98 08                 a1 = a1 ^ a2
145230: 97 8c 11                 a5 = a1 << 0x11
145233: d3 8c 0c                 a5 = a5 ^ a1
145236: 3e 0c 78 12 03           u64 [0x31278] = a5
145241: 82 18 30 01              a1 = u64 [sp + 0x130]
145245: ac 87 07                 jump @10619 if a0 <u a1
      :                          @10618
145248: 28 2c bd 00              jump @13229
      :                          @10619
145252: 64 6a                    a3 = s1
145254: 82 19 28 01              a2 = u64 [sp + 0x128]
145258: c8 29 09                 a2 = a2 + t0
145261: 82 98                    a1 = u64 [a2]
145263: 55 18 02 08              jump @10621 if a1 >=u 2
      :                          @10620
145267: 28 50 bc 00              jump @13209
      :                          @10621
145271: ca ac 08                 a1 = a5 * a3
145274: d6 b8 0c                 a5 = a1 mulhu a4
145277: 98 cc 04                 a5 = a5 >> 0x4
145280: 82 99 f8                 a2 = u64 [a2 + 0xfffffffffffffff8]
145283: ca 0c 0c                 a5 = a5 * ra
145286: c9 c8 08                 a1 = a1 - a5
145289: 95 88 f6                 a1 = a1 + 0xfffffffffffffff6
145292: 7b 98 08                 u64 [a2 + 0x8] = a1
145295: 3a 08 78 12 03           a1 = u64 [0x31278]
145300: 97 89 0d                 a2 = a1 << 0xd
145303: d3 98 08                 a1 = a1 ^ a2
145306: 98 89 07                 a2 = a1 >> 0x7
145309: d3 98 08                 a1 = a1 ^ a2
145312: 97 8c 11                 a5 = a1 << 0x11
145315: d3 8c 0c                 a5 = a5 ^ a1
145318: 3e 0c 78 12 03           u64 [0x31278] = a5
145323: 82 18 30 01              a1 = u64 [sp + 0x130]
145327: ac 87 07                 jump @10623 if a0 <u a1
      :                          @10622
145330: 28 da bc 00              jump @13229
      :                          @10623
145334: 64 a6                    s1 = a3
145336: 82 19 28 01              a2 = u64 [sp + 0x128]
145340: c8 29 09                 a2 = a2 + t0
145343: 82 98                    a1 = u64 [a2]
145345: 55 18 03 08              jump @10625 if a1 >=u 3
      :                          @10624
145349: 28 00 bc 00              jump @13211
      :                          @10625
145353: ca 6c 08                 a1 = a5 * s1
145356: d6 b8 0c                 a5 = a1 mulhu a4
145359: 98 cc 04                 a5 = a5 >> 0x4
145362: 82 99 f8                 a2 = u64 [a2 + 0xfffffffffffffff8]
145365: ca 0c 0c                 a5 = a5 * ra
145368: c9 c8 08                 a1 = a1 - a5
145371: 95 88 f6                 a1 = a1 + 0xfffffffffffffff6
145374: 7b 98 10                 u64 [a2 + 0x10] = a1
145377: 3a 08 78 12 03           a1 = u64 [0x31278]
145382: 97 89 0d                 a2 = a1 << 0xd
145385: d3 98 08                 a1 = a1 ^ a2
145388: 98 89 07                 a2 = a1 >> 0x7
145391: d3 98 08                 a1 = a1 ^ a2
145394: 97 8c 11                 a5 = a1 << 0x11
145397: d3 8c 0c                 a5 = a5 ^ a1
145400: 3e 0c 78 12 03           u64 [0x31278] = a5
145405: 82 18 30 01              a1 = u64 [sp + 0x130]
145409: ac 87 07                 jump @10627 if a0 <u a1
      :                          @10626
145412: 28 88 bc 00              jump @13229
      :                          @10627
145416: 82 19 28 01              a2 = u64 [sp + 0x128]
145420: c8 29 09                 a2 = a2 + t0
145423: 82 98                    a1 = u64 [a2]
145425: ae 38 07                 jump @10629 if a1 >=u t1
      :                          @10628
145428: 28 b0 bb 00              jump @13210
      :                          @10629
145432: ca 6c 08                 a1 = a5 * s1
145435: d6 b8 0c                 a5 = a1 mulhu a4
145438: 98 cc 04                 a5 = a5 >> 0x4
145441: 82 99 f8                 a2 = u64 [a2 + 0xfffffffffffffff8]
145444: ca 0c 0c                 a5 = a5 * ra
145447: c9 c8 08                 a1 = a1 - a5
145450: 95 88 f6                 a1 = a1 + 0xfffffffffffffff6
145453: 7b 98 18                 u64 [a2 + 0x18] = a1
145456: 95 22 18                 t0 = t0 + 0x18
145459: 95 77 01                 a0 = a0 + 0x1
145462: 52 12 70 b9 fe           jump @10613 if t0 != 112
      :                          @10630
145467: 95 17 e0 01              a0 = sp + 0x1e0
145471: 95 18 20 01              a1 = sp + 0x120
145475: 95 16 20 01              s1 = sp + 0x120
145479: 50 20 8e 07 a9 31 ff     ra = 1934, jump @7327
      :                          @10631 [@dyn 967]
145486: 7b 16 38 02              u64 [sp + 0x238] = s1
145490: 33 07 44 02              a0 = 0x244
145494: 7b 17 40 02              u64 [sp + 0x240] = a0
145498: 95 17 e0 01              a0 = sp + 0x1e0
145502: 7b 17 48 02              u64 [sp + 0x248] = a0
145506: 33 07 2c 02              a0 = 0x22c
145510: 7b 17 50 02              u64 [sp + 0x250] = a0
145514: 33 07 f0 16 01           a0 = 0x116f0
145519: 7b 17 90 02              u64 [sp + 0x290] = a0
145523: 49 21 98 02 02           u64 [sp + 664] = 0x2
145528: 49 21 b0 02              u64 [sp + 688] = 0
145532: 95 18 38 02              a1 = sp + 0x238
145536: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
145540: 49 21 a8 02 02           u64 [sp + 680] = 0x2
145545: 95 17 08 02              a0 = sp + 0x208
145549: 95 18 90 02              a1 = sp + 0x290
145553: 50 20 90 07 69 17 fe     ra = 1936, jump @1503
      :                          @10632 [@dyn 968]
145560: 82 16 10 02              s1 = u64 [sp + 0x210]
145564: 82 1b 18 02              a4 = u64 [sp + 0x218]
145568: 82 17 08 02              a0 = u64 [sp + 0x208]
145572: 7b 17 70                 u64 [sp + 0x70] = a0
145575: 33 07 02                 a0 = 0x2
145578: 33 08                    a1 = 0
145580: 33 09                    a2 = 0
145582: 64 6a                    a3 = s1
145584: 33 00 92 07              ra = 0x792
145588: 0a 64                    ecalli 100 // 'log'
145590: 01                       fallthrough
      :                          @10633 [@dyn 969]
145591: 82 1c 70                 a5 = u64 [sp + 0x70]
145594: 82 17 68                 a0 = u64 [sp + 0x68]
145597: c8 c7 07                 a0 = a0 + a5
145600: 53 37 00 00 ff 27        jump @10639 if a0 <u 4294901760
      :                          @10634
145606: 33 07 c0 22 03           a0 = 0x322c0
145611: 95 77 00 00 01           a0 = a0 + 0x10000
145616: 01                       fallthrough
      :                          @10635
145617: 82 78                    a1 = u64 [a0]
145619: c9 87 09                 a2 = a0 - a1
145622: ab 69 11                 jump @10639 if a2 != s1
      :                          @10636
145625: c9 c8 09                 a2 = a1 - a5
145628: 01                       fallthrough
      :                          @10637
145629: 82 7a                    a3 = u64 [a0]
145631: ab 8a f2                 jump @10635 if a3 != a1
      :                          @10638
145634: 7b 79                    u64 [a0] = a2
145636: 33 0b                    a4 = 0
145638: 01                       fallthrough
      :                          @10639
145639: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
145643: 51 08 3b                 jump @10646 if a1 == 0
      :                          @10640
145646: 56 28 00 10 38           jump @10646 if a1 >u 4096
      :                          @10641
145651: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
145655: 97 88 04                 a1 = a1 << 0x4
145658: 33 09 c0 22 03           a2 = 0x322c0
145663: 95 99 00 00 01           a2 = a2 + 0x10000
145668: 01                       fallthrough
      :                          @10642
145669: 82 9a                    a3 = u64 [a2]
145671: c9 a9 0b                 a4 = a2 - a3
145674: ab 7b 1c                 jump @10646 if a4 != a0
      :                          @10643
145677: c9 8a 0b                 a4 = a3 - a1
145680: 01                       fallthrough
      :                          @10644
145681: 82 9c                    a5 = u64 [a2]
145683: ab ac f2                 jump @10642 if a5 != a3
      :                          @10645
145686: 7b 9b                    u64 [a2] = a4
145688: 33 06                    s1 = 0
145690: 95 17 20 01              a0 = sp + 0x120
145694: 33 00 94 07              ra = 0x794
145698: 28 f4 d3 fd              jump @241
      :                          @10646
145702: 95 17 20 01              a0 = sp + 0x120
145706: 50 20 94 07 ec d3 fd     ra = 1940, jump @241
      :                          @10647 [@dyn 970]
145713: 28 52 a9 00              jump @12868
      :                          @10648 [@dyn 971]
145717: 3a 07 60 11 03           a0 = u64 [0x31160]
145722: 7b 17 70                 u64 [sp + 0x70] = a0
145725: 95 17 90 02              a0 = sp + 0x290
145729: 33 09 06                 a2 = 0x6
145732: 33 08                    a1 = 0
145734: 50 20 98 07 5e 2b fe     ra = 1944, jump @1889
      :                          @10649 [@dyn 972]
145741: 95 17 e0 01              a0 = sp + 0x1e0
145745: 95 18 90 02              a1 = sp + 0x290
145749: 33 09 05                 a2 = 0x5
145752: 50 20 9a 07 99 20 fe     ra = 1946, jump @1721
      :                          @10650 [@dyn 973]
145759: 33 07                    a0 = 0
145761: 33 0b 10                 a4 = 0x10
145764: 33 0c 78 12 03           a5 = 0x31278
145769: 14 02 cd cc cc cc cc cc cc cc t0 = 0xcccccccccccccccd
145779: 33 04 0a                 t2 = 0xa
145782: 82 13 70                 t1 = u64 [sp + 0x70]
145785: 01                       fallthrough
      :                          @10651
145786: 3a 08 78 12 03           a1 = u64 [0x31278]
145791: 97 89 0d                 a2 = a1 << 0xd
145794: d3 98 08                 a1 = a1 ^ a2
145797: 98 89 07                 a2 = a1 >> 0x7
145800: d3 98 08                 a1 = a1 ^ a2
145803: 97 89 11                 a2 = a1 << 0x11
145806: d3 98 08                 a1 = a1 ^ a2
145809: 3e 08 78 12 03           u64 [0x31278] = a1
145814: 82 19 f0 01              a2 = u64 [sp + 0x1f0]
145818: ac 97 07                 jump @10653 if a0 <u a2
      :                          @10652
145821: 28 15 bb 00              jump @13265
      :                          @10653
145825: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
145829: c8 b9 09                 a2 = a2 + a4
145832: 82 9a                    a3 = u64 [a2]
145834: 52 0a 07                 jump @10655 if a3 != 0
      :                          @10654
145837: 28 db ba 00              jump @13227
      :                          @10655
145841: ca 38 08                 a1 = a1 * t1
145844: d6 28 0a                 a3 = a1 mulhu t0
145847: 82 99 f8                 a2 = u64 [a2 + 0xfffffffffffffff8]
145850: 98 aa 03                 a3 = a3 >> 0x3
145853: 96 aa 0a                 a3 = a3 * 0xa
145856: c9 a8 08                 a1 = a1 - a3
145859: 7b 98                    u64 [a2] = a1
145861: 3a 08 78 12 03           a1 = u64 [0x31278]
145866: 97 89 0d                 a2 = a1 << 0xd
145869: d3 98 08                 a1 = a1 ^ a2
145872: 98 89 07                 a2 = a1 >> 0x7
145875: d3 98 08                 a1 = a1 ^ a2
145878: 97 8a 11                 a3 = a1 << 0x11
145881: d3 8a 0a                 a3 = a3 ^ a1
145884: 3e 0a 78 12 03           u64 [0x31278] = a3
145889: 82 19 f0 01              a2 = u64 [sp + 0x1f0]
145893: ac 97 07                 jump @10657 if a0 <u a2
      :                          @10656
145896: 28 ca ba 00              jump @13265
      :                          @10657
145900: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
145904: c8 b9 09                 a2 = a2 + a4
145907: 82 98                    a1 = u64 [a2]
145909: 55 18 02 08              jump @10659 if a1 >=u 2
      :                          @10658
145913: 28 ca b9 00              jump @13209
      :                          @10659
145917: ca 3a 08                 a1 = a3 * t1
145920: d6 28 0a                 a3 = a1 mulhu t0
145923: 82 99 f8                 a2 = u64 [a2 + 0xfffffffffffffff8]
145926: 98 aa 03                 a3 = a3 >> 0x3
145929: 96 aa 0a                 a3 = a3 * 0xa
145932: c9 a8 08                 a1 = a1 - a3
145935: 7b 98 08                 u64 [a2 + 0x8] = a1
145938: 3a 08 78 12 03           a1 = u64 [0x31278]
145943: 97 89 0d                 a2 = a1 << 0xd
145946: d3 98 08                 a1 = a1 ^ a2
145949: 98 89 07                 a2 = a1 >> 0x7
145952: d3 98 08                 a1 = a1 ^ a2
145955: 97 8a 11                 a3 = a1 << 0x11
145958: d3 8a 0a                 a3 = a3 ^ a1
145961: 3e 0a 78 12 03           u64 [0x31278] = a3
145966: 82 19 f0 01              a2 = u64 [sp + 0x1f0]
145970: ac 97 07                 jump @10661 if a0 <u a2
      :                          @10660
145973: 28 7d ba 00              jump @13265
      :                          @10661
145977: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
145981: c8 b9 09                 a2 = a2 + a4
145984: 82 98                    a1 = u64 [a2]
145986: 55 18 03 08              jump @10663 if a1 >=u 3
      :                          @10662
145990: 28 7f b9 00              jump @13211
      :                          @10663
145994: ca 3a 08                 a1 = a3 * t1
145997: d6 28 0a                 a3 = a1 mulhu t0
146000: 82 99 f8                 a2 = u64 [a2 + 0xfffffffffffffff8]
146003: 98 aa 03                 a3 = a3 >> 0x3
146006: 96 aa 0a                 a3 = a3 * 0xa
146009: c9 a8 08                 a1 = a1 - a3
146012: 7b 98 10                 u64 [a2 + 0x10] = a1
146015: 3a 08 78 12 03           a1 = u64 [0x31278]
146020: 97 89 0d                 a2 = a1 << 0xd
146023: d3 98 08                 a1 = a1 ^ a2
146026: 98 89 07                 a2 = a1 >> 0x7
146029: d3 98 08                 a1 = a1 ^ a2
146032: 97 8a 11                 a3 = a1 << 0x11
146035: d3 8a 0a                 a3 = a3 ^ a1
146038: 3e 0a 78 12 03           u64 [0x31278] = a3
146043: 82 19 f0 01              a2 = u64 [sp + 0x1f0]
146047: ac 97 07                 jump @10665 if a0 <u a2
      :                          @10664
146050: 28 30 ba 00              jump @13265
      :                          @10665
146054: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
146058: c8 b9 09                 a2 = a2 + a4
146061: 82 98                    a1 = u64 [a2]
146063: 55 18 04 08              jump @10667 if a1 >=u 4
      :                          @10666
146067: 28 31 b9 00              jump @13210
      :                          @10667
146071: ca 3a 08                 a1 = a3 * t1
146074: d6 28 0a                 a3 = a1 mulhu t0
146077: 82 99 f8                 a2 = u64 [a2 + 0xfffffffffffffff8]
146080: 98 aa 03                 a3 = a3 >> 0x3
146083: 96 aa 0a                 a3 = a3 * 0xa
146086: c9 a8 08                 a1 = a1 - a3
146089: 7b 98 18                 u64 [a2 + 0x18] = a1
146092: 3a 08 78 12 03           a1 = u64 [0x31278]
146097: 97 89 0d                 a2 = a1 << 0xd
146100: d3 98 08                 a1 = a1 ^ a2
146103: 98 89 07                 a2 = a1 >> 0x7
146106: d3 98 08                 a1 = a1 ^ a2
146109: 97 8a 11                 a3 = a1 << 0x11
146112: d3 8a 0a                 a3 = a3 ^ a1
146115: 3e 0a 78 12 03           u64 [0x31278] = a3
146120: 82 19 f0 01              a2 = u64 [sp + 0x1f0]
146124: ac 97 07                 jump @10669 if a0 <u a2
      :                          @10668
146127: 28 e3 b9 00              jump @13265
      :                          @10669
146131: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
146135: c8 b9 09                 a2 = a2 + a4
146138: 82 98                    a1 = u64 [a2]
146140: 55 18 05 08              jump @10671 if a1 >=u 5
      :                          @10670
146144: 28 ae b9 00              jump @13231
      :                          @10671
146148: ca 3a 08                 a1 = a3 * t1
146151: d6 28 0a                 a3 = a1 mulhu t0
146154: 82 99 f8                 a2 = u64 [a2 + 0xfffffffffffffff8]
146157: 98 aa 03                 a3 = a3 >> 0x3
146160: 96 aa 0a                 a3 = a3 * 0xa
146163: c9 a8 08                 a1 = a1 - a3
146166: 7b 98 20                 u64 [a2 + 0x20] = a1
146169: 3a 08 78 12 03           a1 = u64 [0x31278]
146174: 97 89 0d                 a2 = a1 << 0xd
146177: d3 98 08                 a1 = a1 ^ a2
146180: 98 89 07                 a2 = a1 >> 0x7
146183: d3 98 08                 a1 = a1 ^ a2
146186: 97 89 11                 a2 = a1 << 0x11
146189: d3 89 04                 t2 = a2 ^ a1
146192: 3e 04 78 12 03           u64 [0x31278] = t2
146197: 82 19 f0 01              a2 = u64 [sp + 0x1f0]
146201: ac 97 07                 jump @10673 if a0 <u a2
      :                          @10672
146204: 28 96 b9 00              jump @13265
      :                          @10673
146208: 64 26                    s1 = t0
146210: 82 10 e8 01              ra = u64 [sp + 0x1e8]
146214: c8 b0 0a                 a3 = ra + a4
146217: 82 a8                    a1 = u64 [a3]
146219: 55 18 06 08              jump @10675 if a1 >=u 6
      :                          @10674
146223: 28 63 b9 00              jump @13235
      :                          @10675
146227: ca 34 08                 a1 = t2 * t1
146230: 64 62                    t0 = s1
146232: d6 68 0c                 a5 = a1 mulhu s1
146235: 82 aa f8                 a3 = u64 [a3 + 0xfffffffffffffff8]
146238: 98 cc 03                 a5 = a5 >> 0x3
146241: 33 04 0a                 t2 = 0xa
146244: ca 4c 0c                 a5 = a5 * t2
146247: c9 c8 08                 a1 = a1 - a5
146250: 7b a8 28                 u64 [a3 + 0x28] = a1
146253: 95 bb 18                 a4 = a4 + 0x18
146256: 95 77 01                 a0 = a0 + 0x1
146259: 33 0c 78 12 03           a5 = 0x31278
146264: 52 2b 88 00 22 fe        jump @10651 if a4 != 136
      :                          @10676
146270: 95 17 90 02              a0 = sp + 0x290
146274: 64 08                    a1 = ra
146276: 50 20 9c 07 c7 36 fe     ra = 1948, jump @2124
      :                          @10677 [@dyn 974]
146283: 95 17 90 02              a0 = sp + 0x290
146287: 50 20 9e 07 b8 2f ff     ra = 1950, jump @7351
      :                          @10678 [@dyn 975]
146294: 7b 17 20 01              u64 [sp + 0x120] = a0
146298: 95 17 e0 01              a0 = sp + 0x1e0
146302: 7b 17 38 02              u64 [sp + 0x238] = a0
146306: 33 07 44 02              a0 = 0x244
146310: 7b 17 40 02              u64 [sp + 0x240] = a0
146314: 95 17 20 01              a0 = sp + 0x120
146318: 7b 17 48 02              u64 [sp + 0x248] = a0
146322: 33 07 2c 0c              a0 = 0xc2c
146326: 7b 17 50 02              u64 [sp + 0x250] = a0
146330: 33 07 18 17 01           a0 = 0x11718
146335: 7b 17 90 02              u64 [sp + 0x290] = a0
146339: 49 21 98 02 02           u64 [sp + 664] = 0x2
146344: 49 21 b0 02              u64 [sp + 688] = 0
146348: 95 18 38 02              a1 = sp + 0x238
146352: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
146356: 49 21 a8 02 02           u64 [sp + 680] = 0x2
146361: 95 17 08 02              a0 = sp + 0x208
146365: 95 18 90 02              a1 = sp + 0x290
146369: 50 20 a0 07 39 14 fe     ra = 1952, jump @1503
      :                          @10679 [@dyn 976]
146376: 82 16 10 02              s1 = u64 [sp + 0x210]
146380: 82 1b 18 02              a4 = u64 [sp + 0x218]
146384: 82 17 08 02              a0 = u64 [sp + 0x208]
146388: 7b 17 70                 u64 [sp + 0x70] = a0
146391: 33 07 02                 a0 = 0x2
146394: 33 08                    a1 = 0
146396: 33 09                    a2 = 0
146398: 64 6a                    a3 = s1
146400: 33 00 a2 07              ra = 0x7a2
146404: 0a 64                    ecalli 100 // 'log'
146406: 01                       fallthrough
      :                          @10680 [@dyn 977]
146407: 82 1c 70                 a5 = u64 [sp + 0x70]
146410: 82 17 68                 a0 = u64 [sp + 0x68]
146413: c8 c7 07                 a0 = a0 + a5
146416: 33 08 00 00 ff           a1 = 0xffffffffffff0000
146421: ae 87 07                 jump @10682 if a0 >=u a1
      :                          @10681
146424: 28 54 a3 00              jump @12803
      :                          @10682
146428: 33 07 c0 22 03           a0 = 0x322c0
146433: 95 77 00 00 01           a0 = a0 + 0x10000
146438: 01                       fallthrough
      :                          @10683
146439: 82 78                    a1 = u64 [a0]
146441: c9 87 09                 a2 = a0 - a1
146444: aa 69 07                 jump @10685 if a2 == s1
      :                          @10684
146447: 28 3d a3 00              jump @12803
      :                          @10685
146451: c9 c8 09                 a2 = a1 - a5
146454: 01                       fallthrough
      :                          @10686
146455: 82 7a                    a3 = u64 [a0]
146457: ab 8a ee                 jump @10683 if a3 != a1
      :                          @10687
146460: 7b 79                    u64 [a0] = a2
146462: 33 0b                    a4 = 0
146464: 01                       fallthrough
      :                          @10688
146465: ab 8a e6                 jump @10683 if a3 != a1
      :                          @10689
146468: 28 28 a3 00              jump @12803
      :                          @10690 [@dyn 978]
146472: 3a 08 78 12 03           a1 = u64 [0x31278]
146477: 97 89 0d                 a2 = a1 << 0xd
146480: d3 98 08                 a1 = a1 ^ a2
146483: 98 89 07                 a2 = a1 >> 0x7
146486: d3 89 09                 a2 = a2 ^ a1
146489: 97 9a 11                 a3 = a2 << 0x11
146492: 3a 08 60 11 03           a1 = u64 [0x31160]
146497: d3 9a 0a                 a3 = a3 ^ a2
146500: 3a 09 d0 11 03           a2 = u64 [0x311d0]
146505: ca 8a 0b                 a4 = a3 * a1
146508: 3e 0a 78 12 03           u64 [0x31278] = a3
146513: d6 9b 0a                 a3 = a4 mulhu a2
146516: c9 ab 0c                 a5 = a4 - a3
146519: 98 cc 01                 a5 = a5 >> 0x1
146522: c8 ca 0a                 a3 = a3 + a5
146525: 98 ac 06                 a5 = a3 >> 0x6
146528: 33 03 65                 t1 = 0x65
146531: ca 3c 0c                 a5 = a5 * t1
146534: 3a 06 78 12 03           s1 = u64 [0x31278]
146539: c9 cb 0b                 a4 = a4 - a5
146542: 95 b2 ce                 t0 = a4 + 0xffffffffffffffce
146545: 97 6c 0d                 a5 = s1 << 0xd
146548: d3 c6 06                 s1 = s1 ^ a5
146551: 98 6c 07                 a5 = s1 >> 0x7
146554: d3 c6 06                 s1 = s1 ^ a5
146557: 97 6c 11                 a5 = s1 << 0x11
146560: d3 6c 0c                 a5 = a5 ^ s1
146563: ca 8c 0b                 a4 = a5 * a1
146566: 3e 0c 78 12 03           u64 [0x31278] = a5
146571: d6 9b 0c                 a5 = a4 mulhu a2
146574: c9 cb 06                 s1 = a4 - a5
146577: 98 66 01                 s1 = s1 >> 0x1
146580: c8 6c 0c                 a5 = a5 + s1
146583: 98 cc 06                 a5 = a5 >> 0x6
146586: ca 3c 0c                 a5 = a5 * t1
146589: 3a 06 78 12 03           s1 = u64 [0x31278]
146594: c9 cb 0b                 a4 = a4 - a5
146597: 95 bc ce                 a5 = a4 + 0xffffffffffffffce
146600: 97 6b 0d                 a4 = s1 << 0xd
146603: d3 b6 06                 s1 = s1 ^ a4
146606: 98 6b 07                 a4 = s1 >> 0x7
146609: d3 b6 06                 s1 = s1 ^ a4
146612: 97 6b 11                 a4 = s1 << 0x11
146615: d3 6b 0b                 a4 = a4 ^ s1
146618: ca 8b 0a                 a3 = a4 * a1
146621: 3e 0b 78 12 03           u64 [0x31278] = a4
146626: d6 9a 0b                 a4 = a3 mulhu a2
146629: c9 ba 06                 s1 = a3 - a4
146632: 98 66 01                 s1 = s1 >> 0x1
146635: c8 6b 0b                 a4 = a4 + s1
146638: 98 bb 06                 a4 = a4 >> 0x6
146641: ca 3b 0b                 a4 = a4 * t1
146644: 3a 06 78 12 03           s1 = u64 [0x31278]
146649: c9 ba 0a                 a3 = a3 - a4
146652: 95 aa ce                 a3 = a3 + 0xffffffffffffffce
146655: 97 6b 0d                 a4 = s1 << 0xd
146658: d3 b6 06                 s1 = s1 ^ a4
146661: 98 6b 07                 a4 = s1 >> 0x7
146664: d3 b6 06                 s1 = s1 ^ a4
146667: 97 6b 11                 a4 = s1 << 0x11
146670: d3 6b 0b                 a4 = a4 ^ s1
146673: ca 8b 08                 a1 = a4 * a1
146676: 3e 0b 78 12 03           u64 [0x31278] = a4
146681: d6 98 07                 a0 = a1 mulhu a2
146684: c9 78 09                 a2 = a1 - a0
146687: 98 99 01                 a2 = a2 >> 0x1
146690: c8 97 07                 a0 = a0 + a2
146693: 98 77 06                 a0 = a0 >> 0x6
146696: ca 37 07                 a0 = a0 * t1
146699: c9 78 08                 a1 = a1 - a0
146702: 95 87 ce                 a0 = a1 + 0xffffffffffffffce
146705: 7b 1c 10 02              u64 [sp + 0x210] = a5
146709: 7b 12 08 02              u64 [sp + 0x208] = t0
146713: 7b 1a 18 02              u64 [sp + 0x218] = a3
146717: 7b 17 20 02              u64 [sp + 0x220] = a0
146721: 95 17 08 02              a0 = sp + 0x208
146725: 95 16 08 02              s1 = sp + 0x208
146729: 28 7f 30 ff              jump @7411
      :                          @10691
146733: 7b 17 20 01              u64 [sp + 0x120] = a0
146737: 7b 16 38 02              u64 [sp + 0x238] = s1
146741: 33 07 b6 00              a0 = 0xb6
146745: 7b 17 40 02              u64 [sp + 0x240] = a0
146749: 95 17 20 01              a0 = sp + 0x120
146753: 7b 17 48 02              u64 [sp + 0x248] = a0
146757: 33 07 2c 0c              a0 = 0xc2c
146761: 7b 17 50 02              u64 [sp + 0x250] = a0
146765: 33 07 58 17 01           a0 = 0x11758
146770: 7b 17 90 02              u64 [sp + 0x290] = a0
146774: 49 21 98 02 02           u64 [sp + 664] = 0x2
146779: 49 21 b0 02              u64 [sp + 688] = 0
146783: 95 18 38 02              a1 = sp + 0x238
146787: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
146791: 49 21 a8 02 02           u64 [sp + 680] = 0x2
146796: 95 17 e0 01              a0 = sp + 0x1e0
146800: 95 18 90 02              a1 = sp + 0x290
146804: 50 20 a6 07 86 12 fe     ra = 1958, jump @1503
      :                          @10692 [@dyn 979]
146811: 82 16 e8 01              s1 = u64 [sp + 0x1e8]
146815: 82 1b f0 01              a4 = u64 [sp + 0x1f0]
146819: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
146823: 7b 17 70                 u64 [sp + 0x70] = a0
146826: 33 07 02                 a0 = 0x2
146829: 33 08                    a1 = 0
146831: 33 09                    a2 = 0
146833: 64 6a                    a3 = s1
146835: 33 00 a8 07              ra = 0x7a8
146839: 0a 64                    ecalli 100 // 'log'
146841: 01                       fallthrough
      :                          @10693 [@dyn 980]
146842: 82 1c 70                 a5 = u64 [sp + 0x70]
146845: 82 17 68                 a0 = u64 [sp + 0x68]
146848: c8 c7 07                 a0 = a0 + a5
146851: 55 37 00 00 ff 0a        jump @10695 if a0 >=u 4294901760
      :                          @10694
146857: 28 da a4 00              jump @12868
      :                          @10695
146861: 33 07 c0 22 03           a0 = 0x322c0
146866: 95 77 00 00 01           a0 = a0 + 0x10000
146871: 01                       fallthrough
      :                          @10696
146872: 82 78                    a1 = u64 [a0]
146874: c9 87 09                 a2 = a0 - a1
146877: aa 69 07                 jump @10698 if a2 == s1
      :                          @10697
146880: 28 c3 a4 00              jump @12868
      :                          @10698
146884: c9 c8 09                 a2 = a1 - a5
146887: 01                       fallthrough
      :                          @10699
146888: 82 7a                    a3 = u64 [a0]
146890: ab 8a ee                 jump @10696 if a3 != a1
      :                          @10700
146893: 7b 79                    u64 [a0] = a2
146895: 33 0b                    a4 = 0
146897: 01                       fallthrough
      :                          @10701
146898: ab 8a e6                 jump @10696 if a3 != a1
      :                          @10702
146901: 28 ae a4 00              jump @12868
      :                          @10703 [@dyn 981]
146905: 3a 07 60 11 03           a0 = u64 [0x31160]
146910: 7b 17 70                 u64 [sp + 0x70] = a0
146913: 49 21 90 02              u64 [sp + 656] = 0
146917: 49 21 98 02 08           u64 [sp + 664] = 0x8
146922: 49 21 a0 02              u64 [sp + 672] = 0
146926: 95 17 c8 01              a0 = sp + 0x1c8
146930: 95 18 90 02              a1 = sp + 0x290
146934: 33 00 ac 07              ra = 0x7ac
146938: 95 11 b8                 sp = sp + 0xffffffffffffffb8
146941: 7b 10 40                 u64 [sp + 0x40] = ra
146944: 7b 15 38                 u64 [sp + 0x38] = s0
146947: 7b 16 30                 u64 [sp + 0x30] = s1
146950: 7b 18 08                 u64 [sp + 0x8] = a1
146953: 33 03 c0 22 03           t1 = 0x322c0
146958: 33 02 00 00 01           t0 = 0x10000
146963: c8 23 09                 a2 = t1 + t0
146966: 28 99 1d fe              jump @1757
      :                          @10704 [@dyn 982]
146970: 33 03                    t1 = 0
146972: 33 02                    t0 = 0
146974: 33 00 78 12 03           ra = 0x31278
146979: 3a 07 e0 11 03           a0 = u64 [0x311e0]
146984: 7b 17 60                 u64 [sp + 0x60] = a0
146987: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
146997: 7b 17 58                 u64 [sp + 0x58] = a0
147000: 28 7d                    jump @10709
      :                          @10705
147002: 7b 1a 38                 u64 [sp + 0x38] = a3
147005: 7b 17 30                 u64 [sp + 0x30] = a0
147008: 50 20 ae 07 02 16 fe     ra = 1966, jump @1605
      :                          @10706 [@dyn 983]
147015: 82 1c 30                 a5 = u64 [sp + 0x30]
147018: 82 1a 38                 a3 = u64 [sp + 0x38]
147021: 33 00 78 12 03           ra = 0x31278
147026: 82 13 40                 t1 = u64 [sp + 0x40]
147029: 82 12 48                 t0 = u64 [sp + 0x48]
147032: 82 c8 10                 a1 = u64 [a5 + 0x10]
147035: 01                       fallthrough
      :                          @10707
147036: 82 19 70                 a2 = u64 [sp + 0x70]
147039: ca 96 07                 a0 = s1 * a2
147042: ca 9a 09                 a2 = a3 * a2
147045: 82 1a 60                 a3 = u64 [sp + 0x60]
147048: d6 a7 0a                 a3 = a0 mulhu a3
147051: c9 a7 0b                 a4 = a0 - a3
147054: 98 bb 01                 a4 = a4 >> 0x1
147057: c8 ba 0a                 a3 = a3 + a4
147060: 98 aa 04                 a3 = a3 >> 0x4
147063: 96 aa 15                 a3 = a3 * 0x15
147066: c9 a7 07                 a0 = a0 - a3
147069: 82 1a 58                 a3 = u64 [sp + 0x58]
147072: d6 a9 0a                 a3 = a2 mulhu a3
147075: 98 aa 03                 a3 = a3 >> 0x3
147078: 82 cb 08                 a4 = u64 [a5 + 0x8]
147081: 33 06 0a                 s1 = 0xa
147084: ca 6a 0a                 a3 = a3 * s1
147087: c9 a9 09                 a2 = a2 - a3
147090: 97 8a 04                 a3 = a1 << 0x4
147093: c8 ba 0a                 a3 = a3 + a4
147096: 7b a9                    u64 [a3] = a2
147098: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
147101: 7b a7 08                 u64 [a3 + 0x8] = a0
147104: 95 88 01                 a1 = a1 + 0x1
147107: 7b c8 10                 u64 [a5 + 0x10] = a1
147110: 95 33 18                 t1 = t1 + 0x18
147113: 95 22 01                 t0 = t0 + 0x1
147116: 52 23 f0 00 09           jump @10709 if t1 != 240
      :                          @10708
147121: 28 e6 9c 00              jump @12732
      :                          @10709
147125: 3a 07 78 12 03           a0 = u64 [0x31278]
147130: 97 78 0d                 a1 = a0 << 0xd
147133: d3 87 07                 a0 = a0 ^ a1
147136: 98 78 07                 a1 = a0 >> 0x7
147139: d3 87 07                 a0 = a0 ^ a1
147142: 97 78 11                 a1 = a0 << 0x11
147145: d3 78 0a                 a3 = a1 ^ a0
147148: 3e 0a 78 12 03           u64 [0x31278] = a3
147153: 3a 07 78 12 03           a0 = u64 [0x31278]
147158: 97 78 0d                 a1 = a0 << 0xd
147161: d3 87 07                 a0 = a0 ^ a1
147164: 98 78 07                 a1 = a0 >> 0x7
147167: d3 87 07                 a0 = a0 ^ a1
147170: 97 76 11                 s1 = a0 << 0x11
147173: d3 76 06                 s1 = s1 ^ a0
147176: 3e 06 78 12 03           u64 [0x31278] = s1
147181: 82 18 d8 01              a1 = u64 [sp + 0x1d8]
147185: ac 82 07                 jump @10711 if t0 <u a1
      :                          @10710
147188: 28 93 b5 00              jump @13226
      :                          @10711
147192: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
147196: c8 37 04                 t2 = a0 + t1
147199: 82 48 10                 a1 = u64 [t2 + 0x10]
147202: 82 49                    a2 = u64 [t2]
147204: 7b 12 48                 u64 [sp + 0x48] = t0
147207: 7b 13 40                 u64 [sp + 0x40] = t1
147210: ab 98 29                 jump @10714 if a1 != a2
      :                          @10712
147213: 64 47                    a0 = t2
147215: 7b 1a 38                 u64 [sp + 0x38] = a3
147218: 7b 14 30                 u64 [sp + 0x30] = t2
147221: 50 20 b0 07 2d 15 fe     ra = 1968, jump @1605
      :                          @10713 [@dyn 984]
147228: 82 1a 38                 a3 = u64 [sp + 0x38]
147231: 33 00 78 12 03           ra = 0x31278
147236: 82 13 40                 t1 = u64 [sp + 0x40]
147239: 82 12 48                 t0 = u64 [sp + 0x48]
147242: 82 17 30                 a0 = u64 [sp + 0x30]
147245: 64 74                    t2 = a0
147247: 82 78 10                 a1 = u64 [a0 + 0x10]
147250: 01                       fallthrough
      :                          @10714
147251: 82 19 70                 a2 = u64 [sp + 0x70]
147254: ca 96 07                 a0 = s1 * a2
147257: ca 9a 09                 a2 = a3 * a2
147260: 82 1a 60                 a3 = u64 [sp + 0x60]
147263: d6 a7 0a                 a3 = a0 mulhu a3
147266: c9 a7 0b                 a4 = a0 - a3
147269: 98 bb 01                 a4 = a4 >> 0x1
147272: c8 ba 0a                 a3 = a3 + a4
147275: 98 aa 04                 a3 = a3 >> 0x4
147278: 96 aa 15                 a3 = a3 * 0x15
147281: c9 a7 07                 a0 = a0 - a3
147284: 82 1a 58                 a3 = u64 [sp + 0x58]
147287: d6 a9 0a                 a3 = a2 mulhu a3
147290: 98 aa 03                 a3 = a3 >> 0x3
147293: 82 4b 08                 a4 = u64 [t2 + 0x8]
147296: 96 aa 0a                 a3 = a3 * 0xa
147299: c9 a9 09                 a2 = a2 - a3
147302: 97 8a 04                 a3 = a1 << 0x4
147305: c8 ba 0a                 a3 = a3 + a4
147308: 7b a9                    u64 [a3] = a2
147310: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
147313: 7b a7 08                 u64 [a3 + 0x8] = a0
147316: 95 88 01                 a1 = a1 + 0x1
147319: 7b 48 10                 u64 [t2 + 0x10] = a1
147322: 3a 07 78 12 03           a0 = u64 [0x31278]
147327: 97 78 0d                 a1 = a0 << 0xd
147330: d3 87 07                 a0 = a0 ^ a1
147333: 98 78 07                 a1 = a0 >> 0x7
147336: d3 87 07                 a0 = a0 ^ a1
147339: 97 78 11                 a1 = a0 << 0x11
147342: d3 78 0a                 a3 = a1 ^ a0
147345: 3e 0a 78 12 03           u64 [0x31278] = a3
147350: 3a 07 78 12 03           a0 = u64 [0x31278]
147355: 97 78 0d                 a1 = a0 << 0xd
147358: d3 87 07                 a0 = a0 ^ a1
147361: 98 78 07                 a1 = a0 >> 0x7
147364: d3 87 07                 a0 = a0 ^ a1
147367: 97 76 11                 s1 = a0 << 0x11
147370: d3 76 06                 s1 = s1 ^ a0
147373: 3e 06 78 12 03           u64 [0x31278] = s1
147378: 82 18 d8 01              a1 = u64 [sp + 0x1d8]
147382: ac 82 07                 jump @10716 if t0 <u a1
      :                          @10715
147385: 28 ce b4 00              jump @13226
      :                          @10716
147389: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
147393: c8 37 07                 a0 = a0 + t1
147396: 82 78 10                 a1 = u64 [a0 + 0x10]
147399: 82 79                    a2 = u64 [a0]
147401: ab 98 26                 jump @10719 if a1 != a2
      :                          @10717
147404: 7b 1a 38                 u64 [sp + 0x38] = a3
147407: 7b 17 30                 u64 [sp + 0x30] = a0
147410: 50 20 b2 07 70 14 fe     ra = 1970, jump @1605
      :                          @10718 [@dyn 985]
147417: 82 1c 30                 a5 = u64 [sp + 0x30]
147420: 82 1a 38                 a3 = u64 [sp + 0x38]
147423: 33 00 78 12 03           ra = 0x31278
147428: 82 13 40                 t1 = u64 [sp + 0x40]
147431: 82 12 48                 t0 = u64 [sp + 0x48]
147434: 82 c8 10                 a1 = u64 [a5 + 0x10]
147437: 28 05                    jump @10720
      :                          @10719
147439: 64 7c                    a5 = a0
147441: 01                       fallthrough
      :                          @10720
147442: 82 19 70                 a2 = u64 [sp + 0x70]
147445: ca 96 07                 a0 = s1 * a2
147448: ca 9a 09                 a2 = a3 * a2
147451: 82 1a 60                 a3 = u64 [sp + 0x60]
147454: d6 a7 0a                 a3 = a0 mulhu a3
147457: c9 a7 0b                 a4 = a0 - a3
147460: 98 bb 01                 a4 = a4 >> 0x1
147463: c8 ba 0a                 a3 = a3 + a4
147466: 98 aa 04                 a3 = a3 >> 0x4
147469: 96 aa 15                 a3 = a3 * 0x15
147472: c9 a7 07                 a0 = a0 - a3
147475: 82 1a 58                 a3 = u64 [sp + 0x58]
147478: d6 a9 0a                 a3 = a2 mulhu a3
147481: 98 aa 03                 a3 = a3 >> 0x3
147484: 82 cb 08                 a4 = u64 [a5 + 0x8]
147487: 96 aa 0a                 a3 = a3 * 0xa
147490: c9 a9 09                 a2 = a2 - a3
147493: 97 8a 04                 a3 = a1 << 0x4
147496: c8 ba 0a                 a3 = a3 + a4
147499: 7b a9                    u64 [a3] = a2
147501: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
147504: 7b a7 08                 u64 [a3 + 0x8] = a0
147507: 95 88 01                 a1 = a1 + 0x1
147510: 7b c8 10                 u64 [a5 + 0x10] = a1
147513: 3a 07 78 12 03           a0 = u64 [0x31278]
147518: 97 78 0d                 a1 = a0 << 0xd
147521: d3 87 07                 a0 = a0 ^ a1
147524: 98 78 07                 a1 = a0 >> 0x7
147527: d3 87 07                 a0 = a0 ^ a1
147530: 97 78 11                 a1 = a0 << 0x11
147533: d3 78 0a                 a3 = a1 ^ a0
147536: 3e 0a 78 12 03           u64 [0x31278] = a3
147541: 3a 07 78 12 03           a0 = u64 [0x31278]
147546: 97 78 0d                 a1 = a0 << 0xd
147549: d3 87 07                 a0 = a0 ^ a1
147552: 98 78 07                 a1 = a0 >> 0x7
147555: d3 87 07                 a0 = a0 ^ a1
147558: 97 76 11                 s1 = a0 << 0x11
147561: d3 76 06                 s1 = s1 ^ a0
147564: 3e 06 78 12 03           u64 [0x31278] = s1
147569: 82 18 d8 01              a1 = u64 [sp + 0x1d8]
147573: ac 82 07                 jump @10722 if t0 <u a1
      :                          @10721
147576: 28 0f b4 00              jump @13226
      :                          @10722
147580: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
147584: c8 37 07                 a0 = a0 + t1
147587: 82 78 10                 a1 = u64 [a0 + 0x10]
147590: 82 79                    a2 = u64 [a0]
147592: aa 98 b2 fd              jump @10705 if a1 == a2
      :                          @10723
147596: 64 7c                    a5 = a0
147598: 28 ce fd                 jump @10707
      :                          @10724 [@dyn 986]
147601: 3a 06 60 11 03           s1 = u64 [0x31160]
147606: 95 17 90 02              a0 = sp + 0x290
147610: 33 09 04                 a2 = 0x4
147613: 33 08                    a1 = 0
147615: 50 20 b6 07 05 24 fe     ra = 1974, jump @1889
      :                          @10725 [@dyn 987]
147622: 95 17 e0 01              a0 = sp + 0x1e0
147626: 95 18 90 02              a1 = sp + 0x290
147630: 33 09 04                 a2 = 0x4
147633: 50 20 b8 07 40 19 fe     ra = 1976, jump @1721
      :                          @10726 [@dyn 988]
147640: 33 03                    t1 = 0
147642: 33 0b 10                 a4 = 0x10
147645: 3a 02 e0 11 03           t0 = u64 [0x311e0]
147650: 01                       fallthrough
      :                          @10727
147651: 3a 07 78 12 03           a0 = u64 [0x31278]
147656: 97 78 0d                 a1 = a0 << 0xd
147659: d3 87 07                 a0 = a0 ^ a1
147662: 98 78 07                 a1 = a0 >> 0x7
147665: d3 87 07                 a0 = a0 ^ a1
147668: 97 79 11                 a2 = a0 << 0x11
147671: d3 79 09                 a2 = a2 ^ a0
147674: 3e 09 78 12 03           u64 [0x31278] = a2
147679: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
147683: ac 83 07                 jump @10729 if t1 <u a1
      :                          @10728
147686: 28 a0 b3 00              jump @13225
      :                          @10729
147690: 82 18 e8 01              a1 = u64 [sp + 0x1e8]
147694: c8 b8 08                 a1 = a1 + a4
147697: 82 87                    a0 = u64 [a1]
147699: 52 07 07                 jump @10731 if a0 != 0
      :                          @10730
147702: 28 bb b3 00              jump @13264
      :                          @10731
147706: ca 69 07                 a0 = a2 * s1
147709: d6 27 09                 a2 = a0 mulhu t0
147712: c9 97 0a                 a3 = a0 - a2
147715: 98 aa 01                 a3 = a3 >> 0x1
147718: c8 a9 09                 a2 = a2 + a3
147721: 98 99 04                 a2 = a2 >> 0x4
147724: 82 88 f8                 a1 = u64 [a1 + 0xfffffffffffffff8]
147727: 96 99 15                 a2 = a2 * 0x15
147730: c9 97 07                 a0 = a0 - a2
147733: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
147736: 7b 87                    u64 [a1] = a0
147738: 3a 07 78 12 03           a0 = u64 [0x31278]
147743: 97 78 0d                 a1 = a0 << 0xd
147746: d3 87 07                 a0 = a0 ^ a1
147749: 98 78 07                 a1 = a0 >> 0x7
147752: d3 87 07                 a0 = a0 ^ a1
147755: 97 7a 11                 a3 = a0 << 0x11
147758: d3 7a 0a                 a3 = a3 ^ a0
147761: 3e 0a 78 12 03           u64 [0x31278] = a3
147766: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
147770: ac 83 07                 jump @10733 if t1 <u a1
      :                          @10732
147773: 28 49 b3 00              jump @13225
      :                          @10733
147777: 82 18 e8 01              a1 = u64 [sp + 0x1e8]
147781: c8 b8 08                 a1 = a1 + a4
147784: 82 89                    a2 = u64 [a1]
147786: 55 19 02 08              jump @10735 if a2 >=u 2
      :                          @10734
147790: 28 41 b3 00              jump @13232
      :                          @10735
147794: ca 6a 07                 a0 = a3 * s1
147797: d6 27 09                 a2 = a0 mulhu t0
147800: c9 97 0a                 a3 = a0 - a2
147803: 98 aa 01                 a3 = a3 >> 0x1
147806: c8 a9 09                 a2 = a2 + a3
147809: 98 99 04                 a2 = a2 >> 0x4
147812: 82 88 f8                 a1 = u64 [a1 + 0xfffffffffffffff8]
147815: 96 99 15                 a2 = a2 * 0x15
147818: c9 97 07                 a0 = a0 - a2
147821: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
147824: 7b 87 08                 u64 [a1 + 0x8] = a0
147827: 3a 07 78 12 03           a0 = u64 [0x31278]
147832: 97 78 0d                 a1 = a0 << 0xd
147835: d3 87 07                 a0 = a0 ^ a1
147838: 98 78 07                 a1 = a0 >> 0x7
147841: d3 87 07                 a0 = a0 ^ a1
147844: 97 7a 11                 a3 = a0 << 0x11
147847: d3 7a 0a                 a3 = a3 ^ a0
147850: 3e 0a 78 12 03           u64 [0x31278] = a3
147855: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
147859: ac 83 07                 jump @10737 if t1 <u a1
      :                          @10736
147862: 28 f0 b2 00              jump @13225
      :                          @10737
147866: 82 18 e8 01              a1 = u64 [sp + 0x1e8]
147870: c8 b8 08                 a1 = a1 + a4
147873: 82 89                    a2 = u64 [a1]
147875: 55 19 03 08              jump @10739 if a2 >=u 3
      :                          @10738
147879: 28 e9 b2 00              jump @13233
      :                          @10739
147883: ca 6a 07                 a0 = a3 * s1
147886: d6 27 09                 a2 = a0 mulhu t0
147889: c9 97 0a                 a3 = a0 - a2
147892: 98 aa 01                 a3 = a3 >> 0x1
147895: c8 a9 09                 a2 = a2 + a3
147898: 98 99 04                 a2 = a2 >> 0x4
147901: 82 88 f8                 a1 = u64 [a1 + 0xfffffffffffffff8]
147904: 96 99 15                 a2 = a2 * 0x15
147907: c9 97 07                 a0 = a0 - a2
147910: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
147913: 7b 87 10                 u64 [a1 + 0x10] = a0
147916: 3a 07 78 12 03           a0 = u64 [0x31278]
147921: 97 78 0d                 a1 = a0 << 0xd
147924: d3 87 07                 a0 = a0 ^ a1
147927: 98 78 07                 a1 = a0 >> 0x7
147930: d3 87 07                 a0 = a0 ^ a1
147933: 97 78 11                 a1 = a0 << 0x11
147936: d3 78 04                 t2 = a1 ^ a0
147939: 3e 04 78 12 03           u64 [0x31278] = t2
147944: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
147948: ac 83 07                 jump @10741 if t1 <u a1
      :                          @10740
147951: 28 97 b2 00              jump @13225
      :                          @10741
147955: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
147959: c8 b7 0a                 a3 = a0 + a4
147962: 82 a9                    a2 = u64 [a3]
147964: 55 19 04 08              jump @10743 if a2 >=u 4
      :                          @10742
147968: 28 91 b2 00              jump @13234
      :                          @10743
147972: 64 60                    ra = s1
147974: ca 64 06                 s1 = t2 * s1
147977: d6 26 0c                 a5 = s1 mulhu t0
147980: c9 c6 09                 a2 = s1 - a5
147983: 98 99 01                 a2 = a2 >> 0x1
147986: c8 c9 09                 a2 = a2 + a5
147989: 98 99 04                 a2 = a2 >> 0x4
147992: 82 aa f8                 a3 = u64 [a3 + 0xfffffffffffffff8]
147995: 96 99 15                 a2 = a2 * 0x15
147998: c9 96 06                 s1 = s1 - a2
148001: 95 66 f6                 s1 = s1 + 0xfffffffffffffff6
148004: 7b a6 18                 u64 [a3 + 0x18] = s1
148007: 64 06                    s1 = ra
148009: 95 bb 18                 a4 = a4 + 0x18
148012: 95 33 01                 t1 = t1 + 0x1
148015: 33 0c 78 12 03           a5 = 0x31278
148020: 33 09 70                 a2 = 0x70
148023: ab 9b 8c fe              jump @10727 if a4 != a2
      :                          @10744
148027: 50 20 ba 07 b8 2c ff     ra = 1978, jump @7434
      :                          @10745 [@dyn 989]
148034: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
148038: 7b 18 20 01              u64 [sp + 0x120] = a1
148042: 95 17 e0 01              a0 = sp + 0x1e0
148046: 7b 17 90 02              u64 [sp + 0x290] = a0
148050: 33 07 44 02              a0 = 0x244
148054: 7b 17 98 02              u64 [sp + 0x298] = a0
148058: 95 17 c8 01              a0 = sp + 0x1c8
148062: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
148066: 33 07 2c 0c              a0 = 0xc2c
148070: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
148074: 95 18 20 01              a1 = sp + 0x120
148078: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
148082: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
148086: 33 07 c8 17 01           a0 = 0x117c8
148091: 7b 17 38 02              u64 [sp + 0x238] = a0
148095: 49 21 40 02 04           u64 [sp + 576] = 0x4
148100: 49 21 58 02              u64 [sp + 600] = 0
148104: 95 17 90 02              a0 = sp + 0x290
148108: 7b 17 48 02              u64 [sp + 0x248] = a0
148112: 49 21 50 02 03           u64 [sp + 592] = 0x3
148117: 95 17 08 02              a0 = sp + 0x208
148121: 95 18 38 02              a1 = sp + 0x238
148125: 50 20 bc 07 5d 0d fe     ra = 1980, jump @1503
      :                          @10746 [@dyn 990]
148132: 82 16 10 02              s1 = u64 [sp + 0x210]
148136: 82 1b 18 02              a4 = u64 [sp + 0x218]
148140: 82 17 08 02              a0 = u64 [sp + 0x208]
148144: 7b 17 70                 u64 [sp + 0x70] = a0
148147: 33 07 02                 a0 = 0x2
148150: 33 08                    a1 = 0
148152: 33 09                    a2 = 0
148154: 64 6a                    a3 = s1
148156: 33 00 be 07              ra = 0x7be
148160: 0a 64                    ecalli 100 // 'log'
148162: 01                       fallthrough
      :                          @10747 [@dyn 991]
148163: 82 1c 70                 a5 = u64 [sp + 0x70]
148166: 82 17 68                 a0 = u64 [sp + 0x68]
148169: c8 c7 07                 a0 = a0 + a5
148172: 33 08 00 00 ff           a1 = 0xffffffffffff0000
148177: ae 87 07                 jump @10749 if a0 >=u a1
      :                          @10748
148180: 28 78 9c 00              jump @12803
      :                          @10749
148184: 33 07 c0 22 03           a0 = 0x322c0
148189: 95 77 00 00 01           a0 = a0 + 0x10000
148194: 01                       fallthrough
      :                          @10750
148195: 82 78                    a1 = u64 [a0]
148197: c9 87 09                 a2 = a0 - a1
148200: aa 69 07                 jump @10752 if a2 == s1
      :                          @10751
148203: 28 61 9c 00              jump @12803
      :                          @10752
148207: c9 c8 09                 a2 = a1 - a5
148210: 01                       fallthrough
      :                          @10753
148211: 82 7a                    a3 = u64 [a0]
148213: ab 8a ee                 jump @10750 if a3 != a1
      :                          @10754
148216: 7b 79                    u64 [a0] = a2
148218: 33 0b                    a4 = 0
148220: 01                       fallthrough
      :                          @10755
148221: ab 8a e6                 jump @10750 if a3 != a1
      :                          @10756
148224: 28 4c 9c 00              jump @12803
      :                          @10757 [@dyn 992]
148228: 3a 08 78 12 03           a1 = u64 [0x31278]
148233: 97 89 0d                 a2 = a1 << 0xd
148236: d3 98 08                 a1 = a1 ^ a2
148239: 98 89 07                 a2 = a1 >> 0x7
148242: d3 98 08                 a1 = a1 ^ a2
148245: 97 89 11                 a2 = a1 << 0x11
148248: d3 98 08                 a1 = a1 ^ a2
148251: 3a 09 60 11 03           a2 = u64 [0x31160]
148256: 3a 0a 68 11 03           a3 = u64 [0x31168]
148261: 3e 08 78 12 03           u64 [0x31278] = a1
148266: ca 98 07                 a0 = a1 * a2
148269: 98 78 03                 a1 = a0 >> 0x3
148272: d6 a8 08                 a1 = a1 mulhu a3
148275: 98 88 04                 a1 = a1 >> 0x4
148278: 96 88 e8 03              a1 = a1 * 0x3e8
148282: c9 87 07                 a0 = a0 - a1
148285: 86 77 01                 a0 = a0 | 0x1
148288: 50 20 c2 07 29 2c ff     ra = 1986, jump @7447
      :                          @10758 [@dyn 993]
148295: 7b 17 08 02              u64 [sp + 0x208] = a0
148299: 7b 18 10 02              u64 [sp + 0x210] = a1
148303: 95 17 08 02              a0 = sp + 0x208
148307: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
148311: 33 07 76 02              a0 = 0x276
148315: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
148319: 33 07 20 18 01           a0 = 0x11820
148324: 7b 17 90 02              u64 [sp + 0x290] = a0
148328: 49 21 98 02 01           u64 [sp + 664] = 0x1
148333: 49 21 b0 02              u64 [sp + 688] = 0
148337: 95 18 e0 01              a1 = sp + 0x1e0
148341: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
148345: 49 21 a8 02 01           u64 [sp + 680] = 0x1
148350: 95 17 38 02              a0 = sp + 0x238
148354: 95 18 90 02              a1 = sp + 0x290
148358: 50 20 c4 07 74 0c fe     ra = 1988, jump @1503
      :                          @10759 [@dyn 994]
148365: 82 16 40 02              s1 = u64 [sp + 0x240]
148369: 82 1b 48 02              a4 = u64 [sp + 0x248]
148373: 82 17 38 02              a0 = u64 [sp + 0x238]
148377: 7b 17 70                 u64 [sp + 0x70] = a0
148380: 33 07 02                 a0 = 0x2
148383: 33 08                    a1 = 0
148385: 33 09                    a2 = 0
148387: 64 6a                    a3 = s1
148389: 33 00 c6 07              ra = 0x7c6
148393: 0a 64                    ecalli 100 // 'log'
148395: 01                       fallthrough
      :                          @10760 [@dyn 995]
148396: 82 1c 70                 a5 = u64 [sp + 0x70]
148399: 82 17 68                 a0 = u64 [sp + 0x68]
148402: c8 c7 07                 a0 = a0 + a5
148405: 55 37 00 00 ff 0a        jump @10762 if a0 >=u 4294901760
      :                          @10761
148411: 28 c8 9e 00              jump @12868
      :                          @10762
148415: 33 07 c0 22 03           a0 = 0x322c0
148420: 95 77 00 00 01           a0 = a0 + 0x10000
148425: 01                       fallthrough
      :                          @10763
148426: 82 78                    a1 = u64 [a0]
148428: c9 87 09                 a2 = a0 - a1
148431: aa 69 07                 jump @10765 if a2 == s1
      :                          @10764
148434: 28 b1 9e 00              jump @12868
      :                          @10765
148438: c9 c8 09                 a2 = a1 - a5
148441: 01                       fallthrough
      :                          @10766
148442: 82 7a                    a3 = u64 [a0]
148444: ab 8a ee                 jump @10763 if a3 != a1
      :                          @10767
148447: 7b 79                    u64 [a0] = a2
148449: 33 0b                    a4 = 0
148451: 01                       fallthrough
      :                          @10768
148452: ab 8a e6                 jump @10763 if a3 != a1
      :                          @10769
148455: 28 9c 9e 00              jump @12868
      :                          @10770 [@dyn 996]
148459: 95 17 40 01              a0 = sp + 0x140
148463: 33 00 ca 07              ra = 0x7ca
148467: 95 11 f8                 sp = sp + 0xfffffffffffffff8
148470: 7b 15                    u64 [sp] = s0
148472: 33 03 c0 22 03           t1 = 0x322c0
148477: 33 02 00 00 01           t0 = 0x10000
148482: c8 23 04                 t2 = t1 + t0
148485: 28 24 31 fe              jump @2164
      :                          @10771 [@dyn 997]
148489: 82 18 50 01              a1 = u64 [sp + 0x150]
148493: 7b 18 58                 u64 [sp + 0x58] = a1
148496: 82 16 48 01              s1 = u64 [sp + 0x148]
148500: 68 87                    a0 = clz a1
148502: 9a 7a 40                 a3 = 0x40 - a0
148505: 64 67                    a0 = s1
148507: 33 09                    a2 = 0
148509: 50 20 cc 07 5c ee fd     ra = 1996, jump @1000
      :                          @10772 [@dyn 998]
148516: 82 17 40 01              a0 = u64 [sp + 0x140]
148520: 7b 17 60                 u64 [sp + 0x60] = a0
148523: 3a 08 78 12 03           a1 = u64 [0x31278]
148528: 97 89 0d                 a2 = a1 << 0xd
148531: d3 98 08                 a1 = a1 ^ a2
148534: 98 89 07                 a2 = a1 >> 0x7
148537: 3a 0a 60 11 03           a3 = u64 [0x31160]
148542: d3 98 08                 a1 = a1 ^ a2
148545: 97 89 11                 a2 = a1 << 0x11
148548: d3 98 08                 a1 = a1 ^ a2
148551: ca a8 09                 a2 = a1 * a3
148554: 3a 0b b0 11 03           a4 = u64 [0x311b0]
148559: 3e 08 78 12 03           u64 [0x31278] = a1
148564: 98 98 02                 a1 = a2 >> 0x2
148567: d6 b8 08                 a1 = a1 mulhu a4
148570: 98 88 02                 a1 = a1 >> 0x2
148573: 3a 0c 78 12 03           a5 = u64 [0x31278]
148578: 96 88 64                 a1 = a1 * 0x64
148581: c9 89 08                 a1 = a2 - a1
148584: 97 c9 0d                 a2 = a5 << 0xd
148587: d3 c9 09                 a2 = a2 ^ a5
148590: 98 9c 07                 a5 = a2 >> 0x7
148593: d3 c9 09                 a2 = a2 ^ a5
148596: 97 9c 11                 a5 = a2 << 0x11
148599: d3 c9 09                 a2 = a2 ^ a5
148602: ca a9 0a                 a3 = a2 * a3
148605: 3e 09 78 12 03           u64 [0x31278] = a2
148610: 98 a7 02                 a0 = a3 >> 0x2
148613: d6 b7 07                 a0 = a0 mulhu a4
148616: 98 77 02                 a0 = a0 >> 0x2
148619: 96 77 64                 a0 = a0 * 0x64
148622: c9 7a 0a                 a3 = a3 - a0
148625: e6 a8 09                 a2 = minu(a1, a3)
148628: e4 a8 0a                 a3 = maxu(a1, a3)
148631: 7b 19 c8 01              u64 [sp + 0x1c8] = a2
148635: 7b 1a 20 01              u64 [sp + 0x120] = a3
148639: 7b 16 70                 u64 [sp + 0x70] = s1
148642: 64 67                    a0 = s1
148644: 82 18 58                 a1 = u64 [sp + 0x58]
148647: 50 20 ce 07 81 4a ff     ra = 1998, jump @8036
      :                          @10773 [@dyn 999]
148654: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
148658: 95 17 c8 01              a0 = sp + 0x1c8
148662: 7b 17 90 02              u64 [sp + 0x290] = a0
148666: 33 07 98 0c              a0 = 0xc98
148670: 7b 17 98 02              u64 [sp + 0x298] = a0
148674: 95 18 20 01              a1 = sp + 0x120
148678: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
148682: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
148686: 95 17 e0 01              a0 = sp + 0x1e0
148690: 7b 17 b0 02              u64 [sp + 0x2b0] = a0
148694: 33 07 2c 0c              a0 = 0xc2c
148698: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
148702: 33 07 50 18 01           a0 = 0x11850
148707: 7b 17 38 02              u64 [sp + 0x238] = a0
148711: 49 21 40 02 03           u64 [sp + 576] = 0x3
148716: 49 21 58 02              u64 [sp + 600] = 0
148720: 95 18 90 02              a1 = sp + 0x290
148724: 7b 18 48 02              u64 [sp + 0x248] = a1
148728: 49 21 50 02 03           u64 [sp + 592] = 0x3
148733: 95 17 08 02              a0 = sp + 0x208
148737: 95 18 38 02              a1 = sp + 0x238
148741: 50 20 d0 07 f5 0a fe     ra = 2000, jump @1503
      :                          @10774 [@dyn 1000]
148748: 82 16 10 02              s1 = u64 [sp + 0x210]
148752: 82 1b 18 02              a4 = u64 [sp + 0x218]
148756: 82 17 08 02              a0 = u64 [sp + 0x208]
148760: 7b 17 58                 u64 [sp + 0x58] = a0
148763: 33 07 02                 a0 = 0x2
148766: 33 08                    a1 = 0
148768: 33 09                    a2 = 0
148770: 64 6a                    a3 = s1
148772: 33 00 d2 07              ra = 0x7d2
148776: 0a 64                    ecalli 100 // 'log'
148778: 01                       fallthrough
      :                          @10775 [@dyn 1001]
148779: 82 1c 58                 a5 = u64 [sp + 0x58]
148782: 82 17 68                 a0 = u64 [sp + 0x68]
148785: c8 c7 07                 a0 = a0 + a5
148788: 53 37 00 00 ff 25        jump @10781 if a0 <u 4294901760
      :                          @10776
148794: 33 07 c0 22 03           a0 = 0x322c0
148799: 95 77 00 00 01           a0 = a0 + 0x10000
148804: 01                       fallthrough
      :                          @10777
148805: 82 78                    a1 = u64 [a0]
148807: c9 87 09                 a2 = a0 - a1
148810: ab 69 0f                 jump @10781 if a2 != s1
      :                          @10778
148813: c9 c8 09                 a2 = a1 - a5
148816: 01                       fallthrough
      :                          @10779
148817: 82 7a                    a3 = u64 [a0]
148819: ab 8a f2                 jump @10777 if a3 != a1
      :                          @10780
148822: 7b 79                    u64 [a0] = a2
148824: 01                       fallthrough
      :                          @10781
148825: 82 17 60                 a0 = u64 [sp + 0x60]
148828: 52 07 07                 jump @10783 if a0 != 0
      :                          @10782
148831: 28 24 9d 00              jump @12868
      :                          @10783
148835: 82 18 60                 a1 = u64 [sp + 0x60]
148838: 54 28 00 20 09           jump @10785 if a1 <=u 8192
      :                          @10784
148843: 28 18 9d 00              jump @12868
      :                          @10785
148847: 82 17 60                 a0 = u64 [sp + 0x60]
148850: 97 77 03                 a0 = a0 << 0x3
148853: 33 08 c0 22 03           a1 = 0x322c0
148858: 95 88 00 00 01           a1 = a1 + 0x10000
148863: 01                       fallthrough
      :                          @10786
148864: 82 89                    a2 = u64 [a1]
148866: c9 98 0a                 a3 = a1 - a2
148869: 82 1b 70                 a4 = u64 [sp + 0x70]
148872: aa ba 07                 jump @10788 if a3 == a4
      :                          @10787
148875: 28 f8 9c 00              jump @12868
      :                          @10788
148879: c9 79 0a                 a3 = a2 - a0
148882: 01                       fallthrough
      :                          @10789
148883: 82 8b                    a4 = u64 [a1]
148885: ab 9b eb                 jump @10786 if a4 != a2
      :                          @10790
148888: 7b 8a                    u64 [a1] = a3
148890: 33 0c                    a5 = 0
148892: 01                       fallthrough
      :                          @10791
148893: ab 9b e3                 jump @10786 if a4 != a2
      :                          @10792
148896: 28 e3 9c 00              jump @12868
      :                          @10793 [@dyn 1002]
148900: 3a 08 78 12 03           a1 = u64 [0x31278]
148905: 97 89 0d                 a2 = a1 << 0xd
148908: d3 98 08                 a1 = a1 ^ a2
148911: 98 89 07                 a2 = a1 >> 0x7
148914: d3 98 08                 a1 = a1 ^ a2
148917: 97 89 11                 a2 = a1 << 0x11
148920: d3 98 08                 a1 = a1 ^ a2
148923: 3a 09 60 11 03           a2 = u64 [0x31160]
148928: 3a 0a d8 11 03           a3 = u64 [0x311d8]
148933: 3e 08 78 12 03           u64 [0x31278] = a1
148938: ca 98 07                 a0 = a1 * a2
148941: d6 a7 08                 a1 = a0 mulhu a3
148944: 98 88 13                 a1 = a1 >> 0x13
148947: 96 88 a5 98 0f           a1 = a1 * 0xf98a5
148952: c9 87 07                 a0 = a0 - a1
148955: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
148959: ca 77 07                 a0 = a0 * a0
148962: 14 08 e1 19 ee 07 6a 10 00 00 a1 = 0x106a07ee19e1
148972: d6 87 08                 a1 = a0 mulhu a1
148975: 96 88 a5 98 0f           a1 = a1 * 0xf98a5
148980: c9 87 08                 a1 = a0 - a1
148983: 7b 18 20 01              u64 [sp + 0x120] = a1
148987: 95 17 e0 01              a0 = sp + 0x1e0
148991: 95 16 e0 01              s1 = sp + 0x1e0
148995: 33 00 d6 07              ra = 0x7d6
148999: 95 11 90                 sp = sp + 0xffffffffffffff90
149002: 7b 10 68                 u64 [sp + 0x68] = ra
149005: 7b 15 60                 u64 [sp + 0x60] = s0
149008: 7b 16 58                 u64 [sp + 0x58] = s1
149011: 3a 09 18 11 03           a2 = u64 [0x31118]
149016: 64 85                    s0 = a1
149018: 7b 17 20                 u64 [sp + 0x20] = a0
149021: d6 98 07                 a0 = a1 mulhu a2
149024: 98 77 09                 a0 = a0 >> 0x9
149027: 96 77 f1 03              a0 = a0 * 0x3f1
149031: c9 75 07                 a0 = s0 - a0
149034: 33 08 f1 03              a1 = 0x3f1
149038: 33 00 4a 04              ra = 0x44a
149042: 28 fc 56 fe              jump @2793
      :                          @10794 [@dyn 1003]
149046: 95 17 c8 01              a0 = sp + 0x1c8
149050: 7b 17 90 02              u64 [sp + 0x290] = a0
149054: 33 07 2c 0c              a0 = 0xc2c
149058: 7b 17 98 02              u64 [sp + 0x298] = a0
149062: 95 18 20 01              a1 = sp + 0x120
149066: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
149070: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
149074: 7b 16 b0 02              u64 [sp + 0x2b0] = s1
149078: 33 07 34 02              a0 = 0x234
149082: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
149086: 33 07 88 18 01           a0 = 0x11888
149091: 7b 17 38 02              u64 [sp + 0x238] = a0
149095: 49 21 40 02 03           u64 [sp + 576] = 0x3
149100: 49 21 58 02              u64 [sp + 600] = 0
149104: 95 18 90 02              a1 = sp + 0x290
149108: 7b 18 48 02              u64 [sp + 0x248] = a1
149112: 49 21 50 02 03           u64 [sp + 592] = 0x3
149117: 95 17 08 02              a0 = sp + 0x208
149121: 95 18 38 02              a1 = sp + 0x238
149125: 50 20 d8 07 75 09 fe     ra = 2008, jump @1503
      :                          @10795 [@dyn 1004]
149132: 82 16 10 02              s1 = u64 [sp + 0x210]
149136: 82 1b 18 02              a4 = u64 [sp + 0x218]
149140: 82 17 08 02              a0 = u64 [sp + 0x208]
149144: 7b 17 70                 u64 [sp + 0x70] = a0
149147: 33 07 02                 a0 = 0x2
149150: 33 08                    a1 = 0
149152: 33 09                    a2 = 0
149154: 64 6a                    a3 = s1
149156: 33 00 da 07              ra = 0x7da
149160: 0a 64                    ecalli 100 // 'log'
149162: 01                       fallthrough
      :                          @10796 [@dyn 1005]
149163: 82 1c 70                 a5 = u64 [sp + 0x70]
149166: 82 17 68                 a0 = u64 [sp + 0x68]
149169: c8 c7 07                 a0 = a0 + a5
149172: 53 37 00 00 ff 25        jump @10802 if a0 <u 4294901760
      :                          @10797
149178: 33 07 c0 22 03           a0 = 0x322c0
149183: 95 77 00 00 01           a0 = a0 + 0x10000
149188: 01                       fallthrough
      :                          @10798
149189: 82 78                    a1 = u64 [a0]
149191: c9 87 09                 a2 = a0 - a1
149194: ab 69 0f                 jump @10802 if a2 != s1
      :                          @10799
149197: c9 c8 09                 a2 = a1 - a5
149200: 01                       fallthrough
      :                          @10800
149201: 82 7a                    a3 = u64 [a0]
149203: ab 8a f2                 jump @10798 if a3 != a1
      :                          @10801
149206: 7b 79                    u64 [a0] = a2
149208: 01                       fallthrough
      :                          @10802
149209: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
149213: 52 08 07                 jump @10804 if a1 != 0
      :                          @10803
149216: 28 a3 9b 00              jump @12868
      :                          @10804
149220: 54 28 00 20 09           jump @10806 if a1 <=u 8192
      :                          @10805
149225: 28 9a 9b 00              jump @12868
      :                          @10806
149229: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
149233: 97 88 03                 a1 = a1 << 0x3
149236: 33 09 c0 22 03           a2 = 0x322c0
149241: 95 99 00 00 01           a2 = a2 + 0x10000
149246: 01                       fallthrough
      :                          @10807
149247: 82 9a                    a3 = u64 [a2]
149249: c9 a9 0b                 a4 = a2 - a3
149252: aa 7b 07                 jump @10809 if a4 == a0
      :                          @10808
149255: 28 7c 9b 00              jump @12868
      :                          @10809
149259: c9 8a 0b                 a4 = a3 - a1
149262: 01                       fallthrough
      :                          @10810
149263: 82 9c                    a5 = u64 [a2]
149265: ab ac ee                 jump @10807 if a5 != a3
      :                          @10811
149268: 7b 9b                    u64 [a2] = a4
149270: 33 06                    s1 = 0
149272: 01                       fallthrough
      :                          @10812
149273: ab ac e6                 jump @10807 if a5 != a3
      :                          @10813
149276: 28 67 9b 00              jump @12868
      :                          @10814 [@dyn 1006]
149280: 95 17 90 02              a0 = sp + 0x290
149284: 33 00 de 07              ra = 0x7de
149288: 95 11 b8                 sp = sp + 0xffffffffffffffb8
149291: 7b 10 40                 u64 [sp + 0x40] = ra
149294: 7b 15 38                 u64 [sp + 0x38] = s0
149297: 7b 16 30                 u64 [sp + 0x30] = s1
149300: 7b 17 10                 u64 [sp + 0x10] = a0
149303: 33 07 c0 22 03           a0 = 0x322c0
149308: 33 02 00 00 01           t0 = 0x10000
149313: c8 27 09                 a2 = a0 + t0
149316: 28 46 2d ff              jump @7512
      :                          @10815 [@dyn 1007]
149320: 82 17 90 02              a0 = u64 [sp + 0x290]
149324: 7b 17 60                 u64 [sp + 0x60] = a0
149327: 82 17 98 02              a0 = u64 [sp + 0x298]
149331: 7b 17 70                 u64 [sp + 0x70] = a0
149334: 82 16 a0 02              s1 = u64 [sp + 0x2a0]
149338: 82 17 a8 02              a0 = u64 [sp + 0x2a8]
149342: 7b 17 58                 u64 [sp + 0x58] = a0
149345: 82 17 b0 02              a0 = u64 [sp + 0x2b0]
149349: 7b 17 48                 u64 [sp + 0x48] = a0
149352: 95 17 20 01              a0 = sp + 0x120
149356: 33 00 e0 07              ra = 0x7e0
149360: 33 0a c0 22 03           a3 = 0x322c0
149365: 33 02 00 00 01           t0 = 0x10000
149370: c8 2a 0a                 a3 = a3 + t0
149373: 28 65 2c fe              jump @2159
      :                          @10816 [@dyn 1008]
149377: 64 69                    a2 = s1
149379: 82 17 30 01              a0 = u64 [sp + 0x130]
149383: e6 67 02                 t0 = minu(a0, s1)
149386: 52 02 07                 jump @10818 if t0 != 0
      :                          @10817
149389: 28 dc 9e 00              jump @12941
      :                          @10818
149393: 82 16 28 01              s1 = u64 [sp + 0x128]
149397: 33 0c                    a5 = 0
149399: 82 18 70                 a1 = u64 [sp + 0x70]
149402: 64 87                    a0 = a1
149404: 01                       fallthrough
      :                          @10819
149405: 7c 6a                    a3 = u8 [s1]
149407: 82 7b                    a4 = u64 [a0]
149409: ca ab 0a                 a3 = a4 * a3
149412: c8 ac 0c                 a5 = a5 + a3
149415: 95 77 08                 a0 = a0 + 0x8
149418: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
149421: 95 66 01                 s1 = s1 + 0x1
149424: 52 02 ed                 jump @10819 if t0 != 0
      :                          @10820
149427: 28 bc 9e 00              jump @12942
      :                          @10821 [@dyn 1009]
149431: 33 07 18                 a0 = 0x18
149434: 50 20 e4 07 f7 08 fe     ra = 2020, jump @1521
      :                          @10822 [@dyn 1010]
149441: 64 76                    s1 = a0
149443: 49 06 01                 u64 [s1 + 0] = 0x1
149446: 49 16 08 01              u64 [s1 + 8] = 0x1
149450: 49 16 10 01              u64 [s1 + 16] = 0x1
149454: 33 07 18                 a0 = 0x18
149457: 50 20 e6 07 e0 08 fe     ra = 2022, jump @1521
      :                          @10823 [@dyn 1011]
149464: 64 7b                    a4 = a0
149466: 49 07                    u64 [a0 + 0] = 0
149468: 49 1b 08 01              u64 [a4 + 8] = 0x1
149472: 49 1b 10 01              u64 [a4 + 16] = 0x1
149476: 3a 08 78 12 03           a1 = u64 [0x31278]
149481: 97 89 0d                 a2 = a1 << 0xd
149484: d3 98 08                 a1 = a1 ^ a2
149487: 98 89 07                 a2 = a1 >> 0x7
149490: d3 98 08                 a1 = a1 ^ a2
149493: 3a 09 60 11 03           a2 = u64 [0x31160]
149498: 97 8a 11                 a3 = a1 << 0x11
149501: d3 a8 08                 a1 = a1 ^ a3
149504: ca 98 09                 a2 = a1 * a2
149507: 3e 08 78 12 03           u64 [0x31278] = a1
149512: 14 07 89 88 88 88 88 88 88 88 a0 = 0x8888888888888889
149522: d6 79 07                 a0 = a2 mulhu a0
149525: 98 77 04                 a0 = a0 >> 0x4
149528: 96 77 1e                 a0 = a0 * 0x1e
149531: c9 79 09                 a2 = a2 - a0
149534: 7b 19 20 01              u64 [sp + 0x120] = a2
149538: 7b 16 70                 u64 [sp + 0x70] = s1
149541: 64 67                    a0 = s1
149543: 7b 1b 60                 u64 [sp + 0x60] = a4
149546: 64 b8                    a1 = a4
149548: 50 20 e8 07 83 32 ff     ra = 2024, jump @7587
      :                          @10824 [@dyn 1012]
149555: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
149559: 95 17 20 01              a0 = sp + 0x120
149563: 7b 17 38 02              u64 [sp + 0x238] = a0
149567: 33 07 2c 0c              a0 = 0xc2c
149571: 7b 17 40 02              u64 [sp + 0x240] = a0
149575: 95 17 e0 01              a0 = sp + 0x1e0
149579: 7b 17 48 02              u64 [sp + 0x248] = a0
149583: 33 07 98 0c              a0 = 0xc98
149587: 7b 17 50 02              u64 [sp + 0x250] = a0
149591: 33 07 08 19 01           a0 = 0x11908
149596: 7b 17 90 02              u64 [sp + 0x290] = a0
149600: 49 21 98 02 02           u64 [sp + 664] = 0x2
149605: 49 21 b0 02              u64 [sp + 688] = 0
149609: 95 18 38 02              a1 = sp + 0x238
149613: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
149617: 49 21 a8 02 02           u64 [sp + 680] = 0x2
149622: 95 17 08 02              a0 = sp + 0x208
149626: 95 18 90 02              a1 = sp + 0x290
149630: 50 20 ea 07 7c 07 fe     ra = 2026, jump @1503
      :                          @10825 [@dyn 1013]
149637: 82 16 10 02              s1 = u64 [sp + 0x210]
149641: 82 1b 18 02              a4 = u64 [sp + 0x218]
149645: 82 17 08 02              a0 = u64 [sp + 0x208]
149649: 7b 17 58                 u64 [sp + 0x58] = a0
149652: 33 07 02                 a0 = 0x2
149655: 33 08                    a1 = 0
149657: 33 09                    a2 = 0
149659: 64 6a                    a3 = s1
149661: 33 00 ec 07              ra = 0x7ec
149665: 0a 64                    ecalli 100 // 'log'
149667: 01                       fallthrough
      :                          @10826 [@dyn 1014]
149668: 82 1c 58                 a5 = u64 [sp + 0x58]
149671: 82 17 68                 a0 = u64 [sp + 0x68]
149674: c8 c7 07                 a0 = a0 + a5
149677: 53 37 00 00 ff 27        jump @10832 if a0 <u 4294901760
      :                          @10827
149683: 33 07 c0 22 03           a0 = 0x322c0
149688: 95 77 00 00 01           a0 = a0 + 0x10000
149693: 01                       fallthrough
      :                          @10828
149694: 82 78                    a1 = u64 [a0]
149696: c9 87 09                 a2 = a0 - a1
149699: ab 69 11                 jump @10832 if a2 != s1
      :                          @10829
149702: c9 c8 09                 a2 = a1 - a5
149705: 01                       fallthrough
      :                          @10830
149706: 82 7a                    a3 = u64 [a0]
149708: ab 8a f2                 jump @10828 if a3 != a1
      :                          @10831
149711: 7b 79                    u64 [a0] = a2
149713: 33 0b                    a4 = 0
149715: 01                       fallthrough
      :                          @10832
149716: 33 07 c0 22 03           a0 = 0x322c0
149721: 95 77 00 00 01           a0 = a0 + 0x10000
149726: 82 1c 60                 a5 = u64 [sp + 0x60]
149729: 01                       fallthrough
      :                          @10833
149730: 82 78                    a1 = u64 [a0]
149732: c9 87 09                 a2 = a0 - a1
149735: ab c9 11                 jump @10837 if a2 != a5
      :                          @10834
149738: 95 89 e8                 a2 = a1 + 0xffffffffffffffe8
149741: 01                       fallthrough
      :                          @10835
149742: 82 7a                    a3 = u64 [a0]
149744: ab 8a f2                 jump @10833 if a3 != a1
      :                          @10836
149747: 7b 79                    u64 [a0] = a2
149749: 33 0b                    a4 = 0
149751: 01                       fallthrough
      :                          @10837
149752: 33 07 c0 22 03           a0 = 0x322c0
149757: 95 77 00 00 01           a0 = a0 + 0x10000
149762: 82 1c 70                 a5 = u64 [sp + 0x70]
149765: 01                       fallthrough
      :                          @10838
149766: 82 78                    a1 = u64 [a0]
149768: c9 87 09                 a2 = a0 - a1
149771: aa c9 07                 jump @10840 if a2 == a5
      :                          @10839
149774: 28 75 99 00              jump @12868
      :                          @10840
149778: 95 89 e8                 a2 = a1 + 0xffffffffffffffe8
149781: 01                       fallthrough
      :                          @10841
149782: 82 7a                    a3 = u64 [a0]
149784: ab 8a ee                 jump @10838 if a3 != a1
      :                          @10842
149787: 7b 79                    u64 [a0] = a2
149789: 33 0b                    a4 = 0
149791: 01                       fallthrough
      :                          @10843
149792: ab 8a e6                 jump @10838 if a3 != a1
      :                          @10844
149795: 28 60 99 00              jump @12868
      :                          @10845 [@dyn 1015]
149799: 33 03 78 12 03           t1 = 0x31278
149804: 3a 08 78 12 03           a1 = u64 [0x31278]
149809: 97 89 0d                 a2 = a1 << 0xd
149812: d3 98 08                 a1 = a1 ^ a2
149815: 98 89 07                 a2 = a1 >> 0x7
149818: 3a 0b 60 11 03           a4 = u64 [0x31160]
149823: d3 98 08                 a1 = a1 ^ a2
149826: 97 89 11                 a2 = a1 << 0x11
149829: d3 98 08                 a1 = a1 ^ a2
149832: ca b8 09                 a2 = a1 * a4
149835: 3e 08 78 12 03           u64 [0x31278] = a1
149840: 14 0c cd cc cc cc cc cc cc cc a5 = 0xcccccccccccccccd
149850: d6 c9 08                 a1 = a2 mulhu a5
149853: 98 88 03                 a1 = a1 >> 0x3
149856: 33 02 0a                 t0 = 0xa
149859: 3a 06 78 12 03           s1 = u64 [0x31278]
149864: ca 28 08                 a1 = a1 * t0
149867: c9 89 08                 a1 = a2 - a1
149870: 97 69 0d                 a2 = s1 << 0xd
149873: d3 96 06                 s1 = s1 ^ a2
149876: 98 69 07                 a2 = s1 >> 0x7
149879: d3 96 06                 s1 = s1 ^ a2
149882: 97 69 11                 a2 = s1 << 0x11
149885: d3 69 09                 a2 = a2 ^ s1
149888: ca b9 06                 s1 = a2 * a4
149891: 3e 09 78 12 03           u64 [0x31278] = a2
149896: d6 c6 09                 a2 = s1 mulhu a5
149899: 98 99 03                 a2 = a2 >> 0x3
149902: 3a 07 78 12 03           a0 = u64 [0x31278]
149907: ca 29 09                 a2 = a2 * t0
149910: c9 96 09                 a2 = s1 - a2
149913: 97 7a 0d                 a3 = a0 << 0xd
149916: d3 a7 07                 a0 = a0 ^ a3
149919: 98 7a 07                 a3 = a0 >> 0x7
149922: d3 a7 07                 a0 = a0 ^ a3
149925: 97 7a 11                 a3 = a0 << 0x11
149928: d3 a7 07                 a0 = a0 ^ a3
149931: ca b7 0a                 a3 = a0 * a4
149934: 3e 07 78 12 03           u64 [0x31278] = a0
149939: d6 ca 07                 a0 = a3 mulhu a5
149942: 98 77 03                 a0 = a0 >> 0x3
149945: 3a 06 78 12 03           s1 = u64 [0x31278]
149950: ca 27 07                 a0 = a0 * t0
149953: c9 7a 0a                 a3 = a3 - a0
149956: 97 67 0d                 a0 = s1 << 0xd
149959: d3 76 06                 s1 = s1 ^ a0
149962: 98 67 07                 a0 = s1 >> 0x7
149965: d3 76 06                 s1 = s1 ^ a0
149968: 97 67 11                 a0 = s1 << 0x11
149971: d3 67 07                 a0 = a0 ^ s1
149974: ca b7 0b                 a4 = a0 * a4
149977: 3e 07 78 12 03           u64 [0x31278] = a0
149982: d6 cb 07                 a0 = a4 mulhu a5
149985: 98 77 04                 a0 = a0 >> 0x4
149988: 33 0c 14                 a5 = 0x14
149991: ca c7 07                 a0 = a0 * a5
149994: c9 7b 0b                 a4 = a4 - a0
149997: 95 17 38 02              a0 = sp + 0x238
150001: 95 16 38 02              s1 = sp + 0x238
150005: 33 00 f0 07              ra = 0x7f0
150009: 95 11 b8                 sp = sp + 0xffffffffffffffb8
150012: 7b 10 40                 u64 [sp + 0x40] = ra
150015: 7b 15 38                 u64 [sp + 0x38] = s0
150018: 7b 16 30                 u64 [sp + 0x30] = s1
150021: 64 b6                    s1 = a4
150023: 64 a5                    s0 = a3
150025: 7b 17 10                 u64 [sp + 0x10] = a0
150028: 95 17 18                 a0 = sp + 0x18
150031: 33 00 86 04              ra = 0x486
150035: 28 ca 41 fe              jump @2421
      :                          @10846 [@dyn 1016]
150039: 7b 16 e0 01              u64 [sp + 0x1e0] = s1
150043: 33 07 4e 02              a0 = 0x24e
150047: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
150051: 33 07 38 19 01           a0 = 0x11938
150056: 7b 17 90 02              u64 [sp + 0x290] = a0
150060: 49 21 98 02 01           u64 [sp + 664] = 0x1
150065: 49 21 b0 02              u64 [sp + 688] = 0
150069: 95 18 e0 01              a1 = sp + 0x1e0
150073: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
150077: 49 21 a8 02 01           u64 [sp + 680] = 0x1
150082: 95 17 08 02              a0 = sp + 0x208
150086: 95 18 90 02              a1 = sp + 0x290
150090: 50 20 f2 07 b0 05 fe     ra = 2034, jump @1503
      :                          @10847 [@dyn 1017]
150097: 82 16 10 02              s1 = u64 [sp + 0x210]
150101: 82 1b 18 02              a4 = u64 [sp + 0x218]
150105: 82 17 08 02              a0 = u64 [sp + 0x208]
150109: 7b 17 70                 u64 [sp + 0x70] = a0
150112: 33 07 02                 a0 = 0x2
150115: 33 08                    a1 = 0
150117: 33 09                    a2 = 0
150119: 64 6a                    a3 = s1
150121: 33 00 f4 07              ra = 0x7f4
150125: 0a 64                    ecalli 100 // 'log'
150127: 01                       fallthrough
      :                          @10848 [@dyn 1018]
150128: 82 1c 70                 a5 = u64 [sp + 0x70]
150131: 82 17 68                 a0 = u64 [sp + 0x68]
150134: c8 c7 07                 a0 = a0 + a5
150137: 55 37 00 00 ff 0a        jump @10850 if a0 >=u 4294901760
      :                          @10849
150143: 28 04 98 00              jump @12868
      :                          @10850
150147: 33 07 c0 22 03           a0 = 0x322c0
150152: 95 77 00 00 01           a0 = a0 + 0x10000
150157: 01                       fallthrough
      :                          @10851
150158: 82 78                    a1 = u64 [a0]
150160: c9 87 09                 a2 = a0 - a1
150163: aa 69 07                 jump @10853 if a2 == s1
      :                          @10852
150166: 28 ed 97 00              jump @12868
      :                          @10853
150170: c9 c8 09                 a2 = a1 - a5
150173: 01                       fallthrough
      :                          @10854
150174: 82 7a                    a3 = u64 [a0]
150176: ab 8a ee                 jump @10851 if a3 != a1
      :                          @10855
150179: 7b 79                    u64 [a0] = a2
150181: 33 0b                    a4 = 0
150183: 01                       fallthrough
      :                          @10856
150184: ab 8a e6                 jump @10851 if a3 != a1
      :                          @10857
150187: 28 d8 97 00              jump @12868
      :                          @10858 [@dyn 1019]
150191: 3a 07 60 11 03           a0 = u64 [0x31160]
150196: 7b 17 70                 u64 [sp + 0x70] = a0
150199: 49 21 90 02              u64 [sp + 656] = 0
150203: 49 21 98 02 08           u64 [sp + 664] = 0x8
150208: 49 21 a0 02              u64 [sp + 672] = 0
150212: 95 17 e0 01              a0 = sp + 0x1e0
150216: 95 18 90 02              a1 = sp + 0x290
150220: 33 00 f8 07              ra = 0x7f8
150224: 95 11 b8                 sp = sp + 0xffffffffffffffb8
150227: 7b 10 40                 u64 [sp + 0x40] = ra
150230: 7b 15 38                 u64 [sp + 0x38] = s0
150233: 7b 16 30                 u64 [sp + 0x30] = s1
150236: 7b 18 08                 u64 [sp + 0x8] = a1
150239: 33 03 c0 22 03           t1 = 0x322c0
150244: 33 02 00 00 01           t0 = 0x10000
150249: c8 23 09                 a2 = t1 + t0
150252: 28 5d 0c fe              jump @1678
      :                          @10859 [@dyn 1020]
150256: 33 0c                    a5 = 0
150258: 33 0b                    a4 = 0
150260: 33 02 78 12 03           t0 = 0x31278
150265: 14 03 cd cc cc cc cc cc cc cc t1 = 0xcccccccccccccccd
150275: 33 04 0a                 t2 = 0xa
150278: 7b 13 48                 u64 [sp + 0x48] = t1
150281: 28 3b                    jump @10862
      :                          @10860
150283: 82 17 70                 a0 = u64 [sp + 0x70]
150286: ca 79 07                 a0 = a2 * a0
150289: d6 37 09                 a2 = a0 mulhu t1
150292: 98 99 03                 a2 = a2 >> 0x3
150295: 82 6a 08                 a3 = u64 [s1 + 0x8]
150298: ca 49 09                 a2 = a2 * t2
150301: c9 97 07                 a0 = a0 - a2
150304: 97 89 04                 a2 = a1 << 0x4
150307: c8 a9 09                 a2 = a2 + a3
150310: 95 77 01                 a0 = a0 + 0x1
150313: 7b 97 08                 u64 [a2 + 0x8] = a0
150316: 49 09 05                 u64 [a2 + 0] = 0x5
150319: 95 88 01                 a1 = a1 + 0x1
150322: 7b 68 10                 u64 [s1 + 0x10] = a1
150325: 95 cc 18                 a5 = a5 + 0x18
150328: 95 bb 01                 a4 = a4 + 0x1
150331: 52 2c 90 00 09           jump @10862 if a5 != 144
      :                          @10861
150336: 28 32 8f 00              jump @12714
      :                          @10862
150340: 7b 1b 60                 u64 [sp + 0x60] = a4
150343: 7b 1c 58                 u64 [sp + 0x58] = a5
150346: 51 0c 8c 00              jump @10869 if a5 == 0
      :                          @10863
150350: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
150354: ac 8b 07                 jump @10865 if a4 <u a1
      :                          @10864
150357: 28 38 a9 00              jump @13230
      :                          @10865
150361: 82 16 e8 01              s1 = u64 [sp + 0x1e8]
150365: 3a 07 78 12 03           a0 = u64 [0x31278]
150370: c8 c6 06                 s1 = s1 + a5
150373: 97 78 0d                 a1 = a0 << 0xd
150376: d3 87 07                 a0 = a0 ^ a1
150379: 98 78 07                 a1 = a0 >> 0x7
150382: d3 87 07                 a0 = a0 ^ a1
150385: 97 78 11                 a1 = a0 << 0x11
150388: d3 78 09                 a2 = a1 ^ a0
150391: 3e 09 78 12 03           u64 [0x31278] = a2
150396: 82 68 10                 a1 = u64 [s1 + 0x10]
150399: 82 67                    a0 = u64 [s1]
150401: ab 78 27                 jump @10868 if a1 != a0
      :                          @10866
150404: 64 67                    a0 = s1
150406: 7b 19 40                 u64 [sp + 0x40] = a2
150409: 50 20 fa 07 b9 08 fe     ra = 2042, jump @1605
      :                          @10867 [@dyn 1021]
150416: 82 19 40                 a2 = u64 [sp + 0x40]
150419: 33 04 0a                 t2 = 0xa
150422: 82 13 48                 t1 = u64 [sp + 0x48]
150425: 33 02 78 12 03           t0 = 0x31278
150430: 82 1c 58                 a5 = u64 [sp + 0x58]
150433: 82 1b 60                 a4 = u64 [sp + 0x60]
150436: 82 68 10                 a1 = u64 [s1 + 0x10]
150439: 01                       fallthrough
      :                          @10868
150440: 82 17 70                 a0 = u64 [sp + 0x70]
150443: ca 79 07                 a0 = a2 * a0
150446: d6 37 09                 a2 = a0 mulhu t1
150449: 98 99 03                 a2 = a2 >> 0x3
150452: ca 49 09                 a2 = a2 * t2
150455: 82 6a 08                 a3 = u64 [s1 + 0x8]
150458: c9 97 07                 a0 = a0 - a2
150461: 95 77 01                 a0 = a0 + 0x1
150464: 97 89 04                 a2 = a1 << 0x4
150467: c8 a9 09                 a2 = a2 + a3
150470: 49 09                    u64 [a2 + 0] = 0
150472: 7b 97 08                 u64 [a2 + 0x8] = a0
150475: 95 88 01                 a1 = a1 + 0x1
150478: 7b 68 10                 u64 [s1 + 0x10] = a1
150481: 51 1c 18 8e 00           jump @10875 if a5 == 24
      :                          @10869
150486: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
150490: ac 8b 07                 jump @10871 if a4 <u a1
      :                          @10870
150493: 28 b0 a8 00              jump @13230
      :                          @10871
150497: 82 16 e8 01              s1 = u64 [sp + 0x1e8]
150501: 3a 07 78 12 03           a0 = u64 [0x31278]
150506: c8 c6 06                 s1 = s1 + a5
150509: 97 78 0d                 a1 = a0 << 0xd
150512: d3 87 07                 a0 = a0 ^ a1
150515: 98 78 07                 a1 = a0 >> 0x7
150518: d3 87 07                 a0 = a0 ^ a1
150521: 97 78 11                 a1 = a0 << 0x11
150524: d3 78 09                 a2 = a1 ^ a0
150527: 3e 09 78 12 03           u64 [0x31278] = a2
150532: 82 68 10                 a1 = u64 [s1 + 0x10]
150535: 82 67                    a0 = u64 [s1]
150537: ab 78 27                 jump @10874 if a1 != a0
      :                          @10872
150540: 64 67                    a0 = s1
150542: 7b 19 40                 u64 [sp + 0x40] = a2
150545: 50 20 fc 07 31 08 fe     ra = 2044, jump @1605
      :                          @10873 [@dyn 1022]
150552: 82 19 40                 a2 = u64 [sp + 0x40]
150555: 33 04 0a                 t2 = 0xa
150558: 82 13 48                 t1 = u64 [sp + 0x48]
150561: 33 02 78 12 03           t0 = 0x31278
150566: 82 1c 58                 a5 = u64 [sp + 0x58]
150569: 82 1b 60                 a4 = u64 [sp + 0x60]
150572: 82 68 10                 a1 = u64 [s1 + 0x10]
150575: 01                       fallthrough
      :                          @10874
150576: 82 17 70                 a0 = u64 [sp + 0x70]
150579: ca 79 07                 a0 = a2 * a0
150582: d6 37 09                 a2 = a0 mulhu t1
150585: 98 99 03                 a2 = a2 >> 0x3
150588: ca 49 09                 a2 = a2 * t2
150591: 82 6a 08                 a3 = u64 [s1 + 0x8]
150594: c9 97 07                 a0 = a0 - a2
150597: 95 77 01                 a0 = a0 + 0x1
150600: 97 89 04                 a2 = a1 << 0x4
150603: c8 a9 09                 a2 = a2 + a3
150606: 49 09 01                 u64 [a2 + 0] = 0x1
150609: 7b 97 08                 u64 [a2 + 0x8] = a0
150612: 95 88 01                 a1 = a1 + 0x1
150615: 7b 68 10                 u64 [s1 + 0x10] = a1
150618: 51 1c 30 8e 00           jump @10881 if a5 == 48
      :                          @10875
150623: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
150627: ac 8b 07                 jump @10877 if a4 <u a1
      :                          @10876
150630: 28 27 a8 00              jump @13230
      :                          @10877
150634: 82 16 e8 01              s1 = u64 [sp + 0x1e8]
150638: 3a 07 78 12 03           a0 = u64 [0x31278]
150643: c8 c6 06                 s1 = s1 + a5
150646: 97 78 0d                 a1 = a0 << 0xd
150649: d3 87 07                 a0 = a0 ^ a1
150652: 98 78 07                 a1 = a0 >> 0x7
150655: d3 87 07                 a0 = a0 ^ a1
150658: 97 78 11                 a1 = a0 << 0x11
150661: d3 78 09                 a2 = a1 ^ a0
150664: 3e 09 78 12 03           u64 [0x31278] = a2
150669: 82 68 10                 a1 = u64 [s1 + 0x10]
150672: 82 67                    a0 = u64 [s1]
150674: ab 78 27                 jump @10880 if a1 != a0
      :                          @10878
150677: 64 67                    a0 = s1
150679: 7b 19 40                 u64 [sp + 0x40] = a2
150682: 50 20 fe 07 a8 07 fe     ra = 2046, jump @1605
      :                          @10879 [@dyn 1023]
150689: 82 19 40                 a2 = u64 [sp + 0x40]
150692: 33 04 0a                 t2 = 0xa
150695: 82 13 48                 t1 = u64 [sp + 0x48]
150698: 33 02 78 12 03           t0 = 0x31278
150703: 82 1c 58                 a5 = u64 [sp + 0x58]
150706: 82 1b 60                 a4 = u64 [sp + 0x60]
150709: 82 68 10                 a1 = u64 [s1 + 0x10]
150712: 01                       fallthrough
      :                          @10880
150713: 82 17 70                 a0 = u64 [sp + 0x70]
150716: ca 79 07                 a0 = a2 * a0
150719: d6 37 09                 a2 = a0 mulhu t1
150722: 98 99 03                 a2 = a2 >> 0x3
150725: ca 49 09                 a2 = a2 * t2
150728: 82 6a 08                 a3 = u64 [s1 + 0x8]
150731: c9 97 07                 a0 = a0 - a2
150734: 95 77 01                 a0 = a0 + 0x1
150737: 97 89 04                 a2 = a1 << 0x4
150740: c8 a9 09                 a2 = a2 + a3
150743: 49 09 02                 u64 [a2 + 0] = 0x2
150746: 7b 97 08                 u64 [a2 + 0x8] = a0
150749: 95 88 01                 a1 = a1 + 0x1
150752: 7b 68 10                 u64 [s1 + 0x10] = a1
150755: 51 1c 48 8e 00           jump @10887 if a5 == 72
      :                          @10881
150760: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
150764: ac 8b 07                 jump @10883 if a4 <u a1
      :                          @10882
150767: 28 9e a7 00              jump @13230
      :                          @10883
150771: 82 16 e8 01              s1 = u64 [sp + 0x1e8]
150775: 3a 07 78 12 03           a0 = u64 [0x31278]
150780: c8 c6 06                 s1 = s1 + a5
150783: 97 78 0d                 a1 = a0 << 0xd
150786: d3 87 07                 a0 = a0 ^ a1
150789: 98 78 07                 a1 = a0 >> 0x7
150792: d3 87 07                 a0 = a0 ^ a1
150795: 97 78 11                 a1 = a0 << 0x11
150798: d3 78 09                 a2 = a1 ^ a0
150801: 3e 09 78 12 03           u64 [0x31278] = a2
150806: 82 68 10                 a1 = u64 [s1 + 0x10]
150809: 82 67                    a0 = u64 [s1]
150811: ab 78 27                 jump @10886 if a1 != a0
      :                          @10884
150814: 64 67                    a0 = s1
150816: 7b 19 40                 u64 [sp + 0x40] = a2
150819: 50 20 00 08 1f 07 fe     ra = 2048, jump @1605
      :                          @10885 [@dyn 1024]
150826: 82 19 40                 a2 = u64 [sp + 0x40]
150829: 33 04 0a                 t2 = 0xa
150832: 82 13 48                 t1 = u64 [sp + 0x48]
150835: 33 02 78 12 03           t0 = 0x31278
150840: 82 1c 58                 a5 = u64 [sp + 0x58]
150843: 82 1b 60                 a4 = u64 [sp + 0x60]
150846: 82 68 10                 a1 = u64 [s1 + 0x10]
150849: 01                       fallthrough
      :                          @10886
150850: 82 17 70                 a0 = u64 [sp + 0x70]
150853: ca 79 07                 a0 = a2 * a0
150856: d6 37 09                 a2 = a0 mulhu t1
150859: 98 99 03                 a2 = a2 >> 0x3
150862: ca 49 09                 a2 = a2 * t2
150865: 82 6a 08                 a3 = u64 [s1 + 0x8]
150868: c9 97 07                 a0 = a0 - a2
150871: 95 77 01                 a0 = a0 + 0x1
150874: 97 89 04                 a2 = a1 << 0x4
150877: c8 a9 09                 a2 = a2 + a3
150880: 49 09 03                 u64 [a2 + 0] = 0x3
150883: 7b 97 08                 u64 [a2 + 0x8] = a0
150886: 95 88 01                 a1 = a1 + 0x1
150889: 7b 68 10                 u64 [s1 + 0x10] = a1
150892: 51 1c 60 91 00           jump @10894 if a5 == 96
      :                          @10887
150897: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
150901: ac 8b 07                 jump @10889 if a4 <u a1
      :                          @10888
150904: 28 15 a7 00              jump @13230
      :                          @10889
150908: 82 16 e8 01              s1 = u64 [sp + 0x1e8]
150912: 3a 07 78 12 03           a0 = u64 [0x31278]
150917: c8 c6 06                 s1 = s1 + a5
150920: 97 78 0d                 a1 = a0 << 0xd
150923: d3 87 07                 a0 = a0 ^ a1
150926: 98 78 07                 a1 = a0 >> 0x7
150929: d3 87 07                 a0 = a0 ^ a1
150932: 97 78 11                 a1 = a0 << 0x11
150935: d3 78 09                 a2 = a1 ^ a0
150938: 3e 09 78 12 03           u64 [0x31278] = a2
150943: 82 68 10                 a1 = u64 [s1 + 0x10]
150946: 82 67                    a0 = u64 [s1]
150948: ab 78 27                 jump @10892 if a1 != a0
      :                          @10890
150951: 64 67                    a0 = s1
150953: 7b 19 40                 u64 [sp + 0x40] = a2
150956: 50 20 02 08 96 06 fe     ra = 2050, jump @1605
      :                          @10891 [@dyn 1025]
150963: 82 19 40                 a2 = u64 [sp + 0x40]
150966: 33 04 0a                 t2 = 0xa
150969: 82 13 48                 t1 = u64 [sp + 0x48]
150972: 33 02 78 12 03           t0 = 0x31278
150977: 82 1c 58                 a5 = u64 [sp + 0x58]
150980: 82 1b 60                 a4 = u64 [sp + 0x60]
150983: 82 68 10                 a1 = u64 [s1 + 0x10]
150986: 01                       fallthrough
      :                          @10892
150987: 82 17 70                 a0 = u64 [sp + 0x70]
150990: ca 79 07                 a0 = a2 * a0
150993: d6 37 09                 a2 = a0 mulhu t1
150996: 98 99 03                 a2 = a2 >> 0x3
150999: ca 49 09                 a2 = a2 * t2
151002: 82 6a 08                 a3 = u64 [s1 + 0x8]
151005: c9 97 07                 a0 = a0 - a2
151008: 95 77 01                 a0 = a0 + 0x1
151011: 97 89 04                 a2 = a1 << 0x4
151014: c8 a9 09                 a2 = a2 + a3
151017: 49 09 04                 u64 [a2 + 0] = 0x4
151020: 7b 97 08                 u64 [a2 + 0x8] = a0
151023: 95 88 01                 a1 = a1 + 0x1
151026: 7b 68 10                 u64 [s1 + 0x10] = a1
151029: 52 1c 78 08              jump @10894 if a5 != 120
      :                          @10893
151033: 28 79 8c 00              jump @12714
      :                          @10894
151037: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
151041: ac 8b 07                 jump @10896 if a4 <u a1
      :                          @10895
151044: 28 89 a6 00              jump @13230
      :                          @10896
151048: 82 16 e8 01              s1 = u64 [sp + 0x1e8]
151052: 3a 07 78 12 03           a0 = u64 [0x31278]
151057: c8 c6 06                 s1 = s1 + a5
151060: 97 78 0d                 a1 = a0 << 0xd
151063: d3 87 07                 a0 = a0 ^ a1
151066: 98 78 07                 a1 = a0 >> 0x7
151069: d3 87 07                 a0 = a0 ^ a1
151072: 97 78 11                 a1 = a0 << 0x11
151075: d3 78 09                 a2 = a1 ^ a0
151078: 3e 09 78 12 03           u64 [0x31278] = a2
151083: 82 68 10                 a1 = u64 [s1 + 0x10]
151086: 82 67                    a0 = u64 [s1]
151088: ab 78 db fc              jump @10860 if a1 != a0
      :                          @10897
151092: 64 67                    a0 = s1
151094: 7b 19 40                 u64 [sp + 0x40] = a2
151097: 50 20 04 08 09 06 fe     ra = 2052, jump @1605
      :                          @10898 [@dyn 1026]
151104: 82 19 40                 a2 = u64 [sp + 0x40]
151107: 33 04 0a                 t2 = 0xa
151110: 82 13 48                 t1 = u64 [sp + 0x48]
151113: 33 02 78 12 03           t0 = 0x31278
151118: 82 1c 58                 a5 = u64 [sp + 0x58]
151121: 82 1b 60                 a4 = u64 [sp + 0x60]
151124: 82 68 10                 a1 = u64 [s1 + 0x10]
151127: 28 b4 fc                 jump @10860
      :                          @10899 [@dyn 1027]
151130: 3a 08 78 12 03           a1 = u64 [0x31278]
151135: 97 89 0d                 a2 = a1 << 0xd
151138: d3 98 08                 a1 = a1 ^ a2
151141: 98 89 07                 a2 = a1 >> 0x7
151144: d3 98 08                 a1 = a1 ^ a2
151147: 97 89 11                 a2 = a1 << 0x11
151150: d3 98 08                 a1 = a1 ^ a2
151153: 3a 09 60 11 03           a2 = u64 [0x31160]
151158: 3a 0a 68 11 03           a3 = u64 [0x31168]
151163: 3e 08 78 12 03           u64 [0x31278] = a1
151168: ca 98 07                 a0 = a1 * a2
151171: 98 78 02                 a1 = a0 >> 0x2
151174: d6 a8 08                 a1 = a1 mulhu a3
151177: 98 88 04                 a1 = a1 >> 0x4
151180: 96 88 f4 01              a1 = a1 * 0x1f4
151184: c9 87 07                 a0 = a0 - a1
151187: 86 77 01                 a0 = a0 | 0x1
151190: 95 77 02                 a0 = a0 + 0x2
151193: 50 20 08 08 95 3a ff     ra = 2056, jump @7904
      :                          @10900 [@dyn 1028]
151200: 52 07 07                 jump @10902 if a0 != 0
      :                          @10901
151203: 28 52 99 00              jump @12974
      :                          @10902
151207: 7b 18 e0 01              u64 [sp + 0x1e0] = a1
151211: 95 17 e0 01              a0 = sp + 0x1e0
151215: 7b 17 08 02              u64 [sp + 0x208] = a0
151219: 33 07 2c 0c              a0 = 0xc2c
151223: 7b 17 10 02              u64 [sp + 0x210] = a0
151227: 33 07 a0 19 01           a0 = 0x119a0
151232: 7b 17 90 02              u64 [sp + 0x290] = a0
151236: 49 21 98 02 01           u64 [sp + 664] = 0x1
151241: 49 21 b0 02              u64 [sp + 688] = 0
151245: 95 18 08 02              a1 = sp + 0x208
151249: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
151253: 49 21 a8 02 01           u64 [sp + 680] = 0x1
151258: 95 17 38 02              a0 = sp + 0x238
151262: 95 18 90 02              a1 = sp + 0x290
151266: 50 20 0a 08 18 01 fe     ra = 2058, jump @1503
      :                          @10903 [@dyn 1029]
151273: 82 16 40 02              s1 = u64 [sp + 0x240]
151277: 82 1b 48 02              a4 = u64 [sp + 0x248]
151281: 82 17 38 02              a0 = u64 [sp + 0x238]
151285: 7b 17 70                 u64 [sp + 0x70] = a0
151288: 33 07 02                 a0 = 0x2
151291: 33 08                    a1 = 0
151293: 33 09                    a2 = 0
151295: 64 6a                    a3 = s1
151297: 33 00 0c 08              ra = 0x80c
151301: 0a 64                    ecalli 100 // 'log'
151303: 01                       fallthrough
      :                          @10904 [@dyn 1030]
151304: 82 1c 70                 a5 = u64 [sp + 0x70]
151307: 82 17 68                 a0 = u64 [sp + 0x68]
151310: c8 c7 07                 a0 = a0 + a5
151313: 55 37 00 00 ff 0a        jump @10906 if a0 >=u 4294901760
      :                          @10905
151319: 28 6c 93 00              jump @12868
      :                          @10906
151323: 33 07 c0 22 03           a0 = 0x322c0
151328: 95 77 00 00 01           a0 = a0 + 0x10000
151333: 01                       fallthrough
      :                          @10907
151334: 82 78                    a1 = u64 [a0]
151336: c9 87 09                 a2 = a0 - a1
151339: aa 69 07                 jump @10909 if a2 == s1
      :                          @10908
151342: 28 55 93 00              jump @12868
      :                          @10909
151346: c9 c8 09                 a2 = a1 - a5
151349: 01                       fallthrough
      :                          @10910
151350: 82 7a                    a3 = u64 [a0]
151352: ab 8a ee                 jump @10907 if a3 != a1
      :                          @10911
151355: 7b 79                    u64 [a0] = a2
151357: 33 0b                    a4 = 0
151359: 01                       fallthrough
      :                          @10912
151360: ab 8a e6                 jump @10907 if a3 != a1
      :                          @10913
151363: 28 40 93 00              jump @12868
      :                          @10914 [@dyn 1031]
151367: 95 17 90 02              a0 = sp + 0x290
151371: 95 16 90 02              s1 = sp + 0x290
151375: 33 00 10 08              ra = 0x810
151379: 95 11 b8                 sp = sp + 0xffffffffffffffb8
151382: 7b 10 40                 u64 [sp + 0x40] = ra
151385: 7b 15 38                 u64 [sp + 0x38] = s0
151388: 7b 16 30                 u64 [sp + 0x30] = s1
151391: 64 70                    ra = a0
151393: 3a 08 78 12 03           a1 = u64 [0x31278]
151398: 3a 03 38 11 03           t1 = u64 [0x31138]
151403: 97 89 0d                 a2 = a1 << 0xd
151406: d3 98 08                 a1 = a1 ^ a2
151409: 98 89 07                 a2 = a1 >> 0x7
151412: d3 98 08                 a1 = a1 ^ a2
151415: 97 89 11                 a2 = a1 << 0x11
151418: d3 98 08                 a1 = a1 ^ a2
151421: 3a 09 40 11 03           a2 = u64 [0x31140]
151426: 3e 08 78 12 03           u64 [0x31278] = a1
151431: ca 38 07                 a0 = a1 * t1
151434: 98 78 03                 a1 = a0 >> 0x3
151437: d6 98 08                 a1 = a1 mulhu a2
151440: 98 88 04                 a1 = a1 >> 0x4
151443: 96 88 e8 03              a1 = a1 * 0x3e8
151447: c9 87 07                 a0 = a0 - a1
151450: 95 79 64                 a2 = a0 + 0x64
151453: 33 07 02                 a0 = 0x2
151456: 33 0a 09                 a3 = 0x9
151459: 28 64 3b ff              jump @7938
      :                          @10915 [@dyn 1032]
151463: 82 17 90 02              a0 = u64 [sp + 0x290]
151467: 82 18 98 02              a1 = u64 [sp + 0x298]
151471: 82 19 a0 02              a2 = u64 [sp + 0x2a0]
151475: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
151479: 7b 18 20 01              u64 [sp + 0x120] = a1
151483: 7b 19 e0 01              u64 [sp + 0x1e0] = a2
151487: 95 17 c8 01              a0 = sp + 0x1c8
151491: 7b 17 90 02              u64 [sp + 0x290] = a0
151495: 33 07 2c 0c              a0 = 0xc2c
151499: 7b 17 98 02              u64 [sp + 0x298] = a0
151503: 95 18 20 01              a1 = sp + 0x120
151507: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
151511: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
151515: 95 18 e0 01              a1 = sp + 0x1e0
151519: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
151523: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
151527: 33 07 c0 19 01           a0 = 0x119c0
151532: 7b 17 38 02              u64 [sp + 0x238] = a0
151536: 49 21 40 02 03           u64 [sp + 576] = 0x3
151541: 49 21 58 02              u64 [sp + 600] = 0
151545: 7b 16 48 02              u64 [sp + 0x248] = s1
151549: 49 21 50 02 03           u64 [sp + 592] = 0x3
151554: 95 17 08 02              a0 = sp + 0x208
151558: 95 18 38 02              a1 = sp + 0x238
151562: 50 20 12 08 f0 ff fd     ra = 2066, jump @1503
      :                          @10916 [@dyn 1033]
151569: 82 16 10 02              s1 = u64 [sp + 0x210]
151573: 82 1b 18 02              a4 = u64 [sp + 0x218]
151577: 82 17 08 02              a0 = u64 [sp + 0x208]
151581: 7b 17 70                 u64 [sp + 0x70] = a0
151584: 33 07 02                 a0 = 0x2
151587: 33 08                    a1 = 0
151589: 33 09                    a2 = 0
151591: 64 6a                    a3 = s1
151593: 33 00 14 08              ra = 0x814
151597: 0a 64                    ecalli 100 // 'log'
151599: 01                       fallthrough
      :                          @10917 [@dyn 1034]
151600: 82 1c 70                 a5 = u64 [sp + 0x70]
151603: 82 17 68                 a0 = u64 [sp + 0x68]
151606: c8 c7 07                 a0 = a0 + a5
151609: 55 37 00 00 ff 0a        jump @10919 if a0 >=u 4294901760
      :                          @10918
151615: 28 44 92 00              jump @12868
      :                          @10919
151619: 33 07 c0 22 03           a0 = 0x322c0
151624: 95 77 00 00 01           a0 = a0 + 0x10000
151629: 01                       fallthrough
      :                          @10920
151630: 82 78                    a1 = u64 [a0]
151632: c9 87 09                 a2 = a0 - a1
151635: aa 69 07                 jump @10922 if a2 == s1
      :                          @10921
151638: 28 2d 92 00              jump @12868
      :                          @10922
151642: c9 c8 09                 a2 = a1 - a5
151645: 01                       fallthrough
      :                          @10923
151646: 82 7a                    a3 = u64 [a0]
151648: ab 8a ee                 jump @10920 if a3 != a1
      :                          @10924
151651: 7b 79                    u64 [a0] = a2
151653: 33 0b                    a4 = 0
151655: 01                       fallthrough
      :                          @10925
151656: ab 8a e6                 jump @10920 if a3 != a1
      :                          @10926
151659: 28 18 92 00              jump @12868
      :                          @10927 [@dyn 1035]
151663: 95 17 90 02              a0 = sp + 0x290
151667: 95 16 90 02              s1 = sp + 0x290
151671: 33 00 18 08              ra = 0x818
151675: 95 11 d8                 sp = sp + 0xffffffffffffffd8
151678: 7b 10 20                 u64 [sp + 0x20] = ra
151681: 7b 15 18                 u64 [sp + 0x18] = s0
151684: 7b 16 10                 u64 [sp + 0x10] = s1
151687: 3a 08 78 12 03           a1 = u64 [0x31278]
151692: 3a 02 48 11 03           t0 = u64 [0x31148]
151697: 97 89 0d                 a2 = a1 << 0xd
151700: d3 98 08                 a1 = a1 ^ a2
151703: 98 89 07                 a2 = a1 >> 0x7
151706: d3 98 08                 a1 = a1 ^ a2
151709: 97 89 11                 a2 = a1 << 0x11
151712: d3 98 08                 a1 = a1 ^ a2
151715: 3a 09 50 11 03           a2 = u64 [0x31150]
151720: 3e 08 78 12 03           u64 [0x31278] = a1
151725: ca 28 0a                 a3 = a1 * t0
151728: 98 a8 03                 a1 = a3 >> 0x3
151731: d6 98 08                 a1 = a1 mulhu a2
151734: 98 88 04                 a1 = a1 >> 0x4
151737: 96 88 e8 03              a1 = a1 * 0x3e8
151741: c9 8a 0a                 a3 = a3 - a1
151744: 95 ac 64                 a5 = a3 + 0x64
151747: 33 08 02                 a1 = 0x2
151750: 33 09 09                 a2 = 0x9
151753: 33 06 02                 s1 = 0x2
151756: 28 5a 3b ff              jump @7968
      :                          @10928 [@dyn 1036]
151760: 82 17 90 02              a0 = u64 [sp + 0x290]
151764: 82 18 98 02              a1 = u64 [sp + 0x298]
151768: 82 19 a0 02              a2 = u64 [sp + 0x2a0]
151772: 82 1a a8 02              a3 = u64 [sp + 0x2a8]
151776: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
151780: 7b 18 c8 01              u64 [sp + 0x1c8] = a1
151784: 7b 19 20 01              u64 [sp + 0x120] = a2
151788: 7b 1a e0 01              u64 [sp + 0x1e0] = a3
151792: 95 17 b0 01              a0 = sp + 0x1b0
151796: 7b 17 90 02              u64 [sp + 0x290] = a0
151800: 33 07 2c 0c              a0 = 0xc2c
151804: 7b 17 98 02              u64 [sp + 0x298] = a0
151808: 95 18 c8 01              a1 = sp + 0x1c8
151812: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
151816: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
151820: 95 18 20 01              a1 = sp + 0x120
151824: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
151828: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
151832: 95 18 e0 01              a1 = sp + 0x1e0
151836: 7b 18 c0 02              u64 [sp + 0x2c0] = a1
151840: 7b 17 c8 02              u64 [sp + 0x2c8] = a0
151844: 33 07 08 1a 01           a0 = 0x11a08
151849: 7b 17 38 02              u64 [sp + 0x238] = a0
151853: 49 21 40 02 04           u64 [sp + 576] = 0x4
151858: 49 21 58 02              u64 [sp + 600] = 0
151862: 7b 16 48 02              u64 [sp + 0x248] = s1
151866: 49 21 50 02 04           u64 [sp + 592] = 0x4
151871: 95 17 08 02              a0 = sp + 0x208
151875: 95 18 38 02              a1 = sp + 0x238
151879: 50 20 1a 08 b3 fe fd     ra = 2074, jump @1503
      :                          @10929 [@dyn 1037]
151886: 82 16 10 02              s1 = u64 [sp + 0x210]
151890: 82 1b 18 02              a4 = u64 [sp + 0x218]
151894: 82 17 08 02              a0 = u64 [sp + 0x208]
151898: 7b 17 70                 u64 [sp + 0x70] = a0
151901: 33 07 02                 a0 = 0x2
151904: 33 08                    a1 = 0
151906: 33 09                    a2 = 0
151908: 64 6a                    a3 = s1
151910: 33 00 1c 08              ra = 0x81c
151914: 0a 64                    ecalli 100 // 'log'
151916: 01                       fallthrough
      :                          @10930 [@dyn 1038]
151917: 82 1c 70                 a5 = u64 [sp + 0x70]
151920: 82 17 68                 a0 = u64 [sp + 0x68]
151923: c8 c7 07                 a0 = a0 + a5
151926: 55 37 00 00 ff 0a        jump @10932 if a0 >=u 4294901760
      :                          @10931
151932: 28 07 91 00              jump @12868
      :                          @10932
151936: 33 07 c0 22 03           a0 = 0x322c0
151941: 95 77 00 00 01           a0 = a0 + 0x10000
151946: 01                       fallthrough
      :                          @10933
151947: 82 78                    a1 = u64 [a0]
151949: c9 87 09                 a2 = a0 - a1
151952: aa 69 07                 jump @10935 if a2 == s1
      :                          @10934
151955: 28 f0 90 00              jump @12868
      :                          @10935
151959: c9 c8 09                 a2 = a1 - a5
151962: 01                       fallthrough
      :                          @10936
151963: 82 7a                    a3 = u64 [a0]
151965: ab 8a ee                 jump @10933 if a3 != a1
      :                          @10937
151968: 7b 79                    u64 [a0] = a2
151970: 33 0b                    a4 = 0
151972: 01                       fallthrough
      :                          @10938
151973: ab 8a e6                 jump @10933 if a3 != a1
      :                          @10939
151976: 28 db 90 00              jump @12868
      :                          @10940 [@dyn 1039]
151980: 3a 07 60 11 03           a0 = u64 [0x31160]
151985: 7b 17 60                 u64 [sp + 0x60] = a0
151988: 33 07 f4 01              a0 = 0x1f4
151992: 33 00 20 08              ra = 0x820
151996: 33 09 02                 a2 = 0x2
151999: 33 0a 09                 a3 = 0x9
152002: 28 63 3b fe              jump @2453
      :                          @10941 [@dyn 1040]
152006: 64 76                    s1 = a0
152008: 33 07 64                 a0 = 0x64
152011: 33 00 22 08              ra = 0x822
152015: 33 09 02                 a2 = 0x2
152018: 33 0a 09                 a3 = 0x9
152021: 28 50 3b fe              jump @2453
      :                          @10942 [@dyn 1041]
152025: 7b 17 70                 u64 [sp + 0x70] = a0
152028: 64 67                    a0 = s1
152030: 50 20 24 08 76 3b fe     ra = 2084, jump @2464
      :                          @10943 [@dyn 1042]
152037: 82 13 60                 t1 = u64 [sp + 0x60]
152040: 3a 09 78 12 03           a2 = u64 [0x31278]
152045: 64 7a                    a3 = a0
152047: 97 97 0d                 a0 = a2 << 0xd
152050: d3 97 07                 a0 = a0 ^ a2
152053: 98 79 07                 a2 = a0 >> 0x7
152056: d3 97 07                 a0 = a0 ^ a2
152059: 97 79 11                 a2 = a0 << 0x11
152062: d3 97 07                 a0 = a0 ^ a2
152065: 3e 07 78 12 03           u64 [0x31278] = a0
152070: 82 18 70                 a1 = u64 [sp + 0x70]
152073: 64 82                    t0 = a1
152075: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
152078: ca 37 07                 a0 = a0 * t1
152081: cd 87 0b                 a4 = a0 %u a1
152084: 95 bb 01                 a4 = a4 + 0x1
152087: 33 0c 01                 a5 = 0x1
152090: 64 a8                    a1 = a3
152092: 64 b7                    a0 = a4
152094: 28 0f                    jump @10946
      :                          @10944
152096: 98 77 01                 a0 = a0 >> 0x1
152099: ca 88 08                 a1 = a1 * a1
152102: 52 07 07                 jump @10946 if a0 != 0
      :                          @10945
152105: 28 38 83 00              jump @12645
      :                          @10946
152109: 84 79 01                 a2 = a0 & 0x1
152112: cd 68 08                 a1 = a1 %u s1
152115: 51 09 ed                 jump @10944 if a2 == 0
      :                          @10947
152118: ca c8 09                 a2 = a1 * a5
152121: cd 69 0c                 a5 = a2 %u s1
152124: 28 e4                    jump @10944
      :                          @10948 [@dyn 1043]
152126: 33 07 08                 a0 = 0x8
152129: 50 20 28 08 70 fe fd     ra = 2088, jump @1521
      :                          @10949 [@dyn 1044]
152136: 7b 17 70                 u64 [sp + 0x70] = a0
152139: 33 06 01                 s1 = 0x1
152142: 7b 76                    u64 [a0] = s1
152144: 33 07 18                 a0 = 0x18
152147: 50 20 2a 08 5e fe fd     ra = 2090, jump @1521
      :                          @10950 [@dyn 1045]
152154: 64 7b                    a4 = a0
152156: 7b 76                    u64 [a0] = s1
152158: 49 1b 08 ff              u64 [a4 + 8] = 0xffffffffffffffff
152162: 49 1b 10 ff              u64 [a4 + 16] = 0xffffffffffffffff
152166: 3a 08 78 12 03           a1 = u64 [0x31278]
152171: 97 89 0d                 a2 = a1 << 0xd
152174: d3 98 08                 a1 = a1 ^ a2
152177: 98 89 07                 a2 = a1 >> 0x7
152180: d3 98 08                 a1 = a1 ^ a2
152183: 3a 09 60 11 03           a2 = u64 [0x31160]
152188: 97 8a 11                 a3 = a1 << 0x11
152191: d3 a8 08                 a1 = a1 ^ a3
152194: ca 98 09                 a2 = a1 * a2
152197: 3e 08 78 12 03           u64 [0x31278] = a1
152202: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
152212: d6 79 07                 a0 = a2 mulhu a0
152215: 98 77 04                 a0 = a0 >> 0x4
152218: 96 77 14                 a0 = a0 * 0x14
152221: c9 79 06                 s1 = a2 - a0
152224: 7b 16 20 01              u64 [sp + 0x120] = s1
152228: 95 17 e0 01              a0 = sp + 0x1e0
152232: 82 18 70                 a1 = u64 [sp + 0x70]
152235: 7b 1b 60                 u64 [sp + 0x60] = a4
152238: 64 b9                    a2 = a4
152240: 64 6a                    a3 = s1
152242: 33 00 2c 08              ra = 0x82c
152246: 95 11 c8                 sp = sp + 0xffffffffffffffc8
152249: 7b 10 30                 u64 [sp + 0x30] = ra
152252: 7b 15 28                 u64 [sp + 0x28] = s0
152255: 7b 16 20                 u64 [sp + 0x20] = s1
152258: 64 90                    ra = a2
152260: 7b 18 18                 u64 [sp + 0x18] = a1
152263: 7b 17                    u64 [sp] = a0
152265: 95 a9 01                 a2 = a3 + 0x1
152268: 7b 19 08                 u64 [sp + 0x8] = a2
152271: 97 99 03                 a2 = a2 << 0x3
152274: 33 03 c0 22 03           t1 = 0x322c0
152279: 33 02 00 00 01           t0 = 0x10000
152284: c8 23 04                 t2 = t1 + t0
152287: 28 69 3b ff              jump @8014
      :                          @10951 [@dyn 1046]
152291: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
152295: ac 86 07                 jump @10953 if s1 <u a1
      :                          @10952
152298: 28 cc a1 00              jump @13269
      :                          @10953
152302: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
152306: 97 66 03                 s1 = s1 << 0x3
152309: 7b 17 58                 u64 [sp + 0x58] = a0
152312: c8 76 06                 s1 = s1 + a0
152315: 95 17 20 01              a0 = sp + 0x120
152319: 7b 17 38 02              u64 [sp + 0x238] = a0
152323: 33 07 2c 0c              a0 = 0xc2c
152327: 7b 17 40 02              u64 [sp + 0x240] = a0
152331: 7b 16 48 02              u64 [sp + 0x248] = s1
152335: 33 07 98 0c              a0 = 0xc98
152339: 7b 17 50 02              u64 [sp + 0x250] = a0
152343: 33 07 a0 1a 01           a0 = 0x11aa0
152348: 7b 17 90 02              u64 [sp + 0x290] = a0
152352: 49 21 98 02 02           u64 [sp + 664] = 0x2
152357: 49 21 b0 02              u64 [sp + 688] = 0
152361: 95 18 38 02              a1 = sp + 0x238
152365: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
152369: 49 21 a8 02 02           u64 [sp + 680] = 0x2
152374: 95 17 08 02              a0 = sp + 0x208
152378: 95 18 90 02              a1 = sp + 0x290
152382: 50 20 2e 08 bc fc fd     ra = 2094, jump @1503
      :                          @10954 [@dyn 1047]
152389: 82 16 10 02              s1 = u64 [sp + 0x210]
152393: 82 1b 18 02              a4 = u64 [sp + 0x218]
152397: 82 17 08 02              a0 = u64 [sp + 0x208]
152401: 7b 17 48                 u64 [sp + 0x48] = a0
152404: 33 07 02                 a0 = 0x2
152407: 33 08                    a1 = 0
152409: 33 09                    a2 = 0
152411: 64 6a                    a3 = s1
152413: 33 00 30 08              ra = 0x830
152417: 0a 64                    ecalli 100 // 'log'
152419: 01                       fallthrough
      :                          @10955 [@dyn 1048]
152420: 82 1c 48                 a5 = u64 [sp + 0x48]
152423: 82 17 68                 a0 = u64 [sp + 0x68]
152426: c8 c7 07                 a0 = a0 + a5
152429: 53 37 00 00 ff 27        jump @10961 if a0 <u 4294901760
      :                          @10956
152435: 33 07 c0 22 03           a0 = 0x322c0
152440: 95 77 00 00 01           a0 = a0 + 0x10000
152445: 01                       fallthrough
      :                          @10957
152446: 82 78                    a1 = u64 [a0]
152448: c9 87 09                 a2 = a0 - a1
152451: ab 69 11                 jump @10961 if a2 != s1
      :                          @10958
152454: c9 c8 09                 a2 = a1 - a5
152457: 01                       fallthrough
      :                          @10959
152458: 82 7a                    a3 = u64 [a0]
152460: ab 8a f2                 jump @10957 if a3 != a1
      :                          @10960
152463: 7b 79                    u64 [a0] = a2
152465: 33 0b                    a4 = 0
152467: 01                       fallthrough
      :                          @10961
152468: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
152472: 82 16 58                 s1 = u64 [sp + 0x58]
152475: 51 07 2a                 jump @10968 if a0 == 0
      :                          @10962
152478: 56 27 00 20 27           jump @10968 if a0 >u 8192
      :                          @10963
152483: 97 77 03                 a0 = a0 << 0x3
152486: 33 08 c0 22 03           a1 = 0x322c0
152491: 95 88 00 00 01           a1 = a1 + 0x10000
152496: 01                       fallthrough
      :                          @10964
152497: 82 89                    a2 = u64 [a1]
152499: c9 98 0a                 a3 = a1 - a2
152502: ab 6a 0f                 jump @10968 if a3 != s1
      :                          @10965
152505: c9 79 0a                 a3 = a2 - a0
152508: 01                       fallthrough
      :                          @10966
152509: 82 8b                    a4 = u64 [a1]
152511: ab 9b f2                 jump @10964 if a4 != a2
      :                          @10967
152514: 7b 8a                    u64 [a1] = a3
152516: 01                       fallthrough
      :                          @10968
152517: 33 07 c0 22 03           a0 = 0x322c0
152522: 95 77 00 00 01           a0 = a0 + 0x10000
152527: 82 1c 60                 a5 = u64 [sp + 0x60]
152530: 01                       fallthrough
      :                          @10969
152531: 82 78                    a1 = u64 [a0]
152533: c9 87 09                 a2 = a0 - a1
152536: ab c9 11                 jump @10973 if a2 != a5
      :                          @10970
152539: 95 89 e8                 a2 = a1 + 0xffffffffffffffe8
152542: 01                       fallthrough
      :                          @10971
152543: 82 7a                    a3 = u64 [a0]
152545: ab 8a f2                 jump @10969 if a3 != a1
      :                          @10972
152548: 7b 79                    u64 [a0] = a2
152550: 33 0b                    a4 = 0
152552: 01                       fallthrough
      :                          @10973
152553: 33 07 c0 22 03           a0 = 0x322c0
152558: 95 77 00 00 01           a0 = a0 + 0x10000
152563: 82 1c 70                 a5 = u64 [sp + 0x70]
152566: 01                       fallthrough
      :                          @10974
152567: 82 78                    a1 = u64 [a0]
152569: c9 87 09                 a2 = a0 - a1
152572: aa c9 07                 jump @10976 if a2 == a5
      :                          @10975
152575: 28 84 8e 00              jump @12868
      :                          @10976
152579: 95 89 f8                 a2 = a1 + 0xfffffffffffffff8
152582: 01                       fallthrough
      :                          @10977
152583: 82 7a                    a3 = u64 [a0]
152585: ab 8a ee                 jump @10974 if a3 != a1
      :                          @10978
152588: 7b 79                    u64 [a0] = a2
152590: 33 0b                    a4 = 0
152592: 01                       fallthrough
      :                          @10979
152593: ab 8a e6                 jump @10974 if a3 != a1
      :                          @10980
152596: 28 6f 8e 00              jump @12868
      :                          @10981 [@dyn 1049]
152600: 3a 09 78 12 03           a2 = u64 [0x31278]
152605: 3a 07 60 11 03           a0 = u64 [0x31160]
152610: 97 9a 0d                 a3 = a2 << 0xd
152613: d3 a9 09                 a2 = a2 ^ a3
152616: 98 9a 07                 a3 = a2 >> 0x7
152619: d3 a9 09                 a2 = a2 ^ a3
152622: 97 9a 11                 a3 = a2 << 0x11
152625: d3 a9 09                 a2 = a2 ^ a3
152628: ca 79 0a                 a3 = a2 * a0
152631: 3a 0b 68 11 03           a4 = u64 [0x31168]
152636: 3e 09 78 12 03           u64 [0x31278] = a2
152641: 98 a9 03                 a2 = a3 >> 0x3
152644: d6 b9 09                 a2 = a2 mulhu a4
152647: 98 99 04                 a2 = a2 >> 0x4
152650: 96 99 e8 03              a2 = a2 * 0x3e8
152654: c9 9a 0a                 a3 = a3 - a2
152657: 86 a9 01                 a2 = a3 | 0x1
152660: 95 99 02                 a2 = a2 + 0x2
152663: 7b 19 20 01              u64 [sp + 0x120] = a2
152667: 3a 09 78 12 03           a2 = u64 [0x31278]
152672: 97 9a 0d                 a3 = a2 << 0xd
152675: d3 a9 09                 a2 = a2 ^ a3
152678: 98 9a 07                 a3 = a2 >> 0x7
152681: d3 a9 09                 a2 = a2 ^ a3
152684: 97 9a 11                 a3 = a2 << 0x11
152687: d3 a9 09                 a2 = a2 ^ a3
152690: 3e 09 78 12 03           u64 [0x31278] = a2
152695: 82 18 20 01              a1 = u64 [sp + 0x120]
152699: 52 08 07                 jump @10983 if a1 != 0
      :                          @10982
152702: 28 19 a0 00              jump @13240
      :                          @10983
152706: ca 79 07                 a0 = a2 * a0
152709: cd 87 07                 a0 = a0 %u a1
152712: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
152716: 50 20 34 08 3a 48 fe     ra = 2100, jump @2785
      :                          @10984 [@dyn 1050]
152723: 7a 17 c8 01              u32 [sp + 0x1c8] = a0
152727: 95 17 e0 01              a0 = sp + 0x1e0
152731: 7b 17 90 02              u64 [sp + 0x290] = a0
152735: 33 07 98 0c              a0 = 0xc98
152739: 7b 17 98 02              u64 [sp + 0x298] = a0
152743: 95 17 20 01              a0 = sp + 0x120
152747: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
152751: 33 07 2c 0c              a0 = 0xc2c
152755: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
152759: 95 17 c8 01              a0 = sp + 0x1c8
152763: 7b 17 b0 02              u64 [sp + 0x2b0] = a0
152767: 33 07 96 0c              a0 = 0xc96
152771: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
152775: 33 07 d8 1a 01           a0 = 0x11ad8
152780: 7b 17 38 02              u64 [sp + 0x238] = a0
152784: 49 21 40 02 03           u64 [sp + 576] = 0x3
152789: 49 21 58 02              u64 [sp + 600] = 0
152793: 95 18 90 02              a1 = sp + 0x290
152797: 7b 18 48 02              u64 [sp + 0x248] = a1
152801: 49 21 50 02 03           u64 [sp + 592] = 0x3
152806: 95 17 08 02              a0 = sp + 0x208
152810: 95 18 38 02              a1 = sp + 0x238
152814: 50 20 36 08 0c fb fd     ra = 2102, jump @1503
      :                          @10985 [@dyn 1051]
152821: 82 16 10 02              s1 = u64 [sp + 0x210]
152825: 82 1b 18 02              a4 = u64 [sp + 0x218]
152829: 82 17 08 02              a0 = u64 [sp + 0x208]
152833: 7b 17 70                 u64 [sp + 0x70] = a0
152836: 33 07 02                 a0 = 0x2
152839: 33 08                    a1 = 0
152841: 33 09                    a2 = 0
152843: 64 6a                    a3 = s1
152845: 33 00 38 08              ra = 0x838
152849: 0a 64                    ecalli 100 // 'log'
152851: 01                       fallthrough
      :                          @10986 [@dyn 1052]
152852: 82 1c 70                 a5 = u64 [sp + 0x70]
152855: 82 17 68                 a0 = u64 [sp + 0x68]
152858: c8 c7 07                 a0 = a0 + a5
152861: 55 37 00 00 ff 0a        jump @10988 if a0 >=u 4294901760
      :                          @10987
152867: 28 60 8d 00              jump @12868
      :                          @10988
152871: 33 07 c0 22 03           a0 = 0x322c0
152876: 95 77 00 00 01           a0 = a0 + 0x10000
152881: 01                       fallthrough
      :                          @10989
152882: 82 78                    a1 = u64 [a0]
152884: c9 87 09                 a2 = a0 - a1
152887: aa 69 07                 jump @10991 if a2 == s1
      :                          @10990
152890: 28 49 8d 00              jump @12868
      :                          @10991
152894: c9 c8 09                 a2 = a1 - a5
152897: 01                       fallthrough
      :                          @10992
152898: 82 7a                    a3 = u64 [a0]
152900: ab 8a ee                 jump @10989 if a3 != a1
      :                          @10993
152903: 7b 79                    u64 [a0] = a2
152905: 33 0b                    a4 = 0
152907: 01                       fallthrough
      :                          @10994
152908: ab 8a e6                 jump @10989 if a3 != a1
      :                          @10995
152911: 28 34 8d 00              jump @12868
      :                          @10996 [@dyn 1053]
152915: 3a 08 78 12 03           a1 = u64 [0x31278]
152920: 97 89 0d                 a2 = a1 << 0xd
152923: d3 98 08                 a1 = a1 ^ a2
152926: 98 89 07                 a2 = a1 >> 0x7
152929: d3 98 08                 a1 = a1 ^ a2
152932: 97 89 11                 a2 = a1 << 0x11
152935: d3 98 08                 a1 = a1 ^ a2
152938: 3a 09 60 11 03           a2 = u64 [0x31160]
152943: 3a 0a 70 11 03           a3 = u64 [0x31170]
152948: 3e 08 78 12 03           u64 [0x31278] = a1
152953: ca 98 07                 a0 = a1 * a2
152956: 98 78 01                 a1 = a0 >> 0x1
152959: d6 a8 08                 a1 = a1 mulhu a3
152962: 98 88 04                 a1 = a1 >> 0x4
152965: 96 88 32                 a1 = a1 * 0x32
152968: c9 87 07                 a0 = a0 - a1
152971: 95 77 02                 a0 = a0 + 0x2
152974: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
152978: 50 20 3c 08 44 4a fe     ra = 2108, jump @2864
      :                          @10997 [@dyn 1054]
152985: 78 17 20 01              u8 [sp + 0x120] = a0
152989: 95 17 e0 01              a0 = sp + 0x1e0
152993: 7b 17 38 02              u64 [sp + 0x238] = a0
152997: 33 07 2c 0c              a0 = 0xc2c
153001: 7b 17 40 02              u64 [sp + 0x240] = a0
153005: 95 17 20 01              a0 = sp + 0x120
153009: 7b 17 48 02              u64 [sp + 0x248] = a0
153013: 33 07 84 0c              a0 = 0xc84
153017: 7b 17 50 02              u64 [sp + 0x250] = a0
153021: 33 07 28 1b 01           a0 = 0x11b28
153026: 7b 17 90 02              u64 [sp + 0x290] = a0
153030: 49 21 98 02 02           u64 [sp + 664] = 0x2
153035: 49 21 b0 02              u64 [sp + 688] = 0
153039: 95 18 38 02              a1 = sp + 0x238
153043: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
153047: 49 21 a8 02 02           u64 [sp + 680] = 0x2
153052: 95 17 08 02              a0 = sp + 0x208
153056: 95 18 90 02              a1 = sp + 0x290
153060: 50 20 3e 08 16 fa fd     ra = 2110, jump @1503
      :                          @10998 [@dyn 1055]
153067: 82 16 10 02              s1 = u64 [sp + 0x210]
153071: 82 1b 18 02              a4 = u64 [sp + 0x218]
153075: 82 17 08 02              a0 = u64 [sp + 0x208]
153079: 7b 17 70                 u64 [sp + 0x70] = a0
153082: 33 07 02                 a0 = 0x2
153085: 33 08                    a1 = 0
153087: 33 09                    a2 = 0
153089: 64 6a                    a3 = s1
153091: 33 00 40 08              ra = 0x840
153095: 0a 64                    ecalli 100 // 'log'
153097: 01                       fallthrough
      :                          @10999 [@dyn 1056]
153098: 82 1c 70                 a5 = u64 [sp + 0x70]
153101: 82 17 68                 a0 = u64 [sp + 0x68]
153104: c8 c7 07                 a0 = a0 + a5
153107: 55 37 00 00 ff 0a        jump @11001 if a0 >=u 4294901760
      :                          @11000
153113: 28 6a 8c 00              jump @12868
      :                          @11001
153117: 33 07 c0 22 03           a0 = 0x322c0
153122: 95 77 00 00 01           a0 = a0 + 0x10000
153127: 01                       fallthrough
      :                          @11002
153128: 82 78                    a1 = u64 [a0]
153130: c9 87 09                 a2 = a0 - a1
153133: aa 69 07                 jump @11004 if a2 == s1
      :                          @11003
153136: 28 53 8c 00              jump @12868
      :                          @11004
153140: c9 c8 09                 a2 = a1 - a5
153143: 01                       fallthrough
      :                          @11005
153144: 82 7a                    a3 = u64 [a0]
153146: ab 8a ee                 jump @11002 if a3 != a1
      :                          @11006
153149: 7b 79                    u64 [a0] = a2
153151: 33 0b                    a4 = 0
153153: 01                       fallthrough
      :                          @11007
153154: ab 8a e6                 jump @11002 if a3 != a1
      :                          @11008
153157: 28 3e 8c 00              jump @12868
      :                          @11009 [@dyn 1057]
153161: 3a 08 78 12 03           a1 = u64 [0x31278]
153166: 97 89 0d                 a2 = a1 << 0xd
153169: d3 89 09                 a2 = a2 ^ a1
153172: 98 9a 07                 a3 = a2 >> 0x7
153175: 3a 08 60 11 03           a1 = u64 [0x31160]
153180: d3 a9 09                 a2 = a2 ^ a3
153183: 97 9a 11                 a3 = a2 << 0x11
153186: d3 a9 09                 a2 = a2 ^ a3
153189: ca 89 0a                 a3 = a2 * a1
153192: 3e 09 78 12 03           u64 [0x31278] = a2
153197: 14 09 cd cc cc cc cc cc cc cc a2 = 0xcccccccccccccccd
153207: d6 9a 09                 a2 = a3 mulhu a2
153210: 98 99 04                 a2 = a2 >> 0x4
153213: 96 99 14                 a2 = a2 * 0x14
153216: c9 9a 0a                 a3 = a3 - a2
153219: 7b 1a b0 01              u64 [sp + 0x1b0] = a3
153223: 3a 09 78 12 03           a2 = u64 [0x31278]
153228: 97 9a 0d                 a3 = a2 << 0xd
153231: d3 a9 09                 a2 = a2 ^ a3
153234: 98 9a 07                 a3 = a2 >> 0x7
153237: d3 a9 09                 a2 = a2 ^ a3
153240: 97 9a 11                 a3 = a2 << 0x11
153243: d3 a9 09                 a2 = a2 ^ a3
153246: ca 89 08                 a1 = a2 * a1
153249: 3a 0a b0 11 03           a3 = u64 [0x311b0]
153254: 3e 09 78 12 03           u64 [0x31278] = a2
153259: 98 87 02                 a0 = a1 >> 0x2
153262: d6 a7 07                 a0 = a0 mulhu a3
153265: 98 77 02                 a0 = a0 >> 0x2
153268: 96 79 64                 a2 = a0 * 0x64
153271: 82 17 b0 01              a0 = u64 [sp + 0x1b0]
153275: c9 98 08                 a1 = a1 - a2
153278: 95 89 01                 a2 = a1 + 0x1
153281: 7b 19 c8 01              u64 [sp + 0x1c8] = a2
153285: 33 08 01                 a1 = 0x1
153288: 50 20 44 08 43 49 fe     ra = 2116, jump @2871
      :                          @11010 [@dyn 1058]
153295: 7b 17 20 01              u64 [sp + 0x120] = a0
153299: 7b 18 e0 01              u64 [sp + 0x1e0] = a1
153303: 95 17 b0 01              a0 = sp + 0x1b0
153307: 7b 17 90 02              u64 [sp + 0x290] = a0
153311: 33 08 2c 0c              a1 = 0xc2c
153315: 7b 18 98 02              u64 [sp + 0x298] = a1
153319: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
153323: 7b 18 a8 02              u64 [sp + 0x2a8] = a1
153327: 95 17 c8 01              a0 = sp + 0x1c8
153331: 7b 17 b0 02              u64 [sp + 0x2b0] = a0
153335: 33 07 98 0c              a0 = 0xc98
153339: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
153343: 95 18 20 01              a1 = sp + 0x120
153347: 7b 18 c0 02              u64 [sp + 0x2c0] = a1
153351: 7b 17 c8 02              u64 [sp + 0x2c8] = a0
153355: 95 18 e0 01              a1 = sp + 0x1e0
153359: 7b 18 d0 02              u64 [sp + 0x2d0] = a1
153363: 7b 17 d8 02              u64 [sp + 0x2d8] = a0
153367: 33 07 68 1b 01           a0 = 0x11b68
153372: 7b 17 38 02              u64 [sp + 0x238] = a0
153376: 49 21 40 02 06           u64 [sp + 576] = 0x6
153381: 49 21 58 02              u64 [sp + 600] = 0
153385: 95 17 90 02              a0 = sp + 0x290
153389: 7b 17 48 02              u64 [sp + 0x248] = a0
153393: 49 21 50 02 05           u64 [sp + 592] = 0x5
153398: 95 17 08 02              a0 = sp + 0x208
153402: 95 18 38 02              a1 = sp + 0x238
153406: 50 20 46 08 bc f8 fd     ra = 2118, jump @1503
      :                          @11011 [@dyn 1059]
153413: 82 16 10 02              s1 = u64 [sp + 0x210]
153417: 82 1b 18 02              a4 = u64 [sp + 0x218]
153421: 82 17 08 02              a0 = u64 [sp + 0x208]
153425: 7b 17 70                 u64 [sp + 0x70] = a0
153428: 33 07 02                 a0 = 0x2
153431: 33 08                    a1 = 0
153433: 33 09                    a2 = 0
153435: 64 6a                    a3 = s1
153437: 33 00 48 08              ra = 0x848
153441: 0a 64                    ecalli 100 // 'log'
153443: 01                       fallthrough
      :                          @11012 [@dyn 1060]
153444: 82 1c 70                 a5 = u64 [sp + 0x70]
153447: 82 17 68                 a0 = u64 [sp + 0x68]
153450: c8 c7 07                 a0 = a0 + a5
153453: 55 37 00 00 ff 0a        jump @11014 if a0 >=u 4294901760
      :                          @11013
153459: 28 10 8b 00              jump @12868
      :                          @11014
153463: 33 07 c0 22 03           a0 = 0x322c0
153468: 95 77 00 00 01           a0 = a0 + 0x10000
153473: 01                       fallthrough
      :                          @11015
153474: 82 78                    a1 = u64 [a0]
153476: c9 87 09                 a2 = a0 - a1
153479: aa 69 07                 jump @11017 if a2 == s1
      :                          @11016
153482: 28 f9 8a 00              jump @12868
      :                          @11017
153486: c9 c8 09                 a2 = a1 - a5
153489: 01                       fallthrough
      :                          @11018
153490: 82 7a                    a3 = u64 [a0]
153492: ab 8a ee                 jump @11015 if a3 != a1
      :                          @11019
153495: 7b 79                    u64 [a0] = a2
153497: 33 0b                    a4 = 0
153499: 01                       fallthrough
      :                          @11020
153500: ab 8a e6                 jump @11015 if a3 != a1
      :                          @11021
153503: 28 e4 8a 00              jump @12868
      :                          @11022 [@dyn 1061]
153507: 3a 07 60 11 03           a0 = u64 [0x31160]
153512: 7b 17 70                 u64 [sp + 0x70] = a0
153515: 33 07 14                 a0 = 0x14
153518: 33 06 14                 s1 = 0x14
153521: 50 20 4c 08 3d fb fd     ra = 2124, jump @1574
      :                          @11023 [@dyn 1062]
153528: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
153532: 7b 18 e8 01              u64 [sp + 0x1e8] = a1
153536: 3a 02 b0 11 03           t0 = u64 [0x311b0]
153541: 49 21 f0 01              u64 [sp + 496] = 0
153545: 33 0c 78 12 03           a5 = 0x31278
153550: 33 03 64                 t1 = 0x64
153553: 7b 12 48                 u64 [sp + 0x48] = t0
153556: 28 48                    jump @11026
      :                          @11024
153558: 82 1a 70                 a3 = u64 [sp + 0x70]
153561: ca a9 07                 a0 = a2 * a3
153564: 98 79 02                 a2 = a0 >> 0x2
153567: d6 29 09                 a2 = a2 mulhu t0
153570: 98 99 02                 a2 = a2 >> 0x2
153573: ca 39 09                 a2 = a2 * t1
153576: c9 97 07                 a0 = a0 - a2
153579: ca ab 09                 a2 = a4 * a3
153582: 98 9a 02                 a3 = a2 >> 0x2
153585: d6 2a 0a                 a3 = a3 mulhu t0
153588: 98 aa 02                 a3 = a3 >> 0x2
153591: 82 1b e8 01              a4 = u64 [sp + 0x1e8]
153595: ca 3a 0a                 a3 = a3 * t1
153598: c9 a9 09                 a2 = a2 - a3
153601: 97 8a 04                 a3 = a1 << 0x4
153604: c8 ba 0a                 a3 = a3 + a4
153607: 7b a7                    u64 [a3] = a0
153609: 7b a9 08                 u64 [a3 + 0x8] = a2
153612: 95 89 01                 a2 = a1 + 0x1
153615: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
153618: 7b 19 f0 01              u64 [sp + 0x1f0] = a2
153622: 52 06 06                 jump @11026 if s1 != 0
      :                          @11025
153625: 28 b3 7e                 jump @12657
      :                          @11026
153628: 3a 07 78 12 03           a0 = u64 [0x31278]
153633: 97 78 0d                 a1 = a0 << 0xd
153636: d3 87 07                 a0 = a0 ^ a1
153639: 98 78 07                 a1 = a0 >> 0x7
153642: d3 87 07                 a0 = a0 ^ a1
153645: 97 78 11                 a1 = a0 << 0x11
153648: d3 78 09                 a2 = a1 ^ a0
153651: 3e 09 78 12 03           u64 [0x31278] = a2
153656: 3a 07 78 12 03           a0 = u64 [0x31278]
153661: 97 78 0d                 a1 = a0 << 0xd
153664: d3 87 07                 a0 = a0 ^ a1
153667: 98 78 07                 a1 = a0 >> 0x7
153670: d3 87 07                 a0 = a0 ^ a1
153673: 97 78 11                 a1 = a0 << 0x11
153676: d3 78 0b                 a4 = a1 ^ a0
153679: 3e 0b 78 12 03           u64 [0x31278] = a4
153684: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
153688: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
153692: ab 78 7a ff              jump @11024 if a1 != a0
      :                          @11027
153696: 95 17 e0 01              a0 = sp + 0x1e0
153700: 7b 19 60                 u64 [sp + 0x60] = a2
153703: 7b 1b 58                 u64 [sp + 0x58] = a4
153706: 50 20 4e 08 d8 fb fd     ra = 2126, jump @1605
      :                          @11028 [@dyn 1063]
153713: 82 1b 58                 a4 = u64 [sp + 0x58]
153716: 82 19 60                 a2 = u64 [sp + 0x60]
153719: 33 03 64                 t1 = 0x64
153722: 33 0c 78 12 03           a5 = 0x31278
153727: 82 12 48                 t0 = u64 [sp + 0x48]
153730: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
153734: 28 50 ff                 jump @11024
      :                          @11029 [@dyn 1064]
153737: 3a 08 78 12 03           a1 = u64 [0x31278]
153742: 97 89 0d                 a2 = a1 << 0xd
153745: d3 98 08                 a1 = a1 ^ a2
153748: 98 89 07                 a2 = a1 >> 0x7
153751: d3 98 08                 a1 = a1 ^ a2
153754: 97 89 11                 a2 = a1 << 0x11
153757: d3 98 08                 a1 = a1 ^ a2
153760: 3a 09 60 11 03           a2 = u64 [0x31160]
153765: 3a 0a 78 11 03           a3 = u64 [0x31178]
153770: 3e 08 78 12 03           u64 [0x31278] = a1
153775: ca 98 07                 a0 = a1 * a2
153778: d6 a7 08                 a1 = a0 mulhu a3
153781: 98 88 0b                 a1 = a1 >> 0xb
153784: 96 88 10 27              a1 = a1 * 0x2710
153788: c9 87 07                 a0 = a0 - a1
153791: 86 77 01                 a0 = a0 | 0x1
153794: 95 77 02                 a0 = a0 + 0x2
153797: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
153801: 50 20 52 08 24 49 fe     ra = 2130, jump @2898
      :                          @11030 [@dyn 1065]
153808: 78 17 20 01              u8 [sp + 0x120] = a0
153812: 95 17 e0 01              a0 = sp + 0x1e0
153816: 7b 17 38 02              u64 [sp + 0x238] = a0
153820: 33 07 2c 0c              a0 = 0xc2c
153824: 7b 17 40 02              u64 [sp + 0x240] = a0
153828: 95 17 20 01              a0 = sp + 0x120
153832: 7b 17 48 02              u64 [sp + 0x248] = a0
153836: 33 07 84 0c              a0 = 0xc84
153840: 7b 17 50 02              u64 [sp + 0x250] = a0
153844: 33 07 38 1c 01           a0 = 0x11c38
153849: 7b 17 90 02              u64 [sp + 0x290] = a0
153853: 49 21 98 02 02           u64 [sp + 664] = 0x2
153858: 49 21 b0 02              u64 [sp + 688] = 0
153862: 95 18 38 02              a1 = sp + 0x238
153866: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
153870: 49 21 a8 02 02           u64 [sp + 680] = 0x2
153875: 95 17 08 02              a0 = sp + 0x208
153879: 95 18 90 02              a1 = sp + 0x290
153883: 50 20 54 08 df f6 fd     ra = 2132, jump @1503
      :                          @11031 [@dyn 1066]
153890: 82 16 10 02              s1 = u64 [sp + 0x210]
153894: 82 1b 18 02              a4 = u64 [sp + 0x218]
153898: 82 17 08 02              a0 = u64 [sp + 0x208]
153902: 7b 17 70                 u64 [sp + 0x70] = a0
153905: 33 07 02                 a0 = 0x2
153908: 33 08                    a1 = 0
153910: 33 09                    a2 = 0
153912: 64 6a                    a3 = s1
153914: 33 00 56 08              ra = 0x856
153918: 0a 64                    ecalli 100 // 'log'
153920: 01                       fallthrough
      :                          @11032 [@dyn 1067]
153921: 82 1c 70                 a5 = u64 [sp + 0x70]
153924: 82 17 68                 a0 = u64 [sp + 0x68]
153927: c8 c7 07                 a0 = a0 + a5
153930: 55 37 00 00 ff 0a        jump @11034 if a0 >=u 4294901760
      :                          @11033
153936: 28 33 89 00              jump @12868
      :                          @11034
153940: 33 07 c0 22 03           a0 = 0x322c0
153945: 95 77 00 00 01           a0 = a0 + 0x10000
153950: 01                       fallthrough
      :                          @11035
153951: 82 78                    a1 = u64 [a0]
153953: c9 87 09                 a2 = a0 - a1
153956: aa 69 07                 jump @11037 if a2 == s1
      :                          @11036
153959: 28 1c 89 00              jump @12868
      :                          @11037
153963: c9 c8 09                 a2 = a1 - a5
153966: 01                       fallthrough
      :                          @11038
153967: 82 7a                    a3 = u64 [a0]
153969: ab 8a ee                 jump @11035 if a3 != a1
      :                          @11039
153972: 7b 79                    u64 [a0] = a2
153974: 33 0b                    a4 = 0
153976: 01                       fallthrough
      :                          @11040
153977: ab 8a e6                 jump @11035 if a3 != a1
      :                          @11041
153980: 28 07 89 00              jump @12868
      :                          @11042 [@dyn 1068]
153984: 3a 08 78 12 03           a1 = u64 [0x31278]
153989: 97 89 0d                 a2 = a1 << 0xd
153992: d3 98 08                 a1 = a1 ^ a2
153995: 98 89 07                 a2 = a1 >> 0x7
153998: d3 98 08                 a1 = a1 ^ a2
154001: 97 89 11                 a2 = a1 << 0x11
154004: d3 98 08                 a1 = a1 ^ a2
154007: 3a 09 60 11 03           a2 = u64 [0x31160]
154012: 3a 0a b8 11 03           a3 = u64 [0x311b8]
154017: 3e 08 78 12 03           u64 [0x31278] = a1
154022: ca 98 07                 a0 = a1 * a2
154025: d6 a7 08                 a1 = a0 mulhu a3
154028: 98 88 12                 a1 = a1 >> 0x12
154031: 96 88 40 42 0f           a1 = a1 * 0xf4240
154036: c9 87 07                 a0 = a0 - a1
154039: 7b 17 20 01              u64 [sp + 0x120] = a0
154043: 50 20 5a 08 7c 4a fe     ra = 2138, jump @2956
      :                          @11043 [@dyn 1069]
154050: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
154054: 95 17 20 01              a0 = sp + 0x120
154058: 7b 17 38 02              u64 [sp + 0x238] = a0
154062: 33 07 2c 0c              a0 = 0xc2c
154066: 7b 17 40 02              u64 [sp + 0x240] = a0
154070: 95 18 e0 01              a1 = sp + 0x1e0
154074: 7b 18 48 02              u64 [sp + 0x248] = a1
154078: 7b 17 50 02              u64 [sp + 0x250] = a0
154082: 33 07 68 1c 01           a0 = 0x11c68
154087: 7b 17 90 02              u64 [sp + 0x290] = a0
154091: 49 21 98 02 02           u64 [sp + 664] = 0x2
154096: 49 21 b0 02              u64 [sp + 688] = 0
154100: 95 18 38 02              a1 = sp + 0x238
154104: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
154108: 49 21 a8 02 02           u64 [sp + 680] = 0x2
154113: 95 17 08 02              a0 = sp + 0x208
154117: 95 18 90 02              a1 = sp + 0x290
154121: 50 20 5c 08 f1 f5 fd     ra = 2140, jump @1503
      :                          @11044 [@dyn 1070]
154128: 82 16 10 02              s1 = u64 [sp + 0x210]
154132: 82 1b 18 02              a4 = u64 [sp + 0x218]
154136: 82 17 08 02              a0 = u64 [sp + 0x208]
154140: 7b 17 70                 u64 [sp + 0x70] = a0
154143: 33 07 02                 a0 = 0x2
154146: 33 08                    a1 = 0
154148: 33 09                    a2 = 0
154150: 64 6a                    a3 = s1
154152: 33 00 5e 08              ra = 0x85e
154156: 0a 64                    ecalli 100 // 'log'
154158: 01                       fallthrough
      :                          @11045 [@dyn 1071]
154159: 82 1c 70                 a5 = u64 [sp + 0x70]
154162: 82 17 68                 a0 = u64 [sp + 0x68]
154165: c8 c7 07                 a0 = a0 + a5
154168: 55 37 00 00 ff 0a        jump @11047 if a0 >=u 4294901760
      :                          @11046
154174: 28 45 88 00              jump @12868
      :                          @11047
154178: 33 07 c0 22 03           a0 = 0x322c0
154183: 95 77 00 00 01           a0 = a0 + 0x10000
154188: 01                       fallthrough
      :                          @11048
154189: 82 78                    a1 = u64 [a0]
154191: c9 87 09                 a2 = a0 - a1
154194: aa 69 07                 jump @11050 if a2 == s1
      :                          @11049
154197: 28 2e 88 00              jump @12868
      :                          @11050
154201: c9 c8 09                 a2 = a1 - a5
154204: 01                       fallthrough
      :                          @11051
154205: 82 7a                    a3 = u64 [a0]
154207: ab 8a ee                 jump @11048 if a3 != a1
      :                          @11052
154210: 7b 79                    u64 [a0] = a2
154212: 33 0b                    a4 = 0
154214: 01                       fallthrough
      :                          @11053
154215: ab 8a e6                 jump @11048 if a3 != a1
      :                          @11054
154218: 28 19 88 00              jump @12868
      :                          @11055 [@dyn 1072]
154222: 3a 08 78 12 03           a1 = u64 [0x31278]
154227: 97 89 0d                 a2 = a1 << 0xd
154230: d3 98 08                 a1 = a1 ^ a2
154233: 98 89 07                 a2 = a1 >> 0x7
154236: d3 89 09                 a2 = a2 ^ a1
154239: 97 9a 11                 a3 = a2 << 0x11
154242: 3a 08 60 11 03           a1 = u64 [0x31160]
154247: d3 9a 0a                 a3 = a3 ^ a2
154250: 3a 09 d0 11 03           a2 = u64 [0x311d0]
154255: ca 8a 0b                 a4 = a3 * a1
154258: 3e 0a 78 12 03           u64 [0x31278] = a3
154263: d6 9b 0a                 a3 = a4 mulhu a2
154266: c9 ab 0c                 a5 = a4 - a3
154269: 98 cc 01                 a5 = a5 >> 0x1
154272: c8 ca 0a                 a3 = a3 + a5
154275: 98 aa 06                 a3 = a3 >> 0x6
154278: 3a 06 78 12 03           s1 = u64 [0x31278]
154283: 96 aa 65                 a3 = a3 * 0x65
154286: c9 ab 0b                 a4 = a4 - a3
154289: 7b 1b 70                 u64 [sp + 0x70] = a4
154292: 97 6a 0d                 a3 = s1 << 0xd
154295: d3 6a 0a                 a3 = a3 ^ s1
154298: 98 ab 07                 a4 = a3 >> 0x7
154301: d3 ba 0a                 a3 = a3 ^ a4
154304: 97 ab 11                 a4 = a3 << 0x11
154307: d3 ba 0a                 a3 = a3 ^ a4
154310: ca 8a 06                 s1 = a3 * a1
154313: 3e 0a 78 12 03           u64 [0x31278] = a3
154318: d6 96 0a                 a3 = s1 mulhu a2
154321: c9 a6 0b                 a4 = s1 - a3
154324: 98 bb 01                 a4 = a4 >> 0x1
154327: c8 ba 0a                 a3 = a3 + a4
154330: 98 aa 06                 a3 = a3 >> 0x6
154333: 3a 0b 78 12 03           a4 = u64 [0x31278]
154338: 96 aa 65                 a3 = a3 * 0x65
154341: c9 a6 06                 s1 = s1 - a3
154344: 7b 16 60                 u64 [sp + 0x60] = s1
154347: 97 ba 0d                 a3 = a4 << 0xd
154350: d3 ba 0a                 a3 = a3 ^ a4
154353: 98 ab 07                 a4 = a3 >> 0x7
154356: d3 ba 0a                 a3 = a3 ^ a4
154359: 97 ab 11                 a4 = a3 << 0x11
154362: d3 ba 0a                 a3 = a3 ^ a4
154365: ca 8a 06                 s1 = a3 * a1
154368: 3e 0a 78 12 03           u64 [0x31278] = a3
154373: d6 96 0a                 a3 = s1 mulhu a2
154376: c9 a6 0b                 a4 = s1 - a3
154379: 98 bb 01                 a4 = a4 >> 0x1
154382: c8 ba 0a                 a3 = a3 + a4
154385: 98 aa 06                 a3 = a3 >> 0x6
154388: 3a 0b 78 12 03           a4 = u64 [0x31278]
154393: 96 aa 65                 a3 = a3 * 0x65
154396: c9 a6 06                 s1 = s1 - a3
154399: 7b 16 58                 u64 [sp + 0x58] = s1
154402: 97 ba 0d                 a3 = a4 << 0xd
154405: d3 ba 0a                 a3 = a3 ^ a4
154408: 98 ab 07                 a4 = a3 >> 0x7
154411: d3 ba 0a                 a3 = a3 ^ a4
154414: 97 ab 11                 a4 = a3 << 0x11
154417: d3 ba 0a                 a3 = a3 ^ a4
154420: ca 8a 06                 s1 = a3 * a1
154423: 3e 0a 78 12 03           u64 [0x31278] = a3
154428: d6 96 0a                 a3 = s1 mulhu a2
154431: c9 a6 0b                 a4 = s1 - a3
154434: 98 bb 01                 a4 = a4 >> 0x1
154437: c8 ba 0a                 a3 = a3 + a4
154440: 98 aa 06                 a3 = a3 >> 0x6
154443: 3a 0b 78 12 03           a4 = u64 [0x31278]
154448: 96 aa 65                 a3 = a3 * 0x65
154451: c9 a6 00                 ra = s1 - a3
154454: 97 ba 0d                 a3 = a4 << 0xd
154457: d3 ba 0a                 a3 = a3 ^ a4
154460: 98 ab 07                 a4 = a3 >> 0x7
154463: d3 ba 0a                 a3 = a3 ^ a4
154466: 97 ab 11                 a4 = a3 << 0x11
154469: d3 ba 0a                 a3 = a3 ^ a4
154472: ca 8a 06                 s1 = a3 * a1
154475: 3e 0a 78 12 03           u64 [0x31278] = a3
154480: d6 96 0a                 a3 = s1 mulhu a2
154483: c9 a6 0b                 a4 = s1 - a3
154486: 98 bb 01                 a4 = a4 >> 0x1
154489: c8 ba 0a                 a3 = a3 + a4
154492: 98 aa 06                 a3 = a3 >> 0x6
154495: 3a 0b 78 12 03           a4 = u64 [0x31278]
154500: 96 aa 65                 a3 = a3 * 0x65
154503: c9 a6 04                 t2 = s1 - a3
154506: 97 ba 0d                 a3 = a4 << 0xd
154509: d3 ba 0a                 a3 = a3 ^ a4
154512: 98 ab 07                 a4 = a3 >> 0x7
154515: d3 ba 0a                 a3 = a3 ^ a4
154518: 97 ab 11                 a4 = a3 << 0x11
154521: d3 ba 0a                 a3 = a3 ^ a4
154524: ca 8a 0b                 a4 = a3 * a1
154527: 3e 0a 78 12 03           u64 [0x31278] = a3
154532: d6 9b 0a                 a3 = a4 mulhu a2
154535: c9 ab 06                 s1 = a4 - a3
154538: 98 66 01                 s1 = s1 >> 0x1
154541: c8 6a 0a                 a3 = a3 + s1
154544: 3a 07 78 12 03           a0 = u64 [0x31278]
154549: 98 aa 06                 a3 = a3 >> 0x6
154552: 96 aa 65                 a3 = a3 * 0x65
154555: c9 ab 06                 s1 = a4 - a3
154558: 97 7a 0d                 a3 = a0 << 0xd
154561: d3 a7 07                 a0 = a0 ^ a3
154564: 98 7a 07                 a3 = a0 >> 0x7
154567: d3 a7 07                 a0 = a0 ^ a3
154570: 97 7a 11                 a3 = a0 << 0x11
154573: d3 a7 07                 a0 = a0 ^ a3
154576: 3e 07 78 12 03           u64 [0x31278] = a0
154581: ca 87 07                 a0 = a0 * a1
154584: d6 97 0a                 a3 = a0 mulhu a2
154587: c9 a7 0b                 a4 = a0 - a3
154590: 98 bb 01                 a4 = a4 >> 0x1
154593: c8 ba 0a                 a3 = a3 + a4
154596: 3a 0b 78 12 03           a4 = u64 [0x31278]
154601: 98 aa 06                 a3 = a3 >> 0x6
154604: 96 aa 65                 a3 = a3 * 0x65
154607: c9 a7 0c                 a5 = a0 - a3
154610: 97 ba 0d                 a3 = a4 << 0xd
154613: d3 ba 0a                 a3 = a3 ^ a4
154616: 98 ab 07                 a4 = a3 >> 0x7
154619: d3 ba 0a                 a3 = a3 ^ a4
154622: 97 ab 11                 a4 = a3 << 0x11
154625: d3 ba 0a                 a3 = a3 ^ a4
154628: 3e 0a 78 12 03           u64 [0x31278] = a3
154633: ca 8a 07                 a0 = a3 * a1
154636: d6 97 0b                 a4 = a0 mulhu a2
154639: c9 b7 0a                 a3 = a0 - a4
154642: 98 aa 01                 a3 = a3 >> 0x1
154645: c8 ba 0a                 a3 = a3 + a4
154648: 3a 0b 78 12 03           a4 = u64 [0x31278]
154653: 98 aa 06                 a3 = a3 >> 0x6
154656: 96 aa 65                 a3 = a3 * 0x65
154659: c9 a7 0a                 a3 = a0 - a3
154662: 97 b7 0d                 a0 = a4 << 0xd
154665: d3 b7 07                 a0 = a0 ^ a4
154668: 98 7b 07                 a4 = a0 >> 0x7
154671: d3 b7 07                 a0 = a0 ^ a4
154674: 97 7b 11                 a4 = a0 << 0x11
154677: d3 b7 07                 a0 = a0 ^ a4
154680: 3e 07 78 12 03           u64 [0x31278] = a0
154685: ca 87 07                 a0 = a0 * a1
154688: d6 97 08                 a1 = a0 mulhu a2
154691: c9 87 09                 a2 = a0 - a1
154694: 98 99 01                 a2 = a2 >> 0x1
154697: c8 98 08                 a1 = a1 + a2
154700: 98 88 06                 a1 = a1 >> 0x6
154703: 96 88 65                 a1 = a1 * 0x65
154706: c9 87 07                 a0 = a0 - a1
154709: 82 18 70                 a1 = u64 [sp + 0x70]
154712: 95 88 ce                 a1 = a1 + 0xffffffffffffffce
154715: 7b 18 90 02              u64 [sp + 0x290] = a1
154719: 82 18 60                 a1 = u64 [sp + 0x60]
154722: 95 88 ce                 a1 = a1 + 0xffffffffffffffce
154725: 7b 18 98 02              u64 [sp + 0x298] = a1
154729: 82 18 58                 a1 = u64 [sp + 0x58]
154732: 95 88 ce                 a1 = a1 + 0xffffffffffffffce
154735: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
154739: 95 08 ce                 a1 = ra + 0xffffffffffffffce
154742: 7b 18 a8 02              u64 [sp + 0x2a8] = a1
154746: 95 48 ce                 a1 = t2 + 0xffffffffffffffce
154749: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
154753: 95 68 ce                 a1 = s1 + 0xffffffffffffffce
154756: 7b 18 b8 02              u64 [sp + 0x2b8] = a1
154760: 95 c8 ce                 a1 = a5 + 0xffffffffffffffce
154763: 7b 18 c0 02              u64 [sp + 0x2c0] = a1
154767: 95 a8 ce                 a1 = a3 + 0xffffffffffffffce
154770: 7b 18 c8 02              u64 [sp + 0x2c8] = a1
154774: 95 77 ce                 a0 = a0 + 0xffffffffffffffce
154777: 7b 17 d0 02              u64 [sp + 0x2d0] = a0
154781: 95 17 90 02              a0 = sp + 0x290
154785: 28 b7 47 fe              jump @2963
      :                          @11056
154789: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
154793: 95 17 e0 01              a0 = sp + 0x1e0
154797: 7b 17 08 02              u64 [sp + 0x208] = a0
154801: 33 07 98 0c              a0 = 0xc98
154805: 7b 17 10 02              u64 [sp + 0x210] = a0
154809: 33 07 a0 1c 01           a0 = 0x11ca0
154814: 7b 17 90 02              u64 [sp + 0x290] = a0
154818: 49 21 98 02 01           u64 [sp + 664] = 0x1
154823: 49 21 b0 02              u64 [sp + 688] = 0
154827: 95 18 08 02              a1 = sp + 0x208
154831: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
154835: 49 21 a8 02 01           u64 [sp + 680] = 0x1
154840: 95 17 38 02              a0 = sp + 0x238
154844: 95 18 90 02              a1 = sp + 0x290
154848: 50 20 62 08 1a f3 fd     ra = 2146, jump @1503
      :                          @11057 [@dyn 1073]
154855: 82 16 40 02              s1 = u64 [sp + 0x240]
154859: 82 1b 48 02              a4 = u64 [sp + 0x248]
154863: 82 17 38 02              a0 = u64 [sp + 0x238]
154867: 7b 17 70                 u64 [sp + 0x70] = a0
154870: 33 07 02                 a0 = 0x2
154873: 33 08                    a1 = 0
154875: 33 09                    a2 = 0
154877: 64 6a                    a3 = s1
154879: 33 00 64 08              ra = 0x864
154883: 0a 64                    ecalli 100 // 'log'
154885: 01                       fallthrough
      :                          @11058 [@dyn 1074]
154886: 82 1c 70                 a5 = u64 [sp + 0x70]
154889: 82 17 68                 a0 = u64 [sp + 0x68]
154892: c8 c7 07                 a0 = a0 + a5
154895: 55 37 00 00 ff 0a        jump @11060 if a0 >=u 4294901760
      :                          @11059
154901: 28 6e 85 00              jump @12868
      :                          @11060
154905: 33 07 c0 22 03           a0 = 0x322c0
154910: 95 77 00 00 01           a0 = a0 + 0x10000
154915: 01                       fallthrough
      :                          @11061
154916: 82 78                    a1 = u64 [a0]
154918: c9 87 09                 a2 = a0 - a1
154921: aa 69 07                 jump @11063 if a2 == s1
      :                          @11062
154924: 28 57 85 00              jump @12868
      :                          @11063
154928: c9 c8 09                 a2 = a1 - a5
154931: 01                       fallthrough
      :                          @11064
154932: 82 7a                    a3 = u64 [a0]
154934: ab 8a ee                 jump @11061 if a3 != a1
      :                          @11065
154937: 7b 79                    u64 [a0] = a2
154939: 33 0b                    a4 = 0
154941: 01                       fallthrough
      :                          @11066
154942: ab 8a e6                 jump @11061 if a3 != a1
      :                          @11067
154945: 28 42 85 00              jump @12868
      :                          @11068 [@dyn 1075]
154949: 3a 08 78 12 03           a1 = u64 [0x31278]
154954: 97 89 0d                 a2 = a1 << 0xd
154957: d3 98 08                 a1 = a1 ^ a2
154960: 98 89 07                 a2 = a1 >> 0x7
154963: d3 89 09                 a2 = a2 ^ a1
154966: 97 9a 11                 a3 = a2 << 0x11
154969: 3a 08 60 11 03           a1 = u64 [0x31160]
154974: d3 9a 0a                 a3 = a3 ^ a2
154977: 3a 09 d0 11 03           a2 = u64 [0x311d0]
154982: ca 8a 0b                 a4 = a3 * a1
154985: 3e 0a 78 12 03           u64 [0x31278] = a3
154990: d6 9b 0a                 a3 = a4 mulhu a2
154993: c9 ab 0c                 a5 = a4 - a3
154996: 98 cc 01                 a5 = a5 >> 0x1
154999: c8 ca 0a                 a3 = a3 + a5
155002: 98 ac 06                 a5 = a3 >> 0x6
155005: 33 03 65                 t1 = 0x65
155008: ca 3c 0c                 a5 = a5 * t1
155011: 3a 06 78 12 03           s1 = u64 [0x31278]
155016: c9 cb 0b                 a4 = a4 - a5
155019: 95 b2 ce                 t0 = a4 + 0xffffffffffffffce
155022: 97 6c 0d                 a5 = s1 << 0xd
155025: d3 c6 06                 s1 = s1 ^ a5
155028: 98 6c 07                 a5 = s1 >> 0x7
155031: d3 c6 06                 s1 = s1 ^ a5
155034: 97 6c 11                 a5 = s1 << 0x11
155037: d3 6c 0c                 a5 = a5 ^ s1
155040: ca 8c 0b                 a4 = a5 * a1
155043: 3e 0c 78 12 03           u64 [0x31278] = a5
155048: d6 9b 0c                 a5 = a4 mulhu a2
155051: c9 cb 06                 s1 = a4 - a5
155054: 98 66 01                 s1 = s1 >> 0x1
155057: c8 6c 0c                 a5 = a5 + s1
155060: 98 cc 06                 a5 = a5 >> 0x6
155063: ca 3c 0c                 a5 = a5 * t1
155066: 3a 06 78 12 03           s1 = u64 [0x31278]
155071: c9 cb 0b                 a4 = a4 - a5
155074: 95 bc ce                 a5 = a4 + 0xffffffffffffffce
155077: 97 6b 0d                 a4 = s1 << 0xd
155080: d3 b6 06                 s1 = s1 ^ a4
155083: 98 6b 07                 a4 = s1 >> 0x7
155086: d3 b6 06                 s1 = s1 ^ a4
155089: 97 6b 11                 a4 = s1 << 0x11
155092: d3 6b 0b                 a4 = a4 ^ s1
155095: ca 8b 0a                 a3 = a4 * a1
155098: 3e 0b 78 12 03           u64 [0x31278] = a4
155103: d6 9a 0b                 a4 = a3 mulhu a2
155106: c9 ba 06                 s1 = a3 - a4
155109: 98 66 01                 s1 = s1 >> 0x1
155112: c8 6b 0b                 a4 = a4 + s1
155115: 98 bb 06                 a4 = a4 >> 0x6
155118: ca 3b 0b                 a4 = a4 * t1
155121: 3a 06 78 12 03           s1 = u64 [0x31278]
155126: c9 ba 0a                 a3 = a3 - a4
155129: 95 aa ce                 a3 = a3 + 0xffffffffffffffce
155132: 97 6b 0d                 a4 = s1 << 0xd
155135: d3 b6 06                 s1 = s1 ^ a4
155138: 98 6b 07                 a4 = s1 >> 0x7
155141: d3 b6 06                 s1 = s1 ^ a4
155144: 97 6b 11                 a4 = s1 << 0x11
155147: d3 6b 0b                 a4 = a4 ^ s1
155150: ca 8b 08                 a1 = a4 * a1
155153: 3e 0b 78 12 03           u64 [0x31278] = a4
155158: d6 98 07                 a0 = a1 mulhu a2
155161: c9 78 09                 a2 = a1 - a0
155164: 98 99 01                 a2 = a2 >> 0x1
155167: c8 97 07                 a0 = a0 + a2
155170: 98 77 06                 a0 = a0 >> 0x6
155173: ca 37 07                 a0 = a0 * t1
155176: c9 78 08                 a1 = a1 - a0
155179: 95 87 ce                 a0 = a1 + 0xffffffffffffffce
155182: 7b 1c 60 01              u64 [sp + 0x160] = a5
155186: 7b 12 58 01              u64 [sp + 0x158] = t0
155190: 7b 1a 68 01              u64 [sp + 0x168] = a3
155194: 7b 17 70 01              u64 [sp + 0x170] = a0
155198: 95 17 58 01              a0 = sp + 0x158
155202: 50 20 68 08 d0 46 fe     ra = 2152, jump @2971
      :                          @11069 [@dyn 1076]
155209: 7b 17 20 01              u64 [sp + 0x120] = a0
155213: 7b 18 e0 01              u64 [sp + 0x1e0] = a1
155217: 95 17 20 01              a0 = sp + 0x120
155221: 7b 17 38 02              u64 [sp + 0x238] = a0
155225: 33 07 98 0c              a0 = 0xc98
155229: 7b 17 40 02              u64 [sp + 0x240] = a0
155233: 95 18 e0 01              a1 = sp + 0x1e0
155237: 7b 18 48 02              u64 [sp + 0x248] = a1
155241: 7b 17 50 02              u64 [sp + 0x250] = a0
155245: 33 07 d0 1c 01           a0 = 0x11cd0
155250: 7b 17 90 02              u64 [sp + 0x290] = a0
155254: 49 21 98 02 03           u64 [sp + 664] = 0x3
155259: 49 21 b0 02              u64 [sp + 688] = 0
155263: 95 17 38 02              a0 = sp + 0x238
155267: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
155271: 49 21 a8 02 02           u64 [sp + 680] = 0x2
155276: 95 17 08 02              a0 = sp + 0x208
155280: 95 18 90 02              a1 = sp + 0x290
155284: 50 20 6a 08 66 f1 fd     ra = 2154, jump @1503
      :                          @11070 [@dyn 1077]
155291: 82 16 10 02              s1 = u64 [sp + 0x210]
155295: 82 1b 18 02              a4 = u64 [sp + 0x218]
155299: 82 17 08 02              a0 = u64 [sp + 0x208]
155303: 7b 17 70                 u64 [sp + 0x70] = a0
155306: 33 07 02                 a0 = 0x2
155309: 33 08                    a1 = 0
155311: 33 09                    a2 = 0
155313: 64 6a                    a3 = s1
155315: 33 00 6c 08              ra = 0x86c
155319: 0a 64                    ecalli 100 // 'log'
155321: 01                       fallthrough
      :                          @11071 [@dyn 1078]
155322: 82 1c 70                 a5 = u64 [sp + 0x70]
155325: 82 17 68                 a0 = u64 [sp + 0x68]
155328: c8 c7 07                 a0 = a0 + a5
155331: 55 37 00 00 ff 0a        jump @11073 if a0 >=u 4294901760
      :                          @11072
155337: 28 ba 83 00              jump @12868
      :                          @11073
155341: 33 07 c0 22 03           a0 = 0x322c0
155346: 95 77 00 00 01           a0 = a0 + 0x10000
155351: 01                       fallthrough
      :                          @11074
155352: 82 78                    a1 = u64 [a0]
155354: c9 87 09                 a2 = a0 - a1
155357: aa 69 07                 jump @11076 if a2 == s1
      :                          @11075
155360: 28 a3 83 00              jump @12868
      :                          @11076
155364: c9 c8 09                 a2 = a1 - a5
155367: 01                       fallthrough
      :                          @11077
155368: 82 7a                    a3 = u64 [a0]
155370: ab 8a ee                 jump @11074 if a3 != a1
      :                          @11078
155373: 7b 79                    u64 [a0] = a2
155375: 33 0b                    a4 = 0
155377: 01                       fallthrough
      :                          @11079
155378: ab 8a e6                 jump @11074 if a3 != a1
      :                          @11080
155381: 28 8e 83 00              jump @12868
      :                          @11081 [@dyn 1079]
155385: 3a 08 78 12 03           a1 = u64 [0x31278]
155390: 97 89 0d                 a2 = a1 << 0xd
155393: d3 98 08                 a1 = a1 ^ a2
155396: 98 89 07                 a2 = a1 >> 0x7
155399: d3 89 09                 a2 = a2 ^ a1
155402: 97 9a 11                 a3 = a2 << 0x11
155405: 3a 08 60 11 03           a1 = u64 [0x31160]
155410: d3 9a 0a                 a3 = a3 ^ a2
155413: 3a 09 d0 11 03           a2 = u64 [0x311d0]
155418: ca 8a 0b                 a4 = a3 * a1
155421: 3e 0a 78 12 03           u64 [0x31278] = a3
155426: d6 9b 0a                 a3 = a4 mulhu a2
155429: c9 ab 0c                 a5 = a4 - a3
155432: 98 cc 01                 a5 = a5 >> 0x1
155435: c8 ca 0a                 a3 = a3 + a5
155438: 98 ac 06                 a5 = a3 >> 0x6
155441: 33 03 65                 t1 = 0x65
155444: ca 3c 0c                 a5 = a5 * t1
155447: 3a 06 78 12 03           s1 = u64 [0x31278]
155452: c9 cb 0b                 a4 = a4 - a5
155455: 95 b2 ce                 t0 = a4 + 0xffffffffffffffce
155458: 97 6c 0d                 a5 = s1 << 0xd
155461: d3 c6 06                 s1 = s1 ^ a5
155464: 98 6c 07                 a5 = s1 >> 0x7
155467: d3 c6 06                 s1 = s1 ^ a5
155470: 97 6c 11                 a5 = s1 << 0x11
155473: d3 6c 0c                 a5 = a5 ^ s1
155476: ca 8c 0b                 a4 = a5 * a1
155479: 3e 0c 78 12 03           u64 [0x31278] = a5
155484: d6 9b 0c                 a5 = a4 mulhu a2
155487: c9 cb 06                 s1 = a4 - a5
155490: 98 66 01                 s1 = s1 >> 0x1
155493: c8 6c 0c                 a5 = a5 + s1
155496: 98 cc 06                 a5 = a5 >> 0x6
155499: ca 3c 0c                 a5 = a5 * t1
155502: 3a 06 78 12 03           s1 = u64 [0x31278]
155507: c9 cb 0b                 a4 = a4 - a5
155510: 95 bc ce                 a5 = a4 + 0xffffffffffffffce
155513: 97 6b 0d                 a4 = s1 << 0xd
155516: d3 b6 06                 s1 = s1 ^ a4
155519: 98 6b 07                 a4 = s1 >> 0x7
155522: d3 b6 06                 s1 = s1 ^ a4
155525: 97 6b 11                 a4 = s1 << 0x11
155528: d3 6b 0b                 a4 = a4 ^ s1
155531: ca 8b 0a                 a3 = a4 * a1
155534: 3e 0b 78 12 03           u64 [0x31278] = a4
155539: d6 9a 0b                 a4 = a3 mulhu a2
155542: c9 ba 06                 s1 = a3 - a4
155545: 98 66 01                 s1 = s1 >> 0x1
155548: c8 6b 0b                 a4 = a4 + s1
155551: 98 bb 06                 a4 = a4 >> 0x6
155554: ca 3b 0b                 a4 = a4 * t1
155557: 3a 06 78 12 03           s1 = u64 [0x31278]
155562: c9 ba 0a                 a3 = a3 - a4
155565: 95 aa ce                 a3 = a3 + 0xffffffffffffffce
155568: 97 6b 0d                 a4 = s1 << 0xd
155571: d3 b6 06                 s1 = s1 ^ a4
155574: 98 6b 07                 a4 = s1 >> 0x7
155577: d3 b6 06                 s1 = s1 ^ a4
155580: 97 6b 11                 a4 = s1 << 0x11
155583: d3 6b 0b                 a4 = a4 ^ s1
155586: ca 8b 08                 a1 = a4 * a1
155589: 3e 0b 78 12 03           u64 [0x31278] = a4
155594: d6 98 07                 a0 = a1 mulhu a2
155597: c9 78 09                 a2 = a1 - a0
155600: 98 99 01                 a2 = a2 >> 0x1
155603: c8 97 07                 a0 = a0 + a2
155606: 98 77 06                 a0 = a0 >> 0x6
155609: ca 37 07                 a0 = a0 * t1
155612: c9 78 08                 a1 = a1 - a0
155615: 95 87 ce                 a0 = a1 + 0xffffffffffffffce
155618: 7b 1c 80 01              u64 [sp + 0x180] = a5
155622: 7b 12 78 01              u64 [sp + 0x178] = t0
155626: 7b 1a 88 01              u64 [sp + 0x188] = a3
155630: 7b 17 90 01              u64 [sp + 0x190] = a0
155634: 95 17 08 02              a0 = sp + 0x208
155638: 95 18 78 01              a1 = sp + 0x178
155642: 95 16 08 02              s1 = sp + 0x208
155646: 50 20 70 08 85 45 fe     ra = 2160, jump @2986
      :                          @11082 [@dyn 1080]
155653: 95 17 10 02              a0 = sp + 0x210
155657: 95 18 18 02              a1 = sp + 0x218
155661: 95 19 20 02              a2 = sp + 0x220
155665: 7b 16 90 02              u64 [sp + 0x290] = s1
155669: 33 0a 98 0c              a3 = 0xc98
155673: 7b 1a 98 02              u64 [sp + 0x298] = a3
155677: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
155681: 7b 1a a8 02              u64 [sp + 0x2a8] = a3
155685: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
155689: 7b 1a b8 02              u64 [sp + 0x2b8] = a3
155693: 7b 19 c0 02              u64 [sp + 0x2c0] = a2
155697: 7b 1a c8 02              u64 [sp + 0x2c8] = a3
155701: 33 07 28 1d 01           a0 = 0x11d28
155706: 7b 17 38 02              u64 [sp + 0x238] = a0
155710: 49 21 40 02 05           u64 [sp + 576] = 0x5
155715: 49 21 58 02              u64 [sp + 600] = 0
155719: 95 17 90 02              a0 = sp + 0x290
155723: 7b 17 48 02              u64 [sp + 0x248] = a0
155727: 49 21 50 02 04           u64 [sp + 592] = 0x4
155732: 95 17 e0 01              a0 = sp + 0x1e0
155736: 95 18 38 02              a1 = sp + 0x238
155740: 50 20 72 08 9e ef fd     ra = 2162, jump @1503
      :                          @11083 [@dyn 1081]
155747: 82 16 e8 01              s1 = u64 [sp + 0x1e8]
155751: 82 1b f0 01              a4 = u64 [sp + 0x1f0]
155755: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
155759: 7b 17 70                 u64 [sp + 0x70] = a0
155762: 33 07 02                 a0 = 0x2
155765: 33 08                    a1 = 0
155767: 33 09                    a2 = 0
155769: 64 6a                    a3 = s1
155771: 33 00 74 08              ra = 0x874
155775: 0a 64                    ecalli 100 // 'log'
155777: 01                       fallthrough
      :                          @11084 [@dyn 1082]
155778: 82 1c 70                 a5 = u64 [sp + 0x70]
155781: 82 17 68                 a0 = u64 [sp + 0x68]
155784: c8 c7 07                 a0 = a0 + a5
155787: 55 37 00 00 ff 0a        jump @11086 if a0 >=u 4294901760
      :                          @11085
155793: 28 f2 81 00              jump @12868
      :                          @11086
155797: 33 07 c0 22 03           a0 = 0x322c0
155802: 95 77 00 00 01           a0 = a0 + 0x10000
155807: 01                       fallthrough
      :                          @11087
155808: 82 78                    a1 = u64 [a0]
155810: c9 87 09                 a2 = a0 - a1
155813: aa 69 07                 jump @11089 if a2 == s1
      :                          @11088
155816: 28 db 81 00              jump @12868
      :                          @11089
155820: c9 c8 09                 a2 = a1 - a5
155823: 01                       fallthrough
      :                          @11090
155824: 82 7a                    a3 = u64 [a0]
155826: ab 8a ee                 jump @11087 if a3 != a1
      :                          @11091
155829: 7b 79                    u64 [a0] = a2
155831: 33 0b                    a4 = 0
155833: 01                       fallthrough
      :                          @11092
155834: ab 8a e6                 jump @11087 if a3 != a1
      :                          @11093
155837: 28 c6 81 00              jump @12868
      :                          @11094 [@dyn 1083]
155841: 3a 08 78 12 03           a1 = u64 [0x31278]
155846: 97 89 0d                 a2 = a1 << 0xd
155849: d3 98 08                 a1 = a1 ^ a2
155852: 98 89 07                 a2 = a1 >> 0x7
155855: d3 98 08                 a1 = a1 ^ a2
155858: 97 89 11                 a2 = a1 << 0x11
155861: 3a 04 60 11 03           t2 = u64 [0x31160]
155866: d3 98 08                 a1 = a1 ^ a2
155869: 3a 0c d0 11 03           a5 = u64 [0x311d0]
155874: ca 48 09                 a2 = a1 * t2
155877: 3e 08 78 12 03           u64 [0x31278] = a1
155882: d6 c9 08                 a1 = a2 mulhu a5
155885: c9 89 0a                 a3 = a2 - a1
155888: 98 aa 01                 a3 = a3 >> 0x1
155891: c8 a8 08                 a1 = a1 + a3
155894: 98 88 06                 a1 = a1 >> 0x6
155897: 96 88 65                 a1 = a1 * 0x65
155900: 3a 0a 78 12 03           a3 = u64 [0x31278]
155905: c9 89 09                 a2 = a2 - a1
155908: 95 98 ce                 a1 = a2 + 0xffffffffffffffce
155911: 97 a9 0d                 a2 = a3 << 0xd
155914: d3 a9 09                 a2 = a2 ^ a3
155917: 98 9a 07                 a3 = a2 >> 0x7
155920: d3 a9 09                 a2 = a2 ^ a3
155923: 97 9a 11                 a3 = a2 << 0x11
155926: d3 a9 09                 a2 = a2 ^ a3
155929: ca 49 06                 s1 = a2 * t2
155932: 3e 09 78 12 03           u64 [0x31278] = a2
155937: d6 c6 09                 a2 = s1 mulhu a5
155940: c9 96 0a                 a3 = s1 - a2
155943: 98 aa 01                 a3 = a3 >> 0x1
155946: c8 a9 09                 a2 = a2 + a3
155949: 98 99 06                 a2 = a2 >> 0x6
155952: 96 99 65                 a2 = a2 * 0x65
155955: 3a 07 78 12 03           a0 = u64 [0x31278]
155960: c9 96 06                 s1 = s1 - a2
155963: 95 69 ce                 a2 = s1 + 0xffffffffffffffce
155966: 97 7a 0d                 a3 = a0 << 0xd
155969: d3 a7 07                 a0 = a0 ^ a3
155972: 98 7a 07                 a3 = a0 >> 0x7
155975: d3 a7 07                 a0 = a0 ^ a3
155978: 97 7a 11                 a3 = a0 << 0x11
155981: d3 a7 07                 a0 = a0 ^ a3
155984: ca 47 06                 s1 = a0 * t2
155987: 3e 07 78 12 03           u64 [0x31278] = a0
155992: d6 c6 07                 a0 = s1 mulhu a5
155995: c9 76 0a                 a3 = s1 - a0
155998: 98 aa 01                 a3 = a3 >> 0x1
156001: c8 a7 07                 a0 = a0 + a3
156004: 98 77 06                 a0 = a0 >> 0x6
156007: 96 77 65                 a0 = a0 * 0x65
156010: 3a 0b 78 12 03           a4 = u64 [0x31278]
156015: c9 76 06                 s1 = s1 - a0
156018: 95 6a ce                 a3 = s1 + 0xffffffffffffffce
156021: 97 b7 0d                 a0 = a4 << 0xd
156024: d3 b7 07                 a0 = a0 ^ a4
156027: 98 7b 07                 a4 = a0 >> 0x7
156030: d3 b7 07                 a0 = a0 ^ a4
156033: 97 7b 11                 a4 = a0 << 0x11
156036: d3 b7 07                 a0 = a0 ^ a4
156039: ca 47 0b                 a4 = a0 * t2
156042: 3e 07 78 12 03           u64 [0x31278] = a0
156047: d6 cb 07                 a0 = a4 mulhu a5
156050: c9 7b 0c                 a5 = a4 - a0
156053: 98 cc 01                 a5 = a5 >> 0x1
156056: c8 c7 07                 a0 = a0 + a5
156059: 98 77 06                 a0 = a0 >> 0x6
156062: 96 77 65                 a0 = a0 * 0x65
156065: c9 7b 0b                 a4 = a4 - a0
156068: 95 bb ce                 a4 = a4 + 0xffffffffffffffce
156071: 95 17 90 02              a0 = sp + 0x290
156075: 50 20 78 08 9c 44 fe     ra = 2168, jump @2999
      :                          @11095 [@dyn 1084]
156082: 82 17 90 02              a0 = u64 [sp + 0x290]
156086: 82 18 98 02              a1 = u64 [sp + 0x298]
156090: 82 19 a0 02              a2 = u64 [sp + 0x2a0]
156094: 82 1a a8 02              a3 = u64 [sp + 0x2a8]
156098: 7b 17 20 01              u64 [sp + 0x120] = a0
156102: 7b 18 28 01              u64 [sp + 0x128] = a1
156106: 7b 19 e0 01              u64 [sp + 0x1e0] = a2
156110: 7b 1a e8 01              u64 [sp + 0x1e8] = a3
156114: 95 17 20 01              a0 = sp + 0x120
156118: 7b 17 38 02              u64 [sp + 0x238] = a0
156122: 33 07 9e 01              a0 = 0x19e
156126: 7b 17 40 02              u64 [sp + 0x240] = a0
156130: 95 18 e0 01              a1 = sp + 0x1e0
156134: 7b 18 48 02              u64 [sp + 0x248] = a1
156138: 7b 17 50 02              u64 [sp + 0x250] = a0
156142: 33 07 90 1d 01           a0 = 0x11d90
156147: 7b 17 90 02              u64 [sp + 0x290] = a0
156151: 49 21 98 02 02           u64 [sp + 664] = 0x2
156156: 49 21 b0 02              u64 [sp + 688] = 0
156160: 95 18 38 02              a1 = sp + 0x238
156164: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
156168: 49 21 a8 02 02           u64 [sp + 680] = 0x2
156173: 95 17 08 02              a0 = sp + 0x208
156177: 95 18 90 02              a1 = sp + 0x290
156181: 50 20 7a 08 e5 ed fd     ra = 2170, jump @1503
      :                          @11096 [@dyn 1085]
156188: 82 16 10 02              s1 = u64 [sp + 0x210]
156192: 82 1b 18 02              a4 = u64 [sp + 0x218]
156196: 82 17 08 02              a0 = u64 [sp + 0x208]
156200: 7b 17 70                 u64 [sp + 0x70] = a0
156203: 33 07 02                 a0 = 0x2
156206: 33 08                    a1 = 0
156208: 33 09                    a2 = 0
156210: 64 6a                    a3 = s1
156212: 33 00 7c 08              ra = 0x87c
156216: 0a 64                    ecalli 100 // 'log'
156218: 01                       fallthrough
      :                          @11097 [@dyn 1086]
156219: 82 1c 70                 a5 = u64 [sp + 0x70]
156222: 82 17 68                 a0 = u64 [sp + 0x68]
156225: c8 c7 07                 a0 = a0 + a5
156228: 55 37 00 00 ff 0a        jump @11099 if a0 >=u 4294901760
      :                          @11098
156234: 28 39 80 00              jump @12868
      :                          @11099
156238: 33 07 c0 22 03           a0 = 0x322c0
156243: 95 77 00 00 01           a0 = a0 + 0x10000
156248: 01                       fallthrough
      :                          @11100
156249: 82 78                    a1 = u64 [a0]
156251: c9 87 09                 a2 = a0 - a1
156254: aa 69 07                 jump @11102 if a2 == s1
      :                          @11101
156257: 28 22 80 00              jump @12868
      :                          @11102
156261: c9 c8 09                 a2 = a1 - a5
156264: 01                       fallthrough
      :                          @11103
156265: 82 7a                    a3 = u64 [a0]
156267: ab 8a ee                 jump @11100 if a3 != a1
      :                          @11104
156270: 7b 79                    u64 [a0] = a2
156272: 33 0b                    a4 = 0
156274: 01                       fallthrough
      :                          @11105
156275: ab 8a e6                 jump @11100 if a3 != a1
      :                          @11106
156278: 28 0d 80 00              jump @12868
      :                          @11107 [@dyn 1087]
156282: 3a 08 78 12 03           a1 = u64 [0x31278]
156287: 97 89 0d                 a2 = a1 << 0xd
156290: d3 89 09                 a2 = a2 ^ a1
156293: 98 9a 07                 a3 = a2 >> 0x7
156296: 3a 08 60 11 03           a1 = u64 [0x31160]
156301: d3 a9 09                 a2 = a2 ^ a3
156304: 97 9a 11                 a3 = a2 << 0x11
156307: d3 a9 09                 a2 = a2 ^ a3
156310: ca 89 0a                 a3 = a2 * a1
156313: 3e 09 78 12 03           u64 [0x31278] = a2
156318: 7b 1a b0 01              u64 [sp + 0x1b0] = a3
156322: 3a 09 78 12 03           a2 = u64 [0x31278]
156327: 33 0b                    a4 = 0
156329: 33 0a                    a3 = 0
156331: 97 9c 0d                 a5 = a2 << 0xd
156334: d3 c9 09                 a2 = a2 ^ a5
156337: 98 9c 07                 a5 = a2 >> 0x7
156340: d3 c9 09                 a2 = a2 ^ a5
156343: 97 9c 11                 a5 = a2 << 0x11
156346: d3 c9 09                 a2 = a2 ^ a5
156349: 3a 0c b8 11 03           a5 = u64 [0x311b8]
156354: ca 89 08                 a1 = a2 * a1
156357: 3e 09 78 12 03           u64 [0x31278] = a2
156362: d6 c8 07                 a0 = a1 mulhu a5
156365: 98 77 12                 a0 = a0 >> 0x12
156368: 96 77 40 42 0f           a0 = a0 * 0xf4240
156373: c9 78 03                 t1 = a1 - a0
156376: 95 38 01                 a1 = t1 + 0x1
156379: 82 12 b0 01              t0 = u64 [sp + 0x1b0]
156383: 7b 18 c8 01              u64 [sp + 0x1c8] = a1
156387: 33 0c 41                 a5 = 0x41
156390: 33 06 01                 s1 = 0x1
156393: 01                       fallthrough
      :                          @11108
156394: 83 c9 fe                 i32 a2 = a5 + 0xfffffffffffffffe
156397: 97 bb 01                 a4 = a4 << 0x1
156400: d0 92 07                 a0 = t0 >> a2
156403: 84 77 01                 a0 = a0 & 0x1
156406: d4 b7 07                 a0 = a0 | a4
156409: d8 73 0b                 a4 = t1 <u a0
156412: cf 96 09                 a2 = s1 << a2
156415: 93 b9                    a2 = 0 if a4 == 0
156417: d4 9a 0a                 a3 = a3 | a2
156420: 64 89                    a2 = a1
156422: 93 b9                    a2 = 0 if a4 == 0
156424: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
156427: c9 97 0b                 a4 = a0 - a2
156430: ac c6 dc                 jump @11108 if s1 <u a5
      :                          @11109
156433: 7b 1a 20 01              u64 [sp + 0x120] = a3
156437: 7b 1b e0 01              u64 [sp + 0x1e0] = a4
156441: 95 17 b0 01              a0 = sp + 0x1b0
156445: 7b 17 90 02              u64 [sp + 0x290] = a0
156449: 33 07 2c 0c              a0 = 0xc2c
156453: 7b 17 98 02              u64 [sp + 0x298] = a0
156457: 95 18 c8 01              a1 = sp + 0x1c8
156461: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
156465: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
156469: 95 18 20 01              a1 = sp + 0x120
156473: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
156477: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
156481: 95 18 e0 01              a1 = sp + 0x1e0
156485: 7b 18 c0 02              u64 [sp + 0x2c0] = a1
156489: 7b 17 c8 02              u64 [sp + 0x2c8] = a0
156493: 33 07 c0 1d 01           a0 = 0x11dc0
156498: 7b 17 38 02              u64 [sp + 0x238] = a0
156502: 49 21 40 02 04           u64 [sp + 576] = 0x4
156507: 49 21 58 02              u64 [sp + 600] = 0
156511: 95 18 90 02              a1 = sp + 0x290
156515: 7b 18 48 02              u64 [sp + 0x248] = a1
156519: 49 21 50 02 04           u64 [sp + 592] = 0x4
156524: 95 17 08 02              a0 = sp + 0x208
156528: 95 18 38 02              a1 = sp + 0x238
156532: 50 20 80 08 86 ec fd     ra = 2176, jump @1503
      :                          @11110 [@dyn 1088]
156539: 82 16 10 02              s1 = u64 [sp + 0x210]
156543: 82 1b 18 02              a4 = u64 [sp + 0x218]
156547: 82 17 08 02              a0 = u64 [sp + 0x208]
156551: 7b 17 70                 u64 [sp + 0x70] = a0
156554: 33 07 02                 a0 = 0x2
156557: 33 08                    a1 = 0
156559: 33 09                    a2 = 0
156561: 64 6a                    a3 = s1
156563: 33 00 82 08              ra = 0x882
156567: 0a 64                    ecalli 100 // 'log'
156569: 01                       fallthrough
      :                          @11111 [@dyn 1089]
156570: 82 1c 70                 a5 = u64 [sp + 0x70]
156573: 82 17 68                 a0 = u64 [sp + 0x68]
156576: c8 c7 07                 a0 = a0 + a5
156579: 55 37 00 00 ff 09        jump @11113 if a0 >=u 4294901760
      :                          @11112
156585: 28 da 7e                 jump @12868
      :                          @11113
156588: 33 07 c0 22 03           a0 = 0x322c0
156593: 95 77 00 00 01           a0 = a0 + 0x10000
156598: 01                       fallthrough
      :                          @11114
156599: 82 78                    a1 = u64 [a0]
156601: c9 87 09                 a2 = a0 - a1
156604: aa 69 06                 jump @11116 if a2 == s1
      :                          @11115
156607: 28 c4 7e                 jump @12868
      :                          @11116
156610: c9 c8 09                 a2 = a1 - a5
156613: 01                       fallthrough
      :                          @11117
156614: 82 7a                    a3 = u64 [a0]
156616: ab 8a ef                 jump @11114 if a3 != a1
      :                          @11118
156619: 7b 79                    u64 [a0] = a2
156621: 33 0b                    a4 = 0
156623: 01                       fallthrough
      :                          @11119
156624: ab 8a e7                 jump @11114 if a3 != a1
      :                          @11120
156627: 28 b0 7e                 jump @12868
      :                          @11121 [@dyn 1090]
156630: 3a 08 78 12 03           a1 = u64 [0x31278]
156635: 97 89 0d                 a2 = a1 << 0xd
156638: d3 98 08                 a1 = a1 ^ a2
156641: 98 89 07                 a2 = a1 >> 0x7
156644: d3 98 08                 a1 = a1 ^ a2
156647: 97 8a 11                 a3 = a1 << 0x11
156650: 3a 09 60 11 03           a2 = u64 [0x31160]
156655: d3 a8 08                 a1 = a1 ^ a3
156658: 3a 0a b8 11 03           a3 = u64 [0x311b8]
156663: ca 98 0b                 a4 = a1 * a2
156666: 3e 08 78 12 03           u64 [0x31278] = a1
156671: d6 ab 08                 a1 = a4 mulhu a3
156674: 98 88 12                 a1 = a1 >> 0x12
156677: 96 88 40 42 0f           a1 = a1 * 0xf4240
156682: c9 8b 0b                 a4 = a4 - a1
156685: 95 bb 01                 a4 = a4 + 0x1
156688: 7b 1b c8 01              u64 [sp + 0x1c8] = a4
156692: 3a 08 78 12 03           a1 = u64 [0x31278]
156697: 97 8a 0d                 a3 = a1 << 0xd
156700: d3 a8 08                 a1 = a1 ^ a3
156703: 98 8a 07                 a3 = a1 >> 0x7
156706: d3 a8 08                 a1 = a1 ^ a3
156709: 97 8a 11                 a3 = a1 << 0x11
156712: d3 8a 0a                 a3 = a3 ^ a1
156715: 3e 0a 78 12 03           u64 [0x31278] = a3
156720: 82 18 c8 01              a1 = u64 [sp + 0x1c8]
156724: ca 9a 07                 a0 = a3 * a2
156727: 7b 17 20 01              u64 [sp + 0x120] = a0
156731: 50 20 86 08 65 42 fe     ra = 2182, jump @3006
      :                          @11122 [@dyn 1091]
156738: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
156742: 95 17 20 01              a0 = sp + 0x120
156746: 7b 17 90 02              u64 [sp + 0x290] = a0
156750: 33 07 2c 0c              a0 = 0xc2c
156754: 7b 17 98 02              u64 [sp + 0x298] = a0
156758: 95 18 c8 01              a1 = sp + 0x1c8
156762: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
156766: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
156770: 95 18 e0 01              a1 = sp + 0x1e0
156774: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
156778: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
156782: 33 07 10 1e 01           a0 = 0x11e10
156787: 7b 17 38 02              u64 [sp + 0x238] = a0
156791: 49 21 40 02 03           u64 [sp + 576] = 0x3
156796: 49 21 58 02              u64 [sp + 600] = 0
156800: 95 18 90 02              a1 = sp + 0x290
156804: 7b 18 48 02              u64 [sp + 0x248] = a1
156808: 49 21 50 02 03           u64 [sp + 592] = 0x3
156813: 95 17 08 02              a0 = sp + 0x208
156817: 95 18 38 02              a1 = sp + 0x238
156821: 50 20 88 08 65 eb fd     ra = 2184, jump @1503
      :                          @11123 [@dyn 1092]
156828: 82 16 10 02              s1 = u64 [sp + 0x210]
156832: 82 1b 18 02              a4 = u64 [sp + 0x218]
156836: 82 17 08 02              a0 = u64 [sp + 0x208]
156840: 7b 17 70                 u64 [sp + 0x70] = a0
156843: 33 07 02                 a0 = 0x2
156846: 33 08                    a1 = 0
156848: 33 09                    a2 = 0
156850: 64 6a                    a3 = s1
156852: 33 00 8a 08              ra = 0x88a
156856: 0a 64                    ecalli 100 // 'log'
156858: 01                       fallthrough
      :                          @11124 [@dyn 1093]
156859: 82 1c 70                 a5 = u64 [sp + 0x70]
156862: 82 17 68                 a0 = u64 [sp + 0x68]
156865: c8 c7 07                 a0 = a0 + a5
156868: 55 37 00 00 ff 09        jump @11126 if a0 >=u 4294901760
      :                          @11125
156874: 28 b9 7d                 jump @12868
      :                          @11126
156877: 33 07 c0 22 03           a0 = 0x322c0
156882: 95 77 00 00 01           a0 = a0 + 0x10000
156887: 01                       fallthrough
      :                          @11127
156888: 82 78                    a1 = u64 [a0]
156890: c9 87 09                 a2 = a0 - a1
156893: aa 69 06                 jump @11129 if a2 == s1
      :                          @11128
156896: 28 a3 7d                 jump @12868
      :                          @11129
156899: c9 c8 09                 a2 = a1 - a5
156902: 01                       fallthrough
      :                          @11130
156903: 82 7a                    a3 = u64 [a0]
156905: ab 8a ef                 jump @11127 if a3 != a1
      :                          @11131
156908: 7b 79                    u64 [a0] = a2
156910: 33 0b                    a4 = 0
156912: 01                       fallthrough
      :                          @11132
156913: ab 8a e7                 jump @11127 if a3 != a1
      :                          @11133
156916: 28 8f 7d                 jump @12868
      :                          @11134 [@dyn 1094]
156919: 3a 08 78 12 03           a1 = u64 [0x31278]
156924: 97 89 0d                 a2 = a1 << 0xd
156927: d3 89 09                 a2 = a2 ^ a1
156930: 98 9a 07                 a3 = a2 >> 0x7
156933: 3a 08 60 11 03           a1 = u64 [0x31160]
156938: d3 a9 09                 a2 = a2 ^ a3
156941: 97 9a 11                 a3 = a2 << 0x11
156944: d3 9a 0a                 a3 = a3 ^ a2
156947: ca 8a 0b                 a4 = a3 * a1
156950: 3a 09 68 11 03           a2 = u64 [0x31168]
156955: 3e 0a 78 12 03           u64 [0x31278] = a3
156960: 98 ba 03                 a3 = a4 >> 0x3
156963: d6 9a 0a                 a3 = a3 mulhu a2
156966: 98 ac 04                 a5 = a3 >> 0x4
156969: 96 cc e8 03              a5 = a5 * 0x3e8
156973: c9 cb 0b                 a4 = a4 - a5
156976: 7b 1b b0 01              u64 [sp + 0x1b0] = a4
156980: 3a 0b 78 12 03           a4 = u64 [0x31278]
156985: 97 bc 0d                 a5 = a4 << 0xd
156988: d3 cb 0b                 a4 = a4 ^ a5
156991: 98 bc 07                 a5 = a4 >> 0x7
156994: d3 cb 0b                 a4 = a4 ^ a5
156997: 97 bc 11                 a5 = a4 << 0x11
157000: d3 cb 0b                 a4 = a4 ^ a5
157003: ca 8b 0c                 a5 = a4 * a1
157006: 3e 0b 78 12 03           u64 [0x31278] = a4
157011: 98 cb 03                 a4 = a5 >> 0x3
157014: d6 9b 0b                 a4 = a4 mulhu a2
157017: 98 bb 04                 a4 = a4 >> 0x4
157020: 96 bb e8 03              a4 = a4 * 0x3e8
157024: c9 bc 0c                 a5 = a5 - a4
157027: 7b 1c c8 01              u64 [sp + 0x1c8] = a5
157031: 3a 0b 78 12 03           a4 = u64 [0x31278]
157036: 97 bc 0d                 a5 = a4 << 0xd
157039: d3 cb 0b                 a4 = a4 ^ a5
157042: 98 bc 07                 a5 = a4 >> 0x7
157045: d3 cb 0b                 a4 = a4 ^ a5
157048: 97 bc 11                 a5 = a4 << 0x11
157051: d3 cb 0b                 a4 = a4 ^ a5
157054: ca 8b 0c                 a5 = a4 * a1
157057: 3e 0b 78 12 03           u64 [0x31278] = a4
157062: 98 c7 03                 a0 = a5 >> 0x3
157065: d6 97 07                 a0 = a0 mulhu a2
157068: 98 77 04                 a0 = a0 >> 0x4
157071: 96 79 e8 03              a2 = a0 * 0x3e8
157075: 82 17 b0 01              a0 = u64 [sp + 0x1b0]
157079: 82 18 c8 01              a1 = u64 [sp + 0x1c8]
157083: c9 9c 09                 a2 = a5 - a2
157086: 95 99 01                 a2 = a2 + 0x1
157089: 7b 19 20 01              u64 [sp + 0x120] = a2
157093: 33 00 8e 08              ra = 0x88e
157097: 95 11 98                 sp = sp + 0xffffffffffffff98
157100: 7b 10 60                 u64 [sp + 0x60] = ra
157103: 7b 15 58                 u64 [sp + 0x58] = s0
157106: 7b 16 50                 u64 [sp + 0x50] = s1
157109: 7b 19 10                 u64 [sp + 0x10] = a2
157112: 64 84                    t2 = a1
157114: 33 03 c0 22 03           t1 = 0x322c0
157119: 33 02 00 00 01           t0 = 0x10000
157124: c8 23 0a                 a3 = t1 + t0
157127: 28 19 41 fe              jump @3010
      :                          @11135 [@dyn 1095]
157131: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
157135: 95 17 b0 01              a0 = sp + 0x1b0
157139: 7b 17 90 02              u64 [sp + 0x290] = a0
157143: 33 07 2c 0c              a0 = 0xc2c
157147: 7b 17 98 02              u64 [sp + 0x298] = a0
157151: 95 18 c8 01              a1 = sp + 0x1c8
157155: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
157159: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
157163: 95 18 20 01              a1 = sp + 0x120
157167: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
157171: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
157175: 95 18 e0 01              a1 = sp + 0x1e0
157179: 7b 18 c0 02              u64 [sp + 0x2c0] = a1
157183: 7b 17 c8 02              u64 [sp + 0x2c8] = a0
157187: 33 07 40 1e 01           a0 = 0x11e40
157192: 7b 17 38 02              u64 [sp + 0x238] = a0
157196: 49 21 40 02 04           u64 [sp + 576] = 0x4
157201: 49 21 58 02              u64 [sp + 600] = 0
157205: 95 18 90 02              a1 = sp + 0x290
157209: 7b 18 48 02              u64 [sp + 0x248] = a1
157213: 49 21 50 02 04           u64 [sp + 592] = 0x4
157218: 95 17 08 02              a0 = sp + 0x208
157222: 95 18 38 02              a1 = sp + 0x238
157226: 50 20 90 08 d0 e9 fd     ra = 2192, jump @1503
      :                          @11136 [@dyn 1096]
157233: 82 16 10 02              s1 = u64 [sp + 0x210]
157237: 82 1b 18 02              a4 = u64 [sp + 0x218]
157241: 82 17 08 02              a0 = u64 [sp + 0x208]
157245: 7b 17 70                 u64 [sp + 0x70] = a0
157248: 33 07 02                 a0 = 0x2
157251: 33 08                    a1 = 0
157253: 33 09                    a2 = 0
157255: 64 6a                    a3 = s1
157257: 33 00 92 08              ra = 0x892
157261: 0a 64                    ecalli 100 // 'log'
157263: 01                       fallthrough
      :                          @11137 [@dyn 1097]
157264: 82 1c 70                 a5 = u64 [sp + 0x70]
157267: 82 17 68                 a0 = u64 [sp + 0x68]
157270: c8 c7 07                 a0 = a0 + a5
157273: 55 37 00 00 ff 09        jump @11139 if a0 >=u 4294901760
      :                          @11138
157279: 28 24 7c                 jump @12868
      :                          @11139
157282: 33 07 c0 22 03           a0 = 0x322c0
157287: 95 77 00 00 01           a0 = a0 + 0x10000
157292: 01                       fallthrough
      :                          @11140
157293: 82 78                    a1 = u64 [a0]
157295: c9 87 09                 a2 = a0 - a1
157298: aa 69 06                 jump @11142 if a2 == s1
      :                          @11141
157301: 28 0e 7c                 jump @12868
      :                          @11142
157304: c9 c8 09                 a2 = a1 - a5
157307: 01                       fallthrough
      :                          @11143
157308: 82 7a                    a3 = u64 [a0]
157310: ab 8a ef                 jump @11140 if a3 != a1
      :                          @11144
157313: 7b 79                    u64 [a0] = a2
157315: 33 0b                    a4 = 0
157317: 01                       fallthrough
      :                          @11145
157318: ab 8a e7                 jump @11140 if a3 != a1
      :                          @11146
157321: 28 fa 7b                 jump @12868
      :                          @11147 [@dyn 1098]
157324: 3a 08 78 12 03           a1 = u64 [0x31278]
157329: 97 89 0d                 a2 = a1 << 0xd
157332: d3 89 09                 a2 = a2 ^ a1
157335: 98 9a 07                 a3 = a2 >> 0x7
157338: 3a 08 60 11 03           a1 = u64 [0x31160]
157343: d3 a9 09                 a2 = a2 ^ a3
157346: 97 9a 11                 a3 = a2 << 0x11
157349: d3 9a 0a                 a3 = a3 ^ a2
157352: ca 8a 0b                 a4 = a3 * a1
157355: 3a 09 68 11 03           a2 = u64 [0x31168]
157360: 3e 0a 78 12 03           u64 [0x31278] = a3
157365: 98 ba 03                 a3 = a4 >> 0x3
157368: d6 9a 0a                 a3 = a3 mulhu a2
157371: 98 ac 04                 a5 = a3 >> 0x4
157374: 96 cc e8 03              a5 = a5 * 0x3e8
157378: c9 cb 0b                 a4 = a4 - a5
157381: 7b 1b b0 01              u64 [sp + 0x1b0] = a4
157385: 3a 0b 78 12 03           a4 = u64 [0x31278]
157390: 97 bc 0d                 a5 = a4 << 0xd
157393: d3 cb 0b                 a4 = a4 ^ a5
157396: 98 bc 07                 a5 = a4 >> 0x7
157399: d3 cb 0b                 a4 = a4 ^ a5
157402: 97 bc 11                 a5 = a4 << 0x11
157405: d3 cb 0b                 a4 = a4 ^ a5
157408: ca 8b 0c                 a5 = a4 * a1
157411: 3e 0b 78 12 03           u64 [0x31278] = a4
157416: 98 cb 03                 a4 = a5 >> 0x3
157419: d6 9b 0b                 a4 = a4 mulhu a2
157422: 98 bb 04                 a4 = a4 >> 0x4
157425: 96 bb e8 03              a4 = a4 * 0x3e8
157429: c9 bc 0c                 a5 = a5 - a4
157432: 7b 1c c8 01              u64 [sp + 0x1c8] = a5
157436: 3a 0b 78 12 03           a4 = u64 [0x31278]
157441: 97 bc 0d                 a5 = a4 << 0xd
157444: d3 cb 0b                 a4 = a4 ^ a5
157447: 98 bc 07                 a5 = a4 >> 0x7
157450: d3 cb 0b                 a4 = a4 ^ a5
157453: 97 bc 11                 a5 = a4 << 0x11
157456: d3 cb 0b                 a4 = a4 ^ a5
157459: ca 8b 08                 a1 = a4 * a1
157462: 3e 0b 78 12 03           u64 [0x31278] = a4
157467: 98 87 03                 a0 = a1 >> 0x3
157470: d6 97 07                 a0 = a0 mulhu a2
157473: 98 77 04                 a0 = a0 >> 0x4
157476: 96 77 e8 03              a0 = a0 * 0x3e8
157480: c9 78 09                 a2 = a1 - a0
157483: 95 97 01                 a0 = a2 + 0x1
157486: 7b 17 20 01              u64 [sp + 0x120] = a0
157490: 82 1c b0 01              a5 = u64 [sp + 0x1b0]
157494: 82 18 c8 01              a1 = u64 [sp + 0x1c8]
157498: 8e 9b                    a4 = a2 >u 0
157500: 33 06 41                 s1 = 0x41
157503: 33 02 01                 t0 = 0x1
157506: 01                       fallthrough
      :                          @11148
157507: cd 7c 0c                 a5 = a5 %u a0
157510: 83 69 fe                 i32 a2 = s1 + 0xfffffffffffffffe
157513: d0 98 09                 a2 = a1 >> a2
157516: 84 99 01                 a2 = a2 & 0x1
157519: 64 ba                    a3 = a4
157521: db 9c 0a                 a3 = a5 if a2 != 0
157524: ca ca 0c                 a5 = a3 * a5
157527: ca ba 09                 a2 = a3 * a4
157530: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
157533: cd 79 0b                 a4 = a2 %u a0
157536: ac 62 e3                 jump @11148 if t0 <u s1
      :                          @11149
157539: 7b 1b e0 01              u64 [sp + 0x1e0] = a4
157543: 95 17 b0 01              a0 = sp + 0x1b0
157547: 7b 17 90 02              u64 [sp + 0x290] = a0
157551: 33 07 2c 0c              a0 = 0xc2c
157555: 7b 17 98 02              u64 [sp + 0x298] = a0
157559: 95 18 c8 01              a1 = sp + 0x1c8
157563: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
157567: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
157571: 95 18 20 01              a1 = sp + 0x120
157575: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
157579: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
157583: 95 18 e0 01              a1 = sp + 0x1e0
157587: 7b 18 c0 02              u64 [sp + 0x2c0] = a1
157591: 7b 17 c8 02              u64 [sp + 0x2c8] = a0
157595: 33 07 90 1e 01           a0 = 0x11e90
157600: 7b 17 38 02              u64 [sp + 0x238] = a0
157604: 49 21 40 02 04           u64 [sp + 576] = 0x4
157609: 49 21 58 02              u64 [sp + 600] = 0
157613: 95 18 90 02              a1 = sp + 0x290
157617: 7b 18 48 02              u64 [sp + 0x248] = a1
157621: 49 21 50 02 04           u64 [sp + 592] = 0x4
157626: 95 17 08 02              a0 = sp + 0x208
157630: 95 18 38 02              a1 = sp + 0x238
157634: 50 20 96 08 38 e8 fd     ra = 2198, jump @1503
      :                          @11150 [@dyn 1099]
157641: 82 16 10 02              s1 = u64 [sp + 0x210]
157645: 82 1b 18 02              a4 = u64 [sp + 0x218]
157649: 82 17 08 02              a0 = u64 [sp + 0x208]
157653: 7b 17 70                 u64 [sp + 0x70] = a0
157656: 33 07 02                 a0 = 0x2
157659: 33 08                    a1 = 0
157661: 33 09                    a2 = 0
157663: 64 6a                    a3 = s1
157665: 33 00 98 08              ra = 0x898
157669: 0a 64                    ecalli 100 // 'log'
157671: 01                       fallthrough
      :                          @11151 [@dyn 1100]
157672: 82 1c 70                 a5 = u64 [sp + 0x70]
157675: 82 17 68                 a0 = u64 [sp + 0x68]
157678: c8 c7 07                 a0 = a0 + a5
157681: 55 37 00 00 ff 09        jump @11153 if a0 >=u 4294901760
      :                          @11152
157687: 28 8c 7a                 jump @12868
      :                          @11153
157690: 33 07 c0 22 03           a0 = 0x322c0
157695: 95 77 00 00 01           a0 = a0 + 0x10000
157700: 01                       fallthrough
      :                          @11154
157701: 82 78                    a1 = u64 [a0]
157703: c9 87 09                 a2 = a0 - a1
157706: aa 69 06                 jump @11156 if a2 == s1
      :                          @11155
157709: 28 76 7a                 jump @12868
      :                          @11156
157712: c9 c8 09                 a2 = a1 - a5
157715: 01                       fallthrough
      :                          @11157
157716: 82 7a                    a3 = u64 [a0]
157718: ab 8a ef                 jump @11154 if a3 != a1
      :                          @11158
157721: 7b 79                    u64 [a0] = a2
157723: 33 0b                    a4 = 0
157725: 01                       fallthrough
      :                          @11159
157726: ab 8a e7                 jump @11154 if a3 != a1
      :                          @11160
157729: 28 62 7a                 jump @12868
      :                          @11161 [@dyn 1101]
157732: 3a 08 78 12 03           a1 = u64 [0x31278]
157737: 97 89 0d                 a2 = a1 << 0xd
157740: d3 98 08                 a1 = a1 ^ a2
157743: 98 89 07                 a2 = a1 >> 0x7
157746: 3a 0a 60 11 03           a3 = u64 [0x31160]
157751: d3 98 08                 a1 = a1 ^ a2
157754: 97 89 11                 a2 = a1 << 0x11
157757: d3 98 08                 a1 = a1 ^ a2
157760: ca a8 09                 a2 = a1 * a3
157763: 3e 08 78 12 03           u64 [0x31278] = a1
157768: 7b 19 c8 01              u64 [sp + 0x1c8] = a2
157772: 3a 08 78 12 03           a1 = u64 [0x31278]
157777: 97 89 0d                 a2 = a1 << 0xd
157780: d3 98 08                 a1 = a1 ^ a2
157783: 98 89 07                 a2 = a1 >> 0x7
157786: d3 98 08                 a1 = a1 ^ a2
157789: 97 89 11                 a2 = a1 << 0x11
157792: d3 98 08                 a1 = a1 ^ a2
157795: 3e 08 78 12 03           u64 [0x31278] = a1
157800: 82 17 c8 01              a0 = u64 [sp + 0x1c8]
157804: ca a8 08                 a1 = a1 * a3
157807: 7b 18 20 01              u64 [sp + 0x120] = a1
157811: 33 00 9c 08              ra = 0x89c
157815: 95 11 d0                 sp = sp + 0xffffffffffffffd0
157818: 7b 10 28                 u64 [sp + 0x28] = ra
157821: 7b 15 20                 u64 [sp + 0x20] = s0
157824: 7b 16 18                 u64 [sp + 0x18] = s1
157827: 98 74 2a                 t2 = a0 >> 0x2a
157830: 98 89 2a                 a2 = a1 >> 0x2a
157833: ca 49 03                 t1 = a2 * t2
157836: 7b 13 10                 u64 [sp + 0x10] = t1
157839: 64 96                    s1 = a2
157841: 7b 19 08                 u64 [sp + 0x8] = a2
157844: 84 7b ff ff 1f           a4 = a0 & 0x1fffff
157849: 84 8a ff ff 1f           a3 = a1 & 0x1fffff
157854: ca ba 00                 ra = a3 * a4
157857: 97 77 16                 a0 = a0 << 0x16
157860: 98 7c 2b                 a5 = a0 >> 0x2b
157863: c8 b4 07                 a0 = t2 + a4
157866: c8 c7 02                 t0 = a0 + a5
157869: 97 88 16                 a1 = a1 << 0x16
157872: 98 89 2b                 a2 = a1 >> 0x2b
157875: c8 a6 06                 s1 = s1 + a3
157878: c8 96 08                 a1 = s1 + a2
157881: ca 28 08                 a1 = a1 * t0
157884: c8 30 02                 t0 = ra + t1
157887: d8 02 05                 s0 = t0 <u ra
157890: d8 28 03                 t1 = a1 <u t0
157893: c8 53 03                 t1 = t1 + s0
157896: c9 c7 07                 a0 = a0 - a5
157899: c9 96 06                 s1 = s1 - a2
157902: ca 76 07                 a0 = s1 * a0
157905: c9 28 05                 s0 = a1 - t0
157908: c9 27 07                 a0 = a0 - t0
157911: c8 57 07                 a0 = a0 + s0
157914: 98 78 3f                 a1 = a0 >> 0x3f
157917: c8 78 08                 a1 = a1 + a0
157920: 99 87 01                 a0 = a1 >>a 0x1
157923: 99 88 3f                 a1 = a1 >>a 0x3f
157926: c8 83 03                 t1 = t1 + a1
157929: d8 75 06                 s1 = s0 <u a0
157932: c8 63 03                 t1 = t1 + s1
157935: 97 44 02                 t2 = t2 << 0x2
157938: c8 4b 0b                 a4 = a4 + t2
157941: 97 cc 01                 a5 = a5 << 0x1
157944: c8 cb 0b                 a4 = a4 + a5
157947: 82 1c 08                 a5 = u64 [sp + 0x8]
157950: 97 cc 02                 a5 = a5 << 0x2
157953: c8 ca 0a                 a3 = a3 + a5
157956: 97 99 01                 a2 = a2 << 0x1
157959: c8 a9 09                 a2 = a2 + a3
157962: ca b9 09                 a2 = a2 * a4
157965: 98 7a 3e                 a3 = a0 >> 0x3e
157968: 97 88 02                 a1 = a1 << 0x2
157971: d4 a8 08                 a1 = a1 | a3
157974: 97 7a 02                 a3 = a0 << 0x2
157977: c8 0a 0a                 a3 = a3 + ra
157980: d8 0a 0b                 a4 = a3 <u ra
157983: c8 b8 08                 a1 = a1 + a4
157986: 9a 3b                    a4 = -t1
157988: c9 75 05                 s0 = s0 - a0
157991: 82 1c 10                 a5 = u64 [sp + 0x10]
157994: 97 cc 04                 a5 = a5 << 0x4
157997: c8 ca 0a                 a3 = a3 + a5
158000: d8 ca 0c                 a5 = a3 <u a5
158003: c8 c8 08                 a1 = a1 + a5
158006: 97 bb 01                 a4 = a4 << 0x1
158009: 98 5c 3f                 a5 = s0 >> 0x3f
158012: d4 cb 0b                 a4 = a4 | a5
158015: 97 5c 01                 a5 = s0 << 0x1
158018: c8 b8 08                 a1 = a1 + a4
158021: c8 ac 0c                 a5 = a5 + a3
158024: d8 ac 0a                 a3 = a5 <u a3
158027: d8 c9 0b                 a4 = a2 <u a5
158030: c8 ba 0a                 a3 = a3 + a4
158033: c8 a8 08                 a1 = a1 + a3
158036: bf c9 09                 i32 a2 = a2 - a5
158039: 9a 88                    a1 = -a1
158041: 99 88 3f                 a1 = a1 >>a 0x3f
158044: 98 88 3d                 a1 = a1 >> 0x3d
158047: c8 98 08                 a1 = a1 + a2
158050: 97 77 2a                 a0 = a0 << 0x2a
158053: d4 07 07                 a0 = a0 | ra
158056: 97 55 15                 s0 = s0 << 0x15
158059: c8 57 07                 a0 = a0 + s0
158062: 98 88 03                 a1 = a1 >> 0x3
158065: 97 88 3f                 a1 = a1 << 0x3f
158068: c8 87 07                 a0 = a0 + a1
158071: 82 10 28                 ra = u64 [sp + 0x28]
158074: 82 15 20                 s0 = u64 [sp + 0x20]
158077: 82 16 18                 s1 = u64 [sp + 0x18]
158080: 95 11 30                 sp = sp + 0x30
158083: 32 00                    ret
      :                          @11162 [@dyn 1102]
158085: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
158089: 95 17 c8 01              a0 = sp + 0x1c8
158093: 7b 17 90 02              u64 [sp + 0x290] = a0
158097: 33 07 2c 0c              a0 = 0xc2c
158101: 7b 17 98 02              u64 [sp + 0x298] = a0
158105: 95 18 20 01              a1 = sp + 0x120
158109: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
158113: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
158117: 95 18 e0 01              a1 = sp + 0x1e0
158121: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
158125: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
158129: 33 07 e0 1e 01           a0 = 0x11ee0
158134: 7b 17 38 02              u64 [sp + 0x238] = a0
158138: 49 21 40 02 03           u64 [sp + 576] = 0x3
158143: 49 21 58 02              u64 [sp + 600] = 0
158147: 95 18 90 02              a1 = sp + 0x290
158151: 7b 18 48 02              u64 [sp + 0x248] = a1
158155: 49 21 50 02 03           u64 [sp + 592] = 0x3
158160: 95 17 08 02              a0 = sp + 0x208
158164: 95 18 38 02              a1 = sp + 0x238
158168: 50 20 9e 08 22 e6 fd     ra = 2206, jump @1503
      :                          @11163 [@dyn 1103]
158175: 82 16 10 02              s1 = u64 [sp + 0x210]
158179: 82 1b 18 02              a4 = u64 [sp + 0x218]
158183: 82 17 08 02              a0 = u64 [sp + 0x208]
158187: 7b 17 70                 u64 [sp + 0x70] = a0
158190: 33 07 02                 a0 = 0x2
158193: 33 08                    a1 = 0
158195: 33 09                    a2 = 0
158197: 64 6a                    a3 = s1
158199: 33 00 a0 08              ra = 0x8a0
158203: 0a 64                    ecalli 100 // 'log'
158205: 01                       fallthrough
      :                          @11164 [@dyn 1104]
158206: 82 1c 70                 a5 = u64 [sp + 0x70]
158209: 82 17 68                 a0 = u64 [sp + 0x68]
158212: c8 c7 07                 a0 = a0 + a5
158215: 55 37 00 00 ff 09        jump @11166 if a0 >=u 4294901760
      :                          @11165
158221: 28 76 78                 jump @12868
      :                          @11166
158224: 33 07 c0 22 03           a0 = 0x322c0
158229: 95 77 00 00 01           a0 = a0 + 0x10000
158234: 01                       fallthrough
      :                          @11167
158235: 82 78                    a1 = u64 [a0]
158237: c9 87 09                 a2 = a0 - a1
158240: aa 69 06                 jump @11169 if a2 == s1
      :                          @11168
158243: 28 60 78                 jump @12868
      :                          @11169
158246: c9 c8 09                 a2 = a1 - a5
158249: 01                       fallthrough
      :                          @11170
158250: 82 7a                    a3 = u64 [a0]
158252: ab 8a ef                 jump @11167 if a3 != a1
      :                          @11171
158255: 7b 79                    u64 [a0] = a2
158257: 33 0b                    a4 = 0
158259: 01                       fallthrough
      :                          @11172
158260: ab 8a e7                 jump @11167 if a3 != a1
      :                          @11173
158263: 28 4c 78                 jump @12868
      :                          @11174 [@dyn 1105]
158266: 3a 08 78 12 03           a1 = u64 [0x31278]
158271: 97 89 0d                 a2 = a1 << 0xd
158274: d3 98 08                 a1 = a1 ^ a2
158277: 98 89 07                 a2 = a1 >> 0x7
158280: d3 98 08                 a1 = a1 ^ a2
158283: 97 89 11                 a2 = a1 << 0x11
158286: 3a 0a 60 11 03           a3 = u64 [0x31160]
158291: d3 98 08                 a1 = a1 ^ a2
158294: 3a 09 b8 11 03           a2 = u64 [0x311b8]
158299: ca a8 0b                 a4 = a1 * a3
158302: 3e 08 78 12 03           u64 [0x31278] = a1
158307: d6 9b 08                 a1 = a4 mulhu a2
158310: 98 88 12                 a1 = a1 >> 0x12
158313: 33 0c 40 42 0f           a5 = 0xf4240
158318: ca c8 08                 a1 = a1 * a5
158321: c9 8b 0b                 a4 = a4 - a1
158324: 7b 1b c8 01              u64 [sp + 0x1c8] = a4
158328: 3a 08 78 12 03           a1 = u64 [0x31278]
158333: 97 8b 0d                 a4 = a1 << 0xd
158336: d3 b8 08                 a1 = a1 ^ a4
158339: 98 8b 07                 a4 = a1 >> 0x7
158342: d3 b8 08                 a1 = a1 ^ a4
158345: 97 8b 11                 a4 = a1 << 0x11
158348: d3 b8 08                 a1 = a1 ^ a4
158351: ca a8 0a                 a3 = a1 * a3
158354: 3e 08 78 12 03           u64 [0x31278] = a1
158359: d6 9a 07                 a0 = a3 mulhu a2
158362: 98 78 12                 a1 = a0 >> 0x12
158365: 82 17 c8 01              a0 = u64 [sp + 0x1c8]
158369: ca c8 08                 a1 = a1 * a5
158372: c9 8a 08                 a1 = a3 - a1
158375: 7b 18 20 01              u64 [sp + 0x120] = a1
158379: 50 20 a4 08 cd 6b fe     ra = 2212, jump @4125
      :                          @11175 [@dyn 1106]
158386: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
158390: 95 17 c8 01              a0 = sp + 0x1c8
158394: 7b 17 90 02              u64 [sp + 0x290] = a0
158398: 33 07 2c 0c              a0 = 0xc2c
158402: 7b 17 98 02              u64 [sp + 0x298] = a0
158406: 95 18 20 01              a1 = sp + 0x120
158410: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
158414: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
158418: 95 18 e0 01              a1 = sp + 0x1e0
158422: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
158426: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
158430: 33 07 20 1f 01           a0 = 0x11f20
158435: 7b 17 38 02              u64 [sp + 0x238] = a0
158439: 49 21 40 02 03           u64 [sp + 576] = 0x3
158444: 49 21 58 02              u64 [sp + 600] = 0
158448: 95 18 90 02              a1 = sp + 0x290
158452: 7b 18 48 02              u64 [sp + 0x248] = a1
158456: 49 21 50 02 03           u64 [sp + 592] = 0x3
158461: 95 17 08 02              a0 = sp + 0x208
158465: 95 18 38 02              a1 = sp + 0x238
158469: 50 20 a6 08 f5 e4 fd     ra = 2214, jump @1503
      :                          @11176 [@dyn 1107]
158476: 82 16 10 02              s1 = u64 [sp + 0x210]
158480: 82 1b 18 02              a4 = u64 [sp + 0x218]
158484: 82 17 08 02              a0 = u64 [sp + 0x208]
158488: 7b 17 70                 u64 [sp + 0x70] = a0
158491: 33 07 02                 a0 = 0x2
158494: 33 08                    a1 = 0
158496: 33 09                    a2 = 0
158498: 64 6a                    a3 = s1
158500: 33 00 a8 08              ra = 0x8a8
158504: 0a 64                    ecalli 100 // 'log'
158506: 01                       fallthrough
      :                          @11177 [@dyn 1108]
158507: 82 1c 70                 a5 = u64 [sp + 0x70]
158510: 82 17 68                 a0 = u64 [sp + 0x68]
158513: c8 c7 07                 a0 = a0 + a5
158516: 55 37 00 00 ff 09        jump @11179 if a0 >=u 4294901760
      :                          @11178
158522: 28 49 77                 jump @12868
      :                          @11179
158525: 33 07 c0 22 03           a0 = 0x322c0
158530: 95 77 00 00 01           a0 = a0 + 0x10000
158535: 01                       fallthrough
      :                          @11180
158536: 82 78                    a1 = u64 [a0]
158538: c9 87 09                 a2 = a0 - a1
158541: aa 69 06                 jump @11182 if a2 == s1
      :                          @11181
158544: 28 33 77                 jump @12868
      :                          @11182
158547: c9 c8 09                 a2 = a1 - a5
158550: 01                       fallthrough
      :                          @11183
158551: 82 7a                    a3 = u64 [a0]
158553: ab 8a ef                 jump @11180 if a3 != a1
      :                          @11184
158556: 7b 79                    u64 [a0] = a2
158558: 33 0b                    a4 = 0
158560: 01                       fallthrough
      :                          @11185
158561: ab 8a e7                 jump @11180 if a3 != a1
      :                          @11186
158564: 28 1f 77                 jump @12868
      :                          @11187 [@dyn 1109]
158567: 3a 08 78 12 03           a1 = u64 [0x31278]
158572: 97 89 0d                 a2 = a1 << 0xd
158575: d3 98 08                 a1 = a1 ^ a2
158578: 98 89 07                 a2 = a1 >> 0x7
158581: d3 98 08                 a1 = a1 ^ a2
158584: 97 89 11                 a2 = a1 << 0x11
158587: 3a 0a 60 11 03           a3 = u64 [0x31160]
158592: d3 98 08                 a1 = a1 ^ a2
158595: 3a 09 b8 11 03           a2 = u64 [0x311b8]
158600: ca a8 0b                 a4 = a1 * a3
158603: 3e 08 78 12 03           u64 [0x31278] = a1
158608: d6 9b 08                 a1 = a4 mulhu a2
158611: 98 88 12                 a1 = a1 >> 0x12
158614: 33 0c 40 42 0f           a5 = 0xf4240
158619: ca c8 08                 a1 = a1 * a5
158622: c9 8b 0b                 a4 = a4 - a1
158625: 7b 1b c8 01              u64 [sp + 0x1c8] = a4
158629: 3a 08 78 12 03           a1 = u64 [0x31278]
158634: 97 8b 0d                 a4 = a1 << 0xd
158637: d3 b8 08                 a1 = a1 ^ a4
158640: 98 8b 07                 a4 = a1 >> 0x7
158643: d3 b8 08                 a1 = a1 ^ a4
158646: 97 8b 11                 a4 = a1 << 0x11
158649: d3 b8 08                 a1 = a1 ^ a4
158652: ca a8 0a                 a3 = a1 * a3
158655: 3e 08 78 12 03           u64 [0x31278] = a1
158660: d6 9a 08                 a1 = a3 mulhu a2
158663: 82 17 c8 01              a0 = u64 [sp + 0x1c8]
158667: 98 88 12                 a1 = a1 >> 0x12
158670: ca c8 08                 a1 = a1 * a5
158673: c9 8a 08                 a1 = a3 - a1
158676: 7b 18 20 01              u64 [sp + 0x120] = a1
158680: 52 07 06                 jump @11189 if a0 != 0
      :                          @11188
158683: 28 a1 7c                 jump @12984
      :                          @11189
158686: 88 89 01                 a2 = a1 <u 0x1
158689: d3 87 0a                 a3 = a0 ^ a1
158692: 88 aa 01                 a3 = a3 <u 0x1
158695: d4 a9 09                 a2 = a2 | a3
158698: 51 09 08                 jump @11191 if a2 == 0
      :                          @11190
158701: 64 79                    a2 = a0
158703: 28 90 7c                 jump @12985
      :                          @11191
158706: d8 78 0a                 a3 = a1 <u a0
158709: 64 79                    a2 = a0
158711: 94 a9                    a2 = 0 if a3 != 0
158713: c9 98 09                 a2 = a1 - a2
158716: 93 a8                    a1 = 0 if a3 == 0
158718: c9 87 07                 a0 = a0 - a1
158721: 64 98                    a1 = a2
158723: ab 97 ef                 jump @11191 if a0 != a2
      :                          @11192
158726: 28 79 7c                 jump @12985
      :                          @11193 [@dyn 1110]
158729: 3a 08 78 12 03           a1 = u64 [0x31278]
158734: 97 89 0d                 a2 = a1 << 0xd
158737: d3 98 08                 a1 = a1 ^ a2
158740: 98 89 07                 a2 = a1 >> 0x7
158743: d3 89 09                 a2 = a2 ^ a1
158746: 97 9a 11                 a3 = a2 << 0x11
158749: 3a 08 60 11 03           a1 = u64 [0x31160]
158754: d3 a9 09                 a2 = a2 ^ a3
158757: 3a 0a b8 11 03           a3 = u64 [0x311b8]
158762: ca 89 0b                 a4 = a2 * a1
158765: 3e 09 78 12 03           u64 [0x31278] = a2
158770: d6 ab 09                 a2 = a4 mulhu a3
158773: 98 99 12                 a2 = a2 >> 0x12
158776: 96 99 40 42 0f           a2 = a2 * 0xf4240
158781: c9 9b 0b                 a4 = a4 - a2
158784: 7b 1b c8 01              u64 [sp + 0x1c8] = a4
158788: 3a 09 78 12 03           a2 = u64 [0x31278]
158793: 97 9b 0d                 a4 = a2 << 0xd
158796: d3 b9 09                 a2 = a2 ^ a4
158799: 98 9b 07                 a4 = a2 >> 0x7
158802: d3 b9 09                 a2 = a2 ^ a4
158805: 97 9b 11                 a4 = a2 << 0x11
158808: d3 b9 09                 a2 = a2 ^ a4
158811: 3a 0b c8 11 03           a4 = u64 [0x311c8]
158816: ca 89 08                 a1 = a2 * a1
158819: 3e 09 78 12 03           u64 [0x31278] = a2
158824: d6 b8 07                 a0 = a1 mulhu a4
158827: 98 77 13                 a0 = a0 >> 0x13
158830: 96 79 3f 42 0f           a2 = a0 * 0xf423f
158835: 82 17 c8 01              a0 = u64 [sp + 0x1c8]
158839: c9 98 08                 a1 = a1 - a2
158842: 95 88 01                 a1 = a1 + 0x1
158845: 7b 18 20 01              u64 [sp + 0x120] = a1
158849: 33 00 ae 08              ra = 0x8ae
158853: 33 0b 01                 a4 = 0x1
158856: 33 09 ff                 a2 = 0xffffffffffffffff
158859: 28 24 6a fe              jump @4132
      :                          @11194 [@dyn 1111]
158863: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
158867: 95 17 c8 01              a0 = sp + 0x1c8
158871: 7b 17 90 02              u64 [sp + 0x290] = a0
158875: 33 07 2c 0c              a0 = 0xc2c
158879: 7b 17 98 02              u64 [sp + 0x298] = a0
158883: 95 18 20 01              a1 = sp + 0x120
158887: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
158891: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
158895: 95 18 e0 01              a1 = sp + 0x1e0
158899: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
158903: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
158907: 33 07 80 1f 01           a0 = 0x11f80
158912: 7b 17 38 02              u64 [sp + 0x238] = a0
158916: 49 21 40 02 03           u64 [sp + 576] = 0x3
158921: 49 21 58 02              u64 [sp + 600] = 0
158925: 95 18 90 02              a1 = sp + 0x290
158929: 7b 18 48 02              u64 [sp + 0x248] = a1
158933: 49 21 50 02 03           u64 [sp + 592] = 0x3
158938: 95 17 08 02              a0 = sp + 0x208
158942: 95 18 38 02              a1 = sp + 0x238
158946: 50 20 b0 08 18 e3 fd     ra = 2224, jump @1503
      :                          @11195 [@dyn 1112]
158953: 82 16 10 02              s1 = u64 [sp + 0x210]
158957: 82 1b 18 02              a4 = u64 [sp + 0x218]
158961: 82 17 08 02              a0 = u64 [sp + 0x208]
158965: 7b 17 70                 u64 [sp + 0x70] = a0
158968: 33 07 02                 a0 = 0x2
158971: 33 08                    a1 = 0
158973: 33 09                    a2 = 0
158975: 64 6a                    a3 = s1
158977: 33 00 b2 08              ra = 0x8b2
158981: 0a 64                    ecalli 100 // 'log'
158983: 01                       fallthrough
      :                          @11196 [@dyn 1113]
158984: 82 1c 70                 a5 = u64 [sp + 0x70]
158987: 82 17 68                 a0 = u64 [sp + 0x68]
158990: c8 c7 07                 a0 = a0 + a5
158993: 55 37 00 00 ff 09        jump @11198 if a0 >=u 4294901760
      :                          @11197
158999: 28 6c 75                 jump @12868
      :                          @11198
159002: 33 07 c0 22 03           a0 = 0x322c0
159007: 95 77 00 00 01           a0 = a0 + 0x10000
159012: 01                       fallthrough
      :                          @11199
159013: 82 78                    a1 = u64 [a0]
159015: c9 87 09                 a2 = a0 - a1
159018: aa 69 06                 jump @11201 if a2 == s1
      :                          @11200
159021: 28 56 75                 jump @12868
      :                          @11201
159024: c9 c8 09                 a2 = a1 - a5
159027: 01                       fallthrough
      :                          @11202
159028: 82 7a                    a3 = u64 [a0]
159030: ab 8a ef                 jump @11199 if a3 != a1
      :                          @11203
159033: 7b 79                    u64 [a0] = a2
159035: 33 0b                    a4 = 0
159037: 01                       fallthrough
      :                          @11204
159038: ab 8a e7                 jump @11199 if a3 != a1
      :                          @11205
159041: 28 42 75                 jump @12868
      :                          @11206 [@dyn 1114]
159044: 3a 08 78 12 03           a1 = u64 [0x31278]
159049: 97 89 0d                 a2 = a1 << 0xd
159052: d3 98 08                 a1 = a1 ^ a2
159055: 98 89 07                 a2 = a1 >> 0x7
159058: d3 89 09                 a2 = a2 ^ a1
159061: 97 9a 11                 a3 = a2 << 0x11
159064: 3a 08 60 11 03           a1 = u64 [0x31160]
159069: d3 a9 09                 a2 = a2 ^ a3
159072: 3a 0a b8 11 03           a3 = u64 [0x311b8]
159077: ca 89 0b                 a4 = a2 * a1
159080: 3e 09 78 12 03           u64 [0x31278] = a2
159085: d6 ab 09                 a2 = a4 mulhu a3
159088: 98 99 12                 a2 = a2 >> 0x12
159091: 96 99 40 42 0f           a2 = a2 * 0xf4240
159096: c9 9b 0b                 a4 = a4 - a2
159099: 95 bb 01                 a4 = a4 + 0x1
159102: 7b 1b 20 01              u64 [sp + 0x120] = a4
159106: 3a 09 78 12 03           a2 = u64 [0x31278]
159111: 97 9a 0d                 a3 = a2 << 0xd
159114: d3 a9 09                 a2 = a2 ^ a3
159117: 98 9a 07                 a3 = a2 >> 0x7
159120: d3 a9 09                 a2 = a2 ^ a3
159123: 97 9a 11                 a3 = a2 << 0x11
159126: d3 a9 09                 a2 = a2 ^ a3
159129: 3a 0a c0 11 03           a3 = u64 [0x311c0]
159134: ca 89 08                 a1 = a2 * a1
159137: 3e 09 78 12 03           u64 [0x31278] = a2
159142: d6 a8 07                 a0 = a1 mulhu a3
159145: 98 79 03                 a2 = a0 >> 0x3
159148: 84 7a f8                 a3 = a0 & 0xfffffffffffffff8
159151: 82 17 20 01              a0 = u64 [sp + 0x120]
159155: c8 a9 09                 a2 = a2 + a3
159158: c9 98 08                 a1 = a1 - a2
159161: 95 88 02                 a1 = a1 + 0x2
159164: 7b 18 e0 01              u64 [sp + 0x1e0] = a1
159168: 33 09                    a2 = 0
159170: ac 87 18                 jump @11209 if a0 <u a1
      :                          @11207
159173: 33 0a ff                 a3 = 0xffffffffffffffff
159176: 64 8b                    a4 = a1
159178: 01                       fallthrough
      :                          @11208
159179: d6 8b 0c                 a5 = a4 mulhu a1
159182: ca 8b 0b                 a4 = a4 * a1
159185: db ca 0b                 a4 = a3 if a5 != 0
159188: 83 99 01                 i32 a2 = a2 + 0x1
159191: ae b7 f4                 jump @11208 if a0 >=u a4
      :                          @11209
159194: 7a 19 c8 01              u32 [sp + 0x1c8] = a2
159198: 95 17 20 01              a0 = sp + 0x120
159202: 7b 17 90 02              u64 [sp + 0x290] = a0
159206: 33 07 2c 0c              a0 = 0xc2c
159210: 7b 17 98 02              u64 [sp + 0x298] = a0
159214: 95 18 e0 01              a1 = sp + 0x1e0
159218: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
159222: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
159226: 95 17 c8 01              a0 = sp + 0x1c8
159230: 7b 17 b0 02              u64 [sp + 0x2b0] = a0
159234: 33 07 62 0c              a0 = 0xc62
159238: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
159242: 33 07 b0 1f 01           a0 = 0x11fb0
159247: 7b 17 38 02              u64 [sp + 0x238] = a0
159251: 49 21 40 02 03           u64 [sp + 576] = 0x3
159256: 49 21 58 02              u64 [sp + 600] = 0
159260: 95 18 90 02              a1 = sp + 0x290
159264: 7b 18 48 02              u64 [sp + 0x248] = a1
159268: 49 21 50 02 03           u64 [sp + 592] = 0x3
159273: 95 17 08 02              a0 = sp + 0x208
159277: 95 18 38 02              a1 = sp + 0x238
159281: 50 20 b6 08 c9 e1 fd     ra = 2230, jump @1503
      :                          @11210 [@dyn 1115]
159288: 82 16 10 02              s1 = u64 [sp + 0x210]
159292: 82 1b 18 02              a4 = u64 [sp + 0x218]
159296: 82 17 08 02              a0 = u64 [sp + 0x208]
159300: 7b 17 70                 u64 [sp + 0x70] = a0
159303: 33 07 02                 a0 = 0x2
159306: 33 08                    a1 = 0
159308: 33 09                    a2 = 0
159310: 64 6a                    a3 = s1
159312: 33 00 b8 08              ra = 0x8b8
159316: 0a 64                    ecalli 100 // 'log'
159318: 01                       fallthrough
      :                          @11211 [@dyn 1116]
159319: 82 1c 70                 a5 = u64 [sp + 0x70]
159322: 82 17 68                 a0 = u64 [sp + 0x68]
159325: c8 c7 07                 a0 = a0 + a5
159328: 55 37 00 00 ff 09        jump @11213 if a0 >=u 4294901760
      :                          @11212
159334: 28 1d 74                 jump @12868
      :                          @11213
159337: 33 07 c0 22 03           a0 = 0x322c0
159342: 95 77 00 00 01           a0 = a0 + 0x10000
159347: 01                       fallthrough
      :                          @11214
159348: 82 78                    a1 = u64 [a0]
159350: c9 87 09                 a2 = a0 - a1
159353: aa 69 06                 jump @11216 if a2 == s1
      :                          @11215
159356: 28 07 74                 jump @12868
      :                          @11216
159359: c9 c8 09                 a2 = a1 - a5
159362: 01                       fallthrough
      :                          @11217
159363: 82 7a                    a3 = u64 [a0]
159365: ab 8a ef                 jump @11214 if a3 != a1
      :                          @11218
159368: 7b 79                    u64 [a0] = a2
159370: 33 0b                    a4 = 0
159372: 01                       fallthrough
      :                          @11219
159373: ab 8a e7                 jump @11214 if a3 != a1
      :                          @11220
159376: 28 f3 73                 jump @12868
      :                          @11221 [@dyn 1117]
159379: 3a 08 78 12 03           a1 = u64 [0x31278]
159384: 97 89 0d                 a2 = a1 << 0xd
159387: d3 98 08                 a1 = a1 ^ a2
159390: 98 89 07                 a2 = a1 >> 0x7
159393: d3 89 09                 a2 = a2 ^ a1
159396: 97 9a 11                 a3 = a2 << 0x11
159399: 3a 08 60 11 03           a1 = u64 [0x31160]
159404: d3 a9 09                 a2 = a2 ^ a3
159407: 3a 0a b8 11 03           a3 = u64 [0x311b8]
159412: ca 89 0b                 a4 = a2 * a1
159415: 3e 09 78 12 03           u64 [0x31278] = a2
159420: d6 ab 09                 a2 = a4 mulhu a3
159423: 98 99 12                 a2 = a2 >> 0x12
159426: 96 99 40 42 0f           a2 = a2 * 0xf4240
159431: c9 9b 0b                 a4 = a4 - a2
159434: 95 bb 01                 a4 = a4 + 0x1
159437: 7b 1b 20 01              u64 [sp + 0x120] = a4
159441: 3a 09 78 12 03           a2 = u64 [0x31278]
159446: 97 9a 0d                 a3 = a2 << 0xd
159449: d3 a9 09                 a2 = a2 ^ a3
159452: 98 9a 07                 a3 = a2 >> 0x7
159455: d3 a9 09                 a2 = a2 ^ a3
159458: 97 9a 11                 a3 = a2 << 0x11
159461: d3 a9 09                 a2 = a2 ^ a3
159464: 3a 0a c0 11 03           a3 = u64 [0x311c0]
159469: ca 89 08                 a1 = a2 * a1
159472: 3e 09 78 12 03           u64 [0x31278] = a2
159477: d6 a8 07                 a0 = a1 mulhu a3
159480: 98 79 03                 a2 = a0 >> 0x3
159483: 84 7a f8                 a3 = a0 & 0xfffffffffffffff8
159486: 82 17 20 01              a0 = u64 [sp + 0x120]
159490: c8 a9 09                 a2 = a2 + a3
159493: c9 98 08                 a1 = a1 - a2
159496: 95 88 02                 a1 = a1 + 0x2
159499: 7b 18 e0 01              u64 [sp + 0x1e0] = a1
159503: 33 09                    a2 = 0
159505: ac 87 0c                 jump @11223 if a0 <u a1
      :                          @11222
159508: cb 87 07                 a0 = a0 /u a1
159511: 83 99 01                 i32 a2 = a2 + 0x1
159514: ae 87 fa                 jump @11222 if a0 >=u a1
      :                          @11223
159517: 7a 19 c8 01              u32 [sp + 0x1c8] = a2
159521: 95 17 20 01              a0 = sp + 0x120
159525: 7b 17 90 02              u64 [sp + 0x290] = a0
159529: 33 07 2c 0c              a0 = 0xc2c
159533: 7b 17 98 02              u64 [sp + 0x298] = a0
159537: 95 18 e0 01              a1 = sp + 0x1e0
159541: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
159545: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
159549: 95 17 c8 01              a0 = sp + 0x1c8
159553: 7b 17 b0 02              u64 [sp + 0x2b0] = a0
159557: 33 07 62 0c              a0 = 0xc62
159561: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
159565: 33 07 e0 1f 01           a0 = 0x11fe0
159570: 7b 17 38 02              u64 [sp + 0x238] = a0
159574: 49 21 40 02 03           u64 [sp + 576] = 0x3
159579: 49 21 58 02              u64 [sp + 600] = 0
159583: 95 18 90 02              a1 = sp + 0x290
159587: 7b 18 48 02              u64 [sp + 0x248] = a1
159591: 49 21 50 02 03           u64 [sp + 592] = 0x3
159596: 95 17 08 02              a0 = sp + 0x208
159600: 95 18 38 02              a1 = sp + 0x238
159604: 50 20 bc 08 86 e0 fd     ra = 2236, jump @1503
      :                          @11224 [@dyn 1118]
159611: 82 16 10 02              s1 = u64 [sp + 0x210]
159615: 82 1b 18 02              a4 = u64 [sp + 0x218]
159619: 82 17 08 02              a0 = u64 [sp + 0x208]
159623: 7b 17 70                 u64 [sp + 0x70] = a0
159626: 33 07 02                 a0 = 0x2
159629: 33 08                    a1 = 0
159631: 33 09                    a2 = 0
159633: 64 6a                    a3 = s1
159635: 33 00 be 08              ra = 0x8be
159639: 0a 64                    ecalli 100 // 'log'
159641: 01                       fallthrough
      :                          @11225 [@dyn 1119]
159642: 82 1c 70                 a5 = u64 [sp + 0x70]
159645: 82 17 68                 a0 = u64 [sp + 0x68]
159648: c8 c7 07                 a0 = a0 + a5
159651: 55 37 00 00 ff 09        jump @11227 if a0 >=u 4294901760
      :                          @11226
159657: 28 da 72                 jump @12868
      :                          @11227
159660: 33 07 c0 22 03           a0 = 0x322c0
159665: 95 77 00 00 01           a0 = a0 + 0x10000
159670: 01                       fallthrough
      :                          @11228
159671: 82 78                    a1 = u64 [a0]
159673: c9 87 09                 a2 = a0 - a1
159676: aa 69 06                 jump @11230 if a2 == s1
      :                          @11229
159679: 28 c4 72                 jump @12868
      :                          @11230
159682: c9 c8 09                 a2 = a1 - a5
159685: 01                       fallthrough
      :                          @11231
159686: 82 7a                    a3 = u64 [a0]
159688: ab 8a ef                 jump @11228 if a3 != a1
      :                          @11232
159691: 7b 79                    u64 [a0] = a2
159693: 33 0b                    a4 = 0
159695: 01                       fallthrough
      :                          @11233
159696: ab 8a e7                 jump @11228 if a3 != a1
      :                          @11234
159699: 28 b0 72                 jump @12868
      :                          @11235 [@dyn 1120]
159702: 3a 08 78 12 03           a1 = u64 [0x31278]
159707: 33 09                    a2 = 0
159709: 97 8a 0d                 a3 = a1 << 0xd
159712: d3 a8 08                 a1 = a1 ^ a3
159715: 98 8a 07                 a3 = a1 >> 0x7
159718: d3 a8 08                 a1 = a1 ^ a3
159721: 97 8a 11                 a3 = a1 << 0x11
159724: d3 a8 08                 a1 = a1 ^ a3
159727: 3a 0a 60 11 03           a3 = u64 [0x31160]
159732: 3a 0b b8 11 03           a4 = u64 [0x311b8]
159737: 3e 08 78 12 03           u64 [0x31278] = a1
159742: ca a8 07                 a0 = a1 * a3
159745: d6 b7 08                 a1 = a0 mulhu a4
159748: 98 88 12                 a1 = a1 >> 0x12
159751: 96 88 40 42 0f           a1 = a1 * 0xf4240
159756: c9 87 07                 a0 = a0 - a1
159759: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
159763: 98 78 01                 a1 = a0 >> 0x1
159766: 95 88 01                 a1 = a1 + 0x1
159769: 33 02 ff                 t0 = 0xffffffffffffffff
159772: 01                       fallthrough
      :                          @11236
159773: c8 98 0c                 a5 = a1 + a2
159776: 98 cc 01                 a5 = a5 >> 0x1
159779: d6 cc 06                 s1 = a5 mulhu a5
159782: ca cc 0b                 a4 = a5 * a5
159785: db 62 0b                 a4 = t0 if s1 != 0
159788: aa 7b 15                 jump @11238 if a4 == a0
      :                          @11237
159791: d8 7b 06                 s1 = a4 <u a0
159794: 95 ca 01                 a3 = a5 + 0x1
159797: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
159800: da 6c 08                 a1 = a5 if s1 == 0
159803: db 6a 09                 a2 = a3 if s1 != 0
159806: ae 98 df                 jump @11236 if a1 >=u a2
      :                          @11238
159809: d3 b7 07                 a0 = a0 ^ a4
159812: 88 77 01                 a0 = a0 <u 0x1
159815: 78 17 20 01              u8 [sp + 0x120] = a0
159819: 95 17 e0 01              a0 = sp + 0x1e0
159823: 7b 17 38 02              u64 [sp + 0x238] = a0
159827: 33 07 2c 0c              a0 = 0xc2c
159831: 7b 17 40 02              u64 [sp + 0x240] = a0
159835: 95 17 20 01              a0 = sp + 0x120
159839: 7b 17 48 02              u64 [sp + 0x248] = a0
159843: 33 07 84 0c              a0 = 0xc84
159847: 7b 17 50 02              u64 [sp + 0x250] = a0
159851: 33 07 28 20 01           a0 = 0x12028
159856: 7b 17 90 02              u64 [sp + 0x290] = a0
159860: 49 21 98 02 02           u64 [sp + 664] = 0x2
159865: 49 21 b0 02              u64 [sp + 688] = 0
159869: 95 18 38 02              a1 = sp + 0x238
159873: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
159877: 49 21 a8 02 02           u64 [sp + 680] = 0x2
159882: 95 17 08 02              a0 = sp + 0x208
159886: 95 18 90 02              a1 = sp + 0x290
159890: 50 20 c2 08 68 df fd     ra = 2242, jump @1503
      :                          @11239 [@dyn 1121]
159897: 82 16 10 02              s1 = u64 [sp + 0x210]
159901: 82 1b 18 02              a4 = u64 [sp + 0x218]
159905: 82 17 08 02              a0 = u64 [sp + 0x208]
159909: 7b 17 70                 u64 [sp + 0x70] = a0
159912: 33 07 02                 a0 = 0x2
159915: 33 08                    a1 = 0
159917: 33 09                    a2 = 0
159919: 64 6a                    a3 = s1
159921: 33 00 c4 08              ra = 0x8c4
159925: 0a 64                    ecalli 100 // 'log'
159927: 01                       fallthrough
      :                          @11240 [@dyn 1122]
159928: 82 1c 70                 a5 = u64 [sp + 0x70]
159931: 82 17 68                 a0 = u64 [sp + 0x68]
159934: c8 c7 07                 a0 = a0 + a5
159937: 55 37 00 00 ff 09        jump @11242 if a0 >=u 4294901760
      :                          @11241
159943: 28 bc 71                 jump @12868
      :                          @11242
159946: 33 07 c0 22 03           a0 = 0x322c0
159951: 95 77 00 00 01           a0 = a0 + 0x10000
159956: 01                       fallthrough
      :                          @11243
159957: 82 78                    a1 = u64 [a0]
159959: c9 87 09                 a2 = a0 - a1
159962: aa 69 06                 jump @11245 if a2 == s1
      :                          @11244
159965: 28 a6 71                 jump @12868
      :                          @11245
159968: c9 c8 09                 a2 = a1 - a5
159971: 01                       fallthrough
      :                          @11246
159972: 82 7a                    a3 = u64 [a0]
159974: ab 8a ef                 jump @11243 if a3 != a1
      :                          @11247
159977: 7b 79                    u64 [a0] = a2
159979: 33 0b                    a4 = 0
159981: 01                       fallthrough
      :                          @11248
159982: ab 8a e7                 jump @11243 if a3 != a1
      :                          @11249
159985: 28 92 71                 jump @12868
      :                          @11250 [@dyn 1123]
159988: 3a 08 78 12 03           a1 = u64 [0x31278]
159993: 97 89 0d                 a2 = a1 << 0xd
159996: d3 98 08                 a1 = a1 ^ a2
159999: 98 89 07                 a2 = a1 >> 0x7
160002: d3 98 08                 a1 = a1 ^ a2
160005: 97 89 11                 a2 = a1 << 0x11
160008: d3 98 08                 a1 = a1 ^ a2
160011: 3a 09 60 11 03           a2 = u64 [0x31160]
160016: 3a 0a b8 11 03           a3 = u64 [0x311b8]
160021: 3e 08 78 12 03           u64 [0x31278] = a1
160026: ca 98 07                 a0 = a1 * a2
160029: d6 a7 08                 a1 = a0 mulhu a3
160032: 98 88 12                 a1 = a1 >> 0x12
160035: 96 88 40 42 0f           a1 = a1 * 0xf4240
160040: c9 87 07                 a0 = a0 - a1
160043: 95 78 01                 a1 = a0 + 0x1
160046: 7b 18 20 01              u64 [sp + 0x120] = a1
160050: 95 17 08 02              a0 = sp + 0x208
160054: 95 16 08 02              s1 = sp + 0x208
160058: 50 20 c8 08 b4 65 fe     ra = 2248, jump @4137
      :                          @11251 [@dyn 1124]
160065: 95 17 20 01              a0 = sp + 0x120
160069: 7b 17 38 02              u64 [sp + 0x238] = a0
160073: 33 07 2c 0c              a0 = 0xc2c
160077: 7b 17 40 02              u64 [sp + 0x240] = a0
160081: 7b 16 48 02              u64 [sp + 0x248] = s1
160085: 33 07 6c 02              a0 = 0x26c
160089: 7b 17 50 02              u64 [sp + 0x250] = a0
160093: 33 07 58 20 01           a0 = 0x12058
160098: 7b 17 90 02              u64 [sp + 0x290] = a0
160102: 49 21 98 02 02           u64 [sp + 664] = 0x2
160107: 49 21 b0 02              u64 [sp + 688] = 0
160111: 95 18 38 02              a1 = sp + 0x238
160115: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
160119: 49 21 a8 02 02           u64 [sp + 680] = 0x2
160124: 95 17 e0 01              a0 = sp + 0x1e0
160128: 95 18 90 02              a1 = sp + 0x290
160132: 50 20 ca 08 76 de fd     ra = 2250, jump @1503
      :                          @11252 [@dyn 1125]
160139: 82 16 e8 01              s1 = u64 [sp + 0x1e8]
160143: 82 1b f0 01              a4 = u64 [sp + 0x1f0]
160147: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
160151: 7b 17 70                 u64 [sp + 0x70] = a0
160154: 33 07 02                 a0 = 0x2
160157: 33 08                    a1 = 0
160159: 33 09                    a2 = 0
160161: 64 6a                    a3 = s1
160163: 33 00 cc 08              ra = 0x8cc
160167: 0a 64                    ecalli 100 // 'log'
160169: 01                       fallthrough
      :                          @11253 [@dyn 1126]
160170: 82 1c 70                 a5 = u64 [sp + 0x70]
160173: 82 17 68                 a0 = u64 [sp + 0x68]
160176: c8 c7 07                 a0 = a0 + a5
160179: 55 37 00 00 ff 09        jump @11255 if a0 >=u 4294901760
      :                          @11254
160185: 28 ca 70                 jump @12868
      :                          @11255
160188: 33 07 c0 22 03           a0 = 0x322c0
160193: 95 77 00 00 01           a0 = a0 + 0x10000
160198: 01                       fallthrough
      :                          @11256
160199: 82 78                    a1 = u64 [a0]
160201: c9 87 09                 a2 = a0 - a1
160204: aa 69 06                 jump @11258 if a2 == s1
      :                          @11257
160207: 28 b4 70                 jump @12868
      :                          @11258
160210: c9 c8 09                 a2 = a1 - a5
160213: 01                       fallthrough
      :                          @11259
160214: 82 7a                    a3 = u64 [a0]
160216: ab 8a ef                 jump @11256 if a3 != a1
      :                          @11260
160219: 7b 79                    u64 [a0] = a2
160221: 33 0b                    a4 = 0
160223: 01                       fallthrough
      :                          @11261
160224: ab 8a e7                 jump @11256 if a3 != a1
      :                          @11262
160227: 28 a0 70                 jump @12868
      :                          @11263 [@dyn 1127]
160230: 49 21 c8 02              u64 [sp + 712] = 0
160234: 49 21 c0 02              u64 [sp + 704] = 0
160238: 49 21 b8 02              u64 [sp + 696] = 0
160242: 49 21 b0 02              u64 [sp + 688] = 0
160246: 49 21 a8 02              u64 [sp + 680] = 0
160250: 49 21 a0 02              u64 [sp + 672] = 0
160254: 49 21 98 02              u64 [sp + 664] = 0
160258: 49 21 90 02              u64 [sp + 656] = 0
160262: 3a 08 78 12 03           a1 = u64 [0x31278]
160267: 97 89 0d                 a2 = a1 << 0xd
160270: d3 89 09                 a2 = a2 ^ a1
160273: 98 9a 07                 a3 = a2 >> 0x7
160276: 3a 08 60 11 03           a1 = u64 [0x31160]
160281: d3 a9 09                 a2 = a2 ^ a3
160284: 97 9a 11                 a3 = a2 << 0x11
160287: d3 a9 09                 a2 = a2 ^ a3
160290: ca 89 0a                 a3 = a2 * a1
160293: 3e 09 78 12 03           u64 [0x31278] = a2
160298: 7b 1a 90 02              u64 [sp + 0x290] = a3
160302: 3a 09 78 12 03           a2 = u64 [0x31278]
160307: 97 9a 0d                 a3 = a2 << 0xd
160310: d3 a9 09                 a2 = a2 ^ a3
160313: 98 9a 07                 a3 = a2 >> 0x7
160316: d3 a9 09                 a2 = a2 ^ a3
160319: 97 9a 11                 a3 = a2 << 0x11
160322: d3 a9 09                 a2 = a2 ^ a3
160325: ca 89 0a                 a3 = a2 * a1
160328: 3e 09 78 12 03           u64 [0x31278] = a2
160333: 7b 1a 98 02              u64 [sp + 0x298] = a3
160337: 3a 09 78 12 03           a2 = u64 [0x31278]
160342: 97 9a 0d                 a3 = a2 << 0xd
160345: d3 a9 09                 a2 = a2 ^ a3
160348: 98 9a 07                 a3 = a2 >> 0x7
160351: d3 a9 09                 a2 = a2 ^ a3
160354: 97 9a 11                 a3 = a2 << 0x11
160357: d3 a9 09                 a2 = a2 ^ a3
160360: ca 89 0a                 a3 = a2 * a1
160363: 3e 09 78 12 03           u64 [0x31278] = a2
160368: 7b 1a a0 02              u64 [sp + 0x2a0] = a3
160372: 3a 09 78 12 03           a2 = u64 [0x31278]
160377: 97 9a 0d                 a3 = a2 << 0xd
160380: d3 a9 09                 a2 = a2 ^ a3
160383: 98 9a 07                 a3 = a2 >> 0x7
160386: d3 a9 09                 a2 = a2 ^ a3
160389: 97 9a 11                 a3 = a2 << 0x11
160392: d3 a9 09                 a2 = a2 ^ a3
160395: ca 89 0a                 a3 = a2 * a1
160398: 3e 09 78 12 03           u64 [0x31278] = a2
160403: 7b 1a a8 02              u64 [sp + 0x2a8] = a3
160407: 3a 09 78 12 03           a2 = u64 [0x31278]
160412: 97 9a 0d                 a3 = a2 << 0xd
160415: d3 a9 09                 a2 = a2 ^ a3
160418: 98 9a 07                 a3 = a2 >> 0x7
160421: d3 a9 09                 a2 = a2 ^ a3
160424: 97 9a 11                 a3 = a2 << 0x11
160427: d3 a9 09                 a2 = a2 ^ a3
160430: ca 89 0a                 a3 = a2 * a1
160433: 3e 09 78 12 03           u64 [0x31278] = a2
160438: 7b 1a b0 02              u64 [sp + 0x2b0] = a3
160442: 3a 09 78 12 03           a2 = u64 [0x31278]
160447: 97 9a 0d                 a3 = a2 << 0xd
160450: d3 a9 09                 a2 = a2 ^ a3
160453: 98 9a 07                 a3 = a2 >> 0x7
160456: d3 a9 09                 a2 = a2 ^ a3
160459: 97 9a 11                 a3 = a2 << 0x11
160462: d3 a9 09                 a2 = a2 ^ a3
160465: ca 89 0a                 a3 = a2 * a1
160468: 3e 09 78 12 03           u64 [0x31278] = a2
160473: 7b 1a b8 02              u64 [sp + 0x2b8] = a3
160477: 3a 09 78 12 03           a2 = u64 [0x31278]
160482: 97 9a 0d                 a3 = a2 << 0xd
160485: d3 a9 09                 a2 = a2 ^ a3
160488: 98 9a 07                 a3 = a2 >> 0x7
160491: d3 a9 09                 a2 = a2 ^ a3
160494: 97 9a 11                 a3 = a2 << 0x11
160497: d3 a9 09                 a2 = a2 ^ a3
160500: ca 89 0a                 a3 = a2 * a1
160503: 3e 09 78 12 03           u64 [0x31278] = a2
160508: 7b 1a c0 02              u64 [sp + 0x2c0] = a3
160512: 3a 09 78 12 03           a2 = u64 [0x31278]
160517: 97 9a 0d                 a3 = a2 << 0xd
160520: d3 a9 09                 a2 = a2 ^ a3
160523: 98 9a 07                 a3 = a2 >> 0x7
160526: d3 a9 09                 a2 = a2 ^ a3
160529: 97 9a 11                 a3 = a2 << 0x11
160532: d3 a9 09                 a2 = a2 ^ a3
160535: ca 89 08                 a1 = a2 * a1
160538: 3e 09 78 12 03           u64 [0x31278] = a2
160543: 7b 18 c8 02              u64 [sp + 0x2c8] = a1
160547: 95 17 90 02              a0 = sp + 0x290
160551: 95 16 90 02              s1 = sp + 0x290
160555: 95 11 f0                 sp = sp + 0xfffffffffffffff0
160558: 7b 15 08                 u64 [sp + 0x8] = s0
160561: 7b 16                    u64 [sp] = s1
160563: 82 78                    a1 = u64 [a0]
160565: 82 79 08                 a2 = u64 [a0 + 0x8]
160568: 82 7a 10                 a3 = u64 [a0 + 0x10]
160571: 82 7b 18                 a4 = u64 [a0 + 0x18]
160574: c8 89 03                 t1 = a2 + a1
160577: c9 98 02                 t0 = a1 - a2
160580: c8 ab 04                 t2 = a4 + a3
160583: 82 78 20                 a1 = u64 [a0 + 0x20]
160586: 82 7c 28                 a5 = u64 [a0 + 0x28]
160589: 82 79 30                 a2 = u64 [a0 + 0x30]
160592: 82 75 38                 s0 = u64 [a0 + 0x38]
160595: c9 ba 0a                 a3 = a3 - a4
160598: c8 8c 06                 s1 = a5 + a1
160601: c9 c8 08                 a1 = a1 - a5
160604: c8 95 0c                 a5 = s0 + a2
160607: c9 59 09                 a2 = a2 - s0
160610: c8 34 05                 s0 = t2 + t1
160613: c9 43 03                 t1 = t1 - t2
160616: c8 2a 04                 t2 = a3 + t0
160619: c9 a2 0a                 a3 = t0 - a3
160622: c8 6c 0b                 a4 = a5 + s1
160625: c9 c6 06                 s1 = s1 - a5
160628: c8 89 0c                 a5 = a2 + a1
160631: c9 98 08                 a1 = a1 - a2
160634: c8 5b 09                 a2 = a4 + s0
160637: 7b 79                    u64 [a0] = a2
160639: c9 b5 05                 s0 = s0 - a4
160642: 7b 75 20                 u64 [a0 + 0x20] = s0
160645: c8 4c 09                 a2 = a5 + t2
160648: 7b 79 08                 u64 [a0 + 0x8] = a2
160651: c9 c4 09                 a2 = t2 - a5
160654: 7b 79 28                 u64 [a0 + 0x28] = a2
160657: c8 36 09                 a2 = s1 + t1
160660: 7b 79 10                 u64 [a0 + 0x10] = a2
160663: c9 63 09                 a2 = t1 - s1
160666: 7b 79 30                 u64 [a0 + 0x30] = a2
160669: c8 a8 09                 a2 = a1 + a3
160672: 7b 79 18                 u64 [a0 + 0x18] = a2
160675: c9 8a 0a                 a3 = a3 - a1
160678: 7b 7a 38                 u64 [a0 + 0x38] = a3
160681: 82 15 08                 s0 = u64 [sp + 0x8]
160684: 82 16                    s1 = u64 [sp]
160686: 95 11 10                 sp = sp + 0x10
160689: 7b 16 e0 01              u64 [sp + 0x1e0] = s1
160693: 33 07 8e 00              a0 = 0x8e
160697: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
160701: 33 07 80 20 01           a0 = 0x12080
160706: 7b 17 38 02              u64 [sp + 0x238] = a0
160710: 49 21 40 02 01           u64 [sp + 576] = 0x1
160715: 49 21 58 02              u64 [sp + 600] = 0
160719: 95 18 e0 01              a1 = sp + 0x1e0
160723: 7b 18 48 02              u64 [sp + 0x248] = a1
160727: 49 21 50 02 01           u64 [sp + 592] = 0x1
160732: 95 17 08 02              a0 = sp + 0x208
160736: 95 18 38 02              a1 = sp + 0x238
160740: 50 20 d0 08 16 dc fd     ra = 2256, jump @1503
      :                          @11264 [@dyn 1128]
160747: 82 16 10 02              s1 = u64 [sp + 0x210]
160751: 82 1b 18 02              a4 = u64 [sp + 0x218]
160755: 82 17 08 02              a0 = u64 [sp + 0x208]
160759: 7b 17 70                 u64 [sp + 0x70] = a0
160762: 33 07 02                 a0 = 0x2
160765: 33 08                    a1 = 0
160767: 33 09                    a2 = 0
160769: 64 6a                    a3 = s1
160771: 33 00 d2 08              ra = 0x8d2
160775: 0a 64                    ecalli 100 // 'log'
160777: 01                       fallthrough
      :                          @11265 [@dyn 1129]
160778: 82 1c 70                 a5 = u64 [sp + 0x70]
160781: 82 17 68                 a0 = u64 [sp + 0x68]
160784: c8 c7 07                 a0 = a0 + a5
160787: 55 37 00 00 ff 09        jump @11267 if a0 >=u 4294901760
      :                          @11266
160793: 28 6a 6e                 jump @12868
      :                          @11267
160796: 33 07 c0 22 03           a0 = 0x322c0
160801: 95 77 00 00 01           a0 = a0 + 0x10000
160806: 01                       fallthrough
      :                          @11268
160807: 82 78                    a1 = u64 [a0]
160809: c9 87 09                 a2 = a0 - a1
160812: aa 69 06                 jump @11270 if a2 == s1
      :                          @11269
160815: 28 54 6e                 jump @12868
      :                          @11270
160818: c9 c8 09                 a2 = a1 - a5
160821: 01                       fallthrough
      :                          @11271
160822: 82 7a                    a3 = u64 [a0]
160824: ab 8a ef                 jump @11268 if a3 != a1
      :                          @11272
160827: 7b 79                    u64 [a0] = a2
160829: 33 0b                    a4 = 0
160831: 01                       fallthrough
      :                          @11273
160832: ab 8a e7                 jump @11268 if a3 != a1
      :                          @11274
160835: 28 40 6e                 jump @12868
      :                          @11275 [@dyn 1130]
160838: 3a 08 78 12 03           a1 = u64 [0x31278]
160843: 97 89 0d                 a2 = a1 << 0xd
160846: d3 89 09                 a2 = a2 ^ a1
160849: 98 9a 07                 a3 = a2 >> 0x7
160852: 3a 08 60 11 03           a1 = u64 [0x31160]
160857: d3 a9 09                 a2 = a2 ^ a3
160860: 97 9a 11                 a3 = a2 << 0x11
160863: d3 a9 09                 a2 = a2 ^ a3
160866: ca 89 0a                 a3 = a2 * a1
160869: 3a 0b b0 11 03           a4 = u64 [0x311b0]
160874: 3e 09 78 12 03           u64 [0x31278] = a2
160879: 98 a9 02                 a2 = a3 >> 0x2
160882: d6 b9 09                 a2 = a2 mulhu a4
160885: 98 99 02                 a2 = a2 >> 0x2
160888: 33 0c 64                 a5 = 0x64
160891: ca c9 09                 a2 = a2 * a5
160894: c9 9a 0a                 a3 = a3 - a2
160897: 95 aa 01                 a3 = a3 + 0x1
160900: 7b 1a c8 01              u64 [sp + 0x1c8] = a3
160904: 3a 09 78 12 03           a2 = u64 [0x31278]
160909: 97 9a 0d                 a3 = a2 << 0xd
160912: d3 a9 09                 a2 = a2 ^ a3
160915: 98 9a 07                 a3 = a2 >> 0x7
160918: d3 a9 09                 a2 = a2 ^ a3
160921: 97 9a 11                 a3 = a2 << 0x11
160924: d3 a9 09                 a2 = a2 ^ a3
160927: ca 89 0a                 a3 = a2 * a1
160930: 3e 09 78 12 03           u64 [0x31278] = a2
160935: 98 a7 02                 a0 = a3 >> 0x2
160938: d6 b7 07                 a0 = a0 mulhu a4
160941: 98 77 02                 a0 = a0 >> 0x2
160944: ca c7 07                 a0 = a0 * a5
160947: 82 18 c8 01              a1 = u64 [sp + 0x1c8]
160951: c9 7a 09                 a2 = a3 - a0
160954: 95 99 01                 a2 = a2 + 0x1
160957: 7b 19 20 01              u64 [sp + 0x120] = a2
160961: 95 17 08 02              a0 = sp + 0x208
160965: 95 16 08 02              s1 = sp + 0x208
160969: 33 00 d6 08              ra = 0x8d6
160973: 95 11 88                 sp = sp + 0xffffffffffffff88
160976: 7b 10 70                 u64 [sp + 0x70] = ra
160979: 7b 15 68                 u64 [sp + 0x68] = s0
160982: 7b 16 60                 u64 [sp + 0x60] = s1
160985: 64 85                    s0 = a1
160987: 7b 17                    u64 [sp] = a0
160989: 33 08                    a1 = 0
160991: 49 11 30                 u64 [sp + 48] = 0
160994: 33 07 08                 a0 = 0x8
160997: 7b 17 38                 u64 [sp + 0x38] = a0
161000: 49 11 40                 u64 [sp + 64] = 0
161003: 28 12 64 fe              jump @4175
      :                          @11276 [@dyn 1131]
161007: 95 17 c8 01              a0 = sp + 0x1c8
161011: 7b 17 90 02              u64 [sp + 0x290] = a0
161015: 33 07 2c 0c              a0 = 0xc2c
161019: 7b 17 98 02              u64 [sp + 0x298] = a0
161023: 95 18 20 01              a1 = sp + 0x120
161027: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
161031: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
161035: 7b 16 b0 02              u64 [sp + 0x2b0] = s1
161039: 33 07 0c 02              a0 = 0x20c
161043: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
161047: 33 07 b0 20 01           a0 = 0x120b0
161052: 7b 17 38 02              u64 [sp + 0x238] = a0
161056: 49 21 40 02 03           u64 [sp + 576] = 0x3
161061: 49 21 58 02              u64 [sp + 600] = 0
161065: 95 18 90 02              a1 = sp + 0x290
161069: 7b 18 48 02              u64 [sp + 0x248] = a1
161073: 49 21 50 02 03           u64 [sp + 592] = 0x3
161078: 95 17 e0 01              a0 = sp + 0x1e0
161082: 95 18 38 02              a1 = sp + 0x238
161086: 50 20 d8 08 bc da fd     ra = 2264, jump @1503
      :                          @11277 [@dyn 1132]
161093: 82 18 08 02              a1 = u64 [sp + 0x208]
161097: 51 08 2e                 jump @11284 if a1 == 0
      :                          @11278
161100: 56 28 00 10 2b           jump @11284 if a1 >u 4096
      :                          @11279
161105: 82 17 10 02              a0 = u64 [sp + 0x210]
161109: 97 88 04                 a1 = a1 << 0x4
161112: 33 09 c0 22 03           a2 = 0x322c0
161117: 95 99 00 00 01           a2 = a2 + 0x10000
161122: 01                       fallthrough
      :                          @11280
161123: 82 9a                    a3 = u64 [a2]
161125: c9 a9 0b                 a4 = a2 - a3
161128: ab 7b 0f                 jump @11284 if a4 != a0
      :                          @11281
161131: c9 8a 0b                 a4 = a3 - a1
161134: 01                       fallthrough
      :                          @11282
161135: 82 9c                    a5 = u64 [a2]
161137: ab ac f2                 jump @11280 if a5 != a3
      :                          @11283
161140: 7b 9b                    u64 [a2] = a4
161142: 01                       fallthrough
      :                          @11284
161143: 82 16 e8 01              s1 = u64 [sp + 0x1e8]
161147: 82 1b f0 01              a4 = u64 [sp + 0x1f0]
161151: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
161155: 7b 17 70                 u64 [sp + 0x70] = a0
161158: 33 07 02                 a0 = 0x2
161161: 33 08                    a1 = 0
161163: 33 09                    a2 = 0
161165: 64 6a                    a3 = s1
161167: 33 00 da 08              ra = 0x8da
161171: 0a 64                    ecalli 100 // 'log'
161173: 01                       fallthrough
      :                          @11285 [@dyn 1133]
161174: 82 1c 70                 a5 = u64 [sp + 0x70]
161177: 82 17 68                 a0 = u64 [sp + 0x68]
161180: c8 c7 07                 a0 = a0 + a5
161183: 55 37 00 00 ff 09        jump @11287 if a0 >=u 4294901760
      :                          @11286
161189: 28 de 6c                 jump @12868
      :                          @11287
161192: 33 07 c0 22 03           a0 = 0x322c0
161197: 95 77 00 00 01           a0 = a0 + 0x10000
161202: 01                       fallthrough
      :                          @11288
161203: 82 78                    a1 = u64 [a0]
161205: c9 87 09                 a2 = a0 - a1
161208: aa 69 06                 jump @11290 if a2 == s1
      :                          @11289
161211: 28 c8 6c                 jump @12868
      :                          @11290
161214: c9 c8 09                 a2 = a1 - a5
161217: 01                       fallthrough
      :                          @11291
161218: 82 7a                    a3 = u64 [a0]
161220: ab 8a ef                 jump @11288 if a3 != a1
      :                          @11292
161223: 7b 79                    u64 [a0] = a2
161225: 33 0b                    a4 = 0
161227: 01                       fallthrough
      :                          @11293
161228: ab 8a e7                 jump @11288 if a3 != a1
      :                          @11294
161231: 28 b4 6c                 jump @12868
      :                          @11295 [@dyn 1134]
161234: 3a 08 78 12 03           a1 = u64 [0x31278]
161239: 97 89 0d                 a2 = a1 << 0xd
161242: d3 98 08                 a1 = a1 ^ a2
161245: 98 89 07                 a2 = a1 >> 0x7
161248: d3 98 08                 a1 = a1 ^ a2
161251: 97 89 11                 a2 = a1 << 0x11
161254: d3 98 08                 a1 = a1 ^ a2
161257: 3a 09 60 11 03           a2 = u64 [0x31160]
161262: 3a 0a 70 11 03           a3 = u64 [0x31170]
161267: 3e 08 78 12 03           u64 [0x31278] = a1
161272: ca 98 07                 a0 = a1 * a2
161275: 98 78 01                 a1 = a0 >> 0x1
161278: d6 a8 08                 a1 = a1 mulhu a3
161281: 98 88 04                 a1 = a1 >> 0x4
161284: 96 88 32                 a1 = a1 * 0x32
161287: c9 87 07                 a0 = a0 - a1
161290: 95 78 01                 a1 = a0 + 0x1
161293: 7b 18 c8 01              u64 [sp + 0x1c8] = a1
161297: 95 17 08 02              a0 = sp + 0x208
161301: 33 00 de 08              ra = 0x8de
161305: 95 11 b0                 sp = sp + 0xffffffffffffffb0
161308: 7b 10 48                 u64 [sp + 0x48] = ra
161311: 7b 15 40                 u64 [sp + 0x40] = s0
161314: 7b 16 38                 u64 [sp + 0x38] = s1
161317: 64 83                    t1 = a1
161319: 7b 17                    u64 [sp] = a0
161321: 33 09 c0 22 03           a2 = 0x322c0
161326: 33 02 00 00 01           t0 = 0x10000
161331: c8 29 0b                 a4 = a2 + t0
161334: 28 e9 63 fe              jump @4195
      :                          @11296 [@dyn 1135]
161338: 82 17 18 02              a0 = u64 [sp + 0x218]
161342: 7b 17 20 01              u64 [sp + 0x120] = a0
161346: 95 17 c8 01              a0 = sp + 0x1c8
161350: 7b 17 38 02              u64 [sp + 0x238] = a0
161354: 33 07 2c 0c              a0 = 0xc2c
161358: 7b 17 40 02              u64 [sp + 0x240] = a0
161362: 95 18 20 01              a1 = sp + 0x120
161366: 7b 18 48 02              u64 [sp + 0x248] = a1
161370: 7b 17 50 02              u64 [sp + 0x250] = a0
161374: 33 07 00 21 01           a0 = 0x12100
161379: 7b 17 90 02              u64 [sp + 0x290] = a0
161383: 49 21 98 02 02           u64 [sp + 664] = 0x2
161388: 49 21 b0 02              u64 [sp + 688] = 0
161392: 95 18 38 02              a1 = sp + 0x238
161396: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
161400: 49 21 a8 02 02           u64 [sp + 680] = 0x2
161405: 95 17 e0 01              a0 = sp + 0x1e0
161409: 95 18 90 02              a1 = sp + 0x290
161413: 50 20 e0 08 75 d9 fd     ra = 2272, jump @1503
      :                          @11297 [@dyn 1136]
161420: 82 18 08 02              a1 = u64 [sp + 0x208]
161424: 51 08 2e                 jump @11304 if a1 == 0
      :                          @11298
161427: 56 28 00 10 2b           jump @11304 if a1 >u 4096
      :                          @11299
161432: 82 17 10 02              a0 = u64 [sp + 0x210]
161436: 97 88 04                 a1 = a1 << 0x4
161439: 33 09 c0 22 03           a2 = 0x322c0
161444: 95 99 00 00 01           a2 = a2 + 0x10000
161449: 01                       fallthrough
      :                          @11300
161450: 82 9a                    a3 = u64 [a2]
161452: c9 a9 0b                 a4 = a2 - a3
161455: ab 7b 0f                 jump @11304 if a4 != a0
      :                          @11301
161458: c9 8a 0b                 a4 = a3 - a1
161461: 01                       fallthrough
      :                          @11302
161462: 82 9c                    a5 = u64 [a2]
161464: ab ac f2                 jump @11300 if a5 != a3
      :                          @11303
161467: 7b 9b                    u64 [a2] = a4
161469: 01                       fallthrough
      :                          @11304
161470: 82 16 e8 01              s1 = u64 [sp + 0x1e8]
161474: 82 1b f0 01              a4 = u64 [sp + 0x1f0]
161478: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
161482: 7b 17 70                 u64 [sp + 0x70] = a0
161485: 33 07 02                 a0 = 0x2
161488: 33 08                    a1 = 0
161490: 33 09                    a2 = 0
161492: 64 6a                    a3 = s1
161494: 33 00 e2 08              ra = 0x8e2
161498: 0a 64                    ecalli 100 // 'log'
161500: 01                       fallthrough
      :                          @11305 [@dyn 1137]
161501: 82 1c 70                 a5 = u64 [sp + 0x70]
161504: 82 17 68                 a0 = u64 [sp + 0x68]
161507: c8 c7 07                 a0 = a0 + a5
161510: 55 37 00 00 ff 09        jump @11307 if a0 >=u 4294901760
      :                          @11306
161516: 28 97 6b                 jump @12868
      :                          @11307
161519: 33 07 c0 22 03           a0 = 0x322c0
161524: 95 77 00 00 01           a0 = a0 + 0x10000
161529: 01                       fallthrough
      :                          @11308
161530: 82 78                    a1 = u64 [a0]
161532: c9 87 09                 a2 = a0 - a1
161535: aa 69 06                 jump @11310 if a2 == s1
      :                          @11309
161538: 28 81 6b                 jump @12868
      :                          @11310
161541: c9 c8 09                 a2 = a1 - a5
161544: 01                       fallthrough
      :                          @11311
161545: 82 7a                    a3 = u64 [a0]
161547: ab 8a ef                 jump @11308 if a3 != a1
      :                          @11312
161550: 7b 79                    u64 [a0] = a2
161552: 33 0b                    a4 = 0
161554: 01                       fallthrough
      :                          @11313
161555: ab 8a e7                 jump @11308 if a3 != a1
      :                          @11314
161558: 28 6d 6b                 jump @12868
      :                          @11315 [@dyn 1138]
161561: 95 17 e0 01              a0 = sp + 0x1e0
161565: 95 16 e0 01              s1 = sp + 0x1e0
161569: 33 00 e6 08              ra = 0x8e6
161573: 95 11 f8                 sp = sp + 0xfffffffffffffff8
161576: 7b 15                    u64 [sp] = s0
161578: 33 03 c0 22 03           t1 = 0x322c0
161583: 33 02 00 00 01           t0 = 0x10000
161588: c8 23 04                 t2 = t1 + t0
161591: 28 68 09 fe              jump @2280
      :                          @11316 [@dyn 1139]
161595: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
161599: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
161603: 50 20 e8 08 3c 32 fe     ra = 2280, jump @3061
      :                          @11317 [@dyn 1140]
161610: 78 17 20 01              u8 [sp + 0x120] = a0
161614: 95 17 20 01              a0 = sp + 0x120
161618: 7b 17 38 02              u64 [sp + 0x238] = a0
161622: 33 07 84 0c              a0 = 0xc84
161626: 7b 17 40 02              u64 [sp + 0x240] = a0
161630: 7b 16 48 02              u64 [sp + 0x248] = s1
161634: 33 07 34 02              a0 = 0x234
161638: 7b 17 50 02              u64 [sp + 0x250] = a0
161642: 33 07 30 21 01           a0 = 0x12130
161647: 7b 17 90 02              u64 [sp + 0x290] = a0
161651: 49 21 98 02 02           u64 [sp + 664] = 0x2
161656: 49 21 b0 02              u64 [sp + 688] = 0
161660: 95 18 38 02              a1 = sp + 0x238
161664: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
161668: 49 21 a8 02 02           u64 [sp + 680] = 0x2
161673: 95 17 08 02              a0 = sp + 0x208
161677: 95 18 90 02              a1 = sp + 0x290
161681: 50 20 ea 08 69 d8 fd     ra = 2282, jump @1503
      :                          @11318 [@dyn 1141]
161688: 82 16 10 02              s1 = u64 [sp + 0x210]
161692: 82 1b 18 02              a4 = u64 [sp + 0x218]
161696: 82 17 08 02              a0 = u64 [sp + 0x208]
161700: 7b 17 70                 u64 [sp + 0x70] = a0
161703: 33 07 02                 a0 = 0x2
161706: 33 08                    a1 = 0
161708: 33 09                    a2 = 0
161710: 64 6a                    a3 = s1
161712: 33 00 ec 08              ra = 0x8ec
161716: 0a 64                    ecalli 100 // 'log'
161718: 01                       fallthrough
      :                          @11319 [@dyn 1142]
161719: 82 1c 70                 a5 = u64 [sp + 0x70]
161722: 82 17 68                 a0 = u64 [sp + 0x68]
161725: c8 c7 07                 a0 = a0 + a5
161728: 53 37 00 00 ff 25        jump @11325 if a0 <u 4294901760
      :                          @11320
161734: 33 07 c0 22 03           a0 = 0x322c0
161739: 95 77 00 00 01           a0 = a0 + 0x10000
161744: 01                       fallthrough
      :                          @11321
161745: 82 78                    a1 = u64 [a0]
161747: c9 87 09                 a2 = a0 - a1
161750: ab 69 0f                 jump @11325 if a2 != s1
      :                          @11322
161753: c9 c8 09                 a2 = a1 - a5
161756: 01                       fallthrough
      :                          @11323
161757: 82 7a                    a3 = u64 [a0]
161759: ab 8a f2                 jump @11321 if a3 != a1
      :                          @11324
161762: 7b 79                    u64 [a0] = a2
161764: 01                       fallthrough
      :                          @11325
161765: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
161769: 52 08 06                 jump @11327 if a1 != 0
      :                          @11326
161772: 28 97 6a                 jump @12868
      :                          @11327
161775: 54 28 00 20 08           jump @11329 if a1 <=u 8192
      :                          @11328
161780: 28 8f 6a                 jump @12868
      :                          @11329
161783: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
161787: 97 88 03                 a1 = a1 << 0x3
161790: 33 09 c0 22 03           a2 = 0x322c0
161795: 95 99 00 00 01           a2 = a2 + 0x10000
161800: 01                       fallthrough
      :                          @11330
161801: 82 9a                    a3 = u64 [a2]
161803: c9 a9 0b                 a4 = a2 - a3
161806: aa 7b 06                 jump @11332 if a4 == a0
      :                          @11331
161809: 28 72 6a                 jump @12868
      :                          @11332
161812: c9 8a 0b                 a4 = a3 - a1
161815: 01                       fallthrough
      :                          @11333
161816: 82 9c                    a5 = u64 [a2]
161818: ab ac ef                 jump @11330 if a5 != a3
      :                          @11334
161821: 7b 9b                    u64 [a2] = a4
161823: 33 06                    s1 = 0
161825: 01                       fallthrough
      :                          @11335
161826: ab ac e7                 jump @11330 if a5 != a3
      :                          @11336
161829: 28 5e 6a                 jump @12868
      :                          @11337 [@dyn 1143]
161832: 95 17 e0 01              a0 = sp + 0x1e0
161836: 33 08 04                 a1 = 0x4
161839: 95 16 e0 01              s1 = sp + 0x1e0
161843: 50 20 f0 08 60 06 fe     ra = 2288, jump @2246
      :                          @11338 [@dyn 1144]
161850: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
161854: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
161858: 33 00 f2 08              ra = 0x8f2
161862: 33 0a                    a3 = 0
161864: 97 89 03                 a2 = a1 << 0x3
161867: c8 97 07                 a0 = a0 + a2
161870: 28 aa 31 fe              jump @3075
      :                          @11339 [@dyn 1145]
161874: 78 17 20 01              u8 [sp + 0x120] = a0
161878: 95 17 20 01              a0 = sp + 0x120
161882: 7b 17 38 02              u64 [sp + 0x238] = a0
161886: 33 07 84 0c              a0 = 0xc84
161890: 7b 17 40 02              u64 [sp + 0x240] = a0
161894: 7b 16 48 02              u64 [sp + 0x248] = s1
161898: 33 07 34 02              a0 = 0x234
161902: 7b 17 50 02              u64 [sp + 0x250] = a0
161906: 33 07 58 21 01           a0 = 0x12158
161911: 7b 17 90 02              u64 [sp + 0x290] = a0
161915: 49 21 98 02 02           u64 [sp + 664] = 0x2
161920: 49 21 b0 02              u64 [sp + 688] = 0
161924: 95 18 38 02              a1 = sp + 0x238
161928: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
161932: 49 21 a8 02 02           u64 [sp + 680] = 0x2
161937: 95 17 08 02              a0 = sp + 0x208
161941: 95 18 90 02              a1 = sp + 0x290
161945: 50 20 f4 08 61 d7 fd     ra = 2292, jump @1503
      :                          @11340 [@dyn 1146]
161952: 82 16 10 02              s1 = u64 [sp + 0x210]
161956: 82 1b 18 02              a4 = u64 [sp + 0x218]
161960: 82 17 08 02              a0 = u64 [sp + 0x208]
161964: 7b 17 70                 u64 [sp + 0x70] = a0
161967: 33 07 02                 a0 = 0x2
161970: 33 08                    a1 = 0
161972: 33 09                    a2 = 0
161974: 64 6a                    a3 = s1
161976: 33 00 f6 08              ra = 0x8f6
161980: 0a 64                    ecalli 100 // 'log'
161982: 01                       fallthrough
      :                          @11341 [@dyn 1147]
161983: 82 1c 70                 a5 = u64 [sp + 0x70]
161986: 82 17 68                 a0 = u64 [sp + 0x68]
161989: c8 c7 07                 a0 = a0 + a5
161992: 53 37 00 00 ff 25        jump @11347 if a0 <u 4294901760
      :                          @11342
161998: 33 07 c0 22 03           a0 = 0x322c0
162003: 95 77 00 00 01           a0 = a0 + 0x10000
162008: 01                       fallthrough
      :                          @11343
162009: 82 78                    a1 = u64 [a0]
162011: c9 87 09                 a2 = a0 - a1
162014: ab 69 0f                 jump @11347 if a2 != s1
      :                          @11344
162017: c9 c8 09                 a2 = a1 - a5
162020: 01                       fallthrough
      :                          @11345
162021: 82 7a                    a3 = u64 [a0]
162023: ab 8a f2                 jump @11343 if a3 != a1
      :                          @11346
162026: 7b 79                    u64 [a0] = a2
162028: 01                       fallthrough
      :                          @11347
162029: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
162033: 52 08 06                 jump @11349 if a1 != 0
      :                          @11348
162036: 28 8f 69                 jump @12868
      :                          @11349
162039: 54 28 00 20 08           jump @11351 if a1 <=u 8192
      :                          @11350
162044: 28 87 69                 jump @12868
      :                          @11351
162047: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
162051: 97 88 03                 a1 = a1 << 0x3
162054: 33 09 c0 22 03           a2 = 0x322c0
162059: 95 99 00 00 01           a2 = a2 + 0x10000
162064: 01                       fallthrough
      :                          @11352
162065: 82 9a                    a3 = u64 [a2]
162067: c9 a9 0b                 a4 = a2 - a3
162070: aa 7b 06                 jump @11354 if a4 == a0
      :                          @11353
162073: 28 6a 69                 jump @12868
      :                          @11354
162076: c9 8a 0b                 a4 = a3 - a1
162079: 01                       fallthrough
      :                          @11355
162080: 82 9c                    a5 = u64 [a2]
162082: ab ac ef                 jump @11352 if a5 != a3
      :                          @11356
162085: 7b 9b                    u64 [a2] = a4
162087: 33 06                    s1 = 0
162089: 01                       fallthrough
      :                          @11357
162090: ab ac e7                 jump @11352 if a5 != a3
      :                          @11358
162093: 28 56 69                 jump @12868
      :                          @11359 [@dyn 1148]
162096: 95 17 20 01              a0 = sp + 0x120
162100: 33 00 fa 08              ra = 0x8fa
162104: 95 11 f8                 sp = sp + 0xfffffffffffffff8
162107: 7b 15                    u64 [sp] = s0
162109: 33 03 c0 22 03           t1 = 0x322c0
162114: 33 02 00 00 01           t0 = 0x10000
162119: c8 23 04                 t2 = t1 + t0
162122: 28 02 07 fe              jump @2274
      :                          @11360 [@dyn 1149]
162126: 3a 07 78 12 03           a0 = u64 [0x31278]
162131: 97 78 0d                 a1 = a0 << 0xd
162134: d3 87 07                 a0 = a0 ^ a1
162137: 98 78 07                 a1 = a0 >> 0x7
162140: d3 87 07                 a0 = a0 ^ a1
162143: 97 7a 11                 a3 = a0 << 0x11
162146: d3 7a 0a                 a3 = a3 ^ a0
162149: 3e 0a 78 12 03           u64 [0x31278] = a3
162154: 82 18 30 01              a1 = u64 [sp + 0x130]
162158: 56 18 04 07              jump @11362 if a1 >u 4
      :                          @11361
162162: 28 1a 7b                 jump @13229
      :                          @11362
162165: 3a 07 60 11 03           a0 = u64 [0x31160]
162170: 82 18 28 01              a1 = u64 [sp + 0x128]
162174: ca 7a 0a                 a3 = a3 * a0
162177: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
162187: d6 ba 0b                 a4 = a3 mulhu a4
162190: 98 bc 02                 a5 = a4 >> 0x2
162193: 84 bb fc                 a4 = a4 & 0xfffffffffffffffc
162196: c8 cb 0b                 a4 = a4 + a5
162199: c9 ba 0a                 a3 = a3 - a4
162202: 97 aa 03                 a3 = a3 << 0x3
162205: c8 8a 0a                 a3 = a3 + a1
162208: 82 ab                    a4 = u64 [a3]
162210: 82 8c 20                 a5 = u64 [a1 + 0x20]
162213: 7b 8b 20                 u64 [a1 + 0x20] = a4
162216: 7b ac                    u64 [a3] = a5
162218: 3a 08 78 12 03           a1 = u64 [0x31278]
162223: 97 8a 0d                 a3 = a1 << 0xd
162226: d3 a8 08                 a1 = a1 ^ a3
162229: 98 8a 07                 a3 = a1 >> 0x7
162232: d3 8a 0a                 a3 = a3 ^ a1
162235: 97 a8 11                 a1 = a3 << 0x11
162238: d3 a8 08                 a1 = a1 ^ a3
162241: 3e 08 78 12 03           u64 [0x31278] = a1
162246: 82 18 30 01              a1 = u64 [sp + 0x130]
162250: 55 18 04 07              jump @11364 if a1 >=u 4
      :                          @11363
162254: 28 f6 79                 jump @13210
      :                          @11364
162257: 82 18 28 01              a1 = u64 [sp + 0x128]
162261: 84 aa 03                 a3 = a3 & 0x3
162264: 97 aa 03                 a3 = a3 << 0x3
162267: c8 8a 0a                 a3 = a3 + a1
162270: 82 a9                    a2 = u64 [a3]
162272: 82 8b 18                 a4 = u64 [a1 + 0x18]
162275: 7b 89 18                 u64 [a1 + 0x18] = a2
162278: 7b ab                    u64 [a3] = a4
162280: 3a 08 78 12 03           a1 = u64 [0x31278]
162285: 97 8a 0d                 a3 = a1 << 0xd
162288: d3 a8 08                 a1 = a1 ^ a3
162291: 98 8a 07                 a3 = a1 >> 0x7
162294: d3 a8 08                 a1 = a1 ^ a3
162297: 97 8a 11                 a3 = a1 << 0x11
162300: d3 8a 0a                 a3 = a3 ^ a1
162303: 3e 0a 78 12 03           u64 [0x31278] = a3
162308: 82 18 30 01              a1 = u64 [sp + 0x130]
162312: 55 18 03 07              jump @11366 if a1 >=u 3
      :                          @11365
162316: 28 b9 79                 jump @13211
      :                          @11366
162319: 82 18 28 01              a1 = u64 [sp + 0x128]
162323: ca 7a 07                 a0 = a3 * a0
162326: 14 0a ab aa aa aa aa aa aa aa a3 = 0xaaaaaaaaaaaaaaab
162336: d6 a7 0a                 a3 = a0 mulhu a3
162339: 98 ab 01                 a4 = a3 >> 0x1
162342: 84 aa fe                 a3 = a3 & 0xfffffffffffffffe
162345: c8 ba 0a                 a3 = a3 + a4
162348: c9 a7 07                 a0 = a0 - a3
162351: 97 77 03                 a0 = a0 << 0x3
162354: c8 87 07                 a0 = a0 + a1
162357: 82 7a                    a3 = u64 [a0]
162359: 82 8b 10                 a4 = u64 [a1 + 0x10]
162362: 7b 8a 10                 u64 [a1 + 0x10] = a3
162365: 7b 7b                    u64 [a0] = a4
162367: 3a 07 78 12 03           a0 = u64 [0x31278]
162372: 97 78 0d                 a1 = a0 << 0xd
162375: d3 87 07                 a0 = a0 ^ a1
162378: 98 78 07                 a1 = a0 >> 0x7
162381: d3 87 07                 a0 = a0 ^ a1
162384: 97 78 11                 a1 = a0 << 0x11
162387: d3 78 08                 a1 = a1 ^ a0
162390: 3e 08 78 12 03           u64 [0x31278] = a1
162395: 82 18 30 01              a1 = u64 [sp + 0x130]
162399: 55 18 02 07              jump @11368 if a1 >=u 2
      :                          @11367
162403: 28 60 79                 jump @13209
      :                          @11368
162406: 82 18 28 01              a1 = u64 [sp + 0x128]
162410: 84 77 01                 a0 = a0 & 0x1
162413: 97 77 03                 a0 = a0 << 0x3
162416: c8 87 07                 a0 = a0 + a1
162419: 82 79                    a2 = u64 [a0]
162421: 82 8a 08                 a3 = u64 [a1 + 0x8]
162424: 7b 89 08                 u64 [a1 + 0x8] = a2
162427: 7b 7a                    u64 [a0] = a3
162429: 82 17 28 01              a0 = u64 [sp + 0x128]
162433: 82 18 30 01              a1 = u64 [sp + 0x130]
162437: 50 20 fc 08 bd 2f fe     ra = 2300, jump @3083
      :                          @11369 [@dyn 1150]
162444: 64 78                    a1 = a0
162446: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
162450: 95 17 e0 01              a0 = sp + 0x1e0
162454: 95 16 e0 01              s1 = sp + 0x1e0
162458: 33 00 fe 08              ra = 0x8fe
162462: 95 11 d0                 sp = sp + 0xffffffffffffffd0
162465: 7b 10 28                 u64 [sp + 0x28] = ra
162468: 7b 15 20                 u64 [sp + 0x20] = s0
162471: 7b 16 18                 u64 [sp + 0x18] = s1
162474: 64 74                    t2 = a0
162476: 33 07 c0 22 03           a0 = 0x322c0
162481: 33 03 c0 22 03           t1 = 0x322c0
162486: 33 02 00 00 01           t0 = 0x10000
162491: c8 23 0a                 a3 = t1 + t0
162494: 28 e6 30 fe              jump @3118
      :                          @11370 [@dyn 1151]
162498: 95 17 20 01              a0 = sp + 0x120
162502: 7b 17 90 02              u64 [sp + 0x290] = a0
162506: 33 07 34 02              a0 = 0x234
162510: 7b 17 98 02              u64 [sp + 0x298] = a0
162514: 95 18 c8 01              a1 = sp + 0x1c8
162518: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
162522: 33 08 2c 0c              a1 = 0xc2c
162526: 7b 18 a8 02              u64 [sp + 0x2a8] = a1
162530: 7b 16 b0 02              u64 [sp + 0x2b0] = s1
162534: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
162538: 33 07 88 21 01           a0 = 0x12188
162543: 7b 17 38 02              u64 [sp + 0x238] = a0
162547: 49 21 40 02 03           u64 [sp + 576] = 0x3
162552: 49 21 58 02              u64 [sp + 600] = 0
162556: 95 18 90 02              a1 = sp + 0x290
162560: 7b 18 48 02              u64 [sp + 0x248] = a1
162564: 49 21 50 02 03           u64 [sp + 592] = 0x3
162569: 95 17 08 02              a0 = sp + 0x208
162573: 95 18 38 02              a1 = sp + 0x238
162577: 50 20 00 09 e9 d4 fd     ra = 2304, jump @1503
      :                          @11371 [@dyn 1152]
162584: 82 16 10 02              s1 = u64 [sp + 0x210]
162588: 82 1b 18 02              a4 = u64 [sp + 0x218]
162592: 82 17 08 02              a0 = u64 [sp + 0x208]
162596: 7b 17 70                 u64 [sp + 0x70] = a0
162599: 33 07 02                 a0 = 0x2
162602: 33 08                    a1 = 0
162604: 33 09                    a2 = 0
162606: 64 6a                    a3 = s1
162608: 33 00 02 09              ra = 0x902
162612: 0a 64                    ecalli 100 // 'log'
162614: 01                       fallthrough
      :                          @11372 [@dyn 1153]
162615: 82 1c 70                 a5 = u64 [sp + 0x70]
162618: 82 17 68                 a0 = u64 [sp + 0x68]
162621: c8 c7 07                 a0 = a0 + a5
162624: 53 37 00 00 ff 25        jump @11378 if a0 <u 4294901760
      :                          @11373
162630: 33 07 c0 22 03           a0 = 0x322c0
162635: 95 77 00 00 01           a0 = a0 + 0x10000
162640: 01                       fallthrough
      :                          @11374
162641: 82 78                    a1 = u64 [a0]
162643: c9 87 09                 a2 = a0 - a1
162646: ab 69 0f                 jump @11378 if a2 != s1
      :                          @11375
162649: c9 c8 09                 a2 = a1 - a5
162652: 01                       fallthrough
      :                          @11376
162653: 82 7a                    a3 = u64 [a0]
162655: ab 8a f2                 jump @11374 if a3 != a1
      :                          @11377
162658: 7b 79                    u64 [a0] = a2
162660: 01                       fallthrough
      :                          @11378
162661: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
162665: 51 08 30                 jump @11385 if a1 == 0
      :                          @11379
162668: 56 28 00 20 2d           jump @11385 if a1 >u 8192
      :                          @11380
162673: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
162677: 97 88 03                 a1 = a1 << 0x3
162680: 33 09 c0 22 03           a2 = 0x322c0
162685: 95 99 00 00 01           a2 = a2 + 0x10000
162690: 01                       fallthrough
      :                          @11381
162691: 82 9a                    a3 = u64 [a2]
162693: c9 a9 0b                 a4 = a2 - a3
162696: ab 7b 11                 jump @11385 if a4 != a0
      :                          @11382
162699: c9 8a 0b                 a4 = a3 - a1
162702: 01                       fallthrough
      :                          @11383
162703: 82 9c                    a5 = u64 [a2]
162705: ab ac f2                 jump @11381 if a5 != a3
      :                          @11384
162708: 7b 9b                    u64 [a2] = a4
162710: 33 06                    s1 = 0
162712: 01                       fallthrough
      :                          @11385
162713: 82 18 20 01              a1 = u64 [sp + 0x120]
162717: 52 08 06                 jump @11387 if a1 != 0
      :                          @11386
162720: 28 e3 66                 jump @12868
      :                          @11387
162723: 54 28 00 20 08           jump @11389 if a1 <=u 8192
      :                          @11388
162728: 28 db 66                 jump @12868
      :                          @11389
162731: 82 17 28 01              a0 = u64 [sp + 0x128]
162735: 97 88 03                 a1 = a1 << 0x3
162738: 33 09 c0 22 03           a2 = 0x322c0
162743: 95 99 00 00 01           a2 = a2 + 0x10000
162748: 01                       fallthrough
      :                          @11390
162749: 82 9a                    a3 = u64 [a2]
162751: c9 a9 0b                 a4 = a2 - a3
162754: aa 7b 06                 jump @11392 if a4 == a0
      :                          @11391
162757: 28 be 66                 jump @12868
      :                          @11392
162760: c9 8a 0b                 a4 = a3 - a1
162763: 01                       fallthrough
      :                          @11393
162764: 82 9c                    a5 = u64 [a2]
162766: ab ac ef                 jump @11390 if a5 != a3
      :                          @11394
162769: 7b 9b                    u64 [a2] = a4
162771: 33 06                    s1 = 0
162773: 01                       fallthrough
      :                          @11395
162774: ab ac e7                 jump @11390 if a5 != a3
      :                          @11396
162777: 28 aa 66                 jump @12868
      :                          @11397 [@dyn 1154]
162780: 95 17 20 01              a0 = sp + 0x120
162784: 33 08 05                 a1 = 0x5
162787: 50 20 06 09 b0 02 fe     ra = 2310, jump @2246
      :                          @11398 [@dyn 1155]
162794: 82 17 28 01              a0 = u64 [sp + 0x128]
162798: 82 18 30 01              a1 = u64 [sp + 0x130]
162802: 50 20 08 09 2c 31 fe     ra = 2312, jump @3141
      :                          @11399 [@dyn 1156]
162809: 64 78                    a1 = a0
162811: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
162815: 95 17 e0 01              a0 = sp + 0x1e0
162819: 95 16 e0 01              s1 = sp + 0x1e0
162823: 33 00 0a 09              ra = 0x90a
162827: 95 11 c8                 sp = sp + 0xffffffffffffffc8
162830: 7b 10 30                 u64 [sp + 0x30] = ra
162833: 7b 15 28                 u64 [sp + 0x28] = s0
162836: 7b 16 20                 u64 [sp + 0x20] = s1
162839: 64 84                    t2 = a1
162841: 64 73                    t1 = a0
162843: 33 05 c0 22 03           s0 = 0x322c0
162848: 33 02 00 00 01           t0 = 0x10000
162853: c8 25 09                 a2 = s0 + t0
162856: 28 8f 31 fe              jump @3155
      :                          @11400 [@dyn 1157]
162860: 95 17 20 01              a0 = sp + 0x120
162864: 7b 17 90 02              u64 [sp + 0x290] = a0
162868: 33 07 34 02              a0 = 0x234
162872: 7b 17 98 02              u64 [sp + 0x298] = a0
162876: 95 18 c8 01              a1 = sp + 0x1c8
162880: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
162884: 33 08 2c 0c              a1 = 0xc2c
162888: 7b 18 a8 02              u64 [sp + 0x2a8] = a1
162892: 7b 16 b0 02              u64 [sp + 0x2b0] = s1
162896: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
162900: 33 07 c0 21 01           a0 = 0x121c0
162905: 7b 17 38 02              u64 [sp + 0x238] = a0
162909: 49 21 40 02 03           u64 [sp + 576] = 0x3
162914: 49 21 58 02              u64 [sp + 600] = 0
162918: 95 18 90 02              a1 = sp + 0x290
162922: 7b 18 48 02              u64 [sp + 0x248] = a1
162926: 49 21 50 02 03           u64 [sp + 592] = 0x3
162931: 95 17 08 02              a0 = sp + 0x208
162935: 95 18 38 02              a1 = sp + 0x238
162939: 50 20 0c 09 7f d3 fd     ra = 2316, jump @1503
      :                          @11401 [@dyn 1158]
162946: 82 16 10 02              s1 = u64 [sp + 0x210]
162950: 82 1b 18 02              a4 = u64 [sp + 0x218]
162954: 82 17 08 02              a0 = u64 [sp + 0x208]
162958: 7b 17 70                 u64 [sp + 0x70] = a0
162961: 33 07 02                 a0 = 0x2
162964: 33 08                    a1 = 0
162966: 33 09                    a2 = 0
162968: 64 6a                    a3 = s1
162970: 33 00 0e 09              ra = 0x90e
162974: 0a 64                    ecalli 100 // 'log'
162976: 01                       fallthrough
      :                          @11402 [@dyn 1159]
162977: 82 1c 70                 a5 = u64 [sp + 0x70]
162980: 82 17 68                 a0 = u64 [sp + 0x68]
162983: c8 c7 07                 a0 = a0 + a5
162986: 53 37 00 00 ff 25        jump @11408 if a0 <u 4294901760
      :                          @11403
162992: 33 07 c0 22 03           a0 = 0x322c0
162997: 95 77 00 00 01           a0 = a0 + 0x10000
163002: 01                       fallthrough
      :                          @11404
163003: 82 78                    a1 = u64 [a0]
163005: c9 87 09                 a2 = a0 - a1
163008: ab 69 0f                 jump @11408 if a2 != s1
      :                          @11405
163011: c9 c8 09                 a2 = a1 - a5
163014: 01                       fallthrough
      :                          @11406
163015: 82 7a                    a3 = u64 [a0]
163017: ab 8a f2                 jump @11404 if a3 != a1
      :                          @11407
163020: 7b 79                    u64 [a0] = a2
163022: 01                       fallthrough
      :                          @11408
163023: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
163027: 51 08 30                 jump @11415 if a1 == 0
      :                          @11409
163030: 56 28 00 20 2d           jump @11415 if a1 >u 8192
      :                          @11410
163035: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
163039: 97 88 03                 a1 = a1 << 0x3
163042: 33 09 c0 22 03           a2 = 0x322c0
163047: 95 99 00 00 01           a2 = a2 + 0x10000
163052: 01                       fallthrough
      :                          @11411
163053: 82 9a                    a3 = u64 [a2]
163055: c9 a9 0b                 a4 = a2 - a3
163058: ab 7b 11                 jump @11415 if a4 != a0
      :                          @11412
163061: c9 8a 0b                 a4 = a3 - a1
163064: 01                       fallthrough
      :                          @11413
163065: 82 9c                    a5 = u64 [a2]
163067: ab ac f2                 jump @11411 if a5 != a3
      :                          @11414
163070: 7b 9b                    u64 [a2] = a4
163072: 33 06                    s1 = 0
163074: 01                       fallthrough
      :                          @11415
163075: 82 18 20 01              a1 = u64 [sp + 0x120]
163079: 52 08 06                 jump @11417 if a1 != 0
      :                          @11416
163082: 28 79 65                 jump @12868
      :                          @11417
163085: 54 28 00 20 08           jump @11419 if a1 <=u 8192
      :                          @11418
163090: 28 71 65                 jump @12868
      :                          @11419
163093: 82 17 28 01              a0 = u64 [sp + 0x128]
163097: 97 88 03                 a1 = a1 << 0x3
163100: 33 09 c0 22 03           a2 = 0x322c0
163105: 95 99 00 00 01           a2 = a2 + 0x10000
163110: 01                       fallthrough
      :                          @11420
163111: 82 9a                    a3 = u64 [a2]
163113: c9 a9 0b                 a4 = a2 - a3
163116: aa 7b 06                 jump @11422 if a4 == a0
      :                          @11421
163119: 28 54 65                 jump @12868
      :                          @11422
163122: c9 8a 0b                 a4 = a3 - a1
163125: 01                       fallthrough
      :                          @11423
163126: 82 9c                    a5 = u64 [a2]
163128: ab ac ef                 jump @11420 if a5 != a3
      :                          @11424
163131: 7b 9b                    u64 [a2] = a4
163133: 33 06                    s1 = 0
163135: 01                       fallthrough
      :                          @11425
163136: ab ac e7                 jump @11420 if a5 != a3
      :                          @11426
163139: 28 40 65                 jump @12868
      :                          @11427 [@dyn 1160]
163142: 3a 08 78 12 03           a1 = u64 [0x31278]
163147: 97 89 0d                 a2 = a1 << 0xd
163150: d3 98 08                 a1 = a1 ^ a2
163153: 98 89 07                 a2 = a1 >> 0x7
163156: d3 98 08                 a1 = a1 ^ a2
163159: 3a 09 60 11 03           a2 = u64 [0x31160]
163164: 97 8a 11                 a3 = a1 << 0x11
163167: d3 a8 08                 a1 = a1 ^ a3
163170: ca 98 09                 a2 = a1 * a2
163173: 3e 08 78 12 03           u64 [0x31278] = a1
163178: 14 07 89 88 88 88 88 88 88 88 a0 = 0x8888888888888889
163188: d6 79 07                 a0 = a2 mulhu a0
163191: 98 77 04                 a0 = a0 >> 0x4
163194: 96 77 1e                 a0 = a0 * 0x1e
163197: c9 79 07                 a0 = a2 - a0
163200: 7b 17 20 01              u64 [sp + 0x120] = a0
163204: 33 00 12 09              ra = 0x912
163208: 95 11 d0                 sp = sp + 0xffffffffffffffd0
163211: 7b 10 28                 u64 [sp + 0x28] = ra
163214: 7b 15 20                 u64 [sp + 0x20] = s0
163217: 7b 16 18                 u64 [sp + 0x18] = s1
163220: 7b 17 10                 u64 [sp + 0x10] = a0
163223: 95 79 01                 a2 = a0 + 0x1
163226: 7b 19                    u64 [sp] = a2
163228: 97 99 03                 a2 = a2 << 0x3
163231: 33 07 c0 22 03           a0 = 0x322c0
163236: 33 03 c0 22 03           t1 = 0x322c0
163241: 33 02 00 00 01           t0 = 0x10000
163246: c8 23 06                 s1 = t1 + t0
163249: 28 7c 34 fe              jump @3242
      :                          @11428 [@dyn 1161]
163253: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
163257: 95 17 20 01              a0 = sp + 0x120
163261: 7b 17 38 02              u64 [sp + 0x238] = a0
163265: 33 07 2c 0c              a0 = 0xc2c
163269: 7b 17 40 02              u64 [sp + 0x240] = a0
163273: 95 18 e0 01              a1 = sp + 0x1e0
163277: 7b 18 48 02              u64 [sp + 0x248] = a1
163281: 7b 17 50 02              u64 [sp + 0x250] = a0
163285: 33 07 f0 21 01           a0 = 0x121f0
163290: 7b 17 90 02              u64 [sp + 0x290] = a0
163294: 49 21 98 02 02           u64 [sp + 664] = 0x2
163299: 49 21 b0 02              u64 [sp + 688] = 0
163303: 95 18 38 02              a1 = sp + 0x238
163307: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
163311: 49 21 a8 02 02           u64 [sp + 680] = 0x2
163316: 95 17 08 02              a0 = sp + 0x208
163320: 95 18 90 02              a1 = sp + 0x290
163324: 50 20 14 09 fe d1 fd     ra = 2324, jump @1503
      :                          @11429 [@dyn 1162]
163331: 82 16 10 02              s1 = u64 [sp + 0x210]
163335: 82 1b 18 02              a4 = u64 [sp + 0x218]
163339: 82 17 08 02              a0 = u64 [sp + 0x208]
163343: 7b 17 70                 u64 [sp + 0x70] = a0
163346: 33 07 02                 a0 = 0x2
163349: 33 08                    a1 = 0
163351: 33 09                    a2 = 0
163353: 64 6a                    a3 = s1
163355: 33 00 16 09              ra = 0x916
163359: 0a 64                    ecalli 100 // 'log'
163361: 01                       fallthrough
      :                          @11430 [@dyn 1163]
163362: 82 1c 70                 a5 = u64 [sp + 0x70]
163365: 82 17 68                 a0 = u64 [sp + 0x68]
163368: c8 c7 07                 a0 = a0 + a5
163371: 55 37 00 00 ff 09        jump @11432 if a0 >=u 4294901760
      :                          @11431
163377: 28 52 64                 jump @12868
      :                          @11432
163380: 33 07 c0 22 03           a0 = 0x322c0
163385: 95 77 00 00 01           a0 = a0 + 0x10000
163390: 01                       fallthrough
      :                          @11433
163391: 82 78                    a1 = u64 [a0]
163393: c9 87 09                 a2 = a0 - a1
163396: aa 69 06                 jump @11435 if a2 == s1
      :                          @11434
163399: 28 3c 64                 jump @12868
      :                          @11435
163402: c9 c8 09                 a2 = a1 - a5
163405: 01                       fallthrough
      :                          @11436
163406: 82 7a                    a3 = u64 [a0]
163408: ab 8a ef                 jump @11433 if a3 != a1
      :                          @11437
163411: 7b 79                    u64 [a0] = a2
163413: 33 0b                    a4 = 0
163415: 01                       fallthrough
      :                          @11438
163416: ab 8a e7                 jump @11433 if a3 != a1
      :                          @11439
163419: 28 28 64                 jump @12868
      :                          @11440 [@dyn 1164]
163422: 3a 08 78 12 03           a1 = u64 [0x31278]
163427: 97 89 0d                 a2 = a1 << 0xd
163430: d3 98 08                 a1 = a1 ^ a2
163433: 98 89 07                 a2 = a1 >> 0x7
163436: d3 98 08                 a1 = a1 ^ a2
163439: 3a 09 60 11 03           a2 = u64 [0x31160]
163444: 97 8a 11                 a3 = a1 << 0x11
163447: d3 a8 08                 a1 = a1 ^ a3
163450: ca 98 09                 a2 = a1 * a2
163453: 3e 08 78 12 03           u64 [0x31278] = a1
163458: 14 07 ab aa aa aa aa aa aa aa a0 = 0xaaaaaaaaaaaaaaab
163468: d6 79 07                 a0 = a2 mulhu a0
163471: 98 77 02                 a0 = a0 >> 0x2
163474: 96 77 06                 a0 = a0 * 0x6
163477: c9 79 08                 a1 = a2 - a0
163480: 7b 18 c8 01              u64 [sp + 0x1c8] = a1
163484: 95 17 e0 01              a0 = sp + 0x1e0
163488: 95 16 e0 01              s1 = sp + 0x1e0
163492: 33 00 1a 09              ra = 0x91a
163496: 95 11 b8                 sp = sp + 0xffffffffffffffb8
163499: 7b 10 40                 u64 [sp + 0x40] = ra
163502: 7b 15 38                 u64 [sp + 0x38] = s0
163505: 7b 16 30                 u64 [sp + 0x30] = s1
163508: 64 76                    s1 = a0
163510: 49 01                    u64 [sp + 0] = 0
163512: 49 11 08 08              u64 [sp + 8] = 0x8
163516: 49 11 10                 u64 [sp + 16] = 0
163519: 49 11 18                 u64 [sp + 24] = 0
163522: 49 11 20 08              u64 [sp + 32] = 0x8
163526: 49 11 28                 u64 [sp + 40] = 0
163529: 95 19 18                 a2 = sp + 0x18
163532: 64 1a                    a3 = sp
163534: 64 87                    a0 = a1
163536: 33 00 d8 02              ra = 0x2d8
163540: 28 8b 34 fe              jump @3272
      :                          @11441 [@dyn 1165]
163544: 82 17 f0 01              a0 = u64 [sp + 0x1f0]
163548: 7b 17 20 01              u64 [sp + 0x120] = a0
163552: 95 17 c8 01              a0 = sp + 0x1c8
163556: 7b 17 90 02              u64 [sp + 0x290] = a0
163560: 33 07 2c 0c              a0 = 0xc2c
163564: 7b 17 98 02              u64 [sp + 0x298] = a0
163568: 95 18 20 01              a1 = sp + 0x120
163572: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
163576: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
163580: 7b 16 b0 02              u64 [sp + 0x2b0] = s1
163584: 33 07 14 02              a0 = 0x214
163588: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
163592: 33 07 18 22 01           a0 = 0x12218
163597: 7b 17 38 02              u64 [sp + 0x238] = a0
163601: 49 21 40 02 03           u64 [sp + 576] = 0x3
163606: 49 21 58 02              u64 [sp + 600] = 0
163610: 95 18 90 02              a1 = sp + 0x290
163614: 7b 18 48 02              u64 [sp + 0x248] = a1
163618: 49 21 50 02 03           u64 [sp + 592] = 0x3
163623: 95 17 08 02              a0 = sp + 0x208
163627: 95 18 38 02              a1 = sp + 0x238
163631: 50 20 1c 09 cb d0 fd     ra = 2332, jump @1503
      :                          @11442 [@dyn 1166]
163638: 82 16 10 02              s1 = u64 [sp + 0x210]
163642: 82 1b 18 02              a4 = u64 [sp + 0x218]
163646: 82 17 08 02              a0 = u64 [sp + 0x208]
163650: 7b 17 70                 u64 [sp + 0x70] = a0
163653: 33 07 02                 a0 = 0x2
163656: 33 08                    a1 = 0
163658: 33 09                    a2 = 0
163660: 64 6a                    a3 = s1
163662: 33 00 1e 09              ra = 0x91e
163666: 0a 64                    ecalli 100 // 'log'
163668: 01                       fallthrough
      :                          @11443 [@dyn 1167]
163669: 82 1c 70                 a5 = u64 [sp + 0x70]
163672: 82 17 68                 a0 = u64 [sp + 0x68]
163675: c8 c7 07                 a0 = a0 + a5
163678: 33 08 00 00 ff           a1 = 0xffffffffffff0000
163683: ae 87 06                 jump @11445 if a0 >=u a1
      :                          @11444
163686: 28 e6 5f                 jump @12803
      :                          @11445
163689: 33 07 c0 22 03           a0 = 0x322c0
163694: 95 77 00 00 01           a0 = a0 + 0x10000
163699: 01                       fallthrough
      :                          @11446
163700: 82 78                    a1 = u64 [a0]
163702: c9 87 09                 a2 = a0 - a1
163705: aa 69 06                 jump @11448 if a2 == s1
      :                          @11447
163708: 28 d0 5f                 jump @12803
      :                          @11448
163711: c9 c8 09                 a2 = a1 - a5
163714: 01                       fallthrough
      :                          @11449
163715: 82 7a                    a3 = u64 [a0]
163717: ab 8a ef                 jump @11446 if a3 != a1
      :                          @11450
163720: 7b 79                    u64 [a0] = a2
163722: 33 0b                    a4 = 0
163724: 01                       fallthrough
      :                          @11451
163725: ab 8a e7                 jump @11446 if a3 != a1
      :                          @11452
163728: 28 bc 5f                 jump @12803
      :                          @11453 [@dyn 1168]
163731: 3a 08 78 12 03           a1 = u64 [0x31278]
163736: 97 89 0d                 a2 = a1 << 0xd
163739: d3 98 08                 a1 = a1 ^ a2
163742: 98 89 07                 a2 = a1 >> 0x7
163745: d3 98 08                 a1 = a1 ^ a2
163748: 97 89 11                 a2 = a1 << 0x11
163751: d3 98 08                 a1 = a1 ^ a2
163754: 3a 09 60 11 03           a2 = u64 [0x31160]
163759: 3a 0a b0 11 03           a3 = u64 [0x311b0]
163764: 3e 08 78 12 03           u64 [0x31278] = a1
163769: ca 98 07                 a0 = a1 * a2
163772: 98 78 02                 a1 = a0 >> 0x2
163775: d6 a8 08                 a1 = a1 mulhu a3
163778: 98 88 02                 a1 = a1 >> 0x2
163781: 96 88 64                 a1 = a1 * 0x64
163784: c9 87 07                 a0 = a0 - a1
163787: 7b 17 20 01              u64 [sp + 0x120] = a0
163791: 33 00 22 09              ra = 0x922
163795: 95 11 d0                 sp = sp + 0xffffffffffffffd0
163798: 7b 10 28                 u64 [sp + 0x28] = ra
163801: 7b 15 20                 u64 [sp + 0x20] = s0
163804: 7b 16 18                 u64 [sp + 0x18] = s1
163807: 7b 17 10                 u64 [sp + 0x10] = a0
163810: 95 77 01                 a0 = a0 + 0x1
163813: 7b 17                    u64 [sp] = a0
163815: 97 79 03                 a2 = a0 << 0x3
163818: 33 07 c0 22 03           a0 = 0x322c0
163823: 33 03 c0 22 03           t1 = 0x322c0
163828: 33 02 00 00 01           t0 = 0x10000
163833: c8 23 05                 s0 = t1 + t0
163836: 28 8a 34 fe              jump @3298
      :                          @11454 [@dyn 1169]
163840: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
163844: 95 17 20 01              a0 = sp + 0x120
163848: 7b 17 38 02              u64 [sp + 0x238] = a0
163852: 33 07 2c 0c              a0 = 0xc2c
163856: 7b 17 40 02              u64 [sp + 0x240] = a0
163860: 95 18 e0 01              a1 = sp + 0x1e0
163864: 7b 18 48 02              u64 [sp + 0x248] = a1
163868: 7b 17 50 02              u64 [sp + 0x250] = a0
163872: 33 07 60 22 01           a0 = 0x12260
163877: 7b 17 90 02              u64 [sp + 0x290] = a0
163881: 49 21 98 02 02           u64 [sp + 664] = 0x2
163886: 49 21 b0 02              u64 [sp + 688] = 0
163890: 95 18 38 02              a1 = sp + 0x238
163894: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
163898: 49 21 a8 02 02           u64 [sp + 680] = 0x2
163903: 95 17 08 02              a0 = sp + 0x208
163907: 95 18 90 02              a1 = sp + 0x290
163911: 50 20 24 09 b3 cf fd     ra = 2340, jump @1503
      :                          @11455 [@dyn 1170]
163918: 82 16 10 02              s1 = u64 [sp + 0x210]
163922: 82 1b 18 02              a4 = u64 [sp + 0x218]
163926: 82 17 08 02              a0 = u64 [sp + 0x208]
163930: 7b 17 70                 u64 [sp + 0x70] = a0
163933: 33 07 02                 a0 = 0x2
163936: 33 08                    a1 = 0
163938: 33 09                    a2 = 0
163940: 64 6a                    a3 = s1
163942: 33 00 26 09              ra = 0x926
163946: 0a 64                    ecalli 100 // 'log'
163948: 01                       fallthrough
      :                          @11456 [@dyn 1171]
163949: 82 1c 70                 a5 = u64 [sp + 0x70]
163952: 82 17 68                 a0 = u64 [sp + 0x68]
163955: c8 c7 07                 a0 = a0 + a5
163958: 55 37 00 00 ff 09        jump @11458 if a0 >=u 4294901760
      :                          @11457
163964: 28 07 62                 jump @12868
      :                          @11458
163967: 33 07 c0 22 03           a0 = 0x322c0
163972: 95 77 00 00 01           a0 = a0 + 0x10000
163977: 01                       fallthrough
      :                          @11459
163978: 82 78                    a1 = u64 [a0]
163980: c9 87 09                 a2 = a0 - a1
163983: aa 69 06                 jump @11461 if a2 == s1
      :                          @11460
163986: 28 f1 61                 jump @12868
      :                          @11461
163989: c9 c8 09                 a2 = a1 - a5
163992: 01                       fallthrough
      :                          @11462
163993: 82 7a                    a3 = u64 [a0]
163995: ab 8a ef                 jump @11459 if a3 != a1
      :                          @11463
163998: 7b 79                    u64 [a0] = a2
164000: 33 0b                    a4 = 0
164002: 01                       fallthrough
      :                          @11464
164003: ab 8a e7                 jump @11459 if a3 != a1
      :                          @11465
164006: 28 dd 61                 jump @12868
      :                          @11466 [@dyn 1172]
164009: 3a 08 78 12 03           a1 = u64 [0x31278]
164014: 97 89 0d                 a2 = a1 << 0xd
164017: d3 98 08                 a1 = a1 ^ a2
164020: 98 89 07                 a2 = a1 >> 0x7
164023: d3 98 08                 a1 = a1 ^ a2
164026: 97 89 11                 a2 = a1 << 0x11
164029: d3 98 08                 a1 = a1 ^ a2
164032: 3a 09 60 11 03           a2 = u64 [0x31160]
164037: 3a 0a b0 11 03           a3 = u64 [0x311b0]
164042: 3e 08 78 12 03           u64 [0x31278] = a1
164047: ca 98 07                 a0 = a1 * a2
164050: 98 78 02                 a1 = a0 >> 0x2
164053: d6 a8 08                 a1 = a1 mulhu a3
164056: 98 88 02                 a1 = a1 >> 0x2
164059: 96 88 64                 a1 = a1 * 0x64
164062: c9 87 07                 a0 = a0 - a1
164065: 7b 17 20 01              u64 [sp + 0x120] = a0
164069: 33 00 2a 09              ra = 0x92a
164073: 95 11 e8                 sp = sp + 0xffffffffffffffe8
164076: 7b 10 10                 u64 [sp + 0x10] = ra
164079: 7b 15 08                 u64 [sp + 0x8] = s0
164082: 7b 16                    u64 [sp] = s1
164084: 64 73                    t1 = a0
164086: 95 78 01                 a1 = a0 + 0x1
164089: 97 87 03                 a0 = a1 << 0x3
164092: 33 04 c0 22 03           t2 = 0x322c0
164097: 33 02 00 00 01           t0 = 0x10000
164102: c8 24 00                 ra = t2 + t0
164105: 28 dd 34 fe              jump @3328
      :                          @11467 [@dyn 1173]
164109: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
164113: 95 17 20 01              a0 = sp + 0x120
164117: 7b 17 38 02              u64 [sp + 0x238] = a0
164121: 33 07 2c 0c              a0 = 0xc2c
164125: 7b 17 40 02              u64 [sp + 0x240] = a0
164129: 95 17 e0 01              a0 = sp + 0x1e0
164133: 7b 17 48 02              u64 [sp + 0x248] = a0
164137: 33 07 98 0c              a0 = 0xc98
164141: 7b 17 50 02              u64 [sp + 0x250] = a0
164145: 33 07 80 22 01           a0 = 0x12280
164150: 7b 17 90 02              u64 [sp + 0x290] = a0
164154: 49 21 98 02 02           u64 [sp + 664] = 0x2
164159: 49 21 b0 02              u64 [sp + 688] = 0
164163: 95 18 38 02              a1 = sp + 0x238
164167: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
164171: 49 21 a8 02 02           u64 [sp + 680] = 0x2
164176: 95 17 08 02              a0 = sp + 0x208
164180: 95 18 90 02              a1 = sp + 0x290
164184: 50 20 2c 09 a2 ce fd     ra = 2348, jump @1503
      :                          @11468 [@dyn 1174]
164191: 82 16 10 02              s1 = u64 [sp + 0x210]
164195: 82 1b 18 02              a4 = u64 [sp + 0x218]
164199: 82 17 08 02              a0 = u64 [sp + 0x208]
164203: 7b 17 70                 u64 [sp + 0x70] = a0
164206: 33 07 02                 a0 = 0x2
164209: 33 08                    a1 = 0
164211: 33 09                    a2 = 0
164213: 64 6a                    a3 = s1
164215: 33 00 2e 09              ra = 0x92e
164219: 0a 64                    ecalli 100 // 'log'
164221: 01                       fallthrough
      :                          @11469 [@dyn 1175]
164222: 82 1c 70                 a5 = u64 [sp + 0x70]
164225: 82 17 68                 a0 = u64 [sp + 0x68]
164228: c8 c7 07                 a0 = a0 + a5
164231: 55 37 00 00 ff 09        jump @11471 if a0 >=u 4294901760
      :                          @11470
164237: 28 f6 60                 jump @12868
      :                          @11471
164240: 33 07 c0 22 03           a0 = 0x322c0
164245: 95 77 00 00 01           a0 = a0 + 0x10000
164250: 01                       fallthrough
      :                          @11472
164251: 82 78                    a1 = u64 [a0]
164253: c9 87 09                 a2 = a0 - a1
164256: aa 69 06                 jump @11474 if a2 == s1
      :                          @11473
164259: 28 e0 60                 jump @12868
      :                          @11474
164262: c9 c8 09                 a2 = a1 - a5
164265: 01                       fallthrough
      :                          @11475
164266: 82 7a                    a3 = u64 [a0]
164268: ab 8a ef                 jump @11472 if a3 != a1
      :                          @11476
164271: 7b 79                    u64 [a0] = a2
164273: 33 0b                    a4 = 0
164275: 01                       fallthrough
      :                          @11477
164276: ab 8a e7                 jump @11472 if a3 != a1
      :                          @11478
164279: 28 cc 60                 jump @12868
      :                          @11479 [@dyn 1176]
164282: 3a 08 78 12 03           a1 = u64 [0x31278]
164287: 3a 02 60 11 03           t0 = u64 [0x31160]
164292: 97 89 0d                 a2 = a1 << 0xd
164295: d3 98 08                 a1 = a1 ^ a2
164298: 98 89 07                 a2 = a1 >> 0x7
164301: d3 98 08                 a1 = a1 ^ a2
164304: 97 89 11                 a2 = a1 << 0x11
164307: d3 98 08                 a1 = a1 ^ a2
164310: ca 28 09                 a2 = a1 * t0
164313: 3a 0a b0 11 03           a3 = u64 [0x311b0]
164318: 3e 08 78 12 03           u64 [0x31278] = a1
164323: 98 98 02                 a1 = a2 >> 0x2
164326: d6 a8 08                 a1 = a1 mulhu a3
164329: 98 88 02                 a1 = a1 >> 0x2
164332: 96 88 64                 a1 = a1 * 0x64
164335: c9 89 09                 a2 = a2 - a1
164338: 95 99 01                 a2 = a2 + 0x1
164341: 7b 19 b0 01              u64 [sp + 0x1b0] = a2
164345: 49 21 20 01              u64 [sp + 288] = 0
164349: 49 21 28 01 08           u64 [sp + 296] = 0x8
164354: 49 21 30 01              u64 [sp + 304] = 0
164358: 49 21 e0 01              u64 [sp + 480] = 0
164362: 49 21 e8 01 08           u64 [sp + 488] = 0x8
164367: 49 21 f0 01              u64 [sp + 496] = 0
164371: 3a 08 78 12 03           a1 = u64 [0x31278]
164376: 97 89 0d                 a2 = a1 << 0xd
164379: d3 98 08                 a1 = a1 ^ a2
164382: 98 89 07                 a2 = a1 >> 0x7
164385: d3 98 08                 a1 = a1 ^ a2
164388: 97 89 11                 a2 = a1 << 0x11
164391: d3 89 09                 a2 = a2 ^ a1
164394: 3e 09 78 12 03           u64 [0x31278] = a2
164399: 82 17 b0 01              a0 = u64 [sp + 0x1b0]
164403: 52 07 06                 jump @11481 if a0 != 0
      :                          @11480
164406: 28 61 72                 jump @13240
      :                          @11481
164409: 82 18 30 01              a1 = u64 [sp + 0x130]
164413: 82 1a 20 01              a3 = u64 [sp + 0x120]
164417: ca 29 09                 a2 = a2 * t0
164420: cd 79 06                 s1 = a2 %u a0
164423: 95 66 01                 s1 = s1 + 0x1
164426: 7b 12 70                 u64 [sp + 0x70] = t0
164429: ab a8 16                 jump @11484 if a1 != a3
      :                          @11482
164432: 95 17 20 01              a0 = sp + 0x120
164436: 50 20 32 09 ec d0 fd     ra = 2354, jump @1581
      :                          @11483 [@dyn 1177]
164443: 82 12 70                 t0 = u64 [sp + 0x70]
164446: 82 18 30 01              a1 = u64 [sp + 0x130]
164450: 01                       fallthrough
      :                          @11484
164451: 82 17 28 01              a0 = u64 [sp + 0x128]
164455: 97 89 03                 a2 = a1 << 0x3
164458: c8 97 07                 a0 = a0 + a2
164461: 7b 76                    u64 [a0] = s1
164463: 95 88 01                 a1 = a1 + 0x1
164466: 7b 18 30 01              u64 [sp + 0x130] = a1
164470: 33 0c 78 12 03           a5 = 0x31278
164475: 3a 07 78 12 03           a0 = u64 [0x31278]
164480: 97 78 0d                 a1 = a0 << 0xd
164483: d3 87 07                 a0 = a0 ^ a1
164486: 98 78 07                 a1 = a0 >> 0x7
164489: d3 87 07                 a0 = a0 ^ a1
164492: 97 78 11                 a1 = a0 << 0x11
164495: d3 87 07                 a0 = a0 ^ a1
164498: ca 27 09                 a2 = a0 * t0
164501: 3a 08 68 11 03           a1 = u64 [0x31168]
164506: 3e 07 78 12 03           u64 [0x31278] = a0
164511: 98 97 03                 a0 = a2 >> 0x3
164514: d6 87 07                 a0 = a0 mulhu a1
164517: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
164521: 82 1a e0 01              a3 = u64 [sp + 0x1e0]
164525: 98 77 04                 a0 = a0 >> 0x4
164528: 33 0b e8 03              a4 = 0x3e8
164532: ca b7 07                 a0 = a0 * a4
164535: c9 79 06                 s1 = a2 - a0
164538: ab a8 1b                 jump @11487 if a1 != a3
      :                          @11485
164541: 95 17 e0 01              a0 = sp + 0x1e0
164545: 50 20 34 09 7f d0 fd     ra = 2356, jump @1581
      :                          @11486 [@dyn 1178]
164552: 33 0c 78 12 03           a5 = 0x31278
164557: 82 12 70                 t0 = u64 [sp + 0x70]
164560: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
164564: 01                       fallthrough
      :                          @11487
164565: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
164569: 97 89 03                 a2 = a1 << 0x3
164572: c8 97 07                 a0 = a0 + a2
164575: 7b 76                    u64 [a0] = s1
164577: 95 88 01                 a1 = a1 + 0x1
164580: 7b 18 f0 01              u64 [sp + 0x1f0] = a1
164584: 3a 07 78 12 03           a0 = u64 [0x31278]
164589: 97 78 0d                 a1 = a0 << 0xd
164592: d3 87 07                 a0 = a0 ^ a1
164595: 98 78 07                 a1 = a0 >> 0x7
164598: d3 87 07                 a0 = a0 ^ a1
164601: 97 78 11                 a1 = a0 << 0x11
164604: d3 87 07                 a0 = a0 ^ a1
164607: 3e 07 78 12 03           u64 [0x31278] = a0
164612: 82 19 b0 01              a2 = u64 [sp + 0x1b0]
164616: 52 09 06                 jump @11489 if a2 != 0
      :                          @11488
164619: 28 8c 71                 jump @13240
      :                          @11489
164622: 82 18 30 01              a1 = u64 [sp + 0x130]
164626: 82 1a 20 01              a3 = u64 [sp + 0x120]
164630: ca 27 07                 a0 = a0 * t0
164633: cd 97 06                 s1 = a0 %u a2
164636: 95 66 01                 s1 = s1 + 0x1
164639: ab a8 16                 jump @11492 if a1 != a3
      :                          @11490
164642: 95 17 20 01              a0 = sp + 0x120
164646: 50 20 36 09 1a d0 fd     ra = 2358, jump @1581
      :                          @11491 [@dyn 1179]
164653: 82 12 70                 t0 = u64 [sp + 0x70]
164656: 82 18 30 01              a1 = u64 [sp + 0x130]
164660: 01                       fallthrough
      :                          @11492
164661: 82 17 28 01              a0 = u64 [sp + 0x128]
164665: 97 89 03                 a2 = a1 << 0x3
164668: c8 97 07                 a0 = a0 + a2
164671: 7b 76                    u64 [a0] = s1
164673: 95 88 01                 a1 = a1 + 0x1
164676: 7b 18 30 01              u64 [sp + 0x130] = a1
164680: 33 0c 78 12 03           a5 = 0x31278
164685: 3a 07 78 12 03           a0 = u64 [0x31278]
164690: 97 78 0d                 a1 = a0 << 0xd
164693: d3 87 07                 a0 = a0 ^ a1
164696: 98 78 07                 a1 = a0 >> 0x7
164699: d3 87 07                 a0 = a0 ^ a1
164702: 97 78 11                 a1 = a0 << 0x11
164705: d3 87 07                 a0 = a0 ^ a1
164708: ca 27 09                 a2 = a0 * t0
164711: 3a 08 68 11 03           a1 = u64 [0x31168]
164716: 3e 07 78 12 03           u64 [0x31278] = a0
164721: 98 97 03                 a0 = a2 >> 0x3
164724: d6 87 07                 a0 = a0 mulhu a1
164727: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
164731: 82 1a e0 01              a3 = u64 [sp + 0x1e0]
164735: 98 77 04                 a0 = a0 >> 0x4
164738: 33 0b e8 03              a4 = 0x3e8
164742: ca b7 07                 a0 = a0 * a4
164745: c9 79 06                 s1 = a2 - a0
164748: ab a8 1b                 jump @11495 if a1 != a3
      :                          @11493
164751: 95 17 e0 01              a0 = sp + 0x1e0
164755: 50 20 38 09 ad cf fd     ra = 2360, jump @1581
      :                          @11494 [@dyn 1180]
164762: 33 0c 78 12 03           a5 = 0x31278
164767: 82 12 70                 t0 = u64 [sp + 0x70]
164770: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
164774: 01                       fallthrough
      :                          @11495
164775: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
164779: 97 89 03                 a2 = a1 << 0x3
164782: c8 97 07                 a0 = a0 + a2
164785: 7b 76                    u64 [a0] = s1
164787: 95 88 01                 a1 = a1 + 0x1
164790: 7b 18 f0 01              u64 [sp + 0x1f0] = a1
164794: 3a 07 78 12 03           a0 = u64 [0x31278]
164799: 97 78 0d                 a1 = a0 << 0xd
164802: d3 87 07                 a0 = a0 ^ a1
164805: 98 78 07                 a1 = a0 >> 0x7
164808: d3 87 07                 a0 = a0 ^ a1
164811: 97 78 11                 a1 = a0 << 0x11
164814: d3 87 07                 a0 = a0 ^ a1
164817: 3e 07 78 12 03           u64 [0x31278] = a0
164822: 82 19 b0 01              a2 = u64 [sp + 0x1b0]
164826: 52 09 06                 jump @11497 if a2 != 0
      :                          @11496
164829: 28 ba 70                 jump @13240
      :                          @11497
164832: 82 18 30 01              a1 = u64 [sp + 0x130]
164836: 82 1a 20 01              a3 = u64 [sp + 0x120]
164840: ca 27 07                 a0 = a0 * t0
164843: cd 97 06                 s1 = a0 %u a2
164846: 95 66 01                 s1 = s1 + 0x1
164849: ab a8 16                 jump @11500 if a1 != a3
      :                          @11498
164852: 95 17 20 01              a0 = sp + 0x120
164856: 50 20 3a 09 48 cf fd     ra = 2362, jump @1581
      :                          @11499 [@dyn 1181]
164863: 82 12 70                 t0 = u64 [sp + 0x70]
164866: 82 18 30 01              a1 = u64 [sp + 0x130]
164870: 01                       fallthrough
      :                          @11500
164871: 82 17 28 01              a0 = u64 [sp + 0x128]
164875: 97 89 03                 a2 = a1 << 0x3
164878: c8 97 07                 a0 = a0 + a2
164881: 7b 76                    u64 [a0] = s1
164883: 95 88 01                 a1 = a1 + 0x1
164886: 7b 18 30 01              u64 [sp + 0x130] = a1
164890: 33 0c 78 12 03           a5 = 0x31278
164895: 3a 07 78 12 03           a0 = u64 [0x31278]
164900: 97 78 0d                 a1 = a0 << 0xd
164903: d3 87 07                 a0 = a0 ^ a1
164906: 98 78 07                 a1 = a0 >> 0x7
164909: d3 87 07                 a0 = a0 ^ a1
164912: 97 78 11                 a1 = a0 << 0x11
164915: d3 87 07                 a0 = a0 ^ a1
164918: ca 27 09                 a2 = a0 * t0
164921: 3a 08 68 11 03           a1 = u64 [0x31168]
164926: 3e 07 78 12 03           u64 [0x31278] = a0
164931: 98 97 03                 a0 = a2 >> 0x3
164934: d6 87 07                 a0 = a0 mulhu a1
164937: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
164941: 82 1a e0 01              a3 = u64 [sp + 0x1e0]
164945: 98 77 04                 a0 = a0 >> 0x4
164948: 33 0b e8 03              a4 = 0x3e8
164952: ca b7 07                 a0 = a0 * a4
164955: c9 79 06                 s1 = a2 - a0
164958: ab a8 1b                 jump @11503 if a1 != a3
      :                          @11501
164961: 95 17 e0 01              a0 = sp + 0x1e0
164965: 50 20 3c 09 db ce fd     ra = 2364, jump @1581
      :                          @11502 [@dyn 1182]
164972: 33 0c 78 12 03           a5 = 0x31278
164977: 82 12 70                 t0 = u64 [sp + 0x70]
164980: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
164984: 01                       fallthrough
      :                          @11503
164985: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
164989: 97 89 03                 a2 = a1 << 0x3
164992: c8 97 07                 a0 = a0 + a2
164995: 7b 76                    u64 [a0] = s1
164997: 95 88 01                 a1 = a1 + 0x1
165000: 7b 18 f0 01              u64 [sp + 0x1f0] = a1
165004: 3a 07 78 12 03           a0 = u64 [0x31278]
165009: 97 78 0d                 a1 = a0 << 0xd
165012: d3 87 07                 a0 = a0 ^ a1
165015: 98 78 07                 a1 = a0 >> 0x7
165018: d3 87 07                 a0 = a0 ^ a1
165021: 97 78 11                 a1 = a0 << 0x11
165024: d3 87 07                 a0 = a0 ^ a1
165027: 3e 07 78 12 03           u64 [0x31278] = a0
165032: 82 19 b0 01              a2 = u64 [sp + 0x1b0]
165036: 52 09 06                 jump @11505 if a2 != 0
      :                          @11504
165039: 28 e8 6f                 jump @13240
      :                          @11505
165042: 82 18 30 01              a1 = u64 [sp + 0x130]
165046: 82 1a 20 01              a3 = u64 [sp + 0x120]
165050: ca 27 07                 a0 = a0 * t0
165053: cd 97 06                 s1 = a0 %u a2
165056: 95 66 01                 s1 = s1 + 0x1
165059: ab a8 16                 jump @11508 if a1 != a3
      :                          @11506
165062: 95 17 20 01              a0 = sp + 0x120
165066: 50 20 3e 09 76 ce fd     ra = 2366, jump @1581
      :                          @11507 [@dyn 1183]
165073: 82 12 70                 t0 = u64 [sp + 0x70]
165076: 82 18 30 01              a1 = u64 [sp + 0x130]
165080: 01                       fallthrough
      :                          @11508
165081: 82 17 28 01              a0 = u64 [sp + 0x128]
165085: 97 89 03                 a2 = a1 << 0x3
165088: c8 97 07                 a0 = a0 + a2
165091: 7b 76                    u64 [a0] = s1
165093: 95 88 01                 a1 = a1 + 0x1
165096: 7b 18 30 01              u64 [sp + 0x130] = a1
165100: 33 0c 78 12 03           a5 = 0x31278
165105: 3a 07 78 12 03           a0 = u64 [0x31278]
165110: 97 78 0d                 a1 = a0 << 0xd
165113: d3 87 07                 a0 = a0 ^ a1
165116: 98 78 07                 a1 = a0 >> 0x7
165119: d3 87 07                 a0 = a0 ^ a1
165122: 97 78 11                 a1 = a0 << 0x11
165125: d3 87 07                 a0 = a0 ^ a1
165128: ca 27 09                 a2 = a0 * t0
165131: 3a 08 68 11 03           a1 = u64 [0x31168]
165136: 3e 07 78 12 03           u64 [0x31278] = a0
165141: 98 97 03                 a0 = a2 >> 0x3
165144: d6 87 07                 a0 = a0 mulhu a1
165147: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
165151: 82 1a e0 01              a3 = u64 [sp + 0x1e0]
165155: 98 77 04                 a0 = a0 >> 0x4
165158: 33 0b e8 03              a4 = 0x3e8
165162: ca b7 07                 a0 = a0 * a4
165165: c9 79 06                 s1 = a2 - a0
165168: ab a8 1b                 jump @11511 if a1 != a3
      :                          @11509
165171: 95 17 e0 01              a0 = sp + 0x1e0
165175: 50 20 40 09 09 ce fd     ra = 2368, jump @1581
      :                          @11510 [@dyn 1184]
165182: 33 0c 78 12 03           a5 = 0x31278
165187: 82 12 70                 t0 = u64 [sp + 0x70]
165190: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
165194: 01                       fallthrough
      :                          @11511
165195: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
165199: 97 89 03                 a2 = a1 << 0x3
165202: c8 97 07                 a0 = a0 + a2
165205: 7b 76                    u64 [a0] = s1
165207: 95 88 01                 a1 = a1 + 0x1
165210: 7b 18 f0 01              u64 [sp + 0x1f0] = a1
165214: 3a 07 78 12 03           a0 = u64 [0x31278]
165219: 97 78 0d                 a1 = a0 << 0xd
165222: d3 87 07                 a0 = a0 ^ a1
165225: 98 78 07                 a1 = a0 >> 0x7
165228: d3 87 07                 a0 = a0 ^ a1
165231: 97 78 11                 a1 = a0 << 0x11
165234: d3 87 07                 a0 = a0 ^ a1
165237: 3e 07 78 12 03           u64 [0x31278] = a0
165242: 82 19 b0 01              a2 = u64 [sp + 0x1b0]
165246: 52 09 06                 jump @11513 if a2 != 0
      :                          @11512
165249: 28 16 6f                 jump @13240
      :                          @11513
165252: 82 18 30 01              a1 = u64 [sp + 0x130]
165256: 82 1a 20 01              a3 = u64 [sp + 0x120]
165260: ca 27 07                 a0 = a0 * t0
165263: cd 97 06                 s1 = a0 %u a2
165266: 95 66 01                 s1 = s1 + 0x1
165269: ab a8 16                 jump @11516 if a1 != a3
      :                          @11514
165272: 95 17 20 01              a0 = sp + 0x120
165276: 50 20 42 09 a4 cd fd     ra = 2370, jump @1581
      :                          @11515 [@dyn 1185]
165283: 82 12 70                 t0 = u64 [sp + 0x70]
165286: 82 18 30 01              a1 = u64 [sp + 0x130]
165290: 01                       fallthrough
      :                          @11516
165291: 82 17 28 01              a0 = u64 [sp + 0x128]
165295: 97 89 03                 a2 = a1 << 0x3
165298: c8 97 07                 a0 = a0 + a2
165301: 7b 76                    u64 [a0] = s1
165303: 95 88 01                 a1 = a1 + 0x1
165306: 7b 18 30 01              u64 [sp + 0x130] = a1
165310: 3a 08 78 12 03           a1 = u64 [0x31278]
165315: 97 89 0d                 a2 = a1 << 0xd
165318: d3 98 08                 a1 = a1 ^ a2
165321: 98 89 07                 a2 = a1 >> 0x7
165324: d3 98 08                 a1 = a1 ^ a2
165327: 97 89 11                 a2 = a1 << 0x11
165330: d3 98 08                 a1 = a1 ^ a2
165333: ca 28 09                 a2 = a1 * t0
165336: 3a 0a 68 11 03           a3 = u64 [0x31168]
165341: 3e 08 78 12 03           u64 [0x31278] = a1
165346: 98 97 03                 a0 = a2 >> 0x3
165349: d6 a7 07                 a0 = a0 mulhu a3
165352: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
165356: 82 1a e0 01              a3 = u64 [sp + 0x1e0]
165360: 98 77 04                 a0 = a0 >> 0x4
165363: 33 0b e8 03              a4 = 0x3e8
165367: ca b7 07                 a0 = a0 * a4
165370: c9 79 06                 s1 = a2 - a0
165373: ab a8 13                 jump @11519 if a1 != a3
      :                          @11517
165376: 95 17 e0 01              a0 = sp + 0x1e0
165380: 50 20 44 09 3c cd fd     ra = 2372, jump @1581
      :                          @11518 [@dyn 1186]
165387: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
165391: 01                       fallthrough
      :                          @11519
165392: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
165396: 97 89 03                 a2 = a1 << 0x3
165399: c8 97 07                 a0 = a0 + a2
165402: 7b 76                    u64 [a0] = s1
165404: 95 8a 01                 a3 = a1 + 0x1
165407: 7b 1a f0 01              u64 [sp + 0x1f0] = a3
165411: 82 17 28 01              a0 = u64 [sp + 0x128]
165415: 82 18 30 01              a1 = u64 [sp + 0x130]
165419: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
165423: 82 1b b0 01              a4 = u64 [sp + 0x1b0]
165427: 50 20 46 09 81 31 fe     ra = 2374, jump @3375
      :                          @11520 [@dyn 1187]
165434: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
165438: 95 17 b0 01              a0 = sp + 0x1b0
165442: 7b 17 90 02              u64 [sp + 0x290] = a0
165446: 33 07 2c 0c              a0 = 0xc2c
165450: 7b 17 98 02              u64 [sp + 0x298] = a0
165454: 95 18 20 01              a1 = sp + 0x120
165458: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
165462: 33 08 34 02              a1 = 0x234
165466: 7b 18 a8 02              u64 [sp + 0x2a8] = a1
165470: 95 19 e0 01              a2 = sp + 0x1e0
165474: 7b 19 b0 02              u64 [sp + 0x2b0] = a2
165478: 7b 18 b8 02              u64 [sp + 0x2b8] = a1
165482: 95 18 c8 01              a1 = sp + 0x1c8
165486: 7b 18 c0 02              u64 [sp + 0x2c0] = a1
165490: 7b 17 c8 02              u64 [sp + 0x2c8] = a0
165494: 33 07 c0 22 01           a0 = 0x122c0
165499: 7b 17 38 02              u64 [sp + 0x238] = a0
165503: 49 21 40 02 04           u64 [sp + 576] = 0x4
165508: 49 21 58 02              u64 [sp + 600] = 0
165512: 95 18 90 02              a1 = sp + 0x290
165516: 7b 18 48 02              u64 [sp + 0x248] = a1
165520: 49 21 50 02 04           u64 [sp + 592] = 0x4
165525: 95 17 08 02              a0 = sp + 0x208
165529: 95 18 38 02              a1 = sp + 0x238
165533: 50 20 48 09 5d c9 fd     ra = 2376, jump @1503
      :                          @11521 [@dyn 1188]
165540: 82 16 10 02              s1 = u64 [sp + 0x210]
165544: 82 1b 18 02              a4 = u64 [sp + 0x218]
165548: 82 17 08 02              a0 = u64 [sp + 0x208]
165552: 7b 17 70                 u64 [sp + 0x70] = a0
165555: 33 07 02                 a0 = 0x2
165558: 33 08                    a1 = 0
165560: 33 09                    a2 = 0
165562: 64 6a                    a3 = s1
165564: 33 00 4a 09              ra = 0x94a
165568: 0a 64                    ecalli 100 // 'log'
165570: 01                       fallthrough
      :                          @11522 [@dyn 1189]
165571: 82 1c 70                 a5 = u64 [sp + 0x70]
165574: 82 17 68                 a0 = u64 [sp + 0x68]
165577: c8 c7 07                 a0 = a0 + a5
165580: 53 37 00 00 ff 25        jump @11528 if a0 <u 4294901760
      :                          @11523
165586: 33 07 c0 22 03           a0 = 0x322c0
165591: 95 77 00 00 01           a0 = a0 + 0x10000
165596: 01                       fallthrough
      :                          @11524
165597: 82 78                    a1 = u64 [a0]
165599: c9 87 09                 a2 = a0 - a1
165602: ab 69 0f                 jump @11528 if a2 != s1
      :                          @11525
165605: c9 c8 09                 a2 = a1 - a5
165608: 01                       fallthrough
      :                          @11526
165609: 82 7a                    a3 = u64 [a0]
165611: ab 8a f2                 jump @11524 if a3 != a1
      :                          @11527
165614: 7b 79                    u64 [a0] = a2
165616: 01                       fallthrough
      :                          @11528
165617: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
165621: 51 08 30                 jump @11535 if a1 == 0
      :                          @11529
165624: 56 28 00 20 2d           jump @11535 if a1 >u 8192
      :                          @11530
165629: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
165633: 97 88 03                 a1 = a1 << 0x3
165636: 33 09 c0 22 03           a2 = 0x322c0
165641: 95 99 00 00 01           a2 = a2 + 0x10000
165646: 01                       fallthrough
      :                          @11531
165647: 82 9a                    a3 = u64 [a2]
165649: c9 a9 0b                 a4 = a2 - a3
165652: ab 7b 11                 jump @11535 if a4 != a0
      :                          @11532
165655: c9 8a 0b                 a4 = a3 - a1
165658: 01                       fallthrough
      :                          @11533
165659: 82 9c                    a5 = u64 [a2]
165661: ab ac f2                 jump @11531 if a5 != a3
      :                          @11534
165664: 7b 9b                    u64 [a2] = a4
165666: 33 06                    s1 = 0
165668: 01                       fallthrough
      :                          @11535
165669: 82 18 20 01              a1 = u64 [sp + 0x120]
165673: 52 08 06                 jump @11537 if a1 != 0
      :                          @11536
165676: 28 57 5b                 jump @12868
      :                          @11537
165679: 54 28 00 20 08           jump @11539 if a1 <=u 8192
      :                          @11538
165684: 28 4f 5b                 jump @12868
      :                          @11539
165687: 82 17 28 01              a0 = u64 [sp + 0x128]
165691: 97 88 03                 a1 = a1 << 0x3
165694: 33 09 c0 22 03           a2 = 0x322c0
165699: 95 99 00 00 01           a2 = a2 + 0x10000
165704: 01                       fallthrough
      :                          @11540
165705: 82 9a                    a3 = u64 [a2]
165707: c9 a9 0b                 a4 = a2 - a3
165710: aa 7b 06                 jump @11542 if a4 == a0
      :                          @11541
165713: 28 32 5b                 jump @12868
      :                          @11542
165716: c9 8a 0b                 a4 = a3 - a1
165719: 01                       fallthrough
      :                          @11543
165720: 82 9c                    a5 = u64 [a2]
165722: ab ac ef                 jump @11540 if a5 != a3
      :                          @11544
165725: 7b 9b                    u64 [a2] = a4
165727: 33 06                    s1 = 0
165729: 01                       fallthrough
      :                          @11545
165730: ab ac e7                 jump @11540 if a5 != a3
      :                          @11546
165733: 28 1e 5b                 jump @12868
      :                          @11547 [@dyn 1190]
165736: 3a 08 78 12 03           a1 = u64 [0x31278]
165741: 3a 02 60 11 03           t0 = u64 [0x31160]
165746: 97 89 0d                 a2 = a1 << 0xd
165749: d3 98 08                 a1 = a1 ^ a2
165752: 98 89 07                 a2 = a1 >> 0x7
165755: d3 98 08                 a1 = a1 ^ a2
165758: 97 89 11                 a2 = a1 << 0x11
165761: d3 98 08                 a1 = a1 ^ a2
165764: ca 28 09                 a2 = a1 * t0
165767: 3a 0a b0 11 03           a3 = u64 [0x311b0]
165772: 3e 08 78 12 03           u64 [0x31278] = a1
165777: 98 98 02                 a1 = a2 >> 0x2
165780: d6 a8 08                 a1 = a1 mulhu a3
165783: 98 88 02                 a1 = a1 >> 0x2
165786: 96 88 64                 a1 = a1 * 0x64
165789: c9 89 09                 a2 = a2 - a1
165792: 95 99 01                 a2 = a2 + 0x1
165795: 7b 19 b0 01              u64 [sp + 0x1b0] = a2
165799: 49 21 20 01              u64 [sp + 288] = 0
165803: 49 21 28 01 08           u64 [sp + 296] = 0x8
165808: 49 21 30 01              u64 [sp + 304] = 0
165812: 49 21 e0 01              u64 [sp + 480] = 0
165816: 49 21 e8 01 08           u64 [sp + 488] = 0x8
165821: 49 21 f0 01              u64 [sp + 496] = 0
165825: 3a 08 78 12 03           a1 = u64 [0x31278]
165830: 97 89 0d                 a2 = a1 << 0xd
165833: d3 98 08                 a1 = a1 ^ a2
165836: 98 89 07                 a2 = a1 >> 0x7
165839: d3 98 08                 a1 = a1 ^ a2
165842: 97 89 11                 a2 = a1 << 0x11
165845: d3 89 09                 a2 = a2 ^ a1
165848: 3e 09 78 12 03           u64 [0x31278] = a2
165853: 82 17 b0 01              a0 = u64 [sp + 0x1b0]
165857: 52 07 06                 jump @11549 if a0 != 0
      :                          @11548
165860: 28 b3 6c                 jump @13240
      :                          @11549
165863: 82 18 30 01              a1 = u64 [sp + 0x130]
165867: 82 1a 20 01              a3 = u64 [sp + 0x120]
165871: ca 29 09                 a2 = a2 * t0
165874: cd 79 06                 s1 = a2 %u a0
165877: 95 66 01                 s1 = s1 + 0x1
165880: 7b 12 70                 u64 [sp + 0x70] = t0
165883: ab a8 16                 jump @11552 if a1 != a3
      :                          @11550
165886: 95 17 20 01              a0 = sp + 0x120
165890: 50 20 4e 09 3e cb fd     ra = 2382, jump @1581
      :                          @11551 [@dyn 1191]
165897: 82 12 70                 t0 = u64 [sp + 0x70]
165900: 82 18 30 01              a1 = u64 [sp + 0x130]
165904: 01                       fallthrough
      :                          @11552
165905: 82 17 28 01              a0 = u64 [sp + 0x128]
165909: 97 89 03                 a2 = a1 << 0x3
165912: c8 97 07                 a0 = a0 + a2
165915: 7b 76                    u64 [a0] = s1
165917: 95 88 01                 a1 = a1 + 0x1
165920: 7b 18 30 01              u64 [sp + 0x130] = a1
165924: 33 0c 78 12 03           a5 = 0x31278
165929: 3a 07 78 12 03           a0 = u64 [0x31278]
165934: 97 78 0d                 a1 = a0 << 0xd
165937: d3 87 07                 a0 = a0 ^ a1
165940: 98 78 07                 a1 = a0 >> 0x7
165943: d3 87 07                 a0 = a0 ^ a1
165946: 97 78 11                 a1 = a0 << 0x11
165949: d3 87 07                 a0 = a0 ^ a1
165952: ca 27 09                 a2 = a0 * t0
165955: 3a 08 68 11 03           a1 = u64 [0x31168]
165960: 3e 07 78 12 03           u64 [0x31278] = a0
165965: 98 97 03                 a0 = a2 >> 0x3
165968: d6 87 07                 a0 = a0 mulhu a1
165971: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
165975: 82 1a e0 01              a3 = u64 [sp + 0x1e0]
165979: 98 77 04                 a0 = a0 >> 0x4
165982: 33 0b e8 03              a4 = 0x3e8
165986: ca b7 07                 a0 = a0 * a4
165989: c9 79 06                 s1 = a2 - a0
165992: ab a8 1b                 jump @11555 if a1 != a3
      :                          @11553
165995: 95 17 e0 01              a0 = sp + 0x1e0
165999: 50 20 50 09 d1 ca fd     ra = 2384, jump @1581
      :                          @11554 [@dyn 1192]
166006: 33 0c 78 12 03           a5 = 0x31278
166011: 82 12 70                 t0 = u64 [sp + 0x70]
166014: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
166018: 01                       fallthrough
      :                          @11555
166019: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
166023: 97 89 03                 a2 = a1 << 0x3
166026: c8 97 07                 a0 = a0 + a2
166029: 7b 76                    u64 [a0] = s1
166031: 95 88 01                 a1 = a1 + 0x1
166034: 7b 18 f0 01              u64 [sp + 0x1f0] = a1
166038: 3a 07 78 12 03           a0 = u64 [0x31278]
166043: 97 78 0d                 a1 = a0 << 0xd
166046: d3 87 07                 a0 = a0 ^ a1
166049: 98 78 07                 a1 = a0 >> 0x7
166052: d3 87 07                 a0 = a0 ^ a1
166055: 97 78 11                 a1 = a0 << 0x11
166058: d3 87 07                 a0 = a0 ^ a1
166061: 3e 07 78 12 03           u64 [0x31278] = a0
166066: 82 19 b0 01              a2 = u64 [sp + 0x1b0]
166070: 52 09 06                 jump @11557 if a2 != 0
      :                          @11556
166073: 28 de 6b                 jump @13240
      :                          @11557
166076: 82 18 30 01              a1 = u64 [sp + 0x130]
166080: 82 1a 20 01              a3 = u64 [sp + 0x120]
166084: ca 27 07                 a0 = a0 * t0
166087: cd 97 06                 s1 = a0 %u a2
166090: 95 66 01                 s1 = s1 + 0x1
166093: ab a8 16                 jump @11560 if a1 != a3
      :                          @11558
166096: 95 17 20 01              a0 = sp + 0x120
166100: 50 20 52 09 6c ca fd     ra = 2386, jump @1581
      :                          @11559 [@dyn 1193]
166107: 82 12 70                 t0 = u64 [sp + 0x70]
166110: 82 18 30 01              a1 = u64 [sp + 0x130]
166114: 01                       fallthrough
      :                          @11560
166115: 82 17 28 01              a0 = u64 [sp + 0x128]
166119: 97 89 03                 a2 = a1 << 0x3
166122: c8 97 07                 a0 = a0 + a2
166125: 7b 76                    u64 [a0] = s1
166127: 95 88 01                 a1 = a1 + 0x1
166130: 7b 18 30 01              u64 [sp + 0x130] = a1
166134: 33 0c 78 12 03           a5 = 0x31278
166139: 3a 07 78 12 03           a0 = u64 [0x31278]
166144: 97 78 0d                 a1 = a0 << 0xd
166147: d3 87 07                 a0 = a0 ^ a1
166150: 98 78 07                 a1 = a0 >> 0x7
166153: d3 87 07                 a0 = a0 ^ a1
166156: 97 78 11                 a1 = a0 << 0x11
166159: d3 87 07                 a0 = a0 ^ a1
166162: ca 27 09                 a2 = a0 * t0
166165: 3a 08 68 11 03           a1 = u64 [0x31168]
166170: 3e 07 78 12 03           u64 [0x31278] = a0
166175: 98 97 03                 a0 = a2 >> 0x3
166178: d6 87 07                 a0 = a0 mulhu a1
166181: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
166185: 82 1a e0 01              a3 = u64 [sp + 0x1e0]
166189: 98 77 04                 a0 = a0 >> 0x4
166192: 33 0b e8 03              a4 = 0x3e8
166196: ca b7 07                 a0 = a0 * a4
166199: c9 79 06                 s1 = a2 - a0
166202: ab a8 1b                 jump @11563 if a1 != a3
      :                          @11561
166205: 95 17 e0 01              a0 = sp + 0x1e0
166209: 50 20 54 09 ff c9 fd     ra = 2388, jump @1581
      :                          @11562 [@dyn 1194]
166216: 33 0c 78 12 03           a5 = 0x31278
166221: 82 12 70                 t0 = u64 [sp + 0x70]
166224: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
166228: 01                       fallthrough
      :                          @11563
166229: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
166233: 97 89 03                 a2 = a1 << 0x3
166236: c8 97 07                 a0 = a0 + a2
166239: 7b 76                    u64 [a0] = s1
166241: 95 88 01                 a1 = a1 + 0x1
166244: 7b 18 f0 01              u64 [sp + 0x1f0] = a1
166248: 3a 07 78 12 03           a0 = u64 [0x31278]
166253: 97 78 0d                 a1 = a0 << 0xd
166256: d3 87 07                 a0 = a0 ^ a1
166259: 98 78 07                 a1 = a0 >> 0x7
166262: d3 87 07                 a0 = a0 ^ a1
166265: 97 78 11                 a1 = a0 << 0x11
166268: d3 87 07                 a0 = a0 ^ a1
166271: 3e 07 78 12 03           u64 [0x31278] = a0
166276: 82 19 b0 01              a2 = u64 [sp + 0x1b0]
166280: 52 09 06                 jump @11565 if a2 != 0
      :                          @11564
166283: 28 0c 6b                 jump @13240
      :                          @11565
166286: 82 18 30 01              a1 = u64 [sp + 0x130]
166290: 82 1a 20 01              a3 = u64 [sp + 0x120]
166294: ca 27 07                 a0 = a0 * t0
166297: cd 97 06                 s1 = a0 %u a2
166300: 95 66 01                 s1 = s1 + 0x1
166303: ab a8 16                 jump @11568 if a1 != a3
      :                          @11566
166306: 95 17 20 01              a0 = sp + 0x120
166310: 50 20 56 09 9a c9 fd     ra = 2390, jump @1581
      :                          @11567 [@dyn 1195]
166317: 82 12 70                 t0 = u64 [sp + 0x70]
166320: 82 18 30 01              a1 = u64 [sp + 0x130]
166324: 01                       fallthrough
      :                          @11568
166325: 82 17 28 01              a0 = u64 [sp + 0x128]
166329: 97 89 03                 a2 = a1 << 0x3
166332: c8 97 07                 a0 = a0 + a2
166335: 7b 76                    u64 [a0] = s1
166337: 95 88 01                 a1 = a1 + 0x1
166340: 7b 18 30 01              u64 [sp + 0x130] = a1
166344: 33 0c 78 12 03           a5 = 0x31278
166349: 3a 07 78 12 03           a0 = u64 [0x31278]
166354: 97 78 0d                 a1 = a0 << 0xd
166357: d3 87 07                 a0 = a0 ^ a1
166360: 98 78 07                 a1 = a0 >> 0x7
166363: d3 87 07                 a0 = a0 ^ a1
166366: 97 78 11                 a1 = a0 << 0x11
166369: d3 87 07                 a0 = a0 ^ a1
166372: ca 27 09                 a2 = a0 * t0
166375: 3a 08 68 11 03           a1 = u64 [0x31168]
166380: 3e 07 78 12 03           u64 [0x31278] = a0
166385: 98 97 03                 a0 = a2 >> 0x3
166388: d6 87 07                 a0 = a0 mulhu a1
166391: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
166395: 82 1a e0 01              a3 = u64 [sp + 0x1e0]
166399: 98 77 04                 a0 = a0 >> 0x4
166402: 33 0b e8 03              a4 = 0x3e8
166406: ca b7 07                 a0 = a0 * a4
166409: c9 79 06                 s1 = a2 - a0
166412: ab a8 1b                 jump @11571 if a1 != a3
      :                          @11569
166415: 95 17 e0 01              a0 = sp + 0x1e0
166419: 50 20 58 09 2d c9 fd     ra = 2392, jump @1581
      :                          @11570 [@dyn 1196]
166426: 33 0c 78 12 03           a5 = 0x31278
166431: 82 12 70                 t0 = u64 [sp + 0x70]
166434: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
166438: 01                       fallthrough
      :                          @11571
166439: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
166443: 97 89 03                 a2 = a1 << 0x3
166446: c8 97 07                 a0 = a0 + a2
166449: 7b 76                    u64 [a0] = s1
166451: 95 88 01                 a1 = a1 + 0x1
166454: 7b 18 f0 01              u64 [sp + 0x1f0] = a1
166458: 3a 07 78 12 03           a0 = u64 [0x31278]
166463: 97 78 0d                 a1 = a0 << 0xd
166466: d3 87 07                 a0 = a0 ^ a1
166469: 98 78 07                 a1 = a0 >> 0x7
166472: d3 87 07                 a0 = a0 ^ a1
166475: 97 78 11                 a1 = a0 << 0x11
166478: d3 87 07                 a0 = a0 ^ a1
166481: 3e 07 78 12 03           u64 [0x31278] = a0
166486: 82 19 b0 01              a2 = u64 [sp + 0x1b0]
166490: 52 09 06                 jump @11573 if a2 != 0
      :                          @11572
166493: 28 3a 6a                 jump @13240
      :                          @11573
166496: 82 18 30 01              a1 = u64 [sp + 0x130]
166500: 82 1a 20 01              a3 = u64 [sp + 0x120]
166504: ca 27 07                 a0 = a0 * t0
166507: cd 97 06                 s1 = a0 %u a2
166510: 95 66 01                 s1 = s1 + 0x1
166513: ab a8 16                 jump @11576 if a1 != a3
      :                          @11574
166516: 95 17 20 01              a0 = sp + 0x120
166520: 50 20 5a 09 c8 c8 fd     ra = 2394, jump @1581
      :                          @11575 [@dyn 1197]
166527: 82 12 70                 t0 = u64 [sp + 0x70]
166530: 82 18 30 01              a1 = u64 [sp + 0x130]
166534: 01                       fallthrough
      :                          @11576
166535: 82 17 28 01              a0 = u64 [sp + 0x128]
166539: 97 89 03                 a2 = a1 << 0x3
166542: c8 97 07                 a0 = a0 + a2
166545: 7b 76                    u64 [a0] = s1
166547: 95 88 01                 a1 = a1 + 0x1
166550: 7b 18 30 01              u64 [sp + 0x130] = a1
166554: 33 0c 78 12 03           a5 = 0x31278
166559: 3a 07 78 12 03           a0 = u64 [0x31278]
166564: 97 78 0d                 a1 = a0 << 0xd
166567: d3 87 07                 a0 = a0 ^ a1
166570: 98 78 07                 a1 = a0 >> 0x7
166573: d3 87 07                 a0 = a0 ^ a1
166576: 97 78 11                 a1 = a0 << 0x11
166579: d3 87 07                 a0 = a0 ^ a1
166582: ca 27 09                 a2 = a0 * t0
166585: 3a 08 68 11 03           a1 = u64 [0x31168]
166590: 3e 07 78 12 03           u64 [0x31278] = a0
166595: 98 97 03                 a0 = a2 >> 0x3
166598: d6 87 07                 a0 = a0 mulhu a1
166601: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
166605: 82 1a e0 01              a3 = u64 [sp + 0x1e0]
166609: 98 77 04                 a0 = a0 >> 0x4
166612: 33 0b e8 03              a4 = 0x3e8
166616: ca b7 07                 a0 = a0 * a4
166619: c9 79 06                 s1 = a2 - a0
166622: ab a8 1b                 jump @11579 if a1 != a3
      :                          @11577
166625: 95 17 e0 01              a0 = sp + 0x1e0
166629: 50 20 5c 09 5b c8 fd     ra = 2396, jump @1581
      :                          @11578 [@dyn 1198]
166636: 33 0c 78 12 03           a5 = 0x31278
166641: 82 12 70                 t0 = u64 [sp + 0x70]
166644: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
166648: 01                       fallthrough
      :                          @11579
166649: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
166653: 97 89 03                 a2 = a1 << 0x3
166656: c8 97 07                 a0 = a0 + a2
166659: 7b 76                    u64 [a0] = s1
166661: 95 88 01                 a1 = a1 + 0x1
166664: 7b 18 f0 01              u64 [sp + 0x1f0] = a1
166668: 3a 07 78 12 03           a0 = u64 [0x31278]
166673: 97 78 0d                 a1 = a0 << 0xd
166676: d3 87 07                 a0 = a0 ^ a1
166679: 98 78 07                 a1 = a0 >> 0x7
166682: d3 87 07                 a0 = a0 ^ a1
166685: 97 78 11                 a1 = a0 << 0x11
166688: d3 87 07                 a0 = a0 ^ a1
166691: 3e 07 78 12 03           u64 [0x31278] = a0
166696: 82 19 b0 01              a2 = u64 [sp + 0x1b0]
166700: 52 09 06                 jump @11581 if a2 != 0
      :                          @11580
166703: 28 68 69                 jump @13240
      :                          @11581
166706: 82 18 30 01              a1 = u64 [sp + 0x130]
166710: 82 1a 20 01              a3 = u64 [sp + 0x120]
166714: ca 27 07                 a0 = a0 * t0
166717: cd 97 06                 s1 = a0 %u a2
166720: 95 66 01                 s1 = s1 + 0x1
166723: ab a8 16                 jump @11584 if a1 != a3
      :                          @11582
166726: 95 17 20 01              a0 = sp + 0x120
166730: 50 20 5e 09 f6 c7 fd     ra = 2398, jump @1581
      :                          @11583 [@dyn 1199]
166737: 82 12 70                 t0 = u64 [sp + 0x70]
166740: 82 18 30 01              a1 = u64 [sp + 0x130]
166744: 01                       fallthrough
      :                          @11584
166745: 82 17 28 01              a0 = u64 [sp + 0x128]
166749: 97 89 03                 a2 = a1 << 0x3
166752: c8 97 07                 a0 = a0 + a2
166755: 7b 76                    u64 [a0] = s1
166757: 95 88 01                 a1 = a1 + 0x1
166760: 7b 18 30 01              u64 [sp + 0x130] = a1
166764: 3a 08 78 12 03           a1 = u64 [0x31278]
166769: 97 89 0d                 a2 = a1 << 0xd
166772: d3 98 08                 a1 = a1 ^ a2
166775: 98 89 07                 a2 = a1 >> 0x7
166778: d3 98 08                 a1 = a1 ^ a2
166781: 97 89 11                 a2 = a1 << 0x11
166784: d3 98 08                 a1 = a1 ^ a2
166787: ca 28 09                 a2 = a1 * t0
166790: 3a 0a 68 11 03           a3 = u64 [0x31168]
166795: 3e 08 78 12 03           u64 [0x31278] = a1
166800: 98 97 03                 a0 = a2 >> 0x3
166803: d6 a7 07                 a0 = a0 mulhu a3
166806: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
166810: 82 1a e0 01              a3 = u64 [sp + 0x1e0]
166814: 98 77 04                 a0 = a0 >> 0x4
166817: 33 0b e8 03              a4 = 0x3e8
166821: ca b7 07                 a0 = a0 * a4
166824: c9 79 06                 s1 = a2 - a0
166827: ab a8 13                 jump @11587 if a1 != a3
      :                          @11585
166830: 95 17 e0 01              a0 = sp + 0x1e0
166834: 50 20 60 09 8e c7 fd     ra = 2400, jump @1581
      :                          @11586 [@dyn 1200]
166841: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
166845: 01                       fallthrough
      :                          @11587
166846: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
166850: 97 89 03                 a2 = a1 << 0x3
166853: c8 97 07                 a0 = a0 + a2
166856: 7b 76                    u64 [a0] = s1
166858: 95 8a 01                 a3 = a1 + 0x1
166861: 7b 1a f0 01              u64 [sp + 0x1f0] = a3
166865: 82 17 28 01              a0 = u64 [sp + 0x128]
166869: 82 18 30 01              a1 = u64 [sp + 0x130]
166873: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
166877: 82 1b b0 01              a4 = u64 [sp + 0x1b0]
166881: 50 20 62 09 3b 2d fe     ra = 2402, jump @3412
      :                          @11588 [@dyn 1201]
166888: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
166892: 95 17 b0 01              a0 = sp + 0x1b0
166896: 7b 17 90 02              u64 [sp + 0x290] = a0
166900: 33 07 2c 0c              a0 = 0xc2c
166904: 7b 17 98 02              u64 [sp + 0x298] = a0
166908: 95 18 20 01              a1 = sp + 0x120
166912: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
166916: 33 08 34 02              a1 = 0x234
166920: 7b 18 a8 02              u64 [sp + 0x2a8] = a1
166924: 95 19 e0 01              a2 = sp + 0x1e0
166928: 7b 19 b0 02              u64 [sp + 0x2b0] = a2
166932: 7b 18 b8 02              u64 [sp + 0x2b8] = a1
166936: 95 18 c8 01              a1 = sp + 0x1c8
166940: 7b 18 c0 02              u64 [sp + 0x2c0] = a1
166944: 7b 17 c8 02              u64 [sp + 0x2c8] = a0
166948: 33 07 18 23 01           a0 = 0x12318
166953: 7b 17 38 02              u64 [sp + 0x238] = a0
166957: 49 21 40 02 04           u64 [sp + 576] = 0x4
166962: 49 21 58 02              u64 [sp + 600] = 0
166966: 95 18 90 02              a1 = sp + 0x290
166970: 7b 18 48 02              u64 [sp + 0x248] = a1
166974: 49 21 50 02 04           u64 [sp + 592] = 0x4
166979: 95 17 08 02              a0 = sp + 0x208
166983: 95 18 38 02              a1 = sp + 0x238
166987: 50 20 64 09 af c3 fd     ra = 2404, jump @1503
      :                          @11589 [@dyn 1202]
166994: 82 16 10 02              s1 = u64 [sp + 0x210]
166998: 82 1b 18 02              a4 = u64 [sp + 0x218]
167002: 82 17 08 02              a0 = u64 [sp + 0x208]
167006: 7b 17 70                 u64 [sp + 0x70] = a0
167009: 33 07 02                 a0 = 0x2
167012: 33 08                    a1 = 0
167014: 33 09                    a2 = 0
167016: 64 6a                    a3 = s1
167018: 33 00 66 09              ra = 0x966
167022: 0a 64                    ecalli 100 // 'log'
167024: 01                       fallthrough
      :                          @11590 [@dyn 1203]
167025: 82 1c 70                 a5 = u64 [sp + 0x70]
167028: 82 17 68                 a0 = u64 [sp + 0x68]
167031: c8 c7 07                 a0 = a0 + a5
167034: 53 37 00 00 ff 25        jump @11596 if a0 <u 4294901760
      :                          @11591
167040: 33 07 c0 22 03           a0 = 0x322c0
167045: 95 77 00 00 01           a0 = a0 + 0x10000
167050: 01                       fallthrough
      :                          @11592
167051: 82 78                    a1 = u64 [a0]
167053: c9 87 09                 a2 = a0 - a1
167056: ab 69 0f                 jump @11596 if a2 != s1
      :                          @11593
167059: c9 c8 09                 a2 = a1 - a5
167062: 01                       fallthrough
      :                          @11594
167063: 82 7a                    a3 = u64 [a0]
167065: ab 8a f2                 jump @11592 if a3 != a1
      :                          @11595
167068: 7b 79                    u64 [a0] = a2
167070: 01                       fallthrough
      :                          @11596
167071: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
167075: 51 08 30                 jump @11603 if a1 == 0
      :                          @11597
167078: 56 28 00 20 2d           jump @11603 if a1 >u 8192
      :                          @11598
167083: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
167087: 97 88 03                 a1 = a1 << 0x3
167090: 33 09 c0 22 03           a2 = 0x322c0
167095: 95 99 00 00 01           a2 = a2 + 0x10000
167100: 01                       fallthrough
      :                          @11599
167101: 82 9a                    a3 = u64 [a2]
167103: c9 a9 0b                 a4 = a2 - a3
167106: ab 7b 11                 jump @11603 if a4 != a0
      :                          @11600
167109: c9 8a 0b                 a4 = a3 - a1
167112: 01                       fallthrough
      :                          @11601
167113: 82 9c                    a5 = u64 [a2]
167115: ab ac f2                 jump @11599 if a5 != a3
      :                          @11602
167118: 7b 9b                    u64 [a2] = a4
167120: 33 06                    s1 = 0
167122: 01                       fallthrough
      :                          @11603
167123: 82 18 20 01              a1 = u64 [sp + 0x120]
167127: 52 08 06                 jump @11605 if a1 != 0
      :                          @11604
167130: 28 a9 55                 jump @12868
      :                          @11605
167133: 54 28 00 20 08           jump @11607 if a1 <=u 8192
      :                          @11606
167138: 28 a1 55                 jump @12868
      :                          @11607
167141: 82 17 28 01              a0 = u64 [sp + 0x128]
167145: 97 88 03                 a1 = a1 << 0x3
167148: 33 09 c0 22 03           a2 = 0x322c0
167153: 95 99 00 00 01           a2 = a2 + 0x10000
167158: 01                       fallthrough
      :                          @11608
167159: 82 9a                    a3 = u64 [a2]
167161: c9 a9 0b                 a4 = a2 - a3
167164: aa 7b 06                 jump @11610 if a4 == a0
      :                          @11609
167167: 28 84 55                 jump @12868
      :                          @11610
167170: c9 8a 0b                 a4 = a3 - a1
167173: 01                       fallthrough
      :                          @11611
167174: 82 9c                    a5 = u64 [a2]
167176: ab ac ef                 jump @11608 if a5 != a3
      :                          @11612
167179: 7b 9b                    u64 [a2] = a4
167181: 33 06                    s1 = 0
167183: 01                       fallthrough
      :                          @11613
167184: ab ac e7                 jump @11608 if a5 != a3
      :                          @11614
167187: 28 70 55                 jump @12868
      :                          @11615 [@dyn 1204]
167190: 3a 08 78 12 03           a1 = u64 [0x31278]
167195: 97 89 0d                 a2 = a1 << 0xd
167198: d3 98 08                 a1 = a1 ^ a2
167201: 98 89 07                 a2 = a1 >> 0x7
167204: 3a 0a 60 11 03           a3 = u64 [0x31160]
167209: d3 98 08                 a1 = a1 ^ a2
167212: 97 89 11                 a2 = a1 << 0x11
167215: d3 98 08                 a1 = a1 ^ a2
167218: ca a8 09                 a2 = a1 * a3
167221: 3e 08 78 12 03           u64 [0x31278] = a1
167226: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
167236: d6 b9 08                 a1 = a2 mulhu a4
167239: 98 88 03                 a1 = a1 >> 0x3
167242: 33 0c 0a                 a5 = 0xa
167245: 3a 06 78 12 03           s1 = u64 [0x31278]
167250: ca c8 08                 a1 = a1 * a5
167253: c9 89 08                 a1 = a2 - a1
167256: 97 69 0d                 a2 = s1 << 0xd
167259: d3 96 06                 s1 = s1 ^ a2
167262: 98 69 07                 a2 = s1 >> 0x7
167265: d3 96 06                 s1 = s1 ^ a2
167268: 97 69 11                 a2 = s1 << 0x11
167271: d3 69 09                 a2 = a2 ^ s1
167274: ca a9 0a                 a3 = a2 * a3
167277: 3e 09 78 12 03           u64 [0x31278] = a2
167282: d6 ba 07                 a0 = a3 mulhu a4
167285: 98 77 03                 a0 = a0 >> 0x3
167288: ca c7 07                 a0 = a0 * a5
167291: c9 7a 06                 s1 = a3 - a0
167294: 95 17 20 01              a0 = sp + 0x120
167298: 50 20 6a 09 83 f1 fd     ra = 2410, jump @2255
      :                          @11616 [@dyn 1205]
167305: 95 17 e0 01              a0 = sp + 0x1e0
167309: 64 68                    a1 = s1
167311: 50 20 6c 09 76 f1 fd     ra = 2412, jump @2255
      :                          @11617 [@dyn 1206]
167318: 82 17 28 01              a0 = u64 [sp + 0x128]
167322: 82 18 30 01              a1 = u64 [sp + 0x130]
167326: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
167330: 82 1a f0 01              a3 = u64 [sp + 0x1f0]
167334: 50 20 6e 09 dc 2c fe     ra = 2414, jump @3449
      :                          @11618 [@dyn 1207]
167341: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
167345: 95 17 20 01              a0 = sp + 0x120
167349: 7b 17 90 02              u64 [sp + 0x290] = a0
167353: 33 07 3c 02              a0 = 0x23c
167357: 7b 17 98 02              u64 [sp + 0x298] = a0
167361: 95 18 e0 01              a1 = sp + 0x1e0
167365: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
167369: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
167373: 95 17 c8 01              a0 = sp + 0x1c8
167377: 7b 17 b0 02              u64 [sp + 0x2b0] = a0
167381: 33 07 2c 0c              a0 = 0xc2c
167385: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
167389: 33 07 58 23 01           a0 = 0x12358
167394: 7b 17 38 02              u64 [sp + 0x238] = a0
167398: 49 21 40 02 03           u64 [sp + 576] = 0x3
167403: 49 21 58 02              u64 [sp + 600] = 0
167407: 95 18 90 02              a1 = sp + 0x290
167411: 7b 18 48 02              u64 [sp + 0x248] = a1
167415: 49 21 50 02 03           u64 [sp + 592] = 0x3
167420: 95 17 08 02              a0 = sp + 0x208
167424: 95 18 38 02              a1 = sp + 0x238
167428: 50 20 70 09 f6 c1 fd     ra = 2416, jump @1503
      :                          @11619 [@dyn 1208]
167435: 82 16 10 02              s1 = u64 [sp + 0x210]
167439: 82 1b 18 02              a4 = u64 [sp + 0x218]
167443: 82 17 08 02              a0 = u64 [sp + 0x208]
167447: 7b 17 70                 u64 [sp + 0x70] = a0
167450: 33 07 02                 a0 = 0x2
167453: 33 08                    a1 = 0
167455: 33 09                    a2 = 0
167457: 64 6a                    a3 = s1
167459: 33 00 72 09              ra = 0x972
167463: 0a 64                    ecalli 100 // 'log'
167465: 01                       fallthrough
      :                          @11620 [@dyn 1209]
167466: 82 1c 70                 a5 = u64 [sp + 0x70]
167469: 82 17 68                 a0 = u64 [sp + 0x68]
167472: c8 c7 07                 a0 = a0 + a5
167475: 53 37 00 00 ff 25        jump @11626 if a0 <u 4294901760
      :                          @11621
167481: 33 07 c0 22 03           a0 = 0x322c0
167486: 95 77 00 00 01           a0 = a0 + 0x10000
167491: 01                       fallthrough
      :                          @11622
167492: 82 78                    a1 = u64 [a0]
167494: c9 87 09                 a2 = a0 - a1
167497: ab 69 0f                 jump @11626 if a2 != s1
      :                          @11623
167500: c9 c8 09                 a2 = a1 - a5
167503: 01                       fallthrough
      :                          @11624
167504: 82 7a                    a3 = u64 [a0]
167506: ab 8a f2                 jump @11622 if a3 != a1
      :                          @11625
167509: 7b 79                    u64 [a0] = a2
167511: 01                       fallthrough
      :                          @11626
167512: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
167516: 51 07 2e                 jump @11633 if a0 == 0
      :                          @11627
167519: 56 37 00 00 01 2b        jump @11633 if a0 >u 65536
      :                          @11628
167525: 82 18 e8 01              a1 = u64 [sp + 0x1e8]
167529: 33 0a c0 22 03           a3 = 0x322c0
167534: 95 a9 00 00 01           a2 = a3 + 0x10000
167539: 01                       fallthrough
      :                          @11629
167540: 82 9a                    a3 = u64 [a2]
167542: c9 a9 0b                 a4 = a2 - a3
167545: ab 8b 11                 jump @11633 if a4 != a1
      :                          @11630
167548: c9 7a 0b                 a4 = a3 - a0
167551: 01                       fallthrough
      :                          @11631
167552: 82 9c                    a5 = u64 [a2]
167554: ab ac f2                 jump @11629 if a5 != a3
      :                          @11632
167557: 7b 9b                    u64 [a2] = a4
167559: 33 06                    s1 = 0
167561: 01                       fallthrough
      :                          @11633
167562: 82 17 20 01              a0 = u64 [sp + 0x120]
167566: 52 07 06                 jump @11635 if a0 != 0
      :                          @11634
167569: 28 f2 53                 jump @12868
      :                          @11635
167572: 54 37 00 00 01 09        jump @11637 if a0 <=u 65536
      :                          @11636
167578: 28 e9 53                 jump @12868
      :                          @11637
167581: 82 18 28 01              a1 = u64 [sp + 0x128]
167585: 33 0a c0 22 03           a3 = 0x322c0
167590: 95 a9 00 00 01           a2 = a3 + 0x10000
167595: 01                       fallthrough
      :                          @11638
167596: 82 9a                    a3 = u64 [a2]
167598: c9 a9 0b                 a4 = a2 - a3
167601: aa 8b 06                 jump @11640 if a4 == a1
      :                          @11639
167604: 28 cf 53                 jump @12868
      :                          @11640
167607: c9 7a 0b                 a4 = a3 - a0
167610: 01                       fallthrough
      :                          @11641
167611: 82 9c                    a5 = u64 [a2]
167613: ab ac ef                 jump @11638 if a5 != a3
      :                          @11642
167616: 7b 9b                    u64 [a2] = a4
167618: 33 06                    s1 = 0
167620: 01                       fallthrough
      :                          @11643
167621: ab ac e7                 jump @11638 if a5 != a3
      :                          @11644
167624: 28 bb 53                 jump @12868
      :                          @11645 [@dyn 1210]
167627: 3a 08 78 12 03           a1 = u64 [0x31278]
167632: 97 89 0d                 a2 = a1 << 0xd
167635: d3 98 08                 a1 = a1 ^ a2
167638: 98 89 07                 a2 = a1 >> 0x7
167641: d3 98 08                 a1 = a1 ^ a2
167644: 3a 09 60 11 03           a2 = u64 [0x31160]
167649: 97 8a 11                 a3 = a1 << 0x11
167652: d3 a8 08                 a1 = a1 ^ a3
167655: ca 98 09                 a2 = a1 * a2
167658: 3e 08 78 12 03           u64 [0x31278] = a1
167663: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
167673: d6 79 07                 a0 = a2 mulhu a0
167676: 98 77 04                 a0 = a0 >> 0x4
167679: 96 77 14                 a0 = a0 * 0x14
167682: c9 79 08                 a1 = a2 - a0
167685: 95 17 e0 01              a0 = sp + 0x1e0
167689: 95 16 e0 01              s1 = sp + 0x1e0
167693: 50 20 76 09 b0 e6 fd     ra = 2422, jump @2172
      :                          @11646 [@dyn 1211]
167700: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
167704: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
167708: 50 20 78 09 da 2d fe     ra = 2424, jump @3515
      :                          @11647 [@dyn 1212]
167715: 7b 17 20 01              u64 [sp + 0x120] = a0
167719: 7b 16 38 02              u64 [sp + 0x238] = s1
167723: 33 07 34 02              a0 = 0x234
167727: 7b 17 40 02              u64 [sp + 0x240] = a0
167731: 95 17 20 01              a0 = sp + 0x120
167735: 7b 17 48 02              u64 [sp + 0x248] = a0
167739: 33 07 2c 0c              a0 = 0xc2c
167743: 7b 17 50 02              u64 [sp + 0x250] = a0
167747: 33 07 98 23 01           a0 = 0x12398
167752: 7b 17 90 02              u64 [sp + 0x290] = a0
167756: 49 21 98 02 02           u64 [sp + 664] = 0x2
167761: 49 21 b0 02              u64 [sp + 688] = 0
167765: 95 18 38 02              a1 = sp + 0x238
167769: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
167773: 49 21 a8 02 02           u64 [sp + 680] = 0x2
167778: 95 17 08 02              a0 = sp + 0x208
167782: 95 18 90 02              a1 = sp + 0x290
167786: 50 20 7a 09 90 c0 fd     ra = 2426, jump @1503
      :                          @11648 [@dyn 1213]
167793: 82 16 10 02              s1 = u64 [sp + 0x210]
167797: 82 1b 18 02              a4 = u64 [sp + 0x218]
167801: 82 17 08 02              a0 = u64 [sp + 0x208]
167805: 7b 17 70                 u64 [sp + 0x70] = a0
167808: 33 07 02                 a0 = 0x2
167811: 33 08                    a1 = 0
167813: 33 09                    a2 = 0
167815: 64 6a                    a3 = s1
167817: 33 00 7c 09              ra = 0x97c
167821: 0a 64                    ecalli 100 // 'log'
167823: 01                       fallthrough
      :                          @11649 [@dyn 1214]
167824: 82 1c 70                 a5 = u64 [sp + 0x70]
167827: 82 17 68                 a0 = u64 [sp + 0x68]
167830: c8 c7 07                 a0 = a0 + a5
167833: 53 37 00 00 ff 25        jump @11655 if a0 <u 4294901760
      :                          @11650
167839: 33 07 c0 22 03           a0 = 0x322c0
167844: 95 77 00 00 01           a0 = a0 + 0x10000
167849: 01                       fallthrough
      :                          @11651
167850: 82 78                    a1 = u64 [a0]
167852: c9 87 09                 a2 = a0 - a1
167855: ab 69 0f                 jump @11655 if a2 != s1
      :                          @11652
167858: c9 c8 09                 a2 = a1 - a5
167861: 01                       fallthrough
      :                          @11653
167862: 82 7a                    a3 = u64 [a0]
167864: ab 8a f2                 jump @11651 if a3 != a1
      :                          @11654
167867: 7b 79                    u64 [a0] = a2
167869: 01                       fallthrough
      :                          @11655
167870: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
167874: 52 08 06                 jump @11657 if a1 != 0
      :                          @11656
167877: 28 be 52                 jump @12868
      :                          @11657
167880: 54 28 00 20 08           jump @11659 if a1 <=u 8192
      :                          @11658
167885: 28 b6 52                 jump @12868
      :                          @11659
167888: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
167892: 97 88 03                 a1 = a1 << 0x3
167895: 33 09 c0 22 03           a2 = 0x322c0
167900: 95 99 00 00 01           a2 = a2 + 0x10000
167905: 01                       fallthrough
      :                          @11660
167906: 82 9a                    a3 = u64 [a2]
167908: c9 a9 0b                 a4 = a2 - a3
167911: aa 7b 06                 jump @11662 if a4 == a0
      :                          @11661
167914: 28 99 52                 jump @12868
      :                          @11662
167917: c9 8a 0b                 a4 = a3 - a1
167920: 01                       fallthrough
      :                          @11663
167921: 82 9c                    a5 = u64 [a2]
167923: ab ac ef                 jump @11660 if a5 != a3
      :                          @11664
167926: 7b 9b                    u64 [a2] = a4
167928: 33 06                    s1 = 0
167930: 01                       fallthrough
      :                          @11665
167931: ab ac e7                 jump @11660 if a5 != a3
      :                          @11666
167934: 28 85 52                 jump @12868
      :                          @11667 [@dyn 1215]
167937: 3a 08 78 12 03           a1 = u64 [0x31278]
167942: 97 89 0d                 a2 = a1 << 0xd
167945: d3 98 08                 a1 = a1 ^ a2
167948: 98 89 07                 a2 = a1 >> 0x7
167951: d3 98 08                 a1 = a1 ^ a2
167954: 97 89 11                 a2 = a1 << 0x11
167957: d3 89 09                 a2 = a2 ^ a1
167960: 97 8a 02                 a3 = a1 << 0x2
167963: 3e 09 78 12 03           u64 [0x31278] = a2
167968: 3a 09 78 12 03           a2 = u64 [0x31278]
167973: c8 a8 08                 a1 = a1 + a3
167976: 84 88 07                 a1 = a1 & 0x7
167979: 97 9a 0d                 a3 = a2 << 0xd
167982: d3 a9 09                 a2 = a2 ^ a3
167985: 98 9a 07                 a3 = a2 >> 0x7
167988: d3 a9 09                 a2 = a2 ^ a3
167991: 97 9a 11                 a3 = a2 << 0x11
167994: d3 9a 0a                 a3 = a3 ^ a2
167997: 97 9b 02                 a4 = a2 << 0x2
168000: c8 b9 09                 a2 = a2 + a4
168003: 3e 0a 78 12 03           u64 [0x31278] = a3
168008: 84 96 07                 s1 = a2 & 0x7
168011: 95 17 b0 01              a0 = sp + 0x1b0
168015: 50 20 80 09 b6 ee fd     ra = 2432, jump @2255
      :                          @11668 [@dyn 1216]
168022: 95 17 c8 01              a0 = sp + 0x1c8
168026: 64 68                    a1 = s1
168028: 50 20 82 09 a9 ee fd     ra = 2434, jump @2255
      :                          @11669 [@dyn 1217]
168035: 82 18 b8 01              a1 = u64 [sp + 0x1b8]
168039: 7b 18 70                 u64 [sp + 0x70] = a1
168042: 82 19 c0 01              a2 = u64 [sp + 0x1c0]
168046: 7b 19 60                 u64 [sp + 0x60] = a2
168049: 95 17 e0 01              a0 = sp + 0x1e0
168053: 50 20 84 09 5c 71        ra = 2436, jump @13507
      :                          @11670 [@dyn 1218]
168059: 82 16 d0 01              s1 = u64 [sp + 0x1d0]
168063: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
168067: 7b 19 58                 u64 [sp + 0x58] = a2
168070: 95 17 08 02              a0 = sp + 0x208
168074: 64 68                    a1 = s1
168076: 50 20 86 09 45 71        ra = 2438, jump @13507
      :                          @11671 [@dyn 1219]
168082: 82 17 70                 a0 = u64 [sp + 0x70]
168085: 82 18 60                 a1 = u64 [sp + 0x60]
168088: 7b 16 60                 u64 [sp + 0x60] = s1
168091: 64 69                    a2 = s1
168093: 82 1a 58                 a3 = u64 [sp + 0x58]
168096: 50 20 88 09 9b 2d fe     ra = 2440, jump @3552
      :                          @11672 [@dyn 1220]
168103: 7b 17 10 01              u64 [sp + 0x110] = a0
168107: 95 17 e0 01              a0 = sp + 0x1e0
168111: 7b 17 90 02              u64 [sp + 0x290] = a0
168115: 33 07 4c 02              a0 = 0x24c
168119: 7b 17 98 02              u64 [sp + 0x298] = a0
168123: 95 18 08 02              a1 = sp + 0x208
168127: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
168131: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
168135: 95 17 10 01              a0 = sp + 0x110
168139: 7b 17 b0 02              u64 [sp + 0x2b0] = a0
168143: 33 07 2c 0c              a0 = 0xc2c
168147: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
168151: 33 07 b8 23 01           a0 = 0x123b8
168156: 7b 17 38 02              u64 [sp + 0x238] = a0
168160: 49 21 40 02 03           u64 [sp + 576] = 0x3
168165: 49 21 58 02              u64 [sp + 600] = 0
168169: 95 18 90 02              a1 = sp + 0x290
168173: 7b 18 48 02              u64 [sp + 0x248] = a1
168177: 49 21 50 02 03           u64 [sp + 592] = 0x3
168182: 95 17 20 01              a0 = sp + 0x120
168186: 95 18 38 02              a1 = sp + 0x238
168190: 50 20 8a 09 fc be fd     ra = 2442, jump @1503
      :                          @11673 [@dyn 1221]
168197: 82 18 08 02              a1 = u64 [sp + 0x208]
168201: 14 07 00 00 00 00 00 00 00 80 a0 = 0x8000000000000000
168211: d4 78 09                 a2 = a1 | a0
168214: aa 79 06                 jump @11675 if a2 == a0
      :                          @11674
168217: 28 ac 60                 jump @13114
      :                          @11675
168220: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
168224: d4 78 09                 a2 = a1 | a0
168227: aa 79 06                 jump @11677 if a2 == a0
      :                          @11676
168230: 28 d6 60                 jump @13124
      :                          @11677
168233: 82 16 28 01              s1 = u64 [sp + 0x128]
168237: 82 1b 30 01              a4 = u64 [sp + 0x130]
168241: 82 17 20 01              a0 = u64 [sp + 0x120]
168245: 7b 17 58                 u64 [sp + 0x58] = a0
168248: 33 07 02                 a0 = 0x2
168251: 33 08                    a1 = 0
168253: 33 09                    a2 = 0
168255: 64 6a                    a3 = s1
168257: 33 00 8c 09              ra = 0x98c
168261: 0a 64                    ecalli 100 // 'log'
168263: 01                       fallthrough
      :                          @11678 [@dyn 1222]
168264: 82 17 58                 a0 = u64 [sp + 0x58]
168267: 82 18 68                 a1 = u64 [sp + 0x68]
168270: c8 78 08                 a1 = a1 + a0
168273: 33 03 00 00 ff           t1 = 0xffffffffffff0000
168278: ac 38 24                 jump @11684 if a1 <u t1
      :                          @11679
168281: 33 08 c0 22 03           a1 = 0x322c0
168286: 95 88 00 00 01           a1 = a1 + 0x10000
168291: 01                       fallthrough
      :                          @11680
168292: 82 89                    a2 = u64 [a1]
168294: c9 98 0a                 a3 = a1 - a2
168297: ab 6a 11                 jump @11684 if a3 != s1
      :                          @11681
168300: c9 79 0a                 a3 = a2 - a0
168303: 01                       fallthrough
      :                          @11682
168304: 82 8b                    a4 = u64 [a1]
168306: ab 9b f2                 jump @11680 if a4 != a2
      :                          @11683
168309: 7b 8a                    u64 [a1] = a3
168311: 33 0c                    a5 = 0
168313: 01                       fallthrough
      :                          @11684
168314: 82 18 c8 01              a1 = u64 [sp + 0x1c8]
168318: 82 19 68                 a2 = u64 [sp + 0x68]
168321: c8 89 09                 a2 = a2 + a1
168324: 82 12 70                 t0 = u64 [sp + 0x70]
168327: 82 16 60                 s1 = u64 [sp + 0x60]
168330: ac 39 24                 jump @11690 if a2 <u t1
      :                          @11685
168333: 33 07 c0 22 03           a0 = 0x322c0
168338: 95 77 00 00 01           a0 = a0 + 0x10000
168343: 01                       fallthrough
      :                          @11686
168344: 82 79                    a2 = u64 [a0]
168346: c9 97 0a                 a3 = a0 - a2
168349: ab 6a 11                 jump @11690 if a3 != s1
      :                          @11687
168352: c9 89 0a                 a3 = a2 - a1
168355: 01                       fallthrough
      :                          @11688
168356: 82 7b                    a4 = u64 [a0]
168358: ab 9b f2                 jump @11686 if a4 != a2
      :                          @11689
168361: 7b 7a                    u64 [a0] = a3
168363: 33 0c                    a5 = 0
168365: 01                       fallthrough
      :                          @11690
168366: 82 17 b0 01              a0 = u64 [sp + 0x1b0]
168370: 82 18 68                 a1 = u64 [sp + 0x68]
168373: c8 78 08                 a1 = a1 + a0
168376: 55 38 00 00 ff 09        jump @11692 if a1 >=u 4294901760
      :                          @11691
168382: 28 c5 50                 jump @12868
      :                          @11692
168385: 33 08 c0 22 03           a1 = 0x322c0
168390: 95 88 00 00 01           a1 = a1 + 0x10000
168395: 01                       fallthrough
      :                          @11693
168396: 82 89                    a2 = u64 [a1]
168398: c9 98 0a                 a3 = a1 - a2
168401: aa 2a 06                 jump @11695 if a3 == t0
      :                          @11694
168404: 28 af 50                 jump @12868
      :                          @11695
168407: c9 79 0a                 a3 = a2 - a0
168410: 01                       fallthrough
      :                          @11696
168411: 82 8b                    a4 = u64 [a1]
168413: ab 9b ef                 jump @11693 if a4 != a2
      :                          @11697
168416: 7b 8a                    u64 [a1] = a3
168418: 33 0c                    a5 = 0
168420: 01                       fallthrough
      :                          @11698
168421: ab 9b e7                 jump @11693 if a4 != a2
      :                          @11699
168424: 28 9b 50                 jump @12868
      :                          @11700 [@dyn 1223]
168427: 3a 08 78 12 03           a1 = u64 [0x31278]
168432: 97 89 0d                 a2 = a1 << 0xd
168435: d3 98 08                 a1 = a1 ^ a2
168438: 98 89 07                 a2 = a1 >> 0x7
168441: d3 98 08                 a1 = a1 ^ a2
168444: 97 89 11                 a2 = a1 << 0x11
168447: d3 89 09                 a2 = a2 ^ a1
168450: 97 8a 02                 a3 = a1 << 0x2
168453: 3e 09 78 12 03           u64 [0x31278] = a2
168458: 3a 09 78 12 03           a2 = u64 [0x31278]
168463: c8 a8 08                 a1 = a1 + a3
168466: 84 88 07                 a1 = a1 & 0x7
168469: 97 9a 0d                 a3 = a2 << 0xd
168472: d3 a9 09                 a2 = a2 ^ a3
168475: 98 9a 07                 a3 = a2 >> 0x7
168478: d3 a9 09                 a2 = a2 ^ a3
168481: 97 9a 11                 a3 = a2 << 0x11
168484: d3 9a 0a                 a3 = a3 ^ a2
168487: 97 9b 02                 a4 = a2 << 0x2
168490: c8 b9 09                 a2 = a2 + a4
168493: 3e 0a 78 12 03           u64 [0x31278] = a3
168498: 84 96 07                 s1 = a2 & 0x7
168501: 95 17 b0 01              a0 = sp + 0x1b0
168505: 50 20 90 09 cc ec fd     ra = 2448, jump @2255
      :                          @11701 [@dyn 1224]
168512: 95 17 c8 01              a0 = sp + 0x1c8
168516: 64 68                    a1 = s1
168518: 50 20 92 09 bf ec fd     ra = 2450, jump @2255
      :                          @11702 [@dyn 1225]
168525: 82 18 b8 01              a1 = u64 [sp + 0x1b8]
168529: 7b 18 70                 u64 [sp + 0x70] = a1
168532: 82 19 c0 01              a2 = u64 [sp + 0x1c0]
168536: 7b 19 60                 u64 [sp + 0x60] = a2
168539: 95 17 e0 01              a0 = sp + 0x1e0
168543: 50 20 94 09 72 6f        ra = 2452, jump @13507
      :                          @11703 [@dyn 1226]
168549: 82 16 d0 01              s1 = u64 [sp + 0x1d0]
168553: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
168557: 7b 19 58                 u64 [sp + 0x58] = a2
168560: 95 17 08 02              a0 = sp + 0x208
168564: 64 68                    a1 = s1
168566: 50 20 96 09 5b 6f        ra = 2454, jump @13507
      :                          @11704 [@dyn 1227]
168572: 82 17 70                 a0 = u64 [sp + 0x70]
168575: 82 18 60                 a1 = u64 [sp + 0x60]
168578: 7b 16 60                 u64 [sp + 0x60] = s1
168581: 64 69                    a2 = s1
168583: 82 1a 58                 a3 = u64 [sp + 0x58]
168586: 50 20 98 09 66 2e fe     ra = 2456, jump @3622
      :                          @11705 [@dyn 1228]
168593: 7b 17 10 01              u64 [sp + 0x110] = a0
168597: 95 17 e0 01              a0 = sp + 0x1e0
168601: 7b 17 90 02              u64 [sp + 0x290] = a0
168605: 33 07 4c 02              a0 = 0x24c
168609: 7b 17 98 02              u64 [sp + 0x298] = a0
168613: 95 18 08 02              a1 = sp + 0x208
168617: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
168621: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
168625: 95 17 10 01              a0 = sp + 0x110
168629: 7b 17 b0 02              u64 [sp + 0x2b0] = a0
168633: 33 07 2c 0c              a0 = 0xc2c
168637: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
168641: 33 07 00 24 01           a0 = 0x12400
168646: 7b 17 38 02              u64 [sp + 0x238] = a0
168650: 49 21 40 02 03           u64 [sp + 576] = 0x3
168655: 49 21 58 02              u64 [sp + 600] = 0
168659: 95 18 90 02              a1 = sp + 0x290
168663: 7b 18 48 02              u64 [sp + 0x248] = a1
168667: 49 21 50 02 03           u64 [sp + 592] = 0x3
168672: 95 17 20 01              a0 = sp + 0x120
168676: 95 18 38 02              a1 = sp + 0x238
168680: 50 20 9a 09 12 bd fd     ra = 2458, jump @1503
      :                          @11706 [@dyn 1229]
168687: 82 18 08 02              a1 = u64 [sp + 0x208]
168691: 14 07 00 00 00 00 00 00 00 80 a0 = 0x8000000000000000
168701: d4 78 09                 a2 = a1 | a0
168704: aa 79 06                 jump @11708 if a2 == a0
      :                          @11707
168707: 28 30 5f                 jump @13134
      :                          @11708
168710: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
168714: d4 78 09                 a2 = a1 | a0
168717: aa 79 06                 jump @11710 if a2 == a0
      :                          @11709
168720: 28 5a 5f                 jump @13144
      :                          @11710
168723: 82 16 28 01              s1 = u64 [sp + 0x128]
168727: 82 1b 30 01              a4 = u64 [sp + 0x130]
168731: 82 17 20 01              a0 = u64 [sp + 0x120]
168735: 7b 17 58                 u64 [sp + 0x58] = a0
168738: 33 07 02                 a0 = 0x2
168741: 33 08                    a1 = 0
168743: 33 09                    a2 = 0
168745: 64 6a                    a3 = s1
168747: 33 00 9c 09              ra = 0x99c
168751: 0a 64                    ecalli 100 // 'log'
168753: 01                       fallthrough
      :                          @11711 [@dyn 1230]
168754: 82 17 58                 a0 = u64 [sp + 0x58]
168757: 82 18 68                 a1 = u64 [sp + 0x68]
168760: c8 78 08                 a1 = a1 + a0
168763: 33 03 00 00 ff           t1 = 0xffffffffffff0000
168768: ac 38 24                 jump @11717 if a1 <u t1
      :                          @11712
168771: 33 08 c0 22 03           a1 = 0x322c0
168776: 95 88 00 00 01           a1 = a1 + 0x10000
168781: 01                       fallthrough
      :                          @11713
168782: 82 89                    a2 = u64 [a1]
168784: c9 98 0a                 a3 = a1 - a2
168787: ab 6a 11                 jump @11717 if a3 != s1
      :                          @11714
168790: c9 79 0a                 a3 = a2 - a0
168793: 01                       fallthrough
      :                          @11715
168794: 82 8b                    a4 = u64 [a1]
168796: ab 9b f2                 jump @11713 if a4 != a2
      :                          @11716
168799: 7b 8a                    u64 [a1] = a3
168801: 33 0c                    a5 = 0
168803: 01                       fallthrough
      :                          @11717
168804: 82 18 c8 01              a1 = u64 [sp + 0x1c8]
168808: 82 19 68                 a2 = u64 [sp + 0x68]
168811: c8 89 09                 a2 = a2 + a1
168814: 82 12 70                 t0 = u64 [sp + 0x70]
168817: 82 16 60                 s1 = u64 [sp + 0x60]
168820: ac 39 24                 jump @11723 if a2 <u t1
      :                          @11718
168823: 33 07 c0 22 03           a0 = 0x322c0
168828: 95 77 00 00 01           a0 = a0 + 0x10000
168833: 01                       fallthrough
      :                          @11719
168834: 82 79                    a2 = u64 [a0]
168836: c9 97 0a                 a3 = a0 - a2
168839: ab 6a 11                 jump @11723 if a3 != s1
      :                          @11720
168842: c9 89 0a                 a3 = a2 - a1
168845: 01                       fallthrough
      :                          @11721
168846: 82 7b                    a4 = u64 [a0]
168848: ab 9b f2                 jump @11719 if a4 != a2
      :                          @11722
168851: 7b 7a                    u64 [a0] = a3
168853: 33 0c                    a5 = 0
168855: 01                       fallthrough
      :                          @11723
168856: 82 17 b0 01              a0 = u64 [sp + 0x1b0]
168860: 82 18 68                 a1 = u64 [sp + 0x68]
168863: c8 78 08                 a1 = a1 + a0
168866: 55 38 00 00 ff 09        jump @11725 if a1 >=u 4294901760
      :                          @11724
168872: 28 db 4e                 jump @12868
      :                          @11725
168875: 33 08 c0 22 03           a1 = 0x322c0
168880: 95 88 00 00 01           a1 = a1 + 0x10000
168885: 01                       fallthrough
      :                          @11726
168886: 82 89                    a2 = u64 [a1]
168888: c9 98 0a                 a3 = a1 - a2
168891: aa 2a 06                 jump @11728 if a3 == t0
      :                          @11727
168894: 28 c5 4e                 jump @12868
      :                          @11728
168897: c9 79 0a                 a3 = a2 - a0
168900: 01                       fallthrough
      :                          @11729
168901: 82 8b                    a4 = u64 [a1]
168903: ab 9b ef                 jump @11726 if a4 != a2
      :                          @11730
168906: 7b 8a                    u64 [a1] = a3
168908: 33 0c                    a5 = 0
168910: 01                       fallthrough
      :                          @11731
168911: ab 9b e7                 jump @11726 if a4 != a2
      :                          @11732
168914: 28 b1 4e                 jump @12868
      :                          @11733 [@dyn 1231]
168917: 3a 08 78 12 03           a1 = u64 [0x31278]
168922: 97 89 0d                 a2 = a1 << 0xd
168925: d3 98 08                 a1 = a1 ^ a2
168928: 98 89 07                 a2 = a1 >> 0x7
168931: d3 98 08                 a1 = a1 ^ a2
168934: 3a 09 60 11 03           a2 = u64 [0x31160]
168939: 97 8a 11                 a3 = a1 << 0x11
168942: d3 a8 08                 a1 = a1 ^ a3
168945: ca 98 09                 a2 = a1 * a2
168948: 3e 08 78 12 03           u64 [0x31278] = a1
168953: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
168963: d6 79 07                 a0 = a2 mulhu a0
168966: 98 78 02                 a1 = a0 >> 0x2
168969: 84 77 fc                 a0 = a0 & 0xfffffffffffffffc
168972: c8 87 07                 a0 = a0 + a1
168975: c9 79 09                 a2 = a2 - a0
168978: 95 99 02                 a2 = a2 + 0x2
168981: 49 21 98 01              u64 [sp + 408] = 0
168985: 7b 19 a0 01              u64 [sp + 0x1a0] = a2
168989: 46 21 a8 01              u8 [sp + 424] = 0
168993: 95 17 e0 01              a0 = sp + 0x1e0
168997: 95 18 98 01              a1 = sp + 0x198
169001: 95 16 e0 01              s1 = sp + 0x1e0
169005: 50 20 a0 09 0e e9 fd     ra = 2464, jump @2225
      :                          @11734 [@dyn 1232]
169012: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
169016: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
169020: 50 20 a2 09 3b 30 fe     ra = 2466, jump @3706
      :                          @11735 [@dyn 1233]
169027: 7b 17 20 01              u64 [sp + 0x120] = a0
169031: 7b 16 38 02              u64 [sp + 0x238] = s1
169035: 33 07 34 02              a0 = 0x234
169039: 7b 17 40 02              u64 [sp + 0x240] = a0
169043: 95 17 20 01              a0 = sp + 0x120
169047: 7b 17 48 02              u64 [sp + 0x248] = a0
169051: 33 07 2c 0c              a0 = 0xc2c
169055: 7b 17 50 02              u64 [sp + 0x250] = a0
169059: 33 07 48 24 01           a0 = 0x12448
169064: 7b 17 90 02              u64 [sp + 0x290] = a0
169068: 49 21 98 02 02           u64 [sp + 664] = 0x2
169073: 49 21 b0 02              u64 [sp + 688] = 0
169077: 95 18 38 02              a1 = sp + 0x238
169081: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
169085: 49 21 a8 02 02           u64 [sp + 680] = 0x2
169090: 95 17 08 02              a0 = sp + 0x208
169094: 95 18 90 02              a1 = sp + 0x290
169098: 50 20 a4 09 70 bb fd     ra = 2468, jump @1503
      :                          @11736 [@dyn 1234]
169105: 82 16 10 02              s1 = u64 [sp + 0x210]
169109: 82 1b 18 02              a4 = u64 [sp + 0x218]
169113: 82 17 08 02              a0 = u64 [sp + 0x208]
169117: 7b 17 70                 u64 [sp + 0x70] = a0
169120: 33 07 02                 a0 = 0x2
169123: 33 08                    a1 = 0
169125: 33 09                    a2 = 0
169127: 64 6a                    a3 = s1
169129: 33 00 a6 09              ra = 0x9a6
169133: 0a 64                    ecalli 100 // 'log'
169135: 01                       fallthrough
      :                          @11737 [@dyn 1235]
169136: 82 1c 70                 a5 = u64 [sp + 0x70]
169139: 82 17 68                 a0 = u64 [sp + 0x68]
169142: c8 c7 07                 a0 = a0 + a5
169145: 53 37 00 00 ff 25        jump @11743 if a0 <u 4294901760
      :                          @11738
169151: 33 07 c0 22 03           a0 = 0x322c0
169156: 95 77 00 00 01           a0 = a0 + 0x10000
169161: 01                       fallthrough
      :                          @11739
169162: 82 78                    a1 = u64 [a0]
169164: c9 87 09                 a2 = a0 - a1
169167: ab 69 0f                 jump @11743 if a2 != s1
      :                          @11740
169170: c9 c8 09                 a2 = a1 - a5
169173: 01                       fallthrough
      :                          @11741
169174: 82 7a                    a3 = u64 [a0]
169176: ab 8a f2                 jump @11739 if a3 != a1
      :                          @11742
169179: 7b 79                    u64 [a0] = a2
169181: 01                       fallthrough
      :                          @11743
169182: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
169186: 52 08 06                 jump @11745 if a1 != 0
      :                          @11744
169189: 28 9e 4d                 jump @12868
      :                          @11745
169192: 54 28 00 20 08           jump @11747 if a1 <=u 8192
      :                          @11746
169197: 28 96 4d                 jump @12868
      :                          @11747
169200: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
169204: 97 88 03                 a1 = a1 << 0x3
169207: 33 09 c0 22 03           a2 = 0x322c0
169212: 95 99 00 00 01           a2 = a2 + 0x10000
169217: 01                       fallthrough
      :                          @11748
169218: 82 9a                    a3 = u64 [a2]
169220: c9 a9 0b                 a4 = a2 - a3
169223: aa 7b 06                 jump @11750 if a4 == a0
      :                          @11749
169226: 28 79 4d                 jump @12868
      :                          @11750
169229: c9 8a 0b                 a4 = a3 - a1
169232: 01                       fallthrough
      :                          @11751
169233: 82 9c                    a5 = u64 [a2]
169235: ab ac ef                 jump @11748 if a5 != a3
      :                          @11752
169238: 7b 9b                    u64 [a2] = a4
169240: 33 06                    s1 = 0
169242: 01                       fallthrough
      :                          @11753
169243: ab ac e7                 jump @11748 if a5 != a3
      :                          @11754
169246: 28 65 4d                 jump @12868
      :                          @11755 [@dyn 1236]
169249: 3a 08 78 12 03           a1 = u64 [0x31278]
169254: 97 89 0d                 a2 = a1 << 0xd
169257: d3 98 08                 a1 = a1 ^ a2
169260: 98 89 07                 a2 = a1 >> 0x7
169263: d3 98 08                 a1 = a1 ^ a2
169266: 3a 09 60 11 03           a2 = u64 [0x31160]
169271: 97 8a 11                 a3 = a1 << 0x11
169274: d3 a8 08                 a1 = a1 ^ a3
169277: ca 98 09                 a2 = a1 * a2
169280: 3e 08 78 12 03           u64 [0x31278] = a1
169285: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
169295: d6 79 07                 a0 = a2 mulhu a0
169298: 98 78 02                 a1 = a0 >> 0x2
169301: 84 77 fc                 a0 = a0 & 0xfffffffffffffffc
169304: c8 87 07                 a0 = a0 + a1
169307: c9 79 08                 a1 = a2 - a0
169310: 95 88 01                 a1 = a1 + 0x1
169313: 95 17 e0 01              a0 = sp + 0x1e0
169317: 95 16 e0 01              s1 = sp + 0x1e0
169321: 50 20 aa 09 54 e0 fd     ra = 2474, jump @2172
      :                          @11756 [@dyn 1237]
169328: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
169332: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
169336: 50 20 ac 09 8d 33 fe     ra = 2476, jump @3793
      :                          @11757 [@dyn 1238]
169343: 7b 17 20 01              u64 [sp + 0x120] = a0
169347: 7b 16 38 02              u64 [sp + 0x238] = s1
169351: 33 07 34 02              a0 = 0x234
169355: 7b 17 40 02              u64 [sp + 0x240] = a0
169359: 95 17 20 01              a0 = sp + 0x120
169363: 7b 17 48 02              u64 [sp + 0x248] = a0
169367: 33 07 2c 0c              a0 = 0xc2c
169371: 7b 17 50 02              u64 [sp + 0x250] = a0
169375: 33 07 80 24 01           a0 = 0x12480
169380: 7b 17 90 02              u64 [sp + 0x290] = a0
169384: 49 21 98 02 02           u64 [sp + 664] = 0x2
169389: 49 21 b0 02              u64 [sp + 688] = 0
169393: 95 18 38 02              a1 = sp + 0x238
169397: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
169401: 49 21 a8 02 02           u64 [sp + 680] = 0x2
169406: 95 17 08 02              a0 = sp + 0x208
169410: 95 18 90 02              a1 = sp + 0x290
169414: 50 20 ae 09 34 ba fd     ra = 2478, jump @1503
      :                          @11758 [@dyn 1239]
169421: 82 16 10 02              s1 = u64 [sp + 0x210]
169425: 82 1b 18 02              a4 = u64 [sp + 0x218]
169429: 82 17 08 02              a0 = u64 [sp + 0x208]
169433: 7b 17 70                 u64 [sp + 0x70] = a0
169436: 33 07 02                 a0 = 0x2
169439: 33 08                    a1 = 0
169441: 33 09                    a2 = 0
169443: 64 6a                    a3 = s1
169445: 33 00 b0 09              ra = 0x9b0
169449: 0a 64                    ecalli 100 // 'log'
169451: 01                       fallthrough
      :                          @11759 [@dyn 1240]
169452: 82 1c 70                 a5 = u64 [sp + 0x70]
169455: 82 17 68                 a0 = u64 [sp + 0x68]
169458: c8 c7 07                 a0 = a0 + a5
169461: 53 37 00 00 ff 25        jump @11765 if a0 <u 4294901760
      :                          @11760
169467: 33 07 c0 22 03           a0 = 0x322c0
169472: 95 77 00 00 01           a0 = a0 + 0x10000
169477: 01                       fallthrough
      :                          @11761
169478: 82 78                    a1 = u64 [a0]
169480: c9 87 09                 a2 = a0 - a1
169483: ab 69 0f                 jump @11765 if a2 != s1
      :                          @11762
169486: c9 c8 09                 a2 = a1 - a5
169489: 01                       fallthrough
      :                          @11763
169490: 82 7a                    a3 = u64 [a0]
169492: ab 8a f2                 jump @11761 if a3 != a1
      :                          @11764
169495: 7b 79                    u64 [a0] = a2
169497: 01                       fallthrough
      :                          @11765
169498: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
169502: 52 08 06                 jump @11767 if a1 != 0
      :                          @11766
169505: 28 62 4c                 jump @12868
      :                          @11767
169508: 54 28 00 20 08           jump @11769 if a1 <=u 8192
      :                          @11768
169513: 28 5a 4c                 jump @12868
      :                          @11769
169516: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
169520: 97 88 03                 a1 = a1 << 0x3
169523: 33 09 c0 22 03           a2 = 0x322c0
169528: 95 99 00 00 01           a2 = a2 + 0x10000
169533: 01                       fallthrough
      :                          @11770
169534: 82 9a                    a3 = u64 [a2]
169536: c9 a9 0b                 a4 = a2 - a3
169539: aa 7b 06                 jump @11772 if a4 == a0
      :                          @11771
169542: 28 3d 4c                 jump @12868
      :                          @11772
169545: c9 8a 0b                 a4 = a3 - a1
169548: 01                       fallthrough
      :                          @11773
169549: 82 9c                    a5 = u64 [a2]
169551: ab ac ef                 jump @11770 if a5 != a3
      :                          @11774
169554: 7b 9b                    u64 [a2] = a4
169556: 33 06                    s1 = 0
169558: 01                       fallthrough
      :                          @11775
169559: ab ac e7                 jump @11770 if a5 != a3
      :                          @11776
169562: 28 29 4c                 jump @12868
      :                          @11777 [@dyn 1241]
169565: 3a 08 78 12 03           a1 = u64 [0x31278]
169570: 97 89 0d                 a2 = a1 << 0xd
169573: d3 98 08                 a1 = a1 ^ a2
169576: 98 89 07                 a2 = a1 >> 0x7
169579: 3a 0a 60 11 03           a3 = u64 [0x31160]
169584: d3 98 08                 a1 = a1 ^ a2
169587: 97 89 11                 a2 = a1 << 0x11
169590: d3 98 08                 a1 = a1 ^ a2
169593: ca a8 09                 a2 = a1 * a3
169596: 3e 08 78 12 03           u64 [0x31278] = a1
169601: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
169611: d6 b9 08                 a1 = a2 mulhu a4
169614: 98 88 03                 a1 = a1 >> 0x3
169617: 33 0c 0a                 a5 = 0xa
169620: 3a 06 78 12 03           s1 = u64 [0x31278]
169625: ca c8 08                 a1 = a1 * a5
169628: c9 89 08                 a1 = a2 - a1
169631: 97 69 0d                 a2 = s1 << 0xd
169634: d3 96 06                 s1 = s1 ^ a2
169637: 98 69 07                 a2 = s1 >> 0x7
169640: d3 96 06                 s1 = s1 ^ a2
169643: 97 69 11                 a2 = s1 << 0x11
169646: d3 69 09                 a2 = a2 ^ s1
169649: ca a9 0a                 a3 = a2 * a3
169652: 3e 09 78 12 03           u64 [0x31278] = a2
169657: d6 ba 07                 a0 = a3 mulhu a4
169660: 98 77 03                 a0 = a0 >> 0x3
169663: ca c7 07                 a0 = a0 * a5
169666: c9 7a 06                 s1 = a3 - a0
169669: 95 17 20 01              a0 = sp + 0x120
169673: 50 20 b4 09 f4 de fd     ra = 2484, jump @2172
      :                          @11778 [@dyn 1242]
169680: 95 17 e0 01              a0 = sp + 0x1e0
169684: 64 68                    a1 = s1
169686: 50 20 b6 09 e7 de fd     ra = 2486, jump @2172
      :                          @11779 [@dyn 1243]
169693: 82 17 28 01              a0 = u64 [sp + 0x128]
169697: 82 18 30 01              a1 = u64 [sp + 0x130]
169701: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
169705: 82 1a f0 01              a3 = u64 [sp + 0x1f0]
169709: 50 20 b8 09 a5 36 fe     ra = 2488, jump @3902
      :                          @11780 [@dyn 1244]
169716: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
169720: 95 17 20 01              a0 = sp + 0x120
169724: 7b 17 90 02              u64 [sp + 0x290] = a0
169728: 33 07 34 02              a0 = 0x234
169732: 7b 17 98 02              u64 [sp + 0x298] = a0
169736: 95 18 e0 01              a1 = sp + 0x1e0
169740: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
169744: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
169748: 95 17 c8 01              a0 = sp + 0x1c8
169752: 7b 17 b0 02              u64 [sp + 0x2b0] = a0
169756: 33 07 2c 0c              a0 = 0xc2c
169760: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
169764: 33 07 a0 24 01           a0 = 0x124a0
169769: 7b 17 38 02              u64 [sp + 0x238] = a0
169773: 49 21 40 02 03           u64 [sp + 576] = 0x3
169778: 49 21 58 02              u64 [sp + 600] = 0
169782: 95 18 90 02              a1 = sp + 0x290
169786: 7b 18 48 02              u64 [sp + 0x248] = a1
169790: 49 21 50 02 03           u64 [sp + 592] = 0x3
169795: 95 17 08 02              a0 = sp + 0x208
169799: 95 18 38 02              a1 = sp + 0x238
169803: 50 20 ba 09 af b8 fd     ra = 2490, jump @1503
      :                          @11781 [@dyn 1245]
169810: 82 16 10 02              s1 = u64 [sp + 0x210]
169814: 82 1b 18 02              a4 = u64 [sp + 0x218]
169818: 82 17 08 02              a0 = u64 [sp + 0x208]
169822: 7b 17 70                 u64 [sp + 0x70] = a0
169825: 33 07 02                 a0 = 0x2
169828: 33 08                    a1 = 0
169830: 33 09                    a2 = 0
169832: 64 6a                    a3 = s1
169834: 33 00 bc 09              ra = 0x9bc
169838: 0a 64                    ecalli 100 // 'log'
169840: 01                       fallthrough
      :                          @11782 [@dyn 1246]
169841: 82 1c 70                 a5 = u64 [sp + 0x70]
169844: 82 17 68                 a0 = u64 [sp + 0x68]
169847: c8 c7 07                 a0 = a0 + a5
169850: 53 37 00 00 ff 25        jump @11788 if a0 <u 4294901760
      :                          @11783
169856: 33 07 c0 22 03           a0 = 0x322c0
169861: 95 77 00 00 01           a0 = a0 + 0x10000
169866: 01                       fallthrough
      :                          @11784
169867: 82 78                    a1 = u64 [a0]
169869: c9 87 09                 a2 = a0 - a1
169872: ab 69 0f                 jump @11788 if a2 != s1
      :                          @11785
169875: c9 c8 09                 a2 = a1 - a5
169878: 01                       fallthrough
      :                          @11786
169879: 82 7a                    a3 = u64 [a0]
169881: ab 8a f2                 jump @11784 if a3 != a1
      :                          @11787
169884: 7b 79                    u64 [a0] = a2
169886: 01                       fallthrough
      :                          @11788
169887: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
169891: 51 08 30                 jump @11795 if a1 == 0
      :                          @11789
169894: 56 28 00 20 2d           jump @11795 if a1 >u 8192
      :                          @11790
169899: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
169903: 97 88 03                 a1 = a1 << 0x3
169906: 33 09 c0 22 03           a2 = 0x322c0
169911: 95 99 00 00 01           a2 = a2 + 0x10000
169916: 01                       fallthrough
      :                          @11791
169917: 82 9a                    a3 = u64 [a2]
169919: c9 a9 0b                 a4 = a2 - a3
169922: ab 7b 11                 jump @11795 if a4 != a0
      :                          @11792
169925: c9 8a 0b                 a4 = a3 - a1
169928: 01                       fallthrough
      :                          @11793
169929: 82 9c                    a5 = u64 [a2]
169931: ab ac f2                 jump @11791 if a5 != a3
      :                          @11794
169934: 7b 9b                    u64 [a2] = a4
169936: 33 06                    s1 = 0
169938: 01                       fallthrough
      :                          @11795
169939: 82 18 20 01              a1 = u64 [sp + 0x120]
169943: 52 08 06                 jump @11797 if a1 != 0
      :                          @11796
169946: 28 a9 4a                 jump @12868
      :                          @11797
169949: 54 28 00 20 08           jump @11799 if a1 <=u 8192
      :                          @11798
169954: 28 a1 4a                 jump @12868
      :                          @11799
169957: 82 17 28 01              a0 = u64 [sp + 0x128]
169961: 97 88 03                 a1 = a1 << 0x3
169964: 33 09 c0 22 03           a2 = 0x322c0
169969: 95 99 00 00 01           a2 = a2 + 0x10000
169974: 01                       fallthrough
      :                          @11800
169975: 82 9a                    a3 = u64 [a2]
169977: c9 a9 0b                 a4 = a2 - a3
169980: aa 7b 06                 jump @11802 if a4 == a0
      :                          @11801
169983: 28 84 4a                 jump @12868
      :                          @11802
169986: c9 8a 0b                 a4 = a3 - a1
169989: 01                       fallthrough
      :                          @11803
169990: 82 9c                    a5 = u64 [a2]
169992: ab ac ef                 jump @11800 if a5 != a3
      :                          @11804
169995: 7b 9b                    u64 [a2] = a4
169997: 33 06                    s1 = 0
169999: 01                       fallthrough
      :                          @11805
170000: ab ac e7                 jump @11800 if a5 != a3
      :                          @11806
170003: 28 70 4a                 jump @12868
      :                          @11807 [@dyn 1247]
170006: 3a 08 78 12 03           a1 = u64 [0x31278]
170011: 97 89 0d                 a2 = a1 << 0xd
170014: d3 98 08                 a1 = a1 ^ a2
170017: 98 89 07                 a2 = a1 >> 0x7
170020: d3 98 08                 a1 = a1 ^ a2
170023: 97 89 11                 a2 = a1 << 0x11
170026: d3 89 09                 a2 = a2 ^ a1
170029: 97 8a 02                 a3 = a1 << 0x2
170032: 3e 09 78 12 03           u64 [0x31278] = a2
170037: 3a 09 78 12 03           a2 = u64 [0x31278]
170042: c8 a8 08                 a1 = a1 + a3
170045: 84 88 07                 a1 = a1 & 0x7
170048: 97 9a 0d                 a3 = a2 << 0xd
170051: d3 a9 09                 a2 = a2 ^ a3
170054: 98 9a 07                 a3 = a2 >> 0x7
170057: d3 a9 09                 a2 = a2 ^ a3
170060: 97 9a 11                 a3 = a2 << 0x11
170063: d3 9a 0a                 a3 = a3 ^ a2
170066: 97 9b 02                 a4 = a2 << 0x2
170069: c8 b9 09                 a2 = a2 + a4
170072: 3e 0a 78 12 03           u64 [0x31278] = a3
170077: 84 96 07                 s1 = a2 & 0x7
170080: 95 17 b0 01              a0 = sp + 0x1b0
170084: 50 20 c0 09 71 e0 fd     ra = 2496, jump @2190
      :                          @11808 [@dyn 1248]
170091: 95 17 c8 01              a0 = sp + 0x1c8
170095: 64 68                    a1 = s1
170097: 50 20 c2 09 64 e0 fd     ra = 2498, jump @2190
      :                          @11809 [@dyn 1249]
170104: 82 18 b8 01              a1 = u64 [sp + 0x1b8]
170108: 7b 18 70                 u64 [sp + 0x70] = a1
170111: 82 19 c0 01              a2 = u64 [sp + 0x1c0]
170115: 7b 19 60                 u64 [sp + 0x60] = a2
170118: 95 17 e0 01              a0 = sp + 0x1e0
170122: 50 20 c4 09 47 69        ra = 2500, jump @13507
      :                          @11810 [@dyn 1250]
170128: 82 16 d0 01              s1 = u64 [sp + 0x1d0]
170132: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
170136: 7b 19 58                 u64 [sp + 0x58] = a2
170139: 95 17 08 02              a0 = sp + 0x208
170143: 64 68                    a1 = s1
170145: 50 20 c6 09 30 69        ra = 2502, jump @13507
      :                          @11811 [@dyn 1251]
170151: 82 17 70                 a0 = u64 [sp + 0x70]
170154: 82 18 60                 a1 = u64 [sp + 0x60]
170157: 7b 16 60                 u64 [sp + 0x60] = s1
170160: 64 69                    a2 = s1
170162: 82 1a 58                 a3 = u64 [sp + 0x58]
170165: 50 20 c8 09 19 38 fe     ra = 2504, jump @3984
      :                          @11812 [@dyn 1252]
170172: 7b 17 10 01              u64 [sp + 0x110] = a0
170176: 95 17 e0 01              a0 = sp + 0x1e0
170180: 7b 17 90 02              u64 [sp + 0x290] = a0
170184: 33 07 4c 02              a0 = 0x24c
170188: 7b 17 98 02              u64 [sp + 0x298] = a0
170192: 95 18 08 02              a1 = sp + 0x208
170196: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
170200: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
170204: 95 17 10 01              a0 = sp + 0x110
170208: 7b 17 b0 02              u64 [sp + 0x2b0] = a0
170212: 33 07 98 0c              a0 = 0xc98
170216: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
170220: 33 07 e8 24 01           a0 = 0x124e8
170225: 7b 17 38 02              u64 [sp + 0x238] = a0
170229: 49 21 40 02 03           u64 [sp + 576] = 0x3
170234: 49 21 58 02              u64 [sp + 600] = 0
170238: 95 18 90 02              a1 = sp + 0x290
170242: 7b 18 48 02              u64 [sp + 0x248] = a1
170246: 49 21 50 02 03           u64 [sp + 592] = 0x3
170251: 95 17 20 01              a0 = sp + 0x120
170255: 95 18 38 02              a1 = sp + 0x238
170259: 50 20 ca 09 e7 b6 fd     ra = 2506, jump @1503
      :                          @11813 [@dyn 1253]
170266: 82 18 08 02              a1 = u64 [sp + 0x208]
170270: 14 07 00 00 00 00 00 00 00 80 a0 = 0x8000000000000000
170280: d4 78 09                 a2 = a1 | a0
170283: aa 79 06                 jump @11815 if a2 == a0
      :                          @11814
170286: 28 73 59                 jump @13154
      :                          @11815
170289: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
170293: d4 78 09                 a2 = a1 | a0
170296: aa 79 06                 jump @11817 if a2 == a0
      :                          @11816
170299: 28 9d 59                 jump @13164
      :                          @11817
170302: 82 16 28 01              s1 = u64 [sp + 0x128]
170306: 82 1b 30 01              a4 = u64 [sp + 0x130]
170310: 82 17 20 01              a0 = u64 [sp + 0x120]
170314: 7b 17 58                 u64 [sp + 0x58] = a0
170317: 33 07 02                 a0 = 0x2
170320: 33 08                    a1 = 0
170322: 33 09                    a2 = 0
170324: 64 6a                    a3 = s1
170326: 33 00 cc 09              ra = 0x9cc
170330: 0a 64                    ecalli 100 // 'log'
170332: 01                       fallthrough
      :                          @11818 [@dyn 1254]
170333: 82 17 58                 a0 = u64 [sp + 0x58]
170336: 82 18 68                 a1 = u64 [sp + 0x68]
170339: c8 78 08                 a1 = a1 + a0
170342: 33 03 00 00 ff           t1 = 0xffffffffffff0000
170347: ac 38 24                 jump @11824 if a1 <u t1
      :                          @11819
170350: 33 08 c0 22 03           a1 = 0x322c0
170355: 95 88 00 00 01           a1 = a1 + 0x10000
170360: 01                       fallthrough
      :                          @11820
170361: 82 89                    a2 = u64 [a1]
170363: c9 98 0a                 a3 = a1 - a2
170366: ab 6a 11                 jump @11824 if a3 != s1
      :                          @11821
170369: c9 79 0a                 a3 = a2 - a0
170372: 01                       fallthrough
      :                          @11822
170373: 82 8b                    a4 = u64 [a1]
170375: ab 9b f2                 jump @11820 if a4 != a2
      :                          @11823
170378: 7b 8a                    u64 [a1] = a3
170380: 33 0c                    a5 = 0
170382: 01                       fallthrough
      :                          @11824
170383: 82 18 c8 01              a1 = u64 [sp + 0x1c8]
170387: 82 19 68                 a2 = u64 [sp + 0x68]
170390: c8 89 09                 a2 = a2 + a1
170393: 82 12 70                 t0 = u64 [sp + 0x70]
170396: 82 16 60                 s1 = u64 [sp + 0x60]
170399: ac 39 24                 jump @11830 if a2 <u t1
      :                          @11825
170402: 33 07 c0 22 03           a0 = 0x322c0
170407: 95 77 00 00 01           a0 = a0 + 0x10000
170412: 01                       fallthrough
      :                          @11826
170413: 82 79                    a2 = u64 [a0]
170415: c9 97 0a                 a3 = a0 - a2
170418: ab 6a 11                 jump @11830 if a3 != s1
      :                          @11827
170421: c9 89 0a                 a3 = a2 - a1
170424: 01                       fallthrough
      :                          @11828
170425: 82 7b                    a4 = u64 [a0]
170427: ab 9b f2                 jump @11826 if a4 != a2
      :                          @11829
170430: 7b 7a                    u64 [a0] = a3
170432: 33 0c                    a5 = 0
170434: 01                       fallthrough
      :                          @11830
170435: 82 17 b0 01              a0 = u64 [sp + 0x1b0]
170439: 82 18 68                 a1 = u64 [sp + 0x68]
170442: c8 78 08                 a1 = a1 + a0
170445: 55 38 00 00 ff 09        jump @11832 if a1 >=u 4294901760
      :                          @11831
170451: 28 b0 48                 jump @12868
      :                          @11832
170454: 33 08 c0 22 03           a1 = 0x322c0
170459: 95 88 00 00 01           a1 = a1 + 0x10000
170464: 01                       fallthrough
      :                          @11833
170465: 82 89                    a2 = u64 [a1]
170467: c9 98 0a                 a3 = a1 - a2
170470: aa 2a 06                 jump @11835 if a3 == t0
      :                          @11834
170473: 28 9a 48                 jump @12868
      :                          @11835
170476: c9 79 0a                 a3 = a2 - a0
170479: 01                       fallthrough
      :                          @11836
170480: 82 8b                    a4 = u64 [a1]
170482: ab 9b ef                 jump @11833 if a4 != a2
      :                          @11837
170485: 7b 8a                    u64 [a1] = a3
170487: 33 0c                    a5 = 0
170489: 01                       fallthrough
      :                          @11838
170490: ab 9b e7                 jump @11833 if a4 != a2
      :                          @11839
170493: 28 86 48                 jump @12868
      :                          @11840 [@dyn 1255]
170496: 3a 08 78 12 03           a1 = u64 [0x31278]
170501: 97 89 0d                 a2 = a1 << 0xd
170504: d3 98 08                 a1 = a1 ^ a2
170507: 98 89 07                 a2 = a1 >> 0x7
170510: d3 98 08                 a1 = a1 ^ a2
170513: 97 89 11                 a2 = a1 << 0x11
170516: d3 89 09                 a2 = a2 ^ a1
170519: 97 8a 02                 a3 = a1 << 0x2
170522: 3e 09 78 12 03           u64 [0x31278] = a2
170527: 3a 09 78 12 03           a2 = u64 [0x31278]
170532: c8 a8 08                 a1 = a1 + a3
170535: 84 88 07                 a1 = a1 & 0x7
170538: 97 9a 0d                 a3 = a2 << 0xd
170541: d3 a9 09                 a2 = a2 ^ a3
170544: 98 9a 07                 a3 = a2 >> 0x7
170547: d3 a9 09                 a2 = a2 ^ a3
170550: 97 9a 11                 a3 = a2 << 0x11
170553: d3 9a 0a                 a3 = a3 ^ a2
170556: 97 9b 02                 a4 = a2 << 0x2
170559: c8 b9 09                 a2 = a2 + a4
170562: 3e 0a 78 12 03           u64 [0x31278] = a3
170567: 84 96 07                 s1 = a2 & 0x7
170570: 95 17 b0 01              a0 = sp + 0x1b0
170574: 50 20 d0 09 87 de fd     ra = 2512, jump @2190
      :                          @11841 [@dyn 1256]
170581: 95 17 c8 01              a0 = sp + 0x1c8
170585: 64 68                    a1 = s1
170587: 50 20 d2 09 7a de fd     ra = 2514, jump @2190
      :                          @11842 [@dyn 1257]
170594: 82 18 b8 01              a1 = u64 [sp + 0x1b8]
170598: 7b 18 70                 u64 [sp + 0x70] = a1
170601: 82 19 c0 01              a2 = u64 [sp + 0x1c0]
170605: 7b 19 60                 u64 [sp + 0x60] = a2
170608: 95 17 e0 01              a0 = sp + 0x1e0
170612: 50 20 d4 09 5d 67        ra = 2516, jump @13507
      :                          @11843 [@dyn 1258]
170618: 82 16 d0 01              s1 = u64 [sp + 0x1d0]
170622: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
170626: 7b 19 58                 u64 [sp + 0x58] = a2
170629: 95 17 08 02              a0 = sp + 0x208
170633: 64 68                    a1 = s1
170635: 50 20 d6 09 46 67        ra = 2518, jump @13507
      :                          @11844 [@dyn 1259]
170641: 82 17 70                 a0 = u64 [sp + 0x70]
170644: 82 18 60                 a1 = u64 [sp + 0x60]
170647: 7b 16 60                 u64 [sp + 0x60] = s1
170650: 64 69                    a2 = s1
170652: 82 1a 58                 a3 = u64 [sp + 0x58]
170655: 50 20 d8 09 62 39 fe     ra = 2520, jump @4063
      :                          @11845 [@dyn 1260]
170662: 7b 17 10 01              u64 [sp + 0x110] = a0
170666: 95 17 e0 01              a0 = sp + 0x1e0
170670: 7b 17 90 02              u64 [sp + 0x290] = a0
170674: 33 07 4c 02              a0 = 0x24c
170678: 7b 17 98 02              u64 [sp + 0x298] = a0
170682: 95 18 08 02              a1 = sp + 0x208
170686: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
170690: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
170694: 95 17 10 01              a0 = sp + 0x110
170698: 7b 17 b0 02              u64 [sp + 0x2b0] = a0
170702: 33 07 98 0c              a0 = 0xc98
170706: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
170710: 33 07 28 25 01           a0 = 0x12528
170715: 7b 17 38 02              u64 [sp + 0x238] = a0
170719: 49 21 40 02 03           u64 [sp + 576] = 0x3
170724: 49 21 58 02              u64 [sp + 600] = 0
170728: 95 18 90 02              a1 = sp + 0x290
170732: 7b 18 48 02              u64 [sp + 0x248] = a1
170736: 49 21 50 02 03           u64 [sp + 592] = 0x3
170741: 95 17 20 01              a0 = sp + 0x120
170745: 95 18 38 02              a1 = sp + 0x238
170749: 50 20 da 09 fd b4 fd     ra = 2522, jump @1503
      :                          @11846 [@dyn 1261]
170756: 82 18 08 02              a1 = u64 [sp + 0x208]
170760: 14 07 00 00 00 00 00 00 00 80 a0 = 0x8000000000000000
170770: d4 78 09                 a2 = a1 | a0
170773: aa 79 06                 jump @11848 if a2 == a0
      :                          @11847
170776: 28 f7 57                 jump @13174
      :                          @11848
170779: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
170783: d4 78 09                 a2 = a1 | a0
170786: aa 79 06                 jump @11850 if a2 == a0
      :                          @11849
170789: 28 21 58                 jump @13184
      :                          @11850
170792: 82 16 28 01              s1 = u64 [sp + 0x128]
170796: 82 1b 30 01              a4 = u64 [sp + 0x130]
170800: 82 17 20 01              a0 = u64 [sp + 0x120]
170804: 7b 17 58                 u64 [sp + 0x58] = a0
170807: 33 07 02                 a0 = 0x2
170810: 33 08                    a1 = 0
170812: 33 09                    a2 = 0
170814: 64 6a                    a3 = s1
170816: 33 00 dc 09              ra = 0x9dc
170820: 0a 64                    ecalli 100 // 'log'
170822: 01                       fallthrough
      :                          @11851 [@dyn 1262]
170823: 82 17 58                 a0 = u64 [sp + 0x58]
170826: 82 18 68                 a1 = u64 [sp + 0x68]
170829: c8 78 08                 a1 = a1 + a0
170832: 33 03 00 00 ff           t1 = 0xffffffffffff0000
170837: ac 38 24                 jump @11857 if a1 <u t1
      :                          @11852
170840: 33 08 c0 22 03           a1 = 0x322c0
170845: 95 88 00 00 01           a1 = a1 + 0x10000
170850: 01                       fallthrough
      :                          @11853
170851: 82 89                    a2 = u64 [a1]
170853: c9 98 0a                 a3 = a1 - a2
170856: ab 6a 11                 jump @11857 if a3 != s1
      :                          @11854
170859: c9 79 0a                 a3 = a2 - a0
170862: 01                       fallthrough
      :                          @11855
170863: 82 8b                    a4 = u64 [a1]
170865: ab 9b f2                 jump @11853 if a4 != a2
      :                          @11856
170868: 7b 8a                    u64 [a1] = a3
170870: 33 0c                    a5 = 0
170872: 01                       fallthrough
      :                          @11857
170873: 82 18 c8 01              a1 = u64 [sp + 0x1c8]
170877: 82 19 68                 a2 = u64 [sp + 0x68]
170880: c8 89 09                 a2 = a2 + a1
170883: 82 12 70                 t0 = u64 [sp + 0x70]
170886: 82 16 60                 s1 = u64 [sp + 0x60]
170889: ac 39 24                 jump @11863 if a2 <u t1
      :                          @11858
170892: 33 07 c0 22 03           a0 = 0x322c0
170897: 95 77 00 00 01           a0 = a0 + 0x10000
170902: 01                       fallthrough
      :                          @11859
170903: 82 79                    a2 = u64 [a0]
170905: c9 97 0a                 a3 = a0 - a2
170908: ab 6a 11                 jump @11863 if a3 != s1
      :                          @11860
170911: c9 89 0a                 a3 = a2 - a1
170914: 01                       fallthrough
      :                          @11861
170915: 82 7b                    a4 = u64 [a0]
170917: ab 9b f2                 jump @11859 if a4 != a2
      :                          @11862
170920: 7b 7a                    u64 [a0] = a3
170922: 33 0c                    a5 = 0
170924: 01                       fallthrough
      :                          @11863
170925: 82 17 b0 01              a0 = u64 [sp + 0x1b0]
170929: 82 18 68                 a1 = u64 [sp + 0x68]
170932: c8 78 08                 a1 = a1 + a0
170935: 55 38 00 00 ff 09        jump @11865 if a1 >=u 4294901760
      :                          @11864
170941: 28 c6 46                 jump @12868
      :                          @11865
170944: 33 08 c0 22 03           a1 = 0x322c0
170949: 95 88 00 00 01           a1 = a1 + 0x10000
170954: 01                       fallthrough
      :                          @11866
170955: 82 89                    a2 = u64 [a1]
170957: c9 98 0a                 a3 = a1 - a2
170960: aa 2a 06                 jump @11868 if a3 == t0
      :                          @11867
170963: 28 b0 46                 jump @12868
      :                          @11868
170966: c9 79 0a                 a3 = a2 - a0
170969: 01                       fallthrough
      :                          @11869
170970: 82 8b                    a4 = u64 [a1]
170972: ab 9b ef                 jump @11866 if a4 != a2
      :                          @11870
170975: 7b 8a                    u64 [a1] = a3
170977: 33 0c                    a5 = 0
170979: 01                       fallthrough
      :                          @11871
170980: ab 9b e7                 jump @11866 if a4 != a2
      :                          @11872
170983: 28 9c 46                 jump @12868
      :                          @11873 [@dyn 1263]
170986: 3a 08 78 12 03           a1 = u64 [0x31278]
170991: 97 89 0d                 a2 = a1 << 0xd
170994: d3 98 08                 a1 = a1 ^ a2
170997: 98 89 07                 a2 = a1 >> 0x7
171000: d3 98 08                 a1 = a1 ^ a2
171003: 97 89 11                 a2 = a1 << 0x11
171006: 3a 0a 60 11 03           a3 = u64 [0x31160]
171011: d3 98 08                 a1 = a1 ^ a2
171014: 3a 09 b8 11 03           a2 = u64 [0x311b8]
171019: ca a8 0b                 a4 = a1 * a3
171022: 3e 08 78 12 03           u64 [0x31278] = a1
171027: d6 9b 08                 a1 = a4 mulhu a2
171030: 98 88 12                 a1 = a1 >> 0x12
171033: 33 0c 40 42 0f           a5 = 0xf4240
171038: ca c8 08                 a1 = a1 * a5
171041: c9 8b 0b                 a4 = a4 - a1
171044: 7b 1b b0 01              u64 [sp + 0x1b0] = a4
171048: 3a 08 78 12 03           a1 = u64 [0x31278]
171053: 97 8b 0d                 a4 = a1 << 0xd
171056: d3 b8 08                 a1 = a1 ^ a4
171059: 98 8b 07                 a4 = a1 >> 0x7
171062: d3 b8 08                 a1 = a1 ^ a4
171065: 97 8b 11                 a4 = a1 << 0x11
171068: d3 b8 08                 a1 = a1 ^ a4
171071: ca a8 0a                 a3 = a1 * a3
171074: 3e 08 78 12 03           u64 [0x31278] = a1
171079: d6 9a 07                 a0 = a3 mulhu a2
171082: 98 78 12                 a1 = a0 >> 0x12
171085: 82 17 b0 01              a0 = u64 [sp + 0x1b0]
171089: ca c8 08                 a1 = a1 * a5
171092: c9 8a 08                 a1 = a3 - a1
171095: 7b 18 c8 01              u64 [sp + 0x1c8] = a1
171099: 52 08 06                 jump @11875 if a1 != 0
      :                          @11874
171102: 28 d2 4c                 jump @12995
      :                          @11875
171105: 64 79                    a2 = a0
171107: 64 8b                    a4 = a1
171109: 01                       fallthrough
      :                          @11876
171110: 64 ba                    a3 = a4
171112: cd b9 0b                 a4 = a2 %u a4
171115: 64 a9                    a2 = a3
171117: 52 0b f9                 jump @11876 if a4 != 0
      :                          @11877
171120: 7b 1a 20 01              u64 [sp + 0x120] = a3
171124: 50 20 e0 09 47 ef fd     ra = 2528, jump @2414
      :                          @11878 [@dyn 1264]
171131: 28 c0 4c                 jump @12997
      :                          @11879 [@dyn 1265]
171134: 3a 08 78 12 03           a1 = u64 [0x31278]
171139: 97 89 0d                 a2 = a1 << 0xd
171142: d3 89 09                 a2 = a2 ^ a1
171145: 98 9a 07                 a3 = a2 >> 0x7
171148: 3a 08 60 11 03           a1 = u64 [0x31160]
171153: d3 a9 09                 a2 = a2 ^ a3
171156: 97 9a 11                 a3 = a2 << 0x11
171159: d3 a9 09                 a2 = a2 ^ a3
171162: ca 89 0a                 a3 = a2 * a1
171165: 3a 0b 68 11 03           a4 = u64 [0x31168]
171170: 3e 09 78 12 03           u64 [0x31278] = a2
171175: 98 a9 03                 a2 = a3 >> 0x3
171178: d6 b9 09                 a2 = a2 mulhu a4
171181: 98 99 04                 a2 = a2 >> 0x4
171184: 33 0c e8 03              a5 = 0x3e8
171188: ca c9 09                 a2 = a2 * a5
171191: c9 9a 0a                 a3 = a3 - a2
171194: 95 aa 01                 a3 = a3 + 0x1
171197: 7b 1a 10 01              u64 [sp + 0x110] = a3
171201: 3a 09 78 12 03           a2 = u64 [0x31278]
171206: 97 9a 0d                 a3 = a2 << 0xd
171209: d3 a9 09                 a2 = a2 ^ a3
171212: 98 9a 07                 a3 = a2 >> 0x7
171215: d3 a9 09                 a2 = a2 ^ a3
171218: 97 9a 11                 a3 = a2 << 0x11
171221: d3 a9 09                 a2 = a2 ^ a3
171224: ca 89 0a                 a3 = a2 * a1
171227: 3e 09 78 12 03           u64 [0x31278] = a2
171232: 98 a9 03                 a2 = a3 >> 0x3
171235: d6 b9 09                 a2 = a2 mulhu a4
171238: 98 99 04                 a2 = a2 >> 0x4
171241: ca c9 09                 a2 = a2 * a5
171244: c9 9a 0a                 a3 = a3 - a2
171247: 7b 1a b0 01              u64 [sp + 0x1b0] = a3
171251: 3a 09 78 12 03           a2 = u64 [0x31278]
171256: 97 9a 0d                 a3 = a2 << 0xd
171259: d3 a9 09                 a2 = a2 ^ a3
171262: 98 9a 07                 a3 = a2 >> 0x7
171265: d3 a9 09                 a2 = a2 ^ a3
171268: 97 9a 11                 a3 = a2 << 0x11
171271: d3 a9 09                 a2 = a2 ^ a3
171274: 3a 0a 80 11 03           a3 = u64 [0x31180]
171279: ca 89 08                 a1 = a2 * a1
171282: 3e 09 78 12 03           u64 [0x31278] = a2
171287: d6 a8 07                 a0 = a1 mulhu a3
171290: c9 78 09                 a2 = a1 - a0
171293: 98 99 01                 a2 = a2 >> 0x1
171296: c8 97 07                 a0 = a0 + a2
171299: 98 77 09                 a0 = a0 >> 0x9
171302: 96 77 e7 03              a0 = a0 * 0x3e7
171306: c9 78 09                 a2 = a1 - a0
171309: 82 1a b0 01              a3 = u64 [sp + 0x1b0]
171313: 82 17 10 01              a0 = u64 [sp + 0x110]
171317: 95 98 01                 a1 = a2 + 0x1
171320: 7b 18 c8 01              u64 [sp + 0x1c8] = a1
171324: 8e 99                    a2 = a2 >u 0
171326: 52 0a 06                 jump @11881 if a3 != 0
      :                          @11880
171329: 28 b6 3a                 jump @12675
      :                          @11881
171332: 64 7b                    a4 = a0
171334: 28 0e                    jump @11884
      :                          @11882
171336: 98 aa 01                 a3 = a3 >> 0x1
171339: ca bb 0b                 a4 = a4 * a4
171342: 52 0a 06                 jump @11884 if a3 != 0
      :                          @11883
171345: 28 a6 3a                 jump @12675
      :                          @11884
171348: 84 ac 01                 a5 = a3 & 0x1
171351: cd 8b 0b                 a4 = a4 %u a1
171354: 51 0c ee                 jump @11882 if a5 == 0
      :                          @11885
171357: ca 9b 09                 a2 = a4 * a2
171360: cd 89 09                 a2 = a2 %u a1
171363: 28 e5                    jump @11882
      :                          @11886 [@dyn 1266]
171365: 3a 07 78 12 03           a0 = u64 [0x31278]
171370: 97 78 0d                 a1 = a0 << 0xd
171373: d3 87 07                 a0 = a0 ^ a1
171376: 98 78 07                 a1 = a0 >> 0x7
171379: d3 87 07                 a0 = a0 ^ a1
171382: 97 78 11                 a1 = a0 << 0x11
171385: d3 78 02                 t0 = a1 ^ a0
171388: 3e 02 78 12 03           u64 [0x31278] = t0
171393: 3a 08 78 12 03           a1 = u64 [0x31278]
171398: 3a 04 60 11 03           t2 = u64 [0x31160]
171403: 97 8a 0d                 a3 = a1 << 0xd
171406: d3 a8 08                 a1 = a1 ^ a3
171409: 98 8a 07                 a3 = a1 >> 0x7
171412: d3 a8 08                 a1 = a1 ^ a3
171415: 97 8a 11                 a3 = a1 << 0x11
171418: d3 a8 08                 a1 = a1 ^ a3
171421: ca 48 0a                 a3 = a1 * t2
171424: 3e 08 78 12 03           u64 [0x31278] = a1
171429: 3a 08 a8 11 03           a1 = u64 [0x311a8]
171434: 98 ab 01                 a4 = a3 >> 0x1
171437: 3a 0c 78 12 03           a5 = u64 [0x31278]
171442: d6 8b 0b                 a4 = a4 mulhu a1
171445: 98 bb 04                 a4 = a4 >> 0x4
171448: 97 c7 0d                 a0 = a5 << 0xd
171451: d3 c7 07                 a0 = a0 ^ a5
171454: 98 7c 07                 a5 = a0 >> 0x7
171457: d3 c7 07                 a0 = a0 ^ a5
171460: 97 7c 11                 a5 = a0 << 0x11
171463: d3 7c 03                 t1 = a5 ^ a0
171466: 3e 03 78 12 03           u64 [0x31278] = t1
171471: 3a 0c 78 12 03           a5 = u64 [0x31278]
171476: 96 bb 62                 a4 = a4 * 0x62
171479: c9 ba 0a                 a3 = a3 - a4
171482: 97 cb 0d                 a4 = a5 << 0xd
171485: d3 cb 0b                 a4 = a4 ^ a5
171488: 98 bc 07                 a5 = a4 >> 0x7
171491: d3 cb 0b                 a4 = a4 ^ a5
171494: 97 bc 11                 a5 = a4 << 0x11
171497: d3 cb 0b                 a4 = a4 ^ a5
171500: ca 4b 07                 a0 = a4 * t2
171503: 98 7c 01                 a5 = a0 >> 0x1
171506: d6 8c 0c                 a5 = a5 mulhu a1
171509: 95 a8 02                 a1 = a3 + 0x2
171512: 98 cc 04                 a5 = a5 >> 0x4
171515: 96 ca 62                 a3 = a5 * 0x62
171518: c9 a7 07                 a0 = a0 - a3
171521: 95 7a 02                 a3 = a0 + 0x2
171524: 3e 0b 78 12 03           u64 [0x31278] = a4
171529: 64 86                    s1 = a1
171531: 64 a9                    a2 = a3
171533: 01                       fallthrough
      :                          @11887
171534: 64 9c                    a5 = a2
171536: cd 96 09                 a2 = s1 %u a2
171539: 64 c6                    s1 = a5
171541: 52 09 f9                 jump @11887 if a2 != 0
      :                          @11888
171544: 7b 14 70                 u64 [sp + 0x70] = t2
171547: 52 1c 01 e7 00           jump @11898 if a5 != 1
      :                          @11889
171552: 3a 07 b0 11 03           a0 = u64 [0x311b0]
171557: ca 43 09                 a2 = t1 * t2
171560: ca 42 0b                 a4 = t0 * t2
171563: 98 9c 02                 a5 = a2 >> 0x2
171566: d6 7c 0c                 a5 = a5 mulhu a0
171569: 98 cc 02                 a5 = a5 >> 0x2
171572: 96 cc 64                 a5 = a5 * 0x64
171575: c9 c9 09                 a2 = a2 - a5
171578: 98 bc 02                 a5 = a4 >> 0x2
171581: d6 7c 07                 a0 = a5 mulhu a0
171584: 98 77 02                 a0 = a0 >> 0x2
171587: 96 77 64                 a0 = a0 * 0x64
171590: c9 7b 07                 a0 = a4 - a0
171593: 33 00 e6 09              ra = 0x9e6
171597: 95 11 c0                 sp = sp + 0xffffffffffffffc0
171600: 7b 10 38                 u64 [sp + 0x38] = ra
171603: 7b 15 30                 u64 [sp + 0x30] = s0
171606: 49 11 28 64              u64 [sp + 40] = 0x64
171610: 64 a5                    s0 = a3
171612: 7b 19                    u64 [sp] = a2
171614: 64 86                    s1 = a1
171616: 7b 17 08                 u64 [sp + 0x8] = a0
171619: 95 17 10                 a0 = sp + 0x10
171622: 64 a9                    a2 = a3
171624: 33 00 a8 02              ra = 0x2a8
171628: 28 71 ed fd              jump @2421
      :                          @11890 [@dyn 1267]
171632: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
171636: 95 17 e0 01              a0 = sp + 0x1e0
171640: 7b 17 08 02              u64 [sp + 0x208] = a0
171644: 33 07 98 0c              a0 = 0xc98
171648: 7b 17 10 02              u64 [sp + 0x210] = a0
171652: 33 07 08 26 01           a0 = 0x12608
171657: 7b 17 90 02              u64 [sp + 0x290] = a0
171661: 49 21 98 02 01           u64 [sp + 664] = 0x1
171666: 49 21 b0 02              u64 [sp + 688] = 0
171670: 95 17 08 02              a0 = sp + 0x208
171674: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
171678: 49 21 a8 02 01           u64 [sp + 680] = 0x1
171683: 95 17 38 02              a0 = sp + 0x238
171687: 95 18 90 02              a1 = sp + 0x290
171691: 50 20 e8 09 4f b1 fd     ra = 2536, jump @1503
      :                          @11891 [@dyn 1268]
171698: 82 16 40 02              s1 = u64 [sp + 0x240]
171702: 82 1b 48 02              a4 = u64 [sp + 0x248]
171706: 82 17 38 02              a0 = u64 [sp + 0x238]
171710: 7b 17 60                 u64 [sp + 0x60] = a0
171713: 33 07 02                 a0 = 0x2
171716: 33 08                    a1 = 0
171718: 33 09                    a2 = 0
171720: 64 6a                    a3 = s1
171722: 33 00 ea 09              ra = 0x9ea
171726: 0a 64                    ecalli 100 // 'log'
171728: 01                       fallthrough
      :                          @11892 [@dyn 1269]
171729: 82 1c 60                 a5 = u64 [sp + 0x60]
171732: 82 14 70                 t2 = u64 [sp + 0x70]
171735: 82 17 68                 a0 = u64 [sp + 0x68]
171738: c8 c7 07                 a0 = a0 + a5
171741: 53 37 00 00 ff 25        jump @11898 if a0 <u 4294901760
      :                          @11893
171747: 33 07 c0 22 03           a0 = 0x322c0
171752: 95 77 00 00 01           a0 = a0 + 0x10000
171757: 01                       fallthrough
      :                          @11894
171758: 82 78                    a1 = u64 [a0]
171760: c9 87 09                 a2 = a0 - a1
171763: ab 69 0f                 jump @11898 if a2 != s1
      :                          @11895
171766: c9 c8 09                 a2 = a1 - a5
171769: 01                       fallthrough
      :                          @11896
171770: 82 7a                    a3 = u64 [a0]
171772: ab 8a f2                 jump @11894 if a3 != a1
      :                          @11897
171775: 7b 79                    u64 [a0] = a2
171777: 01                       fallthrough
      :                          @11898
171778: 49 21 20 01 02           u64 [sp + 288] = 0x2
171783: 49 21 28 01 03           u64 [sp + 296] = 0x3
171788: 49 21 30 01 05           u64 [sp + 304] = 0x5
171793: 33 0c 78 12 03           a5 = 0x31278
171798: 3a 07 78 12 03           a0 = u64 [0x31278]
171803: 97 78 0d                 a1 = a0 << 0xd
171806: d3 87 07                 a0 = a0 ^ a1
171809: 98 78 07                 a1 = a0 >> 0x7
171812: d3 87 07                 a0 = a0 ^ a1
171815: 97 78 11                 a1 = a0 << 0x11
171818: d3 78 08                 a1 = a1 ^ a0
171821: 3e 08 78 12 03           u64 [0x31278] = a1
171826: 3a 08 78 12 03           a1 = u64 [0x31278]
171831: 84 77 01                 a0 = a0 & 0x1
171834: 97 89 0d                 a2 = a1 << 0xd
171837: d3 98 08                 a1 = a1 ^ a2
171840: 98 89 07                 a2 = a1 >> 0x7
171843: d3 98 08                 a1 = a1 ^ a2
171846: 97 89 11                 a2 = a1 << 0x11
171849: d3 98 08                 a1 = a1 ^ a2
171852: ca 48 09                 a2 = a1 * t2
171855: 3e 08 78 12 03           u64 [0x31278] = a1
171860: 14 08 ab aa aa aa aa aa aa aa a1 = 0xaaaaaaaaaaaaaaab
171870: d6 89 08                 a1 = a2 mulhu a1
171873: 98 8a 01                 a3 = a1 >> 0x1
171876: 84 88 fe                 a1 = a1 & 0xfffffffffffffffe
171879: 3a 0b 78 12 03           a4 = u64 [0x31278]
171884: c8 a8 08                 a1 = a1 + a3
171887: c9 89 09                 a2 = a2 - a1
171890: 97 b8 0d                 a1 = a4 << 0xd
171893: d3 b8 08                 a1 = a1 ^ a4
171896: 98 8a 07                 a3 = a1 >> 0x7
171899: d3 a8 08                 a1 = a1 ^ a3
171902: 97 8a 11                 a3 = a1 << 0x11
171905: d3 a8 08                 a1 = a1 ^ a3
171908: ca 48 0a                 a3 = a1 * t2
171911: 3e 08 78 12 03           u64 [0x31278] = a1
171916: 14 08 cd cc cc cc cc cc cc cc a1 = 0xcccccccccccccccd
171926: d6 8a 08                 a1 = a3 mulhu a1
171929: 98 8b 02                 a4 = a1 >> 0x2
171932: 84 88 fc                 a1 = a1 & 0xfffffffffffffffc
171935: c8 b8 08                 a1 = a1 + a4
171938: c9 8a 0a                 a3 = a3 - a1
171941: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
171945: 7b 19 e8 01              u64 [sp + 0x1e8] = a2
171949: 7b 1a f0 01              u64 [sp + 0x1f0] = a3
171953: 95 17 e0 01              a0 = sp + 0x1e0
171957: 95 18 20 01              a1 = sp + 0x120
171961: 50 20 ec 09 18 f0 fd     ra = 2540, jump @2531
      :                          @11899 [@dyn 1270]
171968: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
171972: 95 17 c8 01              a0 = sp + 0x1c8
171976: 7b 17 08 02              u64 [sp + 0x208] = a0
171980: 33 07 98 0c              a0 = 0xc98
171984: 7b 17 10 02              u64 [sp + 0x210] = a0
171988: 33 07 28 26 01           a0 = 0x12628
171993: 7b 17 90 02              u64 [sp + 0x290] = a0
171997: 49 21 98 02 01           u64 [sp + 664] = 0x1
172002: 49 21 b0 02              u64 [sp + 688] = 0
172006: 95 17 08 02              a0 = sp + 0x208
172010: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
172014: 49 21 a8 02 01           u64 [sp + 680] = 0x1
172019: 95 17 38 02              a0 = sp + 0x238
172023: 95 18 90 02              a1 = sp + 0x290
172027: 50 20 ee 09 ff af fd     ra = 2542, jump @1503
      :                          @11900 [@dyn 1271]
172034: 82 16 40 02              s1 = u64 [sp + 0x240]
172038: 82 1b 48 02              a4 = u64 [sp + 0x248]
172042: 82 17 38 02              a0 = u64 [sp + 0x238]
172046: 7b 17 60                 u64 [sp + 0x60] = a0
172049: 33 07 02                 a0 = 0x2
172052: 33 08                    a1 = 0
172054: 33 09                    a2 = 0
172056: 64 6a                    a3 = s1
172058: 33 00 f0 09              ra = 0x9f0
172062: 0a 64                    ecalli 100 // 'log'
172064: 01                       fallthrough
      :                          @11901 [@dyn 1272]
172065: 82 1c 60                 a5 = u64 [sp + 0x60]
172068: 82 17 68                 a0 = u64 [sp + 0x68]
172071: c8 c7 07                 a0 = a0 + a5
172074: 53 37 00 00 ff 25        jump @11907 if a0 <u 4294901760
      :                          @11902
172080: 33 07 c0 22 03           a0 = 0x322c0
172085: 95 77 00 00 01           a0 = a0 + 0x10000
172090: 01                       fallthrough
      :                          @11903
172091: 82 78                    a1 = u64 [a0]
172093: c9 87 09                 a2 = a0 - a1
172096: ab 69 0f                 jump @11907 if a2 != s1
      :                          @11904
172099: c9 c8 09                 a2 = a1 - a5
172102: 01                       fallthrough
      :                          @11905
172103: 82 7a                    a3 = u64 [a0]
172105: ab 8a f2                 jump @11903 if a3 != a1
      :                          @11906
172108: 7b 79                    u64 [a0] = a2
172110: 01                       fallthrough
      :                          @11907
172111: 3a 07 78 12 03           a0 = u64 [0x31278]
172116: 97 78 0d                 a1 = a0 << 0xd
172119: d3 87 07                 a0 = a0 ^ a1
172122: 98 78 07                 a1 = a0 >> 0x7
172125: d3 87 07                 a0 = a0 ^ a1
172128: 97 78 11                 a1 = a0 << 0x11
172131: d3 87 07                 a0 = a0 ^ a1
172134: 3a 08 b8 11 03           a1 = u64 [0x311b8]
172139: 82 19 70                 a2 = u64 [sp + 0x70]
172142: ca 97 09                 a2 = a0 * a2
172145: 3e 07 78 12 03           u64 [0x31278] = a0
172150: d6 89 07                 a0 = a2 mulhu a1
172153: 98 77 12                 a0 = a0 >> 0x12
172156: 96 77 40 42 0f           a0 = a0 * 0xf4240
172161: c9 79 09                 a2 = a2 - a0
172164: 7b 19 10 01              u64 [sp + 0x110] = a2
172168: 3a 07 78 12 03           a0 = u64 [0x31278]
172173: 97 78 0d                 a1 = a0 << 0xd
172176: d3 87 07                 a0 = a0 ^ a1
172179: 98 78 07                 a1 = a0 >> 0x7
172182: d3 78 08                 a1 = a1 ^ a0
172185: 97 87 11                 a0 = a1 << 0x11
172188: d3 87 07                 a0 = a0 ^ a1
172191: 3e 07 78 12 03           u64 [0x31278] = a0
172196: 82 17 10 01              a0 = u64 [sp + 0x110]
172200: 84 88 03                 a1 = a1 & 0x3
172203: 95 88 02                 a1 = a1 + 0x2
172206: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
172210: 33 00 f2 09              ra = 0x9f2
172214: 33 03                    t1 = 0
172216: 33 09 40                 a2 = 0x40
172219: c1 89 09                 i32 a2 = a2 /u a1
172222: 9b 99 01                 a2 = 0x1 << a2
172225: e6 97 0a                 a3 = minu(a0, a2)
172228: 95 a4 01                 t2 = a3 + 0x1
172231: 83 82 01                 i32 t0 = a1 + 0x1
172234: 33 0b ff                 a4 = 0xffffffffffffffff
172237: 28 ba eb fd              jump @2432
      :                          @11908 [@dyn 1273]
172241: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
172245: 95 17 10 01              a0 = sp + 0x110
172249: 7b 17 90 02              u64 [sp + 0x290] = a0
172253: 33 07 2c 0c              a0 = 0xc2c
172257: 7b 17 98 02              u64 [sp + 0x298] = a0
172261: 95 18 b0 01              a1 = sp + 0x1b0
172265: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
172269: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
172273: 95 18 c8 01              a1 = sp + 0x1c8
172277: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
172281: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
172285: 33 07 48 26 01           a0 = 0x12648
172290: 7b 17 38 02              u64 [sp + 0x238] = a0
172294: 49 21 40 02 03           u64 [sp + 576] = 0x3
172299: 49 21 58 02              u64 [sp + 600] = 0
172303: 95 18 90 02              a1 = sp + 0x290
172307: 7b 18 48 02              u64 [sp + 0x248] = a1
172311: 49 21 50 02 03           u64 [sp + 592] = 0x3
172316: 95 17 08 02              a0 = sp + 0x208
172320: 95 18 38 02              a1 = sp + 0x238
172324: 50 20 f4 09 d6 ae fd     ra = 2548, jump @1503
      :                          @11909 [@dyn 1274]
172331: 82 16 10 02              s1 = u64 [sp + 0x210]
172335: 82 1b 18 02              a4 = u64 [sp + 0x218]
172339: 82 17 08 02              a0 = u64 [sp + 0x208]
172343: 7b 17 70                 u64 [sp + 0x70] = a0
172346: 33 07 02                 a0 = 0x2
172349: 33 08                    a1 = 0
172351: 33 09                    a2 = 0
172353: 64 6a                    a3 = s1
172355: 33 00 f6 09              ra = 0x9f6
172359: 0a 64                    ecalli 100 // 'log'
172361: 01                       fallthrough
      :                          @11910 [@dyn 1275]
172362: 82 1c 70                 a5 = u64 [sp + 0x70]
172365: 82 17 68                 a0 = u64 [sp + 0x68]
172368: c8 c7 07                 a0 = a0 + a5
172371: 55 37 00 00 ff 09        jump @11912 if a0 >=u 4294901760
      :                          @11911
172377: 28 2a 41                 jump @12868
      :                          @11912
172380: 33 07 c0 22 03           a0 = 0x322c0
172385: 95 77 00 00 01           a0 = a0 + 0x10000
172390: 01                       fallthrough
      :                          @11913
172391: 82 78                    a1 = u64 [a0]
172393: c9 87 09                 a2 = a0 - a1
172396: aa 69 06                 jump @11915 if a2 == s1
      :                          @11914
172399: 28 14 41                 jump @12868
      :                          @11915
172402: c9 c8 09                 a2 = a1 - a5
172405: 01                       fallthrough
      :                          @11916
172406: 82 7a                    a3 = u64 [a0]
172408: ab 8a ef                 jump @11913 if a3 != a1
      :                          @11917
172411: 7b 79                    u64 [a0] = a2
172413: 33 0b                    a4 = 0
172415: 01                       fallthrough
      :                          @11918
172416: ab 8a e7                 jump @11913 if a3 != a1
      :                          @11919
172419: 28 00 41                 jump @12868
      :                          @11920 [@dyn 1276]
172422: 3a 07 78 12 03           a0 = u64 [0x31278]
172427: 3a 0a 60 11 03           a3 = u64 [0x31160]
172432: 97 78 0d                 a1 = a0 << 0xd
172435: d3 87 07                 a0 = a0 ^ a1
172438: 98 78 07                 a1 = a0 >> 0x7
172441: d3 87 07                 a0 = a0 ^ a1
172444: 97 78 11                 a1 = a0 << 0x11
172447: d3 87 07                 a0 = a0 ^ a1
172450: 7b 1a 70                 u64 [sp + 0x70] = a3
172453: ca a7 08                 a1 = a0 * a3
172456: 3e 07 78 12 03           u64 [0x31278] = a0
172461: 68 87                    a0 = clz a1
172463: 7a 17 b0 01              u32 [sp + 0x1b0] = a0
172467: 6a 87                    a0 = ctz a1
172469: 7a 17 c8 01              u32 [sp + 0x1c8] = a0
172473: 66 87                    a0 = cpop a1
172475: 7a 17 20 01              u32 [sp + 0x120] = a0
172479: 84 77 01                 a0 = a0 & 0x1
172482: 7a 17 e0 01              u32 [sp + 0x1e0] = a0
172486: 95 17 b0 01              a0 = sp + 0x1b0
172490: 7b 17 90 02              u64 [sp + 0x290] = a0
172494: 33 07 62 0c              a0 = 0xc62
172498: 7b 17 98 02              u64 [sp + 0x298] = a0
172502: 95 18 c8 01              a1 = sp + 0x1c8
172506: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
172510: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
172514: 95 18 20 01              a1 = sp + 0x120
172518: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
172522: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
172526: 95 18 e0 01              a1 = sp + 0x1e0
172530: 7b 18 c0 02              u64 [sp + 0x2c0] = a1
172534: 7b 17 c8 02              u64 [sp + 0x2c8] = a0
172538: 33 07 98 26 01           a0 = 0x12698
172543: 7b 17 38 02              u64 [sp + 0x238] = a0
172547: 49 21 40 02 04           u64 [sp + 576] = 0x4
172552: 49 21 58 02              u64 [sp + 600] = 0
172556: 95 18 90 02              a1 = sp + 0x290
172560: 7b 18 48 02              u64 [sp + 0x248] = a1
172564: 49 21 50 02 04           u64 [sp + 592] = 0x4
172569: 95 17 08 02              a0 = sp + 0x208
172573: 95 18 38 02              a1 = sp + 0x238
172577: 50 20 fa 09 d9 ad fd     ra = 2554, jump @1503
      :                          @11921 [@dyn 1277]
172584: 82 16 10 02              s1 = u64 [sp + 0x210]
172588: 82 1b 18 02              a4 = u64 [sp + 0x218]
172592: 82 17 08 02              a0 = u64 [sp + 0x208]
172596: 7b 17 60                 u64 [sp + 0x60] = a0
172599: 33 07 02                 a0 = 0x2
172602: 33 08                    a1 = 0
172604: 33 09                    a2 = 0
172606: 64 6a                    a3 = s1
172608: 33 00 fc 09              ra = 0x9fc
172612: 0a 64                    ecalli 100 // 'log'
172614: 01                       fallthrough
      :                          @11922 [@dyn 1278]
172615: 82 1c 60                 a5 = u64 [sp + 0x60]
172618: 82 17 68                 a0 = u64 [sp + 0x68]
172621: c8 c7 07                 a0 = a0 + a5
172624: 53 37 00 00 ff 25        jump @11928 if a0 <u 4294901760
      :                          @11923
172630: 33 07 c0 22 03           a0 = 0x322c0
172635: 95 77 00 00 01           a0 = a0 + 0x10000
172640: 01                       fallthrough
      :                          @11924
172641: 82 78                    a1 = u64 [a0]
172643: c9 87 09                 a2 = a0 - a1
172646: ab 69 0f                 jump @11928 if a2 != s1
      :                          @11925
172649: c9 c8 09                 a2 = a1 - a5
172652: 01                       fallthrough
      :                          @11926
172653: 82 7a                    a3 = u64 [a0]
172655: ab 8a f2                 jump @11924 if a3 != a1
      :                          @11927
172658: 7b 79                    u64 [a0] = a2
172660: 01                       fallthrough
      :                          @11928
172661: 3a 07 78 12 03           a0 = u64 [0x31278]
172666: 97 78 0d                 a1 = a0 << 0xd
172669: d3 87 07                 a0 = a0 ^ a1
172672: 98 78 07                 a1 = a0 >> 0x7
172675: d3 87 07                 a0 = a0 ^ a1
172678: 97 78 11                 a1 = a0 << 0x11
172681: d3 87 07                 a0 = a0 ^ a1
172684: 82 18 70                 a1 = u64 [sp + 0x70]
172687: ca 87 0a                 a3 = a0 * a1
172690: 3e 07 78 12 03           u64 [0x31278] = a0
172695: 97 a8 20                 a1 = a3 << 0x20
172698: 98 88 20                 a1 = a1 >> 0x20
172701: 8b a9 01                 i32 a2 = a3 >> 0x1
172704: d3 89 07                 a0 = a2 ^ a1
172707: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
172711: 6f aa                    a3 = reverse a3
172713: 98 ab 24                 a4 = a3 >> 0x24
172716: 84 bb 0f 0f 0f 0f        a4 = a4 & 0xf0f0f0f
172722: 98 aa 1c                 a3 = a3 >> 0x1c
172725: 84 aa f0 f0 f0 f0        a3 = a3 & 0xfffffffff0f0f0f0
172731: 83 aa                    i32 a3 = a3 + 0
172733: d4 ba 0a                 a3 = a3 | a4
172736: 98 ab 02                 a4 = a3 >> 0x2
172739: 84 bb 33 33 33 33        a4 = a4 & 0x33333333
172745: 84 aa 33 33 33 33        a3 = a3 & 0x33333333
172751: 8a aa 02                 i32 a3 = a3 << 0x2
172754: d4 ba 0a                 a3 = a3 | a4
172757: 98 ab 01                 a4 = a3 >> 0x1
172760: 33 0c 55 55 55 55        a5 = 0x55555555
172766: d2 cb 0b                 a4 = a4 & a5
172769: d2 ca 0a                 a3 = a3 & a5
172772: 97 aa 01                 a3 = a3 << 0x1
172775: d4 ba 0a                 a3 = a3 | a4
172778: 7a 1a b0 01              u32 [sp + 0x1b0] = a3
172782: ab 89 06                 jump @11930 if a2 != a1
      :                          @11929
172785: 28 07 47                 jump @13007
      :                          @11930
172788: 64 78                    a1 = a0
172790: 01                       fallthrough
      :                          @11931
172791: 98 88 01                 a1 = a1 >> 0x1
172794: d3 87 07                 a0 = a0 ^ a1
172797: 52 08 fa                 jump @11931 if a1 != 0
      :                          @11932
172800: 28 fb 46                 jump @13008
      :                          @11933 [@dyn 1279]
172803: 95 17 38 02              a0 = sp + 0x238
172807: 95 16 38 02              s1 = sp + 0x238
172811: 33 00 00 0a              ra = 0xa00
172815: 95 11 b8                 sp = sp + 0xffffffffffffffb8
172818: 7b 10 40                 u64 [sp + 0x40] = ra
172821: 7b 15 38                 u64 [sp + 0x38] = s0
172824: 7b 16 30                 u64 [sp + 0x30] = s1
172827: 33 09 c0 22 03           a2 = 0x322c0
172832: 33 08 00 00 01           a1 = 0x10000
172837: c8 89 09                 a2 = a2 + a1
172840: 28 5c ee fd              jump @2551
      :                          @11934 [@dyn 1280]
172844: 7b 16 e0 01              u64 [sp + 0x1e0] = s1
172848: 33 07 34 02              a0 = 0x234
172852: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
172856: 33 07 40 27 01           a0 = 0x12740
172861: 7b 17 90 02              u64 [sp + 0x290] = a0
172865: 49 21 98 02 01           u64 [sp + 664] = 0x1
172870: 49 21 b0 02              u64 [sp + 688] = 0
172874: 95 18 e0 01              a1 = sp + 0x1e0
172878: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
172882: 49 21 a8 02 01           u64 [sp + 680] = 0x1
172887: 95 17 08 02              a0 = sp + 0x208
172891: 95 18 90 02              a1 = sp + 0x290
172895: 50 20 02 0a 9b ac fd     ra = 2562, jump @1503
      :                          @11935 [@dyn 1281]
172902: 82 18 38 02              a1 = u64 [sp + 0x238]
172906: 51 08 2e                 jump @11942 if a1 == 0
      :                          @11936
172909: 56 28 00 20 2b           jump @11942 if a1 >u 8192
      :                          @11937
172914: 82 17 40 02              a0 = u64 [sp + 0x240]
172918: 97 88 03                 a1 = a1 << 0x3
172921: 33 09 c0 22 03           a2 = 0x322c0
172926: 95 99 00 00 01           a2 = a2 + 0x10000
172931: 01                       fallthrough
      :                          @11938
172932: 82 9a                    a3 = u64 [a2]
172934: c9 a9 0b                 a4 = a2 - a3
172937: ab 7b 0f                 jump @11942 if a4 != a0
      :                          @11939
172940: c9 8a 0b                 a4 = a3 - a1
172943: 01                       fallthrough
      :                          @11940
172944: 82 9c                    a5 = u64 [a2]
172946: ab ac f2                 jump @11938 if a5 != a3
      :                          @11941
172949: 7b 9b                    u64 [a2] = a4
172951: 01                       fallthrough
      :                          @11942
172952: 82 16 10 02              s1 = u64 [sp + 0x210]
172956: 82 1b 18 02              a4 = u64 [sp + 0x218]
172960: 82 17 08 02              a0 = u64 [sp + 0x208]
172964: 7b 17 70                 u64 [sp + 0x70] = a0
172967: 33 07 02                 a0 = 0x2
172970: 33 08                    a1 = 0
172972: 33 09                    a2 = 0
172974: 64 6a                    a3 = s1
172976: 33 00 04 0a              ra = 0xa04
172980: 0a 64                    ecalli 100 // 'log'
172982: 01                       fallthrough
      :                          @11943 [@dyn 1282]
172983: 82 1c 70                 a5 = u64 [sp + 0x70]
172986: 82 17 68                 a0 = u64 [sp + 0x68]
172989: c8 c7 07                 a0 = a0 + a5
172992: 55 37 00 00 ff 09        jump @11945 if a0 >=u 4294901760
      :                          @11944
172998: 28 bd 3e                 jump @12868
      :                          @11945
173001: 33 07 c0 22 03           a0 = 0x322c0
173006: 95 77 00 00 01           a0 = a0 + 0x10000
173011: 01                       fallthrough
      :                          @11946
173012: 82 78                    a1 = u64 [a0]
173014: c9 87 09                 a2 = a0 - a1
173017: aa 69 06                 jump @11948 if a2 == s1
      :                          @11947
173020: 28 a7 3e                 jump @12868
      :                          @11948
173023: c9 c8 09                 a2 = a1 - a5
173026: 01                       fallthrough
      :                          @11949
173027: 82 7a                    a3 = u64 [a0]
173029: ab 8a ef                 jump @11946 if a3 != a1
      :                          @11950
173032: 7b 79                    u64 [a0] = a2
173034: 33 0b                    a4 = 0
173036: 01                       fallthrough
      :                          @11951
173037: ab 8a e7                 jump @11946 if a3 != a1
      :                          @11952
173040: 28 93 3e                 jump @12868
      :                          @11953 [@dyn 1283]
173043: 3a 08 78 12 03           a1 = u64 [0x31278]
173048: 97 89 0d                 a2 = a1 << 0xd
173051: d3 98 08                 a1 = a1 ^ a2
173054: 98 89 07                 a2 = a1 >> 0x7
173057: d3 98 08                 a1 = a1 ^ a2
173060: 97 89 11                 a2 = a1 << 0x11
173063: d3 98 08                 a1 = a1 ^ a2
173066: 3a 09 60 11 03           a2 = u64 [0x31160]
173071: 3a 0a 68 11 03           a3 = u64 [0x31168]
173076: 3e 08 78 12 03           u64 [0x31278] = a1
173081: ca 98 07                 a0 = a1 * a2
173084: 98 78 03                 a1 = a0 >> 0x3
173087: d6 a8 08                 a1 = a1 mulhu a3
173090: 98 88 04                 a1 = a1 >> 0x4
173093: 33 09 e8 03              a2 = 0x3e8
173097: ca 98 08                 a1 = a1 * a2
173100: c9 87 07                 a0 = a0 - a1
173103: 7b 17 20 01              u64 [sp + 0x120] = a0
173107: 50 20 08 0a 61 ee fd     ra = 2568, jump @2571
      :                          @11954 [@dyn 1284]
173114: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
173118: 7b 18 e8 01              u64 [sp + 0x1e8] = a1
173122: 95 17 20 01              a0 = sp + 0x120
173126: 7b 17 38 02              u64 [sp + 0x238] = a0
173130: 33 07 2c 0c              a0 = 0xc2c
173134: 7b 17 40 02              u64 [sp + 0x240] = a0
173138: 95 18 e0 01              a1 = sp + 0x1e0
173142: 7b 18 48 02              u64 [sp + 0x248] = a1
173146: 7b 17 50 02              u64 [sp + 0x250] = a0
173150: 33 07 18 11 01           a0 = 0x11118
173155: 7b 17 90 02              u64 [sp + 0x290] = a0
173159: 49 21 98 02 02           u64 [sp + 664] = 0x2
173164: 49 21 b0 02              u64 [sp + 688] = 0
173168: 95 18 38 02              a1 = sp + 0x238
173172: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
173176: 49 21 a8 02 02           u64 [sp + 680] = 0x2
173181: 95 17 08 02              a0 = sp + 0x208
173185: 95 18 90 02              a1 = sp + 0x290
173189: 50 20 0a 0a 75 ab fd     ra = 2570, jump @1503
      :                          @11955 [@dyn 1285]
173196: 82 16 10 02              s1 = u64 [sp + 0x210]
173200: 82 1b 18 02              a4 = u64 [sp + 0x218]
173204: 82 17 08 02              a0 = u64 [sp + 0x208]
173208: 7b 17 70                 u64 [sp + 0x70] = a0
173211: 33 07 02                 a0 = 0x2
173214: 33 08                    a1 = 0
173216: 33 09                    a2 = 0
173218: 64 6a                    a3 = s1
173220: 33 00 0c 0a              ra = 0xa0c
173224: 0a 64                    ecalli 100 // 'log'
173226: 01                       fallthrough
      :                          @11956 [@dyn 1286]
173227: 82 1c 70                 a5 = u64 [sp + 0x70]
173230: 82 17 68                 a0 = u64 [sp + 0x68]
173233: c8 c7 07                 a0 = a0 + a5
173236: 55 37 00 00 ff 09        jump @11958 if a0 >=u 4294901760
      :                          @11957
173242: 28 c9 3d                 jump @12868
      :                          @11958
173245: 33 07 c0 22 03           a0 = 0x322c0
173250: 95 77 00 00 01           a0 = a0 + 0x10000
173255: 01                       fallthrough
      :                          @11959
173256: 82 78                    a1 = u64 [a0]
173258: c9 87 09                 a2 = a0 - a1
173261: aa 69 06                 jump @11961 if a2 == s1
      :                          @11960
173264: 28 b3 3d                 jump @12868
      :                          @11961
173267: c9 c8 09                 a2 = a1 - a5
173270: 01                       fallthrough
      :                          @11962
173271: 82 7a                    a3 = u64 [a0]
173273: ab 8a ef                 jump @11959 if a3 != a1
      :                          @11963
173276: 7b 79                    u64 [a0] = a2
173278: 33 0b                    a4 = 0
173280: 01                       fallthrough
      :                          @11964
173281: ab 8a e7                 jump @11959 if a3 != a1
      :                          @11965
173284: 28 9f 3d                 jump @12868
      :                          @11966 [@dyn 1287]
173287: 3a 08 78 12 03           a1 = u64 [0x31278]
173292: 3a 09 60 11 03           a2 = u64 [0x31160]
173297: 97 8a 0d                 a3 = a1 << 0xd
173300: d3 a8 08                 a1 = a1 ^ a3
173303: 98 8a 07                 a3 = a1 >> 0x7
173306: d3 a8 08                 a1 = a1 ^ a3
173309: 97 8a 11                 a3 = a1 << 0x11
173312: d3 a8 08                 a1 = a1 ^ a3
173315: ca 98 0a                 a3 = a1 * a2
173318: 3e 08 78 12 03           u64 [0x31278] = a1
173323: 14 08 cd cc cc cc cc cc cc cc a1 = 0xcccccccccccccccd
173333: d6 8a 08                 a1 = a3 mulhu a1
173336: 98 88 04                 a1 = a1 >> 0x4
173339: 96 88 14                 a1 = a1 * 0x14
173342: c9 8a 0a                 a3 = a3 - a1
173345: 7b 1a 10 01              u64 [sp + 0x110] = a3
173349: 3a 08 78 12 03           a1 = u64 [0x31278]
173354: 97 8a 0d                 a3 = a1 << 0xd
173357: d3 a8 08                 a1 = a1 ^ a3
173360: 98 8a 07                 a3 = a1 >> 0x7
173363: d3 a8 08                 a1 = a1 ^ a3
173366: 97 8a 11                 a3 = a1 << 0x11
173369: d3 8a 0a                 a3 = a3 ^ a1
173372: 3e 0a 78 12 03           u64 [0x31278] = a3
173377: 82 17 10 01              a0 = u64 [sp + 0x110]
173381: 95 72 01                 t0 = a0 + 0x1
173384: 52 02 06                 jump @11968 if t0 != 0
      :                          @11967
173387: 28 4c 4f                 jump @13240
      :                          @11968
173390: ca 9a 09                 a2 = a3 * a2
173393: cd 29 0a                 a3 = a2 %u t0
173396: 7b 1a b0 01              u64 [sp + 0x1b0] = a3
173400: 33 09 01                 a2 = 0x1
173403: 33 0b 01                 a4 = 0x1
173406: 51 07 1e                 jump @11973 if a0 == 0
      :                          @11969
173409: 33 0c 01                 a5 = 0x1
173412: 64 7b                    a4 = a0
173414: aa c7 12                 jump @11972 if a0 == a5
      :                          @11970
173417: 33 0b 01                 a4 = 0x1
173420: 01                       fallthrough
      :                          @11971
173421: 95 c6 01                 s1 = a5 + 0x1
173424: ca bc 0b                 a4 = a5 * a4
173427: 64 6c                    a5 = s1
173429: ab 67 f8                 jump @11971 if a0 != s1
      :                          @11972
173432: ca 7b 0b                 a4 = a4 * a0
173435: 01                       fallthrough
      :                          @11973
173436: c9 a7 0c                 a5 = a0 - a3
173439: e6 ca 0a                 a3 = minu(a3, a5)
173442: 7b 1b c8 01              u64 [sp + 0x1c8] = a4
173446: 51 0a 27                 jump @11976 if a3 == 0
      :                          @11974
173449: 33 09 01                 a2 = 0x1
173452: 33 0b 01                 a4 = 0x1
173455: 01                       fallthrough
      :                          @11975
173456: d8 ab 0c                 a5 = a4 <u a3
173459: 85 c6 01                 s1 = a5 ^ 0x1
173462: c9 b2 08                 a1 = t0 - a4
173465: c8 bc 0c                 a5 = a5 + a4
173468: ca 98 08                 a1 = a1 * a2
173471: d8 ca 09                 a2 = a3 <u a5
173474: d4 96 06                 s1 = s1 | a2
173477: cb b8 09                 a2 = a1 /u a4
173480: 64 cb                    a4 = a5
173482: 51 06 e6                 jump @11975 if s1 == 0
      :                          @11976
173485: 7b 19 20 01              u64 [sp + 0x120] = a2
173489: 50 20 10 0a 29 ed fd     ra = 2576, jump @2575
      :                          @11977 [@dyn 1288]
173496: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
173500: 95 17 10 01              a0 = sp + 0x110
173504: 7b 17 90 02              u64 [sp + 0x290] = a0
173508: 33 08 2c 0c              a1 = 0xc2c
173512: 7b 18 98 02              u64 [sp + 0x298] = a1
173516: 95 19 c8 01              a2 = sp + 0x1c8
173520: 7b 19 a0 02              u64 [sp + 0x2a0] = a2
173524: 7b 18 a8 02              u64 [sp + 0x2a8] = a1
173528: 7b 17 b0 02              u64 [sp + 0x2b0] = a0
173532: 7b 18 b8 02              u64 [sp + 0x2b8] = a1
173536: 95 19 b0 01              a2 = sp + 0x1b0
173540: 7b 19 c0 02              u64 [sp + 0x2c0] = a2
173544: 7b 18 c8 02              u64 [sp + 0x2c8] = a1
173548: 95 19 20 01              a2 = sp + 0x120
173552: 7b 19 d0 02              u64 [sp + 0x2d0] = a2
173556: 7b 18 d8 02              u64 [sp + 0x2d8] = a1
173560: 7b 17 e0 02              u64 [sp + 0x2e0] = a0
173564: 7b 18 e8 02              u64 [sp + 0x2e8] = a1
173568: 95 17 e0 01              a0 = sp + 0x1e0
173572: 7b 17 f0 02              u64 [sp + 0x2f0] = a0
173576: 7b 18 f8 02              u64 [sp + 0x2f8] = a1
173580: 33 07 70 27 01           a0 = 0x12770
173585: 7b 17 38 02              u64 [sp + 0x238] = a0
173589: 49 21 40 02 07           u64 [sp + 576] = 0x7
173594: 49 21 58 02              u64 [sp + 600] = 0
173598: 95 18 90 02              a1 = sp + 0x290
173602: 7b 18 48 02              u64 [sp + 0x248] = a1
173606: 49 21 50 02 07           u64 [sp + 592] = 0x7
173611: 95 17 08 02              a0 = sp + 0x208
173615: 95 18 38 02              a1 = sp + 0x238
173619: 50 20 12 0a c7 a9 fd     ra = 2578, jump @1503
      :                          @11978 [@dyn 1289]
173626: 82 16 10 02              s1 = u64 [sp + 0x210]
173630: 82 1b 18 02              a4 = u64 [sp + 0x218]
173634: 82 17 08 02              a0 = u64 [sp + 0x208]
173638: 7b 17 70                 u64 [sp + 0x70] = a0
173641: 33 07 02                 a0 = 0x2
173644: 33 08                    a1 = 0
173646: 33 09                    a2 = 0
173648: 64 6a                    a3 = s1
173650: 33 00 14 0a              ra = 0xa14
173654: 0a 64                    ecalli 100 // 'log'
173656: 01                       fallthrough
      :                          @11979 [@dyn 1290]
173657: 82 1c 70                 a5 = u64 [sp + 0x70]
173660: 82 17 68                 a0 = u64 [sp + 0x68]
173663: c8 c7 07                 a0 = a0 + a5
173666: 55 37 00 00 ff 09        jump @11981 if a0 >=u 4294901760
      :                          @11980
173672: 28 1b 3c                 jump @12868
      :                          @11981
173675: 33 07 c0 22 03           a0 = 0x322c0
173680: 95 77 00 00 01           a0 = a0 + 0x10000
173685: 01                       fallthrough
      :                          @11982
173686: 82 78                    a1 = u64 [a0]
173688: c9 87 09                 a2 = a0 - a1
173691: aa 69 06                 jump @11984 if a2 == s1
      :                          @11983
173694: 28 05 3c                 jump @12868
      :                          @11984
173697: c9 c8 09                 a2 = a1 - a5
173700: 01                       fallthrough
      :                          @11985
173701: 82 7a                    a3 = u64 [a0]
173703: ab 8a ef                 jump @11982 if a3 != a1
      :                          @11986
173706: 7b 79                    u64 [a0] = a2
173708: 33 0b                    a4 = 0
173710: 01                       fallthrough
      :                          @11987
173711: ab 8a e7                 jump @11982 if a3 != a1
      :                          @11988
173714: 28 f1 3b                 jump @12868
      :                          @11989 [@dyn 1291]
173717: 3a 07 78 12 03           a0 = u64 [0x31278]
173722: 3a 0a 60 11 03           a3 = u64 [0x31160]
173727: 97 78 0d                 a1 = a0 << 0xd
173730: d3 87 07                 a0 = a0 ^ a1
173733: 98 78 07                 a1 = a0 >> 0x7
173736: d3 87 07                 a0 = a0 ^ a1
173739: 97 78 11                 a1 = a0 << 0x11
173742: d3 87 07                 a0 = a0 ^ a1
173745: ca a7 08                 a1 = a0 * a3
173748: 3e 07 78 12 03           u64 [0x31278] = a0
173753: 7b 18 10 01              u64 [sp + 0x110] = a1
173757: 3a 07 78 12 03           a0 = u64 [0x31278]
173762: 97 78 0d                 a1 = a0 << 0xd
173765: d3 87 07                 a0 = a0 ^ a1
173768: 98 78 07                 a1 = a0 >> 0x7
173771: d3 87 07                 a0 = a0 ^ a1
173774: 97 78 11                 a1 = a0 << 0x11
173777: d3 87 07                 a0 = a0 ^ a1
173780: 3e 07 78 12 03           u64 [0x31278] = a0
173785: 82 18 10 01              a1 = u64 [sp + 0x110]
173789: 7b 1a 70                 u64 [sp + 0x70] = a3
173792: ca a7 07                 a0 = a0 * a3
173795: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
173799: 97 89 20                 a2 = a1 << 0x20
173802: 98 9a 20                 a3 = a2 >> 0x20
173805: 98 88 20                 a1 = a1 >> 0x20
173808: 97 7b 20                 a4 = a0 << 0x20
173811: 98 bc 20                 a5 = a4 >> 0x20
173814: 98 77 20                 a0 = a0 >> 0x20
173817: d6 b9 09                 a2 = a2 mulhu a4
173820: ca 78 0b                 a4 = a1 * a0
173823: c8 a8 08                 a1 = a1 + a3
173826: c8 c7 07                 a0 = a0 + a5
173829: d6 78 0a                 a3 = a1 mulhu a0
173832: ca 78 07                 a0 = a1 * a0
173835: c8 b9 08                 a1 = a2 + a4
173838: d8 98 0c                 a5 = a1 <u a2
173841: d8 87 06                 s1 = a0 <u a1
173844: bf ca 0a                 i32 a3 = a3 - a5
173847: bf 6a 0a                 i32 a3 = a3 - s1
173850: c9 87 07                 a0 = a0 - a1
173853: 97 aa 20                 a3 = a3 << 0x20
173856: 98 78 20                 a1 = a0 >> 0x20
173859: 97 77 20                 a0 = a0 << 0x20
173862: d4 b8 08                 a1 = a1 | a4
173865: d4 a8 08                 a1 = a1 | a3
173868: d4 97 07                 a0 = a0 | a2
173871: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
173875: 7b 18 e8 01              u64 [sp + 0x1e8] = a1
173879: 95 17 10 01              a0 = sp + 0x110
173883: 7b 17 90 02              u64 [sp + 0x290] = a0
173887: 33 07 2c 0c              a0 = 0xc2c
173891: 7b 17 98 02              u64 [sp + 0x298] = a0
173895: 95 18 b0 01              a1 = sp + 0x1b0
173899: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
173903: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
173907: 95 17 e0 01              a0 = sp + 0x1e0
173911: 7b 17 b0 02              u64 [sp + 0x2b0] = a0
173915: 33 07 78 0c              a0 = 0xc78
173919: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
173923: 33 07 f0 27 01           a0 = 0x127f0
173928: 7b 17 38 02              u64 [sp + 0x238] = a0
173932: 49 21 40 02 03           u64 [sp + 576] = 0x3
173937: 49 21 58 02              u64 [sp + 600] = 0
173941: 95 18 90 02              a1 = sp + 0x290
173945: 7b 18 48 02              u64 [sp + 0x248] = a1
173949: 49 21 50 02 03           u64 [sp + 592] = 0x3
173954: 95 17 08 02              a0 = sp + 0x208
173958: 95 18 38 02              a1 = sp + 0x238
173962: 50 20 18 0a 70 a8 fd     ra = 2584, jump @1503
      :                          @11990 [@dyn 1292]
173969: 82 16 10 02              s1 = u64 [sp + 0x210]
173973: 82 1b 18 02              a4 = u64 [sp + 0x218]
173977: 82 17 08 02              a0 = u64 [sp + 0x208]
173981: 7b 17 60                 u64 [sp + 0x60] = a0
173984: 33 07 02                 a0 = 0x2
173987: 33 08                    a1 = 0
173989: 33 09                    a2 = 0
173991: 64 6a                    a3 = s1
173993: 33 00 1a 0a              ra = 0xa1a
173997: 0a 64                    ecalli 100 // 'log'
173999: 01                       fallthrough
      :                          @11991 [@dyn 1293]
174000: 82 1c 60                 a5 = u64 [sp + 0x60]
174003: 82 17 68                 a0 = u64 [sp + 0x68]
174006: c8 c7 07                 a0 = a0 + a5
174009: 53 37 00 00 ff 25        jump @11997 if a0 <u 4294901760
      :                          @11992
174015: 33 07 c0 22 03           a0 = 0x322c0
174020: 95 77 00 00 01           a0 = a0 + 0x10000
174025: 01                       fallthrough
      :                          @11993
174026: 82 78                    a1 = u64 [a0]
174028: c9 87 09                 a2 = a0 - a1
174031: ab 69 0f                 jump @11997 if a2 != s1
      :                          @11994
174034: c9 c8 09                 a2 = a1 - a5
174037: 01                       fallthrough
      :                          @11995
174038: 82 7a                    a3 = u64 [a0]
174040: ab 8a f2                 jump @11993 if a3 != a1
      :                          @11996
174043: 7b 79                    u64 [a0] = a2
174045: 01                       fallthrough
      :                          @11997
174046: 33 02 78 12 03           t0 = 0x31278
174051: 3a 07 78 12 03           a0 = u64 [0x31278]
174056: 97 78 0d                 a1 = a0 << 0xd
174059: d3 87 07                 a0 = a0 ^ a1
174062: 98 78 07                 a1 = a0 >> 0x7
174065: d3 87 07                 a0 = a0 ^ a1
174068: 97 78 11                 a1 = a0 << 0x11
174071: d3 87 07                 a0 = a0 ^ a1
174074: 3e 07 78 12 03           u64 [0x31278] = a0
174079: 3a 08 78 12 03           a1 = u64 [0x31278]
174084: 97 89 0d                 a2 = a1 << 0xd
174087: d3 98 08                 a1 = a1 ^ a2
174090: 98 89 07                 a2 = a1 >> 0x7
174093: d3 98 08                 a1 = a1 ^ a2
174096: 97 89 11                 a2 = a1 << 0x11
174099: d3 98 08                 a1 = a1 ^ a2
174102: 3e 08 78 12 03           u64 [0x31278] = a1
174107: 3a 09 78 12 03           a2 = u64 [0x31278]
174112: 82 1c 70                 a5 = u64 [sp + 0x70]
174115: ca c7 07                 a0 = a0 * a5
174118: 97 9a 0d                 a3 = a2 << 0xd
174121: d3 a9 09                 a2 = a2 ^ a3
174124: 98 9a 07                 a3 = a2 >> 0x7
174127: d3 a9 09                 a2 = a2 ^ a3
174130: 97 9a 11                 a3 = a2 << 0x11
174133: d3 a9 09                 a2 = a2 ^ a3
174136: 3e 09 78 12 03           u64 [0x31278] = a2
174141: 3a 0a 78 12 03           a3 = u64 [0x31278]
174146: ca c8 06                 s1 = a1 * a5
174149: ca c9 09                 a2 = a2 * a5
174152: 97 ab 0d                 a4 = a3 << 0xd
174155: d3 ba 0a                 a3 = a3 ^ a4
174158: 98 ab 07                 a4 = a3 >> 0x7
174161: d3 ba 0a                 a3 = a3 ^ a4
174164: 97 ab 11                 a4 = a3 << 0x11
174167: d3 ab 0b                 a4 = a4 ^ a3
174170: ca cb 0a                 a3 = a4 * a5
174173: 3e 0b 78 12 03           u64 [0x31278] = a4
174178: c8 97 0b                 a4 = a0 + a2
174181: d8 7b 0c                 a5 = a4 <u a0
174184: c8 6a 08                 a1 = a3 + s1
174187: c8 c8 08                 a1 = a1 + a5
174190: 7b 1b c8 01              u64 [sp + 0x1c8] = a4
174194: 7b 18 d0 01              u64 [sp + 0x1d0] = a1
174198: c9 97 08                 a1 = a0 - a2
174201: d8 97 0b                 a4 = a0 <u a2
174204: c9 a6 0c                 a5 = s1 - a3
174207: c9 bc 0c                 a5 = a5 - a4
174210: 7b 18 20 01              u64 [sp + 0x120] = a1
174214: 7b 1c 28 01              u64 [sp + 0x128] = a5
174218: ca 79 0b                 a4 = a2 * a0
174221: d6 79 08                 a1 = a2 mulhu a0
174224: d6 7a 0c                 a5 = a3 mulhu a0
174227: ca 7a 07                 a0 = a3 * a0
174230: c8 78 08                 a1 = a1 + a0
174233: d8 78 07                 a0 = a1 <u a0
174236: c8 c7 07                 a0 = a0 + a5
174239: d6 69 0c                 a5 = a2 mulhu s1
174242: ca 69 09                 a2 = a2 * s1
174245: c8 89 09                 a2 = a2 + a1
174248: d8 89 08                 a1 = a2 <u a1
174251: c8 c8 08                 a1 = a1 + a5
174254: d6 6a 0c                 a5 = a3 mulhu s1
174257: ca 6a 0a                 a3 = a3 * s1
174260: c8 7a 0a                 a3 = a3 + a0
174263: d8 7a 07                 a0 = a3 <u a0
174266: c8 c7 07                 a0 = a0 + a5
174269: c8 a8 08                 a1 = a1 + a3
174272: d8 a8 0a                 a3 = a1 <u a3
174275: c8 a7 07                 a0 = a0 + a3
174278: 7b 17 20 02              u64 [sp + 0x220] = a0
174282: 7b 18 18 02              u64 [sp + 0x218] = a1
174286: 7b 19 10 02              u64 [sp + 0x210] = a2
174290: 7b 1b 08 02              u64 [sp + 0x208] = a4
174294: 95 17 c8 01              a0 = sp + 0x1c8
174298: 7b 17 90 02              u64 [sp + 0x290] = a0
174302: 33 07 a4 00              a0 = 0xa4
174306: 7b 17 98 02              u64 [sp + 0x298] = a0
174310: 95 18 20 01              a1 = sp + 0x120
174314: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
174318: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
174322: 95 17 08 02              a0 = sp + 0x208
174326: 7b 17 b0 02              u64 [sp + 0x2b0] = a0
174330: 33 07 80 00              a0 = 0x80
174334: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
174338: 33 07 40 28 01           a0 = 0x12840
174343: 7b 17 38 02              u64 [sp + 0x238] = a0
174347: 49 21 40 02 03           u64 [sp + 576] = 0x3
174352: 49 21 58 02              u64 [sp + 600] = 0
174356: 95 18 90 02              a1 = sp + 0x290
174360: 7b 18 48 02              u64 [sp + 0x248] = a1
174364: 49 21 50 02 03           u64 [sp + 592] = 0x3
174369: 95 17 e0 01              a0 = sp + 0x1e0
174373: 95 18 38 02              a1 = sp + 0x238
174377: 50 20 1c 0a d1 a6 fd     ra = 2588, jump @1503
      :                          @11998 [@dyn 1294]
174384: 82 16 e8 01              s1 = u64 [sp + 0x1e8]
174388: 82 1b f0 01              a4 = u64 [sp + 0x1f0]
174392: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
174396: 7b 17 70                 u64 [sp + 0x70] = a0
174399: 33 07 02                 a0 = 0x2
174402: 33 08                    a1 = 0
174404: 33 09                    a2 = 0
174406: 64 6a                    a3 = s1
174408: 33 00 1e 0a              ra = 0xa1e
174412: 0a 64                    ecalli 100 // 'log'
174414: 01                       fallthrough
      :                          @11999 [@dyn 1295]
174415: 82 1c 70                 a5 = u64 [sp + 0x70]
174418: 82 17 68                 a0 = u64 [sp + 0x68]
174421: c8 c7 07                 a0 = a0 + a5
174424: 55 37 00 00 ff 09        jump @12001 if a0 >=u 4294901760
      :                          @12000
174430: 28 25 39                 jump @12868
      :                          @12001
174433: 33 07 c0 22 03           a0 = 0x322c0
174438: 95 77 00 00 01           a0 = a0 + 0x10000
174443: 01                       fallthrough
      :                          @12002
174444: 82 78                    a1 = u64 [a0]
174446: c9 87 09                 a2 = a0 - a1
174449: aa 69 06                 jump @12004 if a2 == s1
      :                          @12003
174452: 28 0f 39                 jump @12868
      :                          @12004
174455: c9 c8 09                 a2 = a1 - a5
174458: 01                       fallthrough
      :                          @12005
174459: 82 7a                    a3 = u64 [a0]
174461: ab 8a ef                 jump @12002 if a3 != a1
      :                          @12006
174464: 7b 79                    u64 [a0] = a2
174466: 33 0b                    a4 = 0
174468: 01                       fallthrough
      :                          @12007
174469: ab 8a e7                 jump @12002 if a3 != a1
      :                          @12008
174472: 28 fb 38                 jump @12868
      :                          @12009 [@dyn 1296]
174475: 3a 07 78 12 03           a0 = u64 [0x31278]
174480: 97 78 0d                 a1 = a0 << 0xd
174483: d3 87 07                 a0 = a0 ^ a1
174486: 98 78 07                 a1 = a0 >> 0x7
174489: d3 87 07                 a0 = a0 ^ a1
174492: 97 78 11                 a1 = a0 << 0x11
174495: d3 87 07                 a0 = a0 ^ a1
174498: 3e 07 78 12 03           u64 [0x31278] = a0
174503: 49 11 58 1d dd 6c 4f     u64 [sp + 88] = 0x4f6cdd1d
174510: 87 77 1d dd 6c 4f        i32 a0 = a0 * 0x4f6cdd1d
174516: 86 77 01                 a0 = a0 | 0x1
174519: 33 08 03                 a1 = 0x3
174522: e4 87 06                 s1 = maxu(a0, a1)
174525: 97 68 20                 a1 = s1 << 0x20
174528: 7b 18 60                 u64 [sp + 0x60] = a1
174531: 98 88 20                 a1 = a1 >> 0x20
174534: 14 09 00 00 00 00 01 00 00 00 a2 = 0x100000000
174544: 95 17 90 02              a0 = sp + 0x290
174548: 7b 18 70                 u64 [sp + 0x70] = a1
174551: 50 20 22 0a 06 e2 fd     ra = 2594, jump @2421
      :                          @12010 [@dyn 1297]
174558: 82 17 98 02              a0 = u64 [sp + 0x298]
174562: 3a 08 78 12 03           a1 = u64 [0x31278]
174567: 97 89 0d                 a2 = a1 << 0xd
174570: d3 98 08                 a1 = a1 ^ a2
174573: 98 89 07                 a2 = a1 >> 0x7
174576: d3 98 08                 a1 = a1 ^ a2
174579: 97 89 11                 a2 = a1 << 0x11
174582: d3 98 08                 a1 = a1 ^ a2
174585: 3e 08 78 12 03           u64 [0x31278] = a1
174590: 82 19 58                 a2 = u64 [sp + 0x58]
174593: ca 98 08                 a1 = a1 * a2
174596: c3 68 08                 i32 a1 = a1 %u s1
174599: 7a 18 c8 01              u32 [sp + 0x1c8] = a1
174603: 97 88 20                 a1 = a1 << 0x20
174606: d6 88 08                 a1 = a1 mulhu a1
174609: ca 87 07                 a0 = a0 * a1
174612: 8d 77                    i32 a0 = -a0
174614: 97 77 20                 a0 = a0 << 0x20
174617: 82 19 60                 a2 = u64 [sp + 0x60]
174620: d6 97 07                 a0 = a0 mulhu a2
174623: c8 87 07                 a0 = a0 + a1
174626: 98 78 20                 a1 = a0 >> 0x20
174629: 99 77 20                 a0 = a0 >>a 0x20
174632: d8 67 07                 a0 = a0 <u s1
174635: 7b 16 60                 u64 [sp + 0x60] = s1
174638: 94 76                    s1 = 0 if a0 != 0
174640: bf 68 08                 i32 a1 = a1 - s1
174643: 7a 18 e0 01              u32 [sp + 0x1e0] = a1
174647: 95 17 c8 01              a0 = sp + 0x1c8
174651: 7b 17 90 02              u64 [sp + 0x290] = a0
174655: 33 08 62 0c              a1 = 0xc62
174659: 7b 18 98 02              u64 [sp + 0x298] = a1
174663: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
174667: 7b 18 a8 02              u64 [sp + 0x2a8] = a1
174671: 95 17 e0 01              a0 = sp + 0x1e0
174675: 7b 17 b0 02              u64 [sp + 0x2b0] = a0
174679: 7b 18 58                 u64 [sp + 0x58] = a1
174682: 7b 18 b8 02              u64 [sp + 0x2b8] = a1
174686: 33 07 80 28 01           a0 = 0x12880
174691: 7b 17 38 02              u64 [sp + 0x238] = a0
174695: 49 21 40 02 03           u64 [sp + 576] = 0x3
174700: 49 21 58 02              u64 [sp + 600] = 0
174704: 95 18 90 02              a1 = sp + 0x290
174708: 7b 18 48 02              u64 [sp + 0x248] = a1
174712: 49 21 50 02 03           u64 [sp + 592] = 0x3
174717: 95 17 08 02              a0 = sp + 0x208
174721: 95 18 38 02              a1 = sp + 0x238
174725: 50 20 24 0a 75 a5 fd     ra = 2596, jump @1503
      :                          @12011 [@dyn 1298]
174732: 82 16 10 02              s1 = u64 [sp + 0x210]
174736: 82 1b 18 02              a4 = u64 [sp + 0x218]
174740: 82 17 08 02              a0 = u64 [sp + 0x208]
174744: 7b 17 48                 u64 [sp + 0x48] = a0
174747: 33 07 02                 a0 = 0x2
174750: 33 08                    a1 = 0
174752: 33 09                    a2 = 0
174754: 64 6a                    a3 = s1
174756: 33 00 26 0a              ra = 0xa26
174760: 0a 64                    ecalli 100 // 'log'
174762: 01                       fallthrough
      :                          @12012 [@dyn 1299]
174763: 82 1c 48                 a5 = u64 [sp + 0x48]
174766: 82 17 68                 a0 = u64 [sp + 0x68]
174769: c8 c7 07                 a0 = a0 + a5
174772: 53 37 00 00 ff 25        jump @12018 if a0 <u 4294901760
      :                          @12013
174778: 33 07 c0 22 03           a0 = 0x322c0
174783: 95 77 00 00 01           a0 = a0 + 0x10000
174788: 01                       fallthrough
      :                          @12014
174789: 82 78                    a1 = u64 [a0]
174791: c9 87 09                 a2 = a0 - a1
174794: ab 69 0f                 jump @12018 if a2 != s1
      :                          @12015
174797: c9 c8 09                 a2 = a1 - a5
174800: 01                       fallthrough
      :                          @12016
174801: 82 7a                    a3 = u64 [a0]
174803: ab 8a f2                 jump @12014 if a3 != a1
      :                          @12017
174806: 7b 79                    u64 [a0] = a2
174808: 01                       fallthrough
      :                          @12018
174809: 81 17 c8 01              a0 = i32 [sp + 0x1c8]
174813: 7b 17 48                 u64 [sp + 0x48] = a0
174816: 33 08 01                 a1 = 0x1
174819: 33 07                    a0 = 0
174821: 82 16 70                 s1 = u64 [sp + 0x70]
174824: 64 69                    a2 = s1
174826: 50 20 28 0a 9a 5e        ra = 2600, jump @13629
      :                          @12019 [@dyn 1300]
174832: 82 19 60                 a2 = u64 [sp + 0x60]
174835: 82 1a 48                 a3 = u64 [sp + 0x48]
174838: d8 9a 08                 a1 = a3 <u a2
174841: 94 89                    a2 = 0 if a1 != 0
174843: bf 9a 08                 i32 a1 = a3 - a2
174846: 7a 18 20 01              u32 [sp + 0x120] = a1
174850: 3a 08 78 12 03           a1 = u64 [0x31278]
174855: 97 89 0d                 a2 = a1 << 0xd
174858: d3 98 08                 a1 = a1 ^ a2
174861: 98 89 07                 a2 = a1 >> 0x7
174864: 3a 0a 60 11 03           a3 = u64 [0x31160]
174869: d3 98 08                 a1 = a1 ^ a2
174872: 97 89 11                 a2 = a1 << 0x11
174875: d3 98 08                 a1 = a1 ^ a2
174878: ca a8 09                 a2 = a1 * a3
174881: 3e 08 78 12 03           u64 [0x31278] = a1
174886: d6 97 07                 a0 = a0 mulhu a2
174889: ca 67 07                 a0 = a0 * s1
174892: c9 79 09                 a2 = a2 - a0
174895: d8 69 07                 a0 = a2 <u s1
174898: 94 76                    s1 = 0 if a0 != 0
174900: bf 69 07                 i32 a0 = a2 - s1
174903: 7a 17 e0 01              u32 [sp + 0x1e0] = a0
174907: 95 17 20 01              a0 = sp + 0x120
174911: 7b 17 38 02              u64 [sp + 0x238] = a0
174915: 82 17 58                 a0 = u64 [sp + 0x58]
174918: 7b 17 40 02              u64 [sp + 0x240] = a0
174922: 95 18 e0 01              a1 = sp + 0x1e0
174926: 7b 18 48 02              u64 [sp + 0x248] = a1
174930: 7b 17 50 02              u64 [sp + 0x250] = a0
174934: 33 07 c0 28 01           a0 = 0x128c0
174939: 7b 17 90 02              u64 [sp + 0x290] = a0
174943: 49 21 98 02 02           u64 [sp + 664] = 0x2
174948: 49 21 b0 02              u64 [sp + 688] = 0
174952: 95 17 38 02              a0 = sp + 0x238
174956: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
174960: 49 21 a8 02 02           u64 [sp + 680] = 0x2
174965: 95 17 08 02              a0 = sp + 0x208
174969: 95 18 90 02              a1 = sp + 0x290
174973: 50 20 2a 0a 7d a4 fd     ra = 2602, jump @1503
      :                          @12020 [@dyn 1301]
174980: 82 16 10 02              s1 = u64 [sp + 0x210]
174984: 82 1b 18 02              a4 = u64 [sp + 0x218]
174988: 82 17 08 02              a0 = u64 [sp + 0x208]
174992: 7b 17 70                 u64 [sp + 0x70] = a0
174995: 33 07 02                 a0 = 0x2
174998: 33 08                    a1 = 0
175000: 33 09                    a2 = 0
175002: 64 6a                    a3 = s1
175004: 33 00 2c 0a              ra = 0xa2c
175008: 0a 64                    ecalli 100 // 'log'
175010: 01                       fallthrough
      :                          @12021 [@dyn 1302]
175011: 82 1c 70                 a5 = u64 [sp + 0x70]
175014: 82 17 68                 a0 = u64 [sp + 0x68]
175017: c8 c7 07                 a0 = a0 + a5
175020: 55 37 00 00 ff 09        jump @12023 if a0 >=u 4294901760
      :                          @12022
175026: 28 d1 36                 jump @12868
      :                          @12023
175029: 33 07 c0 22 03           a0 = 0x322c0
175034: 95 77 00 00 01           a0 = a0 + 0x10000
175039: 01                       fallthrough
      :                          @12024
175040: 82 78                    a1 = u64 [a0]
175042: c9 87 09                 a2 = a0 - a1
175045: aa 69 06                 jump @12026 if a2 == s1
      :                          @12025
175048: 28 bb 36                 jump @12868
      :                          @12026
175051: c9 c8 09                 a2 = a1 - a5
175054: 01                       fallthrough
      :                          @12027
175055: 82 7a                    a3 = u64 [a0]
175057: ab 8a ef                 jump @12024 if a3 != a1
      :                          @12028
175060: 7b 79                    u64 [a0] = a2
175062: 33 0b                    a4 = 0
175064: 01                       fallthrough
      :                          @12029
175065: ab 8a e7                 jump @12024 if a3 != a1
      :                          @12030
175068: 28 a7 36                 jump @12868
      :                          @12031 [@dyn 1303]
175071: 49 21 70 02              u64 [sp + 624] = 0
175075: 49 21 68 02              u64 [sp + 616] = 0
175079: 49 21 60 02              u64 [sp + 608] = 0
175083: 49 21 58 02              u64 [sp + 600] = 0
175087: 49 21 50 02              u64 [sp + 592] = 0
175091: 49 21 48 02              u64 [sp + 584] = 0
175095: 49 21 40 02              u64 [sp + 576] = 0
175099: 49 21 38 02              u64 [sp + 568] = 0
175103: 3a 08 78 12 03           a1 = u64 [0x31278]
175108: 97 89 0d                 a2 = a1 << 0xd
175111: d3 89 09                 a2 = a2 ^ a1
175114: 98 9a 07                 a3 = a2 >> 0x7
175117: 3a 08 60 11 03           a1 = u64 [0x31160]
175122: d3 a9 09                 a2 = a2 ^ a3
175125: 97 9a 11                 a3 = a2 << 0x11
175128: d3 a9 09                 a2 = a2 ^ a3
175131: ca 89 0a                 a3 = a2 * a1
175134: 3e 09 78 12 03           u64 [0x31278] = a2
175139: 14 09 f1 f0 f0 f0 f0 f0 f0 f0 a2 = 0xf0f0f0f0f0f0f0f1
175149: d6 9a 0b                 a4 = a3 mulhu a2
175152: 98 bc 04                 a5 = a4 >> 0x4
175155: 84 bb f0                 a4 = a4 & 0xfffffffffffffff0
175158: c8 cb 0b                 a4 = a4 + a5
175161: c9 ba 0a                 a3 = a3 - a4
175164: 7b 1a 38 02              u64 [sp + 0x238] = a3
175168: 3a 0a 78 12 03           a3 = u64 [0x31278]
175173: 97 ab 0d                 a4 = a3 << 0xd
175176: d3 ba 0a                 a3 = a3 ^ a4
175179: 98 ab 07                 a4 = a3 >> 0x7
175182: d3 ba 0a                 a3 = a3 ^ a4
175185: 97 ab 11                 a4 = a3 << 0x11
175188: d3 ba 0a                 a3 = a3 ^ a4
175191: ca 8a 0b                 a4 = a3 * a1
175194: 3e 0a 78 12 03           u64 [0x31278] = a3
175199: d6 9b 0a                 a3 = a4 mulhu a2
175202: 98 ac 04                 a5 = a3 >> 0x4
175205: 84 aa f0                 a3 = a3 & 0xfffffffffffffff0
175208: c8 ca 0a                 a3 = a3 + a5
175211: c9 ab 0b                 a4 = a4 - a3
175214: 7b 1b 40 02              u64 [sp + 0x240] = a4
175218: 3a 0a 78 12 03           a3 = u64 [0x31278]
175223: 97 ab 0d                 a4 = a3 << 0xd
175226: d3 ba 0a                 a3 = a3 ^ a4
175229: 98 ab 07                 a4 = a3 >> 0x7
175232: d3 ba 0a                 a3 = a3 ^ a4
175235: 97 ab 11                 a4 = a3 << 0x11
175238: d3 ba 0a                 a3 = a3 ^ a4
175241: ca 8a 0b                 a4 = a3 * a1
175244: 3e 0a 78 12 03           u64 [0x31278] = a3
175249: d6 9b 0a                 a3 = a4 mulhu a2
175252: 98 ac 04                 a5 = a3 >> 0x4
175255: 84 aa f0                 a3 = a3 & 0xfffffffffffffff0
175258: c8 ca 0a                 a3 = a3 + a5
175261: c9 ab 0b                 a4 = a4 - a3
175264: 7b 1b 48 02              u64 [sp + 0x248] = a4
175268: 3a 0a 78 12 03           a3 = u64 [0x31278]
175273: 97 ab 0d                 a4 = a3 << 0xd
175276: d3 ba 0a                 a3 = a3 ^ a4
175279: 98 ab 07                 a4 = a3 >> 0x7
175282: d3 ba 0a                 a3 = a3 ^ a4
175285: 97 ab 11                 a4 = a3 << 0x11
175288: d3 ba 0a                 a3 = a3 ^ a4
175291: ca 8a 0b                 a4 = a3 * a1
175294: 3e 0a 78 12 03           u64 [0x31278] = a3
175299: d6 9b 0a                 a3 = a4 mulhu a2
175302: 98 ac 04                 a5 = a3 >> 0x4
175305: 84 aa f0                 a3 = a3 & 0xfffffffffffffff0
175308: c8 ca 0a                 a3 = a3 + a5
175311: c9 ab 0b                 a4 = a4 - a3
175314: 7b 1b 50 02              u64 [sp + 0x250] = a4
175318: 3a 0a 78 12 03           a3 = u64 [0x31278]
175323: 97 ab 0d                 a4 = a3 << 0xd
175326: d3 ba 0a                 a3 = a3 ^ a4
175329: 98 ab 07                 a4 = a3 >> 0x7
175332: d3 ba 0a                 a3 = a3 ^ a4
175335: 97 ab 11                 a4 = a3 << 0x11
175338: d3 ba 0a                 a3 = a3 ^ a4
175341: ca 8a 0b                 a4 = a3 * a1
175344: 3e 0a 78 12 03           u64 [0x31278] = a3
175349: d6 9b 0a                 a3 = a4 mulhu a2
175352: 98 ac 04                 a5 = a3 >> 0x4
175355: 84 aa f0                 a3 = a3 & 0xfffffffffffffff0
175358: c8 ca 0a                 a3 = a3 + a5
175361: c9 ab 0b                 a4 = a4 - a3
175364: 7b 1b 58 02              u64 [sp + 0x258] = a4
175368: 3a 0a 78 12 03           a3 = u64 [0x31278]
175373: 97 ab 0d                 a4 = a3 << 0xd
175376: d3 ba 0a                 a3 = a3 ^ a4
175379: 98 ab 07                 a4 = a3 >> 0x7
175382: d3 ba 0a                 a3 = a3 ^ a4
175385: 97 ab 11                 a4 = a3 << 0x11
175388: d3 ba 0a                 a3 = a3 ^ a4
175391: ca 8a 0b                 a4 = a3 * a1
175394: 3e 0a 78 12 03           u64 [0x31278] = a3
175399: d6 9b 0a                 a3 = a4 mulhu a2
175402: 98 ac 04                 a5 = a3 >> 0x4
175405: 84 aa f0                 a3 = a3 & 0xfffffffffffffff0
175408: c8 ca 0a                 a3 = a3 + a5
175411: c9 ab 0b                 a4 = a4 - a3
175414: 7b 1b 60 02              u64 [sp + 0x260] = a4
175418: 3a 0a 78 12 03           a3 = u64 [0x31278]
175423: 97 ab 0d                 a4 = a3 << 0xd
175426: d3 ba 0a                 a3 = a3 ^ a4
175429: 98 ab 07                 a4 = a3 >> 0x7
175432: d3 ba 0a                 a3 = a3 ^ a4
175435: 97 ab 11                 a4 = a3 << 0x11
175438: d3 ba 0a                 a3 = a3 ^ a4
175441: ca 8a 0b                 a4 = a3 * a1
175444: 3e 0a 78 12 03           u64 [0x31278] = a3
175449: d6 9b 0a                 a3 = a4 mulhu a2
175452: 98 ac 04                 a5 = a3 >> 0x4
175455: 84 aa f0                 a3 = a3 & 0xfffffffffffffff0
175458: c8 ca 0a                 a3 = a3 + a5
175461: c9 ab 0b                 a4 = a4 - a3
175464: 7b 1b 68 02              u64 [sp + 0x268] = a4
175468: 3a 0a 78 12 03           a3 = u64 [0x31278]
175473: 97 ab 0d                 a4 = a3 << 0xd
175476: d3 ba 0a                 a3 = a3 ^ a4
175479: 98 ab 07                 a4 = a3 >> 0x7
175482: d3 ba 0a                 a3 = a3 ^ a4
175485: 97 ab 11                 a4 = a3 << 0x11
175488: d3 ba 0a                 a3 = a3 ^ a4
175491: ca 8a 08                 a1 = a3 * a1
175494: 3e 0a 78 12 03           u64 [0x31278] = a3
175499: d6 98 07                 a0 = a1 mulhu a2
175502: 98 79 04                 a2 = a0 >> 0x4
175505: 84 77 f0                 a0 = a0 & 0xfffffffffffffff0
175508: c8 97 07                 a0 = a0 + a2
175511: c9 78 08                 a1 = a1 - a0
175514: 7b 18 70 02              u64 [sp + 0x270] = a1
175518: 95 17 90 02              a0 = sp + 0x290
175522: 95 18 38 02              a1 = sp + 0x238
175526: 95 16 38 02              s1 = sp + 0x238
175530: 33 00 30 0a              ra = 0xa30
175534: 95 11 60 ff              sp = sp + 0xffffffffffffff60
175538: 7b 10 98 00              u64 [sp + 0x98] = ra
175542: 7b 15 90 00              u64 [sp + 0x90] = s0
175546: 7b 16 88 00              u64 [sp + 0x88] = s1
175550: 7b 17                    u64 [sp] = a0
175552: 33 00                    ra = 0
175554: 82 87                    a0 = u64 [a1]
175556: 14 0a f1 f0 f0 f0 f0 f0 f0 f0 a3 = 0xf0f0f0f0f0f0f0f1
175566: d6 a7 09                 a2 = a0 mulhu a3
175569: 98 9b 04                 a4 = a2 >> 0x4
175572: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
175575: c8 b9 09                 a2 = a2 + a4
175578: c9 97 07                 a0 = a0 - a2
175581: 82 89 08                 a2 = u64 [a1 + 0x8]
175584: 82 8c 10                 a5 = u64 [a1 + 0x10]
175587: 82 86 18                 s1 = u64 [a1 + 0x18]
175590: 82 85 20                 s0 = u64 [a1 + 0x20]
175593: 7b 17 40                 u64 [sp + 0x40] = a0
175596: 7b 19 38                 u64 [sp + 0x38] = a2
175599: c8 97 07                 a0 = a0 + a2
175602: d6 a7 09                 a2 = a0 mulhu a3
175605: 98 9b 04                 a4 = a2 >> 0x4
175608: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
175611: c8 b9 09                 a2 = a2 + a4
175614: 7b 1c 30                 u64 [sp + 0x30] = a5
175617: c8 c7 07                 a0 = a0 + a5
175620: c9 97 07                 a0 = a0 - a2
175623: d6 a7 09                 a2 = a0 mulhu a3
175626: 98 9b 04                 a4 = a2 >> 0x4
175629: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
175632: c8 b9 09                 a2 = a2 + a4
175635: 7b 16 28                 u64 [sp + 0x28] = s1
175638: c8 67 07                 a0 = a0 + s1
175641: c9 97 07                 a0 = a0 - a2
175644: d6 a7 09                 a2 = a0 mulhu a3
175647: 98 9b 04                 a4 = a2 >> 0x4
175650: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
175653: c8 b9 09                 a2 = a2 + a4
175656: 82 8c 28                 a5 = u64 [a1 + 0x28]
175659: 7b 15 20                 u64 [sp + 0x20] = s0
175662: c8 57 07                 a0 = a0 + s0
175665: c9 97 07                 a0 = a0 - a2
175668: d6 a7 09                 a2 = a0 mulhu a3
175671: 98 9b 04                 a4 = a2 >> 0x4
175674: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
175677: c8 b9 09                 a2 = a2 + a4
175680: 7b 1c 18                 u64 [sp + 0x18] = a5
175683: c8 c7 07                 a0 = a0 + a5
175686: c9 97 07                 a0 = a0 - a2
175689: 82 8c 30                 a5 = u64 [a1 + 0x30]
175692: d6 a7 09                 a2 = a0 mulhu a3
175695: 98 9b 04                 a4 = a2 >> 0x4
175698: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
175701: c8 b9 09                 a2 = a2 + a4
175704: 7b 1c 10                 u64 [sp + 0x10] = a5
175707: c8 c7 07                 a0 = a0 + a5
175710: c9 97 07                 a0 = a0 - a2
175713: 7b 17 08                 u64 [sp + 0x8] = a0
175716: 49 21 80 00              u64 [sp + 128] = 0
175720: 49 11 78                 u64 [sp + 120] = 0
175723: 49 11 70                 u64 [sp + 112] = 0
175726: 49 11 68                 u64 [sp + 104] = 0
175729: 49 11 60                 u64 [sp + 96] = 0
175732: 49 11 58                 u64 [sp + 88] = 0
175735: 49 11 50                 u64 [sp + 80] = 0
175738: 49 11 48                 u64 [sp + 72] = 0
175741: 82 88 38                 a1 = u64 [a1 + 0x38]
175744: 28 ed e4 fd              jump @2585
      :                          @12032 [@dyn 1304]
175748: 7b 16 e0 01              u64 [sp + 0x1e0] = s1
175752: 33 07 8e 00              a0 = 0x8e
175756: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
175760: 95 18 90 02              a1 = sp + 0x290
175764: 7b 18 f0 01              u64 [sp + 0x1f0] = a1
175768: 7b 17 f8 01              u64 [sp + 0x1f8] = a0
175772: 33 07 e0 28 01           a0 = 0x128e0
175777: 7b 17 08 02              u64 [sp + 0x208] = a0
175781: 49 21 10 02 02           u64 [sp + 528] = 0x2
175786: 49 21 28 02              u64 [sp + 552] = 0
175790: 95 18 e0 01              a1 = sp + 0x1e0
175794: 7b 18 18 02              u64 [sp + 0x218] = a1
175798: 49 21 20 02 02           u64 [sp + 544] = 0x2
175803: 95 17 20 01              a0 = sp + 0x120
175807: 95 18 08 02              a1 = sp + 0x208
175811: 50 20 32 0a 37 a1 fd     ra = 2610, jump @1503
      :                          @12033 [@dyn 1305]
175818: 82 16 28 01              s1 = u64 [sp + 0x128]
175822: 82 1b 30 01              a4 = u64 [sp + 0x130]
175826: 82 17 20 01              a0 = u64 [sp + 0x120]
175830: 7b 17 70                 u64 [sp + 0x70] = a0
175833: 33 07 02                 a0 = 0x2
175836: 33 08                    a1 = 0
175838: 33 09                    a2 = 0
175840: 64 6a                    a3 = s1
175842: 33 00 34 0a              ra = 0xa34
175846: 0a 64                    ecalli 100 // 'log'
175848: 01                       fallthrough
      :                          @12034 [@dyn 1306]
175849: 82 1c 70                 a5 = u64 [sp + 0x70]
175852: 82 17 68                 a0 = u64 [sp + 0x68]
175855: c8 c7 07                 a0 = a0 + a5
175858: 55 37 00 00 ff 09        jump @12036 if a0 >=u 4294901760
      :                          @12035
175864: 28 8b 33                 jump @12868
      :                          @12036
175867: 33 07 c0 22 03           a0 = 0x322c0
175872: 95 77 00 00 01           a0 = a0 + 0x10000
175877: 01                       fallthrough
      :                          @12037
175878: 82 78                    a1 = u64 [a0]
175880: c9 87 09                 a2 = a0 - a1
175883: aa 69 06                 jump @12039 if a2 == s1
      :                          @12038
175886: 28 75 33                 jump @12868
      :                          @12039
175889: c9 c8 09                 a2 = a1 - a5
175892: 01                       fallthrough
      :                          @12040
175893: 82 7a                    a3 = u64 [a0]
175895: ab 8a ef                 jump @12037 if a3 != a1
      :                          @12041
175898: 7b 79                    u64 [a0] = a2
175900: 33 0b                    a4 = 0
175902: 01                       fallthrough
      :                          @12042
175903: ab 8a e7                 jump @12037 if a3 != a1
      :                          @12043
175906: 28 61 33                 jump @12868
      :                          @12044 [@dyn 1307]
175909: 3a 08 78 12 03           a1 = u64 [0x31278]
175914: 97 89 0d                 a2 = a1 << 0xd
175917: d3 98 08                 a1 = a1 ^ a2
175920: 98 89 07                 a2 = a1 >> 0x7
175923: d3 98 08                 a1 = a1 ^ a2
175926: 97 89 11                 a2 = a1 << 0x11
175929: d3 98 08                 a1 = a1 ^ a2
175932: 3a 09 60 11 03           a2 = u64 [0x31160]
175937: 3a 0a a0 11 03           a3 = u64 [0x311a0]
175942: 3e 08 78 12 03           u64 [0x31278] = a1
175947: ca 98 07                 a0 = a1 * a2
175950: d6 a7 08                 a1 = a0 mulhu a3
175953: 98 88 0c                 a1 = a1 >> 0xc
175956: 96 88 41 0d 03           a1 = a1 * 0x30d41
175961: 95 77 60 79 fe           a0 = a0 + 0xfffffffffffe7960
175966: bf 87 07                 i32 a0 = a0 - a1
175969: 7a 17 c8 01              u32 [sp + 0x1c8] = a0
175973: 95 11 f0                 sp = sp + 0xfffffffffffffff0
175976: 7b 15 08                 u64 [sp + 0x8] = s0
175979: 7b 16                    u64 [sp] = s1
175981: 83 78                    i32 a1 = a0 + 0
175983: 89 88                    a1 = a1 <s 0
175985: 33 0a 0f c9 00           a3 = 0xc90f
175990: 93 8a f1 36 ff           a3 = 0xffffffffffff36f1 if a1 == 0
175995: 33 0b 8b 64 ff           a4 = 0xffffffffffff648b
176000: 93 8b 75 9b 00           a4 = 0x9b75 if a1 == 0
176005: be 7a 02                 i32 t0 = a3 + a0
176008: 99 b8 01                 a1 = a4 >>a 0x1
176011: 89 2a                    a3 = t0 <s 0
176013: 33 07 b1 76              a0 = 0x76b1
176017: 93 a7 4f 89              a0 = 0xffffffffffff894f if a3 == 0
176021: 9a 8c                    a5 = -a1
176023: db a8 0c                 a5 = a1 if a3 != 0
176026: 83 c3 75 9b 00           i32 t1 = a5 + 0x9b75
176031: 33 0c 46 b2              a5 = 0xffffffffffffb246
176035: 93 ac ba 4d              a5 = 0x4dba if a3 == 0
176039: c8 cb 0b                 a4 = a4 + a5
176042: be 72 04                 i32 t2 = t0 + a0
176045: 8b 38 02                 i32 a1 = t1 >> 0x2
176048: 99 ba 02                 a3 = a4 >>a 0x2
176051: 89 4c                    a5 = t2 <s 0
176053: 33 09 b6 3e              a2 = 0x3eb6
176057: 93 c9 4a c1              a2 = 0xffffffffffffc14a if a5 == 0
176061: 9a a7                    a0 = -a3
176063: db ca 07                 a0 = a3 if a5 != 0
176066: be 73 02                 i32 t0 = t1 + a0
176069: 9a 8a                    a3 = -a1
176071: da c8 0a                 a3 = a1 if a5 == 0
176074: c8 ba 0a                 a3 = a3 + a4
176077: be 94 04                 i32 t2 = t2 + a2
176080: 8b 29 03                 i32 a2 = t0 >> 0x3
176083: 99 ab 03                 a4 = a3 >>a 0x3
176086: 89 4c                    a5 = t2 <s 0
176088: 33 07 d9 1f              a0 = 0x1fd9
176092: 93 c7 27 e0              a0 = 0xffffffffffffe027 if a5 == 0
176096: 9a b8                    a1 = -a4
176098: db cb 08                 a1 = a4 if a5 != 0
176101: c8 28 08                 a1 = a1 + t0
176104: 9a 9b                    a4 = -a2
176106: da c9 0b                 a4 = a2 if a5 == 0
176109: be ba 0a                 i32 a3 = a3 + a4
176112: be 74 06                 i32 s1 = t2 + a0
176115: 8c 89 04                 i32 a2 = a1 >>a 0x4
176118: 8c ab 04                 i32 a4 = a3 >>a 0x4
176121: 89 6c                    a5 = s1 <s 0
176123: 33 02 00 f0              t0 = 0xfffffffffffff000
176127: 33 03 ff ef              t1 = 0xffffffffffffefff
176131: 33 04 00 10              t2 = 0x1000
176135: 33 05 01 10              s0 = 0x1001
176139: da c3 05                 s0 = t1 if a5 == 0
176142: 9a b7                    a0 = -a4
176144: db cb 07                 a0 = a4 if a5 != 0
176147: c8 87 07                 a0 = a0 + a1
176150: 9a 98                    a1 = -a2
176152: da c9 08                 a1 = a2 if a5 == 0
176155: be a8 08                 i32 a1 = a1 + a3
176158: be 65 05                 i32 s0 = s0 + s1
176161: 8c 79 05                 i32 a2 = a0 >>a 0x5
176164: 8c 8a 05                 i32 a3 = a1 >>a 0x5
176167: 89 5b                    a4 = s0 <s 0
176169: 33 06 01 08              s1 = 0x801
176173: 93 b6 ff f7              s1 = 0xfffffffffffff7ff if a4 == 0
176177: 9a ac                    a5 = -a3
176179: db ba 0c                 a5 = a3 if a4 != 0
176182: c8 c7 07                 a0 = a0 + a5
176185: 9a 9a                    a3 = -a2
176187: da b9 0a                 a3 = a2 if a4 == 0
176190: be a8 08                 i32 a1 = a1 + a3
176193: be 65 05                 i32 s0 = s0 + s1
176196: 8c 79 06                 i32 a2 = a0 >>a 0x6
176199: 8c 8a 06                 i32 a3 = a1 >>a 0x6
176202: 89 5b                    a4 = s0 <s 0
176204: 33 06 01 04              s1 = 0x401
176208: 93 b6 ff fb              s1 = 0xfffffffffffffbff if a4 == 0
176212: 9a ac                    a5 = -a3
176214: db ba 0c                 a5 = a3 if a4 != 0
176217: c8 c7 07                 a0 = a0 + a5
176220: 9a 9a                    a3 = -a2
176222: da b9 0a                 a3 = a2 if a4 == 0
176225: be a8 08                 i32 a1 = a1 + a3
176228: be 65 05                 i32 s0 = s0 + s1
176231: 8c 79 07                 i32 a2 = a0 >>a 0x7
176234: 8c 8a 07                 i32 a3 = a1 >>a 0x7
176237: 89 5b                    a4 = s0 <s 0
176239: 33 06 00 02              s1 = 0x200
176243: 93 b6 00 fe              s1 = 0xfffffffffffffe00 if a4 == 0
176247: 9a ac                    a5 = -a3
176249: db ba 0c                 a5 = a3 if a4 != 0
176252: c8 c7 07                 a0 = a0 + a5
176255: 9a 9a                    a3 = -a2
176257: da b9 0a                 a3 = a2 if a4 == 0
176260: be a8 08                 i32 a1 = a1 + a3
176263: be 65 05                 i32 s0 = s0 + s1
176266: 8c 79 08                 i32 a2 = a0 >>a 0x8
176269: 8c 8a 08                 i32 a3 = a1 >>a 0x8
176272: 89 5b                    a4 = s0 <s 0
176274: 33 06 00 01              s1 = 0x100
176278: 93 b6 00 ff              s1 = 0xffffffffffffff00 if a4 == 0
176282: 9a ac                    a5 = -a3
176284: db ba 0c                 a5 = a3 if a4 != 0
176287: c8 c7 07                 a0 = a0 + a5
176290: 9a 9a                    a3 = -a2
176292: da b9 0a                 a3 = a2 if a4 == 0
176295: be a8 08                 i32 a1 = a1 + a3
176298: be 65 05                 i32 s0 = s0 + s1
176301: 8c 79 09                 i32 a2 = a0 >>a 0x9
176304: 8c 8a 09                 i32 a3 = a1 >>a 0x9
176307: 89 5b                    a4 = s0 <s 0
176309: 33 06 80 00              s1 = 0x80
176313: 93 b6 80                 s1 = 0xffffffffffffff80 if a4 == 0
176316: 9a ac                    a5 = -a3
176318: db ba 0c                 a5 = a3 if a4 != 0
176321: c8 c7 07                 a0 = a0 + a5
176324: 9a 9a                    a3 = -a2
176326: da b9 0a                 a3 = a2 if a4 == 0
176329: be a8 08                 i32 a1 = a1 + a3
176332: be 65 05                 i32 s0 = s0 + s1
176335: 8c 79 0a                 i32 a2 = a0 >>a 0xa
176338: 8c 8a 0a                 i32 a3 = a1 >>a 0xa
176341: 89 5b                    a4 = s0 <s 0
176343: 33 06 40                 s1 = 0x40
176346: 93 b6 c0                 s1 = 0xffffffffffffffc0 if a4 == 0
176349: 9a ac                    a5 = -a3
176351: db ba 0c                 a5 = a3 if a4 != 0
176354: c8 c7 07                 a0 = a0 + a5
176357: 9a 9a                    a3 = -a2
176359: da b9 0a                 a3 = a2 if a4 == 0
176362: be a8 08                 i32 a1 = a1 + a3
176365: be 65 05                 i32 s0 = s0 + s1
176368: 8c 79 0b                 i32 a2 = a0 >>a 0xb
176371: 8c 8a 0b                 i32 a3 = a1 >>a 0xb
176374: 89 5b                    a4 = s0 <s 0
176376: 33 06 20                 s1 = 0x20
176379: 93 b6 e0                 s1 = 0xffffffffffffffe0 if a4 == 0
176382: 9a ac                    a5 = -a3
176384: db ba 0c                 a5 = a3 if a4 != 0
176387: c8 c7 07                 a0 = a0 + a5
176390: 9a 9a                    a3 = -a2
176392: da b9 0a                 a3 = a2 if a4 == 0
176395: be a8 08                 i32 a1 = a1 + a3
176398: be 65 05                 i32 s0 = s0 + s1
176401: 8c 79 0c                 i32 a2 = a0 >>a 0xc
176404: 8c 8a 0c                 i32 a3 = a1 >>a 0xc
176407: 89 5b                    a4 = s0 <s 0
176409: 33 06 10                 s1 = 0x10
176412: 93 b6 f0                 s1 = 0xfffffffffffffff0 if a4 == 0
176415: 9a ac                    a5 = -a3
176417: db ba 0c                 a5 = a3 if a4 != 0
176420: c8 c7 07                 a0 = a0 + a5
176423: 9a 9a                    a3 = -a2
176425: da b9 0a                 a3 = a2 if a4 == 0
176428: be a8 08                 i32 a1 = a1 + a3
176431: be 65 05                 i32 s0 = s0 + s1
176434: 8c 79 0d                 i32 a2 = a0 >>a 0xd
176437: 8c 8a 0d                 i32 a3 = a1 >>a 0xd
176440: 89 5b                    a4 = s0 <s 0
176442: 33 06 08                 s1 = 0x8
176445: 93 b6 f8                 s1 = 0xfffffffffffffff8 if a4 == 0
176448: 9a ac                    a5 = -a3
176450: db ba 0c                 a5 = a3 if a4 != 0
176453: c8 c7 07                 a0 = a0 + a5
176456: 9a 9a                    a3 = -a2
176458: da b9 0a                 a3 = a2 if a4 == 0
176461: be a8 08                 i32 a1 = a1 + a3
176464: be 65 05                 i32 s0 = s0 + s1
176467: 8c 79 0e                 i32 a2 = a0 >>a 0xe
176470: 8c 8a 0e                 i32 a3 = a1 >>a 0xe
176473: 89 5b                    a4 = s0 <s 0
176475: 33 06 04                 s1 = 0x4
176478: 93 b6 fc                 s1 = 0xfffffffffffffffc if a4 == 0
176481: 9a ac                    a5 = -a3
176483: db ba 0c                 a5 = a3 if a4 != 0
176486: c8 c7 07                 a0 = a0 + a5
176489: 9a 9a                    a3 = -a2
176491: da b9 0a                 a3 = a2 if a4 == 0
176494: be a8 08                 i32 a1 = a1 + a3
176497: be 65 05                 i32 s0 = s0 + s1
176500: 8c 79 0f                 i32 a2 = a0 >>a 0xf
176503: 8c 8a 0f                 i32 a3 = a1 >>a 0xf
176506: 89 5b                    a4 = s0 <s 0
176508: 9a ac                    a5 = -a3
176510: db ba 0c                 a5 = a3 if a4 != 0
176513: be c7 07                 i32 a0 = a0 + a5
176516: 9a 9a                    a3 = -a2
176518: da b9 0a                 a3 = a2 if a4 == 0
176521: be a8 08                 i32 a1 = a1 + a3
176524: 82 15 08                 s0 = u64 [sp + 0x8]
176527: 82 16                    s1 = u64 [sp]
176529: 95 11 10                 sp = sp + 0x10
176532: 7a 17 20 01              u32 [sp + 0x120] = a0
176536: 7a 18 e0 01              u32 [sp + 0x1e0] = a1
176540: 95 17 c8 01              a0 = sp + 0x1c8
176544: 7b 17 90 02              u64 [sp + 0x290] = a0
176548: 33 07 96 0c              a0 = 0xc96
176552: 7b 17 98 02              u64 [sp + 0x298] = a0
176556: 95 18 20 01              a1 = sp + 0x120
176560: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
176564: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
176568: 95 18 e0 01              a1 = sp + 0x1e0
176572: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
176576: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
176580: 33 07 18 29 01           a0 = 0x12918
176585: 7b 17 38 02              u64 [sp + 0x238] = a0
176589: 49 21 40 02 03           u64 [sp + 576] = 0x3
176594: 49 21 58 02              u64 [sp + 600] = 0
176598: 95 18 90 02              a1 = sp + 0x290
176602: 7b 18 48 02              u64 [sp + 0x248] = a1
176606: 49 21 50 02 03           u64 [sp + 592] = 0x3
176611: 95 17 08 02              a0 = sp + 0x208
176615: 95 18 38 02              a1 = sp + 0x238
176619: 50 20 38 0a 0f 9e fd     ra = 2616, jump @1503
      :                          @12045 [@dyn 1308]
176626: 82 16 10 02              s1 = u64 [sp + 0x210]
176630: 82 1b 18 02              a4 = u64 [sp + 0x218]
176634: 82 17 08 02              a0 = u64 [sp + 0x208]
176638: 7b 17 70                 u64 [sp + 0x70] = a0
176641: 33 07 02                 a0 = 0x2
176644: 33 08                    a1 = 0
176646: 33 09                    a2 = 0
176648: 64 6a                    a3 = s1
176650: 33 00 3a 0a              ra = 0xa3a
176654: 0a 64                    ecalli 100 // 'log'
176656: 01                       fallthrough
      :                          @12046 [@dyn 1309]
176657: 82 1c 70                 a5 = u64 [sp + 0x70]
176660: 82 17 68                 a0 = u64 [sp + 0x68]
176663: c8 c7 07                 a0 = a0 + a5
176666: 55 37 00 00 ff 09        jump @12048 if a0 >=u 4294901760
      :                          @12047
176672: 28 63 30                 jump @12868
      :                          @12048
176675: 33 07 c0 22 03           a0 = 0x322c0
176680: 95 77 00 00 01           a0 = a0 + 0x10000
176685: 01                       fallthrough
      :                          @12049
176686: 82 78                    a1 = u64 [a0]
176688: c9 87 09                 a2 = a0 - a1
176691: aa 69 06                 jump @12051 if a2 == s1
      :                          @12050
176694: 28 4d 30                 jump @12868
      :                          @12051
176697: c9 c8 09                 a2 = a1 - a5
176700: 01                       fallthrough
      :                          @12052
176701: 82 7a                    a3 = u64 [a0]
176703: ab 8a ef                 jump @12049 if a3 != a1
      :                          @12053
176706: 7b 79                    u64 [a0] = a2
176708: 33 0b                    a4 = 0
176710: 01                       fallthrough
      :                          @12054
176711: ab 8a e7                 jump @12049 if a3 != a1
      :                          @12055
176714: 28 39 30                 jump @12868
      :                          @12056 [@dyn 1310]
176717: 3a 08 78 12 03           a1 = u64 [0x31278]
176722: 97 89 0d                 a2 = a1 << 0xd
176725: d3 89 09                 a2 = a2 ^ a1
176728: 98 9a 07                 a3 = a2 >> 0x7
176731: 3a 08 60 11 03           a1 = u64 [0x31160]
176736: d3 a9 09                 a2 = a2 ^ a3
176739: 97 9a 11                 a3 = a2 << 0x11
176742: d3 a9 09                 a2 = a2 ^ a3
176745: ca 89 0a                 a3 = a2 * a1
176748: 3a 0b 98 11 03           a4 = u64 [0x31198]
176753: 3e 09 78 12 03           u64 [0x31278] = a2
176758: 98 a9 04                 a2 = a3 >> 0x4
176761: d6 b9 09                 a2 = a2 mulhu a4
176764: 33 02 d0 07              t0 = 0x7d0
176768: ca 29 09                 a2 = a2 * t0
176771: bf 9a 0a                 i32 a3 = a3 - a2
176774: 97 aa 10                 a3 = a3 << 0x10
176777: 3a 06 78 12 03           s1 = u64 [0x31278]
176782: 33 0c 00 00 18 fc        a5 = 0xfffffffffc180000
176788: be ca 09                 i32 a2 = a3 + a5
176791: 97 6a 0d                 a3 = s1 << 0xd
176794: d3 a6 06                 s1 = s1 ^ a3
176797: 98 6a 07                 a3 = s1 >> 0x7
176800: d3 a6 06                 s1 = s1 ^ a3
176803: 97 6a 11                 a3 = s1 << 0x11
176806: d3 6a 0a                 a3 = a3 ^ s1
176809: ca 8a 08                 a1 = a3 * a1
176812: 3e 0a 78 12 03           u64 [0x31278] = a3
176817: 98 87 04                 a0 = a1 >> 0x4
176820: d6 b7 07                 a0 = a0 mulhu a4
176823: ca 27 07                 a0 = a0 * t0
176826: bf 78 08                 i32 a1 = a1 - a0
176829: 97 87 10                 a0 = a1 << 0x10
176832: be c7 07                 i32 a0 = a0 + a5
176835: ca 97 08                 a1 = a0 * a2
176838: 98 88 10                 a1 = a1 >> 0x10
176841: 7a 18 20 01              u32 [sp + 0x120] = a1
176845: 51 07 0a                 jump @12058 if a0 == 0
      :                          @12057
176848: 97 99 10                 a2 = a2 << 0x10
176851: cc 79 07                 a0 = a2 /s a0
176854: 01                       fallthrough
      :                          @12058
176855: 7a 17 e0 01              u32 [sp + 0x1e0] = a0
176859: 95 17 20 01              a0 = sp + 0x120
176863: 7b 17 38 02              u64 [sp + 0x238] = a0
176867: 33 07 96 0c              a0 = 0xc96
176871: 7b 17 40 02              u64 [sp + 0x240] = a0
176875: 95 18 e0 01              a1 = sp + 0x1e0
176879: 7b 18 48 02              u64 [sp + 0x248] = a1
176883: 7b 17 50 02              u64 [sp + 0x250] = a0
176887: 33 07 58 29 01           a0 = 0x12958
176892: 7b 17 90 02              u64 [sp + 0x290] = a0
176896: 49 21 98 02 02           u64 [sp + 664] = 0x2
176901: 49 21 b0 02              u64 [sp + 688] = 0
176905: 95 18 38 02              a1 = sp + 0x238
176909: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
176913: 49 21 a8 02 02           u64 [sp + 680] = 0x2
176918: 95 17 08 02              a0 = sp + 0x208
176922: 95 18 90 02              a1 = sp + 0x290
176926: 50 20 3e 0a dc 9c fd     ra = 2622, jump @1503
      :                          @12059 [@dyn 1311]
176933: 82 16 10 02              s1 = u64 [sp + 0x210]
176937: 82 1b 18 02              a4 = u64 [sp + 0x218]
176941: 82 17 08 02              a0 = u64 [sp + 0x208]
176945: 7b 17 70                 u64 [sp + 0x70] = a0
176948: 33 07 02                 a0 = 0x2
176951: 33 08                    a1 = 0
176953: 33 09                    a2 = 0
176955: 64 6a                    a3 = s1
176957: 33 00 40 0a              ra = 0xa40
176961: 0a 64                    ecalli 100 // 'log'
176963: 01                       fallthrough
      :                          @12060 [@dyn 1312]
176964: 82 1c 70                 a5 = u64 [sp + 0x70]
176967: 82 17 68                 a0 = u64 [sp + 0x68]
176970: c8 c7 07                 a0 = a0 + a5
176973: 55 37 00 00 ff 09        jump @12062 if a0 >=u 4294901760
      :                          @12061
176979: 28 30 2f                 jump @12868
      :                          @12062
176982: 33 07 c0 22 03           a0 = 0x322c0
176987: 95 77 00 00 01           a0 = a0 + 0x10000
176992: 01                       fallthrough
      :                          @12063
176993: 82 78                    a1 = u64 [a0]
176995: c9 87 09                 a2 = a0 - a1
176998: aa 69 06                 jump @12065 if a2 == s1
      :                          @12064
177001: 28 1a 2f                 jump @12868
      :                          @12065
177004: c9 c8 09                 a2 = a1 - a5
177007: 01                       fallthrough
      :                          @12066
177008: 82 7a                    a3 = u64 [a0]
177010: ab 8a ef                 jump @12063 if a3 != a1
      :                          @12067
177013: 7b 79                    u64 [a0] = a2
177015: 33 0b                    a4 = 0
177017: 01                       fallthrough
      :                          @12068
177018: ab 8a e7                 jump @12063 if a3 != a1
      :                          @12069
177021: 28 06 2f                 jump @12868
      :                          @12070 [@dyn 1313]
177024: 3a 07 78 12 03           a0 = u64 [0x31278]
177029: 97 78 0d                 a1 = a0 << 0xd
177032: d3 87 07                 a0 = a0 ^ a1
177035: 98 78 07                 a1 = a0 >> 0x7
177038: d3 87 07                 a0 = a0 ^ a1
177041: 97 78 11                 a1 = a0 << 0x11
177044: d3 87 07                 a0 = a0 ^ a1
177047: 3e 07 78 12 03           u64 [0x31278] = a0
177052: 87 77 79 c8 75           i32 a0 = a0 * 0x75c879
177057: 83 77 5f f3 6e 3c        i32 a0 = a0 + 0x3c6ef35f
177063: 7a 17 e0 01              u32 [sp + 0x1e0] = a0
177067: 95 17 e0 01              a0 = sp + 0x1e0
177071: 7b 17 08 02              u64 [sp + 0x208] = a0
177075: 33 07 62 0c              a0 = 0xc62
177079: 7b 17 10 02              u64 [sp + 0x210] = a0
177083: 33 07 88 29 01           a0 = 0x12988
177088: 7b 17 90 02              u64 [sp + 0x290] = a0
177092: 49 21 98 02 01           u64 [sp + 664] = 0x1
177097: 49 21 b0 02              u64 [sp + 688] = 0
177101: 95 18 08 02              a1 = sp + 0x208
177105: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
177109: 49 21 a8 02 01           u64 [sp + 680] = 0x1
177114: 95 17 38 02              a0 = sp + 0x238
177118: 95 18 90 02              a1 = sp + 0x290
177122: 50 20 44 0a 18 9c fd     ra = 2628, jump @1503
      :                          @12071 [@dyn 1314]
177129: 82 16 40 02              s1 = u64 [sp + 0x240]
177133: 82 1b 48 02              a4 = u64 [sp + 0x248]
177137: 82 17 38 02              a0 = u64 [sp + 0x238]
177141: 7b 17 70                 u64 [sp + 0x70] = a0
177144: 33 07 02                 a0 = 0x2
177147: 33 08                    a1 = 0
177149: 33 09                    a2 = 0
177151: 64 6a                    a3 = s1
177153: 33 00 46 0a              ra = 0xa46
177157: 0a 64                    ecalli 100 // 'log'
177159: 01                       fallthrough
      :                          @12072 [@dyn 1315]
177160: 82 1c 70                 a5 = u64 [sp + 0x70]
177163: 82 17 68                 a0 = u64 [sp + 0x68]
177166: c8 c7 07                 a0 = a0 + a5
177169: 53 37 00 00 ff 25        jump @12078 if a0 <u 4294901760
      :                          @12073
177175: 33 07 c0 22 03           a0 = 0x322c0
177180: 95 77 00 00 01           a0 = a0 + 0x10000
177185: 01                       fallthrough
      :                          @12074
177186: 82 78                    a1 = u64 [a0]
177188: c9 87 09                 a2 = a0 - a1
177191: ab 69 0f                 jump @12078 if a2 != s1
      :                          @12075
177194: c9 c8 09                 a2 = a1 - a5
177197: 01                       fallthrough
      :                          @12076
177198: 82 7a                    a3 = u64 [a0]
177200: ab 8a f2                 jump @12074 if a3 != a1
      :                          @12077
177203: 7b 79                    u64 [a0] = a2
177205: 01                       fallthrough
      :                          @12078
177206: 3a 07 78 12 03           a0 = u64 [0x31278]
177211: 3a 0a 60 11 03           a3 = u64 [0x31160]
177216: 97 78 0d                 a1 = a0 << 0xd
177219: d3 87 07                 a0 = a0 ^ a1
177222: 98 78 07                 a1 = a0 >> 0x7
177225: d3 87 07                 a0 = a0 ^ a1
177228: 97 78 11                 a1 = a0 << 0x11
177231: d3 87 07                 a0 = a0 ^ a1
177234: 3a 08 90 11 03           a1 = u64 [0x31190]
177239: 3e 07 78 12 03           u64 [0x31278] = a0
177244: 7b 1a 70                 u64 [sp + 0x70] = a3
177247: ca a7 09                 a2 = a0 * a3
177250: ca 87 07                 a0 = a0 * a1
177253: d3 97 07                 a0 = a0 ^ a2
177256: 98 78 07                 a1 = a0 >> 0x7
177259: d3 87 07                 a0 = a0 ^ a1
177262: 97 78 11                 a1 = a0 << 0x11
177265: d3 87 07                 a0 = a0 ^ a1
177268: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
177272: 95 17 e0 01              a0 = sp + 0x1e0
177276: 7b 17 08 02              u64 [sp + 0x208] = a0
177280: 33 07 2c 0c              a0 = 0xc2c
177284: 7b 17 10 02              u64 [sp + 0x210] = a0
177288: 33 07 a8 29 01           a0 = 0x129a8
177293: 7b 17 90 02              u64 [sp + 0x290] = a0
177297: 49 21 98 02 01           u64 [sp + 664] = 0x1
177302: 49 21 b0 02              u64 [sp + 688] = 0
177306: 95 18 08 02              a1 = sp + 0x208
177310: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
177314: 49 21 a8 02 01           u64 [sp + 680] = 0x1
177319: 95 17 38 02              a0 = sp + 0x238
177323: 95 18 90 02              a1 = sp + 0x290
177327: 50 20 48 0a 4b 9b fd     ra = 2632, jump @1503
      :                          @12079 [@dyn 1316]
177334: 82 16 40 02              s1 = u64 [sp + 0x240]
177338: 82 1b 48 02              a4 = u64 [sp + 0x248]
177342: 82 17 38 02              a0 = u64 [sp + 0x238]
177346: 7b 17 60                 u64 [sp + 0x60] = a0
177349: 33 07 02                 a0 = 0x2
177352: 33 08                    a1 = 0
177354: 33 09                    a2 = 0
177356: 64 6a                    a3 = s1
177358: 33 00 4a 0a              ra = 0xa4a
177362: 0a 64                    ecalli 100 // 'log'
177364: 01                       fallthrough
      :                          @12080 [@dyn 1317]
177365: 82 1c 60                 a5 = u64 [sp + 0x60]
177368: 82 17 68                 a0 = u64 [sp + 0x68]
177371: c8 c7 07                 a0 = a0 + a5
177374: 53 37 00 00 ff 25        jump @12086 if a0 <u 4294901760
      :                          @12081
177380: 33 07 c0 22 03           a0 = 0x322c0
177385: 95 77 00 00 01           a0 = a0 + 0x10000
177390: 01                       fallthrough
      :                          @12082
177391: 82 78                    a1 = u64 [a0]
177393: c9 87 09                 a2 = a0 - a1
177396: ab 69 0f                 jump @12086 if a2 != s1
      :                          @12083
177399: c9 c8 09                 a2 = a1 - a5
177402: 01                       fallthrough
      :                          @12084
177403: 82 7a                    a3 = u64 [a0]
177405: ab 8a f2                 jump @12082 if a3 != a1
      :                          @12085
177408: 7b 79                    u64 [a0] = a2
177410: 01                       fallthrough
      :                          @12086
177411: 3a 07 78 12 03           a0 = u64 [0x31278]
177416: 97 78 0d                 a1 = a0 << 0xd
177419: d3 87 07                 a0 = a0 ^ a1
177422: 98 78 07                 a1 = a0 >> 0x7
177425: d3 87 07                 a0 = a0 ^ a1
177428: 97 78 11                 a1 = a0 << 0x11
177431: d3 87 07                 a0 = a0 ^ a1
177434: 3e 07 78 12 03           u64 [0x31278] = a0
177439: 3a 08 78 12 03           a1 = u64 [0x31278]
177444: 82 19 70                 a2 = u64 [sp + 0x70]
177447: ca 97 07                 a0 = a0 * a2
177450: 97 89 0d                 a2 = a1 << 0xd
177453: d3 98 08                 a1 = a1 ^ a2
177456: 98 89 07                 a2 = a1 >> 0x7
177459: d3 98 08                 a1 = a1 ^ a2
177462: 97 89 11                 a2 = a1 << 0x11
177465: d3 98 08                 a1 = a1 ^ a2
177468: 3e 08 78 12 03           u64 [0x31278] = a1
177473: 98 78 2d                 a1 = a0 >> 0x2d
177476: 98 79 1b                 a2 = a0 >> 0x1b
177479: d3 98 08                 a1 = a1 ^ a2
177482: 98 77 3b                 a0 = a0 >> 0x3b
177485: df 78 07                 i32 a0 = a1 >>r a0
177488: 7a 17 e0 01              u32 [sp + 0x1e0] = a0
177492: 95 17 e0 01              a0 = sp + 0x1e0
177496: 7b 17 08 02              u64 [sp + 0x208] = a0
177500: 33 07 62 0c              a0 = 0xc62
177504: 7b 17 70                 u64 [sp + 0x70] = a0
177507: 7b 17 10 02              u64 [sp + 0x210] = a0
177511: 33 07 c8 29 01           a0 = 0x129c8
177516: 7b 17 90 02              u64 [sp + 0x290] = a0
177520: 49 21 98 02 01           u64 [sp + 664] = 0x1
177525: 49 21 b0 02              u64 [sp + 688] = 0
177529: 95 18 08 02              a1 = sp + 0x208
177533: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
177537: 49 21 a8 02 01           u64 [sp + 680] = 0x1
177542: 95 17 38 02              a0 = sp + 0x238
177546: 95 18 90 02              a1 = sp + 0x290
177550: 50 20 4c 0a 6c 9a fd     ra = 2636, jump @1503
      :                          @12087 [@dyn 1318]
177557: 82 16 40 02              s1 = u64 [sp + 0x240]
177561: 82 1b 48 02              a4 = u64 [sp + 0x248]
177565: 82 17 38 02              a0 = u64 [sp + 0x238]
177569: 7b 17 60                 u64 [sp + 0x60] = a0
177572: 33 07 02                 a0 = 0x2
177575: 33 08                    a1 = 0
177577: 33 09                    a2 = 0
177579: 64 6a                    a3 = s1
177581: 33 00 4e 0a              ra = 0xa4e
177585: 0a 64                    ecalli 100 // 'log'
177587: 01                       fallthrough
      :                          @12088 [@dyn 1319]
177588: 82 1c 60                 a5 = u64 [sp + 0x60]
177591: 82 17 68                 a0 = u64 [sp + 0x68]
177594: c8 c7 07                 a0 = a0 + a5
177597: 53 37 00 00 ff 25        jump @12094 if a0 <u 4294901760
      :                          @12089
177603: 33 07 c0 22 03           a0 = 0x322c0
177608: 95 77 00 00 01           a0 = a0 + 0x10000
177613: 01                       fallthrough
      :                          @12090
177614: 82 78                    a1 = u64 [a0]
177616: c9 87 09                 a2 = a0 - a1
177619: ab 69 0f                 jump @12094 if a2 != s1
      :                          @12091
177622: c9 c8 09                 a2 = a1 - a5
177625: 01                       fallthrough
      :                          @12092
177626: 82 7a                    a3 = u64 [a0]
177628: ab 8a f2                 jump @12090 if a3 != a1
      :                          @12093
177631: 7b 79                    u64 [a0] = a2
177633: 01                       fallthrough
      :                          @12094
177634: 3a 07 78 12 03           a0 = u64 [0x31278]
177639: 97 78 0d                 a1 = a0 << 0xd
177642: d3 87 07                 a0 = a0 ^ a1
177645: 98 78 07                 a1 = a0 >> 0x7
177648: d3 87 07                 a0 = a0 ^ a1
177651: 97 78 11                 a1 = a0 << 0x11
177654: d3 87 07                 a0 = a0 ^ a1
177657: 3e 07 78 12 03           u64 [0x31278] = a0
177662: 3a 08 78 12 03           a1 = u64 [0x31278]
177667: 97 89 0d                 a2 = a1 << 0xd
177670: d3 98 08                 a1 = a1 ^ a2
177673: 98 89 07                 a2 = a1 >> 0x7
177676: d3 98 08                 a1 = a1 ^ a2
177679: 97 89 11                 a2 = a1 << 0x11
177682: d3 98 08                 a1 = a1 ^ a2
177685: 87 89 1d dd 6c 4f        i32 a2 = a1 * 0x4f6cdd1d
177691: 3e 08 78 12 03           u64 [0x31278] = a1
177696: 96 77 fd 79 6d ef        a0 = a0 * 0xffffffffef6d79fd
177702: c8 97 07                 a0 = a0 + a2
177705: 7a 17 e0 01              u32 [sp + 0x1e0] = a0
177709: 95 17 e0 01              a0 = sp + 0x1e0
177713: 7b 17 08 02              u64 [sp + 0x208] = a0
177717: 82 17 70                 a0 = u64 [sp + 0x70]
177720: 7b 17 10 02              u64 [sp + 0x210] = a0
177724: 33 07 e8 29 01           a0 = 0x129e8
177729: 7b 17 90 02              u64 [sp + 0x290] = a0
177733: 49 21 98 02 01           u64 [sp + 664] = 0x1
177738: 49 21 b0 02              u64 [sp + 688] = 0
177742: 95 18 08 02              a1 = sp + 0x208
177746: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
177750: 49 21 a8 02 01           u64 [sp + 680] = 0x1
177755: 95 17 38 02              a0 = sp + 0x238
177759: 95 18 90 02              a1 = sp + 0x290
177763: 50 20 50 0a 97 99 fd     ra = 2640, jump @1503
      :                          @12095 [@dyn 1320]
177770: 82 16 40 02              s1 = u64 [sp + 0x240]
177774: 82 1b 48 02              a4 = u64 [sp + 0x248]
177778: 82 17 38 02              a0 = u64 [sp + 0x238]
177782: 7b 17 70                 u64 [sp + 0x70] = a0
177785: 33 07 02                 a0 = 0x2
177788: 33 08                    a1 = 0
177790: 33 09                    a2 = 0
177792: 64 6a                    a3 = s1
177794: 33 00 52 0a              ra = 0xa52
177798: 0a 64                    ecalli 100 // 'log'
177800: 01                       fallthrough
      :                          @12096 [@dyn 1321]
177801: 82 1c 70                 a5 = u64 [sp + 0x70]
177804: 82 17 68                 a0 = u64 [sp + 0x68]
177807: c8 c7 07                 a0 = a0 + a5
177810: 55 37 00 00 ff 09        jump @12098 if a0 >=u 4294901760
      :                          @12097
177816: 28 eb 2b                 jump @12868
      :                          @12098
177819: 33 07 c0 22 03           a0 = 0x322c0
177824: 95 77 00 00 01           a0 = a0 + 0x10000
177829: 01                       fallthrough
      :                          @12099
177830: 82 78                    a1 = u64 [a0]
177832: c9 87 09                 a2 = a0 - a1
177835: aa 69 06                 jump @12101 if a2 == s1
      :                          @12100
177838: 28 d5 2b                 jump @12868
      :                          @12101
177841: c9 c8 09                 a2 = a1 - a5
177844: 01                       fallthrough
      :                          @12102
177845: 82 7a                    a3 = u64 [a0]
177847: ab 8a ef                 jump @12099 if a3 != a1
      :                          @12103
177850: 7b 79                    u64 [a0] = a2
177852: 33 0b                    a4 = 0
177854: 01                       fallthrough
      :                          @12104
177855: ab 8a e7                 jump @12099 if a3 != a1
      :                          @12105
177858: 28 c1 2b                 jump @12868
      :                          @12106 [@dyn 1322]
177861: 3a 07 78 12 03           a0 = u64 [0x31278]
177866: 97 78 0d                 a1 = a0 << 0xd
177869: d3 87 07                 a0 = a0 ^ a1
177872: 98 78 07                 a1 = a0 >> 0x7
177875: d3 87 07                 a0 = a0 ^ a1
177878: 97 78 11                 a1 = a0 << 0x11
177881: d3 78 08                 a1 = a1 ^ a0
177884: 96 77 1d                 a0 = a0 * 0x1d
177887: 3e 08 78 12 03           u64 [0x31278] = a1
177892: 84 76 1f                 s1 = a0 & 0x1f
177895: 64 67                    a0 = s1
177897: 50 20 56 0a c2 9b fd     ra = 2646, jump @1566
      :                          @12107 [@dyn 1323]
177904: 7b 17 20 01              u64 [sp + 0x120] = a0
177908: 7b 18 28 01              u64 [sp + 0x128] = a1
177912: 49 21 30 01              u64 [sp + 304] = 0
177916: 52 06 06                 jump @12109 if s1 != 0
      :                          @12108
177919: 28 11 34                 jump @13018
      :                          @12109
177922: 64 6b                    a4 = s1
177924: 28 1e                    jump @12112
      :                          @12110
177926: 82 1a 28 01              a3 = u64 [sp + 0x128]
177930: 96 67 1d                 a0 = s1 * 0x1d
177933: c8 8a 09                 a2 = a3 + a1
177936: 78 97                    u8 [a2] = a0
177938: 95 86 01                 s1 = a1 + 0x1
177941: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
177944: 7b 16 30 01              u64 [sp + 0x130] = s1
177948: 52 0b 06                 jump @12112 if a4 != 0
      :                          @12111
177951: 28 f4 33                 jump @13019
      :                          @12112
177954: 3a 07 78 12 03           a0 = u64 [0x31278]
177959: 97 78 0d                 a1 = a0 << 0xd
177962: d3 87 07                 a0 = a0 ^ a1
177965: 98 76 07                 s1 = a0 >> 0x7
177968: d3 76 06                 s1 = s1 ^ a0
177971: 97 67 11                 a0 = s1 << 0x11
177974: d3 67 07                 a0 = a0 ^ s1
177977: 3e 07 78 12 03           u64 [0x31278] = a0
177982: 82 18 30 01              a1 = u64 [sp + 0x130]
177986: 82 17 20 01              a0 = u64 [sp + 0x120]
177990: ab 78 c0                 jump @12110 if a1 != a0
      :                          @12113
177993: 95 17 20 01              a0 = sp + 0x120
177997: 7b 1b 70                 u64 [sp + 0x70] = a4
178000: 50 20 58 0a 72 9d fd     ra = 2648, jump @1617
      :                          @12114 [@dyn 1324]
178007: 82 1b 70                 a4 = u64 [sp + 0x70]
178010: 82 18 30 01              a1 = u64 [sp + 0x130]
178014: 28 a8                    jump @12110
      :                          @12115 [@dyn 1325]
178016: 3a 08 78 12 03           a1 = u64 [0x31278]
178021: 97 89 0d                 a2 = a1 << 0xd
178024: d3 98 08                 a1 = a1 ^ a2
178027: 98 89 07                 a2 = a1 >> 0x7
178030: d3 98 08                 a1 = a1 ^ a2
178033: 97 89 11                 a2 = a1 << 0x11
178036: d3 98 08                 a1 = a1 ^ a2
178039: 3a 09 60 11 03           a2 = u64 [0x31160]
178044: 3a 0a 88 11 03           a3 = u64 [0x31188]
178049: 3e 08 78 12 03           u64 [0x31278] = a1
178054: ca 98 07                 a0 = a1 * a2
178057: 98 78 05                 a1 = a0 >> 0x5
178060: d6 a8 08                 a1 = a1 mulhu a3
178063: 98 88 07                 a1 = a1 >> 0x7
178066: 96 88 a0 86 01           a1 = a1 * 0x186a0
178071: c9 87 07                 a0 = a0 - a1
178074: 95 77 01                 a0 = a0 + 0x1
178077: 7b 17 20 01              u64 [sp + 0x120] = a0
178081: 50 20 5c 0a e3 de fd     ra = 2652, jump @2621
      :                          @12116 [@dyn 1326]
178088: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
178092: 95 17 20 01              a0 = sp + 0x120
178096: 7b 17 38 02              u64 [sp + 0x238] = a0
178100: 33 07 2c 0c              a0 = 0xc2c
178104: 7b 17 40 02              u64 [sp + 0x240] = a0
178108: 95 18 e0 01              a1 = sp + 0x1e0
178112: 7b 18 48 02              u64 [sp + 0x248] = a1
178116: 7b 17 50 02              u64 [sp + 0x250] = a0
178120: 33 07 88 2a 01           a0 = 0x12a88
178125: 7b 17 90 02              u64 [sp + 0x290] = a0
178129: 49 21 98 02 02           u64 [sp + 664] = 0x2
178134: 49 21 b0 02              u64 [sp + 688] = 0
178138: 95 18 38 02              a1 = sp + 0x238
178142: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
178146: 49 21 a8 02 02           u64 [sp + 680] = 0x2
178151: 95 17 08 02              a0 = sp + 0x208
178155: 95 18 90 02              a1 = sp + 0x290
178159: 50 20 5e 0a 0b 98 fd     ra = 2654, jump @1503
      :                          @12117 [@dyn 1327]
178166: 82 16 10 02              s1 = u64 [sp + 0x210]
178170: 82 1b 18 02              a4 = u64 [sp + 0x218]
178174: 82 17 08 02              a0 = u64 [sp + 0x208]
178178: 7b 17 70                 u64 [sp + 0x70] = a0
178181: 33 07 02                 a0 = 0x2
178184: 33 08                    a1 = 0
178186: 33 09                    a2 = 0
178188: 64 6a                    a3 = s1
178190: 33 00 60 0a              ra = 0xa60
178194: 0a 64                    ecalli 100 // 'log'
178196: 01                       fallthrough
      :                          @12118 [@dyn 1328]
178197: 82 1c 70                 a5 = u64 [sp + 0x70]
178200: 82 17 68                 a0 = u64 [sp + 0x68]
178203: c8 c7 07                 a0 = a0 + a5
178206: 55 37 00 00 ff 09        jump @12120 if a0 >=u 4294901760
      :                          @12119
178212: 28 5f 2a                 jump @12868
      :                          @12120
178215: 33 07 c0 22 03           a0 = 0x322c0
178220: 95 77 00 00 01           a0 = a0 + 0x10000
178225: 01                       fallthrough
      :                          @12121
178226: 82 78                    a1 = u64 [a0]
178228: c9 87 09                 a2 = a0 - a1
178231: aa 69 06                 jump @12123 if a2 == s1
      :                          @12122
178234: 28 49 2a                 jump @12868
      :                          @12123
178237: c9 c8 09                 a2 = a1 - a5
178240: 01                       fallthrough
      :                          @12124
178241: 82 7a                    a3 = u64 [a0]
178243: ab 8a ef                 jump @12121 if a3 != a1
      :                          @12125
178246: 7b 79                    u64 [a0] = a2
178248: 33 0b                    a4 = 0
178250: 01                       fallthrough
      :                          @12126
178251: ab 8a e7                 jump @12121 if a3 != a1
      :                          @12127
178254: 28 35 2a                 jump @12868
      :                          @12128 [@dyn 1329]
178257: 3a 08 78 12 03           a1 = u64 [0x31278]
178262: 97 89 0d                 a2 = a1 << 0xd
178265: d3 98 08                 a1 = a1 ^ a2
178268: 98 89 07                 a2 = a1 >> 0x7
178271: d3 98 08                 a1 = a1 ^ a2
178274: 97 89 11                 a2 = a1 << 0x11
178277: d3 98 08                 a1 = a1 ^ a2
178280: 3a 09 60 11 03           a2 = u64 [0x31160]
178285: 3a 0a 68 11 03           a3 = u64 [0x31168]
178290: 3e 08 78 12 03           u64 [0x31278] = a1
178295: ca 98 07                 a0 = a1 * a2
178298: 98 78 03                 a1 = a0 >> 0x3
178301: d6 a8 08                 a1 = a1 mulhu a3
178304: 98 88 04                 a1 = a1 >> 0x4
178307: 96 88 e8 03              a1 = a1 * 0x3e8
178311: c9 87 07                 a0 = a0 - a1
178314: 95 76 01                 s1 = a0 + 0x1
178317: 7b 16 20 01              u64 [sp + 0x120] = s1
178321: 95 17 90 02              a0 = sp + 0x290
178325: 64 68                    a1 = s1
178327: 33 00 64 0a              ra = 0xa64
178331: 95 11 90                 sp = sp + 0xffffffffffffff90
178334: 7b 10 68                 u64 [sp + 0x68] = ra
178337: 7b 15 60                 u64 [sp + 0x60] = s0
178340: 7b 16 58                 u64 [sp + 0x58] = s1
178343: 95 89 01                 a2 = a1 + 0x1
178346: 33 06 c0 22 03           s1 = 0x322c0
178351: 33 02 00 00 01           t0 = 0x10000
178356: c8 26 06                 s1 = s1 + t0
178359: 28 30 de fd              jump @2638
      :                          @12129 [@dyn 1330]
178363: 82 12 90 02              t0 = u64 [sp + 0x290]
178367: 82 13 98 02              t1 = u64 [sp + 0x298]
178371: 82 17 a0 02              a0 = u64 [sp + 0x2a0]
178375: 82 1b a8 02              a4 = u64 [sp + 0x2a8]
178379: 82 1c b0 02              a5 = u64 [sp + 0x2b0]
178383: 82 18 b8 02              a1 = u64 [sp + 0x2b8]
178387: 82 19 c0 02              a2 = u64 [sp + 0x2c0]
178391: 82 1a c8 02              a3 = u64 [sp + 0x2c8]
178395: 82 14 d0 02              t2 = u64 [sp + 0x2d0]
178399: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
178403: ac 86 06                 jump @12131 if s1 <u a1
      :                          @12130
178406: 28 d0 3b                 jump @13269
      :                          @12131
178409: 7b 19 48                 u64 [sp + 0x48] = a2
178412: 7b 1b 58                 u64 [sp + 0x58] = a4
178415: 7b 12 60                 u64 [sp + 0x60] = t0
178418: 7b 13 70                 u64 [sp + 0x70] = t1
178421: ac 46 06                 jump @12133 if s1 <u t2
      :                          @12132
178424: 28 ca 3b                 jump @13279
      :                          @12133
178427: 97 67 03                 a0 = s1 << 0x3
178430: 7b 1c 40                 u64 [sp + 0x40] = a5
178433: c8 c7 07                 a0 = a0 + a5
178436: 97 66 02                 s1 = s1 << 0x2
178439: 7b 1a 38                 u64 [sp + 0x38] = a3
178442: c8 a6 06                 s1 = s1 + a3
178445: 95 18 20 01              a1 = sp + 0x120
178449: 7b 18 90 02              u64 [sp + 0x290] = a1
178453: 33 08 2c 0c              a1 = 0xc2c
178457: 7b 18 98 02              u64 [sp + 0x298] = a1
178461: 95 19 e0 01              a2 = sp + 0x1e0
178465: 7b 19 a0 02              u64 [sp + 0x2a0] = a2
178469: 7b 18 a8 02              u64 [sp + 0x2a8] = a1
178473: 7b 17 b0 02              u64 [sp + 0x2b0] = a0
178477: 7b 18 b8 02              u64 [sp + 0x2b8] = a1
178481: 7b 16 c0 02              u64 [sp + 0x2c0] = s1
178485: 33 07 96 0c              a0 = 0xc96
178489: 7b 17 c8 02              u64 [sp + 0x2c8] = a0
178493: 33 07 c0 2a 01           a0 = 0x12ac0
178498: 7b 17 38 02              u64 [sp + 0x238] = a0
178502: 49 21 40 02 04           u64 [sp + 576] = 0x4
178507: 49 21 58 02              u64 [sp + 600] = 0
178511: 95 18 90 02              a1 = sp + 0x290
178515: 7b 18 48 02              u64 [sp + 0x248] = a1
178519: 49 21 50 02 04           u64 [sp + 592] = 0x4
178524: 95 17 08 02              a0 = sp + 0x208
178528: 95 18 38 02              a1 = sp + 0x238
178532: 50 20 66 0a 96 96 fd     ra = 2662, jump @1503
      :                          @12134 [@dyn 1331]
178539: 82 16 10 02              s1 = u64 [sp + 0x210]
178543: 82 1b 18 02              a4 = u64 [sp + 0x218]
178547: 82 17 08 02              a0 = u64 [sp + 0x208]
178551: 7b 17 30                 u64 [sp + 0x30] = a0
178554: 33 07 02                 a0 = 0x2
178557: 33 08                    a1 = 0
178559: 33 09                    a2 = 0
178561: 64 6a                    a3 = s1
178563: 33 00 68 0a              ra = 0xa68
178567: 0a 64                    ecalli 100 // 'log'
178569: 01                       fallthrough
      :                          @12135 [@dyn 1332]
178570: 82 1c 30                 a5 = u64 [sp + 0x30]
178573: 82 17 68                 a0 = u64 [sp + 0x68]
178576: c8 c7 07                 a0 = a0 + a5
178579: 53 37 00 00 ff 25        jump @12141 if a0 <u 4294901760
      :                          @12136
178585: 33 07 c0 22 03           a0 = 0x322c0
178590: 95 77 00 00 01           a0 = a0 + 0x10000
178595: 01                       fallthrough
      :                          @12137
178596: 82 78                    a1 = u64 [a0]
178598: c9 87 09                 a2 = a0 - a1
178601: ab 69 0f                 jump @12141 if a2 != s1
      :                          @12138
178604: c9 c8 09                 a2 = a1 - a5
178607: 01                       fallthrough
      :                          @12139
178608: 82 7a                    a3 = u64 [a0]
178610: ab 8a f2                 jump @12137 if a3 != a1
      :                          @12140
178613: 7b 79                    u64 [a0] = a2
178615: 01                       fallthrough
      :                          @12141
178616: 82 13 58                 t1 = u64 [sp + 0x58]
178619: 82 16 38                 s1 = u64 [sp + 0x38]
178622: 82 18 48                 a1 = u64 [sp + 0x48]
178625: 51 08 2c                 jump @12148 if a1 == 0
      :                          @12142
178628: 56 28 00 40 29           jump @12148 if a1 >u 16384
      :                          @12143
178633: 97 87 02                 a0 = a1 << 0x2
178636: 33 08 c0 22 03           a1 = 0x322c0
178641: 95 88 00 00 01           a1 = a1 + 0x10000
178646: 01                       fallthrough
      :                          @12144
178647: 82 89                    a2 = u64 [a1]
178649: c9 98 0a                 a3 = a1 - a2
178652: ab 6a 11                 jump @12148 if a3 != s1
      :                          @12145
178655: c9 79 0a                 a3 = a2 - a0
178658: 01                       fallthrough
      :                          @12146
178659: 82 8b                    a4 = u64 [a1]
178661: ab 9b f2                 jump @12144 if a4 != a2
      :                          @12147
178664: 7b 8a                    u64 [a1] = a3
178666: 33 0c                    a5 = 0
178668: 01                       fallthrough
      :                          @12148
178669: 82 12 70                 t0 = u64 [sp + 0x70]
178672: 82 16 40                 s1 = u64 [sp + 0x40]
178675: 51 03 2c                 jump @12155 if t1 == 0
      :                          @12149
178678: 56 23 00 20 29           jump @12155 if t1 >u 8192
      :                          @12150
178683: 97 37 03                 a0 = t1 << 0x3
178686: 33 08 c0 22 03           a1 = 0x322c0
178691: 95 88 00 00 01           a1 = a1 + 0x10000
178696: 01                       fallthrough
      :                          @12151
178697: 82 89                    a2 = u64 [a1]
178699: c9 98 0a                 a3 = a1 - a2
178702: ab 6a 11                 jump @12155 if a3 != s1
      :                          @12152
178705: c9 79 0a                 a3 = a2 - a0
178708: 01                       fallthrough
      :                          @12153
178709: 82 8b                    a4 = u64 [a1]
178711: ab 9b f2                 jump @12151 if a4 != a2
      :                          @12154
178714: 7b 8a                    u64 [a1] = a3
178716: 33 0c                    a5 = 0
178718: 01                       fallthrough
      :                          @12155
178719: 82 18 60                 a1 = u64 [sp + 0x60]
178722: 52 08 06                 jump @12157 if a1 != 0
      :                          @12156
178725: 28 5e 28                 jump @12868
      :                          @12157
178728: 54 28 00 20 08           jump @12159 if a1 <=u 8192
      :                          @12158
178733: 28 56 28                 jump @12868
      :                          @12159
178736: 97 87 03                 a0 = a1 << 0x3
178739: 33 08 c0 22 03           a1 = 0x322c0
178744: 95 88 00 00 01           a1 = a1 + 0x10000
178749: 01                       fallthrough
      :                          @12160
178750: 82 89                    a2 = u64 [a1]
178752: c9 98 0a                 a3 = a1 - a2
178755: aa 2a 06                 jump @12162 if a3 == t0
      :                          @12161
178758: 28 3d 28                 jump @12868
      :                          @12162
178761: c9 79 0a                 a3 = a2 - a0
178764: 01                       fallthrough
      :                          @12163
178765: 82 8b                    a4 = u64 [a1]
178767: ab 9b ef                 jump @12160 if a4 != a2
      :                          @12164
178770: 7b 8a                    u64 [a1] = a3
178772: 33 0c                    a5 = 0
178774: 01                       fallthrough
      :                          @12165
178775: ab 9b e7                 jump @12160 if a4 != a2
      :                          @12166
178778: 28 29 28                 jump @12868
      :                          @12167 [@dyn 1333]
178781: 3a 08 78 12 03           a1 = u64 [0x31278]
178786: 97 89 0d                 a2 = a1 << 0xd
178789: d3 98 08                 a1 = a1 ^ a2
178792: 98 89 07                 a2 = a1 >> 0x7
178795: d3 98 08                 a1 = a1 ^ a2
178798: 97 89 11                 a2 = a1 << 0x11
178801: d3 98 08                 a1 = a1 ^ a2
178804: 3a 09 60 11 03           a2 = u64 [0x31160]
178809: 3a 0a 68 11 03           a3 = u64 [0x31168]
178814: 3e 08 78 12 03           u64 [0x31278] = a1
178819: ca 98 07                 a0 = a1 * a2
178822: 98 78 03                 a1 = a0 >> 0x3
178825: d6 a8 08                 a1 = a1 mulhu a3
178828: 98 88 04                 a1 = a1 >> 0x4
178831: 96 88 e8 03              a1 = a1 * 0x3e8
178835: c9 87 07                 a0 = a0 - a1
178838: 95 76 01                 s1 = a0 + 0x1
178841: 7b 16 20 01              u64 [sp + 0x120] = s1
178845: 95 17 e0 01              a0 = sp + 0x1e0
178849: 64 68                    a1 = s1
178851: 33 00 6c 0a              ra = 0xa6c
178855: 95 11 a8                 sp = sp + 0xffffffffffffffa8
178858: 7b 10 50                 u64 [sp + 0x50] = ra
178861: 7b 15 48                 u64 [sp + 0x48] = s0
178864: 7b 16 40                 u64 [sp + 0x40] = s1
178867: 95 86 01                 s1 = a1 + 0x1
178870: 33 09 c0 22 03           a2 = 0x322c0
178875: 33 02 00 00 01           t0 = 0x10000
178880: c8 29 09                 a2 = a2 + t0
178883: 28 84 df fd              jump @2714
      :                          @12168 [@dyn 1334]
178887: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
178891: ac 86 06                 jump @12170 if s1 <u a1
      :                          @12169
178894: 28 e8 39                 jump @13269
      :                          @12170
178897: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
178901: 97 66 02                 s1 = s1 << 0x2
178904: 7b 17 70                 u64 [sp + 0x70] = a0
178907: c8 76 06                 s1 = s1 + a0
178910: 95 17 20 01              a0 = sp + 0x120
178914: 7b 17 38 02              u64 [sp + 0x238] = a0
178918: 33 07 2c 0c              a0 = 0xc2c
178922: 7b 17 40 02              u64 [sp + 0x240] = a0
178926: 7b 16 48 02              u64 [sp + 0x248] = s1
178930: 33 07 96 0c              a0 = 0xc96
178934: 7b 17 50 02              u64 [sp + 0x250] = a0
178938: 33 07 18 2b 01           a0 = 0x12b18
178943: 7b 17 90 02              u64 [sp + 0x290] = a0
178947: 49 21 98 02 02           u64 [sp + 664] = 0x2
178952: 49 21 b0 02              u64 [sp + 688] = 0
178956: 95 18 38 02              a1 = sp + 0x238
178960: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
178964: 49 21 a8 02 02           u64 [sp + 680] = 0x2
178969: 95 17 08 02              a0 = sp + 0x208
178973: 95 18 90 02              a1 = sp + 0x290
178977: 50 20 6e 0a d9 94 fd     ra = 2670, jump @1503
      :                          @12171 [@dyn 1335]
178984: 82 16 10 02              s1 = u64 [sp + 0x210]
178988: 82 1b 18 02              a4 = u64 [sp + 0x218]
178992: 82 17 08 02              a0 = u64 [sp + 0x208]
178996: 7b 17 60                 u64 [sp + 0x60] = a0
178999: 33 07 02                 a0 = 0x2
179002: 33 08                    a1 = 0
179004: 33 09                    a2 = 0
179006: 64 6a                    a3 = s1
179008: 33 00 70 0a              ra = 0xa70
179012: 0a 64                    ecalli 100 // 'log'
179014: 01                       fallthrough
      :                          @12172 [@dyn 1336]
179015: 82 1c 60                 a5 = u64 [sp + 0x60]
179018: 82 17 68                 a0 = u64 [sp + 0x68]
179021: c8 c7 07                 a0 = a0 + a5
179024: 53 37 00 00 ff 25        jump @12178 if a0 <u 4294901760
      :                          @12173
179030: 33 07 c0 22 03           a0 = 0x322c0
179035: 95 77 00 00 01           a0 = a0 + 0x10000
179040: 01                       fallthrough
      :                          @12174
179041: 82 78                    a1 = u64 [a0]
179043: c9 87 09                 a2 = a0 - a1
179046: ab 69 0f                 jump @12178 if a2 != s1
      :                          @12175
179049: c9 c8 09                 a2 = a1 - a5
179052: 01                       fallthrough
      :                          @12176
179053: 82 7a                    a3 = u64 [a0]
179055: ab 8a f2                 jump @12174 if a3 != a1
      :                          @12177
179058: 7b 79                    u64 [a0] = a2
179060: 01                       fallthrough
      :                          @12178
179061: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
179065: 82 16 70                 s1 = u64 [sp + 0x70]
179068: 52 07 06                 jump @12180 if a0 != 0
      :                          @12179
179071: 28 04 27                 jump @12868
      :                          @12180
179074: 54 27 00 40 08           jump @12182 if a0 <=u 16384
      :                          @12181
179079: 28 fc 26                 jump @12868
      :                          @12182
179082: 97 77 02                 a0 = a0 << 0x2
179085: 33 08 c0 22 03           a1 = 0x322c0
179090: 95 88 00 00 01           a1 = a1 + 0x10000
179095: 01                       fallthrough
      :                          @12183
179096: 82 89                    a2 = u64 [a1]
179098: c9 98 0a                 a3 = a1 - a2
179101: aa 6a 06                 jump @12185 if a3 == s1
      :                          @12184
179104: 28 e3 26                 jump @12868
      :                          @12185
179107: c9 79 0a                 a3 = a2 - a0
179110: 01                       fallthrough
      :                          @12186
179111: 82 8b                    a4 = u64 [a1]
179113: ab 9b ef                 jump @12183 if a4 != a2
      :                          @12187
179116: 7b 8a                    u64 [a1] = a3
179118: 33 0c                    a5 = 0
179120: 01                       fallthrough
      :                          @12188
179121: ab 9b e7                 jump @12183 if a4 != a2
      :                          @12189
179124: 28 cf 26                 jump @12868
      :                          @12190 [@dyn 1337]
179127: 3a 08 78 12 03           a1 = u64 [0x31278]
179132: 97 89 0d                 a2 = a1 << 0xd
179135: d3 98 08                 a1 = a1 ^ a2
179138: 98 89 07                 a2 = a1 >> 0x7
179141: d3 98 08                 a1 = a1 ^ a2
179144: 97 89 11                 a2 = a1 << 0x11
179147: d3 98 08                 a1 = a1 ^ a2
179150: 3a 09 60 11 03           a2 = u64 [0x31160]
179155: 3a 0a 88 11 03           a3 = u64 [0x31188]
179160: 3e 08 78 12 03           u64 [0x31278] = a1
179165: ca 98 07                 a0 = a1 * a2
179168: 98 78 05                 a1 = a0 >> 0x5
179171: d6 a8 08                 a1 = a1 mulhu a3
179174: 98 88 07                 a1 = a1 >> 0x7
179177: 96 88 a0 86 01           a1 = a1 * 0x186a0
179182: c9 87 07                 a0 = a0 - a1
179185: 95 77 01                 a0 = a0 + 0x1
179188: 7b 17 20 01              u64 [sp + 0x120] = a0
179192: 50 20 74 0a 5b dd fd     ra = 2676, jump @2681
      :                          @12191 [@dyn 1338]
179199: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
179203: 95 17 20 01              a0 = sp + 0x120
179207: 7b 17 38 02              u64 [sp + 0x238] = a0
179211: 33 07 2c 0c              a0 = 0xc2c
179215: 7b 17 40 02              u64 [sp + 0x240] = a0
179219: 95 18 e0 01              a1 = sp + 0x1e0
179223: 7b 18 48 02              u64 [sp + 0x248] = a1
179227: 7b 17 50 02              u64 [sp + 0x250] = a0
179231: 33 07 50 2b 01           a0 = 0x12b50
179236: 7b 17 90 02              u64 [sp + 0x290] = a0
179240: 49 21 98 02 02           u64 [sp + 664] = 0x2
179245: 49 21 b0 02              u64 [sp + 688] = 0
179249: 95 18 38 02              a1 = sp + 0x238
179253: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
179257: 49 21 a8 02 02           u64 [sp + 680] = 0x2
179262: 95 17 08 02              a0 = sp + 0x208
179266: 95 18 90 02              a1 = sp + 0x290
179270: 50 20 76 0a b4 93 fd     ra = 2678, jump @1503
      :                          @12192 [@dyn 1339]
179277: 82 16 10 02              s1 = u64 [sp + 0x210]
179281: 82 1b 18 02              a4 = u64 [sp + 0x218]
179285: 82 17 08 02              a0 = u64 [sp + 0x208]
179289: 7b 17 70                 u64 [sp + 0x70] = a0
179292: 33 07 02                 a0 = 0x2
179295: 33 08                    a1 = 0
179297: 33 09                    a2 = 0
179299: 64 6a                    a3 = s1
179301: 33 00 78 0a              ra = 0xa78
179305: 0a 64                    ecalli 100 // 'log'
179307: 01                       fallthrough
      :                          @12193 [@dyn 1340]
179308: 82 1c 70                 a5 = u64 [sp + 0x70]
179311: 82 17 68                 a0 = u64 [sp + 0x68]
179314: c8 c7 07                 a0 = a0 + a5
179317: 55 37 00 00 ff 09        jump @12195 if a0 >=u 4294901760
      :                          @12194
179323: 28 08 26                 jump @12868
      :                          @12195
179326: 33 07 c0 22 03           a0 = 0x322c0
179331: 95 77 00 00 01           a0 = a0 + 0x10000
179336: 01                       fallthrough
      :                          @12196
179337: 82 78                    a1 = u64 [a0]
179339: c9 87 09                 a2 = a0 - a1
179342: aa 69 06                 jump @12198 if a2 == s1
      :                          @12197
179345: 28 f2 25                 jump @12868
      :                          @12198
179348: c9 c8 09                 a2 = a1 - a5
179351: 01                       fallthrough
      :                          @12199
179352: 82 7a                    a3 = u64 [a0]
179354: ab 8a ef                 jump @12196 if a3 != a1
      :                          @12200
179357: 7b 79                    u64 [a0] = a2
179359: 33 0b                    a4 = 0
179361: 01                       fallthrough
      :                          @12201
179362: ab 8a e7                 jump @12196 if a3 != a1
      :                          @12202
179365: 28 de 25                 jump @12868
      :                          @12203 [@dyn 1341]
179368: 3a 08 78 12 03           a1 = u64 [0x31278]
179373: 97 89 0d                 a2 = a1 << 0xd
179376: d3 98 08                 a1 = a1 ^ a2
179379: 98 89 07                 a2 = a1 >> 0x7
179382: d3 98 08                 a1 = a1 ^ a2
179385: 97 89 11                 a2 = a1 << 0x11
179388: d3 98 08                 a1 = a1 ^ a2
179391: 3a 09 60 11 03           a2 = u64 [0x31160]
179396: 3a 0a 88 11 03           a3 = u64 [0x31188]
179401: 3e 08 78 12 03           u64 [0x31278] = a1
179406: ca 98 07                 a0 = a1 * a2
179409: 98 78 05                 a1 = a0 >> 0x5
179412: d6 a8 08                 a1 = a1 mulhu a3
179415: 98 88 07                 a1 = a1 >> 0x7
179418: 96 88 a0 86 01           a1 = a1 * 0x186a0
179423: c9 87 07                 a0 = a0 - a1
179426: 95 77 01                 a0 = a0 + 0x1
179429: 7b 17 20 01              u64 [sp + 0x120] = a0
179433: 50 20 7c 0a c2 dc fd     ra = 2684, jump @2692
      :                          @12204 [@dyn 1342]
179440: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
179444: 95 17 20 01              a0 = sp + 0x120
179448: 7b 17 38 02              u64 [sp + 0x238] = a0
179452: 33 07 2c 0c              a0 = 0xc2c
179456: 7b 17 40 02              u64 [sp + 0x240] = a0
179460: 95 18 e0 01              a1 = sp + 0x1e0
179464: 7b 18 48 02              u64 [sp + 0x248] = a1
179468: 7b 17 50 02              u64 [sp + 0x250] = a0
179472: 33 07 80 2b 01           a0 = 0x12b80
179477: 7b 17 90 02              u64 [sp + 0x290] = a0
179481: 49 21 98 02 02           u64 [sp + 664] = 0x2
179486: 49 21 b0 02              u64 [sp + 688] = 0
179490: 95 18 38 02              a1 = sp + 0x238
179494: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
179498: 49 21 a8 02 02           u64 [sp + 680] = 0x2
179503: 95 17 08 02              a0 = sp + 0x208
179507: 95 18 90 02              a1 = sp + 0x290
179511: 50 20 7e 0a c3 92 fd     ra = 2686, jump @1503
      :                          @12205 [@dyn 1343]
179518: 82 16 10 02              s1 = u64 [sp + 0x210]
179522: 82 1b 18 02              a4 = u64 [sp + 0x218]
179526: 82 17 08 02              a0 = u64 [sp + 0x208]
179530: 7b 17 70                 u64 [sp + 0x70] = a0
179533: 33 07 02                 a0 = 0x2
179536: 33 08                    a1 = 0
179538: 33 09                    a2 = 0
179540: 64 6a                    a3 = s1
179542: 33 00 80 0a              ra = 0xa80
179546: 0a 64                    ecalli 100 // 'log'
179548: 01                       fallthrough
      :                          @12206 [@dyn 1344]
179549: 82 1c 70                 a5 = u64 [sp + 0x70]
179552: 82 17 68                 a0 = u64 [sp + 0x68]
179555: c8 c7 07                 a0 = a0 + a5
179558: 55 37 00 00 ff 09        jump @12208 if a0 >=u 4294901760
      :                          @12207
179564: 28 17 25                 jump @12868
      :                          @12208
179567: 33 07 c0 22 03           a0 = 0x322c0
179572: 95 77 00 00 01           a0 = a0 + 0x10000
179577: 01                       fallthrough
      :                          @12209
179578: 82 78                    a1 = u64 [a0]
179580: c9 87 09                 a2 = a0 - a1
179583: aa 69 06                 jump @12211 if a2 == s1
      :                          @12210
179586: 28 01 25                 jump @12868
      :                          @12211
179589: c9 c8 09                 a2 = a1 - a5
179592: 01                       fallthrough
      :                          @12212
179593: 82 7a                    a3 = u64 [a0]
179595: ab 8a ef                 jump @12209 if a3 != a1
      :                          @12213
179598: 7b 79                    u64 [a0] = a2
179600: 33 0b                    a4 = 0
179602: 01                       fallthrough
      :                          @12214
179603: ab 8a e7                 jump @12209 if a3 != a1
      :                          @12215
179606: 28 ed 24                 jump @12868
      :                          @12216 [@dyn 1345]
179609: 3a 08 78 12 03           a1 = u64 [0x31278]
179614: 97 89 0d                 a2 = a1 << 0xd
179617: d3 98 08                 a1 = a1 ^ a2
179620: 98 89 07                 a2 = a1 >> 0x7
179623: d3 98 08                 a1 = a1 ^ a2
179626: 97 89 11                 a2 = a1 << 0x11
179629: d3 98 08                 a1 = a1 ^ a2
179632: 3a 09 60 11 03           a2 = u64 [0x31160]
179637: 3a 0a 88 11 03           a3 = u64 [0x31188]
179642: 3e 08 78 12 03           u64 [0x31278] = a1
179647: ca 98 07                 a0 = a1 * a2
179650: 98 78 05                 a1 = a0 >> 0x5
179653: d6 a8 08                 a1 = a1 mulhu a3
179656: 98 88 07                 a1 = a1 >> 0x7
179659: 96 88 a0 86 01           a1 = a1 * 0x186a0
179664: c9 87 07                 a0 = a0 - a1
179667: 95 77 01                 a0 = a0 + 0x1
179670: 7b 17 20 01              u64 [sp + 0x120] = a0
179674: 50 20 84 0a 21 dc fd     ra = 2692, jump @2702
      :                          @12217 [@dyn 1346]
179681: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
179685: 95 17 20 01              a0 = sp + 0x120
179689: 7b 17 38 02              u64 [sp + 0x238] = a0
179693: 33 07 2c 0c              a0 = 0xc2c
179697: 7b 17 40 02              u64 [sp + 0x240] = a0
179701: 95 17 e0 01              a0 = sp + 0x1e0
179705: 7b 17 48 02              u64 [sp + 0x248] = a0
179709: 33 07 98 0c              a0 = 0xc98
179713: 7b 17 50 02              u64 [sp + 0x250] = a0
179717: 33 07 a8 2b 01           a0 = 0x12ba8
179722: 7b 17 90 02              u64 [sp + 0x290] = a0
179726: 49 21 98 02 02           u64 [sp + 664] = 0x2
179731: 49 21 b0 02              u64 [sp + 688] = 0
179735: 95 18 38 02              a1 = sp + 0x238
179739: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
179743: 49 21 a8 02 02           u64 [sp + 680] = 0x2
179748: 95 17 08 02              a0 = sp + 0x208
179752: 95 18 90 02              a1 = sp + 0x290
179756: 50 20 86 0a ce 91 fd     ra = 2694, jump @1503
      :                          @12218 [@dyn 1347]
179763: 82 16 10 02              s1 = u64 [sp + 0x210]
179767: 82 1b 18 02              a4 = u64 [sp + 0x218]
179771: 82 17 08 02              a0 = u64 [sp + 0x208]
179775: 7b 17 70                 u64 [sp + 0x70] = a0
179778: 33 07 02                 a0 = 0x2
179781: 33 08                    a1 = 0
179783: 33 09                    a2 = 0
179785: 64 6a                    a3 = s1
179787: 33 00 88 0a              ra = 0xa88
179791: 0a 64                    ecalli 100 // 'log'
179793: 01                       fallthrough
      :                          @12219 [@dyn 1348]
179794: 82 1c 70                 a5 = u64 [sp + 0x70]
179797: 82 17 68                 a0 = u64 [sp + 0x68]
179800: c8 c7 07                 a0 = a0 + a5
179803: 55 37 00 00 ff 09        jump @12221 if a0 >=u 4294901760
      :                          @12220
179809: 28 22 24                 jump @12868
      :                          @12221
179812: 33 07 c0 22 03           a0 = 0x322c0
179817: 95 77 00 00 01           a0 = a0 + 0x10000
179822: 01                       fallthrough
      :                          @12222
179823: 82 78                    a1 = u64 [a0]
179825: c9 87 09                 a2 = a0 - a1
179828: aa 69 06                 jump @12224 if a2 == s1
      :                          @12223
179831: 28 0c 24                 jump @12868
      :                          @12224
179834: c9 c8 09                 a2 = a1 - a5
179837: 01                       fallthrough
      :                          @12225
179838: 82 7a                    a3 = u64 [a0]
179840: ab 8a ef                 jump @12222 if a3 != a1
      :                          @12226
179843: 7b 79                    u64 [a0] = a2
179845: 33 0b                    a4 = 0
179847: 01                       fallthrough
      :                          @12227
179848: ab 8a e7                 jump @12222 if a3 != a1
      :                          @12228
179851: 28 f8 23                 jump @12868
      :                          @12229 [@dyn 1349]
179854: 3a 08 78 12 03           a1 = u64 [0x31278]
179859: 97 89 0d                 a2 = a1 << 0xd
179862: d3 98 08                 a1 = a1 ^ a2
179865: 98 89 07                 a2 = a1 >> 0x7
179868: d3 98 08                 a1 = a1 ^ a2
179871: 97 89 11                 a2 = a1 << 0x11
179874: d3 98 08                 a1 = a1 ^ a2
179877: 3a 09 60 11 03           a2 = u64 [0x31160]
179882: 3a 0a 68 11 03           a3 = u64 [0x31168]
179887: 3e 08 78 12 03           u64 [0x31278] = a1
179892: ca 98 07                 a0 = a1 * a2
179895: 98 78 03                 a1 = a0 >> 0x3
179898: d6 a8 08                 a1 = a1 mulhu a3
179901: 98 88 04                 a1 = a1 >> 0x4
179904: 96 88 e8 03              a1 = a1 * 0x3e8
179908: c9 87 07                 a0 = a0 - a1
179911: 95 77 01                 a0 = a0 + 0x1
179914: 7b 17 20 01              u64 [sp + 0x120] = a0
179918: 33 00 8c 0a              ra = 0xa8c
179922: 33 08                    a1 = 0
179924: 33 09 01                 a2 = 0x1
179927: 28 7f dd fd              jump @2763
      :                          @12230 [@dyn 1350]
179931: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
179935: 95 17 20 01              a0 = sp + 0x120
179939: 7b 17 38 02              u64 [sp + 0x238] = a0
179943: 33 07 2c 0c              a0 = 0xc2c
179947: 7b 17 40 02              u64 [sp + 0x240] = a0
179951: 95 18 e0 01              a1 = sp + 0x1e0
179955: 7b 18 48 02              u64 [sp + 0x248] = a1
179959: 7b 17 50 02              u64 [sp + 0x250] = a0
179963: 33 07 e8 2b 01           a0 = 0x12be8
179968: 7b 17 90 02              u64 [sp + 0x290] = a0
179972: 49 21 98 02 02           u64 [sp + 664] = 0x2
179977: 49 21 b0 02              u64 [sp + 688] = 0
179981: 95 18 38 02              a1 = sp + 0x238
179985: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
179989: 49 21 a8 02 02           u64 [sp + 680] = 0x2
179994: 95 17 08 02              a0 = sp + 0x208
179998: 95 18 90 02              a1 = sp + 0x290
180002: 50 20 8e 0a d8 90 fd     ra = 2702, jump @1503
      :                          @12231 [@dyn 1351]
180009: 82 16 10 02              s1 = u64 [sp + 0x210]
180013: 82 1b 18 02              a4 = u64 [sp + 0x218]
180017: 82 17 08 02              a0 = u64 [sp + 0x208]
180021: 7b 17 70                 u64 [sp + 0x70] = a0
180024: 33 07 02                 a0 = 0x2
180027: 33 08                    a1 = 0
180029: 33 09                    a2 = 0
180031: 64 6a                    a3 = s1
180033: 33 00 90 0a              ra = 0xa90
180037: 0a 64                    ecalli 100 // 'log'
180039: 01                       fallthrough
      :                          @12232 [@dyn 1352]
180040: 82 1c 70                 a5 = u64 [sp + 0x70]
180043: 82 17 68                 a0 = u64 [sp + 0x68]
180046: c8 c7 07                 a0 = a0 + a5
180049: 55 37 00 00 ff 09        jump @12234 if a0 >=u 4294901760
      :                          @12233
180055: 28 2c 23                 jump @12868
      :                          @12234
180058: 33 07 c0 22 03           a0 = 0x322c0
180063: 95 77 00 00 01           a0 = a0 + 0x10000
180068: 01                       fallthrough
      :                          @12235
180069: 82 78                    a1 = u64 [a0]
180071: c9 87 09                 a2 = a0 - a1
180074: aa 69 06                 jump @12237 if a2 == s1
      :                          @12236
180077: 28 16 23                 jump @12868
      :                          @12237
180080: c9 c8 09                 a2 = a1 - a5
180083: 01                       fallthrough
      :                          @12238
180084: 82 7a                    a3 = u64 [a0]
180086: ab 8a ef                 jump @12235 if a3 != a1
      :                          @12239
180089: 7b 79                    u64 [a0] = a2
180091: 33 0b                    a4 = 0
180093: 01                       fallthrough
      :                          @12240
180094: ab 8a e7                 jump @12235 if a3 != a1
      :                          @12241
180097: 28 02 23                 jump @12868
      :                          @12242 [@dyn 1353]
180100: 3a 08 78 12 03           a1 = u64 [0x31278]
180105: 97 89 0d                 a2 = a1 << 0xd
180108: d3 98 08                 a1 = a1 ^ a2
180111: 98 89 07                 a2 = a1 >> 0x7
180114: d3 98 08                 a1 = a1 ^ a2
180117: 97 89 11                 a2 = a1 << 0x11
180120: d3 98 08                 a1 = a1 ^ a2
180123: 3a 09 60 11 03           a2 = u64 [0x31160]
180128: 3a 0a 78 11 03           a3 = u64 [0x31178]
180133: 3e 08 78 12 03           u64 [0x31278] = a1
180138: ca 98 07                 a0 = a1 * a2
180141: d6 a7 08                 a1 = a0 mulhu a3
180144: 98 88 0b                 a1 = a1 >> 0xb
180147: 96 88 10 27              a1 = a1 * 0x2710
180151: c9 87 07                 a0 = a0 - a1
180154: 95 77 01                 a0 = a0 + 0x1
180157: 7b 17 20 01              u64 [sp + 0x120] = a0
180161: 50 20 94 0a b1 dc fd     ra = 2708, jump @2769
      :                          @12243 [@dyn 1354]
180168: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
180172: 95 17 20 01              a0 = sp + 0x120
180176: 7b 17 38 02              u64 [sp + 0x238] = a0
180180: 33 07 2c 0c              a0 = 0xc2c
180184: 7b 17 40 02              u64 [sp + 0x240] = a0
180188: 95 18 e0 01              a1 = sp + 0x1e0
180192: 7b 18 48 02              u64 [sp + 0x248] = a1
180196: 7b 17 50 02              u64 [sp + 0x250] = a0
180200: 33 07 18 2c 01           a0 = 0x12c18
180205: 7b 17 90 02              u64 [sp + 0x290] = a0
180209: 49 21 98 02 02           u64 [sp + 664] = 0x2
180214: 49 21 b0 02              u64 [sp + 688] = 0
180218: 95 18 38 02              a1 = sp + 0x238
180222: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
180226: 49 21 a8 02 02           u64 [sp + 680] = 0x2
180231: 95 17 08 02              a0 = sp + 0x208
180235: 95 18 90 02              a1 = sp + 0x290
180239: 50 20 96 0a eb 8f fd     ra = 2710, jump @1503
      :                          @12244 [@dyn 1355]
180246: 82 16 10 02              s1 = u64 [sp + 0x210]
180250: 82 1b 18 02              a4 = u64 [sp + 0x218]
180254: 82 17 08 02              a0 = u64 [sp + 0x208]
180258: 7b 17 70                 u64 [sp + 0x70] = a0
180261: 33 07 02                 a0 = 0x2
180264: 33 08                    a1 = 0
180266: 33 09                    a2 = 0
180268: 64 6a                    a3 = s1
180270: 33 00 98 0a              ra = 0xa98
180274: 0a 64                    ecalli 100 // 'log'
180276: 01                       fallthrough
      :                          @12245 [@dyn 1356]
180277: 82 1c 70                 a5 = u64 [sp + 0x70]
180280: 82 17 68                 a0 = u64 [sp + 0x68]
180283: c8 c7 07                 a0 = a0 + a5
180286: 55 37 00 00 ff 09        jump @12247 if a0 >=u 4294901760
      :                          @12246
180292: 28 3f 22                 jump @12868
      :                          @12247
180295: 33 07 c0 22 03           a0 = 0x322c0
180300: 95 77 00 00 01           a0 = a0 + 0x10000
180305: 01                       fallthrough
      :                          @12248
180306: 82 78                    a1 = u64 [a0]
180308: c9 87 09                 a2 = a0 - a1
180311: aa 69 06                 jump @12250 if a2 == s1
      :                          @12249
180314: 28 29 22                 jump @12868
      :                          @12250
180317: c9 c8 09                 a2 = a1 - a5
180320: 01                       fallthrough
      :                          @12251
180321: 82 7a                    a3 = u64 [a0]
180323: ab 8a ef                 jump @12248 if a3 != a1
      :                          @12252
180326: 7b 79                    u64 [a0] = a2
180328: 33 0b                    a4 = 0
180330: 01                       fallthrough
      :                          @12253
180331: ab 8a e7                 jump @12248 if a3 != a1
      :                          @12254
180334: 28 15 22                 jump @12868
      :                          @12255 [@dyn 1357]
180337: 3a 09 78 12 03           a2 = u64 [0x31278]
180342: 3a 07 60 11 03           a0 = u64 [0x31160]
180347: 97 9a 0d                 a3 = a2 << 0xd
180350: d3 a9 09                 a2 = a2 ^ a3
180353: 98 9a 07                 a3 = a2 >> 0x7
180356: d3 a9 09                 a2 = a2 ^ a3
180359: 97 9a 11                 a3 = a2 << 0x11
180362: d3 a9 09                 a2 = a2 ^ a3
180365: 3a 0a 80 11 03           a3 = u64 [0x31180]
180370: ca 79 0b                 a4 = a2 * a0
180373: 3e 09 78 12 03           u64 [0x31278] = a2
180378: d6 ab 09                 a2 = a4 mulhu a3
180381: c9 9b 0a                 a3 = a4 - a2
180384: 98 aa 01                 a3 = a3 >> 0x1
180387: c8 a9 09                 a2 = a2 + a3
180390: 98 99 09                 a2 = a2 >> 0x9
180393: 96 99 e7 03              a2 = a2 * 0x3e7
180397: c9 9b 0b                 a4 = a4 - a2
180400: 86 b9 01                 a2 = a4 | 0x1
180403: 95 99 02                 a2 = a2 + 0x2
180406: 7b 19 c8 01              u64 [sp + 0x1c8] = a2
180410: 3a 09 78 12 03           a2 = u64 [0x31278]
180415: 97 9a 0d                 a3 = a2 << 0xd
180418: d3 a9 09                 a2 = a2 ^ a3
180421: 98 9a 07                 a3 = a2 >> 0x7
180424: d3 a9 09                 a2 = a2 ^ a3
180427: 97 9a 11                 a3 = a2 << 0x11
180430: d3 a9 09                 a2 = a2 ^ a3
180433: 3e 09 78 12 03           u64 [0x31278] = a2
180438: 82 18 c8 01              a1 = u64 [sp + 0x1c8]
180442: 52 08 06                 jump @12257 if a1 != 0
      :                          @12256
180445: 28 ba 33                 jump @13240
      :                          @12257
180448: ca 79 07                 a0 = a2 * a0
180451: cd 87 07                 a0 = a0 %u a1
180454: 7b 17 20 01              u64 [sp + 0x120] = a0
180458: 59 07 06                 jump @12259 if a0 >=s 0
      :                          @12258
180461: 28 e1 33                 jump @13291
      :                          @12259
180464: 59 08 06                 jump @12261 if a1 >=s 0
      :                          @12260
180467: 28 db 33                 jump @13291
      :                          @12261
180470: 50 20 9c 0a b8 cb fd     ra = 2716, jump @2437
      :                          @12262 [@dyn 1358]
180477: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
180481: 95 17 20 01              a0 = sp + 0x120
180485: 7b 17 90 02              u64 [sp + 0x290] = a0
180489: 33 07 98 0c              a0 = 0xc98
180493: 7b 17 98 02              u64 [sp + 0x298] = a0
180497: 95 18 c8 01              a1 = sp + 0x1c8
180501: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
180505: 33 08 2c 0c              a1 = 0xc2c
180509: 7b 18 a8 02              u64 [sp + 0x2a8] = a1
180513: 95 18 e0 01              a1 = sp + 0x1e0
180517: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
180521: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
180525: 33 07 38 2c 01           a0 = 0x12c38
180530: 7b 17 38 02              u64 [sp + 0x238] = a0
180534: 49 21 40 02 03           u64 [sp + 576] = 0x3
180539: 49 21 58 02              u64 [sp + 600] = 0
180543: 95 18 90 02              a1 = sp + 0x290
180547: 7b 18 48 02              u64 [sp + 0x248] = a1
180551: 49 21 50 02 03           u64 [sp + 592] = 0x3
180556: 95 17 08 02              a0 = sp + 0x208
180560: 95 18 38 02              a1 = sp + 0x238
180564: 50 20 9e 0a a6 8e fd     ra = 2718, jump @1503
      :                          @12263 [@dyn 1359]
180571: 82 16 10 02              s1 = u64 [sp + 0x210]
180575: 82 1b 18 02              a4 = u64 [sp + 0x218]
180579: 82 17 08 02              a0 = u64 [sp + 0x208]
180583: 7b 17 70                 u64 [sp + 0x70] = a0
180586: 33 07 02                 a0 = 0x2
180589: 33 08                    a1 = 0
180591: 33 09                    a2 = 0
180593: 64 6a                    a3 = s1
180595: 33 00 a0 0a              ra = 0xaa0
180599: 0a 64                    ecalli 100 // 'log'
180601: 01                       fallthrough
      :                          @12264 [@dyn 1360]
180602: 82 1c 70                 a5 = u64 [sp + 0x70]
180605: 82 17 68                 a0 = u64 [sp + 0x68]
180608: c8 c7 07                 a0 = a0 + a5
180611: 55 37 00 00 ff 09        jump @12266 if a0 >=u 4294901760
      :                          @12265
180617: 28 fa 20                 jump @12868
      :                          @12266
180620: 33 07 c0 22 03           a0 = 0x322c0
180625: 95 77 00 00 01           a0 = a0 + 0x10000
180630: 01                       fallthrough
      :                          @12267
180631: 82 78                    a1 = u64 [a0]
180633: c9 87 09                 a2 = a0 - a1
180636: aa 69 06                 jump @12269 if a2 == s1
      :                          @12268
180639: 28 e4 20                 jump @12868
      :                          @12269
180642: c9 c8 09                 a2 = a1 - a5
180645: 01                       fallthrough
      :                          @12270
180646: 82 7a                    a3 = u64 [a0]
180648: ab 8a ef                 jump @12267 if a3 != a1
      :                          @12271
180651: 7b 79                    u64 [a0] = a2
180653: 33 0b                    a4 = 0
180655: 01                       fallthrough
      :                          @12272
180656: ab 8a e7                 jump @12267 if a3 != a1
      :                          @12273
180659: 28 d0 20                 jump @12868
      :                          @12274 [@dyn 1361]
180662: 3a 08 78 12 03           a1 = u64 [0x31278]
180667: 97 89 0d                 a2 = a1 << 0xd
180670: d3 98 08                 a1 = a1 ^ a2
180673: 98 89 07                 a2 = a1 >> 0x7
180676: d3 98 08                 a1 = a1 ^ a2
180679: 97 89 11                 a2 = a1 << 0x11
180682: d3 98 08                 a1 = a1 ^ a2
180685: 3a 09 60 11 03           a2 = u64 [0x31160]
180690: 3e 08 78 12 03           u64 [0x31278] = a1
180695: 3a 0a 78 12 03           a3 = u64 [0x31278]
180700: ca 98 08                 a1 = a1 * a2
180703: 97 ab 0d                 a4 = a3 << 0xd
180706: d3 ba 0a                 a3 = a3 ^ a4
180709: 98 ab 07                 a4 = a3 >> 0x7
180712: d3 ba 0a                 a3 = a3 ^ a4
180715: 97 ab 11                 a4 = a3 << 0x11
180718: d3 ba 0a                 a3 = a3 ^ a4
180721: ca 9a 09                 a2 = a3 * a2
180724: 3a 0b 68 11 03           a4 = u64 [0x31168]
180729: 3e 0a 78 12 03           u64 [0x31278] = a3
180734: 98 87 03                 a0 = a1 >> 0x3
180737: d6 b7 07                 a0 = a0 mulhu a4
180740: 98 77 04                 a0 = a0 >> 0x4
180743: 96 77 e8 03              a0 = a0 * 0x3e8
180747: c9 78 08                 a1 = a1 - a0
180750: 86 88 01                 a1 = a1 | 0x1
180753: 95 88 02                 a1 = a1 + 0x2
180756: cd 89 07                 a0 = a2 %u a1
180759: 50 20 a4 0a b6 dc fd     ra = 2724, jump @2843
      :                          @12275 [@dyn 1362]
180766: 52 07 06                 jump @12277 if a0 != 0
      :                          @12276
180769: 28 84 29                 jump @13026
      :                          @12277
180772: 7b 18 e0 01              u64 [sp + 0x1e0] = a1
180776: 95 17 e0 01              a0 = sp + 0x1e0
180780: 7b 17 08 02              u64 [sp + 0x208] = a0
180784: 33 07 2c 0c              a0 = 0xc2c
180788: 7b 17 10 02              u64 [sp + 0x210] = a0
180792: 33 07 f8 2f 01           a0 = 0x12ff8
180797: 7b 17 90 02              u64 [sp + 0x290] = a0
180801: 49 21 98 02 01           u64 [sp + 664] = 0x1
180806: 49 21 b0 02              u64 [sp + 688] = 0
180810: 95 18 08 02              a1 = sp + 0x208
180814: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
180818: 49 21 a8 02 01           u64 [sp + 680] = 0x1
180823: 95 17 38 02              a0 = sp + 0x238
180827: 95 18 90 02              a1 = sp + 0x290
180831: 50 20 a6 0a 9b 8d fd     ra = 2726, jump @1503
      :                          @12278 [@dyn 1363]
180838: 82 16 40 02              s1 = u64 [sp + 0x240]
180842: 82 1b 48 02              a4 = u64 [sp + 0x248]
180846: 82 17 38 02              a0 = u64 [sp + 0x238]
180850: 7b 17 70                 u64 [sp + 0x70] = a0
180853: 33 07 02                 a0 = 0x2
180856: 33 08                    a1 = 0
180858: 33 09                    a2 = 0
180860: 64 6a                    a3 = s1
180862: 33 00 a8 0a              ra = 0xaa8
180866: 0a 64                    ecalli 100 // 'log'
180868: 01                       fallthrough
      :                          @12279 [@dyn 1364]
180869: 82 1c 70                 a5 = u64 [sp + 0x70]
180872: 82 17 68                 a0 = u64 [sp + 0x68]
180875: c8 c7 07                 a0 = a0 + a5
180878: 55 37 00 00 ff 09        jump @12281 if a0 >=u 4294901760
      :                          @12280
180884: 28 ef 1f                 jump @12868
      :                          @12281
180887: 33 07 c0 22 03           a0 = 0x322c0
180892: 95 77 00 00 01           a0 = a0 + 0x10000
180897: 01                       fallthrough
      :                          @12282
180898: 82 78                    a1 = u64 [a0]
180900: c9 87 09                 a2 = a0 - a1
180903: aa 69 06                 jump @12284 if a2 == s1
      :                          @12283
180906: 28 d9 1f                 jump @12868
      :                          @12284
180909: c9 c8 09                 a2 = a1 - a5
180912: 01                       fallthrough
      :                          @12285
180913: 82 7a                    a3 = u64 [a0]
180915: ab 8a ef                 jump @12282 if a3 != a1
      :                          @12286
180918: 7b 79                    u64 [a0] = a2
180920: 33 0b                    a4 = 0
180922: 01                       fallthrough
      :                          @12287
180923: ab 8a e7                 jump @12282 if a3 != a1
      :                          @12288
180926: 28 c5 1f                 jump @12868
      :                          @12289 [@dyn 1365]
180929: 3a 08 78 12 03           a1 = u64 [0x31278]
180934: 97 89 0d                 a2 = a1 << 0xd
180937: d3 98 08                 a1 = a1 ^ a2
180940: 98 89 07                 a2 = a1 >> 0x7
180943: d3 98 08                 a1 = a1 ^ a2
180946: 97 89 11                 a2 = a1 << 0x11
180949: d3 98 08                 a1 = a1 ^ a2
180952: 3a 09 60 11 03           a2 = u64 [0x31160]
180957: 3a 0a 78 11 03           a3 = u64 [0x31178]
180962: 3e 08 78 12 03           u64 [0x31278] = a1
180967: ca 98 07                 a0 = a1 * a2
180970: d6 a7 08                 a1 = a0 mulhu a3
180973: 98 88 0b                 a1 = a1 >> 0xb
180976: 33 09 10 27              a2 = 0x2710
180980: ca 98 08                 a1 = a1 * a2
180983: c9 87 07                 a0 = a0 - a1
180986: 95 77 02                 a0 = a0 + 0x2
180989: 7b 17 20 01              u64 [sp + 0x120] = a0
180993: 33 00 ac 0a              ra = 0xaac
180997: 95 11 f8                 sp = sp + 0xfffffffffffffff8
181000: 7b 15                    u64 [sp] = s0
181002: 33 03 02                 t1 = 0x2
181005: 33 04 e8 03              t2 = 0x3e8
181009: 33 02 09                 t0 = 0x9
181012: 33 0b 02                 a4 = 0x2
181015: 33 0c 02                 a5 = 0x2
181018: 28 14 6c fe              jump @6052
      :                          @12290 [@dyn 1366]
181022: 52 07 06                 jump @12292 if a0 != 0
      :                          @12291
181025: 28 0b 29                 jump @13036
      :                          @12292
181028: 7b 18 e0 01              u64 [sp + 0x1e0] = a1
181032: 95 17 20 01              a0 = sp + 0x120
181036: 7b 17 38 02              u64 [sp + 0x238] = a0
181040: 33 07 2c 0c              a0 = 0xc2c
181044: 7b 17 40 02              u64 [sp + 0x240] = a0
181048: 95 18 e0 01              a1 = sp + 0x1e0
181052: 7b 18 48 02              u64 [sp + 0x248] = a1
181056: 7b 17 50 02              u64 [sp + 0x250] = a0
181060: 33 07 b8 2c 01           a0 = 0x12cb8
181065: 7b 17 90 02              u64 [sp + 0x290] = a0
181069: 49 21 98 02 02           u64 [sp + 664] = 0x2
181074: 49 21 b0 02              u64 [sp + 688] = 0
181078: 95 18 38 02              a1 = sp + 0x238
181082: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
181086: 49 21 a8 02 02           u64 [sp + 680] = 0x2
181091: 95 17 08 02              a0 = sp + 0x208
181095: 95 18 90 02              a1 = sp + 0x290
181099: 50 20 ae 0a 8f 8c fd     ra = 2734, jump @1503
      :                          @12293 [@dyn 1367]
181106: 82 16 10 02              s1 = u64 [sp + 0x210]
181110: 82 1b 18 02              a4 = u64 [sp + 0x218]
181114: 82 17 08 02              a0 = u64 [sp + 0x208]
181118: 7b 17 70                 u64 [sp + 0x70] = a0
181121: 33 07 02                 a0 = 0x2
181124: 33 08                    a1 = 0
181126: 33 09                    a2 = 0
181128: 64 6a                    a3 = s1
181130: 33 00 b0 0a              ra = 0xab0
181134: 0a 64                    ecalli 100 // 'log'
181136: 01                       fallthrough
      :                          @12294 [@dyn 1368]
181137: 82 1c 70                 a5 = u64 [sp + 0x70]
181140: 82 17 68                 a0 = u64 [sp + 0x68]
181143: c8 c7 07                 a0 = a0 + a5
181146: 55 37 00 00 ff 09        jump @12296 if a0 >=u 4294901760
      :                          @12295
181152: 28 e3 1e                 jump @12868
      :                          @12296
181155: 33 07 c0 22 03           a0 = 0x322c0
181160: 95 77 00 00 01           a0 = a0 + 0x10000
181165: 01                       fallthrough
      :                          @12297
181166: 82 78                    a1 = u64 [a0]
181168: c9 87 09                 a2 = a0 - a1
181171: aa 69 06                 jump @12299 if a2 == s1
      :                          @12298
181174: 28 cd 1e                 jump @12868
      :                          @12299
181177: c9 c8 09                 a2 = a1 - a5
181180: 01                       fallthrough
      :                          @12300
181181: 82 7a                    a3 = u64 [a0]
181183: ab 8a ef                 jump @12297 if a3 != a1
      :                          @12301
181186: 7b 79                    u64 [a0] = a2
181188: 33 0b                    a4 = 0
181190: 01                       fallthrough
      :                          @12302
181191: ab 8a e7                 jump @12297 if a3 != a1
      :                          @12303
181194: 28 b9 1e                 jump @12868
      :                          @12304 [@dyn 1369]
181197: 3a 08 78 12 03           a1 = u64 [0x31278]
181202: 97 89 0d                 a2 = a1 << 0xd
181205: d3 89 09                 a2 = a2 ^ a1
181208: 98 9a 07                 a3 = a2 >> 0x7
181211: 3a 08 60 11 03           a1 = u64 [0x31160]
181216: d3 a9 09                 a2 = a2 ^ a3
181219: 97 9a 11                 a3 = a2 << 0x11
181222: d3 a9 09                 a2 = a2 ^ a3
181225: ca 89 0a                 a3 = a2 * a1
181228: 3a 0b 70 11 03           a4 = u64 [0x31170]
181233: 3e 09 78 12 03           u64 [0x31278] = a2
181238: 98 a9 01                 a2 = a3 >> 0x1
181241: d6 b9 09                 a2 = a2 mulhu a4
181244: 98 99 04                 a2 = a2 >> 0x4
181247: 33 0c 32                 a5 = 0x32
181250: ca c9 09                 a2 = a2 * a5
181253: c9 9a 0a                 a3 = a3 - a2
181256: 95 aa 01                 a3 = a3 + 0x1
181259: 7b 1a c8 01              u64 [sp + 0x1c8] = a3
181263: 3a 09 78 12 03           a2 = u64 [0x31278]
181268: 97 9a 0d                 a3 = a2 << 0xd
181271: d3 a9 09                 a2 = a2 ^ a3
181274: 98 9a 07                 a3 = a2 >> 0x7
181277: d3 a9 09                 a2 = a2 ^ a3
181280: 97 9a 11                 a3 = a2 << 0x11
181283: d3 a9 09                 a2 = a2 ^ a3
181286: ca 89 0a                 a3 = a2 * a1
181289: 3e 09 78 12 03           u64 [0x31278] = a2
181294: 98 a7 01                 a0 = a3 >> 0x1
181297: d6 b7 07                 a0 = a0 mulhu a4
181300: 98 77 04                 a0 = a0 >> 0x4
181303: ca c7 07                 a0 = a0 * a5
181306: 82 18 c8 01              a1 = u64 [sp + 0x1c8]
181310: c9 7a 09                 a2 = a3 - a0
181313: 95 99 01                 a2 = a2 + 0x1
181316: 7b 19 20 01              u64 [sp + 0x120] = a2
181320: 95 17 08 02              a0 = sp + 0x208
181324: 95 16 08 02              s1 = sp + 0x208
181328: 50 20 b4 0a 92 13 fe     ra = 2740, jump @4159
      :                          @12305 [@dyn 1370]
181335: 95 17 c8 01              a0 = sp + 0x1c8
181339: 7b 17 90 02              u64 [sp + 0x290] = a0
181343: 33 07 2c 0c              a0 = 0xc2c
181347: 7b 17 98 02              u64 [sp + 0x298] = a0
181351: 95 18 20 01              a1 = sp + 0x120
181355: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
181359: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
181363: 7b 16 b0 02              u64 [sp + 0x2b0] = s1
181367: 33 07 d2 01              a0 = 0x1d2
181371: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
181375: 33 07 f0 2c 01           a0 = 0x12cf0
181380: 7b 17 38 02              u64 [sp + 0x238] = a0
181384: 49 21 40 02 03           u64 [sp + 576] = 0x3
181389: 49 21 58 02              u64 [sp + 600] = 0
181393: 95 18 90 02              a1 = sp + 0x290
181397: 7b 18 48 02              u64 [sp + 0x248] = a1
181401: 49 21 50 02 03           u64 [sp + 592] = 0x3
181406: 95 17 e0 01              a0 = sp + 0x1e0
181410: 95 18 38 02              a1 = sp + 0x238
181414: 50 20 b6 0a 54 8b fd     ra = 2742, jump @1503
      :                          @12306 [@dyn 1371]
181421: 82 17 08 02              a0 = u64 [sp + 0x208]
181425: 51 07 2c                 jump @12313 if a0 == 0
      :                          @12307
181428: 56 37 00 00 01 29        jump @12313 if a0 >u 65536
      :                          @12308
181434: 82 18 10 02              a1 = u64 [sp + 0x210]
181438: 33 0a c0 22 03           a3 = 0x322c0
181443: 95 a9 00 00 01           a2 = a3 + 0x10000
181448: 01                       fallthrough
      :                          @12309
181449: 82 9a                    a3 = u64 [a2]
181451: c9 a9 0b                 a4 = a2 - a3
181454: ab 8b 0f                 jump @12313 if a4 != a1
      :                          @12310
181457: c9 7a 0b                 a4 = a3 - a0
181460: 01                       fallthrough
      :                          @12311
181461: 82 9c                    a5 = u64 [a2]
181463: ab ac f2                 jump @12309 if a5 != a3
      :                          @12312
181466: 7b 9b                    u64 [a2] = a4
181468: 01                       fallthrough
      :                          @12313
181469: 82 16 e8 01              s1 = u64 [sp + 0x1e8]
181473: 82 1b f0 01              a4 = u64 [sp + 0x1f0]
181477: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
181481: 7b 17 70                 u64 [sp + 0x70] = a0
181484: 33 07 02                 a0 = 0x2
181487: 33 08                    a1 = 0
181489: 33 09                    a2 = 0
181491: 64 6a                    a3 = s1
181493: 33 00 b8 0a              ra = 0xab8
181497: 0a 64                    ecalli 100 // 'log'
181499: 01                       fallthrough
      :                          @12314 [@dyn 1372]
181500: 82 1c 70                 a5 = u64 [sp + 0x70]
181503: 82 17 68                 a0 = u64 [sp + 0x68]
181506: c8 c7 07                 a0 = a0 + a5
181509: 55 37 00 00 ff 09        jump @12316 if a0 >=u 4294901760
      :                          @12315
181515: 28 78 1d                 jump @12868
      :                          @12316
181518: 33 07 c0 22 03           a0 = 0x322c0
181523: 95 77 00 00 01           a0 = a0 + 0x10000
181528: 01                       fallthrough
      :                          @12317
181529: 82 78                    a1 = u64 [a0]
181531: c9 87 09                 a2 = a0 - a1
181534: aa 69 06                 jump @12319 if a2 == s1
      :                          @12318
181537: 28 62 1d                 jump @12868
      :                          @12319
181540: c9 c8 09                 a2 = a1 - a5
181543: 01                       fallthrough
      :                          @12320
181544: 82 7a                    a3 = u64 [a0]
181546: ab 8a ef                 jump @12317 if a3 != a1
      :                          @12321
181549: 7b 79                    u64 [a0] = a2
181551: 33 0b                    a4 = 0
181553: 01                       fallthrough
      :                          @12322
181554: ab 8a e7                 jump @12317 if a3 != a1
      :                          @12323
181557: 28 4e 1d                 jump @12868
      :                          @12324 [@dyn 1373]
181560: 3a 08 78 12 03           a1 = u64 [0x31278]
181565: 97 89 0d                 a2 = a1 << 0xd
181568: d3 98 08                 a1 = a1 ^ a2
181571: 98 89 07                 a2 = a1 >> 0x7
181574: d3 98 08                 a1 = a1 ^ a2
181577: 97 89 11                 a2 = a1 << 0x11
181580: d3 98 08                 a1 = a1 ^ a2
181583: 3a 09 60 11 03           a2 = u64 [0x31160]
181588: 3a 0a 68 11 03           a3 = u64 [0x31168]
181593: 3e 08 78 12 03           u64 [0x31278] = a1
181598: ca 98 07                 a0 = a1 * a2
181601: 98 78 03                 a1 = a0 >> 0x3
181604: d6 a8 08                 a1 = a1 mulhu a3
181607: 98 88 04                 a1 = a1 >> 0x4
181610: 96 88 e8 03              a1 = a1 * 0x3e8
181614: c9 87 07                 a0 = a0 - a1
181617: 86 77 01                 a0 = a0 | 0x1
181620: 95 77 02                 a0 = a0 + 0x2
181623: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
181627: 50 20 bc 0a 23 db fd     ra = 2748, jump @2878
      :                          @12325 [@dyn 1374]
181634: 78 17 20 01              u8 [sp + 0x120] = a0
181638: 95 17 e0 01              a0 = sp + 0x1e0
181642: 7b 17 38 02              u64 [sp + 0x238] = a0
181646: 33 07 2c 0c              a0 = 0xc2c
181650: 7b 17 40 02              u64 [sp + 0x240] = a0
181654: 95 17 20 01              a0 = sp + 0x120
181658: 7b 17 48 02              u64 [sp + 0x248] = a0
181662: 33 07 84 0c              a0 = 0xc84
181666: 7b 17 50 02              u64 [sp + 0x250] = a0
181670: 33 07 38 2d 01           a0 = 0x12d38
181675: 7b 17 90 02              u64 [sp + 0x290] = a0
181679: 49 21 98 02 02           u64 [sp + 664] = 0x2
181684: 49 21 b0 02              u64 [sp + 688] = 0
181688: 95 18 38 02              a1 = sp + 0x238
181692: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
181696: 49 21 a8 02 02           u64 [sp + 680] = 0x2
181701: 95 17 08 02              a0 = sp + 0x208
181705: 95 18 90 02              a1 = sp + 0x290
181709: 50 20 be 0a 2d 8a fd     ra = 2750, jump @1503
      :                          @12326 [@dyn 1375]
181716: 82 16 10 02              s1 = u64 [sp + 0x210]
181720: 82 1b 18 02              a4 = u64 [sp + 0x218]
181724: 82 17 08 02              a0 = u64 [sp + 0x208]
181728: 7b 17 70                 u64 [sp + 0x70] = a0
181731: 33 07 02                 a0 = 0x2
181734: 33 08                    a1 = 0
181736: 33 09                    a2 = 0
181738: 64 6a                    a3 = s1
181740: 33 00 c0 0a              ra = 0xac0
181744: 0a 64                    ecalli 100 // 'log'
181746: 01                       fallthrough
      :                          @12327 [@dyn 1376]
181747: 82 1c 70                 a5 = u64 [sp + 0x70]
181750: 82 17 68                 a0 = u64 [sp + 0x68]
181753: c8 c7 07                 a0 = a0 + a5
181756: 55 37 00 00 ff 09        jump @12329 if a0 >=u 4294901760
      :                          @12328
181762: 28 81 1c                 jump @12868
      :                          @12329
181765: 33 07 c0 22 03           a0 = 0x322c0
181770: 95 77 00 00 01           a0 = a0 + 0x10000
181775: 01                       fallthrough
      :                          @12330
181776: 82 78                    a1 = u64 [a0]
181778: c9 87 09                 a2 = a0 - a1
181781: aa 69 06                 jump @12332 if a2 == s1
      :                          @12331
181784: 28 6b 1c                 jump @12868
      :                          @12332
181787: c9 c8 09                 a2 = a1 - a5
181790: 01                       fallthrough
      :                          @12333
181791: 82 7a                    a3 = u64 [a0]
181793: ab 8a ef                 jump @12330 if a3 != a1
      :                          @12334
181796: 7b 79                    u64 [a0] = a2
181798: 33 0b                    a4 = 0
181800: 01                       fallthrough
      :                          @12335
181801: ab 8a e7                 jump @12330 if a3 != a1
      :                          @12336
181804: 28 57 1c                 jump @12868
      :                          @12337 [@dyn 1377]
181807: 3a 09 78 12 03           a2 = u64 [0x31278]
181812: 3a 07 60 11 03           a0 = u64 [0x31160]
181817: 97 9a 0d                 a3 = a2 << 0xd
181820: d3 a9 09                 a2 = a2 ^ a3
181823: 98 9a 07                 a3 = a2 >> 0x7
181826: d3 a9 09                 a2 = a2 ^ a3
181829: 97 9a 11                 a3 = a2 << 0x11
181832: d3 a9 09                 a2 = a2 ^ a3
181835: ca 79 0a                 a3 = a2 * a0
181838: 3a 0b 70 11 03           a4 = u64 [0x31170]
181843: 3e 09 78 12 03           u64 [0x31278] = a2
181848: 98 a9 01                 a2 = a3 >> 0x1
181851: d6 b9 09                 a2 = a2 mulhu a4
181854: 98 99 04                 a2 = a2 >> 0x4
181857: 96 99 32                 a2 = a2 * 0x32
181860: c9 9a 0a                 a3 = a3 - a2
181863: 86 a9 01                 a2 = a3 | 0x1
181866: 95 99 02                 a2 = a2 + 0x2
181869: 7b 19 10 01              u64 [sp + 0x110] = a2
181873: 3a 09 78 12 03           a2 = u64 [0x31278]
181878: 97 9a 0d                 a3 = a2 << 0xd
181881: d3 a9 09                 a2 = a2 ^ a3
181884: 98 9a 07                 a3 = a2 >> 0x7
181887: d3 a9 09                 a2 = a2 ^ a3
181890: 97 9a 11                 a3 = a2 << 0x11
181893: d3 a9 09                 a2 = a2 ^ a3
181896: 3e 09 78 12 03           u64 [0x31278] = a2
181901: 82 1a 10 01              a3 = u64 [sp + 0x110]
181905: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
181908: 52 0a 06                 jump @12339 if a3 != 0
      :                          @12338
181911: 28 00 2e                 jump @13240
      :                          @12339
181914: ca 79 09                 a2 = a2 * a0
181917: cd a9 09                 a2 = a2 %u a3
181920: 95 99 01                 a2 = a2 + 0x1
181923: 7b 19 b0 01              u64 [sp + 0x1b0] = a2
181927: 3a 09 78 12 03           a2 = u64 [0x31278]
181932: 97 9a 0d                 a3 = a2 << 0xd
181935: d3 a9 09                 a2 = a2 ^ a3
181938: 98 9a 07                 a3 = a2 >> 0x7
181941: d3 a9 09                 a2 = a2 ^ a3
181944: 97 9a 11                 a3 = a2 << 0x11
181947: d3 a9 09                 a2 = a2 ^ a3
181950: 3e 09 78 12 03           u64 [0x31278] = a2
181955: 82 18 10 01              a1 = u64 [sp + 0x110]
181959: 52 08 06                 jump @12341 if a1 != 0
      :                          @12340
181962: 28 cd 2d                 jump @13240
      :                          @12341
181965: ca 79 09                 a2 = a2 * a0
181968: cd 89 08                 a1 = a2 %u a1
181971: 7b 18 c8 01              u64 [sp + 0x1c8] = a1
181975: 3a 09 78 12 03           a2 = u64 [0x31278]
181980: 97 9a 0d                 a3 = a2 << 0xd
181983: d3 a9 09                 a2 = a2 ^ a3
181986: 98 9a 07                 a3 = a2 >> 0x7
181989: d3 a9 09                 a2 = a2 ^ a3
181992: 97 9a 11                 a3 = a2 << 0x11
181995: d3 9a 0a                 a3 = a3 ^ a2
181998: 3e 0a 78 12 03           u64 [0x31278] = a3
182003: 82 1b 10 01              a4 = u64 [sp + 0x110]
182007: 52 0b 06                 jump @12343 if a4 != 0
      :                          @12342
182010: 28 9d 2d                 jump @13240
      :                          @12343
182013: 82 18 b0 01              a1 = u64 [sp + 0x1b0]
182017: 82 19 c8 01              a2 = u64 [sp + 0x1c8]
182021: ca 7a 07                 a0 = a3 * a0
182024: cd b7 0a                 a3 = a0 %u a4
182027: 7b 1a 20 01              u64 [sp + 0x120] = a3
182031: 95 17 08 02              a0 = sp + 0x208
182035: 95 16 08 02              s1 = sp + 0x208
182039: 33 00 c4 0a              ra = 0xac4
182043: 95 11 a8                 sp = sp + 0xffffffffffffffa8
182046: 7b 10 50                 u64 [sp + 0x50] = ra
182049: 7b 15 48                 u64 [sp + 0x48] = s0
182052: 7b 16 40                 u64 [sp + 0x40] = s1
182055: 64 b6                    s1 = a4
182057: 7b 1a 18                 u64 [sp + 0x18] = a3
182060: 7b 19 20                 u64 [sp + 0x20] = a2
182063: 64 85                    s0 = a1
182065: 7b 17 10                 u64 [sp + 0x10] = a0
182068: 97 87 01                 a0 = a1 << 0x1
182071: 98 88 3f                 a1 = a1 >> 0x3f
182074: 64 b9                    a2 = a4
182076: 33 00 3e 04              ra = 0x43e
182080: 28 76 42                 jump @13631
      :                          @12344 [@dyn 1378]
182083: 95 17 b0 01              a0 = sp + 0x1b0
182087: 7b 17 90 02              u64 [sp + 0x290] = a0
182091: 33 07 2c 0c              a0 = 0xc2c
182095: 7b 17 98 02              u64 [sp + 0x298] = a0
182099: 95 18 c8 01              a1 = sp + 0x1c8
182103: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
182107: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
182111: 95 18 20 01              a1 = sp + 0x120
182115: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
182119: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
182123: 95 18 10 01              a1 = sp + 0x110
182127: 7b 18 c0 02              u64 [sp + 0x2c0] = a1
182131: 7b 17 c8 02              u64 [sp + 0x2c8] = a0
182135: 7b 16 d0 02              u64 [sp + 0x2d0] = s1
182139: 33 07 34 02              a0 = 0x234
182143: 7b 17 d8 02              u64 [sp + 0x2d8] = a0
182147: 33 07 70 2d 01           a0 = 0x12d70
182152: 7b 17 38 02              u64 [sp + 0x238] = a0
182156: 49 21 40 02 05           u64 [sp + 576] = 0x5
182161: 49 21 58 02              u64 [sp + 600] = 0
182165: 95 18 90 02              a1 = sp + 0x290
182169: 7b 18 48 02              u64 [sp + 0x248] = a1
182173: 49 21 50 02 05           u64 [sp + 592] = 0x5
182178: 95 17 e0 01              a0 = sp + 0x1e0
182182: 95 18 38 02              a1 = sp + 0x238
182186: 50 20 c6 0a 50 88 fd     ra = 2758, jump @1503
      :                          @12345 [@dyn 1379]
182193: 82 18 08 02              a1 = u64 [sp + 0x208]
182197: 51 08 2e                 jump @12352 if a1 == 0
      :                          @12346
182200: 56 28 00 20 2b           jump @12352 if a1 >u 8192
      :                          @12347
182205: 82 17 10 02              a0 = u64 [sp + 0x210]
182209: 97 88 03                 a1 = a1 << 0x3
182212: 33 09 c0 22 03           a2 = 0x322c0
182217: 95 99 00 00 01           a2 = a2 + 0x10000
182222: 01                       fallthrough
      :                          @12348
182223: 82 9a                    a3 = u64 [a2]
182225: c9 a9 0b                 a4 = a2 - a3
182228: ab 7b 0f                 jump @12352 if a4 != a0
      :                          @12349
182231: c9 8a 0b                 a4 = a3 - a1
182234: 01                       fallthrough
      :                          @12350
182235: 82 9c                    a5 = u64 [a2]
182237: ab ac f2                 jump @12348 if a5 != a3
      :                          @12351
182240: 7b 9b                    u64 [a2] = a4
182242: 01                       fallthrough
      :                          @12352
182243: 82 16 e8 01              s1 = u64 [sp + 0x1e8]
182247: 82 1b f0 01              a4 = u64 [sp + 0x1f0]
182251: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
182255: 7b 17 70                 u64 [sp + 0x70] = a0
182258: 33 07 02                 a0 = 0x2
182261: 33 08                    a1 = 0
182263: 33 09                    a2 = 0
182265: 64 6a                    a3 = s1
182267: 33 00 c8 0a              ra = 0xac8
182271: 0a 64                    ecalli 100 // 'log'
182273: 01                       fallthrough
      :                          @12353 [@dyn 1380]
182274: 82 1c 70                 a5 = u64 [sp + 0x70]
182277: 82 17 68                 a0 = u64 [sp + 0x68]
182280: c8 c7 07                 a0 = a0 + a5
182283: 55 37 00 00 ff 09        jump @12355 if a0 >=u 4294901760
      :                          @12354
182289: 28 72 1a                 jump @12868
      :                          @12355
182292: 33 07 c0 22 03           a0 = 0x322c0
182297: 95 77 00 00 01           a0 = a0 + 0x10000
182302: 01                       fallthrough
      :                          @12356
182303: 82 78                    a1 = u64 [a0]
182305: c9 87 09                 a2 = a0 - a1
182308: aa 69 06                 jump @12358 if a2 == s1
      :                          @12357
182311: 28 5c 1a                 jump @12868
      :                          @12358
182314: c9 c8 09                 a2 = a1 - a5
182317: 01                       fallthrough
      :                          @12359
182318: 82 7a                    a3 = u64 [a0]
182320: ab 8a ef                 jump @12356 if a3 != a1
      :                          @12360
182323: 7b 79                    u64 [a0] = a2
182325: 33 0b                    a4 = 0
182327: 01                       fallthrough
      :                          @12361
182328: ab 8a e7                 jump @12356 if a3 != a1
      :                          @12362
182331: 28 48 1a                 jump @12868
      :                          @12363 [@dyn 1381]
182334: 95 17 90 02              a0 = sp + 0x290
182338: 33 08 08                 a1 = 0x8
182341: 50 20 cc 0a f3 9b fd     ra = 2764, jump @1882
      :                          @12364 [@dyn 1382]
182348: 95 17 08 02              a0 = sp + 0x208
182352: 95 18 90 02              a1 = sp + 0x290
182356: 33 09 08                 a2 = 0x8
182359: 50 20 ce 0a 2c 9d fd     ra = 2766, jump @1907
      :                          @12365 [@dyn 1383]
182366: 49 11 70                 u64 [sp + 112] = 0
182369: 33 07                    a0 = 0
182371: 33 04 01                 t2 = 0x1
182374: 33 0b 78 12 03           a4 = 0x31278
182379: 33 00 18                 ra = 0x18
182382: 28 18                    jump @12368
      :                          @12366
182384: 95 77 01                 a0 = a0 + 0x1
182387: 95 44 01                 t2 = t2 + 0x1
182390: 82 18 70                 a1 = u64 [sp + 0x70]
182393: 95 88 18                 a1 = a1 + 0x18
182396: 7b 18 70                 u64 [sp + 0x70] = a1
182399: 52 17 08 07              jump @12368 if a0 != 8
      :                          @12367
182403: 28 48 19                 jump @12858
      :                          @12368
182406: 56 17 06 ea              jump @12366 if a0 >u 6
      :                          @12369
182410: 82 16 70                 s1 = u64 [sp + 0x70]
182413: 64 49                    a2 = t2
182415: 01                       fallthrough
      :                          @12370
182416: 3a 08 78 12 03           a1 = u64 [0x31278]
182421: 97 8a 0d                 a3 = a1 << 0xd
182424: d3 a8 08                 a1 = a1 ^ a3
182427: 98 8c 07                 a5 = a1 >> 0x7
182430: d3 8c 0c                 a5 = a5 ^ a1
182433: 97 c8 11                 a1 = a5 << 0x11
182436: d3 c8 08                 a1 = a1 ^ a5
182439: 3e 08 78 12 03           u64 [0x31278] = a1
182444: 82 18 18 02              a1 = u64 [sp + 0x218]
182448: ac 87 06                 jump @12372 if a0 <u a1
      :                          @12371
182451: 28 d9 2b                 jump @13229
      :                          @12372
182454: 82 13 10 02              t1 = u64 [sp + 0x210]
182458: ca 07 02                 t0 = a0 * ra
182461: c8 32 02                 t0 = t0 + t1
182464: 82 2a 10                 a3 = u64 [t0 + 0x10]
182467: ac a9 06                 jump @12374 if a2 <u a3
      :                          @12373
182470: 28 7f 17                 jump @12826
      :                          @12374
182473: 82 2a 08                 a3 = u64 [t0 + 0x8]
182476: c8 9a 0a                 a3 = a3 + a2
182479: 84 cc 01                 a5 = a5 & 0x1
182482: 78 ac                    u8 [a3] = a5
182484: ac 89 06                 jump @12376 if a2 <u a1
      :                          @12375
182487: 28 e8 2b                 jump @13276
      :                          @12376
182490: c8 63 03                 t1 = t1 + s1
182493: 82 38 28                 a1 = u64 [t1 + 0x28]
182496: ac 87 06                 jump @12378 if a0 <u a1
      :                          @12377
182499: 28 a9 2b                 jump @13229
      :                          @12378
182502: 82 38 20                 a1 = u64 [t1 + 0x20]
182505: c8 78 08                 a1 = a1 + a0
182508: 78 8c                    u8 [a1] = a5
182510: 95 99 01                 a2 = a2 + 0x1
182513: 95 66 18                 s1 = s1 + 0x18
182516: 52 19 08 9c              jump @12370 if a2 != 8
      :                          @12379
182520: 28 78 ff                 jump @12366
      :                          @12380 [@dyn 1384]
182523: 33 0a                    a3 = 0
182525: 3a 02 60 11 03           t0 = u64 [0x31160]
182530: 49 21 e0 01              u64 [sp + 480] = 0
182534: 49 21 e8 01 08           u64 [sp + 488] = 0x8
182539: 49 21 f0 01              u64 [sp + 496] = 0
182543: 33 0c 78 12 03           a5 = 0x31278
182548: 14 03 cd cc cc cc cc cc cc cc t1 = 0xcccccccccccccccd
182558: 7b 12 60                 u64 [sp + 0x60] = t0
182561: 7b 13 58                 u64 [sp + 0x58] = t1
182564: 28 32                    jump @12382
      :                          @12381
182566: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
182570: 82 19 a0 02              a2 = u64 [sp + 0x2a0]
182574: 96 8a 18                 a3 = a1 * 0x18
182577: c8 a7 07                 a0 = a0 + a3
182580: 7b 79 10                 u64 [a0 + 0x10] = a2
182583: 82 19 98 02              a2 = u64 [sp + 0x298]
182587: 7b 79 08                 u64 [a0 + 0x8] = a2
182590: 82 19 90 02              a2 = u64 [sp + 0x290]
182594: 82 1a 48                 a3 = u64 [sp + 0x48]
182597: 83 aa 01                 i32 a3 = a3 + 0x1
182600: 7b 79                    u64 [a0] = a2
182602: 95 88 01                 a1 = a1 + 0x1
182605: 7b 18 f0 01              u64 [sp + 0x1f0] = a1
182609: 51 1a 0a 98 0f           jump @12686 if a3 == 10
      :                          @12382
182614: 7b 1a 48                 u64 [sp + 0x48] = a3
182617: 3a 07 78 12 03           a0 = u64 [0x31278]
182622: 97 78 0d                 a1 = a0 << 0xd
182625: d3 87 07                 a0 = a0 ^ a1
182628: 98 78 07                 a1 = a0 >> 0x7
182631: d3 87 07                 a0 = a0 ^ a1
182634: 97 78 11                 a1 = a0 << 0x11
182637: d3 87 07                 a0 = a0 ^ a1
182640: ca 27 08                 a1 = a0 * t0
182643: 3e 07 78 12 03           u64 [0x31278] = a0
182648: 49 21 90 02              u64 [sp + 656] = 0
182652: 49 21 98 02 08           u64 [sp + 664] = 0x8
182657: 49 21 a0 02              u64 [sp + 672] = 0
182661: d6 38 07                 a0 = a1 mulhu t1
182664: 98 79 02                 a2 = a0 >> 0x2
182667: 84 77 fc                 a0 = a0 & 0xfffffffffffffffc
182670: c8 97 07                 a0 = a0 + a2
182673: c9 78 08                 a1 = a1 - a0
182676: 95 86 01                 s1 = a1 + 0x1
182679: 28 2d                    jump @12384
      :                          @12383
182681: ca 29 07                 a0 = a2 * t0
182684: d6 37 09                 a2 = a0 mulhu t1
182687: 98 99 04                 a2 = a2 >> 0x4
182690: 82 1a 98 02              a3 = u64 [sp + 0x298]
182694: 33 0b 14                 a4 = 0x14
182697: ca b9 09                 a2 = a2 * a4
182700: c9 97 07                 a0 = a0 - a2
182703: 97 89 03                 a2 = a1 << 0x3
182706: c8 a9 09                 a2 = a2 + a3
182709: 7b 97                    u64 [a2] = a0
182711: 95 88 01                 a1 = a1 + 0x1
182714: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
182717: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
182721: 51 06 4c                 jump @12387 if s1 == 0
      :                          @12384
182724: 3a 07 78 12 03           a0 = u64 [0x31278]
182729: 97 78 0d                 a1 = a0 << 0xd
182732: d3 87 07                 a0 = a0 ^ a1
182735: 98 78 07                 a1 = a0 >> 0x7
182738: d3 87 07                 a0 = a0 ^ a1
182741: 97 78 11                 a1 = a0 << 0x11
182744: d3 78 09                 a2 = a1 ^ a0
182747: 3e 09 78 12 03           u64 [0x31278] = a2
182752: 82 18 a0 02              a1 = u64 [sp + 0x2a0]
182756: 82 17 90 02              a0 = u64 [sp + 0x290]
182760: ab 78 b1                 jump @12383 if a1 != a0
      :                          @12385
182763: 95 17 90 02              a0 = sp + 0x290
182767: 7b 19 70                 u64 [sp + 0x70] = a2
182770: 50 20 d2 0a 4e 89 fd     ra = 2770, jump @1581
      :                          @12386 [@dyn 1385]
182777: 82 19 70                 a2 = u64 [sp + 0x70]
182780: 82 13 58                 t1 = u64 [sp + 0x58]
182783: 33 0c 78 12 03           a5 = 0x31278
182788: 82 12 60                 t0 = u64 [sp + 0x60]
182791: 82 18 a0 02              a1 = u64 [sp + 0x2a0]
182795: 28 8e                    jump @12383
      :                          @12387
182797: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
182801: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
182805: ab 78 11 ff              jump @12381 if a1 != a0
      :                          @12388
182809: 95 17 e0 01              a0 = sp + 0x1e0
182813: 50 20 d4 0a a3 89 fd     ra = 2772, jump @1593
      :                          @12389 [@dyn 1386]
182820: 82 13 58                 t1 = u64 [sp + 0x58]
182823: 33 0c 78 12 03           a5 = 0x31278
182828: 82 12 60                 t0 = u64 [sp + 0x60]
182831: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
182835: 28 f3 fe                 jump @12381
      :                          @12390 [@dyn 1387]
182838: 3a 08 78 12 03           a1 = u64 [0x31278]
182843: 97 89 0d                 a2 = a1 << 0xd
182846: d3 98 08                 a1 = a1 ^ a2
182849: 98 89 07                 a2 = a1 >> 0x7
182852: d3 98 08                 a1 = a1 ^ a2
182855: 97 89 11                 a2 = a1 << 0x11
182858: d3 98 08                 a1 = a1 ^ a2
182861: 3a 09 60 11 03           a2 = u64 [0x31160]
182866: 3e 08 78 12 03           u64 [0x31278] = a1
182871: 3a 0a 78 12 03           a3 = u64 [0x31278]
182876: ca 98 08                 a1 = a1 * a2
182879: 97 ab 0d                 a4 = a3 << 0xd
182882: d3 ba 0a                 a3 = a3 ^ a4
182885: 98 ab 07                 a4 = a3 >> 0x7
182888: d3 ba 0a                 a3 = a3 ^ a4
182891: 97 ab 11                 a4 = a3 << 0x11
182894: d3 ba 0a                 a3 = a3 ^ a4
182897: ca 9a 09                 a2 = a3 * a2
182900: 3a 0b 68 11 03           a4 = u64 [0x31168]
182905: 3e 0a 78 12 03           u64 [0x31278] = a3
182910: 98 87 03                 a0 = a1 >> 0x3
182913: d6 b7 07                 a0 = a0 mulhu a4
182916: 98 77 04                 a0 = a0 >> 0x4
182919: 96 77 e8 03              a0 = a0 * 0x3e8
182923: c9 78 08                 a1 = a1 - a0
182926: 86 88 01                 a1 = a1 | 0x1
182929: 95 88 02                 a1 = a1 + 0x2
182932: cd 89 07                 a0 = a2 %u a1
182935: 50 20 d8 0a 97 d2 fd     ra = 2776, jump @2793
      :                          @12391 [@dyn 1388]
182942: 52 07 06                 jump @12393 if a0 != 0
      :                          @12392
182945: 28 20 22                 jump @13046
      :                          @12393
182948: 7b 18 e0 01              u64 [sp + 0x1e0] = a1
182952: 95 17 e0 01              a0 = sp + 0x1e0
182956: 7b 17 08 02              u64 [sp + 0x208] = a0
182960: 33 07 2c 0c              a0 = 0xc2c
182964: 7b 17 10 02              u64 [sp + 0x210] = a0
182968: 33 07 f8 2f 01           a0 = 0x12ff8
182973: 7b 17 90 02              u64 [sp + 0x290] = a0
182977: 49 21 98 02 01           u64 [sp + 664] = 0x1
182982: 49 21 b0 02              u64 [sp + 688] = 0
182986: 95 18 08 02              a1 = sp + 0x208
182990: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
182994: 49 21 a8 02 01           u64 [sp + 680] = 0x1
182999: 95 17 38 02              a0 = sp + 0x238
183003: 95 18 90 02              a1 = sp + 0x290
183007: 50 20 da 0a 1b 85 fd     ra = 2778, jump @1503
      :                          @12394 [@dyn 1389]
183014: 82 16 40 02              s1 = u64 [sp + 0x240]
183018: 82 1b 48 02              a4 = u64 [sp + 0x248]
183022: 82 17 38 02              a0 = u64 [sp + 0x238]
183026: 7b 17 70                 u64 [sp + 0x70] = a0
183029: 33 07 02                 a0 = 0x2
183032: 33 08                    a1 = 0
183034: 33 09                    a2 = 0
183036: 64 6a                    a3 = s1
183038: 33 00 dc 0a              ra = 0xadc
183042: 0a 64                    ecalli 100 // 'log'
183044: 01                       fallthrough
      :                          @12395 [@dyn 1390]
183045: 82 1c 70                 a5 = u64 [sp + 0x70]
183048: 82 17 68                 a0 = u64 [sp + 0x68]
183051: c8 c7 07                 a0 = a0 + a5
183054: 55 37 00 00 ff 09        jump @12397 if a0 >=u 4294901760
      :                          @12396
183060: 28 6f 17                 jump @12868
      :                          @12397
183063: 33 07 c0 22 03           a0 = 0x322c0
183068: 95 77 00 00 01           a0 = a0 + 0x10000
183073: 01                       fallthrough
      :                          @12398
183074: 82 78                    a1 = u64 [a0]
183076: c9 87 09                 a2 = a0 - a1
183079: aa 69 06                 jump @12400 if a2 == s1
      :                          @12399
183082: 28 59 17                 jump @12868
      :                          @12400
183085: c9 c8 09                 a2 = a1 - a5
183088: 01                       fallthrough
      :                          @12401
183089: 82 7a                    a3 = u64 [a0]
183091: ab 8a ef                 jump @12398 if a3 != a1
      :                          @12402
183094: 7b 79                    u64 [a0] = a2
183096: 33 0b                    a4 = 0
183098: 01                       fallthrough
      :                          @12403
183099: ab 8a e7                 jump @12398 if a3 != a1
      :                          @12404
183102: 28 45 17                 jump @12868
      :                          @12405
183105: 82 18 28 01              a1 = u64 [sp + 0x128]
183109: 95 17 e0 01              a0 = sp + 0x1e0
183113: 95 16 e0 01              s1 = sp + 0x1e0
183117: 50 20 de 0a 0b 3e fe     ra = 2782, jump @5324
      :                          @12406 [@dyn 1391]
183124: 95 17 20 01              a0 = sp + 0x120
183128: 7b 17 38 02              u64 [sp + 0x238] = a0
183132: 33 07 2c 02              a0 = 0x22c
183136: 7b 17 40 02              u64 [sp + 0x240] = a0
183140: 7b 16 48 02              u64 [sp + 0x248] = s1
183144: 7b 17 50 02              u64 [sp + 0x250] = a0
183148: 33 07 18 0b 01           a0 = 0x10b18
183153: 7b 17 90 02              u64 [sp + 0x290] = a0
183157: 49 21 98 02 02           u64 [sp + 664] = 0x2
183162: 49 21 b0 02              u64 [sp + 688] = 0
183166: 95 18 38 02              a1 = sp + 0x238
183170: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
183174: 49 21 a8 02 02           u64 [sp + 680] = 0x2
183179: 95 17 08 02              a0 = sp + 0x208
183183: 95 18 90 02              a1 = sp + 0x290
183187: 50 20 e0 0a 67 84 fd     ra = 2784, jump @1503
      :                          @12407 [@dyn 1392]
183194: 82 16 10 02              s1 = u64 [sp + 0x210]
183198: 82 1b 18 02              a4 = u64 [sp + 0x218]
183202: 82 17 08 02              a0 = u64 [sp + 0x208]
183206: 7b 17 70                 u64 [sp + 0x70] = a0
183209: 33 07 02                 a0 = 0x2
183212: 33 08                    a1 = 0
183214: 33 09                    a2 = 0
183216: 64 6a                    a3 = s1
183218: 33 00 e2 0a              ra = 0xae2
183222: 0a 64                    ecalli 100 // 'log'
183224: 01                       fallthrough
      :                          @12408 [@dyn 1393]
183225: 82 1c 70                 a5 = u64 [sp + 0x70]
183228: 82 17 68                 a0 = u64 [sp + 0x68]
183231: c8 c7 07                 a0 = a0 + a5
183234: 53 37 00 00 ff 25        jump @12414 if a0 <u 4294901760
      :                          @12409
183240: 33 07 c0 22 03           a0 = 0x322c0
183245: 95 77 00 00 01           a0 = a0 + 0x10000
183250: 01                       fallthrough
      :                          @12410
183251: 82 78                    a1 = u64 [a0]
183253: c9 87 09                 a2 = a0 - a1
183256: ab 69 0f                 jump @12414 if a2 != s1
      :                          @12411
183259: c9 c8 09                 a2 = a1 - a5
183262: 01                       fallthrough
      :                          @12412
183263: 82 7a                    a3 = u64 [a0]
183265: ab 8a f2                 jump @12410 if a3 != a1
      :                          @12413
183268: 7b 79                    u64 [a0] = a2
183270: 01                       fallthrough
      :                          @12414
183271: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
183275: 51 08 30                 jump @12421 if a1 == 0
      :                          @12415
183278: 56 28 00 10 2d           jump @12421 if a1 >u 4096
      :                          @12416
183283: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
183287: 97 88 04                 a1 = a1 << 0x4
183290: 33 09 c0 22 03           a2 = 0x322c0
183295: 95 99 00 00 01           a2 = a2 + 0x10000
183300: 01                       fallthrough
      :                          @12417
183301: 82 9a                    a3 = u64 [a2]
183303: c9 a9 0b                 a4 = a2 - a3
183306: ab 7b 11                 jump @12421 if a4 != a0
      :                          @12418
183309: c9 8a 0b                 a4 = a3 - a1
183312: 01                       fallthrough
      :                          @12419
183313: 82 9c                    a5 = u64 [a2]
183315: ab ac f2                 jump @12417 if a5 != a3
      :                          @12420
183318: 7b 9b                    u64 [a2] = a4
183320: 33 06                    s1 = 0
183322: 01                       fallthrough
      :                          @12421
183323: 82 18 20 01              a1 = u64 [sp + 0x120]
183327: 52 08 06                 jump @12423 if a1 != 0
      :                          @12422
183330: 28 61 16                 jump @12868
      :                          @12423
183333: 54 28 00 10 08           jump @12425 if a1 <=u 4096
      :                          @12424
183338: 28 59 16                 jump @12868
      :                          @12425
183341: 82 17 28 01              a0 = u64 [sp + 0x128]
183345: 97 88 04                 a1 = a1 << 0x4
183348: 33 09 c0 22 03           a2 = 0x322c0
183353: 95 99 00 00 01           a2 = a2 + 0x10000
183358: 01                       fallthrough
      :                          @12426
183359: 82 9a                    a3 = u64 [a2]
183361: c9 a9 0b                 a4 = a2 - a3
183364: aa 7b 06                 jump @12428 if a4 == a0
      :                          @12427
183367: 28 3c 16                 jump @12868
      :                          @12428
183370: c9 8a 0b                 a4 = a3 - a1
183373: 01                       fallthrough
      :                          @12429
183374: 82 9c                    a5 = u64 [a2]
183376: ab ac ef                 jump @12426 if a5 != a3
      :                          @12430
183379: 7b 9b                    u64 [a2] = a4
183381: 33 06                    s1 = 0
183383: 01                       fallthrough
      :                          @12431
183384: ab ac e7                 jump @12426 if a5 != a3
      :                          @12432
183387: 28 28 16                 jump @12868
      :                          @12433
183390: 82 18 28 01              a1 = u64 [sp + 0x128]
183394: 95 17 e0 01              a0 = sp + 0x1e0
183398: 95 16 e0 01              s1 = sp + 0x1e0
183402: 50 20 e4 0a df 71 fe     ra = 2788, jump @6447
      :                          @12434 [@dyn 1394]
183409: 95 17 20 01              a0 = sp + 0x120
183413: 7b 17 38 02              u64 [sp + 0x238] = a0
183417: 33 07 0c 02              a0 = 0x20c
183421: 7b 17 40 02              u64 [sp + 0x240] = a0
183425: 7b 16 48 02              u64 [sp + 0x248] = s1
183429: 33 07 34 02              a0 = 0x234
183433: 7b 17 50 02              u64 [sp + 0x250] = a0
183437: 33 07 28 12 01           a0 = 0x11228
183442: 7b 17 90 02              u64 [sp + 0x290] = a0
183446: 49 21 98 02 02           u64 [sp + 664] = 0x2
183451: 49 21 b0 02              u64 [sp + 688] = 0
183455: 95 18 38 02              a1 = sp + 0x238
183459: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
183463: 49 21 a8 02 02           u64 [sp + 680] = 0x2
183468: 95 17 08 02              a0 = sp + 0x208
183472: 95 18 90 02              a1 = sp + 0x290
183476: 50 20 e6 0a 46 83 fd     ra = 2790, jump @1503
      :                          @12435 [@dyn 1395]
183483: 82 16 10 02              s1 = u64 [sp + 0x210]
183487: 82 1b 18 02              a4 = u64 [sp + 0x218]
183491: 82 17 08 02              a0 = u64 [sp + 0x208]
183495: 7b 17 70                 u64 [sp + 0x70] = a0
183498: 33 07 02                 a0 = 0x2
183501: 33 08                    a1 = 0
183503: 33 09                    a2 = 0
183505: 64 6a                    a3 = s1
183507: 33 00 e8 0a              ra = 0xae8
183511: 0a 64                    ecalli 100 // 'log'
183513: 01                       fallthrough
      :                          @12436 [@dyn 1396]
183514: 82 1c 70                 a5 = u64 [sp + 0x70]
183517: 82 17 68                 a0 = u64 [sp + 0x68]
183520: c8 c7 07                 a0 = a0 + a5
183523: 53 37 00 00 ff 25        jump @12442 if a0 <u 4294901760
      :                          @12437
183529: 33 07 c0 22 03           a0 = 0x322c0
183534: 95 77 00 00 01           a0 = a0 + 0x10000
183539: 01                       fallthrough
      :                          @12438
183540: 82 78                    a1 = u64 [a0]
183542: c9 87 09                 a2 = a0 - a1
183545: ab 69 0f                 jump @12442 if a2 != s1
      :                          @12439
183548: c9 c8 09                 a2 = a1 - a5
183551: 01                       fallthrough
      :                          @12440
183552: 82 7a                    a3 = u64 [a0]
183554: ab 8a f2                 jump @12438 if a3 != a1
      :                          @12441
183557: 7b 79                    u64 [a0] = a2
183559: 01                       fallthrough
      :                          @12442
183560: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
183564: 51 08 30                 jump @12449 if a1 == 0
      :                          @12443
183567: 56 28 00 20 2d           jump @12449 if a1 >u 8192
      :                          @12444
183572: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
183576: 97 88 03                 a1 = a1 << 0x3
183579: 33 09 c0 22 03           a2 = 0x322c0
183584: 95 99 00 00 01           a2 = a2 + 0x10000
183589: 01                       fallthrough
      :                          @12445
183590: 82 9a                    a3 = u64 [a2]
183592: c9 a9 0b                 a4 = a2 - a3
183595: ab 7b 11                 jump @12449 if a4 != a0
      :                          @12446
183598: c9 8a 0b                 a4 = a3 - a1
183601: 01                       fallthrough
      :                          @12447
183602: 82 9c                    a5 = u64 [a2]
183604: ab ac f2                 jump @12445 if a5 != a3
      :                          @12448
183607: 7b 9b                    u64 [a2] = a4
183609: 33 06                    s1 = 0
183611: 01                       fallthrough
      :                          @12449
183612: 82 18 20 01              a1 = u64 [sp + 0x120]
183616: 52 08 06                 jump @12451 if a1 != 0
      :                          @12450
183619: 28 40 15                 jump @12868
      :                          @12451
183622: 54 28 00 10 08           jump @12453 if a1 <=u 4096
      :                          @12452
183627: 28 38 15                 jump @12868
      :                          @12453
183630: 82 17 28 01              a0 = u64 [sp + 0x128]
183634: 97 88 04                 a1 = a1 << 0x4
183637: 33 09 c0 22 03           a2 = 0x322c0
183642: 95 99 00 00 01           a2 = a2 + 0x10000
183647: 01                       fallthrough
      :                          @12454
183648: 82 9a                    a3 = u64 [a2]
183650: c9 a9 0b                 a4 = a2 - a3
183653: aa 7b 06                 jump @12456 if a4 == a0
      :                          @12455
183656: 28 1b 15                 jump @12868
      :                          @12456
183659: c9 8a 0b                 a4 = a3 - a1
183662: 01                       fallthrough
      :                          @12457
183663: 82 9c                    a5 = u64 [a2]
183665: ab ac ef                 jump @12454 if a5 != a3
      :                          @12458
183668: 7b 9b                    u64 [a2] = a4
183670: 33 06                    s1 = 0
183672: 01                       fallthrough
      :                          @12459
183673: ab ac e7                 jump @12454 if a5 != a3
      :                          @12460
183676: 28 07 15                 jump @12868
      :                          @12461
183679: 50 20 ea 0a 96 71 fe     ra = 2794, jump @6463
      :                          @12462 [@dyn 1397]
183686: 7b 17 20 01              u64 [sp + 0x120] = a0
183690: 95 17 20 01              a0 = sp + 0x120
183694: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
183698: 33 07 2c 0c              a0 = 0xc2c
183702: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
183706: 33 07 58 12 01           a0 = 0x11258
183711: 7b 17 90 02              u64 [sp + 0x290] = a0
183715: 49 21 98 02 01           u64 [sp + 664] = 0x1
183720: 49 21 b0 02              u64 [sp + 688] = 0
183724: 95 18 e0 01              a1 = sp + 0x1e0
183728: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
183732: 49 21 a8 02 01           u64 [sp + 680] = 0x1
183737: 95 17 38 02              a0 = sp + 0x238
183741: 95 18 90 02              a1 = sp + 0x290
183745: 50 20 ec 0a 39 82 fd     ra = 2796, jump @1503
      :                          @12463 [@dyn 1398]
183752: 82 16 40 02              s1 = u64 [sp + 0x240]
183756: 82 1b 48 02              a4 = u64 [sp + 0x248]
183760: 82 17 38 02              a0 = u64 [sp + 0x238]
183764: 7b 17 70                 u64 [sp + 0x70] = a0
183767: 33 07 02                 a0 = 0x2
183770: 33 08                    a1 = 0
183772: 33 09                    a2 = 0
183774: 64 6a                    a3 = s1
183776: 33 00 ee 0a              ra = 0xaee
183780: 0a 64                    ecalli 100 // 'log'
183782: 01                       fallthrough
      :                          @12464 [@dyn 1399]
183783: 82 1c 70                 a5 = u64 [sp + 0x70]
183786: 82 17 68                 a0 = u64 [sp + 0x68]
183789: c8 c7 07                 a0 = a0 + a5
183792: 33 08 00 00 ff           a1 = 0xffffffffffff0000
183797: ac 87 96 0f              jump @12767 if a0 <u a1
      :                          @12465
183801: 33 07 c0 22 03           a0 = 0x322c0
183806: 95 77 00 00 01           a0 = a0 + 0x10000
183811: 01                       fallthrough
      :                          @12466
183812: 82 78                    a1 = u64 [a0]
183814: c9 87 09                 a2 = a0 - a1
183817: ab 69 82 0f              jump @12767 if a2 != s1
      :                          @12467
183821: c9 c8 09                 a2 = a1 - a5
183824: 01                       fallthrough
      :                          @12468
183825: 82 7a                    a3 = u64 [a0]
183827: ab 8a f1                 jump @12466 if a3 != a1
      :                          @12469
183830: 7b 79                    u64 [a0] = a2
183832: 33 0b                    a4 = 0
183834: 01                       fallthrough
      :                          @12470
183835: ab 8a e9                 jump @12466 if a3 != a1
      :                          @12471
183838: 28 6d 0f                 jump @12767
      :                          @12472
183841: 49 21 b0 01              u64 [sp + 432] = 0
183845: 95 17 20 01              a0 = sp + 0x120
183849: 7b 1c 70                 u64 [sp + 0x70] = a5
183852: 64 c8                    a1 = a5
183854: 33 00 f0 0a              ra = 0xaf0
183858: 95 11 e8                 sp = sp + 0xffffffffffffffe8
183861: 7b 10 10                 u64 [sp + 0x10] = ra
183864: 7b 15 08                 u64 [sp + 0x8] = s0
183867: 7b 16                    u64 [sp] = s1
183869: 33 03 c0 22 03           t1 = 0x322c0
183874: 33 02 00 00 01           t0 = 0x10000
183879: c8 23 04                 t2 = t1 + t0
183882: 28 61 79 fe              jump @6664
      :                          @12473 [@dyn 1400]
183886: 82 17 20 01              a0 = u64 [sp + 0x120]
183890: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
183900: aa 87 06                 jump @12475 if a0 == a1
      :                          @12474
183903: 28 fc 15                 jump @12896
      :                          @12475
183906: 33 07 a0 14 01           a0 = 0x114a0
183911: 7b 17 90 02              u64 [sp + 0x290] = a0
183915: 49 21 98 02 01           u64 [sp + 664] = 0x1
183920: 49 21 b0 02              u64 [sp + 688] = 0
183924: 33 07 f0 2f 01           a0 = 0x12ff0
183929: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
183933: 49 21 a8 02              u64 [sp + 680] = 0
183937: 95 17 38 02              a0 = sp + 0x238
183941: 95 18 90 02              a1 = sp + 0x290
183945: 50 20 f2 0a 71 81 fd     ra = 2802, jump @1503
      :                          @12476 [@dyn 1401]
183952: 82 1a 40 02              a3 = u64 [sp + 0x240]
183956: 7b 1a 60                 u64 [sp + 0x60] = a3
183959: 82 1b 48 02              a4 = u64 [sp + 0x248]
183963: 82 16 38 02              s1 = u64 [sp + 0x238]
183967: 33 07 02                 a0 = 0x2
183970: 33 08                    a1 = 0
183972: 33 09                    a2 = 0
183974: 33 00 f4 0a              ra = 0xaf4
183978: 0a 64                    ecalli 100 // 'log'
183980: 01                       fallthrough
      :                          @12477 [@dyn 1402]
183981: 82 1c 60                 a5 = u64 [sp + 0x60]
183984: 82 17 68                 a0 = u64 [sp + 0x68]
183987: c8 67 07                 a0 = a0 + s1
183990: 82 12 70                 t0 = u64 [sp + 0x70]
183993: 55 37 00 00 ff 09        jump @12479 if a0 >=u 4294901760
      :                          @12478
183999: 28 84 16                 jump @12911
      :                          @12479
184002: 33 07 c0 22 03           a0 = 0x322c0
184007: 95 77 00 00 01           a0 = a0 + 0x10000
184012: 01                       fallthrough
      :                          @12480
184013: 82 78                    a1 = u64 [a0]
184015: c9 87 09                 a2 = a0 - a1
184018: aa c9 06                 jump @12482 if a2 == a5
      :                          @12481
184021: 28 6e 16                 jump @12911
      :                          @12482
184024: c9 68 09                 a2 = a1 - s1
184027: 01                       fallthrough
      :                          @12483
184028: 82 7a                    a3 = u64 [a0]
184030: ab 8a ef                 jump @12480 if a3 != a1
      :                          @12484
184033: 7b 79                    u64 [a0] = a2
184035: 33 0b                    a4 = 0
184037: 01                       fallthrough
      :                          @12485
184038: ab 8a e7                 jump @12480 if a3 != a1
      :                          @12486
184041: 28 5a 16                 jump @12911
      :                          @12487
184044: 95 17 08 02              a0 = sp + 0x208
184048: 95 16 08 02              s1 = sp + 0x208
184052: 7b 1b 70                 u64 [sp + 0x70] = a4
184055: 64 b8                    a1 = a4
184057: 50 20 f6 0a 41 91 fe     ra = 2806, jump @7177
      :                          @12488 [@dyn 1403]
184064: 7b 16 20 01              u64 [sp + 0x120] = s1
184068: 33 07 2c 02              a0 = 0x22c
184072: 7b 17 28 01              u64 [sp + 0x128] = a0
184076: 33 07 e0 15 01           a0 = 0x115e0
184081: 7b 17 90 02              u64 [sp + 0x290] = a0
184085: 49 21 98 02 01           u64 [sp + 664] = 0x1
184090: 49 21 b0 02              u64 [sp + 688] = 0
184094: 95 18 20 01              a1 = sp + 0x120
184098: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
184102: 49 21 a8 02 01           u64 [sp + 680] = 0x1
184107: 95 17 38 02              a0 = sp + 0x238
184111: 95 18 90 02              a1 = sp + 0x290
184115: 50 20 f8 0a c7 80 fd     ra = 2808, jump @1503
      :                          @12489 [@dyn 1404]
184122: 82 1a 40 02              a3 = u64 [sp + 0x240]
184126: 7b 1a 60                 u64 [sp + 0x60] = a3
184129: 82 1b 48 02              a4 = u64 [sp + 0x248]
184133: 82 16 38 02              s1 = u64 [sp + 0x238]
184137: 33 07 02                 a0 = 0x2
184140: 33 08                    a1 = 0
184142: 33 09                    a2 = 0
184144: 33 00 fa 0a              ra = 0xafa
184148: 0a 64                    ecalli 100 // 'log'
184150: 01                       fallthrough
      :                          @12490 [@dyn 1405]
184151: 82 1c 60                 a5 = u64 [sp + 0x60]
184154: 82 17 68                 a0 = u64 [sp + 0x68]
184157: c8 67 07                 a0 = a0 + s1
184160: 53 37 00 00 ff 25        jump @12496 if a0 <u 4294901760
      :                          @12491
184166: 33 07 c0 22 03           a0 = 0x322c0
184171: 95 77 00 00 01           a0 = a0 + 0x10000
184176: 01                       fallthrough
      :                          @12492
184177: 82 78                    a1 = u64 [a0]
184179: c9 87 09                 a2 = a0 - a1
184182: ab c9 0f                 jump @12496 if a2 != a5
      :                          @12493
184185: c9 68 09                 a2 = a1 - s1
184188: 01                       fallthrough
      :                          @12494
184189: 82 7a                    a3 = u64 [a0]
184191: ab 8a f2                 jump @12492 if a3 != a1
      :                          @12495
184194: 7b 79                    u64 [a0] = a2
184196: 01                       fallthrough
      :                          @12496
184197: 82 18 08 02              a1 = u64 [sp + 0x208]
184201: 51 08 2e                 jump @12503 if a1 == 0
      :                          @12497
184204: 56 28 00 10 2b           jump @12503 if a1 >u 4096
      :                          @12498
184209: 82 17 10 02              a0 = u64 [sp + 0x210]
184213: 97 88 04                 a1 = a1 << 0x4
184216: 33 09 c0 22 03           a2 = 0x322c0
184221: 95 99 00 00 01           a2 = a2 + 0x10000
184226: 01                       fallthrough
      :                          @12499
184227: 82 9a                    a3 = u64 [a2]
184229: c9 a9 0b                 a4 = a2 - a3
184232: ab 7b 0f                 jump @12503 if a4 != a0
      :                          @12500
184235: c9 8a 0b                 a4 = a3 - a1
184238: 01                       fallthrough
      :                          @12501
184239: 82 9c                    a5 = u64 [a2]
184241: ab ac f2                 jump @12499 if a5 != a3
      :                          @12502
184244: 7b 9b                    u64 [a2] = a4
184246: 01                       fallthrough
      :                          @12503
184247: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
184251: 82 16 70                 s1 = u64 [sp + 0x70]
184254: 52 07 06                 jump @12505 if a0 != 0
      :                          @12504
184257: 28 c2 12                 jump @12868
      :                          @12505
184260: 54 27 00 10 08           jump @12507 if a0 <=u 4096
      :                          @12506
184265: 28 ba 12                 jump @12868
      :                          @12507
184268: 97 77 04                 a0 = a0 << 0x4
184271: 33 08 c0 22 03           a1 = 0x322c0
184276: 95 88 00 00 01           a1 = a1 + 0x10000
184281: 01                       fallthrough
      :                          @12508
184282: 82 89                    a2 = u64 [a1]
184284: c9 98 0a                 a3 = a1 - a2
184287: aa 6a 06                 jump @12510 if a3 == s1
      :                          @12509
184290: 28 a1 12                 jump @12868
      :                          @12510
184293: c9 79 0a                 a3 = a2 - a0
184296: 01                       fallthrough
      :                          @12511
184297: 82 8b                    a4 = u64 [a1]
184299: ab 9b ef                 jump @12508 if a4 != a2
      :                          @12512
184302: 7b 8a                    u64 [a1] = a3
184304: 33 0c                    a5 = 0
184306: 01                       fallthrough
      :                          @12513
184307: ab 9b e7                 jump @12508 if a4 != a2
      :                          @12514
184310: 28 8d 12                 jump @12868
      :                          @12515
184313: 7b 17 70                 u64 [sp + 0x70] = a0
184316: 33 00 fc 0a              ra = 0xafc
184320: 95 11 80                 sp = sp + 0xffffffffffffff80
184323: 7b 10 78                 u64 [sp + 0x78] = ra
184326: 7b 15 70                 u64 [sp + 0x70] = s0
184329: 7b 16 68                 u64 [sp + 0x68] = s1
184332: 64 89                    a2 = a1
184334: 64 78                    a1 = a0
184336: 95 17 50                 a0 = sp + 0x50
184339: 33 00 2e 04              ra = 0x42e
184343: 28 23 90 fe              jump @7177
      :                          @12516 [@dyn 1406]
184347: 7b 17 20 01              u64 [sp + 0x120] = a0
184351: 95 17 20 01              a0 = sp + 0x120
184355: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
184359: 33 07 2c 0c              a0 = 0xc2c
184363: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
184367: 33 07 00 16 01           a0 = 0x11600
184372: 7b 17 90 02              u64 [sp + 0x290] = a0
184376: 49 21 98 02 01           u64 [sp + 664] = 0x1
184381: 49 21 b0 02              u64 [sp + 688] = 0
184385: 95 18 e0 01              a1 = sp + 0x1e0
184389: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
184393: 49 21 a8 02 01           u64 [sp + 680] = 0x1
184398: 95 17 38 02              a0 = sp + 0x238
184402: 95 18 90 02              a1 = sp + 0x290
184406: 50 20 fe 0a a4 7f fd     ra = 2814, jump @1503
      :                          @12517 [@dyn 1407]
184413: 82 1a 40 02              a3 = u64 [sp + 0x240]
184417: 7b 1a 60                 u64 [sp + 0x60] = a3
184420: 82 1b 48 02              a4 = u64 [sp + 0x248]
184424: 82 16 38 02              s1 = u64 [sp + 0x238]
184428: 33 07 02                 a0 = 0x2
184431: 33 08                    a1 = 0
184433: 33 09                    a2 = 0
184435: 33 00 00 0b              ra = 0xb00
184439: 0a 64                    ecalli 100 // 'log'
184441: 01                       fallthrough
      :                          @12518 [@dyn 1408]
184442: 82 1c 60                 a5 = u64 [sp + 0x60]
184445: 82 17 68                 a0 = u64 [sp + 0x68]
184448: c8 67 07                 a0 = a0 + s1
184451: 53 37 00 00 ff 25        jump @12524 if a0 <u 4294901760
      :                          @12519
184457: 33 07 c0 22 03           a0 = 0x322c0
184462: 95 77 00 00 01           a0 = a0 + 0x10000
184467: 01                       fallthrough
      :                          @12520
184468: 82 78                    a1 = u64 [a0]
184470: c9 87 09                 a2 = a0 - a1
184473: ab c9 0f                 jump @12524 if a2 != a5
      :                          @12521
184476: c9 68 09                 a2 = a1 - s1
184479: 01                       fallthrough
      :                          @12522
184480: 82 7a                    a3 = u64 [a0]
184482: ab 8a f2                 jump @12520 if a3 != a1
      :                          @12523
184485: 7b 79                    u64 [a0] = a2
184487: 01                       fallthrough
      :                          @12524
184488: 82 17 08 02              a0 = u64 [sp + 0x208]
184492: 82 16 70                 s1 = u64 [sp + 0x70]
184495: 52 07 06                 jump @12526 if a0 != 0
      :                          @12525
184498: 28 d1 11                 jump @12868
      :                          @12526
184501: 54 27 00 10 08           jump @12528 if a0 <=u 4096
      :                          @12527
184506: 28 c9 11                 jump @12868
      :                          @12528
184509: 97 77 04                 a0 = a0 << 0x4
184512: 33 08 c0 22 03           a1 = 0x322c0
184517: 95 88 00 00 01           a1 = a1 + 0x10000
184522: 01                       fallthrough
      :                          @12529
184523: 82 89                    a2 = u64 [a1]
184525: c9 98 0a                 a3 = a1 - a2
184528: aa 6a 06                 jump @12531 if a3 == s1
      :                          @12530
184531: 28 b0 11                 jump @12868
      :                          @12531
184534: c9 79 0a                 a3 = a2 - a0
184537: 01                       fallthrough
      :                          @12532
184538: 82 8b                    a4 = u64 [a1]
184540: ab 9b ef                 jump @12529 if a4 != a2
      :                          @12533
184543: 7b 8a                    u64 [a1] = a3
184545: 33 0c                    a5 = 0
184547: 01                       fallthrough
      :                          @12534
184548: ab 9b e7                 jump @12529 if a4 != a2
      :                          @12535
184551: 28 9c 11                 jump @12868
      :                          @12536
184554: 95 17 e0 01              a0 = sp + 0x1e0
184558: 7b 1b 70                 u64 [sp + 0x70] = a4
184561: 64 b8                    a1 = a4
184563: 50 20 02 0b 47 8f fe     ra = 2818, jump @7177
      :                          @12537 [@dyn 1409]
184570: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
184574: 95 17 08 02              a0 = sp + 0x208
184578: 95 16 08 02              s1 = sp + 0x208
184582: 50 20 04 0b b5 93 fe     ra = 2820, jump @7259
      :                          @12538 [@dyn 1410]
184589: 7b 16 c8 01              u64 [sp + 0x1c8] = s1
184593: 33 07 1c 02              a0 = 0x21c
184597: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
184601: 33 07 28 16 01           a0 = 0x11628
184606: 7b 17 90 02              u64 [sp + 0x290] = a0
184610: 49 21 98 02 01           u64 [sp + 664] = 0x1
184615: 49 21 b0 02              u64 [sp + 688] = 0
184619: 95 18 c8 01              a1 = sp + 0x1c8
184623: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
184627: 49 21 a8 02 01           u64 [sp + 680] = 0x1
184632: 95 17 38 02              a0 = sp + 0x238
184636: 95 18 90 02              a1 = sp + 0x290
184640: 50 20 06 0b ba 7e fd     ra = 2822, jump @1503
      :                          @12539 [@dyn 1411]
184647: 82 1a 40 02              a3 = u64 [sp + 0x240]
184651: 7b 1a 60                 u64 [sp + 0x60] = a3
184654: 82 1b 48 02              a4 = u64 [sp + 0x248]
184658: 82 16 38 02              s1 = u64 [sp + 0x238]
184662: 33 07 02                 a0 = 0x2
184665: 33 08                    a1 = 0
184667: 33 09                    a2 = 0
184669: 33 00 08 0b              ra = 0xb08
184673: 0a 64                    ecalli 100 // 'log'
184675: 01                       fallthrough
      :                          @12540 [@dyn 1412]
184676: 82 1c 60                 a5 = u64 [sp + 0x60]
184679: 82 17 68                 a0 = u64 [sp + 0x68]
184682: c8 67 07                 a0 = a0 + s1
184685: 53 37 00 00 ff 25        jump @12546 if a0 <u 4294901760
      :                          @12541
184691: 33 07 c0 22 03           a0 = 0x322c0
184696: 95 77 00 00 01           a0 = a0 + 0x10000
184701: 01                       fallthrough
      :                          @12542
184702: 82 78                    a1 = u64 [a0]
184704: c9 87 09                 a2 = a0 - a1
184707: ab c9 0f                 jump @12546 if a2 != a5
      :                          @12543
184710: c9 68 09                 a2 = a1 - s1
184713: 01                       fallthrough
      :                          @12544
184714: 82 7a                    a3 = u64 [a0]
184716: ab 8a f2                 jump @12542 if a3 != a1
      :                          @12545
184719: 7b 79                    u64 [a0] = a2
184721: 01                       fallthrough
      :                          @12546
184722: 82 18 08 02              a1 = u64 [sp + 0x208]
184726: 51 08 30                 jump @12553 if a1 == 0
      :                          @12547
184729: 56 28 aa 0a 2d           jump @12553 if a1 >u 2730
      :                          @12548
184734: 82 17 10 02              a0 = u64 [sp + 0x210]
184738: 96 88 e8                 a1 = a1 * 0xffffffffffffffe8
184741: 33 09 c0 22 03           a2 = 0x322c0
184746: 95 99 00 00 01           a2 = a2 + 0x10000
184751: 01                       fallthrough
      :                          @12549
184752: 82 9a                    a3 = u64 [a2]
184754: c9 a9 0b                 a4 = a2 - a3
184757: ab 7b 11                 jump @12553 if a4 != a0
      :                          @12550
184760: c8 8a 0b                 a4 = a3 + a1
184763: 01                       fallthrough
      :                          @12551
184764: 82 9c                    a5 = u64 [a2]
184766: ab ac f2                 jump @12549 if a5 != a3
      :                          @12552
184769: 7b 9b                    u64 [a2] = a4
184771: 33 06                    s1 = 0
184773: 01                       fallthrough
      :                          @12553
184774: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
184778: 82 12 70                 t0 = u64 [sp + 0x70]
184781: 51 08 30                 jump @12560 if a1 == 0
      :                          @12554
184784: 56 28 00 10 2d           jump @12560 if a1 >u 4096
      :                          @12555
184789: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
184793: 97 88 04                 a1 = a1 << 0x4
184796: 33 09 c0 22 03           a2 = 0x322c0
184801: 95 99 00 00 01           a2 = a2 + 0x10000
184806: 01                       fallthrough
      :                          @12556
184807: 82 9a                    a3 = u64 [a2]
184809: c9 a9 0b                 a4 = a2 - a3
184812: ab 7b 11                 jump @12560 if a4 != a0
      :                          @12557
184815: c9 8a 0b                 a4 = a3 - a1
184818: 01                       fallthrough
      :                          @12558
184819: 82 9c                    a5 = u64 [a2]
184821: ab ac f2                 jump @12556 if a5 != a3
      :                          @12559
184824: 7b 9b                    u64 [a2] = a4
184826: 33 06                    s1 = 0
184828: 01                       fallthrough
      :                          @12560
184829: 82 17 20 01              a0 = u64 [sp + 0x120]
184833: 51 07 82 10              jump @12868 if a0 == 0
      :                          @12561
184837: 56 27 00 10 7e 10        jump @12868 if a0 >u 4096
      :                          @12562
184843: 97 77 04                 a0 = a0 << 0x4
184846: 33 08 c0 22 03           a1 = 0x322c0
184851: 95 88 00 00 01           a1 = a1 + 0x10000
184856: 01                       fallthrough
      :                          @12563
184857: 82 89                    a2 = u64 [a1]
184859: c9 98 0a                 a3 = a1 - a2
184862: ab 2a 65 10              jump @12868 if a3 != t0
      :                          @12564
184866: c9 79 0a                 a3 = a2 - a0
184869: 01                       fallthrough
      :                          @12565
184870: 82 8b                    a4 = u64 [a1]
184872: ab 9b f1                 jump @12563 if a4 != a2
      :                          @12566
184875: 7b 8a                    u64 [a1] = a3
184877: 33 0c                    a5 = 0
184879: 01                       fallthrough
      :                          @12567
184880: ab 9b e9                 jump @12563 if a4 != a2
      :                          @12568
184883: 28 50 10                 jump @12868
      :                          @12569
184886: 82 18 b8 01              a1 = u64 [sp + 0x1b8]
184890: 82 19 c0 01              a2 = u64 [sp + 0x1c0]
184894: 95 17 20 01              a0 = sp + 0x120
184898: 7b 18 60                 u64 [sp + 0x60] = a1
184901: 7b 1b 70                 u64 [sp + 0x70] = a4
184904: 50 20 0a 0b f2 8d fe     ra = 2826, jump @7177
      :                          @12570 [@dyn 1413]
184911: 95 17 e0 01              a0 = sp + 0x1e0
184915: 82 18 70                 a1 = u64 [sp + 0x70]
184918: 64 69                    a2 = s1
184920: 50 20 0c 0b e2 8d fe     ra = 2828, jump @7177
      :                          @12571 [@dyn 1414]
184927: 82 18 28 01              a1 = u64 [sp + 0x128]
184931: 82 19 30 01              a2 = u64 [sp + 0x130]
184935: 82 1a e8 01              a3 = u64 [sp + 0x1e8]
184939: 82 1b f0 01              a4 = u64 [sp + 0x1f0]
184943: 95 17 08 02              a0 = sp + 0x208
184947: 95 16 08 02              s1 = sp + 0x208
184951: 7b 18 58                 u64 [sp + 0x58] = a1
184954: 7b 1a 48                 u64 [sp + 0x48] = a3
184957: 50 20 0e 0b c3 92 fe     ra = 2830, jump @7266
      :                          @12572 [@dyn 1415]
184964: 7b 16 10 01              u64 [sp + 0x110] = s1
184968: 33 07 2c 02              a0 = 0x22c
184972: 7b 17 18 01              u64 [sp + 0x118] = a0
184976: 33 07 50 16 01           a0 = 0x11650
184981: 7b 17 90 02              u64 [sp + 0x290] = a0
184985: 49 21 98 02 01           u64 [sp + 664] = 0x1
184990: 49 21 b0 02              u64 [sp + 688] = 0
184994: 95 18 10 01              a1 = sp + 0x110
184998: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
185002: 49 21 a8 02 01           u64 [sp + 680] = 0x1
185007: 95 17 38 02              a0 = sp + 0x238
185011: 95 18 90 02              a1 = sp + 0x290
185015: 50 20 10 0b 43 7d fd     ra = 2832, jump @1503
      :                          @12573 [@dyn 1416]
185022: 82 1a 40 02              a3 = u64 [sp + 0x240]
185026: 7b 1a 40                 u64 [sp + 0x40] = a3
185029: 82 1b 48 02              a4 = u64 [sp + 0x248]
185033: 82 16 38 02              s1 = u64 [sp + 0x238]
185037: 33 07 02                 a0 = 0x2
185040: 33 08                    a1 = 0
185042: 33 09                    a2 = 0
185044: 33 00 12 0b              ra = 0xb12
185048: 0a 64                    ecalli 100 // 'log'
185050: 01                       fallthrough
      :                          @12574 [@dyn 1417]
185051: 82 1c 40                 a5 = u64 [sp + 0x40]
185054: 82 17 68                 a0 = u64 [sp + 0x68]
185057: c8 67 07                 a0 = a0 + s1
185060: 53 37 00 00 ff 27        jump @12580 if a0 <u 4294901760
      :                          @12575
185066: 33 07 c0 22 03           a0 = 0x322c0
185071: 95 77 00 00 01           a0 = a0 + 0x10000
185076: 01                       fallthrough
      :                          @12576
185077: 82 78                    a1 = u64 [a0]
185079: c9 87 09                 a2 = a0 - a1
185082: ab c9 11                 jump @12580 if a2 != a5
      :                          @12577
185085: c9 68 09                 a2 = a1 - s1
185088: 01                       fallthrough
      :                          @12578
185089: 82 7a                    a3 = u64 [a0]
185091: ab 8a f2                 jump @12576 if a3 != a1
      :                          @12579
185094: 7b 79                    u64 [a0] = a2
185096: 33 0b                    a4 = 0
185098: 01                       fallthrough
      :                          @12580
185099: 82 18 08 02              a1 = u64 [sp + 0x208]
185103: 51 08 2e                 jump @12587 if a1 == 0
      :                          @12581
185106: 56 28 00 10 2b           jump @12587 if a1 >u 4096
      :                          @12582
185111: 82 17 10 02              a0 = u64 [sp + 0x210]
185115: 97 88 04                 a1 = a1 << 0x4
185118: 33 09 c0 22 03           a2 = 0x322c0
185123: 95 99 00 00 01           a2 = a2 + 0x10000
185128: 01                       fallthrough
      :                          @12583
185129: 82 9a                    a3 = u64 [a2]
185131: c9 a9 0b                 a4 = a2 - a3
185134: ab 7b 0f                 jump @12587 if a4 != a0
      :                          @12584
185137: c9 8a 0b                 a4 = a3 - a1
185140: 01                       fallthrough
      :                          @12585
185141: 82 9c                    a5 = u64 [a2]
185143: ab ac f2                 jump @12583 if a5 != a3
      :                          @12586
185146: 7b 9b                    u64 [a2] = a4
185148: 01                       fallthrough
      :                          @12587
185149: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
185153: 82 12 60                 t0 = u64 [sp + 0x60]
185156: 82 13 70                 t1 = u64 [sp + 0x70]
185159: 82 14 58                 t2 = u64 [sp + 0x58]
185162: 82 16 48                 s1 = u64 [sp + 0x48]
185165: 51 07 2c                 jump @12594 if a0 == 0
      :                          @12588
185168: 56 27 00 10 29           jump @12594 if a0 >u 4096
      :                          @12589
185173: 97 77 04                 a0 = a0 << 0x4
185176: 33 08 c0 22 03           a1 = 0x322c0
185181: 95 88 00 00 01           a1 = a1 + 0x10000
185186: 01                       fallthrough
      :                          @12590
185187: 82 89                    a2 = u64 [a1]
185189: c9 98 0a                 a3 = a1 - a2
185192: ab 6a 11                 jump @12594 if a3 != s1
      :                          @12591
185195: c9 79 0a                 a3 = a2 - a0
185198: 01                       fallthrough
      :                          @12592
185199: 82 8b                    a4 = u64 [a1]
185201: ab 9b f2                 jump @12590 if a4 != a2
      :                          @12593
185204: 7b 8a                    u64 [a1] = a3
185206: 33 0c                    a5 = 0
185208: 01                       fallthrough
      :                          @12594
185209: 82 17 20 01              a0 = u64 [sp + 0x120]
185213: 51 07 2c                 jump @12601 if a0 == 0
      :                          @12595
185216: 56 27 00 10 29           jump @12601 if a0 >u 4096
      :                          @12596
185221: 97 77 04                 a0 = a0 << 0x4
185224: 33 08 c0 22 03           a1 = 0x322c0
185229: 95 88 00 00 01           a1 = a1 + 0x10000
185234: 01                       fallthrough
      :                          @12597
185235: 82 89                    a2 = u64 [a1]
185237: c9 98 0a                 a3 = a1 - a2
185240: ab 4a 11                 jump @12601 if a3 != t2
      :                          @12598
185243: c9 79 0a                 a3 = a2 - a0
185246: 01                       fallthrough
      :                          @12599
185247: 82 8b                    a4 = u64 [a1]
185249: ab 9b f2                 jump @12597 if a4 != a2
      :                          @12600
185252: 7b 8a                    u64 [a1] = a3
185254: 33 0c                    a5 = 0
185256: 01                       fallthrough
      :                          @12601
185257: 82 17 c8 01              a0 = u64 [sp + 0x1c8]
185261: 51 07 2c                 jump @12608 if a0 == 0
      :                          @12602
185264: 56 27 00 10 29           jump @12608 if a0 >u 4096
      :                          @12603
185269: 97 77 04                 a0 = a0 << 0x4
185272: 33 08 c0 22 03           a1 = 0x322c0
185277: 95 88 00 00 01           a1 = a1 + 0x10000
185282: 01                       fallthrough
      :                          @12604
185283: 82 89                    a2 = u64 [a1]
185285: c9 98 0a                 a3 = a1 - a2
185288: ab 3a 11                 jump @12608 if a3 != t1
      :                          @12605
185291: c9 79 0a                 a3 = a2 - a0
185294: 01                       fallthrough
      :                          @12606
185295: 82 8b                    a4 = u64 [a1]
185297: ab 9b f2                 jump @12604 if a4 != a2
      :                          @12607
185300: 7b 8a                    u64 [a1] = a3
185302: 33 0c                    a5 = 0
185304: 01                       fallthrough
      :                          @12608
185305: 82 17 b0 01              a0 = u64 [sp + 0x1b0]
185309: 51 07 a6 0e              jump @12868 if a0 == 0
      :                          @12609
185313: 56 27 00 10 a2 0e        jump @12868 if a0 >u 4096
      :                          @12610
185319: 97 77 04                 a0 = a0 << 0x4
185322: 33 08 c0 22 03           a1 = 0x322c0
185327: 95 88 00 00 01           a1 = a1 + 0x10000
185332: 01                       fallthrough
      :                          @12611
185333: 82 89                    a2 = u64 [a1]
185335: c9 98 0a                 a3 = a1 - a2
185338: ab 2a 89 0e              jump @12868 if a3 != t0
      :                          @12612
185342: c9 79 0a                 a3 = a2 - a0
185345: 01                       fallthrough
      :                          @12613
185346: 82 8b                    a4 = u64 [a1]
185348: ab 9b f1                 jump @12611 if a4 != a2
      :                          @12614
185351: 7b 8a                    u64 [a1] = a3
185353: 33 0c                    a5 = 0
185355: 01                       fallthrough
      :                          @12615
185356: ab 9b e9                 jump @12611 if a4 != a2
      :                          @12616
185359: 28 74 0e                 jump @12868
      :                          @12617
185362: 95 17 e0 01              a0 = sp + 0x1e0
185366: 7b 1b 70                 u64 [sp + 0x70] = a4
185369: 64 b8                    a1 = a4
185371: 50 20 14 0b 1f 8c fe     ra = 2836, jump @7177
      :                          @12618 [@dyn 1418]
185378: 95 17 08 02              a0 = sp + 0x208
185382: 95 18 e0 01              a1 = sp + 0x1e0
185386: 50 20 16 0b 1a 92 fe     ra = 2838, jump @7285
      :                          @12619 [@dyn 1419]
185393: 82 18 18 02              a1 = u64 [sp + 0x218]
185397: 82 17 10 02              a0 = u64 [sp + 0x210]
185401: 33 09 18                 a2 = 0x18
185404: ca 98 08                 a1 = a1 * a2
185407: c8 78 08                 a1 = a1 + a0
185410: 50 20 18 0b 48 9f fd     ra = 2840, jump @2149
      :                          @12620 [@dyn 1420]
185417: 98 77 01                 a0 = a0 >> 0x1
185420: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
185424: 95 17 b0 01              a0 = sp + 0x1b0
185428: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
185432: 33 07 2c 0c              a0 = 0xc2c
185436: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
185440: 33 07 78 16 01           a0 = 0x11678
185445: 7b 17 90 02              u64 [sp + 0x290] = a0
185449: 49 21 98 02 01           u64 [sp + 664] = 0x1
185454: 49 21 b0 02              u64 [sp + 688] = 0
185458: 95 18 c8 01              a1 = sp + 0x1c8
185462: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
185466: 49 21 a8 02 01           u64 [sp + 680] = 0x1
185471: 95 17 38 02              a0 = sp + 0x238
185475: 95 18 90 02              a1 = sp + 0x290
185479: 50 20 1a 0b 73 7b fd     ra = 2842, jump @1503
      :                          @12621 [@dyn 1421]
185486: 82 1a 40 02              a3 = u64 [sp + 0x240]
185490: 7b 1a 60                 u64 [sp + 0x60] = a3
185493: 82 1b 48 02              a4 = u64 [sp + 0x248]
185497: 82 16 38 02              s1 = u64 [sp + 0x238]
185501: 33 07 02                 a0 = 0x2
185504: 33 08                    a1 = 0
185506: 33 09                    a2 = 0
185508: 33 00 1c 0b              ra = 0xb1c
185512: 0a 64                    ecalli 100 // 'log'
185514: 01                       fallthrough
      :                          @12622 [@dyn 1422]
185515: 82 1c 60                 a5 = u64 [sp + 0x60]
185518: 82 17 68                 a0 = u64 [sp + 0x68]
185521: c8 67 07                 a0 = a0 + s1
185524: 33 08 00 00 ff           a1 = 0xffffffffffff0000
185529: ac 87 2f                 jump @12628 if a0 <u a1
      :                          @12623
185532: 33 07 c0 22 03           a0 = 0x322c0
185537: 95 77 00 00 01           a0 = a0 + 0x10000
185542: 01                       fallthrough
      :                          @12624
185543: 82 78                    a1 = u64 [a0]
185545: c9 87 09                 a2 = a0 - a1
185548: ab c9 1c                 jump @12628 if a2 != a5
      :                          @12625
185551: c9 68 09                 a2 = a1 - s1
185554: 01                       fallthrough
      :                          @12626
185555: 82 7a                    a3 = u64 [a0]
185557: ab 8a f2                 jump @12624 if a3 != a1
      :                          @12627
185560: 7b 79                    u64 [a0] = a2
185562: 33 0b                    a4 = 0
185564: 95 17 08 02              a0 = sp + 0x208
185568: 33 00 1e 0b              ra = 0xb1e
185572: 28 94 37 fd              jump @221
      :                          @12628
185576: 95 17 08 02              a0 = sp + 0x208
185580: 50 20 1e 0b 8c 37 fd     ra = 2846, jump @221
      :                          @12629 [@dyn 1423]
185587: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
185591: 51 08 2e                 jump @12636 if a1 == 0
      :                          @12630
185594: 56 28 00 10 2b           jump @12636 if a1 >u 4096
      :                          @12631
185599: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
185603: 97 88 04                 a1 = a1 << 0x4
185606: 33 09 c0 22 03           a2 = 0x322c0
185611: 95 99 00 00 01           a2 = a2 + 0x10000
185616: 01                       fallthrough
      :                          @12632
185617: 82 9a                    a3 = u64 [a2]
185619: c9 a9 0b                 a4 = a2 - a3
185622: ab 7b 0f                 jump @12636 if a4 != a0
      :                          @12633
185625: c9 8a 0b                 a4 = a3 - a1
185628: 01                       fallthrough
      :                          @12634
185629: 82 9c                    a5 = u64 [a2]
185631: ab ac f2                 jump @12632 if a5 != a3
      :                          @12635
185634: 7b 9b                    u64 [a2] = a4
185636: 01                       fallthrough
      :                          @12636
185637: 82 17 20 01              a0 = u64 [sp + 0x120]
185641: 82 16 70                 s1 = u64 [sp + 0x70]
185644: 51 07 57 0d              jump @12868 if a0 == 0
      :                          @12637
185648: 56 27 00 10 53 0d        jump @12868 if a0 >u 4096
      :                          @12638
185654: 97 77 04                 a0 = a0 << 0x4
185657: 33 08 c0 22 03           a1 = 0x322c0
185662: 95 88 00 00 01           a1 = a1 + 0x10000
185667: 01                       fallthrough
      :                          @12639
185668: 82 89                    a2 = u64 [a1]
185670: c9 98 0a                 a3 = a1 - a2
185673: ab 6a 3a 0d              jump @12868 if a3 != s1
      :                          @12640
185677: c9 79 0a                 a3 = a2 - a0
185680: 01                       fallthrough
      :                          @12641
185681: 82 8b                    a4 = u64 [a1]
185683: ab 9b f1                 jump @12639 if a4 != a2
      :                          @12642
185686: 7b 8a                    u64 [a1] = a3
185688: 33 0c                    a5 = 0
185690: 01                       fallthrough
      :                          @12643
185691: ab 9b e9                 jump @12639 if a4 != a2
      :                          @12644
185694: 28 25 0d                 jump @12868
      :                          @12645
185697: 3a 08 78 12 03           a1 = u64 [0x31278]
185702: 97 89 0d                 a2 = a1 << 0xd
185705: d3 98 08                 a1 = a1 ^ a2
185708: 98 89 07                 a2 = a1 >> 0x7
185711: d3 98 08                 a1 = a1 ^ a2
185714: 97 89 11                 a2 = a1 << 0x11
185717: d3 98 08                 a1 = a1 ^ a2
185720: 3e 08 78 12 03           u64 [0x31278] = a1
185725: ca 38 07                 a0 = a1 * t1
185728: 64 29                    a2 = t0
185730: cd 27 07                 a0 = a0 %u t0
185733: 7b 17 48                 u64 [sp + 0x48] = a0
185736: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
185740: 64 68                    a1 = s1
185742: 7b 1a 58                 u64 [sp + 0x58] = a3
185745: 7b 1c 60                 u64 [sp + 0x60] = a5
185748: 33 00 20 0b              ra = 0xb20
185752: 95 11 c0                 sp = sp + 0xffffffffffffffc0
185755: 7b 10 38                 u64 [sp + 0x38] = ra
185758: 7b 15 30                 u64 [sp + 0x30] = s0
185761: 7b 16 28                 u64 [sp + 0x28] = s1
185764: 33 0c 78 12 03           a5 = 0x31278
185769: 3a 06 78 12 03           s1 = u64 [0x31278]
185774: 7b 1b 08                 u64 [sp + 0x8] = a4
185777: 64 95                    s0 = a2
185779: 7b 17                    u64 [sp] = a0
185781: 97 67 0d                 a0 = s1 << 0xd
185784: d3 67 07                 a0 = a0 ^ s1
185787: 98 79 07                 a2 = a0 >> 0x7
185790: d3 97 07                 a0 = a0 ^ a2
185793: 97 79 11                 a2 = a0 << 0x11
185796: d3 97 07                 a0 = a0 ^ a2
185799: 3a 09 58 11 03           a2 = u64 [0x31158]
185804: 3e 07 78 12 03           u64 [0x31278] = a0
185809: 95 5b ff                 a4 = s0 + 0xffffffffffffffff
185812: ca 97 07                 a0 = a0 * a2
185815: cd b7 09                 a2 = a0 %u a4
185818: 95 99 01                 a2 = a2 + 0x1
185821: 33 06 01                 s1 = 0x1
185824: 64 97                    a0 = a2
185826: 28 f2 b6 fe              jump @7985
      :                          @12646 [@dyn 1424]
185830: 64 79                    a2 = a0
185832: 64 8a                    a3 = a1
185834: 7b 17 20 01              u64 [sp + 0x120] = a0
185838: 7b 18 e0 01              u64 [sp + 0x1e0] = a1
185842: 82 17 48                 a0 = u64 [sp + 0x48]
185845: 64 98                    a1 = a2
185847: 64 a9                    a2 = a3
185849: 64 6a                    a3 = s1
185851: 82 1b 70                 a4 = u64 [sp + 0x70]
185854: 82 1c 58                 a5 = u64 [sp + 0x58]
185857: 82 14 60                 t2 = u64 [sp + 0x60]
185860: 50 20 22 0b 45 b7 fe     ra = 2850, jump @7994
      :                          @12647 [@dyn 1425]
185867: 78 17 b0 01              u8 [sp + 0x1b0] = a0
185871: 95 17 c8 01              a0 = sp + 0x1c8
185875: 7b 17 90 02              u64 [sp + 0x290] = a0
185879: 33 07 2c 0c              a0 = 0xc2c
185883: 7b 17 98 02              u64 [sp + 0x298] = a0
185887: 95 18 20 01              a1 = sp + 0x120
185891: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
185895: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
185899: 95 18 e0 01              a1 = sp + 0x1e0
185903: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
185907: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
185911: 95 17 b0 01              a0 = sp + 0x1b0
185915: 7b 17 c0 02              u64 [sp + 0x2c0] = a0
185919: 33 07 84 0c              a0 = 0xc84
185923: 7b 17 c8 02              u64 [sp + 0x2c8] = a0
185927: 33 07 50 1a 01           a0 = 0x11a50
185932: 7b 17 38 02              u64 [sp + 0x238] = a0
185936: 49 21 40 02 04           u64 [sp + 576] = 0x4
185941: 49 21 58 02              u64 [sp + 600] = 0
185945: 95 18 90 02              a1 = sp + 0x290
185949: 7b 18 48 02              u64 [sp + 0x248] = a1
185953: 49 21 50 02 04           u64 [sp + 592] = 0x4
185958: 95 17 08 02              a0 = sp + 0x208
185962: 95 18 38 02              a1 = sp + 0x238
185966: 50 20 24 0b 8c 79 fd     ra = 2852, jump @1503
      :                          @12648 [@dyn 1426]
185973: 82 16 10 02              s1 = u64 [sp + 0x210]
185977: 82 1b 18 02              a4 = u64 [sp + 0x218]
185981: 82 17 08 02              a0 = u64 [sp + 0x208]
185985: 7b 17 70                 u64 [sp + 0x70] = a0
185988: 33 07 02                 a0 = 0x2
185991: 33 08                    a1 = 0
185993: 33 09                    a2 = 0
185995: 64 6a                    a3 = s1
185997: 33 00 26 0b              ra = 0xb26
186001: 0a 64                    ecalli 100 // 'log'
186003: 01                       fallthrough
      :                          @12649 [@dyn 1427]
186004: 82 1c 70                 a5 = u64 [sp + 0x70]
186007: 82 17 68                 a0 = u64 [sp + 0x68]
186010: c8 c7 07                 a0 = a0 + a5
186013: 53 37 00 00 ff e6 0b     jump @12868 if a0 <u 4294901760
      :                          @12650
186020: 33 07 c0 22 03           a0 = 0x322c0
186025: 95 77 00 00 01           a0 = a0 + 0x10000
186030: 01                       fallthrough
      :                          @12651
186031: 82 78                    a1 = u64 [a0]
186033: c9 87 09                 a2 = a0 - a1
186036: ab 69 cf 0b              jump @12868 if a2 != s1
      :                          @12652
186040: c9 c8 09                 a2 = a1 - a5
186043: 01                       fallthrough
      :                          @12653
186044: 82 7a                    a3 = u64 [a0]
186046: ab 8a f1                 jump @12651 if a3 != a1
      :                          @12654
186049: 7b 79                    u64 [a0] = a2
186051: 33 0b                    a4 = 0
186053: 01                       fallthrough
      :                          @12655
186054: ab 8a e9                 jump @12651 if a3 != a1
      :                          @12656
186057: 28 ba 0b                 jump @12868
      :                          @12657
186060: 82 18 e8 01              a1 = u64 [sp + 0x1e8]
186064: 95 17 90 02              a0 = sp + 0x290
186068: 95 16 90 02              s1 = sp + 0x290
186072: 50 20 28 0b a9 88 fe     ra = 2856, jump @7166
      :                          @12658 [@dyn 1428]
186079: 82 17 90 02              a0 = u64 [sp + 0x290]
186083: 82 18 98 02              a1 = u64 [sp + 0x298]
186087: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
186091: 82 17 a0 02              a0 = u64 [sp + 0x2a0]
186095: 82 19 a8 02              a2 = u64 [sp + 0x2a8]
186099: 82 1a b0 02              a3 = u64 [sp + 0x2b0]
186103: 7b 18 d0 01              u64 [sp + 0x1d0] = a1
186107: 7b 17 20 01              u64 [sp + 0x120] = a0
186111: 7b 19 28 01              u64 [sp + 0x128] = a2
186115: 7b 1a b0 01              u64 [sp + 0x1b0] = a3
186119: 95 17 e0 01              a0 = sp + 0x1e0
186123: 7b 17 90 02              u64 [sp + 0x290] = a0
186127: 33 07 2c 02              a0 = 0x22c
186131: 7b 17 98 02              u64 [sp + 0x298] = a0
186135: 95 17 c8 01              a0 = sp + 0x1c8
186139: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
186143: 33 07 9e 01              a0 = 0x19e
186147: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
186151: 95 18 20 01              a1 = sp + 0x120
186155: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
186159: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
186163: 95 17 b0 01              a0 = sp + 0x1b0
186167: 7b 17 c0 02              u64 [sp + 0x2c0] = a0
186171: 33 07 2c 0c              a0 = 0xc2c
186175: 7b 17 c8 02              u64 [sp + 0x2c8] = a0
186179: 33 07 e8 1b 01           a0 = 0x11be8
186184: 7b 17 38 02              u64 [sp + 0x238] = a0
186188: 49 21 40 02 04           u64 [sp + 576] = 0x4
186193: 49 21 58 02              u64 [sp + 600] = 0
186197: 7b 16 48 02              u64 [sp + 0x248] = s1
186201: 49 21 50 02 04           u64 [sp + 592] = 0x4
186206: 95 17 08 02              a0 = sp + 0x208
186210: 95 18 38 02              a1 = sp + 0x238
186214: 50 20 2a 0b 94 78 fd     ra = 2858, jump @1503
      :                          @12659 [@dyn 1429]
186221: 82 16 10 02              s1 = u64 [sp + 0x210]
186225: 82 1b 18 02              a4 = u64 [sp + 0x218]
186229: 82 17 08 02              a0 = u64 [sp + 0x208]
186233: 7b 17 70                 u64 [sp + 0x70] = a0
186236: 33 07 02                 a0 = 0x2
186239: 33 08                    a1 = 0
186241: 33 09                    a2 = 0
186243: 64 6a                    a3 = s1
186245: 33 00 2c 0b              ra = 0xb2c
186249: 0a 64                    ecalli 100 // 'log'
186251: 01                       fallthrough
      :                          @12660 [@dyn 1430]
186252: 82 1c 70                 a5 = u64 [sp + 0x70]
186255: 82 17 68                 a0 = u64 [sp + 0x68]
186258: c8 c7 07                 a0 = a0 + a5
186261: 53 37 00 00 ff 25        jump @12666 if a0 <u 4294901760
      :                          @12661
186267: 33 07 c0 22 03           a0 = 0x322c0
186272: 95 77 00 00 01           a0 = a0 + 0x10000
186277: 01                       fallthrough
      :                          @12662
186278: 82 78                    a1 = u64 [a0]
186280: c9 87 09                 a2 = a0 - a1
186283: ab 69 0f                 jump @12666 if a2 != s1
      :                          @12663
186286: c9 c8 09                 a2 = a1 - a5
186289: 01                       fallthrough
      :                          @12664
186290: 82 7a                    a3 = u64 [a0]
186292: ab 8a f2                 jump @12662 if a3 != a1
      :                          @12665
186295: 7b 79                    u64 [a0] = a2
186297: 01                       fallthrough
      :                          @12666
186298: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
186302: 51 08 c5 0a              jump @12868 if a1 == 0
      :                          @12667
186306: 56 28 00 10 c1 0a        jump @12868 if a1 >u 4096
      :                          @12668
186312: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
186316: 97 88 04                 a1 = a1 << 0x4
186319: 33 09 c0 22 03           a2 = 0x322c0
186324: 95 99 00 00 01           a2 = a2 + 0x10000
186329: 01                       fallthrough
      :                          @12669
186330: 82 9a                    a3 = u64 [a2]
186332: c9 a9 0b                 a4 = a2 - a3
186335: ab 7b a4 0a              jump @12868 if a4 != a0
      :                          @12670
186339: c9 8a 0b                 a4 = a3 - a1
186342: 01                       fallthrough
      :                          @12671
186343: 82 9c                    a5 = u64 [a2]
186345: ab ac f1                 jump @12669 if a5 != a3
      :                          @12672
186348: 7b 9b                    u64 [a2] = a4
186350: 33 06                    s1 = 0
186352: 01                       fallthrough
      :                          @12673
186353: ab ac e9                 jump @12669 if a5 != a3
      :                          @12674
186356: 28 8f 0a                 jump @12868
      :                          @12675
186359: 7b 19 20 01              u64 [sp + 0x120] = a2
186363: 33 00 2e 0b              ra = 0xb2e
186367: 95 11 d8                 sp = sp + 0xffffffffffffffd8
186370: 7b 10 20                 u64 [sp + 0x20] = ra
186373: 7b 15 18                 u64 [sp + 0x18] = s0
186376: 64 85                    s0 = a1
186378: 64 78                    a1 = a0
186380: 64 17                    a0 = sp
186382: 64 59                    a2 = s0
186384: 33 00 9e 02              ra = 0x29e
186388: 28 c9 b3 fd              jump @2421
      :                          @12676 [@dyn 1431]
186392: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
186396: 7b 18 e8 01              u64 [sp + 0x1e8] = a1
186400: 95 17 10 01              a0 = sp + 0x110
186404: 7b 17 90 02              u64 [sp + 0x290] = a0
186408: 33 07 2c 0c              a0 = 0xc2c
186412: 7b 17 98 02              u64 [sp + 0x298] = a0
186416: 95 18 b0 01              a1 = sp + 0x1b0
186420: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
186424: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
186428: 95 18 c8 01              a1 = sp + 0x1c8
186432: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
186436: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
186440: 95 18 20 01              a1 = sp + 0x120
186444: 7b 18 c0 02              u64 [sp + 0x2c0] = a1
186448: 7b 17 c8 02              u64 [sp + 0x2c8] = a0
186452: 95 17 e0 01              a0 = sp + 0x1e0
186456: 7b 17 d0 02              u64 [sp + 0x2d0] = a0
186460: 33 07 80 02              a0 = 0x280
186464: 7b 17 d8 02              u64 [sp + 0x2d8] = a0
186468: 33 07 b0 25 01           a0 = 0x125b0
186473: 7b 17 38 02              u64 [sp + 0x238] = a0
186477: 49 21 40 02 05           u64 [sp + 576] = 0x5
186482: 49 21 58 02              u64 [sp + 600] = 0
186486: 95 18 90 02              a1 = sp + 0x290
186490: 7b 18 48 02              u64 [sp + 0x248] = a1
186494: 49 21 50 02 05           u64 [sp + 592] = 0x5
186499: 95 17 08 02              a0 = sp + 0x208
186503: 95 18 38 02              a1 = sp + 0x238
186507: 50 20 30 0b 6f 77 fd     ra = 2864, jump @1503
      :                          @12677 [@dyn 1432]
186514: 82 16 10 02              s1 = u64 [sp + 0x210]
186518: 82 1b 18 02              a4 = u64 [sp + 0x218]
186522: 82 17 08 02              a0 = u64 [sp + 0x208]
186526: 7b 17 70                 u64 [sp + 0x70] = a0
186529: 33 07 02                 a0 = 0x2
186532: 33 08                    a1 = 0
186534: 33 09                    a2 = 0
186536: 64 6a                    a3 = s1
186538: 33 00 32 0b              ra = 0xb32
186542: 0a 64                    ecalli 100 // 'log'
186544: 01                       fallthrough
      :                          @12678 [@dyn 1433]
186545: 82 1c 70                 a5 = u64 [sp + 0x70]
186548: 82 17 68                 a0 = u64 [sp + 0x68]
186551: c8 c7 07                 a0 = a0 + a5
186554: 53 37 00 00 ff c9 09     jump @12868 if a0 <u 4294901760
      :                          @12679
186561: 33 07 c0 22 03           a0 = 0x322c0
186566: 95 77 00 00 01           a0 = a0 + 0x10000
186571: 01                       fallthrough
      :                          @12680
186572: 82 78                    a1 = u64 [a0]
186574: c9 87 09                 a2 = a0 - a1
186577: ab 69 b2 09              jump @12868 if a2 != s1
      :                          @12681
186581: c9 c8 09                 a2 = a1 - a5
186584: 01                       fallthrough
      :                          @12682
186585: 82 7a                    a3 = u64 [a0]
186587: ab 8a f1                 jump @12680 if a3 != a1
      :                          @12683
186590: 7b 79                    u64 [a0] = a2
186592: 33 0b                    a4 = 0
186594: 01                       fallthrough
      :                          @12684
186595: ab 8a e9                 jump @12680 if a3 != a1
      :                          @12685
186598: 28 9d 09                 jump @12868
      :                          @12686
186601: 95 17 08 02              a0 = sp + 0x208
186605: 95 18 e0 01              a1 = sp + 0x1e0
186609: 95 16 08 02              s1 = sp + 0x208
186613: 33 00 34 0b              ra = 0xb34
186617: 95 11 a0                 sp = sp + 0xffffffffffffffa0
186620: 7b 10 58                 u64 [sp + 0x58] = ra
186623: 7b 15 50                 u64 [sp + 0x50] = s0
186626: 7b 16 48                 u64 [sp + 0x48] = s1
186629: 64 85                    s0 = a1
186631: 33 09 c0 22 03           a2 = 0x322c0
186636: 33 06 00 00 01           s1 = 0x10000
186641: c8 69 09                 a2 = a2 + s1
186644: 28 de 59 fe              jump @6161
      :                          @12687 [@dyn 1434]
186648: 7b 16 20 01              u64 [sp + 0x120] = s1
186652: 33 07 34 02              a0 = 0x234
186656: 7b 17 28 01              u64 [sp + 0x128] = a0
186660: 33 07 00 2e 01           a0 = 0x12e00
186665: 7b 17 90 02              u64 [sp + 0x290] = a0
186669: 49 21 98 02 01           u64 [sp + 664] = 0x1
186674: 49 21 b0 02              u64 [sp + 688] = 0
186678: 95 18 20 01              a1 = sp + 0x120
186682: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
186686: 49 21 a8 02 01           u64 [sp + 680] = 0x1
186691: 95 17 38 02              a0 = sp + 0x238
186695: 95 18 90 02              a1 = sp + 0x290
186699: 50 20 36 0b af 76 fd     ra = 2870, jump @1503
      :                          @12688 [@dyn 1435]
186706: 82 16 40 02              s1 = u64 [sp + 0x240]
186710: 82 1b 48 02              a4 = u64 [sp + 0x248]
186714: 82 17 38 02              a0 = u64 [sp + 0x238]
186718: 7b 17 70                 u64 [sp + 0x70] = a0
186721: 33 07 02                 a0 = 0x2
186724: 33 08                    a1 = 0
186726: 33 09                    a2 = 0
186728: 64 6a                    a3 = s1
186730: 33 00 38 0b              ra = 0xb38
186734: 0a 64                    ecalli 100 // 'log'
186736: 01                       fallthrough
      :                          @12689 [@dyn 1436]
186737: 82 1c 70                 a5 = u64 [sp + 0x70]
186740: 82 17 68                 a0 = u64 [sp + 0x68]
186743: c8 c7 07                 a0 = a0 + a5
186746: 53 37 00 00 ff 27        jump @12695 if a0 <u 4294901760
      :                          @12690
186752: 33 07 c0 22 03           a0 = 0x322c0
186757: 95 77 00 00 01           a0 = a0 + 0x10000
186762: 01                       fallthrough
      :                          @12691
186763: 82 78                    a1 = u64 [a0]
186765: c9 87 09                 a2 = a0 - a1
186768: ab 69 11                 jump @12695 if a2 != s1
      :                          @12692
186771: c9 c8 09                 a2 = a1 - a5
186774: 01                       fallthrough
      :                          @12693
186775: 82 7a                    a3 = u64 [a0]
186777: ab 8a f2                 jump @12691 if a3 != a1
      :                          @12694
186780: 7b 79                    u64 [a0] = a2
186782: 33 0b                    a4 = 0
186784: 01                       fallthrough
      :                          @12695
186785: 82 18 08 02              a1 = u64 [sp + 0x208]
186789: 51 08 a7 05              jump @12803 if a1 == 0
      :                          @12696
186793: 56 28 00 20 a3 05        jump @12803 if a1 >u 8192
      :                          @12697
186799: 82 17 10 02              a0 = u64 [sp + 0x210]
186803: 97 88 03                 a1 = a1 << 0x3
186806: 33 09 c0 22 03           a2 = 0x322c0
186811: 95 99 00 00 01           a2 = a2 + 0x10000
186816: 01                       fallthrough
      :                          @12698
186817: 82 9a                    a3 = u64 [a2]
186819: c9 a9 0b                 a4 = a2 - a3
186822: ab 7b 86 05              jump @12803 if a4 != a0
      :                          @12699
186826: c9 8a 0b                 a4 = a3 - a1
186829: 01                       fallthrough
      :                          @12700
186830: 82 9c                    a5 = u64 [a2]
186832: ab ac f1                 jump @12698 if a5 != a3
      :                          @12701
186835: 7b 9b                    u64 [a2] = a4
186837: 33 06                    s1 = 0
186839: 01                       fallthrough
      :                          @12702
186840: ab ac e9                 jump @12698 if a5 != a3
      :                          @12703
186843: 28 71 05                 jump @12803
      :                          @12704 [@dyn 1437]
186846: 95 17 7f                 a0 = sp + 0x7f
186849: 7b 17 08 02              u64 [sp + 0x208] = a0
186853: 33 07 60 0c              a0 = 0xc60
186857: 7b 17 10 02              u64 [sp + 0x210] = a0
186861: 33 07 10 2e 01           a0 = 0x12e10
186866: 7b 17 90 02              u64 [sp + 0x290] = a0
186870: 49 21 98 02 01           u64 [sp + 664] = 0x1
186875: 49 21 b0 02              u64 [sp + 688] = 0
186879: 95 18 08 02              a1 = sp + 0x208
186883: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
186887: 49 21 a8 02 01           u64 [sp + 680] = 0x1
186892: 95 17 38 02              a0 = sp + 0x238
186896: 95 18 90 02              a1 = sp + 0x290
186900: 50 20 3c 0b e6 75 fd     ra = 2876, jump @1503
      :                          @12705 [@dyn 1438]
186907: 82 16 40 02              s1 = u64 [sp + 0x240]
186911: 82 1b 48 02              a4 = u64 [sp + 0x248]
186915: 82 17 38 02              a0 = u64 [sp + 0x238]
186919: 7b 17 70                 u64 [sp + 0x70] = a0
186922: 33 07 02                 a0 = 0x2
186925: 33 08                    a1 = 0
186927: 33 09                    a2 = 0
186929: 64 6a                    a3 = s1
186931: 33 00 3e 0b              ra = 0xb3e
186935: 0a 64                    ecalli 100 // 'log'
186937: 01                       fallthrough
      :                          @12706 [@dyn 1439]
186938: 82 1c 70                 a5 = u64 [sp + 0x70]
186941: 82 17 68                 a0 = u64 [sp + 0x68]
186944: c8 c7 07                 a0 = a0 + a5
186947: 53 37 00 00 ff 40 08     jump @12868 if a0 <u 4294901760
      :                          @12707
186954: 33 07 c0 22 03           a0 = 0x322c0
186959: 95 77 00 00 01           a0 = a0 + 0x10000
186964: 01                       fallthrough
      :                          @12708
186965: 82 78                    a1 = u64 [a0]
186967: c9 87 09                 a2 = a0 - a1
186970: ab 69 29 08              jump @12868 if a2 != s1
      :                          @12709
186974: c9 c8 09                 a2 = a1 - a5
186977: 01                       fallthrough
      :                          @12710
186978: 82 7a                    a3 = u64 [a0]
186980: ab 8a f1                 jump @12708 if a3 != a1
      :                          @12711
186983: 7b 79                    u64 [a0] = a2
186985: 33 0b                    a4 = 0
186987: 01                       fallthrough
      :                          @12712
186988: ab 8a e9                 jump @12708 if a3 != a1
      :                          @12713
186991: 28 14 08                 jump @12868
      :                          @12714
186994: 95 17 08 02              a0 = sp + 0x208
186998: 95 18 e0 01              a1 = sp + 0x1e0
187002: 95 16 08 02              s1 = sp + 0x208
187006: 33 00 40 0b              ra = 0xb40
187010: 95 11 f8 fe              sp = sp + 0xfffffffffffffef8
187014: 7b 10 00 01              u64 [sp + 0x100] = ra
187018: 7b 15 f8 00              u64 [sp + 0xf8] = s0
187022: 7b 16 f0 00              u64 [sp + 0xf0] = s1
187026: 7b 18 98 00              u64 [sp + 0x98] = a1
187030: 49 21 a0 00              u64 [sp + 160] = 0
187034: 49 21 a8 00 08           u64 [sp + 168] = 0x8
187039: 49 21 b0 00              u64 [sp + 176] = 0
187043: 49 21 b8 00              u64 [sp + 184] = 0
187047: 49 21 c0 00 08           u64 [sp + 192] = 0x8
187052: 49 21 c8 00              u64 [sp + 200] = 0
187056: 33 03 c0 22 03           t1 = 0x322c0
187061: 33 02 00 00 01           t0 = 0x10000
187066: c8 23 09                 a2 = t1 + t0
187069: 28 7d a7 fe              jump @7779
      :                          @12715 [@dyn 1440]
187073: 7b 16 20 01              u64 [sp + 0x120] = s1
187077: 33 07 34 02              a0 = 0x234
187081: 7b 17 28 01              u64 [sp + 0x128] = a0
187085: 33 07 58 19 01           a0 = 0x11958
187090: 7b 17 90 02              u64 [sp + 0x290] = a0
187094: 49 21 98 02 01           u64 [sp + 664] = 0x1
187099: 49 21 b0 02              u64 [sp + 688] = 0
187103: 95 18 20 01              a1 = sp + 0x120
187107: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
187111: 49 21 a8 02 01           u64 [sp + 680] = 0x1
187116: 95 17 38 02              a0 = sp + 0x238
187120: 95 18 90 02              a1 = sp + 0x290
187124: 50 20 42 0b 06 75 fd     ra = 2882, jump @1503
      :                          @12716 [@dyn 1441]
187131: 82 16 40 02              s1 = u64 [sp + 0x240]
187135: 82 1b 48 02              a4 = u64 [sp + 0x248]
187139: 82 17 38 02              a0 = u64 [sp + 0x238]
187143: 7b 17 70                 u64 [sp + 0x70] = a0
187146: 33 07 02                 a0 = 0x2
187149: 33 08                    a1 = 0
187151: 33 09                    a2 = 0
187153: 64 6a                    a3 = s1
187155: 33 00 44 0b              ra = 0xb44
187159: 0a 64                    ecalli 100 // 'log'
187161: 01                       fallthrough
      :                          @12717 [@dyn 1442]
187162: 82 1c 70                 a5 = u64 [sp + 0x70]
187165: 82 17 68                 a0 = u64 [sp + 0x68]
187168: c8 c7 07                 a0 = a0 + a5
187171: 53 37 00 00 ff 27        jump @12723 if a0 <u 4294901760
      :                          @12718
187177: 33 07 c0 22 03           a0 = 0x322c0
187182: 95 77 00 00 01           a0 = a0 + 0x10000
187187: 01                       fallthrough
      :                          @12719
187188: 82 78                    a1 = u64 [a0]
187190: c9 87 09                 a2 = a0 - a1
187193: ab 69 11                 jump @12723 if a2 != s1
      :                          @12720
187196: c9 c8 09                 a2 = a1 - a5
187199: 01                       fallthrough
      :                          @12721
187200: 82 7a                    a3 = u64 [a0]
187202: ab 8a f2                 jump @12719 if a3 != a1
      :                          @12722
187205: 7b 79                    u64 [a0] = a2
187207: 33 0b                    a4 = 0
187209: 01                       fallthrough
      :                          @12723
187210: 82 18 08 02              a1 = u64 [sp + 0x208]
187214: 51 08 3b                 jump @12730 if a1 == 0
      :                          @12724
187217: 56 28 00 20 38           jump @12730 if a1 >u 8192
      :                          @12725
187222: 82 17 10 02              a0 = u64 [sp + 0x210]
187226: 97 88 03                 a1 = a1 << 0x3
187229: 33 09 c0 22 03           a2 = 0x322c0
187234: 95 99 00 00 01           a2 = a2 + 0x10000
187239: 01                       fallthrough
      :                          @12726
187240: 82 9a                    a3 = u64 [a2]
187242: c9 a9 0b                 a4 = a2 - a3
187245: ab 7b 1c                 jump @12730 if a4 != a0
      :                          @12727
187248: c9 8a 0b                 a4 = a3 - a1
187251: 01                       fallthrough
      :                          @12728
187252: 82 9c                    a5 = u64 [a2]
187254: ab ac f2                 jump @12726 if a5 != a3
      :                          @12729
187257: 7b 9b                    u64 [a2] = a4
187259: 33 06                    s1 = 0
187261: 95 17 e0 01              a0 = sp + 0x1e0
187265: 33 00 46 0b              ra = 0xb46
187269: 28 33 32 fd              jump @261
      :                          @12730
187273: 95 17 e0 01              a0 = sp + 0x1e0
187277: 50 20 46 0b 2b 32 fd     ra = 2886, jump @261
      :                          @12731 [@dyn 1443]
187284: 28 ef 06                 jump @12868
      :                          @12732
187287: 95 17 20 01              a0 = sp + 0x120
187291: 33 00 48 0b              ra = 0xb48
187295: 95 11 f8                 sp = sp + 0xfffffffffffffff8
187298: 7b 15                    u64 [sp] = s0
187300: 33 03 c0 22 03           t1 = 0x322c0
187305: 33 02 00 00 01           t0 = 0x10000
187310: c8 23 04                 t2 = t1 + t0
187313: 28 f2 9e fd              jump @2219
      :                          @12733 [@dyn 1444]
187317: 95 17 e0 01              a0 = sp + 0x1e0
187321: 95 18 c8 01              a1 = sp + 0x1c8
187325: 95 19 20 01              a2 = sp + 0x120
187329: 95 16 e0 01              s1 = sp + 0x1e0
187333: 50 20 4a 0b 34 92 fe     ra = 2890, jump @7413
      :                          @12734 [@dyn 1445]
187340: 95 17 20 01              a0 = sp + 0x120
187344: 7b 17 38 02              u64 [sp + 0x238] = a0
187348: 33 07 24 02              a0 = 0x224
187352: 7b 17 40 02              u64 [sp + 0x240] = a0
187356: 7b 16 48 02              u64 [sp + 0x248] = s1
187360: 7b 17 50 02              u64 [sp + 0x250] = a0
187364: 33 07 88 17 01           a0 = 0x11788
187369: 7b 17 90 02              u64 [sp + 0x290] = a0
187373: 49 21 98 02 02           u64 [sp + 664] = 0x2
187378: 49 21 b0 02              u64 [sp + 688] = 0
187382: 95 18 38 02              a1 = sp + 0x238
187386: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
187390: 49 21 a8 02 02           u64 [sp + 680] = 0x2
187395: 95 17 08 02              a0 = sp + 0x208
187399: 95 18 90 02              a1 = sp + 0x290
187403: 50 20 4c 0b ef 73 fd     ra = 2892, jump @1503
      :                          @12735 [@dyn 1446]
187410: 82 16 10 02              s1 = u64 [sp + 0x210]
187414: 82 1b 18 02              a4 = u64 [sp + 0x218]
187418: 82 17 08 02              a0 = u64 [sp + 0x208]
187422: 7b 17 70                 u64 [sp + 0x70] = a0
187425: 33 07 02                 a0 = 0x2
187428: 33 08                    a1 = 0
187430: 33 09                    a2 = 0
187432: 64 6a                    a3 = s1
187434: 33 00 4e 0b              ra = 0xb4e
187438: 0a 64                    ecalli 100 // 'log'
187440: 01                       fallthrough
      :                          @12736 [@dyn 1447]
187441: 82 1c 70                 a5 = u64 [sp + 0x70]
187444: 82 17 68                 a0 = u64 [sp + 0x68]
187447: c8 c7 07                 a0 = a0 + a5
187450: 53 37 00 00 ff 27        jump @12742 if a0 <u 4294901760
      :                          @12737
187456: 33 07 c0 22 03           a0 = 0x322c0
187461: 95 77 00 00 01           a0 = a0 + 0x10000
187466: 01                       fallthrough
      :                          @12738
187467: 82 78                    a1 = u64 [a0]
187469: c9 87 09                 a2 = a0 - a1
187472: ab 69 11                 jump @12742 if a2 != s1
      :                          @12739
187475: c9 c8 09                 a2 = a1 - a5
187478: 01                       fallthrough
      :                          @12740
187479: 82 7a                    a3 = u64 [a0]
187481: ab 8a f2                 jump @12738 if a3 != a1
      :                          @12741
187484: 7b 79                    u64 [a0] = a2
187486: 33 0b                    a4 = 0
187488: 01                       fallthrough
      :                          @12742
187489: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
187493: 51 08 30                 jump @12749 if a1 == 0
      :                          @12743
187496: 56 28 00 20 2d           jump @12749 if a1 >u 8192
      :                          @12744
187501: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
187505: 97 88 03                 a1 = a1 << 0x3
187508: 33 09 c0 22 03           a2 = 0x322c0
187513: 95 99 00 00 01           a2 = a2 + 0x10000
187518: 01                       fallthrough
      :                          @12745
187519: 82 9a                    a3 = u64 [a2]
187521: c9 a9 0b                 a4 = a2 - a3
187524: ab 7b 11                 jump @12749 if a4 != a0
      :                          @12746
187527: c9 8a 0b                 a4 = a3 - a1
187530: 01                       fallthrough
      :                          @12747
187531: 82 9c                    a5 = u64 [a2]
187533: ab ac f2                 jump @12745 if a5 != a3
      :                          @12748
187536: 7b 9b                    u64 [a2] = a4
187538: 33 06                    s1 = 0
187540: 01                       fallthrough
      :                          @12749
187541: 82 18 20 01              a1 = u64 [sp + 0x120]
187545: 51 08 3b                 jump @12756 if a1 == 0
      :                          @12750
187548: 56 28 00 20 38           jump @12756 if a1 >u 8192
      :                          @12751
187553: 82 17 28 01              a0 = u64 [sp + 0x128]
187557: 97 88 03                 a1 = a1 << 0x3
187560: 33 09 c0 22 03           a2 = 0x322c0
187565: 95 99 00 00 01           a2 = a2 + 0x10000
187570: 01                       fallthrough
      :                          @12752
187571: 82 9a                    a3 = u64 [a2]
187573: c9 a9 0b                 a4 = a2 - a3
187576: ab 7b 1c                 jump @12756 if a4 != a0
      :                          @12753
187579: c9 8a 0b                 a4 = a3 - a1
187582: 01                       fallthrough
      :                          @12754
187583: 82 9c                    a5 = u64 [a2]
187585: ab ac f2                 jump @12752 if a5 != a3
      :                          @12755
187588: 7b 9b                    u64 [a2] = a4
187590: 33 06                    s1 = 0
187592: 95 17 c8 01              a0 = sp + 0x1c8
187596: 33 00 50 0b              ra = 0xb50
187600: 28 e8 30 fd              jump @261
      :                          @12756
187604: 95 17 c8 01              a0 = sp + 0x1c8
187608: 50 20 50 0b e0 30 fd     ra = 2896, jump @261
      :                          @12757 [@dyn 1448]
187615: 28 a4 05                 jump @12868
      :                          @12758
187618: 95 17 08 02              a0 = sp + 0x208
187622: 50 20 52 0b 8f 6d fe     ra = 2898, jump @6733
      :                          @12759 [@dyn 1449]
187629: 7b 17 20 01              u64 [sp + 0x120] = a0
187633: 95 17 20 01              a0 = sp + 0x120
187637: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
187641: 33 07 2c 0c              a0 = 0xc2c
187645: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
187649: 33 07 20 15 01           a0 = 0x11520
187654: 7b 17 90 02              u64 [sp + 0x290] = a0
187658: 49 21 98 02 01           u64 [sp + 664] = 0x1
187663: 49 21 b0 02              u64 [sp + 688] = 0
187667: 95 18 e0 01              a1 = sp + 0x1e0
187671: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
187675: 49 21 a8 02 01           u64 [sp + 680] = 0x1
187680: 95 17 38 02              a0 = sp + 0x238
187684: 95 18 90 02              a1 = sp + 0x290
187688: 50 20 54 0b d2 72 fd     ra = 2900, jump @1503
      :                          @12760 [@dyn 1450]
187695: 82 16 40 02              s1 = u64 [sp + 0x240]
187699: 82 1b 48 02              a4 = u64 [sp + 0x248]
187703: 82 17 38 02              a0 = u64 [sp + 0x238]
187707: 7b 17 70                 u64 [sp + 0x70] = a0
187710: 33 07 02                 a0 = 0x2
187713: 33 08                    a1 = 0
187715: 33 09                    a2 = 0
187717: 64 6a                    a3 = s1
187719: 33 00 56 0b              ra = 0xb56
187723: 0a 64                    ecalli 100 // 'log'
187725: 01                       fallthrough
      :                          @12761 [@dyn 1451]
187726: 82 1c 70                 a5 = u64 [sp + 0x70]
187729: 82 17 68                 a0 = u64 [sp + 0x68]
187732: c8 c7 07                 a0 = a0 + a5
187735: 33 08 00 00 ff           a1 = 0xffffffffffff0000
187740: ac 87 2f                 jump @12767 if a0 <u a1
      :                          @12762
187743: 33 07 c0 22 03           a0 = 0x322c0
187748: 95 77 00 00 01           a0 = a0 + 0x10000
187753: 01                       fallthrough
      :                          @12763
187754: 82 78                    a1 = u64 [a0]
187756: c9 87 09                 a2 = a0 - a1
187759: ab 69 1c                 jump @12767 if a2 != s1
      :                          @12764
187762: c9 c8 09                 a2 = a1 - a5
187765: 01                       fallthrough
      :                          @12765
187766: 82 7a                    a3 = u64 [a0]
187768: ab 8a f2                 jump @12763 if a3 != a1
      :                          @12766
187771: 7b 79                    u64 [a0] = a2
187773: 33 0b                    a4 = 0
187775: 95 17 08 02              a0 = sp + 0x208
187779: 33 00 58 0b              ra = 0xb58
187783: 28 8f 2f fd              jump @241
      :                          @12767
187787: 95 17 08 02              a0 = sp + 0x208
187791: 50 20 58 0b 87 2f fd     ra = 2904, jump @241
      :                          @12768 [@dyn 1452]
187798: 28 ed 04                 jump @12868
      :                          @12769
187801: 95 17 38 02              a0 = sp + 0x238
187805: 95 18 e0 01              a1 = sp + 0x1e0
187809: 95 16 38 02              s1 = sp + 0x238
187813: 50 20 5a 0b ab 6f fe     ra = 2906, jump @6794
      :                          @12770 [@dyn 1453]
187820: 7b 16 20 01              u64 [sp + 0x120] = s1
187824: 33 07 34 02              a0 = 0x234
187828: 7b 17 28 01              u64 [sp + 0x128] = a0
187832: 33 07 48 15 01           a0 = 0x11548
187837: 7b 17 90 02              u64 [sp + 0x290] = a0
187841: 49 21 98 02 01           u64 [sp + 664] = 0x1
187846: 49 21 b0 02              u64 [sp + 688] = 0
187850: 95 18 20 01              a1 = sp + 0x120
187854: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
187858: 49 21 a8 02 01           u64 [sp + 680] = 0x1
187863: 95 17 08 02              a0 = sp + 0x208
187867: 95 18 90 02              a1 = sp + 0x290
187871: 50 20 5c 0b 1b 72 fd     ra = 2908, jump @1503
      :                          @12771 [@dyn 1454]
187878: 82 18 38 02              a1 = u64 [sp + 0x238]
187882: 51 08 2e                 jump @12778 if a1 == 0
      :                          @12772
187885: 56 28 00 20 2b           jump @12778 if a1 >u 8192
      :                          @12773
187890: 82 17 40 02              a0 = u64 [sp + 0x240]
187894: 97 88 03                 a1 = a1 << 0x3
187897: 33 09 c0 22 03           a2 = 0x322c0
187902: 95 99 00 00 01           a2 = a2 + 0x10000
187907: 01                       fallthrough
      :                          @12774
187908: 82 9a                    a3 = u64 [a2]
187910: c9 a9 0b                 a4 = a2 - a3
187913: ab 7b 0f                 jump @12778 if a4 != a0
      :                          @12775
187916: c9 8a 0b                 a4 = a3 - a1
187919: 01                       fallthrough
      :                          @12776
187920: 82 9c                    a5 = u64 [a2]
187922: ab ac f2                 jump @12774 if a5 != a3
      :                          @12777
187925: 7b 9b                    u64 [a2] = a4
187927: 01                       fallthrough
      :                          @12778
187928: 82 16 10 02              s1 = u64 [sp + 0x210]
187932: 82 1b 18 02              a4 = u64 [sp + 0x218]
187936: 82 17 08 02              a0 = u64 [sp + 0x208]
187940: 7b 17 70                 u64 [sp + 0x70] = a0
187943: 33 07 02                 a0 = 0x2
187946: 33 08                    a1 = 0
187948: 33 09                    a2 = 0
187950: 64 6a                    a3 = s1
187952: 33 00 5e 0b              ra = 0xb5e
187956: 0a 64                    ecalli 100 // 'log'
187958: 01                       fallthrough
      :                          @12779 [@dyn 1455]
187959: 82 1c 70                 a5 = u64 [sp + 0x70]
187962: 82 17 68                 a0 = u64 [sp + 0x68]
187965: c8 c7 07                 a0 = a0 + a5
187968: 33 08 00 00 ff           a1 = 0xffffffffffff0000
187973: ac 87 07 01              jump @12803 if a0 <u a1
      :                          @12780
187977: 33 07 c0 22 03           a0 = 0x322c0
187982: 95 77 00 00 01           a0 = a0 + 0x10000
187987: 01                       fallthrough
      :                          @12781
187988: 82 78                    a1 = u64 [a0]
187990: c9 87 09                 a2 = a0 - a1
187993: ab 69 f3 00              jump @12803 if a2 != s1
      :                          @12782
187997: c9 c8 09                 a2 = a1 - a5
188000: 01                       fallthrough
      :                          @12783
188001: 82 7a                    a3 = u64 [a0]
188003: ab 8a f1                 jump @12781 if a3 != a1
      :                          @12784
188006: 7b 79                    u64 [a0] = a2
188008: 33 0b                    a4 = 0
188010: 01                       fallthrough
      :                          @12785
188011: ab 8a e9                 jump @12781 if a3 != a1
      :                          @12786
188014: 28 de 00                 jump @12803
      :                          @12787
188017: 95 17 38 02              a0 = sp + 0x238
188021: 95 18 e0 01              a1 = sp + 0x1e0
188025: 95 16 38 02              s1 = sp + 0x238
188029: 50 20 60 0b 9e 74 fe     ra = 2912, jump @6910
      :                          @12788 [@dyn 1456]
188036: 7b 16 20 01              u64 [sp + 0x120] = s1
188040: 33 07 0c 02              a0 = 0x20c
188044: 7b 17 28 01              u64 [sp + 0x128] = a0
188048: 33 07 68 15 01           a0 = 0x11568
188053: 7b 17 90 02              u64 [sp + 0x290] = a0
188057: 49 21 98 02 01           u64 [sp + 664] = 0x1
188062: 49 21 b0 02              u64 [sp + 688] = 0
188066: 95 18 20 01              a1 = sp + 0x120
188070: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
188074: 49 21 a8 02 01           u64 [sp + 680] = 0x1
188079: 95 17 08 02              a0 = sp + 0x208
188083: 95 18 90 02              a1 = sp + 0x290
188087: 50 20 62 0b 43 71 fd     ra = 2914, jump @1503
      :                          @12789 [@dyn 1457]
188094: 82 18 38 02              a1 = u64 [sp + 0x238]
188098: 51 08 2e                 jump @12796 if a1 == 0
      :                          @12790
188101: 56 28 00 10 2b           jump @12796 if a1 >u 4096
      :                          @12791
188106: 82 17 40 02              a0 = u64 [sp + 0x240]
188110: 97 88 04                 a1 = a1 << 0x4
188113: 33 09 c0 22 03           a2 = 0x322c0
188118: 95 99 00 00 01           a2 = a2 + 0x10000
188123: 01                       fallthrough
      :                          @12792
188124: 82 9a                    a3 = u64 [a2]
188126: c9 a9 0b                 a4 = a2 - a3
188129: ab 7b 0f                 jump @12796 if a4 != a0
      :                          @12793
188132: c9 8a 0b                 a4 = a3 - a1
188135: 01                       fallthrough
      :                          @12794
188136: 82 9c                    a5 = u64 [a2]
188138: ab ac f2                 jump @12792 if a5 != a3
      :                          @12795
188141: 7b 9b                    u64 [a2] = a4
188143: 01                       fallthrough
      :                          @12796
188144: 82 16 10 02              s1 = u64 [sp + 0x210]
188148: 82 1b 18 02              a4 = u64 [sp + 0x218]
188152: 82 17 08 02              a0 = u64 [sp + 0x208]
188156: 7b 17 70                 u64 [sp + 0x70] = a0
188159: 33 07 02                 a0 = 0x2
188162: 33 08                    a1 = 0
188164: 33 09                    a2 = 0
188166: 64 6a                    a3 = s1
188168: 33 00 64 0b              ra = 0xb64
188172: 0a 64                    ecalli 100 // 'log'
188174: 01                       fallthrough
      :                          @12797 [@dyn 1458]
188175: 82 1c 70                 a5 = u64 [sp + 0x70]
188178: 82 17 68                 a0 = u64 [sp + 0x68]
188181: c8 c7 07                 a0 = a0 + a5
188184: 33 08 00 00 ff           a1 = 0xffffffffffff0000
188189: ac 87 2f                 jump @12803 if a0 <u a1
      :                          @12798
188192: 33 07 c0 22 03           a0 = 0x322c0
188197: 95 77 00 00 01           a0 = a0 + 0x10000
188202: 01                       fallthrough
      :                          @12799
188203: 82 78                    a1 = u64 [a0]
188205: c9 87 09                 a2 = a0 - a1
188208: ab 69 1c                 jump @12803 if a2 != s1
      :                          @12800
188211: c9 c8 09                 a2 = a1 - a5
188214: 01                       fallthrough
      :                          @12801
188215: 82 7a                    a3 = u64 [a0]
188217: ab 8a f2                 jump @12799 if a3 != a1
      :                          @12802
188220: 7b 79                    u64 [a0] = a2
188222: 33 0b                    a4 = 0
188224: 95 17 e0 01              a0 = sp + 0x1e0
188228: 33 00 66 0b              ra = 0xb66
188232: 28 ce 2d fd              jump @241
      :                          @12803
188236: 95 17 e0 01              a0 = sp + 0x1e0
188240: 50 20 66 0b c6 2d fd     ra = 2918, jump @241
      :                          @12804 [@dyn 1459]
188247: 28 2c 03                 jump @12868
      :                          @12805
188250: 95 17 08 02              a0 = sp + 0x208
188254: 95 18 e0 01              a1 = sp + 0x1e0
188258: 50 20 68 0b 31 7e fe     ra = 2920, jump @7120
      :                          @12806 [@dyn 1460]
188265: 82 17 18 02              a0 = u64 [sp + 0x218]
188269: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
188273: 95 17 c8 01              a0 = sp + 0x1c8
188277: 7b 17 20 01              u64 [sp + 0x120] = a0
188281: 33 07 2c 0c              a0 = 0xc2c
188285: 7b 17 28 01              u64 [sp + 0x128] = a0
188289: 33 07 c0 15 01           a0 = 0x115c0
188294: 7b 17 90 02              u64 [sp + 0x290] = a0
188298: 49 21 98 02 01           u64 [sp + 664] = 0x1
188303: 49 21 b0 02              u64 [sp + 688] = 0
188307: 95 18 20 01              a1 = sp + 0x120
188311: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
188315: 49 21 a8 02 01           u64 [sp + 680] = 0x1
188320: 95 17 38 02              a0 = sp + 0x238
188324: 95 18 90 02              a1 = sp + 0x290
188328: 50 20 6a 0b 52 70 fd     ra = 2922, jump @1503
      :                          @12807 [@dyn 1461]
188335: 82 16 40 02              s1 = u64 [sp + 0x240]
188339: 82 1b 48 02              a4 = u64 [sp + 0x248]
188343: 82 17 38 02              a0 = u64 [sp + 0x238]
188347: 7b 17 70                 u64 [sp + 0x70] = a0
188350: 33 07 02                 a0 = 0x2
188353: 33 08                    a1 = 0
188355: 33 09                    a2 = 0
188357: 64 6a                    a3 = s1
188359: 33 00 6c 0b              ra = 0xb6c
188363: 0a 64                    ecalli 100 // 'log'
188365: 01                       fallthrough
      :                          @12808 [@dyn 1462]
188366: 82 1c 70                 a5 = u64 [sp + 0x70]
188369: 82 17 68                 a0 = u64 [sp + 0x68]
188372: c8 c7 07                 a0 = a0 + a5
188375: 53 37 00 00 ff 27        jump @12814 if a0 <u 4294901760
      :                          @12809
188381: 33 07 c0 22 03           a0 = 0x322c0
188386: 95 77 00 00 01           a0 = a0 + 0x10000
188391: 01                       fallthrough
      :                          @12810
188392: 82 78                    a1 = u64 [a0]
188394: c9 87 09                 a2 = a0 - a1
188397: ab 69 11                 jump @12814 if a2 != s1
      :                          @12811
188400: c9 c8 09                 a2 = a1 - a5
188403: 01                       fallthrough
      :                          @12812
188404: 82 7a                    a3 = u64 [a0]
188406: ab 8a f2                 jump @12810 if a3 != a1
      :                          @12813
188409: 7b 79                    u64 [a0] = a2
188411: 33 0b                    a4 = 0
188413: 01                       fallthrough
      :                          @12814
188414: 82 18 08 02              a1 = u64 [sp + 0x208]
188418: 52 08 07                 jump @12816 if a1 != 0
      :                          @12815
188421: 28 aa 4d ff              jump @10545
      :                          @12816
188425: 54 28 00 20 09           jump @12818 if a1 <=u 8192
      :                          @12817
188430: 28 a1 4d ff              jump @10545
      :                          @12818
188434: 82 17 10 02              a0 = u64 [sp + 0x210]
188438: 97 88 03                 a1 = a1 << 0x3
188441: 33 09 c0 22 03           a2 = 0x322c0
188446: 95 99 00 00 01           a2 = a2 + 0x10000
188451: 01                       fallthrough
      :                          @12819
188452: 82 9a                    a3 = u64 [a2]
188454: c9 a9 0b                 a4 = a2 - a3
188457: aa 7b 07                 jump @12821 if a4 == a0
      :                          @12820
188460: 28 83 4d ff              jump @10545
      :                          @12821
188464: c9 8a 0b                 a4 = a3 - a1
188467: 01                       fallthrough
      :                          @12822
188468: 82 9c                    a5 = u64 [a2]
188470: ab ac ee                 jump @12819 if a5 != a3
      :                          @12823
188473: 7b 9b                    u64 [a2] = a4
188475: 33 06                    s1 = 0
188477: 01                       fallthrough
      :                          @12824
188478: ab ac e6                 jump @12819 if a5 != a3
      :                          @12825
188481: 28 6e 4d ff              jump @10545
      :                          @12826
188485: 00                       trap
      :                          @12827
188486: 95 17 08 02              a0 = sp + 0x208
188490: 50 20 6e 0b cd 55 fe     ra = 2926, jump @6245
      :                          @12828 [@dyn 1463]
188497: 7b 17 20 01              u64 [sp + 0x120] = a0
188501: 95 17 20 01              a0 = sp + 0x120
188505: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
188509: 33 07 2c 0c              a0 = 0xc2c
188513: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
188517: 33 07 a8 11 01           a0 = 0x111a8
188522: 7b 17 90 02              u64 [sp + 0x290] = a0
188526: 49 21 98 02 01           u64 [sp + 664] = 0x1
188531: 49 21 b0 02              u64 [sp + 688] = 0
188535: 95 18 e0 01              a1 = sp + 0x1e0
188539: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
188543: 49 21 a8 02 01           u64 [sp + 680] = 0x1
188548: 95 17 38 02              a0 = sp + 0x238
188552: 95 18 90 02              a1 = sp + 0x290
188556: 50 20 70 0b 6e 6f fd     ra = 2928, jump @1503
      :                          @12829 [@dyn 1464]
188563: 82 16 40 02              s1 = u64 [sp + 0x240]
188567: 82 1b 48 02              a4 = u64 [sp + 0x248]
188571: 82 17 38 02              a0 = u64 [sp + 0x238]
188575: 7b 17 70                 u64 [sp + 0x70] = a0
188578: 33 07 02                 a0 = 0x2
188581: 33 08                    a1 = 0
188583: 33 09                    a2 = 0
188585: 64 6a                    a3 = s1
188587: 33 00 72 0b              ra = 0xb72
188591: 0a 64                    ecalli 100 // 'log'
188593: 01                       fallthrough
      :                          @12830 [@dyn 1465]
188594: 82 1c 70                 a5 = u64 [sp + 0x70]
188597: 82 17 68                 a0 = u64 [sp + 0x68]
188600: c8 c7 07                 a0 = a0 + a5
188603: 33 08 00 00 ff           a1 = 0xffffffffffff0000
188608: ac 87 b8 01              jump @12867 if a0 <u a1
      :                          @12831
188612: 33 07 c0 22 03           a0 = 0x322c0
188617: 95 77 00 00 01           a0 = a0 + 0x10000
188622: 01                       fallthrough
      :                          @12832
188623: 82 78                    a1 = u64 [a0]
188625: c9 87 09                 a2 = a0 - a1
188628: ab 69 a4 01              jump @12867 if a2 != s1
      :                          @12833
188632: c9 c8 09                 a2 = a1 - a5
188635: 01                       fallthrough
      :                          @12834
188636: 82 7a                    a3 = u64 [a0]
188638: ab 8a f1                 jump @12832 if a3 != a1
      :                          @12835
188641: 7b 79                    u64 [a0] = a2
188643: 33 0b                    a4 = 0
188645: 01                       fallthrough
      :                          @12836
188646: ab 8a e9                 jump @12832 if a3 != a1
      :                          @12837
188649: 28 8f 01                 jump @12867
      :                          @12838
188652: 95 17 38 02              a0 = sp + 0x238
188656: 95 18 e0 01              a1 = sp + 0x1e0
188660: 95 16 38 02              s1 = sp + 0x238
188664: 50 20 74 0b bc 57 fe     ra = 2932, jump @6315
      :                          @12839 [@dyn 1466]
188671: 7b 16 20 01              u64 [sp + 0x120] = s1
188675: 33 07 0c 02              a0 = 0x20c
188679: 7b 17 28 01              u64 [sp + 0x128] = a0
188683: 33 07 c8 11 01           a0 = 0x111c8
188688: 7b 17 90 02              u64 [sp + 0x290] = a0
188692: 49 21 98 02 01           u64 [sp + 664] = 0x1
188697: 49 21 b0 02              u64 [sp + 688] = 0
188701: 95 18 20 01              a1 = sp + 0x120
188705: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
188709: 49 21 a8 02 01           u64 [sp + 680] = 0x1
188714: 95 17 08 02              a0 = sp + 0x208
188718: 95 18 90 02              a1 = sp + 0x290
188722: 50 20 76 0b c8 6e fd     ra = 2934, jump @1503
      :                          @12840 [@dyn 1467]
188729: 82 18 38 02              a1 = u64 [sp + 0x238]
188733: 51 08 2e                 jump @12847 if a1 == 0
      :                          @12841
188736: 56 28 00 10 2b           jump @12847 if a1 >u 4096
      :                          @12842
188741: 82 17 40 02              a0 = u64 [sp + 0x240]
188745: 97 88 04                 a1 = a1 << 0x4
188748: 33 09 c0 22 03           a2 = 0x322c0
188753: 95 99 00 00 01           a2 = a2 + 0x10000
188758: 01                       fallthrough
      :                          @12843
188759: 82 9a                    a3 = u64 [a2]
188761: c9 a9 0b                 a4 = a2 - a3
188764: ab 7b 0f                 jump @12847 if a4 != a0
      :                          @12844
188767: c9 8a 0b                 a4 = a3 - a1
188770: 01                       fallthrough
      :                          @12845
188771: 82 9c                    a5 = u64 [a2]
188773: ab ac f2                 jump @12843 if a5 != a3
      :                          @12846
188776: 7b 9b                    u64 [a2] = a4
188778: 01                       fallthrough
      :                          @12847
188779: 82 16 10 02              s1 = u64 [sp + 0x210]
188783: 82 1b 18 02              a4 = u64 [sp + 0x218]
188787: 82 17 08 02              a0 = u64 [sp + 0x208]
188791: 7b 17 70                 u64 [sp + 0x70] = a0
188794: 33 07 02                 a0 = 0x2
188797: 33 08                    a1 = 0
188799: 33 09                    a2 = 0
188801: 64 6a                    a3 = s1
188803: 33 00 78 0b              ra = 0xb78
188807: 0a 64                    ecalli 100 // 'log'
188809: 01                       fallthrough
      :                          @12848 [@dyn 1468]
188810: 82 1c 70                 a5 = u64 [sp + 0x70]
188813: 82 17 68                 a0 = u64 [sp + 0x68]
188816: c8 c7 07                 a0 = a0 + a5
188819: 33 08 00 00 ff           a1 = 0xffffffffffff0000
188824: ae 87 07                 jump @12850 if a0 >=u a1
      :                          @12849
188827: 28 14 4c ff              jump @10545
      :                          @12850
188831: 33 07 c0 22 03           a0 = 0x322c0
188836: 95 77 00 00 01           a0 = a0 + 0x10000
188841: 01                       fallthrough
      :                          @12851
188842: 82 78                    a1 = u64 [a0]
188844: c9 87 09                 a2 = a0 - a1
188847: aa 69 07                 jump @12853 if a2 == s1
      :                          @12852
188850: 28 fd 4b ff              jump @10545
      :                          @12853
188854: c9 c8 09                 a2 = a1 - a5
188857: 01                       fallthrough
      :                          @12854
188858: 82 7a                    a3 = u64 [a0]
188860: ab 8a ee                 jump @12851 if a3 != a1
      :                          @12855
188863: 7b 79                    u64 [a0] = a2
188865: 33 0b                    a4 = 0
188867: 01                       fallthrough
      :                          @12856
188868: ab 8a e6                 jump @12851 if a3 != a1
      :                          @12857
188871: 28 e8 4b ff              jump @10545
      :                          @12858
188875: 82 17 10 02              a0 = u64 [sp + 0x210]
188879: 82 18 18 02              a1 = u64 [sp + 0x218]
188883: 50 20 7a 0b 36 56 fe     ra = 2938, jump @6297
      :                          @12859 [@dyn 1469]
188890: 7b 17 20 01              u64 [sp + 0x120] = a0
188894: 95 17 20 01              a0 = sp + 0x120
188898: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
188902: 33 07 2c 0c              a0 = 0xc2c
188906: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
188910: 33 07 d8 2d 01           a0 = 0x12dd8
188915: 7b 17 90 02              u64 [sp + 0x290] = a0
188919: 49 21 98 02 01           u64 [sp + 664] = 0x1
188924: 49 21 b0 02              u64 [sp + 688] = 0
188928: 95 18 e0 01              a1 = sp + 0x1e0
188932: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
188936: 49 21 a8 02 01           u64 [sp + 680] = 0x1
188941: 95 17 38 02              a0 = sp + 0x238
188945: 95 18 90 02              a1 = sp + 0x290
188949: 50 20 7c 0b e5 6d fd     ra = 2940, jump @1503
      :                          @12860 [@dyn 1470]
188956: 82 16 40 02              s1 = u64 [sp + 0x240]
188960: 82 1b 48 02              a4 = u64 [sp + 0x248]
188964: 82 17 38 02              a0 = u64 [sp + 0x238]
188968: 7b 17 70                 u64 [sp + 0x70] = a0
188971: 33 07 02                 a0 = 0x2
188974: 33 08                    a1 = 0
188976: 33 09                    a2 = 0
188978: 64 6a                    a3 = s1
188980: 33 00 7e 0b              ra = 0xb7e
188984: 0a 64                    ecalli 100 // 'log'
188986: 01                       fallthrough
      :                          @12861 [@dyn 1471]
188987: 82 1c 70                 a5 = u64 [sp + 0x70]
188990: 82 17 68                 a0 = u64 [sp + 0x68]
188993: c8 c7 07                 a0 = a0 + a5
188996: 33 08 00 00 ff           a1 = 0xffffffffffff0000
189001: ac 87 2f                 jump @12867 if a0 <u a1
      :                          @12862
189004: 33 07 c0 22 03           a0 = 0x322c0
189009: 95 77 00 00 01           a0 = a0 + 0x10000
189014: 01                       fallthrough
      :                          @12863
189015: 82 78                    a1 = u64 [a0]
189017: c9 87 09                 a2 = a0 - a1
189020: ab 69 1c                 jump @12867 if a2 != s1
      :                          @12864
189023: c9 c8 09                 a2 = a1 - a5
189026: 01                       fallthrough
      :                          @12865
189027: 82 7a                    a3 = u64 [a0]
189029: ab 8a f2                 jump @12863 if a3 != a1
      :                          @12866
189032: 7b 79                    u64 [a0] = a2
189034: 33 0b                    a4 = 0
189036: 95 17 08 02              a0 = sp + 0x208
189040: 33 00 80 0b              ra = 0xb80
189044: 28 04 2a fd              jump @221
      :                          @12867
189048: 95 17 08 02              a0 = sp + 0x208
189052: 50 20 80 0b fc 29 fd     ra = 2944, jump @221
      :                          @12868 [@dyn 1472]
189059: 0a                       ecalli 0 // 'gas'
189060: 82 18 50                 a1 = u64 [sp + 0x50]
189063: c9 78 07                 a0 = a1 - a0
189066: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
189070: 95 17 7f                 a0 = sp + 0x7f
189073: 7b 17 38 02              u64 [sp + 0x238] = a0
189077: 33 07 60 0c              a0 = 0xc60
189081: 7b 17 40 02              u64 [sp + 0x240] = a0
189085: 95 17 e0 01              a0 = sp + 0x1e0
189089: 7b 17 48 02              u64 [sp + 0x248] = a0
189093: 33 07 2c 0c              a0 = 0xc2c
189097: 7b 17 50 02              u64 [sp + 0x250] = a0
189101: 33 07 38 2e 01           a0 = 0x12e38
189106: 7b 17 90 02              u64 [sp + 0x290] = a0
189110: 49 21 98 02 02           u64 [sp + 664] = 0x2
189115: 49 21 b0 02              u64 [sp + 688] = 0
189119: 95 18 38 02              a1 = sp + 0x238
189123: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
189127: 49 21 a8 02 02           u64 [sp + 680] = 0x2
189132: 95 17 08 02              a0 = sp + 0x208
189136: 95 18 90 02              a1 = sp + 0x290
189140: 50 20 82 0b f8 20        ra = 2946, jump @13547
      :                          @12869 [@dyn 1473]
189146: 82 16 10 02              s1 = u64 [sp + 0x210]
189150: 82 1b 18 02              a4 = u64 [sp + 0x218]
189154: 82 17 08 02              a0 = u64 [sp + 0x208]
189158: 7b 17 70                 u64 [sp + 0x70] = a0
189161: 33 07 02                 a0 = 0x2
189164: 33 08                    a1 = 0
189166: 33 09                    a2 = 0
189168: 64 6a                    a3 = s1
189170: 33 00 84 0b              ra = 0xb84
189174: 0a 64                    ecalli 100 // 'log'
189176: 01                       fallthrough
      :                          @12870 [@dyn 1474]
189177: 82 1c 70                 a5 = u64 [sp + 0x70]
189180: 82 17 68                 a0 = u64 [sp + 0x68]
189183: c8 c7 07                 a0 = a0 + a5
189186: 33 08 00 00 ff           a1 = 0xffffffffffff0000
189191: ac 87 24                 jump @12876 if a0 <u a1
      :                          @12871
189194: 33 07 c0 22 03           a0 = 0x322c0
189199: 95 77 00 00 01           a0 = a0 + 0x10000
189204: 01                       fallthrough
      :                          @12872
189205: 82 78                    a1 = u64 [a0]
189207: c9 87 09                 a2 = a0 - a1
189210: ab 69 11                 jump @12876 if a2 != s1
      :                          @12873
189213: c9 c8 09                 a2 = a1 - a5
189216: 01                       fallthrough
      :                          @12874
189217: 82 7a                    a3 = u64 [a0]
189219: ab 8a f2                 jump @12872 if a3 != a1
      :                          @12875
189222: 7b 79                    u64 [a0] = a2
189224: 33 0b                    a4 = 0
189226: 01                       fallthrough
      :                          @12876
189227: 95 51 40 fc              sp = s0 + 0xfffffffffffffc40
189231: 82 10 b8 03              ra = u64 [sp + 0x3b8]
189235: 82 15 b0 03              s0 = u64 [sp + 0x3b0]
189239: 82 16 a8 03              s1 = u64 [sp + 0x3a8]
189243: 95 11 c0 03              sp = sp + 0x3c0
189247: 32 00                    ret
      :                          @12877
189249: 33 0a                    a3 = 0
189251: 33 0b 01                 a4 = 0x1
189254: 83 88                    i32 a1 = a1 + 0
189256: 33 09 01                 a2 = 0x1
189259: 01                       fallthrough
      :                          @12878
189260: d8 87 0c                 a5 = a0 <u a1
189263: 85 c6 01                 s1 = a5 ^ 0x1
189266: be c7 07                 i32 a0 = a0 + a5
189269: c8 9a 0c                 a5 = a3 + a2
189272: d8 78 0a                 a3 = a1 <u a0
189275: d4 a6 06                 s1 = s1 | a3
189278: 64 9a                    a3 = a2
189280: 64 b9                    a2 = a4
189282: c8 cb 0b                 a4 = a4 + a5
189285: 51 06 e7                 jump @12878 if s1 == 0
      :                          @12879
189288: 7b 1b e0 01              u64 [sp + 0x1e0] = a4
189292: 95 17 20 01              a0 = sp + 0x120
189296: 7b 17 38 02              u64 [sp + 0x238] = a0
189300: 33 07 62 0c              a0 = 0xc62
189304: 7b 17 40 02              u64 [sp + 0x240] = a0
189308: 95 17 e0 01              a0 = sp + 0x1e0
189312: 7b 17 48 02              u64 [sp + 0x248] = a0
189316: 33 07 2c 0c              a0 = 0xc2c
189320: 7b 17 50 02              u64 [sp + 0x250] = a0
189324: 33 07 18 06 01           a0 = 0x10618
189329: 7b 17 90 02              u64 [sp + 0x290] = a0
189333: 49 21 98 02 02           u64 [sp + 664] = 0x2
189338: 49 21 b0 02              u64 [sp + 688] = 0
189342: 95 18 38 02              a1 = sp + 0x238
189346: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
189350: 49 21 a8 02 02           u64 [sp + 680] = 0x2
189355: 95 17 08 02              a0 = sp + 0x208
189359: 95 18 90 02              a1 = sp + 0x290
189363: 50 20 86 0b 47 6c fd     ra = 2950, jump @1503
      :                          @12880 [@dyn 1475]
189370: 82 16 10 02              s1 = u64 [sp + 0x210]
189374: 82 1b 18 02              a4 = u64 [sp + 0x218]
189378: 82 17 08 02              a0 = u64 [sp + 0x208]
189382: 7b 17 70                 u64 [sp + 0x70] = a0
189385: 33 07 02                 a0 = 0x2
189388: 33 08                    a1 = 0
189390: 33 09                    a2 = 0
189392: 64 6a                    a3 = s1
189394: 33 00 88 0b              ra = 0xb88
189398: 0a 64                    ecalli 100 // 'log'
189400: 01                       fallthrough
      :                          @12881 [@dyn 1476]
189401: 82 1c 70                 a5 = u64 [sp + 0x70]
189404: 82 17 68                 a0 = u64 [sp + 0x68]
189407: c8 c7 07                 a0 = a0 + a5
189410: 53 37 00 00 ff a1 fe     jump @12868 if a0 <u 4294901760
      :                          @12882
189417: 33 07 c0 22 03           a0 = 0x322c0
189422: 95 77 00 00 01           a0 = a0 + 0x10000
189427: 01                       fallthrough
      :                          @12883
189428: 82 78                    a1 = u64 [a0]
189430: c9 87 09                 a2 = a0 - a1
189433: ab 69 8a fe              jump @12868 if a2 != s1
      :                          @12884
189437: c9 c8 09                 a2 = a1 - a5
189440: 01                       fallthrough
      :                          @12885
189441: 82 7a                    a3 = u64 [a0]
189443: ab 8a f1                 jump @12883 if a3 != a1
      :                          @12886
189446: 7b 79                    u64 [a0] = a2
189448: 33 0b                    a4 = 0
189450: 01                       fallthrough
      :                          @12887
189451: ab 8a e9                 jump @12883 if a3 != a1
      :                          @12888
189454: 28 75 fe                 jump @12868
      :                          @12889
189457: 33 04                    t2 = 0
189459: 82 13 60                 t1 = u64 [sp + 0x60]
189462: 95 33 08                 t1 = t1 + 0x8
189465: 33 0a 01                 a3 = 0x1
189468: 64 86                    s1 = a1
189470: 28 0f                    jump @12892
      :                          @12890
189472: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
189475: 95 33 08                 t1 = t1 + 0x8
189478: ab 80 07                 jump @12892 if ra != a1
      :                          @12891
189481: 28 b9 32 ff              jump @10155
      :                          @12892
189485: 64 40                    ra = t2
189487: 95 44 01                 t2 = t2 + 0x1
189490: 82 17 70                 a0 = u64 [sp + 0x70]
189493: ae 74 eb                 jump @12890 if t2 >=u a0
      :                          @12893
189496: 97 09 03                 a2 = ra << 0x3
189499: 82 17 60                 a0 = u64 [sp + 0x60]
189502: c8 79 09                 a2 = a2 + a0
189505: 82 99                    a2 = u64 [a2]
189507: 64 3b                    a4 = t1
189509: 64 6c                    a5 = s1
189511: 01                       fallthrough
      :                          @12894
189512: 82 b2                    t0 = u64 [a4]
189514: c9 92 07                 a0 = t0 - a2
189517: ca a7 0a                 a3 = a0 * a3
189520: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
189523: 95 bb 08                 a4 = a4 + 0x8
189526: 52 0c f2                 jump @12894 if a5 != 0
      :                          @12895
189529: 28 c7                    jump @12890
      :                          @12896
189531: 82 17 30 01              a0 = u64 [sp + 0x130]
189535: 82 18 28 01              a1 = u64 [sp + 0x128]
189539: 82 19 20 01              a2 = u64 [sp + 0x120]
189543: 7b 17 f0 01              u64 [sp + 0x1f0] = a0
189547: 7b 18 e8 01              u64 [sp + 0x1e8] = a1
189551: 7b 19 e0 01              u64 [sp + 0x1e0] = a2
189555: 95 17 b0 01              a0 = sp + 0x1b0
189559: 7b 17 38 02              u64 [sp + 0x238] = a0
189563: 33 07 2c 0c              a0 = 0xc2c
189567: 7b 17 40 02              u64 [sp + 0x240] = a0
189571: 95 17 e0 01              a0 = sp + 0x1e0
189575: 7b 17 48 02              u64 [sp + 0x248] = a0
189579: 33 07 24 02              a0 = 0x224
189583: 7b 17 50 02              u64 [sp + 0x250] = a0
189587: 33 07 c8 14 01           a0 = 0x114c8
189592: 7b 17 90 02              u64 [sp + 0x290] = a0
189596: 49 21 98 02 02           u64 [sp + 664] = 0x2
189601: 49 21 b0 02              u64 [sp + 688] = 0
189605: 95 18 38 02              a1 = sp + 0x238
189609: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
189613: 49 21 a8 02 02           u64 [sp + 680] = 0x2
189618: 95 17 08 02              a0 = sp + 0x208
189622: 95 18 90 02              a1 = sp + 0x290
189626: 50 20 8a 0b 40 6b fd     ra = 2954, jump @1503
      :                          @12897 [@dyn 1477]
189633: 82 1a 10 02              a3 = u64 [sp + 0x210]
189637: 7b 1a 60                 u64 [sp + 0x60] = a3
189640: 82 1b 18 02              a4 = u64 [sp + 0x218]
189644: 82 16 08 02              s1 = u64 [sp + 0x208]
189648: 33 07 02                 a0 = 0x2
189651: 33 08                    a1 = 0
189653: 33 09                    a2 = 0
189655: 33 00 8c 0b              ra = 0xb8c
189659: 0a 64                    ecalli 100 // 'log'
189661: 01                       fallthrough
      :                          @12898 [@dyn 1478]
189662: 82 1c 60                 a5 = u64 [sp + 0x60]
189665: 82 17 68                 a0 = u64 [sp + 0x68]
189668: c8 67 07                 a0 = a0 + s1
189671: 53 37 00 00 ff 25        jump @12904 if a0 <u 4294901760
      :                          @12899
189677: 33 07 c0 22 03           a0 = 0x322c0
189682: 95 77 00 00 01           a0 = a0 + 0x10000
189687: 01                       fallthrough
      :                          @12900
189688: 82 78                    a1 = u64 [a0]
189690: c9 87 09                 a2 = a0 - a1
189693: ab c9 0f                 jump @12904 if a2 != a5
      :                          @12901
189696: c9 68 09                 a2 = a1 - s1
189699: 01                       fallthrough
      :                          @12902
189700: 82 7a                    a3 = u64 [a0]
189702: ab 8a f2                 jump @12900 if a3 != a1
      :                          @12903
189705: 7b 79                    u64 [a0] = a2
189707: 01                       fallthrough
      :                          @12904
189708: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
189712: 82 12 70                 t0 = u64 [sp + 0x70]
189715: 51 08 30                 jump @12911 if a1 == 0
      :                          @12905
189718: 56 28 00 20 2d           jump @12911 if a1 >u 8192
      :                          @12906
189723: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
189727: 97 88 03                 a1 = a1 << 0x3
189730: 33 09 c0 22 03           a2 = 0x322c0
189735: 95 99 00 00 01           a2 = a2 + 0x10000
189740: 01                       fallthrough
      :                          @12907
189741: 82 9a                    a3 = u64 [a2]
189743: c9 a9 0b                 a4 = a2 - a3
189746: ab 7b 11                 jump @12911 if a4 != a0
      :                          @12908
189749: c9 8a 0b                 a4 = a3 - a1
189752: 01                       fallthrough
      :                          @12909
189753: 82 9c                    a5 = u64 [a2]
189755: ab ac f2                 jump @12907 if a5 != a3
      :                          @12910
189758: 7b 9b                    u64 [a2] = a4
189760: 33 06                    s1 = 0
189762: 01                       fallthrough
      :                          @12911
189763: 82 17 c8 01              a0 = u64 [sp + 0x1c8]
189767: 51 07 3c fd              jump @12868 if a0 == 0
      :                          @12912
189771: 56 27 aa 0a 38 fd        jump @12868 if a0 >u 2730
      :                          @12913
189777: 96 77 e8                 a0 = a0 * 0xffffffffffffffe8
189780: 33 08 c0 22 03           a1 = 0x322c0
189785: 95 88 00 00 01           a1 = a1 + 0x10000
189790: 01                       fallthrough
      :                          @12914
189791: 82 89                    a2 = u64 [a1]
189793: c9 98 0a                 a3 = a1 - a2
189796: ab 2a 1f fd              jump @12868 if a3 != t0
      :                          @12915
189800: c8 79 0a                 a3 = a2 + a0
189803: 01                       fallthrough
      :                          @12916
189804: 82 8b                    a4 = u64 [a1]
189806: ab 9b f1                 jump @12914 if a4 != a2
      :                          @12917
189809: 7b 8a                    u64 [a1] = a3
189811: 33 0c                    a5 = 0
189813: 01                       fallthrough
      :                          @12918
189814: ab 9b e9                 jump @12914 if a4 != a2
      :                          @12919
189817: 28 0a fd                 jump @12868
      :                          @12920
189820: 82 17 a0 02              a0 = u64 [sp + 0x2a0]
189824: 82 18 98 02              a1 = u64 [sp + 0x298]
189828: 82 19 90 02              a2 = u64 [sp + 0x290]
189832: 7b 17 18 02              u64 [sp + 0x218] = a0
189836: 7b 18 10 02              u64 [sp + 0x210] = a1
189840: 7b 19 08 02              u64 [sp + 0x208] = a2
189844: 01                       fallthrough
      :                          @12921
189845: 95 17 08 02              a0 = sp + 0x208
189849: 7b 17 20 01              u64 [sp + 0x120] = a0
189853: 33 07 34 02              a0 = 0x234
189857: 7b 17 28 01              u64 [sp + 0x128] = a0
189861: 33 07 c0 08 01           a0 = 0x108c0
189866: 7b 17 90 02              u64 [sp + 0x290] = a0
189870: 49 21 98 02 01           u64 [sp + 664] = 0x1
189875: 49 21 b0 02              u64 [sp + 688] = 0
189879: 95 18 20 01              a1 = sp + 0x120
189883: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
189887: 49 21 a8 02 01           u64 [sp + 680] = 0x1
189892: 95 17 38 02              a0 = sp + 0x238
189896: 95 18 90 02              a1 = sp + 0x290
189900: 50 20 8e 0b 2e 6a fd     ra = 2958, jump @1503
      :                          @12922 [@dyn 1479]
189907: 82 16 40 02              s1 = u64 [sp + 0x240]
189911: 82 1b 48 02              a4 = u64 [sp + 0x248]
189915: 82 17 38 02              a0 = u64 [sp + 0x238]
189919: 7b 17 70                 u64 [sp + 0x70] = a0
189922: 33 07 02                 a0 = 0x2
189925: 33 08                    a1 = 0
189927: 33 09                    a2 = 0
189929: 64 6a                    a3 = s1
189931: 33 00 90 0b              ra = 0xb90
189935: 0a 64                    ecalli 100 // 'log'
189937: 01                       fallthrough
      :                          @12923 [@dyn 1480]
189938: 82 1c 70                 a5 = u64 [sp + 0x70]
189941: 82 17 68                 a0 = u64 [sp + 0x68]
189944: c8 c7 07                 a0 = a0 + a5
189947: 53 37 00 00 ff 27        jump @12929 if a0 <u 4294901760
      :                          @12924
189953: 33 07 c0 22 03           a0 = 0x322c0
189958: 95 77 00 00 01           a0 = a0 + 0x10000
189963: 01                       fallthrough
      :                          @12925
189964: 82 78                    a1 = u64 [a0]
189966: c9 87 09                 a2 = a0 - a1
189969: ab 69 11                 jump @12929 if a2 != s1
      :                          @12926
189972: c9 c8 09                 a2 = a1 - a5
189975: 01                       fallthrough
      :                          @12927
189976: 82 7a                    a3 = u64 [a0]
189978: ab 8a f2                 jump @12925 if a3 != a1
      :                          @12928
189981: 7b 79                    u64 [a0] = a2
189983: 33 0b                    a4 = 0
189985: 01                       fallthrough
      :                          @12929
189986: 82 18 08 02              a1 = u64 [sp + 0x208]
189990: 52 08 07                 jump @12931 if a1 != 0
      :                          @12930
189993: 28 86 47 ff              jump @10545
      :                          @12931
189997: 54 28 00 20 09           jump @12933 if a1 <=u 8192
      :                          @12932
190002: 28 7d 47 ff              jump @10545
      :                          @12933
190006: 82 17 10 02              a0 = u64 [sp + 0x210]
190010: 97 88 03                 a1 = a1 << 0x3
190013: 33 09 c0 22 03           a2 = 0x322c0
190018: 95 99 00 00 01           a2 = a2 + 0x10000
190023: 01                       fallthrough
      :                          @12934
190024: 82 9a                    a3 = u64 [a2]
190026: c9 a9 0b                 a4 = a2 - a3
190029: aa 7b 07                 jump @12936 if a4 == a0
      :                          @12935
190032: 28 5f 47 ff              jump @10545
      :                          @12936
190036: c9 8a 0b                 a4 = a3 - a1
190039: 01                       fallthrough
      :                          @12937
190040: 82 9c                    a5 = u64 [a2]
190042: ab ac ee                 jump @12934 if a5 != a3
      :                          @12938
190045: 7b 9b                    u64 [a2] = a4
190047: 33 06                    s1 = 0
190049: 01                       fallthrough
      :                          @12939
190050: ab ac e6                 jump @12934 if a5 != a3
      :                          @12940
190053: 28 4a 47 ff              jump @10545
      :                          @12941
190057: 33 0c                    a5 = 0
190059: 82 18 70                 a1 = u64 [sp + 0x70]
190062: 01                       fallthrough
      :                          @12942
190063: 7b 1c c8 01              u64 [sp + 0x1c8] = a5
190067: 95 17 e0 01              a0 = sp + 0x1e0
190071: 95 16 e0 01              s1 = sp + 0x1e0
190075: 82 1a 58                 a3 = u64 [sp + 0x58]
190078: 82 1b 48                 a4 = u64 [sp + 0x48]
190081: 33 00 92 0b              ra = 0xb92
190085: 95 11 b0                 sp = sp + 0xffffffffffffffb0
190088: 7b 10 48                 u64 [sp + 0x48] = ra
190091: 7b 15 40                 u64 [sp + 0x40] = s0
190094: 7b 16 38                 u64 [sp + 0x38] = s1
190097: 7b 1c 10                 u64 [sp + 0x10] = a5
190100: 64 a6                    s1 = a3
190102: 7b 19 18                 u64 [sp + 0x18] = a2
190105: 7b 18 08                 u64 [sp + 0x8] = a1
190108: 64 75                    s0 = a0
190110: 95 17 20                 a0 = sp + 0x20
190113: 64 b8                    a1 = a4
190115: 64 a9                    a2 = a3
190117: 33 00 6a 04              ra = 0x46a
190121: 28 34 a5 fd              jump @2421
      :                          @12943 [@dyn 1481]
190125: 95 17 20 01              a0 = sp + 0x120
190129: 7b 17 90 02              u64 [sp + 0x290] = a0
190133: 33 07 3c 02              a0 = 0x23c
190137: 7b 17 98 02              u64 [sp + 0x298] = a0
190141: 95 18 c8 01              a1 = sp + 0x1c8
190145: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
190149: 33 08 2c 0c              a1 = 0xc2c
190153: 7b 18 a8 02              u64 [sp + 0x2a8] = a1
190157: 7b 16 b0 02              u64 [sp + 0x2b0] = s1
190161: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
190165: 33 07 c8 18 01           a0 = 0x118c8
190170: 7b 17 38 02              u64 [sp + 0x238] = a0
190174: 49 21 40 02 03           u64 [sp + 576] = 0x3
190179: 49 21 58 02              u64 [sp + 600] = 0
190183: 95 18 90 02              a1 = sp + 0x290
190187: 7b 18 48 02              u64 [sp + 0x248] = a1
190191: 49 21 50 02 03           u64 [sp + 592] = 0x3
190196: 95 17 08 02              a0 = sp + 0x208
190200: 95 18 38 02              a1 = sp + 0x238
190204: 50 20 94 0b fe 68 fd     ra = 2964, jump @1503
      :                          @12944 [@dyn 1482]
190211: 82 16 10 02              s1 = u64 [sp + 0x210]
190215: 82 1b 18 02              a4 = u64 [sp + 0x218]
190219: 82 17 08 02              a0 = u64 [sp + 0x208]
190223: 7b 17 58                 u64 [sp + 0x58] = a0
190226: 33 07 02                 a0 = 0x2
190229: 33 08                    a1 = 0
190231: 33 09                    a2 = 0
190233: 64 6a                    a3 = s1
190235: 33 00 96 0b              ra = 0xb96
190239: 0a 64                    ecalli 100 // 'log'
190241: 01                       fallthrough
      :                          @12945 [@dyn 1483]
190242: 82 1c 58                 a5 = u64 [sp + 0x58]
190245: 82 17 68                 a0 = u64 [sp + 0x68]
190248: c8 c7 07                 a0 = a0 + a5
190251: 53 37 00 00 ff 25        jump @12951 if a0 <u 4294901760
      :                          @12946
190257: 33 07 c0 22 03           a0 = 0x322c0
190262: 95 77 00 00 01           a0 = a0 + 0x10000
190267: 01                       fallthrough
      :                          @12947
190268: 82 78                    a1 = u64 [a0]
190270: c9 87 09                 a2 = a0 - a1
190273: ab 69 0f                 jump @12951 if a2 != s1
      :                          @12948
190276: c9 c8 09                 a2 = a1 - a5
190279: 01                       fallthrough
      :                          @12949
190280: 82 7a                    a3 = u64 [a0]
190282: ab 8a f2                 jump @12947 if a3 != a1
      :                          @12950
190285: 7b 79                    u64 [a0] = a2
190287: 01                       fallthrough
      :                          @12951
190288: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
190292: 51 07 2e                 jump @12958 if a0 == 0
      :                          @12952
190295: 56 37 00 00 01 2b        jump @12958 if a0 >u 65536
      :                          @12953
190301: 82 18 e8 01              a1 = u64 [sp + 0x1e8]
190305: 33 0a c0 22 03           a3 = 0x322c0
190310: 95 a9 00 00 01           a2 = a3 + 0x10000
190315: 01                       fallthrough
      :                          @12954
190316: 82 9a                    a3 = u64 [a2]
190318: c9 a9 0b                 a4 = a2 - a3
190321: ab 8b 11                 jump @12958 if a4 != a1
      :                          @12955
190324: c9 7a 0b                 a4 = a3 - a0
190327: 01                       fallthrough
      :                          @12956
190328: 82 9c                    a5 = u64 [a2]
190330: ab ac f2                 jump @12954 if a5 != a3
      :                          @12957
190333: 7b 9b                    u64 [a2] = a4
190335: 33 06                    s1 = 0
190337: 01                       fallthrough
      :                          @12958
190338: 82 17 20 01              a0 = u64 [sp + 0x120]
190342: 51 07 2e                 jump @12965 if a0 == 0
      :                          @12959
190345: 56 37 00 00 01 2b        jump @12965 if a0 >u 65536
      :                          @12960
190351: 82 18 28 01              a1 = u64 [sp + 0x128]
190355: 33 0a c0 22 03           a3 = 0x322c0
190360: 95 a9 00 00 01           a2 = a3 + 0x10000
190365: 01                       fallthrough
      :                          @12961
190366: 82 9a                    a3 = u64 [a2]
190368: c9 a9 0b                 a4 = a2 - a3
190371: ab 8b 11                 jump @12965 if a4 != a1
      :                          @12962
190374: c9 7a 0b                 a4 = a3 - a0
190377: 01                       fallthrough
      :                          @12963
190378: 82 9c                    a5 = u64 [a2]
190380: ab ac f2                 jump @12961 if a5 != a3
      :                          @12964
190383: 7b 9b                    u64 [a2] = a4
190385: 33 06                    s1 = 0
190387: 01                       fallthrough
      :                          @12965
190388: 82 17 60                 a0 = u64 [sp + 0x60]
190391: 51 07 cc fa              jump @12868 if a0 == 0
      :                          @12966
190395: 82 18 60                 a1 = u64 [sp + 0x60]
190398: 56 28 00 20 c5 fa        jump @12868 if a1 >u 8192
      :                          @12967
190404: 82 17 60                 a0 = u64 [sp + 0x60]
190407: 97 77 03                 a0 = a0 << 0x3
190410: 33 08 c0 22 03           a1 = 0x322c0
190415: 95 88 00 00 01           a1 = a1 + 0x10000
190420: 01                       fallthrough
      :                          @12968
190421: 82 89                    a2 = u64 [a1]
190423: c9 98 0a                 a3 = a1 - a2
190426: 82 1b 70                 a4 = u64 [sp + 0x70]
190429: ab ba a6 fa              jump @12868 if a3 != a4
      :                          @12969
190433: c9 79 0a                 a3 = a2 - a0
190436: 01                       fallthrough
      :                          @12970
190437: 82 8b                    a4 = u64 [a1]
190439: ab 9b ee                 jump @12968 if a4 != a2
      :                          @12971
190442: 7b 8a                    u64 [a1] = a3
190444: 33 0c                    a5 = 0
190446: 01                       fallthrough
      :                          @12972
190447: ab 9b e6                 jump @12968 if a4 != a2
      :                          @12973
190450: 28 91 fa                 jump @12868
      :                          @12974
190453: 33 07 78 19 01           a0 = 0x11978
190458: 7b 17 90 02              u64 [sp + 0x290] = a0
190462: 49 21 98 02 01           u64 [sp + 664] = 0x1
190467: 49 21 b0 02              u64 [sp + 688] = 0
190471: 33 07 f0 2f 01           a0 = 0x12ff0
190476: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
190480: 49 21 a8 02              u64 [sp + 680] = 0
190484: 95 17 38 02              a0 = sp + 0x238
190488: 95 18 90 02              a1 = sp + 0x290
190492: 50 20 98 0b de 67 fd     ra = 2968, jump @1503
      :                          @12975 [@dyn 1484]
190499: 82 16 40 02              s1 = u64 [sp + 0x240]
190503: 82 1b 48 02              a4 = u64 [sp + 0x248]
190507: 82 17 38 02              a0 = u64 [sp + 0x238]
190511: 7b 17 70                 u64 [sp + 0x70] = a0
190514: 33 07 02                 a0 = 0x2
190517: 33 08                    a1 = 0
190519: 33 09                    a2 = 0
190521: 64 6a                    a3 = s1
190523: 33 00 9a 0b              ra = 0xb9a
190527: 0a 64                    ecalli 100 // 'log'
190529: 01                       fallthrough
      :                          @12976 [@dyn 1485]
190530: 82 17 68                 a0 = u64 [sp + 0x68]
190533: 82 18 70                 a1 = u64 [sp + 0x70]
190536: 64 8c                    a5 = a1
190538: c8 87 07                 a0 = a0 + a1
190541: 53 37 00 00 ff 36 fa     jump @12868 if a0 <u 4294901760
      :                          @12977
190548: 33 07 c0 22 03           a0 = 0x322c0
190553: 95 77 00 00 01           a0 = a0 + 0x10000
190558: 01                       fallthrough
      :                          @12978
190559: 82 78                    a1 = u64 [a0]
190561: c9 87 09                 a2 = a0 - a1
190564: ab 69 1f fa              jump @12868 if a2 != s1
      :                          @12979
190568: c9 c8 09                 a2 = a1 - a5
190571: 01                       fallthrough
      :                          @12980
190572: 82 7a                    a3 = u64 [a0]
190574: ab 8a f1                 jump @12978 if a3 != a1
      :                          @12981
190577: 7b 79                    u64 [a0] = a2
190579: 33 0b                    a4 = 0
190581: 01                       fallthrough
      :                          @12982
190582: ab 8a e9                 jump @12978 if a3 != a1
      :                          @12983
190585: 28 0a fa                 jump @12868
      :                          @12984
190588: 64 89                    a2 = a1
190590: 01                       fallthrough
      :                          @12985
190591: 7b 19 e0 01              u64 [sp + 0x1e0] = a2
190595: 95 17 c8 01              a0 = sp + 0x1c8
190599: 7b 17 90 02              u64 [sp + 0x290] = a0
190603: 33 07 2c 0c              a0 = 0xc2c
190607: 7b 17 98 02              u64 [sp + 0x298] = a0
190611: 95 18 20 01              a1 = sp + 0x120
190615: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
190619: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
190623: 95 18 e0 01              a1 = sp + 0x1e0
190627: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
190631: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
190635: 33 07 50 1f 01           a0 = 0x11f50
190640: 7b 17 38 02              u64 [sp + 0x238] = a0
190644: 49 21 40 02 03           u64 [sp + 576] = 0x3
190649: 49 21 58 02              u64 [sp + 600] = 0
190653: 95 18 90 02              a1 = sp + 0x290
190657: 7b 18 48 02              u64 [sp + 0x248] = a1
190661: 49 21 50 02 03           u64 [sp + 592] = 0x3
190666: 95 17 08 02              a0 = sp + 0x208
190670: 95 18 38 02              a1 = sp + 0x238
190674: 50 20 9c 0b 28 67 fd     ra = 2972, jump @1503
      :                          @12986 [@dyn 1486]
190681: 82 16 10 02              s1 = u64 [sp + 0x210]
190685: 82 1b 18 02              a4 = u64 [sp + 0x218]
190689: 82 17 08 02              a0 = u64 [sp + 0x208]
190693: 7b 17 70                 u64 [sp + 0x70] = a0
190696: 33 07 02                 a0 = 0x2
190699: 33 08                    a1 = 0
190701: 33 09                    a2 = 0
190703: 64 6a                    a3 = s1
190705: 33 00 9e 0b              ra = 0xb9e
190709: 0a 64                    ecalli 100 // 'log'
190711: 01                       fallthrough
      :                          @12987 [@dyn 1487]
190712: 82 1c 70                 a5 = u64 [sp + 0x70]
190715: 82 17 68                 a0 = u64 [sp + 0x68]
190718: c8 c7 07                 a0 = a0 + a5
190721: 53 37 00 00 ff 82 f9     jump @12868 if a0 <u 4294901760
      :                          @12988
190728: 33 07 c0 22 03           a0 = 0x322c0
190733: 95 77 00 00 01           a0 = a0 + 0x10000
190738: 01                       fallthrough
      :                          @12989
190739: 82 78                    a1 = u64 [a0]
190741: c9 87 09                 a2 = a0 - a1
190744: ab 69 6b f9              jump @12868 if a2 != s1
      :                          @12990
190748: c9 c8 09                 a2 = a1 - a5
190751: 01                       fallthrough
      :                          @12991
190752: 82 7a                    a3 = u64 [a0]
190754: ab 8a f1                 jump @12989 if a3 != a1
      :                          @12992
190757: 7b 79                    u64 [a0] = a2
190759: 33 0b                    a4 = 0
190761: 01                       fallthrough
      :                          @12993
190762: ab 8a e9                 jump @12989 if a3 != a1
      :                          @12994
190765: 28 56 f9                 jump @12868
      :                          @12995
190768: 7b 17 20 01              u64 [sp + 0x120] = a0
190772: 51 07 98 0b              jump @13289 if a0 == 0
      :                          @12996
190776: 33 07                    a0 = 0
190778: 01                       fallthrough
      :                          @12997
190779: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
190783: 95 17 b0 01              a0 = sp + 0x1b0
190787: 7b 17 90 02              u64 [sp + 0x290] = a0
190791: 33 07 2c 0c              a0 = 0xc2c
190795: 7b 17 98 02              u64 [sp + 0x298] = a0
190799: 95 18 c8 01              a1 = sp + 0x1c8
190803: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
190807: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
190811: 95 18 20 01              a1 = sp + 0x120
190815: 7b 18 b0 02              u64 [sp + 0x2b0] = a1
190819: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
190823: 95 18 e0 01              a1 = sp + 0x1e0
190827: 7b 18 c0 02              u64 [sp + 0x2c0] = a1
190831: 7b 17 c8 02              u64 [sp + 0x2c8] = a0
190835: 33 07 60 25 01           a0 = 0x12560
190840: 7b 17 38 02              u64 [sp + 0x238] = a0
190844: 49 21 40 02 04           u64 [sp + 576] = 0x4
190849: 49 21 58 02              u64 [sp + 600] = 0
190853: 95 18 90 02              a1 = sp + 0x290
190857: 7b 18 48 02              u64 [sp + 0x248] = a1
190861: 49 21 50 02 04           u64 [sp + 592] = 0x4
190866: 95 17 08 02              a0 = sp + 0x208
190870: 95 18 38 02              a1 = sp + 0x238
190874: 50 20 a0 0b 60 66 fd     ra = 2976, jump @1503
      :                          @12998 [@dyn 1488]
190881: 82 16 10 02              s1 = u64 [sp + 0x210]
190885: 82 1b 18 02              a4 = u64 [sp + 0x218]
190889: 82 17 08 02              a0 = u64 [sp + 0x208]
190893: 7b 17 70                 u64 [sp + 0x70] = a0
190896: 33 07 02                 a0 = 0x2
190899: 33 08                    a1 = 0
190901: 33 09                    a2 = 0
190903: 64 6a                    a3 = s1
190905: 33 00 a2 0b              ra = 0xba2
190909: 0a 64                    ecalli 100 // 'log'
190911: 01                       fallthrough
      :                          @12999 [@dyn 1489]
190912: 82 1c 70                 a5 = u64 [sp + 0x70]
190915: 82 17 68                 a0 = u64 [sp + 0x68]
190918: c8 c7 07                 a0 = a0 + a5
190921: 53 37 00 00 ff ba f8     jump @12868 if a0 <u 4294901760
      :                          @13000
190928: 33 07 c0 22 03           a0 = 0x322c0
190933: 95 77 00 00 01           a0 = a0 + 0x10000
190938: 01                       fallthrough
      :                          @13001
190939: 82 78                    a1 = u64 [a0]
190941: c9 87 09                 a2 = a0 - a1
190944: ab 69 a3 f8              jump @12868 if a2 != s1
      :                          @13002
190948: c9 c8 09                 a2 = a1 - a5
190951: 01                       fallthrough
      :                          @13003
190952: 82 7a                    a3 = u64 [a0]
190954: ab 8a f1                 jump @13001 if a3 != a1
      :                          @13004
190957: 7b 79                    u64 [a0] = a2
190959: 33 0b                    a4 = 0
190961: 01                       fallthrough
      :                          @13005
190962: ab 8a e9                 jump @13001 if a3 != a1
      :                          @13006
190965: 28 8e f8                 jump @12868
      :                          @13007
190968: 33 07                    a0 = 0
190970: 01                       fallthrough
      :                          @13008
190971: 7b 17 20 01              u64 [sp + 0x120] = a0
190975: 95 17 b0 01              a0 = sp + 0x1b0
190979: 7b 17 38 02              u64 [sp + 0x238] = a0
190983: 33 07 92 0c              a0 = 0xc92
190987: 7b 17 40 02              u64 [sp + 0x240] = a0
190991: 95 17 c8 01              a0 = sp + 0x1c8
190995: 7b 17 48 02              u64 [sp + 0x248] = a0
190999: 33 07 2c 0c              a0 = 0xc2c
191003: 7b 17 50 02              u64 [sp + 0x250] = a0
191007: 95 18 20 01              a1 = sp + 0x120
191011: 7b 18 58 02              u64 [sp + 0x258] = a1
191015: 7b 17 60 02              u64 [sp + 0x260] = a0
191019: 49 21 90 02 02           u64 [sp + 656] = 0x2
191024: 49 21 a0 02              u64 [sp + 672] = 0
191028: 49 21 a8 02 22           u64 [sp + 680] = 0x22
191033: 49 21 b0 02              u64 [sp + 688] = 0
191037: 14 09 20 00 00 00 0c 00 00 00 a2 = 0xc00000020
191047: 7b 19 b8 02              u64 [sp + 0x2b8] = a2
191051: 46 21 c0 02 03           u8 [sp + 704] = 0x3
191056: 49 21 c8 02 02           u64 [sp + 712] = 0x2
191061: 49 21 d8 02 02           u64 [sp + 728] = 0x2
191066: 49 21 e8 02 01           u64 [sp + 744] = 0x1
191071: 49 21 f0 02 20           u64 [sp + 752] = 0x20
191076: 46 21 f8 02 03           u8 [sp + 760] = 0x3
191081: 49 21 00 03 02           u64 [sp + 768] = 0x2
191086: 49 21 10 03 02           u64 [sp + 784] = 0x2
191091: 49 21 20 03 02           u64 [sp + 800] = 0x2
191096: 49 21 28 03 20           u64 [sp + 808] = 0x20
191101: 46 21 30 03 03           u8 [sp + 816] = 0x3
191106: 33 08 f8 26 01           a1 = 0x126f8
191111: 7b 18 08 02              u64 [sp + 0x208] = a1
191115: 49 21 10 02 03           u64 [sp + 528] = 0x3
191120: 95 18 90 02              a1 = sp + 0x290
191124: 7b 18 28 02              u64 [sp + 0x228] = a1
191128: 49 21 30 02 03           u64 [sp + 560] = 0x3
191133: 95 18 38 02              a1 = sp + 0x238
191137: 7b 18 18 02              u64 [sp + 0x218] = a1
191141: 49 21 20 02 03           u64 [sp + 544] = 0x3
191146: 95 17 e0 01              a0 = sp + 0x1e0
191150: 95 18 08 02              a1 = sp + 0x208
191154: 50 20 a4 0b 48 65 fd     ra = 2980, jump @1503
      :                          @13009 [@dyn 1490]
191161: 82 16 e8 01              s1 = u64 [sp + 0x1e8]
191165: 82 1b f0 01              a4 = u64 [sp + 0x1f0]
191169: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
191173: 7b 17 70                 u64 [sp + 0x70] = a0
191176: 33 07 02                 a0 = 0x2
191179: 33 08                    a1 = 0
191181: 33 09                    a2 = 0
191183: 64 6a                    a3 = s1
191185: 33 00 a6 0b              ra = 0xba6
191189: 0a 64                    ecalli 100 // 'log'
191191: 01                       fallthrough
      :                          @13010 [@dyn 1491]
191192: 82 1c 70                 a5 = u64 [sp + 0x70]
191195: 82 17 68                 a0 = u64 [sp + 0x68]
191198: c8 c7 07                 a0 = a0 + a5
191201: 53 37 00 00 ff a2 f7     jump @12868 if a0 <u 4294901760
      :                          @13011
191208: 33 07 c0 22 03           a0 = 0x322c0
191213: 95 77 00 00 01           a0 = a0 + 0x10000
191218: 01                       fallthrough
      :                          @13012
191219: 82 78                    a1 = u64 [a0]
191221: c9 87 09                 a2 = a0 - a1
191224: ab 69 8b f7              jump @12868 if a2 != s1
      :                          @13013
191228: c9 c8 09                 a2 = a1 - a5
191231: 01                       fallthrough
      :                          @13014
191232: 82 7a                    a3 = u64 [a0]
191234: ab 8a f1                 jump @13012 if a3 != a1
      :                          @13015
191237: 7b 79                    u64 [a0] = a2
191239: 33 0b                    a4 = 0
191241: 01                       fallthrough
      :                          @13016
191242: ab 8a e9                 jump @13012 if a3 != a1
      :                          @13017
191245: 28 76 f7                 jump @12868
      :                          @13018
191248: 64 8a                    a3 = a1
191250: 01                       fallthrough
      :                          @13019
191251: 7b 1a 70                 u64 [sp + 0x70] = a3
191254: 64 a7                    a0 = a3
191256: 64 68                    a1 = s1
191258: 50 20 a8 0b ca aa fd     ra = 2984, jump @2616
      :                          @13020 [@dyn 1492]
191265: 7a 17 88 02              u32 [sp + 0x288] = a0
191269: 51 06 23 02              jump @13056 if s1 == 0
      :                          @13021
191273: 33 0b                    a4 = 0
191275: 33 0a 01                 a3 = 0x1
191278: 14 02 71 80 07 80 00 00 00 00 t0 = 0x80078071
191288: 33 08 f1 ff 00           a1 = 0xfff1
191293: 64 69                    a2 = s1
191295: 82 13 70                 t1 = u64 [sp + 0x70]
191298: 64 3c                    a5 = t1
191300: 01                       fallthrough
      :                          @13022
191301: 7c c7                    a0 = u8 [a5]
191303: 95 cc 01                 a5 = a5 + 0x1
191306: c8 a7 07                 a0 = a0 + a3
191309: 97 7a 20                 a3 = a0 << 0x20
191312: 98 aa 20                 a3 = a3 >> 0x20
191315: ca 2a 0a                 a3 = a3 * t0
191318: 98 aa 2f                 a3 = a3 >> 0x2f
191321: ca 8a 0a                 a3 = a3 * a1
191324: bf a7 0a                 i32 a3 = a0 - a3
191327: c8 ab 0b                 a4 = a4 + a3
191330: 97 b7 20                 a0 = a4 << 0x20
191333: 98 77 20                 a0 = a0 >> 0x20
191336: ca 27 07                 a0 = a0 * t0
191339: 98 77 2f                 a0 = a0 >> 0x2f
191342: ca 87 07                 a0 = a0 * a1
191345: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
191348: bf 7b 0b                 i32 a4 = a4 - a0
191351: 52 09 ce                 jump @13022 if a2 != 0
      :                          @13023
191354: 97 bb 10                 a4 = a4 << 0x10
191357: d4 ba 0a                 a3 = a3 | a4
191360: 7a 1a 8c 02              u32 [sp + 0x28c] = a3
191364: 33 07 c5 9d 1c 81        a0 = 0xffffffff811c9dc5
191370: 33 08 93 01 00 01        a1 = 0x1000193
191376: 01                       fallthrough
      :                          @13024
191377: 7c 39                    a2 = u8 [t1]
191379: 95 33 01                 t1 = t1 + 0x1
191382: d3 97 07                 a0 = a0 ^ a2
191385: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
191388: c0 87 07                 i32 a0 = a0 * a1
191391: 52 06 f2                 jump @13024 if s1 != 0
      :                          @13025
191394: 28 b2 01                 jump @13057
      :                          @13026
191397: 33 07 68 2c 01           a0 = 0x12c68
191402: 7b 17 90 02              u64 [sp + 0x290] = a0
191406: 49 21 98 02 01           u64 [sp + 664] = 0x1
191411: 49 21 b0 02              u64 [sp + 688] = 0
191415: 33 07 f0 2f 01           a0 = 0x12ff0
191420: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
191424: 49 21 a8 02              u64 [sp + 680] = 0
191428: 95 17 38 02              a0 = sp + 0x238
191432: 95 18 90 02              a1 = sp + 0x290
191436: 50 20 aa 0b 2e 64 fd     ra = 2986, jump @1503
      :                          @13027 [@dyn 1493]
191443: 82 16 40 02              s1 = u64 [sp + 0x240]
191447: 82 1b 48 02              a4 = u64 [sp + 0x248]
191451: 82 17 38 02              a0 = u64 [sp + 0x238]
191455: 7b 17 70                 u64 [sp + 0x70] = a0
191458: 33 07 02                 a0 = 0x2
191461: 33 08                    a1 = 0
191463: 33 09                    a2 = 0
191465: 64 6a                    a3 = s1
191467: 33 00 ac 0b              ra = 0xbac
191471: 0a 64                    ecalli 100 // 'log'
191473: 01                       fallthrough
      :                          @13028 [@dyn 1494]
191474: 82 17 68                 a0 = u64 [sp + 0x68]
191477: 82 18 70                 a1 = u64 [sp + 0x70]
191480: 64 8c                    a5 = a1
191482: c8 87 07                 a0 = a0 + a1
191485: 53 37 00 00 ff 86 f6     jump @12868 if a0 <u 4294901760
      :                          @13029
191492: 33 07 c0 22 03           a0 = 0x322c0
191497: 95 77 00 00 01           a0 = a0 + 0x10000
191502: 01                       fallthrough
      :                          @13030
191503: 82 78                    a1 = u64 [a0]
191505: c9 87 09                 a2 = a0 - a1
191508: ab 69 6f f6              jump @12868 if a2 != s1
      :                          @13031
191512: c9 c8 09                 a2 = a1 - a5
191515: 01                       fallthrough
      :                          @13032
191516: 82 7a                    a3 = u64 [a0]
191518: ab 8a f1                 jump @13030 if a3 != a1
      :                          @13033
191521: 7b 79                    u64 [a0] = a2
191523: 33 0b                    a4 = 0
191525: 01                       fallthrough
      :                          @13034
191526: ab 8a e9                 jump @13030 if a3 != a1
      :                          @13035
191529: 28 5a f6                 jump @12868
      :                          @13036
191532: 95 17 20 01              a0 = sp + 0x120
191536: 7b 17 08 02              u64 [sp + 0x208] = a0
191540: 33 07 2c 0c              a0 = 0xc2c
191544: 7b 17 10 02              u64 [sp + 0x210] = a0
191548: 33 07 88 2c 01           a0 = 0x12c88
191553: 7b 17 90 02              u64 [sp + 0x290] = a0
191557: 49 21 98 02 02           u64 [sp + 664] = 0x2
191562: 49 21 b0 02              u64 [sp + 688] = 0
191566: 95 17 08 02              a0 = sp + 0x208
191570: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
191574: 49 21 a8 02 01           u64 [sp + 680] = 0x1
191579: 95 17 38 02              a0 = sp + 0x238
191583: 95 18 90 02              a1 = sp + 0x290
191587: 50 20 ae 0b 97 63 fd     ra = 2990, jump @1503
      :                          @13037 [@dyn 1495]
191594: 82 16 40 02              s1 = u64 [sp + 0x240]
191598: 82 1b 48 02              a4 = u64 [sp + 0x248]
191602: 82 17 38 02              a0 = u64 [sp + 0x238]
191606: 7b 17 70                 u64 [sp + 0x70] = a0
191609: 33 07 02                 a0 = 0x2
191612: 33 08                    a1 = 0
191614: 33 09                    a2 = 0
191616: 64 6a                    a3 = s1
191618: 33 00 b0 0b              ra = 0xbb0
191622: 0a 64                    ecalli 100 // 'log'
191624: 01                       fallthrough
      :                          @13038 [@dyn 1496]
191625: 82 1c 70                 a5 = u64 [sp + 0x70]
191628: 82 17 68                 a0 = u64 [sp + 0x68]
191631: c8 c7 07                 a0 = a0 + a5
191634: 53 37 00 00 ff f1 f5     jump @12868 if a0 <u 4294901760
      :                          @13039
191641: 33 07 c0 22 03           a0 = 0x322c0
191646: 95 77 00 00 01           a0 = a0 + 0x10000
191651: 01                       fallthrough
      :                          @13040
191652: 82 78                    a1 = u64 [a0]
191654: c9 87 09                 a2 = a0 - a1
191657: ab 69 da f5              jump @12868 if a2 != s1
      :                          @13041
191661: c9 c8 09                 a2 = a1 - a5
191664: 01                       fallthrough
      :                          @13042
191665: 82 7a                    a3 = u64 [a0]
191667: ab 8a f1                 jump @13040 if a3 != a1
      :                          @13043
191670: 7b 79                    u64 [a0] = a2
191672: 33 0b                    a4 = 0
191674: 01                       fallthrough
      :                          @13044
191675: ab 8a e9                 jump @13040 if a3 != a1
      :                          @13045
191678: 28 c5 f5                 jump @12868
      :                          @13046
191681: 33 07 68 2c 01           a0 = 0x12c68
191686: 7b 17 90 02              u64 [sp + 0x290] = a0
191690: 49 21 98 02 01           u64 [sp + 664] = 0x1
191695: 49 21 b0 02              u64 [sp + 688] = 0
191699: 33 07 f0 2f 01           a0 = 0x12ff0
191704: 7b 17 a0 02              u64 [sp + 0x2a0] = a0
191708: 49 21 a8 02              u64 [sp + 680] = 0
191712: 95 17 38 02              a0 = sp + 0x238
191716: 95 18 90 02              a1 = sp + 0x290
191720: 50 20 b2 0b 12 63 fd     ra = 2994, jump @1503
      :                          @13047 [@dyn 1497]
191727: 82 16 40 02              s1 = u64 [sp + 0x240]
191731: 82 1b 48 02              a4 = u64 [sp + 0x248]
191735: 82 17 38 02              a0 = u64 [sp + 0x238]
191739: 7b 17 70                 u64 [sp + 0x70] = a0
191742: 33 07 02                 a0 = 0x2
191745: 33 08                    a1 = 0
191747: 33 09                    a2 = 0
191749: 64 6a                    a3 = s1
191751: 33 00 b4 0b              ra = 0xbb4
191755: 0a 64                    ecalli 100 // 'log'
191757: 01                       fallthrough
      :                          @13048 [@dyn 1498]
191758: 82 17 68                 a0 = u64 [sp + 0x68]
191761: 82 18 70                 a1 = u64 [sp + 0x70]
191764: 64 8c                    a5 = a1
191766: c8 87 07                 a0 = a0 + a1
191769: 53 37 00 00 ff 6a f5     jump @12868 if a0 <u 4294901760
      :                          @13049
191776: 33 07 c0 22 03           a0 = 0x322c0
191781: 95 77 00 00 01           a0 = a0 + 0x10000
191786: 01                       fallthrough
      :                          @13050
191787: 82 78                    a1 = u64 [a0]
191789: c9 87 09                 a2 = a0 - a1
191792: ab 69 53 f5              jump @12868 if a2 != s1
      :                          @13051
191796: c9 c8 09                 a2 = a1 - a5
191799: 01                       fallthrough
      :                          @13052
191800: 82 7a                    a3 = u64 [a0]
191802: ab 8a f1                 jump @13050 if a3 != a1
      :                          @13053
191805: 7b 79                    u64 [a0] = a2
191807: 33 0b                    a4 = 0
191809: 01                       fallthrough
      :                          @13054
191810: ab 8a e9                 jump @13050 if a3 != a1
      :                          @13055
191813: 28 3e f5                 jump @12868
      :                          @13056
191816: 48 21 8c 02 01           u32 [sp + 652] = 0x1
191821: 33 07 c5 9d 1c 81        a0 = 0xffffffff811c9dc5
191827: 01                       fallthrough
      :                          @13057
191828: 7a 17 10 01              u32 [sp + 0x110] = a0
191832: 3a 08 78 12 03           a1 = u64 [0x31278]
191837: 97 89 0d                 a2 = a1 << 0xd
191840: d3 98 08                 a1 = a1 ^ a2
191843: 98 89 07                 a2 = a1 >> 0x7
191846: d3 98 08                 a1 = a1 ^ a2
191849: 97 89 11                 a2 = a1 << 0x11
191852: d3 98 08                 a1 = a1 ^ a2
191855: 3e 08 78 12 03           u64 [0x31278] = a1
191860: 87 87 1d dd 6c 4f        i32 a0 = a1 * 0x4f6cdd1d
191866: 8b 78 10                 i32 a1 = a0 >> 0x10
191869: d3 87 07                 a0 = a0 ^ a1
191872: 87 77 6b ca eb 85        i32 a0 = a0 * 0xffffffff85ebca6b
191878: 8b 78 0d                 i32 a1 = a0 >> 0xd
191881: d3 78 08                 a1 = a1 ^ a0
191884: 82 17 30 01              a0 = u64 [sp + 0x130]
191888: 87 88 35 ae b2 c2        i32 a1 = a1 * 0xffffffffc2b2ae35
191894: 8b 89 10                 i32 a2 = a1 >> 0x10
191897: d3 98 08                 a1 = a1 ^ a2
191900: 7a 18 b0 01              u32 [sp + 0x1b0] = a1
191904: 51 07 2b                 jump @13061 if a0 == 0
      :                          @13058
191907: 82 19 28 01              a2 = u64 [sp + 0x128]
191911: 33 08                    a1 = 0
191913: 01                       fallthrough
      :                          @13059
191914: 7c 9a                    a3 = u8 [a2]
191916: 95 99 01                 a2 = a2 + 0x1
191919: be a8 08                 i32 a1 = a1 + a3
191922: 97 8a 0a                 a3 = a1 << 0xa
191925: be a8 08                 i32 a1 = a1 + a3
191928: 8b 8a 06                 i32 a3 = a1 >> 0x6
191931: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
191934: d3 a8 08                 a1 = a1 ^ a3
191937: 52 07 e9                 jump @13059 if a0 != 0
      :                          @13060
191940: 97 87 03                 a0 = a1 << 0x3
191943: be 87 07                 i32 a0 = a0 + a1
191946: 01                       fallthrough
      :                          @13061
191947: 8b 78 0b                 i32 a1 = a0 >> 0xb
191950: d3 87 07                 a0 = a0 ^ a1
191953: 97 78 0f                 a1 = a0 << 0xf
191956: be 87 07                 i32 a0 = a0 + a1
191959: 7a 17 c8 01              u32 [sp + 0x1c8] = a0
191963: 95 17 88 02              a0 = sp + 0x288
191967: 7b 17 38 02              u64 [sp + 0x238] = a0
191971: 33 07 8e 0c              a0 = 0xc8e
191975: 7b 17 40 02              u64 [sp + 0x240] = a0
191979: 95 18 8c 02              a1 = sp + 0x28c
191983: 7b 18 48 02              u64 [sp + 0x248] = a1
191987: 7b 17 50 02              u64 [sp + 0x250] = a0
191991: 95 18 10 01              a1 = sp + 0x110
191995: 7b 18 58 02              u64 [sp + 0x258] = a1
191999: 7b 17 60 02              u64 [sp + 0x260] = a0
192003: 95 18 b0 01              a1 = sp + 0x1b0
192007: 7b 18 68 02              u64 [sp + 0x268] = a1
192011: 7b 17 70 02              u64 [sp + 0x270] = a0
192015: 95 18 c8 01              a1 = sp + 0x1c8
192019: 7b 18 78 02              u64 [sp + 0x278] = a1
192023: 7b 17 80 02              u64 [sp + 0x280] = a0
192027: 49 21 90 02 02           u64 [sp + 656] = 0x2
192032: 49 21 a0 02              u64 [sp + 672] = 0
192036: 49 21 a8 02 08           u64 [sp + 680] = 0x8
192041: 49 21 b0 02              u64 [sp + 688] = 0
192045: 14 09 20 00 00 00 08 00 00 00 a2 = 0x800000020
192055: 7b 19 b8 02              u64 [sp + 0x2b8] = a2
192059: 46 21 c0 02 03           u8 [sp + 704] = 0x3
192064: 49 21 c8 02 02           u64 [sp + 712] = 0x2
192069: 49 21 d8 02              u64 [sp + 728] = 0
192073: 49 21 e0 02 08           u64 [sp + 736] = 0x8
192078: 49 21 e8 02 01           u64 [sp + 744] = 0x1
192083: 7b 19 f0 02              u64 [sp + 0x2f0] = a2
192087: 46 21 f8 02 03           u8 [sp + 760] = 0x3
192092: 49 21 00 03 02           u64 [sp + 768] = 0x2
192097: 49 21 10 03              u64 [sp + 784] = 0
192101: 49 21 18 03 08           u64 [sp + 792] = 0x8
192106: 49 21 20 03 02           u64 [sp + 800] = 0x2
192111: 7b 19 28 03              u64 [sp + 0x328] = a2
192115: 46 21 30 03 03           u8 [sp + 816] = 0x3
192120: 49 21 38 03 02           u64 [sp + 824] = 0x2
192125: 49 21 48 03              u64 [sp + 840] = 0
192129: 49 21 50 03 08           u64 [sp + 848] = 0x8
192134: 49 21 58 03 03           u64 [sp + 856] = 0x3
192139: 7b 19 60 03              u64 [sp + 0x360] = a2
192143: 46 21 68 03 03           u8 [sp + 872] = 0x3
192148: 49 21 70 03 02           u64 [sp + 880] = 0x2
192153: 49 21 80 03              u64 [sp + 896] = 0
192157: 49 21 88 03 08           u64 [sp + 904] = 0x8
192162: 49 21 90 03 04           u64 [sp + 912] = 0x4
192167: 7b 19 98 03              u64 [sp + 0x398] = a2
192171: 46 21 a0 03 03           u8 [sp + 928] = 0x3
192176: 33 07 20 2a 01           a0 = 0x12a20
192181: 7b 17 08 02              u64 [sp + 0x208] = a0
192185: 49 21 10 02 05           u64 [sp + 528] = 0x5
192190: 95 18 90 02              a1 = sp + 0x290
192194: 7b 18 28 02              u64 [sp + 0x228] = a1
192198: 49 21 30 02 05           u64 [sp + 560] = 0x5
192203: 95 18 38 02              a1 = sp + 0x238
192207: 7b 18 18 02              u64 [sp + 0x218] = a1
192211: 49 21 20 02 05           u64 [sp + 544] = 0x5
192216: 95 17 e0 01              a0 = sp + 0x1e0
192220: 95 18 08 02              a1 = sp + 0x208
192224: 50 20 b6 0b 1a 61 fd     ra = 2998, jump @1503
      :                          @13062 [@dyn 1499]
192231: 82 16 e8 01              s1 = u64 [sp + 0x1e8]
192235: 82 1b f0 01              a4 = u64 [sp + 0x1f0]
192239: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
192243: 7b 17 70                 u64 [sp + 0x70] = a0
192246: 33 07 02                 a0 = 0x2
192249: 33 08                    a1 = 0
192251: 33 09                    a2 = 0
192253: 64 6a                    a3 = s1
192255: 33 00 b8 0b              ra = 0xbb8
192259: 0a 64                    ecalli 100 // 'log'
192261: 01                       fallthrough
      :                          @13063 [@dyn 1500]
192262: 82 1c 70                 a5 = u64 [sp + 0x70]
192265: 82 17 68                 a0 = u64 [sp + 0x68]
192268: c8 c7 07                 a0 = a0 + a5
192271: 53 37 00 00 ff 25        jump @13069 if a0 <u 4294901760
      :                          @13064
192277: 33 07 c0 22 03           a0 = 0x322c0
192282: 95 77 00 00 01           a0 = a0 + 0x10000
192287: 01                       fallthrough
      :                          @13065
192288: 82 78                    a1 = u64 [a0]
192290: c9 87 09                 a2 = a0 - a1
192293: ab 69 0f                 jump @13069 if a2 != s1
      :                          @13066
192296: c9 c8 09                 a2 = a1 - a5
192299: 01                       fallthrough
      :                          @13067
192300: 82 7a                    a3 = u64 [a0]
192302: ab 8a f2                 jump @13065 if a3 != a1
      :                          @13068
192305: 7b 79                    u64 [a0] = a2
192307: 01                       fallthrough
      :                          @13069
192308: 82 17 20 01              a0 = u64 [sp + 0x120]
192312: 51 07 4b f3              jump @12868 if a0 == 0
      :                          @13070
192316: 56 37 00 00 01 47 f3     jump @12868 if a0 >u 65536
      :                          @13071
192323: 82 18 28 01              a1 = u64 [sp + 0x128]
192327: 33 0a c0 22 03           a3 = 0x322c0
192332: 95 a9 00 00 01           a2 = a3 + 0x10000
192337: 01                       fallthrough
      :                          @13072
192338: 82 9a                    a3 = u64 [a2]
192340: c9 a9 0b                 a4 = a2 - a3
192343: ab 8b 2c f3              jump @12868 if a4 != a1
      :                          @13073
192347: c9 7a 0b                 a4 = a3 - a0
192350: 01                       fallthrough
      :                          @13074
192351: 82 9c                    a5 = u64 [a2]
192353: ab ac f1                 jump @13072 if a5 != a3
      :                          @13075
192356: 7b 9b                    u64 [a2] = a4
192358: 33 06                    s1 = 0
192360: 01                       fallthrough
      :                          @13076
192361: ab ac e9                 jump @13072 if a5 != a3
      :                          @13077
192364: 28 17 f3                 jump @12868
      :                          @13078
192367: 95 17 e0 01              a0 = sp + 0x1e0
192371: 95 18 08 02              a1 = sp + 0x208
192375: 50 20 ba 0b 93 15 fe     ra = 3002, jump @5237
      :                          @13079 [@dyn 1501]
192382: 78 17 c8 01              u8 [sp + 0x1c8] = a0
192386: 95 17 c8 01              a0 = sp + 0x1c8
192390: 7b 17 20 01              u64 [sp + 0x120] = a0
192394: 33 07 84 0c              a0 = 0xc84
192398: 7b 17 28 01              u64 [sp + 0x128] = a0
192402: 33 07 e0 09 01           a0 = 0x109e0
192407: 7b 17 90 02              u64 [sp + 0x290] = a0
192411: 49 21 98 02 01           u64 [sp + 664] = 0x1
192416: 49 21 b0 02              u64 [sp + 688] = 0
192420: 95 18 20 01              a1 = sp + 0x120
192424: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
192428: 49 21 a8 02 01           u64 [sp + 680] = 0x1
192433: 95 17 38 02              a0 = sp + 0x238
192437: 95 18 90 02              a1 = sp + 0x290
192441: 50 20 bc 0b 41 60 fd     ra = 3004, jump @1503
      :                          @13080 [@dyn 1502]
192448: 82 16 40 02              s1 = u64 [sp + 0x240]
192452: 82 1b 48 02              a4 = u64 [sp + 0x248]
192456: 82 17 38 02              a0 = u64 [sp + 0x238]
192460: 7b 17 70                 u64 [sp + 0x70] = a0
192463: 33 07 02                 a0 = 0x2
192466: 33 08                    a1 = 0
192468: 33 09                    a2 = 0
192470: 64 6a                    a3 = s1
192472: 33 00 be 0b              ra = 0xbbe
192476: 0a 64                    ecalli 100 // 'log'
192478: 01                       fallthrough
      :                          @13081 [@dyn 1503]
192479: 82 1c 70                 a5 = u64 [sp + 0x70]
192482: 82 17 68                 a0 = u64 [sp + 0x68]
192485: c8 c7 07                 a0 = a0 + a5
192488: 33 08 00 00 ff           a1 = 0xffffffffffff0000
192493: ac 87 2f                 jump @13087 if a0 <u a1
      :                          @13082
192496: 33 07 c0 22 03           a0 = 0x322c0
192501: 95 77 00 00 01           a0 = a0 + 0x10000
192506: 01                       fallthrough
      :                          @13083
192507: 82 78                    a1 = u64 [a0]
192509: c9 87 09                 a2 = a0 - a1
192512: ab 69 1c                 jump @13087 if a2 != s1
      :                          @13084
192515: c9 c8 09                 a2 = a1 - a5
192518: 01                       fallthrough
      :                          @13085
192519: 82 7a                    a3 = u64 [a0]
192521: ab 8a f2                 jump @13083 if a3 != a1
      :                          @13086
192524: 7b 79                    u64 [a0] = a2
192526: 33 0b                    a4 = 0
192528: 95 17 08 02              a0 = sp + 0x208
192532: 33 00 c0 0b              ra = 0xbc0
192536: 28 60 1c fd              jump @221
      :                          @13087
192540: 95 17 08 02              a0 = sp + 0x208
192544: 50 20 c0 0b 58 1c fd     ra = 3008, jump @221
      :                          @13088 [@dyn 1504]
192551: 28 88 3d ff              jump @10545
      :                          @13089
192555: 33 09 02                 a2 = 0x2
192558: 83 aa                    i32 a3 = a3 + 0
192560: 33 0b 02                 a4 = 0x2
192563: 01                       fallthrough
      :                          @13090
192564: 64 8c                    a5 = a1
192566: d8 ab 08                 a1 = a4 <u a3
192569: 85 86 01                 s1 = a1 ^ 0x1
192572: be 8b 0b                 i32 a4 = a4 + a1
192575: d8 ba 08                 a1 = a3 <u a4
192578: d4 86 06                 s1 = s1 | a1
192581: c8 c9 08                 a1 = a2 + a5
192584: 64 c9                    a2 = a5
192586: 51 06 ea                 jump @13090 if s1 == 0
      :                          @13091
192589: 7b 18 e0 01              u64 [sp + 0x1e0] = a1
192593: 95 18 20 01              a1 = sp + 0x120
192597: 7b 18 38 02              u64 [sp + 0x238] = a1
192601: 33 08 62 0c              a1 = 0xc62
192605: 7b 18 40 02              u64 [sp + 0x240] = a1
192609: 95 18 e0 01              a1 = sp + 0x1e0
192613: 7b 18 48 02              u64 [sp + 0x248] = a1
192617: 33 08 2c 0c              a1 = 0xc2c
192621: 7b 18 50 02              u64 [sp + 0x250] = a1
192625: 33 08 e8 05 01           a1 = 0x105e8
192630: 7b 18 90 02              u64 [sp + 0x290] = a1
192634: 7b 17 98 02              u64 [sp + 0x298] = a0
192638: 49 21 b0 02              u64 [sp + 688] = 0
192642: 95 18 38 02              a1 = sp + 0x238
192646: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
192650: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
192654: 95 17 08 02              a0 = sp + 0x208
192658: 95 18 90 02              a1 = sp + 0x290
192662: 50 20 c2 0b 64 5f fd     ra = 3010, jump @1503
      :                          @13092 [@dyn 1505]
192669: 82 16 10 02              s1 = u64 [sp + 0x210]
192673: 82 1b 18 02              a4 = u64 [sp + 0x218]
192677: 82 17 08 02              a0 = u64 [sp + 0x208]
192681: 7b 17 70                 u64 [sp + 0x70] = a0
192684: 33 07 02                 a0 = 0x2
192687: 33 08                    a1 = 0
192689: 33 09                    a2 = 0
192691: 64 6a                    a3 = s1
192693: 33 00 c4 0b              ra = 0xbc4
192697: 0a 64                    ecalli 100 // 'log'
192699: 01                       fallthrough
      :                          @13093 [@dyn 1506]
192700: 82 1c 70                 a5 = u64 [sp + 0x70]
192703: 82 17 68                 a0 = u64 [sp + 0x68]
192706: c8 c7 07                 a0 = a0 + a5
192709: 53 37 00 00 ff be f1     jump @12868 if a0 <u 4294901760
      :                          @13094
192716: 33 07 c0 22 03           a0 = 0x322c0
192721: 95 77 00 00 01           a0 = a0 + 0x10000
192726: 01                       fallthrough
      :                          @13095
192727: 82 78                    a1 = u64 [a0]
192729: c9 87 09                 a2 = a0 - a1
192732: ab 69 a7 f1              jump @12868 if a2 != s1
      :                          @13096
192736: c9 c8 09                 a2 = a1 - a5
192739: 01                       fallthrough
      :                          @13097
192740: 82 7a                    a3 = u64 [a0]
192742: ab 8a f1                 jump @13095 if a3 != a1
      :                          @13098
192745: 7b 79                    u64 [a0] = a2
192747: 33 0b                    a4 = 0
192749: 01                       fallthrough
      :                          @13099
192750: ab 8a e9                 jump @13095 if a3 != a1
      :                          @13100
192753: 28 92 f1                 jump @12868
      :                          @13101
192756: 64 97                    a0 = a2
192758: 28 26                    jump @13104
      :                          @13102
192760: 33 0a                    a3 = 0
192762: 33 08 02                 a1 = 0x2
192765: 83 99                    i32 a2 = a2 + 0
192767: 01                       fallthrough
      :                          @13103
192768: 64 7b                    a4 = a0
192770: d8 98 07                 a0 = a1 <u a2
192773: 85 7c 01                 a5 = a0 ^ 0x1
192776: be 78 08                 i32 a1 = a1 + a0
192779: d8 89 07                 a0 = a2 <u a1
192782: d4 7c 0c                 a5 = a5 | a0
192785: 97 b7 01                 a0 = a4 << 0x1
192788: c8 a7 07                 a0 = a0 + a3
192791: 64 ba                    a3 = a4
192793: 51 0c e7                 jump @13103 if a5 == 0
      :                          @13104
192796: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
192800: 95 17 20 01              a0 = sp + 0x120
192804: 7b 17 38 02              u64 [sp + 0x238] = a0
192808: 33 07 62 0c              a0 = 0xc62
192812: 7b 17 40 02              u64 [sp + 0x240] = a0
192816: 95 17 e0 01              a0 = sp + 0x1e0
192820: 7b 17 48 02              u64 [sp + 0x248] = a0
192824: 33 07 2c 0c              a0 = 0xc2c
192828: 7b 17 50 02              u64 [sp + 0x250] = a0
192832: 33 07 40 06 01           a0 = 0x10640
192837: 7b 17 90 02              u64 [sp + 0x290] = a0
192841: 49 21 98 02 02           u64 [sp + 664] = 0x2
192846: 49 21 b0 02              u64 [sp + 688] = 0
192850: 95 18 38 02              a1 = sp + 0x238
192854: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
192858: 49 21 a8 02 02           u64 [sp + 680] = 0x2
192863: 95 17 08 02              a0 = sp + 0x208
192867: 95 18 90 02              a1 = sp + 0x290
192871: 50 20 c6 0b 93 5e fd     ra = 3014, jump @1503
      :                          @13105 [@dyn 1507]
192878: 82 16 10 02              s1 = u64 [sp + 0x210]
192882: 82 1b 18 02              a4 = u64 [sp + 0x218]
192886: 82 17 08 02              a0 = u64 [sp + 0x208]
192890: 7b 17 70                 u64 [sp + 0x70] = a0
192893: 33 07 02                 a0 = 0x2
192896: 33 08                    a1 = 0
192898: 33 09                    a2 = 0
192900: 64 6a                    a3 = s1
192902: 33 00 c8 0b              ra = 0xbc8
192906: 0a 64                    ecalli 100 // 'log'
192908: 01                       fallthrough
      :                          @13106 [@dyn 1508]
192909: 82 1c 70                 a5 = u64 [sp + 0x70]
192912: 82 17 68                 a0 = u64 [sp + 0x68]
192915: c8 c7 07                 a0 = a0 + a5
192918: 53 37 00 00 ff ed f0     jump @12868 if a0 <u 4294901760
      :                          @13107
192925: 33 07 c0 22 03           a0 = 0x322c0
192930: 95 77 00 00 01           a0 = a0 + 0x10000
192935: 01                       fallthrough
      :                          @13108
192936: 82 78                    a1 = u64 [a0]
192938: c9 87 09                 a2 = a0 - a1
192941: ab 69 d6 f0              jump @12868 if a2 != s1
      :                          @13109
192945: c9 c8 09                 a2 = a1 - a5
192948: 01                       fallthrough
      :                          @13110
192949: 82 7a                    a3 = u64 [a0]
192951: ab 8a f1                 jump @13108 if a3 != a1
      :                          @13111
192954: 7b 79                    u64 [a0] = a2
192956: 33 0b                    a4 = 0
192958: 01                       fallthrough
      :                          @13112
192959: ab 8a e9                 jump @13108 if a3 != a1
      :                          @13113
192962: 28 c1 f0                 jump @12868
      :                          @13114
192965: 54 38 00 00 01 09        jump @13116 if a1 <=u 65536
      :                          @13115
192971: 28 51 9f                 jump @11675
      :                          @13116
192974: 82 12 10 02              t0 = u64 [sp + 0x210]
192978: 33 0b c0 22 03           a4 = 0x322c0
192983: 95 ba 00 00 01           a3 = a4 + 0x10000
192988: 01                       fallthrough
      :                          @13117
192989: 82 ab                    a4 = u64 [a3]
192991: c9 ba 0c                 a5 = a3 - a4
192994: aa 2c 06                 jump @13119 if a5 == t0
      :                          @13118
192997: 28 37 9f                 jump @11675
      :                          @13119
193000: c9 8b 0c                 a5 = a4 - a1
193003: 01                       fallthrough
      :                          @13120
193004: 82 a6                    s1 = u64 [a3]
193006: ab b6 ef                 jump @13117 if s1 != a4
      :                          @13121
193009: 7b ac                    u64 [a3] = a5
193011: 33 09                    a2 = 0
193013: 01                       fallthrough
      :                          @13122
193014: ab b6 e7                 jump @13117 if s1 != a4
      :                          @13123
193017: 28 23 9f                 jump @11675
      :                          @13124
193020: 54 38 00 00 01 09        jump @13126 if a1 <=u 65536
      :                          @13125
193026: 28 27 9f                 jump @11677
      :                          @13126
193029: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
193033: 33 0a c0 22 03           a3 = 0x322c0
193038: 95 a9 00 00 01           a2 = a3 + 0x10000
193043: 01                       fallthrough
      :                          @13127
193044: 82 9a                    a3 = u64 [a2]
193046: c9 a9 0b                 a4 = a2 - a3
193049: aa 7b 06                 jump @13129 if a4 == a0
      :                          @13128
193052: 28 0d 9f                 jump @11677
      :                          @13129
193055: c9 8a 0b                 a4 = a3 - a1
193058: 01                       fallthrough
      :                          @13130
193059: 82 9c                    a5 = u64 [a2]
193061: ab ac ef                 jump @13127 if a5 != a3
      :                          @13131
193064: 7b 9b                    u64 [a2] = a4
193066: 33 06                    s1 = 0
193068: 01                       fallthrough
      :                          @13132
193069: ab ac e7                 jump @13127 if a5 != a3
      :                          @13133
193072: 28 f9 9e                 jump @11677
      :                          @13134
193075: 54 38 00 00 01 09        jump @13136 if a1 <=u 65536
      :                          @13135
193081: 28 cd a0                 jump @11708
      :                          @13136
193084: 82 12 10 02              t0 = u64 [sp + 0x210]
193088: 33 0b c0 22 03           a4 = 0x322c0
193093: 95 ba 00 00 01           a3 = a4 + 0x10000
193098: 01                       fallthrough
      :                          @13137
193099: 82 ab                    a4 = u64 [a3]
193101: c9 ba 0c                 a5 = a3 - a4
193104: aa 2c 06                 jump @13139 if a5 == t0
      :                          @13138
193107: 28 b3 a0                 jump @11708
      :                          @13139
193110: c9 8b 0c                 a5 = a4 - a1
193113: 01                       fallthrough
      :                          @13140
193114: 82 a6                    s1 = u64 [a3]
193116: ab b6 ef                 jump @13137 if s1 != a4
      :                          @13141
193119: 7b ac                    u64 [a3] = a5
193121: 33 09                    a2 = 0
193123: 01                       fallthrough
      :                          @13142
193124: ab b6 e7                 jump @13137 if s1 != a4
      :                          @13143
193127: 28 9f a0                 jump @11708
      :                          @13144
193130: 54 38 00 00 01 09        jump @13146 if a1 <=u 65536
      :                          @13145
193136: 28 a3 a0                 jump @11710
      :                          @13146
193139: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
193143: 33 0a c0 22 03           a3 = 0x322c0
193148: 95 a9 00 00 01           a2 = a3 + 0x10000
193153: 01                       fallthrough
      :                          @13147
193154: 82 9a                    a3 = u64 [a2]
193156: c9 a9 0b                 a4 = a2 - a3
193159: aa 7b 06                 jump @13149 if a4 == a0
      :                          @13148
193162: 28 89 a0                 jump @11710
      :                          @13149
193165: c9 8a 0b                 a4 = a3 - a1
193168: 01                       fallthrough
      :                          @13150
193169: 82 9c                    a5 = u64 [a2]
193171: ab ac ef                 jump @13147 if a5 != a3
      :                          @13151
193174: 7b 9b                    u64 [a2] = a4
193176: 33 06                    s1 = 0
193178: 01                       fallthrough
      :                          @13152
193179: ab ac e7                 jump @13147 if a5 != a3
      :                          @13153
193182: 28 75 a0                 jump @11710
      :                          @13154
193185: 54 38 00 00 01 09        jump @13156 if a1 <=u 65536
      :                          @13155
193191: 28 8a a6                 jump @11815
      :                          @13156
193194: 82 12 10 02              t0 = u64 [sp + 0x210]
193198: 33 0b c0 22 03           a4 = 0x322c0
193203: 95 ba 00 00 01           a3 = a4 + 0x10000
193208: 01                       fallthrough
      :                          @13157
193209: 82 ab                    a4 = u64 [a3]
193211: c9 ba 0c                 a5 = a3 - a4
193214: aa 2c 06                 jump @13159 if a5 == t0
      :                          @13158
193217: 28 70 a6                 jump @11815
      :                          @13159
193220: c9 8b 0c                 a5 = a4 - a1
193223: 01                       fallthrough
      :                          @13160
193224: 82 a6                    s1 = u64 [a3]
193226: ab b6 ef                 jump @13157 if s1 != a4
      :                          @13161
193229: 7b ac                    u64 [a3] = a5
193231: 33 09                    a2 = 0
193233: 01                       fallthrough
      :                          @13162
193234: ab b6 e7                 jump @13157 if s1 != a4
      :                          @13163
193237: 28 5c a6                 jump @11815
      :                          @13164
193240: 54 38 00 00 01 09        jump @13166 if a1 <=u 65536
      :                          @13165
193246: 28 60 a6                 jump @11817
      :                          @13166
193249: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
193253: 33 0a c0 22 03           a3 = 0x322c0
193258: 95 a9 00 00 01           a2 = a3 + 0x10000
193263: 01                       fallthrough
      :                          @13167
193264: 82 9a                    a3 = u64 [a2]
193266: c9 a9 0b                 a4 = a2 - a3
193269: aa 7b 06                 jump @13169 if a4 == a0
      :                          @13168
193272: 28 46 a6                 jump @11817
      :                          @13169
193275: c9 8a 0b                 a4 = a3 - a1
193278: 01                       fallthrough
      :                          @13170
193279: 82 9c                    a5 = u64 [a2]
193281: ab ac ef                 jump @13167 if a5 != a3
      :                          @13171
193284: 7b 9b                    u64 [a2] = a4
193286: 33 06                    s1 = 0
193288: 01                       fallthrough
      :                          @13172
193289: ab ac e7                 jump @13167 if a5 != a3
      :                          @13173
193292: 28 32 a6                 jump @11817
      :                          @13174
193295: 54 38 00 00 01 09        jump @13176 if a1 <=u 65536
      :                          @13175
193301: 28 06 a8                 jump @11848
      :                          @13176
193304: 82 12 10 02              t0 = u64 [sp + 0x210]
193308: 33 0b c0 22 03           a4 = 0x322c0
193313: 95 ba 00 00 01           a3 = a4 + 0x10000
193318: 01                       fallthrough
      :                          @13177
193319: 82 ab                    a4 = u64 [a3]
193321: c9 ba 0c                 a5 = a3 - a4
193324: aa 2c 06                 jump @13179 if a5 == t0
      :                          @13178
193327: 28 ec a7                 jump @11848
      :                          @13179
193330: c9 8b 0c                 a5 = a4 - a1
193333: 01                       fallthrough
      :                          @13180
193334: 82 a6                    s1 = u64 [a3]
193336: ab b6 ef                 jump @13177 if s1 != a4
      :                          @13181
193339: 7b ac                    u64 [a3] = a5
193341: 33 09                    a2 = 0
193343: 01                       fallthrough
      :                          @13182
193344: ab b6 e7                 jump @13177 if s1 != a4
      :                          @13183
193347: 28 d8 a7                 jump @11848
      :                          @13184
193350: 54 38 00 00 01 09        jump @13186 if a1 <=u 65536
      :                          @13185
193356: 28 dc a7                 jump @11850
      :                          @13186
193359: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
193363: 33 0a c0 22 03           a3 = 0x322c0
193368: 95 a9 00 00 01           a2 = a3 + 0x10000
193373: 01                       fallthrough
      :                          @13187
193374: 82 9a                    a3 = u64 [a2]
193376: c9 a9 0b                 a4 = a2 - a3
193379: aa 7b 06                 jump @13189 if a4 == a0
      :                          @13188
193382: 28 c2 a7                 jump @11850
      :                          @13189
193385: c9 8a 0b                 a4 = a3 - a1
193388: 01                       fallthrough
      :                          @13190
193389: 82 9c                    a5 = u64 [a2]
193391: ab ac ef                 jump @13187 if a5 != a3
      :                          @13191
193394: 7b 9b                    u64 [a2] = a4
193396: 33 06                    s1 = 0
193398: 01                       fallthrough
      :                          @13192
193399: ab ac e7                 jump @13187 if a5 != a3
      :                          @13193
193402: 28 ae a7                 jump @11850
      :                          @13194
193405: 51 07 49                 jump @13212 if a0 == 0
      :                          @13195
193408: 51 17 01 31              jump @13202 if a0 == 1
      :                          @13196
193412: 52 17 02 23              jump @13201 if a0 != 2
      :                          @13197
193416: 49 21 e0 01 0e           u64 [sp + 480] = 0xe
193421: 49 21 e8 01 19           u64 [sp + 488] = 0x19
193426: 28 3f                    jump @13213
      :                          @13198
193428: 51 07 1d                 jump @13202 if a0 == 0
      :                          @13199
193431: 52 17 01 10              jump @13201 if a0 != 1
      :                          @13200
193435: 49 21 e0 01 12           u64 [sp + 480] = 0x12
193440: 49 21 e8 01 19           u64 [sp + 488] = 0x19
193445: 28 2c                    jump @13213
      :                          @13201
193447: 49 21 e8 01              u64 [sp + 488] = 0
193451: 49 21 e0 01              u64 [sp + 480] = 0
193455: 28 22                    jump @13213
      :                          @13202
193457: 49 21 e0 01 09           u64 [sp + 480] = 0x9
193462: 49 21 e8 01 09           u64 [sp + 488] = 0x9
193467: 28 16                    jump @13213
      :                          @13203
193469: 00                       trap
      :                          @13204
193470: 00                       trap
      :                          @13205
193471: 00                       trap
      :                          @13206
193472: 00                       trap
      :                          @13207
193473: 00                       trap
      :                          @13208
193474: 00                       trap
      :                          @13209
193475: 00                       trap
      :                          @13210
193476: 00                       trap
      :                          @13211
193477: 00                       trap
      :                          @13212
193478: 49 21 e0 01 06           u64 [sp + 480] = 0x6
193483: 49 21 e8 01 06           u64 [sp + 488] = 0x6
193488: 01                       fallthrough
      :                          @13213
193489: 95 17 c8 01              a0 = sp + 0x1c8
193493: 7b 17 90 02              u64 [sp + 0x290] = a0
193497: 33 07 2c 0c              a0 = 0xc2c
193501: 7b 17 98 02              u64 [sp + 0x298] = a0
193505: 95 18 20 01              a1 = sp + 0x120
193509: 7b 18 a0 02              u64 [sp + 0x2a0] = a1
193513: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
193517: 95 17 e0 01              a0 = sp + 0x1e0
193521: 7b 17 b0 02              u64 [sp + 0x2b0] = a0
193525: 33 07 92 01              a0 = 0x192
193529: 7b 17 b8 02              u64 [sp + 0x2b8] = a0
193533: 33 07 58 14 01           a0 = 0x11458
193538: 7b 17 38 02              u64 [sp + 0x238] = a0
193542: 49 21 40 02 03           u64 [sp + 576] = 0x3
193547: 49 21 58 02              u64 [sp + 600] = 0
193551: 95 18 90 02              a1 = sp + 0x290
193555: 7b 18 48 02              u64 [sp + 0x248] = a1
193559: 49 21 50 02 03           u64 [sp + 592] = 0x3
193564: 95 17 08 02              a0 = sp + 0x208
193568: 95 18 38 02              a1 = sp + 0x238
193572: 50 20 ca 0b d6 5b fd     ra = 3018, jump @1503
      :                          @13214 [@dyn 1509]
193579: 82 16 10 02              s1 = u64 [sp + 0x210]
193583: 82 1b 18 02              a4 = u64 [sp + 0x218]
193587: 82 17 08 02              a0 = u64 [sp + 0x208]
193591: 7b 17 70                 u64 [sp + 0x70] = a0
193594: 33 07 02                 a0 = 0x2
193597: 33 08                    a1 = 0
193599: 33 09                    a2 = 0
193601: 64 6a                    a3 = s1
193603: 33 00 cc 0b              ra = 0xbcc
193607: 0a 64                    ecalli 100 // 'log'
193609: 01                       fallthrough
      :                          @13215 [@dyn 1510]
193610: 82 1c 70                 a5 = u64 [sp + 0x70]
193613: 82 17 68                 a0 = u64 [sp + 0x68]
193616: c8 c7 07                 a0 = a0 + a5
193619: 55 37 00 00 ff 09        jump @13217 if a0 >=u 4294901760
      :                          @13216
193625: 28 2a ee                 jump @12868
      :                          @13217
193628: 33 07 c0 22 03           a0 = 0x322c0
193633: 95 77 00 00 01           a0 = a0 + 0x10000
193638: 01                       fallthrough
      :                          @13218
193639: 82 78                    a1 = u64 [a0]
193641: c9 87 09                 a2 = a0 - a1
193644: aa 69 06                 jump @13220 if a2 == s1
      :                          @13219
193647: 28 14 ee                 jump @12868
      :                          @13220
193650: c9 c8 09                 a2 = a1 - a5
193653: 01                       fallthrough
      :                          @13221
193654: 82 7a                    a3 = u64 [a0]
193656: ab 8a ef                 jump @13218 if a3 != a1
      :                          @13222
193659: 7b 79                    u64 [a0] = a2
193661: 33 0b                    a4 = 0
193663: 01                       fallthrough
      :                          @13223
193664: ab 8a e7                 jump @13218 if a3 != a1
      :                          @13224
193667: 28 00 ee                 jump @12868
      :                          @13225
193670: 00                       trap
      :                          @13226
193671: 00                       trap
      :                          @13227
193672: 28 ed 17                 jump @13702
      :                          @13228
193675: 00                       trap
      :                          @13229
193676: 00                       trap
      :                          @13230
193677: 00                       trap
      :                          @13231
193678: 00                       trap
      :                          @13232
193679: 00                       trap
      :                          @13233
193680: 00                       trap
      :                          @13234
193681: 00                       trap
      :                          @13235
193682: 00                       trap
      :                          @13236
193683: 00                       trap
      :                          @13237
193684: 00                       trap
      :                          @13238
193685: 00                       trap
      :                          @13239
193686: 00                       trap
      :                          @13240
193687: 00                       trap
      :                          @13241
193688: 00                       trap
      :                          @13242
193689: 00                       trap
      :                          @13243
193690: 00                       trap
      :                          @13244
193691: 00                       trap
      :                          @13245
193692: 00                       trap
      :                          @13246
193693: 00                       trap
      :                          @13247
193694: 00                       trap
      :                          @13248
193695: 00                       trap
      :                          @13249
193696: 00                       trap
      :                          @13250
193697: 00                       trap
      :                          @13251
193698: 00                       trap
      :                          @13252
193699: 00                       trap
      :                          @13253
193700: 00                       trap
      :                          @13254
193701: 00                       trap
      :                          @13255
193702: 00                       trap
      :                          @13256
193703: 00                       trap
      :                          @13257
193704: 00                       trap
      :                          @13258
193705: 00                       trap
      :                          @13259
193706: 00                       trap
      :                          @13260
193707: 00                       trap
      :                          @13261
193708: 00                       trap
      :                          @13262
193709: 00                       trap
      :                          @13263
193710: 28 c7 17                 jump @13702
      :                          @13264
193713: 00                       trap
      :                          @13265
193714: 00                       trap
      :                          @13266
193715: 00                       trap
      :                          @13267
193716: 00                       trap
      :                          @13268
193717: 00                       trap
      :                          @13269
193718: 00                       trap
      :                          @13270
193719: 00                       trap
      :                          @13271
193720: 00                       trap
      :                          @13272
193721: 00                       trap
      :                          @13273
193722: 00                       trap
      :                          @13274
193723: 28 ba 17                 jump @13702
      :                          @13275
193726: 00                       trap
      :                          @13276
193727: 00                       trap
      :                          @13277
193728: 00                       trap
      :                          @13278
193729: 00                       trap
      :                          @13279
193730: 00                       trap
      :                          @13280
193731: 00                       trap
      :                          @13281
193732: 00                       trap
      :                          @13282
193733: 00                       trap
      :                          @13283
193734: 00                       trap
      :                          @13284
193735: 00                       trap
      :                          @13285
193736: 00                       trap
      :                          @13286
193737: 00                       trap
      :                          @13287
193738: 00                       trap
      :                          @13288
193739: 00                       trap
      :                          @13289
193740: 00                       trap
      :                          @13290
193741: 00                       trap
      :                          @13291
193742: 00                       trap
      :                          @13292 [export #0: 'refine']
193743: 95 11 70 ff              sp = sp + 0xffffffffffffff70
193747: 7b 10 88 00              u64 [sp + 0x88] = ra
193751: 7b 15 80 00              u64 [sp + 0x80] = s0
193755: 7b 16 78                 u64 [sp + 0x78] = s1
193758: 64 86                    s1 = a1
193760: 64 7a                    a3 = a0
193762: 33 05 01                 s0 = 0x1
193765: 7a 15 1c                 u32 [sp + 0x1c] = s0
193768: 33 07 00 00 01           a0 = 0x10000
193773: 53 16 04 40              jump @13301 if s1 <u 4
      :                          @13293
193777: 7d a8                    a1 = i8 [a3]
193779: 59 08 37                 jump @13300 if a1 >=s 0
      :                          @13294
193782: 84 89 ff 00              a2 = a1 & 0xff
193786: 33 05 02                 s0 = 0x2
193789: 53 29 c0 00 2d           jump @13300 if a2 <u 192
      :                          @13295
193794: 33 05 03                 s0 = 0x3
193797: 53 29 e0 00 25           jump @13300 if a2 <u 224
      :                          @13296
193802: 33 05 04                 s0 = 0x4
193805: 53 29 f0 00 1d           jump @13300 if a2 <u 240
      :                          @13297
193810: 33 05 05                 s0 = 0x5
193813: 53 29 f8 00 15           jump @13300 if a2 <u 248
      :                          @13298
193818: 33 05 06                 s0 = 0x6
193821: 53 29 fc 00 0d           jump @13300 if a2 <u 252
      :                          @13299
193826: 88 98 fe 00              a1 = a2 <u 0xfe
193830: 9a 85 08                 s0 = 0x8 - a1
193833: 01                       fallthrough
      :                          @13300
193834: ae 56 08                 jump @13302 if s1 >=u s0
      :                          @13301
193837: 33 08                    a1 = 0
193839: 28 de 00                 jump @13325
      :                          @13302
193842: 64 a7                    a0 = a3
193844: 64 58                    a1 = s0
193846: 7b 1a 10                 u64 [sp + 0x10] = a3
193849: 50 20 ce 0b 3d 2e        ra = 3022, jump @14063
      :                          @13303 [@dyn 1511]
193855: aa 56 c6 00              jump @13324 if s1 == s0
      :                          @13304
193859: 82 17 10                 a0 = u64 [sp + 0x10]
193862: c8 57 07                 a0 = a0 + s0
193865: 7d 78                    a1 = i8 [a0]
193867: c9 56 06                 s1 = s1 - s0
193870: 33 05 01                 s0 = 0x1
193873: 59 08 37                 jump @13311 if a1 >=s 0
      :                          @13305
193876: 84 89 ff 00              a2 = a1 & 0xff
193880: 33 05 02                 s0 = 0x2
193883: 53 29 c0 00 2d           jump @13311 if a2 <u 192
      :                          @13306
193888: 33 05 03                 s0 = 0x3
193891: 53 29 e0 00 25           jump @13311 if a2 <u 224
      :                          @13307
193896: 33 05 04                 s0 = 0x4
193899: 53 29 f0 00 1d           jump @13311 if a2 <u 240
      :                          @13308
193904: 33 05 05                 s0 = 0x5
193907: 53 29 f8 00 15           jump @13311 if a2 <u 248
      :                          @13309
193912: 33 05 06                 s0 = 0x6
193915: 53 29 fc 00 0d           jump @13311 if a2 <u 252
      :                          @13310
193920: 88 98 fe 00              a1 = a2 <u 0xfe
193924: 9a 85 08                 s0 = 0x8 - a1
193927: 01                       fallthrough
      :                          @13311
193928: ac 56 7d                 jump @13324 if s1 <u s0
      :                          @13312
193931: 64 58                    a1 = s0
193933: 7b 17 10                 u64 [sp + 0x10] = a0
193936: 50 20 d0 0b e6 2d        ra = 3024, jump @14063
      :                          @13313 [@dyn 1512]
193942: aa 56 6f                 jump @13324 if s1 == s0
      :                          @13314
193945: 82 17 10                 a0 = u64 [sp + 0x10]
193948: c8 57 07                 a0 = a0 + s0
193951: 7d 78                    a1 = i8 [a0]
193953: c9 56 05                 s0 = s1 - s0
193956: 33 06 01                 s1 = 0x1
193959: 59 08 37                 jump @13321 if a1 >=s 0
      :                          @13315
193962: 84 89 ff 00              a2 = a1 & 0xff
193966: 33 06 02                 s1 = 0x2
193969: 53 29 c0 00 2d           jump @13321 if a2 <u 192
      :                          @13316
193974: 33 06 03                 s1 = 0x3
193977: 53 29 e0 00 25           jump @13321 if a2 <u 224
      :                          @13317
193982: 33 06 04                 s1 = 0x4
193985: 53 29 f0 00 1d           jump @13321 if a2 <u 240
      :                          @13318
193990: 33 06 05                 s1 = 0x5
193993: 53 29 f8 00 15           jump @13321 if a2 <u 248
      :                          @13319
193998: 33 06 06                 s1 = 0x6
194001: 53 29 fc 00 0d           jump @13321 if a2 <u 252
      :                          @13320
194006: 88 98 fe 00              a1 = a2 <u 0xfe
194010: 9a 86 08                 s1 = 0x8 - a1
194013: 01                       fallthrough
      :                          @13321
194014: ac 65 d0 01              jump @13350 if s0 <u s1
      :                          @13322
194018: 7b 17 10                 u64 [sp + 0x10] = a0
194021: 64 68                    a1 = s1
194023: 50 20 d2 0b 8f 2d        ra = 3026, jump @14063
      :                          @13323 [@dyn 1513]
194029: e4 65 08                 a1 = maxu(s0, s1)
194032: c9 68 08                 a1 = a1 - s1
194035: d8 78 09                 a2 = a1 <u a0
194038: e4 78 08                 a1 = maxu(a1, a0)
194041: c9 78 08                 a1 = a1 - a0
194044: 88 88 20                 a1 = a1 <u 0x20
194047: d4 98 08                 a1 = a1 | a2
194050: 51 08 1c                 jump @13326 if a1 == 0
      :                          @13324
194053: 33 08                    a1 = 0
194055: 33 07 00 00 01           a0 = 0x10000
194060: 01                       fallthrough
      :                          @13325
194061: 82 10 88 00              ra = u64 [sp + 0x88]
194065: 82 15 80 00              s0 = u64 [sp + 0x80]
194069: 82 16 78                 s1 = u64 [sp + 0x78]
194072: 95 11 90 00              sp = sp + 0x90
194076: 32 00                    ret
      :                          @13326
194078: 54 17 03 a4 00           jump @13335 if a0 <=u 3
      :                          @13327
194083: 82 17 10                 a0 = u64 [sp + 0x10]
194086: c8 76 06                 s1 = s1 + a0
194089: 7c 67 01                 a0 = u8 [s1 + 0x1]
194092: 7c 68                    a1 = u8 [s1]
194094: 7c 69 02                 a2 = u8 [s1 + 0x2]
194097: 7d 6a 03                 a3 = i8 [s1 + 0x3]
194100: 97 77 08                 a0 = a0 << 0x8
194103: d4 87 07                 a0 = a0 | a1
194106: 97 99 10                 a2 = a2 << 0x10
194109: 97 aa 18                 a3 = a3 << 0x18
194112: d4 a9 09                 a2 = a2 | a3
194115: d4 97 07                 a0 = a0 | a2
194118: 3d 07 ac 12 03           u32 [0x312ac] = a0
194123: 7a 17 1c                 u32 [sp + 0x1c] = a0
194126: 95 17 1c                 a0 = sp + 0x1c
194129: 7b 17 68                 u64 [sp + 0x68] = a0
194132: 33 07 78                 a0 = 0x78
194135: 7b 17 70                 u64 [sp + 0x70] = a0
194138: 33 07 70 2e 01           a0 = 0x12e70
194143: 7b 17 38                 u64 [sp + 0x38] = a0
194146: 49 11 40 01              u64 [sp + 64] = 0x1
194150: 49 11 58                 u64 [sp + 88] = 0
194153: 95 18 68                 a1 = sp + 0x68
194156: 7b 18 48                 u64 [sp + 0x48] = a1
194159: 49 11 50 01              u64 [sp + 80] = 0x1
194163: 95 17 20                 a0 = sp + 0x20
194166: 95 18 38                 a1 = sp + 0x38
194169: 50 20 d4 0b 53 0d        ra = 3028, jump @13547
      :                          @13328 [@dyn 1514]
194175: 82 15 28                 s0 = u64 [sp + 0x28]
194178: 82 1b 30                 a4 = u64 [sp + 0x30]
194181: 82 16 20                 s1 = u64 [sp + 0x20]
194184: 33 07 02                 a0 = 0x2
194187: 33 08                    a1 = 0
194189: 33 09                    a2 = 0
194191: 64 5a                    a3 = s0
194193: 33 00 d6 0b              ra = 0xbd6
194197: 0a 64                    ecalli 100 // 'log'
194199: 01                       fallthrough
      :                          @13329 [@dyn 1515]
194200: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
194205: 53 38 00 00 ff 25        jump @13335 if a1 <u 4294901760
      :                          @13330
194211: 33 07 c0 22 03           a0 = 0x322c0
194216: 95 77 00 00 01           a0 = a0 + 0x10000
194221: 01                       fallthrough
      :                          @13331
194222: 82 78                    a1 = u64 [a0]
194224: c9 87 09                 a2 = a0 - a1
194227: ab 59 0f                 jump @13335 if a2 != s0
      :                          @13332
194230: c9 68 09                 a2 = a1 - s1
194233: 01                       fallthrough
      :                          @13333
194234: 82 7a                    a3 = u64 [a0]
194236: ab 8a f2                 jump @13331 if a3 != a1
      :                          @13334
194239: 7b 79                    u64 [a0] = a2
194241: 01                       fallthrough
      :                          @13335
194242: 33 07 10 00 03           a0 = 0x30010
194247: 33 05 08 10              s0 = 0x1008
194251: 7b 17 10                 u64 [sp + 0x10] = a0
194254: 33 08 08 10              a1 = 0x1008
194258: 33 00 d8 0b              ra = 0xbd8
194262: 0a 07                    ecalli 7 // 'export'
194264: 01                       fallthrough
      :                          @13336 [@dyn 1516]
194265: 81 18 1c                 a1 = i32 [sp + 0x1c]
194268: 7b 18 08                 u64 [sp + 0x8] = a1
194271: 53 18 02 43              jump @13342 if a1 <u 2
      :                          @13337
194275: 33 06 01                 s1 = 0x1
194278: 33 0c ac 12 03           a5 = 0x312ac
194283: 7b 1c                    u64 [sp] = a5
194285: 01                       fallthrough
      :                          @13338
194286: 95 67 01                 a0 = s1 + 0x1
194289: 64 58                    a1 = s0
194291: 82 19 10                 a2 = u64 [sp + 0x10]
194294: 64 ca                    a3 = a5
194296: 01                       fallthrough
      :                          @13339
194297: 7c 9b                    a4 = u8 [a2]
194299: c8 7b 0b                 a4 = a4 + a0
194302: 78 ab                    u8 [a3] = a4
194304: 95 aa 01                 a3 = a3 + 0x1
194307: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
194310: 95 99 01                 a2 = a2 + 0x1
194313: 52 08 f0                 jump @13339 if a1 != 0
      :                          @13340
194316: 64 c7                    a0 = a5
194318: 64 58                    a1 = s0
194320: 33 00 da 0b              ra = 0xbda
194324: 0a 07                    ecalli 7 // 'export'
194326: 01                       fallthrough
      :                          @13341 [@dyn 1517]
194327: 82 1c                    a5 = u64 [sp]
194329: 83 66 01                 i32 s1 = s1 + 0x1
194332: 82 17 08                 a0 = u64 [sp + 0x8]
194335: ab 76 cf                 jump @13338 if s1 != a0
      :                          @13342
194338: 33 07                    a0 = 0
194340: 01                       fallthrough
      :                          @13343
194341: 83 78                    i32 a1 = a0 + 0
194343: 89 88 ab 00              a1 = a1 <s 0xab
194347: 85 86 01                 s1 = a1 ^ 0x1
194350: 83 75 01                 i32 s0 = a0 + 0x1
194353: 93 85 ab 00              s0 = 0xab if a1 == 0
194357: 33 00 dc 0b              ra = 0xbdc
194361: 95 11 40 fc              sp = sp + 0xfffffffffffffc40
194365: 7b 10 b8 03              u64 [sp + 0x3b8] = ra
194369: 7b 15 b0 03              u64 [sp + 0x3b0] = s0
194373: 7b 16 a8 03              u64 [sp + 0x3a8] = s1
194377: 95 15 c0 03              s0 = sp + 0x3c0
194381: 84 11 f0                 sp = sp & 0xfffffffffffffff0
194384: 64 76                    s1 = a0
194386: 49 11 68 ff ff fe        u64 [sp + 104] = 0xfffffffffffeffff
194392: 78 16 7f                 u8 [sp + 0x7f] = s1
194395: 33 00 a0 04              ra = 0x4a0
194399: 0a                       ecalli 0 // 'gas'
194400: 28 45 98 fe              jump @8048
      :                          @13344 [@dyn 1518]
194404: 89 57 ac 00              a0 = s0 <s 0xac
194408: 85 77 01                 a0 = a0 ^ 0x1
194411: d4 76 06                 s1 = s1 | a0
194414: 64 57                    a0 = s0
194416: 51 06 b5                 jump @13343 if s1 == 0
      :                          @13345
194419: 81 17 1c                 a0 = i32 [sp + 0x1c]
194422: 51 07 28                 jump @13349 if a0 == 0
      :                          @13346
194425: 52 17 01 06              jump @13348 if a0 != 1
      :                          @13347
194429: 28 21                    jump @13349
      :                          @13348
194431: 83 78 fe                 i32 a1 = a0 + 0xfffffffffffffffe
194434: 97 89 01                 a2 = a1 << 0x1
194437: 83 7a fd                 i32 a3 = a0 + 0xfffffffffffffffd
194440: 97 aa 20                 a3 = a3 << 0x20
194443: 97 88 20                 a1 = a1 << 0x20
194446: d6 a8 08                 a1 = a1 mulhu a3
194449: 98 88 01                 a1 = a1 >> 0x1
194452: c8 98 08                 a1 = a1 + a2
194455: 83 88 01                 i32 a1 = a1 + 0x1
194458: be 87 07                 i32 a0 = a0 + a1
194461: 01                       fallthrough
      :                          @13349
194462: 3d 07 8c 12 03           u32 [0x3128c] = a0
194467: 33 07 8c 12 03           a0 = 0x3128c
194472: 33 08 04                 a1 = 0x4
194475: 28 62 fe                 jump @13325
      :                          @13350
194478: 00                       trap
      :                          @13351 [export #1: 'accumulate']
194479: 95 11 38 ff              sp = sp + 0xffffffffffffff38
194483: 7b 10 c0 00              u64 [sp + 0xc0] = ra
194487: 7b 15 b8 00              u64 [sp + 0xb8] = s0
194491: 7b 16 b0 00              u64 [sp + 0xb0] = s1
194495: 33 05 00 00 01           s0 = 0x10000
194500: 51 08 a3 00              jump @13371 if a1 == 0
      :                          @13352
194504: 64 86                    s1 = a1
194506: 7d 78                    a1 = i8 [a0]
194508: 33 05 01                 s0 = 0x1
194511: 59 08 37                 jump @13359 if a1 >=s 0
      :                          @13353
194514: 84 89 ff 00              a2 = a1 & 0xff
194518: 33 05 02                 s0 = 0x2
194521: 53 29 c0 00 2d           jump @13359 if a2 <u 192
      :                          @13354
194526: 33 05 03                 s0 = 0x3
194529: 53 29 e0 00 25           jump @13359 if a2 <u 224
      :                          @13355
194534: 33 05 04                 s0 = 0x4
194537: 53 29 f0 00 1d           jump @13359 if a2 <u 240
      :                          @13356
194542: 33 05 05                 s0 = 0x5
194545: 53 29 f8 00 15           jump @13359 if a2 <u 248
      :                          @13357
194550: 33 05 06                 s0 = 0x6
194553: 53 29 fc 00 0d           jump @13359 if a2 <u 252
      :                          @13358
194558: 88 98 fe 00              a1 = a2 <u 0xfe
194562: 9a 85 08                 s0 = 0x8 - a1
194565: 01                       fallthrough
      :                          @13359
194566: ac 56 59                 jump @13370 if s1 <u s0
      :                          @13360
194569: 64 58                    a1 = s0
194571: 7b 17 38                 u64 [sp + 0x38] = a0
194574: 50 20 de 0b 68 2b        ra = 3038, jump @14063
      :                          @13361 [@dyn 1519]
194580: aa 56 4b                 jump @13370 if s1 == s0
      :                          @13362
194583: 82 17 38                 a0 = u64 [sp + 0x38]
194586: c8 57 07                 a0 = a0 + s0
194589: 7d 78                    a1 = i8 [a0]
194591: c9 56 06                 s1 = s1 - s0
194594: 33 05 01                 s0 = 0x1
194597: 59 08 37                 jump @13369 if a1 >=s 0
      :                          @13363
194600: 84 89 ff 00              a2 = a1 & 0xff
194604: 33 05 02                 s0 = 0x2
194607: 53 29 c0 00 2d           jump @13369 if a2 <u 192
      :                          @13364
194612: 33 05 03                 s0 = 0x3
194615: 53 29 e0 00 25           jump @13369 if a2 <u 224
      :                          @13365
194620: 33 05 04                 s0 = 0x4
194623: 53 29 f0 00 1d           jump @13369 if a2 <u 240
      :                          @13366
194628: 33 05 05                 s0 = 0x5
194631: 53 29 f8 00 15           jump @13369 if a2 <u 248
      :                          @13367
194636: 33 05 06                 s0 = 0x6
194639: 53 29 fc 00 0d           jump @13369 if a2 <u 252
      :                          @13368
194644: 88 98 fe 00              a1 = a2 <u 0xfe
194648: 9a 85 08                 s0 = 0x8 - a1
194651: 01                       fallthrough
      :                          @13369
194652: ae 56 1f                 jump @13372 if s1 >=u s0
      :                          @13370
194655: 33 08                    a1 = 0
194657: 33 05 00 00 01           s0 = 0x10000
194662: 01                       fallthrough
      :                          @13371
194663: 64 57                    a0 = s0
194665: 82 10 c0 00              ra = u64 [sp + 0xc0]
194669: 82 15 b8 00              s0 = u64 [sp + 0xb8]
194673: 82 16 b0 00              s1 = u64 [sp + 0xb0]
194677: 95 11 c8 00              sp = sp + 0xc8
194681: 32 00                    ret
      :                          @13372
194683: 64 58                    a1 = s0
194685: 7b 16 38                 u64 [sp + 0x38] = s1
194688: 64 76                    s1 = a0
194690: 50 20 e0 0b f4 2a        ra = 3040, jump @14063
      :                          @13373 [@dyn 1520]
194696: c8 65 07                 a0 = s0 + s1
194699: 82 16 38                 s1 = u64 [sp + 0x38]
194702: ab 56 0c                 jump @13375 if s1 != s0
      :                          @13374
194705: 33 08                    a1 = 0
194707: 33 00 e2 0b              ra = 0xbe2
194711: 28 df 2a                 jump @14063
      :                          @13375
194714: 7d 79                    a2 = i8 [a0]
194716: c9 56 06                 s1 = s1 - s0
194719: 33 08 01                 a1 = 0x1
194722: 59 09 44                 jump @13382 if a2 >=s 0
      :                          @13376
194725: 84 99 ff 00              a2 = a2 & 0xff
194729: 33 0a c0 00              a3 = 0xc0
194733: 33 08 02                 a1 = 0x2
194736: ac a9 36                 jump @13382 if a2 <u a3
      :                          @13377
194739: 33 0a e0 00              a3 = 0xe0
194743: 33 08 03                 a1 = 0x3
194746: ac a9 2c                 jump @13382 if a2 <u a3
      :                          @13378
194749: 33 0a f0 00              a3 = 0xf0
194753: 33 08 04                 a1 = 0x4
194756: ac a9 22                 jump @13382 if a2 <u a3
      :                          @13379
194759: 33 0a f8 00              a3 = 0xf8
194763: 33 08 05                 a1 = 0x5
194766: ac a9 18                 jump @13382 if a2 <u a3
      :                          @13380
194769: 33 0a fc 00              a3 = 0xfc
194773: 33 08 06                 a1 = 0x6
194776: ac a9 0e                 jump @13382 if a2 <u a3
      :                          @13381
194779: 88 98 fe 00              a1 = a2 <u 0xfe
194783: 33 09 08                 a2 = 0x8
194786: c9 89 08                 a1 = a2 - a1
194789: 01                       fallthrough
      :                          @13382
194790: 33 05 00 00 01           s0 = 0x10000
194795: ae 86 08                 jump @13384 if s1 >=u a1
      :                          @13383
194798: 33 08                    a1 = 0
194800: 28 77 ff                 jump @13371
      :                          @13384
194803: 50 20 e2 0b 83 2a        ra = 3042, jump @14063
      :                          @13385 [@dyn 1521]
194809: 83 79                    i32 a2 = a0 + 0
194811: 51 09 00 01              jump @13398 if a2 == 0
      :                          @13386
194815: 33 0b                    a4 = 0
194817: 14 09 ff ff ff ff 00 00 00 00 a2 = 0xffffffff
194827: d2 97 07                 a0 = a0 & a2
194830: 7b 17 20                 u64 [sp + 0x20] = a0
194833: 33 05 8c 12 03           s0 = 0x3128c
194838: 33 07 c0 00              a0 = 0xc0
194842: 7b 17 18                 u64 [sp + 0x18] = a0
194845: 33 07 2c 0c              a0 = 0xc2c
194849: 7b 17 10                 u64 [sp + 0x10] = a0
194852: 33 07 80 2e 01           a0 = 0x12e80
194857: 7b 17 08                 u64 [sp + 0x8] = a0
194860: 33 06 c0 22 03           s1 = 0x322c0
194865: 95 66 00 00 01           s1 = s1 + 0x10000
194870: 49 01 ff ff fe           u64 [sp + 0] = 0xfffffffffffeffff
194875: 7b 15 28                 u64 [sp + 0x28] = s0
194878: 28 23                    jump @13389
      :                          @13387
194880: 46 11 60                 u8 [sp + 96] = 0
194883: 95 17 60                 a0 = sp + 0x60
194886: 33 08 01                 a1 = 0x1
194889: 33 0a 08                 a3 = 0x8
194892: 82 15 28                 s0 = u64 [sp + 0x28]
194895: 64 59                    a2 = s0
194897: 0a 04                    ecalli 4 // 'write'
194899: 01                       fallthrough
      :                          @13388
194900: 82 1b 38                 a4 = u64 [sp + 0x38]
194903: 95 bb 01                 a4 = a4 + 0x1
194906: 82 17 20                 a0 = u64 [sp + 0x20]
194909: aa 7b a9 00              jump @13399 if a4 == a0
      :                          @13389
194913: 33 09 20                 a2 = 0x20
194916: 33 0a 0f                 a3 = 0xf
194919: 64 57                    a0 = s0
194921: 33 08                    a1 = 0
194923: 7b 1b 38                 u64 [sp + 0x38] = a4
194926: 33 0c                    a5 = 0
194928: 0a 01                    ecalli 1 // 'fetch'
194930: 7b 17 40                 u64 [sp + 0x40] = a0
194933: 7b 15 90 00              u64 [sp + 0x90] = s0
194937: 82 17 18                 a0 = u64 [sp + 0x18]
194940: 7b 17 98 00              u64 [sp + 0x98] = a0
194944: 95 17 40                 a0 = sp + 0x40
194947: 7b 17 a0 00              u64 [sp + 0xa0] = a0
194951: 82 17 10                 a0 = u64 [sp + 0x10]
194954: 7b 17 a8 00              u64 [sp + 0xa8] = a0
194958: 82 17 08                 a0 = u64 [sp + 0x8]
194961: 7b 17 60                 u64 [sp + 0x60] = a0
194964: 49 11 68 02              u64 [sp + 104] = 0x2
194968: 49 21 80 00              u64 [sp + 128] = 0
194972: 95 18 90 00              a1 = sp + 0x90
194976: 7b 18 70                 u64 [sp + 0x70] = a1
194979: 49 11 78 02              u64 [sp + 120] = 0x2
194983: 95 17 48                 a0 = sp + 0x48
194986: 95 18 60                 a1 = sp + 0x60
194989: 50 20 e4 0b 1f 0a        ra = 3044, jump @13547
      :                          @13390 [@dyn 1522]
194995: 82 15 50                 s0 = u64 [sp + 0x50]
194998: 82 1b 58                 a4 = u64 [sp + 0x58]
195001: 82 17 48                 a0 = u64 [sp + 0x48]
195004: 7b 17 30                 u64 [sp + 0x30] = a0
195007: 33 07 02                 a0 = 0x2
195010: 33 08                    a1 = 0
195012: 33 09                    a2 = 0
195014: 64 5a                    a3 = s0
195016: 33 00 e6 0b              ra = 0xbe6
195020: 0a 64                    ecalli 100 // 'log'
195022: 01                       fallthrough
      :                          @13391 [@dyn 1523]
195023: 82 1b 30                 a4 = u64 [sp + 0x30]
195026: 82 17                    a0 = u64 [sp]
195028: c8 b7 07                 a0 = a0 + a4
195031: 53 37 00 00 ff 69 ff     jump @13387 if a0 <u 4294901760
      :                          @13392
195038: 82 67                    a0 = u64 [s1]
195040: c9 76 08                 a1 = s1 - a0
195043: ab 58 5d ff              jump @13387 if a1 != s0
      :                          @13393
195047: c9 b7 08                 a1 = a0 - a4
195050: 01                       fallthrough
      :                          @13394
195051: 82 69                    a2 = u64 [s1]
195053: ab 79 f1                 jump @13392 if a2 != a0
      :                          @13395
195056: 7b 68                    u64 [s1] = a1
195058: 33 0a                    a3 = 0
195060: 01                       fallthrough
      :                          @13396
195061: ab 79 e9                 jump @13392 if a2 != a0
      :                          @13397
195064: 28 48 ff                 jump @13387
      :                          @13398
195067: 33 05 8c 12 03           s0 = 0x3128c
195072: 33 08 20                 a1 = 0x20
195075: 28 64 fe                 jump @13371
      :                          @13399
195078: 33 08 20                 a1 = 0x20
195081: 28 5e fe                 jump @13371
      :                          @13400 [export #2: 'on_transfer']
195084: 95 11 70 fd              sp = sp + 0xfffffffffffffd70
195088: 7b 10 88 02              u64 [sp + 0x288] = ra
195092: 7b 15 80 02              u64 [sp + 0x280] = s0
195096: 7b 16 78 02              u64 [sp + 0x278] = s1
195100: 64 8c                    a5 = a1
195102: 64 79                    a2 = a0
195104: 33 02                    t0 = 0
195106: 95 7b 04                 a4 = a0 + 0x4
195109: 33 07 78                 a0 = 0x78
195112: 7b 17 28                 u64 [sp + 0x28] = a0
195115: 33 07 7c                 a0 = 0x7c
195118: 7b 17 58                 u64 [sp + 0x58] = a0
195121: 33 07 ae 00              a0 = 0xae
195125: 7b 17 20                 u64 [sp + 0x20] = a0
195128: 33 07 e8 2e 01           a0 = 0x12ee8
195133: 7b 17 18                 u64 [sp + 0x18] = a0
195136: 33 07 9a 0c              a0 = 0xc9a
195140: 7b 17 10                 u64 [sp + 0x10] = a0
195143: 33 07 38 32 01           a0 = 0x13238
195148: 7b 17 08                 u64 [sp + 0x8] = a0
195151: 33 07 c0 22 03           a0 = 0x322c0
195156: 95 77 00 00 01           a0 = a0 + 0x10000
195161: 7b 17 50                 u64 [sp + 0x50] = a0
195164: 33 07 88 2f 01           a0 = 0x12f88
195169: 7b 17                    u64 [sp] = a0
195171: 95 97 08                 a0 = a2 + 0x8
195174: 95 ca f8                 a3 = a5 + 0xfffffffffffffff8
195177: 95 98 0c                 a1 = a2 + 0xc
195180: 7b 18 60                 u64 [sp + 0x60] = a1
195183: 33 08 08                 a1 = 0x8
195186: 33 06 ff ff fe           s1 = 0xfffffffffffeffff
195191: 7b 16 48                 u64 [sp + 0x48] = s1
195194: 7b 17 c0 00              u64 [sp + 0xc0] = a0
195198: 7b 17 b8 00              u64 [sp + 0xb8] = a0
195202: 7b 1c 40                 u64 [sp + 0x40] = a5
195205: 7b 19 38                 u64 [sp + 0x38] = a2
195208: 7b 1b 30                 u64 [sp + 0x30] = a4
195211: 7b 1a a8 00              u64 [sp + 0xa8] = a3
195215: ac 8c c9 04              jump @13448 if a5 <u a1
      :                          @13401
195219: 51 09 de 04              jump @13449 if a2 == 0
      :                          @13402
195223: 51 0b da 04              jump @13449 if a4 == 0
      :                          @13403
195227: 7c 97                    a0 = u8 [a2]
195229: 7b 17 78                 u64 [sp + 0x78] = a0
195232: 7c 97 01                 a0 = u8 [a2 + 0x1]
195235: 7b 17 68                 u64 [sp + 0x68] = a0
195238: 7c 97 02                 a0 = u8 [a2 + 0x2]
195241: 7b 17 70                 u64 [sp + 0x70] = a0
195244: 7c 97 03                 a0 = u8 [a2 + 0x3]
195247: 7b 17 80 00              u64 [sp + 0x80] = a0
195251: 7c b7                    a0 = u8 [a4]
195253: 7b 17 98 00              u64 [sp + 0x98] = a0
195257: 7c b7 01                 a0 = u8 [a4 + 0x1]
195260: 7b 17 88 00              u64 [sp + 0x88] = a0
195264: 7c b7 02                 a0 = u8 [a4 + 0x2]
195267: 7b 17 90 00              u64 [sp + 0x90] = a0
195271: 7c b7 03                 a0 = u8 [a4 + 0x3]
195274: 7b 17 a0 00              u64 [sp + 0xa0] = a0
195278: 51 0a 53                 jump @13413 if a3 == 0
      :                          @13404
195281: 82 17 c0 00              a0 = u64 [sp + 0xc0]
195285: 7d 77                    a0 = i8 [a0]
195287: 33 05 01                 s0 = 0x1
195290: 59 07 4a                 jump @13414 if a0 >=s 0
      :                          @13405
195293: 84 77 ff 00              a0 = a0 & 0xff
195297: 33 05 02                 s0 = 0x2
195300: 33 06 c0 00              s1 = 0xc0
195304: ac 67 33                 jump @13411 if a0 <u s1
      :                          @13406
195307: 33 05 03                 s0 = 0x3
195310: 33 06 e0 00              s1 = 0xe0
195314: ac 67 29                 jump @13411 if a0 <u s1
      :                          @13407
195317: 33 05 04                 s0 = 0x4
195320: 33 06 f0 00              s1 = 0xf0
195324: ac 67 1f                 jump @13411 if a0 <u s1
      :                          @13408
195327: 33 05 05                 s0 = 0x5
195330: 33 06 f8 00              s1 = 0xf8
195334: ac 67 15                 jump @13411 if a0 <u s1
      :                          @13409
195337: 33 05 06                 s0 = 0x6
195340: 33 06 fc 00              s1 = 0xfc
195344: ac 67 0b                 jump @13411 if a0 <u s1
      :                          @13410
195347: 88 77 fe 00              a0 = a0 <u 0xfe
195351: 9a 75 08                 s0 = 0x8 - a0
195354: 01                       fallthrough
      :                          @13411
195355: ae 5a 09                 jump @13414 if a3 >=u s0
      :                          @13412
195358: 28 3a 04                 jump @13448
      :                          @13413
195361: 33 05                    s0 = 0
195363: 01                       fallthrough
      :                          @13414
195364: 82 17 c0 00              a0 = u64 [sp + 0xc0]
195368: 64 58                    a1 = s0
195370: 7b 12 b0 00              u64 [sp + 0xb0] = t0
195374: 50 20 e8 0b 48 28        ra = 3048, jump @14063
      :                          @13415 [@dyn 1524]
195380: 33 03 98 00              t1 = 0x98
195384: 33 02 04                 t0 = 0x4
195387: 33 06 08                 s1 = 0x8
195390: 82 1c a8 00              a5 = u64 [sp + 0xa8]
195394: 82 1b b0 00              a4 = u64 [sp + 0xb0]
195398: ae 7b 12 04              jump @13448 if a4 >=u a0
      :                          @13416
195402: 82 18 68                 a1 = u64 [sp + 0x68]
195405: 97 88 08                 a1 = a1 << 0x8
195408: 82 19 78                 a2 = u64 [sp + 0x78]
195411: d4 98 08                 a1 = a1 | a2
195414: 82 19 70                 a2 = u64 [sp + 0x70]
195417: 97 99 10                 a2 = a2 << 0x10
195420: 82 1a 80 00              a3 = u64 [sp + 0x80]
195424: 97 aa 18                 a3 = a3 << 0x18
195427: d4 a9 09                 a2 = a2 | a3
195430: d4 89 04                 t2 = a2 | a1
195433: 82 18 88 00              a1 = u64 [sp + 0x88]
195437: 97 88 08                 a1 = a1 << 0x8
195440: 82 19 98 00              a2 = u64 [sp + 0x98]
195444: d4 98 08                 a1 = a1 | a2
195447: 82 19 90 00              a2 = u64 [sp + 0x90]
195451: 97 99 10                 a2 = a2 << 0x10
195454: 82 1a a0 00              a3 = u64 [sp + 0xa0]
195458: 97 aa 18                 a3 = a3 << 0x18
195461: d4 a9 09                 a2 = a2 | a3
195464: d4 89 00                 ra = a2 | a1
195467: e4 5c 08                 a1 = maxu(a5, s0)
195470: c9 58 08                 a1 = a1 - s0
195473: 82 19 b8 00              a2 = u64 [sp + 0xb8]
195477: c8 59 09                 a2 = a2 + s0
195480: 82 1a 60                 a3 = u64 [sp + 0x60]
195483: c8 a5 05                 s0 = s0 + a3
195486: 64 ba                    a3 = a4
195488: 01                       fallthrough
      :                          @13417
195489: ac 68 b7 03              jump @13448 if a1 <u s1
      :                          @13418
195493: aa 25 cc 03              jump @13449 if s0 == t0
      :                          @13419
195497: 51 05 c8 03              jump @13449 if s0 == 0
      :                          @13420
195501: ac 38 ab 03              jump @13448 if a1 <u t1
      :                          @13421
195505: 51 0a 17                 jump @13424 if a3 == 0
      :                          @13422
195508: 95 88 68 ff              a1 = a1 + 0xffffffffffffff68
195512: 95 55 98 00              s0 = s0 + 0x98
195516: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
195519: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
195522: 52 07 df                 jump @13417 if a0 != 0
      :                          @13423
195525: 28 93 03                 jump @13448
      :                          @13424
195528: 7c 97 01                 a0 = u8 [a2 + 0x1]
195531: 7c 98                    a1 = u8 [a2]
195533: 7c 9a 02                 a3 = u8 [a2 + 0x2]
195536: 7d 9b 03                 a4 = i8 [a2 + 0x3]
195539: 8a 77 08                 i32 a0 = a0 << 0x8
195542: d4 87 07                 a0 = a0 | a1
195545: 8a a8 10                 i32 a1 = a3 << 0x10
195548: 8a ba 18                 i32 a3 = a4 << 0x18
195551: d4 a8 08                 a1 = a1 | a3
195554: d4 87 07                 a0 = a0 | a1
195557: 7b 17 a0 00              u64 [sp + 0xa0] = a0
195561: 7c 57 01                 a0 = u8 [s0 + 0x1]
195564: 7c 58                    a1 = u8 [s0]
195566: 7c 5a 02                 a3 = u8 [s0 + 0x2]
195569: 7d 5b 03                 a4 = i8 [s0 + 0x3]
195572: 8a 77 08                 i32 a0 = a0 << 0x8
195575: d4 87 07                 a0 = a0 | a1
195578: 8a a8 10                 i32 a1 = a3 << 0x10
195581: 8a ba 18                 i32 a3 = a4 << 0x18
195584: d4 a8 08                 a1 = a1 | a3
195587: 7c 9a 0f                 a3 = u8 [a2 + 0xf]
195590: 7c 9b 0e                 a4 = u8 [a2 + 0xe]
195593: d4 87 07                 a0 = a0 | a1
195596: 7b 17 98 00              u64 [sp + 0x98] = a0
195600: 7c 97 0d                 a0 = u8 [a2 + 0xd]
195603: 97 aa 10                 a3 = a3 << 0x10
195606: 97 bb 08                 a4 = a4 << 0x8
195609: d4 ba 0a                 a3 = a3 | a4
195612: 7c 98 0c                 a1 = u8 [a2 + 0xc]
195615: 7c 9b 0b                 a4 = u8 [a2 + 0xb]
195618: d4 a7 07                 a0 = a0 | a3
195621: 97 77 10                 a0 = a0 << 0x10
195624: 97 88 08                 a1 = a1 << 0x8
195627: d4 b8 08                 a1 = a1 | a4
195630: 7c 9a 0a                 a3 = u8 [a2 + 0xa]
195633: 7c 9b 09                 a4 = u8 [a2 + 0x9]
195636: d4 87 07                 a0 = a0 | a1
195639: 97 77 10                 a0 = a0 << 0x10
195642: 97 aa 08                 a3 = a3 << 0x8
195645: d4 ba 0a                 a3 = a3 | a4
195648: d4 a7 07                 a0 = a0 | a3
195651: 7c 98 08                 a1 = u8 [a2 + 0x8]
195654: 97 77 08                 a0 = a0 << 0x8
195657: 7c 9a 97 00              a3 = u8 [a2 + 0x97]
195661: 7c 9b 96 00              a4 = u8 [a2 + 0x96]
195665: d4 87 07                 a0 = a0 | a1
195668: 7b 17 90 00              u64 [sp + 0x90] = a0
195672: 7c 97 95 00              a0 = u8 [a2 + 0x95]
195676: 97 aa 10                 a3 = a3 << 0x10
195679: 97 bb 08                 a4 = a4 << 0x8
195682: d4 ba 0a                 a3 = a3 | a4
195685: d4 a7 07                 a0 = a0 | a3
195688: 7c 9a 94 00              a3 = u8 [a2 + 0x94]
195692: 7c 9b 93 00              a4 = u8 [a2 + 0x93]
195696: 95 98 10                 a1 = a2 + 0x10
195699: 97 77 10                 a0 = a0 << 0x10
195702: 97 aa 08                 a3 = a3 << 0x8
195705: d4 ba 0a                 a3 = a3 | a4
195708: 7c 9b 92 00              a4 = u8 [a2 + 0x92]
195712: d4 a7 07                 a0 = a0 | a3
195715: 7c 9a 91 00              a3 = u8 [a2 + 0x91]
195719: 97 77 10                 a0 = a0 << 0x10
195722: 97 bb 08                 a4 = a4 << 0x8
195725: 7c 99 90 00              a2 = u8 [a2 + 0x90]
195729: d4 ba 0a                 a3 = a3 | a4
195732: d4 a7 07                 a0 = a0 | a3
195735: 97 77 08                 a0 = a0 << 0x8
195738: d4 97 07                 a0 = a0 | a2
195741: 7b 17 88 00              u64 [sp + 0x88] = a0
195745: 95 17 68 01              a0 = sp + 0x168
195749: 33 09 80 00              a2 = 0x80
195753: 64 45                    s0 = t2
195755: 64 06                    s1 = ra
195757: 50 20 ea 0b 3c 0d        ra = 3050, jump @13633
      :                          @13425 [@dyn 1525]
195763: 95 17 e0 00              a0 = sp + 0xe0
195767: 95 18 68 01              a1 = sp + 0x168
195771: 33 09 80 00              a2 = 0x80
195775: 50 20 ec 0b 2a 0d        ra = 3052, jump @13633
      :                          @13426 [@dyn 1526]
195781: 7a 15 c8 00              u32 [sp + 0xc8] = s0
195785: 7a 16 cc 00              u32 [sp + 0xcc] = s1
195789: 82 17 a0 00              a0 = u64 [sp + 0xa0]
195793: 7a 17 d0 00              u32 [sp + 0xd0] = a0
195797: 82 17 98 00              a0 = u64 [sp + 0x98]
195801: 7a 17 d4 00              u32 [sp + 0xd4] = a0
195805: 82 17 90 00              a0 = u64 [sp + 0x90]
195809: 7b 17 d8 00              u64 [sp + 0xd8] = a0
195813: 82 17 88 00              a0 = u64 [sp + 0x88]
195817: 7b 17 60 01              u64 [sp + 0x160] = a0
195821: 95 17 c8 00              a0 = sp + 0xc8
195825: 7b 17 68 01              u64 [sp + 0x168] = a0
195829: 82 17 28                 a0 = u64 [sp + 0x28]
195832: 7b 17 70 01              u64 [sp + 0x170] = a0
195836: 95 18 cc 00              a1 = sp + 0xcc
195840: 7b 18 78 01              u64 [sp + 0x178] = a1
195844: 7b 17 80 01              u64 [sp + 0x180] = a0
195848: 95 18 d0 00              a1 = sp + 0xd0
195852: 7b 18 88 01              u64 [sp + 0x188] = a1
195856: 7b 17 90 01              u64 [sp + 0x190] = a0
195860: 95 18 d4 00              a1 = sp + 0xd4
195864: 7b 18 98 01              u64 [sp + 0x198] = a1
195868: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
195872: 95 17 d8 00              a0 = sp + 0xd8
195876: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
195880: 82 17 58                 a0 = u64 [sp + 0x58]
195883: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
195887: 95 18 e0 00              a1 = sp + 0xe0
195891: 7b 18 b8 01              u64 [sp + 0x1b8] = a1
195895: 82 18 20                 a1 = u64 [sp + 0x20]
195898: 7b 18 c0 01              u64 [sp + 0x1c0] = a1
195902: 95 18 60 01              a1 = sp + 0x160
195906: 7b 18 c8 01              u64 [sp + 0x1c8] = a1
195910: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
195914: 82 17 18                 a0 = u64 [sp + 0x18]
195917: 7b 17 28 02              u64 [sp + 0x228] = a0
195921: 49 21 30 02 07           u64 [sp + 560] = 0x7
195926: 49 21 48 02              u64 [sp + 584] = 0
195930: 95 17 68 01              a0 = sp + 0x168
195934: 7b 17 38 02              u64 [sp + 0x238] = a0
195938: 49 21 40 02 07           u64 [sp + 576] = 0x7
195943: 95 17 58 02              a0 = sp + 0x258
195947: 95 18 28 02              a1 = sp + 0x228
195951: 50 20 ee 0b 5d 06        ra = 3054, jump @13547
      :                          @13427 [@dyn 1527]
195957: 82 15 60 02              s0 = u64 [sp + 0x260]
195961: 82 1b 68 02              a4 = u64 [sp + 0x268]
195965: 82 16 58 02              s1 = u64 [sp + 0x258]
195969: 33 07 02                 a0 = 0x2
195972: 33 08                    a1 = 0
195974: 33 09                    a2 = 0
195976: 64 5a                    a3 = s0
195978: 33 00 f0 0b              ra = 0xbf0
195982: 0a 64                    ecalli 100 // 'log'
195984: 01                       fallthrough
      :                          @13428 [@dyn 1528]
195985: 82 17 48                 a0 = u64 [sp + 0x48]
195988: c8 67 07                 a0 = a0 + s1
195991: 82 1b 50                 a4 = u64 [sp + 0x50]
195994: 53 37 00 00 ff 1a        jump @13433 if a0 <u 4294901760
      :                          @13429
196000: 82 b7                    a0 = u64 [a4]
196002: c9 7b 08                 a1 = a4 - a0
196005: ab 58 0f                 jump @13433 if a1 != s0
      :                          @13430
196008: c9 67 08                 a1 = a0 - s1
196011: 01                       fallthrough
      :                          @13431
196012: 82 b9                    a2 = u64 [a4]
196014: ab 79 f2                 jump @13429 if a2 != a0
      :                          @13432
196017: 7b b8                    u64 [a4] = a1
196019: 01                       fallthrough
      :                          @13433
196020: 81 17 cc 00              a0 = i32 [sp + 0xcc]
196024: 7a 17 ec 01              u32 [sp + 0x1ec] = a0
196028: 95 17 ec 01              a0 = sp + 0x1ec
196032: 33 08 04                 a1 = 0x4
196035: 95 19 e0 00              a2 = sp + 0xe0
196039: 33 0a 80 00              a3 = 0x80
196043: 0a 04                    ecalli 4 // 'write'
196045: 0a                       ecalli 0 // 'gas'
196046: 7b 17 f0 01              u64 [sp + 0x1f0] = a0
196050: 7b 17 f8 01              u64 [sp + 0x1f8] = a0
196054: 46 21 07 02 04           u8 [sp + 519] = 0x4
196059: 7b 17 08 02              u64 [sp + 0x208] = a0
196063: 95 17 07 02              a0 = sp + 0x207
196067: 33 08 01                 a1 = 0x1
196070: 95 19 08 02              a2 = sp + 0x208
196074: 33 0a 08                 a3 = 0x8
196077: 0a 04                    ecalli 4 // 'write'
196079: 49 21 68 01 02           u64 [sp + 360] = 0x2
196084: 49 21 78 01 02           u64 [sp + 376] = 0x2
196089: 49 21 88 01              u64 [sp + 392] = 0
196093: 14 07 20 00 00 00 10 00 00 00 a0 = 0x1000000020
196103: 7b 17 90 01              u64 [sp + 0x190] = a0
196107: 46 21 98 01 03           u8 [sp + 408] = 0x3
196112: 49 21 a0 01 02           u64 [sp + 416] = 0x2
196117: 49 21 b0 01 02           u64 [sp + 432] = 0x2
196122: 49 21 c0 01 01           u64 [sp + 448] = 0x1
196127: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
196131: 95 17 07 02              a0 = sp + 0x207
196135: 7b 17 58 02              u64 [sp + 0x258] = a0
196139: 82 17 10                 a0 = u64 [sp + 0x10]
196142: 7b 17 60 02              u64 [sp + 0x260] = a0
196146: 95 17 f8 01              a0 = sp + 0x1f8
196150: 7b 17 68 02              u64 [sp + 0x268] = a0
196154: 82 17 58                 a0 = u64 [sp + 0x58]
196157: 7b 17 70 02              u64 [sp + 0x270] = a0
196161: 46 21 d0 01 03           u8 [sp + 464] = 0x3
196166: 82 17 08                 a0 = u64 [sp + 0x8]
196169: 7b 17 28 02              u64 [sp + 0x228] = a0
196173: 49 21 30 02 02           u64 [sp + 560] = 0x2
196178: 95 17 68 01              a0 = sp + 0x168
196182: 7b 17 48 02              u64 [sp + 0x248] = a0
196186: 49 21 50 02 02           u64 [sp + 592] = 0x2
196191: 95 17 58 02              a0 = sp + 0x258
196195: 7b 17 38 02              u64 [sp + 0x238] = a0
196199: 49 21 40 02 02           u64 [sp + 576] = 0x2
196204: 95 17 10 02              a0 = sp + 0x210
196208: 95 18 28 02              a1 = sp + 0x228
196212: 50 20 f2 0b 58 05        ra = 3058, jump @13547
      :                          @13434 [@dyn 1529]
196218: 82 15 18 02              s0 = u64 [sp + 0x218]
196222: 82 1b 20 02              a4 = u64 [sp + 0x220]
196226: 82 16 10 02              s1 = u64 [sp + 0x210]
196230: 33 07 02                 a0 = 0x2
196233: 33 08                    a1 = 0
196235: 33 09                    a2 = 0
196237: 64 5a                    a3 = s0
196239: 33 00 f4 0b              ra = 0xbf4
196243: 0a 64                    ecalli 100 // 'log'
196245: 01                       fallthrough
      :                          @13435 [@dyn 1530]
196246: 82 1b 50                 a4 = u64 [sp + 0x50]
196249: 82 17 48                 a0 = u64 [sp + 0x48]
196252: c8 67 07                 a0 = a0 + s1
196255: 53 37 00 00 ff 1a        jump @13440 if a0 <u 4294901760
      :                          @13436
196261: 82 b7                    a0 = u64 [a4]
196263: c9 7b 08                 a1 = a4 - a0
196266: ab 58 0f                 jump @13440 if a1 != s0
      :                          @13437
196269: c9 67 08                 a1 = a0 - s1
196272: 01                       fallthrough
      :                          @13438
196273: 82 b9                    a2 = u64 [a4]
196275: ab 79 f2                 jump @13436 if a2 != a0
      :                          @13439
196278: 7b b8                    u64 [a4] = a1
196280: 01                       fallthrough
      :                          @13440
196281: 95 17 f0 01              a0 = sp + 0x1f0
196285: 7b 17 58 02              u64 [sp + 0x258] = a0
196289: 82 17 58                 a0 = u64 [sp + 0x58]
196292: 7b 17 60 02              u64 [sp + 0x260] = a0
196296: 82 17                    a0 = u64 [sp]
196298: 7b 17 68 01              u64 [sp + 0x168] = a0
196302: 49 21 70 01 02           u64 [sp + 368] = 0x2
196307: 49 21 88 01              u64 [sp + 392] = 0
196311: 95 17 58 02              a0 = sp + 0x258
196315: 7b 17 78 01              u64 [sp + 0x178] = a0
196319: 49 21 80 01 01           u64 [sp + 384] = 0x1
196324: 95 17 28 02              a0 = sp + 0x228
196328: 95 18 68 01              a1 = sp + 0x168
196332: 50 20 f6 0b e0 04        ra = 3062, jump @13547
      :                          @13441 [@dyn 1531]
196338: 82 15 30 02              s0 = u64 [sp + 0x230]
196342: 82 1b 38 02              a4 = u64 [sp + 0x238]
196346: 82 16 28 02              s1 = u64 [sp + 0x228]
196350: 33 07 02                 a0 = 0x2
196353: 33 08                    a1 = 0
196355: 33 09                    a2 = 0
196357: 64 5a                    a3 = s0
196359: 33 00 f8 0b              ra = 0xbf8
196363: 0a 64                    ecalli 100 // 'log'
196365: 01                       fallthrough
      :                          @13442 [@dyn 1532]
196366: 82 1b 50                 a4 = u64 [sp + 0x50]
196369: 82 17 48                 a0 = u64 [sp + 0x48]
196372: c8 67 07                 a0 = a0 + s1
196375: 53 37 00 00 ff 1a        jump @13447 if a0 <u 4294901760
      :                          @13443
196381: 82 b7                    a0 = u64 [a4]
196383: c9 7b 08                 a1 = a4 - a0
196386: ab 58 0f                 jump @13447 if a1 != s0
      :                          @13444
196389: c9 67 08                 a1 = a0 - s1
196392: 01                       fallthrough
      :                          @13445
196393: 82 b9                    a2 = u64 [a4]
196395: ab 79 f2                 jump @13443 if a2 != a0
      :                          @13446
196398: 7b b8                    u64 [a4] = a1
196400: 01                       fallthrough
      :                          @13447
196401: 82 12 b0 00              t0 = u64 [sp + 0xb0]
196405: 95 22 01                 t0 = t0 + 0x1
196408: 82 17 b8 00              a0 = u64 [sp + 0xb8]
196412: 95 77 98 00              a0 = a0 + 0x98
196416: 7b 17 b8 00              u64 [sp + 0xb8] = a0
196420: 82 1c 40                 a5 = u64 [sp + 0x40]
196423: 82 19 38                 a2 = u64 [sp + 0x38]
196426: 82 1b 30                 a4 = u64 [sp + 0x30]
196429: 82 1a a8 00              a3 = u64 [sp + 0xa8]
196433: 33 08 08                 a1 = 0x8
196436: ae 8c 3f fb              jump @13401 if a5 >=u a1
      :                          @13448
196440: 33 07 00 00 01           a0 = 0x10000
196445: 33 08                    a1 = 0
196447: 82 10 88 02              ra = u64 [sp + 0x288]
196451: 82 15 80 02              s0 = u64 [sp + 0x280]
196455: 82 16 78 02              s1 = u64 [sp + 0x278]
196459: 95 11 90 02              sp = sp + 0x290
196463: 32 00                    ret
      :                          @13449
196465: 00                       trap
      :                          @13450 [@dyn 1533]
196466: 3e 02 00 00 03           u64 [0x30000] = t0
196471: 3e 04 08 00 03           u64 [0x30008] = t2
196476: 82 72                    t0 = u64 [a0]
196478: c8 72 04                 t2 = t0 + a0
196481: 7b 74                    u64 [a0] = t2
196483: 64 27                    a0 = t0
196485: 3a 02 00 00 03           t0 = u64 [0x30000]
196490: 3a 04 08 00 03           t2 = u64 [0x30008]
196495: 32 00                    ret
      :                          @13451
196497: 95 11 b8                 sp = sp + 0xffffffffffffffb8
196500: 7b 10 40                 u64 [sp + 0x40] = ra
196503: 7b 15 38                 u64 [sp + 0x38] = s0
196506: 7b 16 30                 u64 [sp + 0x30] = s1
196509: c8 89 09                 a2 = a2 + a1
196512: ac 89 53                 jump @13459 if a2 <u a1
      :                          @13452
196515: 64 75                    s0 = a0
196517: 82 77                    a0 = u64 [a0]
196519: 97 78 01                 a1 = a0 << 0x1
196522: 33 0a 08                 a3 = 0x8
196525: e4 a9 09                 a2 = maxu(a2, a3)
196528: e4 98 06                 s1 = maxu(a1, a2)
196531: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
196534: 98 88 3f                 a1 = a1 >> 0x3f
196537: 51 07 12                 jump @13454 if a0 == 0
      :                          @13453
196540: 82 59 08                 a2 = u64 [s0 + 0x8]
196543: 7b 19 18                 u64 [sp + 0x18] = a2
196546: 49 11 20 01              u64 [sp + 32] = 0x1
196550: 7b 17 28                 u64 [sp + 0x28] = a0
196553: 28 06                    jump @13455
      :                          @13454
196555: 49 11 20                 u64 [sp + 32] = 0
196558: 01                       fallthrough
      :                          @13455
196559: 64 17                    a0 = sp
196561: 95 1a 18                 a3 = sp + 0x18
196564: 64 69                    a2 = s1
196566: 50 20 fc 0b 33           ra = 3068, jump @13463
      :                          @13456 [@dyn 1534]
196571: 82 18                    a1 = u64 [sp]
196573: 82 17 08                 a0 = u64 [sp + 0x8]
196576: 51 08 14                 jump @13460 if a1 == 0
      :                          @13457
196579: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
196589: aa 87 0d                 jump @13461 if a0 == a1
      :                          @13458
196592: 52 07 18                 jump @13462 if a0 != 0
      :                          @13459
196595: 00                       trap
      :                          @13460
196596: 7b 57 08                 u64 [s0 + 0x8] = a0
196599: 7b 56                    u64 [s0] = s1
196601: 01                       fallthrough
      :                          @13461
196602: 82 10 40                 ra = u64 [sp + 0x40]
196605: 82 15 38                 s0 = u64 [sp + 0x38]
196608: 82 16 30                 s1 = u64 [sp + 0x30]
196611: 95 11 48                 sp = sp + 0x48
196614: 32 00                    ret
      :                          @13462
196616: 00                       trap
      :                          @13463
196617: 95 11 c8                 sp = sp + 0xffffffffffffffc8
196620: 7b 10 30                 u64 [sp + 0x30] = ra
196623: 7b 15 28                 u64 [sp + 0x28] = s0
196626: 7b 16 20                 u64 [sp + 0x20] = s1
196629: 64 95                    s0 = a2
196631: 64 72                    t0 = a0
196633: 51 08 7a                 jump @13473 if a1 == 0
      :                          @13464
196636: 82 a7 08                 a0 = u64 [a3 + 0x8]
196639: 51 07 7d                 jump @13474 if a0 == 0
      :                          @13465
196642: 82 a9 10                 a2 = u64 [a3 + 0x10]
196645: 51 09 ab 00              jump @13481 if a2 == 0
      :                          @13466
196649: 82 a8                    a1 = u64 [a3]
196651: 33 06 c0 22 03           s1 = 0x322c0
196656: 33 03 00 00 01           t1 = 0x10000
196661: c8 36 06                 s1 = s1 + t1
196664: 01                       fallthrough
      :                          @13467
196665: 82 6a                    a3 = u64 [s1]
196667: c8 5a 07                 a0 = a3 + s0
196670: ac a7 d0 00              jump @13487 if a0 <u a3
      :                          @13468
196674: 95 7b 01                 a4 = a0 + 0x1
196677: 88 bc 01                 a5 = a4 <u 0x1
196680: d8 b3 0b                 a4 = t1 <u a4
196683: d4 cb 0b                 a4 = a4 | a5
196686: 52 0b c0 00              jump @13487 if a4 != 0
      :                          @13469
196690: 82 6b                    a4 = u64 [s1]
196692: ab ab e5                 jump @13467 if a4 != a3
      :                          @13470
196695: 7b 67                    u64 [s1] = a0
196697: 33 0c                    a5 = 0
196699: 7b 12 18                 u64 [sp + 0x18] = t0
196702: 33 0a c0 22 03           a3 = 0x322c0
196707: 33 0b 00 00 01           a4 = 0x10000
196712: 7b 1a                    u64 [sp] = a3
196714: c8 ba 0a                 a3 = a3 + a4
196717: c9 7a 07                 a0 = a3 - a0
196720: 7b 17 10                 u64 [sp + 0x10] = a0
196723: 7b 18 08                 u64 [sp + 0x8] = a1
196726: 64 96                    s1 = a2
196728: 50 20 fe 0b 71 09        ra = 3070, jump @13633
      :                          @13471 [@dyn 1535]
196734: 54 36 00 00 01 98 00     jump @13488 if s1 <=u 65536
      :                          @13472
196741: 82 12 18                 t0 = u64 [sp + 0x18]
196744: 82 18 10                 a1 = u64 [sp + 0x10]
196747: 33 07                    a0 = 0
196749: 7b 28 08                 u64 [t0 + 0x8] = a1
196752: 28 b5 00                 jump @13494
      :                          @13473
196755: 49 12 08                 u64 [t0 + 8] = 0
196758: 33 07 01                 a0 = 0x1
196761: 28 ac 00                 jump @13494
      :                          @13474
196764: 33 09 c0 22 03           a2 = 0x322c0
196769: 33 07 00 00 01           a0 = 0x10000
196774: c8 79 09                 a2 = a2 + a0
196777: 01                       fallthrough
      :                          @13475
196778: 82 9a                    a3 = u64 [a2]
196780: c8 5a 08                 a1 = a3 + s0
196783: ac a8 5f                 jump @13487 if a1 <u a3
      :                          @13476
196786: 95 8b 01                 a4 = a1 + 0x1
196789: 88 bc 01                 a5 = a4 <u 0x1
196792: d8 b7 0b                 a4 = a0 <u a4
196795: d4 cb 0b                 a4 = a4 | a5
196798: 52 0b 50                 jump @13487 if a4 != 0
      :                          @13477
196801: 82 9b                    a4 = u64 [a2]
196803: ab ab e7                 jump @13475 if a4 != a3
      :                          @13478
196806: 7b 98                    u64 [a2] = a1
196808: 33 0c                    a5 = 0
196810: 01                       fallthrough
      :                          @13479
196811: ab ab df                 jump @13475 if a4 != a3
      :                          @13480
196814: 28 31                    jump @13486
      :                          @13481
196816: 33 09 c0 22 03           a2 = 0x322c0
196821: 33 07 00 00 01           a0 = 0x10000
196826: c8 79 09                 a2 = a2 + a0
196829: 01                       fallthrough
      :                          @13482
196830: 82 9a                    a3 = u64 [a2]
196832: c8 5a 08                 a1 = a3 + s0
196835: ac a8 2b                 jump @13487 if a1 <u a3
      :                          @13483
196838: 95 8b 01                 a4 = a1 + 0x1
196841: 88 bc 01                 a5 = a4 <u 0x1
196844: d8 b7 0b                 a4 = a0 <u a4
196847: d4 cb 0b                 a4 = a4 | a5
196850: 52 0b 1c                 jump @13487 if a4 != 0
      :                          @13484
196853: 82 9b                    a4 = u64 [a2]
196855: ab ab e7                 jump @13482 if a4 != a3
      :                          @13485
196858: 7b 98                    u64 [a2] = a1
196860: 33 0c                    a5 = 0
196862: 01                       fallthrough
      :                          @13486
196863: 33 07 c0 22 04           a0 = 0x422c0
196868: c9 87 08                 a1 = a0 - a1
196871: 33 07                    a0 = 0
196873: 7b 28 08                 u64 [t0 + 0x8] = a1
196876: 28 39                    jump @13494
      :                          @13487
196878: 33 07 01                 a0 = 0x1
196881: 7b 27 08                 u64 [t0 + 0x8] = a0
196884: 28 31                    jump @13494
      :                          @13488
196886: 64 6c                    a5 = s1
196888: 82 17                    a0 = u64 [sp]
196890: 95 77 00 00 01           a0 = a0 + 0x10000
196895: 82 12 18                 t0 = u64 [sp + 0x18]
196898: 82 16 08                 s1 = u64 [sp + 0x8]
196901: 01                       fallthrough
      :                          @13489
196902: 82 78                    a1 = u64 [a0]
196904: c9 87 09                 a2 = a0 - a1
196907: ab 69 11                 jump @13493 if a2 != s1
      :                          @13490
196910: c9 c8 09                 a2 = a1 - a5
196913: 01                       fallthrough
      :                          @13491
196914: 82 7a                    a3 = u64 [a0]
196916: ab 8a f2                 jump @13489 if a3 != a1
      :                          @13492
196919: 7b 79                    u64 [a0] = a2
196921: 33 0b                    a4 = 0
196923: 01                       fallthrough
      :                          @13493
196924: 82 18 10                 a1 = u64 [sp + 0x10]
196927: 33 07                    a0 = 0
196929: 7b 28 08                 u64 [t0 + 0x8] = a1
196932: 01                       fallthrough
      :                          @13494
196933: 7b 25 10                 u64 [t0 + 0x10] = s0
196936: 7b 27                    u64 [t0] = a0
196938: 82 10 30                 ra = u64 [sp + 0x30]
196941: 82 15 28                 s0 = u64 [sp + 0x28]
196944: 82 16 20                 s1 = u64 [sp + 0x20]
196947: 95 11 38                 sp = sp + 0x38
196950: 32 00                    ret
      :                          @13495
196952: 95 11 b8                 sp = sp + 0xffffffffffffffb8
196955: 7b 10 40                 u64 [sp + 0x40] = ra
196958: 7b 15 38                 u64 [sp + 0x38] = s0
196961: 7b 16 30                 u64 [sp + 0x30] = s1
196964: 95 88 01                 a1 = a1 + 0x1
196967: 51 08 54                 jump @13503 if a1 == 0
      :                          @13496
196970: 64 75                    s0 = a0
196972: 82 77                    a0 = u64 [a0]
196974: 97 79 01                 a2 = a0 << 0x1
196977: 33 0a 08                 a3 = 0x8
196980: e4 a8 08                 a1 = maxu(a1, a3)
196983: e4 89 06                 s1 = maxu(a2, a1)
196986: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
196989: 98 88 3f                 a1 = a1 >> 0x3f
196992: 51 07 12                 jump @13498 if a0 == 0
      :                          @13497
196995: 82 59 08                 a2 = u64 [s0 + 0x8]
196998: 7b 19 18                 u64 [sp + 0x18] = a2
197001: 49 11 20 01              u64 [sp + 32] = 0x1
197005: 7b 17 28                 u64 [sp + 0x28] = a0
197008: 28 06                    jump @13499
      :                          @13498
197010: 49 11 20                 u64 [sp + 32] = 0
197013: 01                       fallthrough
      :                          @13499
197014: 64 17                    a0 = sp
197016: 95 1a 18                 a3 = sp + 0x18
197019: 64 69                    a2 = s1
197021: 50 20 00 0c 6c fe        ra = 3072, jump @13463
      :                          @13500 [@dyn 1536]
197027: 82 18                    a1 = u64 [sp]
197029: 82 17 08                 a0 = u64 [sp + 0x8]
197032: 51 08 14                 jump @13504 if a1 == 0
      :                          @13501
197035: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
197045: aa 87 0d                 jump @13505 if a0 == a1
      :                          @13502
197048: 52 07 18                 jump @13506 if a0 != 0
      :                          @13503
197051: 00                       trap
      :                          @13504
197052: 7b 57 08                 u64 [s0 + 0x8] = a0
197055: 7b 56                    u64 [s0] = s1
197057: 01                       fallthrough
      :                          @13505
197058: 82 10 40                 ra = u64 [sp + 0x40]
197061: 82 15 38                 s0 = u64 [sp + 0x38]
197064: 82 16 30                 s1 = u64 [sp + 0x30]
197067: 95 11 48                 sp = sp + 0x48
197070: 32 00                    ret
      :                          @13506
197072: 00                       trap
      :                          @13507
197073: 95 11 70 ff              sp = sp + 0xffffffffffffff70
197077: 7b 10 88 00              u64 [sp + 0x88] = ra
197081: 7b 15 80 00              u64 [sp + 0x80] = s0
197085: 7b 16 78                 u64 [sp + 0x78] = s1
197088: 64 95                    s0 = a2
197090: 7b 17                    u64 [sp] = a0
197092: 7b 18 20                 u64 [sp + 0x20] = a1
197095: 7b 19 28                 u64 [sp + 0x28] = a2
197098: 95 17 58                 a0 = sp + 0x58
197101: 95 18 20                 a1 = sp + 0x20
197104: 50 20 02 0c ac 1e        ra = 3074, jump @14011
      :                          @13508 [@dyn 1537]
197110: 82 12 58                 t0 = u64 [sp + 0x58]
197113: 51 02 4d                 jump @13517 if t0 == 0
      :                          @13509
197116: 82 17 70                 a0 = u64 [sp + 0x70]
197119: 82 19 60                 a2 = u64 [sp + 0x60]
197122: 51 07 4c                 jump @13518 if a0 == 0
      :                          @13510
197125: 51 05 60                 jump @13519 if s0 == 0
      :                          @13511
197128: 57 05 c3 01              jump @13546 if s0 <s 0
      :                          @13512
197132: 33 07 c0 22 03           a0 = 0x322c0
197137: 33 06 00 00 01           s1 = 0x10000
197142: c8 67 07                 a0 = a0 + s1
197145: 01                       fallthrough
      :                          @13513
197146: 82 7a                    a3 = u64 [a0]
197148: c8 5a 08                 a1 = a3 + s0
197151: ac a8 ab 01              jump @13545 if a1 <u a3
      :                          @13514
197155: 95 8b 01                 a4 = a1 + 0x1
197158: 88 bc 01                 a5 = a4 <u 0x1
197161: d8 b6 0b                 a4 = s1 <u a4
197164: d4 cb 0b                 a4 = a4 | a5
197167: 52 0b 9b 01              jump @13545 if a4 != 0
      :                          @13515
197171: 82 7b                    a4 = u64 [a0]
197173: ab ab e5                 jump @13513 if a4 != a3
      :                          @13516
197176: 7b 78                    u64 [a0] = a1
197178: 33 0c                    a5 = 0
197180: 33 07 c0 22 04           a0 = 0x422c0
197185: c9 87 07                 a0 = a0 - a1
197188: 28 25                    jump @13520
      :                          @13517
197190: 33 09                    a2 = 0
197192: 33 02 f0 2f 01           t0 = 0x12ff0
197197: 01                       fallthrough
      :                          @13518
197198: 82 18                    a1 = u64 [sp]
197200: 7b 82 08                 u64 [a1 + 0x8] = t0
197203: 7b 89 10                 u64 [a1 + 0x10] = a2
197206: 14 07 00 00 00 00 00 00 00 80 a0 = 0x8000000000000000
197216: 7b 87                    u64 [a1] = a0
197218: 28 23 01                 jump @13540
      :                          @13519
197221: 33 07 01                 a0 = 0x1
197224: 01                       fallthrough
      :                          @13520
197225: 33 08                    a1 = 0
197227: 7b 15 30                 u64 [sp + 0x30] = s0
197230: 7b 17 38                 u64 [sp + 0x38] = a0
197233: 49 11 40                 u64 [sp + 64] = 0
197236: ac 95 22 01              jump @13541 if s0 <u a2
      :                          @13521
197240: 7b 18 10                 u64 [sp + 0x10] = a1
197243: 7b 17 18                 u64 [sp + 0x18] = a0
197246: c8 87 07                 a0 = a0 + a1
197249: 64 28                    a1 = t0
197251: 64 96                    s1 = a2
197253: 50 20 04 0c 64 07        ra = 3076, jump @13633
      :                          @13522 [@dyn 1538]
197259: 82 18 10                 a1 = u64 [sp + 0x10]
197262: c8 68 08                 a1 = a1 + s1
197265: c9 85 05                 s0 = s0 - a1
197268: 7b 18 40                 u64 [sp + 0x40] = a1
197271: 54 15 02 1e 01           jump @13543 if s0 <=u 2
      :                          @13523
197276: 82 17 18                 a0 = u64 [sp + 0x18]
197279: 01                       fallthrough
      :                          @13524
197280: 7b 17 18                 u64 [sp + 0x18] = a0
197283: c8 87 07                 a0 = a0 + a1
197286: 46 17 02 bd 00           u8 [a0 + 2] = 0xbd
197291: 46 17 01 bf 00           u8 [a0 + 1] = 0xbf
197296: 46 07 ef 00              u8 [a0 + 0] = 0xef
197300: 82 17 20                 a0 = u64 [sp + 0x20]
197303: 82 19 28                 a2 = u64 [sp + 0x28]
197306: 95 88 03                 a1 = a1 + 0x3
197309: 7b 18 10                 u64 [sp + 0x10] = a1
197312: 7b 18 40                 u64 [sp + 0x40] = a1
197315: 7b 17 48                 u64 [sp + 0x48] = a0
197318: 7b 19 50                 u64 [sp + 0x50] = a2
197321: 28 06                    jump @13526
      :                          @13525
197323: 7b 1a 10                 u64 [sp + 0x10] = a3
197326: 01                       fallthrough
      :                          @13526
197327: 95 17 58                 a0 = sp + 0x58
197330: 95 18 48                 a1 = sp + 0x48
197333: 50 20 06 0c c7 1d        ra = 3078, jump @14011
      :                          @13527 [@dyn 1539]
197339: 82 15 58                 s0 = u64 [sp + 0x58]
197342: 51 05 93 00              jump @13539 if s0 == 0
      :                          @13528
197346: 82 17 30                 a0 = u64 [sp + 0x30]
197349: 82 16 60                 s1 = u64 [sp + 0x60]
197352: 82 18 70                 a1 = u64 [sp + 0x70]
197355: 7b 18 08                 u64 [sp + 0x8] = a1
197358: 82 1a 10                 a3 = u64 [sp + 0x10]
197361: c9 a7 07                 a0 = a0 - a3
197364: ac 67 52                 jump @13535 if a0 <u s1
      :                          @13529
197367: 82 17 18                 a0 = u64 [sp + 0x18]
197370: 01                       fallthrough
      :                          @13530
197371: 7b 17 18                 u64 [sp + 0x18] = a0
197374: c8 a7 07                 a0 = a0 + a3
197377: 64 58                    a1 = s0
197379: 64 69                    a2 = s1
197381: 64 a5                    s0 = a3
197383: 50 20 08 0c e2 06        ra = 3080, jump @13633
      :                          @13531 [@dyn 1540]
197389: c8 65 0a                 a3 = s0 + s1
197392: 7b 1a 40                 u64 [sp + 0x40] = a3
197395: 82 17 08                 a0 = u64 [sp + 0x8]
197398: 51 07 b5                 jump @13525 if a0 == 0
      :                          @13532
197401: 82 17 30                 a0 = u64 [sp + 0x30]
197404: c9 a7 07                 a0 = a0 - a3
197407: 54 17 02 3c              jump @13537 if a0 <=u 2
      :                          @13533
197411: 82 17 18                 a0 = u64 [sp + 0x18]
197414: 01                       fallthrough
      :                          @13534
197415: 7b 17 18                 u64 [sp + 0x18] = a0
197418: c8 a7 07                 a0 = a0 + a3
197421: 46 17 02 bd 00           u8 [a0 + 2] = 0xbd
197426: 46 17 01 bf 00           u8 [a0 + 1] = 0xbf
197431: 46 07 ef 00              u8 [a0 + 0] = 0xef
197435: 95 aa 03                 a3 = a3 + 0x3
197438: 7b 1a 10                 u64 [sp + 0x10] = a3
197441: 7b 1a 40                 u64 [sp + 0x40] = a3
197444: 28 8b                    jump @13526
      :                          @13535
197446: 95 17 30                 a0 = sp + 0x30
197449: 64 a8                    a1 = a3
197451: 64 69                    a2 = s1
197453: 50 20 0a 0c 44 fc        ra = 3082, jump @13451
      :                          @13536 [@dyn 1541]
197459: 82 1a 40                 a3 = u64 [sp + 0x40]
197462: 82 17 38                 a0 = u64 [sp + 0x38]
197465: 28 a2                    jump @13530
      :                          @13537
197467: 95 17 30                 a0 = sp + 0x30
197470: 33 09 03                 a2 = 0x3
197473: 64 a8                    a1 = a3
197475: 50 20 0c 0c 2e fc        ra = 3084, jump @13451
      :                          @13538 [@dyn 1542]
197481: 82 1a 40                 a3 = u64 [sp + 0x40]
197484: 82 17 38                 a0 = u64 [sp + 0x38]
197487: 28 b8                    jump @13534
      :                          @13539
197489: 82 17 40                 a0 = u64 [sp + 0x40]
197492: 82 18 38                 a1 = u64 [sp + 0x38]
197495: 82 19 30                 a2 = u64 [sp + 0x30]
197498: 82 1a                    a3 = u64 [sp]
197500: 7b a7 10                 u64 [a3 + 0x10] = a0
197503: 7b a8 08                 u64 [a3 + 0x8] = a1
197506: 7b a9                    u64 [a3] = a2
197508: 01                       fallthrough
      :                          @13540
197509: 82 10 88 00              ra = u64 [sp + 0x88]
197513: 82 15 80 00              s0 = u64 [sp + 0x80]
197517: 82 16 78                 s1 = u64 [sp + 0x78]
197520: 95 11 90 00              sp = sp + 0x90
197524: 32 00                    ret
      :                          @13541
197526: 95 17 30                 a0 = sp + 0x30
197529: 33 08                    a1 = 0
197531: 64 95                    s0 = a2
197533: 64 26                    s1 = t0
197535: 50 20 0e 0c f2 fb        ra = 3086, jump @13451
      :                          @13542 [@dyn 1543]
197541: 64 62                    t0 = s1
197543: 64 59                    a2 = s0
197545: 82 18 40                 a1 = u64 [sp + 0x40]
197548: 82 17 38                 a0 = u64 [sp + 0x38]
197551: 82 15 30                 s0 = u64 [sp + 0x30]
197554: 28 c6 fe                 jump @13521
      :                          @13543
197557: 95 17 30                 a0 = sp + 0x30
197560: 33 09 03                 a2 = 0x3
197563: 50 20 10 0c d6 fb        ra = 3088, jump @13451
      :                          @13544 [@dyn 1544]
197569: 82 18 40                 a1 = u64 [sp + 0x40]
197572: 82 17 38                 a0 = u64 [sp + 0x38]
197575: 28 d9 fe                 jump @13524
      :                          @13545
197578: 00                       trap
      :                          @13546
197579: 00                       trap
      :                          @13547
197580: 95 11 c8                 sp = sp + 0xffffffffffffffc8
197583: 7b 10 30                 u64 [sp + 0x30] = ra
197586: 7b 15 28                 u64 [sp + 0x28] = s0
197589: 7b 16 20                 u64 [sp + 0x20] = s1
197592: 64 89                    a2 = a1
197594: 82 8a 08                 a3 = u64 [a1 + 0x8]
197597: 64 75                    s0 = a0
197599: 51 0a 35                 jump @13552 if a3 == 0
      :                          @13548
197602: 82 98                    a1 = u64 [a2]
197604: 33 07                    a0 = 0
197606: 95 8b 08                 a4 = a1 + 0x8
197609: 01                       fallthrough
      :                          @13549
197610: 82 bc                    a5 = u64 [a4]
197612: c8 c7 07                 a0 = a0 + a5
197615: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
197618: 95 bb 10                 a4 = a4 + 0x10
197621: 52 0a f5                 jump @13549 if a3 != 0
      :                          @13550
197624: 82 9a 18                 a3 = u64 [a2 + 0x18]
197627: 51 0a 24                 jump @13554 if a3 == 0
      :                          @13551
197630: 82 88 08                 a1 = u64 [a1 + 0x8]
197633: 8e 88                    a1 = a1 >u 0
197635: 88 7a 10                 a3 = a0 <u 0x10
197638: 85 aa 01                 a3 = a3 ^ 0x1
197641: d4 a8 08                 a1 = a1 | a3
197644: 89 7a                    a3 = a0 <s 0
197646: e0 a8 08                 a1 = a1 & ~a3
197649: 52 08 0a                 jump @13553 if a1 != 0
      :                          @13552
197652: 33 07                    a0 = 0
197654: 33 08 01                 a1 = 0x1
197657: 28 4a                    jump @13562
      :                          @13553
197659: 97 77 01                 a0 = a0 << 0x1
197662: 01                       fallthrough
      :                          @13554
197663: 51 07 40                 jump @13561 if a0 == 0
      :                          @13555
197666: 57 07 79                 jump @13567 if a0 <s 0
      :                          @13556
197669: 64 52                    t0 = s0
197671: 33 0b c0 22 03           a4 = 0x322c0
197676: 33 08 00 00 01           a1 = 0x10000
197681: c8 8b 0b                 a4 = a4 + a1
197684: 01                       fallthrough
      :                          @13557
197685: 82 bc                    a5 = u64 [a4]
197687: c8 7c 0a                 a3 = a5 + a0
197690: ac ca 5f                 jump @13565 if a3 <u a5
      :                          @13558
197693: 95 a5 01                 s0 = a3 + 0x1
197696: 88 56 01                 s1 = s0 <u 0x1
197699: d8 58 05                 s0 = a1 <u s0
197702: d4 65 05                 s0 = s0 | s1
197705: 52 05 50                 jump @13565 if s0 != 0
      :                          @13559
197708: 82 b6                    s1 = u64 [a4]
197710: ab c6 e7                 jump @13557 if s1 != a5
      :                          @13560
197713: 7b ba                    u64 [a4] = a3
197715: 33 08 c0 22 04           a1 = 0x422c0
197720: c9 a8 08                 a1 = a1 - a3
197723: 64 25                    s0 = t0
197725: 28 06                    jump @13562
      :                          @13561
197727: 33 08 01                 a1 = 0x1
197730: 01                       fallthrough
      :                          @13562
197731: 7b 17                    u64 [sp] = a0
197733: 7b 18 08                 u64 [sp + 0x8] = a1
197736: 49 11 10                 u64 [sp + 16] = 0
197739: 33 08 c0 2f 01           a1 = 0x12fc0
197744: 64 17                    a0 = sp
197746: 50 20 12 0c a2 0f        ra = 3090, jump @13841
      :                          @13563 [@dyn 1545]
197752: 52 07 22                 jump @13566 if a0 != 0
      :                          @13564
197755: 82 17 10                 a0 = u64 [sp + 0x10]
197758: 82 18 08                 a1 = u64 [sp + 0x8]
197761: 82 19                    a2 = u64 [sp]
197763: 7b 57 10                 u64 [s0 + 0x10] = a0
197766: 7b 58 08                 u64 [s0 + 0x8] = a1
197769: 7b 59                    u64 [s0] = a2
197771: 82 10 30                 ra = u64 [sp + 0x30]
197774: 82 15 28                 s0 = u64 [sp + 0x28]
197777: 82 16 20                 s1 = u64 [sp + 0x20]
197780: 95 11 38                 sp = sp + 0x38
197783: 32 00                    ret
      :                          @13565
197785: 00                       trap
      :                          @13566
197786: 00                       trap
      :                          @13567
197787: 00                       trap
      :                          @13568 [@dyn 1546]
197788: 82 72                    t0 = u64 [a0]
197790: 33 09 00 00 ff           a2 = 0xffffffffffff0000
197795: 95 2a ff ff fe           a3 = t0 + 0xfffffffffffeffff
197800: ac 9a 28                 jump @13574 if a3 <u a2
      :                          @13569
197803: 82 77 08                 a0 = u64 [a0 + 0x8]
197806: 33 09 c0 22 03           a2 = 0x322c0
197811: 95 99 00 00 01           a2 = a2 + 0x10000
197816: 01                       fallthrough
      :                          @13570
197817: 82 9a                    a3 = u64 [a2]
197819: c9 a9 0b                 a4 = a2 - a3
197822: ab 7b 12                 jump @13574 if a4 != a0
      :                          @13571
197825: c9 2a 0b                 a4 = a3 - t0
197828: 01                       fallthrough
      :                          @13572
197829: 82 9c                    a5 = u64 [a2]
197831: ab ac f2                 jump @13570 if a5 != a3
      :                          @13573
197834: 7b 9b                    u64 [a2] = a4
197836: 33 08                    a1 = 0
197838: 32 00                    ret
      :                          @13574
197840: 32 00                    ret
      :                          @13575 [@dyn 1547]
197842: 95 11 e0                 sp = sp + 0xffffffffffffffe0
197845: 7b 10 18                 u64 [sp + 0x18] = ra
197848: 7b 15 10                 u64 [sp + 0x10] = s0
197851: 7b 16 08                 u64 [sp + 0x8] = s1
197854: 64 75                    s0 = a0
197856: 82 7a 10                 a3 = u64 [a0 + 0x10]
197859: 82 77                    a0 = u64 [a0]
197861: c9 a7 07                 a0 = a0 - a3
197864: 64 96                    s1 = a2
197866: ac 97 2b                 jump @13578 if a0 <u a2
      :                          @13576
197869: 7b 1a                    u64 [sp] = a3
197871: 82 57 08                 a0 = u64 [s0 + 0x8]
197874: c8 a7 07                 a0 = a0 + a3
197877: 64 69                    a2 = s1
197879: 50 20 18 0c f2 04        ra = 3096, jump @13633
      :                          @13577 [@dyn 1548]
197885: 82 17                    a0 = u64 [sp]
197887: c8 76 06                 s1 = s1 + a0
197890: 7b 56 10                 u64 [s0 + 0x10] = s1
197893: 33 07                    a0 = 0
197895: 82 10 18                 ra = u64 [sp + 0x18]
197898: 82 15 10                 s0 = u64 [sp + 0x10]
197901: 82 16 08                 s1 = u64 [sp + 0x8]
197904: 95 11 20                 sp = sp + 0x20
197907: 32 00                    ret
      :                          @13578
197909: 64 57                    a0 = s0
197911: 7b 18                    u64 [sp] = a1
197913: 64 a8                    a1 = a3
197915: 64 69                    a2 = s1
197917: 50 20 1a 0c 74 fa        ra = 3098, jump @13451
      :                          @13579 [@dyn 1549]
197923: 82 18                    a1 = u64 [sp]
197925: 82 5a 10                 a3 = u64 [s0 + 0x10]
197928: 28 c5                    jump @13576
      :                          @13580 [@dyn 1550]
197930: 95 11 d8                 sp = sp + 0xffffffffffffffd8
197933: 7b 10 20                 u64 [sp + 0x20] = ra
197936: 7b 15 18                 u64 [sp + 0x18] = s0
197939: 7b 16 10                 u64 [sp + 0x10] = s1
197942: 64 86                    s1 = a1
197944: 83 88                    i32 a1 = a1 + 0
197946: 33 09 80 00              a2 = 0x80
197950: 64 7a                    a3 = a0
197952: ae 98 2c                 jump @13585 if a1 >=u a2
      :                          @13581
197955: 82 a8 10                 a1 = u64 [a3 + 0x10]
197958: 82 a7                    a0 = u64 [a3]
197960: ab 78 13                 jump @13584 if a1 != a0
      :                          @13582
197963: 64 a7                    a0 = a3
197965: 64 a5                    s0 = a3
197967: 50 20 1e 0c 09 fc        ra = 3102, jump @13495
      :                          @13583 [@dyn 1551]
197973: 64 5a                    a3 = s0
197975: 82 58 10                 a1 = u64 [s0 + 0x10]
197978: 01                       fallthrough
      :                          @13584
197979: 82 a7 08                 a0 = u64 [a3 + 0x8]
197982: c8 87 07                 a0 = a0 + a1
197985: 78 76                    u8 [a0] = s1
197987: 95 88 01                 a1 = a1 + 0x1
197990: 7b a8 10                 u64 [a3 + 0x10] = a1
197993: 28 ad 00                 jump @13593
      :                          @13585
197996: 8b 67 0b                 i32 a0 = s1 >> 0xb
197999: 48 11 0c                 u32 [sp + 12] = 0
198002: 52 07 1c                 jump @13587 if a0 != 0
      :                          @13586
198005: 98 67 06                 a0 = s1 >> 0x6
198008: 86 77 c0 00              a0 = a0 | 0xc0
198012: 78 17 0c                 u8 [sp + 0xc] = a0
198015: 84 67 3f                 a0 = s1 & 0x3f
198018: 86 77 80 00              a0 = a0 | 0x80
198022: 78 17 0d                 u8 [sp + 0xd] = a0
198025: 33 06 02                 s1 = 0x2
198028: 28 63                    jump @13590
      :                          @13587
198030: 8b 67 10                 i32 a0 = s1 >> 0x10
198033: 52 07 29                 jump @13589 if a0 != 0
      :                          @13588
198036: 98 67 0c                 a0 = s1 >> 0xc
198039: 86 77 e0 00              a0 = a0 | 0xe0
198043: 78 17 0c                 u8 [sp + 0xc] = a0
198046: 97 67 34                 a0 = s1 << 0x34
198049: 98 77 3a                 a0 = a0 >> 0x3a
198052: 95 77 80 00              a0 = a0 + 0x80
198056: 78 17 0d                 u8 [sp + 0xd] = a0
198059: 84 67 3f                 a0 = s1 & 0x3f
198062: 86 77 80 00              a0 = a0 | 0x80
198066: 78 17 0e                 u8 [sp + 0xe] = a0
198069: 33 06 03                 s1 = 0x3
198072: 28 37                    jump @13590
      :                          @13589
198074: 97 67 2b                 a0 = s1 << 0x2b
198077: 98 77 3d                 a0 = a0 >> 0x3d
198080: 95 77 f0 00              a0 = a0 + 0xf0
198084: 78 17 0c                 u8 [sp + 0xc] = a0
198087: 97 67 2e                 a0 = s1 << 0x2e
198090: 98 77 3a                 a0 = a0 >> 0x3a
198093: 95 77 80 00              a0 = a0 + 0x80
198097: 78 17 0d                 u8 [sp + 0xd] = a0
198100: 97 67 34                 a0 = s1 << 0x34
198103: 98 77 3a                 a0 = a0 >> 0x3a
198106: 95 77 80 00              a0 = a0 + 0x80
198110: 78 17 0e                 u8 [sp + 0xe] = a0
198113: 84 67 3f                 a0 = s1 & 0x3f
198116: 86 77 80 00              a0 = a0 | 0x80
198120: 78 17 0f                 u8 [sp + 0xf] = a0
198123: 33 06 04                 s1 = 0x4
198126: 01                       fallthrough
      :                          @13590
198127: 82 a5 10                 s0 = u64 [a3 + 0x10]
198130: 82 a7                    a0 = u64 [a3]
198132: c9 57 07                 a0 = a0 - s0
198135: ac 67 2f                 jump @13594 if a0 <u s1
      :                          @13591
198138: 7b 1a                    u64 [sp] = a3
198140: 82 a7 08                 a0 = u64 [a3 + 0x8]
198143: c8 57 07                 a0 = a0 + s0
198146: 95 18 0c                 a1 = sp + 0xc
198149: 64 69                    a2 = s1
198151: 50 20 20 0c e2 03        ra = 3104, jump @13633
      :                          @13592 [@dyn 1552]
198157: c8 56 06                 s1 = s1 + s0
198160: 82 17                    a0 = u64 [sp]
198162: 7b 76 10                 u64 [a0 + 0x10] = s1
198165: 01                       fallthrough
      :                          @13593
198166: 33 07                    a0 = 0
198168: 82 10 20                 ra = u64 [sp + 0x20]
198171: 82 15 18                 s0 = u64 [sp + 0x18]
198174: 82 16 10                 s1 = u64 [sp + 0x10]
198177: 95 11 28                 sp = sp + 0x28
198180: 32 00                    ret
      :                          @13594
198182: 64 a7                    a0 = a3
198184: 64 58                    a1 = s0
198186: 64 69                    a2 = s1
198188: 64 a5                    s0 = a3
198190: 50 20 22 0c 63 f9        ra = 3106, jump @13451
      :                          @13595 [@dyn 1553]
198196: 64 5a                    a3 = s0
198198: 82 55 10                 s0 = u64 [s0 + 0x10]
198201: 28 c1                    jump @13591
      :                          @13596 [@dyn 1554]
198203: 64 8a                    a3 = a1
198205: 33 08 c0 2f 01           a1 = 0x12fc0
198210: 64 a9                    a2 = a3
198212: 28 d0 0d                 jump @13841
      :                          @13597
198215: 95 11 90                 sp = sp + 0xffffffffffffff90
198218: 7b 10 68                 u64 [sp + 0x68] = ra
198221: 7b 15 60                 u64 [sp + 0x60] = s0
198224: 7b 16 58                 u64 [sp + 0x58] = s1
198227: 68 bc                    a5 = clz a4
198229: 68 a6                    s1 = clz a3
198231: 95 65 40                 s0 = s1 + 0x40
198234: db bc 05                 s0 = a5 if a4 != 0
198237: 68 9c                    a5 = clz a2
198239: 68 86                    s1 = clz a1
198241: 95 66 40                 s1 = s1 + 0x40
198244: db 9c 06                 s1 = a5 if a2 != 0
198247: 64 70                    ra = a0
198249: ae 56 13                 jump @13601 if s1 >=u s0
      :                          @13598
198252: 33 07 3f                 a0 = 0x3f
198255: ae 67 2f                 jump @13602 if a0 >=u s1
      :                          @13599
198258: 51 0a b4 00              jump @13608 if a3 == 0
      :                          @13600
198262: cb a8 03                 t1 = a1 /u a3
198265: 28 ad 00                 jump @13608
      :                          @13601
198268: 33 02                    t0 = 0
198270: d8 a8 07                 a0 = a1 <u a3
198273: 85 9c                    a5 = a2 ^ 0
198275: 88 96                    s1 = a2 <u 0
198277: da c7 06                 s1 = a0 if a5 == 0
198280: 85 63 01                 t1 = s1 ^ 0x1
198283: 94 6b                    a4 = 0 if s1 != 0
198285: 94 6a                    a3 = 0 if s1 != 0
198287: d8 a8 07                 a0 = a1 <u a3
198290: c9 b9 09                 a2 = a2 - a4
198293: c9 79 09                 a2 = a2 - a0
198296: c9 a8 08                 a1 = a1 - a3
198299: 28 d0 02                 jump @13628
      :                          @13602
198302: 54 15 5f 42              jump @13605 if s0 <=u 95
      :                          @13603
198306: 97 ab 20                 a4 = a3 << 0x20
198309: 98 bb 20                 a4 = a4 >> 0x20
198312: 51 0b 96 01              jump @13615 if a4 == 0
      :                          @13604
198316: 14 07 ff ff ff ff 00 00 00 00 a0 = 0xffffffff
198326: cb b9 0c                 a5 = a2 /u a4
198329: c0 ac 0a                 i32 a3 = a5 * a3
198332: bf a9 09                 i32 a2 = a2 - a3
198335: 97 99 20                 a2 = a2 << 0x20
198338: 98 86 20                 s1 = a1 >> 0x20
198341: d4 69 09                 a2 = a2 | s1
198344: cb b9 0a                 a3 = a2 /u a4
198347: ca ba 09                 a2 = a3 * a4
198350: bf 96 06                 i32 s1 = s1 - a2
198353: d2 87 07                 a0 = a0 & a1
198356: 97 68 20                 a1 = s1 << 0x20
198359: d4 78 08                 a1 = a1 | a0
198362: cb b8 06                 s1 = a1 /u a4
198365: 28 61 01                 jump @13615
      :                          @13605
198368: c9 65 07                 a0 = s0 - s1
198371: 49 11 30                 u64 [sp + 48] = 0
198374: 55 17 20 4a              jump @13609 if a0 >=u 32
      :                          @13606
198378: 9a 64 40                 t2 = 0x40 - s1
198381: 8d 67                    i32 a0 = -s1
198383: d0 7a 02                 t0 = a3 >> a0
198386: 97 4c 20                 a5 = t2 << 0x20
198389: 98 cc 20                 a5 = a5 >> 0x20
198392: 85 c6 ff                 s1 = a5 ^ 0xffffffffffffffff
198395: 9b 67                    a0 = 0 << s1
198397: d4 72 03                 t1 = t0 | a0
198400: 9c c7                    a0 = 0 >> a5
198402: 95 c5 c0                 s0 = a5 + 0xffffffffffffffc0
198405: 89 52                    t0 = s0 <s 0
198407: db 23 07                 a0 = t1 if t0 != 0
198410: 51 07 48 01              jump @13616 if a0 == 0
      :                          @13607
198414: d0 48 03                 t1 = a1 >> t2
198417: 97 95 01                 s0 = a2 << 0x1
198420: cf 65 06                 s1 = s0 << s1
198423: d4 63 06                 s1 = t1 | s1
198426: d0 c9 0c                 a5 = a2 >> a5
198429: db 26 0c                 a5 = s1 if t0 != 0
198432: cb 7c 03                 t1 = a5 /u a0
198435: 28 2f 01                 jump @13616
      :                          @13608
198438: 33 09                    a2 = 0
198440: 33 02                    t0 = 0
198442: cd a8 08                 a1 = a1 %u a3
198445: 28 3e 02                 jump @13628
      :                          @13609
198448: 7b 10 10                 u64 [sp + 0x10] = ra
198451: 33 03                    t1 = 0
198453: 33 02                    t0 = 0
198455: 7b 15 28                 u64 [sp + 0x28] = s0
198458: 9a 54 60                 t2 = 0x60 - s0
198461: d0 4a 00                 ra = a3 >> t2
198464: 97 4c 20                 a5 = t2 << 0x20
198467: 98 cc 20                 a5 = a5 >> 0x20
198470: 85 c5 ff                 s0 = a5 ^ 0xffffffffffffffff
198473: 49 11 08                 u64 [sp + 8] = 0
198476: 9b 55                    s0 = 0 << s0
198478: d4 50 07                 a0 = ra | s0
198481: 9c c5                    s0 = 0 >> a5
198483: 95 cc c0                 a5 = a5 + 0xffffffffffffffc0
198486: 89 cc                    a5 = a5 <s 0
198488: db c7 05                 s0 = a0 if a5 != 0
198491: 97 55 20                 s0 = s0 << 0x20
198494: 98 55 20                 s0 = s0 >> 0x20
198497: 95 55 01                 s0 = s0 + 0x1
198500: 7b 15 20                 u64 [sp + 0x20] = s0
198503: 7b 14 18                 u64 [sp + 0x18] = t2
198506: 01                       fallthrough
      :                          @13610
198507: 7b 12 50                 u64 [sp + 0x50] = t0
198510: 8d 65 40                 i32 s0 = 0x40 - s1
198513: d0 58 07                 a0 = a1 >> s0
198516: 97 5c 20                 a5 = s0 << 0x20
198519: 98 cc 20                 a5 = a5 >> 0x20
198522: 85 c0 ff                 ra = a5 ^ 0xffffffffffffffff
198525: 97 96 01                 s1 = a2 << 0x1
198528: cf 06 06                 s1 = s1 << ra
198531: d4 67 02                 t0 = a0 | s1
198534: d0 c9 06                 s1 = a2 >> a5
198537: 95 c7 c0                 a0 = a5 + 0xffffffffffffffc0
198540: 89 77                    a0 = a0 <s 0
198542: db 72 06                 s1 = t0 if a0 != 0
198545: ac 45 1b 01              jump @13619 if s0 <u t2
      :                          @13611
198549: 82 17 20                 a0 = u64 [sp + 0x20]
198552: cb 76 06                 s1 = s1 /u a0
198555: bf 45 00                 i32 ra = s0 - t2
198558: 84 07 7f                 a0 = ra & 0x7f
198561: cf 76 02                 t0 = s1 << a0
198564: 98 65 01                 s0 = s1 >> 0x1
198567: 85 7c ff                 a5 = a0 ^ 0xffffffffffffffff
198570: d0 c5 05                 s0 = s0 >> a5
198573: 7b 18 48                 u64 [sp + 0x48] = a1
198576: 7b 13 40                 u64 [sp + 0x40] = t1
198579: 95 73 c0                 t1 = a0 + 0xffffffffffffffc0
198582: 7b 19 38                 u64 [sp + 0x38] = a2
198585: 89 39                    a2 = t1 <s 0
198587: da 92 05                 s0 = t0 if a2 == 0
198590: ca b6 02                 t0 = s1 * a4
198593: d6 a6 04                 t2 = s1 mulhu a3
198596: c8 42 02                 t0 = t0 + t2
198599: 64 a4                    t2 = a3
198601: ca a6 08                 a1 = s1 * a3
198604: 98 8a 01                 a3 = a1 >> 0x1
198607: d0 ca 0a                 a3 = a3 >> a5
198610: cf 02 0c                 a5 = t0 << ra
198613: d4 ca 0a                 a3 = a3 | a5
198616: cf 78 07                 a0 = a1 << a0
198619: db 9a 07                 a0 = a3 if a2 != 0
198622: 82 19 50                 a2 = u64 [sp + 0x50]
198625: c8 95 05                 s0 = s0 + a2
198628: cf 06 0a                 a3 = s1 << ra
198631: cf 08 0c                 a5 = a1 << ra
198634: 99 3b 3f                 a4 = t1 >>a 0x3f
198637: 82 13 40                 t1 = u64 [sp + 0x40]
198640: 82 18 48                 a1 = u64 [sp + 0x48]
198643: d2 ba 0a                 a3 = a3 & a4
198646: d2 bc 0c                 a5 = a5 & a4
198649: d8 c8 0b                 a4 = a1 <u a5
198652: 82 19 38                 a2 = u64 [sp + 0x38]
198655: c9 b9 09                 a2 = a2 - a4
198658: c9 79 09                 a2 = a2 - a0
198661: c9 c8 08                 a1 = a1 - a5
198664: 68 97                    a0 = clz a2
198666: 68 8b                    a4 = clz a1
198668: 95 b6 40                 s1 = a4 + 0x40
198671: db 97 06                 s1 = a0 if a2 != 0
198674: c8 a3 03                 t1 = t1 + a3
198677: d8 a3 07                 a0 = t1 <u a3
198680: c8 75 02                 t0 = s0 + a0
198683: 82 17 28                 a0 = u64 [sp + 0x28]
198686: ae 76 a8 00              jump @13621 if s1 >=u a0
      :                          @13612
198690: 64 4a                    a3 = t2
198692: 82 1b 30                 a4 = u64 [sp + 0x30]
198695: 82 14 18                 t2 = u64 [sp + 0x18]
198698: 33 07 3f                 a0 = 0x3f
198701: ae 67 3e ff              jump @13610 if a0 >=u s1
      :                          @13613
198705: 82 10 10                 ra = u64 [sp + 0x10]
198708: 51 0a c0 00              jump @13624 if a3 == 0
      :                          @13614
198712: cb a8 07                 a0 = a1 /u a3
198715: 28 b9 00                 jump @13624
      :                          @13615
198718: 33 09                    a2 = 0
198720: cd b8 08                 a1 = a1 %u a4
198723: 97 a7 20                 a0 = a3 << 0x20
198726: d4 67 03                 t1 = a0 | s1
198729: 98 aa 20                 a3 = a3 >> 0x20
198732: d4 ca 02                 t0 = a3 | a5
198735: 28 1c 01                 jump @13628
      :                          @13616
198738: ca 3a 04                 t2 = a3 * t1
198741: d6 3a 07                 a0 = a3 mulhu t1
198744: 82 1b 30                 a4 = u64 [sp + 0x30]
198747: d6 3b 05                 s0 = a4 mulhu t1
198750: ca 3b 06                 s1 = a4 * t1
198753: c8 76 06                 s1 = s1 + a0
198756: d8 76 07                 a0 = s1 <u a0
198759: c8 57 07                 a0 = a0 + s0
198762: 8e 72                    t0 = a0 >u 0
198764: d3 69 0c                 a5 = a2 ^ s1
198767: d8 69 05                 s0 = a2 <u s1
198770: d8 48 07                 a0 = a1 <u t2
198773: da c7 05                 s0 = a0 if a5 == 0
198776: d4 52 0c                 a5 = t0 | s0
198779: 51 0c 23                 jump @13618 if a5 == 0
      :                          @13617
198782: 33 02                    t0 = 0
198784: c8 b9 09                 a2 = a2 + a4
198787: 95 33 ff                 t1 = t1 + 0xffffffffffffffff
198790: c8 8a 07                 a0 = a3 + a1
198793: d8 a7 08                 a1 = a0 <u a3
198796: c8 98 08                 a1 = a1 + a2
198799: c9 68 08                 a1 = a1 - s1
198802: d8 47 09                 a2 = a0 <u t2
198805: c9 98 09                 a2 = a1 - a2
198808: c9 47 08                 a1 = a0 - t2
198811: 28 d0 00                 jump @13628
      :                          @13618
198814: 33 02                    t0 = 0
198816: c9 69 09                 a2 = a2 - s1
198819: c9 79 09                 a2 = a2 - a0
198822: c9 48 08                 a1 = a1 - t2
198825: 28 c2 00                 jump @13628
      :                          @13619
198828: d0 5a 02                 t0 = a3 >> s0
198831: 82 15 08                 s0 = u64 [sp + 0x8]
198834: cf 05 05                 s0 = s0 << ra
198837: d4 52 05                 s0 = t0 | s0
198840: d0 cb 0c                 a5 = a4 >> a5
198843: db 75 0c                 a5 = s0 if a0 != 0
198846: 51 0c 48                 jump @13625 if a5 == 0
      :                          @13620
198849: cb c6 05                 s0 = s1 /u a5
198852: 28 42                    jump @13625
      :                          @13621
198854: d8 48 07                 a0 = a1 <u t2
198857: 82 1c 30                 a5 = u64 [sp + 0x30]
198860: d3 c9 0b                 a4 = a2 ^ a5
198863: d8 c9 0a                 a3 = a2 <u a5
198866: da b7 0a                 a3 = a0 if a4 == 0
198869: 52 0a 1a                 jump @13623 if a3 != 0
      :                          @13622
198872: 95 33 01                 t1 = t1 + 0x1
198875: 88 3a 01                 a3 = t1 <u 0x1
198878: c8 a2 02                 t0 = t0 + a3
198881: c9 c9 09                 a2 = a2 - a5
198884: c9 79 09                 a2 = a2 - a0
198887: c9 48 08                 a1 = a1 - t2
198890: 82 10 10                 ra = u64 [sp + 0x10]
198893: 28 7e                    jump @13628
      :                          @13623
198895: 82 10 10                 ra = u64 [sp + 0x10]
198898: 28 79                    jump @13628
      :                          @13624
198900: 33 09                    a2 = 0
198902: cd a8 08                 a1 = a1 %u a3
198905: c8 37 07                 a0 = a0 + t1
198908: d8 37 0a                 a3 = a0 <u t1
198911: c8 a2 02                 t0 = t0 + a3
198914: 64 73                    t1 = a0
198916: 28 67                    jump @13628
      :                          @13625
198918: 82 10 10                 ra = u64 [sp + 0x10]
198921: d6 a5 06                 s1 = s0 mulhu a3
198924: ca b5 07                 a0 = s0 * a4
198927: c8 76 06                 s1 = s1 + a0
198930: ca a5 02                 t0 = s0 * a3
198933: d3 69 04                 t2 = a2 ^ s1
198936: d8 69 0c                 a5 = a2 <u s1
198939: d8 28 07                 a0 = a1 <u t0
198942: da 47 0c                 a5 = a0 if t2 == 0
198945: 51 0c 30                 jump @13627 if a5 == 0
      :                          @13626
198948: c8 35 05                 s0 = s0 + t1
198951: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
198954: d8 35 07                 a0 = s0 <u t1
198957: 82 1c 50                 a5 = u64 [sp + 0x50]
198960: c8 7c 0c                 a5 = a5 + a0
198963: c8 a8 07                 a0 = a1 + a3
198966: d8 87 08                 a1 = a0 <u a1
198969: c8 b9 09                 a2 = a2 + a4
198972: c8 98 08                 a1 = a1 + a2
198975: c9 68 08                 a1 = a1 - s1
198978: d8 27 09                 a2 = a0 <u t0
198981: c9 98 09                 a2 = a1 - a2
198984: c9 27 08                 a1 = a0 - t0
198987: 64 c2                    t0 = a5
198989: 64 53                    t1 = s0
198991: 28 1c                    jump @13628
      :                          @13627
198993: c8 35 05                 s0 = s0 + t1
198996: d8 35 0a                 a3 = s0 <u t1
198999: 82 1b 50                 a4 = u64 [sp + 0x50]
199002: c8 ab 0b                 a4 = a4 + a3
199005: c9 69 09                 a2 = a2 - s1
199008: c9 79 09                 a2 = a2 - a0
199011: c9 28 08                 a1 = a1 - t0
199014: 64 b2                    t0 = a4
199016: 64 53                    t1 = s0
199018: 01                       fallthrough
      :                          @13628
199019: 7b 08 10                 u64 [ra + 0x10] = a1
199022: 7b 03                    u64 [ra] = t1
199024: 7b 09 18                 u64 [ra + 0x18] = a2
199027: 7b 02 08                 u64 [ra + 0x8] = t0
199030: 82 10 68                 ra = u64 [sp + 0x68]
199033: 82 15 60                 s0 = u64 [sp + 0x60]
199036: 82 16 58                 s1 = u64 [sp + 0x58]
199039: 95 11 70                 sp = sp + 0x70
199042: 32 00                    ret
      :                          @13629
199044: 95 11 d0                 sp = sp + 0xffffffffffffffd0
199047: 7b 10 28                 u64 [sp + 0x28] = ra
199050: 7b 15 20                 u64 [sp + 0x20] = s0
199053: 95 15 30                 s0 = sp + 0x30
199056: 84 11 f0                 sp = sp & 0xfffffffffffffff0
199059: 33 0b                    a4 = 0
199061: 64 9a                    a3 = a2
199063: 64 89                    a2 = a1
199065: 64 78                    a1 = a0
199067: 64 17                    a0 = sp
199069: 50 20 26 0c aa fc        ra = 3110, jump @13597
      :                          @13630 [@dyn 1555]
199075: 82 18 08                 a1 = u64 [sp + 0x8]
199078: 82 17                    a0 = u64 [sp]
199080: 95 51 d0                 sp = s0 + 0xffffffffffffffd0
199083: 82 10 28                 ra = u64 [sp + 0x28]
199086: 82 15 20                 s0 = u64 [sp + 0x20]
199089: 95 11 30                 sp = sp + 0x30
199092: 32 00                    ret
      :                          @13631
199094: 95 11 d0                 sp = sp + 0xffffffffffffffd0
199097: 7b 10 28                 u64 [sp + 0x28] = ra
199100: 7b 15 20                 u64 [sp + 0x20] = s0
199103: 95 15 30                 s0 = sp + 0x30
199106: 84 11 f0                 sp = sp & 0xfffffffffffffff0
199109: 33 0b                    a4 = 0
199111: 64 9a                    a3 = a2
199113: 64 89                    a2 = a1
199115: 64 78                    a1 = a0
199117: 64 17                    a0 = sp
199119: 50 20 28 0c 78 fc        ra = 3112, jump @13597
      :                          @13632 [@dyn 1556]
199125: 82 18 18                 a1 = u64 [sp + 0x18]
199128: 82 17 10                 a0 = u64 [sp + 0x10]
199131: 95 51 d0                 sp = s0 + 0xffffffffffffffd0
199134: 82 10 28                 ra = u64 [sp + 0x28]
199137: 82 15 20                 s0 = u64 [sp + 0x20]
199140: 95 11 30                 sp = sp + 0x30
199143: 32 00                    ret
      :                          @13633
199145: 95 11 e0                 sp = sp + 0xffffffffffffffe0
199148: 7b 10 18                 u64 [sp + 0x18] = ra
199151: 7b 15 10                 u64 [sp + 0x10] = s0
199154: 7b 16 08                 u64 [sp + 0x8] = s1
199157: 53 19 10 64              jump @13642 if a2 <u 16
      :                          @13634
199161: 8d 7a                    i32 a3 = -a0
199163: 84 a2 07                 t0 = a3 & 0x7
199166: c8 27 0b                 a4 = a0 + t0
199169: 51 02 15                 jump @13637 if t0 == 0
      :                          @13635
199172: 64 8c                    a5 = a1
199174: 64 75                    s0 = a0
199176: 01                       fallthrough
      :                          @13636
199177: 7c ca                    a3 = u8 [a5]
199179: 78 5a                    u8 [s0] = a3
199181: 95 55 01                 s0 = s0 + 0x1
199184: 95 cc 01                 a5 = a5 + 0x1
199187: ac b5 f6                 jump @13636 if s0 <u a4
      :                          @13637
199190: c8 28 03                 t1 = a1 + t0
199193: c9 29 02                 t0 = a2 - t0
199196: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
199199: 84 38 07                 a1 = t1 & 0x7
199202: c8 4b 0a                 a3 = a4 + t2
199205: 51 08 3b                 jump @13644 if a1 == 0
      :                          @13638
199208: 58 04 4b                 jump @13647 if t2 <=s 0
      :                          @13639
199211: 97 38 03                 a1 = t1 << 0x3
199214: 84 80 38                 ra = a1 & 0x38
199217: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
199220: 82 c5                    s0 = u64 [a5]
199222: 8d 88                    i32 a1 = -a1
199224: 84 88 38                 a1 = a1 & 0x38
199227: 95 cc 08                 a5 = a5 + 0x8
199230: 01                       fallthrough
      :                          @13640
199231: 82 c6                    s1 = u64 [a5]
199233: d0 05 05                 s0 = s0 >> ra
199236: cf 86 09                 a2 = s1 << a1
199239: d4 59 09                 a2 = a2 | s0
199242: 7b b9                    u64 [a4] = a2
199244: 95 bb 08                 a4 = a4 + 0x8
199247: 95 cc 08                 a5 = a5 + 0x8
199250: 64 65                    s0 = s1
199252: ac ab eb                 jump @13640 if a4 <u a3
      :                          @13641
199255: 28 1c                    jump @13647
      :                          @13642
199257: 64 7a                    a3 = a0
199259: 52 09 21                 jump @13648 if a2 != 0
      :                          @13643
199262: 28 2f                    jump @13650
      :                          @13644
199264: 58 04 13                 jump @13647 if t2 <=s 0
      :                          @13645
199267: 64 38                    a1 = t1
199269: 01                       fallthrough
      :                          @13646
199270: 82 89                    a2 = u64 [a1]
199272: 7b b9                    u64 [a4] = a2
199274: 95 bb 08                 a4 = a4 + 0x8
199277: 95 88 08                 a1 = a1 + 0x8
199280: ac ab f6                 jump @13646 if a4 <u a3
      :                          @13647
199283: c8 43 08                 a1 = t1 + t2
199286: 84 29 07                 a2 = t0 & 0x7
199289: 51 09 14                 jump @13650 if a2 == 0
      :                          @13648
199292: c8 a9 09                 a2 = a2 + a3
199295: 01                       fallthrough
      :                          @13649
199296: 7c 8b                    a4 = u8 [a1]
199298: 78 ab                    u8 [a3] = a4
199300: 95 aa 01                 a3 = a3 + 0x1
199303: 95 88 01                 a1 = a1 + 0x1
199306: ac 9a f6                 jump @13649 if a3 <u a2
      :                          @13650
199309: 82 10 18                 ra = u64 [sp + 0x18]
199312: 82 15 10                 s0 = u64 [sp + 0x10]
199315: 82 16 08                 s1 = u64 [sp + 0x8]
199318: 95 11 20                 sp = sp + 0x20
199321: 32 00                    ret
      :                          @13651
199323: 95 11 e0                 sp = sp + 0xffffffffffffffe0
199326: 7b 10 18                 u64 [sp + 0x18] = ra
199329: 7b 15 10                 u64 [sp + 0x10] = s0
199332: 7b 16 08                 u64 [sp + 0x8] = s1
199335: c9 87 0a                 a3 = a0 - a1
199338: ae 9a 7d                 jump @13661 if a3 >=u a2
      :                          @13652
199341: c8 97 0a                 a3 = a0 + a2
199344: c8 98 02                 t0 = a1 + a2
199347: 53 19 10 da 00           jump @13670 if a2 <u 16
      :                          @13653
199352: 84 a4 07                 t2 = a3 & 0x7
199355: 9a 43                    t1 = -t2
199357: 84 ab f8                 a4 = a3 & 0xfffffffffffffff8
199360: 51 04 1a                 jump @13656 if t2 == 0
      :                          @13654
199363: c8 98 05                 s0 = a1 + a2
199366: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
199369: 01                       fallthrough
      :                          @13655
199370: 7c 5c                    a5 = u8 [s0]
199372: 95 a6 ff                 s1 = a3 + 0xffffffffffffffff
199375: 78 ac ff                 u8 [a3 + 0xffffffffffffffff] = a5
199378: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
199381: 64 6a                    a3 = s1
199383: ac 6b f3                 jump @13655 if a4 <u s1
      :                          @13656
199386: c8 32 02                 t0 = t0 + t1
199389: c9 49 03                 t1 = a2 - t2
199392: 84 34 f8                 t2 = t1 & 0xfffffffffffffff8
199395: 7b 12                    u64 [sp] = t0
199397: 84 29 07                 a2 = t0 & 0x7
199400: c9 4b 0a                 a3 = a4 - t2
199403: 51 09 b0 00              jump @13673 if a2 == 0
      :                          @13657
199407: 58 04 c6 00              jump @13676 if t2 <=s 0
      :                          @13658
199411: 82 16                    s1 = u64 [sp]
199413: 97 69 03                 a2 = s1 << 0x3
199416: 84 90 38                 ra = a2 & 0x38
199419: 84 66 f8                 s1 = s1 & 0xfffffffffffffff8
199422: 82 65                    s0 = u64 [s1]
199424: 8d 99                    i32 a2 = -a2
199426: 84 9c 38                 a5 = a2 & 0x38
199429: 95 69 f8                 a2 = s1 + 0xfffffffffffffff8
199432: 01                       fallthrough
      :                          @13659
199433: 82 96                    s1 = u64 [a2]
199435: cf c5 05                 s0 = s0 << a5
199438: d0 06 08                 a1 = s1 >> ra
199441: d4 58 08                 a1 = a1 | s0
199444: 95 b2 f8                 t0 = a4 + 0xfffffffffffffff8
199447: 7b b8 f8                 u64 [a4 + 0xfffffffffffffff8] = a1
199450: 95 99 f8                 a2 = a2 + 0xfffffffffffffff8
199453: 64 65                    s0 = s1
199455: 64 2b                    a4 = t0
199457: ac 2a e8                 jump @13659 if a3 <u t0
      :                          @13660
199460: 28 91 00                 jump @13676
      :                          @13661
199463: 53 19 10 6d              jump @13671 if a2 <u 16
      :                          @13662
199467: 8d 7a                    i32 a3 = -a0
199469: 84 aa 07                 a3 = a3 & 0x7
199472: c8 a7 0b                 a4 = a0 + a3
199475: 51 0a 15                 jump @13665 if a3 == 0
      :                          @13663
199478: 64 8c                    a5 = a1
199480: 64 75                    s0 = a0
199482: 01                       fallthrough
      :                          @13664
199483: 7c c6                    s1 = u8 [a5]
199485: 78 56                    u8 [s0] = s1
199487: 95 55 01                 s0 = s0 + 0x1
199490: 95 cc 01                 a5 = a5 + 0x1
199493: ac b5 f6                 jump @13664 if s0 <u a4
      :                          @13665
199496: c8 a8 03                 t1 = a1 + a3
199499: c9 a9 02                 t0 = a2 - a3
199502: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
199505: 84 38 07                 a1 = t1 & 0x7
199508: c8 4b 0a                 a3 = a4 + t2
199511: 51 08 84 00              jump @13680 if a1 == 0
      :                          @13666
199515: 58 04 93 00              jump @13683 if t2 <=s 0
      :                          @13667
199519: 97 38 03                 a1 = t1 << 0x3
199522: 84 80 38                 ra = a1 & 0x38
199525: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
199528: 82 c5                    s0 = u64 [a5]
199530: 8d 88                    i32 a1 = -a1
199532: 84 88 38                 a1 = a1 & 0x38
199535: 95 cc 08                 a5 = a5 + 0x8
199538: 01                       fallthrough
      :                          @13668
199539: 82 c6                    s1 = u64 [a5]
199541: d0 05 05                 s0 = s0 >> ra
199544: cf 86 09                 a2 = s1 << a1
199547: d4 59 09                 a2 = a2 | s0
199550: 7b b9                    u64 [a4] = a2
199552: 95 bb 08                 a4 = a4 + 0x8
199555: 95 cc 08                 a5 = a5 + 0x8
199558: 64 65                    s0 = s1
199560: ac ab eb                 jump @13668 if a4 <u a3
      :                          @13669
199563: 28 63                    jump @13683
      :                          @13670
199565: 64 78                    a1 = a0
199567: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
199570: 28 37                    jump @13678
      :                          @13671
199572: 64 7a                    a3 = a0
199574: 52 09 61                 jump @13684 if a2 != 0
      :                          @13672
199577: 28 6f                    jump @13686
      :                          @13673
199579: 58 04 1a                 jump @13676 if t2 <=s 0
      :                          @13674
199582: c8 38 08                 a1 = a1 + t1
199585: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
199588: 01                       fallthrough
      :                          @13675
199589: 82 89                    a2 = u64 [a1]
199591: 95 bc f8                 a5 = a4 + 0xfffffffffffffff8
199594: 7b b9 f8                 u64 [a4 + 0xfffffffffffffff8] = a2
199597: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
199600: 64 cb                    a4 = a5
199602: ac ca f3                 jump @13675 if a3 <u a5
      :                          @13676
199605: 84 38 07                 a1 = t1 & 0x7
199608: 51 08 50                 jump @13686 if a1 == 0
      :                          @13677
199611: 9a 49                    a2 = -t2
199613: 82 12                    t0 = u64 [sp]
199615: c8 92 02                 t0 = t0 + a2
199618: c9 8a 08                 a1 = a3 - a1
199621: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
199624: 01                       fallthrough
      :                          @13678
199625: 7c 29                    a2 = u8 [t0]
199627: 95 ab ff                 a4 = a3 + 0xffffffffffffffff
199630: 78 a9 ff                 u8 [a3 + 0xffffffffffffffff] = a2
199633: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
199636: 64 ba                    a3 = a4
199638: ac b8 f3                 jump @13678 if a1 <u a4
      :                          @13679
199641: 28 2f                    jump @13686
      :                          @13680
199643: 58 04 13                 jump @13683 if t2 <=s 0
      :                          @13681
199646: 64 38                    a1 = t1
199648: 01                       fallthrough
      :                          @13682
199649: 82 89                    a2 = u64 [a1]
199651: 7b b9                    u64 [a4] = a2
199653: 95 bb 08                 a4 = a4 + 0x8
199656: 95 88 08                 a1 = a1 + 0x8
199659: ac ab f6                 jump @13682 if a4 <u a3
      :                          @13683
199662: c8 43 08                 a1 = t1 + t2
199665: 84 29 07                 a2 = t0 & 0x7
199668: 51 09 14                 jump @13686 if a2 == 0
      :                          @13684
199671: c8 a9 09                 a2 = a2 + a3
199674: 01                       fallthrough
      :                          @13685
199675: 7c 8b                    a4 = u8 [a1]
199677: 78 ab                    u8 [a3] = a4
199679: 95 aa 01                 a3 = a3 + 0x1
199682: 95 88 01                 a1 = a1 + 0x1
199685: ac 9a f6                 jump @13685 if a3 <u a2
      :                          @13686
199688: 82 10 18                 ra = u64 [sp + 0x18]
199691: 82 15 10                 s0 = u64 [sp + 0x10]
199694: 82 16 08                 s1 = u64 [sp + 0x8]
199697: 95 11 20                 sp = sp + 0x20
199700: 32 00                    ret
      :                          @13687
199702: 53 19 10 48              jump @13696 if a2 <u 16
      :                          @13688
199706: 8d 7a                    i32 a3 = -a0
199708: 84 aa 07                 a3 = a3 & 0x7
199711: c8 a7 0b                 a4 = a0 + a3
199714: 51 0a 0e                 jump @13691 if a3 == 0
      :                          @13689
199717: 64 7c                    a5 = a0
199719: 01                       fallthrough
      :                          @13690
199720: 78 c8                    u8 [a5] = a1
199722: 95 cc 01                 a5 = a5 + 0x1
199725: ac bc fb                 jump @13690 if a5 <u a4
      :                          @13691
199728: c9 a9 03                 t1 = a2 - a3
199731: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
199734: c8 cb 0a                 a3 = a4 + a5
199737: 58 0c 1d                 jump @13694 if a5 <=s 0
      :                          @13692
199740: 84 82 ff 00              t0 = a1 & 0xff
199744: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
199754: ca 92 0c                 a5 = t0 * a2
199757: 01                       fallthrough
      :                          @13693
199758: 7b bc                    u64 [a4] = a5
199760: 95 bb 08                 a4 = a4 + 0x8
199763: ac ab fb                 jump @13693 if a4 <u a3
      :                          @13694
199766: 84 39 07                 a2 = t1 & 0x7
199769: 52 09 0a                 jump @13697 if a2 != 0
      :                          @13695
199772: 28 13                    jump @13699
      :                          @13696
199774: 64 7a                    a3 = a0
199776: 51 09 0f                 jump @13699 if a2 == 0
      :                          @13697
199779: c8 a9 09                 a2 = a2 + a3
199782: 01                       fallthrough
      :                          @13698
199783: 78 a8                    u8 [a3] = a1
199785: 95 aa 01                 a3 = a3 + 0x1
199788: ac 9a fb                 jump @13698 if a3 <u a2
      :                          @13699
199791: 32 00                    ret
      :                          @13700 [@dyn 1557]
199793: 82 77                    a0 = u64 [a0]
199795: 01                       fallthrough
      :                          @13701
199796: 28                       jump @13701
      :                          @13702
199797: 00                       trap
      :                          @13703 [@dyn 1558]
199798: 82 77                    a0 = u64 [a0]
199800: 64 89                    a2 = a1
199802: 33 08 01                 a1 = 0x1
199805: 01                       fallthrough
      :                          @13704
199806: 95 11 a0                 sp = sp + 0xffffffffffffffa0
199809: 7b 10 58                 u64 [sp + 0x58] = ra
199812: 7b 15 50                 u64 [sp + 0x50] = s0
199815: 7b 16 48                 u64 [sp + 0x48] = s1
199818: 7b 19 08                 u64 [sp + 0x8] = a2
199821: 7b 18                    u64 [sp] = a1
199823: 98 7a 04                 a3 = a0 >> 0x4
199826: 33 09 27                 a2 = 0x27
199829: 53 2a 71 02 81 00        jump @13707 if a3 <u 625
      :                          @13705
199835: 33 09 27                 a2 = 0x27
199838: 95 1b 46                 a4 = sp + 0x46
199841: 3a 08 f8 11 03           a1 = u64 [0x311f8]
199846: 7b 18 18                 u64 [sp + 0x18] = a1
199849: 49 11 10 f0 d8 00        u64 [sp + 16] = 0xd8f0
199855: 33 03 7b 14              t1 = 0x147b
199859: 33 05 4e 30 01           s0 = 0x1304e
199864: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
199870: 01                       fallthrough
      :                          @13706
199871: 64 74                    t2 = a0
199873: 82 17 18                 a0 = u64 [sp + 0x18]
199876: d6 74 07                 a0 = t2 mulhu a0
199879: 98 77 0b                 a0 = a0 >> 0xb
199882: 82 18 10                 a1 = u64 [sp + 0x10]
199885: c0 87 02                 i32 t0 = a0 * a1
199888: c8 42 0a                 a3 = t0 + t2
199891: 97 a2 30                 t0 = a3 << 0x30
199894: 98 28 32                 a1 = t0 >> 0x32
199897: ca 38 08                 a1 = a1 * t1
199900: 98 8c 11                 a5 = a1 >> 0x11
199903: 98 88 10                 a1 = a1 >> 0x10
199906: 84 88 fe 07              a1 = a1 & 0x7fe
199910: 96 cc 9c                 a5 = a5 * 0xffffffffffffff9c
199913: c8 ca 0a                 a3 = a3 + a5
199916: 97 aa 31                 a3 = a3 << 0x31
199919: 98 aa 30                 a3 = a3 >> 0x30
199922: c8 58 08                 a1 = a1 + s0
199925: 7c 8c                    a5 = u8 [a1]
199927: 7c 88 01                 a1 = u8 [a1 + 0x1]
199930: c8 5a 0a                 a3 = a3 + s0
199933: 7c a6 01                 s1 = u8 [a3 + 0x1]
199936: 7c aa                    a3 = u8 [a3]
199938: 78 b8 ff                 u8 [a4 + 0xffffffffffffffff] = a1
199941: 78 bc fe                 u8 [a4 + 0xfffffffffffffffe] = a5
199944: 78 b6 01                 u8 [a4 + 0x1] = s1
199947: 78 ba                    u8 [a4] = a3
199949: 95 99 fc                 a2 = a2 + 0xfffffffffffffffc
199952: 95 bb fc                 a4 = a4 + 0xfffffffffffffffc
199955: ac 40 ac                 jump @13706 if ra <u t2
      :                          @13707
199958: 54 17 63 3b              jump @13709 if a0 <=u 99
      :                          @13708
199962: 97 78 30                 a1 = a0 << 0x30
199965: 98 88 32                 a1 = a1 >> 0x32
199968: 96 88 7b 14              a1 = a1 * 0x147b
199972: 98 88 11                 a1 = a1 >> 0x11
199975: 96 8a 9c                 a3 = a1 * 0xffffffffffffff9c
199978: c8 a7 07                 a0 = a0 + a3
199981: 97 77 31                 a0 = a0 << 0x31
199984: 98 77 30                 a0 = a0 >> 0x30
199987: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
199990: 33 0a 4e 30 01           a3 = 0x1304e
199995: c8 a7 07                 a0 = a0 + a3
199998: 7c 7a 01                 a3 = u8 [a0 + 0x1]
200001: 7c 77                    a0 = u8 [a0]
200003: 95 1b 21                 a4 = sp + 0x21
200006: c8 9b 0b                 a4 = a4 + a2
200009: 78 ba 01                 u8 [a4 + 0x1] = a3
200012: 78 b7                    u8 [a4] = a0
200014: 64 87                    a0 = a1
200016: 01                       fallthrough
      :                          @13709
200017: 55 17 0a 14              jump @13711 if a0 >=u 10
      :                          @13710
200021: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
200024: 95 18 21                 a1 = sp + 0x21
200027: c8 98 08                 a1 = a1 + a2
200030: 83 77 30                 i32 a0 = a0 + 0x30
200033: 78 87                    u8 [a1] = a0
200035: 28 21                    jump @13712
      :                          @13711
200037: 97 77 01                 a0 = a0 << 0x1
200040: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
200043: 33 08 4e 30 01           a1 = 0x1304e
200048: c8 87 07                 a0 = a0 + a1
200051: 7c 78 01                 a1 = u8 [a0 + 0x1]
200054: 7c 77                    a0 = u8 [a0]
200056: 95 1a 21                 a3 = sp + 0x21
200059: c8 9a 0a                 a3 = a3 + a2
200062: 78 a8 01                 u8 [a3 + 0x1] = a1
200065: 78 a7                    u8 [a3] = a0
200067: 01                       fallthrough
      :                          @13712
200068: 95 1b 21                 a4 = sp + 0x21
200071: c8 9b 0b                 a4 = a4 + a2
200074: 9a 9c 27                 a5 = 0x27 - a2
200077: 33 09 f0 2f 01           a2 = 0x12ff0
200082: 82 17 08                 a0 = u64 [sp + 0x8]
200085: 82 18                    a1 = u64 [sp]
200087: 33 0a                    a3 = 0
200089: 50 20 2e 0c 13           ra = 3118, jump @13714
      :                          @13713 [@dyn 1559]
200094: 82 10 58                 ra = u64 [sp + 0x58]
200097: 82 15 50                 s0 = u64 [sp + 0x50]
200100: 82 16 48                 s1 = u64 [sp + 0x48]
200103: 95 11 60                 sp = sp + 0x60
200106: 32 00                    ret
      :                          @13714
200108: 95 11 98                 sp = sp + 0xffffffffffffff98
200111: 7b 10 60                 u64 [sp + 0x60] = ra
200114: 7b 15 58                 u64 [sp + 0x58] = s0
200117: 7b 16 50                 u64 [sp + 0x50] = s1
200120: 7b 1b 18                 u64 [sp + 0x18] = a4
200123: 51 08 4f                 jump @13721 if a1 == 0
      :                          @13715
200126: 80 76 34                 s1 = u32 [a0 + 0x34]
200129: 84 68 01                 a1 = s1 & 0x1
200132: 33 0b 2b                 a4 = 0x2b
200135: 33 05 00 00 11           s0 = 0x110000
200140: db 8b 05                 s0 = a4 if a1 != 0
200143: 7b 15 28                 u64 [sp + 0x28] = s0
200146: c8 c8 02                 t0 = a1 + a5
200149: 84 68 04                 a1 = s1 & 0x4
200152: 51 08 42                 jump @13722 if a1 == 0
      :                          @13716
200155: 7b 19 30                 u64 [sp + 0x30] = a2
200158: 33 08                    a1 = 0
200160: 51 0a 1a                 jump @13719 if a3 == 0
      :                          @13717
200163: 64 a5                    s0 = a3
200165: 01                       fallthrough
      :                          @13718
200166: 7d 9b                    a4 = i8 [a2]
200168: 89 bb c0                 a4 = a4 <s 0xffffffffffffffc0
200171: 85 bb 01                 a4 = a4 ^ 0x1
200174: c8 b8 08                 a1 = a1 + a4
200177: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
200180: 95 99 01                 a2 = a2 + 0x1
200183: 52 05 ef                 jump @13718 if s0 != 0
      :                          @13719
200186: c8 82 02                 t0 = t0 + a1
200189: 7b 1a 38                 u64 [sp + 0x38] = a3
200192: 82 78                    a1 = u64 [a0]
200194: 7b 1c 20                 u64 [sp + 0x20] = a5
200197: 52 08 23                 jump @13723 if a1 != 0
      :                          @13720
200200: 28 41                    jump @13728
      :                          @13721
200202: 81 76 34                 s1 = i32 [a0 + 0x34]
200205: 95 c2 01                 t0 = a5 + 0x1
200208: 49 11 28 2d              u64 [sp + 40] = 0x2d
200212: 84 68 04                 a1 = s1 & 0x4
200215: 52 08 c4                 jump @13716 if a1 != 0
      :                          @13722
200218: 49 11 30                 u64 [sp + 48] = 0
200221: 7b 1a 38                 u64 [sp + 0x38] = a3
200224: 82 78                    a1 = u64 [a0]
200226: 7b 1c 20                 u64 [sp + 0x20] = a5
200229: 51 08 24                 jump @13728 if a1 == 0
      :                          @13723
200232: 82 75 08                 s0 = u64 [a0 + 0x8]
200235: ae 52 1e                 jump @13728 if t0 >=u s0
      :                          @13724
200238: 84 66 08                 s1 = s1 & 0x8
200241: 52 06 51                 jump @13731 if s1 != 0
      :                          @13725
200244: 7c 79 38                 a2 = u8 [a0 + 0x38]
200247: c9 25 0a                 a3 = s0 - t0
200250: 5a 19 01 a4 00           jump @13738 if a2 >s 1
      :                          @13726
200255: 52 09 b1 00              jump @13740 if a2 != 0
      :                          @13727
200259: 7b 1a 10                 u64 [sp + 0x10] = a3
200262: 28 b0 00                 jump @13741
      :                          @13728
200265: 82 75 20                 s0 = u64 [a0 + 0x20]
200268: 82 76 28                 s1 = u64 [a0 + 0x28]
200271: 64 57                    a0 = s0
200273: 64 68                    a1 = s1
200275: 82 19 28                 a2 = u64 [sp + 0x28]
200278: 82 1a 30                 a3 = u64 [sp + 0x30]
200281: 82 1b 38                 a4 = u64 [sp + 0x38]
200284: 50 20 30 0c 76 01        ra = 3120, jump @13761
      :                          @13729 [@dyn 1560]
200290: 33 08 01                 a1 = 0x1
200293: 52 07 bf 00              jump @13746 if a0 != 0
      :                          @13730
200297: 82 6c 18                 a5 = u64 [s1 + 0x18]
200300: 64 57                    a0 = s0
200302: 82 18 18                 a1 = u64 [sp + 0x18]
200305: 82 19 20                 a2 = u64 [sp + 0x20]
200308: 82 10 60                 ra = u64 [sp + 0x60]
200311: 82 15 58                 s0 = u64 [sp + 0x58]
200314: 82 16 50                 s1 = u64 [sp + 0x50]
200317: 95 11 68                 sp = sp + 0x68
200320: 32 0c                    jump [a5]
      :                          @13731
200322: 7b 12 40                 u64 [sp + 0x40] = t0
200325: 81 78 30                 a1 = i32 [a0 + 0x30]
200328: 7b 18 08                 u64 [sp + 0x8] = a1
200331: 7c 79 38                 a2 = u8 [a0 + 0x38]
200334: 7b 19                    u64 [sp] = a2
200336: 82 79 20                 a2 = u64 [a0 + 0x20]
200339: 82 76 28                 s1 = u64 [a0 + 0x28]
200342: 48 17 30 30              u32 [a0 + 48] = 0x30
200346: 7b 17 10                 u64 [sp + 0x10] = a0
200349: 46 17 38 01              u8 [a0 + 56] = 0x1
200353: 7b 19 48                 u64 [sp + 0x48] = a2
200356: 64 97                    a0 = a2
200358: 64 68                    a1 = s1
200360: 82 19 28                 a2 = u64 [sp + 0x28]
200363: 82 1a 30                 a3 = u64 [sp + 0x30]
200366: 82 1b 38                 a4 = u64 [sp + 0x38]
200369: 50 20 32 0c 21 01        ra = 3122, jump @13761
      :                          @13732 [@dyn 1561]
200375: 52 07 69                 jump @13745 if a0 != 0
      :                          @13733
200378: 82 17 40                 a0 = u64 [sp + 0x40]
200381: c9 75 05                 s0 = s0 - a0
200384: 95 55 01                 s0 = s0 + 0x1
200387: 01                       fallthrough
      :                          @13734
200388: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
200391: 51 05 cb 00              jump @13756 if s0 == 0
      :                          @13735
200395: 82 69 20                 a2 = u64 [s1 + 0x20]
200398: 33 08 30                 a1 = 0x30
200401: 82 17 48                 a0 = u64 [sp + 0x48]
200404: b4 90 02 34 0c           ra = 3124, jump [a2]
      :                          @13736 [@dyn 1562]
200409: 51 07 eb                 jump @13734 if a0 == 0
      :                          @13737
200412: 28 44                    jump @13745
      :                          @13738
200414: 52 19 02 12              jump @13740 if a2 != 2
      :                          @13739
200418: 98 a9 01                 a2 = a3 >> 0x1
200421: 95 a8 01                 a1 = a3 + 0x1
200424: 98 88 01                 a1 = a1 >> 0x1
200427: 7b 18 10                 u64 [sp + 0x10] = a1
200430: 28 08                    jump @13741
      :                          @13740
200432: 64 a9                    a2 = a3
200434: 49 11 10                 u64 [sp + 16] = 0
200437: 01                       fallthrough
      :                          @13741
200438: 82 78 20                 a1 = u64 [a0 + 0x20]
200441: 7b 18 48                 u64 [sp + 0x48] = a1
200444: 82 76 28                 s1 = u64 [a0 + 0x28]
200447: 81 77 30                 a0 = i32 [a0 + 0x30]
200450: 7b 17 40                 u64 [sp + 0x40] = a0
200453: 95 95 01                 s0 = a2 + 0x1
200456: 01                       fallthrough
      :                          @13742
200457: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
200460: 51 05 28                 jump @13747 if s0 == 0
      :                          @13743
200463: 82 69 20                 a2 = u64 [s1 + 0x20]
200466: 82 17 48                 a0 = u64 [sp + 0x48]
200469: 82 18 40                 a1 = u64 [sp + 0x40]
200472: b4 90 02 36 0c           ra = 3126, jump [a2]
      :                          @13744 [@dyn 1563]
200477: 51 07 ec                 jump @13742 if a0 == 0
      :                          @13745
200480: 33 08 01                 a1 = 0x1
200483: 01                       fallthrough
      :                          @13746
200484: 64 87                    a0 = a1
200486: 82 10 60                 ra = u64 [sp + 0x60]
200489: 82 15 58                 s0 = u64 [sp + 0x58]
200492: 82 16 50                 s1 = u64 [sp + 0x50]
200495: 95 11 68                 sp = sp + 0x68
200498: 32 00                    ret
      :                          @13747
200500: 82 15 48                 s0 = u64 [sp + 0x48]
200503: 64 57                    a0 = s0
200505: 64 68                    a1 = s1
200507: 82 19 28                 a2 = u64 [sp + 0x28]
200510: 82 1a 30                 a3 = u64 [sp + 0x30]
200513: 82 1b 38                 a4 = u64 [sp + 0x38]
200516: 50 20 38 0c 8e 00        ra = 3128, jump @13761
      :                          @13748 [@dyn 1564]
200522: 33 08 01                 a1 = 0x1
200525: 52 07 d7                 jump @13746 if a0 != 0
      :                          @13749
200528: 82 6a 18                 a3 = u64 [s1 + 0x18]
200531: 64 57                    a0 = s0
200533: 82 18 18                 a1 = u64 [sp + 0x18]
200536: 82 19 20                 a2 = u64 [sp + 0x20]
200539: b4 a0 02 3a 0c           ra = 3130, jump [a3]
      :                          @13750 [@dyn 1565]
200544: 33 08 01                 a1 = 0x1
200547: 52 07 c1                 jump @13746 if a0 != 0
      :                          @13751
200550: 82 17 10                 a0 = u64 [sp + 0x10]
200553: 9a 77                    a0 = -a0
200555: 7b 17 38                 u64 [sp + 0x38] = a0
200558: 33 05 ff                 s0 = 0xffffffffffffffff
200561: 01                       fallthrough
      :                          @13752
200562: 82 17 38                 a0 = u64 [sp + 0x38]
200565: c8 57 07                 a0 = a0 + s0
200568: 51 17 ff 45              jump @13759 if a0 == 4294967295
      :                          @13753
200572: 82 69 20                 a2 = u64 [s1 + 0x20]
200575: 82 17 48                 a0 = u64 [sp + 0x48]
200578: 82 18 40                 a1 = u64 [sp + 0x40]
200581: b4 90 02 3c 0c           ra = 3132, jump [a2]
      :                          @13754 [@dyn 1566]
200586: 95 55 01                 s0 = s0 + 0x1
200589: 51 07 e5                 jump @13752 if a0 == 0
      :                          @13755
200592: 28 39                    jump @13760
      :                          @13756
200594: 82 6a 18                 a3 = u64 [s1 + 0x18]
200597: 82 17 48                 a0 = u64 [sp + 0x48]
200600: 82 18 18                 a1 = u64 [sp + 0x18]
200603: 82 19 20                 a2 = u64 [sp + 0x20]
200606: b4 a0 02 3e 0c           ra = 3134, jump [a3]
      :                          @13757 [@dyn 1567]
200611: 33 08 01                 a1 = 0x1
200614: 52 07 7e ff              jump @13746 if a0 != 0
      :                          @13758
200618: 33 08                    a1 = 0
200620: 82 17 10                 a0 = u64 [sp + 0x10]
200623: 82 19 08                 a2 = u64 [sp + 0x8]
200626: 7a 79 30                 u32 [a0 + 0x30] = a2
200629: 82 19                    a2 = u64 [sp]
200631: 78 79 38                 u8 [a0 + 0x38] = a2
200634: 28 6a ff                 jump @13746
      :                          @13759
200637: 82 15 10                 s0 = u64 [sp + 0x10]
200640: 82 17 10                 a0 = u64 [sp + 0x10]
200643: d8 75 08                 a1 = s0 <u a0
200646: 28 5e ff                 jump @13746
      :                          @13760
200649: 82 17 10                 a0 = u64 [sp + 0x10]
200652: d8 75 08                 a1 = s0 <u a0
200655: 28 55 ff                 jump @13746
      :                          @13761
200658: 95 11 d8                 sp = sp + 0xffffffffffffffd8
200661: 7b 10 20                 u64 [sp + 0x20] = ra
200664: 7b 15 18                 u64 [sp + 0x18] = s0
200667: 7b 16 10                 u64 [sp + 0x10] = s1
200670: 83 9c                    i32 a5 = a2 + 0
200672: 33 02 00 00 11           t0 = 0x110000
200677: 64 a6                    s1 = a3
200679: 64 85                    s0 = a1
200681: 64 7a                    a3 = a0
200683: aa 2c 21                 jump @13764 if a5 == t0
      :                          @13762
200686: 82 5c 20                 a5 = u64 [s0 + 0x20]
200689: 64 a7                    a0 = a3
200691: 64 98                    a1 = a2
200693: 7b 1b 08                 u64 [sp + 0x8] = a4
200696: 7b 1a                    u64 [sp] = a3
200698: b4 c0 02 40 0c           ra = 3136, jump [a5]
      :                          @13763 [@dyn 1568]
200703: 82 1a                    a3 = u64 [sp]
200705: 82 1b 08                 a4 = u64 [sp + 0x8]
200708: 64 78                    a1 = a0
200710: 33 07 01                 a0 = 0x1
200713: 52 08 20                 jump @13767 if a1 != 0
      :                          @13764
200716: 51 06 1a                 jump @13766 if s1 == 0
      :                          @13765
200719: 82 5c 18                 a5 = u64 [s0 + 0x18]
200722: 64 a7                    a0 = a3
200724: 64 68                    a1 = s1
200726: 64 b9                    a2 = a4
200728: 82 10 20                 ra = u64 [sp + 0x20]
200731: 82 15 18                 s0 = u64 [sp + 0x18]
200734: 82 16 10                 s1 = u64 [sp + 0x10]
200737: 95 11 28                 sp = sp + 0x28
200740: 32 0c                    jump [a5]
      :                          @13766
200742: 33 07                    a0 = 0
200744: 01                       fallthrough
      :                          @13767
200745: 82 10 20                 ra = u64 [sp + 0x20]
200748: 82 15 18                 s0 = u64 [sp + 0x18]
200751: 82 16 10                 s1 = u64 [sp + 0x10]
200754: 95 11 28                 sp = sp + 0x28
200757: 32 00                    ret
      :                          @13768
200759: 95 11 b8                 sp = sp + 0xffffffffffffffb8
200762: 7b 10 40                 u64 [sp + 0x40] = ra
200765: 7b 15 38                 u64 [sp + 0x38] = s0
200768: 7b 16 30                 u64 [sp + 0x30] = s1
200771: 82 74                    t2 = u64 [a0]
200773: 82 7a 10                 a3 = u64 [a0 + 0x10]
200776: d4 a4 0b                 a4 = t2 | a3
200779: 64 93                    t1 = a2
200781: 64 85                    s0 = a1
200783: 51 0b aa 03              jump @13840 if a4 == 0
      :                          @13769
200787: 7b 17 08                 u64 [sp + 0x8] = a0
200790: 51 0a f4 00              jump @13788 if a3 == 0
      :                          @13770
200794: 82 7c 18                 a5 = u64 [a0 + 0x18]
200797: 33 0a                    a3 = 0
200799: 7b 13 18                 u64 [sp + 0x18] = t1
200802: c8 53 03                 t1 = t1 + s0
200805: 95 cc 01                 a5 = a5 + 0x1
200808: 33 00 00 00 11           ra = 0x110000
200813: 33 07 df 00              a0 = 0xdf
200817: 7b 15 10                 u64 [sp + 0x10] = s0
200820: 64 59                    a2 = s0
200822: 28 12                    jump @13773
      :                          @13771
200824: 95 98 01                 a1 = a2 + 0x1
200827: 01                       fallthrough
      :                          @13772
200828: c9 9a 0a                 a3 = a3 - a2
200831: c8 8a 0a                 a3 = a3 + a1
200834: 64 89                    a2 = a1
200836: aa 05 bc 00              jump @13787 if s0 == ra
      :                          @13773
200840: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
200843: 51 0c 68                 jump @13782 if a5 == 0
      :                          @13774
200846: aa 39 b2 00              jump @13787 if a2 == t1
      :                          @13775
200850: 7d 98                    a1 = i8 [a2]
200852: 84 85 ff 00              s0 = a1 & 0xff
200856: 59 08 e0                 jump @13771 if a1 >=s 0
      :                          @13776
200859: 7c 98 01                 a1 = u8 [a2 + 0x1]
200862: 84 56 1f                 s1 = s0 & 0x1f
200865: 84 8b 3f                 a4 = a1 & 0x3f
200868: ae 57 35                 jump @13780 if a0 >=u s0
      :                          @13777
200871: 7c 98 02                 a1 = u8 [a2 + 0x2]
200874: 97 bb 06                 a4 = a4 << 0x6
200877: 84 88 3f                 a1 = a1 & 0x3f
200880: d4 8b 02                 t0 = a4 | a1
200883: 53 25 f0 00 31           jump @13781 if s0 <u 240
      :                          @13778
200888: 7c 98 03                 a1 = u8 [a2 + 0x3]
200891: 97 66 3d                 s1 = s1 << 0x3d
200894: 98 66 2b                 s1 = s1 >> 0x2b
200897: 97 22 06                 t0 = t0 << 0x6
200900: 84 88 3f                 a1 = a1 & 0x3f
200903: d4 82 05                 s0 = t0 | a1
200906: d4 65 05                 s0 = s0 | s1
200909: aa 05 73                 jump @13787 if s0 == ra
      :                          @13779
200912: 95 98 04                 a1 = a2 + 0x4
200915: 33 07 df 00              a0 = 0xdf
200919: 28 a5                    jump @13772
      :                          @13780
200921: 95 98 02                 a1 = a2 + 0x2
200924: 97 65 06                 s0 = s1 << 0x6
200927: d4 b5 05                 s0 = s0 | a4
200930: 28 9a                    jump @13772
      :                          @13781
200932: 95 98 03                 a1 = a2 + 0x3
200935: 97 66 0c                 s1 = s1 << 0xc
200938: d4 62 05                 s0 = t0 | s1
200941: 33 07 df 00              a0 = 0xdf
200945: 28 8b                    jump @13772
      :                          @13782
200947: aa 39 4d                 jump @13787 if a2 == t1
      :                          @13783
200950: 7d 98                    a1 = i8 [a2]
200952: 59 08 b6 02              jump @13830 if a1 >=s 0
      :                          @13784
200956: 84 88 ff 00              a1 = a1 & 0xff
200960: 33 0b e0 00              a4 = 0xe0
200964: ac b8 aa 02              jump @13830 if a1 <u a4
      :                          @13785
200968: 33 0b f0 00              a4 = 0xf0
200972: ac b8 a2 02              jump @13830 if a1 <u a4
      :                          @13786
200976: 7c 9b 01                 a4 = u8 [a2 + 0x1]
200979: 7c 9c 02                 a5 = u8 [a2 + 0x2]
200982: 84 bb 3f                 a4 = a4 & 0x3f
200985: 84 cc 3f                 a5 = a5 & 0x3f
200988: 7c 99 03                 a2 = u8 [a2 + 0x3]
200991: 97 88 3d                 a1 = a1 << 0x3d
200994: 98 88 2b                 a1 = a1 >> 0x2b
200997: 97 bb 0c                 a4 = a4 << 0xc
201000: 97 cc 06                 a5 = a5 << 0x6
201003: d4 cb 0b                 a4 = a4 | a5
201006: 84 99 3f                 a2 = a2 & 0x3f
201009: d4 b9 09                 a2 = a2 | a4
201012: d4 98 08                 a1 = a1 | a2
201015: 33 09 00 00 11           a2 = 0x110000
201020: ab 98 72 02              jump @13830 if a1 != a2
      :                          @13787
201024: 82 13 18                 t1 = u64 [sp + 0x18]
201027: 82 15 10                 s0 = u64 [sp + 0x10]
201030: 82 17 08                 a0 = u64 [sp + 0x8]
201033: 01                       fallthrough
      :                          @13788
201034: 51 04 af 02              jump @13840 if t2 == 0
      :                          @13789
201038: 82 7c 08                 a5 = u64 [a0 + 0x8]
201041: 7b 13 18                 u64 [sp + 0x18] = t1
201044: 7b 15 10                 u64 [sp + 0x10] = s0
201047: 55 13 20 29              jump @13795 if t1 >=u 32
      :                          @13790
201051: 33 09                    a2 = 0
201053: 51 03 1c                 jump @13793 if t1 == 0
      :                          @13791
201056: 64 58                    a1 = s0
201058: 64 3a                    a3 = t1
201060: 01                       fallthrough
      :                          @13792
201061: 7d 8b                    a4 = i8 [a1]
201063: 89 bb c0                 a4 = a4 <s 0xffffffffffffffc0
201066: 85 bb 01                 a4 = a4 ^ 0x1
201069: c8 b9 09                 a2 = a2 + a4
201072: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
201075: 95 88 01                 a1 = a1 + 0x1
201078: 52 0a ef                 jump @13792 if a3 != 0
      :                          @13793
201081: ac c9 95 01              jump @13812 if a2 <u a5
      :                          @13794
201085: 28 7c 02                 jump @13840
      :                          @13795
201088: 7b 1c                    u64 [sp] = a5
201090: 95 58 07                 a1 = s0 + 0x7
201093: 64 5c                    a5 = s0
201095: 84 85 f8                 s0 = a1 & 0xfffffffffffffff8
201098: c9 5c 0b                 a4 = a5 - s0
201101: c8 b3 02                 t0 = t1 + a4
201104: 84 2a 07                 a3 = t0 & 0x7
201107: 33 08                    a1 = 0
201109: aa c5 17                 jump @13797 if s0 == a5
      :                          @13796
201112: 7d c6                    s1 = i8 [a5]
201114: 89 66 c0                 s1 = s1 <s 0xffffffffffffffc0
201117: 85 69 01                 a2 = s1 ^ 0x1
201120: c8 98 08                 a1 = a1 + a2
201123: 95 bb 01                 a4 = a4 + 0x1
201126: 95 cc 01                 a5 = a5 + 0x1
201129: 52 0b ef                 jump @13796 if a4 != 0
      :                          @13797
201132: 33 0b                    a4 = 0
201134: 51 0a 1e                 jump @13800 if a3 == 0
      :                          @13798
201137: 84 2c f8                 a5 = t0 & 0xfffffffffffffff8
201140: c8 5c 0c                 a5 = a5 + s0
201143: 01                       fallthrough
      :                          @13799
201144: 7d c7                    a0 = i8 [a5]
201146: 89 77 c0                 a0 = a0 <s 0xffffffffffffffc0
201149: 85 77 01                 a0 = a0 ^ 0x1
201152: c8 7b 0b                 a4 = a4 + a0
201155: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
201158: 95 cc 01                 a5 = a5 + 0x1
201161: 52 0a ef                 jump @13799 if a3 != 0
      :                          @13800
201164: 98 20 03                 ra = t0 >> 0x3
201167: 14 0a 01 01 01 01 01 01 01 01 a3 = 0x101010101010101
201177: 14 07 ff 00 ff 00 ff 00 ff 00 a0 = 0xff00ff00ff00ff
201187: 7b 17 28                 u64 [sp + 0x28] = a0
201190: 14 04 00 00 00 00 01 00 01 00 t2 = 0x1000100000000
201200: 14 07 01 00 01 00 01 00 01 00 a0 = 0x1000100010001
201210: 7b 17 20                 u64 [sp + 0x20] = a0
201213: c8 8b 09                 a2 = a4 + a1
201216: 28 2d                    jump @13802
      :                          @13801
201218: 97 45 03                 s0 = t2 << 0x3
201221: c8 35 05                 s0 = s0 + t1
201224: c9 40 00                 ra = ra - t2
201227: 84 46 03                 s1 = t2 & 0x3
201230: 82 1b 28                 a4 = u64 [sp + 0x28]
201233: d2 b2 07                 a0 = t0 & a4
201236: 98 28 08                 a1 = t0 >> 0x8
201239: d2 b8 08                 a1 = a1 & a4
201242: c8 87 07                 a0 = a0 + a1
201245: 82 18 20                 a1 = u64 [sp + 0x20]
201248: ca 87 07                 a0 = a0 * a1
201251: 98 77 30                 a0 = a0 >> 0x30
201254: c8 79 09                 a2 = a2 + a0
201257: 52 06 8e 00              jump @13809 if s1 != 0
      :                          @13802
201261: 51 00 79                 jump @13807 if ra == 0
      :                          @13803
201264: 64 53                    t1 = s0
201266: 33 07 c0 00              a0 = 0xc0
201270: e6 70 04                 t2 = minu(ra, a0)
201273: 33 02                    t0 = 0
201275: 98 48 02                 a1 = t2 >> 0x2
201278: 51 08 c4                 jump @13801 if a1 == 0
      :                          @13804
201281: 97 88 05                 a1 = a1 << 0x5
201284: c8 38 08                 a1 = a1 + t1
201287: 64 36                    s1 = t1
201289: 01                       fallthrough
      :                          @13805
201290: 82 67                    a0 = u64 [s1]
201292: 85 7c ff                 a5 = a0 ^ 0xffffffffffffffff
201295: 98 cc 07                 a5 = a5 >> 0x7
201298: 98 77 06                 a0 = a0 >> 0x6
201301: 82 6b 08                 a4 = u64 [s1 + 0x8]
201304: d4 c7 07                 a0 = a0 | a5
201307: d2 a7 07                 a0 = a0 & a3
201310: c8 27 07                 a0 = a0 + t0
201313: 85 bc ff                 a5 = a4 ^ 0xffffffffffffffff
201316: 98 cc 07                 a5 = a5 >> 0x7
201319: 82 65 10                 s0 = u64 [s1 + 0x10]
201322: 98 bb 06                 a4 = a4 >> 0x6
201325: d4 cb 0b                 a4 = a4 | a5
201328: d2 ab 0b                 a4 = a4 & a3
201331: 85 5c ff                 a5 = s0 ^ 0xffffffffffffffff
201334: 98 cc 07                 a5 = a5 >> 0x7
201337: 98 55 06                 s0 = s0 >> 0x6
201340: d4 5c 0c                 a5 = a5 | s0
201343: 82 65 18                 s0 = u64 [s1 + 0x18]
201346: d2 ac 0c                 a5 = a5 & a3
201349: c8 cb 0b                 a4 = a4 + a5
201352: c8 b7 07                 a0 = a0 + a4
201355: 85 5b ff                 a4 = s0 ^ 0xffffffffffffffff
201358: 98 bb 07                 a4 = a4 >> 0x7
201361: 98 55 06                 s0 = s0 >> 0x6
201364: d4 5b 0b                 a4 = a4 | s0
201367: d2 ab 0b                 a4 = a4 & a3
201370: 95 66 20                 s1 = s1 + 0x20
201373: c8 7b 02                 t0 = a4 + a0
201376: ab 86 aa                 jump @13805 if s1 != a1
      :                          @13806
201379: 28 5f ff                 jump @13801
      :                          @13807
201382: 82 13 18                 t1 = u64 [sp + 0x18]
201385: 82 15 10                 s0 = u64 [sp + 0x10]
201388: 82 17 08                 a0 = u64 [sp + 0x8]
201391: 82 1c                    a5 = u64 [sp]
201393: ac c9 5d                 jump @13812 if a2 <u a5
      :                          @13808
201396: 28 45 01                 jump @13840
      :                          @13809
201399: 33 08                    a1 = 0
201401: 84 47 fc 00              a0 = t2 & 0xfc
201405: 97 77 03                 a0 = a0 << 0x3
201408: c8 73 0b                 a4 = t1 + a0
201411: 97 66 03                 s1 = s1 << 0x3
201414: 82 13 18                 t1 = u64 [sp + 0x18]
201417: 82 15 10                 s0 = u64 [sp + 0x10]
201420: 01                       fallthrough
      :                          @13810
201421: 82 b7                    a0 = u64 [a4]
201423: 95 bb 08                 a4 = a4 + 0x8
201426: 85 7c ff                 a5 = a0 ^ 0xffffffffffffffff
201429: 98 cc 07                 a5 = a5 >> 0x7
201432: 98 77 06                 a0 = a0 >> 0x6
201435: d4 c7 07                 a0 = a0 | a5
201438: d2 a7 07                 a0 = a0 & a3
201441: 95 66 f8                 s1 = s1 + 0xfffffffffffffff8
201444: c8 78 08                 a1 = a1 + a0
201447: 52 06 e6                 jump @13810 if s1 != 0
      :                          @13811
201450: 82 1a 28                 a3 = u64 [sp + 0x28]
201453: d2 a8 07                 a0 = a1 & a3
201456: 98 88 08                 a1 = a1 >> 0x8
201459: d2 a8 08                 a1 = a1 & a3
201462: c8 87 07                 a0 = a0 + a1
201465: 82 18 20                 a1 = u64 [sp + 0x20]
201468: ca 87 07                 a0 = a0 * a1
201471: 98 77 30                 a0 = a0 >> 0x30
201474: c8 79 09                 a2 = a2 + a0
201477: 82 17 08                 a0 = u64 [sp + 0x8]
201480: 82 1c                    a5 = u64 [sp]
201482: ae c9 ef 00              jump @13840 if a2 >=u a5
      :                          @13812
201486: 7c 7a 38                 a3 = u8 [a0 + 0x38]
201489: 33 08                    a1 = 0
201491: 33 0b 01                 a4 = 0x1
201494: c9 9c 0c                 a5 = a5 - a2
201497: ad ab 0c                 jump @13815 if a4 <s a3
      :                          @13813
201500: 51 0a 1a                 jump @13817 if a3 == 0
      :                          @13814
201503: 64 c8                    a1 = a5
201505: 49 01                    u64 [sp + 0] = 0
201507: 28 16                    jump @13818
      :                          @13815
201509: 52 1a 02 11              jump @13817 if a3 != 2
      :                          @13816
201513: 98 c8 01                 a1 = a5 >> 0x1
201516: 95 c9 01                 a2 = a5 + 0x1
201519: 98 99 01                 a2 = a2 >> 0x1
201522: 7b 19                    u64 [sp] = a2
201524: 28 05                    jump @13818
      :                          @13817
201526: 7b 1c                    u64 [sp] = a5
201528: 01                       fallthrough
      :                          @13818
201529: 82 79 20                 a2 = u64 [a0 + 0x20]
201532: 7b 19 28                 u64 [sp + 0x28] = a2
201535: 82 75 28                 s0 = u64 [a0 + 0x28]
201538: 81 77 30                 a0 = i32 [a0 + 0x30]
201541: 7b 17 20                 u64 [sp + 0x20] = a0
201544: 95 86 01                 s1 = a1 + 0x1
201547: 01                       fallthrough
      :                          @13819
201548: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
201551: 51 06 19                 jump @13823 if s1 == 0
      :                          @13820
201554: 82 59 20                 a2 = u64 [s0 + 0x20]
201557: 82 17 28                 a0 = u64 [sp + 0x28]
201560: 82 18 20                 a1 = u64 [sp + 0x20]
201563: b4 90 02 42 0c           ra = 3138, jump [a2]
      :                          @13821 [@dyn 1569]
201568: 51 07 ec                 jump @13819 if a0 == 0
      :                          @13822
201571: 33 07 01                 a0 = 0x1
201574: 28 72                    jump @13836
      :                          @13823
201576: 82 5a 18                 a3 = u64 [s0 + 0x18]
201579: 82 17 28                 a0 = u64 [sp + 0x28]
201582: 82 18 10                 a1 = u64 [sp + 0x10]
201585: 82 19 18                 a2 = u64 [sp + 0x18]
201588: b4 a0 02 44 0c           ra = 3140, jump [a3]
      :                          @13824 [@dyn 1570]
201593: 64 78                    a1 = a0
201595: 33 07 01                 a0 = 0x1
201598: 52 08 5a                 jump @13836 if a1 != 0
      :                          @13825
201601: 82 17                    a0 = u64 [sp]
201603: 9a 77                    a0 = -a0
201605: 7b 17 18                 u64 [sp + 0x18] = a0
201608: 33 06 ff                 s1 = 0xffffffffffffffff
201611: 01                       fallthrough
      :                          @13826
201612: 82 17 18                 a0 = u64 [sp + 0x18]
201615: c8 67 07                 a0 = a0 + s1
201618: 33 08 ff                 a1 = 0xffffffffffffffff
201621: aa 87 34                 jump @13834 if a0 == a1
      :                          @13827
201624: 82 59 20                 a2 = u64 [s0 + 0x20]
201627: 82 17 28                 a0 = u64 [sp + 0x28]
201630: 82 18 20                 a1 = u64 [sp + 0x20]
201633: b4 90 02 46 0c           ra = 3142, jump [a2]
      :                          @13828 [@dyn 1571]
201638: 95 66 01                 s1 = s1 + 0x1
201641: 51 07 e3                 jump @13826 if a0 == 0
      :                          @13829
201644: 28 26                    jump @13835
      :                          @13830
201646: 82 13 18                 t1 = u64 [sp + 0x18]
201649: 82 15 10                 s0 = u64 [sp + 0x10]
201652: 51 0a 35                 jump @13838 if a3 == 0
      :                          @13831
201655: ae 3a 2f                 jump @13837 if a3 >=u t1
      :                          @13832
201658: c8 a5 08                 a1 = s0 + a3
201661: 7d 88                    a1 = i8 [a1]
201663: 33 09 c0                 a2 = 0xffffffffffffffc0
201666: af 98 27                 jump @13838 if a1 >=s a2
      :                          @13833
201669: 33 08                    a1 = 0
201671: 28 25                    jump @13839
      :                          @13834
201673: 82 16                    s1 = u64 [sp]
201675: 82 17                    a0 = u64 [sp]
201677: d8 76 07                 a0 = s1 <u a0
201680: 28 08                    jump @13836
      :                          @13835
201682: 82 17                    a0 = u64 [sp]
201684: d8 76 07                 a0 = s1 <u a0
201687: 01                       fallthrough
      :                          @13836
201688: 82 10 40                 ra = u64 [sp + 0x40]
201691: 82 15 38                 s0 = u64 [sp + 0x38]
201694: 82 16 30                 s1 = u64 [sp + 0x30]
201697: 95 11 48                 sp = sp + 0x48
201700: 32 00                    ret
      :                          @13837
201702: ab 3a df                 jump @13833 if a3 != t1
      :                          @13838
201705: 64 58                    a1 = s0
201707: 01                       fallthrough
      :                          @13839
201708: 82 17 08                 a0 = u64 [sp + 0x8]
201711: db 8a 03                 t1 = a3 if a1 != 0
201714: db 88 05                 s0 = a1 if a1 != 0
201717: 52 04 59 fd              jump @13789 if t2 != 0
      :                          @13840
201721: 82 78 28                 a1 = u64 [a0 + 0x28]
201724: 82 77 20                 a0 = u64 [a0 + 0x20]
201727: 82 8c 18                 a5 = u64 [a1 + 0x18]
201730: 64 58                    a1 = s0
201732: 64 39                    a2 = t1
201734: 82 10 40                 ra = u64 [sp + 0x40]
201737: 82 15 38                 s0 = u64 [sp + 0x38]
201740: 82 16 30                 s1 = u64 [sp + 0x30]
201743: 95 11 48                 sp = sp + 0x48
201746: 32 0c                    jump [a5]
      :                          @13841
201748: 95 11 78 ff              sp = sp + 0xffffffffffffff78
201752: 7b 10 80 00              u64 [sp + 0x80] = ra
201756: 7b 15 78                 u64 [sp + 0x78] = s0
201759: 7b 16 70                 u64 [sp + 0x70] = s1
201762: 49 11 60 20              u64 [sp + 96] = 0x20
201766: 33 0a 03                 a3 = 0x3
201769: 78 1a 68                 u8 [sp + 0x68] = a3
201772: 82 96 20                 s1 = u64 [a2 + 0x20]
201775: 49 11 30                 u64 [sp + 48] = 0
201778: 49 11 40                 u64 [sp + 64] = 0
201781: 7b 17 50                 u64 [sp + 0x50] = a0
201784: 7b 18 58                 u64 [sp + 0x58] = a1
201787: 51 06 0a 01              jump @13863 if s1 == 0
      :                          @13842
201791: 82 97 28                 a0 = u64 [a2 + 0x28]
201794: 51 07 79 01              jump @13873 if a0 == 0
      :                          @13843
201798: 49 11 28                 u64 [sp + 40] = 0
201801: 82 95                    s0 = u64 [a2]
201803: 7b 19 08                 u64 [sp + 0x8] = a2
201806: 82 98 10                 a1 = u64 [a2 + 0x10]
201809: 7b 18 18                 u64 [sp + 0x18] = a1
201812: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
201815: 97 88 03                 a1 = a1 << 0x3
201818: 98 88 03                 a1 = a1 >> 0x3
201821: 95 88 01                 a1 = a1 + 0x1
201824: 7b 18                    u64 [sp] = a1
201826: 95 55 08                 s0 = s0 + 0x8
201829: 96 78 38                 a1 = a0 * 0x38
201832: 95 66 18                 s1 = s1 + 0x18
201835: 33 07 2a 0c              a0 = 0xc2a
201839: 7b 17 10                 u64 [sp + 0x10] = a0
201842: 01                       fallthrough
      :                          @13844
201843: 7b 18 20                 u64 [sp + 0x20] = a1
201846: 82 59                    a2 = u64 [s0]
201848: 51 09 18                 jump @13847 if a2 == 0
      :                          @13845
201851: 82 1a 58                 a3 = u64 [sp + 0x58]
201854: 82 17 50                 a0 = u64 [sp + 0x50]
201857: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
201860: 82 aa 18                 a3 = u64 [a3 + 0x18]
201863: b4 a0 02 48 0c           ra = 3144, jump [a3]
      :                          @13846 [@dyn 1572]
201868: 52 07 55 01              jump @13876 if a0 != 0
      :                          @13847
201872: 81 67 10                 a0 = i32 [s1 + 0x10]
201875: 7a 17 60                 u32 [sp + 0x60] = a0
201878: 7c 67 18                 a0 = u8 [s1 + 0x18]
201881: 78 17 68                 u8 [sp + 0x68] = a0
201884: 81 67 14                 a0 = i32 [s1 + 0x14]
201887: 7a 17 64                 u32 [sp + 0x64] = a0
201890: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
201893: 82 67                    a0 = u64 [s1]
201895: 51 08 26                 jump @13852 if a1 == 0
      :                          @13848
201898: 52 18 01 16              jump @13850 if a1 != 1
      :                          @13849
201902: 97 77 04                 a0 = a0 << 0x4
201905: 82 18 18                 a1 = u64 [sp + 0x18]
201908: c8 87 07                 a0 = a0 + a1
201911: 82 78 08                 a1 = u64 [a0 + 0x8]
201914: 82 19 10                 a2 = u64 [sp + 0x10]
201917: aa 98 07                 jump @13851 if a1 == a2
      :                          @13850
201920: 33 08                    a1 = 0
201922: 28 0f                    jump @13853
      :                          @13851
201924: 82 77                    a0 = u64 [a0]
201926: 82 77                    a0 = u64 [a0]
201928: 33 08 01                 a1 = 0x1
201931: 28 06                    jump @13853
      :                          @13852
201933: 33 08 01                 a1 = 0x1
201936: 01                       fallthrough
      :                          @13853
201937: 7b 18 30                 u64 [sp + 0x30] = a1
201940: 7b 17 38                 u64 [sp + 0x38] = a0
201943: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
201946: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
201949: 51 08 26                 jump @13858 if a1 == 0
      :                          @13854
201952: 52 18 01 16              jump @13856 if a1 != 1
      :                          @13855
201956: 97 77 04                 a0 = a0 << 0x4
201959: 82 18 18                 a1 = u64 [sp + 0x18]
201962: c8 87 07                 a0 = a0 + a1
201965: 82 78 08                 a1 = u64 [a0 + 0x8]
201968: 82 19 10                 a2 = u64 [sp + 0x10]
201971: aa 98 07                 jump @13857 if a1 == a2
      :                          @13856
201974: 33 08                    a1 = 0
201976: 28 0f                    jump @13859
      :                          @13857
201978: 82 77                    a0 = u64 [a0]
201980: 82 77                    a0 = u64 [a0]
201982: 33 08 01                 a1 = 0x1
201985: 28 06                    jump @13859
      :                          @13858
201987: 33 08 01                 a1 = 0x1
201990: 01                       fallthrough
      :                          @13859
201991: 7b 18 40                 u64 [sp + 0x40] = a1
201994: 7b 17 48                 u64 [sp + 0x48] = a0
201997: 82 67 08                 a0 = u64 [s1 + 0x8]
202000: 97 77 04                 a0 = a0 << 0x4
202003: 82 18 18                 a1 = u64 [sp + 0x18]
202006: c8 78 08                 a1 = a1 + a0
202009: 82 87                    a0 = u64 [a1]
202011: 82 89 08                 a2 = u64 [a1 + 0x8]
202014: 95 18 30                 a1 = sp + 0x30
202017: b4 90 02 4a 0c           ra = 3146, jump [a2]
      :                          @13860 [@dyn 1573]
202022: 52 07 bb 00              jump @13876 if a0 != 0
      :                          @13861
202026: 95 55 10                 s0 = s0 + 0x10
202029: 82 18 20                 a1 = u64 [sp + 0x20]
202032: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
202035: 95 66 38                 s1 = s1 + 0x38
202038: 82 17 28                 a0 = u64 [sp + 0x28]
202041: 95 77 01                 a0 = a0 + 0x1
202044: 7b 17 28                 u64 [sp + 0x28] = a0
202047: 52 08 34 ff              jump @13844 if a1 != 0
      :                          @13862
202051: 28 6b                    jump @13871
      :                          @13863
202053: 82 97 18                 a0 = u64 [a2 + 0x18]
202056: 51 07 73                 jump @13873 if a0 == 0
      :                          @13864
202059: 82 95 10                 s0 = u64 [a2 + 0x10]
202062: 33 0a                    a3 = 0
202064: 97 78 04                 a1 = a0 << 0x4
202067: c8 58 08                 a1 = a1 + s0
202070: 7b 18 20                 u64 [sp + 0x20] = a1
202073: 7b 19 08                 u64 [sp + 0x8] = a2
202076: 82 96                    s1 = u64 [a2]
202078: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
202081: 97 77 04                 a0 = a0 << 0x4
202084: 98 77 04                 a0 = a0 >> 0x4
202087: 95 77 01                 a0 = a0 + 0x1
202090: 7b 17                    u64 [sp] = a0
202092: 95 66 08                 s1 = s1 + 0x8
202095: 01                       fallthrough
      :                          @13865
202096: 7b 1a 28                 u64 [sp + 0x28] = a3
202099: 82 69                    a2 = u64 [s1]
202101: 51 09 17                 jump @13868 if a2 == 0
      :                          @13866
202104: 82 1a 58                 a3 = u64 [sp + 0x58]
202107: 82 17 50                 a0 = u64 [sp + 0x50]
202110: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
202113: 82 aa 18                 a3 = u64 [a3 + 0x18]
202116: b4 a0 02 4c 0c           ra = 3148, jump [a3]
      :                          @13867 [@dyn 1574]
202121: 52 07 58                 jump @13876 if a0 != 0
      :                          @13868
202124: 82 57                    a0 = u64 [s0]
202126: 82 59 08                 a2 = u64 [s0 + 0x8]
202129: 95 18 30                 a1 = sp + 0x30
202132: b4 90 02 4e 0c           ra = 3150, jump [a2]
      :                          @13869 [@dyn 1575]
202137: 52 07 48                 jump @13876 if a0 != 0
      :                          @13870
202140: 95 66 10                 s1 = s1 + 0x10
202143: 95 55 10                 s0 = s0 + 0x10
202146: 82 1a 28                 a3 = u64 [sp + 0x28]
202149: 95 aa 01                 a3 = a3 + 0x1
202152: 82 17 20                 a0 = u64 [sp + 0x20]
202155: ab 75 c5                 jump @13865 if s0 != a0
      :                          @13871
202158: 82 19 08                 a2 = u64 [sp + 0x8]
202161: 82 1a                    a3 = u64 [sp]
202163: 82 97 08                 a0 = u64 [a2 + 0x8]
202166: ac 7a 0d                 jump @13874 if a3 <u a0
      :                          @13872
202169: 28 2d                    jump @13877
      :                          @13873
202171: 33 0a                    a3 = 0
202173: 82 97 08                 a0 = u64 [a2 + 0x8]
202176: 54 07 26                 jump @13877 if a0 <=u 0
      :                          @13874
202179: 82 97                    a0 = u64 [a2]
202181: 97 a8 04                 a1 = a3 << 0x4
202184: c8 87 09                 a2 = a0 + a1
202187: 82 1a 58                 a3 = u64 [sp + 0x58]
202190: 82 17 50                 a0 = u64 [sp + 0x50]
202193: 82 98                    a1 = u64 [a2]
202195: 82 99 08                 a2 = u64 [a2 + 0x8]
202198: 82 aa 18                 a3 = u64 [a3 + 0x18]
202201: b4 a0 02 50 0c           ra = 3152, jump [a3]
      :                          @13875 [@dyn 1576]
202206: 51 07 08                 jump @13877 if a0 == 0
      :                          @13876
202209: 33 07 01                 a0 = 0x1
202212: 28 05                    jump @13878
      :                          @13877
202214: 33 07                    a0 = 0
202216: 01                       fallthrough
      :                          @13878
202217: 82 10 80 00              ra = u64 [sp + 0x80]
202221: 82 15 78                 s0 = u64 [sp + 0x78]
202224: 82 16 70                 s1 = u64 [sp + 0x70]
202227: 95 11 88 00              sp = sp + 0x88
202231: 32 00                    ret
      :                          @13879 [@dyn 1577]
202233: 32 00                    ret
      :                          @13880 [@dyn 1578]
202235: 95 11 80                 sp = sp + 0xffffffffffffff80
202238: 7b 10 78                 u64 [sp + 0x78] = ra
202241: 7b 15 70                 u64 [sp + 0x70] = s0
202244: 7b 16 68                 u64 [sp + 0x68] = s1
202247: 64 92                    t0 = a2
202249: 33 00                    ra = 0
202251: 33 0b                    a4 = 0
202253: 33 05                    s0 = 0
202255: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
202265: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
202271: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
202281: 82 79 10                 a2 = u64 [a0 + 0x10]
202284: 7b 19 48                 u64 [sp + 0x48] = a2
202287: 82 79                    a2 = u64 [a0]
202289: 7b 19 38                 u64 [sp + 0x38] = a2
202292: 82 77 08                 a0 = u64 [a0 + 0x8]
202295: 7b 17 30                 u64 [sp + 0x30] = a0
202298: 33 07 bc 04 01           a0 = 0x104bc
202303: 7b 17 08                 u64 [sp + 0x8] = a0
202306: 3a 07 00 12 03           a0 = u64 [0x31200]
202311: 7b 17 60                 u64 [sp + 0x60] = a0
202314: 7b 18 58                 u64 [sp + 0x58] = a1
202317: 95 88 08                 a1 = a1 + 0x8
202320: 7b 18                    u64 [sp] = a1
202322: 33 0c 0a                 a5 = 0xa
202325: 7b 12 20                 u64 [sp + 0x20] = t0
202328: 7b 13 18                 u64 [sp + 0x18] = t1
202331: 7b 14 10                 u64 [sp + 0x10] = t2
202334: 28 3b                    jump @13884
      :                          @13881
202336: 64 06                    s1 = ra
202338: c8 89 07                 a0 = a2 + a1
202341: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
202344: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
202347: 88 77 01                 a0 = a0 <u 0x1
202350: 01                       fallthrough
      :                          @13882
202351: 82 1a 48                 a3 = u64 [sp + 0x48]
202354: 78 a7                    u8 [a3] = a0
202356: 82 17 30                 a0 = u64 [sp + 0x30]
202359: 82 7a 18                 a3 = u64 [a0 + 0x18]
202362: 82 17 38                 a0 = u64 [sp + 0x38]
202365: b4 a0 02 56 0c           ra = 3158, jump [a3]
      :                          @13883 [@dyn 1579]
202370: 64 5b                    a4 = s0
202372: 82 12 20                 t0 = u64 [sp + 0x20]
202375: 82 13 18                 t1 = u64 [sp + 0x18]
202378: 82 14 10                 t2 = u64 [sp + 0x10]
202381: 64 60                    ra = s1
202383: 33 0c 0a                 a5 = 0xa
202386: 82 15 40                 s0 = u64 [sp + 0x40]
202389: 52 07 64 01              jump @13925 if a0 != 0
      :                          @13884
202393: 84 57 ff 00              a0 = s0 & 0xff
202397: 52 07 58 01              jump @13924 if a0 != 0
      :                          @13885
202401: 7b 1b 50                 u64 [sp + 0x50] = a4
202404: ae 02 0a                 jump @13888 if t0 >=u ra
      :                          @13886
202407: 28 ef 00                 jump @13915
      :                          @13887
202410: ac 02 ec 00              jump @13915 if t0 <u ra
      :                          @13888
202414: c9 02 08                 a1 = t0 - ra
202417: 82 16 58                 s1 = u64 [sp + 0x58]
202420: c8 06 06                 s1 = s1 + ra
202423: 55 18 10 1d              jump @13894 if a1 >=u 16
      :                          @13889
202427: aa 02 d8 00              jump @13914 if t0 == ra
      :                          @13890
202431: 33 0a                    a3 = 0
202433: 01                       fallthrough
      :                          @13891
202434: c8 a6 07                 a0 = s1 + a3
202437: 7c 77                    a0 = u8 [a0]
202439: aa c7 a5 00              jump @13909 if a0 == a5
      :                          @13892
202443: 95 aa 01                 a3 = a3 + 0x1
202446: ab a8 f4                 jump @13891 if a1 != a3
      :                          @13893
202449: 28 c2 00                 jump @13914
      :                          @13894
202452: 95 69 07                 a2 = s1 + 0x7
202455: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
202458: c9 6a 07                 a0 = a3 - s1
202461: d3 6a 0a                 a3 = a3 ^ s1
202464: 88 aa 01                 a3 = a3 <u 0x1
202467: 88 7b 01                 a4 = a0 <u 0x1
202470: d4 ba 0a                 a3 = a3 | a4
202473: 51 0a 45                 jump @13900 if a3 == 0
      :                          @13895
202476: 33 07                    a0 = 0
202478: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
202481: 82 1b                    a4 = u64 [sp]
202483: c8 0b 0b                 a4 = a4 + ra
202486: 28 08                    jump @13897
      :                          @13896
202488: 82 1b                    a4 = u64 [sp]
202490: c8 0b 0b                 a4 = a4 + ra
202493: 01                       fallthrough
      :                          @13897
202494: c8 76 0c                 a5 = s1 + a0
202497: 82 cc                    a5 = u64 [a5]
202499: c8 7b 09                 a2 = a4 + a0
202502: 82 99                    a2 = u64 [a2]
202504: d3 4c 05                 s0 = a5 ^ t2
202507: c8 35 05                 s0 = s0 + t1
202510: e0 c5 0c                 a5 = s0 & ~a5
202513: d3 49 05                 s0 = a2 ^ t2
202516: c8 35 05                 s0 = s0 + t1
202519: e0 95 09                 a2 = s0 & ~a2
202522: d4 c9 09                 a2 = a2 | a5
202525: 82 1c 60                 a5 = u64 [sp + 0x60]
202528: d2 c9 09                 a2 = a2 & a5
202531: 52 09 1f                 jump @13903 if a2 != 0
      :                          @13898
202534: 95 77 10                 a0 = a0 + 0x10
202537: ae 7a d5                 jump @13897 if a3 >=u a0
      :                          @13899
202540: 28 16                    jump @13903
      :                          @13900
202542: c8 a6 0b                 a4 = s1 + a3
202545: 7c bb                    a4 = u8 [a4]
202547: aa cb 51                 jump @13912 if a4 == a5
      :                          @13901
202550: 95 aa 01                 a3 = a3 + 0x1
202553: ab a7 f5                 jump @13900 if a0 != a3
      :                          @13902
202556: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
202559: ae 7a b9                 jump @13896 if a3 >=u a0
      :                          @13903
202562: aa 87 9b 00              jump @13921 if a0 == a1
      :                          @13904
202566: 33 0a                    a3 = 0
202568: c8 76 06                 s1 = s1 + a0
202571: c9 72 08                 a1 = t0 - a0
202574: c9 08 08                 a1 = a1 - ra
202577: 33 0c 0a                 a5 = 0xa
202580: 82 1b 50                 a4 = u64 [sp + 0x50]
202583: 01                       fallthrough
      :                          @13905
202584: c8 a6 09                 a2 = s1 + a3
202587: 7c 99                    a2 = u8 [a2]
202589: aa c9 0b                 jump @13908 if a2 == a5
      :                          @13906
202592: 95 aa 01                 a3 = a3 + 0x1
202595: ab a8 f5                 jump @13905 if a1 != a3
      :                          @13907
202598: 28 2d                    jump @13914
      :                          @13908
202600: c8 7a 0a                 a3 = a3 + a0
202603: 01                       fallthrough
      :                          @13909
202604: c8 0a 0a                 a3 = a3 + ra
202607: 95 a0 01                 ra = a3 + 0x1
202610: ae 2a 38 ff              jump @13887 if a3 >=u t0
      :                          @13910
202614: 82 17 58                 a0 = u64 [sp + 0x58]
202617: c8 7a 0a                 a3 = a3 + a0
202620: 7c a7                    a0 = u8 [a3]
202622: ab c7 2c ff              jump @13887 if a0 != a5
      :                          @13911
202626: 28 62                    jump @13922
      :                          @13912
202628: 82 1b 50                 a4 = u64 [sp + 0x50]
202631: c8 0a 0a                 a3 = a3 + ra
202634: 95 a0 01                 ra = a3 + 0x1
202637: ac 2a e9                 jump @13910 if a3 <u t0
      :                          @13913
202640: 28 1a ff                 jump @13887
      :                          @13914
202643: 64 20                    ra = t0
202645: 01                       fallthrough
      :                          @13915
202646: 49 11 40 01              u64 [sp + 64] = 0x1
202650: 64 b5                    s0 = a4
202652: 64 26                    s1 = t0
202654: aa 2b 57                 jump @13924 if a4 == t0
      :                          @13916
202657: 82 17 48                 a0 = u64 [sp + 0x48]
202660: 7c 77                    a0 = u8 [a0]
202662: 51 07 23                 jump @13919 if a0 == 0
      :                          @13917
202665: 82 17 30                 a0 = u64 [sp + 0x30]
202668: 82 7a 18                 a3 = u64 [a0 + 0x18]
202671: 33 09 04                 a2 = 0x4
202674: 82 17 38                 a0 = u64 [sp + 0x38]
202677: 82 18 08                 a1 = u64 [sp + 0x8]
202680: 7b 10 28                 u64 [sp + 0x28] = ra
202683: b4 a0 02 58 0c           ra = 3160, jump [a3]
      :                          @13918 [@dyn 1580]
202688: 82 1b 50                 a4 = u64 [sp + 0x50]
202691: 82 10 28                 ra = u64 [sp + 0x28]
202694: 52 07 33                 jump @13925 if a0 != 0
      :                          @13919
202697: c9 b6 09                 a2 = s1 - a4
202700: 82 18 58                 a1 = u64 [sp + 0x58]
202703: c8 b8 08                 a1 = a1 + a4
202706: ab b6 8e fe              jump @13881 if s1 != a4
      :                          @13920
202710: 64 06                    s1 = ra
202712: 33 07                    a0 = 0
202714: 28 95 fe                 jump @13882
      :                          @13921
202717: 64 20                    ra = t0
202719: 82 1b 50                 a4 = u64 [sp + 0x50]
202722: 28 b4                    jump @13915
      :                          @13922
202724: 49 11 40                 u64 [sp + 64] = 0
202727: 64 05                    s0 = ra
202729: 64 06                    s1 = ra
202731: 82 17 48                 a0 = u64 [sp + 0x48]
202734: 7c 77                    a0 = u8 [a0]
202736: 52 07 b9                 jump @13917 if a0 != 0
      :                          @13923
202739: 28 d6                    jump @13919
      :                          @13924
202741: 33 07                    a0 = 0
202743: 28 06                    jump @13926
      :                          @13925
202745: 33 07 01                 a0 = 0x1
202748: 01                       fallthrough
      :                          @13926
202749: 82 10 78                 ra = u64 [sp + 0x78]
202752: 82 15 70                 s0 = u64 [sp + 0x70]
202755: 82 16 68                 s1 = u64 [sp + 0x68]
202758: 95 11 80 00              sp = sp + 0x80
202762: 32 00                    ret
      :                          @13927 [@dyn 1581]
202764: 95 11 d8                 sp = sp + 0xffffffffffffffd8
202767: 7b 10 20                 u64 [sp + 0x20] = ra
202770: 7b 15 18                 u64 [sp + 0x18] = s0
202773: 7b 16 10                 u64 [sp + 0x10] = s1
202776: 82 75 10                 s0 = u64 [a0 + 0x10]
202779: 7c 59                    a2 = u8 [s0]
202781: 82 7b                    a4 = u64 [a0]
202783: 82 76 08                 s1 = u64 [a0 + 0x8]
202786: 51 09 33                 jump @13931 if a2 == 0
      :                          @13928
202789: 82 6a 18                 a3 = u64 [s1 + 0x18]
202792: 7b 18 08                 u64 [sp + 0x8] = a1
202795: 33 08 bc 04 01           a1 = 0x104bc
202800: 33 09 04                 a2 = 0x4
202803: 64 b7                    a0 = a4
202805: 7b 1b                    u64 [sp] = a4
202807: b4 a0 02 5c 0c           ra = 3164, jump [a3]
      :                          @13929 [@dyn 1582]
202812: 82 18 08                 a1 = u64 [sp + 0x8]
202815: 82 1b                    a4 = u64 [sp]
202817: 51 07 14                 jump @13931 if a0 == 0
      :                          @13930
202820: 33 07 01                 a0 = 0x1
202823: 82 10 20                 ra = u64 [sp + 0x20]
202826: 82 15 18                 s0 = u64 [sp + 0x18]
202829: 82 16 10                 s1 = u64 [sp + 0x10]
202832: 95 11 28                 sp = sp + 0x28
202835: 32 00                    ret
      :                          @13931
202837: 83 87                    i32 a0 = a1 + 0
202839: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
202842: 88 77 01                 a0 = a0 <u 0x1
202845: 78 57                    u8 [s0] = a0
202847: 82 6c 20                 a5 = u64 [s1 + 0x20]
202850: 64 b7                    a0 = a4
202852: 82 10 20                 ra = u64 [sp + 0x20]
202855: 82 15 18                 s0 = u64 [sp + 0x18]
202858: 82 16 10                 s1 = u64 [sp + 0x10]
202861: 95 11 28                 sp = sp + 0x28
202864: 32 0c                    jump [a5]
      :                          @13932 [@dyn 1583]
202866: 64 8a                    a3 = a1
202868: 33 08 10 30 01           a1 = 0x13010
202873: 64 a9                    a2 = a3
202875: 28 99 fb                 jump @13841
      :                          @13933 [@dyn 1584]
202878: 7c 77                    a0 = u8 [a0]
202880: 64 89                    a2 = a1
202882: 33 08 01                 a1 = 0x1
202885: 28 f9 f3                 jump @13704
      :                          @13934 [@dyn 1585]
202888: 80 77                    a0 = u32 [a0]
202890: 64 89                    a2 = a1
202892: 33 08 01                 a1 = 0x1
202895: 28 ef f3                 jump @13704
      :                          @13935
202898: 00                       trap
      :                          @13936
202899: 95 11 70 ff              sp = sp + 0xffffffffffffff70
202903: 7b 10 88 00              u64 [sp + 0x88] = ra
202907: 7b 15 80 00              u64 [sp + 0x80] = s0
202911: 7b 16 78                 u64 [sp + 0x78] = s1
202914: 64 75                    s0 = a0
202916: 7c 77 10                 a0 = u8 [a0 + 0x10]
202919: 82 5c                    a5 = u64 [s0]
202921: 64 8b                    a4 = a1
202923: 33 08 01                 a1 = 0x1
202926: 51 07 1e                 jump @13938 if a0 == 0
      :                          @13937
202929: 78 58 10                 u8 [s0 + 0x10] = a1
202932: 95 c7 01                 a0 = a5 + 0x1
202935: 7b 57                    u64 [s0] = a0
202937: 64 57                    a0 = s0
202939: 82 10 88 00              ra = u64 [sp + 0x88]
202943: 82 15 80 00              s0 = u64 [sp + 0x80]
202947: 82 16 78                 s1 = u64 [sp + 0x78]
202950: 95 11 90 00              sp = sp + 0x90
202954: 32 00                    ret
      :                          @13938
202956: 82 56 08                 s1 = u64 [s0 + 0x8]
202959: 80 67 34                 a0 = u32 [s1 + 0x34]
202962: 84 78 04                 a1 = a0 & 0x4
202965: 7b 1c 10                 u64 [sp + 0x10] = a5
202968: 52 08 48                 jump @13943 if a1 != 0
      :                          @13939
202971: 7b 1b                    u64 [sp] = a4
202973: 7b 19 08                 u64 [sp + 0x8] = a2
202976: 88 c9 01                 a2 = a5 <u 0x1
202979: 33 0a 40 30 01           a3 = 0x13040
202984: 82 6b 28                 a4 = u64 [s1 + 0x28]
202987: 33 08 44 30 01           a1 = 0x13044
202992: 82 67 20                 a0 = u64 [s1 + 0x20]
202995: 82 bb 18                 a4 = u64 [a4 + 0x18]
202998: db ca 08                 a1 = a3 if a5 != 0
203001: 33 0a 02                 a3 = 0x2
203004: c9 9a 09                 a2 = a3 - a2
203007: b4 b0 02 64 0c           ra = 3172, jump [a4]
      :                          @13940 [@dyn 1586]
203012: 33 08 01                 a1 = 0x1
203015: 82 1c 10                 a5 = u64 [sp + 0x10]
203018: 52 07 a7                 jump @13937 if a0 != 0
      :                          @13941
203021: 82 17                    a0 = u64 [sp]
203023: 64 68                    a1 = s1
203025: 82 19 08                 a2 = u64 [sp + 0x8]
203028: b4 90 02 66 0c           ra = 3174, jump [a2]
      :                          @13942 [@dyn 1587]
203033: 82 1c 10                 a5 = u64 [sp + 0x10]
203036: 64 78                    a1 = a0
203038: 28 93                    jump @13937
      :                          @13943
203040: 52 0c 31                 jump @13947 if a5 != 0
      :                          @13944
203043: 7b 1b                    u64 [sp] = a4
203045: 7b 19 08                 u64 [sp + 0x8] = a2
203048: 82 68 28                 a1 = u64 [s1 + 0x28]
203051: 82 67 20                 a0 = u64 [s1 + 0x20]
203054: 82 8a 18                 a3 = u64 [a1 + 0x18]
203057: 33 08 45 30 01           a1 = 0x13045
203062: 33 09 02                 a2 = 0x2
203065: b4 a0 02 68 0c           ra = 3176, jump [a3]
      :                          @13945 [@dyn 1588]
203070: 33 08 01                 a1 = 0x1
203073: 82 1c 10                 a5 = u64 [sp + 0x10]
203076: 52 07 6d ff              jump @13937 if a0 != 0
      :                          @13946
203080: 81 67 34                 a0 = i32 [s1 + 0x34]
203083: 82 19 08                 a2 = u64 [sp + 0x8]
203086: 82 1b                    a4 = u64 [sp]
203088: 01                       fallthrough
      :                          @13947
203089: 46 11 37 01              u8 [sp + 55] = 0x1
203093: 82 68 20                 a1 = u64 [s1 + 0x20]
203096: 82 6a 28                 a3 = u64 [s1 + 0x28]
203099: 7b 18 18                 u64 [sp + 0x18] = a1
203102: 7b 1a 20                 u64 [sp + 0x20] = a3
203105: 95 18 37                 a1 = sp + 0x37
203108: 7b 18 28                 u64 [sp + 0x28] = a1
203111: 81 68 30                 a1 = i32 [s1 + 0x30]
203114: 7c 62 38                 t0 = u8 [s1 + 0x38]
203117: 82 6a                    a3 = u64 [s1]
203119: 82 63 08                 t1 = u64 [s1 + 0x8]
203122: 82 6c 10                 a5 = u64 [s1 + 0x10]
203125: 82 66 18                 s1 = u64 [s1 + 0x18]
203128: 7a 17 6c                 u32 [sp + 0x6c] = a0
203131: 7a 18 68                 u32 [sp + 0x68] = a1
203134: 78 12 70                 u8 [sp + 0x70] = t0
203137: 7b 1a 38                 u64 [sp + 0x38] = a3
203140: 7b 13 40                 u64 [sp + 0x40] = t1
203143: 7b 1c 48                 u64 [sp + 0x48] = a5
203146: 7b 16 50                 u64 [sp + 0x50] = s1
203149: 95 17 18                 a0 = sp + 0x18
203152: 7b 17 58                 u64 [sp + 0x58] = a0
203155: 33 07 10 30 01           a0 = 0x13010
203160: 7b 17 60                 u64 [sp + 0x60] = a0
203163: 95 18 38                 a1 = sp + 0x38
203166: 64 b7                    a0 = a4
203168: b4 90 02 6a 0c           ra = 3178, jump [a2]
      :                          @13948 [@dyn 1589]
203173: 51 07 0c                 jump @13950 if a0 == 0
      :                          @13949
203176: 82 1c 10                 a5 = u64 [sp + 0x10]
203179: 33 08 01                 a1 = 0x1
203182: 28 03 ff                 jump @13937
      :                          @13950
203185: 82 18 60                 a1 = u64 [sp + 0x60]
203188: 82 17 58                 a0 = u64 [sp + 0x58]
203191: 82 8a 18                 a3 = u64 [a1 + 0x18]
203194: 33 08 42 30 01           a1 = 0x13042
203199: 33 09 02                 a2 = 0x2
203202: b4 a0 02 6c 0c           ra = 3180, jump [a3]
      :                          @13951 [@dyn 1590]
203207: 64 78                    a1 = a0
203209: 82 1c 10                 a5 = u64 [sp + 0x10]
203212: 28 e5 fe                 jump @13937
      :                          @13952
203215: 95 11 70 ff              sp = sp + 0xffffffffffffff70
203219: 7b 10 88 00              u64 [sp + 0x88] = ra
203223: 7b 15 80 00              u64 [sp + 0x80] = s0
203227: 7b 16 78                 u64 [sp + 0x78] = s1
203230: 64 75                    s0 = a0
203232: 7c 77 08                 a0 = u8 [a0 + 0x8]
203235: 64 8b                    a4 = a1
203237: 33 08 01                 a1 = 0x1
203240: 33 06 01                 s1 = 0x1
203243: 51 07 1d                 jump @13954 if a0 == 0
      :                          @13953
203246: 78 56 08                 u8 [s0 + 0x8] = s1
203249: 46 15 09 01              u8 [s0 + 9] = 0x1
203253: 64 57                    a0 = s0
203255: 82 10 88 00              ra = u64 [sp + 0x88]
203259: 82 15 80 00              s0 = u64 [sp + 0x80]
203263: 82 16 78                 s1 = u64 [sp + 0x78]
203266: 95 11 90 00              sp = sp + 0x90
203270: 32 00                    ret
      :                          @13954
203272: 64 9a                    a3 = a2
203274: 82 5c                    a5 = u64 [s0]
203276: 80 c7 34                 a0 = u32 [a5 + 0x34]
203279: 7c 58 09                 a1 = u8 [s0 + 0x9]
203282: 84 79 04                 a2 = a0 & 0x4
203285: 52 09 45                 jump @13960 if a2 != 0
      :                          @13955
203288: 51 08 32                 jump @13958 if a1 == 0
      :                          @13956
203291: 82 c8 28                 a1 = u64 [a5 + 0x28]
203294: 82 c7 20                 a0 = u64 [a5 + 0x20]
203297: 82 83 18                 t1 = u64 [a1 + 0x18]
203300: 33 08 40 30 01           a1 = 0x13040
203305: 33 09 02                 a2 = 0x2
203308: 64 a6                    s1 = a3
203310: 7b 1b 10                 u64 [sp + 0x10] = a4
203313: 7b 1c 08                 u64 [sp + 0x8] = a5
203316: b4 30 02 6e 0c           ra = 3182, jump [t1]
      :                          @13957 [@dyn 1591]
203321: 82 1c 08                 a5 = u64 [sp + 0x8]
203324: 82 1b 10                 a4 = u64 [sp + 0x10]
203327: 64 6a                    a3 = s1
203329: 33 08 01                 a1 = 0x1
203332: 33 06 01                 s1 = 0x1
203335: 52 07 a7                 jump @13953 if a0 != 0
      :                          @13958
203338: 64 b7                    a0 = a4
203340: 64 c8                    a1 = a5
203342: b4 a0 02 70 0c           ra = 3184, jump [a3]
      :                          @13959 [@dyn 1592]
203347: 33 08 01                 a1 = 0x1
203350: 64 76                    s1 = a0
203352: 28 96                    jump @13953
      :                          @13960
203354: 52 08 37                 jump @13964 if a1 != 0
      :                          @13961
203357: 82 c8 28                 a1 = u64 [a5 + 0x28]
203360: 82 c7 20                 a0 = u64 [a5 + 0x20]
203363: 82 83 18                 t1 = u64 [a1 + 0x18]
203366: 33 08 48 30 01           a1 = 0x13048
203371: 33 09 01                 a2 = 0x1
203374: 33 06 01                 s1 = 0x1
203377: 7b 1a                    u64 [sp] = a3
203379: 7b 1b 10                 u64 [sp + 0x10] = a4
203382: 7b 1c 08                 u64 [sp + 0x8] = a5
203385: b4 30 02 72 0c           ra = 3186, jump [t1]
      :                          @13962 [@dyn 1593]
203390: 82 1c 08                 a5 = u64 [sp + 0x8]
203393: 82 1b 10                 a4 = u64 [sp + 0x10]
203396: 82 1a                    a3 = u64 [sp]
203398: 33 08 01                 a1 = 0x1
203401: 52 07 65 ff              jump @13953 if a0 != 0
      :                          @13963
203405: 81 c7 34                 a0 = i32 [a5 + 0x34]
203408: 01                       fallthrough
      :                          @13964
203409: 33 06 01                 s1 = 0x1
203412: 78 16 37                 u8 [sp + 0x37] = s1
203415: 82 c8 20                 a1 = u64 [a5 + 0x20]
203418: 82 c9 28                 a2 = u64 [a5 + 0x28]
203421: 7b 18 18                 u64 [sp + 0x18] = a1
203424: 7b 19 20                 u64 [sp + 0x20] = a2
203427: 95 18 37                 a1 = sp + 0x37
203430: 7b 18 28                 u64 [sp + 0x28] = a1
203433: 81 c8 30                 a1 = i32 [a5 + 0x30]
203436: 7c c9 38                 a2 = u8 [a5 + 0x38]
203439: 82 c3                    t1 = u64 [a5]
203441: 82 c4 08                 t2 = u64 [a5 + 0x8]
203444: 82 c0 10                 ra = u64 [a5 + 0x10]
203447: 82 c2 18                 t0 = u64 [a5 + 0x18]
203450: 7a 17 6c                 u32 [sp + 0x6c] = a0
203453: 7a 18 68                 u32 [sp + 0x68] = a1
203456: 78 19 70                 u8 [sp + 0x70] = a2
203459: 7b 13 38                 u64 [sp + 0x38] = t1
203462: 7b 14 40                 u64 [sp + 0x40] = t2
203465: 7b 10 48                 u64 [sp + 0x48] = ra
203468: 7b 12 50                 u64 [sp + 0x50] = t0
203471: 95 17 18                 a0 = sp + 0x18
203474: 7b 17 58                 u64 [sp + 0x58] = a0
203477: 33 07 10 30 01           a0 = 0x13010
203482: 7b 17 60                 u64 [sp + 0x60] = a0
203485: 95 18 38                 a1 = sp + 0x38
203488: 64 b7                    a0 = a4
203490: b4 a0 02 74 0c           ra = 3188, jump [a3]
      :                          @13965 [@dyn 1594]
203495: 52 07 21                 jump @13968 if a0 != 0
      :                          @13966
203498: 82 18 60                 a1 = u64 [sp + 0x60]
203501: 82 17 58                 a0 = u64 [sp + 0x58]
203504: 82 8a 18                 a3 = u64 [a1 + 0x18]
203507: 33 08 42 30 01           a1 = 0x13042
203512: 33 09 02                 a2 = 0x2
203515: b4 a0 02 76 0c           ra = 3190, jump [a3]
      :                          @13967 [@dyn 1595]
203520: 64 76                    s1 = a0
203522: 33 08 01                 a1 = 0x1
203525: 28 e9 fe                 jump @13953
      :                          @13968
203528: 33 08 01                 a1 = 0x1
203531: 28 e3 fe                 jump @13953
      :                          @13969 [@dyn 1596]
203534: 95 11 a8                 sp = sp + 0xffffffffffffffa8
203537: 7b 10 50                 u64 [sp + 0x50] = ra
203540: 7b 15 48                 u64 [sp + 0x48] = s0
203543: 7b 16 40                 u64 [sp + 0x40] = s1
203546: 82 79 08                 a2 = u64 [a0 + 0x8]
203549: 82 77                    a0 = u64 [a0]
203551: 98 9a 13                 a3 = a2 >> 0x13
203554: 49 11 38 27              u64 [sp + 56] = 0x27
203558: 7b 18                    u64 [sp] = a1
203560: 52 0a 1c                 jump @13971 if a3 != 0
      :                          @13970
203563: 49 11 08                 u64 [sp + 8] = 0
203566: 3a 08 18 12 03           a1 = u64 [0x31218]
203571: 98 7a 13                 a3 = a0 >> 0x13
203574: 97 99 2d                 a2 = a2 << 0x2d
203577: d4 a9 09                 a2 = a2 | a3
203580: d6 89 06                 s1 = a2 mulhu a1
203583: 98 66 2b                 s1 = s1 >> 0x2b
203586: 28 55                    jump @13972
      :                          @13971
203588: 3a 08 08 12 03           a1 = u64 [0x31208]
203593: 3a 0a 10 12 03           a3 = u64 [0x31210]
203598: d6 87 0b                 a4 = a0 mulhu a1
203601: d6 a7 0c                 a5 = a0 mulhu a3
203604: ca a7 06                 s1 = a0 * a3
203607: c8 b6 06                 s1 = s1 + a4
203610: d8 b6 0b                 a4 = s1 <u a4
203613: c8 cb 0b                 a4 = a4 + a5
203616: d6 89 0c                 a5 = a2 mulhu a1
203619: ca 89 08                 a1 = a2 * a1
203622: c8 68 08                 a1 = a1 + s1
203625: d8 68 08                 a1 = a1 <u s1
203628: c8 c8 08                 a1 = a1 + a5
203631: d6 a9 0c                 a5 = a2 mulhu a3
203634: ca a9 09                 a2 = a2 * a3
203637: c8 b9 09                 a2 = a2 + a4
203640: d8 b9 0a                 a3 = a2 <u a4
203643: c8 ca 0a                 a3 = a3 + a5
203646: c8 98 08                 a1 = a1 + a2
203649: d8 98 09                 a2 = a1 <u a2
203652: c8 a9 09                 a2 = a2 + a3
203655: 97 9a 02                 a3 = a2 << 0x2
203658: 98 88 3e                 a1 = a1 >> 0x3e
203661: d4 a8 06                 s1 = a1 | a3
203664: 98 99 3e                 a2 = a2 >> 0x3e
203667: 7b 19 08                 u64 [sp + 0x8] = a2
203670: 01                       fallthrough
      :                          @13972
203671: 3a 05 20 12 03           s0 = u64 [0x31220]
203676: ca 56 08                 a1 = s1 * s0
203679: c8 87 07                 a0 = a0 + a1
203682: 95 18 11                 a1 = sp + 0x11
203685: 95 19 38                 a2 = sp + 0x38
203688: 50 20 7a 0c a6 00        ra = 3194, jump @13981
      :                          @13973 [@dyn 1597]
203694: 82 19 38                 a2 = u64 [sp + 0x38]
203697: 82 17 08                 a0 = u64 [sp + 0x8]
203700: d4 67 07                 a0 = a0 | s1
203703: 51 07 6e                 jump @13979 if a0 == 0
      :                          @13974
203706: 95 17 25                 a0 = sp + 0x25
203709: 95 99 ec                 a2 = a2 + 0xffffffffffffffec
203712: 33 08 30                 a1 = 0x30
203715: 50 20 7c 0c 53 f0        ra = 3196, jump @13687
      :                          @13975 [@dyn 1598]
203721: 49 11 38 14              u64 [sp + 56] = 0x14
203725: 3a 07 18 12 03           a0 = u64 [0x31218]
203730: 98 68 13                 a1 = s1 >> 0x13
203733: 82 19 08                 a2 = u64 [sp + 0x8]
203736: 97 99 2d                 a2 = a2 << 0x2d
203739: d4 98 08                 a1 = a1 | a2
203742: 7b 18 08                 u64 [sp + 0x8] = a1
203745: d6 78 07                 a0 = a1 mulhu a0
203748: 98 78 2b                 a1 = a0 >> 0x2b
203751: ca 58 07                 a0 = a1 * s0
203754: 64 85                    s0 = a1
203756: c8 67 07                 a0 = a0 + s1
203759: 95 18 11                 a1 = sp + 0x11
203762: 95 19 38                 a2 = sp + 0x38
203765: 50 20 7e 0c 59           ra = 3198, jump @13981
      :                          @13976 [@dyn 1599]
203770: 82 19 38                 a2 = u64 [sp + 0x38]
203773: 14 07 3d 91 60 e4 58 11 00 00 a0 = 0x1158e460913d
203783: 82 18 08                 a1 = u64 [sp + 0x8]
203786: ac 78 1b                 jump @13979 if a1 <u a0
      :                          @13977
203789: 95 17 12                 a0 = sp + 0x12
203792: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
203795: 33 08 30                 a1 = 0x30
203798: 50 20 80 0c 00 f0        ra = 3200, jump @13687
      :                          @13978 [@dyn 1600]
203804: 33 09                    a2 = 0
203806: 86 57 30                 a0 = s0 | 0x30
203809: 78 17 11                 u8 [sp + 0x11] = a0
203812: 01                       fallthrough
      :                          @13979
203813: 95 1b 11                 a4 = sp + 0x11
203816: c8 9b 0b                 a4 = a4 + a2
203819: 9a 9c 27                 a5 = 0x27 - a2
203822: 33 09 f0 2f 01           a2 = 0x12ff0
203827: 33 08 01                 a1 = 0x1
203830: 82 17                    a0 = u64 [sp]
203832: 33 0a                    a3 = 0
203834: 50 20 82 0c 72 f1        ra = 3202, jump @13714
      :                          @13980 [@dyn 1601]
203840: 82 10 50                 ra = u64 [sp + 0x50]
203843: 82 15 48                 s0 = u64 [sp + 0x48]
203846: 82 16 40                 s1 = u64 [sp + 0x40]
203849: 95 11 58                 sp = sp + 0x58
203852: 32 00                    ret
      :                          @13981
203854: 95 11 b0                 sp = sp + 0xffffffffffffffb0
203857: 7b 10 48                 u64 [sp + 0x48] = ra
203860: 7b 15 40                 u64 [sp + 0x40] = s0
203863: 7b 16 38                 u64 [sp + 0x38] = s1
203866: 64 95                    s0 = a2
203868: 82 90                    ra = u64 [a2]
203870: 54 10 13 5f 03           jump @13996 if ra <=u 19
      :                          @13982
203875: 14 09 00 00 c1 6f f2 86 23 00 a2 = 0x2386f26fc10000
203885: c8 80 02                 t0 = ra + a1
203888: 7b 18 30                 u64 [sp + 0x30] = a1
203891: ac 97 6c 01              jump @13984 if a0 <u a2
      :                          @13983
203895: 3a 09 30 12 03           a2 = u64 [0x31230]
203900: d6 97 09                 a2 = a0 mulhu a2
203903: 98 9a 33                 a3 = a2 >> 0x33
203906: 7b 1a 20                 u64 [sp + 0x20] = a3
203909: 14 09 00 00 3f 90 0d 79 dc ff a2 = 0xffdc790d903f0000
203919: ca 9a 09                 a2 = a3 * a2
203922: 3a 0a 38 12 03           a3 = u64 [0x31238]
203927: c8 97 07                 a0 = a0 + a2
203930: 3a 09 40 12 03           a2 = u64 [0x31240]
203935: d6 a7 0a                 a3 = a0 mulhu a3
203938: 98 aa 29                 a3 = a3 >> 0x29
203941: 7b 15 28                 u64 [sp + 0x28] = s0
203944: 84 a3 fe                 t1 = a3 & 0xfffffffffffffffe
203947: d6 97 09                 a2 = a0 mulhu a2
203950: 98 96 25                 s1 = a2 >> 0x25
203953: 98 99 27                 a2 = a2 >> 0x27
203956: 97 99 32                 a2 = a2 << 0x32
203959: 33 0c 00 c0 1e 05        a5 = 0x51ec000
203965: d6 c9 09                 a2 = a2 mulhu a5
203968: 98 99 11                 a2 = a2 >> 0x11
203971: 3a 05 48 12 03           s0 = u64 [0x31248]
203976: 96 99 64                 a2 = a2 * 0x64
203979: bf 96 06                 i32 s1 = s1 - a2
203982: 7b 16 18                 u64 [sp + 0x18] = s1
203985: d6 57 09                 a2 = a0 mulhu s0
203988: 98 99 21                 a2 = a2 >> 0x21
203991: 96 95 1f 85 eb 51        s0 = a2 * 0x51eb851f
203997: 3a 0a 28 12 03           a3 = u64 [0x31228]
204002: 98 55 25                 s0 = s0 >> 0x25
204005: 96 55 64                 s0 = s0 * 0x64
204008: bf 59 09                 i32 a2 = a2 - s0
204011: 7b 19 10                 u64 [sp + 0x10] = a2
204014: d6 a7 09                 a2 = a0 mulhu a3
204017: 98 9a 1a                 a3 = a2 >> 0x1a
204020: 97 99 06                 a2 = a2 << 0x6
204023: 98 99 20                 a2 = a2 >> 0x20
204026: 96 99 1f 85 eb 51        a2 = a2 * 0x51eb851f
204032: 98 99 25                 a2 = a2 >> 0x25
204035: 96 99 64                 a2 = a2 * 0x64
204038: bf 9a 0a                 i32 a3 = a3 - a2
204041: 7b 1a 08                 u64 [sp + 0x8] = a3
204044: 3a 05 50 12 03           s0 = u64 [0x31250]
204049: 33 04 4e 30 01           t2 = 0x1304e
204054: c8 43 03                 t1 = t1 + t2
204057: 7c 39 01                 a2 = u8 [t1 + 0x1]
204060: 95 0a f0                 a3 = ra + 0xfffffffffffffff0
204063: 7c 3b                    a4 = u8 [t1]
204065: 64 83                    t1 = a1
204067: c8 a8 08                 a1 = a1 + a3
204070: 78 89 01                 u8 [a1 + 0x1] = a2
204073: d6 57 09                 a2 = a0 mulhu s0
204076: 78 8b                    u8 [a1] = a4
204078: 3a 08 58 12 03           a1 = u64 [0x31258]
204083: 98 99 12                 a2 = a2 >> 0x12
204086: 3a 0b 60 12 03           a4 = u64 [0x31260]
204091: d6 89 05                 s0 = a2 mulhu a1
204094: 96 55 64                 s0 = s0 * 0x64
204097: c9 59 09                 a2 = a2 - s0
204100: 7b 19                    u64 [sp] = a2
204102: d6 b7 09                 a2 = a0 mulhu a4
204105: 98 99 0b                 a2 = a2 >> 0xb
204108: d6 89 08                 a1 = a2 mulhu a1
204111: 96 88 64                 a1 = a1 * 0x64
204114: c9 89 08                 a1 = a2 - a1
204117: 3a 09 68 12 03           a2 = u64 [0x31268]
204122: 3a 0b 70 12 03           a4 = u64 [0x31270]
204127: 98 75 02                 s0 = a0 >> 0x2
204130: d6 95 09                 a2 = s0 mulhu a2
204133: 98 99 02                 a2 = a2 >> 0x2
204136: d6 b9 0b                 a4 = a2 mulhu a4
204139: 98 bb 01                 a4 = a4 >> 0x1
204142: 96 bb 64                 a4 = a4 * 0x64
204145: 82 1c 18                 a5 = u64 [sp + 0x18]
204148: 97 cc 31                 a5 = a5 << 0x31
204151: 98 cc 30                 a5 = a5 >> 0x30
204154: c9 b9 05                 s0 = a2 - a4
204157: c8 4c 0c                 a5 = a5 + t2
204160: 7c cb 01                 a4 = u8 [a5 + 0x1]
204163: 96 99 9c                 a2 = a2 * 0xffffffffffffff9c
204166: c8 97 07                 a0 = a0 + a2
204169: 78 2b f3                 u8 [t0 + 0xfffffffffffffff3] = a4
204172: 82 19 10                 a2 = u64 [sp + 0x10]
204175: 97 99 21                 a2 = a2 << 0x21
204178: 7c cb                    a4 = u8 [a5]
204180: 98 99 20                 a2 = a2 >> 0x20
204183: 82 1c 08                 a5 = u64 [sp + 0x8]
204186: 97 cc 21                 a5 = a5 << 0x21
204189: 98 cc 20                 a5 = a5 >> 0x20
204192: 78 2b f2                 u8 [t0 + 0xfffffffffffffff2] = a4
204195: c8 49 09                 a2 = a2 + t2
204198: 7c 9b                    a4 = u8 [a2]
204200: 7c 99 01                 a2 = u8 [a2 + 0x1]
204203: c8 4c 0c                 a5 = a5 + t2
204206: 7c c6 01                 s1 = u8 [a5 + 0x1]
204209: 7c cc                    a5 = u8 [a5]
204211: 78 29 f5                 u8 [t0 + 0xfffffffffffffff5] = a2
204214: 78 2b f4                 u8 [t0 + 0xfffffffffffffff4] = a4
204217: 78 26 f7                 u8 [t0 + 0xfffffffffffffff7] = s1
204220: 78 2c f6                 u8 [t0 + 0xfffffffffffffff6] = a5
204223: 95 09 f8                 a2 = ra + 0xfffffffffffffff8
204226: 82 1b                    a4 = u64 [sp]
204228: 97 bb 01                 a4 = a4 << 0x1
204231: 97 86 01                 s1 = a1 << 0x1
204234: 97 54 01                 t2 = s0 << 0x1
204237: 97 7c 01                 a5 = a0 << 0x1
204240: 82 17 28                 a0 = u64 [sp + 0x28]
204243: 7b 7a                    u64 [a0] = a3
204245: 64 a0                    ra = a3
204247: 64 3a                    a3 = t1
204249: 82 17 20                 a0 = u64 [sp + 0x20]
204252: 28 a4 00                 jump @13986
      :                          @13984
204255: 53 47 00 e1 f5 05 e4 00  jump @13987 if a0 <u 100000000
      :                          @13985
204263: 7b 15 28                 u64 [sp + 0x28] = s0
204266: 3a 08 28 12 03           a1 = u64 [0x31228]
204271: d6 87 0a                 a3 = a0 mulhu a1
204274: 98 aa 1a                 a3 = a3 >> 0x1a
204277: 87 a8 00 1f 0a fa        i32 a1 = a3 * 0xfffffffffa0a1f00
204283: c8 87 07                 a0 = a0 + a1
204286: 97 78 20                 a1 = a0 << 0x20
204289: 14 09 00 00 00 00 83 de 1b 43 a2 = 0x431bde8300000000
204299: d6 98 09                 a2 = a1 mulhu a2
204302: 98 99 31                 a2 = a2 >> 0x31
204305: 84 95 fe                 s0 = a2 & 0xfffffffffffffffe
204308: 14 09 00 00 00 00 59 17 b7 d1 a2 = 0xd1b7175900000000
204318: d6 98 09                 a2 = a1 mulhu a2
204321: 98 9b 2d                 a4 = a2 >> 0x2d
204324: 98 99 2f                 a2 = a2 >> 0x2f
204327: 97 99 32                 a2 = a2 << 0x32
204330: 33 0c 00 c0 1e 05        a5 = 0x51ec000
204336: d6 c9 09                 a2 = a2 mulhu a5
204339: 98 99 11                 a2 = a2 >> 0x11
204342: 96 99 64                 a2 = a2 * 0x64
204345: bf 9b 0b                 i32 a4 = a4 - a2
204348: 97 bb 31                 a4 = a4 << 0x31
204351: 98 b6 30                 s1 = a4 >> 0x30
204354: 64 5b                    a4 = s0
204356: 14 09 00 00 00 00 1f 85 eb 51 a2 = 0x51eb851f00000000
204366: d6 98 08                 a1 = a1 mulhu a2
204369: 98 88 25                 a1 = a1 >> 0x25
204372: 96 89 29 5c 8f 02        a2 = a1 * 0x28f5c29
204378: 98 99 20                 a2 = a2 >> 0x20
204381: 96 99 64                 a2 = a2 * 0x64
204384: bf 98 09                 i32 a2 = a1 - a2
204387: 97 99 21                 a2 = a2 << 0x21
204390: 98 94 20                 t2 = a2 >> 0x20
204393: 96 88 9c                 a1 = a1 * 0xffffffffffffff9c
204396: c8 87 07                 a0 = a0 + a1
204399: 97 77 21                 a0 = a0 << 0x21
204402: 95 09 f8                 a2 = ra + 0xfffffffffffffff8
204405: 98 7c 20                 a5 = a0 >> 0x20
204408: 64 90                    ra = a2
204410: 64 a7                    a0 = a3
204412: 82 1a 30                 a3 = u64 [sp + 0x30]
204415: 01                       fallthrough
      :                          @13986
204416: 33 08 4e 30 01           a1 = 0x1304e
204421: c8 b8 03                 t1 = a1 + a4
204424: c8 a9 09                 a2 = a2 + a3
204427: 7c 3a                    a3 = u8 [t1]
204429: 7c 3b 01                 a4 = u8 [t1 + 0x1]
204432: c8 86 06                 s1 = s1 + a1
204435: 7c 65 01                 s0 = u8 [s1 + 0x1]
204438: 7c 66                    s1 = u8 [s1]
204440: 78 9b 01                 u8 [a2 + 0x1] = a4
204443: 78 9a                    u8 [a2] = a3
204445: 78 25 fb                 u8 [t0 + 0xfffffffffffffffb] = s0
204448: 78 26 fa                 u8 [t0 + 0xfffffffffffffffa] = s1
204451: c8 84 04                 t2 = t2 + a1
204454: 7c 49                    a2 = u8 [t2]
204456: 7c 4a 01                 a3 = u8 [t2 + 0x1]
204459: c8 c8 08                 a1 = a1 + a5
204462: 7c 8b 01                 a4 = u8 [a1 + 0x1]
204465: 7c 88                    a1 = u8 [a1]
204467: 78 2a fd                 u8 [t0 + 0xfffffffffffffffd] = a3
204470: 78 29 fc                 u8 [t0 + 0xfffffffffffffffc] = a2
204473: 78 2b ff                 u8 [t0 + 0xffffffffffffffff] = a4
204476: 78 28 fe                 u8 [t0 + 0xfffffffffffffffe] = a1
204479: 82 15 28                 s0 = u64 [sp + 0x28]
204482: 01                       fallthrough
      :                          @13987
204483: 8b 78 04                 i32 a1 = a0 >> 0x4
204486: 53 28 71 02 76           jump @13990 if a1 <u 625
      :                          @13988
204491: 97 78 20                 a1 = a0 << 0x20
204494: 14 09 00 00 00 00 59 17 b7 d1 a2 = 0xd1b7175900000000
204504: d6 98 0b                 a4 = a1 mulhu a2
204507: 98 b2 2d                 t0 = a4 >> 0x2d
204510: 87 28 f0 d8 00           i32 a1 = t0 * 0xd8f0
204515: c8 87 07                 a0 = a0 + a1
204518: 97 78 30                 a1 = a0 << 0x30
204521: 98 88 32                 a1 = a1 >> 0x32
204524: 96 88 7b 14              a1 = a1 * 0x147b
204528: 98 89 10                 a2 = a1 >> 0x10
204531: 98 88 11                 a1 = a1 >> 0x11
204534: 96 88 9c                 a1 = a1 * 0xffffffffffffff9c
204537: c8 87 07                 a0 = a0 + a1
204540: 82 1b 30                 a4 = u64 [sp + 0x30]
204543: c8 b0 08                 a1 = ra + a4
204546: 95 00 fc                 ra = ra + 0xfffffffffffffffc
204549: 84 99 fe 07              a2 = a2 & 0x7fe
204553: 33 0a 4e 30 01           a3 = 0x1304e
204558: c8 a9 09                 a2 = a2 + a3
204561: c8 0b 0c                 a5 = a4 + ra
204564: 7c 96                    s1 = u8 [a2]
204566: 7c 99 01                 a2 = u8 [a2 + 0x1]
204569: 97 77 31                 a0 = a0 << 0x31
204572: 98 77 30                 a0 = a0 >> 0x30
204575: c8 a7 07                 a0 = a0 + a3
204578: 7c 7a 01                 a3 = u8 [a0 + 0x1]
204581: 7c 77                    a0 = u8 [a0]
204583: 78 c9 01                 u8 [a5 + 0x1] = a2
204586: 78 c6                    u8 [a5] = s1
204588: 78 8a ff                 u8 [a1 + 0xffffffffffffffff] = a3
204591: 78 87 fe                 u8 [a1 + 0xfffffffffffffffe] = a0
204594: 64 27                    a0 = t0
204596: 6e 28                    a1 = zext.h t0
204598: 55 18 64 0f              jump @13991 if a1 >=u 100
      :                          @13989
204602: 28 3f                    jump @13992
      :                          @13990
204604: 82 1b 30                 a4 = u64 [sp + 0x30]
204607: 6e 78                    a1 = zext.h a0
204609: 53 18 64 38              jump @13992 if a1 <u 100
      :                          @13991
204613: 97 78 30                 a1 = a0 << 0x30
204616: 98 88 32                 a1 = a1 >> 0x32
204619: 96 88 7b 14              a1 = a1 * 0x147b
204623: 98 88 11                 a1 = a1 >> 0x11
204626: 96 89 9c                 a2 = a1 * 0xffffffffffffff9c
204629: c8 97 07                 a0 = a0 + a2
204632: 97 77 31                 a0 = a0 << 0x31
204635: 98 77 30                 a0 = a0 >> 0x30
204638: 33 09 4e 30 01           a2 = 0x1304e
204643: c8 97 07                 a0 = a0 + a2
204646: 7c 79 01                 a2 = u8 [a0 + 0x1]
204649: 7c 77                    a0 = u8 [a0]
204651: 95 00 fe                 ra = ra + 0xfffffffffffffffe
204654: c8 0b 0a                 a3 = a4 + ra
204657: 78 a9 01                 u8 [a3 + 0x1] = a2
204660: 78 a7                    u8 [a3] = a0
204662: 64 87                    a0 = a1
204664: 01                       fallthrough
      :                          @13992
204665: 6e 78                    a1 = zext.h a0
204667: 33 09 0a                 a2 = 0xa
204670: ae 98 10                 jump @13994 if a1 >=u a2
      :                          @13993
204673: 95 02 ff                 t0 = ra + 0xffffffffffffffff
204676: c8 2b 08                 a1 = a4 + t0
204679: 83 77 30                 i32 a0 = a0 + 0x30
204682: 78 87                    u8 [a1] = a0
204684: 28 21                    jump @13995
      :                          @13994
204686: 97 77 31                 a0 = a0 << 0x31
204689: 98 77 30                 a0 = a0 >> 0x30
204692: 33 08 4e 30 01           a1 = 0x1304e
204697: c8 87 07                 a0 = a0 + a1
204700: 7c 78 01                 a1 = u8 [a0 + 0x1]
204703: 7c 77                    a0 = u8 [a0]
204705: 95 02 fe                 t0 = ra + 0xfffffffffffffffe
204708: c8 2b 09                 a2 = a4 + t0
204711: 78 98 01                 u8 [a2 + 0x1] = a1
204714: 78 97                    u8 [a2] = a0
204716: 01                       fallthrough
      :                          @13995
204717: 7b 52                    u64 [s0] = t0
204719: 82 10 48                 ra = u64 [sp + 0x48]
204722: 82 15 40                 s0 = u64 [sp + 0x40]
204725: 82 16 38                 s1 = u64 [sp + 0x38]
204728: 95 11 50                 sp = sp + 0x50
204731: 32 00                    ret
      :                          @13996
204733: 00                       trap
      :                          @13997 [@dyn 1602]
204734: 7c 79                    a2 = u8 [a0]
204736: 64 87                    a0 = a1
204738: 51 09 0e                 jump @13999 if a2 == 0
      :                          @13998
204741: 33 08 8c 04 01           a1 = 0x1048c
204746: 33 09 04                 a2 = 0x4
204749: 28 6a f0                 jump @13768
      :                          @13999
204752: 33 08 16 31 01           a1 = 0x13116
204757: 33 09 05                 a2 = 0x5
204760: 28 5f f0                 jump @13768
      :                          @14000 [@dyn 1603]
204763: 64 8a                    a3 = a1
204765: 82 89                    a2 = u64 [a1]
204767: 82 8b 10                 a4 = u64 [a1 + 0x10]
204770: 81 78                    a1 = i32 [a0]
204772: d4 b9 09                 a2 = a2 | a4
204775: 52 09 0e                 jump @14002 if a2 != 0
      :                          @14001
204778: 82 a9 28                 a2 = u64 [a3 + 0x28]
204781: 82 a7 20                 a0 = u64 [a3 + 0x20]
204784: 82 9c 20                 a5 = u64 [a2 + 0x20]
204787: 32 0c                    jump [a5]
      :                          @14002
204789: 95 11 f0                 sp = sp + 0xfffffffffffffff0
204792: 7b 10 08                 u64 [sp + 0x8] = ra
204795: 48 11 04                 u32 [sp + 4] = 0
204798: 55 28 80 00 0e           jump @14004 if a1 >=u 128
      :                          @14003
204803: 78 18 04                 u8 [sp + 0x4] = a1
204806: 33 09 01                 a2 = 0x1
204809: 28 80 00                 jump @14009
      :                          @14004
204812: 8b 87 0b                 i32 a0 = a1 >> 0xb
204815: 52 07 1c                 jump @14006 if a0 != 0
      :                          @14005
204818: 98 87 06                 a0 = a1 >> 0x6
204821: 86 77 c0 00              a0 = a0 | 0xc0
204825: 78 17 04                 u8 [sp + 0x4] = a0
204828: 84 87 3f                 a0 = a1 & 0x3f
204831: 86 77 80 00              a0 = a0 | 0x80
204835: 78 17 05                 u8 [sp + 0x5] = a0
204838: 33 09 02                 a2 = 0x2
204841: 28 60                    jump @14009
      :                          @14006
204843: 8b 87 10                 i32 a0 = a1 >> 0x10
204846: 52 07 29                 jump @14008 if a0 != 0
      :                          @14007
204849: 98 87 0c                 a0 = a1 >> 0xc
204852: 86 77 e0 00              a0 = a0 | 0xe0
204856: 78 17 04                 u8 [sp + 0x4] = a0
204859: 97 87 34                 a0 = a1 << 0x34
204862: 98 77 3a                 a0 = a0 >> 0x3a
204865: 95 77 80 00              a0 = a0 + 0x80
204869: 78 17 05                 u8 [sp + 0x5] = a0
204872: 84 87 3f                 a0 = a1 & 0x3f
204875: 86 77 80 00              a0 = a0 | 0x80
204879: 78 17 06                 u8 [sp + 0x6] = a0
204882: 33 09 03                 a2 = 0x3
204885: 28 34                    jump @14009
      :                          @14008
204887: 98 87 12                 a0 = a1 >> 0x12
204890: 86 77 f0 00              a0 = a0 | 0xf0
204894: 78 17 04                 u8 [sp + 0x4] = a0
204897: 97 87 2e                 a0 = a1 << 0x2e
204900: 98 77 3a                 a0 = a0 >> 0x3a
204903: 95 77 80 00              a0 = a0 + 0x80
204907: 78 17 05                 u8 [sp + 0x5] = a0
204910: 97 87 34                 a0 = a1 << 0x34
204913: 98 77 3a                 a0 = a0 >> 0x3a
204916: 95 77 80 00              a0 = a0 + 0x80
204920: 78 17 06                 u8 [sp + 0x6] = a0
204923: 84 87 3f                 a0 = a1 & 0x3f
204926: 86 77 80 00              a0 = a0 | 0x80
204930: 78 17 07                 u8 [sp + 0x7] = a0
204933: 33 09 04                 a2 = 0x4
204936: 01                       fallthrough
      :                          @14009
204937: 95 18 04                 a1 = sp + 0x4
204940: 64 a7                    a0 = a3
204942: 50 20 88 0c a9 ef        ra = 3208, jump @13768
      :                          @14010 [@dyn 1604]
204948: 82 10 08                 ra = u64 [sp + 0x8]
204951: 95 11 10                 sp = sp + 0x10
204954: 32 00                    ret
      :                          @14011
204956: 82 89 08                 a2 = u64 [a1 + 0x8]
204959: 51 09 78 01              jump @14042 if a2 == 0
      :                          @14012
204963: 95 11 d0                 sp = sp + 0xffffffffffffffd0
204966: 7b 10 28                 u64 [sp + 0x28] = ra
204969: 7b 15 20                 u64 [sp + 0x20] = s0
204972: 7b 16 18                 u64 [sp + 0x18] = s1
204975: 7b 17 10                 u64 [sp + 0x10] = a0
204978: 33 04                    t2 = 0
204980: 7b 18 08                 u64 [sp + 0x8] = a1
204983: 82 82                    t0 = u64 [a1]
204985: 33 08 1b 31 01           a1 = 0x1311b
204990: 33 03 04                 t1 = 0x4
204993: 33 07 f0 2f 01           a0 = 0x12ff0
204998: 28 2f                    jump @14017
      :                          @14013
205000: 84 3a e0                 a3 = t1 & 0xffffffffffffffe0
205003: 52 1a a0 1c 01           jump @14041 if a3 != 4294967200
      :                          @14014
205008: 95 4b 02                 a4 = t2 + 0x2
205011: d8 9b 0a                 a3 = a4 <u a2
205014: c8 b2 0c                 a5 = t0 + a4
205017: da a7 0c                 a5 = a0 if a3 == 0
205020: 7c ca                    a3 = u8 [a5]
205022: 84 aa c0 00              a3 = a3 & 0xc0
205026: 52 2a 80 00 05 01        jump @14041 if a3 != 128
      :                          @14015
205032: 95 4b 03                 a4 = t2 + 0x3
205035: 33 03 04                 t1 = 0x4
205038: 01                       fallthrough
      :                          @14016
205039: 64 b4                    t2 = a4
205041: ae 9b f6 00              jump @14041 if a4 >=u a2
      :                          @14017
205045: c8 42 0c                 a5 = t0 + t2
205048: 7c c0                    ra = u8 [a5]
205050: 6c 05                    s0 = sext.b ra
205052: 95 4b 01                 a4 = t2 + 0x1
205055: 59 05 f0                 jump @14016 if s0 >=s 0
      :                          @14018
205058: c8 08 06                 s1 = a1 + ra
205061: 7c 66                    s1 = u8 [s1]
205063: aa 36 28                 jump @14023 if s1 == t1
      :                          @14019
205066: 51 16 03 43              jump @14027 if s1 == 3
      :                          @14020
205070: 33 0a 02                 a3 = 0x2
205073: ab a6 d6 00              jump @14041 if s1 != a3
      :                          @14021
205077: d8 9b 06                 s1 = a4 <u a2
205080: c8 b2 0a                 a3 = t0 + a4
205083: da 67 0a                 a3 = a0 if s1 == 0
205086: 7c aa                    a3 = u8 [a3]
205088: 84 aa c0 00              a3 = a3 & 0xc0
205092: 52 2a 80 00 c3 00        jump @14041 if a3 != 128
      :                          @14022
205098: 95 4b 02                 a4 = t2 + 0x2
205101: 28 c2                    jump @14016
      :                          @14023
205103: d8 9b 0a                 a3 = a4 <u a2
205106: c8 b2 0c                 a5 = t0 + a4
205109: da a7 0c                 a5 = a0 if a3 == 0
205112: 7d c6                    s1 = i8 [a5]
205114: 51 20 f0 00 32           jump @14031 if ra == 240
      :                          @14024
205119: 52 20 f4 00 3a           jump @14033 if ra != 244
      :                          @14025
205124: 33 0a 8f                 a3 = 0xffffffffffffff8f
205127: af 6a 45                 jump @14034 if a3 >=s s1
      :                          @14026
205130: 28 9d 00                 jump @14041
      :                          @14027
205133: d8 9b 0a                 a3 = a4 <u a2
205136: c8 b2 0c                 a5 = t0 + a4
205139: da a7 0c                 a5 = a0 if a3 == 0
205142: 7d c3                    t1 = i8 [a5]
205144: 51 20 e0 00 70 ff        jump @14013 if ra == 224
      :                          @14028
205150: 52 20 ed 00 62           jump @14037 if ra != 237
      :                          @14029
205155: 33 0a 9f                 a3 = 0xffffffffffffff9f
205158: af 3a 6a ff              jump @14014 if a3 >=s t1
      :                          @14030
205162: 28 7d                    jump @14041
      :                          @14031
205164: 83 6a 70                 i32 a3 = s1 + 0x70
205167: 84 aa ff 00              a3 = a3 & 0xff
205171: 53 1a 30 19              jump @14034 if a3 <u 48
      :                          @14032
205175: 28 70                    jump @14041
      :                          @14033
205177: 83 55 0f                 i32 s0 = s0 + 0xf
205180: 84 5a ff 00              a3 = s0 & 0xff
205184: 88 aa 03                 a3 = a3 <u 0x3
205187: 89 6c c0                 a5 = s1 <s 0xffffffffffffffc0
205190: d2 ca 0a                 a3 = a3 & a5
205193: 51 0a 5e                 jump @14041 if a3 == 0
      :                          @14034
205196: 95 4b 02                 a4 = t2 + 0x2
205199: d8 9b 0a                 a3 = a4 <u a2
205202: c8 b2 0c                 a5 = t0 + a4
205205: da a7 0c                 a5 = a0 if a3 == 0
205208: 7c ca                    a3 = u8 [a5]
205210: 84 aa c0 00              a3 = a3 & 0xc0
205214: 52 2a 80 00 49           jump @14041 if a3 != 128
      :                          @14035
205219: 95 4b 03                 a4 = t2 + 0x3
205222: d8 9b 0a                 a3 = a4 <u a2
205225: c8 b2 0c                 a5 = t0 + a4
205228: da a7 0c                 a5 = a0 if a3 == 0
205231: 7c ca                    a3 = u8 [a5]
205233: 84 aa c0 00              a3 = a3 & 0xc0
205237: 52 2a 80 00 32           jump @14041 if a3 != 128
      :                          @14036
205242: 95 4b 04                 a4 = t2 + 0x4
205245: 28 32 ff                 jump @14016
      :                          @14037
205248: 83 5a 1f                 i32 a3 = s0 + 0x1f
205251: 84 aa ff 00              a3 = a3 & 0xff
205255: 55 1a 0c 0d              jump @14040 if a3 >=u 12
      :                          @14038
205259: 33 0a c0                 a3 = 0xffffffffffffffc0
205262: ad a3 02 ff              jump @14014 if t1 <s a3
      :                          @14039
205266: 28 15                    jump @14041
      :                          @14040
205268: 84 55 fe                 s0 = s0 & 0xfffffffffffffffe
205271: 95 55 12                 s0 = s0 + 0x12
205274: 88 5a 01                 a3 = s0 <u 0x1
205277: 89 3c c0                 a5 = t1 <s 0xffffffffffffffc0
205280: d2 ca 0a                 a3 = a3 & a5
205283: 52 0a ed fe              jump @14014 if a3 != 0
      :                          @14041
205287: c8 b2 07                 a0 = t0 + a4
205290: c9 b9 09                 a2 = a2 - a4
205293: 82 18 08                 a1 = u64 [sp + 0x8]
205296: 7b 87                    u64 [a1] = a0
205298: 7b 89 08                 u64 [a1 + 0x8] = a2
205301: c8 42 07                 a0 = t0 + t2
205304: c9 4b 0c                 a5 = a4 - t2
205307: 82 19 10                 a2 = u64 [sp + 0x10]
205310: 7b 92                    u64 [a2] = t0
205312: 7b 94 08                 u64 [a2 + 0x8] = t2
205315: 7b 97 10                 u64 [a2 + 0x10] = a0
205318: 7b 9c 18                 u64 [a2 + 0x18] = a5
205321: 82 10 28                 ra = u64 [sp + 0x28]
205324: 82 15 20                 s0 = u64 [sp + 0x20]
205327: 82 16 18                 s1 = u64 [sp + 0x18]
205330: 95 11 30                 sp = sp + 0x30
205333: 32 00                    ret
      :                          @14042
205335: 49 07                    u64 [a0 + 0] = 0
205337: 32 00                    ret
      :                          @14043 [@dyn 1605]
205339: 95 11 78 ff              sp = sp + 0xffffffffffffff78
205343: 7b 10 80 00              u64 [sp + 0x80] = ra
205347: 64 82                    t0 = a1
205349: 7c 77                    a0 = u8 [a0]
205351: 33 0a 81 00              a3 = 0x81
205355: 95 18 7f                 a1 = sp + 0x7f
205358: 33 03 37                 t1 = 0x37
205361: 01                       fallthrough
      :                          @14044
205362: 64 ab                    a4 = a3
205364: 84 7a 0f                 a3 = a0 & 0xf
205367: 97 77 38                 a0 = a0 << 0x38
205370: 98 77 3c                 a0 = a0 >> 0x3c
205373: 88 ac 0a                 a5 = a3 <u 0xa
205376: 33 09 30                 a2 = 0x30
205379: da c3 09                 a2 = t1 if a5 == 0
205382: be a9 09                 i32 a2 = a2 + a3
205385: 78 89                    u8 [a1] = a2
205387: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
205390: 95 ba ff                 a3 = a4 + 0xffffffffffffffff
205393: 52 07 e1                 jump @14044 if a0 != 0
      :                          @14045
205396: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
205399: 56 27 80 00 2b           jump @14048 if a0 >u 128
      :                          @14046
205404: 9a ac 81 00              a5 = 0x81 - a3
205408: 64 1b                    a4 = sp
205410: c8 7b 0b                 a4 = a4 + a0
205413: 33 09 4a 30 01           a2 = 0x1304a
205418: 33 08 01                 a1 = 0x1
205421: 33 0a 02                 a3 = 0x2
205424: 64 27                    a0 = t0
205426: 50 20 8c 0c 3a eb        ra = 3212, jump @13714
      :                          @14047 [@dyn 1606]
205432: 82 10 80 00              ra = u64 [sp + 0x80]
205436: 95 11 88 00              sp = sp + 0x88
205440: 32 00                    ret
      :                          @14048
205442: 00                       trap
      :                          @14049 [@dyn 1607]
205443: 95 11 78 ff              sp = sp + 0xffffffffffffff78
205447: 7b 10 80 00              u64 [sp + 0x80] = ra
205451: 64 82                    t0 = a1
205453: 81 7a                    a3 = i32 [a0]
205455: 33 08 81 00              a1 = 0x81
205459: 95 17 7f                 a0 = sp + 0x7f
205462: 33 03 57                 t1 = 0x57
205465: 01                       fallthrough
      :                          @14050
205466: 64 8b                    a4 = a1
205468: 8b ac 04                 i32 a5 = a3 >> 0x4
205471: 84 aa 0f                 a3 = a3 & 0xf
205474: 88 a8 0a                 a1 = a3 <u 0xa
205477: 33 09 30                 a2 = 0x30
205480: da 83 09                 a2 = t1 if a1 == 0
205483: be a9 09                 i32 a2 = a2 + a3
205486: 78 79                    u8 [a0] = a2
205488: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
205491: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
205494: 64 ca                    a3 = a5
205496: 52 0c e2                 jump @14050 if a5 != 0
      :                          @14051
205499: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
205502: 56 27 80 00 2b           jump @14054 if a0 >u 128
      :                          @14052
205507: 9a 8c 81 00              a5 = 0x81 - a1
205511: 64 1b                    a4 = sp
205513: c8 7b 0b                 a4 = a4 + a0
205516: 33 09 4a 30 01           a2 = 0x1304a
205521: 33 08 01                 a1 = 0x1
205524: 33 0a 02                 a3 = 0x2
205527: 64 27                    a0 = t0
205529: 50 20 90 0c d3 ea        ra = 3216, jump @13714
      :                          @14053 [@dyn 1608]
205535: 82 10 80 00              ra = u64 [sp + 0x80]
205539: 95 11 88 00              sp = sp + 0x88
205543: 32 00                    ret
      :                          @14054
205545: 00                       trap
      :                          @14055 [@dyn 1609]
205546: 95 11 78 ff              sp = sp + 0xffffffffffffff78
205550: 7b 10 80 00              u64 [sp + 0x80] = ra
205554: 81 79                    a2 = i32 [a0]
205556: 64 82                    t0 = a1
205558: 33 08 81 00              a1 = 0x81
205562: 95 17 7f                 a0 = sp + 0x7f
205565: 01                       fallthrough
      :                          @14056
205566: 64 8a                    a3 = a1
205568: 8b 9b 01                 i32 a4 = a2 >> 0x1
205571: 84 99 01                 a2 = a2 & 0x1
205574: 86 98 30                 a1 = a2 | 0x30
205577: 78 78                    u8 [a0] = a1
205579: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
205582: 95 a8 ff                 a1 = a3 + 0xffffffffffffffff
205585: 64 b9                    a2 = a4
205587: 52 0b eb                 jump @14056 if a4 != 0
      :                          @14057
205590: 95 a7 fe                 a0 = a3 + 0xfffffffffffffffe
205593: 56 27 80 00 2b           jump @14060 if a0 >u 128
      :                          @14058
205598: 9a 8c 81 00              a5 = 0x81 - a1
205602: 64 1b                    a4 = sp
205604: c8 7b 0b                 a4 = a4 + a0
205607: 33 09 4c 30 01           a2 = 0x1304c
205612: 33 08 01                 a1 = 0x1
205615: 33 0a 02                 a3 = 0x2
205618: 64 27                    a0 = t0
205620: 50 20 94 0c 78 ea        ra = 3220, jump @13714
      :                          @14059 [@dyn 1610]
205626: 82 10 80 00              ra = u64 [sp + 0x80]
205630: 95 11 88 00              sp = sp + 0x88
205634: 32 00                    ret
      :                          @14060
205636: 00                       trap
      :                          @14061 [@dyn 1611]
205637: 81 77                    a0 = i32 [a0]
205639: 89 7a                    a3 = a0 <s 0
205641: 85 a9 01                 a2 = a3 ^ 0x1
205644: 97 7b 20                 a4 = a0 << 0x20
205647: 98 bb 20                 a4 = a4 >> 0x20
205650: 9a 77                    a0 = -a0
205652: da ab 07                 a0 = a4 if a3 == 0
205655: 64 8a                    a3 = a1
205657: 64 98                    a1 = a2
205659: 64 a9                    a2 = a3
205661: 28 21 e9                 jump @13704
      :                          @14062 [@dyn 1612]
205664: 82 79                    a2 = u64 [a0]
205666: 9a 97                    a0 = -a2
205668: e3 79 07                 a0 = maxs(a2, a0)
205671: 85 99 ff                 a2 = a2 ^ 0xffffffffffffffff
205674: 98 99 3f                 a2 = a2 >> 0x3f
205677: 64 8a                    a3 = a1
205679: 64 98                    a1 = a2
205681: 64 a9                    a2 = a3
205683: 28 0b e9                 jump @13704
      :                          @14063
205686: 51 08 9b 00              jump @14084 if a1 == 0
      :                          @14064
205690: 64 79                    a2 = a0
205692: 7c 77                    a0 = u8 [a0]
205694: 51 07 91 00              jump @14083 if a0 == 0
      :                          @14065
205698: 51 27 ff 00 90 00        jump @14085 if a0 == 255
      :                          @14066
205704: 6c 7a                    a3 = sext.b a0
205706: 57 0a 09                 jump @14068 if a3 <s 0
      :                          @14067
205709: 33 0a                    a3 = 0
205711: 33 08                    a1 = 0
205713: 28 73                    jump @14082
      :                          @14068
205715: 55 27 c0 00 0d           jump @14070 if a0 >=u 192
      :                          @14069
205720: 33 0a 01                 a3 = 0x1
205723: 33 0b 80                 a4 = 0xffffffffffffff80
205726: 28 4a                    jump @14079
      :                          @14070
205728: 55 27 e0 00 0e           jump @14072 if a0 >=u 224
      :                          @14071
205733: 33 0a 02                 a3 = 0x2
205736: 33 0b 40 ff              a4 = 0xffffffffffffff40
205740: 28 3c                    jump @14079
      :                          @14072
205742: 55 27 f0 00 0e           jump @14074 if a0 >=u 240
      :                          @14073
205747: 33 0a 03                 a3 = 0x3
205750: 33 0b 20 ff              a4 = 0xffffffffffffff20
205754: 28 2e                    jump @14079
      :                          @14074
205756: 55 27 f8 00 0e           jump @14076 if a0 >=u 248
      :                          @14075
205761: 33 0a 04                 a3 = 0x4
205764: 33 0b 10 ff              a4 = 0xffffffffffffff10
205768: 28 20                    jump @14079
      :                          @14076
205770: 55 27 fc 00 0e           jump @14078 if a0 >=u 252
      :                          @14077
205775: 33 0a 05                 a3 = 0x5
205778: 33 0b 08 ff              a4 = 0xffffffffffffff08
205782: 28 12                    jump @14079
      :                          @14078
205784: 88 7a fe 00              a3 = a0 <u 0xfe
205788: 33 0b 04 ff              a4 = 0xffffffffffffff04
205792: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
205796: 85 aa 07                 a3 = a3 ^ 0x7
205799: 01                       fallthrough
      :                          @14079
205800: ae 8a 2b                 jump @14086 if a3 >=u a1
      :                          @14080
205803: 33 08                    a1 = 0
205805: c8 b7 07                 a0 = a0 + a4
205808: 64 ab                    a4 = a3
205810: 01                       fallthrough
      :                          @14081
205811: c8 b9 0c                 a5 = a2 + a4
205814: 7c cc                    a5 = u8 [a5]
205816: 97 88 08                 a1 = a1 << 0x8
205819: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
205822: d4 c8 08                 a1 = a1 | a5
205825: 52 0b f2                 jump @14081 if a4 != 0
      :                          @14082
205828: 8a a9 03                 i32 a2 = a3 << 0x3
205831: cf 97 07                 a0 = a0 << a2
205834: c8 87 07                 a0 = a0 + a1
205837: 32 00                    ret
      :                          @14083
205839: 32 00                    ret
      :                          @14084
205841: 00                       trap
      :                          @14085
205842: 00                       trap
      :                          @14086
205843: 00                       trap
      :                          @14087 [@dyn 1613]
205844: 95 11 d0                 sp = sp + 0xffffffffffffffd0
205847: 7b 10 28                 u64 [sp + 0x28] = ra
205850: 7b 15 20                 u64 [sp + 0x20] = s0
205853: 7b 16 18                 u64 [sp + 0x18] = s1
205856: 64 86                    s1 = a1
205858: 82 88 28                 a1 = u64 [a1 + 0x28]
205861: 82 6a 20                 a3 = u64 [s1 + 0x20]
205864: 82 8b 18                 a4 = u64 [a1 + 0x18]
205867: 64 75                    s0 = a0
205869: 33 08 08 30 01           a1 = 0x13008
205874: 33 09 01                 a2 = 0x1
205877: 64 a7                    a0 = a3
205879: b4 b0 02 9c 0c           ra = 3228, jump [a4]
      :                          @14088 [@dyn 1614]
205884: 7b 16                    u64 [sp] = s1
205886: 78 17 08                 u8 [sp + 0x8] = a0
205889: 46 11 09                 u8 [sp + 9] = 0
205892: 7b 15 10                 u64 [sp + 0x10] = s0
205895: 33 09 4a                 a2 = 0x4a
205898: 64 17                    a0 = sp
205900: 95 18 10                 a1 = sp + 0x10
205903: 50 20 9e 0c 80 f5        ra = 3230, jump @13952
      :                          @14089 [@dyn 1615]
205909: 33 07 01                 a0 = 0x1
205912: 7c 18 08                 a1 = u8 [sp + 0x8]
205915: 52 08 1b                 jump @14091 if a1 != 0
      :                          @14090
205918: 82 17                    a0 = u64 [sp]
205920: 82 78 28                 a1 = u64 [a0 + 0x28]
205923: 82 77 20                 a0 = u64 [a0 + 0x20]
205926: 82 8a 18                 a3 = u64 [a1 + 0x18]
205929: 33 08 49 30 01           a1 = 0x13049
205934: 33 09 01                 a2 = 0x1
205937: b4 a0 02 a0 0c           ra = 3232, jump [a3]
      :                          @14091 [@dyn 1616]
205942: 82 10 28                 ra = u64 [sp + 0x28]
205945: 82 15 20                 s0 = u64 [sp + 0x20]
205948: 82 16 18                 s1 = u64 [sp + 0x18]
205951: 95 11 30                 sp = sp + 0x30
205954: 32 00                    ret
