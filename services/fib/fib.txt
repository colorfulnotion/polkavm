// RO data = 744/744 bytes
// RW data = 4120/73824 bytes
// Stack size = 65536 bytes
// RO data = [102, 105, 98, 78, 32, 110, 117, 109, 95, 115, 101, 103, 109, 101, 110, 116, 115, 61, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 102, 105, 98, 32, 32, 32, 32, 32, 32, 115, 101, 110, 100, 101, 114, 61, 32, 97, 109, 111, 117, 110, 116, 61, 32, 114, 101, 115, 117, 108, 116, 61, 40, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 64, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 70, 73, 66, 32, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 58, 32, 116, 105, 109, 101, 115, 108, 111, 116, 61, 32, 115, 101, 114, 118, 105, 99, 101, 95, 105, 110, 100, 101, 120, 61, 32, 114, 101, 99, 101, 105, 118, 101, 114, 61, 32, 109, 101, 109, 111, 61, 32, 103, 97, 115, 95, 108, 105, 109, 105, 116, 61, 0, 0, 0, 0, 104, 0, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 130, 0, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 48, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 145, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 56, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 155, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 161, 0, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 70, 73, 66, 32, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 32, 103, 97, 115, 58, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 52, 41, 0, 0, 0, 32, 1, 1, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 57, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 138, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 140, 0, 0, 0, 0, 0, 0, 0, 146, 0, 0, 0, 0, 0, 0, 0, 154, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 190, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 192, 0, 0, 0, 0, 0, 0, 0, 198, 0, 0, 0, 0, 0, 0, 0, 202, 0, 0, 0, 0, 0, 0, 0, 44, 32, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 119, 114, 105, 116, 101, 95, 114, 101, 115, 117, 108, 116, 32, 107, 101, 121, 61, 44, 32, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 0, 168, 2, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 185, 2, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0]
// RW data = [235, 57, 12, 2, 231, 1, 233, 195, 88, 75, 252, 92, 228, 140, 100, 252, 128, 69, 38, 119, 143, 230, 252, 62, 81, 133, 15, 205, 157, 177, 149, 18, 213, 57, 90, 100, 2, 167, 47, 172, 60, 22, 159, 249, 186, 230, 130, 110, 237, 194, 201, 77, 201, 154, 183, 236, 96, 229, 251, 128, 0, 3, 15, 213, 76, 254, 61, 156, 41, 239, 199, 102, 170, 211, 211, 120, 30, 204, 156, 126, 208, 97, 108, 121, 159, 178, 236, 206, 224, 238, 24, 151, 201, 113, 163, 134, 245, 29, 211, 199, 14, 14, 188, 195, 5, 17, 17, 44, 125, 106, 0, 138, 100, 99, 200, 161, 187, 126, 232, 110, 104, 55, 135, 203, 250, 200, 58, 69, 22, 203, 68, 23, 227, 224, 33, 4, 225, 229, 162, 232, 28, 37, 43, 149, 238, 81, 37, 240, 241, 167, 202, 252, 49, 80, 19, 82, 108, 30, 1, 221, 31, 132, 147, 223, 172, 131, 100, 187, 96, 217, 132, 215, 110, 89, 160, 194, 34, 123, 18, 128, 80, 114, 37, 53, 233, 253, 163, 255, 49, 62, 68, 124, 254, 17, 50, 36, 88, 72, 180, 54, 247, 134, 62, 101, 32, 233, 199, 144, 157, 95, 29, 43, 172, 73, 24, 236, 38, 103, 147, 26, 210, 149, 82, 236, 204, 164, 23, 249, 235, 40, 130, 212, 44, 105, 83, 116, 210, 114, 22, 235, 64, 243, 41, 101, 103, 30, 82, 136, 67, 160, 100, 205, 47, 241, 197, 82, 7, 37, 207, 46, 87, 7, 107, 145, 23, 250, 252, 139, 168, 50, 199, 248, 135, 54, 142, 3, 182, 80, 107, 207, 28, 170, 153, 179, 155, 170, 185, 49, 84, 25, 225, 2, 92, 116, 244, 68, 84, 136, 21, 137, 106, 95, 118, 5, 95, 135, 87, 217, 202, 150, 70, 9, 229, 14, 141, 225, 96, 190, 220, 103, 170, 105, 215, 137, 92, 139, 141, 175, 140, 159, 150, 87, 133, 30, 240, 127, 2, 210, 254, 165, 189, 140, 148, 251, 116, 224, 196, 17, 92, 96, 130, 157, 1, 138, 139, 68, 91, 63, 13, 18, 98, 43, 234, 19, 38, 85, 255, 89, 183, 189, 101, 46, 38, 186, 197, 47, 31, 79, 204, 45, 214, 80, 124, 117, 179, 197, 29, 224, 189, 125, 15, 125, 65, 63, 231, 112, 161, 250, 178, 4, 72, 85, 74, 217, 70, 37, 221, 45, 96, 213, 61, 203, 198, 132, 253, 85, 122, 31, 127, 225, 155, 240, 205, 93, 15, 25, 157, 244, 3, 126, 75, 219, 200, 99, 23, 237, 152, 72, 251, 107, 61, 156, 129, 3, 192, 204, 158, 1, 180, 107, 126, 108, 2, 245, 57, 237, 229, 19, 147, 23, 246, 212, 211, 118, 223, 14, 126, 214, 223, 152, 60, 232, 142, 108, 66, 112, 236, 113, 83, 62, 136, 13, 139, 224, 182, 78, 67, 68, 232, 42, 69, 233, 166, 182, 23, 95, 200, 62, 196, 127, 211, 178, 211, 215, 30, 98, 100, 112, 255, 224, 139, 106, 207, 108, 47, 106, 190, 248, 49, 81, 245, 2, 19, 38, 79, 80, 99, 16, 3, 173, 152, 205, 86, 188, 148, 127, 130, 156, 51, 137, 129, 111, 6, 86, 100, 175, 163, 119, 16, 187, 66, 73, 47, 116, 51, 111, 179, 230, 50, 247, 245, 197, 56, 45, 89, 148, 177, 84, 129, 74, 37, 114, 197, 88, 150, 218, 87, 190, 10, 180, 167, 105, 165, 196, 95, 58, 209, 243, 214, 198, 125, 162, 175, 163, 204, 187, 196, 186, 151, 71, 221, 44, 129, 49, 238, 21, 3, 59, 75, 33, 0, 131, 62, 78, 64, 66, 158, 220, 240, 239, 20, 72, 191, 75, 228, 53, 171, 222, 209, 222, 254, 130, 219, 171, 118, 51, 39, 2, 230, 11, 189, 214, 222, 133, 19, 172, 214, 192, 188, 156, 109, 9, 26, 247, 123, 201, 119, 230, 124, 124, 213, 50, 74, 78, 107, 27, 5, 11, 106, 178, 249, 14, 169, 228, 31, 41, 112, 62, 169, 141, 153, 14, 145, 137, 216, 52, 28, 51, 143, 10, 44, 244, 137, 94, 72, 13, 148, 231, 211, 41, 176, 251, 221, 183, 111, 197, 209, 224, 145, 8, 215, 107, 225, 1, 68, 93, 230, 141, 49, 97, 73, 44, 151, 116, 42, 177, 175, 147, 134, 243, 252, 118, 246, 137, 62, 8, 127, 131, 88, 79, 23, 211, 120, 90, 193, 238, 131, 150, 100, 33, 179, 23, 2, 137, 228, 89, 161, 144, 81, 206, 221, 5, 198, 158, 122, 202, 226, 84, 124, 148, 166, 223, 94, 254, 49, 109, 212, 174, 211, 61, 176, 141, 62, 191, 240, 18, 118, 239, 223, 64, 209, 248, 47, 53, 44, 63, 34, 236, 169, 28, 147, 72, 152, 39, 28, 176, 165, 251, 77, 56, 51, 149, 42, 182, 124, 113, 30, 30, 27, 189, 174, 139, 14, 45, 114, 57, 46, 187, 230, 86, 186, 121, 92, 45, 86, 40, 155, 2, 229, 178, 139, 200, 34, 165, 58, 102, 101, 216, 94, 187, 7, 113, 18, 233, 18, 155, 185, 162, 17, 232, 49, 191, 11, 165, 3, 169, 126, 237, 33, 162, 50, 88, 148, 249, 67, 195, 3, 224, 234, 97, 176, 185, 15, 93, 75, 95, 92, 238, 23, 2, 203, 57, 213, 98, 8, 153, 151, 130, 51, 67, 33, 105, 201, 97, 80, 77, 137, 169, 249, 195, 123, 36, 255, 32, 77, 202, 186, 7, 149, 113, 75, 84, 88, 19, 130, 201, 93, 140, 114, 108, 177, 214, 82, 153, 170, 246, 145, 56, 28, 183, 171, 124, 92, 166, 252, 68, 168, 206, 4, 239, 113, 116, 138, 184, 207, 166, 8, 168, 26, 190, 26, 225, 166, 11, 207, 139, 106, 20, 231, 250, 119, 33, 207, 124, 204, 86, 19, 52, 189, 82, 60, 77, 26, 35, 43, 170, 249, 225, 72, 26, 213, 73, 173, 171, 109, 210, 76, 205, 70, 151, 37, 209, 130, 155, 183, 135, 26, 75, 20, 184, 107, 219, 198, 0, 250, 22, 164, 77, 135, 113, 183, 154, 208, 228, 11, 62, 138, 38, 137, 133, 209, 212, 18, 132, 203, 227, 251, 196, 36, 131, 228, 147, 56, 189, 180, 224, 210, 166, 8, 2, 131, 12, 233, 210, 80, 11, 233, 17, 6, 241, 118, 169, 170, 103, 129, 72, 224, 29, 113, 154, 203, 41, 149, 231, 24, 57, 191, 255, 75, 248, 185, 170, 245, 154, 31, 82, 171, 52, 7, 105, 196, 228, 74, 89, 175, 136, 28, 131, 37, 35, 146, 244, 2, 49, 147, 249, 22, 207, 194, 168, 81, 172, 136, 228, 75, 146, 85, 220, 194, 186, 83, 12, 126, 131, 96, 108, 21, 252, 119, 79, 11, 245, 46, 108, 105, 203, 218, 9, 86, 107, 129, 169, 244, 70, 229, 81, 3, 106, 98, 99, 207, 28, 145, 38, 112, 100, 90, 204, 159, 209, 106, 199, 71, 59, 208, 95, 39, 81, 55, 172, 204, 6, 165, 13, 113, 68, 79, 7, 18, 217, 44, 36, 242, 125, 75, 199, 66, 27, 6, 49, 61, 239, 40, 244, 172, 207, 47, 227, 47, 47, 141, 192, 204, 248, 224, 68, 184, 224, 62, 9, 239, 255, 219, 165, 143, 174, 232, 55, 87, 150, 63, 49, 251, 53, 205, 35, 154, 59, 7, 166, 59, 80, 0, 178, 177, 149, 191, 45, 104, 8, 39, 59, 59, 167, 251, 15, 187, 32, 159, 96, 252, 55, 204, 231, 4, 20, 168, 107, 150, 17, 165, 148, 188, 35, 22, 237, 93, 35, 200, 87, 252, 52, 8, 50, 0, 158, 112, 67, 11, 101, 78, 234, 213, 61, 163, 40, 14, 249, 77, 130, 88, 115, 145, 182, 117, 26, 183, 120, 121, 66, 10, 166, 100, 221, 148, 142, 119, 165, 49, 29, 183, 214, 25, 121, 126, 184, 224, 66, 13, 166, 122, 124, 98, 92, 86, 143, 162, 66, 176, 161, 156, 72, 189, 177, 50, 79, 240, 5, 245, 46, 167, 124, 205, 209, 139, 4, 63, 0, 142, 73, 145, 160, 206, 189, 186, 201, 167, 121, 220, 111, 228, 185, 193, 61, 173, 227, 254, 138, 173, 133, 200, 137, 177, 250, 99, 41, 122, 254, 189, 235, 139, 251, 255, 92, 156, 171, 217, 187, 54, 31, 83, 23, 225, 219, 122, 45, 252, 64, 177, 35, 118, 205, 48, 27, 64, 213, 119, 138, 182, 177, 27, 118, 30, 47, 245, 186, 71, 63, 35, 189, 129, 21, 188, 157, 247, 236, 184, 14, 36, 210, 188, 175, 75, 254, 33, 83, 236, 147, 175, 46, 35, 84, 219, 13, 240, 189, 114, 104, 253, 53, 49, 10, 127, 198, 187, 232, 247, 44, 255, 159, 2, 163, 98, 80, 79, 112, 45, 33, 88, 5, 102, 252, 193, 115, 125, 133, 187, 141, 172, 79, 58, 108, 162, 166, 36, 91, 50, 74, 42, 130, 29, 78, 90, 142, 197, 130, 222, 231, 233, 99, 100, 42, 181, 167, 224, 240, 237, 130, 243, 240, 78, 255, 118, 183, 107, 0, 206, 74, 82, 3, 249, 94, 72, 170, 197, 248, 170, 90, 217, 90, 245, 127, 186, 66, 128, 196, 108, 115, 170, 255, 238, 47, 7, 8, 181, 224, 10, 73, 18, 238, 52, 127, 209, 157, 213, 45, 209, 103, 209, 93, 45, 76, 16, 203, 8, 221, 112, 196, 13, 240, 217, 56, 14, 95, 87, 195, 160, 249, 58, 112, 85, 89, 229, 48, 232, 19, 7, 155, 163, 171, 102, 254, 192, 240, 208, 153, 71, 251, 110, 204, 80, 233, 201, 62, 170, 59, 151, 253, 1, 93, 20, 55, 119, 135, 83, 18, 190, 157, 219, 77, 77, 94, 115, 185, 232, 162, 172, 11, 194, 2, 121, 231, 26, 76, 184, 242, 62, 132, 196, 44, 75, 160, 234, 66, 115, 91, 162, 199, 19, 116, 211, 27, 87, 215, 2, 205, 73, 175, 34, 65, 20, 215, 139, 114, 21, 104, 22, 241, 51, 90, 35, 9, 75, 211, 217, 205, 219, 155, 173, 20, 117, 159, 98, 30, 104, 97, 13, 199, 17, 56, 243, 44, 234, 210, 175, 178, 35, 249, 2, 172, 184, 113, 22, 12, 0, 56, 228, 199, 168, 7, 194, 128, 136, 78, 161, 97, 37, 228, 201, 33, 90, 107, 3, 86, 78, 98, 205, 178, 120, 254, 57, 5, 78, 183, 130, 207, 225, 197, 230, 202, 3, 155, 132, 9, 36, 227, 136, 0, 185, 218, 93, 217, 152, 172, 87, 131, 65, 87, 237, 86, 91, 192, 109, 19, 48, 151, 115, 65, 217, 58, 194, 195, 173, 97, 70, 119, 169, 200, 63, 34, 214, 126, 146, 19, 149, 224, 55, 65, 63, 68, 66, 72, 119, 164, 222, 188, 56, 203, 123, 193, 46, 128, 195, 64, 137, 211, 35, 133, 204, 77, 214, 105, 78, 230, 219, 59, 26, 198, 75, 167, 65, 110, 24, 155, 81, 121, 100, 185, 200, 22, 137, 216, 108, 99, 200, 85, 170, 70, 233, 62, 44, 249, 201, 203, 135, 231, 140, 70, 220, 194, 109, 191, 204, 21, 185, 21, 149, 184, 134, 41, 206, 9, 2, 72, 242, 55, 236, 95, 23, 15, 136, 204, 116, 62, 223, 87, 111, 115, 4, 210, 169, 78, 136, 76, 211, 133, 113, 202, 5, 183, 190, 194, 54, 50, 49, 15, 100, 118, 33, 90, 24, 9, 106, 147, 215, 197, 0, 92, 6, 255, 87, 55, 120, 203, 232, 107, 38, 144, 150, 208, 241, 32, 176, 62, 5, 187, 227, 145, 67, 22, 33, 217, 24, 6, 171, 218, 85, 16, 203, 63, 10, 163, 237, 34, 220, 170, 216, 15, 151, 20, 182, 208, 165, 128, 246, 149, 182, 156, 162, 118, 179, 92, 230, 138, 254, 112, 105, 168, 221, 29, 242, 16, 140, 21, 78, 111, 53, 28, 44, 19, 228, 199, 112, 182, 227, 60, 58, 137, 62, 93, 58, 5, 94, 78, 226, 93, 192, 177, 79, 57, 149, 138, 88, 81, 92, 34, 185, 210, 31, 66, 27, 225, 192, 39, 74, 242, 26, 139, 193, 77, 109, 76, 117, 205, 217, 47, 95, 10, 230, 84, 200, 16, 135, 25, 235, 191, 65, 118, 146, 28, 184, 26, 27, 41, 162, 15, 47, 184, 224, 123, 175, 98, 122, 250, 240, 38, 23, 249, 113, 173, 227, 210, 115, 33, 96, 208, 202, 167, 84, 88, 194, 150, 65, 148, 40, 132, 102, 73, 164, 60, 230, 58, 9, 130, 167, 61, 134, 50, 203, 133, 69, 118, 87, 231, 50, 53, 150, 215, 217, 246, 123, 108, 192, 217, 243, 103, 183, 126, 136, 214, 139, 151, 231, 1, 147, 66, 67, 123, 15, 253, 232, 162, 188, 81, 251, 211, 174, 185, 34, 62, 181, 100, 115, 119, 246, 231, 12, 90, 90, 186, 88, 51, 57, 106, 202, 137, 18, 93, 205, 207, 89, 213, 228, 154, 176, 80, 218, 86, 179, 4, 64, 162, 223, 28, 75, 185, 12, 174, 8, 22, 41, 6, 182, 19, 158, 124, 99, 226, 235, 43, 109, 252, 57, 213, 137, 14, 9, 54, 13, 249, 188, 13, 255, 231, 84, 29, 135, 141, 1, 164, 129, 146, 110, 191, 242, 184, 160, 253, 180, 167, 90, 186, 15, 77, 2, 64, 155, 104, 13, 10, 237, 103, 245, 158, 206, 142, 89, 97, 235, 90, 24, 15, 124, 4, 21, 141, 194, 230, 108, 91, 94, 188, 20, 113, 80, 206, 252, 234, 51, 113, 178, 186, 60, 144, 19, 248, 212, 78, 127, 22, 138, 185, 141, 48, 202, 54, 102, 101, 157, 158, 165, 177, 176, 74, 133, 64, 62, 168, 192, 234, 83, 6, 77, 31, 179, 211, 82, 226, 3, 211, 247, 216, 93, 108, 140, 195, 215, 57, 126, 57, 106, 197, 230, 61, 204, 231, 31, 191, 94, 66, 13, 19, 43, 176, 129, 156, 50, 20, 248, 71, 196, 182, 64, 159, 106, 254, 11, 94, 119, 113, 15, 101, 47, 251, 77, 234, 140, 228, 134, 207, 255, 65, 120, 62, 191, 93, 169, 243, 100, 255, 54, 240, 27, 204, 103, 142, 68, 108, 99, 109, 16, 73, 210, 244, 254, 28, 254, 224, 85, 109, 201, 251, 68, 116, 19, 116, 32, 78, 134, 241, 111, 61, 79, 138, 171, 102, 41, 23, 50, 208, 30, 51, 132, 171, 236, 132, 255, 34, 31, 3, 174, 23, 248, 33, 195, 146, 118, 107, 43, 166, 179, 210, 111, 244, 43, 197, 40, 52, 50, 190, 83, 88, 54, 153, 24, 119, 165, 75, 229, 215, 108, 118, 33, 234, 92, 235, 87, 189, 126, 6, 98, 81, 95, 42, 223, 217, 127, 92, 123, 216, 142, 148, 48, 117, 151, 146, 91, 156, 45, 69, 231, 69, 167, 46, 70, 156, 112, 222, 98, 191, 232, 191, 203, 213, 208, 125, 238, 82, 188, 2, 164, 145, 35, 74, 119, 181, 196, 110, 24, 15, 239, 0, 189, 162, 60, 192, 74, 142, 222, 21, 175, 55, 216, 134, 246, 34, 202, 80, 186, 42, 1, 55, 45, 165, 156, 160, 99, 29, 3, 66, 47, 172, 187, 31, 80, 128, 169, 211, 235, 58, 198, 167, 81, 197, 177, 146, 153, 196, 233, 3, 67, 231, 216, 30, 150, 104, 47, 255, 60, 120, 0, 35, 247, 183, 26, 135, 14, 210, 107, 226, 59, 228, 233, 6, 188, 16, 223, 150, 222, 217, 69, 46, 30, 110, 88, 76, 200, 58, 64, 123, 9, 85, 10, 100, 94, 11, 26, 20, 78, 48, 218, 71, 68, 92, 178, 122, 17, 39, 46, 78, 167, 58, 43, 116, 88, 66, 165, 4, 182, 203, 208, 182, 63, 96, 80, 88, 215, 248, 103, 217, 198, 3, 62, 171, 204, 34, 105, 131, 72, 233, 228, 188, 55, 236, 101, 209, 129, 44, 230, 23, 13, 129, 145, 150, 30, 60, 222, 228, 228, 77, 203, 80, 247, 99, 175, 170, 241, 108, 177, 144, 67, 190, 176, 2, 149, 85, 104, 98, 217, 94, 184, 80, 221, 19, 121, 26, 50, 202, 207, 165, 31, 152, 17, 8, 43, 61, 32, 59, 246, 216, 209, 24, 207, 220, 144, 124, 94, 41, 41, 252, 230, 27, 108, 158, 163, 87, 93, 190, 58, 31, 187, 149, 166, 251, 228, 158, 166, 111, 135, 158, 91, 81, 26, 208, 202, 44, 4, 78, 249, 148, 232, 8, 132, 4, 72, 203, 180, 233, 38, 94, 91, 25, 9, 149, 195, 146, 34, 229, 134, 184, 149, 86, 119, 10, 139, 53, 153, 63, 181, 206, 0, 52, 205, 63, 21, 139, 175, 197, 43, 133, 254, 80, 154, 248, 104, 164, 7, 195, 251, 161, 12, 128, 108, 122, 109, 143, 186, 227, 75, 40, 233, 111, 105, 62, 50, 104, 33, 253, 89, 24, 198, 232, 124, 166, 216, 144, 159, 34, 38, 29, 33, 139, 96, 250, 83, 54, 165, 239, 178, 198, 255, 244, 70, 167, 164, 140, 129, 103, 217, 23, 24, 96, 89, 96, 88, 44, 117, 190, 242, 228, 180, 3, 188, 123, 21, 22, 108, 170, 154, 11, 227, 224, 166, 119, 218, 47, 28, 156, 89, 114, 89, 197, 251, 183, 3, 230, 63, 43, 165, 24, 248, 227, 98, 1, 55, 139, 232, 212, 228, 114, 41, 162, 93, 200, 247, 216, 243, 233, 254, 212, 71, 114, 141, 37, 207, 146, 228, 52, 146, 174, 10, 161, 214, 185, 142, 191, 106, 153, 145, 224, 40, 110, 135, 18, 117, 50, 91, 150, 249, 171, 24, 32, 165, 137, 173, 202, 164, 63, 158, 222, 137, 130, 81, 82, 70, 235, 214, 15, 183, 184, 77, 161, 116, 11, 209, 112, 160, 6, 43, 33, 197, 223, 8, 116, 61, 203, 87, 189, 146, 46, 9, 195, 103, 240, 120, 68, 48, 141, 18, 181, 25, 223, 236, 244, 75, 23, 244, 156, 95, 171, 203, 120, 133, 153, 50, 81, 82, 207, 132, 141, 136, 37, 21, 128, 106, 77, 95, 119, 156, 147, 50, 153, 70, 82, 178, 155, 52, 36, 249, 116, 245, 224, 234, 182, 13, 61, 177, 32, 85, 85, 63, 115, 89, 90, 60, 221, 212, 79, 175, 167, 206, 159, 106, 104, 125, 16, 159, 33, 106, 75, 159, 18, 198, 154, 175, 40, 199, 199, 29, 171, 244, 196, 31, 149, 148, 110, 150, 208, 240, 225, 161, 94, 136, 129, 70, 8, 183, 223, 10, 132, 164, 86, 183, 125, 228, 26, 10, 171, 199, 23, 106, 32, 171, 40, 246, 19, 213, 70, 172, 185, 25, 133, 255, 18, 162, 233, 249, 29, 253, 144, 212, 249, 155, 193, 162, 169, 192, 3, 91, 72, 197, 103, 243, 171, 165, 57, 152, 128, 5, 48, 154, 208, 14, 203, 160, 23, 210, 13, 19, 117, 224, 78, 184, 92, 99, 142, 92, 134, 7, 88, 122, 124, 46, 105, 28, 11, 92, 17, 66, 211, 52, 219, 117, 77, 239, 82, 161, 223, 247, 35, 71, 252, 61, 211, 79, 191, 143, 177, 218, 95, 216, 199, 75, 170, 56, 77, 151, 144, 11, 108, 3, 211, 153, 242, 187, 115, 28, 168, 130, 120, 82, 24, 198, 254, 126, 165, 40, 64, 65, 110, 222, 230, 17, 70, 63, 144, 86, 124, 195, 92, 38, 226, 123, 172, 123, 7, 253, 186, 241, 83, 1, 75, 188, 12, 153, 79, 201, 102, 36, 134, 156, 250, 64, 249, 90, 150, 219, 253, 163, 67, 169, 39, 159, 191, 131, 190, 178, 232, 152, 179, 110, 55, 166, 232, 80, 164, 106, 73, 199, 151, 121, 117, 108, 173, 219, 18, 73, 125, 155, 22, 2, 27, 195, 141, 103, 30, 36, 235, 37, 44, 84, 19, 117, 106, 176, 250, 252, 88, 48, 212, 10, 176, 54, 218, 195, 65, 84, 26, 36, 181, 56, 238, 214, 255, 247, 141, 208, 113, 210, 197, 56, 120, 233, 241, 37, 173, 139, 53, 215, 169, 94, 168, 137, 172, 218, 19, 199, 187, 96, 141, 63, 188, 236, 203, 214, 21, 244, 86, 5, 110, 147, 14, 247, 63, 65, 183, 108, 100, 121, 220, 157, 188, 11, 214, 51, 238, 220, 77, 28, 72, 232, 131, 250, 150, 207, 22, 254, 18, 119, 174, 167, 241, 159, 233, 28, 13, 195, 210, 110, 22, 154, 28, 31, 190, 3, 251, 20, 118, 83, 147, 93, 252, 155, 129, 234, 244, 152, 145, 98, 202, 119, 71, 133, 55, 96, 159, 19, 18, 36, 188, 244, 96, 177, 73, 149, 47, 103, 156, 2, 251, 78, 44, 84, 234, 212, 218, 51, 202, 249, 233, 39, 224, 148, 181, 71, 255, 56, 126, 65, 123, 183, 161, 34, 47, 209, 166, 226, 227, 60, 97, 89, 57, 65, 93, 180, 40, 19, 107, 168, 18, 97, 195, 57, 37, 7, 11, 200, 143, 79, 21, 162, 193, 182, 189, 118, 47, 107, 54, 143, 208, 142, 164, 235, 30, 225, 119, 166, 125, 173, 254, 230, 7, 24, 162, 167, 176, 44, 39, 1, 214, 95, 193, 93, 178, 88, 58, 199, 235, 0, 195, 195, 168, 67, 120, 162, 161, 67, 157, 53, 161, 20, 97, 185, 156, 133, 240, 101, 186, 111, 42, 79, 93, 207, 86, 109, 111, 69, 50, 144, 163, 2, 4, 99, 49, 136, 130, 67, 93, 61, 224, 239, 95, 159, 150, 93, 114, 35, 32, 53, 241, 144, 133, 231, 250, 0, 91, 198, 250, 84, 158, 147, 223, 191, 203, 15, 59, 247, 155, 48, 196, 94, 137, 71, 50, 197, 207, 252, 25, 171, 152, 220, 42, 223, 29, 40, 226, 180, 232, 252, 163, 7, 220, 169, 145, 4, 255, 116, 233, 204, 27, 0, 45, 6, 62, 225, 7, 88, 73, 18, 18, 223, 36, 173, 14, 20, 190, 212, 52, 220, 214, 240, 3, 147, 112, 38, 166, 249, 216, 29, 83, 30, 84, 161, 14, 242, 251, 63, 8, 222, 58, 10, 154, 12, 210, 251, 139, 198, 95, 108, 183, 228, 83, 228, 161, 20, 59, 241, 233, 122, 228, 151, 1, 37, 164, 250, 144, 67, 27, 253, 133, 236, 113, 164, 111, 121, 231, 101, 66, 132, 64, 229, 146, 72, 191, 110, 9, 48, 32, 254, 130, 84, 220, 232, 98, 129, 126, 97, 61, 73, 181, 115, 103, 78, 52, 195, 130, 94, 97, 78, 64, 70, 80, 204, 43, 116, 114, 128, 37, 86, 101, 214, 190, 138, 17, 197, 158, 7, 41, 76, 247, 44, 144, 175, 171, 156, 14, 49, 255, 248, 122, 160, 30, 250, 174, 66, 107, 28, 122, 6, 229, 193, 51, 242, 186, 186, 141, 56, 47, 151, 196, 191, 236, 44, 253, 18, 164, 250, 95, 136, 142, 200, 208, 153, 176, 116, 27, 134, 216, 10, 128, 54, 234, 200, 166, 137, 89, 247, 192, 74, 40, 41, 124, 242, 5, 43, 38, 137, 70, 33, 109, 245, 172, 229, 20, 100, 204, 121, 2, 209, 116, 10, 7, 15, 24, 49, 154, 13, 106, 58, 235, 162, 244, 150, 228, 125, 131, 34, 25, 231, 18, 86, 100, 2, 22, 51, 108, 127, 127, 49, 207, 31, 195, 86, 14, 57, 27, 98, 250, 154, 45, 118, 192, 52, 132, 166, 53, 224, 6, 137, 185, 206, 44, 180, 251, 140, 14, 94, 8, 214, 143, 60, 169, 9, 34, 31, 137, 226, 17, 38, 124, 1, 63, 40, 224, 69, 3, 189, 84, 139, 12, 242, 19, 244, 40, 8, 67, 129, 249, 236, 76, 45, 150, 227, 187, 142, 140, 244, 169, 127, 130, 157, 77, 214, 53, 100, 222, 213, 3, 152, 205, 46, 251, 29, 231, 204, 253, 192, 106, 30, 114, 143, 184, 62, 236, 95, 203, 175, 84, 146, 79, 196, 31, 2, 95, 97, 90, 244, 176, 179, 230, 134, 189, 129, 31, 169, 3, 100, 240, 66, 166, 140, 160, 148, 50, 120, 56, 237, 200, 76, 22, 18, 70, 12, 196, 133, 216, 142, 174, 2, 25, 58, 179, 227, 50, 22, 124, 135, 25, 109, 39, 247, 68, 36, 73, 57, 40, 27, 136, 65, 161, 104, 220, 6, 178, 180, 125, 68, 247, 234, 177, 195, 139, 15, 214, 125, 107, 93, 207, 42, 168, 47, 31, 232, 97, 137, 76, 8, 7, 73, 179, 111, 25, 103, 19, 214, 169, 130, 234, 70, 158, 142, 234, 233, 11, 104, 86, 116, 178, 92, 71, 125, 222, 71, 207, 13, 59, 112, 97, 81, 150, 65, 231, 31, 90, 9, 239, 148, 254, 23, 0, 55, 88, 136, 16, 156, 226, 55, 146, 48, 35, 207, 148, 45, 175, 82, 114, 77, 13, 173, 26, 120, 16, 36, 178, 75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 2646
// Code size = 8006 bytes

      :                          @0
     0: 28 8a 04 00 00           jump @70
      :                          @1
     5: 28 10 07 00 00           jump @127
      :                          @2
    10: 28 61 09                 jump @176
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 80 89 34                 a2 = u32 [a1 + 0x34]
    24: 84 9a 10                 a3 = a2 & 0x10
    27: 52 0a 16                 jump @6 if a3 != 0
      :                          @4
    30: 84 99 20                 a2 = a2 & 0x20
    33: 52 09 40                 jump @9 if a2 != 0
      :                          @5
    36: 80 77                    a0 = u32 [a0]
    38: 82 10 80 00              ra = u64 [sp + 0x80]
    42: 95 11 88 00              sp = sp + 0x88
    46: 28 0d 14                 jump @353
      :                          @6
    49: 81 7b                    a4 = i32 [a0]
    51: 33 09 81 00              a2 = 0x81
    55: 95 17 7f                 a0 = sp + 0x7f
    58: 33 02 57                 t0 = 0x57
    61: 01                       fallthrough
      :                          @7
    62: 64 9c                    a5 = a2
    64: 8b ba 04                 i32 a3 = a4 >> 0x4
    67: 84 bb 0f                 a4 = a4 & 0xf
    70: 88 b3 0a                 t1 = a4 <u 0xa
    73: 33 09 30                 a2 = 0x30
    76: da 32 09                 a2 = t0 if t1 == 0
    79: be b9 09                 i32 a2 = a2 + a4
    82: 78 79                    u8 [a0] = a2
    84: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
    87: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
    90: 64 ab                    a4 = a3
    92: 52 0a e2                 jump @7 if a3 != 0
      :                          @8
    95: 28 30                    jump @11
      :                          @9
    97: 81 7b                    a4 = i32 [a0]
    99: 33 09 81 00              a2 = 0x81
   103: 95 17 7f                 a0 = sp + 0x7f
   106: 33 02 37                 t0 = 0x37
   109: 01                       fallthrough
      :                          @10
   110: 64 9c                    a5 = a2
   112: 8b ba 04                 i32 a3 = a4 >> 0x4
   115: 84 bb 0f                 a4 = a4 & 0xf
   118: 88 b3 0a                 t1 = a4 <u 0xa
   121: 33 09 30                 a2 = 0x30
   124: da 32 09                 a2 = t0 if t1 == 0
   127: be b9 09                 i32 a2 = a2 + a4
   130: 78 79                    u8 [a0] = a2
   132: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   135: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   138: 64 ab                    a4 = a3
   140: 52 0a e2                 jump @10 if a3 != 0
      :                          @11
   143: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   146: 56 27 80 00 27           jump @14 if a0 >u 128
      :                          @12
   151: 9a 9b 81 00              a4 = 0x81 - a2
   155: 64 1a                    a3 = sp
   157: c8 7a 0a                 a3 = a3 + a0
   160: 33 09 02                 a2 = 0x2
   163: 64 87                    a0 = a1
   165: 33 08 de 01 01           a1 = 0x101de
   170: 50 10 04 b9 14           ra = 4, jump @363
      :                          @13 [@dyn 2]
   175: 82 10 80 00              ra = u64 [sp + 0x80]
   179: 95 11 88 00              sp = sp + 0x88
   183: 32 00                    ret
      :                          @14
   185: 00                       trap
      :                          @15 [@dyn 3]
   186: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   190: 7b 10 80 00              u64 [sp + 0x80] = ra
   194: 80 89 34                 a2 = u32 [a1 + 0x34]
   197: 84 9a 10                 a3 = a2 & 0x10
   200: 52 0a 16                 jump @18 if a3 != 0
      :                          @16
   203: 84 99 20                 a2 = a2 & 0x20
   206: 52 09 40                 jump @21 if a2 != 0
      :                          @17
   209: 82 77                    a0 = u64 [a0]
   211: 82 10 80 00              ra = u64 [sp + 0x80]
   215: 95 11 88 00              sp = sp + 0x88
   219: 28 60 13                 jump @353
      :                          @18
   222: 82 7b                    a4 = u64 [a0]
   224: 33 09 81 00              a2 = 0x81
   228: 95 17 7f                 a0 = sp + 0x7f
   231: 33 02 57                 t0 = 0x57
   234: 01                       fallthrough
      :                          @19
   235: 64 9c                    a5 = a2
   237: 98 ba 04                 a3 = a4 >> 0x4
   240: 84 bb 0f                 a4 = a4 & 0xf
   243: 88 b3 0a                 t1 = a4 <u 0xa
   246: 33 09 30                 a2 = 0x30
   249: da 32 09                 a2 = t0 if t1 == 0
   252: be b9 09                 i32 a2 = a2 + a4
   255: 78 79                    u8 [a0] = a2
   257: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   260: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   263: 64 ab                    a4 = a3
   265: 52 0a e2                 jump @19 if a3 != 0
      :                          @20
   268: 28 30                    jump @23
      :                          @21
   270: 82 7b                    a4 = u64 [a0]
   272: 33 09 81 00              a2 = 0x81
   276: 95 17 7f                 a0 = sp + 0x7f
   279: 33 02 37                 t0 = 0x37
   282: 01                       fallthrough
      :                          @22
   283: 64 9c                    a5 = a2
   285: 98 ba 04                 a3 = a4 >> 0x4
   288: 84 bb 0f                 a4 = a4 & 0xf
   291: 88 b3 0a                 t1 = a4 <u 0xa
   294: 33 09 30                 a2 = 0x30
   297: da 32 09                 a2 = t0 if t1 == 0
   300: be b9 09                 i32 a2 = a2 + a4
   303: 78 79                    u8 [a0] = a2
   305: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   308: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   311: 64 ab                    a4 = a3
   313: 52 0a e2                 jump @22 if a3 != 0
      :                          @23
   316: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   319: 56 27 80 00 27           jump @26 if a0 >u 128
      :                          @24
   324: 9a 9b 81 00              a4 = 0x81 - a2
   328: 64 1a                    a3 = sp
   330: c8 7a 0a                 a3 = a3 + a0
   333: 33 09 02                 a2 = 0x2
   336: 64 87                    a0 = a1
   338: 33 08 de 01 01           a1 = 0x101de
   343: 50 10 08 0c 14           ra = 8, jump @363
      :                          @25 [@dyn 4]
   348: 82 10 80 00              ra = u64 [sp + 0x80]
   352: 95 11 88 00              sp = sp + 0x88
   356: 32 00                    ret
      :                          @26
   358: 00                       trap
      :                          @27 [@dyn 5]
   359: 95 11 c8                 sp = sp + 0xffffffffffffffc8
   362: 7b 10 30                 u64 [sp + 0x30] = ra
   365: 7b 15 28                 u64 [sp + 0x28] = s0
   368: 7b 16 20                 u64 [sp + 0x20] = s1
   371: 64 86                    s1 = a1
   373: 82 88 28                 a1 = u64 [a1 + 0x28]
   376: 82 6a 20                 a3 = u64 [s1 + 0x20]
   379: 82 8b 18                 a4 = u64 [a1 + 0x18]
   382: 64 75                    s0 = a0
   384: 33 08 a0 01 01           a1 = 0x101a0
   389: 33 09 01                 a2 = 0x1
   392: 64 a7                    a0 = a3
   394: b4 b0 01 0c              ra = 12, jump [a4]
      :                          @28 [@dyn 6]
   398: 7b 16 08                 u64 [sp + 0x8] = s1
   401: 78 17 10                 u8 [sp + 0x10] = a0
   404: 46 11 11                 u8 [sp + 17] = 0
   407: 33 06 80 00              s1 = 0x80
   411: 33 07 de 00              a0 = 0xde
   415: 7b 17                    u64 [sp] = a0
   417: 01                       fallthrough
      :                          @29
   418: 7b 15 18                 u64 [sp + 0x18] = s0
   421: 95 17 08                 a0 = sp + 0x8
   424: 95 18 18                 a1 = sp + 0x18
   427: 82 19                    a2 = u64 [sp]
   429: 50 10 0e 99 1a           ra = 14, jump @507
      :                          @30 [@dyn 7]
   434: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
   437: 95 55 01                 s0 = s0 + 0x1
   440: 52 06 ea                 jump @29 if s1 != 0
      :                          @31
   443: 7c 18 10                 a1 = u8 [sp + 0x10]
   446: 33 07 01                 a0 = 0x1
   449: 52 08 1b                 jump @33 if a1 != 0
      :                          @32
   452: 82 17 08                 a0 = u64 [sp + 0x8]
   455: 82 78 28                 a1 = u64 [a0 + 0x28]
   458: 82 77 20                 a0 = u64 [a0 + 0x20]
   461: 82 8a 18                 a3 = u64 [a1 + 0x18]
   464: 33 08 dd 01 01           a1 = 0x101dd
   469: 33 09 01                 a2 = 0x1
   472: b4 a0 01 10              ra = 16, jump [a3]
      :                          @33 [@dyn 8]
   476: 82 10 30                 ra = u64 [sp + 0x30]
   479: 82 15 28                 s0 = u64 [sp + 0x28]
   482: 82 16 20                 s1 = u64 [sp + 0x20]
   485: 95 11 38                 sp = sp + 0x38
   488: 32 00                    ret
      :                          @34 [@dyn 9]
   490: 95 11 d0                 sp = sp + 0xffffffffffffffd0
   493: 7b 10 28                 u64 [sp + 0x28] = ra
   496: 7b 15 20                 u64 [sp + 0x20] = s0
   499: 7b 16 18                 u64 [sp + 0x18] = s1
   502: 64 85                    s0 = a1
   504: 82 88 28                 a1 = u64 [a1 + 0x28]
   507: 82 5a 20                 a3 = u64 [s0 + 0x20]
   510: 82 8b 18                 a4 = u64 [a1 + 0x18]
   513: 64 76                    s1 = a0
   515: 33 08 a0 01 01           a1 = 0x101a0
   520: 33 09 01                 a2 = 0x1
   523: 64 a7                    a0 = a3
   525: b4 b0 01 14              ra = 20, jump [a4]
      :                          @35 [@dyn 10]
   529: 7b 15                    u64 [sp] = s0
   531: 78 17 08                 u8 [sp + 0x8] = a0
   534: 46 11 09                 u8 [sp + 9] = 0
   537: 7b 16 10                 u64 [sp + 0x10] = s1
   540: 33 05 de 00              s0 = 0xde
   544: 64 17                    a0 = sp
   546: 95 18 10                 a1 = sp + 0x10
   549: 33 09 de 00              a2 = 0xde
   553: 50 10 16 1d 1a           ra = 22, jump @507
      :                          @36 [@dyn 11]
   558: 95 67 01                 a0 = s1 + 0x1
   561: 7b 17 10                 u64 [sp + 0x10] = a0
   564: 64 17                    a0 = sp
   566: 95 18 10                 a1 = sp + 0x10
   569: 64 59                    a2 = s0
   571: 50 10 18 0b 1a           ra = 24, jump @507
      :                          @37 [@dyn 12]
   576: 95 67 02                 a0 = s1 + 0x2
   579: 7b 17 10                 u64 [sp + 0x10] = a0
   582: 64 17                    a0 = sp
   584: 95 18 10                 a1 = sp + 0x10
   587: 64 59                    a2 = s0
   589: 50 10 1a f9 19           ra = 26, jump @507
      :                          @38 [@dyn 13]
   594: 95 67 03                 a0 = s1 + 0x3
   597: 7b 17 10                 u64 [sp + 0x10] = a0
   600: 64 17                    a0 = sp
   602: 95 18 10                 a1 = sp + 0x10
   605: 64 59                    a2 = s0
   607: 50 10 1c e7 19           ra = 28, jump @507
      :                          @39 [@dyn 14]
   612: 95 67 04                 a0 = s1 + 0x4
   615: 7b 17 10                 u64 [sp + 0x10] = a0
   618: 64 17                    a0 = sp
   620: 95 18 10                 a1 = sp + 0x10
   623: 64 59                    a2 = s0
   625: 50 10 1e d5 19           ra = 30, jump @507
      :                          @40 [@dyn 15]
   630: 95 67 05                 a0 = s1 + 0x5
   633: 7b 17 10                 u64 [sp + 0x10] = a0
   636: 64 17                    a0 = sp
   638: 95 18 10                 a1 = sp + 0x10
   641: 64 59                    a2 = s0
   643: 50 10 20 c3 19           ra = 32, jump @507
      :                          @41 [@dyn 16]
   648: 95 67 06                 a0 = s1 + 0x6
   651: 7b 17 10                 u64 [sp + 0x10] = a0
   654: 64 17                    a0 = sp
   656: 95 18 10                 a1 = sp + 0x10
   659: 64 59                    a2 = s0
   661: 50 10 22 b1 19           ra = 34, jump @507
      :                          @42 [@dyn 17]
   666: 95 67 07                 a0 = s1 + 0x7
   669: 7b 17 10                 u64 [sp + 0x10] = a0
   672: 64 17                    a0 = sp
   674: 95 18 10                 a1 = sp + 0x10
   677: 64 59                    a2 = s0
   679: 50 10 24 9f 19           ra = 36, jump @507
      :                          @43 [@dyn 18]
   684: 95 67 08                 a0 = s1 + 0x8
   687: 7b 17 10                 u64 [sp + 0x10] = a0
   690: 64 17                    a0 = sp
   692: 95 18 10                 a1 = sp + 0x10
   695: 64 59                    a2 = s0
   697: 50 10 26 8d 19           ra = 38, jump @507
      :                          @44 [@dyn 19]
   702: 95 67 09                 a0 = s1 + 0x9
   705: 7b 17 10                 u64 [sp + 0x10] = a0
   708: 64 17                    a0 = sp
   710: 95 18 10                 a1 = sp + 0x10
   713: 64 59                    a2 = s0
   715: 50 10 28 7b 19           ra = 40, jump @507
      :                          @45 [@dyn 20]
   720: 95 67 0a                 a0 = s1 + 0xa
   723: 7b 17 10                 u64 [sp + 0x10] = a0
   726: 64 17                    a0 = sp
   728: 95 18 10                 a1 = sp + 0x10
   731: 64 59                    a2 = s0
   733: 50 10 2a 69 19           ra = 42, jump @507
      :                          @46 [@dyn 21]
   738: 95 67 0b                 a0 = s1 + 0xb
   741: 7b 17 10                 u64 [sp + 0x10] = a0
   744: 64 17                    a0 = sp
   746: 95 18 10                 a1 = sp + 0x10
   749: 64 59                    a2 = s0
   751: 50 10 2c 57 19           ra = 44, jump @507
      :                          @47 [@dyn 22]
   756: 95 67 0c                 a0 = s1 + 0xc
   759: 7b 17 10                 u64 [sp + 0x10] = a0
   762: 64 17                    a0 = sp
   764: 95 18 10                 a1 = sp + 0x10
   767: 64 59                    a2 = s0
   769: 50 10 2e 45 19           ra = 46, jump @507
      :                          @48 [@dyn 23]
   774: 95 67 0d                 a0 = s1 + 0xd
   777: 7b 17 10                 u64 [sp + 0x10] = a0
   780: 64 17                    a0 = sp
   782: 95 18 10                 a1 = sp + 0x10
   785: 64 59                    a2 = s0
   787: 50 10 30 33 19           ra = 48, jump @507
      :                          @49 [@dyn 24]
   792: 95 67 0e                 a0 = s1 + 0xe
   795: 7b 17 10                 u64 [sp + 0x10] = a0
   798: 64 17                    a0 = sp
   800: 95 18 10                 a1 = sp + 0x10
   803: 64 59                    a2 = s0
   805: 50 10 32 21 19           ra = 50, jump @507
      :                          @50 [@dyn 25]
   810: 95 67 0f                 a0 = s1 + 0xf
   813: 7b 17 10                 u64 [sp + 0x10] = a0
   816: 64 17                    a0 = sp
   818: 95 18 10                 a1 = sp + 0x10
   821: 64 59                    a2 = s0
   823: 50 10 34 0f 19           ra = 52, jump @507
      :                          @51 [@dyn 26]
   828: 95 67 10                 a0 = s1 + 0x10
   831: 7b 17 10                 u64 [sp + 0x10] = a0
   834: 64 17                    a0 = sp
   836: 95 18 10                 a1 = sp + 0x10
   839: 64 59                    a2 = s0
   841: 50 10 36 fd 18           ra = 54, jump @507
      :                          @52 [@dyn 27]
   846: 95 67 11                 a0 = s1 + 0x11
   849: 7b 17 10                 u64 [sp + 0x10] = a0
   852: 64 17                    a0 = sp
   854: 95 18 10                 a1 = sp + 0x10
   857: 64 59                    a2 = s0
   859: 50 10 38 eb 18           ra = 56, jump @507
      :                          @53 [@dyn 28]
   864: 95 67 12                 a0 = s1 + 0x12
   867: 7b 17 10                 u64 [sp + 0x10] = a0
   870: 64 17                    a0 = sp
   872: 95 18 10                 a1 = sp + 0x10
   875: 64 59                    a2 = s0
   877: 50 10 3a d9 18           ra = 58, jump @507
      :                          @54 [@dyn 29]
   882: 95 67 13                 a0 = s1 + 0x13
   885: 7b 17 10                 u64 [sp + 0x10] = a0
   888: 64 17                    a0 = sp
   890: 95 18 10                 a1 = sp + 0x10
   893: 64 59                    a2 = s0
   895: 50 10 3c c7 18           ra = 60, jump @507
      :                          @55 [@dyn 30]
   900: 95 67 14                 a0 = s1 + 0x14
   903: 7b 17 10                 u64 [sp + 0x10] = a0
   906: 64 17                    a0 = sp
   908: 95 18 10                 a1 = sp + 0x10
   911: 64 59                    a2 = s0
   913: 50 10 3e b5 18           ra = 62, jump @507
      :                          @56 [@dyn 31]
   918: 95 67 15                 a0 = s1 + 0x15
   921: 7b 17 10                 u64 [sp + 0x10] = a0
   924: 64 17                    a0 = sp
   926: 95 18 10                 a1 = sp + 0x10
   929: 64 59                    a2 = s0
   931: 50 10 40 a3 18           ra = 64, jump @507
      :                          @57 [@dyn 32]
   936: 95 67 16                 a0 = s1 + 0x16
   939: 7b 17 10                 u64 [sp + 0x10] = a0
   942: 64 17                    a0 = sp
   944: 95 18 10                 a1 = sp + 0x10
   947: 64 59                    a2 = s0
   949: 50 10 42 91 18           ra = 66, jump @507
      :                          @58 [@dyn 33]
   954: 95 67 17                 a0 = s1 + 0x17
   957: 7b 17 10                 u64 [sp + 0x10] = a0
   960: 64 17                    a0 = sp
   962: 95 18 10                 a1 = sp + 0x10
   965: 64 59                    a2 = s0
   967: 50 10 44 7f 18           ra = 68, jump @507
      :                          @59 [@dyn 34]
   972: 95 67 18                 a0 = s1 + 0x18
   975: 7b 17 10                 u64 [sp + 0x10] = a0
   978: 64 17                    a0 = sp
   980: 95 18 10                 a1 = sp + 0x10
   983: 64 59                    a2 = s0
   985: 50 10 46 6d 18           ra = 70, jump @507
      :                          @60 [@dyn 35]
   990: 95 67 19                 a0 = s1 + 0x19
   993: 7b 17 10                 u64 [sp + 0x10] = a0
   996: 64 17                    a0 = sp
   998: 95 18 10                 a1 = sp + 0x10
  1001: 64 59                    a2 = s0
  1003: 50 10 48 5b 18           ra = 72, jump @507
      :                          @61 [@dyn 36]
  1008: 95 67 1a                 a0 = s1 + 0x1a
  1011: 7b 17 10                 u64 [sp + 0x10] = a0
  1014: 64 17                    a0 = sp
  1016: 95 18 10                 a1 = sp + 0x10
  1019: 64 59                    a2 = s0
  1021: 50 10 4a 49 18           ra = 74, jump @507
      :                          @62 [@dyn 37]
  1026: 95 67 1b                 a0 = s1 + 0x1b
  1029: 7b 17 10                 u64 [sp + 0x10] = a0
  1032: 64 17                    a0 = sp
  1034: 95 18 10                 a1 = sp + 0x10
  1037: 64 59                    a2 = s0
  1039: 50 10 4c 37 18           ra = 76, jump @507
      :                          @63 [@dyn 38]
  1044: 95 67 1c                 a0 = s1 + 0x1c
  1047: 7b 17 10                 u64 [sp + 0x10] = a0
  1050: 64 17                    a0 = sp
  1052: 95 18 10                 a1 = sp + 0x10
  1055: 64 59                    a2 = s0
  1057: 50 10 4e 25 18           ra = 78, jump @507
      :                          @64 [@dyn 39]
  1062: 95 67 1d                 a0 = s1 + 0x1d
  1065: 7b 17 10                 u64 [sp + 0x10] = a0
  1068: 64 17                    a0 = sp
  1070: 95 18 10                 a1 = sp + 0x10
  1073: 64 59                    a2 = s0
  1075: 50 10 50 13 18           ra = 80, jump @507
      :                          @65 [@dyn 40]
  1080: 95 67 1e                 a0 = s1 + 0x1e
  1083: 7b 17 10                 u64 [sp + 0x10] = a0
  1086: 64 17                    a0 = sp
  1088: 95 18 10                 a1 = sp + 0x10
  1091: 64 59                    a2 = s0
  1093: 50 10 52 01 18           ra = 82, jump @507
      :                          @66 [@dyn 41]
  1098: 95 66 1f                 s1 = s1 + 0x1f
  1101: 7b 16 10                 u64 [sp + 0x10] = s1
  1104: 64 17                    a0 = sp
  1106: 95 18 10                 a1 = sp + 0x10
  1109: 64 59                    a2 = s0
  1111: 50 10 54 ef 17           ra = 84, jump @507
      :                          @67 [@dyn 42]
  1116: 33 07 01                 a0 = 0x1
  1119: 7c 18 08                 a1 = u8 [sp + 0x8]
  1122: 52 08 1a                 jump @69 if a1 != 0
      :                          @68
  1125: 82 17                    a0 = u64 [sp]
  1127: 82 78 28                 a1 = u64 [a0 + 0x28]
  1130: 82 77 20                 a0 = u64 [a0 + 0x20]
  1133: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1136: 33 08 dd 01 01           a1 = 0x101dd
  1141: 33 09 01                 a2 = 0x1
  1144: b4 a0 01 56              ra = 86, jump [a3]
      :                          @69 [@dyn 43]
  1148: 82 10 28                 ra = u64 [sp + 0x28]
  1151: 82 15 20                 s0 = u64 [sp + 0x20]
  1154: 82 16 18                 s1 = u64 [sp + 0x18]
  1157: 95 11 30                 sp = sp + 0x30
  1160: 32 00                    ret
      :                          @70 [export #0: 'refine']
  1162: 95 11 70 ff              sp = sp + 0xffffffffffffff70
  1166: 7b 10 88 00              u64 [sp + 0x88] = ra
  1170: 7b 15 80 00              u64 [sp + 0x80] = s0
  1174: 7b 16 78                 u64 [sp + 0x78] = s1
  1177: 64 86                    s1 = a1
  1179: 64 7a                    a3 = a0
  1181: 33 05 01                 s0 = 0x1
  1184: 7a 15 1c                 u32 [sp + 0x1c] = s0
  1187: 33 07 00 00 01           a0 = 0x10000
  1192: 53 16 04 40              jump @79 if s1 <u 4
      :                          @71
  1196: 7d a8                    a1 = i8 [a3]
  1198: 59 08 37                 jump @78 if a1 >=s 0
      :                          @72
  1201: 84 89 ff 00              a2 = a1 & 0xff
  1205: 33 05 02                 s0 = 0x2
  1208: 53 29 c0 00 2d           jump @78 if a2 <u 192
      :                          @73
  1213: 33 05 03                 s0 = 0x3
  1216: 53 29 e0 00 25           jump @78 if a2 <u 224
      :                          @74
  1221: 33 05 04                 s0 = 0x4
  1224: 53 29 f0 00 1d           jump @78 if a2 <u 240
      :                          @75
  1229: 33 05 05                 s0 = 0x5
  1232: 53 29 f8 00 15           jump @78 if a2 <u 248
      :                          @76
  1237: 33 05 06                 s0 = 0x6
  1240: 53 29 fc 00 0d           jump @78 if a2 <u 252
      :                          @77
  1245: 88 98 fe 00              a1 = a2 <u 0xfe
  1249: 9a 85 08                 s0 = 0x8 - a1
  1252: 01                       fallthrough
      :                          @78
  1253: ae 56 08                 jump @80 if s1 >=u s0
      :                          @79
  1256: 33 08                    a1 = 0
  1258: 28 db 00                 jump @103
      :                          @80
  1261: 64 a7                    a0 = a3
  1263: 64 58                    a1 = s0
  1265: 7b 1a 10                 u64 [sp + 0x10] = a3
  1268: 50 10 58 91 18           ra = 88, jump @524
      :                          @81 [@dyn 44]
  1273: aa 56 c4 00              jump @102 if s1 == s0
      :                          @82
  1277: 82 17 10                 a0 = u64 [sp + 0x10]
  1280: c8 57 07                 a0 = a0 + s0
  1283: 7d 78                    a1 = i8 [a0]
  1285: c9 56 06                 s1 = s1 - s0
  1288: 33 05 01                 s0 = 0x1
  1291: 59 08 37                 jump @89 if a1 >=s 0
      :                          @83
  1294: 84 89 ff 00              a2 = a1 & 0xff
  1298: 33 05 02                 s0 = 0x2
  1301: 53 29 c0 00 2d           jump @89 if a2 <u 192
      :                          @84
  1306: 33 05 03                 s0 = 0x3
  1309: 53 29 e0 00 25           jump @89 if a2 <u 224
      :                          @85
  1314: 33 05 04                 s0 = 0x4
  1317: 53 29 f0 00 1d           jump @89 if a2 <u 240
      :                          @86
  1322: 33 05 05                 s0 = 0x5
  1325: 53 29 f8 00 15           jump @89 if a2 <u 248
      :                          @87
  1330: 33 05 06                 s0 = 0x6
  1333: 53 29 fc 00 0d           jump @89 if a2 <u 252
      :                          @88
  1338: 88 98 fe 00              a1 = a2 <u 0xfe
  1342: 9a 85 08                 s0 = 0x8 - a1
  1345: 01                       fallthrough
      :                          @89
  1346: ac 56 7b                 jump @102 if s1 <u s0
      :                          @90
  1349: 64 58                    a1 = s0
  1351: 7b 17 10                 u64 [sp + 0x10] = a0
  1354: 50 10 5a 3b 18           ra = 90, jump @524
      :                          @91 [@dyn 45]
  1359: aa 56 6e                 jump @102 if s1 == s0
      :                          @92
  1362: 82 17 10                 a0 = u64 [sp + 0x10]
  1365: c8 57 07                 a0 = a0 + s0
  1368: 7d 78                    a1 = i8 [a0]
  1370: c9 56 05                 s0 = s1 - s0
  1373: 33 06 01                 s1 = 0x1
  1376: 59 08 37                 jump @99 if a1 >=s 0
      :                          @93
  1379: 84 89 ff 00              a2 = a1 & 0xff
  1383: 33 06 02                 s1 = 0x2
  1386: 53 29 c0 00 2d           jump @99 if a2 <u 192
      :                          @94
  1391: 33 06 03                 s1 = 0x3
  1394: 53 29 e0 00 25           jump @99 if a2 <u 224
      :                          @95
  1399: 33 06 04                 s1 = 0x4
  1402: 53 29 f0 00 1d           jump @99 if a2 <u 240
      :                          @96
  1407: 33 06 05                 s1 = 0x5
  1410: 53 29 f8 00 15           jump @99 if a2 <u 248
      :                          @97
  1415: 33 06 06                 s1 = 0x6
  1418: 53 29 fc 00 0d           jump @99 if a2 <u 252
      :                          @98
  1423: 88 98 fe 00              a1 = a2 <u 0xfe
  1427: 9a 86 08                 s1 = 0x8 - a1
  1430: 01                       fallthrough
      :                          @99
  1431: ac 65 7d 01              jump @126 if s0 <u s1
      :                          @100
  1435: 7b 17 10                 u64 [sp + 0x10] = a0
  1438: 64 68                    a1 = s1
  1440: 50 10 5c e5 17           ra = 92, jump @524
      :                          @101 [@dyn 46]
  1445: e4 65 08                 a1 = maxu(s0, s1)
  1448: c9 68 08                 a1 = a1 - s1
  1451: d8 78 09                 a2 = a1 <u a0
  1454: e4 78 08                 a1 = maxu(a1, a0)
  1457: c9 78 08                 a1 = a1 - a0
  1460: 88 88 20                 a1 = a1 <u 0x20
  1463: d4 98 08                 a1 = a1 | a2
  1466: 51 08 1c                 jump @104 if a1 == 0
      :                          @102
  1469: 33 08                    a1 = 0
  1471: 33 07 00 00 01           a0 = 0x10000
  1476: 01                       fallthrough
      :                          @103
  1477: 82 10 88 00              ra = u64 [sp + 0x88]
  1481: 82 15 80 00              s0 = u64 [sp + 0x80]
  1485: 82 16 78                 s1 = u64 [sp + 0x78]
  1488: 95 11 90 00              sp = sp + 0x90
  1492: 32 00                    ret
      :                          @104
  1494: 54 17 03 a2 00           jump @113 if a0 <=u 3
      :                          @105
  1499: 82 17 10                 a0 = u64 [sp + 0x10]
  1502: c8 76 06                 s1 = s1 + a0
  1505: 7c 67 01                 a0 = u8 [s1 + 0x1]
  1508: 7c 68                    a1 = u8 [s1]
  1510: 7c 69 02                 a2 = u8 [s1 + 0x2]
  1513: 7d 6a 03                 a3 = i8 [s1 + 0x3]
  1516: 97 77 08                 a0 = a0 << 0x8
  1519: d4 87 07                 a0 = a0 | a1
  1522: 97 99 10                 a2 = a2 << 0x10
  1525: 97 aa 18                 a3 = a3 << 0x18
  1528: d4 a9 09                 a2 = a2 | a3
  1531: d4 97 07                 a0 = a0 | a2
  1534: 3d 07 3c 10 03           u32 [0x3103c] = a0
  1539: 7a 17 1c                 u32 [sp + 0x1c] = a0
  1542: 95 17 1c                 a0 = sp + 0x1c
  1545: 7b 17 68                 u64 [sp + 0x68] = a0
  1548: 33 07 02                 a0 = 0x2
  1551: 7b 17 70                 u64 [sp + 0x70] = a0
  1554: 33 07 18 00 01           a0 = 0x10018
  1559: 7b 17 38                 u64 [sp + 0x38] = a0
  1562: 49 11 40 01              u64 [sp + 64] = 0x1
  1566: 49 11 58                 u64 [sp + 88] = 0
  1569: 95 18 68                 a1 = sp + 0x68
  1572: 7b 18 48                 u64 [sp + 0x48] = a1
  1575: 49 11 50 01              u64 [sp + 80] = 0x1
  1579: 95 17 20                 a0 = sp + 0x20
  1582: 95 18 38                 a1 = sp + 0x38
  1585: 50 10 5e d7 0a           ra = 94, jump @282
      :                          @106 [@dyn 47]
  1590: 82 15 28                 s0 = u64 [sp + 0x28]
  1593: 82 1b 30                 a4 = u64 [sp + 0x30]
  1596: 82 16 20                 s1 = u64 [sp + 0x20]
  1599: 33 07 02                 a0 = 0x2
  1602: 33 08                    a1 = 0
  1604: 33 09                    a2 = 0
  1606: 64 5a                    a3 = s0
  1608: 33 00 60                 ra = 0x60
  1611: 0a 64                    ecalli 100 // 'log'
  1613: 01                       fallthrough
      :                          @107 [@dyn 48]
  1614: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
  1619: 53 38 00 00 ff 25        jump @113 if a1 <u 4294901760
      :                          @108
  1625: 33 07 50 20 03           a0 = 0x32050
  1630: 95 77 00 00 01           a0 = a0 + 0x10000
  1635: 01                       fallthrough
      :                          @109
  1636: 82 78                    a1 = u64 [a0]
  1638: c9 87 09                 a2 = a0 - a1
  1641: ab 59 0f                 jump @113 if a2 != s0
      :                          @110
  1644: c9 68 09                 a2 = a1 - s1
  1647: 01                       fallthrough
      :                          @111
  1648: 82 7a                    a3 = u64 [a0]
  1650: ab 8a f2                 jump @109 if a3 != a1
      :                          @112
  1653: 7b 79                    u64 [a0] = a2
  1655: 01                       fallthrough
      :                          @113
  1656: 33 07 00 00 03           a0 = 0x30000
  1661: 33 08 08 10              a1 = 0x1008
  1665: 7b 17 08                 u64 [sp + 0x8] = a0
  1668: 33 05 08 10              s0 = 0x1008
  1672: 33 00 62                 ra = 0x62
  1675: 0a 07                    ecalli 7 // 'export'
  1677: 01                       fallthrough
      :                          @114 [@dyn 49]
  1678: 81 1a 1c                 a3 = i32 [sp + 0x1c]
  1681: 53 1a 02 4b              jump @121 if a3 <u 2
      :                          @115
  1685: 33 08 01                 a1 = 0x1
  1688: 33 07 3c 10 03           a0 = 0x3103c
  1693: 7b 1a                    u64 [sp] = a3
  1695: 01                       fallthrough
      :                          @116
  1696: 7b 18 10                 u64 [sp + 0x10] = a1
  1699: 95 86 01                 s1 = a1 + 0x1
  1702: 64 5c                    a5 = s0
  1704: 82 19 08                 a2 = u64 [sp + 0x8]
  1707: 64 7a                    a3 = a0
  1709: 01                       fallthrough
      :                          @117
  1710: 7c 9b                    a4 = u8 [a2]
  1712: c8 6b 0b                 a4 = a4 + s1
  1715: 78 ab                    u8 [a3] = a4
  1717: 95 aa 01                 a3 = a3 + 0x1
  1720: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  1723: 95 99 01                 a2 = a2 + 0x1
  1726: 52 0c f0                 jump @117 if a5 != 0
      :                          @118
  1729: 64 58                    a1 = s0
  1731: 64 76                    s1 = a0
  1733: 33 00 64                 ra = 0x64
  1736: 0a 07                    ecalli 7 // 'export'
  1738: 01                       fallthrough
      :                          @119 [@dyn 50]
  1739: 64 67                    a0 = s1
  1741: 82 18 10                 a1 = u64 [sp + 0x10]
  1744: 83 88 01                 i32 a1 = a1 + 0x1
  1747: 82 1a                    a3 = u64 [sp]
  1749: ab a8 cb                 jump @116 if a1 != a3
      :                          @120
  1752: 81 1a 1c                 a3 = i32 [sp + 0x1c]
  1755: 01                       fallthrough
      :                          @121
  1756: 51 0a 28                 jump @125 if a3 == 0
      :                          @122
  1759: 52 1a 01 06              jump @124 if a3 != 1
      :                          @123
  1763: 28 21                    jump @125
      :                          @124
  1765: 83 a7 fe                 i32 a0 = a3 + 0xfffffffffffffffe
  1768: 97 78 01                 a1 = a0 << 0x1
  1771: 83 a9 fd                 i32 a2 = a3 + 0xfffffffffffffffd
  1774: 97 99 20                 a2 = a2 << 0x20
  1777: 97 77 20                 a0 = a0 << 0x20
  1780: d6 97 07                 a0 = a0 mulhu a2
  1783: 98 77 01                 a0 = a0 >> 0x1
  1786: c8 87 07                 a0 = a0 + a1
  1789: 83 77 01                 i32 a0 = a0 + 0x1
  1792: be 7a 0a                 i32 a3 = a3 + a0
  1795: 01                       fallthrough
      :                          @125
  1796: 3d 0a 1c 10 03           u32 [0x3101c] = a3
  1801: 33 07 1c 10 03           a0 = 0x3101c
  1806: 33 08 04                 a1 = 0x4
  1809: 28 b4 fe                 jump @103
      :                          @126
  1812: 00                       trap
      :                          @127 [export #1: 'accumulate']
  1813: 95 11 38 ff              sp = sp + 0xffffffffffffff38
  1817: 7b 10 c0 00              u64 [sp + 0xc0] = ra
  1821: 7b 15 b8 00              u64 [sp + 0xb8] = s0
  1825: 7b 16 b0 00              u64 [sp + 0xb0] = s1
  1829: 33 05 00 00 01           s0 = 0x10000
  1834: 51 08 a2 00              jump @147 if a1 == 0
      :                          @128
  1838: 64 86                    s1 = a1
  1840: 7d 78                    a1 = i8 [a0]
  1842: 33 05 01                 s0 = 0x1
  1845: 59 08 37                 jump @135 if a1 >=s 0
      :                          @129
  1848: 84 89 ff 00              a2 = a1 & 0xff
  1852: 33 05 02                 s0 = 0x2
  1855: 53 29 c0 00 2d           jump @135 if a2 <u 192
      :                          @130
  1860: 33 05 03                 s0 = 0x3
  1863: 53 29 e0 00 25           jump @135 if a2 <u 224
      :                          @131
  1868: 33 05 04                 s0 = 0x4
  1871: 53 29 f0 00 1d           jump @135 if a2 <u 240
      :                          @132
  1876: 33 05 05                 s0 = 0x5
  1879: 53 29 f8 00 15           jump @135 if a2 <u 248
      :                          @133
  1884: 33 05 06                 s0 = 0x6
  1887: 53 29 fc 00 0d           jump @135 if a2 <u 252
      :                          @134
  1892: 88 98 fe 00              a1 = a2 <u 0xfe
  1896: 9a 85 08                 s0 = 0x8 - a1
  1899: 01                       fallthrough
      :                          @135
  1900: ac 56 58                 jump @146 if s1 <u s0
      :                          @136
  1903: 64 58                    a1 = s0
  1905: 7b 17 38                 u64 [sp + 0x38] = a0
  1908: 50 10 66 11 16           ra = 102, jump @524
      :                          @137 [@dyn 51]
  1913: aa 56 4b                 jump @146 if s1 == s0
      :                          @138
  1916: 82 17 38                 a0 = u64 [sp + 0x38]
  1919: c8 57 07                 a0 = a0 + s0
  1922: 7d 78                    a1 = i8 [a0]
  1924: c9 56 06                 s1 = s1 - s0
  1927: 33 05 01                 s0 = 0x1
  1930: 59 08 37                 jump @145 if a1 >=s 0
      :                          @139
  1933: 84 89 ff 00              a2 = a1 & 0xff
  1937: 33 05 02                 s0 = 0x2
  1940: 53 29 c0 00 2d           jump @145 if a2 <u 192
      :                          @140
  1945: 33 05 03                 s0 = 0x3
  1948: 53 29 e0 00 25           jump @145 if a2 <u 224
      :                          @141
  1953: 33 05 04                 s0 = 0x4
  1956: 53 29 f0 00 1d           jump @145 if a2 <u 240
      :                          @142
  1961: 33 05 05                 s0 = 0x5
  1964: 53 29 f8 00 15           jump @145 if a2 <u 248
      :                          @143
  1969: 33 05 06                 s0 = 0x6
  1972: 53 29 fc 00 0d           jump @145 if a2 <u 252
      :                          @144
  1977: 88 98 fe 00              a1 = a2 <u 0xfe
  1981: 9a 85 08                 s0 = 0x8 - a1
  1984: 01                       fallthrough
      :                          @145
  1985: ae 56 1f                 jump @148 if s1 >=u s0
      :                          @146
  1988: 33 08                    a1 = 0
  1990: 33 05 00 00 01           s0 = 0x10000
  1995: 01                       fallthrough
      :                          @147
  1996: 64 57                    a0 = s0
  1998: 82 10 c0 00              ra = u64 [sp + 0xc0]
  2002: 82 15 b8 00              s0 = u64 [sp + 0xb8]
  2006: 82 16 b0 00              s1 = u64 [sp + 0xb0]
  2010: 95 11 c8 00              sp = sp + 0xc8
  2014: 32 00                    ret
      :                          @148
  2016: 64 58                    a1 = s0
  2018: 7b 16 38                 u64 [sp + 0x38] = s1
  2021: 64 76                    s1 = a0
  2023: 50 10 68 9e 15           ra = 104, jump @524
      :                          @149 [@dyn 52]
  2028: c8 65 07                 a0 = s0 + s1
  2031: 82 16 38                 s1 = u64 [sp + 0x38]
  2034: ab 56 0b                 jump @151 if s1 != s0
      :                          @150
  2037: 33 08                    a1 = 0
  2039: 33 00 6a                 ra = 0x6a
  2042: 28 8b 15                 jump @524
      :                          @151
  2045: 7d 79                    a2 = i8 [a0]
  2047: c9 56 06                 s1 = s1 - s0
  2050: 33 08 01                 a1 = 0x1
  2053: 59 09 44                 jump @158 if a2 >=s 0
      :                          @152
  2056: 84 99 ff 00              a2 = a2 & 0xff
  2060: 33 0a c0 00              a3 = 0xc0
  2064: 33 08 02                 a1 = 0x2
  2067: ac a9 36                 jump @158 if a2 <u a3
      :                          @153
  2070: 33 0a e0 00              a3 = 0xe0
  2074: 33 08 03                 a1 = 0x3
  2077: ac a9 2c                 jump @158 if a2 <u a3
      :                          @154
  2080: 33 0a f0 00              a3 = 0xf0
  2084: 33 08 04                 a1 = 0x4
  2087: ac a9 22                 jump @158 if a2 <u a3
      :                          @155
  2090: 33 0a f8 00              a3 = 0xf8
  2094: 33 08 05                 a1 = 0x5
  2097: ac a9 18                 jump @158 if a2 <u a3
      :                          @156
  2100: 33 0a fc 00              a3 = 0xfc
  2104: 33 08 06                 a1 = 0x6
  2107: ac a9 0e                 jump @158 if a2 <u a3
      :                          @157
  2110: 88 98 fe 00              a1 = a2 <u 0xfe
  2114: 33 09 08                 a2 = 0x8
  2117: c9 89 08                 a1 = a2 - a1
  2120: 01                       fallthrough
      :                          @158
  2121: 33 05 00 00 01           s0 = 0x10000
  2126: ae 86 08                 jump @160 if s1 >=u a1
      :                          @159
  2129: 33 08                    a1 = 0
  2131: 28 79 ff                 jump @147
      :                          @160
  2134: 50 10 6a 2f 15           ra = 106, jump @524
      :                          @161 [@dyn 53]
  2139: 83 79                    i32 a2 = a0 + 0
  2141: 51 09 fd 00              jump @174 if a2 == 0
      :                          @162
  2145: 33 0b                    a4 = 0
  2147: 14 09 ff ff ff ff 00 00 00 00 a2 = 0xffffffff
  2157: d2 97 07                 a0 = a0 & a2
  2160: 7b 17 20                 u64 [sp + 0x20] = a0
  2163: 33 05 1c 10 03           s0 = 0x3101c
  2168: 33 07 12                 a0 = 0x12
  2171: 7b 17 18                 u64 [sp + 0x18] = a0
  2174: 33 07 9e 00              a0 = 0x9e
  2178: 7b 17 10                 u64 [sp + 0x10] = a0
  2181: 33 07 48 00 01           a0 = 0x10048
  2186: 7b 17 08                 u64 [sp + 0x8] = a0
  2189: 33 06 50 20 03           s1 = 0x32050
  2194: 95 66 00 00 01           s1 = s1 + 0x10000
  2199: 49 01 ff ff fe           u64 [sp + 0] = 0xfffffffffffeffff
  2204: 7b 15 28                 u64 [sp + 0x28] = s0
  2207: 28 23                    jump @165
      :                          @163
  2209: 46 11 60                 u8 [sp + 96] = 0
  2212: 95 17 60                 a0 = sp + 0x60
  2215: 33 08 01                 a1 = 0x1
  2218: 33 0a 08                 a3 = 0x8
  2221: 82 15 28                 s0 = u64 [sp + 0x28]
  2224: 64 59                    a2 = s0
  2226: 0a 04                    ecalli 4 // 'write'
  2228: 01                       fallthrough
      :                          @164
  2229: 82 1b 38                 a4 = u64 [sp + 0x38]
  2232: 95 bb 01                 a4 = a4 + 0x1
  2235: 82 17 20                 a0 = u64 [sp + 0x20]
  2238: aa 7b a7 00              jump @175 if a4 == a0
      :                          @165
  2242: 33 09 20                 a2 = 0x20
  2245: 33 0a 0e                 a3 = 0xe
  2248: 64 57                    a0 = s0
  2250: 33 08                    a1 = 0
  2252: 7b 1b 38                 u64 [sp + 0x38] = a4
  2255: 33 0c                    a5 = 0
  2257: 0a 01                    ecalli 1 // 'fetch'
  2259: 7b 17 40                 u64 [sp + 0x40] = a0
  2262: 7b 15 90 00              u64 [sp + 0x90] = s0
  2266: 82 17 18                 a0 = u64 [sp + 0x18]
  2269: 7b 17 98 00              u64 [sp + 0x98] = a0
  2273: 95 17 40                 a0 = sp + 0x40
  2276: 7b 17 a0 00              u64 [sp + 0xa0] = a0
  2280: 82 17 10                 a0 = u64 [sp + 0x10]
  2283: 7b 17 a8 00              u64 [sp + 0xa8] = a0
  2287: 82 17 08                 a0 = u64 [sp + 0x8]
  2290: 7b 17 60                 u64 [sp + 0x60] = a0
  2293: 49 11 68 02              u64 [sp + 104] = 0x2
  2297: 49 21 80 00              u64 [sp + 128] = 0
  2301: 95 18 90 00              a1 = sp + 0x90
  2305: 7b 18 70                 u64 [sp + 0x70] = a1
  2308: 49 11 78 02              u64 [sp + 120] = 0x2
  2312: 95 17 48                 a0 = sp + 0x48
  2315: 95 18 60                 a1 = sp + 0x60
  2318: 50 10 6c fa 07           ra = 108, jump @282
      :                          @166 [@dyn 54]
  2323: 82 15 50                 s0 = u64 [sp + 0x50]
  2326: 82 1b 58                 a4 = u64 [sp + 0x58]
  2329: 82 17 48                 a0 = u64 [sp + 0x48]
  2332: 7b 17 30                 u64 [sp + 0x30] = a0
  2335: 33 07 02                 a0 = 0x2
  2338: 33 08                    a1 = 0
  2340: 33 09                    a2 = 0
  2342: 64 5a                    a3 = s0
  2344: 33 00 6e                 ra = 0x6e
  2347: 0a 64                    ecalli 100 // 'log'
  2349: 01                       fallthrough
      :                          @167 [@dyn 55]
  2350: 82 1b 30                 a4 = u64 [sp + 0x30]
  2353: 82 17                    a0 = u64 [sp]
  2355: c8 b7 07                 a0 = a0 + a4
  2358: 53 37 00 00 ff 6b ff     jump @163 if a0 <u 4294901760
      :                          @168
  2365: 82 67                    a0 = u64 [s1]
  2367: c9 76 08                 a1 = s1 - a0
  2370: ab 58 5f ff              jump @163 if a1 != s0
      :                          @169
  2374: c9 b7 08                 a1 = a0 - a4
  2377: 01                       fallthrough
      :                          @170
  2378: 82 69                    a2 = u64 [s1]
  2380: ab 79 f1                 jump @168 if a2 != a0
      :                          @171
  2383: 7b 68                    u64 [s1] = a1
  2385: 33 0a                    a3 = 0
  2387: 01                       fallthrough
      :                          @172
  2388: ab 79 e9                 jump @168 if a2 != a0
      :                          @173
  2391: 28 4a ff                 jump @163
      :                          @174
  2394: 33 05 1c 10 03           s0 = 0x3101c
  2399: 33 08 20                 a1 = 0x20
  2402: 28 6a fe                 jump @147
      :                          @175
  2405: 33 08 20                 a1 = 0x20
  2408: 28 64 fe                 jump @147
      :                          @176 [export #2: 'on_transfer']
  2411: 95 11 70 fd              sp = sp + 0xfffffffffffffd70
  2415: 7b 10 88 02              u64 [sp + 0x288] = ra
  2419: 7b 15 80 02              u64 [sp + 0x280] = s0
  2423: 7b 16 78 02              u64 [sp + 0x278] = s1
  2427: 64 8c                    a5 = a1
  2429: 64 79                    a2 = a0
  2431: 33 02                    t0 = 0
  2433: 95 7b 04                 a4 = a0 + 0x4
  2436: 33 07 02                 a0 = 0x2
  2439: 7b 17 28                 u64 [sp + 0x28] = a0
  2442: 33 07 06                 a0 = 0x6
  2445: 7b 17 58                 u64 [sp + 0x58] = a0
  2448: 33 07 0a                 a0 = 0xa
  2451: 7b 17 20                 u64 [sp + 0x20] = a0
  2454: 33 07 b0 00 01           a0 = 0x100b0
  2459: 7b 17 18                 u64 [sp + 0x18] = a0
  2462: 33 07 d6 00              a0 = 0xd6
  2466: 7b 17 10                 u64 [sp + 0x10] = a0
  2469: 33 07 c8 02 01           a0 = 0x102c8
  2474: 7b 17 08                 u64 [sp + 0x8] = a0
  2477: 33 07 50 20 03           a0 = 0x32050
  2482: 95 77 00 00 01           a0 = a0 + 0x10000
  2487: 7b 17 50                 u64 [sp + 0x50] = a0
  2490: 33 07 50 01 01           a0 = 0x10150
  2495: 7b 17                    u64 [sp] = a0
  2497: 95 97 08                 a0 = a2 + 0x8
  2500: 95 ca f8                 a3 = a5 + 0xfffffffffffffff8
  2503: 95 98 0c                 a1 = a2 + 0xc
  2506: 7b 18 60                 u64 [sp + 0x60] = a1
  2509: 33 08 08                 a1 = 0x8
  2512: 33 06 ff ff fe           s1 = 0xfffffffffffeffff
  2517: 7b 16 48                 u64 [sp + 0x48] = s1
  2520: 7b 17 c0 00              u64 [sp + 0xc0] = a0
  2524: 7b 17 b8 00              u64 [sp + 0xb8] = a0
  2528: 7b 1c 40                 u64 [sp + 0x40] = a5
  2531: 7b 19 38                 u64 [sp + 0x38] = a2
  2534: 7b 1b 30                 u64 [sp + 0x30] = a4
  2537: 7b 1a a8 00              u64 [sp + 0xa8] = a3
  2541: ac 8c c1 04              jump @224 if a5 <u a1
      :                          @177
  2545: 51 09 d6 04              jump @225 if a2 == 0
      :                          @178
  2549: 51 0b d2 04              jump @225 if a4 == 0
      :                          @179
  2553: 7c 97                    a0 = u8 [a2]
  2555: 7b 17 78                 u64 [sp + 0x78] = a0
  2558: 7c 97 01                 a0 = u8 [a2 + 0x1]
  2561: 7b 17 68                 u64 [sp + 0x68] = a0
  2564: 7c 97 02                 a0 = u8 [a2 + 0x2]
  2567: 7b 17 70                 u64 [sp + 0x70] = a0
  2570: 7c 97 03                 a0 = u8 [a2 + 0x3]
  2573: 7b 17 80 00              u64 [sp + 0x80] = a0
  2577: 7c b7                    a0 = u8 [a4]
  2579: 7b 17 98 00              u64 [sp + 0x98] = a0
  2583: 7c b7 01                 a0 = u8 [a4 + 0x1]
  2586: 7b 17 88 00              u64 [sp + 0x88] = a0
  2590: 7c b7 02                 a0 = u8 [a4 + 0x2]
  2593: 7b 17 90 00              u64 [sp + 0x90] = a0
  2597: 7c b7 03                 a0 = u8 [a4 + 0x3]
  2600: 7b 17 a0 00              u64 [sp + 0xa0] = a0
  2604: 51 0a 53                 jump @189 if a3 == 0
      :                          @180
  2607: 82 17 c0 00              a0 = u64 [sp + 0xc0]
  2611: 7d 77                    a0 = i8 [a0]
  2613: 33 05 01                 s0 = 0x1
  2616: 59 07 4a                 jump @190 if a0 >=s 0
      :                          @181
  2619: 84 77 ff 00              a0 = a0 & 0xff
  2623: 33 05 02                 s0 = 0x2
  2626: 33 06 c0 00              s1 = 0xc0
  2630: ac 67 33                 jump @187 if a0 <u s1
      :                          @182
  2633: 33 05 03                 s0 = 0x3
  2636: 33 06 e0 00              s1 = 0xe0
  2640: ac 67 29                 jump @187 if a0 <u s1
      :                          @183
  2643: 33 05 04                 s0 = 0x4
  2646: 33 06 f0 00              s1 = 0xf0
  2650: ac 67 1f                 jump @187 if a0 <u s1
      :                          @184
  2653: 33 05 05                 s0 = 0x5
  2656: 33 06 f8 00              s1 = 0xf8
  2660: ac 67 15                 jump @187 if a0 <u s1
      :                          @185
  2663: 33 05 06                 s0 = 0x6
  2666: 33 06 fc 00              s1 = 0xfc
  2670: ac 67 0b                 jump @187 if a0 <u s1
      :                          @186
  2673: 88 77 fe 00              a0 = a0 <u 0xfe
  2677: 9a 75 08                 s0 = 0x8 - a0
  2680: 01                       fallthrough
      :                          @187
  2681: ae 5a 09                 jump @190 if a3 >=u s0
      :                          @188
  2684: 28 32 04                 jump @224
      :                          @189
  2687: 33 05                    s0 = 0
  2689: 01                       fallthrough
      :                          @190
  2690: 82 17 c0 00              a0 = u64 [sp + 0xc0]
  2694: 64 58                    a1 = s0
  2696: 7b 12 b0 00              u64 [sp + 0xb0] = t0
  2700: 50 10 70 f9 12           ra = 112, jump @524
      :                          @191 [@dyn 56]
  2705: 33 03 98 00              t1 = 0x98
  2709: 33 02 04                 t0 = 0x4
  2712: 33 06 08                 s1 = 0x8
  2715: 82 1c a8 00              a5 = u64 [sp + 0xa8]
  2719: 82 1b b0 00              a4 = u64 [sp + 0xb0]
  2723: ae 7b 0b 04              jump @224 if a4 >=u a0
      :                          @192
  2727: 82 18 68                 a1 = u64 [sp + 0x68]
  2730: 97 88 08                 a1 = a1 << 0x8
  2733: 82 19 78                 a2 = u64 [sp + 0x78]
  2736: d4 98 08                 a1 = a1 | a2
  2739: 82 19 70                 a2 = u64 [sp + 0x70]
  2742: 97 99 10                 a2 = a2 << 0x10
  2745: 82 1a 80 00              a3 = u64 [sp + 0x80]
  2749: 97 aa 18                 a3 = a3 << 0x18
  2752: d4 a9 09                 a2 = a2 | a3
  2755: d4 89 04                 t2 = a2 | a1
  2758: 82 18 88 00              a1 = u64 [sp + 0x88]
  2762: 97 88 08                 a1 = a1 << 0x8
  2765: 82 19 98 00              a2 = u64 [sp + 0x98]
  2769: d4 98 08                 a1 = a1 | a2
  2772: 82 19 90 00              a2 = u64 [sp + 0x90]
  2776: 97 99 10                 a2 = a2 << 0x10
  2779: 82 1a a0 00              a3 = u64 [sp + 0xa0]
  2783: 97 aa 18                 a3 = a3 << 0x18
  2786: d4 a9 09                 a2 = a2 | a3
  2789: d4 89 00                 ra = a2 | a1
  2792: e4 5c 08                 a1 = maxu(a5, s0)
  2795: c9 58 08                 a1 = a1 - s0
  2798: 82 19 b8 00              a2 = u64 [sp + 0xb8]
  2802: c8 59 09                 a2 = a2 + s0
  2805: 82 1a 60                 a3 = u64 [sp + 0x60]
  2808: c8 a5 05                 s0 = s0 + a3
  2811: 64 ba                    a3 = a4
  2813: 01                       fallthrough
      :                          @193
  2814: ac 68 b0 03              jump @224 if a1 <u s1
      :                          @194
  2818: aa 25 c5 03              jump @225 if s0 == t0
      :                          @195
  2822: 51 05 c1 03              jump @225 if s0 == 0
      :                          @196
  2826: ac 38 a4 03              jump @224 if a1 <u t1
      :                          @197
  2830: 51 0a 17                 jump @200 if a3 == 0
      :                          @198
  2833: 95 88 68 ff              a1 = a1 + 0xffffffffffffff68
  2837: 95 55 98 00              s0 = s0 + 0x98
  2841: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2844: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  2847: 52 07 df                 jump @193 if a0 != 0
      :                          @199
  2850: 28 8c 03                 jump @224
      :                          @200
  2853: 7c 97 01                 a0 = u8 [a2 + 0x1]
  2856: 7c 98                    a1 = u8 [a2]
  2858: 7c 9a 02                 a3 = u8 [a2 + 0x2]
  2861: 7d 9b 03                 a4 = i8 [a2 + 0x3]
  2864: 8a 77 08                 i32 a0 = a0 << 0x8
  2867: d4 87 07                 a0 = a0 | a1
  2870: 8a a8 10                 i32 a1 = a3 << 0x10
  2873: 8a ba 18                 i32 a3 = a4 << 0x18
  2876: d4 a8 08                 a1 = a1 | a3
  2879: d4 87 07                 a0 = a0 | a1
  2882: 7b 17 a0 00              u64 [sp + 0xa0] = a0
  2886: 7c 57 01                 a0 = u8 [s0 + 0x1]
  2889: 7c 58                    a1 = u8 [s0]
  2891: 7c 5a 02                 a3 = u8 [s0 + 0x2]
  2894: 7d 5b 03                 a4 = i8 [s0 + 0x3]
  2897: 8a 77 08                 i32 a0 = a0 << 0x8
  2900: d4 87 07                 a0 = a0 | a1
  2903: 8a a8 10                 i32 a1 = a3 << 0x10
  2906: 8a ba 18                 i32 a3 = a4 << 0x18
  2909: d4 a8 08                 a1 = a1 | a3
  2912: 7c 9a 0f                 a3 = u8 [a2 + 0xf]
  2915: 7c 9b 0e                 a4 = u8 [a2 + 0xe]
  2918: d4 87 07                 a0 = a0 | a1
  2921: 7b 17 98 00              u64 [sp + 0x98] = a0
  2925: 7c 97 0d                 a0 = u8 [a2 + 0xd]
  2928: 97 aa 10                 a3 = a3 << 0x10
  2931: 97 bb 08                 a4 = a4 << 0x8
  2934: d4 ba 0a                 a3 = a3 | a4
  2937: 7c 98 0c                 a1 = u8 [a2 + 0xc]
  2940: 7c 9b 0b                 a4 = u8 [a2 + 0xb]
  2943: d4 a7 07                 a0 = a0 | a3
  2946: 97 77 10                 a0 = a0 << 0x10
  2949: 97 88 08                 a1 = a1 << 0x8
  2952: d4 b8 08                 a1 = a1 | a4
  2955: 7c 9a 0a                 a3 = u8 [a2 + 0xa]
  2958: 7c 9b 09                 a4 = u8 [a2 + 0x9]
  2961: d4 87 07                 a0 = a0 | a1
  2964: 97 77 10                 a0 = a0 << 0x10
  2967: 97 aa 08                 a3 = a3 << 0x8
  2970: d4 ba 0a                 a3 = a3 | a4
  2973: d4 a7 07                 a0 = a0 | a3
  2976: 7c 98 08                 a1 = u8 [a2 + 0x8]
  2979: 97 77 08                 a0 = a0 << 0x8
  2982: 7c 9a 97 00              a3 = u8 [a2 + 0x97]
  2986: 7c 9b 96 00              a4 = u8 [a2 + 0x96]
  2990: d4 87 07                 a0 = a0 | a1
  2993: 7b 17 90 00              u64 [sp + 0x90] = a0
  2997: 7c 97 95 00              a0 = u8 [a2 + 0x95]
  3001: 97 aa 10                 a3 = a3 << 0x10
  3004: 97 bb 08                 a4 = a4 << 0x8
  3007: d4 ba 0a                 a3 = a3 | a4
  3010: d4 a7 07                 a0 = a0 | a3
  3013: 7c 9a 94 00              a3 = u8 [a2 + 0x94]
  3017: 7c 9b 93 00              a4 = u8 [a2 + 0x93]
  3021: 95 98 10                 a1 = a2 + 0x10
  3024: 97 77 10                 a0 = a0 << 0x10
  3027: 97 aa 08                 a3 = a3 << 0x8
  3030: d4 ba 0a                 a3 = a3 | a4
  3033: 7c 9b 92 00              a4 = u8 [a2 + 0x92]
  3037: d4 a7 07                 a0 = a0 | a3
  3040: 7c 9a 91 00              a3 = u8 [a2 + 0x91]
  3044: 97 77 10                 a0 = a0 << 0x10
  3047: 97 bb 08                 a4 = a4 << 0x8
  3050: 7c 99 90 00              a2 = u8 [a2 + 0x90]
  3054: d4 ba 0a                 a3 = a3 | a4
  3057: d4 a7 07                 a0 = a0 | a3
  3060: 97 77 08                 a0 = a0 << 0x8
  3063: d4 97 07                 a0 = a0 | a2
  3066: 7b 17 88 00              u64 [sp + 0x88] = a0
  3070: 95 17 68 01              a0 = sp + 0x168
  3074: 33 09 80 00              a2 = 0x80
  3078: 64 45                    s0 = t2
  3080: 64 06                    s1 = ra
  3082: 50 10 72 78 07           ra = 114, jump @332
      :                          @201 [@dyn 57]
  3087: 95 17 e0 00              a0 = sp + 0xe0
  3091: 95 18 68 01              a1 = sp + 0x168
  3095: 33 09 80 00              a2 = 0x80
  3099: 50 10 74 67 07           ra = 116, jump @332
      :                          @202 [@dyn 58]
  3104: 7a 15 c8 00              u32 [sp + 0xc8] = s0
  3108: 7a 16 cc 00              u32 [sp + 0xcc] = s1
  3112: 82 17 a0 00              a0 = u64 [sp + 0xa0]
  3116: 7a 17 d0 00              u32 [sp + 0xd0] = a0
  3120: 82 17 98 00              a0 = u64 [sp + 0x98]
  3124: 7a 17 d4 00              u32 [sp + 0xd4] = a0
  3128: 82 17 90 00              a0 = u64 [sp + 0x90]
  3132: 7b 17 d8 00              u64 [sp + 0xd8] = a0
  3136: 82 17 88 00              a0 = u64 [sp + 0x88]
  3140: 7b 17 60 01              u64 [sp + 0x160] = a0
  3144: 95 17 c8 00              a0 = sp + 0xc8
  3148: 7b 17 68 01              u64 [sp + 0x168] = a0
  3152: 82 17 28                 a0 = u64 [sp + 0x28]
  3155: 7b 17 70 01              u64 [sp + 0x170] = a0
  3159: 95 18 cc 00              a1 = sp + 0xcc
  3163: 7b 18 78 01              u64 [sp + 0x178] = a1
  3167: 7b 17 80 01              u64 [sp + 0x180] = a0
  3171: 95 18 d0 00              a1 = sp + 0xd0
  3175: 7b 18 88 01              u64 [sp + 0x188] = a1
  3179: 7b 17 90 01              u64 [sp + 0x190] = a0
  3183: 95 18 d4 00              a1 = sp + 0xd4
  3187: 7b 18 98 01              u64 [sp + 0x198] = a1
  3191: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  3195: 95 17 d8 00              a0 = sp + 0xd8
  3199: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  3203: 82 17 58                 a0 = u64 [sp + 0x58]
  3206: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  3210: 95 18 e0 00              a1 = sp + 0xe0
  3214: 7b 18 b8 01              u64 [sp + 0x1b8] = a1
  3218: 82 18 20                 a1 = u64 [sp + 0x20]
  3221: 7b 18 c0 01              u64 [sp + 0x1c0] = a1
  3225: 95 18 60 01              a1 = sp + 0x160
  3229: 7b 18 c8 01              u64 [sp + 0x1c8] = a1
  3233: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
  3237: 82 17 18                 a0 = u64 [sp + 0x18]
  3240: 7b 17 28 02              u64 [sp + 0x228] = a0
  3244: 49 21 30 02 07           u64 [sp + 560] = 0x7
  3249: 49 21 48 02              u64 [sp + 584] = 0
  3253: 95 17 68 01              a0 = sp + 0x168
  3257: 7b 17 38 02              u64 [sp + 0x238] = a0
  3261: 49 21 40 02 07           u64 [sp + 576] = 0x7
  3266: 95 17 58 02              a0 = sp + 0x258
  3270: 95 18 28 02              a1 = sp + 0x228
  3274: 50 10 76 3e 04           ra = 118, jump @282
      :                          @203 [@dyn 59]
  3279: 82 15 60 02              s0 = u64 [sp + 0x260]
  3283: 82 1b 68 02              a4 = u64 [sp + 0x268]
  3287: 82 16 58 02              s1 = u64 [sp + 0x258]
  3291: 33 07 02                 a0 = 0x2
  3294: 33 08                    a1 = 0
  3296: 33 09                    a2 = 0
  3298: 64 5a                    a3 = s0
  3300: 33 00 78                 ra = 0x78
  3303: 0a 64                    ecalli 100 // 'log'
  3305: 01                       fallthrough
      :                          @204 [@dyn 60]
  3306: 82 17 48                 a0 = u64 [sp + 0x48]
  3309: c8 67 07                 a0 = a0 + s1
  3312: 82 1b 50                 a4 = u64 [sp + 0x50]
  3315: 53 37 00 00 ff 1a        jump @209 if a0 <u 4294901760
      :                          @205
  3321: 82 b7                    a0 = u64 [a4]
  3323: c9 7b 08                 a1 = a4 - a0
  3326: ab 58 0f                 jump @209 if a1 != s0
      :                          @206
  3329: c9 67 08                 a1 = a0 - s1
  3332: 01                       fallthrough
      :                          @207
  3333: 82 b9                    a2 = u64 [a4]
  3335: ab 79 f2                 jump @205 if a2 != a0
      :                          @208
  3338: 7b b8                    u64 [a4] = a1
  3340: 01                       fallthrough
      :                          @209
  3341: 81 17 cc 00              a0 = i32 [sp + 0xcc]
  3345: 7a 17 ec 01              u32 [sp + 0x1ec] = a0
  3349: 95 17 ec 01              a0 = sp + 0x1ec
  3353: 33 08 04                 a1 = 0x4
  3356: 95 19 e0 00              a2 = sp + 0xe0
  3360: 33 0a 80 00              a3 = 0x80
  3364: 0a 04                    ecalli 4 // 'write'
  3366: 0a                       ecalli 0 // 'gas'
  3367: 7b 17 f0 01              u64 [sp + 0x1f0] = a0
  3371: 7b 17 f8 01              u64 [sp + 0x1f8] = a0
  3375: 46 21 07 02 04           u8 [sp + 519] = 0x4
  3380: 7b 17 08 02              u64 [sp + 0x208] = a0
  3384: 95 17 07 02              a0 = sp + 0x207
  3388: 33 08 01                 a1 = 0x1
  3391: 95 19 08 02              a2 = sp + 0x208
  3395: 33 0a 08                 a3 = 0x8
  3398: 0a 04                    ecalli 4 // 'write'
  3400: 49 21 68 01 02           u64 [sp + 360] = 0x2
  3405: 49 21 78 01 02           u64 [sp + 376] = 0x2
  3410: 49 21 88 01              u64 [sp + 392] = 0
  3414: 14 07 20 00 00 00 10 00 00 00 a0 = 0x1000000020
  3424: 7b 17 90 01              u64 [sp + 0x190] = a0
  3428: 46 21 98 01 03           u8 [sp + 408] = 0x3
  3433: 49 21 a0 01 02           u64 [sp + 416] = 0x2
  3438: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  3443: 49 21 c0 01 01           u64 [sp + 448] = 0x1
  3448: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
  3452: 95 17 07 02              a0 = sp + 0x207
  3456: 7b 17 58 02              u64 [sp + 0x258] = a0
  3460: 82 17 10                 a0 = u64 [sp + 0x10]
  3463: 7b 17 60 02              u64 [sp + 0x260] = a0
  3467: 95 17 f8 01              a0 = sp + 0x1f8
  3471: 7b 17 68 02              u64 [sp + 0x268] = a0
  3475: 82 17 58                 a0 = u64 [sp + 0x58]
  3478: 7b 17 70 02              u64 [sp + 0x270] = a0
  3482: 46 21 d0 01 03           u8 [sp + 464] = 0x3
  3487: 82 17 08                 a0 = u64 [sp + 0x8]
  3490: 7b 17 28 02              u64 [sp + 0x228] = a0
  3494: 49 21 30 02 02           u64 [sp + 560] = 0x2
  3499: 95 17 68 01              a0 = sp + 0x168
  3503: 7b 17 48 02              u64 [sp + 0x248] = a0
  3507: 49 21 50 02 02           u64 [sp + 592] = 0x2
  3512: 95 17 58 02              a0 = sp + 0x258
  3516: 7b 17 38 02              u64 [sp + 0x238] = a0
  3520: 49 21 40 02 02           u64 [sp + 576] = 0x2
  3525: 95 17 10 02              a0 = sp + 0x210
  3529: 95 18 28 02              a1 = sp + 0x228
  3533: 50 10 7a 3b 03           ra = 122, jump @282
      :                          @210 [@dyn 61]
  3538: 82 15 18 02              s0 = u64 [sp + 0x218]
  3542: 82 1b 20 02              a4 = u64 [sp + 0x220]
  3546: 82 16 10 02              s1 = u64 [sp + 0x210]
  3550: 33 07 02                 a0 = 0x2
  3553: 33 08                    a1 = 0
  3555: 33 09                    a2 = 0
  3557: 64 5a                    a3 = s0
  3559: 33 00 7c                 ra = 0x7c
  3562: 0a 64                    ecalli 100 // 'log'
  3564: 01                       fallthrough
      :                          @211 [@dyn 62]
  3565: 82 1b 50                 a4 = u64 [sp + 0x50]
  3568: 82 17 48                 a0 = u64 [sp + 0x48]
  3571: c8 67 07                 a0 = a0 + s1
  3574: 53 37 00 00 ff 1a        jump @216 if a0 <u 4294901760
      :                          @212
  3580: 82 b7                    a0 = u64 [a4]
  3582: c9 7b 08                 a1 = a4 - a0
  3585: ab 58 0f                 jump @216 if a1 != s0
      :                          @213
  3588: c9 67 08                 a1 = a0 - s1
  3591: 01                       fallthrough
      :                          @214
  3592: 82 b9                    a2 = u64 [a4]
  3594: ab 79 f2                 jump @212 if a2 != a0
      :                          @215
  3597: 7b b8                    u64 [a4] = a1
  3599: 01                       fallthrough
      :                          @216
  3600: 95 17 f0 01              a0 = sp + 0x1f0
  3604: 7b 17 58 02              u64 [sp + 0x258] = a0
  3608: 82 17 58                 a0 = u64 [sp + 0x58]
  3611: 7b 17 60 02              u64 [sp + 0x260] = a0
  3615: 82 17                    a0 = u64 [sp]
  3617: 7b 17 68 01              u64 [sp + 0x168] = a0
  3621: 49 21 70 01 02           u64 [sp + 368] = 0x2
  3626: 49 21 88 01              u64 [sp + 392] = 0
  3630: 95 17 58 02              a0 = sp + 0x258
  3634: 7b 17 78 01              u64 [sp + 0x178] = a0
  3638: 49 21 80 01 01           u64 [sp + 384] = 0x1
  3643: 95 17 28 02              a0 = sp + 0x228
  3647: 95 18 68 01              a1 = sp + 0x168
  3651: 50 10 7e c5 02           ra = 126, jump @282
      :                          @217 [@dyn 63]
  3656: 82 15 30 02              s0 = u64 [sp + 0x230]
  3660: 82 1b 38 02              a4 = u64 [sp + 0x238]
  3664: 82 16 28 02              s1 = u64 [sp + 0x228]
  3668: 33 07 02                 a0 = 0x2
  3671: 33 08                    a1 = 0
  3673: 33 09                    a2 = 0
  3675: 64 5a                    a3 = s0
  3677: 33 00 80 00              ra = 0x80
  3681: 0a 64                    ecalli 100 // 'log'
  3683: 01                       fallthrough
      :                          @218 [@dyn 64]
  3684: 82 1b 50                 a4 = u64 [sp + 0x50]
  3687: 82 17 48                 a0 = u64 [sp + 0x48]
  3690: c8 67 07                 a0 = a0 + s1
  3693: 53 37 00 00 ff 1a        jump @223 if a0 <u 4294901760
      :                          @219
  3699: 82 b7                    a0 = u64 [a4]
  3701: c9 7b 08                 a1 = a4 - a0
  3704: ab 58 0f                 jump @223 if a1 != s0
      :                          @220
  3707: c9 67 08                 a1 = a0 - s1
  3710: 01                       fallthrough
      :                          @221
  3711: 82 b9                    a2 = u64 [a4]
  3713: ab 79 f2                 jump @219 if a2 != a0
      :                          @222
  3716: 7b b8                    u64 [a4] = a1
  3718: 01                       fallthrough
      :                          @223
  3719: 82 12 b0 00              t0 = u64 [sp + 0xb0]
  3723: 95 22 01                 t0 = t0 + 0x1
  3726: 82 17 b8 00              a0 = u64 [sp + 0xb8]
  3730: 95 77 98 00              a0 = a0 + 0x98
  3734: 7b 17 b8 00              u64 [sp + 0xb8] = a0
  3738: 82 1c 40                 a5 = u64 [sp + 0x40]
  3741: 82 19 38                 a2 = u64 [sp + 0x38]
  3744: 82 1b 30                 a4 = u64 [sp + 0x30]
  3747: 82 1a a8 00              a3 = u64 [sp + 0xa8]
  3751: 33 08 08                 a1 = 0x8
  3754: ae 8c 47 fb              jump @177 if a5 >=u a1
      :                          @224
  3758: 33 07 00 00 01           a0 = 0x10000
  3763: 33 08                    a1 = 0
  3765: 82 10 88 02              ra = u64 [sp + 0x288]
  3769: 82 15 80 02              s0 = u64 [sp + 0x280]
  3773: 82 16 78 02              s1 = u64 [sp + 0x278]
  3777: 95 11 90 02              sp = sp + 0x290
  3781: 32 00                    ret
      :                          @225
  3783: 00                       trap
      :                          @226
  3784: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  3787: 7b 10 40                 u64 [sp + 0x40] = ra
  3790: 7b 15 38                 u64 [sp + 0x38] = s0
  3793: 7b 16 30                 u64 [sp + 0x30] = s1
  3796: c8 89 09                 a2 = a2 + a1
  3799: ac 89 53                 jump @234 if a2 <u a1
      :                          @227
  3802: 64 75                    s0 = a0
  3804: 82 77                    a0 = u64 [a0]
  3806: 97 78 01                 a1 = a0 << 0x1
  3809: 33 0a 08                 a3 = 0x8
  3812: e4 a9 09                 a2 = maxu(a2, a3)
  3815: e4 98 06                 s1 = maxu(a1, a2)
  3818: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  3821: 98 88 3f                 a1 = a1 >> 0x3f
  3824: 51 07 12                 jump @229 if a0 == 0
      :                          @228
  3827: 82 59 08                 a2 = u64 [s0 + 0x8]
  3830: 7b 19 18                 u64 [sp + 0x18] = a2
  3833: 49 11 20 01              u64 [sp + 32] = 0x1
  3837: 7b 17 28                 u64 [sp + 0x28] = a0
  3840: 28 06                    jump @230
      :                          @229
  3842: 49 11 20                 u64 [sp + 32] = 0
  3845: 01                       fallthrough
      :                          @230
  3846: 64 17                    a0 = sp
  3848: 95 1a 18                 a3 = sp + 0x18
  3851: 64 69                    a2 = s1
  3853: 50 20 82 00 33           ra = 130, jump @238
      :                          @231 [@dyn 65]
  3858: 82 18                    a1 = u64 [sp]
  3860: 82 17 08                 a0 = u64 [sp + 0x8]
  3863: 51 08 14                 jump @235 if a1 == 0
      :                          @232
  3866: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  3876: aa 87 0d                 jump @236 if a0 == a1
      :                          @233
  3879: 52 07 18                 jump @237 if a0 != 0
      :                          @234
  3882: 00                       trap
      :                          @235
  3883: 7b 57 08                 u64 [s0 + 0x8] = a0
  3886: 7b 56                    u64 [s0] = s1
  3888: 01                       fallthrough
      :                          @236
  3889: 82 10 40                 ra = u64 [sp + 0x40]
  3892: 82 15 38                 s0 = u64 [sp + 0x38]
  3895: 82 16 30                 s1 = u64 [sp + 0x30]
  3898: 95 11 48                 sp = sp + 0x48
  3901: 32 00                    ret
      :                          @237
  3903: 00                       trap
      :                          @238
  3904: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  3907: 7b 10 30                 u64 [sp + 0x30] = ra
  3910: 7b 15 28                 u64 [sp + 0x28] = s0
  3913: 7b 16 20                 u64 [sp + 0x20] = s1
  3916: 64 95                    s0 = a2
  3918: 64 72                    t0 = a0
  3920: 51 08 7a                 jump @248 if a1 == 0
      :                          @239
  3923: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3926: 51 07 7d                 jump @249 if a0 == 0
      :                          @240
  3929: 82 a9 10                 a2 = u64 [a3 + 0x10]
  3932: 51 09 ab 00              jump @256 if a2 == 0
      :                          @241
  3936: 82 a8                    a1 = u64 [a3]
  3938: 33 06 50 20 03           s1 = 0x32050
  3943: 33 03 00 00 01           t1 = 0x10000
  3948: c8 36 06                 s1 = s1 + t1
  3951: 01                       fallthrough
      :                          @242
  3952: 82 6a                    a3 = u64 [s1]
  3954: c8 5a 07                 a0 = a3 + s0
  3957: ac a7 d0 00              jump @262 if a0 <u a3
      :                          @243
  3961: 95 7b 01                 a4 = a0 + 0x1
  3964: 88 bc 01                 a5 = a4 <u 0x1
  3967: d8 b3 0b                 a4 = t1 <u a4
  3970: d4 cb 0b                 a4 = a4 | a5
  3973: 52 0b c0 00              jump @262 if a4 != 0
      :                          @244
  3977: 82 6b                    a4 = u64 [s1]
  3979: ab ab e5                 jump @242 if a4 != a3
      :                          @245
  3982: 7b 67                    u64 [s1] = a0
  3984: 33 0c                    a5 = 0
  3986: 7b 12 18                 u64 [sp + 0x18] = t0
  3989: 33 0a 50 20 03           a3 = 0x32050
  3994: 33 0b 00 00 01           a4 = 0x10000
  3999: 7b 1a                    u64 [sp] = a3
  4001: c8 ba 0a                 a3 = a3 + a4
  4004: c9 7a 07                 a0 = a3 - a0
  4007: 7b 17 10                 u64 [sp + 0x10] = a0
  4010: 7b 18 08                 u64 [sp + 0x8] = a1
  4013: 64 96                    s1 = a2
  4015: 50 20 84 00 d3 03        ra = 132, jump @332
      :                          @246 [@dyn 66]
  4021: 54 36 00 00 01 98 00     jump @263 if s1 <=u 65536
      :                          @247
  4028: 82 12 18                 t0 = u64 [sp + 0x18]
  4031: 82 18 10                 a1 = u64 [sp + 0x10]
  4034: 33 07                    a0 = 0
  4036: 7b 28 08                 u64 [t0 + 0x8] = a1
  4039: 28 b5 00                 jump @269
      :                          @248
  4042: 49 12 08                 u64 [t0 + 8] = 0
  4045: 33 07 01                 a0 = 0x1
  4048: 28 ac 00                 jump @269
      :                          @249
  4051: 33 09 50 20 03           a2 = 0x32050
  4056: 33 07 00 00 01           a0 = 0x10000
  4061: c8 79 09                 a2 = a2 + a0
  4064: 01                       fallthrough
      :                          @250
  4065: 82 9a                    a3 = u64 [a2]
  4067: c8 5a 08                 a1 = a3 + s0
  4070: ac a8 5f                 jump @262 if a1 <u a3
      :                          @251
  4073: 95 8b 01                 a4 = a1 + 0x1
  4076: 88 bc 01                 a5 = a4 <u 0x1
  4079: d8 b7 0b                 a4 = a0 <u a4
  4082: d4 cb 0b                 a4 = a4 | a5
  4085: 52 0b 50                 jump @262 if a4 != 0
      :                          @252
  4088: 82 9b                    a4 = u64 [a2]
  4090: ab ab e7                 jump @250 if a4 != a3
      :                          @253
  4093: 7b 98                    u64 [a2] = a1
  4095: 33 0c                    a5 = 0
  4097: 01                       fallthrough
      :                          @254
  4098: ab ab df                 jump @250 if a4 != a3
      :                          @255
  4101: 28 31                    jump @261
      :                          @256
  4103: 33 09 50 20 03           a2 = 0x32050
  4108: 33 07 00 00 01           a0 = 0x10000
  4113: c8 79 09                 a2 = a2 + a0
  4116: 01                       fallthrough
      :                          @257
  4117: 82 9a                    a3 = u64 [a2]
  4119: c8 5a 08                 a1 = a3 + s0
  4122: ac a8 2b                 jump @262 if a1 <u a3
      :                          @258
  4125: 95 8b 01                 a4 = a1 + 0x1
  4128: 88 bc 01                 a5 = a4 <u 0x1
  4131: d8 b7 0b                 a4 = a0 <u a4
  4134: d4 cb 0b                 a4 = a4 | a5
  4137: 52 0b 1c                 jump @262 if a4 != 0
      :                          @259
  4140: 82 9b                    a4 = u64 [a2]
  4142: ab ab e7                 jump @257 if a4 != a3
      :                          @260
  4145: 7b 98                    u64 [a2] = a1
  4147: 33 0c                    a5 = 0
  4149: 01                       fallthrough
      :                          @261
  4150: 33 07 50 20 04           a0 = 0x42050
  4155: c9 87 08                 a1 = a0 - a1
  4158: 33 07                    a0 = 0
  4160: 7b 28 08                 u64 [t0 + 0x8] = a1
  4163: 28 39                    jump @269
      :                          @262
  4165: 33 07 01                 a0 = 0x1
  4168: 7b 27 08                 u64 [t0 + 0x8] = a0
  4171: 28 31                    jump @269
      :                          @263
  4173: 64 6c                    a5 = s1
  4175: 82 17                    a0 = u64 [sp]
  4177: 95 77 00 00 01           a0 = a0 + 0x10000
  4182: 82 12 18                 t0 = u64 [sp + 0x18]
  4185: 82 16 08                 s1 = u64 [sp + 0x8]
  4188: 01                       fallthrough
      :                          @264
  4189: 82 78                    a1 = u64 [a0]
  4191: c9 87 09                 a2 = a0 - a1
  4194: ab 69 11                 jump @268 if a2 != s1
      :                          @265
  4197: c9 c8 09                 a2 = a1 - a5
  4200: 01                       fallthrough
      :                          @266
  4201: 82 7a                    a3 = u64 [a0]
  4203: ab 8a f2                 jump @264 if a3 != a1
      :                          @267
  4206: 7b 79                    u64 [a0] = a2
  4208: 33 0b                    a4 = 0
  4210: 01                       fallthrough
      :                          @268
  4211: 82 18 10                 a1 = u64 [sp + 0x10]
  4214: 33 07                    a0 = 0
  4216: 7b 28 08                 u64 [t0 + 0x8] = a1
  4219: 01                       fallthrough
      :                          @269
  4220: 7b 25 10                 u64 [t0 + 0x10] = s0
  4223: 7b 27                    u64 [t0] = a0
  4225: 82 10 30                 ra = u64 [sp + 0x30]
  4228: 82 15 28                 s0 = u64 [sp + 0x28]
  4231: 82 16 20                 s1 = u64 [sp + 0x20]
  4234: 95 11 38                 sp = sp + 0x38
  4237: 32 00                    ret
      :                          @270
  4239: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  4242: 7b 10 40                 u64 [sp + 0x40] = ra
  4245: 7b 15 38                 u64 [sp + 0x38] = s0
  4248: 7b 16 30                 u64 [sp + 0x30] = s1
  4251: 95 88 01                 a1 = a1 + 0x1
  4254: 51 08 54                 jump @278 if a1 == 0
      :                          @271
  4257: 64 75                    s0 = a0
  4259: 82 77                    a0 = u64 [a0]
  4261: 97 79 01                 a2 = a0 << 0x1
  4264: 33 0a 08                 a3 = 0x8
  4267: e4 a8 08                 a1 = maxu(a1, a3)
  4270: e4 89 06                 s1 = maxu(a2, a1)
  4273: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  4276: 98 88 3f                 a1 = a1 >> 0x3f
  4279: 51 07 12                 jump @273 if a0 == 0
      :                          @272
  4282: 82 59 08                 a2 = u64 [s0 + 0x8]
  4285: 7b 19 18                 u64 [sp + 0x18] = a2
  4288: 49 11 20 01              u64 [sp + 32] = 0x1
  4292: 7b 17 28                 u64 [sp + 0x28] = a0
  4295: 28 06                    jump @274
      :                          @273
  4297: 49 11 20                 u64 [sp + 32] = 0
  4300: 01                       fallthrough
      :                          @274
  4301: 64 17                    a0 = sp
  4303: 95 1a 18                 a3 = sp + 0x18
  4306: 64 69                    a2 = s1
  4308: 50 20 86 00 6c fe        ra = 134, jump @238
      :                          @275 [@dyn 67]
  4314: 82 18                    a1 = u64 [sp]
  4316: 82 17 08                 a0 = u64 [sp + 0x8]
  4319: 51 08 14                 jump @279 if a1 == 0
      :                          @276
  4322: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  4332: aa 87 0d                 jump @280 if a0 == a1
      :                          @277
  4335: 52 07 18                 jump @281 if a0 != 0
      :                          @278
  4338: 00                       trap
      :                          @279
  4339: 7b 57 08                 u64 [s0 + 0x8] = a0
  4342: 7b 56                    u64 [s0] = s1
  4344: 01                       fallthrough
      :                          @280
  4345: 82 10 40                 ra = u64 [sp + 0x40]
  4348: 82 15 38                 s0 = u64 [sp + 0x38]
  4351: 82 16 30                 s1 = u64 [sp + 0x30]
  4354: 95 11 48                 sp = sp + 0x48
  4357: 32 00                    ret
      :                          @281
  4359: 00                       trap
      :                          @282
  4360: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  4363: 7b 10 30                 u64 [sp + 0x30] = ra
  4366: 7b 15 28                 u64 [sp + 0x28] = s0
  4369: 7b 16 20                 u64 [sp + 0x20] = s1
  4372: 64 89                    a2 = a1
  4374: 82 8a 08                 a3 = u64 [a1 + 0x8]
  4377: 64 75                    s0 = a0
  4379: 51 0a 35                 jump @287 if a3 == 0
      :                          @283
  4382: 82 98                    a1 = u64 [a2]
  4384: 33 07                    a0 = 0
  4386: 95 8b 08                 a4 = a1 + 0x8
  4389: 01                       fallthrough
      :                          @284
  4390: 82 bc                    a5 = u64 [a4]
  4392: c8 c7 07                 a0 = a0 + a5
  4395: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  4398: 95 bb 10                 a4 = a4 + 0x10
  4401: 52 0a f5                 jump @284 if a3 != 0
      :                          @285
  4404: 82 9a 18                 a3 = u64 [a2 + 0x18]
  4407: 51 0a 24                 jump @289 if a3 == 0
      :                          @286
  4410: 82 88 08                 a1 = u64 [a1 + 0x8]
  4413: 8e 88                    a1 = a1 >u 0
  4415: 88 7a 10                 a3 = a0 <u 0x10
  4418: 85 aa 01                 a3 = a3 ^ 0x1
  4421: d4 a8 08                 a1 = a1 | a3
  4424: 89 7a                    a3 = a0 <s 0
  4426: e0 a8 08                 a1 = a1 & ~a3
  4429: 52 08 0a                 jump @288 if a1 != 0
      :                          @287
  4432: 33 07                    a0 = 0
  4434: 33 08 01                 a1 = 0x1
  4437: 28 4a                    jump @297
      :                          @288
  4439: 97 77 01                 a0 = a0 << 0x1
  4442: 01                       fallthrough
      :                          @289
  4443: 51 07 40                 jump @296 if a0 == 0
      :                          @290
  4446: 57 07 79                 jump @302 if a0 <s 0
      :                          @291
  4449: 64 52                    t0 = s0
  4451: 33 0b 50 20 03           a4 = 0x32050
  4456: 33 08 00 00 01           a1 = 0x10000
  4461: c8 8b 0b                 a4 = a4 + a1
  4464: 01                       fallthrough
      :                          @292
  4465: 82 bc                    a5 = u64 [a4]
  4467: c8 7c 0a                 a3 = a5 + a0
  4470: ac ca 5f                 jump @300 if a3 <u a5
      :                          @293
  4473: 95 a5 01                 s0 = a3 + 0x1
  4476: 88 56 01                 s1 = s0 <u 0x1
  4479: d8 58 05                 s0 = a1 <u s0
  4482: d4 65 05                 s0 = s0 | s1
  4485: 52 05 50                 jump @300 if s0 != 0
      :                          @294
  4488: 82 b6                    s1 = u64 [a4]
  4490: ab c6 e7                 jump @292 if s1 != a5
      :                          @295
  4493: 7b ba                    u64 [a4] = a3
  4495: 33 08 50 20 04           a1 = 0x42050
  4500: c9 a8 08                 a1 = a1 - a3
  4503: 64 25                    s0 = t0
  4505: 28 06                    jump @297
      :                          @296
  4507: 33 08 01                 a1 = 0x1
  4510: 01                       fallthrough
      :                          @297
  4511: 7b 17                    u64 [sp] = a0
  4513: 7b 18 08                 u64 [sp + 0x8] = a1
  4516: 49 11 10                 u64 [sp + 16] = 0
  4519: 33 08 70 01 01           a1 = 0x10170
  4524: 64 17                    a0 = sp
  4526: 50 20 88 00 2e 06        ra = 136, jump @415
      :                          @298 [@dyn 68]
  4532: 52 07 22                 jump @301 if a0 != 0
      :                          @299
  4535: 82 17 10                 a0 = u64 [sp + 0x10]
  4538: 82 18 08                 a1 = u64 [sp + 0x8]
  4541: 82 19                    a2 = u64 [sp]
  4543: 7b 57 10                 u64 [s0 + 0x10] = a0
  4546: 7b 58 08                 u64 [s0 + 0x8] = a1
  4549: 7b 59                    u64 [s0] = a2
  4551: 82 10 30                 ra = u64 [sp + 0x30]
  4554: 82 15 28                 s0 = u64 [sp + 0x28]
  4557: 82 16 20                 s1 = u64 [sp + 0x20]
  4560: 95 11 38                 sp = sp + 0x38
  4563: 32 00                    ret
      :                          @300
  4565: 00                       trap
      :                          @301
  4566: 00                       trap
      :                          @302
  4567: 00                       trap
      :                          @303 [@dyn 69]
  4568: 82 72                    t0 = u64 [a0]
  4570: 33 09 00 00 ff           a2 = 0xffffffffffff0000
  4575: 95 2a ff ff fe           a3 = t0 + 0xfffffffffffeffff
  4580: ac 9a 28                 jump @309 if a3 <u a2
      :                          @304
  4583: 82 77 08                 a0 = u64 [a0 + 0x8]
  4586: 33 09 50 20 03           a2 = 0x32050
  4591: 95 99 00 00 01           a2 = a2 + 0x10000
  4596: 01                       fallthrough
      :                          @305
  4597: 82 9a                    a3 = u64 [a2]
  4599: c9 a9 0b                 a4 = a2 - a3
  4602: ab 7b 12                 jump @309 if a4 != a0
      :                          @306
  4605: c9 2a 0b                 a4 = a3 - t0
  4608: 01                       fallthrough
      :                          @307
  4609: 82 9c                    a5 = u64 [a2]
  4611: ab ac f2                 jump @305 if a5 != a3
      :                          @308
  4614: 7b 9b                    u64 [a2] = a4
  4616: 33 08                    a1 = 0
  4618: 32 00                    ret
      :                          @309
  4620: 32 00                    ret
      :                          @310 [@dyn 70]
  4622: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  4625: 7b 10 18                 u64 [sp + 0x18] = ra
  4628: 7b 15 10                 u64 [sp + 0x10] = s0
  4631: 7b 16 08                 u64 [sp + 0x8] = s1
  4634: 64 75                    s0 = a0
  4636: 82 7a 10                 a3 = u64 [a0 + 0x10]
  4639: 82 77                    a0 = u64 [a0]
  4641: c9 a7 07                 a0 = a0 - a3
  4644: 64 96                    s1 = a2
  4646: ac 97 2b                 jump @313 if a0 <u a2
      :                          @311
  4649: 7b 1a                    u64 [sp] = a3
  4651: 82 57 08                 a0 = u64 [s0 + 0x8]
  4654: c8 a7 07                 a0 = a0 + a3
  4657: 64 69                    a2 = s1
  4659: 50 20 8e 00 4f 01        ra = 142, jump @332
      :                          @312 [@dyn 71]
  4665: 82 17                    a0 = u64 [sp]
  4667: c8 76 06                 s1 = s1 + a0
  4670: 7b 56 10                 u64 [s0 + 0x10] = s1
  4673: 33 07                    a0 = 0
  4675: 82 10 18                 ra = u64 [sp + 0x18]
  4678: 82 15 10                 s0 = u64 [sp + 0x10]
  4681: 82 16 08                 s1 = u64 [sp + 0x8]
  4684: 95 11 20                 sp = sp + 0x20
  4687: 32 00                    ret
      :                          @313
  4689: 64 57                    a0 = s0
  4691: 7b 18                    u64 [sp] = a1
  4693: 64 a8                    a1 = a3
  4695: 64 69                    a2 = s1
  4697: 50 20 90 00 6f fc        ra = 144, jump @226
      :                          @314 [@dyn 72]
  4703: 82 18                    a1 = u64 [sp]
  4705: 82 5a 10                 a3 = u64 [s0 + 0x10]
  4708: 28 c5                    jump @311
      :                          @315 [@dyn 73]
  4710: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  4713: 7b 10 20                 u64 [sp + 0x20] = ra
  4716: 7b 15 18                 u64 [sp + 0x18] = s0
  4719: 7b 16 10                 u64 [sp + 0x10] = s1
  4722: 64 86                    s1 = a1
  4724: 83 88                    i32 a1 = a1 + 0
  4726: 33 09 80 00              a2 = 0x80
  4730: 64 7a                    a3 = a0
  4732: ae 98 2c                 jump @320 if a1 >=u a2
      :                          @316
  4735: 82 a8 10                 a1 = u64 [a3 + 0x10]
  4738: 82 a7                    a0 = u64 [a3]
  4740: ab 78 13                 jump @319 if a1 != a0
      :                          @317
  4743: 64 a7                    a0 = a3
  4745: 64 a5                    s0 = a3
  4747: 50 20 94 00 04 fe        ra = 148, jump @270
      :                          @318 [@dyn 74]
  4753: 64 5a                    a3 = s0
  4755: 82 58 10                 a1 = u64 [s0 + 0x10]
  4758: 01                       fallthrough
      :                          @319
  4759: 82 a7 08                 a0 = u64 [a3 + 0x8]
  4762: c8 87 07                 a0 = a0 + a1
  4765: 78 76                    u8 [a0] = s1
  4767: 95 88 01                 a1 = a1 + 0x1
  4770: 7b a8 10                 u64 [a3 + 0x10] = a1
  4773: 28 ac 00                 jump @328
      :                          @320
  4776: 8b 67 0b                 i32 a0 = s1 >> 0xb
  4779: 48 11 0c                 u32 [sp + 12] = 0
  4782: 52 07 1c                 jump @322 if a0 != 0
      :                          @321
  4785: 98 67 06                 a0 = s1 >> 0x6
  4788: 86 77 c0 00              a0 = a0 | 0xc0
  4792: 78 17 0c                 u8 [sp + 0xc] = a0
  4795: 84 67 3f                 a0 = s1 & 0x3f
  4798: 86 77 80 00              a0 = a0 | 0x80
  4802: 78 17 0d                 u8 [sp + 0xd] = a0
  4805: 33 06 02                 s1 = 0x2
  4808: 28 63                    jump @325
      :                          @322
  4810: 8b 67 10                 i32 a0 = s1 >> 0x10
  4813: 52 07 29                 jump @324 if a0 != 0
      :                          @323
  4816: 98 67 0c                 a0 = s1 >> 0xc
  4819: 86 77 e0 00              a0 = a0 | 0xe0
  4823: 78 17 0c                 u8 [sp + 0xc] = a0
  4826: 97 67 34                 a0 = s1 << 0x34
  4829: 98 77 3a                 a0 = a0 >> 0x3a
  4832: 95 77 80 00              a0 = a0 + 0x80
  4836: 78 17 0d                 u8 [sp + 0xd] = a0
  4839: 84 67 3f                 a0 = s1 & 0x3f
  4842: 86 77 80 00              a0 = a0 | 0x80
  4846: 78 17 0e                 u8 [sp + 0xe] = a0
  4849: 33 06 03                 s1 = 0x3
  4852: 28 37                    jump @325
      :                          @324
  4854: 97 67 2b                 a0 = s1 << 0x2b
  4857: 98 77 3d                 a0 = a0 >> 0x3d
  4860: 95 77 f0 00              a0 = a0 + 0xf0
  4864: 78 17 0c                 u8 [sp + 0xc] = a0
  4867: 97 67 2e                 a0 = s1 << 0x2e
  4870: 98 77 3a                 a0 = a0 >> 0x3a
  4873: 95 77 80 00              a0 = a0 + 0x80
  4877: 78 17 0d                 u8 [sp + 0xd] = a0
  4880: 97 67 34                 a0 = s1 << 0x34
  4883: 98 77 3a                 a0 = a0 >> 0x3a
  4886: 95 77 80 00              a0 = a0 + 0x80
  4890: 78 17 0e                 u8 [sp + 0xe] = a0
  4893: 84 67 3f                 a0 = s1 & 0x3f
  4896: 86 77 80 00              a0 = a0 | 0x80
  4900: 78 17 0f                 u8 [sp + 0xf] = a0
  4903: 33 06 04                 s1 = 0x4
  4906: 01                       fallthrough
      :                          @325
  4907: 82 a5 10                 s0 = u64 [a3 + 0x10]
  4910: 82 a7                    a0 = u64 [a3]
  4912: c9 57 07                 a0 = a0 - s0
  4915: ac 67 2e                 jump @329 if a0 <u s1
      :                          @326
  4918: 7b 1a                    u64 [sp] = a3
  4920: 82 a7 08                 a0 = u64 [a3 + 0x8]
  4923: c8 57 07                 a0 = a0 + s0
  4926: 95 18 0c                 a1 = sp + 0xc
  4929: 64 69                    a2 = s1
  4931: 50 20 96 00 3f           ra = 150, jump @332
      :                          @327 [@dyn 75]
  4936: c8 56 06                 s1 = s1 + s0
  4939: 82 17                    a0 = u64 [sp]
  4941: 7b 76 10                 u64 [a0 + 0x10] = s1
  4944: 01                       fallthrough
      :                          @328
  4945: 33 07                    a0 = 0
  4947: 82 10 20                 ra = u64 [sp + 0x20]
  4950: 82 15 18                 s0 = u64 [sp + 0x18]
  4953: 82 16 10                 s1 = u64 [sp + 0x10]
  4956: 95 11 28                 sp = sp + 0x28
  4959: 32 00                    ret
      :                          @329
  4961: 64 a7                    a0 = a3
  4963: 64 58                    a1 = s0
  4965: 64 69                    a2 = s1
  4967: 64 a5                    s0 = a3
  4969: 50 20 98 00 5f fb        ra = 152, jump @226
      :                          @330 [@dyn 76]
  4975: 64 5a                    a3 = s0
  4977: 82 55 10                 s0 = u64 [s0 + 0x10]
  4980: 28 c2                    jump @326
      :                          @331 [@dyn 77]
  4982: 64 8a                    a3 = a1
  4984: 33 08 70 01 01           a1 = 0x10170
  4989: 64 a9                    a2 = a3
  4991: 28 5d 04                 jump @415
      :                          @332
  4994: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  4997: 7b 10 18                 u64 [sp + 0x18] = ra
  5000: 7b 15 10                 u64 [sp + 0x10] = s0
  5003: 7b 16 08                 u64 [sp + 0x8] = s1
  5006: 53 19 10 64              jump @341 if a2 <u 16
      :                          @333
  5010: 8d 7a                    i32 a3 = -a0
  5012: 84 a2 07                 t0 = a3 & 0x7
  5015: c8 27 0b                 a4 = a0 + t0
  5018: 51 02 15                 jump @336 if t0 == 0
      :                          @334
  5021: 64 8c                    a5 = a1
  5023: 64 75                    s0 = a0
  5025: 01                       fallthrough
      :                          @335
  5026: 7c ca                    a3 = u8 [a5]
  5028: 78 5a                    u8 [s0] = a3
  5030: 95 55 01                 s0 = s0 + 0x1
  5033: 95 cc 01                 a5 = a5 + 0x1
  5036: ac b5 f6                 jump @335 if s0 <u a4
      :                          @336
  5039: c8 28 03                 t1 = a1 + t0
  5042: c9 29 02                 t0 = a2 - t0
  5045: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  5048: 84 38 07                 a1 = t1 & 0x7
  5051: c8 4b 0a                 a3 = a4 + t2
  5054: 51 08 3b                 jump @343 if a1 == 0
      :                          @337
  5057: 58 04 4b                 jump @346 if t2 <=s 0
      :                          @338
  5060: 97 38 03                 a1 = t1 << 0x3
  5063: 84 80 38                 ra = a1 & 0x38
  5066: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  5069: 82 c5                    s0 = u64 [a5]
  5071: 8d 88                    i32 a1 = -a1
  5073: 84 88 38                 a1 = a1 & 0x38
  5076: 95 cc 08                 a5 = a5 + 0x8
  5079: 01                       fallthrough
      :                          @339
  5080: 82 c6                    s1 = u64 [a5]
  5082: d0 05 05                 s0 = s0 >> ra
  5085: cf 86 09                 a2 = s1 << a1
  5088: d4 59 09                 a2 = a2 | s0
  5091: 7b b9                    u64 [a4] = a2
  5093: 95 bb 08                 a4 = a4 + 0x8
  5096: 95 cc 08                 a5 = a5 + 0x8
  5099: 64 65                    s0 = s1
  5101: ac ab eb                 jump @339 if a4 <u a3
      :                          @340
  5104: 28 1c                    jump @346
      :                          @341
  5106: 64 7a                    a3 = a0
  5108: 52 09 21                 jump @347 if a2 != 0
      :                          @342
  5111: 28 2f                    jump @349
      :                          @343
  5113: 58 04 13                 jump @346 if t2 <=s 0
      :                          @344
  5116: 64 38                    a1 = t1
  5118: 01                       fallthrough
      :                          @345
  5119: 82 89                    a2 = u64 [a1]
  5121: 7b b9                    u64 [a4] = a2
  5123: 95 bb 08                 a4 = a4 + 0x8
  5126: 95 88 08                 a1 = a1 + 0x8
  5129: ac ab f6                 jump @345 if a4 <u a3
      :                          @346
  5132: c8 43 08                 a1 = t1 + t2
  5135: 84 29 07                 a2 = t0 & 0x7
  5138: 51 09 14                 jump @349 if a2 == 0
      :                          @347
  5141: c8 a9 09                 a2 = a2 + a3
  5144: 01                       fallthrough
      :                          @348
  5145: 7c 8b                    a4 = u8 [a1]
  5147: 78 ab                    u8 [a3] = a4
  5149: 95 aa 01                 a3 = a3 + 0x1
  5152: 95 88 01                 a1 = a1 + 0x1
  5155: ac 9a f6                 jump @348 if a3 <u a2
      :                          @349
  5158: 82 10 18                 ra = u64 [sp + 0x18]
  5161: 82 15 10                 s0 = u64 [sp + 0x10]
  5164: 82 16 08                 s1 = u64 [sp + 0x8]
  5167: 95 11 20                 sp = sp + 0x20
  5170: 32 00                    ret
      :                          @350 [@dyn 78]
  5172: 82 77                    a0 = u64 [a0]
  5174: 01                       fallthrough
      :                          @351
  5175: 28                       jump @351
      :                          @352 [@dyn 79]
  5176: 82 77                    a0 = u64 [a0]
  5178: 01                       fallthrough
      :                          @353
  5179: 95 11 a8                 sp = sp + 0xffffffffffffffa8
  5182: 7b 10 50                 u64 [sp + 0x50] = ra
  5185: 7b 15 48                 u64 [sp + 0x48] = s0
  5188: 7b 16 40                 u64 [sp + 0x40] = s1
  5191: 7b 18                    u64 [sp] = a1
  5193: 98 79 04                 a2 = a0 >> 0x4
  5196: 33 08 27                 a1 = 0x27
  5199: 53 29 71 02 81 00        jump @356 if a2 <u 625
      :                          @354
  5205: 33 08 27                 a1 = 0x27
  5208: 95 1a 3e                 a3 = sp + 0x3e
  5211: 3a 09 08 10 03           a2 = u64 [0x31008]
  5216: 7b 19 10                 u64 [sp + 0x10] = a2
  5219: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
  5225: 33 04 7b 14              t2 = 0x147b
  5229: 33 0b e0 01 01           a4 = 0x101e0
  5234: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
  5240: 01                       fallthrough
      :                          @355
  5241: 64 72                    t0 = a0
  5243: 82 17 10                 a0 = u64 [sp + 0x10]
  5246: d6 72 07                 a0 = t0 mulhu a0
  5249: 98 77 0b                 a0 = a0 >> 0xb
  5252: 82 19 08                 a2 = u64 [sp + 0x8]
  5255: c0 97 0c                 i32 a5 = a0 * a2
  5258: c8 2c 06                 s1 = a5 + t0
  5261: 97 6c 30                 a5 = s1 << 0x30
  5264: 98 cc 32                 a5 = a5 >> 0x32
  5267: ca 4c 0c                 a5 = a5 * t2
  5270: 98 c3 11                 t1 = a5 >> 0x11
  5273: 98 cc 10                 a5 = a5 >> 0x10
  5276: 84 cc fe 07              a5 = a5 & 0x7fe
  5280: 96 39 9c                 a2 = t1 * 0xffffffffffffff9c
  5283: c8 69 09                 a2 = a2 + s1
  5286: 97 99 31                 a2 = a2 << 0x31
  5289: 98 99 30                 a2 = a2 >> 0x30
  5292: c8 bc 0c                 a5 = a5 + a4
  5295: 7c c6                    s1 = u8 [a5]
  5297: 7c cc 01                 a5 = u8 [a5 + 0x1]
  5300: c8 b9 09                 a2 = a2 + a4
  5303: 7c 95 01                 s0 = u8 [a2 + 0x1]
  5306: 7c 99                    a2 = u8 [a2]
  5308: 78 ac ff                 u8 [a3 + 0xffffffffffffffff] = a5
  5311: 78 a6 fe                 u8 [a3 + 0xfffffffffffffffe] = s1
  5314: 78 a5 01                 u8 [a3 + 0x1] = s0
  5317: 78 a9                    u8 [a3] = a2
  5319: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
  5322: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
  5325: ac 20 ac                 jump @355 if ra <u t0
      :                          @356
  5328: 54 17 63 3b              jump @358 if a0 <=u 99
      :                          @357
  5332: 97 79 30                 a2 = a0 << 0x30
  5335: 98 99 32                 a2 = a2 >> 0x32
  5338: 96 99 7b 14              a2 = a2 * 0x147b
  5342: 98 99 11                 a2 = a2 >> 0x11
  5345: 96 9a 9c                 a3 = a2 * 0xffffffffffffff9c
  5348: c8 a7 07                 a0 = a0 + a3
  5351: 97 77 31                 a0 = a0 << 0x31
  5354: 98 77 30                 a0 = a0 >> 0x30
  5357: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  5360: 33 0a e0 01 01           a3 = 0x101e0
  5365: c8 a7 07                 a0 = a0 + a3
  5368: 7c 7a 01                 a3 = u8 [a0 + 0x1]
  5371: 7c 77                    a0 = u8 [a0]
  5373: 95 1b 19                 a4 = sp + 0x19
  5376: c8 8b 0b                 a4 = a4 + a1
  5379: 78 ba 01                 u8 [a4 + 0x1] = a3
  5382: 78 b7                    u8 [a4] = a0
  5384: 64 97                    a0 = a2
  5386: 01                       fallthrough
      :                          @358
  5387: 55 17 0a 14              jump @360 if a0 >=u 10
      :                          @359
  5391: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  5394: 95 19 19                 a2 = sp + 0x19
  5397: c8 89 09                 a2 = a2 + a1
  5400: 83 77 30                 i32 a0 = a0 + 0x30
  5403: 78 97                    u8 [a2] = a0
  5405: 28 21                    jump @361
      :                          @360
  5407: 97 77 01                 a0 = a0 << 0x1
  5410: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  5413: 33 09 e0 01 01           a2 = 0x101e0
  5418: c8 97 07                 a0 = a0 + a2
  5421: 7c 79 01                 a2 = u8 [a0 + 0x1]
  5424: 7c 77                    a0 = u8 [a0]
  5426: 95 1a 19                 a3 = sp + 0x19
  5429: c8 8a 0a                 a3 = a3 + a1
  5432: 78 a9 01                 u8 [a3 + 0x1] = a2
  5435: 78 a7                    u8 [a3] = a0
  5437: 01                       fallthrough
      :                          @361
  5438: 95 1a 19                 a3 = sp + 0x19
  5441: c8 8a 0a                 a3 = a3 + a1
  5444: 9a 8b 27                 a4 = 0x27 - a1
  5447: 33 08 a0 01 01           a1 = 0x101a0
  5452: 82 17                    a0 = u64 [sp]
  5454: 33 09                    a2 = 0
  5456: 50 20 a0 00 13           ra = 160, jump @363
      :                          @362 [@dyn 80]
  5461: 82 10 50                 ra = u64 [sp + 0x50]
  5464: 82 15 48                 s0 = u64 [sp + 0x48]
  5467: 82 16 40                 s1 = u64 [sp + 0x40]
  5470: 95 11 58                 sp = sp + 0x58
  5473: 32 00                    ret
      :                          @363
  5475: 95 11 98                 sp = sp + 0xffffffffffffff98
  5478: 7b 10 60                 u64 [sp + 0x60] = ra
  5481: 7b 15 58                 u64 [sp + 0x58] = s0
  5484: 7b 16 50                 u64 [sp + 0x50] = s1
  5487: 80 73 34                 t1 = u32 [a0 + 0x34]
  5490: 7b 1a 20                 u64 [sp + 0x20] = a3
  5493: 64 9c                    a5 = a2
  5495: 84 36 01                 s1 = t1 & 0x1
  5498: 33 02 2b                 t0 = 0x2b
  5501: 33 09 00 00 11           a2 = 0x110000
  5506: 84 3a 04                 a3 = t1 & 0x4
  5509: 7b 1b 28                 u64 [sp + 0x28] = a4
  5512: c8 b6 04                 t2 = s1 + a4
  5515: 7b 1c 30                 u64 [sp + 0x30] = a5
  5518: 52 0a 10                 jump @366 if a3 != 0
      :                          @364
  5521: 49 11 38                 u64 [sp + 56] = 0
  5524: 82 78                    a1 = u64 [a0]
  5526: 94 69 2b                 a2 = 0x2b if s1 != 0
  5529: 52 08 35                 jump @370 if a1 != 0
      :                          @365
  5532: 28 56                    jump @375
      :                          @366
  5534: 7b 18 38                 u64 [sp + 0x38] = a1
  5537: 33 09                    a2 = 0
  5539: 51 0c 1b                 jump @369 if a5 == 0
      :                          @367
  5542: 82 1b 38                 a4 = u64 [sp + 0x38]
  5545: 01                       fallthrough
      :                          @368
  5546: 7d b5                    s0 = i8 [a4]
  5548: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
  5551: 85 5a 01                 a3 = s0 ^ 0x1
  5554: c8 a9 09                 a2 = a2 + a3
  5557: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  5560: 95 bb 01                 a4 = a4 + 0x1
  5563: 52 0c ef                 jump @368 if a5 != 0
      :                          @369
  5566: c8 94 04                 t2 = t2 + a2
  5569: 33 09 00 00 11           a2 = 0x110000
  5574: 82 78                    a1 = u64 [a0]
  5576: db 62 09                 a2 = t0 if s1 != 0
  5579: 51 08 27                 jump @375 if a1 == 0
      :                          @370
  5582: 82 7a 08                 a3 = u64 [a0 + 0x8]
  5585: ae a4 21                 jump @375 if t2 >=u a3
      :                          @371
  5588: 84 38 08                 a1 = t1 & 0x8
  5591: 52 08 51                 jump @378 if a1 != 0
      :                          @372
  5594: 7c 76 38                 s1 = u8 [a0 + 0x38]
  5597: c9 4a 0a                 a3 = a3 - t2
  5600: 7b 19 18                 u64 [sp + 0x18] = a2
  5603: 5a 16 01 a0 00           jump @385 if s1 >s 1
      :                          @373
  5608: 52 06 ad 00              jump @387 if s1 != 0
      :                          @374
  5612: 7b 1a 10                 u64 [sp + 0x10] = a3
  5615: 28 ac 00                 jump @388
      :                          @375
  5618: 82 75 20                 s0 = u64 [a0 + 0x20]
  5621: 82 76 28                 s1 = u64 [a0 + 0x28]
  5624: 64 57                    a0 = s0
  5626: 64 68                    a1 = s1
  5628: 82 1a 38                 a3 = u64 [sp + 0x38]
  5631: 82 1b 30                 a4 = u64 [sp + 0x30]
  5634: 50 20 a2 00 75 01        ra = 162, jump @408
      :                          @376 [@dyn 81]
  5640: 33 08 01                 a1 = 0x1
  5643: 52 07 be 00              jump @393 if a0 != 0
      :                          @377
  5647: 82 6c 18                 a5 = u64 [s1 + 0x18]
  5650: 64 57                    a0 = s0
  5652: 82 18 20                 a1 = u64 [sp + 0x20]
  5655: 82 19 28                 a2 = u64 [sp + 0x28]
  5658: 82 10 60                 ra = u64 [sp + 0x60]
  5661: 82 15 58                 s0 = u64 [sp + 0x58]
  5664: 82 16 50                 s1 = u64 [sp + 0x50]
  5667: 95 11 68                 sp = sp + 0x68
  5670: 32 0c                    jump [a5]
      :                          @378
  5672: 7b 1a 40                 u64 [sp + 0x40] = a3
  5675: 64 45                    s0 = t2
  5677: 81 78 30                 a1 = i32 [a0 + 0x30]
  5680: 7b 18 10                 u64 [sp + 0x10] = a1
  5683: 7c 7a 38                 a3 = u8 [a0 + 0x38]
  5686: 7b 1a 08                 u64 [sp + 0x8] = a3
  5689: 82 7a 20                 a3 = u64 [a0 + 0x20]
  5692: 82 78 28                 a1 = u64 [a0 + 0x28]
  5695: 48 17 30 30              u32 [a0 + 48] = 0x30
  5699: 7b 17                    u64 [sp] = a0
  5701: 46 17 38 01              u8 [a0 + 56] = 0x1
  5705: 7b 1a 48                 u64 [sp + 0x48] = a3
  5708: 64 a7                    a0 = a3
  5710: 64 86                    s1 = a1
  5712: 82 1a 38                 a3 = u64 [sp + 0x38]
  5715: 82 1b 30                 a4 = u64 [sp + 0x30]
  5718: 50 20 a4 00 21 01        ra = 164, jump @408
      :                          @379 [@dyn 82]
  5724: 52 07 69                 jump @392 if a0 != 0
      :                          @380
  5727: 82 17 40                 a0 = u64 [sp + 0x40]
  5730: c9 57 05                 s0 = a0 - s0
  5733: 95 55 01                 s0 = s0 + 0x1
  5736: 01                       fallthrough
      :                          @381
  5737: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  5740: 51 05 cb 00              jump @403 if s0 == 0
      :                          @382
  5744: 82 69 20                 a2 = u64 [s1 + 0x20]
  5747: 33 08 30                 a1 = 0x30
  5750: 82 17 48                 a0 = u64 [sp + 0x48]
  5753: b4 90 02 a6 00           ra = 166, jump [a2]
      :                          @383 [@dyn 83]
  5758: 51 07 eb                 jump @381 if a0 == 0
      :                          @384
  5761: 28 44                    jump @392
      :                          @385
  5763: 52 16 02 12              jump @387 if s1 != 2
      :                          @386
  5767: 98 a6 01                 s1 = a3 >> 0x1
  5770: 95 a8 01                 a1 = a3 + 0x1
  5773: 98 88 01                 a1 = a1 >> 0x1
  5776: 7b 18 10                 u64 [sp + 0x10] = a1
  5779: 28 08                    jump @388
      :                          @387
  5781: 64 a6                    s1 = a3
  5783: 49 11 10                 u64 [sp + 16] = 0
  5786: 01                       fallthrough
      :                          @388
  5787: 82 78 20                 a1 = u64 [a0 + 0x20]
  5790: 7b 18 48                 u64 [sp + 0x48] = a1
  5793: 82 75 28                 s0 = u64 [a0 + 0x28]
  5796: 81 77 30                 a0 = i32 [a0 + 0x30]
  5799: 7b 17 40                 u64 [sp + 0x40] = a0
  5802: 95 66 01                 s1 = s1 + 0x1
  5805: 01                       fallthrough
      :                          @389
  5806: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  5809: 51 06 28                 jump @394 if s1 == 0
      :                          @390
  5812: 82 59 20                 a2 = u64 [s0 + 0x20]
  5815: 82 17 48                 a0 = u64 [sp + 0x48]
  5818: 82 18 40                 a1 = u64 [sp + 0x40]
  5821: b4 90 02 a8 00           ra = 168, jump [a2]
      :                          @391 [@dyn 84]
  5826: 51 07 ec                 jump @389 if a0 == 0
      :                          @392
  5829: 33 08 01                 a1 = 0x1
  5832: 01                       fallthrough
      :                          @393
  5833: 64 87                    a0 = a1
  5835: 82 10 60                 ra = u64 [sp + 0x60]
  5838: 82 15 58                 s0 = u64 [sp + 0x58]
  5841: 82 16 50                 s1 = u64 [sp + 0x50]
  5844: 95 11 68                 sp = sp + 0x68
  5847: 32 00                    ret
      :                          @394
  5849: 82 16 48                 s1 = u64 [sp + 0x48]
  5852: 64 67                    a0 = s1
  5854: 64 58                    a1 = s0
  5856: 82 19 18                 a2 = u64 [sp + 0x18]
  5859: 82 1a 38                 a3 = u64 [sp + 0x38]
  5862: 82 1b 30                 a4 = u64 [sp + 0x30]
  5865: 50 20 aa 00 8e 00        ra = 170, jump @408
      :                          @395 [@dyn 85]
  5871: 33 08 01                 a1 = 0x1
  5874: 52 07 d7                 jump @393 if a0 != 0
      :                          @396
  5877: 82 5a 18                 a3 = u64 [s0 + 0x18]
  5880: 64 67                    a0 = s1
  5882: 82 18 20                 a1 = u64 [sp + 0x20]
  5885: 82 19 28                 a2 = u64 [sp + 0x28]
  5888: b4 a0 02 ac 00           ra = 172, jump [a3]
      :                          @397 [@dyn 86]
  5893: 33 08 01                 a1 = 0x1
  5896: 52 07 c1                 jump @393 if a0 != 0
      :                          @398
  5899: 82 17 10                 a0 = u64 [sp + 0x10]
  5902: 9a 77                    a0 = -a0
  5904: 7b 17 38                 u64 [sp + 0x38] = a0
  5907: 33 06 ff                 s1 = 0xffffffffffffffff
  5910: 01                       fallthrough
      :                          @399
  5911: 82 17 38                 a0 = u64 [sp + 0x38]
  5914: c8 67 07                 a0 = a0 + s1
  5917: 51 17 ff 45              jump @406 if a0 == 4294967295
      :                          @400
  5921: 82 59 20                 a2 = u64 [s0 + 0x20]
  5924: 82 17 48                 a0 = u64 [sp + 0x48]
  5927: 82 18 40                 a1 = u64 [sp + 0x40]
  5930: b4 90 02 ae 00           ra = 174, jump [a2]
      :                          @401 [@dyn 87]
  5935: 95 66 01                 s1 = s1 + 0x1
  5938: 51 07 e5                 jump @399 if a0 == 0
      :                          @402
  5941: 28 39                    jump @407
      :                          @403
  5943: 82 6a 18                 a3 = u64 [s1 + 0x18]
  5946: 82 17 48                 a0 = u64 [sp + 0x48]
  5949: 82 18 20                 a1 = u64 [sp + 0x20]
  5952: 82 19 28                 a2 = u64 [sp + 0x28]
  5955: b4 a0 02 b0 00           ra = 176, jump [a3]
      :                          @404 [@dyn 88]
  5960: 33 08 01                 a1 = 0x1
  5963: 52 07 7e ff              jump @393 if a0 != 0
      :                          @405
  5967: 33 08                    a1 = 0
  5969: 82 16                    s1 = u64 [sp]
  5971: 82 17 10                 a0 = u64 [sp + 0x10]
  5974: 7a 67 30                 u32 [s1 + 0x30] = a0
  5977: 82 17 08                 a0 = u64 [sp + 0x8]
  5980: 78 67 38                 u8 [s1 + 0x38] = a0
  5983: 28 6a ff                 jump @393
      :                          @406
  5986: 82 16 10                 s1 = u64 [sp + 0x10]
  5989: 82 17 10                 a0 = u64 [sp + 0x10]
  5992: d8 76 08                 a1 = s1 <u a0
  5995: 28 5e ff                 jump @393
      :                          @407
  5998: 82 17 10                 a0 = u64 [sp + 0x10]
  6001: d8 76 08                 a1 = s1 <u a0
  6004: 28 55 ff                 jump @393
      :                          @408
  6007: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  6010: 7b 10 20                 u64 [sp + 0x20] = ra
  6013: 7b 15 18                 u64 [sp + 0x18] = s0
  6016: 7b 16 10                 u64 [sp + 0x10] = s1
  6019: 83 9c                    i32 a5 = a2 + 0
  6021: 33 02 00 00 11           t0 = 0x110000
  6026: 64 a6                    s1 = a3
  6028: 64 85                    s0 = a1
  6030: 64 7a                    a3 = a0
  6032: aa 2c 21                 jump @411 if a5 == t0
      :                          @409
  6035: 82 5c 20                 a5 = u64 [s0 + 0x20]
  6038: 64 a7                    a0 = a3
  6040: 64 98                    a1 = a2
  6042: 7b 1b 08                 u64 [sp + 0x8] = a4
  6045: 7b 1a                    u64 [sp] = a3
  6047: b4 c0 02 b2 00           ra = 178, jump [a5]
      :                          @410 [@dyn 89]
  6052: 82 1a                    a3 = u64 [sp]
  6054: 82 1b 08                 a4 = u64 [sp + 0x8]
  6057: 64 78                    a1 = a0
  6059: 33 07 01                 a0 = 0x1
  6062: 52 08 20                 jump @414 if a1 != 0
      :                          @411
  6065: 51 06 1a                 jump @413 if s1 == 0
      :                          @412
  6068: 82 5c 18                 a5 = u64 [s0 + 0x18]
  6071: 64 a7                    a0 = a3
  6073: 64 68                    a1 = s1
  6075: 64 b9                    a2 = a4
  6077: 82 10 20                 ra = u64 [sp + 0x20]
  6080: 82 15 18                 s0 = u64 [sp + 0x18]
  6083: 82 16 10                 s1 = u64 [sp + 0x10]
  6086: 95 11 28                 sp = sp + 0x28
  6089: 32 0c                    jump [a5]
      :                          @413
  6091: 33 07                    a0 = 0
  6093: 01                       fallthrough
      :                          @414
  6094: 82 10 20                 ra = u64 [sp + 0x20]
  6097: 82 15 18                 s0 = u64 [sp + 0x18]
  6100: 82 16 10                 s1 = u64 [sp + 0x10]
  6103: 95 11 28                 sp = sp + 0x28
  6106: 32 00                    ret
      :                          @415
  6108: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  6112: 7b 10 80 00              u64 [sp + 0x80] = ra
  6116: 7b 15 78                 u64 [sp + 0x78] = s0
  6119: 7b 16 70                 u64 [sp + 0x70] = s1
  6122: 49 11 60 20              u64 [sp + 96] = 0x20
  6126: 33 0a 03                 a3 = 0x3
  6129: 78 1a 68                 u8 [sp + 0x68] = a3
  6132: 82 96 20                 s1 = u64 [a2 + 0x20]
  6135: 49 11 30                 u64 [sp + 48] = 0
  6138: 49 11 40                 u64 [sp + 64] = 0
  6141: 7b 17 50                 u64 [sp + 0x50] = a0
  6144: 7b 18 58                 u64 [sp + 0x58] = a1
  6147: 51 06 0a 01              jump @437 if s1 == 0
      :                          @416
  6151: 82 97 28                 a0 = u64 [a2 + 0x28]
  6154: 51 07 79 01              jump @447 if a0 == 0
      :                          @417
  6158: 49 11 28                 u64 [sp + 40] = 0
  6161: 82 95                    s0 = u64 [a2]
  6163: 7b 19 08                 u64 [sp + 0x8] = a2
  6166: 82 98 10                 a1 = u64 [a2 + 0x10]
  6169: 7b 18 18                 u64 [sp + 0x18] = a1
  6172: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  6175: 97 88 03                 a1 = a1 << 0x3
  6178: 98 88 03                 a1 = a1 >> 0x3
  6181: 95 88 01                 a1 = a1 + 0x1
  6184: 7b 18                    u64 [sp] = a1
  6186: 95 55 08                 s0 = s0 + 0x8
  6189: 96 78 38                 a1 = a0 * 0x38
  6192: 95 66 18                 s1 = s1 + 0x18
  6195: 33 07 9c 00              a0 = 0x9c
  6199: 7b 17 10                 u64 [sp + 0x10] = a0
  6202: 01                       fallthrough
      :                          @418
  6203: 7b 18 20                 u64 [sp + 0x20] = a1
  6206: 82 59                    a2 = u64 [s0]
  6208: 51 09 18                 jump @421 if a2 == 0
      :                          @419
  6211: 82 1a 58                 a3 = u64 [sp + 0x58]
  6214: 82 17 50                 a0 = u64 [sp + 0x50]
  6217: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  6220: 82 aa 18                 a3 = u64 [a3 + 0x18]
  6223: b4 a0 02 b4 00           ra = 180, jump [a3]
      :                          @420 [@dyn 90]
  6228: 52 07 55 01              jump @450 if a0 != 0
      :                          @421
  6232: 81 67 10                 a0 = i32 [s1 + 0x10]
  6235: 7a 17 60                 u32 [sp + 0x60] = a0
  6238: 7c 67 18                 a0 = u8 [s1 + 0x18]
  6241: 78 17 68                 u8 [sp + 0x68] = a0
  6244: 81 67 14                 a0 = i32 [s1 + 0x14]
  6247: 7a 17 64                 u32 [sp + 0x64] = a0
  6250: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  6253: 82 67                    a0 = u64 [s1]
  6255: 51 08 26                 jump @426 if a1 == 0
      :                          @422
  6258: 52 18 01 16              jump @424 if a1 != 1
      :                          @423
  6262: 97 77 04                 a0 = a0 << 0x4
  6265: 82 18 18                 a1 = u64 [sp + 0x18]
  6268: c8 87 07                 a0 = a0 + a1
  6271: 82 78 08                 a1 = u64 [a0 + 0x8]
  6274: 82 19 10                 a2 = u64 [sp + 0x10]
  6277: aa 98 07                 jump @425 if a1 == a2
      :                          @424
  6280: 33 08                    a1 = 0
  6282: 28 0f                    jump @427
      :                          @425
  6284: 82 77                    a0 = u64 [a0]
  6286: 82 77                    a0 = u64 [a0]
  6288: 33 08 01                 a1 = 0x1
  6291: 28 06                    jump @427
      :                          @426
  6293: 33 08 01                 a1 = 0x1
  6296: 01                       fallthrough
      :                          @427
  6297: 7b 18 30                 u64 [sp + 0x30] = a1
  6300: 7b 17 38                 u64 [sp + 0x38] = a0
  6303: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  6306: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  6309: 51 08 26                 jump @432 if a1 == 0
      :                          @428
  6312: 52 18 01 16              jump @430 if a1 != 1
      :                          @429
  6316: 97 77 04                 a0 = a0 << 0x4
  6319: 82 18 18                 a1 = u64 [sp + 0x18]
  6322: c8 87 07                 a0 = a0 + a1
  6325: 82 78 08                 a1 = u64 [a0 + 0x8]
  6328: 82 19 10                 a2 = u64 [sp + 0x10]
  6331: aa 98 07                 jump @431 if a1 == a2
      :                          @430
  6334: 33 08                    a1 = 0
  6336: 28 0f                    jump @433
      :                          @431
  6338: 82 77                    a0 = u64 [a0]
  6340: 82 77                    a0 = u64 [a0]
  6342: 33 08 01                 a1 = 0x1
  6345: 28 06                    jump @433
      :                          @432
  6347: 33 08 01                 a1 = 0x1
  6350: 01                       fallthrough
      :                          @433
  6351: 7b 18 40                 u64 [sp + 0x40] = a1
  6354: 7b 17 48                 u64 [sp + 0x48] = a0
  6357: 82 67 08                 a0 = u64 [s1 + 0x8]
  6360: 97 77 04                 a0 = a0 << 0x4
  6363: 82 18 18                 a1 = u64 [sp + 0x18]
  6366: c8 78 08                 a1 = a1 + a0
  6369: 82 87                    a0 = u64 [a1]
  6371: 82 89 08                 a2 = u64 [a1 + 0x8]
  6374: 95 18 30                 a1 = sp + 0x30
  6377: b4 90 02 b6 00           ra = 182, jump [a2]
      :                          @434 [@dyn 91]
  6382: 52 07 bb 00              jump @450 if a0 != 0
      :                          @435
  6386: 95 55 10                 s0 = s0 + 0x10
  6389: 82 18 20                 a1 = u64 [sp + 0x20]
  6392: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  6395: 95 66 38                 s1 = s1 + 0x38
  6398: 82 17 28                 a0 = u64 [sp + 0x28]
  6401: 95 77 01                 a0 = a0 + 0x1
  6404: 7b 17 28                 u64 [sp + 0x28] = a0
  6407: 52 08 34 ff              jump @418 if a1 != 0
      :                          @436
  6411: 28 6b                    jump @445
      :                          @437
  6413: 82 97 18                 a0 = u64 [a2 + 0x18]
  6416: 51 07 73                 jump @447 if a0 == 0
      :                          @438
  6419: 82 95 10                 s0 = u64 [a2 + 0x10]
  6422: 33 0a                    a3 = 0
  6424: 97 78 04                 a1 = a0 << 0x4
  6427: c8 58 08                 a1 = a1 + s0
  6430: 7b 18 20                 u64 [sp + 0x20] = a1
  6433: 7b 19 08                 u64 [sp + 0x8] = a2
  6436: 82 96                    s1 = u64 [a2]
  6438: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  6441: 97 77 04                 a0 = a0 << 0x4
  6444: 98 77 04                 a0 = a0 >> 0x4
  6447: 95 77 01                 a0 = a0 + 0x1
  6450: 7b 17                    u64 [sp] = a0
  6452: 95 66 08                 s1 = s1 + 0x8
  6455: 01                       fallthrough
      :                          @439
  6456: 7b 1a 28                 u64 [sp + 0x28] = a3
  6459: 82 69                    a2 = u64 [s1]
  6461: 51 09 17                 jump @442 if a2 == 0
      :                          @440
  6464: 82 1a 58                 a3 = u64 [sp + 0x58]
  6467: 82 17 50                 a0 = u64 [sp + 0x50]
  6470: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  6473: 82 aa 18                 a3 = u64 [a3 + 0x18]
  6476: b4 a0 02 b8 00           ra = 184, jump [a3]
      :                          @441 [@dyn 92]
  6481: 52 07 58                 jump @450 if a0 != 0
      :                          @442
  6484: 82 57                    a0 = u64 [s0]
  6486: 82 59 08                 a2 = u64 [s0 + 0x8]
  6489: 95 18 30                 a1 = sp + 0x30
  6492: b4 90 02 ba 00           ra = 186, jump [a2]
      :                          @443 [@dyn 93]
  6497: 52 07 48                 jump @450 if a0 != 0
      :                          @444
  6500: 95 66 10                 s1 = s1 + 0x10
  6503: 95 55 10                 s0 = s0 + 0x10
  6506: 82 1a 28                 a3 = u64 [sp + 0x28]
  6509: 95 aa 01                 a3 = a3 + 0x1
  6512: 82 17 20                 a0 = u64 [sp + 0x20]
  6515: ab 75 c5                 jump @439 if s0 != a0
      :                          @445
  6518: 82 19 08                 a2 = u64 [sp + 0x8]
  6521: 82 1a                    a3 = u64 [sp]
  6523: 82 97 08                 a0 = u64 [a2 + 0x8]
  6526: ac 7a 0d                 jump @448 if a3 <u a0
      :                          @446
  6529: 28 2d                    jump @451
      :                          @447
  6531: 33 0a                    a3 = 0
  6533: 82 97 08                 a0 = u64 [a2 + 0x8]
  6536: 54 07 26                 jump @451 if a0 <=u 0
      :                          @448
  6539: 82 97                    a0 = u64 [a2]
  6541: 97 a8 04                 a1 = a3 << 0x4
  6544: c8 87 09                 a2 = a0 + a1
  6547: 82 1a 58                 a3 = u64 [sp + 0x58]
  6550: 82 17 50                 a0 = u64 [sp + 0x50]
  6553: 82 98                    a1 = u64 [a2]
  6555: 82 99 08                 a2 = u64 [a2 + 0x8]
  6558: 82 aa 18                 a3 = u64 [a3 + 0x18]
  6561: b4 a0 02 bc 00           ra = 188, jump [a3]
      :                          @449 [@dyn 94]
  6566: 51 07 08                 jump @451 if a0 == 0
      :                          @450
  6569: 33 07 01                 a0 = 0x1
  6572: 28 05                    jump @452
      :                          @451
  6574: 33 07                    a0 = 0
  6576: 01                       fallthrough
      :                          @452
  6577: 82 10 80 00              ra = u64 [sp + 0x80]
  6581: 82 15 78                 s0 = u64 [sp + 0x78]
  6584: 82 16 70                 s1 = u64 [sp + 0x70]
  6587: 95 11 88 00              sp = sp + 0x88
  6591: 32 00                    ret
      :                          @453 [@dyn 95]
  6593: 32 00                    ret
      :                          @454 [@dyn 96]
  6595: 95 11 80                 sp = sp + 0xffffffffffffff80
  6598: 7b 10 78                 u64 [sp + 0x78] = ra
  6601: 7b 15 70                 u64 [sp + 0x70] = s0
  6604: 7b 16 68                 u64 [sp + 0x68] = s1
  6607: 64 92                    t0 = a2
  6609: 33 00                    ra = 0
  6611: 33 0b                    a4 = 0
  6613: 33 05                    s0 = 0
  6615: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
  6625: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
  6631: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
  6641: 82 79 10                 a2 = u64 [a0 + 0x10]
  6644: 7b 19 48                 u64 [sp + 0x48] = a2
  6647: 82 79                    a2 = u64 [a0]
  6649: 7b 19 38                 u64 [sp + 0x38] = a2
  6652: 82 77 08                 a0 = u64 [a0 + 0x8]
  6655: 7b 17 30                 u64 [sp + 0x30] = a0
  6658: 33 07 2c 00 01           a0 = 0x1002c
  6663: 7b 17 08                 u64 [sp + 0x8] = a0
  6666: 3a 07 10 10 03           a0 = u64 [0x31010]
  6671: 7b 17 60                 u64 [sp + 0x60] = a0
  6674: 7b 18 58                 u64 [sp + 0x58] = a1
  6677: 95 88 08                 a1 = a1 + 0x8
  6680: 7b 18                    u64 [sp] = a1
  6682: 33 0c 0a                 a5 = 0xa
  6685: 7b 12 20                 u64 [sp + 0x20] = t0
  6688: 7b 13 18                 u64 [sp + 0x18] = t1
  6691: 7b 14 10                 u64 [sp + 0x10] = t2
  6694: 28 3b                    jump @458
      :                          @455
  6696: 64 06                    s1 = ra
  6698: c8 89 07                 a0 = a2 + a1
  6701: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
  6704: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  6707: 88 77 01                 a0 = a0 <u 0x1
  6710: 01                       fallthrough
      :                          @456
  6711: 82 1a 48                 a3 = u64 [sp + 0x48]
  6714: 78 a7                    u8 [a3] = a0
  6716: 82 17 30                 a0 = u64 [sp + 0x30]
  6719: 82 7a 18                 a3 = u64 [a0 + 0x18]
  6722: 82 17 38                 a0 = u64 [sp + 0x38]
  6725: b4 a0 02 c2 00           ra = 194, jump [a3]
      :                          @457 [@dyn 97]
  6730: 64 5b                    a4 = s0
  6732: 82 12 20                 t0 = u64 [sp + 0x20]
  6735: 82 13 18                 t1 = u64 [sp + 0x18]
  6738: 82 14 10                 t2 = u64 [sp + 0x10]
  6741: 64 60                    ra = s1
  6743: 33 0c 0a                 a5 = 0xa
  6746: 82 15 40                 s0 = u64 [sp + 0x40]
  6749: 52 07 64 01              jump @499 if a0 != 0
      :                          @458
  6753: 84 57 ff 00              a0 = s0 & 0xff
  6757: 52 07 58 01              jump @498 if a0 != 0
      :                          @459
  6761: 7b 1b 50                 u64 [sp + 0x50] = a4
  6764: ae 02 0a                 jump @462 if t0 >=u ra
      :                          @460
  6767: 28 ef 00                 jump @489
      :                          @461
  6770: ac 02 ec 00              jump @489 if t0 <u ra
      :                          @462
  6774: c9 02 08                 a1 = t0 - ra
  6777: 82 16 58                 s1 = u64 [sp + 0x58]
  6780: c8 06 06                 s1 = s1 + ra
  6783: 55 18 10 1d              jump @468 if a1 >=u 16
      :                          @463
  6787: aa 02 d8 00              jump @488 if t0 == ra
      :                          @464
  6791: 33 0a                    a3 = 0
  6793: 01                       fallthrough
      :                          @465
  6794: c8 a6 07                 a0 = s1 + a3
  6797: 7c 77                    a0 = u8 [a0]
  6799: aa c7 a5 00              jump @483 if a0 == a5
      :                          @466
  6803: 95 aa 01                 a3 = a3 + 0x1
  6806: ab a8 f4                 jump @465 if a1 != a3
      :                          @467
  6809: 28 c2 00                 jump @488
      :                          @468
  6812: 95 69 07                 a2 = s1 + 0x7
  6815: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
  6818: c9 6a 07                 a0 = a3 - s1
  6821: d3 6a 0a                 a3 = a3 ^ s1
  6824: 88 aa 01                 a3 = a3 <u 0x1
  6827: 88 7b 01                 a4 = a0 <u 0x1
  6830: d4 ba 0a                 a3 = a3 | a4
  6833: 51 0a 45                 jump @474 if a3 == 0
      :                          @469
  6836: 33 07                    a0 = 0
  6838: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  6841: 82 1b                    a4 = u64 [sp]
  6843: c8 0b 0b                 a4 = a4 + ra
  6846: 28 08                    jump @471
      :                          @470
  6848: 82 1b                    a4 = u64 [sp]
  6850: c8 0b 0b                 a4 = a4 + ra
  6853: 01                       fallthrough
      :                          @471
  6854: c8 76 0c                 a5 = s1 + a0
  6857: 82 cc                    a5 = u64 [a5]
  6859: c8 7b 09                 a2 = a4 + a0
  6862: 82 99                    a2 = u64 [a2]
  6864: d3 4c 05                 s0 = a5 ^ t2
  6867: c8 35 05                 s0 = s0 + t1
  6870: e0 c5 0c                 a5 = s0 & ~a5
  6873: d3 49 05                 s0 = a2 ^ t2
  6876: c8 35 05                 s0 = s0 + t1
  6879: e0 95 09                 a2 = s0 & ~a2
  6882: d4 c9 09                 a2 = a2 | a5
  6885: 82 1c 60                 a5 = u64 [sp + 0x60]
  6888: d2 c9 09                 a2 = a2 & a5
  6891: 52 09 1f                 jump @477 if a2 != 0
      :                          @472
  6894: 95 77 10                 a0 = a0 + 0x10
  6897: ae 7a d5                 jump @471 if a3 >=u a0
      :                          @473
  6900: 28 16                    jump @477
      :                          @474
  6902: c8 a6 0b                 a4 = s1 + a3
  6905: 7c bb                    a4 = u8 [a4]
  6907: aa cb 51                 jump @486 if a4 == a5
      :                          @475
  6910: 95 aa 01                 a3 = a3 + 0x1
  6913: ab a7 f5                 jump @474 if a0 != a3
      :                          @476
  6916: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  6919: ae 7a b9                 jump @470 if a3 >=u a0
      :                          @477
  6922: aa 87 9b 00              jump @495 if a0 == a1
      :                          @478
  6926: 33 0a                    a3 = 0
  6928: c8 76 06                 s1 = s1 + a0
  6931: c9 72 08                 a1 = t0 - a0
  6934: c9 08 08                 a1 = a1 - ra
  6937: 33 0c 0a                 a5 = 0xa
  6940: 82 1b 50                 a4 = u64 [sp + 0x50]
  6943: 01                       fallthrough
      :                          @479
  6944: c8 a6 09                 a2 = s1 + a3
  6947: 7c 99                    a2 = u8 [a2]
  6949: aa c9 0b                 jump @482 if a2 == a5
      :                          @480
  6952: 95 aa 01                 a3 = a3 + 0x1
  6955: ab a8 f5                 jump @479 if a1 != a3
      :                          @481
  6958: 28 2d                    jump @488
      :                          @482
  6960: c8 7a 0a                 a3 = a3 + a0
  6963: 01                       fallthrough
      :                          @483
  6964: c8 0a 0a                 a3 = a3 + ra
  6967: 95 a0 01                 ra = a3 + 0x1
  6970: ae 2a 38 ff              jump @461 if a3 >=u t0
      :                          @484
  6974: 82 17 58                 a0 = u64 [sp + 0x58]
  6977: c8 7a 0a                 a3 = a3 + a0
  6980: 7c a7                    a0 = u8 [a3]
  6982: ab c7 2c ff              jump @461 if a0 != a5
      :                          @485
  6986: 28 62                    jump @496
      :                          @486
  6988: 82 1b 50                 a4 = u64 [sp + 0x50]
  6991: c8 0a 0a                 a3 = a3 + ra
  6994: 95 a0 01                 ra = a3 + 0x1
  6997: ac 2a e9                 jump @484 if a3 <u t0
      :                          @487
  7000: 28 1a ff                 jump @461
      :                          @488
  7003: 64 20                    ra = t0
  7005: 01                       fallthrough
      :                          @489
  7006: 49 11 40 01              u64 [sp + 64] = 0x1
  7010: 64 b5                    s0 = a4
  7012: 64 26                    s1 = t0
  7014: aa 2b 57                 jump @498 if a4 == t0
      :                          @490
  7017: 82 17 48                 a0 = u64 [sp + 0x48]
  7020: 7c 77                    a0 = u8 [a0]
  7022: 51 07 23                 jump @493 if a0 == 0
      :                          @491
  7025: 82 17 30                 a0 = u64 [sp + 0x30]
  7028: 82 7a 18                 a3 = u64 [a0 + 0x18]
  7031: 33 09 04                 a2 = 0x4
  7034: 82 17 38                 a0 = u64 [sp + 0x38]
  7037: 82 18 08                 a1 = u64 [sp + 0x8]
  7040: 7b 10 28                 u64 [sp + 0x28] = ra
  7043: b4 a0 02 c4 00           ra = 196, jump [a3]
      :                          @492 [@dyn 98]
  7048: 82 1b 50                 a4 = u64 [sp + 0x50]
  7051: 82 10 28                 ra = u64 [sp + 0x28]
  7054: 52 07 33                 jump @499 if a0 != 0
      :                          @493
  7057: c9 b6 09                 a2 = s1 - a4
  7060: 82 18 58                 a1 = u64 [sp + 0x58]
  7063: c8 b8 08                 a1 = a1 + a4
  7066: ab b6 8e fe              jump @455 if s1 != a4
      :                          @494
  7070: 64 06                    s1 = ra
  7072: 33 07                    a0 = 0
  7074: 28 95 fe                 jump @456
      :                          @495
  7077: 64 20                    ra = t0
  7079: 82 1b 50                 a4 = u64 [sp + 0x50]
  7082: 28 b4                    jump @489
      :                          @496
  7084: 49 11 40                 u64 [sp + 64] = 0
  7087: 64 05                    s0 = ra
  7089: 64 06                    s1 = ra
  7091: 82 17 48                 a0 = u64 [sp + 0x48]
  7094: 7c 77                    a0 = u8 [a0]
  7096: 52 07 b9                 jump @491 if a0 != 0
      :                          @497
  7099: 28 d6                    jump @493
      :                          @498
  7101: 33 07                    a0 = 0
  7103: 28 06                    jump @500
      :                          @499
  7105: 33 07 01                 a0 = 0x1
  7108: 01                       fallthrough
      :                          @500
  7109: 82 10 78                 ra = u64 [sp + 0x78]
  7112: 82 15 70                 s0 = u64 [sp + 0x70]
  7115: 82 16 68                 s1 = u64 [sp + 0x68]
  7118: 95 11 80 00              sp = sp + 0x80
  7122: 32 00                    ret
      :                          @501 [@dyn 99]
  7124: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  7127: 7b 10 20                 u64 [sp + 0x20] = ra
  7130: 7b 15 18                 u64 [sp + 0x18] = s0
  7133: 7b 16 10                 u64 [sp + 0x10] = s1
  7136: 82 75 10                 s0 = u64 [a0 + 0x10]
  7139: 7c 59                    a2 = u8 [s0]
  7141: 82 7b                    a4 = u64 [a0]
  7143: 82 76 08                 s1 = u64 [a0 + 0x8]
  7146: 51 09 33                 jump @505 if a2 == 0
      :                          @502
  7149: 82 6a 18                 a3 = u64 [s1 + 0x18]
  7152: 7b 18 08                 u64 [sp + 0x8] = a1
  7155: 33 08 2c 00 01           a1 = 0x1002c
  7160: 33 09 04                 a2 = 0x4
  7163: 64 b7                    a0 = a4
  7165: 7b 1b                    u64 [sp] = a4
  7167: b4 a0 02 c8 00           ra = 200, jump [a3]
      :                          @503 [@dyn 100]
  7172: 82 18 08                 a1 = u64 [sp + 0x8]
  7175: 82 1b                    a4 = u64 [sp]
  7177: 51 07 14                 jump @505 if a0 == 0
      :                          @504
  7180: 33 07 01                 a0 = 0x1
  7183: 82 10 20                 ra = u64 [sp + 0x20]
  7186: 82 15 18                 s0 = u64 [sp + 0x18]
  7189: 82 16 10                 s1 = u64 [sp + 0x10]
  7192: 95 11 28                 sp = sp + 0x28
  7195: 32 00                    ret
      :                          @505
  7197: 83 87                    i32 a0 = a1 + 0
  7199: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  7202: 88 77 01                 a0 = a0 <u 0x1
  7205: 78 57                    u8 [s0] = a0
  7207: 82 6c 20                 a5 = u64 [s1 + 0x20]
  7210: 64 b7                    a0 = a4
  7212: 82 10 20                 ra = u64 [sp + 0x20]
  7215: 82 15 18                 s0 = u64 [sp + 0x18]
  7218: 82 16 10                 s1 = u64 [sp + 0x10]
  7221: 95 11 28                 sp = sp + 0x28
  7224: 32 0c                    jump [a5]
      :                          @506 [@dyn 101]
  7226: 64 8a                    a3 = a1
  7228: 33 08 a8 01 01           a1 = 0x101a8
  7233: 64 a9                    a2 = a3
  7235: 28 99 fb                 jump @415
      :                          @507
  7238: 95 11 70 ff              sp = sp + 0xffffffffffffff70
  7242: 7b 10 88 00              u64 [sp + 0x88] = ra
  7246: 7b 15 80 00              u64 [sp + 0x80] = s0
  7250: 7b 16 78                 u64 [sp + 0x78] = s1
  7253: 64 75                    s0 = a0
  7255: 7c 77 08                 a0 = u8 [a0 + 0x8]
  7258: 64 8b                    a4 = a1
  7260: 33 08 01                 a1 = 0x1
  7263: 33 06 01                 s1 = 0x1
  7266: 51 07 1d                 jump @509 if a0 == 0
      :                          @508
  7269: 78 56 08                 u8 [s0 + 0x8] = s1
  7272: 46 15 09 01              u8 [s0 + 9] = 0x1
  7276: 64 57                    a0 = s0
  7278: 82 10 88 00              ra = u64 [sp + 0x88]
  7282: 82 15 80 00              s0 = u64 [sp + 0x80]
  7286: 82 16 78                 s1 = u64 [sp + 0x78]
  7289: 95 11 90 00              sp = sp + 0x90
  7293: 32 00                    ret
      :                          @509
  7295: 64 9a                    a3 = a2
  7297: 82 5c                    a5 = u64 [s0]
  7299: 80 c7 34                 a0 = u32 [a5 + 0x34]
  7302: 7c 58 09                 a1 = u8 [s0 + 0x9]
  7305: 84 79 04                 a2 = a0 & 0x4
  7308: 52 09 45                 jump @515 if a2 != 0
      :                          @510
  7311: 51 08 32                 jump @513 if a1 == 0
      :                          @511
  7314: 82 c8 28                 a1 = u64 [a5 + 0x28]
  7317: 82 c7 20                 a0 = u64 [a5 + 0x20]
  7320: 82 83 18                 t1 = u64 [a1 + 0x18]
  7323: 33 08 d8 01 01           a1 = 0x101d8
  7328: 33 09 02                 a2 = 0x2
  7331: 64 a6                    s1 = a3
  7333: 7b 1b 10                 u64 [sp + 0x10] = a4
  7336: 7b 1c 08                 u64 [sp + 0x8] = a5
  7339: b4 30 02 cc 00           ra = 204, jump [t1]
      :                          @512 [@dyn 102]
  7344: 82 1c 08                 a5 = u64 [sp + 0x8]
  7347: 82 1b 10                 a4 = u64 [sp + 0x10]
  7350: 64 6a                    a3 = s1
  7352: 33 08 01                 a1 = 0x1
  7355: 33 06 01                 s1 = 0x1
  7358: 52 07 a7                 jump @508 if a0 != 0
      :                          @513
  7361: 64 b7                    a0 = a4
  7363: 64 c8                    a1 = a5
  7365: b4 a0 02 ce 00           ra = 206, jump [a3]
      :                          @514 [@dyn 103]
  7370: 33 08 01                 a1 = 0x1
  7373: 64 76                    s1 = a0
  7375: 28 96                    jump @508
      :                          @515
  7377: 52 08 37                 jump @519 if a1 != 0
      :                          @516
  7380: 82 c8 28                 a1 = u64 [a5 + 0x28]
  7383: 82 c7 20                 a0 = u64 [a5 + 0x20]
  7386: 82 83 18                 t1 = u64 [a1 + 0x18]
  7389: 33 08 dc 01 01           a1 = 0x101dc
  7394: 33 09 01                 a2 = 0x1
  7397: 33 06 01                 s1 = 0x1
  7400: 7b 1a                    u64 [sp] = a3
  7402: 7b 1b 10                 u64 [sp + 0x10] = a4
  7405: 7b 1c 08                 u64 [sp + 0x8] = a5
  7408: b4 30 02 d0 00           ra = 208, jump [t1]
      :                          @517 [@dyn 104]
  7413: 82 1c 08                 a5 = u64 [sp + 0x8]
  7416: 82 1b 10                 a4 = u64 [sp + 0x10]
  7419: 82 1a                    a3 = u64 [sp]
  7421: 33 08 01                 a1 = 0x1
  7424: 52 07 65 ff              jump @508 if a0 != 0
      :                          @518
  7428: 81 c7 34                 a0 = i32 [a5 + 0x34]
  7431: 01                       fallthrough
      :                          @519
  7432: 33 06 01                 s1 = 0x1
  7435: 78 16 37                 u8 [sp + 0x37] = s1
  7438: 82 c8 20                 a1 = u64 [a5 + 0x20]
  7441: 82 c9 28                 a2 = u64 [a5 + 0x28]
  7444: 7b 18 18                 u64 [sp + 0x18] = a1
  7447: 7b 19 20                 u64 [sp + 0x20] = a2
  7450: 95 18 37                 a1 = sp + 0x37
  7453: 7b 18 28                 u64 [sp + 0x28] = a1
  7456: 81 c8 30                 a1 = i32 [a5 + 0x30]
  7459: 7c c9 38                 a2 = u8 [a5 + 0x38]
  7462: 82 c3                    t1 = u64 [a5]
  7464: 82 c4 08                 t2 = u64 [a5 + 0x8]
  7467: 82 c0 10                 ra = u64 [a5 + 0x10]
  7470: 82 c2 18                 t0 = u64 [a5 + 0x18]
  7473: 7a 17 6c                 u32 [sp + 0x6c] = a0
  7476: 7a 18 68                 u32 [sp + 0x68] = a1
  7479: 78 19 70                 u8 [sp + 0x70] = a2
  7482: 7b 13 38                 u64 [sp + 0x38] = t1
  7485: 7b 14 40                 u64 [sp + 0x40] = t2
  7488: 7b 10 48                 u64 [sp + 0x48] = ra
  7491: 7b 12 50                 u64 [sp + 0x50] = t0
  7494: 95 17 18                 a0 = sp + 0x18
  7497: 7b 17 58                 u64 [sp + 0x58] = a0
  7500: 33 07 a8 01 01           a0 = 0x101a8
  7505: 7b 17 60                 u64 [sp + 0x60] = a0
  7508: 95 18 38                 a1 = sp + 0x38
  7511: 64 b7                    a0 = a4
  7513: b4 a0 02 d2 00           ra = 210, jump [a3]
      :                          @520 [@dyn 105]
  7518: 52 07 21                 jump @523 if a0 != 0
      :                          @521
  7521: 82 18 60                 a1 = u64 [sp + 0x60]
  7524: 82 17 58                 a0 = u64 [sp + 0x58]
  7527: 82 8a 18                 a3 = u64 [a1 + 0x18]
  7530: 33 08 da 01 01           a1 = 0x101da
  7535: 33 09 02                 a2 = 0x2
  7538: b4 a0 02 d4 00           ra = 212, jump [a3]
      :                          @522 [@dyn 106]
  7543: 64 76                    s1 = a0
  7545: 33 08 01                 a1 = 0x1
  7548: 28 e9 fe                 jump @508
      :                          @523
  7551: 33 08 01                 a1 = 0x1
  7554: 28 e3 fe                 jump @508
      :                          @524
  7557: 51 08 9b 00              jump @545 if a1 == 0
      :                          @525
  7561: 64 79                    a2 = a0
  7563: 7c 77                    a0 = u8 [a0]
  7565: 51 07 91 00              jump @544 if a0 == 0
      :                          @526
  7569: 51 27 ff 00 90 00        jump @546 if a0 == 255
      :                          @527
  7575: 6c 7a                    a3 = sext.b a0
  7577: 57 0a 09                 jump @529 if a3 <s 0
      :                          @528
  7580: 33 0a                    a3 = 0
  7582: 33 08                    a1 = 0
  7584: 28 73                    jump @543
      :                          @529
  7586: 55 27 c0 00 0d           jump @531 if a0 >=u 192
      :                          @530
  7591: 33 0a 01                 a3 = 0x1
  7594: 33 0b 80                 a4 = 0xffffffffffffff80
  7597: 28 4a                    jump @540
      :                          @531
  7599: 55 27 e0 00 0e           jump @533 if a0 >=u 224
      :                          @532
  7604: 33 0a 02                 a3 = 0x2
  7607: 33 0b 40 ff              a4 = 0xffffffffffffff40
  7611: 28 3c                    jump @540
      :                          @533
  7613: 55 27 f0 00 0e           jump @535 if a0 >=u 240
      :                          @534
  7618: 33 0a 03                 a3 = 0x3
  7621: 33 0b 20 ff              a4 = 0xffffffffffffff20
  7625: 28 2e                    jump @540
      :                          @535
  7627: 55 27 f8 00 0e           jump @537 if a0 >=u 248
      :                          @536
  7632: 33 0a 04                 a3 = 0x4
  7635: 33 0b 10 ff              a4 = 0xffffffffffffff10
  7639: 28 20                    jump @540
      :                          @537
  7641: 55 27 fc 00 0e           jump @539 if a0 >=u 252
      :                          @538
  7646: 33 0a 05                 a3 = 0x5
  7649: 33 0b 08 ff              a4 = 0xffffffffffffff08
  7653: 28 12                    jump @540
      :                          @539
  7655: 88 7a fe 00              a3 = a0 <u 0xfe
  7659: 33 0b 04 ff              a4 = 0xffffffffffffff04
  7663: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  7667: 85 aa 07                 a3 = a3 ^ 0x7
  7670: 01                       fallthrough
      :                          @540
  7671: ae 8a 2b                 jump @547 if a3 >=u a1
      :                          @541
  7674: 33 08                    a1 = 0
  7676: c8 b7 07                 a0 = a0 + a4
  7679: 64 ab                    a4 = a3
  7681: 01                       fallthrough
      :                          @542
  7682: c8 b9 0c                 a5 = a2 + a4
  7685: 7c cc                    a5 = u8 [a5]
  7687: 97 88 08                 a1 = a1 << 0x8
  7690: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  7693: d4 c8 08                 a1 = a1 | a5
  7696: 52 0b f2                 jump @542 if a4 != 0
      :                          @543
  7699: 8a a9 03                 i32 a2 = a3 << 0x3
  7702: cf 97 07                 a0 = a0 << a2
  7705: c8 87 07                 a0 = a0 + a1
  7708: 32 00                    ret
      :                          @544
  7710: 32 00                    ret
      :                          @545
  7712: 00                       trap
      :                          @546
  7713: 00                       trap
      :                          @547
  7714: 00                       trap
      :                          @548 [@dyn 107]
  7715: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  7718: 7b 10 28                 u64 [sp + 0x28] = ra
  7721: 7b 15 20                 u64 [sp + 0x20] = s0
  7724: 7b 16 18                 u64 [sp + 0x18] = s1
  7727: 64 86                    s1 = a1
  7729: 82 88 28                 a1 = u64 [a1 + 0x28]
  7732: 82 6a 20                 a3 = u64 [s1 + 0x20]
  7735: 82 8b 18                 a4 = u64 [a1 + 0x18]
  7738: 64 75                    s0 = a0
  7740: 33 08 a0 01 01           a1 = 0x101a0
  7745: 33 09 01                 a2 = 0x1
  7748: 64 a7                    a0 = a3
  7750: b4 b0 02 d8 00           ra = 216, jump [a4]
      :                          @549 [@dyn 108]
  7755: 7b 16                    u64 [sp] = s1
  7757: 78 17 08                 u8 [sp + 0x8] = a0
  7760: 46 11 09                 u8 [sp + 9] = 0
  7763: 7b 15 10                 u64 [sp + 0x10] = s0
  7766: 33 09 de 00              a2 = 0xde
  7770: 64 17                    a0 = sp
  7772: 95 18 10                 a1 = sp + 0x10
  7775: 50 20 da 00 e7 fd        ra = 218, jump @507
      :                          @550 [@dyn 109]
  7781: 33 07 01                 a0 = 0x1
  7784: 7c 18 08                 a1 = u8 [sp + 0x8]
  7787: 52 08 1b                 jump @552 if a1 != 0
      :                          @551
  7790: 82 17                    a0 = u64 [sp]
  7792: 82 78 28                 a1 = u64 [a0 + 0x28]
  7795: 82 77 20                 a0 = u64 [a0 + 0x20]
  7798: 82 8a 18                 a3 = u64 [a1 + 0x18]
  7801: 33 08 dd 01 01           a1 = 0x101dd
  7806: 33 09 01                 a2 = 0x1
  7809: b4 a0 02 dc 00           ra = 220, jump [a3]
      :                          @552 [@dyn 110]
  7814: 82 10 28                 ra = u64 [sp + 0x28]
  7817: 82 15 20                 s0 = u64 [sp + 0x20]
  7820: 82 16 18                 s1 = u64 [sp + 0x18]
  7823: 95 11 30                 sp = sp + 0x30
  7826: 32 00                    ret
      :                          @553 [@dyn 111]
  7828: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  7832: 7b 10 80 00              u64 [sp + 0x80] = ra
  7836: 80 89 34                 a2 = u32 [a1 + 0x34]
  7839: 82 77                    a0 = u64 [a0]
  7841: 84 9a 10                 a3 = a2 & 0x10
  7844: 52 0a 16                 jump @556 if a3 != 0
      :                          @554
  7847: 84 99 20                 a2 = a2 & 0x20
  7850: 52 09 41                 jump @559 if a2 != 0
      :                          @555
  7853: 7c 77                    a0 = u8 [a0]
  7855: 82 10 80 00              ra = u64 [sp + 0x80]
  7859: 95 11 88 00              sp = sp + 0x88
  7863: 28 84 f5                 jump @353
      :                          @556
  7866: 7c 77                    a0 = u8 [a0]
  7868: 33 0b 81 00              a4 = 0x81
  7872: 95 19 7f                 a2 = sp + 0x7f
  7875: 33 02 57                 t0 = 0x57
  7878: 01                       fallthrough
      :                          @557
  7879: 64 bc                    a5 = a4
  7881: 84 7b 0f                 a4 = a0 & 0xf
  7884: 97 77 38                 a0 = a0 << 0x38
  7887: 98 77 3c                 a0 = a0 >> 0x3c
  7890: 88 b3 0a                 t1 = a4 <u 0xa
  7893: 33 0a 30                 a3 = 0x30
  7896: da 32 0a                 a3 = t0 if t1 == 0
  7899: be ba 0a                 i32 a3 = a3 + a4
  7902: 78 9a                    u8 [a2] = a3
  7904: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  7907: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
  7910: 52 07 e1                 jump @557 if a0 != 0
      :                          @558
  7913: 28 31                    jump @561
      :                          @559
  7915: 7c 77                    a0 = u8 [a0]
  7917: 33 0b 81 00              a4 = 0x81
  7921: 95 19 7f                 a2 = sp + 0x7f
  7924: 33 02 37                 t0 = 0x37
  7927: 01                       fallthrough
      :                          @560
  7928: 64 bc                    a5 = a4
  7930: 84 7b 0f                 a4 = a0 & 0xf
  7933: 97 77 38                 a0 = a0 << 0x38
  7936: 98 77 3c                 a0 = a0 >> 0x3c
  7939: 88 b3 0a                 t1 = a4 <u 0xa
  7942: 33 0a 30                 a3 = 0x30
  7945: da 32 0a                 a3 = t0 if t1 == 0
  7948: be ba 0a                 i32 a3 = a3 + a4
  7951: 78 9a                    u8 [a2] = a3
  7953: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  7956: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
  7959: 52 07 e1                 jump @560 if a0 != 0
      :                          @561
  7962: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
  7965: 56 27 80 00 28           jump @564 if a0 >u 128
      :                          @562
  7970: 9a bb 81 00              a4 = 0x81 - a4
  7974: 64 1a                    a3 = sp
  7976: c8 7a 0a                 a3 = a3 + a0
  7979: 33 09 02                 a2 = 0x2
  7982: 64 87                    a0 = a1
  7984: 33 08 de 01 01           a1 = 0x101de
  7989: 50 20 e0 00 2e f6        ra = 224, jump @363
      :                          @563 [@dyn 112]
  7995: 82 10 80 00              ra = u64 [sp + 0x80]
  7999: 95 11 88 00              sp = sp + 0x88
  8003: 32 00                    ret
      :                          @564
  8005: 00                       trap
