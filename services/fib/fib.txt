// RO data = 656/656 bytes
// RW data = 16/65616 bytes
// Stack size = 65536 bytes
// RO data = [70, 73, 66, 32, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 58, 32, 116, 105, 109, 101, 115, 108, 111, 116, 61, 32, 115, 101, 114, 118, 105, 99, 101, 95, 105, 110, 100, 101, 120, 61, 32, 115, 101, 110, 100, 101, 114, 61, 32, 97, 109, 111, 117, 110, 116, 61, 32, 114, 101, 99, 101, 105, 118, 101, 114, 61, 32, 109, 101, 109, 111, 61, 32, 103, 97, 115, 95, 108, 105, 109, 105, 116, 61, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 26, 0, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 41, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 57, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 49, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 67, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 73, 0, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 70, 73, 66, 32, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 32, 103, 97, 115, 58, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 52, 41, 0, 0, 0, 200, 0, 1, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 225, 0, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 54, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 56, 0, 0, 0, 0, 0, 0, 0, 62, 0, 0, 0, 0, 0, 0, 0, 70, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 104, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 106, 0, 0, 0, 0, 0, 0, 0, 112, 0, 0, 0, 0, 0, 0, 0, 116, 0, 0, 0, 0, 0, 0, 0, 32, 32, 32, 32, 44, 32, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 119, 114, 105, 116, 101, 95, 114, 101, 115, 117, 108, 116, 32, 107, 101, 121, 61, 44, 32, 114, 101, 115, 117, 108, 116, 61, 0, 0, 84, 2, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 101, 2, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0]
// RW data = [75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 2252
// Code size = 6709 bytes

      :                          @0
     0: 28 ea 01 00 00           jump @34
      :                          @1
     5: 28 40 02 00 00           jump @39
      :                          @2
    10: 28 76 04                 jump @107
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 80 89 34                 a2 = u32 [a1 + 0x34]
    24: 84 9a 10                 a3 = a2 & 0x10
    27: 52 0a 16                 jump @6 if a3 != 0
      :                          @4
    30: 84 99 20                 a2 = a2 & 0x20
    33: 52 09 40                 jump @9 if a2 != 0
      :                          @5
    36: 80 77                    a0 = u32 [a0]
    38: 82 10 80 00              ra = u64 [sp + 0x80]
    42: 95 11 88 00              sp = sp + 0x88
    46: 28 15 0f                 jump @283
      :                          @6
    49: 81 7b                    a4 = i32 [a0]
    51: 33 09 81 00              a2 = 0x81
    55: 95 17 7f                 a0 = sp + 0x7f
    58: 33 02 57                 t0 = 0x57
    61: 01                       fallthrough
      :                          @7
    62: 64 9c                    a5 = a2
    64: 8b ba 04                 i32 a3 = a4 >> 0x4
    67: 84 bb 0f                 a4 = a4 & 0xf
    70: 88 b3 0a                 t1 = a4 <u 0xa
    73: 33 09 30                 a2 = 0x30
    76: da 32 09                 a2 = t0 if t1 == 0
    79: be b9 09                 i32 a2 = a2 + a4
    82: 78 79                    u8 [a0] = a2
    84: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
    87: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
    90: 64 ab                    a4 = a3
    92: 52 0a e2                 jump @7 if a3 != 0
      :                          @8
    95: 28 30                    jump @11
      :                          @9
    97: 81 7b                    a4 = i32 [a0]
    99: 33 09 81 00              a2 = 0x81
   103: 95 17 7f                 a0 = sp + 0x7f
   106: 33 02 37                 t0 = 0x37
   109: 01                       fallthrough
      :                          @10
   110: 64 9c                    a5 = a2
   112: 8b ba 04                 i32 a3 = a4 >> 0x4
   115: 84 bb 0f                 a4 = a4 & 0xf
   118: 88 b3 0a                 t1 = a4 <u 0xa
   121: 33 09 30                 a2 = 0x30
   124: da 32 09                 a2 = t0 if t1 == 0
   127: be b9 09                 i32 a2 = a2 + a4
   130: 78 79                    u8 [a0] = a2
   132: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   135: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   138: 64 ab                    a4 = a3
   140: 52 0a e2                 jump @10 if a3 != 0
      :                          @11
   143: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   146: 56 27 80 00 27           jump @14 if a0 >u 128
      :                          @12
   151: 9a 9b 81 00              a4 = 0x81 - a2
   155: 64 1a                    a3 = sp
   157: c8 7a 0a                 a3 = a3 + a0
   160: 33 09 02                 a2 = 0x2
   163: 64 87                    a0 = a1
   165: 33 08 8a 01 01           a1 = 0x1018a
   170: 50 10 04 c0 0f           ra = 4, jump @293
      :                          @13 [@dyn 2]
   175: 82 10 80 00              ra = u64 [sp + 0x80]
   179: 95 11 88 00              sp = sp + 0x88
   183: 32 00                    ret
      :                          @14
   185: 00                       trap
      :                          @15 [@dyn 3]
   186: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   190: 7b 10 80 00              u64 [sp + 0x80] = ra
   194: 80 89 34                 a2 = u32 [a1 + 0x34]
   197: 84 9a 10                 a3 = a2 & 0x10
   200: 52 0a 16                 jump @18 if a3 != 0
      :                          @16
   203: 84 99 20                 a2 = a2 & 0x20
   206: 52 09 40                 jump @21 if a2 != 0
      :                          @17
   209: 82 77                    a0 = u64 [a0]
   211: 82 10 80 00              ra = u64 [sp + 0x80]
   215: 95 11 88 00              sp = sp + 0x88
   219: 28 68 0e                 jump @283
      :                          @18
   222: 82 7b                    a4 = u64 [a0]
   224: 33 09 81 00              a2 = 0x81
   228: 95 17 7f                 a0 = sp + 0x7f
   231: 33 02 57                 t0 = 0x57
   234: 01                       fallthrough
      :                          @19
   235: 64 9c                    a5 = a2
   237: 98 ba 04                 a3 = a4 >> 0x4
   240: 84 bb 0f                 a4 = a4 & 0xf
   243: 88 b3 0a                 t1 = a4 <u 0xa
   246: 33 09 30                 a2 = 0x30
   249: da 32 09                 a2 = t0 if t1 == 0
   252: be b9 09                 i32 a2 = a2 + a4
   255: 78 79                    u8 [a0] = a2
   257: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   260: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   263: 64 ab                    a4 = a3
   265: 52 0a e2                 jump @19 if a3 != 0
      :                          @20
   268: 28 30                    jump @23
      :                          @21
   270: 82 7b                    a4 = u64 [a0]
   272: 33 09 81 00              a2 = 0x81
   276: 95 17 7f                 a0 = sp + 0x7f
   279: 33 02 37                 t0 = 0x37
   282: 01                       fallthrough
      :                          @22
   283: 64 9c                    a5 = a2
   285: 98 ba 04                 a3 = a4 >> 0x4
   288: 84 bb 0f                 a4 = a4 & 0xf
   291: 88 b3 0a                 t1 = a4 <u 0xa
   294: 33 09 30                 a2 = 0x30
   297: da 32 09                 a2 = t0 if t1 == 0
   300: be b9 09                 i32 a2 = a2 + a4
   303: 78 79                    u8 [a0] = a2
   305: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   308: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   311: 64 ab                    a4 = a3
   313: 52 0a e2                 jump @22 if a3 != 0
      :                          @23
   316: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   319: 56 27 80 00 27           jump @26 if a0 >u 128
      :                          @24
   324: 9a 9b 81 00              a4 = 0x81 - a2
   328: 64 1a                    a3 = sp
   330: c8 7a 0a                 a3 = a3 + a0
   333: 33 09 02                 a2 = 0x2
   336: 64 87                    a0 = a1
   338: 33 08 8a 01 01           a1 = 0x1018a
   343: 50 10 08 13 0f           ra = 8, jump @293
      :                          @25 [@dyn 4]
   348: 82 10 80 00              ra = u64 [sp + 0x80]
   352: 95 11 88 00              sp = sp + 0x88
   356: 32 00                    ret
      :                          @26
   358: 00                       trap
      :                          @27 [@dyn 5]
   359: 95 11 c8                 sp = sp + 0xffffffffffffffc8
   362: 7b 10 30                 u64 [sp + 0x30] = ra
   365: 7b 15 28                 u64 [sp + 0x28] = s0
   368: 7b 16 20                 u64 [sp + 0x20] = s1
   371: 64 86                    s1 = a1
   373: 82 88 28                 a1 = u64 [a1 + 0x28]
   376: 82 6a 20                 a3 = u64 [s1 + 0x20]
   379: 82 8b 18                 a4 = u64 [a1 + 0x18]
   382: 64 75                    s0 = a0
   384: 33 08 48 01 01           a1 = 0x10148
   389: 33 09 01                 a2 = 0x1
   392: 64 a7                    a0 = a3
   394: b4 b0 01 0c              ra = 12, jump [a4]
      :                          @28 [@dyn 6]
   398: 7b 16 08                 u64 [sp + 0x8] = s1
   401: 78 17 10                 u8 [sp + 0x10] = a0
   404: 46 11 11                 u8 [sp + 17] = 0
   407: 33 06 80 00              s1 = 0x80
   411: 33 07 88 00              a0 = 0x88
   415: 7b 17                    u64 [sp] = a0
   417: 01                       fallthrough
      :                          @29
   418: 7b 15 18                 u64 [sp + 0x18] = s0
   421: 95 17 08                 a0 = sp + 0x8
   424: 95 18 18                 a1 = sp + 0x18
   427: 82 19                    a2 = u64 [sp]
   429: 50 10 0e 8d 15           ra = 14, jump @437
      :                          @30 [@dyn 7]
   434: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
   437: 95 55 01                 s0 = s0 + 0x1
   440: 52 06 ea                 jump @29 if s1 != 0
      :                          @31
   443: 7c 18 10                 a1 = u8 [sp + 0x10]
   446: 33 07 01                 a0 = 0x1
   449: 52 08 1b                 jump @33 if a1 != 0
      :                          @32
   452: 82 17 08                 a0 = u64 [sp + 0x8]
   455: 82 78 28                 a1 = u64 [a0 + 0x28]
   458: 82 77 20                 a0 = u64 [a0 + 0x20]
   461: 82 8a 18                 a3 = u64 [a1 + 0x18]
   464: 33 08 89 01 01           a1 = 0x10189
   469: 33 09 01                 a2 = 0x1
   472: b4 a0 01 10              ra = 16, jump [a3]
      :                          @33 [@dyn 8]
   476: 82 10 30                 ra = u64 [sp + 0x30]
   479: 82 15 28                 s0 = u64 [sp + 0x28]
   482: 82 16 20                 s1 = u64 [sp + 0x20]
   485: 95 11 38                 sp = sp + 0x38
   488: 32 00                    ret
      :                          @34 [export #0: 'refine']
   490: 95 11 e0                 sp = sp + 0xffffffffffffffe0
   493: 7b 10 18                 u64 [sp + 0x18] = ra
   496: 7b 15 10                 u64 [sp + 0x10] = s0
   499: 48 11 08                 u32 [sp + 8] = 0
   502: 49 01                    u64 [sp + 0] = 0
   504: 64 17                    a0 = sp
   506: 33 09 0c                 a2 = 0xc
   509: 33 0a 05                 a3 = 0x5
   512: 33 08                    a1 = 0
   514: 33 0b                    a4 = 0
   516: 33 0c                    a5 = 0
   518: 0a 12                    ecalli 18 // 'fetch'
   520: 01                       fallthrough
      :                          @35
   521: 51 17 ff 14              jump @37 if a0 == 4294967295
      :                          @36
   525: 81 17 04                 a0 = i32 [sp + 0x4]
   528: 81 18 08                 a1 = i32 [sp + 0x8]
   531: 81 19                    a2 = i32 [sp]
   533: be 78 08                 i32 a1 = a1 + a0
   536: 83 99 01                 i32 a2 = a2 + 0x1
   539: 28 0b                    jump @38
      :                          @37
   541: 33 07                    a0 = 0
   543: 33 09 01                 a2 = 0x1
   546: 33 08 01                 a1 = 0x1
   549: 01                       fallthrough
      :                          @38
   550: 7a 19                    u32 [sp] = a2
   552: 7a 18 04                 u32 [sp + 0x4] = a1
   555: 7a 17 08                 u32 [sp + 0x8] = a0
   558: 64 17                    a0 = sp
   560: 33 08 0c                 a1 = 0xc
   563: 0a 13                    ecalli 19 // 'export'
   565: 64 17                    a0 = sp
   567: 33 08 0c                 a1 = 0xc
   570: 82 10 18                 ra = u64 [sp + 0x18]
   573: 82 15 10                 s0 = u64 [sp + 0x10]
   576: 95 11 20                 sp = sp + 0x20
   579: 32 00                    ret
      :                          @39 [export #1: 'accumulate']
   581: 95 11 d8                 sp = sp + 0xffffffffffffffd8
   584: 7b 10 20                 u64 [sp + 0x20] = ra
   587: 7b 15 18                 u64 [sp + 0x18] = s0
   590: 7b 16 10                 u64 [sp + 0x10] = s1
   593: 33 09 08                 a2 = 0x8
   596: ac 98 6a 01              jump @83 if a1 <u a2
      :                          @40
   600: 51 17 fc 23 02           jump @102 if a0 == 4294967292
      :                          @41
   605: 51 07 1e 02              jump @102 if a0 == 0
      :                          @42
   609: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
   612: 95 75 08                 s0 = a0 + 0x8
   615: 51 0a 45                 jump @52 if a3 == 0
      :                          @43
   618: 7d 58                    a1 = i8 [s0]
   620: 33 06 01                 s1 = 0x1
   623: 59 08 40                 jump @53 if a1 >=s 0
      :                          @44
   626: 84 89 ff 00              a2 = a1 & 0xff
   630: 33 06 02                 s1 = 0x2
   633: 53 29 c0 00 2d           jump @50 if a2 <u 192
      :                          @45
   638: 33 06 03                 s1 = 0x3
   641: 53 29 e0 00 25           jump @50 if a2 <u 224
      :                          @46
   646: 33 06 04                 s1 = 0x4
   649: 53 29 f0 00 1d           jump @50 if a2 <u 240
      :                          @47
   654: 33 06 05                 s1 = 0x5
   657: 53 29 f8 00 15           jump @50 if a2 <u 248
      :                          @48
   662: 33 06 06                 s1 = 0x6
   665: 53 29 fc 00 0d           jump @50 if a2 <u 252
      :                          @49
   670: 88 98 fe 00              a1 = a2 <u 0xfe
   674: 9a 86 08                 s1 = 0x8 - a1
   677: 01                       fallthrough
      :                          @50
   678: ae 6a 09                 jump @53 if a3 >=u s1
      :                          @51
   681: 28 15 01                 jump @83
      :                          @52
   684: 33 06                    s1 = 0
   686: 01                       fallthrough
      :                          @53
   687: 7b 16                    u64 [sp] = s1
   689: 64 57                    a0 = s0
   691: 64 68                    a1 = s1
   693: 64 a6                    s1 = a3
   695: 50 10 12 bd 15           ra = 18, jump @454
      :                          @54 [@dyn 9]
   700: 82 1a                    a3 = u64 [sp]
   702: 51 07 00 01              jump @83 if a0 == 0
      :                          @55
   706: e4 a6 07                 a0 = maxu(s1, a3)
   709: c9 a7 07                 a0 = a0 - a3
   712: 53 17 60 f6 00           jump @83 if a0 <u 96
      :                          @56
   717: c8 5a 08                 a1 = a3 + s0
   720: 95 76 a0                 s1 = a0 + 0xffffffffffffffa0
   723: 95 87 60                 a0 = a1 + 0x60
   726: 7b 17                    u64 [sp] = a0
   728: 51 06 4c                 jump @67 if s1 == 0
      :                          @57
   731: 7d 78                    a1 = i8 [a0]
   733: 33 05 01                 s0 = 0x1
   736: 59 08 37                 jump @64 if a1 >=s 0
      :                          @58
   739: 84 89 ff 00              a2 = a1 & 0xff
   743: 33 05 02                 s0 = 0x2
   746: 53 29 c0 00 2d           jump @64 if a2 <u 192
      :                          @59
   751: 33 05 03                 s0 = 0x3
   754: 53 29 e0 00 25           jump @64 if a2 <u 224
      :                          @60
   759: 33 05 04                 s0 = 0x4
   762: 53 29 f0 00 1d           jump @64 if a2 <u 240
      :                          @61
   767: 33 05 05                 s0 = 0x5
   770: 53 29 f8 00 15           jump @64 if a2 <u 248
      :                          @62
   775: 33 05 06                 s0 = 0x6
   778: 53 29 fc 00 0d           jump @64 if a2 <u 252
      :                          @63
   783: 88 98 fe 00              a1 = a2 <u 0xfe
   787: 9a 85 08                 s0 = 0x8 - a1
   790: 01                       fallthrough
      :                          @64
   791: ac 56 65 01              jump @103 if s1 <u s0
      :                          @65
   795: 64 58                    a1 = s0
   797: 50 10 14 57 15           ra = 20, jump @454
      :                          @66 [@dyn 10]
   802: 28 07                    jump @68
      :                          @67
   804: 33 05                    s0 = 0
   806: 33 07                    a0 = 0
   808: 01                       fallthrough
      :                          @68
   809: e4 56 08                 a1 = maxu(s1, s0)
   812: c9 58 08                 a1 = a1 - s0
   815: e4 78 08                 a1 = maxu(a1, a0)
   818: c9 78 08                 a1 = a1 - a0
   821: 33 09 20                 a2 = 0x20
   824: ac 98 86 00              jump @83 if a1 <u a2
      :                          @69
   828: 82 19                    a2 = u64 [sp]
   830: c8 95 05                 s0 = s0 + a2
   833: c8 57 07                 a0 = a0 + s0
   836: 95 85 e0                 s0 = a1 + 0xffffffffffffffe0
   839: 95 77 20                 a0 = a0 + 0x20
   842: 7b 17                    u64 [sp] = a0
   844: 51 05 6d                 jump @82 if s0 == 0
      :                          @70
   847: 7d 78                    a1 = i8 [a0]
   849: 33 06 01                 s1 = 0x1
   852: 59 08 37                 jump @77 if a1 >=s 0
      :                          @71
   855: 84 89 ff 00              a2 = a1 & 0xff
   859: 33 06 02                 s1 = 0x2
   862: 53 29 c0 00 2d           jump @77 if a2 <u 192
      :                          @72
   867: 33 06 03                 s1 = 0x3
   870: 53 29 e0 00 25           jump @77 if a2 <u 224
      :                          @73
   875: 33 06 04                 s1 = 0x4
   878: 53 29 f0 00 1d           jump @77 if a2 <u 240
      :                          @74
   883: 33 06 05                 s1 = 0x5
   886: 53 29 f8 00 15           jump @77 if a2 <u 248
      :                          @75
   891: 33 06 06                 s1 = 0x6
   894: 53 29 fc 00 0d           jump @77 if a2 <u 252
      :                          @76
   899: 88 98 fe 00              a1 = a2 <u 0xfe
   903: 9a 86 08                 s1 = 0x8 - a1
   906: 01                       fallthrough
      :                          @77
   907: ac 65 f2 00              jump @104 if s0 <u s1
      :                          @78
   911: 64 68                    a1 = s1
   913: 50 10 16 e3 14           ra = 22, jump @454
      :                          @79 [@dyn 11]
   918: ae 56 28                 jump @83 if s1 >=u s0
      :                          @80
   921: 82 17                    a0 = u64 [sp]
   923: c8 67 07                 a0 = a0 + s1
   926: 7c 78                    a1 = u8 [a0]
   928: 51 08 36                 jump @85 if a1 == 0
      :                          @81
   931: 46 11 0e                 u8 [sp + 14] = 0
   934: 95 17 0e                 a0 = sp + 0xe
   937: 33 08 01                 a1 = 0x1
   940: 33 09                    a2 = 0
   942: 33 0a                    a3 = 0
   944: 0a 03                    ecalli 3 // 'write'
   946: 33 08                    a1 = 0
   948: 33 05                    s0 = 0
   950: 28 ae 00                 jump @100
      :                          @82
   953: 33 06                    s1 = 0
   955: 56 05 de                 jump @80 if s0 >u 0
      :                          @83
   958: 33 08                    a1 = 0
   960: 33 06 00 00 01           s1 = 0x10000
   965: 01                       fallthrough
      :                          @84
   966: 64 67                    a0 = s1
   968: 82 10 20                 ra = u64 [sp + 0x20]
   971: 82 15 18                 s0 = u64 [sp + 0x18]
   974: 82 16 10                 s1 = u64 [sp + 0x10]
   977: 95 11 28                 sp = sp + 0x28
   980: 32 00                    ret
      :                          @85
   982: e4 65 08                 a1 = maxu(s0, s1)
   985: c9 68 08                 a1 = a1 - s1
   988: 95 76 01                 s1 = a0 + 0x1
   991: 33 07 01                 a0 = 0x1
   994: e4 78 07                 a0 = maxu(a1, a0)
   997: 33 09 02                 a2 = 0x2
  1000: 95 7a ff                 a3 = a0 + 0xffffffffffffffff
  1003: ae 98 09                 jump @87 if a1 >=u a2
      :                          @86
  1006: 33 05                    s0 = 0
  1008: 33 07                    a0 = 0
  1010: 28 4f                    jump @97
      :                          @87
  1012: 7d 67                    a0 = i8 [s1]
  1014: 33 05 01                 s0 = 0x1
  1017: 59 07 37                 jump @94 if a0 >=s 0
      :                          @88
  1020: 84 77 ff 00              a0 = a0 & 0xff
  1024: 33 05 02                 s0 = 0x2
  1027: 53 27 c0 00 2d           jump @94 if a0 <u 192
      :                          @89
  1032: 33 05 03                 s0 = 0x3
  1035: 53 27 e0 00 25           jump @94 if a0 <u 224
      :                          @90
  1040: 33 05 04                 s0 = 0x4
  1043: 53 27 f0 00 1d           jump @94 if a0 <u 240
      :                          @91
  1048: 33 05 05                 s0 = 0x5
  1051: 53 27 f8 00 15           jump @94 if a0 <u 248
      :                          @92
  1056: 33 05 06                 s0 = 0x6
  1059: 53 27 fc 00 0d           jump @94 if a0 <u 252
      :                          @93
  1064: 88 77 fe 00              a0 = a0 <u 0xfe
  1068: 9a 75 08                 s0 = 0x8 - a0
  1071: 01                       fallthrough
      :                          @94
  1072: 7b 1a                    u64 [sp] = a3
  1074: ac 5a 4d                 jump @106 if a3 <u s0
      :                          @95
  1077: 64 67                    a0 = s1
  1079: 64 58                    a1 = s0
  1081: 50 10 18 3b 14           ra = 24, jump @454
      :                          @96 [@dyn 12]
  1086: 82 1a                    a3 = u64 [sp]
  1088: 01                       fallthrough
      :                          @97
  1089: c8 56 09                 a2 = s1 + s0
  1092: e4 5a 08                 a1 = maxu(a3, s0)
  1095: c9 58 08                 a1 = a1 - s0
  1098: e6 78 05                 s0 = minu(a1, a0)
  1101: 46 11 0e                 u8 [sp + 14] = 0
  1104: 95 17 0e                 a0 = sp + 0xe
  1107: 33 08 01                 a1 = 0x1
  1110: 64 96                    s1 = a2
  1112: 64 5a                    a3 = s0
  1114: 0a 03                    ecalli 3 // 'write'
  1116: 01                       fallthrough
      :                          @98
  1117: 55 15 21 21              jump @105 if s0 >=u 33
      :                          @99
  1121: 64 68                    a1 = s1
  1123: 01                       fallthrough
      :                          @100
  1124: 33 06 11 00 03           s1 = 0x30011
  1129: 33 07 11 00 03           a0 = 0x30011
  1134: 64 59                    a2 = s0
  1136: 50 10 1a 1d 0a           ra = 26, jump @263
      :                          @101 [@dyn 13]
  1141: 33 08 20                 a1 = 0x20
  1144: 28 4e ff                 jump @84
      :                          @102
  1147: 00                       trap
      :                          @103
  1148: 00                       trap
      :                          @104
  1149: 00                       trap
      :                          @105
  1150: 00                       trap
      :                          @106
  1151: 00                       trap
      :                          @107 [export #2: 'on_transfer']
  1152: 95 11 70 fd              sp = sp + 0xfffffffffffffd70
  1156: 7b 10 88 02              u64 [sp + 0x288] = ra
  1160: 7b 15 80 02              u64 [sp + 0x280] = s0
  1164: 7b 16 78 02              u64 [sp + 0x278] = s1
  1168: 64 8c                    a5 = a1
  1170: 64 79                    a2 = a0
  1172: 33 02                    t0 = 0
  1174: 95 7b 04                 a4 = a0 + 0x4
  1177: 33 07 02                 a0 = 0x2
  1180: 7b 17 28                 u64 [sp + 0x28] = a0
  1183: 33 07 06                 a0 = 0x6
  1186: 7b 17 58                 u64 [sp + 0x58] = a0
  1189: 33 07 0a                 a0 = 0xa
  1192: 7b 17 20                 u64 [sp + 0x20] = a0
  1195: 33 07 58 00 01           a0 = 0x10058
  1200: 7b 17 18                 u64 [sp + 0x18] = a0
  1203: 33 07 80 00              a0 = 0x80
  1207: 7b 17 10                 u64 [sp + 0x10] = a0
  1210: 33 07 70 02 01           a0 = 0x10270
  1215: 7b 17 08                 u64 [sp + 0x8] = a0
  1218: 33 07 40 00 03           a0 = 0x30040
  1223: 95 77 00 00 01           a0 = a0 + 0x10000
  1228: 7b 17 50                 u64 [sp + 0x50] = a0
  1231: 33 07 f8 00 01           a0 = 0x100f8
  1236: 7b 17                    u64 [sp] = a0
  1238: 95 97 08                 a0 = a2 + 0x8
  1241: 95 ca f8                 a3 = a5 + 0xfffffffffffffff8
  1244: 95 98 0c                 a1 = a2 + 0xc
  1247: 7b 18 60                 u64 [sp + 0x60] = a1
  1250: 33 08 08                 a1 = 0x8
  1253: 33 06 ff ff fe           s1 = 0xfffffffffffeffff
  1258: 7b 16 48                 u64 [sp + 0x48] = s1
  1261: 7b 17 c0 00              u64 [sp + 0xc0] = a0
  1265: 7b 17 b8 00              u64 [sp + 0xb8] = a0
  1269: 7b 1c 40                 u64 [sp + 0x40] = a5
  1272: 7b 19 38                 u64 [sp + 0x38] = a2
  1275: 7b 1b 30                 u64 [sp + 0x30] = a4
  1278: 7b 1a a8 00              u64 [sp + 0xa8] = a3
  1282: ac 8c c0 04              jump @155 if a5 <u a1
      :                          @108
  1286: 51 09 d5 04              jump @156 if a2 == 0
      :                          @109
  1290: 51 0b d1 04              jump @156 if a4 == 0
      :                          @110
  1294: 7c 97                    a0 = u8 [a2]
  1296: 7b 17 78                 u64 [sp + 0x78] = a0
  1299: 7c 97 01                 a0 = u8 [a2 + 0x1]
  1302: 7b 17 68                 u64 [sp + 0x68] = a0
  1305: 7c 97 02                 a0 = u8 [a2 + 0x2]
  1308: 7b 17 70                 u64 [sp + 0x70] = a0
  1311: 7c 97 03                 a0 = u8 [a2 + 0x3]
  1314: 7b 17 80 00              u64 [sp + 0x80] = a0
  1318: 7c b7                    a0 = u8 [a4]
  1320: 7b 17 98 00              u64 [sp + 0x98] = a0
  1324: 7c b7 01                 a0 = u8 [a4 + 0x1]
  1327: 7b 17 88 00              u64 [sp + 0x88] = a0
  1331: 7c b7 02                 a0 = u8 [a4 + 0x2]
  1334: 7b 17 90 00              u64 [sp + 0x90] = a0
  1338: 7c b7 03                 a0 = u8 [a4 + 0x3]
  1341: 7b 17 a0 00              u64 [sp + 0xa0] = a0
  1345: 51 0a 53                 jump @120 if a3 == 0
      :                          @111
  1348: 82 17 c0 00              a0 = u64 [sp + 0xc0]
  1352: 7d 77                    a0 = i8 [a0]
  1354: 33 05 01                 s0 = 0x1
  1357: 59 07 4a                 jump @121 if a0 >=s 0
      :                          @112
  1360: 84 77 ff 00              a0 = a0 & 0xff
  1364: 33 05 02                 s0 = 0x2
  1367: 33 06 c0 00              s1 = 0xc0
  1371: ac 67 33                 jump @118 if a0 <u s1
      :                          @113
  1374: 33 05 03                 s0 = 0x3
  1377: 33 06 e0 00              s1 = 0xe0
  1381: ac 67 29                 jump @118 if a0 <u s1
      :                          @114
  1384: 33 05 04                 s0 = 0x4
  1387: 33 06 f0 00              s1 = 0xf0
  1391: ac 67 1f                 jump @118 if a0 <u s1
      :                          @115
  1394: 33 05 05                 s0 = 0x5
  1397: 33 06 f8 00              s1 = 0xf8
  1401: ac 67 15                 jump @118 if a0 <u s1
      :                          @116
  1404: 33 05 06                 s0 = 0x6
  1407: 33 06 fc 00              s1 = 0xfc
  1411: ac 67 0b                 jump @118 if a0 <u s1
      :                          @117
  1414: 88 77 fe 00              a0 = a0 <u 0xfe
  1418: 9a 75 08                 s0 = 0x8 - a0
  1421: 01                       fallthrough
      :                          @118
  1422: ae 5a 09                 jump @121 if a3 >=u s0
      :                          @119
  1425: 28 31 04                 jump @155
      :                          @120
  1428: 33 05                    s0 = 0
  1430: 01                       fallthrough
      :                          @121
  1431: 82 17 c0 00              a0 = u64 [sp + 0xc0]
  1435: 64 58                    a1 = s0
  1437: 7b 12 b0 00              u64 [sp + 0xb0] = t0
  1441: 50 10 1c d3 12           ra = 28, jump @454
      :                          @122 [@dyn 14]
  1446: 33 03 98 00              t1 = 0x98
  1450: 33 02 04                 t0 = 0x4
  1453: 33 06 08                 s1 = 0x8
  1456: 82 1c a8 00              a5 = u64 [sp + 0xa8]
  1460: 82 1b b0 00              a4 = u64 [sp + 0xb0]
  1464: ae 7b 0a 04              jump @155 if a4 >=u a0
      :                          @123
  1468: 82 18 68                 a1 = u64 [sp + 0x68]
  1471: 97 88 08                 a1 = a1 << 0x8
  1474: 82 19 78                 a2 = u64 [sp + 0x78]
  1477: d4 98 08                 a1 = a1 | a2
  1480: 82 19 70                 a2 = u64 [sp + 0x70]
  1483: 97 99 10                 a2 = a2 << 0x10
  1486: 82 1a 80 00              a3 = u64 [sp + 0x80]
  1490: 97 aa 18                 a3 = a3 << 0x18
  1493: d4 a9 09                 a2 = a2 | a3
  1496: d4 89 04                 t2 = a2 | a1
  1499: 82 18 88 00              a1 = u64 [sp + 0x88]
  1503: 97 88 08                 a1 = a1 << 0x8
  1506: 82 19 98 00              a2 = u64 [sp + 0x98]
  1510: d4 98 08                 a1 = a1 | a2
  1513: 82 19 90 00              a2 = u64 [sp + 0x90]
  1517: 97 99 10                 a2 = a2 << 0x10
  1520: 82 1a a0 00              a3 = u64 [sp + 0xa0]
  1524: 97 aa 18                 a3 = a3 << 0x18
  1527: d4 a9 09                 a2 = a2 | a3
  1530: d4 89 00                 ra = a2 | a1
  1533: e4 5c 08                 a1 = maxu(a5, s0)
  1536: c9 58 08                 a1 = a1 - s0
  1539: 82 19 b8 00              a2 = u64 [sp + 0xb8]
  1543: c8 59 09                 a2 = a2 + s0
  1546: 82 1a 60                 a3 = u64 [sp + 0x60]
  1549: c8 a5 05                 s0 = s0 + a3
  1552: 64 ba                    a3 = a4
  1554: 01                       fallthrough
      :                          @124
  1555: ac 68 af 03              jump @155 if a1 <u s1
      :                          @125
  1559: aa 25 c4 03              jump @156 if s0 == t0
      :                          @126
  1563: 51 05 c0 03              jump @156 if s0 == 0
      :                          @127
  1567: ac 38 a3 03              jump @155 if a1 <u t1
      :                          @128
  1571: 51 0a 17                 jump @131 if a3 == 0
      :                          @129
  1574: 95 88 68 ff              a1 = a1 + 0xffffffffffffff68
  1578: 95 55 98 00              s0 = s0 + 0x98
  1582: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  1585: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1588: 52 07 df                 jump @124 if a0 != 0
      :                          @130
  1591: 28 8b 03                 jump @155
      :                          @131
  1594: 7c 97 01                 a0 = u8 [a2 + 0x1]
  1597: 7c 98                    a1 = u8 [a2]
  1599: 7c 9a 02                 a3 = u8 [a2 + 0x2]
  1602: 7d 9b 03                 a4 = i8 [a2 + 0x3]
  1605: 8a 77 08                 i32 a0 = a0 << 0x8
  1608: d4 87 07                 a0 = a0 | a1
  1611: 8a a8 10                 i32 a1 = a3 << 0x10
  1614: 8a ba 18                 i32 a3 = a4 << 0x18
  1617: d4 a8 08                 a1 = a1 | a3
  1620: d4 87 07                 a0 = a0 | a1
  1623: 7b 17 a0 00              u64 [sp + 0xa0] = a0
  1627: 7c 57 01                 a0 = u8 [s0 + 0x1]
  1630: 7c 58                    a1 = u8 [s0]
  1632: 7c 5a 02                 a3 = u8 [s0 + 0x2]
  1635: 7d 5b 03                 a4 = i8 [s0 + 0x3]
  1638: 8a 77 08                 i32 a0 = a0 << 0x8
  1641: d4 87 07                 a0 = a0 | a1
  1644: 8a a8 10                 i32 a1 = a3 << 0x10
  1647: 8a ba 18                 i32 a3 = a4 << 0x18
  1650: d4 a8 08                 a1 = a1 | a3
  1653: 7c 9a 0f                 a3 = u8 [a2 + 0xf]
  1656: 7c 9b 0e                 a4 = u8 [a2 + 0xe]
  1659: d4 87 07                 a0 = a0 | a1
  1662: 7b 17 98 00              u64 [sp + 0x98] = a0
  1666: 7c 97 0d                 a0 = u8 [a2 + 0xd]
  1669: 97 aa 10                 a3 = a3 << 0x10
  1672: 97 bb 08                 a4 = a4 << 0x8
  1675: d4 ba 0a                 a3 = a3 | a4
  1678: 7c 98 0c                 a1 = u8 [a2 + 0xc]
  1681: 7c 9b 0b                 a4 = u8 [a2 + 0xb]
  1684: d4 a7 07                 a0 = a0 | a3
  1687: 97 77 10                 a0 = a0 << 0x10
  1690: 97 88 08                 a1 = a1 << 0x8
  1693: d4 b8 08                 a1 = a1 | a4
  1696: 7c 9a 0a                 a3 = u8 [a2 + 0xa]
  1699: 7c 9b 09                 a4 = u8 [a2 + 0x9]
  1702: d4 87 07                 a0 = a0 | a1
  1705: 97 77 10                 a0 = a0 << 0x10
  1708: 97 aa 08                 a3 = a3 << 0x8
  1711: d4 ba 0a                 a3 = a3 | a4
  1714: d4 a7 07                 a0 = a0 | a3
  1717: 7c 98 08                 a1 = u8 [a2 + 0x8]
  1720: 97 77 08                 a0 = a0 << 0x8
  1723: 7c 9a 97 00              a3 = u8 [a2 + 0x97]
  1727: 7c 9b 96 00              a4 = u8 [a2 + 0x96]
  1731: d4 87 07                 a0 = a0 | a1
  1734: 7b 17 90 00              u64 [sp + 0x90] = a0
  1738: 7c 97 95 00              a0 = u8 [a2 + 0x95]
  1742: 97 aa 10                 a3 = a3 << 0x10
  1745: 97 bb 08                 a4 = a4 << 0x8
  1748: d4 ba 0a                 a3 = a3 | a4
  1751: d4 a7 07                 a0 = a0 | a3
  1754: 7c 9a 94 00              a3 = u8 [a2 + 0x94]
  1758: 7c 9b 93 00              a4 = u8 [a2 + 0x93]
  1762: 95 98 10                 a1 = a2 + 0x10
  1765: 97 77 10                 a0 = a0 << 0x10
  1768: 97 aa 08                 a3 = a3 << 0x8
  1771: d4 ba 0a                 a3 = a3 | a4
  1774: 7c 9b 92 00              a4 = u8 [a2 + 0x92]
  1778: d4 a7 07                 a0 = a0 | a3
  1781: 7c 9a 91 00              a3 = u8 [a2 + 0x91]
  1785: 97 77 10                 a0 = a0 << 0x10
  1788: 97 bb 08                 a4 = a4 << 0x8
  1791: 7c 99 90 00              a2 = u8 [a2 + 0x90]
  1795: d4 ba 0a                 a3 = a3 | a4
  1798: d4 a7 07                 a0 = a0 | a3
  1801: 97 77 08                 a0 = a0 << 0x8
  1804: d4 97 07                 a0 = a0 | a2
  1807: 7b 17 88 00              u64 [sp + 0x88] = a0
  1811: 95 17 68 01              a0 = sp + 0x168
  1815: 33 09 80 00              a2 = 0x80
  1819: 64 45                    s0 = t2
  1821: 64 06                    s1 = ra
  1823: 50 10 1e 6e 07           ra = 30, jump @263
      :                          @132 [@dyn 15]
  1828: 95 17 e0 00              a0 = sp + 0xe0
  1832: 95 18 68 01              a1 = sp + 0x168
  1836: 33 09 80 00              a2 = 0x80
  1840: 50 10 20 5d 07           ra = 32, jump @263
      :                          @133 [@dyn 16]
  1845: 7a 15 c8 00              u32 [sp + 0xc8] = s0
  1849: 7a 16 cc 00              u32 [sp + 0xcc] = s1
  1853: 82 17 a0 00              a0 = u64 [sp + 0xa0]
  1857: 7a 17 d0 00              u32 [sp + 0xd0] = a0
  1861: 82 17 98 00              a0 = u64 [sp + 0x98]
  1865: 7a 17 d4 00              u32 [sp + 0xd4] = a0
  1869: 82 17 90 00              a0 = u64 [sp + 0x90]
  1873: 7b 17 d8 00              u64 [sp + 0xd8] = a0
  1877: 82 17 88 00              a0 = u64 [sp + 0x88]
  1881: 7b 17 60 01              u64 [sp + 0x160] = a0
  1885: 95 17 c8 00              a0 = sp + 0xc8
  1889: 7b 17 68 01              u64 [sp + 0x168] = a0
  1893: 82 17 28                 a0 = u64 [sp + 0x28]
  1896: 7b 17 70 01              u64 [sp + 0x170] = a0
  1900: 95 18 cc 00              a1 = sp + 0xcc
  1904: 7b 18 78 01              u64 [sp + 0x178] = a1
  1908: 7b 17 80 01              u64 [sp + 0x180] = a0
  1912: 95 18 d0 00              a1 = sp + 0xd0
  1916: 7b 18 88 01              u64 [sp + 0x188] = a1
  1920: 7b 17 90 01              u64 [sp + 0x190] = a0
  1924: 95 18 d4 00              a1 = sp + 0xd4
  1928: 7b 18 98 01              u64 [sp + 0x198] = a1
  1932: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  1936: 95 17 d8 00              a0 = sp + 0xd8
  1940: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  1944: 82 17 58                 a0 = u64 [sp + 0x58]
  1947: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  1951: 95 18 e0 00              a1 = sp + 0xe0
  1955: 7b 18 b8 01              u64 [sp + 0x1b8] = a1
  1959: 82 18 20                 a1 = u64 [sp + 0x20]
  1962: 7b 18 c0 01              u64 [sp + 0x1c0] = a1
  1966: 95 18 60 01              a1 = sp + 0x160
  1970: 7b 18 c8 01              u64 [sp + 0x1c8] = a1
  1974: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
  1978: 82 17 18                 a0 = u64 [sp + 0x18]
  1981: 7b 17 28 02              u64 [sp + 0x228] = a0
  1985: 49 21 30 02 07           u64 [sp + 560] = 0x7
  1990: 49 21 48 02              u64 [sp + 584] = 0
  1994: 95 17 68 01              a0 = sp + 0x168
  1998: 7b 17 38 02              u64 [sp + 0x238] = a0
  2002: 49 21 40 02 07           u64 [sp + 576] = 0x7
  2007: 95 17 58 02              a0 = sp + 0x258
  2011: 95 18 28 02              a1 = sp + 0x228
  2015: 50 10 22 3a 04           ra = 34, jump @213
      :                          @134 [@dyn 17]
  2020: 82 15 60 02              s0 = u64 [sp + 0x260]
  2024: 82 1b 68 02              a4 = u64 [sp + 0x268]
  2028: 82 16 58 02              s1 = u64 [sp + 0x258]
  2032: 33 07 02                 a0 = 0x2
  2035: 33 08                    a1 = 0
  2037: 33 09                    a2 = 0
  2039: 64 5a                    a3 = s0
  2041: 33 00 24                 ra = 0x24
  2044: 0a 64                    ecalli 100 // 'log'
  2046: 01                       fallthrough
      :                          @135 [@dyn 18]
  2047: 82 17 48                 a0 = u64 [sp + 0x48]
  2050: c8 67 07                 a0 = a0 + s1
  2053: 82 1b 50                 a4 = u64 [sp + 0x50]
  2056: 53 37 00 00 ff 1a        jump @140 if a0 <u 4294901760
      :                          @136
  2062: 82 b7                    a0 = u64 [a4]
  2064: c9 7b 08                 a1 = a4 - a0
  2067: ab 58 0f                 jump @140 if a1 != s0
      :                          @137
  2070: c9 67 08                 a1 = a0 - s1
  2073: 01                       fallthrough
      :                          @138
  2074: 82 b9                    a2 = u64 [a4]
  2076: ab 79 f2                 jump @136 if a2 != a0
      :                          @139
  2079: 7b b8                    u64 [a4] = a1
  2081: 01                       fallthrough
      :                          @140
  2082: 81 17 cc 00              a0 = i32 [sp + 0xcc]
  2086: 7a 17 ec 01              u32 [sp + 0x1ec] = a0
  2090: 95 17 ec 01              a0 = sp + 0x1ec
  2094: 33 08 04                 a1 = 0x4
  2097: 95 19 e0 00              a2 = sp + 0xe0
  2101: 33 0a 80 00              a3 = 0x80
  2105: 0a 03                    ecalli 3 // 'write'
  2107: 0a                       ecalli 0 // 'gas'
  2108: 7b 17 f0 01              u64 [sp + 0x1f0] = a0
  2112: 7b 17 f8 01              u64 [sp + 0x1f8] = a0
  2116: 46 21 07 02 04           u8 [sp + 519] = 0x4
  2121: 7b 17 08 02              u64 [sp + 0x208] = a0
  2125: 95 17 07 02              a0 = sp + 0x207
  2129: 33 08 01                 a1 = 0x1
  2132: 95 19 08 02              a2 = sp + 0x208
  2136: 33 0a 08                 a3 = 0x8
  2139: 0a 03                    ecalli 3 // 'write'
  2141: 49 21 68 01 02           u64 [sp + 360] = 0x2
  2146: 49 21 78 01 02           u64 [sp + 376] = 0x2
  2151: 49 21 88 01              u64 [sp + 392] = 0
  2155: 14 07 20 00 00 00 10 00 00 00 a0 = 0x1000000020
  2165: 7b 17 90 01              u64 [sp + 0x190] = a0
  2169: 46 21 98 01 03           u8 [sp + 408] = 0x3
  2174: 49 21 a0 01 02           u64 [sp + 416] = 0x2
  2179: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  2184: 49 21 c0 01 01           u64 [sp + 448] = 0x1
  2189: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
  2193: 95 17 07 02              a0 = sp + 0x207
  2197: 7b 17 58 02              u64 [sp + 0x258] = a0
  2201: 82 17 10                 a0 = u64 [sp + 0x10]
  2204: 7b 17 60 02              u64 [sp + 0x260] = a0
  2208: 95 17 f8 01              a0 = sp + 0x1f8
  2212: 7b 17 68 02              u64 [sp + 0x268] = a0
  2216: 82 17 58                 a0 = u64 [sp + 0x58]
  2219: 7b 17 70 02              u64 [sp + 0x270] = a0
  2223: 46 21 d0 01 03           u8 [sp + 464] = 0x3
  2228: 82 17 08                 a0 = u64 [sp + 0x8]
  2231: 7b 17 28 02              u64 [sp + 0x228] = a0
  2235: 49 21 30 02 02           u64 [sp + 560] = 0x2
  2240: 95 17 68 01              a0 = sp + 0x168
  2244: 7b 17 48 02              u64 [sp + 0x248] = a0
  2248: 49 21 50 02 02           u64 [sp + 592] = 0x2
  2253: 95 17 58 02              a0 = sp + 0x258
  2257: 7b 17 38 02              u64 [sp + 0x238] = a0
  2261: 49 21 40 02 02           u64 [sp + 576] = 0x2
  2266: 95 17 10 02              a0 = sp + 0x210
  2270: 95 18 28 02              a1 = sp + 0x228
  2274: 50 10 26 37 03           ra = 38, jump @213
      :                          @141 [@dyn 19]
  2279: 82 15 18 02              s0 = u64 [sp + 0x218]
  2283: 82 1b 20 02              a4 = u64 [sp + 0x220]
  2287: 82 16 10 02              s1 = u64 [sp + 0x210]
  2291: 33 07 02                 a0 = 0x2
  2294: 33 08                    a1 = 0
  2296: 33 09                    a2 = 0
  2298: 64 5a                    a3 = s0
  2300: 33 00 28                 ra = 0x28
  2303: 0a 64                    ecalli 100 // 'log'
  2305: 01                       fallthrough
      :                          @142 [@dyn 20]
  2306: 82 1b 50                 a4 = u64 [sp + 0x50]
  2309: 82 17 48                 a0 = u64 [sp + 0x48]
  2312: c8 67 07                 a0 = a0 + s1
  2315: 53 37 00 00 ff 1a        jump @147 if a0 <u 4294901760
      :                          @143
  2321: 82 b7                    a0 = u64 [a4]
  2323: c9 7b 08                 a1 = a4 - a0
  2326: ab 58 0f                 jump @147 if a1 != s0
      :                          @144
  2329: c9 67 08                 a1 = a0 - s1
  2332: 01                       fallthrough
      :                          @145
  2333: 82 b9                    a2 = u64 [a4]
  2335: ab 79 f2                 jump @143 if a2 != a0
      :                          @146
  2338: 7b b8                    u64 [a4] = a1
  2340: 01                       fallthrough
      :                          @147
  2341: 95 17 f0 01              a0 = sp + 0x1f0
  2345: 7b 17 58 02              u64 [sp + 0x258] = a0
  2349: 82 17 58                 a0 = u64 [sp + 0x58]
  2352: 7b 17 60 02              u64 [sp + 0x260] = a0
  2356: 82 17                    a0 = u64 [sp]
  2358: 7b 17 68 01              u64 [sp + 0x168] = a0
  2362: 49 21 70 01 02           u64 [sp + 368] = 0x2
  2367: 49 21 88 01              u64 [sp + 392] = 0
  2371: 95 17 58 02              a0 = sp + 0x258
  2375: 7b 17 78 01              u64 [sp + 0x178] = a0
  2379: 49 21 80 01 01           u64 [sp + 384] = 0x1
  2384: 95 17 28 02              a0 = sp + 0x228
  2388: 95 18 68 01              a1 = sp + 0x168
  2392: 50 10 2a c1 02           ra = 42, jump @213
      :                          @148 [@dyn 21]
  2397: 82 15 30 02              s0 = u64 [sp + 0x230]
  2401: 82 1b 38 02              a4 = u64 [sp + 0x238]
  2405: 82 16 28 02              s1 = u64 [sp + 0x228]
  2409: 33 07 02                 a0 = 0x2
  2412: 33 08                    a1 = 0
  2414: 33 09                    a2 = 0
  2416: 64 5a                    a3 = s0
  2418: 33 00 2c                 ra = 0x2c
  2421: 0a 64                    ecalli 100 // 'log'
  2423: 01                       fallthrough
      :                          @149 [@dyn 22]
  2424: 82 1b 50                 a4 = u64 [sp + 0x50]
  2427: 82 17 48                 a0 = u64 [sp + 0x48]
  2430: c8 67 07                 a0 = a0 + s1
  2433: 53 37 00 00 ff 1a        jump @154 if a0 <u 4294901760
      :                          @150
  2439: 82 b7                    a0 = u64 [a4]
  2441: c9 7b 08                 a1 = a4 - a0
  2444: ab 58 0f                 jump @154 if a1 != s0
      :                          @151
  2447: c9 67 08                 a1 = a0 - s1
  2450: 01                       fallthrough
      :                          @152
  2451: 82 b9                    a2 = u64 [a4]
  2453: ab 79 f2                 jump @150 if a2 != a0
      :                          @153
  2456: 7b b8                    u64 [a4] = a1
  2458: 01                       fallthrough
      :                          @154
  2459: 82 12 b0 00              t0 = u64 [sp + 0xb0]
  2463: 95 22 01                 t0 = t0 + 0x1
  2466: 82 17 b8 00              a0 = u64 [sp + 0xb8]
  2470: 95 77 98 00              a0 = a0 + 0x98
  2474: 7b 17 b8 00              u64 [sp + 0xb8] = a0
  2478: 82 1c 40                 a5 = u64 [sp + 0x40]
  2481: 82 19 38                 a2 = u64 [sp + 0x38]
  2484: 82 1b 30                 a4 = u64 [sp + 0x30]
  2487: 82 1a a8 00              a3 = u64 [sp + 0xa8]
  2491: 33 08 08                 a1 = 0x8
  2494: ae 8c 48 fb              jump @108 if a5 >=u a1
      :                          @155
  2498: 33 07 00 00 01           a0 = 0x10000
  2503: 33 08                    a1 = 0
  2505: 82 10 88 02              ra = u64 [sp + 0x288]
  2509: 82 15 80 02              s0 = u64 [sp + 0x280]
  2513: 82 16 78 02              s1 = u64 [sp + 0x278]
  2517: 95 11 90 02              sp = sp + 0x290
  2521: 32 00                    ret
      :                          @156
  2523: 00                       trap
      :                          @157
  2524: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  2527: 7b 10 40                 u64 [sp + 0x40] = ra
  2530: 7b 15 38                 u64 [sp + 0x38] = s0
  2533: 7b 16 30                 u64 [sp + 0x30] = s1
  2536: c8 89 09                 a2 = a2 + a1
  2539: ac 89 52                 jump @165 if a2 <u a1
      :                          @158
  2542: 64 75                    s0 = a0
  2544: 82 77                    a0 = u64 [a0]
  2546: 97 78 01                 a1 = a0 << 0x1
  2549: 33 0a 08                 a3 = 0x8
  2552: e4 a9 09                 a2 = maxu(a2, a3)
  2555: e4 98 06                 s1 = maxu(a1, a2)
  2558: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  2561: 98 88 3f                 a1 = a1 >> 0x3f
  2564: 51 07 12                 jump @160 if a0 == 0
      :                          @159
  2567: 82 59 08                 a2 = u64 [s0 + 0x8]
  2570: 7b 19 18                 u64 [sp + 0x18] = a2
  2573: 49 11 20 01              u64 [sp + 32] = 0x1
  2577: 7b 17 28                 u64 [sp + 0x28] = a0
  2580: 28 06                    jump @161
      :                          @160
  2582: 49 11 20                 u64 [sp + 32] = 0
  2585: 01                       fallthrough
      :                          @161
  2586: 64 17                    a0 = sp
  2588: 95 1a 18                 a3 = sp + 0x18
  2591: 64 69                    a2 = s1
  2593: 50 10 2e 32              ra = 46, jump @169
      :                          @162 [@dyn 23]
  2597: 82 18                    a1 = u64 [sp]
  2599: 82 17 08                 a0 = u64 [sp + 0x8]
  2602: 51 08 14                 jump @166 if a1 == 0
      :                          @163
  2605: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  2615: aa 87 0d                 jump @167 if a0 == a1
      :                          @164
  2618: 52 07 18                 jump @168 if a0 != 0
      :                          @165
  2621: 00                       trap
      :                          @166
  2622: 7b 57 08                 u64 [s0 + 0x8] = a0
  2625: 7b 56                    u64 [s0] = s1
  2627: 01                       fallthrough
      :                          @167
  2628: 82 10 40                 ra = u64 [sp + 0x40]
  2631: 82 15 38                 s0 = u64 [sp + 0x38]
  2634: 82 16 30                 s1 = u64 [sp + 0x30]
  2637: 95 11 48                 sp = sp + 0x48
  2640: 32 00                    ret
      :                          @168
  2642: 00                       trap
      :                          @169
  2643: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  2646: 7b 10 30                 u64 [sp + 0x30] = ra
  2649: 7b 15 28                 u64 [sp + 0x28] = s0
  2652: 7b 16 20                 u64 [sp + 0x20] = s1
  2655: 64 95                    s0 = a2
  2657: 64 72                    t0 = a0
  2659: 51 08 79                 jump @179 if a1 == 0
      :                          @170
  2662: 82 a7 08                 a0 = u64 [a3 + 0x8]
  2665: 51 07 7c                 jump @180 if a0 == 0
      :                          @171
  2668: 82 a9 10                 a2 = u64 [a3 + 0x10]
  2671: 51 09 aa 00              jump @187 if a2 == 0
      :                          @172
  2675: 82 a8                    a1 = u64 [a3]
  2677: 33 06 40 00 03           s1 = 0x30040
  2682: 33 03 00 00 01           t1 = 0x10000
  2687: c8 36 06                 s1 = s1 + t1
  2690: 01                       fallthrough
      :                          @173
  2691: 82 6a                    a3 = u64 [s1]
  2693: c8 5a 07                 a0 = a3 + s0
  2696: ac a7 cf 00              jump @193 if a0 <u a3
      :                          @174
  2700: 95 7b 01                 a4 = a0 + 0x1
  2703: 88 bc 01                 a5 = a4 <u 0x1
  2706: d8 b3 0b                 a4 = t1 <u a4
  2709: d4 cb 0b                 a4 = a4 | a5
  2712: 52 0b bf 00              jump @193 if a4 != 0
      :                          @175
  2716: 82 6b                    a4 = u64 [s1]
  2718: ab ab e5                 jump @173 if a4 != a3
      :                          @176
  2721: 7b 67                    u64 [s1] = a0
  2723: 33 0c                    a5 = 0
  2725: 7b 12 18                 u64 [sp + 0x18] = t0
  2728: 33 0a 40 00 03           a3 = 0x30040
  2733: 33 0b 00 00 01           a4 = 0x10000
  2738: 7b 1a                    u64 [sp] = a3
  2740: c8 ba 0a                 a3 = a3 + a4
  2743: c9 7a 07                 a0 = a3 - a0
  2746: 7b 17 10                 u64 [sp + 0x10] = a0
  2749: 7b 18 08                 u64 [sp + 0x8] = a1
  2752: 64 96                    s1 = a2
  2754: 50 10 30 cb 03           ra = 48, jump @263
      :                          @177 [@dyn 24]
  2759: 54 36 00 00 01 98 00     jump @194 if s1 <=u 65536
      :                          @178
  2766: 82 12 18                 t0 = u64 [sp + 0x18]
  2769: 82 18 10                 a1 = u64 [sp + 0x10]
  2772: 33 07                    a0 = 0
  2774: 7b 28 08                 u64 [t0 + 0x8] = a1
  2777: 28 b5 00                 jump @200
      :                          @179
  2780: 49 12 08                 u64 [t0 + 8] = 0
  2783: 33 07 01                 a0 = 0x1
  2786: 28 ac 00                 jump @200
      :                          @180
  2789: 33 09 40 00 03           a2 = 0x30040
  2794: 33 07 00 00 01           a0 = 0x10000
  2799: c8 79 09                 a2 = a2 + a0
  2802: 01                       fallthrough
      :                          @181
  2803: 82 9a                    a3 = u64 [a2]
  2805: c8 5a 08                 a1 = a3 + s0
  2808: ac a8 5f                 jump @193 if a1 <u a3
      :                          @182
  2811: 95 8b 01                 a4 = a1 + 0x1
  2814: 88 bc 01                 a5 = a4 <u 0x1
  2817: d8 b7 0b                 a4 = a0 <u a4
  2820: d4 cb 0b                 a4 = a4 | a5
  2823: 52 0b 50                 jump @193 if a4 != 0
      :                          @183
  2826: 82 9b                    a4 = u64 [a2]
  2828: ab ab e7                 jump @181 if a4 != a3
      :                          @184
  2831: 7b 98                    u64 [a2] = a1
  2833: 33 0c                    a5 = 0
  2835: 01                       fallthrough
      :                          @185
  2836: ab ab df                 jump @181 if a4 != a3
      :                          @186
  2839: 28 31                    jump @192
      :                          @187
  2841: 33 09 40 00 03           a2 = 0x30040
  2846: 33 07 00 00 01           a0 = 0x10000
  2851: c8 79 09                 a2 = a2 + a0
  2854: 01                       fallthrough
      :                          @188
  2855: 82 9a                    a3 = u64 [a2]
  2857: c8 5a 08                 a1 = a3 + s0
  2860: ac a8 2b                 jump @193 if a1 <u a3
      :                          @189
  2863: 95 8b 01                 a4 = a1 + 0x1
  2866: 88 bc 01                 a5 = a4 <u 0x1
  2869: d8 b7 0b                 a4 = a0 <u a4
  2872: d4 cb 0b                 a4 = a4 | a5
  2875: 52 0b 1c                 jump @193 if a4 != 0
      :                          @190
  2878: 82 9b                    a4 = u64 [a2]
  2880: ab ab e7                 jump @188 if a4 != a3
      :                          @191
  2883: 7b 98                    u64 [a2] = a1
  2885: 33 0c                    a5 = 0
  2887: 01                       fallthrough
      :                          @192
  2888: 33 07 40 00 04           a0 = 0x40040
  2893: c9 87 08                 a1 = a0 - a1
  2896: 33 07                    a0 = 0
  2898: 7b 28 08                 u64 [t0 + 0x8] = a1
  2901: 28 39                    jump @200
      :                          @193
  2903: 33 07 01                 a0 = 0x1
  2906: 7b 27 08                 u64 [t0 + 0x8] = a0
  2909: 28 31                    jump @200
      :                          @194
  2911: 64 6c                    a5 = s1
  2913: 82 17                    a0 = u64 [sp]
  2915: 95 77 00 00 01           a0 = a0 + 0x10000
  2920: 82 12 18                 t0 = u64 [sp + 0x18]
  2923: 82 16 08                 s1 = u64 [sp + 0x8]
  2926: 01                       fallthrough
      :                          @195
  2927: 82 78                    a1 = u64 [a0]
  2929: c9 87 09                 a2 = a0 - a1
  2932: ab 69 11                 jump @199 if a2 != s1
      :                          @196
  2935: c9 c8 09                 a2 = a1 - a5
  2938: 01                       fallthrough
      :                          @197
  2939: 82 7a                    a3 = u64 [a0]
  2941: ab 8a f2                 jump @195 if a3 != a1
      :                          @198
  2944: 7b 79                    u64 [a0] = a2
  2946: 33 0b                    a4 = 0
  2948: 01                       fallthrough
      :                          @199
  2949: 82 18 10                 a1 = u64 [sp + 0x10]
  2952: 33 07                    a0 = 0
  2954: 7b 28 08                 u64 [t0 + 0x8] = a1
  2957: 01                       fallthrough
      :                          @200
  2958: 7b 25 10                 u64 [t0 + 0x10] = s0
  2961: 7b 27                    u64 [t0] = a0
  2963: 82 10 30                 ra = u64 [sp + 0x30]
  2966: 82 15 28                 s0 = u64 [sp + 0x28]
  2969: 82 16 20                 s1 = u64 [sp + 0x20]
  2972: 95 11 38                 sp = sp + 0x38
  2975: 32 00                    ret
      :                          @201
  2977: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  2980: 7b 10 40                 u64 [sp + 0x40] = ra
  2983: 7b 15 38                 u64 [sp + 0x38] = s0
  2986: 7b 16 30                 u64 [sp + 0x30] = s1
  2989: 95 88 01                 a1 = a1 + 0x1
  2992: 51 08 53                 jump @209 if a1 == 0
      :                          @202
  2995: 64 75                    s0 = a0
  2997: 82 77                    a0 = u64 [a0]
  2999: 97 79 01                 a2 = a0 << 0x1
  3002: 33 0a 08                 a3 = 0x8
  3005: e4 a8 08                 a1 = maxu(a1, a3)
  3008: e4 89 06                 s1 = maxu(a2, a1)
  3011: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  3014: 98 88 3f                 a1 = a1 >> 0x3f
  3017: 51 07 12                 jump @204 if a0 == 0
      :                          @203
  3020: 82 59 08                 a2 = u64 [s0 + 0x8]
  3023: 7b 19 18                 u64 [sp + 0x18] = a2
  3026: 49 11 20 01              u64 [sp + 32] = 0x1
  3030: 7b 17 28                 u64 [sp + 0x28] = a0
  3033: 28 06                    jump @205
      :                          @204
  3035: 49 11 20                 u64 [sp + 32] = 0
  3038: 01                       fallthrough
      :                          @205
  3039: 64 17                    a0 = sp
  3041: 95 1a 18                 a3 = sp + 0x18
  3044: 64 69                    a2 = s1
  3046: 50 10 32 6d fe           ra = 50, jump @169
      :                          @206 [@dyn 25]
  3051: 82 18                    a1 = u64 [sp]
  3053: 82 17 08                 a0 = u64 [sp + 0x8]
  3056: 51 08 14                 jump @210 if a1 == 0
      :                          @207
  3059: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  3069: aa 87 0d                 jump @211 if a0 == a1
      :                          @208
  3072: 52 07 18                 jump @212 if a0 != 0
      :                          @209
  3075: 00                       trap
      :                          @210
  3076: 7b 57 08                 u64 [s0 + 0x8] = a0
  3079: 7b 56                    u64 [s0] = s1
  3081: 01                       fallthrough
      :                          @211
  3082: 82 10 40                 ra = u64 [sp + 0x40]
  3085: 82 15 38                 s0 = u64 [sp + 0x38]
  3088: 82 16 30                 s1 = u64 [sp + 0x30]
  3091: 95 11 48                 sp = sp + 0x48
  3094: 32 00                    ret
      :                          @212
  3096: 00                       trap
      :                          @213
  3097: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  3100: 7b 10 30                 u64 [sp + 0x30] = ra
  3103: 7b 15 28                 u64 [sp + 0x28] = s0
  3106: 7b 16 20                 u64 [sp + 0x20] = s1
  3109: 64 89                    a2 = a1
  3111: 82 8a 08                 a3 = u64 [a1 + 0x8]
  3114: 64 75                    s0 = a0
  3116: 51 0a 35                 jump @218 if a3 == 0
      :                          @214
  3119: 82 98                    a1 = u64 [a2]
  3121: 33 07                    a0 = 0
  3123: 95 8b 08                 a4 = a1 + 0x8
  3126: 01                       fallthrough
      :                          @215
  3127: 82 bc                    a5 = u64 [a4]
  3129: c8 c7 07                 a0 = a0 + a5
  3132: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  3135: 95 bb 10                 a4 = a4 + 0x10
  3138: 52 0a f5                 jump @215 if a3 != 0
      :                          @216
  3141: 82 9a 18                 a3 = u64 [a2 + 0x18]
  3144: 51 0a 24                 jump @220 if a3 == 0
      :                          @217
  3147: 82 88 08                 a1 = u64 [a1 + 0x8]
  3150: 8e 88                    a1 = a1 >u 0
  3152: 88 7a 10                 a3 = a0 <u 0x10
  3155: 85 aa 01                 a3 = a3 ^ 0x1
  3158: d4 a8 08                 a1 = a1 | a3
  3161: 89 7a                    a3 = a0 <s 0
  3163: e0 a8 08                 a1 = a1 & ~a3
  3166: 52 08 0a                 jump @219 if a1 != 0
      :                          @218
  3169: 33 07                    a0 = 0
  3171: 33 08 01                 a1 = 0x1
  3174: 28 4a                    jump @228
      :                          @219
  3176: 97 77 01                 a0 = a0 << 0x1
  3179: 01                       fallthrough
      :                          @220
  3180: 51 07 40                 jump @227 if a0 == 0
      :                          @221
  3183: 57 07 78                 jump @233 if a0 <s 0
      :                          @222
  3186: 64 52                    t0 = s0
  3188: 33 0b 40 00 03           a4 = 0x30040
  3193: 33 08 00 00 01           a1 = 0x10000
  3198: c8 8b 0b                 a4 = a4 + a1
  3201: 01                       fallthrough
      :                          @223
  3202: 82 bc                    a5 = u64 [a4]
  3204: c8 7c 0a                 a3 = a5 + a0
  3207: ac ca 5e                 jump @231 if a3 <u a5
      :                          @224
  3210: 95 a5 01                 s0 = a3 + 0x1
  3213: 88 56 01                 s1 = s0 <u 0x1
  3216: d8 58 05                 s0 = a1 <u s0
  3219: d4 65 05                 s0 = s0 | s1
  3222: 52 05 4f                 jump @231 if s0 != 0
      :                          @225
  3225: 82 b6                    s1 = u64 [a4]
  3227: ab c6 e7                 jump @223 if s1 != a5
      :                          @226
  3230: 7b ba                    u64 [a4] = a3
  3232: 33 08 40 00 04           a1 = 0x40040
  3237: c9 a8 08                 a1 = a1 - a3
  3240: 64 25                    s0 = t0
  3242: 28 06                    jump @228
      :                          @227
  3244: 33 08 01                 a1 = 0x1
  3247: 01                       fallthrough
      :                          @228
  3248: 7b 17                    u64 [sp] = a0
  3250: 7b 18 08                 u64 [sp + 0x8] = a1
  3253: 49 11 10                 u64 [sp + 16] = 0
  3256: 33 08 18 01 01           a1 = 0x10118
  3261: 64 17                    a0 = sp
  3263: 50 10 34 1a 06           ra = 52, jump @345
      :                          @229 [@dyn 26]
  3268: 52 07 22                 jump @232 if a0 != 0
      :                          @230
  3271: 82 17 10                 a0 = u64 [sp + 0x10]
  3274: 82 18 08                 a1 = u64 [sp + 0x8]
  3277: 82 19                    a2 = u64 [sp]
  3279: 7b 57 10                 u64 [s0 + 0x10] = a0
  3282: 7b 58 08                 u64 [s0 + 0x8] = a1
  3285: 7b 59                    u64 [s0] = a2
  3287: 82 10 30                 ra = u64 [sp + 0x30]
  3290: 82 15 28                 s0 = u64 [sp + 0x28]
  3293: 82 16 20                 s1 = u64 [sp + 0x20]
  3296: 95 11 38                 sp = sp + 0x38
  3299: 32 00                    ret
      :                          @231
  3301: 00                       trap
      :                          @232
  3302: 00                       trap
      :                          @233
  3303: 00                       trap
      :                          @234 [@dyn 27]
  3304: 82 72                    t0 = u64 [a0]
  3306: 33 09 00 00 ff           a2 = 0xffffffffffff0000
  3311: 95 2a ff ff fe           a3 = t0 + 0xfffffffffffeffff
  3316: ac 9a 28                 jump @240 if a3 <u a2
      :                          @235
  3319: 82 77 08                 a0 = u64 [a0 + 0x8]
  3322: 33 09 40 00 03           a2 = 0x30040
  3327: 95 99 00 00 01           a2 = a2 + 0x10000
  3332: 01                       fallthrough
      :                          @236
  3333: 82 9a                    a3 = u64 [a2]
  3335: c9 a9 0b                 a4 = a2 - a3
  3338: ab 7b 12                 jump @240 if a4 != a0
      :                          @237
  3341: c9 2a 0b                 a4 = a3 - t0
  3344: 01                       fallthrough
      :                          @238
  3345: 82 9c                    a5 = u64 [a2]
  3347: ab ac f2                 jump @236 if a5 != a3
      :                          @239
  3350: 7b 9b                    u64 [a2] = a4
  3352: 33 08                    a1 = 0
  3354: 32 00                    ret
      :                          @240
  3356: 32 00                    ret
      :                          @241 [@dyn 28]
  3358: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3361: 7b 10 18                 u64 [sp + 0x18] = ra
  3364: 7b 15 10                 u64 [sp + 0x10] = s0
  3367: 7b 16 08                 u64 [sp + 0x8] = s1
  3370: 64 75                    s0 = a0
  3372: 82 7a 10                 a3 = u64 [a0 + 0x10]
  3375: 82 77                    a0 = u64 [a0]
  3377: c9 a7 07                 a0 = a0 - a3
  3380: 64 96                    s1 = a2
  3382: ac 97 2a                 jump @244 if a0 <u a2
      :                          @242
  3385: 7b 1a                    u64 [sp] = a3
  3387: 82 57 08                 a0 = u64 [s0 + 0x8]
  3390: c8 a7 07                 a0 = a0 + a3
  3393: 64 69                    a2 = s1
  3395: 50 10 3a 4a 01           ra = 58, jump @263
      :                          @243 [@dyn 29]
  3400: 82 17                    a0 = u64 [sp]
  3402: c8 76 06                 s1 = s1 + a0
  3405: 7b 56 10                 u64 [s0 + 0x10] = s1
  3408: 33 07                    a0 = 0
  3410: 82 10 18                 ra = u64 [sp + 0x18]
  3413: 82 15 10                 s0 = u64 [sp + 0x10]
  3416: 82 16 08                 s1 = u64 [sp + 0x8]
  3419: 95 11 20                 sp = sp + 0x20
  3422: 32 00                    ret
      :                          @244
  3424: 64 57                    a0 = s0
  3426: 7b 18                    u64 [sp] = a1
  3428: 64 a8                    a1 = a3
  3430: 64 69                    a2 = s1
  3432: 50 10 3c 74 fc           ra = 60, jump @157
      :                          @245 [@dyn 30]
  3437: 82 18                    a1 = u64 [sp]
  3439: 82 5a 10                 a3 = u64 [s0 + 0x10]
  3442: 28 c7                    jump @242
      :                          @246 [@dyn 31]
  3444: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  3447: 7b 10 20                 u64 [sp + 0x20] = ra
  3450: 7b 15 18                 u64 [sp + 0x18] = s0
  3453: 7b 16 10                 u64 [sp + 0x10] = s1
  3456: 64 86                    s1 = a1
  3458: 83 88                    i32 a1 = a1 + 0
  3460: 33 09 80 00              a2 = 0x80
  3464: 64 7a                    a3 = a0
  3466: ae 98 2b                 jump @251 if a1 >=u a2
      :                          @247
  3469: 82 a8 10                 a1 = u64 [a3 + 0x10]
  3472: 82 a7                    a0 = u64 [a3]
  3474: ab 78 12                 jump @250 if a1 != a0
      :                          @248
  3477: 64 a7                    a0 = a3
  3479: 64 a5                    s0 = a3
  3481: 50 10 40 08 fe           ra = 64, jump @201
      :                          @249 [@dyn 32]
  3486: 64 5a                    a3 = s0
  3488: 82 58 10                 a1 = u64 [s0 + 0x10]
  3491: 01                       fallthrough
      :                          @250
  3492: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3495: c8 87 07                 a0 = a0 + a1
  3498: 78 76                    u8 [a0] = s1
  3500: 95 88 01                 a1 = a1 + 0x1
  3503: 7b a8 10                 u64 [a3 + 0x10] = a1
  3506: 28 ab 00                 jump @259
      :                          @251
  3509: 8b 67 0b                 i32 a0 = s1 >> 0xb
  3512: 48 11 0c                 u32 [sp + 12] = 0
  3515: 52 07 1c                 jump @253 if a0 != 0
      :                          @252
  3518: 98 67 06                 a0 = s1 >> 0x6
  3521: 86 77 c0 00              a0 = a0 | 0xc0
  3525: 78 17 0c                 u8 [sp + 0xc] = a0
  3528: 84 67 3f                 a0 = s1 & 0x3f
  3531: 86 77 80 00              a0 = a0 | 0x80
  3535: 78 17 0d                 u8 [sp + 0xd] = a0
  3538: 33 06 02                 s1 = 0x2
  3541: 28 63                    jump @256
      :                          @253
  3543: 8b 67 10                 i32 a0 = s1 >> 0x10
  3546: 52 07 29                 jump @255 if a0 != 0
      :                          @254
  3549: 98 67 0c                 a0 = s1 >> 0xc
  3552: 86 77 e0 00              a0 = a0 | 0xe0
  3556: 78 17 0c                 u8 [sp + 0xc] = a0
  3559: 97 67 34                 a0 = s1 << 0x34
  3562: 98 77 3a                 a0 = a0 >> 0x3a
  3565: 95 77 80 00              a0 = a0 + 0x80
  3569: 78 17 0d                 u8 [sp + 0xd] = a0
  3572: 84 67 3f                 a0 = s1 & 0x3f
  3575: 86 77 80 00              a0 = a0 | 0x80
  3579: 78 17 0e                 u8 [sp + 0xe] = a0
  3582: 33 06 03                 s1 = 0x3
  3585: 28 37                    jump @256
      :                          @255
  3587: 97 67 2b                 a0 = s1 << 0x2b
  3590: 98 77 3d                 a0 = a0 >> 0x3d
  3593: 95 77 f0 00              a0 = a0 + 0xf0
  3597: 78 17 0c                 u8 [sp + 0xc] = a0
  3600: 97 67 2e                 a0 = s1 << 0x2e
  3603: 98 77 3a                 a0 = a0 >> 0x3a
  3606: 95 77 80 00              a0 = a0 + 0x80
  3610: 78 17 0d                 u8 [sp + 0xd] = a0
  3613: 97 67 34                 a0 = s1 << 0x34
  3616: 98 77 3a                 a0 = a0 >> 0x3a
  3619: 95 77 80 00              a0 = a0 + 0x80
  3623: 78 17 0e                 u8 [sp + 0xe] = a0
  3626: 84 67 3f                 a0 = s1 & 0x3f
  3629: 86 77 80 00              a0 = a0 | 0x80
  3633: 78 17 0f                 u8 [sp + 0xf] = a0
  3636: 33 06 04                 s1 = 0x4
  3639: 01                       fallthrough
      :                          @256
  3640: 82 a5 10                 s0 = u64 [a3 + 0x10]
  3643: 82 a7                    a0 = u64 [a3]
  3645: c9 57 07                 a0 = a0 - s0
  3648: ac 67 2d                 jump @260 if a0 <u s1
      :                          @257
  3651: 7b 1a                    u64 [sp] = a3
  3653: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3656: c8 57 07                 a0 = a0 + s0
  3659: 95 18 0c                 a1 = sp + 0xc
  3662: 64 69                    a2 = s1
  3664: 50 10 42 3d              ra = 66, jump @263
      :                          @258 [@dyn 33]
  3668: c8 56 06                 s1 = s1 + s0
  3671: 82 17                    a0 = u64 [sp]
  3673: 7b 76 10                 u64 [a0 + 0x10] = s1
  3676: 01                       fallthrough
      :                          @259
  3677: 33 07                    a0 = 0
  3679: 82 10 20                 ra = u64 [sp + 0x20]
  3682: 82 15 18                 s0 = u64 [sp + 0x18]
  3685: 82 16 10                 s1 = u64 [sp + 0x10]
  3688: 95 11 28                 sp = sp + 0x28
  3691: 32 00                    ret
      :                          @260
  3693: 64 a7                    a0 = a3
  3695: 64 58                    a1 = s0
  3697: 64 69                    a2 = s1
  3699: 64 a5                    s0 = a3
  3701: 50 10 44 67 fb           ra = 68, jump @157
      :                          @261 [@dyn 34]
  3706: 64 5a                    a3 = s0
  3708: 82 55 10                 s0 = u64 [s0 + 0x10]
  3711: 28 c4                    jump @257
      :                          @262 [@dyn 35]
  3713: 64 8a                    a3 = a1
  3715: 33 08 18 01 01           a1 = 0x10118
  3720: 64 a9                    a2 = a3
  3722: 28 4f 04                 jump @345
      :                          @263
  3725: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3728: 7b 10 18                 u64 [sp + 0x18] = ra
  3731: 7b 15 10                 u64 [sp + 0x10] = s0
  3734: 7b 16 08                 u64 [sp + 0x8] = s1
  3737: 53 19 10 64              jump @272 if a2 <u 16
      :                          @264
  3741: 8d 7a                    i32 a3 = -a0
  3743: 84 a2 07                 t0 = a3 & 0x7
  3746: c8 27 0b                 a4 = a0 + t0
  3749: 51 02 15                 jump @267 if t0 == 0
      :                          @265
  3752: 64 8c                    a5 = a1
  3754: 64 75                    s0 = a0
  3756: 01                       fallthrough
      :                          @266
  3757: 7c ca                    a3 = u8 [a5]
  3759: 78 5a                    u8 [s0] = a3
  3761: 95 55 01                 s0 = s0 + 0x1
  3764: 95 cc 01                 a5 = a5 + 0x1
  3767: ac b5 f6                 jump @266 if s0 <u a4
      :                          @267
  3770: c8 28 03                 t1 = a1 + t0
  3773: c9 29 02                 t0 = a2 - t0
  3776: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  3779: 84 38 07                 a1 = t1 & 0x7
  3782: c8 4b 0a                 a3 = a4 + t2
  3785: 51 08 3b                 jump @274 if a1 == 0
      :                          @268
  3788: 58 04 4b                 jump @277 if t2 <=s 0
      :                          @269
  3791: 97 38 03                 a1 = t1 << 0x3
  3794: 84 80 38                 ra = a1 & 0x38
  3797: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  3800: 82 c5                    s0 = u64 [a5]
  3802: 8d 88                    i32 a1 = -a1
  3804: 84 88 38                 a1 = a1 & 0x38
  3807: 95 cc 08                 a5 = a5 + 0x8
  3810: 01                       fallthrough
      :                          @270
  3811: 82 c6                    s1 = u64 [a5]
  3813: d0 05 05                 s0 = s0 >> ra
  3816: cf 86 09                 a2 = s1 << a1
  3819: d4 59 09                 a2 = a2 | s0
  3822: 7b b9                    u64 [a4] = a2
  3824: 95 bb 08                 a4 = a4 + 0x8
  3827: 95 cc 08                 a5 = a5 + 0x8
  3830: 64 65                    s0 = s1
  3832: ac ab eb                 jump @270 if a4 <u a3
      :                          @271
  3835: 28 1c                    jump @277
      :                          @272
  3837: 64 7a                    a3 = a0
  3839: 52 09 21                 jump @278 if a2 != 0
      :                          @273
  3842: 28 2f                    jump @280
      :                          @274
  3844: 58 04 13                 jump @277 if t2 <=s 0
      :                          @275
  3847: 64 38                    a1 = t1
  3849: 01                       fallthrough
      :                          @276
  3850: 82 89                    a2 = u64 [a1]
  3852: 7b b9                    u64 [a4] = a2
  3854: 95 bb 08                 a4 = a4 + 0x8
  3857: 95 88 08                 a1 = a1 + 0x8
  3860: ac ab f6                 jump @276 if a4 <u a3
      :                          @277
  3863: c8 43 08                 a1 = t1 + t2
  3866: 84 29 07                 a2 = t0 & 0x7
  3869: 51 09 14                 jump @280 if a2 == 0
      :                          @278
  3872: c8 a9 09                 a2 = a2 + a3
  3875: 01                       fallthrough
      :                          @279
  3876: 7c 8b                    a4 = u8 [a1]
  3878: 78 ab                    u8 [a3] = a4
  3880: 95 aa 01                 a3 = a3 + 0x1
  3883: 95 88 01                 a1 = a1 + 0x1
  3886: ac 9a f6                 jump @279 if a3 <u a2
      :                          @280
  3889: 82 10 18                 ra = u64 [sp + 0x18]
  3892: 82 15 10                 s0 = u64 [sp + 0x10]
  3895: 82 16 08                 s1 = u64 [sp + 0x8]
  3898: 95 11 20                 sp = sp + 0x20
  3901: 32 00                    ret
      :                          @281 [@dyn 36]
  3903: 82 77                    a0 = u64 [a0]
  3905: 01                       fallthrough
      :                          @282
  3906: 28                       jump @282
      :                          @283
  3907: 95 11 a8                 sp = sp + 0xffffffffffffffa8
  3910: 7b 10 50                 u64 [sp + 0x50] = ra
  3913: 7b 15 48                 u64 [sp + 0x48] = s0
  3916: 7b 16 40                 u64 [sp + 0x40] = s1
  3919: 7b 18                    u64 [sp] = a1
  3921: 98 79 04                 a2 = a0 >> 0x4
  3924: 33 08 27                 a1 = 0x27
  3927: 53 29 71 02 81 00        jump @286 if a2 <u 625
      :                          @284
  3933: 33 08 27                 a1 = 0x27
  3936: 95 1a 3e                 a3 = sp + 0x3e
  3939: 3a 09 00 00 03           a2 = u64 [0x30000]
  3944: 7b 19 10                 u64 [sp + 0x10] = a2
  3947: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
  3953: 33 04 7b 14              t2 = 0x147b
  3957: 33 0b 8c 01 01           a4 = 0x1018c
  3962: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
  3968: 01                       fallthrough
      :                          @285
  3969: 64 72                    t0 = a0
  3971: 82 17 10                 a0 = u64 [sp + 0x10]
  3974: d6 72 07                 a0 = t0 mulhu a0
  3977: 98 77 0b                 a0 = a0 >> 0xb
  3980: 82 19 08                 a2 = u64 [sp + 0x8]
  3983: c0 97 0c                 i32 a5 = a0 * a2
  3986: c8 2c 06                 s1 = a5 + t0
  3989: 97 6c 30                 a5 = s1 << 0x30
  3992: 98 cc 32                 a5 = a5 >> 0x32
  3995: ca 4c 0c                 a5 = a5 * t2
  3998: 98 c3 11                 t1 = a5 >> 0x11
  4001: 98 cc 10                 a5 = a5 >> 0x10
  4004: 84 cc fe 07              a5 = a5 & 0x7fe
  4008: 96 39 9c                 a2 = t1 * 0xffffffffffffff9c
  4011: c8 69 09                 a2 = a2 + s1
  4014: 97 99 31                 a2 = a2 << 0x31
  4017: 98 99 30                 a2 = a2 >> 0x30
  4020: c8 bc 0c                 a5 = a5 + a4
  4023: 7c c6                    s1 = u8 [a5]
  4025: 7c cc 01                 a5 = u8 [a5 + 0x1]
  4028: c8 b9 09                 a2 = a2 + a4
  4031: 7c 95 01                 s0 = u8 [a2 + 0x1]
  4034: 7c 99                    a2 = u8 [a2]
  4036: 78 ac ff                 u8 [a3 + 0xffffffffffffffff] = a5
  4039: 78 a6 fe                 u8 [a3 + 0xfffffffffffffffe] = s1
  4042: 78 a5 01                 u8 [a3 + 0x1] = s0
  4045: 78 a9                    u8 [a3] = a2
  4047: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
  4050: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
  4053: ac 20 ac                 jump @285 if ra <u t0
      :                          @286
  4056: 54 17 63 3b              jump @288 if a0 <=u 99
      :                          @287
  4060: 97 79 30                 a2 = a0 << 0x30
  4063: 98 99 32                 a2 = a2 >> 0x32
  4066: 96 99 7b 14              a2 = a2 * 0x147b
  4070: 98 99 11                 a2 = a2 >> 0x11
  4073: 96 9a 9c                 a3 = a2 * 0xffffffffffffff9c
  4076: c8 a7 07                 a0 = a0 + a3
  4079: 97 77 31                 a0 = a0 << 0x31
  4082: 98 77 30                 a0 = a0 >> 0x30
  4085: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  4088: 33 0a 8c 01 01           a3 = 0x1018c
  4093: c8 a7 07                 a0 = a0 + a3
  4096: 7c 7a 01                 a3 = u8 [a0 + 0x1]
  4099: 7c 77                    a0 = u8 [a0]
  4101: 95 1b 19                 a4 = sp + 0x19
  4104: c8 8b 0b                 a4 = a4 + a1
  4107: 78 ba 01                 u8 [a4 + 0x1] = a3
  4110: 78 b7                    u8 [a4] = a0
  4112: 64 97                    a0 = a2
  4114: 01                       fallthrough
      :                          @288
  4115: 55 17 0a 14              jump @290 if a0 >=u 10
      :                          @289
  4119: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  4122: 95 19 19                 a2 = sp + 0x19
  4125: c8 89 09                 a2 = a2 + a1
  4128: 83 77 30                 i32 a0 = a0 + 0x30
  4131: 78 97                    u8 [a2] = a0
  4133: 28 21                    jump @291
      :                          @290
  4135: 97 77 01                 a0 = a0 << 0x1
  4138: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  4141: 33 09 8c 01 01           a2 = 0x1018c
  4146: c8 97 07                 a0 = a0 + a2
  4149: 7c 79 01                 a2 = u8 [a0 + 0x1]
  4152: 7c 77                    a0 = u8 [a0]
  4154: 95 1a 19                 a3 = sp + 0x19
  4157: c8 8a 0a                 a3 = a3 + a1
  4160: 78 a9 01                 u8 [a3 + 0x1] = a2
  4163: 78 a7                    u8 [a3] = a0
  4165: 01                       fallthrough
      :                          @291
  4166: 95 1a 19                 a3 = sp + 0x19
  4169: c8 8a 0a                 a3 = a3 + a1
  4172: 9a 8b 27                 a4 = 0x27 - a1
  4175: 33 08 48 01 01           a1 = 0x10148
  4180: 82 17                    a0 = u64 [sp]
  4182: 33 09                    a2 = 0
  4184: 50 10 4a 12              ra = 74, jump @293
      :                          @292 [@dyn 37]
  4188: 82 10 50                 ra = u64 [sp + 0x50]
  4191: 82 15 48                 s0 = u64 [sp + 0x48]
  4194: 82 16 40                 s1 = u64 [sp + 0x40]
  4197: 95 11 58                 sp = sp + 0x58
  4200: 32 00                    ret
      :                          @293
  4202: 95 11 98                 sp = sp + 0xffffffffffffff98
  4205: 7b 10 60                 u64 [sp + 0x60] = ra
  4208: 7b 15 58                 u64 [sp + 0x58] = s0
  4211: 7b 16 50                 u64 [sp + 0x50] = s1
  4214: 80 73 34                 t1 = u32 [a0 + 0x34]
  4217: 7b 1a 20                 u64 [sp + 0x20] = a3
  4220: 64 9c                    a5 = a2
  4222: 84 36 01                 s1 = t1 & 0x1
  4225: 33 02 2b                 t0 = 0x2b
  4228: 33 09 00 00 11           a2 = 0x110000
  4233: 84 3a 04                 a3 = t1 & 0x4
  4236: 7b 1b 28                 u64 [sp + 0x28] = a4
  4239: c8 b6 04                 t2 = s1 + a4
  4242: 7b 1c 30                 u64 [sp + 0x30] = a5
  4245: 52 0a 10                 jump @296 if a3 != 0
      :                          @294
  4248: 49 11 38                 u64 [sp + 56] = 0
  4251: 82 78                    a1 = u64 [a0]
  4253: 94 69 2b                 a2 = 0x2b if s1 != 0
  4256: 52 08 35                 jump @300 if a1 != 0
      :                          @295
  4259: 28 56                    jump @305
      :                          @296
  4261: 7b 18 38                 u64 [sp + 0x38] = a1
  4264: 33 09                    a2 = 0
  4266: 51 0c 1b                 jump @299 if a5 == 0
      :                          @297
  4269: 82 1b 38                 a4 = u64 [sp + 0x38]
  4272: 01                       fallthrough
      :                          @298
  4273: 7d b5                    s0 = i8 [a4]
  4275: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
  4278: 85 5a 01                 a3 = s0 ^ 0x1
  4281: c8 a9 09                 a2 = a2 + a3
  4284: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  4287: 95 bb 01                 a4 = a4 + 0x1
  4290: 52 0c ef                 jump @298 if a5 != 0
      :                          @299
  4293: c8 94 04                 t2 = t2 + a2
  4296: 33 09 00 00 11           a2 = 0x110000
  4301: 82 78                    a1 = u64 [a0]
  4303: db 62 09                 a2 = t0 if s1 != 0
  4306: 51 08 27                 jump @305 if a1 == 0
      :                          @300
  4309: 82 7a 08                 a3 = u64 [a0 + 0x8]
  4312: ae a4 21                 jump @305 if t2 >=u a3
      :                          @301
  4315: 84 38 08                 a1 = t1 & 0x8
  4318: 52 08 50                 jump @308 if a1 != 0
      :                          @302
  4321: 7c 76 38                 s1 = u8 [a0 + 0x38]
  4324: c9 4a 0a                 a3 = a3 - t2
  4327: 7b 19 18                 u64 [sp + 0x18] = a2
  4330: 5a 16 01 9d 00           jump @315 if s1 >s 1
      :                          @303
  4335: 52 06 aa 00              jump @317 if s1 != 0
      :                          @304
  4339: 7b 1a 10                 u64 [sp + 0x10] = a3
  4342: 28 a9 00                 jump @318
      :                          @305
  4345: 82 75 20                 s0 = u64 [a0 + 0x20]
  4348: 82 76 28                 s1 = u64 [a0 + 0x28]
  4351: 64 57                    a0 = s0
  4353: 64 68                    a1 = s1
  4355: 82 1a 38                 a3 = u64 [sp + 0x38]
  4358: 82 1b 30                 a4 = u64 [sp + 0x30]
  4361: 50 10 4c 6c 01           ra = 76, jump @338
      :                          @306 [@dyn 38]
  4366: 33 08 01                 a1 = 0x1
  4369: 52 07 bb 00              jump @323 if a0 != 0
      :                          @307
  4373: 82 6c 18                 a5 = u64 [s1 + 0x18]
  4376: 64 57                    a0 = s0
  4378: 82 18 20                 a1 = u64 [sp + 0x20]
  4381: 82 19 28                 a2 = u64 [sp + 0x28]
  4384: 82 10 60                 ra = u64 [sp + 0x60]
  4387: 82 15 58                 s0 = u64 [sp + 0x58]
  4390: 82 16 50                 s1 = u64 [sp + 0x50]
  4393: 95 11 68                 sp = sp + 0x68
  4396: 32 0c                    jump [a5]
      :                          @308
  4398: 7b 1a 40                 u64 [sp + 0x40] = a3
  4401: 64 45                    s0 = t2
  4403: 81 78 30                 a1 = i32 [a0 + 0x30]
  4406: 7b 18 10                 u64 [sp + 0x10] = a1
  4409: 7c 7a 38                 a3 = u8 [a0 + 0x38]
  4412: 7b 1a 08                 u64 [sp + 0x8] = a3
  4415: 82 7a 20                 a3 = u64 [a0 + 0x20]
  4418: 82 78 28                 a1 = u64 [a0 + 0x28]
  4421: 48 17 30 30              u32 [a0 + 48] = 0x30
  4425: 7b 17                    u64 [sp] = a0
  4427: 46 17 38 01              u8 [a0 + 56] = 0x1
  4431: 7b 1a 48                 u64 [sp + 0x48] = a3
  4434: 64 a7                    a0 = a3
  4436: 64 86                    s1 = a1
  4438: 82 1a 38                 a3 = u64 [sp + 0x38]
  4441: 82 1b 30                 a4 = u64 [sp + 0x30]
  4444: 50 10 4e 19 01           ra = 78, jump @338
      :                          @309 [@dyn 39]
  4449: 52 07 67                 jump @322 if a0 != 0
      :                          @310
  4452: 82 17 40                 a0 = u64 [sp + 0x40]
  4455: c9 57 05                 s0 = a0 - s0
  4458: 95 55 01                 s0 = s0 + 0x1
  4461: 01                       fallthrough
      :                          @311
  4462: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  4465: 51 05 c6 00              jump @333 if s0 == 0
      :                          @312
  4469: 82 69 20                 a2 = u64 [s1 + 0x20]
  4472: 33 08 30                 a1 = 0x30
  4475: 82 17 48                 a0 = u64 [sp + 0x48]
  4478: b4 90 01 50              ra = 80, jump [a2]
      :                          @313 [@dyn 40]
  4482: 51 07 ec                 jump @311 if a0 == 0
      :                          @314
  4485: 28 43                    jump @322
      :                          @315
  4487: 52 16 02 12              jump @317 if s1 != 2
      :                          @316
  4491: 98 a6 01                 s1 = a3 >> 0x1
  4494: 95 a8 01                 a1 = a3 + 0x1
  4497: 98 88 01                 a1 = a1 >> 0x1
  4500: 7b 18 10                 u64 [sp + 0x10] = a1
  4503: 28 08                    jump @318
      :                          @317
  4505: 64 a6                    s1 = a3
  4507: 49 11 10                 u64 [sp + 16] = 0
  4510: 01                       fallthrough
      :                          @318
  4511: 82 78 20                 a1 = u64 [a0 + 0x20]
  4514: 7b 18 48                 u64 [sp + 0x48] = a1
  4517: 82 75 28                 s0 = u64 [a0 + 0x28]
  4520: 81 77 30                 a0 = i32 [a0 + 0x30]
  4523: 7b 17 40                 u64 [sp + 0x40] = a0
  4526: 95 66 01                 s1 = s1 + 0x1
  4529: 01                       fallthrough
      :                          @319
  4530: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  4533: 51 06 27                 jump @324 if s1 == 0
      :                          @320
  4536: 82 59 20                 a2 = u64 [s0 + 0x20]
  4539: 82 17 48                 a0 = u64 [sp + 0x48]
  4542: 82 18 40                 a1 = u64 [sp + 0x40]
  4545: b4 90 01 52              ra = 82, jump [a2]
      :                          @321 [@dyn 41]
  4549: 51 07 ed                 jump @319 if a0 == 0
      :                          @322
  4552: 33 08 01                 a1 = 0x1
  4555: 01                       fallthrough
      :                          @323
  4556: 64 87                    a0 = a1
  4558: 82 10 60                 ra = u64 [sp + 0x60]
  4561: 82 15 58                 s0 = u64 [sp + 0x58]
  4564: 82 16 50                 s1 = u64 [sp + 0x50]
  4567: 95 11 68                 sp = sp + 0x68
  4570: 32 00                    ret
      :                          @324
  4572: 82 16 48                 s1 = u64 [sp + 0x48]
  4575: 64 67                    a0 = s1
  4577: 64 58                    a1 = s0
  4579: 82 19 18                 a2 = u64 [sp + 0x18]
  4582: 82 1a 38                 a3 = u64 [sp + 0x38]
  4585: 82 1b 30                 a4 = u64 [sp + 0x30]
  4588: 50 10 54 89 00           ra = 84, jump @338
      :                          @325 [@dyn 42]
  4593: 33 08 01                 a1 = 0x1
  4596: 52 07 d8                 jump @323 if a0 != 0
      :                          @326
  4599: 82 5a 18                 a3 = u64 [s0 + 0x18]
  4602: 64 67                    a0 = s1
  4604: 82 18 20                 a1 = u64 [sp + 0x20]
  4607: 82 19 28                 a2 = u64 [sp + 0x28]
  4610: b4 a0 01 56              ra = 86, jump [a3]
      :                          @327 [@dyn 43]
  4614: 33 08 01                 a1 = 0x1
  4617: 52 07 c3                 jump @323 if a0 != 0
      :                          @328
  4620: 82 17 10                 a0 = u64 [sp + 0x10]
  4623: 9a 77                    a0 = -a0
  4625: 7b 17 38                 u64 [sp + 0x38] = a0
  4628: 33 06 ff                 s1 = 0xffffffffffffffff
  4631: 01                       fallthrough
      :                          @329
  4632: 82 17 38                 a0 = u64 [sp + 0x38]
  4635: c8 67 07                 a0 = a0 + s1
  4638: 51 17 ff 42              jump @336 if a0 == 4294967295
      :                          @330
  4642: 82 59 20                 a2 = u64 [s0 + 0x20]
  4645: 82 17 48                 a0 = u64 [sp + 0x48]
  4648: 82 18 40                 a1 = u64 [sp + 0x40]
  4651: b4 90 01 58              ra = 88, jump [a2]
      :                          @331 [@dyn 44]
  4655: 95 66 01                 s1 = s1 + 0x1
  4658: 51 07 e6                 jump @329 if a0 == 0
      :                          @332
  4661: 28 37                    jump @337
      :                          @333
  4663: 82 6a 18                 a3 = u64 [s1 + 0x18]
  4666: 82 17 48                 a0 = u64 [sp + 0x48]
  4669: 82 18 20                 a1 = u64 [sp + 0x20]
  4672: 82 19 28                 a2 = u64 [sp + 0x28]
  4675: b4 a0 01 5a              ra = 90, jump [a3]
      :                          @334 [@dyn 45]
  4679: 33 08 01                 a1 = 0x1
  4682: 52 07 82                 jump @323 if a0 != 0
      :                          @335
  4685: 33 08                    a1 = 0
  4687: 82 16                    s1 = u64 [sp]
  4689: 82 17 10                 a0 = u64 [sp + 0x10]
  4692: 7a 67 30                 u32 [s1 + 0x30] = a0
  4695: 82 17 08                 a0 = u64 [sp + 0x8]
  4698: 78 67 38                 u8 [s1 + 0x38] = a0
  4701: 28 6f ff                 jump @323
      :                          @336
  4704: 82 16 10                 s1 = u64 [sp + 0x10]
  4707: 82 17 10                 a0 = u64 [sp + 0x10]
  4710: d8 76 08                 a1 = s1 <u a0
  4713: 28 63 ff                 jump @323
      :                          @337
  4716: 82 17 10                 a0 = u64 [sp + 0x10]
  4719: d8 76 08                 a1 = s1 <u a0
  4722: 28 5a ff                 jump @323
      :                          @338
  4725: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  4728: 7b 10 20                 u64 [sp + 0x20] = ra
  4731: 7b 15 18                 u64 [sp + 0x18] = s0
  4734: 7b 16 10                 u64 [sp + 0x10] = s1
  4737: 83 9c                    i32 a5 = a2 + 0
  4739: 33 02 00 00 11           t0 = 0x110000
  4744: 64 a6                    s1 = a3
  4746: 64 85                    s0 = a1
  4748: 64 7a                    a3 = a0
  4750: aa 2c 20                 jump @341 if a5 == t0
      :                          @339
  4753: 82 5c 20                 a5 = u64 [s0 + 0x20]
  4756: 64 a7                    a0 = a3
  4758: 64 98                    a1 = a2
  4760: 7b 1b 08                 u64 [sp + 0x8] = a4
  4763: 7b 1a                    u64 [sp] = a3
  4765: b4 c0 01 5c              ra = 92, jump [a5]
      :                          @340 [@dyn 46]
  4769: 82 1a                    a3 = u64 [sp]
  4771: 82 1b 08                 a4 = u64 [sp + 0x8]
  4774: 64 78                    a1 = a0
  4776: 33 07 01                 a0 = 0x1
  4779: 52 08 20                 jump @344 if a1 != 0
      :                          @341
  4782: 51 06 1a                 jump @343 if s1 == 0
      :                          @342
  4785: 82 5c 18                 a5 = u64 [s0 + 0x18]
  4788: 64 a7                    a0 = a3
  4790: 64 68                    a1 = s1
  4792: 64 b9                    a2 = a4
  4794: 82 10 20                 ra = u64 [sp + 0x20]
  4797: 82 15 18                 s0 = u64 [sp + 0x18]
  4800: 82 16 10                 s1 = u64 [sp + 0x10]
  4803: 95 11 28                 sp = sp + 0x28
  4806: 32 0c                    jump [a5]
      :                          @343
  4808: 33 07                    a0 = 0
  4810: 01                       fallthrough
      :                          @344
  4811: 82 10 20                 ra = u64 [sp + 0x20]
  4814: 82 15 18                 s0 = u64 [sp + 0x18]
  4817: 82 16 10                 s1 = u64 [sp + 0x10]
  4820: 95 11 28                 sp = sp + 0x28
  4823: 32 00                    ret
      :                          @345
  4825: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  4829: 7b 10 80 00              u64 [sp + 0x80] = ra
  4833: 7b 15 78                 u64 [sp + 0x78] = s0
  4836: 7b 16 70                 u64 [sp + 0x70] = s1
  4839: 49 11 60 20              u64 [sp + 96] = 0x20
  4843: 33 0a 03                 a3 = 0x3
  4846: 78 1a 68                 u8 [sp + 0x68] = a3
  4849: 82 96 20                 s1 = u64 [a2 + 0x20]
  4852: 49 11 30                 u64 [sp + 48] = 0
  4855: 49 11 40                 u64 [sp + 64] = 0
  4858: 7b 17 50                 u64 [sp + 0x50] = a0
  4861: 7b 18 58                 u64 [sp + 0x58] = a1
  4864: 51 06 07 01              jump @367 if s1 == 0
      :                          @346
  4868: 82 97 28                 a0 = u64 [a2 + 0x28]
  4871: 51 07 74 01              jump @377 if a0 == 0
      :                          @347
  4875: 49 11 28                 u64 [sp + 40] = 0
  4878: 82 95                    s0 = u64 [a2]
  4880: 7b 19 08                 u64 [sp + 0x8] = a2
  4883: 82 98 10                 a1 = u64 [a2 + 0x10]
  4886: 7b 18 18                 u64 [sp + 0x18] = a1
  4889: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  4892: 97 88 03                 a1 = a1 << 0x3
  4895: 98 88 03                 a1 = a1 >> 0x3
  4898: 95 88 01                 a1 = a1 + 0x1
  4901: 7b 18                    u64 [sp] = a1
  4903: 95 55 08                 s0 = s0 + 0x8
  4906: 96 78 38                 a1 = a0 * 0x38
  4909: 95 66 18                 s1 = s1 + 0x18
  4912: 33 07 48                 a0 = 0x48
  4915: 7b 17 10                 u64 [sp + 0x10] = a0
  4918: 01                       fallthrough
      :                          @348
  4919: 7b 18 20                 u64 [sp + 0x20] = a1
  4922: 82 59                    a2 = u64 [s0]
  4924: 51 09 17                 jump @351 if a2 == 0
      :                          @349
  4927: 82 1a 58                 a3 = u64 [sp + 0x58]
  4930: 82 17 50                 a0 = u64 [sp + 0x50]
  4933: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  4936: 82 aa 18                 a3 = u64 [a3 + 0x18]
  4939: b4 a0 01 5e              ra = 94, jump [a3]
      :                          @350 [@dyn 47]
  4943: 52 07 51 01              jump @380 if a0 != 0
      :                          @351
  4947: 81 67 10                 a0 = i32 [s1 + 0x10]
  4950: 7a 17 60                 u32 [sp + 0x60] = a0
  4953: 7c 67 18                 a0 = u8 [s1 + 0x18]
  4956: 78 17 68                 u8 [sp + 0x68] = a0
  4959: 81 67 14                 a0 = i32 [s1 + 0x14]
  4962: 7a 17 64                 u32 [sp + 0x64] = a0
  4965: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  4968: 82 67                    a0 = u64 [s1]
  4970: 51 08 26                 jump @356 if a1 == 0
      :                          @352
  4973: 52 18 01 16              jump @354 if a1 != 1
      :                          @353
  4977: 97 77 04                 a0 = a0 << 0x4
  4980: 82 18 18                 a1 = u64 [sp + 0x18]
  4983: c8 87 07                 a0 = a0 + a1
  4986: 82 78 08                 a1 = u64 [a0 + 0x8]
  4989: 82 19 10                 a2 = u64 [sp + 0x10]
  4992: aa 98 07                 jump @355 if a1 == a2
      :                          @354
  4995: 33 08                    a1 = 0
  4997: 28 0f                    jump @357
      :                          @355
  4999: 82 77                    a0 = u64 [a0]
  5001: 82 77                    a0 = u64 [a0]
  5003: 33 08 01                 a1 = 0x1
  5006: 28 06                    jump @357
      :                          @356
  5008: 33 08 01                 a1 = 0x1
  5011: 01                       fallthrough
      :                          @357
  5012: 7b 18 30                 u64 [sp + 0x30] = a1
  5015: 7b 17 38                 u64 [sp + 0x38] = a0
  5018: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  5021: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  5024: 51 08 26                 jump @362 if a1 == 0
      :                          @358
  5027: 52 18 01 16              jump @360 if a1 != 1
      :                          @359
  5031: 97 77 04                 a0 = a0 << 0x4
  5034: 82 18 18                 a1 = u64 [sp + 0x18]
  5037: c8 87 07                 a0 = a0 + a1
  5040: 82 78 08                 a1 = u64 [a0 + 0x8]
  5043: 82 19 10                 a2 = u64 [sp + 0x10]
  5046: aa 98 07                 jump @361 if a1 == a2
      :                          @360
  5049: 33 08                    a1 = 0
  5051: 28 0f                    jump @363
      :                          @361
  5053: 82 77                    a0 = u64 [a0]
  5055: 82 77                    a0 = u64 [a0]
  5057: 33 08 01                 a1 = 0x1
  5060: 28 06                    jump @363
      :                          @362
  5062: 33 08 01                 a1 = 0x1
  5065: 01                       fallthrough
      :                          @363
  5066: 7b 18 40                 u64 [sp + 0x40] = a1
  5069: 7b 17 48                 u64 [sp + 0x48] = a0
  5072: 82 67 08                 a0 = u64 [s1 + 0x8]
  5075: 97 77 04                 a0 = a0 << 0x4
  5078: 82 18 18                 a1 = u64 [sp + 0x18]
  5081: c8 78 08                 a1 = a1 + a0
  5084: 82 87                    a0 = u64 [a1]
  5086: 82 89 08                 a2 = u64 [a1 + 0x8]
  5089: 95 18 30                 a1 = sp + 0x30
  5092: b4 90 01 60              ra = 96, jump [a2]
      :                          @364 [@dyn 48]
  5096: 52 07 b8 00              jump @380 if a0 != 0
      :                          @365
  5100: 95 55 10                 s0 = s0 + 0x10
  5103: 82 18 20                 a1 = u64 [sp + 0x20]
  5106: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  5109: 95 66 38                 s1 = s1 + 0x38
  5112: 82 17 28                 a0 = u64 [sp + 0x28]
  5115: 95 77 01                 a0 = a0 + 0x1
  5118: 7b 17 28                 u64 [sp + 0x28] = a0
  5121: 52 08 36 ff              jump @348 if a1 != 0
      :                          @366
  5125: 28 69                    jump @375
      :                          @367
  5127: 82 97 18                 a0 = u64 [a2 + 0x18]
  5130: 51 07 71                 jump @377 if a0 == 0
      :                          @368
  5133: 82 95 10                 s0 = u64 [a2 + 0x10]
  5136: 33 0a                    a3 = 0
  5138: 97 78 04                 a1 = a0 << 0x4
  5141: c8 58 08                 a1 = a1 + s0
  5144: 7b 18 20                 u64 [sp + 0x20] = a1
  5147: 7b 19 08                 u64 [sp + 0x8] = a2
  5150: 82 96                    s1 = u64 [a2]
  5152: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  5155: 97 77 04                 a0 = a0 << 0x4
  5158: 98 77 04                 a0 = a0 >> 0x4
  5161: 95 77 01                 a0 = a0 + 0x1
  5164: 7b 17                    u64 [sp] = a0
  5166: 95 66 08                 s1 = s1 + 0x8
  5169: 01                       fallthrough
      :                          @369
  5170: 7b 1a 28                 u64 [sp + 0x28] = a3
  5173: 82 69                    a2 = u64 [s1]
  5175: 51 09 16                 jump @372 if a2 == 0
      :                          @370
  5178: 82 1a 58                 a3 = u64 [sp + 0x58]
  5181: 82 17 50                 a0 = u64 [sp + 0x50]
  5184: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  5187: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5190: b4 a0 01 62              ra = 98, jump [a3]
      :                          @371 [@dyn 49]
  5194: 52 07 56                 jump @380 if a0 != 0
      :                          @372
  5197: 82 57                    a0 = u64 [s0]
  5199: 82 59 08                 a2 = u64 [s0 + 0x8]
  5202: 95 18 30                 a1 = sp + 0x30
  5205: b4 90 01 64              ra = 100, jump [a2]
      :                          @373 [@dyn 50]
  5209: 52 07 47                 jump @380 if a0 != 0
      :                          @374
  5212: 95 66 10                 s1 = s1 + 0x10
  5215: 95 55 10                 s0 = s0 + 0x10
  5218: 82 1a 28                 a3 = u64 [sp + 0x28]
  5221: 95 aa 01                 a3 = a3 + 0x1
  5224: 82 17 20                 a0 = u64 [sp + 0x20]
  5227: ab 75 c7                 jump @369 if s0 != a0
      :                          @375
  5230: 82 19 08                 a2 = u64 [sp + 0x8]
  5233: 82 1a                    a3 = u64 [sp]
  5235: 82 97 08                 a0 = u64 [a2 + 0x8]
  5238: ac 7a 0d                 jump @378 if a3 <u a0
      :                          @376
  5241: 28 2c                    jump @381
      :                          @377
  5243: 33 0a                    a3 = 0
  5245: 82 97 08                 a0 = u64 [a2 + 0x8]
  5248: 54 07 25                 jump @381 if a0 <=u 0
      :                          @378
  5251: 82 97                    a0 = u64 [a2]
  5253: 97 a8 04                 a1 = a3 << 0x4
  5256: c8 87 09                 a2 = a0 + a1
  5259: 82 1a 58                 a3 = u64 [sp + 0x58]
  5262: 82 17 50                 a0 = u64 [sp + 0x50]
  5265: 82 98                    a1 = u64 [a2]
  5267: 82 99 08                 a2 = u64 [a2 + 0x8]
  5270: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5273: b4 a0 01 66              ra = 102, jump [a3]
      :                          @379 [@dyn 51]
  5277: 51 07 08                 jump @381 if a0 == 0
      :                          @380
  5280: 33 07 01                 a0 = 0x1
  5283: 28 05                    jump @382
      :                          @381
  5285: 33 07                    a0 = 0
  5287: 01                       fallthrough
      :                          @382
  5288: 82 10 80 00              ra = u64 [sp + 0x80]
  5292: 82 15 78                 s0 = u64 [sp + 0x78]
  5295: 82 16 70                 s1 = u64 [sp + 0x70]
  5298: 95 11 88 00              sp = sp + 0x88
  5302: 32 00                    ret
      :                          @383 [@dyn 52]
  5304: 32 00                    ret
      :                          @384 [@dyn 53]
  5306: 95 11 80                 sp = sp + 0xffffffffffffff80
  5309: 7b 10 78                 u64 [sp + 0x78] = ra
  5312: 7b 15 70                 u64 [sp + 0x70] = s0
  5315: 7b 16 68                 u64 [sp + 0x68] = s1
  5318: 64 92                    t0 = a2
  5320: 33 00                    ra = 0
  5322: 33 0b                    a4 = 0
  5324: 33 05                    s0 = 0
  5326: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
  5336: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
  5342: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
  5352: 82 79 10                 a2 = u64 [a0 + 0x10]
  5355: 7b 19 48                 u64 [sp + 0x48] = a2
  5358: 82 79                    a2 = u64 [a0]
  5360: 7b 19 38                 u64 [sp + 0x38] = a2
  5363: 82 77 08                 a0 = u64 [a0 + 0x8]
  5366: 7b 17 30                 u64 [sp + 0x30] = a0
  5369: 33 07 80 01 01           a0 = 0x10180
  5374: 7b 17 08                 u64 [sp + 0x8] = a0
  5377: 3a 07 08 00 03           a0 = u64 [0x30008]
  5382: 7b 17 60                 u64 [sp + 0x60] = a0
  5385: 7b 18 58                 u64 [sp + 0x58] = a1
  5388: 95 88 08                 a1 = a1 + 0x8
  5391: 7b 18                    u64 [sp] = a1
  5393: 33 0c 0a                 a5 = 0xa
  5396: 7b 12 20                 u64 [sp + 0x20] = t0
  5399: 7b 13 18                 u64 [sp + 0x18] = t1
  5402: 7b 14 10                 u64 [sp + 0x10] = t2
  5405: 28 3a                    jump @388
      :                          @385
  5407: 64 06                    s1 = ra
  5409: c8 89 07                 a0 = a2 + a1
  5412: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
  5415: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  5418: 88 77 01                 a0 = a0 <u 0x1
  5421: 01                       fallthrough
      :                          @386
  5422: 82 1a 48                 a3 = u64 [sp + 0x48]
  5425: 78 a7                    u8 [a3] = a0
  5427: 82 17 30                 a0 = u64 [sp + 0x30]
  5430: 82 7a 18                 a3 = u64 [a0 + 0x18]
  5433: 82 17 38                 a0 = u64 [sp + 0x38]
  5436: b4 a0 01 6c              ra = 108, jump [a3]
      :                          @387 [@dyn 54]
  5440: 64 5b                    a4 = s0
  5442: 82 12 20                 t0 = u64 [sp + 0x20]
  5445: 82 13 18                 t1 = u64 [sp + 0x18]
  5448: 82 14 10                 t2 = u64 [sp + 0x10]
  5451: 64 60                    ra = s1
  5453: 33 0c 0a                 a5 = 0xa
  5456: 82 15 40                 s0 = u64 [sp + 0x40]
  5459: 52 07 63 01              jump @429 if a0 != 0
      :                          @388
  5463: 84 57 ff 00              a0 = s0 & 0xff
  5467: 52 07 57 01              jump @428 if a0 != 0
      :                          @389
  5471: 7b 1b 50                 u64 [sp + 0x50] = a4
  5474: ae 02 0a                 jump @392 if t0 >=u ra
      :                          @390
  5477: 28 ef 00                 jump @419
      :                          @391
  5480: ac 02 ec 00              jump @419 if t0 <u ra
      :                          @392
  5484: c9 02 08                 a1 = t0 - ra
  5487: 82 16 58                 s1 = u64 [sp + 0x58]
  5490: c8 06 06                 s1 = s1 + ra
  5493: 55 18 10 1d              jump @398 if a1 >=u 16
      :                          @393
  5497: aa 02 d8 00              jump @418 if t0 == ra
      :                          @394
  5501: 33 0a                    a3 = 0
  5503: 01                       fallthrough
      :                          @395
  5504: c8 a6 07                 a0 = s1 + a3
  5507: 7c 77                    a0 = u8 [a0]
  5509: aa c7 a5 00              jump @413 if a0 == a5
      :                          @396
  5513: 95 aa 01                 a3 = a3 + 0x1
  5516: ab a8 f4                 jump @395 if a1 != a3
      :                          @397
  5519: 28 c2 00                 jump @418
      :                          @398
  5522: 95 69 07                 a2 = s1 + 0x7
  5525: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
  5528: c9 6a 07                 a0 = a3 - s1
  5531: d3 6a 0a                 a3 = a3 ^ s1
  5534: 88 aa 01                 a3 = a3 <u 0x1
  5537: 88 7b 01                 a4 = a0 <u 0x1
  5540: d4 ba 0a                 a3 = a3 | a4
  5543: 51 0a 45                 jump @404 if a3 == 0
      :                          @399
  5546: 33 07                    a0 = 0
  5548: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  5551: 82 1b                    a4 = u64 [sp]
  5553: c8 0b 0b                 a4 = a4 + ra
  5556: 28 08                    jump @401
      :                          @400
  5558: 82 1b                    a4 = u64 [sp]
  5560: c8 0b 0b                 a4 = a4 + ra
  5563: 01                       fallthrough
      :                          @401
  5564: c8 76 0c                 a5 = s1 + a0
  5567: 82 cc                    a5 = u64 [a5]
  5569: c8 7b 09                 a2 = a4 + a0
  5572: 82 99                    a2 = u64 [a2]
  5574: d3 4c 05                 s0 = a5 ^ t2
  5577: c8 35 05                 s0 = s0 + t1
  5580: e0 c5 0c                 a5 = s0 & ~a5
  5583: d3 49 05                 s0 = a2 ^ t2
  5586: c8 35 05                 s0 = s0 + t1
  5589: e0 95 09                 a2 = s0 & ~a2
  5592: d4 c9 09                 a2 = a2 | a5
  5595: 82 1c 60                 a5 = u64 [sp + 0x60]
  5598: d2 c9 09                 a2 = a2 & a5
  5601: 52 09 1f                 jump @407 if a2 != 0
      :                          @402
  5604: 95 77 10                 a0 = a0 + 0x10
  5607: ae 7a d5                 jump @401 if a3 >=u a0
      :                          @403
  5610: 28 16                    jump @407
      :                          @404
  5612: c8 a6 0b                 a4 = s1 + a3
  5615: 7c bb                    a4 = u8 [a4]
  5617: aa cb 51                 jump @416 if a4 == a5
      :                          @405
  5620: 95 aa 01                 a3 = a3 + 0x1
  5623: ab a7 f5                 jump @404 if a0 != a3
      :                          @406
  5626: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  5629: ae 7a b9                 jump @400 if a3 >=u a0
      :                          @407
  5632: aa 87 9a 00              jump @425 if a0 == a1
      :                          @408
  5636: 33 0a                    a3 = 0
  5638: c8 76 06                 s1 = s1 + a0
  5641: c9 72 08                 a1 = t0 - a0
  5644: c9 08 08                 a1 = a1 - ra
  5647: 33 0c 0a                 a5 = 0xa
  5650: 82 1b 50                 a4 = u64 [sp + 0x50]
  5653: 01                       fallthrough
      :                          @409
  5654: c8 a6 09                 a2 = s1 + a3
  5657: 7c 99                    a2 = u8 [a2]
  5659: aa c9 0b                 jump @412 if a2 == a5
      :                          @410
  5662: 95 aa 01                 a3 = a3 + 0x1
  5665: ab a8 f5                 jump @409 if a1 != a3
      :                          @411
  5668: 28 2d                    jump @418
      :                          @412
  5670: c8 7a 0a                 a3 = a3 + a0
  5673: 01                       fallthrough
      :                          @413
  5674: c8 0a 0a                 a3 = a3 + ra
  5677: 95 a0 01                 ra = a3 + 0x1
  5680: ae 2a 38 ff              jump @391 if a3 >=u t0
      :                          @414
  5684: 82 17 58                 a0 = u64 [sp + 0x58]
  5687: c8 7a 0a                 a3 = a3 + a0
  5690: 7c a7                    a0 = u8 [a3]
  5692: ab c7 2c ff              jump @391 if a0 != a5
      :                          @415
  5696: 28 61                    jump @426
      :                          @416
  5698: 82 1b 50                 a4 = u64 [sp + 0x50]
  5701: c8 0a 0a                 a3 = a3 + ra
  5704: 95 a0 01                 ra = a3 + 0x1
  5707: ac 2a e9                 jump @414 if a3 <u t0
      :                          @417
  5710: 28 1a ff                 jump @391
      :                          @418
  5713: 64 20                    ra = t0
  5715: 01                       fallthrough
      :                          @419
  5716: 49 11 40 01              u64 [sp + 64] = 0x1
  5720: 64 b5                    s0 = a4
  5722: 64 26                    s1 = t0
  5724: aa 2b 56                 jump @428 if a4 == t0
      :                          @420
  5727: 82 17 48                 a0 = u64 [sp + 0x48]
  5730: 7c 77                    a0 = u8 [a0]
  5732: 51 07 22                 jump @423 if a0 == 0
      :                          @421
  5735: 82 17 30                 a0 = u64 [sp + 0x30]
  5738: 82 7a 18                 a3 = u64 [a0 + 0x18]
  5741: 33 09 04                 a2 = 0x4
  5744: 82 17 38                 a0 = u64 [sp + 0x38]
  5747: 82 18 08                 a1 = u64 [sp + 0x8]
  5750: 7b 10 28                 u64 [sp + 0x28] = ra
  5753: b4 a0 01 6e              ra = 110, jump [a3]
      :                          @422 [@dyn 55]
  5757: 82 1b 50                 a4 = u64 [sp + 0x50]
  5760: 82 10 28                 ra = u64 [sp + 0x28]
  5763: 52 07 33                 jump @429 if a0 != 0
      :                          @423
  5766: c9 b6 09                 a2 = s1 - a4
  5769: 82 18 58                 a1 = u64 [sp + 0x58]
  5772: c8 b8 08                 a1 = a1 + a4
  5775: ab b6 90 fe              jump @385 if s1 != a4
      :                          @424
  5779: 64 06                    s1 = ra
  5781: 33 07                    a0 = 0
  5783: 28 97 fe                 jump @386
      :                          @425
  5786: 64 20                    ra = t0
  5788: 82 1b 50                 a4 = u64 [sp + 0x50]
  5791: 28 b5                    jump @419
      :                          @426
  5793: 49 11 40                 u64 [sp + 64] = 0
  5796: 64 05                    s0 = ra
  5798: 64 06                    s1 = ra
  5800: 82 17 48                 a0 = u64 [sp + 0x48]
  5803: 7c 77                    a0 = u8 [a0]
  5805: 52 07 ba                 jump @421 if a0 != 0
      :                          @427
  5808: 28 d6                    jump @423
      :                          @428
  5810: 33 07                    a0 = 0
  5812: 28 06                    jump @430
      :                          @429
  5814: 33 07 01                 a0 = 0x1
  5817: 01                       fallthrough
      :                          @430
  5818: 82 10 78                 ra = u64 [sp + 0x78]
  5821: 82 15 70                 s0 = u64 [sp + 0x70]
  5824: 82 16 68                 s1 = u64 [sp + 0x68]
  5827: 95 11 80 00              sp = sp + 0x80
  5831: 32 00                    ret
      :                          @431 [@dyn 56]
  5833: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  5836: 7b 10 20                 u64 [sp + 0x20] = ra
  5839: 7b 15 18                 u64 [sp + 0x18] = s0
  5842: 7b 16 10                 u64 [sp + 0x10] = s1
  5845: 82 75 10                 s0 = u64 [a0 + 0x10]
  5848: 7c 59                    a2 = u8 [s0]
  5850: 82 7b                    a4 = u64 [a0]
  5852: 82 76 08                 s1 = u64 [a0 + 0x8]
  5855: 51 09 32                 jump @435 if a2 == 0
      :                          @432
  5858: 82 6a 18                 a3 = u64 [s1 + 0x18]
  5861: 7b 18 08                 u64 [sp + 0x8] = a1
  5864: 33 08 80 01 01           a1 = 0x10180
  5869: 33 09 04                 a2 = 0x4
  5872: 64 b7                    a0 = a4
  5874: 7b 1b                    u64 [sp] = a4
  5876: b4 a0 01 72              ra = 114, jump [a3]
      :                          @433 [@dyn 57]
  5880: 82 18 08                 a1 = u64 [sp + 0x8]
  5883: 82 1b                    a4 = u64 [sp]
  5885: 51 07 14                 jump @435 if a0 == 0
      :                          @434
  5888: 33 07 01                 a0 = 0x1
  5891: 82 10 20                 ra = u64 [sp + 0x20]
  5894: 82 15 18                 s0 = u64 [sp + 0x18]
  5897: 82 16 10                 s1 = u64 [sp + 0x10]
  5900: 95 11 28                 sp = sp + 0x28
  5903: 32 00                    ret
      :                          @435
  5905: 83 87                    i32 a0 = a1 + 0
  5907: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  5910: 88 77 01                 a0 = a0 <u 0x1
  5913: 78 57                    u8 [s0] = a0
  5915: 82 6c 20                 a5 = u64 [s1 + 0x20]
  5918: 64 b7                    a0 = a4
  5920: 82 10 20                 ra = u64 [sp + 0x20]
  5923: 82 15 18                 s0 = u64 [sp + 0x18]
  5926: 82 16 10                 s1 = u64 [sp + 0x10]
  5929: 95 11 28                 sp = sp + 0x28
  5932: 32 0c                    jump [a5]
      :                          @436 [@dyn 58]
  5934: 64 8a                    a3 = a1
  5936: 33 08 50 01 01           a1 = 0x10150
  5941: 64 a9                    a2 = a3
  5943: 28 a2 fb                 jump @345
      :                          @437
  5946: 95 11 70 ff              sp = sp + 0xffffffffffffff70
  5950: 7b 10 88 00              u64 [sp + 0x88] = ra
  5954: 7b 15 80 00              u64 [sp + 0x80] = s0
  5958: 7b 16 78                 u64 [sp + 0x78] = s1
  5961: 64 75                    s0 = a0
  5963: 7c 77 08                 a0 = u8 [a0 + 0x8]
  5966: 64 8b                    a4 = a1
  5968: 33 08 01                 a1 = 0x1
  5971: 33 06 01                 s1 = 0x1
  5974: 51 07 1d                 jump @439 if a0 == 0
      :                          @438
  5977: 78 56 08                 u8 [s0 + 0x8] = s1
  5980: 46 15 09 01              u8 [s0 + 9] = 0x1
  5984: 64 57                    a0 = s0
  5986: 82 10 88 00              ra = u64 [sp + 0x88]
  5990: 82 15 80 00              s0 = u64 [sp + 0x80]
  5994: 82 16 78                 s1 = u64 [sp + 0x78]
  5997: 95 11 90 00              sp = sp + 0x90
  6001: 32 00                    ret
      :                          @439
  6003: 64 9a                    a3 = a2
  6005: 82 5c                    a5 = u64 [s0]
  6007: 80 c7 34                 a0 = u32 [a5 + 0x34]
  6010: 7c 58 09                 a1 = u8 [s0 + 0x9]
  6013: 84 79 04                 a2 = a0 & 0x4
  6016: 52 09 43                 jump @445 if a2 != 0
      :                          @440
  6019: 51 08 31                 jump @443 if a1 == 0
      :                          @441
  6022: 82 c8 28                 a1 = u64 [a5 + 0x28]
  6025: 82 c7 20                 a0 = u64 [a5 + 0x20]
  6028: 82 83 18                 t1 = u64 [a1 + 0x18]
  6031: 33 08 84 01 01           a1 = 0x10184
  6036: 33 09 02                 a2 = 0x2
  6039: 64 a6                    s1 = a3
  6041: 7b 1b 10                 u64 [sp + 0x10] = a4
  6044: 7b 1c 08                 u64 [sp + 0x8] = a5
  6047: b4 30 01 76              ra = 118, jump [t1]
      :                          @442 [@dyn 59]
  6051: 82 1c 08                 a5 = u64 [sp + 0x8]
  6054: 82 1b 10                 a4 = u64 [sp + 0x10]
  6057: 64 6a                    a3 = s1
  6059: 33 08 01                 a1 = 0x1
  6062: 33 06 01                 s1 = 0x1
  6065: 52 07 a8                 jump @438 if a0 != 0
      :                          @443
  6068: 64 b7                    a0 = a4
  6070: 64 c8                    a1 = a5
  6072: b4 a0 01 78              ra = 120, jump [a3]
      :                          @444 [@dyn 60]
  6076: 33 08 01                 a1 = 0x1
  6079: 64 76                    s1 = a0
  6081: 28 98                    jump @438
      :                          @445
  6083: 52 08 36                 jump @449 if a1 != 0
      :                          @446
  6086: 82 c8 28                 a1 = u64 [a5 + 0x28]
  6089: 82 c7 20                 a0 = u64 [a5 + 0x20]
  6092: 82 83 18                 t1 = u64 [a1 + 0x18]
  6095: 33 08 88 01 01           a1 = 0x10188
  6100: 33 09 01                 a2 = 0x1
  6103: 33 06 01                 s1 = 0x1
  6106: 7b 1a                    u64 [sp] = a3
  6108: 7b 1b 10                 u64 [sp + 0x10] = a4
  6111: 7b 1c 08                 u64 [sp + 0x8] = a5
  6114: b4 30 01 7a              ra = 122, jump [t1]
      :                          @447 [@dyn 61]
  6118: 82 1c 08                 a5 = u64 [sp + 0x8]
  6121: 82 1b 10                 a4 = u64 [sp + 0x10]
  6124: 82 1a                    a3 = u64 [sp]
  6126: 33 08 01                 a1 = 0x1
  6129: 52 07 68 ff              jump @438 if a0 != 0
      :                          @448
  6133: 81 c7 34                 a0 = i32 [a5 + 0x34]
  6136: 01                       fallthrough
      :                          @449
  6137: 33 06 01                 s1 = 0x1
  6140: 78 16 37                 u8 [sp + 0x37] = s1
  6143: 82 c8 20                 a1 = u64 [a5 + 0x20]
  6146: 82 c9 28                 a2 = u64 [a5 + 0x28]
  6149: 7b 18 18                 u64 [sp + 0x18] = a1
  6152: 7b 19 20                 u64 [sp + 0x20] = a2
  6155: 95 18 37                 a1 = sp + 0x37
  6158: 7b 18 28                 u64 [sp + 0x28] = a1
  6161: 81 c8 30                 a1 = i32 [a5 + 0x30]
  6164: 7c c9 38                 a2 = u8 [a5 + 0x38]
  6167: 82 c3                    t1 = u64 [a5]
  6169: 82 c4 08                 t2 = u64 [a5 + 0x8]
  6172: 82 c0 10                 ra = u64 [a5 + 0x10]
  6175: 82 c2 18                 t0 = u64 [a5 + 0x18]
  6178: 7a 17 6c                 u32 [sp + 0x6c] = a0
  6181: 7a 18 68                 u32 [sp + 0x68] = a1
  6184: 78 19 70                 u8 [sp + 0x70] = a2
  6187: 7b 13 38                 u64 [sp + 0x38] = t1
  6190: 7b 14 40                 u64 [sp + 0x40] = t2
  6193: 7b 10 48                 u64 [sp + 0x48] = ra
  6196: 7b 12 50                 u64 [sp + 0x50] = t0
  6199: 95 17 18                 a0 = sp + 0x18
  6202: 7b 17 58                 u64 [sp + 0x58] = a0
  6205: 33 07 50 01 01           a0 = 0x10150
  6210: 7b 17 60                 u64 [sp + 0x60] = a0
  6213: 95 18 38                 a1 = sp + 0x38
  6216: 64 b7                    a0 = a4
  6218: b4 a0 01 7c              ra = 124, jump [a3]
      :                          @450 [@dyn 62]
  6222: 52 07 20                 jump @453 if a0 != 0
      :                          @451
  6225: 82 18 60                 a1 = u64 [sp + 0x60]
  6228: 82 17 58                 a0 = u64 [sp + 0x58]
  6231: 82 8a 18                 a3 = u64 [a1 + 0x18]
  6234: 33 08 86 01 01           a1 = 0x10186
  6239: 33 09 02                 a2 = 0x2
  6242: b4 a0 01 7e              ra = 126, jump [a3]
      :                          @452 [@dyn 63]
  6246: 64 76                    s1 = a0
  6248: 33 08 01                 a1 = 0x1
  6251: 28 ee fe                 jump @438
      :                          @453
  6254: 33 08 01                 a1 = 0x1
  6257: 28 e8 fe                 jump @438
      :                          @454
  6260: 51 08 9b 00              jump @475 if a1 == 0
      :                          @455
  6264: 64 79                    a2 = a0
  6266: 7c 77                    a0 = u8 [a0]
  6268: 51 07 91 00              jump @474 if a0 == 0
      :                          @456
  6272: 51 27 ff 00 90 00        jump @476 if a0 == 255
      :                          @457
  6278: 6c 7a                    a3 = sext.b a0
  6280: 57 0a 09                 jump @459 if a3 <s 0
      :                          @458
  6283: 33 0a                    a3 = 0
  6285: 33 08                    a1 = 0
  6287: 28 73                    jump @473
      :                          @459
  6289: 55 27 c0 00 0d           jump @461 if a0 >=u 192
      :                          @460
  6294: 33 0a 01                 a3 = 0x1
  6297: 33 0b 80                 a4 = 0xffffffffffffff80
  6300: 28 4a                    jump @470
      :                          @461
  6302: 55 27 e0 00 0e           jump @463 if a0 >=u 224
      :                          @462
  6307: 33 0a 02                 a3 = 0x2
  6310: 33 0b 40 ff              a4 = 0xffffffffffffff40
  6314: 28 3c                    jump @470
      :                          @463
  6316: 55 27 f0 00 0e           jump @465 if a0 >=u 240
      :                          @464
  6321: 33 0a 03                 a3 = 0x3
  6324: 33 0b 20 ff              a4 = 0xffffffffffffff20
  6328: 28 2e                    jump @470
      :                          @465
  6330: 55 27 f8 00 0e           jump @467 if a0 >=u 248
      :                          @466
  6335: 33 0a 04                 a3 = 0x4
  6338: 33 0b 10 ff              a4 = 0xffffffffffffff10
  6342: 28 20                    jump @470
      :                          @467
  6344: 55 27 fc 00 0e           jump @469 if a0 >=u 252
      :                          @468
  6349: 33 0a 05                 a3 = 0x5
  6352: 33 0b 08 ff              a4 = 0xffffffffffffff08
  6356: 28 12                    jump @470
      :                          @469
  6358: 88 7a fe 00              a3 = a0 <u 0xfe
  6362: 33 0b 04 ff              a4 = 0xffffffffffffff04
  6366: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  6370: 85 aa 07                 a3 = a3 ^ 0x7
  6373: 01                       fallthrough
      :                          @470
  6374: ae 8a 2b                 jump @477 if a3 >=u a1
      :                          @471
  6377: 33 08                    a1 = 0
  6379: c8 b7 07                 a0 = a0 + a4
  6382: 64 ab                    a4 = a3
  6384: 01                       fallthrough
      :                          @472
  6385: c8 b9 0c                 a5 = a2 + a4
  6388: 7c cc                    a5 = u8 [a5]
  6390: 97 88 08                 a1 = a1 << 0x8
  6393: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  6396: d4 c8 08                 a1 = a1 | a5
  6399: 52 0b f2                 jump @472 if a4 != 0
      :                          @473
  6402: 8a a9 03                 i32 a2 = a3 << 0x3
  6405: cf 97 07                 a0 = a0 << a2
  6408: c8 87 07                 a0 = a0 + a1
  6411: 32 00                    ret
      :                          @474
  6413: 32 00                    ret
      :                          @475
  6415: 00                       trap
      :                          @476
  6416: 00                       trap
      :                          @477
  6417: 00                       trap
      :                          @478 [@dyn 64]
  6418: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  6421: 7b 10 28                 u64 [sp + 0x28] = ra
  6424: 7b 15 20                 u64 [sp + 0x20] = s0
  6427: 7b 16 18                 u64 [sp + 0x18] = s1
  6430: 64 86                    s1 = a1
  6432: 82 88 28                 a1 = u64 [a1 + 0x28]
  6435: 82 6a 20                 a3 = u64 [s1 + 0x20]
  6438: 82 8b 18                 a4 = u64 [a1 + 0x18]
  6441: 64 75                    s0 = a0
  6443: 33 08 48 01 01           a1 = 0x10148
  6448: 33 09 01                 a2 = 0x1
  6451: 64 a7                    a0 = a3
  6453: b4 b0 02 82 00           ra = 130, jump [a4]
      :                          @479 [@dyn 65]
  6458: 7b 16                    u64 [sp] = s1
  6460: 78 17 08                 u8 [sp + 0x8] = a0
  6463: 46 11 09                 u8 [sp + 9] = 0
  6466: 7b 15 10                 u64 [sp + 0x10] = s0
  6469: 33 09 88 00              a2 = 0x88
  6473: 64 17                    a0 = sp
  6475: 95 18 10                 a1 = sp + 0x10
  6478: 50 20 84 00 ec fd        ra = 132, jump @437
      :                          @480 [@dyn 66]
  6484: 33 07 01                 a0 = 0x1
  6487: 7c 18 08                 a1 = u8 [sp + 0x8]
  6490: 52 08 1b                 jump @482 if a1 != 0
      :                          @481
  6493: 82 17                    a0 = u64 [sp]
  6495: 82 78 28                 a1 = u64 [a0 + 0x28]
  6498: 82 77 20                 a0 = u64 [a0 + 0x20]
  6501: 82 8a 18                 a3 = u64 [a1 + 0x18]
  6504: 33 08 89 01 01           a1 = 0x10189
  6509: 33 09 01                 a2 = 0x1
  6512: b4 a0 02 86 00           ra = 134, jump [a3]
      :                          @482 [@dyn 67]
  6517: 82 10 28                 ra = u64 [sp + 0x28]
  6520: 82 15 20                 s0 = u64 [sp + 0x20]
  6523: 82 16 18                 s1 = u64 [sp + 0x18]
  6526: 95 11 30                 sp = sp + 0x30
  6529: 32 00                    ret
      :                          @483 [@dyn 68]
  6531: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  6535: 7b 10 80 00              u64 [sp + 0x80] = ra
  6539: 80 89 34                 a2 = u32 [a1 + 0x34]
  6542: 82 77                    a0 = u64 [a0]
  6544: 84 9a 10                 a3 = a2 & 0x10
  6547: 52 0a 16                 jump @486 if a3 != 0
      :                          @484
  6550: 84 99 20                 a2 = a2 & 0x20
  6553: 52 09 41                 jump @489 if a2 != 0
      :                          @485
  6556: 7c 77                    a0 = u8 [a0]
  6558: 82 10 80 00              ra = u64 [sp + 0x80]
  6562: 95 11 88 00              sp = sp + 0x88
  6566: 28 9d f5                 jump @283
      :                          @486
  6569: 7c 77                    a0 = u8 [a0]
  6571: 33 0b 81 00              a4 = 0x81
  6575: 95 19 7f                 a2 = sp + 0x7f
  6578: 33 02 57                 t0 = 0x57
  6581: 01                       fallthrough
      :                          @487
  6582: 64 bc                    a5 = a4
  6584: 84 7b 0f                 a4 = a0 & 0xf
  6587: 97 77 38                 a0 = a0 << 0x38
  6590: 98 77 3c                 a0 = a0 >> 0x3c
  6593: 88 b3 0a                 t1 = a4 <u 0xa
  6596: 33 0a 30                 a3 = 0x30
  6599: da 32 0a                 a3 = t0 if t1 == 0
  6602: be ba 0a                 i32 a3 = a3 + a4
  6605: 78 9a                    u8 [a2] = a3
  6607: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  6610: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
  6613: 52 07 e1                 jump @487 if a0 != 0
      :                          @488
  6616: 28 31                    jump @491
      :                          @489
  6618: 7c 77                    a0 = u8 [a0]
  6620: 33 0b 81 00              a4 = 0x81
  6624: 95 19 7f                 a2 = sp + 0x7f
  6627: 33 02 37                 t0 = 0x37
  6630: 01                       fallthrough
      :                          @490
  6631: 64 bc                    a5 = a4
  6633: 84 7b 0f                 a4 = a0 & 0xf
  6636: 97 77 38                 a0 = a0 << 0x38
  6639: 98 77 3c                 a0 = a0 >> 0x3c
  6642: 88 b3 0a                 t1 = a4 <u 0xa
  6645: 33 0a 30                 a3 = 0x30
  6648: da 32 0a                 a3 = t0 if t1 == 0
  6651: be ba 0a                 i32 a3 = a3 + a4
  6654: 78 9a                    u8 [a2] = a3
  6656: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  6659: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
  6662: 52 07 e1                 jump @490 if a0 != 0
      :                          @491
  6665: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
  6668: 56 27 80 00 28           jump @494 if a0 >u 128
      :                          @492
  6673: 9a bb 81 00              a4 = 0x81 - a4
  6677: 64 1a                    a3 = sp
  6679: c8 7a 0a                 a3 = a3 + a0
  6682: 33 09 02                 a2 = 0x2
  6685: 64 87                    a0 = a1
  6687: 33 08 8a 01 01           a1 = 0x1018a
  6692: 50 20 8a 00 46 f6        ra = 138, jump @293
      :                          @493 [@dyn 69]
  6698: 82 10 80 00              ra = u64 [sp + 0x80]
  6702: 95 11 88 00              sp = sp + 0x88
  6706: 32 00                    ret
      :                          @494
  6708: 00                       trap
