// RO data = 656/656 bytes
// RW data = 16/65616 bytes
// Stack size = 65536 bytes
// RO data = [70, 73, 66, 32, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 58, 32, 116, 105, 109, 101, 115, 108, 111, 116, 61, 32, 115, 101, 114, 118, 105, 99, 101, 95, 105, 110, 100, 101, 120, 61, 32, 115, 101, 110, 100, 101, 114, 61, 32, 97, 109, 111, 117, 110, 116, 61, 32, 114, 101, 99, 101, 105, 118, 101, 114, 61, 32, 109, 101, 109, 111, 61, 32, 103, 97, 115, 95, 108, 105, 109, 105, 116, 61, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 26, 0, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 41, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 57, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 49, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 67, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 73, 0, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 70, 73, 66, 32, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 32, 103, 97, 115, 58, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 52, 41, 0, 0, 0, 200, 0, 1, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 225, 0, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 54, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 56, 0, 0, 0, 0, 0, 0, 0, 62, 0, 0, 0, 0, 0, 0, 0, 70, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 104, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 106, 0, 0, 0, 0, 0, 0, 0, 112, 0, 0, 0, 0, 0, 0, 0, 116, 0, 0, 0, 0, 0, 0, 0, 32, 32, 32, 32, 44, 32, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 119, 114, 105, 116, 101, 95, 114, 101, 115, 117, 108, 116, 32, 107, 101, 121, 61, 44, 32, 114, 101, 115, 117, 108, 116, 61, 0, 0, 84, 2, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 101, 2, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0]
// RW data = [75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 2253
// Code size = 6730 bytes

      :                          @0
     0: 28 ea 01 00 00           jump @34
      :                          @1
     5: 28 55 02 00 00           jump @39
      :                          @2
    10: 28 8b 04                 jump @107
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 80 89 34                 a2 = u32 [a1 + 0x34]
    24: 84 9a 10                 a3 = a2 & 0x10
    27: 52 0a 16                 jump @6 if a3 != 0
      :                          @4
    30: 84 99 20                 a2 = a2 & 0x20
    33: 52 09 40                 jump @9 if a2 != 0
      :                          @5
    36: 80 77                    a0 = u32 [a0]
    38: 82 10 80 00              ra = u64 [sp + 0x80]
    42: 95 11 88 00              sp = sp + 0x88
    46: 28 2a 0f                 jump @283
      :                          @6
    49: 81 7b                    a4 = i32 [a0]
    51: 33 09 81 00              a2 = 0x81
    55: 95 17 7f                 a0 = sp + 0x7f
    58: 33 02 57                 t0 = 0x57
    61: 01                       fallthrough
      :                          @7
    62: 64 9c                    a5 = a2
    64: 8b ba 04                 i32 a3 = a4 >> 0x4
    67: 84 bb 0f                 a4 = a4 & 0xf
    70: 88 b3 0a                 t1 = a4 <u 0xa
    73: 33 09 30                 a2 = 0x30
    76: da 32 09                 a2 = t0 if t1 == 0
    79: be b9 09                 i32 a2 = a2 + a4
    82: 78 79                    u8 [a0] = a2
    84: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
    87: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
    90: 64 ab                    a4 = a3
    92: 52 0a e2                 jump @7 if a3 != 0
      :                          @8
    95: 28 30                    jump @11
      :                          @9
    97: 81 7b                    a4 = i32 [a0]
    99: 33 09 81 00              a2 = 0x81
   103: 95 17 7f                 a0 = sp + 0x7f
   106: 33 02 37                 t0 = 0x37
   109: 01                       fallthrough
      :                          @10
   110: 64 9c                    a5 = a2
   112: 8b ba 04                 i32 a3 = a4 >> 0x4
   115: 84 bb 0f                 a4 = a4 & 0xf
   118: 88 b3 0a                 t1 = a4 <u 0xa
   121: 33 09 30                 a2 = 0x30
   124: da 32 09                 a2 = t0 if t1 == 0
   127: be b9 09                 i32 a2 = a2 + a4
   130: 78 79                    u8 [a0] = a2
   132: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   135: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   138: 64 ab                    a4 = a3
   140: 52 0a e2                 jump @10 if a3 != 0
      :                          @11
   143: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   146: 56 27 80 00 27           jump @14 if a0 >u 128
      :                          @12
   151: 9a 9b 81 00              a4 = 0x81 - a2
   155: 64 1a                    a3 = sp
   157: c8 7a 0a                 a3 = a3 + a0
   160: 33 09 02                 a2 = 0x2
   163: 64 87                    a0 = a1
   165: 33 08 8a 01 01           a1 = 0x1018a
   170: 50 10 04 d5 0f           ra = 4, jump @293
      :                          @13 [@dyn 2]
   175: 82 10 80 00              ra = u64 [sp + 0x80]
   179: 95 11 88 00              sp = sp + 0x88
   183: 32 00                    ret
      :                          @14
   185: 00                       trap
      :                          @15 [@dyn 3]
   186: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   190: 7b 10 80 00              u64 [sp + 0x80] = ra
   194: 80 89 34                 a2 = u32 [a1 + 0x34]
   197: 84 9a 10                 a3 = a2 & 0x10
   200: 52 0a 16                 jump @18 if a3 != 0
      :                          @16
   203: 84 99 20                 a2 = a2 & 0x20
   206: 52 09 40                 jump @21 if a2 != 0
      :                          @17
   209: 82 77                    a0 = u64 [a0]
   211: 82 10 80 00              ra = u64 [sp + 0x80]
   215: 95 11 88 00              sp = sp + 0x88
   219: 28 7d 0e                 jump @283
      :                          @18
   222: 82 7b                    a4 = u64 [a0]
   224: 33 09 81 00              a2 = 0x81
   228: 95 17 7f                 a0 = sp + 0x7f
   231: 33 02 57                 t0 = 0x57
   234: 01                       fallthrough
      :                          @19
   235: 64 9c                    a5 = a2
   237: 98 ba 04                 a3 = a4 >> 0x4
   240: 84 bb 0f                 a4 = a4 & 0xf
   243: 88 b3 0a                 t1 = a4 <u 0xa
   246: 33 09 30                 a2 = 0x30
   249: da 32 09                 a2 = t0 if t1 == 0
   252: be b9 09                 i32 a2 = a2 + a4
   255: 78 79                    u8 [a0] = a2
   257: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   260: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   263: 64 ab                    a4 = a3
   265: 52 0a e2                 jump @19 if a3 != 0
      :                          @20
   268: 28 30                    jump @23
      :                          @21
   270: 82 7b                    a4 = u64 [a0]
   272: 33 09 81 00              a2 = 0x81
   276: 95 17 7f                 a0 = sp + 0x7f
   279: 33 02 37                 t0 = 0x37
   282: 01                       fallthrough
      :                          @22
   283: 64 9c                    a5 = a2
   285: 98 ba 04                 a3 = a4 >> 0x4
   288: 84 bb 0f                 a4 = a4 & 0xf
   291: 88 b3 0a                 t1 = a4 <u 0xa
   294: 33 09 30                 a2 = 0x30
   297: da 32 09                 a2 = t0 if t1 == 0
   300: be b9 09                 i32 a2 = a2 + a4
   303: 78 79                    u8 [a0] = a2
   305: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   308: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   311: 64 ab                    a4 = a3
   313: 52 0a e2                 jump @22 if a3 != 0
      :                          @23
   316: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   319: 56 27 80 00 27           jump @26 if a0 >u 128
      :                          @24
   324: 9a 9b 81 00              a4 = 0x81 - a2
   328: 64 1a                    a3 = sp
   330: c8 7a 0a                 a3 = a3 + a0
   333: 33 09 02                 a2 = 0x2
   336: 64 87                    a0 = a1
   338: 33 08 8a 01 01           a1 = 0x1018a
   343: 50 10 08 28 0f           ra = 8, jump @293
      :                          @25 [@dyn 4]
   348: 82 10 80 00              ra = u64 [sp + 0x80]
   352: 95 11 88 00              sp = sp + 0x88
   356: 32 00                    ret
      :                          @26
   358: 00                       trap
      :                          @27 [@dyn 5]
   359: 95 11 c8                 sp = sp + 0xffffffffffffffc8
   362: 7b 10 30                 u64 [sp + 0x30] = ra
   365: 7b 15 28                 u64 [sp + 0x28] = s0
   368: 7b 16 20                 u64 [sp + 0x20] = s1
   371: 64 86                    s1 = a1
   373: 82 88 28                 a1 = u64 [a1 + 0x28]
   376: 82 6a 20                 a3 = u64 [s1 + 0x20]
   379: 82 8b 18                 a4 = u64 [a1 + 0x18]
   382: 64 75                    s0 = a0
   384: 33 08 48 01 01           a1 = 0x10148
   389: 33 09 01                 a2 = 0x1
   392: 64 a7                    a0 = a3
   394: b4 b0 01 0c              ra = 12, jump [a4]
      :                          @28 [@dyn 6]
   398: 7b 16 08                 u64 [sp + 0x8] = s1
   401: 78 17 10                 u8 [sp + 0x10] = a0
   404: 46 11 11                 u8 [sp + 17] = 0
   407: 33 06 80 00              s1 = 0x80
   411: 33 07 88 00              a0 = 0x88
   415: 7b 17                    u64 [sp] = a0
   417: 01                       fallthrough
      :                          @29
   418: 7b 15 18                 u64 [sp + 0x18] = s0
   421: 95 17 08                 a0 = sp + 0x8
   424: 95 18 18                 a1 = sp + 0x18
   427: 82 19                    a2 = u64 [sp]
   429: 50 10 0e a2 15           ra = 14, jump @437
      :                          @30 [@dyn 7]
   434: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
   437: 95 55 01                 s0 = s0 + 0x1
   440: 52 06 ea                 jump @29 if s1 != 0
      :                          @31
   443: 7c 18 10                 a1 = u8 [sp + 0x10]
   446: 33 07 01                 a0 = 0x1
   449: 52 08 1b                 jump @33 if a1 != 0
      :                          @32
   452: 82 17 08                 a0 = u64 [sp + 0x8]
   455: 82 78 28                 a1 = u64 [a0 + 0x28]
   458: 82 77 20                 a0 = u64 [a0 + 0x20]
   461: 82 8a 18                 a3 = u64 [a1 + 0x18]
   464: 33 08 89 01 01           a1 = 0x10189
   469: 33 09 01                 a2 = 0x1
   472: b4 a0 01 10              ra = 16, jump [a3]
      :                          @33 [@dyn 8]
   476: 82 10 30                 ra = u64 [sp + 0x30]
   479: 82 15 28                 s0 = u64 [sp + 0x28]
   482: 82 16 20                 s1 = u64 [sp + 0x20]
   485: 95 11 38                 sp = sp + 0x38
   488: 32 00                    ret
      :                          @34 [export #0: 'refine']
   490: 95 11 e8                 sp = sp + 0xffffffffffffffe8
   493: 7b 10 10                 u64 [sp + 0x10] = ra
   496: 7b 15 08                 u64 [sp + 0x8] = s0
   499: 7b 16                    u64 [sp] = s1
   501: 33 05 34 00 03           s0 = 0x30034
   506: 33 09 0c                 a2 = 0xc
   509: 33 0a 05                 a3 = 0x5
   512: 33 07 34 00 03           a0 = 0x30034
   517: 33 08                    a1 = 0
   519: 33 0b                    a4 = 0
   521: 33 0c                    a5 = 0
   523: 0a 12                    ecalli 18 // 'fetch'
   525: 01                       fallthrough
      :                          @35
   526: 51 17 ff 1b              jump @37 if a0 == 4294967295
      :                          @36
   530: 39 07 38 00 03           a0 = i32 [0x30038]
   535: 39 08 3c 00 03           a1 = i32 [0x3003c]
   540: 39 09 34 00 03           a2 = i32 [0x30034]
   545: be 78 08                 i32 a1 = a1 + a0
   548: 83 99 01                 i32 a2 = a2 + 0x1
   551: 28 0b                    jump @38
      :                          @37
   553: 33 07                    a0 = 0
   555: 33 09 01                 a2 = 0x1
   558: 33 08 01                 a1 = 0x1
   561: 01                       fallthrough
      :                          @38
   562: 3d 09 34 00 03           u32 [0x30034] = a2
   567: 3d 08 38 00 03           u32 [0x30038] = a1
   572: 3d 07 3c 00 03           u32 [0x3003c] = a0
   577: 33 08 0c                 a1 = 0xc
   580: 64 57                    a0 = s0
   582: 0a 13                    ecalli 19 // 'export'
   584: 33 08 0c                 a1 = 0xc
   587: 64 57                    a0 = s0
   589: 82 10 10                 ra = u64 [sp + 0x10]
   592: 82 15 08                 s0 = u64 [sp + 0x8]
   595: 82 16                    s1 = u64 [sp]
   597: 95 11 18                 sp = sp + 0x18
   600: 32 00                    ret
      :                          @39 [export #1: 'accumulate']
   602: 95 11 d8                 sp = sp + 0xffffffffffffffd8
   605: 7b 10 20                 u64 [sp + 0x20] = ra
   608: 7b 15 18                 u64 [sp + 0x18] = s0
   611: 7b 16 10                 u64 [sp + 0x10] = s1
   614: 33 09 08                 a2 = 0x8
   617: ac 98 6a 01              jump @83 if a1 <u a2
      :                          @40
   621: 51 17 fc 23 02           jump @102 if a0 == 4294967292
      :                          @41
   626: 51 07 1e 02              jump @102 if a0 == 0
      :                          @42
   630: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
   633: 95 75 08                 s0 = a0 + 0x8
   636: 51 0a 45                 jump @52 if a3 == 0
      :                          @43
   639: 7d 58                    a1 = i8 [s0]
   641: 33 06 01                 s1 = 0x1
   644: 59 08 40                 jump @53 if a1 >=s 0
      :                          @44
   647: 84 89 ff 00              a2 = a1 & 0xff
   651: 33 06 02                 s1 = 0x2
   654: 53 29 c0 00 2d           jump @50 if a2 <u 192
      :                          @45
   659: 33 06 03                 s1 = 0x3
   662: 53 29 e0 00 25           jump @50 if a2 <u 224
      :                          @46
   667: 33 06 04                 s1 = 0x4
   670: 53 29 f0 00 1d           jump @50 if a2 <u 240
      :                          @47
   675: 33 06 05                 s1 = 0x5
   678: 53 29 f8 00 15           jump @50 if a2 <u 248
      :                          @48
   683: 33 06 06                 s1 = 0x6
   686: 53 29 fc 00 0d           jump @50 if a2 <u 252
      :                          @49
   691: 88 98 fe 00              a1 = a2 <u 0xfe
   695: 9a 86 08                 s1 = 0x8 - a1
   698: 01                       fallthrough
      :                          @50
   699: ae 6a 09                 jump @53 if a3 >=u s1
      :                          @51
   702: 28 15 01                 jump @83
      :                          @52
   705: 33 06                    s1 = 0
   707: 01                       fallthrough
      :                          @53
   708: 7b 16                    u64 [sp] = s1
   710: 64 57                    a0 = s0
   712: 64 68                    a1 = s1
   714: 64 a6                    s1 = a3
   716: 50 10 12 bd 15           ra = 18, jump @454
      :                          @54 [@dyn 9]
   721: 82 1a                    a3 = u64 [sp]
   723: 51 07 00 01              jump @83 if a0 == 0
      :                          @55
   727: e4 a6 07                 a0 = maxu(s1, a3)
   730: c9 a7 07                 a0 = a0 - a3
   733: 53 17 60 f6 00           jump @83 if a0 <u 96
      :                          @56
   738: c8 5a 08                 a1 = a3 + s0
   741: 95 76 a0                 s1 = a0 + 0xffffffffffffffa0
   744: 95 87 60                 a0 = a1 + 0x60
   747: 7b 17                    u64 [sp] = a0
   749: 51 06 4c                 jump @67 if s1 == 0
      :                          @57
   752: 7d 78                    a1 = i8 [a0]
   754: 33 05 01                 s0 = 0x1
   757: 59 08 37                 jump @64 if a1 >=s 0
      :                          @58
   760: 84 89 ff 00              a2 = a1 & 0xff
   764: 33 05 02                 s0 = 0x2
   767: 53 29 c0 00 2d           jump @64 if a2 <u 192
      :                          @59
   772: 33 05 03                 s0 = 0x3
   775: 53 29 e0 00 25           jump @64 if a2 <u 224
      :                          @60
   780: 33 05 04                 s0 = 0x4
   783: 53 29 f0 00 1d           jump @64 if a2 <u 240
      :                          @61
   788: 33 05 05                 s0 = 0x5
   791: 53 29 f8 00 15           jump @64 if a2 <u 248
      :                          @62
   796: 33 05 06                 s0 = 0x6
   799: 53 29 fc 00 0d           jump @64 if a2 <u 252
      :                          @63
   804: 88 98 fe 00              a1 = a2 <u 0xfe
   808: 9a 85 08                 s0 = 0x8 - a1
   811: 01                       fallthrough
      :                          @64
   812: ac 56 65 01              jump @103 if s1 <u s0
      :                          @65
   816: 64 58                    a1 = s0
   818: 50 10 14 57 15           ra = 20, jump @454
      :                          @66 [@dyn 10]
   823: 28 07                    jump @68
      :                          @67
   825: 33 05                    s0 = 0
   827: 33 07                    a0 = 0
   829: 01                       fallthrough
      :                          @68
   830: e4 56 08                 a1 = maxu(s1, s0)
   833: c9 58 08                 a1 = a1 - s0
   836: e4 78 08                 a1 = maxu(a1, a0)
   839: c9 78 08                 a1 = a1 - a0
   842: 33 09 20                 a2 = 0x20
   845: ac 98 86 00              jump @83 if a1 <u a2
      :                          @69
   849: 82 19                    a2 = u64 [sp]
   851: c8 95 05                 s0 = s0 + a2
   854: c8 57 07                 a0 = a0 + s0
   857: 95 85 e0                 s0 = a1 + 0xffffffffffffffe0
   860: 95 77 20                 a0 = a0 + 0x20
   863: 7b 17                    u64 [sp] = a0
   865: 51 05 6d                 jump @82 if s0 == 0
      :                          @70
   868: 7d 78                    a1 = i8 [a0]
   870: 33 06 01                 s1 = 0x1
   873: 59 08 37                 jump @77 if a1 >=s 0
      :                          @71
   876: 84 89 ff 00              a2 = a1 & 0xff
   880: 33 06 02                 s1 = 0x2
   883: 53 29 c0 00 2d           jump @77 if a2 <u 192
      :                          @72
   888: 33 06 03                 s1 = 0x3
   891: 53 29 e0 00 25           jump @77 if a2 <u 224
      :                          @73
   896: 33 06 04                 s1 = 0x4
   899: 53 29 f0 00 1d           jump @77 if a2 <u 240
      :                          @74
   904: 33 06 05                 s1 = 0x5
   907: 53 29 f8 00 15           jump @77 if a2 <u 248
      :                          @75
   912: 33 06 06                 s1 = 0x6
   915: 53 29 fc 00 0d           jump @77 if a2 <u 252
      :                          @76
   920: 88 98 fe 00              a1 = a2 <u 0xfe
   924: 9a 86 08                 s1 = 0x8 - a1
   927: 01                       fallthrough
      :                          @77
   928: ac 65 f2 00              jump @104 if s0 <u s1
      :                          @78
   932: 64 68                    a1 = s1
   934: 50 10 16 e3 14           ra = 22, jump @454
      :                          @79 [@dyn 11]
   939: ae 56 28                 jump @83 if s1 >=u s0
      :                          @80
   942: 82 17                    a0 = u64 [sp]
   944: c8 67 07                 a0 = a0 + s1
   947: 7c 78                    a1 = u8 [a0]
   949: 51 08 36                 jump @85 if a1 == 0
      :                          @81
   952: 46 11 0e                 u8 [sp + 14] = 0
   955: 95 17 0e                 a0 = sp + 0xe
   958: 33 08 01                 a1 = 0x1
   961: 33 09                    a2 = 0
   963: 33 0a                    a3 = 0
   965: 0a 03                    ecalli 3 // 'write'
   967: 33 08                    a1 = 0
   969: 33 05                    s0 = 0
   971: 28 ae 00                 jump @100
      :                          @82
   974: 33 06                    s1 = 0
   976: 56 05 de                 jump @80 if s0 >u 0
      :                          @83
   979: 33 08                    a1 = 0
   981: 33 06 00 00 01           s1 = 0x10000
   986: 01                       fallthrough
      :                          @84
   987: 64 67                    a0 = s1
   989: 82 10 20                 ra = u64 [sp + 0x20]
   992: 82 15 18                 s0 = u64 [sp + 0x18]
   995: 82 16 10                 s1 = u64 [sp + 0x10]
   998: 95 11 28                 sp = sp + 0x28
  1001: 32 00                    ret
      :                          @85
  1003: e4 65 08                 a1 = maxu(s0, s1)
  1006: c9 68 08                 a1 = a1 - s1
  1009: 95 76 01                 s1 = a0 + 0x1
  1012: 33 07 01                 a0 = 0x1
  1015: e4 78 07                 a0 = maxu(a1, a0)
  1018: 33 09 02                 a2 = 0x2
  1021: 95 7a ff                 a3 = a0 + 0xffffffffffffffff
  1024: ae 98 09                 jump @87 if a1 >=u a2
      :                          @86
  1027: 33 05                    s0 = 0
  1029: 33 07                    a0 = 0
  1031: 28 4f                    jump @97
      :                          @87
  1033: 7d 67                    a0 = i8 [s1]
  1035: 33 05 01                 s0 = 0x1
  1038: 59 07 37                 jump @94 if a0 >=s 0
      :                          @88
  1041: 84 77 ff 00              a0 = a0 & 0xff
  1045: 33 05 02                 s0 = 0x2
  1048: 53 27 c0 00 2d           jump @94 if a0 <u 192
      :                          @89
  1053: 33 05 03                 s0 = 0x3
  1056: 53 27 e0 00 25           jump @94 if a0 <u 224
      :                          @90
  1061: 33 05 04                 s0 = 0x4
  1064: 53 27 f0 00 1d           jump @94 if a0 <u 240
      :                          @91
  1069: 33 05 05                 s0 = 0x5
  1072: 53 27 f8 00 15           jump @94 if a0 <u 248
      :                          @92
  1077: 33 05 06                 s0 = 0x6
  1080: 53 27 fc 00 0d           jump @94 if a0 <u 252
      :                          @93
  1085: 88 77 fe 00              a0 = a0 <u 0xfe
  1089: 9a 75 08                 s0 = 0x8 - a0
  1092: 01                       fallthrough
      :                          @94
  1093: 7b 1a                    u64 [sp] = a3
  1095: ac 5a 4d                 jump @106 if a3 <u s0
      :                          @95
  1098: 64 67                    a0 = s1
  1100: 64 58                    a1 = s0
  1102: 50 10 18 3b 14           ra = 24, jump @454
      :                          @96 [@dyn 12]
  1107: 82 1a                    a3 = u64 [sp]
  1109: 01                       fallthrough
      :                          @97
  1110: c8 56 09                 a2 = s1 + s0
  1113: e4 5a 08                 a1 = maxu(a3, s0)
  1116: c9 58 08                 a1 = a1 - s0
  1119: e6 78 05                 s0 = minu(a1, a0)
  1122: 46 11 0e                 u8 [sp + 14] = 0
  1125: 95 17 0e                 a0 = sp + 0xe
  1128: 33 08 01                 a1 = 0x1
  1131: 64 96                    s1 = a2
  1133: 64 5a                    a3 = s0
  1135: 0a 03                    ecalli 3 // 'write'
  1137: 01                       fallthrough
      :                          @98
  1138: 55 15 21 21              jump @105 if s0 >=u 33
      :                          @99
  1142: 64 68                    a1 = s1
  1144: 01                       fallthrough
      :                          @100
  1145: 33 06 11 00 03           s1 = 0x30011
  1150: 33 07 11 00 03           a0 = 0x30011
  1155: 64 59                    a2 = s0
  1157: 50 10 1a 1d 0a           ra = 26, jump @263
      :                          @101 [@dyn 13]
  1162: 33 08 20                 a1 = 0x20
  1165: 28 4e ff                 jump @84
      :                          @102
  1168: 00                       trap
      :                          @103
  1169: 00                       trap
      :                          @104
  1170: 00                       trap
      :                          @105
  1171: 00                       trap
      :                          @106
  1172: 00                       trap
      :                          @107 [export #2: 'on_transfer']
  1173: 95 11 70 fd              sp = sp + 0xfffffffffffffd70
  1177: 7b 10 88 02              u64 [sp + 0x288] = ra
  1181: 7b 15 80 02              u64 [sp + 0x280] = s0
  1185: 7b 16 78 02              u64 [sp + 0x278] = s1
  1189: 64 8c                    a5 = a1
  1191: 64 79                    a2 = a0
  1193: 33 02                    t0 = 0
  1195: 95 7b 04                 a4 = a0 + 0x4
  1198: 33 07 02                 a0 = 0x2
  1201: 7b 17 28                 u64 [sp + 0x28] = a0
  1204: 33 07 06                 a0 = 0x6
  1207: 7b 17 58                 u64 [sp + 0x58] = a0
  1210: 33 07 0a                 a0 = 0xa
  1213: 7b 17 20                 u64 [sp + 0x20] = a0
  1216: 33 07 58 00 01           a0 = 0x10058
  1221: 7b 17 18                 u64 [sp + 0x18] = a0
  1224: 33 07 80 00              a0 = 0x80
  1228: 7b 17 10                 u64 [sp + 0x10] = a0
  1231: 33 07 70 02 01           a0 = 0x10270
  1236: 7b 17 08                 u64 [sp + 0x8] = a0
  1239: 33 07 40 00 03           a0 = 0x30040
  1244: 95 77 00 00 01           a0 = a0 + 0x10000
  1249: 7b 17 50                 u64 [sp + 0x50] = a0
  1252: 33 07 f8 00 01           a0 = 0x100f8
  1257: 7b 17                    u64 [sp] = a0
  1259: 95 97 08                 a0 = a2 + 0x8
  1262: 95 ca f8                 a3 = a5 + 0xfffffffffffffff8
  1265: 95 98 0c                 a1 = a2 + 0xc
  1268: 7b 18 60                 u64 [sp + 0x60] = a1
  1271: 33 08 08                 a1 = 0x8
  1274: 33 06 ff ff fe           s1 = 0xfffffffffffeffff
  1279: 7b 16 48                 u64 [sp + 0x48] = s1
  1282: 7b 17 c0 00              u64 [sp + 0xc0] = a0
  1286: 7b 17 b8 00              u64 [sp + 0xb8] = a0
  1290: 7b 1c 40                 u64 [sp + 0x40] = a5
  1293: 7b 19 38                 u64 [sp + 0x38] = a2
  1296: 7b 1b 30                 u64 [sp + 0x30] = a4
  1299: 7b 1a a8 00              u64 [sp + 0xa8] = a3
  1303: ac 8c c0 04              jump @155 if a5 <u a1
      :                          @108
  1307: 51 09 d5 04              jump @156 if a2 == 0
      :                          @109
  1311: 51 0b d1 04              jump @156 if a4 == 0
      :                          @110
  1315: 7c 97                    a0 = u8 [a2]
  1317: 7b 17 78                 u64 [sp + 0x78] = a0
  1320: 7c 97 01                 a0 = u8 [a2 + 0x1]
  1323: 7b 17 68                 u64 [sp + 0x68] = a0
  1326: 7c 97 02                 a0 = u8 [a2 + 0x2]
  1329: 7b 17 70                 u64 [sp + 0x70] = a0
  1332: 7c 97 03                 a0 = u8 [a2 + 0x3]
  1335: 7b 17 80 00              u64 [sp + 0x80] = a0
  1339: 7c b7                    a0 = u8 [a4]
  1341: 7b 17 98 00              u64 [sp + 0x98] = a0
  1345: 7c b7 01                 a0 = u8 [a4 + 0x1]
  1348: 7b 17 88 00              u64 [sp + 0x88] = a0
  1352: 7c b7 02                 a0 = u8 [a4 + 0x2]
  1355: 7b 17 90 00              u64 [sp + 0x90] = a0
  1359: 7c b7 03                 a0 = u8 [a4 + 0x3]
  1362: 7b 17 a0 00              u64 [sp + 0xa0] = a0
  1366: 51 0a 53                 jump @120 if a3 == 0
      :                          @111
  1369: 82 17 c0 00              a0 = u64 [sp + 0xc0]
  1373: 7d 77                    a0 = i8 [a0]
  1375: 33 05 01                 s0 = 0x1
  1378: 59 07 4a                 jump @121 if a0 >=s 0
      :                          @112
  1381: 84 77 ff 00              a0 = a0 & 0xff
  1385: 33 05 02                 s0 = 0x2
  1388: 33 06 c0 00              s1 = 0xc0
  1392: ac 67 33                 jump @118 if a0 <u s1
      :                          @113
  1395: 33 05 03                 s0 = 0x3
  1398: 33 06 e0 00              s1 = 0xe0
  1402: ac 67 29                 jump @118 if a0 <u s1
      :                          @114
  1405: 33 05 04                 s0 = 0x4
  1408: 33 06 f0 00              s1 = 0xf0
  1412: ac 67 1f                 jump @118 if a0 <u s1
      :                          @115
  1415: 33 05 05                 s0 = 0x5
  1418: 33 06 f8 00              s1 = 0xf8
  1422: ac 67 15                 jump @118 if a0 <u s1
      :                          @116
  1425: 33 05 06                 s0 = 0x6
  1428: 33 06 fc 00              s1 = 0xfc
  1432: ac 67 0b                 jump @118 if a0 <u s1
      :                          @117
  1435: 88 77 fe 00              a0 = a0 <u 0xfe
  1439: 9a 75 08                 s0 = 0x8 - a0
  1442: 01                       fallthrough
      :                          @118
  1443: ae 5a 09                 jump @121 if a3 >=u s0
      :                          @119
  1446: 28 31 04                 jump @155
      :                          @120
  1449: 33 05                    s0 = 0
  1451: 01                       fallthrough
      :                          @121
  1452: 82 17 c0 00              a0 = u64 [sp + 0xc0]
  1456: 64 58                    a1 = s0
  1458: 7b 12 b0 00              u64 [sp + 0xb0] = t0
  1462: 50 10 1c d3 12           ra = 28, jump @454
      :                          @122 [@dyn 14]
  1467: 33 03 98 00              t1 = 0x98
  1471: 33 02 04                 t0 = 0x4
  1474: 33 06 08                 s1 = 0x8
  1477: 82 1c a8 00              a5 = u64 [sp + 0xa8]
  1481: 82 1b b0 00              a4 = u64 [sp + 0xb0]
  1485: ae 7b 0a 04              jump @155 if a4 >=u a0
      :                          @123
  1489: 82 18 68                 a1 = u64 [sp + 0x68]
  1492: 97 88 08                 a1 = a1 << 0x8
  1495: 82 19 78                 a2 = u64 [sp + 0x78]
  1498: d4 98 08                 a1 = a1 | a2
  1501: 82 19 70                 a2 = u64 [sp + 0x70]
  1504: 97 99 10                 a2 = a2 << 0x10
  1507: 82 1a 80 00              a3 = u64 [sp + 0x80]
  1511: 97 aa 18                 a3 = a3 << 0x18
  1514: d4 a9 09                 a2 = a2 | a3
  1517: d4 89 04                 t2 = a2 | a1
  1520: 82 18 88 00              a1 = u64 [sp + 0x88]
  1524: 97 88 08                 a1 = a1 << 0x8
  1527: 82 19 98 00              a2 = u64 [sp + 0x98]
  1531: d4 98 08                 a1 = a1 | a2
  1534: 82 19 90 00              a2 = u64 [sp + 0x90]
  1538: 97 99 10                 a2 = a2 << 0x10
  1541: 82 1a a0 00              a3 = u64 [sp + 0xa0]
  1545: 97 aa 18                 a3 = a3 << 0x18
  1548: d4 a9 09                 a2 = a2 | a3
  1551: d4 89 00                 ra = a2 | a1
  1554: e4 5c 08                 a1 = maxu(a5, s0)
  1557: c9 58 08                 a1 = a1 - s0
  1560: 82 19 b8 00              a2 = u64 [sp + 0xb8]
  1564: c8 59 09                 a2 = a2 + s0
  1567: 82 1a 60                 a3 = u64 [sp + 0x60]
  1570: c8 a5 05                 s0 = s0 + a3
  1573: 64 ba                    a3 = a4
  1575: 01                       fallthrough
      :                          @124
  1576: ac 68 af 03              jump @155 if a1 <u s1
      :                          @125
  1580: aa 25 c4 03              jump @156 if s0 == t0
      :                          @126
  1584: 51 05 c0 03              jump @156 if s0 == 0
      :                          @127
  1588: ac 38 a3 03              jump @155 if a1 <u t1
      :                          @128
  1592: 51 0a 17                 jump @131 if a3 == 0
      :                          @129
  1595: 95 88 68 ff              a1 = a1 + 0xffffffffffffff68
  1599: 95 55 98 00              s0 = s0 + 0x98
  1603: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  1606: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1609: 52 07 df                 jump @124 if a0 != 0
      :                          @130
  1612: 28 8b 03                 jump @155
      :                          @131
  1615: 7c 97 01                 a0 = u8 [a2 + 0x1]
  1618: 7c 98                    a1 = u8 [a2]
  1620: 7c 9a 02                 a3 = u8 [a2 + 0x2]
  1623: 7d 9b 03                 a4 = i8 [a2 + 0x3]
  1626: 8a 77 08                 i32 a0 = a0 << 0x8
  1629: d4 87 07                 a0 = a0 | a1
  1632: 8a a8 10                 i32 a1 = a3 << 0x10
  1635: 8a ba 18                 i32 a3 = a4 << 0x18
  1638: d4 a8 08                 a1 = a1 | a3
  1641: d4 87 07                 a0 = a0 | a1
  1644: 7b 17 a0 00              u64 [sp + 0xa0] = a0
  1648: 7c 57 01                 a0 = u8 [s0 + 0x1]
  1651: 7c 58                    a1 = u8 [s0]
  1653: 7c 5a 02                 a3 = u8 [s0 + 0x2]
  1656: 7d 5b 03                 a4 = i8 [s0 + 0x3]
  1659: 8a 77 08                 i32 a0 = a0 << 0x8
  1662: d4 87 07                 a0 = a0 | a1
  1665: 8a a8 10                 i32 a1 = a3 << 0x10
  1668: 8a ba 18                 i32 a3 = a4 << 0x18
  1671: d4 a8 08                 a1 = a1 | a3
  1674: 7c 9a 0f                 a3 = u8 [a2 + 0xf]
  1677: 7c 9b 0e                 a4 = u8 [a2 + 0xe]
  1680: d4 87 07                 a0 = a0 | a1
  1683: 7b 17 98 00              u64 [sp + 0x98] = a0
  1687: 7c 97 0d                 a0 = u8 [a2 + 0xd]
  1690: 97 aa 10                 a3 = a3 << 0x10
  1693: 97 bb 08                 a4 = a4 << 0x8
  1696: d4 ba 0a                 a3 = a3 | a4
  1699: 7c 98 0c                 a1 = u8 [a2 + 0xc]
  1702: 7c 9b 0b                 a4 = u8 [a2 + 0xb]
  1705: d4 a7 07                 a0 = a0 | a3
  1708: 97 77 10                 a0 = a0 << 0x10
  1711: 97 88 08                 a1 = a1 << 0x8
  1714: d4 b8 08                 a1 = a1 | a4
  1717: 7c 9a 0a                 a3 = u8 [a2 + 0xa]
  1720: 7c 9b 09                 a4 = u8 [a2 + 0x9]
  1723: d4 87 07                 a0 = a0 | a1
  1726: 97 77 10                 a0 = a0 << 0x10
  1729: 97 aa 08                 a3 = a3 << 0x8
  1732: d4 ba 0a                 a3 = a3 | a4
  1735: d4 a7 07                 a0 = a0 | a3
  1738: 7c 98 08                 a1 = u8 [a2 + 0x8]
  1741: 97 77 08                 a0 = a0 << 0x8
  1744: 7c 9a 97 00              a3 = u8 [a2 + 0x97]
  1748: 7c 9b 96 00              a4 = u8 [a2 + 0x96]
  1752: d4 87 07                 a0 = a0 | a1
  1755: 7b 17 90 00              u64 [sp + 0x90] = a0
  1759: 7c 97 95 00              a0 = u8 [a2 + 0x95]
  1763: 97 aa 10                 a3 = a3 << 0x10
  1766: 97 bb 08                 a4 = a4 << 0x8
  1769: d4 ba 0a                 a3 = a3 | a4
  1772: d4 a7 07                 a0 = a0 | a3
  1775: 7c 9a 94 00              a3 = u8 [a2 + 0x94]
  1779: 7c 9b 93 00              a4 = u8 [a2 + 0x93]
  1783: 95 98 10                 a1 = a2 + 0x10
  1786: 97 77 10                 a0 = a0 << 0x10
  1789: 97 aa 08                 a3 = a3 << 0x8
  1792: d4 ba 0a                 a3 = a3 | a4
  1795: 7c 9b 92 00              a4 = u8 [a2 + 0x92]
  1799: d4 a7 07                 a0 = a0 | a3
  1802: 7c 9a 91 00              a3 = u8 [a2 + 0x91]
  1806: 97 77 10                 a0 = a0 << 0x10
  1809: 97 bb 08                 a4 = a4 << 0x8
  1812: 7c 99 90 00              a2 = u8 [a2 + 0x90]
  1816: d4 ba 0a                 a3 = a3 | a4
  1819: d4 a7 07                 a0 = a0 | a3
  1822: 97 77 08                 a0 = a0 << 0x8
  1825: d4 97 07                 a0 = a0 | a2
  1828: 7b 17 88 00              u64 [sp + 0x88] = a0
  1832: 95 17 68 01              a0 = sp + 0x168
  1836: 33 09 80 00              a2 = 0x80
  1840: 64 45                    s0 = t2
  1842: 64 06                    s1 = ra
  1844: 50 10 1e 6e 07           ra = 30, jump @263
      :                          @132 [@dyn 15]
  1849: 95 17 e0 00              a0 = sp + 0xe0
  1853: 95 18 68 01              a1 = sp + 0x168
  1857: 33 09 80 00              a2 = 0x80
  1861: 50 10 20 5d 07           ra = 32, jump @263
      :                          @133 [@dyn 16]
  1866: 7a 15 c8 00              u32 [sp + 0xc8] = s0
  1870: 7a 16 cc 00              u32 [sp + 0xcc] = s1
  1874: 82 17 a0 00              a0 = u64 [sp + 0xa0]
  1878: 7a 17 d0 00              u32 [sp + 0xd0] = a0
  1882: 82 17 98 00              a0 = u64 [sp + 0x98]
  1886: 7a 17 d4 00              u32 [sp + 0xd4] = a0
  1890: 82 17 90 00              a0 = u64 [sp + 0x90]
  1894: 7b 17 d8 00              u64 [sp + 0xd8] = a0
  1898: 82 17 88 00              a0 = u64 [sp + 0x88]
  1902: 7b 17 60 01              u64 [sp + 0x160] = a0
  1906: 95 17 c8 00              a0 = sp + 0xc8
  1910: 7b 17 68 01              u64 [sp + 0x168] = a0
  1914: 82 17 28                 a0 = u64 [sp + 0x28]
  1917: 7b 17 70 01              u64 [sp + 0x170] = a0
  1921: 95 18 cc 00              a1 = sp + 0xcc
  1925: 7b 18 78 01              u64 [sp + 0x178] = a1
  1929: 7b 17 80 01              u64 [sp + 0x180] = a0
  1933: 95 18 d0 00              a1 = sp + 0xd0
  1937: 7b 18 88 01              u64 [sp + 0x188] = a1
  1941: 7b 17 90 01              u64 [sp + 0x190] = a0
  1945: 95 18 d4 00              a1 = sp + 0xd4
  1949: 7b 18 98 01              u64 [sp + 0x198] = a1
  1953: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  1957: 95 17 d8 00              a0 = sp + 0xd8
  1961: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  1965: 82 17 58                 a0 = u64 [sp + 0x58]
  1968: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  1972: 95 18 e0 00              a1 = sp + 0xe0
  1976: 7b 18 b8 01              u64 [sp + 0x1b8] = a1
  1980: 82 18 20                 a1 = u64 [sp + 0x20]
  1983: 7b 18 c0 01              u64 [sp + 0x1c0] = a1
  1987: 95 18 60 01              a1 = sp + 0x160
  1991: 7b 18 c8 01              u64 [sp + 0x1c8] = a1
  1995: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
  1999: 82 17 18                 a0 = u64 [sp + 0x18]
  2002: 7b 17 28 02              u64 [sp + 0x228] = a0
  2006: 49 21 30 02 07           u64 [sp + 560] = 0x7
  2011: 49 21 48 02              u64 [sp + 584] = 0
  2015: 95 17 68 01              a0 = sp + 0x168
  2019: 7b 17 38 02              u64 [sp + 0x238] = a0
  2023: 49 21 40 02 07           u64 [sp + 576] = 0x7
  2028: 95 17 58 02              a0 = sp + 0x258
  2032: 95 18 28 02              a1 = sp + 0x228
  2036: 50 10 22 3a 04           ra = 34, jump @213
      :                          @134 [@dyn 17]
  2041: 82 15 60 02              s0 = u64 [sp + 0x260]
  2045: 82 1b 68 02              a4 = u64 [sp + 0x268]
  2049: 82 16 58 02              s1 = u64 [sp + 0x258]
  2053: 33 07 02                 a0 = 0x2
  2056: 33 08                    a1 = 0
  2058: 33 09                    a2 = 0
  2060: 64 5a                    a3 = s0
  2062: 33 00 24                 ra = 0x24
  2065: 0a 64                    ecalli 100 // 'log'
  2067: 01                       fallthrough
      :                          @135 [@dyn 18]
  2068: 82 17 48                 a0 = u64 [sp + 0x48]
  2071: c8 67 07                 a0 = a0 + s1
  2074: 82 1b 50                 a4 = u64 [sp + 0x50]
  2077: 53 37 00 00 ff 1a        jump @140 if a0 <u 4294901760
      :                          @136
  2083: 82 b7                    a0 = u64 [a4]
  2085: c9 7b 08                 a1 = a4 - a0
  2088: ab 58 0f                 jump @140 if a1 != s0
      :                          @137
  2091: c9 67 08                 a1 = a0 - s1
  2094: 01                       fallthrough
      :                          @138
  2095: 82 b9                    a2 = u64 [a4]
  2097: ab 79 f2                 jump @136 if a2 != a0
      :                          @139
  2100: 7b b8                    u64 [a4] = a1
  2102: 01                       fallthrough
      :                          @140
  2103: 81 17 cc 00              a0 = i32 [sp + 0xcc]
  2107: 7a 17 ec 01              u32 [sp + 0x1ec] = a0
  2111: 95 17 ec 01              a0 = sp + 0x1ec
  2115: 33 08 04                 a1 = 0x4
  2118: 95 19 e0 00              a2 = sp + 0xe0
  2122: 33 0a 80 00              a3 = 0x80
  2126: 0a 03                    ecalli 3 // 'write'
  2128: 0a                       ecalli 0 // 'gas'
  2129: 7b 17 f0 01              u64 [sp + 0x1f0] = a0
  2133: 7b 17 f8 01              u64 [sp + 0x1f8] = a0
  2137: 46 21 07 02 04           u8 [sp + 519] = 0x4
  2142: 7b 17 08 02              u64 [sp + 0x208] = a0
  2146: 95 17 07 02              a0 = sp + 0x207
  2150: 33 08 01                 a1 = 0x1
  2153: 95 19 08 02              a2 = sp + 0x208
  2157: 33 0a 08                 a3 = 0x8
  2160: 0a 03                    ecalli 3 // 'write'
  2162: 49 21 68 01 02           u64 [sp + 360] = 0x2
  2167: 49 21 78 01 02           u64 [sp + 376] = 0x2
  2172: 49 21 88 01              u64 [sp + 392] = 0
  2176: 14 07 20 00 00 00 10 00 00 00 a0 = 0x1000000020
  2186: 7b 17 90 01              u64 [sp + 0x190] = a0
  2190: 46 21 98 01 03           u8 [sp + 408] = 0x3
  2195: 49 21 a0 01 02           u64 [sp + 416] = 0x2
  2200: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  2205: 49 21 c0 01 01           u64 [sp + 448] = 0x1
  2210: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
  2214: 95 17 07 02              a0 = sp + 0x207
  2218: 7b 17 58 02              u64 [sp + 0x258] = a0
  2222: 82 17 10                 a0 = u64 [sp + 0x10]
  2225: 7b 17 60 02              u64 [sp + 0x260] = a0
  2229: 95 17 f8 01              a0 = sp + 0x1f8
  2233: 7b 17 68 02              u64 [sp + 0x268] = a0
  2237: 82 17 58                 a0 = u64 [sp + 0x58]
  2240: 7b 17 70 02              u64 [sp + 0x270] = a0
  2244: 46 21 d0 01 03           u8 [sp + 464] = 0x3
  2249: 82 17 08                 a0 = u64 [sp + 0x8]
  2252: 7b 17 28 02              u64 [sp + 0x228] = a0
  2256: 49 21 30 02 02           u64 [sp + 560] = 0x2
  2261: 95 17 68 01              a0 = sp + 0x168
  2265: 7b 17 48 02              u64 [sp + 0x248] = a0
  2269: 49 21 50 02 02           u64 [sp + 592] = 0x2
  2274: 95 17 58 02              a0 = sp + 0x258
  2278: 7b 17 38 02              u64 [sp + 0x238] = a0
  2282: 49 21 40 02 02           u64 [sp + 576] = 0x2
  2287: 95 17 10 02              a0 = sp + 0x210
  2291: 95 18 28 02              a1 = sp + 0x228
  2295: 50 10 26 37 03           ra = 38, jump @213
      :                          @141 [@dyn 19]
  2300: 82 15 18 02              s0 = u64 [sp + 0x218]
  2304: 82 1b 20 02              a4 = u64 [sp + 0x220]
  2308: 82 16 10 02              s1 = u64 [sp + 0x210]
  2312: 33 07 02                 a0 = 0x2
  2315: 33 08                    a1 = 0
  2317: 33 09                    a2 = 0
  2319: 64 5a                    a3 = s0
  2321: 33 00 28                 ra = 0x28
  2324: 0a 64                    ecalli 100 // 'log'
  2326: 01                       fallthrough
      :                          @142 [@dyn 20]
  2327: 82 1b 50                 a4 = u64 [sp + 0x50]
  2330: 82 17 48                 a0 = u64 [sp + 0x48]
  2333: c8 67 07                 a0 = a0 + s1
  2336: 53 37 00 00 ff 1a        jump @147 if a0 <u 4294901760
      :                          @143
  2342: 82 b7                    a0 = u64 [a4]
  2344: c9 7b 08                 a1 = a4 - a0
  2347: ab 58 0f                 jump @147 if a1 != s0
      :                          @144
  2350: c9 67 08                 a1 = a0 - s1
  2353: 01                       fallthrough
      :                          @145
  2354: 82 b9                    a2 = u64 [a4]
  2356: ab 79 f2                 jump @143 if a2 != a0
      :                          @146
  2359: 7b b8                    u64 [a4] = a1
  2361: 01                       fallthrough
      :                          @147
  2362: 95 17 f0 01              a0 = sp + 0x1f0
  2366: 7b 17 58 02              u64 [sp + 0x258] = a0
  2370: 82 17 58                 a0 = u64 [sp + 0x58]
  2373: 7b 17 60 02              u64 [sp + 0x260] = a0
  2377: 82 17                    a0 = u64 [sp]
  2379: 7b 17 68 01              u64 [sp + 0x168] = a0
  2383: 49 21 70 01 02           u64 [sp + 368] = 0x2
  2388: 49 21 88 01              u64 [sp + 392] = 0
  2392: 95 17 58 02              a0 = sp + 0x258
  2396: 7b 17 78 01              u64 [sp + 0x178] = a0
  2400: 49 21 80 01 01           u64 [sp + 384] = 0x1
  2405: 95 17 28 02              a0 = sp + 0x228
  2409: 95 18 68 01              a1 = sp + 0x168
  2413: 50 10 2a c1 02           ra = 42, jump @213
      :                          @148 [@dyn 21]
  2418: 82 15 30 02              s0 = u64 [sp + 0x230]
  2422: 82 1b 38 02              a4 = u64 [sp + 0x238]
  2426: 82 16 28 02              s1 = u64 [sp + 0x228]
  2430: 33 07 02                 a0 = 0x2
  2433: 33 08                    a1 = 0
  2435: 33 09                    a2 = 0
  2437: 64 5a                    a3 = s0
  2439: 33 00 2c                 ra = 0x2c
  2442: 0a 64                    ecalli 100 // 'log'
  2444: 01                       fallthrough
      :                          @149 [@dyn 22]
  2445: 82 1b 50                 a4 = u64 [sp + 0x50]
  2448: 82 17 48                 a0 = u64 [sp + 0x48]
  2451: c8 67 07                 a0 = a0 + s1
  2454: 53 37 00 00 ff 1a        jump @154 if a0 <u 4294901760
      :                          @150
  2460: 82 b7                    a0 = u64 [a4]
  2462: c9 7b 08                 a1 = a4 - a0
  2465: ab 58 0f                 jump @154 if a1 != s0
      :                          @151
  2468: c9 67 08                 a1 = a0 - s1
  2471: 01                       fallthrough
      :                          @152
  2472: 82 b9                    a2 = u64 [a4]
  2474: ab 79 f2                 jump @150 if a2 != a0
      :                          @153
  2477: 7b b8                    u64 [a4] = a1
  2479: 01                       fallthrough
      :                          @154
  2480: 82 12 b0 00              t0 = u64 [sp + 0xb0]
  2484: 95 22 01                 t0 = t0 + 0x1
  2487: 82 17 b8 00              a0 = u64 [sp + 0xb8]
  2491: 95 77 98 00              a0 = a0 + 0x98
  2495: 7b 17 b8 00              u64 [sp + 0xb8] = a0
  2499: 82 1c 40                 a5 = u64 [sp + 0x40]
  2502: 82 19 38                 a2 = u64 [sp + 0x38]
  2505: 82 1b 30                 a4 = u64 [sp + 0x30]
  2508: 82 1a a8 00              a3 = u64 [sp + 0xa8]
  2512: 33 08 08                 a1 = 0x8
  2515: ae 8c 48 fb              jump @108 if a5 >=u a1
      :                          @155
  2519: 33 07 00 00 01           a0 = 0x10000
  2524: 33 08                    a1 = 0
  2526: 82 10 88 02              ra = u64 [sp + 0x288]
  2530: 82 15 80 02              s0 = u64 [sp + 0x280]
  2534: 82 16 78 02              s1 = u64 [sp + 0x278]
  2538: 95 11 90 02              sp = sp + 0x290
  2542: 32 00                    ret
      :                          @156
  2544: 00                       trap
      :                          @157
  2545: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  2548: 7b 10 40                 u64 [sp + 0x40] = ra
  2551: 7b 15 38                 u64 [sp + 0x38] = s0
  2554: 7b 16 30                 u64 [sp + 0x30] = s1
  2557: c8 89 09                 a2 = a2 + a1
  2560: ac 89 52                 jump @165 if a2 <u a1
      :                          @158
  2563: 64 75                    s0 = a0
  2565: 82 77                    a0 = u64 [a0]
  2567: 97 78 01                 a1 = a0 << 0x1
  2570: 33 0a 08                 a3 = 0x8
  2573: e4 a9 09                 a2 = maxu(a2, a3)
  2576: e4 98 06                 s1 = maxu(a1, a2)
  2579: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  2582: 98 88 3f                 a1 = a1 >> 0x3f
  2585: 51 07 12                 jump @160 if a0 == 0
      :                          @159
  2588: 82 59 08                 a2 = u64 [s0 + 0x8]
  2591: 7b 19 18                 u64 [sp + 0x18] = a2
  2594: 49 11 20 01              u64 [sp + 32] = 0x1
  2598: 7b 17 28                 u64 [sp + 0x28] = a0
  2601: 28 06                    jump @161
      :                          @160
  2603: 49 11 20                 u64 [sp + 32] = 0
  2606: 01                       fallthrough
      :                          @161
  2607: 64 17                    a0 = sp
  2609: 95 1a 18                 a3 = sp + 0x18
  2612: 64 69                    a2 = s1
  2614: 50 10 2e 32              ra = 46, jump @169
      :                          @162 [@dyn 23]
  2618: 82 18                    a1 = u64 [sp]
  2620: 82 17 08                 a0 = u64 [sp + 0x8]
  2623: 51 08 14                 jump @166 if a1 == 0
      :                          @163
  2626: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  2636: aa 87 0d                 jump @167 if a0 == a1
      :                          @164
  2639: 52 07 18                 jump @168 if a0 != 0
      :                          @165
  2642: 00                       trap
      :                          @166
  2643: 7b 57 08                 u64 [s0 + 0x8] = a0
  2646: 7b 56                    u64 [s0] = s1
  2648: 01                       fallthrough
      :                          @167
  2649: 82 10 40                 ra = u64 [sp + 0x40]
  2652: 82 15 38                 s0 = u64 [sp + 0x38]
  2655: 82 16 30                 s1 = u64 [sp + 0x30]
  2658: 95 11 48                 sp = sp + 0x48
  2661: 32 00                    ret
      :                          @168
  2663: 00                       trap
      :                          @169
  2664: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  2667: 7b 10 30                 u64 [sp + 0x30] = ra
  2670: 7b 15 28                 u64 [sp + 0x28] = s0
  2673: 7b 16 20                 u64 [sp + 0x20] = s1
  2676: 64 95                    s0 = a2
  2678: 64 72                    t0 = a0
  2680: 51 08 79                 jump @179 if a1 == 0
      :                          @170
  2683: 82 a7 08                 a0 = u64 [a3 + 0x8]
  2686: 51 07 7c                 jump @180 if a0 == 0
      :                          @171
  2689: 82 a9 10                 a2 = u64 [a3 + 0x10]
  2692: 51 09 aa 00              jump @187 if a2 == 0
      :                          @172
  2696: 82 a8                    a1 = u64 [a3]
  2698: 33 06 40 00 03           s1 = 0x30040
  2703: 33 03 00 00 01           t1 = 0x10000
  2708: c8 36 06                 s1 = s1 + t1
  2711: 01                       fallthrough
      :                          @173
  2712: 82 6a                    a3 = u64 [s1]
  2714: c8 5a 07                 a0 = a3 + s0
  2717: ac a7 cf 00              jump @193 if a0 <u a3
      :                          @174
  2721: 95 7b 01                 a4 = a0 + 0x1
  2724: 88 bc 01                 a5 = a4 <u 0x1
  2727: d8 b3 0b                 a4 = t1 <u a4
  2730: d4 cb 0b                 a4 = a4 | a5
  2733: 52 0b bf 00              jump @193 if a4 != 0
      :                          @175
  2737: 82 6b                    a4 = u64 [s1]
  2739: ab ab e5                 jump @173 if a4 != a3
      :                          @176
  2742: 7b 67                    u64 [s1] = a0
  2744: 33 0c                    a5 = 0
  2746: 7b 12 18                 u64 [sp + 0x18] = t0
  2749: 33 0a 40 00 03           a3 = 0x30040
  2754: 33 0b 00 00 01           a4 = 0x10000
  2759: 7b 1a                    u64 [sp] = a3
  2761: c8 ba 0a                 a3 = a3 + a4
  2764: c9 7a 07                 a0 = a3 - a0
  2767: 7b 17 10                 u64 [sp + 0x10] = a0
  2770: 7b 18 08                 u64 [sp + 0x8] = a1
  2773: 64 96                    s1 = a2
  2775: 50 10 30 cb 03           ra = 48, jump @263
      :                          @177 [@dyn 24]
  2780: 54 36 00 00 01 98 00     jump @194 if s1 <=u 65536
      :                          @178
  2787: 82 12 18                 t0 = u64 [sp + 0x18]
  2790: 82 18 10                 a1 = u64 [sp + 0x10]
  2793: 33 07                    a0 = 0
  2795: 7b 28 08                 u64 [t0 + 0x8] = a1
  2798: 28 b5 00                 jump @200
      :                          @179
  2801: 49 12 08                 u64 [t0 + 8] = 0
  2804: 33 07 01                 a0 = 0x1
  2807: 28 ac 00                 jump @200
      :                          @180
  2810: 33 09 40 00 03           a2 = 0x30040
  2815: 33 07 00 00 01           a0 = 0x10000
  2820: c8 79 09                 a2 = a2 + a0
  2823: 01                       fallthrough
      :                          @181
  2824: 82 9a                    a3 = u64 [a2]
  2826: c8 5a 08                 a1 = a3 + s0
  2829: ac a8 5f                 jump @193 if a1 <u a3
      :                          @182
  2832: 95 8b 01                 a4 = a1 + 0x1
  2835: 88 bc 01                 a5 = a4 <u 0x1
  2838: d8 b7 0b                 a4 = a0 <u a4
  2841: d4 cb 0b                 a4 = a4 | a5
  2844: 52 0b 50                 jump @193 if a4 != 0
      :                          @183
  2847: 82 9b                    a4 = u64 [a2]
  2849: ab ab e7                 jump @181 if a4 != a3
      :                          @184
  2852: 7b 98                    u64 [a2] = a1
  2854: 33 0c                    a5 = 0
  2856: 01                       fallthrough
      :                          @185
  2857: ab ab df                 jump @181 if a4 != a3
      :                          @186
  2860: 28 31                    jump @192
      :                          @187
  2862: 33 09 40 00 03           a2 = 0x30040
  2867: 33 07 00 00 01           a0 = 0x10000
  2872: c8 79 09                 a2 = a2 + a0
  2875: 01                       fallthrough
      :                          @188
  2876: 82 9a                    a3 = u64 [a2]
  2878: c8 5a 08                 a1 = a3 + s0
  2881: ac a8 2b                 jump @193 if a1 <u a3
      :                          @189
  2884: 95 8b 01                 a4 = a1 + 0x1
  2887: 88 bc 01                 a5 = a4 <u 0x1
  2890: d8 b7 0b                 a4 = a0 <u a4
  2893: d4 cb 0b                 a4 = a4 | a5
  2896: 52 0b 1c                 jump @193 if a4 != 0
      :                          @190
  2899: 82 9b                    a4 = u64 [a2]
  2901: ab ab e7                 jump @188 if a4 != a3
      :                          @191
  2904: 7b 98                    u64 [a2] = a1
  2906: 33 0c                    a5 = 0
  2908: 01                       fallthrough
      :                          @192
  2909: 33 07 40 00 04           a0 = 0x40040
  2914: c9 87 08                 a1 = a0 - a1
  2917: 33 07                    a0 = 0
  2919: 7b 28 08                 u64 [t0 + 0x8] = a1
  2922: 28 39                    jump @200
      :                          @193
  2924: 33 07 01                 a0 = 0x1
  2927: 7b 27 08                 u64 [t0 + 0x8] = a0
  2930: 28 31                    jump @200
      :                          @194
  2932: 64 6c                    a5 = s1
  2934: 82 17                    a0 = u64 [sp]
  2936: 95 77 00 00 01           a0 = a0 + 0x10000
  2941: 82 12 18                 t0 = u64 [sp + 0x18]
  2944: 82 16 08                 s1 = u64 [sp + 0x8]
  2947: 01                       fallthrough
      :                          @195
  2948: 82 78                    a1 = u64 [a0]
  2950: c9 87 09                 a2 = a0 - a1
  2953: ab 69 11                 jump @199 if a2 != s1
      :                          @196
  2956: c9 c8 09                 a2 = a1 - a5
  2959: 01                       fallthrough
      :                          @197
  2960: 82 7a                    a3 = u64 [a0]
  2962: ab 8a f2                 jump @195 if a3 != a1
      :                          @198
  2965: 7b 79                    u64 [a0] = a2
  2967: 33 0b                    a4 = 0
  2969: 01                       fallthrough
      :                          @199
  2970: 82 18 10                 a1 = u64 [sp + 0x10]
  2973: 33 07                    a0 = 0
  2975: 7b 28 08                 u64 [t0 + 0x8] = a1
  2978: 01                       fallthrough
      :                          @200
  2979: 7b 25 10                 u64 [t0 + 0x10] = s0
  2982: 7b 27                    u64 [t0] = a0
  2984: 82 10 30                 ra = u64 [sp + 0x30]
  2987: 82 15 28                 s0 = u64 [sp + 0x28]
  2990: 82 16 20                 s1 = u64 [sp + 0x20]
  2993: 95 11 38                 sp = sp + 0x38
  2996: 32 00                    ret
      :                          @201
  2998: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  3001: 7b 10 40                 u64 [sp + 0x40] = ra
  3004: 7b 15 38                 u64 [sp + 0x38] = s0
  3007: 7b 16 30                 u64 [sp + 0x30] = s1
  3010: 95 88 01                 a1 = a1 + 0x1
  3013: 51 08 53                 jump @209 if a1 == 0
      :                          @202
  3016: 64 75                    s0 = a0
  3018: 82 77                    a0 = u64 [a0]
  3020: 97 79 01                 a2 = a0 << 0x1
  3023: 33 0a 08                 a3 = 0x8
  3026: e4 a8 08                 a1 = maxu(a1, a3)
  3029: e4 89 06                 s1 = maxu(a2, a1)
  3032: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  3035: 98 88 3f                 a1 = a1 >> 0x3f
  3038: 51 07 12                 jump @204 if a0 == 0
      :                          @203
  3041: 82 59 08                 a2 = u64 [s0 + 0x8]
  3044: 7b 19 18                 u64 [sp + 0x18] = a2
  3047: 49 11 20 01              u64 [sp + 32] = 0x1
  3051: 7b 17 28                 u64 [sp + 0x28] = a0
  3054: 28 06                    jump @205
      :                          @204
  3056: 49 11 20                 u64 [sp + 32] = 0
  3059: 01                       fallthrough
      :                          @205
  3060: 64 17                    a0 = sp
  3062: 95 1a 18                 a3 = sp + 0x18
  3065: 64 69                    a2 = s1
  3067: 50 10 32 6d fe           ra = 50, jump @169
      :                          @206 [@dyn 25]
  3072: 82 18                    a1 = u64 [sp]
  3074: 82 17 08                 a0 = u64 [sp + 0x8]
  3077: 51 08 14                 jump @210 if a1 == 0
      :                          @207
  3080: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  3090: aa 87 0d                 jump @211 if a0 == a1
      :                          @208
  3093: 52 07 18                 jump @212 if a0 != 0
      :                          @209
  3096: 00                       trap
      :                          @210
  3097: 7b 57 08                 u64 [s0 + 0x8] = a0
  3100: 7b 56                    u64 [s0] = s1
  3102: 01                       fallthrough
      :                          @211
  3103: 82 10 40                 ra = u64 [sp + 0x40]
  3106: 82 15 38                 s0 = u64 [sp + 0x38]
  3109: 82 16 30                 s1 = u64 [sp + 0x30]
  3112: 95 11 48                 sp = sp + 0x48
  3115: 32 00                    ret
      :                          @212
  3117: 00                       trap
      :                          @213
  3118: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  3121: 7b 10 30                 u64 [sp + 0x30] = ra
  3124: 7b 15 28                 u64 [sp + 0x28] = s0
  3127: 7b 16 20                 u64 [sp + 0x20] = s1
  3130: 64 89                    a2 = a1
  3132: 82 8a 08                 a3 = u64 [a1 + 0x8]
  3135: 64 75                    s0 = a0
  3137: 51 0a 35                 jump @218 if a3 == 0
      :                          @214
  3140: 82 98                    a1 = u64 [a2]
  3142: 33 07                    a0 = 0
  3144: 95 8b 08                 a4 = a1 + 0x8
  3147: 01                       fallthrough
      :                          @215
  3148: 82 bc                    a5 = u64 [a4]
  3150: c8 c7 07                 a0 = a0 + a5
  3153: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  3156: 95 bb 10                 a4 = a4 + 0x10
  3159: 52 0a f5                 jump @215 if a3 != 0
      :                          @216
  3162: 82 9a 18                 a3 = u64 [a2 + 0x18]
  3165: 51 0a 24                 jump @220 if a3 == 0
      :                          @217
  3168: 82 88 08                 a1 = u64 [a1 + 0x8]
  3171: 8e 88                    a1 = a1 >u 0
  3173: 88 7a 10                 a3 = a0 <u 0x10
  3176: 85 aa 01                 a3 = a3 ^ 0x1
  3179: d4 a8 08                 a1 = a1 | a3
  3182: 89 7a                    a3 = a0 <s 0
  3184: e0 a8 08                 a1 = a1 & ~a3
  3187: 52 08 0a                 jump @219 if a1 != 0
      :                          @218
  3190: 33 07                    a0 = 0
  3192: 33 08 01                 a1 = 0x1
  3195: 28 4a                    jump @228
      :                          @219
  3197: 97 77 01                 a0 = a0 << 0x1
  3200: 01                       fallthrough
      :                          @220
  3201: 51 07 40                 jump @227 if a0 == 0
      :                          @221
  3204: 57 07 78                 jump @233 if a0 <s 0
      :                          @222
  3207: 64 52                    t0 = s0
  3209: 33 0b 40 00 03           a4 = 0x30040
  3214: 33 08 00 00 01           a1 = 0x10000
  3219: c8 8b 0b                 a4 = a4 + a1
  3222: 01                       fallthrough
      :                          @223
  3223: 82 bc                    a5 = u64 [a4]
  3225: c8 7c 0a                 a3 = a5 + a0
  3228: ac ca 5e                 jump @231 if a3 <u a5
      :                          @224
  3231: 95 a5 01                 s0 = a3 + 0x1
  3234: 88 56 01                 s1 = s0 <u 0x1
  3237: d8 58 05                 s0 = a1 <u s0
  3240: d4 65 05                 s0 = s0 | s1
  3243: 52 05 4f                 jump @231 if s0 != 0
      :                          @225
  3246: 82 b6                    s1 = u64 [a4]
  3248: ab c6 e7                 jump @223 if s1 != a5
      :                          @226
  3251: 7b ba                    u64 [a4] = a3
  3253: 33 08 40 00 04           a1 = 0x40040
  3258: c9 a8 08                 a1 = a1 - a3
  3261: 64 25                    s0 = t0
  3263: 28 06                    jump @228
      :                          @227
  3265: 33 08 01                 a1 = 0x1
  3268: 01                       fallthrough
      :                          @228
  3269: 7b 17                    u64 [sp] = a0
  3271: 7b 18 08                 u64 [sp + 0x8] = a1
  3274: 49 11 10                 u64 [sp + 16] = 0
  3277: 33 08 18 01 01           a1 = 0x10118
  3282: 64 17                    a0 = sp
  3284: 50 10 34 1a 06           ra = 52, jump @345
      :                          @229 [@dyn 26]
  3289: 52 07 22                 jump @232 if a0 != 0
      :                          @230
  3292: 82 17 10                 a0 = u64 [sp + 0x10]
  3295: 82 18 08                 a1 = u64 [sp + 0x8]
  3298: 82 19                    a2 = u64 [sp]
  3300: 7b 57 10                 u64 [s0 + 0x10] = a0
  3303: 7b 58 08                 u64 [s0 + 0x8] = a1
  3306: 7b 59                    u64 [s0] = a2
  3308: 82 10 30                 ra = u64 [sp + 0x30]
  3311: 82 15 28                 s0 = u64 [sp + 0x28]
  3314: 82 16 20                 s1 = u64 [sp + 0x20]
  3317: 95 11 38                 sp = sp + 0x38
  3320: 32 00                    ret
      :                          @231
  3322: 00                       trap
      :                          @232
  3323: 00                       trap
      :                          @233
  3324: 00                       trap
      :                          @234 [@dyn 27]
  3325: 82 72                    t0 = u64 [a0]
  3327: 33 09 00 00 ff           a2 = 0xffffffffffff0000
  3332: 95 2a ff ff fe           a3 = t0 + 0xfffffffffffeffff
  3337: ac 9a 28                 jump @240 if a3 <u a2
      :                          @235
  3340: 82 77 08                 a0 = u64 [a0 + 0x8]
  3343: 33 09 40 00 03           a2 = 0x30040
  3348: 95 99 00 00 01           a2 = a2 + 0x10000
  3353: 01                       fallthrough
      :                          @236
  3354: 82 9a                    a3 = u64 [a2]
  3356: c9 a9 0b                 a4 = a2 - a3
  3359: ab 7b 12                 jump @240 if a4 != a0
      :                          @237
  3362: c9 2a 0b                 a4 = a3 - t0
  3365: 01                       fallthrough
      :                          @238
  3366: 82 9c                    a5 = u64 [a2]
  3368: ab ac f2                 jump @236 if a5 != a3
      :                          @239
  3371: 7b 9b                    u64 [a2] = a4
  3373: 33 08                    a1 = 0
  3375: 32 00                    ret
      :                          @240
  3377: 32 00                    ret
      :                          @241 [@dyn 28]
  3379: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3382: 7b 10 18                 u64 [sp + 0x18] = ra
  3385: 7b 15 10                 u64 [sp + 0x10] = s0
  3388: 7b 16 08                 u64 [sp + 0x8] = s1
  3391: 64 75                    s0 = a0
  3393: 82 7a 10                 a3 = u64 [a0 + 0x10]
  3396: 82 77                    a0 = u64 [a0]
  3398: c9 a7 07                 a0 = a0 - a3
  3401: 64 96                    s1 = a2
  3403: ac 97 2a                 jump @244 if a0 <u a2
      :                          @242
  3406: 7b 1a                    u64 [sp] = a3
  3408: 82 57 08                 a0 = u64 [s0 + 0x8]
  3411: c8 a7 07                 a0 = a0 + a3
  3414: 64 69                    a2 = s1
  3416: 50 10 3a 4a 01           ra = 58, jump @263
      :                          @243 [@dyn 29]
  3421: 82 17                    a0 = u64 [sp]
  3423: c8 76 06                 s1 = s1 + a0
  3426: 7b 56 10                 u64 [s0 + 0x10] = s1
  3429: 33 07                    a0 = 0
  3431: 82 10 18                 ra = u64 [sp + 0x18]
  3434: 82 15 10                 s0 = u64 [sp + 0x10]
  3437: 82 16 08                 s1 = u64 [sp + 0x8]
  3440: 95 11 20                 sp = sp + 0x20
  3443: 32 00                    ret
      :                          @244
  3445: 64 57                    a0 = s0
  3447: 7b 18                    u64 [sp] = a1
  3449: 64 a8                    a1 = a3
  3451: 64 69                    a2 = s1
  3453: 50 10 3c 74 fc           ra = 60, jump @157
      :                          @245 [@dyn 30]
  3458: 82 18                    a1 = u64 [sp]
  3460: 82 5a 10                 a3 = u64 [s0 + 0x10]
  3463: 28 c7                    jump @242
      :                          @246 [@dyn 31]
  3465: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  3468: 7b 10 20                 u64 [sp + 0x20] = ra
  3471: 7b 15 18                 u64 [sp + 0x18] = s0
  3474: 7b 16 10                 u64 [sp + 0x10] = s1
  3477: 64 86                    s1 = a1
  3479: 83 88                    i32 a1 = a1 + 0
  3481: 33 09 80 00              a2 = 0x80
  3485: 64 7a                    a3 = a0
  3487: ae 98 2b                 jump @251 if a1 >=u a2
      :                          @247
  3490: 82 a8 10                 a1 = u64 [a3 + 0x10]
  3493: 82 a7                    a0 = u64 [a3]
  3495: ab 78 12                 jump @250 if a1 != a0
      :                          @248
  3498: 64 a7                    a0 = a3
  3500: 64 a5                    s0 = a3
  3502: 50 10 40 08 fe           ra = 64, jump @201
      :                          @249 [@dyn 32]
  3507: 64 5a                    a3 = s0
  3509: 82 58 10                 a1 = u64 [s0 + 0x10]
  3512: 01                       fallthrough
      :                          @250
  3513: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3516: c8 87 07                 a0 = a0 + a1
  3519: 78 76                    u8 [a0] = s1
  3521: 95 88 01                 a1 = a1 + 0x1
  3524: 7b a8 10                 u64 [a3 + 0x10] = a1
  3527: 28 ab 00                 jump @259
      :                          @251
  3530: 8b 67 0b                 i32 a0 = s1 >> 0xb
  3533: 48 11 0c                 u32 [sp + 12] = 0
  3536: 52 07 1c                 jump @253 if a0 != 0
      :                          @252
  3539: 98 67 06                 a0 = s1 >> 0x6
  3542: 86 77 c0 00              a0 = a0 | 0xc0
  3546: 78 17 0c                 u8 [sp + 0xc] = a0
  3549: 84 67 3f                 a0 = s1 & 0x3f
  3552: 86 77 80 00              a0 = a0 | 0x80
  3556: 78 17 0d                 u8 [sp + 0xd] = a0
  3559: 33 06 02                 s1 = 0x2
  3562: 28 63                    jump @256
      :                          @253
  3564: 8b 67 10                 i32 a0 = s1 >> 0x10
  3567: 52 07 29                 jump @255 if a0 != 0
      :                          @254
  3570: 98 67 0c                 a0 = s1 >> 0xc
  3573: 86 77 e0 00              a0 = a0 | 0xe0
  3577: 78 17 0c                 u8 [sp + 0xc] = a0
  3580: 97 67 34                 a0 = s1 << 0x34
  3583: 98 77 3a                 a0 = a0 >> 0x3a
  3586: 95 77 80 00              a0 = a0 + 0x80
  3590: 78 17 0d                 u8 [sp + 0xd] = a0
  3593: 84 67 3f                 a0 = s1 & 0x3f
  3596: 86 77 80 00              a0 = a0 | 0x80
  3600: 78 17 0e                 u8 [sp + 0xe] = a0
  3603: 33 06 03                 s1 = 0x3
  3606: 28 37                    jump @256
      :                          @255
  3608: 97 67 2b                 a0 = s1 << 0x2b
  3611: 98 77 3d                 a0 = a0 >> 0x3d
  3614: 95 77 f0 00              a0 = a0 + 0xf0
  3618: 78 17 0c                 u8 [sp + 0xc] = a0
  3621: 97 67 2e                 a0 = s1 << 0x2e
  3624: 98 77 3a                 a0 = a0 >> 0x3a
  3627: 95 77 80 00              a0 = a0 + 0x80
  3631: 78 17 0d                 u8 [sp + 0xd] = a0
  3634: 97 67 34                 a0 = s1 << 0x34
  3637: 98 77 3a                 a0 = a0 >> 0x3a
  3640: 95 77 80 00              a0 = a0 + 0x80
  3644: 78 17 0e                 u8 [sp + 0xe] = a0
  3647: 84 67 3f                 a0 = s1 & 0x3f
  3650: 86 77 80 00              a0 = a0 | 0x80
  3654: 78 17 0f                 u8 [sp + 0xf] = a0
  3657: 33 06 04                 s1 = 0x4
  3660: 01                       fallthrough
      :                          @256
  3661: 82 a5 10                 s0 = u64 [a3 + 0x10]
  3664: 82 a7                    a0 = u64 [a3]
  3666: c9 57 07                 a0 = a0 - s0
  3669: ac 67 2d                 jump @260 if a0 <u s1
      :                          @257
  3672: 7b 1a                    u64 [sp] = a3
  3674: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3677: c8 57 07                 a0 = a0 + s0
  3680: 95 18 0c                 a1 = sp + 0xc
  3683: 64 69                    a2 = s1
  3685: 50 10 42 3d              ra = 66, jump @263
      :                          @258 [@dyn 33]
  3689: c8 56 06                 s1 = s1 + s0
  3692: 82 17                    a0 = u64 [sp]
  3694: 7b 76 10                 u64 [a0 + 0x10] = s1
  3697: 01                       fallthrough
      :                          @259
  3698: 33 07                    a0 = 0
  3700: 82 10 20                 ra = u64 [sp + 0x20]
  3703: 82 15 18                 s0 = u64 [sp + 0x18]
  3706: 82 16 10                 s1 = u64 [sp + 0x10]
  3709: 95 11 28                 sp = sp + 0x28
  3712: 32 00                    ret
      :                          @260
  3714: 64 a7                    a0 = a3
  3716: 64 58                    a1 = s0
  3718: 64 69                    a2 = s1
  3720: 64 a5                    s0 = a3
  3722: 50 10 44 67 fb           ra = 68, jump @157
      :                          @261 [@dyn 34]
  3727: 64 5a                    a3 = s0
  3729: 82 55 10                 s0 = u64 [s0 + 0x10]
  3732: 28 c4                    jump @257
      :                          @262 [@dyn 35]
  3734: 64 8a                    a3 = a1
  3736: 33 08 18 01 01           a1 = 0x10118
  3741: 64 a9                    a2 = a3
  3743: 28 4f 04                 jump @345
      :                          @263
  3746: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3749: 7b 10 18                 u64 [sp + 0x18] = ra
  3752: 7b 15 10                 u64 [sp + 0x10] = s0
  3755: 7b 16 08                 u64 [sp + 0x8] = s1
  3758: 53 19 10 64              jump @272 if a2 <u 16
      :                          @264
  3762: 8d 7a                    i32 a3 = -a0
  3764: 84 a2 07                 t0 = a3 & 0x7
  3767: c8 27 0b                 a4 = a0 + t0
  3770: 51 02 15                 jump @267 if t0 == 0
      :                          @265
  3773: 64 8c                    a5 = a1
  3775: 64 75                    s0 = a0
  3777: 01                       fallthrough
      :                          @266
  3778: 7c ca                    a3 = u8 [a5]
  3780: 78 5a                    u8 [s0] = a3
  3782: 95 55 01                 s0 = s0 + 0x1
  3785: 95 cc 01                 a5 = a5 + 0x1
  3788: ac b5 f6                 jump @266 if s0 <u a4
      :                          @267
  3791: c8 28 03                 t1 = a1 + t0
  3794: c9 29 02                 t0 = a2 - t0
  3797: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  3800: 84 38 07                 a1 = t1 & 0x7
  3803: c8 4b 0a                 a3 = a4 + t2
  3806: 51 08 3b                 jump @274 if a1 == 0
      :                          @268
  3809: 58 04 4b                 jump @277 if t2 <=s 0
      :                          @269
  3812: 97 38 03                 a1 = t1 << 0x3
  3815: 84 80 38                 ra = a1 & 0x38
  3818: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  3821: 82 c5                    s0 = u64 [a5]
  3823: 8d 88                    i32 a1 = -a1
  3825: 84 88 38                 a1 = a1 & 0x38
  3828: 95 cc 08                 a5 = a5 + 0x8
  3831: 01                       fallthrough
      :                          @270
  3832: 82 c6                    s1 = u64 [a5]
  3834: d0 05 05                 s0 = s0 >> ra
  3837: cf 86 09                 a2 = s1 << a1
  3840: d4 59 09                 a2 = a2 | s0
  3843: 7b b9                    u64 [a4] = a2
  3845: 95 bb 08                 a4 = a4 + 0x8
  3848: 95 cc 08                 a5 = a5 + 0x8
  3851: 64 65                    s0 = s1
  3853: ac ab eb                 jump @270 if a4 <u a3
      :                          @271
  3856: 28 1c                    jump @277
      :                          @272
  3858: 64 7a                    a3 = a0
  3860: 52 09 21                 jump @278 if a2 != 0
      :                          @273
  3863: 28 2f                    jump @280
      :                          @274
  3865: 58 04 13                 jump @277 if t2 <=s 0
      :                          @275
  3868: 64 38                    a1 = t1
  3870: 01                       fallthrough
      :                          @276
  3871: 82 89                    a2 = u64 [a1]
  3873: 7b b9                    u64 [a4] = a2
  3875: 95 bb 08                 a4 = a4 + 0x8
  3878: 95 88 08                 a1 = a1 + 0x8
  3881: ac ab f6                 jump @276 if a4 <u a3
      :                          @277
  3884: c8 43 08                 a1 = t1 + t2
  3887: 84 29 07                 a2 = t0 & 0x7
  3890: 51 09 14                 jump @280 if a2 == 0
      :                          @278
  3893: c8 a9 09                 a2 = a2 + a3
  3896: 01                       fallthrough
      :                          @279
  3897: 7c 8b                    a4 = u8 [a1]
  3899: 78 ab                    u8 [a3] = a4
  3901: 95 aa 01                 a3 = a3 + 0x1
  3904: 95 88 01                 a1 = a1 + 0x1
  3907: ac 9a f6                 jump @279 if a3 <u a2
      :                          @280
  3910: 82 10 18                 ra = u64 [sp + 0x18]
  3913: 82 15 10                 s0 = u64 [sp + 0x10]
  3916: 82 16 08                 s1 = u64 [sp + 0x8]
  3919: 95 11 20                 sp = sp + 0x20
  3922: 32 00                    ret
      :                          @281 [@dyn 36]
  3924: 82 77                    a0 = u64 [a0]
  3926: 01                       fallthrough
      :                          @282
  3927: 28                       jump @282
      :                          @283
  3928: 95 11 a8                 sp = sp + 0xffffffffffffffa8
  3931: 7b 10 50                 u64 [sp + 0x50] = ra
  3934: 7b 15 48                 u64 [sp + 0x48] = s0
  3937: 7b 16 40                 u64 [sp + 0x40] = s1
  3940: 7b 18                    u64 [sp] = a1
  3942: 98 79 04                 a2 = a0 >> 0x4
  3945: 33 08 27                 a1 = 0x27
  3948: 53 29 71 02 81 00        jump @286 if a2 <u 625
      :                          @284
  3954: 33 08 27                 a1 = 0x27
  3957: 95 1a 3e                 a3 = sp + 0x3e
  3960: 3a 09 00 00 03           a2 = u64 [0x30000]
  3965: 7b 19 10                 u64 [sp + 0x10] = a2
  3968: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
  3974: 33 04 7b 14              t2 = 0x147b
  3978: 33 0b 8c 01 01           a4 = 0x1018c
  3983: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
  3989: 01                       fallthrough
      :                          @285
  3990: 64 72                    t0 = a0
  3992: 82 17 10                 a0 = u64 [sp + 0x10]
  3995: d6 72 07                 a0 = t0 mulhu a0
  3998: 98 77 0b                 a0 = a0 >> 0xb
  4001: 82 19 08                 a2 = u64 [sp + 0x8]
  4004: c0 97 0c                 i32 a5 = a0 * a2
  4007: c8 2c 06                 s1 = a5 + t0
  4010: 97 6c 30                 a5 = s1 << 0x30
  4013: 98 cc 32                 a5 = a5 >> 0x32
  4016: ca 4c 0c                 a5 = a5 * t2
  4019: 98 c3 11                 t1 = a5 >> 0x11
  4022: 98 cc 10                 a5 = a5 >> 0x10
  4025: 84 cc fe 07              a5 = a5 & 0x7fe
  4029: 96 39 9c                 a2 = t1 * 0xffffffffffffff9c
  4032: c8 69 09                 a2 = a2 + s1
  4035: 97 99 31                 a2 = a2 << 0x31
  4038: 98 99 30                 a2 = a2 >> 0x30
  4041: c8 bc 0c                 a5 = a5 + a4
  4044: 7c c6                    s1 = u8 [a5]
  4046: 7c cc 01                 a5 = u8 [a5 + 0x1]
  4049: c8 b9 09                 a2 = a2 + a4
  4052: 7c 95 01                 s0 = u8 [a2 + 0x1]
  4055: 7c 99                    a2 = u8 [a2]
  4057: 78 ac ff                 u8 [a3 + 0xffffffffffffffff] = a5
  4060: 78 a6 fe                 u8 [a3 + 0xfffffffffffffffe] = s1
  4063: 78 a5 01                 u8 [a3 + 0x1] = s0
  4066: 78 a9                    u8 [a3] = a2
  4068: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
  4071: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
  4074: ac 20 ac                 jump @285 if ra <u t0
      :                          @286
  4077: 54 17 63 3b              jump @288 if a0 <=u 99
      :                          @287
  4081: 97 79 30                 a2 = a0 << 0x30
  4084: 98 99 32                 a2 = a2 >> 0x32
  4087: 96 99 7b 14              a2 = a2 * 0x147b
  4091: 98 99 11                 a2 = a2 >> 0x11
  4094: 96 9a 9c                 a3 = a2 * 0xffffffffffffff9c
  4097: c8 a7 07                 a0 = a0 + a3
  4100: 97 77 31                 a0 = a0 << 0x31
  4103: 98 77 30                 a0 = a0 >> 0x30
  4106: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  4109: 33 0a 8c 01 01           a3 = 0x1018c
  4114: c8 a7 07                 a0 = a0 + a3
  4117: 7c 7a 01                 a3 = u8 [a0 + 0x1]
  4120: 7c 77                    a0 = u8 [a0]
  4122: 95 1b 19                 a4 = sp + 0x19
  4125: c8 8b 0b                 a4 = a4 + a1
  4128: 78 ba 01                 u8 [a4 + 0x1] = a3
  4131: 78 b7                    u8 [a4] = a0
  4133: 64 97                    a0 = a2
  4135: 01                       fallthrough
      :                          @288
  4136: 55 17 0a 14              jump @290 if a0 >=u 10
      :                          @289
  4140: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  4143: 95 19 19                 a2 = sp + 0x19
  4146: c8 89 09                 a2 = a2 + a1
  4149: 83 77 30                 i32 a0 = a0 + 0x30
  4152: 78 97                    u8 [a2] = a0
  4154: 28 21                    jump @291
      :                          @290
  4156: 97 77 01                 a0 = a0 << 0x1
  4159: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  4162: 33 09 8c 01 01           a2 = 0x1018c
  4167: c8 97 07                 a0 = a0 + a2
  4170: 7c 79 01                 a2 = u8 [a0 + 0x1]
  4173: 7c 77                    a0 = u8 [a0]
  4175: 95 1a 19                 a3 = sp + 0x19
  4178: c8 8a 0a                 a3 = a3 + a1
  4181: 78 a9 01                 u8 [a3 + 0x1] = a2
  4184: 78 a7                    u8 [a3] = a0
  4186: 01                       fallthrough
      :                          @291
  4187: 95 1a 19                 a3 = sp + 0x19
  4190: c8 8a 0a                 a3 = a3 + a1
  4193: 9a 8b 27                 a4 = 0x27 - a1
  4196: 33 08 48 01 01           a1 = 0x10148
  4201: 82 17                    a0 = u64 [sp]
  4203: 33 09                    a2 = 0
  4205: 50 10 4a 12              ra = 74, jump @293
      :                          @292 [@dyn 37]
  4209: 82 10 50                 ra = u64 [sp + 0x50]
  4212: 82 15 48                 s0 = u64 [sp + 0x48]
  4215: 82 16 40                 s1 = u64 [sp + 0x40]
  4218: 95 11 58                 sp = sp + 0x58
  4221: 32 00                    ret
      :                          @293
  4223: 95 11 98                 sp = sp + 0xffffffffffffff98
  4226: 7b 10 60                 u64 [sp + 0x60] = ra
  4229: 7b 15 58                 u64 [sp + 0x58] = s0
  4232: 7b 16 50                 u64 [sp + 0x50] = s1
  4235: 80 73 34                 t1 = u32 [a0 + 0x34]
  4238: 7b 1a 20                 u64 [sp + 0x20] = a3
  4241: 64 9c                    a5 = a2
  4243: 84 36 01                 s1 = t1 & 0x1
  4246: 33 02 2b                 t0 = 0x2b
  4249: 33 09 00 00 11           a2 = 0x110000
  4254: 84 3a 04                 a3 = t1 & 0x4
  4257: 7b 1b 28                 u64 [sp + 0x28] = a4
  4260: c8 b6 04                 t2 = s1 + a4
  4263: 7b 1c 30                 u64 [sp + 0x30] = a5
  4266: 52 0a 10                 jump @296 if a3 != 0
      :                          @294
  4269: 49 11 38                 u64 [sp + 56] = 0
  4272: 82 78                    a1 = u64 [a0]
  4274: 94 69 2b                 a2 = 0x2b if s1 != 0
  4277: 52 08 35                 jump @300 if a1 != 0
      :                          @295
  4280: 28 56                    jump @305
      :                          @296
  4282: 7b 18 38                 u64 [sp + 0x38] = a1
  4285: 33 09                    a2 = 0
  4287: 51 0c 1b                 jump @299 if a5 == 0
      :                          @297
  4290: 82 1b 38                 a4 = u64 [sp + 0x38]
  4293: 01                       fallthrough
      :                          @298
  4294: 7d b5                    s0 = i8 [a4]
  4296: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
  4299: 85 5a 01                 a3 = s0 ^ 0x1
  4302: c8 a9 09                 a2 = a2 + a3
  4305: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  4308: 95 bb 01                 a4 = a4 + 0x1
  4311: 52 0c ef                 jump @298 if a5 != 0
      :                          @299
  4314: c8 94 04                 t2 = t2 + a2
  4317: 33 09 00 00 11           a2 = 0x110000
  4322: 82 78                    a1 = u64 [a0]
  4324: db 62 09                 a2 = t0 if s1 != 0
  4327: 51 08 27                 jump @305 if a1 == 0
      :                          @300
  4330: 82 7a 08                 a3 = u64 [a0 + 0x8]
  4333: ae a4 21                 jump @305 if t2 >=u a3
      :                          @301
  4336: 84 38 08                 a1 = t1 & 0x8
  4339: 52 08 50                 jump @308 if a1 != 0
      :                          @302
  4342: 7c 76 38                 s1 = u8 [a0 + 0x38]
  4345: c9 4a 0a                 a3 = a3 - t2
  4348: 7b 19 18                 u64 [sp + 0x18] = a2
  4351: 5a 16 01 9d 00           jump @315 if s1 >s 1
      :                          @303
  4356: 52 06 aa 00              jump @317 if s1 != 0
      :                          @304
  4360: 7b 1a 10                 u64 [sp + 0x10] = a3
  4363: 28 a9 00                 jump @318
      :                          @305
  4366: 82 75 20                 s0 = u64 [a0 + 0x20]
  4369: 82 76 28                 s1 = u64 [a0 + 0x28]
  4372: 64 57                    a0 = s0
  4374: 64 68                    a1 = s1
  4376: 82 1a 38                 a3 = u64 [sp + 0x38]
  4379: 82 1b 30                 a4 = u64 [sp + 0x30]
  4382: 50 10 4c 6c 01           ra = 76, jump @338
      :                          @306 [@dyn 38]
  4387: 33 08 01                 a1 = 0x1
  4390: 52 07 bb 00              jump @323 if a0 != 0
      :                          @307
  4394: 82 6c 18                 a5 = u64 [s1 + 0x18]
  4397: 64 57                    a0 = s0
  4399: 82 18 20                 a1 = u64 [sp + 0x20]
  4402: 82 19 28                 a2 = u64 [sp + 0x28]
  4405: 82 10 60                 ra = u64 [sp + 0x60]
  4408: 82 15 58                 s0 = u64 [sp + 0x58]
  4411: 82 16 50                 s1 = u64 [sp + 0x50]
  4414: 95 11 68                 sp = sp + 0x68
  4417: 32 0c                    jump [a5]
      :                          @308
  4419: 7b 1a 40                 u64 [sp + 0x40] = a3
  4422: 64 45                    s0 = t2
  4424: 81 78 30                 a1 = i32 [a0 + 0x30]
  4427: 7b 18 10                 u64 [sp + 0x10] = a1
  4430: 7c 7a 38                 a3 = u8 [a0 + 0x38]
  4433: 7b 1a 08                 u64 [sp + 0x8] = a3
  4436: 82 7a 20                 a3 = u64 [a0 + 0x20]
  4439: 82 78 28                 a1 = u64 [a0 + 0x28]
  4442: 48 17 30 30              u32 [a0 + 48] = 0x30
  4446: 7b 17                    u64 [sp] = a0
  4448: 46 17 38 01              u8 [a0 + 56] = 0x1
  4452: 7b 1a 48                 u64 [sp + 0x48] = a3
  4455: 64 a7                    a0 = a3
  4457: 64 86                    s1 = a1
  4459: 82 1a 38                 a3 = u64 [sp + 0x38]
  4462: 82 1b 30                 a4 = u64 [sp + 0x30]
  4465: 50 10 4e 19 01           ra = 78, jump @338
      :                          @309 [@dyn 39]
  4470: 52 07 67                 jump @322 if a0 != 0
      :                          @310
  4473: 82 17 40                 a0 = u64 [sp + 0x40]
  4476: c9 57 05                 s0 = a0 - s0
  4479: 95 55 01                 s0 = s0 + 0x1
  4482: 01                       fallthrough
      :                          @311
  4483: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  4486: 51 05 c6 00              jump @333 if s0 == 0
      :                          @312
  4490: 82 69 20                 a2 = u64 [s1 + 0x20]
  4493: 33 08 30                 a1 = 0x30
  4496: 82 17 48                 a0 = u64 [sp + 0x48]
  4499: b4 90 01 50              ra = 80, jump [a2]
      :                          @313 [@dyn 40]
  4503: 51 07 ec                 jump @311 if a0 == 0
      :                          @314
  4506: 28 43                    jump @322
      :                          @315
  4508: 52 16 02 12              jump @317 if s1 != 2
      :                          @316
  4512: 98 a6 01                 s1 = a3 >> 0x1
  4515: 95 a8 01                 a1 = a3 + 0x1
  4518: 98 88 01                 a1 = a1 >> 0x1
  4521: 7b 18 10                 u64 [sp + 0x10] = a1
  4524: 28 08                    jump @318
      :                          @317
  4526: 64 a6                    s1 = a3
  4528: 49 11 10                 u64 [sp + 16] = 0
  4531: 01                       fallthrough
      :                          @318
  4532: 82 78 20                 a1 = u64 [a0 + 0x20]
  4535: 7b 18 48                 u64 [sp + 0x48] = a1
  4538: 82 75 28                 s0 = u64 [a0 + 0x28]
  4541: 81 77 30                 a0 = i32 [a0 + 0x30]
  4544: 7b 17 40                 u64 [sp + 0x40] = a0
  4547: 95 66 01                 s1 = s1 + 0x1
  4550: 01                       fallthrough
      :                          @319
  4551: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  4554: 51 06 27                 jump @324 if s1 == 0
      :                          @320
  4557: 82 59 20                 a2 = u64 [s0 + 0x20]
  4560: 82 17 48                 a0 = u64 [sp + 0x48]
  4563: 82 18 40                 a1 = u64 [sp + 0x40]
  4566: b4 90 01 52              ra = 82, jump [a2]
      :                          @321 [@dyn 41]
  4570: 51 07 ed                 jump @319 if a0 == 0
      :                          @322
  4573: 33 08 01                 a1 = 0x1
  4576: 01                       fallthrough
      :                          @323
  4577: 64 87                    a0 = a1
  4579: 82 10 60                 ra = u64 [sp + 0x60]
  4582: 82 15 58                 s0 = u64 [sp + 0x58]
  4585: 82 16 50                 s1 = u64 [sp + 0x50]
  4588: 95 11 68                 sp = sp + 0x68
  4591: 32 00                    ret
      :                          @324
  4593: 82 16 48                 s1 = u64 [sp + 0x48]
  4596: 64 67                    a0 = s1
  4598: 64 58                    a1 = s0
  4600: 82 19 18                 a2 = u64 [sp + 0x18]
  4603: 82 1a 38                 a3 = u64 [sp + 0x38]
  4606: 82 1b 30                 a4 = u64 [sp + 0x30]
  4609: 50 10 54 89 00           ra = 84, jump @338
      :                          @325 [@dyn 42]
  4614: 33 08 01                 a1 = 0x1
  4617: 52 07 d8                 jump @323 if a0 != 0
      :                          @326
  4620: 82 5a 18                 a3 = u64 [s0 + 0x18]
  4623: 64 67                    a0 = s1
  4625: 82 18 20                 a1 = u64 [sp + 0x20]
  4628: 82 19 28                 a2 = u64 [sp + 0x28]
  4631: b4 a0 01 56              ra = 86, jump [a3]
      :                          @327 [@dyn 43]
  4635: 33 08 01                 a1 = 0x1
  4638: 52 07 c3                 jump @323 if a0 != 0
      :                          @328
  4641: 82 17 10                 a0 = u64 [sp + 0x10]
  4644: 9a 77                    a0 = -a0
  4646: 7b 17 38                 u64 [sp + 0x38] = a0
  4649: 33 06 ff                 s1 = 0xffffffffffffffff
  4652: 01                       fallthrough
      :                          @329
  4653: 82 17 38                 a0 = u64 [sp + 0x38]
  4656: c8 67 07                 a0 = a0 + s1
  4659: 51 17 ff 42              jump @336 if a0 == 4294967295
      :                          @330
  4663: 82 59 20                 a2 = u64 [s0 + 0x20]
  4666: 82 17 48                 a0 = u64 [sp + 0x48]
  4669: 82 18 40                 a1 = u64 [sp + 0x40]
  4672: b4 90 01 58              ra = 88, jump [a2]
      :                          @331 [@dyn 44]
  4676: 95 66 01                 s1 = s1 + 0x1
  4679: 51 07 e6                 jump @329 if a0 == 0
      :                          @332
  4682: 28 37                    jump @337
      :                          @333
  4684: 82 6a 18                 a3 = u64 [s1 + 0x18]
  4687: 82 17 48                 a0 = u64 [sp + 0x48]
  4690: 82 18 20                 a1 = u64 [sp + 0x20]
  4693: 82 19 28                 a2 = u64 [sp + 0x28]
  4696: b4 a0 01 5a              ra = 90, jump [a3]
      :                          @334 [@dyn 45]
  4700: 33 08 01                 a1 = 0x1
  4703: 52 07 82                 jump @323 if a0 != 0
      :                          @335
  4706: 33 08                    a1 = 0
  4708: 82 16                    s1 = u64 [sp]
  4710: 82 17 10                 a0 = u64 [sp + 0x10]
  4713: 7a 67 30                 u32 [s1 + 0x30] = a0
  4716: 82 17 08                 a0 = u64 [sp + 0x8]
  4719: 78 67 38                 u8 [s1 + 0x38] = a0
  4722: 28 6f ff                 jump @323
      :                          @336
  4725: 82 16 10                 s1 = u64 [sp + 0x10]
  4728: 82 17 10                 a0 = u64 [sp + 0x10]
  4731: d8 76 08                 a1 = s1 <u a0
  4734: 28 63 ff                 jump @323
      :                          @337
  4737: 82 17 10                 a0 = u64 [sp + 0x10]
  4740: d8 76 08                 a1 = s1 <u a0
  4743: 28 5a ff                 jump @323
      :                          @338
  4746: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  4749: 7b 10 20                 u64 [sp + 0x20] = ra
  4752: 7b 15 18                 u64 [sp + 0x18] = s0
  4755: 7b 16 10                 u64 [sp + 0x10] = s1
  4758: 83 9c                    i32 a5 = a2 + 0
  4760: 33 02 00 00 11           t0 = 0x110000
  4765: 64 a6                    s1 = a3
  4767: 64 85                    s0 = a1
  4769: 64 7a                    a3 = a0
  4771: aa 2c 20                 jump @341 if a5 == t0
      :                          @339
  4774: 82 5c 20                 a5 = u64 [s0 + 0x20]
  4777: 64 a7                    a0 = a3
  4779: 64 98                    a1 = a2
  4781: 7b 1b 08                 u64 [sp + 0x8] = a4
  4784: 7b 1a                    u64 [sp] = a3
  4786: b4 c0 01 5c              ra = 92, jump [a5]
      :                          @340 [@dyn 46]
  4790: 82 1a                    a3 = u64 [sp]
  4792: 82 1b 08                 a4 = u64 [sp + 0x8]
  4795: 64 78                    a1 = a0
  4797: 33 07 01                 a0 = 0x1
  4800: 52 08 20                 jump @344 if a1 != 0
      :                          @341
  4803: 51 06 1a                 jump @343 if s1 == 0
      :                          @342
  4806: 82 5c 18                 a5 = u64 [s0 + 0x18]
  4809: 64 a7                    a0 = a3
  4811: 64 68                    a1 = s1
  4813: 64 b9                    a2 = a4
  4815: 82 10 20                 ra = u64 [sp + 0x20]
  4818: 82 15 18                 s0 = u64 [sp + 0x18]
  4821: 82 16 10                 s1 = u64 [sp + 0x10]
  4824: 95 11 28                 sp = sp + 0x28
  4827: 32 0c                    jump [a5]
      :                          @343
  4829: 33 07                    a0 = 0
  4831: 01                       fallthrough
      :                          @344
  4832: 82 10 20                 ra = u64 [sp + 0x20]
  4835: 82 15 18                 s0 = u64 [sp + 0x18]
  4838: 82 16 10                 s1 = u64 [sp + 0x10]
  4841: 95 11 28                 sp = sp + 0x28
  4844: 32 00                    ret
      :                          @345
  4846: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  4850: 7b 10 80 00              u64 [sp + 0x80] = ra
  4854: 7b 15 78                 u64 [sp + 0x78] = s0
  4857: 7b 16 70                 u64 [sp + 0x70] = s1
  4860: 49 11 60 20              u64 [sp + 96] = 0x20
  4864: 33 0a 03                 a3 = 0x3
  4867: 78 1a 68                 u8 [sp + 0x68] = a3
  4870: 82 96 20                 s1 = u64 [a2 + 0x20]
  4873: 49 11 30                 u64 [sp + 48] = 0
  4876: 49 11 40                 u64 [sp + 64] = 0
  4879: 7b 17 50                 u64 [sp + 0x50] = a0
  4882: 7b 18 58                 u64 [sp + 0x58] = a1
  4885: 51 06 07 01              jump @367 if s1 == 0
      :                          @346
  4889: 82 97 28                 a0 = u64 [a2 + 0x28]
  4892: 51 07 74 01              jump @377 if a0 == 0
      :                          @347
  4896: 49 11 28                 u64 [sp + 40] = 0
  4899: 82 95                    s0 = u64 [a2]
  4901: 7b 19 08                 u64 [sp + 0x8] = a2
  4904: 82 98 10                 a1 = u64 [a2 + 0x10]
  4907: 7b 18 18                 u64 [sp + 0x18] = a1
  4910: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  4913: 97 88 03                 a1 = a1 << 0x3
  4916: 98 88 03                 a1 = a1 >> 0x3
  4919: 95 88 01                 a1 = a1 + 0x1
  4922: 7b 18                    u64 [sp] = a1
  4924: 95 55 08                 s0 = s0 + 0x8
  4927: 96 78 38                 a1 = a0 * 0x38
  4930: 95 66 18                 s1 = s1 + 0x18
  4933: 33 07 48                 a0 = 0x48
  4936: 7b 17 10                 u64 [sp + 0x10] = a0
  4939: 01                       fallthrough
      :                          @348
  4940: 7b 18 20                 u64 [sp + 0x20] = a1
  4943: 82 59                    a2 = u64 [s0]
  4945: 51 09 17                 jump @351 if a2 == 0
      :                          @349
  4948: 82 1a 58                 a3 = u64 [sp + 0x58]
  4951: 82 17 50                 a0 = u64 [sp + 0x50]
  4954: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  4957: 82 aa 18                 a3 = u64 [a3 + 0x18]
  4960: b4 a0 01 5e              ra = 94, jump [a3]
      :                          @350 [@dyn 47]
  4964: 52 07 51 01              jump @380 if a0 != 0
      :                          @351
  4968: 81 67 10                 a0 = i32 [s1 + 0x10]
  4971: 7a 17 60                 u32 [sp + 0x60] = a0
  4974: 7c 67 18                 a0 = u8 [s1 + 0x18]
  4977: 78 17 68                 u8 [sp + 0x68] = a0
  4980: 81 67 14                 a0 = i32 [s1 + 0x14]
  4983: 7a 17 64                 u32 [sp + 0x64] = a0
  4986: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  4989: 82 67                    a0 = u64 [s1]
  4991: 51 08 26                 jump @356 if a1 == 0
      :                          @352
  4994: 52 18 01 16              jump @354 if a1 != 1
      :                          @353
  4998: 97 77 04                 a0 = a0 << 0x4
  5001: 82 18 18                 a1 = u64 [sp + 0x18]
  5004: c8 87 07                 a0 = a0 + a1
  5007: 82 78 08                 a1 = u64 [a0 + 0x8]
  5010: 82 19 10                 a2 = u64 [sp + 0x10]
  5013: aa 98 07                 jump @355 if a1 == a2
      :                          @354
  5016: 33 08                    a1 = 0
  5018: 28 0f                    jump @357
      :                          @355
  5020: 82 77                    a0 = u64 [a0]
  5022: 82 77                    a0 = u64 [a0]
  5024: 33 08 01                 a1 = 0x1
  5027: 28 06                    jump @357
      :                          @356
  5029: 33 08 01                 a1 = 0x1
  5032: 01                       fallthrough
      :                          @357
  5033: 7b 18 30                 u64 [sp + 0x30] = a1
  5036: 7b 17 38                 u64 [sp + 0x38] = a0
  5039: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  5042: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  5045: 51 08 26                 jump @362 if a1 == 0
      :                          @358
  5048: 52 18 01 16              jump @360 if a1 != 1
      :                          @359
  5052: 97 77 04                 a0 = a0 << 0x4
  5055: 82 18 18                 a1 = u64 [sp + 0x18]
  5058: c8 87 07                 a0 = a0 + a1
  5061: 82 78 08                 a1 = u64 [a0 + 0x8]
  5064: 82 19 10                 a2 = u64 [sp + 0x10]
  5067: aa 98 07                 jump @361 if a1 == a2
      :                          @360
  5070: 33 08                    a1 = 0
  5072: 28 0f                    jump @363
      :                          @361
  5074: 82 77                    a0 = u64 [a0]
  5076: 82 77                    a0 = u64 [a0]
  5078: 33 08 01                 a1 = 0x1
  5081: 28 06                    jump @363
      :                          @362
  5083: 33 08 01                 a1 = 0x1
  5086: 01                       fallthrough
      :                          @363
  5087: 7b 18 40                 u64 [sp + 0x40] = a1
  5090: 7b 17 48                 u64 [sp + 0x48] = a0
  5093: 82 67 08                 a0 = u64 [s1 + 0x8]
  5096: 97 77 04                 a0 = a0 << 0x4
  5099: 82 18 18                 a1 = u64 [sp + 0x18]
  5102: c8 78 08                 a1 = a1 + a0
  5105: 82 87                    a0 = u64 [a1]
  5107: 82 89 08                 a2 = u64 [a1 + 0x8]
  5110: 95 18 30                 a1 = sp + 0x30
  5113: b4 90 01 60              ra = 96, jump [a2]
      :                          @364 [@dyn 48]
  5117: 52 07 b8 00              jump @380 if a0 != 0
      :                          @365
  5121: 95 55 10                 s0 = s0 + 0x10
  5124: 82 18 20                 a1 = u64 [sp + 0x20]
  5127: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  5130: 95 66 38                 s1 = s1 + 0x38
  5133: 82 17 28                 a0 = u64 [sp + 0x28]
  5136: 95 77 01                 a0 = a0 + 0x1
  5139: 7b 17 28                 u64 [sp + 0x28] = a0
  5142: 52 08 36 ff              jump @348 if a1 != 0
      :                          @366
  5146: 28 69                    jump @375
      :                          @367
  5148: 82 97 18                 a0 = u64 [a2 + 0x18]
  5151: 51 07 71                 jump @377 if a0 == 0
      :                          @368
  5154: 82 95 10                 s0 = u64 [a2 + 0x10]
  5157: 33 0a                    a3 = 0
  5159: 97 78 04                 a1 = a0 << 0x4
  5162: c8 58 08                 a1 = a1 + s0
  5165: 7b 18 20                 u64 [sp + 0x20] = a1
  5168: 7b 19 08                 u64 [sp + 0x8] = a2
  5171: 82 96                    s1 = u64 [a2]
  5173: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  5176: 97 77 04                 a0 = a0 << 0x4
  5179: 98 77 04                 a0 = a0 >> 0x4
  5182: 95 77 01                 a0 = a0 + 0x1
  5185: 7b 17                    u64 [sp] = a0
  5187: 95 66 08                 s1 = s1 + 0x8
  5190: 01                       fallthrough
      :                          @369
  5191: 7b 1a 28                 u64 [sp + 0x28] = a3
  5194: 82 69                    a2 = u64 [s1]
  5196: 51 09 16                 jump @372 if a2 == 0
      :                          @370
  5199: 82 1a 58                 a3 = u64 [sp + 0x58]
  5202: 82 17 50                 a0 = u64 [sp + 0x50]
  5205: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  5208: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5211: b4 a0 01 62              ra = 98, jump [a3]
      :                          @371 [@dyn 49]
  5215: 52 07 56                 jump @380 if a0 != 0
      :                          @372
  5218: 82 57                    a0 = u64 [s0]
  5220: 82 59 08                 a2 = u64 [s0 + 0x8]
  5223: 95 18 30                 a1 = sp + 0x30
  5226: b4 90 01 64              ra = 100, jump [a2]
      :                          @373 [@dyn 50]
  5230: 52 07 47                 jump @380 if a0 != 0
      :                          @374
  5233: 95 66 10                 s1 = s1 + 0x10
  5236: 95 55 10                 s0 = s0 + 0x10
  5239: 82 1a 28                 a3 = u64 [sp + 0x28]
  5242: 95 aa 01                 a3 = a3 + 0x1
  5245: 82 17 20                 a0 = u64 [sp + 0x20]
  5248: ab 75 c7                 jump @369 if s0 != a0
      :                          @375
  5251: 82 19 08                 a2 = u64 [sp + 0x8]
  5254: 82 1a                    a3 = u64 [sp]
  5256: 82 97 08                 a0 = u64 [a2 + 0x8]
  5259: ac 7a 0d                 jump @378 if a3 <u a0
      :                          @376
  5262: 28 2c                    jump @381
      :                          @377
  5264: 33 0a                    a3 = 0
  5266: 82 97 08                 a0 = u64 [a2 + 0x8]
  5269: 54 07 25                 jump @381 if a0 <=u 0
      :                          @378
  5272: 82 97                    a0 = u64 [a2]
  5274: 97 a8 04                 a1 = a3 << 0x4
  5277: c8 87 09                 a2 = a0 + a1
  5280: 82 1a 58                 a3 = u64 [sp + 0x58]
  5283: 82 17 50                 a0 = u64 [sp + 0x50]
  5286: 82 98                    a1 = u64 [a2]
  5288: 82 99 08                 a2 = u64 [a2 + 0x8]
  5291: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5294: b4 a0 01 66              ra = 102, jump [a3]
      :                          @379 [@dyn 51]
  5298: 51 07 08                 jump @381 if a0 == 0
      :                          @380
  5301: 33 07 01                 a0 = 0x1
  5304: 28 05                    jump @382
      :                          @381
  5306: 33 07                    a0 = 0
  5308: 01                       fallthrough
      :                          @382
  5309: 82 10 80 00              ra = u64 [sp + 0x80]
  5313: 82 15 78                 s0 = u64 [sp + 0x78]
  5316: 82 16 70                 s1 = u64 [sp + 0x70]
  5319: 95 11 88 00              sp = sp + 0x88
  5323: 32 00                    ret
      :                          @383 [@dyn 52]
  5325: 32 00                    ret
      :                          @384 [@dyn 53]
  5327: 95 11 80                 sp = sp + 0xffffffffffffff80
  5330: 7b 10 78                 u64 [sp + 0x78] = ra
  5333: 7b 15 70                 u64 [sp + 0x70] = s0
  5336: 7b 16 68                 u64 [sp + 0x68] = s1
  5339: 64 92                    t0 = a2
  5341: 33 00                    ra = 0
  5343: 33 0b                    a4 = 0
  5345: 33 05                    s0 = 0
  5347: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
  5357: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
  5363: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
  5373: 82 79 10                 a2 = u64 [a0 + 0x10]
  5376: 7b 19 48                 u64 [sp + 0x48] = a2
  5379: 82 79                    a2 = u64 [a0]
  5381: 7b 19 38                 u64 [sp + 0x38] = a2
  5384: 82 77 08                 a0 = u64 [a0 + 0x8]
  5387: 7b 17 30                 u64 [sp + 0x30] = a0
  5390: 33 07 80 01 01           a0 = 0x10180
  5395: 7b 17 08                 u64 [sp + 0x8] = a0
  5398: 3a 07 08 00 03           a0 = u64 [0x30008]
  5403: 7b 17 60                 u64 [sp + 0x60] = a0
  5406: 7b 18 58                 u64 [sp + 0x58] = a1
  5409: 95 88 08                 a1 = a1 + 0x8
  5412: 7b 18                    u64 [sp] = a1
  5414: 33 0c 0a                 a5 = 0xa
  5417: 7b 12 20                 u64 [sp + 0x20] = t0
  5420: 7b 13 18                 u64 [sp + 0x18] = t1
  5423: 7b 14 10                 u64 [sp + 0x10] = t2
  5426: 28 3a                    jump @388
      :                          @385
  5428: 64 06                    s1 = ra
  5430: c8 89 07                 a0 = a2 + a1
  5433: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
  5436: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  5439: 88 77 01                 a0 = a0 <u 0x1
  5442: 01                       fallthrough
      :                          @386
  5443: 82 1a 48                 a3 = u64 [sp + 0x48]
  5446: 78 a7                    u8 [a3] = a0
  5448: 82 17 30                 a0 = u64 [sp + 0x30]
  5451: 82 7a 18                 a3 = u64 [a0 + 0x18]
  5454: 82 17 38                 a0 = u64 [sp + 0x38]
  5457: b4 a0 01 6c              ra = 108, jump [a3]
      :                          @387 [@dyn 54]
  5461: 64 5b                    a4 = s0
  5463: 82 12 20                 t0 = u64 [sp + 0x20]
  5466: 82 13 18                 t1 = u64 [sp + 0x18]
  5469: 82 14 10                 t2 = u64 [sp + 0x10]
  5472: 64 60                    ra = s1
  5474: 33 0c 0a                 a5 = 0xa
  5477: 82 15 40                 s0 = u64 [sp + 0x40]
  5480: 52 07 63 01              jump @429 if a0 != 0
      :                          @388
  5484: 84 57 ff 00              a0 = s0 & 0xff
  5488: 52 07 57 01              jump @428 if a0 != 0
      :                          @389
  5492: 7b 1b 50                 u64 [sp + 0x50] = a4
  5495: ae 02 0a                 jump @392 if t0 >=u ra
      :                          @390
  5498: 28 ef 00                 jump @419
      :                          @391
  5501: ac 02 ec 00              jump @419 if t0 <u ra
      :                          @392
  5505: c9 02 08                 a1 = t0 - ra
  5508: 82 16 58                 s1 = u64 [sp + 0x58]
  5511: c8 06 06                 s1 = s1 + ra
  5514: 55 18 10 1d              jump @398 if a1 >=u 16
      :                          @393
  5518: aa 02 d8 00              jump @418 if t0 == ra
      :                          @394
  5522: 33 0a                    a3 = 0
  5524: 01                       fallthrough
      :                          @395
  5525: c8 a6 07                 a0 = s1 + a3
  5528: 7c 77                    a0 = u8 [a0]
  5530: aa c7 a5 00              jump @413 if a0 == a5
      :                          @396
  5534: 95 aa 01                 a3 = a3 + 0x1
  5537: ab a8 f4                 jump @395 if a1 != a3
      :                          @397
  5540: 28 c2 00                 jump @418
      :                          @398
  5543: 95 69 07                 a2 = s1 + 0x7
  5546: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
  5549: c9 6a 07                 a0 = a3 - s1
  5552: d3 6a 0a                 a3 = a3 ^ s1
  5555: 88 aa 01                 a3 = a3 <u 0x1
  5558: 88 7b 01                 a4 = a0 <u 0x1
  5561: d4 ba 0a                 a3 = a3 | a4
  5564: 51 0a 45                 jump @404 if a3 == 0
      :                          @399
  5567: 33 07                    a0 = 0
  5569: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  5572: 82 1b                    a4 = u64 [sp]
  5574: c8 0b 0b                 a4 = a4 + ra
  5577: 28 08                    jump @401
      :                          @400
  5579: 82 1b                    a4 = u64 [sp]
  5581: c8 0b 0b                 a4 = a4 + ra
  5584: 01                       fallthrough
      :                          @401
  5585: c8 76 0c                 a5 = s1 + a0
  5588: 82 cc                    a5 = u64 [a5]
  5590: c8 7b 09                 a2 = a4 + a0
  5593: 82 99                    a2 = u64 [a2]
  5595: d3 4c 05                 s0 = a5 ^ t2
  5598: c8 35 05                 s0 = s0 + t1
  5601: e0 c5 0c                 a5 = s0 & ~a5
  5604: d3 49 05                 s0 = a2 ^ t2
  5607: c8 35 05                 s0 = s0 + t1
  5610: e0 95 09                 a2 = s0 & ~a2
  5613: d4 c9 09                 a2 = a2 | a5
  5616: 82 1c 60                 a5 = u64 [sp + 0x60]
  5619: d2 c9 09                 a2 = a2 & a5
  5622: 52 09 1f                 jump @407 if a2 != 0
      :                          @402
  5625: 95 77 10                 a0 = a0 + 0x10
  5628: ae 7a d5                 jump @401 if a3 >=u a0
      :                          @403
  5631: 28 16                    jump @407
      :                          @404
  5633: c8 a6 0b                 a4 = s1 + a3
  5636: 7c bb                    a4 = u8 [a4]
  5638: aa cb 51                 jump @416 if a4 == a5
      :                          @405
  5641: 95 aa 01                 a3 = a3 + 0x1
  5644: ab a7 f5                 jump @404 if a0 != a3
      :                          @406
  5647: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  5650: ae 7a b9                 jump @400 if a3 >=u a0
      :                          @407
  5653: aa 87 9a 00              jump @425 if a0 == a1
      :                          @408
  5657: 33 0a                    a3 = 0
  5659: c8 76 06                 s1 = s1 + a0
  5662: c9 72 08                 a1 = t0 - a0
  5665: c9 08 08                 a1 = a1 - ra
  5668: 33 0c 0a                 a5 = 0xa
  5671: 82 1b 50                 a4 = u64 [sp + 0x50]
  5674: 01                       fallthrough
      :                          @409
  5675: c8 a6 09                 a2 = s1 + a3
  5678: 7c 99                    a2 = u8 [a2]
  5680: aa c9 0b                 jump @412 if a2 == a5
      :                          @410
  5683: 95 aa 01                 a3 = a3 + 0x1
  5686: ab a8 f5                 jump @409 if a1 != a3
      :                          @411
  5689: 28 2d                    jump @418
      :                          @412
  5691: c8 7a 0a                 a3 = a3 + a0
  5694: 01                       fallthrough
      :                          @413
  5695: c8 0a 0a                 a3 = a3 + ra
  5698: 95 a0 01                 ra = a3 + 0x1
  5701: ae 2a 38 ff              jump @391 if a3 >=u t0
      :                          @414
  5705: 82 17 58                 a0 = u64 [sp + 0x58]
  5708: c8 7a 0a                 a3 = a3 + a0
  5711: 7c a7                    a0 = u8 [a3]
  5713: ab c7 2c ff              jump @391 if a0 != a5
      :                          @415
  5717: 28 61                    jump @426
      :                          @416
  5719: 82 1b 50                 a4 = u64 [sp + 0x50]
  5722: c8 0a 0a                 a3 = a3 + ra
  5725: 95 a0 01                 ra = a3 + 0x1
  5728: ac 2a e9                 jump @414 if a3 <u t0
      :                          @417
  5731: 28 1a ff                 jump @391
      :                          @418
  5734: 64 20                    ra = t0
  5736: 01                       fallthrough
      :                          @419
  5737: 49 11 40 01              u64 [sp + 64] = 0x1
  5741: 64 b5                    s0 = a4
  5743: 64 26                    s1 = t0
  5745: aa 2b 56                 jump @428 if a4 == t0
      :                          @420
  5748: 82 17 48                 a0 = u64 [sp + 0x48]
  5751: 7c 77                    a0 = u8 [a0]
  5753: 51 07 22                 jump @423 if a0 == 0
      :                          @421
  5756: 82 17 30                 a0 = u64 [sp + 0x30]
  5759: 82 7a 18                 a3 = u64 [a0 + 0x18]
  5762: 33 09 04                 a2 = 0x4
  5765: 82 17 38                 a0 = u64 [sp + 0x38]
  5768: 82 18 08                 a1 = u64 [sp + 0x8]
  5771: 7b 10 28                 u64 [sp + 0x28] = ra
  5774: b4 a0 01 6e              ra = 110, jump [a3]
      :                          @422 [@dyn 55]
  5778: 82 1b 50                 a4 = u64 [sp + 0x50]
  5781: 82 10 28                 ra = u64 [sp + 0x28]
  5784: 52 07 33                 jump @429 if a0 != 0
      :                          @423
  5787: c9 b6 09                 a2 = s1 - a4
  5790: 82 18 58                 a1 = u64 [sp + 0x58]
  5793: c8 b8 08                 a1 = a1 + a4
  5796: ab b6 90 fe              jump @385 if s1 != a4
      :                          @424
  5800: 64 06                    s1 = ra
  5802: 33 07                    a0 = 0
  5804: 28 97 fe                 jump @386
      :                          @425
  5807: 64 20                    ra = t0
  5809: 82 1b 50                 a4 = u64 [sp + 0x50]
  5812: 28 b5                    jump @419
      :                          @426
  5814: 49 11 40                 u64 [sp + 64] = 0
  5817: 64 05                    s0 = ra
  5819: 64 06                    s1 = ra
  5821: 82 17 48                 a0 = u64 [sp + 0x48]
  5824: 7c 77                    a0 = u8 [a0]
  5826: 52 07 ba                 jump @421 if a0 != 0
      :                          @427
  5829: 28 d6                    jump @423
      :                          @428
  5831: 33 07                    a0 = 0
  5833: 28 06                    jump @430
      :                          @429
  5835: 33 07 01                 a0 = 0x1
  5838: 01                       fallthrough
      :                          @430
  5839: 82 10 78                 ra = u64 [sp + 0x78]
  5842: 82 15 70                 s0 = u64 [sp + 0x70]
  5845: 82 16 68                 s1 = u64 [sp + 0x68]
  5848: 95 11 80 00              sp = sp + 0x80
  5852: 32 00                    ret
      :                          @431 [@dyn 56]
  5854: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  5857: 7b 10 20                 u64 [sp + 0x20] = ra
  5860: 7b 15 18                 u64 [sp + 0x18] = s0
  5863: 7b 16 10                 u64 [sp + 0x10] = s1
  5866: 82 75 10                 s0 = u64 [a0 + 0x10]
  5869: 7c 59                    a2 = u8 [s0]
  5871: 82 7b                    a4 = u64 [a0]
  5873: 82 76 08                 s1 = u64 [a0 + 0x8]
  5876: 51 09 32                 jump @435 if a2 == 0
      :                          @432
  5879: 82 6a 18                 a3 = u64 [s1 + 0x18]
  5882: 7b 18 08                 u64 [sp + 0x8] = a1
  5885: 33 08 80 01 01           a1 = 0x10180
  5890: 33 09 04                 a2 = 0x4
  5893: 64 b7                    a0 = a4
  5895: 7b 1b                    u64 [sp] = a4
  5897: b4 a0 01 72              ra = 114, jump [a3]
      :                          @433 [@dyn 57]
  5901: 82 18 08                 a1 = u64 [sp + 0x8]
  5904: 82 1b                    a4 = u64 [sp]
  5906: 51 07 14                 jump @435 if a0 == 0
      :                          @434
  5909: 33 07 01                 a0 = 0x1
  5912: 82 10 20                 ra = u64 [sp + 0x20]
  5915: 82 15 18                 s0 = u64 [sp + 0x18]
  5918: 82 16 10                 s1 = u64 [sp + 0x10]
  5921: 95 11 28                 sp = sp + 0x28
  5924: 32 00                    ret
      :                          @435
  5926: 83 87                    i32 a0 = a1 + 0
  5928: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  5931: 88 77 01                 a0 = a0 <u 0x1
  5934: 78 57                    u8 [s0] = a0
  5936: 82 6c 20                 a5 = u64 [s1 + 0x20]
  5939: 64 b7                    a0 = a4
  5941: 82 10 20                 ra = u64 [sp + 0x20]
  5944: 82 15 18                 s0 = u64 [sp + 0x18]
  5947: 82 16 10                 s1 = u64 [sp + 0x10]
  5950: 95 11 28                 sp = sp + 0x28
  5953: 32 0c                    jump [a5]
      :                          @436 [@dyn 58]
  5955: 64 8a                    a3 = a1
  5957: 33 08 50 01 01           a1 = 0x10150
  5962: 64 a9                    a2 = a3
  5964: 28 a2 fb                 jump @345
      :                          @437
  5967: 95 11 70 ff              sp = sp + 0xffffffffffffff70
  5971: 7b 10 88 00              u64 [sp + 0x88] = ra
  5975: 7b 15 80 00              u64 [sp + 0x80] = s0
  5979: 7b 16 78                 u64 [sp + 0x78] = s1
  5982: 64 75                    s0 = a0
  5984: 7c 77 08                 a0 = u8 [a0 + 0x8]
  5987: 64 8b                    a4 = a1
  5989: 33 08 01                 a1 = 0x1
  5992: 33 06 01                 s1 = 0x1
  5995: 51 07 1d                 jump @439 if a0 == 0
      :                          @438
  5998: 78 56 08                 u8 [s0 + 0x8] = s1
  6001: 46 15 09 01              u8 [s0 + 9] = 0x1
  6005: 64 57                    a0 = s0
  6007: 82 10 88 00              ra = u64 [sp + 0x88]
  6011: 82 15 80 00              s0 = u64 [sp + 0x80]
  6015: 82 16 78                 s1 = u64 [sp + 0x78]
  6018: 95 11 90 00              sp = sp + 0x90
  6022: 32 00                    ret
      :                          @439
  6024: 64 9a                    a3 = a2
  6026: 82 5c                    a5 = u64 [s0]
  6028: 80 c7 34                 a0 = u32 [a5 + 0x34]
  6031: 7c 58 09                 a1 = u8 [s0 + 0x9]
  6034: 84 79 04                 a2 = a0 & 0x4
  6037: 52 09 43                 jump @445 if a2 != 0
      :                          @440
  6040: 51 08 31                 jump @443 if a1 == 0
      :                          @441
  6043: 82 c8 28                 a1 = u64 [a5 + 0x28]
  6046: 82 c7 20                 a0 = u64 [a5 + 0x20]
  6049: 82 83 18                 t1 = u64 [a1 + 0x18]
  6052: 33 08 84 01 01           a1 = 0x10184
  6057: 33 09 02                 a2 = 0x2
  6060: 64 a6                    s1 = a3
  6062: 7b 1b 10                 u64 [sp + 0x10] = a4
  6065: 7b 1c 08                 u64 [sp + 0x8] = a5
  6068: b4 30 01 76              ra = 118, jump [t1]
      :                          @442 [@dyn 59]
  6072: 82 1c 08                 a5 = u64 [sp + 0x8]
  6075: 82 1b 10                 a4 = u64 [sp + 0x10]
  6078: 64 6a                    a3 = s1
  6080: 33 08 01                 a1 = 0x1
  6083: 33 06 01                 s1 = 0x1
  6086: 52 07 a8                 jump @438 if a0 != 0
      :                          @443
  6089: 64 b7                    a0 = a4
  6091: 64 c8                    a1 = a5
  6093: b4 a0 01 78              ra = 120, jump [a3]
      :                          @444 [@dyn 60]
  6097: 33 08 01                 a1 = 0x1
  6100: 64 76                    s1 = a0
  6102: 28 98                    jump @438
      :                          @445
  6104: 52 08 36                 jump @449 if a1 != 0
      :                          @446
  6107: 82 c8 28                 a1 = u64 [a5 + 0x28]
  6110: 82 c7 20                 a0 = u64 [a5 + 0x20]
  6113: 82 83 18                 t1 = u64 [a1 + 0x18]
  6116: 33 08 88 01 01           a1 = 0x10188
  6121: 33 09 01                 a2 = 0x1
  6124: 33 06 01                 s1 = 0x1
  6127: 7b 1a                    u64 [sp] = a3
  6129: 7b 1b 10                 u64 [sp + 0x10] = a4
  6132: 7b 1c 08                 u64 [sp + 0x8] = a5
  6135: b4 30 01 7a              ra = 122, jump [t1]
      :                          @447 [@dyn 61]
  6139: 82 1c 08                 a5 = u64 [sp + 0x8]
  6142: 82 1b 10                 a4 = u64 [sp + 0x10]
  6145: 82 1a                    a3 = u64 [sp]
  6147: 33 08 01                 a1 = 0x1
  6150: 52 07 68 ff              jump @438 if a0 != 0
      :                          @448
  6154: 81 c7 34                 a0 = i32 [a5 + 0x34]
  6157: 01                       fallthrough
      :                          @449
  6158: 33 06 01                 s1 = 0x1
  6161: 78 16 37                 u8 [sp + 0x37] = s1
  6164: 82 c8 20                 a1 = u64 [a5 + 0x20]
  6167: 82 c9 28                 a2 = u64 [a5 + 0x28]
  6170: 7b 18 18                 u64 [sp + 0x18] = a1
  6173: 7b 19 20                 u64 [sp + 0x20] = a2
  6176: 95 18 37                 a1 = sp + 0x37
  6179: 7b 18 28                 u64 [sp + 0x28] = a1
  6182: 81 c8 30                 a1 = i32 [a5 + 0x30]
  6185: 7c c9 38                 a2 = u8 [a5 + 0x38]
  6188: 82 c3                    t1 = u64 [a5]
  6190: 82 c4 08                 t2 = u64 [a5 + 0x8]
  6193: 82 c0 10                 ra = u64 [a5 + 0x10]
  6196: 82 c2 18                 t0 = u64 [a5 + 0x18]
  6199: 7a 17 6c                 u32 [sp + 0x6c] = a0
  6202: 7a 18 68                 u32 [sp + 0x68] = a1
  6205: 78 19 70                 u8 [sp + 0x70] = a2
  6208: 7b 13 38                 u64 [sp + 0x38] = t1
  6211: 7b 14 40                 u64 [sp + 0x40] = t2
  6214: 7b 10 48                 u64 [sp + 0x48] = ra
  6217: 7b 12 50                 u64 [sp + 0x50] = t0
  6220: 95 17 18                 a0 = sp + 0x18
  6223: 7b 17 58                 u64 [sp + 0x58] = a0
  6226: 33 07 50 01 01           a0 = 0x10150
  6231: 7b 17 60                 u64 [sp + 0x60] = a0
  6234: 95 18 38                 a1 = sp + 0x38
  6237: 64 b7                    a0 = a4
  6239: b4 a0 01 7c              ra = 124, jump [a3]
      :                          @450 [@dyn 62]
  6243: 52 07 20                 jump @453 if a0 != 0
      :                          @451
  6246: 82 18 60                 a1 = u64 [sp + 0x60]
  6249: 82 17 58                 a0 = u64 [sp + 0x58]
  6252: 82 8a 18                 a3 = u64 [a1 + 0x18]
  6255: 33 08 86 01 01           a1 = 0x10186
  6260: 33 09 02                 a2 = 0x2
  6263: b4 a0 01 7e              ra = 126, jump [a3]
      :                          @452 [@dyn 63]
  6267: 64 76                    s1 = a0
  6269: 33 08 01                 a1 = 0x1
  6272: 28 ee fe                 jump @438
      :                          @453
  6275: 33 08 01                 a1 = 0x1
  6278: 28 e8 fe                 jump @438
      :                          @454
  6281: 51 08 9b 00              jump @475 if a1 == 0
      :                          @455
  6285: 64 79                    a2 = a0
  6287: 7c 77                    a0 = u8 [a0]
  6289: 51 07 91 00              jump @474 if a0 == 0
      :                          @456
  6293: 51 27 ff 00 90 00        jump @476 if a0 == 255
      :                          @457
  6299: 6c 7a                    a3 = sext.b a0
  6301: 57 0a 09                 jump @459 if a3 <s 0
      :                          @458
  6304: 33 0a                    a3 = 0
  6306: 33 08                    a1 = 0
  6308: 28 73                    jump @473
      :                          @459
  6310: 55 27 c0 00 0d           jump @461 if a0 >=u 192
      :                          @460
  6315: 33 0a 01                 a3 = 0x1
  6318: 33 0b 80                 a4 = 0xffffffffffffff80
  6321: 28 4a                    jump @470
      :                          @461
  6323: 55 27 e0 00 0e           jump @463 if a0 >=u 224
      :                          @462
  6328: 33 0a 02                 a3 = 0x2
  6331: 33 0b 40 ff              a4 = 0xffffffffffffff40
  6335: 28 3c                    jump @470
      :                          @463
  6337: 55 27 f0 00 0e           jump @465 if a0 >=u 240
      :                          @464
  6342: 33 0a 03                 a3 = 0x3
  6345: 33 0b 20 ff              a4 = 0xffffffffffffff20
  6349: 28 2e                    jump @470
      :                          @465
  6351: 55 27 f8 00 0e           jump @467 if a0 >=u 248
      :                          @466
  6356: 33 0a 04                 a3 = 0x4
  6359: 33 0b 10 ff              a4 = 0xffffffffffffff10
  6363: 28 20                    jump @470
      :                          @467
  6365: 55 27 fc 00 0e           jump @469 if a0 >=u 252
      :                          @468
  6370: 33 0a 05                 a3 = 0x5
  6373: 33 0b 08 ff              a4 = 0xffffffffffffff08
  6377: 28 12                    jump @470
      :                          @469
  6379: 88 7a fe 00              a3 = a0 <u 0xfe
  6383: 33 0b 04 ff              a4 = 0xffffffffffffff04
  6387: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  6391: 85 aa 07                 a3 = a3 ^ 0x7
  6394: 01                       fallthrough
      :                          @470
  6395: ae 8a 2b                 jump @477 if a3 >=u a1
      :                          @471
  6398: 33 08                    a1 = 0
  6400: c8 b7 07                 a0 = a0 + a4
  6403: 64 ab                    a4 = a3
  6405: 01                       fallthrough
      :                          @472
  6406: c8 b9 0c                 a5 = a2 + a4
  6409: 7c cc                    a5 = u8 [a5]
  6411: 97 88 08                 a1 = a1 << 0x8
  6414: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  6417: d4 c8 08                 a1 = a1 | a5
  6420: 52 0b f2                 jump @472 if a4 != 0
      :                          @473
  6423: 8a a9 03                 i32 a2 = a3 << 0x3
  6426: cf 97 07                 a0 = a0 << a2
  6429: c8 87 07                 a0 = a0 + a1
  6432: 32 00                    ret
      :                          @474
  6434: 32 00                    ret
      :                          @475
  6436: 00                       trap
      :                          @476
  6437: 00                       trap
      :                          @477
  6438: 00                       trap
      :                          @478 [@dyn 64]
  6439: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  6442: 7b 10 28                 u64 [sp + 0x28] = ra
  6445: 7b 15 20                 u64 [sp + 0x20] = s0
  6448: 7b 16 18                 u64 [sp + 0x18] = s1
  6451: 64 86                    s1 = a1
  6453: 82 88 28                 a1 = u64 [a1 + 0x28]
  6456: 82 6a 20                 a3 = u64 [s1 + 0x20]
  6459: 82 8b 18                 a4 = u64 [a1 + 0x18]
  6462: 64 75                    s0 = a0
  6464: 33 08 48 01 01           a1 = 0x10148
  6469: 33 09 01                 a2 = 0x1
  6472: 64 a7                    a0 = a3
  6474: b4 b0 02 82 00           ra = 130, jump [a4]
      :                          @479 [@dyn 65]
  6479: 7b 16                    u64 [sp] = s1
  6481: 78 17 08                 u8 [sp + 0x8] = a0
  6484: 46 11 09                 u8 [sp + 9] = 0
  6487: 7b 15 10                 u64 [sp + 0x10] = s0
  6490: 33 09 88 00              a2 = 0x88
  6494: 64 17                    a0 = sp
  6496: 95 18 10                 a1 = sp + 0x10
  6499: 50 20 84 00 ec fd        ra = 132, jump @437
      :                          @480 [@dyn 66]
  6505: 33 07 01                 a0 = 0x1
  6508: 7c 18 08                 a1 = u8 [sp + 0x8]
  6511: 52 08 1b                 jump @482 if a1 != 0
      :                          @481
  6514: 82 17                    a0 = u64 [sp]
  6516: 82 78 28                 a1 = u64 [a0 + 0x28]
  6519: 82 77 20                 a0 = u64 [a0 + 0x20]
  6522: 82 8a 18                 a3 = u64 [a1 + 0x18]
  6525: 33 08 89 01 01           a1 = 0x10189
  6530: 33 09 01                 a2 = 0x1
  6533: b4 a0 02 86 00           ra = 134, jump [a3]
      :                          @482 [@dyn 67]
  6538: 82 10 28                 ra = u64 [sp + 0x28]
  6541: 82 15 20                 s0 = u64 [sp + 0x20]
  6544: 82 16 18                 s1 = u64 [sp + 0x18]
  6547: 95 11 30                 sp = sp + 0x30
  6550: 32 00                    ret
      :                          @483 [@dyn 68]
  6552: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  6556: 7b 10 80 00              u64 [sp + 0x80] = ra
  6560: 80 89 34                 a2 = u32 [a1 + 0x34]
  6563: 82 77                    a0 = u64 [a0]
  6565: 84 9a 10                 a3 = a2 & 0x10
  6568: 52 0a 16                 jump @486 if a3 != 0
      :                          @484
  6571: 84 99 20                 a2 = a2 & 0x20
  6574: 52 09 41                 jump @489 if a2 != 0
      :                          @485
  6577: 7c 77                    a0 = u8 [a0]
  6579: 82 10 80 00              ra = u64 [sp + 0x80]
  6583: 95 11 88 00              sp = sp + 0x88
  6587: 28 9d f5                 jump @283
      :                          @486
  6590: 7c 77                    a0 = u8 [a0]
  6592: 33 0b 81 00              a4 = 0x81
  6596: 95 19 7f                 a2 = sp + 0x7f
  6599: 33 02 57                 t0 = 0x57
  6602: 01                       fallthrough
      :                          @487
  6603: 64 bc                    a5 = a4
  6605: 84 7b 0f                 a4 = a0 & 0xf
  6608: 97 77 38                 a0 = a0 << 0x38
  6611: 98 77 3c                 a0 = a0 >> 0x3c
  6614: 88 b3 0a                 t1 = a4 <u 0xa
  6617: 33 0a 30                 a3 = 0x30
  6620: da 32 0a                 a3 = t0 if t1 == 0
  6623: be ba 0a                 i32 a3 = a3 + a4
  6626: 78 9a                    u8 [a2] = a3
  6628: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  6631: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
  6634: 52 07 e1                 jump @487 if a0 != 0
      :                          @488
  6637: 28 31                    jump @491
      :                          @489
  6639: 7c 77                    a0 = u8 [a0]
  6641: 33 0b 81 00              a4 = 0x81
  6645: 95 19 7f                 a2 = sp + 0x7f
  6648: 33 02 37                 t0 = 0x37
  6651: 01                       fallthrough
      :                          @490
  6652: 64 bc                    a5 = a4
  6654: 84 7b 0f                 a4 = a0 & 0xf
  6657: 97 77 38                 a0 = a0 << 0x38
  6660: 98 77 3c                 a0 = a0 >> 0x3c
  6663: 88 b3 0a                 t1 = a4 <u 0xa
  6666: 33 0a 30                 a3 = 0x30
  6669: da 32 0a                 a3 = t0 if t1 == 0
  6672: be ba 0a                 i32 a3 = a3 + a4
  6675: 78 9a                    u8 [a2] = a3
  6677: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  6680: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
  6683: 52 07 e1                 jump @490 if a0 != 0
      :                          @491
  6686: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
  6689: 56 27 80 00 28           jump @494 if a0 >u 128
      :                          @492
  6694: 9a bb 81 00              a4 = 0x81 - a4
  6698: 64 1a                    a3 = sp
  6700: c8 7a 0a                 a3 = a3 + a0
  6703: 33 09 02                 a2 = 0x2
  6706: 64 87                    a0 = a1
  6708: 33 08 8a 01 01           a1 = 0x1018a
  6713: 50 20 8a 00 46 f6        ra = 138, jump @293
      :                          @493 [@dyn 69]
  6719: 82 10 80 00              ra = u64 [sp + 0x80]
  6723: 95 11 88 00              sp = sp + 0x88
  6727: 32 00                    ret
      :                          @494
  6729: 00                       trap
