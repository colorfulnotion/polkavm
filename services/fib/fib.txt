// RO data = 648/648 bytes
// RW data = 16/4176 bytes
// Stack size = 8192 bytes
// Jump table entry point size = 2 bytes
// RO data = [70, 73, 66, 32, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 58, 32, 116, 105, 109, 101, 115, 108, 111, 116, 61, 32, 115, 101, 114, 118, 105, 99, 101, 95, 105, 110, 100, 101, 120, 61, 32, 115, 101, 110, 100, 101, 114, 61, 32, 97, 109, 111, 117, 110, 116, 61, 32, 114, 101, 99, 101, 105, 118, 101, 114, 61, 32, 109, 101, 109, 111, 61, 32, 103, 97, 115, 95, 108, 105, 109, 105, 116, 61, 70, 73, 66, 32, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 32, 103, 97, 115, 58, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 52, 41, 0, 0, 0, 0, 0, 0, 0, 91, 32, 32, 32, 32, 44, 32, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 119, 114, 105, 116, 101, 95, 114, 101, 115, 117, 108, 116, 32, 107, 101, 121, 61, 44, 32, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 26, 0, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 41, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 57, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 49, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 67, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 73, 0, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 84, 0, 1, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 109, 0, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 52, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 54, 0, 0, 0, 0, 0, 0, 0, 60, 0, 0, 0, 0, 0, 0, 0, 68, 0, 0, 0, 0, 0, 0, 0, 102, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 104, 0, 0, 0, 0, 0, 0, 0, 110, 0, 0, 0, 0, 0, 0, 0, 114, 0, 0, 0, 0, 0, 0, 0, 93, 1, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 110, 1, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0]
// RW data = [75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 2218
// Code size = 6553 bytes

      :                          @0
     0: 28 0e 02 00 00           jump @38
      :                          @1
     5: 28 64 02 00 00           jump @43
      :                          @2
    10: 28 2a 04                 jump @99
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 80 89 34                 a2 = u32 [a1 + 0x34]
    24: 84 9a 10                 a3 = a2 & 0x10
    27: 52 0a 16                 jump @6 if a3 != 0
      :                          @4
    30: 84 99 20                 a2 = a2 & 0x20
    33: 52 09 51                 jump @10 if a2 != 0
      :                          @5
    36: 80 77                    a0 = u32 [a0]
    38: 82 10 80 00              ra = u64 [sp + 0x80]
    42: 95 11 88 00              sp = sp + 0x88
    46: 28 79 0e                 jump @278
      :                          @6
    49: 81 7b                    a4 = i32 [a0]
    51: 33 09 81 00              a2 = 0x81
    55: 95 17 7f                 a0 = sp + 0x7f
    58: 33 02 57                 t0 = 0x57
    61: 01                       fallthrough
      :                          @7
    62: 64 9c                    a5 = a2
    64: 8b ba 04                 i32 a3 = a4 >> 0x4
    67: 84 bb 0f                 a4 = a4 & 0xf
    70: 88 b3 0a                 t1 = a4 <u 0xa
    73: 33 09 30                 a2 = 0x30
    76: da 32 09                 a2 = t0 if t1 == 0
    79: be b9 09                 i32 a2 = a2 + a4
    82: 78 79                    u8 [a0] = a2
    84: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
    87: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
    90: 64 ab                    a4 = a3
    92: 52 0a e2                 jump @7 if a3 != 0
      :                          @8
    95: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
    98: 56 27 80 00 69           jump @16 if a0 >u 128
      :                          @9
   103: 9a 9b 81 00              a4 = 0x81 - a2
   107: 64 1a                    a3 = sp
   109: c8 7a 0a                 a3 = a3 + a0
   112: 28 42                    jump @14
      :                          @10
   114: 81 7b                    a4 = i32 [a0]
   116: 33 09 81 00              a2 = 0x81
   120: 95 17 7f                 a0 = sp + 0x7f
   123: 33 02 37                 t0 = 0x37
   126: 01                       fallthrough
      :                          @11
   127: 64 9c                    a5 = a2
   129: 8b ba 04                 i32 a3 = a4 >> 0x4
   132: 84 bb 0f                 a4 = a4 & 0xf
   135: 88 b3 0a                 t1 = a4 <u 0xa
   138: 33 09 30                 a2 = 0x30
   141: da 32 09                 a2 = t0 if t1 == 0
   144: be b9 09                 i32 a2 = a2 + a4
   147: 78 79                    u8 [a0] = a2
   149: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   152: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   155: 64 ab                    a4 = a3
   157: 52 0a e2                 jump @11 if a3 != 0
      :                          @12
   160: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   163: 56 27 80 00 28           jump @16 if a0 >u 128
      :                          @13
   168: 9a 9b 81 00              a4 = 0x81 - a2
   172: 64 1a                    a3 = sp
   174: c8 7a 0a                 a3 = a3 + a0
   177: 01                       fallthrough
      :                          @14
   178: 33 09 02                 a2 = 0x2
   181: 64 87                    a0 = a1
   183: 33 08 93 00 01           a1 = 0x10093
   188: 50 10 04 07 0f           ra = 4, jump @288
      :                          @15 [@dyn 2]
   193: 82 10 80 00              ra = u64 [sp + 0x80]
   197: 95 11 88 00              sp = sp + 0x88
   201: 32 00                    ret
      :                          @16
   203: 00                       trap
      :                          @17 [@dyn 3]
   204: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   208: 7b 10 80 00              u64 [sp + 0x80] = ra
   212: 80 89 34                 a2 = u32 [a1 + 0x34]
   215: 84 9a 10                 a3 = a2 & 0x10
   218: 52 0a 16                 jump @20 if a3 != 0
      :                          @18
   221: 84 99 20                 a2 = a2 & 0x20
   224: 52 09 51                 jump @24 if a2 != 0
      :                          @19
   227: 82 77                    a0 = u64 [a0]
   229: 82 10 80 00              ra = u64 [sp + 0x80]
   233: 95 11 88 00              sp = sp + 0x88
   237: 28 ba 0d                 jump @278
      :                          @20
   240: 82 7b                    a4 = u64 [a0]
   242: 33 09 81 00              a2 = 0x81
   246: 95 17 7f                 a0 = sp + 0x7f
   249: 33 02 57                 t0 = 0x57
   252: 01                       fallthrough
      :                          @21
   253: 64 9c                    a5 = a2
   255: 98 ba 04                 a3 = a4 >> 0x4
   258: 84 bb 0f                 a4 = a4 & 0xf
   261: 88 b3 0a                 t1 = a4 <u 0xa
   264: 33 09 30                 a2 = 0x30
   267: da 32 09                 a2 = t0 if t1 == 0
   270: be b9 09                 i32 a2 = a2 + a4
   273: 78 79                    u8 [a0] = a2
   275: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   278: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   281: 64 ab                    a4 = a3
   283: 52 0a e2                 jump @21 if a3 != 0
      :                          @22
   286: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   289: 56 27 80 00 69           jump @30 if a0 >u 128
      :                          @23
   294: 9a 9b 81 00              a4 = 0x81 - a2
   298: 64 1a                    a3 = sp
   300: c8 7a 0a                 a3 = a3 + a0
   303: 28 42                    jump @28
      :                          @24
   305: 82 7b                    a4 = u64 [a0]
   307: 33 09 81 00              a2 = 0x81
   311: 95 17 7f                 a0 = sp + 0x7f
   314: 33 02 37                 t0 = 0x37
   317: 01                       fallthrough
      :                          @25
   318: 64 9c                    a5 = a2
   320: 98 ba 04                 a3 = a4 >> 0x4
   323: 84 bb 0f                 a4 = a4 & 0xf
   326: 88 b3 0a                 t1 = a4 <u 0xa
   329: 33 09 30                 a2 = 0x30
   332: da 32 09                 a2 = t0 if t1 == 0
   335: be b9 09                 i32 a2 = a2 + a4
   338: 78 79                    u8 [a0] = a2
   340: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   343: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   346: 64 ab                    a4 = a3
   348: 52 0a e2                 jump @25 if a3 != 0
      :                          @26
   351: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   354: 56 27 80 00 28           jump @30 if a0 >u 128
      :                          @27
   359: 9a 9b 81 00              a4 = 0x81 - a2
   363: 64 1a                    a3 = sp
   365: c8 7a 0a                 a3 = a3 + a0
   368: 01                       fallthrough
      :                          @28
   369: 33 09 02                 a2 = 0x2
   372: 64 87                    a0 = a1
   374: 33 08 93 00 01           a1 = 0x10093
   379: 50 10 08 48 0e           ra = 8, jump @288
      :                          @29 [@dyn 4]
   384: 82 10 80 00              ra = u64 [sp + 0x80]
   388: 95 11 88 00              sp = sp + 0x88
   392: 32 00                    ret
      :                          @30
   394: 00                       trap
      :                          @31 [@dyn 5]
   395: 95 11 c8                 sp = sp + 0xffffffffffffffc8
   398: 7b 10 30                 u64 [sp + 0x30] = ra
   401: 7b 15 28                 u64 [sp + 0x28] = s0
   404: 7b 16 20                 u64 [sp + 0x20] = s1
   407: 64 86                    s1 = a1
   409: 82 88 28                 a1 = u64 [a1 + 0x28]
   412: 82 6a 20                 a3 = u64 [s1 + 0x20]
   415: 82 8b 18                 a4 = u64 [a1 + 0x18]
   418: 64 75                    s0 = a0
   420: 33 08 88 00 01           a1 = 0x10088
   425: 33 09 01                 a2 = 0x1
   428: 64 a7                    a0 = a3
   430: b4 b0 01 0c              ra = 12, jump [a4]
      :                          @32 [@dyn 6]
   434: 7b 16 08                 u64 [sp + 0x8] = s1
   437: 78 17 10                 u8 [sp + 0x10] = a0
   440: 46 11 11                 u8 [sp + 17] = 0
   443: 33 06 80 00              s1 = 0x80
   447: 33 07 86 00              a0 = 0x86
   451: 7b 17                    u64 [sp] = a0
   453: 01                       fallthrough
      :                          @33
   454: 7b 15 18                 u64 [sp + 0x18] = s0
   457: 95 17 08                 a0 = sp + 0x8
   460: 95 18 18                 a1 = sp + 0x18
   463: 82 19                    a2 = u64 [sp]
   465: 50 10 0e bb 14           ra = 14, jump @432
      :                          @34 [@dyn 7]
   470: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
   473: 95 55 01                 s0 = s0 + 0x1
   476: 52 06 ea                 jump @33 if s1 != 0
      :                          @35
   479: 7c 18 10                 a1 = u8 [sp + 0x10]
   482: 33 07 01                 a0 = 0x1
   485: 52 08 1b                 jump @37 if a1 != 0
      :                          @36
   488: 82 17 08                 a0 = u64 [sp + 0x8]
   491: 82 78 28                 a1 = u64 [a0 + 0x28]
   494: 82 77 20                 a0 = u64 [a0 + 0x20]
   497: 82 8a 18                 a3 = u64 [a1 + 0x18]
   500: 33 08 92 00 01           a1 = 0x10092
   505: 33 09 01                 a2 = 0x1
   508: b4 a0 01 10              ra = 16, jump [a3]
      :                          @37 [@dyn 8]
   512: 82 10 30                 ra = u64 [sp + 0x30]
   515: 82 15 28                 s0 = u64 [sp + 0x28]
   518: 82 16 20                 s1 = u64 [sp + 0x20]
   521: 95 11 38                 sp = sp + 0x38
   524: 32 00                    ret
      :                          @38 [export #0: 'refine']
   526: 95 11 e0                 sp = sp + 0xffffffffffffffe0
   529: 7b 10 18                 u64 [sp + 0x18] = ra
   532: 7b 15 10                 u64 [sp + 0x10] = s0
   535: 48 11 08                 u32 [sp + 8] = 0
   538: 49 01                    u64 [sp + 0] = 0
   540: 64 17                    a0 = sp
   542: 33 09 0c                 a2 = 0xc
   545: 33 0a 05                 a3 = 0x5
   548: 33 08                    a1 = 0
   550: 33 0b                    a4 = 0
   552: 33 0c                    a5 = 0
   554: 0a 12                    ecalli 18 // 'fetch'
   556: 01                       fallthrough
      :                          @39
   557: 51 17 ff 14              jump @41 if a0 == 4294967295
      :                          @40
   561: 81 17 04                 a0 = i32 [sp + 0x4]
   564: 81 18 08                 a1 = i32 [sp + 0x8]
   567: 81 19                    a2 = i32 [sp]
   569: be 78 08                 i32 a1 = a1 + a0
   572: 83 99 01                 i32 a2 = a2 + 0x1
   575: 28 0b                    jump @42
      :                          @41
   577: 33 07                    a0 = 0
   579: 33 09 01                 a2 = 0x1
   582: 33 08 01                 a1 = 0x1
   585: 01                       fallthrough
      :                          @42
   586: 7a 19                    u32 [sp] = a2
   588: 7a 18 04                 u32 [sp + 0x4] = a1
   591: 7a 17 08                 u32 [sp + 0x8] = a0
   594: 64 17                    a0 = sp
   596: 33 08 0c                 a1 = 0xc
   599: 0a 13                    ecalli 19 // 'export'
   601: 64 17                    a0 = sp
   603: 33 08 0c                 a1 = 0xc
   606: 82 10 18                 ra = u64 [sp + 0x18]
   609: 82 15 10                 s0 = u64 [sp + 0x10]
   612: 95 11 20                 sp = sp + 0x20
   615: 32 00                    ret
      :                          @43 [export #1: 'accumulate']
   617: 95 11 d8                 sp = sp + 0xffffffffffffffd8
   620: 7b 10 20                 u64 [sp + 0x20] = ra
   623: 7b 15 18                 u64 [sp + 0x18] = s0
   626: 7b 16 10                 u64 [sp + 0x10] = s1
   629: 33 09 08                 a2 = 0x8
   632: ac 98 e5 00              jump @73 if a1 <u a2
      :                          @44
   636: 51 17 fc b3 01           jump @94 if a0 == 4294967292
      :                          @45
   641: 51 07 af 01              jump @95 if a0 == 0
      :                          @46
   645: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
   648: 95 75 08                 s0 = a0 + 0x8
   651: 51 0a 45                 jump @56 if a3 == 0
      :                          @47
   654: 7d 58                    a1 = i8 [s0]
   656: 33 06 01                 s1 = 0x1
   659: 59 08 40                 jump @57 if a1 >=s 0
      :                          @48
   662: 84 89 ff 00              a2 = a1 & 0xff
   666: 33 06 02                 s1 = 0x2
   669: 53 29 c0 00 2d           jump @54 if a2 <u 192
      :                          @49
   674: 33 06 03                 s1 = 0x3
   677: 53 29 e0 00 25           jump @54 if a2 <u 224
      :                          @50
   682: 33 06 04                 s1 = 0x4
   685: 53 29 f0 00 1d           jump @54 if a2 <u 240
      :                          @51
   690: 33 06 05                 s1 = 0x5
   693: 53 29 f8 00 15           jump @54 if a2 <u 248
      :                          @52
   698: 33 06 06                 s1 = 0x6
   701: 53 29 fc 00 0d           jump @54 if a2 <u 252
      :                          @53
   706: 88 98 fe 00              a1 = a2 <u 0xfe
   710: 9a 86 08                 s1 = 0x8 - a1
   713: 01                       fallthrough
      :                          @54
   714: ae 6a 09                 jump @57 if a3 >=u s1
      :                          @55
   717: 28 90 00                 jump @73
      :                          @56
   720: 33 06                    s1 = 0
   722: 01                       fallthrough
      :                          @57
   723: 7b 16                    u64 [sp] = s1
   725: 64 57                    a0 = s0
   727: 64 68                    a1 = s1
   729: 64 a6                    s1 = a3
   731: 50 10 12 eb 14           ra = 18, jump @449
      :                          @58 [@dyn 9]
   736: 82 1a                    a3 = u64 [sp]
   738: 51 07 7b                 jump @73 if a0 == 0
      :                          @59
   741: e4 a6 07                 a0 = maxu(s1, a3)
   744: c9 a7 07                 a0 = a0 - a3
   747: 53 17 60 72              jump @73 if a0 <u 96
      :                          @60
   751: c8 5a 08                 a1 = a3 + s0
   754: 95 76 a0                 s1 = a0 + 0xffffffffffffffa0
   757: 95 87 60                 a0 = a1 + 0x60
   760: 7b 17                    u64 [sp] = a0
   762: 51 06 4c                 jump @71 if s1 == 0
      :                          @61
   765: 7d 78                    a1 = i8 [a0]
   767: 33 05 01                 s0 = 0x1
   770: 59 08 37                 jump @68 if a1 >=s 0
      :                          @62
   773: 84 89 ff 00              a2 = a1 & 0xff
   777: 33 05 02                 s0 = 0x2
   780: 53 29 c0 00 2d           jump @68 if a2 <u 192
      :                          @63
   785: 33 05 03                 s0 = 0x3
   788: 53 29 e0 00 25           jump @68 if a2 <u 224
      :                          @64
   793: 33 05 04                 s0 = 0x4
   796: 53 29 f0 00 1d           jump @68 if a2 <u 240
      :                          @65
   801: 33 05 05                 s0 = 0x5
   804: 53 29 f8 00 15           jump @68 if a2 <u 248
      :                          @66
   809: 33 05 06                 s0 = 0x6
   812: 53 29 fc 00 0d           jump @68 if a2 <u 252
      :                          @67
   817: 88 98 fe 00              a1 = a2 <u 0xfe
   821: 9a 85 08                 s0 = 0x8 - a1
   824: 01                       fallthrough
      :                          @68
   825: ac 56 f8 00              jump @96 if s1 <u s0
      :                          @69
   829: 64 58                    a1 = s0
   831: 50 10 14 87 14           ra = 20, jump @449
      :                          @70 [@dyn 10]
   836: 28 07                    jump @72
      :                          @71
   838: 33 05                    s0 = 0
   840: 33 07                    a0 = 0
   842: 01                       fallthrough
      :                          @72
   843: e4 56 08                 a1 = maxu(s1, s0)
   846: c9 58 08                 a1 = a1 - s0
   849: e4 78 08                 a1 = maxu(a1, a0)
   852: c9 78 08                 a1 = a1 - a0
   855: 33 09 21                 a2 = 0x21
   858: ae 98 1b                 jump @75 if a1 >=u a2
      :                          @73
   861: 33 08                    a1 = 0
   863: 33 06 00 00 01           s1 = 0x10000
   868: 01                       fallthrough
      :                          @74
   869: 64 67                    a0 = s1
   871: 82 10 20                 ra = u64 [sp + 0x20]
   874: 82 15 18                 s0 = u64 [sp + 0x18]
   877: 82 16 10                 s1 = u64 [sp + 0x10]
   880: 95 11 28                 sp = sp + 0x28
   883: 32 00                    ret
      :                          @75
   885: 82 19                    a2 = u64 [sp]
   887: c8 95 05                 s0 = s0 + a2
   890: c8 57 07                 a0 = a0 + s0
   893: 7c 79 20                 a2 = u8 [a0 + 0x20]
   896: 51 09 19                 jump @77 if a2 == 0
      :                          @76
   899: 46 11 0e                 u8 [sp + 14] = 0
   902: 95 17 0e                 a0 = sp + 0xe
   905: 33 08 01                 a1 = 0x1
   908: 33 09                    a2 = 0
   910: 33 0a                    a3 = 0
   912: 0a 03                    ecalli 3 // 'write'
   914: 33 08                    a1 = 0
   916: 33 05                    s0 = 0
   918: 28 82 00                 jump @92
      :                          @77
   921: 95 8a df                 a3 = a1 + 0xffffffffffffffdf
   924: 95 76 21                 s1 = a0 + 0x21
   927: 51 0a 51                 jump @88 if a3 == 0
      :                          @78
   930: 7d 67                    a0 = i8 [s1]
   932: 33 05 01                 s0 = 0x1
   935: 59 07 37                 jump @85 if a0 >=s 0
      :                          @79
   938: 84 77 ff 00              a0 = a0 & 0xff
   942: 33 05 02                 s0 = 0x2
   945: 53 27 c0 00 2d           jump @85 if a0 <u 192
      :                          @80
   950: 33 05 03                 s0 = 0x3
   953: 53 27 e0 00 25           jump @85 if a0 <u 224
      :                          @81
   958: 33 05 04                 s0 = 0x4
   961: 53 27 f0 00 1d           jump @85 if a0 <u 240
      :                          @82
   966: 33 05 05                 s0 = 0x5
   969: 53 27 f8 00 15           jump @85 if a0 <u 248
      :                          @83
   974: 33 05 06                 s0 = 0x6
   977: 53 27 fc 00 0d           jump @85 if a0 <u 252
      :                          @84
   982: 88 77 fe 00              a0 = a0 <u 0xfe
   986: 9a 75 08                 s0 = 0x8 - a0
   989: 01                       fallthrough
      :                          @85
   990: 7b 1a                    u64 [sp] = a3
   992: ac 5a 53                 jump @98 if a3 <u s0
      :                          @86
   995: 64 67                    a0 = s1
   997: 64 58                    a1 = s0
   999: 50 10 16 df 13           ra = 22, jump @449
      :                          @87 [@dyn 11]
  1004: 82 1a                    a3 = u64 [sp]
  1006: 28 07                    jump @89
      :                          @88
  1008: 33 05                    s0 = 0
  1010: 33 07                    a0 = 0
  1012: 01                       fallthrough
      :                          @89
  1013: c8 56 09                 a2 = s1 + s0
  1016: e4 5a 08                 a1 = maxu(a3, s0)
  1019: c9 58 08                 a1 = a1 - s0
  1022: e6 78 05                 s0 = minu(a1, a0)
  1025: 46 11 0e                 u8 [sp + 14] = 0
  1028: 95 17 0e                 a0 = sp + 0xe
  1031: 33 08 01                 a1 = 0x1
  1034: 64 96                    s1 = a2
  1036: 64 5a                    a3 = s0
  1038: 0a 03                    ecalli 3 // 'write'
  1040: 01                       fallthrough
      :                          @90
  1041: 55 15 21 21              jump @97 if s0 >=u 33
      :                          @91
  1045: 64 68                    a1 = s1
  1047: 01                       fallthrough
      :                          @92
  1048: 33 06 11 00 03           s1 = 0x30011
  1053: 33 07 11 00 03           a0 = 0x30011
  1058: 64 59                    a2 = s0
  1060: 50 10 18 cd 09           ra = 24, jump @258
      :                          @93 [@dyn 12]
  1065: 33 08 20                 a1 = 0x20
  1068: 28 39 ff                 jump @74
      :                          @94
  1071: 00                       trap
      :                          @95
  1072: 00                       trap
      :                          @96
  1073: 00                       trap
      :                          @97
  1074: 00                       trap
      :                          @98
  1075: 00                       trap
      :                          @99 [export #2: 'on_transfer']
  1076: 95 11 a8 fd              sp = sp + 0xfffffffffffffda8
  1080: 7b 10 50 02              u64 [sp + 0x250] = ra
  1084: 7b 15 48 02              u64 [sp + 0x248] = s0
  1088: 7b 16 40 02              u64 [sp + 0x240] = s1
  1092: 64 79                    a2 = a0
  1094: 33 02                    t0 = 0
  1096: 95 7b 04                 a4 = a0 + 0x4
  1099: 95 7c 08                 a5 = a0 + 0x8
  1102: 95 86 f8                 s1 = a1 + 0xfffffffffffffff8
  1105: 95 77 0c                 a0 = a0 + 0xc
  1108: 7b 17 28                 u64 [sp + 0x28] = a0
  1111: 33 0a 08                 a3 = 0x8
  1114: 33 07 02                 a0 = 0x2
  1117: 7b 17                    u64 [sp] = a0
  1119: 49 11 20 ff ef           u64 [sp + 32] = 0xffffffffffffefff
  1124: 7b 1c 88 00              u64 [sp + 0x88] = a5
  1128: 7b 1c 80 00              u64 [sp + 0x80] = a5
  1132: 7b 18 18                 u64 [sp + 0x18] = a1
  1135: 7b 19 10                 u64 [sp + 0x10] = a2
  1138: 7b 1b 08                 u64 [sp + 0x8] = a4
  1141: 7b 16 70                 u64 [sp + 0x70] = s1
  1144: ac a8 bf 04              jump @147 if a1 <u a3
      :                          @100
  1148: 51 09 d6 04              jump @150 if a2 == 0
      :                          @101
  1152: 51 0b d3 04              jump @151 if a4 == 0
      :                          @102
  1156: 7c 97                    a0 = u8 [a2]
  1158: 7b 17 40                 u64 [sp + 0x40] = a0
  1161: 7c 97 01                 a0 = u8 [a2 + 0x1]
  1164: 7b 17 30                 u64 [sp + 0x30] = a0
  1167: 7c 97 02                 a0 = u8 [a2 + 0x2]
  1170: 7b 17 38                 u64 [sp + 0x38] = a0
  1173: 7c 97 03                 a0 = u8 [a2 + 0x3]
  1176: 7b 17 48                 u64 [sp + 0x48] = a0
  1179: 7c b7                    a0 = u8 [a4]
  1181: 7b 17 68                 u64 [sp + 0x68] = a0
  1184: 7c b7 01                 a0 = u8 [a4 + 0x1]
  1187: 7b 17 50                 u64 [sp + 0x50] = a0
  1190: 7c b7 02                 a0 = u8 [a4 + 0x2]
  1193: 7b 17 60                 u64 [sp + 0x60] = a0
  1196: 7c b7 03                 a0 = u8 [a4 + 0x3]
  1199: 7b 17 58                 u64 [sp + 0x58] = a0
  1202: 51 06 49                 jump @112 if s1 == 0
      :                          @103
  1205: 82 17 88 00              a0 = u64 [sp + 0x88]
  1209: 7d 77                    a0 = i8 [a0]
  1211: 33 05 01                 s0 = 0x1
  1214: 59 07 40                 jump @113 if a0 >=s 0
      :                          @104
  1217: 84 77 ff 00              a0 = a0 & 0xff
  1221: 33 05 02                 s0 = 0x2
  1224: 53 27 c0 00 2d           jump @110 if a0 <u 192
      :                          @105
  1229: 33 05 03                 s0 = 0x3
  1232: 53 27 e0 00 25           jump @110 if a0 <u 224
      :                          @106
  1237: 33 05 04                 s0 = 0x4
  1240: 53 27 f0 00 1d           jump @110 if a0 <u 240
      :                          @107
  1245: 33 05 05                 s0 = 0x5
  1248: 53 27 f8 00 15           jump @110 if a0 <u 248
      :                          @108
  1253: 33 05 06                 s0 = 0x6
  1256: 53 27 fc 00 0d           jump @110 if a0 <u 252
      :                          @109
  1261: 88 77 fe 00              a0 = a0 <u 0xfe
  1265: 9a 75 08                 s0 = 0x8 - a0
  1268: 01                       fallthrough
      :                          @110
  1269: ae 56 09                 jump @113 if s1 >=u s0
      :                          @111
  1272: 28 3f 04                 jump @147
      :                          @112
  1275: 33 05                    s0 = 0
  1277: 01                       fallthrough
      :                          @113
  1278: 82 17 88 00              a0 = u64 [sp + 0x88]
  1282: 64 58                    a1 = s0
  1284: 7b 12 78                 u64 [sp + 0x78] = t0
  1287: 50 10 1a bf 12           ra = 26, jump @449
      :                          @114 [@dyn 13]
  1292: 33 04 98 00              t2 = 0x98
  1296: 33 03 04                 t1 = 0x4
  1299: 33 02 08                 t0 = 0x8
  1302: 82 1c 70                 a5 = u64 [sp + 0x70]
  1305: 82 1b 78                 a4 = u64 [sp + 0x78]
  1308: ae 7b 1b 04              jump @147 if a4 >=u a0
      :                          @115
  1312: 82 16 30                 s1 = u64 [sp + 0x30]
  1315: 97 66 08                 s1 = s1 << 0x8
  1318: 82 18 40                 a1 = u64 [sp + 0x40]
  1321: d4 68 08                 a1 = a1 | s1
  1324: 82 19 38                 a2 = u64 [sp + 0x38]
  1327: 97 99 10                 a2 = a2 << 0x10
  1330: 82 1a 48                 a3 = u64 [sp + 0x48]
  1333: 97 aa 18                 a3 = a3 << 0x18
  1336: d4 a9 09                 a2 = a2 | a3
  1339: d4 89 06                 s1 = a2 | a1
  1342: 82 18 50                 a1 = u64 [sp + 0x50]
  1345: 97 88 08                 a1 = a1 << 0x8
  1348: 82 19 68                 a2 = u64 [sp + 0x68]
  1351: d4 98 08                 a1 = a1 | a2
  1354: 82 19 60                 a2 = u64 [sp + 0x60]
  1357: 97 99 10                 a2 = a2 << 0x10
  1360: 82 1a 58                 a3 = u64 [sp + 0x58]
  1363: 97 aa 18                 a3 = a3 << 0x18
  1366: d4 a9 09                 a2 = a2 | a3
  1369: d4 89 00                 ra = a2 | a1
  1372: e4 5c 08                 a1 = maxu(a5, s0)
  1375: c9 58 08                 a1 = a1 - s0
  1378: 82 19 80 00              a2 = u64 [sp + 0x80]
  1382: c8 59 09                 a2 = a2 + s0
  1385: 82 1a 28                 a3 = u64 [sp + 0x28]
  1388: c8 a5 05                 s0 = s0 + a3
  1391: 64 ba                    a3 = a4
  1393: 01                       fallthrough
      :                          @116
  1394: ac 28 c5 03              jump @147 if a1 <u t0
      :                          @117
  1398: aa 35 da 03              jump @148 if s0 == t1
      :                          @118
  1402: 51 05 d7 03              jump @149 if s0 == 0
      :                          @119
  1406: ac 48 b9 03              jump @147 if a1 <u t2
      :                          @120
  1410: 51 0a 17                 jump @123 if a3 == 0
      :                          @121
  1413: 95 88 68 ff              a1 = a1 + 0xffffffffffffff68
  1417: 95 55 98 00              s0 = s0 + 0x98
  1421: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  1424: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1427: 52 07 df                 jump @116 if a0 != 0
      :                          @122
  1430: 28 a1 03                 jump @147
      :                          @123
  1433: 7c 97 01                 a0 = u8 [a2 + 0x1]
  1436: 7c 98                    a1 = u8 [a2]
  1438: 7c 9a 02                 a3 = u8 [a2 + 0x2]
  1441: 7d 9b 03                 a4 = i8 [a2 + 0x3]
  1444: 8a 77 08                 i32 a0 = a0 << 0x8
  1447: d4 87 07                 a0 = a0 | a1
  1450: 8a a8 10                 i32 a1 = a3 << 0x10
  1453: 8a ba 18                 i32 a3 = a4 << 0x18
  1456: d4 a8 08                 a1 = a1 | a3
  1459: d4 87 07                 a0 = a0 | a1
  1462: 7b 17 68                 u64 [sp + 0x68] = a0
  1465: 7c 57 01                 a0 = u8 [s0 + 0x1]
  1468: 7c 58                    a1 = u8 [s0]
  1470: 7c 5a 02                 a3 = u8 [s0 + 0x2]
  1473: 7d 5b 03                 a4 = i8 [s0 + 0x3]
  1476: 8a 77 08                 i32 a0 = a0 << 0x8
  1479: d4 87 07                 a0 = a0 | a1
  1482: 8a a8 10                 i32 a1 = a3 << 0x10
  1485: 8a ba 18                 i32 a3 = a4 << 0x18
  1488: d4 a8 08                 a1 = a1 | a3
  1491: 7c 9a 0f                 a3 = u8 [a2 + 0xf]
  1494: 7c 9b 0e                 a4 = u8 [a2 + 0xe]
  1497: d4 87 07                 a0 = a0 | a1
  1500: 7b 17 60                 u64 [sp + 0x60] = a0
  1503: 7c 97 0d                 a0 = u8 [a2 + 0xd]
  1506: 97 aa 10                 a3 = a3 << 0x10
  1509: 97 bb 08                 a4 = a4 << 0x8
  1512: d4 ba 0a                 a3 = a3 | a4
  1515: 7c 98 0c                 a1 = u8 [a2 + 0xc]
  1518: 7c 9b 0b                 a4 = u8 [a2 + 0xb]
  1521: d4 a7 07                 a0 = a0 | a3
  1524: 97 77 10                 a0 = a0 << 0x10
  1527: 97 88 08                 a1 = a1 << 0x8
  1530: d4 b8 08                 a1 = a1 | a4
  1533: 7c 9a 0a                 a3 = u8 [a2 + 0xa]
  1536: 7c 9b 09                 a4 = u8 [a2 + 0x9]
  1539: d4 87 07                 a0 = a0 | a1
  1542: 97 77 10                 a0 = a0 << 0x10
  1545: 97 aa 08                 a3 = a3 << 0x8
  1548: d4 ba 0a                 a3 = a3 | a4
  1551: d4 a7 07                 a0 = a0 | a3
  1554: 7c 98 08                 a1 = u8 [a2 + 0x8]
  1557: 97 77 08                 a0 = a0 << 0x8
  1560: 7c 9a 97 00              a3 = u8 [a2 + 0x97]
  1564: 7c 9b 96 00              a4 = u8 [a2 + 0x96]
  1568: d4 87 07                 a0 = a0 | a1
  1571: 7b 17 58                 u64 [sp + 0x58] = a0
  1574: 7c 97 95 00              a0 = u8 [a2 + 0x95]
  1578: 97 aa 10                 a3 = a3 << 0x10
  1581: 97 bb 08                 a4 = a4 << 0x8
  1584: d4 ba 0a                 a3 = a3 | a4
  1587: d4 a7 07                 a0 = a0 | a3
  1590: 7c 9a 94 00              a3 = u8 [a2 + 0x94]
  1594: 7c 9b 93 00              a4 = u8 [a2 + 0x93]
  1598: 95 98 10                 a1 = a2 + 0x10
  1601: 97 77 10                 a0 = a0 << 0x10
  1604: 97 aa 08                 a3 = a3 << 0x8
  1607: d4 ba 0a                 a3 = a3 | a4
  1610: 7c 9b 92 00              a4 = u8 [a2 + 0x92]
  1614: d4 a7 07                 a0 = a0 | a3
  1617: 7c 9a 91 00              a3 = u8 [a2 + 0x91]
  1621: 97 77 10                 a0 = a0 << 0x10
  1624: 97 bb 08                 a4 = a4 << 0x8
  1627: 7c 99 90 00              a2 = u8 [a2 + 0x90]
  1631: d4 ba 0a                 a3 = a3 | a4
  1634: d4 a7 07                 a0 = a0 | a3
  1637: 97 77 08                 a0 = a0 << 0x8
  1640: d4 97 07                 a0 = a0 | a2
  1643: 7b 17 50                 u64 [sp + 0x50] = a0
  1646: 95 17 30 01              a0 = sp + 0x130
  1650: 33 09 80 00              a2 = 0x80
  1654: 64 05                    s0 = ra
  1656: 50 10 1c 79 07           ra = 28, jump @258
      :                          @124 [@dyn 14]
  1661: 95 17 a8 00              a0 = sp + 0xa8
  1665: 95 18 30 01              a1 = sp + 0x130
  1669: 33 09 80 00              a2 = 0x80
  1673: 50 10 1e 68 07           ra = 30, jump @258
      :                          @125 [@dyn 15]
  1678: 7a 16 90 00              u32 [sp + 0x90] = s1
  1682: 7a 15 94 00              u32 [sp + 0x94] = s0
  1686: 82 17 68                 a0 = u64 [sp + 0x68]
  1689: 7a 17 98 00              u32 [sp + 0x98] = a0
  1693: 82 17 60                 a0 = u64 [sp + 0x60]
  1696: 7a 17 9c 00              u32 [sp + 0x9c] = a0
  1700: 82 17 58                 a0 = u64 [sp + 0x58]
  1703: 7b 17 a0 00              u64 [sp + 0xa0] = a0
  1707: 82 17 50                 a0 = u64 [sp + 0x50]
  1710: 7b 17 28 01              u64 [sp + 0x128] = a0
  1714: 95 17 90 00              a0 = sp + 0x90
  1718: 7b 17 30 01              u64 [sp + 0x130] = a0
  1722: 82 17                    a0 = u64 [sp]
  1724: 7b 17 38 01              u64 [sp + 0x138] = a0
  1728: 95 18 94 00              a1 = sp + 0x94
  1732: 7b 18 40 01              u64 [sp + 0x140] = a1
  1736: 7b 17 48 01              u64 [sp + 0x148] = a0
  1740: 95 18 98 00              a1 = sp + 0x98
  1744: 7b 18 50 01              u64 [sp + 0x150] = a1
  1748: 7b 17 58 01              u64 [sp + 0x158] = a0
  1752: 95 18 9c 00              a1 = sp + 0x9c
  1756: 7b 18 60 01              u64 [sp + 0x160] = a1
  1760: 7b 17 68 01              u64 [sp + 0x168] = a0
  1764: 95 17 a0 00              a0 = sp + 0xa0
  1768: 7b 17 70 01              u64 [sp + 0x170] = a0
  1772: 33 08 06                 a1 = 0x6
  1775: 7b 18 78 01              u64 [sp + 0x178] = a1
  1779: 95 17 a8 00              a0 = sp + 0xa8
  1783: 7b 17 80 01              u64 [sp + 0x180] = a0
  1787: 33 07 0a                 a0 = 0xa
  1790: 7b 17 88 01              u64 [sp + 0x188] = a0
  1794: 33 07 78 01 01           a0 = 0x10178
  1799: 7b 17 f0 01              u64 [sp + 0x1f0] = a0
  1803: 95 17 28 01              a0 = sp + 0x128
  1807: 7b 17 90 01              u64 [sp + 0x190] = a0
  1811: 7b 18 60                 u64 [sp + 0x60] = a1
  1814: 7b 18 98 01              u64 [sp + 0x198] = a1
  1818: 49 21 f8 01 07           u64 [sp + 504] = 0x7
  1823: 49 21 10 02              u64 [sp + 528] = 0
  1827: 95 17 30 01              a0 = sp + 0x130
  1831: 7b 17 00 02              u64 [sp + 0x200] = a0
  1835: 49 21 08 02 07           u64 [sp + 520] = 0x7
  1840: 95 17 20 02              a0 = sp + 0x220
  1844: 95 18 f0 01              a1 = sp + 0x1f0
  1848: 50 10 20 4a 04           ra = 32, jump @208
      :                          @126 [@dyn 16]
  1853: 82 15 28 02              s0 = u64 [sp + 0x228]
  1857: 82 1b 30 02              a4 = u64 [sp + 0x230]
  1861: 82 16 20 02              s1 = u64 [sp + 0x220]
  1865: 33 07 02                 a0 = 0x2
  1868: 33 08                    a1 = 0
  1870: 33 09                    a2 = 0
  1872: 64 5a                    a3 = s0
  1874: 33 00 22                 ra = 0x22
  1877: 0a 64                    ecalli 100 // 'log'
  1879: 01                       fallthrough
      :                          @127 [@dyn 17]
  1880: 82 17 20                 a0 = u64 [sp + 0x20]
  1883: c8 67 07                 a0 = a0 + s1
  1886: 33 0c 40 00 03           a5 = 0x30040
  1891: 33 02 00 10              t0 = 0x1000
  1895: 53 27 00 f0 1c           jump @132 if a0 <u 4294963200
      :                          @128
  1900: c8 2c 08                 a1 = a5 + t0
  1903: 82 87                    a0 = u64 [a1]
  1905: c9 78 09                 a2 = a1 - a0
  1908: ab 59 0f                 jump @132 if a2 != s0
      :                          @129
  1911: c9 67 09                 a2 = a0 - s1
  1914: 01                       fallthrough
      :                          @130
  1915: 82 8a                    a3 = u64 [a1]
  1917: ab 7a ef                 jump @128 if a3 != a0
      :                          @131
  1920: 7b 89                    u64 [a1] = a2
  1922: 01                       fallthrough
      :                          @132
  1923: 81 17 94 00              a0 = i32 [sp + 0x94]
  1927: 7a 17 b4 01              u32 [sp + 0x1b4] = a0
  1931: 95 17 b4 01              a0 = sp + 0x1b4
  1935: 33 08 04                 a1 = 0x4
  1938: 95 19 a8 00              a2 = sp + 0xa8
  1942: 33 0a 80 00              a3 = 0x80
  1946: 7b 1c 68                 u64 [sp + 0x68] = a5
  1949: 0a 03                    ecalli 3 // 'write'
  1951: 0a                       ecalli 0 // 'gas'
  1952: 7b 17 b8 01              u64 [sp + 0x1b8] = a0
  1956: 7b 17 c0 01              u64 [sp + 0x1c0] = a0
  1960: 46 21 cf 01 04           u8 [sp + 463] = 0x4
  1965: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
  1969: 95 17 cf 01              a0 = sp + 0x1cf
  1973: 33 08 01                 a1 = 0x1
  1976: 95 19 d0 01              a2 = sp + 0x1d0
  1980: 33 0a 08                 a3 = 0x8
  1983: 0a 03                    ecalli 3 // 'write'
  1985: 95 17 cf 01              a0 = sp + 0x1cf
  1989: 7b 17 20 02              u64 [sp + 0x220] = a0
  1993: 33 07 7e                 a0 = 0x7e
  1996: 7b 17 28 02              u64 [sp + 0x228] = a0
  2000: 49 21 30 01 02           u64 [sp + 304] = 0x2
  2005: 49 21 40 01 02           u64 [sp + 320] = 0x2
  2010: 49 21 50 01              u64 [sp + 336] = 0
  2014: 14 07 20 00 00 00 10 00 00 00 a0 = 0x1000000020
  2024: 7b 17 58 01              u64 [sp + 0x158] = a0
  2028: 46 21 60 01 03           u8 [sp + 352] = 0x3
  2033: 49 21 68 01 02           u64 [sp + 360] = 0x2
  2038: 49 21 78 01 02           u64 [sp + 376] = 0x2
  2043: 49 21 88 01 01           u64 [sp + 392] = 0x1
  2048: 7b 17 90 01              u64 [sp + 0x190] = a0
  2052: 33 07 68 02 01           a0 = 0x10268
  2057: 7b 17 f0 01              u64 [sp + 0x1f0] = a0
  2061: 95 17 c0 01              a0 = sp + 0x1c0
  2065: 7b 17 30 02              u64 [sp + 0x230] = a0
  2069: 82 17 60                 a0 = u64 [sp + 0x60]
  2072: 7b 17 38 02              u64 [sp + 0x238] = a0
  2076: 46 21 98 01 03           u8 [sp + 408] = 0x3
  2081: 49 21 f8 01 02           u64 [sp + 504] = 0x2
  2086: 95 17 30 01              a0 = sp + 0x130
  2090: 7b 17 10 02              u64 [sp + 0x210] = a0
  2094: 49 21 18 02 02           u64 [sp + 536] = 0x2
  2099: 95 17 20 02              a0 = sp + 0x220
  2103: 7b 17 00 02              u64 [sp + 0x200] = a0
  2107: 49 21 08 02 02           u64 [sp + 520] = 0x2
  2112: 95 17 d8 01              a0 = sp + 0x1d8
  2116: 95 18 f0 01              a1 = sp + 0x1f0
  2120: 50 10 24 3a 03           ra = 36, jump @208
      :                          @133 [@dyn 18]
  2125: 82 15 e0 01              s0 = u64 [sp + 0x1e0]
  2129: 82 1b e8 01              a4 = u64 [sp + 0x1e8]
  2133: 82 16 d8 01              s1 = u64 [sp + 0x1d8]
  2137: 33 07 02                 a0 = 0x2
  2140: 33 08                    a1 = 0
  2142: 33 09                    a2 = 0
  2144: 64 5a                    a3 = s0
  2146: 33 00 26                 ra = 0x26
  2149: 0a 64                    ecalli 100 // 'log'
  2151: 01                       fallthrough
      :                          @134 [@dyn 19]
  2152: 82 1c 68                 a5 = u64 [sp + 0x68]
  2155: 33 02 00 10              t0 = 0x1000
  2159: 82 17 20                 a0 = u64 [sp + 0x20]
  2162: c8 67 07                 a0 = a0 + s1
  2165: 53 27 00 f0 1e           jump @139 if a0 <u 4294963200
      :                          @135
  2170: c8 2c 08                 a1 = a5 + t0
  2173: 82 87                    a0 = u64 [a1]
  2175: c9 78 09                 a2 = a1 - a0
  2178: ab 59 11                 jump @139 if a2 != s0
      :                          @136
  2181: c9 67 09                 a2 = a0 - s1
  2184: 01                       fallthrough
      :                          @137
  2185: 82 8a                    a3 = u64 [a1]
  2187: ab 7a ef                 jump @135 if a3 != a0
      :                          @138
  2190: 7b 89                    u64 [a1] = a2
  2192: 33 0b                    a4 = 0
  2194: 01                       fallthrough
      :                          @139
  2195: 95 17 b8 01              a0 = sp + 0x1b8
  2199: 7b 17 20 02              u64 [sp + 0x220] = a0
  2203: 82 17 60                 a0 = u64 [sp + 0x60]
  2206: 7b 17 28 02              u64 [sp + 0x228] = a0
  2210: 33 07 e8 01 01           a0 = 0x101e8
  2215: 7b 17 30 01              u64 [sp + 0x130] = a0
  2219: 49 21 38 01 02           u64 [sp + 312] = 0x2
  2224: 49 21 50 01              u64 [sp + 336] = 0
  2228: 95 17 20 02              a0 = sp + 0x220
  2232: 7b 17 40 01              u64 [sp + 0x140] = a0
  2236: 49 21 48 01 01           u64 [sp + 328] = 0x1
  2241: 95 17 f0 01              a0 = sp + 0x1f0
  2245: 95 18 30 01              a1 = sp + 0x130
  2249: 50 10 28 b9 02           ra = 40, jump @208
      :                          @140 [@dyn 20]
  2254: 82 15 f8 01              s0 = u64 [sp + 0x1f8]
  2258: 82 1b 00 02              a4 = u64 [sp + 0x200]
  2262: 82 16 f0 01              s1 = u64 [sp + 0x1f0]
  2266: 33 07 02                 a0 = 0x2
  2269: 33 08                    a1 = 0
  2271: 33 09                    a2 = 0
  2273: 64 5a                    a3 = s0
  2275: 33 00 2a                 ra = 0x2a
  2278: 0a 64                    ecalli 100 // 'log'
  2280: 01                       fallthrough
      :                          @141 [@dyn 21]
  2281: 82 1c 68                 a5 = u64 [sp + 0x68]
  2284: 33 02 00 10              t0 = 0x1000
  2288: 82 17 20                 a0 = u64 [sp + 0x20]
  2291: c8 67 07                 a0 = a0 + s1
  2294: 53 27 00 f0 1c           jump @146 if a0 <u 4294963200
      :                          @142
  2299: c8 2c 08                 a1 = a5 + t0
  2302: 82 87                    a0 = u64 [a1]
  2304: c9 78 09                 a2 = a1 - a0
  2307: ab 59 0f                 jump @146 if a2 != s0
      :                          @143
  2310: c9 67 09                 a2 = a0 - s1
  2313: 01                       fallthrough
      :                          @144
  2314: 82 8a                    a3 = u64 [a1]
  2316: ab 7a ef                 jump @142 if a3 != a0
      :                          @145
  2319: 7b 89                    u64 [a1] = a2
  2321: 01                       fallthrough
      :                          @146
  2322: 82 12 78                 t0 = u64 [sp + 0x78]
  2325: 95 22 01                 t0 = t0 + 0x1
  2328: 82 17 80 00              a0 = u64 [sp + 0x80]
  2332: 95 77 98 00              a0 = a0 + 0x98
  2336: 7b 17 80 00              u64 [sp + 0x80] = a0
  2340: 82 18 18                 a1 = u64 [sp + 0x18]
  2343: 82 19 10                 a2 = u64 [sp + 0x10]
  2346: 82 1b 08                 a4 = u64 [sp + 0x8]
  2349: 82 16 70                 s1 = u64 [sp + 0x70]
  2352: 33 0a 08                 a3 = 0x8
  2355: ae a8 49 fb              jump @100 if a1 >=u a3
      :                          @147
  2359: 33 07 00 00 01           a0 = 0x10000
  2364: 33 08                    a1 = 0
  2366: 82 10 50 02              ra = u64 [sp + 0x250]
  2370: 82 15 48 02              s0 = u64 [sp + 0x248]
  2374: 82 16 40 02              s1 = u64 [sp + 0x240]
  2378: 95 11 58 02              sp = sp + 0x258
  2382: 32 00                    ret
      :                          @148
  2384: 00                       trap
      :                          @149
  2385: 00                       trap
      :                          @150
  2386: 00                       trap
      :                          @151
  2387: 00                       trap
      :                          @152
  2388: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  2391: 7b 10 40                 u64 [sp + 0x40] = ra
  2394: 7b 15 38                 u64 [sp + 0x38] = s0
  2397: 7b 16 30                 u64 [sp + 0x30] = s1
  2400: c8 89 09                 a2 = a2 + a1
  2403: ac 89 52                 jump @160 if a2 <u a1
      :                          @153
  2406: 64 75                    s0 = a0
  2408: 82 77                    a0 = u64 [a0]
  2410: 97 78 01                 a1 = a0 << 0x1
  2413: 33 0a 08                 a3 = 0x8
  2416: e4 a9 09                 a2 = maxu(a2, a3)
  2419: e4 98 06                 s1 = maxu(a1, a2)
  2422: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  2425: 98 88 3f                 a1 = a1 >> 0x3f
  2428: 51 07 12                 jump @155 if a0 == 0
      :                          @154
  2431: 82 59 08                 a2 = u64 [s0 + 0x8]
  2434: 7b 19 18                 u64 [sp + 0x18] = a2
  2437: 49 11 20 01              u64 [sp + 32] = 0x1
  2441: 7b 17 28                 u64 [sp + 0x28] = a0
  2444: 28 06                    jump @156
      :                          @155
  2446: 49 11 20                 u64 [sp + 32] = 0
  2449: 01                       fallthrough
      :                          @156
  2450: 64 17                    a0 = sp
  2452: 95 1a 18                 a3 = sp + 0x18
  2455: 64 69                    a2 = s1
  2457: 50 10 2c 32              ra = 44, jump @164
      :                          @157 [@dyn 22]
  2461: 82 18                    a1 = u64 [sp]
  2463: 82 17 08                 a0 = u64 [sp + 0x8]
  2466: 51 08 14                 jump @161 if a1 == 0
      :                          @158
  2469: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  2479: aa 87 0d                 jump @162 if a0 == a1
      :                          @159
  2482: 52 07 18                 jump @163 if a0 != 0
      :                          @160
  2485: 00                       trap
      :                          @161
  2486: 7b 57 08                 u64 [s0 + 0x8] = a0
  2489: 7b 56                    u64 [s0] = s1
  2491: 01                       fallthrough
      :                          @162
  2492: 82 10 40                 ra = u64 [sp + 0x40]
  2495: 82 15 38                 s0 = u64 [sp + 0x38]
  2498: 82 16 30                 s1 = u64 [sp + 0x30]
  2501: 95 11 48                 sp = sp + 0x48
  2504: 32 00                    ret
      :                          @163
  2506: 00                       trap
      :                          @164
  2507: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  2510: 7b 10 30                 u64 [sp + 0x30] = ra
  2513: 7b 15 28                 u64 [sp + 0x28] = s0
  2516: 7b 16 20                 u64 [sp + 0x20] = s1
  2519: 64 96                    s1 = a2
  2521: 64 73                    t1 = a0
  2523: 51 08 6e                 jump @174 if a1 == 0
      :                          @165
  2526: 82 a7 08                 a0 = u64 [a3 + 0x8]
  2529: 51 07 71                 jump @175 if a0 == 0
      :                          @166
  2532: 82 a9 10                 a2 = u64 [a3 + 0x10]
  2535: 51 09 9e 00              jump @182 if a2 == 0
      :                          @167
  2539: 82 a8                    a1 = u64 [a3]
  2541: 33 02 00 10              t0 = 0x1000
  2545: 33 04 40 00 03           t2 = 0x30040
  2550: c8 24 07                 a0 = t2 + t0
  2553: 01                       fallthrough
      :                          @168
  2554: 82 7a                    a3 = u64 [a0]
  2556: c8 6a 05                 s0 = a3 + s1
  2559: ac a5 c2 00              jump @188 if s0 <u a3
      :                          @169
  2563: 95 5b 01                 a4 = s0 + 0x1
  2566: 88 bc 01                 a5 = a4 <u 0x1
  2569: d8 b2 0b                 a4 = t0 <u a4
  2572: d4 cb 0b                 a4 = a4 | a5
  2575: 52 0b b2 00              jump @188 if a4 != 0
      :                          @170
  2579: 82 7b                    a4 = u64 [a0]
  2581: ab ab e5                 jump @168 if a4 != a3
      :                          @171
  2584: 7b 75                    u64 [a0] = s0
  2586: 33 0c                    a5 = 0
  2588: 7b 13 18                 u64 [sp + 0x18] = t1
  2591: c9 54 07                 a0 = t2 - s0
  2594: 95 77 00 10              a0 = a0 + 0x1000
  2598: 7b 17 10                 u64 [sp + 0x10] = a0
  2601: 7b 18 08                 u64 [sp + 0x8] = a1
  2604: 64 95                    s0 = a2
  2606: 7b 14                    u64 [sp] = t2
  2608: 50 10 2e c1 03           ra = 46, jump @258
      :                          @172 [@dyn 23]
  2613: 54 25 00 10 94 00        jump @189 if s0 <=u 4096
      :                          @173
  2619: 82 13 18                 t1 = u64 [sp + 0x18]
  2622: 82 18 10                 a1 = u64 [sp + 0x10]
  2625: 33 07                    a0 = 0
  2627: 7b 38 08                 u64 [t1 + 0x8] = a1
  2630: 28 b1 00                 jump @195
      :                          @174
  2633: 49 13 08                 u64 [t1 + 8] = 0
  2636: 33 07 01                 a0 = 0x1
  2639: 28 a8 00                 jump @195
      :                          @175
  2642: 33 07 00 10              a0 = 0x1000
  2646: 33 02 40 00 03           t0 = 0x30040
  2651: c8 72 09                 a2 = t0 + a0
  2654: 01                       fallthrough
      :                          @176
  2655: 82 9b                    a4 = u64 [a2]
  2657: c8 6b 0a                 a3 = a4 + s1
  2660: ac ba 5d                 jump @188 if a3 <u a4
      :                          @177
  2663: 95 ac 01                 a5 = a3 + 0x1
  2666: 88 c8 01                 a1 = a5 <u 0x1
  2669: d8 c7 0c                 a5 = a0 <u a5
  2672: d4 c8 08                 a1 = a1 | a5
  2675: 52 08 4e                 jump @188 if a1 != 0
      :                          @178
  2678: 82 98                    a1 = u64 [a2]
  2680: ab b8 e7                 jump @176 if a1 != a4
      :                          @179
  2683: 7b 9a                    u64 [a2] = a3
  2685: 33 0c                    a5 = 0
  2687: 01                       fallthrough
      :                          @180
  2688: ab b8 df                 jump @176 if a1 != a4
      :                          @181
  2691: 28 30                    jump @187
      :                          @182
  2693: 33 07 00 10              a0 = 0x1000
  2697: 33 02 40 00 03           t0 = 0x30040
  2702: c8 72 09                 a2 = t0 + a0
  2705: 01                       fallthrough
      :                          @183
  2706: 82 9b                    a4 = u64 [a2]
  2708: c8 6b 0a                 a3 = a4 + s1
  2711: ac ba 2a                 jump @188 if a3 <u a4
      :                          @184
  2714: 95 ac 01                 a5 = a3 + 0x1
  2717: 88 c8 01                 a1 = a5 <u 0x1
  2720: d8 c7 0c                 a5 = a0 <u a5
  2723: d4 c8 08                 a1 = a1 | a5
  2726: 52 08 1b                 jump @188 if a1 != 0
      :                          @185
  2729: 82 98                    a1 = u64 [a2]
  2731: ab b8 e7                 jump @183 if a1 != a4
      :                          @186
  2734: 7b 9a                    u64 [a2] = a3
  2736: 33 0c                    a5 = 0
  2738: 01                       fallthrough
      :                          @187
  2739: c9 a2 07                 a0 = t0 - a3
  2742: 95 78 00 10              a1 = a0 + 0x1000
  2746: 33 07                    a0 = 0
  2748: 7b 38 08                 u64 [t1 + 0x8] = a1
  2751: 28 38                    jump @195
      :                          @188
  2753: 33 07 01                 a0 = 0x1
  2756: 7b 37 08                 u64 [t1 + 0x8] = a0
  2759: 28 30                    jump @195
      :                          @189
  2761: 64 5c                    a5 = s0
  2763: 82 18                    a1 = u64 [sp]
  2765: 95 87 00 10              a0 = a1 + 0x1000
  2769: 82 13 18                 t1 = u64 [sp + 0x18]
  2772: 82 15 08                 s0 = u64 [sp + 0x8]
  2775: 01                       fallthrough
      :                          @190
  2776: 82 78                    a1 = u64 [a0]
  2778: c9 87 09                 a2 = a0 - a1
  2781: ab 59 11                 jump @194 if a2 != s0
      :                          @191
  2784: c9 c8 09                 a2 = a1 - a5
  2787: 01                       fallthrough
      :                          @192
  2788: 82 7a                    a3 = u64 [a0]
  2790: ab 8a f2                 jump @190 if a3 != a1
      :                          @193
  2793: 7b 79                    u64 [a0] = a2
  2795: 33 0b                    a4 = 0
  2797: 01                       fallthrough
      :                          @194
  2798: 82 18 10                 a1 = u64 [sp + 0x10]
  2801: 33 07                    a0 = 0
  2803: 7b 38 08                 u64 [t1 + 0x8] = a1
  2806: 01                       fallthrough
      :                          @195
  2807: 7b 36 10                 u64 [t1 + 0x10] = s1
  2810: 7b 37                    u64 [t1] = a0
  2812: 82 10 30                 ra = u64 [sp + 0x30]
  2815: 82 15 28                 s0 = u64 [sp + 0x28]
  2818: 82 16 20                 s1 = u64 [sp + 0x20]
  2821: 95 11 38                 sp = sp + 0x38
  2824: 32 00                    ret
      :                          @196
  2826: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  2829: 7b 10 40                 u64 [sp + 0x40] = ra
  2832: 7b 15 38                 u64 [sp + 0x38] = s0
  2835: 7b 16 30                 u64 [sp + 0x30] = s1
  2838: 95 88 01                 a1 = a1 + 0x1
  2841: 51 08 53                 jump @204 if a1 == 0
      :                          @197
  2844: 64 75                    s0 = a0
  2846: 82 77                    a0 = u64 [a0]
  2848: 97 79 01                 a2 = a0 << 0x1
  2851: 33 0a 08                 a3 = 0x8
  2854: e4 a8 08                 a1 = maxu(a1, a3)
  2857: e4 89 06                 s1 = maxu(a2, a1)
  2860: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  2863: 98 88 3f                 a1 = a1 >> 0x3f
  2866: 51 07 12                 jump @199 if a0 == 0
      :                          @198
  2869: 82 59 08                 a2 = u64 [s0 + 0x8]
  2872: 7b 19 18                 u64 [sp + 0x18] = a2
  2875: 49 11 20 01              u64 [sp + 32] = 0x1
  2879: 7b 17 28                 u64 [sp + 0x28] = a0
  2882: 28 06                    jump @200
      :                          @199
  2884: 49 11 20                 u64 [sp + 32] = 0
  2887: 01                       fallthrough
      :                          @200
  2888: 64 17                    a0 = sp
  2890: 95 1a 18                 a3 = sp + 0x18
  2893: 64 69                    a2 = s1
  2895: 50 10 30 7c fe           ra = 48, jump @164
      :                          @201 [@dyn 24]
  2900: 82 18                    a1 = u64 [sp]
  2902: 82 17 08                 a0 = u64 [sp + 0x8]
  2905: 51 08 14                 jump @205 if a1 == 0
      :                          @202
  2908: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  2918: aa 87 0d                 jump @206 if a0 == a1
      :                          @203
  2921: 52 07 18                 jump @207 if a0 != 0
      :                          @204
  2924: 00                       trap
      :                          @205
  2925: 7b 57 08                 u64 [s0 + 0x8] = a0
  2928: 7b 56                    u64 [s0] = s1
  2930: 01                       fallthrough
      :                          @206
  2931: 82 10 40                 ra = u64 [sp + 0x40]
  2934: 82 15 38                 s0 = u64 [sp + 0x38]
  2937: 82 16 30                 s1 = u64 [sp + 0x30]
  2940: 95 11 48                 sp = sp + 0x48
  2943: 32 00                    ret
      :                          @207
  2945: 00                       trap
      :                          @208
  2946: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  2949: 7b 10 30                 u64 [sp + 0x30] = ra
  2952: 7b 15 28                 u64 [sp + 0x28] = s0
  2955: 7b 16 20                 u64 [sp + 0x20] = s1
  2958: 64 89                    a2 = a1
  2960: 82 8a 08                 a3 = u64 [a1 + 0x8]
  2963: 64 75                    s0 = a0
  2965: 51 0a 35                 jump @213 if a3 == 0
      :                          @209
  2968: 82 98                    a1 = u64 [a2]
  2970: 33 07                    a0 = 0
  2972: 95 8b 08                 a4 = a1 + 0x8
  2975: 01                       fallthrough
      :                          @210
  2976: 82 bc                    a5 = u64 [a4]
  2978: c8 c7 07                 a0 = a0 + a5
  2981: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  2984: 95 bb 10                 a4 = a4 + 0x10
  2987: 52 0a f5                 jump @210 if a3 != 0
      :                          @211
  2990: 82 9a 18                 a3 = u64 [a2 + 0x18]
  2993: 51 0a 24                 jump @215 if a3 == 0
      :                          @212
  2996: 82 88 08                 a1 = u64 [a1 + 0x8]
  2999: 8e 88                    a1 = a1 >u 0
  3001: 88 7a 10                 a3 = a0 <u 0x10
  3004: 85 aa 01                 a3 = a3 ^ 0x1
  3007: d4 a8 08                 a1 = a1 | a3
  3010: 89 7a                    a3 = a0 <s 0
  3012: e0 a8 08                 a1 = a1 & ~a3
  3015: 52 08 0a                 jump @214 if a1 != 0
      :                          @213
  3018: 33 07                    a0 = 0
  3020: 33 08 01                 a1 = 0x1
  3023: 28 48                    jump @223
      :                          @214
  3025: 97 77 01                 a0 = a0 << 0x1
  3028: 01                       fallthrough
      :                          @215
  3029: 51 07 3e                 jump @222 if a0 == 0
      :                          @216
  3032: 57 07 76                 jump @228 if a0 <s 0
      :                          @217
  3035: 64 53                    t1 = s0
  3037: 33 08 00 10              a1 = 0x1000
  3041: 33 02 40 00 03           t0 = 0x30040
  3046: c8 82 0b                 a4 = t0 + a1
  3049: 01                       fallthrough
      :                          @218
  3050: 82 bc                    a5 = u64 [a4]
  3052: c8 7c 0a                 a3 = a5 + a0
  3055: ac ca 5d                 jump @226 if a3 <u a5
      :                          @219
  3058: 95 a5 01                 s0 = a3 + 0x1
  3061: 88 56 01                 s1 = s0 <u 0x1
  3064: d8 58 05                 s0 = a1 <u s0
  3067: d4 65 05                 s0 = s0 | s1
  3070: 52 05 4e                 jump @226 if s0 != 0
      :                          @220
  3073: 82 b6                    s1 = u64 [a4]
  3075: ab c6 e7                 jump @218 if s1 != a5
      :                          @221
  3078: 7b ba                    u64 [a4] = a3
  3080: c9 a2 08                 a1 = t0 - a3
  3083: 95 88 00 10              a1 = a1 + 0x1000
  3087: 64 35                    s0 = t1
  3089: 28 06                    jump @223
      :                          @222
  3091: 33 08 01                 a1 = 0x1
  3094: 01                       fallthrough
      :                          @223
  3095: 7b 17                    u64 [sp] = a0
  3097: 7b 18 08                 u64 [sp + 0x8] = a1
  3100: 49 11 10                 u64 [sp + 16] = 0
  3103: 33 08 08 02 01           a1 = 0x10208
  3108: 64 17                    a0 = sp
  3110: 50 10 32 0c 06           ra = 50, jump @340
      :                          @224 [@dyn 25]
  3115: 52 07 22                 jump @227 if a0 != 0
      :                          @225
  3118: 82 17 10                 a0 = u64 [sp + 0x10]
  3121: 82 18 08                 a1 = u64 [sp + 0x8]
  3124: 82 19                    a2 = u64 [sp]
  3126: 7b 57 10                 u64 [s0 + 0x10] = a0
  3129: 7b 58 08                 u64 [s0 + 0x8] = a1
  3132: 7b 59                    u64 [s0] = a2
  3134: 82 10 30                 ra = u64 [sp + 0x30]
  3137: 82 15 28                 s0 = u64 [sp + 0x28]
  3140: 82 16 20                 s1 = u64 [sp + 0x20]
  3143: 95 11 38                 sp = sp + 0x38
  3146: 32 00                    ret
      :                          @226
  3148: 00                       trap
      :                          @227
  3149: 00                       trap
      :                          @228
  3150: 00                       trap
      :                          @229 [@dyn 26]
  3151: 82 72                    t0 = u64 [a0]
  3153: 33 09 00 f0              a2 = 0xfffffffffffff000
  3157: 95 2a ff ef              a3 = t0 + 0xffffffffffffefff
  3161: ac 9a 27                 jump @235 if a3 <u a2
      :                          @230
  3164: 82 77 08                 a0 = u64 [a0 + 0x8]
  3167: 33 09 40 00 03           a2 = 0x30040
  3172: 95 99 00 10              a2 = a2 + 0x1000
  3176: 01                       fallthrough
      :                          @231
  3177: 82 9a                    a3 = u64 [a2]
  3179: c9 a9 0b                 a4 = a2 - a3
  3182: ab 7b 12                 jump @235 if a4 != a0
      :                          @232
  3185: c9 2a 0b                 a4 = a3 - t0
  3188: 01                       fallthrough
      :                          @233
  3189: 82 9c                    a5 = u64 [a2]
  3191: ab ac f2                 jump @231 if a5 != a3
      :                          @234
  3194: 7b 9b                    u64 [a2] = a4
  3196: 33 08                    a1 = 0
  3198: 32 00                    ret
      :                          @235
  3200: 32 00                    ret
      :                          @236 [@dyn 27]
  3202: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3205: 7b 10 18                 u64 [sp + 0x18] = ra
  3208: 7b 15 10                 u64 [sp + 0x10] = s0
  3211: 7b 16 08                 u64 [sp + 0x8] = s1
  3214: 64 75                    s0 = a0
  3216: 82 7a 10                 a3 = u64 [a0 + 0x10]
  3219: 82 77                    a0 = u64 [a0]
  3221: c9 a7 07                 a0 = a0 - a3
  3224: 64 96                    s1 = a2
  3226: ac 97 2a                 jump @239 if a0 <u a2
      :                          @237
  3229: 7b 1a                    u64 [sp] = a3
  3231: 82 57 08                 a0 = u64 [s0 + 0x8]
  3234: c8 a7 07                 a0 = a0 + a3
  3237: 64 69                    a2 = s1
  3239: 50 10 38 4a 01           ra = 56, jump @258
      :                          @238 [@dyn 28]
  3244: 82 17                    a0 = u64 [sp]
  3246: c8 76 06                 s1 = s1 + a0
  3249: 7b 56 10                 u64 [s0 + 0x10] = s1
  3252: 33 07                    a0 = 0
  3254: 82 10 18                 ra = u64 [sp + 0x18]
  3257: 82 15 10                 s0 = u64 [sp + 0x10]
  3260: 82 16 08                 s1 = u64 [sp + 0x8]
  3263: 95 11 20                 sp = sp + 0x20
  3266: 32 00                    ret
      :                          @239
  3268: 64 57                    a0 = s0
  3270: 7b 18                    u64 [sp] = a1
  3272: 64 a8                    a1 = a3
  3274: 64 69                    a2 = s1
  3276: 50 10 3a 88 fc           ra = 58, jump @152
      :                          @240 [@dyn 29]
  3281: 82 18                    a1 = u64 [sp]
  3283: 82 5a 10                 a3 = u64 [s0 + 0x10]
  3286: 28 c7                    jump @237
      :                          @241 [@dyn 30]
  3288: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  3291: 7b 10 20                 u64 [sp + 0x20] = ra
  3294: 7b 15 18                 u64 [sp + 0x18] = s0
  3297: 7b 16 10                 u64 [sp + 0x10] = s1
  3300: 64 86                    s1 = a1
  3302: 83 88                    i32 a1 = a1 + 0
  3304: 33 09 80 00              a2 = 0x80
  3308: 64 7a                    a3 = a0
  3310: ae 98 2b                 jump @246 if a1 >=u a2
      :                          @242
  3313: 82 a8 10                 a1 = u64 [a3 + 0x10]
  3316: 82 a7                    a0 = u64 [a3]
  3318: ab 78 12                 jump @245 if a1 != a0
      :                          @243
  3321: 64 a7                    a0 = a3
  3323: 64 a5                    s0 = a3
  3325: 50 10 3e 0d fe           ra = 62, jump @196
      :                          @244 [@dyn 31]
  3330: 64 5a                    a3 = s0
  3332: 82 58 10                 a1 = u64 [s0 + 0x10]
  3335: 01                       fallthrough
      :                          @245
  3336: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3339: c8 87 07                 a0 = a0 + a1
  3342: 78 76                    u8 [a0] = s1
  3344: 95 88 01                 a1 = a1 + 0x1
  3347: 7b a8 10                 u64 [a3 + 0x10] = a1
  3350: 28 ab 00                 jump @254
      :                          @246
  3353: 8b 67 0b                 i32 a0 = s1 >> 0xb
  3356: 48 11 0c                 u32 [sp + 12] = 0
  3359: 52 07 1c                 jump @248 if a0 != 0
      :                          @247
  3362: 98 67 06                 a0 = s1 >> 0x6
  3365: 86 77 c0 00              a0 = a0 | 0xc0
  3369: 78 17 0c                 u8 [sp + 0xc] = a0
  3372: 84 67 3f                 a0 = s1 & 0x3f
  3375: 86 77 80 00              a0 = a0 | 0x80
  3379: 78 17 0d                 u8 [sp + 0xd] = a0
  3382: 33 06 02                 s1 = 0x2
  3385: 28 63                    jump @251
      :                          @248
  3387: 8b 67 10                 i32 a0 = s1 >> 0x10
  3390: 52 07 29                 jump @250 if a0 != 0
      :                          @249
  3393: 98 67 0c                 a0 = s1 >> 0xc
  3396: 86 77 e0 00              a0 = a0 | 0xe0
  3400: 78 17 0c                 u8 [sp + 0xc] = a0
  3403: 97 67 34                 a0 = s1 << 0x34
  3406: 98 77 3a                 a0 = a0 >> 0x3a
  3409: 95 77 80 00              a0 = a0 + 0x80
  3413: 78 17 0d                 u8 [sp + 0xd] = a0
  3416: 84 67 3f                 a0 = s1 & 0x3f
  3419: 86 77 80 00              a0 = a0 | 0x80
  3423: 78 17 0e                 u8 [sp + 0xe] = a0
  3426: 33 06 03                 s1 = 0x3
  3429: 28 37                    jump @251
      :                          @250
  3431: 97 67 2b                 a0 = s1 << 0x2b
  3434: 98 77 3d                 a0 = a0 >> 0x3d
  3437: 95 77 f0 00              a0 = a0 + 0xf0
  3441: 78 17 0c                 u8 [sp + 0xc] = a0
  3444: 97 67 2e                 a0 = s1 << 0x2e
  3447: 98 77 3a                 a0 = a0 >> 0x3a
  3450: 95 77 80 00              a0 = a0 + 0x80
  3454: 78 17 0d                 u8 [sp + 0xd] = a0
  3457: 97 67 34                 a0 = s1 << 0x34
  3460: 98 77 3a                 a0 = a0 >> 0x3a
  3463: 95 77 80 00              a0 = a0 + 0x80
  3467: 78 17 0e                 u8 [sp + 0xe] = a0
  3470: 84 67 3f                 a0 = s1 & 0x3f
  3473: 86 77 80 00              a0 = a0 | 0x80
  3477: 78 17 0f                 u8 [sp + 0xf] = a0
  3480: 33 06 04                 s1 = 0x4
  3483: 01                       fallthrough
      :                          @251
  3484: 82 a5 10                 s0 = u64 [a3 + 0x10]
  3487: 82 a7                    a0 = u64 [a3]
  3489: c9 57 07                 a0 = a0 - s0
  3492: ac 67 2d                 jump @255 if a0 <u s1
      :                          @252
  3495: 7b 1a                    u64 [sp] = a3
  3497: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3500: c8 57 07                 a0 = a0 + s0
  3503: 95 18 0c                 a1 = sp + 0xc
  3506: 64 69                    a2 = s1
  3508: 50 10 40 3d              ra = 64, jump @258
      :                          @253 [@dyn 32]
  3512: c8 56 06                 s1 = s1 + s0
  3515: 82 17                    a0 = u64 [sp]
  3517: 7b 76 10                 u64 [a0 + 0x10] = s1
  3520: 01                       fallthrough
      :                          @254
  3521: 33 07                    a0 = 0
  3523: 82 10 20                 ra = u64 [sp + 0x20]
  3526: 82 15 18                 s0 = u64 [sp + 0x18]
  3529: 82 16 10                 s1 = u64 [sp + 0x10]
  3532: 95 11 28                 sp = sp + 0x28
  3535: 32 00                    ret
      :                          @255
  3537: 64 a7                    a0 = a3
  3539: 64 58                    a1 = s0
  3541: 64 69                    a2 = s1
  3543: 64 a5                    s0 = a3
  3545: 50 10 42 7b fb           ra = 66, jump @152
      :                          @256 [@dyn 33]
  3550: 64 5a                    a3 = s0
  3552: 82 55 10                 s0 = u64 [s0 + 0x10]
  3555: 28 c4                    jump @252
      :                          @257 [@dyn 34]
  3557: 64 8a                    a3 = a1
  3559: 33 08 08 02 01           a1 = 0x10208
  3564: 64 a9                    a2 = a3
  3566: 28 44 04                 jump @340
      :                          @258
  3569: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3572: 7b 10 18                 u64 [sp + 0x18] = ra
  3575: 7b 15 10                 u64 [sp + 0x10] = s0
  3578: 7b 16 08                 u64 [sp + 0x8] = s1
  3581: 53 19 10 64              jump @267 if a2 <u 16
      :                          @259
  3585: 8d 7a                    i32 a3 = -a0
  3587: 84 a2 07                 t0 = a3 & 0x7
  3590: c8 27 0b                 a4 = a0 + t0
  3593: 51 02 15                 jump @262 if t0 == 0
      :                          @260
  3596: 64 8c                    a5 = a1
  3598: 64 75                    s0 = a0
  3600: 01                       fallthrough
      :                          @261
  3601: 7c ca                    a3 = u8 [a5]
  3603: 78 5a                    u8 [s0] = a3
  3605: 95 55 01                 s0 = s0 + 0x1
  3608: 95 cc 01                 a5 = a5 + 0x1
  3611: ac b5 f6                 jump @261 if s0 <u a4
      :                          @262
  3614: c8 28 03                 t1 = a1 + t0
  3617: c9 29 02                 t0 = a2 - t0
  3620: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  3623: 84 38 07                 a1 = t1 & 0x7
  3626: c8 4b 0a                 a3 = a4 + t2
  3629: 51 08 3b                 jump @269 if a1 == 0
      :                          @263
  3632: 58 04 4b                 jump @272 if t2 <=s 0
      :                          @264
  3635: 97 38 03                 a1 = t1 << 0x3
  3638: 84 80 38                 ra = a1 & 0x38
  3641: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  3644: 82 c5                    s0 = u64 [a5]
  3646: 8d 88                    i32 a1 = -a1
  3648: 84 88 38                 a1 = a1 & 0x38
  3651: 95 cc 08                 a5 = a5 + 0x8
  3654: 01                       fallthrough
      :                          @265
  3655: 82 c6                    s1 = u64 [a5]
  3657: d0 05 05                 s0 = s0 >> ra
  3660: cf 86 09                 a2 = s1 << a1
  3663: d4 59 09                 a2 = a2 | s0
  3666: 7b b9                    u64 [a4] = a2
  3668: 95 bb 08                 a4 = a4 + 0x8
  3671: 95 cc 08                 a5 = a5 + 0x8
  3674: 64 65                    s0 = s1
  3676: ac ab eb                 jump @265 if a4 <u a3
      :                          @266
  3679: 28 1c                    jump @272
      :                          @267
  3681: 64 7a                    a3 = a0
  3683: 52 09 21                 jump @273 if a2 != 0
      :                          @268
  3686: 28 2f                    jump @275
      :                          @269
  3688: 58 04 13                 jump @272 if t2 <=s 0
      :                          @270
  3691: 64 38                    a1 = t1
  3693: 01                       fallthrough
      :                          @271
  3694: 82 89                    a2 = u64 [a1]
  3696: 7b b9                    u64 [a4] = a2
  3698: 95 bb 08                 a4 = a4 + 0x8
  3701: 95 88 08                 a1 = a1 + 0x8
  3704: ac ab f6                 jump @271 if a4 <u a3
      :                          @272
  3707: c8 43 08                 a1 = t1 + t2
  3710: 84 29 07                 a2 = t0 & 0x7
  3713: 51 09 14                 jump @275 if a2 == 0
      :                          @273
  3716: c8 a9 09                 a2 = a2 + a3
  3719: 01                       fallthrough
      :                          @274
  3720: 7c 8b                    a4 = u8 [a1]
  3722: 78 ab                    u8 [a3] = a4
  3724: 95 aa 01                 a3 = a3 + 0x1
  3727: 95 88 01                 a1 = a1 + 0x1
  3730: ac 9a f6                 jump @274 if a3 <u a2
      :                          @275
  3733: 82 10 18                 ra = u64 [sp + 0x18]
  3736: 82 15 10                 s0 = u64 [sp + 0x10]
  3739: 82 16 08                 s1 = u64 [sp + 0x8]
  3742: 95 11 20                 sp = sp + 0x20
  3745: 32 00                    ret
      :                          @276 [@dyn 35]
  3747: 82 77                    a0 = u64 [a0]
  3749: 01                       fallthrough
      :                          @277
  3750: 28                       jump @277
      :                          @278
  3751: 95 11 a8                 sp = sp + 0xffffffffffffffa8
  3754: 7b 10 50                 u64 [sp + 0x50] = ra
  3757: 7b 15 48                 u64 [sp + 0x48] = s0
  3760: 7b 16 40                 u64 [sp + 0x40] = s1
  3763: 7b 18                    u64 [sp] = a1
  3765: 98 79 04                 a2 = a0 >> 0x4
  3768: 33 08 27                 a1 = 0x27
  3771: 33 0a 95 00 01           a3 = 0x10095
  3776: 53 29 71 02 7b           jump @281 if a2 <u 625
      :                          @279
  3781: 33 08 27                 a1 = 0x27
  3784: 95 1b 3e                 a4 = sp + 0x3e
  3787: 3a 09 00 00 03           a2 = u64 [0x30000]
  3792: 7b 19 10                 u64 [sp + 0x10] = a2
  3795: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
  3801: 33 03 7b 14              t1 = 0x147b
  3805: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
  3811: 01                       fallthrough
      :                          @280
  3812: 64 72                    t0 = a0
  3814: 82 17 10                 a0 = u64 [sp + 0x10]
  3817: d6 72 07                 a0 = t0 mulhu a0
  3820: 98 77 0b                 a0 = a0 >> 0xb
  3823: 82 19 08                 a2 = u64 [sp + 0x8]
  3826: c0 97 09                 i32 a2 = a0 * a2
  3829: c8 29 06                 s1 = a2 + t0
  3832: 97 69 30                 a2 = s1 << 0x30
  3835: 98 99 32                 a2 = a2 >> 0x32
  3838: ca 39 09                 a2 = a2 * t1
  3841: 98 94 11                 t2 = a2 >> 0x11
  3844: 98 99 10                 a2 = a2 >> 0x10
  3847: 84 99 fe 07              a2 = a2 & 0x7fe
  3851: 96 4c 9c                 a5 = t2 * 0xffffffffffffff9c
  3854: c8 6c 0c                 a5 = a5 + s1
  3857: 97 cc 31                 a5 = a5 << 0x31
  3860: 98 cc 30                 a5 = a5 >> 0x30
  3863: c8 a9 09                 a2 = a2 + a3
  3866: 7c 96                    s1 = u8 [a2]
  3868: 7c 99 01                 a2 = u8 [a2 + 0x1]
  3871: c8 ac 0c                 a5 = a5 + a3
  3874: 7c c5 01                 s0 = u8 [a5 + 0x1]
  3877: 7c cc                    a5 = u8 [a5]
  3879: 78 b9 ff                 u8 [a4 + 0xffffffffffffffff] = a2
  3882: 78 b6 fe                 u8 [a4 + 0xfffffffffffffffe] = s1
  3885: 78 b5 01                 u8 [a4 + 0x1] = s0
  3888: 78 bc                    u8 [a4] = a5
  3890: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
  3893: 95 bb fc                 a4 = a4 + 0xfffffffffffffffc
  3896: ac 20 ac                 jump @280 if ra <u t0
      :                          @281
  3899: 54 17 63 36              jump @283 if a0 <=u 99
      :                          @282
  3903: 97 79 30                 a2 = a0 << 0x30
  3906: 98 99 32                 a2 = a2 >> 0x32
  3909: 96 99 7b 14              a2 = a2 * 0x147b
  3913: 98 99 11                 a2 = a2 >> 0x11
  3916: 96 9b 9c                 a4 = a2 * 0xffffffffffffff9c
  3919: c8 b7 07                 a0 = a0 + a4
  3922: 97 77 31                 a0 = a0 << 0x31
  3925: 98 77 30                 a0 = a0 >> 0x30
  3928: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  3931: c8 a7 07                 a0 = a0 + a3
  3934: 7c 7b 01                 a4 = u8 [a0 + 0x1]
  3937: 7c 77                    a0 = u8 [a0]
  3939: 95 1c 19                 a5 = sp + 0x19
  3942: c8 8c 0c                 a5 = a5 + a1
  3945: 78 cb 01                 u8 [a5 + 0x1] = a4
  3948: 78 c7                    u8 [a5] = a0
  3950: 64 97                    a0 = a2
  3952: 01                       fallthrough
      :                          @283
  3953: 55 17 0a 14              jump @285 if a0 >=u 10
      :                          @284
  3957: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  3960: 95 19 19                 a2 = sp + 0x19
  3963: c8 89 09                 a2 = a2 + a1
  3966: 83 77 30                 i32 a0 = a0 + 0x30
  3969: 78 97                    u8 [a2] = a0
  3971: 28 1c                    jump @286
      :                          @285
  3973: 97 77 01                 a0 = a0 << 0x1
  3976: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  3979: c8 a7 07                 a0 = a0 + a3
  3982: 7c 79 01                 a2 = u8 [a0 + 0x1]
  3985: 7c 77                    a0 = u8 [a0]
  3987: 95 1a 19                 a3 = sp + 0x19
  3990: c8 8a 0a                 a3 = a3 + a1
  3993: 78 a9 01                 u8 [a3 + 0x1] = a2
  3996: 78 a7                    u8 [a3] = a0
  3998: 01                       fallthrough
      :                          @286
  3999: 95 1a 19                 a3 = sp + 0x19
  4002: c8 8a 0a                 a3 = a3 + a1
  4005: 9a 8b 27                 a4 = 0x27 - a1
  4008: 33 08 88 00 01           a1 = 0x10088
  4013: 82 17                    a0 = u64 [sp]
  4015: 33 09                    a2 = 0
  4017: 50 10 48 12              ra = 72, jump @288
      :                          @287 [@dyn 36]
  4021: 82 10 50                 ra = u64 [sp + 0x50]
  4024: 82 15 48                 s0 = u64 [sp + 0x48]
  4027: 82 16 40                 s1 = u64 [sp + 0x40]
  4030: 95 11 58                 sp = sp + 0x58
  4033: 32 00                    ret
      :                          @288
  4035: 95 11 98                 sp = sp + 0xffffffffffffff98
  4038: 7b 10 60                 u64 [sp + 0x60] = ra
  4041: 7b 15 58                 u64 [sp + 0x58] = s0
  4044: 7b 16 50                 u64 [sp + 0x50] = s1
  4047: 80 73 34                 t1 = u32 [a0 + 0x34]
  4050: 7b 1a 20                 u64 [sp + 0x20] = a3
  4053: 64 9c                    a5 = a2
  4055: 84 36 01                 s1 = t1 & 0x1
  4058: 33 02 2b                 t0 = 0x2b
  4061: 33 09 00 00 11           a2 = 0x110000
  4066: 84 3a 04                 a3 = t1 & 0x4
  4069: 7b 1b 28                 u64 [sp + 0x28] = a4
  4072: c8 b6 04                 t2 = s1 + a4
  4075: 7b 1c 30                 u64 [sp + 0x30] = a5
  4078: 52 0a 10                 jump @291 if a3 != 0
      :                          @289
  4081: 49 11 38                 u64 [sp + 56] = 0
  4084: 82 78                    a1 = u64 [a0]
  4086: 94 69 2b                 a2 = 0x2b if s1 != 0
  4089: 52 08 35                 jump @295 if a1 != 0
      :                          @290
  4092: 28 56                    jump @300
      :                          @291
  4094: 7b 18 38                 u64 [sp + 0x38] = a1
  4097: 33 09                    a2 = 0
  4099: 51 0c 1b                 jump @294 if a5 == 0
      :                          @292
  4102: 82 1b 38                 a4 = u64 [sp + 0x38]
  4105: 01                       fallthrough
      :                          @293
  4106: 7d b5                    s0 = i8 [a4]
  4108: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
  4111: 85 5a 01                 a3 = s0 ^ 0x1
  4114: c8 a9 09                 a2 = a2 + a3
  4117: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  4120: 95 bb 01                 a4 = a4 + 0x1
  4123: 52 0c ef                 jump @293 if a5 != 0
      :                          @294
  4126: c8 94 04                 t2 = t2 + a2
  4129: 33 09 00 00 11           a2 = 0x110000
  4134: 82 78                    a1 = u64 [a0]
  4136: db 62 09                 a2 = t0 if s1 != 0
  4139: 51 08 27                 jump @300 if a1 == 0
      :                          @295
  4142: 82 7a 08                 a3 = u64 [a0 + 0x8]
  4145: ae a4 21                 jump @300 if t2 >=u a3
      :                          @296
  4148: 84 38 08                 a1 = t1 & 0x8
  4151: 52 08 50                 jump @303 if a1 != 0
      :                          @297
  4154: 7c 76 38                 s1 = u8 [a0 + 0x38]
  4157: c9 4a 0a                 a3 = a3 - t2
  4160: 7b 19 18                 u64 [sp + 0x18] = a2
  4163: 5a 16 01 9d 00           jump @310 if s1 >s 1
      :                          @298
  4168: 52 06 aa 00              jump @312 if s1 != 0
      :                          @299
  4172: 7b 1a 10                 u64 [sp + 0x10] = a3
  4175: 28 a9 00                 jump @313
      :                          @300
  4178: 82 75 20                 s0 = u64 [a0 + 0x20]
  4181: 82 76 28                 s1 = u64 [a0 + 0x28]
  4184: 64 57                    a0 = s0
  4186: 64 68                    a1 = s1
  4188: 82 1a 38                 a3 = u64 [sp + 0x38]
  4191: 82 1b 30                 a4 = u64 [sp + 0x30]
  4194: 50 10 4a 6c 01           ra = 74, jump @333
      :                          @301 [@dyn 37]
  4199: 33 08 01                 a1 = 0x1
  4202: 52 07 bb 00              jump @318 if a0 != 0
      :                          @302
  4206: 82 6c 18                 a5 = u64 [s1 + 0x18]
  4209: 64 57                    a0 = s0
  4211: 82 18 20                 a1 = u64 [sp + 0x20]
  4214: 82 19 28                 a2 = u64 [sp + 0x28]
  4217: 82 10 60                 ra = u64 [sp + 0x60]
  4220: 82 15 58                 s0 = u64 [sp + 0x58]
  4223: 82 16 50                 s1 = u64 [sp + 0x50]
  4226: 95 11 68                 sp = sp + 0x68
  4229: 32 0c                    jump [a5]
      :                          @303
  4231: 7b 1a 40                 u64 [sp + 0x40] = a3
  4234: 64 45                    s0 = t2
  4236: 81 78 30                 a1 = i32 [a0 + 0x30]
  4239: 7b 18 10                 u64 [sp + 0x10] = a1
  4242: 7c 7a 38                 a3 = u8 [a0 + 0x38]
  4245: 7b 1a 08                 u64 [sp + 0x8] = a3
  4248: 82 7a 20                 a3 = u64 [a0 + 0x20]
  4251: 82 78 28                 a1 = u64 [a0 + 0x28]
  4254: 48 17 30 30              u32 [a0 + 48] = 0x30
  4258: 7b 17                    u64 [sp] = a0
  4260: 46 17 38 01              u8 [a0 + 56] = 0x1
  4264: 7b 1a 48                 u64 [sp + 0x48] = a3
  4267: 64 a7                    a0 = a3
  4269: 64 86                    s1 = a1
  4271: 82 1a 38                 a3 = u64 [sp + 0x38]
  4274: 82 1b 30                 a4 = u64 [sp + 0x30]
  4277: 50 10 4c 19 01           ra = 76, jump @333
      :                          @304 [@dyn 38]
  4282: 52 07 67                 jump @317 if a0 != 0
      :                          @305
  4285: 82 17 40                 a0 = u64 [sp + 0x40]
  4288: c9 57 05                 s0 = a0 - s0
  4291: 95 55 01                 s0 = s0 + 0x1
  4294: 01                       fallthrough
      :                          @306
  4295: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  4298: 51 05 c6 00              jump @328 if s0 == 0
      :                          @307
  4302: 82 69 20                 a2 = u64 [s1 + 0x20]
  4305: 33 08 30                 a1 = 0x30
  4308: 82 17 48                 a0 = u64 [sp + 0x48]
  4311: b4 90 01 4e              ra = 78, jump [a2]
      :                          @308 [@dyn 39]
  4315: 51 07 ec                 jump @306 if a0 == 0
      :                          @309
  4318: 28 43                    jump @317
      :                          @310
  4320: 52 16 02 12              jump @312 if s1 != 2
      :                          @311
  4324: 98 a6 01                 s1 = a3 >> 0x1
  4327: 95 a8 01                 a1 = a3 + 0x1
  4330: 98 88 01                 a1 = a1 >> 0x1
  4333: 7b 18 10                 u64 [sp + 0x10] = a1
  4336: 28 08                    jump @313
      :                          @312
  4338: 64 a6                    s1 = a3
  4340: 49 11 10                 u64 [sp + 16] = 0
  4343: 01                       fallthrough
      :                          @313
  4344: 82 78 20                 a1 = u64 [a0 + 0x20]
  4347: 7b 18 48                 u64 [sp + 0x48] = a1
  4350: 82 75 28                 s0 = u64 [a0 + 0x28]
  4353: 81 77 30                 a0 = i32 [a0 + 0x30]
  4356: 7b 17 40                 u64 [sp + 0x40] = a0
  4359: 95 66 01                 s1 = s1 + 0x1
  4362: 01                       fallthrough
      :                          @314
  4363: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  4366: 51 06 27                 jump @319 if s1 == 0
      :                          @315
  4369: 82 59 20                 a2 = u64 [s0 + 0x20]
  4372: 82 17 48                 a0 = u64 [sp + 0x48]
  4375: 82 18 40                 a1 = u64 [sp + 0x40]
  4378: b4 90 01 50              ra = 80, jump [a2]
      :                          @316 [@dyn 40]
  4382: 51 07 ed                 jump @314 if a0 == 0
      :                          @317
  4385: 33 08 01                 a1 = 0x1
  4388: 01                       fallthrough
      :                          @318
  4389: 64 87                    a0 = a1
  4391: 82 10 60                 ra = u64 [sp + 0x60]
  4394: 82 15 58                 s0 = u64 [sp + 0x58]
  4397: 82 16 50                 s1 = u64 [sp + 0x50]
  4400: 95 11 68                 sp = sp + 0x68
  4403: 32 00                    ret
      :                          @319
  4405: 82 16 48                 s1 = u64 [sp + 0x48]
  4408: 64 67                    a0 = s1
  4410: 64 58                    a1 = s0
  4412: 82 19 18                 a2 = u64 [sp + 0x18]
  4415: 82 1a 38                 a3 = u64 [sp + 0x38]
  4418: 82 1b 30                 a4 = u64 [sp + 0x30]
  4421: 50 10 52 89 00           ra = 82, jump @333
      :                          @320 [@dyn 41]
  4426: 33 08 01                 a1 = 0x1
  4429: 52 07 d8                 jump @318 if a0 != 0
      :                          @321
  4432: 82 5a 18                 a3 = u64 [s0 + 0x18]
  4435: 64 67                    a0 = s1
  4437: 82 18 20                 a1 = u64 [sp + 0x20]
  4440: 82 19 28                 a2 = u64 [sp + 0x28]
  4443: b4 a0 01 54              ra = 84, jump [a3]
      :                          @322 [@dyn 42]
  4447: 33 08 01                 a1 = 0x1
  4450: 52 07 c3                 jump @318 if a0 != 0
      :                          @323
  4453: 82 17 10                 a0 = u64 [sp + 0x10]
  4456: 9a 77                    a0 = -a0
  4458: 7b 17 38                 u64 [sp + 0x38] = a0
  4461: 33 06 ff                 s1 = 0xffffffffffffffff
  4464: 01                       fallthrough
      :                          @324
  4465: 82 17 38                 a0 = u64 [sp + 0x38]
  4468: c8 67 07                 a0 = a0 + s1
  4471: 51 17 ff 42              jump @331 if a0 == 4294967295
      :                          @325
  4475: 82 59 20                 a2 = u64 [s0 + 0x20]
  4478: 82 17 48                 a0 = u64 [sp + 0x48]
  4481: 82 18 40                 a1 = u64 [sp + 0x40]
  4484: b4 90 01 56              ra = 86, jump [a2]
      :                          @326 [@dyn 43]
  4488: 95 66 01                 s1 = s1 + 0x1
  4491: 51 07 e6                 jump @324 if a0 == 0
      :                          @327
  4494: 28 37                    jump @332
      :                          @328
  4496: 82 6a 18                 a3 = u64 [s1 + 0x18]
  4499: 82 17 48                 a0 = u64 [sp + 0x48]
  4502: 82 18 20                 a1 = u64 [sp + 0x20]
  4505: 82 19 28                 a2 = u64 [sp + 0x28]
  4508: b4 a0 01 58              ra = 88, jump [a3]
      :                          @329 [@dyn 44]
  4512: 33 08 01                 a1 = 0x1
  4515: 52 07 82                 jump @318 if a0 != 0
      :                          @330
  4518: 33 08                    a1 = 0
  4520: 82 16                    s1 = u64 [sp]
  4522: 82 17 10                 a0 = u64 [sp + 0x10]
  4525: 7a 67 30                 u32 [s1 + 0x30] = a0
  4528: 82 17 08                 a0 = u64 [sp + 0x8]
  4531: 78 67 38                 u8 [s1 + 0x38] = a0
  4534: 28 6f ff                 jump @318
      :                          @331
  4537: 82 16 10                 s1 = u64 [sp + 0x10]
  4540: 82 17 10                 a0 = u64 [sp + 0x10]
  4543: d8 76 08                 a1 = s1 <u a0
  4546: 28 63 ff                 jump @318
      :                          @332
  4549: 82 17 10                 a0 = u64 [sp + 0x10]
  4552: d8 76 08                 a1 = s1 <u a0
  4555: 28 5a ff                 jump @318
      :                          @333
  4558: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  4561: 7b 10 20                 u64 [sp + 0x20] = ra
  4564: 7b 15 18                 u64 [sp + 0x18] = s0
  4567: 7b 16 10                 u64 [sp + 0x10] = s1
  4570: 83 9c                    i32 a5 = a2 + 0
  4572: 33 02 00 00 11           t0 = 0x110000
  4577: 64 a6                    s1 = a3
  4579: 64 85                    s0 = a1
  4581: 64 7a                    a3 = a0
  4583: aa 2c 20                 jump @336 if a5 == t0
      :                          @334
  4586: 82 5c 20                 a5 = u64 [s0 + 0x20]
  4589: 64 a7                    a0 = a3
  4591: 64 98                    a1 = a2
  4593: 7b 1b 08                 u64 [sp + 0x8] = a4
  4596: 7b 1a                    u64 [sp] = a3
  4598: b4 c0 01 5a              ra = 90, jump [a5]
      :                          @335 [@dyn 45]
  4602: 82 1a                    a3 = u64 [sp]
  4604: 82 1b 08                 a4 = u64 [sp + 0x8]
  4607: 64 78                    a1 = a0
  4609: 33 07 01                 a0 = 0x1
  4612: 52 08 20                 jump @339 if a1 != 0
      :                          @336
  4615: 51 06 1a                 jump @338 if s1 == 0
      :                          @337
  4618: 82 5c 18                 a5 = u64 [s0 + 0x18]
  4621: 64 a7                    a0 = a3
  4623: 64 68                    a1 = s1
  4625: 64 b9                    a2 = a4
  4627: 82 10 20                 ra = u64 [sp + 0x20]
  4630: 82 15 18                 s0 = u64 [sp + 0x18]
  4633: 82 16 10                 s1 = u64 [sp + 0x10]
  4636: 95 11 28                 sp = sp + 0x28
  4639: 32 0c                    jump [a5]
      :                          @338
  4641: 33 07                    a0 = 0
  4643: 01                       fallthrough
      :                          @339
  4644: 82 10 20                 ra = u64 [sp + 0x20]
  4647: 82 15 18                 s0 = u64 [sp + 0x18]
  4650: 82 16 10                 s1 = u64 [sp + 0x10]
  4653: 95 11 28                 sp = sp + 0x28
  4656: 32 00                    ret
      :                          @340
  4658: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  4662: 7b 10 80 00              u64 [sp + 0x80] = ra
  4666: 7b 15 78                 u64 [sp + 0x78] = s0
  4669: 7b 16 70                 u64 [sp + 0x70] = s1
  4672: 49 11 60 20              u64 [sp + 96] = 0x20
  4676: 33 0a 03                 a3 = 0x3
  4679: 78 1a 68                 u8 [sp + 0x68] = a3
  4682: 82 96 20                 s1 = u64 [a2 + 0x20]
  4685: 49 11 30                 u64 [sp + 48] = 0
  4688: 49 11 40                 u64 [sp + 64] = 0
  4691: 7b 17 50                 u64 [sp + 0x50] = a0
  4694: 7b 18 58                 u64 [sp + 0x58] = a1
  4697: 51 06 07 01              jump @362 if s1 == 0
      :                          @341
  4701: 82 97 28                 a0 = u64 [a2 + 0x28]
  4704: 51 07 74 01              jump @372 if a0 == 0
      :                          @342
  4708: 49 11 28                 u64 [sp + 40] = 0
  4711: 82 95                    s0 = u64 [a2]
  4713: 7b 19 08                 u64 [sp + 0x8] = a2
  4716: 82 98 10                 a1 = u64 [a2 + 0x10]
  4719: 7b 18 18                 u64 [sp + 0x18] = a1
  4722: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  4725: 97 88 03                 a1 = a1 << 0x3
  4728: 98 88 03                 a1 = a1 >> 0x3
  4731: 95 88 01                 a1 = a1 + 0x1
  4734: 7b 18                    u64 [sp] = a1
  4736: 95 55 08                 s0 = s0 + 0x8
  4739: 96 78 38                 a1 = a0 * 0x38
  4742: 95 66 18                 s1 = s1 + 0x18
  4745: 33 07 46                 a0 = 0x46
  4748: 7b 17 10                 u64 [sp + 0x10] = a0
  4751: 01                       fallthrough
      :                          @343
  4752: 7b 18 20                 u64 [sp + 0x20] = a1
  4755: 82 59                    a2 = u64 [s0]
  4757: 51 09 17                 jump @346 if a2 == 0
      :                          @344
  4760: 82 1a 58                 a3 = u64 [sp + 0x58]
  4763: 82 17 50                 a0 = u64 [sp + 0x50]
  4766: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  4769: 82 aa 18                 a3 = u64 [a3 + 0x18]
  4772: b4 a0 01 5c              ra = 92, jump [a3]
      :                          @345 [@dyn 46]
  4776: 52 07 51 01              jump @375 if a0 != 0
      :                          @346
  4780: 81 67 10                 a0 = i32 [s1 + 0x10]
  4783: 7a 17 60                 u32 [sp + 0x60] = a0
  4786: 7c 67 18                 a0 = u8 [s1 + 0x18]
  4789: 78 17 68                 u8 [sp + 0x68] = a0
  4792: 81 67 14                 a0 = i32 [s1 + 0x14]
  4795: 7a 17 64                 u32 [sp + 0x64] = a0
  4798: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  4801: 82 67                    a0 = u64 [s1]
  4803: 51 08 26                 jump @351 if a1 == 0
      :                          @347
  4806: 52 18 01 16              jump @349 if a1 != 1
      :                          @348
  4810: 97 77 04                 a0 = a0 << 0x4
  4813: 82 18 18                 a1 = u64 [sp + 0x18]
  4816: c8 87 07                 a0 = a0 + a1
  4819: 82 78 08                 a1 = u64 [a0 + 0x8]
  4822: 82 19 10                 a2 = u64 [sp + 0x10]
  4825: aa 98 07                 jump @350 if a1 == a2
      :                          @349
  4828: 33 08                    a1 = 0
  4830: 28 0f                    jump @352
      :                          @350
  4832: 82 77                    a0 = u64 [a0]
  4834: 82 77                    a0 = u64 [a0]
  4836: 33 08 01                 a1 = 0x1
  4839: 28 06                    jump @352
      :                          @351
  4841: 33 08 01                 a1 = 0x1
  4844: 01                       fallthrough
      :                          @352
  4845: 7b 18 30                 u64 [sp + 0x30] = a1
  4848: 7b 17 38                 u64 [sp + 0x38] = a0
  4851: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  4854: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  4857: 51 08 26                 jump @357 if a1 == 0
      :                          @353
  4860: 52 18 01 16              jump @355 if a1 != 1
      :                          @354
  4864: 97 77 04                 a0 = a0 << 0x4
  4867: 82 18 18                 a1 = u64 [sp + 0x18]
  4870: c8 87 07                 a0 = a0 + a1
  4873: 82 78 08                 a1 = u64 [a0 + 0x8]
  4876: 82 19 10                 a2 = u64 [sp + 0x10]
  4879: aa 98 07                 jump @356 if a1 == a2
      :                          @355
  4882: 33 08                    a1 = 0
  4884: 28 0f                    jump @358
      :                          @356
  4886: 82 77                    a0 = u64 [a0]
  4888: 82 77                    a0 = u64 [a0]
  4890: 33 08 01                 a1 = 0x1
  4893: 28 06                    jump @358
      :                          @357
  4895: 33 08 01                 a1 = 0x1
  4898: 01                       fallthrough
      :                          @358
  4899: 7b 18 40                 u64 [sp + 0x40] = a1
  4902: 7b 17 48                 u64 [sp + 0x48] = a0
  4905: 82 67 08                 a0 = u64 [s1 + 0x8]
  4908: 97 77 04                 a0 = a0 << 0x4
  4911: 82 18 18                 a1 = u64 [sp + 0x18]
  4914: c8 78 08                 a1 = a1 + a0
  4917: 82 87                    a0 = u64 [a1]
  4919: 82 89 08                 a2 = u64 [a1 + 0x8]
  4922: 95 18 30                 a1 = sp + 0x30
  4925: b4 90 01 5e              ra = 94, jump [a2]
      :                          @359 [@dyn 47]
  4929: 52 07 b8 00              jump @375 if a0 != 0
      :                          @360
  4933: 95 55 10                 s0 = s0 + 0x10
  4936: 82 18 20                 a1 = u64 [sp + 0x20]
  4939: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  4942: 95 66 38                 s1 = s1 + 0x38
  4945: 82 17 28                 a0 = u64 [sp + 0x28]
  4948: 95 77 01                 a0 = a0 + 0x1
  4951: 7b 17 28                 u64 [sp + 0x28] = a0
  4954: 52 08 36 ff              jump @343 if a1 != 0
      :                          @361
  4958: 28 69                    jump @370
      :                          @362
  4960: 82 97 18                 a0 = u64 [a2 + 0x18]
  4963: 51 07 71                 jump @372 if a0 == 0
      :                          @363
  4966: 82 95 10                 s0 = u64 [a2 + 0x10]
  4969: 33 0a                    a3 = 0
  4971: 97 78 04                 a1 = a0 << 0x4
  4974: c8 58 08                 a1 = a1 + s0
  4977: 7b 18 20                 u64 [sp + 0x20] = a1
  4980: 7b 19 08                 u64 [sp + 0x8] = a2
  4983: 82 96                    s1 = u64 [a2]
  4985: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  4988: 97 77 04                 a0 = a0 << 0x4
  4991: 98 77 04                 a0 = a0 >> 0x4
  4994: 95 77 01                 a0 = a0 + 0x1
  4997: 7b 17                    u64 [sp] = a0
  4999: 95 66 08                 s1 = s1 + 0x8
  5002: 01                       fallthrough
      :                          @364
  5003: 7b 1a 28                 u64 [sp + 0x28] = a3
  5006: 82 69                    a2 = u64 [s1]
  5008: 51 09 16                 jump @367 if a2 == 0
      :                          @365
  5011: 82 1a 58                 a3 = u64 [sp + 0x58]
  5014: 82 17 50                 a0 = u64 [sp + 0x50]
  5017: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  5020: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5023: b4 a0 01 60              ra = 96, jump [a3]
      :                          @366 [@dyn 48]
  5027: 52 07 56                 jump @375 if a0 != 0
      :                          @367
  5030: 82 57                    a0 = u64 [s0]
  5032: 82 59 08                 a2 = u64 [s0 + 0x8]
  5035: 95 18 30                 a1 = sp + 0x30
  5038: b4 90 01 62              ra = 98, jump [a2]
      :                          @368 [@dyn 49]
  5042: 52 07 47                 jump @375 if a0 != 0
      :                          @369
  5045: 95 66 10                 s1 = s1 + 0x10
  5048: 95 55 10                 s0 = s0 + 0x10
  5051: 82 1a 28                 a3 = u64 [sp + 0x28]
  5054: 95 aa 01                 a3 = a3 + 0x1
  5057: 82 17 20                 a0 = u64 [sp + 0x20]
  5060: ab 75 c7                 jump @364 if s0 != a0
      :                          @370
  5063: 82 19 08                 a2 = u64 [sp + 0x8]
  5066: 82 1a                    a3 = u64 [sp]
  5068: 82 97 08                 a0 = u64 [a2 + 0x8]
  5071: ac 7a 0d                 jump @373 if a3 <u a0
      :                          @371
  5074: 28 2c                    jump @376
      :                          @372
  5076: 33 0a                    a3 = 0
  5078: 82 97 08                 a0 = u64 [a2 + 0x8]
  5081: 54 07 25                 jump @376 if a0 <=u 0
      :                          @373
  5084: 82 97                    a0 = u64 [a2]
  5086: 97 a8 04                 a1 = a3 << 0x4
  5089: c8 87 09                 a2 = a0 + a1
  5092: 82 1a 58                 a3 = u64 [sp + 0x58]
  5095: 82 17 50                 a0 = u64 [sp + 0x50]
  5098: 82 98                    a1 = u64 [a2]
  5100: 82 99 08                 a2 = u64 [a2 + 0x8]
  5103: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5106: b4 a0 01 64              ra = 100, jump [a3]
      :                          @374 [@dyn 50]
  5110: 51 07 08                 jump @376 if a0 == 0
      :                          @375
  5113: 33 07 01                 a0 = 0x1
  5116: 28 05                    jump @377
      :                          @376
  5118: 33 07                    a0 = 0
  5120: 01                       fallthrough
      :                          @377
  5121: 82 10 80 00              ra = u64 [sp + 0x80]
  5125: 82 15 78                 s0 = u64 [sp + 0x78]
  5128: 82 16 70                 s1 = u64 [sp + 0x70]
  5131: 95 11 88 00              sp = sp + 0x88
  5135: 32 00                    ret
      :                          @378 [@dyn 51]
  5137: 32 00                    ret
      :                          @379 [@dyn 52]
  5139: 95 11 88                 sp = sp + 0xffffffffffffff88
  5142: 7b 10 70                 u64 [sp + 0x70] = ra
  5145: 7b 15 68                 u64 [sp + 0x68] = s0
  5148: 7b 16 60                 u64 [sp + 0x60] = s1
  5151: 64 93                    t1 = a2
  5153: 33 0c                    a5 = 0
  5155: 33 02                    t0 = 0
  5157: 33 0b                    a4 = 0
  5159: 14 04 ff fe fe fe fe fe fe fe t2 = 0xfefefefefefefeff
  5169: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
  5175: 14 00 0a 0a 0a 0a 0a 0a 0a 0a ra = 0xa0a0a0a0a0a0a0a
  5185: 82 79 10                 a2 = u64 [a0 + 0x10]
  5188: 7b 19 48                 u64 [sp + 0x48] = a2
  5191: 82 79                    a2 = u64 [a0]
  5193: 7b 19 30                 u64 [sp + 0x30] = a2
  5196: 82 77 08                 a0 = u64 [a0 + 0x8]
  5199: 7b 17 28                 u64 [sp + 0x28] = a0
  5202: 7b 18 50                 u64 [sp + 0x50] = a1
  5205: 95 88 08                 a1 = a1 + 0x8
  5208: 7b 18                    u64 [sp] = a1
  5210: 33 07 89 00 01           a0 = 0x10089
  5215: 7b 17 08                 u64 [sp + 0x8] = a0
  5218: 33 05 0a                 s0 = 0xa
  5221: 7b 13 20                 u64 [sp + 0x20] = t1
  5224: 7b 14 18                 u64 [sp + 0x18] = t2
  5227: 7b 10 10                 u64 [sp + 0x10] = ra
  5230: 28 39                    jump @383
      :                          @380
  5232: c8 89 07                 a0 = a2 + a1
  5235: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
  5238: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  5241: 88 77 01                 a0 = a0 <u 0x1
  5244: 01                       fallthrough
      :                          @381
  5245: 82 1a 48                 a3 = u64 [sp + 0x48]
  5248: 78 a7                    u8 [a3] = a0
  5250: 82 17 28                 a0 = u64 [sp + 0x28]
  5253: 82 7a 18                 a3 = u64 [a0 + 0x18]
  5256: 82 17 30                 a0 = u64 [sp + 0x30]
  5259: b4 a0 01 6a              ra = 106, jump [a3]
      :                          @382 [@dyn 53]
  5263: 64 52                    t0 = s0
  5265: 82 13 20                 t1 = u64 [sp + 0x20]
  5268: 82 14 18                 t2 = u64 [sp + 0x18]
  5271: 82 10 10                 ra = u64 [sp + 0x10]
  5274: 82 1c 58                 a5 = u64 [sp + 0x58]
  5277: 33 05 0a                 s0 = 0xa
  5280: 82 1b 38                 a4 = u64 [sp + 0x38]
  5283: 52 07 66 01              jump @424 if a0 != 0
      :                          @383
  5287: 84 b7 ff 00              a0 = a4 & 0xff
  5291: 52 07 5a 01              jump @423 if a0 != 0
      :                          @384
  5295: 7b 12 40                 u64 [sp + 0x40] = t0
  5298: ae c3 0a                 jump @387 if t1 >=u a5
      :                          @385
  5301: 28 f4 00                 jump @414
      :                          @386
  5304: ac c3 f1 00              jump @414 if t1 <u a5
      :                          @387
  5308: c9 c3 08                 a1 = t1 - a5
  5311: 82 16 50                 s1 = u64 [sp + 0x50]
  5314: c8 c6 06                 s1 = s1 + a5
  5317: 55 18 10 1d              jump @393 if a1 >=u 16
      :                          @388
  5321: aa c3 dd 00              jump @413 if t1 == a5
      :                          @389
  5325: 33 0a                    a3 = 0
  5327: 01                       fallthrough
      :                          @390
  5328: c8 a6 07                 a0 = s1 + a3
  5331: 7c 77                    a0 = u8 [a0]
  5333: aa 57 aa 00              jump @408 if a0 == s0
      :                          @391
  5337: 95 aa 01                 a3 = a3 + 0x1
  5340: ab a8 f4                 jump @390 if a1 != a3
      :                          @392
  5343: 28 c7 00                 jump @413
      :                          @393
  5346: 95 69 07                 a2 = s1 + 0x7
  5349: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
  5352: c9 6a 07                 a0 = a3 - s1
  5355: d3 6a 0a                 a3 = a3 ^ s1
  5358: 88 aa 01                 a3 = a3 <u 0x1
  5361: 88 7b 01                 a4 = a0 <u 0x1
  5364: d4 ba 0a                 a3 = a3 | a4
  5367: 7b 1c 58                 u64 [sp + 0x58] = a5
  5370: 51 0a 44                 jump @399 if a3 == 0
      :                          @394
  5373: 33 07                    a0 = 0
  5375: 95 82 f0                 t0 = a1 + 0xfffffffffffffff0
  5378: 01                       fallthrough
      :                          @395
  5379: 82 1b 58                 a4 = u64 [sp + 0x58]
  5382: 82 19                    a2 = u64 [sp]
  5384: c8 9b 0b                 a4 = a4 + a2
  5387: 01                       fallthrough
      :                          @396
  5388: c8 76 0c                 a5 = s1 + a0
  5391: 82 cc                    a5 = u64 [a5]
  5393: c8 7b 09                 a2 = a4 + a0
  5396: 82 99                    a2 = u64 [a2]
  5398: d3 0c 05                 s0 = a5 ^ ra
  5401: c8 45 05                 s0 = s0 + t2
  5404: e0 c5 0c                 a5 = s0 & ~a5
  5407: d3 09 05                 s0 = a2 ^ ra
  5410: 3a 0a 08 00 03           a3 = u64 [0x30008]
  5415: c8 45 05                 s0 = s0 + t2
  5418: e0 95 09                 a2 = s0 & ~a2
  5421: d4 c9 09                 a2 = a2 | a5
  5424: d2 a9 09                 a2 = a2 & a3
  5427: 52 09 1f                 jump @402 if a2 != 0
      :                          @397
  5430: 95 77 10                 a0 = a0 + 0x10
  5433: ae 72 d3                 jump @396 if t0 >=u a0
      :                          @398
  5436: 28 16                    jump @402
      :                          @399
  5438: c8 a6 0b                 a4 = s1 + a3
  5441: 7c bb                    a4 = u8 [a4]
  5443: aa 5b 54                 jump @411 if a4 == s0
      :                          @400
  5446: 95 aa 01                 a3 = a3 + 0x1
  5449: ab a7 f5                 jump @399 if a0 != a3
      :                          @401
  5452: 95 82 f0                 t0 = a1 + 0xfffffffffffffff0
  5455: ae 72 b4                 jump @395 if t0 >=u a0
      :                          @402
  5458: aa 87 98 00              jump @420 if a0 == a1
      :                          @403
  5462: 33 0a                    a3 = 0
  5464: c8 76 06                 s1 = s1 + a0
  5467: c9 73 08                 a1 = t1 - a0
  5470: 82 1c 58                 a5 = u64 [sp + 0x58]
  5473: c9 c8 08                 a1 = a1 - a5
  5476: 33 05 0a                 s0 = 0xa
  5479: 82 12 40                 t0 = u64 [sp + 0x40]
  5482: 01                       fallthrough
      :                          @404
  5483: c8 a6 09                 a2 = s1 + a3
  5486: 7c 99                    a2 = u8 [a2]
  5488: aa 59 0b                 jump @407 if a2 == s0
      :                          @405
  5491: 95 aa 01                 a3 = a3 + 0x1
  5494: ab a8 f5                 jump @404 if a1 != a3
      :                          @406
  5497: 28 2d                    jump @413
      :                          @407
  5499: c8 7a 0a                 a3 = a3 + a0
  5502: 01                       fallthrough
      :                          @408
  5503: c8 ca 0a                 a3 = a3 + a5
  5506: 95 ac 01                 a5 = a3 + 0x1
  5509: ae 3a 33 ff              jump @386 if a3 >=u t1
      :                          @409
  5513: 82 17 50                 a0 = u64 [sp + 0x50]
  5516: c8 7a 0a                 a3 = a3 + a0
  5519: 7c a7                    a0 = u8 [a3]
  5521: ab 57 27 ff              jump @386 if a0 != s0
      :                          @410
  5525: 28 5c                    jump @421
      :                          @411
  5527: 82 1c 58                 a5 = u64 [sp + 0x58]
  5530: c8 ca 0a                 a3 = a3 + a5
  5533: 95 ac 01                 a5 = a3 + 0x1
  5536: ac 3a e9                 jump @409 if a3 <u t1
      :                          @412
  5539: 28 15 ff                 jump @386
      :                          @413
  5542: 64 3c                    a5 = t1
  5544: 01                       fallthrough
      :                          @414
  5545: 7b 1c 58                 u64 [sp + 0x58] = a5
  5548: 49 11 38 01              u64 [sp + 56] = 0x1
  5552: 64 25                    s0 = t0
  5554: 64 36                    s1 = t1
  5556: aa 32 51                 jump @423 if t0 == t1
      :                          @415
  5559: 82 17 48                 a0 = u64 [sp + 0x48]
  5562: 7c 77                    a0 = u8 [a0]
  5564: 51 07 1c                 jump @418 if a0 == 0
      :                          @416
  5567: 82 17 28                 a0 = u64 [sp + 0x28]
  5570: 82 7a 18                 a3 = u64 [a0 + 0x18]
  5573: 33 09 04                 a2 = 0x4
  5576: 82 17 30                 a0 = u64 [sp + 0x30]
  5579: 82 18 08                 a1 = u64 [sp + 0x8]
  5582: b4 a0 01 6c              ra = 108, jump [a3]
      :                          @417 [@dyn 54]
  5586: 82 12 40                 t0 = u64 [sp + 0x40]
  5589: 52 07 34                 jump @424 if a0 != 0
      :                          @418
  5592: c9 26 09                 a2 = s1 - t0
  5595: 82 18 50                 a1 = u64 [sp + 0x50]
  5598: c8 28 08                 a1 = a1 + t0
  5601: ab 26 8f fe              jump @380 if s1 != t0
      :                          @419
  5605: 33 07                    a0 = 0
  5607: 28 96 fe                 jump @381
      :                          @420
  5610: 64 3c                    a5 = t1
  5612: 82 12 40                 t0 = u64 [sp + 0x40]
  5615: 28 ba                    jump @414
      :                          @421
  5617: 49 11 38                 u64 [sp + 56] = 0
  5620: 64 c6                    s1 = a5
  5622: 64 c5                    s0 = a5
  5624: 7b 1c 58                 u64 [sp + 0x58] = a5
  5627: 82 17 48                 a0 = u64 [sp + 0x48]
  5630: 7c 77                    a0 = u8 [a0]
  5632: 52 07 bf                 jump @416 if a0 != 0
      :                          @422
  5635: 28 d5                    jump @418
      :                          @423
  5637: 33 07                    a0 = 0
  5639: 28 06                    jump @425
      :                          @424
  5641: 33 07 01                 a0 = 0x1
  5644: 01                       fallthrough
      :                          @425
  5645: 82 10 70                 ra = u64 [sp + 0x70]
  5648: 82 15 68                 s0 = u64 [sp + 0x68]
  5651: 82 16 60                 s1 = u64 [sp + 0x60]
  5654: 95 11 78                 sp = sp + 0x78
  5657: 32 00                    ret
      :                          @426 [@dyn 55]
  5659: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  5662: 7b 10 20                 u64 [sp + 0x20] = ra
  5665: 7b 15 18                 u64 [sp + 0x18] = s0
  5668: 7b 16 10                 u64 [sp + 0x10] = s1
  5671: 82 75 10                 s0 = u64 [a0 + 0x10]
  5674: 7c 59                    a2 = u8 [s0]
  5676: 82 7b                    a4 = u64 [a0]
  5678: 82 76 08                 s1 = u64 [a0 + 0x8]
  5681: 51 09 32                 jump @430 if a2 == 0
      :                          @427
  5684: 82 6a 18                 a3 = u64 [s1 + 0x18]
  5687: 7b 18 08                 u64 [sp + 0x8] = a1
  5690: 33 08 89 00 01           a1 = 0x10089
  5695: 33 09 04                 a2 = 0x4
  5698: 64 b7                    a0 = a4
  5700: 7b 1b                    u64 [sp] = a4
  5702: b4 a0 01 70              ra = 112, jump [a3]
      :                          @428 [@dyn 56]
  5706: 82 18 08                 a1 = u64 [sp + 0x8]
  5709: 82 1b                    a4 = u64 [sp]
  5711: 51 07 14                 jump @430 if a0 == 0
      :                          @429
  5714: 33 07 01                 a0 = 0x1
  5717: 82 10 20                 ra = u64 [sp + 0x20]
  5720: 82 15 18                 s0 = u64 [sp + 0x18]
  5723: 82 16 10                 s1 = u64 [sp + 0x10]
  5726: 95 11 28                 sp = sp + 0x28
  5729: 32 00                    ret
      :                          @430
  5731: 83 87                    i32 a0 = a1 + 0
  5733: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  5736: 88 77 01                 a0 = a0 <u 0x1
  5739: 78 57                    u8 [s0] = a0
  5741: 82 6c 20                 a5 = u64 [s1 + 0x20]
  5744: 64 b7                    a0 = a4
  5746: 82 10 20                 ra = u64 [sp + 0x20]
  5749: 82 15 18                 s0 = u64 [sp + 0x18]
  5752: 82 16 10                 s1 = u64 [sp + 0x10]
  5755: 95 11 28                 sp = sp + 0x28
  5758: 32 0c                    jump [a5]
      :                          @431 [@dyn 57]
  5760: 64 8a                    a3 = a1
  5762: 33 08 38 02 01           a1 = 0x10238
  5767: 64 a9                    a2 = a3
  5769: 28 a9 fb                 jump @340
      :                          @432
  5772: 95 11 70 ff              sp = sp + 0xffffffffffffff70
  5776: 7b 10 88 00              u64 [sp + 0x88] = ra
  5780: 7b 15 80 00              u64 [sp + 0x80] = s0
  5784: 7b 16 78                 u64 [sp + 0x78] = s1
  5787: 64 75                    s0 = a0
  5789: 7c 77 08                 a0 = u8 [a0 + 0x8]
  5792: 64 8b                    a4 = a1
  5794: 33 08 01                 a1 = 0x1
  5797: 33 06 01                 s1 = 0x1
  5800: 51 07 1d                 jump @434 if a0 == 0
      :                          @433
  5803: 78 56 08                 u8 [s0 + 0x8] = s1
  5806: 46 15 09 01              u8 [s0 + 9] = 0x1
  5810: 64 57                    a0 = s0
  5812: 82 10 88 00              ra = u64 [sp + 0x88]
  5816: 82 15 80 00              s0 = u64 [sp + 0x80]
  5820: 82 16 78                 s1 = u64 [sp + 0x78]
  5823: 95 11 90 00              sp = sp + 0x90
  5827: 32 00                    ret
      :                          @434
  5829: 64 9a                    a3 = a2
  5831: 82 5c                    a5 = u64 [s0]
  5833: 80 c7 34                 a0 = u32 [a5 + 0x34]
  5836: 7c 58 09                 a1 = u8 [s0 + 0x9]
  5839: 84 79 04                 a2 = a0 & 0x4
  5842: 52 09 43                 jump @440 if a2 != 0
      :                          @435
  5845: 51 08 31                 jump @438 if a1 == 0
      :                          @436
  5848: 82 c8 28                 a1 = u64 [a5 + 0x28]
  5851: 82 c7 20                 a0 = u64 [a5 + 0x20]
  5854: 82 83 18                 t1 = u64 [a1 + 0x18]
  5857: 33 08 8d 00 01           a1 = 0x1008d
  5862: 33 09 02                 a2 = 0x2
  5865: 64 a6                    s1 = a3
  5867: 7b 1b 10                 u64 [sp + 0x10] = a4
  5870: 7b 1c 08                 u64 [sp + 0x8] = a5
  5873: b4 30 01 74              ra = 116, jump [t1]
      :                          @437 [@dyn 58]
  5877: 82 1c 08                 a5 = u64 [sp + 0x8]
  5880: 82 1b 10                 a4 = u64 [sp + 0x10]
  5883: 64 6a                    a3 = s1
  5885: 33 08 01                 a1 = 0x1
  5888: 33 06 01                 s1 = 0x1
  5891: 52 07 a8                 jump @433 if a0 != 0
      :                          @438
  5894: 64 b7                    a0 = a4
  5896: 64 c8                    a1 = a5
  5898: b4 a0 01 76              ra = 118, jump [a3]
      :                          @439 [@dyn 59]
  5902: 33 08 01                 a1 = 0x1
  5905: 64 76                    s1 = a0
  5907: 28 98                    jump @433
      :                          @440
  5909: 52 08 36                 jump @444 if a1 != 0
      :                          @441
  5912: 82 c8 28                 a1 = u64 [a5 + 0x28]
  5915: 82 c7 20                 a0 = u64 [a5 + 0x20]
  5918: 82 83 18                 t1 = u64 [a1 + 0x18]
  5921: 33 08 91 00 01           a1 = 0x10091
  5926: 33 09 01                 a2 = 0x1
  5929: 33 06 01                 s1 = 0x1
  5932: 7b 1a                    u64 [sp] = a3
  5934: 7b 1b 10                 u64 [sp + 0x10] = a4
  5937: 7b 1c 08                 u64 [sp + 0x8] = a5
  5940: b4 30 01 78              ra = 120, jump [t1]
      :                          @442 [@dyn 60]
  5944: 82 1c 08                 a5 = u64 [sp + 0x8]
  5947: 82 1b 10                 a4 = u64 [sp + 0x10]
  5950: 82 1a                    a3 = u64 [sp]
  5952: 33 08 01                 a1 = 0x1
  5955: 52 07 68 ff              jump @433 if a0 != 0
      :                          @443
  5959: 81 c7 34                 a0 = i32 [a5 + 0x34]
  5962: 01                       fallthrough
      :                          @444
  5963: 33 06 01                 s1 = 0x1
  5966: 78 16 37                 u8 [sp + 0x37] = s1
  5969: 82 c8 20                 a1 = u64 [a5 + 0x20]
  5972: 82 c9 28                 a2 = u64 [a5 + 0x28]
  5975: 7b 18 18                 u64 [sp + 0x18] = a1
  5978: 7b 19 20                 u64 [sp + 0x20] = a2
  5981: 95 18 37                 a1 = sp + 0x37
  5984: 7b 18 28                 u64 [sp + 0x28] = a1
  5987: 81 c8 30                 a1 = i32 [a5 + 0x30]
  5990: 7c c9 38                 a2 = u8 [a5 + 0x38]
  5993: 82 c3                    t1 = u64 [a5]
  5995: 82 c4 08                 t2 = u64 [a5 + 0x8]
  5998: 82 c0 10                 ra = u64 [a5 + 0x10]
  6001: 82 c2 18                 t0 = u64 [a5 + 0x18]
  6004: 7a 17 6c                 u32 [sp + 0x6c] = a0
  6007: 7a 18 68                 u32 [sp + 0x68] = a1
  6010: 78 19 70                 u8 [sp + 0x70] = a2
  6013: 7b 13 38                 u64 [sp + 0x38] = t1
  6016: 7b 14 40                 u64 [sp + 0x40] = t2
  6019: 7b 10 48                 u64 [sp + 0x48] = ra
  6022: 7b 12 50                 u64 [sp + 0x50] = t0
  6025: 95 17 18                 a0 = sp + 0x18
  6028: 7b 17 58                 u64 [sp + 0x58] = a0
  6031: 33 07 38 02 01           a0 = 0x10238
  6036: 7b 17 60                 u64 [sp + 0x60] = a0
  6039: 95 18 38                 a1 = sp + 0x38
  6042: 64 b7                    a0 = a4
  6044: b4 a0 01 7a              ra = 122, jump [a3]
      :                          @445 [@dyn 61]
  6048: 52 07 20                 jump @448 if a0 != 0
      :                          @446
  6051: 82 18 60                 a1 = u64 [sp + 0x60]
  6054: 82 17 58                 a0 = u64 [sp + 0x58]
  6057: 82 8a 18                 a3 = u64 [a1 + 0x18]
  6060: 33 08 8f 00 01           a1 = 0x1008f
  6065: 33 09 02                 a2 = 0x2
  6068: b4 a0 01 7c              ra = 124, jump [a3]
      :                          @447 [@dyn 62]
  6072: 64 76                    s1 = a0
  6074: 33 08 01                 a1 = 0x1
  6077: 28 ee fe                 jump @433
      :                          @448
  6080: 33 08 01                 a1 = 0x1
  6083: 28 e8 fe                 jump @433
      :                          @449
  6086: 51 08 9b 00              jump @470 if a1 == 0
      :                          @450
  6090: 64 79                    a2 = a0
  6092: 7c 77                    a0 = u8 [a0]
  6094: 51 07 91 00              jump @469 if a0 == 0
      :                          @451
  6098: 51 27 ff 00 90 00        jump @471 if a0 == 255
      :                          @452
  6104: 6c 7a                    a3 = sext.b a0
  6106: 57 0a 09                 jump @454 if a3 <s 0
      :                          @453
  6109: 33 0a                    a3 = 0
  6111: 33 08                    a1 = 0
  6113: 28 73                    jump @468
      :                          @454
  6115: 55 27 c0 00 0d           jump @456 if a0 >=u 192
      :                          @455
  6120: 33 0a 01                 a3 = 0x1
  6123: 33 0b 80                 a4 = 0xffffffffffffff80
  6126: 28 4a                    jump @465
      :                          @456
  6128: 55 27 e0 00 0e           jump @458 if a0 >=u 224
      :                          @457
  6133: 33 0a 02                 a3 = 0x2
  6136: 33 0b 40 ff              a4 = 0xffffffffffffff40
  6140: 28 3c                    jump @465
      :                          @458
  6142: 55 27 f0 00 0e           jump @460 if a0 >=u 240
      :                          @459
  6147: 33 0a 03                 a3 = 0x3
  6150: 33 0b 20 ff              a4 = 0xffffffffffffff20
  6154: 28 2e                    jump @465
      :                          @460
  6156: 55 27 f8 00 0e           jump @462 if a0 >=u 248
      :                          @461
  6161: 33 0a 04                 a3 = 0x4
  6164: 33 0b 10 ff              a4 = 0xffffffffffffff10
  6168: 28 20                    jump @465
      :                          @462
  6170: 55 27 fc 00 0e           jump @464 if a0 >=u 252
      :                          @463
  6175: 33 0a 05                 a3 = 0x5
  6178: 33 0b 08 ff              a4 = 0xffffffffffffff08
  6182: 28 12                    jump @465
      :                          @464
  6184: 88 7a fe 00              a3 = a0 <u 0xfe
  6188: 33 0b 04 ff              a4 = 0xffffffffffffff04
  6192: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  6196: 85 aa 07                 a3 = a3 ^ 0x7
  6199: 01                       fallthrough
      :                          @465
  6200: ae 8a 2b                 jump @472 if a3 >=u a1
      :                          @466
  6203: 33 08                    a1 = 0
  6205: c8 b7 07                 a0 = a0 + a4
  6208: 64 ab                    a4 = a3
  6210: 01                       fallthrough
      :                          @467
  6211: c8 b9 0c                 a5 = a2 + a4
  6214: 7c cc                    a5 = u8 [a5]
  6216: 97 88 08                 a1 = a1 << 0x8
  6219: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  6222: d4 c8 08                 a1 = a1 | a5
  6225: 52 0b f2                 jump @467 if a4 != 0
      :                          @468
  6228: 8a a9 03                 i32 a2 = a3 << 0x3
  6231: cf 97 07                 a0 = a0 << a2
  6234: c8 87 07                 a0 = a0 + a1
  6237: 32 00                    ret
      :                          @469
  6239: 32 00                    ret
      :                          @470
  6241: 00                       trap
      :                          @471
  6242: 00                       trap
      :                          @472
  6243: 00                       trap
      :                          @473 [@dyn 63]
  6244: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  6247: 7b 10 28                 u64 [sp + 0x28] = ra
  6250: 7b 15 20                 u64 [sp + 0x20] = s0
  6253: 7b 16 18                 u64 [sp + 0x18] = s1
  6256: 64 86                    s1 = a1
  6258: 82 88 28                 a1 = u64 [a1 + 0x28]
  6261: 82 6a 20                 a3 = u64 [s1 + 0x20]
  6264: 82 8b 18                 a4 = u64 [a1 + 0x18]
  6267: 64 75                    s0 = a0
  6269: 33 08 88 00 01           a1 = 0x10088
  6274: 33 09 01                 a2 = 0x1
  6277: 64 a7                    a0 = a3
  6279: b4 b0 02 80 00           ra = 128, jump [a4]
      :                          @474 [@dyn 64]
  6284: 7b 16                    u64 [sp] = s1
  6286: 78 17 08                 u8 [sp + 0x8] = a0
  6289: 46 11 09                 u8 [sp + 9] = 0
  6292: 7b 15 10                 u64 [sp + 0x10] = s0
  6295: 33 09 86 00              a2 = 0x86
  6299: 64 17                    a0 = sp
  6301: 95 18 10                 a1 = sp + 0x10
  6304: 50 20 82 00 ec fd        ra = 130, jump @432
      :                          @475 [@dyn 65]
  6310: 33 07 01                 a0 = 0x1
  6313: 7c 18 08                 a1 = u8 [sp + 0x8]
  6316: 52 08 1b                 jump @477 if a1 != 0
      :                          @476
  6319: 82 17                    a0 = u64 [sp]
  6321: 82 78 28                 a1 = u64 [a0 + 0x28]
  6324: 82 77 20                 a0 = u64 [a0 + 0x20]
  6327: 82 8a 18                 a3 = u64 [a1 + 0x18]
  6330: 33 08 92 00 01           a1 = 0x10092
  6335: 33 09 01                 a2 = 0x1
  6338: b4 a0 02 84 00           ra = 132, jump [a3]
      :                          @477 [@dyn 66]
  6343: 82 10 28                 ra = u64 [sp + 0x28]
  6346: 82 15 20                 s0 = u64 [sp + 0x20]
  6349: 82 16 18                 s1 = u64 [sp + 0x18]
  6352: 95 11 30                 sp = sp + 0x30
  6355: 32 00                    ret
      :                          @478 [@dyn 67]
  6357: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  6361: 7b 10 80 00              u64 [sp + 0x80] = ra
  6365: 80 89 34                 a2 = u32 [a1 + 0x34]
  6368: 82 77                    a0 = u64 [a0]
  6370: 84 9a 10                 a3 = a2 & 0x10
  6373: 52 0a 16                 jump @481 if a3 != 0
      :                          @479
  6376: 84 99 20                 a2 = a2 & 0x20
  6379: 52 09 52                 jump @485 if a2 != 0
      :                          @480
  6382: 7c 77                    a0 = u8 [a0]
  6384: 82 10 80 00              ra = u64 [sp + 0x80]
  6388: 95 11 88 00              sp = sp + 0x88
  6392: 28 af f5                 jump @278
      :                          @481
  6395: 7c 77                    a0 = u8 [a0]
  6397: 33 0b 81 00              a4 = 0x81
  6401: 95 19 7f                 a2 = sp + 0x7f
  6404: 33 02 57                 t0 = 0x57
  6407: 01                       fallthrough
      :                          @482
  6408: 64 bc                    a5 = a4
  6410: 84 7b 0f                 a4 = a0 & 0xf
  6413: 97 77 38                 a0 = a0 << 0x38
  6416: 98 77 3c                 a0 = a0 >> 0x3c
  6419: 88 b3 0a                 t1 = a4 <u 0xa
  6422: 33 0a 30                 a3 = 0x30
  6425: da 32 0a                 a3 = t0 if t1 == 0
  6428: be ba 0a                 i32 a3 = a3 + a4
  6431: 78 9a                    u8 [a2] = a3
  6433: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  6436: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
  6439: 52 07 e1                 jump @482 if a0 != 0
      :                          @483
  6442: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
  6445: 56 27 80 00 6b           jump @491 if a0 >u 128
      :                          @484
  6450: 9a bb 81 00              a4 = 0x81 - a4
  6454: 64 1a                    a3 = sp
  6456: c8 7a 0a                 a3 = a3 + a0
  6459: 28 43                    jump @489
      :                          @485
  6461: 7c 77                    a0 = u8 [a0]
  6463: 33 0b 81 00              a4 = 0x81
  6467: 95 19 7f                 a2 = sp + 0x7f
  6470: 33 02 37                 t0 = 0x37
  6473: 01                       fallthrough
      :                          @486
  6474: 64 bc                    a5 = a4
  6476: 84 7b 0f                 a4 = a0 & 0xf
  6479: 97 77 38                 a0 = a0 << 0x38
  6482: 98 77 3c                 a0 = a0 >> 0x3c
  6485: 88 b3 0a                 t1 = a4 <u 0xa
  6488: 33 0a 30                 a3 = 0x30
  6491: da 32 0a                 a3 = t0 if t1 == 0
  6494: be ba 0a                 i32 a3 = a3 + a4
  6497: 78 9a                    u8 [a2] = a3
  6499: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  6502: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
  6505: 52 07 e1                 jump @486 if a0 != 0
      :                          @487
  6508: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
  6511: 56 27 80 00 29           jump @491 if a0 >u 128
      :                          @488
  6516: 9a bb 81 00              a4 = 0x81 - a4
  6520: 64 1a                    a3 = sp
  6522: c8 7a 0a                 a3 = a3 + a0
  6525: 01                       fallthrough
      :                          @489
  6526: 33 09 02                 a2 = 0x2
  6529: 64 87                    a0 = a1
  6531: 33 08 93 00 01           a1 = 0x10093
  6536: 50 20 88 00 3b f6        ra = 136, jump @288
      :                          @490 [@dyn 68]
  6542: 82 10 80 00              ra = u64 [sp + 0x80]
  6546: 95 11 88 00              sp = sp + 0x88
  6550: 32 00                    ret
      :                          @491
  6552: 00                       trap
