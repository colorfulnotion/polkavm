// RO data = 656/656 bytes
// RW data = 16/65616 bytes
// Stack size = 65536 bytes
// RO data = [70, 73, 66, 32, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 58, 32, 116, 105, 109, 101, 115, 108, 111, 116, 61, 32, 115, 101, 114, 118, 105, 99, 101, 95, 105, 110, 100, 101, 120, 61, 32, 115, 101, 110, 100, 101, 114, 61, 32, 97, 109, 111, 117, 110, 116, 61, 32, 114, 101, 99, 101, 105, 118, 101, 114, 61, 32, 109, 101, 109, 111, 61, 32, 103, 97, 115, 95, 108, 105, 109, 105, 116, 61, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 26, 0, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 41, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 57, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 49, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 67, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 73, 0, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 70, 73, 66, 32, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 32, 103, 97, 115, 58, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 52, 41, 0, 0, 0, 200, 0, 1, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 225, 0, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 58, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 60, 0, 0, 0, 0, 0, 0, 0, 66, 0, 0, 0, 0, 0, 0, 0, 74, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 108, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 110, 0, 0, 0, 0, 0, 0, 0, 116, 0, 0, 0, 0, 0, 0, 0, 120, 0, 0, 0, 0, 0, 0, 0, 32, 32, 32, 32, 44, 32, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 119, 114, 105, 116, 101, 95, 114, 101, 115, 117, 108, 116, 32, 107, 101, 121, 61, 44, 32, 114, 101, 115, 117, 108, 116, 61, 0, 0, 84, 2, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 101, 2, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0]
// RW data = [75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 2301
// Code size = 6900 bytes

      :                          @0
     0: 28 ea 01 00 00           jump @34
      :                          @1
     5: 28 55 02 00 00           jump @39
      :                          @2
    10: 28 33 05                 jump @123
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 80 89 34                 a2 = u32 [a1 + 0x34]
    24: 84 9a 10                 a3 = a2 & 0x10
    27: 52 0a 16                 jump @6 if a3 != 0
      :                          @4
    30: 84 99 20                 a2 = a2 & 0x20
    33: 52 09 40                 jump @9 if a2 != 0
      :                          @5
    36: 80 77                    a0 = u32 [a0]
    38: 82 10 80 00              ra = u64 [sp + 0x80]
    42: 95 11 88 00              sp = sp + 0x88
    46: 28 d2 0f                 jump @299
      :                          @6
    49: 81 7b                    a4 = i32 [a0]
    51: 33 09 81 00              a2 = 0x81
    55: 95 17 7f                 a0 = sp + 0x7f
    58: 33 02 57                 t0 = 0x57
    61: 01                       fallthrough
      :                          @7
    62: 64 9c                    a5 = a2
    64: 8b ba 04                 i32 a3 = a4 >> 0x4
    67: 84 bb 0f                 a4 = a4 & 0xf
    70: 88 b3 0a                 t1 = a4 <u 0xa
    73: 33 09 30                 a2 = 0x30
    76: da 32 09                 a2 = t0 if t1 == 0
    79: be b9 09                 i32 a2 = a2 + a4
    82: 78 79                    u8 [a0] = a2
    84: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
    87: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
    90: 64 ab                    a4 = a3
    92: 52 0a e2                 jump @7 if a3 != 0
      :                          @8
    95: 28 30                    jump @11
      :                          @9
    97: 81 7b                    a4 = i32 [a0]
    99: 33 09 81 00              a2 = 0x81
   103: 95 17 7f                 a0 = sp + 0x7f
   106: 33 02 37                 t0 = 0x37
   109: 01                       fallthrough
      :                          @10
   110: 64 9c                    a5 = a2
   112: 8b ba 04                 i32 a3 = a4 >> 0x4
   115: 84 bb 0f                 a4 = a4 & 0xf
   118: 88 b3 0a                 t1 = a4 <u 0xa
   121: 33 09 30                 a2 = 0x30
   124: da 32 09                 a2 = t0 if t1 == 0
   127: be b9 09                 i32 a2 = a2 + a4
   130: 78 79                    u8 [a0] = a2
   132: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   135: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   138: 64 ab                    a4 = a3
   140: 52 0a e2                 jump @10 if a3 != 0
      :                          @11
   143: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   146: 56 27 80 00 27           jump @14 if a0 >u 128
      :                          @12
   151: 9a 9b 81 00              a4 = 0x81 - a2
   155: 64 1a                    a3 = sp
   157: c8 7a 0a                 a3 = a3 + a0
   160: 33 09 02                 a2 = 0x2
   163: 64 87                    a0 = a1
   165: 33 08 8a 01 01           a1 = 0x1018a
   170: 50 10 04 7d 10           ra = 4, jump @309
      :                          @13 [@dyn 2]
   175: 82 10 80 00              ra = u64 [sp + 0x80]
   179: 95 11 88 00              sp = sp + 0x88
   183: 32 00                    ret
      :                          @14
   185: 00                       trap
      :                          @15 [@dyn 3]
   186: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   190: 7b 10 80 00              u64 [sp + 0x80] = ra
   194: 80 89 34                 a2 = u32 [a1 + 0x34]
   197: 84 9a 10                 a3 = a2 & 0x10
   200: 52 0a 16                 jump @18 if a3 != 0
      :                          @16
   203: 84 99 20                 a2 = a2 & 0x20
   206: 52 09 40                 jump @21 if a2 != 0
      :                          @17
   209: 82 77                    a0 = u64 [a0]
   211: 82 10 80 00              ra = u64 [sp + 0x80]
   215: 95 11 88 00              sp = sp + 0x88
   219: 28 25 0f                 jump @299
      :                          @18
   222: 82 7b                    a4 = u64 [a0]
   224: 33 09 81 00              a2 = 0x81
   228: 95 17 7f                 a0 = sp + 0x7f
   231: 33 02 57                 t0 = 0x57
   234: 01                       fallthrough
      :                          @19
   235: 64 9c                    a5 = a2
   237: 98 ba 04                 a3 = a4 >> 0x4
   240: 84 bb 0f                 a4 = a4 & 0xf
   243: 88 b3 0a                 t1 = a4 <u 0xa
   246: 33 09 30                 a2 = 0x30
   249: da 32 09                 a2 = t0 if t1 == 0
   252: be b9 09                 i32 a2 = a2 + a4
   255: 78 79                    u8 [a0] = a2
   257: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   260: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   263: 64 ab                    a4 = a3
   265: 52 0a e2                 jump @19 if a3 != 0
      :                          @20
   268: 28 30                    jump @23
      :                          @21
   270: 82 7b                    a4 = u64 [a0]
   272: 33 09 81 00              a2 = 0x81
   276: 95 17 7f                 a0 = sp + 0x7f
   279: 33 02 37                 t0 = 0x37
   282: 01                       fallthrough
      :                          @22
   283: 64 9c                    a5 = a2
   285: 98 ba 04                 a3 = a4 >> 0x4
   288: 84 bb 0f                 a4 = a4 & 0xf
   291: 88 b3 0a                 t1 = a4 <u 0xa
   294: 33 09 30                 a2 = 0x30
   297: da 32 09                 a2 = t0 if t1 == 0
   300: be b9 09                 i32 a2 = a2 + a4
   303: 78 79                    u8 [a0] = a2
   305: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   308: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   311: 64 ab                    a4 = a3
   313: 52 0a e2                 jump @22 if a3 != 0
      :                          @23
   316: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   319: 56 27 80 00 27           jump @26 if a0 >u 128
      :                          @24
   324: 9a 9b 81 00              a4 = 0x81 - a2
   328: 64 1a                    a3 = sp
   330: c8 7a 0a                 a3 = a3 + a0
   333: 33 09 02                 a2 = 0x2
   336: 64 87                    a0 = a1
   338: 33 08 8a 01 01           a1 = 0x1018a
   343: 50 10 08 d0 0f           ra = 8, jump @309
      :                          @25 [@dyn 4]
   348: 82 10 80 00              ra = u64 [sp + 0x80]
   352: 95 11 88 00              sp = sp + 0x88
   356: 32 00                    ret
      :                          @26
   358: 00                       trap
      :                          @27 [@dyn 5]
   359: 95 11 c8                 sp = sp + 0xffffffffffffffc8
   362: 7b 10 30                 u64 [sp + 0x30] = ra
   365: 7b 15 28                 u64 [sp + 0x28] = s0
   368: 7b 16 20                 u64 [sp + 0x20] = s1
   371: 64 86                    s1 = a1
   373: 82 88 28                 a1 = u64 [a1 + 0x28]
   376: 82 6a 20                 a3 = u64 [s1 + 0x20]
   379: 82 8b 18                 a4 = u64 [a1 + 0x18]
   382: 64 75                    s0 = a0
   384: 33 08 48 01 01           a1 = 0x10148
   389: 33 09 01                 a2 = 0x1
   392: 64 a7                    a0 = a3
   394: b4 b0 01 0c              ra = 12, jump [a4]
      :                          @28 [@dyn 6]
   398: 7b 16 08                 u64 [sp + 0x8] = s1
   401: 78 17 10                 u8 [sp + 0x10] = a0
   404: 46 11 11                 u8 [sp + 17] = 0
   407: 33 06 80 00              s1 = 0x80
   411: 33 07 8c 00              a0 = 0x8c
   415: 7b 17                    u64 [sp] = a0
   417: 01                       fallthrough
      :                          @29
   418: 7b 15 18                 u64 [sp + 0x18] = s0
   421: 95 17 08                 a0 = sp + 0x8
   424: 95 18 18                 a1 = sp + 0x18
   427: 82 19                    a2 = u64 [sp]
   429: 50 10 0e 4a 16           ra = 14, jump @453
      :                          @30 [@dyn 7]
   434: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
   437: 95 55 01                 s0 = s0 + 0x1
   440: 52 06 ea                 jump @29 if s1 != 0
      :                          @31
   443: 7c 18 10                 a1 = u8 [sp + 0x10]
   446: 33 07 01                 a0 = 0x1
   449: 52 08 1b                 jump @33 if a1 != 0
      :                          @32
   452: 82 17 08                 a0 = u64 [sp + 0x8]
   455: 82 78 28                 a1 = u64 [a0 + 0x28]
   458: 82 77 20                 a0 = u64 [a0 + 0x20]
   461: 82 8a 18                 a3 = u64 [a1 + 0x18]
   464: 33 08 89 01 01           a1 = 0x10189
   469: 33 09 01                 a2 = 0x1
   472: b4 a0 01 10              ra = 16, jump [a3]
      :                          @33 [@dyn 8]
   476: 82 10 30                 ra = u64 [sp + 0x30]
   479: 82 15 28                 s0 = u64 [sp + 0x28]
   482: 82 16 20                 s1 = u64 [sp + 0x20]
   485: 95 11 38                 sp = sp + 0x38
   488: 32 00                    ret
      :                          @34 [export #0: 'refine']
   490: 95 11 e8                 sp = sp + 0xffffffffffffffe8
   493: 7b 10 10                 u64 [sp + 0x10] = ra
   496: 7b 15 08                 u64 [sp + 0x8] = s0
   499: 7b 16                    u64 [sp] = s1
   501: 33 05 34 00 03           s0 = 0x30034
   506: 33 09 0c                 a2 = 0xc
   509: 33 0a 05                 a3 = 0x5
   512: 33 07 34 00 03           a0 = 0x30034
   517: 33 08                    a1 = 0
   519: 33 0b                    a4 = 0
   521: 33 0c                    a5 = 0
   523: 0a 12                    ecalli 18 // 'fetch'
   525: 01                       fallthrough
      :                          @35
   526: 51 17 ff 1b              jump @37 if a0 == 4294967295
      :                          @36
   530: 39 07 38 00 03           a0 = i32 [0x30038]
   535: 39 08 3c 00 03           a1 = i32 [0x3003c]
   540: 39 09 34 00 03           a2 = i32 [0x30034]
   545: be 78 08                 i32 a1 = a1 + a0
   548: 83 99 01                 i32 a2 = a2 + 0x1
   551: 28 0b                    jump @38
      :                          @37
   553: 33 07                    a0 = 0
   555: 33 09 01                 a2 = 0x1
   558: 33 08 01                 a1 = 0x1
   561: 01                       fallthrough
      :                          @38
   562: 3d 09 34 00 03           u32 [0x30034] = a2
   567: 3d 08 38 00 03           u32 [0x30038] = a1
   572: 3d 07 3c 00 03           u32 [0x3003c] = a0
   577: 33 08 0c                 a1 = 0xc
   580: 64 57                    a0 = s0
   582: 0a 13                    ecalli 19 // 'export'
   584: 33 08 0c                 a1 = 0xc
   587: 64 57                    a0 = s0
   589: 82 10 10                 ra = u64 [sp + 0x10]
   592: 82 15 08                 s0 = u64 [sp + 0x8]
   595: 82 16                    s1 = u64 [sp]
   597: 95 11 18                 sp = sp + 0x18
   600: 32 00                    ret
      :                          @39 [export #1: 'accumulate']
   602: 95 11 d8                 sp = sp + 0xffffffffffffffd8
   605: 7b 10 20                 u64 [sp + 0x20] = ra
   608: 7b 15 18                 u64 [sp + 0x18] = s0
   611: 7b 16 10                 u64 [sp + 0x10] = s1
   614: 33 09 00 00 01           a2 = 0x10000
   619: 51 08 7a 01              jump @85 if a1 == 0
      :                          @40
   623: 64 86                    s1 = a1
   625: 7d 78                    a1 = i8 [a0]
   627: 33 05 01                 s0 = 0x1
   630: 59 08 37                 jump @47 if a1 >=s 0
      :                          @41
   633: 84 8a ff 00              a3 = a1 & 0xff
   637: 33 05 02                 s0 = 0x2
   640: 53 2a c0 00 2d           jump @47 if a3 <u 192
      :                          @42
   645: 33 05 03                 s0 = 0x3
   648: 53 2a e0 00 25           jump @47 if a3 <u 224
      :                          @43
   653: 33 05 04                 s0 = 0x4
   656: 53 2a f0 00 1d           jump @47 if a3 <u 240
      :                          @44
   661: 33 05 05                 s0 = 0x5
   664: 53 2a f8 00 15           jump @47 if a3 <u 248
      :                          @45
   669: 33 05 06                 s0 = 0x6
   672: 53 2a fc 00 0d           jump @47 if a3 <u 252
      :                          @46
   677: 88 a8 fe 00              a1 = a3 <u 0xfe
   681: 9a 85 08                 s0 = 0x8 - a1
   684: 01                       fallthrough
      :                          @47
   685: ae 56 08                 jump @49 if s1 >=u s0
      :                          @48
   688: 33 08                    a1 = 0
   690: 28 33 01                 jump @85
      :                          @49
   693: 64 58                    a1 = s0
   695: 7b 17                    u64 [sp] = a0
   697: 50 10 12 7a 16           ra = 18, jump @470
      :                          @50 [@dyn 9]
   702: aa 56 1f 01              jump @84 if s1 == s0
      :                          @51
   706: 82 17                    a0 = u64 [sp]
   708: c8 57 07                 a0 = a0 + s0
   711: 7d 78                    a1 = i8 [a0]
   713: c9 56 06                 s1 = s1 - s0
   716: 33 05 01                 s0 = 0x1
   719: 59 08 37                 jump @58 if a1 >=s 0
      :                          @52
   722: 84 89 ff 00              a2 = a1 & 0xff
   726: 33 05 02                 s0 = 0x2
   729: 53 29 c0 00 2d           jump @58 if a2 <u 192
      :                          @53
   734: 33 05 03                 s0 = 0x3
   737: 53 29 e0 00 25           jump @58 if a2 <u 224
      :                          @54
   742: 33 05 04                 s0 = 0x4
   745: 53 29 f0 00 1d           jump @58 if a2 <u 240
      :                          @55
   750: 33 05 05                 s0 = 0x5
   753: 53 29 f8 00 15           jump @58 if a2 <u 248
      :                          @56
   758: 33 05 06                 s0 = 0x6
   761: 53 29 fc 00 0d           jump @58 if a2 <u 252
      :                          @57
   766: 88 98 fe 00              a1 = a2 <u 0xfe
   770: 9a 85 08                 s0 = 0x8 - a1
   773: 01                       fallthrough
      :                          @58
   774: ac 56 d7 00              jump @84 if s1 <u s0
      :                          @59
   778: 64 58                    a1 = s0
   780: 7b 17                    u64 [sp] = a0
   782: 50 10 14 25 16           ra = 20, jump @470
      :                          @60 [@dyn 10]
   787: 82 17                    a0 = u64 [sp]
   789: c8 57 07                 a0 = a0 + s0
   792: c9 56 0a                 a3 = s1 - s0
   795: ab 56 07                 jump @62 if s1 != s0
      :                          @61
   798: 33 05                    s0 = 0
   800: 28 41                    jump @70
      :                          @62
   802: 7d 78                    a1 = i8 [a0]
   804: 33 05 01                 s0 = 0x1
   807: 59 08 37                 jump @69 if a1 >=s 0
      :                          @63
   810: 84 89 ff 00              a2 = a1 & 0xff
   814: 33 05 02                 s0 = 0x2
   817: 53 29 c0 00 2d           jump @69 if a2 <u 192
      :                          @64
   822: 33 05 03                 s0 = 0x3
   825: 53 29 e0 00 25           jump @69 if a2 <u 224
      :                          @65
   830: 33 05 04                 s0 = 0x4
   833: 53 29 f0 00 1d           jump @69 if a2 <u 240
      :                          @66
   838: 33 05 05                 s0 = 0x5
   841: 53 29 f8 00 15           jump @69 if a2 <u 248
      :                          @67
   846: 33 05 06                 s0 = 0x6
   849: 53 29 fc 00 0d           jump @69 if a2 <u 252
      :                          @68
   854: 88 98 fe 00              a1 = a2 <u 0xfe
   858: 9a 85 08                 s0 = 0x8 - a1
   861: 01                       fallthrough
      :                          @69
   862: ac 5a 7f                 jump @84 if a3 <u s0
      :                          @70
   865: 64 a6                    s1 = a3
   867: 7b 17                    u64 [sp] = a0
   869: 64 58                    a1 = s0
   871: 50 10 16 cc 15           ra = 22, jump @470
      :                          @71 [@dyn 11]
   876: 51 07 71                 jump @84 if a0 == 0
      :                          @72
   879: e4 56 07                 a0 = maxu(s1, s0)
   882: c9 57 07                 a0 = a0 - s0
   885: 33 09 00 00 01           a2 = 0x10000
   890: 53 17 60 36 ff           jump @48 if a0 <u 96
      :                          @73
   895: 82 18                    a1 = u64 [sp]
   897: c8 85 05                 s0 = s0 + a1
   900: 95 76 a0                 s1 = a0 + 0xffffffffffffffa0
   903: 95 57 60                 a0 = s0 + 0x60
   906: 7b 17                    u64 [sp] = a0
   908: 51 06 69                 jump @86 if s1 == 0
      :                          @74
   911: 7d 78                    a1 = i8 [a0]
   913: 33 05 01                 s0 = 0x1
   916: 59 08 37                 jump @81 if a1 >=s 0
      :                          @75
   919: 84 89 ff 00              a2 = a1 & 0xff
   923: 33 05 02                 s0 = 0x2
   926: 53 29 c0 00 2d           jump @81 if a2 <u 192
      :                          @76
   931: 33 05 03                 s0 = 0x3
   934: 53 29 e0 00 25           jump @81 if a2 <u 224
      :                          @77
   939: 33 05 04                 s0 = 0x4
   942: 53 29 f0 00 1d           jump @81 if a2 <u 240
      :                          @78
   947: 33 05 05                 s0 = 0x5
   950: 53 29 f8 00 15           jump @81 if a2 <u 248
      :                          @79
   955: 33 05 06                 s0 = 0x6
   958: 53 29 fc 00 0d           jump @81 if a2 <u 252
      :                          @80
   963: 88 98 fe 00              a1 = a2 <u 0xfe
   967: 9a 85 08                 s0 = 0x8 - a1
   970: 01                       fallthrough
      :                          @81
   971: ac 56 6f 01              jump @120 if s1 <u s0
      :                          @82
   975: 64 58                    a1 = s0
   977: 50 10 18 62 15           ra = 24, jump @470
      :                          @83 [@dyn 12]
   982: 33 09 00 00 01           a2 = 0x10000
   987: 28 1f                    jump @87
      :                          @84
   989: 33 08                    a1 = 0
   991: 33 09 00 00 01           a2 = 0x10000
   996: 01                       fallthrough
      :                          @85
   997: 64 97                    a0 = a2
   999: 82 10 20                 ra = u64 [sp + 0x20]
  1002: 82 15 18                 s0 = u64 [sp + 0x18]
  1005: 82 16 10                 s1 = u64 [sp + 0x10]
  1008: 95 11 28                 sp = sp + 0x28
  1011: 32 00                    ret
      :                          @86
  1013: 33 05                    s0 = 0
  1015: 33 07                    a0 = 0
  1017: 01                       fallthrough
      :                          @87
  1018: e4 56 08                 a1 = maxu(s1, s0)
  1021: c9 58 08                 a1 = a1 - s0
  1024: e4 78 06                 s1 = maxu(a1, a0)
  1027: c9 76 06                 s1 = s1 - a0
  1030: 53 16 20 aa fe           jump @48 if s1 <u 32
      :                          @88
  1035: 82 18                    a1 = u64 [sp]
  1037: c8 85 05                 s0 = s0 + a1
  1040: c8 57 07                 a0 = a0 + s0
  1043: 95 66 e0                 s1 = s1 + 0xffffffffffffffe0
  1046: 95 77 20                 a0 = a0 + 0x20
  1049: 7b 17                    u64 [sp] = a0
  1051: 51 06 51                 jump @99 if s1 == 0
      :                          @89
  1054: 7d 78                    a1 = i8 [a0]
  1056: 33 05 01                 s0 = 0x1
  1059: 59 08 37                 jump @96 if a1 >=s 0
      :                          @90
  1062: 84 89 ff 00              a2 = a1 & 0xff
  1066: 33 05 02                 s0 = 0x2
  1069: 53 29 c0 00 2d           jump @96 if a2 <u 192
      :                          @91
  1074: 33 05 03                 s0 = 0x3
  1077: 53 29 e0 00 25           jump @96 if a2 <u 224
      :                          @92
  1082: 33 05 04                 s0 = 0x4
  1085: 53 29 f0 00 1d           jump @96 if a2 <u 240
      :                          @93
  1090: 33 05 05                 s0 = 0x5
  1093: 53 29 f8 00 15           jump @96 if a2 <u 248
      :                          @94
  1098: 33 05 06                 s0 = 0x6
  1101: 53 29 fc 00 0d           jump @96 if a2 <u 252
      :                          @95
  1106: 88 98 fe 00              a1 = a2 <u 0xfe
  1110: 9a 85 08                 s0 = 0x8 - a1
  1113: 01                       fallthrough
      :                          @96
  1114: ac 56 e0 00              jump @120 if s1 <u s0
      :                          @97
  1118: 64 58                    a1 = s0
  1120: 50 10 1a d3 14           ra = 26, jump @470
      :                          @98 [@dyn 13]
  1125: 33 09 00 00 01           a2 = 0x10000
  1130: 28 05                    jump @100
      :                          @99
  1132: 33 05                    s0 = 0
  1134: 01                       fallthrough
      :                          @100
  1135: ae 65 41 fe              jump @48 if s0 >=u s1
      :                          @101
  1139: 82 17                    a0 = u64 [sp]
  1141: c8 57 07                 a0 = a0 + s0
  1144: 7c 78                    a1 = u8 [a0]
  1146: 51 08 19                 jump @103 if a1 == 0
      :                          @102
  1149: 46 11 0f                 u8 [sp + 15] = 0
  1152: 95 17 0f                 a0 = sp + 0xf
  1155: 33 08 01                 a1 = 0x1
  1158: 33 09                    a2 = 0
  1160: 33 0a                    a3 = 0
  1162: 0a 03                    ecalli 3 // 'write'
  1164: 33 08                    a1 = 0
  1166: 33 05                    s0 = 0
  1168: 28 91 00                 jump @118
      :                          @103
  1171: e4 56 08                 a1 = maxu(s1, s0)
  1174: c9 58 08                 a1 = a1 - s0
  1177: 95 76 01                 s1 = a0 + 0x1
  1180: 33 07 01                 a0 = 0x1
  1183: e4 78 07                 a0 = maxu(a1, a0)
  1186: 33 09 02                 a2 = 0x2
  1189: 95 7a ff                 a3 = a0 + 0xffffffffffffffff
  1192: ae 98 09                 jump @105 if a1 >=u a2
      :                          @104
  1195: 33 05                    s0 = 0
  1197: 33 07                    a0 = 0
  1199: 28 4f                    jump @115
      :                          @105
  1201: 7d 67                    a0 = i8 [s1]
  1203: 33 05 01                 s0 = 0x1
  1206: 59 07 37                 jump @112 if a0 >=s 0
      :                          @106
  1209: 84 77 ff 00              a0 = a0 & 0xff
  1213: 33 05 02                 s0 = 0x2
  1216: 53 27 c0 00 2d           jump @112 if a0 <u 192
      :                          @107
  1221: 33 05 03                 s0 = 0x3
  1224: 53 27 e0 00 25           jump @112 if a0 <u 224
      :                          @108
  1229: 33 05 04                 s0 = 0x4
  1232: 53 27 f0 00 1d           jump @112 if a0 <u 240
      :                          @109
  1237: 33 05 05                 s0 = 0x5
  1240: 53 27 f8 00 15           jump @112 if a0 <u 248
      :                          @110
  1245: 33 05 06                 s0 = 0x6
  1248: 53 27 fc 00 0d           jump @112 if a0 <u 252
      :                          @111
  1253: 88 77 fe 00              a0 = a0 <u 0xfe
  1257: 9a 75 08                 s0 = 0x8 - a0
  1260: 01                       fallthrough
      :                          @112
  1261: 7b 1a                    u64 [sp] = a3
  1263: ac 5a 4d                 jump @122 if a3 <u s0
      :                          @113
  1266: 64 67                    a0 = s1
  1268: 64 58                    a1 = s0
  1270: 50 10 1c 3d 14           ra = 28, jump @470
      :                          @114 [@dyn 14]
  1275: 82 1a                    a3 = u64 [sp]
  1277: 01                       fallthrough
      :                          @115
  1278: c8 56 09                 a2 = s1 + s0
  1281: e4 5a 08                 a1 = maxu(a3, s0)
  1284: c9 58 08                 a1 = a1 - s0
  1287: e6 78 05                 s0 = minu(a1, a0)
  1290: 46 11 0f                 u8 [sp + 15] = 0
  1293: 95 17 0f                 a0 = sp + 0xf
  1296: 33 08 01                 a1 = 0x1
  1299: 64 96                    s1 = a2
  1301: 64 5a                    a3 = s0
  1303: 0a 03                    ecalli 3 // 'write'
  1305: 01                       fallthrough
      :                          @116
  1306: 55 15 21 21              jump @121 if s0 >=u 33
      :                          @117
  1310: 64 68                    a1 = s1
  1312: 01                       fallthrough
      :                          @118
  1313: 33 06 11 00 03           s1 = 0x30011
  1318: 33 07 11 00 03           a0 = 0x30011
  1323: 64 59                    a2 = s0
  1325: 50 10 1e 1d 0a           ra = 30, jump @279
      :                          @119 [@dyn 15]
  1330: 64 69                    a2 = s1
  1332: 33 08 20                 a1 = 0x20
  1335: 28 ae fe                 jump @85
      :                          @120
  1338: 00                       trap
      :                          @121
  1339: 00                       trap
      :                          @122
  1340: 00                       trap
      :                          @123 [export #2: 'on_transfer']
  1341: 95 11 70 fd              sp = sp + 0xfffffffffffffd70
  1345: 7b 10 88 02              u64 [sp + 0x288] = ra
  1349: 7b 15 80 02              u64 [sp + 0x280] = s0
  1353: 7b 16 78 02              u64 [sp + 0x278] = s1
  1357: 64 8c                    a5 = a1
  1359: 64 79                    a2 = a0
  1361: 33 02                    t0 = 0
  1363: 95 7b 04                 a4 = a0 + 0x4
  1366: 33 07 02                 a0 = 0x2
  1369: 7b 17 28                 u64 [sp + 0x28] = a0
  1372: 33 07 06                 a0 = 0x6
  1375: 7b 17 58                 u64 [sp + 0x58] = a0
  1378: 33 07 0a                 a0 = 0xa
  1381: 7b 17 20                 u64 [sp + 0x20] = a0
  1384: 33 07 58 00 01           a0 = 0x10058
  1389: 7b 17 18                 u64 [sp + 0x18] = a0
  1392: 33 07 84 00              a0 = 0x84
  1396: 7b 17 10                 u64 [sp + 0x10] = a0
  1399: 33 07 70 02 01           a0 = 0x10270
  1404: 7b 17 08                 u64 [sp + 0x8] = a0
  1407: 33 07 40 00 03           a0 = 0x30040
  1412: 95 77 00 00 01           a0 = a0 + 0x10000
  1417: 7b 17 50                 u64 [sp + 0x50] = a0
  1420: 33 07 f8 00 01           a0 = 0x100f8
  1425: 7b 17                    u64 [sp] = a0
  1427: 95 97 08                 a0 = a2 + 0x8
  1430: 95 ca f8                 a3 = a5 + 0xfffffffffffffff8
  1433: 95 98 0c                 a1 = a2 + 0xc
  1436: 7b 18 60                 u64 [sp + 0x60] = a1
  1439: 33 08 08                 a1 = 0x8
  1442: 33 06 ff ff fe           s1 = 0xfffffffffffeffff
  1447: 7b 16 48                 u64 [sp + 0x48] = s1
  1450: 7b 17 c0 00              u64 [sp + 0xc0] = a0
  1454: 7b 17 b8 00              u64 [sp + 0xb8] = a0
  1458: 7b 1c 40                 u64 [sp + 0x40] = a5
  1461: 7b 19 38                 u64 [sp + 0x38] = a2
  1464: 7b 1b 30                 u64 [sp + 0x30] = a4
  1467: 7b 1a a8 00              u64 [sp + 0xa8] = a3
  1471: ac 8c c0 04              jump @171 if a5 <u a1
      :                          @124
  1475: 51 09 d5 04              jump @172 if a2 == 0
      :                          @125
  1479: 51 0b d1 04              jump @172 if a4 == 0
      :                          @126
  1483: 7c 97                    a0 = u8 [a2]
  1485: 7b 17 78                 u64 [sp + 0x78] = a0
  1488: 7c 97 01                 a0 = u8 [a2 + 0x1]
  1491: 7b 17 68                 u64 [sp + 0x68] = a0
  1494: 7c 97 02                 a0 = u8 [a2 + 0x2]
  1497: 7b 17 70                 u64 [sp + 0x70] = a0
  1500: 7c 97 03                 a0 = u8 [a2 + 0x3]
  1503: 7b 17 80 00              u64 [sp + 0x80] = a0
  1507: 7c b7                    a0 = u8 [a4]
  1509: 7b 17 98 00              u64 [sp + 0x98] = a0
  1513: 7c b7 01                 a0 = u8 [a4 + 0x1]
  1516: 7b 17 88 00              u64 [sp + 0x88] = a0
  1520: 7c b7 02                 a0 = u8 [a4 + 0x2]
  1523: 7b 17 90 00              u64 [sp + 0x90] = a0
  1527: 7c b7 03                 a0 = u8 [a4 + 0x3]
  1530: 7b 17 a0 00              u64 [sp + 0xa0] = a0
  1534: 51 0a 53                 jump @136 if a3 == 0
      :                          @127
  1537: 82 17 c0 00              a0 = u64 [sp + 0xc0]
  1541: 7d 77                    a0 = i8 [a0]
  1543: 33 05 01                 s0 = 0x1
  1546: 59 07 4a                 jump @137 if a0 >=s 0
      :                          @128
  1549: 84 77 ff 00              a0 = a0 & 0xff
  1553: 33 05 02                 s0 = 0x2
  1556: 33 06 c0 00              s1 = 0xc0
  1560: ac 67 33                 jump @134 if a0 <u s1
      :                          @129
  1563: 33 05 03                 s0 = 0x3
  1566: 33 06 e0 00              s1 = 0xe0
  1570: ac 67 29                 jump @134 if a0 <u s1
      :                          @130
  1573: 33 05 04                 s0 = 0x4
  1576: 33 06 f0 00              s1 = 0xf0
  1580: ac 67 1f                 jump @134 if a0 <u s1
      :                          @131
  1583: 33 05 05                 s0 = 0x5
  1586: 33 06 f8 00              s1 = 0xf8
  1590: ac 67 15                 jump @134 if a0 <u s1
      :                          @132
  1593: 33 05 06                 s0 = 0x6
  1596: 33 06 fc 00              s1 = 0xfc
  1600: ac 67 0b                 jump @134 if a0 <u s1
      :                          @133
  1603: 88 77 fe 00              a0 = a0 <u 0xfe
  1607: 9a 75 08                 s0 = 0x8 - a0
  1610: 01                       fallthrough
      :                          @134
  1611: ae 5a 09                 jump @137 if a3 >=u s0
      :                          @135
  1614: 28 31 04                 jump @171
      :                          @136
  1617: 33 05                    s0 = 0
  1619: 01                       fallthrough
      :                          @137
  1620: 82 17 c0 00              a0 = u64 [sp + 0xc0]
  1624: 64 58                    a1 = s0
  1626: 7b 12 b0 00              u64 [sp + 0xb0] = t0
  1630: 50 10 20 d5 12           ra = 32, jump @470
      :                          @138 [@dyn 16]
  1635: 33 03 98 00              t1 = 0x98
  1639: 33 02 04                 t0 = 0x4
  1642: 33 06 08                 s1 = 0x8
  1645: 82 1c a8 00              a5 = u64 [sp + 0xa8]
  1649: 82 1b b0 00              a4 = u64 [sp + 0xb0]
  1653: ae 7b 0a 04              jump @171 if a4 >=u a0
      :                          @139
  1657: 82 18 68                 a1 = u64 [sp + 0x68]
  1660: 97 88 08                 a1 = a1 << 0x8
  1663: 82 19 78                 a2 = u64 [sp + 0x78]
  1666: d4 98 08                 a1 = a1 | a2
  1669: 82 19 70                 a2 = u64 [sp + 0x70]
  1672: 97 99 10                 a2 = a2 << 0x10
  1675: 82 1a 80 00              a3 = u64 [sp + 0x80]
  1679: 97 aa 18                 a3 = a3 << 0x18
  1682: d4 a9 09                 a2 = a2 | a3
  1685: d4 89 04                 t2 = a2 | a1
  1688: 82 18 88 00              a1 = u64 [sp + 0x88]
  1692: 97 88 08                 a1 = a1 << 0x8
  1695: 82 19 98 00              a2 = u64 [sp + 0x98]
  1699: d4 98 08                 a1 = a1 | a2
  1702: 82 19 90 00              a2 = u64 [sp + 0x90]
  1706: 97 99 10                 a2 = a2 << 0x10
  1709: 82 1a a0 00              a3 = u64 [sp + 0xa0]
  1713: 97 aa 18                 a3 = a3 << 0x18
  1716: d4 a9 09                 a2 = a2 | a3
  1719: d4 89 00                 ra = a2 | a1
  1722: e4 5c 08                 a1 = maxu(a5, s0)
  1725: c9 58 08                 a1 = a1 - s0
  1728: 82 19 b8 00              a2 = u64 [sp + 0xb8]
  1732: c8 59 09                 a2 = a2 + s0
  1735: 82 1a 60                 a3 = u64 [sp + 0x60]
  1738: c8 a5 05                 s0 = s0 + a3
  1741: 64 ba                    a3 = a4
  1743: 01                       fallthrough
      :                          @140
  1744: ac 68 af 03              jump @171 if a1 <u s1
      :                          @141
  1748: aa 25 c4 03              jump @172 if s0 == t0
      :                          @142
  1752: 51 05 c0 03              jump @172 if s0 == 0
      :                          @143
  1756: ac 38 a3 03              jump @171 if a1 <u t1
      :                          @144
  1760: 51 0a 17                 jump @147 if a3 == 0
      :                          @145
  1763: 95 88 68 ff              a1 = a1 + 0xffffffffffffff68
  1767: 95 55 98 00              s0 = s0 + 0x98
  1771: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  1774: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1777: 52 07 df                 jump @140 if a0 != 0
      :                          @146
  1780: 28 8b 03                 jump @171
      :                          @147
  1783: 7c 97 01                 a0 = u8 [a2 + 0x1]
  1786: 7c 98                    a1 = u8 [a2]
  1788: 7c 9a 02                 a3 = u8 [a2 + 0x2]
  1791: 7d 9b 03                 a4 = i8 [a2 + 0x3]
  1794: 8a 77 08                 i32 a0 = a0 << 0x8
  1797: d4 87 07                 a0 = a0 | a1
  1800: 8a a8 10                 i32 a1 = a3 << 0x10
  1803: 8a ba 18                 i32 a3 = a4 << 0x18
  1806: d4 a8 08                 a1 = a1 | a3
  1809: d4 87 07                 a0 = a0 | a1
  1812: 7b 17 a0 00              u64 [sp + 0xa0] = a0
  1816: 7c 57 01                 a0 = u8 [s0 + 0x1]
  1819: 7c 58                    a1 = u8 [s0]
  1821: 7c 5a 02                 a3 = u8 [s0 + 0x2]
  1824: 7d 5b 03                 a4 = i8 [s0 + 0x3]
  1827: 8a 77 08                 i32 a0 = a0 << 0x8
  1830: d4 87 07                 a0 = a0 | a1
  1833: 8a a8 10                 i32 a1 = a3 << 0x10
  1836: 8a ba 18                 i32 a3 = a4 << 0x18
  1839: d4 a8 08                 a1 = a1 | a3
  1842: 7c 9a 0f                 a3 = u8 [a2 + 0xf]
  1845: 7c 9b 0e                 a4 = u8 [a2 + 0xe]
  1848: d4 87 07                 a0 = a0 | a1
  1851: 7b 17 98 00              u64 [sp + 0x98] = a0
  1855: 7c 97 0d                 a0 = u8 [a2 + 0xd]
  1858: 97 aa 10                 a3 = a3 << 0x10
  1861: 97 bb 08                 a4 = a4 << 0x8
  1864: d4 ba 0a                 a3 = a3 | a4
  1867: 7c 98 0c                 a1 = u8 [a2 + 0xc]
  1870: 7c 9b 0b                 a4 = u8 [a2 + 0xb]
  1873: d4 a7 07                 a0 = a0 | a3
  1876: 97 77 10                 a0 = a0 << 0x10
  1879: 97 88 08                 a1 = a1 << 0x8
  1882: d4 b8 08                 a1 = a1 | a4
  1885: 7c 9a 0a                 a3 = u8 [a2 + 0xa]
  1888: 7c 9b 09                 a4 = u8 [a2 + 0x9]
  1891: d4 87 07                 a0 = a0 | a1
  1894: 97 77 10                 a0 = a0 << 0x10
  1897: 97 aa 08                 a3 = a3 << 0x8
  1900: d4 ba 0a                 a3 = a3 | a4
  1903: d4 a7 07                 a0 = a0 | a3
  1906: 7c 98 08                 a1 = u8 [a2 + 0x8]
  1909: 97 77 08                 a0 = a0 << 0x8
  1912: 7c 9a 97 00              a3 = u8 [a2 + 0x97]
  1916: 7c 9b 96 00              a4 = u8 [a2 + 0x96]
  1920: d4 87 07                 a0 = a0 | a1
  1923: 7b 17 90 00              u64 [sp + 0x90] = a0
  1927: 7c 97 95 00              a0 = u8 [a2 + 0x95]
  1931: 97 aa 10                 a3 = a3 << 0x10
  1934: 97 bb 08                 a4 = a4 << 0x8
  1937: d4 ba 0a                 a3 = a3 | a4
  1940: d4 a7 07                 a0 = a0 | a3
  1943: 7c 9a 94 00              a3 = u8 [a2 + 0x94]
  1947: 7c 9b 93 00              a4 = u8 [a2 + 0x93]
  1951: 95 98 10                 a1 = a2 + 0x10
  1954: 97 77 10                 a0 = a0 << 0x10
  1957: 97 aa 08                 a3 = a3 << 0x8
  1960: d4 ba 0a                 a3 = a3 | a4
  1963: 7c 9b 92 00              a4 = u8 [a2 + 0x92]
  1967: d4 a7 07                 a0 = a0 | a3
  1970: 7c 9a 91 00              a3 = u8 [a2 + 0x91]
  1974: 97 77 10                 a0 = a0 << 0x10
  1977: 97 bb 08                 a4 = a4 << 0x8
  1980: 7c 99 90 00              a2 = u8 [a2 + 0x90]
  1984: d4 ba 0a                 a3 = a3 | a4
  1987: d4 a7 07                 a0 = a0 | a3
  1990: 97 77 08                 a0 = a0 << 0x8
  1993: d4 97 07                 a0 = a0 | a2
  1996: 7b 17 88 00              u64 [sp + 0x88] = a0
  2000: 95 17 68 01              a0 = sp + 0x168
  2004: 33 09 80 00              a2 = 0x80
  2008: 64 45                    s0 = t2
  2010: 64 06                    s1 = ra
  2012: 50 10 22 6e 07           ra = 34, jump @279
      :                          @148 [@dyn 17]
  2017: 95 17 e0 00              a0 = sp + 0xe0
  2021: 95 18 68 01              a1 = sp + 0x168
  2025: 33 09 80 00              a2 = 0x80
  2029: 50 10 24 5d 07           ra = 36, jump @279
      :                          @149 [@dyn 18]
  2034: 7a 15 c8 00              u32 [sp + 0xc8] = s0
  2038: 7a 16 cc 00              u32 [sp + 0xcc] = s1
  2042: 82 17 a0 00              a0 = u64 [sp + 0xa0]
  2046: 7a 17 d0 00              u32 [sp + 0xd0] = a0
  2050: 82 17 98 00              a0 = u64 [sp + 0x98]
  2054: 7a 17 d4 00              u32 [sp + 0xd4] = a0
  2058: 82 17 90 00              a0 = u64 [sp + 0x90]
  2062: 7b 17 d8 00              u64 [sp + 0xd8] = a0
  2066: 82 17 88 00              a0 = u64 [sp + 0x88]
  2070: 7b 17 60 01              u64 [sp + 0x160] = a0
  2074: 95 17 c8 00              a0 = sp + 0xc8
  2078: 7b 17 68 01              u64 [sp + 0x168] = a0
  2082: 82 17 28                 a0 = u64 [sp + 0x28]
  2085: 7b 17 70 01              u64 [sp + 0x170] = a0
  2089: 95 18 cc 00              a1 = sp + 0xcc
  2093: 7b 18 78 01              u64 [sp + 0x178] = a1
  2097: 7b 17 80 01              u64 [sp + 0x180] = a0
  2101: 95 18 d0 00              a1 = sp + 0xd0
  2105: 7b 18 88 01              u64 [sp + 0x188] = a1
  2109: 7b 17 90 01              u64 [sp + 0x190] = a0
  2113: 95 18 d4 00              a1 = sp + 0xd4
  2117: 7b 18 98 01              u64 [sp + 0x198] = a1
  2121: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  2125: 95 17 d8 00              a0 = sp + 0xd8
  2129: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  2133: 82 17 58                 a0 = u64 [sp + 0x58]
  2136: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  2140: 95 18 e0 00              a1 = sp + 0xe0
  2144: 7b 18 b8 01              u64 [sp + 0x1b8] = a1
  2148: 82 18 20                 a1 = u64 [sp + 0x20]
  2151: 7b 18 c0 01              u64 [sp + 0x1c0] = a1
  2155: 95 18 60 01              a1 = sp + 0x160
  2159: 7b 18 c8 01              u64 [sp + 0x1c8] = a1
  2163: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
  2167: 82 17 18                 a0 = u64 [sp + 0x18]
  2170: 7b 17 28 02              u64 [sp + 0x228] = a0
  2174: 49 21 30 02 07           u64 [sp + 560] = 0x7
  2179: 49 21 48 02              u64 [sp + 584] = 0
  2183: 95 17 68 01              a0 = sp + 0x168
  2187: 7b 17 38 02              u64 [sp + 0x238] = a0
  2191: 49 21 40 02 07           u64 [sp + 576] = 0x7
  2196: 95 17 58 02              a0 = sp + 0x258
  2200: 95 18 28 02              a1 = sp + 0x228
  2204: 50 10 26 3a 04           ra = 38, jump @229
      :                          @150 [@dyn 19]
  2209: 82 15 60 02              s0 = u64 [sp + 0x260]
  2213: 82 1b 68 02              a4 = u64 [sp + 0x268]
  2217: 82 16 58 02              s1 = u64 [sp + 0x258]
  2221: 33 07 02                 a0 = 0x2
  2224: 33 08                    a1 = 0
  2226: 33 09                    a2 = 0
  2228: 64 5a                    a3 = s0
  2230: 33 00 28                 ra = 0x28
  2233: 0a 64                    ecalli 100 // 'log'
  2235: 01                       fallthrough
      :                          @151 [@dyn 20]
  2236: 82 17 48                 a0 = u64 [sp + 0x48]
  2239: c8 67 07                 a0 = a0 + s1
  2242: 82 1b 50                 a4 = u64 [sp + 0x50]
  2245: 53 37 00 00 ff 1a        jump @156 if a0 <u 4294901760
      :                          @152
  2251: 82 b7                    a0 = u64 [a4]
  2253: c9 7b 08                 a1 = a4 - a0
  2256: ab 58 0f                 jump @156 if a1 != s0
      :                          @153
  2259: c9 67 08                 a1 = a0 - s1
  2262: 01                       fallthrough
      :                          @154
  2263: 82 b9                    a2 = u64 [a4]
  2265: ab 79 f2                 jump @152 if a2 != a0
      :                          @155
  2268: 7b b8                    u64 [a4] = a1
  2270: 01                       fallthrough
      :                          @156
  2271: 81 17 cc 00              a0 = i32 [sp + 0xcc]
  2275: 7a 17 ec 01              u32 [sp + 0x1ec] = a0
  2279: 95 17 ec 01              a0 = sp + 0x1ec
  2283: 33 08 04                 a1 = 0x4
  2286: 95 19 e0 00              a2 = sp + 0xe0
  2290: 33 0a 80 00              a3 = 0x80
  2294: 0a 03                    ecalli 3 // 'write'
  2296: 0a                       ecalli 0 // 'gas'
  2297: 7b 17 f0 01              u64 [sp + 0x1f0] = a0
  2301: 7b 17 f8 01              u64 [sp + 0x1f8] = a0
  2305: 46 21 07 02 04           u8 [sp + 519] = 0x4
  2310: 7b 17 08 02              u64 [sp + 0x208] = a0
  2314: 95 17 07 02              a0 = sp + 0x207
  2318: 33 08 01                 a1 = 0x1
  2321: 95 19 08 02              a2 = sp + 0x208
  2325: 33 0a 08                 a3 = 0x8
  2328: 0a 03                    ecalli 3 // 'write'
  2330: 49 21 68 01 02           u64 [sp + 360] = 0x2
  2335: 49 21 78 01 02           u64 [sp + 376] = 0x2
  2340: 49 21 88 01              u64 [sp + 392] = 0
  2344: 14 07 20 00 00 00 10 00 00 00 a0 = 0x1000000020
  2354: 7b 17 90 01              u64 [sp + 0x190] = a0
  2358: 46 21 98 01 03           u8 [sp + 408] = 0x3
  2363: 49 21 a0 01 02           u64 [sp + 416] = 0x2
  2368: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  2373: 49 21 c0 01 01           u64 [sp + 448] = 0x1
  2378: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
  2382: 95 17 07 02              a0 = sp + 0x207
  2386: 7b 17 58 02              u64 [sp + 0x258] = a0
  2390: 82 17 10                 a0 = u64 [sp + 0x10]
  2393: 7b 17 60 02              u64 [sp + 0x260] = a0
  2397: 95 17 f8 01              a0 = sp + 0x1f8
  2401: 7b 17 68 02              u64 [sp + 0x268] = a0
  2405: 82 17 58                 a0 = u64 [sp + 0x58]
  2408: 7b 17 70 02              u64 [sp + 0x270] = a0
  2412: 46 21 d0 01 03           u8 [sp + 464] = 0x3
  2417: 82 17 08                 a0 = u64 [sp + 0x8]
  2420: 7b 17 28 02              u64 [sp + 0x228] = a0
  2424: 49 21 30 02 02           u64 [sp + 560] = 0x2
  2429: 95 17 68 01              a0 = sp + 0x168
  2433: 7b 17 48 02              u64 [sp + 0x248] = a0
  2437: 49 21 50 02 02           u64 [sp + 592] = 0x2
  2442: 95 17 58 02              a0 = sp + 0x258
  2446: 7b 17 38 02              u64 [sp + 0x238] = a0
  2450: 49 21 40 02 02           u64 [sp + 576] = 0x2
  2455: 95 17 10 02              a0 = sp + 0x210
  2459: 95 18 28 02              a1 = sp + 0x228
  2463: 50 10 2a 37 03           ra = 42, jump @229
      :                          @157 [@dyn 21]
  2468: 82 15 18 02              s0 = u64 [sp + 0x218]
  2472: 82 1b 20 02              a4 = u64 [sp + 0x220]
  2476: 82 16 10 02              s1 = u64 [sp + 0x210]
  2480: 33 07 02                 a0 = 0x2
  2483: 33 08                    a1 = 0
  2485: 33 09                    a2 = 0
  2487: 64 5a                    a3 = s0
  2489: 33 00 2c                 ra = 0x2c
  2492: 0a 64                    ecalli 100 // 'log'
  2494: 01                       fallthrough
      :                          @158 [@dyn 22]
  2495: 82 1b 50                 a4 = u64 [sp + 0x50]
  2498: 82 17 48                 a0 = u64 [sp + 0x48]
  2501: c8 67 07                 a0 = a0 + s1
  2504: 53 37 00 00 ff 1a        jump @163 if a0 <u 4294901760
      :                          @159
  2510: 82 b7                    a0 = u64 [a4]
  2512: c9 7b 08                 a1 = a4 - a0
  2515: ab 58 0f                 jump @163 if a1 != s0
      :                          @160
  2518: c9 67 08                 a1 = a0 - s1
  2521: 01                       fallthrough
      :                          @161
  2522: 82 b9                    a2 = u64 [a4]
  2524: ab 79 f2                 jump @159 if a2 != a0
      :                          @162
  2527: 7b b8                    u64 [a4] = a1
  2529: 01                       fallthrough
      :                          @163
  2530: 95 17 f0 01              a0 = sp + 0x1f0
  2534: 7b 17 58 02              u64 [sp + 0x258] = a0
  2538: 82 17 58                 a0 = u64 [sp + 0x58]
  2541: 7b 17 60 02              u64 [sp + 0x260] = a0
  2545: 82 17                    a0 = u64 [sp]
  2547: 7b 17 68 01              u64 [sp + 0x168] = a0
  2551: 49 21 70 01 02           u64 [sp + 368] = 0x2
  2556: 49 21 88 01              u64 [sp + 392] = 0
  2560: 95 17 58 02              a0 = sp + 0x258
  2564: 7b 17 78 01              u64 [sp + 0x178] = a0
  2568: 49 21 80 01 01           u64 [sp + 384] = 0x1
  2573: 95 17 28 02              a0 = sp + 0x228
  2577: 95 18 68 01              a1 = sp + 0x168
  2581: 50 10 2e c1 02           ra = 46, jump @229
      :                          @164 [@dyn 23]
  2586: 82 15 30 02              s0 = u64 [sp + 0x230]
  2590: 82 1b 38 02              a4 = u64 [sp + 0x238]
  2594: 82 16 28 02              s1 = u64 [sp + 0x228]
  2598: 33 07 02                 a0 = 0x2
  2601: 33 08                    a1 = 0
  2603: 33 09                    a2 = 0
  2605: 64 5a                    a3 = s0
  2607: 33 00 30                 ra = 0x30
  2610: 0a 64                    ecalli 100 // 'log'
  2612: 01                       fallthrough
      :                          @165 [@dyn 24]
  2613: 82 1b 50                 a4 = u64 [sp + 0x50]
  2616: 82 17 48                 a0 = u64 [sp + 0x48]
  2619: c8 67 07                 a0 = a0 + s1
  2622: 53 37 00 00 ff 1a        jump @170 if a0 <u 4294901760
      :                          @166
  2628: 82 b7                    a0 = u64 [a4]
  2630: c9 7b 08                 a1 = a4 - a0
  2633: ab 58 0f                 jump @170 if a1 != s0
      :                          @167
  2636: c9 67 08                 a1 = a0 - s1
  2639: 01                       fallthrough
      :                          @168
  2640: 82 b9                    a2 = u64 [a4]
  2642: ab 79 f2                 jump @166 if a2 != a0
      :                          @169
  2645: 7b b8                    u64 [a4] = a1
  2647: 01                       fallthrough
      :                          @170
  2648: 82 12 b0 00              t0 = u64 [sp + 0xb0]
  2652: 95 22 01                 t0 = t0 + 0x1
  2655: 82 17 b8 00              a0 = u64 [sp + 0xb8]
  2659: 95 77 98 00              a0 = a0 + 0x98
  2663: 7b 17 b8 00              u64 [sp + 0xb8] = a0
  2667: 82 1c 40                 a5 = u64 [sp + 0x40]
  2670: 82 19 38                 a2 = u64 [sp + 0x38]
  2673: 82 1b 30                 a4 = u64 [sp + 0x30]
  2676: 82 1a a8 00              a3 = u64 [sp + 0xa8]
  2680: 33 08 08                 a1 = 0x8
  2683: ae 8c 48 fb              jump @124 if a5 >=u a1
      :                          @171
  2687: 33 07 00 00 01           a0 = 0x10000
  2692: 33 08                    a1 = 0
  2694: 82 10 88 02              ra = u64 [sp + 0x288]
  2698: 82 15 80 02              s0 = u64 [sp + 0x280]
  2702: 82 16 78 02              s1 = u64 [sp + 0x278]
  2706: 95 11 90 02              sp = sp + 0x290
  2710: 32 00                    ret
      :                          @172
  2712: 00                       trap
      :                          @173
  2713: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  2716: 7b 10 40                 u64 [sp + 0x40] = ra
  2719: 7b 15 38                 u64 [sp + 0x38] = s0
  2722: 7b 16 30                 u64 [sp + 0x30] = s1
  2725: c8 89 09                 a2 = a2 + a1
  2728: ac 89 52                 jump @181 if a2 <u a1
      :                          @174
  2731: 64 75                    s0 = a0
  2733: 82 77                    a0 = u64 [a0]
  2735: 97 78 01                 a1 = a0 << 0x1
  2738: 33 0a 08                 a3 = 0x8
  2741: e4 a9 09                 a2 = maxu(a2, a3)
  2744: e4 98 06                 s1 = maxu(a1, a2)
  2747: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  2750: 98 88 3f                 a1 = a1 >> 0x3f
  2753: 51 07 12                 jump @176 if a0 == 0
      :                          @175
  2756: 82 59 08                 a2 = u64 [s0 + 0x8]
  2759: 7b 19 18                 u64 [sp + 0x18] = a2
  2762: 49 11 20 01              u64 [sp + 32] = 0x1
  2766: 7b 17 28                 u64 [sp + 0x28] = a0
  2769: 28 06                    jump @177
      :                          @176
  2771: 49 11 20                 u64 [sp + 32] = 0
  2774: 01                       fallthrough
      :                          @177
  2775: 64 17                    a0 = sp
  2777: 95 1a 18                 a3 = sp + 0x18
  2780: 64 69                    a2 = s1
  2782: 50 10 32 32              ra = 50, jump @185
      :                          @178 [@dyn 25]
  2786: 82 18                    a1 = u64 [sp]
  2788: 82 17 08                 a0 = u64 [sp + 0x8]
  2791: 51 08 14                 jump @182 if a1 == 0
      :                          @179
  2794: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  2804: aa 87 0d                 jump @183 if a0 == a1
      :                          @180
  2807: 52 07 18                 jump @184 if a0 != 0
      :                          @181
  2810: 00                       trap
      :                          @182
  2811: 7b 57 08                 u64 [s0 + 0x8] = a0
  2814: 7b 56                    u64 [s0] = s1
  2816: 01                       fallthrough
      :                          @183
  2817: 82 10 40                 ra = u64 [sp + 0x40]
  2820: 82 15 38                 s0 = u64 [sp + 0x38]
  2823: 82 16 30                 s1 = u64 [sp + 0x30]
  2826: 95 11 48                 sp = sp + 0x48
  2829: 32 00                    ret
      :                          @184
  2831: 00                       trap
      :                          @185
  2832: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  2835: 7b 10 30                 u64 [sp + 0x30] = ra
  2838: 7b 15 28                 u64 [sp + 0x28] = s0
  2841: 7b 16 20                 u64 [sp + 0x20] = s1
  2844: 64 95                    s0 = a2
  2846: 64 72                    t0 = a0
  2848: 51 08 79                 jump @195 if a1 == 0
      :                          @186
  2851: 82 a7 08                 a0 = u64 [a3 + 0x8]
  2854: 51 07 7c                 jump @196 if a0 == 0
      :                          @187
  2857: 82 a9 10                 a2 = u64 [a3 + 0x10]
  2860: 51 09 aa 00              jump @203 if a2 == 0
      :                          @188
  2864: 82 a8                    a1 = u64 [a3]
  2866: 33 06 40 00 03           s1 = 0x30040
  2871: 33 03 00 00 01           t1 = 0x10000
  2876: c8 36 06                 s1 = s1 + t1
  2879: 01                       fallthrough
      :                          @189
  2880: 82 6a                    a3 = u64 [s1]
  2882: c8 5a 07                 a0 = a3 + s0
  2885: ac a7 cf 00              jump @209 if a0 <u a3
      :                          @190
  2889: 95 7b 01                 a4 = a0 + 0x1
  2892: 88 bc 01                 a5 = a4 <u 0x1
  2895: d8 b3 0b                 a4 = t1 <u a4
  2898: d4 cb 0b                 a4 = a4 | a5
  2901: 52 0b bf 00              jump @209 if a4 != 0
      :                          @191
  2905: 82 6b                    a4 = u64 [s1]
  2907: ab ab e5                 jump @189 if a4 != a3
      :                          @192
  2910: 7b 67                    u64 [s1] = a0
  2912: 33 0c                    a5 = 0
  2914: 7b 12 18                 u64 [sp + 0x18] = t0
  2917: 33 0a 40 00 03           a3 = 0x30040
  2922: 33 0b 00 00 01           a4 = 0x10000
  2927: 7b 1a                    u64 [sp] = a3
  2929: c8 ba 0a                 a3 = a3 + a4
  2932: c9 7a 07                 a0 = a3 - a0
  2935: 7b 17 10                 u64 [sp + 0x10] = a0
  2938: 7b 18 08                 u64 [sp + 0x8] = a1
  2941: 64 96                    s1 = a2
  2943: 50 10 34 cb 03           ra = 52, jump @279
      :                          @193 [@dyn 26]
  2948: 54 36 00 00 01 98 00     jump @210 if s1 <=u 65536
      :                          @194
  2955: 82 12 18                 t0 = u64 [sp + 0x18]
  2958: 82 18 10                 a1 = u64 [sp + 0x10]
  2961: 33 07                    a0 = 0
  2963: 7b 28 08                 u64 [t0 + 0x8] = a1
  2966: 28 b5 00                 jump @216
      :                          @195
  2969: 49 12 08                 u64 [t0 + 8] = 0
  2972: 33 07 01                 a0 = 0x1
  2975: 28 ac 00                 jump @216
      :                          @196
  2978: 33 09 40 00 03           a2 = 0x30040
  2983: 33 07 00 00 01           a0 = 0x10000
  2988: c8 79 09                 a2 = a2 + a0
  2991: 01                       fallthrough
      :                          @197
  2992: 82 9a                    a3 = u64 [a2]
  2994: c8 5a 08                 a1 = a3 + s0
  2997: ac a8 5f                 jump @209 if a1 <u a3
      :                          @198
  3000: 95 8b 01                 a4 = a1 + 0x1
  3003: 88 bc 01                 a5 = a4 <u 0x1
  3006: d8 b7 0b                 a4 = a0 <u a4
  3009: d4 cb 0b                 a4 = a4 | a5
  3012: 52 0b 50                 jump @209 if a4 != 0
      :                          @199
  3015: 82 9b                    a4 = u64 [a2]
  3017: ab ab e7                 jump @197 if a4 != a3
      :                          @200
  3020: 7b 98                    u64 [a2] = a1
  3022: 33 0c                    a5 = 0
  3024: 01                       fallthrough
      :                          @201
  3025: ab ab df                 jump @197 if a4 != a3
      :                          @202
  3028: 28 31                    jump @208
      :                          @203
  3030: 33 09 40 00 03           a2 = 0x30040
  3035: 33 07 00 00 01           a0 = 0x10000
  3040: c8 79 09                 a2 = a2 + a0
  3043: 01                       fallthrough
      :                          @204
  3044: 82 9a                    a3 = u64 [a2]
  3046: c8 5a 08                 a1 = a3 + s0
  3049: ac a8 2b                 jump @209 if a1 <u a3
      :                          @205
  3052: 95 8b 01                 a4 = a1 + 0x1
  3055: 88 bc 01                 a5 = a4 <u 0x1
  3058: d8 b7 0b                 a4 = a0 <u a4
  3061: d4 cb 0b                 a4 = a4 | a5
  3064: 52 0b 1c                 jump @209 if a4 != 0
      :                          @206
  3067: 82 9b                    a4 = u64 [a2]
  3069: ab ab e7                 jump @204 if a4 != a3
      :                          @207
  3072: 7b 98                    u64 [a2] = a1
  3074: 33 0c                    a5 = 0
  3076: 01                       fallthrough
      :                          @208
  3077: 33 07 40 00 04           a0 = 0x40040
  3082: c9 87 08                 a1 = a0 - a1
  3085: 33 07                    a0 = 0
  3087: 7b 28 08                 u64 [t0 + 0x8] = a1
  3090: 28 39                    jump @216
      :                          @209
  3092: 33 07 01                 a0 = 0x1
  3095: 7b 27 08                 u64 [t0 + 0x8] = a0
  3098: 28 31                    jump @216
      :                          @210
  3100: 64 6c                    a5 = s1
  3102: 82 17                    a0 = u64 [sp]
  3104: 95 77 00 00 01           a0 = a0 + 0x10000
  3109: 82 12 18                 t0 = u64 [sp + 0x18]
  3112: 82 16 08                 s1 = u64 [sp + 0x8]
  3115: 01                       fallthrough
      :                          @211
  3116: 82 78                    a1 = u64 [a0]
  3118: c9 87 09                 a2 = a0 - a1
  3121: ab 69 11                 jump @215 if a2 != s1
      :                          @212
  3124: c9 c8 09                 a2 = a1 - a5
  3127: 01                       fallthrough
      :                          @213
  3128: 82 7a                    a3 = u64 [a0]
  3130: ab 8a f2                 jump @211 if a3 != a1
      :                          @214
  3133: 7b 79                    u64 [a0] = a2
  3135: 33 0b                    a4 = 0
  3137: 01                       fallthrough
      :                          @215
  3138: 82 18 10                 a1 = u64 [sp + 0x10]
  3141: 33 07                    a0 = 0
  3143: 7b 28 08                 u64 [t0 + 0x8] = a1
  3146: 01                       fallthrough
      :                          @216
  3147: 7b 25 10                 u64 [t0 + 0x10] = s0
  3150: 7b 27                    u64 [t0] = a0
  3152: 82 10 30                 ra = u64 [sp + 0x30]
  3155: 82 15 28                 s0 = u64 [sp + 0x28]
  3158: 82 16 20                 s1 = u64 [sp + 0x20]
  3161: 95 11 38                 sp = sp + 0x38
  3164: 32 00                    ret
      :                          @217
  3166: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  3169: 7b 10 40                 u64 [sp + 0x40] = ra
  3172: 7b 15 38                 u64 [sp + 0x38] = s0
  3175: 7b 16 30                 u64 [sp + 0x30] = s1
  3178: 95 88 01                 a1 = a1 + 0x1
  3181: 51 08 53                 jump @225 if a1 == 0
      :                          @218
  3184: 64 75                    s0 = a0
  3186: 82 77                    a0 = u64 [a0]
  3188: 97 79 01                 a2 = a0 << 0x1
  3191: 33 0a 08                 a3 = 0x8
  3194: e4 a8 08                 a1 = maxu(a1, a3)
  3197: e4 89 06                 s1 = maxu(a2, a1)
  3200: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  3203: 98 88 3f                 a1 = a1 >> 0x3f
  3206: 51 07 12                 jump @220 if a0 == 0
      :                          @219
  3209: 82 59 08                 a2 = u64 [s0 + 0x8]
  3212: 7b 19 18                 u64 [sp + 0x18] = a2
  3215: 49 11 20 01              u64 [sp + 32] = 0x1
  3219: 7b 17 28                 u64 [sp + 0x28] = a0
  3222: 28 06                    jump @221
      :                          @220
  3224: 49 11 20                 u64 [sp + 32] = 0
  3227: 01                       fallthrough
      :                          @221
  3228: 64 17                    a0 = sp
  3230: 95 1a 18                 a3 = sp + 0x18
  3233: 64 69                    a2 = s1
  3235: 50 10 36 6d fe           ra = 54, jump @185
      :                          @222 [@dyn 27]
  3240: 82 18                    a1 = u64 [sp]
  3242: 82 17 08                 a0 = u64 [sp + 0x8]
  3245: 51 08 14                 jump @226 if a1 == 0
      :                          @223
  3248: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  3258: aa 87 0d                 jump @227 if a0 == a1
      :                          @224
  3261: 52 07 18                 jump @228 if a0 != 0
      :                          @225
  3264: 00                       trap
      :                          @226
  3265: 7b 57 08                 u64 [s0 + 0x8] = a0
  3268: 7b 56                    u64 [s0] = s1
  3270: 01                       fallthrough
      :                          @227
  3271: 82 10 40                 ra = u64 [sp + 0x40]
  3274: 82 15 38                 s0 = u64 [sp + 0x38]
  3277: 82 16 30                 s1 = u64 [sp + 0x30]
  3280: 95 11 48                 sp = sp + 0x48
  3283: 32 00                    ret
      :                          @228
  3285: 00                       trap
      :                          @229
  3286: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  3289: 7b 10 30                 u64 [sp + 0x30] = ra
  3292: 7b 15 28                 u64 [sp + 0x28] = s0
  3295: 7b 16 20                 u64 [sp + 0x20] = s1
  3298: 64 89                    a2 = a1
  3300: 82 8a 08                 a3 = u64 [a1 + 0x8]
  3303: 64 75                    s0 = a0
  3305: 51 0a 35                 jump @234 if a3 == 0
      :                          @230
  3308: 82 98                    a1 = u64 [a2]
  3310: 33 07                    a0 = 0
  3312: 95 8b 08                 a4 = a1 + 0x8
  3315: 01                       fallthrough
      :                          @231
  3316: 82 bc                    a5 = u64 [a4]
  3318: c8 c7 07                 a0 = a0 + a5
  3321: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  3324: 95 bb 10                 a4 = a4 + 0x10
  3327: 52 0a f5                 jump @231 if a3 != 0
      :                          @232
  3330: 82 9a 18                 a3 = u64 [a2 + 0x18]
  3333: 51 0a 24                 jump @236 if a3 == 0
      :                          @233
  3336: 82 88 08                 a1 = u64 [a1 + 0x8]
  3339: 8e 88                    a1 = a1 >u 0
  3341: 88 7a 10                 a3 = a0 <u 0x10
  3344: 85 aa 01                 a3 = a3 ^ 0x1
  3347: d4 a8 08                 a1 = a1 | a3
  3350: 89 7a                    a3 = a0 <s 0
  3352: e0 a8 08                 a1 = a1 & ~a3
  3355: 52 08 0a                 jump @235 if a1 != 0
      :                          @234
  3358: 33 07                    a0 = 0
  3360: 33 08 01                 a1 = 0x1
  3363: 28 4a                    jump @244
      :                          @235
  3365: 97 77 01                 a0 = a0 << 0x1
  3368: 01                       fallthrough
      :                          @236
  3369: 51 07 40                 jump @243 if a0 == 0
      :                          @237
  3372: 57 07 78                 jump @249 if a0 <s 0
      :                          @238
  3375: 64 52                    t0 = s0
  3377: 33 0b 40 00 03           a4 = 0x30040
  3382: 33 08 00 00 01           a1 = 0x10000
  3387: c8 8b 0b                 a4 = a4 + a1
  3390: 01                       fallthrough
      :                          @239
  3391: 82 bc                    a5 = u64 [a4]
  3393: c8 7c 0a                 a3 = a5 + a0
  3396: ac ca 5e                 jump @247 if a3 <u a5
      :                          @240
  3399: 95 a5 01                 s0 = a3 + 0x1
  3402: 88 56 01                 s1 = s0 <u 0x1
  3405: d8 58 05                 s0 = a1 <u s0
  3408: d4 65 05                 s0 = s0 | s1
  3411: 52 05 4f                 jump @247 if s0 != 0
      :                          @241
  3414: 82 b6                    s1 = u64 [a4]
  3416: ab c6 e7                 jump @239 if s1 != a5
      :                          @242
  3419: 7b ba                    u64 [a4] = a3
  3421: 33 08 40 00 04           a1 = 0x40040
  3426: c9 a8 08                 a1 = a1 - a3
  3429: 64 25                    s0 = t0
  3431: 28 06                    jump @244
      :                          @243
  3433: 33 08 01                 a1 = 0x1
  3436: 01                       fallthrough
      :                          @244
  3437: 7b 17                    u64 [sp] = a0
  3439: 7b 18 08                 u64 [sp + 0x8] = a1
  3442: 49 11 10                 u64 [sp + 16] = 0
  3445: 33 08 18 01 01           a1 = 0x10118
  3450: 64 17                    a0 = sp
  3452: 50 10 38 1a 06           ra = 56, jump @361
      :                          @245 [@dyn 28]
  3457: 52 07 22                 jump @248 if a0 != 0
      :                          @246
  3460: 82 17 10                 a0 = u64 [sp + 0x10]
  3463: 82 18 08                 a1 = u64 [sp + 0x8]
  3466: 82 19                    a2 = u64 [sp]
  3468: 7b 57 10                 u64 [s0 + 0x10] = a0
  3471: 7b 58 08                 u64 [s0 + 0x8] = a1
  3474: 7b 59                    u64 [s0] = a2
  3476: 82 10 30                 ra = u64 [sp + 0x30]
  3479: 82 15 28                 s0 = u64 [sp + 0x28]
  3482: 82 16 20                 s1 = u64 [sp + 0x20]
  3485: 95 11 38                 sp = sp + 0x38
  3488: 32 00                    ret
      :                          @247
  3490: 00                       trap
      :                          @248
  3491: 00                       trap
      :                          @249
  3492: 00                       trap
      :                          @250 [@dyn 29]
  3493: 82 72                    t0 = u64 [a0]
  3495: 33 09 00 00 ff           a2 = 0xffffffffffff0000
  3500: 95 2a ff ff fe           a3 = t0 + 0xfffffffffffeffff
  3505: ac 9a 28                 jump @256 if a3 <u a2
      :                          @251
  3508: 82 77 08                 a0 = u64 [a0 + 0x8]
  3511: 33 09 40 00 03           a2 = 0x30040
  3516: 95 99 00 00 01           a2 = a2 + 0x10000
  3521: 01                       fallthrough
      :                          @252
  3522: 82 9a                    a3 = u64 [a2]
  3524: c9 a9 0b                 a4 = a2 - a3
  3527: ab 7b 12                 jump @256 if a4 != a0
      :                          @253
  3530: c9 2a 0b                 a4 = a3 - t0
  3533: 01                       fallthrough
      :                          @254
  3534: 82 9c                    a5 = u64 [a2]
  3536: ab ac f2                 jump @252 if a5 != a3
      :                          @255
  3539: 7b 9b                    u64 [a2] = a4
  3541: 33 08                    a1 = 0
  3543: 32 00                    ret
      :                          @256
  3545: 32 00                    ret
      :                          @257 [@dyn 30]
  3547: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3550: 7b 10 18                 u64 [sp + 0x18] = ra
  3553: 7b 15 10                 u64 [sp + 0x10] = s0
  3556: 7b 16 08                 u64 [sp + 0x8] = s1
  3559: 64 75                    s0 = a0
  3561: 82 7a 10                 a3 = u64 [a0 + 0x10]
  3564: 82 77                    a0 = u64 [a0]
  3566: c9 a7 07                 a0 = a0 - a3
  3569: 64 96                    s1 = a2
  3571: ac 97 2a                 jump @260 if a0 <u a2
      :                          @258
  3574: 7b 1a                    u64 [sp] = a3
  3576: 82 57 08                 a0 = u64 [s0 + 0x8]
  3579: c8 a7 07                 a0 = a0 + a3
  3582: 64 69                    a2 = s1
  3584: 50 10 3e 4a 01           ra = 62, jump @279
      :                          @259 [@dyn 31]
  3589: 82 17                    a0 = u64 [sp]
  3591: c8 76 06                 s1 = s1 + a0
  3594: 7b 56 10                 u64 [s0 + 0x10] = s1
  3597: 33 07                    a0 = 0
  3599: 82 10 18                 ra = u64 [sp + 0x18]
  3602: 82 15 10                 s0 = u64 [sp + 0x10]
  3605: 82 16 08                 s1 = u64 [sp + 0x8]
  3608: 95 11 20                 sp = sp + 0x20
  3611: 32 00                    ret
      :                          @260
  3613: 64 57                    a0 = s0
  3615: 7b 18                    u64 [sp] = a1
  3617: 64 a8                    a1 = a3
  3619: 64 69                    a2 = s1
  3621: 50 10 40 74 fc           ra = 64, jump @173
      :                          @261 [@dyn 32]
  3626: 82 18                    a1 = u64 [sp]
  3628: 82 5a 10                 a3 = u64 [s0 + 0x10]
  3631: 28 c7                    jump @258
      :                          @262 [@dyn 33]
  3633: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  3636: 7b 10 20                 u64 [sp + 0x20] = ra
  3639: 7b 15 18                 u64 [sp + 0x18] = s0
  3642: 7b 16 10                 u64 [sp + 0x10] = s1
  3645: 64 86                    s1 = a1
  3647: 83 88                    i32 a1 = a1 + 0
  3649: 33 09 80 00              a2 = 0x80
  3653: 64 7a                    a3 = a0
  3655: ae 98 2b                 jump @267 if a1 >=u a2
      :                          @263
  3658: 82 a8 10                 a1 = u64 [a3 + 0x10]
  3661: 82 a7                    a0 = u64 [a3]
  3663: ab 78 12                 jump @266 if a1 != a0
      :                          @264
  3666: 64 a7                    a0 = a3
  3668: 64 a5                    s0 = a3
  3670: 50 10 44 08 fe           ra = 68, jump @217
      :                          @265 [@dyn 34]
  3675: 64 5a                    a3 = s0
  3677: 82 58 10                 a1 = u64 [s0 + 0x10]
  3680: 01                       fallthrough
      :                          @266
  3681: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3684: c8 87 07                 a0 = a0 + a1
  3687: 78 76                    u8 [a0] = s1
  3689: 95 88 01                 a1 = a1 + 0x1
  3692: 7b a8 10                 u64 [a3 + 0x10] = a1
  3695: 28 ab 00                 jump @275
      :                          @267
  3698: 8b 67 0b                 i32 a0 = s1 >> 0xb
  3701: 48 11 0c                 u32 [sp + 12] = 0
  3704: 52 07 1c                 jump @269 if a0 != 0
      :                          @268
  3707: 98 67 06                 a0 = s1 >> 0x6
  3710: 86 77 c0 00              a0 = a0 | 0xc0
  3714: 78 17 0c                 u8 [sp + 0xc] = a0
  3717: 84 67 3f                 a0 = s1 & 0x3f
  3720: 86 77 80 00              a0 = a0 | 0x80
  3724: 78 17 0d                 u8 [sp + 0xd] = a0
  3727: 33 06 02                 s1 = 0x2
  3730: 28 63                    jump @272
      :                          @269
  3732: 8b 67 10                 i32 a0 = s1 >> 0x10
  3735: 52 07 29                 jump @271 if a0 != 0
      :                          @270
  3738: 98 67 0c                 a0 = s1 >> 0xc
  3741: 86 77 e0 00              a0 = a0 | 0xe0
  3745: 78 17 0c                 u8 [sp + 0xc] = a0
  3748: 97 67 34                 a0 = s1 << 0x34
  3751: 98 77 3a                 a0 = a0 >> 0x3a
  3754: 95 77 80 00              a0 = a0 + 0x80
  3758: 78 17 0d                 u8 [sp + 0xd] = a0
  3761: 84 67 3f                 a0 = s1 & 0x3f
  3764: 86 77 80 00              a0 = a0 | 0x80
  3768: 78 17 0e                 u8 [sp + 0xe] = a0
  3771: 33 06 03                 s1 = 0x3
  3774: 28 37                    jump @272
      :                          @271
  3776: 97 67 2b                 a0 = s1 << 0x2b
  3779: 98 77 3d                 a0 = a0 >> 0x3d
  3782: 95 77 f0 00              a0 = a0 + 0xf0
  3786: 78 17 0c                 u8 [sp + 0xc] = a0
  3789: 97 67 2e                 a0 = s1 << 0x2e
  3792: 98 77 3a                 a0 = a0 >> 0x3a
  3795: 95 77 80 00              a0 = a0 + 0x80
  3799: 78 17 0d                 u8 [sp + 0xd] = a0
  3802: 97 67 34                 a0 = s1 << 0x34
  3805: 98 77 3a                 a0 = a0 >> 0x3a
  3808: 95 77 80 00              a0 = a0 + 0x80
  3812: 78 17 0e                 u8 [sp + 0xe] = a0
  3815: 84 67 3f                 a0 = s1 & 0x3f
  3818: 86 77 80 00              a0 = a0 | 0x80
  3822: 78 17 0f                 u8 [sp + 0xf] = a0
  3825: 33 06 04                 s1 = 0x4
  3828: 01                       fallthrough
      :                          @272
  3829: 82 a5 10                 s0 = u64 [a3 + 0x10]
  3832: 82 a7                    a0 = u64 [a3]
  3834: c9 57 07                 a0 = a0 - s0
  3837: ac 67 2d                 jump @276 if a0 <u s1
      :                          @273
  3840: 7b 1a                    u64 [sp] = a3
  3842: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3845: c8 57 07                 a0 = a0 + s0
  3848: 95 18 0c                 a1 = sp + 0xc
  3851: 64 69                    a2 = s1
  3853: 50 10 46 3d              ra = 70, jump @279
      :                          @274 [@dyn 35]
  3857: c8 56 06                 s1 = s1 + s0
  3860: 82 17                    a0 = u64 [sp]
  3862: 7b 76 10                 u64 [a0 + 0x10] = s1
  3865: 01                       fallthrough
      :                          @275
  3866: 33 07                    a0 = 0
  3868: 82 10 20                 ra = u64 [sp + 0x20]
  3871: 82 15 18                 s0 = u64 [sp + 0x18]
  3874: 82 16 10                 s1 = u64 [sp + 0x10]
  3877: 95 11 28                 sp = sp + 0x28
  3880: 32 00                    ret
      :                          @276
  3882: 64 a7                    a0 = a3
  3884: 64 58                    a1 = s0
  3886: 64 69                    a2 = s1
  3888: 64 a5                    s0 = a3
  3890: 50 10 48 67 fb           ra = 72, jump @173
      :                          @277 [@dyn 36]
  3895: 64 5a                    a3 = s0
  3897: 82 55 10                 s0 = u64 [s0 + 0x10]
  3900: 28 c4                    jump @273
      :                          @278 [@dyn 37]
  3902: 64 8a                    a3 = a1
  3904: 33 08 18 01 01           a1 = 0x10118
  3909: 64 a9                    a2 = a3
  3911: 28 4f 04                 jump @361
      :                          @279
  3914: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3917: 7b 10 18                 u64 [sp + 0x18] = ra
  3920: 7b 15 10                 u64 [sp + 0x10] = s0
  3923: 7b 16 08                 u64 [sp + 0x8] = s1
  3926: 53 19 10 64              jump @288 if a2 <u 16
      :                          @280
  3930: 8d 7a                    i32 a3 = -a0
  3932: 84 a2 07                 t0 = a3 & 0x7
  3935: c8 27 0b                 a4 = a0 + t0
  3938: 51 02 15                 jump @283 if t0 == 0
      :                          @281
  3941: 64 8c                    a5 = a1
  3943: 64 75                    s0 = a0
  3945: 01                       fallthrough
      :                          @282
  3946: 7c ca                    a3 = u8 [a5]
  3948: 78 5a                    u8 [s0] = a3
  3950: 95 55 01                 s0 = s0 + 0x1
  3953: 95 cc 01                 a5 = a5 + 0x1
  3956: ac b5 f6                 jump @282 if s0 <u a4
      :                          @283
  3959: c8 28 03                 t1 = a1 + t0
  3962: c9 29 02                 t0 = a2 - t0
  3965: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  3968: 84 38 07                 a1 = t1 & 0x7
  3971: c8 4b 0a                 a3 = a4 + t2
  3974: 51 08 3b                 jump @290 if a1 == 0
      :                          @284
  3977: 58 04 4b                 jump @293 if t2 <=s 0
      :                          @285
  3980: 97 38 03                 a1 = t1 << 0x3
  3983: 84 80 38                 ra = a1 & 0x38
  3986: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  3989: 82 c5                    s0 = u64 [a5]
  3991: 8d 88                    i32 a1 = -a1
  3993: 84 88 38                 a1 = a1 & 0x38
  3996: 95 cc 08                 a5 = a5 + 0x8
  3999: 01                       fallthrough
      :                          @286
  4000: 82 c6                    s1 = u64 [a5]
  4002: d0 05 05                 s0 = s0 >> ra
  4005: cf 86 09                 a2 = s1 << a1
  4008: d4 59 09                 a2 = a2 | s0
  4011: 7b b9                    u64 [a4] = a2
  4013: 95 bb 08                 a4 = a4 + 0x8
  4016: 95 cc 08                 a5 = a5 + 0x8
  4019: 64 65                    s0 = s1
  4021: ac ab eb                 jump @286 if a4 <u a3
      :                          @287
  4024: 28 1c                    jump @293
      :                          @288
  4026: 64 7a                    a3 = a0
  4028: 52 09 21                 jump @294 if a2 != 0
      :                          @289
  4031: 28 2f                    jump @296
      :                          @290
  4033: 58 04 13                 jump @293 if t2 <=s 0
      :                          @291
  4036: 64 38                    a1 = t1
  4038: 01                       fallthrough
      :                          @292
  4039: 82 89                    a2 = u64 [a1]
  4041: 7b b9                    u64 [a4] = a2
  4043: 95 bb 08                 a4 = a4 + 0x8
  4046: 95 88 08                 a1 = a1 + 0x8
  4049: ac ab f6                 jump @292 if a4 <u a3
      :                          @293
  4052: c8 43 08                 a1 = t1 + t2
  4055: 84 29 07                 a2 = t0 & 0x7
  4058: 51 09 14                 jump @296 if a2 == 0
      :                          @294
  4061: c8 a9 09                 a2 = a2 + a3
  4064: 01                       fallthrough
      :                          @295
  4065: 7c 8b                    a4 = u8 [a1]
  4067: 78 ab                    u8 [a3] = a4
  4069: 95 aa 01                 a3 = a3 + 0x1
  4072: 95 88 01                 a1 = a1 + 0x1
  4075: ac 9a f6                 jump @295 if a3 <u a2
      :                          @296
  4078: 82 10 18                 ra = u64 [sp + 0x18]
  4081: 82 15 10                 s0 = u64 [sp + 0x10]
  4084: 82 16 08                 s1 = u64 [sp + 0x8]
  4087: 95 11 20                 sp = sp + 0x20
  4090: 32 00                    ret
      :                          @297 [@dyn 38]
  4092: 82 77                    a0 = u64 [a0]
  4094: 01                       fallthrough
      :                          @298
  4095: 28                       jump @298
      :                          @299
  4096: 95 11 a8                 sp = sp + 0xffffffffffffffa8
  4099: 7b 10 50                 u64 [sp + 0x50] = ra
  4102: 7b 15 48                 u64 [sp + 0x48] = s0
  4105: 7b 16 40                 u64 [sp + 0x40] = s1
  4108: 7b 18                    u64 [sp] = a1
  4110: 98 79 04                 a2 = a0 >> 0x4
  4113: 33 08 27                 a1 = 0x27
  4116: 53 29 71 02 81 00        jump @302 if a2 <u 625
      :                          @300
  4122: 33 08 27                 a1 = 0x27
  4125: 95 1a 3e                 a3 = sp + 0x3e
  4128: 3a 09 00 00 03           a2 = u64 [0x30000]
  4133: 7b 19 10                 u64 [sp + 0x10] = a2
  4136: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
  4142: 33 04 7b 14              t2 = 0x147b
  4146: 33 0b 8c 01 01           a4 = 0x1018c
  4151: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
  4157: 01                       fallthrough
      :                          @301
  4158: 64 72                    t0 = a0
  4160: 82 17 10                 a0 = u64 [sp + 0x10]
  4163: d6 72 07                 a0 = t0 mulhu a0
  4166: 98 77 0b                 a0 = a0 >> 0xb
  4169: 82 19 08                 a2 = u64 [sp + 0x8]
  4172: c0 97 0c                 i32 a5 = a0 * a2
  4175: c8 2c 06                 s1 = a5 + t0
  4178: 97 6c 30                 a5 = s1 << 0x30
  4181: 98 cc 32                 a5 = a5 >> 0x32
  4184: ca 4c 0c                 a5 = a5 * t2
  4187: 98 c3 11                 t1 = a5 >> 0x11
  4190: 98 cc 10                 a5 = a5 >> 0x10
  4193: 84 cc fe 07              a5 = a5 & 0x7fe
  4197: 96 39 9c                 a2 = t1 * 0xffffffffffffff9c
  4200: c8 69 09                 a2 = a2 + s1
  4203: 97 99 31                 a2 = a2 << 0x31
  4206: 98 99 30                 a2 = a2 >> 0x30
  4209: c8 bc 0c                 a5 = a5 + a4
  4212: 7c c6                    s1 = u8 [a5]
  4214: 7c cc 01                 a5 = u8 [a5 + 0x1]
  4217: c8 b9 09                 a2 = a2 + a4
  4220: 7c 95 01                 s0 = u8 [a2 + 0x1]
  4223: 7c 99                    a2 = u8 [a2]
  4225: 78 ac ff                 u8 [a3 + 0xffffffffffffffff] = a5
  4228: 78 a6 fe                 u8 [a3 + 0xfffffffffffffffe] = s1
  4231: 78 a5 01                 u8 [a3 + 0x1] = s0
  4234: 78 a9                    u8 [a3] = a2
  4236: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
  4239: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
  4242: ac 20 ac                 jump @301 if ra <u t0
      :                          @302
  4245: 54 17 63 3b              jump @304 if a0 <=u 99
      :                          @303
  4249: 97 79 30                 a2 = a0 << 0x30
  4252: 98 99 32                 a2 = a2 >> 0x32
  4255: 96 99 7b 14              a2 = a2 * 0x147b
  4259: 98 99 11                 a2 = a2 >> 0x11
  4262: 96 9a 9c                 a3 = a2 * 0xffffffffffffff9c
  4265: c8 a7 07                 a0 = a0 + a3
  4268: 97 77 31                 a0 = a0 << 0x31
  4271: 98 77 30                 a0 = a0 >> 0x30
  4274: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  4277: 33 0a 8c 01 01           a3 = 0x1018c
  4282: c8 a7 07                 a0 = a0 + a3
  4285: 7c 7a 01                 a3 = u8 [a0 + 0x1]
  4288: 7c 77                    a0 = u8 [a0]
  4290: 95 1b 19                 a4 = sp + 0x19
  4293: c8 8b 0b                 a4 = a4 + a1
  4296: 78 ba 01                 u8 [a4 + 0x1] = a3
  4299: 78 b7                    u8 [a4] = a0
  4301: 64 97                    a0 = a2
  4303: 01                       fallthrough
      :                          @304
  4304: 55 17 0a 14              jump @306 if a0 >=u 10
      :                          @305
  4308: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  4311: 95 19 19                 a2 = sp + 0x19
  4314: c8 89 09                 a2 = a2 + a1
  4317: 83 77 30                 i32 a0 = a0 + 0x30
  4320: 78 97                    u8 [a2] = a0
  4322: 28 21                    jump @307
      :                          @306
  4324: 97 77 01                 a0 = a0 << 0x1
  4327: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  4330: 33 09 8c 01 01           a2 = 0x1018c
  4335: c8 97 07                 a0 = a0 + a2
  4338: 7c 79 01                 a2 = u8 [a0 + 0x1]
  4341: 7c 77                    a0 = u8 [a0]
  4343: 95 1a 19                 a3 = sp + 0x19
  4346: c8 8a 0a                 a3 = a3 + a1
  4349: 78 a9 01                 u8 [a3 + 0x1] = a2
  4352: 78 a7                    u8 [a3] = a0
  4354: 01                       fallthrough
      :                          @307
  4355: 95 1a 19                 a3 = sp + 0x19
  4358: c8 8a 0a                 a3 = a3 + a1
  4361: 9a 8b 27                 a4 = 0x27 - a1
  4364: 33 08 48 01 01           a1 = 0x10148
  4369: 82 17                    a0 = u64 [sp]
  4371: 33 09                    a2 = 0
  4373: 50 10 4e 12              ra = 78, jump @309
      :                          @308 [@dyn 39]
  4377: 82 10 50                 ra = u64 [sp + 0x50]
  4380: 82 15 48                 s0 = u64 [sp + 0x48]
  4383: 82 16 40                 s1 = u64 [sp + 0x40]
  4386: 95 11 58                 sp = sp + 0x58
  4389: 32 00                    ret
      :                          @309
  4391: 95 11 98                 sp = sp + 0xffffffffffffff98
  4394: 7b 10 60                 u64 [sp + 0x60] = ra
  4397: 7b 15 58                 u64 [sp + 0x58] = s0
  4400: 7b 16 50                 u64 [sp + 0x50] = s1
  4403: 80 73 34                 t1 = u32 [a0 + 0x34]
  4406: 7b 1a 20                 u64 [sp + 0x20] = a3
  4409: 64 9c                    a5 = a2
  4411: 84 36 01                 s1 = t1 & 0x1
  4414: 33 02 2b                 t0 = 0x2b
  4417: 33 09 00 00 11           a2 = 0x110000
  4422: 84 3a 04                 a3 = t1 & 0x4
  4425: 7b 1b 28                 u64 [sp + 0x28] = a4
  4428: c8 b6 04                 t2 = s1 + a4
  4431: 7b 1c 30                 u64 [sp + 0x30] = a5
  4434: 52 0a 10                 jump @312 if a3 != 0
      :                          @310
  4437: 49 11 38                 u64 [sp + 56] = 0
  4440: 82 78                    a1 = u64 [a0]
  4442: 94 69 2b                 a2 = 0x2b if s1 != 0
  4445: 52 08 35                 jump @316 if a1 != 0
      :                          @311
  4448: 28 56                    jump @321
      :                          @312
  4450: 7b 18 38                 u64 [sp + 0x38] = a1
  4453: 33 09                    a2 = 0
  4455: 51 0c 1b                 jump @315 if a5 == 0
      :                          @313
  4458: 82 1b 38                 a4 = u64 [sp + 0x38]
  4461: 01                       fallthrough
      :                          @314
  4462: 7d b5                    s0 = i8 [a4]
  4464: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
  4467: 85 5a 01                 a3 = s0 ^ 0x1
  4470: c8 a9 09                 a2 = a2 + a3
  4473: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  4476: 95 bb 01                 a4 = a4 + 0x1
  4479: 52 0c ef                 jump @314 if a5 != 0
      :                          @315
  4482: c8 94 04                 t2 = t2 + a2
  4485: 33 09 00 00 11           a2 = 0x110000
  4490: 82 78                    a1 = u64 [a0]
  4492: db 62 09                 a2 = t0 if s1 != 0
  4495: 51 08 27                 jump @321 if a1 == 0
      :                          @316
  4498: 82 7a 08                 a3 = u64 [a0 + 0x8]
  4501: ae a4 21                 jump @321 if t2 >=u a3
      :                          @317
  4504: 84 38 08                 a1 = t1 & 0x8
  4507: 52 08 50                 jump @324 if a1 != 0
      :                          @318
  4510: 7c 76 38                 s1 = u8 [a0 + 0x38]
  4513: c9 4a 0a                 a3 = a3 - t2
  4516: 7b 19 18                 u64 [sp + 0x18] = a2
  4519: 5a 16 01 9d 00           jump @331 if s1 >s 1
      :                          @319
  4524: 52 06 aa 00              jump @333 if s1 != 0
      :                          @320
  4528: 7b 1a 10                 u64 [sp + 0x10] = a3
  4531: 28 a9 00                 jump @334
      :                          @321
  4534: 82 75 20                 s0 = u64 [a0 + 0x20]
  4537: 82 76 28                 s1 = u64 [a0 + 0x28]
  4540: 64 57                    a0 = s0
  4542: 64 68                    a1 = s1
  4544: 82 1a 38                 a3 = u64 [sp + 0x38]
  4547: 82 1b 30                 a4 = u64 [sp + 0x30]
  4550: 50 10 50 6c 01           ra = 80, jump @354
      :                          @322 [@dyn 40]
  4555: 33 08 01                 a1 = 0x1
  4558: 52 07 bb 00              jump @339 if a0 != 0
      :                          @323
  4562: 82 6c 18                 a5 = u64 [s1 + 0x18]
  4565: 64 57                    a0 = s0
  4567: 82 18 20                 a1 = u64 [sp + 0x20]
  4570: 82 19 28                 a2 = u64 [sp + 0x28]
  4573: 82 10 60                 ra = u64 [sp + 0x60]
  4576: 82 15 58                 s0 = u64 [sp + 0x58]
  4579: 82 16 50                 s1 = u64 [sp + 0x50]
  4582: 95 11 68                 sp = sp + 0x68
  4585: 32 0c                    jump [a5]
      :                          @324
  4587: 7b 1a 40                 u64 [sp + 0x40] = a3
  4590: 64 45                    s0 = t2
  4592: 81 78 30                 a1 = i32 [a0 + 0x30]
  4595: 7b 18 10                 u64 [sp + 0x10] = a1
  4598: 7c 7a 38                 a3 = u8 [a0 + 0x38]
  4601: 7b 1a 08                 u64 [sp + 0x8] = a3
  4604: 82 7a 20                 a3 = u64 [a0 + 0x20]
  4607: 82 78 28                 a1 = u64 [a0 + 0x28]
  4610: 48 17 30 30              u32 [a0 + 48] = 0x30
  4614: 7b 17                    u64 [sp] = a0
  4616: 46 17 38 01              u8 [a0 + 56] = 0x1
  4620: 7b 1a 48                 u64 [sp + 0x48] = a3
  4623: 64 a7                    a0 = a3
  4625: 64 86                    s1 = a1
  4627: 82 1a 38                 a3 = u64 [sp + 0x38]
  4630: 82 1b 30                 a4 = u64 [sp + 0x30]
  4633: 50 10 52 19 01           ra = 82, jump @354
      :                          @325 [@dyn 41]
  4638: 52 07 67                 jump @338 if a0 != 0
      :                          @326
  4641: 82 17 40                 a0 = u64 [sp + 0x40]
  4644: c9 57 05                 s0 = a0 - s0
  4647: 95 55 01                 s0 = s0 + 0x1
  4650: 01                       fallthrough
      :                          @327
  4651: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  4654: 51 05 c6 00              jump @349 if s0 == 0
      :                          @328
  4658: 82 69 20                 a2 = u64 [s1 + 0x20]
  4661: 33 08 30                 a1 = 0x30
  4664: 82 17 48                 a0 = u64 [sp + 0x48]
  4667: b4 90 01 54              ra = 84, jump [a2]
      :                          @329 [@dyn 42]
  4671: 51 07 ec                 jump @327 if a0 == 0
      :                          @330
  4674: 28 43                    jump @338
      :                          @331
  4676: 52 16 02 12              jump @333 if s1 != 2
      :                          @332
  4680: 98 a6 01                 s1 = a3 >> 0x1
  4683: 95 a8 01                 a1 = a3 + 0x1
  4686: 98 88 01                 a1 = a1 >> 0x1
  4689: 7b 18 10                 u64 [sp + 0x10] = a1
  4692: 28 08                    jump @334
      :                          @333
  4694: 64 a6                    s1 = a3
  4696: 49 11 10                 u64 [sp + 16] = 0
  4699: 01                       fallthrough
      :                          @334
  4700: 82 78 20                 a1 = u64 [a0 + 0x20]
  4703: 7b 18 48                 u64 [sp + 0x48] = a1
  4706: 82 75 28                 s0 = u64 [a0 + 0x28]
  4709: 81 77 30                 a0 = i32 [a0 + 0x30]
  4712: 7b 17 40                 u64 [sp + 0x40] = a0
  4715: 95 66 01                 s1 = s1 + 0x1
  4718: 01                       fallthrough
      :                          @335
  4719: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  4722: 51 06 27                 jump @340 if s1 == 0
      :                          @336
  4725: 82 59 20                 a2 = u64 [s0 + 0x20]
  4728: 82 17 48                 a0 = u64 [sp + 0x48]
  4731: 82 18 40                 a1 = u64 [sp + 0x40]
  4734: b4 90 01 56              ra = 86, jump [a2]
      :                          @337 [@dyn 43]
  4738: 51 07 ed                 jump @335 if a0 == 0
      :                          @338
  4741: 33 08 01                 a1 = 0x1
  4744: 01                       fallthrough
      :                          @339
  4745: 64 87                    a0 = a1
  4747: 82 10 60                 ra = u64 [sp + 0x60]
  4750: 82 15 58                 s0 = u64 [sp + 0x58]
  4753: 82 16 50                 s1 = u64 [sp + 0x50]
  4756: 95 11 68                 sp = sp + 0x68
  4759: 32 00                    ret
      :                          @340
  4761: 82 16 48                 s1 = u64 [sp + 0x48]
  4764: 64 67                    a0 = s1
  4766: 64 58                    a1 = s0
  4768: 82 19 18                 a2 = u64 [sp + 0x18]
  4771: 82 1a 38                 a3 = u64 [sp + 0x38]
  4774: 82 1b 30                 a4 = u64 [sp + 0x30]
  4777: 50 10 58 89 00           ra = 88, jump @354
      :                          @341 [@dyn 44]
  4782: 33 08 01                 a1 = 0x1
  4785: 52 07 d8                 jump @339 if a0 != 0
      :                          @342
  4788: 82 5a 18                 a3 = u64 [s0 + 0x18]
  4791: 64 67                    a0 = s1
  4793: 82 18 20                 a1 = u64 [sp + 0x20]
  4796: 82 19 28                 a2 = u64 [sp + 0x28]
  4799: b4 a0 01 5a              ra = 90, jump [a3]
      :                          @343 [@dyn 45]
  4803: 33 08 01                 a1 = 0x1
  4806: 52 07 c3                 jump @339 if a0 != 0
      :                          @344
  4809: 82 17 10                 a0 = u64 [sp + 0x10]
  4812: 9a 77                    a0 = -a0
  4814: 7b 17 38                 u64 [sp + 0x38] = a0
  4817: 33 06 ff                 s1 = 0xffffffffffffffff
  4820: 01                       fallthrough
      :                          @345
  4821: 82 17 38                 a0 = u64 [sp + 0x38]
  4824: c8 67 07                 a0 = a0 + s1
  4827: 51 17 ff 42              jump @352 if a0 == 4294967295
      :                          @346
  4831: 82 59 20                 a2 = u64 [s0 + 0x20]
  4834: 82 17 48                 a0 = u64 [sp + 0x48]
  4837: 82 18 40                 a1 = u64 [sp + 0x40]
  4840: b4 90 01 5c              ra = 92, jump [a2]
      :                          @347 [@dyn 46]
  4844: 95 66 01                 s1 = s1 + 0x1
  4847: 51 07 e6                 jump @345 if a0 == 0
      :                          @348
  4850: 28 37                    jump @353
      :                          @349
  4852: 82 6a 18                 a3 = u64 [s1 + 0x18]
  4855: 82 17 48                 a0 = u64 [sp + 0x48]
  4858: 82 18 20                 a1 = u64 [sp + 0x20]
  4861: 82 19 28                 a2 = u64 [sp + 0x28]
  4864: b4 a0 01 5e              ra = 94, jump [a3]
      :                          @350 [@dyn 47]
  4868: 33 08 01                 a1 = 0x1
  4871: 52 07 82                 jump @339 if a0 != 0
      :                          @351
  4874: 33 08                    a1 = 0
  4876: 82 16                    s1 = u64 [sp]
  4878: 82 17 10                 a0 = u64 [sp + 0x10]
  4881: 7a 67 30                 u32 [s1 + 0x30] = a0
  4884: 82 17 08                 a0 = u64 [sp + 0x8]
  4887: 78 67 38                 u8 [s1 + 0x38] = a0
  4890: 28 6f ff                 jump @339
      :                          @352
  4893: 82 16 10                 s1 = u64 [sp + 0x10]
  4896: 82 17 10                 a0 = u64 [sp + 0x10]
  4899: d8 76 08                 a1 = s1 <u a0
  4902: 28 63 ff                 jump @339
      :                          @353
  4905: 82 17 10                 a0 = u64 [sp + 0x10]
  4908: d8 76 08                 a1 = s1 <u a0
  4911: 28 5a ff                 jump @339
      :                          @354
  4914: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  4917: 7b 10 20                 u64 [sp + 0x20] = ra
  4920: 7b 15 18                 u64 [sp + 0x18] = s0
  4923: 7b 16 10                 u64 [sp + 0x10] = s1
  4926: 83 9c                    i32 a5 = a2 + 0
  4928: 33 02 00 00 11           t0 = 0x110000
  4933: 64 a6                    s1 = a3
  4935: 64 85                    s0 = a1
  4937: 64 7a                    a3 = a0
  4939: aa 2c 20                 jump @357 if a5 == t0
      :                          @355
  4942: 82 5c 20                 a5 = u64 [s0 + 0x20]
  4945: 64 a7                    a0 = a3
  4947: 64 98                    a1 = a2
  4949: 7b 1b 08                 u64 [sp + 0x8] = a4
  4952: 7b 1a                    u64 [sp] = a3
  4954: b4 c0 01 60              ra = 96, jump [a5]
      :                          @356 [@dyn 48]
  4958: 82 1a                    a3 = u64 [sp]
  4960: 82 1b 08                 a4 = u64 [sp + 0x8]
  4963: 64 78                    a1 = a0
  4965: 33 07 01                 a0 = 0x1
  4968: 52 08 20                 jump @360 if a1 != 0
      :                          @357
  4971: 51 06 1a                 jump @359 if s1 == 0
      :                          @358
  4974: 82 5c 18                 a5 = u64 [s0 + 0x18]
  4977: 64 a7                    a0 = a3
  4979: 64 68                    a1 = s1
  4981: 64 b9                    a2 = a4
  4983: 82 10 20                 ra = u64 [sp + 0x20]
  4986: 82 15 18                 s0 = u64 [sp + 0x18]
  4989: 82 16 10                 s1 = u64 [sp + 0x10]
  4992: 95 11 28                 sp = sp + 0x28
  4995: 32 0c                    jump [a5]
      :                          @359
  4997: 33 07                    a0 = 0
  4999: 01                       fallthrough
      :                          @360
  5000: 82 10 20                 ra = u64 [sp + 0x20]
  5003: 82 15 18                 s0 = u64 [sp + 0x18]
  5006: 82 16 10                 s1 = u64 [sp + 0x10]
  5009: 95 11 28                 sp = sp + 0x28
  5012: 32 00                    ret
      :                          @361
  5014: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  5018: 7b 10 80 00              u64 [sp + 0x80] = ra
  5022: 7b 15 78                 u64 [sp + 0x78] = s0
  5025: 7b 16 70                 u64 [sp + 0x70] = s1
  5028: 49 11 60 20              u64 [sp + 96] = 0x20
  5032: 33 0a 03                 a3 = 0x3
  5035: 78 1a 68                 u8 [sp + 0x68] = a3
  5038: 82 96 20                 s1 = u64 [a2 + 0x20]
  5041: 49 11 30                 u64 [sp + 48] = 0
  5044: 49 11 40                 u64 [sp + 64] = 0
  5047: 7b 17 50                 u64 [sp + 0x50] = a0
  5050: 7b 18 58                 u64 [sp + 0x58] = a1
  5053: 51 06 07 01              jump @383 if s1 == 0
      :                          @362
  5057: 82 97 28                 a0 = u64 [a2 + 0x28]
  5060: 51 07 74 01              jump @393 if a0 == 0
      :                          @363
  5064: 49 11 28                 u64 [sp + 40] = 0
  5067: 82 95                    s0 = u64 [a2]
  5069: 7b 19 08                 u64 [sp + 0x8] = a2
  5072: 82 98 10                 a1 = u64 [a2 + 0x10]
  5075: 7b 18 18                 u64 [sp + 0x18] = a1
  5078: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  5081: 97 88 03                 a1 = a1 << 0x3
  5084: 98 88 03                 a1 = a1 >> 0x3
  5087: 95 88 01                 a1 = a1 + 0x1
  5090: 7b 18                    u64 [sp] = a1
  5092: 95 55 08                 s0 = s0 + 0x8
  5095: 96 78 38                 a1 = a0 * 0x38
  5098: 95 66 18                 s1 = s1 + 0x18
  5101: 33 07 4c                 a0 = 0x4c
  5104: 7b 17 10                 u64 [sp + 0x10] = a0
  5107: 01                       fallthrough
      :                          @364
  5108: 7b 18 20                 u64 [sp + 0x20] = a1
  5111: 82 59                    a2 = u64 [s0]
  5113: 51 09 17                 jump @367 if a2 == 0
      :                          @365
  5116: 82 1a 58                 a3 = u64 [sp + 0x58]
  5119: 82 17 50                 a0 = u64 [sp + 0x50]
  5122: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  5125: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5128: b4 a0 01 62              ra = 98, jump [a3]
      :                          @366 [@dyn 49]
  5132: 52 07 51 01              jump @396 if a0 != 0
      :                          @367
  5136: 81 67 10                 a0 = i32 [s1 + 0x10]
  5139: 7a 17 60                 u32 [sp + 0x60] = a0
  5142: 7c 67 18                 a0 = u8 [s1 + 0x18]
  5145: 78 17 68                 u8 [sp + 0x68] = a0
  5148: 81 67 14                 a0 = i32 [s1 + 0x14]
  5151: 7a 17 64                 u32 [sp + 0x64] = a0
  5154: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  5157: 82 67                    a0 = u64 [s1]
  5159: 51 08 26                 jump @372 if a1 == 0
      :                          @368
  5162: 52 18 01 16              jump @370 if a1 != 1
      :                          @369
  5166: 97 77 04                 a0 = a0 << 0x4
  5169: 82 18 18                 a1 = u64 [sp + 0x18]
  5172: c8 87 07                 a0 = a0 + a1
  5175: 82 78 08                 a1 = u64 [a0 + 0x8]
  5178: 82 19 10                 a2 = u64 [sp + 0x10]
  5181: aa 98 07                 jump @371 if a1 == a2
      :                          @370
  5184: 33 08                    a1 = 0
  5186: 28 0f                    jump @373
      :                          @371
  5188: 82 77                    a0 = u64 [a0]
  5190: 82 77                    a0 = u64 [a0]
  5192: 33 08 01                 a1 = 0x1
  5195: 28 06                    jump @373
      :                          @372
  5197: 33 08 01                 a1 = 0x1
  5200: 01                       fallthrough
      :                          @373
  5201: 7b 18 30                 u64 [sp + 0x30] = a1
  5204: 7b 17 38                 u64 [sp + 0x38] = a0
  5207: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  5210: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  5213: 51 08 26                 jump @378 if a1 == 0
      :                          @374
  5216: 52 18 01 16              jump @376 if a1 != 1
      :                          @375
  5220: 97 77 04                 a0 = a0 << 0x4
  5223: 82 18 18                 a1 = u64 [sp + 0x18]
  5226: c8 87 07                 a0 = a0 + a1
  5229: 82 78 08                 a1 = u64 [a0 + 0x8]
  5232: 82 19 10                 a2 = u64 [sp + 0x10]
  5235: aa 98 07                 jump @377 if a1 == a2
      :                          @376
  5238: 33 08                    a1 = 0
  5240: 28 0f                    jump @379
      :                          @377
  5242: 82 77                    a0 = u64 [a0]
  5244: 82 77                    a0 = u64 [a0]
  5246: 33 08 01                 a1 = 0x1
  5249: 28 06                    jump @379
      :                          @378
  5251: 33 08 01                 a1 = 0x1
  5254: 01                       fallthrough
      :                          @379
  5255: 7b 18 40                 u64 [sp + 0x40] = a1
  5258: 7b 17 48                 u64 [sp + 0x48] = a0
  5261: 82 67 08                 a0 = u64 [s1 + 0x8]
  5264: 97 77 04                 a0 = a0 << 0x4
  5267: 82 18 18                 a1 = u64 [sp + 0x18]
  5270: c8 78 08                 a1 = a1 + a0
  5273: 82 87                    a0 = u64 [a1]
  5275: 82 89 08                 a2 = u64 [a1 + 0x8]
  5278: 95 18 30                 a1 = sp + 0x30
  5281: b4 90 01 64              ra = 100, jump [a2]
      :                          @380 [@dyn 50]
  5285: 52 07 b8 00              jump @396 if a0 != 0
      :                          @381
  5289: 95 55 10                 s0 = s0 + 0x10
  5292: 82 18 20                 a1 = u64 [sp + 0x20]
  5295: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  5298: 95 66 38                 s1 = s1 + 0x38
  5301: 82 17 28                 a0 = u64 [sp + 0x28]
  5304: 95 77 01                 a0 = a0 + 0x1
  5307: 7b 17 28                 u64 [sp + 0x28] = a0
  5310: 52 08 36 ff              jump @364 if a1 != 0
      :                          @382
  5314: 28 69                    jump @391
      :                          @383
  5316: 82 97 18                 a0 = u64 [a2 + 0x18]
  5319: 51 07 71                 jump @393 if a0 == 0
      :                          @384
  5322: 82 95 10                 s0 = u64 [a2 + 0x10]
  5325: 33 0a                    a3 = 0
  5327: 97 78 04                 a1 = a0 << 0x4
  5330: c8 58 08                 a1 = a1 + s0
  5333: 7b 18 20                 u64 [sp + 0x20] = a1
  5336: 7b 19 08                 u64 [sp + 0x8] = a2
  5339: 82 96                    s1 = u64 [a2]
  5341: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  5344: 97 77 04                 a0 = a0 << 0x4
  5347: 98 77 04                 a0 = a0 >> 0x4
  5350: 95 77 01                 a0 = a0 + 0x1
  5353: 7b 17                    u64 [sp] = a0
  5355: 95 66 08                 s1 = s1 + 0x8
  5358: 01                       fallthrough
      :                          @385
  5359: 7b 1a 28                 u64 [sp + 0x28] = a3
  5362: 82 69                    a2 = u64 [s1]
  5364: 51 09 16                 jump @388 if a2 == 0
      :                          @386
  5367: 82 1a 58                 a3 = u64 [sp + 0x58]
  5370: 82 17 50                 a0 = u64 [sp + 0x50]
  5373: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  5376: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5379: b4 a0 01 66              ra = 102, jump [a3]
      :                          @387 [@dyn 51]
  5383: 52 07 56                 jump @396 if a0 != 0
      :                          @388
  5386: 82 57                    a0 = u64 [s0]
  5388: 82 59 08                 a2 = u64 [s0 + 0x8]
  5391: 95 18 30                 a1 = sp + 0x30
  5394: b4 90 01 68              ra = 104, jump [a2]
      :                          @389 [@dyn 52]
  5398: 52 07 47                 jump @396 if a0 != 0
      :                          @390
  5401: 95 66 10                 s1 = s1 + 0x10
  5404: 95 55 10                 s0 = s0 + 0x10
  5407: 82 1a 28                 a3 = u64 [sp + 0x28]
  5410: 95 aa 01                 a3 = a3 + 0x1
  5413: 82 17 20                 a0 = u64 [sp + 0x20]
  5416: ab 75 c7                 jump @385 if s0 != a0
      :                          @391
  5419: 82 19 08                 a2 = u64 [sp + 0x8]
  5422: 82 1a                    a3 = u64 [sp]
  5424: 82 97 08                 a0 = u64 [a2 + 0x8]
  5427: ac 7a 0d                 jump @394 if a3 <u a0
      :                          @392
  5430: 28 2c                    jump @397
      :                          @393
  5432: 33 0a                    a3 = 0
  5434: 82 97 08                 a0 = u64 [a2 + 0x8]
  5437: 54 07 25                 jump @397 if a0 <=u 0
      :                          @394
  5440: 82 97                    a0 = u64 [a2]
  5442: 97 a8 04                 a1 = a3 << 0x4
  5445: c8 87 09                 a2 = a0 + a1
  5448: 82 1a 58                 a3 = u64 [sp + 0x58]
  5451: 82 17 50                 a0 = u64 [sp + 0x50]
  5454: 82 98                    a1 = u64 [a2]
  5456: 82 99 08                 a2 = u64 [a2 + 0x8]
  5459: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5462: b4 a0 01 6a              ra = 106, jump [a3]
      :                          @395 [@dyn 53]
  5466: 51 07 08                 jump @397 if a0 == 0
      :                          @396
  5469: 33 07 01                 a0 = 0x1
  5472: 28 05                    jump @398
      :                          @397
  5474: 33 07                    a0 = 0
  5476: 01                       fallthrough
      :                          @398
  5477: 82 10 80 00              ra = u64 [sp + 0x80]
  5481: 82 15 78                 s0 = u64 [sp + 0x78]
  5484: 82 16 70                 s1 = u64 [sp + 0x70]
  5487: 95 11 88 00              sp = sp + 0x88
  5491: 32 00                    ret
      :                          @399 [@dyn 54]
  5493: 32 00                    ret
      :                          @400 [@dyn 55]
  5495: 95 11 80                 sp = sp + 0xffffffffffffff80
  5498: 7b 10 78                 u64 [sp + 0x78] = ra
  5501: 7b 15 70                 u64 [sp + 0x70] = s0
  5504: 7b 16 68                 u64 [sp + 0x68] = s1
  5507: 64 92                    t0 = a2
  5509: 33 00                    ra = 0
  5511: 33 0b                    a4 = 0
  5513: 33 05                    s0 = 0
  5515: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
  5525: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
  5531: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
  5541: 82 79 10                 a2 = u64 [a0 + 0x10]
  5544: 7b 19 48                 u64 [sp + 0x48] = a2
  5547: 82 79                    a2 = u64 [a0]
  5549: 7b 19 38                 u64 [sp + 0x38] = a2
  5552: 82 77 08                 a0 = u64 [a0 + 0x8]
  5555: 7b 17 30                 u64 [sp + 0x30] = a0
  5558: 33 07 80 01 01           a0 = 0x10180
  5563: 7b 17 08                 u64 [sp + 0x8] = a0
  5566: 3a 07 08 00 03           a0 = u64 [0x30008]
  5571: 7b 17 60                 u64 [sp + 0x60] = a0
  5574: 7b 18 58                 u64 [sp + 0x58] = a1
  5577: 95 88 08                 a1 = a1 + 0x8
  5580: 7b 18                    u64 [sp] = a1
  5582: 33 0c 0a                 a5 = 0xa
  5585: 7b 12 20                 u64 [sp + 0x20] = t0
  5588: 7b 13 18                 u64 [sp + 0x18] = t1
  5591: 7b 14 10                 u64 [sp + 0x10] = t2
  5594: 28 3a                    jump @404
      :                          @401
  5596: 64 06                    s1 = ra
  5598: c8 89 07                 a0 = a2 + a1
  5601: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
  5604: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  5607: 88 77 01                 a0 = a0 <u 0x1
  5610: 01                       fallthrough
      :                          @402
  5611: 82 1a 48                 a3 = u64 [sp + 0x48]
  5614: 78 a7                    u8 [a3] = a0
  5616: 82 17 30                 a0 = u64 [sp + 0x30]
  5619: 82 7a 18                 a3 = u64 [a0 + 0x18]
  5622: 82 17 38                 a0 = u64 [sp + 0x38]
  5625: b4 a0 01 70              ra = 112, jump [a3]
      :                          @403 [@dyn 56]
  5629: 64 5b                    a4 = s0
  5631: 82 12 20                 t0 = u64 [sp + 0x20]
  5634: 82 13 18                 t1 = u64 [sp + 0x18]
  5637: 82 14 10                 t2 = u64 [sp + 0x10]
  5640: 64 60                    ra = s1
  5642: 33 0c 0a                 a5 = 0xa
  5645: 82 15 40                 s0 = u64 [sp + 0x40]
  5648: 52 07 63 01              jump @445 if a0 != 0
      :                          @404
  5652: 84 57 ff 00              a0 = s0 & 0xff
  5656: 52 07 57 01              jump @444 if a0 != 0
      :                          @405
  5660: 7b 1b 50                 u64 [sp + 0x50] = a4
  5663: ae 02 0a                 jump @408 if t0 >=u ra
      :                          @406
  5666: 28 ef 00                 jump @435
      :                          @407
  5669: ac 02 ec 00              jump @435 if t0 <u ra
      :                          @408
  5673: c9 02 08                 a1 = t0 - ra
  5676: 82 16 58                 s1 = u64 [sp + 0x58]
  5679: c8 06 06                 s1 = s1 + ra
  5682: 55 18 10 1d              jump @414 if a1 >=u 16
      :                          @409
  5686: aa 02 d8 00              jump @434 if t0 == ra
      :                          @410
  5690: 33 0a                    a3 = 0
  5692: 01                       fallthrough
      :                          @411
  5693: c8 a6 07                 a0 = s1 + a3
  5696: 7c 77                    a0 = u8 [a0]
  5698: aa c7 a5 00              jump @429 if a0 == a5
      :                          @412
  5702: 95 aa 01                 a3 = a3 + 0x1
  5705: ab a8 f4                 jump @411 if a1 != a3
      :                          @413
  5708: 28 c2 00                 jump @434
      :                          @414
  5711: 95 69 07                 a2 = s1 + 0x7
  5714: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
  5717: c9 6a 07                 a0 = a3 - s1
  5720: d3 6a 0a                 a3 = a3 ^ s1
  5723: 88 aa 01                 a3 = a3 <u 0x1
  5726: 88 7b 01                 a4 = a0 <u 0x1
  5729: d4 ba 0a                 a3 = a3 | a4
  5732: 51 0a 45                 jump @420 if a3 == 0
      :                          @415
  5735: 33 07                    a0 = 0
  5737: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  5740: 82 1b                    a4 = u64 [sp]
  5742: c8 0b 0b                 a4 = a4 + ra
  5745: 28 08                    jump @417
      :                          @416
  5747: 82 1b                    a4 = u64 [sp]
  5749: c8 0b 0b                 a4 = a4 + ra
  5752: 01                       fallthrough
      :                          @417
  5753: c8 76 0c                 a5 = s1 + a0
  5756: 82 cc                    a5 = u64 [a5]
  5758: c8 7b 09                 a2 = a4 + a0
  5761: 82 99                    a2 = u64 [a2]
  5763: d3 4c 05                 s0 = a5 ^ t2
  5766: c8 35 05                 s0 = s0 + t1
  5769: e0 c5 0c                 a5 = s0 & ~a5
  5772: d3 49 05                 s0 = a2 ^ t2
  5775: c8 35 05                 s0 = s0 + t1
  5778: e0 95 09                 a2 = s0 & ~a2
  5781: d4 c9 09                 a2 = a2 | a5
  5784: 82 1c 60                 a5 = u64 [sp + 0x60]
  5787: d2 c9 09                 a2 = a2 & a5
  5790: 52 09 1f                 jump @423 if a2 != 0
      :                          @418
  5793: 95 77 10                 a0 = a0 + 0x10
  5796: ae 7a d5                 jump @417 if a3 >=u a0
      :                          @419
  5799: 28 16                    jump @423
      :                          @420
  5801: c8 a6 0b                 a4 = s1 + a3
  5804: 7c bb                    a4 = u8 [a4]
  5806: aa cb 51                 jump @432 if a4 == a5
      :                          @421
  5809: 95 aa 01                 a3 = a3 + 0x1
  5812: ab a7 f5                 jump @420 if a0 != a3
      :                          @422
  5815: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  5818: ae 7a b9                 jump @416 if a3 >=u a0
      :                          @423
  5821: aa 87 9a 00              jump @441 if a0 == a1
      :                          @424
  5825: 33 0a                    a3 = 0
  5827: c8 76 06                 s1 = s1 + a0
  5830: c9 72 08                 a1 = t0 - a0
  5833: c9 08 08                 a1 = a1 - ra
  5836: 33 0c 0a                 a5 = 0xa
  5839: 82 1b 50                 a4 = u64 [sp + 0x50]
  5842: 01                       fallthrough
      :                          @425
  5843: c8 a6 09                 a2 = s1 + a3
  5846: 7c 99                    a2 = u8 [a2]
  5848: aa c9 0b                 jump @428 if a2 == a5
      :                          @426
  5851: 95 aa 01                 a3 = a3 + 0x1
  5854: ab a8 f5                 jump @425 if a1 != a3
      :                          @427
  5857: 28 2d                    jump @434
      :                          @428
  5859: c8 7a 0a                 a3 = a3 + a0
  5862: 01                       fallthrough
      :                          @429
  5863: c8 0a 0a                 a3 = a3 + ra
  5866: 95 a0 01                 ra = a3 + 0x1
  5869: ae 2a 38 ff              jump @407 if a3 >=u t0
      :                          @430
  5873: 82 17 58                 a0 = u64 [sp + 0x58]
  5876: c8 7a 0a                 a3 = a3 + a0
  5879: 7c a7                    a0 = u8 [a3]
  5881: ab c7 2c ff              jump @407 if a0 != a5
      :                          @431
  5885: 28 61                    jump @442
      :                          @432
  5887: 82 1b 50                 a4 = u64 [sp + 0x50]
  5890: c8 0a 0a                 a3 = a3 + ra
  5893: 95 a0 01                 ra = a3 + 0x1
  5896: ac 2a e9                 jump @430 if a3 <u t0
      :                          @433
  5899: 28 1a ff                 jump @407
      :                          @434
  5902: 64 20                    ra = t0
  5904: 01                       fallthrough
      :                          @435
  5905: 49 11 40 01              u64 [sp + 64] = 0x1
  5909: 64 b5                    s0 = a4
  5911: 64 26                    s1 = t0
  5913: aa 2b 56                 jump @444 if a4 == t0
      :                          @436
  5916: 82 17 48                 a0 = u64 [sp + 0x48]
  5919: 7c 77                    a0 = u8 [a0]
  5921: 51 07 22                 jump @439 if a0 == 0
      :                          @437
  5924: 82 17 30                 a0 = u64 [sp + 0x30]
  5927: 82 7a 18                 a3 = u64 [a0 + 0x18]
  5930: 33 09 04                 a2 = 0x4
  5933: 82 17 38                 a0 = u64 [sp + 0x38]
  5936: 82 18 08                 a1 = u64 [sp + 0x8]
  5939: 7b 10 28                 u64 [sp + 0x28] = ra
  5942: b4 a0 01 72              ra = 114, jump [a3]
      :                          @438 [@dyn 57]
  5946: 82 1b 50                 a4 = u64 [sp + 0x50]
  5949: 82 10 28                 ra = u64 [sp + 0x28]
  5952: 52 07 33                 jump @445 if a0 != 0
      :                          @439
  5955: c9 b6 09                 a2 = s1 - a4
  5958: 82 18 58                 a1 = u64 [sp + 0x58]
  5961: c8 b8 08                 a1 = a1 + a4
  5964: ab b6 90 fe              jump @401 if s1 != a4
      :                          @440
  5968: 64 06                    s1 = ra
  5970: 33 07                    a0 = 0
  5972: 28 97 fe                 jump @402
      :                          @441
  5975: 64 20                    ra = t0
  5977: 82 1b 50                 a4 = u64 [sp + 0x50]
  5980: 28 b5                    jump @435
      :                          @442
  5982: 49 11 40                 u64 [sp + 64] = 0
  5985: 64 05                    s0 = ra
  5987: 64 06                    s1 = ra
  5989: 82 17 48                 a0 = u64 [sp + 0x48]
  5992: 7c 77                    a0 = u8 [a0]
  5994: 52 07 ba                 jump @437 if a0 != 0
      :                          @443
  5997: 28 d6                    jump @439
      :                          @444
  5999: 33 07                    a0 = 0
  6001: 28 06                    jump @446
      :                          @445
  6003: 33 07 01                 a0 = 0x1
  6006: 01                       fallthrough
      :                          @446
  6007: 82 10 78                 ra = u64 [sp + 0x78]
  6010: 82 15 70                 s0 = u64 [sp + 0x70]
  6013: 82 16 68                 s1 = u64 [sp + 0x68]
  6016: 95 11 80 00              sp = sp + 0x80
  6020: 32 00                    ret
      :                          @447 [@dyn 58]
  6022: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  6025: 7b 10 20                 u64 [sp + 0x20] = ra
  6028: 7b 15 18                 u64 [sp + 0x18] = s0
  6031: 7b 16 10                 u64 [sp + 0x10] = s1
  6034: 82 75 10                 s0 = u64 [a0 + 0x10]
  6037: 7c 59                    a2 = u8 [s0]
  6039: 82 7b                    a4 = u64 [a0]
  6041: 82 76 08                 s1 = u64 [a0 + 0x8]
  6044: 51 09 32                 jump @451 if a2 == 0
      :                          @448
  6047: 82 6a 18                 a3 = u64 [s1 + 0x18]
  6050: 7b 18 08                 u64 [sp + 0x8] = a1
  6053: 33 08 80 01 01           a1 = 0x10180
  6058: 33 09 04                 a2 = 0x4
  6061: 64 b7                    a0 = a4
  6063: 7b 1b                    u64 [sp] = a4
  6065: b4 a0 01 76              ra = 118, jump [a3]
      :                          @449 [@dyn 59]
  6069: 82 18 08                 a1 = u64 [sp + 0x8]
  6072: 82 1b                    a4 = u64 [sp]
  6074: 51 07 14                 jump @451 if a0 == 0
      :                          @450
  6077: 33 07 01                 a0 = 0x1
  6080: 82 10 20                 ra = u64 [sp + 0x20]
  6083: 82 15 18                 s0 = u64 [sp + 0x18]
  6086: 82 16 10                 s1 = u64 [sp + 0x10]
  6089: 95 11 28                 sp = sp + 0x28
  6092: 32 00                    ret
      :                          @451
  6094: 83 87                    i32 a0 = a1 + 0
  6096: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  6099: 88 77 01                 a0 = a0 <u 0x1
  6102: 78 57                    u8 [s0] = a0
  6104: 82 6c 20                 a5 = u64 [s1 + 0x20]
  6107: 64 b7                    a0 = a4
  6109: 82 10 20                 ra = u64 [sp + 0x20]
  6112: 82 15 18                 s0 = u64 [sp + 0x18]
  6115: 82 16 10                 s1 = u64 [sp + 0x10]
  6118: 95 11 28                 sp = sp + 0x28
  6121: 32 0c                    jump [a5]
      :                          @452 [@dyn 60]
  6123: 64 8a                    a3 = a1
  6125: 33 08 50 01 01           a1 = 0x10150
  6130: 64 a9                    a2 = a3
  6132: 28 a2 fb                 jump @361
      :                          @453
  6135: 95 11 70 ff              sp = sp + 0xffffffffffffff70
  6139: 7b 10 88 00              u64 [sp + 0x88] = ra
  6143: 7b 15 80 00              u64 [sp + 0x80] = s0
  6147: 7b 16 78                 u64 [sp + 0x78] = s1
  6150: 64 75                    s0 = a0
  6152: 7c 77 08                 a0 = u8 [a0 + 0x8]
  6155: 64 8b                    a4 = a1
  6157: 33 08 01                 a1 = 0x1
  6160: 33 06 01                 s1 = 0x1
  6163: 51 07 1d                 jump @455 if a0 == 0
      :                          @454
  6166: 78 56 08                 u8 [s0 + 0x8] = s1
  6169: 46 15 09 01              u8 [s0 + 9] = 0x1
  6173: 64 57                    a0 = s0
  6175: 82 10 88 00              ra = u64 [sp + 0x88]
  6179: 82 15 80 00              s0 = u64 [sp + 0x80]
  6183: 82 16 78                 s1 = u64 [sp + 0x78]
  6186: 95 11 90 00              sp = sp + 0x90
  6190: 32 00                    ret
      :                          @455
  6192: 64 9a                    a3 = a2
  6194: 82 5c                    a5 = u64 [s0]
  6196: 80 c7 34                 a0 = u32 [a5 + 0x34]
  6199: 7c 58 09                 a1 = u8 [s0 + 0x9]
  6202: 84 79 04                 a2 = a0 & 0x4
  6205: 52 09 43                 jump @461 if a2 != 0
      :                          @456
  6208: 51 08 31                 jump @459 if a1 == 0
      :                          @457
  6211: 82 c8 28                 a1 = u64 [a5 + 0x28]
  6214: 82 c7 20                 a0 = u64 [a5 + 0x20]
  6217: 82 83 18                 t1 = u64 [a1 + 0x18]
  6220: 33 08 84 01 01           a1 = 0x10184
  6225: 33 09 02                 a2 = 0x2
  6228: 64 a6                    s1 = a3
  6230: 7b 1b 10                 u64 [sp + 0x10] = a4
  6233: 7b 1c 08                 u64 [sp + 0x8] = a5
  6236: b4 30 01 7a              ra = 122, jump [t1]
      :                          @458 [@dyn 61]
  6240: 82 1c 08                 a5 = u64 [sp + 0x8]
  6243: 82 1b 10                 a4 = u64 [sp + 0x10]
  6246: 64 6a                    a3 = s1
  6248: 33 08 01                 a1 = 0x1
  6251: 33 06 01                 s1 = 0x1
  6254: 52 07 a8                 jump @454 if a0 != 0
      :                          @459
  6257: 64 b7                    a0 = a4
  6259: 64 c8                    a1 = a5
  6261: b4 a0 01 7c              ra = 124, jump [a3]
      :                          @460 [@dyn 62]
  6265: 33 08 01                 a1 = 0x1
  6268: 64 76                    s1 = a0
  6270: 28 98                    jump @454
      :                          @461
  6272: 52 08 36                 jump @465 if a1 != 0
      :                          @462
  6275: 82 c8 28                 a1 = u64 [a5 + 0x28]
  6278: 82 c7 20                 a0 = u64 [a5 + 0x20]
  6281: 82 83 18                 t1 = u64 [a1 + 0x18]
  6284: 33 08 88 01 01           a1 = 0x10188
  6289: 33 09 01                 a2 = 0x1
  6292: 33 06 01                 s1 = 0x1
  6295: 7b 1a                    u64 [sp] = a3
  6297: 7b 1b 10                 u64 [sp + 0x10] = a4
  6300: 7b 1c 08                 u64 [sp + 0x8] = a5
  6303: b4 30 01 7e              ra = 126, jump [t1]
      :                          @463 [@dyn 63]
  6307: 82 1c 08                 a5 = u64 [sp + 0x8]
  6310: 82 1b 10                 a4 = u64 [sp + 0x10]
  6313: 82 1a                    a3 = u64 [sp]
  6315: 33 08 01                 a1 = 0x1
  6318: 52 07 68 ff              jump @454 if a0 != 0
      :                          @464
  6322: 81 c7 34                 a0 = i32 [a5 + 0x34]
  6325: 01                       fallthrough
      :                          @465
  6326: 33 06 01                 s1 = 0x1
  6329: 78 16 37                 u8 [sp + 0x37] = s1
  6332: 82 c8 20                 a1 = u64 [a5 + 0x20]
  6335: 82 c9 28                 a2 = u64 [a5 + 0x28]
  6338: 7b 18 18                 u64 [sp + 0x18] = a1
  6341: 7b 19 20                 u64 [sp + 0x20] = a2
  6344: 95 18 37                 a1 = sp + 0x37
  6347: 7b 18 28                 u64 [sp + 0x28] = a1
  6350: 81 c8 30                 a1 = i32 [a5 + 0x30]
  6353: 7c c9 38                 a2 = u8 [a5 + 0x38]
  6356: 82 c3                    t1 = u64 [a5]
  6358: 82 c4 08                 t2 = u64 [a5 + 0x8]
  6361: 82 c0 10                 ra = u64 [a5 + 0x10]
  6364: 82 c2 18                 t0 = u64 [a5 + 0x18]
  6367: 7a 17 6c                 u32 [sp + 0x6c] = a0
  6370: 7a 18 68                 u32 [sp + 0x68] = a1
  6373: 78 19 70                 u8 [sp + 0x70] = a2
  6376: 7b 13 38                 u64 [sp + 0x38] = t1
  6379: 7b 14 40                 u64 [sp + 0x40] = t2
  6382: 7b 10 48                 u64 [sp + 0x48] = ra
  6385: 7b 12 50                 u64 [sp + 0x50] = t0
  6388: 95 17 18                 a0 = sp + 0x18
  6391: 7b 17 58                 u64 [sp + 0x58] = a0
  6394: 33 07 50 01 01           a0 = 0x10150
  6399: 7b 17 60                 u64 [sp + 0x60] = a0
  6402: 95 18 38                 a1 = sp + 0x38
  6405: 64 b7                    a0 = a4
  6407: b4 a0 02 80 00           ra = 128, jump [a3]
      :                          @466 [@dyn 64]
  6412: 52 07 21                 jump @469 if a0 != 0
      :                          @467
  6415: 82 18 60                 a1 = u64 [sp + 0x60]
  6418: 82 17 58                 a0 = u64 [sp + 0x58]
  6421: 82 8a 18                 a3 = u64 [a1 + 0x18]
  6424: 33 08 86 01 01           a1 = 0x10186
  6429: 33 09 02                 a2 = 0x2
  6432: b4 a0 02 82 00           ra = 130, jump [a3]
      :                          @468 [@dyn 65]
  6437: 64 76                    s1 = a0
  6439: 33 08 01                 a1 = 0x1
  6442: 28 ec fe                 jump @454
      :                          @469
  6445: 33 08 01                 a1 = 0x1
  6448: 28 e6 fe                 jump @454
      :                          @470
  6451: 51 08 9b 00              jump @491 if a1 == 0
      :                          @471
  6455: 64 79                    a2 = a0
  6457: 7c 77                    a0 = u8 [a0]
  6459: 51 07 91 00              jump @490 if a0 == 0
      :                          @472
  6463: 51 27 ff 00 90 00        jump @492 if a0 == 255
      :                          @473
  6469: 6c 7a                    a3 = sext.b a0
  6471: 57 0a 09                 jump @475 if a3 <s 0
      :                          @474
  6474: 33 0a                    a3 = 0
  6476: 33 08                    a1 = 0
  6478: 28 73                    jump @489
      :                          @475
  6480: 55 27 c0 00 0d           jump @477 if a0 >=u 192
      :                          @476
  6485: 33 0a 01                 a3 = 0x1
  6488: 33 0b 80                 a4 = 0xffffffffffffff80
  6491: 28 4a                    jump @486
      :                          @477
  6493: 55 27 e0 00 0e           jump @479 if a0 >=u 224
      :                          @478
  6498: 33 0a 02                 a3 = 0x2
  6501: 33 0b 40 ff              a4 = 0xffffffffffffff40
  6505: 28 3c                    jump @486
      :                          @479
  6507: 55 27 f0 00 0e           jump @481 if a0 >=u 240
      :                          @480
  6512: 33 0a 03                 a3 = 0x3
  6515: 33 0b 20 ff              a4 = 0xffffffffffffff20
  6519: 28 2e                    jump @486
      :                          @481
  6521: 55 27 f8 00 0e           jump @483 if a0 >=u 248
      :                          @482
  6526: 33 0a 04                 a3 = 0x4
  6529: 33 0b 10 ff              a4 = 0xffffffffffffff10
  6533: 28 20                    jump @486
      :                          @483
  6535: 55 27 fc 00 0e           jump @485 if a0 >=u 252
      :                          @484
  6540: 33 0a 05                 a3 = 0x5
  6543: 33 0b 08 ff              a4 = 0xffffffffffffff08
  6547: 28 12                    jump @486
      :                          @485
  6549: 88 7a fe 00              a3 = a0 <u 0xfe
  6553: 33 0b 04 ff              a4 = 0xffffffffffffff04
  6557: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  6561: 85 aa 07                 a3 = a3 ^ 0x7
  6564: 01                       fallthrough
      :                          @486
  6565: ae 8a 2b                 jump @493 if a3 >=u a1
      :                          @487
  6568: 33 08                    a1 = 0
  6570: c8 b7 07                 a0 = a0 + a4
  6573: 64 ab                    a4 = a3
  6575: 01                       fallthrough
      :                          @488
  6576: c8 b9 0c                 a5 = a2 + a4
  6579: 7c cc                    a5 = u8 [a5]
  6581: 97 88 08                 a1 = a1 << 0x8
  6584: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  6587: d4 c8 08                 a1 = a1 | a5
  6590: 52 0b f2                 jump @488 if a4 != 0
      :                          @489
  6593: 8a a9 03                 i32 a2 = a3 << 0x3
  6596: cf 97 07                 a0 = a0 << a2
  6599: c8 87 07                 a0 = a0 + a1
  6602: 32 00                    ret
      :                          @490
  6604: 32 00                    ret
      :                          @491
  6606: 00                       trap
      :                          @492
  6607: 00                       trap
      :                          @493
  6608: 00                       trap
      :                          @494 [@dyn 66]
  6609: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  6612: 7b 10 28                 u64 [sp + 0x28] = ra
  6615: 7b 15 20                 u64 [sp + 0x20] = s0
  6618: 7b 16 18                 u64 [sp + 0x18] = s1
  6621: 64 86                    s1 = a1
  6623: 82 88 28                 a1 = u64 [a1 + 0x28]
  6626: 82 6a 20                 a3 = u64 [s1 + 0x20]
  6629: 82 8b 18                 a4 = u64 [a1 + 0x18]
  6632: 64 75                    s0 = a0
  6634: 33 08 48 01 01           a1 = 0x10148
  6639: 33 09 01                 a2 = 0x1
  6642: 64 a7                    a0 = a3
  6644: b4 b0 02 86 00           ra = 134, jump [a4]
      :                          @495 [@dyn 67]
  6649: 7b 16                    u64 [sp] = s1
  6651: 78 17 08                 u8 [sp + 0x8] = a0
  6654: 46 11 09                 u8 [sp + 9] = 0
  6657: 7b 15 10                 u64 [sp + 0x10] = s0
  6660: 33 09 8c 00              a2 = 0x8c
  6664: 64 17                    a0 = sp
  6666: 95 18 10                 a1 = sp + 0x10
  6669: 50 20 88 00 ea fd        ra = 136, jump @453
      :                          @496 [@dyn 68]
  6675: 33 07 01                 a0 = 0x1
  6678: 7c 18 08                 a1 = u8 [sp + 0x8]
  6681: 52 08 1b                 jump @498 if a1 != 0
      :                          @497
  6684: 82 17                    a0 = u64 [sp]
  6686: 82 78 28                 a1 = u64 [a0 + 0x28]
  6689: 82 77 20                 a0 = u64 [a0 + 0x20]
  6692: 82 8a 18                 a3 = u64 [a1 + 0x18]
  6695: 33 08 89 01 01           a1 = 0x10189
  6700: 33 09 01                 a2 = 0x1
  6703: b4 a0 02 8a 00           ra = 138, jump [a3]
      :                          @498 [@dyn 69]
  6708: 82 10 28                 ra = u64 [sp + 0x28]
  6711: 82 15 20                 s0 = u64 [sp + 0x20]
  6714: 82 16 18                 s1 = u64 [sp + 0x18]
  6717: 95 11 30                 sp = sp + 0x30
  6720: 32 00                    ret
      :                          @499 [@dyn 70]
  6722: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  6726: 7b 10 80 00              u64 [sp + 0x80] = ra
  6730: 80 89 34                 a2 = u32 [a1 + 0x34]
  6733: 82 77                    a0 = u64 [a0]
  6735: 84 9a 10                 a3 = a2 & 0x10
  6738: 52 0a 16                 jump @502 if a3 != 0
      :                          @500
  6741: 84 99 20                 a2 = a2 & 0x20
  6744: 52 09 41                 jump @505 if a2 != 0
      :                          @501
  6747: 7c 77                    a0 = u8 [a0]
  6749: 82 10 80 00              ra = u64 [sp + 0x80]
  6753: 95 11 88 00              sp = sp + 0x88
  6757: 28 9b f5                 jump @299
      :                          @502
  6760: 7c 77                    a0 = u8 [a0]
  6762: 33 0b 81 00              a4 = 0x81
  6766: 95 19 7f                 a2 = sp + 0x7f
  6769: 33 02 57                 t0 = 0x57
  6772: 01                       fallthrough
      :                          @503
  6773: 64 bc                    a5 = a4
  6775: 84 7b 0f                 a4 = a0 & 0xf
  6778: 97 77 38                 a0 = a0 << 0x38
  6781: 98 77 3c                 a0 = a0 >> 0x3c
  6784: 88 b3 0a                 t1 = a4 <u 0xa
  6787: 33 0a 30                 a3 = 0x30
  6790: da 32 0a                 a3 = t0 if t1 == 0
  6793: be ba 0a                 i32 a3 = a3 + a4
  6796: 78 9a                    u8 [a2] = a3
  6798: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  6801: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
  6804: 52 07 e1                 jump @503 if a0 != 0
      :                          @504
  6807: 28 31                    jump @507
      :                          @505
  6809: 7c 77                    a0 = u8 [a0]
  6811: 33 0b 81 00              a4 = 0x81
  6815: 95 19 7f                 a2 = sp + 0x7f
  6818: 33 02 37                 t0 = 0x37
  6821: 01                       fallthrough
      :                          @506
  6822: 64 bc                    a5 = a4
  6824: 84 7b 0f                 a4 = a0 & 0xf
  6827: 97 77 38                 a0 = a0 << 0x38
  6830: 98 77 3c                 a0 = a0 >> 0x3c
  6833: 88 b3 0a                 t1 = a4 <u 0xa
  6836: 33 0a 30                 a3 = 0x30
  6839: da 32 0a                 a3 = t0 if t1 == 0
  6842: be ba 0a                 i32 a3 = a3 + a4
  6845: 78 9a                    u8 [a2] = a3
  6847: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  6850: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
  6853: 52 07 e1                 jump @506 if a0 != 0
      :                          @507
  6856: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
  6859: 56 27 80 00 28           jump @510 if a0 >u 128
      :                          @508
  6864: 9a bb 81 00              a4 = 0x81 - a4
  6868: 64 1a                    a3 = sp
  6870: c8 7a 0a                 a3 = a3 + a0
  6873: 33 09 02                 a2 = 0x2
  6876: 64 87                    a0 = a1
  6878: 33 08 8a 01 01           a1 = 0x1018a
  6883: 50 20 8e 00 44 f6        ra = 142, jump @309
      :                          @509 [@dyn 71]
  6889: 82 10 80 00              ra = u64 [sp + 0x80]
  6893: 95 11 88 00              sp = sp + 0x88
  6897: 32 00                    ret
      :                          @510
  6899: 00                       trap
