// RO data = 640/640 bytes
// RW data = 0/4160 bytes
// Stack size = 8192 bytes
// RO data = [70, 73, 66, 32, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 58, 32, 116, 105, 109, 101, 115, 108, 111, 116, 61, 32, 115, 101, 114, 118, 105, 99, 101, 95, 105, 110, 100, 101, 120, 61, 32, 115, 101, 110, 100, 101, 114, 61, 32, 97, 109, 111, 117, 110, 116, 61, 32, 114, 101, 99, 101, 105, 118, 101, 114, 61, 32, 109, 101, 109, 111, 61, 32, 103, 97, 115, 95, 108, 105, 109, 105, 116, 61, 70, 73, 66, 32, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 32, 103, 97, 115, 58, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 52, 41, 91, 32, 32, 32, 32, 44, 32, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 119, 114, 105, 116, 101, 95, 114, 101, 115, 117, 108, 116, 32, 107, 101, 121, 61, 44, 32, 114, 101, 115, 117, 108, 116, 61, 0, 0, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 26, 0, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 41, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 57, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 49, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 67, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 73, 0, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 84, 0, 1, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 109, 0, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 66, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 68, 0, 0, 0, 0, 0, 0, 0, 74, 0, 0, 0, 0, 0, 0, 0, 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 114, 0, 0, 0, 0, 0, 0, 0, 120, 0, 0, 0, 0, 0, 0, 0, 124, 0, 0, 0, 0, 0, 0, 0, 86, 1, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 103, 1, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0]
// RW data = []
// Instructions = 2325
// Code size = 6912 bytes

      :                          @0
     0: 28 5b 04 00 00           jump @60
      :                          @1
     5: 28 b8 04 00 00           jump @65
      :                          @2
    10: 28 8e 06                 jump @117
      :                          @3 [@dyn 1]
    13: 95 11 48 ff              sp = sp + 0xffffffffffffff48
    17: 7b 10 b0 00              u64 [sp + 0xb0] = ra
    21: 7b 15 a8 00              u64 [sp + 0xa8] = s0
    25: 7b 16 a0 00              u64 [sp + 0xa0] = s1
    29: 64 85                    s0 = a1
    31: 80 88 24                 a1 = u32 [a1 + 0x24]
    34: 84 89 10                 a2 = a1 & 0x10
    37: 52 09 13 01              jump @14 if a2 != 0
      :                          @4
    41: 84 88 20                 a1 = a1 & 0x20
    44: 52 08 53 01              jump @17 if a1 != 0
      :                          @5
    48: 7b 15                    u64 [sp] = s0
    50: 81 79                    a2 = i32 [a0]
    52: 33 0a 0a                 a3 = 0xa
    55: 33 00 8e 00 01           ra = 0x1008e
    60: 64 95                    s0 = a2
    62: 7b 19 08                 u64 [sp + 0x8] = a2
    65: 53 29 e8 03 87 00        jump @8 if a2 <u 1000
      :                          @6
    71: 33 0a 0a                 a3 = 0xa
    74: 95 1b 29                 a4 = sp + 0x29
    77: 14 04 00 00 00 00 59 17 b7 d1 t2 = 0xd1b7175900000000
    87: 7b 14 18                 u64 [sp + 0x18] = t2
    90: 49 11 10 f0 d8 00        u64 [sp + 16] = 0xd8f0
    96: 33 04 7b 14              t2 = 0x147b
   100: 33 07 7f 96 98 00        a0 = 0x98967f
   106: 82 15 08                 s0 = u64 [sp + 0x8]
   109: 01                       fallthrough
      :                          @7
   110: 64 53                    t1 = s0
   112: 97 55 20                 s0 = s0 << 0x20
   115: 82 18 18                 a1 = u64 [sp + 0x18]
   118: d6 85 05                 s0 = s0 mulhu a1
   121: 98 55 2d                 s0 = s0 >> 0x2d
   124: 82 18 10                 a1 = u64 [sp + 0x10]
   127: ca 85 02                 t0 = s0 * a1
   130: c8 32 09                 a2 = t0 + t1
   133: 97 92 30                 t0 = a2 << 0x30
   136: 98 2c 32                 a5 = t0 >> 0x32
   139: ca 4c 0c                 a5 = a5 * t2
   142: 98 c8 10                 a1 = a5 >> 0x10
   145: 98 cc 11                 a5 = a5 >> 0x11
   148: 96 cc 9c                 a5 = a5 * 0xffffffffffffff9c
   151: c8 c9 09                 a2 = a2 + a5
   154: 84 88 fe 07              a1 = a1 & 0x7fe
   158: c8 08 08                 a1 = a1 + ra
   161: 7c 8c                    a5 = u8 [a1]
   163: 7c 88 01                 a1 = u8 [a1 + 0x1]
   166: 97 99 31                 a2 = a2 << 0x31
   169: 98 99 30                 a2 = a2 >> 0x30
   172: c8 09 09                 a2 = a2 + ra
   175: 7c 96                    s1 = u8 [a2]
   177: 7c 99 01                 a2 = u8 [a2 + 0x1]
   180: 78 bc fd                 u8 [a4 + 0xfffffffffffffffd] = a5
   183: 78 b8 fe                 u8 [a4 + 0xfffffffffffffffe] = a1
   186: 78 b6 ff                 u8 [a4 + 0xffffffffffffffff] = s1
   189: 78 b9                    u8 [a4] = a2
   191: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
   194: 95 bb fc                 a4 = a4 + 0xfffffffffffffffc
   197: ac 37 a9                 jump @7 if a0 <u t1
      :                          @8
   200: 54 15 09 39              jump @10 if s0 <=u 9
      :                          @9
   204: 97 58 30                 a1 = s0 << 0x30
   207: 98 88 32                 a1 = a1 >> 0x32
   210: 96 88 7b 14              a1 = a1 * 0x147b
   214: 98 88 11                 a1 = a1 >> 0x11
   217: 96 89 9c                 a2 = a1 * 0xffffffffffffff9c
   220: c8 59 09                 a2 = a2 + s0
   223: 97 99 31                 a2 = a2 << 0x31
   226: 98 99 30                 a2 = a2 >> 0x30
   229: 95 16 20                 s1 = sp + 0x20
   232: c8 09 09                 a2 = a2 + ra
   235: 7c 9c                    a5 = u8 [a2]
   237: c8 a6 0b                 a4 = s1 + a3
   240: 7c 99 01                 a2 = u8 [a2 + 0x1]
   243: 95 aa fe                 a3 = a3 + 0xfffffffffffffffe
   246: c8 a6 06                 s1 = s1 + a3
   249: 78 6c                    u8 [s1] = a5
   251: 78 b9 ff                 u8 [a4 + 0xffffffffffffffff] = a2
   254: 64 85                    s0 = a1
   256: 01                       fallthrough
      :                          @10
   257: 82 17                    a0 = u64 [sp]
   259: 82 18 08                 a1 = u64 [sp + 0x8]
   262: 51 08 06                 jump @12 if a1 == 0
      :                          @11
   265: 51 05 1b                 jump @13 if s0 == 0
      :                          @12
   268: 97 55 01                 s0 = s0 << 0x1
   271: 84 55 1e                 s0 = s0 & 0x1e
   274: c8 05 05                 s0 = s0 + ra
   277: 7c 59 01                 a2 = u8 [s0 + 0x1]
   280: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
   283: 95 18 20                 a1 = sp + 0x20
   286: c8 a8 08                 a1 = a1 + a3
   289: 78 89                    u8 [a1] = a2
   291: 01                       fallthrough
      :                          @13
   292: 9a ab 0a                 a4 = 0xa - a3
   295: 95 18 20                 a1 = sp + 0x20
   298: c8 8a 0a                 a3 = a3 + a1
   301: 33 08 01                 a1 = 0x1
   304: 33 09                    a2 = 0
   306: 33 00 04                 ra = 0x4
   309: 28 7b 0f                 jump @271
      :                          @14
   312: 81 7a                    a3 = i32 [a0]
   314: 33 09 7f                 a2 = 0x7f
   317: 95 17 20                 a0 = sp + 0x20
   320: 01                       fallthrough
      :                          @15
   321: 64 98                    a1 = a2
   323: 8b ab 04                 i32 a4 = a3 >> 0x4
   326: c8 79 09                 a2 = a2 + a0
   329: 84 aa 0f                 a3 = a3 & 0xf
   332: 88 ac 0a                 a5 = a3 <u 0xa
   335: 86 a6 30                 s1 = a3 | 0x30
   338: 95 aa 57                 a3 = a3 + 0x57
   341: db c6 0a                 a3 = s1 if a5 != 0
   344: 78 9a                    u8 [a2] = a3
   346: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
   349: 64 ba                    a3 = a4
   351: 52 0b e2                 jump @15 if a4 != 0
      :                          @16
   354: 95 88 01                 a1 = a1 + 0x1
   357: c8 97 07                 a0 = a0 + a2
   360: 95 7a 01                 a3 = a0 + 0x1
   363: 9a 8b 81 00              a4 = 0x81 - a1
   367: 33 08 8c 00 01           a1 = 0x1008c
   372: 33 09 02                 a2 = 0x2
   375: 64 57                    a0 = s0
   377: 33 00 04                 ra = 0x4
   380: 28 34 0f                 jump @271
      :                          @17
   383: 81 7a                    a3 = i32 [a0]
   385: 33 09 7f                 a2 = 0x7f
   388: 95 17 20                 a0 = sp + 0x20
   391: 01                       fallthrough
      :                          @18
   392: 64 98                    a1 = a2
   394: 8b ab 04                 i32 a4 = a3 >> 0x4
   397: c8 79 09                 a2 = a2 + a0
   400: 84 aa 0f                 a3 = a3 & 0xf
   403: 88 ac 0a                 a5 = a3 <u 0xa
   406: 86 a6 30                 s1 = a3 | 0x30
   409: 95 aa 37                 a3 = a3 + 0x37
   412: db c6 0a                 a3 = s1 if a5 != 0
   415: 78 9a                    u8 [a2] = a3
   417: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
   420: 64 ba                    a3 = a4
   422: 52 0b e2                 jump @18 if a4 != 0
      :                          @19
   425: 95 88 01                 a1 = a1 + 0x1
   428: c8 97 07                 a0 = a0 + a2
   431: 95 7a 01                 a3 = a0 + 0x1
   434: 9a 8b 81 00              a4 = 0x81 - a1
   438: 33 08 8c 00 01           a1 = 0x1008c
   443: 33 09 02                 a2 = 0x2
   446: 64 57                    a0 = s0
   448: 50 10 04 f0 0e           ra = 4, jump @271
      :                          @20 [@dyn 2]
   453: 82 10 b0 00              ra = u64 [sp + 0xb0]
   457: 82 15 a8 00              s0 = u64 [sp + 0xa8]
   461: 82 16 a0 00              s1 = u64 [sp + 0xa0]
   465: 95 11 b8 00              sp = sp + 0xb8
   469: 32 00                    ret
      :                          @21 [@dyn 3]
   471: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   475: 7b 10 80 00              u64 [sp + 0x80] = ra
   479: 80 89 24                 a2 = u32 [a1 + 0x24]
   482: 84 9a 10                 a3 = a2 & 0x10
   485: 52 0a 14                 jump @24 if a3 != 0
      :                          @22
   488: 84 99 20                 a2 = a2 & 0x20
   491: 52 09 46                 jump @27 if a2 != 0
      :                          @23
   494: 82 10 80 00              ra = u64 [sp + 0x80]
   498: 95 11 88 00              sp = sp + 0x88
   502: 28 9d 0d                 jump @261
      :                          @24
   505: 82 7b                    a4 = u64 [a0]
   507: 33 0a 7f                 a3 = 0x7f
   510: 64 12                    t0 = sp
   512: 01                       fallthrough
      :                          @25
   513: 64 a9                    a2 = a3
   515: 98 bc 04                 a5 = a4 >> 0x4
   518: c8 a2 03                 t1 = t0 + a3
   521: 84 bb 0f                 a4 = a4 & 0xf
   524: 88 b7 0a                 a0 = a4 <u 0xa
   527: 86 ba 30                 a3 = a4 | 0x30
   530: 95 bb 57                 a4 = a4 + 0x57
   533: db 7a 0b                 a4 = a3 if a0 != 0
   536: 78 3b                    u8 [t1] = a4
   538: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
   541: 64 cb                    a4 = a5
   543: 52 0c e2                 jump @25 if a5 != 0
      :                          @26
   546: 95 99 01                 a2 = a2 + 0x1
   549: c8 2a 0a                 a3 = a3 + t0
   552: 95 aa 01                 a3 = a3 + 0x1
   555: 9a 9b 81 00              a4 = 0x81 - a2
   559: 28 39                    jump @30
      :                          @27
   561: 82 7b                    a4 = u64 [a0]
   563: 33 0a 7f                 a3 = 0x7f
   566: 64 12                    t0 = sp
   568: 01                       fallthrough
      :                          @28
   569: 64 a9                    a2 = a3
   571: 98 bc 04                 a5 = a4 >> 0x4
   574: c8 a2 03                 t1 = t0 + a3
   577: 84 bb 0f                 a4 = a4 & 0xf
   580: 88 b7 0a                 a0 = a4 <u 0xa
   583: 86 ba 30                 a3 = a4 | 0x30
   586: 95 bb 37                 a4 = a4 + 0x37
   589: db 7a 0b                 a4 = a3 if a0 != 0
   592: 78 3b                    u8 [t1] = a4
   594: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
   597: 64 cb                    a4 = a5
   599: 52 0c e2                 jump @28 if a5 != 0
      :                          @29
   602: 95 99 01                 a2 = a2 + 0x1
   605: c8 2a 0a                 a3 = a3 + t0
   608: 95 aa 01                 a3 = a3 + 0x1
   611: 9a 9b 81 00              a4 = 0x81 - a2
   615: 01                       fallthrough
      :                          @30
   616: 33 09 02                 a2 = 0x2
   619: 64 87                    a0 = a1
   621: 33 08 8c 00 01           a1 = 0x1008c
   626: 50 10 08 3e 0e           ra = 8, jump @271
      :                          @31 [@dyn 4]
   631: 82 10 80 00              ra = u64 [sp + 0x80]
   635: 95 11 88 00              sp = sp + 0x88
   639: 32 00                    ret
      :                          @32 [@dyn 5]
   641: 95 11 68 ff              sp = sp + 0xffffffffffffff68
   645: 7b 10 90 00              u64 [sp + 0x90] = ra
   649: 7b 15 88 00              u64 [sp + 0x88] = s0
   653: 7b 16 80 00              u64 [sp + 0x80] = s1
   657: 82 89 38                 a2 = u64 [a1 + 0x38]
   660: 7b 18 18                 u64 [sp + 0x18] = a1
   663: 82 8a 30                 a3 = u64 [a1 + 0x30]
   666: 82 9b 18                 a4 = u64 [a2 + 0x18]
   669: 64 75                    s0 = a0
   671: 33 08 81 00 01           a1 = 0x10081
   676: 33 09 01                 a2 = 0x1
   679: 64 a7                    a0 = a3
   681: b4 b0 01 0c              ra = 12, jump [a4]
      :                          @33 [@dyn 6]
   685: 33 08 30 02 01           a1 = 0x10230
   690: 7b 18 10                 u64 [sp + 0x10] = a1
   693: 33 09 01                 a2 = 0x1
   696: 52 07 90 00              jump @42 if a0 != 0
      :                          @34
   700: 82 18 18                 a1 = u64 [sp + 0x18]
   703: 7c 87 24                 a0 = u8 [a1 + 0x24]
   706: 84 77 04                 a0 = a0 & 0x4
   709: 52 07 0e                 jump @37 if a0 != 0
      :                          @35
   712: 64 57                    a0 = s0
   714: 50 10 0e 61 16           ra = 14, jump @456
      :                          @36 [@dyn 7]
   719: 64 79                    a2 = a0
   721: 28 77                    jump @42
      :                          @37
   723: 82 86 38                 s1 = u64 [a1 + 0x38]
   726: 82 87 30                 a0 = u64 [a1 + 0x30]
   729: 82 6a 18                 a3 = u64 [s1 + 0x18]
   732: 33 08 8a 00 01           a1 = 0x1008a
   737: 33 09 01                 a2 = 0x1
   740: 7b 17 08                 u64 [sp + 0x8] = a0
   743: b4 a0 01 10              ra = 16, jump [a3]
      :                          @38 [@dyn 8]
   747: 33 09 01                 a2 = 0x1
   750: 52 07 5a                 jump @42 if a0 != 0
      :                          @39
   753: 82 17 08                 a0 = u64 [sp + 0x8]
   756: 7b 17 20                 u64 [sp + 0x20] = a0
   759: 7b 16 28                 u64 [sp + 0x28] = s1
   762: 95 17 3f                 a0 = sp + 0x3f
   765: 7b 17 30                 u64 [sp + 0x30] = a0
   768: 82 1b 18                 a4 = u64 [sp + 0x18]
   771: 82 b7                    a0 = u64 [a4]
   773: 82 b8 08                 a1 = u64 [a4 + 0x8]
   776: 82 b9 10                 a2 = u64 [a4 + 0x10]
   779: 82 ba 18                 a3 = u64 [a4 + 0x18]
   782: 7b 17 40                 u64 [sp + 0x40] = a0
   785: 7b 18 48                 u64 [sp + 0x48] = a1
   788: 7b 19 50                 u64 [sp + 0x50] = a2
   791: 7b 1a 58                 u64 [sp + 0x58] = a3
   794: 82 b7 20                 a0 = u64 [a4 + 0x20]
   797: 82 b8 28                 a1 = u64 [a4 + 0x28]
   800: 46 11 3f 01              u8 [sp + 63] = 0x1
   804: 7b 17 60                 u64 [sp + 0x60] = a0
   807: 7b 18 68                 u64 [sp + 0x68] = a1
   810: 95 17 20                 a0 = sp + 0x20
   813: 7b 17 70                 u64 [sp + 0x70] = a0
   816: 82 17 10                 a0 = u64 [sp + 0x10]
   819: 7b 17 78                 u64 [sp + 0x78] = a0
   822: 95 18 40                 a1 = sp + 0x40
   825: 64 57                    a0 = s0
   827: 50 10 12 f0 15           ra = 18, jump @456
      :                          @40 [@dyn 9]
   832: 51 07 03 01              jump @58 if a0 == 0
      :                          @41
   836: 33 09 01                 a2 = 0x1
   839: 01                       fallthrough
      :                          @42
   840: 95 55 01                 s0 = s0 + 0x1
   843: 33 06 7f                 s1 = 0x7f
   846: 33 07 86 00 01           a0 = 0x10086
   851: 7b 17 08                 u64 [sp + 0x8] = a0
   854: 33 07 88 00 01           a0 = 0x10088
   859: 7b 17                    u64 [sp] = a0
   861: 82 18 18                 a1 = u64 [sp + 0x18]
   864: 28 13                    jump @45
      :                          @43
   866: 82 18 18                 a1 = u64 [sp + 0x18]
   869: 33 09 01                 a2 = 0x1
   872: 01                       fallthrough
      :                          @44
   873: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
   876: 95 55 01                 s0 = s0 + 0x1
   879: 51 06 a7 00              jump @55 if s1 == 0
      :                          @45
   883: 84 97 01                 a0 = a2 & 0x1
   886: 33 09 01                 a2 = 0x1
   889: 52 07 f0                 jump @44 if a0 != 0
      :                          @46
   892: 7c 89 24                 a2 = u8 [a1 + 0x24]
   895: 82 87 30                 a0 = u64 [a1 + 0x30]
   898: 82 8a 38                 a3 = u64 [a1 + 0x38]
   901: 84 99 04                 a2 = a2 & 0x4
   904: 52 09 27                 jump @51 if a2 != 0
      :                          @47
   907: 82 aa 18                 a3 = u64 [a3 + 0x18]
   910: 33 09 02                 a2 = 0x2
   913: 82 18 08                 a1 = u64 [sp + 0x8]
   916: b4 a0 01 14              ra = 20, jump [a3]
      :                          @48 [@dyn 10]
   920: 82 18 18                 a1 = u64 [sp + 0x18]
   923: 33 09 01                 a2 = 0x1
   926: 52 07 cb                 jump @44 if a0 != 0
      :                          @49
   929: 64 57                    a0 = s0
   931: 50 10 16 88 15           ra = 22, jump @456
      :                          @50 [@dyn 11]
   936: 82 18 18                 a1 = u64 [sp + 0x18]
   939: 64 79                    a2 = a0
   941: 28 bc                    jump @44
      :                          @51
   943: 7b 17 20                 u64 [sp + 0x20] = a0
   946: 7b 1a 28                 u64 [sp + 0x28] = a3
   949: 82 87                    a0 = u64 [a1]
   951: 82 8b 08                 a4 = u64 [a1 + 0x8]
   954: 82 89 10                 a2 = u64 [a1 + 0x10]
   957: 82 8a 18                 a3 = u64 [a1 + 0x18]
   960: 7b 17 40                 u64 [sp + 0x40] = a0
   963: 7b 1b 48                 u64 [sp + 0x48] = a4
   966: 7b 19 50                 u64 [sp + 0x50] = a2
   969: 7b 1a 58                 u64 [sp + 0x58] = a3
   972: 82 87 20                 a0 = u64 [a1 + 0x20]
   975: 82 88 28                 a1 = u64 [a1 + 0x28]
   978: 46 11 3f 01              u8 [sp + 63] = 0x1
   982: 95 19 3f                 a2 = sp + 0x3f
   985: 7b 19 30                 u64 [sp + 0x30] = a2
   988: 7b 17 60                 u64 [sp + 0x60] = a0
   991: 7b 18 68                 u64 [sp + 0x68] = a1
   994: 95 17 20                 a0 = sp + 0x20
   997: 7b 17 70                 u64 [sp + 0x70] = a0
  1000: 82 17 10                 a0 = u64 [sp + 0x10]
  1003: 7b 17 78                 u64 [sp + 0x78] = a0
  1006: 95 18 40                 a1 = sp + 0x40
  1009: 64 57                    a0 = s0
  1011: 50 10 18 38 15           ra = 24, jump @456
      :                          @52 [@dyn 12]
  1016: 52 07 6a ff              jump @43 if a0 != 0
      :                          @53
  1020: 82 18 78                 a1 = u64 [sp + 0x78]
  1023: 82 17 70                 a0 = u64 [sp + 0x70]
  1026: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1029: 33 09 02                 a2 = 0x2
  1032: 82 18                    a1 = u64 [sp]
  1034: b4 a0 01 1a              ra = 26, jump [a3]
      :                          @54 [@dyn 13]
  1038: 64 79                    a2 = a0
  1040: 82 18 18                 a1 = u64 [sp + 0x18]
  1043: 28 56 ff                 jump @44
      :                          @55
  1046: 33 07 01                 a0 = 0x1
  1049: 52 09 18                 jump @57 if a2 != 0
      :                          @56
  1052: 82 89 38                 a2 = u64 [a1 + 0x38]
  1055: 82 87 30                 a0 = u64 [a1 + 0x30]
  1058: 82 9a 18                 a3 = u64 [a2 + 0x18]
  1061: 33 08 8b 00 01           a1 = 0x1008b
  1066: 33 09 01                 a2 = 0x1
  1069: b4 a0 01 1c              ra = 28, jump [a3]
      :                          @57 [@dyn 14]
  1073: 82 10 90 00              ra = u64 [sp + 0x90]
  1077: 82 15 88 00              s0 = u64 [sp + 0x88]
  1081: 82 16 80 00              s1 = u64 [sp + 0x80]
  1085: 95 11 98 00              sp = sp + 0x98
  1089: 32 00                    ret
      :                          @58
  1091: 82 18 78                 a1 = u64 [sp + 0x78]
  1094: 82 17 70                 a0 = u64 [sp + 0x70]
  1097: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1100: 33 08 88 00 01           a1 = 0x10088
  1105: 33 09 02                 a2 = 0x2
  1108: b4 a0 01 1e              ra = 30, jump [a3]
      :                          @59 [@dyn 15]
  1112: 28 77 fe                 jump @36
      :                          @60 [export #0: 'refine']
  1115: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  1118: 7b 10 18                 u64 [sp + 0x18] = ra
  1121: 7b 15 10                 u64 [sp + 0x10] = s0
  1124: 48 11 08                 u32 [sp + 8] = 0
  1127: 49 01                    u64 [sp + 0] = 0
  1129: 64 17                    a0 = sp
  1131: 33 09 0c                 a2 = 0xc
  1134: 33 0a 05                 a3 = 0x5
  1137: 33 08                    a1 = 0
  1139: 33 0b                    a4 = 0
  1141: 33 0c                    a5 = 0
  1143: 0a 12                    ecalli 18 // 'fetch'
  1145: 01                       fallthrough
      :                          @61
  1146: 51 17 ff 1c              jump @63 if a0 == 4294967295
      :                          @62
  1150: 81 17                    a0 = i32 [sp]
  1152: 81 18 04                 a1 = i32 [sp + 0x4]
  1155: 81 19 08                 a2 = i32 [sp + 0x8]
  1158: 95 77 01                 a0 = a0 + 0x1
  1161: c8 89 09                 a2 = a2 + a1
  1164: 7a 17                    u32 [sp] = a0
  1166: 7a 19 04                 u32 [sp + 0x4] = a2
  1169: 7a 18 08                 u32 [sp + 0x8] = a1
  1172: 28 12                    jump @64
      :                          @63
  1174: 14 07 01 00 00 00 01 00 00 00 a0 = 0x100000001
  1184: 7b 17                    u64 [sp] = a0
  1186: 48 11 08                 u32 [sp + 8] = 0
  1189: 01                       fallthrough
      :                          @64
  1190: 64 17                    a0 = sp
  1192: 33 08 0c                 a1 = 0xc
  1195: 0a 13                    ecalli 19 // 'export'
  1197: 64 17                    a0 = sp
  1199: 33 08 0c                 a1 = 0xc
  1202: 82 10 18                 ra = u64 [sp + 0x18]
  1205: 82 15 10                 s0 = u64 [sp + 0x10]
  1208: 95 11 20                 sp = sp + 0x20
  1211: 32 00                    ret
      :                          @65 [export #1: 'accumulate']
  1213: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  1216: 7b 10 28                 u64 [sp + 0x28] = ra
  1219: 7b 15 20                 u64 [sp + 0x20] = s0
  1222: 7b 16 18                 u64 [sp + 0x18] = s1
  1225: 33 09 08                 a2 = 0x8
  1228: 33 05 00 00 01           s0 = 0x10000
  1233: ae 98 07                 jump @67 if a1 >=u a2
      :                          @66
  1236: 33 08                    a1 = 0
  1238: 28 6e                    jump @82
      :                          @67
  1240: 95 86 f8                 s1 = a1 + 0xfffffffffffffff8
  1243: 95 77 08                 a0 = a0 + 0x8
  1246: 51 06 44                 jump @77 if s1 == 0
      :                          @68
  1249: 7d 78                    a1 = i8 [a0]
  1251: 33 05 01                 s0 = 0x1
  1254: 59 08 3f                 jump @78 if a1 >=s 0
      :                          @69
  1257: 84 89 ff 00              a2 = a1 & 0xff
  1261: 33 05 02                 s0 = 0x2
  1264: 53 29 c0 00 2d           jump @75 if a2 <u 192
      :                          @70
  1269: 33 05 03                 s0 = 0x3
  1272: 53 29 e0 00 25           jump @75 if a2 <u 224
      :                          @71
  1277: 33 05 04                 s0 = 0x4
  1280: 53 29 f0 00 1d           jump @75 if a2 <u 240
      :                          @72
  1285: 33 05 05                 s0 = 0x5
  1288: 53 29 f8 00 15           jump @75 if a2 <u 248
      :                          @73
  1293: 33 05 06                 s0 = 0x6
  1296: 53 29 fc 00 0d           jump @75 if a2 <u 252
      :                          @74
  1301: 88 98 fe 00              a1 = a2 <u 0xfe
  1305: 9a 85 08                 s0 = 0x8 - a1
  1308: 01                       fallthrough
      :                          @75
  1309: ae 56 08                 jump @78 if s1 >=u s0
      :                          @76
  1312: 28 1c                    jump @81
      :                          @77
  1314: 33 05                    s0 = 0
  1316: 01                       fallthrough
      :                          @78
  1317: 7b 17 08                 u64 [sp + 0x8] = a0
  1320: 64 58                    a1 = s0
  1322: 50 10 20 37 12           ra = 32, jump @415
      :                          @79 [@dyn 16]
  1327: 51 07 0d                 jump @81 if a0 == 0
      :                          @80
  1330: e4 56 07                 a0 = maxu(s1, s0)
  1333: c9 57 07                 a0 = a0 - s0
  1336: 55 17 60 1c              jump @83 if a0 >=u 96
      :                          @81
  1340: 33 08                    a1 = 0
  1342: 33 05 00 00 01           s0 = 0x10000
  1347: 01                       fallthrough
      :                          @82
  1348: 64 57                    a0 = s0
  1350: 82 10 28                 ra = u64 [sp + 0x28]
  1353: 82 15 20                 s0 = u64 [sp + 0x20]
  1356: 82 16 18                 s1 = u64 [sp + 0x18]
  1359: 95 11 30                 sp = sp + 0x30
  1362: 32 00                    ret
      :                          @83
  1364: 82 18 08                 a1 = u64 [sp + 0x8]
  1367: c8 85 05                 s0 = s0 + a1
  1370: 95 7a a0                 a3 = a0 + 0xffffffffffffffa0
  1373: 95 57 60                 a0 = s0 + 0x60
  1376: 7b 17 08                 u64 [sp + 0x8] = a0
  1379: 51 0a 55                 jump @94 if a3 == 0
      :                          @84
  1382: 7d 78                    a1 = i8 [a0]
  1384: 33 06 01                 s1 = 0x1
  1387: 33 05 00 00 01           s0 = 0x10000
  1392: 59 08 3b                 jump @92 if a1 >=s 0
      :                          @85
  1395: 84 89 ff 00              a2 = a1 & 0xff
  1399: 33 06 02                 s1 = 0x2
  1402: 53 29 c0 00 2d           jump @91 if a2 <u 192
      :                          @86
  1407: 33 06 03                 s1 = 0x3
  1410: 53 29 e0 00 25           jump @91 if a2 <u 224
      :                          @87
  1415: 33 06 04                 s1 = 0x4
  1418: 53 29 f0 00 1d           jump @91 if a2 <u 240
      :                          @88
  1423: 33 06 05                 s1 = 0x5
  1426: 53 29 f8 00 15           jump @91 if a2 <u 248
      :                          @89
  1431: 33 06 06                 s1 = 0x6
  1434: 53 29 fc 00 0d           jump @91 if a2 <u 252
      :                          @90
  1439: 88 98 fe 00              a1 = a2 <u 0xfe
  1443: 9a 86 08                 s1 = 0x8 - a1
  1446: 01                       fallthrough
      :                          @91
  1447: ac 6a ee 00              jump @114 if a3 <u s1
      :                          @92
  1451: 64 68                    a1 = s1
  1453: 7b 1a                    u64 [sp] = a3
  1455: 50 10 22 b2 11           ra = 34, jump @415
      :                          @93 [@dyn 17]
  1460: 82 1a                    a3 = u64 [sp]
  1462: 28 0c                    jump @95
      :                          @94
  1464: 33 06                    s1 = 0
  1466: 33 07                    a0 = 0
  1468: 33 05 00 00 01           s0 = 0x10000
  1473: 01                       fallthrough
      :                          @95
  1474: e4 6a 08                 a1 = maxu(a3, s1)
  1477: c9 68 08                 a1 = a1 - s1
  1480: e4 78 08                 a1 = maxu(a1, a0)
  1483: c9 78 08                 a1 = a1 - a0
  1486: 33 09 21                 a2 = 0x21
  1489: ac 98 03 ff              jump @66 if a1 <u a2
      :                          @96
  1493: 82 19 08                 a2 = u64 [sp + 0x8]
  1496: c8 96 06                 s1 = s1 + a2
  1499: c8 67 07                 a0 = a0 + s1
  1502: 7c 79 20                 a2 = u8 [a0 + 0x20]
  1505: 51 09 19                 jump @98 if a2 == 0
      :                          @97
  1508: 46 11 17                 u8 [sp + 23] = 0
  1511: 95 17 17                 a0 = sp + 0x17
  1514: 33 08 01                 a1 = 0x1
  1517: 33 09                    a2 = 0
  1519: 33 0a                    a3 = 0
  1521: 0a 03                    ecalli 3 // 'write'
  1523: 33 09                    a2 = 0
  1525: 33 06                    s1 = 0
  1527: 28 87 00                 jump @112
      :                          @98
  1530: 95 89 df                 a2 = a1 + 0xffffffffffffffdf
  1533: 95 76 21                 s1 = a0 + 0x21
  1536: 51 09 57                 jump @109 if a2 == 0
      :                          @99
  1539: 7d 67                    a0 = i8 [s1]
  1541: 33 05 01                 s0 = 0x1
  1544: 59 07 3a                 jump @107 if a0 >=s 0
      :                          @100
  1547: 84 77 ff 00              a0 = a0 & 0xff
  1551: 33 05 02                 s0 = 0x2
  1554: 53 27 c0 00 2d           jump @106 if a0 <u 192
      :                          @101
  1559: 33 05 03                 s0 = 0x3
  1562: 53 27 e0 00 25           jump @106 if a0 <u 224
      :                          @102
  1567: 33 05 04                 s0 = 0x4
  1570: 53 27 f0 00 1d           jump @106 if a0 <u 240
      :                          @103
  1575: 33 05 05                 s0 = 0x5
  1578: 53 27 f8 00 15           jump @106 if a0 <u 248
      :                          @104
  1583: 33 05 06                 s0 = 0x6
  1586: 53 27 fc 00 0d           jump @106 if a0 <u 252
      :                          @105
  1591: 88 77 fe 00              a0 = a0 <u 0xfe
  1595: 9a 75 08                 s0 = 0x8 - a0
  1598: 01                       fallthrough
      :                          @106
  1599: ac 59 58                 jump @116 if a2 <u s0
      :                          @107
  1602: 64 67                    a0 = s1
  1604: 64 58                    a1 = s0
  1606: 7b 16 08                 u64 [sp + 0x8] = s1
  1609: 64 96                    s1 = a2
  1611: 50 10 24 16 11           ra = 36, jump @415
      :                          @108 [@dyn 18]
  1616: 64 69                    a2 = s1
  1618: 82 16 08                 s1 = u64 [sp + 0x8]
  1621: 28 07                    jump @110
      :                          @109
  1623: 33 05                    s0 = 0
  1625: 33 07                    a0 = 0
  1627: 01                       fallthrough
      :                          @110
  1628: c8 56 06                 s1 = s1 + s0
  1631: e4 59 08                 a1 = maxu(a2, s0)
  1634: c9 58 08                 a1 = a1 - s0
  1637: e6 87 05                 s0 = minu(a0, a1)
  1640: 46 11 17                 u8 [sp + 23] = 0
  1643: 95 17 17                 a0 = sp + 0x17
  1646: 33 08 01                 a1 = 0x1
  1649: 64 69                    a2 = s1
  1651: 64 5a                    a3 = s0
  1653: 0a 03                    ecalli 3 // 'write'
  1655: 01                       fallthrough
      :                          @111
  1656: 64 59                    a2 = s0
  1658: 55 15 21 1c              jump @115 if s0 >=u 33
      :                          @112
  1662: 33 05 01 00 03           s0 = 0x30001
  1667: 33 07 01 00 03           a0 = 0x30001
  1672: 64 68                    a1 = s1
  1674: 50 10 26 bc 13           ra = 38, jump @473
      :                          @113 [@dyn 19]
  1679: 33 08 20                 a1 = 0x20
  1682: 28 b2 fe                 jump @82
      :                          @114
  1685: 00                       trap
      :                          @115
  1686: 00                       trap
      :                          @116
  1687: 00                       trap
      :                          @117 [export #2: 'on_transfer']
  1688: 95 11 88 fd              sp = sp + 0xfffffffffffffd88
  1692: 7b 10 70 02              u64 [sp + 0x270] = ra
  1696: 7b 15 68 02              u64 [sp + 0x268] = s0
  1700: 7b 16 60 02              u64 [sp + 0x260] = s1
  1704: 33 09                    a2 = 0
  1706: 7b 17 28                 u64 [sp + 0x28] = a0
  1709: 95 77 08                 a0 = a0 + 0x8
  1712: 95 8b f8                 a4 = a1 + 0xfffffffffffffff8
  1715: 33 0c 08                 a5 = 0x8
  1718: 49 11 20 ff ef           u64 [sp + 32] = 0xffffffffffffefff
  1723: 33 0a 02                 a3 = 0x2
  1726: 7b 1a 08                 u64 [sp + 0x8] = a3
  1729: 33 0a 06                 a3 = 0x6
  1732: 7b 1a 18                 u64 [sp + 0x18] = a3
  1735: 33 0a 0a                 a3 = 0xa
  1738: 7b 1a                    u64 [sp] = a3
  1740: 7b 18 10                 u64 [sp + 0x10] = a1
  1743: 7b 17 70                 u64 [sp + 0x70] = a0
  1746: 7b 1b 68                 u64 [sp + 0x68] = a4
  1749: ac c8 92 04              jump @161 if a1 <u a5
      :                          @118
  1753: 82 18 28                 a1 = u64 [sp + 0x28]
  1756: 7c 8a                    a3 = u8 [a1]
  1758: 7b 1a 48                 u64 [sp + 0x48] = a3
  1761: 7c 86 01                 s1 = u8 [a1 + 0x1]
  1764: 7c 8a 02                 a3 = u8 [a1 + 0x2]
  1767: 7b 1a 38                 u64 [sp + 0x38] = a3
  1770: 7c 8a 03                 a3 = u8 [a1 + 0x3]
  1773: 7b 1a 30                 u64 [sp + 0x30] = a3
  1776: 7c 8a 04                 a3 = u8 [a1 + 0x4]
  1779: 7b 1a 60                 u64 [sp + 0x60] = a3
  1782: 7c 8a 05                 a3 = u8 [a1 + 0x5]
  1785: 7b 1a 40                 u64 [sp + 0x40] = a3
  1788: 7c 8a 06                 a3 = u8 [a1 + 0x6]
  1791: 7b 1a 58                 u64 [sp + 0x58] = a3
  1794: 7c 88 07                 a1 = u8 [a1 + 0x7]
  1797: 7b 18 50                 u64 [sp + 0x50] = a1
  1800: 51 0b 4f                 jump @128 if a4 == 0
      :                          @119
  1803: 7d 7a                    a3 = i8 [a0]
  1805: 33 08 01                 a1 = 0x1
  1808: 59 0a 4a                 jump @129 if a3 >=s 0
      :                          @120
  1811: 84 a5 ff 00              s0 = a3 & 0xff
  1815: 33 08 02                 a1 = 0x2
  1818: 33 0a c0 00              a3 = 0xc0
  1822: ac a5 33                 jump @126 if s0 <u a3
      :                          @121
  1825: 33 08 03                 a1 = 0x3
  1828: 33 0a e0 00              a3 = 0xe0
  1832: ac a5 29                 jump @126 if s0 <u a3
      :                          @122
  1835: 33 08 04                 a1 = 0x4
  1838: 33 0a f0 00              a3 = 0xf0
  1842: ac a5 1f                 jump @126 if s0 <u a3
      :                          @123
  1845: 33 08 05                 a1 = 0x5
  1848: 33 0a f8 00              a3 = 0xf8
  1852: ac a5 15                 jump @126 if s0 <u a3
      :                          @124
  1855: 33 08 06                 a1 = 0x6
  1858: 33 0a fc 00              a3 = 0xfc
  1862: ac a5 0b                 jump @126 if s0 <u a3
      :                          @125
  1865: 88 58 fe 00              a1 = s0 <u 0xfe
  1869: 9a 88 08                 a1 = 0x8 - a1
  1872: 01                       fallthrough
      :                          @126
  1873: ae 8b 09                 jump @129 if a4 >=u a1
      :                          @127
  1876: 28 13 04                 jump @161
      :                          @128
  1879: 33 08                    a1 = 0
  1881: 01                       fallthrough
      :                          @129
  1882: 7b 19 78                 u64 [sp + 0x78] = a2
  1885: 64 85                    s0 = a1
  1887: 50 10 28 02 10           ra = 40, jump @415
      :                          @130 [@dyn 20]
  1892: 33 03 98 00              t1 = 0x98
  1896: 33 02 08                 t0 = 0x8
  1899: 82 1c 68                 a5 = u64 [sp + 0x68]
  1902: 82 14 70                 t2 = u64 [sp + 0x70]
  1905: 82 1b 78                 a4 = u64 [sp + 0x78]
  1908: ae 7b f3 03              jump @161 if a4 >=u a0
      :                          @131
  1912: 97 66 08                 s1 = s1 << 0x8
  1915: 82 18 48                 a1 = u64 [sp + 0x48]
  1918: d4 68 08                 a1 = a1 | s1
  1921: 82 19 38                 a2 = u64 [sp + 0x38]
  1924: 97 99 10                 a2 = a2 << 0x10
  1927: 82 1a 30                 a3 = u64 [sp + 0x30]
  1930: 97 aa 18                 a3 = a3 << 0x18
  1933: d4 a9 09                 a2 = a2 | a3
  1936: d4 89 06                 s1 = a2 | a1
  1939: 82 18 40                 a1 = u64 [sp + 0x40]
  1942: 97 88 08                 a1 = a1 << 0x8
  1945: 82 19 60                 a2 = u64 [sp + 0x60]
  1948: d4 98 08                 a1 = a1 | a2
  1951: 82 19 58                 a2 = u64 [sp + 0x58]
  1954: 97 99 10                 a2 = a2 << 0x10
  1957: 82 1a 50                 a3 = u64 [sp + 0x50]
  1960: 97 aa 18                 a3 = a3 << 0x18
  1963: d4 a9 09                 a2 = a2 | a3
  1966: d4 89 0a                 a3 = a2 | a1
  1969: e4 5c 08                 a1 = maxu(a5, s0)
  1972: c9 58 08                 a1 = a1 - s0
  1975: c8 45 05                 s0 = s0 + t2
  1978: 64 b9                    a2 = a4
  1980: 01                       fallthrough
      :                          @132
  1981: ac 28 aa 03              jump @161 if a1 <u t0
      :                          @133
  1985: ac 38 a6 03              jump @161 if a1 <u t1
      :                          @134
  1989: 51 09 17                 jump @137 if a2 == 0
      :                          @135
  1992: 95 88 68 ff              a1 = a1 + 0xffffffffffffff68
  1996: 95 55 98 00              s0 = s0 + 0x98
  2000: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2003: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  2006: 52 07 e7                 jump @132 if a0 != 0
      :                          @136
  2009: 28 8e 03                 jump @161
      :                          @137
  2012: 7c 57 01                 a0 = u8 [s0 + 0x1]
  2015: 7c 58                    a1 = u8 [s0]
  2017: 7c 59 02                 a2 = u8 [s0 + 0x2]
  2020: 7b 1a 60                 u64 [sp + 0x60] = a3
  2023: 7d 5a 03                 a3 = i8 [s0 + 0x3]
  2026: 97 77 08                 a0 = a0 << 0x8
  2029: d4 87 07                 a0 = a0 | a1
  2032: 97 99 10                 a2 = a2 << 0x10
  2035: 97 aa 18                 a3 = a3 << 0x18
  2038: d4 a9 09                 a2 = a2 | a3
  2041: d4 97 07                 a0 = a0 | a2
  2044: 7b 17 58                 u64 [sp + 0x58] = a0
  2047: 7c 57 05                 a0 = u8 [s0 + 0x5]
  2050: 7c 58 04                 a1 = u8 [s0 + 0x4]
  2053: 7c 59 06                 a2 = u8 [s0 + 0x6]
  2056: 7d 5a 07                 a3 = i8 [s0 + 0x7]
  2059: 97 77 08                 a0 = a0 << 0x8
  2062: d4 87 07                 a0 = a0 | a1
  2065: 97 99 10                 a2 = a2 << 0x10
  2068: 97 aa 18                 a3 = a3 << 0x18
  2071: d4 a9 09                 a2 = a2 | a3
  2074: 7c 58 0f                 a1 = u8 [s0 + 0xf]
  2077: 7c 5a 0e                 a3 = u8 [s0 + 0xe]
  2080: d4 97 07                 a0 = a0 | a2
  2083: 7b 17 50                 u64 [sp + 0x50] = a0
  2086: 7c 57 0d                 a0 = u8 [s0 + 0xd]
  2089: 97 88 10                 a1 = a1 << 0x10
  2092: 97 aa 08                 a3 = a3 << 0x8
  2095: d4 a8 08                 a1 = a1 | a3
  2098: 7c 59 0c                 a2 = u8 [s0 + 0xc]
  2101: 7c 5a 0b                 a3 = u8 [s0 + 0xb]
  2104: d4 87 07                 a0 = a0 | a1
  2107: 97 77 10                 a0 = a0 << 0x10
  2110: 97 99 08                 a2 = a2 << 0x8
  2113: d4 a9 09                 a2 = a2 | a3
  2116: 7c 58 0a                 a1 = u8 [s0 + 0xa]
  2119: 7c 5a 09                 a3 = u8 [s0 + 0x9]
  2122: d4 97 07                 a0 = a0 | a2
  2125: 97 77 10                 a0 = a0 << 0x10
  2128: 97 88 08                 a1 = a1 << 0x8
  2131: d4 a8 08                 a1 = a1 | a3
  2134: d4 87 07                 a0 = a0 | a1
  2137: 7c 58 08                 a1 = u8 [s0 + 0x8]
  2140: 97 77 08                 a0 = a0 << 0x8
  2143: 7c 59 97 00              a2 = u8 [s0 + 0x97]
  2147: 7c 5a 96 00              a3 = u8 [s0 + 0x96]
  2151: d4 87 07                 a0 = a0 | a1
  2154: 7b 17 48                 u64 [sp + 0x48] = a0
  2157: 7c 57 95 00              a0 = u8 [s0 + 0x95]
  2161: 97 99 10                 a2 = a2 << 0x10
  2164: 97 aa 08                 a3 = a3 << 0x8
  2167: d4 a9 09                 a2 = a2 | a3
  2170: d4 97 07                 a0 = a0 | a2
  2173: 7c 59 94 00              a2 = u8 [s0 + 0x94]
  2177: 7c 5a 93 00              a3 = u8 [s0 + 0x93]
  2181: 95 58 10                 a1 = s0 + 0x10
  2184: 97 77 10                 a0 = a0 << 0x10
  2187: 97 99 08                 a2 = a2 << 0x8
  2190: d4 a9 09                 a2 = a2 | a3
  2193: 7c 5a 92 00              a3 = u8 [s0 + 0x92]
  2197: d4 97 07                 a0 = a0 | a2
  2200: 7c 59 91 00              a2 = u8 [s0 + 0x91]
  2204: 97 77 10                 a0 = a0 << 0x10
  2207: 97 aa 08                 a3 = a3 << 0x8
  2210: 7c 5b 90 00              a4 = u8 [s0 + 0x90]
  2214: d4 a9 09                 a2 = a2 | a3
  2217: d4 97 07                 a0 = a0 | a2
  2220: 97 77 08                 a0 = a0 << 0x8
  2223: d4 b7 05                 s0 = a0 | a4
  2226: 95 17 20 01              a0 = sp + 0x120
  2230: 33 09 80 00              a2 = 0x80
  2234: 50 10 2a 8c 11           ra = 42, jump @473
      :                          @138 [@dyn 21]
  2239: 95 17 98 00              a0 = sp + 0x98
  2243: 95 18 20 01              a1 = sp + 0x120
  2247: 33 09 80 00              a2 = 0x80
  2251: 50 10 2c 7b 11           ra = 44, jump @473
      :                          @139 [@dyn 22]
  2256: 7a 16 80 00              u32 [sp + 0x80] = s1
  2260: 82 17 60                 a0 = u64 [sp + 0x60]
  2263: 7a 17 84 00              u32 [sp + 0x84] = a0
  2267: 82 17 58                 a0 = u64 [sp + 0x58]
  2270: 7a 17 88 00              u32 [sp + 0x88] = a0
  2274: 82 17 50                 a0 = u64 [sp + 0x50]
  2277: 7a 17 8c 00              u32 [sp + 0x8c] = a0
  2281: 82 17 48                 a0 = u64 [sp + 0x48]
  2284: 7b 17 90 00              u64 [sp + 0x90] = a0
  2288: 7b 15 18 01              u64 [sp + 0x118] = s0
  2292: 33 07 70 01 01           a0 = 0x10170
  2297: 7b 17 10 02              u64 [sp + 0x210] = a0
  2301: 95 17 80 00              a0 = sp + 0x80
  2305: 7b 17 20 01              u64 [sp + 0x120] = a0
  2309: 82 17 08                 a0 = u64 [sp + 0x8]
  2312: 7b 17 28 01              u64 [sp + 0x128] = a0
  2316: 95 18 84 00              a1 = sp + 0x84
  2320: 7b 18 30 01              u64 [sp + 0x130] = a1
  2324: 7b 17 38 01              u64 [sp + 0x138] = a0
  2328: 95 18 88 00              a1 = sp + 0x88
  2332: 7b 18 40 01              u64 [sp + 0x140] = a1
  2336: 7b 17 48 01              u64 [sp + 0x148] = a0
  2340: 95 18 8c 00              a1 = sp + 0x8c
  2344: 7b 18 50 01              u64 [sp + 0x150] = a1
  2348: 7b 17 58 01              u64 [sp + 0x158] = a0
  2352: 95 17 90 00              a0 = sp + 0x90
  2356: 7b 17 60 01              u64 [sp + 0x160] = a0
  2360: 82 17 18                 a0 = u64 [sp + 0x18]
  2363: 7b 17 68 01              u64 [sp + 0x168] = a0
  2367: 95 18 98 00              a1 = sp + 0x98
  2371: 7b 18 70 01              u64 [sp + 0x170] = a1
  2375: 82 18                    a1 = u64 [sp]
  2377: 7b 18 78 01              u64 [sp + 0x178] = a1
  2381: 95 18 18 01              a1 = sp + 0x118
  2385: 7b 18 80 01              u64 [sp + 0x180] = a1
  2389: 7b 17 88 01              u64 [sp + 0x188] = a0
  2393: 49 21 18 02 07           u64 [sp + 536] = 0x7
  2398: 49 21 30 02              u64 [sp + 560] = 0
  2402: 95 17 20 01              a0 = sp + 0x120
  2406: 7b 17 20 02              u64 [sp + 0x220] = a0
  2410: 49 21 28 02 07           u64 [sp + 552] = 0x7
  2415: 95 17 a0 01              a0 = sp + 0x1a0
  2419: 95 18 10 02              a1 = sp + 0x210
  2423: 50 10 2e db 03           ra = 46, jump @210
      :                          @140 [@dyn 23]
  2428: 82 15 a8 01              s0 = u64 [sp + 0x1a8]
  2432: 82 1b b0 01              a4 = u64 [sp + 0x1b0]
  2436: 82 16 a0 01              s1 = u64 [sp + 0x1a0]
  2440: 33 07 02                 a0 = 0x2
  2443: 33 08                    a1 = 0
  2445: 33 09                    a2 = 0
  2447: 64 5a                    a3 = s0
  2449: 33 00 30                 ra = 0x30
  2452: 0a 64                    ecalli 100 // 'log'
  2454: 01                       fallthrough
      :                          @141 [@dyn 24]
  2455: 82 17 20                 a0 = u64 [sp + 0x20]
  2458: c8 67 07                 a0 = a0 + s1
  2461: 33 0c 30 00 03           a5 = 0x30030
  2466: 33 02 00 10              t0 = 0x1000
  2470: 53 27 00 f0 1c           jump @146 if a0 <u 4294963200
      :                          @142
  2475: c8 2c 08                 a1 = a5 + t0
  2478: 82 87                    a0 = u64 [a1]
  2480: c9 78 09                 a2 = a1 - a0
  2483: ab 59 0f                 jump @146 if a2 != s0
      :                          @143
  2486: c9 67 09                 a2 = a0 - s1
  2489: 01                       fallthrough
      :                          @144
  2490: 82 8a                    a3 = u64 [a1]
  2492: ab 7a ef                 jump @142 if a3 != a0
      :                          @145
  2495: 7b 89                    u64 [a1] = a2
  2497: 01                       fallthrough
      :                          @146
  2498: 81 17 84 00              a0 = i32 [sp + 0x84]
  2502: 7a 17 bc 01              u32 [sp + 0x1bc] = a0
  2506: 95 17 bc 01              a0 = sp + 0x1bc
  2510: 33 08 04                 a1 = 0x4
  2513: 95 19 98 00              a2 = sp + 0x98
  2517: 33 0a 80 00              a3 = 0x80
  2521: 7b 1c 60                 u64 [sp + 0x60] = a5
  2524: 0a 03                    ecalli 3 // 'write'
  2526: 0a                       ecalli 0 // 'gas'
  2527: 7b 17 c0 01              u64 [sp + 0x1c0] = a0
  2531: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
  2535: 46 21 ef 01 04           u8 [sp + 495] = 0x4
  2540: 7b 17 f0 01              u64 [sp + 0x1f0] = a0
  2544: 95 17 ef 01              a0 = sp + 0x1ef
  2548: 33 08 01                 a1 = 0x1
  2551: 95 19 f0 01              a2 = sp + 0x1f0
  2555: 33 0a 08                 a3 = 0x8
  2558: 0a 03                    ecalli 3 // 'write'
  2560: 33 07 7e                 a0 = 0x7e
  2563: 7b 17 48 02              u64 [sp + 0x248] = a0
  2567: 14 07 20 00 00 00 10 00 00 00 a0 = 0x1000000020
  2577: 7b 17 48 01              u64 [sp + 0x148] = a0
  2581: 7b 17 80 01              u64 [sp + 0x180] = a0
  2585: 33 07 60 02 01           a0 = 0x10260
  2590: 7b 17 10 02              u64 [sp + 0x210] = a0
  2594: 95 17 ef 01              a0 = sp + 0x1ef
  2598: 7b 17 40 02              u64 [sp + 0x240] = a0
  2602: 95 17 e0 01              a0 = sp + 0x1e0
  2606: 7b 17 50 02              u64 [sp + 0x250] = a0
  2610: 82 17 18                 a0 = u64 [sp + 0x18]
  2613: 7b 17 58 02              u64 [sp + 0x258] = a0
  2617: 49 21 20 01 02           u64 [sp + 288] = 0x2
  2622: 49 21 30 01 02           u64 [sp + 304] = 0x2
  2627: 49 21 40 01              u64 [sp + 320] = 0
  2631: 46 21 50 01 03           u8 [sp + 336] = 0x3
  2636: 49 21 58 01 02           u64 [sp + 344] = 0x2
  2641: 49 21 68 01 02           u64 [sp + 360] = 0x2
  2646: 49 21 78 01 01           u64 [sp + 376] = 0x1
  2651: 46 21 88 01 03           u8 [sp + 392] = 0x3
  2656: 49 21 18 02 02           u64 [sp + 536] = 0x2
  2661: 95 17 20 01              a0 = sp + 0x120
  2665: 7b 17 30 02              u64 [sp + 0x230] = a0
  2669: 49 21 38 02 02           u64 [sp + 568] = 0x2
  2674: 95 17 40 02              a0 = sp + 0x240
  2678: 7b 17 20 02              u64 [sp + 0x220] = a0
  2682: 49 21 28 02 02           u64 [sp + 552] = 0x2
  2687: 95 17 f8 01              a0 = sp + 0x1f8
  2691: 95 18 10 02              a1 = sp + 0x210
  2695: 50 10 32 cb 02           ra = 50, jump @210
      :                          @147 [@dyn 25]
  2700: 82 15 00 02              s0 = u64 [sp + 0x200]
  2704: 82 1b 08 02              a4 = u64 [sp + 0x208]
  2708: 82 16 f8 01              s1 = u64 [sp + 0x1f8]
  2712: 33 07 02                 a0 = 0x2
  2715: 33 08                    a1 = 0
  2717: 33 09                    a2 = 0
  2719: 64 5a                    a3 = s0
  2721: 33 00 34                 ra = 0x34
  2724: 0a 64                    ecalli 100 // 'log'
  2726: 01                       fallthrough
      :                          @148 [@dyn 26]
  2727: 82 1c 60                 a5 = u64 [sp + 0x60]
  2730: 33 02 00 10              t0 = 0x1000
  2734: 82 17 20                 a0 = u64 [sp + 0x20]
  2737: c8 67 07                 a0 = a0 + s1
  2740: 53 27 00 f0 1e           jump @153 if a0 <u 4294963200
      :                          @149
  2745: c8 2c 08                 a1 = a5 + t0
  2748: 82 87                    a0 = u64 [a1]
  2750: c9 78 09                 a2 = a1 - a0
  2753: ab 59 11                 jump @153 if a2 != s0
      :                          @150
  2756: c9 67 09                 a2 = a0 - s1
  2759: 01                       fallthrough
      :                          @151
  2760: 82 8a                    a3 = u64 [a1]
  2762: ab 7a ef                 jump @149 if a3 != a0
      :                          @152
  2765: 7b 89                    u64 [a1] = a2
  2767: 33 0b                    a4 = 0
  2769: 01                       fallthrough
      :                          @153
  2770: 95 17 c0 01              a0 = sp + 0x1c0
  2774: 7b 17 10 02              u64 [sp + 0x210] = a0
  2778: 82 17 18                 a0 = u64 [sp + 0x18]
  2781: 7b 17 18 02              u64 [sp + 0x218] = a0
  2785: 33 07 e0 01 01           a0 = 0x101e0
  2790: 7b 17 20 01              u64 [sp + 0x120] = a0
  2794: 49 21 28 01 02           u64 [sp + 296] = 0x2
  2799: 49 21 40 01              u64 [sp + 320] = 0
  2803: 95 17 10 02              a0 = sp + 0x210
  2807: 7b 17 30 01              u64 [sp + 0x130] = a0
  2811: 49 21 38 01 01           u64 [sp + 312] = 0x1
  2816: 95 17 c8 01              a0 = sp + 0x1c8
  2820: 95 18 20 01              a1 = sp + 0x120
  2824: 50 10 36 4a 02           ra = 54, jump @210
      :                          @154 [@dyn 27]
  2829: 82 15 d0 01              s0 = u64 [sp + 0x1d0]
  2833: 82 1b d8 01              a4 = u64 [sp + 0x1d8]
  2837: 82 16 c8 01              s1 = u64 [sp + 0x1c8]
  2841: 33 07 02                 a0 = 0x2
  2844: 33 08                    a1 = 0
  2846: 33 09                    a2 = 0
  2848: 64 5a                    a3 = s0
  2850: 33 00 38                 ra = 0x38
  2853: 0a 64                    ecalli 100 // 'log'
  2855: 01                       fallthrough
      :                          @155 [@dyn 28]
  2856: 82 1c 60                 a5 = u64 [sp + 0x60]
  2859: 33 02 00 10              t0 = 0x1000
  2863: 82 17 20                 a0 = u64 [sp + 0x20]
  2866: c8 67 07                 a0 = a0 + s1
  2869: 53 27 00 f0 1c           jump @160 if a0 <u 4294963200
      :                          @156
  2874: c8 2c 08                 a1 = a5 + t0
  2877: 82 87                    a0 = u64 [a1]
  2879: c9 78 09                 a2 = a1 - a0
  2882: ab 59 0f                 jump @160 if a2 != s0
      :                          @157
  2885: c9 67 09                 a2 = a0 - s1
  2888: 01                       fallthrough
      :                          @158
  2889: 82 8a                    a3 = u64 [a1]
  2891: ab 7a ef                 jump @156 if a3 != a0
      :                          @159
  2894: 7b 89                    u64 [a1] = a2
  2896: 01                       fallthrough
      :                          @160
  2897: 82 19 78                 a2 = u64 [sp + 0x78]
  2900: 95 99 01                 a2 = a2 + 0x1
  2903: 82 18 10                 a1 = u64 [sp + 0x10]
  2906: 82 17 70                 a0 = u64 [sp + 0x70]
  2909: 82 1b 68                 a4 = u64 [sp + 0x68]
  2912: 33 0c 08                 a5 = 0x8
  2915: ae c8 76 fb              jump @118 if a1 >=u a5
      :                          @161
  2919: 33 07 00 00 01           a0 = 0x10000
  2924: 33 08                    a1 = 0
  2926: 82 10 70 02              ra = u64 [sp + 0x270]
  2930: 82 15 68 02              s0 = u64 [sp + 0x268]
  2934: 82 16 60 02              s1 = u64 [sp + 0x260]
  2938: 95 11 78 02              sp = sp + 0x278
  2942: 32 00                    ret
      :                          @162
  2944: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  2947: 7b 10 40                 u64 [sp + 0x40] = ra
  2950: 7b 15 38                 u64 [sp + 0x38] = s0
  2953: 7b 16 30                 u64 [sp + 0x30] = s1
  2956: 64 75                    s0 = a0
  2958: 82 77                    a0 = u64 [a0]
  2960: 95 78 01                 a1 = a0 + 0x1
  2963: 97 79 01                 a2 = a0 << 0x1
  2966: e4 98 08                 a1 = maxu(a1, a2)
  2969: 33 09 08                 a2 = 0x8
  2972: e4 98 06                 s1 = maxu(a1, a2)
  2975: 57 06 3c                 jump @168 if s1 <s 0
      :                          @163
  2978: 51 07 10                 jump @165 if a0 == 0
      :                          @164
  2981: 82 58 08                 a1 = u64 [s0 + 0x8]
  2984: 7b 18 18                 u64 [sp + 0x18] = a1
  2987: 7b 17 28                 u64 [sp + 0x28] = a0
  2990: 33 07 01                 a0 = 0x1
  2993: 01                       fallthrough
      :                          @165
  2994: 7b 17 20                 u64 [sp + 0x20] = a0
  2997: 64 17                    a0 = sp
  2999: 95 19 18                 a2 = sp + 0x18
  3002: 64 68                    a1 = s1
  3004: 50 10 3a 2a              ra = 58, jump @170
      :                          @166 [@dyn 29]
  3008: 82 17                    a0 = u64 [sp]
  3010: 52 07 1e                 jump @169 if a0 != 0
      :                          @167
  3013: 82 17 08                 a0 = u64 [sp + 0x8]
  3016: 7b 57 08                 u64 [s0 + 0x8] = a0
  3019: 7b 56                    u64 [s0] = s1
  3021: 82 10 40                 ra = u64 [sp + 0x40]
  3024: 82 15 38                 s0 = u64 [sp + 0x38]
  3027: 82 16 30                 s1 = u64 [sp + 0x30]
  3030: 95 11 48                 sp = sp + 0x48
  3033: 32 00                    ret
      :                          @168
  3035: 33 07                    a0 = 0
  3037: 28 08 01                 jump @198
      :                          @169
  3040: 82 17 08                 a0 = u64 [sp + 0x8]
  3043: 28 02 01                 jump @198
      :                          @170
  3046: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  3049: 7b 10 30                 u64 [sp + 0x30] = ra
  3052: 7b 15 28                 u64 [sp + 0x28] = s0
  3055: 7b 16 20                 u64 [sp + 0x20] = s1
  3058: 82 9a 08                 a3 = u64 [a2 + 0x8]
  3061: 51 0a 76                 jump @183 if a3 == 0
      :                          @171
  3064: 82 96 10                 s1 = u64 [a2 + 0x10]
  3067: 51 06 97 00              jump @190 if s1 == 0
      :                          @172
  3071: 82 92                    t0 = u64 [a2]
  3073: 33 03 30 00 03           t1 = 0x30030
  3078: 95 39 00 10              a2 = t1 + 0x1000
  3082: 01                       fallthrough
      :                          @173
  3083: 82 9b                    a4 = u64 [a2]
  3085: c8 8b 0a                 a3 = a4 + a1
  3088: ac ba b3 00              jump @196 if a3 <u a4
      :                          @174
  3092: 98 ac 0c                 a5 = a3 >> 0xc
  3095: 52 0c ac 00              jump @196 if a5 != 0
      :                          @175
  3099: 82 9c                    a5 = u64 [a2]
  3101: ab bc ee                 jump @173 if a5 != a4
      :                          @176
  3104: 7b 9a                    u64 [a2] = a3
  3106: 7b 18 18                 u64 [sp + 0x18] = a1
  3109: c9 a3 05                 s0 = t1 - a3
  3112: 95 55 00 10              s0 = s0 + 0x1000
  3116: 7b 17 10                 u64 [sp + 0x10] = a0
  3119: 64 57                    a0 = s0
  3121: 64 28                    a1 = t0
  3123: 64 69                    a2 = s1
  3125: 7b 12 08                 u64 [sp + 0x8] = t0
  3128: 7b 13                    u64 [sp] = t1
  3130: 50 10 3c 0c 0e           ra = 60, jump @473
      :                          @177 [@dyn 30]
  3135: 82 12 08                 t0 = u64 [sp + 0x8]
  3138: 82 17 10                 a0 = u64 [sp + 0x10]
  3141: 82 19                    a2 = u64 [sp]
  3143: 95 98 00 10              a1 = a2 + 0x1000
  3147: 01                       fallthrough
      :                          @178
  3148: 82 89                    a2 = u64 [a1]
  3150: c9 98 0a                 a3 = a1 - a2
  3153: ab 2a 15                 jump @182 if a3 != t0
      :                          @179
  3156: c9 69 0a                 a3 = a2 - s1
  3159: 01                       fallthrough
      :                          @180
  3160: 82 8b                    a4 = u64 [a1]
  3162: ab 9b f2                 jump @178 if a4 != a2
      :                          @181
  3165: 7b 8a                    u64 [a1] = a3
  3167: 33 0c                    a5 = 0
  3169: 82 18 18                 a1 = u64 [sp + 0x18]
  3172: 28 62                    jump @197
      :                          @182
  3174: 82 18 18                 a1 = u64 [sp + 0x18]
  3177: 28 5d                    jump @197
      :                          @183
  3179: 33 09 30 00 03           a2 = 0x30030
  3184: 95 9a 00 10              a3 = a2 + 0x1000
  3188: 01                       fallthrough
      :                          @184
  3189: 82 ac                    a5 = u64 [a3]
  3191: c8 8c 06                 s1 = a5 + a1
  3194: ac c6 49                 jump @196 if s1 <u a5
      :                          @185
  3197: 98 6b 0c                 a4 = s1 >> 0xc
  3200: 52 0b 43                 jump @196 if a4 != 0
      :                          @186
  3203: 82 ab                    a4 = u64 [a3]
  3205: ab cb f0                 jump @184 if a4 != a5
      :                          @187
  3208: 7b a6                    u64 [a3] = s1
  3210: 33 05                    s0 = 0
  3212: 01                       fallthrough
      :                          @188
  3213: ab cb e8                 jump @184 if a4 != a5
      :                          @189
  3216: 28 2a                    jump @195
      :                          @190
  3218: 33 09 30 00 03           a2 = 0x30030
  3223: 95 9a 00 10              a3 = a2 + 0x1000
  3227: 01                       fallthrough
      :                          @191
  3228: 82 ac                    a5 = u64 [a3]
  3230: c8 8c 06                 s1 = a5 + a1
  3233: ac c6 22                 jump @196 if s1 <u a5
      :                          @192
  3236: 98 6b 0c                 a4 = s1 >> 0xc
  3239: 52 0b 1c                 jump @196 if a4 != 0
      :                          @193
  3242: 82 ab                    a4 = u64 [a3]
  3244: ab cb f0                 jump @191 if a4 != a5
      :                          @194
  3247: 7b a6                    u64 [a3] = s1
  3249: c9 69 09                 a2 = a2 - s1
  3252: 95 95 00 10              s0 = a2 + 0x1000
  3256: 28 0e                    jump @197
      :                          @195
  3258: c9 69 09                 a2 = a2 - s1
  3261: 95 95 00 10              s0 = a2 + 0x1000
  3265: 28 05                    jump @197
      :                          @196
  3267: 33 05                    s0 = 0
  3269: 01                       fallthrough
      :                          @197
  3270: 88 59 01                 a2 = s0 <u 0x1
  3273: 33 0a 01                 a3 = 0x1
  3276: db 55 0a                 a3 = s0 if s0 != 0
  3279: 7b 7a 08                 u64 [a0 + 0x8] = a3
  3282: 7b 78 10                 u64 [a0 + 0x10] = a1
  3285: 7b 79                    u64 [a0] = a2
  3287: 82 10 30                 ra = u64 [sp + 0x30]
  3290: 82 15 28                 s0 = u64 [sp + 0x28]
  3293: 82 16 20                 s1 = u64 [sp + 0x20]
  3296: 95 11 38                 sp = sp + 0x38
  3299: 32 00                    ret
      :                          @198
  3301: 52 07 04                 jump @200 if a0 != 0
      :                          @199
  3304: 00                       trap
      :                          @200
  3305: 00                       trap
      :                          @201
  3306: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  3309: 7b 10 40                 u64 [sp + 0x40] = ra
  3312: 7b 15 38                 u64 [sp + 0x38] = s0
  3315: 7b 16 30                 u64 [sp + 0x30] = s1
  3318: c8 89 09                 a2 = a2 + a1
  3321: ac 89 50                 jump @208 if a2 <u a1
      :                          @202
  3324: 64 75                    s0 = a0
  3326: 82 77                    a0 = u64 [a0]
  3328: 97 78 01                 a1 = a0 << 0x1
  3331: 33 0a 08                 a3 = 0x8
  3334: e4 a9 09                 a2 = maxu(a2, a3)
  3337: e4 89 06                 s1 = maxu(a2, a1)
  3340: 57 06 3d                 jump @208 if s1 <s 0
      :                          @203
  3343: 51 07 10                 jump @205 if a0 == 0
      :                          @204
  3346: 82 58 08                 a1 = u64 [s0 + 0x8]
  3349: 7b 18 18                 u64 [sp + 0x18] = a1
  3352: 7b 17 28                 u64 [sp + 0x28] = a0
  3355: 33 07 01                 a0 = 0x1
  3358: 01                       fallthrough
      :                          @205
  3359: 7b 17 20                 u64 [sp + 0x20] = a0
  3362: 64 17                    a0 = sp
  3364: 95 19 18                 a2 = sp + 0x18
  3367: 64 68                    a1 = s1
  3369: 50 10 3e bd fe           ra = 62, jump @170
      :                          @206 [@dyn 31]
  3374: 82 17                    a0 = u64 [sp]
  3376: 52 07 1d                 jump @209 if a0 != 0
      :                          @207
  3379: 82 17 08                 a0 = u64 [sp + 0x8]
  3382: 7b 57 08                 u64 [s0 + 0x8] = a0
  3385: 7b 56                    u64 [s0] = s1
  3387: 82 10 40                 ra = u64 [sp + 0x40]
  3390: 82 15 38                 s0 = u64 [sp + 0x38]
  3393: 82 16 30                 s1 = u64 [sp + 0x30]
  3396: 95 11 48                 sp = sp + 0x48
  3399: 32 00                    ret
      :                          @208
  3401: 33 07                    a0 = 0
  3403: 28 9a                    jump @198
      :                          @209
  3405: 82 17 08                 a0 = u64 [sp + 0x8]
  3408: 28 95                    jump @198
      :                          @210
  3410: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  3413: 7b 10 30                 u64 [sp + 0x30] = ra
  3416: 7b 15 28                 u64 [sp + 0x28] = s0
  3419: 7b 16 20                 u64 [sp + 0x20] = s1
  3422: 64 89                    a2 = a1
  3424: 82 8a 08                 a3 = u64 [a1 + 0x8]
  3427: 64 76                    s1 = a0
  3429: 51 0a 65                 jump @224 if a3 == 0
      :                          @211
  3432: 82 98                    a1 = u64 [a2]
  3434: 33 07                    a0 = 0
  3436: 95 8b 08                 a4 = a1 + 0x8
  3439: 01                       fallthrough
      :                          @212
  3440: 82 bc                    a5 = u64 [a4]
  3442: c8 c7 07                 a0 = a0 + a5
  3445: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  3448: 95 bb 10                 a4 = a4 + 0x10
  3451: 52 0a f5                 jump @212 if a3 != 0
      :                          @213
  3454: 82 9a 18                 a3 = u64 [a2 + 0x18]
  3457: 51 0a 19                 jump @217 if a3 == 0
      :                          @214
  3460: 57 07 46                 jump @224 if a0 <s 0
      :                          @215
  3463: 82 88 08                 a1 = u64 [a1 + 0x8]
  3466: 88 88 01                 a1 = a1 <u 0x1
  3469: 88 7a 10                 a3 = a0 <u 0x10
  3472: d2 a8 08                 a1 = a1 & a3
  3475: 52 08 37                 jump @224 if a1 != 0
      :                          @216
  3478: 97 77 01                 a0 = a0 << 0x1
  3481: 01                       fallthrough
      :                          @217
  3482: 57 07 72                 jump @231 if a0 <s 0
      :                          @218
  3485: 51 07 34                 jump @225 if a0 == 0
      :                          @219
  3488: 33 02 30 00 03           t0 = 0x30030
  3493: 95 2a 00 10              a3 = t0 + 0x1000
  3497: 01                       fallthrough
      :                          @220
  3498: 82 ac                    a5 = u64 [a3]
  3500: c8 7c 08                 a1 = a5 + a0
  3503: ac c8 5b                 jump @229 if a1 <u a5
      :                          @221
  3506: 98 8b 0c                 a4 = a1 >> 0xc
  3509: 52 0b 55                 jump @229 if a4 != 0
      :                          @222
  3512: 82 ab                    a4 = u64 [a3]
  3514: ab cb f0                 jump @220 if a4 != a5
      :                          @223
  3517: 7b a8                    u64 [a3] = a1
  3519: 33 05                    s0 = 0
  3521: c9 82 08                 a1 = t0 - a1
  3524: 95 88 00 10              a1 = a1 + 0x1000
  3528: 28 0d                    jump @226
      :                          @224
  3530: 33 07                    a0 = 0
  3532: 33 08 01                 a1 = 0x1
  3535: 28 06                    jump @226
      :                          @225
  3537: 33 08 01                 a1 = 0x1
  3540: 01                       fallthrough
      :                          @226
  3541: 7b 17                    u64 [sp] = a0
  3543: 7b 18 08                 u64 [sp + 0x8] = a1
  3546: 49 11 10                 u64 [sp + 16] = 0
  3549: 33 08 00 02 01           a1 = 0x10200
  3554: 64 17                    a0 = sp
  3556: 50 10 40 42 05           ra = 64, jump @324
      :                          @227 [@dyn 32]
  3561: 52 07 22                 jump @230 if a0 != 0
      :                          @228
  3564: 82 17 10                 a0 = u64 [sp + 0x10]
  3567: 82 18 08                 a1 = u64 [sp + 0x8]
  3570: 82 19                    a2 = u64 [sp]
  3572: 7b 67 10                 u64 [s1 + 0x10] = a0
  3575: 7b 68 08                 u64 [s1 + 0x8] = a1
  3578: 7b 69                    u64 [s1] = a2
  3580: 82 10 30                 ra = u64 [sp + 0x30]
  3583: 82 15 28                 s0 = u64 [sp + 0x28]
  3586: 82 16 20                 s1 = u64 [sp + 0x20]
  3589: 95 11 38                 sp = sp + 0x38
  3592: 32 00                    ret
      :                          @229
  3594: 00                       trap
      :                          @230
  3595: 00                       trap
      :                          @231
  3596: 00                       trap
      :                          @232 [@dyn 33]
  3597: 82 72                    t0 = u64 [a0]
  3599: 33 09 00 f0              a2 = 0xfffffffffffff000
  3603: 95 2a ff ef              a3 = t0 + 0xffffffffffffefff
  3607: ac 9a 27                 jump @238 if a3 <u a2
      :                          @233
  3610: 82 77 08                 a0 = u64 [a0 + 0x8]
  3613: 33 09 30 00 03           a2 = 0x30030
  3618: 95 99 00 10              a2 = a2 + 0x1000
  3622: 01                       fallthrough
      :                          @234
  3623: 82 9a                    a3 = u64 [a2]
  3625: c9 a9 0b                 a4 = a2 - a3
  3628: ab 7b 12                 jump @238 if a4 != a0
      :                          @235
  3631: c9 2a 0b                 a4 = a3 - t0
  3634: 01                       fallthrough
      :                          @236
  3635: 82 9c                    a5 = u64 [a2]
  3637: ab ac f2                 jump @234 if a5 != a3
      :                          @237
  3640: 7b 9b                    u64 [a2] = a4
  3642: 33 08                    a1 = 0
  3644: 32 00                    ret
      :                          @238
  3646: 32 00                    ret
      :                          @239 [@dyn 34]
  3648: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3651: 7b 10 18                 u64 [sp + 0x18] = ra
  3654: 7b 15 10                 u64 [sp + 0x10] = s0
  3657: 7b 16 08                 u64 [sp + 0x8] = s1
  3660: 64 75                    s0 = a0
  3662: 82 7a 10                 a3 = u64 [a0 + 0x10]
  3665: 82 77                    a0 = u64 [a0]
  3667: c9 a7 07                 a0 = a0 - a3
  3670: 64 96                    s1 = a2
  3672: ac 97 2a                 jump @242 if a0 <u a2
      :                          @240
  3675: 7b 1a                    u64 [sp] = a3
  3677: 82 57 08                 a0 = u64 [s0 + 0x8]
  3680: c8 a7 07                 a0 = a0 + a3
  3683: 64 69                    a2 = s1
  3685: 50 10 46 e1 0b           ra = 70, jump @473
      :                          @241 [@dyn 35]
  3690: 82 17                    a0 = u64 [sp]
  3692: c8 76 06                 s1 = s1 + a0
  3695: 7b 56 10                 u64 [s0 + 0x10] = s1
  3698: 33 07                    a0 = 0
  3700: 82 10 18                 ra = u64 [sp + 0x18]
  3703: 82 15 10                 s0 = u64 [sp + 0x10]
  3706: 82 16 08                 s1 = u64 [sp + 0x8]
  3709: 95 11 20                 sp = sp + 0x20
  3712: 32 00                    ret
      :                          @242
  3714: 64 57                    a0 = s0
  3716: 7b 18                    u64 [sp] = a1
  3718: 64 a8                    a1 = a3
  3720: 64 69                    a2 = s1
  3722: 50 10 48 60 fe           ra = 72, jump @201
      :                          @243 [@dyn 36]
  3727: 82 18                    a1 = u64 [sp]
  3729: 82 5a 10                 a3 = u64 [s0 + 0x10]
  3732: 28 c7                    jump @240
      :                          @244 [@dyn 37]
  3734: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  3737: 7b 10 20                 u64 [sp + 0x20] = ra
  3740: 7b 15 18                 u64 [sp + 0x18] = s0
  3743: 7b 16 10                 u64 [sp + 0x10] = s1
  3746: 33 09 80 00              a2 = 0x80
  3750: 64 75                    s0 = a0
  3752: ae 98 25                 jump @249 if a1 >=u a2
      :                          @245
  3755: 82 56 10                 s1 = u64 [s0 + 0x10]
  3758: 82 57                    a0 = u64 [s0]
  3760: ab 76 0f                 jump @248 if s1 != a0
      :                          @246
  3763: 64 57                    a0 = s0
  3765: 7b 18                    u64 [sp] = a1
  3767: 50 10 4c c9 fc           ra = 76, jump @162
      :                          @247 [@dyn 38]
  3772: 82 18                    a1 = u64 [sp]
  3774: 01                       fallthrough
      :                          @248
  3775: 82 57 08                 a0 = u64 [s0 + 0x8]
  3778: c8 67 07                 a0 = a0 + s1
  3781: 78 78                    u8 [a0] = a1
  3783: 95 66 01                 s1 = s1 + 0x1
  3786: 28 98 00                 jump @257
      :                          @249
  3789: 8b 87 0b                 i32 a0 = a1 >> 0xb
  3792: 48 11 0c                 u32 [sp + 12] = 0
  3795: 52 07 15                 jump @251 if a0 != 0
      :                          @250
  3798: 95 17 0d                 a0 = sp + 0xd
  3801: 98 89 06                 a2 = a1 >> 0x6
  3804: 86 99 c0 00              a2 = a2 | 0xc0
  3808: 78 19 0c                 u8 [sp + 0xc] = a2
  3811: 33 09 02                 a2 = 0x2
  3814: 28 52                    jump @254
      :                          @251
  3816: 8b 87 10                 i32 a0 = a1 >> 0x10
  3819: 52 07 22                 jump @253 if a0 != 0
      :                          @252
  3822: 95 17 0e                 a0 = sp + 0xe
  3825: 98 89 0c                 a2 = a1 >> 0xc
  3828: 86 99 e0 00              a2 = a2 | 0xe0
  3832: 78 19 0c                 u8 [sp + 0xc] = a2
  3835: 97 89 34                 a2 = a1 << 0x34
  3838: 98 99 3a                 a2 = a2 >> 0x3a
  3841: 95 99 80 00              a2 = a2 + 0x80
  3845: 78 19 0d                 u8 [sp + 0xd] = a2
  3848: 33 09 03                 a2 = 0x3
  3851: 28 2d                    jump @254
      :                          @253
  3853: 95 17 0f                 a0 = sp + 0xf
  3856: 98 89 12                 a2 = a1 >> 0x12
  3859: 86 99 f0 00              a2 = a2 | 0xf0
  3863: 78 19 0c                 u8 [sp + 0xc] = a2
  3866: 97 89 2e                 a2 = a1 << 0x2e
  3869: 98 99 3a                 a2 = a2 >> 0x3a
  3872: 95 99 80 00              a2 = a2 + 0x80
  3876: 78 19 0d                 u8 [sp + 0xd] = a2
  3879: 97 89 34                 a2 = a1 << 0x34
  3882: 98 99 3a                 a2 = a2 >> 0x3a
  3885: 95 99 80 00              a2 = a2 + 0x80
  3889: 78 19 0e                 u8 [sp + 0xe] = a2
  3892: 33 09 04                 a2 = 0x4
  3895: 01                       fallthrough
      :                          @254
  3896: 82 56 10                 s1 = u64 [s0 + 0x10]
  3899: 82 5a                    a3 = u64 [s0]
  3901: 84 88 3f                 a1 = a1 & 0x3f
  3904: 86 88 80 00              a1 = a1 | 0x80
  3908: c9 6a 0a                 a3 = a3 - s1
  3911: 78 78                    u8 [a0] = a1
  3913: ac 9a 2c                 jump @258 if a3 <u a2
      :                          @255
  3916: 7b 19                    u64 [sp] = a2
  3918: 82 57 08                 a0 = u64 [s0 + 0x8]
  3921: c8 67 07                 a0 = a0 + s1
  3924: 95 18 0c                 a1 = sp + 0xc
  3927: 50 10 4e ef 0a           ra = 78, jump @473
      :                          @256 [@dyn 39]
  3932: 82 17                    a0 = u64 [sp]
  3934: c8 76 06                 s1 = s1 + a0
  3937: 01                       fallthrough
      :                          @257
  3938: 7b 56 10                 u64 [s0 + 0x10] = s1
  3941: 33 07                    a0 = 0
  3943: 82 10 20                 ra = u64 [sp + 0x20]
  3946: 82 15 18                 s0 = u64 [sp + 0x18]
  3949: 82 16 10                 s1 = u64 [sp + 0x10]
  3952: 95 11 28                 sp = sp + 0x28
  3955: 32 00                    ret
      :                          @258
  3957: 64 57                    a0 = s0
  3959: 64 68                    a1 = s1
  3961: 64 96                    s1 = a2
  3963: 50 10 50 6f fd           ra = 80, jump @201
      :                          @259 [@dyn 40]
  3968: 64 69                    a2 = s1
  3970: 82 56 10                 s1 = u64 [s0 + 0x10]
  3973: 28 c7                    jump @255
      :                          @260 [@dyn 41]
  3975: 64 8a                    a3 = a1
  3977: 33 08 00 02 01           a1 = 0x10200
  3982: 64 a9                    a2 = a3
  3984: 28 96 03                 jump @324
      :                          @261
  3987: 95 11 b0                 sp = sp + 0xffffffffffffffb0
  3990: 7b 10 48                 u64 [sp + 0x48] = ra
  3993: 7b 15 40                 u64 [sp + 0x40] = s0
  3996: 7b 16 38                 u64 [sp + 0x38] = s1
  3999: 7b 18                    u64 [sp] = a1
  4001: 82 79                    a2 = u64 [a0]
  4003: 33 0a 14                 a3 = 0x14
  4006: 33 07 8e 00 01           a0 = 0x1008e
  4011: 64 95                    s0 = a2
  4013: 7b 19 08                 u64 [sp + 0x8] = a2
  4016: 53 29 e8 03 84 00        jump @264 if a2 <u 1000
      :                          @262
  4022: 33 0a 14                 a3 = 0x14
  4025: 95 1c 37                 a5 = sp + 0x37
  4028: 14 08 4b 59 86 38 d6 c5 6d 34 a1 = 0x346dc5d63886594b
  4038: 7b 18 18                 u64 [sp + 0x18] = a1
  4041: 49 11 10 f0 d8 00        u64 [sp + 16] = 0xd8f0
  4047: 33 04 7b 14              t2 = 0x147b
  4051: 33 00 7f 96 98 00        ra = 0x98967f
  4057: 82 15 08                 s0 = u64 [sp + 0x8]
  4060: 01                       fallthrough
      :                          @263
  4061: 64 53                    t1 = s0
  4063: 82 18 18                 a1 = u64 [sp + 0x18]
  4066: d6 85 05                 s0 = s0 mulhu a1
  4069: 98 55 0b                 s0 = s0 >> 0xb
  4072: 82 18 10                 a1 = u64 [sp + 0x10]
  4075: ca 85 02                 t0 = s0 * a1
  4078: c8 32 0b                 a4 = t0 + t1
  4081: 97 b2 30                 t0 = a4 << 0x30
  4084: 98 28 32                 a1 = t0 >> 0x32
  4087: ca 48 08                 a1 = a1 * t2
  4090: 98 89 10                 a2 = a1 >> 0x10
  4093: 98 88 11                 a1 = a1 >> 0x11
  4096: 96 88 9c                 a1 = a1 * 0xffffffffffffff9c
  4099: c8 b8 08                 a1 = a1 + a4
  4102: 84 99 fe 07              a2 = a2 & 0x7fe
  4106: c8 79 09                 a2 = a2 + a0
  4109: 7c 9b                    a4 = u8 [a2]
  4111: 7c 99 01                 a2 = u8 [a2 + 0x1]
  4114: 97 88 31                 a1 = a1 << 0x31
  4117: 98 88 30                 a1 = a1 >> 0x30
  4120: c8 78 08                 a1 = a1 + a0
  4123: 7c 86                    s1 = u8 [a1]
  4125: 7c 88 01                 a1 = u8 [a1 + 0x1]
  4128: 78 cb fd                 u8 [a5 + 0xfffffffffffffffd] = a4
  4131: 78 c9 fe                 u8 [a5 + 0xfffffffffffffffe] = a2
  4134: 78 c6 ff                 u8 [a5 + 0xffffffffffffffff] = s1
  4137: 78 c8                    u8 [a5] = a1
  4139: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
  4142: 95 cc fc                 a5 = a5 + 0xfffffffffffffffc
  4145: ac 30 ac                 jump @263 if ra <u t1
      :                          @264
  4148: 54 15 09 39              jump @266 if s0 <=u 9
      :                          @265
  4152: 97 58 30                 a1 = s0 << 0x30
  4155: 98 88 32                 a1 = a1 >> 0x32
  4158: 96 88 7b 14              a1 = a1 * 0x147b
  4162: 98 88 11                 a1 = a1 >> 0x11
  4165: 96 89 9c                 a2 = a1 * 0xffffffffffffff9c
  4168: c8 59 09                 a2 = a2 + s0
  4171: 97 99 31                 a2 = a2 << 0x31
  4174: 98 99 30                 a2 = a2 >> 0x30
  4177: 95 16 24                 s1 = sp + 0x24
  4180: c8 79 09                 a2 = a2 + a0
  4183: 7c 9c                    a5 = u8 [a2]
  4185: c8 a6 0b                 a4 = s1 + a3
  4188: 7c 99 01                 a2 = u8 [a2 + 0x1]
  4191: 95 aa fe                 a3 = a3 + 0xfffffffffffffffe
  4194: c8 a6 06                 s1 = s1 + a3
  4197: 78 6c                    u8 [s1] = a5
  4199: 78 b9 ff                 u8 [a4 + 0xffffffffffffffff] = a2
  4202: 64 85                    s0 = a1
  4204: 01                       fallthrough
      :                          @266
  4205: 82 18 08                 a1 = u64 [sp + 0x8]
  4208: 51 08 06                 jump @268 if a1 == 0
      :                          @267
  4211: 51 05 1b                 jump @269 if s0 == 0
      :                          @268
  4214: 97 55 01                 s0 = s0 << 0x1
  4217: 84 55 1e                 s0 = s0 & 0x1e
  4220: c8 57 07                 a0 = a0 + s0
  4223: 7c 77 01                 a0 = u8 [a0 + 0x1]
  4226: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  4229: 95 18 24                 a1 = sp + 0x24
  4232: c8 a8 08                 a1 = a1 + a3
  4235: 78 87                    u8 [a1] = a0
  4237: 01                       fallthrough
      :                          @269
  4238: 9a ab 14                 a4 = 0x14 - a3
  4241: 95 17 24                 a0 = sp + 0x24
  4244: c8 7a 0a                 a3 = a3 + a0
  4247: 33 08 01                 a1 = 0x1
  4250: 82 17                    a0 = u64 [sp]
  4252: 33 09                    a2 = 0
  4254: 50 10 54 12              ra = 84, jump @271
      :                          @270 [@dyn 42]
  4258: 82 10 48                 ra = u64 [sp + 0x48]
  4261: 82 15 40                 s0 = u64 [sp + 0x40]
  4264: 82 16 38                 s1 = u64 [sp + 0x38]
  4267: 95 11 50                 sp = sp + 0x50
  4270: 32 00                    ret
      :                          @271
  4272: 95 11 98                 sp = sp + 0xffffffffffffff98
  4275: 7b 10 60                 u64 [sp + 0x60] = ra
  4278: 7b 15 58                 u64 [sp + 0x58] = s0
  4281: 7b 16 50                 u64 [sp + 0x50] = s1
  4284: 80 73 24                 t1 = u32 [a0 + 0x24]
  4287: 64 9c                    a5 = a2
  4289: 7b 18 48                 u64 [sp + 0x48] = a1
  4292: 84 38 01                 a1 = t1 & 0x1
  4295: 33 02 2b                 t0 = 0x2b
  4298: 33 09 00 00 11           a2 = 0x110000
  4303: 84 36 04                 s1 = t1 & 0x4
  4306: c8 b8 00                 ra = a1 + a4
  4309: 52 06 08                 jump @273 if s1 != 0
      :                          @272
  4312: 49 11 48                 u64 [sp + 72] = 0
  4315: 28 35                    jump @279
      :                          @273
  4317: 51 0c 23                 jump @277 if a5 == 0
      :                          @274
  4320: 33 06                    s1 = 0
  4322: 64 c4                    t2 = a5
  4324: 82 19 48                 a2 = u64 [sp + 0x48]
  4327: c8 c9 05                 s0 = a2 + a5
  4330: 64 9c                    a5 = a2
  4332: 01                       fallthrough
      :                          @275
  4333: 7d c9                    a2 = i8 [a5]
  4335: 89 99 c0                 a2 = a2 <s 0xffffffffffffffc0
  4338: 85 99 01                 a2 = a2 ^ 0x1
  4341: 95 cc 01                 a5 = a5 + 0x1
  4344: c8 96 06                 s1 = s1 + a2
  4347: ab 5c f2                 jump @275 if a5 != s0
      :                          @276
  4350: 28 07                    jump @278
      :                          @277
  4352: 64 c4                    t2 = a5
  4354: 33 06                    s1 = 0
  4356: 01                       fallthrough
      :                          @278
  4357: c8 60 00                 ra = ra + s1
  4360: 64 4c                    a5 = t2
  4362: 33 09 00 00 11           a2 = 0x110000
  4367: 01                       fallthrough
      :                          @279
  4368: 82 76                    s1 = u64 [a0]
  4370: db 82 09                 a2 = t0 if a1 != 0
  4373: 7b 1b 30                 u64 [sp + 0x30] = a4
  4376: 7b 1a 28                 u64 [sp + 0x28] = a3
  4379: 51 06 35                 jump @285 if s1 == 0
      :                          @280
  4382: 82 75 08                 s0 = u64 [a0 + 0x8]
  4385: ae 50 2f                 jump @285 if ra >=u s0
      :                          @281
  4388: 84 38 08                 a1 = t1 & 0x8
  4391: 52 08 5d                 jump @288 if a1 != 0
      :                          @282
  4394: 7c 76 28                 s1 = u8 [a0 + 0x28]
  4397: 95 68 fd                 a1 = s1 + 0xfffffffffffffffd
  4400: 33 02 01                 t0 = 0x1
  4403: da 82 06                 s1 = t0 if a1 == 0
  4406: c9 05 08                 a1 = s0 - ra
  4409: 7b 1c 20                 u64 [sp + 0x20] = a5
  4412: 7b 19 18                 u64 [sp + 0x18] = a2
  4415: 51 06 ab 00              jump @296 if s1 == 0
      :                          @283
  4419: 52 16 01 99 00           jump @295 if s1 != 1
      :                          @284
  4424: 64 86                    s1 = a1
  4426: 49 11 10                 u64 [sp + 16] = 0
  4429: 28 a1 00                 jump @297
      :                          @285
  4432: 82 75 30                 s0 = u64 [a0 + 0x30]
  4435: 82 76 38                 s1 = u64 [a0 + 0x38]
  4438: 64 57                    a0 = s0
  4440: 64 68                    a1 = s1
  4442: 82 1a 48                 a3 = u64 [sp + 0x48]
  4445: 64 cb                    a4 = a5
  4447: 50 10 56 65 01           ra = 86, jump @317
      :                          @286 [@dyn 43]
  4452: 33 08 01                 a1 = 0x1
  4455: 52 07 b4 00              jump @302 if a0 != 0
      :                          @287
  4459: 82 6c 18                 a5 = u64 [s1 + 0x18]
  4462: 64 57                    a0 = s0
  4464: 82 18 28                 a1 = u64 [sp + 0x28]
  4467: 82 19 30                 a2 = u64 [sp + 0x30]
  4470: 82 10 60                 ra = u64 [sp + 0x60]
  4473: 82 15 58                 s0 = u64 [sp + 0x58]
  4476: 82 16 50                 s1 = u64 [sp + 0x50]
  4479: 95 11 68                 sp = sp + 0x68
  4482: 32 0c                    jump [a5]
      :                          @288
  4484: 7b 15 38                 u64 [sp + 0x38] = s0
  4487: 64 05                    s0 = ra
  4489: 81 78 20                 a1 = i32 [a0 + 0x20]
  4492: 7b 18 10                 u64 [sp + 0x10] = a1
  4495: 7c 7a 28                 a3 = u8 [a0 + 0x28]
  4498: 7b 1a 08                 u64 [sp + 0x8] = a3
  4501: 82 7a 30                 a3 = u64 [a0 + 0x30]
  4504: 82 78 38                 a1 = u64 [a0 + 0x38]
  4507: 48 17 20 30              u32 [a0 + 32] = 0x30
  4511: 7b 17                    u64 [sp] = a0
  4513: 46 17 28 01              u8 [a0 + 40] = 0x1
  4517: 7b 1a 40                 u64 [sp + 0x40] = a3
  4520: 64 a7                    a0 = a3
  4522: 64 86                    s1 = a1
  4524: 82 1a 48                 a3 = u64 [sp + 0x48]
  4527: 64 cb                    a4 = a5
  4529: 50 10 58 13 01           ra = 88, jump @317
      :                          @289 [@dyn 44]
  4534: 52 07 61                 jump @301 if a0 != 0
      :                          @290
  4537: 82 17 38                 a0 = u64 [sp + 0x38]
  4540: c9 57 05                 s0 = a0 - s0
  4543: 95 55 01                 s0 = s0 + 0x1
  4546: 01                       fallthrough
      :                          @291
  4547: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  4550: 51 05 c0 00              jump @312 if s0 == 0
      :                          @292
  4554: 82 69 20                 a2 = u64 [s1 + 0x20]
  4557: 33 08 30                 a1 = 0x30
  4560: 82 17 40                 a0 = u64 [sp + 0x40]
  4563: b4 90 01 5a              ra = 90, jump [a2]
      :                          @293 [@dyn 45]
  4567: 51 07 ec                 jump @291 if a0 == 0
      :                          @294
  4570: 28 3d                    jump @301
      :                          @295
  4572: 98 86 01                 s1 = a1 >> 0x1
  4575: 95 88 01                 a1 = a1 + 0x1
  4578: 98 88 01                 a1 = a1 >> 0x1
  4581: 7b 18 10                 u64 [sp + 0x10] = a1
  4584: 28 06                    jump @297
      :                          @296
  4586: 7b 18 10                 u64 [sp + 0x10] = a1
  4589: 01                       fallthrough
      :                          @297
  4590: 82 78 30                 a1 = u64 [a0 + 0x30]
  4593: 7b 18 40                 u64 [sp + 0x40] = a1
  4596: 82 75 38                 s0 = u64 [a0 + 0x38]
  4599: 81 77 20                 a0 = i32 [a0 + 0x20]
  4602: 7b 17 38                 u64 [sp + 0x38] = a0
  4605: 95 66 01                 s1 = s1 + 0x1
  4608: 01                       fallthrough
      :                          @298
  4609: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  4612: 51 06 27                 jump @303 if s1 == 0
      :                          @299
  4615: 82 59 20                 a2 = u64 [s0 + 0x20]
  4618: 82 17 40                 a0 = u64 [sp + 0x40]
  4621: 82 18 38                 a1 = u64 [sp + 0x38]
  4624: b4 90 01 5c              ra = 92, jump [a2]
      :                          @300 [@dyn 46]
  4628: 51 07 ed                 jump @298 if a0 == 0
      :                          @301
  4631: 33 08 01                 a1 = 0x1
  4634: 01                       fallthrough
      :                          @302
  4635: 64 87                    a0 = a1
  4637: 82 10 60                 ra = u64 [sp + 0x60]
  4640: 82 15 58                 s0 = u64 [sp + 0x58]
  4643: 82 16 50                 s1 = u64 [sp + 0x50]
  4646: 95 11 68                 sp = sp + 0x68
  4649: 32 00                    ret
      :                          @303
  4651: 82 16 40                 s1 = u64 [sp + 0x40]
  4654: 64 67                    a0 = s1
  4656: 64 58                    a1 = s0
  4658: 82 19 18                 a2 = u64 [sp + 0x18]
  4661: 82 1a 48                 a3 = u64 [sp + 0x48]
  4664: 82 1b 20                 a4 = u64 [sp + 0x20]
  4667: 50 10 5e 89 00           ra = 94, jump @317
      :                          @304 [@dyn 47]
  4672: 33 08 01                 a1 = 0x1
  4675: 52 07 d8                 jump @302 if a0 != 0
      :                          @305
  4678: 82 5a 18                 a3 = u64 [s0 + 0x18]
  4681: 64 67                    a0 = s1
  4683: 82 18 28                 a1 = u64 [sp + 0x28]
  4686: 82 19 30                 a2 = u64 [sp + 0x30]
  4689: b4 a0 01 60              ra = 96, jump [a3]
      :                          @306 [@dyn 48]
  4693: 33 08 01                 a1 = 0x1
  4696: 52 07 c3                 jump @302 if a0 != 0
      :                          @307
  4699: 82 17 10                 a0 = u64 [sp + 0x10]
  4702: 9a 77                    a0 = -a0
  4704: 7b 17 48                 u64 [sp + 0x48] = a0
  4707: 33 06 ff                 s1 = 0xffffffffffffffff
  4710: 01                       fallthrough
      :                          @308
  4711: 82 17 48                 a0 = u64 [sp + 0x48]
  4714: c8 67 07                 a0 = a0 + s1
  4717: 51 17 ff 42              jump @315 if a0 == 4294967295
      :                          @309
  4721: 82 59 20                 a2 = u64 [s0 + 0x20]
  4724: 82 17 40                 a0 = u64 [sp + 0x40]
  4727: 82 18 38                 a1 = u64 [sp + 0x38]
  4730: b4 90 01 62              ra = 98, jump [a2]
      :                          @310 [@dyn 49]
  4734: 95 66 01                 s1 = s1 + 0x1
  4737: 51 07 e6                 jump @308 if a0 == 0
      :                          @311
  4740: 28 37                    jump @316
      :                          @312
  4742: 82 6a 18                 a3 = u64 [s1 + 0x18]
  4745: 82 17 40                 a0 = u64 [sp + 0x40]
  4748: 82 18 28                 a1 = u64 [sp + 0x28]
  4751: 82 19 30                 a2 = u64 [sp + 0x30]
  4754: b4 a0 01 64              ra = 100, jump [a3]
      :                          @313 [@dyn 50]
  4758: 33 08 01                 a1 = 0x1
  4761: 52 07 82                 jump @302 if a0 != 0
      :                          @314
  4764: 33 08                    a1 = 0
  4766: 82 16                    s1 = u64 [sp]
  4768: 82 17 10                 a0 = u64 [sp + 0x10]
  4771: 7a 67 20                 u32 [s1 + 0x20] = a0
  4774: 82 17 08                 a0 = u64 [sp + 0x8]
  4777: 78 67 28                 u8 [s1 + 0x28] = a0
  4780: 28 6f ff                 jump @302
      :                          @315
  4783: 82 16 10                 s1 = u64 [sp + 0x10]
  4786: 82 17 10                 a0 = u64 [sp + 0x10]
  4789: d8 76 08                 a1 = s1 <u a0
  4792: 28 63 ff                 jump @302
      :                          @316
  4795: 82 17 10                 a0 = u64 [sp + 0x10]
  4798: d8 76 08                 a1 = s1 <u a0
  4801: 28 5a ff                 jump @302
      :                          @317
  4804: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  4807: 7b 10 20                 u64 [sp + 0x20] = ra
  4810: 7b 15 18                 u64 [sp + 0x18] = s0
  4813: 7b 16 10                 u64 [sp + 0x10] = s1
  4816: 64 a6                    s1 = a3
  4818: 64 7c                    a5 = a0
  4820: 51 39 00 00 11 27        jump @320 if a2 == 1114112
      :                          @318
  4826: 64 85                    s0 = a1
  4828: 82 8a 20                 a3 = u64 [a1 + 0x20]
  4831: 64 c7                    a0 = a5
  4833: 64 98                    a1 = a2
  4835: 7b 1b 08                 u64 [sp + 0x8] = a4
  4838: 7b 1c                    u64 [sp] = a5
  4840: b4 a0 01 66              ra = 102, jump [a3]
      :                          @319 [@dyn 51]
  4844: 82 1c                    a5 = u64 [sp]
  4846: 64 58                    a1 = s0
  4848: 82 1b 08                 a4 = u64 [sp + 0x8]
  4851: 64 79                    a2 = a0
  4853: 33 07 01                 a0 = 0x1
  4856: 52 09 20                 jump @323 if a2 != 0
      :                          @320
  4859: 51 06 1a                 jump @322 if s1 == 0
      :                          @321
  4862: 82 8a 18                 a3 = u64 [a1 + 0x18]
  4865: 64 c7                    a0 = a5
  4867: 64 68                    a1 = s1
  4869: 64 b9                    a2 = a4
  4871: 82 10 20                 ra = u64 [sp + 0x20]
  4874: 82 15 18                 s0 = u64 [sp + 0x18]
  4877: 82 16 10                 s1 = u64 [sp + 0x10]
  4880: 95 11 28                 sp = sp + 0x28
  4883: 32 0a                    jump [a3]
      :                          @322
  4885: 33 07                    a0 = 0
  4887: 01                       fallthrough
      :                          @323
  4888: 82 10 20                 ra = u64 [sp + 0x20]
  4891: 82 15 18                 s0 = u64 [sp + 0x18]
  4894: 82 16 10                 s1 = u64 [sp + 0x10]
  4897: 95 11 28                 sp = sp + 0x28
  4900: 32 00                    ret
      :                          @324
  4902: 95 11 80                 sp = sp + 0xffffffffffffff80
  4905: 7b 10 78                 u64 [sp + 0x78] = ra
  4908: 7b 15 70                 u64 [sp + 0x70] = s0
  4911: 7b 16 68                 u64 [sp + 0x68] = s1
  4914: 49 11 48 20              u64 [sp + 72] = 0x20
  4918: 33 0a 03                 a3 = 0x3
  4921: 78 1a 50                 u8 [sp + 0x50] = a3
  4924: 82 96 20                 s1 = u64 [a2 + 0x20]
  4927: 49 11 28                 u64 [sp + 40] = 0
  4930: 49 11 38                 u64 [sp + 56] = 0
  4933: 7b 17 58                 u64 [sp + 0x58] = a0
  4936: 7b 18 60                 u64 [sp + 0x60] = a1
  4939: 51 06 f5 00              jump @346 if s1 == 0
      :                          @325
  4943: 82 97 28                 a0 = u64 [a2 + 0x28]
  4946: 51 07 57 01              jump @356 if a0 == 0
      :                          @326
  4950: 82 95                    s0 = u64 [a2]
  4952: 7b 19 08                 u64 [sp + 0x8] = a2
  4955: 82 98 10                 a1 = u64 [a2 + 0x10]
  4958: 7b 18 10                 u64 [sp + 0x10] = a1
  4961: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  4964: 97 88 03                 a1 = a1 << 0x3
  4967: 98 88 03                 a1 = a1 >> 0x3
  4970: 95 88 01                 a1 = a1 + 0x1
  4973: 7b 18                    u64 [sp] = a1
  4975: 95 59 08                 a2 = s0 + 0x8
  4978: 97 78 03                 a1 = a0 << 0x3
  4981: 97 77 06                 a0 = a0 << 0x6
  4984: c9 87 05                 s0 = a0 - a1
  4987: 95 66 18                 s1 = s1 + 0x18
  4990: 01                       fallthrough
      :                          @327
  4991: 7b 19 20                 u64 [sp + 0x20] = a2
  4994: 82 99                    a2 = u64 [a2]
  4996: 51 09 1a                 jump @330 if a2 == 0
      :                          @328
  4999: 82 1a 60                 a3 = u64 [sp + 0x60]
  5002: 82 17 20                 a0 = u64 [sp + 0x20]
  5005: 82 78 f8                 a1 = u64 [a0 + 0xfffffffffffffff8]
  5008: 82 17 58                 a0 = u64 [sp + 0x58]
  5011: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5014: b4 a0 01 68              ra = 104, jump [a3]
      :                          @329 [@dyn 52]
  5018: 52 07 34 01              jump @359 if a0 != 0
      :                          @330
  5022: 7b 15 18                 u64 [sp + 0x18] = s0
  5025: 82 67 10                 a0 = u64 [s1 + 0x10]
  5028: 7b 17 48                 u64 [sp + 0x48] = a0
  5031: 7c 69 18                 a2 = u8 [s1 + 0x18]
  5034: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  5037: 82 67                    a0 = u64 [s1]
  5039: 78 19 50                 u8 [sp + 0x50] = a2
  5042: 51 08 21                 jump @335 if a1 == 0
      :                          @331
  5045: 52 18 01 12              jump @333 if a1 != 1
      :                          @332
  5049: 97 77 04                 a0 = a0 << 0x4
  5052: 82 18 10                 a1 = u64 [sp + 0x10]
  5055: c8 87 07                 a0 = a0 + a1
  5058: 82 78                    a1 = u64 [a0]
  5060: 51 08 07                 jump @334 if a1 == 0
      :                          @333
  5063: 33 08                    a1 = 0
  5065: 28 0e                    jump @336
      :                          @334
  5067: 82 77 08                 a0 = u64 [a0 + 0x8]
  5070: 33 08 01                 a1 = 0x1
  5073: 28 06                    jump @336
      :                          @335
  5075: 33 08 01                 a1 = 0x1
  5078: 01                       fallthrough
      :                          @336
  5079: 82 69 e8                 a2 = u64 [s1 + 0xffffffffffffffe8]
  5082: 7b 18 28                 u64 [sp + 0x28] = a1
  5085: 7b 17 30                 u64 [sp + 0x30] = a0
  5088: 51 19 02 19              jump @339 if a2 == 2
      :                          @337
  5092: 82 68 f0                 a1 = u64 [s1 + 0xfffffffffffffff0]
  5095: 52 19 01 1e              jump @341 if a2 != 1
      :                          @338
  5099: 97 87 04                 a0 = a1 << 0x4
  5102: 82 18 10                 a1 = u64 [sp + 0x10]
  5105: c8 87 07                 a0 = a0 + a1
  5108: 82 78                    a1 = u64 [a0]
  5110: 51 08 07                 jump @340 if a1 == 0
      :                          @339
  5113: 33 09                    a2 = 0
  5115: 28 0e                    jump @342
      :                          @340
  5117: 82 78 08                 a1 = u64 [a0 + 0x8]
  5120: 33 09 01                 a2 = 0x1
  5123: 28 06                    jump @342
      :                          @341
  5125: 33 09 01                 a2 = 0x1
  5128: 01                       fallthrough
      :                          @342
  5129: 82 67 08                 a0 = u64 [s1 + 0x8]
  5132: 97 77 04                 a0 = a0 << 0x4
  5135: 82 1a 10                 a3 = u64 [sp + 0x10]
  5138: c8 7a 0a                 a3 = a3 + a0
  5141: 82 a7                    a0 = u64 [a3]
  5143: 82 aa 08                 a3 = u64 [a3 + 0x8]
  5146: 7b 19 38                 u64 [sp + 0x38] = a2
  5149: 7b 18 40                 u64 [sp + 0x40] = a1
  5152: 95 18 28                 a1 = sp + 0x28
  5155: b4 a0 01 6a              ra = 106, jump [a3]
      :                          @343 [@dyn 53]
  5159: 82 15 18                 s0 = u64 [sp + 0x18]
  5162: 52 07 a4 00              jump @359 if a0 != 0
      :                          @344
  5166: 82 19 20                 a2 = u64 [sp + 0x20]
  5169: 95 99 10                 a2 = a2 + 0x10
  5172: 95 55 c8                 s0 = s0 + 0xffffffffffffffc8
  5175: 95 66 38                 s1 = s1 + 0x38
  5178: 52 05 45 ff              jump @327 if s0 != 0
      :                          @345
  5182: 28 5e                    jump @354
      :                          @346
  5184: 82 97 18                 a0 = u64 [a2 + 0x18]
  5187: 51 07 66                 jump @356 if a0 == 0
      :                          @347
  5190: 82 95 10                 s0 = u64 [a2 + 0x10]
  5193: 97 78 04                 a1 = a0 << 0x4
  5196: c8 58 08                 a1 = a1 + s0
  5199: 7b 18 20                 u64 [sp + 0x20] = a1
  5202: 7b 19 08                 u64 [sp + 0x8] = a2
  5205: 82 96                    s1 = u64 [a2]
  5207: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  5210: 97 77 04                 a0 = a0 << 0x4
  5213: 98 77 04                 a0 = a0 >> 0x4
  5216: 95 77 01                 a0 = a0 + 0x1
  5219: 7b 17                    u64 [sp] = a0
  5221: 95 66 08                 s1 = s1 + 0x8
  5224: 01                       fallthrough
      :                          @348
  5225: 82 69                    a2 = u64 [s1]
  5227: 51 09 16                 jump @351 if a2 == 0
      :                          @349
  5230: 82 1a 60                 a3 = u64 [sp + 0x60]
  5233: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  5236: 82 17 58                 a0 = u64 [sp + 0x58]
  5239: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5242: b4 a0 01 6c              ra = 108, jump [a3]
      :                          @350 [@dyn 54]
  5246: 52 07 50                 jump @359 if a0 != 0
      :                          @351
  5249: 82 57                    a0 = u64 [s0]
  5251: 82 59 08                 a2 = u64 [s0 + 0x8]
  5254: 95 18 28                 a1 = sp + 0x28
  5257: b4 90 01 6e              ra = 110, jump [a2]
      :                          @352 [@dyn 55]
  5261: 52 07 41                 jump @359 if a0 != 0
      :                          @353
  5264: 95 55 10                 s0 = s0 + 0x10
  5267: 95 66 10                 s1 = s1 + 0x10
  5270: 82 17 20                 a0 = u64 [sp + 0x20]
  5273: ab 75 d0                 jump @348 if s0 != a0
      :                          @354
  5276: 82 19 08                 a2 = u64 [sp + 0x8]
  5279: 82 1a                    a3 = u64 [sp]
  5281: 82 97 08                 a0 = u64 [a2 + 0x8]
  5284: ac 7a 0d                 jump @357 if a3 <u a0
      :                          @355
  5287: 28 2c                    jump @360
      :                          @356
  5289: 33 0a                    a3 = 0
  5291: 82 97 08                 a0 = u64 [a2 + 0x8]
  5294: 54 07 25                 jump @360 if a0 <=u 0
      :                          @357
  5297: 82 97                    a0 = u64 [a2]
  5299: 97 a8 04                 a1 = a3 << 0x4
  5302: c8 87 09                 a2 = a0 + a1
  5305: 82 1a 60                 a3 = u64 [sp + 0x60]
  5308: 82 17 58                 a0 = u64 [sp + 0x58]
  5311: 82 98                    a1 = u64 [a2]
  5313: 82 99 08                 a2 = u64 [a2 + 0x8]
  5316: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5319: b4 a0 01 70              ra = 112, jump [a3]
      :                          @358 [@dyn 56]
  5323: 51 07 08                 jump @360 if a0 == 0
      :                          @359
  5326: 33 07 01                 a0 = 0x1
  5329: 28 05                    jump @361
      :                          @360
  5331: 33 07                    a0 = 0
  5333: 01                       fallthrough
      :                          @361
  5334: 82 10 78                 ra = u64 [sp + 0x78]
  5337: 82 15 70                 s0 = u64 [sp + 0x70]
  5340: 82 16 68                 s1 = u64 [sp + 0x68]
  5343: 95 11 80 00              sp = sp + 0x80
  5347: 32 00                    ret
      :                          @362 [@dyn 57]
  5349: 95 11 80                 sp = sp + 0xffffffffffffff80
  5352: 7b 10 78                 u64 [sp + 0x78] = ra
  5355: 7b 15 70                 u64 [sp + 0x70] = s0
  5358: 7b 16 68                 u64 [sp + 0x68] = s1
  5361: 33 06                    s1 = 0
  5363: 33 04                    t2 = 0
  5365: 49 11 50                 u64 [sp + 80] = 0
  5368: 33 0b 0a 0a 0a 0a        a4 = 0xa0a0a0a
  5374: 14 00 0a 0a 0a 0a 0a 0a 0a 0a ra = 0xa0a0a0a0a0a0a0a
  5384: 14 0a 00 01 01 01 01 01 01 01 a3 = 0x101010101010100
  5394: 7b 1a 60                 u64 [sp + 0x60] = a3
  5397: 82 7a 10                 a3 = u64 [a0 + 0x10]
  5400: 7b 1a 48                 u64 [sp + 0x48] = a3
  5403: 82 7a                    a3 = u64 [a0]
  5405: 7b 1a 38                 u64 [sp + 0x38] = a3
  5408: 82 77 08                 a0 = u64 [a0 + 0x8]
  5411: 7b 17 30                 u64 [sp + 0x30] = a0
  5414: 7b 18 58                 u64 [sp + 0x58] = a1
  5417: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  5420: 7b 18                    u64 [sp] = a1
  5422: 33 07 82 00 01           a0 = 0x10082
  5427: 7b 17 08                 u64 [sp + 0x8] = a0
  5430: 9a 97                    a0 = -a2
  5432: 7b 17 10                 u64 [sp + 0x10] = a0
  5435: 33 05 0a                 s0 = 0xa
  5438: 7b 19 28                 u64 [sp + 0x28] = a2
  5441: 7b 10 20                 u64 [sp + 0x20] = ra
  5444: 28 3d                    jump @366
      :                          @363
  5446: 82 17                    a0 = u64 [sp]
  5448: c8 67 07                 a0 = a0 + s1
  5451: 7c 77                    a0 = u8 [a0]
  5453: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  5456: 88 77 01                 a0 = a0 <u 0x1
  5459: 01                       fallthrough
      :                          @364
  5460: 82 18 48                 a1 = u64 [sp + 0x48]
  5463: 78 87                    u8 [a1] = a0
  5465: 82 17 30                 a0 = u64 [sp + 0x30]
  5468: 82 7a 18                 a3 = u64 [a0 + 0x18]
  5471: c9 46 09                 a2 = s1 - t2
  5474: 82 18 58                 a1 = u64 [sp + 0x58]
  5477: c8 48 08                 a1 = a1 + t2
  5480: 82 17 38                 a0 = u64 [sp + 0x38]
  5483: b4 a0 01 74              ra = 116, jump [a3]
      :                          @365 [@dyn 58]
  5487: 64 54                    t2 = s0
  5489: 82 19 28                 a2 = u64 [sp + 0x28]
  5492: 82 16 40                 s1 = u64 [sp + 0x40]
  5495: 82 10 20                 ra = u64 [sp + 0x20]
  5498: 33 05 0a                 s0 = 0xa
  5501: 52 07 5c 01              jump @406 if a0 != 0
      :                          @366
  5505: 82 17 50                 a0 = u64 [sp + 0x50]
  5508: 84 77 01                 a0 = a0 & 0x1
  5511: 52 07 4e 01              jump @405 if a0 != 0
      :                          @367
  5515: ae 69 0a                 jump @370 if a2 >=u s1
      :                          @368
  5518: 28 ff 00                 jump @398
      :                          @369
  5521: ac 69 fc 00              jump @398 if a2 <u s1
      :                          @370
  5525: c9 69 02                 t0 = a2 - s1
  5528: 82 13 58                 t1 = u64 [sp + 0x58]
  5531: c8 63 03                 t1 = t1 + s1
  5534: 33 07 0f                 a0 = 0xf
  5537: ac 27 23                 jump @376 if a0 <u t0
      :                          @371
  5540: aa 69 e6 00              jump @397 if a2 == s1
      :                          @372
  5544: 33 08                    a1 = 0
  5546: 82 1c 10                 a5 = u64 [sp + 0x10]
  5549: c8 6c 0c                 a5 = a5 + s1
  5552: 64 3a                    a3 = t1
  5554: 01                       fallthrough
      :                          @373
  5555: 7c ab                    a4 = u8 [a3]
  5557: aa 5b 39                 jump @382 if a4 == s0
      :                          @374
  5560: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  5563: 95 aa 01                 a3 = a3 + 0x1
  5566: ab 8c f5                 jump @373 if a5 != a1
      :                          @375
  5569: 28 c9 00                 jump @397
      :                          @376
  5572: 95 3b 07                 a4 = t1 + 0x7
  5575: 84 bb f8                 a4 = a4 & 0xfffffffffffffff8
  5578: c9 3b 08                 a1 = a4 - t1
  5581: 51 08 2f                 jump @385 if a1 == 0
      :                          @377
  5584: 33 0a                    a3 = 0
  5586: 01                       fallthrough
      :                          @378
  5587: c8 a3 07                 a0 = t1 + a3
  5590: 7c 77                    a0 = u8 [a0]
  5592: aa 57 19                 jump @383 if a0 == s0
      :                          @379
  5595: 95 aa 01                 a3 = a3 + 0x1
  5598: ab a8 f5                 jump @378 if a1 != a3
      :                          @380
  5601: 7b 14 50                 u64 [sp + 0x50] = t2
  5604: 64 64                    t2 = s1
  5606: 95 2a f0                 a3 = t0 + 0xfffffffffffffff0
  5609: ae 8a 20                 jump @386 if a3 >=u a1
      :                          @381
  5612: 28 57                    jump @389
      :                          @382
  5614: 9a 8a                    a3 = -a1
  5616: 01                       fallthrough
      :                          @383
  5617: c8 a6 08                 a1 = s1 + a3
  5620: 95 86 01                 s1 = a1 + 0x1
  5623: ae 98 9a                 jump @369 if a1 >=u a2
      :                          @384
  5626: 28 7e                    jump @395
      :                          @385
  5628: 7b 14 50                 u64 [sp + 0x50] = t2
  5631: 64 64                    t2 = s1
  5633: 95 2a f0                 a3 = t0 + 0xfffffffffffffff0
  5636: 95 bb 08                 a4 = a4 + 0x8
  5639: 28 06                    jump @387
      :                          @386
  5641: 95 bb 08                 a4 = a4 + 0x8
  5644: 01                       fallthrough
      :                          @387
  5645: 82 bc f8                 a5 = u64 [a4 + 0xfffffffffffffff8]
  5648: 82 b6                    s1 = u64 [a4]
  5650: d3 0c 05                 s0 = a5 ^ ra
  5653: 82 17 60                 a0 = u64 [sp + 0x60]
  5656: c9 57 05                 s0 = a0 - s0
  5659: d4 5c 0c                 a5 = a5 | s0
  5662: d3 06 06                 s1 = s1 ^ ra
  5665: 14 05 80 80 80 80 80 80 80 80 s0 = 0x8080808080808080
  5675: c9 67 07                 a0 = a0 - s1
  5678: d4 67 07                 a0 = a0 | s1
  5681: d2 c7 07                 a0 = a0 & a5
  5684: d2 57 07                 a0 = a0 & s0
  5687: ab 57 0c                 jump @389 if a0 != s0
      :                          @388
  5690: 95 88 10                 a1 = a1 + 0x10
  5693: 95 bb 10                 a4 = a4 + 0x10
  5696: ae 8a cd                 jump @387 if a3 >=u a1
      :                          @389
  5699: aa 28 8b 00              jump @404 if a1 == t0
      :                          @390
  5703: 33 0a                    a3 = 0
  5705: c8 83 07                 a0 = t1 + a1
  5708: c9 89 0b                 a4 = a2 - a1
  5711: 64 46                    s1 = t2
  5713: c9 4b 0b                 a4 = a4 - t2
  5716: 82 14 50                 t2 = u64 [sp + 0x50]
  5719: 33 05 0a                 s0 = 0xa
  5722: 01                       fallthrough
      :                          @391
  5723: c8 a7 0c                 a5 = a0 + a3
  5726: 7c cc                    a5 = u8 [a5]
  5728: aa 5c 0b                 jump @394 if a5 == s0
      :                          @392
  5731: 95 aa 01                 a3 = a3 + 0x1
  5734: ab ab f5                 jump @391 if a4 != a3
      :                          @393
  5737: 28 21                    jump @397
      :                          @394
  5739: c8 8a 0a                 a3 = a3 + a1
  5742: c8 a6 08                 a1 = s1 + a3
  5745: 95 86 01                 s1 = a1 + 0x1
  5748: ae 98 1d ff              jump @369 if a1 >=u a2
      :                          @395
  5752: c8 a3 07                 a0 = t1 + a3
  5755: 7c 77                    a0 = u8 [a0]
  5757: ab 57 14 ff              jump @369 if a0 != s0
      :                          @396
  5761: 33 07                    a0 = 0
  5763: 64 65                    s0 = s1
  5765: 7b 16 40                 u64 [sp + 0x40] = s1
  5768: 28 12                    jump @399
      :                          @397
  5770: 64 96                    s1 = a2
  5772: 01                       fallthrough
      :                          @398
  5773: 7b 16 40                 u64 [sp + 0x40] = s1
  5776: 33 07 01                 a0 = 0x1
  5779: 64 45                    s0 = t2
  5781: 64 96                    s1 = a2
  5783: aa 94 3e                 jump @405 if t2 == a2
      :                          @399
  5786: 7b 17 50                 u64 [sp + 0x50] = a0
  5789: 82 17 48                 a0 = u64 [sp + 0x48]
  5792: 7c 77                    a0 = u8 [a0]
  5794: 51 07 23                 jump @402 if a0 == 0
      :                          @400
  5797: 82 17 30                 a0 = u64 [sp + 0x30]
  5800: 82 7a 18                 a3 = u64 [a0 + 0x18]
  5803: 33 09 04                 a2 = 0x4
  5806: 82 17 38                 a0 = u64 [sp + 0x38]
  5809: 82 18 08                 a1 = u64 [sp + 0x8]
  5812: 7b 15 18                 u64 [sp + 0x18] = s0
  5815: 64 45                    s0 = t2
  5817: b4 a0 01 76              ra = 118, jump [a3]
      :                          @401 [@dyn 59]
  5821: 64 54                    t2 = s0
  5823: 82 15 18                 s0 = u64 [sp + 0x18]
  5826: 52 07 17                 jump @406 if a0 != 0
      :                          @402
  5829: ab 46 81 fe              jump @363 if s1 != t2
      :                          @403
  5833: 33 07                    a0 = 0
  5835: 28 89 fe                 jump @364
      :                          @404
  5838: 64 96                    s1 = a2
  5840: 82 14 50                 t2 = u64 [sp + 0x50]
  5843: 28 ba                    jump @398
      :                          @405
  5845: 33 07                    a0 = 0
  5847: 28 06                    jump @407
      :                          @406
  5849: 33 07 01                 a0 = 0x1
  5852: 01                       fallthrough
      :                          @407
  5853: 82 10 78                 ra = u64 [sp + 0x78]
  5856: 82 15 70                 s0 = u64 [sp + 0x70]
  5859: 82 16 68                 s1 = u64 [sp + 0x68]
  5862: 95 11 80 00              sp = sp + 0x80
  5866: 32 00                    ret
      :                          @408 [@dyn 60]
  5868: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  5871: 7b 10 20                 u64 [sp + 0x20] = ra
  5874: 7b 15 18                 u64 [sp + 0x18] = s0
  5877: 7b 16 10                 u64 [sp + 0x10] = s1
  5880: 82 76 10                 s1 = u64 [a0 + 0x10]
  5883: 7c 69                    a2 = u8 [s1]
  5885: 82 7b                    a4 = u64 [a0]
  5887: 82 75 08                 s0 = u64 [a0 + 0x8]
  5890: 51 09 37                 jump @412 if a2 == 0
      :                          @409
  5893: 82 5c 18                 a5 = u64 [s0 + 0x18]
  5896: 33 0a 82 00 01           a3 = 0x10082
  5901: 33 09 04                 a2 = 0x4
  5904: 64 b7                    a0 = a4
  5906: 7b 18 08                 u64 [sp + 0x8] = a1
  5909: 33 08 82 00 01           a1 = 0x10082
  5914: 7b 1b                    u64 [sp] = a4
  5916: b4 c0 01 7a              ra = 122, jump [a5]
      :                          @410 [@dyn 61]
  5920: 82 1b                    a4 = u64 [sp]
  5922: 82 18 08                 a1 = u64 [sp + 0x8]
  5925: 51 07 14                 jump @412 if a0 == 0
      :                          @411
  5928: 33 07 01                 a0 = 0x1
  5931: 82 10 20                 ra = u64 [sp + 0x20]
  5934: 82 15 18                 s0 = u64 [sp + 0x18]
  5937: 82 16 10                 s1 = u64 [sp + 0x10]
  5940: 95 11 28                 sp = sp + 0x28
  5943: 32 00                    ret
      :                          @412
  5945: 95 87 f6                 a0 = a1 + 0xfffffffffffffff6
  5948: 88 77 01                 a0 = a0 <u 0x1
  5951: 78 67                    u8 [s1] = a0
  5953: 82 5c 20                 a5 = u64 [s0 + 0x20]
  5956: 64 b7                    a0 = a4
  5958: 82 10 20                 ra = u64 [sp + 0x20]
  5961: 82 15 18                 s0 = u64 [sp + 0x18]
  5964: 82 16 10                 s1 = u64 [sp + 0x10]
  5967: 95 11 28                 sp = sp + 0x28
  5970: 32 0c                    jump [a5]
      :                          @413 [@dyn 62]
  5972: 64 8a                    a3 = a1
  5974: 33 08 30 02 01           a1 = 0x10230
  5979: 64 a9                    a2 = a3
  5981: 28 c9 fb                 jump @324
      :                          @414
  5984: 00                       trap
      :                          @415
  5985: 51 08 b6 00              jump @438 if a1 == 0
      :                          @416
  5989: 64 79                    a2 = a0
  5991: 7c 77                    a0 = u8 [a0]
  5993: 51 07 ac 00              jump @437 if a0 == 0
      :                          @417
  5997: 51 27 ff 00 f3           jump @414 if a0 == 255
      :                          @418
  6002: 6c 7a                    a3 = sext.b a0
  6004: 57 0a 0b                 jump @420 if a3 <s 0
      :                          @419
  6007: 33 0b                    a4 = 0
  6009: 33 08                    a1 = 0
  6011: 97 77                    a0 = a0 << 0
  6013: 32 00                    ret
      :                          @420
  6015: 55 27 c0 00 10           jump @422 if a0 >=u 192
      :                          @421
  6020: 33 0b 01                 a4 = 0x1
  6023: 33 0c 80                 a5 = 0xffffffffffffff80
  6026: 33 0a 02                 a3 = 0x2
  6029: 28 62                    jump @433
      :                          @422
  6031: 55 27 e0 00 11           jump @424 if a0 >=u 224
      :                          @423
  6036: 33 0b 02                 a4 = 0x2
  6039: 33 0c 40 ff              a5 = 0xffffffffffffff40
  6043: 33 0a 03                 a3 = 0x3
  6046: 28 51                    jump @433
      :                          @424
  6048: 55 27 f0 00 11           jump @426 if a0 >=u 240
      :                          @425
  6053: 33 0b 03                 a4 = 0x3
  6056: 33 0c 20 ff              a5 = 0xffffffffffffff20
  6060: 33 0a 04                 a3 = 0x4
  6063: 28 40                    jump @433
      :                          @426
  6065: 55 27 f8 00 11           jump @428 if a0 >=u 248
      :                          @427
  6070: 33 0b 04                 a4 = 0x4
  6073: 33 0c 10 ff              a5 = 0xffffffffffffff10
  6077: 33 0a 05                 a3 = 0x5
  6080: 28 2f                    jump @433
      :                          @428
  6082: 55 27 fc 00 11           jump @430 if a0 >=u 252
      :                          @429
  6087: 33 0b 05                 a4 = 0x5
  6090: 33 0c 08 ff              a5 = 0xffffffffffffff08
  6094: 33 0a 06                 a3 = 0x6
  6097: 28 1e                    jump @433
      :                          @430
  6099: 55 27 fe 00 11           jump @432 if a0 >=u 254
      :                          @431
  6104: 33 0b 06                 a4 = 0x6
  6107: 33 0c 04 ff              a5 = 0xffffffffffffff04
  6111: 33 0a 07                 a3 = 0x7
  6114: 28 0d                    jump @433
      :                          @432
  6116: 33 0b 07                 a4 = 0x7
  6119: 33 0c 02 ff              a5 = 0xffffffffffffff02
  6123: 33 0a 08                 a3 = 0x8
  6126: 01                       fallthrough
      :                          @433
  6127: ac a8 71 ff              jump @414 if a1 <u a3
      :                          @434
  6131: 33 08                    a1 = 0
  6133: c8 c7 07                 a0 = a0 + a5
  6136: c8 b9 0a                 a3 = a2 + a4
  6139: 01                       fallthrough
      :                          @435
  6140: 7c ac                    a5 = u8 [a3]
  6142: 97 88 08                 a1 = a1 << 0x8
  6145: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  6148: d4 c8 08                 a1 = a1 | a5
  6151: ab 9a f5                 jump @435 if a3 != a2
      :                          @436
  6154: 97 bb 03                 a4 = a4 << 0x3
  6157: cf b7 07                 a0 = a0 << a4
  6160: c8 87 07                 a0 = a0 + a1
  6163: 32 00                    ret
      :                          @437
  6165: 32 00                    ret
      :                          @438
  6167: 00                       trap
      :                          @439 [@dyn 63]
  6168: 95 11 70 ff              sp = sp + 0xffffffffffffff70
  6172: 7b 10 88 00              u64 [sp + 0x88] = ra
  6176: 7b 15 80 00              u64 [sp + 0x80] = s0
  6180: 7b 16 78                 u64 [sp + 0x78] = s1
  6183: 64 85                    s0 = a1
  6185: 82 86 38                 s1 = u64 [a1 + 0x38]
  6188: 82 8a 30                 a3 = u64 [a1 + 0x30]
  6191: 82 6b 18                 a4 = u64 [s1 + 0x18]
  6194: 7b 17 08                 u64 [sp + 0x8] = a0
  6197: 33 08 81 00 01           a1 = 0x10081
  6202: 33 09 01                 a2 = 0x1
  6205: 7b 1a 10                 u64 [sp + 0x10] = a3
  6208: 64 a7                    a0 = a3
  6210: 7b 1b                    u64 [sp] = a4
  6212: b4 b0 02 80 00           ra = 128, jump [a4]
      :                          @440 [@dyn 64]
  6217: 51 07 08                 jump @442 if a0 == 0
      :                          @441
  6220: 33 08 01                 a1 = 0x1
  6223: 28 54                    jump @450
      :                          @442
  6225: 7c 57 24                 a0 = u8 [s0 + 0x24]
  6228: 84 77 04                 a0 = a0 & 0x4
  6231: 52 07 31                 jump @448 if a0 != 0
      :                          @443
  6234: 82 17 08                 a0 = u64 [sp + 0x8]
  6237: 64 58                    a1 = s0
  6239: 50 20 82 00 cc 00        ra = 130, jump @456
      :                          @444 [@dyn 65]
  6245: 33 08 01                 a1 = 0x1
  6248: 52 07 3b                 jump @450 if a0 != 0
      :                          @445
  6251: 82 57 38                 a0 = u64 [s0 + 0x38]
  6254: 82 5a 30                 a3 = u64 [s0 + 0x30]
  6257: 82 7b 18                 a4 = u64 [a0 + 0x18]
  6260: 01                       fallthrough
      :                          @446
  6261: 33 08 8b 00 01           a1 = 0x1008b
  6266: 33 09 01                 a2 = 0x1
  6269: 64 a7                    a0 = a3
  6271: b4 b0 02 84 00           ra = 132, jump [a4]
      :                          @447 [@dyn 66]
  6276: 64 78                    a1 = a0
  6278: 28 1d                    jump @450
      :                          @448
  6280: 33 08 8a 00 01           a1 = 0x1008a
  6285: 33 09 01                 a2 = 0x1
  6288: 82 17 10                 a0 = u64 [sp + 0x10]
  6291: 82 1a                    a3 = u64 [sp]
  6293: b4 a0 02 86 00           ra = 134, jump [a3]
      :                          @449 [@dyn 67]
  6298: 33 08 01                 a1 = 0x1
  6301: 82 1a 10                 a3 = u64 [sp + 0x10]
  6304: 51 07 16                 jump @451 if a0 == 0
      :                          @450
  6307: 64 87                    a0 = a1
  6309: 82 10 88 00              ra = u64 [sp + 0x88]
  6313: 82 15 80 00              s0 = u64 [sp + 0x80]
  6317: 82 16 78                 s1 = u64 [sp + 0x78]
  6320: 95 11 90 00              sp = sp + 0x90
  6324: 32 00                    ret
      :                          @451
  6326: 7b 16 20                 u64 [sp + 0x20] = s1
  6329: 95 17 37                 a0 = sp + 0x37
  6332: 82 58                    a1 = u64 [s0]
  6334: 7b 17 28                 u64 [sp + 0x28] = a0
  6337: 82 57 08                 a0 = u64 [s0 + 0x8]
  6340: 82 59 10                 a2 = u64 [s0 + 0x10]
  6343: 7b 18 38                 u64 [sp + 0x38] = a1
  6346: 82 58 18                 a1 = u64 [s0 + 0x18]
  6349: 7b 17 40                 u64 [sp + 0x40] = a0
  6352: 7b 19 48                 u64 [sp + 0x48] = a2
  6355: 7b 18 50                 u64 [sp + 0x50] = a1
  6358: 82 57 20                 a0 = u64 [s0 + 0x20]
  6361: 82 58 28                 a1 = u64 [s0 + 0x28]
  6364: 46 11 37 01              u8 [sp + 55] = 0x1
  6368: 7b 1a 18                 u64 [sp + 0x18] = a3
  6371: 7b 17 58                 u64 [sp + 0x58] = a0
  6374: 7b 18 60                 u64 [sp + 0x60] = a1
  6377: 95 17 18                 a0 = sp + 0x18
  6380: 7b 17 68                 u64 [sp + 0x68] = a0
  6383: 33 07 30 02 01           a0 = 0x10230
  6388: 7b 17 70                 u64 [sp + 0x70] = a0
  6391: 95 18 38                 a1 = sp + 0x38
  6394: 82 17 08                 a0 = u64 [sp + 0x8]
  6397: 50 20 88 00 2e           ra = 136, jump @456
      :                          @452 [@dyn 68]
  6402: 52 07 4a ff              jump @441 if a0 != 0
      :                          @453
  6406: 82 18 70                 a1 = u64 [sp + 0x70]
  6409: 82 17 68                 a0 = u64 [sp + 0x68]
  6412: 82 8a 18                 a3 = u64 [a1 + 0x18]
  6415: 33 08 88 00 01           a1 = 0x10088
  6420: 33 09 02                 a2 = 0x2
  6423: b4 a0 02 8a 00           ra = 138, jump [a3]
      :                          @454 [@dyn 69]
  6428: 82 1a 10                 a3 = u64 [sp + 0x10]
  6431: 82 1b                    a4 = u64 [sp]
  6433: 33 08 01                 a1 = 0x1
  6436: 51 07 51 ff              jump @446 if a0 == 0
      :                          @455
  6440: 28 7b ff                 jump @450
      :                          @456
  6443: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  6447: 7b 10 80 00              u64 [sp + 0x80] = ra
  6451: 64 82                    t0 = a1
  6453: 80 88 24                 a1 = u32 [a1 + 0x24]
  6456: 84 89 10                 a2 = a1 & 0x10
  6459: 52 09 7d                 jump @465 if a2 != 0
      :                          @457
  6462: 84 88 20                 a1 = a1 & 0x20
  6465: 52 08 b4 00              jump @468 if a1 != 0
      :                          @458
  6469: 7c 78                    a1 = u8 [a0]
  6471: 33 0a 03                 a3 = 0x3
  6474: 33 07 8e 00 01           a0 = 0x1008e
  6479: 64 89                    a2 = a1
  6481: 53 18 0a 28              jump @460 if a1 <u 10
      :                          @459
  6485: 96 89 29                 a2 = a1 * 0x29
  6488: 98 99 0c                 a2 = a2 >> 0xc
  6491: 96 9a 9c                 a3 = a2 * 0xffffffffffffff9c
  6494: c8 8a 0a                 a3 = a3 + a1
  6497: 97 aa 39                 a3 = a3 << 0x39
  6500: 98 aa 38                 a3 = a3 >> 0x38
  6503: c8 7a 0a                 a3 = a3 + a0
  6506: 7c ab                    a4 = u8 [a3]
  6508: 7c aa 01                 a3 = u8 [a3 + 0x1]
  6511: 78 1b 01                 u8 [sp + 0x1] = a4
  6514: 78 1a 02                 u8 [sp + 0x2] = a3
  6517: 33 0a 01                 a3 = 0x1
  6520: 01                       fallthrough
      :                          @460
  6521: 51 08 06                 jump @462 if a1 == 0
      :                          @461
  6524: 51 09 1d                 jump @463 if a2 == 0
      :                          @462
  6527: 97 99 01                 a2 = a2 << 0x1
  6530: 95 99 01                 a2 = a2 + 0x1
  6533: 84 98 ff 00              a1 = a2 & 0xff
  6537: c8 87 07                 a0 = a0 + a1
  6540: 7c 77                    a0 = u8 [a0]
  6542: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  6545: 64 18                    a1 = sp
  6547: c8 a8 08                 a1 = a1 + a3
  6550: 78 87                    u8 [a1] = a0
  6552: 01                       fallthrough
      :                          @463
  6553: 9a ab 03                 a4 = 0x3 - a3
  6556: 64 17                    a0 = sp
  6558: c8 7a 0a                 a3 = a3 + a0
  6561: 33 08 01                 a1 = 0x1
  6564: 64 27                    a0 = t0
  6566: 33 09                    a2 = 0
  6568: 50 20 8c 00 08 f7        ra = 140, jump @271
      :                          @464 [@dyn 70]
  6574: 82 10 80 00              ra = u64 [sp + 0x80]
  6578: 95 11 88 00              sp = sp + 0x88
  6582: 32 00                    ret
      :                          @465
  6584: 7c 7a                    a3 = u8 [a0]
  6586: 33 09 7f                 a2 = 0x7f
  6589: 64 13                    t1 = sp
  6591: 01                       fallthrough
      :                          @466
  6592: 64 98                    a1 = a2
  6594: 98 ab 04                 a4 = a3 >> 0x4
  6597: 84 aa 0f                 a3 = a3 & 0xf
  6600: c8 39 09                 a2 = a2 + t1
  6603: 88 ac 0a                 a5 = a3 <u 0xa
  6606: 86 a7 30                 a0 = a3 | 0x30
  6609: 95 aa 57                 a3 = a3 + 0x57
  6612: db c7 0a                 a3 = a0 if a5 != 0
  6615: 78 9a                    u8 [a2] = a3
  6617: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
  6620: 64 ba                    a3 = a4
  6622: 52 0b e2                 jump @466 if a4 != 0
      :                          @467
  6625: 95 88 01                 a1 = a1 + 0x1
  6628: c8 39 09                 a2 = a2 + t1
  6631: 95 9a 01                 a3 = a2 + 0x1
  6634: 9a 8b 81 00              a4 = 0x81 - a1
  6638: 33 08 8c 00 01           a1 = 0x1008c
  6643: 28 3e                    jump @471
      :                          @468
  6645: 7c 7a                    a3 = u8 [a0]
  6647: 33 09 7f                 a2 = 0x7f
  6650: 64 13                    t1 = sp
  6652: 01                       fallthrough
      :                          @469
  6653: 64 98                    a1 = a2
  6655: 98 ab 04                 a4 = a3 >> 0x4
  6658: 84 aa 0f                 a3 = a3 & 0xf
  6661: c8 39 09                 a2 = a2 + t1
  6664: 88 ac 0a                 a5 = a3 <u 0xa
  6667: 86 a7 30                 a0 = a3 | 0x30
  6670: 95 aa 37                 a3 = a3 + 0x37
  6673: db c7 0a                 a3 = a0 if a5 != 0
  6676: 78 9a                    u8 [a2] = a3
  6678: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
  6681: 64 ba                    a3 = a4
  6683: 52 0b e2                 jump @469 if a4 != 0
      :                          @470
  6686: 95 88 01                 a1 = a1 + 0x1
  6689: c8 39 09                 a2 = a2 + t1
  6692: 95 9a 01                 a3 = a2 + 0x1
  6695: 9a 8b 81 00              a4 = 0x81 - a1
  6699: 33 08 8c 00 01           a1 = 0x1008c
  6704: 01                       fallthrough
      :                          @471
  6705: 33 09 02                 a2 = 0x2
  6708: 64 27                    a0 = t0
  6710: 50 20 8e 00 7a f6        ra = 142, jump @271
      :                          @472 [@dyn 71]
  6716: 82 10 80 00              ra = u64 [sp + 0x80]
  6720: 95 11 88 00              sp = sp + 0x88
  6724: 32 00                    ret
      :                          @473
  6726: 95 11 e8                 sp = sp + 0xffffffffffffffe8
  6729: 7b 10 10                 u64 [sp + 0x10] = ra
  6732: 7b 15 08                 u64 [sp + 0x8] = s0
  6735: 7b 16                    u64 [sp] = s1
  6737: 53 19 10 59              jump @483 if a2 <u 16
      :                          @474
  6741: 8d 7a                    i32 a3 = -a0
  6743: 84 a2 07                 t0 = a3 & 0x7
  6746: c8 27 06                 s1 = a0 + t0
  6749: ae 67 1a                 jump @477 if a0 >=u s1
      :                          @475
  6752: 64 2c                    a5 = t0
  6754: 64 7a                    a3 = a0
  6756: 64 8b                    a4 = a1
  6758: 01                       fallthrough
      :                          @476
  6759: 7c b5                    s0 = u8 [a4]
  6761: 78 a5                    u8 [a3] = s0
  6763: 95 aa 01                 a3 = a3 + 0x1
  6766: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  6769: 95 bb 01                 a4 = a4 + 0x1
  6772: 52 0c f3                 jump @476 if a5 != 0
      :                          @477
  6775: c8 28 08                 a1 = a1 + t0
  6778: c9 29 09                 a2 = a2 - t0
  6781: 84 9c f8                 a5 = a2 & 0xfffffffffffffff8
  6784: 84 8b 07                 a4 = a1 & 0x7
  6787: c8 c6 0a                 a3 = s1 + a5
  6790: 52 0b 49                 jump @486 if a4 != 0
      :                          @478
  6793: ae a6 13                 jump @481 if s1 >=u a3
      :                          @479
  6796: 64 8b                    a4 = a1
  6798: 01                       fallthrough
      :                          @480
  6799: 82 b5                    s0 = u64 [a4]
  6801: 7b 65                    u64 [s1] = s0
  6803: 95 66 08                 s1 = s1 + 0x8
  6806: 95 bb 08                 a4 = a4 + 0x8
  6809: ac a6 f6                 jump @480 if s1 <u a3
      :                          @481
  6812: c8 c8 08                 a1 = a1 + a5
  6815: 84 99 07                 a2 = a2 & 0x7
  6818: c8 9a 0b                 a4 = a3 + a2
  6821: ac ba 0d                 jump @484 if a3 <u a4
      :                          @482
  6824: 28 1a                    jump @485
      :                          @483
  6826: 64 7a                    a3 = a0
  6828: c8 97 0b                 a4 = a0 + a2
  6831: ae b7 13                 jump @485 if a0 >=u a4
      :                          @484
  6834: 7c 8b                    a4 = u8 [a1]
  6836: 78 ab                    u8 [a3] = a4
  6838: 95 aa 01                 a3 = a3 + 0x1
  6841: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  6844: 95 88 01                 a1 = a1 + 0x1
  6847: 52 09 f3                 jump @484 if a2 != 0
      :                          @485
  6850: 82 10 10                 ra = u64 [sp + 0x10]
  6853: 82 15 08                 s0 = u64 [sp + 0x8]
  6856: 82 16                    s1 = u64 [sp]
  6858: 95 11 18                 sp = sp + 0x18
  6861: 32 00                    ret
      :                          @486
  6863: ae a6 cd                 jump @481 if s1 >=u a3
      :                          @487
  6866: 97 85 03                 s0 = a1 << 0x3
  6869: 84 52 38                 t0 = s0 & 0x38
  6872: 84 84 f8                 t2 = a1 & 0xfffffffffffffff8
  6875: 82 4b                    a4 = u64 [t2]
  6877: 8d 55                    i32 s0 = -s0
  6879: 84 53 38                 t1 = s0 & 0x38
  6882: 95 44 08                 t2 = t2 + 0x8
  6885: 01                       fallthrough
      :                          @488
  6886: 82 45                    s0 = u64 [t2]
  6888: d0 2b 00                 ra = a4 >> t0
  6891: cf 35 0b                 a4 = s0 << t1
  6894: d4 0b 0b                 a4 = a4 | ra
  6897: 7b 6b                    u64 [s1] = a4
  6899: 95 66 08                 s1 = s1 + 0x8
  6902: 95 44 08                 t2 = t2 + 0x8
  6905: 64 5b                    a4 = s0
  6907: ac a6 eb                 jump @488 if s1 <u a3
      :                          @489
  6910: 28 9e                    jump @481
