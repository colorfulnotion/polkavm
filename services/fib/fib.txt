// RO data = 656/656 bytes
// RW data = 16/16773200 bytes
// Stack size = 16773120 bytes
// RO data = [70, 73, 66, 32, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 58, 32, 116, 105, 109, 101, 115, 108, 111, 116, 61, 32, 115, 101, 114, 118, 105, 99, 101, 95, 105, 110, 100, 101, 120, 61, 32, 115, 101, 110, 100, 101, 114, 61, 32, 97, 109, 111, 117, 110, 116, 61, 32, 114, 101, 99, 101, 105, 118, 101, 114, 61, 32, 109, 101, 109, 111, 61, 32, 103, 97, 115, 95, 108, 105, 109, 105, 116, 61, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 26, 0, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 41, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 57, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 49, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 67, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 73, 0, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 70, 73, 66, 32, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 32, 103, 97, 115, 58, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 52, 41, 0, 0, 0, 200, 0, 1, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 225, 0, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 52, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 54, 0, 0, 0, 0, 0, 0, 0, 60, 0, 0, 0, 0, 0, 0, 0, 68, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 102, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 104, 0, 0, 0, 0, 0, 0, 0, 110, 0, 0, 0, 0, 0, 0, 0, 114, 0, 0, 0, 0, 0, 0, 0, 32, 32, 32, 32, 44, 32, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 119, 114, 105, 116, 101, 95, 114, 101, 115, 117, 108, 116, 32, 107, 101, 121, 61, 44, 32, 114, 101, 115, 117, 108, 116, 61, 0, 0, 84, 2, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 101, 2, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0]
// RW data = [75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 2235
// Code size = 6699 bytes

      :                          @0
     0: 28 ea 01 00 00           jump @34
      :                          @1
     5: 28 40 02 00 00           jump @39
      :                          @2
    10: 28 12 04                 jump @96
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 80 89 34                 a2 = u32 [a1 + 0x34]
    24: 84 9a 10                 a3 = a2 & 0x10
    27: 52 0a 16                 jump @6 if a3 != 0
      :                          @4
    30: 84 99 20                 a2 = a2 & 0x20
    33: 52 09 40                 jump @9 if a2 != 0
      :                          @5
    36: 80 77                    a0 = u32 [a0]
    38: 82 10 80 00              ra = u64 [sp + 0x80]
    42: 95 11 88 00              sp = sp + 0x88
    46: 28 0b 0f                 jump @272
      :                          @6
    49: 81 7b                    a4 = i32 [a0]
    51: 33 09 81 00              a2 = 0x81
    55: 95 17 7f                 a0 = sp + 0x7f
    58: 33 02 57                 t0 = 0x57
    61: 01                       fallthrough
      :                          @7
    62: 64 9c                    a5 = a2
    64: 8b ba 04                 i32 a3 = a4 >> 0x4
    67: 84 bb 0f                 a4 = a4 & 0xf
    70: 88 b3 0a                 t1 = a4 <u 0xa
    73: 33 09 30                 a2 = 0x30
    76: da 32 09                 a2 = t0 if t1 == 0
    79: be b9 09                 i32 a2 = a2 + a4
    82: 78 79                    u8 [a0] = a2
    84: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
    87: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
    90: 64 ab                    a4 = a3
    92: 52 0a e2                 jump @7 if a3 != 0
      :                          @8
    95: 28 30                    jump @11
      :                          @9
    97: 81 7b                    a4 = i32 [a0]
    99: 33 09 81 00              a2 = 0x81
   103: 95 17 7f                 a0 = sp + 0x7f
   106: 33 02 37                 t0 = 0x37
   109: 01                       fallthrough
      :                          @10
   110: 64 9c                    a5 = a2
   112: 8b ba 04                 i32 a3 = a4 >> 0x4
   115: 84 bb 0f                 a4 = a4 & 0xf
   118: 88 b3 0a                 t1 = a4 <u 0xa
   121: 33 09 30                 a2 = 0x30
   124: da 32 09                 a2 = t0 if t1 == 0
   127: be b9 09                 i32 a2 = a2 + a4
   130: 78 79                    u8 [a0] = a2
   132: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   135: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   138: 64 ab                    a4 = a3
   140: 52 0a e2                 jump @10 if a3 != 0
      :                          @11
   143: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   146: 56 27 80 00 27           jump @14 if a0 >u 128
      :                          @12
   151: 9a 9b 81 00              a4 = 0x81 - a2
   155: 64 1a                    a3 = sp
   157: c8 7a 0a                 a3 = a3 + a0
   160: 33 09 02                 a2 = 0x2
   163: 64 87                    a0 = a1
   165: 33 08 8a 01 01           a1 = 0x1018a
   170: 50 10 04 b6 0f           ra = 4, jump @282
      :                          @13 [@dyn 2]
   175: 82 10 80 00              ra = u64 [sp + 0x80]
   179: 95 11 88 00              sp = sp + 0x88
   183: 32 00                    ret
      :                          @14
   185: 00                       trap
      :                          @15 [@dyn 3]
   186: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   190: 7b 10 80 00              u64 [sp + 0x80] = ra
   194: 80 89 34                 a2 = u32 [a1 + 0x34]
   197: 84 9a 10                 a3 = a2 & 0x10
   200: 52 0a 16                 jump @18 if a3 != 0
      :                          @16
   203: 84 99 20                 a2 = a2 & 0x20
   206: 52 09 40                 jump @21 if a2 != 0
      :                          @17
   209: 82 77                    a0 = u64 [a0]
   211: 82 10 80 00              ra = u64 [sp + 0x80]
   215: 95 11 88 00              sp = sp + 0x88
   219: 28 5e 0e                 jump @272
      :                          @18
   222: 82 7b                    a4 = u64 [a0]
   224: 33 09 81 00              a2 = 0x81
   228: 95 17 7f                 a0 = sp + 0x7f
   231: 33 02 57                 t0 = 0x57
   234: 01                       fallthrough
      :                          @19
   235: 64 9c                    a5 = a2
   237: 98 ba 04                 a3 = a4 >> 0x4
   240: 84 bb 0f                 a4 = a4 & 0xf
   243: 88 b3 0a                 t1 = a4 <u 0xa
   246: 33 09 30                 a2 = 0x30
   249: da 32 09                 a2 = t0 if t1 == 0
   252: be b9 09                 i32 a2 = a2 + a4
   255: 78 79                    u8 [a0] = a2
   257: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   260: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   263: 64 ab                    a4 = a3
   265: 52 0a e2                 jump @19 if a3 != 0
      :                          @20
   268: 28 30                    jump @23
      :                          @21
   270: 82 7b                    a4 = u64 [a0]
   272: 33 09 81 00              a2 = 0x81
   276: 95 17 7f                 a0 = sp + 0x7f
   279: 33 02 37                 t0 = 0x37
   282: 01                       fallthrough
      :                          @22
   283: 64 9c                    a5 = a2
   285: 98 ba 04                 a3 = a4 >> 0x4
   288: 84 bb 0f                 a4 = a4 & 0xf
   291: 88 b3 0a                 t1 = a4 <u 0xa
   294: 33 09 30                 a2 = 0x30
   297: da 32 09                 a2 = t0 if t1 == 0
   300: be b9 09                 i32 a2 = a2 + a4
   303: 78 79                    u8 [a0] = a2
   305: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   308: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   311: 64 ab                    a4 = a3
   313: 52 0a e2                 jump @22 if a3 != 0
      :                          @23
   316: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   319: 56 27 80 00 27           jump @26 if a0 >u 128
      :                          @24
   324: 9a 9b 81 00              a4 = 0x81 - a2
   328: 64 1a                    a3 = sp
   330: c8 7a 0a                 a3 = a3 + a0
   333: 33 09 02                 a2 = 0x2
   336: 64 87                    a0 = a1
   338: 33 08 8a 01 01           a1 = 0x1018a
   343: 50 10 08 09 0f           ra = 8, jump @282
      :                          @25 [@dyn 4]
   348: 82 10 80 00              ra = u64 [sp + 0x80]
   352: 95 11 88 00              sp = sp + 0x88
   356: 32 00                    ret
      :                          @26
   358: 00                       trap
      :                          @27 [@dyn 5]
   359: 95 11 c8                 sp = sp + 0xffffffffffffffc8
   362: 7b 10 30                 u64 [sp + 0x30] = ra
   365: 7b 15 28                 u64 [sp + 0x28] = s0
   368: 7b 16 20                 u64 [sp + 0x20] = s1
   371: 64 86                    s1 = a1
   373: 82 88 28                 a1 = u64 [a1 + 0x28]
   376: 82 6a 20                 a3 = u64 [s1 + 0x20]
   379: 82 8b 18                 a4 = u64 [a1 + 0x18]
   382: 64 75                    s0 = a0
   384: 33 08 48 01 01           a1 = 0x10148
   389: 33 09 01                 a2 = 0x1
   392: 64 a7                    a0 = a3
   394: b4 b0 01 0c              ra = 12, jump [a4]
      :                          @28 [@dyn 6]
   398: 7b 16 08                 u64 [sp + 0x8] = s1
   401: 78 17 10                 u8 [sp + 0x10] = a0
   404: 46 11 11                 u8 [sp + 17] = 0
   407: 33 06 80 00              s1 = 0x80
   411: 33 07 86 00              a0 = 0x86
   415: 7b 17                    u64 [sp] = a0
   417: 01                       fallthrough
      :                          @29
   418: 7b 15 18                 u64 [sp + 0x18] = s0
   421: 95 17 08                 a0 = sp + 0x8
   424: 95 18 18                 a1 = sp + 0x18
   427: 82 19                    a2 = u64 [sp]
   429: 50 10 0e 83 15           ra = 14, jump @426
      :                          @30 [@dyn 7]
   434: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
   437: 95 55 01                 s0 = s0 + 0x1
   440: 52 06 ea                 jump @29 if s1 != 0
      :                          @31
   443: 7c 18 10                 a1 = u8 [sp + 0x10]
   446: 33 07 01                 a0 = 0x1
   449: 52 08 1b                 jump @33 if a1 != 0
      :                          @32
   452: 82 17 08                 a0 = u64 [sp + 0x8]
   455: 82 78 28                 a1 = u64 [a0 + 0x28]
   458: 82 77 20                 a0 = u64 [a0 + 0x20]
   461: 82 8a 18                 a3 = u64 [a1 + 0x18]
   464: 33 08 89 01 01           a1 = 0x10189
   469: 33 09 01                 a2 = 0x1
   472: b4 a0 01 10              ra = 16, jump [a3]
      :                          @33 [@dyn 8]
   476: 82 10 30                 ra = u64 [sp + 0x30]
   479: 82 15 28                 s0 = u64 [sp + 0x28]
   482: 82 16 20                 s1 = u64 [sp + 0x20]
   485: 95 11 38                 sp = sp + 0x38
   488: 32 00                    ret
      :                          @34 [export #0: 'refine']
   490: 95 11 e0                 sp = sp + 0xffffffffffffffe0
   493: 7b 10 18                 u64 [sp + 0x18] = ra
   496: 7b 15 10                 u64 [sp + 0x10] = s0
   499: 48 11 08                 u32 [sp + 8] = 0
   502: 49 01                    u64 [sp + 0] = 0
   504: 64 17                    a0 = sp
   506: 33 09 0c                 a2 = 0xc
   509: 33 0a 05                 a3 = 0x5
   512: 33 08                    a1 = 0
   514: 33 0b                    a4 = 0
   516: 33 0c                    a5 = 0
   518: 0a 12                    ecalli 18 // 'fetch'
   520: 01                       fallthrough
      :                          @35
   521: 51 17 ff 14              jump @37 if a0 == 4294967295
      :                          @36
   525: 81 17 04                 a0 = i32 [sp + 0x4]
   528: 81 18 08                 a1 = i32 [sp + 0x8]
   531: 81 19                    a2 = i32 [sp]
   533: be 78 08                 i32 a1 = a1 + a0
   536: 83 99 01                 i32 a2 = a2 + 0x1
   539: 28 0b                    jump @38
      :                          @37
   541: 33 07                    a0 = 0
   543: 33 09 01                 a2 = 0x1
   546: 33 08 01                 a1 = 0x1
   549: 01                       fallthrough
      :                          @38
   550: 7a 19                    u32 [sp] = a2
   552: 7a 18 04                 u32 [sp + 0x4] = a1
   555: 7a 17 08                 u32 [sp + 0x8] = a0
   558: 64 17                    a0 = sp
   560: 33 08 0c                 a1 = 0xc
   563: 0a 13                    ecalli 19 // 'export'
   565: 64 17                    a0 = sp
   567: 33 08 0c                 a1 = 0xc
   570: 82 10 18                 ra = u64 [sp + 0x18]
   573: 82 15 10                 s0 = u64 [sp + 0x10]
   576: 95 11 20                 sp = sp + 0x20
   579: 32 00                    ret
      :                          @39 [export #1: 'accumulate']
   581: 95 11 d8                 sp = sp + 0xffffffffffffffd8
   584: 7b 10 20                 u64 [sp + 0x20] = ra
   587: 7b 15 18                 u64 [sp + 0x18] = s0
   590: 7b 16 10                 u64 [sp + 0x10] = s1
   593: 33 09 08                 a2 = 0x8
   596: ac 98 fa 00              jump @71 if a1 <u a2
      :                          @40
   600: 51 17 fc c0 01           jump @92 if a0 == 4294967292
      :                          @41
   605: 51 07 bb 01              jump @92 if a0 == 0
      :                          @42
   609: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
   612: 95 75 08                 s0 = a0 + 0x8
   615: 51 0a 45                 jump @52 if a3 == 0
      :                          @43
   618: 7d 58                    a1 = i8 [s0]
   620: 33 06 01                 s1 = 0x1
   623: 59 08 40                 jump @53 if a1 >=s 0
      :                          @44
   626: 84 89 ff 00              a2 = a1 & 0xff
   630: 33 06 02                 s1 = 0x2
   633: 53 29 c0 00 2d           jump @50 if a2 <u 192
      :                          @45
   638: 33 06 03                 s1 = 0x3
   641: 53 29 e0 00 25           jump @50 if a2 <u 224
      :                          @46
   646: 33 06 04                 s1 = 0x4
   649: 53 29 f0 00 1d           jump @50 if a2 <u 240
      :                          @47
   654: 33 06 05                 s1 = 0x5
   657: 53 29 f8 00 15           jump @50 if a2 <u 248
      :                          @48
   662: 33 06 06                 s1 = 0x6
   665: 53 29 fc 00 0d           jump @50 if a2 <u 252
      :                          @49
   670: 88 98 fe 00              a1 = a2 <u 0xfe
   674: 9a 86 08                 s1 = 0x8 - a1
   677: 01                       fallthrough
      :                          @50
   678: ae 6a 09                 jump @53 if a3 >=u s1
      :                          @51
   681: 28 a5 00                 jump @71
      :                          @52
   684: 33 06                    s1 = 0
   686: 01                       fallthrough
      :                          @53
   687: 7b 16                    u64 [sp] = s1
   689: 64 57                    a0 = s0
   691: 64 68                    a1 = s1
   693: 64 a6                    s1 = a3
   695: 50 10 12 b3 15           ra = 18, jump @443
      :                          @54 [@dyn 9]
   700: 82 1a                    a3 = u64 [sp]
   702: 51 07 90 00              jump @71 if a0 == 0
      :                          @55
   706: e4 a6 07                 a0 = maxu(s1, a3)
   709: c9 a7 07                 a0 = a0 - a3
   712: 53 17 60 86 00           jump @71 if a0 <u 96
      :                          @56
   717: c8 5a 08                 a1 = a3 + s0
   720: 95 76 a0                 s1 = a0 + 0xffffffffffffffa0
   723: 95 87 60                 a0 = a1 + 0x60
   726: 7b 17                    u64 [sp] = a0
   728: 51 06 4c                 jump @67 if s1 == 0
      :                          @57
   731: 7d 78                    a1 = i8 [a0]
   733: 33 05 01                 s0 = 0x1
   736: 59 08 37                 jump @64 if a1 >=s 0
      :                          @58
   739: 84 89 ff 00              a2 = a1 & 0xff
   743: 33 05 02                 s0 = 0x2
   746: 53 29 c0 00 2d           jump @64 if a2 <u 192
      :                          @59
   751: 33 05 03                 s0 = 0x3
   754: 53 29 e0 00 25           jump @64 if a2 <u 224
      :                          @60
   759: 33 05 04                 s0 = 0x4
   762: 53 29 f0 00 1d           jump @64 if a2 <u 240
      :                          @61
   767: 33 05 05                 s0 = 0x5
   770: 53 29 f8 00 15           jump @64 if a2 <u 248
      :                          @62
   775: 33 05 06                 s0 = 0x6
   778: 53 29 fc 00 0d           jump @64 if a2 <u 252
      :                          @63
   783: 88 98 fe 00              a1 = a2 <u 0xfe
   787: 9a 85 08                 s0 = 0x8 - a1
   790: 01                       fallthrough
      :                          @64
   791: ac 56 02 01              jump @93 if s1 <u s0
      :                          @65
   795: 64 58                    a1 = s0
   797: 50 10 14 4d 15           ra = 20, jump @443
      :                          @66 [@dyn 10]
   802: 28 07                    jump @68
      :                          @67
   804: 33 05                    s0 = 0
   806: 33 07                    a0 = 0
   808: 01                       fallthrough
      :                          @68
   809: e4 56 08                 a1 = maxu(s1, s0)
   812: c9 58 08                 a1 = a1 - s0
   815: e4 78 08                 a1 = maxu(a1, a0)
   818: c9 78 08                 a1 = a1 - a0
   821: 33 09 20                 a2 = 0x20
   824: ac 98 16                 jump @71 if a1 <u a2
      :                          @69
   827: 82 19                    a2 = u64 [sp]
   829: c8 95 05                 s0 = s0 + a2
   832: c8 57 07                 a0 = a0 + s0
   835: 51 17 e0 d5 00           jump @92 if a0 == 4294967264
      :                          @70
   840: 33 09 29                 a2 = 0x29
   843: ae 98 1b                 jump @73 if a1 >=u a2
      :                          @71
   846: 33 08                    a1 = 0
   848: 33 06 00 00 01           s1 = 0x10000
   853: 01                       fallthrough
      :                          @72
   854: 64 67                    a0 = s1
   856: 82 10 20                 ra = u64 [sp + 0x20]
   859: 82 15 18                 s0 = u64 [sp + 0x18]
   862: 82 16 10                 s1 = u64 [sp + 0x10]
   865: 95 11 28                 sp = sp + 0x28
   868: 32 00                    ret
      :                          @73
   870: 7c 79 28                 a2 = u8 [a0 + 0x28]
   873: 51 09 19                 jump @75 if a2 == 0
      :                          @74
   876: 46 11 0e                 u8 [sp + 14] = 0
   879: 95 17 0e                 a0 = sp + 0xe
   882: 33 08 01                 a1 = 0x1
   885: 33 09                    a2 = 0
   887: 33 0a                    a3 = 0
   889: 0a 03                    ecalli 3 // 'write'
   891: 33 08                    a1 = 0
   893: 33 05                    s0 = 0
   895: 28 82 00                 jump @90
      :                          @75
   898: 95 8a d7                 a3 = a1 + 0xffffffffffffffd7
   901: 95 76 29                 s1 = a0 + 0x29
   904: 51 0a 51                 jump @86 if a3 == 0
      :                          @76
   907: 7d 67                    a0 = i8 [s1]
   909: 33 05 01                 s0 = 0x1
   912: 59 07 37                 jump @83 if a0 >=s 0
      :                          @77
   915: 84 77 ff 00              a0 = a0 & 0xff
   919: 33 05 02                 s0 = 0x2
   922: 53 27 c0 00 2d           jump @83 if a0 <u 192
      :                          @78
   927: 33 05 03                 s0 = 0x3
   930: 53 27 e0 00 25           jump @83 if a0 <u 224
      :                          @79
   935: 33 05 04                 s0 = 0x4
   938: 53 27 f0 00 1d           jump @83 if a0 <u 240
      :                          @80
   943: 33 05 05                 s0 = 0x5
   946: 53 27 f8 00 15           jump @83 if a0 <u 248
      :                          @81
   951: 33 05 06                 s0 = 0x6
   954: 53 27 fc 00 0d           jump @83 if a0 <u 252
      :                          @82
   959: 88 77 fe 00              a0 = a0 <u 0xfe
   963: 9a 75 08                 s0 = 0x8 - a0
   966: 01                       fallthrough
      :                          @83
   967: 7b 1a                    u64 [sp] = a3
   969: ac 5a 52                 jump @95 if a3 <u s0
      :                          @84
   972: 64 67                    a0 = s1
   974: 64 58                    a1 = s0
   976: 50 10 16 9a 14           ra = 22, jump @443
      :                          @85 [@dyn 11]
   981: 82 1a                    a3 = u64 [sp]
   983: 28 07                    jump @87
      :                          @86
   985: 33 05                    s0 = 0
   987: 33 07                    a0 = 0
   989: 01                       fallthrough
      :                          @87
   990: c8 56 09                 a2 = s1 + s0
   993: e4 5a 08                 a1 = maxu(a3, s0)
   996: c9 58 08                 a1 = a1 - s0
   999: e6 78 05                 s0 = minu(a1, a0)
  1002: 46 11 0e                 u8 [sp + 14] = 0
  1005: 95 17 0e                 a0 = sp + 0xe
  1008: 33 08 01                 a1 = 0x1
  1011: 64 96                    s1 = a2
  1013: 64 5a                    a3 = s0
  1015: 0a 03                    ecalli 3 // 'write'
  1017: 01                       fallthrough
      :                          @88
  1018: 55 15 21 20              jump @94 if s0 >=u 33
      :                          @89
  1022: 64 68                    a1 = s1
  1024: 01                       fallthrough
      :                          @90
  1025: 33 06 11 00 03           s1 = 0x30011
  1030: 33 07 11 00 03           a0 = 0x30011
  1035: 64 59                    a2 = s0
  1037: 50 10 18 76 0a           ra = 24, jump @252
      :                          @91 [@dyn 12]
  1042: 33 08 20                 a1 = 0x20
  1045: 28 41 ff                 jump @72
      :                          @92
  1048: 00                       trap
      :                          @93
  1049: 00                       trap
      :                          @94
  1050: 00                       trap
      :                          @95
  1051: 00                       trap
      :                          @96 [export #2: 'on_transfer']
  1052: 95 11 78 fd              sp = sp + 0xfffffffffffffd78
  1056: 7b 10 80 02              u64 [sp + 0x280] = ra
  1060: 7b 15 78 02              u64 [sp + 0x278] = s0
  1064: 7b 16 70 02              u64 [sp + 0x270] = s1
  1068: 64 76                    s1 = a0
  1070: 33 02                    t0 = 0
  1072: 95 7b 04                 a4 = a0 + 0x4
  1075: 33 07 02                 a0 = 0x2
  1078: 7b 17 28                 u64 [sp + 0x28] = a0
  1081: 33 07 06                 a0 = 0x6
  1084: 7b 17 50                 u64 [sp + 0x50] = a0
  1087: 33 07 0a                 a0 = 0xa
  1090: 7b 17 20                 u64 [sp + 0x20] = a0
  1093: 33 07 58 00 01           a0 = 0x10058
  1098: 7b 17 18                 u64 [sp + 0x18] = a0
  1101: 33 07 7e                 a0 = 0x7e
  1104: 7b 17 10                 u64 [sp + 0x10] = a0
  1107: 33 07 70 02 01           a0 = 0x10270
  1112: 7b 17 08                 u64 [sp + 0x8] = a0
  1115: 33 07 f8 00 01           a0 = 0x100f8
  1120: 7b 17                    u64 [sp] = a0
  1122: 33 03 40 00 03           t1 = 0x30040
  1127: 95 67 08                 a0 = s1 + 0x8
  1130: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
  1133: 95 69 0c                 a2 = s1 + 0xc
  1136: 7b 19 58                 u64 [sp + 0x58] = a2
  1139: 33 09 08                 a2 = 0x8
  1142: 7b 17 b8 00              u64 [sp + 0xb8] = a0
  1146: 7b 17 b0 00              u64 [sp + 0xb0] = a0
  1150: 7b 18 40                 u64 [sp + 0x40] = a1
  1153: 7b 16 38                 u64 [sp + 0x38] = s1
  1156: 7b 1b 30                 u64 [sp + 0x30] = a4
  1159: 7b 13 48                 u64 [sp + 0x48] = t1
  1162: 7b 1a a0 00              u64 [sp + 0xa0] = a3
  1166: ac 98 fb 04              jump @144 if a1 <u a2
      :                          @97
  1170: 51 06 10 05              jump @145 if s1 == 0
      :                          @98
  1174: 51 0b 0c 05              jump @145 if a4 == 0
      :                          @99
  1178: 7c 67                    a0 = u8 [s1]
  1180: 7b 17 70                 u64 [sp + 0x70] = a0
  1183: 7c 67 01                 a0 = u8 [s1 + 0x1]
  1186: 7b 17 60                 u64 [sp + 0x60] = a0
  1189: 7c 67 02                 a0 = u8 [s1 + 0x2]
  1192: 7b 17 68                 u64 [sp + 0x68] = a0
  1195: 7c 67 03                 a0 = u8 [s1 + 0x3]
  1198: 7b 17 78                 u64 [sp + 0x78] = a0
  1201: 7c b7                    a0 = u8 [a4]
  1203: 7b 17 90 00              u64 [sp + 0x90] = a0
  1207: 7c b7 01                 a0 = u8 [a4 + 0x1]
  1210: 7b 17 80 00              u64 [sp + 0x80] = a0
  1214: 7c b7 02                 a0 = u8 [a4 + 0x2]
  1217: 7b 17 88 00              u64 [sp + 0x88] = a0
  1221: 7c b7 03                 a0 = u8 [a4 + 0x3]
  1224: 7b 17 98 00              u64 [sp + 0x98] = a0
  1228: 51 0a 49                 jump @109 if a3 == 0
      :                          @100
  1231: 82 17 b8 00              a0 = u64 [sp + 0xb8]
  1235: 7d 77                    a0 = i8 [a0]
  1237: 33 05 01                 s0 = 0x1
  1240: 59 07 40                 jump @110 if a0 >=s 0
      :                          @101
  1243: 84 77 ff 00              a0 = a0 & 0xff
  1247: 33 05 02                 s0 = 0x2
  1250: 53 27 c0 00 2d           jump @107 if a0 <u 192
      :                          @102
  1255: 33 05 03                 s0 = 0x3
  1258: 53 27 e0 00 25           jump @107 if a0 <u 224
      :                          @103
  1263: 33 05 04                 s0 = 0x4
  1266: 53 27 f0 00 1d           jump @107 if a0 <u 240
      :                          @104
  1271: 33 05 05                 s0 = 0x5
  1274: 53 27 f8 00 15           jump @107 if a0 <u 248
      :                          @105
  1279: 33 05 06                 s0 = 0x6
  1282: 53 27 fc 00 0d           jump @107 if a0 <u 252
      :                          @106
  1287: 88 77 fe 00              a0 = a0 <u 0xfe
  1291: 9a 75 08                 s0 = 0x8 - a0
  1294: 01                       fallthrough
      :                          @107
  1295: ae 5a 09                 jump @110 if a3 >=u s0
      :                          @108
  1298: 28 77 04                 jump @144
      :                          @109
  1301: 33 05                    s0 = 0
  1303: 01                       fallthrough
      :                          @110
  1304: 82 17 b8 00              a0 = u64 [sp + 0xb8]
  1308: 64 58                    a1 = s0
  1310: 7b 12 a8 00              u64 [sp + 0xa8] = t0
  1314: 50 10 1a 48 13           ra = 26, jump @443
      :                          @111 [@dyn 13]
  1319: 33 04 98 00              t2 = 0x98
  1323: 33 03 04                 t1 = 0x4
  1326: 33 02 08                 t0 = 0x8
  1329: 82 1c a0 00              a5 = u64 [sp + 0xa0]
  1333: 82 1b a8 00              a4 = u64 [sp + 0xa8]
  1337: ae 7b 50 04              jump @144 if a4 >=u a0
      :                          @112
  1341: 82 16 60                 s1 = u64 [sp + 0x60]
  1344: 97 66 08                 s1 = s1 << 0x8
  1347: 82 18 70                 a1 = u64 [sp + 0x70]
  1350: d4 68 08                 a1 = a1 | s1
  1353: 82 19 68                 a2 = u64 [sp + 0x68]
  1356: 97 99 10                 a2 = a2 << 0x10
  1359: 82 1a 78                 a3 = u64 [sp + 0x78]
  1362: 97 aa 18                 a3 = a3 << 0x18
  1365: d4 a9 09                 a2 = a2 | a3
  1368: d4 89 06                 s1 = a2 | a1
  1371: 82 18 80 00              a1 = u64 [sp + 0x80]
  1375: 97 88 08                 a1 = a1 << 0x8
  1378: 82 19 90 00              a2 = u64 [sp + 0x90]
  1382: d4 98 08                 a1 = a1 | a2
  1385: 82 19 88 00              a2 = u64 [sp + 0x88]
  1389: 97 99 10                 a2 = a2 << 0x10
  1392: 82 1a 98 00              a3 = u64 [sp + 0x98]
  1396: 97 aa 18                 a3 = a3 << 0x18
  1399: d4 a9 09                 a2 = a2 | a3
  1402: d4 89 00                 ra = a2 | a1
  1405: e4 5c 08                 a1 = maxu(a5, s0)
  1408: c9 58 08                 a1 = a1 - s0
  1411: 82 19 b0 00              a2 = u64 [sp + 0xb0]
  1415: c8 59 09                 a2 = a2 + s0
  1418: 82 1a 58                 a3 = u64 [sp + 0x58]
  1421: c8 a5 05                 s0 = s0 + a3
  1424: 64 ba                    a3 = a4
  1426: 01                       fallthrough
      :                          @113
  1427: ac 28 f6 03              jump @144 if a1 <u t0
      :                          @114
  1431: aa 35 0b 04              jump @145 if s0 == t1
      :                          @115
  1435: 51 05 07 04              jump @145 if s0 == 0
      :                          @116
  1439: ac 48 ea 03              jump @144 if a1 <u t2
      :                          @117
  1443: 51 0a 17                 jump @120 if a3 == 0
      :                          @118
  1446: 95 88 68 ff              a1 = a1 + 0xffffffffffffff68
  1450: 95 55 98 00              s0 = s0 + 0x98
  1454: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  1457: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1460: 52 07 df                 jump @113 if a0 != 0
      :                          @119
  1463: 28 d2 03                 jump @144
      :                          @120
  1466: 7c 97 01                 a0 = u8 [a2 + 0x1]
  1469: 7c 98                    a1 = u8 [a2]
  1471: 7c 9a 02                 a3 = u8 [a2 + 0x2]
  1474: 7d 9b 03                 a4 = i8 [a2 + 0x3]
  1477: 8a 77 08                 i32 a0 = a0 << 0x8
  1480: d4 87 07                 a0 = a0 | a1
  1483: 8a a8 10                 i32 a1 = a3 << 0x10
  1486: 8a ba 18                 i32 a3 = a4 << 0x18
  1489: d4 a8 08                 a1 = a1 | a3
  1492: d4 87 07                 a0 = a0 | a1
  1495: 7b 17 98 00              u64 [sp + 0x98] = a0
  1499: 7c 57 01                 a0 = u8 [s0 + 0x1]
  1502: 7c 58                    a1 = u8 [s0]
  1504: 7c 5a 02                 a3 = u8 [s0 + 0x2]
  1507: 7d 5b 03                 a4 = i8 [s0 + 0x3]
  1510: 8a 77 08                 i32 a0 = a0 << 0x8
  1513: d4 87 07                 a0 = a0 | a1
  1516: 8a a8 10                 i32 a1 = a3 << 0x10
  1519: 8a ba 18                 i32 a3 = a4 << 0x18
  1522: d4 a8 08                 a1 = a1 | a3
  1525: 7c 9a 0f                 a3 = u8 [a2 + 0xf]
  1528: 7c 9b 0e                 a4 = u8 [a2 + 0xe]
  1531: d4 87 07                 a0 = a0 | a1
  1534: 7b 17 90 00              u64 [sp + 0x90] = a0
  1538: 7c 97 0d                 a0 = u8 [a2 + 0xd]
  1541: 97 aa 10                 a3 = a3 << 0x10
  1544: 97 bb 08                 a4 = a4 << 0x8
  1547: d4 ba 0a                 a3 = a3 | a4
  1550: 7c 98 0c                 a1 = u8 [a2 + 0xc]
  1553: 7c 9b 0b                 a4 = u8 [a2 + 0xb]
  1556: d4 a7 07                 a0 = a0 | a3
  1559: 97 77 10                 a0 = a0 << 0x10
  1562: 97 88 08                 a1 = a1 << 0x8
  1565: d4 b8 08                 a1 = a1 | a4
  1568: 7c 9a 0a                 a3 = u8 [a2 + 0xa]
  1571: 7c 9b 09                 a4 = u8 [a2 + 0x9]
  1574: d4 87 07                 a0 = a0 | a1
  1577: 97 77 10                 a0 = a0 << 0x10
  1580: 97 aa 08                 a3 = a3 << 0x8
  1583: d4 ba 0a                 a3 = a3 | a4
  1586: d4 a7 07                 a0 = a0 | a3
  1589: 7c 98 08                 a1 = u8 [a2 + 0x8]
  1592: 97 77 08                 a0 = a0 << 0x8
  1595: 7c 9a 97 00              a3 = u8 [a2 + 0x97]
  1599: 7c 9b 96 00              a4 = u8 [a2 + 0x96]
  1603: d4 87 07                 a0 = a0 | a1
  1606: 7b 17 88 00              u64 [sp + 0x88] = a0
  1610: 7c 97 95 00              a0 = u8 [a2 + 0x95]
  1614: 97 aa 10                 a3 = a3 << 0x10
  1617: 97 bb 08                 a4 = a4 << 0x8
  1620: d4 ba 0a                 a3 = a3 | a4
  1623: d4 a7 07                 a0 = a0 | a3
  1626: 7c 9a 94 00              a3 = u8 [a2 + 0x94]
  1630: 7c 9b 93 00              a4 = u8 [a2 + 0x93]
  1634: 95 98 10                 a1 = a2 + 0x10
  1637: 97 77 10                 a0 = a0 << 0x10
  1640: 97 aa 08                 a3 = a3 << 0x8
  1643: d4 ba 0a                 a3 = a3 | a4
  1646: 7c 9b 92 00              a4 = u8 [a2 + 0x92]
  1650: d4 a7 07                 a0 = a0 | a3
  1653: 7c 9a 91 00              a3 = u8 [a2 + 0x91]
  1657: 97 77 10                 a0 = a0 << 0x10
  1660: 97 bb 08                 a4 = a4 << 0x8
  1663: 7c 99 90 00              a2 = u8 [a2 + 0x90]
  1667: d4 ba 0a                 a3 = a3 | a4
  1670: d4 a7 07                 a0 = a0 | a3
  1673: 97 77 08                 a0 = a0 << 0x8
  1676: d4 97 07                 a0 = a0 | a2
  1679: 7b 17 80 00              u64 [sp + 0x80] = a0
  1683: 95 17 60 01              a0 = sp + 0x160
  1687: 33 09 80 00              a2 = 0x80
  1691: 64 05                    s0 = ra
  1693: 50 10 1c e6 07           ra = 28, jump @252
      :                          @121 [@dyn 14]
  1698: 95 17 d8 00              a0 = sp + 0xd8
  1702: 95 18 60 01              a1 = sp + 0x160
  1706: 33 09 80 00              a2 = 0x80
  1710: 50 10 1e d5 07           ra = 30, jump @252
      :                          @122 [@dyn 15]
  1715: 7a 16 c0 00              u32 [sp + 0xc0] = s1
  1719: 7a 15 c4 00              u32 [sp + 0xc4] = s0
  1723: 82 17 98 00              a0 = u64 [sp + 0x98]
  1727: 7a 17 c8 00              u32 [sp + 0xc8] = a0
  1731: 82 17 90 00              a0 = u64 [sp + 0x90]
  1735: 7a 17 cc 00              u32 [sp + 0xcc] = a0
  1739: 82 17 88 00              a0 = u64 [sp + 0x88]
  1743: 7b 17 d0 00              u64 [sp + 0xd0] = a0
  1747: 82 17 80 00              a0 = u64 [sp + 0x80]
  1751: 7b 17 58 01              u64 [sp + 0x158] = a0
  1755: 95 17 c0 00              a0 = sp + 0xc0
  1759: 7b 17 60 01              u64 [sp + 0x160] = a0
  1763: 82 17 28                 a0 = u64 [sp + 0x28]
  1766: 7b 17 68 01              u64 [sp + 0x168] = a0
  1770: 95 18 c4 00              a1 = sp + 0xc4
  1774: 7b 18 70 01              u64 [sp + 0x170] = a1
  1778: 7b 17 78 01              u64 [sp + 0x178] = a0
  1782: 95 18 c8 00              a1 = sp + 0xc8
  1786: 7b 18 80 01              u64 [sp + 0x180] = a1
  1790: 7b 17 88 01              u64 [sp + 0x188] = a0
  1794: 95 18 cc 00              a1 = sp + 0xcc
  1798: 7b 18 90 01              u64 [sp + 0x190] = a1
  1802: 7b 17 98 01              u64 [sp + 0x198] = a0
  1806: 95 17 d0 00              a0 = sp + 0xd0
  1810: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  1814: 82 17 50                 a0 = u64 [sp + 0x50]
  1817: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  1821: 95 18 d8 00              a1 = sp + 0xd8
  1825: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
  1829: 82 18 20                 a1 = u64 [sp + 0x20]
  1832: 7b 18 b8 01              u64 [sp + 0x1b8] = a1
  1836: 95 18 58 01              a1 = sp + 0x158
  1840: 7b 18 c0 01              u64 [sp + 0x1c0] = a1
  1844: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
  1848: 82 17 18                 a0 = u64 [sp + 0x18]
  1851: 7b 17 20 02              u64 [sp + 0x220] = a0
  1855: 49 21 28 02 07           u64 [sp + 552] = 0x7
  1860: 49 21 40 02              u64 [sp + 576] = 0
  1864: 95 17 60 01              a0 = sp + 0x160
  1868: 7b 17 30 02              u64 [sp + 0x230] = a0
  1872: 49 21 38 02 07           u64 [sp + 568] = 0x7
  1877: 95 17 50 02              a0 = sp + 0x250
  1881: 95 18 20 02              a1 = sp + 0x220
  1885: 50 10 20 a1 04           ra = 32, jump @202
      :                          @123 [@dyn 16]
  1890: 82 16 58 02              s1 = u64 [sp + 0x258]
  1894: 82 1b 60 02              a4 = u64 [sp + 0x260]
  1898: 82 15 50 02              s0 = u64 [sp + 0x250]
  1902: 33 07 02                 a0 = 0x2
  1905: 33 08                    a1 = 0
  1907: 33 09                    a2 = 0
  1909: 64 6a                    a3 = s1
  1911: 33 00 22                 ra = 0x22
  1914: 0a 64                    ecalli 100 // 'log'
  1916: 01                       fallthrough
      :                          @124 [@dyn 17]
  1917: 64 63                    t1 = s1
  1919: 82 1c 48                 a5 = u64 [sp + 0x48]
  1922: 95 57 00 10 00 ff        a0 = s0 + 0xffffffffff001000
  1928: 33 02 00 f0 ff 00        t0 = 0xfff000
  1934: 33 06 ff ef ff 00        s1 = 0xffefff
  1940: 49 21 90 00 01 10 00 ff  u64 [sp + 144] = 0xffffffffff001001
  1948: 53 47 01 10 00 ff 21     jump @129 if a0 <u 4278194177
      :                          @125
  1955: c8 2c 08                 a1 = a5 + t0
  1958: 82 87                    a0 = u64 [a1]
  1960: c8 6c 09                 a2 = a5 + s1
  1963: c9 79 09                 a2 = a2 - a0
  1966: ab 39 0f                 jump @129 if a2 != t1
      :                          @126
  1969: c9 57 09                 a2 = a0 - s0
  1972: 01                       fallthrough
      :                          @127
  1973: 82 8a                    a3 = u64 [a1]
  1975: ab 7a ec                 jump @125 if a3 != a0
      :                          @128
  1978: 7b 89                    u64 [a1] = a2
  1980: 01                       fallthrough
      :                          @129
  1981: 81 17 c4 00              a0 = i32 [sp + 0xc4]
  1985: 7a 17 e4 01              u32 [sp + 0x1e4] = a0
  1989: 95 17 e4 01              a0 = sp + 0x1e4
  1993: 33 08 04                 a1 = 0x4
  1996: 95 19 d8 00              a2 = sp + 0xd8
  2000: 33 0a 80 00              a3 = 0x80
  2004: 7b 16 98 00              u64 [sp + 0x98] = s1
  2008: 0a 03                    ecalli 3 // 'write'
  2010: 0a                       ecalli 0 // 'gas'
  2011: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
  2015: 7b 17 f0 01              u64 [sp + 0x1f0] = a0
  2019: 46 21 ff 01 04           u8 [sp + 511] = 0x4
  2024: 7b 17 00 02              u64 [sp + 0x200] = a0
  2028: 95 17 ff 01              a0 = sp + 0x1ff
  2032: 33 08 01                 a1 = 0x1
  2035: 95 19 00 02              a2 = sp + 0x200
  2039: 33 0a 08                 a3 = 0x8
  2042: 0a 03                    ecalli 3 // 'write'
  2044: 49 21 60 01 02           u64 [sp + 352] = 0x2
  2049: 49 21 70 01 02           u64 [sp + 368] = 0x2
  2054: 49 21 80 01              u64 [sp + 384] = 0
  2058: 14 07 20 00 00 00 10 00 00 00 a0 = 0x1000000020
  2068: 7b 17 88 01              u64 [sp + 0x188] = a0
  2072: 46 21 90 01 03           u8 [sp + 400] = 0x3
  2077: 49 21 98 01 02           u64 [sp + 408] = 0x2
  2082: 49 21 a8 01 02           u64 [sp + 424] = 0x2
  2087: 49 21 b8 01 01           u64 [sp + 440] = 0x1
  2092: 7b 17 c0 01              u64 [sp + 0x1c0] = a0
  2096: 95 17 ff 01              a0 = sp + 0x1ff
  2100: 7b 17 50 02              u64 [sp + 0x250] = a0
  2104: 82 17 10                 a0 = u64 [sp + 0x10]
  2107: 7b 17 58 02              u64 [sp + 0x258] = a0
  2111: 95 17 f0 01              a0 = sp + 0x1f0
  2115: 7b 17 60 02              u64 [sp + 0x260] = a0
  2119: 82 17 50                 a0 = u64 [sp + 0x50]
  2122: 7b 17 68 02              u64 [sp + 0x268] = a0
  2126: 46 21 c8 01 03           u8 [sp + 456] = 0x3
  2131: 82 17 08                 a0 = u64 [sp + 0x8]
  2134: 7b 17 20 02              u64 [sp + 0x220] = a0
  2138: 49 21 28 02 02           u64 [sp + 552] = 0x2
  2143: 95 17 60 01              a0 = sp + 0x160
  2147: 7b 17 40 02              u64 [sp + 0x240] = a0
  2151: 49 21 48 02 02           u64 [sp + 584] = 0x2
  2156: 95 17 50 02              a0 = sp + 0x250
  2160: 7b 17 30 02              u64 [sp + 0x230] = a0
  2164: 49 21 38 02 02           u64 [sp + 568] = 0x2
  2169: 95 17 08 02              a0 = sp + 0x208
  2173: 95 18 20 02              a1 = sp + 0x220
  2177: 50 10 24 7d 03           ra = 36, jump @202
      :                          @130 [@dyn 18]
  2182: 82 16 10 02              s1 = u64 [sp + 0x210]
  2186: 82 1b 18 02              a4 = u64 [sp + 0x218]
  2190: 82 15 08 02              s0 = u64 [sp + 0x208]
  2194: 33 07 02                 a0 = 0x2
  2197: 33 08                    a1 = 0
  2199: 33 09                    a2 = 0
  2201: 64 6a                    a3 = s1
  2203: 33 00 26                 ra = 0x26
  2206: 0a 64                    ecalli 100 // 'log'
  2208: 01                       fallthrough
      :                          @131 [@dyn 19]
  2209: 64 63                    t1 = s1
  2211: 82 16 98 00              s1 = u64 [sp + 0x98]
  2215: 33 02 00 f0 ff 00        t0 = 0xfff000
  2221: 82 1c 48                 a5 = u64 [sp + 0x48]
  2224: 95 57 00 10 00 ff        a0 = s0 + 0xffffffffff001000
  2230: 82 18 90 00              a1 = u64 [sp + 0x90]
  2234: ac 87 1f                 jump @136 if a0 <u a1
      :                          @132
  2237: c8 2c 08                 a1 = a5 + t0
  2240: 82 87                    a0 = u64 [a1]
  2242: c8 6c 09                 a2 = a5 + s1
  2245: c9 79 09                 a2 = a2 - a0
  2248: ab 39 11                 jump @136 if a2 != t1
      :                          @133
  2251: c9 57 09                 a2 = a0 - s0
  2254: 01                       fallthrough
      :                          @134
  2255: 82 8a                    a3 = u64 [a1]
  2257: ab 7a ec                 jump @132 if a3 != a0
      :                          @135
  2260: 7b 89                    u64 [a1] = a2
  2262: 33 0b                    a4 = 0
  2264: 01                       fallthrough
      :                          @136
  2265: 95 17 e8 01              a0 = sp + 0x1e8
  2269: 7b 17 50 02              u64 [sp + 0x250] = a0
  2273: 82 17 50                 a0 = u64 [sp + 0x50]
  2276: 7b 17 58 02              u64 [sp + 0x258] = a0
  2280: 82 17                    a0 = u64 [sp]
  2282: 7b 17 60 01              u64 [sp + 0x160] = a0
  2286: 49 21 68 01 02           u64 [sp + 360] = 0x2
  2291: 49 21 80 01              u64 [sp + 384] = 0
  2295: 95 17 50 02              a0 = sp + 0x250
  2299: 7b 17 70 01              u64 [sp + 0x170] = a0
  2303: 49 21 78 01 01           u64 [sp + 376] = 0x1
  2308: 95 17 20 02              a0 = sp + 0x220
  2312: 95 18 60 01              a1 = sp + 0x160
  2316: 50 10 28 f2 02           ra = 40, jump @202
      :                          @137 [@dyn 20]
  2321: 82 16 28 02              s1 = u64 [sp + 0x228]
  2325: 82 1b 30 02              a4 = u64 [sp + 0x230]
  2329: 82 15 20 02              s0 = u64 [sp + 0x220]
  2333: 33 07 02                 a0 = 0x2
  2336: 33 08                    a1 = 0
  2338: 33 09                    a2 = 0
  2340: 64 6a                    a3 = s1
  2342: 33 00 2a                 ra = 0x2a
  2345: 0a 64                    ecalli 100 // 'log'
  2347: 01                       fallthrough
      :                          @138 [@dyn 21]
  2348: 64 6c                    a5 = s1
  2350: 82 16 98 00              s1 = u64 [sp + 0x98]
  2354: 33 02 00 f0 ff 00        t0 = 0xfff000
  2360: 82 13 48                 t1 = u64 [sp + 0x48]
  2363: 95 57 00 10 00 ff        a0 = s0 + 0xffffffffff001000
  2369: 82 18 90 00              a1 = u64 [sp + 0x90]
  2373: ac 87 1d                 jump @143 if a0 <u a1
      :                          @139
  2376: c8 23 08                 a1 = t1 + t0
  2379: 82 87                    a0 = u64 [a1]
  2381: c8 63 09                 a2 = t1 + s1
  2384: c9 79 09                 a2 = a2 - a0
  2387: ab c9 0f                 jump @143 if a2 != a5
      :                          @140
  2390: c9 57 09                 a2 = a0 - s0
  2393: 01                       fallthrough
      :                          @141
  2394: 82 8a                    a3 = u64 [a1]
  2396: ab 7a ec                 jump @139 if a3 != a0
      :                          @142
  2399: 7b 89                    u64 [a1] = a2
  2401: 01                       fallthrough
      :                          @143
  2402: 82 12 a8 00              t0 = u64 [sp + 0xa8]
  2406: 95 22 01                 t0 = t0 + 0x1
  2409: 82 17 b0 00              a0 = u64 [sp + 0xb0]
  2413: 95 77 98 00              a0 = a0 + 0x98
  2417: 7b 17 b0 00              u64 [sp + 0xb0] = a0
  2421: 82 18 40                 a1 = u64 [sp + 0x40]
  2424: 82 16 38                 s1 = u64 [sp + 0x38]
  2427: 82 1b 30                 a4 = u64 [sp + 0x30]
  2430: 82 1a a0 00              a3 = u64 [sp + 0xa0]
  2434: 33 09 08                 a2 = 0x8
  2437: ae 98 0d fb              jump @97 if a1 >=u a2
      :                          @144
  2441: 33 07 00 00 01           a0 = 0x10000
  2446: 33 08                    a1 = 0
  2448: 82 10 80 02              ra = u64 [sp + 0x280]
  2452: 82 15 78 02              s0 = u64 [sp + 0x278]
  2456: 82 16 70 02              s1 = u64 [sp + 0x270]
  2460: 95 11 88 02              sp = sp + 0x288
  2464: 32 00                    ret
      :                          @145
  2466: 00                       trap
      :                          @146
  2467: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  2470: 7b 10 40                 u64 [sp + 0x40] = ra
  2473: 7b 15 38                 u64 [sp + 0x38] = s0
  2476: 7b 16 30                 u64 [sp + 0x30] = s1
  2479: c8 89 09                 a2 = a2 + a1
  2482: ac 89 52                 jump @154 if a2 <u a1
      :                          @147
  2485: 64 75                    s0 = a0
  2487: 82 77                    a0 = u64 [a0]
  2489: 97 78 01                 a1 = a0 << 0x1
  2492: 33 0a 08                 a3 = 0x8
  2495: e4 a9 09                 a2 = maxu(a2, a3)
  2498: e4 98 06                 s1 = maxu(a1, a2)
  2501: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  2504: 98 88 3f                 a1 = a1 >> 0x3f
  2507: 51 07 12                 jump @149 if a0 == 0
      :                          @148
  2510: 82 59 08                 a2 = u64 [s0 + 0x8]
  2513: 7b 19 18                 u64 [sp + 0x18] = a2
  2516: 49 11 20 01              u64 [sp + 32] = 0x1
  2520: 7b 17 28                 u64 [sp + 0x28] = a0
  2523: 28 06                    jump @150
      :                          @149
  2525: 49 11 20                 u64 [sp + 32] = 0
  2528: 01                       fallthrough
      :                          @150
  2529: 64 17                    a0 = sp
  2531: 95 1a 18                 a3 = sp + 0x18
  2534: 64 69                    a2 = s1
  2536: 50 10 2c 32              ra = 44, jump @158
      :                          @151 [@dyn 22]
  2540: 82 18                    a1 = u64 [sp]
  2542: 82 17 08                 a0 = u64 [sp + 0x8]
  2545: 51 08 14                 jump @155 if a1 == 0
      :                          @152
  2548: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  2558: aa 87 0d                 jump @156 if a0 == a1
      :                          @153
  2561: 52 07 18                 jump @157 if a0 != 0
      :                          @154
  2564: 00                       trap
      :                          @155
  2565: 7b 57 08                 u64 [s0 + 0x8] = a0
  2568: 7b 56                    u64 [s0] = s1
  2570: 01                       fallthrough
      :                          @156
  2571: 82 10 40                 ra = u64 [sp + 0x40]
  2574: 82 15 38                 s0 = u64 [sp + 0x38]
  2577: 82 16 30                 s1 = u64 [sp + 0x30]
  2580: 95 11 48                 sp = sp + 0x48
  2583: 32 00                    ret
      :                          @157
  2585: 00                       trap
      :                          @158
  2586: 64 93                    t1 = a2
  2588: 64 72                    t0 = a0
  2590: 51 08 8f 00              jump @168 if a1 == 0
      :                          @159
  2594: 95 11 c0                 sp = sp + 0xffffffffffffffc0
  2597: 7b 10 38                 u64 [sp + 0x38] = ra
  2600: 7b 15 30                 u64 [sp + 0x30] = s0
  2603: 7b 16 28                 u64 [sp + 0x28] = s1
  2606: 82 a7 08                 a0 = u64 [a3 + 0x8]
  2609: 51 07 89 00              jump @169 if a0 == 0
      :                          @160
  2613: 82 a9 10                 a2 = u64 [a3 + 0x10]
  2616: 51 09 ba 00              jump @176 if a2 == 0
      :                          @161
  2620: 82 a8                    a1 = u64 [a3]
  2622: 33 06 40 00 03           s1 = 0x30040
  2627: 95 66 00 f0 ff 00        s1 = s1 + 0xfff000
  2633: 33 05 ff ef ff 00        s0 = 0xffefff
  2639: 01                       fallthrough
      :                          @162
  2640: 82 6a                    a3 = u64 [s1]
  2642: c8 3a 07                 a0 = a3 + t1
  2645: ac a7 e0 00              jump @182 if a0 <u a3
      :                          @163
  2649: 95 7b 01                 a4 = a0 + 0x1
  2652: 88 bc 01                 a5 = a4 <u 0x1
  2655: d8 b5 0b                 a4 = s0 <u a4
  2658: d4 cb 0b                 a4 = a4 | a5
  2661: 52 0b d0 00              jump @182 if a4 != 0
      :                          @164
  2665: 82 6b                    a4 = u64 [s1]
  2667: ab ab e5                 jump @162 if a4 != a3
      :                          @165
  2670: 7b 67                    u64 [s1] = a0
  2672: 33 0c                    a5 = 0
  2674: 7b 13 10                 u64 [sp + 0x10] = t1
  2677: 7b 12 20                 u64 [sp + 0x20] = t0
  2680: 33 05 ff ef ff 00        s0 = 0xffefff
  2686: 33 0a 40 00 03           a3 = 0x30040
  2691: 7b 1a                    u64 [sp] = a3
  2693: c8 5a 0a                 a3 = a3 + s0
  2696: c9 7a 07                 a0 = a3 - a0
  2699: 7b 17 18                 u64 [sp + 0x18] = a0
  2702: 7b 18 08                 u64 [sp + 0x8] = a1
  2705: 64 96                    s1 = a2
  2707: 50 10 2e f0 03           ra = 46, jump @252
      :                          @166 [@dyn 23]
  2712: ae 65 a5 00              jump @183 if s0 >=u s1
      :                          @167
  2716: 82 12 20                 t0 = u64 [sp + 0x20]
  2719: 82 13 10                 t1 = u64 [sp + 0x10]
  2722: 82 18 18                 a1 = u64 [sp + 0x18]
  2725: 33 07                    a0 = 0
  2727: 7b 28 08                 u64 [t0 + 0x8] = a1
  2730: 28 c9 00                 jump @189
      :                          @168
  2733: 49 12 08                 u64 [t0 + 8] = 0
  2736: 33 07 01                 a0 = 0x1
  2739: 7b 23 10                 u64 [t0 + 0x10] = t1
  2742: 7b 27                    u64 [t0] = a0
  2744: 32 00                    ret
      :                          @169
  2746: 33 07 40 00 03           a0 = 0x30040
  2751: 95 77 00 f0 ff 00        a0 = a0 + 0xfff000
  2757: 33 09 ff ef ff 00        a2 = 0xffefff
  2763: 01                       fallthrough
      :                          @170
  2764: 82 7a                    a3 = u64 [a0]
  2766: c8 3a 08                 a1 = a3 + t1
  2769: ac a8 64                 jump @182 if a1 <u a3
      :                          @171
  2772: 95 8b 01                 a4 = a1 + 0x1
  2775: 88 bc 01                 a5 = a4 <u 0x1
  2778: d8 b9 0b                 a4 = a2 <u a4
  2781: d4 cb 0b                 a4 = a4 | a5
  2784: 52 0b 55                 jump @182 if a4 != 0
      :                          @172
  2787: 82 7b                    a4 = u64 [a0]
  2789: ab ab e7                 jump @170 if a4 != a3
      :                          @173
  2792: 7b 78                    u64 [a0] = a1
  2794: 33 0c                    a5 = 0
  2796: 01                       fallthrough
      :                          @174
  2797: ab ab df                 jump @170 if a4 != a3
      :                          @175
  2800: 28 35                    jump @181
      :                          @176
  2802: 33 07 40 00 03           a0 = 0x30040
  2807: 95 77 00 f0 ff 00        a0 = a0 + 0xfff000
  2813: 33 09 ff ef ff 00        a2 = 0xffefff
  2819: 01                       fallthrough
      :                          @177
  2820: 82 7a                    a3 = u64 [a0]
  2822: c8 3a 08                 a1 = a3 + t1
  2825: ac a8 2c                 jump @182 if a1 <u a3
      :                          @178
  2828: 95 8b 01                 a4 = a1 + 0x1
  2831: 88 bc 01                 a5 = a4 <u 0x1
  2834: d8 b9 0b                 a4 = a2 <u a4
  2837: d4 cb 0b                 a4 = a4 | a5
  2840: 52 0b 1d                 jump @182 if a4 != 0
      :                          @179
  2843: 82 7b                    a4 = u64 [a0]
  2845: ab ab e7                 jump @177 if a4 != a3
      :                          @180
  2848: 7b 78                    u64 [a0] = a1
  2850: 33 0c                    a5 = 0
  2852: 01                       fallthrough
      :                          @181
  2853: 33 07 3f f0 02 01        a0 = 0x102f03f
  2859: c9 87 08                 a1 = a0 - a1
  2862: 33 07                    a0 = 0
  2864: 7b 28 08                 u64 [t0 + 0x8] = a1
  2867: 28 40                    jump @189
      :                          @182
  2869: 33 07 01                 a0 = 0x1
  2872: 7b 27 08                 u64 [t0 + 0x8] = a0
  2875: 28 38                    jump @189
      :                          @183
  2877: 64 6c                    a5 = s1
  2879: 82 16                    s1 = u64 [sp]
  2881: 95 67 00 f0 ff 00        a0 = s1 + 0xfff000
  2887: 82 12 20                 t0 = u64 [sp + 0x20]
  2890: 82 14 08                 t2 = u64 [sp + 0x8]
  2893: 82 13 10                 t1 = u64 [sp + 0x10]
  2896: 01                       fallthrough
      :                          @184
  2897: 82 78                    a1 = u64 [a0]
  2899: c8 56 09                 a2 = s1 + s0
  2902: c9 89 09                 a2 = a2 - a1
  2905: ab 49 11                 jump @188 if a2 != t2
      :                          @185
  2908: c9 c8 09                 a2 = a1 - a5
  2911: 01                       fallthrough
      :                          @186
  2912: 82 7a                    a3 = u64 [a0]
  2914: ab 8a ef                 jump @184 if a3 != a1
      :                          @187
  2917: 7b 79                    u64 [a0] = a2
  2919: 33 0b                    a4 = 0
  2921: 01                       fallthrough
      :                          @188
  2922: 82 18 18                 a1 = u64 [sp + 0x18]
  2925: 33 07                    a0 = 0
  2927: 7b 28 08                 u64 [t0 + 0x8] = a1
  2930: 01                       fallthrough
      :                          @189
  2931: 82 10 38                 ra = u64 [sp + 0x38]
  2934: 82 15 30                 s0 = u64 [sp + 0x30]
  2937: 82 16 28                 s1 = u64 [sp + 0x28]
  2940: 95 11 40                 sp = sp + 0x40
  2943: 7b 23 10                 u64 [t0 + 0x10] = t1
  2946: 7b 27                    u64 [t0] = a0
  2948: 32 00                    ret
      :                          @190
  2950: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  2953: 7b 10 40                 u64 [sp + 0x40] = ra
  2956: 7b 15 38                 u64 [sp + 0x38] = s0
  2959: 7b 16 30                 u64 [sp + 0x30] = s1
  2962: 95 88 01                 a1 = a1 + 0x1
  2965: 51 08 53                 jump @198 if a1 == 0
      :                          @191
  2968: 64 75                    s0 = a0
  2970: 82 77                    a0 = u64 [a0]
  2972: 97 79 01                 a2 = a0 << 0x1
  2975: 33 0a 08                 a3 = 0x8
  2978: e4 a8 08                 a1 = maxu(a1, a3)
  2981: e4 89 06                 s1 = maxu(a2, a1)
  2984: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  2987: 98 88 3f                 a1 = a1 >> 0x3f
  2990: 51 07 12                 jump @193 if a0 == 0
      :                          @192
  2993: 82 59 08                 a2 = u64 [s0 + 0x8]
  2996: 7b 19 18                 u64 [sp + 0x18] = a2
  2999: 49 11 20 01              u64 [sp + 32] = 0x1
  3003: 7b 17 28                 u64 [sp + 0x28] = a0
  3006: 28 06                    jump @194
      :                          @193
  3008: 49 11 20                 u64 [sp + 32] = 0
  3011: 01                       fallthrough
      :                          @194
  3012: 64 17                    a0 = sp
  3014: 95 1a 18                 a3 = sp + 0x18
  3017: 64 69                    a2 = s1
  3019: 50 10 30 4f fe           ra = 48, jump @158
      :                          @195 [@dyn 24]
  3024: 82 18                    a1 = u64 [sp]
  3026: 82 17 08                 a0 = u64 [sp + 0x8]
  3029: 51 08 14                 jump @199 if a1 == 0
      :                          @196
  3032: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  3042: aa 87 0d                 jump @200 if a0 == a1
      :                          @197
  3045: 52 07 18                 jump @201 if a0 != 0
      :                          @198
  3048: 00                       trap
      :                          @199
  3049: 7b 57 08                 u64 [s0 + 0x8] = a0
  3052: 7b 56                    u64 [s0] = s1
  3054: 01                       fallthrough
      :                          @200
  3055: 82 10 40                 ra = u64 [sp + 0x40]
  3058: 82 15 38                 s0 = u64 [sp + 0x38]
  3061: 82 16 30                 s1 = u64 [sp + 0x30]
  3064: 95 11 48                 sp = sp + 0x48
  3067: 32 00                    ret
      :                          @201
  3069: 00                       trap
      :                          @202
  3070: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  3073: 7b 10 30                 u64 [sp + 0x30] = ra
  3076: 7b 15 28                 u64 [sp + 0x28] = s0
  3079: 7b 16 20                 u64 [sp + 0x20] = s1
  3082: 64 89                    a2 = a1
  3084: 82 8a 08                 a3 = u64 [a1 + 0x8]
  3087: 64 75                    s0 = a0
  3089: 51 0a 35                 jump @207 if a3 == 0
      :                          @203
  3092: 82 98                    a1 = u64 [a2]
  3094: 33 07                    a0 = 0
  3096: 95 8b 08                 a4 = a1 + 0x8
  3099: 01                       fallthrough
      :                          @204
  3100: 82 bc                    a5 = u64 [a4]
  3102: c8 c7 07                 a0 = a0 + a5
  3105: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  3108: 95 bb 10                 a4 = a4 + 0x10
  3111: 52 0a f5                 jump @204 if a3 != 0
      :                          @205
  3114: 82 9a 18                 a3 = u64 [a2 + 0x18]
  3117: 51 0a 24                 jump @209 if a3 == 0
      :                          @206
  3120: 82 88 08                 a1 = u64 [a1 + 0x8]
  3123: 8e 88                    a1 = a1 >u 0
  3125: 88 7a 10                 a3 = a0 <u 0x10
  3128: 85 aa 01                 a3 = a3 ^ 0x1
  3131: d4 a8 08                 a1 = a1 | a3
  3134: 89 7a                    a3 = a0 <s 0
  3136: e0 a8 08                 a1 = a1 & ~a3
  3139: 52 08 0a                 jump @208 if a1 != 0
      :                          @207
  3142: 33 07                    a0 = 0
  3144: 33 08 01                 a1 = 0x1
  3147: 28 4f                    jump @217
      :                          @208
  3149: 97 77 01                 a0 = a0 << 0x1
  3152: 01                       fallthrough
      :                          @209
  3153: 51 07 45                 jump @216 if a0 == 0
      :                          @210
  3156: 57 07 7d                 jump @222 if a0 <s 0
      :                          @211
  3159: 64 52                    t0 = s0
  3161: 33 08 40 00 03           a1 = 0x30040
  3166: 95 88 00 f0 ff 00        a1 = a1 + 0xfff000
  3172: 33 0b ff ef ff 00        a4 = 0xffefff
  3178: 01                       fallthrough
      :                          @212
  3179: 82 8c                    a5 = u64 [a1]
  3181: c8 7c 0a                 a3 = a5 + a0
  3184: ac ca 5f                 jump @220 if a3 <u a5
      :                          @213
  3187: 95 a5 01                 s0 = a3 + 0x1
  3190: 88 56 01                 s1 = s0 <u 0x1
  3193: d8 5b 05                 s0 = a4 <u s0
  3196: d4 65 05                 s0 = s0 | s1
  3199: 52 05 50                 jump @220 if s0 != 0
      :                          @214
  3202: 82 86                    s1 = u64 [a1]
  3204: ab c6 e7                 jump @212 if s1 != a5
      :                          @215
  3207: 7b 8a                    u64 [a1] = a3
  3209: 33 08 3f f0 02 01        a1 = 0x102f03f
  3215: c9 a8 08                 a1 = a1 - a3
  3218: 64 25                    s0 = t0
  3220: 28 06                    jump @217
      :                          @216
  3222: 33 08 01                 a1 = 0x1
  3225: 01                       fallthrough
      :                          @217
  3226: 7b 17                    u64 [sp] = a0
  3228: 7b 18 08                 u64 [sp + 0x8] = a1
  3231: 49 11 10                 u64 [sp + 16] = 0
  3234: 33 08 18 01 01           a1 = 0x10118
  3239: 64 17                    a0 = sp
  3241: 50 10 32 26 06           ra = 50, jump @334
      :                          @218 [@dyn 25]
  3246: 52 07 22                 jump @221 if a0 != 0
      :                          @219
  3249: 82 17 10                 a0 = u64 [sp + 0x10]
  3252: 82 18 08                 a1 = u64 [sp + 0x8]
  3255: 82 19                    a2 = u64 [sp]
  3257: 7b 57 10                 u64 [s0 + 0x10] = a0
  3260: 7b 58 08                 u64 [s0 + 0x8] = a1
  3263: 7b 59                    u64 [s0] = a2
  3265: 82 10 30                 ra = u64 [sp + 0x30]
  3268: 82 15 28                 s0 = u64 [sp + 0x28]
  3271: 82 16 20                 s1 = u64 [sp + 0x20]
  3274: 95 11 38                 sp = sp + 0x38
  3277: 32 00                    ret
      :                          @220
  3279: 00                       trap
      :                          @221
  3280: 00                       trap
      :                          @222
  3281: 00                       trap
      :                          @223 [@dyn 26]
  3282: 82 72                    t0 = u64 [a0]
  3284: 95 2a 00 10 00 ff        a3 = t0 + 0xffffffffff001000
  3290: 33 09 01 10 00 ff        a2 = 0xffffffffff001001
  3296: ac 9a 32                 jump @229 if a3 <u a2
      :                          @224
  3299: 82 73 08                 t1 = u64 [a0 + 0x8]
  3302: 33 04 40 00 03           t2 = 0x30040
  3307: 95 4a 00 f0 ff 00        a3 = t2 + 0xfff000
  3313: 33 0b ff ef ff 00        a4 = 0xffefff
  3319: 01                       fallthrough
      :                          @225
  3320: 82 ac                    a5 = u64 [a3]
  3322: c8 b4 09                 a2 = t2 + a4
  3325: c9 c9 09                 a2 = a2 - a5
  3328: ab 39 12                 jump @229 if a2 != t1
      :                          @226
  3331: c9 2c 09                 a2 = a5 - t0
  3334: 01                       fallthrough
      :                          @227
  3335: 82 a7                    a0 = u64 [a3]
  3337: ab c7 ef                 jump @225 if a0 != a5
      :                          @228
  3340: 7b a9                    u64 [a3] = a2
  3342: 33 08                    a1 = 0
  3344: 32 00                    ret
      :                          @229
  3346: 32 00                    ret
      :                          @230 [@dyn 27]
  3348: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3351: 7b 10 18                 u64 [sp + 0x18] = ra
  3354: 7b 15 10                 u64 [sp + 0x10] = s0
  3357: 7b 16 08                 u64 [sp + 0x8] = s1
  3360: 64 75                    s0 = a0
  3362: 82 7a 10                 a3 = u64 [a0 + 0x10]
  3365: 82 77                    a0 = u64 [a0]
  3367: c9 a7 07                 a0 = a0 - a3
  3370: 64 96                    s1 = a2
  3372: ac 97 2a                 jump @233 if a0 <u a2
      :                          @231
  3375: 7b 1a                    u64 [sp] = a3
  3377: 82 57 08                 a0 = u64 [s0 + 0x8]
  3380: c8 a7 07                 a0 = a0 + a3
  3383: 64 69                    a2 = s1
  3385: 50 10 38 4a 01           ra = 56, jump @252
      :                          @232 [@dyn 28]
  3390: 82 17                    a0 = u64 [sp]
  3392: c8 76 06                 s1 = s1 + a0
  3395: 7b 56 10                 u64 [s0 + 0x10] = s1
  3398: 33 07                    a0 = 0
  3400: 82 10 18                 ra = u64 [sp + 0x18]
  3403: 82 15 10                 s0 = u64 [sp + 0x10]
  3406: 82 16 08                 s1 = u64 [sp + 0x8]
  3409: 95 11 20                 sp = sp + 0x20
  3412: 32 00                    ret
      :                          @233
  3414: 64 57                    a0 = s0
  3416: 7b 18                    u64 [sp] = a1
  3418: 64 a8                    a1 = a3
  3420: 64 69                    a2 = s1
  3422: 50 10 3a 45 fc           ra = 58, jump @146
      :                          @234 [@dyn 29]
  3427: 82 18                    a1 = u64 [sp]
  3429: 82 5a 10                 a3 = u64 [s0 + 0x10]
  3432: 28 c7                    jump @231
      :                          @235 [@dyn 30]
  3434: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  3437: 7b 10 20                 u64 [sp + 0x20] = ra
  3440: 7b 15 18                 u64 [sp + 0x18] = s0
  3443: 7b 16 10                 u64 [sp + 0x10] = s1
  3446: 64 86                    s1 = a1
  3448: 83 88                    i32 a1 = a1 + 0
  3450: 33 09 80 00              a2 = 0x80
  3454: 64 7a                    a3 = a0
  3456: ae 98 2b                 jump @240 if a1 >=u a2
      :                          @236
  3459: 82 a8 10                 a1 = u64 [a3 + 0x10]
  3462: 82 a7                    a0 = u64 [a3]
  3464: ab 78 12                 jump @239 if a1 != a0
      :                          @237
  3467: 64 a7                    a0 = a3
  3469: 64 a5                    s0 = a3
  3471: 50 10 3e f7 fd           ra = 62, jump @190
      :                          @238 [@dyn 31]
  3476: 64 5a                    a3 = s0
  3478: 82 58 10                 a1 = u64 [s0 + 0x10]
  3481: 01                       fallthrough
      :                          @239
  3482: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3485: c8 87 07                 a0 = a0 + a1
  3488: 78 76                    u8 [a0] = s1
  3490: 95 88 01                 a1 = a1 + 0x1
  3493: 7b a8 10                 u64 [a3 + 0x10] = a1
  3496: 28 ab 00                 jump @248
      :                          @240
  3499: 8b 67 0b                 i32 a0 = s1 >> 0xb
  3502: 48 11 0c                 u32 [sp + 12] = 0
  3505: 52 07 1c                 jump @242 if a0 != 0
      :                          @241
  3508: 98 67 06                 a0 = s1 >> 0x6
  3511: 86 77 c0 00              a0 = a0 | 0xc0
  3515: 78 17 0c                 u8 [sp + 0xc] = a0
  3518: 84 67 3f                 a0 = s1 & 0x3f
  3521: 86 77 80 00              a0 = a0 | 0x80
  3525: 78 17 0d                 u8 [sp + 0xd] = a0
  3528: 33 06 02                 s1 = 0x2
  3531: 28 63                    jump @245
      :                          @242
  3533: 8b 67 10                 i32 a0 = s1 >> 0x10
  3536: 52 07 29                 jump @244 if a0 != 0
      :                          @243
  3539: 98 67 0c                 a0 = s1 >> 0xc
  3542: 86 77 e0 00              a0 = a0 | 0xe0
  3546: 78 17 0c                 u8 [sp + 0xc] = a0
  3549: 97 67 34                 a0 = s1 << 0x34
  3552: 98 77 3a                 a0 = a0 >> 0x3a
  3555: 95 77 80 00              a0 = a0 + 0x80
  3559: 78 17 0d                 u8 [sp + 0xd] = a0
  3562: 84 67 3f                 a0 = s1 & 0x3f
  3565: 86 77 80 00              a0 = a0 | 0x80
  3569: 78 17 0e                 u8 [sp + 0xe] = a0
  3572: 33 06 03                 s1 = 0x3
  3575: 28 37                    jump @245
      :                          @244
  3577: 97 67 2b                 a0 = s1 << 0x2b
  3580: 98 77 3d                 a0 = a0 >> 0x3d
  3583: 95 77 f0 00              a0 = a0 + 0xf0
  3587: 78 17 0c                 u8 [sp + 0xc] = a0
  3590: 97 67 2e                 a0 = s1 << 0x2e
  3593: 98 77 3a                 a0 = a0 >> 0x3a
  3596: 95 77 80 00              a0 = a0 + 0x80
  3600: 78 17 0d                 u8 [sp + 0xd] = a0
  3603: 97 67 34                 a0 = s1 << 0x34
  3606: 98 77 3a                 a0 = a0 >> 0x3a
  3609: 95 77 80 00              a0 = a0 + 0x80
  3613: 78 17 0e                 u8 [sp + 0xe] = a0
  3616: 84 67 3f                 a0 = s1 & 0x3f
  3619: 86 77 80 00              a0 = a0 | 0x80
  3623: 78 17 0f                 u8 [sp + 0xf] = a0
  3626: 33 06 04                 s1 = 0x4
  3629: 01                       fallthrough
      :                          @245
  3630: 82 a5 10                 s0 = u64 [a3 + 0x10]
  3633: 82 a7                    a0 = u64 [a3]
  3635: c9 57 07                 a0 = a0 - s0
  3638: ac 67 2d                 jump @249 if a0 <u s1
      :                          @246
  3641: 7b 1a                    u64 [sp] = a3
  3643: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3646: c8 57 07                 a0 = a0 + s0
  3649: 95 18 0c                 a1 = sp + 0xc
  3652: 64 69                    a2 = s1
  3654: 50 10 40 3d              ra = 64, jump @252
      :                          @247 [@dyn 32]
  3658: c8 56 06                 s1 = s1 + s0
  3661: 82 17                    a0 = u64 [sp]
  3663: 7b 76 10                 u64 [a0 + 0x10] = s1
  3666: 01                       fallthrough
      :                          @248
  3667: 33 07                    a0 = 0
  3669: 82 10 20                 ra = u64 [sp + 0x20]
  3672: 82 15 18                 s0 = u64 [sp + 0x18]
  3675: 82 16 10                 s1 = u64 [sp + 0x10]
  3678: 95 11 28                 sp = sp + 0x28
  3681: 32 00                    ret
      :                          @249
  3683: 64 a7                    a0 = a3
  3685: 64 58                    a1 = s0
  3687: 64 69                    a2 = s1
  3689: 64 a5                    s0 = a3
  3691: 50 10 42 38 fb           ra = 66, jump @146
      :                          @250 [@dyn 33]
  3696: 64 5a                    a3 = s0
  3698: 82 55 10                 s0 = u64 [s0 + 0x10]
  3701: 28 c4                    jump @246
      :                          @251 [@dyn 34]
  3703: 64 8a                    a3 = a1
  3705: 33 08 18 01 01           a1 = 0x10118
  3710: 64 a9                    a2 = a3
  3712: 28 4f 04                 jump @334
      :                          @252
  3715: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3718: 7b 10 18                 u64 [sp + 0x18] = ra
  3721: 7b 15 10                 u64 [sp + 0x10] = s0
  3724: 7b 16 08                 u64 [sp + 0x8] = s1
  3727: 53 19 10 64              jump @261 if a2 <u 16
      :                          @253
  3731: 8d 7a                    i32 a3 = -a0
  3733: 84 a2 07                 t0 = a3 & 0x7
  3736: c8 27 0b                 a4 = a0 + t0
  3739: 51 02 15                 jump @256 if t0 == 0
      :                          @254
  3742: 64 8c                    a5 = a1
  3744: 64 75                    s0 = a0
  3746: 01                       fallthrough
      :                          @255
  3747: 7c ca                    a3 = u8 [a5]
  3749: 78 5a                    u8 [s0] = a3
  3751: 95 55 01                 s0 = s0 + 0x1
  3754: 95 cc 01                 a5 = a5 + 0x1
  3757: ac b5 f6                 jump @255 if s0 <u a4
      :                          @256
  3760: c8 28 03                 t1 = a1 + t0
  3763: c9 29 02                 t0 = a2 - t0
  3766: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  3769: 84 38 07                 a1 = t1 & 0x7
  3772: c8 4b 0a                 a3 = a4 + t2
  3775: 51 08 3b                 jump @263 if a1 == 0
      :                          @257
  3778: 58 04 4b                 jump @266 if t2 <=s 0
      :                          @258
  3781: 97 38 03                 a1 = t1 << 0x3
  3784: 84 80 38                 ra = a1 & 0x38
  3787: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  3790: 82 c5                    s0 = u64 [a5]
  3792: 8d 88                    i32 a1 = -a1
  3794: 84 88 38                 a1 = a1 & 0x38
  3797: 95 cc 08                 a5 = a5 + 0x8
  3800: 01                       fallthrough
      :                          @259
  3801: 82 c6                    s1 = u64 [a5]
  3803: d0 05 05                 s0 = s0 >> ra
  3806: cf 86 09                 a2 = s1 << a1
  3809: d4 59 09                 a2 = a2 | s0
  3812: 7b b9                    u64 [a4] = a2
  3814: 95 bb 08                 a4 = a4 + 0x8
  3817: 95 cc 08                 a5 = a5 + 0x8
  3820: 64 65                    s0 = s1
  3822: ac ab eb                 jump @259 if a4 <u a3
      :                          @260
  3825: 28 1c                    jump @266
      :                          @261
  3827: 64 7a                    a3 = a0
  3829: 52 09 21                 jump @267 if a2 != 0
      :                          @262
  3832: 28 2f                    jump @269
      :                          @263
  3834: 58 04 13                 jump @266 if t2 <=s 0
      :                          @264
  3837: 64 38                    a1 = t1
  3839: 01                       fallthrough
      :                          @265
  3840: 82 89                    a2 = u64 [a1]
  3842: 7b b9                    u64 [a4] = a2
  3844: 95 bb 08                 a4 = a4 + 0x8
  3847: 95 88 08                 a1 = a1 + 0x8
  3850: ac ab f6                 jump @265 if a4 <u a3
      :                          @266
  3853: c8 43 08                 a1 = t1 + t2
  3856: 84 29 07                 a2 = t0 & 0x7
  3859: 51 09 14                 jump @269 if a2 == 0
      :                          @267
  3862: c8 a9 09                 a2 = a2 + a3
  3865: 01                       fallthrough
      :                          @268
  3866: 7c 8b                    a4 = u8 [a1]
  3868: 78 ab                    u8 [a3] = a4
  3870: 95 aa 01                 a3 = a3 + 0x1
  3873: 95 88 01                 a1 = a1 + 0x1
  3876: ac 9a f6                 jump @268 if a3 <u a2
      :                          @269
  3879: 82 10 18                 ra = u64 [sp + 0x18]
  3882: 82 15 10                 s0 = u64 [sp + 0x10]
  3885: 82 16 08                 s1 = u64 [sp + 0x8]
  3888: 95 11 20                 sp = sp + 0x20
  3891: 32 00                    ret
      :                          @270 [@dyn 35]
  3893: 82 77                    a0 = u64 [a0]
  3895: 01                       fallthrough
      :                          @271
  3896: 28                       jump @271
      :                          @272
  3897: 95 11 a8                 sp = sp + 0xffffffffffffffa8
  3900: 7b 10 50                 u64 [sp + 0x50] = ra
  3903: 7b 15 48                 u64 [sp + 0x48] = s0
  3906: 7b 16 40                 u64 [sp + 0x40] = s1
  3909: 7b 18                    u64 [sp] = a1
  3911: 98 79 04                 a2 = a0 >> 0x4
  3914: 33 08 27                 a1 = 0x27
  3917: 53 29 71 02 81 00        jump @275 if a2 <u 625
      :                          @273
  3923: 33 08 27                 a1 = 0x27
  3926: 95 1a 3e                 a3 = sp + 0x3e
  3929: 3a 09 00 00 03           a2 = u64 [0x30000]
  3934: 7b 19 10                 u64 [sp + 0x10] = a2
  3937: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
  3943: 33 04 7b 14              t2 = 0x147b
  3947: 33 0b 8c 01 01           a4 = 0x1018c
  3952: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
  3958: 01                       fallthrough
      :                          @274
  3959: 64 72                    t0 = a0
  3961: 82 17 10                 a0 = u64 [sp + 0x10]
  3964: d6 72 07                 a0 = t0 mulhu a0
  3967: 98 77 0b                 a0 = a0 >> 0xb
  3970: 82 19 08                 a2 = u64 [sp + 0x8]
  3973: c0 97 0c                 i32 a5 = a0 * a2
  3976: c8 2c 06                 s1 = a5 + t0
  3979: 97 6c 30                 a5 = s1 << 0x30
  3982: 98 cc 32                 a5 = a5 >> 0x32
  3985: ca 4c 0c                 a5 = a5 * t2
  3988: 98 c3 11                 t1 = a5 >> 0x11
  3991: 98 cc 10                 a5 = a5 >> 0x10
  3994: 84 cc fe 07              a5 = a5 & 0x7fe
  3998: 96 39 9c                 a2 = t1 * 0xffffffffffffff9c
  4001: c8 69 09                 a2 = a2 + s1
  4004: 97 99 31                 a2 = a2 << 0x31
  4007: 98 99 30                 a2 = a2 >> 0x30
  4010: c8 bc 0c                 a5 = a5 + a4
  4013: 7c c6                    s1 = u8 [a5]
  4015: 7c cc 01                 a5 = u8 [a5 + 0x1]
  4018: c8 b9 09                 a2 = a2 + a4
  4021: 7c 95 01                 s0 = u8 [a2 + 0x1]
  4024: 7c 99                    a2 = u8 [a2]
  4026: 78 ac ff                 u8 [a3 + 0xffffffffffffffff] = a5
  4029: 78 a6 fe                 u8 [a3 + 0xfffffffffffffffe] = s1
  4032: 78 a5 01                 u8 [a3 + 0x1] = s0
  4035: 78 a9                    u8 [a3] = a2
  4037: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
  4040: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
  4043: ac 20 ac                 jump @274 if ra <u t0
      :                          @275
  4046: 54 17 63 3b              jump @277 if a0 <=u 99
      :                          @276
  4050: 97 79 30                 a2 = a0 << 0x30
  4053: 98 99 32                 a2 = a2 >> 0x32
  4056: 96 99 7b 14              a2 = a2 * 0x147b
  4060: 98 99 11                 a2 = a2 >> 0x11
  4063: 96 9a 9c                 a3 = a2 * 0xffffffffffffff9c
  4066: c8 a7 07                 a0 = a0 + a3
  4069: 97 77 31                 a0 = a0 << 0x31
  4072: 98 77 30                 a0 = a0 >> 0x30
  4075: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  4078: 33 0a 8c 01 01           a3 = 0x1018c
  4083: c8 a7 07                 a0 = a0 + a3
  4086: 7c 7a 01                 a3 = u8 [a0 + 0x1]
  4089: 7c 77                    a0 = u8 [a0]
  4091: 95 1b 19                 a4 = sp + 0x19
  4094: c8 8b 0b                 a4 = a4 + a1
  4097: 78 ba 01                 u8 [a4 + 0x1] = a3
  4100: 78 b7                    u8 [a4] = a0
  4102: 64 97                    a0 = a2
  4104: 01                       fallthrough
      :                          @277
  4105: 55 17 0a 14              jump @279 if a0 >=u 10
      :                          @278
  4109: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  4112: 95 19 19                 a2 = sp + 0x19
  4115: c8 89 09                 a2 = a2 + a1
  4118: 83 77 30                 i32 a0 = a0 + 0x30
  4121: 78 97                    u8 [a2] = a0
  4123: 28 21                    jump @280
      :                          @279
  4125: 97 77 01                 a0 = a0 << 0x1
  4128: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  4131: 33 09 8c 01 01           a2 = 0x1018c
  4136: c8 97 07                 a0 = a0 + a2
  4139: 7c 79 01                 a2 = u8 [a0 + 0x1]
  4142: 7c 77                    a0 = u8 [a0]
  4144: 95 1a 19                 a3 = sp + 0x19
  4147: c8 8a 0a                 a3 = a3 + a1
  4150: 78 a9 01                 u8 [a3 + 0x1] = a2
  4153: 78 a7                    u8 [a3] = a0
  4155: 01                       fallthrough
      :                          @280
  4156: 95 1a 19                 a3 = sp + 0x19
  4159: c8 8a 0a                 a3 = a3 + a1
  4162: 9a 8b 27                 a4 = 0x27 - a1
  4165: 33 08 48 01 01           a1 = 0x10148
  4170: 82 17                    a0 = u64 [sp]
  4172: 33 09                    a2 = 0
  4174: 50 10 48 12              ra = 72, jump @282
      :                          @281 [@dyn 36]
  4178: 82 10 50                 ra = u64 [sp + 0x50]
  4181: 82 15 48                 s0 = u64 [sp + 0x48]
  4184: 82 16 40                 s1 = u64 [sp + 0x40]
  4187: 95 11 58                 sp = sp + 0x58
  4190: 32 00                    ret
      :                          @282
  4192: 95 11 98                 sp = sp + 0xffffffffffffff98
  4195: 7b 10 60                 u64 [sp + 0x60] = ra
  4198: 7b 15 58                 u64 [sp + 0x58] = s0
  4201: 7b 16 50                 u64 [sp + 0x50] = s1
  4204: 80 73 34                 t1 = u32 [a0 + 0x34]
  4207: 7b 1a 20                 u64 [sp + 0x20] = a3
  4210: 64 9c                    a5 = a2
  4212: 84 36 01                 s1 = t1 & 0x1
  4215: 33 02 2b                 t0 = 0x2b
  4218: 33 09 00 00 11           a2 = 0x110000
  4223: 84 3a 04                 a3 = t1 & 0x4
  4226: 7b 1b 28                 u64 [sp + 0x28] = a4
  4229: c8 b6 04                 t2 = s1 + a4
  4232: 7b 1c 30                 u64 [sp + 0x30] = a5
  4235: 52 0a 10                 jump @285 if a3 != 0
      :                          @283
  4238: 49 11 38                 u64 [sp + 56] = 0
  4241: 82 78                    a1 = u64 [a0]
  4243: 94 69 2b                 a2 = 0x2b if s1 != 0
  4246: 52 08 35                 jump @289 if a1 != 0
      :                          @284
  4249: 28 56                    jump @294
      :                          @285
  4251: 7b 18 38                 u64 [sp + 0x38] = a1
  4254: 33 09                    a2 = 0
  4256: 51 0c 1b                 jump @288 if a5 == 0
      :                          @286
  4259: 82 1b 38                 a4 = u64 [sp + 0x38]
  4262: 01                       fallthrough
      :                          @287
  4263: 7d b5                    s0 = i8 [a4]
  4265: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
  4268: 85 5a 01                 a3 = s0 ^ 0x1
  4271: c8 a9 09                 a2 = a2 + a3
  4274: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  4277: 95 bb 01                 a4 = a4 + 0x1
  4280: 52 0c ef                 jump @287 if a5 != 0
      :                          @288
  4283: c8 94 04                 t2 = t2 + a2
  4286: 33 09 00 00 11           a2 = 0x110000
  4291: 82 78                    a1 = u64 [a0]
  4293: db 62 09                 a2 = t0 if s1 != 0
  4296: 51 08 27                 jump @294 if a1 == 0
      :                          @289
  4299: 82 7a 08                 a3 = u64 [a0 + 0x8]
  4302: ae a4 21                 jump @294 if t2 >=u a3
      :                          @290
  4305: 84 38 08                 a1 = t1 & 0x8
  4308: 52 08 50                 jump @297 if a1 != 0
      :                          @291
  4311: 7c 76 38                 s1 = u8 [a0 + 0x38]
  4314: c9 4a 0a                 a3 = a3 - t2
  4317: 7b 19 18                 u64 [sp + 0x18] = a2
  4320: 5a 16 01 9d 00           jump @304 if s1 >s 1
      :                          @292
  4325: 52 06 aa 00              jump @306 if s1 != 0
      :                          @293
  4329: 7b 1a 10                 u64 [sp + 0x10] = a3
  4332: 28 a9 00                 jump @307
      :                          @294
  4335: 82 75 20                 s0 = u64 [a0 + 0x20]
  4338: 82 76 28                 s1 = u64 [a0 + 0x28]
  4341: 64 57                    a0 = s0
  4343: 64 68                    a1 = s1
  4345: 82 1a 38                 a3 = u64 [sp + 0x38]
  4348: 82 1b 30                 a4 = u64 [sp + 0x30]
  4351: 50 10 4a 6c 01           ra = 74, jump @327
      :                          @295 [@dyn 37]
  4356: 33 08 01                 a1 = 0x1
  4359: 52 07 bb 00              jump @312 if a0 != 0
      :                          @296
  4363: 82 6c 18                 a5 = u64 [s1 + 0x18]
  4366: 64 57                    a0 = s0
  4368: 82 18 20                 a1 = u64 [sp + 0x20]
  4371: 82 19 28                 a2 = u64 [sp + 0x28]
  4374: 82 10 60                 ra = u64 [sp + 0x60]
  4377: 82 15 58                 s0 = u64 [sp + 0x58]
  4380: 82 16 50                 s1 = u64 [sp + 0x50]
  4383: 95 11 68                 sp = sp + 0x68
  4386: 32 0c                    jump [a5]
      :                          @297
  4388: 7b 1a 40                 u64 [sp + 0x40] = a3
  4391: 64 45                    s0 = t2
  4393: 81 78 30                 a1 = i32 [a0 + 0x30]
  4396: 7b 18 10                 u64 [sp + 0x10] = a1
  4399: 7c 7a 38                 a3 = u8 [a0 + 0x38]
  4402: 7b 1a 08                 u64 [sp + 0x8] = a3
  4405: 82 7a 20                 a3 = u64 [a0 + 0x20]
  4408: 82 78 28                 a1 = u64 [a0 + 0x28]
  4411: 48 17 30 30              u32 [a0 + 48] = 0x30
  4415: 7b 17                    u64 [sp] = a0
  4417: 46 17 38 01              u8 [a0 + 56] = 0x1
  4421: 7b 1a 48                 u64 [sp + 0x48] = a3
  4424: 64 a7                    a0 = a3
  4426: 64 86                    s1 = a1
  4428: 82 1a 38                 a3 = u64 [sp + 0x38]
  4431: 82 1b 30                 a4 = u64 [sp + 0x30]
  4434: 50 10 4c 19 01           ra = 76, jump @327
      :                          @298 [@dyn 38]
  4439: 52 07 67                 jump @311 if a0 != 0
      :                          @299
  4442: 82 17 40                 a0 = u64 [sp + 0x40]
  4445: c9 57 05                 s0 = a0 - s0
  4448: 95 55 01                 s0 = s0 + 0x1
  4451: 01                       fallthrough
      :                          @300
  4452: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  4455: 51 05 c6 00              jump @322 if s0 == 0
      :                          @301
  4459: 82 69 20                 a2 = u64 [s1 + 0x20]
  4462: 33 08 30                 a1 = 0x30
  4465: 82 17 48                 a0 = u64 [sp + 0x48]
  4468: b4 90 01 4e              ra = 78, jump [a2]
      :                          @302 [@dyn 39]
  4472: 51 07 ec                 jump @300 if a0 == 0
      :                          @303
  4475: 28 43                    jump @311
      :                          @304
  4477: 52 16 02 12              jump @306 if s1 != 2
      :                          @305
  4481: 98 a6 01                 s1 = a3 >> 0x1
  4484: 95 a8 01                 a1 = a3 + 0x1
  4487: 98 88 01                 a1 = a1 >> 0x1
  4490: 7b 18 10                 u64 [sp + 0x10] = a1
  4493: 28 08                    jump @307
      :                          @306
  4495: 64 a6                    s1 = a3
  4497: 49 11 10                 u64 [sp + 16] = 0
  4500: 01                       fallthrough
      :                          @307
  4501: 82 78 20                 a1 = u64 [a0 + 0x20]
  4504: 7b 18 48                 u64 [sp + 0x48] = a1
  4507: 82 75 28                 s0 = u64 [a0 + 0x28]
  4510: 81 77 30                 a0 = i32 [a0 + 0x30]
  4513: 7b 17 40                 u64 [sp + 0x40] = a0
  4516: 95 66 01                 s1 = s1 + 0x1
  4519: 01                       fallthrough
      :                          @308
  4520: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  4523: 51 06 27                 jump @313 if s1 == 0
      :                          @309
  4526: 82 59 20                 a2 = u64 [s0 + 0x20]
  4529: 82 17 48                 a0 = u64 [sp + 0x48]
  4532: 82 18 40                 a1 = u64 [sp + 0x40]
  4535: b4 90 01 50              ra = 80, jump [a2]
      :                          @310 [@dyn 40]
  4539: 51 07 ed                 jump @308 if a0 == 0
      :                          @311
  4542: 33 08 01                 a1 = 0x1
  4545: 01                       fallthrough
      :                          @312
  4546: 64 87                    a0 = a1
  4548: 82 10 60                 ra = u64 [sp + 0x60]
  4551: 82 15 58                 s0 = u64 [sp + 0x58]
  4554: 82 16 50                 s1 = u64 [sp + 0x50]
  4557: 95 11 68                 sp = sp + 0x68
  4560: 32 00                    ret
      :                          @313
  4562: 82 16 48                 s1 = u64 [sp + 0x48]
  4565: 64 67                    a0 = s1
  4567: 64 58                    a1 = s0
  4569: 82 19 18                 a2 = u64 [sp + 0x18]
  4572: 82 1a 38                 a3 = u64 [sp + 0x38]
  4575: 82 1b 30                 a4 = u64 [sp + 0x30]
  4578: 50 10 52 89 00           ra = 82, jump @327
      :                          @314 [@dyn 41]
  4583: 33 08 01                 a1 = 0x1
  4586: 52 07 d8                 jump @312 if a0 != 0
      :                          @315
  4589: 82 5a 18                 a3 = u64 [s0 + 0x18]
  4592: 64 67                    a0 = s1
  4594: 82 18 20                 a1 = u64 [sp + 0x20]
  4597: 82 19 28                 a2 = u64 [sp + 0x28]
  4600: b4 a0 01 54              ra = 84, jump [a3]
      :                          @316 [@dyn 42]
  4604: 33 08 01                 a1 = 0x1
  4607: 52 07 c3                 jump @312 if a0 != 0
      :                          @317
  4610: 82 17 10                 a0 = u64 [sp + 0x10]
  4613: 9a 77                    a0 = -a0
  4615: 7b 17 38                 u64 [sp + 0x38] = a0
  4618: 33 06 ff                 s1 = 0xffffffffffffffff
  4621: 01                       fallthrough
      :                          @318
  4622: 82 17 38                 a0 = u64 [sp + 0x38]
  4625: c8 67 07                 a0 = a0 + s1
  4628: 51 17 ff 42              jump @325 if a0 == 4294967295
      :                          @319
  4632: 82 59 20                 a2 = u64 [s0 + 0x20]
  4635: 82 17 48                 a0 = u64 [sp + 0x48]
  4638: 82 18 40                 a1 = u64 [sp + 0x40]
  4641: b4 90 01 56              ra = 86, jump [a2]
      :                          @320 [@dyn 43]
  4645: 95 66 01                 s1 = s1 + 0x1
  4648: 51 07 e6                 jump @318 if a0 == 0
      :                          @321
  4651: 28 37                    jump @326
      :                          @322
  4653: 82 6a 18                 a3 = u64 [s1 + 0x18]
  4656: 82 17 48                 a0 = u64 [sp + 0x48]
  4659: 82 18 20                 a1 = u64 [sp + 0x20]
  4662: 82 19 28                 a2 = u64 [sp + 0x28]
  4665: b4 a0 01 58              ra = 88, jump [a3]
      :                          @323 [@dyn 44]
  4669: 33 08 01                 a1 = 0x1
  4672: 52 07 82                 jump @312 if a0 != 0
      :                          @324
  4675: 33 08                    a1 = 0
  4677: 82 16                    s1 = u64 [sp]
  4679: 82 17 10                 a0 = u64 [sp + 0x10]
  4682: 7a 67 30                 u32 [s1 + 0x30] = a0
  4685: 82 17 08                 a0 = u64 [sp + 0x8]
  4688: 78 67 38                 u8 [s1 + 0x38] = a0
  4691: 28 6f ff                 jump @312
      :                          @325
  4694: 82 16 10                 s1 = u64 [sp + 0x10]
  4697: 82 17 10                 a0 = u64 [sp + 0x10]
  4700: d8 76 08                 a1 = s1 <u a0
  4703: 28 63 ff                 jump @312
      :                          @326
  4706: 82 17 10                 a0 = u64 [sp + 0x10]
  4709: d8 76 08                 a1 = s1 <u a0
  4712: 28 5a ff                 jump @312
      :                          @327
  4715: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  4718: 7b 10 20                 u64 [sp + 0x20] = ra
  4721: 7b 15 18                 u64 [sp + 0x18] = s0
  4724: 7b 16 10                 u64 [sp + 0x10] = s1
  4727: 83 9c                    i32 a5 = a2 + 0
  4729: 33 02 00 00 11           t0 = 0x110000
  4734: 64 a6                    s1 = a3
  4736: 64 85                    s0 = a1
  4738: 64 7a                    a3 = a0
  4740: aa 2c 20                 jump @330 if a5 == t0
      :                          @328
  4743: 82 5c 20                 a5 = u64 [s0 + 0x20]
  4746: 64 a7                    a0 = a3
  4748: 64 98                    a1 = a2
  4750: 7b 1b 08                 u64 [sp + 0x8] = a4
  4753: 7b 1a                    u64 [sp] = a3
  4755: b4 c0 01 5a              ra = 90, jump [a5]
      :                          @329 [@dyn 45]
  4759: 82 1a                    a3 = u64 [sp]
  4761: 82 1b 08                 a4 = u64 [sp + 0x8]
  4764: 64 78                    a1 = a0
  4766: 33 07 01                 a0 = 0x1
  4769: 52 08 20                 jump @333 if a1 != 0
      :                          @330
  4772: 51 06 1a                 jump @332 if s1 == 0
      :                          @331
  4775: 82 5c 18                 a5 = u64 [s0 + 0x18]
  4778: 64 a7                    a0 = a3
  4780: 64 68                    a1 = s1
  4782: 64 b9                    a2 = a4
  4784: 82 10 20                 ra = u64 [sp + 0x20]
  4787: 82 15 18                 s0 = u64 [sp + 0x18]
  4790: 82 16 10                 s1 = u64 [sp + 0x10]
  4793: 95 11 28                 sp = sp + 0x28
  4796: 32 0c                    jump [a5]
      :                          @332
  4798: 33 07                    a0 = 0
  4800: 01                       fallthrough
      :                          @333
  4801: 82 10 20                 ra = u64 [sp + 0x20]
  4804: 82 15 18                 s0 = u64 [sp + 0x18]
  4807: 82 16 10                 s1 = u64 [sp + 0x10]
  4810: 95 11 28                 sp = sp + 0x28
  4813: 32 00                    ret
      :                          @334
  4815: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  4819: 7b 10 80 00              u64 [sp + 0x80] = ra
  4823: 7b 15 78                 u64 [sp + 0x78] = s0
  4826: 7b 16 70                 u64 [sp + 0x70] = s1
  4829: 49 11 60 20              u64 [sp + 96] = 0x20
  4833: 33 0a 03                 a3 = 0x3
  4836: 78 1a 68                 u8 [sp + 0x68] = a3
  4839: 82 96 20                 s1 = u64 [a2 + 0x20]
  4842: 49 11 30                 u64 [sp + 48] = 0
  4845: 49 11 40                 u64 [sp + 64] = 0
  4848: 7b 17 50                 u64 [sp + 0x50] = a0
  4851: 7b 18 58                 u64 [sp + 0x58] = a1
  4854: 51 06 07 01              jump @356 if s1 == 0
      :                          @335
  4858: 82 97 28                 a0 = u64 [a2 + 0x28]
  4861: 51 07 74 01              jump @366 if a0 == 0
      :                          @336
  4865: 49 11 28                 u64 [sp + 40] = 0
  4868: 82 95                    s0 = u64 [a2]
  4870: 7b 19 08                 u64 [sp + 0x8] = a2
  4873: 82 98 10                 a1 = u64 [a2 + 0x10]
  4876: 7b 18 18                 u64 [sp + 0x18] = a1
  4879: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  4882: 97 88 03                 a1 = a1 << 0x3
  4885: 98 88 03                 a1 = a1 >> 0x3
  4888: 95 88 01                 a1 = a1 + 0x1
  4891: 7b 18                    u64 [sp] = a1
  4893: 95 55 08                 s0 = s0 + 0x8
  4896: 96 78 38                 a1 = a0 * 0x38
  4899: 95 66 18                 s1 = s1 + 0x18
  4902: 33 07 46                 a0 = 0x46
  4905: 7b 17 10                 u64 [sp + 0x10] = a0
  4908: 01                       fallthrough
      :                          @337
  4909: 7b 18 20                 u64 [sp + 0x20] = a1
  4912: 82 59                    a2 = u64 [s0]
  4914: 51 09 17                 jump @340 if a2 == 0
      :                          @338
  4917: 82 1a 58                 a3 = u64 [sp + 0x58]
  4920: 82 17 50                 a0 = u64 [sp + 0x50]
  4923: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  4926: 82 aa 18                 a3 = u64 [a3 + 0x18]
  4929: b4 a0 01 5c              ra = 92, jump [a3]
      :                          @339 [@dyn 46]
  4933: 52 07 51 01              jump @369 if a0 != 0
      :                          @340
  4937: 81 67 10                 a0 = i32 [s1 + 0x10]
  4940: 7a 17 60                 u32 [sp + 0x60] = a0
  4943: 7c 67 18                 a0 = u8 [s1 + 0x18]
  4946: 78 17 68                 u8 [sp + 0x68] = a0
  4949: 81 67 14                 a0 = i32 [s1 + 0x14]
  4952: 7a 17 64                 u32 [sp + 0x64] = a0
  4955: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  4958: 82 67                    a0 = u64 [s1]
  4960: 51 08 26                 jump @345 if a1 == 0
      :                          @341
  4963: 52 18 01 16              jump @343 if a1 != 1
      :                          @342
  4967: 97 77 04                 a0 = a0 << 0x4
  4970: 82 18 18                 a1 = u64 [sp + 0x18]
  4973: c8 87 07                 a0 = a0 + a1
  4976: 82 78 08                 a1 = u64 [a0 + 0x8]
  4979: 82 19 10                 a2 = u64 [sp + 0x10]
  4982: aa 98 07                 jump @344 if a1 == a2
      :                          @343
  4985: 33 08                    a1 = 0
  4987: 28 0f                    jump @346
      :                          @344
  4989: 82 77                    a0 = u64 [a0]
  4991: 82 77                    a0 = u64 [a0]
  4993: 33 08 01                 a1 = 0x1
  4996: 28 06                    jump @346
      :                          @345
  4998: 33 08 01                 a1 = 0x1
  5001: 01                       fallthrough
      :                          @346
  5002: 7b 18 30                 u64 [sp + 0x30] = a1
  5005: 7b 17 38                 u64 [sp + 0x38] = a0
  5008: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  5011: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  5014: 51 08 26                 jump @351 if a1 == 0
      :                          @347
  5017: 52 18 01 16              jump @349 if a1 != 1
      :                          @348
  5021: 97 77 04                 a0 = a0 << 0x4
  5024: 82 18 18                 a1 = u64 [sp + 0x18]
  5027: c8 87 07                 a0 = a0 + a1
  5030: 82 78 08                 a1 = u64 [a0 + 0x8]
  5033: 82 19 10                 a2 = u64 [sp + 0x10]
  5036: aa 98 07                 jump @350 if a1 == a2
      :                          @349
  5039: 33 08                    a1 = 0
  5041: 28 0f                    jump @352
      :                          @350
  5043: 82 77                    a0 = u64 [a0]
  5045: 82 77                    a0 = u64 [a0]
  5047: 33 08 01                 a1 = 0x1
  5050: 28 06                    jump @352
      :                          @351
  5052: 33 08 01                 a1 = 0x1
  5055: 01                       fallthrough
      :                          @352
  5056: 7b 18 40                 u64 [sp + 0x40] = a1
  5059: 7b 17 48                 u64 [sp + 0x48] = a0
  5062: 82 67 08                 a0 = u64 [s1 + 0x8]
  5065: 97 77 04                 a0 = a0 << 0x4
  5068: 82 18 18                 a1 = u64 [sp + 0x18]
  5071: c8 78 08                 a1 = a1 + a0
  5074: 82 87                    a0 = u64 [a1]
  5076: 82 89 08                 a2 = u64 [a1 + 0x8]
  5079: 95 18 30                 a1 = sp + 0x30
  5082: b4 90 01 5e              ra = 94, jump [a2]
      :                          @353 [@dyn 47]
  5086: 52 07 b8 00              jump @369 if a0 != 0
      :                          @354
  5090: 95 55 10                 s0 = s0 + 0x10
  5093: 82 18 20                 a1 = u64 [sp + 0x20]
  5096: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  5099: 95 66 38                 s1 = s1 + 0x38
  5102: 82 17 28                 a0 = u64 [sp + 0x28]
  5105: 95 77 01                 a0 = a0 + 0x1
  5108: 7b 17 28                 u64 [sp + 0x28] = a0
  5111: 52 08 36 ff              jump @337 if a1 != 0
      :                          @355
  5115: 28 69                    jump @364
      :                          @356
  5117: 82 97 18                 a0 = u64 [a2 + 0x18]
  5120: 51 07 71                 jump @366 if a0 == 0
      :                          @357
  5123: 82 95 10                 s0 = u64 [a2 + 0x10]
  5126: 33 0a                    a3 = 0
  5128: 97 78 04                 a1 = a0 << 0x4
  5131: c8 58 08                 a1 = a1 + s0
  5134: 7b 18 20                 u64 [sp + 0x20] = a1
  5137: 7b 19 08                 u64 [sp + 0x8] = a2
  5140: 82 96                    s1 = u64 [a2]
  5142: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  5145: 97 77 04                 a0 = a0 << 0x4
  5148: 98 77 04                 a0 = a0 >> 0x4
  5151: 95 77 01                 a0 = a0 + 0x1
  5154: 7b 17                    u64 [sp] = a0
  5156: 95 66 08                 s1 = s1 + 0x8
  5159: 01                       fallthrough
      :                          @358
  5160: 7b 1a 28                 u64 [sp + 0x28] = a3
  5163: 82 69                    a2 = u64 [s1]
  5165: 51 09 16                 jump @361 if a2 == 0
      :                          @359
  5168: 82 1a 58                 a3 = u64 [sp + 0x58]
  5171: 82 17 50                 a0 = u64 [sp + 0x50]
  5174: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  5177: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5180: b4 a0 01 60              ra = 96, jump [a3]
      :                          @360 [@dyn 48]
  5184: 52 07 56                 jump @369 if a0 != 0
      :                          @361
  5187: 82 57                    a0 = u64 [s0]
  5189: 82 59 08                 a2 = u64 [s0 + 0x8]
  5192: 95 18 30                 a1 = sp + 0x30
  5195: b4 90 01 62              ra = 98, jump [a2]
      :                          @362 [@dyn 49]
  5199: 52 07 47                 jump @369 if a0 != 0
      :                          @363
  5202: 95 66 10                 s1 = s1 + 0x10
  5205: 95 55 10                 s0 = s0 + 0x10
  5208: 82 1a 28                 a3 = u64 [sp + 0x28]
  5211: 95 aa 01                 a3 = a3 + 0x1
  5214: 82 17 20                 a0 = u64 [sp + 0x20]
  5217: ab 75 c7                 jump @358 if s0 != a0
      :                          @364
  5220: 82 19 08                 a2 = u64 [sp + 0x8]
  5223: 82 1a                    a3 = u64 [sp]
  5225: 82 97 08                 a0 = u64 [a2 + 0x8]
  5228: ac 7a 0d                 jump @367 if a3 <u a0
      :                          @365
  5231: 28 2c                    jump @370
      :                          @366
  5233: 33 0a                    a3 = 0
  5235: 82 97 08                 a0 = u64 [a2 + 0x8]
  5238: 54 07 25                 jump @370 if a0 <=u 0
      :                          @367
  5241: 82 97                    a0 = u64 [a2]
  5243: 97 a8 04                 a1 = a3 << 0x4
  5246: c8 87 09                 a2 = a0 + a1
  5249: 82 1a 58                 a3 = u64 [sp + 0x58]
  5252: 82 17 50                 a0 = u64 [sp + 0x50]
  5255: 82 98                    a1 = u64 [a2]
  5257: 82 99 08                 a2 = u64 [a2 + 0x8]
  5260: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5263: b4 a0 01 64              ra = 100, jump [a3]
      :                          @368 [@dyn 50]
  5267: 51 07 08                 jump @370 if a0 == 0
      :                          @369
  5270: 33 07 01                 a0 = 0x1
  5273: 28 05                    jump @371
      :                          @370
  5275: 33 07                    a0 = 0
  5277: 01                       fallthrough
      :                          @371
  5278: 82 10 80 00              ra = u64 [sp + 0x80]
  5282: 82 15 78                 s0 = u64 [sp + 0x78]
  5285: 82 16 70                 s1 = u64 [sp + 0x70]
  5288: 95 11 88 00              sp = sp + 0x88
  5292: 32 00                    ret
      :                          @372 [@dyn 51]
  5294: 32 00                    ret
      :                          @373 [@dyn 52]
  5296: 95 11 80                 sp = sp + 0xffffffffffffff80
  5299: 7b 10 78                 u64 [sp + 0x78] = ra
  5302: 7b 15 70                 u64 [sp + 0x70] = s0
  5305: 7b 16 68                 u64 [sp + 0x68] = s1
  5308: 64 92                    t0 = a2
  5310: 33 00                    ra = 0
  5312: 33 0b                    a4 = 0
  5314: 33 05                    s0 = 0
  5316: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
  5326: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
  5332: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
  5342: 82 79 10                 a2 = u64 [a0 + 0x10]
  5345: 7b 19 48                 u64 [sp + 0x48] = a2
  5348: 82 79                    a2 = u64 [a0]
  5350: 7b 19 38                 u64 [sp + 0x38] = a2
  5353: 82 77 08                 a0 = u64 [a0 + 0x8]
  5356: 7b 17 30                 u64 [sp + 0x30] = a0
  5359: 33 07 80 01 01           a0 = 0x10180
  5364: 7b 17 08                 u64 [sp + 0x8] = a0
  5367: 3a 07 08 00 03           a0 = u64 [0x30008]
  5372: 7b 17 60                 u64 [sp + 0x60] = a0
  5375: 7b 18 58                 u64 [sp + 0x58] = a1
  5378: 95 88 08                 a1 = a1 + 0x8
  5381: 7b 18                    u64 [sp] = a1
  5383: 33 0c 0a                 a5 = 0xa
  5386: 7b 12 20                 u64 [sp + 0x20] = t0
  5389: 7b 13 18                 u64 [sp + 0x18] = t1
  5392: 7b 14 10                 u64 [sp + 0x10] = t2
  5395: 28 3a                    jump @377
      :                          @374
  5397: 64 06                    s1 = ra
  5399: c8 89 07                 a0 = a2 + a1
  5402: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
  5405: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  5408: 88 77 01                 a0 = a0 <u 0x1
  5411: 01                       fallthrough
      :                          @375
  5412: 82 1a 48                 a3 = u64 [sp + 0x48]
  5415: 78 a7                    u8 [a3] = a0
  5417: 82 17 30                 a0 = u64 [sp + 0x30]
  5420: 82 7a 18                 a3 = u64 [a0 + 0x18]
  5423: 82 17 38                 a0 = u64 [sp + 0x38]
  5426: b4 a0 01 6a              ra = 106, jump [a3]
      :                          @376 [@dyn 53]
  5430: 64 5b                    a4 = s0
  5432: 82 12 20                 t0 = u64 [sp + 0x20]
  5435: 82 13 18                 t1 = u64 [sp + 0x18]
  5438: 82 14 10                 t2 = u64 [sp + 0x10]
  5441: 64 60                    ra = s1
  5443: 33 0c 0a                 a5 = 0xa
  5446: 82 15 40                 s0 = u64 [sp + 0x40]
  5449: 52 07 63 01              jump @418 if a0 != 0
      :                          @377
  5453: 84 57 ff 00              a0 = s0 & 0xff
  5457: 52 07 57 01              jump @417 if a0 != 0
      :                          @378
  5461: 7b 1b 50                 u64 [sp + 0x50] = a4
  5464: ae 02 0a                 jump @381 if t0 >=u ra
      :                          @379
  5467: 28 ef 00                 jump @408
      :                          @380
  5470: ac 02 ec 00              jump @408 if t0 <u ra
      :                          @381
  5474: c9 02 08                 a1 = t0 - ra
  5477: 82 16 58                 s1 = u64 [sp + 0x58]
  5480: c8 06 06                 s1 = s1 + ra
  5483: 55 18 10 1d              jump @387 if a1 >=u 16
      :                          @382
  5487: aa 02 d8 00              jump @407 if t0 == ra
      :                          @383
  5491: 33 0a                    a3 = 0
  5493: 01                       fallthrough
      :                          @384
  5494: c8 a6 07                 a0 = s1 + a3
  5497: 7c 77                    a0 = u8 [a0]
  5499: aa c7 a5 00              jump @402 if a0 == a5
      :                          @385
  5503: 95 aa 01                 a3 = a3 + 0x1
  5506: ab a8 f4                 jump @384 if a1 != a3
      :                          @386
  5509: 28 c2 00                 jump @407
      :                          @387
  5512: 95 69 07                 a2 = s1 + 0x7
  5515: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
  5518: c9 6a 07                 a0 = a3 - s1
  5521: d3 6a 0a                 a3 = a3 ^ s1
  5524: 88 aa 01                 a3 = a3 <u 0x1
  5527: 88 7b 01                 a4 = a0 <u 0x1
  5530: d4 ba 0a                 a3 = a3 | a4
  5533: 51 0a 45                 jump @393 if a3 == 0
      :                          @388
  5536: 33 07                    a0 = 0
  5538: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  5541: 82 1b                    a4 = u64 [sp]
  5543: c8 0b 0b                 a4 = a4 + ra
  5546: 28 08                    jump @390
      :                          @389
  5548: 82 1b                    a4 = u64 [sp]
  5550: c8 0b 0b                 a4 = a4 + ra
  5553: 01                       fallthrough
      :                          @390
  5554: c8 76 0c                 a5 = s1 + a0
  5557: 82 cc                    a5 = u64 [a5]
  5559: c8 7b 09                 a2 = a4 + a0
  5562: 82 99                    a2 = u64 [a2]
  5564: d3 4c 05                 s0 = a5 ^ t2
  5567: c8 35 05                 s0 = s0 + t1
  5570: e0 c5 0c                 a5 = s0 & ~a5
  5573: d3 49 05                 s0 = a2 ^ t2
  5576: c8 35 05                 s0 = s0 + t1
  5579: e0 95 09                 a2 = s0 & ~a2
  5582: d4 c9 09                 a2 = a2 | a5
  5585: 82 1c 60                 a5 = u64 [sp + 0x60]
  5588: d2 c9 09                 a2 = a2 & a5
  5591: 52 09 1f                 jump @396 if a2 != 0
      :                          @391
  5594: 95 77 10                 a0 = a0 + 0x10
  5597: ae 7a d5                 jump @390 if a3 >=u a0
      :                          @392
  5600: 28 16                    jump @396
      :                          @393
  5602: c8 a6 0b                 a4 = s1 + a3
  5605: 7c bb                    a4 = u8 [a4]
  5607: aa cb 51                 jump @405 if a4 == a5
      :                          @394
  5610: 95 aa 01                 a3 = a3 + 0x1
  5613: ab a7 f5                 jump @393 if a0 != a3
      :                          @395
  5616: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  5619: ae 7a b9                 jump @389 if a3 >=u a0
      :                          @396
  5622: aa 87 9a 00              jump @414 if a0 == a1
      :                          @397
  5626: 33 0a                    a3 = 0
  5628: c8 76 06                 s1 = s1 + a0
  5631: c9 72 08                 a1 = t0 - a0
  5634: c9 08 08                 a1 = a1 - ra
  5637: 33 0c 0a                 a5 = 0xa
  5640: 82 1b 50                 a4 = u64 [sp + 0x50]
  5643: 01                       fallthrough
      :                          @398
  5644: c8 a6 09                 a2 = s1 + a3
  5647: 7c 99                    a2 = u8 [a2]
  5649: aa c9 0b                 jump @401 if a2 == a5
      :                          @399
  5652: 95 aa 01                 a3 = a3 + 0x1
  5655: ab a8 f5                 jump @398 if a1 != a3
      :                          @400
  5658: 28 2d                    jump @407
      :                          @401
  5660: c8 7a 0a                 a3 = a3 + a0
  5663: 01                       fallthrough
      :                          @402
  5664: c8 0a 0a                 a3 = a3 + ra
  5667: 95 a0 01                 ra = a3 + 0x1
  5670: ae 2a 38 ff              jump @380 if a3 >=u t0
      :                          @403
  5674: 82 17 58                 a0 = u64 [sp + 0x58]
  5677: c8 7a 0a                 a3 = a3 + a0
  5680: 7c a7                    a0 = u8 [a3]
  5682: ab c7 2c ff              jump @380 if a0 != a5
      :                          @404
  5686: 28 61                    jump @415
      :                          @405
  5688: 82 1b 50                 a4 = u64 [sp + 0x50]
  5691: c8 0a 0a                 a3 = a3 + ra
  5694: 95 a0 01                 ra = a3 + 0x1
  5697: ac 2a e9                 jump @403 if a3 <u t0
      :                          @406
  5700: 28 1a ff                 jump @380
      :                          @407
  5703: 64 20                    ra = t0
  5705: 01                       fallthrough
      :                          @408
  5706: 49 11 40 01              u64 [sp + 64] = 0x1
  5710: 64 b5                    s0 = a4
  5712: 64 26                    s1 = t0
  5714: aa 2b 56                 jump @417 if a4 == t0
      :                          @409
  5717: 82 17 48                 a0 = u64 [sp + 0x48]
  5720: 7c 77                    a0 = u8 [a0]
  5722: 51 07 22                 jump @412 if a0 == 0
      :                          @410
  5725: 82 17 30                 a0 = u64 [sp + 0x30]
  5728: 82 7a 18                 a3 = u64 [a0 + 0x18]
  5731: 33 09 04                 a2 = 0x4
  5734: 82 17 38                 a0 = u64 [sp + 0x38]
  5737: 82 18 08                 a1 = u64 [sp + 0x8]
  5740: 7b 10 28                 u64 [sp + 0x28] = ra
  5743: b4 a0 01 6c              ra = 108, jump [a3]
      :                          @411 [@dyn 54]
  5747: 82 1b 50                 a4 = u64 [sp + 0x50]
  5750: 82 10 28                 ra = u64 [sp + 0x28]
  5753: 52 07 33                 jump @418 if a0 != 0
      :                          @412
  5756: c9 b6 09                 a2 = s1 - a4
  5759: 82 18 58                 a1 = u64 [sp + 0x58]
  5762: c8 b8 08                 a1 = a1 + a4
  5765: ab b6 90 fe              jump @374 if s1 != a4
      :                          @413
  5769: 64 06                    s1 = ra
  5771: 33 07                    a0 = 0
  5773: 28 97 fe                 jump @375
      :                          @414
  5776: 64 20                    ra = t0
  5778: 82 1b 50                 a4 = u64 [sp + 0x50]
  5781: 28 b5                    jump @408
      :                          @415
  5783: 49 11 40                 u64 [sp + 64] = 0
  5786: 64 05                    s0 = ra
  5788: 64 06                    s1 = ra
  5790: 82 17 48                 a0 = u64 [sp + 0x48]
  5793: 7c 77                    a0 = u8 [a0]
  5795: 52 07 ba                 jump @410 if a0 != 0
      :                          @416
  5798: 28 d6                    jump @412
      :                          @417
  5800: 33 07                    a0 = 0
  5802: 28 06                    jump @419
      :                          @418
  5804: 33 07 01                 a0 = 0x1
  5807: 01                       fallthrough
      :                          @419
  5808: 82 10 78                 ra = u64 [sp + 0x78]
  5811: 82 15 70                 s0 = u64 [sp + 0x70]
  5814: 82 16 68                 s1 = u64 [sp + 0x68]
  5817: 95 11 80 00              sp = sp + 0x80
  5821: 32 00                    ret
      :                          @420 [@dyn 55]
  5823: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  5826: 7b 10 20                 u64 [sp + 0x20] = ra
  5829: 7b 15 18                 u64 [sp + 0x18] = s0
  5832: 7b 16 10                 u64 [sp + 0x10] = s1
  5835: 82 75 10                 s0 = u64 [a0 + 0x10]
  5838: 7c 59                    a2 = u8 [s0]
  5840: 82 7b                    a4 = u64 [a0]
  5842: 82 76 08                 s1 = u64 [a0 + 0x8]
  5845: 51 09 32                 jump @424 if a2 == 0
      :                          @421
  5848: 82 6a 18                 a3 = u64 [s1 + 0x18]
  5851: 7b 18 08                 u64 [sp + 0x8] = a1
  5854: 33 08 80 01 01           a1 = 0x10180
  5859: 33 09 04                 a2 = 0x4
  5862: 64 b7                    a0 = a4
  5864: 7b 1b                    u64 [sp] = a4
  5866: b4 a0 01 70              ra = 112, jump [a3]
      :                          @422 [@dyn 56]
  5870: 82 18 08                 a1 = u64 [sp + 0x8]
  5873: 82 1b                    a4 = u64 [sp]
  5875: 51 07 14                 jump @424 if a0 == 0
      :                          @423
  5878: 33 07 01                 a0 = 0x1
  5881: 82 10 20                 ra = u64 [sp + 0x20]
  5884: 82 15 18                 s0 = u64 [sp + 0x18]
  5887: 82 16 10                 s1 = u64 [sp + 0x10]
  5890: 95 11 28                 sp = sp + 0x28
  5893: 32 00                    ret
      :                          @424
  5895: 83 87                    i32 a0 = a1 + 0
  5897: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  5900: 88 77 01                 a0 = a0 <u 0x1
  5903: 78 57                    u8 [s0] = a0
  5905: 82 6c 20                 a5 = u64 [s1 + 0x20]
  5908: 64 b7                    a0 = a4
  5910: 82 10 20                 ra = u64 [sp + 0x20]
  5913: 82 15 18                 s0 = u64 [sp + 0x18]
  5916: 82 16 10                 s1 = u64 [sp + 0x10]
  5919: 95 11 28                 sp = sp + 0x28
  5922: 32 0c                    jump [a5]
      :                          @425 [@dyn 57]
  5924: 64 8a                    a3 = a1
  5926: 33 08 50 01 01           a1 = 0x10150
  5931: 64 a9                    a2 = a3
  5933: 28 a2 fb                 jump @334
      :                          @426
  5936: 95 11 70 ff              sp = sp + 0xffffffffffffff70
  5940: 7b 10 88 00              u64 [sp + 0x88] = ra
  5944: 7b 15 80 00              u64 [sp + 0x80] = s0
  5948: 7b 16 78                 u64 [sp + 0x78] = s1
  5951: 64 75                    s0 = a0
  5953: 7c 77 08                 a0 = u8 [a0 + 0x8]
  5956: 64 8b                    a4 = a1
  5958: 33 08 01                 a1 = 0x1
  5961: 33 06 01                 s1 = 0x1
  5964: 51 07 1d                 jump @428 if a0 == 0
      :                          @427
  5967: 78 56 08                 u8 [s0 + 0x8] = s1
  5970: 46 15 09 01              u8 [s0 + 9] = 0x1
  5974: 64 57                    a0 = s0
  5976: 82 10 88 00              ra = u64 [sp + 0x88]
  5980: 82 15 80 00              s0 = u64 [sp + 0x80]
  5984: 82 16 78                 s1 = u64 [sp + 0x78]
  5987: 95 11 90 00              sp = sp + 0x90
  5991: 32 00                    ret
      :                          @428
  5993: 64 9a                    a3 = a2
  5995: 82 5c                    a5 = u64 [s0]
  5997: 80 c7 34                 a0 = u32 [a5 + 0x34]
  6000: 7c 58 09                 a1 = u8 [s0 + 0x9]
  6003: 84 79 04                 a2 = a0 & 0x4
  6006: 52 09 43                 jump @434 if a2 != 0
      :                          @429
  6009: 51 08 31                 jump @432 if a1 == 0
      :                          @430
  6012: 82 c8 28                 a1 = u64 [a5 + 0x28]
  6015: 82 c7 20                 a0 = u64 [a5 + 0x20]
  6018: 82 83 18                 t1 = u64 [a1 + 0x18]
  6021: 33 08 84 01 01           a1 = 0x10184
  6026: 33 09 02                 a2 = 0x2
  6029: 64 a6                    s1 = a3
  6031: 7b 1b 10                 u64 [sp + 0x10] = a4
  6034: 7b 1c 08                 u64 [sp + 0x8] = a5
  6037: b4 30 01 74              ra = 116, jump [t1]
      :                          @431 [@dyn 58]
  6041: 82 1c 08                 a5 = u64 [sp + 0x8]
  6044: 82 1b 10                 a4 = u64 [sp + 0x10]
  6047: 64 6a                    a3 = s1
  6049: 33 08 01                 a1 = 0x1
  6052: 33 06 01                 s1 = 0x1
  6055: 52 07 a8                 jump @427 if a0 != 0
      :                          @432
  6058: 64 b7                    a0 = a4
  6060: 64 c8                    a1 = a5
  6062: b4 a0 01 76              ra = 118, jump [a3]
      :                          @433 [@dyn 59]
  6066: 33 08 01                 a1 = 0x1
  6069: 64 76                    s1 = a0
  6071: 28 98                    jump @427
      :                          @434
  6073: 52 08 36                 jump @438 if a1 != 0
      :                          @435
  6076: 82 c8 28                 a1 = u64 [a5 + 0x28]
  6079: 82 c7 20                 a0 = u64 [a5 + 0x20]
  6082: 82 83 18                 t1 = u64 [a1 + 0x18]
  6085: 33 08 88 01 01           a1 = 0x10188
  6090: 33 09 01                 a2 = 0x1
  6093: 33 06 01                 s1 = 0x1
  6096: 7b 1a                    u64 [sp] = a3
  6098: 7b 1b 10                 u64 [sp + 0x10] = a4
  6101: 7b 1c 08                 u64 [sp + 0x8] = a5
  6104: b4 30 01 78              ra = 120, jump [t1]
      :                          @436 [@dyn 60]
  6108: 82 1c 08                 a5 = u64 [sp + 0x8]
  6111: 82 1b 10                 a4 = u64 [sp + 0x10]
  6114: 82 1a                    a3 = u64 [sp]
  6116: 33 08 01                 a1 = 0x1
  6119: 52 07 68 ff              jump @427 if a0 != 0
      :                          @437
  6123: 81 c7 34                 a0 = i32 [a5 + 0x34]
  6126: 01                       fallthrough
      :                          @438
  6127: 33 06 01                 s1 = 0x1
  6130: 78 16 37                 u8 [sp + 0x37] = s1
  6133: 82 c8 20                 a1 = u64 [a5 + 0x20]
  6136: 82 c9 28                 a2 = u64 [a5 + 0x28]
  6139: 7b 18 18                 u64 [sp + 0x18] = a1
  6142: 7b 19 20                 u64 [sp + 0x20] = a2
  6145: 95 18 37                 a1 = sp + 0x37
  6148: 7b 18 28                 u64 [sp + 0x28] = a1
  6151: 81 c8 30                 a1 = i32 [a5 + 0x30]
  6154: 7c c9 38                 a2 = u8 [a5 + 0x38]
  6157: 82 c3                    t1 = u64 [a5]
  6159: 82 c4 08                 t2 = u64 [a5 + 0x8]
  6162: 82 c0 10                 ra = u64 [a5 + 0x10]
  6165: 82 c2 18                 t0 = u64 [a5 + 0x18]
  6168: 7a 17 6c                 u32 [sp + 0x6c] = a0
  6171: 7a 18 68                 u32 [sp + 0x68] = a1
  6174: 78 19 70                 u8 [sp + 0x70] = a2
  6177: 7b 13 38                 u64 [sp + 0x38] = t1
  6180: 7b 14 40                 u64 [sp + 0x40] = t2
  6183: 7b 10 48                 u64 [sp + 0x48] = ra
  6186: 7b 12 50                 u64 [sp + 0x50] = t0
  6189: 95 17 18                 a0 = sp + 0x18
  6192: 7b 17 58                 u64 [sp + 0x58] = a0
  6195: 33 07 50 01 01           a0 = 0x10150
  6200: 7b 17 60                 u64 [sp + 0x60] = a0
  6203: 95 18 38                 a1 = sp + 0x38
  6206: 64 b7                    a0 = a4
  6208: b4 a0 01 7a              ra = 122, jump [a3]
      :                          @439 [@dyn 61]
  6212: 52 07 20                 jump @442 if a0 != 0
      :                          @440
  6215: 82 18 60                 a1 = u64 [sp + 0x60]
  6218: 82 17 58                 a0 = u64 [sp + 0x58]
  6221: 82 8a 18                 a3 = u64 [a1 + 0x18]
  6224: 33 08 86 01 01           a1 = 0x10186
  6229: 33 09 02                 a2 = 0x2
  6232: b4 a0 01 7c              ra = 124, jump [a3]
      :                          @441 [@dyn 62]
  6236: 64 76                    s1 = a0
  6238: 33 08 01                 a1 = 0x1
  6241: 28 ee fe                 jump @427
      :                          @442
  6244: 33 08 01                 a1 = 0x1
  6247: 28 e8 fe                 jump @427
      :                          @443
  6250: 51 08 9b 00              jump @464 if a1 == 0
      :                          @444
  6254: 64 79                    a2 = a0
  6256: 7c 77                    a0 = u8 [a0]
  6258: 51 07 91 00              jump @463 if a0 == 0
      :                          @445
  6262: 51 27 ff 00 90 00        jump @465 if a0 == 255
      :                          @446
  6268: 6c 7a                    a3 = sext.b a0
  6270: 57 0a 09                 jump @448 if a3 <s 0
      :                          @447
  6273: 33 0a                    a3 = 0
  6275: 33 08                    a1 = 0
  6277: 28 73                    jump @462
      :                          @448
  6279: 55 27 c0 00 0d           jump @450 if a0 >=u 192
      :                          @449
  6284: 33 0a 01                 a3 = 0x1
  6287: 33 0b 80                 a4 = 0xffffffffffffff80
  6290: 28 4a                    jump @459
      :                          @450
  6292: 55 27 e0 00 0e           jump @452 if a0 >=u 224
      :                          @451
  6297: 33 0a 02                 a3 = 0x2
  6300: 33 0b 40 ff              a4 = 0xffffffffffffff40
  6304: 28 3c                    jump @459
      :                          @452
  6306: 55 27 f0 00 0e           jump @454 if a0 >=u 240
      :                          @453
  6311: 33 0a 03                 a3 = 0x3
  6314: 33 0b 20 ff              a4 = 0xffffffffffffff20
  6318: 28 2e                    jump @459
      :                          @454
  6320: 55 27 f8 00 0e           jump @456 if a0 >=u 248
      :                          @455
  6325: 33 0a 04                 a3 = 0x4
  6328: 33 0b 10 ff              a4 = 0xffffffffffffff10
  6332: 28 20                    jump @459
      :                          @456
  6334: 55 27 fc 00 0e           jump @458 if a0 >=u 252
      :                          @457
  6339: 33 0a 05                 a3 = 0x5
  6342: 33 0b 08 ff              a4 = 0xffffffffffffff08
  6346: 28 12                    jump @459
      :                          @458
  6348: 88 7a fe 00              a3 = a0 <u 0xfe
  6352: 33 0b 04 ff              a4 = 0xffffffffffffff04
  6356: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  6360: 85 aa 07                 a3 = a3 ^ 0x7
  6363: 01                       fallthrough
      :                          @459
  6364: ae 8a 2b                 jump @466 if a3 >=u a1
      :                          @460
  6367: 33 08                    a1 = 0
  6369: c8 b7 07                 a0 = a0 + a4
  6372: 64 ab                    a4 = a3
  6374: 01                       fallthrough
      :                          @461
  6375: c8 b9 0c                 a5 = a2 + a4
  6378: 7c cc                    a5 = u8 [a5]
  6380: 97 88 08                 a1 = a1 << 0x8
  6383: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  6386: d4 c8 08                 a1 = a1 | a5
  6389: 52 0b f2                 jump @461 if a4 != 0
      :                          @462
  6392: 8a a9 03                 i32 a2 = a3 << 0x3
  6395: cf 97 07                 a0 = a0 << a2
  6398: c8 87 07                 a0 = a0 + a1
  6401: 32 00                    ret
      :                          @463
  6403: 32 00                    ret
      :                          @464
  6405: 00                       trap
      :                          @465
  6406: 00                       trap
      :                          @466
  6407: 00                       trap
      :                          @467 [@dyn 63]
  6408: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  6411: 7b 10 28                 u64 [sp + 0x28] = ra
  6414: 7b 15 20                 u64 [sp + 0x20] = s0
  6417: 7b 16 18                 u64 [sp + 0x18] = s1
  6420: 64 86                    s1 = a1
  6422: 82 88 28                 a1 = u64 [a1 + 0x28]
  6425: 82 6a 20                 a3 = u64 [s1 + 0x20]
  6428: 82 8b 18                 a4 = u64 [a1 + 0x18]
  6431: 64 75                    s0 = a0
  6433: 33 08 48 01 01           a1 = 0x10148
  6438: 33 09 01                 a2 = 0x1
  6441: 64 a7                    a0 = a3
  6443: b4 b0 02 80 00           ra = 128, jump [a4]
      :                          @468 [@dyn 64]
  6448: 7b 16                    u64 [sp] = s1
  6450: 78 17 08                 u8 [sp + 0x8] = a0
  6453: 46 11 09                 u8 [sp + 9] = 0
  6456: 7b 15 10                 u64 [sp + 0x10] = s0
  6459: 33 09 86 00              a2 = 0x86
  6463: 64 17                    a0 = sp
  6465: 95 18 10                 a1 = sp + 0x10
  6468: 50 20 82 00 ec fd        ra = 130, jump @426
      :                          @469 [@dyn 65]
  6474: 33 07 01                 a0 = 0x1
  6477: 7c 18 08                 a1 = u8 [sp + 0x8]
  6480: 52 08 1b                 jump @471 if a1 != 0
      :                          @470
  6483: 82 17                    a0 = u64 [sp]
  6485: 82 78 28                 a1 = u64 [a0 + 0x28]
  6488: 82 77 20                 a0 = u64 [a0 + 0x20]
  6491: 82 8a 18                 a3 = u64 [a1 + 0x18]
  6494: 33 08 89 01 01           a1 = 0x10189
  6499: 33 09 01                 a2 = 0x1
  6502: b4 a0 02 84 00           ra = 132, jump [a3]
      :                          @471 [@dyn 66]
  6507: 82 10 28                 ra = u64 [sp + 0x28]
  6510: 82 15 20                 s0 = u64 [sp + 0x20]
  6513: 82 16 18                 s1 = u64 [sp + 0x18]
  6516: 95 11 30                 sp = sp + 0x30
  6519: 32 00                    ret
      :                          @472 [@dyn 67]
  6521: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  6525: 7b 10 80 00              u64 [sp + 0x80] = ra
  6529: 80 89 34                 a2 = u32 [a1 + 0x34]
  6532: 82 77                    a0 = u64 [a0]
  6534: 84 9a 10                 a3 = a2 & 0x10
  6537: 52 0a 16                 jump @475 if a3 != 0
      :                          @473
  6540: 84 99 20                 a2 = a2 & 0x20
  6543: 52 09 41                 jump @478 if a2 != 0
      :                          @474
  6546: 7c 77                    a0 = u8 [a0]
  6548: 82 10 80 00              ra = u64 [sp + 0x80]
  6552: 95 11 88 00              sp = sp + 0x88
  6556: 28 9d f5                 jump @272
      :                          @475
  6559: 7c 77                    a0 = u8 [a0]
  6561: 33 0b 81 00              a4 = 0x81
  6565: 95 19 7f                 a2 = sp + 0x7f
  6568: 33 02 57                 t0 = 0x57
  6571: 01                       fallthrough
      :                          @476
  6572: 64 bc                    a5 = a4
  6574: 84 7b 0f                 a4 = a0 & 0xf
  6577: 97 77 38                 a0 = a0 << 0x38
  6580: 98 77 3c                 a0 = a0 >> 0x3c
  6583: 88 b3 0a                 t1 = a4 <u 0xa
  6586: 33 0a 30                 a3 = 0x30
  6589: da 32 0a                 a3 = t0 if t1 == 0
  6592: be ba 0a                 i32 a3 = a3 + a4
  6595: 78 9a                    u8 [a2] = a3
  6597: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  6600: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
  6603: 52 07 e1                 jump @476 if a0 != 0
      :                          @477
  6606: 28 31                    jump @480
      :                          @478
  6608: 7c 77                    a0 = u8 [a0]
  6610: 33 0b 81 00              a4 = 0x81
  6614: 95 19 7f                 a2 = sp + 0x7f
  6617: 33 02 37                 t0 = 0x37
  6620: 01                       fallthrough
      :                          @479
  6621: 64 bc                    a5 = a4
  6623: 84 7b 0f                 a4 = a0 & 0xf
  6626: 97 77 38                 a0 = a0 << 0x38
  6629: 98 77 3c                 a0 = a0 >> 0x3c
  6632: 88 b3 0a                 t1 = a4 <u 0xa
  6635: 33 0a 30                 a3 = 0x30
  6638: da 32 0a                 a3 = t0 if t1 == 0
  6641: be ba 0a                 i32 a3 = a3 + a4
  6644: 78 9a                    u8 [a2] = a3
  6646: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  6649: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
  6652: 52 07 e1                 jump @479 if a0 != 0
      :                          @480
  6655: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
  6658: 56 27 80 00 28           jump @483 if a0 >u 128
      :                          @481
  6663: 9a bb 81 00              a4 = 0x81 - a4
  6667: 64 1a                    a3 = sp
  6669: c8 7a 0a                 a3 = a3 + a0
  6672: 33 09 02                 a2 = 0x2
  6675: 64 87                    a0 = a1
  6677: 33 08 8a 01 01           a1 = 0x1018a
  6682: 50 20 88 00 46 f6        ra = 136, jump @282
      :                          @482 [@dyn 68]
  6688: 82 10 80 00              ra = u64 [sp + 0x80]
  6692: 95 11 88 00              sp = sp + 0x88
  6696: 32 00                    ret
      :                          @483
  6698: 00                       trap
