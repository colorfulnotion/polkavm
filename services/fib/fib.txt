// RO data = 696/696 bytes
// RW data = 4120/73824 bytes
// Stack size = 65536 bytes
// RO data = [102, 105, 98, 78, 32, 110, 117, 109, 95, 115, 101, 103, 109, 101, 110, 116, 115, 61, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 70, 73, 66, 32, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 58, 32, 116, 105, 109, 101, 115, 108, 111, 116, 61, 32, 115, 101, 114, 118, 105, 99, 101, 95, 105, 110, 100, 101, 120, 61, 32, 115, 101, 110, 100, 101, 114, 61, 32, 97, 109, 111, 117, 110, 116, 61, 32, 114, 101, 99, 101, 105, 118, 101, 114, 61, 32, 109, 101, 109, 111, 61, 32, 103, 97, 115, 95, 108, 105, 109, 105, 116, 61, 0, 0, 0, 0, 40, 0, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 66, 0, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 81, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 97, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 89, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 107, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 113, 0, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 70, 73, 66, 32, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 32, 103, 97, 115, 58, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 52, 41, 0, 0, 0, 240, 0, 1, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 9, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 66, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 80, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 114, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 116, 0, 0, 0, 0, 0, 0, 0, 122, 0, 0, 0, 0, 0, 0, 0, 126, 0, 0, 0, 0, 0, 0, 0, 32, 32, 32, 32, 44, 32, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 119, 114, 105, 116, 101, 95, 114, 101, 115, 117, 108, 116, 32, 107, 101, 121, 61, 44, 32, 114, 101, 115, 117, 108, 116, 61, 0, 0, 124, 2, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 141, 2, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0]
// RW data = [235, 57, 12, 2, 231, 1, 233, 195, 88, 75, 252, 92, 228, 140, 100, 252, 128, 69, 38, 119, 143, 230, 252, 62, 81, 133, 15, 205, 157, 177, 149, 18, 213, 57, 90, 100, 2, 167, 47, 172, 60, 22, 159, 249, 186, 230, 130, 110, 237, 194, 201, 77, 201, 154, 183, 236, 96, 229, 251, 128, 0, 3, 15, 213, 76, 254, 61, 156, 41, 239, 199, 102, 170, 211, 211, 120, 30, 204, 156, 126, 208, 97, 108, 121, 159, 178, 236, 206, 224, 238, 24, 151, 201, 113, 163, 134, 245, 29, 211, 199, 14, 14, 188, 195, 5, 17, 17, 44, 125, 106, 0, 138, 100, 99, 200, 161, 187, 126, 232, 110, 104, 55, 135, 203, 250, 200, 58, 69, 22, 203, 68, 23, 227, 224, 33, 4, 225, 229, 162, 232, 28, 37, 43, 149, 238, 81, 37, 240, 241, 167, 202, 252, 49, 80, 19, 82, 108, 30, 1, 221, 31, 132, 147, 223, 172, 131, 100, 187, 96, 217, 132, 215, 110, 89, 160, 194, 34, 123, 18, 128, 80, 114, 37, 53, 233, 253, 163, 255, 49, 62, 68, 124, 254, 17, 50, 36, 88, 72, 180, 54, 247, 134, 62, 101, 32, 233, 199, 144, 157, 95, 29, 43, 172, 73, 24, 236, 38, 103, 147, 26, 210, 149, 82, 236, 204, 164, 23, 249, 235, 40, 130, 212, 44, 105, 83, 116, 210, 114, 22, 235, 64, 243, 41, 101, 103, 30, 82, 136, 67, 160, 100, 205, 47, 241, 197, 82, 7, 37, 207, 46, 87, 7, 107, 145, 23, 250, 252, 139, 168, 50, 199, 248, 135, 54, 142, 3, 182, 80, 107, 207, 28, 170, 153, 179, 155, 170, 185, 49, 84, 25, 225, 2, 92, 116, 244, 68, 84, 136, 21, 137, 106, 95, 118, 5, 95, 135, 87, 217, 202, 150, 70, 9, 229, 14, 141, 225, 96, 190, 220, 103, 170, 105, 215, 137, 92, 139, 141, 175, 140, 159, 150, 87, 133, 30, 240, 127, 2, 210, 254, 165, 189, 140, 148, 251, 116, 224, 196, 17, 92, 96, 130, 157, 1, 138, 139, 68, 91, 63, 13, 18, 98, 43, 234, 19, 38, 85, 255, 89, 183, 189, 101, 46, 38, 186, 197, 47, 31, 79, 204, 45, 214, 80, 124, 117, 179, 197, 29, 224, 189, 125, 15, 125, 65, 63, 231, 112, 161, 250, 178, 4, 72, 85, 74, 217, 70, 37, 221, 45, 96, 213, 61, 203, 198, 132, 253, 85, 122, 31, 127, 225, 155, 240, 205, 93, 15, 25, 157, 244, 3, 126, 75, 219, 200, 99, 23, 237, 152, 72, 251, 107, 61, 156, 129, 3, 192, 204, 158, 1, 180, 107, 126, 108, 2, 245, 57, 237, 229, 19, 147, 23, 246, 212, 211, 118, 223, 14, 126, 214, 223, 152, 60, 232, 142, 108, 66, 112, 236, 113, 83, 62, 136, 13, 139, 224, 182, 78, 67, 68, 232, 42, 69, 233, 166, 182, 23, 95, 200, 62, 196, 127, 211, 178, 211, 215, 30, 98, 100, 112, 255, 224, 139, 106, 207, 108, 47, 106, 190, 248, 49, 81, 245, 2, 19, 38, 79, 80, 99, 16, 3, 173, 152, 205, 86, 188, 148, 127, 130, 156, 51, 137, 129, 111, 6, 86, 100, 175, 163, 119, 16, 187, 66, 73, 47, 116, 51, 111, 179, 230, 50, 247, 245, 197, 56, 45, 89, 148, 177, 84, 129, 74, 37, 114, 197, 88, 150, 218, 87, 190, 10, 180, 167, 105, 165, 196, 95, 58, 209, 243, 214, 198, 125, 162, 175, 163, 204, 187, 196, 186, 151, 71, 221, 44, 129, 49, 238, 21, 3, 59, 75, 33, 0, 131, 62, 78, 64, 66, 158, 220, 240, 239, 20, 72, 191, 75, 228, 53, 171, 222, 209, 222, 254, 130, 219, 171, 118, 51, 39, 2, 230, 11, 189, 214, 222, 133, 19, 172, 214, 192, 188, 156, 109, 9, 26, 247, 123, 201, 119, 230, 124, 124, 213, 50, 74, 78, 107, 27, 5, 11, 106, 178, 249, 14, 169, 228, 31, 41, 112, 62, 169, 141, 153, 14, 145, 137, 216, 52, 28, 51, 143, 10, 44, 244, 137, 94, 72, 13, 148, 231, 211, 41, 176, 251, 221, 183, 111, 197, 209, 224, 145, 8, 215, 107, 225, 1, 68, 93, 230, 141, 49, 97, 73, 44, 151, 116, 42, 177, 175, 147, 134, 243, 252, 118, 246, 137, 62, 8, 127, 131, 88, 79, 23, 211, 120, 90, 193, 238, 131, 150, 100, 33, 179, 23, 2, 137, 228, 89, 161, 144, 81, 206, 221, 5, 198, 158, 122, 202, 226, 84, 124, 148, 166, 223, 94, 254, 49, 109, 212, 174, 211, 61, 176, 141, 62, 191, 240, 18, 118, 239, 223, 64, 209, 248, 47, 53, 44, 63, 34, 236, 169, 28, 147, 72, 152, 39, 28, 176, 165, 251, 77, 56, 51, 149, 42, 182, 124, 113, 30, 30, 27, 189, 174, 139, 14, 45, 114, 57, 46, 187, 230, 86, 186, 121, 92, 45, 86, 40, 155, 2, 229, 178, 139, 200, 34, 165, 58, 102, 101, 216, 94, 187, 7, 113, 18, 233, 18, 155, 185, 162, 17, 232, 49, 191, 11, 165, 3, 169, 126, 237, 33, 162, 50, 88, 148, 249, 67, 195, 3, 224, 234, 97, 176, 185, 15, 93, 75, 95, 92, 238, 23, 2, 203, 57, 213, 98, 8, 153, 151, 130, 51, 67, 33, 105, 201, 97, 80, 77, 137, 169, 249, 195, 123, 36, 255, 32, 77, 202, 186, 7, 149, 113, 75, 84, 88, 19, 130, 201, 93, 140, 114, 108, 177, 214, 82, 153, 170, 246, 145, 56, 28, 183, 171, 124, 92, 166, 252, 68, 168, 206, 4, 239, 113, 116, 138, 184, 207, 166, 8, 168, 26, 190, 26, 225, 166, 11, 207, 139, 106, 20, 231, 250, 119, 33, 207, 124, 204, 86, 19, 52, 189, 82, 60, 77, 26, 35, 43, 170, 249, 225, 72, 26, 213, 73, 173, 171, 109, 210, 76, 205, 70, 151, 37, 209, 130, 155, 183, 135, 26, 75, 20, 184, 107, 219, 198, 0, 250, 22, 164, 77, 135, 113, 183, 154, 208, 228, 11, 62, 138, 38, 137, 133, 209, 212, 18, 132, 203, 227, 251, 196, 36, 131, 228, 147, 56, 189, 180, 224, 210, 166, 8, 2, 131, 12, 233, 210, 80, 11, 233, 17, 6, 241, 118, 169, 170, 103, 129, 72, 224, 29, 113, 154, 203, 41, 149, 231, 24, 57, 191, 255, 75, 248, 185, 170, 245, 154, 31, 82, 171, 52, 7, 105, 196, 228, 74, 89, 175, 136, 28, 131, 37, 35, 146, 244, 2, 49, 147, 249, 22, 207, 194, 168, 81, 172, 136, 228, 75, 146, 85, 220, 194, 186, 83, 12, 126, 131, 96, 108, 21, 252, 119, 79, 11, 245, 46, 108, 105, 203, 218, 9, 86, 107, 129, 169, 244, 70, 229, 81, 3, 106, 98, 99, 207, 28, 145, 38, 112, 100, 90, 204, 159, 209, 106, 199, 71, 59, 208, 95, 39, 81, 55, 172, 204, 6, 165, 13, 113, 68, 79, 7, 18, 217, 44, 36, 242, 125, 75, 199, 66, 27, 6, 49, 61, 239, 40, 244, 172, 207, 47, 227, 47, 47, 141, 192, 204, 248, 224, 68, 184, 224, 62, 9, 239, 255, 219, 165, 143, 174, 232, 55, 87, 150, 63, 49, 251, 53, 205, 35, 154, 59, 7, 166, 59, 80, 0, 178, 177, 149, 191, 45, 104, 8, 39, 59, 59, 167, 251, 15, 187, 32, 159, 96, 252, 55, 204, 231, 4, 20, 168, 107, 150, 17, 165, 148, 188, 35, 22, 237, 93, 35, 200, 87, 252, 52, 8, 50, 0, 158, 112, 67, 11, 101, 78, 234, 213, 61, 163, 40, 14, 249, 77, 130, 88, 115, 145, 182, 117, 26, 183, 120, 121, 66, 10, 166, 100, 221, 148, 142, 119, 165, 49, 29, 183, 214, 25, 121, 126, 184, 224, 66, 13, 166, 122, 124, 98, 92, 86, 143, 162, 66, 176, 161, 156, 72, 189, 177, 50, 79, 240, 5, 245, 46, 167, 124, 205, 209, 139, 4, 63, 0, 142, 73, 145, 160, 206, 189, 186, 201, 167, 121, 220, 111, 228, 185, 193, 61, 173, 227, 254, 138, 173, 133, 200, 137, 177, 250, 99, 41, 122, 254, 189, 235, 139, 251, 255, 92, 156, 171, 217, 187, 54, 31, 83, 23, 225, 219, 122, 45, 252, 64, 177, 35, 118, 205, 48, 27, 64, 213, 119, 138, 182, 177, 27, 118, 30, 47, 245, 186, 71, 63, 35, 189, 129, 21, 188, 157, 247, 236, 184, 14, 36, 210, 188, 175, 75, 254, 33, 83, 236, 147, 175, 46, 35, 84, 219, 13, 240, 189, 114, 104, 253, 53, 49, 10, 127, 198, 187, 232, 247, 44, 255, 159, 2, 163, 98, 80, 79, 112, 45, 33, 88, 5, 102, 252, 193, 115, 125, 133, 187, 141, 172, 79, 58, 108, 162, 166, 36, 91, 50, 74, 42, 130, 29, 78, 90, 142, 197, 130, 222, 231, 233, 99, 100, 42, 181, 167, 224, 240, 237, 130, 243, 240, 78, 255, 118, 183, 107, 0, 206, 74, 82, 3, 249, 94, 72, 170, 197, 248, 170, 90, 217, 90, 245, 127, 186, 66, 128, 196, 108, 115, 170, 255, 238, 47, 7, 8, 181, 224, 10, 73, 18, 238, 52, 127, 209, 157, 213, 45, 209, 103, 209, 93, 45, 76, 16, 203, 8, 221, 112, 196, 13, 240, 217, 56, 14, 95, 87, 195, 160, 249, 58, 112, 85, 89, 229, 48, 232, 19, 7, 155, 163, 171, 102, 254, 192, 240, 208, 153, 71, 251, 110, 204, 80, 233, 201, 62, 170, 59, 151, 253, 1, 93, 20, 55, 119, 135, 83, 18, 190, 157, 219, 77, 77, 94, 115, 185, 232, 162, 172, 11, 194, 2, 121, 231, 26, 76, 184, 242, 62, 132, 196, 44, 75, 160, 234, 66, 115, 91, 162, 199, 19, 116, 211, 27, 87, 215, 2, 205, 73, 175, 34, 65, 20, 215, 139, 114, 21, 104, 22, 241, 51, 90, 35, 9, 75, 211, 217, 205, 219, 155, 173, 20, 117, 159, 98, 30, 104, 97, 13, 199, 17, 56, 243, 44, 234, 210, 175, 178, 35, 249, 2, 172, 184, 113, 22, 12, 0, 56, 228, 199, 168, 7, 194, 128, 136, 78, 161, 97, 37, 228, 201, 33, 90, 107, 3, 86, 78, 98, 205, 178, 120, 254, 57, 5, 78, 183, 130, 207, 225, 197, 230, 202, 3, 155, 132, 9, 36, 227, 136, 0, 185, 218, 93, 217, 152, 172, 87, 131, 65, 87, 237, 86, 91, 192, 109, 19, 48, 151, 115, 65, 217, 58, 194, 195, 173, 97, 70, 119, 169, 200, 63, 34, 214, 126, 146, 19, 149, 224, 55, 65, 63, 68, 66, 72, 119, 164, 222, 188, 56, 203, 123, 193, 46, 128, 195, 64, 137, 211, 35, 133, 204, 77, 214, 105, 78, 230, 219, 59, 26, 198, 75, 167, 65, 110, 24, 155, 81, 121, 100, 185, 200, 22, 137, 216, 108, 99, 200, 85, 170, 70, 233, 62, 44, 249, 201, 203, 135, 231, 140, 70, 220, 194, 109, 191, 204, 21, 185, 21, 149, 184, 134, 41, 206, 9, 2, 72, 242, 55, 236, 95, 23, 15, 136, 204, 116, 62, 223, 87, 111, 115, 4, 210, 169, 78, 136, 76, 211, 133, 113, 202, 5, 183, 190, 194, 54, 50, 49, 15, 100, 118, 33, 90, 24, 9, 106, 147, 215, 197, 0, 92, 6, 255, 87, 55, 120, 203, 232, 107, 38, 144, 150, 208, 241, 32, 176, 62, 5, 187, 227, 145, 67, 22, 33, 217, 24, 6, 171, 218, 85, 16, 203, 63, 10, 163, 237, 34, 220, 170, 216, 15, 151, 20, 182, 208, 165, 128, 246, 149, 182, 156, 162, 118, 179, 92, 230, 138, 254, 112, 105, 168, 221, 29, 242, 16, 140, 21, 78, 111, 53, 28, 44, 19, 228, 199, 112, 182, 227, 60, 58, 137, 62, 93, 58, 5, 94, 78, 226, 93, 192, 177, 79, 57, 149, 138, 88, 81, 92, 34, 185, 210, 31, 66, 27, 225, 192, 39, 74, 242, 26, 139, 193, 77, 109, 76, 117, 205, 217, 47, 95, 10, 230, 84, 200, 16, 135, 25, 235, 191, 65, 118, 146, 28, 184, 26, 27, 41, 162, 15, 47, 184, 224, 123, 175, 98, 122, 250, 240, 38, 23, 249, 113, 173, 227, 210, 115, 33, 96, 208, 202, 167, 84, 88, 194, 150, 65, 148, 40, 132, 102, 73, 164, 60, 230, 58, 9, 130, 167, 61, 134, 50, 203, 133, 69, 118, 87, 231, 50, 53, 150, 215, 217, 246, 123, 108, 192, 217, 243, 103, 183, 126, 136, 214, 139, 151, 231, 1, 147, 66, 67, 123, 15, 253, 232, 162, 188, 81, 251, 211, 174, 185, 34, 62, 181, 100, 115, 119, 246, 231, 12, 90, 90, 186, 88, 51, 57, 106, 202, 137, 18, 93, 205, 207, 89, 213, 228, 154, 176, 80, 218, 86, 179, 4, 64, 162, 223, 28, 75, 185, 12, 174, 8, 22, 41, 6, 182, 19, 158, 124, 99, 226, 235, 43, 109, 252, 57, 213, 137, 14, 9, 54, 13, 249, 188, 13, 255, 231, 84, 29, 135, 141, 1, 164, 129, 146, 110, 191, 242, 184, 160, 253, 180, 167, 90, 186, 15, 77, 2, 64, 155, 104, 13, 10, 237, 103, 245, 158, 206, 142, 89, 97, 235, 90, 24, 15, 124, 4, 21, 141, 194, 230, 108, 91, 94, 188, 20, 113, 80, 206, 252, 234, 51, 113, 178, 186, 60, 144, 19, 248, 212, 78, 127, 22, 138, 185, 141, 48, 202, 54, 102, 101, 157, 158, 165, 177, 176, 74, 133, 64, 62, 168, 192, 234, 83, 6, 77, 31, 179, 211, 82, 226, 3, 211, 247, 216, 93, 108, 140, 195, 215, 57, 126, 57, 106, 197, 230, 61, 204, 231, 31, 191, 94, 66, 13, 19, 43, 176, 129, 156, 50, 20, 248, 71, 196, 182, 64, 159, 106, 254, 11, 94, 119, 113, 15, 101, 47, 251, 77, 234, 140, 228, 134, 207, 255, 65, 120, 62, 191, 93, 169, 243, 100, 255, 54, 240, 27, 204, 103, 142, 68, 108, 99, 109, 16, 73, 210, 244, 254, 28, 254, 224, 85, 109, 201, 251, 68, 116, 19, 116, 32, 78, 134, 241, 111, 61, 79, 138, 171, 102, 41, 23, 50, 208, 30, 51, 132, 171, 236, 132, 255, 34, 31, 3, 174, 23, 248, 33, 195, 146, 118, 107, 43, 166, 179, 210, 111, 244, 43, 197, 40, 52, 50, 190, 83, 88, 54, 153, 24, 119, 165, 75, 229, 215, 108, 118, 33, 234, 92, 235, 87, 189, 126, 6, 98, 81, 95, 42, 223, 217, 127, 92, 123, 216, 142, 148, 48, 117, 151, 146, 91, 156, 45, 69, 231, 69, 167, 46, 70, 156, 112, 222, 98, 191, 232, 191, 203, 213, 208, 125, 238, 82, 188, 2, 164, 145, 35, 74, 119, 181, 196, 110, 24, 15, 239, 0, 189, 162, 60, 192, 74, 142, 222, 21, 175, 55, 216, 134, 246, 34, 202, 80, 186, 42, 1, 55, 45, 165, 156, 160, 99, 29, 3, 66, 47, 172, 187, 31, 80, 128, 169, 211, 235, 58, 198, 167, 81, 197, 177, 146, 153, 196, 233, 3, 67, 231, 216, 30, 150, 104, 47, 255, 60, 120, 0, 35, 247, 183, 26, 135, 14, 210, 107, 226, 59, 228, 233, 6, 188, 16, 223, 150, 222, 217, 69, 46, 30, 110, 88, 76, 200, 58, 64, 123, 9, 85, 10, 100, 94, 11, 26, 20, 78, 48, 218, 71, 68, 92, 178, 122, 17, 39, 46, 78, 167, 58, 43, 116, 88, 66, 165, 4, 182, 203, 208, 182, 63, 96, 80, 88, 215, 248, 103, 217, 198, 3, 62, 171, 204, 34, 105, 131, 72, 233, 228, 188, 55, 236, 101, 209, 129, 44, 230, 23, 13, 129, 145, 150, 30, 60, 222, 228, 228, 77, 203, 80, 247, 99, 175, 170, 241, 108, 177, 144, 67, 190, 176, 2, 149, 85, 104, 98, 217, 94, 184, 80, 221, 19, 121, 26, 50, 202, 207, 165, 31, 152, 17, 8, 43, 61, 32, 59, 246, 216, 209, 24, 207, 220, 144, 124, 94, 41, 41, 252, 230, 27, 108, 158, 163, 87, 93, 190, 58, 31, 187, 149, 166, 251, 228, 158, 166, 111, 135, 158, 91, 81, 26, 208, 202, 44, 4, 78, 249, 148, 232, 8, 132, 4, 72, 203, 180, 233, 38, 94, 91, 25, 9, 149, 195, 146, 34, 229, 134, 184, 149, 86, 119, 10, 139, 53, 153, 63, 181, 206, 0, 52, 205, 63, 21, 139, 175, 197, 43, 133, 254, 80, 154, 248, 104, 164, 7, 195, 251, 161, 12, 128, 108, 122, 109, 143, 186, 227, 75, 40, 233, 111, 105, 62, 50, 104, 33, 253, 89, 24, 198, 232, 124, 166, 216, 144, 159, 34, 38, 29, 33, 139, 96, 250, 83, 54, 165, 239, 178, 198, 255, 244, 70, 167, 164, 140, 129, 103, 217, 23, 24, 96, 89, 96, 88, 44, 117, 190, 242, 228, 180, 3, 188, 123, 21, 22, 108, 170, 154, 11, 227, 224, 166, 119, 218, 47, 28, 156, 89, 114, 89, 197, 251, 183, 3, 230, 63, 43, 165, 24, 248, 227, 98, 1, 55, 139, 232, 212, 228, 114, 41, 162, 93, 200, 247, 216, 243, 233, 254, 212, 71, 114, 141, 37, 207, 146, 228, 52, 146, 174, 10, 161, 214, 185, 142, 191, 106, 153, 145, 224, 40, 110, 135, 18, 117, 50, 91, 150, 249, 171, 24, 32, 165, 137, 173, 202, 164, 63, 158, 222, 137, 130, 81, 82, 70, 235, 214, 15, 183, 184, 77, 161, 116, 11, 209, 112, 160, 6, 43, 33, 197, 223, 8, 116, 61, 203, 87, 189, 146, 46, 9, 195, 103, 240, 120, 68, 48, 141, 18, 181, 25, 223, 236, 244, 75, 23, 244, 156, 95, 171, 203, 120, 133, 153, 50, 81, 82, 207, 132, 141, 136, 37, 21, 128, 106, 77, 95, 119, 156, 147, 50, 153, 70, 82, 178, 155, 52, 36, 249, 116, 245, 224, 234, 182, 13, 61, 177, 32, 85, 85, 63, 115, 89, 90, 60, 221, 212, 79, 175, 167, 206, 159, 106, 104, 125, 16, 159, 33, 106, 75, 159, 18, 198, 154, 175, 40, 199, 199, 29, 171, 244, 196, 31, 149, 148, 110, 150, 208, 240, 225, 161, 94, 136, 129, 70, 8, 183, 223, 10, 132, 164, 86, 183, 125, 228, 26, 10, 171, 199, 23, 106, 32, 171, 40, 246, 19, 213, 70, 172, 185, 25, 133, 255, 18, 162, 233, 249, 29, 253, 144, 212, 249, 155, 193, 162, 169, 192, 3, 91, 72, 197, 103, 243, 171, 165, 57, 152, 128, 5, 48, 154, 208, 14, 203, 160, 23, 210, 13, 19, 117, 224, 78, 184, 92, 99, 142, 92, 134, 7, 88, 122, 124, 46, 105, 28, 11, 92, 17, 66, 211, 52, 219, 117, 77, 239, 82, 161, 223, 247, 35, 71, 252, 61, 211, 79, 191, 143, 177, 218, 95, 216, 199, 75, 170, 56, 77, 151, 144, 11, 108, 3, 211, 153, 242, 187, 115, 28, 168, 130, 120, 82, 24, 198, 254, 126, 165, 40, 64, 65, 110, 222, 230, 17, 70, 63, 144, 86, 124, 195, 92, 38, 226, 123, 172, 123, 7, 253, 186, 241, 83, 1, 75, 188, 12, 153, 79, 201, 102, 36, 134, 156, 250, 64, 249, 90, 150, 219, 253, 163, 67, 169, 39, 159, 191, 131, 190, 178, 232, 152, 179, 110, 55, 166, 232, 80, 164, 106, 73, 199, 151, 121, 117, 108, 173, 219, 18, 73, 125, 155, 22, 2, 27, 195, 141, 103, 30, 36, 235, 37, 44, 84, 19, 117, 106, 176, 250, 252, 88, 48, 212, 10, 176, 54, 218, 195, 65, 84, 26, 36, 181, 56, 238, 214, 255, 247, 141, 208, 113, 210, 197, 56, 120, 233, 241, 37, 173, 139, 53, 215, 169, 94, 168, 137, 172, 218, 19, 199, 187, 96, 141, 63, 188, 236, 203, 214, 21, 244, 86, 5, 110, 147, 14, 247, 63, 65, 183, 108, 100, 121, 220, 157, 188, 11, 214, 51, 238, 220, 77, 28, 72, 232, 131, 250, 150, 207, 22, 254, 18, 119, 174, 167, 241, 159, 233, 28, 13, 195, 210, 110, 22, 154, 28, 31, 190, 3, 251, 20, 118, 83, 147, 93, 252, 155, 129, 234, 244, 152, 145, 98, 202, 119, 71, 133, 55, 96, 159, 19, 18, 36, 188, 244, 96, 177, 73, 149, 47, 103, 156, 2, 251, 78, 44, 84, 234, 212, 218, 51, 202, 249, 233, 39, 224, 148, 181, 71, 255, 56, 126, 65, 123, 183, 161, 34, 47, 209, 166, 226, 227, 60, 97, 89, 57, 65, 93, 180, 40, 19, 107, 168, 18, 97, 195, 57, 37, 7, 11, 200, 143, 79, 21, 162, 193, 182, 189, 118, 47, 107, 54, 143, 208, 142, 164, 235, 30, 225, 119, 166, 125, 173, 254, 230, 7, 24, 162, 167, 176, 44, 39, 1, 214, 95, 193, 93, 178, 88, 58, 199, 235, 0, 195, 195, 168, 67, 120, 162, 161, 67, 157, 53, 161, 20, 97, 185, 156, 133, 240, 101, 186, 111, 42, 79, 93, 207, 86, 109, 111, 69, 50, 144, 163, 2, 4, 99, 49, 136, 130, 67, 93, 61, 224, 239, 95, 159, 150, 93, 114, 35, 32, 53, 241, 144, 133, 231, 250, 0, 91, 198, 250, 84, 158, 147, 223, 191, 203, 15, 59, 247, 155, 48, 196, 94, 137, 71, 50, 197, 207, 252, 25, 171, 152, 220, 42, 223, 29, 40, 226, 180, 232, 252, 163, 7, 220, 169, 145, 4, 255, 116, 233, 204, 27, 0, 45, 6, 62, 225, 7, 88, 73, 18, 18, 223, 36, 173, 14, 20, 190, 212, 52, 220, 214, 240, 3, 147, 112, 38, 166, 249, 216, 29, 83, 30, 84, 161, 14, 242, 251, 63, 8, 222, 58, 10, 154, 12, 210, 251, 139, 198, 95, 108, 183, 228, 83, 228, 161, 20, 59, 241, 233, 122, 228, 151, 1, 37, 164, 250, 144, 67, 27, 253, 133, 236, 113, 164, 111, 121, 231, 101, 66, 132, 64, 229, 146, 72, 191, 110, 9, 48, 32, 254, 130, 84, 220, 232, 98, 129, 126, 97, 61, 73, 181, 115, 103, 78, 52, 195, 130, 94, 97, 78, 64, 70, 80, 204, 43, 116, 114, 128, 37, 86, 101, 214, 190, 138, 17, 197, 158, 7, 41, 76, 247, 44, 144, 175, 171, 156, 14, 49, 255, 248, 122, 160, 30, 250, 174, 66, 107, 28, 122, 6, 229, 193, 51, 242, 186, 186, 141, 56, 47, 151, 196, 191, 236, 44, 253, 18, 164, 250, 95, 136, 142, 200, 208, 153, 176, 116, 27, 134, 216, 10, 128, 54, 234, 200, 166, 137, 89, 247, 192, 74, 40, 41, 124, 242, 5, 43, 38, 137, 70, 33, 109, 245, 172, 229, 20, 100, 204, 121, 2, 209, 116, 10, 7, 15, 24, 49, 154, 13, 106, 58, 235, 162, 244, 150, 228, 125, 131, 34, 25, 231, 18, 86, 100, 2, 22, 51, 108, 127, 127, 49, 207, 31, 195, 86, 14, 57, 27, 98, 250, 154, 45, 118, 192, 52, 132, 166, 53, 224, 6, 137, 185, 206, 44, 180, 251, 140, 14, 94, 8, 214, 143, 60, 169, 9, 34, 31, 137, 226, 17, 38, 124, 1, 63, 40, 224, 69, 3, 189, 84, 139, 12, 242, 19, 244, 40, 8, 67, 129, 249, 236, 76, 45, 150, 227, 187, 142, 140, 244, 169, 127, 130, 157, 77, 214, 53, 100, 222, 213, 3, 152, 205, 46, 251, 29, 231, 204, 253, 192, 106, 30, 114, 143, 184, 62, 236, 95, 203, 175, 84, 146, 79, 196, 31, 2, 95, 97, 90, 244, 176, 179, 230, 134, 189, 129, 31, 169, 3, 100, 240, 66, 166, 140, 160, 148, 50, 120, 56, 237, 200, 76, 22, 18, 70, 12, 196, 133, 216, 142, 174, 2, 25, 58, 179, 227, 50, 22, 124, 135, 25, 109, 39, 247, 68, 36, 73, 57, 40, 27, 136, 65, 161, 104, 220, 6, 178, 180, 125, 68, 247, 234, 177, 195, 139, 15, 214, 125, 107, 93, 207, 42, 168, 47, 31, 232, 97, 137, 76, 8, 7, 73, 179, 111, 25, 103, 19, 214, 169, 130, 234, 70, 158, 142, 234, 233, 11, 104, 86, 116, 178, 92, 71, 125, 222, 71, 207, 13, 59, 112, 97, 81, 150, 65, 231, 31, 90, 9, 239, 148, 254, 23, 0, 55, 88, 136, 16, 156, 226, 55, 146, 48, 35, 207, 148, 45, 175, 82, 114, 77, 13, 173, 26, 120, 16, 36, 178, 75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 2331
// Code size = 7010 bytes

      :                          @0
     0: 28 ea 01 00 00           jump @34
      :                          @1
     5: 28 70 04 00 00           jump @91
      :                          @2
    10: 28 9e 05                 jump @124
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 80 89 34                 a2 = u32 [a1 + 0x34]
    24: 84 9a 10                 a3 = a2 & 0x10
    27: 52 0a 16                 jump @6 if a3 != 0
      :                          @4
    30: 84 99 20                 a2 = a2 & 0x20
    33: 52 09 40                 jump @9 if a2 != 0
      :                          @5
    36: 80 77                    a0 = u32 [a0]
    38: 82 10 80 00              ra = u64 [sp + 0x80]
    42: 95 11 88 00              sp = sp + 0x88
    46: 28 3d 10                 jump @300
      :                          @6
    49: 81 7b                    a4 = i32 [a0]
    51: 33 09 81 00              a2 = 0x81
    55: 95 17 7f                 a0 = sp + 0x7f
    58: 33 02 57                 t0 = 0x57
    61: 01                       fallthrough
      :                          @7
    62: 64 9c                    a5 = a2
    64: 8b ba 04                 i32 a3 = a4 >> 0x4
    67: 84 bb 0f                 a4 = a4 & 0xf
    70: 88 b3 0a                 t1 = a4 <u 0xa
    73: 33 09 30                 a2 = 0x30
    76: da 32 09                 a2 = t0 if t1 == 0
    79: be b9 09                 i32 a2 = a2 + a4
    82: 78 79                    u8 [a0] = a2
    84: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
    87: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
    90: 64 ab                    a4 = a3
    92: 52 0a e2                 jump @7 if a3 != 0
      :                          @8
    95: 28 30                    jump @11
      :                          @9
    97: 81 7b                    a4 = i32 [a0]
    99: 33 09 81 00              a2 = 0x81
   103: 95 17 7f                 a0 = sp + 0x7f
   106: 33 02 37                 t0 = 0x37
   109: 01                       fallthrough
      :                          @10
   110: 64 9c                    a5 = a2
   112: 8b ba 04                 i32 a3 = a4 >> 0x4
   115: 84 bb 0f                 a4 = a4 & 0xf
   118: 88 b3 0a                 t1 = a4 <u 0xa
   121: 33 09 30                 a2 = 0x30
   124: da 32 09                 a2 = t0 if t1 == 0
   127: be b9 09                 i32 a2 = a2 + a4
   130: 78 79                    u8 [a0] = a2
   132: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   135: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   138: 64 ab                    a4 = a3
   140: 52 0a e2                 jump @10 if a3 != 0
      :                          @11
   143: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   146: 56 27 80 00 27           jump @14 if a0 >u 128
      :                          @12
   151: 9a 9b 81 00              a4 = 0x81 - a2
   155: 64 1a                    a3 = sp
   157: c8 7a 0a                 a3 = a3 + a0
   160: 33 09 02                 a2 = 0x2
   163: 64 87                    a0 = a1
   165: 33 08 b2 01 01           a1 = 0x101b2
   170: 50 10 04 e8 10           ra = 4, jump @310
      :                          @13 [@dyn 2]
   175: 82 10 80 00              ra = u64 [sp + 0x80]
   179: 95 11 88 00              sp = sp + 0x88
   183: 32 00                    ret
      :                          @14
   185: 00                       trap
      :                          @15 [@dyn 3]
   186: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   190: 7b 10 80 00              u64 [sp + 0x80] = ra
   194: 80 89 34                 a2 = u32 [a1 + 0x34]
   197: 84 9a 10                 a3 = a2 & 0x10
   200: 52 0a 16                 jump @18 if a3 != 0
      :                          @16
   203: 84 99 20                 a2 = a2 & 0x20
   206: 52 09 40                 jump @21 if a2 != 0
      :                          @17
   209: 82 77                    a0 = u64 [a0]
   211: 82 10 80 00              ra = u64 [sp + 0x80]
   215: 95 11 88 00              sp = sp + 0x88
   219: 28 90 0f                 jump @300
      :                          @18
   222: 82 7b                    a4 = u64 [a0]
   224: 33 09 81 00              a2 = 0x81
   228: 95 17 7f                 a0 = sp + 0x7f
   231: 33 02 57                 t0 = 0x57
   234: 01                       fallthrough
      :                          @19
   235: 64 9c                    a5 = a2
   237: 98 ba 04                 a3 = a4 >> 0x4
   240: 84 bb 0f                 a4 = a4 & 0xf
   243: 88 b3 0a                 t1 = a4 <u 0xa
   246: 33 09 30                 a2 = 0x30
   249: da 32 09                 a2 = t0 if t1 == 0
   252: be b9 09                 i32 a2 = a2 + a4
   255: 78 79                    u8 [a0] = a2
   257: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   260: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   263: 64 ab                    a4 = a3
   265: 52 0a e2                 jump @19 if a3 != 0
      :                          @20
   268: 28 30                    jump @23
      :                          @21
   270: 82 7b                    a4 = u64 [a0]
   272: 33 09 81 00              a2 = 0x81
   276: 95 17 7f                 a0 = sp + 0x7f
   279: 33 02 37                 t0 = 0x37
   282: 01                       fallthrough
      :                          @22
   283: 64 9c                    a5 = a2
   285: 98 ba 04                 a3 = a4 >> 0x4
   288: 84 bb 0f                 a4 = a4 & 0xf
   291: 88 b3 0a                 t1 = a4 <u 0xa
   294: 33 09 30                 a2 = 0x30
   297: da 32 09                 a2 = t0 if t1 == 0
   300: be b9 09                 i32 a2 = a2 + a4
   303: 78 79                    u8 [a0] = a2
   305: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   308: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   311: 64 ab                    a4 = a3
   313: 52 0a e2                 jump @22 if a3 != 0
      :                          @23
   316: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   319: 56 27 80 00 27           jump @26 if a0 >u 128
      :                          @24
   324: 9a 9b 81 00              a4 = 0x81 - a2
   328: 64 1a                    a3 = sp
   330: c8 7a 0a                 a3 = a3 + a0
   333: 33 09 02                 a2 = 0x2
   336: 64 87                    a0 = a1
   338: 33 08 b2 01 01           a1 = 0x101b2
   343: 50 10 08 3b 10           ra = 8, jump @310
      :                          @25 [@dyn 4]
   348: 82 10 80 00              ra = u64 [sp + 0x80]
   352: 95 11 88 00              sp = sp + 0x88
   356: 32 00                    ret
      :                          @26
   358: 00                       trap
      :                          @27 [@dyn 5]
   359: 95 11 c8                 sp = sp + 0xffffffffffffffc8
   362: 7b 10 30                 u64 [sp + 0x30] = ra
   365: 7b 15 28                 u64 [sp + 0x28] = s0
   368: 7b 16 20                 u64 [sp + 0x20] = s1
   371: 64 86                    s1 = a1
   373: 82 88 28                 a1 = u64 [a1 + 0x28]
   376: 82 6a 20                 a3 = u64 [s1 + 0x20]
   379: 82 8b 18                 a4 = u64 [a1 + 0x18]
   382: 64 75                    s0 = a0
   384: 33 08 70 01 01           a1 = 0x10170
   389: 33 09 01                 a2 = 0x1
   392: 64 a7                    a0 = a3
   394: b4 b0 01 0c              ra = 12, jump [a4]
      :                          @28 [@dyn 6]
   398: 7b 16 08                 u64 [sp + 0x8] = s1
   401: 78 17 10                 u8 [sp + 0x10] = a0
   404: 46 11 11                 u8 [sp + 17] = 0
   407: 33 06 80 00              s1 = 0x80
   411: 33 07 92 00              a0 = 0x92
   415: 7b 17                    u64 [sp] = a0
   417: 01                       fallthrough
      :                          @29
   418: 7b 15 18                 u64 [sp + 0x18] = s0
   421: 95 17 08                 a0 = sp + 0x8
   424: 95 18 18                 a1 = sp + 0x18
   427: 82 19                    a2 = u64 [sp]
   429: 50 10 0e b5 16           ra = 14, jump @454
      :                          @30 [@dyn 7]
   434: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
   437: 95 55 01                 s0 = s0 + 0x1
   440: 52 06 ea                 jump @29 if s1 != 0
      :                          @31
   443: 7c 18 10                 a1 = u8 [sp + 0x10]
   446: 33 07 01                 a0 = 0x1
   449: 52 08 1b                 jump @33 if a1 != 0
      :                          @32
   452: 82 17 08                 a0 = u64 [sp + 0x8]
   455: 82 78 28                 a1 = u64 [a0 + 0x28]
   458: 82 77 20                 a0 = u64 [a0 + 0x20]
   461: 82 8a 18                 a3 = u64 [a1 + 0x18]
   464: 33 08 b1 01 01           a1 = 0x101b1
   469: 33 09 01                 a2 = 0x1
   472: b4 a0 01 10              ra = 16, jump [a3]
      :                          @33 [@dyn 8]
   476: 82 10 30                 ra = u64 [sp + 0x30]
   479: 82 15 28                 s0 = u64 [sp + 0x28]
   482: 82 16 20                 s1 = u64 [sp + 0x20]
   485: 95 11 38                 sp = sp + 0x38
   488: 32 00                    ret
      :                          @34 [export #0: 'refine']
   490: 95 11 70 ff              sp = sp + 0xffffffffffffff70
   494: 7b 10 88 00              u64 [sp + 0x88] = ra
   498: 7b 15 80 00              u64 [sp + 0x80] = s0
   502: 7b 16 78                 u64 [sp + 0x78] = s1
   505: 64 86                    s1 = a1
   507: 64 7a                    a3 = a0
   509: 33 05 01                 s0 = 0x1
   512: 7a 15 1c                 u32 [sp + 0x1c] = s0
   515: 33 07 00 00 01           a0 = 0x10000
   520: 53 16 04 40              jump @43 if s1 <u 4
      :                          @35
   524: 7d a8                    a1 = i8 [a3]
   526: 59 08 37                 jump @42 if a1 >=s 0
      :                          @36
   529: 84 89 ff 00              a2 = a1 & 0xff
   533: 33 05 02                 s0 = 0x2
   536: 53 29 c0 00 2d           jump @42 if a2 <u 192
      :                          @37
   541: 33 05 03                 s0 = 0x3
   544: 53 29 e0 00 25           jump @42 if a2 <u 224
      :                          @38
   549: 33 05 04                 s0 = 0x4
   552: 53 29 f0 00 1d           jump @42 if a2 <u 240
      :                          @39
   557: 33 05 05                 s0 = 0x5
   560: 53 29 f8 00 15           jump @42 if a2 <u 248
      :                          @40
   565: 33 05 06                 s0 = 0x6
   568: 53 29 fc 00 0d           jump @42 if a2 <u 252
      :                          @41
   573: 88 98 fe 00              a1 = a2 <u 0xfe
   577: 9a 85 08                 s0 = 0x8 - a1
   580: 01                       fallthrough
      :                          @42
   581: ae 56 08                 jump @44 if s1 >=u s0
      :                          @43
   584: 33 08                    a1 = 0
   586: 28 db 00                 jump @67
      :                          @44
   589: 64 a7                    a0 = a3
   591: 64 58                    a1 = s0
   593: 7b 1a 10                 u64 [sp + 0x10] = a3
   596: 50 10 12 4d 17           ra = 18, jump @471
      :                          @45 [@dyn 9]
   601: aa 56 c4 00              jump @66 if s1 == s0
      :                          @46
   605: 82 17 10                 a0 = u64 [sp + 0x10]
   608: c8 57 07                 a0 = a0 + s0
   611: 7d 78                    a1 = i8 [a0]
   613: c9 56 06                 s1 = s1 - s0
   616: 33 05 01                 s0 = 0x1
   619: 59 08 37                 jump @53 if a1 >=s 0
      :                          @47
   622: 84 89 ff 00              a2 = a1 & 0xff
   626: 33 05 02                 s0 = 0x2
   629: 53 29 c0 00 2d           jump @53 if a2 <u 192
      :                          @48
   634: 33 05 03                 s0 = 0x3
   637: 53 29 e0 00 25           jump @53 if a2 <u 224
      :                          @49
   642: 33 05 04                 s0 = 0x4
   645: 53 29 f0 00 1d           jump @53 if a2 <u 240
      :                          @50
   650: 33 05 05                 s0 = 0x5
   653: 53 29 f8 00 15           jump @53 if a2 <u 248
      :                          @51
   658: 33 05 06                 s0 = 0x6
   661: 53 29 fc 00 0d           jump @53 if a2 <u 252
      :                          @52
   666: 88 98 fe 00              a1 = a2 <u 0xfe
   670: 9a 85 08                 s0 = 0x8 - a1
   673: 01                       fallthrough
      :                          @53
   674: ac 56 7b                 jump @66 if s1 <u s0
      :                          @54
   677: 64 58                    a1 = s0
   679: 7b 17 10                 u64 [sp + 0x10] = a0
   682: 50 10 14 f7 16           ra = 20, jump @471
      :                          @55 [@dyn 10]
   687: aa 56 6e                 jump @66 if s1 == s0
      :                          @56
   690: 82 17 10                 a0 = u64 [sp + 0x10]
   693: c8 57 07                 a0 = a0 + s0
   696: 7d 78                    a1 = i8 [a0]
   698: c9 56 05                 s0 = s1 - s0
   701: 33 06 01                 s1 = 0x1
   704: 59 08 37                 jump @63 if a1 >=s 0
      :                          @57
   707: 84 89 ff 00              a2 = a1 & 0xff
   711: 33 06 02                 s1 = 0x2
   714: 53 29 c0 00 2d           jump @63 if a2 <u 192
      :                          @58
   719: 33 06 03                 s1 = 0x3
   722: 53 29 e0 00 25           jump @63 if a2 <u 224
      :                          @59
   727: 33 06 04                 s1 = 0x4
   730: 53 29 f0 00 1d           jump @63 if a2 <u 240
      :                          @60
   735: 33 06 05                 s1 = 0x5
   738: 53 29 f8 00 15           jump @63 if a2 <u 248
      :                          @61
   743: 33 06 06                 s1 = 0x6
   746: 53 29 fc 00 0d           jump @63 if a2 <u 252
      :                          @62
   751: 88 98 fe 00              a1 = a2 <u 0xfe
   755: 9a 86 08                 s1 = 0x8 - a1
   758: 01                       fallthrough
      :                          @63
   759: ac 65 7d 01              jump @90 if s0 <u s1
      :                          @64
   763: 7b 17 10                 u64 [sp + 0x10] = a0
   766: 64 68                    a1 = s1
   768: 50 10 16 a1 16           ra = 22, jump @471
      :                          @65 [@dyn 11]
   773: e4 65 08                 a1 = maxu(s0, s1)
   776: c9 68 08                 a1 = a1 - s1
   779: d8 78 09                 a2 = a1 <u a0
   782: e4 78 08                 a1 = maxu(a1, a0)
   785: c9 78 08                 a1 = a1 - a0
   788: 88 88 20                 a1 = a1 <u 0x20
   791: d4 98 08                 a1 = a1 | a2
   794: 51 08 1c                 jump @68 if a1 == 0
      :                          @66
   797: 33 08                    a1 = 0
   799: 33 07 00 00 01           a0 = 0x10000
   804: 01                       fallthrough
      :                          @67
   805: 82 10 88 00              ra = u64 [sp + 0x88]
   809: 82 15 80 00              s0 = u64 [sp + 0x80]
   813: 82 16 78                 s1 = u64 [sp + 0x78]
   816: 95 11 90 00              sp = sp + 0x90
   820: 32 00                    ret
      :                          @68
   822: 54 17 03 a2 00           jump @77 if a0 <=u 3
      :                          @69
   827: 82 17 10                 a0 = u64 [sp + 0x10]
   830: c8 76 06                 s1 = s1 + a0
   833: 7c 67 01                 a0 = u8 [s1 + 0x1]
   836: 7c 68                    a1 = u8 [s1]
   838: 7c 69 02                 a2 = u8 [s1 + 0x2]
   841: 7d 6a 03                 a3 = i8 [s1 + 0x3]
   844: 97 77 08                 a0 = a0 << 0x8
   847: d4 87 07                 a0 = a0 | a1
   850: 97 99 10                 a2 = a2 << 0x10
   853: 97 aa 18                 a3 = a3 << 0x18
   856: d4 a9 09                 a2 = a2 | a3
   859: d4 97 07                 a0 = a0 | a2
   862: 3d 07 3c 10 03           u32 [0x3103c] = a0
   867: 7a 17 1c                 u32 [sp + 0x1c] = a0
   870: 95 17 1c                 a0 = sp + 0x1c
   873: 7b 17 68                 u64 [sp + 0x68] = a0
   876: 33 07 02                 a0 = 0x2
   879: 7b 17 70                 u64 [sp + 0x70] = a0
   882: 33 07 18 00 01           a0 = 0x10018
   887: 7b 17 38                 u64 [sp + 0x38] = a0
   890: 49 11 40 01              u64 [sp + 64] = 0x1
   894: 49 11 58                 u64 [sp + 88] = 0
   897: 95 18 68                 a1 = sp + 0x68
   900: 7b 18 48                 u64 [sp + 0x48] = a1
   903: 49 11 50 01              u64 [sp + 80] = 0x1
   907: 95 17 20                 a0 = sp + 0x20
   910: 95 18 38                 a1 = sp + 0x38
   913: 50 10 18 b0 09           ra = 24, jump @230
      :                          @70 [@dyn 12]
   918: 82 15 28                 s0 = u64 [sp + 0x28]
   921: 82 1b 30                 a4 = u64 [sp + 0x30]
   924: 82 16 20                 s1 = u64 [sp + 0x20]
   927: 33 07 02                 a0 = 0x2
   930: 33 08                    a1 = 0
   932: 33 09                    a2 = 0
   934: 64 5a                    a3 = s0
   936: 33 00 1a                 ra = 0x1a
   939: 0a 64                    ecalli 100 // 'log'
   941: 01                       fallthrough
      :                          @71 [@dyn 13]
   942: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
   947: 53 38 00 00 ff 25        jump @77 if a1 <u 4294901760
      :                          @72
   953: 33 07 50 20 03           a0 = 0x32050
   958: 95 77 00 00 01           a0 = a0 + 0x10000
   963: 01                       fallthrough
      :                          @73
   964: 82 78                    a1 = u64 [a0]
   966: c9 87 09                 a2 = a0 - a1
   969: ab 59 0f                 jump @77 if a2 != s0
      :                          @74
   972: c9 68 09                 a2 = a1 - s1
   975: 01                       fallthrough
      :                          @75
   976: 82 7a                    a3 = u64 [a0]
   978: ab 8a f2                 jump @73 if a3 != a1
      :                          @76
   981: 7b 79                    u64 [a0] = a2
   983: 01                       fallthrough
      :                          @77
   984: 33 07 00 00 03           a0 = 0x30000
   989: 33 08 08 10              a1 = 0x1008
   993: 7b 17 08                 u64 [sp + 0x8] = a0
   996: 33 05 08 10              s0 = 0x1008
  1000: 33 00 1c                 ra = 0x1c
  1003: 0a 07                    ecalli 7 // 'export'
  1005: 01                       fallthrough
      :                          @78 [@dyn 14]
  1006: 81 1a 1c                 a3 = i32 [sp + 0x1c]
  1009: 53 1a 02 4b              jump @85 if a3 <u 2
      :                          @79
  1013: 33 08 01                 a1 = 0x1
  1016: 33 07 3c 10 03           a0 = 0x3103c
  1021: 7b 1a                    u64 [sp] = a3
  1023: 01                       fallthrough
      :                          @80
  1024: 7b 18 10                 u64 [sp + 0x10] = a1
  1027: 95 86 01                 s1 = a1 + 0x1
  1030: 64 5c                    a5 = s0
  1032: 82 19 08                 a2 = u64 [sp + 0x8]
  1035: 64 7a                    a3 = a0
  1037: 01                       fallthrough
      :                          @81
  1038: 7c 9b                    a4 = u8 [a2]
  1040: c8 6b 0b                 a4 = a4 + s1
  1043: 78 ab                    u8 [a3] = a4
  1045: 95 aa 01                 a3 = a3 + 0x1
  1048: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  1051: 95 99 01                 a2 = a2 + 0x1
  1054: 52 0c f0                 jump @81 if a5 != 0
      :                          @82
  1057: 64 58                    a1 = s0
  1059: 64 76                    s1 = a0
  1061: 33 00 1e                 ra = 0x1e
  1064: 0a 07                    ecalli 7 // 'export'
  1066: 01                       fallthrough
      :                          @83 [@dyn 15]
  1067: 64 67                    a0 = s1
  1069: 82 18 10                 a1 = u64 [sp + 0x10]
  1072: 83 88 01                 i32 a1 = a1 + 0x1
  1075: 82 1a                    a3 = u64 [sp]
  1077: ab a8 cb                 jump @80 if a1 != a3
      :                          @84
  1080: 81 1a 1c                 a3 = i32 [sp + 0x1c]
  1083: 01                       fallthrough
      :                          @85
  1084: 51 0a 28                 jump @89 if a3 == 0
      :                          @86
  1087: 52 1a 01 06              jump @88 if a3 != 1
      :                          @87
  1091: 28 21                    jump @89
      :                          @88
  1093: 83 a7 fe                 i32 a0 = a3 + 0xfffffffffffffffe
  1096: 97 78 01                 a1 = a0 << 0x1
  1099: 83 a9 fd                 i32 a2 = a3 + 0xfffffffffffffffd
  1102: 97 99 20                 a2 = a2 << 0x20
  1105: 97 77 20                 a0 = a0 << 0x20
  1108: d6 97 07                 a0 = a0 mulhu a2
  1111: 98 77 01                 a0 = a0 >> 0x1
  1114: c8 87 07                 a0 = a0 + a1
  1117: 83 77 01                 i32 a0 = a0 + 0x1
  1120: be 7a 0a                 i32 a3 = a3 + a0
  1123: 01                       fallthrough
      :                          @89
  1124: 3d 0a 1c 10 03           u32 [0x3101c] = a3
  1129: 33 07 1c 10 03           a0 = 0x3101c
  1134: 33 08 04                 a1 = 0x4
  1137: 28 b4 fe                 jump @67
      :                          @90
  1140: 00                       trap
      :                          @91 [export #1: 'accumulate']
  1141: 51 08 2a 01              jump @123 if a1 == 0
      :                          @92
  1145: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  1148: 7b 10 18                 u64 [sp + 0x18] = ra
  1151: 7b 15 10                 u64 [sp + 0x10] = s0
  1154: 7b 16 08                 u64 [sp + 0x8] = s1
  1157: 64 85                    s0 = a1
  1159: 7d 78                    a1 = i8 [a0]
  1161: 33 06 01                 s1 = 0x1
  1164: 59 08 37                 jump @99 if a1 >=s 0
      :                          @93
  1167: 84 89 ff 00              a2 = a1 & 0xff
  1171: 33 06 02                 s1 = 0x2
  1174: 53 29 c0 00 2d           jump @99 if a2 <u 192
      :                          @94
  1179: 33 06 03                 s1 = 0x3
  1182: 53 29 e0 00 25           jump @99 if a2 <u 224
      :                          @95
  1187: 33 06 04                 s1 = 0x4
  1190: 53 29 f0 00 1d           jump @99 if a2 <u 240
      :                          @96
  1195: 33 06 05                 s1 = 0x5
  1198: 53 29 f8 00 15           jump @99 if a2 <u 248
      :                          @97
  1203: 33 06 06                 s1 = 0x6
  1206: 53 29 fc 00 0d           jump @99 if a2 <u 252
      :                          @98
  1211: 88 98 fe 00              a1 = a2 <u 0xfe
  1215: 9a 86 08                 s1 = 0x8 - a1
  1218: 01                       fallthrough
      :                          @99
  1219: ac 65 c7 00              jump @122 if s0 <u s1
      :                          @100
  1223: 64 68                    a1 = s1
  1225: 7b 17                    u64 [sp] = a0
  1227: 50 10 20 d6 14           ra = 32, jump @471
      :                          @101 [@dyn 16]
  1232: 82 17                    a0 = u64 [sp]
  1234: aa 65 b8 00              jump @122 if s0 == s1
      :                          @102
  1238: c8 67 07                 a0 = a0 + s1
  1241: 7d 78                    a1 = i8 [a0]
  1243: c9 65 0a                 a3 = s0 - s1
  1246: 33 05 01                 s0 = 0x1
  1249: 59 08 37                 jump @109 if a1 >=s 0
      :                          @103
  1252: 84 89 ff 00              a2 = a1 & 0xff
  1256: 33 05 02                 s0 = 0x2
  1259: 53 29 c0 00 2d           jump @109 if a2 <u 192
      :                          @104
  1264: 33 05 03                 s0 = 0x3
  1267: 53 29 e0 00 25           jump @109 if a2 <u 224
      :                          @105
  1272: 33 05 04                 s0 = 0x4
  1275: 53 29 f0 00 1d           jump @109 if a2 <u 240
      :                          @106
  1280: 33 05 05                 s0 = 0x5
  1283: 53 29 f8 00 15           jump @109 if a2 <u 248
      :                          @107
  1288: 33 05 06                 s0 = 0x6
  1291: 53 29 fc 00 0d           jump @109 if a2 <u 252
      :                          @108
  1296: 88 98 fe 00              a1 = a2 <u 0xfe
  1300: 9a 85 08                 s0 = 0x8 - a1
  1303: 01                       fallthrough
      :                          @109
  1304: ac 5a 72                 jump @122 if a3 <u s0
      :                          @110
  1307: 64 58                    a1 = s0
  1309: 7b 1a                    u64 [sp] = a3
  1311: 64 76                    s1 = a0
  1313: 50 10 22 80 14           ra = 34, jump @471
      :                          @111 [@dyn 17]
  1318: c8 65 07                 a0 = s0 + s1
  1321: 82 16                    s1 = u64 [sp]
  1323: ab 56 0b                 jump @113 if s1 != s0
      :                          @112
  1326: 33 08                    a1 = 0
  1328: 33 00 24                 ra = 0x24
  1331: 28 6e 14                 jump @471
      :                          @113
  1334: 7d 79                    a2 = i8 [a0]
  1336: c9 56 06                 s1 = s1 - s0
  1339: 33 08 01                 a1 = 0x1
  1342: 59 09 44                 jump @120 if a2 >=s 0
      :                          @114
  1345: 84 99 ff 00              a2 = a2 & 0xff
  1349: 33 0a c0 00              a3 = 0xc0
  1353: 33 08 02                 a1 = 0x2
  1356: ac a9 36                 jump @120 if a2 <u a3
      :                          @115
  1359: 33 0a e0 00              a3 = 0xe0
  1363: 33 08 03                 a1 = 0x3
  1366: ac a9 2c                 jump @120 if a2 <u a3
      :                          @116
  1369: 33 0a f0 00              a3 = 0xf0
  1373: 33 08 04                 a1 = 0x4
  1376: ac a9 22                 jump @120 if a2 <u a3
      :                          @117
  1379: 33 0a f8 00              a3 = 0xf8
  1383: 33 08 05                 a1 = 0x5
  1386: ac a9 18                 jump @120 if a2 <u a3
      :                          @118
  1389: 33 0a fc 00              a3 = 0xfc
  1393: 33 08 06                 a1 = 0x6
  1396: ac a9 0e                 jump @120 if a2 <u a3
      :                          @119
  1399: 88 98 fe 00              a1 = a2 <u 0xfe
  1403: 33 09 08                 a2 = 0x8
  1406: c9 89 08                 a1 = a2 - a1
  1409: 01                       fallthrough
      :                          @120
  1410: ac 86 08                 jump @122 if s1 <u a1
      :                          @121
  1413: 50 10 24 1c 14           ra = 36, jump @471
      :                          @122 [@dyn 18]
  1418: 82 10 18                 ra = u64 [sp + 0x18]
  1421: 82 15 10                 s0 = u64 [sp + 0x10]
  1424: 82 16 08                 s1 = u64 [sp + 0x8]
  1427: 95 11 20                 sp = sp + 0x20
  1430: 33 07 00 00 01           a0 = 0x10000
  1435: 33 08                    a1 = 0
  1437: 32 00                    ret
      :                          @123
  1439: 33 07 00 00 01           a0 = 0x10000
  1444: 33 08                    a1 = 0
  1446: 32 00                    ret
      :                          @124 [export #2: 'on_transfer']
  1448: 95 11 70 fd              sp = sp + 0xfffffffffffffd70
  1452: 7b 10 88 02              u64 [sp + 0x288] = ra
  1456: 7b 15 80 02              u64 [sp + 0x280] = s0
  1460: 7b 16 78 02              u64 [sp + 0x278] = s1
  1464: 64 8c                    a5 = a1
  1466: 64 79                    a2 = a0
  1468: 33 02                    t0 = 0
  1470: 95 7b 04                 a4 = a0 + 0x4
  1473: 33 07 02                 a0 = 0x2
  1476: 7b 17 28                 u64 [sp + 0x28] = a0
  1479: 33 07 06                 a0 = 0x6
  1482: 7b 17 58                 u64 [sp + 0x58] = a0
  1485: 33 07 0a                 a0 = 0xa
  1488: 7b 17 20                 u64 [sp + 0x20] = a0
  1491: 33 07 80 00 01           a0 = 0x10080
  1496: 7b 17 18                 u64 [sp + 0x18] = a0
  1499: 33 07 8a 00              a0 = 0x8a
  1503: 7b 17 10                 u64 [sp + 0x10] = a0
  1506: 33 07 98 02 01           a0 = 0x10298
  1511: 7b 17 08                 u64 [sp + 0x8] = a0
  1514: 33 07 50 20 03           a0 = 0x32050
  1519: 95 77 00 00 01           a0 = a0 + 0x10000
  1524: 7b 17 50                 u64 [sp + 0x50] = a0
  1527: 33 07 20 01 01           a0 = 0x10120
  1532: 7b 17                    u64 [sp] = a0
  1534: 95 97 08                 a0 = a2 + 0x8
  1537: 95 ca f8                 a3 = a5 + 0xfffffffffffffff8
  1540: 95 98 0c                 a1 = a2 + 0xc
  1543: 7b 18 60                 u64 [sp + 0x60] = a1
  1546: 33 08 08                 a1 = 0x8
  1549: 33 06 ff ff fe           s1 = 0xfffffffffffeffff
  1554: 7b 16 48                 u64 [sp + 0x48] = s1
  1557: 7b 17 c0 00              u64 [sp + 0xc0] = a0
  1561: 7b 17 b8 00              u64 [sp + 0xb8] = a0
  1565: 7b 1c 40                 u64 [sp + 0x40] = a5
  1568: 7b 19 38                 u64 [sp + 0x38] = a2
  1571: 7b 1b 30                 u64 [sp + 0x30] = a4
  1574: 7b 1a a8 00              u64 [sp + 0xa8] = a3
  1578: ac 8c c0 04              jump @172 if a5 <u a1
      :                          @125
  1582: 51 09 d5 04              jump @173 if a2 == 0
      :                          @126
  1586: 51 0b d1 04              jump @173 if a4 == 0
      :                          @127
  1590: 7c 97                    a0 = u8 [a2]
  1592: 7b 17 78                 u64 [sp + 0x78] = a0
  1595: 7c 97 01                 a0 = u8 [a2 + 0x1]
  1598: 7b 17 68                 u64 [sp + 0x68] = a0
  1601: 7c 97 02                 a0 = u8 [a2 + 0x2]
  1604: 7b 17 70                 u64 [sp + 0x70] = a0
  1607: 7c 97 03                 a0 = u8 [a2 + 0x3]
  1610: 7b 17 80 00              u64 [sp + 0x80] = a0
  1614: 7c b7                    a0 = u8 [a4]
  1616: 7b 17 98 00              u64 [sp + 0x98] = a0
  1620: 7c b7 01                 a0 = u8 [a4 + 0x1]
  1623: 7b 17 88 00              u64 [sp + 0x88] = a0
  1627: 7c b7 02                 a0 = u8 [a4 + 0x2]
  1630: 7b 17 90 00              u64 [sp + 0x90] = a0
  1634: 7c b7 03                 a0 = u8 [a4 + 0x3]
  1637: 7b 17 a0 00              u64 [sp + 0xa0] = a0
  1641: 51 0a 53                 jump @137 if a3 == 0
      :                          @128
  1644: 82 17 c0 00              a0 = u64 [sp + 0xc0]
  1648: 7d 77                    a0 = i8 [a0]
  1650: 33 05 01                 s0 = 0x1
  1653: 59 07 4a                 jump @138 if a0 >=s 0
      :                          @129
  1656: 84 77 ff 00              a0 = a0 & 0xff
  1660: 33 05 02                 s0 = 0x2
  1663: 33 06 c0 00              s1 = 0xc0
  1667: ac 67 33                 jump @135 if a0 <u s1
      :                          @130
  1670: 33 05 03                 s0 = 0x3
  1673: 33 06 e0 00              s1 = 0xe0
  1677: ac 67 29                 jump @135 if a0 <u s1
      :                          @131
  1680: 33 05 04                 s0 = 0x4
  1683: 33 06 f0 00              s1 = 0xf0
  1687: ac 67 1f                 jump @135 if a0 <u s1
      :                          @132
  1690: 33 05 05                 s0 = 0x5
  1693: 33 06 f8 00              s1 = 0xf8
  1697: ac 67 15                 jump @135 if a0 <u s1
      :                          @133
  1700: 33 05 06                 s0 = 0x6
  1703: 33 06 fc 00              s1 = 0xfc
  1707: ac 67 0b                 jump @135 if a0 <u s1
      :                          @134
  1710: 88 77 fe 00              a0 = a0 <u 0xfe
  1714: 9a 75 08                 s0 = 0x8 - a0
  1717: 01                       fallthrough
      :                          @135
  1718: ae 5a 09                 jump @138 if a3 >=u s0
      :                          @136
  1721: 28 31 04                 jump @172
      :                          @137
  1724: 33 05                    s0 = 0
  1726: 01                       fallthrough
      :                          @138
  1727: 82 17 c0 00              a0 = u64 [sp + 0xc0]
  1731: 64 58                    a1 = s0
  1733: 7b 12 b0 00              u64 [sp + 0xb0] = t0
  1737: 50 10 26 d8 12           ra = 38, jump @471
      :                          @139 [@dyn 19]
  1742: 33 03 98 00              t1 = 0x98
  1746: 33 02 04                 t0 = 0x4
  1749: 33 06 08                 s1 = 0x8
  1752: 82 1c a8 00              a5 = u64 [sp + 0xa8]
  1756: 82 1b b0 00              a4 = u64 [sp + 0xb0]
  1760: ae 7b 0a 04              jump @172 if a4 >=u a0
      :                          @140
  1764: 82 18 68                 a1 = u64 [sp + 0x68]
  1767: 97 88 08                 a1 = a1 << 0x8
  1770: 82 19 78                 a2 = u64 [sp + 0x78]
  1773: d4 98 08                 a1 = a1 | a2
  1776: 82 19 70                 a2 = u64 [sp + 0x70]
  1779: 97 99 10                 a2 = a2 << 0x10
  1782: 82 1a 80 00              a3 = u64 [sp + 0x80]
  1786: 97 aa 18                 a3 = a3 << 0x18
  1789: d4 a9 09                 a2 = a2 | a3
  1792: d4 89 04                 t2 = a2 | a1
  1795: 82 18 88 00              a1 = u64 [sp + 0x88]
  1799: 97 88 08                 a1 = a1 << 0x8
  1802: 82 19 98 00              a2 = u64 [sp + 0x98]
  1806: d4 98 08                 a1 = a1 | a2
  1809: 82 19 90 00              a2 = u64 [sp + 0x90]
  1813: 97 99 10                 a2 = a2 << 0x10
  1816: 82 1a a0 00              a3 = u64 [sp + 0xa0]
  1820: 97 aa 18                 a3 = a3 << 0x18
  1823: d4 a9 09                 a2 = a2 | a3
  1826: d4 89 00                 ra = a2 | a1
  1829: e4 5c 08                 a1 = maxu(a5, s0)
  1832: c9 58 08                 a1 = a1 - s0
  1835: 82 19 b8 00              a2 = u64 [sp + 0xb8]
  1839: c8 59 09                 a2 = a2 + s0
  1842: 82 1a 60                 a3 = u64 [sp + 0x60]
  1845: c8 a5 05                 s0 = s0 + a3
  1848: 64 ba                    a3 = a4
  1850: 01                       fallthrough
      :                          @141
  1851: ac 68 af 03              jump @172 if a1 <u s1
      :                          @142
  1855: aa 25 c4 03              jump @173 if s0 == t0
      :                          @143
  1859: 51 05 c0 03              jump @173 if s0 == 0
      :                          @144
  1863: ac 38 a3 03              jump @172 if a1 <u t1
      :                          @145
  1867: 51 0a 17                 jump @148 if a3 == 0
      :                          @146
  1870: 95 88 68 ff              a1 = a1 + 0xffffffffffffff68
  1874: 95 55 98 00              s0 = s0 + 0x98
  1878: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  1881: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1884: 52 07 df                 jump @141 if a0 != 0
      :                          @147
  1887: 28 8b 03                 jump @172
      :                          @148
  1890: 7c 97 01                 a0 = u8 [a2 + 0x1]
  1893: 7c 98                    a1 = u8 [a2]
  1895: 7c 9a 02                 a3 = u8 [a2 + 0x2]
  1898: 7d 9b 03                 a4 = i8 [a2 + 0x3]
  1901: 8a 77 08                 i32 a0 = a0 << 0x8
  1904: d4 87 07                 a0 = a0 | a1
  1907: 8a a8 10                 i32 a1 = a3 << 0x10
  1910: 8a ba 18                 i32 a3 = a4 << 0x18
  1913: d4 a8 08                 a1 = a1 | a3
  1916: d4 87 07                 a0 = a0 | a1
  1919: 7b 17 a0 00              u64 [sp + 0xa0] = a0
  1923: 7c 57 01                 a0 = u8 [s0 + 0x1]
  1926: 7c 58                    a1 = u8 [s0]
  1928: 7c 5a 02                 a3 = u8 [s0 + 0x2]
  1931: 7d 5b 03                 a4 = i8 [s0 + 0x3]
  1934: 8a 77 08                 i32 a0 = a0 << 0x8
  1937: d4 87 07                 a0 = a0 | a1
  1940: 8a a8 10                 i32 a1 = a3 << 0x10
  1943: 8a ba 18                 i32 a3 = a4 << 0x18
  1946: d4 a8 08                 a1 = a1 | a3
  1949: 7c 9a 0f                 a3 = u8 [a2 + 0xf]
  1952: 7c 9b 0e                 a4 = u8 [a2 + 0xe]
  1955: d4 87 07                 a0 = a0 | a1
  1958: 7b 17 98 00              u64 [sp + 0x98] = a0
  1962: 7c 97 0d                 a0 = u8 [a2 + 0xd]
  1965: 97 aa 10                 a3 = a3 << 0x10
  1968: 97 bb 08                 a4 = a4 << 0x8
  1971: d4 ba 0a                 a3 = a3 | a4
  1974: 7c 98 0c                 a1 = u8 [a2 + 0xc]
  1977: 7c 9b 0b                 a4 = u8 [a2 + 0xb]
  1980: d4 a7 07                 a0 = a0 | a3
  1983: 97 77 10                 a0 = a0 << 0x10
  1986: 97 88 08                 a1 = a1 << 0x8
  1989: d4 b8 08                 a1 = a1 | a4
  1992: 7c 9a 0a                 a3 = u8 [a2 + 0xa]
  1995: 7c 9b 09                 a4 = u8 [a2 + 0x9]
  1998: d4 87 07                 a0 = a0 | a1
  2001: 97 77 10                 a0 = a0 << 0x10
  2004: 97 aa 08                 a3 = a3 << 0x8
  2007: d4 ba 0a                 a3 = a3 | a4
  2010: d4 a7 07                 a0 = a0 | a3
  2013: 7c 98 08                 a1 = u8 [a2 + 0x8]
  2016: 97 77 08                 a0 = a0 << 0x8
  2019: 7c 9a 97 00              a3 = u8 [a2 + 0x97]
  2023: 7c 9b 96 00              a4 = u8 [a2 + 0x96]
  2027: d4 87 07                 a0 = a0 | a1
  2030: 7b 17 90 00              u64 [sp + 0x90] = a0
  2034: 7c 97 95 00              a0 = u8 [a2 + 0x95]
  2038: 97 aa 10                 a3 = a3 << 0x10
  2041: 97 bb 08                 a4 = a4 << 0x8
  2044: d4 ba 0a                 a3 = a3 | a4
  2047: d4 a7 07                 a0 = a0 | a3
  2050: 7c 9a 94 00              a3 = u8 [a2 + 0x94]
  2054: 7c 9b 93 00              a4 = u8 [a2 + 0x93]
  2058: 95 98 10                 a1 = a2 + 0x10
  2061: 97 77 10                 a0 = a0 << 0x10
  2064: 97 aa 08                 a3 = a3 << 0x8
  2067: d4 ba 0a                 a3 = a3 | a4
  2070: 7c 9b 92 00              a4 = u8 [a2 + 0x92]
  2074: d4 a7 07                 a0 = a0 | a3
  2077: 7c 9a 91 00              a3 = u8 [a2 + 0x91]
  2081: 97 77 10                 a0 = a0 << 0x10
  2084: 97 bb 08                 a4 = a4 << 0x8
  2087: 7c 99 90 00              a2 = u8 [a2 + 0x90]
  2091: d4 ba 0a                 a3 = a3 | a4
  2094: d4 a7 07                 a0 = a0 | a3
  2097: 97 77 08                 a0 = a0 << 0x8
  2100: d4 97 07                 a0 = a0 | a2
  2103: 7b 17 88 00              u64 [sp + 0x88] = a0
  2107: 95 17 68 01              a0 = sp + 0x168
  2111: 33 09 80 00              a2 = 0x80
  2115: 64 45                    s0 = t2
  2117: 64 06                    s1 = ra
  2119: 50 10 28 6e 07           ra = 40, jump @280
      :                          @149 [@dyn 20]
  2124: 95 17 e0 00              a0 = sp + 0xe0
  2128: 95 18 68 01              a1 = sp + 0x168
  2132: 33 09 80 00              a2 = 0x80
  2136: 50 10 2a 5d 07           ra = 42, jump @280
      :                          @150 [@dyn 21]
  2141: 7a 15 c8 00              u32 [sp + 0xc8] = s0
  2145: 7a 16 cc 00              u32 [sp + 0xcc] = s1
  2149: 82 17 a0 00              a0 = u64 [sp + 0xa0]
  2153: 7a 17 d0 00              u32 [sp + 0xd0] = a0
  2157: 82 17 98 00              a0 = u64 [sp + 0x98]
  2161: 7a 17 d4 00              u32 [sp + 0xd4] = a0
  2165: 82 17 90 00              a0 = u64 [sp + 0x90]
  2169: 7b 17 d8 00              u64 [sp + 0xd8] = a0
  2173: 82 17 88 00              a0 = u64 [sp + 0x88]
  2177: 7b 17 60 01              u64 [sp + 0x160] = a0
  2181: 95 17 c8 00              a0 = sp + 0xc8
  2185: 7b 17 68 01              u64 [sp + 0x168] = a0
  2189: 82 17 28                 a0 = u64 [sp + 0x28]
  2192: 7b 17 70 01              u64 [sp + 0x170] = a0
  2196: 95 18 cc 00              a1 = sp + 0xcc
  2200: 7b 18 78 01              u64 [sp + 0x178] = a1
  2204: 7b 17 80 01              u64 [sp + 0x180] = a0
  2208: 95 18 d0 00              a1 = sp + 0xd0
  2212: 7b 18 88 01              u64 [sp + 0x188] = a1
  2216: 7b 17 90 01              u64 [sp + 0x190] = a0
  2220: 95 18 d4 00              a1 = sp + 0xd4
  2224: 7b 18 98 01              u64 [sp + 0x198] = a1
  2228: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  2232: 95 17 d8 00              a0 = sp + 0xd8
  2236: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  2240: 82 17 58                 a0 = u64 [sp + 0x58]
  2243: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  2247: 95 18 e0 00              a1 = sp + 0xe0
  2251: 7b 18 b8 01              u64 [sp + 0x1b8] = a1
  2255: 82 18 20                 a1 = u64 [sp + 0x20]
  2258: 7b 18 c0 01              u64 [sp + 0x1c0] = a1
  2262: 95 18 60 01              a1 = sp + 0x160
  2266: 7b 18 c8 01              u64 [sp + 0x1c8] = a1
  2270: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
  2274: 82 17 18                 a0 = u64 [sp + 0x18]
  2277: 7b 17 28 02              u64 [sp + 0x228] = a0
  2281: 49 21 30 02 07           u64 [sp + 560] = 0x7
  2286: 49 21 48 02              u64 [sp + 584] = 0
  2290: 95 17 68 01              a0 = sp + 0x168
  2294: 7b 17 38 02              u64 [sp + 0x238] = a0
  2298: 49 21 40 02 07           u64 [sp + 576] = 0x7
  2303: 95 17 58 02              a0 = sp + 0x258
  2307: 95 18 28 02              a1 = sp + 0x228
  2311: 50 10 2c 3a 04           ra = 44, jump @230
      :                          @151 [@dyn 22]
  2316: 82 15 60 02              s0 = u64 [sp + 0x260]
  2320: 82 1b 68 02              a4 = u64 [sp + 0x268]
  2324: 82 16 58 02              s1 = u64 [sp + 0x258]
  2328: 33 07 02                 a0 = 0x2
  2331: 33 08                    a1 = 0
  2333: 33 09                    a2 = 0
  2335: 64 5a                    a3 = s0
  2337: 33 00 2e                 ra = 0x2e
  2340: 0a 64                    ecalli 100 // 'log'
  2342: 01                       fallthrough
      :                          @152 [@dyn 23]
  2343: 82 17 48                 a0 = u64 [sp + 0x48]
  2346: c8 67 07                 a0 = a0 + s1
  2349: 82 1b 50                 a4 = u64 [sp + 0x50]
  2352: 53 37 00 00 ff 1a        jump @157 if a0 <u 4294901760
      :                          @153
  2358: 82 b7                    a0 = u64 [a4]
  2360: c9 7b 08                 a1 = a4 - a0
  2363: ab 58 0f                 jump @157 if a1 != s0
      :                          @154
  2366: c9 67 08                 a1 = a0 - s1
  2369: 01                       fallthrough
      :                          @155
  2370: 82 b9                    a2 = u64 [a4]
  2372: ab 79 f2                 jump @153 if a2 != a0
      :                          @156
  2375: 7b b8                    u64 [a4] = a1
  2377: 01                       fallthrough
      :                          @157
  2378: 81 17 cc 00              a0 = i32 [sp + 0xcc]
  2382: 7a 17 ec 01              u32 [sp + 0x1ec] = a0
  2386: 95 17 ec 01              a0 = sp + 0x1ec
  2390: 33 08 04                 a1 = 0x4
  2393: 95 19 e0 00              a2 = sp + 0xe0
  2397: 33 0a 80 00              a3 = 0x80
  2401: 0a 04                    ecalli 4 // 'write'
  2403: 0a                       ecalli 0 // 'gas'
  2404: 7b 17 f0 01              u64 [sp + 0x1f0] = a0
  2408: 7b 17 f8 01              u64 [sp + 0x1f8] = a0
  2412: 46 21 07 02 04           u8 [sp + 519] = 0x4
  2417: 7b 17 08 02              u64 [sp + 0x208] = a0
  2421: 95 17 07 02              a0 = sp + 0x207
  2425: 33 08 01                 a1 = 0x1
  2428: 95 19 08 02              a2 = sp + 0x208
  2432: 33 0a 08                 a3 = 0x8
  2435: 0a 04                    ecalli 4 // 'write'
  2437: 49 21 68 01 02           u64 [sp + 360] = 0x2
  2442: 49 21 78 01 02           u64 [sp + 376] = 0x2
  2447: 49 21 88 01              u64 [sp + 392] = 0
  2451: 14 07 20 00 00 00 10 00 00 00 a0 = 0x1000000020
  2461: 7b 17 90 01              u64 [sp + 0x190] = a0
  2465: 46 21 98 01 03           u8 [sp + 408] = 0x3
  2470: 49 21 a0 01 02           u64 [sp + 416] = 0x2
  2475: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  2480: 49 21 c0 01 01           u64 [sp + 448] = 0x1
  2485: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
  2489: 95 17 07 02              a0 = sp + 0x207
  2493: 7b 17 58 02              u64 [sp + 0x258] = a0
  2497: 82 17 10                 a0 = u64 [sp + 0x10]
  2500: 7b 17 60 02              u64 [sp + 0x260] = a0
  2504: 95 17 f8 01              a0 = sp + 0x1f8
  2508: 7b 17 68 02              u64 [sp + 0x268] = a0
  2512: 82 17 58                 a0 = u64 [sp + 0x58]
  2515: 7b 17 70 02              u64 [sp + 0x270] = a0
  2519: 46 21 d0 01 03           u8 [sp + 464] = 0x3
  2524: 82 17 08                 a0 = u64 [sp + 0x8]
  2527: 7b 17 28 02              u64 [sp + 0x228] = a0
  2531: 49 21 30 02 02           u64 [sp + 560] = 0x2
  2536: 95 17 68 01              a0 = sp + 0x168
  2540: 7b 17 48 02              u64 [sp + 0x248] = a0
  2544: 49 21 50 02 02           u64 [sp + 592] = 0x2
  2549: 95 17 58 02              a0 = sp + 0x258
  2553: 7b 17 38 02              u64 [sp + 0x238] = a0
  2557: 49 21 40 02 02           u64 [sp + 576] = 0x2
  2562: 95 17 10 02              a0 = sp + 0x210
  2566: 95 18 28 02              a1 = sp + 0x228
  2570: 50 10 30 37 03           ra = 48, jump @230
      :                          @158 [@dyn 24]
  2575: 82 15 18 02              s0 = u64 [sp + 0x218]
  2579: 82 1b 20 02              a4 = u64 [sp + 0x220]
  2583: 82 16 10 02              s1 = u64 [sp + 0x210]
  2587: 33 07 02                 a0 = 0x2
  2590: 33 08                    a1 = 0
  2592: 33 09                    a2 = 0
  2594: 64 5a                    a3 = s0
  2596: 33 00 32                 ra = 0x32
  2599: 0a 64                    ecalli 100 // 'log'
  2601: 01                       fallthrough
      :                          @159 [@dyn 25]
  2602: 82 1b 50                 a4 = u64 [sp + 0x50]
  2605: 82 17 48                 a0 = u64 [sp + 0x48]
  2608: c8 67 07                 a0 = a0 + s1
  2611: 53 37 00 00 ff 1a        jump @164 if a0 <u 4294901760
      :                          @160
  2617: 82 b7                    a0 = u64 [a4]
  2619: c9 7b 08                 a1 = a4 - a0
  2622: ab 58 0f                 jump @164 if a1 != s0
      :                          @161
  2625: c9 67 08                 a1 = a0 - s1
  2628: 01                       fallthrough
      :                          @162
  2629: 82 b9                    a2 = u64 [a4]
  2631: ab 79 f2                 jump @160 if a2 != a0
      :                          @163
  2634: 7b b8                    u64 [a4] = a1
  2636: 01                       fallthrough
      :                          @164
  2637: 95 17 f0 01              a0 = sp + 0x1f0
  2641: 7b 17 58 02              u64 [sp + 0x258] = a0
  2645: 82 17 58                 a0 = u64 [sp + 0x58]
  2648: 7b 17 60 02              u64 [sp + 0x260] = a0
  2652: 82 17                    a0 = u64 [sp]
  2654: 7b 17 68 01              u64 [sp + 0x168] = a0
  2658: 49 21 70 01 02           u64 [sp + 368] = 0x2
  2663: 49 21 88 01              u64 [sp + 392] = 0
  2667: 95 17 58 02              a0 = sp + 0x258
  2671: 7b 17 78 01              u64 [sp + 0x178] = a0
  2675: 49 21 80 01 01           u64 [sp + 384] = 0x1
  2680: 95 17 28 02              a0 = sp + 0x228
  2684: 95 18 68 01              a1 = sp + 0x168
  2688: 50 10 34 c1 02           ra = 52, jump @230
      :                          @165 [@dyn 26]
  2693: 82 15 30 02              s0 = u64 [sp + 0x230]
  2697: 82 1b 38 02              a4 = u64 [sp + 0x238]
  2701: 82 16 28 02              s1 = u64 [sp + 0x228]
  2705: 33 07 02                 a0 = 0x2
  2708: 33 08                    a1 = 0
  2710: 33 09                    a2 = 0
  2712: 64 5a                    a3 = s0
  2714: 33 00 36                 ra = 0x36
  2717: 0a 64                    ecalli 100 // 'log'
  2719: 01                       fallthrough
      :                          @166 [@dyn 27]
  2720: 82 1b 50                 a4 = u64 [sp + 0x50]
  2723: 82 17 48                 a0 = u64 [sp + 0x48]
  2726: c8 67 07                 a0 = a0 + s1
  2729: 53 37 00 00 ff 1a        jump @171 if a0 <u 4294901760
      :                          @167
  2735: 82 b7                    a0 = u64 [a4]
  2737: c9 7b 08                 a1 = a4 - a0
  2740: ab 58 0f                 jump @171 if a1 != s0
      :                          @168
  2743: c9 67 08                 a1 = a0 - s1
  2746: 01                       fallthrough
      :                          @169
  2747: 82 b9                    a2 = u64 [a4]
  2749: ab 79 f2                 jump @167 if a2 != a0
      :                          @170
  2752: 7b b8                    u64 [a4] = a1
  2754: 01                       fallthrough
      :                          @171
  2755: 82 12 b0 00              t0 = u64 [sp + 0xb0]
  2759: 95 22 01                 t0 = t0 + 0x1
  2762: 82 17 b8 00              a0 = u64 [sp + 0xb8]
  2766: 95 77 98 00              a0 = a0 + 0x98
  2770: 7b 17 b8 00              u64 [sp + 0xb8] = a0
  2774: 82 1c 40                 a5 = u64 [sp + 0x40]
  2777: 82 19 38                 a2 = u64 [sp + 0x38]
  2780: 82 1b 30                 a4 = u64 [sp + 0x30]
  2783: 82 1a a8 00              a3 = u64 [sp + 0xa8]
  2787: 33 08 08                 a1 = 0x8
  2790: ae 8c 48 fb              jump @125 if a5 >=u a1
      :                          @172
  2794: 33 07 00 00 01           a0 = 0x10000
  2799: 33 08                    a1 = 0
  2801: 82 10 88 02              ra = u64 [sp + 0x288]
  2805: 82 15 80 02              s0 = u64 [sp + 0x280]
  2809: 82 16 78 02              s1 = u64 [sp + 0x278]
  2813: 95 11 90 02              sp = sp + 0x290
  2817: 32 00                    ret
      :                          @173
  2819: 00                       trap
      :                          @174
  2820: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  2823: 7b 10 40                 u64 [sp + 0x40] = ra
  2826: 7b 15 38                 u64 [sp + 0x38] = s0
  2829: 7b 16 30                 u64 [sp + 0x30] = s1
  2832: c8 89 09                 a2 = a2 + a1
  2835: ac 89 52                 jump @182 if a2 <u a1
      :                          @175
  2838: 64 75                    s0 = a0
  2840: 82 77                    a0 = u64 [a0]
  2842: 97 78 01                 a1 = a0 << 0x1
  2845: 33 0a 08                 a3 = 0x8
  2848: e4 a9 09                 a2 = maxu(a2, a3)
  2851: e4 98 06                 s1 = maxu(a1, a2)
  2854: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  2857: 98 88 3f                 a1 = a1 >> 0x3f
  2860: 51 07 12                 jump @177 if a0 == 0
      :                          @176
  2863: 82 59 08                 a2 = u64 [s0 + 0x8]
  2866: 7b 19 18                 u64 [sp + 0x18] = a2
  2869: 49 11 20 01              u64 [sp + 32] = 0x1
  2873: 7b 17 28                 u64 [sp + 0x28] = a0
  2876: 28 06                    jump @178
      :                          @177
  2878: 49 11 20                 u64 [sp + 32] = 0
  2881: 01                       fallthrough
      :                          @178
  2882: 64 17                    a0 = sp
  2884: 95 1a 18                 a3 = sp + 0x18
  2887: 64 69                    a2 = s1
  2889: 50 10 38 32              ra = 56, jump @186
      :                          @179 [@dyn 28]
  2893: 82 18                    a1 = u64 [sp]
  2895: 82 17 08                 a0 = u64 [sp + 0x8]
  2898: 51 08 14                 jump @183 if a1 == 0
      :                          @180
  2901: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  2911: aa 87 0d                 jump @184 if a0 == a1
      :                          @181
  2914: 52 07 18                 jump @185 if a0 != 0
      :                          @182
  2917: 00                       trap
      :                          @183
  2918: 7b 57 08                 u64 [s0 + 0x8] = a0
  2921: 7b 56                    u64 [s0] = s1
  2923: 01                       fallthrough
      :                          @184
  2924: 82 10 40                 ra = u64 [sp + 0x40]
  2927: 82 15 38                 s0 = u64 [sp + 0x38]
  2930: 82 16 30                 s1 = u64 [sp + 0x30]
  2933: 95 11 48                 sp = sp + 0x48
  2936: 32 00                    ret
      :                          @185
  2938: 00                       trap
      :                          @186
  2939: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  2942: 7b 10 30                 u64 [sp + 0x30] = ra
  2945: 7b 15 28                 u64 [sp + 0x28] = s0
  2948: 7b 16 20                 u64 [sp + 0x20] = s1
  2951: 64 95                    s0 = a2
  2953: 64 72                    t0 = a0
  2955: 51 08 79                 jump @196 if a1 == 0
      :                          @187
  2958: 82 a7 08                 a0 = u64 [a3 + 0x8]
  2961: 51 07 7c                 jump @197 if a0 == 0
      :                          @188
  2964: 82 a9 10                 a2 = u64 [a3 + 0x10]
  2967: 51 09 aa 00              jump @204 if a2 == 0
      :                          @189
  2971: 82 a8                    a1 = u64 [a3]
  2973: 33 06 50 20 03           s1 = 0x32050
  2978: 33 03 00 00 01           t1 = 0x10000
  2983: c8 36 06                 s1 = s1 + t1
  2986: 01                       fallthrough
      :                          @190
  2987: 82 6a                    a3 = u64 [s1]
  2989: c8 5a 07                 a0 = a3 + s0
  2992: ac a7 cf 00              jump @210 if a0 <u a3
      :                          @191
  2996: 95 7b 01                 a4 = a0 + 0x1
  2999: 88 bc 01                 a5 = a4 <u 0x1
  3002: d8 b3 0b                 a4 = t1 <u a4
  3005: d4 cb 0b                 a4 = a4 | a5
  3008: 52 0b bf 00              jump @210 if a4 != 0
      :                          @192
  3012: 82 6b                    a4 = u64 [s1]
  3014: ab ab e5                 jump @190 if a4 != a3
      :                          @193
  3017: 7b 67                    u64 [s1] = a0
  3019: 33 0c                    a5 = 0
  3021: 7b 12 18                 u64 [sp + 0x18] = t0
  3024: 33 0a 50 20 03           a3 = 0x32050
  3029: 33 0b 00 00 01           a4 = 0x10000
  3034: 7b 1a                    u64 [sp] = a3
  3036: c8 ba 0a                 a3 = a3 + a4
  3039: c9 7a 07                 a0 = a3 - a0
  3042: 7b 17 10                 u64 [sp + 0x10] = a0
  3045: 7b 18 08                 u64 [sp + 0x8] = a1
  3048: 64 96                    s1 = a2
  3050: 50 10 3a cb 03           ra = 58, jump @280
      :                          @194 [@dyn 29]
  3055: 54 36 00 00 01 98 00     jump @211 if s1 <=u 65536
      :                          @195
  3062: 82 12 18                 t0 = u64 [sp + 0x18]
  3065: 82 18 10                 a1 = u64 [sp + 0x10]
  3068: 33 07                    a0 = 0
  3070: 7b 28 08                 u64 [t0 + 0x8] = a1
  3073: 28 b5 00                 jump @217
      :                          @196
  3076: 49 12 08                 u64 [t0 + 8] = 0
  3079: 33 07 01                 a0 = 0x1
  3082: 28 ac 00                 jump @217
      :                          @197
  3085: 33 09 50 20 03           a2 = 0x32050
  3090: 33 07 00 00 01           a0 = 0x10000
  3095: c8 79 09                 a2 = a2 + a0
  3098: 01                       fallthrough
      :                          @198
  3099: 82 9a                    a3 = u64 [a2]
  3101: c8 5a 08                 a1 = a3 + s0
  3104: ac a8 5f                 jump @210 if a1 <u a3
      :                          @199
  3107: 95 8b 01                 a4 = a1 + 0x1
  3110: 88 bc 01                 a5 = a4 <u 0x1
  3113: d8 b7 0b                 a4 = a0 <u a4
  3116: d4 cb 0b                 a4 = a4 | a5
  3119: 52 0b 50                 jump @210 if a4 != 0
      :                          @200
  3122: 82 9b                    a4 = u64 [a2]
  3124: ab ab e7                 jump @198 if a4 != a3
      :                          @201
  3127: 7b 98                    u64 [a2] = a1
  3129: 33 0c                    a5 = 0
  3131: 01                       fallthrough
      :                          @202
  3132: ab ab df                 jump @198 if a4 != a3
      :                          @203
  3135: 28 31                    jump @209
      :                          @204
  3137: 33 09 50 20 03           a2 = 0x32050
  3142: 33 07 00 00 01           a0 = 0x10000
  3147: c8 79 09                 a2 = a2 + a0
  3150: 01                       fallthrough
      :                          @205
  3151: 82 9a                    a3 = u64 [a2]
  3153: c8 5a 08                 a1 = a3 + s0
  3156: ac a8 2b                 jump @210 if a1 <u a3
      :                          @206
  3159: 95 8b 01                 a4 = a1 + 0x1
  3162: 88 bc 01                 a5 = a4 <u 0x1
  3165: d8 b7 0b                 a4 = a0 <u a4
  3168: d4 cb 0b                 a4 = a4 | a5
  3171: 52 0b 1c                 jump @210 if a4 != 0
      :                          @207
  3174: 82 9b                    a4 = u64 [a2]
  3176: ab ab e7                 jump @205 if a4 != a3
      :                          @208
  3179: 7b 98                    u64 [a2] = a1
  3181: 33 0c                    a5 = 0
  3183: 01                       fallthrough
      :                          @209
  3184: 33 07 50 20 04           a0 = 0x42050
  3189: c9 87 08                 a1 = a0 - a1
  3192: 33 07                    a0 = 0
  3194: 7b 28 08                 u64 [t0 + 0x8] = a1
  3197: 28 39                    jump @217
      :                          @210
  3199: 33 07 01                 a0 = 0x1
  3202: 7b 27 08                 u64 [t0 + 0x8] = a0
  3205: 28 31                    jump @217
      :                          @211
  3207: 64 6c                    a5 = s1
  3209: 82 17                    a0 = u64 [sp]
  3211: 95 77 00 00 01           a0 = a0 + 0x10000
  3216: 82 12 18                 t0 = u64 [sp + 0x18]
  3219: 82 16 08                 s1 = u64 [sp + 0x8]
  3222: 01                       fallthrough
      :                          @212
  3223: 82 78                    a1 = u64 [a0]
  3225: c9 87 09                 a2 = a0 - a1
  3228: ab 69 11                 jump @216 if a2 != s1
      :                          @213
  3231: c9 c8 09                 a2 = a1 - a5
  3234: 01                       fallthrough
      :                          @214
  3235: 82 7a                    a3 = u64 [a0]
  3237: ab 8a f2                 jump @212 if a3 != a1
      :                          @215
  3240: 7b 79                    u64 [a0] = a2
  3242: 33 0b                    a4 = 0
  3244: 01                       fallthrough
      :                          @216
  3245: 82 18 10                 a1 = u64 [sp + 0x10]
  3248: 33 07                    a0 = 0
  3250: 7b 28 08                 u64 [t0 + 0x8] = a1
  3253: 01                       fallthrough
      :                          @217
  3254: 7b 25 10                 u64 [t0 + 0x10] = s0
  3257: 7b 27                    u64 [t0] = a0
  3259: 82 10 30                 ra = u64 [sp + 0x30]
  3262: 82 15 28                 s0 = u64 [sp + 0x28]
  3265: 82 16 20                 s1 = u64 [sp + 0x20]
  3268: 95 11 38                 sp = sp + 0x38
  3271: 32 00                    ret
      :                          @218
  3273: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  3276: 7b 10 40                 u64 [sp + 0x40] = ra
  3279: 7b 15 38                 u64 [sp + 0x38] = s0
  3282: 7b 16 30                 u64 [sp + 0x30] = s1
  3285: 95 88 01                 a1 = a1 + 0x1
  3288: 51 08 53                 jump @226 if a1 == 0
      :                          @219
  3291: 64 75                    s0 = a0
  3293: 82 77                    a0 = u64 [a0]
  3295: 97 79 01                 a2 = a0 << 0x1
  3298: 33 0a 08                 a3 = 0x8
  3301: e4 a8 08                 a1 = maxu(a1, a3)
  3304: e4 89 06                 s1 = maxu(a2, a1)
  3307: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  3310: 98 88 3f                 a1 = a1 >> 0x3f
  3313: 51 07 12                 jump @221 if a0 == 0
      :                          @220
  3316: 82 59 08                 a2 = u64 [s0 + 0x8]
  3319: 7b 19 18                 u64 [sp + 0x18] = a2
  3322: 49 11 20 01              u64 [sp + 32] = 0x1
  3326: 7b 17 28                 u64 [sp + 0x28] = a0
  3329: 28 06                    jump @222
      :                          @221
  3331: 49 11 20                 u64 [sp + 32] = 0
  3334: 01                       fallthrough
      :                          @222
  3335: 64 17                    a0 = sp
  3337: 95 1a 18                 a3 = sp + 0x18
  3340: 64 69                    a2 = s1
  3342: 50 10 3c 6d fe           ra = 60, jump @186
      :                          @223 [@dyn 30]
  3347: 82 18                    a1 = u64 [sp]
  3349: 82 17 08                 a0 = u64 [sp + 0x8]
  3352: 51 08 14                 jump @227 if a1 == 0
      :                          @224
  3355: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  3365: aa 87 0d                 jump @228 if a0 == a1
      :                          @225
  3368: 52 07 18                 jump @229 if a0 != 0
      :                          @226
  3371: 00                       trap
      :                          @227
  3372: 7b 57 08                 u64 [s0 + 0x8] = a0
  3375: 7b 56                    u64 [s0] = s1
  3377: 01                       fallthrough
      :                          @228
  3378: 82 10 40                 ra = u64 [sp + 0x40]
  3381: 82 15 38                 s0 = u64 [sp + 0x38]
  3384: 82 16 30                 s1 = u64 [sp + 0x30]
  3387: 95 11 48                 sp = sp + 0x48
  3390: 32 00                    ret
      :                          @229
  3392: 00                       trap
      :                          @230
  3393: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  3396: 7b 10 30                 u64 [sp + 0x30] = ra
  3399: 7b 15 28                 u64 [sp + 0x28] = s0
  3402: 7b 16 20                 u64 [sp + 0x20] = s1
  3405: 64 89                    a2 = a1
  3407: 82 8a 08                 a3 = u64 [a1 + 0x8]
  3410: 64 75                    s0 = a0
  3412: 51 0a 35                 jump @235 if a3 == 0
      :                          @231
  3415: 82 98                    a1 = u64 [a2]
  3417: 33 07                    a0 = 0
  3419: 95 8b 08                 a4 = a1 + 0x8
  3422: 01                       fallthrough
      :                          @232
  3423: 82 bc                    a5 = u64 [a4]
  3425: c8 c7 07                 a0 = a0 + a5
  3428: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  3431: 95 bb 10                 a4 = a4 + 0x10
  3434: 52 0a f5                 jump @232 if a3 != 0
      :                          @233
  3437: 82 9a 18                 a3 = u64 [a2 + 0x18]
  3440: 51 0a 24                 jump @237 if a3 == 0
      :                          @234
  3443: 82 88 08                 a1 = u64 [a1 + 0x8]
  3446: 8e 88                    a1 = a1 >u 0
  3448: 88 7a 10                 a3 = a0 <u 0x10
  3451: 85 aa 01                 a3 = a3 ^ 0x1
  3454: d4 a8 08                 a1 = a1 | a3
  3457: 89 7a                    a3 = a0 <s 0
  3459: e0 a8 08                 a1 = a1 & ~a3
  3462: 52 08 0a                 jump @236 if a1 != 0
      :                          @235
  3465: 33 07                    a0 = 0
  3467: 33 08 01                 a1 = 0x1
  3470: 28 4a                    jump @245
      :                          @236
  3472: 97 77 01                 a0 = a0 << 0x1
  3475: 01                       fallthrough
      :                          @237
  3476: 51 07 40                 jump @244 if a0 == 0
      :                          @238
  3479: 57 07 78                 jump @250 if a0 <s 0
      :                          @239
  3482: 64 52                    t0 = s0
  3484: 33 0b 50 20 03           a4 = 0x32050
  3489: 33 08 00 00 01           a1 = 0x10000
  3494: c8 8b 0b                 a4 = a4 + a1
  3497: 01                       fallthrough
      :                          @240
  3498: 82 bc                    a5 = u64 [a4]
  3500: c8 7c 0a                 a3 = a5 + a0
  3503: ac ca 5e                 jump @248 if a3 <u a5
      :                          @241
  3506: 95 a5 01                 s0 = a3 + 0x1
  3509: 88 56 01                 s1 = s0 <u 0x1
  3512: d8 58 05                 s0 = a1 <u s0
  3515: d4 65 05                 s0 = s0 | s1
  3518: 52 05 4f                 jump @248 if s0 != 0
      :                          @242
  3521: 82 b6                    s1 = u64 [a4]
  3523: ab c6 e7                 jump @240 if s1 != a5
      :                          @243
  3526: 7b ba                    u64 [a4] = a3
  3528: 33 08 50 20 04           a1 = 0x42050
  3533: c9 a8 08                 a1 = a1 - a3
  3536: 64 25                    s0 = t0
  3538: 28 06                    jump @245
      :                          @244
  3540: 33 08 01                 a1 = 0x1
  3543: 01                       fallthrough
      :                          @245
  3544: 7b 17                    u64 [sp] = a0
  3546: 7b 18 08                 u64 [sp + 0x8] = a1
  3549: 49 11 10                 u64 [sp + 16] = 0
  3552: 33 08 40 01 01           a1 = 0x10140
  3557: 64 17                    a0 = sp
  3559: 50 10 3e 1a 06           ra = 62, jump @362
      :                          @246 [@dyn 31]
  3564: 52 07 22                 jump @249 if a0 != 0
      :                          @247
  3567: 82 17 10                 a0 = u64 [sp + 0x10]
  3570: 82 18 08                 a1 = u64 [sp + 0x8]
  3573: 82 19                    a2 = u64 [sp]
  3575: 7b 57 10                 u64 [s0 + 0x10] = a0
  3578: 7b 58 08                 u64 [s0 + 0x8] = a1
  3581: 7b 59                    u64 [s0] = a2
  3583: 82 10 30                 ra = u64 [sp + 0x30]
  3586: 82 15 28                 s0 = u64 [sp + 0x28]
  3589: 82 16 20                 s1 = u64 [sp + 0x20]
  3592: 95 11 38                 sp = sp + 0x38
  3595: 32 00                    ret
      :                          @248
  3597: 00                       trap
      :                          @249
  3598: 00                       trap
      :                          @250
  3599: 00                       trap
      :                          @251 [@dyn 32]
  3600: 82 72                    t0 = u64 [a0]
  3602: 33 09 00 00 ff           a2 = 0xffffffffffff0000
  3607: 95 2a ff ff fe           a3 = t0 + 0xfffffffffffeffff
  3612: ac 9a 28                 jump @257 if a3 <u a2
      :                          @252
  3615: 82 77 08                 a0 = u64 [a0 + 0x8]
  3618: 33 09 50 20 03           a2 = 0x32050
  3623: 95 99 00 00 01           a2 = a2 + 0x10000
  3628: 01                       fallthrough
      :                          @253
  3629: 82 9a                    a3 = u64 [a2]
  3631: c9 a9 0b                 a4 = a2 - a3
  3634: ab 7b 12                 jump @257 if a4 != a0
      :                          @254
  3637: c9 2a 0b                 a4 = a3 - t0
  3640: 01                       fallthrough
      :                          @255
  3641: 82 9c                    a5 = u64 [a2]
  3643: ab ac f2                 jump @253 if a5 != a3
      :                          @256
  3646: 7b 9b                    u64 [a2] = a4
  3648: 33 08                    a1 = 0
  3650: 32 00                    ret
      :                          @257
  3652: 32 00                    ret
      :                          @258 [@dyn 33]
  3654: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3657: 7b 10 18                 u64 [sp + 0x18] = ra
  3660: 7b 15 10                 u64 [sp + 0x10] = s0
  3663: 7b 16 08                 u64 [sp + 0x8] = s1
  3666: 64 75                    s0 = a0
  3668: 82 7a 10                 a3 = u64 [a0 + 0x10]
  3671: 82 77                    a0 = u64 [a0]
  3673: c9 a7 07                 a0 = a0 - a3
  3676: 64 96                    s1 = a2
  3678: ac 97 2a                 jump @261 if a0 <u a2
      :                          @259
  3681: 7b 1a                    u64 [sp] = a3
  3683: 82 57 08                 a0 = u64 [s0 + 0x8]
  3686: c8 a7 07                 a0 = a0 + a3
  3689: 64 69                    a2 = s1
  3691: 50 10 44 4a 01           ra = 68, jump @280
      :                          @260 [@dyn 34]
  3696: 82 17                    a0 = u64 [sp]
  3698: c8 76 06                 s1 = s1 + a0
  3701: 7b 56 10                 u64 [s0 + 0x10] = s1
  3704: 33 07                    a0 = 0
  3706: 82 10 18                 ra = u64 [sp + 0x18]
  3709: 82 15 10                 s0 = u64 [sp + 0x10]
  3712: 82 16 08                 s1 = u64 [sp + 0x8]
  3715: 95 11 20                 sp = sp + 0x20
  3718: 32 00                    ret
      :                          @261
  3720: 64 57                    a0 = s0
  3722: 7b 18                    u64 [sp] = a1
  3724: 64 a8                    a1 = a3
  3726: 64 69                    a2 = s1
  3728: 50 10 46 74 fc           ra = 70, jump @174
      :                          @262 [@dyn 35]
  3733: 82 18                    a1 = u64 [sp]
  3735: 82 5a 10                 a3 = u64 [s0 + 0x10]
  3738: 28 c7                    jump @259
      :                          @263 [@dyn 36]
  3740: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  3743: 7b 10 20                 u64 [sp + 0x20] = ra
  3746: 7b 15 18                 u64 [sp + 0x18] = s0
  3749: 7b 16 10                 u64 [sp + 0x10] = s1
  3752: 64 86                    s1 = a1
  3754: 83 88                    i32 a1 = a1 + 0
  3756: 33 09 80 00              a2 = 0x80
  3760: 64 7a                    a3 = a0
  3762: ae 98 2b                 jump @268 if a1 >=u a2
      :                          @264
  3765: 82 a8 10                 a1 = u64 [a3 + 0x10]
  3768: 82 a7                    a0 = u64 [a3]
  3770: ab 78 12                 jump @267 if a1 != a0
      :                          @265
  3773: 64 a7                    a0 = a3
  3775: 64 a5                    s0 = a3
  3777: 50 10 4a 08 fe           ra = 74, jump @218
      :                          @266 [@dyn 37]
  3782: 64 5a                    a3 = s0
  3784: 82 58 10                 a1 = u64 [s0 + 0x10]
  3787: 01                       fallthrough
      :                          @267
  3788: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3791: c8 87 07                 a0 = a0 + a1
  3794: 78 76                    u8 [a0] = s1
  3796: 95 88 01                 a1 = a1 + 0x1
  3799: 7b a8 10                 u64 [a3 + 0x10] = a1
  3802: 28 ab 00                 jump @276
      :                          @268
  3805: 8b 67 0b                 i32 a0 = s1 >> 0xb
  3808: 48 11 0c                 u32 [sp + 12] = 0
  3811: 52 07 1c                 jump @270 if a0 != 0
      :                          @269
  3814: 98 67 06                 a0 = s1 >> 0x6
  3817: 86 77 c0 00              a0 = a0 | 0xc0
  3821: 78 17 0c                 u8 [sp + 0xc] = a0
  3824: 84 67 3f                 a0 = s1 & 0x3f
  3827: 86 77 80 00              a0 = a0 | 0x80
  3831: 78 17 0d                 u8 [sp + 0xd] = a0
  3834: 33 06 02                 s1 = 0x2
  3837: 28 63                    jump @273
      :                          @270
  3839: 8b 67 10                 i32 a0 = s1 >> 0x10
  3842: 52 07 29                 jump @272 if a0 != 0
      :                          @271
  3845: 98 67 0c                 a0 = s1 >> 0xc
  3848: 86 77 e0 00              a0 = a0 | 0xe0
  3852: 78 17 0c                 u8 [sp + 0xc] = a0
  3855: 97 67 34                 a0 = s1 << 0x34
  3858: 98 77 3a                 a0 = a0 >> 0x3a
  3861: 95 77 80 00              a0 = a0 + 0x80
  3865: 78 17 0d                 u8 [sp + 0xd] = a0
  3868: 84 67 3f                 a0 = s1 & 0x3f
  3871: 86 77 80 00              a0 = a0 | 0x80
  3875: 78 17 0e                 u8 [sp + 0xe] = a0
  3878: 33 06 03                 s1 = 0x3
  3881: 28 37                    jump @273
      :                          @272
  3883: 97 67 2b                 a0 = s1 << 0x2b
  3886: 98 77 3d                 a0 = a0 >> 0x3d
  3889: 95 77 f0 00              a0 = a0 + 0xf0
  3893: 78 17 0c                 u8 [sp + 0xc] = a0
  3896: 97 67 2e                 a0 = s1 << 0x2e
  3899: 98 77 3a                 a0 = a0 >> 0x3a
  3902: 95 77 80 00              a0 = a0 + 0x80
  3906: 78 17 0d                 u8 [sp + 0xd] = a0
  3909: 97 67 34                 a0 = s1 << 0x34
  3912: 98 77 3a                 a0 = a0 >> 0x3a
  3915: 95 77 80 00              a0 = a0 + 0x80
  3919: 78 17 0e                 u8 [sp + 0xe] = a0
  3922: 84 67 3f                 a0 = s1 & 0x3f
  3925: 86 77 80 00              a0 = a0 | 0x80
  3929: 78 17 0f                 u8 [sp + 0xf] = a0
  3932: 33 06 04                 s1 = 0x4
  3935: 01                       fallthrough
      :                          @273
  3936: 82 a5 10                 s0 = u64 [a3 + 0x10]
  3939: 82 a7                    a0 = u64 [a3]
  3941: c9 57 07                 a0 = a0 - s0
  3944: ac 67 2d                 jump @277 if a0 <u s1
      :                          @274
  3947: 7b 1a                    u64 [sp] = a3
  3949: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3952: c8 57 07                 a0 = a0 + s0
  3955: 95 18 0c                 a1 = sp + 0xc
  3958: 64 69                    a2 = s1
  3960: 50 10 4c 3d              ra = 76, jump @280
      :                          @275 [@dyn 38]
  3964: c8 56 06                 s1 = s1 + s0
  3967: 82 17                    a0 = u64 [sp]
  3969: 7b 76 10                 u64 [a0 + 0x10] = s1
  3972: 01                       fallthrough
      :                          @276
  3973: 33 07                    a0 = 0
  3975: 82 10 20                 ra = u64 [sp + 0x20]
  3978: 82 15 18                 s0 = u64 [sp + 0x18]
  3981: 82 16 10                 s1 = u64 [sp + 0x10]
  3984: 95 11 28                 sp = sp + 0x28
  3987: 32 00                    ret
      :                          @277
  3989: 64 a7                    a0 = a3
  3991: 64 58                    a1 = s0
  3993: 64 69                    a2 = s1
  3995: 64 a5                    s0 = a3
  3997: 50 10 4e 67 fb           ra = 78, jump @174
      :                          @278 [@dyn 39]
  4002: 64 5a                    a3 = s0
  4004: 82 55 10                 s0 = u64 [s0 + 0x10]
  4007: 28 c4                    jump @274
      :                          @279 [@dyn 40]
  4009: 64 8a                    a3 = a1
  4011: 33 08 40 01 01           a1 = 0x10140
  4016: 64 a9                    a2 = a3
  4018: 28 4f 04                 jump @362
      :                          @280
  4021: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  4024: 7b 10 18                 u64 [sp + 0x18] = ra
  4027: 7b 15 10                 u64 [sp + 0x10] = s0
  4030: 7b 16 08                 u64 [sp + 0x8] = s1
  4033: 53 19 10 64              jump @289 if a2 <u 16
      :                          @281
  4037: 8d 7a                    i32 a3 = -a0
  4039: 84 a2 07                 t0 = a3 & 0x7
  4042: c8 27 0b                 a4 = a0 + t0
  4045: 51 02 15                 jump @284 if t0 == 0
      :                          @282
  4048: 64 8c                    a5 = a1
  4050: 64 75                    s0 = a0
  4052: 01                       fallthrough
      :                          @283
  4053: 7c ca                    a3 = u8 [a5]
  4055: 78 5a                    u8 [s0] = a3
  4057: 95 55 01                 s0 = s0 + 0x1
  4060: 95 cc 01                 a5 = a5 + 0x1
  4063: ac b5 f6                 jump @283 if s0 <u a4
      :                          @284
  4066: c8 28 03                 t1 = a1 + t0
  4069: c9 29 02                 t0 = a2 - t0
  4072: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  4075: 84 38 07                 a1 = t1 & 0x7
  4078: c8 4b 0a                 a3 = a4 + t2
  4081: 51 08 3b                 jump @291 if a1 == 0
      :                          @285
  4084: 58 04 4b                 jump @294 if t2 <=s 0
      :                          @286
  4087: 97 38 03                 a1 = t1 << 0x3
  4090: 84 80 38                 ra = a1 & 0x38
  4093: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  4096: 82 c5                    s0 = u64 [a5]
  4098: 8d 88                    i32 a1 = -a1
  4100: 84 88 38                 a1 = a1 & 0x38
  4103: 95 cc 08                 a5 = a5 + 0x8
  4106: 01                       fallthrough
      :                          @287
  4107: 82 c6                    s1 = u64 [a5]
  4109: d0 05 05                 s0 = s0 >> ra
  4112: cf 86 09                 a2 = s1 << a1
  4115: d4 59 09                 a2 = a2 | s0
  4118: 7b b9                    u64 [a4] = a2
  4120: 95 bb 08                 a4 = a4 + 0x8
  4123: 95 cc 08                 a5 = a5 + 0x8
  4126: 64 65                    s0 = s1
  4128: ac ab eb                 jump @287 if a4 <u a3
      :                          @288
  4131: 28 1c                    jump @294
      :                          @289
  4133: 64 7a                    a3 = a0
  4135: 52 09 21                 jump @295 if a2 != 0
      :                          @290
  4138: 28 2f                    jump @297
      :                          @291
  4140: 58 04 13                 jump @294 if t2 <=s 0
      :                          @292
  4143: 64 38                    a1 = t1
  4145: 01                       fallthrough
      :                          @293
  4146: 82 89                    a2 = u64 [a1]
  4148: 7b b9                    u64 [a4] = a2
  4150: 95 bb 08                 a4 = a4 + 0x8
  4153: 95 88 08                 a1 = a1 + 0x8
  4156: ac ab f6                 jump @293 if a4 <u a3
      :                          @294
  4159: c8 43 08                 a1 = t1 + t2
  4162: 84 29 07                 a2 = t0 & 0x7
  4165: 51 09 14                 jump @297 if a2 == 0
      :                          @295
  4168: c8 a9 09                 a2 = a2 + a3
  4171: 01                       fallthrough
      :                          @296
  4172: 7c 8b                    a4 = u8 [a1]
  4174: 78 ab                    u8 [a3] = a4
  4176: 95 aa 01                 a3 = a3 + 0x1
  4179: 95 88 01                 a1 = a1 + 0x1
  4182: ac 9a f6                 jump @296 if a3 <u a2
      :                          @297
  4185: 82 10 18                 ra = u64 [sp + 0x18]
  4188: 82 15 10                 s0 = u64 [sp + 0x10]
  4191: 82 16 08                 s1 = u64 [sp + 0x8]
  4194: 95 11 20                 sp = sp + 0x20
  4197: 32 00                    ret
      :                          @298 [@dyn 41]
  4199: 82 77                    a0 = u64 [a0]
  4201: 01                       fallthrough
      :                          @299
  4202: 28                       jump @299
      :                          @300
  4203: 95 11 a8                 sp = sp + 0xffffffffffffffa8
  4206: 7b 10 50                 u64 [sp + 0x50] = ra
  4209: 7b 15 48                 u64 [sp + 0x48] = s0
  4212: 7b 16 40                 u64 [sp + 0x40] = s1
  4215: 7b 18                    u64 [sp] = a1
  4217: 98 79 04                 a2 = a0 >> 0x4
  4220: 33 08 27                 a1 = 0x27
  4223: 53 29 71 02 81 00        jump @303 if a2 <u 625
      :                          @301
  4229: 33 08 27                 a1 = 0x27
  4232: 95 1a 3e                 a3 = sp + 0x3e
  4235: 3a 09 08 10 03           a2 = u64 [0x31008]
  4240: 7b 19 10                 u64 [sp + 0x10] = a2
  4243: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
  4249: 33 04 7b 14              t2 = 0x147b
  4253: 33 0b b4 01 01           a4 = 0x101b4
  4258: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
  4264: 01                       fallthrough
      :                          @302
  4265: 64 72                    t0 = a0
  4267: 82 17 10                 a0 = u64 [sp + 0x10]
  4270: d6 72 07                 a0 = t0 mulhu a0
  4273: 98 77 0b                 a0 = a0 >> 0xb
  4276: 82 19 08                 a2 = u64 [sp + 0x8]
  4279: c0 97 0c                 i32 a5 = a0 * a2
  4282: c8 2c 06                 s1 = a5 + t0
  4285: 97 6c 30                 a5 = s1 << 0x30
  4288: 98 cc 32                 a5 = a5 >> 0x32
  4291: ca 4c 0c                 a5 = a5 * t2
  4294: 98 c3 11                 t1 = a5 >> 0x11
  4297: 98 cc 10                 a5 = a5 >> 0x10
  4300: 84 cc fe 07              a5 = a5 & 0x7fe
  4304: 96 39 9c                 a2 = t1 * 0xffffffffffffff9c
  4307: c8 69 09                 a2 = a2 + s1
  4310: 97 99 31                 a2 = a2 << 0x31
  4313: 98 99 30                 a2 = a2 >> 0x30
  4316: c8 bc 0c                 a5 = a5 + a4
  4319: 7c c6                    s1 = u8 [a5]
  4321: 7c cc 01                 a5 = u8 [a5 + 0x1]
  4324: c8 b9 09                 a2 = a2 + a4
  4327: 7c 95 01                 s0 = u8 [a2 + 0x1]
  4330: 7c 99                    a2 = u8 [a2]
  4332: 78 ac ff                 u8 [a3 + 0xffffffffffffffff] = a5
  4335: 78 a6 fe                 u8 [a3 + 0xfffffffffffffffe] = s1
  4338: 78 a5 01                 u8 [a3 + 0x1] = s0
  4341: 78 a9                    u8 [a3] = a2
  4343: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
  4346: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
  4349: ac 20 ac                 jump @302 if ra <u t0
      :                          @303
  4352: 54 17 63 3b              jump @305 if a0 <=u 99
      :                          @304
  4356: 97 79 30                 a2 = a0 << 0x30
  4359: 98 99 32                 a2 = a2 >> 0x32
  4362: 96 99 7b 14              a2 = a2 * 0x147b
  4366: 98 99 11                 a2 = a2 >> 0x11
  4369: 96 9a 9c                 a3 = a2 * 0xffffffffffffff9c
  4372: c8 a7 07                 a0 = a0 + a3
  4375: 97 77 31                 a0 = a0 << 0x31
  4378: 98 77 30                 a0 = a0 >> 0x30
  4381: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  4384: 33 0a b4 01 01           a3 = 0x101b4
  4389: c8 a7 07                 a0 = a0 + a3
  4392: 7c 7a 01                 a3 = u8 [a0 + 0x1]
  4395: 7c 77                    a0 = u8 [a0]
  4397: 95 1b 19                 a4 = sp + 0x19
  4400: c8 8b 0b                 a4 = a4 + a1
  4403: 78 ba 01                 u8 [a4 + 0x1] = a3
  4406: 78 b7                    u8 [a4] = a0
  4408: 64 97                    a0 = a2
  4410: 01                       fallthrough
      :                          @305
  4411: 55 17 0a 14              jump @307 if a0 >=u 10
      :                          @306
  4415: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  4418: 95 19 19                 a2 = sp + 0x19
  4421: c8 89 09                 a2 = a2 + a1
  4424: 83 77 30                 i32 a0 = a0 + 0x30
  4427: 78 97                    u8 [a2] = a0
  4429: 28 21                    jump @308
      :                          @307
  4431: 97 77 01                 a0 = a0 << 0x1
  4434: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  4437: 33 09 b4 01 01           a2 = 0x101b4
  4442: c8 97 07                 a0 = a0 + a2
  4445: 7c 79 01                 a2 = u8 [a0 + 0x1]
  4448: 7c 77                    a0 = u8 [a0]
  4450: 95 1a 19                 a3 = sp + 0x19
  4453: c8 8a 0a                 a3 = a3 + a1
  4456: 78 a9 01                 u8 [a3 + 0x1] = a2
  4459: 78 a7                    u8 [a3] = a0
  4461: 01                       fallthrough
      :                          @308
  4462: 95 1a 19                 a3 = sp + 0x19
  4465: c8 8a 0a                 a3 = a3 + a1
  4468: 9a 8b 27                 a4 = 0x27 - a1
  4471: 33 08 70 01 01           a1 = 0x10170
  4476: 82 17                    a0 = u64 [sp]
  4478: 33 09                    a2 = 0
  4480: 50 10 54 12              ra = 84, jump @310
      :                          @309 [@dyn 42]
  4484: 82 10 50                 ra = u64 [sp + 0x50]
  4487: 82 15 48                 s0 = u64 [sp + 0x48]
  4490: 82 16 40                 s1 = u64 [sp + 0x40]
  4493: 95 11 58                 sp = sp + 0x58
  4496: 32 00                    ret
      :                          @310
  4498: 95 11 98                 sp = sp + 0xffffffffffffff98
  4501: 7b 10 60                 u64 [sp + 0x60] = ra
  4504: 7b 15 58                 u64 [sp + 0x58] = s0
  4507: 7b 16 50                 u64 [sp + 0x50] = s1
  4510: 80 73 34                 t1 = u32 [a0 + 0x34]
  4513: 7b 1a 20                 u64 [sp + 0x20] = a3
  4516: 64 9c                    a5 = a2
  4518: 84 36 01                 s1 = t1 & 0x1
  4521: 33 02 2b                 t0 = 0x2b
  4524: 33 09 00 00 11           a2 = 0x110000
  4529: 84 3a 04                 a3 = t1 & 0x4
  4532: 7b 1b 28                 u64 [sp + 0x28] = a4
  4535: c8 b6 04                 t2 = s1 + a4
  4538: 7b 1c 30                 u64 [sp + 0x30] = a5
  4541: 52 0a 10                 jump @313 if a3 != 0
      :                          @311
  4544: 49 11 38                 u64 [sp + 56] = 0
  4547: 82 78                    a1 = u64 [a0]
  4549: 94 69 2b                 a2 = 0x2b if s1 != 0
  4552: 52 08 35                 jump @317 if a1 != 0
      :                          @312
  4555: 28 56                    jump @322
      :                          @313
  4557: 7b 18 38                 u64 [sp + 0x38] = a1
  4560: 33 09                    a2 = 0
  4562: 51 0c 1b                 jump @316 if a5 == 0
      :                          @314
  4565: 82 1b 38                 a4 = u64 [sp + 0x38]
  4568: 01                       fallthrough
      :                          @315
  4569: 7d b5                    s0 = i8 [a4]
  4571: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
  4574: 85 5a 01                 a3 = s0 ^ 0x1
  4577: c8 a9 09                 a2 = a2 + a3
  4580: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  4583: 95 bb 01                 a4 = a4 + 0x1
  4586: 52 0c ef                 jump @315 if a5 != 0
      :                          @316
  4589: c8 94 04                 t2 = t2 + a2
  4592: 33 09 00 00 11           a2 = 0x110000
  4597: 82 78                    a1 = u64 [a0]
  4599: db 62 09                 a2 = t0 if s1 != 0
  4602: 51 08 27                 jump @322 if a1 == 0
      :                          @317
  4605: 82 7a 08                 a3 = u64 [a0 + 0x8]
  4608: ae a4 21                 jump @322 if t2 >=u a3
      :                          @318
  4611: 84 38 08                 a1 = t1 & 0x8
  4614: 52 08 50                 jump @325 if a1 != 0
      :                          @319
  4617: 7c 76 38                 s1 = u8 [a0 + 0x38]
  4620: c9 4a 0a                 a3 = a3 - t2
  4623: 7b 19 18                 u64 [sp + 0x18] = a2
  4626: 5a 16 01 9d 00           jump @332 if s1 >s 1
      :                          @320
  4631: 52 06 aa 00              jump @334 if s1 != 0
      :                          @321
  4635: 7b 1a 10                 u64 [sp + 0x10] = a3
  4638: 28 a9 00                 jump @335
      :                          @322
  4641: 82 75 20                 s0 = u64 [a0 + 0x20]
  4644: 82 76 28                 s1 = u64 [a0 + 0x28]
  4647: 64 57                    a0 = s0
  4649: 64 68                    a1 = s1
  4651: 82 1a 38                 a3 = u64 [sp + 0x38]
  4654: 82 1b 30                 a4 = u64 [sp + 0x30]
  4657: 50 10 56 6c 01           ra = 86, jump @355
      :                          @323 [@dyn 43]
  4662: 33 08 01                 a1 = 0x1
  4665: 52 07 bb 00              jump @340 if a0 != 0
      :                          @324
  4669: 82 6c 18                 a5 = u64 [s1 + 0x18]
  4672: 64 57                    a0 = s0
  4674: 82 18 20                 a1 = u64 [sp + 0x20]
  4677: 82 19 28                 a2 = u64 [sp + 0x28]
  4680: 82 10 60                 ra = u64 [sp + 0x60]
  4683: 82 15 58                 s0 = u64 [sp + 0x58]
  4686: 82 16 50                 s1 = u64 [sp + 0x50]
  4689: 95 11 68                 sp = sp + 0x68
  4692: 32 0c                    jump [a5]
      :                          @325
  4694: 7b 1a 40                 u64 [sp + 0x40] = a3
  4697: 64 45                    s0 = t2
  4699: 81 78 30                 a1 = i32 [a0 + 0x30]
  4702: 7b 18 10                 u64 [sp + 0x10] = a1
  4705: 7c 7a 38                 a3 = u8 [a0 + 0x38]
  4708: 7b 1a 08                 u64 [sp + 0x8] = a3
  4711: 82 7a 20                 a3 = u64 [a0 + 0x20]
  4714: 82 78 28                 a1 = u64 [a0 + 0x28]
  4717: 48 17 30 30              u32 [a0 + 48] = 0x30
  4721: 7b 17                    u64 [sp] = a0
  4723: 46 17 38 01              u8 [a0 + 56] = 0x1
  4727: 7b 1a 48                 u64 [sp + 0x48] = a3
  4730: 64 a7                    a0 = a3
  4732: 64 86                    s1 = a1
  4734: 82 1a 38                 a3 = u64 [sp + 0x38]
  4737: 82 1b 30                 a4 = u64 [sp + 0x30]
  4740: 50 10 58 19 01           ra = 88, jump @355
      :                          @326 [@dyn 44]
  4745: 52 07 67                 jump @339 if a0 != 0
      :                          @327
  4748: 82 17 40                 a0 = u64 [sp + 0x40]
  4751: c9 57 05                 s0 = a0 - s0
  4754: 95 55 01                 s0 = s0 + 0x1
  4757: 01                       fallthrough
      :                          @328
  4758: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  4761: 51 05 c6 00              jump @350 if s0 == 0
      :                          @329
  4765: 82 69 20                 a2 = u64 [s1 + 0x20]
  4768: 33 08 30                 a1 = 0x30
  4771: 82 17 48                 a0 = u64 [sp + 0x48]
  4774: b4 90 01 5a              ra = 90, jump [a2]
      :                          @330 [@dyn 45]
  4778: 51 07 ec                 jump @328 if a0 == 0
      :                          @331
  4781: 28 43                    jump @339
      :                          @332
  4783: 52 16 02 12              jump @334 if s1 != 2
      :                          @333
  4787: 98 a6 01                 s1 = a3 >> 0x1
  4790: 95 a8 01                 a1 = a3 + 0x1
  4793: 98 88 01                 a1 = a1 >> 0x1
  4796: 7b 18 10                 u64 [sp + 0x10] = a1
  4799: 28 08                    jump @335
      :                          @334
  4801: 64 a6                    s1 = a3
  4803: 49 11 10                 u64 [sp + 16] = 0
  4806: 01                       fallthrough
      :                          @335
  4807: 82 78 20                 a1 = u64 [a0 + 0x20]
  4810: 7b 18 48                 u64 [sp + 0x48] = a1
  4813: 82 75 28                 s0 = u64 [a0 + 0x28]
  4816: 81 77 30                 a0 = i32 [a0 + 0x30]
  4819: 7b 17 40                 u64 [sp + 0x40] = a0
  4822: 95 66 01                 s1 = s1 + 0x1
  4825: 01                       fallthrough
      :                          @336
  4826: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  4829: 51 06 27                 jump @341 if s1 == 0
      :                          @337
  4832: 82 59 20                 a2 = u64 [s0 + 0x20]
  4835: 82 17 48                 a0 = u64 [sp + 0x48]
  4838: 82 18 40                 a1 = u64 [sp + 0x40]
  4841: b4 90 01 5c              ra = 92, jump [a2]
      :                          @338 [@dyn 46]
  4845: 51 07 ed                 jump @336 if a0 == 0
      :                          @339
  4848: 33 08 01                 a1 = 0x1
  4851: 01                       fallthrough
      :                          @340
  4852: 64 87                    a0 = a1
  4854: 82 10 60                 ra = u64 [sp + 0x60]
  4857: 82 15 58                 s0 = u64 [sp + 0x58]
  4860: 82 16 50                 s1 = u64 [sp + 0x50]
  4863: 95 11 68                 sp = sp + 0x68
  4866: 32 00                    ret
      :                          @341
  4868: 82 16 48                 s1 = u64 [sp + 0x48]
  4871: 64 67                    a0 = s1
  4873: 64 58                    a1 = s0
  4875: 82 19 18                 a2 = u64 [sp + 0x18]
  4878: 82 1a 38                 a3 = u64 [sp + 0x38]
  4881: 82 1b 30                 a4 = u64 [sp + 0x30]
  4884: 50 10 5e 89 00           ra = 94, jump @355
      :                          @342 [@dyn 47]
  4889: 33 08 01                 a1 = 0x1
  4892: 52 07 d8                 jump @340 if a0 != 0
      :                          @343
  4895: 82 5a 18                 a3 = u64 [s0 + 0x18]
  4898: 64 67                    a0 = s1
  4900: 82 18 20                 a1 = u64 [sp + 0x20]
  4903: 82 19 28                 a2 = u64 [sp + 0x28]
  4906: b4 a0 01 60              ra = 96, jump [a3]
      :                          @344 [@dyn 48]
  4910: 33 08 01                 a1 = 0x1
  4913: 52 07 c3                 jump @340 if a0 != 0
      :                          @345
  4916: 82 17 10                 a0 = u64 [sp + 0x10]
  4919: 9a 77                    a0 = -a0
  4921: 7b 17 38                 u64 [sp + 0x38] = a0
  4924: 33 06 ff                 s1 = 0xffffffffffffffff
  4927: 01                       fallthrough
      :                          @346
  4928: 82 17 38                 a0 = u64 [sp + 0x38]
  4931: c8 67 07                 a0 = a0 + s1
  4934: 51 17 ff 42              jump @353 if a0 == 4294967295
      :                          @347
  4938: 82 59 20                 a2 = u64 [s0 + 0x20]
  4941: 82 17 48                 a0 = u64 [sp + 0x48]
  4944: 82 18 40                 a1 = u64 [sp + 0x40]
  4947: b4 90 01 62              ra = 98, jump [a2]
      :                          @348 [@dyn 49]
  4951: 95 66 01                 s1 = s1 + 0x1
  4954: 51 07 e6                 jump @346 if a0 == 0
      :                          @349
  4957: 28 37                    jump @354
      :                          @350
  4959: 82 6a 18                 a3 = u64 [s1 + 0x18]
  4962: 82 17 48                 a0 = u64 [sp + 0x48]
  4965: 82 18 20                 a1 = u64 [sp + 0x20]
  4968: 82 19 28                 a2 = u64 [sp + 0x28]
  4971: b4 a0 01 64              ra = 100, jump [a3]
      :                          @351 [@dyn 50]
  4975: 33 08 01                 a1 = 0x1
  4978: 52 07 82                 jump @340 if a0 != 0
      :                          @352
  4981: 33 08                    a1 = 0
  4983: 82 16                    s1 = u64 [sp]
  4985: 82 17 10                 a0 = u64 [sp + 0x10]
  4988: 7a 67 30                 u32 [s1 + 0x30] = a0
  4991: 82 17 08                 a0 = u64 [sp + 0x8]
  4994: 78 67 38                 u8 [s1 + 0x38] = a0
  4997: 28 6f ff                 jump @340
      :                          @353
  5000: 82 16 10                 s1 = u64 [sp + 0x10]
  5003: 82 17 10                 a0 = u64 [sp + 0x10]
  5006: d8 76 08                 a1 = s1 <u a0
  5009: 28 63 ff                 jump @340
      :                          @354
  5012: 82 17 10                 a0 = u64 [sp + 0x10]
  5015: d8 76 08                 a1 = s1 <u a0
  5018: 28 5a ff                 jump @340
      :                          @355
  5021: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  5024: 7b 10 20                 u64 [sp + 0x20] = ra
  5027: 7b 15 18                 u64 [sp + 0x18] = s0
  5030: 7b 16 10                 u64 [sp + 0x10] = s1
  5033: 83 9c                    i32 a5 = a2 + 0
  5035: 33 02 00 00 11           t0 = 0x110000
  5040: 64 a6                    s1 = a3
  5042: 64 85                    s0 = a1
  5044: 64 7a                    a3 = a0
  5046: aa 2c 20                 jump @358 if a5 == t0
      :                          @356
  5049: 82 5c 20                 a5 = u64 [s0 + 0x20]
  5052: 64 a7                    a0 = a3
  5054: 64 98                    a1 = a2
  5056: 7b 1b 08                 u64 [sp + 0x8] = a4
  5059: 7b 1a                    u64 [sp] = a3
  5061: b4 c0 01 66              ra = 102, jump [a5]
      :                          @357 [@dyn 51]
  5065: 82 1a                    a3 = u64 [sp]
  5067: 82 1b 08                 a4 = u64 [sp + 0x8]
  5070: 64 78                    a1 = a0
  5072: 33 07 01                 a0 = 0x1
  5075: 52 08 20                 jump @361 if a1 != 0
      :                          @358
  5078: 51 06 1a                 jump @360 if s1 == 0
      :                          @359
  5081: 82 5c 18                 a5 = u64 [s0 + 0x18]
  5084: 64 a7                    a0 = a3
  5086: 64 68                    a1 = s1
  5088: 64 b9                    a2 = a4
  5090: 82 10 20                 ra = u64 [sp + 0x20]
  5093: 82 15 18                 s0 = u64 [sp + 0x18]
  5096: 82 16 10                 s1 = u64 [sp + 0x10]
  5099: 95 11 28                 sp = sp + 0x28
  5102: 32 0c                    jump [a5]
      :                          @360
  5104: 33 07                    a0 = 0
  5106: 01                       fallthrough
      :                          @361
  5107: 82 10 20                 ra = u64 [sp + 0x20]
  5110: 82 15 18                 s0 = u64 [sp + 0x18]
  5113: 82 16 10                 s1 = u64 [sp + 0x10]
  5116: 95 11 28                 sp = sp + 0x28
  5119: 32 00                    ret
      :                          @362
  5121: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  5125: 7b 10 80 00              u64 [sp + 0x80] = ra
  5129: 7b 15 78                 u64 [sp + 0x78] = s0
  5132: 7b 16 70                 u64 [sp + 0x70] = s1
  5135: 49 11 60 20              u64 [sp + 96] = 0x20
  5139: 33 0a 03                 a3 = 0x3
  5142: 78 1a 68                 u8 [sp + 0x68] = a3
  5145: 82 96 20                 s1 = u64 [a2 + 0x20]
  5148: 49 11 30                 u64 [sp + 48] = 0
  5151: 49 11 40                 u64 [sp + 64] = 0
  5154: 7b 17 50                 u64 [sp + 0x50] = a0
  5157: 7b 18 58                 u64 [sp + 0x58] = a1
  5160: 51 06 07 01              jump @384 if s1 == 0
      :                          @363
  5164: 82 97 28                 a0 = u64 [a2 + 0x28]
  5167: 51 07 74 01              jump @394 if a0 == 0
      :                          @364
  5171: 49 11 28                 u64 [sp + 40] = 0
  5174: 82 95                    s0 = u64 [a2]
  5176: 7b 19 08                 u64 [sp + 0x8] = a2
  5179: 82 98 10                 a1 = u64 [a2 + 0x10]
  5182: 7b 18 18                 u64 [sp + 0x18] = a1
  5185: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  5188: 97 88 03                 a1 = a1 << 0x3
  5191: 98 88 03                 a1 = a1 >> 0x3
  5194: 95 88 01                 a1 = a1 + 0x1
  5197: 7b 18                    u64 [sp] = a1
  5199: 95 55 08                 s0 = s0 + 0x8
  5202: 96 78 38                 a1 = a0 * 0x38
  5205: 95 66 18                 s1 = s1 + 0x18
  5208: 33 07 52                 a0 = 0x52
  5211: 7b 17 10                 u64 [sp + 0x10] = a0
  5214: 01                       fallthrough
      :                          @365
  5215: 7b 18 20                 u64 [sp + 0x20] = a1
  5218: 82 59                    a2 = u64 [s0]
  5220: 51 09 17                 jump @368 if a2 == 0
      :                          @366
  5223: 82 1a 58                 a3 = u64 [sp + 0x58]
  5226: 82 17 50                 a0 = u64 [sp + 0x50]
  5229: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  5232: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5235: b4 a0 01 68              ra = 104, jump [a3]
      :                          @367 [@dyn 52]
  5239: 52 07 51 01              jump @397 if a0 != 0
      :                          @368
  5243: 81 67 10                 a0 = i32 [s1 + 0x10]
  5246: 7a 17 60                 u32 [sp + 0x60] = a0
  5249: 7c 67 18                 a0 = u8 [s1 + 0x18]
  5252: 78 17 68                 u8 [sp + 0x68] = a0
  5255: 81 67 14                 a0 = i32 [s1 + 0x14]
  5258: 7a 17 64                 u32 [sp + 0x64] = a0
  5261: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  5264: 82 67                    a0 = u64 [s1]
  5266: 51 08 26                 jump @373 if a1 == 0
      :                          @369
  5269: 52 18 01 16              jump @371 if a1 != 1
      :                          @370
  5273: 97 77 04                 a0 = a0 << 0x4
  5276: 82 18 18                 a1 = u64 [sp + 0x18]
  5279: c8 87 07                 a0 = a0 + a1
  5282: 82 78 08                 a1 = u64 [a0 + 0x8]
  5285: 82 19 10                 a2 = u64 [sp + 0x10]
  5288: aa 98 07                 jump @372 if a1 == a2
      :                          @371
  5291: 33 08                    a1 = 0
  5293: 28 0f                    jump @374
      :                          @372
  5295: 82 77                    a0 = u64 [a0]
  5297: 82 77                    a0 = u64 [a0]
  5299: 33 08 01                 a1 = 0x1
  5302: 28 06                    jump @374
      :                          @373
  5304: 33 08 01                 a1 = 0x1
  5307: 01                       fallthrough
      :                          @374
  5308: 7b 18 30                 u64 [sp + 0x30] = a1
  5311: 7b 17 38                 u64 [sp + 0x38] = a0
  5314: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  5317: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  5320: 51 08 26                 jump @379 if a1 == 0
      :                          @375
  5323: 52 18 01 16              jump @377 if a1 != 1
      :                          @376
  5327: 97 77 04                 a0 = a0 << 0x4
  5330: 82 18 18                 a1 = u64 [sp + 0x18]
  5333: c8 87 07                 a0 = a0 + a1
  5336: 82 78 08                 a1 = u64 [a0 + 0x8]
  5339: 82 19 10                 a2 = u64 [sp + 0x10]
  5342: aa 98 07                 jump @378 if a1 == a2
      :                          @377
  5345: 33 08                    a1 = 0
  5347: 28 0f                    jump @380
      :                          @378
  5349: 82 77                    a0 = u64 [a0]
  5351: 82 77                    a0 = u64 [a0]
  5353: 33 08 01                 a1 = 0x1
  5356: 28 06                    jump @380
      :                          @379
  5358: 33 08 01                 a1 = 0x1
  5361: 01                       fallthrough
      :                          @380
  5362: 7b 18 40                 u64 [sp + 0x40] = a1
  5365: 7b 17 48                 u64 [sp + 0x48] = a0
  5368: 82 67 08                 a0 = u64 [s1 + 0x8]
  5371: 97 77 04                 a0 = a0 << 0x4
  5374: 82 18 18                 a1 = u64 [sp + 0x18]
  5377: c8 78 08                 a1 = a1 + a0
  5380: 82 87                    a0 = u64 [a1]
  5382: 82 89 08                 a2 = u64 [a1 + 0x8]
  5385: 95 18 30                 a1 = sp + 0x30
  5388: b4 90 01 6a              ra = 106, jump [a2]
      :                          @381 [@dyn 53]
  5392: 52 07 b8 00              jump @397 if a0 != 0
      :                          @382
  5396: 95 55 10                 s0 = s0 + 0x10
  5399: 82 18 20                 a1 = u64 [sp + 0x20]
  5402: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  5405: 95 66 38                 s1 = s1 + 0x38
  5408: 82 17 28                 a0 = u64 [sp + 0x28]
  5411: 95 77 01                 a0 = a0 + 0x1
  5414: 7b 17 28                 u64 [sp + 0x28] = a0
  5417: 52 08 36 ff              jump @365 if a1 != 0
      :                          @383
  5421: 28 69                    jump @392
      :                          @384
  5423: 82 97 18                 a0 = u64 [a2 + 0x18]
  5426: 51 07 71                 jump @394 if a0 == 0
      :                          @385
  5429: 82 95 10                 s0 = u64 [a2 + 0x10]
  5432: 33 0a                    a3 = 0
  5434: 97 78 04                 a1 = a0 << 0x4
  5437: c8 58 08                 a1 = a1 + s0
  5440: 7b 18 20                 u64 [sp + 0x20] = a1
  5443: 7b 19 08                 u64 [sp + 0x8] = a2
  5446: 82 96                    s1 = u64 [a2]
  5448: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  5451: 97 77 04                 a0 = a0 << 0x4
  5454: 98 77 04                 a0 = a0 >> 0x4
  5457: 95 77 01                 a0 = a0 + 0x1
  5460: 7b 17                    u64 [sp] = a0
  5462: 95 66 08                 s1 = s1 + 0x8
  5465: 01                       fallthrough
      :                          @386
  5466: 7b 1a 28                 u64 [sp + 0x28] = a3
  5469: 82 69                    a2 = u64 [s1]
  5471: 51 09 16                 jump @389 if a2 == 0
      :                          @387
  5474: 82 1a 58                 a3 = u64 [sp + 0x58]
  5477: 82 17 50                 a0 = u64 [sp + 0x50]
  5480: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  5483: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5486: b4 a0 01 6c              ra = 108, jump [a3]
      :                          @388 [@dyn 54]
  5490: 52 07 56                 jump @397 if a0 != 0
      :                          @389
  5493: 82 57                    a0 = u64 [s0]
  5495: 82 59 08                 a2 = u64 [s0 + 0x8]
  5498: 95 18 30                 a1 = sp + 0x30
  5501: b4 90 01 6e              ra = 110, jump [a2]
      :                          @390 [@dyn 55]
  5505: 52 07 47                 jump @397 if a0 != 0
      :                          @391
  5508: 95 66 10                 s1 = s1 + 0x10
  5511: 95 55 10                 s0 = s0 + 0x10
  5514: 82 1a 28                 a3 = u64 [sp + 0x28]
  5517: 95 aa 01                 a3 = a3 + 0x1
  5520: 82 17 20                 a0 = u64 [sp + 0x20]
  5523: ab 75 c7                 jump @386 if s0 != a0
      :                          @392
  5526: 82 19 08                 a2 = u64 [sp + 0x8]
  5529: 82 1a                    a3 = u64 [sp]
  5531: 82 97 08                 a0 = u64 [a2 + 0x8]
  5534: ac 7a 0d                 jump @395 if a3 <u a0
      :                          @393
  5537: 28 2c                    jump @398
      :                          @394
  5539: 33 0a                    a3 = 0
  5541: 82 97 08                 a0 = u64 [a2 + 0x8]
  5544: 54 07 25                 jump @398 if a0 <=u 0
      :                          @395
  5547: 82 97                    a0 = u64 [a2]
  5549: 97 a8 04                 a1 = a3 << 0x4
  5552: c8 87 09                 a2 = a0 + a1
  5555: 82 1a 58                 a3 = u64 [sp + 0x58]
  5558: 82 17 50                 a0 = u64 [sp + 0x50]
  5561: 82 98                    a1 = u64 [a2]
  5563: 82 99 08                 a2 = u64 [a2 + 0x8]
  5566: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5569: b4 a0 01 70              ra = 112, jump [a3]
      :                          @396 [@dyn 56]
  5573: 51 07 08                 jump @398 if a0 == 0
      :                          @397
  5576: 33 07 01                 a0 = 0x1
  5579: 28 05                    jump @399
      :                          @398
  5581: 33 07                    a0 = 0
  5583: 01                       fallthrough
      :                          @399
  5584: 82 10 80 00              ra = u64 [sp + 0x80]
  5588: 82 15 78                 s0 = u64 [sp + 0x78]
  5591: 82 16 70                 s1 = u64 [sp + 0x70]
  5594: 95 11 88 00              sp = sp + 0x88
  5598: 32 00                    ret
      :                          @400 [@dyn 57]
  5600: 32 00                    ret
      :                          @401 [@dyn 58]
  5602: 95 11 80                 sp = sp + 0xffffffffffffff80
  5605: 7b 10 78                 u64 [sp + 0x78] = ra
  5608: 7b 15 70                 u64 [sp + 0x70] = s0
  5611: 7b 16 68                 u64 [sp + 0x68] = s1
  5614: 64 92                    t0 = a2
  5616: 33 00                    ra = 0
  5618: 33 0b                    a4 = 0
  5620: 33 05                    s0 = 0
  5622: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
  5632: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
  5638: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
  5648: 82 79 10                 a2 = u64 [a0 + 0x10]
  5651: 7b 19 48                 u64 [sp + 0x48] = a2
  5654: 82 79                    a2 = u64 [a0]
  5656: 7b 19 38                 u64 [sp + 0x38] = a2
  5659: 82 77 08                 a0 = u64 [a0 + 0x8]
  5662: 7b 17 30                 u64 [sp + 0x30] = a0
  5665: 33 07 a8 01 01           a0 = 0x101a8
  5670: 7b 17 08                 u64 [sp + 0x8] = a0
  5673: 3a 07 10 10 03           a0 = u64 [0x31010]
  5678: 7b 17 60                 u64 [sp + 0x60] = a0
  5681: 7b 18 58                 u64 [sp + 0x58] = a1
  5684: 95 88 08                 a1 = a1 + 0x8
  5687: 7b 18                    u64 [sp] = a1
  5689: 33 0c 0a                 a5 = 0xa
  5692: 7b 12 20                 u64 [sp + 0x20] = t0
  5695: 7b 13 18                 u64 [sp + 0x18] = t1
  5698: 7b 14 10                 u64 [sp + 0x10] = t2
  5701: 28 3a                    jump @405
      :                          @402
  5703: 64 06                    s1 = ra
  5705: c8 89 07                 a0 = a2 + a1
  5708: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
  5711: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  5714: 88 77 01                 a0 = a0 <u 0x1
  5717: 01                       fallthrough
      :                          @403
  5718: 82 1a 48                 a3 = u64 [sp + 0x48]
  5721: 78 a7                    u8 [a3] = a0
  5723: 82 17 30                 a0 = u64 [sp + 0x30]
  5726: 82 7a 18                 a3 = u64 [a0 + 0x18]
  5729: 82 17 38                 a0 = u64 [sp + 0x38]
  5732: b4 a0 01 76              ra = 118, jump [a3]
      :                          @404 [@dyn 59]
  5736: 64 5b                    a4 = s0
  5738: 82 12 20                 t0 = u64 [sp + 0x20]
  5741: 82 13 18                 t1 = u64 [sp + 0x18]
  5744: 82 14 10                 t2 = u64 [sp + 0x10]
  5747: 64 60                    ra = s1
  5749: 33 0c 0a                 a5 = 0xa
  5752: 82 15 40                 s0 = u64 [sp + 0x40]
  5755: 52 07 63 01              jump @446 if a0 != 0
      :                          @405
  5759: 84 57 ff 00              a0 = s0 & 0xff
  5763: 52 07 57 01              jump @445 if a0 != 0
      :                          @406
  5767: 7b 1b 50                 u64 [sp + 0x50] = a4
  5770: ae 02 0a                 jump @409 if t0 >=u ra
      :                          @407
  5773: 28 ef 00                 jump @436
      :                          @408
  5776: ac 02 ec 00              jump @436 if t0 <u ra
      :                          @409
  5780: c9 02 08                 a1 = t0 - ra
  5783: 82 16 58                 s1 = u64 [sp + 0x58]
  5786: c8 06 06                 s1 = s1 + ra
  5789: 55 18 10 1d              jump @415 if a1 >=u 16
      :                          @410
  5793: aa 02 d8 00              jump @435 if t0 == ra
      :                          @411
  5797: 33 0a                    a3 = 0
  5799: 01                       fallthrough
      :                          @412
  5800: c8 a6 07                 a0 = s1 + a3
  5803: 7c 77                    a0 = u8 [a0]
  5805: aa c7 a5 00              jump @430 if a0 == a5
      :                          @413
  5809: 95 aa 01                 a3 = a3 + 0x1
  5812: ab a8 f4                 jump @412 if a1 != a3
      :                          @414
  5815: 28 c2 00                 jump @435
      :                          @415
  5818: 95 69 07                 a2 = s1 + 0x7
  5821: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
  5824: c9 6a 07                 a0 = a3 - s1
  5827: d3 6a 0a                 a3 = a3 ^ s1
  5830: 88 aa 01                 a3 = a3 <u 0x1
  5833: 88 7b 01                 a4 = a0 <u 0x1
  5836: d4 ba 0a                 a3 = a3 | a4
  5839: 51 0a 45                 jump @421 if a3 == 0
      :                          @416
  5842: 33 07                    a0 = 0
  5844: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  5847: 82 1b                    a4 = u64 [sp]
  5849: c8 0b 0b                 a4 = a4 + ra
  5852: 28 08                    jump @418
      :                          @417
  5854: 82 1b                    a4 = u64 [sp]
  5856: c8 0b 0b                 a4 = a4 + ra
  5859: 01                       fallthrough
      :                          @418
  5860: c8 76 0c                 a5 = s1 + a0
  5863: 82 cc                    a5 = u64 [a5]
  5865: c8 7b 09                 a2 = a4 + a0
  5868: 82 99                    a2 = u64 [a2]
  5870: d3 4c 05                 s0 = a5 ^ t2
  5873: c8 35 05                 s0 = s0 + t1
  5876: e0 c5 0c                 a5 = s0 & ~a5
  5879: d3 49 05                 s0 = a2 ^ t2
  5882: c8 35 05                 s0 = s0 + t1
  5885: e0 95 09                 a2 = s0 & ~a2
  5888: d4 c9 09                 a2 = a2 | a5
  5891: 82 1c 60                 a5 = u64 [sp + 0x60]
  5894: d2 c9 09                 a2 = a2 & a5
  5897: 52 09 1f                 jump @424 if a2 != 0
      :                          @419
  5900: 95 77 10                 a0 = a0 + 0x10
  5903: ae 7a d5                 jump @418 if a3 >=u a0
      :                          @420
  5906: 28 16                    jump @424
      :                          @421
  5908: c8 a6 0b                 a4 = s1 + a3
  5911: 7c bb                    a4 = u8 [a4]
  5913: aa cb 51                 jump @433 if a4 == a5
      :                          @422
  5916: 95 aa 01                 a3 = a3 + 0x1
  5919: ab a7 f5                 jump @421 if a0 != a3
      :                          @423
  5922: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  5925: ae 7a b9                 jump @417 if a3 >=u a0
      :                          @424
  5928: aa 87 9a 00              jump @442 if a0 == a1
      :                          @425
  5932: 33 0a                    a3 = 0
  5934: c8 76 06                 s1 = s1 + a0
  5937: c9 72 08                 a1 = t0 - a0
  5940: c9 08 08                 a1 = a1 - ra
  5943: 33 0c 0a                 a5 = 0xa
  5946: 82 1b 50                 a4 = u64 [sp + 0x50]
  5949: 01                       fallthrough
      :                          @426
  5950: c8 a6 09                 a2 = s1 + a3
  5953: 7c 99                    a2 = u8 [a2]
  5955: aa c9 0b                 jump @429 if a2 == a5
      :                          @427
  5958: 95 aa 01                 a3 = a3 + 0x1
  5961: ab a8 f5                 jump @426 if a1 != a3
      :                          @428
  5964: 28 2d                    jump @435
      :                          @429
  5966: c8 7a 0a                 a3 = a3 + a0
  5969: 01                       fallthrough
      :                          @430
  5970: c8 0a 0a                 a3 = a3 + ra
  5973: 95 a0 01                 ra = a3 + 0x1
  5976: ae 2a 38 ff              jump @408 if a3 >=u t0
      :                          @431
  5980: 82 17 58                 a0 = u64 [sp + 0x58]
  5983: c8 7a 0a                 a3 = a3 + a0
  5986: 7c a7                    a0 = u8 [a3]
  5988: ab c7 2c ff              jump @408 if a0 != a5
      :                          @432
  5992: 28 61                    jump @443
      :                          @433
  5994: 82 1b 50                 a4 = u64 [sp + 0x50]
  5997: c8 0a 0a                 a3 = a3 + ra
  6000: 95 a0 01                 ra = a3 + 0x1
  6003: ac 2a e9                 jump @431 if a3 <u t0
      :                          @434
  6006: 28 1a ff                 jump @408
      :                          @435
  6009: 64 20                    ra = t0
  6011: 01                       fallthrough
      :                          @436
  6012: 49 11 40 01              u64 [sp + 64] = 0x1
  6016: 64 b5                    s0 = a4
  6018: 64 26                    s1 = t0
  6020: aa 2b 56                 jump @445 if a4 == t0
      :                          @437
  6023: 82 17 48                 a0 = u64 [sp + 0x48]
  6026: 7c 77                    a0 = u8 [a0]
  6028: 51 07 22                 jump @440 if a0 == 0
      :                          @438
  6031: 82 17 30                 a0 = u64 [sp + 0x30]
  6034: 82 7a 18                 a3 = u64 [a0 + 0x18]
  6037: 33 09 04                 a2 = 0x4
  6040: 82 17 38                 a0 = u64 [sp + 0x38]
  6043: 82 18 08                 a1 = u64 [sp + 0x8]
  6046: 7b 10 28                 u64 [sp + 0x28] = ra
  6049: b4 a0 01 78              ra = 120, jump [a3]
      :                          @439 [@dyn 60]
  6053: 82 1b 50                 a4 = u64 [sp + 0x50]
  6056: 82 10 28                 ra = u64 [sp + 0x28]
  6059: 52 07 33                 jump @446 if a0 != 0
      :                          @440
  6062: c9 b6 09                 a2 = s1 - a4
  6065: 82 18 58                 a1 = u64 [sp + 0x58]
  6068: c8 b8 08                 a1 = a1 + a4
  6071: ab b6 90 fe              jump @402 if s1 != a4
      :                          @441
  6075: 64 06                    s1 = ra
  6077: 33 07                    a0 = 0
  6079: 28 97 fe                 jump @403
      :                          @442
  6082: 64 20                    ra = t0
  6084: 82 1b 50                 a4 = u64 [sp + 0x50]
  6087: 28 b5                    jump @436
      :                          @443
  6089: 49 11 40                 u64 [sp + 64] = 0
  6092: 64 05                    s0 = ra
  6094: 64 06                    s1 = ra
  6096: 82 17 48                 a0 = u64 [sp + 0x48]
  6099: 7c 77                    a0 = u8 [a0]
  6101: 52 07 ba                 jump @438 if a0 != 0
      :                          @444
  6104: 28 d6                    jump @440
      :                          @445
  6106: 33 07                    a0 = 0
  6108: 28 06                    jump @447
      :                          @446
  6110: 33 07 01                 a0 = 0x1
  6113: 01                       fallthrough
      :                          @447
  6114: 82 10 78                 ra = u64 [sp + 0x78]
  6117: 82 15 70                 s0 = u64 [sp + 0x70]
  6120: 82 16 68                 s1 = u64 [sp + 0x68]
  6123: 95 11 80 00              sp = sp + 0x80
  6127: 32 00                    ret
      :                          @448 [@dyn 61]
  6129: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  6132: 7b 10 20                 u64 [sp + 0x20] = ra
  6135: 7b 15 18                 u64 [sp + 0x18] = s0
  6138: 7b 16 10                 u64 [sp + 0x10] = s1
  6141: 82 75 10                 s0 = u64 [a0 + 0x10]
  6144: 7c 59                    a2 = u8 [s0]
  6146: 82 7b                    a4 = u64 [a0]
  6148: 82 76 08                 s1 = u64 [a0 + 0x8]
  6151: 51 09 32                 jump @452 if a2 == 0
      :                          @449
  6154: 82 6a 18                 a3 = u64 [s1 + 0x18]
  6157: 7b 18 08                 u64 [sp + 0x8] = a1
  6160: 33 08 a8 01 01           a1 = 0x101a8
  6165: 33 09 04                 a2 = 0x4
  6168: 64 b7                    a0 = a4
  6170: 7b 1b                    u64 [sp] = a4
  6172: b4 a0 01 7c              ra = 124, jump [a3]
      :                          @450 [@dyn 62]
  6176: 82 18 08                 a1 = u64 [sp + 0x8]
  6179: 82 1b                    a4 = u64 [sp]
  6181: 51 07 14                 jump @452 if a0 == 0
      :                          @451
  6184: 33 07 01                 a0 = 0x1
  6187: 82 10 20                 ra = u64 [sp + 0x20]
  6190: 82 15 18                 s0 = u64 [sp + 0x18]
  6193: 82 16 10                 s1 = u64 [sp + 0x10]
  6196: 95 11 28                 sp = sp + 0x28
  6199: 32 00                    ret
      :                          @452
  6201: 83 87                    i32 a0 = a1 + 0
  6203: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  6206: 88 77 01                 a0 = a0 <u 0x1
  6209: 78 57                    u8 [s0] = a0
  6211: 82 6c 20                 a5 = u64 [s1 + 0x20]
  6214: 64 b7                    a0 = a4
  6216: 82 10 20                 ra = u64 [sp + 0x20]
  6219: 82 15 18                 s0 = u64 [sp + 0x18]
  6222: 82 16 10                 s1 = u64 [sp + 0x10]
  6225: 95 11 28                 sp = sp + 0x28
  6228: 32 0c                    jump [a5]
      :                          @453 [@dyn 63]
  6230: 64 8a                    a3 = a1
  6232: 33 08 78 01 01           a1 = 0x10178
  6237: 64 a9                    a2 = a3
  6239: 28 a2 fb                 jump @362
      :                          @454
  6242: 95 11 70 ff              sp = sp + 0xffffffffffffff70
  6246: 7b 10 88 00              u64 [sp + 0x88] = ra
  6250: 7b 15 80 00              u64 [sp + 0x80] = s0
  6254: 7b 16 78                 u64 [sp + 0x78] = s1
  6257: 64 75                    s0 = a0
  6259: 7c 77 08                 a0 = u8 [a0 + 0x8]
  6262: 64 8b                    a4 = a1
  6264: 33 08 01                 a1 = 0x1
  6267: 33 06 01                 s1 = 0x1
  6270: 51 07 1d                 jump @456 if a0 == 0
      :                          @455
  6273: 78 56 08                 u8 [s0 + 0x8] = s1
  6276: 46 15 09 01              u8 [s0 + 9] = 0x1
  6280: 64 57                    a0 = s0
  6282: 82 10 88 00              ra = u64 [sp + 0x88]
  6286: 82 15 80 00              s0 = u64 [sp + 0x80]
  6290: 82 16 78                 s1 = u64 [sp + 0x78]
  6293: 95 11 90 00              sp = sp + 0x90
  6297: 32 00                    ret
      :                          @456
  6299: 64 9a                    a3 = a2
  6301: 82 5c                    a5 = u64 [s0]
  6303: 80 c7 34                 a0 = u32 [a5 + 0x34]
  6306: 7c 58 09                 a1 = u8 [s0 + 0x9]
  6309: 84 79 04                 a2 = a0 & 0x4
  6312: 52 09 45                 jump @462 if a2 != 0
      :                          @457
  6315: 51 08 32                 jump @460 if a1 == 0
      :                          @458
  6318: 82 c8 28                 a1 = u64 [a5 + 0x28]
  6321: 82 c7 20                 a0 = u64 [a5 + 0x20]
  6324: 82 83 18                 t1 = u64 [a1 + 0x18]
  6327: 33 08 ac 01 01           a1 = 0x101ac
  6332: 33 09 02                 a2 = 0x2
  6335: 64 a6                    s1 = a3
  6337: 7b 1b 10                 u64 [sp + 0x10] = a4
  6340: 7b 1c 08                 u64 [sp + 0x8] = a5
  6343: b4 30 02 80 00           ra = 128, jump [t1]
      :                          @459 [@dyn 64]
  6348: 82 1c 08                 a5 = u64 [sp + 0x8]
  6351: 82 1b 10                 a4 = u64 [sp + 0x10]
  6354: 64 6a                    a3 = s1
  6356: 33 08 01                 a1 = 0x1
  6359: 33 06 01                 s1 = 0x1
  6362: 52 07 a7                 jump @455 if a0 != 0
      :                          @460
  6365: 64 b7                    a0 = a4
  6367: 64 c8                    a1 = a5
  6369: b4 a0 02 82 00           ra = 130, jump [a3]
      :                          @461 [@dyn 65]
  6374: 33 08 01                 a1 = 0x1
  6377: 64 76                    s1 = a0
  6379: 28 96                    jump @455
      :                          @462
  6381: 52 08 37                 jump @466 if a1 != 0
      :                          @463
  6384: 82 c8 28                 a1 = u64 [a5 + 0x28]
  6387: 82 c7 20                 a0 = u64 [a5 + 0x20]
  6390: 82 83 18                 t1 = u64 [a1 + 0x18]
  6393: 33 08 b0 01 01           a1 = 0x101b0
  6398: 33 09 01                 a2 = 0x1
  6401: 33 06 01                 s1 = 0x1
  6404: 7b 1a                    u64 [sp] = a3
  6406: 7b 1b 10                 u64 [sp + 0x10] = a4
  6409: 7b 1c 08                 u64 [sp + 0x8] = a5
  6412: b4 30 02 84 00           ra = 132, jump [t1]
      :                          @464 [@dyn 66]
  6417: 82 1c 08                 a5 = u64 [sp + 0x8]
  6420: 82 1b 10                 a4 = u64 [sp + 0x10]
  6423: 82 1a                    a3 = u64 [sp]
  6425: 33 08 01                 a1 = 0x1
  6428: 52 07 65 ff              jump @455 if a0 != 0
      :                          @465
  6432: 81 c7 34                 a0 = i32 [a5 + 0x34]
  6435: 01                       fallthrough
      :                          @466
  6436: 33 06 01                 s1 = 0x1
  6439: 78 16 37                 u8 [sp + 0x37] = s1
  6442: 82 c8 20                 a1 = u64 [a5 + 0x20]
  6445: 82 c9 28                 a2 = u64 [a5 + 0x28]
  6448: 7b 18 18                 u64 [sp + 0x18] = a1
  6451: 7b 19 20                 u64 [sp + 0x20] = a2
  6454: 95 18 37                 a1 = sp + 0x37
  6457: 7b 18 28                 u64 [sp + 0x28] = a1
  6460: 81 c8 30                 a1 = i32 [a5 + 0x30]
  6463: 7c c9 38                 a2 = u8 [a5 + 0x38]
  6466: 82 c3                    t1 = u64 [a5]
  6468: 82 c4 08                 t2 = u64 [a5 + 0x8]
  6471: 82 c0 10                 ra = u64 [a5 + 0x10]
  6474: 82 c2 18                 t0 = u64 [a5 + 0x18]
  6477: 7a 17 6c                 u32 [sp + 0x6c] = a0
  6480: 7a 18 68                 u32 [sp + 0x68] = a1
  6483: 78 19 70                 u8 [sp + 0x70] = a2
  6486: 7b 13 38                 u64 [sp + 0x38] = t1
  6489: 7b 14 40                 u64 [sp + 0x40] = t2
  6492: 7b 10 48                 u64 [sp + 0x48] = ra
  6495: 7b 12 50                 u64 [sp + 0x50] = t0
  6498: 95 17 18                 a0 = sp + 0x18
  6501: 7b 17 58                 u64 [sp + 0x58] = a0
  6504: 33 07 78 01 01           a0 = 0x10178
  6509: 7b 17 60                 u64 [sp + 0x60] = a0
  6512: 95 18 38                 a1 = sp + 0x38
  6515: 64 b7                    a0 = a4
  6517: b4 a0 02 86 00           ra = 134, jump [a3]
      :                          @467 [@dyn 67]
  6522: 52 07 21                 jump @470 if a0 != 0
      :                          @468
  6525: 82 18 60                 a1 = u64 [sp + 0x60]
  6528: 82 17 58                 a0 = u64 [sp + 0x58]
  6531: 82 8a 18                 a3 = u64 [a1 + 0x18]
  6534: 33 08 ae 01 01           a1 = 0x101ae
  6539: 33 09 02                 a2 = 0x2
  6542: b4 a0 02 88 00           ra = 136, jump [a3]
      :                          @469 [@dyn 68]
  6547: 64 76                    s1 = a0
  6549: 33 08 01                 a1 = 0x1
  6552: 28 e9 fe                 jump @455
      :                          @470
  6555: 33 08 01                 a1 = 0x1
  6558: 28 e3 fe                 jump @455
      :                          @471
  6561: 51 08 9b 00              jump @492 if a1 == 0
      :                          @472
  6565: 64 79                    a2 = a0
  6567: 7c 77                    a0 = u8 [a0]
  6569: 51 07 91 00              jump @491 if a0 == 0
      :                          @473
  6573: 51 27 ff 00 90 00        jump @493 if a0 == 255
      :                          @474
  6579: 6c 7a                    a3 = sext.b a0
  6581: 57 0a 09                 jump @476 if a3 <s 0
      :                          @475
  6584: 33 0a                    a3 = 0
  6586: 33 08                    a1 = 0
  6588: 28 73                    jump @490
      :                          @476
  6590: 55 27 c0 00 0d           jump @478 if a0 >=u 192
      :                          @477
  6595: 33 0a 01                 a3 = 0x1
  6598: 33 0b 80                 a4 = 0xffffffffffffff80
  6601: 28 4a                    jump @487
      :                          @478
  6603: 55 27 e0 00 0e           jump @480 if a0 >=u 224
      :                          @479
  6608: 33 0a 02                 a3 = 0x2
  6611: 33 0b 40 ff              a4 = 0xffffffffffffff40
  6615: 28 3c                    jump @487
      :                          @480
  6617: 55 27 f0 00 0e           jump @482 if a0 >=u 240
      :                          @481
  6622: 33 0a 03                 a3 = 0x3
  6625: 33 0b 20 ff              a4 = 0xffffffffffffff20
  6629: 28 2e                    jump @487
      :                          @482
  6631: 55 27 f8 00 0e           jump @484 if a0 >=u 248
      :                          @483
  6636: 33 0a 04                 a3 = 0x4
  6639: 33 0b 10 ff              a4 = 0xffffffffffffff10
  6643: 28 20                    jump @487
      :                          @484
  6645: 55 27 fc 00 0e           jump @486 if a0 >=u 252
      :                          @485
  6650: 33 0a 05                 a3 = 0x5
  6653: 33 0b 08 ff              a4 = 0xffffffffffffff08
  6657: 28 12                    jump @487
      :                          @486
  6659: 88 7a fe 00              a3 = a0 <u 0xfe
  6663: 33 0b 04 ff              a4 = 0xffffffffffffff04
  6667: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  6671: 85 aa 07                 a3 = a3 ^ 0x7
  6674: 01                       fallthrough
      :                          @487
  6675: ae 8a 2b                 jump @494 if a3 >=u a1
      :                          @488
  6678: 33 08                    a1 = 0
  6680: c8 b7 07                 a0 = a0 + a4
  6683: 64 ab                    a4 = a3
  6685: 01                       fallthrough
      :                          @489
  6686: c8 b9 0c                 a5 = a2 + a4
  6689: 7c cc                    a5 = u8 [a5]
  6691: 97 88 08                 a1 = a1 << 0x8
  6694: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  6697: d4 c8 08                 a1 = a1 | a5
  6700: 52 0b f2                 jump @489 if a4 != 0
      :                          @490
  6703: 8a a9 03                 i32 a2 = a3 << 0x3
  6706: cf 97 07                 a0 = a0 << a2
  6709: c8 87 07                 a0 = a0 + a1
  6712: 32 00                    ret
      :                          @491
  6714: 32 00                    ret
      :                          @492
  6716: 00                       trap
      :                          @493
  6717: 00                       trap
      :                          @494
  6718: 00                       trap
      :                          @495 [@dyn 69]
  6719: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  6722: 7b 10 28                 u64 [sp + 0x28] = ra
  6725: 7b 15 20                 u64 [sp + 0x20] = s0
  6728: 7b 16 18                 u64 [sp + 0x18] = s1
  6731: 64 86                    s1 = a1
  6733: 82 88 28                 a1 = u64 [a1 + 0x28]
  6736: 82 6a 20                 a3 = u64 [s1 + 0x20]
  6739: 82 8b 18                 a4 = u64 [a1 + 0x18]
  6742: 64 75                    s0 = a0
  6744: 33 08 70 01 01           a1 = 0x10170
  6749: 33 09 01                 a2 = 0x1
  6752: 64 a7                    a0 = a3
  6754: b4 b0 02 8c 00           ra = 140, jump [a4]
      :                          @496 [@dyn 70]
  6759: 7b 16                    u64 [sp] = s1
  6761: 78 17 08                 u8 [sp + 0x8] = a0
  6764: 46 11 09                 u8 [sp + 9] = 0
  6767: 7b 15 10                 u64 [sp + 0x10] = s0
  6770: 33 09 92 00              a2 = 0x92
  6774: 64 17                    a0 = sp
  6776: 95 18 10                 a1 = sp + 0x10
  6779: 50 20 8e 00 e7 fd        ra = 142, jump @454
      :                          @497 [@dyn 71]
  6785: 33 07 01                 a0 = 0x1
  6788: 7c 18 08                 a1 = u8 [sp + 0x8]
  6791: 52 08 1b                 jump @499 if a1 != 0
      :                          @498
  6794: 82 17                    a0 = u64 [sp]
  6796: 82 78 28                 a1 = u64 [a0 + 0x28]
  6799: 82 77 20                 a0 = u64 [a0 + 0x20]
  6802: 82 8a 18                 a3 = u64 [a1 + 0x18]
  6805: 33 08 b1 01 01           a1 = 0x101b1
  6810: 33 09 01                 a2 = 0x1
  6813: b4 a0 02 90 00           ra = 144, jump [a3]
      :                          @499 [@dyn 72]
  6818: 82 10 28                 ra = u64 [sp + 0x28]
  6821: 82 15 20                 s0 = u64 [sp + 0x20]
  6824: 82 16 18                 s1 = u64 [sp + 0x18]
  6827: 95 11 30                 sp = sp + 0x30
  6830: 32 00                    ret
      :                          @500 [@dyn 73]
  6832: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  6836: 7b 10 80 00              u64 [sp + 0x80] = ra
  6840: 80 89 34                 a2 = u32 [a1 + 0x34]
  6843: 82 77                    a0 = u64 [a0]
  6845: 84 9a 10                 a3 = a2 & 0x10
  6848: 52 0a 16                 jump @503 if a3 != 0
      :                          @501
  6851: 84 99 20                 a2 = a2 & 0x20
  6854: 52 09 41                 jump @506 if a2 != 0
      :                          @502
  6857: 7c 77                    a0 = u8 [a0]
  6859: 82 10 80 00              ra = u64 [sp + 0x80]
  6863: 95 11 88 00              sp = sp + 0x88
  6867: 28 98 f5                 jump @300
      :                          @503
  6870: 7c 77                    a0 = u8 [a0]
  6872: 33 0b 81 00              a4 = 0x81
  6876: 95 19 7f                 a2 = sp + 0x7f
  6879: 33 02 57                 t0 = 0x57
  6882: 01                       fallthrough
      :                          @504
  6883: 64 bc                    a5 = a4
  6885: 84 7b 0f                 a4 = a0 & 0xf
  6888: 97 77 38                 a0 = a0 << 0x38
  6891: 98 77 3c                 a0 = a0 >> 0x3c
  6894: 88 b3 0a                 t1 = a4 <u 0xa
  6897: 33 0a 30                 a3 = 0x30
  6900: da 32 0a                 a3 = t0 if t1 == 0
  6903: be ba 0a                 i32 a3 = a3 + a4
  6906: 78 9a                    u8 [a2] = a3
  6908: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  6911: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
  6914: 52 07 e1                 jump @504 if a0 != 0
      :                          @505
  6917: 28 31                    jump @508
      :                          @506
  6919: 7c 77                    a0 = u8 [a0]
  6921: 33 0b 81 00              a4 = 0x81
  6925: 95 19 7f                 a2 = sp + 0x7f
  6928: 33 02 37                 t0 = 0x37
  6931: 01                       fallthrough
      :                          @507
  6932: 64 bc                    a5 = a4
  6934: 84 7b 0f                 a4 = a0 & 0xf
  6937: 97 77 38                 a0 = a0 << 0x38
  6940: 98 77 3c                 a0 = a0 >> 0x3c
  6943: 88 b3 0a                 t1 = a4 <u 0xa
  6946: 33 0a 30                 a3 = 0x30
  6949: da 32 0a                 a3 = t0 if t1 == 0
  6952: be ba 0a                 i32 a3 = a3 + a4
  6955: 78 9a                    u8 [a2] = a3
  6957: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  6960: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
  6963: 52 07 e1                 jump @507 if a0 != 0
      :                          @508
  6966: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
  6969: 56 27 80 00 28           jump @511 if a0 >u 128
      :                          @509
  6974: 9a bb 81 00              a4 = 0x81 - a4
  6978: 64 1a                    a3 = sp
  6980: c8 7a 0a                 a3 = a3 + a0
  6983: 33 09 02                 a2 = 0x2
  6986: 64 87                    a0 = a1
  6988: 33 08 b2 01 01           a1 = 0x101b2
  6993: 50 20 94 00 41 f6        ra = 148, jump @310
      :                          @510 [@dyn 74]
  6999: 82 10 80 00              ra = u64 [sp + 0x80]
  7003: 95 11 88 00              sp = sp + 0x88
  7007: 32 00                    ret
      :                          @511
  7009: 00                       trap
