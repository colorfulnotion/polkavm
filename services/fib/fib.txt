// RO data = 648/648 bytes
// RW data = 16/4176 bytes
// Stack size = 8192 bytes
// RO data = [70, 73, 66, 32, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 58, 32, 116, 105, 109, 101, 115, 108, 111, 116, 61, 32, 115, 101, 114, 118, 105, 99, 101, 95, 105, 110, 100, 101, 120, 61, 32, 115, 101, 110, 100, 101, 114, 61, 32, 97, 109, 111, 117, 110, 116, 61, 32, 114, 101, 99, 101, 105, 118, 101, 114, 61, 32, 109, 101, 109, 111, 61, 32, 103, 97, 115, 95, 108, 105, 109, 105, 116, 61, 70, 73, 66, 32, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 32, 103, 97, 115, 58, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 52, 41, 0, 0, 0, 0, 0, 0, 0, 91, 32, 32, 32, 32, 44, 32, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 119, 114, 105, 116, 101, 95, 114, 101, 115, 117, 108, 116, 32, 107, 101, 121, 61, 44, 32, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 26, 0, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 41, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 57, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 49, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 67, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 73, 0, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 84, 0, 1, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 109, 0, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 56, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 58, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 106, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 108, 0, 0, 0, 0, 0, 0, 0, 114, 0, 0, 0, 0, 0, 0, 0, 118, 0, 0, 0, 0, 0, 0, 0, 93, 1, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 110, 1, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0]
// RW data = [75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 2218
// Code size = 6552 bytes

      :                          @0
     0: 28 d0 02 00 00           jump @52
      :                          @1
     5: 28 26 03 00 00           jump @57
      :                          @2
    10: 28 ec 04                 jump @113
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 80 89 34                 a2 = u32 [a1 + 0x34]
    24: 82 77                    a0 = u64 [a0]
    26: 84 9a 10                 a3 = a2 & 0x10
    29: 52 0a 16                 jump @6 if a3 != 0
      :                          @4
    32: 84 99 20                 a2 = a2 & 0x20
    35: 52 09 52                 jump @10 if a2 != 0
      :                          @5
    38: 7c 77                    a0 = u8 [a0]
    40: 82 10 80 00              ra = u64 [sp + 0x80]
    44: 95 11 88 00              sp = sp + 0x88
    48: 28 3a 0f                 jump @292
      :                          @6
    51: 7c 77                    a0 = u8 [a0]
    53: 33 0b 81 00              a4 = 0x81
    57: 95 19 7f                 a2 = sp + 0x7f
    60: 33 02 57                 t0 = 0x57
    63: 01                       fallthrough
      :                          @7
    64: 64 bc                    a5 = a4
    66: 84 7b 0f                 a4 = a0 & 0xf
    69: 97 77 38                 a0 = a0 << 0x38
    72: 98 77 3c                 a0 = a0 >> 0x3c
    75: 88 b3 0a                 t1 = a4 <u 0xa
    78: 33 0a 30                 a3 = 0x30
    81: da 32 0a                 a3 = t0 if t1 == 0
    84: be ba 0a                 i32 a3 = a3 + a4
    87: 78 9a                    u8 [a2] = a3
    89: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
    92: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
    95: 52 07 e1                 jump @7 if a0 != 0
      :                          @8
    98: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   101: 56 27 80 00 6a           jump @16 if a0 >u 128
      :                          @9
   106: 9a bb 81 00              a4 = 0x81 - a4
   110: 64 1a                    a3 = sp
   112: c8 7a 0a                 a3 = a3 + a0
   115: 28 43                    jump @14
      :                          @10
   117: 7c 77                    a0 = u8 [a0]
   119: 33 0b 81 00              a4 = 0x81
   123: 95 19 7f                 a2 = sp + 0x7f
   126: 33 02 37                 t0 = 0x37
   129: 01                       fallthrough
      :                          @11
   130: 64 bc                    a5 = a4
   132: 84 7b 0f                 a4 = a0 & 0xf
   135: 97 77 38                 a0 = a0 << 0x38
   138: 98 77 3c                 a0 = a0 >> 0x3c
   141: 88 b3 0a                 t1 = a4 <u 0xa
   144: 33 0a 30                 a3 = 0x30
   147: da 32 0a                 a3 = t0 if t1 == 0
   150: be ba 0a                 i32 a3 = a3 + a4
   153: 78 9a                    u8 [a2] = a3
   155: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
   158: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
   161: 52 07 e1                 jump @11 if a0 != 0
      :                          @12
   164: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   167: 56 27 80 00 28           jump @16 if a0 >u 128
      :                          @13
   172: 9a bb 81 00              a4 = 0x81 - a4
   176: 64 1a                    a3 = sp
   178: c8 7a 0a                 a3 = a3 + a0
   181: 01                       fallthrough
      :                          @14
   182: 33 09 02                 a2 = 0x2
   185: 64 87                    a0 = a1
   187: 33 08 93 00 01           a1 = 0x10093
   192: 50 10 04 c6 0f           ra = 4, jump @302
      :                          @15 [@dyn 2]
   197: 82 10 80 00              ra = u64 [sp + 0x80]
   201: 95 11 88 00              sp = sp + 0x88
   205: 32 00                    ret
      :                          @16
   207: 00                       trap
      :                          @17 [@dyn 3]
   208: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   212: 7b 10 80 00              u64 [sp + 0x80] = ra
   216: 80 89 34                 a2 = u32 [a1 + 0x34]
   219: 84 9a 10                 a3 = a2 & 0x10
   222: 52 0a 16                 jump @20 if a3 != 0
      :                          @18
   225: 84 99 20                 a2 = a2 & 0x20
   228: 52 09 51                 jump @24 if a2 != 0
      :                          @19
   231: 80 77                    a0 = u32 [a0]
   233: 82 10 80 00              ra = u64 [sp + 0x80]
   237: 95 11 88 00              sp = sp + 0x88
   241: 28 79 0e                 jump @292
      :                          @20
   244: 81 7b                    a4 = i32 [a0]
   246: 33 09 81 00              a2 = 0x81
   250: 95 17 7f                 a0 = sp + 0x7f
   253: 33 02 57                 t0 = 0x57
   256: 01                       fallthrough
      :                          @21
   257: 64 9c                    a5 = a2
   259: 8b ba 04                 i32 a3 = a4 >> 0x4
   262: 84 bb 0f                 a4 = a4 & 0xf
   265: 88 b3 0a                 t1 = a4 <u 0xa
   268: 33 09 30                 a2 = 0x30
   271: da 32 09                 a2 = t0 if t1 == 0
   274: be b9 09                 i32 a2 = a2 + a4
   277: 78 79                    u8 [a0] = a2
   279: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   282: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   285: 64 ab                    a4 = a3
   287: 52 0a e2                 jump @21 if a3 != 0
      :                          @22
   290: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   293: 56 27 80 00 69           jump @30 if a0 >u 128
      :                          @23
   298: 9a 9b 81 00              a4 = 0x81 - a2
   302: 64 1a                    a3 = sp
   304: c8 7a 0a                 a3 = a3 + a0
   307: 28 42                    jump @28
      :                          @24
   309: 81 7b                    a4 = i32 [a0]
   311: 33 09 81 00              a2 = 0x81
   315: 95 17 7f                 a0 = sp + 0x7f
   318: 33 02 37                 t0 = 0x37
   321: 01                       fallthrough
      :                          @25
   322: 64 9c                    a5 = a2
   324: 8b ba 04                 i32 a3 = a4 >> 0x4
   327: 84 bb 0f                 a4 = a4 & 0xf
   330: 88 b3 0a                 t1 = a4 <u 0xa
   333: 33 09 30                 a2 = 0x30
   336: da 32 09                 a2 = t0 if t1 == 0
   339: be b9 09                 i32 a2 = a2 + a4
   342: 78 79                    u8 [a0] = a2
   344: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   347: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   350: 64 ab                    a4 = a3
   352: 52 0a e2                 jump @25 if a3 != 0
      :                          @26
   355: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   358: 56 27 80 00 28           jump @30 if a0 >u 128
      :                          @27
   363: 9a 9b 81 00              a4 = 0x81 - a2
   367: 64 1a                    a3 = sp
   369: c8 7a 0a                 a3 = a3 + a0
   372: 01                       fallthrough
      :                          @28
   373: 33 09 02                 a2 = 0x2
   376: 64 87                    a0 = a1
   378: 33 08 93 00 01           a1 = 0x10093
   383: 50 10 08 07 0f           ra = 8, jump @302
      :                          @29 [@dyn 4]
   388: 82 10 80 00              ra = u64 [sp + 0x80]
   392: 95 11 88 00              sp = sp + 0x88
   396: 32 00                    ret
      :                          @30
   398: 00                       trap
      :                          @31 [@dyn 5]
   399: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   403: 7b 10 80 00              u64 [sp + 0x80] = ra
   407: 80 89 34                 a2 = u32 [a1 + 0x34]
   410: 84 9a 10                 a3 = a2 & 0x10
   413: 52 0a 16                 jump @34 if a3 != 0
      :                          @32
   416: 84 99 20                 a2 = a2 & 0x20
   419: 52 09 51                 jump @38 if a2 != 0
      :                          @33
   422: 82 77                    a0 = u64 [a0]
   424: 82 10 80 00              ra = u64 [sp + 0x80]
   428: 95 11 88 00              sp = sp + 0x88
   432: 28 ba 0d                 jump @292
      :                          @34
   435: 82 7b                    a4 = u64 [a0]
   437: 33 09 81 00              a2 = 0x81
   441: 95 17 7f                 a0 = sp + 0x7f
   444: 33 02 57                 t0 = 0x57
   447: 01                       fallthrough
      :                          @35
   448: 64 9c                    a5 = a2
   450: 98 ba 04                 a3 = a4 >> 0x4
   453: 84 bb 0f                 a4 = a4 & 0xf
   456: 88 b3 0a                 t1 = a4 <u 0xa
   459: 33 09 30                 a2 = 0x30
   462: da 32 09                 a2 = t0 if t1 == 0
   465: be b9 09                 i32 a2 = a2 + a4
   468: 78 79                    u8 [a0] = a2
   470: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   473: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   476: 64 ab                    a4 = a3
   478: 52 0a e2                 jump @35 if a3 != 0
      :                          @36
   481: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   484: 56 27 80 00 69           jump @44 if a0 >u 128
      :                          @37
   489: 9a 9b 81 00              a4 = 0x81 - a2
   493: 64 1a                    a3 = sp
   495: c8 7a 0a                 a3 = a3 + a0
   498: 28 42                    jump @42
      :                          @38
   500: 82 7b                    a4 = u64 [a0]
   502: 33 09 81 00              a2 = 0x81
   506: 95 17 7f                 a0 = sp + 0x7f
   509: 33 02 37                 t0 = 0x37
   512: 01                       fallthrough
      :                          @39
   513: 64 9c                    a5 = a2
   515: 98 ba 04                 a3 = a4 >> 0x4
   518: 84 bb 0f                 a4 = a4 & 0xf
   521: 88 b3 0a                 t1 = a4 <u 0xa
   524: 33 09 30                 a2 = 0x30
   527: da 32 09                 a2 = t0 if t1 == 0
   530: be b9 09                 i32 a2 = a2 + a4
   533: 78 79                    u8 [a0] = a2
   535: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   538: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   541: 64 ab                    a4 = a3
   543: 52 0a e2                 jump @39 if a3 != 0
      :                          @40
   546: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   549: 56 27 80 00 28           jump @44 if a0 >u 128
      :                          @41
   554: 9a 9b 81 00              a4 = 0x81 - a2
   558: 64 1a                    a3 = sp
   560: c8 7a 0a                 a3 = a3 + a0
   563: 01                       fallthrough
      :                          @42
   564: 33 09 02                 a2 = 0x2
   567: 64 87                    a0 = a1
   569: 33 08 93 00 01           a1 = 0x10093
   574: 50 10 0c 48 0e           ra = 12, jump @302
      :                          @43 [@dyn 6]
   579: 82 10 80 00              ra = u64 [sp + 0x80]
   583: 95 11 88 00              sp = sp + 0x88
   587: 32 00                    ret
      :                          @44
   589: 00                       trap
      :                          @45 [@dyn 7]
   590: 95 11 c8                 sp = sp + 0xffffffffffffffc8
   593: 7b 10 30                 u64 [sp + 0x30] = ra
   596: 7b 15 28                 u64 [sp + 0x28] = s0
   599: 7b 16 20                 u64 [sp + 0x20] = s1
   602: 64 86                    s1 = a1
   604: 82 88 28                 a1 = u64 [a1 + 0x28]
   607: 82 6a 20                 a3 = u64 [s1 + 0x20]
   610: 82 8b 18                 a4 = u64 [a1 + 0x18]
   613: 64 75                    s0 = a0
   615: 33 08 88 00 01           a1 = 0x10088
   620: 33 09 01                 a2 = 0x1
   623: 64 a7                    a0 = a3
   625: b4 b0 01 10              ra = 16, jump [a4]
      :                          @46 [@dyn 8]
   629: 7b 16 08                 u64 [sp + 0x8] = s1
   632: 78 17 10                 u8 [sp + 0x10] = a0
   635: 46 11 11                 u8 [sp + 17] = 0
   638: 33 06 80 00              s1 = 0x80
   642: 33 07 02                 a0 = 0x2
   645: 7b 17                    u64 [sp] = a0
   647: 01                       fallthrough
      :                          @47
   648: 7b 15 18                 u64 [sp + 0x18] = s0
   651: 95 17 08                 a0 = sp + 0x8
   654: 95 18 18                 a1 = sp + 0x18
   657: 82 19                    a2 = u64 [sp]
   659: 50 10 12 bc 14           ra = 18, jump @446
      :                          @48 [@dyn 9]
   664: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
   667: 95 55 01                 s0 = s0 + 0x1
   670: 52 06 ea                 jump @47 if s1 != 0
      :                          @49
   673: 7c 18 10                 a1 = u8 [sp + 0x10]
   676: 33 07 01                 a0 = 0x1
   679: 52 08 1b                 jump @51 if a1 != 0
      :                          @50
   682: 82 17 08                 a0 = u64 [sp + 0x8]
   685: 82 78 28                 a1 = u64 [a0 + 0x28]
   688: 82 77 20                 a0 = u64 [a0 + 0x20]
   691: 82 8a 18                 a3 = u64 [a1 + 0x18]
   694: 33 08 92 00 01           a1 = 0x10092
   699: 33 09 01                 a2 = 0x1
   702: b4 a0 01 14              ra = 20, jump [a3]
      :                          @51 [@dyn 10]
   706: 82 10 30                 ra = u64 [sp + 0x30]
   709: 82 15 28                 s0 = u64 [sp + 0x28]
   712: 82 16 20                 s1 = u64 [sp + 0x20]
   715: 95 11 38                 sp = sp + 0x38
   718: 32 00                    ret
      :                          @52 [export #0: 'refine']
   720: 95 11 e0                 sp = sp + 0xffffffffffffffe0
   723: 7b 10 18                 u64 [sp + 0x18] = ra
   726: 7b 15 10                 u64 [sp + 0x10] = s0
   729: 48 11 08                 u32 [sp + 8] = 0
   732: 49 01                    u64 [sp + 0] = 0
   734: 64 17                    a0 = sp
   736: 33 09 0c                 a2 = 0xc
   739: 33 0a 05                 a3 = 0x5
   742: 33 08                    a1 = 0
   744: 33 0b                    a4 = 0
   746: 33 0c                    a5 = 0
   748: 0a 12                    ecalli 18 // 'fetch'
   750: 01                       fallthrough
      :                          @53
   751: 51 17 ff 14              jump @55 if a0 == 4294967295
      :                          @54
   755: 81 17 04                 a0 = i32 [sp + 0x4]
   758: 81 18 08                 a1 = i32 [sp + 0x8]
   761: 81 19                    a2 = i32 [sp]
   763: be 78 08                 i32 a1 = a1 + a0
   766: 83 99 01                 i32 a2 = a2 + 0x1
   769: 28 0b                    jump @56
      :                          @55
   771: 33 07                    a0 = 0
   773: 33 09 01                 a2 = 0x1
   776: 33 08 01                 a1 = 0x1
   779: 01                       fallthrough
      :                          @56
   780: 7a 19                    u32 [sp] = a2
   782: 7a 18 04                 u32 [sp + 0x4] = a1
   785: 7a 17 08                 u32 [sp + 0x8] = a0
   788: 64 17                    a0 = sp
   790: 33 08 0c                 a1 = 0xc
   793: 0a 13                    ecalli 19 // 'export'
   795: 64 17                    a0 = sp
   797: 33 08 0c                 a1 = 0xc
   800: 82 10 18                 ra = u64 [sp + 0x18]
   803: 82 15 10                 s0 = u64 [sp + 0x10]
   806: 95 11 20                 sp = sp + 0x20
   809: 32 00                    ret
      :                          @57 [export #1: 'accumulate']
   811: 95 11 d8                 sp = sp + 0xffffffffffffffd8
   814: 7b 10 20                 u64 [sp + 0x20] = ra
   817: 7b 15 18                 u64 [sp + 0x18] = s0
   820: 7b 16 10                 u64 [sp + 0x10] = s1
   823: 33 09 08                 a2 = 0x8
   826: ac 98 e5 00              jump @87 if a1 <u a2
      :                          @58
   830: 51 17 fc b3 01           jump @108 if a0 == 4294967292
      :                          @59
   835: 51 07 af 01              jump @109 if a0 == 0
      :                          @60
   839: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
   842: 95 75 08                 s0 = a0 + 0x8
   845: 51 0a 45                 jump @70 if a3 == 0
      :                          @61
   848: 7d 58                    a1 = i8 [s0]
   850: 33 06 01                 s1 = 0x1
   853: 59 08 40                 jump @71 if a1 >=s 0
      :                          @62
   856: 84 89 ff 00              a2 = a1 & 0xff
   860: 33 06 02                 s1 = 0x2
   863: 53 29 c0 00 2d           jump @68 if a2 <u 192
      :                          @63
   868: 33 06 03                 s1 = 0x3
   871: 53 29 e0 00 25           jump @68 if a2 <u 224
      :                          @64
   876: 33 06 04                 s1 = 0x4
   879: 53 29 f0 00 1d           jump @68 if a2 <u 240
      :                          @65
   884: 33 06 05                 s1 = 0x5
   887: 53 29 f8 00 15           jump @68 if a2 <u 248
      :                          @66
   892: 33 06 06                 s1 = 0x6
   895: 53 29 fc 00 0d           jump @68 if a2 <u 252
      :                          @67
   900: 88 98 fe 00              a1 = a2 <u 0xfe
   904: 9a 86 08                 s1 = 0x8 - a1
   907: 01                       fallthrough
      :                          @68
   908: ae 6a 09                 jump @71 if a3 >=u s1
      :                          @69
   911: 28 90 00                 jump @87
      :                          @70
   914: 33 06                    s1 = 0
   916: 01                       fallthrough
      :                          @71
   917: 7b 16                    u64 [sp] = s1
   919: 64 57                    a0 = s0
   921: 64 68                    a1 = s1
   923: 64 a6                    s1 = a3
   925: 50 10 16 ed 14           ra = 22, jump @463
      :                          @72 [@dyn 11]
   930: 82 1a                    a3 = u64 [sp]
   932: 51 07 7b                 jump @87 if a0 == 0
      :                          @73
   935: e4 a6 07                 a0 = maxu(s1, a3)
   938: c9 a7 07                 a0 = a0 - a3
   941: 53 17 60 72              jump @87 if a0 <u 96
      :                          @74
   945: c8 5a 08                 a1 = a3 + s0
   948: 95 76 a0                 s1 = a0 + 0xffffffffffffffa0
   951: 95 87 60                 a0 = a1 + 0x60
   954: 7b 17                    u64 [sp] = a0
   956: 51 06 4c                 jump @85 if s1 == 0
      :                          @75
   959: 7d 78                    a1 = i8 [a0]
   961: 33 05 01                 s0 = 0x1
   964: 59 08 37                 jump @82 if a1 >=s 0
      :                          @76
   967: 84 89 ff 00              a2 = a1 & 0xff
   971: 33 05 02                 s0 = 0x2
   974: 53 29 c0 00 2d           jump @82 if a2 <u 192
      :                          @77
   979: 33 05 03                 s0 = 0x3
   982: 53 29 e0 00 25           jump @82 if a2 <u 224
      :                          @78
   987: 33 05 04                 s0 = 0x4
   990: 53 29 f0 00 1d           jump @82 if a2 <u 240
      :                          @79
   995: 33 05 05                 s0 = 0x5
   998: 53 29 f8 00 15           jump @82 if a2 <u 248
      :                          @80
  1003: 33 05 06                 s0 = 0x6
  1006: 53 29 fc 00 0d           jump @82 if a2 <u 252
      :                          @81
  1011: 88 98 fe 00              a1 = a2 <u 0xfe
  1015: 9a 85 08                 s0 = 0x8 - a1
  1018: 01                       fallthrough
      :                          @82
  1019: ac 56 f8 00              jump @110 if s1 <u s0
      :                          @83
  1023: 64 58                    a1 = s0
  1025: 50 10 18 89 14           ra = 24, jump @463
      :                          @84 [@dyn 12]
  1030: 28 07                    jump @86
      :                          @85
  1032: 33 05                    s0 = 0
  1034: 33 07                    a0 = 0
  1036: 01                       fallthrough
      :                          @86
  1037: e4 56 08                 a1 = maxu(s1, s0)
  1040: c9 58 08                 a1 = a1 - s0
  1043: e4 78 08                 a1 = maxu(a1, a0)
  1046: c9 78 08                 a1 = a1 - a0
  1049: 33 09 21                 a2 = 0x21
  1052: ae 98 1b                 jump @89 if a1 >=u a2
      :                          @87
  1055: 33 08                    a1 = 0
  1057: 33 06 00 00 01           s1 = 0x10000
  1062: 01                       fallthrough
      :                          @88
  1063: 64 67                    a0 = s1
  1065: 82 10 20                 ra = u64 [sp + 0x20]
  1068: 82 15 18                 s0 = u64 [sp + 0x18]
  1071: 82 16 10                 s1 = u64 [sp + 0x10]
  1074: 95 11 28                 sp = sp + 0x28
  1077: 32 00                    ret
      :                          @89
  1079: 82 19                    a2 = u64 [sp]
  1081: c8 95 05                 s0 = s0 + a2
  1084: c8 57 07                 a0 = a0 + s0
  1087: 7c 79 20                 a2 = u8 [a0 + 0x20]
  1090: 51 09 19                 jump @91 if a2 == 0
      :                          @90
  1093: 46 11 0e                 u8 [sp + 14] = 0
  1096: 95 17 0e                 a0 = sp + 0xe
  1099: 33 08 01                 a1 = 0x1
  1102: 33 09                    a2 = 0
  1104: 33 0a                    a3 = 0
  1106: 0a 03                    ecalli 3 // 'write'
  1108: 33 08                    a1 = 0
  1110: 33 05                    s0 = 0
  1112: 28 82 00                 jump @106
      :                          @91
  1115: 95 8a df                 a3 = a1 + 0xffffffffffffffdf
  1118: 95 76 21                 s1 = a0 + 0x21
  1121: 51 0a 51                 jump @102 if a3 == 0
      :                          @92
  1124: 7d 67                    a0 = i8 [s1]
  1126: 33 05 01                 s0 = 0x1
  1129: 59 07 37                 jump @99 if a0 >=s 0
      :                          @93
  1132: 84 77 ff 00              a0 = a0 & 0xff
  1136: 33 05 02                 s0 = 0x2
  1139: 53 27 c0 00 2d           jump @99 if a0 <u 192
      :                          @94
  1144: 33 05 03                 s0 = 0x3
  1147: 53 27 e0 00 25           jump @99 if a0 <u 224
      :                          @95
  1152: 33 05 04                 s0 = 0x4
  1155: 53 27 f0 00 1d           jump @99 if a0 <u 240
      :                          @96
  1160: 33 05 05                 s0 = 0x5
  1163: 53 27 f8 00 15           jump @99 if a0 <u 248
      :                          @97
  1168: 33 05 06                 s0 = 0x6
  1171: 53 27 fc 00 0d           jump @99 if a0 <u 252
      :                          @98
  1176: 88 77 fe 00              a0 = a0 <u 0xfe
  1180: 9a 75 08                 s0 = 0x8 - a0
  1183: 01                       fallthrough
      :                          @99
  1184: 7b 1a                    u64 [sp] = a3
  1186: ac 5a 53                 jump @112 if a3 <u s0
      :                          @100
  1189: 64 67                    a0 = s1
  1191: 64 58                    a1 = s0
  1193: 50 10 1a e1 13           ra = 26, jump @463
      :                          @101 [@dyn 13]
  1198: 82 1a                    a3 = u64 [sp]
  1200: 28 07                    jump @103
      :                          @102
  1202: 33 05                    s0 = 0
  1204: 33 07                    a0 = 0
  1206: 01                       fallthrough
      :                          @103
  1207: c8 56 09                 a2 = s1 + s0
  1210: e4 5a 08                 a1 = maxu(a3, s0)
  1213: c9 58 08                 a1 = a1 - s0
  1216: e6 78 05                 s0 = minu(a1, a0)
  1219: 46 11 0e                 u8 [sp + 14] = 0
  1222: 95 17 0e                 a0 = sp + 0xe
  1225: 33 08 01                 a1 = 0x1
  1228: 64 96                    s1 = a2
  1230: 64 5a                    a3 = s0
  1232: 0a 03                    ecalli 3 // 'write'
  1234: 01                       fallthrough
      :                          @104
  1235: 55 15 21 21              jump @111 if s0 >=u 33
      :                          @105
  1239: 64 68                    a1 = s1
  1241: 01                       fallthrough
      :                          @106
  1242: 33 06 11 00 03           s1 = 0x30011
  1247: 33 07 11 00 03           a0 = 0x30011
  1252: 64 59                    a2 = s0
  1254: 50 10 1c ce 09           ra = 28, jump @272
      :                          @107 [@dyn 14]
  1259: 33 08 20                 a1 = 0x20
  1262: 28 39 ff                 jump @88
      :                          @108
  1265: 00                       trap
      :                          @109
  1266: 00                       trap
      :                          @110
  1267: 00                       trap
      :                          @111
  1268: 00                       trap
      :                          @112
  1269: 00                       trap
      :                          @113 [export #2: 'on_transfer']
  1270: 95 11 a8 fd              sp = sp + 0xfffffffffffffda8
  1274: 7b 10 50 02              u64 [sp + 0x250] = ra
  1278: 7b 15 48 02              u64 [sp + 0x248] = s0
  1282: 7b 16 40 02              u64 [sp + 0x240] = s1
  1286: 64 79                    a2 = a0
  1288: 33 02                    t0 = 0
  1290: 95 7b 04                 a4 = a0 + 0x4
  1293: 95 7c 08                 a5 = a0 + 0x8
  1296: 95 86 f8                 s1 = a1 + 0xfffffffffffffff8
  1299: 95 77 0c                 a0 = a0 + 0xc
  1302: 7b 17 28                 u64 [sp + 0x28] = a0
  1305: 33 0a 08                 a3 = 0x8
  1308: 33 07 06                 a0 = 0x6
  1311: 7b 17                    u64 [sp] = a0
  1313: 49 11 20 ff ef           u64 [sp + 32] = 0xffffffffffffefff
  1318: 7b 1c 88 00              u64 [sp + 0x88] = a5
  1322: 7b 1c 80 00              u64 [sp + 0x80] = a5
  1326: 7b 18 18                 u64 [sp + 0x18] = a1
  1329: 7b 19 10                 u64 [sp + 0x10] = a2
  1332: 7b 1b 08                 u64 [sp + 0x8] = a4
  1335: 7b 16 70                 u64 [sp + 0x70] = s1
  1338: ac a8 c0 04              jump @161 if a1 <u a3
      :                          @114
  1342: 51 09 d7 04              jump @164 if a2 == 0
      :                          @115
  1346: 51 0b d4 04              jump @165 if a4 == 0
      :                          @116
  1350: 7c 97                    a0 = u8 [a2]
  1352: 7b 17 40                 u64 [sp + 0x40] = a0
  1355: 7c 97 01                 a0 = u8 [a2 + 0x1]
  1358: 7b 17 30                 u64 [sp + 0x30] = a0
  1361: 7c 97 02                 a0 = u8 [a2 + 0x2]
  1364: 7b 17 38                 u64 [sp + 0x38] = a0
  1367: 7c 97 03                 a0 = u8 [a2 + 0x3]
  1370: 7b 17 48                 u64 [sp + 0x48] = a0
  1373: 7c b7                    a0 = u8 [a4]
  1375: 7b 17 68                 u64 [sp + 0x68] = a0
  1378: 7c b7 01                 a0 = u8 [a4 + 0x1]
  1381: 7b 17 50                 u64 [sp + 0x50] = a0
  1384: 7c b7 02                 a0 = u8 [a4 + 0x2]
  1387: 7b 17 60                 u64 [sp + 0x60] = a0
  1390: 7c b7 03                 a0 = u8 [a4 + 0x3]
  1393: 7b 17 58                 u64 [sp + 0x58] = a0
  1396: 51 06 49                 jump @126 if s1 == 0
      :                          @117
  1399: 82 17 88 00              a0 = u64 [sp + 0x88]
  1403: 7d 77                    a0 = i8 [a0]
  1405: 33 05 01                 s0 = 0x1
  1408: 59 07 40                 jump @127 if a0 >=s 0
      :                          @118
  1411: 84 77 ff 00              a0 = a0 & 0xff
  1415: 33 05 02                 s0 = 0x2
  1418: 53 27 c0 00 2d           jump @124 if a0 <u 192
      :                          @119
  1423: 33 05 03                 s0 = 0x3
  1426: 53 27 e0 00 25           jump @124 if a0 <u 224
      :                          @120
  1431: 33 05 04                 s0 = 0x4
  1434: 53 27 f0 00 1d           jump @124 if a0 <u 240
      :                          @121
  1439: 33 05 05                 s0 = 0x5
  1442: 53 27 f8 00 15           jump @124 if a0 <u 248
      :                          @122
  1447: 33 05 06                 s0 = 0x6
  1450: 53 27 fc 00 0d           jump @124 if a0 <u 252
      :                          @123
  1455: 88 77 fe 00              a0 = a0 <u 0xfe
  1459: 9a 75 08                 s0 = 0x8 - a0
  1462: 01                       fallthrough
      :                          @124
  1463: ae 56 09                 jump @127 if s1 >=u s0
      :                          @125
  1466: 28 40 04                 jump @161
      :                          @126
  1469: 33 05                    s0 = 0
  1471: 01                       fallthrough
      :                          @127
  1472: 82 17 88 00              a0 = u64 [sp + 0x88]
  1476: 64 58                    a1 = s0
  1478: 7b 12 78                 u64 [sp + 0x78] = t0
  1481: 50 10 1e c1 12           ra = 30, jump @463
      :                          @128 [@dyn 15]
  1486: 33 04 98 00              t2 = 0x98
  1490: 33 03 04                 t1 = 0x4
  1493: 33 02 08                 t0 = 0x8
  1496: 82 1c 70                 a5 = u64 [sp + 0x70]
  1499: 82 1b 78                 a4 = u64 [sp + 0x78]
  1502: ae 7b 1c 04              jump @161 if a4 >=u a0
      :                          @129
  1506: 82 16 30                 s1 = u64 [sp + 0x30]
  1509: 97 66 08                 s1 = s1 << 0x8
  1512: 82 18 40                 a1 = u64 [sp + 0x40]
  1515: d4 68 08                 a1 = a1 | s1
  1518: 82 19 38                 a2 = u64 [sp + 0x38]
  1521: 97 99 10                 a2 = a2 << 0x10
  1524: 82 1a 48                 a3 = u64 [sp + 0x48]
  1527: 97 aa 18                 a3 = a3 << 0x18
  1530: d4 a9 09                 a2 = a2 | a3
  1533: d4 89 06                 s1 = a2 | a1
  1536: 82 18 50                 a1 = u64 [sp + 0x50]
  1539: 97 88 08                 a1 = a1 << 0x8
  1542: 82 19 68                 a2 = u64 [sp + 0x68]
  1545: d4 98 08                 a1 = a1 | a2
  1548: 82 19 60                 a2 = u64 [sp + 0x60]
  1551: 97 99 10                 a2 = a2 << 0x10
  1554: 82 1a 58                 a3 = u64 [sp + 0x58]
  1557: 97 aa 18                 a3 = a3 << 0x18
  1560: d4 a9 09                 a2 = a2 | a3
  1563: d4 89 00                 ra = a2 | a1
  1566: e4 5c 08                 a1 = maxu(a5, s0)
  1569: c9 58 08                 a1 = a1 - s0
  1572: 82 19 80 00              a2 = u64 [sp + 0x80]
  1576: c8 59 09                 a2 = a2 + s0
  1579: 82 1a 28                 a3 = u64 [sp + 0x28]
  1582: c8 a5 05                 s0 = s0 + a3
  1585: 64 ba                    a3 = a4
  1587: 01                       fallthrough
      :                          @130
  1588: ac 28 c6 03              jump @161 if a1 <u t0
      :                          @131
  1592: aa 35 db 03              jump @162 if s0 == t1
      :                          @132
  1596: 51 05 d8 03              jump @163 if s0 == 0
      :                          @133
  1600: ac 48 ba 03              jump @161 if a1 <u t2
      :                          @134
  1604: 51 0a 17                 jump @137 if a3 == 0
      :                          @135
  1607: 95 88 68 ff              a1 = a1 + 0xffffffffffffff68
  1611: 95 55 98 00              s0 = s0 + 0x98
  1615: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  1618: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1621: 52 07 df                 jump @130 if a0 != 0
      :                          @136
  1624: 28 a2 03                 jump @161
      :                          @137
  1627: 7c 97 01                 a0 = u8 [a2 + 0x1]
  1630: 7c 98                    a1 = u8 [a2]
  1632: 7c 9a 02                 a3 = u8 [a2 + 0x2]
  1635: 7d 9b 03                 a4 = i8 [a2 + 0x3]
  1638: 8a 77 08                 i32 a0 = a0 << 0x8
  1641: d4 87 07                 a0 = a0 | a1
  1644: 8a a8 10                 i32 a1 = a3 << 0x10
  1647: 8a ba 18                 i32 a3 = a4 << 0x18
  1650: d4 a8 08                 a1 = a1 | a3
  1653: d4 87 07                 a0 = a0 | a1
  1656: 7b 17 68                 u64 [sp + 0x68] = a0
  1659: 7c 57 01                 a0 = u8 [s0 + 0x1]
  1662: 7c 58                    a1 = u8 [s0]
  1664: 7c 5a 02                 a3 = u8 [s0 + 0x2]
  1667: 7d 5b 03                 a4 = i8 [s0 + 0x3]
  1670: 8a 77 08                 i32 a0 = a0 << 0x8
  1673: d4 87 07                 a0 = a0 | a1
  1676: 8a a8 10                 i32 a1 = a3 << 0x10
  1679: 8a ba 18                 i32 a3 = a4 << 0x18
  1682: d4 a8 08                 a1 = a1 | a3
  1685: 7c 9a 0f                 a3 = u8 [a2 + 0xf]
  1688: 7c 9b 0e                 a4 = u8 [a2 + 0xe]
  1691: d4 87 07                 a0 = a0 | a1
  1694: 7b 17 60                 u64 [sp + 0x60] = a0
  1697: 7c 97 0d                 a0 = u8 [a2 + 0xd]
  1700: 97 aa 10                 a3 = a3 << 0x10
  1703: 97 bb 08                 a4 = a4 << 0x8
  1706: d4 ba 0a                 a3 = a3 | a4
  1709: 7c 98 0c                 a1 = u8 [a2 + 0xc]
  1712: 7c 9b 0b                 a4 = u8 [a2 + 0xb]
  1715: d4 a7 07                 a0 = a0 | a3
  1718: 97 77 10                 a0 = a0 << 0x10
  1721: 97 88 08                 a1 = a1 << 0x8
  1724: d4 b8 08                 a1 = a1 | a4
  1727: 7c 9a 0a                 a3 = u8 [a2 + 0xa]
  1730: 7c 9b 09                 a4 = u8 [a2 + 0x9]
  1733: d4 87 07                 a0 = a0 | a1
  1736: 97 77 10                 a0 = a0 << 0x10
  1739: 97 aa 08                 a3 = a3 << 0x8
  1742: d4 ba 0a                 a3 = a3 | a4
  1745: d4 a7 07                 a0 = a0 | a3
  1748: 7c 98 08                 a1 = u8 [a2 + 0x8]
  1751: 97 77 08                 a0 = a0 << 0x8
  1754: 7c 9a 97 00              a3 = u8 [a2 + 0x97]
  1758: 7c 9b 96 00              a4 = u8 [a2 + 0x96]
  1762: d4 87 07                 a0 = a0 | a1
  1765: 7b 17 58                 u64 [sp + 0x58] = a0
  1768: 7c 97 95 00              a0 = u8 [a2 + 0x95]
  1772: 97 aa 10                 a3 = a3 << 0x10
  1775: 97 bb 08                 a4 = a4 << 0x8
  1778: d4 ba 0a                 a3 = a3 | a4
  1781: d4 a7 07                 a0 = a0 | a3
  1784: 7c 9a 94 00              a3 = u8 [a2 + 0x94]
  1788: 7c 9b 93 00              a4 = u8 [a2 + 0x93]
  1792: 95 98 10                 a1 = a2 + 0x10
  1795: 97 77 10                 a0 = a0 << 0x10
  1798: 97 aa 08                 a3 = a3 << 0x8
  1801: d4 ba 0a                 a3 = a3 | a4
  1804: 7c 9b 92 00              a4 = u8 [a2 + 0x92]
  1808: d4 a7 07                 a0 = a0 | a3
  1811: 7c 9a 91 00              a3 = u8 [a2 + 0x91]
  1815: 97 77 10                 a0 = a0 << 0x10
  1818: 97 bb 08                 a4 = a4 << 0x8
  1821: 7c 99 90 00              a2 = u8 [a2 + 0x90]
  1825: d4 ba 0a                 a3 = a3 | a4
  1828: d4 a7 07                 a0 = a0 | a3
  1831: 97 77 08                 a0 = a0 << 0x8
  1834: d4 97 07                 a0 = a0 | a2
  1837: 7b 17 50                 u64 [sp + 0x50] = a0
  1840: 95 17 30 01              a0 = sp + 0x130
  1844: 33 09 80 00              a2 = 0x80
  1848: 64 05                    s0 = ra
  1850: 50 10 20 7a 07           ra = 32, jump @272
      :                          @138 [@dyn 16]
  1855: 95 17 a8 00              a0 = sp + 0xa8
  1859: 95 18 30 01              a1 = sp + 0x130
  1863: 33 09 80 00              a2 = 0x80
  1867: 50 10 22 69 07           ra = 34, jump @272
      :                          @139 [@dyn 17]
  1872: 7a 16 90 00              u32 [sp + 0x90] = s1
  1876: 7a 15 94 00              u32 [sp + 0x94] = s0
  1880: 82 17 68                 a0 = u64 [sp + 0x68]
  1883: 7a 17 98 00              u32 [sp + 0x98] = a0
  1887: 82 17 60                 a0 = u64 [sp + 0x60]
  1890: 7a 17 9c 00              u32 [sp + 0x9c] = a0
  1894: 82 17 58                 a0 = u64 [sp + 0x58]
  1897: 7b 17 a0 00              u64 [sp + 0xa0] = a0
  1901: 82 17 50                 a0 = u64 [sp + 0x50]
  1904: 7b 17 28 01              u64 [sp + 0x128] = a0
  1908: 95 17 90 00              a0 = sp + 0x90
  1912: 7b 17 30 01              u64 [sp + 0x130] = a0
  1916: 82 17                    a0 = u64 [sp]
  1918: 7b 17 38 01              u64 [sp + 0x138] = a0
  1922: 95 18 94 00              a1 = sp + 0x94
  1926: 7b 18 40 01              u64 [sp + 0x140] = a1
  1930: 7b 17 48 01              u64 [sp + 0x148] = a0
  1934: 95 18 98 00              a1 = sp + 0x98
  1938: 7b 18 50 01              u64 [sp + 0x150] = a1
  1942: 7b 17 58 01              u64 [sp + 0x158] = a0
  1946: 95 18 9c 00              a1 = sp + 0x9c
  1950: 7b 18 60 01              u64 [sp + 0x160] = a1
  1954: 7b 17 68 01              u64 [sp + 0x168] = a0
  1958: 95 17 a0 00              a0 = sp + 0xa0
  1962: 7b 17 70 01              u64 [sp + 0x170] = a0
  1966: 33 08 0a                 a1 = 0xa
  1969: 7b 18 78 01              u64 [sp + 0x178] = a1
  1973: 95 17 a8 00              a0 = sp + 0xa8
  1977: 7b 17 80 01              u64 [sp + 0x180] = a0
  1981: 33 07 0e                 a0 = 0xe
  1984: 7b 17 88 01              u64 [sp + 0x188] = a0
  1988: 33 07 78 01 01           a0 = 0x10178
  1993: 7b 17 f0 01              u64 [sp + 0x1f0] = a0
  1997: 95 17 28 01              a0 = sp + 0x128
  2001: 7b 17 90 01              u64 [sp + 0x190] = a0
  2005: 7b 18 60                 u64 [sp + 0x60] = a1
  2008: 7b 18 98 01              u64 [sp + 0x198] = a1
  2012: 49 21 f8 01 07           u64 [sp + 504] = 0x7
  2017: 49 21 10 02              u64 [sp + 528] = 0
  2021: 95 17 30 01              a0 = sp + 0x130
  2025: 7b 17 00 02              u64 [sp + 0x200] = a0
  2029: 49 21 08 02 07           u64 [sp + 520] = 0x7
  2034: 95 17 20 02              a0 = sp + 0x220
  2038: 95 18 f0 01              a1 = sp + 0x1f0
  2042: 50 10 24 4b 04           ra = 36, jump @222
      :                          @140 [@dyn 18]
  2047: 82 15 28 02              s0 = u64 [sp + 0x228]
  2051: 82 1b 30 02              a4 = u64 [sp + 0x230]
  2055: 82 16 20 02              s1 = u64 [sp + 0x220]
  2059: 33 07 02                 a0 = 0x2
  2062: 33 08                    a1 = 0
  2064: 33 09                    a2 = 0
  2066: 64 5a                    a3 = s0
  2068: 33 00 26                 ra = 0x26
  2071: 0a 64                    ecalli 100 // 'log'
  2073: 01                       fallthrough
      :                          @141 [@dyn 19]
  2074: 82 17 20                 a0 = u64 [sp + 0x20]
  2077: c8 67 07                 a0 = a0 + s1
  2080: 33 0c 40 00 03           a5 = 0x30040
  2085: 33 02 00 10              t0 = 0x1000
  2089: 53 27 00 f0 1c           jump @146 if a0 <u 4294963200
      :                          @142
  2094: c8 2c 08                 a1 = a5 + t0
  2097: 82 87                    a0 = u64 [a1]
  2099: c9 78 09                 a2 = a1 - a0
  2102: ab 59 0f                 jump @146 if a2 != s0
      :                          @143
  2105: c9 67 09                 a2 = a0 - s1
  2108: 01                       fallthrough
      :                          @144
  2109: 82 8a                    a3 = u64 [a1]
  2111: ab 7a ef                 jump @142 if a3 != a0
      :                          @145
  2114: 7b 89                    u64 [a1] = a2
  2116: 01                       fallthrough
      :                          @146
  2117: 81 17 94 00              a0 = i32 [sp + 0x94]
  2121: 7a 17 b4 01              u32 [sp + 0x1b4] = a0
  2125: 95 17 b4 01              a0 = sp + 0x1b4
  2129: 33 08 04                 a1 = 0x4
  2132: 95 19 a8 00              a2 = sp + 0xa8
  2136: 33 0a 80 00              a3 = 0x80
  2140: 7b 1c 68                 u64 [sp + 0x68] = a5
  2143: 0a 03                    ecalli 3 // 'write'
  2145: 0a                       ecalli 0 // 'gas'
  2146: 7b 17 b8 01              u64 [sp + 0x1b8] = a0
  2150: 7b 17 c0 01              u64 [sp + 0x1c0] = a0
  2154: 46 21 cf 01 04           u8 [sp + 463] = 0x4
  2159: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
  2163: 95 17 cf 01              a0 = sp + 0x1cf
  2167: 33 08 01                 a1 = 0x1
  2170: 95 19 d0 01              a2 = sp + 0x1d0
  2174: 33 0a 08                 a3 = 0x8
  2177: 0a 03                    ecalli 3 // 'write'
  2179: 95 17 cf 01              a0 = sp + 0x1cf
  2183: 7b 17 20 02              u64 [sp + 0x220] = a0
  2187: 33 07 82 00              a0 = 0x82
  2191: 7b 17 28 02              u64 [sp + 0x228] = a0
  2195: 49 21 30 01 02           u64 [sp + 304] = 0x2
  2200: 49 21 40 01 02           u64 [sp + 320] = 0x2
  2205: 49 21 50 01              u64 [sp + 336] = 0
  2209: 14 07 20 00 00 00 10 00 00 00 a0 = 0x1000000020
  2219: 7b 17 58 01              u64 [sp + 0x158] = a0
  2223: 46 21 60 01 03           u8 [sp + 352] = 0x3
  2228: 49 21 68 01 02           u64 [sp + 360] = 0x2
  2233: 49 21 78 01 02           u64 [sp + 376] = 0x2
  2238: 49 21 88 01 01           u64 [sp + 392] = 0x1
  2243: 7b 17 90 01              u64 [sp + 0x190] = a0
  2247: 33 07 68 02 01           a0 = 0x10268
  2252: 7b 17 f0 01              u64 [sp + 0x1f0] = a0
  2256: 95 17 c0 01              a0 = sp + 0x1c0
  2260: 7b 17 30 02              u64 [sp + 0x230] = a0
  2264: 82 17 60                 a0 = u64 [sp + 0x60]
  2267: 7b 17 38 02              u64 [sp + 0x238] = a0
  2271: 46 21 98 01 03           u8 [sp + 408] = 0x3
  2276: 49 21 f8 01 02           u64 [sp + 504] = 0x2
  2281: 95 17 30 01              a0 = sp + 0x130
  2285: 7b 17 10 02              u64 [sp + 0x210] = a0
  2289: 49 21 18 02 02           u64 [sp + 536] = 0x2
  2294: 95 17 20 02              a0 = sp + 0x220
  2298: 7b 17 00 02              u64 [sp + 0x200] = a0
  2302: 49 21 08 02 02           u64 [sp + 520] = 0x2
  2307: 95 17 d8 01              a0 = sp + 0x1d8
  2311: 95 18 f0 01              a1 = sp + 0x1f0
  2315: 50 10 28 3a 03           ra = 40, jump @222
      :                          @147 [@dyn 20]
  2320: 82 15 e0 01              s0 = u64 [sp + 0x1e0]
  2324: 82 1b e8 01              a4 = u64 [sp + 0x1e8]
  2328: 82 16 d8 01              s1 = u64 [sp + 0x1d8]
  2332: 33 07 02                 a0 = 0x2
  2335: 33 08                    a1 = 0
  2337: 33 09                    a2 = 0
  2339: 64 5a                    a3 = s0
  2341: 33 00 2a                 ra = 0x2a
  2344: 0a 64                    ecalli 100 // 'log'
  2346: 01                       fallthrough
      :                          @148 [@dyn 21]
  2347: 82 1c 68                 a5 = u64 [sp + 0x68]
  2350: 33 02 00 10              t0 = 0x1000
  2354: 82 17 20                 a0 = u64 [sp + 0x20]
  2357: c8 67 07                 a0 = a0 + s1
  2360: 53 27 00 f0 1e           jump @153 if a0 <u 4294963200
      :                          @149
  2365: c8 2c 08                 a1 = a5 + t0
  2368: 82 87                    a0 = u64 [a1]
  2370: c9 78 09                 a2 = a1 - a0
  2373: ab 59 11                 jump @153 if a2 != s0
      :                          @150
  2376: c9 67 09                 a2 = a0 - s1
  2379: 01                       fallthrough
      :                          @151
  2380: 82 8a                    a3 = u64 [a1]
  2382: ab 7a ef                 jump @149 if a3 != a0
      :                          @152
  2385: 7b 89                    u64 [a1] = a2
  2387: 33 0b                    a4 = 0
  2389: 01                       fallthrough
      :                          @153
  2390: 95 17 b8 01              a0 = sp + 0x1b8
  2394: 7b 17 20 02              u64 [sp + 0x220] = a0
  2398: 82 17 60                 a0 = u64 [sp + 0x60]
  2401: 7b 17 28 02              u64 [sp + 0x228] = a0
  2405: 33 07 e8 01 01           a0 = 0x101e8
  2410: 7b 17 30 01              u64 [sp + 0x130] = a0
  2414: 49 21 38 01 02           u64 [sp + 312] = 0x2
  2419: 49 21 50 01              u64 [sp + 336] = 0
  2423: 95 17 20 02              a0 = sp + 0x220
  2427: 7b 17 40 01              u64 [sp + 0x140] = a0
  2431: 49 21 48 01 01           u64 [sp + 328] = 0x1
  2436: 95 17 f0 01              a0 = sp + 0x1f0
  2440: 95 18 30 01              a1 = sp + 0x130
  2444: 50 10 2c b9 02           ra = 44, jump @222
      :                          @154 [@dyn 22]
  2449: 82 15 f8 01              s0 = u64 [sp + 0x1f8]
  2453: 82 1b 00 02              a4 = u64 [sp + 0x200]
  2457: 82 16 f0 01              s1 = u64 [sp + 0x1f0]
  2461: 33 07 02                 a0 = 0x2
  2464: 33 08                    a1 = 0
  2466: 33 09                    a2 = 0
  2468: 64 5a                    a3 = s0
  2470: 33 00 2e                 ra = 0x2e
  2473: 0a 64                    ecalli 100 // 'log'
  2475: 01                       fallthrough
      :                          @155 [@dyn 23]
  2476: 82 1c 68                 a5 = u64 [sp + 0x68]
  2479: 33 02 00 10              t0 = 0x1000
  2483: 82 17 20                 a0 = u64 [sp + 0x20]
  2486: c8 67 07                 a0 = a0 + s1
  2489: 53 27 00 f0 1c           jump @160 if a0 <u 4294963200
      :                          @156
  2494: c8 2c 08                 a1 = a5 + t0
  2497: 82 87                    a0 = u64 [a1]
  2499: c9 78 09                 a2 = a1 - a0
  2502: ab 59 0f                 jump @160 if a2 != s0
      :                          @157
  2505: c9 67 09                 a2 = a0 - s1
  2508: 01                       fallthrough
      :                          @158
  2509: 82 8a                    a3 = u64 [a1]
  2511: ab 7a ef                 jump @156 if a3 != a0
      :                          @159
  2514: 7b 89                    u64 [a1] = a2
  2516: 01                       fallthrough
      :                          @160
  2517: 82 12 78                 t0 = u64 [sp + 0x78]
  2520: 95 22 01                 t0 = t0 + 0x1
  2523: 82 17 80 00              a0 = u64 [sp + 0x80]
  2527: 95 77 98 00              a0 = a0 + 0x98
  2531: 7b 17 80 00              u64 [sp + 0x80] = a0
  2535: 82 18 18                 a1 = u64 [sp + 0x18]
  2538: 82 19 10                 a2 = u64 [sp + 0x10]
  2541: 82 1b 08                 a4 = u64 [sp + 0x8]
  2544: 82 16 70                 s1 = u64 [sp + 0x70]
  2547: 33 0a 08                 a3 = 0x8
  2550: ae a8 48 fb              jump @114 if a1 >=u a3
      :                          @161
  2554: 33 07 00 00 01           a0 = 0x10000
  2559: 33 08                    a1 = 0
  2561: 82 10 50 02              ra = u64 [sp + 0x250]
  2565: 82 15 48 02              s0 = u64 [sp + 0x248]
  2569: 82 16 40 02              s1 = u64 [sp + 0x240]
  2573: 95 11 58 02              sp = sp + 0x258
  2577: 32 00                    ret
      :                          @162
  2579: 00                       trap
      :                          @163
  2580: 00                       trap
      :                          @164
  2581: 00                       trap
      :                          @165
  2582: 00                       trap
      :                          @166
  2583: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  2586: 7b 10 40                 u64 [sp + 0x40] = ra
  2589: 7b 15 38                 u64 [sp + 0x38] = s0
  2592: 7b 16 30                 u64 [sp + 0x30] = s1
  2595: c8 89 09                 a2 = a2 + a1
  2598: ac 89 52                 jump @174 if a2 <u a1
      :                          @167
  2601: 64 75                    s0 = a0
  2603: 82 77                    a0 = u64 [a0]
  2605: 97 78 01                 a1 = a0 << 0x1
  2608: 33 0a 08                 a3 = 0x8
  2611: e4 a9 09                 a2 = maxu(a2, a3)
  2614: e4 98 06                 s1 = maxu(a1, a2)
  2617: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  2620: 98 88 3f                 a1 = a1 >> 0x3f
  2623: 51 07 12                 jump @169 if a0 == 0
      :                          @168
  2626: 82 59 08                 a2 = u64 [s0 + 0x8]
  2629: 7b 19 18                 u64 [sp + 0x18] = a2
  2632: 49 11 20 01              u64 [sp + 32] = 0x1
  2636: 7b 17 28                 u64 [sp + 0x28] = a0
  2639: 28 06                    jump @170
      :                          @169
  2641: 49 11 20                 u64 [sp + 32] = 0
  2644: 01                       fallthrough
      :                          @170
  2645: 64 17                    a0 = sp
  2647: 95 1a 18                 a3 = sp + 0x18
  2650: 64 69                    a2 = s1
  2652: 50 10 30 32              ra = 48, jump @178
      :                          @171 [@dyn 24]
  2656: 82 18                    a1 = u64 [sp]
  2658: 82 17 08                 a0 = u64 [sp + 0x8]
  2661: 51 08 14                 jump @175 if a1 == 0
      :                          @172
  2664: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  2674: aa 87 0d                 jump @176 if a0 == a1
      :                          @173
  2677: 52 07 18                 jump @177 if a0 != 0
      :                          @174
  2680: 00                       trap
      :                          @175
  2681: 7b 57 08                 u64 [s0 + 0x8] = a0
  2684: 7b 56                    u64 [s0] = s1
  2686: 01                       fallthrough
      :                          @176
  2687: 82 10 40                 ra = u64 [sp + 0x40]
  2690: 82 15 38                 s0 = u64 [sp + 0x38]
  2693: 82 16 30                 s1 = u64 [sp + 0x30]
  2696: 95 11 48                 sp = sp + 0x48
  2699: 32 00                    ret
      :                          @177
  2701: 00                       trap
      :                          @178
  2702: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  2705: 7b 10 30                 u64 [sp + 0x30] = ra
  2708: 7b 15 28                 u64 [sp + 0x28] = s0
  2711: 7b 16 20                 u64 [sp + 0x20] = s1
  2714: 64 96                    s1 = a2
  2716: 64 73                    t1 = a0
  2718: 51 08 6e                 jump @188 if a1 == 0
      :                          @179
  2721: 82 a7 08                 a0 = u64 [a3 + 0x8]
  2724: 51 07 71                 jump @189 if a0 == 0
      :                          @180
  2727: 82 a9 10                 a2 = u64 [a3 + 0x10]
  2730: 51 09 9e 00              jump @196 if a2 == 0
      :                          @181
  2734: 82 a8                    a1 = u64 [a3]
  2736: 33 02 00 10              t0 = 0x1000
  2740: 33 04 40 00 03           t2 = 0x30040
  2745: c8 24 07                 a0 = t2 + t0
  2748: 01                       fallthrough
      :                          @182
  2749: 82 7a                    a3 = u64 [a0]
  2751: c8 6a 05                 s0 = a3 + s1
  2754: ac a5 c2 00              jump @202 if s0 <u a3
      :                          @183
  2758: 95 5b 01                 a4 = s0 + 0x1
  2761: 88 bc 01                 a5 = a4 <u 0x1
  2764: d8 b2 0b                 a4 = t0 <u a4
  2767: d4 cb 0b                 a4 = a4 | a5
  2770: 52 0b b2 00              jump @202 if a4 != 0
      :                          @184
  2774: 82 7b                    a4 = u64 [a0]
  2776: ab ab e5                 jump @182 if a4 != a3
      :                          @185
  2779: 7b 75                    u64 [a0] = s0
  2781: 33 0c                    a5 = 0
  2783: 7b 13 18                 u64 [sp + 0x18] = t1
  2786: c9 54 07                 a0 = t2 - s0
  2789: 95 77 00 10              a0 = a0 + 0x1000
  2793: 7b 17 10                 u64 [sp + 0x10] = a0
  2796: 7b 18 08                 u64 [sp + 0x8] = a1
  2799: 64 95                    s0 = a2
  2801: 7b 14                    u64 [sp] = t2
  2803: 50 10 32 c1 03           ra = 50, jump @272
      :                          @186 [@dyn 25]
  2808: 54 25 00 10 94 00        jump @203 if s0 <=u 4096
      :                          @187
  2814: 82 13 18                 t1 = u64 [sp + 0x18]
  2817: 82 18 10                 a1 = u64 [sp + 0x10]
  2820: 33 07                    a0 = 0
  2822: 7b 38 08                 u64 [t1 + 0x8] = a1
  2825: 28 b1 00                 jump @209
      :                          @188
  2828: 49 13 08                 u64 [t1 + 8] = 0
  2831: 33 07 01                 a0 = 0x1
  2834: 28 a8 00                 jump @209
      :                          @189
  2837: 33 07 00 10              a0 = 0x1000
  2841: 33 02 40 00 03           t0 = 0x30040
  2846: c8 72 09                 a2 = t0 + a0
  2849: 01                       fallthrough
      :                          @190
  2850: 82 9b                    a4 = u64 [a2]
  2852: c8 6b 0a                 a3 = a4 + s1
  2855: ac ba 5d                 jump @202 if a3 <u a4
      :                          @191
  2858: 95 ac 01                 a5 = a3 + 0x1
  2861: 88 c8 01                 a1 = a5 <u 0x1
  2864: d8 c7 0c                 a5 = a0 <u a5
  2867: d4 c8 08                 a1 = a1 | a5
  2870: 52 08 4e                 jump @202 if a1 != 0
      :                          @192
  2873: 82 98                    a1 = u64 [a2]
  2875: ab b8 e7                 jump @190 if a1 != a4
      :                          @193
  2878: 7b 9a                    u64 [a2] = a3
  2880: 33 0c                    a5 = 0
  2882: 01                       fallthrough
      :                          @194
  2883: ab b8 df                 jump @190 if a1 != a4
      :                          @195
  2886: 28 30                    jump @201
      :                          @196
  2888: 33 07 00 10              a0 = 0x1000
  2892: 33 02 40 00 03           t0 = 0x30040
  2897: c8 72 09                 a2 = t0 + a0
  2900: 01                       fallthrough
      :                          @197
  2901: 82 9b                    a4 = u64 [a2]
  2903: c8 6b 0a                 a3 = a4 + s1
  2906: ac ba 2a                 jump @202 if a3 <u a4
      :                          @198
  2909: 95 ac 01                 a5 = a3 + 0x1
  2912: 88 c8 01                 a1 = a5 <u 0x1
  2915: d8 c7 0c                 a5 = a0 <u a5
  2918: d4 c8 08                 a1 = a1 | a5
  2921: 52 08 1b                 jump @202 if a1 != 0
      :                          @199
  2924: 82 98                    a1 = u64 [a2]
  2926: ab b8 e7                 jump @197 if a1 != a4
      :                          @200
  2929: 7b 9a                    u64 [a2] = a3
  2931: 33 0c                    a5 = 0
  2933: 01                       fallthrough
      :                          @201
  2934: c9 a2 07                 a0 = t0 - a3
  2937: 95 78 00 10              a1 = a0 + 0x1000
  2941: 33 07                    a0 = 0
  2943: 7b 38 08                 u64 [t1 + 0x8] = a1
  2946: 28 38                    jump @209
      :                          @202
  2948: 33 07 01                 a0 = 0x1
  2951: 7b 37 08                 u64 [t1 + 0x8] = a0
  2954: 28 30                    jump @209
      :                          @203
  2956: 64 5c                    a5 = s0
  2958: 82 18                    a1 = u64 [sp]
  2960: 95 87 00 10              a0 = a1 + 0x1000
  2964: 82 13 18                 t1 = u64 [sp + 0x18]
  2967: 82 15 08                 s0 = u64 [sp + 0x8]
  2970: 01                       fallthrough
      :                          @204
  2971: 82 78                    a1 = u64 [a0]
  2973: c9 87 09                 a2 = a0 - a1
  2976: ab 59 11                 jump @208 if a2 != s0
      :                          @205
  2979: c9 c8 09                 a2 = a1 - a5
  2982: 01                       fallthrough
      :                          @206
  2983: 82 7a                    a3 = u64 [a0]
  2985: ab 8a f2                 jump @204 if a3 != a1
      :                          @207
  2988: 7b 79                    u64 [a0] = a2
  2990: 33 0b                    a4 = 0
  2992: 01                       fallthrough
      :                          @208
  2993: 82 18 10                 a1 = u64 [sp + 0x10]
  2996: 33 07                    a0 = 0
  2998: 7b 38 08                 u64 [t1 + 0x8] = a1
  3001: 01                       fallthrough
      :                          @209
  3002: 7b 36 10                 u64 [t1 + 0x10] = s1
  3005: 7b 37                    u64 [t1] = a0
  3007: 82 10 30                 ra = u64 [sp + 0x30]
  3010: 82 15 28                 s0 = u64 [sp + 0x28]
  3013: 82 16 20                 s1 = u64 [sp + 0x20]
  3016: 95 11 38                 sp = sp + 0x38
  3019: 32 00                    ret
      :                          @210
  3021: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  3024: 7b 10 40                 u64 [sp + 0x40] = ra
  3027: 7b 15 38                 u64 [sp + 0x38] = s0
  3030: 7b 16 30                 u64 [sp + 0x30] = s1
  3033: 95 88 01                 a1 = a1 + 0x1
  3036: 51 08 53                 jump @218 if a1 == 0
      :                          @211
  3039: 64 75                    s0 = a0
  3041: 82 77                    a0 = u64 [a0]
  3043: 97 79 01                 a2 = a0 << 0x1
  3046: 33 0a 08                 a3 = 0x8
  3049: e4 a8 08                 a1 = maxu(a1, a3)
  3052: e4 89 06                 s1 = maxu(a2, a1)
  3055: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  3058: 98 88 3f                 a1 = a1 >> 0x3f
  3061: 51 07 12                 jump @213 if a0 == 0
      :                          @212
  3064: 82 59 08                 a2 = u64 [s0 + 0x8]
  3067: 7b 19 18                 u64 [sp + 0x18] = a2
  3070: 49 11 20 01              u64 [sp + 32] = 0x1
  3074: 7b 17 28                 u64 [sp + 0x28] = a0
  3077: 28 06                    jump @214
      :                          @213
  3079: 49 11 20                 u64 [sp + 32] = 0
  3082: 01                       fallthrough
      :                          @214
  3083: 64 17                    a0 = sp
  3085: 95 1a 18                 a3 = sp + 0x18
  3088: 64 69                    a2 = s1
  3090: 50 10 34 7c fe           ra = 52, jump @178
      :                          @215 [@dyn 26]
  3095: 82 18                    a1 = u64 [sp]
  3097: 82 17 08                 a0 = u64 [sp + 0x8]
  3100: 51 08 14                 jump @219 if a1 == 0
      :                          @216
  3103: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  3113: aa 87 0d                 jump @220 if a0 == a1
      :                          @217
  3116: 52 07 18                 jump @221 if a0 != 0
      :                          @218
  3119: 00                       trap
      :                          @219
  3120: 7b 57 08                 u64 [s0 + 0x8] = a0
  3123: 7b 56                    u64 [s0] = s1
  3125: 01                       fallthrough
      :                          @220
  3126: 82 10 40                 ra = u64 [sp + 0x40]
  3129: 82 15 38                 s0 = u64 [sp + 0x38]
  3132: 82 16 30                 s1 = u64 [sp + 0x30]
  3135: 95 11 48                 sp = sp + 0x48
  3138: 32 00                    ret
      :                          @221
  3140: 00                       trap
      :                          @222
  3141: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  3144: 7b 10 30                 u64 [sp + 0x30] = ra
  3147: 7b 15 28                 u64 [sp + 0x28] = s0
  3150: 7b 16 20                 u64 [sp + 0x20] = s1
  3153: 64 89                    a2 = a1
  3155: 82 8a 08                 a3 = u64 [a1 + 0x8]
  3158: 64 75                    s0 = a0
  3160: 51 0a 35                 jump @227 if a3 == 0
      :                          @223
  3163: 82 98                    a1 = u64 [a2]
  3165: 33 07                    a0 = 0
  3167: 95 8b 08                 a4 = a1 + 0x8
  3170: 01                       fallthrough
      :                          @224
  3171: 82 bc                    a5 = u64 [a4]
  3173: c8 c7 07                 a0 = a0 + a5
  3176: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  3179: 95 bb 10                 a4 = a4 + 0x10
  3182: 52 0a f5                 jump @224 if a3 != 0
      :                          @225
  3185: 82 9a 18                 a3 = u64 [a2 + 0x18]
  3188: 51 0a 24                 jump @229 if a3 == 0
      :                          @226
  3191: 82 88 08                 a1 = u64 [a1 + 0x8]
  3194: 8e 88                    a1 = a1 >u 0
  3196: 88 7a 10                 a3 = a0 <u 0x10
  3199: 85 aa 01                 a3 = a3 ^ 0x1
  3202: d4 a8 08                 a1 = a1 | a3
  3205: 89 7a                    a3 = a0 <s 0
  3207: e0 a8 08                 a1 = a1 & ~a3
  3210: 52 08 0a                 jump @228 if a1 != 0
      :                          @227
  3213: 33 07                    a0 = 0
  3215: 33 08 01                 a1 = 0x1
  3218: 28 48                    jump @237
      :                          @228
  3220: 97 77 01                 a0 = a0 << 0x1
  3223: 01                       fallthrough
      :                          @229
  3224: 51 07 3e                 jump @236 if a0 == 0
      :                          @230
  3227: 57 07 76                 jump @242 if a0 <s 0
      :                          @231
  3230: 64 53                    t1 = s0
  3232: 33 08 00 10              a1 = 0x1000
  3236: 33 02 40 00 03           t0 = 0x30040
  3241: c8 82 0b                 a4 = t0 + a1
  3244: 01                       fallthrough
      :                          @232
  3245: 82 bc                    a5 = u64 [a4]
  3247: c8 7c 0a                 a3 = a5 + a0
  3250: ac ca 5d                 jump @240 if a3 <u a5
      :                          @233
  3253: 95 a5 01                 s0 = a3 + 0x1
  3256: 88 56 01                 s1 = s0 <u 0x1
  3259: d8 58 05                 s0 = a1 <u s0
  3262: d4 65 05                 s0 = s0 | s1
  3265: 52 05 4e                 jump @240 if s0 != 0
      :                          @234
  3268: 82 b6                    s1 = u64 [a4]
  3270: ab c6 e7                 jump @232 if s1 != a5
      :                          @235
  3273: 7b ba                    u64 [a4] = a3
  3275: c9 a2 08                 a1 = t0 - a3
  3278: 95 88 00 10              a1 = a1 + 0x1000
  3282: 64 35                    s0 = t1
  3284: 28 06                    jump @237
      :                          @236
  3286: 33 08 01                 a1 = 0x1
  3289: 01                       fallthrough
      :                          @237
  3290: 7b 17                    u64 [sp] = a0
  3292: 7b 18 08                 u64 [sp + 0x8] = a1
  3295: 49 11 10                 u64 [sp + 16] = 0
  3298: 33 08 08 02 01           a1 = 0x10208
  3303: 64 17                    a0 = sp
  3305: 50 10 36 0c 06           ra = 54, jump @354
      :                          @238 [@dyn 27]
  3310: 52 07 22                 jump @241 if a0 != 0
      :                          @239
  3313: 82 17 10                 a0 = u64 [sp + 0x10]
  3316: 82 18 08                 a1 = u64 [sp + 0x8]
  3319: 82 19                    a2 = u64 [sp]
  3321: 7b 57 10                 u64 [s0 + 0x10] = a0
  3324: 7b 58 08                 u64 [s0 + 0x8] = a1
  3327: 7b 59                    u64 [s0] = a2
  3329: 82 10 30                 ra = u64 [sp + 0x30]
  3332: 82 15 28                 s0 = u64 [sp + 0x28]
  3335: 82 16 20                 s1 = u64 [sp + 0x20]
  3338: 95 11 38                 sp = sp + 0x38
  3341: 32 00                    ret
      :                          @240
  3343: 00                       trap
      :                          @241
  3344: 00                       trap
      :                          @242
  3345: 00                       trap
      :                          @243 [@dyn 28]
  3346: 82 72                    t0 = u64 [a0]
  3348: 33 09 00 f0              a2 = 0xfffffffffffff000
  3352: 95 2a ff ef              a3 = t0 + 0xffffffffffffefff
  3356: ac 9a 27                 jump @249 if a3 <u a2
      :                          @244
  3359: 82 77 08                 a0 = u64 [a0 + 0x8]
  3362: 33 09 40 00 03           a2 = 0x30040
  3367: 95 99 00 10              a2 = a2 + 0x1000
  3371: 01                       fallthrough
      :                          @245
  3372: 82 9a                    a3 = u64 [a2]
  3374: c9 a9 0b                 a4 = a2 - a3
  3377: ab 7b 12                 jump @249 if a4 != a0
      :                          @246
  3380: c9 2a 0b                 a4 = a3 - t0
  3383: 01                       fallthrough
      :                          @247
  3384: 82 9c                    a5 = u64 [a2]
  3386: ab ac f2                 jump @245 if a5 != a3
      :                          @248
  3389: 7b 9b                    u64 [a2] = a4
  3391: 33 08                    a1 = 0
  3393: 32 00                    ret
      :                          @249
  3395: 32 00                    ret
      :                          @250 [@dyn 29]
  3397: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3400: 7b 10 18                 u64 [sp + 0x18] = ra
  3403: 7b 15 10                 u64 [sp + 0x10] = s0
  3406: 7b 16 08                 u64 [sp + 0x8] = s1
  3409: 64 75                    s0 = a0
  3411: 82 7a 10                 a3 = u64 [a0 + 0x10]
  3414: 82 77                    a0 = u64 [a0]
  3416: c9 a7 07                 a0 = a0 - a3
  3419: 64 96                    s1 = a2
  3421: ac 97 2a                 jump @253 if a0 <u a2
      :                          @251
  3424: 7b 1a                    u64 [sp] = a3
  3426: 82 57 08                 a0 = u64 [s0 + 0x8]
  3429: c8 a7 07                 a0 = a0 + a3
  3432: 64 69                    a2 = s1
  3434: 50 10 3c 4a 01           ra = 60, jump @272
      :                          @252 [@dyn 30]
  3439: 82 17                    a0 = u64 [sp]
  3441: c8 76 06                 s1 = s1 + a0
  3444: 7b 56 10                 u64 [s0 + 0x10] = s1
  3447: 33 07                    a0 = 0
  3449: 82 10 18                 ra = u64 [sp + 0x18]
  3452: 82 15 10                 s0 = u64 [sp + 0x10]
  3455: 82 16 08                 s1 = u64 [sp + 0x8]
  3458: 95 11 20                 sp = sp + 0x20
  3461: 32 00                    ret
      :                          @253
  3463: 64 57                    a0 = s0
  3465: 7b 18                    u64 [sp] = a1
  3467: 64 a8                    a1 = a3
  3469: 64 69                    a2 = s1
  3471: 50 10 3e 88 fc           ra = 62, jump @166
      :                          @254 [@dyn 31]
  3476: 82 18                    a1 = u64 [sp]
  3478: 82 5a 10                 a3 = u64 [s0 + 0x10]
  3481: 28 c7                    jump @251
      :                          @255 [@dyn 32]
  3483: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  3486: 7b 10 20                 u64 [sp + 0x20] = ra
  3489: 7b 15 18                 u64 [sp + 0x18] = s0
  3492: 7b 16 10                 u64 [sp + 0x10] = s1
  3495: 64 86                    s1 = a1
  3497: 83 88                    i32 a1 = a1 + 0
  3499: 33 09 80 00              a2 = 0x80
  3503: 64 7a                    a3 = a0
  3505: ae 98 2b                 jump @260 if a1 >=u a2
      :                          @256
  3508: 82 a8 10                 a1 = u64 [a3 + 0x10]
  3511: 82 a7                    a0 = u64 [a3]
  3513: ab 78 12                 jump @259 if a1 != a0
      :                          @257
  3516: 64 a7                    a0 = a3
  3518: 64 a5                    s0 = a3
  3520: 50 10 42 0d fe           ra = 66, jump @210
      :                          @258 [@dyn 33]
  3525: 64 5a                    a3 = s0
  3527: 82 58 10                 a1 = u64 [s0 + 0x10]
  3530: 01                       fallthrough
      :                          @259
  3531: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3534: c8 87 07                 a0 = a0 + a1
  3537: 78 76                    u8 [a0] = s1
  3539: 95 88 01                 a1 = a1 + 0x1
  3542: 7b a8 10                 u64 [a3 + 0x10] = a1
  3545: 28 ab 00                 jump @268
      :                          @260
  3548: 8b 67 0b                 i32 a0 = s1 >> 0xb
  3551: 48 11 0c                 u32 [sp + 12] = 0
  3554: 52 07 1c                 jump @262 if a0 != 0
      :                          @261
  3557: 98 67 06                 a0 = s1 >> 0x6
  3560: 86 77 c0 00              a0 = a0 | 0xc0
  3564: 78 17 0c                 u8 [sp + 0xc] = a0
  3567: 84 67 3f                 a0 = s1 & 0x3f
  3570: 86 77 80 00              a0 = a0 | 0x80
  3574: 78 17 0d                 u8 [sp + 0xd] = a0
  3577: 33 06 02                 s1 = 0x2
  3580: 28 63                    jump @265
      :                          @262
  3582: 8b 67 10                 i32 a0 = s1 >> 0x10
  3585: 52 07 29                 jump @264 if a0 != 0
      :                          @263
  3588: 98 67 0c                 a0 = s1 >> 0xc
  3591: 86 77 e0 00              a0 = a0 | 0xe0
  3595: 78 17 0c                 u8 [sp + 0xc] = a0
  3598: 97 67 34                 a0 = s1 << 0x34
  3601: 98 77 3a                 a0 = a0 >> 0x3a
  3604: 95 77 80 00              a0 = a0 + 0x80
  3608: 78 17 0d                 u8 [sp + 0xd] = a0
  3611: 84 67 3f                 a0 = s1 & 0x3f
  3614: 86 77 80 00              a0 = a0 | 0x80
  3618: 78 17 0e                 u8 [sp + 0xe] = a0
  3621: 33 06 03                 s1 = 0x3
  3624: 28 37                    jump @265
      :                          @264
  3626: 97 67 2b                 a0 = s1 << 0x2b
  3629: 98 77 3d                 a0 = a0 >> 0x3d
  3632: 95 77 f0 00              a0 = a0 + 0xf0
  3636: 78 17 0c                 u8 [sp + 0xc] = a0
  3639: 97 67 2e                 a0 = s1 << 0x2e
  3642: 98 77 3a                 a0 = a0 >> 0x3a
  3645: 95 77 80 00              a0 = a0 + 0x80
  3649: 78 17 0d                 u8 [sp + 0xd] = a0
  3652: 97 67 34                 a0 = s1 << 0x34
  3655: 98 77 3a                 a0 = a0 >> 0x3a
  3658: 95 77 80 00              a0 = a0 + 0x80
  3662: 78 17 0e                 u8 [sp + 0xe] = a0
  3665: 84 67 3f                 a0 = s1 & 0x3f
  3668: 86 77 80 00              a0 = a0 | 0x80
  3672: 78 17 0f                 u8 [sp + 0xf] = a0
  3675: 33 06 04                 s1 = 0x4
  3678: 01                       fallthrough
      :                          @265
  3679: 82 a5 10                 s0 = u64 [a3 + 0x10]
  3682: 82 a7                    a0 = u64 [a3]
  3684: c9 57 07                 a0 = a0 - s0
  3687: ac 67 2d                 jump @269 if a0 <u s1
      :                          @266
  3690: 7b 1a                    u64 [sp] = a3
  3692: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3695: c8 57 07                 a0 = a0 + s0
  3698: 95 18 0c                 a1 = sp + 0xc
  3701: 64 69                    a2 = s1
  3703: 50 10 44 3d              ra = 68, jump @272
      :                          @267 [@dyn 34]
  3707: c8 56 06                 s1 = s1 + s0
  3710: 82 17                    a0 = u64 [sp]
  3712: 7b 76 10                 u64 [a0 + 0x10] = s1
  3715: 01                       fallthrough
      :                          @268
  3716: 33 07                    a0 = 0
  3718: 82 10 20                 ra = u64 [sp + 0x20]
  3721: 82 15 18                 s0 = u64 [sp + 0x18]
  3724: 82 16 10                 s1 = u64 [sp + 0x10]
  3727: 95 11 28                 sp = sp + 0x28
  3730: 32 00                    ret
      :                          @269
  3732: 64 a7                    a0 = a3
  3734: 64 58                    a1 = s0
  3736: 64 69                    a2 = s1
  3738: 64 a5                    s0 = a3
  3740: 50 10 46 7b fb           ra = 70, jump @166
      :                          @270 [@dyn 35]
  3745: 64 5a                    a3 = s0
  3747: 82 55 10                 s0 = u64 [s0 + 0x10]
  3750: 28 c4                    jump @266
      :                          @271 [@dyn 36]
  3752: 64 8a                    a3 = a1
  3754: 33 08 08 02 01           a1 = 0x10208
  3759: 64 a9                    a2 = a3
  3761: 28 44 04                 jump @354
      :                          @272
  3764: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3767: 7b 10 18                 u64 [sp + 0x18] = ra
  3770: 7b 15 10                 u64 [sp + 0x10] = s0
  3773: 7b 16 08                 u64 [sp + 0x8] = s1
  3776: 53 19 10 64              jump @281 if a2 <u 16
      :                          @273
  3780: 8d 7a                    i32 a3 = -a0
  3782: 84 a2 07                 t0 = a3 & 0x7
  3785: c8 27 0b                 a4 = a0 + t0
  3788: 51 02 15                 jump @276 if t0 == 0
      :                          @274
  3791: 64 8c                    a5 = a1
  3793: 64 75                    s0 = a0
  3795: 01                       fallthrough
      :                          @275
  3796: 7c ca                    a3 = u8 [a5]
  3798: 78 5a                    u8 [s0] = a3
  3800: 95 55 01                 s0 = s0 + 0x1
  3803: 95 cc 01                 a5 = a5 + 0x1
  3806: ac b5 f6                 jump @275 if s0 <u a4
      :                          @276
  3809: c8 28 03                 t1 = a1 + t0
  3812: c9 29 02                 t0 = a2 - t0
  3815: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  3818: 84 38 07                 a1 = t1 & 0x7
  3821: c8 4b 0a                 a3 = a4 + t2
  3824: 51 08 3b                 jump @283 if a1 == 0
      :                          @277
  3827: 58 04 4b                 jump @286 if t2 <=s 0
      :                          @278
  3830: 97 38 03                 a1 = t1 << 0x3
  3833: 84 80 38                 ra = a1 & 0x38
  3836: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  3839: 82 c5                    s0 = u64 [a5]
  3841: 8d 88                    i32 a1 = -a1
  3843: 84 88 38                 a1 = a1 & 0x38
  3846: 95 cc 08                 a5 = a5 + 0x8
  3849: 01                       fallthrough
      :                          @279
  3850: 82 c6                    s1 = u64 [a5]
  3852: d0 05 05                 s0 = s0 >> ra
  3855: cf 86 09                 a2 = s1 << a1
  3858: d4 59 09                 a2 = a2 | s0
  3861: 7b b9                    u64 [a4] = a2
  3863: 95 bb 08                 a4 = a4 + 0x8
  3866: 95 cc 08                 a5 = a5 + 0x8
  3869: 64 65                    s0 = s1
  3871: ac ab eb                 jump @279 if a4 <u a3
      :                          @280
  3874: 28 1c                    jump @286
      :                          @281
  3876: 64 7a                    a3 = a0
  3878: 52 09 21                 jump @287 if a2 != 0
      :                          @282
  3881: 28 2f                    jump @289
      :                          @283
  3883: 58 04 13                 jump @286 if t2 <=s 0
      :                          @284
  3886: 64 38                    a1 = t1
  3888: 01                       fallthrough
      :                          @285
  3889: 82 89                    a2 = u64 [a1]
  3891: 7b b9                    u64 [a4] = a2
  3893: 95 bb 08                 a4 = a4 + 0x8
  3896: 95 88 08                 a1 = a1 + 0x8
  3899: ac ab f6                 jump @285 if a4 <u a3
      :                          @286
  3902: c8 43 08                 a1 = t1 + t2
  3905: 84 29 07                 a2 = t0 & 0x7
  3908: 51 09 14                 jump @289 if a2 == 0
      :                          @287
  3911: c8 a9 09                 a2 = a2 + a3
  3914: 01                       fallthrough
      :                          @288
  3915: 7c 8b                    a4 = u8 [a1]
  3917: 78 ab                    u8 [a3] = a4
  3919: 95 aa 01                 a3 = a3 + 0x1
  3922: 95 88 01                 a1 = a1 + 0x1
  3925: ac 9a f6                 jump @288 if a3 <u a2
      :                          @289
  3928: 82 10 18                 ra = u64 [sp + 0x18]
  3931: 82 15 10                 s0 = u64 [sp + 0x10]
  3934: 82 16 08                 s1 = u64 [sp + 0x8]
  3937: 95 11 20                 sp = sp + 0x20
  3940: 32 00                    ret
      :                          @290 [@dyn 37]
  3942: 82 77                    a0 = u64 [a0]
  3944: 01                       fallthrough
      :                          @291
  3945: 28                       jump @291
      :                          @292
  3946: 95 11 a8                 sp = sp + 0xffffffffffffffa8
  3949: 7b 10 50                 u64 [sp + 0x50] = ra
  3952: 7b 15 48                 u64 [sp + 0x48] = s0
  3955: 7b 16 40                 u64 [sp + 0x40] = s1
  3958: 7b 18                    u64 [sp] = a1
  3960: 98 79 04                 a2 = a0 >> 0x4
  3963: 33 08 27                 a1 = 0x27
  3966: 33 0a 95 00 01           a3 = 0x10095
  3971: 53 29 71 02 7b           jump @295 if a2 <u 625
      :                          @293
  3976: 33 08 27                 a1 = 0x27
  3979: 95 1b 3e                 a4 = sp + 0x3e
  3982: 3a 09 00 00 03           a2 = u64 [0x30000]
  3987: 7b 19 10                 u64 [sp + 0x10] = a2
  3990: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
  3996: 33 03 7b 14              t1 = 0x147b
  4000: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
  4006: 01                       fallthrough
      :                          @294
  4007: 64 72                    t0 = a0
  4009: 82 17 10                 a0 = u64 [sp + 0x10]
  4012: d6 72 07                 a0 = t0 mulhu a0
  4015: 98 77 0b                 a0 = a0 >> 0xb
  4018: 82 19 08                 a2 = u64 [sp + 0x8]
  4021: c0 97 09                 i32 a2 = a0 * a2
  4024: c8 29 06                 s1 = a2 + t0
  4027: 97 69 30                 a2 = s1 << 0x30
  4030: 98 99 32                 a2 = a2 >> 0x32
  4033: ca 39 09                 a2 = a2 * t1
  4036: 98 94 11                 t2 = a2 >> 0x11
  4039: 98 99 10                 a2 = a2 >> 0x10
  4042: 84 99 fe 07              a2 = a2 & 0x7fe
  4046: 96 4c 9c                 a5 = t2 * 0xffffffffffffff9c
  4049: c8 6c 0c                 a5 = a5 + s1
  4052: 97 cc 31                 a5 = a5 << 0x31
  4055: 98 cc 30                 a5 = a5 >> 0x30
  4058: c8 a9 09                 a2 = a2 + a3
  4061: 7c 96                    s1 = u8 [a2]
  4063: 7c 99 01                 a2 = u8 [a2 + 0x1]
  4066: c8 ac 0c                 a5 = a5 + a3
  4069: 7c c5 01                 s0 = u8 [a5 + 0x1]
  4072: 7c cc                    a5 = u8 [a5]
  4074: 78 b9 ff                 u8 [a4 + 0xffffffffffffffff] = a2
  4077: 78 b6 fe                 u8 [a4 + 0xfffffffffffffffe] = s1
  4080: 78 b5 01                 u8 [a4 + 0x1] = s0
  4083: 78 bc                    u8 [a4] = a5
  4085: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
  4088: 95 bb fc                 a4 = a4 + 0xfffffffffffffffc
  4091: ac 20 ac                 jump @294 if ra <u t0
      :                          @295
  4094: 54 17 63 36              jump @297 if a0 <=u 99
      :                          @296
  4098: 97 79 30                 a2 = a0 << 0x30
  4101: 98 99 32                 a2 = a2 >> 0x32
  4104: 96 99 7b 14              a2 = a2 * 0x147b
  4108: 98 99 11                 a2 = a2 >> 0x11
  4111: 96 9b 9c                 a4 = a2 * 0xffffffffffffff9c
  4114: c8 b7 07                 a0 = a0 + a4
  4117: 97 77 31                 a0 = a0 << 0x31
  4120: 98 77 30                 a0 = a0 >> 0x30
  4123: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  4126: c8 a7 07                 a0 = a0 + a3
  4129: 7c 7b 01                 a4 = u8 [a0 + 0x1]
  4132: 7c 77                    a0 = u8 [a0]
  4134: 95 1c 19                 a5 = sp + 0x19
  4137: c8 8c 0c                 a5 = a5 + a1
  4140: 78 cb 01                 u8 [a5 + 0x1] = a4
  4143: 78 c7                    u8 [a5] = a0
  4145: 64 97                    a0 = a2
  4147: 01                       fallthrough
      :                          @297
  4148: 55 17 0a 14              jump @299 if a0 >=u 10
      :                          @298
  4152: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  4155: 95 19 19                 a2 = sp + 0x19
  4158: c8 89 09                 a2 = a2 + a1
  4161: 83 77 30                 i32 a0 = a0 + 0x30
  4164: 78 97                    u8 [a2] = a0
  4166: 28 1c                    jump @300
      :                          @299
  4168: 97 77 01                 a0 = a0 << 0x1
  4171: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  4174: c8 a7 07                 a0 = a0 + a3
  4177: 7c 79 01                 a2 = u8 [a0 + 0x1]
  4180: 7c 77                    a0 = u8 [a0]
  4182: 95 1a 19                 a3 = sp + 0x19
  4185: c8 8a 0a                 a3 = a3 + a1
  4188: 78 a9 01                 u8 [a3 + 0x1] = a2
  4191: 78 a7                    u8 [a3] = a0
  4193: 01                       fallthrough
      :                          @300
  4194: 95 1a 19                 a3 = sp + 0x19
  4197: c8 8a 0a                 a3 = a3 + a1
  4200: 9a 8b 27                 a4 = 0x27 - a1
  4203: 33 08 88 00 01           a1 = 0x10088
  4208: 82 17                    a0 = u64 [sp]
  4210: 33 09                    a2 = 0
  4212: 50 10 4c 12              ra = 76, jump @302
      :                          @301 [@dyn 38]
  4216: 82 10 50                 ra = u64 [sp + 0x50]
  4219: 82 15 48                 s0 = u64 [sp + 0x48]
  4222: 82 16 40                 s1 = u64 [sp + 0x40]
  4225: 95 11 58                 sp = sp + 0x58
  4228: 32 00                    ret
      :                          @302
  4230: 95 11 98                 sp = sp + 0xffffffffffffff98
  4233: 7b 10 60                 u64 [sp + 0x60] = ra
  4236: 7b 15 58                 u64 [sp + 0x58] = s0
  4239: 7b 16 50                 u64 [sp + 0x50] = s1
  4242: 80 73 34                 t1 = u32 [a0 + 0x34]
  4245: 7b 1a 20                 u64 [sp + 0x20] = a3
  4248: 64 9c                    a5 = a2
  4250: 84 36 01                 s1 = t1 & 0x1
  4253: 33 02 2b                 t0 = 0x2b
  4256: 33 09 00 00 11           a2 = 0x110000
  4261: 84 3a 04                 a3 = t1 & 0x4
  4264: 7b 1b 28                 u64 [sp + 0x28] = a4
  4267: c8 b6 04                 t2 = s1 + a4
  4270: 7b 1c 30                 u64 [sp + 0x30] = a5
  4273: 52 0a 10                 jump @305 if a3 != 0
      :                          @303
  4276: 49 11 38                 u64 [sp + 56] = 0
  4279: 82 78                    a1 = u64 [a0]
  4281: 94 69 2b                 a2 = 0x2b if s1 != 0
  4284: 52 08 35                 jump @309 if a1 != 0
      :                          @304
  4287: 28 56                    jump @314
      :                          @305
  4289: 7b 18 38                 u64 [sp + 0x38] = a1
  4292: 33 09                    a2 = 0
  4294: 51 0c 1b                 jump @308 if a5 == 0
      :                          @306
  4297: 82 1b 38                 a4 = u64 [sp + 0x38]
  4300: 01                       fallthrough
      :                          @307
  4301: 7d b5                    s0 = i8 [a4]
  4303: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
  4306: 85 5a 01                 a3 = s0 ^ 0x1
  4309: c8 a9 09                 a2 = a2 + a3
  4312: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  4315: 95 bb 01                 a4 = a4 + 0x1
  4318: 52 0c ef                 jump @307 if a5 != 0
      :                          @308
  4321: c8 94 04                 t2 = t2 + a2
  4324: 33 09 00 00 11           a2 = 0x110000
  4329: 82 78                    a1 = u64 [a0]
  4331: db 62 09                 a2 = t0 if s1 != 0
  4334: 51 08 27                 jump @314 if a1 == 0
      :                          @309
  4337: 82 7a 08                 a3 = u64 [a0 + 0x8]
  4340: ae a4 21                 jump @314 if t2 >=u a3
      :                          @310
  4343: 84 38 08                 a1 = t1 & 0x8
  4346: 52 08 50                 jump @317 if a1 != 0
      :                          @311
  4349: 7c 76 38                 s1 = u8 [a0 + 0x38]
  4352: c9 4a 0a                 a3 = a3 - t2
  4355: 7b 19 18                 u64 [sp + 0x18] = a2
  4358: 5a 16 01 9d 00           jump @324 if s1 >s 1
      :                          @312
  4363: 52 06 aa 00              jump @326 if s1 != 0
      :                          @313
  4367: 7b 1a 10                 u64 [sp + 0x10] = a3
  4370: 28 a9 00                 jump @327
      :                          @314
  4373: 82 75 20                 s0 = u64 [a0 + 0x20]
  4376: 82 76 28                 s1 = u64 [a0 + 0x28]
  4379: 64 57                    a0 = s0
  4381: 64 68                    a1 = s1
  4383: 82 1a 38                 a3 = u64 [sp + 0x38]
  4386: 82 1b 30                 a4 = u64 [sp + 0x30]
  4389: 50 10 4e 6c 01           ra = 78, jump @347
      :                          @315 [@dyn 39]
  4394: 33 08 01                 a1 = 0x1
  4397: 52 07 bb 00              jump @332 if a0 != 0
      :                          @316
  4401: 82 6c 18                 a5 = u64 [s1 + 0x18]
  4404: 64 57                    a0 = s0
  4406: 82 18 20                 a1 = u64 [sp + 0x20]
  4409: 82 19 28                 a2 = u64 [sp + 0x28]
  4412: 82 10 60                 ra = u64 [sp + 0x60]
  4415: 82 15 58                 s0 = u64 [sp + 0x58]
  4418: 82 16 50                 s1 = u64 [sp + 0x50]
  4421: 95 11 68                 sp = sp + 0x68
  4424: 32 0c                    jump [a5]
      :                          @317
  4426: 7b 1a 40                 u64 [sp + 0x40] = a3
  4429: 64 45                    s0 = t2
  4431: 81 78 30                 a1 = i32 [a0 + 0x30]
  4434: 7b 18 10                 u64 [sp + 0x10] = a1
  4437: 7c 7a 38                 a3 = u8 [a0 + 0x38]
  4440: 7b 1a 08                 u64 [sp + 0x8] = a3
  4443: 82 7a 20                 a3 = u64 [a0 + 0x20]
  4446: 82 78 28                 a1 = u64 [a0 + 0x28]
  4449: 48 17 30 30              u32 [a0 + 48] = 0x30
  4453: 7b 17                    u64 [sp] = a0
  4455: 46 17 38 01              u8 [a0 + 56] = 0x1
  4459: 7b 1a 48                 u64 [sp + 0x48] = a3
  4462: 64 a7                    a0 = a3
  4464: 64 86                    s1 = a1
  4466: 82 1a 38                 a3 = u64 [sp + 0x38]
  4469: 82 1b 30                 a4 = u64 [sp + 0x30]
  4472: 50 10 50 19 01           ra = 80, jump @347
      :                          @318 [@dyn 40]
  4477: 52 07 67                 jump @331 if a0 != 0
      :                          @319
  4480: 82 17 40                 a0 = u64 [sp + 0x40]
  4483: c9 57 05                 s0 = a0 - s0
  4486: 95 55 01                 s0 = s0 + 0x1
  4489: 01                       fallthrough
      :                          @320
  4490: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  4493: 51 05 c6 00              jump @342 if s0 == 0
      :                          @321
  4497: 82 69 20                 a2 = u64 [s1 + 0x20]
  4500: 33 08 30                 a1 = 0x30
  4503: 82 17 48                 a0 = u64 [sp + 0x48]
  4506: b4 90 01 52              ra = 82, jump [a2]
      :                          @322 [@dyn 41]
  4510: 51 07 ec                 jump @320 if a0 == 0
      :                          @323
  4513: 28 43                    jump @331
      :                          @324
  4515: 52 16 02 12              jump @326 if s1 != 2
      :                          @325
  4519: 98 a6 01                 s1 = a3 >> 0x1
  4522: 95 a8 01                 a1 = a3 + 0x1
  4525: 98 88 01                 a1 = a1 >> 0x1
  4528: 7b 18 10                 u64 [sp + 0x10] = a1
  4531: 28 08                    jump @327
      :                          @326
  4533: 64 a6                    s1 = a3
  4535: 49 11 10                 u64 [sp + 16] = 0
  4538: 01                       fallthrough
      :                          @327
  4539: 82 78 20                 a1 = u64 [a0 + 0x20]
  4542: 7b 18 48                 u64 [sp + 0x48] = a1
  4545: 82 75 28                 s0 = u64 [a0 + 0x28]
  4548: 81 77 30                 a0 = i32 [a0 + 0x30]
  4551: 7b 17 40                 u64 [sp + 0x40] = a0
  4554: 95 66 01                 s1 = s1 + 0x1
  4557: 01                       fallthrough
      :                          @328
  4558: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  4561: 51 06 27                 jump @333 if s1 == 0
      :                          @329
  4564: 82 59 20                 a2 = u64 [s0 + 0x20]
  4567: 82 17 48                 a0 = u64 [sp + 0x48]
  4570: 82 18 40                 a1 = u64 [sp + 0x40]
  4573: b4 90 01 54              ra = 84, jump [a2]
      :                          @330 [@dyn 42]
  4577: 51 07 ed                 jump @328 if a0 == 0
      :                          @331
  4580: 33 08 01                 a1 = 0x1
  4583: 01                       fallthrough
      :                          @332
  4584: 64 87                    a0 = a1
  4586: 82 10 60                 ra = u64 [sp + 0x60]
  4589: 82 15 58                 s0 = u64 [sp + 0x58]
  4592: 82 16 50                 s1 = u64 [sp + 0x50]
  4595: 95 11 68                 sp = sp + 0x68
  4598: 32 00                    ret
      :                          @333
  4600: 82 16 48                 s1 = u64 [sp + 0x48]
  4603: 64 67                    a0 = s1
  4605: 64 58                    a1 = s0
  4607: 82 19 18                 a2 = u64 [sp + 0x18]
  4610: 82 1a 38                 a3 = u64 [sp + 0x38]
  4613: 82 1b 30                 a4 = u64 [sp + 0x30]
  4616: 50 10 56 89 00           ra = 86, jump @347
      :                          @334 [@dyn 43]
  4621: 33 08 01                 a1 = 0x1
  4624: 52 07 d8                 jump @332 if a0 != 0
      :                          @335
  4627: 82 5a 18                 a3 = u64 [s0 + 0x18]
  4630: 64 67                    a0 = s1
  4632: 82 18 20                 a1 = u64 [sp + 0x20]
  4635: 82 19 28                 a2 = u64 [sp + 0x28]
  4638: b4 a0 01 58              ra = 88, jump [a3]
      :                          @336 [@dyn 44]
  4642: 33 08 01                 a1 = 0x1
  4645: 52 07 c3                 jump @332 if a0 != 0
      :                          @337
  4648: 82 17 10                 a0 = u64 [sp + 0x10]
  4651: 9a 77                    a0 = -a0
  4653: 7b 17 38                 u64 [sp + 0x38] = a0
  4656: 33 06 ff                 s1 = 0xffffffffffffffff
  4659: 01                       fallthrough
      :                          @338
  4660: 82 17 38                 a0 = u64 [sp + 0x38]
  4663: c8 67 07                 a0 = a0 + s1
  4666: 51 17 ff 42              jump @345 if a0 == 4294967295
      :                          @339
  4670: 82 59 20                 a2 = u64 [s0 + 0x20]
  4673: 82 17 48                 a0 = u64 [sp + 0x48]
  4676: 82 18 40                 a1 = u64 [sp + 0x40]
  4679: b4 90 01 5a              ra = 90, jump [a2]
      :                          @340 [@dyn 45]
  4683: 95 66 01                 s1 = s1 + 0x1
  4686: 51 07 e6                 jump @338 if a0 == 0
      :                          @341
  4689: 28 37                    jump @346
      :                          @342
  4691: 82 6a 18                 a3 = u64 [s1 + 0x18]
  4694: 82 17 48                 a0 = u64 [sp + 0x48]
  4697: 82 18 20                 a1 = u64 [sp + 0x20]
  4700: 82 19 28                 a2 = u64 [sp + 0x28]
  4703: b4 a0 01 5c              ra = 92, jump [a3]
      :                          @343 [@dyn 46]
  4707: 33 08 01                 a1 = 0x1
  4710: 52 07 82                 jump @332 if a0 != 0
      :                          @344
  4713: 33 08                    a1 = 0
  4715: 82 16                    s1 = u64 [sp]
  4717: 82 17 10                 a0 = u64 [sp + 0x10]
  4720: 7a 67 30                 u32 [s1 + 0x30] = a0
  4723: 82 17 08                 a0 = u64 [sp + 0x8]
  4726: 78 67 38                 u8 [s1 + 0x38] = a0
  4729: 28 6f ff                 jump @332
      :                          @345
  4732: 82 16 10                 s1 = u64 [sp + 0x10]
  4735: 82 17 10                 a0 = u64 [sp + 0x10]
  4738: d8 76 08                 a1 = s1 <u a0
  4741: 28 63 ff                 jump @332
      :                          @346
  4744: 82 17 10                 a0 = u64 [sp + 0x10]
  4747: d8 76 08                 a1 = s1 <u a0
  4750: 28 5a ff                 jump @332
      :                          @347
  4753: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  4756: 7b 10 20                 u64 [sp + 0x20] = ra
  4759: 7b 15 18                 u64 [sp + 0x18] = s0
  4762: 7b 16 10                 u64 [sp + 0x10] = s1
  4765: 83 9c                    i32 a5 = a2 + 0
  4767: 33 02 00 00 11           t0 = 0x110000
  4772: 64 a6                    s1 = a3
  4774: 64 85                    s0 = a1
  4776: 64 7a                    a3 = a0
  4778: aa 2c 20                 jump @350 if a5 == t0
      :                          @348
  4781: 82 5c 20                 a5 = u64 [s0 + 0x20]
  4784: 64 a7                    a0 = a3
  4786: 64 98                    a1 = a2
  4788: 7b 1b 08                 u64 [sp + 0x8] = a4
  4791: 7b 1a                    u64 [sp] = a3
  4793: b4 c0 01 5e              ra = 94, jump [a5]
      :                          @349 [@dyn 47]
  4797: 82 1a                    a3 = u64 [sp]
  4799: 82 1b 08                 a4 = u64 [sp + 0x8]
  4802: 64 78                    a1 = a0
  4804: 33 07 01                 a0 = 0x1
  4807: 52 08 20                 jump @353 if a1 != 0
      :                          @350
  4810: 51 06 1a                 jump @352 if s1 == 0
      :                          @351
  4813: 82 5c 18                 a5 = u64 [s0 + 0x18]
  4816: 64 a7                    a0 = a3
  4818: 64 68                    a1 = s1
  4820: 64 b9                    a2 = a4
  4822: 82 10 20                 ra = u64 [sp + 0x20]
  4825: 82 15 18                 s0 = u64 [sp + 0x18]
  4828: 82 16 10                 s1 = u64 [sp + 0x10]
  4831: 95 11 28                 sp = sp + 0x28
  4834: 32 0c                    jump [a5]
      :                          @352
  4836: 33 07                    a0 = 0
  4838: 01                       fallthrough
      :                          @353
  4839: 82 10 20                 ra = u64 [sp + 0x20]
  4842: 82 15 18                 s0 = u64 [sp + 0x18]
  4845: 82 16 10                 s1 = u64 [sp + 0x10]
  4848: 95 11 28                 sp = sp + 0x28
  4851: 32 00                    ret
      :                          @354
  4853: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  4857: 7b 10 80 00              u64 [sp + 0x80] = ra
  4861: 7b 15 78                 u64 [sp + 0x78] = s0
  4864: 7b 16 70                 u64 [sp + 0x70] = s1
  4867: 49 11 60 20              u64 [sp + 96] = 0x20
  4871: 33 0a 03                 a3 = 0x3
  4874: 78 1a 68                 u8 [sp + 0x68] = a3
  4877: 82 96 20                 s1 = u64 [a2 + 0x20]
  4880: 49 11 30                 u64 [sp + 48] = 0
  4883: 49 11 40                 u64 [sp + 64] = 0
  4886: 7b 17 50                 u64 [sp + 0x50] = a0
  4889: 7b 18 58                 u64 [sp + 0x58] = a1
  4892: 51 06 07 01              jump @376 if s1 == 0
      :                          @355
  4896: 82 97 28                 a0 = u64 [a2 + 0x28]
  4899: 51 07 74 01              jump @386 if a0 == 0
      :                          @356
  4903: 49 11 28                 u64 [sp + 40] = 0
  4906: 82 95                    s0 = u64 [a2]
  4908: 7b 19 08                 u64 [sp + 0x8] = a2
  4911: 82 98 10                 a1 = u64 [a2 + 0x10]
  4914: 7b 18 18                 u64 [sp + 0x18] = a1
  4917: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  4920: 97 88 03                 a1 = a1 << 0x3
  4923: 98 88 03                 a1 = a1 >> 0x3
  4926: 95 88 01                 a1 = a1 + 0x1
  4929: 7b 18                    u64 [sp] = a1
  4931: 95 55 08                 s0 = s0 + 0x8
  4934: 96 78 38                 a1 = a0 * 0x38
  4937: 95 66 18                 s1 = s1 + 0x18
  4940: 33 07 4a                 a0 = 0x4a
  4943: 7b 17 10                 u64 [sp + 0x10] = a0
  4946: 01                       fallthrough
      :                          @357
  4947: 7b 18 20                 u64 [sp + 0x20] = a1
  4950: 82 59                    a2 = u64 [s0]
  4952: 51 09 17                 jump @360 if a2 == 0
      :                          @358
  4955: 82 1a 58                 a3 = u64 [sp + 0x58]
  4958: 82 17 50                 a0 = u64 [sp + 0x50]
  4961: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  4964: 82 aa 18                 a3 = u64 [a3 + 0x18]
  4967: b4 a0 01 60              ra = 96, jump [a3]
      :                          @359 [@dyn 48]
  4971: 52 07 51 01              jump @389 if a0 != 0
      :                          @360
  4975: 81 67 10                 a0 = i32 [s1 + 0x10]
  4978: 7a 17 60                 u32 [sp + 0x60] = a0
  4981: 7c 67 18                 a0 = u8 [s1 + 0x18]
  4984: 78 17 68                 u8 [sp + 0x68] = a0
  4987: 81 67 14                 a0 = i32 [s1 + 0x14]
  4990: 7a 17 64                 u32 [sp + 0x64] = a0
  4993: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  4996: 82 67                    a0 = u64 [s1]
  4998: 51 08 26                 jump @365 if a1 == 0
      :                          @361
  5001: 52 18 01 16              jump @363 if a1 != 1
      :                          @362
  5005: 97 77 04                 a0 = a0 << 0x4
  5008: 82 18 18                 a1 = u64 [sp + 0x18]
  5011: c8 87 07                 a0 = a0 + a1
  5014: 82 78 08                 a1 = u64 [a0 + 0x8]
  5017: 82 19 10                 a2 = u64 [sp + 0x10]
  5020: aa 98 07                 jump @364 if a1 == a2
      :                          @363
  5023: 33 08                    a1 = 0
  5025: 28 0f                    jump @366
      :                          @364
  5027: 82 77                    a0 = u64 [a0]
  5029: 82 77                    a0 = u64 [a0]
  5031: 33 08 01                 a1 = 0x1
  5034: 28 06                    jump @366
      :                          @365
  5036: 33 08 01                 a1 = 0x1
  5039: 01                       fallthrough
      :                          @366
  5040: 7b 18 30                 u64 [sp + 0x30] = a1
  5043: 7b 17 38                 u64 [sp + 0x38] = a0
  5046: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  5049: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  5052: 51 08 26                 jump @371 if a1 == 0
      :                          @367
  5055: 52 18 01 16              jump @369 if a1 != 1
      :                          @368
  5059: 97 77 04                 a0 = a0 << 0x4
  5062: 82 18 18                 a1 = u64 [sp + 0x18]
  5065: c8 87 07                 a0 = a0 + a1
  5068: 82 78 08                 a1 = u64 [a0 + 0x8]
  5071: 82 19 10                 a2 = u64 [sp + 0x10]
  5074: aa 98 07                 jump @370 if a1 == a2
      :                          @369
  5077: 33 08                    a1 = 0
  5079: 28 0f                    jump @372
      :                          @370
  5081: 82 77                    a0 = u64 [a0]
  5083: 82 77                    a0 = u64 [a0]
  5085: 33 08 01                 a1 = 0x1
  5088: 28 06                    jump @372
      :                          @371
  5090: 33 08 01                 a1 = 0x1
  5093: 01                       fallthrough
      :                          @372
  5094: 7b 18 40                 u64 [sp + 0x40] = a1
  5097: 7b 17 48                 u64 [sp + 0x48] = a0
  5100: 82 67 08                 a0 = u64 [s1 + 0x8]
  5103: 97 77 04                 a0 = a0 << 0x4
  5106: 82 18 18                 a1 = u64 [sp + 0x18]
  5109: c8 78 08                 a1 = a1 + a0
  5112: 82 87                    a0 = u64 [a1]
  5114: 82 89 08                 a2 = u64 [a1 + 0x8]
  5117: 95 18 30                 a1 = sp + 0x30
  5120: b4 90 01 62              ra = 98, jump [a2]
      :                          @373 [@dyn 49]
  5124: 52 07 b8 00              jump @389 if a0 != 0
      :                          @374
  5128: 95 55 10                 s0 = s0 + 0x10
  5131: 82 18 20                 a1 = u64 [sp + 0x20]
  5134: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  5137: 95 66 38                 s1 = s1 + 0x38
  5140: 82 17 28                 a0 = u64 [sp + 0x28]
  5143: 95 77 01                 a0 = a0 + 0x1
  5146: 7b 17 28                 u64 [sp + 0x28] = a0
  5149: 52 08 36 ff              jump @357 if a1 != 0
      :                          @375
  5153: 28 69                    jump @384
      :                          @376
  5155: 82 97 18                 a0 = u64 [a2 + 0x18]
  5158: 51 07 71                 jump @386 if a0 == 0
      :                          @377
  5161: 82 95 10                 s0 = u64 [a2 + 0x10]
  5164: 33 0a                    a3 = 0
  5166: 97 78 04                 a1 = a0 << 0x4
  5169: c8 58 08                 a1 = a1 + s0
  5172: 7b 18 20                 u64 [sp + 0x20] = a1
  5175: 7b 19 08                 u64 [sp + 0x8] = a2
  5178: 82 96                    s1 = u64 [a2]
  5180: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  5183: 97 77 04                 a0 = a0 << 0x4
  5186: 98 77 04                 a0 = a0 >> 0x4
  5189: 95 77 01                 a0 = a0 + 0x1
  5192: 7b 17                    u64 [sp] = a0
  5194: 95 66 08                 s1 = s1 + 0x8
  5197: 01                       fallthrough
      :                          @378
  5198: 7b 1a 28                 u64 [sp + 0x28] = a3
  5201: 82 69                    a2 = u64 [s1]
  5203: 51 09 16                 jump @381 if a2 == 0
      :                          @379
  5206: 82 1a 58                 a3 = u64 [sp + 0x58]
  5209: 82 17 50                 a0 = u64 [sp + 0x50]
  5212: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  5215: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5218: b4 a0 01 64              ra = 100, jump [a3]
      :                          @380 [@dyn 50]
  5222: 52 07 56                 jump @389 if a0 != 0
      :                          @381
  5225: 82 57                    a0 = u64 [s0]
  5227: 82 59 08                 a2 = u64 [s0 + 0x8]
  5230: 95 18 30                 a1 = sp + 0x30
  5233: b4 90 01 66              ra = 102, jump [a2]
      :                          @382 [@dyn 51]
  5237: 52 07 47                 jump @389 if a0 != 0
      :                          @383
  5240: 95 66 10                 s1 = s1 + 0x10
  5243: 95 55 10                 s0 = s0 + 0x10
  5246: 82 1a 28                 a3 = u64 [sp + 0x28]
  5249: 95 aa 01                 a3 = a3 + 0x1
  5252: 82 17 20                 a0 = u64 [sp + 0x20]
  5255: ab 75 c7                 jump @378 if s0 != a0
      :                          @384
  5258: 82 19 08                 a2 = u64 [sp + 0x8]
  5261: 82 1a                    a3 = u64 [sp]
  5263: 82 97 08                 a0 = u64 [a2 + 0x8]
  5266: ac 7a 0d                 jump @387 if a3 <u a0
      :                          @385
  5269: 28 2c                    jump @390
      :                          @386
  5271: 33 0a                    a3 = 0
  5273: 82 97 08                 a0 = u64 [a2 + 0x8]
  5276: 54 07 25                 jump @390 if a0 <=u 0
      :                          @387
  5279: 82 97                    a0 = u64 [a2]
  5281: 97 a8 04                 a1 = a3 << 0x4
  5284: c8 87 09                 a2 = a0 + a1
  5287: 82 1a 58                 a3 = u64 [sp + 0x58]
  5290: 82 17 50                 a0 = u64 [sp + 0x50]
  5293: 82 98                    a1 = u64 [a2]
  5295: 82 99 08                 a2 = u64 [a2 + 0x8]
  5298: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5301: b4 a0 01 68              ra = 104, jump [a3]
      :                          @388 [@dyn 52]
  5305: 51 07 08                 jump @390 if a0 == 0
      :                          @389
  5308: 33 07 01                 a0 = 0x1
  5311: 28 05                    jump @391
      :                          @390
  5313: 33 07                    a0 = 0
  5315: 01                       fallthrough
      :                          @391
  5316: 82 10 80 00              ra = u64 [sp + 0x80]
  5320: 82 15 78                 s0 = u64 [sp + 0x78]
  5323: 82 16 70                 s1 = u64 [sp + 0x70]
  5326: 95 11 88 00              sp = sp + 0x88
  5330: 32 00                    ret
      :                          @392 [@dyn 53]
  5332: 32 00                    ret
      :                          @393 [@dyn 54]
  5334: 95 11 88                 sp = sp + 0xffffffffffffff88
  5337: 7b 10 70                 u64 [sp + 0x70] = ra
  5340: 7b 15 68                 u64 [sp + 0x68] = s0
  5343: 7b 16 60                 u64 [sp + 0x60] = s1
  5346: 64 93                    t1 = a2
  5348: 33 0c                    a5 = 0
  5350: 33 02                    t0 = 0
  5352: 33 0b                    a4 = 0
  5354: 14 04 ff fe fe fe fe fe fe fe t2 = 0xfefefefefefefeff
  5364: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
  5370: 14 00 0a 0a 0a 0a 0a 0a 0a 0a ra = 0xa0a0a0a0a0a0a0a
  5380: 82 79 10                 a2 = u64 [a0 + 0x10]
  5383: 7b 19 48                 u64 [sp + 0x48] = a2
  5386: 82 79                    a2 = u64 [a0]
  5388: 7b 19 30                 u64 [sp + 0x30] = a2
  5391: 82 77 08                 a0 = u64 [a0 + 0x8]
  5394: 7b 17 28                 u64 [sp + 0x28] = a0
  5397: 7b 18 50                 u64 [sp + 0x50] = a1
  5400: 95 88 08                 a1 = a1 + 0x8
  5403: 7b 18                    u64 [sp] = a1
  5405: 33 07 89 00 01           a0 = 0x10089
  5410: 7b 17 08                 u64 [sp + 0x8] = a0
  5413: 33 05 0a                 s0 = 0xa
  5416: 7b 13 20                 u64 [sp + 0x20] = t1
  5419: 7b 14 18                 u64 [sp + 0x18] = t2
  5422: 7b 10 10                 u64 [sp + 0x10] = ra
  5425: 28 39                    jump @397
      :                          @394
  5427: c8 89 07                 a0 = a2 + a1
  5430: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
  5433: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  5436: 88 77 01                 a0 = a0 <u 0x1
  5439: 01                       fallthrough
      :                          @395
  5440: 82 1a 48                 a3 = u64 [sp + 0x48]
  5443: 78 a7                    u8 [a3] = a0
  5445: 82 17 28                 a0 = u64 [sp + 0x28]
  5448: 82 7a 18                 a3 = u64 [a0 + 0x18]
  5451: 82 17 30                 a0 = u64 [sp + 0x30]
  5454: b4 a0 01 6e              ra = 110, jump [a3]
      :                          @396 [@dyn 55]
  5458: 64 52                    t0 = s0
  5460: 82 13 20                 t1 = u64 [sp + 0x20]
  5463: 82 14 18                 t2 = u64 [sp + 0x18]
  5466: 82 10 10                 ra = u64 [sp + 0x10]
  5469: 82 1c 58                 a5 = u64 [sp + 0x58]
  5472: 33 05 0a                 s0 = 0xa
  5475: 82 1b 38                 a4 = u64 [sp + 0x38]
  5478: 52 07 66 01              jump @438 if a0 != 0
      :                          @397
  5482: 84 b7 ff 00              a0 = a4 & 0xff
  5486: 52 07 5a 01              jump @437 if a0 != 0
      :                          @398
  5490: 7b 12 40                 u64 [sp + 0x40] = t0
  5493: ae c3 0a                 jump @401 if t1 >=u a5
      :                          @399
  5496: 28 f4 00                 jump @428
      :                          @400
  5499: ac c3 f1 00              jump @428 if t1 <u a5
      :                          @401
  5503: c9 c3 08                 a1 = t1 - a5
  5506: 82 16 50                 s1 = u64 [sp + 0x50]
  5509: c8 c6 06                 s1 = s1 + a5
  5512: 55 18 10 1d              jump @407 if a1 >=u 16
      :                          @402
  5516: aa c3 dd 00              jump @427 if t1 == a5
      :                          @403
  5520: 33 0a                    a3 = 0
  5522: 01                       fallthrough
      :                          @404
  5523: c8 a6 07                 a0 = s1 + a3
  5526: 7c 77                    a0 = u8 [a0]
  5528: aa 57 aa 00              jump @422 if a0 == s0
      :                          @405
  5532: 95 aa 01                 a3 = a3 + 0x1
  5535: ab a8 f4                 jump @404 if a1 != a3
      :                          @406
  5538: 28 c7 00                 jump @427
      :                          @407
  5541: 95 69 07                 a2 = s1 + 0x7
  5544: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
  5547: c9 6a 07                 a0 = a3 - s1
  5550: d3 6a 0a                 a3 = a3 ^ s1
  5553: 88 aa 01                 a3 = a3 <u 0x1
  5556: 88 7b 01                 a4 = a0 <u 0x1
  5559: d4 ba 0a                 a3 = a3 | a4
  5562: 7b 1c 58                 u64 [sp + 0x58] = a5
  5565: 51 0a 44                 jump @413 if a3 == 0
      :                          @408
  5568: 33 07                    a0 = 0
  5570: 95 82 f0                 t0 = a1 + 0xfffffffffffffff0
  5573: 01                       fallthrough
      :                          @409
  5574: 82 1b 58                 a4 = u64 [sp + 0x58]
  5577: 82 19                    a2 = u64 [sp]
  5579: c8 9b 0b                 a4 = a4 + a2
  5582: 01                       fallthrough
      :                          @410
  5583: c8 76 0c                 a5 = s1 + a0
  5586: 82 cc                    a5 = u64 [a5]
  5588: c8 7b 09                 a2 = a4 + a0
  5591: 82 99                    a2 = u64 [a2]
  5593: d3 0c 05                 s0 = a5 ^ ra
  5596: c8 45 05                 s0 = s0 + t2
  5599: e0 c5 0c                 a5 = s0 & ~a5
  5602: d3 09 05                 s0 = a2 ^ ra
  5605: 3a 0a 08 00 03           a3 = u64 [0x30008]
  5610: c8 45 05                 s0 = s0 + t2
  5613: e0 95 09                 a2 = s0 & ~a2
  5616: d4 c9 09                 a2 = a2 | a5
  5619: d2 a9 09                 a2 = a2 & a3
  5622: 52 09 1f                 jump @416 if a2 != 0
      :                          @411
  5625: 95 77 10                 a0 = a0 + 0x10
  5628: ae 72 d3                 jump @410 if t0 >=u a0
      :                          @412
  5631: 28 16                    jump @416
      :                          @413
  5633: c8 a6 0b                 a4 = s1 + a3
  5636: 7c bb                    a4 = u8 [a4]
  5638: aa 5b 54                 jump @425 if a4 == s0
      :                          @414
  5641: 95 aa 01                 a3 = a3 + 0x1
  5644: ab a7 f5                 jump @413 if a0 != a3
      :                          @415
  5647: 95 82 f0                 t0 = a1 + 0xfffffffffffffff0
  5650: ae 72 b4                 jump @409 if t0 >=u a0
      :                          @416
  5653: aa 87 98 00              jump @434 if a0 == a1
      :                          @417
  5657: 33 0a                    a3 = 0
  5659: c8 76 06                 s1 = s1 + a0
  5662: c9 73 08                 a1 = t1 - a0
  5665: 82 1c 58                 a5 = u64 [sp + 0x58]
  5668: c9 c8 08                 a1 = a1 - a5
  5671: 33 05 0a                 s0 = 0xa
  5674: 82 12 40                 t0 = u64 [sp + 0x40]
  5677: 01                       fallthrough
      :                          @418
  5678: c8 a6 09                 a2 = s1 + a3
  5681: 7c 99                    a2 = u8 [a2]
  5683: aa 59 0b                 jump @421 if a2 == s0
      :                          @419
  5686: 95 aa 01                 a3 = a3 + 0x1
  5689: ab a8 f5                 jump @418 if a1 != a3
      :                          @420
  5692: 28 2d                    jump @427
      :                          @421
  5694: c8 7a 0a                 a3 = a3 + a0
  5697: 01                       fallthrough
      :                          @422
  5698: c8 ca 0a                 a3 = a3 + a5
  5701: 95 ac 01                 a5 = a3 + 0x1
  5704: ae 3a 33 ff              jump @400 if a3 >=u t1
      :                          @423
  5708: 82 17 50                 a0 = u64 [sp + 0x50]
  5711: c8 7a 0a                 a3 = a3 + a0
  5714: 7c a7                    a0 = u8 [a3]
  5716: ab 57 27 ff              jump @400 if a0 != s0
      :                          @424
  5720: 28 5c                    jump @435
      :                          @425
  5722: 82 1c 58                 a5 = u64 [sp + 0x58]
  5725: c8 ca 0a                 a3 = a3 + a5
  5728: 95 ac 01                 a5 = a3 + 0x1
  5731: ac 3a e9                 jump @423 if a3 <u t1
      :                          @426
  5734: 28 15 ff                 jump @400
      :                          @427
  5737: 64 3c                    a5 = t1
  5739: 01                       fallthrough
      :                          @428
  5740: 7b 1c 58                 u64 [sp + 0x58] = a5
  5743: 49 11 38 01              u64 [sp + 56] = 0x1
  5747: 64 25                    s0 = t0
  5749: 64 36                    s1 = t1
  5751: aa 32 51                 jump @437 if t0 == t1
      :                          @429
  5754: 82 17 48                 a0 = u64 [sp + 0x48]
  5757: 7c 77                    a0 = u8 [a0]
  5759: 51 07 1c                 jump @432 if a0 == 0
      :                          @430
  5762: 82 17 28                 a0 = u64 [sp + 0x28]
  5765: 82 7a 18                 a3 = u64 [a0 + 0x18]
  5768: 33 09 04                 a2 = 0x4
  5771: 82 17 30                 a0 = u64 [sp + 0x30]
  5774: 82 18 08                 a1 = u64 [sp + 0x8]
  5777: b4 a0 01 70              ra = 112, jump [a3]
      :                          @431 [@dyn 56]
  5781: 82 12 40                 t0 = u64 [sp + 0x40]
  5784: 52 07 34                 jump @438 if a0 != 0
      :                          @432
  5787: c9 26 09                 a2 = s1 - t0
  5790: 82 18 50                 a1 = u64 [sp + 0x50]
  5793: c8 28 08                 a1 = a1 + t0
  5796: ab 26 8f fe              jump @394 if s1 != t0
      :                          @433
  5800: 33 07                    a0 = 0
  5802: 28 96 fe                 jump @395
      :                          @434
  5805: 64 3c                    a5 = t1
  5807: 82 12 40                 t0 = u64 [sp + 0x40]
  5810: 28 ba                    jump @428
      :                          @435
  5812: 49 11 38                 u64 [sp + 56] = 0
  5815: 64 c6                    s1 = a5
  5817: 64 c5                    s0 = a5
  5819: 7b 1c 58                 u64 [sp + 0x58] = a5
  5822: 82 17 48                 a0 = u64 [sp + 0x48]
  5825: 7c 77                    a0 = u8 [a0]
  5827: 52 07 bf                 jump @430 if a0 != 0
      :                          @436
  5830: 28 d5                    jump @432
      :                          @437
  5832: 33 07                    a0 = 0
  5834: 28 06                    jump @439
      :                          @438
  5836: 33 07 01                 a0 = 0x1
  5839: 01                       fallthrough
      :                          @439
  5840: 82 10 70                 ra = u64 [sp + 0x70]
  5843: 82 15 68                 s0 = u64 [sp + 0x68]
  5846: 82 16 60                 s1 = u64 [sp + 0x60]
  5849: 95 11 78                 sp = sp + 0x78
  5852: 32 00                    ret
      :                          @440 [@dyn 57]
  5854: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  5857: 7b 10 20                 u64 [sp + 0x20] = ra
  5860: 7b 15 18                 u64 [sp + 0x18] = s0
  5863: 7b 16 10                 u64 [sp + 0x10] = s1
  5866: 82 75 10                 s0 = u64 [a0 + 0x10]
  5869: 7c 59                    a2 = u8 [s0]
  5871: 82 7b                    a4 = u64 [a0]
  5873: 82 76 08                 s1 = u64 [a0 + 0x8]
  5876: 51 09 32                 jump @444 if a2 == 0
      :                          @441
  5879: 82 6a 18                 a3 = u64 [s1 + 0x18]
  5882: 7b 18 08                 u64 [sp + 0x8] = a1
  5885: 33 08 89 00 01           a1 = 0x10089
  5890: 33 09 04                 a2 = 0x4
  5893: 64 b7                    a0 = a4
  5895: 7b 1b                    u64 [sp] = a4
  5897: b4 a0 01 74              ra = 116, jump [a3]
      :                          @442 [@dyn 58]
  5901: 82 18 08                 a1 = u64 [sp + 0x8]
  5904: 82 1b                    a4 = u64 [sp]
  5906: 51 07 14                 jump @444 if a0 == 0
      :                          @443
  5909: 33 07 01                 a0 = 0x1
  5912: 82 10 20                 ra = u64 [sp + 0x20]
  5915: 82 15 18                 s0 = u64 [sp + 0x18]
  5918: 82 16 10                 s1 = u64 [sp + 0x10]
  5921: 95 11 28                 sp = sp + 0x28
  5924: 32 00                    ret
      :                          @444
  5926: 83 87                    i32 a0 = a1 + 0
  5928: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  5931: 88 77 01                 a0 = a0 <u 0x1
  5934: 78 57                    u8 [s0] = a0
  5936: 82 6c 20                 a5 = u64 [s1 + 0x20]
  5939: 64 b7                    a0 = a4
  5941: 82 10 20                 ra = u64 [sp + 0x20]
  5944: 82 15 18                 s0 = u64 [sp + 0x18]
  5947: 82 16 10                 s1 = u64 [sp + 0x10]
  5950: 95 11 28                 sp = sp + 0x28
  5953: 32 0c                    jump [a5]
      :                          @445 [@dyn 59]
  5955: 64 8a                    a3 = a1
  5957: 33 08 38 02 01           a1 = 0x10238
  5962: 64 a9                    a2 = a3
  5964: 28 a9 fb                 jump @354
      :                          @446
  5967: 95 11 70 ff              sp = sp + 0xffffffffffffff70
  5971: 7b 10 88 00              u64 [sp + 0x88] = ra
  5975: 7b 15 80 00              u64 [sp + 0x80] = s0
  5979: 7b 16 78                 u64 [sp + 0x78] = s1
  5982: 64 75                    s0 = a0
  5984: 7c 77 08                 a0 = u8 [a0 + 0x8]
  5987: 64 8b                    a4 = a1
  5989: 33 08 01                 a1 = 0x1
  5992: 33 06 01                 s1 = 0x1
  5995: 51 07 1d                 jump @448 if a0 == 0
      :                          @447
  5998: 78 56 08                 u8 [s0 + 0x8] = s1
  6001: 46 15 09 01              u8 [s0 + 9] = 0x1
  6005: 64 57                    a0 = s0
  6007: 82 10 88 00              ra = u64 [sp + 0x88]
  6011: 82 15 80 00              s0 = u64 [sp + 0x80]
  6015: 82 16 78                 s1 = u64 [sp + 0x78]
  6018: 95 11 90 00              sp = sp + 0x90
  6022: 32 00                    ret
      :                          @448
  6024: 64 9a                    a3 = a2
  6026: 82 5c                    a5 = u64 [s0]
  6028: 80 c7 34                 a0 = u32 [a5 + 0x34]
  6031: 7c 58 09                 a1 = u8 [s0 + 0x9]
  6034: 84 79 04                 a2 = a0 & 0x4
  6037: 52 09 43                 jump @454 if a2 != 0
      :                          @449
  6040: 51 08 31                 jump @452 if a1 == 0
      :                          @450
  6043: 82 c8 28                 a1 = u64 [a5 + 0x28]
  6046: 82 c7 20                 a0 = u64 [a5 + 0x20]
  6049: 82 83 18                 t1 = u64 [a1 + 0x18]
  6052: 33 08 8d 00 01           a1 = 0x1008d
  6057: 33 09 02                 a2 = 0x2
  6060: 64 a6                    s1 = a3
  6062: 7b 1b 10                 u64 [sp + 0x10] = a4
  6065: 7b 1c 08                 u64 [sp + 0x8] = a5
  6068: b4 30 01 78              ra = 120, jump [t1]
      :                          @451 [@dyn 60]
  6072: 82 1c 08                 a5 = u64 [sp + 0x8]
  6075: 82 1b 10                 a4 = u64 [sp + 0x10]
  6078: 64 6a                    a3 = s1
  6080: 33 08 01                 a1 = 0x1
  6083: 33 06 01                 s1 = 0x1
  6086: 52 07 a8                 jump @447 if a0 != 0
      :                          @452
  6089: 64 b7                    a0 = a4
  6091: 64 c8                    a1 = a5
  6093: b4 a0 01 7a              ra = 122, jump [a3]
      :                          @453 [@dyn 61]
  6097: 33 08 01                 a1 = 0x1
  6100: 64 76                    s1 = a0
  6102: 28 98                    jump @447
      :                          @454
  6104: 52 08 36                 jump @458 if a1 != 0
      :                          @455
  6107: 82 c8 28                 a1 = u64 [a5 + 0x28]
  6110: 82 c7 20                 a0 = u64 [a5 + 0x20]
  6113: 82 83 18                 t1 = u64 [a1 + 0x18]
  6116: 33 08 91 00 01           a1 = 0x10091
  6121: 33 09 01                 a2 = 0x1
  6124: 33 06 01                 s1 = 0x1
  6127: 7b 1a                    u64 [sp] = a3
  6129: 7b 1b 10                 u64 [sp + 0x10] = a4
  6132: 7b 1c 08                 u64 [sp + 0x8] = a5
  6135: b4 30 01 7c              ra = 124, jump [t1]
      :                          @456 [@dyn 62]
  6139: 82 1c 08                 a5 = u64 [sp + 0x8]
  6142: 82 1b 10                 a4 = u64 [sp + 0x10]
  6145: 82 1a                    a3 = u64 [sp]
  6147: 33 08 01                 a1 = 0x1
  6150: 52 07 68 ff              jump @447 if a0 != 0
      :                          @457
  6154: 81 c7 34                 a0 = i32 [a5 + 0x34]
  6157: 01                       fallthrough
      :                          @458
  6158: 33 06 01                 s1 = 0x1
  6161: 78 16 37                 u8 [sp + 0x37] = s1
  6164: 82 c8 20                 a1 = u64 [a5 + 0x20]
  6167: 82 c9 28                 a2 = u64 [a5 + 0x28]
  6170: 7b 18 18                 u64 [sp + 0x18] = a1
  6173: 7b 19 20                 u64 [sp + 0x20] = a2
  6176: 95 18 37                 a1 = sp + 0x37
  6179: 7b 18 28                 u64 [sp + 0x28] = a1
  6182: 81 c8 30                 a1 = i32 [a5 + 0x30]
  6185: 7c c9 38                 a2 = u8 [a5 + 0x38]
  6188: 82 c3                    t1 = u64 [a5]
  6190: 82 c4 08                 t2 = u64 [a5 + 0x8]
  6193: 82 c0 10                 ra = u64 [a5 + 0x10]
  6196: 82 c2 18                 t0 = u64 [a5 + 0x18]
  6199: 7a 17 6c                 u32 [sp + 0x6c] = a0
  6202: 7a 18 68                 u32 [sp + 0x68] = a1
  6205: 78 19 70                 u8 [sp + 0x70] = a2
  6208: 7b 13 38                 u64 [sp + 0x38] = t1
  6211: 7b 14 40                 u64 [sp + 0x40] = t2
  6214: 7b 10 48                 u64 [sp + 0x48] = ra
  6217: 7b 12 50                 u64 [sp + 0x50] = t0
  6220: 95 17 18                 a0 = sp + 0x18
  6223: 7b 17 58                 u64 [sp + 0x58] = a0
  6226: 33 07 38 02 01           a0 = 0x10238
  6231: 7b 17 60                 u64 [sp + 0x60] = a0
  6234: 95 18 38                 a1 = sp + 0x38
  6237: 64 b7                    a0 = a4
  6239: b4 a0 01 7e              ra = 126, jump [a3]
      :                          @459 [@dyn 63]
  6243: 52 07 21                 jump @462 if a0 != 0
      :                          @460
  6246: 82 18 60                 a1 = u64 [sp + 0x60]
  6249: 82 17 58                 a0 = u64 [sp + 0x58]
  6252: 82 8a 18                 a3 = u64 [a1 + 0x18]
  6255: 33 08 8f 00 01           a1 = 0x1008f
  6260: 33 09 02                 a2 = 0x2
  6263: b4 a0 02 80 00           ra = 128, jump [a3]
      :                          @461 [@dyn 64]
  6268: 64 76                    s1 = a0
  6270: 33 08 01                 a1 = 0x1
  6273: 28 ed fe                 jump @447
      :                          @462
  6276: 33 08 01                 a1 = 0x1
  6279: 28 e7 fe                 jump @447
      :                          @463
  6282: 51 08 9b 00              jump @484 if a1 == 0
      :                          @464
  6286: 64 79                    a2 = a0
  6288: 7c 77                    a0 = u8 [a0]
  6290: 51 07 91 00              jump @483 if a0 == 0
      :                          @465
  6294: 51 27 ff 00 90 00        jump @485 if a0 == 255
      :                          @466
  6300: 6c 7a                    a3 = sext.b a0
  6302: 57 0a 09                 jump @468 if a3 <s 0
      :                          @467
  6305: 33 0a                    a3 = 0
  6307: 33 08                    a1 = 0
  6309: 28 73                    jump @482
      :                          @468
  6311: 55 27 c0 00 0d           jump @470 if a0 >=u 192
      :                          @469
  6316: 33 0a 01                 a3 = 0x1
  6319: 33 0b 80                 a4 = 0xffffffffffffff80
  6322: 28 4a                    jump @479
      :                          @470
  6324: 55 27 e0 00 0e           jump @472 if a0 >=u 224
      :                          @471
  6329: 33 0a 02                 a3 = 0x2
  6332: 33 0b 40 ff              a4 = 0xffffffffffffff40
  6336: 28 3c                    jump @479
      :                          @472
  6338: 55 27 f0 00 0e           jump @474 if a0 >=u 240
      :                          @473
  6343: 33 0a 03                 a3 = 0x3
  6346: 33 0b 20 ff              a4 = 0xffffffffffffff20
  6350: 28 2e                    jump @479
      :                          @474
  6352: 55 27 f8 00 0e           jump @476 if a0 >=u 248
      :                          @475
  6357: 33 0a 04                 a3 = 0x4
  6360: 33 0b 10 ff              a4 = 0xffffffffffffff10
  6364: 28 20                    jump @479
      :                          @476
  6366: 55 27 fc 00 0e           jump @478 if a0 >=u 252
      :                          @477
  6371: 33 0a 05                 a3 = 0x5
  6374: 33 0b 08 ff              a4 = 0xffffffffffffff08
  6378: 28 12                    jump @479
      :                          @478
  6380: 88 7a fe 00              a3 = a0 <u 0xfe
  6384: 33 0b 04 ff              a4 = 0xffffffffffffff04
  6388: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  6392: 85 aa 07                 a3 = a3 ^ 0x7
  6395: 01                       fallthrough
      :                          @479
  6396: ae 8a 2b                 jump @486 if a3 >=u a1
      :                          @480
  6399: 33 08                    a1 = 0
  6401: c8 b7 07                 a0 = a0 + a4
  6404: 64 ab                    a4 = a3
  6406: 01                       fallthrough
      :                          @481
  6407: c8 b9 0c                 a5 = a2 + a4
  6410: 7c cc                    a5 = u8 [a5]
  6412: 97 88 08                 a1 = a1 << 0x8
  6415: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  6418: d4 c8 08                 a1 = a1 | a5
  6421: 52 0b f2                 jump @481 if a4 != 0
      :                          @482
  6424: 8a a9 03                 i32 a2 = a3 << 0x3
  6427: cf 97 07                 a0 = a0 << a2
  6430: c8 87 07                 a0 = a0 + a1
  6433: 32 00                    ret
      :                          @483
  6435: 32 00                    ret
      :                          @484
  6437: 00                       trap
      :                          @485
  6438: 00                       trap
      :                          @486
  6439: 00                       trap
      :                          @487 [@dyn 65]
  6440: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  6443: 7b 10 28                 u64 [sp + 0x28] = ra
  6446: 7b 15 20                 u64 [sp + 0x20] = s0
  6449: 7b 16 18                 u64 [sp + 0x18] = s1
  6452: 64 86                    s1 = a1
  6454: 82 88 28                 a1 = u64 [a1 + 0x28]
  6457: 82 6a 20                 a3 = u64 [s1 + 0x20]
  6460: 82 8b 18                 a4 = u64 [a1 + 0x18]
  6463: 64 75                    s0 = a0
  6465: 33 08 88 00 01           a1 = 0x10088
  6470: 33 09 01                 a2 = 0x1
  6473: 64 a7                    a0 = a3
  6475: b4 b0 02 84 00           ra = 132, jump [a4]
      :                          @488 [@dyn 66]
  6480: 7b 16                    u64 [sp] = s1
  6482: 78 17 08                 u8 [sp + 0x8] = a0
  6485: 46 11 09                 u8 [sp + 9] = 0
  6488: 7b 15 10                 u64 [sp + 0x10] = s0
  6491: 33 09 02                 a2 = 0x2
  6494: 64 17                    a0 = sp
  6496: 95 18 10                 a1 = sp + 0x10
  6499: 50 20 86 00 ec fd        ra = 134, jump @446
      :                          @489 [@dyn 67]
  6505: 33 07 01                 a0 = 0x1
  6508: 7c 18 08                 a1 = u8 [sp + 0x8]
  6511: 52 08 1b                 jump @491 if a1 != 0
      :                          @490
  6514: 82 17                    a0 = u64 [sp]
  6516: 82 78 28                 a1 = u64 [a0 + 0x28]
  6519: 82 77 20                 a0 = u64 [a0 + 0x20]
  6522: 82 8a 18                 a3 = u64 [a1 + 0x18]
  6525: 33 08 92 00 01           a1 = 0x10092
  6530: 33 09 01                 a2 = 0x1
  6533: b4 a0 02 88 00           ra = 136, jump [a3]
      :                          @491 [@dyn 68]
  6538: 82 10 28                 ra = u64 [sp + 0x28]
  6541: 82 15 20                 s0 = u64 [sp + 0x20]
  6544: 82 16 18                 s1 = u64 [sp + 0x18]
  6547: 95 11 30                 sp = sp + 0x30
  6550: 32 00                    ret
