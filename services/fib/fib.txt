// RO data = 656/656 bytes
// RW data = 4120/69712 bytes
// Stack size = 65536 bytes
// RO data = [70, 73, 66, 32, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 58, 32, 116, 105, 109, 101, 115, 108, 111, 116, 61, 32, 115, 101, 114, 118, 105, 99, 101, 95, 105, 110, 100, 101, 120, 61, 32, 115, 101, 110, 100, 101, 114, 61, 32, 97, 109, 111, 117, 110, 116, 61, 32, 114, 101, 99, 101, 105, 118, 101, 114, 61, 32, 109, 101, 109, 111, 61, 32, 103, 97, 115, 95, 108, 105, 109, 105, 116, 61, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 26, 0, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 41, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 57, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 49, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 67, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 73, 0, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 70, 73, 66, 32, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 32, 103, 97, 115, 58, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 52, 41, 0, 0, 0, 200, 0, 1, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 225, 0, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 58, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 60, 0, 0, 0, 0, 0, 0, 0, 66, 0, 0, 0, 0, 0, 0, 0, 74, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 108, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 110, 0, 0, 0, 0, 0, 0, 0, 116, 0, 0, 0, 0, 0, 0, 0, 120, 0, 0, 0, 0, 0, 0, 0, 32, 32, 32, 32, 44, 32, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 119, 114, 105, 116, 101, 95, 114, 101, 115, 117, 108, 116, 32, 107, 101, 121, 61, 44, 32, 114, 101, 115, 117, 108, 116, 61, 0, 0, 84, 2, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 101, 2, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0]
// RW data = [235, 57, 12, 2, 231, 1, 233, 195, 88, 75, 252, 92, 228, 140, 100, 252, 128, 69, 38, 119, 143, 230, 252, 62, 81, 133, 15, 205, 157, 177, 149, 18, 213, 57, 90, 100, 2, 167, 47, 172, 60, 22, 159, 249, 186, 230, 130, 110, 237, 194, 201, 77, 201, 154, 183, 236, 96, 229, 251, 128, 0, 3, 15, 213, 76, 254, 61, 156, 41, 239, 199, 102, 170, 211, 211, 120, 30, 204, 156, 126, 208, 97, 108, 121, 159, 178, 236, 206, 224, 238, 24, 151, 201, 113, 163, 134, 245, 29, 211, 199, 14, 14, 188, 195, 5, 17, 17, 44, 125, 106, 0, 138, 100, 99, 200, 161, 187, 126, 232, 110, 104, 55, 135, 203, 250, 200, 58, 69, 22, 203, 68, 23, 227, 224, 33, 4, 225, 229, 162, 232, 28, 37, 43, 149, 238, 81, 37, 240, 241, 167, 202, 252, 49, 80, 19, 82, 108, 30, 1, 221, 31, 132, 147, 223, 172, 131, 100, 187, 96, 217, 132, 215, 110, 89, 160, 194, 34, 123, 18, 128, 80, 114, 37, 53, 233, 253, 163, 255, 49, 62, 68, 124, 254, 17, 50, 36, 88, 72, 180, 54, 247, 134, 62, 101, 32, 233, 199, 144, 157, 95, 29, 43, 172, 73, 24, 236, 38, 103, 147, 26, 210, 149, 82, 236, 204, 164, 23, 249, 235, 40, 130, 212, 44, 105, 83, 116, 210, 114, 22, 235, 64, 243, 41, 101, 103, 30, 82, 136, 67, 160, 100, 205, 47, 241, 197, 82, 7, 37, 207, 46, 87, 7, 107, 145, 23, 250, 252, 139, 168, 50, 199, 248, 135, 54, 142, 3, 182, 80, 107, 207, 28, 170, 153, 179, 155, 170, 185, 49, 84, 25, 225, 2, 92, 116, 244, 68, 84, 136, 21, 137, 106, 95, 118, 5, 95, 135, 87, 217, 202, 150, 70, 9, 229, 14, 141, 225, 96, 190, 220, 103, 170, 105, 215, 137, 92, 139, 141, 175, 140, 159, 150, 87, 133, 30, 240, 127, 2, 210, 254, 165, 189, 140, 148, 251, 116, 224, 196, 17, 92, 96, 130, 157, 1, 138, 139, 68, 91, 63, 13, 18, 98, 43, 234, 19, 38, 85, 255, 89, 183, 189, 101, 46, 38, 186, 197, 47, 31, 79, 204, 45, 214, 80, 124, 117, 179, 197, 29, 224, 189, 125, 15, 125, 65, 63, 231, 112, 161, 250, 178, 4, 72, 85, 74, 217, 70, 37, 221, 45, 96, 213, 61, 203, 198, 132, 253, 85, 122, 31, 127, 225, 155, 240, 205, 93, 15, 25, 157, 244, 3, 126, 75, 219, 200, 99, 23, 237, 152, 72, 251, 107, 61, 156, 129, 3, 192, 204, 158, 1, 180, 107, 126, 108, 2, 245, 57, 237, 229, 19, 147, 23, 246, 212, 211, 118, 223, 14, 126, 214, 223, 152, 60, 232, 142, 108, 66, 112, 236, 113, 83, 62, 136, 13, 139, 224, 182, 78, 67, 68, 232, 42, 69, 233, 166, 182, 23, 95, 200, 62, 196, 127, 211, 178, 211, 215, 30, 98, 100, 112, 255, 224, 139, 106, 207, 108, 47, 106, 190, 248, 49, 81, 245, 2, 19, 38, 79, 80, 99, 16, 3, 173, 152, 205, 86, 188, 148, 127, 130, 156, 51, 137, 129, 111, 6, 86, 100, 175, 163, 119, 16, 187, 66, 73, 47, 116, 51, 111, 179, 230, 50, 247, 245, 197, 56, 45, 89, 148, 177, 84, 129, 74, 37, 114, 197, 88, 150, 218, 87, 190, 10, 180, 167, 105, 165, 196, 95, 58, 209, 243, 214, 198, 125, 162, 175, 163, 204, 187, 196, 186, 151, 71, 221, 44, 129, 49, 238, 21, 3, 59, 75, 33, 0, 131, 62, 78, 64, 66, 158, 220, 240, 239, 20, 72, 191, 75, 228, 53, 171, 222, 209, 222, 254, 130, 219, 171, 118, 51, 39, 2, 230, 11, 189, 214, 222, 133, 19, 172, 214, 192, 188, 156, 109, 9, 26, 247, 123, 201, 119, 230, 124, 124, 213, 50, 74, 78, 107, 27, 5, 11, 106, 178, 249, 14, 169, 228, 31, 41, 112, 62, 169, 141, 153, 14, 145, 137, 216, 52, 28, 51, 143, 10, 44, 244, 137, 94, 72, 13, 148, 231, 211, 41, 176, 251, 221, 183, 111, 197, 209, 224, 145, 8, 215, 107, 225, 1, 68, 93, 230, 141, 49, 97, 73, 44, 151, 116, 42, 177, 175, 147, 134, 243, 252, 118, 246, 137, 62, 8, 127, 131, 88, 79, 23, 211, 120, 90, 193, 238, 131, 150, 100, 33, 179, 23, 2, 137, 228, 89, 161, 144, 81, 206, 221, 5, 198, 158, 122, 202, 226, 84, 124, 148, 166, 223, 94, 254, 49, 109, 212, 174, 211, 61, 176, 141, 62, 191, 240, 18, 118, 239, 223, 64, 209, 248, 47, 53, 44, 63, 34, 236, 169, 28, 147, 72, 152, 39, 28, 176, 165, 251, 77, 56, 51, 149, 42, 182, 124, 113, 30, 30, 27, 189, 174, 139, 14, 45, 114, 57, 46, 187, 230, 86, 186, 121, 92, 45, 86, 40, 155, 2, 229, 178, 139, 200, 34, 165, 58, 102, 101, 216, 94, 187, 7, 113, 18, 233, 18, 155, 185, 162, 17, 232, 49, 191, 11, 165, 3, 169, 126, 237, 33, 162, 50, 88, 148, 249, 67, 195, 3, 224, 234, 97, 176, 185, 15, 93, 75, 95, 92, 238, 23, 2, 203, 57, 213, 98, 8, 153, 151, 130, 51, 67, 33, 105, 201, 97, 80, 77, 137, 169, 249, 195, 123, 36, 255, 32, 77, 202, 186, 7, 149, 113, 75, 84, 88, 19, 130, 201, 93, 140, 114, 108, 177, 214, 82, 153, 170, 246, 145, 56, 28, 183, 171, 124, 92, 166, 252, 68, 168, 206, 4, 239, 113, 116, 138, 184, 207, 166, 8, 168, 26, 190, 26, 225, 166, 11, 207, 139, 106, 20, 231, 250, 119, 33, 207, 124, 204, 86, 19, 52, 189, 82, 60, 77, 26, 35, 43, 170, 249, 225, 72, 26, 213, 73, 173, 171, 109, 210, 76, 205, 70, 151, 37, 209, 130, 155, 183, 135, 26, 75, 20, 184, 107, 219, 198, 0, 250, 22, 164, 77, 135, 113, 183, 154, 208, 228, 11, 62, 138, 38, 137, 133, 209, 212, 18, 132, 203, 227, 251, 196, 36, 131, 228, 147, 56, 189, 180, 224, 210, 166, 8, 2, 131, 12, 233, 210, 80, 11, 233, 17, 6, 241, 118, 169, 170, 103, 129, 72, 224, 29, 113, 154, 203, 41, 149, 231, 24, 57, 191, 255, 75, 248, 185, 170, 245, 154, 31, 82, 171, 52, 7, 105, 196, 228, 74, 89, 175, 136, 28, 131, 37, 35, 146, 244, 2, 49, 147, 249, 22, 207, 194, 168, 81, 172, 136, 228, 75, 146, 85, 220, 194, 186, 83, 12, 126, 131, 96, 108, 21, 252, 119, 79, 11, 245, 46, 108, 105, 203, 218, 9, 86, 107, 129, 169, 244, 70, 229, 81, 3, 106, 98, 99, 207, 28, 145, 38, 112, 100, 90, 204, 159, 209, 106, 199, 71, 59, 208, 95, 39, 81, 55, 172, 204, 6, 165, 13, 113, 68, 79, 7, 18, 217, 44, 36, 242, 125, 75, 199, 66, 27, 6, 49, 61, 239, 40, 244, 172, 207, 47, 227, 47, 47, 141, 192, 204, 248, 224, 68, 184, 224, 62, 9, 239, 255, 219, 165, 143, 174, 232, 55, 87, 150, 63, 49, 251, 53, 205, 35, 154, 59, 7, 166, 59, 80, 0, 178, 177, 149, 191, 45, 104, 8, 39, 59, 59, 167, 251, 15, 187, 32, 159, 96, 252, 55, 204, 231, 4, 20, 168, 107, 150, 17, 165, 148, 188, 35, 22, 237, 93, 35, 200, 87, 252, 52, 8, 50, 0, 158, 112, 67, 11, 101, 78, 234, 213, 61, 163, 40, 14, 249, 77, 130, 88, 115, 145, 182, 117, 26, 183, 120, 121, 66, 10, 166, 100, 221, 148, 142, 119, 165, 49, 29, 183, 214, 25, 121, 126, 184, 224, 66, 13, 166, 122, 124, 98, 92, 86, 143, 162, 66, 176, 161, 156, 72, 189, 177, 50, 79, 240, 5, 245, 46, 167, 124, 205, 209, 139, 4, 63, 0, 142, 73, 145, 160, 206, 189, 186, 201, 167, 121, 220, 111, 228, 185, 193, 61, 173, 227, 254, 138, 173, 133, 200, 137, 177, 250, 99, 41, 122, 254, 189, 235, 139, 251, 255, 92, 156, 171, 217, 187, 54, 31, 83, 23, 225, 219, 122, 45, 252, 64, 177, 35, 118, 205, 48, 27, 64, 213, 119, 138, 182, 177, 27, 118, 30, 47, 245, 186, 71, 63, 35, 189, 129, 21, 188, 157, 247, 236, 184, 14, 36, 210, 188, 175, 75, 254, 33, 83, 236, 147, 175, 46, 35, 84, 219, 13, 240, 189, 114, 104, 253, 53, 49, 10, 127, 198, 187, 232, 247, 44, 255, 159, 2, 163, 98, 80, 79, 112, 45, 33, 88, 5, 102, 252, 193, 115, 125, 133, 187, 141, 172, 79, 58, 108, 162, 166, 36, 91, 50, 74, 42, 130, 29, 78, 90, 142, 197, 130, 222, 231, 233, 99, 100, 42, 181, 167, 224, 240, 237, 130, 243, 240, 78, 255, 118, 183, 107, 0, 206, 74, 82, 3, 249, 94, 72, 170, 197, 248, 170, 90, 217, 90, 245, 127, 186, 66, 128, 196, 108, 115, 170, 255, 238, 47, 7, 8, 181, 224, 10, 73, 18, 238, 52, 127, 209, 157, 213, 45, 209, 103, 209, 93, 45, 76, 16, 203, 8, 221, 112, 196, 13, 240, 217, 56, 14, 95, 87, 195, 160, 249, 58, 112, 85, 89, 229, 48, 232, 19, 7, 155, 163, 171, 102, 254, 192, 240, 208, 153, 71, 251, 110, 204, 80, 233, 201, 62, 170, 59, 151, 253, 1, 93, 20, 55, 119, 135, 83, 18, 190, 157, 219, 77, 77, 94, 115, 185, 232, 162, 172, 11, 194, 2, 121, 231, 26, 76, 184, 242, 62, 132, 196, 44, 75, 160, 234, 66, 115, 91, 162, 199, 19, 116, 211, 27, 87, 215, 2, 205, 73, 175, 34, 65, 20, 215, 139, 114, 21, 104, 22, 241, 51, 90, 35, 9, 75, 211, 217, 205, 219, 155, 173, 20, 117, 159, 98, 30, 104, 97, 13, 199, 17, 56, 243, 44, 234, 210, 175, 178, 35, 249, 2, 172, 184, 113, 22, 12, 0, 56, 228, 199, 168, 7, 194, 128, 136, 78, 161, 97, 37, 228, 201, 33, 90, 107, 3, 86, 78, 98, 205, 178, 120, 254, 57, 5, 78, 183, 130, 207, 225, 197, 230, 202, 3, 155, 132, 9, 36, 227, 136, 0, 185, 218, 93, 217, 152, 172, 87, 131, 65, 87, 237, 86, 91, 192, 109, 19, 48, 151, 115, 65, 217, 58, 194, 195, 173, 97, 70, 119, 169, 200, 63, 34, 214, 126, 146, 19, 149, 224, 55, 65, 63, 68, 66, 72, 119, 164, 222, 188, 56, 203, 123, 193, 46, 128, 195, 64, 137, 211, 35, 133, 204, 77, 214, 105, 78, 230, 219, 59, 26, 198, 75, 167, 65, 110, 24, 155, 81, 121, 100, 185, 200, 22, 137, 216, 108, 99, 200, 85, 170, 70, 233, 62, 44, 249, 201, 203, 135, 231, 140, 70, 220, 194, 109, 191, 204, 21, 185, 21, 149, 184, 134, 41, 206, 9, 2, 72, 242, 55, 236, 95, 23, 15, 136, 204, 116, 62, 223, 87, 111, 115, 4, 210, 169, 78, 136, 76, 211, 133, 113, 202, 5, 183, 190, 194, 54, 50, 49, 15, 100, 118, 33, 90, 24, 9, 106, 147, 215, 197, 0, 92, 6, 255, 87, 55, 120, 203, 232, 107, 38, 144, 150, 208, 241, 32, 176, 62, 5, 187, 227, 145, 67, 22, 33, 217, 24, 6, 171, 218, 85, 16, 203, 63, 10, 163, 237, 34, 220, 170, 216, 15, 151, 20, 182, 208, 165, 128, 246, 149, 182, 156, 162, 118, 179, 92, 230, 138, 254, 112, 105, 168, 221, 29, 242, 16, 140, 21, 78, 111, 53, 28, 44, 19, 228, 199, 112, 182, 227, 60, 58, 137, 62, 93, 58, 5, 94, 78, 226, 93, 192, 177, 79, 57, 149, 138, 88, 81, 92, 34, 185, 210, 31, 66, 27, 225, 192, 39, 74, 242, 26, 139, 193, 77, 109, 76, 117, 205, 217, 47, 95, 10, 230, 84, 200, 16, 135, 25, 235, 191, 65, 118, 146, 28, 184, 26, 27, 41, 162, 15, 47, 184, 224, 123, 175, 98, 122, 250, 240, 38, 23, 249, 113, 173, 227, 210, 115, 33, 96, 208, 202, 167, 84, 88, 194, 150, 65, 148, 40, 132, 102, 73, 164, 60, 230, 58, 9, 130, 167, 61, 134, 50, 203, 133, 69, 118, 87, 231, 50, 53, 150, 215, 217, 246, 123, 108, 192, 217, 243, 103, 183, 126, 136, 214, 139, 151, 231, 1, 147, 66, 67, 123, 15, 253, 232, 162, 188, 81, 251, 211, 174, 185, 34, 62, 181, 100, 115, 119, 246, 231, 12, 90, 90, 186, 88, 51, 57, 106, 202, 137, 18, 93, 205, 207, 89, 213, 228, 154, 176, 80, 218, 86, 179, 4, 64, 162, 223, 28, 75, 185, 12, 174, 8, 22, 41, 6, 182, 19, 158, 124, 99, 226, 235, 43, 109, 252, 57, 213, 137, 14, 9, 54, 13, 249, 188, 13, 255, 231, 84, 29, 135, 141, 1, 164, 129, 146, 110, 191, 242, 184, 160, 253, 180, 167, 90, 186, 15, 77, 2, 64, 155, 104, 13, 10, 237, 103, 245, 158, 206, 142, 89, 97, 235, 90, 24, 15, 124, 4, 21, 141, 194, 230, 108, 91, 94, 188, 20, 113, 80, 206, 252, 234, 51, 113, 178, 186, 60, 144, 19, 248, 212, 78, 127, 22, 138, 185, 141, 48, 202, 54, 102, 101, 157, 158, 165, 177, 176, 74, 133, 64, 62, 168, 192, 234, 83, 6, 77, 31, 179, 211, 82, 226, 3, 211, 247, 216, 93, 108, 140, 195, 215, 57, 126, 57, 106, 197, 230, 61, 204, 231, 31, 191, 94, 66, 13, 19, 43, 176, 129, 156, 50, 20, 248, 71, 196, 182, 64, 159, 106, 254, 11, 94, 119, 113, 15, 101, 47, 251, 77, 234, 140, 228, 134, 207, 255, 65, 120, 62, 191, 93, 169, 243, 100, 255, 54, 240, 27, 204, 103, 142, 68, 108, 99, 109, 16, 73, 210, 244, 254, 28, 254, 224, 85, 109, 201, 251, 68, 116, 19, 116, 32, 78, 134, 241, 111, 61, 79, 138, 171, 102, 41, 23, 50, 208, 30, 51, 132, 171, 236, 132, 255, 34, 31, 3, 174, 23, 248, 33, 195, 146, 118, 107, 43, 166, 179, 210, 111, 244, 43, 197, 40, 52, 50, 190, 83, 88, 54, 153, 24, 119, 165, 75, 229, 215, 108, 118, 33, 234, 92, 235, 87, 189, 126, 6, 98, 81, 95, 42, 223, 217, 127, 92, 123, 216, 142, 148, 48, 117, 151, 146, 91, 156, 45, 69, 231, 69, 167, 46, 70, 156, 112, 222, 98, 191, 232, 191, 203, 213, 208, 125, 238, 82, 188, 2, 164, 145, 35, 74, 119, 181, 196, 110, 24, 15, 239, 0, 189, 162, 60, 192, 74, 142, 222, 21, 175, 55, 216, 134, 246, 34, 202, 80, 186, 42, 1, 55, 45, 165, 156, 160, 99, 29, 3, 66, 47, 172, 187, 31, 80, 128, 169, 211, 235, 58, 198, 167, 81, 197, 177, 146, 153, 196, 233, 3, 67, 231, 216, 30, 150, 104, 47, 255, 60, 120, 0, 35, 247, 183, 26, 135, 14, 210, 107, 226, 59, 228, 233, 6, 188, 16, 223, 150, 222, 217, 69, 46, 30, 110, 88, 76, 200, 58, 64, 123, 9, 85, 10, 100, 94, 11, 26, 20, 78, 48, 218, 71, 68, 92, 178, 122, 17, 39, 46, 78, 167, 58, 43, 116, 88, 66, 165, 4, 182, 203, 208, 182, 63, 96, 80, 88, 215, 248, 103, 217, 198, 3, 62, 171, 204, 34, 105, 131, 72, 233, 228, 188, 55, 236, 101, 209, 129, 44, 230, 23, 13, 129, 145, 150, 30, 60, 222, 228, 228, 77, 203, 80, 247, 99, 175, 170, 241, 108, 177, 144, 67, 190, 176, 2, 149, 85, 104, 98, 217, 94, 184, 80, 221, 19, 121, 26, 50, 202, 207, 165, 31, 152, 17, 8, 43, 61, 32, 59, 246, 216, 209, 24, 207, 220, 144, 124, 94, 41, 41, 252, 230, 27, 108, 158, 163, 87, 93, 190, 58, 31, 187, 149, 166, 251, 228, 158, 166, 111, 135, 158, 91, 81, 26, 208, 202, 44, 4, 78, 249, 148, 232, 8, 132, 4, 72, 203, 180, 233, 38, 94, 91, 25, 9, 149, 195, 146, 34, 229, 134, 184, 149, 86, 119, 10, 139, 53, 153, 63, 181, 206, 0, 52, 205, 63, 21, 139, 175, 197, 43, 133, 254, 80, 154, 248, 104, 164, 7, 195, 251, 161, 12, 128, 108, 122, 109, 143, 186, 227, 75, 40, 233, 111, 105, 62, 50, 104, 33, 253, 89, 24, 198, 232, 124, 166, 216, 144, 159, 34, 38, 29, 33, 139, 96, 250, 83, 54, 165, 239, 178, 198, 255, 244, 70, 167, 164, 140, 129, 103, 217, 23, 24, 96, 89, 96, 88, 44, 117, 190, 242, 228, 180, 3, 188, 123, 21, 22, 108, 170, 154, 11, 227, 224, 166, 119, 218, 47, 28, 156, 89, 114, 89, 197, 251, 183, 3, 230, 63, 43, 165, 24, 248, 227, 98, 1, 55, 139, 232, 212, 228, 114, 41, 162, 93, 200, 247, 216, 243, 233, 254, 212, 71, 114, 141, 37, 207, 146, 228, 52, 146, 174, 10, 161, 214, 185, 142, 191, 106, 153, 145, 224, 40, 110, 135, 18, 117, 50, 91, 150, 249, 171, 24, 32, 165, 137, 173, 202, 164, 63, 158, 222, 137, 130, 81, 82, 70, 235, 214, 15, 183, 184, 77, 161, 116, 11, 209, 112, 160, 6, 43, 33, 197, 223, 8, 116, 61, 203, 87, 189, 146, 46, 9, 195, 103, 240, 120, 68, 48, 141, 18, 181, 25, 223, 236, 244, 75, 23, 244, 156, 95, 171, 203, 120, 133, 153, 50, 81, 82, 207, 132, 141, 136, 37, 21, 128, 106, 77, 95, 119, 156, 147, 50, 153, 70, 82, 178, 155, 52, 36, 249, 116, 245, 224, 234, 182, 13, 61, 177, 32, 85, 85, 63, 115, 89, 90, 60, 221, 212, 79, 175, 167, 206, 159, 106, 104, 125, 16, 159, 33, 106, 75, 159, 18, 198, 154, 175, 40, 199, 199, 29, 171, 244, 196, 31, 149, 148, 110, 150, 208, 240, 225, 161, 94, 136, 129, 70, 8, 183, 223, 10, 132, 164, 86, 183, 125, 228, 26, 10, 171, 199, 23, 106, 32, 171, 40, 246, 19, 213, 70, 172, 185, 25, 133, 255, 18, 162, 233, 249, 29, 253, 144, 212, 249, 155, 193, 162, 169, 192, 3, 91, 72, 197, 103, 243, 171, 165, 57, 152, 128, 5, 48, 154, 208, 14, 203, 160, 23, 210, 13, 19, 117, 224, 78, 184, 92, 99, 142, 92, 134, 7, 88, 122, 124, 46, 105, 28, 11, 92, 17, 66, 211, 52, 219, 117, 77, 239, 82, 161, 223, 247, 35, 71, 252, 61, 211, 79, 191, 143, 177, 218, 95, 216, 199, 75, 170, 56, 77, 151, 144, 11, 108, 3, 211, 153, 242, 187, 115, 28, 168, 130, 120, 82, 24, 198, 254, 126, 165, 40, 64, 65, 110, 222, 230, 17, 70, 63, 144, 86, 124, 195, 92, 38, 226, 123, 172, 123, 7, 253, 186, 241, 83, 1, 75, 188, 12, 153, 79, 201, 102, 36, 134, 156, 250, 64, 249, 90, 150, 219, 253, 163, 67, 169, 39, 159, 191, 131, 190, 178, 232, 152, 179, 110, 55, 166, 232, 80, 164, 106, 73, 199, 151, 121, 117, 108, 173, 219, 18, 73, 125, 155, 22, 2, 27, 195, 141, 103, 30, 36, 235, 37, 44, 84, 19, 117, 106, 176, 250, 252, 88, 48, 212, 10, 176, 54, 218, 195, 65, 84, 26, 36, 181, 56, 238, 214, 255, 247, 141, 208, 113, 210, 197, 56, 120, 233, 241, 37, 173, 139, 53, 215, 169, 94, 168, 137, 172, 218, 19, 199, 187, 96, 141, 63, 188, 236, 203, 214, 21, 244, 86, 5, 110, 147, 14, 247, 63, 65, 183, 108, 100, 121, 220, 157, 188, 11, 214, 51, 238, 220, 77, 28, 72, 232, 131, 250, 150, 207, 22, 254, 18, 119, 174, 167, 241, 159, 233, 28, 13, 195, 210, 110, 22, 154, 28, 31, 190, 3, 251, 20, 118, 83, 147, 93, 252, 155, 129, 234, 244, 152, 145, 98, 202, 119, 71, 133, 55, 96, 159, 19, 18, 36, 188, 244, 96, 177, 73, 149, 47, 103, 156, 2, 251, 78, 44, 84, 234, 212, 218, 51, 202, 249, 233, 39, 224, 148, 181, 71, 255, 56, 126, 65, 123, 183, 161, 34, 47, 209, 166, 226, 227, 60, 97, 89, 57, 65, 93, 180, 40, 19, 107, 168, 18, 97, 195, 57, 37, 7, 11, 200, 143, 79, 21, 162, 193, 182, 189, 118, 47, 107, 54, 143, 208, 142, 164, 235, 30, 225, 119, 166, 125, 173, 254, 230, 7, 24, 162, 167, 176, 44, 39, 1, 214, 95, 193, 93, 178, 88, 58, 199, 235, 0, 195, 195, 168, 67, 120, 162, 161, 67, 157, 53, 161, 20, 97, 185, 156, 133, 240, 101, 186, 111, 42, 79, 93, 207, 86, 109, 111, 69, 50, 144, 163, 2, 4, 99, 49, 136, 130, 67, 93, 61, 224, 239, 95, 159, 150, 93, 114, 35, 32, 53, 241, 144, 133, 231, 250, 0, 91, 198, 250, 84, 158, 147, 223, 191, 203, 15, 59, 247, 155, 48, 196, 94, 137, 71, 50, 197, 207, 252, 25, 171, 152, 220, 42, 223, 29, 40, 226, 180, 232, 252, 163, 7, 220, 169, 145, 4, 255, 116, 233, 204, 27, 0, 45, 6, 62, 225, 7, 88, 73, 18, 18, 223, 36, 173, 14, 20, 190, 212, 52, 220, 214, 240, 3, 147, 112, 38, 166, 249, 216, 29, 83, 30, 84, 161, 14, 242, 251, 63, 8, 222, 58, 10, 154, 12, 210, 251, 139, 198, 95, 108, 183, 228, 83, 228, 161, 20, 59, 241, 233, 122, 228, 151, 1, 37, 164, 250, 144, 67, 27, 253, 133, 236, 113, 164, 111, 121, 231, 101, 66, 132, 64, 229, 146, 72, 191, 110, 9, 48, 32, 254, 130, 84, 220, 232, 98, 129, 126, 97, 61, 73, 181, 115, 103, 78, 52, 195, 130, 94, 97, 78, 64, 70, 80, 204, 43, 116, 114, 128, 37, 86, 101, 214, 190, 138, 17, 197, 158, 7, 41, 76, 247, 44, 144, 175, 171, 156, 14, 49, 255, 248, 122, 160, 30, 250, 174, 66, 107, 28, 122, 6, 229, 193, 51, 242, 186, 186, 141, 56, 47, 151, 196, 191, 236, 44, 253, 18, 164, 250, 95, 136, 142, 200, 208, 153, 176, 116, 27, 134, 216, 10, 128, 54, 234, 200, 166, 137, 89, 247, 192, 74, 40, 41, 124, 242, 5, 43, 38, 137, 70, 33, 109, 245, 172, 229, 20, 100, 204, 121, 2, 209, 116, 10, 7, 15, 24, 49, 154, 13, 106, 58, 235, 162, 244, 150, 228, 125, 131, 34, 25, 231, 18, 86, 100, 2, 22, 51, 108, 127, 127, 49, 207, 31, 195, 86, 14, 57, 27, 98, 250, 154, 45, 118, 192, 52, 132, 166, 53, 224, 6, 137, 185, 206, 44, 180, 251, 140, 14, 94, 8, 214, 143, 60, 169, 9, 34, 31, 137, 226, 17, 38, 124, 1, 63, 40, 224, 69, 3, 189, 84, 139, 12, 242, 19, 244, 40, 8, 67, 129, 249, 236, 76, 45, 150, 227, 187, 142, 140, 244, 169, 127, 130, 157, 77, 214, 53, 100, 222, 213, 3, 152, 205, 46, 251, 29, 231, 204, 253, 192, 106, 30, 114, 143, 184, 62, 236, 95, 203, 175, 84, 146, 79, 196, 31, 2, 95, 97, 90, 244, 176, 179, 230, 134, 189, 129, 31, 169, 3, 100, 240, 66, 166, 140, 160, 148, 50, 120, 56, 237, 200, 76, 22, 18, 70, 12, 196, 133, 216, 142, 174, 2, 25, 58, 179, 227, 50, 22, 124, 135, 25, 109, 39, 247, 68, 36, 73, 57, 40, 27, 136, 65, 161, 104, 220, 6, 178, 180, 125, 68, 247, 234, 177, 195, 139, 15, 214, 125, 107, 93, 207, 42, 168, 47, 31, 232, 97, 137, 76, 8, 7, 73, 179, 111, 25, 103, 19, 214, 169, 130, 234, 70, 158, 142, 234, 233, 11, 104, 86, 116, 178, 92, 71, 125, 222, 71, 207, 13, 59, 112, 97, 81, 150, 65, 231, 31, 90, 9, 239, 148, 254, 23, 0, 55, 88, 136, 16, 156, 226, 55, 146, 48, 35, 207, 148, 45, 175, 82, 114, 77, 13, 173, 26, 120, 16, 36, 178, 75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 2298
// Code size = 6893 bytes

      :                          @0
     0: 28 ea 01 00 00           jump @34
      :                          @1
     5: 28 4e 02 00 00           jump @38
      :                          @2
    10: 28 2c 05                 jump @122
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 80 89 34                 a2 = u32 [a1 + 0x34]
    24: 84 9a 10                 a3 = a2 & 0x10
    27: 52 0a 16                 jump @6 if a3 != 0
      :                          @4
    30: 84 99 20                 a2 = a2 & 0x20
    33: 52 09 40                 jump @9 if a2 != 0
      :                          @5
    36: 80 77                    a0 = u32 [a0]
    38: 82 10 80 00              ra = u64 [sp + 0x80]
    42: 95 11 88 00              sp = sp + 0x88
    46: 28 cb 0f                 jump @298
      :                          @6
    49: 81 7b                    a4 = i32 [a0]
    51: 33 09 81 00              a2 = 0x81
    55: 95 17 7f                 a0 = sp + 0x7f
    58: 33 02 57                 t0 = 0x57
    61: 01                       fallthrough
      :                          @7
    62: 64 9c                    a5 = a2
    64: 8b ba 04                 i32 a3 = a4 >> 0x4
    67: 84 bb 0f                 a4 = a4 & 0xf
    70: 88 b3 0a                 t1 = a4 <u 0xa
    73: 33 09 30                 a2 = 0x30
    76: da 32 09                 a2 = t0 if t1 == 0
    79: be b9 09                 i32 a2 = a2 + a4
    82: 78 79                    u8 [a0] = a2
    84: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
    87: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
    90: 64 ab                    a4 = a3
    92: 52 0a e2                 jump @7 if a3 != 0
      :                          @8
    95: 28 30                    jump @11
      :                          @9
    97: 81 7b                    a4 = i32 [a0]
    99: 33 09 81 00              a2 = 0x81
   103: 95 17 7f                 a0 = sp + 0x7f
   106: 33 02 37                 t0 = 0x37
   109: 01                       fallthrough
      :                          @10
   110: 64 9c                    a5 = a2
   112: 8b ba 04                 i32 a3 = a4 >> 0x4
   115: 84 bb 0f                 a4 = a4 & 0xf
   118: 88 b3 0a                 t1 = a4 <u 0xa
   121: 33 09 30                 a2 = 0x30
   124: da 32 09                 a2 = t0 if t1 == 0
   127: be b9 09                 i32 a2 = a2 + a4
   130: 78 79                    u8 [a0] = a2
   132: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   135: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   138: 64 ab                    a4 = a3
   140: 52 0a e2                 jump @10 if a3 != 0
      :                          @11
   143: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   146: 56 27 80 00 27           jump @14 if a0 >u 128
      :                          @12
   151: 9a 9b 81 00              a4 = 0x81 - a2
   155: 64 1a                    a3 = sp
   157: c8 7a 0a                 a3 = a3 + a0
   160: 33 09 02                 a2 = 0x2
   163: 64 87                    a0 = a1
   165: 33 08 8a 01 01           a1 = 0x1018a
   170: 50 10 04 76 10           ra = 4, jump @308
      :                          @13 [@dyn 2]
   175: 82 10 80 00              ra = u64 [sp + 0x80]
   179: 95 11 88 00              sp = sp + 0x88
   183: 32 00                    ret
      :                          @14
   185: 00                       trap
      :                          @15 [@dyn 3]
   186: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   190: 7b 10 80 00              u64 [sp + 0x80] = ra
   194: 80 89 34                 a2 = u32 [a1 + 0x34]
   197: 84 9a 10                 a3 = a2 & 0x10
   200: 52 0a 16                 jump @18 if a3 != 0
      :                          @16
   203: 84 99 20                 a2 = a2 & 0x20
   206: 52 09 40                 jump @21 if a2 != 0
      :                          @17
   209: 82 77                    a0 = u64 [a0]
   211: 82 10 80 00              ra = u64 [sp + 0x80]
   215: 95 11 88 00              sp = sp + 0x88
   219: 28 1e 0f                 jump @298
      :                          @18
   222: 82 7b                    a4 = u64 [a0]
   224: 33 09 81 00              a2 = 0x81
   228: 95 17 7f                 a0 = sp + 0x7f
   231: 33 02 57                 t0 = 0x57
   234: 01                       fallthrough
      :                          @19
   235: 64 9c                    a5 = a2
   237: 98 ba 04                 a3 = a4 >> 0x4
   240: 84 bb 0f                 a4 = a4 & 0xf
   243: 88 b3 0a                 t1 = a4 <u 0xa
   246: 33 09 30                 a2 = 0x30
   249: da 32 09                 a2 = t0 if t1 == 0
   252: be b9 09                 i32 a2 = a2 + a4
   255: 78 79                    u8 [a0] = a2
   257: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   260: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   263: 64 ab                    a4 = a3
   265: 52 0a e2                 jump @19 if a3 != 0
      :                          @20
   268: 28 30                    jump @23
      :                          @21
   270: 82 7b                    a4 = u64 [a0]
   272: 33 09 81 00              a2 = 0x81
   276: 95 17 7f                 a0 = sp + 0x7f
   279: 33 02 37                 t0 = 0x37
   282: 01                       fallthrough
      :                          @22
   283: 64 9c                    a5 = a2
   285: 98 ba 04                 a3 = a4 >> 0x4
   288: 84 bb 0f                 a4 = a4 & 0xf
   291: 88 b3 0a                 t1 = a4 <u 0xa
   294: 33 09 30                 a2 = 0x30
   297: da 32 09                 a2 = t0 if t1 == 0
   300: be b9 09                 i32 a2 = a2 + a4
   303: 78 79                    u8 [a0] = a2
   305: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   308: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   311: 64 ab                    a4 = a3
   313: 52 0a e2                 jump @22 if a3 != 0
      :                          @23
   316: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   319: 56 27 80 00 27           jump @26 if a0 >u 128
      :                          @24
   324: 9a 9b 81 00              a4 = 0x81 - a2
   328: 64 1a                    a3 = sp
   330: c8 7a 0a                 a3 = a3 + a0
   333: 33 09 02                 a2 = 0x2
   336: 64 87                    a0 = a1
   338: 33 08 8a 01 01           a1 = 0x1018a
   343: 50 10 08 c9 0f           ra = 8, jump @308
      :                          @25 [@dyn 4]
   348: 82 10 80 00              ra = u64 [sp + 0x80]
   352: 95 11 88 00              sp = sp + 0x88
   356: 32 00                    ret
      :                          @26
   358: 00                       trap
      :                          @27 [@dyn 5]
   359: 95 11 c8                 sp = sp + 0xffffffffffffffc8
   362: 7b 10 30                 u64 [sp + 0x30] = ra
   365: 7b 15 28                 u64 [sp + 0x28] = s0
   368: 7b 16 20                 u64 [sp + 0x20] = s1
   371: 64 86                    s1 = a1
   373: 82 88 28                 a1 = u64 [a1 + 0x28]
   376: 82 6a 20                 a3 = u64 [s1 + 0x20]
   379: 82 8b 18                 a4 = u64 [a1 + 0x18]
   382: 64 75                    s0 = a0
   384: 33 08 48 01 01           a1 = 0x10148
   389: 33 09 01                 a2 = 0x1
   392: 64 a7                    a0 = a3
   394: b4 b0 01 0c              ra = 12, jump [a4]
      :                          @28 [@dyn 6]
   398: 7b 16 08                 u64 [sp + 0x8] = s1
   401: 78 17 10                 u8 [sp + 0x10] = a0
   404: 46 11 11                 u8 [sp + 17] = 0
   407: 33 06 80 00              s1 = 0x80
   411: 33 07 8c 00              a0 = 0x8c
   415: 7b 17                    u64 [sp] = a0
   417: 01                       fallthrough
      :                          @29
   418: 7b 15 18                 u64 [sp + 0x18] = s0
   421: 95 17 08                 a0 = sp + 0x8
   424: 95 18 18                 a1 = sp + 0x18
   427: 82 19                    a2 = u64 [sp]
   429: 50 10 0e 43 16           ra = 14, jump @452
      :                          @30 [@dyn 7]
   434: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
   437: 95 55 01                 s0 = s0 + 0x1
   440: 52 06 ea                 jump @29 if s1 != 0
      :                          @31
   443: 7c 18 10                 a1 = u8 [sp + 0x10]
   446: 33 07 01                 a0 = 0x1
   449: 52 08 1b                 jump @33 if a1 != 0
      :                          @32
   452: 82 17 08                 a0 = u64 [sp + 0x8]
   455: 82 78 28                 a1 = u64 [a0 + 0x28]
   458: 82 77 20                 a0 = u64 [a0 + 0x20]
   461: 82 8a 18                 a3 = u64 [a1 + 0x18]
   464: 33 08 89 01 01           a1 = 0x10189
   469: 33 09 01                 a2 = 0x1
   472: b4 a0 01 10              ra = 16, jump [a3]
      :                          @33 [@dyn 8]
   476: 82 10 30                 ra = u64 [sp + 0x30]
   479: 82 15 28                 s0 = u64 [sp + 0x28]
   482: 82 16 20                 s1 = u64 [sp + 0x20]
   485: 95 11 38                 sp = sp + 0x38
   488: 32 00                    ret
      :                          @34 [export #0: 'refine']
   490: 95 11 e8                 sp = sp + 0xffffffffffffffe8
   493: 7b 10 10                 u64 [sp + 0x10] = ra
   496: 7b 15 08                 u64 [sp + 0x8] = s0
   499: 7b 16                    u64 [sp] = s1
   501: 33 05 00 00 03           s0 = 0x30000
   506: 33 06 08 10              s1 = 0x1008
   510: 33 0a 05                 a3 = 0x5
   513: 33 07 00 00 03           a0 = 0x30000
   518: 33 08                    a1 = 0
   520: 33 09 08 10              a2 = 0x1008
   524: 33 0b                    a4 = 0
   526: 33 0c                    a5 = 0
   528: 0a 12                    ecalli 18 // 'fetch'
   530: 01                       fallthrough
      :                          @35
   531: 51 17 ff 29              jump @37 if a0 == 4294967295
      :                          @36
   535: 39 07 04 00 03           a0 = i32 [0x30004]
   540: 39 08 08 00 03           a1 = i32 [0x30008]
   545: 39 09 00 00 03           a2 = i32 [0x30000]
   550: be 78 08                 i32 a1 = a1 + a0
   553: 83 99 01                 i32 a2 = a2 + 0x1
   556: 3d 09 00 00 03           u32 [0x30000] = a2
   561: 3d 08 04 00 03           u32 [0x30004] = a1
   566: 3d 07 08 00 03           u32 [0x30008] = a0
   571: 01                       fallthrough
      :                          @37
   572: 64 57                    a0 = s0
   574: 64 68                    a1 = s1
   576: 0a 13                    ecalli 19 // 'export'
   578: 64 57                    a0 = s0
   580: 64 68                    a1 = s1
   582: 82 10 10                 ra = u64 [sp + 0x10]
   585: 82 15 08                 s0 = u64 [sp + 0x8]
   588: 82 16                    s1 = u64 [sp]
   590: 95 11 18                 sp = sp + 0x18
   593: 32 00                    ret
      :                          @38 [export #1: 'accumulate']
   595: 95 11 d8                 sp = sp + 0xffffffffffffffd8
   598: 7b 10 20                 u64 [sp + 0x20] = ra
   601: 7b 15 18                 u64 [sp + 0x18] = s0
   604: 7b 16 10                 u64 [sp + 0x10] = s1
   607: 33 09 00 00 01           a2 = 0x10000
   612: 51 08 7a 01              jump @84 if a1 == 0
      :                          @39
   616: 64 86                    s1 = a1
   618: 7d 78                    a1 = i8 [a0]
   620: 33 05 01                 s0 = 0x1
   623: 59 08 37                 jump @46 if a1 >=s 0
      :                          @40
   626: 84 8a ff 00              a3 = a1 & 0xff
   630: 33 05 02                 s0 = 0x2
   633: 53 2a c0 00 2d           jump @46 if a3 <u 192
      :                          @41
   638: 33 05 03                 s0 = 0x3
   641: 53 2a e0 00 25           jump @46 if a3 <u 224
      :                          @42
   646: 33 05 04                 s0 = 0x4
   649: 53 2a f0 00 1d           jump @46 if a3 <u 240
      :                          @43
   654: 33 05 05                 s0 = 0x5
   657: 53 2a f8 00 15           jump @46 if a3 <u 248
      :                          @44
   662: 33 05 06                 s0 = 0x6
   665: 53 2a fc 00 0d           jump @46 if a3 <u 252
      :                          @45
   670: 88 a8 fe 00              a1 = a3 <u 0xfe
   674: 9a 85 08                 s0 = 0x8 - a1
   677: 01                       fallthrough
      :                          @46
   678: ae 56 08                 jump @48 if s1 >=u s0
      :                          @47
   681: 33 08                    a1 = 0
   683: 28 33 01                 jump @84
      :                          @48
   686: 64 58                    a1 = s0
   688: 7b 17                    u64 [sp] = a0
   690: 50 10 12 7a 16           ra = 18, jump @469
      :                          @49 [@dyn 9]
   695: aa 56 1f 01              jump @83 if s1 == s0
      :                          @50
   699: 82 17                    a0 = u64 [sp]
   701: c8 57 07                 a0 = a0 + s0
   704: 7d 78                    a1 = i8 [a0]
   706: c9 56 06                 s1 = s1 - s0
   709: 33 05 01                 s0 = 0x1
   712: 59 08 37                 jump @57 if a1 >=s 0
      :                          @51
   715: 84 89 ff 00              a2 = a1 & 0xff
   719: 33 05 02                 s0 = 0x2
   722: 53 29 c0 00 2d           jump @57 if a2 <u 192
      :                          @52
   727: 33 05 03                 s0 = 0x3
   730: 53 29 e0 00 25           jump @57 if a2 <u 224
      :                          @53
   735: 33 05 04                 s0 = 0x4
   738: 53 29 f0 00 1d           jump @57 if a2 <u 240
      :                          @54
   743: 33 05 05                 s0 = 0x5
   746: 53 29 f8 00 15           jump @57 if a2 <u 248
      :                          @55
   751: 33 05 06                 s0 = 0x6
   754: 53 29 fc 00 0d           jump @57 if a2 <u 252
      :                          @56
   759: 88 98 fe 00              a1 = a2 <u 0xfe
   763: 9a 85 08                 s0 = 0x8 - a1
   766: 01                       fallthrough
      :                          @57
   767: ac 56 d7 00              jump @83 if s1 <u s0
      :                          @58
   771: 64 58                    a1 = s0
   773: 7b 17                    u64 [sp] = a0
   775: 50 10 14 25 16           ra = 20, jump @469
      :                          @59 [@dyn 10]
   780: 82 17                    a0 = u64 [sp]
   782: c8 57 07                 a0 = a0 + s0
   785: c9 56 0a                 a3 = s1 - s0
   788: ab 56 07                 jump @61 if s1 != s0
      :                          @60
   791: 33 05                    s0 = 0
   793: 28 41                    jump @69
      :                          @61
   795: 7d 78                    a1 = i8 [a0]
   797: 33 05 01                 s0 = 0x1
   800: 59 08 37                 jump @68 if a1 >=s 0
      :                          @62
   803: 84 89 ff 00              a2 = a1 & 0xff
   807: 33 05 02                 s0 = 0x2
   810: 53 29 c0 00 2d           jump @68 if a2 <u 192
      :                          @63
   815: 33 05 03                 s0 = 0x3
   818: 53 29 e0 00 25           jump @68 if a2 <u 224
      :                          @64
   823: 33 05 04                 s0 = 0x4
   826: 53 29 f0 00 1d           jump @68 if a2 <u 240
      :                          @65
   831: 33 05 05                 s0 = 0x5
   834: 53 29 f8 00 15           jump @68 if a2 <u 248
      :                          @66
   839: 33 05 06                 s0 = 0x6
   842: 53 29 fc 00 0d           jump @68 if a2 <u 252
      :                          @67
   847: 88 98 fe 00              a1 = a2 <u 0xfe
   851: 9a 85 08                 s0 = 0x8 - a1
   854: 01                       fallthrough
      :                          @68
   855: ac 5a 7f                 jump @83 if a3 <u s0
      :                          @69
   858: 64 a6                    s1 = a3
   860: 7b 17                    u64 [sp] = a0
   862: 64 58                    a1 = s0
   864: 50 10 16 cc 15           ra = 22, jump @469
      :                          @70 [@dyn 11]
   869: 51 07 71                 jump @83 if a0 == 0
      :                          @71
   872: e4 56 07                 a0 = maxu(s1, s0)
   875: c9 57 07                 a0 = a0 - s0
   878: 33 09 00 00 01           a2 = 0x10000
   883: 53 17 60 36 ff           jump @47 if a0 <u 96
      :                          @72
   888: 82 18                    a1 = u64 [sp]
   890: c8 85 05                 s0 = s0 + a1
   893: 95 76 a0                 s1 = a0 + 0xffffffffffffffa0
   896: 95 57 60                 a0 = s0 + 0x60
   899: 7b 17                    u64 [sp] = a0
   901: 51 06 69                 jump @85 if s1 == 0
      :                          @73
   904: 7d 78                    a1 = i8 [a0]
   906: 33 05 01                 s0 = 0x1
   909: 59 08 37                 jump @80 if a1 >=s 0
      :                          @74
   912: 84 89 ff 00              a2 = a1 & 0xff
   916: 33 05 02                 s0 = 0x2
   919: 53 29 c0 00 2d           jump @80 if a2 <u 192
      :                          @75
   924: 33 05 03                 s0 = 0x3
   927: 53 29 e0 00 25           jump @80 if a2 <u 224
      :                          @76
   932: 33 05 04                 s0 = 0x4
   935: 53 29 f0 00 1d           jump @80 if a2 <u 240
      :                          @77
   940: 33 05 05                 s0 = 0x5
   943: 53 29 f8 00 15           jump @80 if a2 <u 248
      :                          @78
   948: 33 05 06                 s0 = 0x6
   951: 53 29 fc 00 0d           jump @80 if a2 <u 252
      :                          @79
   956: 88 98 fe 00              a1 = a2 <u 0xfe
   960: 9a 85 08                 s0 = 0x8 - a1
   963: 01                       fallthrough
      :                          @80
   964: ac 56 6f 01              jump @119 if s1 <u s0
      :                          @81
   968: 64 58                    a1 = s0
   970: 50 10 18 62 15           ra = 24, jump @469
      :                          @82 [@dyn 12]
   975: 33 09 00 00 01           a2 = 0x10000
   980: 28 1f                    jump @86
      :                          @83
   982: 33 08                    a1 = 0
   984: 33 09 00 00 01           a2 = 0x10000
   989: 01                       fallthrough
      :                          @84
   990: 64 97                    a0 = a2
   992: 82 10 20                 ra = u64 [sp + 0x20]
   995: 82 15 18                 s0 = u64 [sp + 0x18]
   998: 82 16 10                 s1 = u64 [sp + 0x10]
  1001: 95 11 28                 sp = sp + 0x28
  1004: 32 00                    ret
      :                          @85
  1006: 33 05                    s0 = 0
  1008: 33 07                    a0 = 0
  1010: 01                       fallthrough
      :                          @86
  1011: e4 56 08                 a1 = maxu(s1, s0)
  1014: c9 58 08                 a1 = a1 - s0
  1017: e4 78 06                 s1 = maxu(a1, a0)
  1020: c9 76 06                 s1 = s1 - a0
  1023: 53 16 20 aa fe           jump @47 if s1 <u 32
      :                          @87
  1028: 82 18                    a1 = u64 [sp]
  1030: c8 85 05                 s0 = s0 + a1
  1033: c8 57 07                 a0 = a0 + s0
  1036: 95 66 e0                 s1 = s1 + 0xffffffffffffffe0
  1039: 95 77 20                 a0 = a0 + 0x20
  1042: 7b 17                    u64 [sp] = a0
  1044: 51 06 51                 jump @98 if s1 == 0
      :                          @88
  1047: 7d 78                    a1 = i8 [a0]
  1049: 33 05 01                 s0 = 0x1
  1052: 59 08 37                 jump @95 if a1 >=s 0
      :                          @89
  1055: 84 89 ff 00              a2 = a1 & 0xff
  1059: 33 05 02                 s0 = 0x2
  1062: 53 29 c0 00 2d           jump @95 if a2 <u 192
      :                          @90
  1067: 33 05 03                 s0 = 0x3
  1070: 53 29 e0 00 25           jump @95 if a2 <u 224
      :                          @91
  1075: 33 05 04                 s0 = 0x4
  1078: 53 29 f0 00 1d           jump @95 if a2 <u 240
      :                          @92
  1083: 33 05 05                 s0 = 0x5
  1086: 53 29 f8 00 15           jump @95 if a2 <u 248
      :                          @93
  1091: 33 05 06                 s0 = 0x6
  1094: 53 29 fc 00 0d           jump @95 if a2 <u 252
      :                          @94
  1099: 88 98 fe 00              a1 = a2 <u 0xfe
  1103: 9a 85 08                 s0 = 0x8 - a1
  1106: 01                       fallthrough
      :                          @95
  1107: ac 56 e0 00              jump @119 if s1 <u s0
      :                          @96
  1111: 64 58                    a1 = s0
  1113: 50 10 1a d3 14           ra = 26, jump @469
      :                          @97 [@dyn 13]
  1118: 33 09 00 00 01           a2 = 0x10000
  1123: 28 05                    jump @99
      :                          @98
  1125: 33 05                    s0 = 0
  1127: 01                       fallthrough
      :                          @99
  1128: ae 65 41 fe              jump @47 if s0 >=u s1
      :                          @100
  1132: 82 17                    a0 = u64 [sp]
  1134: c8 57 07                 a0 = a0 + s0
  1137: 7c 78                    a1 = u8 [a0]
  1139: 51 08 19                 jump @102 if a1 == 0
      :                          @101
  1142: 46 11 0f                 u8 [sp + 15] = 0
  1145: 95 17 0f                 a0 = sp + 0xf
  1148: 33 08 01                 a1 = 0x1
  1151: 33 09                    a2 = 0
  1153: 33 0a                    a3 = 0
  1155: 0a 03                    ecalli 3 // 'write'
  1157: 33 08                    a1 = 0
  1159: 33 05                    s0 = 0
  1161: 28 91 00                 jump @117
      :                          @102
  1164: e4 56 08                 a1 = maxu(s1, s0)
  1167: c9 58 08                 a1 = a1 - s0
  1170: 95 76 01                 s1 = a0 + 0x1
  1173: 33 07 01                 a0 = 0x1
  1176: e4 78 07                 a0 = maxu(a1, a0)
  1179: 33 09 02                 a2 = 0x2
  1182: 95 7a ff                 a3 = a0 + 0xffffffffffffffff
  1185: ae 98 09                 jump @104 if a1 >=u a2
      :                          @103
  1188: 33 05                    s0 = 0
  1190: 33 07                    a0 = 0
  1192: 28 4f                    jump @114
      :                          @104
  1194: 7d 67                    a0 = i8 [s1]
  1196: 33 05 01                 s0 = 0x1
  1199: 59 07 37                 jump @111 if a0 >=s 0
      :                          @105
  1202: 84 77 ff 00              a0 = a0 & 0xff
  1206: 33 05 02                 s0 = 0x2
  1209: 53 27 c0 00 2d           jump @111 if a0 <u 192
      :                          @106
  1214: 33 05 03                 s0 = 0x3
  1217: 53 27 e0 00 25           jump @111 if a0 <u 224
      :                          @107
  1222: 33 05 04                 s0 = 0x4
  1225: 53 27 f0 00 1d           jump @111 if a0 <u 240
      :                          @108
  1230: 33 05 05                 s0 = 0x5
  1233: 53 27 f8 00 15           jump @111 if a0 <u 248
      :                          @109
  1238: 33 05 06                 s0 = 0x6
  1241: 53 27 fc 00 0d           jump @111 if a0 <u 252
      :                          @110
  1246: 88 77 fe 00              a0 = a0 <u 0xfe
  1250: 9a 75 08                 s0 = 0x8 - a0
  1253: 01                       fallthrough
      :                          @111
  1254: 7b 1a                    u64 [sp] = a3
  1256: ac 5a 4d                 jump @121 if a3 <u s0
      :                          @112
  1259: 64 67                    a0 = s1
  1261: 64 58                    a1 = s0
  1263: 50 10 1c 3d 14           ra = 28, jump @469
      :                          @113 [@dyn 14]
  1268: 82 1a                    a3 = u64 [sp]
  1270: 01                       fallthrough
      :                          @114
  1271: c8 56 09                 a2 = s1 + s0
  1274: e4 5a 08                 a1 = maxu(a3, s0)
  1277: c9 58 08                 a1 = a1 - s0
  1280: e6 78 05                 s0 = minu(a1, a0)
  1283: 46 11 0f                 u8 [sp + 15] = 0
  1286: 95 17 0f                 a0 = sp + 0xf
  1289: 33 08 01                 a1 = 0x1
  1292: 64 96                    s1 = a2
  1294: 64 5a                    a3 = s0
  1296: 0a 03                    ecalli 3 // 'write'
  1298: 01                       fallthrough
      :                          @115
  1299: 55 15 21 21              jump @120 if s0 >=u 33
      :                          @116
  1303: 64 68                    a1 = s1
  1305: 01                       fallthrough
      :                          @117
  1306: 33 06 19 10 03           s1 = 0x31019
  1311: 33 07 19 10 03           a0 = 0x31019
  1316: 64 59                    a2 = s0
  1318: 50 10 1e 1d 0a           ra = 30, jump @278
      :                          @118 [@dyn 15]
  1323: 64 69                    a2 = s1
  1325: 33 08 20                 a1 = 0x20
  1328: 28 ae fe                 jump @84
      :                          @119
  1331: 00                       trap
      :                          @120
  1332: 00                       trap
      :                          @121
  1333: 00                       trap
      :                          @122 [export #2: 'on_transfer']
  1334: 95 11 70 fd              sp = sp + 0xfffffffffffffd70
  1338: 7b 10 88 02              u64 [sp + 0x288] = ra
  1342: 7b 15 80 02              u64 [sp + 0x280] = s0
  1346: 7b 16 78 02              u64 [sp + 0x278] = s1
  1350: 64 8c                    a5 = a1
  1352: 64 79                    a2 = a0
  1354: 33 02                    t0 = 0
  1356: 95 7b 04                 a4 = a0 + 0x4
  1359: 33 07 02                 a0 = 0x2
  1362: 7b 17 28                 u64 [sp + 0x28] = a0
  1365: 33 07 06                 a0 = 0x6
  1368: 7b 17 58                 u64 [sp + 0x58] = a0
  1371: 33 07 0a                 a0 = 0xa
  1374: 7b 17 20                 u64 [sp + 0x20] = a0
  1377: 33 07 58 00 01           a0 = 0x10058
  1382: 7b 17 18                 u64 [sp + 0x18] = a0
  1385: 33 07 84 00              a0 = 0x84
  1389: 7b 17 10                 u64 [sp + 0x10] = a0
  1392: 33 07 70 02 01           a0 = 0x10270
  1397: 7b 17 08                 u64 [sp + 0x8] = a0
  1400: 33 07 40 10 03           a0 = 0x31040
  1405: 95 77 00 00 01           a0 = a0 + 0x10000
  1410: 7b 17 50                 u64 [sp + 0x50] = a0
  1413: 33 07 f8 00 01           a0 = 0x100f8
  1418: 7b 17                    u64 [sp] = a0
  1420: 95 97 08                 a0 = a2 + 0x8
  1423: 95 ca f8                 a3 = a5 + 0xfffffffffffffff8
  1426: 95 98 0c                 a1 = a2 + 0xc
  1429: 7b 18 60                 u64 [sp + 0x60] = a1
  1432: 33 08 08                 a1 = 0x8
  1435: 33 06 ff ff fe           s1 = 0xfffffffffffeffff
  1440: 7b 16 48                 u64 [sp + 0x48] = s1
  1443: 7b 17 c0 00              u64 [sp + 0xc0] = a0
  1447: 7b 17 b8 00              u64 [sp + 0xb8] = a0
  1451: 7b 1c 40                 u64 [sp + 0x40] = a5
  1454: 7b 19 38                 u64 [sp + 0x38] = a2
  1457: 7b 1b 30                 u64 [sp + 0x30] = a4
  1460: 7b 1a a8 00              u64 [sp + 0xa8] = a3
  1464: ac 8c c0 04              jump @170 if a5 <u a1
      :                          @123
  1468: 51 09 d5 04              jump @171 if a2 == 0
      :                          @124
  1472: 51 0b d1 04              jump @171 if a4 == 0
      :                          @125
  1476: 7c 97                    a0 = u8 [a2]
  1478: 7b 17 78                 u64 [sp + 0x78] = a0
  1481: 7c 97 01                 a0 = u8 [a2 + 0x1]
  1484: 7b 17 68                 u64 [sp + 0x68] = a0
  1487: 7c 97 02                 a0 = u8 [a2 + 0x2]
  1490: 7b 17 70                 u64 [sp + 0x70] = a0
  1493: 7c 97 03                 a0 = u8 [a2 + 0x3]
  1496: 7b 17 80 00              u64 [sp + 0x80] = a0
  1500: 7c b7                    a0 = u8 [a4]
  1502: 7b 17 98 00              u64 [sp + 0x98] = a0
  1506: 7c b7 01                 a0 = u8 [a4 + 0x1]
  1509: 7b 17 88 00              u64 [sp + 0x88] = a0
  1513: 7c b7 02                 a0 = u8 [a4 + 0x2]
  1516: 7b 17 90 00              u64 [sp + 0x90] = a0
  1520: 7c b7 03                 a0 = u8 [a4 + 0x3]
  1523: 7b 17 a0 00              u64 [sp + 0xa0] = a0
  1527: 51 0a 53                 jump @135 if a3 == 0
      :                          @126
  1530: 82 17 c0 00              a0 = u64 [sp + 0xc0]
  1534: 7d 77                    a0 = i8 [a0]
  1536: 33 05 01                 s0 = 0x1
  1539: 59 07 4a                 jump @136 if a0 >=s 0
      :                          @127
  1542: 84 77 ff 00              a0 = a0 & 0xff
  1546: 33 05 02                 s0 = 0x2
  1549: 33 06 c0 00              s1 = 0xc0
  1553: ac 67 33                 jump @133 if a0 <u s1
      :                          @128
  1556: 33 05 03                 s0 = 0x3
  1559: 33 06 e0 00              s1 = 0xe0
  1563: ac 67 29                 jump @133 if a0 <u s1
      :                          @129
  1566: 33 05 04                 s0 = 0x4
  1569: 33 06 f0 00              s1 = 0xf0
  1573: ac 67 1f                 jump @133 if a0 <u s1
      :                          @130
  1576: 33 05 05                 s0 = 0x5
  1579: 33 06 f8 00              s1 = 0xf8
  1583: ac 67 15                 jump @133 if a0 <u s1
      :                          @131
  1586: 33 05 06                 s0 = 0x6
  1589: 33 06 fc 00              s1 = 0xfc
  1593: ac 67 0b                 jump @133 if a0 <u s1
      :                          @132
  1596: 88 77 fe 00              a0 = a0 <u 0xfe
  1600: 9a 75 08                 s0 = 0x8 - a0
  1603: 01                       fallthrough
      :                          @133
  1604: ae 5a 09                 jump @136 if a3 >=u s0
      :                          @134
  1607: 28 31 04                 jump @170
      :                          @135
  1610: 33 05                    s0 = 0
  1612: 01                       fallthrough
      :                          @136
  1613: 82 17 c0 00              a0 = u64 [sp + 0xc0]
  1617: 64 58                    a1 = s0
  1619: 7b 12 b0 00              u64 [sp + 0xb0] = t0
  1623: 50 10 20 d5 12           ra = 32, jump @469
      :                          @137 [@dyn 16]
  1628: 33 03 98 00              t1 = 0x98
  1632: 33 02 04                 t0 = 0x4
  1635: 33 06 08                 s1 = 0x8
  1638: 82 1c a8 00              a5 = u64 [sp + 0xa8]
  1642: 82 1b b0 00              a4 = u64 [sp + 0xb0]
  1646: ae 7b 0a 04              jump @170 if a4 >=u a0
      :                          @138
  1650: 82 18 68                 a1 = u64 [sp + 0x68]
  1653: 97 88 08                 a1 = a1 << 0x8
  1656: 82 19 78                 a2 = u64 [sp + 0x78]
  1659: d4 98 08                 a1 = a1 | a2
  1662: 82 19 70                 a2 = u64 [sp + 0x70]
  1665: 97 99 10                 a2 = a2 << 0x10
  1668: 82 1a 80 00              a3 = u64 [sp + 0x80]
  1672: 97 aa 18                 a3 = a3 << 0x18
  1675: d4 a9 09                 a2 = a2 | a3
  1678: d4 89 04                 t2 = a2 | a1
  1681: 82 18 88 00              a1 = u64 [sp + 0x88]
  1685: 97 88 08                 a1 = a1 << 0x8
  1688: 82 19 98 00              a2 = u64 [sp + 0x98]
  1692: d4 98 08                 a1 = a1 | a2
  1695: 82 19 90 00              a2 = u64 [sp + 0x90]
  1699: 97 99 10                 a2 = a2 << 0x10
  1702: 82 1a a0 00              a3 = u64 [sp + 0xa0]
  1706: 97 aa 18                 a3 = a3 << 0x18
  1709: d4 a9 09                 a2 = a2 | a3
  1712: d4 89 00                 ra = a2 | a1
  1715: e4 5c 08                 a1 = maxu(a5, s0)
  1718: c9 58 08                 a1 = a1 - s0
  1721: 82 19 b8 00              a2 = u64 [sp + 0xb8]
  1725: c8 59 09                 a2 = a2 + s0
  1728: 82 1a 60                 a3 = u64 [sp + 0x60]
  1731: c8 a5 05                 s0 = s0 + a3
  1734: 64 ba                    a3 = a4
  1736: 01                       fallthrough
      :                          @139
  1737: ac 68 af 03              jump @170 if a1 <u s1
      :                          @140
  1741: aa 25 c4 03              jump @171 if s0 == t0
      :                          @141
  1745: 51 05 c0 03              jump @171 if s0 == 0
      :                          @142
  1749: ac 38 a3 03              jump @170 if a1 <u t1
      :                          @143
  1753: 51 0a 17                 jump @146 if a3 == 0
      :                          @144
  1756: 95 88 68 ff              a1 = a1 + 0xffffffffffffff68
  1760: 95 55 98 00              s0 = s0 + 0x98
  1764: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  1767: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1770: 52 07 df                 jump @139 if a0 != 0
      :                          @145
  1773: 28 8b 03                 jump @170
      :                          @146
  1776: 7c 97 01                 a0 = u8 [a2 + 0x1]
  1779: 7c 98                    a1 = u8 [a2]
  1781: 7c 9a 02                 a3 = u8 [a2 + 0x2]
  1784: 7d 9b 03                 a4 = i8 [a2 + 0x3]
  1787: 8a 77 08                 i32 a0 = a0 << 0x8
  1790: d4 87 07                 a0 = a0 | a1
  1793: 8a a8 10                 i32 a1 = a3 << 0x10
  1796: 8a ba 18                 i32 a3 = a4 << 0x18
  1799: d4 a8 08                 a1 = a1 | a3
  1802: d4 87 07                 a0 = a0 | a1
  1805: 7b 17 a0 00              u64 [sp + 0xa0] = a0
  1809: 7c 57 01                 a0 = u8 [s0 + 0x1]
  1812: 7c 58                    a1 = u8 [s0]
  1814: 7c 5a 02                 a3 = u8 [s0 + 0x2]
  1817: 7d 5b 03                 a4 = i8 [s0 + 0x3]
  1820: 8a 77 08                 i32 a0 = a0 << 0x8
  1823: d4 87 07                 a0 = a0 | a1
  1826: 8a a8 10                 i32 a1 = a3 << 0x10
  1829: 8a ba 18                 i32 a3 = a4 << 0x18
  1832: d4 a8 08                 a1 = a1 | a3
  1835: 7c 9a 0f                 a3 = u8 [a2 + 0xf]
  1838: 7c 9b 0e                 a4 = u8 [a2 + 0xe]
  1841: d4 87 07                 a0 = a0 | a1
  1844: 7b 17 98 00              u64 [sp + 0x98] = a0
  1848: 7c 97 0d                 a0 = u8 [a2 + 0xd]
  1851: 97 aa 10                 a3 = a3 << 0x10
  1854: 97 bb 08                 a4 = a4 << 0x8
  1857: d4 ba 0a                 a3 = a3 | a4
  1860: 7c 98 0c                 a1 = u8 [a2 + 0xc]
  1863: 7c 9b 0b                 a4 = u8 [a2 + 0xb]
  1866: d4 a7 07                 a0 = a0 | a3
  1869: 97 77 10                 a0 = a0 << 0x10
  1872: 97 88 08                 a1 = a1 << 0x8
  1875: d4 b8 08                 a1 = a1 | a4
  1878: 7c 9a 0a                 a3 = u8 [a2 + 0xa]
  1881: 7c 9b 09                 a4 = u8 [a2 + 0x9]
  1884: d4 87 07                 a0 = a0 | a1
  1887: 97 77 10                 a0 = a0 << 0x10
  1890: 97 aa 08                 a3 = a3 << 0x8
  1893: d4 ba 0a                 a3 = a3 | a4
  1896: d4 a7 07                 a0 = a0 | a3
  1899: 7c 98 08                 a1 = u8 [a2 + 0x8]
  1902: 97 77 08                 a0 = a0 << 0x8
  1905: 7c 9a 97 00              a3 = u8 [a2 + 0x97]
  1909: 7c 9b 96 00              a4 = u8 [a2 + 0x96]
  1913: d4 87 07                 a0 = a0 | a1
  1916: 7b 17 90 00              u64 [sp + 0x90] = a0
  1920: 7c 97 95 00              a0 = u8 [a2 + 0x95]
  1924: 97 aa 10                 a3 = a3 << 0x10
  1927: 97 bb 08                 a4 = a4 << 0x8
  1930: d4 ba 0a                 a3 = a3 | a4
  1933: d4 a7 07                 a0 = a0 | a3
  1936: 7c 9a 94 00              a3 = u8 [a2 + 0x94]
  1940: 7c 9b 93 00              a4 = u8 [a2 + 0x93]
  1944: 95 98 10                 a1 = a2 + 0x10
  1947: 97 77 10                 a0 = a0 << 0x10
  1950: 97 aa 08                 a3 = a3 << 0x8
  1953: d4 ba 0a                 a3 = a3 | a4
  1956: 7c 9b 92 00              a4 = u8 [a2 + 0x92]
  1960: d4 a7 07                 a0 = a0 | a3
  1963: 7c 9a 91 00              a3 = u8 [a2 + 0x91]
  1967: 97 77 10                 a0 = a0 << 0x10
  1970: 97 bb 08                 a4 = a4 << 0x8
  1973: 7c 99 90 00              a2 = u8 [a2 + 0x90]
  1977: d4 ba 0a                 a3 = a3 | a4
  1980: d4 a7 07                 a0 = a0 | a3
  1983: 97 77 08                 a0 = a0 << 0x8
  1986: d4 97 07                 a0 = a0 | a2
  1989: 7b 17 88 00              u64 [sp + 0x88] = a0
  1993: 95 17 68 01              a0 = sp + 0x168
  1997: 33 09 80 00              a2 = 0x80
  2001: 64 45                    s0 = t2
  2003: 64 06                    s1 = ra
  2005: 50 10 22 6e 07           ra = 34, jump @278
      :                          @147 [@dyn 17]
  2010: 95 17 e0 00              a0 = sp + 0xe0
  2014: 95 18 68 01              a1 = sp + 0x168
  2018: 33 09 80 00              a2 = 0x80
  2022: 50 10 24 5d 07           ra = 36, jump @278
      :                          @148 [@dyn 18]
  2027: 7a 15 c8 00              u32 [sp + 0xc8] = s0
  2031: 7a 16 cc 00              u32 [sp + 0xcc] = s1
  2035: 82 17 a0 00              a0 = u64 [sp + 0xa0]
  2039: 7a 17 d0 00              u32 [sp + 0xd0] = a0
  2043: 82 17 98 00              a0 = u64 [sp + 0x98]
  2047: 7a 17 d4 00              u32 [sp + 0xd4] = a0
  2051: 82 17 90 00              a0 = u64 [sp + 0x90]
  2055: 7b 17 d8 00              u64 [sp + 0xd8] = a0
  2059: 82 17 88 00              a0 = u64 [sp + 0x88]
  2063: 7b 17 60 01              u64 [sp + 0x160] = a0
  2067: 95 17 c8 00              a0 = sp + 0xc8
  2071: 7b 17 68 01              u64 [sp + 0x168] = a0
  2075: 82 17 28                 a0 = u64 [sp + 0x28]
  2078: 7b 17 70 01              u64 [sp + 0x170] = a0
  2082: 95 18 cc 00              a1 = sp + 0xcc
  2086: 7b 18 78 01              u64 [sp + 0x178] = a1
  2090: 7b 17 80 01              u64 [sp + 0x180] = a0
  2094: 95 18 d0 00              a1 = sp + 0xd0
  2098: 7b 18 88 01              u64 [sp + 0x188] = a1
  2102: 7b 17 90 01              u64 [sp + 0x190] = a0
  2106: 95 18 d4 00              a1 = sp + 0xd4
  2110: 7b 18 98 01              u64 [sp + 0x198] = a1
  2114: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  2118: 95 17 d8 00              a0 = sp + 0xd8
  2122: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  2126: 82 17 58                 a0 = u64 [sp + 0x58]
  2129: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  2133: 95 18 e0 00              a1 = sp + 0xe0
  2137: 7b 18 b8 01              u64 [sp + 0x1b8] = a1
  2141: 82 18 20                 a1 = u64 [sp + 0x20]
  2144: 7b 18 c0 01              u64 [sp + 0x1c0] = a1
  2148: 95 18 60 01              a1 = sp + 0x160
  2152: 7b 18 c8 01              u64 [sp + 0x1c8] = a1
  2156: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
  2160: 82 17 18                 a0 = u64 [sp + 0x18]
  2163: 7b 17 28 02              u64 [sp + 0x228] = a0
  2167: 49 21 30 02 07           u64 [sp + 560] = 0x7
  2172: 49 21 48 02              u64 [sp + 584] = 0
  2176: 95 17 68 01              a0 = sp + 0x168
  2180: 7b 17 38 02              u64 [sp + 0x238] = a0
  2184: 49 21 40 02 07           u64 [sp + 576] = 0x7
  2189: 95 17 58 02              a0 = sp + 0x258
  2193: 95 18 28 02              a1 = sp + 0x228
  2197: 50 10 26 3a 04           ra = 38, jump @228
      :                          @149 [@dyn 19]
  2202: 82 15 60 02              s0 = u64 [sp + 0x260]
  2206: 82 1b 68 02              a4 = u64 [sp + 0x268]
  2210: 82 16 58 02              s1 = u64 [sp + 0x258]
  2214: 33 07 02                 a0 = 0x2
  2217: 33 08                    a1 = 0
  2219: 33 09                    a2 = 0
  2221: 64 5a                    a3 = s0
  2223: 33 00 28                 ra = 0x28
  2226: 0a 64                    ecalli 100 // 'log'
  2228: 01                       fallthrough
      :                          @150 [@dyn 20]
  2229: 82 17 48                 a0 = u64 [sp + 0x48]
  2232: c8 67 07                 a0 = a0 + s1
  2235: 82 1b 50                 a4 = u64 [sp + 0x50]
  2238: 53 37 00 00 ff 1a        jump @155 if a0 <u 4294901760
      :                          @151
  2244: 82 b7                    a0 = u64 [a4]
  2246: c9 7b 08                 a1 = a4 - a0
  2249: ab 58 0f                 jump @155 if a1 != s0
      :                          @152
  2252: c9 67 08                 a1 = a0 - s1
  2255: 01                       fallthrough
      :                          @153
  2256: 82 b9                    a2 = u64 [a4]
  2258: ab 79 f2                 jump @151 if a2 != a0
      :                          @154
  2261: 7b b8                    u64 [a4] = a1
  2263: 01                       fallthrough
      :                          @155
  2264: 81 17 cc 00              a0 = i32 [sp + 0xcc]
  2268: 7a 17 ec 01              u32 [sp + 0x1ec] = a0
  2272: 95 17 ec 01              a0 = sp + 0x1ec
  2276: 33 08 04                 a1 = 0x4
  2279: 95 19 e0 00              a2 = sp + 0xe0
  2283: 33 0a 80 00              a3 = 0x80
  2287: 0a 03                    ecalli 3 // 'write'
  2289: 0a                       ecalli 0 // 'gas'
  2290: 7b 17 f0 01              u64 [sp + 0x1f0] = a0
  2294: 7b 17 f8 01              u64 [sp + 0x1f8] = a0
  2298: 46 21 07 02 04           u8 [sp + 519] = 0x4
  2303: 7b 17 08 02              u64 [sp + 0x208] = a0
  2307: 95 17 07 02              a0 = sp + 0x207
  2311: 33 08 01                 a1 = 0x1
  2314: 95 19 08 02              a2 = sp + 0x208
  2318: 33 0a 08                 a3 = 0x8
  2321: 0a 03                    ecalli 3 // 'write'
  2323: 49 21 68 01 02           u64 [sp + 360] = 0x2
  2328: 49 21 78 01 02           u64 [sp + 376] = 0x2
  2333: 49 21 88 01              u64 [sp + 392] = 0
  2337: 14 07 20 00 00 00 10 00 00 00 a0 = 0x1000000020
  2347: 7b 17 90 01              u64 [sp + 0x190] = a0
  2351: 46 21 98 01 03           u8 [sp + 408] = 0x3
  2356: 49 21 a0 01 02           u64 [sp + 416] = 0x2
  2361: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  2366: 49 21 c0 01 01           u64 [sp + 448] = 0x1
  2371: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
  2375: 95 17 07 02              a0 = sp + 0x207
  2379: 7b 17 58 02              u64 [sp + 0x258] = a0
  2383: 82 17 10                 a0 = u64 [sp + 0x10]
  2386: 7b 17 60 02              u64 [sp + 0x260] = a0
  2390: 95 17 f8 01              a0 = sp + 0x1f8
  2394: 7b 17 68 02              u64 [sp + 0x268] = a0
  2398: 82 17 58                 a0 = u64 [sp + 0x58]
  2401: 7b 17 70 02              u64 [sp + 0x270] = a0
  2405: 46 21 d0 01 03           u8 [sp + 464] = 0x3
  2410: 82 17 08                 a0 = u64 [sp + 0x8]
  2413: 7b 17 28 02              u64 [sp + 0x228] = a0
  2417: 49 21 30 02 02           u64 [sp + 560] = 0x2
  2422: 95 17 68 01              a0 = sp + 0x168
  2426: 7b 17 48 02              u64 [sp + 0x248] = a0
  2430: 49 21 50 02 02           u64 [sp + 592] = 0x2
  2435: 95 17 58 02              a0 = sp + 0x258
  2439: 7b 17 38 02              u64 [sp + 0x238] = a0
  2443: 49 21 40 02 02           u64 [sp + 576] = 0x2
  2448: 95 17 10 02              a0 = sp + 0x210
  2452: 95 18 28 02              a1 = sp + 0x228
  2456: 50 10 2a 37 03           ra = 42, jump @228
      :                          @156 [@dyn 21]
  2461: 82 15 18 02              s0 = u64 [sp + 0x218]
  2465: 82 1b 20 02              a4 = u64 [sp + 0x220]
  2469: 82 16 10 02              s1 = u64 [sp + 0x210]
  2473: 33 07 02                 a0 = 0x2
  2476: 33 08                    a1 = 0
  2478: 33 09                    a2 = 0
  2480: 64 5a                    a3 = s0
  2482: 33 00 2c                 ra = 0x2c
  2485: 0a 64                    ecalli 100 // 'log'
  2487: 01                       fallthrough
      :                          @157 [@dyn 22]
  2488: 82 1b 50                 a4 = u64 [sp + 0x50]
  2491: 82 17 48                 a0 = u64 [sp + 0x48]
  2494: c8 67 07                 a0 = a0 + s1
  2497: 53 37 00 00 ff 1a        jump @162 if a0 <u 4294901760
      :                          @158
  2503: 82 b7                    a0 = u64 [a4]
  2505: c9 7b 08                 a1 = a4 - a0
  2508: ab 58 0f                 jump @162 if a1 != s0
      :                          @159
  2511: c9 67 08                 a1 = a0 - s1
  2514: 01                       fallthrough
      :                          @160
  2515: 82 b9                    a2 = u64 [a4]
  2517: ab 79 f2                 jump @158 if a2 != a0
      :                          @161
  2520: 7b b8                    u64 [a4] = a1
  2522: 01                       fallthrough
      :                          @162
  2523: 95 17 f0 01              a0 = sp + 0x1f0
  2527: 7b 17 58 02              u64 [sp + 0x258] = a0
  2531: 82 17 58                 a0 = u64 [sp + 0x58]
  2534: 7b 17 60 02              u64 [sp + 0x260] = a0
  2538: 82 17                    a0 = u64 [sp]
  2540: 7b 17 68 01              u64 [sp + 0x168] = a0
  2544: 49 21 70 01 02           u64 [sp + 368] = 0x2
  2549: 49 21 88 01              u64 [sp + 392] = 0
  2553: 95 17 58 02              a0 = sp + 0x258
  2557: 7b 17 78 01              u64 [sp + 0x178] = a0
  2561: 49 21 80 01 01           u64 [sp + 384] = 0x1
  2566: 95 17 28 02              a0 = sp + 0x228
  2570: 95 18 68 01              a1 = sp + 0x168
  2574: 50 10 2e c1 02           ra = 46, jump @228
      :                          @163 [@dyn 23]
  2579: 82 15 30 02              s0 = u64 [sp + 0x230]
  2583: 82 1b 38 02              a4 = u64 [sp + 0x238]
  2587: 82 16 28 02              s1 = u64 [sp + 0x228]
  2591: 33 07 02                 a0 = 0x2
  2594: 33 08                    a1 = 0
  2596: 33 09                    a2 = 0
  2598: 64 5a                    a3 = s0
  2600: 33 00 30                 ra = 0x30
  2603: 0a 64                    ecalli 100 // 'log'
  2605: 01                       fallthrough
      :                          @164 [@dyn 24]
  2606: 82 1b 50                 a4 = u64 [sp + 0x50]
  2609: 82 17 48                 a0 = u64 [sp + 0x48]
  2612: c8 67 07                 a0 = a0 + s1
  2615: 53 37 00 00 ff 1a        jump @169 if a0 <u 4294901760
      :                          @165
  2621: 82 b7                    a0 = u64 [a4]
  2623: c9 7b 08                 a1 = a4 - a0
  2626: ab 58 0f                 jump @169 if a1 != s0
      :                          @166
  2629: c9 67 08                 a1 = a0 - s1
  2632: 01                       fallthrough
      :                          @167
  2633: 82 b9                    a2 = u64 [a4]
  2635: ab 79 f2                 jump @165 if a2 != a0
      :                          @168
  2638: 7b b8                    u64 [a4] = a1
  2640: 01                       fallthrough
      :                          @169
  2641: 82 12 b0 00              t0 = u64 [sp + 0xb0]
  2645: 95 22 01                 t0 = t0 + 0x1
  2648: 82 17 b8 00              a0 = u64 [sp + 0xb8]
  2652: 95 77 98 00              a0 = a0 + 0x98
  2656: 7b 17 b8 00              u64 [sp + 0xb8] = a0
  2660: 82 1c 40                 a5 = u64 [sp + 0x40]
  2663: 82 19 38                 a2 = u64 [sp + 0x38]
  2666: 82 1b 30                 a4 = u64 [sp + 0x30]
  2669: 82 1a a8 00              a3 = u64 [sp + 0xa8]
  2673: 33 08 08                 a1 = 0x8
  2676: ae 8c 48 fb              jump @123 if a5 >=u a1
      :                          @170
  2680: 33 07 00 00 01           a0 = 0x10000
  2685: 33 08                    a1 = 0
  2687: 82 10 88 02              ra = u64 [sp + 0x288]
  2691: 82 15 80 02              s0 = u64 [sp + 0x280]
  2695: 82 16 78 02              s1 = u64 [sp + 0x278]
  2699: 95 11 90 02              sp = sp + 0x290
  2703: 32 00                    ret
      :                          @171
  2705: 00                       trap
      :                          @172
  2706: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  2709: 7b 10 40                 u64 [sp + 0x40] = ra
  2712: 7b 15 38                 u64 [sp + 0x38] = s0
  2715: 7b 16 30                 u64 [sp + 0x30] = s1
  2718: c8 89 09                 a2 = a2 + a1
  2721: ac 89 52                 jump @180 if a2 <u a1
      :                          @173
  2724: 64 75                    s0 = a0
  2726: 82 77                    a0 = u64 [a0]
  2728: 97 78 01                 a1 = a0 << 0x1
  2731: 33 0a 08                 a3 = 0x8
  2734: e4 a9 09                 a2 = maxu(a2, a3)
  2737: e4 98 06                 s1 = maxu(a1, a2)
  2740: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  2743: 98 88 3f                 a1 = a1 >> 0x3f
  2746: 51 07 12                 jump @175 if a0 == 0
      :                          @174
  2749: 82 59 08                 a2 = u64 [s0 + 0x8]
  2752: 7b 19 18                 u64 [sp + 0x18] = a2
  2755: 49 11 20 01              u64 [sp + 32] = 0x1
  2759: 7b 17 28                 u64 [sp + 0x28] = a0
  2762: 28 06                    jump @176
      :                          @175
  2764: 49 11 20                 u64 [sp + 32] = 0
  2767: 01                       fallthrough
      :                          @176
  2768: 64 17                    a0 = sp
  2770: 95 1a 18                 a3 = sp + 0x18
  2773: 64 69                    a2 = s1
  2775: 50 10 32 32              ra = 50, jump @184
      :                          @177 [@dyn 25]
  2779: 82 18                    a1 = u64 [sp]
  2781: 82 17 08                 a0 = u64 [sp + 0x8]
  2784: 51 08 14                 jump @181 if a1 == 0
      :                          @178
  2787: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  2797: aa 87 0d                 jump @182 if a0 == a1
      :                          @179
  2800: 52 07 18                 jump @183 if a0 != 0
      :                          @180
  2803: 00                       trap
      :                          @181
  2804: 7b 57 08                 u64 [s0 + 0x8] = a0
  2807: 7b 56                    u64 [s0] = s1
  2809: 01                       fallthrough
      :                          @182
  2810: 82 10 40                 ra = u64 [sp + 0x40]
  2813: 82 15 38                 s0 = u64 [sp + 0x38]
  2816: 82 16 30                 s1 = u64 [sp + 0x30]
  2819: 95 11 48                 sp = sp + 0x48
  2822: 32 00                    ret
      :                          @183
  2824: 00                       trap
      :                          @184
  2825: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  2828: 7b 10 30                 u64 [sp + 0x30] = ra
  2831: 7b 15 28                 u64 [sp + 0x28] = s0
  2834: 7b 16 20                 u64 [sp + 0x20] = s1
  2837: 64 95                    s0 = a2
  2839: 64 72                    t0 = a0
  2841: 51 08 79                 jump @194 if a1 == 0
      :                          @185
  2844: 82 a7 08                 a0 = u64 [a3 + 0x8]
  2847: 51 07 7c                 jump @195 if a0 == 0
      :                          @186
  2850: 82 a9 10                 a2 = u64 [a3 + 0x10]
  2853: 51 09 aa 00              jump @202 if a2 == 0
      :                          @187
  2857: 82 a8                    a1 = u64 [a3]
  2859: 33 06 40 10 03           s1 = 0x31040
  2864: 33 03 00 00 01           t1 = 0x10000
  2869: c8 36 06                 s1 = s1 + t1
  2872: 01                       fallthrough
      :                          @188
  2873: 82 6a                    a3 = u64 [s1]
  2875: c8 5a 07                 a0 = a3 + s0
  2878: ac a7 cf 00              jump @208 if a0 <u a3
      :                          @189
  2882: 95 7b 01                 a4 = a0 + 0x1
  2885: 88 bc 01                 a5 = a4 <u 0x1
  2888: d8 b3 0b                 a4 = t1 <u a4
  2891: d4 cb 0b                 a4 = a4 | a5
  2894: 52 0b bf 00              jump @208 if a4 != 0
      :                          @190
  2898: 82 6b                    a4 = u64 [s1]
  2900: ab ab e5                 jump @188 if a4 != a3
      :                          @191
  2903: 7b 67                    u64 [s1] = a0
  2905: 33 0c                    a5 = 0
  2907: 7b 12 18                 u64 [sp + 0x18] = t0
  2910: 33 0a 40 10 03           a3 = 0x31040
  2915: 33 0b 00 00 01           a4 = 0x10000
  2920: 7b 1a                    u64 [sp] = a3
  2922: c8 ba 0a                 a3 = a3 + a4
  2925: c9 7a 07                 a0 = a3 - a0
  2928: 7b 17 10                 u64 [sp + 0x10] = a0
  2931: 7b 18 08                 u64 [sp + 0x8] = a1
  2934: 64 96                    s1 = a2
  2936: 50 10 34 cb 03           ra = 52, jump @278
      :                          @192 [@dyn 26]
  2941: 54 36 00 00 01 98 00     jump @209 if s1 <=u 65536
      :                          @193
  2948: 82 12 18                 t0 = u64 [sp + 0x18]
  2951: 82 18 10                 a1 = u64 [sp + 0x10]
  2954: 33 07                    a0 = 0
  2956: 7b 28 08                 u64 [t0 + 0x8] = a1
  2959: 28 b5 00                 jump @215
      :                          @194
  2962: 49 12 08                 u64 [t0 + 8] = 0
  2965: 33 07 01                 a0 = 0x1
  2968: 28 ac 00                 jump @215
      :                          @195
  2971: 33 09 40 10 03           a2 = 0x31040
  2976: 33 07 00 00 01           a0 = 0x10000
  2981: c8 79 09                 a2 = a2 + a0
  2984: 01                       fallthrough
      :                          @196
  2985: 82 9a                    a3 = u64 [a2]
  2987: c8 5a 08                 a1 = a3 + s0
  2990: ac a8 5f                 jump @208 if a1 <u a3
      :                          @197
  2993: 95 8b 01                 a4 = a1 + 0x1
  2996: 88 bc 01                 a5 = a4 <u 0x1
  2999: d8 b7 0b                 a4 = a0 <u a4
  3002: d4 cb 0b                 a4 = a4 | a5
  3005: 52 0b 50                 jump @208 if a4 != 0
      :                          @198
  3008: 82 9b                    a4 = u64 [a2]
  3010: ab ab e7                 jump @196 if a4 != a3
      :                          @199
  3013: 7b 98                    u64 [a2] = a1
  3015: 33 0c                    a5 = 0
  3017: 01                       fallthrough
      :                          @200
  3018: ab ab df                 jump @196 if a4 != a3
      :                          @201
  3021: 28 31                    jump @207
      :                          @202
  3023: 33 09 40 10 03           a2 = 0x31040
  3028: 33 07 00 00 01           a0 = 0x10000
  3033: c8 79 09                 a2 = a2 + a0
  3036: 01                       fallthrough
      :                          @203
  3037: 82 9a                    a3 = u64 [a2]
  3039: c8 5a 08                 a1 = a3 + s0
  3042: ac a8 2b                 jump @208 if a1 <u a3
      :                          @204
  3045: 95 8b 01                 a4 = a1 + 0x1
  3048: 88 bc 01                 a5 = a4 <u 0x1
  3051: d8 b7 0b                 a4 = a0 <u a4
  3054: d4 cb 0b                 a4 = a4 | a5
  3057: 52 0b 1c                 jump @208 if a4 != 0
      :                          @205
  3060: 82 9b                    a4 = u64 [a2]
  3062: ab ab e7                 jump @203 if a4 != a3
      :                          @206
  3065: 7b 98                    u64 [a2] = a1
  3067: 33 0c                    a5 = 0
  3069: 01                       fallthrough
      :                          @207
  3070: 33 07 40 10 04           a0 = 0x41040
  3075: c9 87 08                 a1 = a0 - a1
  3078: 33 07                    a0 = 0
  3080: 7b 28 08                 u64 [t0 + 0x8] = a1
  3083: 28 39                    jump @215
      :                          @208
  3085: 33 07 01                 a0 = 0x1
  3088: 7b 27 08                 u64 [t0 + 0x8] = a0
  3091: 28 31                    jump @215
      :                          @209
  3093: 64 6c                    a5 = s1
  3095: 82 17                    a0 = u64 [sp]
  3097: 95 77 00 00 01           a0 = a0 + 0x10000
  3102: 82 12 18                 t0 = u64 [sp + 0x18]
  3105: 82 16 08                 s1 = u64 [sp + 0x8]
  3108: 01                       fallthrough
      :                          @210
  3109: 82 78                    a1 = u64 [a0]
  3111: c9 87 09                 a2 = a0 - a1
  3114: ab 69 11                 jump @214 if a2 != s1
      :                          @211
  3117: c9 c8 09                 a2 = a1 - a5
  3120: 01                       fallthrough
      :                          @212
  3121: 82 7a                    a3 = u64 [a0]
  3123: ab 8a f2                 jump @210 if a3 != a1
      :                          @213
  3126: 7b 79                    u64 [a0] = a2
  3128: 33 0b                    a4 = 0
  3130: 01                       fallthrough
      :                          @214
  3131: 82 18 10                 a1 = u64 [sp + 0x10]
  3134: 33 07                    a0 = 0
  3136: 7b 28 08                 u64 [t0 + 0x8] = a1
  3139: 01                       fallthrough
      :                          @215
  3140: 7b 25 10                 u64 [t0 + 0x10] = s0
  3143: 7b 27                    u64 [t0] = a0
  3145: 82 10 30                 ra = u64 [sp + 0x30]
  3148: 82 15 28                 s0 = u64 [sp + 0x28]
  3151: 82 16 20                 s1 = u64 [sp + 0x20]
  3154: 95 11 38                 sp = sp + 0x38
  3157: 32 00                    ret
      :                          @216
  3159: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  3162: 7b 10 40                 u64 [sp + 0x40] = ra
  3165: 7b 15 38                 u64 [sp + 0x38] = s0
  3168: 7b 16 30                 u64 [sp + 0x30] = s1
  3171: 95 88 01                 a1 = a1 + 0x1
  3174: 51 08 53                 jump @224 if a1 == 0
      :                          @217
  3177: 64 75                    s0 = a0
  3179: 82 77                    a0 = u64 [a0]
  3181: 97 79 01                 a2 = a0 << 0x1
  3184: 33 0a 08                 a3 = 0x8
  3187: e4 a8 08                 a1 = maxu(a1, a3)
  3190: e4 89 06                 s1 = maxu(a2, a1)
  3193: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  3196: 98 88 3f                 a1 = a1 >> 0x3f
  3199: 51 07 12                 jump @219 if a0 == 0
      :                          @218
  3202: 82 59 08                 a2 = u64 [s0 + 0x8]
  3205: 7b 19 18                 u64 [sp + 0x18] = a2
  3208: 49 11 20 01              u64 [sp + 32] = 0x1
  3212: 7b 17 28                 u64 [sp + 0x28] = a0
  3215: 28 06                    jump @220
      :                          @219
  3217: 49 11 20                 u64 [sp + 32] = 0
  3220: 01                       fallthrough
      :                          @220
  3221: 64 17                    a0 = sp
  3223: 95 1a 18                 a3 = sp + 0x18
  3226: 64 69                    a2 = s1
  3228: 50 10 36 6d fe           ra = 54, jump @184
      :                          @221 [@dyn 27]
  3233: 82 18                    a1 = u64 [sp]
  3235: 82 17 08                 a0 = u64 [sp + 0x8]
  3238: 51 08 14                 jump @225 if a1 == 0
      :                          @222
  3241: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  3251: aa 87 0d                 jump @226 if a0 == a1
      :                          @223
  3254: 52 07 18                 jump @227 if a0 != 0
      :                          @224
  3257: 00                       trap
      :                          @225
  3258: 7b 57 08                 u64 [s0 + 0x8] = a0
  3261: 7b 56                    u64 [s0] = s1
  3263: 01                       fallthrough
      :                          @226
  3264: 82 10 40                 ra = u64 [sp + 0x40]
  3267: 82 15 38                 s0 = u64 [sp + 0x38]
  3270: 82 16 30                 s1 = u64 [sp + 0x30]
  3273: 95 11 48                 sp = sp + 0x48
  3276: 32 00                    ret
      :                          @227
  3278: 00                       trap
      :                          @228
  3279: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  3282: 7b 10 30                 u64 [sp + 0x30] = ra
  3285: 7b 15 28                 u64 [sp + 0x28] = s0
  3288: 7b 16 20                 u64 [sp + 0x20] = s1
  3291: 64 89                    a2 = a1
  3293: 82 8a 08                 a3 = u64 [a1 + 0x8]
  3296: 64 75                    s0 = a0
  3298: 51 0a 35                 jump @233 if a3 == 0
      :                          @229
  3301: 82 98                    a1 = u64 [a2]
  3303: 33 07                    a0 = 0
  3305: 95 8b 08                 a4 = a1 + 0x8
  3308: 01                       fallthrough
      :                          @230
  3309: 82 bc                    a5 = u64 [a4]
  3311: c8 c7 07                 a0 = a0 + a5
  3314: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  3317: 95 bb 10                 a4 = a4 + 0x10
  3320: 52 0a f5                 jump @230 if a3 != 0
      :                          @231
  3323: 82 9a 18                 a3 = u64 [a2 + 0x18]
  3326: 51 0a 24                 jump @235 if a3 == 0
      :                          @232
  3329: 82 88 08                 a1 = u64 [a1 + 0x8]
  3332: 8e 88                    a1 = a1 >u 0
  3334: 88 7a 10                 a3 = a0 <u 0x10
  3337: 85 aa 01                 a3 = a3 ^ 0x1
  3340: d4 a8 08                 a1 = a1 | a3
  3343: 89 7a                    a3 = a0 <s 0
  3345: e0 a8 08                 a1 = a1 & ~a3
  3348: 52 08 0a                 jump @234 if a1 != 0
      :                          @233
  3351: 33 07                    a0 = 0
  3353: 33 08 01                 a1 = 0x1
  3356: 28 4a                    jump @243
      :                          @234
  3358: 97 77 01                 a0 = a0 << 0x1
  3361: 01                       fallthrough
      :                          @235
  3362: 51 07 40                 jump @242 if a0 == 0
      :                          @236
  3365: 57 07 78                 jump @248 if a0 <s 0
      :                          @237
  3368: 64 52                    t0 = s0
  3370: 33 0b 40 10 03           a4 = 0x31040
  3375: 33 08 00 00 01           a1 = 0x10000
  3380: c8 8b 0b                 a4 = a4 + a1
  3383: 01                       fallthrough
      :                          @238
  3384: 82 bc                    a5 = u64 [a4]
  3386: c8 7c 0a                 a3 = a5 + a0
  3389: ac ca 5e                 jump @246 if a3 <u a5
      :                          @239
  3392: 95 a5 01                 s0 = a3 + 0x1
  3395: 88 56 01                 s1 = s0 <u 0x1
  3398: d8 58 05                 s0 = a1 <u s0
  3401: d4 65 05                 s0 = s0 | s1
  3404: 52 05 4f                 jump @246 if s0 != 0
      :                          @240
  3407: 82 b6                    s1 = u64 [a4]
  3409: ab c6 e7                 jump @238 if s1 != a5
      :                          @241
  3412: 7b ba                    u64 [a4] = a3
  3414: 33 08 40 10 04           a1 = 0x41040
  3419: c9 a8 08                 a1 = a1 - a3
  3422: 64 25                    s0 = t0
  3424: 28 06                    jump @243
      :                          @242
  3426: 33 08 01                 a1 = 0x1
  3429: 01                       fallthrough
      :                          @243
  3430: 7b 17                    u64 [sp] = a0
  3432: 7b 18 08                 u64 [sp + 0x8] = a1
  3435: 49 11 10                 u64 [sp + 16] = 0
  3438: 33 08 18 01 01           a1 = 0x10118
  3443: 64 17                    a0 = sp
  3445: 50 10 38 1a 06           ra = 56, jump @360
      :                          @244 [@dyn 28]
  3450: 52 07 22                 jump @247 if a0 != 0
      :                          @245
  3453: 82 17 10                 a0 = u64 [sp + 0x10]
  3456: 82 18 08                 a1 = u64 [sp + 0x8]
  3459: 82 19                    a2 = u64 [sp]
  3461: 7b 57 10                 u64 [s0 + 0x10] = a0
  3464: 7b 58 08                 u64 [s0 + 0x8] = a1
  3467: 7b 59                    u64 [s0] = a2
  3469: 82 10 30                 ra = u64 [sp + 0x30]
  3472: 82 15 28                 s0 = u64 [sp + 0x28]
  3475: 82 16 20                 s1 = u64 [sp + 0x20]
  3478: 95 11 38                 sp = sp + 0x38
  3481: 32 00                    ret
      :                          @246
  3483: 00                       trap
      :                          @247
  3484: 00                       trap
      :                          @248
  3485: 00                       trap
      :                          @249 [@dyn 29]
  3486: 82 72                    t0 = u64 [a0]
  3488: 33 09 00 00 ff           a2 = 0xffffffffffff0000
  3493: 95 2a ff ff fe           a3 = t0 + 0xfffffffffffeffff
  3498: ac 9a 28                 jump @255 if a3 <u a2
      :                          @250
  3501: 82 77 08                 a0 = u64 [a0 + 0x8]
  3504: 33 09 40 10 03           a2 = 0x31040
  3509: 95 99 00 00 01           a2 = a2 + 0x10000
  3514: 01                       fallthrough
      :                          @251
  3515: 82 9a                    a3 = u64 [a2]
  3517: c9 a9 0b                 a4 = a2 - a3
  3520: ab 7b 12                 jump @255 if a4 != a0
      :                          @252
  3523: c9 2a 0b                 a4 = a3 - t0
  3526: 01                       fallthrough
      :                          @253
  3527: 82 9c                    a5 = u64 [a2]
  3529: ab ac f2                 jump @251 if a5 != a3
      :                          @254
  3532: 7b 9b                    u64 [a2] = a4
  3534: 33 08                    a1 = 0
  3536: 32 00                    ret
      :                          @255
  3538: 32 00                    ret
      :                          @256 [@dyn 30]
  3540: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3543: 7b 10 18                 u64 [sp + 0x18] = ra
  3546: 7b 15 10                 u64 [sp + 0x10] = s0
  3549: 7b 16 08                 u64 [sp + 0x8] = s1
  3552: 64 75                    s0 = a0
  3554: 82 7a 10                 a3 = u64 [a0 + 0x10]
  3557: 82 77                    a0 = u64 [a0]
  3559: c9 a7 07                 a0 = a0 - a3
  3562: 64 96                    s1 = a2
  3564: ac 97 2a                 jump @259 if a0 <u a2
      :                          @257
  3567: 7b 1a                    u64 [sp] = a3
  3569: 82 57 08                 a0 = u64 [s0 + 0x8]
  3572: c8 a7 07                 a0 = a0 + a3
  3575: 64 69                    a2 = s1
  3577: 50 10 3e 4a 01           ra = 62, jump @278
      :                          @258 [@dyn 31]
  3582: 82 17                    a0 = u64 [sp]
  3584: c8 76 06                 s1 = s1 + a0
  3587: 7b 56 10                 u64 [s0 + 0x10] = s1
  3590: 33 07                    a0 = 0
  3592: 82 10 18                 ra = u64 [sp + 0x18]
  3595: 82 15 10                 s0 = u64 [sp + 0x10]
  3598: 82 16 08                 s1 = u64 [sp + 0x8]
  3601: 95 11 20                 sp = sp + 0x20
  3604: 32 00                    ret
      :                          @259
  3606: 64 57                    a0 = s0
  3608: 7b 18                    u64 [sp] = a1
  3610: 64 a8                    a1 = a3
  3612: 64 69                    a2 = s1
  3614: 50 10 40 74 fc           ra = 64, jump @172
      :                          @260 [@dyn 32]
  3619: 82 18                    a1 = u64 [sp]
  3621: 82 5a 10                 a3 = u64 [s0 + 0x10]
  3624: 28 c7                    jump @257
      :                          @261 [@dyn 33]
  3626: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  3629: 7b 10 20                 u64 [sp + 0x20] = ra
  3632: 7b 15 18                 u64 [sp + 0x18] = s0
  3635: 7b 16 10                 u64 [sp + 0x10] = s1
  3638: 64 86                    s1 = a1
  3640: 83 88                    i32 a1 = a1 + 0
  3642: 33 09 80 00              a2 = 0x80
  3646: 64 7a                    a3 = a0
  3648: ae 98 2b                 jump @266 if a1 >=u a2
      :                          @262
  3651: 82 a8 10                 a1 = u64 [a3 + 0x10]
  3654: 82 a7                    a0 = u64 [a3]
  3656: ab 78 12                 jump @265 if a1 != a0
      :                          @263
  3659: 64 a7                    a0 = a3
  3661: 64 a5                    s0 = a3
  3663: 50 10 44 08 fe           ra = 68, jump @216
      :                          @264 [@dyn 34]
  3668: 64 5a                    a3 = s0
  3670: 82 58 10                 a1 = u64 [s0 + 0x10]
  3673: 01                       fallthrough
      :                          @265
  3674: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3677: c8 87 07                 a0 = a0 + a1
  3680: 78 76                    u8 [a0] = s1
  3682: 95 88 01                 a1 = a1 + 0x1
  3685: 7b a8 10                 u64 [a3 + 0x10] = a1
  3688: 28 ab 00                 jump @274
      :                          @266
  3691: 8b 67 0b                 i32 a0 = s1 >> 0xb
  3694: 48 11 0c                 u32 [sp + 12] = 0
  3697: 52 07 1c                 jump @268 if a0 != 0
      :                          @267
  3700: 98 67 06                 a0 = s1 >> 0x6
  3703: 86 77 c0 00              a0 = a0 | 0xc0
  3707: 78 17 0c                 u8 [sp + 0xc] = a0
  3710: 84 67 3f                 a0 = s1 & 0x3f
  3713: 86 77 80 00              a0 = a0 | 0x80
  3717: 78 17 0d                 u8 [sp + 0xd] = a0
  3720: 33 06 02                 s1 = 0x2
  3723: 28 63                    jump @271
      :                          @268
  3725: 8b 67 10                 i32 a0 = s1 >> 0x10
  3728: 52 07 29                 jump @270 if a0 != 0
      :                          @269
  3731: 98 67 0c                 a0 = s1 >> 0xc
  3734: 86 77 e0 00              a0 = a0 | 0xe0
  3738: 78 17 0c                 u8 [sp + 0xc] = a0
  3741: 97 67 34                 a0 = s1 << 0x34
  3744: 98 77 3a                 a0 = a0 >> 0x3a
  3747: 95 77 80 00              a0 = a0 + 0x80
  3751: 78 17 0d                 u8 [sp + 0xd] = a0
  3754: 84 67 3f                 a0 = s1 & 0x3f
  3757: 86 77 80 00              a0 = a0 | 0x80
  3761: 78 17 0e                 u8 [sp + 0xe] = a0
  3764: 33 06 03                 s1 = 0x3
  3767: 28 37                    jump @271
      :                          @270
  3769: 97 67 2b                 a0 = s1 << 0x2b
  3772: 98 77 3d                 a0 = a0 >> 0x3d
  3775: 95 77 f0 00              a0 = a0 + 0xf0
  3779: 78 17 0c                 u8 [sp + 0xc] = a0
  3782: 97 67 2e                 a0 = s1 << 0x2e
  3785: 98 77 3a                 a0 = a0 >> 0x3a
  3788: 95 77 80 00              a0 = a0 + 0x80
  3792: 78 17 0d                 u8 [sp + 0xd] = a0
  3795: 97 67 34                 a0 = s1 << 0x34
  3798: 98 77 3a                 a0 = a0 >> 0x3a
  3801: 95 77 80 00              a0 = a0 + 0x80
  3805: 78 17 0e                 u8 [sp + 0xe] = a0
  3808: 84 67 3f                 a0 = s1 & 0x3f
  3811: 86 77 80 00              a0 = a0 | 0x80
  3815: 78 17 0f                 u8 [sp + 0xf] = a0
  3818: 33 06 04                 s1 = 0x4
  3821: 01                       fallthrough
      :                          @271
  3822: 82 a5 10                 s0 = u64 [a3 + 0x10]
  3825: 82 a7                    a0 = u64 [a3]
  3827: c9 57 07                 a0 = a0 - s0
  3830: ac 67 2d                 jump @275 if a0 <u s1
      :                          @272
  3833: 7b 1a                    u64 [sp] = a3
  3835: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3838: c8 57 07                 a0 = a0 + s0
  3841: 95 18 0c                 a1 = sp + 0xc
  3844: 64 69                    a2 = s1
  3846: 50 10 46 3d              ra = 70, jump @278
      :                          @273 [@dyn 35]
  3850: c8 56 06                 s1 = s1 + s0
  3853: 82 17                    a0 = u64 [sp]
  3855: 7b 76 10                 u64 [a0 + 0x10] = s1
  3858: 01                       fallthrough
      :                          @274
  3859: 33 07                    a0 = 0
  3861: 82 10 20                 ra = u64 [sp + 0x20]
  3864: 82 15 18                 s0 = u64 [sp + 0x18]
  3867: 82 16 10                 s1 = u64 [sp + 0x10]
  3870: 95 11 28                 sp = sp + 0x28
  3873: 32 00                    ret
      :                          @275
  3875: 64 a7                    a0 = a3
  3877: 64 58                    a1 = s0
  3879: 64 69                    a2 = s1
  3881: 64 a5                    s0 = a3
  3883: 50 10 48 67 fb           ra = 72, jump @172
      :                          @276 [@dyn 36]
  3888: 64 5a                    a3 = s0
  3890: 82 55 10                 s0 = u64 [s0 + 0x10]
  3893: 28 c4                    jump @272
      :                          @277 [@dyn 37]
  3895: 64 8a                    a3 = a1
  3897: 33 08 18 01 01           a1 = 0x10118
  3902: 64 a9                    a2 = a3
  3904: 28 4f 04                 jump @360
      :                          @278
  3907: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3910: 7b 10 18                 u64 [sp + 0x18] = ra
  3913: 7b 15 10                 u64 [sp + 0x10] = s0
  3916: 7b 16 08                 u64 [sp + 0x8] = s1
  3919: 53 19 10 64              jump @287 if a2 <u 16
      :                          @279
  3923: 8d 7a                    i32 a3 = -a0
  3925: 84 a2 07                 t0 = a3 & 0x7
  3928: c8 27 0b                 a4 = a0 + t0
  3931: 51 02 15                 jump @282 if t0 == 0
      :                          @280
  3934: 64 8c                    a5 = a1
  3936: 64 75                    s0 = a0
  3938: 01                       fallthrough
      :                          @281
  3939: 7c ca                    a3 = u8 [a5]
  3941: 78 5a                    u8 [s0] = a3
  3943: 95 55 01                 s0 = s0 + 0x1
  3946: 95 cc 01                 a5 = a5 + 0x1
  3949: ac b5 f6                 jump @281 if s0 <u a4
      :                          @282
  3952: c8 28 03                 t1 = a1 + t0
  3955: c9 29 02                 t0 = a2 - t0
  3958: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  3961: 84 38 07                 a1 = t1 & 0x7
  3964: c8 4b 0a                 a3 = a4 + t2
  3967: 51 08 3b                 jump @289 if a1 == 0
      :                          @283
  3970: 58 04 4b                 jump @292 if t2 <=s 0
      :                          @284
  3973: 97 38 03                 a1 = t1 << 0x3
  3976: 84 80 38                 ra = a1 & 0x38
  3979: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  3982: 82 c5                    s0 = u64 [a5]
  3984: 8d 88                    i32 a1 = -a1
  3986: 84 88 38                 a1 = a1 & 0x38
  3989: 95 cc 08                 a5 = a5 + 0x8
  3992: 01                       fallthrough
      :                          @285
  3993: 82 c6                    s1 = u64 [a5]
  3995: d0 05 05                 s0 = s0 >> ra
  3998: cf 86 09                 a2 = s1 << a1
  4001: d4 59 09                 a2 = a2 | s0
  4004: 7b b9                    u64 [a4] = a2
  4006: 95 bb 08                 a4 = a4 + 0x8
  4009: 95 cc 08                 a5 = a5 + 0x8
  4012: 64 65                    s0 = s1
  4014: ac ab eb                 jump @285 if a4 <u a3
      :                          @286
  4017: 28 1c                    jump @292
      :                          @287
  4019: 64 7a                    a3 = a0
  4021: 52 09 21                 jump @293 if a2 != 0
      :                          @288
  4024: 28 2f                    jump @295
      :                          @289
  4026: 58 04 13                 jump @292 if t2 <=s 0
      :                          @290
  4029: 64 38                    a1 = t1
  4031: 01                       fallthrough
      :                          @291
  4032: 82 89                    a2 = u64 [a1]
  4034: 7b b9                    u64 [a4] = a2
  4036: 95 bb 08                 a4 = a4 + 0x8
  4039: 95 88 08                 a1 = a1 + 0x8
  4042: ac ab f6                 jump @291 if a4 <u a3
      :                          @292
  4045: c8 43 08                 a1 = t1 + t2
  4048: 84 29 07                 a2 = t0 & 0x7
  4051: 51 09 14                 jump @295 if a2 == 0
      :                          @293
  4054: c8 a9 09                 a2 = a2 + a3
  4057: 01                       fallthrough
      :                          @294
  4058: 7c 8b                    a4 = u8 [a1]
  4060: 78 ab                    u8 [a3] = a4
  4062: 95 aa 01                 a3 = a3 + 0x1
  4065: 95 88 01                 a1 = a1 + 0x1
  4068: ac 9a f6                 jump @294 if a3 <u a2
      :                          @295
  4071: 82 10 18                 ra = u64 [sp + 0x18]
  4074: 82 15 10                 s0 = u64 [sp + 0x10]
  4077: 82 16 08                 s1 = u64 [sp + 0x8]
  4080: 95 11 20                 sp = sp + 0x20
  4083: 32 00                    ret
      :                          @296 [@dyn 38]
  4085: 82 77                    a0 = u64 [a0]
  4087: 01                       fallthrough
      :                          @297
  4088: 28                       jump @297
      :                          @298
  4089: 95 11 a8                 sp = sp + 0xffffffffffffffa8
  4092: 7b 10 50                 u64 [sp + 0x50] = ra
  4095: 7b 15 48                 u64 [sp + 0x48] = s0
  4098: 7b 16 40                 u64 [sp + 0x40] = s1
  4101: 7b 18                    u64 [sp] = a1
  4103: 98 79 04                 a2 = a0 >> 0x4
  4106: 33 08 27                 a1 = 0x27
  4109: 53 29 71 02 81 00        jump @301 if a2 <u 625
      :                          @299
  4115: 33 08 27                 a1 = 0x27
  4118: 95 1a 3e                 a3 = sp + 0x3e
  4121: 3a 09 08 10 03           a2 = u64 [0x31008]
  4126: 7b 19 10                 u64 [sp + 0x10] = a2
  4129: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
  4135: 33 04 7b 14              t2 = 0x147b
  4139: 33 0b 8c 01 01           a4 = 0x1018c
  4144: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
  4150: 01                       fallthrough
      :                          @300
  4151: 64 72                    t0 = a0
  4153: 82 17 10                 a0 = u64 [sp + 0x10]
  4156: d6 72 07                 a0 = t0 mulhu a0
  4159: 98 77 0b                 a0 = a0 >> 0xb
  4162: 82 19 08                 a2 = u64 [sp + 0x8]
  4165: c0 97 0c                 i32 a5 = a0 * a2
  4168: c8 2c 06                 s1 = a5 + t0
  4171: 97 6c 30                 a5 = s1 << 0x30
  4174: 98 cc 32                 a5 = a5 >> 0x32
  4177: ca 4c 0c                 a5 = a5 * t2
  4180: 98 c3 11                 t1 = a5 >> 0x11
  4183: 98 cc 10                 a5 = a5 >> 0x10
  4186: 84 cc fe 07              a5 = a5 & 0x7fe
  4190: 96 39 9c                 a2 = t1 * 0xffffffffffffff9c
  4193: c8 69 09                 a2 = a2 + s1
  4196: 97 99 31                 a2 = a2 << 0x31
  4199: 98 99 30                 a2 = a2 >> 0x30
  4202: c8 bc 0c                 a5 = a5 + a4
  4205: 7c c6                    s1 = u8 [a5]
  4207: 7c cc 01                 a5 = u8 [a5 + 0x1]
  4210: c8 b9 09                 a2 = a2 + a4
  4213: 7c 95 01                 s0 = u8 [a2 + 0x1]
  4216: 7c 99                    a2 = u8 [a2]
  4218: 78 ac ff                 u8 [a3 + 0xffffffffffffffff] = a5
  4221: 78 a6 fe                 u8 [a3 + 0xfffffffffffffffe] = s1
  4224: 78 a5 01                 u8 [a3 + 0x1] = s0
  4227: 78 a9                    u8 [a3] = a2
  4229: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
  4232: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
  4235: ac 20 ac                 jump @300 if ra <u t0
      :                          @301
  4238: 54 17 63 3b              jump @303 if a0 <=u 99
      :                          @302
  4242: 97 79 30                 a2 = a0 << 0x30
  4245: 98 99 32                 a2 = a2 >> 0x32
  4248: 96 99 7b 14              a2 = a2 * 0x147b
  4252: 98 99 11                 a2 = a2 >> 0x11
  4255: 96 9a 9c                 a3 = a2 * 0xffffffffffffff9c
  4258: c8 a7 07                 a0 = a0 + a3
  4261: 97 77 31                 a0 = a0 << 0x31
  4264: 98 77 30                 a0 = a0 >> 0x30
  4267: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  4270: 33 0a 8c 01 01           a3 = 0x1018c
  4275: c8 a7 07                 a0 = a0 + a3
  4278: 7c 7a 01                 a3 = u8 [a0 + 0x1]
  4281: 7c 77                    a0 = u8 [a0]
  4283: 95 1b 19                 a4 = sp + 0x19
  4286: c8 8b 0b                 a4 = a4 + a1
  4289: 78 ba 01                 u8 [a4 + 0x1] = a3
  4292: 78 b7                    u8 [a4] = a0
  4294: 64 97                    a0 = a2
  4296: 01                       fallthrough
      :                          @303
  4297: 55 17 0a 14              jump @305 if a0 >=u 10
      :                          @304
  4301: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  4304: 95 19 19                 a2 = sp + 0x19
  4307: c8 89 09                 a2 = a2 + a1
  4310: 83 77 30                 i32 a0 = a0 + 0x30
  4313: 78 97                    u8 [a2] = a0
  4315: 28 21                    jump @306
      :                          @305
  4317: 97 77 01                 a0 = a0 << 0x1
  4320: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  4323: 33 09 8c 01 01           a2 = 0x1018c
  4328: c8 97 07                 a0 = a0 + a2
  4331: 7c 79 01                 a2 = u8 [a0 + 0x1]
  4334: 7c 77                    a0 = u8 [a0]
  4336: 95 1a 19                 a3 = sp + 0x19
  4339: c8 8a 0a                 a3 = a3 + a1
  4342: 78 a9 01                 u8 [a3 + 0x1] = a2
  4345: 78 a7                    u8 [a3] = a0
  4347: 01                       fallthrough
      :                          @306
  4348: 95 1a 19                 a3 = sp + 0x19
  4351: c8 8a 0a                 a3 = a3 + a1
  4354: 9a 8b 27                 a4 = 0x27 - a1
  4357: 33 08 48 01 01           a1 = 0x10148
  4362: 82 17                    a0 = u64 [sp]
  4364: 33 09                    a2 = 0
  4366: 50 10 4e 12              ra = 78, jump @308
      :                          @307 [@dyn 39]
  4370: 82 10 50                 ra = u64 [sp + 0x50]
  4373: 82 15 48                 s0 = u64 [sp + 0x48]
  4376: 82 16 40                 s1 = u64 [sp + 0x40]
  4379: 95 11 58                 sp = sp + 0x58
  4382: 32 00                    ret
      :                          @308
  4384: 95 11 98                 sp = sp + 0xffffffffffffff98
  4387: 7b 10 60                 u64 [sp + 0x60] = ra
  4390: 7b 15 58                 u64 [sp + 0x58] = s0
  4393: 7b 16 50                 u64 [sp + 0x50] = s1
  4396: 80 73 34                 t1 = u32 [a0 + 0x34]
  4399: 7b 1a 20                 u64 [sp + 0x20] = a3
  4402: 64 9c                    a5 = a2
  4404: 84 36 01                 s1 = t1 & 0x1
  4407: 33 02 2b                 t0 = 0x2b
  4410: 33 09 00 00 11           a2 = 0x110000
  4415: 84 3a 04                 a3 = t1 & 0x4
  4418: 7b 1b 28                 u64 [sp + 0x28] = a4
  4421: c8 b6 04                 t2 = s1 + a4
  4424: 7b 1c 30                 u64 [sp + 0x30] = a5
  4427: 52 0a 10                 jump @311 if a3 != 0
      :                          @309
  4430: 49 11 38                 u64 [sp + 56] = 0
  4433: 82 78                    a1 = u64 [a0]
  4435: 94 69 2b                 a2 = 0x2b if s1 != 0
  4438: 52 08 35                 jump @315 if a1 != 0
      :                          @310
  4441: 28 56                    jump @320
      :                          @311
  4443: 7b 18 38                 u64 [sp + 0x38] = a1
  4446: 33 09                    a2 = 0
  4448: 51 0c 1b                 jump @314 if a5 == 0
      :                          @312
  4451: 82 1b 38                 a4 = u64 [sp + 0x38]
  4454: 01                       fallthrough
      :                          @313
  4455: 7d b5                    s0 = i8 [a4]
  4457: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
  4460: 85 5a 01                 a3 = s0 ^ 0x1
  4463: c8 a9 09                 a2 = a2 + a3
  4466: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  4469: 95 bb 01                 a4 = a4 + 0x1
  4472: 52 0c ef                 jump @313 if a5 != 0
      :                          @314
  4475: c8 94 04                 t2 = t2 + a2
  4478: 33 09 00 00 11           a2 = 0x110000
  4483: 82 78                    a1 = u64 [a0]
  4485: db 62 09                 a2 = t0 if s1 != 0
  4488: 51 08 27                 jump @320 if a1 == 0
      :                          @315
  4491: 82 7a 08                 a3 = u64 [a0 + 0x8]
  4494: ae a4 21                 jump @320 if t2 >=u a3
      :                          @316
  4497: 84 38 08                 a1 = t1 & 0x8
  4500: 52 08 50                 jump @323 if a1 != 0
      :                          @317
  4503: 7c 76 38                 s1 = u8 [a0 + 0x38]
  4506: c9 4a 0a                 a3 = a3 - t2
  4509: 7b 19 18                 u64 [sp + 0x18] = a2
  4512: 5a 16 01 9d 00           jump @330 if s1 >s 1
      :                          @318
  4517: 52 06 aa 00              jump @332 if s1 != 0
      :                          @319
  4521: 7b 1a 10                 u64 [sp + 0x10] = a3
  4524: 28 a9 00                 jump @333
      :                          @320
  4527: 82 75 20                 s0 = u64 [a0 + 0x20]
  4530: 82 76 28                 s1 = u64 [a0 + 0x28]
  4533: 64 57                    a0 = s0
  4535: 64 68                    a1 = s1
  4537: 82 1a 38                 a3 = u64 [sp + 0x38]
  4540: 82 1b 30                 a4 = u64 [sp + 0x30]
  4543: 50 10 50 6c 01           ra = 80, jump @353
      :                          @321 [@dyn 40]
  4548: 33 08 01                 a1 = 0x1
  4551: 52 07 bb 00              jump @338 if a0 != 0
      :                          @322
  4555: 82 6c 18                 a5 = u64 [s1 + 0x18]
  4558: 64 57                    a0 = s0
  4560: 82 18 20                 a1 = u64 [sp + 0x20]
  4563: 82 19 28                 a2 = u64 [sp + 0x28]
  4566: 82 10 60                 ra = u64 [sp + 0x60]
  4569: 82 15 58                 s0 = u64 [sp + 0x58]
  4572: 82 16 50                 s1 = u64 [sp + 0x50]
  4575: 95 11 68                 sp = sp + 0x68
  4578: 32 0c                    jump [a5]
      :                          @323
  4580: 7b 1a 40                 u64 [sp + 0x40] = a3
  4583: 64 45                    s0 = t2
  4585: 81 78 30                 a1 = i32 [a0 + 0x30]
  4588: 7b 18 10                 u64 [sp + 0x10] = a1
  4591: 7c 7a 38                 a3 = u8 [a0 + 0x38]
  4594: 7b 1a 08                 u64 [sp + 0x8] = a3
  4597: 82 7a 20                 a3 = u64 [a0 + 0x20]
  4600: 82 78 28                 a1 = u64 [a0 + 0x28]
  4603: 48 17 30 30              u32 [a0 + 48] = 0x30
  4607: 7b 17                    u64 [sp] = a0
  4609: 46 17 38 01              u8 [a0 + 56] = 0x1
  4613: 7b 1a 48                 u64 [sp + 0x48] = a3
  4616: 64 a7                    a0 = a3
  4618: 64 86                    s1 = a1
  4620: 82 1a 38                 a3 = u64 [sp + 0x38]
  4623: 82 1b 30                 a4 = u64 [sp + 0x30]
  4626: 50 10 52 19 01           ra = 82, jump @353
      :                          @324 [@dyn 41]
  4631: 52 07 67                 jump @337 if a0 != 0
      :                          @325
  4634: 82 17 40                 a0 = u64 [sp + 0x40]
  4637: c9 57 05                 s0 = a0 - s0
  4640: 95 55 01                 s0 = s0 + 0x1
  4643: 01                       fallthrough
      :                          @326
  4644: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  4647: 51 05 c6 00              jump @348 if s0 == 0
      :                          @327
  4651: 82 69 20                 a2 = u64 [s1 + 0x20]
  4654: 33 08 30                 a1 = 0x30
  4657: 82 17 48                 a0 = u64 [sp + 0x48]
  4660: b4 90 01 54              ra = 84, jump [a2]
      :                          @328 [@dyn 42]
  4664: 51 07 ec                 jump @326 if a0 == 0
      :                          @329
  4667: 28 43                    jump @337
      :                          @330
  4669: 52 16 02 12              jump @332 if s1 != 2
      :                          @331
  4673: 98 a6 01                 s1 = a3 >> 0x1
  4676: 95 a8 01                 a1 = a3 + 0x1
  4679: 98 88 01                 a1 = a1 >> 0x1
  4682: 7b 18 10                 u64 [sp + 0x10] = a1
  4685: 28 08                    jump @333
      :                          @332
  4687: 64 a6                    s1 = a3
  4689: 49 11 10                 u64 [sp + 16] = 0
  4692: 01                       fallthrough
      :                          @333
  4693: 82 78 20                 a1 = u64 [a0 + 0x20]
  4696: 7b 18 48                 u64 [sp + 0x48] = a1
  4699: 82 75 28                 s0 = u64 [a0 + 0x28]
  4702: 81 77 30                 a0 = i32 [a0 + 0x30]
  4705: 7b 17 40                 u64 [sp + 0x40] = a0
  4708: 95 66 01                 s1 = s1 + 0x1
  4711: 01                       fallthrough
      :                          @334
  4712: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  4715: 51 06 27                 jump @339 if s1 == 0
      :                          @335
  4718: 82 59 20                 a2 = u64 [s0 + 0x20]
  4721: 82 17 48                 a0 = u64 [sp + 0x48]
  4724: 82 18 40                 a1 = u64 [sp + 0x40]
  4727: b4 90 01 56              ra = 86, jump [a2]
      :                          @336 [@dyn 43]
  4731: 51 07 ed                 jump @334 if a0 == 0
      :                          @337
  4734: 33 08 01                 a1 = 0x1
  4737: 01                       fallthrough
      :                          @338
  4738: 64 87                    a0 = a1
  4740: 82 10 60                 ra = u64 [sp + 0x60]
  4743: 82 15 58                 s0 = u64 [sp + 0x58]
  4746: 82 16 50                 s1 = u64 [sp + 0x50]
  4749: 95 11 68                 sp = sp + 0x68
  4752: 32 00                    ret
      :                          @339
  4754: 82 16 48                 s1 = u64 [sp + 0x48]
  4757: 64 67                    a0 = s1
  4759: 64 58                    a1 = s0
  4761: 82 19 18                 a2 = u64 [sp + 0x18]
  4764: 82 1a 38                 a3 = u64 [sp + 0x38]
  4767: 82 1b 30                 a4 = u64 [sp + 0x30]
  4770: 50 10 58 89 00           ra = 88, jump @353
      :                          @340 [@dyn 44]
  4775: 33 08 01                 a1 = 0x1
  4778: 52 07 d8                 jump @338 if a0 != 0
      :                          @341
  4781: 82 5a 18                 a3 = u64 [s0 + 0x18]
  4784: 64 67                    a0 = s1
  4786: 82 18 20                 a1 = u64 [sp + 0x20]
  4789: 82 19 28                 a2 = u64 [sp + 0x28]
  4792: b4 a0 01 5a              ra = 90, jump [a3]
      :                          @342 [@dyn 45]
  4796: 33 08 01                 a1 = 0x1
  4799: 52 07 c3                 jump @338 if a0 != 0
      :                          @343
  4802: 82 17 10                 a0 = u64 [sp + 0x10]
  4805: 9a 77                    a0 = -a0
  4807: 7b 17 38                 u64 [sp + 0x38] = a0
  4810: 33 06 ff                 s1 = 0xffffffffffffffff
  4813: 01                       fallthrough
      :                          @344
  4814: 82 17 38                 a0 = u64 [sp + 0x38]
  4817: c8 67 07                 a0 = a0 + s1
  4820: 51 17 ff 42              jump @351 if a0 == 4294967295
      :                          @345
  4824: 82 59 20                 a2 = u64 [s0 + 0x20]
  4827: 82 17 48                 a0 = u64 [sp + 0x48]
  4830: 82 18 40                 a1 = u64 [sp + 0x40]
  4833: b4 90 01 5c              ra = 92, jump [a2]
      :                          @346 [@dyn 46]
  4837: 95 66 01                 s1 = s1 + 0x1
  4840: 51 07 e6                 jump @344 if a0 == 0
      :                          @347
  4843: 28 37                    jump @352
      :                          @348
  4845: 82 6a 18                 a3 = u64 [s1 + 0x18]
  4848: 82 17 48                 a0 = u64 [sp + 0x48]
  4851: 82 18 20                 a1 = u64 [sp + 0x20]
  4854: 82 19 28                 a2 = u64 [sp + 0x28]
  4857: b4 a0 01 5e              ra = 94, jump [a3]
      :                          @349 [@dyn 47]
  4861: 33 08 01                 a1 = 0x1
  4864: 52 07 82                 jump @338 if a0 != 0
      :                          @350
  4867: 33 08                    a1 = 0
  4869: 82 16                    s1 = u64 [sp]
  4871: 82 17 10                 a0 = u64 [sp + 0x10]
  4874: 7a 67 30                 u32 [s1 + 0x30] = a0
  4877: 82 17 08                 a0 = u64 [sp + 0x8]
  4880: 78 67 38                 u8 [s1 + 0x38] = a0
  4883: 28 6f ff                 jump @338
      :                          @351
  4886: 82 16 10                 s1 = u64 [sp + 0x10]
  4889: 82 17 10                 a0 = u64 [sp + 0x10]
  4892: d8 76 08                 a1 = s1 <u a0
  4895: 28 63 ff                 jump @338
      :                          @352
  4898: 82 17 10                 a0 = u64 [sp + 0x10]
  4901: d8 76 08                 a1 = s1 <u a0
  4904: 28 5a ff                 jump @338
      :                          @353
  4907: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  4910: 7b 10 20                 u64 [sp + 0x20] = ra
  4913: 7b 15 18                 u64 [sp + 0x18] = s0
  4916: 7b 16 10                 u64 [sp + 0x10] = s1
  4919: 83 9c                    i32 a5 = a2 + 0
  4921: 33 02 00 00 11           t0 = 0x110000
  4926: 64 a6                    s1 = a3
  4928: 64 85                    s0 = a1
  4930: 64 7a                    a3 = a0
  4932: aa 2c 20                 jump @356 if a5 == t0
      :                          @354
  4935: 82 5c 20                 a5 = u64 [s0 + 0x20]
  4938: 64 a7                    a0 = a3
  4940: 64 98                    a1 = a2
  4942: 7b 1b 08                 u64 [sp + 0x8] = a4
  4945: 7b 1a                    u64 [sp] = a3
  4947: b4 c0 01 60              ra = 96, jump [a5]
      :                          @355 [@dyn 48]
  4951: 82 1a                    a3 = u64 [sp]
  4953: 82 1b 08                 a4 = u64 [sp + 0x8]
  4956: 64 78                    a1 = a0
  4958: 33 07 01                 a0 = 0x1
  4961: 52 08 20                 jump @359 if a1 != 0
      :                          @356
  4964: 51 06 1a                 jump @358 if s1 == 0
      :                          @357
  4967: 82 5c 18                 a5 = u64 [s0 + 0x18]
  4970: 64 a7                    a0 = a3
  4972: 64 68                    a1 = s1
  4974: 64 b9                    a2 = a4
  4976: 82 10 20                 ra = u64 [sp + 0x20]
  4979: 82 15 18                 s0 = u64 [sp + 0x18]
  4982: 82 16 10                 s1 = u64 [sp + 0x10]
  4985: 95 11 28                 sp = sp + 0x28
  4988: 32 0c                    jump [a5]
      :                          @358
  4990: 33 07                    a0 = 0
  4992: 01                       fallthrough
      :                          @359
  4993: 82 10 20                 ra = u64 [sp + 0x20]
  4996: 82 15 18                 s0 = u64 [sp + 0x18]
  4999: 82 16 10                 s1 = u64 [sp + 0x10]
  5002: 95 11 28                 sp = sp + 0x28
  5005: 32 00                    ret
      :                          @360
  5007: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  5011: 7b 10 80 00              u64 [sp + 0x80] = ra
  5015: 7b 15 78                 u64 [sp + 0x78] = s0
  5018: 7b 16 70                 u64 [sp + 0x70] = s1
  5021: 49 11 60 20              u64 [sp + 96] = 0x20
  5025: 33 0a 03                 a3 = 0x3
  5028: 78 1a 68                 u8 [sp + 0x68] = a3
  5031: 82 96 20                 s1 = u64 [a2 + 0x20]
  5034: 49 11 30                 u64 [sp + 48] = 0
  5037: 49 11 40                 u64 [sp + 64] = 0
  5040: 7b 17 50                 u64 [sp + 0x50] = a0
  5043: 7b 18 58                 u64 [sp + 0x58] = a1
  5046: 51 06 07 01              jump @382 if s1 == 0
      :                          @361
  5050: 82 97 28                 a0 = u64 [a2 + 0x28]
  5053: 51 07 74 01              jump @392 if a0 == 0
      :                          @362
  5057: 49 11 28                 u64 [sp + 40] = 0
  5060: 82 95                    s0 = u64 [a2]
  5062: 7b 19 08                 u64 [sp + 0x8] = a2
  5065: 82 98 10                 a1 = u64 [a2 + 0x10]
  5068: 7b 18 18                 u64 [sp + 0x18] = a1
  5071: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  5074: 97 88 03                 a1 = a1 << 0x3
  5077: 98 88 03                 a1 = a1 >> 0x3
  5080: 95 88 01                 a1 = a1 + 0x1
  5083: 7b 18                    u64 [sp] = a1
  5085: 95 55 08                 s0 = s0 + 0x8
  5088: 96 78 38                 a1 = a0 * 0x38
  5091: 95 66 18                 s1 = s1 + 0x18
  5094: 33 07 4c                 a0 = 0x4c
  5097: 7b 17 10                 u64 [sp + 0x10] = a0
  5100: 01                       fallthrough
      :                          @363
  5101: 7b 18 20                 u64 [sp + 0x20] = a1
  5104: 82 59                    a2 = u64 [s0]
  5106: 51 09 17                 jump @366 if a2 == 0
      :                          @364
  5109: 82 1a 58                 a3 = u64 [sp + 0x58]
  5112: 82 17 50                 a0 = u64 [sp + 0x50]
  5115: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  5118: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5121: b4 a0 01 62              ra = 98, jump [a3]
      :                          @365 [@dyn 49]
  5125: 52 07 51 01              jump @395 if a0 != 0
      :                          @366
  5129: 81 67 10                 a0 = i32 [s1 + 0x10]
  5132: 7a 17 60                 u32 [sp + 0x60] = a0
  5135: 7c 67 18                 a0 = u8 [s1 + 0x18]
  5138: 78 17 68                 u8 [sp + 0x68] = a0
  5141: 81 67 14                 a0 = i32 [s1 + 0x14]
  5144: 7a 17 64                 u32 [sp + 0x64] = a0
  5147: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  5150: 82 67                    a0 = u64 [s1]
  5152: 51 08 26                 jump @371 if a1 == 0
      :                          @367
  5155: 52 18 01 16              jump @369 if a1 != 1
      :                          @368
  5159: 97 77 04                 a0 = a0 << 0x4
  5162: 82 18 18                 a1 = u64 [sp + 0x18]
  5165: c8 87 07                 a0 = a0 + a1
  5168: 82 78 08                 a1 = u64 [a0 + 0x8]
  5171: 82 19 10                 a2 = u64 [sp + 0x10]
  5174: aa 98 07                 jump @370 if a1 == a2
      :                          @369
  5177: 33 08                    a1 = 0
  5179: 28 0f                    jump @372
      :                          @370
  5181: 82 77                    a0 = u64 [a0]
  5183: 82 77                    a0 = u64 [a0]
  5185: 33 08 01                 a1 = 0x1
  5188: 28 06                    jump @372
      :                          @371
  5190: 33 08 01                 a1 = 0x1
  5193: 01                       fallthrough
      :                          @372
  5194: 7b 18 30                 u64 [sp + 0x30] = a1
  5197: 7b 17 38                 u64 [sp + 0x38] = a0
  5200: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  5203: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  5206: 51 08 26                 jump @377 if a1 == 0
      :                          @373
  5209: 52 18 01 16              jump @375 if a1 != 1
      :                          @374
  5213: 97 77 04                 a0 = a0 << 0x4
  5216: 82 18 18                 a1 = u64 [sp + 0x18]
  5219: c8 87 07                 a0 = a0 + a1
  5222: 82 78 08                 a1 = u64 [a0 + 0x8]
  5225: 82 19 10                 a2 = u64 [sp + 0x10]
  5228: aa 98 07                 jump @376 if a1 == a2
      :                          @375
  5231: 33 08                    a1 = 0
  5233: 28 0f                    jump @378
      :                          @376
  5235: 82 77                    a0 = u64 [a0]
  5237: 82 77                    a0 = u64 [a0]
  5239: 33 08 01                 a1 = 0x1
  5242: 28 06                    jump @378
      :                          @377
  5244: 33 08 01                 a1 = 0x1
  5247: 01                       fallthrough
      :                          @378
  5248: 7b 18 40                 u64 [sp + 0x40] = a1
  5251: 7b 17 48                 u64 [sp + 0x48] = a0
  5254: 82 67 08                 a0 = u64 [s1 + 0x8]
  5257: 97 77 04                 a0 = a0 << 0x4
  5260: 82 18 18                 a1 = u64 [sp + 0x18]
  5263: c8 78 08                 a1 = a1 + a0
  5266: 82 87                    a0 = u64 [a1]
  5268: 82 89 08                 a2 = u64 [a1 + 0x8]
  5271: 95 18 30                 a1 = sp + 0x30
  5274: b4 90 01 64              ra = 100, jump [a2]
      :                          @379 [@dyn 50]
  5278: 52 07 b8 00              jump @395 if a0 != 0
      :                          @380
  5282: 95 55 10                 s0 = s0 + 0x10
  5285: 82 18 20                 a1 = u64 [sp + 0x20]
  5288: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  5291: 95 66 38                 s1 = s1 + 0x38
  5294: 82 17 28                 a0 = u64 [sp + 0x28]
  5297: 95 77 01                 a0 = a0 + 0x1
  5300: 7b 17 28                 u64 [sp + 0x28] = a0
  5303: 52 08 36 ff              jump @363 if a1 != 0
      :                          @381
  5307: 28 69                    jump @390
      :                          @382
  5309: 82 97 18                 a0 = u64 [a2 + 0x18]
  5312: 51 07 71                 jump @392 if a0 == 0
      :                          @383
  5315: 82 95 10                 s0 = u64 [a2 + 0x10]
  5318: 33 0a                    a3 = 0
  5320: 97 78 04                 a1 = a0 << 0x4
  5323: c8 58 08                 a1 = a1 + s0
  5326: 7b 18 20                 u64 [sp + 0x20] = a1
  5329: 7b 19 08                 u64 [sp + 0x8] = a2
  5332: 82 96                    s1 = u64 [a2]
  5334: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  5337: 97 77 04                 a0 = a0 << 0x4
  5340: 98 77 04                 a0 = a0 >> 0x4
  5343: 95 77 01                 a0 = a0 + 0x1
  5346: 7b 17                    u64 [sp] = a0
  5348: 95 66 08                 s1 = s1 + 0x8
  5351: 01                       fallthrough
      :                          @384
  5352: 7b 1a 28                 u64 [sp + 0x28] = a3
  5355: 82 69                    a2 = u64 [s1]
  5357: 51 09 16                 jump @387 if a2 == 0
      :                          @385
  5360: 82 1a 58                 a3 = u64 [sp + 0x58]
  5363: 82 17 50                 a0 = u64 [sp + 0x50]
  5366: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  5369: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5372: b4 a0 01 66              ra = 102, jump [a3]
      :                          @386 [@dyn 51]
  5376: 52 07 56                 jump @395 if a0 != 0
      :                          @387
  5379: 82 57                    a0 = u64 [s0]
  5381: 82 59 08                 a2 = u64 [s0 + 0x8]
  5384: 95 18 30                 a1 = sp + 0x30
  5387: b4 90 01 68              ra = 104, jump [a2]
      :                          @388 [@dyn 52]
  5391: 52 07 47                 jump @395 if a0 != 0
      :                          @389
  5394: 95 66 10                 s1 = s1 + 0x10
  5397: 95 55 10                 s0 = s0 + 0x10
  5400: 82 1a 28                 a3 = u64 [sp + 0x28]
  5403: 95 aa 01                 a3 = a3 + 0x1
  5406: 82 17 20                 a0 = u64 [sp + 0x20]
  5409: ab 75 c7                 jump @384 if s0 != a0
      :                          @390
  5412: 82 19 08                 a2 = u64 [sp + 0x8]
  5415: 82 1a                    a3 = u64 [sp]
  5417: 82 97 08                 a0 = u64 [a2 + 0x8]
  5420: ac 7a 0d                 jump @393 if a3 <u a0
      :                          @391
  5423: 28 2c                    jump @396
      :                          @392
  5425: 33 0a                    a3 = 0
  5427: 82 97 08                 a0 = u64 [a2 + 0x8]
  5430: 54 07 25                 jump @396 if a0 <=u 0
      :                          @393
  5433: 82 97                    a0 = u64 [a2]
  5435: 97 a8 04                 a1 = a3 << 0x4
  5438: c8 87 09                 a2 = a0 + a1
  5441: 82 1a 58                 a3 = u64 [sp + 0x58]
  5444: 82 17 50                 a0 = u64 [sp + 0x50]
  5447: 82 98                    a1 = u64 [a2]
  5449: 82 99 08                 a2 = u64 [a2 + 0x8]
  5452: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5455: b4 a0 01 6a              ra = 106, jump [a3]
      :                          @394 [@dyn 53]
  5459: 51 07 08                 jump @396 if a0 == 0
      :                          @395
  5462: 33 07 01                 a0 = 0x1
  5465: 28 05                    jump @397
      :                          @396
  5467: 33 07                    a0 = 0
  5469: 01                       fallthrough
      :                          @397
  5470: 82 10 80 00              ra = u64 [sp + 0x80]
  5474: 82 15 78                 s0 = u64 [sp + 0x78]
  5477: 82 16 70                 s1 = u64 [sp + 0x70]
  5480: 95 11 88 00              sp = sp + 0x88
  5484: 32 00                    ret
      :                          @398 [@dyn 54]
  5486: 32 00                    ret
      :                          @399 [@dyn 55]
  5488: 95 11 80                 sp = sp + 0xffffffffffffff80
  5491: 7b 10 78                 u64 [sp + 0x78] = ra
  5494: 7b 15 70                 u64 [sp + 0x70] = s0
  5497: 7b 16 68                 u64 [sp + 0x68] = s1
  5500: 64 92                    t0 = a2
  5502: 33 00                    ra = 0
  5504: 33 0b                    a4 = 0
  5506: 33 05                    s0 = 0
  5508: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
  5518: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
  5524: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
  5534: 82 79 10                 a2 = u64 [a0 + 0x10]
  5537: 7b 19 48                 u64 [sp + 0x48] = a2
  5540: 82 79                    a2 = u64 [a0]
  5542: 7b 19 38                 u64 [sp + 0x38] = a2
  5545: 82 77 08                 a0 = u64 [a0 + 0x8]
  5548: 7b 17 30                 u64 [sp + 0x30] = a0
  5551: 33 07 80 01 01           a0 = 0x10180
  5556: 7b 17 08                 u64 [sp + 0x8] = a0
  5559: 3a 07 10 10 03           a0 = u64 [0x31010]
  5564: 7b 17 60                 u64 [sp + 0x60] = a0
  5567: 7b 18 58                 u64 [sp + 0x58] = a1
  5570: 95 88 08                 a1 = a1 + 0x8
  5573: 7b 18                    u64 [sp] = a1
  5575: 33 0c 0a                 a5 = 0xa
  5578: 7b 12 20                 u64 [sp + 0x20] = t0
  5581: 7b 13 18                 u64 [sp + 0x18] = t1
  5584: 7b 14 10                 u64 [sp + 0x10] = t2
  5587: 28 3a                    jump @403
      :                          @400
  5589: 64 06                    s1 = ra
  5591: c8 89 07                 a0 = a2 + a1
  5594: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
  5597: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  5600: 88 77 01                 a0 = a0 <u 0x1
  5603: 01                       fallthrough
      :                          @401
  5604: 82 1a 48                 a3 = u64 [sp + 0x48]
  5607: 78 a7                    u8 [a3] = a0
  5609: 82 17 30                 a0 = u64 [sp + 0x30]
  5612: 82 7a 18                 a3 = u64 [a0 + 0x18]
  5615: 82 17 38                 a0 = u64 [sp + 0x38]
  5618: b4 a0 01 70              ra = 112, jump [a3]
      :                          @402 [@dyn 56]
  5622: 64 5b                    a4 = s0
  5624: 82 12 20                 t0 = u64 [sp + 0x20]
  5627: 82 13 18                 t1 = u64 [sp + 0x18]
  5630: 82 14 10                 t2 = u64 [sp + 0x10]
  5633: 64 60                    ra = s1
  5635: 33 0c 0a                 a5 = 0xa
  5638: 82 15 40                 s0 = u64 [sp + 0x40]
  5641: 52 07 63 01              jump @444 if a0 != 0
      :                          @403
  5645: 84 57 ff 00              a0 = s0 & 0xff
  5649: 52 07 57 01              jump @443 if a0 != 0
      :                          @404
  5653: 7b 1b 50                 u64 [sp + 0x50] = a4
  5656: ae 02 0a                 jump @407 if t0 >=u ra
      :                          @405
  5659: 28 ef 00                 jump @434
      :                          @406
  5662: ac 02 ec 00              jump @434 if t0 <u ra
      :                          @407
  5666: c9 02 08                 a1 = t0 - ra
  5669: 82 16 58                 s1 = u64 [sp + 0x58]
  5672: c8 06 06                 s1 = s1 + ra
  5675: 55 18 10 1d              jump @413 if a1 >=u 16
      :                          @408
  5679: aa 02 d8 00              jump @433 if t0 == ra
      :                          @409
  5683: 33 0a                    a3 = 0
  5685: 01                       fallthrough
      :                          @410
  5686: c8 a6 07                 a0 = s1 + a3
  5689: 7c 77                    a0 = u8 [a0]
  5691: aa c7 a5 00              jump @428 if a0 == a5
      :                          @411
  5695: 95 aa 01                 a3 = a3 + 0x1
  5698: ab a8 f4                 jump @410 if a1 != a3
      :                          @412
  5701: 28 c2 00                 jump @433
      :                          @413
  5704: 95 69 07                 a2 = s1 + 0x7
  5707: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
  5710: c9 6a 07                 a0 = a3 - s1
  5713: d3 6a 0a                 a3 = a3 ^ s1
  5716: 88 aa 01                 a3 = a3 <u 0x1
  5719: 88 7b 01                 a4 = a0 <u 0x1
  5722: d4 ba 0a                 a3 = a3 | a4
  5725: 51 0a 45                 jump @419 if a3 == 0
      :                          @414
  5728: 33 07                    a0 = 0
  5730: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  5733: 82 1b                    a4 = u64 [sp]
  5735: c8 0b 0b                 a4 = a4 + ra
  5738: 28 08                    jump @416
      :                          @415
  5740: 82 1b                    a4 = u64 [sp]
  5742: c8 0b 0b                 a4 = a4 + ra
  5745: 01                       fallthrough
      :                          @416
  5746: c8 76 0c                 a5 = s1 + a0
  5749: 82 cc                    a5 = u64 [a5]
  5751: c8 7b 09                 a2 = a4 + a0
  5754: 82 99                    a2 = u64 [a2]
  5756: d3 4c 05                 s0 = a5 ^ t2
  5759: c8 35 05                 s0 = s0 + t1
  5762: e0 c5 0c                 a5 = s0 & ~a5
  5765: d3 49 05                 s0 = a2 ^ t2
  5768: c8 35 05                 s0 = s0 + t1
  5771: e0 95 09                 a2 = s0 & ~a2
  5774: d4 c9 09                 a2 = a2 | a5
  5777: 82 1c 60                 a5 = u64 [sp + 0x60]
  5780: d2 c9 09                 a2 = a2 & a5
  5783: 52 09 1f                 jump @422 if a2 != 0
      :                          @417
  5786: 95 77 10                 a0 = a0 + 0x10
  5789: ae 7a d5                 jump @416 if a3 >=u a0
      :                          @418
  5792: 28 16                    jump @422
      :                          @419
  5794: c8 a6 0b                 a4 = s1 + a3
  5797: 7c bb                    a4 = u8 [a4]
  5799: aa cb 51                 jump @431 if a4 == a5
      :                          @420
  5802: 95 aa 01                 a3 = a3 + 0x1
  5805: ab a7 f5                 jump @419 if a0 != a3
      :                          @421
  5808: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  5811: ae 7a b9                 jump @415 if a3 >=u a0
      :                          @422
  5814: aa 87 9a 00              jump @440 if a0 == a1
      :                          @423
  5818: 33 0a                    a3 = 0
  5820: c8 76 06                 s1 = s1 + a0
  5823: c9 72 08                 a1 = t0 - a0
  5826: c9 08 08                 a1 = a1 - ra
  5829: 33 0c 0a                 a5 = 0xa
  5832: 82 1b 50                 a4 = u64 [sp + 0x50]
  5835: 01                       fallthrough
      :                          @424
  5836: c8 a6 09                 a2 = s1 + a3
  5839: 7c 99                    a2 = u8 [a2]
  5841: aa c9 0b                 jump @427 if a2 == a5
      :                          @425
  5844: 95 aa 01                 a3 = a3 + 0x1
  5847: ab a8 f5                 jump @424 if a1 != a3
      :                          @426
  5850: 28 2d                    jump @433
      :                          @427
  5852: c8 7a 0a                 a3 = a3 + a0
  5855: 01                       fallthrough
      :                          @428
  5856: c8 0a 0a                 a3 = a3 + ra
  5859: 95 a0 01                 ra = a3 + 0x1
  5862: ae 2a 38 ff              jump @406 if a3 >=u t0
      :                          @429
  5866: 82 17 58                 a0 = u64 [sp + 0x58]
  5869: c8 7a 0a                 a3 = a3 + a0
  5872: 7c a7                    a0 = u8 [a3]
  5874: ab c7 2c ff              jump @406 if a0 != a5
      :                          @430
  5878: 28 61                    jump @441
      :                          @431
  5880: 82 1b 50                 a4 = u64 [sp + 0x50]
  5883: c8 0a 0a                 a3 = a3 + ra
  5886: 95 a0 01                 ra = a3 + 0x1
  5889: ac 2a e9                 jump @429 if a3 <u t0
      :                          @432
  5892: 28 1a ff                 jump @406
      :                          @433
  5895: 64 20                    ra = t0
  5897: 01                       fallthrough
      :                          @434
  5898: 49 11 40 01              u64 [sp + 64] = 0x1
  5902: 64 b5                    s0 = a4
  5904: 64 26                    s1 = t0
  5906: aa 2b 56                 jump @443 if a4 == t0
      :                          @435
  5909: 82 17 48                 a0 = u64 [sp + 0x48]
  5912: 7c 77                    a0 = u8 [a0]
  5914: 51 07 22                 jump @438 if a0 == 0
      :                          @436
  5917: 82 17 30                 a0 = u64 [sp + 0x30]
  5920: 82 7a 18                 a3 = u64 [a0 + 0x18]
  5923: 33 09 04                 a2 = 0x4
  5926: 82 17 38                 a0 = u64 [sp + 0x38]
  5929: 82 18 08                 a1 = u64 [sp + 0x8]
  5932: 7b 10 28                 u64 [sp + 0x28] = ra
  5935: b4 a0 01 72              ra = 114, jump [a3]
      :                          @437 [@dyn 57]
  5939: 82 1b 50                 a4 = u64 [sp + 0x50]
  5942: 82 10 28                 ra = u64 [sp + 0x28]
  5945: 52 07 33                 jump @444 if a0 != 0
      :                          @438
  5948: c9 b6 09                 a2 = s1 - a4
  5951: 82 18 58                 a1 = u64 [sp + 0x58]
  5954: c8 b8 08                 a1 = a1 + a4
  5957: ab b6 90 fe              jump @400 if s1 != a4
      :                          @439
  5961: 64 06                    s1 = ra
  5963: 33 07                    a0 = 0
  5965: 28 97 fe                 jump @401
      :                          @440
  5968: 64 20                    ra = t0
  5970: 82 1b 50                 a4 = u64 [sp + 0x50]
  5973: 28 b5                    jump @434
      :                          @441
  5975: 49 11 40                 u64 [sp + 64] = 0
  5978: 64 05                    s0 = ra
  5980: 64 06                    s1 = ra
  5982: 82 17 48                 a0 = u64 [sp + 0x48]
  5985: 7c 77                    a0 = u8 [a0]
  5987: 52 07 ba                 jump @436 if a0 != 0
      :                          @442
  5990: 28 d6                    jump @438
      :                          @443
  5992: 33 07                    a0 = 0
  5994: 28 06                    jump @445
      :                          @444
  5996: 33 07 01                 a0 = 0x1
  5999: 01                       fallthrough
      :                          @445
  6000: 82 10 78                 ra = u64 [sp + 0x78]
  6003: 82 15 70                 s0 = u64 [sp + 0x70]
  6006: 82 16 68                 s1 = u64 [sp + 0x68]
  6009: 95 11 80 00              sp = sp + 0x80
  6013: 32 00                    ret
      :                          @446 [@dyn 58]
  6015: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  6018: 7b 10 20                 u64 [sp + 0x20] = ra
  6021: 7b 15 18                 u64 [sp + 0x18] = s0
  6024: 7b 16 10                 u64 [sp + 0x10] = s1
  6027: 82 75 10                 s0 = u64 [a0 + 0x10]
  6030: 7c 59                    a2 = u8 [s0]
  6032: 82 7b                    a4 = u64 [a0]
  6034: 82 76 08                 s1 = u64 [a0 + 0x8]
  6037: 51 09 32                 jump @450 if a2 == 0
      :                          @447
  6040: 82 6a 18                 a3 = u64 [s1 + 0x18]
  6043: 7b 18 08                 u64 [sp + 0x8] = a1
  6046: 33 08 80 01 01           a1 = 0x10180
  6051: 33 09 04                 a2 = 0x4
  6054: 64 b7                    a0 = a4
  6056: 7b 1b                    u64 [sp] = a4
  6058: b4 a0 01 76              ra = 118, jump [a3]
      :                          @448 [@dyn 59]
  6062: 82 18 08                 a1 = u64 [sp + 0x8]
  6065: 82 1b                    a4 = u64 [sp]
  6067: 51 07 14                 jump @450 if a0 == 0
      :                          @449
  6070: 33 07 01                 a0 = 0x1
  6073: 82 10 20                 ra = u64 [sp + 0x20]
  6076: 82 15 18                 s0 = u64 [sp + 0x18]
  6079: 82 16 10                 s1 = u64 [sp + 0x10]
  6082: 95 11 28                 sp = sp + 0x28
  6085: 32 00                    ret
      :                          @450
  6087: 83 87                    i32 a0 = a1 + 0
  6089: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  6092: 88 77 01                 a0 = a0 <u 0x1
  6095: 78 57                    u8 [s0] = a0
  6097: 82 6c 20                 a5 = u64 [s1 + 0x20]
  6100: 64 b7                    a0 = a4
  6102: 82 10 20                 ra = u64 [sp + 0x20]
  6105: 82 15 18                 s0 = u64 [sp + 0x18]
  6108: 82 16 10                 s1 = u64 [sp + 0x10]
  6111: 95 11 28                 sp = sp + 0x28
  6114: 32 0c                    jump [a5]
      :                          @451 [@dyn 60]
  6116: 64 8a                    a3 = a1
  6118: 33 08 50 01 01           a1 = 0x10150
  6123: 64 a9                    a2 = a3
  6125: 28 a2 fb                 jump @360
      :                          @452
  6128: 95 11 70 ff              sp = sp + 0xffffffffffffff70
  6132: 7b 10 88 00              u64 [sp + 0x88] = ra
  6136: 7b 15 80 00              u64 [sp + 0x80] = s0
  6140: 7b 16 78                 u64 [sp + 0x78] = s1
  6143: 64 75                    s0 = a0
  6145: 7c 77 08                 a0 = u8 [a0 + 0x8]
  6148: 64 8b                    a4 = a1
  6150: 33 08 01                 a1 = 0x1
  6153: 33 06 01                 s1 = 0x1
  6156: 51 07 1d                 jump @454 if a0 == 0
      :                          @453
  6159: 78 56 08                 u8 [s0 + 0x8] = s1
  6162: 46 15 09 01              u8 [s0 + 9] = 0x1
  6166: 64 57                    a0 = s0
  6168: 82 10 88 00              ra = u64 [sp + 0x88]
  6172: 82 15 80 00              s0 = u64 [sp + 0x80]
  6176: 82 16 78                 s1 = u64 [sp + 0x78]
  6179: 95 11 90 00              sp = sp + 0x90
  6183: 32 00                    ret
      :                          @454
  6185: 64 9a                    a3 = a2
  6187: 82 5c                    a5 = u64 [s0]
  6189: 80 c7 34                 a0 = u32 [a5 + 0x34]
  6192: 7c 58 09                 a1 = u8 [s0 + 0x9]
  6195: 84 79 04                 a2 = a0 & 0x4
  6198: 52 09 43                 jump @460 if a2 != 0
      :                          @455
  6201: 51 08 31                 jump @458 if a1 == 0
      :                          @456
  6204: 82 c8 28                 a1 = u64 [a5 + 0x28]
  6207: 82 c7 20                 a0 = u64 [a5 + 0x20]
  6210: 82 83 18                 t1 = u64 [a1 + 0x18]
  6213: 33 08 84 01 01           a1 = 0x10184
  6218: 33 09 02                 a2 = 0x2
  6221: 64 a6                    s1 = a3
  6223: 7b 1b 10                 u64 [sp + 0x10] = a4
  6226: 7b 1c 08                 u64 [sp + 0x8] = a5
  6229: b4 30 01 7a              ra = 122, jump [t1]
      :                          @457 [@dyn 61]
  6233: 82 1c 08                 a5 = u64 [sp + 0x8]
  6236: 82 1b 10                 a4 = u64 [sp + 0x10]
  6239: 64 6a                    a3 = s1
  6241: 33 08 01                 a1 = 0x1
  6244: 33 06 01                 s1 = 0x1
  6247: 52 07 a8                 jump @453 if a0 != 0
      :                          @458
  6250: 64 b7                    a0 = a4
  6252: 64 c8                    a1 = a5
  6254: b4 a0 01 7c              ra = 124, jump [a3]
      :                          @459 [@dyn 62]
  6258: 33 08 01                 a1 = 0x1
  6261: 64 76                    s1 = a0
  6263: 28 98                    jump @453
      :                          @460
  6265: 52 08 36                 jump @464 if a1 != 0
      :                          @461
  6268: 82 c8 28                 a1 = u64 [a5 + 0x28]
  6271: 82 c7 20                 a0 = u64 [a5 + 0x20]
  6274: 82 83 18                 t1 = u64 [a1 + 0x18]
  6277: 33 08 88 01 01           a1 = 0x10188
  6282: 33 09 01                 a2 = 0x1
  6285: 33 06 01                 s1 = 0x1
  6288: 7b 1a                    u64 [sp] = a3
  6290: 7b 1b 10                 u64 [sp + 0x10] = a4
  6293: 7b 1c 08                 u64 [sp + 0x8] = a5
  6296: b4 30 01 7e              ra = 126, jump [t1]
      :                          @462 [@dyn 63]
  6300: 82 1c 08                 a5 = u64 [sp + 0x8]
  6303: 82 1b 10                 a4 = u64 [sp + 0x10]
  6306: 82 1a                    a3 = u64 [sp]
  6308: 33 08 01                 a1 = 0x1
  6311: 52 07 68 ff              jump @453 if a0 != 0
      :                          @463
  6315: 81 c7 34                 a0 = i32 [a5 + 0x34]
  6318: 01                       fallthrough
      :                          @464
  6319: 33 06 01                 s1 = 0x1
  6322: 78 16 37                 u8 [sp + 0x37] = s1
  6325: 82 c8 20                 a1 = u64 [a5 + 0x20]
  6328: 82 c9 28                 a2 = u64 [a5 + 0x28]
  6331: 7b 18 18                 u64 [sp + 0x18] = a1
  6334: 7b 19 20                 u64 [sp + 0x20] = a2
  6337: 95 18 37                 a1 = sp + 0x37
  6340: 7b 18 28                 u64 [sp + 0x28] = a1
  6343: 81 c8 30                 a1 = i32 [a5 + 0x30]
  6346: 7c c9 38                 a2 = u8 [a5 + 0x38]
  6349: 82 c3                    t1 = u64 [a5]
  6351: 82 c4 08                 t2 = u64 [a5 + 0x8]
  6354: 82 c0 10                 ra = u64 [a5 + 0x10]
  6357: 82 c2 18                 t0 = u64 [a5 + 0x18]
  6360: 7a 17 6c                 u32 [sp + 0x6c] = a0
  6363: 7a 18 68                 u32 [sp + 0x68] = a1
  6366: 78 19 70                 u8 [sp + 0x70] = a2
  6369: 7b 13 38                 u64 [sp + 0x38] = t1
  6372: 7b 14 40                 u64 [sp + 0x40] = t2
  6375: 7b 10 48                 u64 [sp + 0x48] = ra
  6378: 7b 12 50                 u64 [sp + 0x50] = t0
  6381: 95 17 18                 a0 = sp + 0x18
  6384: 7b 17 58                 u64 [sp + 0x58] = a0
  6387: 33 07 50 01 01           a0 = 0x10150
  6392: 7b 17 60                 u64 [sp + 0x60] = a0
  6395: 95 18 38                 a1 = sp + 0x38
  6398: 64 b7                    a0 = a4
  6400: b4 a0 02 80 00           ra = 128, jump [a3]
      :                          @465 [@dyn 64]
  6405: 52 07 21                 jump @468 if a0 != 0
      :                          @466
  6408: 82 18 60                 a1 = u64 [sp + 0x60]
  6411: 82 17 58                 a0 = u64 [sp + 0x58]
  6414: 82 8a 18                 a3 = u64 [a1 + 0x18]
  6417: 33 08 86 01 01           a1 = 0x10186
  6422: 33 09 02                 a2 = 0x2
  6425: b4 a0 02 82 00           ra = 130, jump [a3]
      :                          @467 [@dyn 65]
  6430: 64 76                    s1 = a0
  6432: 33 08 01                 a1 = 0x1
  6435: 28 ec fe                 jump @453
      :                          @468
  6438: 33 08 01                 a1 = 0x1
  6441: 28 e6 fe                 jump @453
      :                          @469
  6444: 51 08 9b 00              jump @490 if a1 == 0
      :                          @470
  6448: 64 79                    a2 = a0
  6450: 7c 77                    a0 = u8 [a0]
  6452: 51 07 91 00              jump @489 if a0 == 0
      :                          @471
  6456: 51 27 ff 00 90 00        jump @491 if a0 == 255
      :                          @472
  6462: 6c 7a                    a3 = sext.b a0
  6464: 57 0a 09                 jump @474 if a3 <s 0
      :                          @473
  6467: 33 0a                    a3 = 0
  6469: 33 08                    a1 = 0
  6471: 28 73                    jump @488
      :                          @474
  6473: 55 27 c0 00 0d           jump @476 if a0 >=u 192
      :                          @475
  6478: 33 0a 01                 a3 = 0x1
  6481: 33 0b 80                 a4 = 0xffffffffffffff80
  6484: 28 4a                    jump @485
      :                          @476
  6486: 55 27 e0 00 0e           jump @478 if a0 >=u 224
      :                          @477
  6491: 33 0a 02                 a3 = 0x2
  6494: 33 0b 40 ff              a4 = 0xffffffffffffff40
  6498: 28 3c                    jump @485
      :                          @478
  6500: 55 27 f0 00 0e           jump @480 if a0 >=u 240
      :                          @479
  6505: 33 0a 03                 a3 = 0x3
  6508: 33 0b 20 ff              a4 = 0xffffffffffffff20
  6512: 28 2e                    jump @485
      :                          @480
  6514: 55 27 f8 00 0e           jump @482 if a0 >=u 248
      :                          @481
  6519: 33 0a 04                 a3 = 0x4
  6522: 33 0b 10 ff              a4 = 0xffffffffffffff10
  6526: 28 20                    jump @485
      :                          @482
  6528: 55 27 fc 00 0e           jump @484 if a0 >=u 252
      :                          @483
  6533: 33 0a 05                 a3 = 0x5
  6536: 33 0b 08 ff              a4 = 0xffffffffffffff08
  6540: 28 12                    jump @485
      :                          @484
  6542: 88 7a fe 00              a3 = a0 <u 0xfe
  6546: 33 0b 04 ff              a4 = 0xffffffffffffff04
  6550: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  6554: 85 aa 07                 a3 = a3 ^ 0x7
  6557: 01                       fallthrough
      :                          @485
  6558: ae 8a 2b                 jump @492 if a3 >=u a1
      :                          @486
  6561: 33 08                    a1 = 0
  6563: c8 b7 07                 a0 = a0 + a4
  6566: 64 ab                    a4 = a3
  6568: 01                       fallthrough
      :                          @487
  6569: c8 b9 0c                 a5 = a2 + a4
  6572: 7c cc                    a5 = u8 [a5]
  6574: 97 88 08                 a1 = a1 << 0x8
  6577: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  6580: d4 c8 08                 a1 = a1 | a5
  6583: 52 0b f2                 jump @487 if a4 != 0
      :                          @488
  6586: 8a a9 03                 i32 a2 = a3 << 0x3
  6589: cf 97 07                 a0 = a0 << a2
  6592: c8 87 07                 a0 = a0 + a1
  6595: 32 00                    ret
      :                          @489
  6597: 32 00                    ret
      :                          @490
  6599: 00                       trap
      :                          @491
  6600: 00                       trap
      :                          @492
  6601: 00                       trap
      :                          @493 [@dyn 66]
  6602: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  6605: 7b 10 28                 u64 [sp + 0x28] = ra
  6608: 7b 15 20                 u64 [sp + 0x20] = s0
  6611: 7b 16 18                 u64 [sp + 0x18] = s1
  6614: 64 86                    s1 = a1
  6616: 82 88 28                 a1 = u64 [a1 + 0x28]
  6619: 82 6a 20                 a3 = u64 [s1 + 0x20]
  6622: 82 8b 18                 a4 = u64 [a1 + 0x18]
  6625: 64 75                    s0 = a0
  6627: 33 08 48 01 01           a1 = 0x10148
  6632: 33 09 01                 a2 = 0x1
  6635: 64 a7                    a0 = a3
  6637: b4 b0 02 86 00           ra = 134, jump [a4]
      :                          @494 [@dyn 67]
  6642: 7b 16                    u64 [sp] = s1
  6644: 78 17 08                 u8 [sp + 0x8] = a0
  6647: 46 11 09                 u8 [sp + 9] = 0
  6650: 7b 15 10                 u64 [sp + 0x10] = s0
  6653: 33 09 8c 00              a2 = 0x8c
  6657: 64 17                    a0 = sp
  6659: 95 18 10                 a1 = sp + 0x10
  6662: 50 20 88 00 ea fd        ra = 136, jump @452
      :                          @495 [@dyn 68]
  6668: 33 07 01                 a0 = 0x1
  6671: 7c 18 08                 a1 = u8 [sp + 0x8]
  6674: 52 08 1b                 jump @497 if a1 != 0
      :                          @496
  6677: 82 17                    a0 = u64 [sp]
  6679: 82 78 28                 a1 = u64 [a0 + 0x28]
  6682: 82 77 20                 a0 = u64 [a0 + 0x20]
  6685: 82 8a 18                 a3 = u64 [a1 + 0x18]
  6688: 33 08 89 01 01           a1 = 0x10189
  6693: 33 09 01                 a2 = 0x1
  6696: b4 a0 02 8a 00           ra = 138, jump [a3]
      :                          @497 [@dyn 69]
  6701: 82 10 28                 ra = u64 [sp + 0x28]
  6704: 82 15 20                 s0 = u64 [sp + 0x20]
  6707: 82 16 18                 s1 = u64 [sp + 0x18]
  6710: 95 11 30                 sp = sp + 0x30
  6713: 32 00                    ret
      :                          @498 [@dyn 70]
  6715: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  6719: 7b 10 80 00              u64 [sp + 0x80] = ra
  6723: 80 89 34                 a2 = u32 [a1 + 0x34]
  6726: 82 77                    a0 = u64 [a0]
  6728: 84 9a 10                 a3 = a2 & 0x10
  6731: 52 0a 16                 jump @501 if a3 != 0
      :                          @499
  6734: 84 99 20                 a2 = a2 & 0x20
  6737: 52 09 41                 jump @504 if a2 != 0
      :                          @500
  6740: 7c 77                    a0 = u8 [a0]
  6742: 82 10 80 00              ra = u64 [sp + 0x80]
  6746: 95 11 88 00              sp = sp + 0x88
  6750: 28 9b f5                 jump @298
      :                          @501
  6753: 7c 77                    a0 = u8 [a0]
  6755: 33 0b 81 00              a4 = 0x81
  6759: 95 19 7f                 a2 = sp + 0x7f
  6762: 33 02 57                 t0 = 0x57
  6765: 01                       fallthrough
      :                          @502
  6766: 64 bc                    a5 = a4
  6768: 84 7b 0f                 a4 = a0 & 0xf
  6771: 97 77 38                 a0 = a0 << 0x38
  6774: 98 77 3c                 a0 = a0 >> 0x3c
  6777: 88 b3 0a                 t1 = a4 <u 0xa
  6780: 33 0a 30                 a3 = 0x30
  6783: da 32 0a                 a3 = t0 if t1 == 0
  6786: be ba 0a                 i32 a3 = a3 + a4
  6789: 78 9a                    u8 [a2] = a3
  6791: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  6794: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
  6797: 52 07 e1                 jump @502 if a0 != 0
      :                          @503
  6800: 28 31                    jump @506
      :                          @504
  6802: 7c 77                    a0 = u8 [a0]
  6804: 33 0b 81 00              a4 = 0x81
  6808: 95 19 7f                 a2 = sp + 0x7f
  6811: 33 02 37                 t0 = 0x37
  6814: 01                       fallthrough
      :                          @505
  6815: 64 bc                    a5 = a4
  6817: 84 7b 0f                 a4 = a0 & 0xf
  6820: 97 77 38                 a0 = a0 << 0x38
  6823: 98 77 3c                 a0 = a0 >> 0x3c
  6826: 88 b3 0a                 t1 = a4 <u 0xa
  6829: 33 0a 30                 a3 = 0x30
  6832: da 32 0a                 a3 = t0 if t1 == 0
  6835: be ba 0a                 i32 a3 = a3 + a4
  6838: 78 9a                    u8 [a2] = a3
  6840: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  6843: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
  6846: 52 07 e1                 jump @505 if a0 != 0
      :                          @506
  6849: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
  6852: 56 27 80 00 28           jump @509 if a0 >u 128
      :                          @507
  6857: 9a bb 81 00              a4 = 0x81 - a4
  6861: 64 1a                    a3 = sp
  6863: c8 7a 0a                 a3 = a3 + a0
  6866: 33 09 02                 a2 = 0x2
  6869: 64 87                    a0 = a1
  6871: 33 08 8a 01 01           a1 = 0x1018a
  6876: 50 20 8e 00 44 f6        ra = 142, jump @308
      :                          @508 [@dyn 71]
  6882: 82 10 80 00              ra = u64 [sp + 0x80]
  6886: 95 11 88 00              sp = sp + 0x88
  6890: 32 00                    ret
      :                          @509
  6892: 00                       trap
