// RO data = 696/696 bytes
// RW data = 4120/73824 bytes
// Stack size = 65536 bytes
// RO data = [102, 105, 98, 78, 32, 110, 117, 109, 95, 115, 101, 103, 109, 101, 110, 116, 115, 61, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 70, 73, 66, 32, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 58, 32, 116, 105, 109, 101, 115, 108, 111, 116, 61, 32, 115, 101, 114, 118, 105, 99, 101, 95, 105, 110, 100, 101, 120, 61, 32, 115, 101, 110, 100, 101, 114, 61, 32, 97, 109, 111, 117, 110, 116, 61, 32, 114, 101, 99, 101, 105, 118, 101, 114, 61, 32, 109, 101, 109, 111, 61, 32, 103, 97, 115, 95, 108, 105, 109, 105, 116, 61, 0, 0, 0, 0, 40, 0, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 66, 0, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 81, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 97, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 89, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 107, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 113, 0, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 70, 73, 66, 32, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 32, 103, 97, 115, 58, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 52, 41, 0, 0, 0, 240, 0, 1, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 9, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 70, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 78, 0, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 120, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 122, 0, 0, 0, 0, 0, 0, 0, 128, 0, 0, 0, 0, 0, 0, 0, 132, 0, 0, 0, 0, 0, 0, 0, 32, 32, 32, 32, 44, 32, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 119, 114, 105, 116, 101, 95, 114, 101, 115, 117, 108, 116, 32, 107, 101, 121, 61, 44, 32, 114, 101, 115, 117, 108, 116, 61, 0, 0, 124, 2, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 141, 2, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0]
// RW data = [235, 57, 12, 2, 231, 1, 233, 195, 88, 75, 252, 92, 228, 140, 100, 252, 128, 69, 38, 119, 143, 230, 252, 62, 81, 133, 15, 205, 157, 177, 149, 18, 213, 57, 90, 100, 2, 167, 47, 172, 60, 22, 159, 249, 186, 230, 130, 110, 237, 194, 201, 77, 201, 154, 183, 236, 96, 229, 251, 128, 0, 3, 15, 213, 76, 254, 61, 156, 41, 239, 199, 102, 170, 211, 211, 120, 30, 204, 156, 126, 208, 97, 108, 121, 159, 178, 236, 206, 224, 238, 24, 151, 201, 113, 163, 134, 245, 29, 211, 199, 14, 14, 188, 195, 5, 17, 17, 44, 125, 106, 0, 138, 100, 99, 200, 161, 187, 126, 232, 110, 104, 55, 135, 203, 250, 200, 58, 69, 22, 203, 68, 23, 227, 224, 33, 4, 225, 229, 162, 232, 28, 37, 43, 149, 238, 81, 37, 240, 241, 167, 202, 252, 49, 80, 19, 82, 108, 30, 1, 221, 31, 132, 147, 223, 172, 131, 100, 187, 96, 217, 132, 215, 110, 89, 160, 194, 34, 123, 18, 128, 80, 114, 37, 53, 233, 253, 163, 255, 49, 62, 68, 124, 254, 17, 50, 36, 88, 72, 180, 54, 247, 134, 62, 101, 32, 233, 199, 144, 157, 95, 29, 43, 172, 73, 24, 236, 38, 103, 147, 26, 210, 149, 82, 236, 204, 164, 23, 249, 235, 40, 130, 212, 44, 105, 83, 116, 210, 114, 22, 235, 64, 243, 41, 101, 103, 30, 82, 136, 67, 160, 100, 205, 47, 241, 197, 82, 7, 37, 207, 46, 87, 7, 107, 145, 23, 250, 252, 139, 168, 50, 199, 248, 135, 54, 142, 3, 182, 80, 107, 207, 28, 170, 153, 179, 155, 170, 185, 49, 84, 25, 225, 2, 92, 116, 244, 68, 84, 136, 21, 137, 106, 95, 118, 5, 95, 135, 87, 217, 202, 150, 70, 9, 229, 14, 141, 225, 96, 190, 220, 103, 170, 105, 215, 137, 92, 139, 141, 175, 140, 159, 150, 87, 133, 30, 240, 127, 2, 210, 254, 165, 189, 140, 148, 251, 116, 224, 196, 17, 92, 96, 130, 157, 1, 138, 139, 68, 91, 63, 13, 18, 98, 43, 234, 19, 38, 85, 255, 89, 183, 189, 101, 46, 38, 186, 197, 47, 31, 79, 204, 45, 214, 80, 124, 117, 179, 197, 29, 224, 189, 125, 15, 125, 65, 63, 231, 112, 161, 250, 178, 4, 72, 85, 74, 217, 70, 37, 221, 45, 96, 213, 61, 203, 198, 132, 253, 85, 122, 31, 127, 225, 155, 240, 205, 93, 15, 25, 157, 244, 3, 126, 75, 219, 200, 99, 23, 237, 152, 72, 251, 107, 61, 156, 129, 3, 192, 204, 158, 1, 180, 107, 126, 108, 2, 245, 57, 237, 229, 19, 147, 23, 246, 212, 211, 118, 223, 14, 126, 214, 223, 152, 60, 232, 142, 108, 66, 112, 236, 113, 83, 62, 136, 13, 139, 224, 182, 78, 67, 68, 232, 42, 69, 233, 166, 182, 23, 95, 200, 62, 196, 127, 211, 178, 211, 215, 30, 98, 100, 112, 255, 224, 139, 106, 207, 108, 47, 106, 190, 248, 49, 81, 245, 2, 19, 38, 79, 80, 99, 16, 3, 173, 152, 205, 86, 188, 148, 127, 130, 156, 51, 137, 129, 111, 6, 86, 100, 175, 163, 119, 16, 187, 66, 73, 47, 116, 51, 111, 179, 230, 50, 247, 245, 197, 56, 45, 89, 148, 177, 84, 129, 74, 37, 114, 197, 88, 150, 218, 87, 190, 10, 180, 167, 105, 165, 196, 95, 58, 209, 243, 214, 198, 125, 162, 175, 163, 204, 187, 196, 186, 151, 71, 221, 44, 129, 49, 238, 21, 3, 59, 75, 33, 0, 131, 62, 78, 64, 66, 158, 220, 240, 239, 20, 72, 191, 75, 228, 53, 171, 222, 209, 222, 254, 130, 219, 171, 118, 51, 39, 2, 230, 11, 189, 214, 222, 133, 19, 172, 214, 192, 188, 156, 109, 9, 26, 247, 123, 201, 119, 230, 124, 124, 213, 50, 74, 78, 107, 27, 5, 11, 106, 178, 249, 14, 169, 228, 31, 41, 112, 62, 169, 141, 153, 14, 145, 137, 216, 52, 28, 51, 143, 10, 44, 244, 137, 94, 72, 13, 148, 231, 211, 41, 176, 251, 221, 183, 111, 197, 209, 224, 145, 8, 215, 107, 225, 1, 68, 93, 230, 141, 49, 97, 73, 44, 151, 116, 42, 177, 175, 147, 134, 243, 252, 118, 246, 137, 62, 8, 127, 131, 88, 79, 23, 211, 120, 90, 193, 238, 131, 150, 100, 33, 179, 23, 2, 137, 228, 89, 161, 144, 81, 206, 221, 5, 198, 158, 122, 202, 226, 84, 124, 148, 166, 223, 94, 254, 49, 109, 212, 174, 211, 61, 176, 141, 62, 191, 240, 18, 118, 239, 223, 64, 209, 248, 47, 53, 44, 63, 34, 236, 169, 28, 147, 72, 152, 39, 28, 176, 165, 251, 77, 56, 51, 149, 42, 182, 124, 113, 30, 30, 27, 189, 174, 139, 14, 45, 114, 57, 46, 187, 230, 86, 186, 121, 92, 45, 86, 40, 155, 2, 229, 178, 139, 200, 34, 165, 58, 102, 101, 216, 94, 187, 7, 113, 18, 233, 18, 155, 185, 162, 17, 232, 49, 191, 11, 165, 3, 169, 126, 237, 33, 162, 50, 88, 148, 249, 67, 195, 3, 224, 234, 97, 176, 185, 15, 93, 75, 95, 92, 238, 23, 2, 203, 57, 213, 98, 8, 153, 151, 130, 51, 67, 33, 105, 201, 97, 80, 77, 137, 169, 249, 195, 123, 36, 255, 32, 77, 202, 186, 7, 149, 113, 75, 84, 88, 19, 130, 201, 93, 140, 114, 108, 177, 214, 82, 153, 170, 246, 145, 56, 28, 183, 171, 124, 92, 166, 252, 68, 168, 206, 4, 239, 113, 116, 138, 184, 207, 166, 8, 168, 26, 190, 26, 225, 166, 11, 207, 139, 106, 20, 231, 250, 119, 33, 207, 124, 204, 86, 19, 52, 189, 82, 60, 77, 26, 35, 43, 170, 249, 225, 72, 26, 213, 73, 173, 171, 109, 210, 76, 205, 70, 151, 37, 209, 130, 155, 183, 135, 26, 75, 20, 184, 107, 219, 198, 0, 250, 22, 164, 77, 135, 113, 183, 154, 208, 228, 11, 62, 138, 38, 137, 133, 209, 212, 18, 132, 203, 227, 251, 196, 36, 131, 228, 147, 56, 189, 180, 224, 210, 166, 8, 2, 131, 12, 233, 210, 80, 11, 233, 17, 6, 241, 118, 169, 170, 103, 129, 72, 224, 29, 113, 154, 203, 41, 149, 231, 24, 57, 191, 255, 75, 248, 185, 170, 245, 154, 31, 82, 171, 52, 7, 105, 196, 228, 74, 89, 175, 136, 28, 131, 37, 35, 146, 244, 2, 49, 147, 249, 22, 207, 194, 168, 81, 172, 136, 228, 75, 146, 85, 220, 194, 186, 83, 12, 126, 131, 96, 108, 21, 252, 119, 79, 11, 245, 46, 108, 105, 203, 218, 9, 86, 107, 129, 169, 244, 70, 229, 81, 3, 106, 98, 99, 207, 28, 145, 38, 112, 100, 90, 204, 159, 209, 106, 199, 71, 59, 208, 95, 39, 81, 55, 172, 204, 6, 165, 13, 113, 68, 79, 7, 18, 217, 44, 36, 242, 125, 75, 199, 66, 27, 6, 49, 61, 239, 40, 244, 172, 207, 47, 227, 47, 47, 141, 192, 204, 248, 224, 68, 184, 224, 62, 9, 239, 255, 219, 165, 143, 174, 232, 55, 87, 150, 63, 49, 251, 53, 205, 35, 154, 59, 7, 166, 59, 80, 0, 178, 177, 149, 191, 45, 104, 8, 39, 59, 59, 167, 251, 15, 187, 32, 159, 96, 252, 55, 204, 231, 4, 20, 168, 107, 150, 17, 165, 148, 188, 35, 22, 237, 93, 35, 200, 87, 252, 52, 8, 50, 0, 158, 112, 67, 11, 101, 78, 234, 213, 61, 163, 40, 14, 249, 77, 130, 88, 115, 145, 182, 117, 26, 183, 120, 121, 66, 10, 166, 100, 221, 148, 142, 119, 165, 49, 29, 183, 214, 25, 121, 126, 184, 224, 66, 13, 166, 122, 124, 98, 92, 86, 143, 162, 66, 176, 161, 156, 72, 189, 177, 50, 79, 240, 5, 245, 46, 167, 124, 205, 209, 139, 4, 63, 0, 142, 73, 145, 160, 206, 189, 186, 201, 167, 121, 220, 111, 228, 185, 193, 61, 173, 227, 254, 138, 173, 133, 200, 137, 177, 250, 99, 41, 122, 254, 189, 235, 139, 251, 255, 92, 156, 171, 217, 187, 54, 31, 83, 23, 225, 219, 122, 45, 252, 64, 177, 35, 118, 205, 48, 27, 64, 213, 119, 138, 182, 177, 27, 118, 30, 47, 245, 186, 71, 63, 35, 189, 129, 21, 188, 157, 247, 236, 184, 14, 36, 210, 188, 175, 75, 254, 33, 83, 236, 147, 175, 46, 35, 84, 219, 13, 240, 189, 114, 104, 253, 53, 49, 10, 127, 198, 187, 232, 247, 44, 255, 159, 2, 163, 98, 80, 79, 112, 45, 33, 88, 5, 102, 252, 193, 115, 125, 133, 187, 141, 172, 79, 58, 108, 162, 166, 36, 91, 50, 74, 42, 130, 29, 78, 90, 142, 197, 130, 222, 231, 233, 99, 100, 42, 181, 167, 224, 240, 237, 130, 243, 240, 78, 255, 118, 183, 107, 0, 206, 74, 82, 3, 249, 94, 72, 170, 197, 248, 170, 90, 217, 90, 245, 127, 186, 66, 128, 196, 108, 115, 170, 255, 238, 47, 7, 8, 181, 224, 10, 73, 18, 238, 52, 127, 209, 157, 213, 45, 209, 103, 209, 93, 45, 76, 16, 203, 8, 221, 112, 196, 13, 240, 217, 56, 14, 95, 87, 195, 160, 249, 58, 112, 85, 89, 229, 48, 232, 19, 7, 155, 163, 171, 102, 254, 192, 240, 208, 153, 71, 251, 110, 204, 80, 233, 201, 62, 170, 59, 151, 253, 1, 93, 20, 55, 119, 135, 83, 18, 190, 157, 219, 77, 77, 94, 115, 185, 232, 162, 172, 11, 194, 2, 121, 231, 26, 76, 184, 242, 62, 132, 196, 44, 75, 160, 234, 66, 115, 91, 162, 199, 19, 116, 211, 27, 87, 215, 2, 205, 73, 175, 34, 65, 20, 215, 139, 114, 21, 104, 22, 241, 51, 90, 35, 9, 75, 211, 217, 205, 219, 155, 173, 20, 117, 159, 98, 30, 104, 97, 13, 199, 17, 56, 243, 44, 234, 210, 175, 178, 35, 249, 2, 172, 184, 113, 22, 12, 0, 56, 228, 199, 168, 7, 194, 128, 136, 78, 161, 97, 37, 228, 201, 33, 90, 107, 3, 86, 78, 98, 205, 178, 120, 254, 57, 5, 78, 183, 130, 207, 225, 197, 230, 202, 3, 155, 132, 9, 36, 227, 136, 0, 185, 218, 93, 217, 152, 172, 87, 131, 65, 87, 237, 86, 91, 192, 109, 19, 48, 151, 115, 65, 217, 58, 194, 195, 173, 97, 70, 119, 169, 200, 63, 34, 214, 126, 146, 19, 149, 224, 55, 65, 63, 68, 66, 72, 119, 164, 222, 188, 56, 203, 123, 193, 46, 128, 195, 64, 137, 211, 35, 133, 204, 77, 214, 105, 78, 230, 219, 59, 26, 198, 75, 167, 65, 110, 24, 155, 81, 121, 100, 185, 200, 22, 137, 216, 108, 99, 200, 85, 170, 70, 233, 62, 44, 249, 201, 203, 135, 231, 140, 70, 220, 194, 109, 191, 204, 21, 185, 21, 149, 184, 134, 41, 206, 9, 2, 72, 242, 55, 236, 95, 23, 15, 136, 204, 116, 62, 223, 87, 111, 115, 4, 210, 169, 78, 136, 76, 211, 133, 113, 202, 5, 183, 190, 194, 54, 50, 49, 15, 100, 118, 33, 90, 24, 9, 106, 147, 215, 197, 0, 92, 6, 255, 87, 55, 120, 203, 232, 107, 38, 144, 150, 208, 241, 32, 176, 62, 5, 187, 227, 145, 67, 22, 33, 217, 24, 6, 171, 218, 85, 16, 203, 63, 10, 163, 237, 34, 220, 170, 216, 15, 151, 20, 182, 208, 165, 128, 246, 149, 182, 156, 162, 118, 179, 92, 230, 138, 254, 112, 105, 168, 221, 29, 242, 16, 140, 21, 78, 111, 53, 28, 44, 19, 228, 199, 112, 182, 227, 60, 58, 137, 62, 93, 58, 5, 94, 78, 226, 93, 192, 177, 79, 57, 149, 138, 88, 81, 92, 34, 185, 210, 31, 66, 27, 225, 192, 39, 74, 242, 26, 139, 193, 77, 109, 76, 117, 205, 217, 47, 95, 10, 230, 84, 200, 16, 135, 25, 235, 191, 65, 118, 146, 28, 184, 26, 27, 41, 162, 15, 47, 184, 224, 123, 175, 98, 122, 250, 240, 38, 23, 249, 113, 173, 227, 210, 115, 33, 96, 208, 202, 167, 84, 88, 194, 150, 65, 148, 40, 132, 102, 73, 164, 60, 230, 58, 9, 130, 167, 61, 134, 50, 203, 133, 69, 118, 87, 231, 50, 53, 150, 215, 217, 246, 123, 108, 192, 217, 243, 103, 183, 126, 136, 214, 139, 151, 231, 1, 147, 66, 67, 123, 15, 253, 232, 162, 188, 81, 251, 211, 174, 185, 34, 62, 181, 100, 115, 119, 246, 231, 12, 90, 90, 186, 88, 51, 57, 106, 202, 137, 18, 93, 205, 207, 89, 213, 228, 154, 176, 80, 218, 86, 179, 4, 64, 162, 223, 28, 75, 185, 12, 174, 8, 22, 41, 6, 182, 19, 158, 124, 99, 226, 235, 43, 109, 252, 57, 213, 137, 14, 9, 54, 13, 249, 188, 13, 255, 231, 84, 29, 135, 141, 1, 164, 129, 146, 110, 191, 242, 184, 160, 253, 180, 167, 90, 186, 15, 77, 2, 64, 155, 104, 13, 10, 237, 103, 245, 158, 206, 142, 89, 97, 235, 90, 24, 15, 124, 4, 21, 141, 194, 230, 108, 91, 94, 188, 20, 113, 80, 206, 252, 234, 51, 113, 178, 186, 60, 144, 19, 248, 212, 78, 127, 22, 138, 185, 141, 48, 202, 54, 102, 101, 157, 158, 165, 177, 176, 74, 133, 64, 62, 168, 192, 234, 83, 6, 77, 31, 179, 211, 82, 226, 3, 211, 247, 216, 93, 108, 140, 195, 215, 57, 126, 57, 106, 197, 230, 61, 204, 231, 31, 191, 94, 66, 13, 19, 43, 176, 129, 156, 50, 20, 248, 71, 196, 182, 64, 159, 106, 254, 11, 94, 119, 113, 15, 101, 47, 251, 77, 234, 140, 228, 134, 207, 255, 65, 120, 62, 191, 93, 169, 243, 100, 255, 54, 240, 27, 204, 103, 142, 68, 108, 99, 109, 16, 73, 210, 244, 254, 28, 254, 224, 85, 109, 201, 251, 68, 116, 19, 116, 32, 78, 134, 241, 111, 61, 79, 138, 171, 102, 41, 23, 50, 208, 30, 51, 132, 171, 236, 132, 255, 34, 31, 3, 174, 23, 248, 33, 195, 146, 118, 107, 43, 166, 179, 210, 111, 244, 43, 197, 40, 52, 50, 190, 83, 88, 54, 153, 24, 119, 165, 75, 229, 215, 108, 118, 33, 234, 92, 235, 87, 189, 126, 6, 98, 81, 95, 42, 223, 217, 127, 92, 123, 216, 142, 148, 48, 117, 151, 146, 91, 156, 45, 69, 231, 69, 167, 46, 70, 156, 112, 222, 98, 191, 232, 191, 203, 213, 208, 125, 238, 82, 188, 2, 164, 145, 35, 74, 119, 181, 196, 110, 24, 15, 239, 0, 189, 162, 60, 192, 74, 142, 222, 21, 175, 55, 216, 134, 246, 34, 202, 80, 186, 42, 1, 55, 45, 165, 156, 160, 99, 29, 3, 66, 47, 172, 187, 31, 80, 128, 169, 211, 235, 58, 198, 167, 81, 197, 177, 146, 153, 196, 233, 3, 67, 231, 216, 30, 150, 104, 47, 255, 60, 120, 0, 35, 247, 183, 26, 135, 14, 210, 107, 226, 59, 228, 233, 6, 188, 16, 223, 150, 222, 217, 69, 46, 30, 110, 88, 76, 200, 58, 64, 123, 9, 85, 10, 100, 94, 11, 26, 20, 78, 48, 218, 71, 68, 92, 178, 122, 17, 39, 46, 78, 167, 58, 43, 116, 88, 66, 165, 4, 182, 203, 208, 182, 63, 96, 80, 88, 215, 248, 103, 217, 198, 3, 62, 171, 204, 34, 105, 131, 72, 233, 228, 188, 55, 236, 101, 209, 129, 44, 230, 23, 13, 129, 145, 150, 30, 60, 222, 228, 228, 77, 203, 80, 247, 99, 175, 170, 241, 108, 177, 144, 67, 190, 176, 2, 149, 85, 104, 98, 217, 94, 184, 80, 221, 19, 121, 26, 50, 202, 207, 165, 31, 152, 17, 8, 43, 61, 32, 59, 246, 216, 209, 24, 207, 220, 144, 124, 94, 41, 41, 252, 230, 27, 108, 158, 163, 87, 93, 190, 58, 31, 187, 149, 166, 251, 228, 158, 166, 111, 135, 158, 91, 81, 26, 208, 202, 44, 4, 78, 249, 148, 232, 8, 132, 4, 72, 203, 180, 233, 38, 94, 91, 25, 9, 149, 195, 146, 34, 229, 134, 184, 149, 86, 119, 10, 139, 53, 153, 63, 181, 206, 0, 52, 205, 63, 21, 139, 175, 197, 43, 133, 254, 80, 154, 248, 104, 164, 7, 195, 251, 161, 12, 128, 108, 122, 109, 143, 186, 227, 75, 40, 233, 111, 105, 62, 50, 104, 33, 253, 89, 24, 198, 232, 124, 166, 216, 144, 159, 34, 38, 29, 33, 139, 96, 250, 83, 54, 165, 239, 178, 198, 255, 244, 70, 167, 164, 140, 129, 103, 217, 23, 24, 96, 89, 96, 88, 44, 117, 190, 242, 228, 180, 3, 188, 123, 21, 22, 108, 170, 154, 11, 227, 224, 166, 119, 218, 47, 28, 156, 89, 114, 89, 197, 251, 183, 3, 230, 63, 43, 165, 24, 248, 227, 98, 1, 55, 139, 232, 212, 228, 114, 41, 162, 93, 200, 247, 216, 243, 233, 254, 212, 71, 114, 141, 37, 207, 146, 228, 52, 146, 174, 10, 161, 214, 185, 142, 191, 106, 153, 145, 224, 40, 110, 135, 18, 117, 50, 91, 150, 249, 171, 24, 32, 165, 137, 173, 202, 164, 63, 158, 222, 137, 130, 81, 82, 70, 235, 214, 15, 183, 184, 77, 161, 116, 11, 209, 112, 160, 6, 43, 33, 197, 223, 8, 116, 61, 203, 87, 189, 146, 46, 9, 195, 103, 240, 120, 68, 48, 141, 18, 181, 25, 223, 236, 244, 75, 23, 244, 156, 95, 171, 203, 120, 133, 153, 50, 81, 82, 207, 132, 141, 136, 37, 21, 128, 106, 77, 95, 119, 156, 147, 50, 153, 70, 82, 178, 155, 52, 36, 249, 116, 245, 224, 234, 182, 13, 61, 177, 32, 85, 85, 63, 115, 89, 90, 60, 221, 212, 79, 175, 167, 206, 159, 106, 104, 125, 16, 159, 33, 106, 75, 159, 18, 198, 154, 175, 40, 199, 199, 29, 171, 244, 196, 31, 149, 148, 110, 150, 208, 240, 225, 161, 94, 136, 129, 70, 8, 183, 223, 10, 132, 164, 86, 183, 125, 228, 26, 10, 171, 199, 23, 106, 32, 171, 40, 246, 19, 213, 70, 172, 185, 25, 133, 255, 18, 162, 233, 249, 29, 253, 144, 212, 249, 155, 193, 162, 169, 192, 3, 91, 72, 197, 103, 243, 171, 165, 57, 152, 128, 5, 48, 154, 208, 14, 203, 160, 23, 210, 13, 19, 117, 224, 78, 184, 92, 99, 142, 92, 134, 7, 88, 122, 124, 46, 105, 28, 11, 92, 17, 66, 211, 52, 219, 117, 77, 239, 82, 161, 223, 247, 35, 71, 252, 61, 211, 79, 191, 143, 177, 218, 95, 216, 199, 75, 170, 56, 77, 151, 144, 11, 108, 3, 211, 153, 242, 187, 115, 28, 168, 130, 120, 82, 24, 198, 254, 126, 165, 40, 64, 65, 110, 222, 230, 17, 70, 63, 144, 86, 124, 195, 92, 38, 226, 123, 172, 123, 7, 253, 186, 241, 83, 1, 75, 188, 12, 153, 79, 201, 102, 36, 134, 156, 250, 64, 249, 90, 150, 219, 253, 163, 67, 169, 39, 159, 191, 131, 190, 178, 232, 152, 179, 110, 55, 166, 232, 80, 164, 106, 73, 199, 151, 121, 117, 108, 173, 219, 18, 73, 125, 155, 22, 2, 27, 195, 141, 103, 30, 36, 235, 37, 44, 84, 19, 117, 106, 176, 250, 252, 88, 48, 212, 10, 176, 54, 218, 195, 65, 84, 26, 36, 181, 56, 238, 214, 255, 247, 141, 208, 113, 210, 197, 56, 120, 233, 241, 37, 173, 139, 53, 215, 169, 94, 168, 137, 172, 218, 19, 199, 187, 96, 141, 63, 188, 236, 203, 214, 21, 244, 86, 5, 110, 147, 14, 247, 63, 65, 183, 108, 100, 121, 220, 157, 188, 11, 214, 51, 238, 220, 77, 28, 72, 232, 131, 250, 150, 207, 22, 254, 18, 119, 174, 167, 241, 159, 233, 28, 13, 195, 210, 110, 22, 154, 28, 31, 190, 3, 251, 20, 118, 83, 147, 93, 252, 155, 129, 234, 244, 152, 145, 98, 202, 119, 71, 133, 55, 96, 159, 19, 18, 36, 188, 244, 96, 177, 73, 149, 47, 103, 156, 2, 251, 78, 44, 84, 234, 212, 218, 51, 202, 249, 233, 39, 224, 148, 181, 71, 255, 56, 126, 65, 123, 183, 161, 34, 47, 209, 166, 226, 227, 60, 97, 89, 57, 65, 93, 180, 40, 19, 107, 168, 18, 97, 195, 57, 37, 7, 11, 200, 143, 79, 21, 162, 193, 182, 189, 118, 47, 107, 54, 143, 208, 142, 164, 235, 30, 225, 119, 166, 125, 173, 254, 230, 7, 24, 162, 167, 176, 44, 39, 1, 214, 95, 193, 93, 178, 88, 58, 199, 235, 0, 195, 195, 168, 67, 120, 162, 161, 67, 157, 53, 161, 20, 97, 185, 156, 133, 240, 101, 186, 111, 42, 79, 93, 207, 86, 109, 111, 69, 50, 144, 163, 2, 4, 99, 49, 136, 130, 67, 93, 61, 224, 239, 95, 159, 150, 93, 114, 35, 32, 53, 241, 144, 133, 231, 250, 0, 91, 198, 250, 84, 158, 147, 223, 191, 203, 15, 59, 247, 155, 48, 196, 94, 137, 71, 50, 197, 207, 252, 25, 171, 152, 220, 42, 223, 29, 40, 226, 180, 232, 252, 163, 7, 220, 169, 145, 4, 255, 116, 233, 204, 27, 0, 45, 6, 62, 225, 7, 88, 73, 18, 18, 223, 36, 173, 14, 20, 190, 212, 52, 220, 214, 240, 3, 147, 112, 38, 166, 249, 216, 29, 83, 30, 84, 161, 14, 242, 251, 63, 8, 222, 58, 10, 154, 12, 210, 251, 139, 198, 95, 108, 183, 228, 83, 228, 161, 20, 59, 241, 233, 122, 228, 151, 1, 37, 164, 250, 144, 67, 27, 253, 133, 236, 113, 164, 111, 121, 231, 101, 66, 132, 64, 229, 146, 72, 191, 110, 9, 48, 32, 254, 130, 84, 220, 232, 98, 129, 126, 97, 61, 73, 181, 115, 103, 78, 52, 195, 130, 94, 97, 78, 64, 70, 80, 204, 43, 116, 114, 128, 37, 86, 101, 214, 190, 138, 17, 197, 158, 7, 41, 76, 247, 44, 144, 175, 171, 156, 14, 49, 255, 248, 122, 160, 30, 250, 174, 66, 107, 28, 122, 6, 229, 193, 51, 242, 186, 186, 141, 56, 47, 151, 196, 191, 236, 44, 253, 18, 164, 250, 95, 136, 142, 200, 208, 153, 176, 116, 27, 134, 216, 10, 128, 54, 234, 200, 166, 137, 89, 247, 192, 74, 40, 41, 124, 242, 5, 43, 38, 137, 70, 33, 109, 245, 172, 229, 20, 100, 204, 121, 2, 209, 116, 10, 7, 15, 24, 49, 154, 13, 106, 58, 235, 162, 244, 150, 228, 125, 131, 34, 25, 231, 18, 86, 100, 2, 22, 51, 108, 127, 127, 49, 207, 31, 195, 86, 14, 57, 27, 98, 250, 154, 45, 118, 192, 52, 132, 166, 53, 224, 6, 137, 185, 206, 44, 180, 251, 140, 14, 94, 8, 214, 143, 60, 169, 9, 34, 31, 137, 226, 17, 38, 124, 1, 63, 40, 224, 69, 3, 189, 84, 139, 12, 242, 19, 244, 40, 8, 67, 129, 249, 236, 76, 45, 150, 227, 187, 142, 140, 244, 169, 127, 130, 157, 77, 214, 53, 100, 222, 213, 3, 152, 205, 46, 251, 29, 231, 204, 253, 192, 106, 30, 114, 143, 184, 62, 236, 95, 203, 175, 84, 146, 79, 196, 31, 2, 95, 97, 90, 244, 176, 179, 230, 134, 189, 129, 31, 169, 3, 100, 240, 66, 166, 140, 160, 148, 50, 120, 56, 237, 200, 76, 22, 18, 70, 12, 196, 133, 216, 142, 174, 2, 25, 58, 179, 227, 50, 22, 124, 135, 25, 109, 39, 247, 68, 36, 73, 57, 40, 27, 136, 65, 161, 104, 220, 6, 178, 180, 125, 68, 247, 234, 177, 195, 139, 15, 214, 125, 107, 93, 207, 42, 168, 47, 31, 232, 97, 137, 76, 8, 7, 73, 179, 111, 25, 103, 19, 214, 169, 130, 234, 70, 158, 142, 234, 233, 11, 104, 86, 116, 178, 92, 71, 125, 222, 71, 207, 13, 59, 112, 97, 81, 150, 65, 231, 31, 90, 9, 239, 148, 254, 23, 0, 55, 88, 136, 16, 156, 226, 55, 146, 48, 35, 207, 148, 45, 175, 82, 114, 77, 13, 173, 26, 120, 16, 36, 178, 75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 2450
// Code size = 7372 bytes

      :                          @0
     0: 28 ea 01 00 00           jump @34
      :                          @1
     5: 28 29 04 00 00           jump @79
      :                          @2
    10: 28 07 07                 jump @163
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 80 89 34                 a2 = u32 [a1 + 0x34]
    24: 84 9a 10                 a3 = a2 & 0x10
    27: 52 0a 16                 jump @6 if a3 != 0
      :                          @4
    30: 84 99 20                 a2 = a2 & 0x20
    33: 52 09 40                 jump @9 if a2 != 0
      :                          @5
    36: 80 77                    a0 = u32 [a0]
    38: 82 10 80 00              ra = u64 [sp + 0x80]
    42: 95 11 88 00              sp = sp + 0x88
    46: 28 a6 11                 jump @339
      :                          @6
    49: 81 7b                    a4 = i32 [a0]
    51: 33 09 81 00              a2 = 0x81
    55: 95 17 7f                 a0 = sp + 0x7f
    58: 33 02 57                 t0 = 0x57
    61: 01                       fallthrough
      :                          @7
    62: 64 9c                    a5 = a2
    64: 8b ba 04                 i32 a3 = a4 >> 0x4
    67: 84 bb 0f                 a4 = a4 & 0xf
    70: 88 b3 0a                 t1 = a4 <u 0xa
    73: 33 09 30                 a2 = 0x30
    76: da 32 09                 a2 = t0 if t1 == 0
    79: be b9 09                 i32 a2 = a2 + a4
    82: 78 79                    u8 [a0] = a2
    84: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
    87: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
    90: 64 ab                    a4 = a3
    92: 52 0a e2                 jump @7 if a3 != 0
      :                          @8
    95: 28 30                    jump @11
      :                          @9
    97: 81 7b                    a4 = i32 [a0]
    99: 33 09 81 00              a2 = 0x81
   103: 95 17 7f                 a0 = sp + 0x7f
   106: 33 02 37                 t0 = 0x37
   109: 01                       fallthrough
      :                          @10
   110: 64 9c                    a5 = a2
   112: 8b ba 04                 i32 a3 = a4 >> 0x4
   115: 84 bb 0f                 a4 = a4 & 0xf
   118: 88 b3 0a                 t1 = a4 <u 0xa
   121: 33 09 30                 a2 = 0x30
   124: da 32 09                 a2 = t0 if t1 == 0
   127: be b9 09                 i32 a2 = a2 + a4
   130: 78 79                    u8 [a0] = a2
   132: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   135: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   138: 64 ab                    a4 = a3
   140: 52 0a e2                 jump @10 if a3 != 0
      :                          @11
   143: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   146: 56 27 80 00 27           jump @14 if a0 >u 128
      :                          @12
   151: 9a 9b 81 00              a4 = 0x81 - a2
   155: 64 1a                    a3 = sp
   157: c8 7a 0a                 a3 = a3 + a0
   160: 33 09 02                 a2 = 0x2
   163: 64 87                    a0 = a1
   165: 33 08 b2 01 01           a1 = 0x101b2
   170: 50 10 04 51 12           ra = 4, jump @349
      :                          @13 [@dyn 2]
   175: 82 10 80 00              ra = u64 [sp + 0x80]
   179: 95 11 88 00              sp = sp + 0x88
   183: 32 00                    ret
      :                          @14
   185: 00                       trap
      :                          @15 [@dyn 3]
   186: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   190: 7b 10 80 00              u64 [sp + 0x80] = ra
   194: 80 89 34                 a2 = u32 [a1 + 0x34]
   197: 84 9a 10                 a3 = a2 & 0x10
   200: 52 0a 16                 jump @18 if a3 != 0
      :                          @16
   203: 84 99 20                 a2 = a2 & 0x20
   206: 52 09 40                 jump @21 if a2 != 0
      :                          @17
   209: 82 77                    a0 = u64 [a0]
   211: 82 10 80 00              ra = u64 [sp + 0x80]
   215: 95 11 88 00              sp = sp + 0x88
   219: 28 f9 10                 jump @339
      :                          @18
   222: 82 7b                    a4 = u64 [a0]
   224: 33 09 81 00              a2 = 0x81
   228: 95 17 7f                 a0 = sp + 0x7f
   231: 33 02 57                 t0 = 0x57
   234: 01                       fallthrough
      :                          @19
   235: 64 9c                    a5 = a2
   237: 98 ba 04                 a3 = a4 >> 0x4
   240: 84 bb 0f                 a4 = a4 & 0xf
   243: 88 b3 0a                 t1 = a4 <u 0xa
   246: 33 09 30                 a2 = 0x30
   249: da 32 09                 a2 = t0 if t1 == 0
   252: be b9 09                 i32 a2 = a2 + a4
   255: 78 79                    u8 [a0] = a2
   257: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   260: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   263: 64 ab                    a4 = a3
   265: 52 0a e2                 jump @19 if a3 != 0
      :                          @20
   268: 28 30                    jump @23
      :                          @21
   270: 82 7b                    a4 = u64 [a0]
   272: 33 09 81 00              a2 = 0x81
   276: 95 17 7f                 a0 = sp + 0x7f
   279: 33 02 37                 t0 = 0x37
   282: 01                       fallthrough
      :                          @22
   283: 64 9c                    a5 = a2
   285: 98 ba 04                 a3 = a4 >> 0x4
   288: 84 bb 0f                 a4 = a4 & 0xf
   291: 88 b3 0a                 t1 = a4 <u 0xa
   294: 33 09 30                 a2 = 0x30
   297: da 32 09                 a2 = t0 if t1 == 0
   300: be b9 09                 i32 a2 = a2 + a4
   303: 78 79                    u8 [a0] = a2
   305: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   308: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   311: 64 ab                    a4 = a3
   313: 52 0a e2                 jump @22 if a3 != 0
      :                          @23
   316: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   319: 56 27 80 00 27           jump @26 if a0 >u 128
      :                          @24
   324: 9a 9b 81 00              a4 = 0x81 - a2
   328: 64 1a                    a3 = sp
   330: c8 7a 0a                 a3 = a3 + a0
   333: 33 09 02                 a2 = 0x2
   336: 64 87                    a0 = a1
   338: 33 08 b2 01 01           a1 = 0x101b2
   343: 50 10 08 a4 11           ra = 8, jump @349
      :                          @25 [@dyn 4]
   348: 82 10 80 00              ra = u64 [sp + 0x80]
   352: 95 11 88 00              sp = sp + 0x88
   356: 32 00                    ret
      :                          @26
   358: 00                       trap
      :                          @27 [@dyn 5]
   359: 95 11 c8                 sp = sp + 0xffffffffffffffc8
   362: 7b 10 30                 u64 [sp + 0x30] = ra
   365: 7b 15 28                 u64 [sp + 0x28] = s0
   368: 7b 16 20                 u64 [sp + 0x20] = s1
   371: 64 86                    s1 = a1
   373: 82 88 28                 a1 = u64 [a1 + 0x28]
   376: 82 6a 20                 a3 = u64 [s1 + 0x20]
   379: 82 8b 18                 a4 = u64 [a1 + 0x18]
   382: 64 75                    s0 = a0
   384: 33 08 70 01 01           a1 = 0x10170
   389: 33 09 01                 a2 = 0x1
   392: 64 a7                    a0 = a3
   394: b4 b0 01 0c              ra = 12, jump [a4]
      :                          @28 [@dyn 6]
   398: 7b 16 08                 u64 [sp + 0x8] = s1
   401: 78 17 10                 u8 [sp + 0x10] = a0
   404: 46 11 11                 u8 [sp + 17] = 0
   407: 33 06 80 00              s1 = 0x80
   411: 33 07 98 00              a0 = 0x98
   415: 7b 17                    u64 [sp] = a0
   417: 01                       fallthrough
      :                          @29
   418: 7b 15 18                 u64 [sp + 0x18] = s0
   421: 95 17 08                 a0 = sp + 0x8
   424: 95 18 18                 a1 = sp + 0x18
   427: 82 19                    a2 = u64 [sp]
   429: 50 10 0e 1f 18           ra = 14, jump @493
      :                          @30 [@dyn 7]
   434: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
   437: 95 55 01                 s0 = s0 + 0x1
   440: 52 06 ea                 jump @29 if s1 != 0
      :                          @31
   443: 7c 18 10                 a1 = u8 [sp + 0x10]
   446: 33 07 01                 a0 = 0x1
   449: 52 08 1b                 jump @33 if a1 != 0
      :                          @32
   452: 82 17 08                 a0 = u64 [sp + 0x8]
   455: 82 78 28                 a1 = u64 [a0 + 0x28]
   458: 82 77 20                 a0 = u64 [a0 + 0x20]
   461: 82 8a 18                 a3 = u64 [a1 + 0x18]
   464: 33 08 b1 01 01           a1 = 0x101b1
   469: 33 09 01                 a2 = 0x1
   472: b4 a0 01 10              ra = 16, jump [a3]
      :                          @33 [@dyn 8]
   476: 82 10 30                 ra = u64 [sp + 0x30]
   479: 82 15 28                 s0 = u64 [sp + 0x28]
   482: 82 16 20                 s1 = u64 [sp + 0x20]
   485: 95 11 38                 sp = sp + 0x38
   488: 32 00                    ret
      :                          @34 [export #0: 'refine']
   490: 95 11 70 ff              sp = sp + 0xffffffffffffff70
   494: 7b 10 88 00              u64 [sp + 0x88] = ra
   498: 7b 15 80 00              u64 [sp + 0x80] = s0
   502: 7b 16 78                 u64 [sp + 0x78] = s1
   505: 64 86                    s1 = a1
   507: 33 05 01                 s0 = 0x1
   510: 7a 15 1c                 u32 [sp + 0x1c] = s0
   513: 33 09 00 00 01           a2 = 0x10000
   518: 53 16 04 40              jump @43 if s1 <u 4
      :                          @35
   522: 7d 78                    a1 = i8 [a0]
   524: 59 08 37                 jump @42 if a1 >=s 0
      :                          @36
   527: 84 8a ff 00              a3 = a1 & 0xff
   531: 33 05 02                 s0 = 0x2
   534: 53 2a c0 00 2d           jump @42 if a3 <u 192
      :                          @37
   539: 33 05 03                 s0 = 0x3
   542: 53 2a e0 00 25           jump @42 if a3 <u 224
      :                          @38
   547: 33 05 04                 s0 = 0x4
   550: 53 2a f0 00 1d           jump @42 if a3 <u 240
      :                          @39
   555: 33 05 05                 s0 = 0x5
   558: 53 2a f8 00 15           jump @42 if a3 <u 248
      :                          @40
   563: 33 05 06                 s0 = 0x6
   566: 53 2a fc 00 0d           jump @42 if a3 <u 252
      :                          @41
   571: 88 a8 fe 00              a1 = a3 <u 0xfe
   575: 9a 85 08                 s0 = 0x8 - a1
   578: 01                       fallthrough
      :                          @42
   579: ae 56 1b                 jump @45 if s1 >=u s0
      :                          @43
   582: 33 06                    s1 = 0
   584: 01                       fallthrough
      :                          @44
   585: 64 97                    a0 = a2
   587: 64 68                    a1 = s1
   589: 82 10 88 00              ra = u64 [sp + 0x88]
   593: 82 15 80 00              s0 = u64 [sp + 0x80]
   597: 82 16 78                 s1 = u64 [sp + 0x78]
   600: 95 11 90 00              sp = sp + 0x90
   604: 32 00                    ret
      :                          @45
   606: 64 58                    a1 = s0
   608: 7b 17 10                 u64 [sp + 0x10] = a0
   611: 50 10 12 a8 18           ra = 18, jump @510
      :                          @46 [@dyn 9]
   616: aa 56 6e                 jump @57 if s1 == s0
      :                          @47
   619: 82 17 10                 a0 = u64 [sp + 0x10]
   622: c8 57 07                 a0 = a0 + s0
   625: 7d 78                    a1 = i8 [a0]
   627: c9 56 05                 s0 = s1 - s0
   630: 33 06 01                 s1 = 0x1
   633: 59 08 37                 jump @54 if a1 >=s 0
      :                          @48
   636: 84 89 ff 00              a2 = a1 & 0xff
   640: 33 06 02                 s1 = 0x2
   643: 53 29 c0 00 2d           jump @54 if a2 <u 192
      :                          @49
   648: 33 06 03                 s1 = 0x3
   651: 53 29 e0 00 25           jump @54 if a2 <u 224
      :                          @50
   656: 33 06 04                 s1 = 0x4
   659: 53 29 f0 00 1d           jump @54 if a2 <u 240
      :                          @51
   664: 33 06 05                 s1 = 0x5
   667: 53 29 f8 00 15           jump @54 if a2 <u 248
      :                          @52
   672: 33 06 06                 s1 = 0x6
   675: 53 29 fc 00 0d           jump @54 if a2 <u 252
      :                          @53
   680: 88 98 fe 00              a1 = a2 <u 0xfe
   684: 9a 86 08                 s1 = 0x8 - a1
   687: 01                       fallthrough
      :                          @54
   688: ac 65 7d 01              jump @78 if s0 <u s1
      :                          @55
   692: 7b 17 10                 u64 [sp + 0x10] = a0
   695: 64 68                    a1 = s1
   697: 50 10 14 52 18           ra = 20, jump @510
      :                          @56 [@dyn 10]
   702: e4 65 08                 a1 = maxu(s0, s1)
   705: c9 68 08                 a1 = a1 - s1
   708: d8 78 09                 a2 = a1 <u a0
   711: e4 78 08                 a1 = maxu(a1, a0)
   714: c9 78 08                 a1 = a1 - a0
   717: 88 88 20                 a1 = a1 <u 0x20
   720: d4 98 08                 a1 = a1 | a2
   723: 51 08 0d                 jump @58 if a1 == 0
      :                          @57
   726: 33 06                    s1 = 0
   728: 33 09 00 00 01           a2 = 0x10000
   733: 28 6c ff                 jump @44
      :                          @58
   736: 54 17 03 a2 00           jump @67 if a0 <=u 3
      :                          @59
   741: 82 17 10                 a0 = u64 [sp + 0x10]
   744: c8 76 06                 s1 = s1 + a0
   747: 7c 67 01                 a0 = u8 [s1 + 0x1]
   750: 7c 68                    a1 = u8 [s1]
   752: 7c 69 02                 a2 = u8 [s1 + 0x2]
   755: 7d 6a 03                 a3 = i8 [s1 + 0x3]
   758: 8a 77 08                 i32 a0 = a0 << 0x8
   761: d4 87 07                 a0 = a0 | a1
   764: 8a 98 10                 i32 a1 = a2 << 0x10
   767: 8a a9 18                 i32 a2 = a3 << 0x18
   770: d4 98 08                 a1 = a1 | a2
   773: d4 87 07                 a0 = a0 | a1
   776: 3d 07 3c 10 03           u32 [0x3103c] = a0
   781: 7a 17 1c                 u32 [sp + 0x1c] = a0
   784: 95 17 1c                 a0 = sp + 0x1c
   787: 7b 17 68                 u64 [sp + 0x68] = a0
   790: 33 07 02                 a0 = 0x2
   793: 7b 17 70                 u64 [sp + 0x70] = a0
   796: 33 07 18 00 01           a0 = 0x10018
   801: 7b 17 38                 u64 [sp + 0x38] = a0
   804: 49 11 40 01              u64 [sp + 64] = 0x1
   808: 49 11 58                 u64 [sp + 88] = 0
   811: 95 18 68                 a1 = sp + 0x68
   814: 7b 18 48                 u64 [sp + 0x48] = a1
   817: 49 11 50 01              u64 [sp + 80] = 0x1
   821: 95 17 20                 a0 = sp + 0x20
   824: 95 18 38                 a1 = sp + 0x38
   827: 50 10 16 6f 0b           ra = 22, jump @269
      :                          @60 [@dyn 11]
   832: 82 15 28                 s0 = u64 [sp + 0x28]
   835: 82 1b 30                 a4 = u64 [sp + 0x30]
   838: 82 16 20                 s1 = u64 [sp + 0x20]
   841: 33 07 02                 a0 = 0x2
   844: 33 08                    a1 = 0
   846: 33 09                    a2 = 0
   848: 64 5a                    a3 = s0
   850: 33 00 18                 ra = 0x18
   853: 0a 64                    ecalli 100 // 'log'
   855: 01                       fallthrough
      :                          @61 [@dyn 12]
   856: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
   861: 53 38 00 00 ff 25        jump @67 if a1 <u 4294901760
      :                          @62
   867: 33 07 50 20 03           a0 = 0x32050
   872: 95 77 00 00 01           a0 = a0 + 0x10000
   877: 01                       fallthrough
      :                          @63
   878: 82 78                    a1 = u64 [a0]
   880: c9 87 09                 a2 = a0 - a1
   883: ab 59 0f                 jump @67 if a2 != s0
      :                          @64
   886: c9 68 09                 a2 = a1 - s1
   889: 01                       fallthrough
      :                          @65
   890: 82 7a                    a3 = u64 [a0]
   892: ab 8a f2                 jump @63 if a3 != a1
      :                          @66
   895: 7b 79                    u64 [a0] = a2
   897: 01                       fallthrough
      :                          @67
   898: 33 05 00 00 03           s0 = 0x30000
   903: 33 09 08 10              a2 = 0x1008
   907: 33 0a 05                 a3 = 0x5
   910: 33 07 00 00 03           a0 = 0x30000
   915: 33 08                    a1 = 0
   917: 33 06 08 10              s1 = 0x1008
   921: 33 0b                    a4 = 0
   923: 33 0c                    a5 = 0
   925: 0a 12                    ecalli 18 // 'fetch'
   927: 01                       fallthrough
      :                          @68
   928: 51 17 ff 29              jump @70 if a0 == 4294967295
      :                          @69
   932: 39 07 04 00 03           a0 = i32 [0x30004]
   937: 39 08 08 00 03           a1 = i32 [0x30008]
   942: 39 09 00 00 03           a2 = i32 [0x30000]
   947: be 78 08                 i32 a1 = a1 + a0
   950: 83 99 01                 i32 a2 = a2 + 0x1
   953: 3d 09 00 00 03           u32 [0x30000] = a2
   958: 3d 08 04 00 03           u32 [0x30004] = a1
   963: 3d 07 08 00 03           u32 [0x30008] = a0
   968: 01                       fallthrough
      :                          @70
   969: 64 57                    a0 = s0
   971: 64 68                    a1 = s1
   973: 33 00 1a                 ra = 0x1a
   976: 0a 13                    ecalli 19 // 'export'
   978: 01                       fallthrough
      :                          @71 [@dyn 13]
   979: 64 59                    a2 = s0
   981: 81 1a 1c                 a3 = i32 [sp + 0x1c]
   984: 7b 1a 10                 u64 [sp + 0x10] = a3
   987: 53 1a 02 6e fe           jump @44 if a3 <u 2
      :                          @72
   992: 33 05 01                 s0 = 0x1
   995: 33 02 3c 10 03           t0 = 0x3103c
  1000: 33 09 00 00 03           a2 = 0x30000
  1005: 33 06 08 10              s1 = 0x1008
  1009: 7b 19 08                 u64 [sp + 0x8] = a2
  1012: 7b 12                    u64 [sp] = t0
  1014: 01                       fallthrough
      :                          @73
  1015: 95 57 01                 a0 = s0 + 0x1
  1018: 64 6c                    a5 = s1
  1020: 64 2a                    a3 = t0
  1022: 01                       fallthrough
      :                          @74
  1023: 7c 9b                    a4 = u8 [a2]
  1025: c8 7b 0b                 a4 = a4 + a0
  1028: 78 ab                    u8 [a3] = a4
  1030: 95 aa 01                 a3 = a3 + 0x1
  1033: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  1036: 95 99 01                 a2 = a2 + 0x1
  1039: 52 0c f0                 jump @74 if a5 != 0
      :                          @75
  1042: 64 27                    a0 = t0
  1044: 64 68                    a1 = s1
  1046: 33 00 1c                 ra = 0x1c
  1049: 0a 13                    ecalli 19 // 'export'
  1051: 01                       fallthrough
      :                          @76 [@dyn 14]
  1052: 82 12                    t0 = u64 [sp]
  1054: 83 55 01                 i32 s0 = s0 + 0x1
  1057: 82 19 08                 a2 = u64 [sp + 0x8]
  1060: 82 17 10                 a0 = u64 [sp + 0x10]
  1063: ab 75 d0                 jump @73 if s0 != a0
      :                          @77
  1066: 28 1f fe                 jump @44
      :                          @78
  1069: 00                       trap
      :                          @79 [export #1: 'accumulate']
  1070: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  1073: 7b 10 20                 u64 [sp + 0x20] = ra
  1076: 7b 15 18                 u64 [sp + 0x18] = s0
  1079: 7b 16 10                 u64 [sp + 0x10] = s1
  1082: 33 09 00 00 01           a2 = 0x10000
  1087: 51 08 7a 01              jump @125 if a1 == 0
      :                          @80
  1091: 64 86                    s1 = a1
  1093: 7d 78                    a1 = i8 [a0]
  1095: 33 05 01                 s0 = 0x1
  1098: 59 08 37                 jump @87 if a1 >=s 0
      :                          @81
  1101: 84 8a ff 00              a3 = a1 & 0xff
  1105: 33 05 02                 s0 = 0x2
  1108: 53 2a c0 00 2d           jump @87 if a3 <u 192
      :                          @82
  1113: 33 05 03                 s0 = 0x3
  1116: 53 2a e0 00 25           jump @87 if a3 <u 224
      :                          @83
  1121: 33 05 04                 s0 = 0x4
  1124: 53 2a f0 00 1d           jump @87 if a3 <u 240
      :                          @84
  1129: 33 05 05                 s0 = 0x5
  1132: 53 2a f8 00 15           jump @87 if a3 <u 248
      :                          @85
  1137: 33 05 06                 s0 = 0x6
  1140: 53 2a fc 00 0d           jump @87 if a3 <u 252
      :                          @86
  1145: 88 a8 fe 00              a1 = a3 <u 0xfe
  1149: 9a 85 08                 s0 = 0x8 - a1
  1152: 01                       fallthrough
      :                          @87
  1153: ae 56 08                 jump @89 if s1 >=u s0
      :                          @88
  1156: 33 08                    a1 = 0
  1158: 28 33 01                 jump @125
      :                          @89
  1161: 64 58                    a1 = s0
  1163: 7b 17                    u64 [sp] = a0
  1165: 50 10 1e 7e 16           ra = 30, jump @510
      :                          @90 [@dyn 15]
  1170: aa 56 1f 01              jump @124 if s1 == s0
      :                          @91
  1174: 82 17                    a0 = u64 [sp]
  1176: c8 57 07                 a0 = a0 + s0
  1179: 7d 78                    a1 = i8 [a0]
  1181: c9 56 06                 s1 = s1 - s0
  1184: 33 05 01                 s0 = 0x1
  1187: 59 08 37                 jump @98 if a1 >=s 0
      :                          @92
  1190: 84 89 ff 00              a2 = a1 & 0xff
  1194: 33 05 02                 s0 = 0x2
  1197: 53 29 c0 00 2d           jump @98 if a2 <u 192
      :                          @93
  1202: 33 05 03                 s0 = 0x3
  1205: 53 29 e0 00 25           jump @98 if a2 <u 224
      :                          @94
  1210: 33 05 04                 s0 = 0x4
  1213: 53 29 f0 00 1d           jump @98 if a2 <u 240
      :                          @95
  1218: 33 05 05                 s0 = 0x5
  1221: 53 29 f8 00 15           jump @98 if a2 <u 248
      :                          @96
  1226: 33 05 06                 s0 = 0x6
  1229: 53 29 fc 00 0d           jump @98 if a2 <u 252
      :                          @97
  1234: 88 98 fe 00              a1 = a2 <u 0xfe
  1238: 9a 85 08                 s0 = 0x8 - a1
  1241: 01                       fallthrough
      :                          @98
  1242: ac 56 d7 00              jump @124 if s1 <u s0
      :                          @99
  1246: 64 58                    a1 = s0
  1248: 7b 17                    u64 [sp] = a0
  1250: 50 10 20 29 16           ra = 32, jump @510
      :                          @100 [@dyn 16]
  1255: 82 17                    a0 = u64 [sp]
  1257: c8 57 07                 a0 = a0 + s0
  1260: c9 56 0a                 a3 = s1 - s0
  1263: ab 56 07                 jump @102 if s1 != s0
      :                          @101
  1266: 33 05                    s0 = 0
  1268: 28 41                    jump @110
      :                          @102
  1270: 7d 78                    a1 = i8 [a0]
  1272: 33 05 01                 s0 = 0x1
  1275: 59 08 37                 jump @109 if a1 >=s 0
      :                          @103
  1278: 84 89 ff 00              a2 = a1 & 0xff
  1282: 33 05 02                 s0 = 0x2
  1285: 53 29 c0 00 2d           jump @109 if a2 <u 192
      :                          @104
  1290: 33 05 03                 s0 = 0x3
  1293: 53 29 e0 00 25           jump @109 if a2 <u 224
      :                          @105
  1298: 33 05 04                 s0 = 0x4
  1301: 53 29 f0 00 1d           jump @109 if a2 <u 240
      :                          @106
  1306: 33 05 05                 s0 = 0x5
  1309: 53 29 f8 00 15           jump @109 if a2 <u 248
      :                          @107
  1314: 33 05 06                 s0 = 0x6
  1317: 53 29 fc 00 0d           jump @109 if a2 <u 252
      :                          @108
  1322: 88 98 fe 00              a1 = a2 <u 0xfe
  1326: 9a 85 08                 s0 = 0x8 - a1
  1329: 01                       fallthrough
      :                          @109
  1330: ac 5a 7f                 jump @124 if a3 <u s0
      :                          @110
  1333: 64 a6                    s1 = a3
  1335: 7b 17                    u64 [sp] = a0
  1337: 64 58                    a1 = s0
  1339: 50 10 22 d0 15           ra = 34, jump @510
      :                          @111 [@dyn 17]
  1344: 51 07 71                 jump @124 if a0 == 0
      :                          @112
  1347: e4 56 07                 a0 = maxu(s1, s0)
  1350: c9 57 07                 a0 = a0 - s0
  1353: 33 09 00 00 01           a2 = 0x10000
  1358: 53 17 60 36 ff           jump @88 if a0 <u 96
      :                          @113
  1363: 82 18                    a1 = u64 [sp]
  1365: c8 85 05                 s0 = s0 + a1
  1368: 95 76 a0                 s1 = a0 + 0xffffffffffffffa0
  1371: 95 57 60                 a0 = s0 + 0x60
  1374: 7b 17                    u64 [sp] = a0
  1376: 51 06 69                 jump @126 if s1 == 0
      :                          @114
  1379: 7d 78                    a1 = i8 [a0]
  1381: 33 05 01                 s0 = 0x1
  1384: 59 08 37                 jump @121 if a1 >=s 0
      :                          @115
  1387: 84 89 ff 00              a2 = a1 & 0xff
  1391: 33 05 02                 s0 = 0x2
  1394: 53 29 c0 00 2d           jump @121 if a2 <u 192
      :                          @116
  1399: 33 05 03                 s0 = 0x3
  1402: 53 29 e0 00 25           jump @121 if a2 <u 224
      :                          @117
  1407: 33 05 04                 s0 = 0x4
  1410: 53 29 f0 00 1d           jump @121 if a2 <u 240
      :                          @118
  1415: 33 05 05                 s0 = 0x5
  1418: 53 29 f8 00 15           jump @121 if a2 <u 248
      :                          @119
  1423: 33 05 06                 s0 = 0x6
  1426: 53 29 fc 00 0d           jump @121 if a2 <u 252
      :                          @120
  1431: 88 98 fe 00              a1 = a2 <u 0xfe
  1435: 9a 85 08                 s0 = 0x8 - a1
  1438: 01                       fallthrough
      :                          @121
  1439: ac 56 6f 01              jump @160 if s1 <u s0
      :                          @122
  1443: 64 58                    a1 = s0
  1445: 50 10 24 66 15           ra = 36, jump @510
      :                          @123 [@dyn 18]
  1450: 33 09 00 00 01           a2 = 0x10000
  1455: 28 1f                    jump @127
      :                          @124
  1457: 33 08                    a1 = 0
  1459: 33 09 00 00 01           a2 = 0x10000
  1464: 01                       fallthrough
      :                          @125
  1465: 64 97                    a0 = a2
  1467: 82 10 20                 ra = u64 [sp + 0x20]
  1470: 82 15 18                 s0 = u64 [sp + 0x18]
  1473: 82 16 10                 s1 = u64 [sp + 0x10]
  1476: 95 11 28                 sp = sp + 0x28
  1479: 32 00                    ret
      :                          @126
  1481: 33 05                    s0 = 0
  1483: 33 07                    a0 = 0
  1485: 01                       fallthrough
      :                          @127
  1486: e4 56 08                 a1 = maxu(s1, s0)
  1489: c9 58 08                 a1 = a1 - s0
  1492: e4 78 06                 s1 = maxu(a1, a0)
  1495: c9 76 06                 s1 = s1 - a0
  1498: 53 16 20 aa fe           jump @88 if s1 <u 32
      :                          @128
  1503: 82 18                    a1 = u64 [sp]
  1505: c8 85 05                 s0 = s0 + a1
  1508: c8 57 07                 a0 = a0 + s0
  1511: 95 66 e0                 s1 = s1 + 0xffffffffffffffe0
  1514: 95 77 20                 a0 = a0 + 0x20
  1517: 7b 17                    u64 [sp] = a0
  1519: 51 06 51                 jump @139 if s1 == 0
      :                          @129
  1522: 7d 78                    a1 = i8 [a0]
  1524: 33 05 01                 s0 = 0x1
  1527: 59 08 37                 jump @136 if a1 >=s 0
      :                          @130
  1530: 84 89 ff 00              a2 = a1 & 0xff
  1534: 33 05 02                 s0 = 0x2
  1537: 53 29 c0 00 2d           jump @136 if a2 <u 192
      :                          @131
  1542: 33 05 03                 s0 = 0x3
  1545: 53 29 e0 00 25           jump @136 if a2 <u 224
      :                          @132
  1550: 33 05 04                 s0 = 0x4
  1553: 53 29 f0 00 1d           jump @136 if a2 <u 240
      :                          @133
  1558: 33 05 05                 s0 = 0x5
  1561: 53 29 f8 00 15           jump @136 if a2 <u 248
      :                          @134
  1566: 33 05 06                 s0 = 0x6
  1569: 53 29 fc 00 0d           jump @136 if a2 <u 252
      :                          @135
  1574: 88 98 fe 00              a1 = a2 <u 0xfe
  1578: 9a 85 08                 s0 = 0x8 - a1
  1581: 01                       fallthrough
      :                          @136
  1582: ac 56 e0 00              jump @160 if s1 <u s0
      :                          @137
  1586: 64 58                    a1 = s0
  1588: 50 10 26 d7 14           ra = 38, jump @510
      :                          @138 [@dyn 19]
  1593: 33 09 00 00 01           a2 = 0x10000
  1598: 28 05                    jump @140
      :                          @139
  1600: 33 05                    s0 = 0
  1602: 01                       fallthrough
      :                          @140
  1603: ae 65 41 fe              jump @88 if s0 >=u s1
      :                          @141
  1607: 82 17                    a0 = u64 [sp]
  1609: c8 57 07                 a0 = a0 + s0
  1612: 7c 78                    a1 = u8 [a0]
  1614: 51 08 19                 jump @143 if a1 == 0
      :                          @142
  1617: 46 11 0f                 u8 [sp + 15] = 0
  1620: 95 17 0f                 a0 = sp + 0xf
  1623: 33 08 01                 a1 = 0x1
  1626: 33 09                    a2 = 0
  1628: 33 0a                    a3 = 0
  1630: 0a 03                    ecalli 3 // 'write'
  1632: 33 08                    a1 = 0
  1634: 33 05                    s0 = 0
  1636: 28 91 00                 jump @158
      :                          @143
  1639: e4 56 08                 a1 = maxu(s1, s0)
  1642: c9 58 08                 a1 = a1 - s0
  1645: 95 76 01                 s1 = a0 + 0x1
  1648: 33 07 01                 a0 = 0x1
  1651: e4 78 07                 a0 = maxu(a1, a0)
  1654: 33 09 02                 a2 = 0x2
  1657: 95 7a ff                 a3 = a0 + 0xffffffffffffffff
  1660: ae 98 09                 jump @145 if a1 >=u a2
      :                          @144
  1663: 33 05                    s0 = 0
  1665: 33 07                    a0 = 0
  1667: 28 4f                    jump @155
      :                          @145
  1669: 7d 67                    a0 = i8 [s1]
  1671: 33 05 01                 s0 = 0x1
  1674: 59 07 37                 jump @152 if a0 >=s 0
      :                          @146
  1677: 84 77 ff 00              a0 = a0 & 0xff
  1681: 33 05 02                 s0 = 0x2
  1684: 53 27 c0 00 2d           jump @152 if a0 <u 192
      :                          @147
  1689: 33 05 03                 s0 = 0x3
  1692: 53 27 e0 00 25           jump @152 if a0 <u 224
      :                          @148
  1697: 33 05 04                 s0 = 0x4
  1700: 53 27 f0 00 1d           jump @152 if a0 <u 240
      :                          @149
  1705: 33 05 05                 s0 = 0x5
  1708: 53 27 f8 00 15           jump @152 if a0 <u 248
      :                          @150
  1713: 33 05 06                 s0 = 0x6
  1716: 53 27 fc 00 0d           jump @152 if a0 <u 252
      :                          @151
  1721: 88 77 fe 00              a0 = a0 <u 0xfe
  1725: 9a 75 08                 s0 = 0x8 - a0
  1728: 01                       fallthrough
      :                          @152
  1729: 7b 1a                    u64 [sp] = a3
  1731: ac 5a 4d                 jump @162 if a3 <u s0
      :                          @153
  1734: 64 67                    a0 = s1
  1736: 64 58                    a1 = s0
  1738: 50 10 28 41 14           ra = 40, jump @510
      :                          @154 [@dyn 20]
  1743: 82 1a                    a3 = u64 [sp]
  1745: 01                       fallthrough
      :                          @155
  1746: c8 56 09                 a2 = s1 + s0
  1749: e4 5a 08                 a1 = maxu(a3, s0)
  1752: c9 58 08                 a1 = a1 - s0
  1755: e6 78 05                 s0 = minu(a1, a0)
  1758: 46 11 0f                 u8 [sp + 15] = 0
  1761: 95 17 0f                 a0 = sp + 0xf
  1764: 33 08 01                 a1 = 0x1
  1767: 64 96                    s1 = a2
  1769: 64 5a                    a3 = s0
  1771: 0a 03                    ecalli 3 // 'write'
  1773: 01                       fallthrough
      :                          @156
  1774: 55 15 21 21              jump @161 if s0 >=u 33
      :                          @157
  1778: 64 68                    a1 = s1
  1780: 01                       fallthrough
      :                          @158
  1781: 33 06 19 10 03           s1 = 0x31019
  1786: 33 07 19 10 03           a0 = 0x31019
  1791: 64 59                    a2 = s0
  1793: 50 10 2a 1d 0a           ra = 42, jump @319
      :                          @159 [@dyn 21]
  1798: 64 69                    a2 = s1
  1800: 33 08 20                 a1 = 0x20
  1803: 28 ae fe                 jump @125
      :                          @160
  1806: 00                       trap
      :                          @161
  1807: 00                       trap
      :                          @162
  1808: 00                       trap
      :                          @163 [export #2: 'on_transfer']
  1809: 95 11 70 fd              sp = sp + 0xfffffffffffffd70
  1813: 7b 10 88 02              u64 [sp + 0x288] = ra
  1817: 7b 15 80 02              u64 [sp + 0x280] = s0
  1821: 7b 16 78 02              u64 [sp + 0x278] = s1
  1825: 64 8c                    a5 = a1
  1827: 64 79                    a2 = a0
  1829: 33 02                    t0 = 0
  1831: 95 7b 04                 a4 = a0 + 0x4
  1834: 33 07 02                 a0 = 0x2
  1837: 7b 17 28                 u64 [sp + 0x28] = a0
  1840: 33 07 06                 a0 = 0x6
  1843: 7b 17 58                 u64 [sp + 0x58] = a0
  1846: 33 07 0a                 a0 = 0xa
  1849: 7b 17 20                 u64 [sp + 0x20] = a0
  1852: 33 07 80 00 01           a0 = 0x10080
  1857: 7b 17 18                 u64 [sp + 0x18] = a0
  1860: 33 07 90 00              a0 = 0x90
  1864: 7b 17 10                 u64 [sp + 0x10] = a0
  1867: 33 07 98 02 01           a0 = 0x10298
  1872: 7b 17 08                 u64 [sp + 0x8] = a0
  1875: 33 07 50 20 03           a0 = 0x32050
  1880: 95 77 00 00 01           a0 = a0 + 0x10000
  1885: 7b 17 50                 u64 [sp + 0x50] = a0
  1888: 33 07 20 01 01           a0 = 0x10120
  1893: 7b 17                    u64 [sp] = a0
  1895: 95 97 08                 a0 = a2 + 0x8
  1898: 95 ca f8                 a3 = a5 + 0xfffffffffffffff8
  1901: 95 98 0c                 a1 = a2 + 0xc
  1904: 7b 18 60                 u64 [sp + 0x60] = a1
  1907: 33 08 08                 a1 = 0x8
  1910: 33 06 ff ff fe           s1 = 0xfffffffffffeffff
  1915: 7b 16 48                 u64 [sp + 0x48] = s1
  1918: 7b 17 c0 00              u64 [sp + 0xc0] = a0
  1922: 7b 17 b8 00              u64 [sp + 0xb8] = a0
  1926: 7b 1c 40                 u64 [sp + 0x40] = a5
  1929: 7b 19 38                 u64 [sp + 0x38] = a2
  1932: 7b 1b 30                 u64 [sp + 0x30] = a4
  1935: 7b 1a a8 00              u64 [sp + 0xa8] = a3
  1939: ac 8c c0 04              jump @211 if a5 <u a1
      :                          @164
  1943: 51 09 d5 04              jump @212 if a2 == 0
      :                          @165
  1947: 51 0b d1 04              jump @212 if a4 == 0
      :                          @166
  1951: 7c 97                    a0 = u8 [a2]
  1953: 7b 17 78                 u64 [sp + 0x78] = a0
  1956: 7c 97 01                 a0 = u8 [a2 + 0x1]
  1959: 7b 17 68                 u64 [sp + 0x68] = a0
  1962: 7c 97 02                 a0 = u8 [a2 + 0x2]
  1965: 7b 17 70                 u64 [sp + 0x70] = a0
  1968: 7c 97 03                 a0 = u8 [a2 + 0x3]
  1971: 7b 17 80 00              u64 [sp + 0x80] = a0
  1975: 7c b7                    a0 = u8 [a4]
  1977: 7b 17 98 00              u64 [sp + 0x98] = a0
  1981: 7c b7 01                 a0 = u8 [a4 + 0x1]
  1984: 7b 17 88 00              u64 [sp + 0x88] = a0
  1988: 7c b7 02                 a0 = u8 [a4 + 0x2]
  1991: 7b 17 90 00              u64 [sp + 0x90] = a0
  1995: 7c b7 03                 a0 = u8 [a4 + 0x3]
  1998: 7b 17 a0 00              u64 [sp + 0xa0] = a0
  2002: 51 0a 53                 jump @176 if a3 == 0
      :                          @167
  2005: 82 17 c0 00              a0 = u64 [sp + 0xc0]
  2009: 7d 77                    a0 = i8 [a0]
  2011: 33 05 01                 s0 = 0x1
  2014: 59 07 4a                 jump @177 if a0 >=s 0
      :                          @168
  2017: 84 77 ff 00              a0 = a0 & 0xff
  2021: 33 05 02                 s0 = 0x2
  2024: 33 06 c0 00              s1 = 0xc0
  2028: ac 67 33                 jump @174 if a0 <u s1
      :                          @169
  2031: 33 05 03                 s0 = 0x3
  2034: 33 06 e0 00              s1 = 0xe0
  2038: ac 67 29                 jump @174 if a0 <u s1
      :                          @170
  2041: 33 05 04                 s0 = 0x4
  2044: 33 06 f0 00              s1 = 0xf0
  2048: ac 67 1f                 jump @174 if a0 <u s1
      :                          @171
  2051: 33 05 05                 s0 = 0x5
  2054: 33 06 f8 00              s1 = 0xf8
  2058: ac 67 15                 jump @174 if a0 <u s1
      :                          @172
  2061: 33 05 06                 s0 = 0x6
  2064: 33 06 fc 00              s1 = 0xfc
  2068: ac 67 0b                 jump @174 if a0 <u s1
      :                          @173
  2071: 88 77 fe 00              a0 = a0 <u 0xfe
  2075: 9a 75 08                 s0 = 0x8 - a0
  2078: 01                       fallthrough
      :                          @174
  2079: ae 5a 09                 jump @177 if a3 >=u s0
      :                          @175
  2082: 28 31 04                 jump @211
      :                          @176
  2085: 33 05                    s0 = 0
  2087: 01                       fallthrough
      :                          @177
  2088: 82 17 c0 00              a0 = u64 [sp + 0xc0]
  2092: 64 58                    a1 = s0
  2094: 7b 12 b0 00              u64 [sp + 0xb0] = t0
  2098: 50 10 2c d9 12           ra = 44, jump @510
      :                          @178 [@dyn 22]
  2103: 33 03 98 00              t1 = 0x98
  2107: 33 02 04                 t0 = 0x4
  2110: 33 06 08                 s1 = 0x8
  2113: 82 1c a8 00              a5 = u64 [sp + 0xa8]
  2117: 82 1b b0 00              a4 = u64 [sp + 0xb0]
  2121: ae 7b 0a 04              jump @211 if a4 >=u a0
      :                          @179
  2125: 82 18 68                 a1 = u64 [sp + 0x68]
  2128: 97 88 08                 a1 = a1 << 0x8
  2131: 82 19 78                 a2 = u64 [sp + 0x78]
  2134: d4 98 08                 a1 = a1 | a2
  2137: 82 19 70                 a2 = u64 [sp + 0x70]
  2140: 97 99 10                 a2 = a2 << 0x10
  2143: 82 1a 80 00              a3 = u64 [sp + 0x80]
  2147: 97 aa 18                 a3 = a3 << 0x18
  2150: d4 a9 09                 a2 = a2 | a3
  2153: d4 89 04                 t2 = a2 | a1
  2156: 82 18 88 00              a1 = u64 [sp + 0x88]
  2160: 97 88 08                 a1 = a1 << 0x8
  2163: 82 19 98 00              a2 = u64 [sp + 0x98]
  2167: d4 98 08                 a1 = a1 | a2
  2170: 82 19 90 00              a2 = u64 [sp + 0x90]
  2174: 97 99 10                 a2 = a2 << 0x10
  2177: 82 1a a0 00              a3 = u64 [sp + 0xa0]
  2181: 97 aa 18                 a3 = a3 << 0x18
  2184: d4 a9 09                 a2 = a2 | a3
  2187: d4 89 00                 ra = a2 | a1
  2190: e4 5c 08                 a1 = maxu(a5, s0)
  2193: c9 58 08                 a1 = a1 - s0
  2196: 82 19 b8 00              a2 = u64 [sp + 0xb8]
  2200: c8 59 09                 a2 = a2 + s0
  2203: 82 1a 60                 a3 = u64 [sp + 0x60]
  2206: c8 a5 05                 s0 = s0 + a3
  2209: 64 ba                    a3 = a4
  2211: 01                       fallthrough
      :                          @180
  2212: ac 68 af 03              jump @211 if a1 <u s1
      :                          @181
  2216: aa 25 c4 03              jump @212 if s0 == t0
      :                          @182
  2220: 51 05 c0 03              jump @212 if s0 == 0
      :                          @183
  2224: ac 38 a3 03              jump @211 if a1 <u t1
      :                          @184
  2228: 51 0a 17                 jump @187 if a3 == 0
      :                          @185
  2231: 95 88 68 ff              a1 = a1 + 0xffffffffffffff68
  2235: 95 55 98 00              s0 = s0 + 0x98
  2239: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  2242: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  2245: 52 07 df                 jump @180 if a0 != 0
      :                          @186
  2248: 28 8b 03                 jump @211
      :                          @187
  2251: 7c 97 01                 a0 = u8 [a2 + 0x1]
  2254: 7c 98                    a1 = u8 [a2]
  2256: 7c 9a 02                 a3 = u8 [a2 + 0x2]
  2259: 7d 9b 03                 a4 = i8 [a2 + 0x3]
  2262: 8a 77 08                 i32 a0 = a0 << 0x8
  2265: d4 87 07                 a0 = a0 | a1
  2268: 8a a8 10                 i32 a1 = a3 << 0x10
  2271: 8a ba 18                 i32 a3 = a4 << 0x18
  2274: d4 a8 08                 a1 = a1 | a3
  2277: d4 87 07                 a0 = a0 | a1
  2280: 7b 17 a0 00              u64 [sp + 0xa0] = a0
  2284: 7c 57 01                 a0 = u8 [s0 + 0x1]
  2287: 7c 58                    a1 = u8 [s0]
  2289: 7c 5a 02                 a3 = u8 [s0 + 0x2]
  2292: 7d 5b 03                 a4 = i8 [s0 + 0x3]
  2295: 8a 77 08                 i32 a0 = a0 << 0x8
  2298: d4 87 07                 a0 = a0 | a1
  2301: 8a a8 10                 i32 a1 = a3 << 0x10
  2304: 8a ba 18                 i32 a3 = a4 << 0x18
  2307: d4 a8 08                 a1 = a1 | a3
  2310: 7c 9a 0f                 a3 = u8 [a2 + 0xf]
  2313: 7c 9b 0e                 a4 = u8 [a2 + 0xe]
  2316: d4 87 07                 a0 = a0 | a1
  2319: 7b 17 98 00              u64 [sp + 0x98] = a0
  2323: 7c 97 0d                 a0 = u8 [a2 + 0xd]
  2326: 97 aa 10                 a3 = a3 << 0x10
  2329: 97 bb 08                 a4 = a4 << 0x8
  2332: d4 ba 0a                 a3 = a3 | a4
  2335: 7c 98 0c                 a1 = u8 [a2 + 0xc]
  2338: 7c 9b 0b                 a4 = u8 [a2 + 0xb]
  2341: d4 a7 07                 a0 = a0 | a3
  2344: 97 77 10                 a0 = a0 << 0x10
  2347: 97 88 08                 a1 = a1 << 0x8
  2350: d4 b8 08                 a1 = a1 | a4
  2353: 7c 9a 0a                 a3 = u8 [a2 + 0xa]
  2356: 7c 9b 09                 a4 = u8 [a2 + 0x9]
  2359: d4 87 07                 a0 = a0 | a1
  2362: 97 77 10                 a0 = a0 << 0x10
  2365: 97 aa 08                 a3 = a3 << 0x8
  2368: d4 ba 0a                 a3 = a3 | a4
  2371: d4 a7 07                 a0 = a0 | a3
  2374: 7c 98 08                 a1 = u8 [a2 + 0x8]
  2377: 97 77 08                 a0 = a0 << 0x8
  2380: 7c 9a 97 00              a3 = u8 [a2 + 0x97]
  2384: 7c 9b 96 00              a4 = u8 [a2 + 0x96]
  2388: d4 87 07                 a0 = a0 | a1
  2391: 7b 17 90 00              u64 [sp + 0x90] = a0
  2395: 7c 97 95 00              a0 = u8 [a2 + 0x95]
  2399: 97 aa 10                 a3 = a3 << 0x10
  2402: 97 bb 08                 a4 = a4 << 0x8
  2405: d4 ba 0a                 a3 = a3 | a4
  2408: d4 a7 07                 a0 = a0 | a3
  2411: 7c 9a 94 00              a3 = u8 [a2 + 0x94]
  2415: 7c 9b 93 00              a4 = u8 [a2 + 0x93]
  2419: 95 98 10                 a1 = a2 + 0x10
  2422: 97 77 10                 a0 = a0 << 0x10
  2425: 97 aa 08                 a3 = a3 << 0x8
  2428: d4 ba 0a                 a3 = a3 | a4
  2431: 7c 9b 92 00              a4 = u8 [a2 + 0x92]
  2435: d4 a7 07                 a0 = a0 | a3
  2438: 7c 9a 91 00              a3 = u8 [a2 + 0x91]
  2442: 97 77 10                 a0 = a0 << 0x10
  2445: 97 bb 08                 a4 = a4 << 0x8
  2448: 7c 99 90 00              a2 = u8 [a2 + 0x90]
  2452: d4 ba 0a                 a3 = a3 | a4
  2455: d4 a7 07                 a0 = a0 | a3
  2458: 97 77 08                 a0 = a0 << 0x8
  2461: d4 97 07                 a0 = a0 | a2
  2464: 7b 17 88 00              u64 [sp + 0x88] = a0
  2468: 95 17 68 01              a0 = sp + 0x168
  2472: 33 09 80 00              a2 = 0x80
  2476: 64 45                    s0 = t2
  2478: 64 06                    s1 = ra
  2480: 50 10 2e 6e 07           ra = 46, jump @319
      :                          @188 [@dyn 23]
  2485: 95 17 e0 00              a0 = sp + 0xe0
  2489: 95 18 68 01              a1 = sp + 0x168
  2493: 33 09 80 00              a2 = 0x80
  2497: 50 10 30 5d 07           ra = 48, jump @319
      :                          @189 [@dyn 24]
  2502: 7a 15 c8 00              u32 [sp + 0xc8] = s0
  2506: 7a 16 cc 00              u32 [sp + 0xcc] = s1
  2510: 82 17 a0 00              a0 = u64 [sp + 0xa0]
  2514: 7a 17 d0 00              u32 [sp + 0xd0] = a0
  2518: 82 17 98 00              a0 = u64 [sp + 0x98]
  2522: 7a 17 d4 00              u32 [sp + 0xd4] = a0
  2526: 82 17 90 00              a0 = u64 [sp + 0x90]
  2530: 7b 17 d8 00              u64 [sp + 0xd8] = a0
  2534: 82 17 88 00              a0 = u64 [sp + 0x88]
  2538: 7b 17 60 01              u64 [sp + 0x160] = a0
  2542: 95 17 c8 00              a0 = sp + 0xc8
  2546: 7b 17 68 01              u64 [sp + 0x168] = a0
  2550: 82 17 28                 a0 = u64 [sp + 0x28]
  2553: 7b 17 70 01              u64 [sp + 0x170] = a0
  2557: 95 18 cc 00              a1 = sp + 0xcc
  2561: 7b 18 78 01              u64 [sp + 0x178] = a1
  2565: 7b 17 80 01              u64 [sp + 0x180] = a0
  2569: 95 18 d0 00              a1 = sp + 0xd0
  2573: 7b 18 88 01              u64 [sp + 0x188] = a1
  2577: 7b 17 90 01              u64 [sp + 0x190] = a0
  2581: 95 18 d4 00              a1 = sp + 0xd4
  2585: 7b 18 98 01              u64 [sp + 0x198] = a1
  2589: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  2593: 95 17 d8 00              a0 = sp + 0xd8
  2597: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  2601: 82 17 58                 a0 = u64 [sp + 0x58]
  2604: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  2608: 95 18 e0 00              a1 = sp + 0xe0
  2612: 7b 18 b8 01              u64 [sp + 0x1b8] = a1
  2616: 82 18 20                 a1 = u64 [sp + 0x20]
  2619: 7b 18 c0 01              u64 [sp + 0x1c0] = a1
  2623: 95 18 60 01              a1 = sp + 0x160
  2627: 7b 18 c8 01              u64 [sp + 0x1c8] = a1
  2631: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
  2635: 82 17 18                 a0 = u64 [sp + 0x18]
  2638: 7b 17 28 02              u64 [sp + 0x228] = a0
  2642: 49 21 30 02 07           u64 [sp + 560] = 0x7
  2647: 49 21 48 02              u64 [sp + 584] = 0
  2651: 95 17 68 01              a0 = sp + 0x168
  2655: 7b 17 38 02              u64 [sp + 0x238] = a0
  2659: 49 21 40 02 07           u64 [sp + 576] = 0x7
  2664: 95 17 58 02              a0 = sp + 0x258
  2668: 95 18 28 02              a1 = sp + 0x228
  2672: 50 10 32 3a 04           ra = 50, jump @269
      :                          @190 [@dyn 25]
  2677: 82 15 60 02              s0 = u64 [sp + 0x260]
  2681: 82 1b 68 02              a4 = u64 [sp + 0x268]
  2685: 82 16 58 02              s1 = u64 [sp + 0x258]
  2689: 33 07 02                 a0 = 0x2
  2692: 33 08                    a1 = 0
  2694: 33 09                    a2 = 0
  2696: 64 5a                    a3 = s0
  2698: 33 00 34                 ra = 0x34
  2701: 0a 64                    ecalli 100 // 'log'
  2703: 01                       fallthrough
      :                          @191 [@dyn 26]
  2704: 82 17 48                 a0 = u64 [sp + 0x48]
  2707: c8 67 07                 a0 = a0 + s1
  2710: 82 1b 50                 a4 = u64 [sp + 0x50]
  2713: 53 37 00 00 ff 1a        jump @196 if a0 <u 4294901760
      :                          @192
  2719: 82 b7                    a0 = u64 [a4]
  2721: c9 7b 08                 a1 = a4 - a0
  2724: ab 58 0f                 jump @196 if a1 != s0
      :                          @193
  2727: c9 67 08                 a1 = a0 - s1
  2730: 01                       fallthrough
      :                          @194
  2731: 82 b9                    a2 = u64 [a4]
  2733: ab 79 f2                 jump @192 if a2 != a0
      :                          @195
  2736: 7b b8                    u64 [a4] = a1
  2738: 01                       fallthrough
      :                          @196
  2739: 81 17 cc 00              a0 = i32 [sp + 0xcc]
  2743: 7a 17 ec 01              u32 [sp + 0x1ec] = a0
  2747: 95 17 ec 01              a0 = sp + 0x1ec
  2751: 33 08 04                 a1 = 0x4
  2754: 95 19 e0 00              a2 = sp + 0xe0
  2758: 33 0a 80 00              a3 = 0x80
  2762: 0a 03                    ecalli 3 // 'write'
  2764: 0a                       ecalli 0 // 'gas'
  2765: 7b 17 f0 01              u64 [sp + 0x1f0] = a0
  2769: 7b 17 f8 01              u64 [sp + 0x1f8] = a0
  2773: 46 21 07 02 04           u8 [sp + 519] = 0x4
  2778: 7b 17 08 02              u64 [sp + 0x208] = a0
  2782: 95 17 07 02              a0 = sp + 0x207
  2786: 33 08 01                 a1 = 0x1
  2789: 95 19 08 02              a2 = sp + 0x208
  2793: 33 0a 08                 a3 = 0x8
  2796: 0a 03                    ecalli 3 // 'write'
  2798: 49 21 68 01 02           u64 [sp + 360] = 0x2
  2803: 49 21 78 01 02           u64 [sp + 376] = 0x2
  2808: 49 21 88 01              u64 [sp + 392] = 0
  2812: 14 07 20 00 00 00 10 00 00 00 a0 = 0x1000000020
  2822: 7b 17 90 01              u64 [sp + 0x190] = a0
  2826: 46 21 98 01 03           u8 [sp + 408] = 0x3
  2831: 49 21 a0 01 02           u64 [sp + 416] = 0x2
  2836: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  2841: 49 21 c0 01 01           u64 [sp + 448] = 0x1
  2846: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
  2850: 95 17 07 02              a0 = sp + 0x207
  2854: 7b 17 58 02              u64 [sp + 0x258] = a0
  2858: 82 17 10                 a0 = u64 [sp + 0x10]
  2861: 7b 17 60 02              u64 [sp + 0x260] = a0
  2865: 95 17 f8 01              a0 = sp + 0x1f8
  2869: 7b 17 68 02              u64 [sp + 0x268] = a0
  2873: 82 17 58                 a0 = u64 [sp + 0x58]
  2876: 7b 17 70 02              u64 [sp + 0x270] = a0
  2880: 46 21 d0 01 03           u8 [sp + 464] = 0x3
  2885: 82 17 08                 a0 = u64 [sp + 0x8]
  2888: 7b 17 28 02              u64 [sp + 0x228] = a0
  2892: 49 21 30 02 02           u64 [sp + 560] = 0x2
  2897: 95 17 68 01              a0 = sp + 0x168
  2901: 7b 17 48 02              u64 [sp + 0x248] = a0
  2905: 49 21 50 02 02           u64 [sp + 592] = 0x2
  2910: 95 17 58 02              a0 = sp + 0x258
  2914: 7b 17 38 02              u64 [sp + 0x238] = a0
  2918: 49 21 40 02 02           u64 [sp + 576] = 0x2
  2923: 95 17 10 02              a0 = sp + 0x210
  2927: 95 18 28 02              a1 = sp + 0x228
  2931: 50 10 36 37 03           ra = 54, jump @269
      :                          @197 [@dyn 27]
  2936: 82 15 18 02              s0 = u64 [sp + 0x218]
  2940: 82 1b 20 02              a4 = u64 [sp + 0x220]
  2944: 82 16 10 02              s1 = u64 [sp + 0x210]
  2948: 33 07 02                 a0 = 0x2
  2951: 33 08                    a1 = 0
  2953: 33 09                    a2 = 0
  2955: 64 5a                    a3 = s0
  2957: 33 00 38                 ra = 0x38
  2960: 0a 64                    ecalli 100 // 'log'
  2962: 01                       fallthrough
      :                          @198 [@dyn 28]
  2963: 82 1b 50                 a4 = u64 [sp + 0x50]
  2966: 82 17 48                 a0 = u64 [sp + 0x48]
  2969: c8 67 07                 a0 = a0 + s1
  2972: 53 37 00 00 ff 1a        jump @203 if a0 <u 4294901760
      :                          @199
  2978: 82 b7                    a0 = u64 [a4]
  2980: c9 7b 08                 a1 = a4 - a0
  2983: ab 58 0f                 jump @203 if a1 != s0
      :                          @200
  2986: c9 67 08                 a1 = a0 - s1
  2989: 01                       fallthrough
      :                          @201
  2990: 82 b9                    a2 = u64 [a4]
  2992: ab 79 f2                 jump @199 if a2 != a0
      :                          @202
  2995: 7b b8                    u64 [a4] = a1
  2997: 01                       fallthrough
      :                          @203
  2998: 95 17 f0 01              a0 = sp + 0x1f0
  3002: 7b 17 58 02              u64 [sp + 0x258] = a0
  3006: 82 17 58                 a0 = u64 [sp + 0x58]
  3009: 7b 17 60 02              u64 [sp + 0x260] = a0
  3013: 82 17                    a0 = u64 [sp]
  3015: 7b 17 68 01              u64 [sp + 0x168] = a0
  3019: 49 21 70 01 02           u64 [sp + 368] = 0x2
  3024: 49 21 88 01              u64 [sp + 392] = 0
  3028: 95 17 58 02              a0 = sp + 0x258
  3032: 7b 17 78 01              u64 [sp + 0x178] = a0
  3036: 49 21 80 01 01           u64 [sp + 384] = 0x1
  3041: 95 17 28 02              a0 = sp + 0x228
  3045: 95 18 68 01              a1 = sp + 0x168
  3049: 50 10 3a c1 02           ra = 58, jump @269
      :                          @204 [@dyn 29]
  3054: 82 15 30 02              s0 = u64 [sp + 0x230]
  3058: 82 1b 38 02              a4 = u64 [sp + 0x238]
  3062: 82 16 28 02              s1 = u64 [sp + 0x228]
  3066: 33 07 02                 a0 = 0x2
  3069: 33 08                    a1 = 0
  3071: 33 09                    a2 = 0
  3073: 64 5a                    a3 = s0
  3075: 33 00 3c                 ra = 0x3c
  3078: 0a 64                    ecalli 100 // 'log'
  3080: 01                       fallthrough
      :                          @205 [@dyn 30]
  3081: 82 1b 50                 a4 = u64 [sp + 0x50]
  3084: 82 17 48                 a0 = u64 [sp + 0x48]
  3087: c8 67 07                 a0 = a0 + s1
  3090: 53 37 00 00 ff 1a        jump @210 if a0 <u 4294901760
      :                          @206
  3096: 82 b7                    a0 = u64 [a4]
  3098: c9 7b 08                 a1 = a4 - a0
  3101: ab 58 0f                 jump @210 if a1 != s0
      :                          @207
  3104: c9 67 08                 a1 = a0 - s1
  3107: 01                       fallthrough
      :                          @208
  3108: 82 b9                    a2 = u64 [a4]
  3110: ab 79 f2                 jump @206 if a2 != a0
      :                          @209
  3113: 7b b8                    u64 [a4] = a1
  3115: 01                       fallthrough
      :                          @210
  3116: 82 12 b0 00              t0 = u64 [sp + 0xb0]
  3120: 95 22 01                 t0 = t0 + 0x1
  3123: 82 17 b8 00              a0 = u64 [sp + 0xb8]
  3127: 95 77 98 00              a0 = a0 + 0x98
  3131: 7b 17 b8 00              u64 [sp + 0xb8] = a0
  3135: 82 1c 40                 a5 = u64 [sp + 0x40]
  3138: 82 19 38                 a2 = u64 [sp + 0x38]
  3141: 82 1b 30                 a4 = u64 [sp + 0x30]
  3144: 82 1a a8 00              a3 = u64 [sp + 0xa8]
  3148: 33 08 08                 a1 = 0x8
  3151: ae 8c 48 fb              jump @164 if a5 >=u a1
      :                          @211
  3155: 33 07 00 00 01           a0 = 0x10000
  3160: 33 08                    a1 = 0
  3162: 82 10 88 02              ra = u64 [sp + 0x288]
  3166: 82 15 80 02              s0 = u64 [sp + 0x280]
  3170: 82 16 78 02              s1 = u64 [sp + 0x278]
  3174: 95 11 90 02              sp = sp + 0x290
  3178: 32 00                    ret
      :                          @212
  3180: 00                       trap
      :                          @213
  3181: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  3184: 7b 10 40                 u64 [sp + 0x40] = ra
  3187: 7b 15 38                 u64 [sp + 0x38] = s0
  3190: 7b 16 30                 u64 [sp + 0x30] = s1
  3193: c8 89 09                 a2 = a2 + a1
  3196: ac 89 52                 jump @221 if a2 <u a1
      :                          @214
  3199: 64 75                    s0 = a0
  3201: 82 77                    a0 = u64 [a0]
  3203: 97 78 01                 a1 = a0 << 0x1
  3206: 33 0a 08                 a3 = 0x8
  3209: e4 a9 09                 a2 = maxu(a2, a3)
  3212: e4 98 06                 s1 = maxu(a1, a2)
  3215: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  3218: 98 88 3f                 a1 = a1 >> 0x3f
  3221: 51 07 12                 jump @216 if a0 == 0
      :                          @215
  3224: 82 59 08                 a2 = u64 [s0 + 0x8]
  3227: 7b 19 18                 u64 [sp + 0x18] = a2
  3230: 49 11 20 01              u64 [sp + 32] = 0x1
  3234: 7b 17 28                 u64 [sp + 0x28] = a0
  3237: 28 06                    jump @217
      :                          @216
  3239: 49 11 20                 u64 [sp + 32] = 0
  3242: 01                       fallthrough
      :                          @217
  3243: 64 17                    a0 = sp
  3245: 95 1a 18                 a3 = sp + 0x18
  3248: 64 69                    a2 = s1
  3250: 50 10 3e 32              ra = 62, jump @225
      :                          @218 [@dyn 31]
  3254: 82 18                    a1 = u64 [sp]
  3256: 82 17 08                 a0 = u64 [sp + 0x8]
  3259: 51 08 14                 jump @222 if a1 == 0
      :                          @219
  3262: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  3272: aa 87 0d                 jump @223 if a0 == a1
      :                          @220
  3275: 52 07 18                 jump @224 if a0 != 0
      :                          @221
  3278: 00                       trap
      :                          @222
  3279: 7b 57 08                 u64 [s0 + 0x8] = a0
  3282: 7b 56                    u64 [s0] = s1
  3284: 01                       fallthrough
      :                          @223
  3285: 82 10 40                 ra = u64 [sp + 0x40]
  3288: 82 15 38                 s0 = u64 [sp + 0x38]
  3291: 82 16 30                 s1 = u64 [sp + 0x30]
  3294: 95 11 48                 sp = sp + 0x48
  3297: 32 00                    ret
      :                          @224
  3299: 00                       trap
      :                          @225
  3300: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  3303: 7b 10 30                 u64 [sp + 0x30] = ra
  3306: 7b 15 28                 u64 [sp + 0x28] = s0
  3309: 7b 16 20                 u64 [sp + 0x20] = s1
  3312: 64 95                    s0 = a2
  3314: 64 72                    t0 = a0
  3316: 51 08 79                 jump @235 if a1 == 0
      :                          @226
  3319: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3322: 51 07 7c                 jump @236 if a0 == 0
      :                          @227
  3325: 82 a9 10                 a2 = u64 [a3 + 0x10]
  3328: 51 09 aa 00              jump @243 if a2 == 0
      :                          @228
  3332: 82 a8                    a1 = u64 [a3]
  3334: 33 06 50 20 03           s1 = 0x32050
  3339: 33 03 00 00 01           t1 = 0x10000
  3344: c8 36 06                 s1 = s1 + t1
  3347: 01                       fallthrough
      :                          @229
  3348: 82 6a                    a3 = u64 [s1]
  3350: c8 5a 07                 a0 = a3 + s0
  3353: ac a7 cf 00              jump @249 if a0 <u a3
      :                          @230
  3357: 95 7b 01                 a4 = a0 + 0x1
  3360: 88 bc 01                 a5 = a4 <u 0x1
  3363: d8 b3 0b                 a4 = t1 <u a4
  3366: d4 cb 0b                 a4 = a4 | a5
  3369: 52 0b bf 00              jump @249 if a4 != 0
      :                          @231
  3373: 82 6b                    a4 = u64 [s1]
  3375: ab ab e5                 jump @229 if a4 != a3
      :                          @232
  3378: 7b 67                    u64 [s1] = a0
  3380: 33 0c                    a5 = 0
  3382: 7b 12 18                 u64 [sp + 0x18] = t0
  3385: 33 0a 50 20 03           a3 = 0x32050
  3390: 33 0b 00 00 01           a4 = 0x10000
  3395: 7b 1a                    u64 [sp] = a3
  3397: c8 ba 0a                 a3 = a3 + a4
  3400: c9 7a 07                 a0 = a3 - a0
  3403: 7b 17 10                 u64 [sp + 0x10] = a0
  3406: 7b 18 08                 u64 [sp + 0x8] = a1
  3409: 64 96                    s1 = a2
  3411: 50 10 40 cb 03           ra = 64, jump @319
      :                          @233 [@dyn 32]
  3416: 54 36 00 00 01 98 00     jump @250 if s1 <=u 65536
      :                          @234
  3423: 82 12 18                 t0 = u64 [sp + 0x18]
  3426: 82 18 10                 a1 = u64 [sp + 0x10]
  3429: 33 07                    a0 = 0
  3431: 7b 28 08                 u64 [t0 + 0x8] = a1
  3434: 28 b5 00                 jump @256
      :                          @235
  3437: 49 12 08                 u64 [t0 + 8] = 0
  3440: 33 07 01                 a0 = 0x1
  3443: 28 ac 00                 jump @256
      :                          @236
  3446: 33 09 50 20 03           a2 = 0x32050
  3451: 33 07 00 00 01           a0 = 0x10000
  3456: c8 79 09                 a2 = a2 + a0
  3459: 01                       fallthrough
      :                          @237
  3460: 82 9a                    a3 = u64 [a2]
  3462: c8 5a 08                 a1 = a3 + s0
  3465: ac a8 5f                 jump @249 if a1 <u a3
      :                          @238
  3468: 95 8b 01                 a4 = a1 + 0x1
  3471: 88 bc 01                 a5 = a4 <u 0x1
  3474: d8 b7 0b                 a4 = a0 <u a4
  3477: d4 cb 0b                 a4 = a4 | a5
  3480: 52 0b 50                 jump @249 if a4 != 0
      :                          @239
  3483: 82 9b                    a4 = u64 [a2]
  3485: ab ab e7                 jump @237 if a4 != a3
      :                          @240
  3488: 7b 98                    u64 [a2] = a1
  3490: 33 0c                    a5 = 0
  3492: 01                       fallthrough
      :                          @241
  3493: ab ab df                 jump @237 if a4 != a3
      :                          @242
  3496: 28 31                    jump @248
      :                          @243
  3498: 33 09 50 20 03           a2 = 0x32050
  3503: 33 07 00 00 01           a0 = 0x10000
  3508: c8 79 09                 a2 = a2 + a0
  3511: 01                       fallthrough
      :                          @244
  3512: 82 9a                    a3 = u64 [a2]
  3514: c8 5a 08                 a1 = a3 + s0
  3517: ac a8 2b                 jump @249 if a1 <u a3
      :                          @245
  3520: 95 8b 01                 a4 = a1 + 0x1
  3523: 88 bc 01                 a5 = a4 <u 0x1
  3526: d8 b7 0b                 a4 = a0 <u a4
  3529: d4 cb 0b                 a4 = a4 | a5
  3532: 52 0b 1c                 jump @249 if a4 != 0
      :                          @246
  3535: 82 9b                    a4 = u64 [a2]
  3537: ab ab e7                 jump @244 if a4 != a3
      :                          @247
  3540: 7b 98                    u64 [a2] = a1
  3542: 33 0c                    a5 = 0
  3544: 01                       fallthrough
      :                          @248
  3545: 33 07 50 20 04           a0 = 0x42050
  3550: c9 87 08                 a1 = a0 - a1
  3553: 33 07                    a0 = 0
  3555: 7b 28 08                 u64 [t0 + 0x8] = a1
  3558: 28 39                    jump @256
      :                          @249
  3560: 33 07 01                 a0 = 0x1
  3563: 7b 27 08                 u64 [t0 + 0x8] = a0
  3566: 28 31                    jump @256
      :                          @250
  3568: 64 6c                    a5 = s1
  3570: 82 17                    a0 = u64 [sp]
  3572: 95 77 00 00 01           a0 = a0 + 0x10000
  3577: 82 12 18                 t0 = u64 [sp + 0x18]
  3580: 82 16 08                 s1 = u64 [sp + 0x8]
  3583: 01                       fallthrough
      :                          @251
  3584: 82 78                    a1 = u64 [a0]
  3586: c9 87 09                 a2 = a0 - a1
  3589: ab 69 11                 jump @255 if a2 != s1
      :                          @252
  3592: c9 c8 09                 a2 = a1 - a5
  3595: 01                       fallthrough
      :                          @253
  3596: 82 7a                    a3 = u64 [a0]
  3598: ab 8a f2                 jump @251 if a3 != a1
      :                          @254
  3601: 7b 79                    u64 [a0] = a2
  3603: 33 0b                    a4 = 0
  3605: 01                       fallthrough
      :                          @255
  3606: 82 18 10                 a1 = u64 [sp + 0x10]
  3609: 33 07                    a0 = 0
  3611: 7b 28 08                 u64 [t0 + 0x8] = a1
  3614: 01                       fallthrough
      :                          @256
  3615: 7b 25 10                 u64 [t0 + 0x10] = s0
  3618: 7b 27                    u64 [t0] = a0
  3620: 82 10 30                 ra = u64 [sp + 0x30]
  3623: 82 15 28                 s0 = u64 [sp + 0x28]
  3626: 82 16 20                 s1 = u64 [sp + 0x20]
  3629: 95 11 38                 sp = sp + 0x38
  3632: 32 00                    ret
      :                          @257
  3634: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  3637: 7b 10 40                 u64 [sp + 0x40] = ra
  3640: 7b 15 38                 u64 [sp + 0x38] = s0
  3643: 7b 16 30                 u64 [sp + 0x30] = s1
  3646: 95 88 01                 a1 = a1 + 0x1
  3649: 51 08 53                 jump @265 if a1 == 0
      :                          @258
  3652: 64 75                    s0 = a0
  3654: 82 77                    a0 = u64 [a0]
  3656: 97 79 01                 a2 = a0 << 0x1
  3659: 33 0a 08                 a3 = 0x8
  3662: e4 a8 08                 a1 = maxu(a1, a3)
  3665: e4 89 06                 s1 = maxu(a2, a1)
  3668: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  3671: 98 88 3f                 a1 = a1 >> 0x3f
  3674: 51 07 12                 jump @260 if a0 == 0
      :                          @259
  3677: 82 59 08                 a2 = u64 [s0 + 0x8]
  3680: 7b 19 18                 u64 [sp + 0x18] = a2
  3683: 49 11 20 01              u64 [sp + 32] = 0x1
  3687: 7b 17 28                 u64 [sp + 0x28] = a0
  3690: 28 06                    jump @261
      :                          @260
  3692: 49 11 20                 u64 [sp + 32] = 0
  3695: 01                       fallthrough
      :                          @261
  3696: 64 17                    a0 = sp
  3698: 95 1a 18                 a3 = sp + 0x18
  3701: 64 69                    a2 = s1
  3703: 50 10 42 6d fe           ra = 66, jump @225
      :                          @262 [@dyn 33]
  3708: 82 18                    a1 = u64 [sp]
  3710: 82 17 08                 a0 = u64 [sp + 0x8]
  3713: 51 08 14                 jump @266 if a1 == 0
      :                          @263
  3716: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  3726: aa 87 0d                 jump @267 if a0 == a1
      :                          @264
  3729: 52 07 18                 jump @268 if a0 != 0
      :                          @265
  3732: 00                       trap
      :                          @266
  3733: 7b 57 08                 u64 [s0 + 0x8] = a0
  3736: 7b 56                    u64 [s0] = s1
  3738: 01                       fallthrough
      :                          @267
  3739: 82 10 40                 ra = u64 [sp + 0x40]
  3742: 82 15 38                 s0 = u64 [sp + 0x38]
  3745: 82 16 30                 s1 = u64 [sp + 0x30]
  3748: 95 11 48                 sp = sp + 0x48
  3751: 32 00                    ret
      :                          @268
  3753: 00                       trap
      :                          @269
  3754: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  3757: 7b 10 30                 u64 [sp + 0x30] = ra
  3760: 7b 15 28                 u64 [sp + 0x28] = s0
  3763: 7b 16 20                 u64 [sp + 0x20] = s1
  3766: 64 89                    a2 = a1
  3768: 82 8a 08                 a3 = u64 [a1 + 0x8]
  3771: 64 75                    s0 = a0
  3773: 51 0a 35                 jump @274 if a3 == 0
      :                          @270
  3776: 82 98                    a1 = u64 [a2]
  3778: 33 07                    a0 = 0
  3780: 95 8b 08                 a4 = a1 + 0x8
  3783: 01                       fallthrough
      :                          @271
  3784: 82 bc                    a5 = u64 [a4]
  3786: c8 c7 07                 a0 = a0 + a5
  3789: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  3792: 95 bb 10                 a4 = a4 + 0x10
  3795: 52 0a f5                 jump @271 if a3 != 0
      :                          @272
  3798: 82 9a 18                 a3 = u64 [a2 + 0x18]
  3801: 51 0a 24                 jump @276 if a3 == 0
      :                          @273
  3804: 82 88 08                 a1 = u64 [a1 + 0x8]
  3807: 8e 88                    a1 = a1 >u 0
  3809: 88 7a 10                 a3 = a0 <u 0x10
  3812: 85 aa 01                 a3 = a3 ^ 0x1
  3815: d4 a8 08                 a1 = a1 | a3
  3818: 89 7a                    a3 = a0 <s 0
  3820: e0 a8 08                 a1 = a1 & ~a3
  3823: 52 08 0a                 jump @275 if a1 != 0
      :                          @274
  3826: 33 07                    a0 = 0
  3828: 33 08 01                 a1 = 0x1
  3831: 28 4a                    jump @284
      :                          @275
  3833: 97 77 01                 a0 = a0 << 0x1
  3836: 01                       fallthrough
      :                          @276
  3837: 51 07 40                 jump @283 if a0 == 0
      :                          @277
  3840: 57 07 78                 jump @289 if a0 <s 0
      :                          @278
  3843: 64 52                    t0 = s0
  3845: 33 0b 50 20 03           a4 = 0x32050
  3850: 33 08 00 00 01           a1 = 0x10000
  3855: c8 8b 0b                 a4 = a4 + a1
  3858: 01                       fallthrough
      :                          @279
  3859: 82 bc                    a5 = u64 [a4]
  3861: c8 7c 0a                 a3 = a5 + a0
  3864: ac ca 5e                 jump @287 if a3 <u a5
      :                          @280
  3867: 95 a5 01                 s0 = a3 + 0x1
  3870: 88 56 01                 s1 = s0 <u 0x1
  3873: d8 58 05                 s0 = a1 <u s0
  3876: d4 65 05                 s0 = s0 | s1
  3879: 52 05 4f                 jump @287 if s0 != 0
      :                          @281
  3882: 82 b6                    s1 = u64 [a4]
  3884: ab c6 e7                 jump @279 if s1 != a5
      :                          @282
  3887: 7b ba                    u64 [a4] = a3
  3889: 33 08 50 20 04           a1 = 0x42050
  3894: c9 a8 08                 a1 = a1 - a3
  3897: 64 25                    s0 = t0
  3899: 28 06                    jump @284
      :                          @283
  3901: 33 08 01                 a1 = 0x1
  3904: 01                       fallthrough
      :                          @284
  3905: 7b 17                    u64 [sp] = a0
  3907: 7b 18 08                 u64 [sp + 0x8] = a1
  3910: 49 11 10                 u64 [sp + 16] = 0
  3913: 33 08 40 01 01           a1 = 0x10140
  3918: 64 17                    a0 = sp
  3920: 50 10 44 1a 06           ra = 68, jump @401
      :                          @285 [@dyn 34]
  3925: 52 07 22                 jump @288 if a0 != 0
      :                          @286
  3928: 82 17 10                 a0 = u64 [sp + 0x10]
  3931: 82 18 08                 a1 = u64 [sp + 0x8]
  3934: 82 19                    a2 = u64 [sp]
  3936: 7b 57 10                 u64 [s0 + 0x10] = a0
  3939: 7b 58 08                 u64 [s0 + 0x8] = a1
  3942: 7b 59                    u64 [s0] = a2
  3944: 82 10 30                 ra = u64 [sp + 0x30]
  3947: 82 15 28                 s0 = u64 [sp + 0x28]
  3950: 82 16 20                 s1 = u64 [sp + 0x20]
  3953: 95 11 38                 sp = sp + 0x38
  3956: 32 00                    ret
      :                          @287
  3958: 00                       trap
      :                          @288
  3959: 00                       trap
      :                          @289
  3960: 00                       trap
      :                          @290 [@dyn 35]
  3961: 82 72                    t0 = u64 [a0]
  3963: 33 09 00 00 ff           a2 = 0xffffffffffff0000
  3968: 95 2a ff ff fe           a3 = t0 + 0xfffffffffffeffff
  3973: ac 9a 28                 jump @296 if a3 <u a2
      :                          @291
  3976: 82 77 08                 a0 = u64 [a0 + 0x8]
  3979: 33 09 50 20 03           a2 = 0x32050
  3984: 95 99 00 00 01           a2 = a2 + 0x10000
  3989: 01                       fallthrough
      :                          @292
  3990: 82 9a                    a3 = u64 [a2]
  3992: c9 a9 0b                 a4 = a2 - a3
  3995: ab 7b 12                 jump @296 if a4 != a0
      :                          @293
  3998: c9 2a 0b                 a4 = a3 - t0
  4001: 01                       fallthrough
      :                          @294
  4002: 82 9c                    a5 = u64 [a2]
  4004: ab ac f2                 jump @292 if a5 != a3
      :                          @295
  4007: 7b 9b                    u64 [a2] = a4
  4009: 33 08                    a1 = 0
  4011: 32 00                    ret
      :                          @296
  4013: 32 00                    ret
      :                          @297 [@dyn 36]
  4015: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  4018: 7b 10 18                 u64 [sp + 0x18] = ra
  4021: 7b 15 10                 u64 [sp + 0x10] = s0
  4024: 7b 16 08                 u64 [sp + 0x8] = s1
  4027: 64 75                    s0 = a0
  4029: 82 7a 10                 a3 = u64 [a0 + 0x10]
  4032: 82 77                    a0 = u64 [a0]
  4034: c9 a7 07                 a0 = a0 - a3
  4037: 64 96                    s1 = a2
  4039: ac 97 2a                 jump @300 if a0 <u a2
      :                          @298
  4042: 7b 1a                    u64 [sp] = a3
  4044: 82 57 08                 a0 = u64 [s0 + 0x8]
  4047: c8 a7 07                 a0 = a0 + a3
  4050: 64 69                    a2 = s1
  4052: 50 10 4a 4a 01           ra = 74, jump @319
      :                          @299 [@dyn 37]
  4057: 82 17                    a0 = u64 [sp]
  4059: c8 76 06                 s1 = s1 + a0
  4062: 7b 56 10                 u64 [s0 + 0x10] = s1
  4065: 33 07                    a0 = 0
  4067: 82 10 18                 ra = u64 [sp + 0x18]
  4070: 82 15 10                 s0 = u64 [sp + 0x10]
  4073: 82 16 08                 s1 = u64 [sp + 0x8]
  4076: 95 11 20                 sp = sp + 0x20
  4079: 32 00                    ret
      :                          @300
  4081: 64 57                    a0 = s0
  4083: 7b 18                    u64 [sp] = a1
  4085: 64 a8                    a1 = a3
  4087: 64 69                    a2 = s1
  4089: 50 10 4c 74 fc           ra = 76, jump @213
      :                          @301 [@dyn 38]
  4094: 82 18                    a1 = u64 [sp]
  4096: 82 5a 10                 a3 = u64 [s0 + 0x10]
  4099: 28 c7                    jump @298
      :                          @302 [@dyn 39]
  4101: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  4104: 7b 10 20                 u64 [sp + 0x20] = ra
  4107: 7b 15 18                 u64 [sp + 0x18] = s0
  4110: 7b 16 10                 u64 [sp + 0x10] = s1
  4113: 64 86                    s1 = a1
  4115: 83 88                    i32 a1 = a1 + 0
  4117: 33 09 80 00              a2 = 0x80
  4121: 64 7a                    a3 = a0
  4123: ae 98 2b                 jump @307 if a1 >=u a2
      :                          @303
  4126: 82 a8 10                 a1 = u64 [a3 + 0x10]
  4129: 82 a7                    a0 = u64 [a3]
  4131: ab 78 12                 jump @306 if a1 != a0
      :                          @304
  4134: 64 a7                    a0 = a3
  4136: 64 a5                    s0 = a3
  4138: 50 10 50 08 fe           ra = 80, jump @257
      :                          @305 [@dyn 40]
  4143: 64 5a                    a3 = s0
  4145: 82 58 10                 a1 = u64 [s0 + 0x10]
  4148: 01                       fallthrough
      :                          @306
  4149: 82 a7 08                 a0 = u64 [a3 + 0x8]
  4152: c8 87 07                 a0 = a0 + a1
  4155: 78 76                    u8 [a0] = s1
  4157: 95 88 01                 a1 = a1 + 0x1
  4160: 7b a8 10                 u64 [a3 + 0x10] = a1
  4163: 28 ab 00                 jump @315
      :                          @307
  4166: 8b 67 0b                 i32 a0 = s1 >> 0xb
  4169: 48 11 0c                 u32 [sp + 12] = 0
  4172: 52 07 1c                 jump @309 if a0 != 0
      :                          @308
  4175: 98 67 06                 a0 = s1 >> 0x6
  4178: 86 77 c0 00              a0 = a0 | 0xc0
  4182: 78 17 0c                 u8 [sp + 0xc] = a0
  4185: 84 67 3f                 a0 = s1 & 0x3f
  4188: 86 77 80 00              a0 = a0 | 0x80
  4192: 78 17 0d                 u8 [sp + 0xd] = a0
  4195: 33 06 02                 s1 = 0x2
  4198: 28 63                    jump @312
      :                          @309
  4200: 8b 67 10                 i32 a0 = s1 >> 0x10
  4203: 52 07 29                 jump @311 if a0 != 0
      :                          @310
  4206: 98 67 0c                 a0 = s1 >> 0xc
  4209: 86 77 e0 00              a0 = a0 | 0xe0
  4213: 78 17 0c                 u8 [sp + 0xc] = a0
  4216: 97 67 34                 a0 = s1 << 0x34
  4219: 98 77 3a                 a0 = a0 >> 0x3a
  4222: 95 77 80 00              a0 = a0 + 0x80
  4226: 78 17 0d                 u8 [sp + 0xd] = a0
  4229: 84 67 3f                 a0 = s1 & 0x3f
  4232: 86 77 80 00              a0 = a0 | 0x80
  4236: 78 17 0e                 u8 [sp + 0xe] = a0
  4239: 33 06 03                 s1 = 0x3
  4242: 28 37                    jump @312
      :                          @311
  4244: 97 67 2b                 a0 = s1 << 0x2b
  4247: 98 77 3d                 a0 = a0 >> 0x3d
  4250: 95 77 f0 00              a0 = a0 + 0xf0
  4254: 78 17 0c                 u8 [sp + 0xc] = a0
  4257: 97 67 2e                 a0 = s1 << 0x2e
  4260: 98 77 3a                 a0 = a0 >> 0x3a
  4263: 95 77 80 00              a0 = a0 + 0x80
  4267: 78 17 0d                 u8 [sp + 0xd] = a0
  4270: 97 67 34                 a0 = s1 << 0x34
  4273: 98 77 3a                 a0 = a0 >> 0x3a
  4276: 95 77 80 00              a0 = a0 + 0x80
  4280: 78 17 0e                 u8 [sp + 0xe] = a0
  4283: 84 67 3f                 a0 = s1 & 0x3f
  4286: 86 77 80 00              a0 = a0 | 0x80
  4290: 78 17 0f                 u8 [sp + 0xf] = a0
  4293: 33 06 04                 s1 = 0x4
  4296: 01                       fallthrough
      :                          @312
  4297: 82 a5 10                 s0 = u64 [a3 + 0x10]
  4300: 82 a7                    a0 = u64 [a3]
  4302: c9 57 07                 a0 = a0 - s0
  4305: ac 67 2d                 jump @316 if a0 <u s1
      :                          @313
  4308: 7b 1a                    u64 [sp] = a3
  4310: 82 a7 08                 a0 = u64 [a3 + 0x8]
  4313: c8 57 07                 a0 = a0 + s0
  4316: 95 18 0c                 a1 = sp + 0xc
  4319: 64 69                    a2 = s1
  4321: 50 10 52 3d              ra = 82, jump @319
      :                          @314 [@dyn 41]
  4325: c8 56 06                 s1 = s1 + s0
  4328: 82 17                    a0 = u64 [sp]
  4330: 7b 76 10                 u64 [a0 + 0x10] = s1
  4333: 01                       fallthrough
      :                          @315
  4334: 33 07                    a0 = 0
  4336: 82 10 20                 ra = u64 [sp + 0x20]
  4339: 82 15 18                 s0 = u64 [sp + 0x18]
  4342: 82 16 10                 s1 = u64 [sp + 0x10]
  4345: 95 11 28                 sp = sp + 0x28
  4348: 32 00                    ret
      :                          @316
  4350: 64 a7                    a0 = a3
  4352: 64 58                    a1 = s0
  4354: 64 69                    a2 = s1
  4356: 64 a5                    s0 = a3
  4358: 50 10 54 67 fb           ra = 84, jump @213
      :                          @317 [@dyn 42]
  4363: 64 5a                    a3 = s0
  4365: 82 55 10                 s0 = u64 [s0 + 0x10]
  4368: 28 c4                    jump @313
      :                          @318 [@dyn 43]
  4370: 64 8a                    a3 = a1
  4372: 33 08 40 01 01           a1 = 0x10140
  4377: 64 a9                    a2 = a3
  4379: 28 4f 04                 jump @401
      :                          @319
  4382: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  4385: 7b 10 18                 u64 [sp + 0x18] = ra
  4388: 7b 15 10                 u64 [sp + 0x10] = s0
  4391: 7b 16 08                 u64 [sp + 0x8] = s1
  4394: 53 19 10 64              jump @328 if a2 <u 16
      :                          @320
  4398: 8d 7a                    i32 a3 = -a0
  4400: 84 a2 07                 t0 = a3 & 0x7
  4403: c8 27 0b                 a4 = a0 + t0
  4406: 51 02 15                 jump @323 if t0 == 0
      :                          @321
  4409: 64 8c                    a5 = a1
  4411: 64 75                    s0 = a0
  4413: 01                       fallthrough
      :                          @322
  4414: 7c ca                    a3 = u8 [a5]
  4416: 78 5a                    u8 [s0] = a3
  4418: 95 55 01                 s0 = s0 + 0x1
  4421: 95 cc 01                 a5 = a5 + 0x1
  4424: ac b5 f6                 jump @322 if s0 <u a4
      :                          @323
  4427: c8 28 03                 t1 = a1 + t0
  4430: c9 29 02                 t0 = a2 - t0
  4433: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  4436: 84 38 07                 a1 = t1 & 0x7
  4439: c8 4b 0a                 a3 = a4 + t2
  4442: 51 08 3b                 jump @330 if a1 == 0
      :                          @324
  4445: 58 04 4b                 jump @333 if t2 <=s 0
      :                          @325
  4448: 97 38 03                 a1 = t1 << 0x3
  4451: 84 80 38                 ra = a1 & 0x38
  4454: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  4457: 82 c5                    s0 = u64 [a5]
  4459: 8d 88                    i32 a1 = -a1
  4461: 84 88 38                 a1 = a1 & 0x38
  4464: 95 cc 08                 a5 = a5 + 0x8
  4467: 01                       fallthrough
      :                          @326
  4468: 82 c6                    s1 = u64 [a5]
  4470: d0 05 05                 s0 = s0 >> ra
  4473: cf 86 09                 a2 = s1 << a1
  4476: d4 59 09                 a2 = a2 | s0
  4479: 7b b9                    u64 [a4] = a2
  4481: 95 bb 08                 a4 = a4 + 0x8
  4484: 95 cc 08                 a5 = a5 + 0x8
  4487: 64 65                    s0 = s1
  4489: ac ab eb                 jump @326 if a4 <u a3
      :                          @327
  4492: 28 1c                    jump @333
      :                          @328
  4494: 64 7a                    a3 = a0
  4496: 52 09 21                 jump @334 if a2 != 0
      :                          @329
  4499: 28 2f                    jump @336
      :                          @330
  4501: 58 04 13                 jump @333 if t2 <=s 0
      :                          @331
  4504: 64 38                    a1 = t1
  4506: 01                       fallthrough
      :                          @332
  4507: 82 89                    a2 = u64 [a1]
  4509: 7b b9                    u64 [a4] = a2
  4511: 95 bb 08                 a4 = a4 + 0x8
  4514: 95 88 08                 a1 = a1 + 0x8
  4517: ac ab f6                 jump @332 if a4 <u a3
      :                          @333
  4520: c8 43 08                 a1 = t1 + t2
  4523: 84 29 07                 a2 = t0 & 0x7
  4526: 51 09 14                 jump @336 if a2 == 0
      :                          @334
  4529: c8 a9 09                 a2 = a2 + a3
  4532: 01                       fallthrough
      :                          @335
  4533: 7c 8b                    a4 = u8 [a1]
  4535: 78 ab                    u8 [a3] = a4
  4537: 95 aa 01                 a3 = a3 + 0x1
  4540: 95 88 01                 a1 = a1 + 0x1
  4543: ac 9a f6                 jump @335 if a3 <u a2
      :                          @336
  4546: 82 10 18                 ra = u64 [sp + 0x18]
  4549: 82 15 10                 s0 = u64 [sp + 0x10]
  4552: 82 16 08                 s1 = u64 [sp + 0x8]
  4555: 95 11 20                 sp = sp + 0x20
  4558: 32 00                    ret
      :                          @337 [@dyn 44]
  4560: 82 77                    a0 = u64 [a0]
  4562: 01                       fallthrough
      :                          @338
  4563: 28                       jump @338
      :                          @339
  4564: 95 11 a8                 sp = sp + 0xffffffffffffffa8
  4567: 7b 10 50                 u64 [sp + 0x50] = ra
  4570: 7b 15 48                 u64 [sp + 0x48] = s0
  4573: 7b 16 40                 u64 [sp + 0x40] = s1
  4576: 7b 18                    u64 [sp] = a1
  4578: 98 79 04                 a2 = a0 >> 0x4
  4581: 33 08 27                 a1 = 0x27
  4584: 53 29 71 02 81 00        jump @342 if a2 <u 625
      :                          @340
  4590: 33 08 27                 a1 = 0x27
  4593: 95 1a 3e                 a3 = sp + 0x3e
  4596: 3a 09 08 10 03           a2 = u64 [0x31008]
  4601: 7b 19 10                 u64 [sp + 0x10] = a2
  4604: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
  4610: 33 04 7b 14              t2 = 0x147b
  4614: 33 0b b4 01 01           a4 = 0x101b4
  4619: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
  4625: 01                       fallthrough
      :                          @341
  4626: 64 72                    t0 = a0
  4628: 82 17 10                 a0 = u64 [sp + 0x10]
  4631: d6 72 07                 a0 = t0 mulhu a0
  4634: 98 77 0b                 a0 = a0 >> 0xb
  4637: 82 19 08                 a2 = u64 [sp + 0x8]
  4640: c0 97 0c                 i32 a5 = a0 * a2
  4643: c8 2c 06                 s1 = a5 + t0
  4646: 97 6c 30                 a5 = s1 << 0x30
  4649: 98 cc 32                 a5 = a5 >> 0x32
  4652: ca 4c 0c                 a5 = a5 * t2
  4655: 98 c3 11                 t1 = a5 >> 0x11
  4658: 98 cc 10                 a5 = a5 >> 0x10
  4661: 84 cc fe 07              a5 = a5 & 0x7fe
  4665: 96 39 9c                 a2 = t1 * 0xffffffffffffff9c
  4668: c8 69 09                 a2 = a2 + s1
  4671: 97 99 31                 a2 = a2 << 0x31
  4674: 98 99 30                 a2 = a2 >> 0x30
  4677: c8 bc 0c                 a5 = a5 + a4
  4680: 7c c6                    s1 = u8 [a5]
  4682: 7c cc 01                 a5 = u8 [a5 + 0x1]
  4685: c8 b9 09                 a2 = a2 + a4
  4688: 7c 95 01                 s0 = u8 [a2 + 0x1]
  4691: 7c 99                    a2 = u8 [a2]
  4693: 78 ac ff                 u8 [a3 + 0xffffffffffffffff] = a5
  4696: 78 a6 fe                 u8 [a3 + 0xfffffffffffffffe] = s1
  4699: 78 a5 01                 u8 [a3 + 0x1] = s0
  4702: 78 a9                    u8 [a3] = a2
  4704: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
  4707: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
  4710: ac 20 ac                 jump @341 if ra <u t0
      :                          @342
  4713: 54 17 63 3b              jump @344 if a0 <=u 99
      :                          @343
  4717: 97 79 30                 a2 = a0 << 0x30
  4720: 98 99 32                 a2 = a2 >> 0x32
  4723: 96 99 7b 14              a2 = a2 * 0x147b
  4727: 98 99 11                 a2 = a2 >> 0x11
  4730: 96 9a 9c                 a3 = a2 * 0xffffffffffffff9c
  4733: c8 a7 07                 a0 = a0 + a3
  4736: 97 77 31                 a0 = a0 << 0x31
  4739: 98 77 30                 a0 = a0 >> 0x30
  4742: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  4745: 33 0a b4 01 01           a3 = 0x101b4
  4750: c8 a7 07                 a0 = a0 + a3
  4753: 7c 7a 01                 a3 = u8 [a0 + 0x1]
  4756: 7c 77                    a0 = u8 [a0]
  4758: 95 1b 19                 a4 = sp + 0x19
  4761: c8 8b 0b                 a4 = a4 + a1
  4764: 78 ba 01                 u8 [a4 + 0x1] = a3
  4767: 78 b7                    u8 [a4] = a0
  4769: 64 97                    a0 = a2
  4771: 01                       fallthrough
      :                          @344
  4772: 55 17 0a 14              jump @346 if a0 >=u 10
      :                          @345
  4776: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  4779: 95 19 19                 a2 = sp + 0x19
  4782: c8 89 09                 a2 = a2 + a1
  4785: 83 77 30                 i32 a0 = a0 + 0x30
  4788: 78 97                    u8 [a2] = a0
  4790: 28 21                    jump @347
      :                          @346
  4792: 97 77 01                 a0 = a0 << 0x1
  4795: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  4798: 33 09 b4 01 01           a2 = 0x101b4
  4803: c8 97 07                 a0 = a0 + a2
  4806: 7c 79 01                 a2 = u8 [a0 + 0x1]
  4809: 7c 77                    a0 = u8 [a0]
  4811: 95 1a 19                 a3 = sp + 0x19
  4814: c8 8a 0a                 a3 = a3 + a1
  4817: 78 a9 01                 u8 [a3 + 0x1] = a2
  4820: 78 a7                    u8 [a3] = a0
  4822: 01                       fallthrough
      :                          @347
  4823: 95 1a 19                 a3 = sp + 0x19
  4826: c8 8a 0a                 a3 = a3 + a1
  4829: 9a 8b 27                 a4 = 0x27 - a1
  4832: 33 08 70 01 01           a1 = 0x10170
  4837: 82 17                    a0 = u64 [sp]
  4839: 33 09                    a2 = 0
  4841: 50 10 5a 12              ra = 90, jump @349
      :                          @348 [@dyn 45]
  4845: 82 10 50                 ra = u64 [sp + 0x50]
  4848: 82 15 48                 s0 = u64 [sp + 0x48]
  4851: 82 16 40                 s1 = u64 [sp + 0x40]
  4854: 95 11 58                 sp = sp + 0x58
  4857: 32 00                    ret
      :                          @349
  4859: 95 11 98                 sp = sp + 0xffffffffffffff98
  4862: 7b 10 60                 u64 [sp + 0x60] = ra
  4865: 7b 15 58                 u64 [sp + 0x58] = s0
  4868: 7b 16 50                 u64 [sp + 0x50] = s1
  4871: 80 73 34                 t1 = u32 [a0 + 0x34]
  4874: 7b 1a 20                 u64 [sp + 0x20] = a3
  4877: 64 9c                    a5 = a2
  4879: 84 36 01                 s1 = t1 & 0x1
  4882: 33 02 2b                 t0 = 0x2b
  4885: 33 09 00 00 11           a2 = 0x110000
  4890: 84 3a 04                 a3 = t1 & 0x4
  4893: 7b 1b 28                 u64 [sp + 0x28] = a4
  4896: c8 b6 04                 t2 = s1 + a4
  4899: 7b 1c 30                 u64 [sp + 0x30] = a5
  4902: 52 0a 10                 jump @352 if a3 != 0
      :                          @350
  4905: 49 11 38                 u64 [sp + 56] = 0
  4908: 82 78                    a1 = u64 [a0]
  4910: 94 69 2b                 a2 = 0x2b if s1 != 0
  4913: 52 08 35                 jump @356 if a1 != 0
      :                          @351
  4916: 28 56                    jump @361
      :                          @352
  4918: 7b 18 38                 u64 [sp + 0x38] = a1
  4921: 33 09                    a2 = 0
  4923: 51 0c 1b                 jump @355 if a5 == 0
      :                          @353
  4926: 82 1b 38                 a4 = u64 [sp + 0x38]
  4929: 01                       fallthrough
      :                          @354
  4930: 7d b5                    s0 = i8 [a4]
  4932: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
  4935: 85 5a 01                 a3 = s0 ^ 0x1
  4938: c8 a9 09                 a2 = a2 + a3
  4941: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  4944: 95 bb 01                 a4 = a4 + 0x1
  4947: 52 0c ef                 jump @354 if a5 != 0
      :                          @355
  4950: c8 94 04                 t2 = t2 + a2
  4953: 33 09 00 00 11           a2 = 0x110000
  4958: 82 78                    a1 = u64 [a0]
  4960: db 62 09                 a2 = t0 if s1 != 0
  4963: 51 08 27                 jump @361 if a1 == 0
      :                          @356
  4966: 82 7a 08                 a3 = u64 [a0 + 0x8]
  4969: ae a4 21                 jump @361 if t2 >=u a3
      :                          @357
  4972: 84 38 08                 a1 = t1 & 0x8
  4975: 52 08 50                 jump @364 if a1 != 0
      :                          @358
  4978: 7c 76 38                 s1 = u8 [a0 + 0x38]
  4981: c9 4a 0a                 a3 = a3 - t2
  4984: 7b 19 18                 u64 [sp + 0x18] = a2
  4987: 5a 16 01 9d 00           jump @371 if s1 >s 1
      :                          @359
  4992: 52 06 aa 00              jump @373 if s1 != 0
      :                          @360
  4996: 7b 1a 10                 u64 [sp + 0x10] = a3
  4999: 28 a9 00                 jump @374
      :                          @361
  5002: 82 75 20                 s0 = u64 [a0 + 0x20]
  5005: 82 76 28                 s1 = u64 [a0 + 0x28]
  5008: 64 57                    a0 = s0
  5010: 64 68                    a1 = s1
  5012: 82 1a 38                 a3 = u64 [sp + 0x38]
  5015: 82 1b 30                 a4 = u64 [sp + 0x30]
  5018: 50 10 5c 6c 01           ra = 92, jump @394
      :                          @362 [@dyn 46]
  5023: 33 08 01                 a1 = 0x1
  5026: 52 07 bb 00              jump @379 if a0 != 0
      :                          @363
  5030: 82 6c 18                 a5 = u64 [s1 + 0x18]
  5033: 64 57                    a0 = s0
  5035: 82 18 20                 a1 = u64 [sp + 0x20]
  5038: 82 19 28                 a2 = u64 [sp + 0x28]
  5041: 82 10 60                 ra = u64 [sp + 0x60]
  5044: 82 15 58                 s0 = u64 [sp + 0x58]
  5047: 82 16 50                 s1 = u64 [sp + 0x50]
  5050: 95 11 68                 sp = sp + 0x68
  5053: 32 0c                    jump [a5]
      :                          @364
  5055: 7b 1a 40                 u64 [sp + 0x40] = a3
  5058: 64 45                    s0 = t2
  5060: 81 78 30                 a1 = i32 [a0 + 0x30]
  5063: 7b 18 10                 u64 [sp + 0x10] = a1
  5066: 7c 7a 38                 a3 = u8 [a0 + 0x38]
  5069: 7b 1a 08                 u64 [sp + 0x8] = a3
  5072: 82 7a 20                 a3 = u64 [a0 + 0x20]
  5075: 82 78 28                 a1 = u64 [a0 + 0x28]
  5078: 48 17 30 30              u32 [a0 + 48] = 0x30
  5082: 7b 17                    u64 [sp] = a0
  5084: 46 17 38 01              u8 [a0 + 56] = 0x1
  5088: 7b 1a 48                 u64 [sp + 0x48] = a3
  5091: 64 a7                    a0 = a3
  5093: 64 86                    s1 = a1
  5095: 82 1a 38                 a3 = u64 [sp + 0x38]
  5098: 82 1b 30                 a4 = u64 [sp + 0x30]
  5101: 50 10 5e 19 01           ra = 94, jump @394
      :                          @365 [@dyn 47]
  5106: 52 07 67                 jump @378 if a0 != 0
      :                          @366
  5109: 82 17 40                 a0 = u64 [sp + 0x40]
  5112: c9 57 05                 s0 = a0 - s0
  5115: 95 55 01                 s0 = s0 + 0x1
  5118: 01                       fallthrough
      :                          @367
  5119: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  5122: 51 05 c6 00              jump @389 if s0 == 0
      :                          @368
  5126: 82 69 20                 a2 = u64 [s1 + 0x20]
  5129: 33 08 30                 a1 = 0x30
  5132: 82 17 48                 a0 = u64 [sp + 0x48]
  5135: b4 90 01 60              ra = 96, jump [a2]
      :                          @369 [@dyn 48]
  5139: 51 07 ec                 jump @367 if a0 == 0
      :                          @370
  5142: 28 43                    jump @378
      :                          @371
  5144: 52 16 02 12              jump @373 if s1 != 2
      :                          @372
  5148: 98 a6 01                 s1 = a3 >> 0x1
  5151: 95 a8 01                 a1 = a3 + 0x1
  5154: 98 88 01                 a1 = a1 >> 0x1
  5157: 7b 18 10                 u64 [sp + 0x10] = a1
  5160: 28 08                    jump @374
      :                          @373
  5162: 64 a6                    s1 = a3
  5164: 49 11 10                 u64 [sp + 16] = 0
  5167: 01                       fallthrough
      :                          @374
  5168: 82 78 20                 a1 = u64 [a0 + 0x20]
  5171: 7b 18 48                 u64 [sp + 0x48] = a1
  5174: 82 75 28                 s0 = u64 [a0 + 0x28]
  5177: 81 77 30                 a0 = i32 [a0 + 0x30]
  5180: 7b 17 40                 u64 [sp + 0x40] = a0
  5183: 95 66 01                 s1 = s1 + 0x1
  5186: 01                       fallthrough
      :                          @375
  5187: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  5190: 51 06 27                 jump @380 if s1 == 0
      :                          @376
  5193: 82 59 20                 a2 = u64 [s0 + 0x20]
  5196: 82 17 48                 a0 = u64 [sp + 0x48]
  5199: 82 18 40                 a1 = u64 [sp + 0x40]
  5202: b4 90 01 62              ra = 98, jump [a2]
      :                          @377 [@dyn 49]
  5206: 51 07 ed                 jump @375 if a0 == 0
      :                          @378
  5209: 33 08 01                 a1 = 0x1
  5212: 01                       fallthrough
      :                          @379
  5213: 64 87                    a0 = a1
  5215: 82 10 60                 ra = u64 [sp + 0x60]
  5218: 82 15 58                 s0 = u64 [sp + 0x58]
  5221: 82 16 50                 s1 = u64 [sp + 0x50]
  5224: 95 11 68                 sp = sp + 0x68
  5227: 32 00                    ret
      :                          @380
  5229: 82 16 48                 s1 = u64 [sp + 0x48]
  5232: 64 67                    a0 = s1
  5234: 64 58                    a1 = s0
  5236: 82 19 18                 a2 = u64 [sp + 0x18]
  5239: 82 1a 38                 a3 = u64 [sp + 0x38]
  5242: 82 1b 30                 a4 = u64 [sp + 0x30]
  5245: 50 10 64 89 00           ra = 100, jump @394
      :                          @381 [@dyn 50]
  5250: 33 08 01                 a1 = 0x1
  5253: 52 07 d8                 jump @379 if a0 != 0
      :                          @382
  5256: 82 5a 18                 a3 = u64 [s0 + 0x18]
  5259: 64 67                    a0 = s1
  5261: 82 18 20                 a1 = u64 [sp + 0x20]
  5264: 82 19 28                 a2 = u64 [sp + 0x28]
  5267: b4 a0 01 66              ra = 102, jump [a3]
      :                          @383 [@dyn 51]
  5271: 33 08 01                 a1 = 0x1
  5274: 52 07 c3                 jump @379 if a0 != 0
      :                          @384
  5277: 82 17 10                 a0 = u64 [sp + 0x10]
  5280: 9a 77                    a0 = -a0
  5282: 7b 17 38                 u64 [sp + 0x38] = a0
  5285: 33 06 ff                 s1 = 0xffffffffffffffff
  5288: 01                       fallthrough
      :                          @385
  5289: 82 17 38                 a0 = u64 [sp + 0x38]
  5292: c8 67 07                 a0 = a0 + s1
  5295: 51 17 ff 42              jump @392 if a0 == 4294967295
      :                          @386
  5299: 82 59 20                 a2 = u64 [s0 + 0x20]
  5302: 82 17 48                 a0 = u64 [sp + 0x48]
  5305: 82 18 40                 a1 = u64 [sp + 0x40]
  5308: b4 90 01 68              ra = 104, jump [a2]
      :                          @387 [@dyn 52]
  5312: 95 66 01                 s1 = s1 + 0x1
  5315: 51 07 e6                 jump @385 if a0 == 0
      :                          @388
  5318: 28 37                    jump @393
      :                          @389
  5320: 82 6a 18                 a3 = u64 [s1 + 0x18]
  5323: 82 17 48                 a0 = u64 [sp + 0x48]
  5326: 82 18 20                 a1 = u64 [sp + 0x20]
  5329: 82 19 28                 a2 = u64 [sp + 0x28]
  5332: b4 a0 01 6a              ra = 106, jump [a3]
      :                          @390 [@dyn 53]
  5336: 33 08 01                 a1 = 0x1
  5339: 52 07 82                 jump @379 if a0 != 0
      :                          @391
  5342: 33 08                    a1 = 0
  5344: 82 16                    s1 = u64 [sp]
  5346: 82 17 10                 a0 = u64 [sp + 0x10]
  5349: 7a 67 30                 u32 [s1 + 0x30] = a0
  5352: 82 17 08                 a0 = u64 [sp + 0x8]
  5355: 78 67 38                 u8 [s1 + 0x38] = a0
  5358: 28 6f ff                 jump @379
      :                          @392
  5361: 82 16 10                 s1 = u64 [sp + 0x10]
  5364: 82 17 10                 a0 = u64 [sp + 0x10]
  5367: d8 76 08                 a1 = s1 <u a0
  5370: 28 63 ff                 jump @379
      :                          @393
  5373: 82 17 10                 a0 = u64 [sp + 0x10]
  5376: d8 76 08                 a1 = s1 <u a0
  5379: 28 5a ff                 jump @379
      :                          @394
  5382: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  5385: 7b 10 20                 u64 [sp + 0x20] = ra
  5388: 7b 15 18                 u64 [sp + 0x18] = s0
  5391: 7b 16 10                 u64 [sp + 0x10] = s1
  5394: 83 9c                    i32 a5 = a2 + 0
  5396: 33 02 00 00 11           t0 = 0x110000
  5401: 64 a6                    s1 = a3
  5403: 64 85                    s0 = a1
  5405: 64 7a                    a3 = a0
  5407: aa 2c 20                 jump @397 if a5 == t0
      :                          @395
  5410: 82 5c 20                 a5 = u64 [s0 + 0x20]
  5413: 64 a7                    a0 = a3
  5415: 64 98                    a1 = a2
  5417: 7b 1b 08                 u64 [sp + 0x8] = a4
  5420: 7b 1a                    u64 [sp] = a3
  5422: b4 c0 01 6c              ra = 108, jump [a5]
      :                          @396 [@dyn 54]
  5426: 82 1a                    a3 = u64 [sp]
  5428: 82 1b 08                 a4 = u64 [sp + 0x8]
  5431: 64 78                    a1 = a0
  5433: 33 07 01                 a0 = 0x1
  5436: 52 08 20                 jump @400 if a1 != 0
      :                          @397
  5439: 51 06 1a                 jump @399 if s1 == 0
      :                          @398
  5442: 82 5c 18                 a5 = u64 [s0 + 0x18]
  5445: 64 a7                    a0 = a3
  5447: 64 68                    a1 = s1
  5449: 64 b9                    a2 = a4
  5451: 82 10 20                 ra = u64 [sp + 0x20]
  5454: 82 15 18                 s0 = u64 [sp + 0x18]
  5457: 82 16 10                 s1 = u64 [sp + 0x10]
  5460: 95 11 28                 sp = sp + 0x28
  5463: 32 0c                    jump [a5]
      :                          @399
  5465: 33 07                    a0 = 0
  5467: 01                       fallthrough
      :                          @400
  5468: 82 10 20                 ra = u64 [sp + 0x20]
  5471: 82 15 18                 s0 = u64 [sp + 0x18]
  5474: 82 16 10                 s1 = u64 [sp + 0x10]
  5477: 95 11 28                 sp = sp + 0x28
  5480: 32 00                    ret
      :                          @401
  5482: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  5486: 7b 10 80 00              u64 [sp + 0x80] = ra
  5490: 7b 15 78                 u64 [sp + 0x78] = s0
  5493: 7b 16 70                 u64 [sp + 0x70] = s1
  5496: 49 11 60 20              u64 [sp + 96] = 0x20
  5500: 33 0a 03                 a3 = 0x3
  5503: 78 1a 68                 u8 [sp + 0x68] = a3
  5506: 82 96 20                 s1 = u64 [a2 + 0x20]
  5509: 49 11 30                 u64 [sp + 48] = 0
  5512: 49 11 40                 u64 [sp + 64] = 0
  5515: 7b 17 50                 u64 [sp + 0x50] = a0
  5518: 7b 18 58                 u64 [sp + 0x58] = a1
  5521: 51 06 07 01              jump @423 if s1 == 0
      :                          @402
  5525: 82 97 28                 a0 = u64 [a2 + 0x28]
  5528: 51 07 74 01              jump @433 if a0 == 0
      :                          @403
  5532: 49 11 28                 u64 [sp + 40] = 0
  5535: 82 95                    s0 = u64 [a2]
  5537: 7b 19 08                 u64 [sp + 0x8] = a2
  5540: 82 98 10                 a1 = u64 [a2 + 0x10]
  5543: 7b 18 18                 u64 [sp + 0x18] = a1
  5546: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  5549: 97 88 03                 a1 = a1 << 0x3
  5552: 98 88 03                 a1 = a1 >> 0x3
  5555: 95 88 01                 a1 = a1 + 0x1
  5558: 7b 18                    u64 [sp] = a1
  5560: 95 55 08                 s0 = s0 + 0x8
  5563: 96 78 38                 a1 = a0 * 0x38
  5566: 95 66 18                 s1 = s1 + 0x18
  5569: 33 07 58                 a0 = 0x58
  5572: 7b 17 10                 u64 [sp + 0x10] = a0
  5575: 01                       fallthrough
      :                          @404
  5576: 7b 18 20                 u64 [sp + 0x20] = a1
  5579: 82 59                    a2 = u64 [s0]
  5581: 51 09 17                 jump @407 if a2 == 0
      :                          @405
  5584: 82 1a 58                 a3 = u64 [sp + 0x58]
  5587: 82 17 50                 a0 = u64 [sp + 0x50]
  5590: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  5593: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5596: b4 a0 01 6e              ra = 110, jump [a3]
      :                          @406 [@dyn 55]
  5600: 52 07 51 01              jump @436 if a0 != 0
      :                          @407
  5604: 81 67 10                 a0 = i32 [s1 + 0x10]
  5607: 7a 17 60                 u32 [sp + 0x60] = a0
  5610: 7c 67 18                 a0 = u8 [s1 + 0x18]
  5613: 78 17 68                 u8 [sp + 0x68] = a0
  5616: 81 67 14                 a0 = i32 [s1 + 0x14]
  5619: 7a 17 64                 u32 [sp + 0x64] = a0
  5622: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  5625: 82 67                    a0 = u64 [s1]
  5627: 51 08 26                 jump @412 if a1 == 0
      :                          @408
  5630: 52 18 01 16              jump @410 if a1 != 1
      :                          @409
  5634: 97 77 04                 a0 = a0 << 0x4
  5637: 82 18 18                 a1 = u64 [sp + 0x18]
  5640: c8 87 07                 a0 = a0 + a1
  5643: 82 78 08                 a1 = u64 [a0 + 0x8]
  5646: 82 19 10                 a2 = u64 [sp + 0x10]
  5649: aa 98 07                 jump @411 if a1 == a2
      :                          @410
  5652: 33 08                    a1 = 0
  5654: 28 0f                    jump @413
      :                          @411
  5656: 82 77                    a0 = u64 [a0]
  5658: 82 77                    a0 = u64 [a0]
  5660: 33 08 01                 a1 = 0x1
  5663: 28 06                    jump @413
      :                          @412
  5665: 33 08 01                 a1 = 0x1
  5668: 01                       fallthrough
      :                          @413
  5669: 7b 18 30                 u64 [sp + 0x30] = a1
  5672: 7b 17 38                 u64 [sp + 0x38] = a0
  5675: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  5678: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  5681: 51 08 26                 jump @418 if a1 == 0
      :                          @414
  5684: 52 18 01 16              jump @416 if a1 != 1
      :                          @415
  5688: 97 77 04                 a0 = a0 << 0x4
  5691: 82 18 18                 a1 = u64 [sp + 0x18]
  5694: c8 87 07                 a0 = a0 + a1
  5697: 82 78 08                 a1 = u64 [a0 + 0x8]
  5700: 82 19 10                 a2 = u64 [sp + 0x10]
  5703: aa 98 07                 jump @417 if a1 == a2
      :                          @416
  5706: 33 08                    a1 = 0
  5708: 28 0f                    jump @419
      :                          @417
  5710: 82 77                    a0 = u64 [a0]
  5712: 82 77                    a0 = u64 [a0]
  5714: 33 08 01                 a1 = 0x1
  5717: 28 06                    jump @419
      :                          @418
  5719: 33 08 01                 a1 = 0x1
  5722: 01                       fallthrough
      :                          @419
  5723: 7b 18 40                 u64 [sp + 0x40] = a1
  5726: 7b 17 48                 u64 [sp + 0x48] = a0
  5729: 82 67 08                 a0 = u64 [s1 + 0x8]
  5732: 97 77 04                 a0 = a0 << 0x4
  5735: 82 18 18                 a1 = u64 [sp + 0x18]
  5738: c8 78 08                 a1 = a1 + a0
  5741: 82 87                    a0 = u64 [a1]
  5743: 82 89 08                 a2 = u64 [a1 + 0x8]
  5746: 95 18 30                 a1 = sp + 0x30
  5749: b4 90 01 70              ra = 112, jump [a2]
      :                          @420 [@dyn 56]
  5753: 52 07 b8 00              jump @436 if a0 != 0
      :                          @421
  5757: 95 55 10                 s0 = s0 + 0x10
  5760: 82 18 20                 a1 = u64 [sp + 0x20]
  5763: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  5766: 95 66 38                 s1 = s1 + 0x38
  5769: 82 17 28                 a0 = u64 [sp + 0x28]
  5772: 95 77 01                 a0 = a0 + 0x1
  5775: 7b 17 28                 u64 [sp + 0x28] = a0
  5778: 52 08 36 ff              jump @404 if a1 != 0
      :                          @422
  5782: 28 69                    jump @431
      :                          @423
  5784: 82 97 18                 a0 = u64 [a2 + 0x18]
  5787: 51 07 71                 jump @433 if a0 == 0
      :                          @424
  5790: 82 95 10                 s0 = u64 [a2 + 0x10]
  5793: 33 0a                    a3 = 0
  5795: 97 78 04                 a1 = a0 << 0x4
  5798: c8 58 08                 a1 = a1 + s0
  5801: 7b 18 20                 u64 [sp + 0x20] = a1
  5804: 7b 19 08                 u64 [sp + 0x8] = a2
  5807: 82 96                    s1 = u64 [a2]
  5809: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  5812: 97 77 04                 a0 = a0 << 0x4
  5815: 98 77 04                 a0 = a0 >> 0x4
  5818: 95 77 01                 a0 = a0 + 0x1
  5821: 7b 17                    u64 [sp] = a0
  5823: 95 66 08                 s1 = s1 + 0x8
  5826: 01                       fallthrough
      :                          @425
  5827: 7b 1a 28                 u64 [sp + 0x28] = a3
  5830: 82 69                    a2 = u64 [s1]
  5832: 51 09 16                 jump @428 if a2 == 0
      :                          @426
  5835: 82 1a 58                 a3 = u64 [sp + 0x58]
  5838: 82 17 50                 a0 = u64 [sp + 0x50]
  5841: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  5844: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5847: b4 a0 01 72              ra = 114, jump [a3]
      :                          @427 [@dyn 57]
  5851: 52 07 56                 jump @436 if a0 != 0
      :                          @428
  5854: 82 57                    a0 = u64 [s0]
  5856: 82 59 08                 a2 = u64 [s0 + 0x8]
  5859: 95 18 30                 a1 = sp + 0x30
  5862: b4 90 01 74              ra = 116, jump [a2]
      :                          @429 [@dyn 58]
  5866: 52 07 47                 jump @436 if a0 != 0
      :                          @430
  5869: 95 66 10                 s1 = s1 + 0x10
  5872: 95 55 10                 s0 = s0 + 0x10
  5875: 82 1a 28                 a3 = u64 [sp + 0x28]
  5878: 95 aa 01                 a3 = a3 + 0x1
  5881: 82 17 20                 a0 = u64 [sp + 0x20]
  5884: ab 75 c7                 jump @425 if s0 != a0
      :                          @431
  5887: 82 19 08                 a2 = u64 [sp + 0x8]
  5890: 82 1a                    a3 = u64 [sp]
  5892: 82 97 08                 a0 = u64 [a2 + 0x8]
  5895: ac 7a 0d                 jump @434 if a3 <u a0
      :                          @432
  5898: 28 2c                    jump @437
      :                          @433
  5900: 33 0a                    a3 = 0
  5902: 82 97 08                 a0 = u64 [a2 + 0x8]
  5905: 54 07 25                 jump @437 if a0 <=u 0
      :                          @434
  5908: 82 97                    a0 = u64 [a2]
  5910: 97 a8 04                 a1 = a3 << 0x4
  5913: c8 87 09                 a2 = a0 + a1
  5916: 82 1a 58                 a3 = u64 [sp + 0x58]
  5919: 82 17 50                 a0 = u64 [sp + 0x50]
  5922: 82 98                    a1 = u64 [a2]
  5924: 82 99 08                 a2 = u64 [a2 + 0x8]
  5927: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5930: b4 a0 01 76              ra = 118, jump [a3]
      :                          @435 [@dyn 59]
  5934: 51 07 08                 jump @437 if a0 == 0
      :                          @436
  5937: 33 07 01                 a0 = 0x1
  5940: 28 05                    jump @438
      :                          @437
  5942: 33 07                    a0 = 0
  5944: 01                       fallthrough
      :                          @438
  5945: 82 10 80 00              ra = u64 [sp + 0x80]
  5949: 82 15 78                 s0 = u64 [sp + 0x78]
  5952: 82 16 70                 s1 = u64 [sp + 0x70]
  5955: 95 11 88 00              sp = sp + 0x88
  5959: 32 00                    ret
      :                          @439 [@dyn 60]
  5961: 32 00                    ret
      :                          @440 [@dyn 61]
  5963: 95 11 80                 sp = sp + 0xffffffffffffff80
  5966: 7b 10 78                 u64 [sp + 0x78] = ra
  5969: 7b 15 70                 u64 [sp + 0x70] = s0
  5972: 7b 16 68                 u64 [sp + 0x68] = s1
  5975: 64 92                    t0 = a2
  5977: 33 00                    ra = 0
  5979: 33 0b                    a4 = 0
  5981: 33 05                    s0 = 0
  5983: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
  5993: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
  5999: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
  6009: 82 79 10                 a2 = u64 [a0 + 0x10]
  6012: 7b 19 48                 u64 [sp + 0x48] = a2
  6015: 82 79                    a2 = u64 [a0]
  6017: 7b 19 38                 u64 [sp + 0x38] = a2
  6020: 82 77 08                 a0 = u64 [a0 + 0x8]
  6023: 7b 17 30                 u64 [sp + 0x30] = a0
  6026: 33 07 a8 01 01           a0 = 0x101a8
  6031: 7b 17 08                 u64 [sp + 0x8] = a0
  6034: 3a 07 10 10 03           a0 = u64 [0x31010]
  6039: 7b 17 60                 u64 [sp + 0x60] = a0
  6042: 7b 18 58                 u64 [sp + 0x58] = a1
  6045: 95 88 08                 a1 = a1 + 0x8
  6048: 7b 18                    u64 [sp] = a1
  6050: 33 0c 0a                 a5 = 0xa
  6053: 7b 12 20                 u64 [sp + 0x20] = t0
  6056: 7b 13 18                 u64 [sp + 0x18] = t1
  6059: 7b 14 10                 u64 [sp + 0x10] = t2
  6062: 28 3a                    jump @444
      :                          @441
  6064: 64 06                    s1 = ra
  6066: c8 89 07                 a0 = a2 + a1
  6069: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
  6072: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  6075: 88 77 01                 a0 = a0 <u 0x1
  6078: 01                       fallthrough
      :                          @442
  6079: 82 1a 48                 a3 = u64 [sp + 0x48]
  6082: 78 a7                    u8 [a3] = a0
  6084: 82 17 30                 a0 = u64 [sp + 0x30]
  6087: 82 7a 18                 a3 = u64 [a0 + 0x18]
  6090: 82 17 38                 a0 = u64 [sp + 0x38]
  6093: b4 a0 01 7c              ra = 124, jump [a3]
      :                          @443 [@dyn 62]
  6097: 64 5b                    a4 = s0
  6099: 82 12 20                 t0 = u64 [sp + 0x20]
  6102: 82 13 18                 t1 = u64 [sp + 0x18]
  6105: 82 14 10                 t2 = u64 [sp + 0x10]
  6108: 64 60                    ra = s1
  6110: 33 0c 0a                 a5 = 0xa
  6113: 82 15 40                 s0 = u64 [sp + 0x40]
  6116: 52 07 63 01              jump @485 if a0 != 0
      :                          @444
  6120: 84 57 ff 00              a0 = s0 & 0xff
  6124: 52 07 57 01              jump @484 if a0 != 0
      :                          @445
  6128: 7b 1b 50                 u64 [sp + 0x50] = a4
  6131: ae 02 0a                 jump @448 if t0 >=u ra
      :                          @446
  6134: 28 ef 00                 jump @475
      :                          @447
  6137: ac 02 ec 00              jump @475 if t0 <u ra
      :                          @448
  6141: c9 02 08                 a1 = t0 - ra
  6144: 82 16 58                 s1 = u64 [sp + 0x58]
  6147: c8 06 06                 s1 = s1 + ra
  6150: 55 18 10 1d              jump @454 if a1 >=u 16
      :                          @449
  6154: aa 02 d8 00              jump @474 if t0 == ra
      :                          @450
  6158: 33 0a                    a3 = 0
  6160: 01                       fallthrough
      :                          @451
  6161: c8 a6 07                 a0 = s1 + a3
  6164: 7c 77                    a0 = u8 [a0]
  6166: aa c7 a5 00              jump @469 if a0 == a5
      :                          @452
  6170: 95 aa 01                 a3 = a3 + 0x1
  6173: ab a8 f4                 jump @451 if a1 != a3
      :                          @453
  6176: 28 c2 00                 jump @474
      :                          @454
  6179: 95 69 07                 a2 = s1 + 0x7
  6182: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
  6185: c9 6a 07                 a0 = a3 - s1
  6188: d3 6a 0a                 a3 = a3 ^ s1
  6191: 88 aa 01                 a3 = a3 <u 0x1
  6194: 88 7b 01                 a4 = a0 <u 0x1
  6197: d4 ba 0a                 a3 = a3 | a4
  6200: 51 0a 45                 jump @460 if a3 == 0
      :                          @455
  6203: 33 07                    a0 = 0
  6205: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  6208: 82 1b                    a4 = u64 [sp]
  6210: c8 0b 0b                 a4 = a4 + ra
  6213: 28 08                    jump @457
      :                          @456
  6215: 82 1b                    a4 = u64 [sp]
  6217: c8 0b 0b                 a4 = a4 + ra
  6220: 01                       fallthrough
      :                          @457
  6221: c8 76 0c                 a5 = s1 + a0
  6224: 82 cc                    a5 = u64 [a5]
  6226: c8 7b 09                 a2 = a4 + a0
  6229: 82 99                    a2 = u64 [a2]
  6231: d3 4c 05                 s0 = a5 ^ t2
  6234: c8 35 05                 s0 = s0 + t1
  6237: e0 c5 0c                 a5 = s0 & ~a5
  6240: d3 49 05                 s0 = a2 ^ t2
  6243: c8 35 05                 s0 = s0 + t1
  6246: e0 95 09                 a2 = s0 & ~a2
  6249: d4 c9 09                 a2 = a2 | a5
  6252: 82 1c 60                 a5 = u64 [sp + 0x60]
  6255: d2 c9 09                 a2 = a2 & a5
  6258: 52 09 1f                 jump @463 if a2 != 0
      :                          @458
  6261: 95 77 10                 a0 = a0 + 0x10
  6264: ae 7a d5                 jump @457 if a3 >=u a0
      :                          @459
  6267: 28 16                    jump @463
      :                          @460
  6269: c8 a6 0b                 a4 = s1 + a3
  6272: 7c bb                    a4 = u8 [a4]
  6274: aa cb 51                 jump @472 if a4 == a5
      :                          @461
  6277: 95 aa 01                 a3 = a3 + 0x1
  6280: ab a7 f5                 jump @460 if a0 != a3
      :                          @462
  6283: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  6286: ae 7a b9                 jump @456 if a3 >=u a0
      :                          @463
  6289: aa 87 9a 00              jump @481 if a0 == a1
      :                          @464
  6293: 33 0a                    a3 = 0
  6295: c8 76 06                 s1 = s1 + a0
  6298: c9 72 08                 a1 = t0 - a0
  6301: c9 08 08                 a1 = a1 - ra
  6304: 33 0c 0a                 a5 = 0xa
  6307: 82 1b 50                 a4 = u64 [sp + 0x50]
  6310: 01                       fallthrough
      :                          @465
  6311: c8 a6 09                 a2 = s1 + a3
  6314: 7c 99                    a2 = u8 [a2]
  6316: aa c9 0b                 jump @468 if a2 == a5
      :                          @466
  6319: 95 aa 01                 a3 = a3 + 0x1
  6322: ab a8 f5                 jump @465 if a1 != a3
      :                          @467
  6325: 28 2d                    jump @474
      :                          @468
  6327: c8 7a 0a                 a3 = a3 + a0
  6330: 01                       fallthrough
      :                          @469
  6331: c8 0a 0a                 a3 = a3 + ra
  6334: 95 a0 01                 ra = a3 + 0x1
  6337: ae 2a 38 ff              jump @447 if a3 >=u t0
      :                          @470
  6341: 82 17 58                 a0 = u64 [sp + 0x58]
  6344: c8 7a 0a                 a3 = a3 + a0
  6347: 7c a7                    a0 = u8 [a3]
  6349: ab c7 2c ff              jump @447 if a0 != a5
      :                          @471
  6353: 28 61                    jump @482
      :                          @472
  6355: 82 1b 50                 a4 = u64 [sp + 0x50]
  6358: c8 0a 0a                 a3 = a3 + ra
  6361: 95 a0 01                 ra = a3 + 0x1
  6364: ac 2a e9                 jump @470 if a3 <u t0
      :                          @473
  6367: 28 1a ff                 jump @447
      :                          @474
  6370: 64 20                    ra = t0
  6372: 01                       fallthrough
      :                          @475
  6373: 49 11 40 01              u64 [sp + 64] = 0x1
  6377: 64 b5                    s0 = a4
  6379: 64 26                    s1 = t0
  6381: aa 2b 56                 jump @484 if a4 == t0
      :                          @476
  6384: 82 17 48                 a0 = u64 [sp + 0x48]
  6387: 7c 77                    a0 = u8 [a0]
  6389: 51 07 22                 jump @479 if a0 == 0
      :                          @477
  6392: 82 17 30                 a0 = u64 [sp + 0x30]
  6395: 82 7a 18                 a3 = u64 [a0 + 0x18]
  6398: 33 09 04                 a2 = 0x4
  6401: 82 17 38                 a0 = u64 [sp + 0x38]
  6404: 82 18 08                 a1 = u64 [sp + 0x8]
  6407: 7b 10 28                 u64 [sp + 0x28] = ra
  6410: b4 a0 01 7e              ra = 126, jump [a3]
      :                          @478 [@dyn 63]
  6414: 82 1b 50                 a4 = u64 [sp + 0x50]
  6417: 82 10 28                 ra = u64 [sp + 0x28]
  6420: 52 07 33                 jump @485 if a0 != 0
      :                          @479
  6423: c9 b6 09                 a2 = s1 - a4
  6426: 82 18 58                 a1 = u64 [sp + 0x58]
  6429: c8 b8 08                 a1 = a1 + a4
  6432: ab b6 90 fe              jump @441 if s1 != a4
      :                          @480
  6436: 64 06                    s1 = ra
  6438: 33 07                    a0 = 0
  6440: 28 97 fe                 jump @442
      :                          @481
  6443: 64 20                    ra = t0
  6445: 82 1b 50                 a4 = u64 [sp + 0x50]
  6448: 28 b5                    jump @475
      :                          @482
  6450: 49 11 40                 u64 [sp + 64] = 0
  6453: 64 05                    s0 = ra
  6455: 64 06                    s1 = ra
  6457: 82 17 48                 a0 = u64 [sp + 0x48]
  6460: 7c 77                    a0 = u8 [a0]
  6462: 52 07 ba                 jump @477 if a0 != 0
      :                          @483
  6465: 28 d6                    jump @479
      :                          @484
  6467: 33 07                    a0 = 0
  6469: 28 06                    jump @486
      :                          @485
  6471: 33 07 01                 a0 = 0x1
  6474: 01                       fallthrough
      :                          @486
  6475: 82 10 78                 ra = u64 [sp + 0x78]
  6478: 82 15 70                 s0 = u64 [sp + 0x70]
  6481: 82 16 68                 s1 = u64 [sp + 0x68]
  6484: 95 11 80 00              sp = sp + 0x80
  6488: 32 00                    ret
      :                          @487 [@dyn 64]
  6490: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  6493: 7b 10 20                 u64 [sp + 0x20] = ra
  6496: 7b 15 18                 u64 [sp + 0x18] = s0
  6499: 7b 16 10                 u64 [sp + 0x10] = s1
  6502: 82 75 10                 s0 = u64 [a0 + 0x10]
  6505: 7c 59                    a2 = u8 [s0]
  6507: 82 7b                    a4 = u64 [a0]
  6509: 82 76 08                 s1 = u64 [a0 + 0x8]
  6512: 51 09 33                 jump @491 if a2 == 0
      :                          @488
  6515: 82 6a 18                 a3 = u64 [s1 + 0x18]
  6518: 7b 18 08                 u64 [sp + 0x8] = a1
  6521: 33 08 a8 01 01           a1 = 0x101a8
  6526: 33 09 04                 a2 = 0x4
  6529: 64 b7                    a0 = a4
  6531: 7b 1b                    u64 [sp] = a4
  6533: b4 a0 02 82 00           ra = 130, jump [a3]
      :                          @489 [@dyn 65]
  6538: 82 18 08                 a1 = u64 [sp + 0x8]
  6541: 82 1b                    a4 = u64 [sp]
  6543: 51 07 14                 jump @491 if a0 == 0
      :                          @490
  6546: 33 07 01                 a0 = 0x1
  6549: 82 10 20                 ra = u64 [sp + 0x20]
  6552: 82 15 18                 s0 = u64 [sp + 0x18]
  6555: 82 16 10                 s1 = u64 [sp + 0x10]
  6558: 95 11 28                 sp = sp + 0x28
  6561: 32 00                    ret
      :                          @491
  6563: 83 87                    i32 a0 = a1 + 0
  6565: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  6568: 88 77 01                 a0 = a0 <u 0x1
  6571: 78 57                    u8 [s0] = a0
  6573: 82 6c 20                 a5 = u64 [s1 + 0x20]
  6576: 64 b7                    a0 = a4
  6578: 82 10 20                 ra = u64 [sp + 0x20]
  6581: 82 15 18                 s0 = u64 [sp + 0x18]
  6584: 82 16 10                 s1 = u64 [sp + 0x10]
  6587: 95 11 28                 sp = sp + 0x28
  6590: 32 0c                    jump [a5]
      :                          @492 [@dyn 66]
  6592: 64 8a                    a3 = a1
  6594: 33 08 78 01 01           a1 = 0x10178
  6599: 64 a9                    a2 = a3
  6601: 28 a1 fb                 jump @401
      :                          @493
  6604: 95 11 70 ff              sp = sp + 0xffffffffffffff70
  6608: 7b 10 88 00              u64 [sp + 0x88] = ra
  6612: 7b 15 80 00              u64 [sp + 0x80] = s0
  6616: 7b 16 78                 u64 [sp + 0x78] = s1
  6619: 64 75                    s0 = a0
  6621: 7c 77 08                 a0 = u8 [a0 + 0x8]
  6624: 64 8b                    a4 = a1
  6626: 33 08 01                 a1 = 0x1
  6629: 33 06 01                 s1 = 0x1
  6632: 51 07 1d                 jump @495 if a0 == 0
      :                          @494
  6635: 78 56 08                 u8 [s0 + 0x8] = s1
  6638: 46 15 09 01              u8 [s0 + 9] = 0x1
  6642: 64 57                    a0 = s0
  6644: 82 10 88 00              ra = u64 [sp + 0x88]
  6648: 82 15 80 00              s0 = u64 [sp + 0x80]
  6652: 82 16 78                 s1 = u64 [sp + 0x78]
  6655: 95 11 90 00              sp = sp + 0x90
  6659: 32 00                    ret
      :                          @495
  6661: 64 9a                    a3 = a2
  6663: 82 5c                    a5 = u64 [s0]
  6665: 80 c7 34                 a0 = u32 [a5 + 0x34]
  6668: 7c 58 09                 a1 = u8 [s0 + 0x9]
  6671: 84 79 04                 a2 = a0 & 0x4
  6674: 52 09 45                 jump @501 if a2 != 0
      :                          @496
  6677: 51 08 32                 jump @499 if a1 == 0
      :                          @497
  6680: 82 c8 28                 a1 = u64 [a5 + 0x28]
  6683: 82 c7 20                 a0 = u64 [a5 + 0x20]
  6686: 82 83 18                 t1 = u64 [a1 + 0x18]
  6689: 33 08 ac 01 01           a1 = 0x101ac
  6694: 33 09 02                 a2 = 0x2
  6697: 64 a6                    s1 = a3
  6699: 7b 1b 10                 u64 [sp + 0x10] = a4
  6702: 7b 1c 08                 u64 [sp + 0x8] = a5
  6705: b4 30 02 86 00           ra = 134, jump [t1]
      :                          @498 [@dyn 67]
  6710: 82 1c 08                 a5 = u64 [sp + 0x8]
  6713: 82 1b 10                 a4 = u64 [sp + 0x10]
  6716: 64 6a                    a3 = s1
  6718: 33 08 01                 a1 = 0x1
  6721: 33 06 01                 s1 = 0x1
  6724: 52 07 a7                 jump @494 if a0 != 0
      :                          @499
  6727: 64 b7                    a0 = a4
  6729: 64 c8                    a1 = a5
  6731: b4 a0 02 88 00           ra = 136, jump [a3]
      :                          @500 [@dyn 68]
  6736: 33 08 01                 a1 = 0x1
  6739: 64 76                    s1 = a0
  6741: 28 96                    jump @494
      :                          @501
  6743: 52 08 37                 jump @505 if a1 != 0
      :                          @502
  6746: 82 c8 28                 a1 = u64 [a5 + 0x28]
  6749: 82 c7 20                 a0 = u64 [a5 + 0x20]
  6752: 82 83 18                 t1 = u64 [a1 + 0x18]
  6755: 33 08 b0 01 01           a1 = 0x101b0
  6760: 33 09 01                 a2 = 0x1
  6763: 33 06 01                 s1 = 0x1
  6766: 7b 1a                    u64 [sp] = a3
  6768: 7b 1b 10                 u64 [sp + 0x10] = a4
  6771: 7b 1c 08                 u64 [sp + 0x8] = a5
  6774: b4 30 02 8a 00           ra = 138, jump [t1]
      :                          @503 [@dyn 69]
  6779: 82 1c 08                 a5 = u64 [sp + 0x8]
  6782: 82 1b 10                 a4 = u64 [sp + 0x10]
  6785: 82 1a                    a3 = u64 [sp]
  6787: 33 08 01                 a1 = 0x1
  6790: 52 07 65 ff              jump @494 if a0 != 0
      :                          @504
  6794: 81 c7 34                 a0 = i32 [a5 + 0x34]
  6797: 01                       fallthrough
      :                          @505
  6798: 33 06 01                 s1 = 0x1
  6801: 78 16 37                 u8 [sp + 0x37] = s1
  6804: 82 c8 20                 a1 = u64 [a5 + 0x20]
  6807: 82 c9 28                 a2 = u64 [a5 + 0x28]
  6810: 7b 18 18                 u64 [sp + 0x18] = a1
  6813: 7b 19 20                 u64 [sp + 0x20] = a2
  6816: 95 18 37                 a1 = sp + 0x37
  6819: 7b 18 28                 u64 [sp + 0x28] = a1
  6822: 81 c8 30                 a1 = i32 [a5 + 0x30]
  6825: 7c c9 38                 a2 = u8 [a5 + 0x38]
  6828: 82 c3                    t1 = u64 [a5]
  6830: 82 c4 08                 t2 = u64 [a5 + 0x8]
  6833: 82 c0 10                 ra = u64 [a5 + 0x10]
  6836: 82 c2 18                 t0 = u64 [a5 + 0x18]
  6839: 7a 17 6c                 u32 [sp + 0x6c] = a0
  6842: 7a 18 68                 u32 [sp + 0x68] = a1
  6845: 78 19 70                 u8 [sp + 0x70] = a2
  6848: 7b 13 38                 u64 [sp + 0x38] = t1
  6851: 7b 14 40                 u64 [sp + 0x40] = t2
  6854: 7b 10 48                 u64 [sp + 0x48] = ra
  6857: 7b 12 50                 u64 [sp + 0x50] = t0
  6860: 95 17 18                 a0 = sp + 0x18
  6863: 7b 17 58                 u64 [sp + 0x58] = a0
  6866: 33 07 78 01 01           a0 = 0x10178
  6871: 7b 17 60                 u64 [sp + 0x60] = a0
  6874: 95 18 38                 a1 = sp + 0x38
  6877: 64 b7                    a0 = a4
  6879: b4 a0 02 8c 00           ra = 140, jump [a3]
      :                          @506 [@dyn 70]
  6884: 52 07 21                 jump @509 if a0 != 0
      :                          @507
  6887: 82 18 60                 a1 = u64 [sp + 0x60]
  6890: 82 17 58                 a0 = u64 [sp + 0x58]
  6893: 82 8a 18                 a3 = u64 [a1 + 0x18]
  6896: 33 08 ae 01 01           a1 = 0x101ae
  6901: 33 09 02                 a2 = 0x2
  6904: b4 a0 02 8e 00           ra = 142, jump [a3]
      :                          @508 [@dyn 71]
  6909: 64 76                    s1 = a0
  6911: 33 08 01                 a1 = 0x1
  6914: 28 e9 fe                 jump @494
      :                          @509
  6917: 33 08 01                 a1 = 0x1
  6920: 28 e3 fe                 jump @494
      :                          @510
  6923: 51 08 9b 00              jump @531 if a1 == 0
      :                          @511
  6927: 64 79                    a2 = a0
  6929: 7c 77                    a0 = u8 [a0]
  6931: 51 07 91 00              jump @530 if a0 == 0
      :                          @512
  6935: 51 27 ff 00 90 00        jump @532 if a0 == 255
      :                          @513
  6941: 6c 7a                    a3 = sext.b a0
  6943: 57 0a 09                 jump @515 if a3 <s 0
      :                          @514
  6946: 33 0a                    a3 = 0
  6948: 33 08                    a1 = 0
  6950: 28 73                    jump @529
      :                          @515
  6952: 55 27 c0 00 0d           jump @517 if a0 >=u 192
      :                          @516
  6957: 33 0a 01                 a3 = 0x1
  6960: 33 0b 80                 a4 = 0xffffffffffffff80
  6963: 28 4a                    jump @526
      :                          @517
  6965: 55 27 e0 00 0e           jump @519 if a0 >=u 224
      :                          @518
  6970: 33 0a 02                 a3 = 0x2
  6973: 33 0b 40 ff              a4 = 0xffffffffffffff40
  6977: 28 3c                    jump @526
      :                          @519
  6979: 55 27 f0 00 0e           jump @521 if a0 >=u 240
      :                          @520
  6984: 33 0a 03                 a3 = 0x3
  6987: 33 0b 20 ff              a4 = 0xffffffffffffff20
  6991: 28 2e                    jump @526
      :                          @521
  6993: 55 27 f8 00 0e           jump @523 if a0 >=u 248
      :                          @522
  6998: 33 0a 04                 a3 = 0x4
  7001: 33 0b 10 ff              a4 = 0xffffffffffffff10
  7005: 28 20                    jump @526
      :                          @523
  7007: 55 27 fc 00 0e           jump @525 if a0 >=u 252
      :                          @524
  7012: 33 0a 05                 a3 = 0x5
  7015: 33 0b 08 ff              a4 = 0xffffffffffffff08
  7019: 28 12                    jump @526
      :                          @525
  7021: 88 7a fe 00              a3 = a0 <u 0xfe
  7025: 33 0b 04 ff              a4 = 0xffffffffffffff04
  7029: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  7033: 85 aa 07                 a3 = a3 ^ 0x7
  7036: 01                       fallthrough
      :                          @526
  7037: ae 8a 2b                 jump @533 if a3 >=u a1
      :                          @527
  7040: 33 08                    a1 = 0
  7042: c8 b7 07                 a0 = a0 + a4
  7045: 64 ab                    a4 = a3
  7047: 01                       fallthrough
      :                          @528
  7048: c8 b9 0c                 a5 = a2 + a4
  7051: 7c cc                    a5 = u8 [a5]
  7053: 97 88 08                 a1 = a1 << 0x8
  7056: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  7059: d4 c8 08                 a1 = a1 | a5
  7062: 52 0b f2                 jump @528 if a4 != 0
      :                          @529
  7065: 8a a9 03                 i32 a2 = a3 << 0x3
  7068: cf 97 07                 a0 = a0 << a2
  7071: c8 87 07                 a0 = a0 + a1
  7074: 32 00                    ret
      :                          @530
  7076: 32 00                    ret
      :                          @531
  7078: 00                       trap
      :                          @532
  7079: 00                       trap
      :                          @533
  7080: 00                       trap
      :                          @534 [@dyn 72]
  7081: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  7084: 7b 10 28                 u64 [sp + 0x28] = ra
  7087: 7b 15 20                 u64 [sp + 0x20] = s0
  7090: 7b 16 18                 u64 [sp + 0x18] = s1
  7093: 64 86                    s1 = a1
  7095: 82 88 28                 a1 = u64 [a1 + 0x28]
  7098: 82 6a 20                 a3 = u64 [s1 + 0x20]
  7101: 82 8b 18                 a4 = u64 [a1 + 0x18]
  7104: 64 75                    s0 = a0
  7106: 33 08 70 01 01           a1 = 0x10170
  7111: 33 09 01                 a2 = 0x1
  7114: 64 a7                    a0 = a3
  7116: b4 b0 02 92 00           ra = 146, jump [a4]
      :                          @535 [@dyn 73]
  7121: 7b 16                    u64 [sp] = s1
  7123: 78 17 08                 u8 [sp + 0x8] = a0
  7126: 46 11 09                 u8 [sp + 9] = 0
  7129: 7b 15 10                 u64 [sp + 0x10] = s0
  7132: 33 09 98 00              a2 = 0x98
  7136: 64 17                    a0 = sp
  7138: 95 18 10                 a1 = sp + 0x10
  7141: 50 20 94 00 e7 fd        ra = 148, jump @493
      :                          @536 [@dyn 74]
  7147: 33 07 01                 a0 = 0x1
  7150: 7c 18 08                 a1 = u8 [sp + 0x8]
  7153: 52 08 1b                 jump @538 if a1 != 0
      :                          @537
  7156: 82 17                    a0 = u64 [sp]
  7158: 82 78 28                 a1 = u64 [a0 + 0x28]
  7161: 82 77 20                 a0 = u64 [a0 + 0x20]
  7164: 82 8a 18                 a3 = u64 [a1 + 0x18]
  7167: 33 08 b1 01 01           a1 = 0x101b1
  7172: 33 09 01                 a2 = 0x1
  7175: b4 a0 02 96 00           ra = 150, jump [a3]
      :                          @538 [@dyn 75]
  7180: 82 10 28                 ra = u64 [sp + 0x28]
  7183: 82 15 20                 s0 = u64 [sp + 0x20]
  7186: 82 16 18                 s1 = u64 [sp + 0x18]
  7189: 95 11 30                 sp = sp + 0x30
  7192: 32 00                    ret
      :                          @539 [@dyn 76]
  7194: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  7198: 7b 10 80 00              u64 [sp + 0x80] = ra
  7202: 80 89 34                 a2 = u32 [a1 + 0x34]
  7205: 82 77                    a0 = u64 [a0]
  7207: 84 9a 10                 a3 = a2 & 0x10
  7210: 52 0a 16                 jump @542 if a3 != 0
      :                          @540
  7213: 84 99 20                 a2 = a2 & 0x20
  7216: 52 09 41                 jump @545 if a2 != 0
      :                          @541
  7219: 7c 77                    a0 = u8 [a0]
  7221: 82 10 80 00              ra = u64 [sp + 0x80]
  7225: 95 11 88 00              sp = sp + 0x88
  7229: 28 97 f5                 jump @339
      :                          @542
  7232: 7c 77                    a0 = u8 [a0]
  7234: 33 0b 81 00              a4 = 0x81
  7238: 95 19 7f                 a2 = sp + 0x7f
  7241: 33 02 57                 t0 = 0x57
  7244: 01                       fallthrough
      :                          @543
  7245: 64 bc                    a5 = a4
  7247: 84 7b 0f                 a4 = a0 & 0xf
  7250: 97 77 38                 a0 = a0 << 0x38
  7253: 98 77 3c                 a0 = a0 >> 0x3c
  7256: 88 b3 0a                 t1 = a4 <u 0xa
  7259: 33 0a 30                 a3 = 0x30
  7262: da 32 0a                 a3 = t0 if t1 == 0
  7265: be ba 0a                 i32 a3 = a3 + a4
  7268: 78 9a                    u8 [a2] = a3
  7270: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  7273: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
  7276: 52 07 e1                 jump @543 if a0 != 0
      :                          @544
  7279: 28 31                    jump @547
      :                          @545
  7281: 7c 77                    a0 = u8 [a0]
  7283: 33 0b 81 00              a4 = 0x81
  7287: 95 19 7f                 a2 = sp + 0x7f
  7290: 33 02 37                 t0 = 0x37
  7293: 01                       fallthrough
      :                          @546
  7294: 64 bc                    a5 = a4
  7296: 84 7b 0f                 a4 = a0 & 0xf
  7299: 97 77 38                 a0 = a0 << 0x38
  7302: 98 77 3c                 a0 = a0 >> 0x3c
  7305: 88 b3 0a                 t1 = a4 <u 0xa
  7308: 33 0a 30                 a3 = 0x30
  7311: da 32 0a                 a3 = t0 if t1 == 0
  7314: be ba 0a                 i32 a3 = a3 + a4
  7317: 78 9a                    u8 [a2] = a3
  7319: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  7322: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
  7325: 52 07 e1                 jump @546 if a0 != 0
      :                          @547
  7328: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
  7331: 56 27 80 00 28           jump @550 if a0 >u 128
      :                          @548
  7336: 9a bb 81 00              a4 = 0x81 - a4
  7340: 64 1a                    a3 = sp
  7342: c8 7a 0a                 a3 = a3 + a0
  7345: 33 09 02                 a2 = 0x2
  7348: 64 87                    a0 = a1
  7350: 33 08 b2 01 01           a1 = 0x101b2
  7355: 50 20 9a 00 40 f6        ra = 154, jump @349
      :                          @549 [@dyn 77]
  7361: 82 10 80 00              ra = u64 [sp + 0x80]
  7365: 95 11 88 00              sp = sp + 0x88
  7369: 32 00                    ret
      :                          @550
  7371: 00                       trap
