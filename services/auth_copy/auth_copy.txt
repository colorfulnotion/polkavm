// RO data = 772/772 bytes
// RW data = 96/72384 bytes
// Stack size = 65536 bytes
// RO data = [97, 117, 116, 104, 95, 99, 111, 112, 121, 32, 114, 101, 102, 32, 105, 110, 112, 117, 116, 95, 115, 108, 105, 99, 101, 61, 32, 111, 117, 116, 112, 117, 116, 95, 98, 121, 116, 101, 115, 95, 51, 54, 61, 32, 111, 117, 116, 112, 117, 116, 95, 108, 101, 110, 103, 116, 104, 61, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 26, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 43, 0, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 97, 115, 115, 105, 103, 110, 101, 100, 32, 99, 111, 114, 101, 32, 48, 43, 49, 32, 115, 101, 114, 118, 105, 99, 101, 32, 0, 0, 0, 0, 0, 0, 112, 0, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 111, 117, 116, 112, 117, 116, 95, 108, 101, 110, 32, 65, 67, 67, 32, 111, 117, 116, 112, 117, 116, 95, 108, 101, 110, 61, 32, 105, 115, 32, 108, 101, 115, 115, 32, 116, 104, 97, 110, 32, 51, 54, 32, 98, 121, 116, 101, 115, 44, 32, 114, 101, 116, 117, 114, 110, 105, 110, 103, 32, 101, 114, 114, 111, 114, 0, 0, 0, 0, 0, 0, 0, 160, 0, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 186, 0, 1, 0, 0, 0, 0, 0, 39, 0, 0, 0, 0, 0, 0, 0, 150, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 152, 0, 0, 0, 0, 0, 0, 0, 158, 0, 0, 0, 0, 0, 0, 0, 166, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 202, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 204, 0, 0, 0, 0, 0, 0, 0, 210, 0, 0, 0, 0, 0, 0, 0, 214, 0, 0, 0, 0, 0, 0, 0, 32, 32, 32, 32, 44, 32, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3, 11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4, 7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8, 9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13, 2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9, 12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11, 13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10, 6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5, 10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3]
// RW data = [40, 201, 189, 242, 103, 230, 9, 106, 59, 167, 202, 132, 133, 174, 103, 187, 43, 248, 148, 254, 114, 243, 110, 60, 241, 54, 29, 95, 58, 245, 79, 165, 209, 130, 230, 173, 127, 82, 14, 81, 31, 108, 62, 43, 140, 104, 5, 155, 107, 189, 65, 251, 171, 217, 131, 31, 121, 33, 126, 19, 25, 205, 224, 91, 8, 201, 188, 243, 103, 230, 9, 106, 148, 66, 190, 4, 84, 38, 124, 224, 75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 3280
// Code size = 10358 bytes

      :                          @0
     0: 28 36 04 00 00           jump @65
      :                          @1
     5: 28 0c 15 00 00           jump @192
      :                          @2
    10: 28 b1 18                 jump @270
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 80 89 34                 a2 = u32 [a1 + 0x34]
    24: 82 77                    a0 = u64 [a0]
    26: 84 9a 10                 a3 = a2 & 0x10
    29: 52 0a 16                 jump @6 if a3 != 0
      :                          @4
    32: 84 99 20                 a2 = a2 & 0x20
    35: 52 09 41                 jump @9 if a2 != 0
      :                          @5
    38: 7c 77                    a0 = u8 [a0]
    40: 82 10 80 00              ra = u64 [sp + 0x80]
    44: 95 11 88 00              sp = sp + 0x88
    48: 28 59 1e                 jump @409
      :                          @6
    51: 7c 77                    a0 = u8 [a0]
    53: 33 0b 81 00              a4 = 0x81
    57: 95 19 7f                 a2 = sp + 0x7f
    60: 33 02 57                 t0 = 0x57
    63: 01                       fallthrough
      :                          @7
    64: 64 bc                    a5 = a4
    66: 84 7b 0f                 a4 = a0 & 0xf
    69: 97 77 38                 a0 = a0 << 0x38
    72: 98 77 3c                 a0 = a0 >> 0x3c
    75: 88 b3 0a                 t1 = a4 <u 0xa
    78: 33 0a 30                 a3 = 0x30
    81: da 32 0a                 a3 = t0 if t1 == 0
    84: be ba 0a                 i32 a3 = a3 + a4
    87: 78 9a                    u8 [a2] = a3
    89: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
    92: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
    95: 52 07 e1                 jump @7 if a0 != 0
      :                          @8
    98: 28 31                    jump @11
      :                          @9
   100: 7c 77                    a0 = u8 [a0]
   102: 33 0b 81 00              a4 = 0x81
   106: 95 19 7f                 a2 = sp + 0x7f
   109: 33 02 37                 t0 = 0x37
   112: 01                       fallthrough
      :                          @10
   113: 64 bc                    a5 = a4
   115: 84 7b 0f                 a4 = a0 & 0xf
   118: 97 77 38                 a0 = a0 << 0x38
   121: 98 77 3c                 a0 = a0 >> 0x3c
   124: 88 b3 0a                 t1 = a4 <u 0xa
   127: 33 0a 30                 a3 = 0x30
   130: da 32 0a                 a3 = t0 if t1 == 0
   133: be ba 0a                 i32 a3 = a3 + a4
   136: 78 9a                    u8 [a2] = a3
   138: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
   141: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
   144: 52 07 e1                 jump @10 if a0 != 0
      :                          @11
   147: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   150: 56 27 80 00 27           jump @14 if a0 >u 128
      :                          @12
   155: 9a bb 81 00              a4 = 0x81 - a4
   159: 64 1a                    a3 = sp
   161: c8 7a 0a                 a3 = a3 + a0
   164: 33 09 02                 a2 = 0x2
   167: 64 87                    a0 = a1
   169: 33 08 7a 01 01           a1 = 0x1017a
   174: 50 10 04 03 1f           ra = 4, jump @419
      :                          @13 [@dyn 2]
   179: 82 10 80 00              ra = u64 [sp + 0x80]
   183: 95 11 88 00              sp = sp + 0x88
   187: 32 00                    ret
      :                          @14
   189: 00                       trap
      :                          @15 [@dyn 3]
   190: 95 11 c0                 sp = sp + 0xffffffffffffffc0
   193: 7b 10 38                 u64 [sp + 0x38] = ra
   196: 7b 15 30                 u64 [sp + 0x30] = s0
   199: 7b 16 28                 u64 [sp + 0x28] = s1
   202: 7b 18 08                 u64 [sp + 0x8] = a1
   205: 82 89 28                 a2 = u64 [a1 + 0x28]
   208: 82 76                    s1 = u64 [a0]
   210: 82 75 08                 s0 = u64 [a0 + 0x8]
   213: 82 87 20                 a0 = u64 [a1 + 0x20]
   216: 82 9a 18                 a3 = u64 [a2 + 0x18]
   219: 33 08 38 01 01           a1 = 0x10138
   224: 33 09 01                 a2 = 0x1
   227: b4 a0 01 08              ra = 8, jump [a3]
      :                          @16 [@dyn 4]
   231: 82 18 08                 a1 = u64 [sp + 0x8]
   234: 7b 18 10                 u64 [sp + 0x10] = a1
   237: 78 17 18                 u8 [sp + 0x18] = a0
   240: 46 11 19                 u8 [sp + 25] = 0
   243: 51 05 2c                 jump @21 if s0 == 0
      :                          @17
   246: 33 07 02                 a0 = 0x2
   249: 7b 17                    u64 [sp] = a0
   251: 01                       fallthrough
      :                          @18
   252: 95 67 01                 a0 = s1 + 0x1
   255: 7b 17 08                 u64 [sp + 0x8] = a0
   258: 7b 16 20                 u64 [sp + 0x20] = s1
   261: 95 17 10                 a0 = sp + 0x10
   264: 95 18 20                 a1 = sp + 0x20
   267: 82 19                    a2 = u64 [sp]
   269: 50 10 0a 8c 25           ra = 10, jump @564
      :                          @19 [@dyn 5]
   274: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
   277: 82 16 08                 s1 = u64 [sp + 0x8]
   280: 52 05 e4                 jump @18 if s0 != 0
      :                          @20
   283: 7c 17 18                 a0 = u8 [sp + 0x18]
   286: 01                       fallthrough
      :                          @21
   287: 33 08 01                 a1 = 0x1
   290: 52 07 1e                 jump @24 if a0 != 0
      :                          @22
   293: 82 17 10                 a0 = u64 [sp + 0x10]
   296: 82 78 28                 a1 = u64 [a0 + 0x28]
   299: 82 77 20                 a0 = u64 [a0 + 0x20]
   302: 82 8a 18                 a3 = u64 [a1 + 0x18]
   305: 33 08 79 01 01           a1 = 0x10179
   310: 33 09 01                 a2 = 0x1
   313: b4 a0 01 0c              ra = 12, jump [a3]
      :                          @23 [@dyn 6]
   317: 64 78                    a1 = a0
   319: 01                       fallthrough
      :                          @24
   320: 64 87                    a0 = a1
   322: 82 10 38                 ra = u64 [sp + 0x38]
   325: 82 15 30                 s0 = u64 [sp + 0x30]
   328: 82 16 28                 s1 = u64 [sp + 0x28]
   331: 95 11 40                 sp = sp + 0x40
   334: 32 00                    ret
      :                          @25 [@dyn 7]
   336: 95 11 d0                 sp = sp + 0xffffffffffffffd0
   339: 7b 10 28                 u64 [sp + 0x28] = ra
   342: 7b 15 20                 u64 [sp + 0x20] = s0
   345: 7b 16 18                 u64 [sp + 0x18] = s1
   348: 64 85                    s0 = a1
   350: 82 88 28                 a1 = u64 [a1 + 0x28]
   353: 82 5a 20                 a3 = u64 [s0 + 0x20]
   356: 82 8b 18                 a4 = u64 [a1 + 0x18]
   359: 64 76                    s1 = a0
   361: 33 08 38 01 01           a1 = 0x10138
   366: 33 09 01                 a2 = 0x1
   369: 64 a7                    a0 = a3
   371: b4 b0 01 10              ra = 16, jump [a4]
      :                          @26 [@dyn 8]
   375: 7b 15                    u64 [sp] = s0
   377: 78 17 08                 u8 [sp + 0x8] = a0
   380: 46 11 09                 u8 [sp + 9] = 0
   383: 7b 16 10                 u64 [sp + 0x10] = s1
   386: 33 05 02                 s0 = 0x2
   389: 64 17                    a0 = sp
   391: 95 18 10                 a1 = sp + 0x10
   394: 33 09 02                 a2 = 0x2
   397: 50 10 12 0c 25           ra = 18, jump @564
      :                          @27 [@dyn 9]
   402: 95 67 01                 a0 = s1 + 0x1
   405: 7b 17 10                 u64 [sp + 0x10] = a0
   408: 64 17                    a0 = sp
   410: 95 18 10                 a1 = sp + 0x10
   413: 64 59                    a2 = s0
   415: 50 10 14 fa 24           ra = 20, jump @564
      :                          @28 [@dyn 10]
   420: 95 67 02                 a0 = s1 + 0x2
   423: 7b 17 10                 u64 [sp + 0x10] = a0
   426: 64 17                    a0 = sp
   428: 95 18 10                 a1 = sp + 0x10
   431: 64 59                    a2 = s0
   433: 50 10 16 e8 24           ra = 22, jump @564
      :                          @29 [@dyn 11]
   438: 95 67 03                 a0 = s1 + 0x3
   441: 7b 17 10                 u64 [sp + 0x10] = a0
   444: 64 17                    a0 = sp
   446: 95 18 10                 a1 = sp + 0x10
   449: 64 59                    a2 = s0
   451: 50 10 18 d6 24           ra = 24, jump @564
      :                          @30 [@dyn 12]
   456: 95 67 04                 a0 = s1 + 0x4
   459: 7b 17 10                 u64 [sp + 0x10] = a0
   462: 64 17                    a0 = sp
   464: 95 18 10                 a1 = sp + 0x10
   467: 64 59                    a2 = s0
   469: 50 10 1a c4 24           ra = 26, jump @564
      :                          @31 [@dyn 13]
   474: 95 67 05                 a0 = s1 + 0x5
   477: 7b 17 10                 u64 [sp + 0x10] = a0
   480: 64 17                    a0 = sp
   482: 95 18 10                 a1 = sp + 0x10
   485: 64 59                    a2 = s0
   487: 50 10 1c b2 24           ra = 28, jump @564
      :                          @32 [@dyn 14]
   492: 95 67 06                 a0 = s1 + 0x6
   495: 7b 17 10                 u64 [sp + 0x10] = a0
   498: 64 17                    a0 = sp
   500: 95 18 10                 a1 = sp + 0x10
   503: 64 59                    a2 = s0
   505: 50 10 1e a0 24           ra = 30, jump @564
      :                          @33 [@dyn 15]
   510: 95 67 07                 a0 = s1 + 0x7
   513: 7b 17 10                 u64 [sp + 0x10] = a0
   516: 64 17                    a0 = sp
   518: 95 18 10                 a1 = sp + 0x10
   521: 64 59                    a2 = s0
   523: 50 10 20 8e 24           ra = 32, jump @564
      :                          @34 [@dyn 16]
   528: 95 67 08                 a0 = s1 + 0x8
   531: 7b 17 10                 u64 [sp + 0x10] = a0
   534: 64 17                    a0 = sp
   536: 95 18 10                 a1 = sp + 0x10
   539: 64 59                    a2 = s0
   541: 50 10 22 7c 24           ra = 34, jump @564
      :                          @35 [@dyn 17]
   546: 95 67 09                 a0 = s1 + 0x9
   549: 7b 17 10                 u64 [sp + 0x10] = a0
   552: 64 17                    a0 = sp
   554: 95 18 10                 a1 = sp + 0x10
   557: 64 59                    a2 = s0
   559: 50 10 24 6a 24           ra = 36, jump @564
      :                          @36 [@dyn 18]
   564: 95 67 0a                 a0 = s1 + 0xa
   567: 7b 17 10                 u64 [sp + 0x10] = a0
   570: 64 17                    a0 = sp
   572: 95 18 10                 a1 = sp + 0x10
   575: 64 59                    a2 = s0
   577: 50 10 26 58 24           ra = 38, jump @564
      :                          @37 [@dyn 19]
   582: 95 67 0b                 a0 = s1 + 0xb
   585: 7b 17 10                 u64 [sp + 0x10] = a0
   588: 64 17                    a0 = sp
   590: 95 18 10                 a1 = sp + 0x10
   593: 64 59                    a2 = s0
   595: 50 10 28 46 24           ra = 40, jump @564
      :                          @38 [@dyn 20]
   600: 95 67 0c                 a0 = s1 + 0xc
   603: 7b 17 10                 u64 [sp + 0x10] = a0
   606: 64 17                    a0 = sp
   608: 95 18 10                 a1 = sp + 0x10
   611: 64 59                    a2 = s0
   613: 50 10 2a 34 24           ra = 42, jump @564
      :                          @39 [@dyn 21]
   618: 95 67 0d                 a0 = s1 + 0xd
   621: 7b 17 10                 u64 [sp + 0x10] = a0
   624: 64 17                    a0 = sp
   626: 95 18 10                 a1 = sp + 0x10
   629: 64 59                    a2 = s0
   631: 50 10 2c 22 24           ra = 44, jump @564
      :                          @40 [@dyn 22]
   636: 95 67 0e                 a0 = s1 + 0xe
   639: 7b 17 10                 u64 [sp + 0x10] = a0
   642: 64 17                    a0 = sp
   644: 95 18 10                 a1 = sp + 0x10
   647: 64 59                    a2 = s0
   649: 50 10 2e 10 24           ra = 46, jump @564
      :                          @41 [@dyn 23]
   654: 95 67 0f                 a0 = s1 + 0xf
   657: 7b 17 10                 u64 [sp + 0x10] = a0
   660: 64 17                    a0 = sp
   662: 95 18 10                 a1 = sp + 0x10
   665: 64 59                    a2 = s0
   667: 50 10 30 fe 23           ra = 48, jump @564
      :                          @42 [@dyn 24]
   672: 95 67 10                 a0 = s1 + 0x10
   675: 7b 17 10                 u64 [sp + 0x10] = a0
   678: 64 17                    a0 = sp
   680: 95 18 10                 a1 = sp + 0x10
   683: 64 59                    a2 = s0
   685: 50 10 32 ec 23           ra = 50, jump @564
      :                          @43 [@dyn 25]
   690: 95 67 11                 a0 = s1 + 0x11
   693: 7b 17 10                 u64 [sp + 0x10] = a0
   696: 64 17                    a0 = sp
   698: 95 18 10                 a1 = sp + 0x10
   701: 64 59                    a2 = s0
   703: 50 10 34 da 23           ra = 52, jump @564
      :                          @44 [@dyn 26]
   708: 95 67 12                 a0 = s1 + 0x12
   711: 7b 17 10                 u64 [sp + 0x10] = a0
   714: 64 17                    a0 = sp
   716: 95 18 10                 a1 = sp + 0x10
   719: 64 59                    a2 = s0
   721: 50 10 36 c8 23           ra = 54, jump @564
      :                          @45 [@dyn 27]
   726: 95 67 13                 a0 = s1 + 0x13
   729: 7b 17 10                 u64 [sp + 0x10] = a0
   732: 64 17                    a0 = sp
   734: 95 18 10                 a1 = sp + 0x10
   737: 64 59                    a2 = s0
   739: 50 10 38 b6 23           ra = 56, jump @564
      :                          @46 [@dyn 28]
   744: 95 67 14                 a0 = s1 + 0x14
   747: 7b 17 10                 u64 [sp + 0x10] = a0
   750: 64 17                    a0 = sp
   752: 95 18 10                 a1 = sp + 0x10
   755: 64 59                    a2 = s0
   757: 50 10 3a a4 23           ra = 58, jump @564
      :                          @47 [@dyn 29]
   762: 95 67 15                 a0 = s1 + 0x15
   765: 7b 17 10                 u64 [sp + 0x10] = a0
   768: 64 17                    a0 = sp
   770: 95 18 10                 a1 = sp + 0x10
   773: 64 59                    a2 = s0
   775: 50 10 3c 92 23           ra = 60, jump @564
      :                          @48 [@dyn 30]
   780: 95 67 16                 a0 = s1 + 0x16
   783: 7b 17 10                 u64 [sp + 0x10] = a0
   786: 64 17                    a0 = sp
   788: 95 18 10                 a1 = sp + 0x10
   791: 64 59                    a2 = s0
   793: 50 10 3e 80 23           ra = 62, jump @564
      :                          @49 [@dyn 31]
   798: 95 67 17                 a0 = s1 + 0x17
   801: 7b 17 10                 u64 [sp + 0x10] = a0
   804: 64 17                    a0 = sp
   806: 95 18 10                 a1 = sp + 0x10
   809: 64 59                    a2 = s0
   811: 50 10 40 6e 23           ra = 64, jump @564
      :                          @50 [@dyn 32]
   816: 95 67 18                 a0 = s1 + 0x18
   819: 7b 17 10                 u64 [sp + 0x10] = a0
   822: 64 17                    a0 = sp
   824: 95 18 10                 a1 = sp + 0x10
   827: 64 59                    a2 = s0
   829: 50 10 42 5c 23           ra = 66, jump @564
      :                          @51 [@dyn 33]
   834: 95 67 19                 a0 = s1 + 0x19
   837: 7b 17 10                 u64 [sp + 0x10] = a0
   840: 64 17                    a0 = sp
   842: 95 18 10                 a1 = sp + 0x10
   845: 64 59                    a2 = s0
   847: 50 10 44 4a 23           ra = 68, jump @564
      :                          @52 [@dyn 34]
   852: 95 67 1a                 a0 = s1 + 0x1a
   855: 7b 17 10                 u64 [sp + 0x10] = a0
   858: 64 17                    a0 = sp
   860: 95 18 10                 a1 = sp + 0x10
   863: 64 59                    a2 = s0
   865: 50 10 46 38 23           ra = 70, jump @564
      :                          @53 [@dyn 35]
   870: 95 67 1b                 a0 = s1 + 0x1b
   873: 7b 17 10                 u64 [sp + 0x10] = a0
   876: 64 17                    a0 = sp
   878: 95 18 10                 a1 = sp + 0x10
   881: 64 59                    a2 = s0
   883: 50 10 48 26 23           ra = 72, jump @564
      :                          @54 [@dyn 36]
   888: 95 67 1c                 a0 = s1 + 0x1c
   891: 7b 17 10                 u64 [sp + 0x10] = a0
   894: 64 17                    a0 = sp
   896: 95 18 10                 a1 = sp + 0x10
   899: 64 59                    a2 = s0
   901: 50 10 4a 14 23           ra = 74, jump @564
      :                          @55 [@dyn 37]
   906: 95 67 1d                 a0 = s1 + 0x1d
   909: 7b 17 10                 u64 [sp + 0x10] = a0
   912: 64 17                    a0 = sp
   914: 95 18 10                 a1 = sp + 0x10
   917: 64 59                    a2 = s0
   919: 50 10 4c 02 23           ra = 76, jump @564
      :                          @56 [@dyn 38]
   924: 95 67 1e                 a0 = s1 + 0x1e
   927: 7b 17 10                 u64 [sp + 0x10] = a0
   930: 64 17                    a0 = sp
   932: 95 18 10                 a1 = sp + 0x10
   935: 64 59                    a2 = s0
   937: 50 10 4e f0 22           ra = 78, jump @564
      :                          @57 [@dyn 39]
   942: 95 67 1f                 a0 = s1 + 0x1f
   945: 7b 17 10                 u64 [sp + 0x10] = a0
   948: 64 17                    a0 = sp
   950: 95 18 10                 a1 = sp + 0x10
   953: 64 59                    a2 = s0
   955: 50 10 50 de 22           ra = 80, jump @564
      :                          @58 [@dyn 40]
   960: 95 67 20                 a0 = s1 + 0x20
   963: 7b 17 10                 u64 [sp + 0x10] = a0
   966: 64 17                    a0 = sp
   968: 95 18 10                 a1 = sp + 0x10
   971: 64 59                    a2 = s0
   973: 50 10 52 cc 22           ra = 82, jump @564
      :                          @59 [@dyn 41]
   978: 95 67 21                 a0 = s1 + 0x21
   981: 7b 17 10                 u64 [sp + 0x10] = a0
   984: 64 17                    a0 = sp
   986: 95 18 10                 a1 = sp + 0x10
   989: 64 59                    a2 = s0
   991: 50 10 54 ba 22           ra = 84, jump @564
      :                          @60 [@dyn 42]
   996: 95 67 22                 a0 = s1 + 0x22
   999: 7b 17 10                 u64 [sp + 0x10] = a0
  1002: 64 17                    a0 = sp
  1004: 95 18 10                 a1 = sp + 0x10
  1007: 64 59                    a2 = s0
  1009: 50 10 56 a8 22           ra = 86, jump @564
      :                          @61 [@dyn 43]
  1014: 95 67 23                 a0 = s1 + 0x23
  1017: 7b 17 10                 u64 [sp + 0x10] = a0
  1020: 64 17                    a0 = sp
  1022: 95 18 10                 a1 = sp + 0x10
  1025: 64 59                    a2 = s0
  1027: 50 10 58 96 22           ra = 88, jump @564
      :                          @62 [@dyn 44]
  1032: 33 07 01                 a0 = 0x1
  1035: 7c 18 08                 a1 = u8 [sp + 0x8]
  1038: 52 08 1a                 jump @64 if a1 != 0
      :                          @63
  1041: 82 17                    a0 = u64 [sp]
  1043: 82 78 28                 a1 = u64 [a0 + 0x28]
  1046: 82 77 20                 a0 = u64 [a0 + 0x20]
  1049: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1052: 33 08 79 01 01           a1 = 0x10179
  1057: 33 09 01                 a2 = 0x1
  1060: b4 a0 01 5a              ra = 90, jump [a3]
      :                          @64 [@dyn 45]
  1064: 82 10 28                 ra = u64 [sp + 0x28]
  1067: 82 15 20                 s0 = u64 [sp + 0x20]
  1070: 82 16 18                 s1 = u64 [sp + 0x18]
  1073: 95 11 30                 sp = sp + 0x30
  1076: 32 00                    ret
      :                          @65 [export #0: 'refine']
  1078: 95 11 60 fc              sp = sp + 0xfffffffffffffc60
  1082: 7b 10 98 03              u64 [sp + 0x398] = ra
  1086: 7b 15 90 03              u64 [sp + 0x390] = s0
  1090: 7b 16 88 03              u64 [sp + 0x388] = s1
  1094: 64 85                    s0 = a1
  1096: 7b 17 68 01              u64 [sp + 0x168] = a0
  1100: 33 07 00 00 10           a0 = 0x100000
  1105: 65 77                    a0 = sbrk a0
  1107: 33 06 61 00 03           s1 = 0x30061
  1112: 33 09 08 10              a2 = 0x1008
  1116: 33 0a 08                 a3 = 0x8
  1119: 33 07 61 00 03           a0 = 0x30061
  1124: 33 08                    a1 = 0
  1126: 33 0b                    a4 = 0
  1128: 33 0c                    a5 = 0
  1130: 0a 01                    ecalli 1 // 'fetch'
  1132: 7b 16 70 01              u64 [sp + 0x170] = s1
  1136: 7b 17 98 00              u64 [sp + 0x98] = a0
  1140: 7b 17 78 01              u64 [sp + 0x178] = a0
  1144: 48 21 84 01              u32 [sp + 388] = 0
  1148: 95 17 84 01              a0 = sp + 0x184
  1152: 33 09 04                 a2 = 0x4
  1155: 33 0a 0d                 a3 = 0xd
  1158: 33 08                    a1 = 0
  1160: 33 0b                    a4 = 0
  1162: 33 0c                    a5 = 0
  1164: 33 00 5c                 ra = 0x5c
  1167: 0a 01                    ecalli 1 // 'fetch'
  1169: 01                       fallthrough
      :                          @66 [@dyn 46]
  1170: 33 09 04                 a2 = 0x4
  1173: 33 07 00 00 01           a0 = 0x10000
  1178: ac 95 46                 jump @75 if s0 <u a2
      :                          @67
  1181: 82 1a 68 01              a3 = u64 [sp + 0x168]
  1185: 7d a8                    a1 = i8 [a3]
  1187: 33 06 01                 s1 = 0x1
  1190: 59 08 37                 jump @74 if a1 >=s 0
      :                          @68
  1193: 84 89 ff 00              a2 = a1 & 0xff
  1197: 33 06 02                 s1 = 0x2
  1200: 53 29 c0 00 2d           jump @74 if a2 <u 192
      :                          @69
  1205: 33 06 03                 s1 = 0x3
  1208: 53 29 e0 00 25           jump @74 if a2 <u 224
      :                          @70
  1213: 33 06 04                 s1 = 0x4
  1216: 53 29 f0 00 1d           jump @74 if a2 <u 240
      :                          @71
  1221: 33 06 05                 s1 = 0x5
  1224: 53 29 f8 00 15           jump @74 if a2 <u 248
      :                          @72
  1229: 33 06 06                 s1 = 0x6
  1232: 53 29 fc 00 0d           jump @74 if a2 <u 252
      :                          @73
  1237: 88 98 fe 00              a1 = a2 <u 0xfe
  1241: 9a 86 08                 s1 = 0x8 - a1
  1244: 01                       fallthrough
      :                          @74
  1245: ae 65 07                 jump @76 if s0 >=u s1
      :                          @75
  1248: 33 08                    a1 = 0
  1250: 28 5f                    jump @87
      :                          @76
  1252: 64 a7                    a0 = a3
  1254: 64 68                    a1 = s1
  1256: 50 10 5e f0 22           ra = 94, jump @581
      :                          @77 [@dyn 47]
  1261: aa 65 4c                 jump @86 if s0 == s1
      :                          @78
  1264: 82 17 68 01              a0 = u64 [sp + 0x168]
  1268: c8 67 07                 a0 = a0 + s1
  1271: 7d 79                    a2 = i8 [a0]
  1273: c9 65 06                 s1 = s0 - s1
  1276: 33 05 01                 s0 = 0x1
  1279: 59 09 37                 jump @85 if a2 >=s 0
      :                          @79
  1282: 84 99 ff 00              a2 = a2 & 0xff
  1286: 33 05 02                 s0 = 0x2
  1289: 53 29 c0 00 2d           jump @85 if a2 <u 192
      :                          @80
  1294: 33 05 03                 s0 = 0x3
  1297: 53 29 e0 00 25           jump @85 if a2 <u 224
      :                          @81
  1302: 33 05 04                 s0 = 0x4
  1305: 53 29 f0 00 1d           jump @85 if a2 <u 240
      :                          @82
  1310: 33 05 05                 s0 = 0x5
  1313: 53 29 f8 00 15           jump @85 if a2 <u 248
      :                          @83
  1318: 33 05 06                 s0 = 0x6
  1321: 53 29 fc 00 0d           jump @85 if a2 <u 252
      :                          @84
  1326: 88 98 fe 00              a1 = a2 <u 0xfe
  1330: 9a 85 08                 s0 = 0x8 - a1
  1333: 01                       fallthrough
      :                          @85
  1334: ae 56 1d                 jump @88 if s1 >=u s0
      :                          @86
  1337: 33 08                    a1 = 0
  1339: 33 07 00 00 01           a0 = 0x10000
  1344: 01                       fallthrough
      :                          @87
  1345: 82 10 98 03              ra = u64 [sp + 0x398]
  1349: 82 15 90 03              s0 = u64 [sp + 0x390]
  1353: 82 16 88 03              s1 = u64 [sp + 0x388]
  1357: 95 11 a0 03              sp = sp + 0x3a0
  1361: 32 00                    ret
      :                          @88
  1363: 64 58                    a1 = s0
  1365: 7b 17 68 01              u64 [sp + 0x168] = a0
  1369: 50 10 60 7f 22           ra = 96, jump @581
      :                          @89 [@dyn 48]
  1374: ab 56 09                 jump @91 if s1 != s0
      :                          @90
  1377: 33 08                    a1 = 0
  1379: 33 07                    a0 = 0
  1381: 28 5d                    jump @101
      :                          @91
  1383: 82 17 68 01              a0 = u64 [sp + 0x168]
  1387: c8 57 07                 a0 = a0 + s0
  1390: 7d 78                    a1 = i8 [a0]
  1392: c9 56 05                 s0 = s1 - s0
  1395: 33 06 01                 s1 = 0x1
  1398: 59 08 37                 jump @98 if a1 >=s 0
      :                          @92
  1401: 84 88 ff 00              a1 = a1 & 0xff
  1405: 33 06 02                 s1 = 0x2
  1408: 53 28 c0 00 2d           jump @98 if a1 <u 192
      :                          @93
  1413: 33 06 03                 s1 = 0x3
  1416: 53 28 e0 00 25           jump @98 if a1 <u 224
      :                          @94
  1421: 33 06 04                 s1 = 0x4
  1424: 53 28 f0 00 1d           jump @98 if a1 <u 240
      :                          @95
  1429: 33 06 05                 s1 = 0x5
  1432: 53 28 f8 00 15           jump @98 if a1 <u 248
      :                          @96
  1437: 33 06 06                 s1 = 0x6
  1440: 53 28 fc 00 0d           jump @98 if a1 <u 252
      :                          @97
  1445: 88 88 fe 00              a1 = a1 <u 0xfe
  1449: 9a 86 08                 s1 = 0x8 - a1
  1452: 01                       fallthrough
      :                          @98
  1453: ac 65 63 0f              jump @191 if s0 <u s1
      :                          @99
  1457: 64 68                    a1 = s1
  1459: 50 10 62 25 22           ra = 98, jump @581
      :                          @100 [@dyn 49]
  1464: e4 65 08                 a1 = maxu(s0, s1)
  1467: c9 68 08                 a1 = a1 - s1
  1470: ac 78 7b ff              jump @86 if a1 <u a0
      :                          @101
  1474: e4 78 08                 a1 = maxu(a1, a0)
  1477: c9 78 08                 a1 = a1 - a0
  1480: 33 09 20                 a2 = 0x20
  1483: 33 07 00 00 01           a0 = 0x10000
  1488: ac 98 10 ff              jump @75 if a1 <u a2
      :                          @102
  1492: 95 17 f8 01              a0 = sp + 0x1f8
  1496: 33 09 80 00              a2 = 0x80
  1500: 33 08                    a1 = 0
  1502: 50 10 64 52 18           ra = 100, jump @395
      :                          @103 [@dyn 50]
  1507: 3a 0c 00 00 03           a5 = u64 [0x30000]
  1512: 3a 07 08 00 03           a0 = u64 [0x30008]
  1517: 3a 08 10 00 03           a1 = u64 [0x30010]
  1522: 3a 09 18 00 03           a2 = u64 [0x30018]
  1527: 7b 1c a8 01              u64 [sp + 0x1a8] = a5
  1531: 7b 17 30                 u64 [sp + 0x30] = a0
  1534: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  1538: 7b 18 28                 u64 [sp + 0x28] = a1
  1541: 7b 18 b8 01              u64 [sp + 0x1b8] = a1
  1545: 7b 19 20                 u64 [sp + 0x20] = a2
  1548: 7b 19 c0 01              u64 [sp + 0x1c0] = a2
  1552: 3a 06 20 00 03           s1 = u64 [0x30020]
  1557: 3a 0a 28 00 03           a3 = u64 [0x30028]
  1562: 3a 07 30 00 03           a0 = u64 [0x30030]
  1567: 33 05 38 00 03           s0 = 0x30038
  1572: 3a 08 38 00 03           a1 = u64 [0x30038]
  1577: 7b 16 c8 01              u64 [sp + 0x1c8] = s1
  1581: 7b 1a d0 01              u64 [sp + 0x1d0] = a3
  1585: 7b 17 18                 u64 [sp + 0x18] = a0
  1588: 7b 17 d8 01              u64 [sp + 0x1d8] = a0
  1592: 7b 18 10                 u64 [sp + 0x10] = a1
  1595: 7b 18 e0 01              u64 [sp + 0x1e0] = a1
  1599: 49 21 e8 01              u64 [sp + 488] = 0
  1603: 49 21 f0 01              u64 [sp + 496] = 0
  1607: 49 21 78 02              u64 [sp + 632] = 0
  1611: 46 21 80 02              u8 [sp + 640] = 0
  1615: 7b 1a 88 00              u64 [sp + 0x88] = a3
  1619: 82 1b 98 00              a4 = u64 [sp + 0x98]
  1623: 7b 16 90 00              u64 [sp + 0x90] = s1
  1627: 51 0b 21 06              jump @138 if a4 == 0
      :                          @104
  1631: 33 03                    t1 = 0
  1633: 33 0c                    a5 = 0
  1635: 33 07 4b 02 01           a0 = 0x1024b
  1640: 7b 17 08                 u64 [sp + 0x8] = a0
  1643: 3a 07 40 00 03           a0 = u64 [0x30040]
  1648: 7b 17                    u64 [sp] = a0
  1650: 33 07 61 00 03           a0 = 0x30061
  1655: 7b 17 80 00              u64 [sp + 0x80] = a0
  1659: 01                       fallthrough
      :                          @105
  1660: 52 23 80 00 29           jump @108 if t1 != 128
      :                          @106
  1665: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
  1669: 95 75 80 00              s0 = a0 + 0x80
  1673: 7b 15 e8 01              u64 [sp + 0x1e8] = s0
  1677: 82 19 f0 01              a2 = u64 [sp + 0x1f0]
  1681: 7b 1c 78                 u64 [sp + 0x78] = a5
  1684: 53 17 80 2b              jump @111 if a0 <u 4294967168
      :                          @107
  1688: 95 99 01                 a2 = a2 + 0x1
  1691: 7b 19 68 01              u64 [sp + 0x168] = a2
  1695: 7b 19 f0 01              u64 [sp + 0x1f0] = a2
  1699: 28 21                    jump @112
      :                          @108
  1701: 9a 37 80 00              a0 = 0x80 - t1
  1705: c9 cb 08                 a1 = a4 - a5
  1708: e6 87 05                 s0 = minu(a0, a1)
  1711: c8 35 09                 a2 = s0 + t1
  1714: ac 59 5c 0e              jump @189 if a2 <u s0
      :                          @109
  1718: 54 29 80 00 1c 05        jump @132 if a2 <=u 128
      :                          @110
  1724: 28 53 0e                 jump @190
      :                          @111
  1727: 7b 19 68 01              u64 [sp + 0x168] = a2
  1731: 01                       fallthrough
      :                          @112
  1732: 95 17 08 03              a0 = sp + 0x308
  1736: 33 09 80 00              a2 = 0x80
  1740: 95 18 f8 01              a1 = sp + 0x1f8
  1744: 50 10 66 ae 16           ra = 102, jump @377
      :                          @113 [@dyn 51]
  1749: 82 16 a8 01              s1 = u64 [sp + 0x1a8]
  1753: 82 1c b0 01              a5 = u64 [sp + 0x1b0]
  1757: 82 13 b8 01              t1 = u64 [sp + 0x1b8]
  1761: 82 12 c0 01              t0 = u64 [sp + 0x1c0]
  1765: 82 1b c8 01              a4 = u64 [sp + 0x1c8]
  1769: 82 1a d0 01              a3 = u64 [sp + 0x1d0]
  1773: 82 18 d8 01              a1 = u64 [sp + 0x1d8]
  1777: 82 14 e0 01              t2 = u64 [sp + 0x1e0]
  1781: 82 17 90 00              a0 = u64 [sp + 0x90]
  1785: d3 57 07                 a0 = a0 ^ s0
  1788: 7b 17 20 01              u64 [sp + 0x120] = a0
  1792: 82 17 88 00              a0 = u64 [sp + 0x88]
  1796: 82 19 68 01              a2 = u64 [sp + 0x168]
  1800: d3 97 07                 a0 = a0 ^ a2
  1803: 7b 17 30 01              u64 [sp + 0x130] = a0
  1807: 33 05 0c                 s0 = 0xc
  1810: 82 17 08                 a0 = u64 [sp + 0x8]
  1813: 7b 16 38                 u64 [sp + 0x38] = s1
  1816: 7b 16 18 01              u64 [sp + 0x118] = s1
  1820: 64 76                    s1 = a0
  1822: 7b 1b 58                 u64 [sp + 0x58] = a4
  1825: 64 b9                    a2 = a4
  1827: 82 17                    a0 = u64 [sp]
  1829: 7b 17 40 01              u64 [sp + 0x140] = a0
  1833: 7b 1c 40                 u64 [sp + 0x40] = a5
  1836: 7b 1c 28 01              u64 [sp + 0x128] = a5
  1840: 7b 1a 60                 u64 [sp + 0x60] = a3
  1843: 64 a0                    ra = a3
  1845: 82 17 30                 a0 = u64 [sp + 0x30]
  1848: 7b 17 50 01              u64 [sp + 0x150] = a0
  1852: 7b 13 48                 u64 [sp + 0x48] = t1
  1855: 7b 13 38 01              u64 [sp + 0x138] = t1
  1859: 7b 18 68                 u64 [sp + 0x68] = a1
  1862: 64 8a                    a3 = a1
  1864: 82 1b 18                 a4 = u64 [sp + 0x18]
  1867: 82 17 28                 a0 = u64 [sp + 0x28]
  1870: 7b 17 60 01              u64 [sp + 0x160] = a0
  1874: 7b 12 50                 u64 [sp + 0x50] = t0
  1877: 64 2c                    a5 = t0
  1879: 7b 14 70                 u64 [sp + 0x70] = t2
  1882: 64 42                    t0 = t2
  1884: 82 17 10                 a0 = u64 [sp + 0x10]
  1887: 7b 17 48 01              u64 [sp + 0x148] = a0
  1891: 82 17 20                 a0 = u64 [sp + 0x20]
  1894: 7b 17 58 01              u64 [sp + 0x158] = a0
  1898: 01                       fallthrough
      :                          @114
  1899: 7b 10 10 01              u64 [sp + 0x110] = ra
  1903: 7b 1a 68 01              u64 [sp + 0x168] = a3
  1907: 7c 60 f9                 ra = u8 [s1 + 0xfffffffffffffff9]
  1910: 56 10 0f 8e 0d           jump @179 if ra >u 15
      :                          @115
  1915: 7c 67 fa                 a0 = u8 [s1 + 0xfffffffffffffffa]
  1918: 33 08 10                 a1 = 0x10
  1921: ae 87 84 0d              jump @180 if a0 >=u a1
      :                          @116
  1925: 7b 1b 08 01              u64 [sp + 0x108] = a4
  1929: 7c 63 fb                 t1 = u8 [s1 + 0xfffffffffffffffb]
  1932: 55 13 10 7b 0d           jump @182 if t1 >=u 16
      :                          @117
  1937: 7b 15 00 01              u64 [sp + 0x100] = s0
  1941: 7c 64 fc                 t2 = u8 [s1 + 0xfffffffffffffffc]
  1944: 55 14 10 6e 0d           jump @181 if t2 >=u 16
      :                          @118
  1949: 7b 1c f8 00              u64 [sp + 0xf8] = a5
  1953: 7c 6c fd                 a5 = u8 [s1 + 0xfffffffffffffffd]
  1956: 55 1c 10 5d 0d           jump @176 if a5 >=u 16
      :                          @119
  1961: 7b 12 f0 00              u64 [sp + 0xf0] = t0
  1965: 7c 62 fe                 t0 = u8 [s1 + 0xfffffffffffffffe]
  1968: 55 12 10 52 0d           jump @177 if t0 >=u 16
      :                          @120
  1973: 7c 6a ff                 a3 = u8 [s1 + 0xffffffffffffffff]
  1976: 55 1a 10 4b 0d           jump @178 if a3 >=u 16
      :                          @121
  1981: 7c 6b                    a4 = u8 [s1]
  1983: 55 1b 10 49 0d           jump @183 if a4 >=u 16
      :                          @122
  1988: 7c 65 01                 s0 = u8 [s1 + 0x1]
  1991: 55 15 10 b2 0c           jump @170 if s0 >=u 16
      :                          @123
  1996: 7b 15 e8 00              u64 [sp + 0xe8] = s0
  2000: 7c 65 02                 s0 = u8 [s1 + 0x2]
  2003: 55 15 10 a6 0c           jump @170 if s0 >=u 16
      :                          @124
  2008: 7b 15 e0 00              u64 [sp + 0xe0] = s0
  2012: 7c 65 03                 s0 = u8 [s1 + 0x3]
  2015: 55 15 10 9a 0c           jump @170 if s0 >=u 16
      :                          @125
  2020: 7b 15 d8 00              u64 [sp + 0xd8] = s0
  2024: 7c 65 04                 s0 = u8 [s1 + 0x4]
  2027: 55 15 10 8e 0c           jump @170 if s0 >=u 16
      :                          @126
  2032: 7b 15 d0 00              u64 [sp + 0xd0] = s0
  2036: 7c 65 05                 s0 = u8 [s1 + 0x5]
  2039: 55 15 10 82 0c           jump @170 if s0 >=u 16
      :                          @127
  2044: 7b 15 c8 00              u64 [sp + 0xc8] = s0
  2048: 7c 65 06                 s0 = u8 [s1 + 0x6]
  2051: 55 15 10 76 0c           jump @170 if s0 >=u 16
      :                          @128
  2056: 7b 15 c0 00              u64 [sp + 0xc0] = s0
  2060: 7c 65 07                 s0 = u8 [s1 + 0x7]
  2063: 55 15 10 6a 0c           jump @170 if s0 >=u 16
      :                          @129
  2068: 7b 15 b8 00              u64 [sp + 0xb8] = s0
  2072: 7c 65 08                 s0 = u8 [s1 + 0x8]
  2075: 55 15 10 5e 0c           jump @170 if s0 >=u 16
      :                          @130
  2080: 97 00 03                 ra = ra << 0x3
  2083: 95 18 08 03              a1 = sp + 0x308
  2087: c8 80 00                 ra = ra + a1
  2090: 7b 15 a8 00              u64 [sp + 0xa8] = s0
  2094: 82 05                    s0 = u64 [ra]
  2096: 97 77 03                 a0 = a0 << 0x3
  2099: c8 87 07                 a0 = a0 + a1
  2102: 82 77                    a0 = u64 [a0]
  2104: 7b 16 b0 00              u64 [sp + 0xb0] = s1
  2108: 7b 19 a0 00              u64 [sp + 0xa0] = a2
  2112: 82 16 18 01              s1 = u64 [sp + 0x118]
  2116: c8 96 06                 s1 = s1 + a2
  2119: c8 65 05                 s0 = s0 + s1
  2122: 82 19 20 01              a2 = u64 [sp + 0x120]
  2126: d3 59 09                 a2 = a2 ^ s0
  2129: 7b 19 18 01              u64 [sp + 0x118] = a2
  2133: c8 57 07                 a0 = a0 + s0
  2136: 7b 17 20 01              u64 [sp + 0x120] = a0
  2140: 97 33 03                 t1 = t1 << 0x3
  2143: c8 83 03                 t1 = t1 + a1
  2146: 82 37                    a0 = u64 [t1]
  2148: 97 44 03                 t2 = t2 << 0x3
  2151: c8 84 04                 t2 = t2 + a1
  2154: 82 45                    s0 = u64 [t2]
  2156: 82 10 10 01              ra = u64 [sp + 0x110]
  2160: 82 16 28 01              s1 = u64 [sp + 0x128]
  2164: c8 06 06                 s1 = s1 + ra
  2167: c8 67 07                 a0 = a0 + s1
  2170: 82 19 30 01              a2 = u64 [sp + 0x130]
  2174: d3 97 03                 t1 = a0 ^ a2
  2177: c8 57 04                 t2 = a0 + s0
  2180: 97 cc 03                 a5 = a5 << 0x3
  2183: c8 8c 0c                 a5 = a5 + a1
  2186: 82 c7                    a0 = u64 [a5]
  2188: 97 22 03                 t0 = t0 << 0x3
  2191: c8 82 02                 t0 = t0 + a1
  2194: 82 2c                    a5 = u64 [t0]
  2196: 82 16 38 01              s1 = u64 [sp + 0x138]
  2200: 82 18 68 01              a1 = u64 [sp + 0x168]
  2204: c8 86 06                 s1 = s1 + a1
  2207: c8 67 07                 a0 = a0 + s1
  2210: 82 19 08 01              a2 = u64 [sp + 0x108]
  2214: d3 79 09                 a2 = a2 ^ a0
  2217: 7b 19 38 01              u64 [sp + 0x138] = a2
  2221: c8 c7 07                 a0 = a0 + a5
  2224: 7b 17 30 01              u64 [sp + 0x130] = a0
  2228: 97 aa 03                 a3 = a3 << 0x3
  2231: 95 18 08 03              a1 = sp + 0x308
  2235: c8 8a 0a                 a3 = a3 + a1
  2238: 82 a7                    a0 = u64 [a3]
  2240: 97 bb 03                 a4 = a4 << 0x3
  2243: c8 8b 0b                 a4 = a4 + a1
  2246: 82 ba                    a3 = u64 [a4]
  2248: 82 16 f0 00              s1 = u64 [sp + 0xf0]
  2252: 82 1b f8 00              a4 = u64 [sp + 0xf8]
  2256: c8 6b 0b                 a4 = a4 + s1
  2259: c8 b7 07                 a0 = a0 + a4
  2262: 82 1b 48 01              a4 = u64 [sp + 0x148]
  2266: d3 7b 0b                 a4 = a4 ^ a0
  2269: c8 a7 02                 t0 = a0 + a3
  2272: 82 17 18 01              a0 = u64 [sp + 0x118]
  2276: 9e 77 20                 a0 = a0 >>r 0x20
  2279: 82 1a 40 01              a3 = u64 [sp + 0x140]
  2283: c8 7a 0a                 a3 = a3 + a0
  2286: 82 15 a0 00              s0 = u64 [sp + 0xa0]
  2290: d3 a5 05                 s0 = s0 ^ a3
  2293: 82 19 e8 00              a2 = u64 [sp + 0xe8]
  2297: 97 99 03                 a2 = a2 << 0x3
  2300: c8 89 09                 a2 = a2 + a1
  2303: 82 99                    a2 = u64 [a2]
  2305: 9e 58 18                 a1 = s0 >>r 0x18
  2308: 7b 18 48 01              u64 [sp + 0x148] = a1
  2312: 82 15 20 01              s0 = u64 [sp + 0x120]
  2316: c8 85 05                 s0 = s0 + a1
  2319: d3 57 07                 a0 = a0 ^ s0
  2322: c8 59 09                 a2 = a2 + s0
  2325: 9e 35 20                 s0 = t1 >>r 0x20
  2328: 82 18 50 01              a1 = u64 [sp + 0x150]
  2332: c8 85 03                 t1 = s0 + a1
  2335: d3 03 0c                 a5 = t1 ^ ra
  2338: 9e cc 18                 a5 = a5 >>r 0x18
  2341: c8 c4 04                 t2 = t2 + a5
  2344: d3 54 05                 s0 = t2 ^ s0
  2347: 9e 58 10                 a1 = s0 >>r 0x10
  2350: 7b 18 40 01              u64 [sp + 0x140] = a1
  2354: c8 38 08                 a1 = a1 + t1
  2357: 7b 18 50 01              u64 [sp + 0x150] = a1
  2361: d3 c8 08                 a1 = a1 ^ a5
  2364: 9e 88 3f                 a1 = a1 >>r 0x3f
  2367: 7b 18 28 01              u64 [sp + 0x128] = a1
  2371: 9e bb 20                 a4 = a4 >>r 0x20
  2374: 82 10 58 01              ra = u64 [sp + 0x158]
  2378: c8 b0 00                 ra = ra + a4
  2381: d3 60 0c                 a5 = ra ^ s1
  2384: 9e c5 18                 s0 = a5 >>r 0x18
  2387: c8 52 03                 t1 = t0 + s0
  2390: d3 b3 0b                 a4 = t1 ^ a4
  2393: 9e bb 10                 a4 = a4 >>r 0x10
  2396: c8 b0 00                 ra = ra + a4
  2399: 7b 10 08 01              u64 [sp + 0x108] = ra
  2403: 82 1c e0 00              a5 = u64 [sp + 0xe0]
  2407: 97 cc 03                 a5 = a5 << 0x3
  2410: 95 16 08 03              s1 = sp + 0x308
  2414: c8 6c 0c                 a5 = a5 + s1
  2417: 82 cc                    a5 = u64 [a5]
  2419: 82 12 d8 00              t0 = u64 [sp + 0xd8]
  2423: 97 22 03                 t0 = t0 << 0x3
  2426: c8 62 02                 t0 = t0 + s1
  2429: 82 22                    t0 = u64 [t0]
  2431: c8 89 09                 a2 = a2 + a1
  2434: d3 9b 0b                 a4 = a4 ^ a2
  2437: 7b 1b 20 01              u64 [sp + 0x120] = a4
  2441: c8 c9 09                 a2 = a2 + a5
  2444: 7b 19 58 01              u64 [sp + 0x158] = a2
  2448: c8 24 04                 t2 = t2 + t0
  2451: 9e 76 10                 s1 = a0 >>r 0x10
  2454: c8 6a 0a                 a3 = a3 + s1
  2457: 7b 1a 10 01              u64 [sp + 0x110] = a3
  2461: 82 17 38 01              a0 = u64 [sp + 0x138]
  2465: 9e 79 20                 a2 = a0 >>r 0x20
  2468: 82 12 60 01              t0 = u64 [sp + 0x160]
  2472: c8 92 02                 t0 = t0 + a2
  2475: 82 17 68 01              a0 = u64 [sp + 0x168]
  2479: d3 72 0c                 a5 = t0 ^ a0
  2482: 9e cb 18                 a4 = a5 >>r 0x18
  2485: 82 17 30 01              a0 = u64 [sp + 0x130]
  2489: c8 b7 07                 a0 = a0 + a4
  2492: d3 79 09                 a2 = a2 ^ a0
  2495: 9e 90 10                 ra = a2 >>r 0x10
  2498: c8 02 02                 t0 = t0 + ra
  2501: d3 b2 0b                 a4 = t0 ^ a4
  2504: 9e b8 3f                 a1 = a4 >>r 0x3f
  2507: 7b 18 38 01              u64 [sp + 0x138] = a1
  2511: 82 1a d0 00              a3 = u64 [sp + 0xd0]
  2515: 97 aa 03                 a3 = a3 << 0x3
  2518: 95 19 08 03              a2 = sp + 0x308
  2522: c8 9a 0a                 a3 = a3 + a2
  2525: 82 aa                    a3 = u64 [a3]
  2527: 82 1b c8 00              a4 = u64 [sp + 0xc8]
  2531: 97 bb 03                 a4 = a4 << 0x3
  2534: c8 9b 0b                 a4 = a4 + a2
  2537: 82 bb                    a4 = u64 [a4]
  2539: c8 84 04                 t2 = t2 + a1
  2542: d3 64 06                 s1 = t2 ^ s1
  2545: c8 4a 0a                 a3 = a3 + t2
  2548: 7b 1a 68 01              u64 [sp + 0x168] = a3
  2552: c8 7b 0b                 a4 = a4 + a0
  2555: 82 18 08 01              a1 = u64 [sp + 0x108]
  2559: d3 58 07                 a0 = a1 ^ s0
  2562: 9e 7c 3f                 a5 = a0 >>r 0x3f
  2565: 82 1a c0 00              a3 = u64 [sp + 0xc0]
  2569: 97 aa 03                 a3 = a3 << 0x3
  2572: c8 9a 0a                 a3 = a3 + a2
  2575: 82 aa                    a3 = u64 [a3]
  2577: 82 15 b8 00              s0 = u64 [sp + 0xb8]
  2581: 97 55 03                 s0 = s0 << 0x3
  2584: c8 95 05                 s0 = s0 + a2
  2587: 82 55                    s0 = u64 [s0]
  2589: c8 cb 0b                 a4 = a4 + a5
  2592: 82 17 40 01              a0 = u64 [sp + 0x140]
  2596: d3 b7 07                 a0 = a0 ^ a4
  2599: 7b 17 30 01              u64 [sp + 0x130] = a0
  2603: c8 ba 0a                 a3 = a3 + a4
  2606: 7b 1a 40 01              u64 [sp + 0x140] = a3
  2610: c8 53 03                 t1 = t1 + s0
  2613: 82 1a 48 01              a3 = u64 [sp + 0x148]
  2617: 82 17 10 01              a0 = u64 [sp + 0x110]
  2621: d3 a7 0b                 a4 = a0 ^ a3
  2624: 82 15 a8 00              s0 = u64 [sp + 0xa8]
  2628: 97 55 03                 s0 = s0 << 0x3
  2631: c8 95 05                 s0 = s0 + a2
  2634: 82 55                    s0 = u64 [s0]
  2636: 9e bb 3f                 a4 = a4 >>r 0x3f
  2639: c8 b3 03                 t1 = t1 + a4
  2642: d3 03 04                 t2 = t1 ^ ra
  2645: c8 53 03                 t1 = t1 + s0
  2648: 82 19 20 01              a2 = u64 [sp + 0x120]
  2652: 9e 95 20                 s0 = a2 >>r 0x20
  2655: c8 25 09                 a2 = s0 + t0
  2658: 82 1a 28 01              a3 = u64 [sp + 0x128]
  2662: d3 a9 00                 ra = a2 ^ a3
  2665: 9e 00 18                 ra = ra >>r 0x18
  2668: 82 1a 58 01              a3 = u64 [sp + 0x158]
  2672: c8 0a 0a                 a3 = a3 + ra
  2675: 7b 1a 18 01              u64 [sp + 0x118] = a3
  2679: d3 a5 05                 s0 = s0 ^ a3
  2682: 9e 5a 10                 a3 = s0 >>r 0x10
  2685: 7b 1a 48 01              u64 [sp + 0x148] = a3
  2689: c8 a9 09                 a2 = a2 + a3
  2692: 7b 19 60 01              u64 [sp + 0x160] = a2
  2696: d3 09 09                 a2 = a2 ^ ra
  2699: 9e 90 3f                 ra = a2 >>r 0x3f
  2702: 9e 69 20                 a2 = s1 >>r 0x20
  2705: c8 89 05                 s0 = a2 + a1
  2708: 82 16 38 01              s1 = u64 [sp + 0x138]
  2712: d3 56 06                 s1 = s1 ^ s0
  2715: 9e 66 18                 s1 = s1 >>r 0x18
  2718: 82 18 68 01              a1 = u64 [sp + 0x168]
  2722: c8 68 08                 a1 = a1 + s1
  2725: 7b 18 28 01              u64 [sp + 0x128] = a1
  2729: d3 89 09                 a2 = a2 ^ a1
  2732: 9e 99 10                 a2 = a2 >>r 0x10
  2735: 7b 19 20 01              u64 [sp + 0x120] = a2
  2739: c8 59 09                 a2 = a2 + s0
  2742: 7b 19 58 01              u64 [sp + 0x158] = a2
  2746: d3 69 09                 a2 = a2 ^ s1
  2749: 82 16 b0 00              s1 = u64 [sp + 0xb0]
  2753: 9e 9a 3f                 a3 = a2 >>r 0x3f
  2756: 82 18 30 01              a1 = u64 [sp + 0x130]
  2760: 9e 89 20                 a2 = a1 >>r 0x20
  2763: c8 79 08                 a1 = a2 + a0
  2766: d3 c8 07                 a0 = a1 ^ a5
  2769: 9e 77 18                 a0 = a0 >>r 0x18
  2772: 82 12 40 01              t0 = u64 [sp + 0x140]
  2776: c8 72 02                 t0 = t0 + a0
  2779: 7b 12 38 01              u64 [sp + 0x138] = t0
  2783: d3 92 09                 a2 = t0 ^ a2
  2786: 9e 99 10                 a2 = a2 >>r 0x10
  2789: 7b 19 30 01              u64 [sp + 0x130] = a2
  2793: c8 98 08                 a1 = a1 + a2
  2796: 7b 18 40 01              u64 [sp + 0x140] = a1
  2800: d3 87 07                 a0 = a0 ^ a1
  2803: 9e 72 3f                 t0 = a0 >>r 0x3f
  2806: 9e 47 20                 a0 = t2 >>r 0x20
  2809: 82 18 50 01              a1 = u64 [sp + 0x150]
  2813: c8 78 08                 a1 = a1 + a0
  2816: d3 8b 0b                 a4 = a4 ^ a1
  2819: 9e b9 18                 a2 = a4 >>r 0x18
  2822: c8 93 0c                 a5 = t1 + a2
  2825: d3 c7 07                 a0 = a0 ^ a5
  2828: 9e 7b 10                 a4 = a0 >>r 0x10
  2831: c8 8b 07                 a0 = a4 + a1
  2834: 7b 17 50 01              u64 [sp + 0x150] = a0
  2838: d3 97 07                 a0 = a0 ^ a2
  2841: 9e 79 3f                 a2 = a0 >>r 0x3f
  2844: 82 15 00 01              s0 = u64 [sp + 0x100]
  2848: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  2851: 95 66 10                 s1 = s1 + 0x10
  2854: 52 05 45 fc              jump @114 if s0 != 0
      :                          @131
  2858: 33 03                    t1 = 0
  2860: 82 17 38                 a0 = u64 [sp + 0x38]
  2863: 82 18 18 01              a1 = u64 [sp + 0x118]
  2867: d3 87 07                 a0 = a0 ^ a1
  2870: 82 18 40 01              a1 = u64 [sp + 0x140]
  2874: d3 87 07                 a0 = a0 ^ a1
  2877: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  2881: 82 17 40                 a0 = u64 [sp + 0x40]
  2884: 82 18 28 01              a1 = u64 [sp + 0x128]
  2888: d3 87 07                 a0 = a0 ^ a1
  2891: 82 18 50 01              a1 = u64 [sp + 0x150]
  2895: d3 87 07                 a0 = a0 ^ a1
  2898: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  2902: 82 17 48                 a0 = u64 [sp + 0x48]
  2905: 82 18 60 01              a1 = u64 [sp + 0x160]
  2909: d3 87 07                 a0 = a0 ^ a1
  2912: 82 18 38 01              a1 = u64 [sp + 0x138]
  2916: d3 87 07                 a0 = a0 ^ a1
  2919: 7b 17 b8 01              u64 [sp + 0x1b8] = a0
  2923: 82 17 50                 a0 = u64 [sp + 0x50]
  2926: 82 18 58 01              a1 = u64 [sp + 0x158]
  2930: d3 87 07                 a0 = a0 ^ a1
  2933: d3 c7 07                 a0 = a0 ^ a5
  2936: 7b 17 c0 01              u64 [sp + 0x1c0] = a0
  2940: 82 17 58                 a0 = u64 [sp + 0x58]
  2943: 82 18 20 01              a1 = u64 [sp + 0x120]
  2947: d3 87 07                 a0 = a0 ^ a1
  2950: d3 97 07                 a0 = a0 ^ a2
  2953: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
  2957: 82 17 60                 a0 = u64 [sp + 0x60]
  2960: d3 70 07                 a0 = ra ^ a0
  2963: 82 18 30 01              a1 = u64 [sp + 0x130]
  2967: d3 87 07                 a0 = a0 ^ a1
  2970: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
  2974: 82 17 68                 a0 = u64 [sp + 0x68]
  2977: d3 a7 07                 a0 = a0 ^ a3
  2980: d3 b7 07                 a0 = a0 ^ a4
  2983: 7b 17 d8 01              u64 [sp + 0x1d8] = a0
  2987: 82 17 70                 a0 = u64 [sp + 0x70]
  2990: 82 18 48 01              a1 = u64 [sp + 0x148]
  2994: d3 87 07                 a0 = a0 ^ a1
  2997: d3 27 07                 a0 = a0 ^ t0
  3000: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
  3004: 49 21 78 02              u64 [sp + 632] = 0
  3008: 82 1b 98 00              a4 = u64 [sp + 0x98]
  3012: 82 1c 78                 a5 = u64 [sp + 0x78]
  3015: c9 cb 07                 a0 = a4 - a5
  3018: 33 08 80 00              a1 = 0x80
  3022: e6 87 05                 s0 = minu(a0, a1)
  3025: 01                       fallthrough
      :                          @132
  3026: c8 c5 06                 s1 = s0 + a5
  3029: ac 56 37 09              jump @187 if s1 <u s0
      :                          @133
  3033: ac 6b 34 09              jump @188 if a4 <u s1
      :                          @134
  3037: 95 17 f8 01              a0 = sp + 0x1f8
  3041: c8 37 07                 a0 = a0 + t1
  3044: 82 18 80 00              a1 = u64 [sp + 0x80]
  3048: c8 c8 08                 a1 = a1 + a5
  3051: 64 59                    a2 = s0
  3053: 50 10 68 91 11           ra = 104, jump @377
      :                          @135 [@dyn 52]
  3058: 82 17 78 02              a0 = u64 [sp + 0x278]
  3062: c8 57 03                 t1 = a0 + s0
  3065: 7b 13 78 02              u64 [sp + 0x278] = t1
  3069: 64 6c                    a5 = s1
  3071: 82 1b 98 00              a4 = u64 [sp + 0x98]
  3075: ac b6 79 fa              jump @105 if s1 <u a4
      :                          @136
  3079: 7c 17 80 02              a0 = u8 [sp + 0x280]
  3083: 51 07 6f 08              jump @171 if a0 == 0
      :                          @137
  3087: 33 05                    s0 = 0
  3089: 33 06                    s1 = 0
  3091: 33 0c                    a5 = 0
  3093: 33 0b                    a4 = 0
  3095: 33 00                    ra = 0
  3097: 33 04                    t2 = 0
  3099: 33 03                    t1 = 0
  3101: 33 02                    t0 = 0
  3103: 33 0a                    a3 = 0
  3105: 33 09                    a2 = 0
  3107: 33 08                    a1 = 0
  3109: 49 21 c8 00              u64 [sp + 200] = 0
  3113: 49 21 d0 00              u64 [sp + 208] = 0
  3117: 49 21 d8 00              u64 [sp + 216] = 0
  3121: 49 21 e0 00              u64 [sp + 224] = 0
  3125: 49 21 e8 00              u64 [sp + 232] = 0
  3129: 49 21 f0 00              u64 [sp + 240] = 0
  3133: 49 21 f8 00              u64 [sp + 248] = 0
  3137: 49 21 00 01              u64 [sp + 256] = 0
  3141: 49 21 08 01              u64 [sp + 264] = 0
  3145: 49 21 10 01              u64 [sp + 272] = 0
  3149: 49 21 18 01              u64 [sp + 280] = 0
  3153: 49 21 20 01              u64 [sp + 288] = 0
  3157: 49 21 28 01              u64 [sp + 296] = 0
  3161: 49 21 30 01              u64 [sp + 304] = 0
  3165: 49 21 38 01              u64 [sp + 312] = 0
  3169: 49 21 40 01              u64 [sp + 320] = 0
  3173: 49 21 48 01              u64 [sp + 328] = 0
  3177: 49 21 50 01              u64 [sp + 336] = 0
  3181: 49 21 58 01              u64 [sp + 344] = 0
  3185: 49 21 60 01              u64 [sp + 352] = 0
  3189: 49 21 68 01              u64 [sp + 360] = 0
  3193: 28 e8 05                 jump @161
      :                          @138
  3196: 7b 1c 58                 u64 [sp + 0x58] = a5
  3199: 95 17 88 02              a0 = sp + 0x288
  3203: 33 09 80 00              a2 = 0x80
  3207: 33 08                    a1 = 0
  3209: 50 10 6a a7 11           ra = 106, jump @395
      :                          @139 [@dyn 53]
  3214: 3a 07 08 00 03           a0 = u64 [0x30008]
  3219: 7b 17 60                 u64 [sp + 0x60] = a0
  3222: 3a 07 10 00 03           a0 = u64 [0x30010]
  3227: 7b 17 68                 u64 [sp + 0x68] = a0
  3230: 3a 07 18 00 03           a0 = u64 [0x30018]
  3235: 7b 17 70                 u64 [sp + 0x70] = a0
  3238: 3a 07 30 00 03           a0 = u64 [0x30030]
  3243: 7b 17 60 01              u64 [sp + 0x160] = a0
  3247: 3a 07 38 00 03           a0 = u64 [0x30038]
  3252: 7b 17 40 01              u64 [sp + 0x140] = a0
  3256: 33 09                    a2 = 0
  3258: 82 17 88 00              a0 = u64 [sp + 0x88]
  3262: 7b 17 30 01              u64 [sp + 0x130] = a0
  3266: 7b 16 28 01              u64 [sp + 0x128] = s1
  3270: 01                       fallthrough
      :                          @140
  3271: 95 17 88 02              a0 = sp + 0x288
  3275: 95 18 f8 01              a1 = sp + 0x1f8
  3279: 50 10 6c af 10           ra = 108, jump @377
      :                          @141 [@dyn 54]
  3284: 95 17 08 03              a0 = sp + 0x308
  3288: 95 18 88 02              a1 = sp + 0x288
  3292: 33 09 80 00              a2 = 0x80
  3296: 50 10 6e 9e 10           ra = 110, jump @377
      :                          @142 [@dyn 55]
  3301: 33 0b 4b 02 01           a4 = 0x1024b
  3306: 3a 00 18 00 03           ra = u64 [0x30018]
  3311: 3a 07 38 00 03           a0 = u64 [0x30038]
  3316: 7b 17 38 01              u64 [sp + 0x138] = a0
  3320: 3a 07 10 00 03           a0 = u64 [0x30010]
  3325: 7b 17 58 01              u64 [sp + 0x158] = a0
  3329: 3a 07 48 00 03           a0 = u64 [0x30048]
  3334: 7b 17 20 01              u64 [sp + 0x120] = a0
  3338: 3a 07 08 00 03           a0 = u64 [0x30008]
  3343: 7b 17 50 01              u64 [sp + 0x150] = a0
  3347: 3a 05 40 00 03           s0 = u64 [0x30040]
  3352: 33 06 0c                 s1 = 0xc
  3355: 33 0a 10                 a3 = 0x10
  3358: 82 17 58                 a0 = u64 [sp + 0x58]
  3361: 7b 17 48 01              u64 [sp + 0x148] = a0
  3365: 82 19 60                 a2 = u64 [sp + 0x60]
  3368: 64 9c                    a5 = a2
  3370: 82 14 68                 t2 = u64 [sp + 0x68]
  3373: 64 42                    t0 = t2
  3375: 82 18 70                 a1 = u64 [sp + 0x70]
  3378: 64 83                    t1 = a1
  3380: 7b 18 70                 u64 [sp + 0x70] = a1
  3383: 7b 14 68                 u64 [sp + 0x68] = t2
  3386: 7b 19 60                 u64 [sp + 0x60] = a2
  3389: 01                       fallthrough
      :                          @143
  3390: 7b 1c 18 01              u64 [sp + 0x118] = a5
  3394: 7c b4 f9                 t2 = u8 [a4 + 0xfffffffffffffff9]
  3397: 56 14 0f c1 07           jump @181 if t2 >u 15
      :                          @144
  3402: 7c b7 fa                 a0 = u8 [a4 + 0xfffffffffffffffa]
  3405: 55 17 10 b8 07           jump @180 if a0 >=u 16
      :                          @145
  3410: 64 59                    a2 = s0
  3412: 7c b5 fb                 s0 = u8 [a4 + 0xfffffffffffffffb]
  3415: 55 15 10 22 07           jump @170 if s0 >=u 16
      :                          @146
  3420: 7b 12 10 01              u64 [sp + 0x110] = t0
  3424: 7c b2 fc                 t0 = u8 [a4 + 0xfffffffffffffffc]
  3427: 55 12 10 9f 07           jump @177 if t0 >=u 16
      :                          @147
  3432: 7b 13 08 01              u64 [sp + 0x108] = t1
  3436: 7c bc fd                 a5 = u8 [a4 + 0xfffffffffffffffd]
  3439: 55 1c 10 92 07           jump @176 if a5 >=u 16
      :                          @148
  3444: 7b 19 f8 00              u64 [sp + 0xf8] = a2
  3448: 7b 10 00 01              u64 [sp + 0x100] = ra
  3452: 7c b0 fe                 ra = u8 [a4 + 0xfffffffffffffffe]
  3455: 55 10 10 85 07           jump @179 if ra >=u 16
      :                          @149
  3460: 7b 15 f0 00              u64 [sp + 0xf0] = s0
  3464: 33 05 10                 s0 = 0x10
  3467: 7c ba ff                 a3 = u8 [a4 + 0xffffffffffffffff]
  3470: ae 5a 75 07              jump @178 if a3 >=u s0
      :                          @150
  3474: 7b 1b 68 01              u64 [sp + 0x168] = a4
  3478: 7c bb                    a4 = u8 [a4]
  3480: 55 1b 10 70 07           jump @183 if a4 >=u 16
      :                          @151
  3485: 82 19 68 01              a2 = u64 [sp + 0x168]
  3489: 7c 98 01                 a1 = u8 [a2 + 0x1]
  3492: 55 18 10 66 07           jump @185 if a1 >=u 16
      :                          @152
  3497: 7b 16 e8 00              u64 [sp + 0xe8] = s1
  3501: 82 16 68 01              s1 = u64 [sp + 0x168]
  3505: 7c 63 02                 t1 = u8 [s1 + 0x2]
  3508: 55 13 10 53 07           jump @182 if t1 >=u 16
      :                          @153
  3513: 7b 12 d8 00              u64 [sp + 0xd8] = t0
  3517: 7b 1c e0 00              u64 [sp + 0xe0] = a5
  3521: 82 16 68 01              s1 = u64 [sp + 0x168]
  3525: 7c 62 03                 t0 = u8 [s1 + 0x3]
  3528: 55 12 10 3a 07           jump @177 if t0 >=u 16
      :                          @154
  3533: 82 16 68 01              s1 = u64 [sp + 0x168]
  3537: 7c 6c 04                 a5 = u8 [s1 + 0x4]
  3540: 55 1c 10 2d 07           jump @176 if a5 >=u 16
      :                          @155
  3545: 7b 1a d0 00              u64 [sp + 0xd0] = a3
  3549: 82 16 68 01              s1 = u64 [sp + 0x168]
  3553: 7c 6a 05                 a3 = u8 [s1 + 0x5]
  3556: 55 1a 10 1f 07           jump @178 if a3 >=u 16
      :                          @156
  3561: 82 16 68 01              s1 = u64 [sp + 0x168]
  3565: 7c 69 06                 a2 = u8 [s1 + 0x6]
  3568: 55 19 10 1b 07           jump @186 if a2 >=u 16
      :                          @157
  3573: 82 16 68 01              s1 = u64 [sp + 0x168]
  3577: 7c 66 07                 s1 = u8 [s1 + 0x7]
  3580: 55 16 10 0d 07           jump @184 if s1 >=u 16
      :                          @158
  3585: 7b 16 c8 00              u64 [sp + 0xc8] = s1
  3589: 82 16 68 01              s1 = u64 [sp + 0x168]
  3593: 7c 66 08                 s1 = u8 [s1 + 0x8]
  3596: 55 16 10 fd 06           jump @184 if s1 >=u 16
      :                          @159
  3601: 7b 1b 78                 u64 [sp + 0x78] = a4
  3604: 64 0b                    a4 = ra
  3606: 97 40 03                 ra = t2 << 0x3
  3609: 7b 18 a8 00              u64 [sp + 0xa8] = a1
  3613: 95 18 08 03              a1 = sp + 0x308
  3617: c8 80 00                 ra = ra + a1
  3620: 82 05                    s0 = u64 [ra]
  3622: 97 77 03                 a0 = a0 << 0x3
  3625: c8 87 07                 a0 = a0 + a1
  3628: 82 70                    ra = u64 [a0]
  3630: 7b 16 c0 00              u64 [sp + 0xc0] = s1
  3634: 82 16 48 01              s1 = u64 [sp + 0x148]
  3638: 82 17 90 00              a0 = u64 [sp + 0x90]
  3642: c8 76 06                 s1 = s1 + a0
  3645: c8 65 05                 s0 = s0 + s1
  3648: 82 16 28 01              s1 = u64 [sp + 0x128]
  3652: d3 56 06                 s1 = s1 ^ s0
  3655: 7b 16 80 00              u64 [sp + 0x80] = s1
  3659: c8 05 07                 a0 = s0 + ra
  3662: 7b 17 98 00              u64 [sp + 0x98] = a0
  3666: 7b 19 48 01              u64 [sp + 0x148] = a2
  3670: 7b 1a 28 01              u64 [sp + 0x128] = a3
  3674: 7b 1c b8 00              u64 [sp + 0xb8] = a5
  3678: 7b 12 b0 00              u64 [sp + 0xb0] = t0
  3682: 7b 13 a0 00              u64 [sp + 0xa0] = t1
  3686: 82 13 f0 00              t1 = u64 [sp + 0xf0]
  3690: 97 33 03                 t1 = t1 << 0x3
  3693: c8 83 03                 t1 = t1 + a1
  3696: 82 37                    a0 = u64 [t1]
  3698: 82 14 d8 00              t2 = u64 [sp + 0xd8]
  3702: 97 44 03                 t2 = t2 << 0x3
  3705: c8 84 04                 t2 = t2 + a1
  3708: 82 45                    s0 = u64 [t2]
  3710: 82 10 88 00              ra = u64 [sp + 0x88]
  3714: 82 16 18 01              s1 = u64 [sp + 0x118]
  3718: c8 06 06                 s1 = s1 + ra
  3721: c8 67 07                 a0 = a0 + s1
  3724: 82 16 30 01              s1 = u64 [sp + 0x130]
  3728: d3 76 06                 s1 = s1 ^ a0
  3731: 7b 16 18 01              u64 [sp + 0x118] = s1
  3735: c8 57 04                 t2 = a0 + s0
  3738: 82 1c e0 00              a5 = u64 [sp + 0xe0]
  3742: 97 cc 03                 a5 = a5 << 0x3
  3745: c8 8c 0c                 a5 = a5 + a1
  3748: 82 c7                    a0 = u64 [a5]
  3750: 97 b2 03                 t0 = a4 << 0x3
  3753: c8 82 02                 t0 = t0 + a1
  3756: 82 2c                    a5 = u64 [t0]
  3758: 82 16 10 01              s1 = u64 [sp + 0x110]
  3762: 82 18 60 01              a1 = u64 [sp + 0x160]
  3766: c8 86 06                 s1 = s1 + a1
  3769: c8 67 07                 a0 = a0 + s1
  3772: 82 16 20 01              s1 = u64 [sp + 0x120]
  3776: d3 76 06                 s1 = s1 ^ a0
  3779: 7b 16 30 01              u64 [sp + 0x130] = s1
  3783: c8 c7 07                 a0 = a0 + a5
  3786: 7b 17 20 01              u64 [sp + 0x120] = a0
  3790: 82 1a d0 00              a3 = u64 [sp + 0xd0]
  3794: 97 aa 03                 a3 = a3 << 0x3
  3797: 95 18 08 03              a1 = sp + 0x308
  3801: c8 8a 0a                 a3 = a3 + a1
  3804: 82 a7                    a0 = u64 [a3]
  3806: 82 1b 78                 a4 = u64 [sp + 0x78]
  3809: 97 bb 03                 a4 = a4 << 0x3
  3812: c8 8b 0b                 a4 = a4 + a1
  3815: 82 ba                    a3 = u64 [a4]
  3817: 82 16 40 01              s1 = u64 [sp + 0x140]
  3821: 82 1b 08 01              a4 = u64 [sp + 0x108]
  3825: c8 6b 0b                 a4 = a4 + s1
  3828: c8 b7 07                 a0 = a0 + a4
  3831: 82 1b 38 01              a4 = u64 [sp + 0x138]
  3835: d3 7b 0b                 a4 = a4 ^ a0
  3838: c8 a7 02                 t0 = a0 + a3
  3841: 82 17 80 00              a0 = u64 [sp + 0x80]
  3845: 9e 77 20                 a0 = a0 >>r 0x20
  3848: 82 1a f8 00              a3 = u64 [sp + 0xf8]
  3852: c8 7a 0a                 a3 = a3 + a0
  3855: 82 15 90 00              s0 = u64 [sp + 0x90]
  3859: d3 a5 05                 s0 = s0 ^ a3
  3862: 82 19 a8 00              a2 = u64 [sp + 0xa8]
  3866: 97 99 03                 a2 = a2 << 0x3
  3869: c8 89 09                 a2 = a2 + a1
  3872: 82 99                    a2 = u64 [a2]
  3874: 9e 58 18                 a1 = s0 >>r 0x18
  3877: 7b 18 38 01              u64 [sp + 0x138] = a1
  3881: 82 15 98 00              s0 = u64 [sp + 0x98]
  3885: c8 85 05                 s0 = s0 + a1
  3888: d3 75 03                 t1 = s0 ^ a0
  3891: c8 59 09                 a2 = a2 + s0
  3894: 82 17 18 01              a0 = u64 [sp + 0x118]
  3898: 9e 75 20                 s0 = a0 >>r 0x20
  3901: 82 18 50 01              a1 = u64 [sp + 0x150]
  3905: c8 58 08                 a1 = a1 + s0
  3908: d3 08 0c                 a5 = a1 ^ ra
  3911: 9e cc 18                 a5 = a5 >>r 0x18
  3914: c8 c4 04                 t2 = t2 + a5
  3917: d3 54 05                 s0 = t2 ^ s0
  3920: 9e 57 10                 a0 = s0 >>r 0x10
  3923: 7b 17 18 01              u64 [sp + 0x118] = a0
  3927: c8 78 08                 a1 = a1 + a0
  3930: 7b 18 50 01              u64 [sp + 0x150] = a1
  3934: d3 c8 08                 a1 = a1 ^ a5
  3937: 9e 87 3f                 a0 = a1 >>r 0x3f
  3940: 7b 17 08 01              u64 [sp + 0x108] = a0
  3944: 9e bb 20                 a4 = a4 >>r 0x20
  3947: 82 10 00 01              ra = u64 [sp + 0x100]
  3951: c8 b0 00                 ra = ra + a4
  3954: d3 60 0c                 a5 = ra ^ s1
  3957: 9e c5 18                 s0 = a5 >>r 0x18
  3960: c8 52 02                 t0 = t0 + s0
  3963: 7b 12 40 01              u64 [sp + 0x140] = t0
  3967: d3 b2 0b                 a4 = t0 ^ a4
  3970: 9e bb 10                 a4 = a4 >>r 0x10
  3973: c8 0b 08                 a1 = a4 + ra
  3976: 82 1c a0 00              a5 = u64 [sp + 0xa0]
  3980: 97 cc 03                 a5 = a5 << 0x3
  3983: 95 10 08 03              ra = sp + 0x308
  3987: c8 0c 0c                 a5 = a5 + ra
  3990: 82 cc                    a5 = u64 [a5]
  3992: 82 12 b0 00              t0 = u64 [sp + 0xb0]
  3996: 97 22 03                 t0 = t0 << 0x3
  3999: c8 02 02                 t0 = t0 + ra
  4002: 82 22                    t0 = u64 [t0]
  4004: c8 79 09                 a2 = a2 + a0
  4007: d3 9b 0b                 a4 = a4 ^ a2
  4010: 7b 1b 00 01              u64 [sp + 0x100] = a4
  4014: c8 c9 09                 a2 = a2 + a5
  4017: 7b 19 10 01              u64 [sp + 0x110] = a2
  4021: c8 24 04                 t2 = t2 + t0
  4024: 9e 36 10                 s1 = t1 >>r 0x10
  4027: c8 6a 0a                 a3 = a3 + s1
  4030: 7b 1a f8 00              u64 [sp + 0xf8] = a3
  4034: 82 17 30 01              a0 = u64 [sp + 0x130]
  4038: 9e 79 20                 a2 = a0 >>r 0x20
  4041: 82 12 58 01              t0 = u64 [sp + 0x158]
  4045: c8 92 02                 t0 = t0 + a2
  4048: 82 17 60 01              a0 = u64 [sp + 0x160]
  4052: d3 72 0c                 a5 = t0 ^ a0
  4055: 9e cb 18                 a4 = a5 >>r 0x18
  4058: 82 17 20 01              a0 = u64 [sp + 0x120]
  4062: c8 b7 07                 a0 = a0 + a4
  4065: d3 79 09                 a2 = a2 ^ a0
  4068: 9e 9c 10                 a5 = a2 >>r 0x10
  4071: c8 2c 09                 a2 = a5 + t0
  4074: d3 9b 0b                 a4 = a4 ^ a2
  4077: 9e b2 3f                 t0 = a4 >>r 0x3f
  4080: 82 1a b8 00              a3 = u64 [sp + 0xb8]
  4084: 97 aa 03                 a3 = a3 << 0x3
  4087: c8 0a 0a                 a3 = a3 + ra
  4090: 82 aa                    a3 = u64 [a3]
  4092: 82 1b 28 01              a4 = u64 [sp + 0x128]
  4096: 97 bb 03                 a4 = a4 << 0x3
  4099: c8 0b 0b                 a4 = a4 + ra
  4102: 82 bb                    a4 = u64 [a4]
  4104: c8 24 04                 t2 = t2 + t0
  4107: d3 64 06                 s1 = t2 ^ s1
  4110: c8 4a 0a                 a3 = a3 + t2
  4113: 7b 1a 60 01              u64 [sp + 0x160] = a3
  4117: c8 7b 0b                 a4 = a4 + a0
  4120: 64 84                    t2 = a1
  4122: d3 58 07                 a0 = a1 ^ s0
  4125: 9e 77 3f                 a0 = a0 >>r 0x3f
  4128: 82 1a 48 01              a3 = u64 [sp + 0x148]
  4132: 97 aa 03                 a3 = a3 << 0x3
  4135: c8 0a 0a                 a3 = a3 + ra
  4138: 82 aa                    a3 = u64 [a3]
  4140: 82 15 c8 00              s0 = u64 [sp + 0xc8]
  4144: 97 55 03                 s0 = s0 << 0x3
  4147: c8 05 05                 s0 = s0 + ra
  4150: 82 55                    s0 = u64 [s0]
  4152: c8 7b 0b                 a4 = a4 + a0
  4155: 82 18 18 01              a1 = u64 [sp + 0x118]
  4159: d3 b8 08                 a1 = a1 ^ a4
  4162: 7b 18 30 01              u64 [sp + 0x130] = a1
  4166: c8 ba 0a                 a3 = a3 + a4
  4169: 7b 1a 20 01              u64 [sp + 0x120] = a3
  4173: 82 13 40 01              t1 = u64 [sp + 0x140]
  4177: c8 53 03                 t1 = t1 + s0
  4180: 82 1a 38 01              a3 = u64 [sp + 0x138]
  4184: 82 18 f8 00              a1 = u64 [sp + 0xf8]
  4188: d3 a8 0b                 a4 = a1 ^ a3
  4191: 82 15 c0 00              s0 = u64 [sp + 0xc0]
  4195: 97 55 03                 s0 = s0 << 0x3
  4198: c8 05 05                 s0 = s0 + ra
  4201: 82 55                    s0 = u64 [s0]
  4203: 9e bb 3f                 a4 = a4 >>r 0x3f
  4206: c8 b3 03                 t1 = t1 + a4
  4209: d3 c3 0a                 a3 = t1 ^ a5
  4212: c8 53 03                 t1 = t1 + s0
  4215: 82 1c 00 01              a5 = u64 [sp + 0x100]
  4219: 9e c5 20                 s0 = a5 >>r 0x20
  4222: c8 59 09                 a2 = a2 + s0
  4225: 82 1c 08 01              a5 = u64 [sp + 0x108]
  4229: d3 c9 00                 ra = a2 ^ a5
  4232: 9e 00 18                 ra = ra >>r 0x18
  4235: 82 1c 10 01              a5 = u64 [sp + 0x110]
  4239: c8 0c 0c                 a5 = a5 + ra
  4242: 7b 1c 48 01              u64 [sp + 0x148] = a5
  4246: d3 c5 05                 s0 = s0 ^ a5
  4249: 9e 55 10                 s0 = s0 >>r 0x10
  4252: 7b 15 38 01              u64 [sp + 0x138] = s0
  4256: c8 59 09                 a2 = a2 + s0
  4259: 7b 19 58 01              u64 [sp + 0x158] = a2
  4263: d3 09 09                 a2 = a2 ^ ra
  4266: 9e 99 3f                 a2 = a2 >>r 0x3f
  4269: 7b 19 88 00              u64 [sp + 0x88] = a2
  4273: 9e 69 20                 a2 = s1 >>r 0x20
  4276: c8 49 05                 s0 = a2 + t2
  4279: d3 25 06                 s1 = s0 ^ t0
  4282: 9e 66 18                 s1 = s1 >>r 0x18
  4285: 82 1c 60 01              a5 = u64 [sp + 0x160]
  4289: c8 6c 0c                 a5 = a5 + s1
  4292: d3 c9 09                 a2 = a2 ^ a5
  4295: 9e 92 10                 t0 = a2 >>r 0x10
  4298: 7b 12 28 01              u64 [sp + 0x128] = t0
  4302: c8 52 00                 ra = t0 + s0
  4305: 82 14 68                 t2 = u64 [sp + 0x68]
  4308: d3 60 09                 a2 = ra ^ s1
  4311: 9e 99 3f                 a2 = a2 >>r 0x3f
  4314: 7b 19 60 01              u64 [sp + 0x160] = a2
  4318: 82 19 30 01              a2 = u64 [sp + 0x130]
  4322: 9e 99 20                 a2 = a2 >>r 0x20
  4325: c8 98 08                 a1 = a1 + a2
  4328: d3 87 07                 a0 = a0 ^ a1
  4331: 9e 77 18                 a0 = a0 >>r 0x18
  4334: 82 12 20 01              t0 = u64 [sp + 0x120]
  4338: c8 72 02                 t0 = t0 + a0
  4341: d3 92 09                 a2 = t0 ^ a2
  4344: 9e 99 10                 a2 = a2 >>r 0x10
  4347: 7b 19 30 01              u64 [sp + 0x130] = a2
  4351: c8 89 05                 s0 = a2 + a1
  4354: d3 57 07                 a0 = a0 ^ s0
  4357: 9e 77 3f                 a0 = a0 >>r 0x3f
  4360: 7b 17 40 01              u64 [sp + 0x140] = a0
  4364: 9e a7 20                 a0 = a3 >>r 0x20
  4367: 82 18 50 01              a1 = u64 [sp + 0x150]
  4371: c8 78 08                 a1 = a1 + a0
  4374: d3 8b 0b                 a4 = a4 ^ a1
  4377: 9e b9 18                 a2 = a4 >>r 0x18
  4380: c8 93 03                 t1 = t1 + a2
  4383: d3 73 07                 a0 = t1 ^ a0
  4386: 9e 77 10                 a0 = a0 >>r 0x10
  4389: 7b 17 20 01              u64 [sp + 0x120] = a0
  4393: c8 87 07                 a0 = a0 + a1
  4396: 82 18 70                 a1 = u64 [sp + 0x70]
  4399: 7b 17 50 01              u64 [sp + 0x150] = a0
  4403: d3 97 07                 a0 = a0 ^ a2
  4406: 9e 77 3f                 a0 = a0 >>r 0x3f
  4409: 7b 17 90 00              u64 [sp + 0x90] = a0
  4413: 82 16 e8 00              s1 = u64 [sp + 0xe8]
  4417: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  4420: 82 1b 68 01              a4 = u64 [sp + 0x168]
  4424: 95 bb 10                 a4 = a4 + 0x10
  4427: 82 19 60                 a2 = u64 [sp + 0x60]
  4430: 33 0a 10                 a3 = 0x10
  4433: 52 06 ed fb              jump @143 if s1 != 0
      :                          @160
  4437: 82 17 58                 a0 = u64 [sp + 0x58]
  4440: 82 1a 48 01              a3 = u64 [sp + 0x148]
  4444: d3 a7 07                 a0 = a0 ^ a3
  4447: d3 57 07                 a0 = a0 ^ s0
  4450: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  4454: d3 9c 07                 a0 = a5 ^ a2
  4457: 82 19 50 01              a2 = u64 [sp + 0x150]
  4461: d3 97 07                 a0 = a0 ^ a2
  4464: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  4468: 82 17 58 01              a0 = u64 [sp + 0x158]
  4472: d3 47 07                 a0 = a0 ^ t2
  4475: d3 27 07                 a0 = a0 ^ t0
  4478: 7b 17 b8 01              u64 [sp + 0x1b8] = a0
  4482: d3 80 07                 a0 = ra ^ a1
  4485: d3 37 07                 a0 = a0 ^ t1
  4488: 7b 17 c0 01              u64 [sp + 0x1c0] = a0
  4492: 7c 17 c7 01              a0 = u8 [sp + 0x1c7]
  4496: 7b 17 68 01              u64 [sp + 0x168] = a0
  4500: 7c 17 c6 01              a0 = u8 [sp + 0x1c6]
  4504: 7b 17 60 01              u64 [sp + 0x160] = a0
  4508: 7c 17 c5 01              a0 = u8 [sp + 0x1c5]
  4512: 7b 17 58 01              u64 [sp + 0x158] = a0
  4516: 7c 17 c4 01              a0 = u8 [sp + 0x1c4]
  4520: 7b 17 50 01              u64 [sp + 0x150] = a0
  4524: 7c 17 c3 01              a0 = u8 [sp + 0x1c3]
  4528: 7b 17 48 01              u64 [sp + 0x148] = a0
  4532: 7c 17 c2 01              a0 = u8 [sp + 0x1c2]
  4536: 7b 17 40 01              u64 [sp + 0x140] = a0
  4540: 7c 17 c1 01              a0 = u8 [sp + 0x1c1]
  4544: 7b 17 38 01              u64 [sp + 0x138] = a0
  4548: 7c 17 c0 01              a0 = u8 [sp + 0x1c0]
  4552: 7b 17 30 01              u64 [sp + 0x130] = a0
  4556: 7c 17 bf 01              a0 = u8 [sp + 0x1bf]
  4560: 7b 17 28 01              u64 [sp + 0x128] = a0
  4564: 7c 17 be 01              a0 = u8 [sp + 0x1be]
  4568: 7b 17 20 01              u64 [sp + 0x120] = a0
  4572: 7c 17 bd 01              a0 = u8 [sp + 0x1bd]
  4576: 7b 17 18 01              u64 [sp + 0x118] = a0
  4580: 7c 17 bc 01              a0 = u8 [sp + 0x1bc]
  4584: 7b 17 10 01              u64 [sp + 0x110] = a0
  4588: 7c 17 bb 01              a0 = u8 [sp + 0x1bb]
  4592: 7b 17 08 01              u64 [sp + 0x108] = a0
  4596: 7c 17 ba 01              a0 = u8 [sp + 0x1ba]
  4600: 7b 17 00 01              u64 [sp + 0x100] = a0
  4604: 7c 17 b9 01              a0 = u8 [sp + 0x1b9]
  4608: 7b 17 f8 00              u64 [sp + 0xf8] = a0
  4612: 7c 17 b8 01              a0 = u8 [sp + 0x1b8]
  4616: 7b 17 f0 00              u64 [sp + 0xf0] = a0
  4620: 7c 17 b7 01              a0 = u8 [sp + 0x1b7]
  4624: 7b 17 e8 00              u64 [sp + 0xe8] = a0
  4628: 7c 17 b6 01              a0 = u8 [sp + 0x1b6]
  4632: 7b 17 e0 00              u64 [sp + 0xe0] = a0
  4636: 7c 17 b5 01              a0 = u8 [sp + 0x1b5]
  4640: 7b 17 d8 00              u64 [sp + 0xd8] = a0
  4644: 7c 17 b4 01              a0 = u8 [sp + 0x1b4]
  4648: 7b 17 d0 00              u64 [sp + 0xd0] = a0
  4652: 7c 17 b3 01              a0 = u8 [sp + 0x1b3]
  4656: 7b 17 c8 00              u64 [sp + 0xc8] = a0
  4660: 7c 18 b2 01              a1 = u8 [sp + 0x1b2]
  4664: 7c 19 b1 01              a2 = u8 [sp + 0x1b1]
  4668: 7c 1a b0 01              a3 = u8 [sp + 0x1b0]
  4672: 7c 12 af 01              t0 = u8 [sp + 0x1af]
  4676: 7c 13 ae 01              t1 = u8 [sp + 0x1ae]
  4680: 7c 14 ad 01              t2 = u8 [sp + 0x1ad]
  4684: 7c 10 ac 01              ra = u8 [sp + 0x1ac]
  4688: 7c 1b ab 01              a4 = u8 [sp + 0x1ab]
  4692: 7c 1c aa 01              a5 = u8 [sp + 0x1aa]
  4696: 7c 16 a9 01              s1 = u8 [sp + 0x1a9]
  4700: 7c 15 a8 01              s0 = u8 [sp + 0x1a8]
  4704: 01                       fallthrough
      :                          @161
  4705: 3b 05 80 10 03           u8 [0x31080] = s0
  4710: 3b 06 81 10 03           u8 [0x31081] = s1
  4715: 3b 0c 82 10 03           u8 [0x31082] = a5
  4720: 3b 0b 83 10 03           u8 [0x31083] = a4
  4725: 3b 00 84 10 03           u8 [0x31084] = ra
  4730: 3b 04 85 10 03           u8 [0x31085] = t2
  4735: 3b 03 86 10 03           u8 [0x31086] = t1
  4740: 3b 02 87 10 03           u8 [0x31087] = t0
  4745: 3b 0a 88 10 03           u8 [0x31088] = a3
  4750: 3b 09 89 10 03           u8 [0x31089] = a2
  4755: 3b 08 8a 10 03           u8 [0x3108a] = a1
  4760: 82 18 c8 00              a1 = u64 [sp + 0xc8]
  4764: 3b 08 8b 10 03           u8 [0x3108b] = a1
  4769: 82 18 d0 00              a1 = u64 [sp + 0xd0]
  4773: 3b 08 8c 10 03           u8 [0x3108c] = a1
  4778: 82 18 d8 00              a1 = u64 [sp + 0xd8]
  4782: 3b 08 8d 10 03           u8 [0x3108d] = a1
  4787: 82 18 e0 00              a1 = u64 [sp + 0xe0]
  4791: 3b 08 8e 10 03           u8 [0x3108e] = a1
  4796: 82 18 e8 00              a1 = u64 [sp + 0xe8]
  4800: 3b 08 8f 10 03           u8 [0x3108f] = a1
  4805: 82 18 f0 00              a1 = u64 [sp + 0xf0]
  4809: 3b 08 90 10 03           u8 [0x31090] = a1
  4814: 82 18 f8 00              a1 = u64 [sp + 0xf8]
  4818: 3b 08 91 10 03           u8 [0x31091] = a1
  4823: 82 18 00 01              a1 = u64 [sp + 0x100]
  4827: 3b 08 92 10 03           u8 [0x31092] = a1
  4832: 82 18 08 01              a1 = u64 [sp + 0x108]
  4836: 3b 08 93 10 03           u8 [0x31093] = a1
  4841: 82 18 10 01              a1 = u64 [sp + 0x110]
  4845: 3b 08 94 10 03           u8 [0x31094] = a1
  4850: 82 18 18 01              a1 = u64 [sp + 0x118]
  4854: 3b 08 95 10 03           u8 [0x31095] = a1
  4859: 82 18 20 01              a1 = u64 [sp + 0x120]
  4863: 3b 08 96 10 03           u8 [0x31096] = a1
  4868: 82 18 28 01              a1 = u64 [sp + 0x128]
  4872: 3b 08 97 10 03           u8 [0x31097] = a1
  4877: 82 18 30 01              a1 = u64 [sp + 0x130]
  4881: 3b 08 98 10 03           u8 [0x31098] = a1
  4886: 82 18 38 01              a1 = u64 [sp + 0x138]
  4890: 3b 08 99 10 03           u8 [0x31099] = a1
  4895: 82 18 40 01              a1 = u64 [sp + 0x140]
  4899: 3b 08 9a 10 03           u8 [0x3109a] = a1
  4904: 82 18 48 01              a1 = u64 [sp + 0x148]
  4908: 3b 08 9b 10 03           u8 [0x3109b] = a1
  4913: 82 18 50 01              a1 = u64 [sp + 0x150]
  4917: 3b 08 9c 10 03           u8 [0x3109c] = a1
  4922: 82 18 58 01              a1 = u64 [sp + 0x158]
  4926: 3b 08 9d 10 03           u8 [0x3109d] = a1
  4931: 81 18 84 01              a1 = i32 [sp + 0x184]
  4935: 82 19 60 01              a2 = u64 [sp + 0x160]
  4939: 3b 09 9e 10 03           u8 [0x3109e] = a2
  4944: 82 19 68 01              a2 = u64 [sp + 0x168]
  4948: 3b 09 9f 10 03           u8 [0x3109f] = a2
  4953: 33 09 80 10 03           a2 = 0x31080
  4958: 3d 08 a0 10 03           u32 [0x310a0] = a1
  4963: 49 21 88 01 24           u64 [sp + 392] = 0x24
  4968: 95 17 70 01              a0 = sp + 0x170
  4972: 7b 17 08 03              u64 [sp + 0x308] = a0
  4976: 33 07 06                 a0 = 0x6
  4979: 7b 17 10 03              u64 [sp + 0x310] = a0
  4983: 7b 19 68 01              u64 [sp + 0x168] = a2
  4987: 7b 19 18 03              u64 [sp + 0x318] = a2
  4991: 33 07 0e                 a0 = 0xe
  4994: 7b 17 20 03              u64 [sp + 0x320] = a0
  4998: 95 17 88 01              a0 = sp + 0x188
  5002: 7b 17 28 03              u64 [sp + 0x328] = a0
  5006: 33 07 aa 00              a0 = 0xaa
  5010: 7b 17 30 03              u64 [sp + 0x330] = a0
  5014: 49 21 a8 01 02           u64 [sp + 424] = 0x2
  5019: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  5024: 49 21 c8 01              u64 [sp + 456] = 0
  5028: 14 09 20 00 00 00 10 00 00 00 a2 = 0x1000000020
  5038: 7b 19 d0 01              u64 [sp + 0x1d0] = a2
  5042: 46 21 d8 01 03           u8 [sp + 472] = 0x3
  5047: 49 21 e0 01 02           u64 [sp + 480] = 0x2
  5052: 49 21 f0 01 02           u64 [sp + 496] = 0x2
  5057: 49 21 00 02 01           u64 [sp + 512] = 0x1
  5062: 7b 19 08 02              u64 [sp + 0x208] = a2
  5066: 46 21 10 02 03           u8 [sp + 528] = 0x3
  5071: 49 21 18 02 02           u64 [sp + 536] = 0x2
  5076: 49 21 28 02 02           u64 [sp + 552] = 0x2
  5081: 49 21 38 02 02           u64 [sp + 568] = 0x2
  5086: 49 21 40 02 20           u64 [sp + 576] = 0x20
  5091: 33 07 40 00 01           a0 = 0x10040
  5096: 7b 17 88 02              u64 [sp + 0x288] = a0
  5100: 49 21 90 02 03           u64 [sp + 656] = 0x3
  5105: 95 17 a8 01              a0 = sp + 0x1a8
  5109: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
  5113: 49 21 b0 02 03           u64 [sp + 688] = 0x3
  5118: 95 17 08 03              a0 = sp + 0x308
  5122: 7b 17 98 02              u64 [sp + 0x298] = a0
  5126: 46 21 48 02 03           u8 [sp + 584] = 0x3
  5131: 49 21 a0 02 03           u64 [sp + 672] = 0x3
  5136: 95 17 90 01              a0 = sp + 0x190
  5140: 95 18 88 02              a1 = sp + 0x288
  5144: 50 10 70 ec 06           ra = 112, jump @327
      :                          @162 [@dyn 56]
  5149: 82 15 98 01              s0 = u64 [sp + 0x198]
  5153: 82 1b a0 01              a4 = u64 [sp + 0x1a0]
  5157: 82 16 90 01              s1 = u64 [sp + 0x190]
  5161: 33 07 02                 a0 = 0x2
  5164: 33 08                    a1 = 0
  5166: 33 09                    a2 = 0
  5168: 64 5a                    a3 = s0
  5170: 33 00 72                 ra = 0x72
  5173: 0a 64                    ecalli 100 // 'log'
  5175: 01                       fallthrough
      :                          @163 [@dyn 57]
  5176: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
  5181: 53 38 00 00 ff 31        jump @169 if a1 <u 4294901760
      :                          @164
  5187: 33 07 b0 1a 03           a0 = 0x31ab0
  5192: 95 77 00 00 01           a0 = a0 + 0x10000
  5197: 01                       fallthrough
      :                          @165
  5198: 82 78                    a1 = u64 [a0]
  5200: c9 87 09                 a2 = a0 - a1
  5203: ab 59 1b                 jump @169 if a2 != s0
      :                          @166
  5206: c9 68 09                 a2 = a1 - s1
  5209: 01                       fallthrough
      :                          @167
  5210: 82 7a                    a3 = u64 [a0]
  5212: ab 8a f2                 jump @165 if a3 != a1
      :                          @168
  5215: 7b 79                    u64 [a0] = a2
  5217: 33 0b                    a4 = 0
  5219: 82 18 88 01              a1 = u64 [sp + 0x188]
  5223: 82 17 68 01              a0 = u64 [sp + 0x168]
  5227: 28 d6 f0                 jump @87
      :                          @169
  5230: 82 18 88 01              a1 = u64 [sp + 0x188]
  5234: 82 17 68 01              a0 = u64 [sp + 0x168]
  5238: 28 cb f0                 jump @87
      :                          @170
  5241: 00                       trap
      :                          @171
  5242: 82 15 e8 01              s0 = u64 [sp + 0x1e8]
  5246: c8 35 05                 s0 = s0 + t1
  5249: 64 36                    s1 = t1
  5251: ae 35 0f                 jump @173 if s0 >=u t1
      :                          @172
  5254: 82 17 f0 01              a0 = u64 [sp + 0x1f0]
  5258: 95 77 01                 a0 = a0 + 0x1
  5261: 7b 17 f0 01              u64 [sp + 0x1f0] = a0
  5265: 01                       fallthrough
      :                          @173
  5266: 95 17 88 02              a0 = sp + 0x288
  5270: 33 09 80 00              a2 = 0x80
  5274: 33 08                    a1 = 0
  5276: 50 10 74 94 09           ra = 116, jump @395
      :                          @174 [@dyn 58]
  5281: 64 69                    a2 = s1
  5283: 56 26 80 00 6c           jump @190 if s1 >u 128
      :                          @175
  5288: 82 17 f0 01              a0 = u64 [sp + 0x1f0]
  5292: 82 18 a8 01              a1 = u64 [sp + 0x1a8]
  5296: 7b 18 58                 u64 [sp + 0x58] = a1
  5299: 82 18 b0 01              a1 = u64 [sp + 0x1b0]
  5303: 7b 18 60                 u64 [sp + 0x60] = a1
  5306: 82 18 b8 01              a1 = u64 [sp + 0x1b8]
  5310: 7b 18 68                 u64 [sp + 0x68] = a1
  5313: 82 18 c0 01              a1 = u64 [sp + 0x1c0]
  5317: 7b 18 70                 u64 [sp + 0x70] = a1
  5320: 82 18 c8 01              a1 = u64 [sp + 0x1c8]
  5324: 82 1b d0 01              a4 = u64 [sp + 0x1d0]
  5328: 82 1a d8 01              a3 = u64 [sp + 0x1d8]
  5332: 7b 1a 60 01              u64 [sp + 0x160] = a3
  5336: 82 1a e0 01              a3 = u64 [sp + 0x1e0]
  5340: 7b 1a 40 01              u64 [sp + 0x140] = a3
  5344: 82 1a 90 00              a3 = u64 [sp + 0x90]
  5348: d3 5a 0a                 a3 = a3 ^ s0
  5351: 7b 1a 28 01              u64 [sp + 0x128] = a3
  5355: 82 1a 88 00              a3 = u64 [sp + 0x88]
  5359: d3 a7 07                 a0 = a0 ^ a3
  5362: 7b 17 30 01              u64 [sp + 0x130] = a0
  5366: 7b 1b 88 00              u64 [sp + 0x88] = a4
  5370: 7b 18 90 00              u64 [sp + 0x90] = a1
  5374: 28 c9 f7                 jump @140
      :                          @176
  5377: 00                       trap
      :                          @177
  5378: 00                       trap
      :                          @178
  5379: 00                       trap
      :                          @179
  5380: 00                       trap
      :                          @180
  5381: 00                       trap
      :                          @181
  5382: 00                       trap
      :                          @182
  5383: 00                       trap
      :                          @183
  5384: 00                       trap
      :                          @184
  5385: 00                       trap
      :                          @185
  5386: 00                       trap
      :                          @186
  5387: 00                       trap
      :                          @187
  5388: 00                       trap
      :                          @188
  5389: 00                       trap
      :                          @189
  5390: 00                       trap
      :                          @190
  5391: 00                       trap
      :                          @191
  5392: 00                       trap
      :                          @192 [export #1: 'accumulate']
  5393: 95 11 68 ff              sp = sp + 0xffffffffffffff68
  5397: 7b 10 90 00              u64 [sp + 0x90] = ra
  5401: 7b 15 88 00              u64 [sp + 0x88] = s0
  5405: 7b 16 80 00              u64 [sp + 0x80] = s1
  5409: 33 09 00 00 10           a2 = 0x100000
  5414: 65 99                    a2 = sbrk a2
  5416: 64 7a                    a3 = a0
  5418: 33 07 00 00 01           a0 = 0x10000
  5423: 51 08 91 02              jump @256 if a1 == 0
      :                          @193
  5427: 64 86                    s1 = a1
  5429: 7d a8                    a1 = i8 [a3]
  5431: 33 05 01                 s0 = 0x1
  5434: 59 08 37                 jump @200 if a1 >=s 0
      :                          @194
  5437: 84 89 ff 00              a2 = a1 & 0xff
  5441: 33 05 02                 s0 = 0x2
  5444: 53 29 c0 00 2d           jump @200 if a2 <u 192
      :                          @195
  5449: 33 05 03                 s0 = 0x3
  5452: 53 29 e0 00 25           jump @200 if a2 <u 224
      :                          @196
  5457: 33 05 04                 s0 = 0x4
  5460: 53 29 f0 00 1d           jump @200 if a2 <u 240
      :                          @197
  5465: 33 05 05                 s0 = 0x5
  5468: 53 29 f8 00 15           jump @200 if a2 <u 248
      :                          @198
  5473: 33 05 06                 s0 = 0x6
  5476: 53 29 fc 00 0d           jump @200 if a2 <u 252
      :                          @199
  5481: 88 98 fe 00              a1 = a2 <u 0xfe
  5485: 9a 85 08                 s0 = 0x8 - a1
  5488: 01                       fallthrough
      :                          @200
  5489: ae 56 08                 jump @202 if s1 >=u s0
      :                          @201
  5492: 33 08                    a1 = 0
  5494: 28 4a 02                 jump @256
      :                          @202
  5497: 64 a7                    a0 = a3
  5499: 64 58                    a1 = s0
  5501: 7b 1a 10                 u64 [sp + 0x10] = a3
  5504: 50 10 76 58 12           ra = 118, jump @581
      :                          @203 [@dyn 59]
  5509: aa 56 33 02              jump @255 if s1 == s0
      :                          @204
  5513: 82 17 10                 a0 = u64 [sp + 0x10]
  5516: c8 57 07                 a0 = a0 + s0
  5519: 7d 78                    a1 = i8 [a0]
  5521: c9 56 06                 s1 = s1 - s0
  5524: 33 05 01                 s0 = 0x1
  5527: 59 08 37                 jump @211 if a1 >=s 0
      :                          @205
  5530: 84 89 ff 00              a2 = a1 & 0xff
  5534: 33 05 02                 s0 = 0x2
  5537: 53 29 c0 00 2d           jump @211 if a2 <u 192
      :                          @206
  5542: 33 05 03                 s0 = 0x3
  5545: 53 29 e0 00 25           jump @211 if a2 <u 224
      :                          @207
  5550: 33 05 04                 s0 = 0x4
  5553: 53 29 f0 00 1d           jump @211 if a2 <u 240
      :                          @208
  5558: 33 05 05                 s0 = 0x5
  5561: 53 29 f8 00 15           jump @211 if a2 <u 248
      :                          @209
  5566: 33 05 06                 s0 = 0x6
  5569: 53 29 fc 00 0d           jump @211 if a2 <u 252
      :                          @210
  5574: 88 98 fe 00              a1 = a2 <u 0xfe
  5578: 9a 85 08                 s0 = 0x8 - a1
  5581: 01                       fallthrough
      :                          @211
  5582: ac 56 ea 01              jump @255 if s1 <u s0
      :                          @212
  5586: 64 58                    a1 = s0
  5588: 7b 16 10                 u64 [sp + 0x10] = s1
  5591: 64 76                    s1 = a0
  5593: 50 10 78 ff 11           ra = 120, jump @581
      :                          @213 [@dyn 60]
  5598: c8 65 07                 a0 = s0 + s1
  5601: 82 16 10                 s1 = u64 [sp + 0x10]
  5604: ab 56 0b                 jump @215 if s1 != s0
      :                          @214
  5607: 33 08                    a1 = 0
  5609: 33 00 7a                 ra = 0x7a
  5612: 28 ec 11                 jump @581
      :                          @215
  5615: 7d 79                    a2 = i8 [a0]
  5617: c9 56 06                 s1 = s1 - s0
  5620: 33 08 01                 a1 = 0x1
  5623: 59 09 44                 jump @222 if a2 >=s 0
      :                          @216
  5626: 84 99 ff 00              a2 = a2 & 0xff
  5630: 33 0a c0 00              a3 = 0xc0
  5634: 33 08 02                 a1 = 0x2
  5637: ac a9 36                 jump @222 if a2 <u a3
      :                          @217
  5640: 33 0a e0 00              a3 = 0xe0
  5644: 33 08 03                 a1 = 0x3
  5647: ac a9 2c                 jump @222 if a2 <u a3
      :                          @218
  5650: 33 0a f0 00              a3 = 0xf0
  5654: 33 08 04                 a1 = 0x4
  5657: ac a9 22                 jump @222 if a2 <u a3
      :                          @219
  5660: 33 0a f8 00              a3 = 0xf8
  5664: 33 08 05                 a1 = 0x5
  5667: ac a9 18                 jump @222 if a2 <u a3
      :                          @220
  5670: 33 0a fc 00              a3 = 0xfc
  5674: 33 08 06                 a1 = 0x6
  5677: ac a9 0e                 jump @222 if a2 <u a3
      :                          @221
  5680: 88 98 fe 00              a1 = a2 <u 0xfe
  5684: 33 09 08                 a2 = 0x8
  5687: c9 89 08                 a1 = a2 - a1
  5690: 01                       fallthrough
      :                          @222
  5691: ac 86 7d 01              jump @255 if s1 <u a1
      :                          @223
  5695: 50 10 7a 99 11           ra = 122, jump @581
      :                          @224 [@dyn 61]
  5700: 33 07 61 00 03           a0 = 0x30061
  5705: 33 09 08 10              a2 = 0x1008
  5709: 33 0a 0f                 a3 = 0xf
  5712: 33 08                    a1 = 0
  5714: 33 0b                    a4 = 0
  5716: 33 0c                    a5 = 0
  5718: 33 00 7c                 ra = 0x7c
  5721: 0a 01                    ecalli 1 // 'fetch'
  5723: 01                       fallthrough
      :                          @225 [@dyn 62]
  5724: 51 07 5c 01              jump @255 if a0 == 0
      :                          @226
  5728: 95 76 80                 s1 = a0 + 0xffffffffffffff80
  5731: 33 07 00 00 01           a0 = 0x10000
  5736: 51 06 0c ff              jump @201 if s1 == 0
      :                          @227
  5740: 35 08 e1 00 03           a1 = i8 [0x300e1]
  5745: 33 05 01                 s0 = 0x1
  5748: 59 08 37                 jump @234 if a1 >=s 0
      :                          @228
  5751: 84 89 ff 00              a2 = a1 & 0xff
  5755: 33 05 02                 s0 = 0x2
  5758: 53 29 c0 00 2d           jump @234 if a2 <u 192
      :                          @229
  5763: 33 05 03                 s0 = 0x3
  5766: 53 29 e0 00 25           jump @234 if a2 <u 224
      :                          @230
  5771: 33 05 04                 s0 = 0x4
  5774: 53 29 f0 00 1d           jump @234 if a2 <u 240
      :                          @231
  5779: 33 05 05                 s0 = 0x5
  5782: 53 29 f8 00 15           jump @234 if a2 <u 248
      :                          @232
  5787: 33 05 06                 s0 = 0x6
  5790: 53 29 fc 00 0d           jump @234 if a2 <u 252
      :                          @233
  5795: 88 98 fe 00              a1 = a2 <u 0xfe
  5799: 9a 85 08                 s0 = 0x8 - a1
  5802: 01                       fallthrough
      :                          @234
  5803: ac 56 c9 fe              jump @201 if s1 <u s0
      :                          @235
  5807: 33 07 61 00 03           a0 = 0x30061
  5812: 7b 17 10                 u64 [sp + 0x10] = a0
  5815: 95 77 80 00              a0 = a0 + 0x80
  5819: 64 58                    a1 = s0
  5821: 50 10 7e 1b 11           ra = 126, jump @581
      :                          @236 [@dyn 63]
  5826: 85 57 ff                 a0 = s0 ^ 0xffffffffffffffff
  5829: c8 67 07                 a0 = a0 + s1
  5832: 51 07 f0 00              jump @255 if a0 == 0
      :                          @237
  5836: 82 18 10                 a1 = u64 [sp + 0x10]
  5839: c8 85 05                 s0 = s0 + a1
  5842: 95 56 81 00              s1 = s0 + 0x81
  5846: 7d 68                    a1 = i8 [s1]
  5848: 33 05 01                 s0 = 0x1
  5851: 59 08 45                 jump @245 if a1 >=s 0
      :                          @238
  5854: 84 88 ff 00              a1 = a1 & 0xff
  5858: 33 09 c0 00              a2 = 0xc0
  5862: 33 05 02                 s0 = 0x2
  5865: ac 98 33                 jump @244 if a1 <u a2
      :                          @239
  5868: 33 09 e0 00              a2 = 0xe0
  5872: 33 05 03                 s0 = 0x3
  5875: ac 98 29                 jump @244 if a1 <u a2
      :                          @240
  5878: 33 09 f0 00              a2 = 0xf0
  5882: 33 05 04                 s0 = 0x4
  5885: ac 98 1f                 jump @244 if a1 <u a2
      :                          @241
  5888: 33 09 f8 00              a2 = 0xf8
  5892: 33 05 05                 s0 = 0x5
  5895: ac 98 15                 jump @244 if a1 <u a2
      :                          @242
  5898: 33 09 fc 00              a2 = 0xfc
  5902: 33 05 06                 s0 = 0x6
  5905: ac 98 0b                 jump @244 if a1 <u a2
      :                          @243
  5908: 88 88 fe 00              a1 = a1 <u 0xfe
  5912: 9a 85 08                 s0 = 0x8 - a1
  5915: 01                       fallthrough
      :                          @244
  5916: ac 57 9c 00              jump @255 if a0 <u s0
      :                          @245
  5920: 49 11 08 ff ff fe        u64 [sp + 8] = 0xfffffffffffeffff
  5926: 64 67                    a0 = s1
  5928: 64 58                    a1 = s0
  5930: 50 20 80 00 ae 10        ra = 128, jump @581
      :                          @246 [@dyn 64]
  5936: 7b 17 18                 u64 [sp + 0x18] = a0
  5939: 56 17 23 9f 00           jump @257 if a0 >u 35
      :                          @247
  5944: 95 17 18                 a0 = sp + 0x18
  5947: 7b 17 70                 u64 [sp + 0x70] = a0
  5950: 33 07 aa 00              a0 = 0xaa
  5954: 7b 17 78                 u64 [sp + 0x78] = a0
  5957: 33 07 e8 00 01           a0 = 0x100e8
  5962: 7b 17 40                 u64 [sp + 0x40] = a0
  5965: 49 11 48 02              u64 [sp + 72] = 0x2
  5969: 49 11 60                 u64 [sp + 96] = 0
  5972: 95 17 70                 a0 = sp + 0x70
  5975: 7b 17 50                 u64 [sp + 0x50] = a0
  5978: 49 11 58 01              u64 [sp + 88] = 0x1
  5982: 95 17 28                 a0 = sp + 0x28
  5985: 95 18 40                 a1 = sp + 0x40
  5988: 50 20 82 00 a0 03        ra = 130, jump @327
      :                          @248 [@dyn 65]
  5994: 82 15 30                 s0 = u64 [sp + 0x30]
  5997: 82 1b 38                 a4 = u64 [sp + 0x38]
  6000: 82 16 28                 s1 = u64 [sp + 0x28]
  6003: 33 07 02                 a0 = 0x2
  6006: 33 08                    a1 = 0
  6008: 33 09                    a2 = 0
  6010: 64 5a                    a3 = s0
  6012: 33 00 84 00              ra = 0x84
  6016: 0a 64                    ecalli 100 // 'log'
  6018: 01                       fallthrough
      :                          @249 [@dyn 66]
  6019: 82 17 08                 a0 = u64 [sp + 0x8]
  6022: c8 67 07                 a0 = a0 + s1
  6025: 53 37 00 00 ff 2f        jump @255 if a0 <u 4294901760
      :                          @250
  6031: 33 07 b0 1a 03           a0 = 0x31ab0
  6036: 95 77 00 00 01           a0 = a0 + 0x10000
  6041: 01                       fallthrough
      :                          @251
  6042: 82 78                    a1 = u64 [a0]
  6044: c9 87 09                 a2 = a0 - a1
  6047: ab 59 19                 jump @255 if a2 != s0
      :                          @252
  6050: c9 68 09                 a2 = a1 - s1
  6053: 01                       fallthrough
      :                          @253
  6054: 82 7a                    a3 = u64 [a0]
  6056: ab 8a f2                 jump @251 if a3 != a1
      :                          @254
  6059: 7b 79                    u64 [a0] = a2
  6061: 33 0b                    a4 = 0
  6063: 33 08                    a1 = 0
  6065: 33 07 00 00 01           a0 = 0x10000
  6070: 28 0a                    jump @256
      :                          @255
  6072: 33 08                    a1 = 0
  6074: 33 07 00 00 01           a0 = 0x10000
  6079: 01                       fallthrough
      :                          @256
  6080: 82 10 90 00              ra = u64 [sp + 0x90]
  6084: 82 15 88 00              s0 = u64 [sp + 0x88]
  6088: 82 16 80 00              s1 = u64 [sp + 0x80]
  6092: 95 11 98 00              sp = sp + 0x98
  6096: 32 00                    ret
      :                          @257
  6098: c8 65 08                 a1 = s0 + s1
  6101: 33 05 80 10 03           s0 = 0x31080
  6106: 33 09 24                 a2 = 0x24
  6109: 33 07 80 10 03           a0 = 0x31080
  6114: 50 20 86 00 9c 05        ra = 134, jump @377
      :                          @258 [@dyn 67]
  6120: 7b 15 10                 u64 [sp + 0x10] = s0
  6123: 80 57 20                 a0 = u32 [s0 + 0x20]
  6126: 7b 17                    u64 [sp] = a0
  6128: 7a 17 24                 u32 [sp + 0x24] = a0
  6131: 33 05 a4 10 03           s0 = 0x310a4
  6136: 33 06 50                 s1 = 0x50
  6139: 01                       fallthrough
      :                          @259
  6140: 33 09 20                 a2 = 0x20
  6143: 64 57                    a0 = s0
  6145: 82 18 10                 a1 = u64 [sp + 0x10]
  6148: 50 20 88 00 7a 05        ra = 136, jump @377
      :                          @260 [@dyn 68]
  6154: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  6157: 95 55 20                 s0 = s0 + 0x20
  6160: 52 06 ec                 jump @259 if s1 != 0
      :                          @261
  6163: 33 05 a4 10 03           s0 = 0x310a4
  6168: 33 07                    a0 = 0
  6170: 33 08 a4 10 03           a1 = 0x310a4
  6175: 82 16                    s1 = u64 [sp]
  6177: 64 69                    a2 = s1
  6179: 0a 0f                    ecalli 15 // 'assign'
  6181: 33 07 01                 a0 = 0x1
  6184: 64 58                    a1 = s0
  6186: 64 69                    a2 = s1
  6188: 0a 0f                    ecalli 15 // 'assign'
  6190: 95 17 24                 a0 = sp + 0x24
  6193: 7b 17 70                 u64 [sp + 0x70] = a0
  6196: 33 07 d8 00              a0 = 0xd8
  6200: 7b 17 78                 u64 [sp + 0x78] = a0
  6203: 33 07 90 00 01           a0 = 0x10090
  6208: 7b 17 40                 u64 [sp + 0x40] = a0
  6211: 49 11 48 01              u64 [sp + 72] = 0x1
  6215: 49 11 60                 u64 [sp + 96] = 0
  6218: 95 17 70                 a0 = sp + 0x70
  6221: 7b 17 50                 u64 [sp + 0x50] = a0
  6224: 49 11 58 01              u64 [sp + 88] = 0x1
  6228: 95 17 28                 a0 = sp + 0x28
  6231: 95 18 40                 a1 = sp + 0x40
  6234: 50 20 8a 00 aa 02        ra = 138, jump @327
      :                          @262 [@dyn 69]
  6240: 82 15 30                 s0 = u64 [sp + 0x30]
  6243: 82 1b 38                 a4 = u64 [sp + 0x38]
  6246: 82 16 28                 s1 = u64 [sp + 0x28]
  6249: 33 07 02                 a0 = 0x2
  6252: 33 08                    a1 = 0
  6254: 33 09                    a2 = 0
  6256: 64 5a                    a3 = s0
  6258: 33 00 8c 00              ra = 0x8c
  6262: 0a 64                    ecalli 100 // 'log'
  6264: 01                       fallthrough
      :                          @263 [@dyn 70]
  6265: 82 17 08                 a0 = u64 [sp + 0x8]
  6268: c8 67 07                 a0 = a0 + s1
  6271: 53 37 00 00 ff 31        jump @269 if a0 <u 4294901760
      :                          @264
  6277: 33 07 b0 1a 03           a0 = 0x31ab0
  6282: 95 77 00 00 01           a0 = a0 + 0x10000
  6287: 01                       fallthrough
      :                          @265
  6288: 82 78                    a1 = u64 [a0]
  6290: c9 87 09                 a2 = a0 - a1
  6293: ab 59 1b                 jump @269 if a2 != s0
      :                          @266
  6296: c9 68 09                 a2 = a1 - s1
  6299: 01                       fallthrough
      :                          @267
  6300: 82 7a                    a3 = u64 [a0]
  6302: ab 8a f2                 jump @265 if a3 != a1
      :                          @268
  6305: 7b 79                    u64 [a0] = a2
  6307: 33 0b                    a4 = 0
  6309: 33 07 80 10 03           a0 = 0x31080
  6314: 33 08 20                 a1 = 0x20
  6317: 28 13 ff                 jump @256
      :                          @269
  6320: 33 07 80 10 03           a0 = 0x31080
  6325: 33 08 20                 a1 = 0x20
  6328: 28 08 ff                 jump @256
      :                          @270 [export #2: 'on_transfer']
  6331: 33 07 00 00 01           a0 = 0x10000
  6336: 33 08                    a1 = 0
  6338: 32 00                    ret
      :                          @271
  6340: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  6343: 7b 10 40                 u64 [sp + 0x40] = ra
  6346: 7b 15 38                 u64 [sp + 0x38] = s0
  6349: 7b 16 30                 u64 [sp + 0x30] = s1
  6352: c8 89 09                 a2 = a2 + a1
  6355: ac 89 53                 jump @279 if a2 <u a1
      :                          @272
  6358: 64 75                    s0 = a0
  6360: 82 77                    a0 = u64 [a0]
  6362: 97 78 01                 a1 = a0 << 0x1
  6365: 33 0a 08                 a3 = 0x8
  6368: e4 a9 09                 a2 = maxu(a2, a3)
  6371: e4 98 06                 s1 = maxu(a1, a2)
  6374: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  6377: 98 88 3f                 a1 = a1 >> 0x3f
  6380: 51 07 12                 jump @274 if a0 == 0
      :                          @273
  6383: 82 59 08                 a2 = u64 [s0 + 0x8]
  6386: 7b 19 18                 u64 [sp + 0x18] = a2
  6389: 49 11 20 01              u64 [sp + 32] = 0x1
  6393: 7b 17 28                 u64 [sp + 0x28] = a0
  6396: 28 06                    jump @275
      :                          @274
  6398: 49 11 20                 u64 [sp + 32] = 0
  6401: 01                       fallthrough
      :                          @275
  6402: 64 17                    a0 = sp
  6404: 95 1a 18                 a3 = sp + 0x18
  6407: 64 69                    a2 = s1
  6409: 50 20 8e 00 33           ra = 142, jump @283
      :                          @276 [@dyn 71]
  6414: 82 18                    a1 = u64 [sp]
  6416: 82 17 08                 a0 = u64 [sp + 0x8]
  6419: 51 08 14                 jump @280 if a1 == 0
      :                          @277
  6422: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  6432: aa 87 0d                 jump @281 if a0 == a1
      :                          @278
  6435: 52 07 18                 jump @282 if a0 != 0
      :                          @279
  6438: 00                       trap
      :                          @280
  6439: 7b 57 08                 u64 [s0 + 0x8] = a0
  6442: 7b 56                    u64 [s0] = s1
  6444: 01                       fallthrough
      :                          @281
  6445: 82 10 40                 ra = u64 [sp + 0x40]
  6448: 82 15 38                 s0 = u64 [sp + 0x38]
  6451: 82 16 30                 s1 = u64 [sp + 0x30]
  6454: 95 11 48                 sp = sp + 0x48
  6457: 32 00                    ret
      :                          @282
  6459: 00                       trap
      :                          @283
  6460: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  6463: 7b 10 30                 u64 [sp + 0x30] = ra
  6466: 7b 15 28                 u64 [sp + 0x28] = s0
  6469: 7b 16 20                 u64 [sp + 0x20] = s1
  6472: 64 95                    s0 = a2
  6474: 64 72                    t0 = a0
  6476: 51 08 7a                 jump @293 if a1 == 0
      :                          @284
  6479: 82 a7 08                 a0 = u64 [a3 + 0x8]
  6482: 51 07 7d                 jump @294 if a0 == 0
      :                          @285
  6485: 82 a9 10                 a2 = u64 [a3 + 0x10]
  6488: 51 09 ab 00              jump @301 if a2 == 0
      :                          @286
  6492: 82 a8                    a1 = u64 [a3]
  6494: 33 06 b0 1a 03           s1 = 0x31ab0
  6499: 33 03 00 00 01           t1 = 0x10000
  6504: c8 36 06                 s1 = s1 + t1
  6507: 01                       fallthrough
      :                          @287
  6508: 82 6a                    a3 = u64 [s1]
  6510: c8 5a 07                 a0 = a3 + s0
  6513: ac a7 d0 00              jump @307 if a0 <u a3
      :                          @288
  6517: 95 7b 01                 a4 = a0 + 0x1
  6520: 88 bc 01                 a5 = a4 <u 0x1
  6523: d8 b3 0b                 a4 = t1 <u a4
  6526: d4 cb 0b                 a4 = a4 | a5
  6529: 52 0b c0 00              jump @307 if a4 != 0
      :                          @289
  6533: 82 6b                    a4 = u64 [s1]
  6535: ab ab e5                 jump @287 if a4 != a3
      :                          @290
  6538: 7b 67                    u64 [s1] = a0
  6540: 33 0c                    a5 = 0
  6542: 7b 12 18                 u64 [sp + 0x18] = t0
  6545: 33 0a b0 1a 03           a3 = 0x31ab0
  6550: 33 0b 00 00 01           a4 = 0x10000
  6555: 7b 1a                    u64 [sp] = a3
  6557: c8 ba 0a                 a3 = a3 + a4
  6560: c9 7a 07                 a0 = a3 - a0
  6563: 7b 17 10                 u64 [sp + 0x10] = a0
  6566: 7b 18 08                 u64 [sp + 0x8] = a1
  6569: 64 96                    s1 = a2
  6571: 50 20 90 00 d3 03        ra = 144, jump @377
      :                          @291 [@dyn 72]
  6577: 54 36 00 00 01 98 00     jump @308 if s1 <=u 65536
      :                          @292
  6584: 82 12 18                 t0 = u64 [sp + 0x18]
  6587: 82 18 10                 a1 = u64 [sp + 0x10]
  6590: 33 07                    a0 = 0
  6592: 7b 28 08                 u64 [t0 + 0x8] = a1
  6595: 28 b5 00                 jump @314
      :                          @293
  6598: 49 12 08                 u64 [t0 + 8] = 0
  6601: 33 07 01                 a0 = 0x1
  6604: 28 ac 00                 jump @314
      :                          @294
  6607: 33 09 b0 1a 03           a2 = 0x31ab0
  6612: 33 07 00 00 01           a0 = 0x10000
  6617: c8 79 09                 a2 = a2 + a0
  6620: 01                       fallthrough
      :                          @295
  6621: 82 9a                    a3 = u64 [a2]
  6623: c8 5a 08                 a1 = a3 + s0
  6626: ac a8 5f                 jump @307 if a1 <u a3
      :                          @296
  6629: 95 8b 01                 a4 = a1 + 0x1
  6632: 88 bc 01                 a5 = a4 <u 0x1
  6635: d8 b7 0b                 a4 = a0 <u a4
  6638: d4 cb 0b                 a4 = a4 | a5
  6641: 52 0b 50                 jump @307 if a4 != 0
      :                          @297
  6644: 82 9b                    a4 = u64 [a2]
  6646: ab ab e7                 jump @295 if a4 != a3
      :                          @298
  6649: 7b 98                    u64 [a2] = a1
  6651: 33 0c                    a5 = 0
  6653: 01                       fallthrough
      :                          @299
  6654: ab ab df                 jump @295 if a4 != a3
      :                          @300
  6657: 28 31                    jump @306
      :                          @301
  6659: 33 09 b0 1a 03           a2 = 0x31ab0
  6664: 33 07 00 00 01           a0 = 0x10000
  6669: c8 79 09                 a2 = a2 + a0
  6672: 01                       fallthrough
      :                          @302
  6673: 82 9a                    a3 = u64 [a2]
  6675: c8 5a 08                 a1 = a3 + s0
  6678: ac a8 2b                 jump @307 if a1 <u a3
      :                          @303
  6681: 95 8b 01                 a4 = a1 + 0x1
  6684: 88 bc 01                 a5 = a4 <u 0x1
  6687: d8 b7 0b                 a4 = a0 <u a4
  6690: d4 cb 0b                 a4 = a4 | a5
  6693: 52 0b 1c                 jump @307 if a4 != 0
      :                          @304
  6696: 82 9b                    a4 = u64 [a2]
  6698: ab ab e7                 jump @302 if a4 != a3
      :                          @305
  6701: 7b 98                    u64 [a2] = a1
  6703: 33 0c                    a5 = 0
  6705: 01                       fallthrough
      :                          @306
  6706: 33 07 b0 1a 04           a0 = 0x41ab0
  6711: c9 87 08                 a1 = a0 - a1
  6714: 33 07                    a0 = 0
  6716: 7b 28 08                 u64 [t0 + 0x8] = a1
  6719: 28 39                    jump @314
      :                          @307
  6721: 33 07 01                 a0 = 0x1
  6724: 7b 27 08                 u64 [t0 + 0x8] = a0
  6727: 28 31                    jump @314
      :                          @308
  6729: 64 6c                    a5 = s1
  6731: 82 17                    a0 = u64 [sp]
  6733: 95 77 00 00 01           a0 = a0 + 0x10000
  6738: 82 12 18                 t0 = u64 [sp + 0x18]
  6741: 82 16 08                 s1 = u64 [sp + 0x8]
  6744: 01                       fallthrough
      :                          @309
  6745: 82 78                    a1 = u64 [a0]
  6747: c9 87 09                 a2 = a0 - a1
  6750: ab 69 11                 jump @313 if a2 != s1
      :                          @310
  6753: c9 c8 09                 a2 = a1 - a5
  6756: 01                       fallthrough
      :                          @311
  6757: 82 7a                    a3 = u64 [a0]
  6759: ab 8a f2                 jump @309 if a3 != a1
      :                          @312
  6762: 7b 79                    u64 [a0] = a2
  6764: 33 0b                    a4 = 0
  6766: 01                       fallthrough
      :                          @313
  6767: 82 18 10                 a1 = u64 [sp + 0x10]
  6770: 33 07                    a0 = 0
  6772: 7b 28 08                 u64 [t0 + 0x8] = a1
  6775: 01                       fallthrough
      :                          @314
  6776: 7b 25 10                 u64 [t0 + 0x10] = s0
  6779: 7b 27                    u64 [t0] = a0
  6781: 82 10 30                 ra = u64 [sp + 0x30]
  6784: 82 15 28                 s0 = u64 [sp + 0x28]
  6787: 82 16 20                 s1 = u64 [sp + 0x20]
  6790: 95 11 38                 sp = sp + 0x38
  6793: 32 00                    ret
      :                          @315
  6795: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  6798: 7b 10 40                 u64 [sp + 0x40] = ra
  6801: 7b 15 38                 u64 [sp + 0x38] = s0
  6804: 7b 16 30                 u64 [sp + 0x30] = s1
  6807: 95 88 01                 a1 = a1 + 0x1
  6810: 51 08 54                 jump @323 if a1 == 0
      :                          @316
  6813: 64 75                    s0 = a0
  6815: 82 77                    a0 = u64 [a0]
  6817: 97 79 01                 a2 = a0 << 0x1
  6820: 33 0a 08                 a3 = 0x8
  6823: e4 a8 08                 a1 = maxu(a1, a3)
  6826: e4 89 06                 s1 = maxu(a2, a1)
  6829: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  6832: 98 88 3f                 a1 = a1 >> 0x3f
  6835: 51 07 12                 jump @318 if a0 == 0
      :                          @317
  6838: 82 59 08                 a2 = u64 [s0 + 0x8]
  6841: 7b 19 18                 u64 [sp + 0x18] = a2
  6844: 49 11 20 01              u64 [sp + 32] = 0x1
  6848: 7b 17 28                 u64 [sp + 0x28] = a0
  6851: 28 06                    jump @319
      :                          @318
  6853: 49 11 20                 u64 [sp + 32] = 0
  6856: 01                       fallthrough
      :                          @319
  6857: 64 17                    a0 = sp
  6859: 95 1a 18                 a3 = sp + 0x18
  6862: 64 69                    a2 = s1
  6864: 50 20 92 00 6c fe        ra = 146, jump @283
      :                          @320 [@dyn 73]
  6870: 82 18                    a1 = u64 [sp]
  6872: 82 17 08                 a0 = u64 [sp + 0x8]
  6875: 51 08 14                 jump @324 if a1 == 0
      :                          @321
  6878: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  6888: aa 87 0d                 jump @325 if a0 == a1
      :                          @322
  6891: 52 07 18                 jump @326 if a0 != 0
      :                          @323
  6894: 00                       trap
      :                          @324
  6895: 7b 57 08                 u64 [s0 + 0x8] = a0
  6898: 7b 56                    u64 [s0] = s1
  6900: 01                       fallthrough
      :                          @325
  6901: 82 10 40                 ra = u64 [sp + 0x40]
  6904: 82 15 38                 s0 = u64 [sp + 0x38]
  6907: 82 16 30                 s1 = u64 [sp + 0x30]
  6910: 95 11 48                 sp = sp + 0x48
  6913: 32 00                    ret
      :                          @326
  6915: 00                       trap
      :                          @327
  6916: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  6919: 7b 10 30                 u64 [sp + 0x30] = ra
  6922: 7b 15 28                 u64 [sp + 0x28] = s0
  6925: 7b 16 20                 u64 [sp + 0x20] = s1
  6928: 64 89                    a2 = a1
  6930: 82 8a 08                 a3 = u64 [a1 + 0x8]
  6933: 64 75                    s0 = a0
  6935: 51 0a 35                 jump @332 if a3 == 0
      :                          @328
  6938: 82 98                    a1 = u64 [a2]
  6940: 33 07                    a0 = 0
  6942: 95 8b 08                 a4 = a1 + 0x8
  6945: 01                       fallthrough
      :                          @329
  6946: 82 bc                    a5 = u64 [a4]
  6948: c8 c7 07                 a0 = a0 + a5
  6951: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  6954: 95 bb 10                 a4 = a4 + 0x10
  6957: 52 0a f5                 jump @329 if a3 != 0
      :                          @330
  6960: 82 9a 18                 a3 = u64 [a2 + 0x18]
  6963: 51 0a 24                 jump @334 if a3 == 0
      :                          @331
  6966: 82 88 08                 a1 = u64 [a1 + 0x8]
  6969: 8e 88                    a1 = a1 >u 0
  6971: 88 7a 10                 a3 = a0 <u 0x10
  6974: 85 aa 01                 a3 = a3 ^ 0x1
  6977: d4 a8 08                 a1 = a1 | a3
  6980: 89 7a                    a3 = a0 <s 0
  6982: e0 a8 08                 a1 = a1 & ~a3
  6985: 52 08 0a                 jump @333 if a1 != 0
      :                          @332
  6988: 33 07                    a0 = 0
  6990: 33 08 01                 a1 = 0x1
  6993: 28 4a                    jump @342
      :                          @333
  6995: 97 77 01                 a0 = a0 << 0x1
  6998: 01                       fallthrough
      :                          @334
  6999: 51 07 40                 jump @341 if a0 == 0
      :                          @335
  7002: 57 07 79                 jump @347 if a0 <s 0
      :                          @336
  7005: 64 52                    t0 = s0
  7007: 33 0b b0 1a 03           a4 = 0x31ab0
  7012: 33 08 00 00 01           a1 = 0x10000
  7017: c8 8b 0b                 a4 = a4 + a1
  7020: 01                       fallthrough
      :                          @337
  7021: 82 bc                    a5 = u64 [a4]
  7023: c8 7c 0a                 a3 = a5 + a0
  7026: ac ca 5f                 jump @345 if a3 <u a5
      :                          @338
  7029: 95 a5 01                 s0 = a3 + 0x1
  7032: 88 56 01                 s1 = s0 <u 0x1
  7035: d8 58 05                 s0 = a1 <u s0
  7038: d4 65 05                 s0 = s0 | s1
  7041: 52 05 50                 jump @345 if s0 != 0
      :                          @339
  7044: 82 b6                    s1 = u64 [a4]
  7046: ab c6 e7                 jump @337 if s1 != a5
      :                          @340
  7049: 7b ba                    u64 [a4] = a3
  7051: 33 08 b0 1a 04           a1 = 0x41ab0
  7056: c9 a8 08                 a1 = a1 - a3
  7059: 64 25                    s0 = t0
  7061: 28 06                    jump @342
      :                          @341
  7063: 33 08 01                 a1 = 0x1
  7066: 01                       fallthrough
      :                          @342
  7067: 7b 17                    u64 [sp] = a0
  7069: 7b 18 08                 u64 [sp + 0x8] = a1
  7072: 49 11 10                 u64 [sp + 16] = 0
  7075: 33 08 08 01 01           a1 = 0x10108
  7080: 64 17                    a0 = sp
  7082: 50 20 94 00 80 06        ra = 148, jump @471
      :                          @343 [@dyn 74]
  7088: 52 07 22                 jump @346 if a0 != 0
      :                          @344
  7091: 82 17 10                 a0 = u64 [sp + 0x10]
  7094: 82 18 08                 a1 = u64 [sp + 0x8]
  7097: 82 19                    a2 = u64 [sp]
  7099: 7b 57 10                 u64 [s0 + 0x10] = a0
  7102: 7b 58 08                 u64 [s0 + 0x8] = a1
  7105: 7b 59                    u64 [s0] = a2
  7107: 82 10 30                 ra = u64 [sp + 0x30]
  7110: 82 15 28                 s0 = u64 [sp + 0x28]
  7113: 82 16 20                 s1 = u64 [sp + 0x20]
  7116: 95 11 38                 sp = sp + 0x38
  7119: 32 00                    ret
      :                          @345
  7121: 00                       trap
      :                          @346
  7122: 00                       trap
      :                          @347
  7123: 00                       trap
      :                          @348 [@dyn 75]
  7124: 82 72                    t0 = u64 [a0]
  7126: 33 09 00 00 ff           a2 = 0xffffffffffff0000
  7131: 95 2a ff ff fe           a3 = t0 + 0xfffffffffffeffff
  7136: ac 9a 28                 jump @354 if a3 <u a2
      :                          @349
  7139: 82 77 08                 a0 = u64 [a0 + 0x8]
  7142: 33 09 b0 1a 03           a2 = 0x31ab0
  7147: 95 99 00 00 01           a2 = a2 + 0x10000
  7152: 01                       fallthrough
      :                          @350
  7153: 82 9a                    a3 = u64 [a2]
  7155: c9 a9 0b                 a4 = a2 - a3
  7158: ab 7b 12                 jump @354 if a4 != a0
      :                          @351
  7161: c9 2a 0b                 a4 = a3 - t0
  7164: 01                       fallthrough
      :                          @352
  7165: 82 9c                    a5 = u64 [a2]
  7167: ab ac f2                 jump @350 if a5 != a3
      :                          @353
  7170: 7b 9b                    u64 [a2] = a4
  7172: 33 08                    a1 = 0
  7174: 32 00                    ret
      :                          @354
  7176: 32 00                    ret
      :                          @355 [@dyn 76]
  7178: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  7181: 7b 10 18                 u64 [sp + 0x18] = ra
  7184: 7b 15 10                 u64 [sp + 0x10] = s0
  7187: 7b 16 08                 u64 [sp + 0x8] = s1
  7190: 64 75                    s0 = a0
  7192: 82 7a 10                 a3 = u64 [a0 + 0x10]
  7195: 82 77                    a0 = u64 [a0]
  7197: c9 a7 07                 a0 = a0 - a3
  7200: 64 96                    s1 = a2
  7202: ac 97 2b                 jump @358 if a0 <u a2
      :                          @356
  7205: 7b 1a                    u64 [sp] = a3
  7207: 82 57 08                 a0 = u64 [s0 + 0x8]
  7210: c8 a7 07                 a0 = a0 + a3
  7213: 64 69                    a2 = s1
  7215: 50 20 9a 00 4f 01        ra = 154, jump @377
      :                          @357 [@dyn 77]
  7221: 82 17                    a0 = u64 [sp]
  7223: c8 76 06                 s1 = s1 + a0
  7226: 7b 56 10                 u64 [s0 + 0x10] = s1
  7229: 33 07                    a0 = 0
  7231: 82 10 18                 ra = u64 [sp + 0x18]
  7234: 82 15 10                 s0 = u64 [sp + 0x10]
  7237: 82 16 08                 s1 = u64 [sp + 0x8]
  7240: 95 11 20                 sp = sp + 0x20
  7243: 32 00                    ret
      :                          @358
  7245: 64 57                    a0 = s0
  7247: 7b 18                    u64 [sp] = a1
  7249: 64 a8                    a1 = a3
  7251: 64 69                    a2 = s1
  7253: 50 20 9c 00 6f fc        ra = 156, jump @271
      :                          @359 [@dyn 78]
  7259: 82 18                    a1 = u64 [sp]
  7261: 82 5a 10                 a3 = u64 [s0 + 0x10]
  7264: 28 c5                    jump @356
      :                          @360 [@dyn 79]
  7266: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  7269: 7b 10 20                 u64 [sp + 0x20] = ra
  7272: 7b 15 18                 u64 [sp + 0x18] = s0
  7275: 7b 16 10                 u64 [sp + 0x10] = s1
  7278: 64 86                    s1 = a1
  7280: 83 88                    i32 a1 = a1 + 0
  7282: 33 09 80 00              a2 = 0x80
  7286: 64 7a                    a3 = a0
  7288: ae 98 2c                 jump @365 if a1 >=u a2
      :                          @361
  7291: 82 a8 10                 a1 = u64 [a3 + 0x10]
  7294: 82 a7                    a0 = u64 [a3]
  7296: ab 78 13                 jump @364 if a1 != a0
      :                          @362
  7299: 64 a7                    a0 = a3
  7301: 64 a5                    s0 = a3
  7303: 50 20 a0 00 04 fe        ra = 160, jump @315
      :                          @363 [@dyn 80]
  7309: 64 5a                    a3 = s0
  7311: 82 58 10                 a1 = u64 [s0 + 0x10]
  7314: 01                       fallthrough
      :                          @364
  7315: 82 a7 08                 a0 = u64 [a3 + 0x8]
  7318: c8 87 07                 a0 = a0 + a1
  7321: 78 76                    u8 [a0] = s1
  7323: 95 88 01                 a1 = a1 + 0x1
  7326: 7b a8 10                 u64 [a3 + 0x10] = a1
  7329: 28 ac 00                 jump @373
      :                          @365
  7332: 8b 67 0b                 i32 a0 = s1 >> 0xb
  7335: 48 11 0c                 u32 [sp + 12] = 0
  7338: 52 07 1c                 jump @367 if a0 != 0
      :                          @366
  7341: 98 67 06                 a0 = s1 >> 0x6
  7344: 86 77 c0 00              a0 = a0 | 0xc0
  7348: 78 17 0c                 u8 [sp + 0xc] = a0
  7351: 84 67 3f                 a0 = s1 & 0x3f
  7354: 86 77 80 00              a0 = a0 | 0x80
  7358: 78 17 0d                 u8 [sp + 0xd] = a0
  7361: 33 06 02                 s1 = 0x2
  7364: 28 63                    jump @370
      :                          @367
  7366: 8b 67 10                 i32 a0 = s1 >> 0x10
  7369: 52 07 29                 jump @369 if a0 != 0
      :                          @368
  7372: 98 67 0c                 a0 = s1 >> 0xc
  7375: 86 77 e0 00              a0 = a0 | 0xe0
  7379: 78 17 0c                 u8 [sp + 0xc] = a0
  7382: 97 67 34                 a0 = s1 << 0x34
  7385: 98 77 3a                 a0 = a0 >> 0x3a
  7388: 95 77 80 00              a0 = a0 + 0x80
  7392: 78 17 0d                 u8 [sp + 0xd] = a0
  7395: 84 67 3f                 a0 = s1 & 0x3f
  7398: 86 77 80 00              a0 = a0 | 0x80
  7402: 78 17 0e                 u8 [sp + 0xe] = a0
  7405: 33 06 03                 s1 = 0x3
  7408: 28 37                    jump @370
      :                          @369
  7410: 97 67 2b                 a0 = s1 << 0x2b
  7413: 98 77 3d                 a0 = a0 >> 0x3d
  7416: 95 77 f0 00              a0 = a0 + 0xf0
  7420: 78 17 0c                 u8 [sp + 0xc] = a0
  7423: 97 67 2e                 a0 = s1 << 0x2e
  7426: 98 77 3a                 a0 = a0 >> 0x3a
  7429: 95 77 80 00              a0 = a0 + 0x80
  7433: 78 17 0d                 u8 [sp + 0xd] = a0
  7436: 97 67 34                 a0 = s1 << 0x34
  7439: 98 77 3a                 a0 = a0 >> 0x3a
  7442: 95 77 80 00              a0 = a0 + 0x80
  7446: 78 17 0e                 u8 [sp + 0xe] = a0
  7449: 84 67 3f                 a0 = s1 & 0x3f
  7452: 86 77 80 00              a0 = a0 | 0x80
  7456: 78 17 0f                 u8 [sp + 0xf] = a0
  7459: 33 06 04                 s1 = 0x4
  7462: 01                       fallthrough
      :                          @370
  7463: 82 a5 10                 s0 = u64 [a3 + 0x10]
  7466: 82 a7                    a0 = u64 [a3]
  7468: c9 57 07                 a0 = a0 - s0
  7471: ac 67 2e                 jump @374 if a0 <u s1
      :                          @371
  7474: 7b 1a                    u64 [sp] = a3
  7476: 82 a7 08                 a0 = u64 [a3 + 0x8]
  7479: c8 57 07                 a0 = a0 + s0
  7482: 95 18 0c                 a1 = sp + 0xc
  7485: 64 69                    a2 = s1
  7487: 50 20 a2 00 3f           ra = 162, jump @377
      :                          @372 [@dyn 81]
  7492: c8 56 06                 s1 = s1 + s0
  7495: 82 17                    a0 = u64 [sp]
  7497: 7b 76 10                 u64 [a0 + 0x10] = s1
  7500: 01                       fallthrough
      :                          @373
  7501: 33 07                    a0 = 0
  7503: 82 10 20                 ra = u64 [sp + 0x20]
  7506: 82 15 18                 s0 = u64 [sp + 0x18]
  7509: 82 16 10                 s1 = u64 [sp + 0x10]
  7512: 95 11 28                 sp = sp + 0x28
  7515: 32 00                    ret
      :                          @374
  7517: 64 a7                    a0 = a3
  7519: 64 58                    a1 = s0
  7521: 64 69                    a2 = s1
  7523: 64 a5                    s0 = a3
  7525: 50 20 a4 00 5f fb        ra = 164, jump @271
      :                          @375 [@dyn 82]
  7531: 64 5a                    a3 = s0
  7533: 82 55 10                 s0 = u64 [s0 + 0x10]
  7536: 28 c2                    jump @371
      :                          @376 [@dyn 83]
  7538: 64 8a                    a3 = a1
  7540: 33 08 08 01 01           a1 = 0x10108
  7545: 64 a9                    a2 = a3
  7547: 28 af 04                 jump @471
      :                          @377
  7550: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  7553: 7b 10 18                 u64 [sp + 0x18] = ra
  7556: 7b 15 10                 u64 [sp + 0x10] = s0
  7559: 7b 16 08                 u64 [sp + 0x8] = s1
  7562: 53 19 10 64              jump @386 if a2 <u 16
      :                          @378
  7566: 8d 7a                    i32 a3 = -a0
  7568: 84 a2 07                 t0 = a3 & 0x7
  7571: c8 27 0b                 a4 = a0 + t0
  7574: 51 02 15                 jump @381 if t0 == 0
      :                          @379
  7577: 64 8c                    a5 = a1
  7579: 64 75                    s0 = a0
  7581: 01                       fallthrough
      :                          @380
  7582: 7c ca                    a3 = u8 [a5]
  7584: 78 5a                    u8 [s0] = a3
  7586: 95 55 01                 s0 = s0 + 0x1
  7589: 95 cc 01                 a5 = a5 + 0x1
  7592: ac b5 f6                 jump @380 if s0 <u a4
      :                          @381
  7595: c8 28 03                 t1 = a1 + t0
  7598: c9 29 02                 t0 = a2 - t0
  7601: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  7604: 84 38 07                 a1 = t1 & 0x7
  7607: c8 4b 0a                 a3 = a4 + t2
  7610: 51 08 3b                 jump @388 if a1 == 0
      :                          @382
  7613: 58 04 4b                 jump @391 if t2 <=s 0
      :                          @383
  7616: 97 38 03                 a1 = t1 << 0x3
  7619: 84 80 38                 ra = a1 & 0x38
  7622: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  7625: 82 c5                    s0 = u64 [a5]
  7627: 8d 88                    i32 a1 = -a1
  7629: 84 88 38                 a1 = a1 & 0x38
  7632: 95 cc 08                 a5 = a5 + 0x8
  7635: 01                       fallthrough
      :                          @384
  7636: 82 c6                    s1 = u64 [a5]
  7638: d0 05 05                 s0 = s0 >> ra
  7641: cf 86 09                 a2 = s1 << a1
  7644: d4 59 09                 a2 = a2 | s0
  7647: 7b b9                    u64 [a4] = a2
  7649: 95 bb 08                 a4 = a4 + 0x8
  7652: 95 cc 08                 a5 = a5 + 0x8
  7655: 64 65                    s0 = s1
  7657: ac ab eb                 jump @384 if a4 <u a3
      :                          @385
  7660: 28 1c                    jump @391
      :                          @386
  7662: 64 7a                    a3 = a0
  7664: 52 09 21                 jump @392 if a2 != 0
      :                          @387
  7667: 28 2f                    jump @394
      :                          @388
  7669: 58 04 13                 jump @391 if t2 <=s 0
      :                          @389
  7672: 64 38                    a1 = t1
  7674: 01                       fallthrough
      :                          @390
  7675: 82 89                    a2 = u64 [a1]
  7677: 7b b9                    u64 [a4] = a2
  7679: 95 bb 08                 a4 = a4 + 0x8
  7682: 95 88 08                 a1 = a1 + 0x8
  7685: ac ab f6                 jump @390 if a4 <u a3
      :                          @391
  7688: c8 43 08                 a1 = t1 + t2
  7691: 84 29 07                 a2 = t0 & 0x7
  7694: 51 09 14                 jump @394 if a2 == 0
      :                          @392
  7697: c8 a9 09                 a2 = a2 + a3
  7700: 01                       fallthrough
      :                          @393
  7701: 7c 8b                    a4 = u8 [a1]
  7703: 78 ab                    u8 [a3] = a4
  7705: 95 aa 01                 a3 = a3 + 0x1
  7708: 95 88 01                 a1 = a1 + 0x1
  7711: ac 9a f6                 jump @393 if a3 <u a2
      :                          @394
  7714: 82 10 18                 ra = u64 [sp + 0x18]
  7717: 82 15 10                 s0 = u64 [sp + 0x10]
  7720: 82 16 08                 s1 = u64 [sp + 0x8]
  7723: 95 11 20                 sp = sp + 0x20
  7726: 32 00                    ret
      :                          @395
  7728: 8d 7a                    i32 a3 = -a0
  7730: 84 aa 07                 a3 = a3 & 0x7
  7733: c8 a7 0b                 a4 = a0 + a3
  7736: 51 0a 0e                 jump @398 if a3 == 0
      :                          @396
  7739: 64 7c                    a5 = a0
  7741: 01                       fallthrough
      :                          @397
  7742: 78 c8                    u8 [a5] = a1
  7744: 95 cc 01                 a5 = a5 + 0x1
  7747: ac bc fb                 jump @397 if a5 <u a4
      :                          @398
  7750: c9 a9 03                 t1 = a2 - a3
  7753: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  7756: c8 cb 0a                 a3 = a4 + a5
  7759: 58 0c 1d                 jump @401 if a5 <=s 0
      :                          @399
  7762: 84 82 ff 00              t0 = a1 & 0xff
  7766: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  7776: ca 92 0c                 a5 = t0 * a2
  7779: 01                       fallthrough
      :                          @400
  7780: 7b bc                    u64 [a4] = a5
  7782: 95 bb 08                 a4 = a4 + 0x8
  7785: ac ab fb                 jump @400 if a4 <u a3
      :                          @401
  7788: 84 39 07                 a2 = t1 & 0x7
  7791: 52 09 05                 jump @403 if a2 != 0
      :                          @402
  7794: 28 0e                    jump @405
      :                          @403
  7796: c8 a9 09                 a2 = a2 + a3
  7799: 01                       fallthrough
      :                          @404
  7800: 78 a8                    u8 [a3] = a1
  7802: 95 aa 01                 a3 = a3 + 0x1
  7805: ac 9a fb                 jump @404 if a3 <u a2
      :                          @405
  7808: 32 00                    ret
      :                          @406 [@dyn 84]
  7810: 82 77                    a0 = u64 [a0]
  7812: 01                       fallthrough
      :                          @407
  7813: 28                       jump @407
      :                          @408 [@dyn 85]
  7814: 82 77                    a0 = u64 [a0]
  7816: 01                       fallthrough
      :                          @409
  7817: 95 11 a8                 sp = sp + 0xffffffffffffffa8
  7820: 7b 10 50                 u64 [sp + 0x50] = ra
  7823: 7b 15 48                 u64 [sp + 0x48] = s0
  7826: 7b 16 40                 u64 [sp + 0x40] = s1
  7829: 7b 18                    u64 [sp] = a1
  7831: 98 79 04                 a2 = a0 >> 0x4
  7834: 33 08 27                 a1 = 0x27
  7837: 53 29 71 02 81 00        jump @412 if a2 <u 625
      :                          @410
  7843: 33 08 27                 a1 = 0x27
  7846: 95 1a 3e                 a3 = sp + 0x3e
  7849: 3a 09 50 00 03           a2 = u64 [0x30050]
  7854: 7b 19 10                 u64 [sp + 0x10] = a2
  7857: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
  7863: 33 04 7b 14              t2 = 0x147b
  7867: 33 0b 7c 01 01           a4 = 0x1017c
  7872: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
  7878: 01                       fallthrough
      :                          @411
  7879: 64 72                    t0 = a0
  7881: 82 17 10                 a0 = u64 [sp + 0x10]
  7884: d6 72 07                 a0 = t0 mulhu a0
  7887: 98 77 0b                 a0 = a0 >> 0xb
  7890: 82 19 08                 a2 = u64 [sp + 0x8]
  7893: c0 97 0c                 i32 a5 = a0 * a2
  7896: c8 2c 06                 s1 = a5 + t0
  7899: 97 6c 30                 a5 = s1 << 0x30
  7902: 98 cc 32                 a5 = a5 >> 0x32
  7905: ca 4c 0c                 a5 = a5 * t2
  7908: 98 c3 11                 t1 = a5 >> 0x11
  7911: 98 cc 10                 a5 = a5 >> 0x10
  7914: 84 cc fe 07              a5 = a5 & 0x7fe
  7918: 96 39 9c                 a2 = t1 * 0xffffffffffffff9c
  7921: c8 69 09                 a2 = a2 + s1
  7924: 97 99 31                 a2 = a2 << 0x31
  7927: 98 99 30                 a2 = a2 >> 0x30
  7930: c8 bc 0c                 a5 = a5 + a4
  7933: 7c c6                    s1 = u8 [a5]
  7935: 7c cc 01                 a5 = u8 [a5 + 0x1]
  7938: c8 b9 09                 a2 = a2 + a4
  7941: 7c 95 01                 s0 = u8 [a2 + 0x1]
  7944: 7c 99                    a2 = u8 [a2]
  7946: 78 ac ff                 u8 [a3 + 0xffffffffffffffff] = a5
  7949: 78 a6 fe                 u8 [a3 + 0xfffffffffffffffe] = s1
  7952: 78 a5 01                 u8 [a3 + 0x1] = s0
  7955: 78 a9                    u8 [a3] = a2
  7957: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
  7960: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
  7963: ac 20 ac                 jump @411 if ra <u t0
      :                          @412
  7966: 54 17 63 3b              jump @414 if a0 <=u 99
      :                          @413
  7970: 97 79 30                 a2 = a0 << 0x30
  7973: 98 99 32                 a2 = a2 >> 0x32
  7976: 96 99 7b 14              a2 = a2 * 0x147b
  7980: 98 99 11                 a2 = a2 >> 0x11
  7983: 96 9a 9c                 a3 = a2 * 0xffffffffffffff9c
  7986: c8 a7 07                 a0 = a0 + a3
  7989: 97 77 31                 a0 = a0 << 0x31
  7992: 98 77 30                 a0 = a0 >> 0x30
  7995: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  7998: 33 0a 7c 01 01           a3 = 0x1017c
  8003: c8 a7 07                 a0 = a0 + a3
  8006: 7c 7a 01                 a3 = u8 [a0 + 0x1]
  8009: 7c 77                    a0 = u8 [a0]
  8011: 95 1b 19                 a4 = sp + 0x19
  8014: c8 8b 0b                 a4 = a4 + a1
  8017: 78 ba 01                 u8 [a4 + 0x1] = a3
  8020: 78 b7                    u8 [a4] = a0
  8022: 64 97                    a0 = a2
  8024: 01                       fallthrough
      :                          @414
  8025: 55 17 0a 14              jump @416 if a0 >=u 10
      :                          @415
  8029: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  8032: 95 19 19                 a2 = sp + 0x19
  8035: c8 89 09                 a2 = a2 + a1
  8038: 83 77 30                 i32 a0 = a0 + 0x30
  8041: 78 97                    u8 [a2] = a0
  8043: 28 21                    jump @417
      :                          @416
  8045: 97 77 01                 a0 = a0 << 0x1
  8048: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  8051: 33 09 7c 01 01           a2 = 0x1017c
  8056: c8 97 07                 a0 = a0 + a2
  8059: 7c 79 01                 a2 = u8 [a0 + 0x1]
  8062: 7c 77                    a0 = u8 [a0]
  8064: 95 1a 19                 a3 = sp + 0x19
  8067: c8 8a 0a                 a3 = a3 + a1
  8070: 78 a9 01                 u8 [a3 + 0x1] = a2
  8073: 78 a7                    u8 [a3] = a0
  8075: 01                       fallthrough
      :                          @417
  8076: 95 1a 19                 a3 = sp + 0x19
  8079: c8 8a 0a                 a3 = a3 + a1
  8082: 9a 8b 27                 a4 = 0x27 - a1
  8085: 33 08 38 01 01           a1 = 0x10138
  8090: 82 17                    a0 = u64 [sp]
  8092: 33 09                    a2 = 0
  8094: 50 20 ac 00 13           ra = 172, jump @419
      :                          @418 [@dyn 86]
  8099: 82 10 50                 ra = u64 [sp + 0x50]
  8102: 82 15 48                 s0 = u64 [sp + 0x48]
  8105: 82 16 40                 s1 = u64 [sp + 0x40]
  8108: 95 11 58                 sp = sp + 0x58
  8111: 32 00                    ret
      :                          @419
  8113: 95 11 98                 sp = sp + 0xffffffffffffff98
  8116: 7b 10 60                 u64 [sp + 0x60] = ra
  8119: 7b 15 58                 u64 [sp + 0x58] = s0
  8122: 7b 16 50                 u64 [sp + 0x50] = s1
  8125: 80 73 34                 t1 = u32 [a0 + 0x34]
  8128: 7b 1a 20                 u64 [sp + 0x20] = a3
  8131: 64 9c                    a5 = a2
  8133: 84 36 01                 s1 = t1 & 0x1
  8136: 33 02 2b                 t0 = 0x2b
  8139: 33 09 00 00 11           a2 = 0x110000
  8144: 84 3a 04                 a3 = t1 & 0x4
  8147: 7b 1b 28                 u64 [sp + 0x28] = a4
  8150: c8 b6 04                 t2 = s1 + a4
  8153: 7b 1c 30                 u64 [sp + 0x30] = a5
  8156: 52 0a 10                 jump @422 if a3 != 0
      :                          @420
  8159: 49 11 38                 u64 [sp + 56] = 0
  8162: 82 78                    a1 = u64 [a0]
  8164: 94 69 2b                 a2 = 0x2b if s1 != 0
  8167: 52 08 35                 jump @426 if a1 != 0
      :                          @421
  8170: 28 56                    jump @431
      :                          @422
  8172: 7b 18 38                 u64 [sp + 0x38] = a1
  8175: 33 09                    a2 = 0
  8177: 51 0c 1b                 jump @425 if a5 == 0
      :                          @423
  8180: 82 1b 38                 a4 = u64 [sp + 0x38]
  8183: 01                       fallthrough
      :                          @424
  8184: 7d b5                    s0 = i8 [a4]
  8186: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
  8189: 85 5a 01                 a3 = s0 ^ 0x1
  8192: c8 a9 09                 a2 = a2 + a3
  8195: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  8198: 95 bb 01                 a4 = a4 + 0x1
  8201: 52 0c ef                 jump @424 if a5 != 0
      :                          @425
  8204: c8 94 04                 t2 = t2 + a2
  8207: 33 09 00 00 11           a2 = 0x110000
  8212: 82 78                    a1 = u64 [a0]
  8214: db 62 09                 a2 = t0 if s1 != 0
  8217: 51 08 27                 jump @431 if a1 == 0
      :                          @426
  8220: 82 7a 08                 a3 = u64 [a0 + 0x8]
  8223: ae a4 21                 jump @431 if t2 >=u a3
      :                          @427
  8226: 84 38 08                 a1 = t1 & 0x8
  8229: 52 08 51                 jump @434 if a1 != 0
      :                          @428
  8232: 7c 76 38                 s1 = u8 [a0 + 0x38]
  8235: c9 4a 0a                 a3 = a3 - t2
  8238: 7b 19 18                 u64 [sp + 0x18] = a2
  8241: 5a 16 01 a0 00           jump @441 if s1 >s 1
      :                          @429
  8246: 52 06 ad 00              jump @443 if s1 != 0
      :                          @430
  8250: 7b 1a 10                 u64 [sp + 0x10] = a3
  8253: 28 ac 00                 jump @444
      :                          @431
  8256: 82 75 20                 s0 = u64 [a0 + 0x20]
  8259: 82 76 28                 s1 = u64 [a0 + 0x28]
  8262: 64 57                    a0 = s0
  8264: 64 68                    a1 = s1
  8266: 82 1a 38                 a3 = u64 [sp + 0x38]
  8269: 82 1b 30                 a4 = u64 [sp + 0x30]
  8272: 50 20 ae 00 75 01        ra = 174, jump @464
      :                          @432 [@dyn 87]
  8278: 33 08 01                 a1 = 0x1
  8281: 52 07 be 00              jump @449 if a0 != 0
      :                          @433
  8285: 82 6c 18                 a5 = u64 [s1 + 0x18]
  8288: 64 57                    a0 = s0
  8290: 82 18 20                 a1 = u64 [sp + 0x20]
  8293: 82 19 28                 a2 = u64 [sp + 0x28]
  8296: 82 10 60                 ra = u64 [sp + 0x60]
  8299: 82 15 58                 s0 = u64 [sp + 0x58]
  8302: 82 16 50                 s1 = u64 [sp + 0x50]
  8305: 95 11 68                 sp = sp + 0x68
  8308: 32 0c                    jump [a5]
      :                          @434
  8310: 7b 1a 40                 u64 [sp + 0x40] = a3
  8313: 64 45                    s0 = t2
  8315: 81 78 30                 a1 = i32 [a0 + 0x30]
  8318: 7b 18 10                 u64 [sp + 0x10] = a1
  8321: 7c 7a 38                 a3 = u8 [a0 + 0x38]
  8324: 7b 1a 08                 u64 [sp + 0x8] = a3
  8327: 82 7a 20                 a3 = u64 [a0 + 0x20]
  8330: 82 78 28                 a1 = u64 [a0 + 0x28]
  8333: 48 17 30 30              u32 [a0 + 48] = 0x30
  8337: 7b 17                    u64 [sp] = a0
  8339: 46 17 38 01              u8 [a0 + 56] = 0x1
  8343: 7b 1a 48                 u64 [sp + 0x48] = a3
  8346: 64 a7                    a0 = a3
  8348: 64 86                    s1 = a1
  8350: 82 1a 38                 a3 = u64 [sp + 0x38]
  8353: 82 1b 30                 a4 = u64 [sp + 0x30]
  8356: 50 20 b0 00 21 01        ra = 176, jump @464
      :                          @435 [@dyn 88]
  8362: 52 07 69                 jump @448 if a0 != 0
      :                          @436
  8365: 82 17 40                 a0 = u64 [sp + 0x40]
  8368: c9 57 05                 s0 = a0 - s0
  8371: 95 55 01                 s0 = s0 + 0x1
  8374: 01                       fallthrough
      :                          @437
  8375: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  8378: 51 05 cb 00              jump @459 if s0 == 0
      :                          @438
  8382: 82 69 20                 a2 = u64 [s1 + 0x20]
  8385: 33 08 30                 a1 = 0x30
  8388: 82 17 48                 a0 = u64 [sp + 0x48]
  8391: b4 90 02 b2 00           ra = 178, jump [a2]
      :                          @439 [@dyn 89]
  8396: 51 07 eb                 jump @437 if a0 == 0
      :                          @440
  8399: 28 44                    jump @448
      :                          @441
  8401: 52 16 02 12              jump @443 if s1 != 2
      :                          @442
  8405: 98 a6 01                 s1 = a3 >> 0x1
  8408: 95 a8 01                 a1 = a3 + 0x1
  8411: 98 88 01                 a1 = a1 >> 0x1
  8414: 7b 18 10                 u64 [sp + 0x10] = a1
  8417: 28 08                    jump @444
      :                          @443
  8419: 64 a6                    s1 = a3
  8421: 49 11 10                 u64 [sp + 16] = 0
  8424: 01                       fallthrough
      :                          @444
  8425: 82 78 20                 a1 = u64 [a0 + 0x20]
  8428: 7b 18 48                 u64 [sp + 0x48] = a1
  8431: 82 75 28                 s0 = u64 [a0 + 0x28]
  8434: 81 77 30                 a0 = i32 [a0 + 0x30]
  8437: 7b 17 40                 u64 [sp + 0x40] = a0
  8440: 95 66 01                 s1 = s1 + 0x1
  8443: 01                       fallthrough
      :                          @445
  8444: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  8447: 51 06 28                 jump @450 if s1 == 0
      :                          @446
  8450: 82 59 20                 a2 = u64 [s0 + 0x20]
  8453: 82 17 48                 a0 = u64 [sp + 0x48]
  8456: 82 18 40                 a1 = u64 [sp + 0x40]
  8459: b4 90 02 b4 00           ra = 180, jump [a2]
      :                          @447 [@dyn 90]
  8464: 51 07 ec                 jump @445 if a0 == 0
      :                          @448
  8467: 33 08 01                 a1 = 0x1
  8470: 01                       fallthrough
      :                          @449
  8471: 64 87                    a0 = a1
  8473: 82 10 60                 ra = u64 [sp + 0x60]
  8476: 82 15 58                 s0 = u64 [sp + 0x58]
  8479: 82 16 50                 s1 = u64 [sp + 0x50]
  8482: 95 11 68                 sp = sp + 0x68
  8485: 32 00                    ret
      :                          @450
  8487: 82 16 48                 s1 = u64 [sp + 0x48]
  8490: 64 67                    a0 = s1
  8492: 64 58                    a1 = s0
  8494: 82 19 18                 a2 = u64 [sp + 0x18]
  8497: 82 1a 38                 a3 = u64 [sp + 0x38]
  8500: 82 1b 30                 a4 = u64 [sp + 0x30]
  8503: 50 20 b6 00 8e 00        ra = 182, jump @464
      :                          @451 [@dyn 91]
  8509: 33 08 01                 a1 = 0x1
  8512: 52 07 d7                 jump @449 if a0 != 0
      :                          @452
  8515: 82 5a 18                 a3 = u64 [s0 + 0x18]
  8518: 64 67                    a0 = s1
  8520: 82 18 20                 a1 = u64 [sp + 0x20]
  8523: 82 19 28                 a2 = u64 [sp + 0x28]
  8526: b4 a0 02 b8 00           ra = 184, jump [a3]
      :                          @453 [@dyn 92]
  8531: 33 08 01                 a1 = 0x1
  8534: 52 07 c1                 jump @449 if a0 != 0
      :                          @454
  8537: 82 17 10                 a0 = u64 [sp + 0x10]
  8540: 9a 77                    a0 = -a0
  8542: 7b 17 38                 u64 [sp + 0x38] = a0
  8545: 33 06 ff                 s1 = 0xffffffffffffffff
  8548: 01                       fallthrough
      :                          @455
  8549: 82 17 38                 a0 = u64 [sp + 0x38]
  8552: c8 67 07                 a0 = a0 + s1
  8555: 51 17 ff 45              jump @462 if a0 == 4294967295
      :                          @456
  8559: 82 59 20                 a2 = u64 [s0 + 0x20]
  8562: 82 17 48                 a0 = u64 [sp + 0x48]
  8565: 82 18 40                 a1 = u64 [sp + 0x40]
  8568: b4 90 02 ba 00           ra = 186, jump [a2]
      :                          @457 [@dyn 93]
  8573: 95 66 01                 s1 = s1 + 0x1
  8576: 51 07 e5                 jump @455 if a0 == 0
      :                          @458
  8579: 28 39                    jump @463
      :                          @459
  8581: 82 6a 18                 a3 = u64 [s1 + 0x18]
  8584: 82 17 48                 a0 = u64 [sp + 0x48]
  8587: 82 18 20                 a1 = u64 [sp + 0x20]
  8590: 82 19 28                 a2 = u64 [sp + 0x28]
  8593: b4 a0 02 bc 00           ra = 188, jump [a3]
      :                          @460 [@dyn 94]
  8598: 33 08 01                 a1 = 0x1
  8601: 52 07 7e ff              jump @449 if a0 != 0
      :                          @461
  8605: 33 08                    a1 = 0
  8607: 82 16                    s1 = u64 [sp]
  8609: 82 17 10                 a0 = u64 [sp + 0x10]
  8612: 7a 67 30                 u32 [s1 + 0x30] = a0
  8615: 82 17 08                 a0 = u64 [sp + 0x8]
  8618: 78 67 38                 u8 [s1 + 0x38] = a0
  8621: 28 6a ff                 jump @449
      :                          @462
  8624: 82 16 10                 s1 = u64 [sp + 0x10]
  8627: 82 17 10                 a0 = u64 [sp + 0x10]
  8630: d8 76 08                 a1 = s1 <u a0
  8633: 28 5e ff                 jump @449
      :                          @463
  8636: 82 17 10                 a0 = u64 [sp + 0x10]
  8639: d8 76 08                 a1 = s1 <u a0
  8642: 28 55 ff                 jump @449
      :                          @464
  8645: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  8648: 7b 10 20                 u64 [sp + 0x20] = ra
  8651: 7b 15 18                 u64 [sp + 0x18] = s0
  8654: 7b 16 10                 u64 [sp + 0x10] = s1
  8657: 83 9c                    i32 a5 = a2 + 0
  8659: 33 02 00 00 11           t0 = 0x110000
  8664: 64 a6                    s1 = a3
  8666: 64 85                    s0 = a1
  8668: 64 7a                    a3 = a0
  8670: aa 2c 21                 jump @467 if a5 == t0
      :                          @465
  8673: 82 5c 20                 a5 = u64 [s0 + 0x20]
  8676: 64 a7                    a0 = a3
  8678: 64 98                    a1 = a2
  8680: 7b 1b 08                 u64 [sp + 0x8] = a4
  8683: 7b 1a                    u64 [sp] = a3
  8685: b4 c0 02 be 00           ra = 190, jump [a5]
      :                          @466 [@dyn 95]
  8690: 82 1a                    a3 = u64 [sp]
  8692: 82 1b 08                 a4 = u64 [sp + 0x8]
  8695: 64 78                    a1 = a0
  8697: 33 07 01                 a0 = 0x1
  8700: 52 08 20                 jump @470 if a1 != 0
      :                          @467
  8703: 51 06 1a                 jump @469 if s1 == 0
      :                          @468
  8706: 82 5c 18                 a5 = u64 [s0 + 0x18]
  8709: 64 a7                    a0 = a3
  8711: 64 68                    a1 = s1
  8713: 64 b9                    a2 = a4
  8715: 82 10 20                 ra = u64 [sp + 0x20]
  8718: 82 15 18                 s0 = u64 [sp + 0x18]
  8721: 82 16 10                 s1 = u64 [sp + 0x10]
  8724: 95 11 28                 sp = sp + 0x28
  8727: 32 0c                    jump [a5]
      :                          @469
  8729: 33 07                    a0 = 0
  8731: 01                       fallthrough
      :                          @470
  8732: 82 10 20                 ra = u64 [sp + 0x20]
  8735: 82 15 18                 s0 = u64 [sp + 0x18]
  8738: 82 16 10                 s1 = u64 [sp + 0x10]
  8741: 95 11 28                 sp = sp + 0x28
  8744: 32 00                    ret
      :                          @471
  8746: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  8750: 7b 10 80 00              u64 [sp + 0x80] = ra
  8754: 7b 15 78                 u64 [sp + 0x78] = s0
  8757: 7b 16 70                 u64 [sp + 0x70] = s1
  8760: 49 11 60 20              u64 [sp + 96] = 0x20
  8764: 33 0a 03                 a3 = 0x3
  8767: 78 1a 68                 u8 [sp + 0x68] = a3
  8770: 82 96 20                 s1 = u64 [a2 + 0x20]
  8773: 49 11 30                 u64 [sp + 48] = 0
  8776: 49 11 40                 u64 [sp + 64] = 0
  8779: 7b 17 50                 u64 [sp + 0x50] = a0
  8782: 7b 18 58                 u64 [sp + 0x58] = a1
  8785: 51 06 0a 01              jump @493 if s1 == 0
      :                          @472
  8789: 82 97 28                 a0 = u64 [a2 + 0x28]
  8792: 51 07 79 01              jump @503 if a0 == 0
      :                          @473
  8796: 49 11 28                 u64 [sp + 40] = 0
  8799: 82 95                    s0 = u64 [a2]
  8801: 7b 19 08                 u64 [sp + 0x8] = a2
  8804: 82 98 10                 a1 = u64 [a2 + 0x10]
  8807: 7b 18 18                 u64 [sp + 0x18] = a1
  8810: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  8813: 97 88 03                 a1 = a1 << 0x3
  8816: 98 88 03                 a1 = a1 >> 0x3
  8819: 95 88 01                 a1 = a1 + 0x1
  8822: 7b 18                    u64 [sp] = a1
  8824: 95 55 08                 s0 = s0 + 0x8
  8827: 96 78 38                 a1 = a0 * 0x38
  8830: 95 66 18                 s1 = s1 + 0x18
  8833: 33 07 a8 00              a0 = 0xa8
  8837: 7b 17 10                 u64 [sp + 0x10] = a0
  8840: 01                       fallthrough
      :                          @474
  8841: 7b 18 20                 u64 [sp + 0x20] = a1
  8844: 82 59                    a2 = u64 [s0]
  8846: 51 09 18                 jump @477 if a2 == 0
      :                          @475
  8849: 82 1a 58                 a3 = u64 [sp + 0x58]
  8852: 82 17 50                 a0 = u64 [sp + 0x50]
  8855: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  8858: 82 aa 18                 a3 = u64 [a3 + 0x18]
  8861: b4 a0 02 c0 00           ra = 192, jump [a3]
      :                          @476 [@dyn 96]
  8866: 52 07 55 01              jump @506 if a0 != 0
      :                          @477
  8870: 81 67 10                 a0 = i32 [s1 + 0x10]
  8873: 7a 17 60                 u32 [sp + 0x60] = a0
  8876: 7c 67 18                 a0 = u8 [s1 + 0x18]
  8879: 78 17 68                 u8 [sp + 0x68] = a0
  8882: 81 67 14                 a0 = i32 [s1 + 0x14]
  8885: 7a 17 64                 u32 [sp + 0x64] = a0
  8888: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  8891: 82 67                    a0 = u64 [s1]
  8893: 51 08 26                 jump @482 if a1 == 0
      :                          @478
  8896: 52 18 01 16              jump @480 if a1 != 1
      :                          @479
  8900: 97 77 04                 a0 = a0 << 0x4
  8903: 82 18 18                 a1 = u64 [sp + 0x18]
  8906: c8 87 07                 a0 = a0 + a1
  8909: 82 78 08                 a1 = u64 [a0 + 0x8]
  8912: 82 19 10                 a2 = u64 [sp + 0x10]
  8915: aa 98 07                 jump @481 if a1 == a2
      :                          @480
  8918: 33 08                    a1 = 0
  8920: 28 0f                    jump @483
      :                          @481
  8922: 82 77                    a0 = u64 [a0]
  8924: 82 77                    a0 = u64 [a0]
  8926: 33 08 01                 a1 = 0x1
  8929: 28 06                    jump @483
      :                          @482
  8931: 33 08 01                 a1 = 0x1
  8934: 01                       fallthrough
      :                          @483
  8935: 7b 18 30                 u64 [sp + 0x30] = a1
  8938: 7b 17 38                 u64 [sp + 0x38] = a0
  8941: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  8944: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  8947: 51 08 26                 jump @488 if a1 == 0
      :                          @484
  8950: 52 18 01 16              jump @486 if a1 != 1
      :                          @485
  8954: 97 77 04                 a0 = a0 << 0x4
  8957: 82 18 18                 a1 = u64 [sp + 0x18]
  8960: c8 87 07                 a0 = a0 + a1
  8963: 82 78 08                 a1 = u64 [a0 + 0x8]
  8966: 82 19 10                 a2 = u64 [sp + 0x10]
  8969: aa 98 07                 jump @487 if a1 == a2
      :                          @486
  8972: 33 08                    a1 = 0
  8974: 28 0f                    jump @489
      :                          @487
  8976: 82 77                    a0 = u64 [a0]
  8978: 82 77                    a0 = u64 [a0]
  8980: 33 08 01                 a1 = 0x1
  8983: 28 06                    jump @489
      :                          @488
  8985: 33 08 01                 a1 = 0x1
  8988: 01                       fallthrough
      :                          @489
  8989: 7b 18 40                 u64 [sp + 0x40] = a1
  8992: 7b 17 48                 u64 [sp + 0x48] = a0
  8995: 82 67 08                 a0 = u64 [s1 + 0x8]
  8998: 97 77 04                 a0 = a0 << 0x4
  9001: 82 18 18                 a1 = u64 [sp + 0x18]
  9004: c8 78 08                 a1 = a1 + a0
  9007: 82 87                    a0 = u64 [a1]
  9009: 82 89 08                 a2 = u64 [a1 + 0x8]
  9012: 95 18 30                 a1 = sp + 0x30
  9015: b4 90 02 c2 00           ra = 194, jump [a2]
      :                          @490 [@dyn 97]
  9020: 52 07 bb 00              jump @506 if a0 != 0
      :                          @491
  9024: 95 55 10                 s0 = s0 + 0x10
  9027: 82 18 20                 a1 = u64 [sp + 0x20]
  9030: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  9033: 95 66 38                 s1 = s1 + 0x38
  9036: 82 17 28                 a0 = u64 [sp + 0x28]
  9039: 95 77 01                 a0 = a0 + 0x1
  9042: 7b 17 28                 u64 [sp + 0x28] = a0
  9045: 52 08 34 ff              jump @474 if a1 != 0
      :                          @492
  9049: 28 6b                    jump @501
      :                          @493
  9051: 82 97 18                 a0 = u64 [a2 + 0x18]
  9054: 51 07 73                 jump @503 if a0 == 0
      :                          @494
  9057: 82 95 10                 s0 = u64 [a2 + 0x10]
  9060: 33 0a                    a3 = 0
  9062: 97 78 04                 a1 = a0 << 0x4
  9065: c8 58 08                 a1 = a1 + s0
  9068: 7b 18 20                 u64 [sp + 0x20] = a1
  9071: 7b 19 08                 u64 [sp + 0x8] = a2
  9074: 82 96                    s1 = u64 [a2]
  9076: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  9079: 97 77 04                 a0 = a0 << 0x4
  9082: 98 77 04                 a0 = a0 >> 0x4
  9085: 95 77 01                 a0 = a0 + 0x1
  9088: 7b 17                    u64 [sp] = a0
  9090: 95 66 08                 s1 = s1 + 0x8
  9093: 01                       fallthrough
      :                          @495
  9094: 7b 1a 28                 u64 [sp + 0x28] = a3
  9097: 82 69                    a2 = u64 [s1]
  9099: 51 09 17                 jump @498 if a2 == 0
      :                          @496
  9102: 82 1a 58                 a3 = u64 [sp + 0x58]
  9105: 82 17 50                 a0 = u64 [sp + 0x50]
  9108: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  9111: 82 aa 18                 a3 = u64 [a3 + 0x18]
  9114: b4 a0 02 c4 00           ra = 196, jump [a3]
      :                          @497 [@dyn 98]
  9119: 52 07 58                 jump @506 if a0 != 0
      :                          @498
  9122: 82 57                    a0 = u64 [s0]
  9124: 82 59 08                 a2 = u64 [s0 + 0x8]
  9127: 95 18 30                 a1 = sp + 0x30
  9130: b4 90 02 c6 00           ra = 198, jump [a2]
      :                          @499 [@dyn 99]
  9135: 52 07 48                 jump @506 if a0 != 0
      :                          @500
  9138: 95 66 10                 s1 = s1 + 0x10
  9141: 95 55 10                 s0 = s0 + 0x10
  9144: 82 1a 28                 a3 = u64 [sp + 0x28]
  9147: 95 aa 01                 a3 = a3 + 0x1
  9150: 82 17 20                 a0 = u64 [sp + 0x20]
  9153: ab 75 c5                 jump @495 if s0 != a0
      :                          @501
  9156: 82 19 08                 a2 = u64 [sp + 0x8]
  9159: 82 1a                    a3 = u64 [sp]
  9161: 82 97 08                 a0 = u64 [a2 + 0x8]
  9164: ac 7a 0d                 jump @504 if a3 <u a0
      :                          @502
  9167: 28 2d                    jump @507
      :                          @503
  9169: 33 0a                    a3 = 0
  9171: 82 97 08                 a0 = u64 [a2 + 0x8]
  9174: 54 07 26                 jump @507 if a0 <=u 0
      :                          @504
  9177: 82 97                    a0 = u64 [a2]
  9179: 97 a8 04                 a1 = a3 << 0x4
  9182: c8 87 09                 a2 = a0 + a1
  9185: 82 1a 58                 a3 = u64 [sp + 0x58]
  9188: 82 17 50                 a0 = u64 [sp + 0x50]
  9191: 82 98                    a1 = u64 [a2]
  9193: 82 99 08                 a2 = u64 [a2 + 0x8]
  9196: 82 aa 18                 a3 = u64 [a3 + 0x18]
  9199: b4 a0 02 c8 00           ra = 200, jump [a3]
      :                          @505 [@dyn 100]
  9204: 51 07 08                 jump @507 if a0 == 0
      :                          @506
  9207: 33 07 01                 a0 = 0x1
  9210: 28 05                    jump @508
      :                          @507
  9212: 33 07                    a0 = 0
  9214: 01                       fallthrough
      :                          @508
  9215: 82 10 80 00              ra = u64 [sp + 0x80]
  9219: 82 15 78                 s0 = u64 [sp + 0x78]
  9222: 82 16 70                 s1 = u64 [sp + 0x70]
  9225: 95 11 88 00              sp = sp + 0x88
  9229: 32 00                    ret
      :                          @509 [@dyn 101]
  9231: 32 00                    ret
      :                          @510 [@dyn 102]
  9233: 95 11 80                 sp = sp + 0xffffffffffffff80
  9236: 7b 10 78                 u64 [sp + 0x78] = ra
  9239: 7b 15 70                 u64 [sp + 0x70] = s0
  9242: 7b 16 68                 u64 [sp + 0x68] = s1
  9245: 64 92                    t0 = a2
  9247: 33 00                    ra = 0
  9249: 33 0b                    a4 = 0
  9251: 33 05                    s0 = 0
  9253: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
  9263: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
  9269: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
  9279: 82 79 10                 a2 = u64 [a0 + 0x10]
  9282: 7b 19 48                 u64 [sp + 0x48] = a2
  9285: 82 79                    a2 = u64 [a0]
  9287: 7b 19 38                 u64 [sp + 0x38] = a2
  9290: 82 77 08                 a0 = u64 [a0 + 0x8]
  9293: 7b 17 30                 u64 [sp + 0x30] = a0
  9296: 33 07 70 01 01           a0 = 0x10170
  9301: 7b 17 08                 u64 [sp + 0x8] = a0
  9304: 3a 07 58 00 03           a0 = u64 [0x30058]
  9309: 7b 17 60                 u64 [sp + 0x60] = a0
  9312: 7b 18 58                 u64 [sp + 0x58] = a1
  9315: 95 88 08                 a1 = a1 + 0x8
  9318: 7b 18                    u64 [sp] = a1
  9320: 33 0c 0a                 a5 = 0xa
  9323: 7b 12 20                 u64 [sp + 0x20] = t0
  9326: 7b 13 18                 u64 [sp + 0x18] = t1
  9329: 7b 14 10                 u64 [sp + 0x10] = t2
  9332: 28 3b                    jump @514
      :                          @511
  9334: 64 06                    s1 = ra
  9336: c8 89 07                 a0 = a2 + a1
  9339: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
  9342: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  9345: 88 77 01                 a0 = a0 <u 0x1
  9348: 01                       fallthrough
      :                          @512
  9349: 82 1a 48                 a3 = u64 [sp + 0x48]
  9352: 78 a7                    u8 [a3] = a0
  9354: 82 17 30                 a0 = u64 [sp + 0x30]
  9357: 82 7a 18                 a3 = u64 [a0 + 0x18]
  9360: 82 17 38                 a0 = u64 [sp + 0x38]
  9363: b4 a0 02 ce 00           ra = 206, jump [a3]
      :                          @513 [@dyn 103]
  9368: 64 5b                    a4 = s0
  9370: 82 12 20                 t0 = u64 [sp + 0x20]
  9373: 82 13 18                 t1 = u64 [sp + 0x18]
  9376: 82 14 10                 t2 = u64 [sp + 0x10]
  9379: 64 60                    ra = s1
  9381: 33 0c 0a                 a5 = 0xa
  9384: 82 15 40                 s0 = u64 [sp + 0x40]
  9387: 52 07 64 01              jump @555 if a0 != 0
      :                          @514
  9391: 84 57 ff 00              a0 = s0 & 0xff
  9395: 52 07 58 01              jump @554 if a0 != 0
      :                          @515
  9399: 7b 1b 50                 u64 [sp + 0x50] = a4
  9402: ae 02 0a                 jump @518 if t0 >=u ra
      :                          @516
  9405: 28 ef 00                 jump @545
      :                          @517
  9408: ac 02 ec 00              jump @545 if t0 <u ra
      :                          @518
  9412: c9 02 08                 a1 = t0 - ra
  9415: 82 16 58                 s1 = u64 [sp + 0x58]
  9418: c8 06 06                 s1 = s1 + ra
  9421: 55 18 10 1d              jump @524 if a1 >=u 16
      :                          @519
  9425: aa 02 d8 00              jump @544 if t0 == ra
      :                          @520
  9429: 33 0a                    a3 = 0
  9431: 01                       fallthrough
      :                          @521
  9432: c8 a6 07                 a0 = s1 + a3
  9435: 7c 77                    a0 = u8 [a0]
  9437: aa c7 a5 00              jump @539 if a0 == a5
      :                          @522
  9441: 95 aa 01                 a3 = a3 + 0x1
  9444: ab a8 f4                 jump @521 if a1 != a3
      :                          @523
  9447: 28 c2 00                 jump @544
      :                          @524
  9450: 95 69 07                 a2 = s1 + 0x7
  9453: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
  9456: c9 6a 07                 a0 = a3 - s1
  9459: d3 6a 0a                 a3 = a3 ^ s1
  9462: 88 aa 01                 a3 = a3 <u 0x1
  9465: 88 7b 01                 a4 = a0 <u 0x1
  9468: d4 ba 0a                 a3 = a3 | a4
  9471: 51 0a 45                 jump @530 if a3 == 0
      :                          @525
  9474: 33 07                    a0 = 0
  9476: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  9479: 82 1b                    a4 = u64 [sp]
  9481: c8 0b 0b                 a4 = a4 + ra
  9484: 28 08                    jump @527
      :                          @526
  9486: 82 1b                    a4 = u64 [sp]
  9488: c8 0b 0b                 a4 = a4 + ra
  9491: 01                       fallthrough
      :                          @527
  9492: c8 76 0c                 a5 = s1 + a0
  9495: 82 cc                    a5 = u64 [a5]
  9497: c8 7b 09                 a2 = a4 + a0
  9500: 82 99                    a2 = u64 [a2]
  9502: d3 4c 05                 s0 = a5 ^ t2
  9505: c8 35 05                 s0 = s0 + t1
  9508: e0 c5 0c                 a5 = s0 & ~a5
  9511: d3 49 05                 s0 = a2 ^ t2
  9514: c8 35 05                 s0 = s0 + t1
  9517: e0 95 09                 a2 = s0 & ~a2
  9520: d4 c9 09                 a2 = a2 | a5
  9523: 82 1c 60                 a5 = u64 [sp + 0x60]
  9526: d2 c9 09                 a2 = a2 & a5
  9529: 52 09 1f                 jump @533 if a2 != 0
      :                          @528
  9532: 95 77 10                 a0 = a0 + 0x10
  9535: ae 7a d5                 jump @527 if a3 >=u a0
      :                          @529
  9538: 28 16                    jump @533
      :                          @530
  9540: c8 a6 0b                 a4 = s1 + a3
  9543: 7c bb                    a4 = u8 [a4]
  9545: aa cb 51                 jump @542 if a4 == a5
      :                          @531
  9548: 95 aa 01                 a3 = a3 + 0x1
  9551: ab a7 f5                 jump @530 if a0 != a3
      :                          @532
  9554: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  9557: ae 7a b9                 jump @526 if a3 >=u a0
      :                          @533
  9560: aa 87 9b 00              jump @551 if a0 == a1
      :                          @534
  9564: 33 0a                    a3 = 0
  9566: c8 76 06                 s1 = s1 + a0
  9569: c9 72 08                 a1 = t0 - a0
  9572: c9 08 08                 a1 = a1 - ra
  9575: 33 0c 0a                 a5 = 0xa
  9578: 82 1b 50                 a4 = u64 [sp + 0x50]
  9581: 01                       fallthrough
      :                          @535
  9582: c8 a6 09                 a2 = s1 + a3
  9585: 7c 99                    a2 = u8 [a2]
  9587: aa c9 0b                 jump @538 if a2 == a5
      :                          @536
  9590: 95 aa 01                 a3 = a3 + 0x1
  9593: ab a8 f5                 jump @535 if a1 != a3
      :                          @537
  9596: 28 2d                    jump @544
      :                          @538
  9598: c8 7a 0a                 a3 = a3 + a0
  9601: 01                       fallthrough
      :                          @539
  9602: c8 0a 0a                 a3 = a3 + ra
  9605: 95 a0 01                 ra = a3 + 0x1
  9608: ae 2a 38 ff              jump @517 if a3 >=u t0
      :                          @540
  9612: 82 17 58                 a0 = u64 [sp + 0x58]
  9615: c8 7a 0a                 a3 = a3 + a0
  9618: 7c a7                    a0 = u8 [a3]
  9620: ab c7 2c ff              jump @517 if a0 != a5
      :                          @541
  9624: 28 62                    jump @552
      :                          @542
  9626: 82 1b 50                 a4 = u64 [sp + 0x50]
  9629: c8 0a 0a                 a3 = a3 + ra
  9632: 95 a0 01                 ra = a3 + 0x1
  9635: ac 2a e9                 jump @540 if a3 <u t0
      :                          @543
  9638: 28 1a ff                 jump @517
      :                          @544
  9641: 64 20                    ra = t0
  9643: 01                       fallthrough
      :                          @545
  9644: 49 11 40 01              u64 [sp + 64] = 0x1
  9648: 64 b5                    s0 = a4
  9650: 64 26                    s1 = t0
  9652: aa 2b 57                 jump @554 if a4 == t0
      :                          @546
  9655: 82 17 48                 a0 = u64 [sp + 0x48]
  9658: 7c 77                    a0 = u8 [a0]
  9660: 51 07 23                 jump @549 if a0 == 0
      :                          @547
  9663: 82 17 30                 a0 = u64 [sp + 0x30]
  9666: 82 7a 18                 a3 = u64 [a0 + 0x18]
  9669: 33 09 04                 a2 = 0x4
  9672: 82 17 38                 a0 = u64 [sp + 0x38]
  9675: 82 18 08                 a1 = u64 [sp + 0x8]
  9678: 7b 10 28                 u64 [sp + 0x28] = ra
  9681: b4 a0 02 d0 00           ra = 208, jump [a3]
      :                          @548 [@dyn 104]
  9686: 82 1b 50                 a4 = u64 [sp + 0x50]
  9689: 82 10 28                 ra = u64 [sp + 0x28]
  9692: 52 07 33                 jump @555 if a0 != 0
      :                          @549
  9695: c9 b6 09                 a2 = s1 - a4
  9698: 82 18 58                 a1 = u64 [sp + 0x58]
  9701: c8 b8 08                 a1 = a1 + a4
  9704: ab b6 8e fe              jump @511 if s1 != a4
      :                          @550
  9708: 64 06                    s1 = ra
  9710: 33 07                    a0 = 0
  9712: 28 95 fe                 jump @512
      :                          @551
  9715: 64 20                    ra = t0
  9717: 82 1b 50                 a4 = u64 [sp + 0x50]
  9720: 28 b4                    jump @545
      :                          @552
  9722: 49 11 40                 u64 [sp + 64] = 0
  9725: 64 05                    s0 = ra
  9727: 64 06                    s1 = ra
  9729: 82 17 48                 a0 = u64 [sp + 0x48]
  9732: 7c 77                    a0 = u8 [a0]
  9734: 52 07 b9                 jump @547 if a0 != 0
      :                          @553
  9737: 28 d6                    jump @549
      :                          @554
  9739: 33 07                    a0 = 0
  9741: 28 06                    jump @556
      :                          @555
  9743: 33 07 01                 a0 = 0x1
  9746: 01                       fallthrough
      :                          @556
  9747: 82 10 78                 ra = u64 [sp + 0x78]
  9750: 82 15 70                 s0 = u64 [sp + 0x70]
  9753: 82 16 68                 s1 = u64 [sp + 0x68]
  9756: 95 11 80 00              sp = sp + 0x80
  9760: 32 00                    ret
      :                          @557 [@dyn 105]
  9762: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  9765: 7b 10 20                 u64 [sp + 0x20] = ra
  9768: 7b 15 18                 u64 [sp + 0x18] = s0
  9771: 7b 16 10                 u64 [sp + 0x10] = s1
  9774: 82 75 10                 s0 = u64 [a0 + 0x10]
  9777: 7c 59                    a2 = u8 [s0]
  9779: 82 7b                    a4 = u64 [a0]
  9781: 82 76 08                 s1 = u64 [a0 + 0x8]
  9784: 51 09 33                 jump @561 if a2 == 0
      :                          @558
  9787: 82 6a 18                 a3 = u64 [s1 + 0x18]
  9790: 7b 18 08                 u64 [sp + 0x8] = a1
  9793: 33 08 70 01 01           a1 = 0x10170
  9798: 33 09 04                 a2 = 0x4
  9801: 64 b7                    a0 = a4
  9803: 7b 1b                    u64 [sp] = a4
  9805: b4 a0 02 d4 00           ra = 212, jump [a3]
      :                          @559 [@dyn 106]
  9810: 82 18 08                 a1 = u64 [sp + 0x8]
  9813: 82 1b                    a4 = u64 [sp]
  9815: 51 07 14                 jump @561 if a0 == 0
      :                          @560
  9818: 33 07 01                 a0 = 0x1
  9821: 82 10 20                 ra = u64 [sp + 0x20]
  9824: 82 15 18                 s0 = u64 [sp + 0x18]
  9827: 82 16 10                 s1 = u64 [sp + 0x10]
  9830: 95 11 28                 sp = sp + 0x28
  9833: 32 00                    ret
      :                          @561
  9835: 83 87                    i32 a0 = a1 + 0
  9837: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  9840: 88 77 01                 a0 = a0 <u 0x1
  9843: 78 57                    u8 [s0] = a0
  9845: 82 6c 20                 a5 = u64 [s1 + 0x20]
  9848: 64 b7                    a0 = a4
  9850: 82 10 20                 ra = u64 [sp + 0x20]
  9853: 82 15 18                 s0 = u64 [sp + 0x18]
  9856: 82 16 10                 s1 = u64 [sp + 0x10]
  9859: 95 11 28                 sp = sp + 0x28
  9862: 32 0c                    jump [a5]
      :                          @562 [@dyn 107]
  9864: 64 8a                    a3 = a1
  9866: 33 08 40 01 01           a1 = 0x10140
  9871: 64 a9                    a2 = a3
  9873: 28 99 fb                 jump @471
      :                          @563 [@dyn 108]
  9876: 80 77                    a0 = u32 [a0]
  9878: 28 f3 f7                 jump @409
      :                          @564
  9881: 95 11 70 ff              sp = sp + 0xffffffffffffff70
  9885: 7b 10 88 00              u64 [sp + 0x88] = ra
  9889: 7b 15 80 00              u64 [sp + 0x80] = s0
  9893: 7b 16 78                 u64 [sp + 0x78] = s1
  9896: 64 75                    s0 = a0
  9898: 7c 77 08                 a0 = u8 [a0 + 0x8]
  9901: 64 8b                    a4 = a1
  9903: 33 08 01                 a1 = 0x1
  9906: 33 06 01                 s1 = 0x1
  9909: 51 07 1d                 jump @566 if a0 == 0
      :                          @565
  9912: 78 56 08                 u8 [s0 + 0x8] = s1
  9915: 46 15 09 01              u8 [s0 + 9] = 0x1
  9919: 64 57                    a0 = s0
  9921: 82 10 88 00              ra = u64 [sp + 0x88]
  9925: 82 15 80 00              s0 = u64 [sp + 0x80]
  9929: 82 16 78                 s1 = u64 [sp + 0x78]
  9932: 95 11 90 00              sp = sp + 0x90
  9936: 32 00                    ret
      :                          @566
  9938: 64 9a                    a3 = a2
  9940: 82 5c                    a5 = u64 [s0]
  9942: 80 c7 34                 a0 = u32 [a5 + 0x34]
  9945: 7c 58 09                 a1 = u8 [s0 + 0x9]
  9948: 84 79 04                 a2 = a0 & 0x4
  9951: 52 09 45                 jump @572 if a2 != 0
      :                          @567
  9954: 51 08 32                 jump @570 if a1 == 0
      :                          @568
  9957: 82 c8 28                 a1 = u64 [a5 + 0x28]
  9960: 82 c7 20                 a0 = u64 [a5 + 0x20]
  9963: 82 83 18                 t1 = u64 [a1 + 0x18]
  9966: 33 08 74 01 01           a1 = 0x10174
  9971: 33 09 02                 a2 = 0x2
  9974: 64 a6                    s1 = a3
  9976: 7b 1b 10                 u64 [sp + 0x10] = a4
  9979: 7b 1c 08                 u64 [sp + 0x8] = a5
  9982: b4 30 02 da 00           ra = 218, jump [t1]
      :                          @569 [@dyn 109]
  9987: 82 1c 08                 a5 = u64 [sp + 0x8]
  9990: 82 1b 10                 a4 = u64 [sp + 0x10]
  9993: 64 6a                    a3 = s1
  9995: 33 08 01                 a1 = 0x1
  9998: 33 06 01                 s1 = 0x1
 10001: 52 07 a7                 jump @565 if a0 != 0
      :                          @570
 10004: 64 b7                    a0 = a4
 10006: 64 c8                    a1 = a5
 10008: b4 a0 02 dc 00           ra = 220, jump [a3]
      :                          @571 [@dyn 110]
 10013: 33 08 01                 a1 = 0x1
 10016: 64 76                    s1 = a0
 10018: 28 96                    jump @565
      :                          @572
 10020: 52 08 37                 jump @576 if a1 != 0
      :                          @573
 10023: 82 c8 28                 a1 = u64 [a5 + 0x28]
 10026: 82 c7 20                 a0 = u64 [a5 + 0x20]
 10029: 82 83 18                 t1 = u64 [a1 + 0x18]
 10032: 33 08 78 01 01           a1 = 0x10178
 10037: 33 09 01                 a2 = 0x1
 10040: 33 06 01                 s1 = 0x1
 10043: 7b 1a                    u64 [sp] = a3
 10045: 7b 1b 10                 u64 [sp + 0x10] = a4
 10048: 7b 1c 08                 u64 [sp + 0x8] = a5
 10051: b4 30 02 de 00           ra = 222, jump [t1]
      :                          @574 [@dyn 111]
 10056: 82 1c 08                 a5 = u64 [sp + 0x8]
 10059: 82 1b 10                 a4 = u64 [sp + 0x10]
 10062: 82 1a                    a3 = u64 [sp]
 10064: 33 08 01                 a1 = 0x1
 10067: 52 07 65 ff              jump @565 if a0 != 0
      :                          @575
 10071: 81 c7 34                 a0 = i32 [a5 + 0x34]
 10074: 01                       fallthrough
      :                          @576
 10075: 33 06 01                 s1 = 0x1
 10078: 78 16 37                 u8 [sp + 0x37] = s1
 10081: 82 c8 20                 a1 = u64 [a5 + 0x20]
 10084: 82 c9 28                 a2 = u64 [a5 + 0x28]
 10087: 7b 18 18                 u64 [sp + 0x18] = a1
 10090: 7b 19 20                 u64 [sp + 0x20] = a2
 10093: 95 18 37                 a1 = sp + 0x37
 10096: 7b 18 28                 u64 [sp + 0x28] = a1
 10099: 81 c8 30                 a1 = i32 [a5 + 0x30]
 10102: 7c c9 38                 a2 = u8 [a5 + 0x38]
 10105: 82 c3                    t1 = u64 [a5]
 10107: 82 c4 08                 t2 = u64 [a5 + 0x8]
 10110: 82 c0 10                 ra = u64 [a5 + 0x10]
 10113: 82 c2 18                 t0 = u64 [a5 + 0x18]
 10116: 7a 17 6c                 u32 [sp + 0x6c] = a0
 10119: 7a 18 68                 u32 [sp + 0x68] = a1
 10122: 78 19 70                 u8 [sp + 0x70] = a2
 10125: 7b 13 38                 u64 [sp + 0x38] = t1
 10128: 7b 14 40                 u64 [sp + 0x40] = t2
 10131: 7b 10 48                 u64 [sp + 0x48] = ra
 10134: 7b 12 50                 u64 [sp + 0x50] = t0
 10137: 95 17 18                 a0 = sp + 0x18
 10140: 7b 17 58                 u64 [sp + 0x58] = a0
 10143: 33 07 40 01 01           a0 = 0x10140
 10148: 7b 17 60                 u64 [sp + 0x60] = a0
 10151: 95 18 38                 a1 = sp + 0x38
 10154: 64 b7                    a0 = a4
 10156: b4 a0 02 e0 00           ra = 224, jump [a3]
      :                          @577 [@dyn 112]
 10161: 52 07 21                 jump @580 if a0 != 0
      :                          @578
 10164: 82 18 60                 a1 = u64 [sp + 0x60]
 10167: 82 17 58                 a0 = u64 [sp + 0x58]
 10170: 82 8a 18                 a3 = u64 [a1 + 0x18]
 10173: 33 08 76 01 01           a1 = 0x10176
 10178: 33 09 02                 a2 = 0x2
 10181: b4 a0 02 e2 00           ra = 226, jump [a3]
      :                          @579 [@dyn 113]
 10186: 64 76                    s1 = a0
 10188: 33 08 01                 a1 = 0x1
 10191: 28 e9 fe                 jump @565
      :                          @580
 10194: 33 08 01                 a1 = 0x1
 10197: 28 e3 fe                 jump @565
      :                          @581
 10200: 51 08 9b 00              jump @602 if a1 == 0
      :                          @582
 10204: 64 79                    a2 = a0
 10206: 7c 77                    a0 = u8 [a0]
 10208: 51 07 91 00              jump @601 if a0 == 0
      :                          @583
 10212: 51 27 ff 00 90 00        jump @603 if a0 == 255
      :                          @584
 10218: 6c 7a                    a3 = sext.b a0
 10220: 57 0a 09                 jump @586 if a3 <s 0
      :                          @585
 10223: 33 0a                    a3 = 0
 10225: 33 08                    a1 = 0
 10227: 28 73                    jump @600
      :                          @586
 10229: 55 27 c0 00 0d           jump @588 if a0 >=u 192
      :                          @587
 10234: 33 0a 01                 a3 = 0x1
 10237: 33 0b 80                 a4 = 0xffffffffffffff80
 10240: 28 4a                    jump @597
      :                          @588
 10242: 55 27 e0 00 0e           jump @590 if a0 >=u 224
      :                          @589
 10247: 33 0a 02                 a3 = 0x2
 10250: 33 0b 40 ff              a4 = 0xffffffffffffff40
 10254: 28 3c                    jump @597
      :                          @590
 10256: 55 27 f0 00 0e           jump @592 if a0 >=u 240
      :                          @591
 10261: 33 0a 03                 a3 = 0x3
 10264: 33 0b 20 ff              a4 = 0xffffffffffffff20
 10268: 28 2e                    jump @597
      :                          @592
 10270: 55 27 f8 00 0e           jump @594 if a0 >=u 248
      :                          @593
 10275: 33 0a 04                 a3 = 0x4
 10278: 33 0b 10 ff              a4 = 0xffffffffffffff10
 10282: 28 20                    jump @597
      :                          @594
 10284: 55 27 fc 00 0e           jump @596 if a0 >=u 252
      :                          @595
 10289: 33 0a 05                 a3 = 0x5
 10292: 33 0b 08 ff              a4 = 0xffffffffffffff08
 10296: 28 12                    jump @597
      :                          @596
 10298: 88 7a fe 00              a3 = a0 <u 0xfe
 10302: 33 0b 04 ff              a4 = 0xffffffffffffff04
 10306: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
 10310: 85 aa 07                 a3 = a3 ^ 0x7
 10313: 01                       fallthrough
      :                          @597
 10314: ae 8a 2b                 jump @604 if a3 >=u a1
      :                          @598
 10317: 33 08                    a1 = 0
 10319: c8 b7 07                 a0 = a0 + a4
 10322: 64 ab                    a4 = a3
 10324: 01                       fallthrough
      :                          @599
 10325: c8 b9 0c                 a5 = a2 + a4
 10328: 7c cc                    a5 = u8 [a5]
 10330: 97 88 08                 a1 = a1 << 0x8
 10333: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 10336: d4 c8 08                 a1 = a1 | a5
 10339: 52 0b f2                 jump @599 if a4 != 0
      :                          @600
 10342: 8a a9 03                 i32 a2 = a3 << 0x3
 10345: cf 97 07                 a0 = a0 << a2
 10348: c8 87 07                 a0 = a0 + a1
 10351: 32 00                    ret
      :                          @601
 10353: 32 00                    ret
      :                          @602
 10355: 00                       trap
      :                          @603
 10356: 00                       trap
      :                          @604
 10357: 00                       trap
