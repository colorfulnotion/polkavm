// RO data = 716/716 bytes
// RW data = 96/72384 bytes
// Stack size = 65536 bytes
// RO data = [97, 117, 116, 104, 95, 99, 111, 112, 121, 32, 82, 69, 70, 73, 78, 69, 32, 111, 117, 116, 112, 117, 116, 95, 98, 121, 116, 101, 115, 95, 51, 54, 61, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 33, 0, 0, 0, 0, 0, 0, 0, 97, 115, 115, 105, 103, 110, 101, 100, 32, 99, 111, 114, 101, 32, 48, 43, 49, 32, 115, 101, 114, 118, 105, 99, 101, 32, 0, 0, 0, 0, 0, 0, 56, 0, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 97, 117, 116, 104, 95, 99, 111, 112, 121, 32, 65, 67, 67, 32, 111, 112, 101, 114, 97, 110, 100, 95, 108, 101, 110, 61, 32, 105, 115, 32, 108, 101, 115, 115, 32, 116, 104, 97, 110, 32, 51, 54, 32, 98, 121, 116, 101, 115, 44, 32, 114, 101, 116, 117, 114, 110, 105, 110, 103, 32, 101, 114, 114, 111, 114, 0, 0, 0, 0, 0, 0, 0, 104, 0, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 130, 0, 1, 0, 0, 0, 0, 0, 39, 0, 0, 0, 0, 0, 0, 0, 148, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 150, 0, 0, 0, 0, 0, 0, 0, 156, 0, 0, 0, 0, 0, 0, 0, 164, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 200, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 202, 0, 0, 0, 0, 0, 0, 0, 208, 0, 0, 0, 0, 0, 0, 0, 212, 0, 0, 0, 0, 0, 0, 0, 32, 32, 32, 32, 44, 32, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3, 11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4, 7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8, 9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13, 2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9, 12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11, 13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10, 6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5, 10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3]
// RW data = [40, 201, 189, 242, 103, 230, 9, 106, 59, 167, 202, 132, 133, 174, 103, 187, 43, 248, 148, 254, 114, 243, 110, 60, 241, 54, 29, 95, 58, 245, 79, 165, 209, 130, 230, 173, 127, 82, 14, 81, 31, 108, 62, 43, 140, 104, 5, 155, 107, 189, 65, 251, 171, 217, 131, 31, 121, 33, 126, 19, 25, 205, 224, 91, 8, 201, 188, 243, 103, 230, 9, 106, 148, 66, 190, 4, 84, 38, 124, 224, 75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 3685
// Code size = 11666 bytes

      :                          @0
     0: 28 6a 05 00 00           jump @99
      :                          @1
     5: 28 a4 17 00 00           jump @267
      :                          @2
    10: 28 cc 1d                 jump @363
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 80 89 34                 a2 = u32 [a1 + 0x34]
    24: 82 77                    a0 = u64 [a0]
    26: 84 9a 10                 a3 = a2 & 0x10
    29: 52 0a 16                 jump @6 if a3 != 0
      :                          @4
    32: 84 99 20                 a2 = a2 & 0x20
    35: 52 09 41                 jump @9 if a2 != 0
      :                          @5
    38: 7c 77                    a0 = u8 [a0]
    40: 82 10 80 00              ra = u64 [sp + 0x80]
    44: 95 11 88 00              sp = sp + 0x88
    48: 28 74 23                 jump @502
      :                          @6
    51: 7c 77                    a0 = u8 [a0]
    53: 33 0b 81 00              a4 = 0x81
    57: 95 19 7f                 a2 = sp + 0x7f
    60: 33 02 57                 t0 = 0x57
    63: 01                       fallthrough
      :                          @7
    64: 64 bc                    a5 = a4
    66: 84 7b 0f                 a4 = a0 & 0xf
    69: 97 77 38                 a0 = a0 << 0x38
    72: 98 77 3c                 a0 = a0 >> 0x3c
    75: 88 b3 0a                 t1 = a4 <u 0xa
    78: 33 0a 30                 a3 = 0x30
    81: da 32 0a                 a3 = t0 if t1 == 0
    84: be ba 0a                 i32 a3 = a3 + a4
    87: 78 9a                    u8 [a2] = a3
    89: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
    92: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
    95: 52 07 e1                 jump @7 if a0 != 0
      :                          @8
    98: 28 31                    jump @11
      :                          @9
   100: 7c 77                    a0 = u8 [a0]
   102: 33 0b 81 00              a4 = 0x81
   106: 95 19 7f                 a2 = sp + 0x7f
   109: 33 02 37                 t0 = 0x37
   112: 01                       fallthrough
      :                          @10
   113: 64 bc                    a5 = a4
   115: 84 7b 0f                 a4 = a0 & 0xf
   118: 97 77 38                 a0 = a0 << 0x38
   121: 98 77 3c                 a0 = a0 >> 0x3c
   124: 88 b3 0a                 t1 = a4 <u 0xa
   127: 33 0a 30                 a3 = 0x30
   130: da 32 0a                 a3 = t0 if t1 == 0
   133: be ba 0a                 i32 a3 = a3 + a4
   136: 78 9a                    u8 [a2] = a3
   138: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
   141: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
   144: 52 07 e1                 jump @10 if a0 != 0
      :                          @11
   147: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   150: 56 27 80 00 27           jump @14 if a0 >u 128
      :                          @12
   155: 9a bb 81 00              a4 = 0x81 - a4
   159: 64 1a                    a3 = sp
   161: c8 7a 0a                 a3 = a3 + a0
   164: 33 09 02                 a2 = 0x2
   167: 64 87                    a0 = a1
   169: 33 08 42 01 01           a1 = 0x10142
   174: 50 10 04 1e 24           ra = 4, jump @512
      :                          @13 [@dyn 2]
   179: 82 10 80 00              ra = u64 [sp + 0x80]
   183: 95 11 88 00              sp = sp + 0x88
   187: 32 00                    ret
      :                          @14
   189: 00                       trap
      :                          @15 [@dyn 3]
   190: 95 11 d0                 sp = sp + 0xffffffffffffffd0
   193: 7b 10 28                 u64 [sp + 0x28] = ra
   196: 7b 15 20                 u64 [sp + 0x20] = s0
   199: 7b 16 18                 u64 [sp + 0x18] = s1
   202: 64 85                    s0 = a1
   204: 82 88 28                 a1 = u64 [a1 + 0x28]
   207: 82 5a 20                 a3 = u64 [s0 + 0x20]
   210: 82 8b 18                 a4 = u64 [a1 + 0x18]
   213: 64 76                    s1 = a0
   215: 33 08 00 01 01           a1 = 0x10100
   220: 33 09 01                 a2 = 0x1
   223: 64 a7                    a0 = a3
   225: b4 b0 01 08              ra = 8, jump [a4]
      :                          @16 [@dyn 4]
   229: 7b 15                    u64 [sp] = s0
   231: 78 17 08                 u8 [sp + 0x8] = a0
   234: 46 11 09                 u8 [sp + 9] = 0
   237: 7b 16 10                 u64 [sp + 0x10] = s1
   240: 33 05 02                 s0 = 0x2
   243: 64 17                    a0 = sp
   245: 95 18 10                 a1 = sp + 0x10
   248: 33 09 02                 a2 = 0x2
   251: 50 10 0a ba 2a           ra = 10, jump @658
      :                          @17 [@dyn 5]
   256: 95 67 01                 a0 = s1 + 0x1
   259: 7b 17 10                 u64 [sp + 0x10] = a0
   262: 64 17                    a0 = sp
   264: 95 18 10                 a1 = sp + 0x10
   267: 64 59                    a2 = s0
   269: 50 10 0c a8 2a           ra = 12, jump @658
      :                          @18 [@dyn 6]
   274: 95 67 02                 a0 = s1 + 0x2
   277: 7b 17 10                 u64 [sp + 0x10] = a0
   280: 64 17                    a0 = sp
   282: 95 18 10                 a1 = sp + 0x10
   285: 64 59                    a2 = s0
   287: 50 10 0e 96 2a           ra = 14, jump @658
      :                          @19 [@dyn 7]
   292: 95 67 03                 a0 = s1 + 0x3
   295: 7b 17 10                 u64 [sp + 0x10] = a0
   298: 64 17                    a0 = sp
   300: 95 18 10                 a1 = sp + 0x10
   303: 64 59                    a2 = s0
   305: 50 10 10 84 2a           ra = 16, jump @658
      :                          @20 [@dyn 8]
   310: 95 67 04                 a0 = s1 + 0x4
   313: 7b 17 10                 u64 [sp + 0x10] = a0
   316: 64 17                    a0 = sp
   318: 95 18 10                 a1 = sp + 0x10
   321: 64 59                    a2 = s0
   323: 50 10 12 72 2a           ra = 18, jump @658
      :                          @21 [@dyn 9]
   328: 95 67 05                 a0 = s1 + 0x5
   331: 7b 17 10                 u64 [sp + 0x10] = a0
   334: 64 17                    a0 = sp
   336: 95 18 10                 a1 = sp + 0x10
   339: 64 59                    a2 = s0
   341: 50 10 14 60 2a           ra = 20, jump @658
      :                          @22 [@dyn 10]
   346: 95 67 06                 a0 = s1 + 0x6
   349: 7b 17 10                 u64 [sp + 0x10] = a0
   352: 64 17                    a0 = sp
   354: 95 18 10                 a1 = sp + 0x10
   357: 64 59                    a2 = s0
   359: 50 10 16 4e 2a           ra = 22, jump @658
      :                          @23 [@dyn 11]
   364: 95 67 07                 a0 = s1 + 0x7
   367: 7b 17 10                 u64 [sp + 0x10] = a0
   370: 64 17                    a0 = sp
   372: 95 18 10                 a1 = sp + 0x10
   375: 64 59                    a2 = s0
   377: 50 10 18 3c 2a           ra = 24, jump @658
      :                          @24 [@dyn 12]
   382: 95 67 08                 a0 = s1 + 0x8
   385: 7b 17 10                 u64 [sp + 0x10] = a0
   388: 64 17                    a0 = sp
   390: 95 18 10                 a1 = sp + 0x10
   393: 64 59                    a2 = s0
   395: 50 10 1a 2a 2a           ra = 26, jump @658
      :                          @25 [@dyn 13]
   400: 95 67 09                 a0 = s1 + 0x9
   403: 7b 17 10                 u64 [sp + 0x10] = a0
   406: 64 17                    a0 = sp
   408: 95 18 10                 a1 = sp + 0x10
   411: 64 59                    a2 = s0
   413: 50 10 1c 18 2a           ra = 28, jump @658
      :                          @26 [@dyn 14]
   418: 95 67 0a                 a0 = s1 + 0xa
   421: 7b 17 10                 u64 [sp + 0x10] = a0
   424: 64 17                    a0 = sp
   426: 95 18 10                 a1 = sp + 0x10
   429: 64 59                    a2 = s0
   431: 50 10 1e 06 2a           ra = 30, jump @658
      :                          @27 [@dyn 15]
   436: 95 67 0b                 a0 = s1 + 0xb
   439: 7b 17 10                 u64 [sp + 0x10] = a0
   442: 64 17                    a0 = sp
   444: 95 18 10                 a1 = sp + 0x10
   447: 64 59                    a2 = s0
   449: 50 10 20 f4 29           ra = 32, jump @658
      :                          @28 [@dyn 16]
   454: 95 67 0c                 a0 = s1 + 0xc
   457: 7b 17 10                 u64 [sp + 0x10] = a0
   460: 64 17                    a0 = sp
   462: 95 18 10                 a1 = sp + 0x10
   465: 64 59                    a2 = s0
   467: 50 10 22 e2 29           ra = 34, jump @658
      :                          @29 [@dyn 17]
   472: 95 67 0d                 a0 = s1 + 0xd
   475: 7b 17 10                 u64 [sp + 0x10] = a0
   478: 64 17                    a0 = sp
   480: 95 18 10                 a1 = sp + 0x10
   483: 64 59                    a2 = s0
   485: 50 10 24 d0 29           ra = 36, jump @658
      :                          @30 [@dyn 18]
   490: 95 67 0e                 a0 = s1 + 0xe
   493: 7b 17 10                 u64 [sp + 0x10] = a0
   496: 64 17                    a0 = sp
   498: 95 18 10                 a1 = sp + 0x10
   501: 64 59                    a2 = s0
   503: 50 10 26 be 29           ra = 38, jump @658
      :                          @31 [@dyn 19]
   508: 95 67 0f                 a0 = s1 + 0xf
   511: 7b 17 10                 u64 [sp + 0x10] = a0
   514: 64 17                    a0 = sp
   516: 95 18 10                 a1 = sp + 0x10
   519: 64 59                    a2 = s0
   521: 50 10 28 ac 29           ra = 40, jump @658
      :                          @32 [@dyn 20]
   526: 95 67 10                 a0 = s1 + 0x10
   529: 7b 17 10                 u64 [sp + 0x10] = a0
   532: 64 17                    a0 = sp
   534: 95 18 10                 a1 = sp + 0x10
   537: 64 59                    a2 = s0
   539: 50 10 2a 9a 29           ra = 42, jump @658
      :                          @33 [@dyn 21]
   544: 95 67 11                 a0 = s1 + 0x11
   547: 7b 17 10                 u64 [sp + 0x10] = a0
   550: 64 17                    a0 = sp
   552: 95 18 10                 a1 = sp + 0x10
   555: 64 59                    a2 = s0
   557: 50 10 2c 88 29           ra = 44, jump @658
      :                          @34 [@dyn 22]
   562: 95 67 12                 a0 = s1 + 0x12
   565: 7b 17 10                 u64 [sp + 0x10] = a0
   568: 64 17                    a0 = sp
   570: 95 18 10                 a1 = sp + 0x10
   573: 64 59                    a2 = s0
   575: 50 10 2e 76 29           ra = 46, jump @658
      :                          @35 [@dyn 23]
   580: 95 67 13                 a0 = s1 + 0x13
   583: 7b 17 10                 u64 [sp + 0x10] = a0
   586: 64 17                    a0 = sp
   588: 95 18 10                 a1 = sp + 0x10
   591: 64 59                    a2 = s0
   593: 50 10 30 64 29           ra = 48, jump @658
      :                          @36 [@dyn 24]
   598: 95 67 14                 a0 = s1 + 0x14
   601: 7b 17 10                 u64 [sp + 0x10] = a0
   604: 64 17                    a0 = sp
   606: 95 18 10                 a1 = sp + 0x10
   609: 64 59                    a2 = s0
   611: 50 10 32 52 29           ra = 50, jump @658
      :                          @37 [@dyn 25]
   616: 95 67 15                 a0 = s1 + 0x15
   619: 7b 17 10                 u64 [sp + 0x10] = a0
   622: 64 17                    a0 = sp
   624: 95 18 10                 a1 = sp + 0x10
   627: 64 59                    a2 = s0
   629: 50 10 34 40 29           ra = 52, jump @658
      :                          @38 [@dyn 26]
   634: 95 67 16                 a0 = s1 + 0x16
   637: 7b 17 10                 u64 [sp + 0x10] = a0
   640: 64 17                    a0 = sp
   642: 95 18 10                 a1 = sp + 0x10
   645: 64 59                    a2 = s0
   647: 50 10 36 2e 29           ra = 54, jump @658
      :                          @39 [@dyn 27]
   652: 95 67 17                 a0 = s1 + 0x17
   655: 7b 17 10                 u64 [sp + 0x10] = a0
   658: 64 17                    a0 = sp
   660: 95 18 10                 a1 = sp + 0x10
   663: 64 59                    a2 = s0
   665: 50 10 38 1c 29           ra = 56, jump @658
      :                          @40 [@dyn 28]
   670: 95 67 18                 a0 = s1 + 0x18
   673: 7b 17 10                 u64 [sp + 0x10] = a0
   676: 64 17                    a0 = sp
   678: 95 18 10                 a1 = sp + 0x10
   681: 64 59                    a2 = s0
   683: 50 10 3a 0a 29           ra = 58, jump @658
      :                          @41 [@dyn 29]
   688: 95 67 19                 a0 = s1 + 0x19
   691: 7b 17 10                 u64 [sp + 0x10] = a0
   694: 64 17                    a0 = sp
   696: 95 18 10                 a1 = sp + 0x10
   699: 64 59                    a2 = s0
   701: 50 10 3c f8 28           ra = 60, jump @658
      :                          @42 [@dyn 30]
   706: 95 67 1a                 a0 = s1 + 0x1a
   709: 7b 17 10                 u64 [sp + 0x10] = a0
   712: 64 17                    a0 = sp
   714: 95 18 10                 a1 = sp + 0x10
   717: 64 59                    a2 = s0
   719: 50 10 3e e6 28           ra = 62, jump @658
      :                          @43 [@dyn 31]
   724: 95 67 1b                 a0 = s1 + 0x1b
   727: 7b 17 10                 u64 [sp + 0x10] = a0
   730: 64 17                    a0 = sp
   732: 95 18 10                 a1 = sp + 0x10
   735: 64 59                    a2 = s0
   737: 50 10 40 d4 28           ra = 64, jump @658
      :                          @44 [@dyn 32]
   742: 95 67 1c                 a0 = s1 + 0x1c
   745: 7b 17 10                 u64 [sp + 0x10] = a0
   748: 64 17                    a0 = sp
   750: 95 18 10                 a1 = sp + 0x10
   753: 64 59                    a2 = s0
   755: 50 10 42 c2 28           ra = 66, jump @658
      :                          @45 [@dyn 33]
   760: 95 67 1d                 a0 = s1 + 0x1d
   763: 7b 17 10                 u64 [sp + 0x10] = a0
   766: 64 17                    a0 = sp
   768: 95 18 10                 a1 = sp + 0x10
   771: 64 59                    a2 = s0
   773: 50 10 44 b0 28           ra = 68, jump @658
      :                          @46 [@dyn 34]
   778: 95 67 1e                 a0 = s1 + 0x1e
   781: 7b 17 10                 u64 [sp + 0x10] = a0
   784: 64 17                    a0 = sp
   786: 95 18 10                 a1 = sp + 0x10
   789: 64 59                    a2 = s0
   791: 50 10 46 9e 28           ra = 70, jump @658
      :                          @47 [@dyn 35]
   796: 95 67 1f                 a0 = s1 + 0x1f
   799: 7b 17 10                 u64 [sp + 0x10] = a0
   802: 64 17                    a0 = sp
   804: 95 18 10                 a1 = sp + 0x10
   807: 64 59                    a2 = s0
   809: 50 10 48 8c 28           ra = 72, jump @658
      :                          @48 [@dyn 36]
   814: 95 67 20                 a0 = s1 + 0x20
   817: 7b 17 10                 u64 [sp + 0x10] = a0
   820: 64 17                    a0 = sp
   822: 95 18 10                 a1 = sp + 0x10
   825: 64 59                    a2 = s0
   827: 50 10 4a 7a 28           ra = 74, jump @658
      :                          @49 [@dyn 37]
   832: 95 67 21                 a0 = s1 + 0x21
   835: 7b 17 10                 u64 [sp + 0x10] = a0
   838: 64 17                    a0 = sp
   840: 95 18 10                 a1 = sp + 0x10
   843: 64 59                    a2 = s0
   845: 50 10 4c 68 28           ra = 76, jump @658
      :                          @50 [@dyn 38]
   850: 95 67 22                 a0 = s1 + 0x22
   853: 7b 17 10                 u64 [sp + 0x10] = a0
   856: 64 17                    a0 = sp
   858: 95 18 10                 a1 = sp + 0x10
   861: 64 59                    a2 = s0
   863: 50 10 4e 56 28           ra = 78, jump @658
      :                          @51 [@dyn 39]
   868: 95 67 23                 a0 = s1 + 0x23
   871: 7b 17 10                 u64 [sp + 0x10] = a0
   874: 64 17                    a0 = sp
   876: 95 18 10                 a1 = sp + 0x10
   879: 64 59                    a2 = s0
   881: 50 10 50 44 28           ra = 80, jump @658
      :                          @52 [@dyn 40]
   886: 33 07 01                 a0 = 0x1
   889: 7c 18 08                 a1 = u8 [sp + 0x8]
   892: 52 08 1a                 jump @54 if a1 != 0
      :                          @53
   895: 82 17                    a0 = u64 [sp]
   897: 82 78 28                 a1 = u64 [a0 + 0x28]
   900: 82 77 20                 a0 = u64 [a0 + 0x20]
   903: 82 8a 18                 a3 = u64 [a1 + 0x18]
   906: 33 08 41 01 01           a1 = 0x10141
   911: 33 09 01                 a2 = 0x1
   914: b4 a0 01 52              ra = 82, jump [a3]
      :                          @54 [@dyn 41]
   918: 82 10 28                 ra = u64 [sp + 0x28]
   921: 82 15 20                 s0 = u64 [sp + 0x20]
   924: 82 16 18                 s1 = u64 [sp + 0x18]
   927: 95 11 30                 sp = sp + 0x30
   930: 32 00                    ret
      :                          @55
   932: 95 11 c8                 sp = sp + 0xffffffffffffffc8
   935: 7b 10 30                 u64 [sp + 0x30] = ra
   938: 7b 15 28                 u64 [sp + 0x28] = s0
   941: 7b 16 20                 u64 [sp + 0x20] = s1
   944: 64 95                    s0 = a2
   946: 64 72                    t0 = a0
   948: 51 08 79                 jump @65 if a1 == 0
      :                          @56
   951: 82 a7 08                 a0 = u64 [a3 + 0x8]
   954: 51 07 7c                 jump @66 if a0 == 0
      :                          @57
   957: 82 a9 10                 a2 = u64 [a3 + 0x10]
   960: 51 09 aa 00              jump @73 if a2 == 0
      :                          @58
   964: 82 a8                    a1 = u64 [a3]
   966: 33 06 b0 1a 03           s1 = 0x31ab0
   971: 33 03 00 00 01           t1 = 0x10000
   976: c8 36 06                 s1 = s1 + t1
   979: 01                       fallthrough
      :                          @59
   980: 82 6a                    a3 = u64 [s1]
   982: c8 5a 07                 a0 = a3 + s0
   985: ac a7 cf 00              jump @79 if a0 <u a3
      :                          @60
   989: 95 7b 01                 a4 = a0 + 0x1
   992: 88 bc 01                 a5 = a4 <u 0x1
   995: d8 b3 0b                 a4 = t1 <u a4
   998: d4 cb 0b                 a4 = a4 | a5
  1001: 52 0b bf 00              jump @79 if a4 != 0
      :                          @61
  1005: 82 6b                    a4 = u64 [s1]
  1007: ab ab e5                 jump @59 if a4 != a3
      :                          @62
  1010: 7b 67                    u64 [s1] = a0
  1012: 33 0c                    a5 = 0
  1014: 7b 12 18                 u64 [sp + 0x18] = t0
  1017: 33 0a b0 1a 03           a3 = 0x31ab0
  1022: 33 0b 00 00 01           a4 = 0x10000
  1027: 7b 1a                    u64 [sp] = a3
  1029: c8 ba 0a                 a3 = a3 + a4
  1032: c9 7a 07                 a0 = a3 - a0
  1035: 7b 17 10                 u64 [sp + 0x10] = a0
  1038: 7b 18 08                 u64 [sp + 0x8] = a1
  1041: 64 96                    s1 = a2
  1043: 50 10 54 86 1e           ra = 84, jump @470
      :                          @63 [@dyn 42]
  1048: 54 36 00 00 01 98 00     jump @80 if s1 <=u 65536
      :                          @64
  1055: 82 12 18                 t0 = u64 [sp + 0x18]
  1058: 82 18 10                 a1 = u64 [sp + 0x10]
  1061: 33 07                    a0 = 0
  1063: 7b 28 08                 u64 [t0 + 0x8] = a1
  1066: 28 b5 00                 jump @86
      :                          @65
  1069: 49 12 08                 u64 [t0 + 8] = 0
  1072: 33 07 01                 a0 = 0x1
  1075: 28 ac 00                 jump @86
      :                          @66
  1078: 33 09 b0 1a 03           a2 = 0x31ab0
  1083: 33 07 00 00 01           a0 = 0x10000
  1088: c8 79 09                 a2 = a2 + a0
  1091: 01                       fallthrough
      :                          @67
  1092: 82 9a                    a3 = u64 [a2]
  1094: c8 5a 08                 a1 = a3 + s0
  1097: ac a8 5f                 jump @79 if a1 <u a3
      :                          @68
  1100: 95 8b 01                 a4 = a1 + 0x1
  1103: 88 bc 01                 a5 = a4 <u 0x1
  1106: d8 b7 0b                 a4 = a0 <u a4
  1109: d4 cb 0b                 a4 = a4 | a5
  1112: 52 0b 50                 jump @79 if a4 != 0
      :                          @69
  1115: 82 9b                    a4 = u64 [a2]
  1117: ab ab e7                 jump @67 if a4 != a3
      :                          @70
  1120: 7b 98                    u64 [a2] = a1
  1122: 33 0c                    a5 = 0
  1124: 01                       fallthrough
      :                          @71
  1125: ab ab df                 jump @67 if a4 != a3
      :                          @72
  1128: 28 31                    jump @78
      :                          @73
  1130: 33 09 b0 1a 03           a2 = 0x31ab0
  1135: 33 07 00 00 01           a0 = 0x10000
  1140: c8 79 09                 a2 = a2 + a0
  1143: 01                       fallthrough
      :                          @74
  1144: 82 9a                    a3 = u64 [a2]
  1146: c8 5a 08                 a1 = a3 + s0
  1149: ac a8 2b                 jump @79 if a1 <u a3
      :                          @75
  1152: 95 8b 01                 a4 = a1 + 0x1
  1155: 88 bc 01                 a5 = a4 <u 0x1
  1158: d8 b7 0b                 a4 = a0 <u a4
  1161: d4 cb 0b                 a4 = a4 | a5
  1164: 52 0b 1c                 jump @79 if a4 != 0
      :                          @76
  1167: 82 9b                    a4 = u64 [a2]
  1169: ab ab e7                 jump @74 if a4 != a3
      :                          @77
  1172: 7b 98                    u64 [a2] = a1
  1174: 33 0c                    a5 = 0
  1176: 01                       fallthrough
      :                          @78
  1177: 33 07 b0 1a 04           a0 = 0x41ab0
  1182: c9 87 08                 a1 = a0 - a1
  1185: 33 07                    a0 = 0
  1187: 7b 28 08                 u64 [t0 + 0x8] = a1
  1190: 28 39                    jump @86
      :                          @79
  1192: 33 07 01                 a0 = 0x1
  1195: 7b 27 08                 u64 [t0 + 0x8] = a0
  1198: 28 31                    jump @86
      :                          @80
  1200: 64 6c                    a5 = s1
  1202: 82 17                    a0 = u64 [sp]
  1204: 95 77 00 00 01           a0 = a0 + 0x10000
  1209: 82 12 18                 t0 = u64 [sp + 0x18]
  1212: 82 16 08                 s1 = u64 [sp + 0x8]
  1215: 01                       fallthrough
      :                          @81
  1216: 82 78                    a1 = u64 [a0]
  1218: c9 87 09                 a2 = a0 - a1
  1221: ab 69 11                 jump @85 if a2 != s1
      :                          @82
  1224: c9 c8 09                 a2 = a1 - a5
  1227: 01                       fallthrough
      :                          @83
  1228: 82 7a                    a3 = u64 [a0]
  1230: ab 8a f2                 jump @81 if a3 != a1
      :                          @84
  1233: 7b 79                    u64 [a0] = a2
  1235: 33 0b                    a4 = 0
  1237: 01                       fallthrough
      :                          @85
  1238: 82 18 10                 a1 = u64 [sp + 0x10]
  1241: 33 07                    a0 = 0
  1243: 7b 28 08                 u64 [t0 + 0x8] = a1
  1246: 01                       fallthrough
      :                          @86
  1247: 7b 25 10                 u64 [t0 + 0x10] = s0
  1250: 7b 27                    u64 [t0] = a0
  1252: 82 10 30                 ra = u64 [sp + 0x30]
  1255: 82 15 28                 s0 = u64 [sp + 0x28]
  1258: 82 16 20                 s1 = u64 [sp + 0x20]
  1261: 95 11 38                 sp = sp + 0x38
  1264: 32 00                    ret
      :                          @87
  1266: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  1269: 7b 10 40                 u64 [sp + 0x40] = ra
  1272: 7b 15 38                 u64 [sp + 0x38] = s0
  1275: 7b 16 30                 u64 [sp + 0x30] = s1
  1278: c8 89 09                 a2 = a2 + a1
  1281: ac 89 53                 jump @95 if a2 <u a1
      :                          @88
  1284: 64 75                    s0 = a0
  1286: 82 77                    a0 = u64 [a0]
  1288: 97 78 01                 a1 = a0 << 0x1
  1291: 33 0a 08                 a3 = 0x8
  1294: e4 a9 09                 a2 = maxu(a2, a3)
  1297: e4 98 06                 s1 = maxu(a1, a2)
  1300: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  1303: 98 88 3f                 a1 = a1 >> 0x3f
  1306: 51 07 12                 jump @90 if a0 == 0
      :                          @89
  1309: 82 59 08                 a2 = u64 [s0 + 0x8]
  1312: 7b 19 18                 u64 [sp + 0x18] = a2
  1315: 49 11 20 01              u64 [sp + 32] = 0x1
  1319: 7b 17 28                 u64 [sp + 0x28] = a0
  1322: 28 06                    jump @91
      :                          @90
  1324: 49 11 20                 u64 [sp + 32] = 0
  1327: 01                       fallthrough
      :                          @91
  1328: 64 17                    a0 = sp
  1330: 95 1a 18                 a3 = sp + 0x18
  1333: 64 69                    a2 = s1
  1335: 50 10 56 6d fe           ra = 86, jump @55
      :                          @92 [@dyn 43]
  1340: 82 18                    a1 = u64 [sp]
  1342: 82 17 08                 a0 = u64 [sp + 0x8]
  1345: 51 08 14                 jump @96 if a1 == 0
      :                          @93
  1348: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  1358: aa 87 0d                 jump @97 if a0 == a1
      :                          @94
  1361: 52 07 18                 jump @98 if a0 != 0
      :                          @95
  1364: 00                       trap
      :                          @96
  1365: 7b 57 08                 u64 [s0 + 0x8] = a0
  1368: 7b 56                    u64 [s0] = s1
  1370: 01                       fallthrough
      :                          @97
  1371: 82 10 40                 ra = u64 [sp + 0x40]
  1374: 82 15 38                 s0 = u64 [sp + 0x38]
  1377: 82 16 30                 s1 = u64 [sp + 0x30]
  1380: 95 11 48                 sp = sp + 0x48
  1383: 32 00                    ret
      :                          @98
  1385: 00                       trap
      :                          @99 [export #0: 'refine']
  1386: 95 11 58 fc              sp = sp + 0xfffffffffffffc58
  1390: 7b 10 a0 03              u64 [sp + 0x3a0] = ra
  1394: 7b 15 98 03              u64 [sp + 0x398] = s0
  1398: 7b 16 90 03              u64 [sp + 0x390] = s1
  1402: 64 86                    s1 = a1
  1404: 64 75                    s0 = a0
  1406: 49 21 90 01              u64 [sp + 400] = 0
  1410: 49 21 88 01              u64 [sp + 392] = 0
  1414: 49 21 80 01              u64 [sp + 384] = 0
  1418: 49 21 78 01              u64 [sp + 376] = 0
  1422: 95 17 78 01              a0 = sp + 0x178
  1426: 33 09 20                 a2 = 0x20
  1429: 33 0a 08                 a3 = 0x8
  1432: 33 08                    a1 = 0
  1434: 33 0b                    a4 = 0
  1436: 33 0c                    a5 = 0
  1438: 0a 01                    ecalli 1 // 'fetch'
  1440: 48 21 9c 01              u32 [sp + 412] = 0
  1444: 95 17 9c 01              a0 = sp + 0x19c
  1448: 33 09 04                 a2 = 0x4
  1451: 33 0a 0d                 a3 = 0xd
  1454: 33 08                    a1 = 0
  1456: 33 0b                    a4 = 0
  1458: 33 0c                    a5 = 0
  1460: 33 00 58                 ra = 0x58
  1463: 0a 01                    ecalli 1 // 'fetch'
  1465: 01                       fallthrough
      :                          @100 [@dyn 44]
  1466: 33 09 04                 a2 = 0x4
  1469: 33 07 00 00 01           a0 = 0x10000
  1474: ac 96 44                 jump @109 if s1 <u a2
      :                          @101
  1477: 64 5a                    a3 = s0
  1479: 7d 58                    a1 = i8 [s0]
  1481: 33 05 01                 s0 = 0x1
  1484: 59 08 37                 jump @108 if a1 >=s 0
      :                          @102
  1487: 84 89 ff 00              a2 = a1 & 0xff
  1491: 33 05 02                 s0 = 0x2
  1494: 53 29 c0 00 2d           jump @108 if a2 <u 192
      :                          @103
  1499: 33 05 03                 s0 = 0x3
  1502: 53 29 e0 00 25           jump @108 if a2 <u 224
      :                          @104
  1507: 33 05 04                 s0 = 0x4
  1510: 53 29 f0 00 1d           jump @108 if a2 <u 240
      :                          @105
  1515: 33 05 05                 s0 = 0x5
  1518: 53 29 f8 00 15           jump @108 if a2 <u 248
      :                          @106
  1523: 33 05 06                 s0 = 0x6
  1526: 53 29 fc 00 0d           jump @108 if a2 <u 252
      :                          @107
  1531: 88 98 fe 00              a1 = a2 <u 0xfe
  1535: 9a 85 08                 s0 = 0x8 - a1
  1538: 01                       fallthrough
      :                          @108
  1539: ae 56 07                 jump @110 if s1 >=u s0
      :                          @109
  1542: 33 08                    a1 = 0
  1544: 28 63                    jump @121
      :                          @110
  1546: 64 a7                    a0 = a3
  1548: 7b 1a 70 01              u64 [sp + 0x170] = a3
  1552: 64 58                    a1 = s0
  1554: 50 10 5a e2 26           ra = 90, jump @675
      :                          @111 [@dyn 45]
  1559: aa 56 4c                 jump @120 if s1 == s0
      :                          @112
  1562: 82 17 70 01              a0 = u64 [sp + 0x170]
  1566: c8 57 07                 a0 = a0 + s0
  1569: 7d 78                    a1 = i8 [a0]
  1571: c9 56 06                 s1 = s1 - s0
  1574: 33 05 01                 s0 = 0x1
  1577: 59 08 37                 jump @119 if a1 >=s 0
      :                          @113
  1580: 84 89 ff 00              a2 = a1 & 0xff
  1584: 33 05 02                 s0 = 0x2
  1587: 53 29 c0 00 2d           jump @119 if a2 <u 192
      :                          @114
  1592: 33 05 03                 s0 = 0x3
  1595: 53 29 e0 00 25           jump @119 if a2 <u 224
      :                          @115
  1600: 33 05 04                 s0 = 0x4
  1603: 53 29 f0 00 1d           jump @119 if a2 <u 240
      :                          @116
  1608: 33 05 05                 s0 = 0x5
  1611: 53 29 f8 00 15           jump @119 if a2 <u 248
      :                          @117
  1616: 33 05 06                 s0 = 0x6
  1619: 53 29 fc 00 0d           jump @119 if a2 <u 252
      :                          @118
  1624: 88 98 fe 00              a1 = a2 <u 0xfe
  1628: 9a 85 08                 s0 = 0x8 - a1
  1631: 01                       fallthrough
      :                          @119
  1632: ae 56 1d                 jump @122 if s1 >=u s0
      :                          @120
  1635: 33 08                    a1 = 0
  1637: 33 07 00 00 01           a0 = 0x10000
  1642: 01                       fallthrough
      :                          @121
  1643: 82 10 a0 03              ra = u64 [sp + 0x3a0]
  1647: 82 15 98 03              s0 = u64 [sp + 0x398]
  1651: 82 16 90 03              s1 = u64 [sp + 0x390]
  1655: 95 11 a8 03              sp = sp + 0x3a8
  1659: 32 00                    ret
      :                          @122
  1661: 64 58                    a1 = s0
  1663: 7b 16 70 01              u64 [sp + 0x170] = s1
  1667: 64 76                    s1 = a0
  1669: 50 10 5c 6f 26           ra = 92, jump @675
      :                          @123 [@dyn 46]
  1674: c8 65 07                 a0 = s0 + s1
  1677: 82 16 70 01              s1 = u64 [sp + 0x170]
  1681: 7b 17 68 01              u64 [sp + 0x168] = a0
  1685: ab 56 0b                 jump @125 if s1 != s0
      :                          @124
  1688: 33 08                    a1 = 0
  1690: 33 05                    s0 = 0
  1692: 33 06                    s1 = 0
  1694: 28 58                    jump @135
      :                          @125
  1696: 7d 78                    a1 = i8 [a0]
  1698: c9 56 06                 s1 = s1 - s0
  1701: 33 05 01                 s0 = 0x1
  1704: 59 08 37                 jump @132 if a1 >=s 0
      :                          @126
  1707: 84 89 ff 00              a2 = a1 & 0xff
  1711: 33 05 02                 s0 = 0x2
  1714: 53 29 c0 00 2d           jump @132 if a2 <u 192
      :                          @127
  1719: 33 05 03                 s0 = 0x3
  1722: 53 29 e0 00 25           jump @132 if a2 <u 224
      :                          @128
  1727: 33 05 04                 s0 = 0x4
  1730: 53 29 f0 00 1d           jump @132 if a2 <u 240
      :                          @129
  1735: 33 05 05                 s0 = 0x5
  1738: 53 29 f8 00 15           jump @132 if a2 <u 248
      :                          @130
  1743: 33 05 06                 s0 = 0x6
  1746: 53 29 fc 00 0d           jump @132 if a2 <u 252
      :                          @131
  1751: 88 98 fe 00              a1 = a2 <u 0xfe
  1755: 9a 85 08                 s0 = 0x8 - a1
  1758: 01                       fallthrough
      :                          @132
  1759: ac 56 c8 10              jump @265 if s1 <u s0
      :                          @133
  1763: 64 58                    a1 = s0
  1765: 50 10 5e 0f 26           ra = 94, jump @675
      :                          @134 [@dyn 47]
  1770: e4 56 08                 a1 = maxu(s1, s0)
  1773: c9 58 08                 a1 = a1 - s0
  1776: 64 76                    s1 = a0
  1778: ac 78 71 ff              jump @120 if a1 <u a0
      :                          @135
  1782: e4 68 07                 a0 = maxu(a1, s1)
  1785: c9 67 09                 a2 = a0 - s1
  1788: 33 07 00 00 01           a0 = 0x10000
  1793: 53 19 20 05 ff           jump @109 if a2 <u 32
      :                          @136
  1798: 82 17 68 01              a0 = u64 [sp + 0x168]
  1802: c8 75 05                 s0 = s0 + a0
  1805: 33 09 b0 1a 03           a2 = 0x31ab0
  1810: 33 07 00 00 01           a0 = 0x10000
  1815: c8 79 09                 a2 = a2 + a0
  1818: 01                       fallthrough
      :                          @137
  1819: 82 9a                    a3 = u64 [a2]
  1821: 95 a8 20                 a1 = a3 + 0x20
  1824: ac a8 94 24              jump @657 if a1 <u a3
      :                          @138
  1828: 95 8b 01                 a4 = a1 + 0x1
  1831: 88 bc 01                 a5 = a4 <u 0x1
  1834: d8 b7 0b                 a4 = a0 <u a4
  1837: d4 cb 0b                 a4 = a4 | a5
  1840: 52 0b 84 24              jump @657 if a4 != 0
      :                          @139
  1844: 82 9b                    a4 = u64 [a2]
  1846: ab ab e5                 jump @137 if a4 != a3
      :                          @140
  1849: 7b 98                    u64 [a2] = a1
  1851: 33 0c                    a5 = 0
  1853: 7b 15 70 01              u64 [sp + 0x170] = s0
  1857: 33 05 b0 1a 04           s0 = 0x41ab0
  1862: c9 85 05                 s0 = s0 - a1
  1865: 95 18 78 01              a1 = sp + 0x178
  1869: 33 09 20                 a2 = 0x20
  1872: 64 57                    a0 = s0
  1874: 50 10 60 47 1b           ra = 96, jump @470
      :                          @141 [@dyn 48]
  1879: 51 06 e0 00              jump @161 if s1 == 0
      :                          @142
  1883: 95 67 20                 a0 = s1 + 0x20
  1886: 7b 15 68 01              u64 [sp + 0x168] = s0
  1890: 51 07 f7 0f              jump @247 if a0 == 0
      :                          @143
  1894: 57 07 42 10              jump @266 if a0 <s 0
      :                          @144
  1898: 64 62                    t0 = s1
  1900: 89 78                    a1 = a0 <s 0
  1902: 85 86 01                 s1 = a1 ^ 0x1
  1905: 33 0b b0 1a 03           a4 = 0x31ab0
  1910: 33 0a 00 00 01           a3 = 0x10000
  1915: c8 ab 0b                 a4 = a4 + a3
  1918: 01                       fallthrough
      :                          @145
  1919: 82 bc                    a5 = u64 [a4]
  1921: c8 7c 08                 a1 = a5 + a0
  1924: ac c8 1e 10              jump @260 if a1 <u a5
      :                          @146
  1928: c8 68 09                 a2 = a1 + s1
  1931: d8 89 05                 s0 = a2 <u a1
  1934: d8 9a 09                 a2 = a3 <u a2
  1937: d4 59 09                 a2 = a2 | s0
  1940: 52 09 0e 10              jump @260 if a2 != 0
      :                          @147
  1944: 82 b9                    a2 = u64 [a4]
  1946: ab c9 e5                 jump @145 if a2 != a5
      :                          @148
  1949: 7b b8                    u64 [a4] = a1
  1951: 01                       fallthrough
      :                          @149
  1952: 33 05                    s0 = 0
  1954: 33 09 b0 1a 04           a2 = 0x41ab0
  1959: c9 89 09                 a2 = a2 - a1
  1962: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  1966: 7b 19 b8 01              u64 [sp + 0x1b8] = a2
  1970: 49 21 c0 01              u64 [sp + 448] = 0
  1974: 64 26                    s1 = t0
  1976: 55 12 e0 af 0f           jump @248 if t0 >=u 4294967264
      :                          @150
  1981: 7b 19 60 01              u64 [sp + 0x160] = a2
  1985: c8 59 07                 a0 = a2 + s0
  1988: 95 18 78 01              a1 = sp + 0x178
  1992: 33 09 20                 a2 = 0x20
  1995: 50 10 62 ce 1a           ra = 98, jump @470
      :                          @151 [@dyn 49]
  2000: 95 58 20                 a1 = s0 + 0x20
  2003: 7b 18 c0 01              u64 [sp + 0x1c0] = a1
  2007: 82 17 b0 01              a0 = u64 [sp + 0x1b0]
  2011: c9 87 07                 a0 = a0 - a1
  2014: 82 19 70 01              a2 = u64 [sp + 0x170]
  2018: ac 67 9e 0f              jump @250 if a0 <u s1
      :                          @152
  2022: 82 15 60 01              s0 = u64 [sp + 0x160]
  2026: 01                       fallthrough
      :                          @153
  2027: c8 85 07                 a0 = s0 + a1
  2030: 64 85                    s0 = a1
  2032: 64 98                    a1 = a2
  2034: 64 69                    a2 = s1
  2036: 50 10 64 a5 1a           ra = 100, jump @470
      :                          @154 [@dyn 50]
  2041: c8 65 07                 a0 = s0 + s1
  2044: 7b 17 90 00              u64 [sp + 0x90] = a0
  2048: 82 1c b0 01              a5 = u64 [sp + 0x1b0]
  2052: 82 17 b8 01              a0 = u64 [sp + 0x1b8]
  2056: 7b 17 60                 u64 [sp + 0x60] = a0
  2059: 33 07 b0 1a 03           a0 = 0x31ab0
  2064: 95 77 00 00 01           a0 = a0 + 0x10000
  2069: 82 16 68 01              s1 = u64 [sp + 0x168]
  2073: 7b 1c                    u64 [sp] = a5
  2075: 01                       fallthrough
      :                          @155
  2076: 82 78                    a1 = u64 [a0]
  2078: c9 87 09                 a2 = a0 - a1
  2081: ab 69 22                 jump @162 if a2 != s1
      :                          @156
  2084: 95 89 e0                 a2 = a1 + 0xffffffffffffffe0
  2087: 01                       fallthrough
      :                          @157
  2088: 82 7a                    a3 = u64 [a0]
  2090: ab 8a f2                 jump @155 if a3 != a1
      :                          @158
  2093: 7b 79                    u64 [a0] = a2
  2095: 33 0b                    a4 = 0
  2097: 01                       fallthrough
      :                          @159
  2098: ab 8a ea                 jump @155 if a3 != a1
      :                          @160
  2101: 28 0e                    jump @162
      :                          @161
  2103: 49 21 90 00 20           u64 [sp + 144] = 0x20
  2108: 7b 15 60                 u64 [sp + 0x60] = s0
  2111: 49 01 20                 u64 [sp + 0] = 0x20
  2114: 01                       fallthrough
      :                          @162
  2115: 95 17 00 02              a0 = sp + 0x200
  2119: 33 09 80 00              a2 = 0x80
  2123: 33 08                    a1 = 0
  2125: 50 10 66 fe 1a           ra = 102, jump @488
      :                          @163 [@dyn 51]
  2130: 3a 0c 00 00 03           a5 = u64 [0x30000]
  2135: 3a 07 08 00 03           a0 = u64 [0x30008]
  2140: 3a 08 10 00 03           a1 = u64 [0x30010]
  2145: 3a 09 18 00 03           a2 = u64 [0x30018]
  2150: 7b 1c b0 01              u64 [sp + 0x1b0] = a5
  2154: 7b 17 38                 u64 [sp + 0x38] = a0
  2157: 7b 17 b8 01              u64 [sp + 0x1b8] = a0
  2161: 7b 18 30                 u64 [sp + 0x30] = a1
  2164: 7b 18 c0 01              u64 [sp + 0x1c0] = a1
  2168: 7b 19 28                 u64 [sp + 0x28] = a2
  2171: 7b 19 c8 01              u64 [sp + 0x1c8] = a2
  2175: 3a 06 20 00 03           s1 = u64 [0x30020]
  2180: 3a 0a 28 00 03           a3 = u64 [0x30028]
  2185: 3a 07 30 00 03           a0 = u64 [0x30030]
  2190: 33 05 38 00 03           s0 = 0x30038
  2195: 3a 08 38 00 03           a1 = u64 [0x30038]
  2200: 7b 16 d0 01              u64 [sp + 0x1d0] = s1
  2204: 7b 1a d8 01              u64 [sp + 0x1d8] = a3
  2208: 7b 17 20                 u64 [sp + 0x20] = a0
  2211: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
  2215: 7b 18 18                 u64 [sp + 0x18] = a1
  2218: 7b 18 e8 01              u64 [sp + 0x1e8] = a1
  2222: 49 21 f0 01              u64 [sp + 496] = 0
  2226: 49 21 f8 01              u64 [sp + 504] = 0
  2230: 49 21 80 02              u64 [sp + 640] = 0
  2234: 46 21 88 02              u8 [sp + 648] = 0
  2238: 7b 1a 98 00              u64 [sp + 0x98] = a3
  2242: 82 1b 90 00              a4 = u64 [sp + 0x90]
  2246: 7b 16 a0 00              u64 [sp + 0xa0] = s1
  2250: 51 0b 21 06              jump @198 if a4 == 0
      :                          @164
  2254: 33 03                    t1 = 0
  2256: 33 0c                    a5 = 0
  2258: 3a 07 40 00 03           a0 = u64 [0x30040]
  2263: 7b 17 10                 u64 [sp + 0x10] = a0
  2266: 33 07 13 02 01           a0 = 0x10213
  2271: 7b 17 08                 u64 [sp + 0x8] = a0
  2274: 7b 1b 90 00              u64 [sp + 0x90] = a4
  2278: 01                       fallthrough
      :                          @165
  2279: 52 23 80 00 2a           jump @168 if t1 != 128
      :                          @166
  2284: 82 17 f0 01              a0 = u64 [sp + 0x1f0]
  2288: 95 75 80 00              s0 = a0 + 0x80
  2292: 7b 15 f0 01              u64 [sp + 0x1f0] = s0
  2296: 82 19 f8 01              a2 = u64 [sp + 0x1f8]
  2300: 7b 1c 88 00              u64 [sp + 0x88] = a5
  2304: 53 17 80 2b              jump @171 if a0 <u 4294967168
      :                          @167
  2308: 95 99 01                 a2 = a2 + 0x1
  2311: 7b 19 70 01              u64 [sp + 0x170] = a2
  2315: 7b 19 f8 01              u64 [sp + 0x1f8] = a2
  2319: 28 21                    jump @172
      :                          @168
  2321: 9a 37 80 00              a0 = 0x80 - t1
  2325: c9 cb 08                 a1 = a4 - a5
  2328: e6 87 05                 s0 = minu(a0, a1)
  2331: c8 35 09                 a2 = s0 + t1
  2334: ac 59 88 0e              jump @264 if a2 <u s0
      :                          @169
  2338: 54 29 80 00 20 05        jump @192 if a2 <=u 128
      :                          @170
  2344: 28 7d 0e                 jump @263
      :                          @171
  2347: 7b 19 70 01              u64 [sp + 0x170] = a2
  2351: 01                       fallthrough
      :                          @172
  2352: 95 17 10 03              a0 = sp + 0x310
  2356: 33 09 80 00              a2 = 0x80
  2360: 95 18 00 02              a1 = sp + 0x200
  2364: 50 10 68 5d 19           ra = 104, jump @470
      :                          @173 [@dyn 52]
  2369: 82 16 b0 01              s1 = u64 [sp + 0x1b0]
  2373: 82 1c b8 01              a5 = u64 [sp + 0x1b8]
  2377: 82 13 c0 01              t1 = u64 [sp + 0x1c0]
  2381: 82 12 c8 01              t0 = u64 [sp + 0x1c8]
  2385: 82 1b d0 01              a4 = u64 [sp + 0x1d0]
  2389: 82 1a d8 01              a3 = u64 [sp + 0x1d8]
  2393: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
  2397: 82 14 e8 01              t2 = u64 [sp + 0x1e8]
  2401: 82 17 a0 00              a0 = u64 [sp + 0xa0]
  2405: d3 57 07                 a0 = a0 ^ s0
  2408: 7b 17 28 01              u64 [sp + 0x128] = a0
  2412: 82 17 98 00              a0 = u64 [sp + 0x98]
  2416: 82 19 70 01              a2 = u64 [sp + 0x170]
  2420: d3 97 07                 a0 = a0 ^ a2
  2423: 7b 17 38 01              u64 [sp + 0x138] = a0
  2427: 33 05 0c                 s0 = 0xc
  2430: 82 17 08                 a0 = u64 [sp + 0x8]
  2433: 7b 16 40                 u64 [sp + 0x40] = s1
  2436: 7b 16 20 01              u64 [sp + 0x120] = s1
  2440: 64 76                    s1 = a0
  2442: 7b 1b 68                 u64 [sp + 0x68] = a4
  2445: 64 b9                    a2 = a4
  2447: 82 17 10                 a0 = u64 [sp + 0x10]
  2450: 7b 17 48 01              u64 [sp + 0x148] = a0
  2454: 7b 1c 48                 u64 [sp + 0x48] = a5
  2457: 7b 1c 30 01              u64 [sp + 0x130] = a5
  2461: 7b 1a 70                 u64 [sp + 0x70] = a3
  2464: 64 a0                    ra = a3
  2466: 82 17 38                 a0 = u64 [sp + 0x38]
  2469: 7b 17 58 01              u64 [sp + 0x158] = a0
  2473: 7b 13 50                 u64 [sp + 0x50] = t1
  2476: 7b 13 40 01              u64 [sp + 0x140] = t1
  2480: 7b 18 78                 u64 [sp + 0x78] = a1
  2483: 64 8a                    a3 = a1
  2485: 82 1b 20                 a4 = u64 [sp + 0x20]
  2488: 82 17 30                 a0 = u64 [sp + 0x30]
  2491: 7b 17 68 01              u64 [sp + 0x168] = a0
  2495: 7b 12 58                 u64 [sp + 0x58] = t0
  2498: 64 2c                    a5 = t0
  2500: 7b 14 80 00              u64 [sp + 0x80] = t2
  2504: 64 42                    t0 = t2
  2506: 82 17 18                 a0 = u64 [sp + 0x18]
  2509: 7b 17 50 01              u64 [sp + 0x150] = a0
  2513: 82 17 28                 a0 = u64 [sp + 0x28]
  2516: 7b 17 60 01              u64 [sp + 0x160] = a0
  2520: 01                       fallthrough
      :                          @174
  2521: 7b 10 18 01              u64 [sp + 0x118] = ra
  2525: 7b 1a 70 01              u64 [sp + 0x170] = a3
  2529: 7c 60 f9                 ra = u8 [s1 + 0xfffffffffffffff9]
  2532: 56 10 0f b6 0d           jump @252 if ra >u 15
      :                          @175
  2537: 7c 67 fa                 a0 = u8 [s1 + 0xfffffffffffffffa]
  2540: 33 08 10                 a1 = 0x10
  2543: ae 87 ac 0d              jump @253 if a0 >=u a1
      :                          @176
  2547: 7b 1b 10 01              u64 [sp + 0x110] = a4
  2551: 7c 63 fb                 t1 = u8 [s1 + 0xfffffffffffffffb]
  2554: 55 13 10 a3 0d           jump @255 if t1 >=u 16
      :                          @177
  2559: 7b 15 08 01              u64 [sp + 0x108] = s0
  2563: 7c 64 fc                 t2 = u8 [s1 + 0xfffffffffffffffc]
  2566: 55 14 10 96 0d           jump @254 if t2 >=u 16
      :                          @178
  2571: 7b 1c 00 01              u64 [sp + 0x100] = a5
  2575: 7c 6c fd                 a5 = u8 [s1 + 0xfffffffffffffffd]
  2578: 55 1c 10 44 0d           jump @244 if a5 >=u 16
      :                          @179
  2583: 7b 12 f8 00              u64 [sp + 0xf8] = t0
  2587: 7c 62 fe                 t0 = u8 [s1 + 0xfffffffffffffffe]
  2590: 55 12 10 39 0d           jump @245 if t0 >=u 16
      :                          @180
  2595: 7c 6a ff                 a3 = u8 [s1 + 0xffffffffffffffff]
  2598: 55 1a 10 32 0d           jump @246 if a3 >=u 16
      :                          @181
  2603: 7c 6b                    a4 = u8 [s1]
  2605: 55 1b 10 71 0d           jump @256 if a4 >=u 16
      :                          @182
  2610: 7c 65 01                 s0 = u8 [s1 + 0x1]
  2613: 55 15 10 68 0c           jump @231 if s0 >=u 16
      :                          @183
  2618: 7b 15 f0 00              u64 [sp + 0xf0] = s0
  2622: 7c 65 02                 s0 = u8 [s1 + 0x2]
  2625: 55 15 10 5c 0c           jump @231 if s0 >=u 16
      :                          @184
  2630: 7b 15 e8 00              u64 [sp + 0xe8] = s0
  2634: 7c 65 03                 s0 = u8 [s1 + 0x3]
  2637: 55 15 10 50 0c           jump @231 if s0 >=u 16
      :                          @185
  2642: 7b 15 e0 00              u64 [sp + 0xe0] = s0
  2646: 7c 65 04                 s0 = u8 [s1 + 0x4]
  2649: 55 15 10 44 0c           jump @231 if s0 >=u 16
      :                          @186
  2654: 7b 15 d8 00              u64 [sp + 0xd8] = s0
  2658: 7c 65 05                 s0 = u8 [s1 + 0x5]
  2661: 55 15 10 38 0c           jump @231 if s0 >=u 16
      :                          @187
  2666: 7b 15 d0 00              u64 [sp + 0xd0] = s0
  2670: 7c 65 06                 s0 = u8 [s1 + 0x6]
  2673: 55 15 10 2c 0c           jump @231 if s0 >=u 16
      :                          @188
  2678: 7b 15 c8 00              u64 [sp + 0xc8] = s0
  2682: 7c 65 07                 s0 = u8 [s1 + 0x7]
  2685: 55 15 10 20 0c           jump @231 if s0 >=u 16
      :                          @189
  2690: 7b 15 c0 00              u64 [sp + 0xc0] = s0
  2694: 7c 65 08                 s0 = u8 [s1 + 0x8]
  2697: 55 15 10 14 0c           jump @231 if s0 >=u 16
      :                          @190
  2702: 97 00 03                 ra = ra << 0x3
  2705: 95 18 10 03              a1 = sp + 0x310
  2709: c8 80 00                 ra = ra + a1
  2712: 7b 15 b0 00              u64 [sp + 0xb0] = s0
  2716: 82 05                    s0 = u64 [ra]
  2718: 97 77 03                 a0 = a0 << 0x3
  2721: c8 87 07                 a0 = a0 + a1
  2724: 82 77                    a0 = u64 [a0]
  2726: 7b 16 b8 00              u64 [sp + 0xb8] = s1
  2730: 7b 19 a8 00              u64 [sp + 0xa8] = a2
  2734: 82 16 20 01              s1 = u64 [sp + 0x120]
  2738: c8 96 06                 s1 = s1 + a2
  2741: c8 65 05                 s0 = s0 + s1
  2744: 82 19 28 01              a2 = u64 [sp + 0x128]
  2748: d3 59 09                 a2 = a2 ^ s0
  2751: 7b 19 20 01              u64 [sp + 0x120] = a2
  2755: c8 57 07                 a0 = a0 + s0
  2758: 7b 17 28 01              u64 [sp + 0x128] = a0
  2762: 97 33 03                 t1 = t1 << 0x3
  2765: c8 83 03                 t1 = t1 + a1
  2768: 82 37                    a0 = u64 [t1]
  2770: 97 44 03                 t2 = t2 << 0x3
  2773: c8 84 04                 t2 = t2 + a1
  2776: 82 45                    s0 = u64 [t2]
  2778: 82 10 18 01              ra = u64 [sp + 0x118]
  2782: 82 16 30 01              s1 = u64 [sp + 0x130]
  2786: c8 06 06                 s1 = s1 + ra
  2789: c8 67 07                 a0 = a0 + s1
  2792: 82 19 38 01              a2 = u64 [sp + 0x138]
  2796: d3 97 03                 t1 = a0 ^ a2
  2799: c8 57 04                 t2 = a0 + s0
  2802: 97 cc 03                 a5 = a5 << 0x3
  2805: c8 8c 0c                 a5 = a5 + a1
  2808: 82 c7                    a0 = u64 [a5]
  2810: 97 22 03                 t0 = t0 << 0x3
  2813: c8 82 02                 t0 = t0 + a1
  2816: 82 2c                    a5 = u64 [t0]
  2818: 82 16 40 01              s1 = u64 [sp + 0x140]
  2822: 82 18 70 01              a1 = u64 [sp + 0x170]
  2826: c8 86 06                 s1 = s1 + a1
  2829: c8 67 07                 a0 = a0 + s1
  2832: 82 19 10 01              a2 = u64 [sp + 0x110]
  2836: d3 79 09                 a2 = a2 ^ a0
  2839: 7b 19 40 01              u64 [sp + 0x140] = a2
  2843: c8 c7 07                 a0 = a0 + a5
  2846: 7b 17 38 01              u64 [sp + 0x138] = a0
  2850: 97 aa 03                 a3 = a3 << 0x3
  2853: 95 18 10 03              a1 = sp + 0x310
  2857: c8 8a 0a                 a3 = a3 + a1
  2860: 82 a7                    a0 = u64 [a3]
  2862: 97 bb 03                 a4 = a4 << 0x3
  2865: c8 8b 0b                 a4 = a4 + a1
  2868: 82 ba                    a3 = u64 [a4]
  2870: 82 16 f8 00              s1 = u64 [sp + 0xf8]
  2874: 82 1b 00 01              a4 = u64 [sp + 0x100]
  2878: c8 6b 0b                 a4 = a4 + s1
  2881: c8 b7 07                 a0 = a0 + a4
  2884: 82 1b 50 01              a4 = u64 [sp + 0x150]
  2888: d3 7b 0b                 a4 = a4 ^ a0
  2891: c8 a7 02                 t0 = a0 + a3
  2894: 82 17 20 01              a0 = u64 [sp + 0x120]
  2898: 9e 77 20                 a0 = a0 >>r 0x20
  2901: 82 1a 48 01              a3 = u64 [sp + 0x148]
  2905: c8 7a 0a                 a3 = a3 + a0
  2908: 82 15 a8 00              s0 = u64 [sp + 0xa8]
  2912: d3 a5 05                 s0 = s0 ^ a3
  2915: 82 19 f0 00              a2 = u64 [sp + 0xf0]
  2919: 97 99 03                 a2 = a2 << 0x3
  2922: c8 89 09                 a2 = a2 + a1
  2925: 82 99                    a2 = u64 [a2]
  2927: 9e 58 18                 a1 = s0 >>r 0x18
  2930: 7b 18 50 01              u64 [sp + 0x150] = a1
  2934: 82 15 28 01              s0 = u64 [sp + 0x128]
  2938: c8 85 05                 s0 = s0 + a1
  2941: d3 57 07                 a0 = a0 ^ s0
  2944: c8 59 09                 a2 = a2 + s0
  2947: 9e 35 20                 s0 = t1 >>r 0x20
  2950: 82 18 58 01              a1 = u64 [sp + 0x158]
  2954: c8 85 03                 t1 = s0 + a1
  2957: d3 03 0c                 a5 = t1 ^ ra
  2960: 9e cc 18                 a5 = a5 >>r 0x18
  2963: c8 c4 04                 t2 = t2 + a5
  2966: d3 54 05                 s0 = t2 ^ s0
  2969: 9e 58 10                 a1 = s0 >>r 0x10
  2972: 7b 18 48 01              u64 [sp + 0x148] = a1
  2976: c8 38 08                 a1 = a1 + t1
  2979: 7b 18 58 01              u64 [sp + 0x158] = a1
  2983: d3 c8 08                 a1 = a1 ^ a5
  2986: 9e 88 3f                 a1 = a1 >>r 0x3f
  2989: 7b 18 30 01              u64 [sp + 0x130] = a1
  2993: 9e bb 20                 a4 = a4 >>r 0x20
  2996: 82 10 60 01              ra = u64 [sp + 0x160]
  3000: c8 b0 00                 ra = ra + a4
  3003: d3 60 0c                 a5 = ra ^ s1
  3006: 9e c5 18                 s0 = a5 >>r 0x18
  3009: c8 52 03                 t1 = t0 + s0
  3012: d3 b3 0b                 a4 = t1 ^ a4
  3015: 9e bb 10                 a4 = a4 >>r 0x10
  3018: c8 b0 00                 ra = ra + a4
  3021: 7b 10 10 01              u64 [sp + 0x110] = ra
  3025: 82 1c e8 00              a5 = u64 [sp + 0xe8]
  3029: 97 cc 03                 a5 = a5 << 0x3
  3032: 95 16 10 03              s1 = sp + 0x310
  3036: c8 6c 0c                 a5 = a5 + s1
  3039: 82 cc                    a5 = u64 [a5]
  3041: 82 12 e0 00              t0 = u64 [sp + 0xe0]
  3045: 97 22 03                 t0 = t0 << 0x3
  3048: c8 62 02                 t0 = t0 + s1
  3051: 82 22                    t0 = u64 [t0]
  3053: c8 89 09                 a2 = a2 + a1
  3056: d3 9b 0b                 a4 = a4 ^ a2
  3059: 7b 1b 28 01              u64 [sp + 0x128] = a4
  3063: c8 c9 09                 a2 = a2 + a5
  3066: 7b 19 60 01              u64 [sp + 0x160] = a2
  3070: c8 24 04                 t2 = t2 + t0
  3073: 9e 76 10                 s1 = a0 >>r 0x10
  3076: c8 6a 0a                 a3 = a3 + s1
  3079: 7b 1a 18 01              u64 [sp + 0x118] = a3
  3083: 82 17 40 01              a0 = u64 [sp + 0x140]
  3087: 9e 79 20                 a2 = a0 >>r 0x20
  3090: 82 12 68 01              t0 = u64 [sp + 0x168]
  3094: c8 92 02                 t0 = t0 + a2
  3097: 82 17 70 01              a0 = u64 [sp + 0x170]
  3101: d3 72 0c                 a5 = t0 ^ a0
  3104: 9e cb 18                 a4 = a5 >>r 0x18
  3107: 82 17 38 01              a0 = u64 [sp + 0x138]
  3111: c8 b7 07                 a0 = a0 + a4
  3114: d3 79 09                 a2 = a2 ^ a0
  3117: 9e 90 10                 ra = a2 >>r 0x10
  3120: c8 02 02                 t0 = t0 + ra
  3123: d3 b2 0b                 a4 = t0 ^ a4
  3126: 9e b8 3f                 a1 = a4 >>r 0x3f
  3129: 7b 18 40 01              u64 [sp + 0x140] = a1
  3133: 82 1a d8 00              a3 = u64 [sp + 0xd8]
  3137: 97 aa 03                 a3 = a3 << 0x3
  3140: 95 19 10 03              a2 = sp + 0x310
  3144: c8 9a 0a                 a3 = a3 + a2
  3147: 82 aa                    a3 = u64 [a3]
  3149: 82 1b d0 00              a4 = u64 [sp + 0xd0]
  3153: 97 bb 03                 a4 = a4 << 0x3
  3156: c8 9b 0b                 a4 = a4 + a2
  3159: 82 bb                    a4 = u64 [a4]
  3161: c8 84 04                 t2 = t2 + a1
  3164: d3 64 06                 s1 = t2 ^ s1
  3167: c8 4a 0a                 a3 = a3 + t2
  3170: 7b 1a 70 01              u64 [sp + 0x170] = a3
  3174: c8 7b 0b                 a4 = a4 + a0
  3177: 82 18 10 01              a1 = u64 [sp + 0x110]
  3181: d3 58 07                 a0 = a1 ^ s0
  3184: 9e 7c 3f                 a5 = a0 >>r 0x3f
  3187: 82 1a c8 00              a3 = u64 [sp + 0xc8]
  3191: 97 aa 03                 a3 = a3 << 0x3
  3194: c8 9a 0a                 a3 = a3 + a2
  3197: 82 aa                    a3 = u64 [a3]
  3199: 82 15 c0 00              s0 = u64 [sp + 0xc0]
  3203: 97 55 03                 s0 = s0 << 0x3
  3206: c8 95 05                 s0 = s0 + a2
  3209: 82 55                    s0 = u64 [s0]
  3211: c8 cb 0b                 a4 = a4 + a5
  3214: 82 17 48 01              a0 = u64 [sp + 0x148]
  3218: d3 b7 07                 a0 = a0 ^ a4
  3221: 7b 17 38 01              u64 [sp + 0x138] = a0
  3225: c8 ba 0a                 a3 = a3 + a4
  3228: 7b 1a 48 01              u64 [sp + 0x148] = a3
  3232: c8 53 03                 t1 = t1 + s0
  3235: 82 1a 50 01              a3 = u64 [sp + 0x150]
  3239: 82 17 18 01              a0 = u64 [sp + 0x118]
  3243: d3 a7 0b                 a4 = a0 ^ a3
  3246: 82 15 b0 00              s0 = u64 [sp + 0xb0]
  3250: 97 55 03                 s0 = s0 << 0x3
  3253: c8 95 05                 s0 = s0 + a2
  3256: 82 55                    s0 = u64 [s0]
  3258: 9e bb 3f                 a4 = a4 >>r 0x3f
  3261: c8 b3 03                 t1 = t1 + a4
  3264: d3 03 04                 t2 = t1 ^ ra
  3267: c8 53 03                 t1 = t1 + s0
  3270: 82 19 28 01              a2 = u64 [sp + 0x128]
  3274: 9e 95 20                 s0 = a2 >>r 0x20
  3277: c8 25 09                 a2 = s0 + t0
  3280: 82 1a 30 01              a3 = u64 [sp + 0x130]
  3284: d3 a9 00                 ra = a2 ^ a3
  3287: 9e 00 18                 ra = ra >>r 0x18
  3290: 82 1a 60 01              a3 = u64 [sp + 0x160]
  3294: c8 0a 0a                 a3 = a3 + ra
  3297: 7b 1a 20 01              u64 [sp + 0x120] = a3
  3301: d3 a5 05                 s0 = s0 ^ a3
  3304: 9e 5a 10                 a3 = s0 >>r 0x10
  3307: 7b 1a 50 01              u64 [sp + 0x150] = a3
  3311: c8 a9 09                 a2 = a2 + a3
  3314: 7b 19 68 01              u64 [sp + 0x168] = a2
  3318: d3 09 09                 a2 = a2 ^ ra
  3321: 9e 90 3f                 ra = a2 >>r 0x3f
  3324: 9e 69 20                 a2 = s1 >>r 0x20
  3327: c8 89 05                 s0 = a2 + a1
  3330: 82 16 40 01              s1 = u64 [sp + 0x140]
  3334: d3 56 06                 s1 = s1 ^ s0
  3337: 9e 66 18                 s1 = s1 >>r 0x18
  3340: 82 18 70 01              a1 = u64 [sp + 0x170]
  3344: c8 68 08                 a1 = a1 + s1
  3347: 7b 18 30 01              u64 [sp + 0x130] = a1
  3351: d3 89 09                 a2 = a2 ^ a1
  3354: 9e 99 10                 a2 = a2 >>r 0x10
  3357: 7b 19 28 01              u64 [sp + 0x128] = a2
  3361: c8 59 09                 a2 = a2 + s0
  3364: 7b 19 60 01              u64 [sp + 0x160] = a2
  3368: d3 69 09                 a2 = a2 ^ s1
  3371: 82 16 b8 00              s1 = u64 [sp + 0xb8]
  3375: 9e 9a 3f                 a3 = a2 >>r 0x3f
  3378: 82 18 38 01              a1 = u64 [sp + 0x138]
  3382: 9e 89 20                 a2 = a1 >>r 0x20
  3385: c8 79 08                 a1 = a2 + a0
  3388: d3 c8 07                 a0 = a1 ^ a5
  3391: 9e 77 18                 a0 = a0 >>r 0x18
  3394: 82 12 48 01              t0 = u64 [sp + 0x148]
  3398: c8 72 02                 t0 = t0 + a0
  3401: 7b 12 40 01              u64 [sp + 0x140] = t0
  3405: d3 92 09                 a2 = t0 ^ a2
  3408: 9e 99 10                 a2 = a2 >>r 0x10
  3411: 7b 19 38 01              u64 [sp + 0x138] = a2
  3415: c8 98 08                 a1 = a1 + a2
  3418: 7b 18 48 01              u64 [sp + 0x148] = a1
  3422: d3 87 07                 a0 = a0 ^ a1
  3425: 9e 72 3f                 t0 = a0 >>r 0x3f
  3428: 9e 47 20                 a0 = t2 >>r 0x20
  3431: 82 18 58 01              a1 = u64 [sp + 0x158]
  3435: c8 78 08                 a1 = a1 + a0
  3438: d3 8b 0b                 a4 = a4 ^ a1
  3441: 9e b9 18                 a2 = a4 >>r 0x18
  3444: c8 93 0c                 a5 = t1 + a2
  3447: d3 c7 07                 a0 = a0 ^ a5
  3450: 9e 7b 10                 a4 = a0 >>r 0x10
  3453: c8 8b 07                 a0 = a4 + a1
  3456: 7b 17 58 01              u64 [sp + 0x158] = a0
  3460: d3 97 07                 a0 = a0 ^ a2
  3463: 9e 79 3f                 a2 = a0 >>r 0x3f
  3466: 82 15 08 01              s0 = u64 [sp + 0x108]
  3470: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  3473: 95 66 10                 s1 = s1 + 0x10
  3476: 52 05 45 fc              jump @174 if s0 != 0
      :                          @191
  3480: 33 03                    t1 = 0
  3482: 82 17 40                 a0 = u64 [sp + 0x40]
  3485: 82 18 20 01              a1 = u64 [sp + 0x120]
  3489: d3 87 07                 a0 = a0 ^ a1
  3492: 82 18 48 01              a1 = u64 [sp + 0x148]
  3496: d3 87 07                 a0 = a0 ^ a1
  3499: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  3503: 82 17 48                 a0 = u64 [sp + 0x48]
  3506: 82 18 30 01              a1 = u64 [sp + 0x130]
  3510: d3 87 07                 a0 = a0 ^ a1
  3513: 82 18 58 01              a1 = u64 [sp + 0x158]
  3517: d3 87 07                 a0 = a0 ^ a1
  3520: 7b 17 b8 01              u64 [sp + 0x1b8] = a0
  3524: 82 17 50                 a0 = u64 [sp + 0x50]
  3527: 82 18 68 01              a1 = u64 [sp + 0x168]
  3531: d3 87 07                 a0 = a0 ^ a1
  3534: 82 18 40 01              a1 = u64 [sp + 0x140]
  3538: d3 87 07                 a0 = a0 ^ a1
  3541: 7b 17 c0 01              u64 [sp + 0x1c0] = a0
  3545: 82 17 58                 a0 = u64 [sp + 0x58]
  3548: 82 18 60 01              a1 = u64 [sp + 0x160]
  3552: d3 87 07                 a0 = a0 ^ a1
  3555: d3 c7 07                 a0 = a0 ^ a5
  3558: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
  3562: 82 17 68                 a0 = u64 [sp + 0x68]
  3565: 82 18 28 01              a1 = u64 [sp + 0x128]
  3569: d3 87 07                 a0 = a0 ^ a1
  3572: d3 97 07                 a0 = a0 ^ a2
  3575: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
  3579: 82 17 70                 a0 = u64 [sp + 0x70]
  3582: d3 70 07                 a0 = ra ^ a0
  3585: 82 18 38 01              a1 = u64 [sp + 0x138]
  3589: d3 87 07                 a0 = a0 ^ a1
  3592: 7b 17 d8 01              u64 [sp + 0x1d8] = a0
  3596: 82 17 78                 a0 = u64 [sp + 0x78]
  3599: d3 a7 07                 a0 = a0 ^ a3
  3602: d3 b7 07                 a0 = a0 ^ a4
  3605: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
  3609: 82 17 80 00              a0 = u64 [sp + 0x80]
  3613: 82 18 50 01              a1 = u64 [sp + 0x150]
  3617: d3 87 07                 a0 = a0 ^ a1
  3620: d3 27 07                 a0 = a0 ^ t0
  3623: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
  3627: 49 21 80 02              u64 [sp + 640] = 0
  3631: 82 1b 90 00              a4 = u64 [sp + 0x90]
  3635: 82 1c 88 00              a5 = u64 [sp + 0x88]
  3639: c9 cb 07                 a0 = a4 - a5
  3642: 33 08 80 00              a1 = 0x80
  3646: e6 87 05                 s0 = minu(a0, a1)
  3649: 01                       fallthrough
      :                          @192
  3650: c8 c5 06                 s1 = s0 + a5
  3653: ac 56 5e 09              jump @261 if s1 <u s0
      :                          @193
  3657: ac 6b 5b 09              jump @262 if a4 <u s1
      :                          @194
  3661: 95 17 00 02              a0 = sp + 0x200
  3665: c8 37 07                 a0 = a0 + t1
  3668: 82 18 60                 a1 = u64 [sp + 0x60]
  3671: c8 c8 08                 a1 = a1 + a5
  3674: 64 59                    a2 = s0
  3676: 50 10 6a 3d 14           ra = 106, jump @470
      :                          @195 [@dyn 53]
  3681: 82 17 80 02              a0 = u64 [sp + 0x280]
  3685: c8 57 03                 t1 = a0 + s0
  3688: 7b 13 80 02              u64 [sp + 0x280] = t1
  3692: 64 6c                    a5 = s1
  3694: 82 1b 90 00              a4 = u64 [sp + 0x90]
  3698: ac b6 75 fa              jump @165 if s1 <u a4
      :                          @196
  3702: 7c 17 88 02              a0 = u8 [sp + 0x288]
  3706: 51 07 54 08              jump @239 if a0 == 0
      :                          @197
  3710: 33 05                    s0 = 0
  3712: 33 06                    s1 = 0
  3714: 33 0c                    a5 = 0
  3716: 33 0b                    a4 = 0
  3718: 33 00                    ra = 0
  3720: 33 04                    t2 = 0
  3722: 33 03                    t1 = 0
  3724: 33 02                    t0 = 0
  3726: 33 0a                    a3 = 0
  3728: 33 09                    a2 = 0
  3730: 33 08                    a1 = 0
  3732: 49 21 d0 00              u64 [sp + 208] = 0
  3736: 49 21 d8 00              u64 [sp + 216] = 0
  3740: 49 21 e0 00              u64 [sp + 224] = 0
  3744: 49 21 e8 00              u64 [sp + 232] = 0
  3748: 49 21 f0 00              u64 [sp + 240] = 0
  3752: 49 21 f8 00              u64 [sp + 248] = 0
  3756: 49 21 00 01              u64 [sp + 256] = 0
  3760: 49 21 08 01              u64 [sp + 264] = 0
  3764: 49 21 10 01              u64 [sp + 272] = 0
  3768: 49 21 18 01              u64 [sp + 280] = 0
  3772: 49 21 20 01              u64 [sp + 288] = 0
  3776: 49 21 28 01              u64 [sp + 296] = 0
  3780: 49 21 30 01              u64 [sp + 304] = 0
  3784: 49 21 38 01              u64 [sp + 312] = 0
  3788: 49 21 40 01              u64 [sp + 320] = 0
  3792: 49 21 48 01              u64 [sp + 328] = 0
  3796: 49 21 50 01              u64 [sp + 336] = 0
  3800: 49 21 58 01              u64 [sp + 344] = 0
  3804: 49 21 60 01              u64 [sp + 352] = 0
  3808: 49 21 68 01              u64 [sp + 360] = 0
  3812: 49 21 70 01              u64 [sp + 368] = 0
  3816: 28 ea 05                 jump @221
      :                          @198
  3819: 7b 1c 58                 u64 [sp + 0x58] = a5
  3822: 95 17 90 02              a0 = sp + 0x290
  3826: 33 09 80 00              a2 = 0x80
  3830: 33 08                    a1 = 0
  3832: 50 10 6c 53 14           ra = 108, jump @488
      :                          @199 [@dyn 54]
  3837: 3a 07 08 00 03           a0 = u64 [0x30008]
  3842: 7b 17 68                 u64 [sp + 0x68] = a0
  3845: 3a 07 10 00 03           a0 = u64 [0x30010]
  3850: 7b 17 70                 u64 [sp + 0x70] = a0
  3853: 3a 07 18 00 03           a0 = u64 [0x30018]
  3858: 7b 17 78                 u64 [sp + 0x78] = a0
  3861: 3a 07 30 00 03           a0 = u64 [0x30030]
  3866: 7b 17 68 01              u64 [sp + 0x168] = a0
  3870: 3a 07 38 00 03           a0 = u64 [0x30038]
  3875: 7b 17 48 01              u64 [sp + 0x148] = a0
  3879: 33 09                    a2 = 0
  3881: 82 17 98 00              a0 = u64 [sp + 0x98]
  3885: 7b 17 38 01              u64 [sp + 0x138] = a0
  3889: 7b 16 30 01              u64 [sp + 0x130] = s1
  3893: 01                       fallthrough
      :                          @200
  3894: 95 17 90 02              a0 = sp + 0x290
  3898: 95 18 00 02              a1 = sp + 0x200
  3902: 50 10 6e 5b 13           ra = 110, jump @470
      :                          @201 [@dyn 55]
  3907: 95 17 10 03              a0 = sp + 0x310
  3911: 95 18 90 02              a1 = sp + 0x290
  3915: 33 09 80 00              a2 = 0x80
  3919: 50 10 70 4a 13           ra = 112, jump @470
      :                          @202 [@dyn 56]
  3924: 33 0b 13 02 01           a4 = 0x10213
  3929: 3a 00 18 00 03           ra = u64 [0x30018]
  3934: 3a 07 38 00 03           a0 = u64 [0x30038]
  3939: 7b 17 40 01              u64 [sp + 0x140] = a0
  3943: 3a 07 10 00 03           a0 = u64 [0x30010]
  3948: 7b 17 60 01              u64 [sp + 0x160] = a0
  3952: 3a 07 48 00 03           a0 = u64 [0x30048]
  3957: 7b 17 28 01              u64 [sp + 0x128] = a0
  3961: 3a 07 08 00 03           a0 = u64 [0x30008]
  3966: 7b 17 58 01              u64 [sp + 0x158] = a0
  3970: 3a 05 40 00 03           s0 = u64 [0x30040]
  3975: 33 06 0c                 s1 = 0xc
  3978: 33 0a 10                 a3 = 0x10
  3981: 82 17 58                 a0 = u64 [sp + 0x58]
  3984: 7b 17 50 01              u64 [sp + 0x150] = a0
  3988: 82 19 68                 a2 = u64 [sp + 0x68]
  3991: 64 9c                    a5 = a2
  3993: 82 14 70                 t2 = u64 [sp + 0x70]
  3996: 64 42                    t0 = t2
  3998: 82 18 78                 a1 = u64 [sp + 0x78]
  4001: 64 83                    t1 = a1
  4003: 7b 18 78                 u64 [sp + 0x78] = a1
  4006: 7b 14 70                 u64 [sp + 0x70] = t2
  4009: 7b 19 68                 u64 [sp + 0x68] = a2
  4012: 01                       fallthrough
      :                          @203
  4013: 7b 1c 20 01              u64 [sp + 0x120] = a5
  4017: 7c b4 f9                 t2 = u8 [a4 + 0xfffffffffffffff9]
  4020: 56 14 0f e8 07           jump @254 if t2 >u 15
      :                          @204
  4025: 7c b7 fa                 a0 = u8 [a4 + 0xfffffffffffffffa]
  4028: 55 17 10 df 07           jump @253 if a0 >=u 16
      :                          @205
  4033: 64 59                    a2 = s0
  4035: 7c b5 fb                 s0 = u8 [a4 + 0xfffffffffffffffb]
  4038: 55 15 10 d7 06           jump @231 if s0 >=u 16
      :                          @206
  4043: 7b 12 18 01              u64 [sp + 0x118] = t0
  4047: 7c b2 fc                 t0 = u8 [a4 + 0xfffffffffffffffc]
  4050: 55 12 10 85 07           jump @245 if t0 >=u 16
      :                          @207
  4055: 7b 13 10 01              u64 [sp + 0x110] = t1
  4059: 7c bc fd                 a5 = u8 [a4 + 0xfffffffffffffffd]
  4062: 55 1c 10 78 07           jump @244 if a5 >=u 16
      :                          @208
  4067: 7b 19 00 01              u64 [sp + 0x100] = a2
  4071: 7b 10 08 01              u64 [sp + 0x108] = ra
  4075: 7c b0 fe                 ra = u8 [a4 + 0xfffffffffffffffe]
  4078: 55 10 10 ac 07           jump @252 if ra >=u 16
      :                          @209
  4083: 7b 15 f8 00              u64 [sp + 0xf8] = s0
  4087: 33 05 10                 s0 = 0x10
  4090: 7c ba ff                 a3 = u8 [a4 + 0xffffffffffffffff]
  4093: ae 5a 5b 07              jump @246 if a3 >=u s0
      :                          @210
  4097: 7b 1b 70 01              u64 [sp + 0x170] = a4
  4101: 7c bb                    a4 = u8 [a4]
  4103: 55 1b 10 97 07           jump @256 if a4 >=u 16
      :                          @211
  4108: 82 19 70 01              a2 = u64 [sp + 0x170]
  4112: 7c 98 01                 a1 = u8 [a2 + 0x1]
  4115: 55 18 10 8d 07           jump @258 if a1 >=u 16
      :                          @212
  4120: 7b 16 f0 00              u64 [sp + 0xf0] = s1
  4124: 82 16 70 01              s1 = u64 [sp + 0x170]
  4128: 7c 63 02                 t1 = u8 [s1 + 0x2]
  4131: 55 13 10 7a 07           jump @255 if t1 >=u 16
      :                          @213
  4136: 7b 12 e0 00              u64 [sp + 0xe0] = t0
  4140: 7b 1c e8 00              u64 [sp + 0xe8] = a5
  4144: 82 16 70 01              s1 = u64 [sp + 0x170]
  4148: 7c 62 03                 t0 = u8 [s1 + 0x3]
  4151: 55 12 10 20 07           jump @245 if t0 >=u 16
      :                          @214
  4156: 82 16 70 01              s1 = u64 [sp + 0x170]
  4160: 7c 6c 04                 a5 = u8 [s1 + 0x4]
  4163: 55 1c 10 13 07           jump @244 if a5 >=u 16
      :                          @215
  4168: 7b 1a d8 00              u64 [sp + 0xd8] = a3
  4172: 82 16 70 01              s1 = u64 [sp + 0x170]
  4176: 7c 6a 05                 a3 = u8 [s1 + 0x5]
  4179: 55 1a 10 05 07           jump @246 if a3 >=u 16
      :                          @216
  4184: 82 16 70 01              s1 = u64 [sp + 0x170]
  4188: 7c 69 06                 a2 = u8 [s1 + 0x6]
  4191: 55 19 10 42 07           jump @259 if a2 >=u 16
      :                          @217
  4196: 82 16 70 01              s1 = u64 [sp + 0x170]
  4200: 7c 66 07                 s1 = u8 [s1 + 0x7]
  4203: 55 16 10 34 07           jump @257 if s1 >=u 16
      :                          @218
  4208: 7b 16 d0 00              u64 [sp + 0xd0] = s1
  4212: 82 16 70 01              s1 = u64 [sp + 0x170]
  4216: 7c 66 08                 s1 = u8 [s1 + 0x8]
  4219: 55 16 10 24 07           jump @257 if s1 >=u 16
      :                          @219
  4224: 7b 1b 80 00              u64 [sp + 0x80] = a4
  4228: 64 0b                    a4 = ra
  4230: 97 40 03                 ra = t2 << 0x3
  4233: 7b 18 b0 00              u64 [sp + 0xb0] = a1
  4237: 95 18 10 03              a1 = sp + 0x310
  4241: c8 80 00                 ra = ra + a1
  4244: 82 05                    s0 = u64 [ra]
  4246: 97 77 03                 a0 = a0 << 0x3
  4249: c8 87 07                 a0 = a0 + a1
  4252: 82 70                    ra = u64 [a0]
  4254: 7b 16 c8 00              u64 [sp + 0xc8] = s1
  4258: 82 16 50 01              s1 = u64 [sp + 0x150]
  4262: 82 17 a0 00              a0 = u64 [sp + 0xa0]
  4266: c8 76 06                 s1 = s1 + a0
  4269: c8 65 05                 s0 = s0 + s1
  4272: 82 16 30 01              s1 = u64 [sp + 0x130]
  4276: d3 56 06                 s1 = s1 ^ s0
  4279: 7b 16 88 00              u64 [sp + 0x88] = s1
  4283: c8 05 07                 a0 = s0 + ra
  4286: 7b 17 90 00              u64 [sp + 0x90] = a0
  4290: 7b 19 50 01              u64 [sp + 0x150] = a2
  4294: 7b 1a 30 01              u64 [sp + 0x130] = a3
  4298: 7b 1c c0 00              u64 [sp + 0xc0] = a5
  4302: 7b 12 b8 00              u64 [sp + 0xb8] = t0
  4306: 7b 13 a8 00              u64 [sp + 0xa8] = t1
  4310: 82 13 f8 00              t1 = u64 [sp + 0xf8]
  4314: 97 33 03                 t1 = t1 << 0x3
  4317: c8 83 03                 t1 = t1 + a1
  4320: 82 37                    a0 = u64 [t1]
  4322: 82 14 e0 00              t2 = u64 [sp + 0xe0]
  4326: 97 44 03                 t2 = t2 << 0x3
  4329: c8 84 04                 t2 = t2 + a1
  4332: 82 45                    s0 = u64 [t2]
  4334: 82 10 98 00              ra = u64 [sp + 0x98]
  4338: 82 16 20 01              s1 = u64 [sp + 0x120]
  4342: c8 06 06                 s1 = s1 + ra
  4345: c8 67 07                 a0 = a0 + s1
  4348: 82 16 38 01              s1 = u64 [sp + 0x138]
  4352: d3 76 06                 s1 = s1 ^ a0
  4355: 7b 16 20 01              u64 [sp + 0x120] = s1
  4359: c8 57 04                 t2 = a0 + s0
  4362: 82 1c e8 00              a5 = u64 [sp + 0xe8]
  4366: 97 cc 03                 a5 = a5 << 0x3
  4369: c8 8c 0c                 a5 = a5 + a1
  4372: 82 c7                    a0 = u64 [a5]
  4374: 97 b2 03                 t0 = a4 << 0x3
  4377: c8 82 02                 t0 = t0 + a1
  4380: 82 2c                    a5 = u64 [t0]
  4382: 82 16 18 01              s1 = u64 [sp + 0x118]
  4386: 82 18 68 01              a1 = u64 [sp + 0x168]
  4390: c8 86 06                 s1 = s1 + a1
  4393: c8 67 07                 a0 = a0 + s1
  4396: 82 16 28 01              s1 = u64 [sp + 0x128]
  4400: d3 76 06                 s1 = s1 ^ a0
  4403: 7b 16 38 01              u64 [sp + 0x138] = s1
  4407: c8 c7 07                 a0 = a0 + a5
  4410: 7b 17 28 01              u64 [sp + 0x128] = a0
  4414: 82 1a d8 00              a3 = u64 [sp + 0xd8]
  4418: 97 aa 03                 a3 = a3 << 0x3
  4421: 95 18 10 03              a1 = sp + 0x310
  4425: c8 8a 0a                 a3 = a3 + a1
  4428: 82 a7                    a0 = u64 [a3]
  4430: 82 1b 80 00              a4 = u64 [sp + 0x80]
  4434: 97 bb 03                 a4 = a4 << 0x3
  4437: c8 8b 0b                 a4 = a4 + a1
  4440: 82 ba                    a3 = u64 [a4]
  4442: 82 16 48 01              s1 = u64 [sp + 0x148]
  4446: 82 1b 10 01              a4 = u64 [sp + 0x110]
  4450: c8 6b 0b                 a4 = a4 + s1
  4453: c8 b7 07                 a0 = a0 + a4
  4456: 82 1b 40 01              a4 = u64 [sp + 0x140]
  4460: d3 7b 0b                 a4 = a4 ^ a0
  4463: c8 a7 02                 t0 = a0 + a3
  4466: 82 17 88 00              a0 = u64 [sp + 0x88]
  4470: 9e 77 20                 a0 = a0 >>r 0x20
  4473: 82 1a 00 01              a3 = u64 [sp + 0x100]
  4477: c8 7a 0a                 a3 = a3 + a0
  4480: 82 15 a0 00              s0 = u64 [sp + 0xa0]
  4484: d3 a5 05                 s0 = s0 ^ a3
  4487: 82 19 b0 00              a2 = u64 [sp + 0xb0]
  4491: 97 99 03                 a2 = a2 << 0x3
  4494: c8 89 09                 a2 = a2 + a1
  4497: 82 99                    a2 = u64 [a2]
  4499: 9e 58 18                 a1 = s0 >>r 0x18
  4502: 7b 18 40 01              u64 [sp + 0x140] = a1
  4506: 82 15 90 00              s0 = u64 [sp + 0x90]
  4510: c8 85 05                 s0 = s0 + a1
  4513: d3 75 03                 t1 = s0 ^ a0
  4516: c8 59 09                 a2 = a2 + s0
  4519: 82 17 20 01              a0 = u64 [sp + 0x120]
  4523: 9e 75 20                 s0 = a0 >>r 0x20
  4526: 82 18 58 01              a1 = u64 [sp + 0x158]
  4530: c8 58 08                 a1 = a1 + s0
  4533: d3 08 0c                 a5 = a1 ^ ra
  4536: 9e cc 18                 a5 = a5 >>r 0x18
  4539: c8 c4 04                 t2 = t2 + a5
  4542: d3 54 05                 s0 = t2 ^ s0
  4545: 9e 57 10                 a0 = s0 >>r 0x10
  4548: 7b 17 20 01              u64 [sp + 0x120] = a0
  4552: c8 78 08                 a1 = a1 + a0
  4555: 7b 18 58 01              u64 [sp + 0x158] = a1
  4559: d3 c8 08                 a1 = a1 ^ a5
  4562: 9e 87 3f                 a0 = a1 >>r 0x3f
  4565: 7b 17 10 01              u64 [sp + 0x110] = a0
  4569: 9e bb 20                 a4 = a4 >>r 0x20
  4572: 82 10 08 01              ra = u64 [sp + 0x108]
  4576: c8 b0 00                 ra = ra + a4
  4579: d3 60 0c                 a5 = ra ^ s1
  4582: 9e c5 18                 s0 = a5 >>r 0x18
  4585: c8 52 02                 t0 = t0 + s0
  4588: 7b 12 48 01              u64 [sp + 0x148] = t0
  4592: d3 b2 0b                 a4 = t0 ^ a4
  4595: 9e bb 10                 a4 = a4 >>r 0x10
  4598: c8 0b 08                 a1 = a4 + ra
  4601: 82 1c a8 00              a5 = u64 [sp + 0xa8]
  4605: 97 cc 03                 a5 = a5 << 0x3
  4608: 95 10 10 03              ra = sp + 0x310
  4612: c8 0c 0c                 a5 = a5 + ra
  4615: 82 cc                    a5 = u64 [a5]
  4617: 82 12 b8 00              t0 = u64 [sp + 0xb8]
  4621: 97 22 03                 t0 = t0 << 0x3
  4624: c8 02 02                 t0 = t0 + ra
  4627: 82 22                    t0 = u64 [t0]
  4629: c8 79 09                 a2 = a2 + a0
  4632: d3 9b 0b                 a4 = a4 ^ a2
  4635: 7b 1b 08 01              u64 [sp + 0x108] = a4
  4639: c8 c9 09                 a2 = a2 + a5
  4642: 7b 19 18 01              u64 [sp + 0x118] = a2
  4646: c8 24 04                 t2 = t2 + t0
  4649: 9e 36 10                 s1 = t1 >>r 0x10
  4652: c8 6a 0a                 a3 = a3 + s1
  4655: 7b 1a 00 01              u64 [sp + 0x100] = a3
  4659: 82 17 38 01              a0 = u64 [sp + 0x138]
  4663: 9e 79 20                 a2 = a0 >>r 0x20
  4666: 82 12 60 01              t0 = u64 [sp + 0x160]
  4670: c8 92 02                 t0 = t0 + a2
  4673: 82 17 68 01              a0 = u64 [sp + 0x168]
  4677: d3 72 0c                 a5 = t0 ^ a0
  4680: 9e cb 18                 a4 = a5 >>r 0x18
  4683: 82 17 28 01              a0 = u64 [sp + 0x128]
  4687: c8 b7 07                 a0 = a0 + a4
  4690: d3 79 09                 a2 = a2 ^ a0
  4693: 9e 9c 10                 a5 = a2 >>r 0x10
  4696: c8 2c 09                 a2 = a5 + t0
  4699: d3 9b 0b                 a4 = a4 ^ a2
  4702: 9e b2 3f                 t0 = a4 >>r 0x3f
  4705: 82 1a c0 00              a3 = u64 [sp + 0xc0]
  4709: 97 aa 03                 a3 = a3 << 0x3
  4712: c8 0a 0a                 a3 = a3 + ra
  4715: 82 aa                    a3 = u64 [a3]
  4717: 82 1b 30 01              a4 = u64 [sp + 0x130]
  4721: 97 bb 03                 a4 = a4 << 0x3
  4724: c8 0b 0b                 a4 = a4 + ra
  4727: 82 bb                    a4 = u64 [a4]
  4729: c8 24 04                 t2 = t2 + t0
  4732: d3 64 06                 s1 = t2 ^ s1
  4735: c8 4a 0a                 a3 = a3 + t2
  4738: 7b 1a 68 01              u64 [sp + 0x168] = a3
  4742: c8 7b 0b                 a4 = a4 + a0
  4745: 64 84                    t2 = a1
  4747: d3 58 07                 a0 = a1 ^ s0
  4750: 9e 77 3f                 a0 = a0 >>r 0x3f
  4753: 82 1a 50 01              a3 = u64 [sp + 0x150]
  4757: 97 aa 03                 a3 = a3 << 0x3
  4760: c8 0a 0a                 a3 = a3 + ra
  4763: 82 aa                    a3 = u64 [a3]
  4765: 82 15 d0 00              s0 = u64 [sp + 0xd0]
  4769: 97 55 03                 s0 = s0 << 0x3
  4772: c8 05 05                 s0 = s0 + ra
  4775: 82 55                    s0 = u64 [s0]
  4777: c8 7b 0b                 a4 = a4 + a0
  4780: 82 18 20 01              a1 = u64 [sp + 0x120]
  4784: d3 b8 08                 a1 = a1 ^ a4
  4787: 7b 18 38 01              u64 [sp + 0x138] = a1
  4791: c8 ba 0a                 a3 = a3 + a4
  4794: 7b 1a 28 01              u64 [sp + 0x128] = a3
  4798: 82 13 48 01              t1 = u64 [sp + 0x148]
  4802: c8 53 03                 t1 = t1 + s0
  4805: 82 1a 40 01              a3 = u64 [sp + 0x140]
  4809: 82 18 00 01              a1 = u64 [sp + 0x100]
  4813: d3 a8 0b                 a4 = a1 ^ a3
  4816: 82 15 c8 00              s0 = u64 [sp + 0xc8]
  4820: 97 55 03                 s0 = s0 << 0x3
  4823: c8 05 05                 s0 = s0 + ra
  4826: 82 55                    s0 = u64 [s0]
  4828: 9e bb 3f                 a4 = a4 >>r 0x3f
  4831: c8 b3 03                 t1 = t1 + a4
  4834: d3 c3 0a                 a3 = t1 ^ a5
  4837: c8 53 03                 t1 = t1 + s0
  4840: 82 1c 08 01              a5 = u64 [sp + 0x108]
  4844: 9e c5 20                 s0 = a5 >>r 0x20
  4847: c8 59 09                 a2 = a2 + s0
  4850: 82 1c 10 01              a5 = u64 [sp + 0x110]
  4854: d3 c9 00                 ra = a2 ^ a5
  4857: 9e 00 18                 ra = ra >>r 0x18
  4860: 82 1c 18 01              a5 = u64 [sp + 0x118]
  4864: c8 0c 0c                 a5 = a5 + ra
  4867: 7b 1c 50 01              u64 [sp + 0x150] = a5
  4871: d3 c5 05                 s0 = s0 ^ a5
  4874: 9e 55 10                 s0 = s0 >>r 0x10
  4877: 7b 15 40 01              u64 [sp + 0x140] = s0
  4881: c8 59 09                 a2 = a2 + s0
  4884: 7b 19 60 01              u64 [sp + 0x160] = a2
  4888: d3 09 09                 a2 = a2 ^ ra
  4891: 9e 99 3f                 a2 = a2 >>r 0x3f
  4894: 7b 19 98 00              u64 [sp + 0x98] = a2
  4898: 9e 69 20                 a2 = s1 >>r 0x20
  4901: c8 49 05                 s0 = a2 + t2
  4904: d3 25 06                 s1 = s0 ^ t0
  4907: 9e 66 18                 s1 = s1 >>r 0x18
  4910: 82 1c 68 01              a5 = u64 [sp + 0x168]
  4914: c8 6c 0c                 a5 = a5 + s1
  4917: d3 c9 09                 a2 = a2 ^ a5
  4920: 9e 92 10                 t0 = a2 >>r 0x10
  4923: 7b 12 30 01              u64 [sp + 0x130] = t0
  4927: c8 52 00                 ra = t0 + s0
  4930: 82 14 70                 t2 = u64 [sp + 0x70]
  4933: d3 60 09                 a2 = ra ^ s1
  4936: 9e 99 3f                 a2 = a2 >>r 0x3f
  4939: 7b 19 68 01              u64 [sp + 0x168] = a2
  4943: 82 19 38 01              a2 = u64 [sp + 0x138]
  4947: 9e 99 20                 a2 = a2 >>r 0x20
  4950: c8 98 08                 a1 = a1 + a2
  4953: d3 87 07                 a0 = a0 ^ a1
  4956: 9e 77 18                 a0 = a0 >>r 0x18
  4959: 82 12 28 01              t0 = u64 [sp + 0x128]
  4963: c8 72 02                 t0 = t0 + a0
  4966: d3 92 09                 a2 = t0 ^ a2
  4969: 9e 99 10                 a2 = a2 >>r 0x10
  4972: 7b 19 38 01              u64 [sp + 0x138] = a2
  4976: c8 89 05                 s0 = a2 + a1
  4979: d3 57 07                 a0 = a0 ^ s0
  4982: 9e 77 3f                 a0 = a0 >>r 0x3f
  4985: 7b 17 48 01              u64 [sp + 0x148] = a0
  4989: 9e a7 20                 a0 = a3 >>r 0x20
  4992: 82 18 58 01              a1 = u64 [sp + 0x158]
  4996: c8 78 08                 a1 = a1 + a0
  4999: d3 8b 0b                 a4 = a4 ^ a1
  5002: 9e b9 18                 a2 = a4 >>r 0x18
  5005: c8 93 03                 t1 = t1 + a2
  5008: d3 73 07                 a0 = t1 ^ a0
  5011: 9e 77 10                 a0 = a0 >>r 0x10
  5014: 7b 17 28 01              u64 [sp + 0x128] = a0
  5018: c8 87 07                 a0 = a0 + a1
  5021: 82 18 78                 a1 = u64 [sp + 0x78]
  5024: 7b 17 58 01              u64 [sp + 0x158] = a0
  5028: d3 97 07                 a0 = a0 ^ a2
  5031: 9e 77 3f                 a0 = a0 >>r 0x3f
  5034: 7b 17 a0 00              u64 [sp + 0xa0] = a0
  5038: 82 16 f0 00              s1 = u64 [sp + 0xf0]
  5042: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  5045: 82 1b 70 01              a4 = u64 [sp + 0x170]
  5049: 95 bb 10                 a4 = a4 + 0x10
  5052: 82 19 68                 a2 = u64 [sp + 0x68]
  5055: 33 0a 10                 a3 = 0x10
  5058: 52 06 eb fb              jump @203 if s1 != 0
      :                          @220
  5062: 82 17 58                 a0 = u64 [sp + 0x58]
  5065: 82 1a 50 01              a3 = u64 [sp + 0x150]
  5069: d3 a7 07                 a0 = a0 ^ a3
  5072: d3 57 07                 a0 = a0 ^ s0
  5075: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  5079: d3 9c 07                 a0 = a5 ^ a2
  5082: 82 19 58 01              a2 = u64 [sp + 0x158]
  5086: d3 97 07                 a0 = a0 ^ a2
  5089: 7b 17 b8 01              u64 [sp + 0x1b8] = a0
  5093: 82 17 60 01              a0 = u64 [sp + 0x160]
  5097: d3 47 07                 a0 = a0 ^ t2
  5100: d3 27 07                 a0 = a0 ^ t0
  5103: 7b 17 c0 01              u64 [sp + 0x1c0] = a0
  5107: d3 80 07                 a0 = ra ^ a1
  5110: d3 37 07                 a0 = a0 ^ t1
  5113: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
  5117: 7c 17 cf 01              a0 = u8 [sp + 0x1cf]
  5121: 7b 17 70 01              u64 [sp + 0x170] = a0
  5125: 7c 17 ce 01              a0 = u8 [sp + 0x1ce]
  5129: 7b 17 68 01              u64 [sp + 0x168] = a0
  5133: 7c 17 cd 01              a0 = u8 [sp + 0x1cd]
  5137: 7b 17 60 01              u64 [sp + 0x160] = a0
  5141: 7c 17 cc 01              a0 = u8 [sp + 0x1cc]
  5145: 7b 17 58 01              u64 [sp + 0x158] = a0
  5149: 7c 17 cb 01              a0 = u8 [sp + 0x1cb]
  5153: 7b 17 50 01              u64 [sp + 0x150] = a0
  5157: 7c 17 ca 01              a0 = u8 [sp + 0x1ca]
  5161: 7b 17 48 01              u64 [sp + 0x148] = a0
  5165: 7c 17 c9 01              a0 = u8 [sp + 0x1c9]
  5169: 7b 17 40 01              u64 [sp + 0x140] = a0
  5173: 7c 17 c8 01              a0 = u8 [sp + 0x1c8]
  5177: 7b 17 38 01              u64 [sp + 0x138] = a0
  5181: 7c 17 c7 01              a0 = u8 [sp + 0x1c7]
  5185: 7b 17 30 01              u64 [sp + 0x130] = a0
  5189: 7c 17 c6 01              a0 = u8 [sp + 0x1c6]
  5193: 7b 17 28 01              u64 [sp + 0x128] = a0
  5197: 7c 17 c5 01              a0 = u8 [sp + 0x1c5]
  5201: 7b 17 20 01              u64 [sp + 0x120] = a0
  5205: 7c 17 c4 01              a0 = u8 [sp + 0x1c4]
  5209: 7b 17 18 01              u64 [sp + 0x118] = a0
  5213: 7c 17 c3 01              a0 = u8 [sp + 0x1c3]
  5217: 7b 17 10 01              u64 [sp + 0x110] = a0
  5221: 7c 17 c2 01              a0 = u8 [sp + 0x1c2]
  5225: 7b 17 08 01              u64 [sp + 0x108] = a0
  5229: 7c 17 c1 01              a0 = u8 [sp + 0x1c1]
  5233: 7b 17 00 01              u64 [sp + 0x100] = a0
  5237: 7c 17 c0 01              a0 = u8 [sp + 0x1c0]
  5241: 7b 17 f8 00              u64 [sp + 0xf8] = a0
  5245: 7c 17 bf 01              a0 = u8 [sp + 0x1bf]
  5249: 7b 17 f0 00              u64 [sp + 0xf0] = a0
  5253: 7c 17 be 01              a0 = u8 [sp + 0x1be]
  5257: 7b 17 e8 00              u64 [sp + 0xe8] = a0
  5261: 7c 17 bd 01              a0 = u8 [sp + 0x1bd]
  5265: 7b 17 e0 00              u64 [sp + 0xe0] = a0
  5269: 7c 17 bc 01              a0 = u8 [sp + 0x1bc]
  5273: 7b 17 d8 00              u64 [sp + 0xd8] = a0
  5277: 7c 17 bb 01              a0 = u8 [sp + 0x1bb]
  5281: 7b 17 d0 00              u64 [sp + 0xd0] = a0
  5285: 7c 18 ba 01              a1 = u8 [sp + 0x1ba]
  5289: 7c 19 b9 01              a2 = u8 [sp + 0x1b9]
  5293: 7c 1a b8 01              a3 = u8 [sp + 0x1b8]
  5297: 7c 12 b7 01              t0 = u8 [sp + 0x1b7]
  5301: 7c 13 b6 01              t1 = u8 [sp + 0x1b6]
  5305: 7c 14 b5 01              t2 = u8 [sp + 0x1b5]
  5309: 7c 10 b4 01              ra = u8 [sp + 0x1b4]
  5313: 7c 1b b3 01              a4 = u8 [sp + 0x1b3]
  5317: 7c 1c b2 01              a5 = u8 [sp + 0x1b2]
  5321: 7c 16 b1 01              s1 = u8 [sp + 0x1b1]
  5325: 7c 15 b0 01              s0 = u8 [sp + 0x1b0]
  5329: 01                       fallthrough
      :                          @221
  5330: 3b 05 80 10 03           u8 [0x31080] = s0
  5335: 3b 06 81 10 03           u8 [0x31081] = s1
  5340: 3b 0c 82 10 03           u8 [0x31082] = a5
  5345: 3b 0b 83 10 03           u8 [0x31083] = a4
  5350: 3b 00 84 10 03           u8 [0x31084] = ra
  5355: 3b 04 85 10 03           u8 [0x31085] = t2
  5360: 3b 03 86 10 03           u8 [0x31086] = t1
  5365: 3b 02 87 10 03           u8 [0x31087] = t0
  5370: 3b 0a 88 10 03           u8 [0x31088] = a3
  5375: 3b 09 89 10 03           u8 [0x31089] = a2
  5380: 3b 08 8a 10 03           u8 [0x3108a] = a1
  5385: 82 18 d0 00              a1 = u64 [sp + 0xd0]
  5389: 3b 08 8b 10 03           u8 [0x3108b] = a1
  5394: 82 18 d8 00              a1 = u64 [sp + 0xd8]
  5398: 3b 08 8c 10 03           u8 [0x3108c] = a1
  5403: 82 18 e0 00              a1 = u64 [sp + 0xe0]
  5407: 3b 08 8d 10 03           u8 [0x3108d] = a1
  5412: 82 18 e8 00              a1 = u64 [sp + 0xe8]
  5416: 3b 08 8e 10 03           u8 [0x3108e] = a1
  5421: 82 18 f0 00              a1 = u64 [sp + 0xf0]
  5425: 3b 08 8f 10 03           u8 [0x3108f] = a1
  5430: 82 18 f8 00              a1 = u64 [sp + 0xf8]
  5434: 3b 08 90 10 03           u8 [0x31090] = a1
  5439: 82 18 00 01              a1 = u64 [sp + 0x100]
  5443: 3b 08 91 10 03           u8 [0x31091] = a1
  5448: 82 18 08 01              a1 = u64 [sp + 0x108]
  5452: 3b 08 92 10 03           u8 [0x31092] = a1
  5457: 82 18 10 01              a1 = u64 [sp + 0x110]
  5461: 3b 08 93 10 03           u8 [0x31093] = a1
  5466: 82 18 18 01              a1 = u64 [sp + 0x118]
  5470: 3b 08 94 10 03           u8 [0x31094] = a1
  5475: 82 18 20 01              a1 = u64 [sp + 0x120]
  5479: 3b 08 95 10 03           u8 [0x31095] = a1
  5484: 82 18 28 01              a1 = u64 [sp + 0x128]
  5488: 3b 08 96 10 03           u8 [0x31096] = a1
  5493: 82 18 30 01              a1 = u64 [sp + 0x130]
  5497: 3b 08 97 10 03           u8 [0x31097] = a1
  5502: 82 18 38 01              a1 = u64 [sp + 0x138]
  5506: 3b 08 98 10 03           u8 [0x31098] = a1
  5511: 82 18 40 01              a1 = u64 [sp + 0x140]
  5515: 3b 08 99 10 03           u8 [0x31099] = a1
  5520: 82 18 48 01              a1 = u64 [sp + 0x148]
  5524: 3b 08 9a 10 03           u8 [0x3109a] = a1
  5529: 82 18 50 01              a1 = u64 [sp + 0x150]
  5533: 3b 08 9b 10 03           u8 [0x3109b] = a1
  5538: 82 18 58 01              a1 = u64 [sp + 0x158]
  5542: 3b 08 9c 10 03           u8 [0x3109c] = a1
  5547: 82 18 60 01              a1 = u64 [sp + 0x160]
  5551: 3b 08 9d 10 03           u8 [0x3109d] = a1
  5556: 81 18 9c 01              a1 = i32 [sp + 0x19c]
  5560: 82 19 68 01              a2 = u64 [sp + 0x168]
  5564: 3b 09 9e 10 03           u8 [0x3109e] = a2
  5569: 82 19 70 01              a2 = u64 [sp + 0x170]
  5573: 3b 09 9f 10 03           u8 [0x3109f] = a2
  5578: 33 07 80 10 03           a0 = 0x31080
  5583: 3d 08 a0 10 03           u32 [0x310a0] = a1
  5588: 7b 17 68 01              u64 [sp + 0x168] = a0
  5592: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  5596: 33 07 06                 a0 = 0x6
  5599: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  5603: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  5608: 49 21 c0 01 02           u64 [sp + 448] = 0x2
  5613: 49 21 d0 01              u64 [sp + 464] = 0
  5617: 14 08 20 00 00 00 10 00 00 00 a1 = 0x1000000020
  5627: 7b 18 d8 01              u64 [sp + 0x1d8] = a1
  5631: 46 21 e0 01 03           u8 [sp + 480] = 0x3
  5636: 33 08 28 00 01           a1 = 0x10028
  5641: 7b 18 10 03              u64 [sp + 0x310] = a1
  5645: 49 21 18 03 01           u64 [sp + 792] = 0x1
  5650: 95 18 b0 01              a1 = sp + 0x1b0
  5654: 7b 18 30 03              u64 [sp + 0x330] = a1
  5658: 49 21 38 03 01           u64 [sp + 824] = 0x1
  5663: 95 18 a0 01              a1 = sp + 0x1a0
  5667: 7b 18 20 03              u64 [sp + 0x320] = a1
  5671: 49 21 28 03 01           u64 [sp + 808] = 0x1
  5676: 49 21 70 01 ff ff fe     u64 [sp + 368] = 0xfffffffffffeffff
  5683: 95 17 90 02              a0 = sp + 0x290
  5687: 95 18 10 03              a1 = sp + 0x310
  5691: 50 10 72 e4 09           ra = 114, jump @420
      :                          @222 [@dyn 57]
  5696: 82 15 98 02              s0 = u64 [sp + 0x298]
  5700: 82 1b a0 02              a4 = u64 [sp + 0x2a0]
  5704: 82 16 90 02              s1 = u64 [sp + 0x290]
  5708: 33 07 02                 a0 = 0x2
  5711: 33 08                    a1 = 0
  5713: 33 09                    a2 = 0
  5715: 64 5a                    a3 = s0
  5717: 33 00 74                 ra = 0x74
  5720: 0a 64                    ecalli 100 // 'log'
  5722: 01                       fallthrough
      :                          @223 [@dyn 58]
  5723: 82 1c 70 01              a5 = u64 [sp + 0x170]
  5727: 33 02 00 00 ff           t0 = 0xffffffffffff0000
  5732: c8 c6 07                 a0 = s1 + a5
  5735: ac 27 24                 jump @229 if a0 <u t0
      :                          @224
  5738: 33 07 b0 1a 03           a0 = 0x31ab0
  5743: 95 77 00 00 01           a0 = a0 + 0x10000
  5748: 01                       fallthrough
      :                          @225
  5749: 82 78                    a1 = u64 [a0]
  5751: c9 87 09                 a2 = a0 - a1
  5754: ab 59 11                 jump @229 if a2 != s0
      :                          @226
  5757: c9 68 09                 a2 = a1 - s1
  5760: 01                       fallthrough
      :                          @227
  5761: 82 7a                    a3 = u64 [a0]
  5763: ab 8a f2                 jump @225 if a3 != a1
      :                          @228
  5766: 7b 79                    u64 [a0] = a2
  5768: 33 0b                    a4 = 0
  5770: 01                       fallthrough
      :                          @229
  5771: 82 16                    s1 = u64 [sp]
  5773: c8 c6 07                 a0 = s1 + a5
  5776: 33 08 24                 a1 = 0x24
  5779: ae 27 0b                 jump @232 if a0 >=u t0
      :                          @230
  5782: 82 17 68 01              a0 = u64 [sp + 0x168]
  5786: 28 d1 ef                 jump @121
      :                          @231
  5789: 00                       trap
      :                          @232
  5790: 33 07 b0 1a 03           a0 = 0x31ab0
  5795: 95 75 00 00 01           s0 = a0 + 0x10000
  5800: 33 07 80 10 03           a0 = 0x31080
  5805: 01                       fallthrough
      :                          @233
  5806: 82 59                    a2 = u64 [s0]
  5808: c9 95 0a                 a3 = s0 - a2
  5811: 82 1b 60                 a4 = u64 [sp + 0x60]
  5814: ab ba b5 ef              jump @121 if a3 != a4
      :                          @234
  5818: c9 69 0a                 a3 = a2 - s1
  5821: 01                       fallthrough
      :                          @235
  5822: 82 5b                    a4 = u64 [s0]
  5824: ab 9b ee                 jump @233 if a4 != a2
      :                          @236
  5827: 7b 5a                    u64 [s0] = a3
  5829: 33 0c                    a5 = 0
  5831: 01                       fallthrough
      :                          @237
  5832: ab 9b e6                 jump @233 if a4 != a2
      :                          @238
  5835: 28 a0 ef                 jump @121
      :                          @239
  5838: 82 15 f0 01              s0 = u64 [sp + 0x1f0]
  5842: c8 35 05                 s0 = s0 + t1
  5845: 64 36                    s1 = t1
  5847: ae 35 0f                 jump @241 if s0 >=u t1
      :                          @240
  5850: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
  5854: 95 77 01                 a0 = a0 + 0x1
  5857: 7b 17 f8 01              u64 [sp + 0x1f8] = a0
  5861: 01                       fallthrough
      :                          @241
  5862: 95 17 90 02              a0 = sp + 0x290
  5866: 33 09 80 00              a2 = 0x80
  5870: 33 08                    a1 = 0
  5872: 50 10 76 5b 0c           ra = 118, jump @488
      :                          @242 [@dyn 59]
  5877: 64 69                    a2 = s1
  5879: 56 26 80 00 ae 00        jump @263 if s1 >u 128
      :                          @243
  5885: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
  5889: 82 18 b0 01              a1 = u64 [sp + 0x1b0]
  5893: 7b 18 58                 u64 [sp + 0x58] = a1
  5896: 82 18 b8 01              a1 = u64 [sp + 0x1b8]
  5900: 7b 18 68                 u64 [sp + 0x68] = a1
  5903: 82 18 c0 01              a1 = u64 [sp + 0x1c0]
  5907: 7b 18 70                 u64 [sp + 0x70] = a1
  5910: 82 18 c8 01              a1 = u64 [sp + 0x1c8]
  5914: 7b 18 78                 u64 [sp + 0x78] = a1
  5917: 82 18 d0 01              a1 = u64 [sp + 0x1d0]
  5921: 82 1b d8 01              a4 = u64 [sp + 0x1d8]
  5925: 82 1a e0 01              a3 = u64 [sp + 0x1e0]
  5929: 7b 1a 68 01              u64 [sp + 0x168] = a3
  5933: 82 1a e8 01              a3 = u64 [sp + 0x1e8]
  5937: 7b 1a 48 01              u64 [sp + 0x148] = a3
  5941: 82 1a a0 00              a3 = u64 [sp + 0xa0]
  5945: d3 5a 0a                 a3 = a3 ^ s0
  5948: 7b 1a 30 01              u64 [sp + 0x130] = a3
  5952: 82 1a 98 00              a3 = u64 [sp + 0x98]
  5956: d3 a7 07                 a0 = a0 ^ a3
  5959: 7b 17 38 01              u64 [sp + 0x138] = a0
  5963: 7b 1b 98 00              u64 [sp + 0x98] = a4
  5967: 7b 18 a0 00              u64 [sp + 0xa0] = a1
  5971: 28 e3 f7                 jump @200
      :                          @244
  5974: 00                       trap
      :                          @245
  5975: 00                       trap
      :                          @246
  5976: 00                       trap
      :                          @247
  5977: 49 21 b0 01              u64 [sp + 432] = 0
  5981: 49 21 b8 01 01           u64 [sp + 440] = 0x1
  5986: 49 21 c0 01              u64 [sp + 448] = 0
  5990: 01                       fallthrough
      :                          @248
  5991: 95 17 b0 01              a0 = sp + 0x1b0
  5995: 33 09 20                 a2 = 0x20
  5998: 33 08                    a1 = 0
  6000: 50 10 78 82 ed           ra = 120, jump @87
      :                          @249 [@dyn 60]
  6005: 82 15 c0 01              s0 = u64 [sp + 0x1c0]
  6009: 82 19 b8 01              a2 = u64 [sp + 0x1b8]
  6013: 28 40 f0                 jump @150
      :                          @250
  6016: 95 17 b0 01              a0 = sp + 0x1b0
  6020: 64 95                    s0 = a2
  6022: 64 69                    a2 = s1
  6024: 50 10 7a 6a ed           ra = 122, jump @87
      :                          @251 [@dyn 61]
  6029: 64 59                    a2 = s0
  6031: 82 18 c0 01              a1 = u64 [sp + 0x1c0]
  6035: 82 15 b8 01              s0 = u64 [sp + 0x1b8]
  6039: 28 54 f0                 jump @153
      :                          @252
  6042: 00                       trap
      :                          @253
  6043: 00                       trap
      :                          @254
  6044: 00                       trap
      :                          @255
  6045: 00                       trap
      :                          @256
  6046: 00                       trap
      :                          @257
  6047: 00                       trap
      :                          @258
  6048: 00                       trap
      :                          @259
  6049: 00                       trap
      :                          @260
  6050: 00                       trap
      :                          @261
  6051: 00                       trap
      :                          @262
  6052: 00                       trap
      :                          @263
  6053: 00                       trap
      :                          @264
  6054: 00                       trap
      :                          @265
  6055: 00                       trap
      :                          @266
  6056: 00                       trap
      :                          @267 [export #1: 'accumulate']
  6057: 95 11 70 ff              sp = sp + 0xffffffffffffff70
  6061: 7b 10 88 00              u64 [sp + 0x88] = ra
  6065: 7b 15 80 00              u64 [sp + 0x80] = s0
  6069: 7b 16 78                 u64 [sp + 0x78] = s1
  6072: 64 7a                    a3 = a0
  6074: 33 07 00 00 01           a0 = 0x10000
  6079: 51 08 a8 00              jump @288 if a1 == 0
      :                          @268
  6083: 64 86                    s1 = a1
  6085: 7d a8                    a1 = i8 [a3]
  6087: 33 05 01                 s0 = 0x1
  6090: 59 08 37                 jump @275 if a1 >=s 0
      :                          @269
  6093: 84 89 ff 00              a2 = a1 & 0xff
  6097: 33 05 02                 s0 = 0x2
  6100: 53 29 c0 00 2d           jump @275 if a2 <u 192
      :                          @270
  6105: 33 05 03                 s0 = 0x3
  6108: 53 29 e0 00 25           jump @275 if a2 <u 224
      :                          @271
  6113: 33 05 04                 s0 = 0x4
  6116: 53 29 f0 00 1d           jump @275 if a2 <u 240
      :                          @272
  6121: 33 05 05                 s0 = 0x5
  6124: 53 29 f8 00 15           jump @275 if a2 <u 248
      :                          @273
  6129: 33 05 06                 s0 = 0x6
  6132: 53 29 fc 00 0d           jump @275 if a2 <u 252
      :                          @274
  6137: 88 98 fe 00              a1 = a2 <u 0xfe
  6141: 9a 85 08                 s0 = 0x8 - a1
  6144: 01                       fallthrough
      :                          @275
  6145: ae 56 07                 jump @277 if s1 >=u s0
      :                          @276
  6148: 33 08                    a1 = 0
  6150: 28 61                    jump @288
      :                          @277
  6152: 64 a7                    a0 = a3
  6154: 64 58                    a1 = s0
  6156: 7b 1a 08                 u64 [sp + 0x8] = a3
  6159: 50 10 7c e5 14           ra = 124, jump @675
      :                          @278 [@dyn 62]
  6164: aa 56 4b                 jump @287 if s1 == s0
      :                          @279
  6167: 82 17 08                 a0 = u64 [sp + 0x8]
  6170: c8 57 07                 a0 = a0 + s0
  6173: 7d 78                    a1 = i8 [a0]
  6175: c9 56 06                 s1 = s1 - s0
  6178: 33 05 01                 s0 = 0x1
  6181: 59 08 37                 jump @286 if a1 >=s 0
      :                          @280
  6184: 84 89 ff 00              a2 = a1 & 0xff
  6188: 33 05 02                 s0 = 0x2
  6191: 53 29 c0 00 2d           jump @286 if a2 <u 192
      :                          @281
  6196: 33 05 03                 s0 = 0x3
  6199: 53 29 e0 00 25           jump @286 if a2 <u 224
      :                          @282
  6204: 33 05 04                 s0 = 0x4
  6207: 53 29 f0 00 1d           jump @286 if a2 <u 240
      :                          @283
  6212: 33 05 05                 s0 = 0x5
  6215: 53 29 f8 00 15           jump @286 if a2 <u 248
      :                          @284
  6220: 33 05 06                 s0 = 0x6
  6223: 53 29 fc 00 0d           jump @286 if a2 <u 252
      :                          @285
  6228: 88 98 fe 00              a1 = a2 <u 0xfe
  6232: 9a 85 08                 s0 = 0x8 - a1
  6235: 01                       fallthrough
      :                          @286
  6236: ae 56 1c                 jump @289 if s1 >=u s0
      :                          @287
  6239: 33 08                    a1 = 0
  6241: 33 07 00 00 01           a0 = 0x10000
  6246: 01                       fallthrough
      :                          @288
  6247: 82 10 88 00              ra = u64 [sp + 0x88]
  6251: 82 15 80 00              s0 = u64 [sp + 0x80]
  6255: 82 16 78                 s1 = u64 [sp + 0x78]
  6258: 95 11 90 00              sp = sp + 0x90
  6262: 32 00                    ret
      :                          @289
  6264: 64 58                    a1 = s0
  6266: 7b 16 08                 u64 [sp + 0x8] = s1
  6269: 64 76                    s1 = a0
  6271: 50 10 7e 75 14           ra = 126, jump @675
      :                          @290 [@dyn 63]
  6276: c8 65 07                 a0 = s0 + s1
  6279: 82 16 08                 s1 = u64 [sp + 0x8]
  6282: ab 56 0c                 jump @292 if s1 != s0
      :                          @291
  6285: 33 08                    a1 = 0
  6287: 33 00 80 00              ra = 0x80
  6291: 28 61 14                 jump @675
      :                          @292
  6294: 7d 79                    a2 = i8 [a0]
  6296: c9 56 06                 s1 = s1 - s0
  6299: 33 08 01                 a1 = 0x1
  6302: 59 09 44                 jump @299 if a2 >=s 0
      :                          @293
  6305: 84 99 ff 00              a2 = a2 & 0xff
  6309: 33 0a c0 00              a3 = 0xc0
  6313: 33 08 02                 a1 = 0x2
  6316: ac a9 36                 jump @299 if a2 <u a3
      :                          @294
  6319: 33 0a e0 00              a3 = 0xe0
  6323: 33 08 03                 a1 = 0x3
  6326: ac a9 2c                 jump @299 if a2 <u a3
      :                          @295
  6329: 33 0a f0 00              a3 = 0xf0
  6333: 33 08 04                 a1 = 0x4
  6336: ac a9 22                 jump @299 if a2 <u a3
      :                          @296
  6339: 33 0a f8 00              a3 = 0xf8
  6343: 33 08 05                 a1 = 0x5
  6346: ac a9 18                 jump @299 if a2 <u a3
      :                          @297
  6349: 33 0a fc 00              a3 = 0xfc
  6353: 33 08 06                 a1 = 0x6
  6356: ac a9 0e                 jump @299 if a2 <u a3
      :                          @298
  6359: 88 98 fe 00              a1 = a2 <u 0xfe
  6363: 33 09 08                 a2 = 0x8
  6366: c9 89 08                 a1 = a2 - a1
  6369: 01                       fallthrough
      :                          @299
  6370: ac 86 7d ff              jump @287 if s1 <u a1
      :                          @300
  6374: 50 20 80 00 0e 14        ra = 128, jump @675
      :                          @301 [@dyn 64]
  6380: 33 07 61 00 03           a0 = 0x30061
  6385: 33 09 08 10              a2 = 0x1008
  6389: 33 0a 0f                 a3 = 0xf
  6392: 33 08                    a1 = 0
  6394: 33 0b                    a4 = 0
  6396: 33 0c                    a5 = 0
  6398: 0a 01                    ecalli 1 // 'fetch'
  6400: 01                       fallthrough
      :                          @302
  6401: 7b 17 10                 u64 [sp + 0x10] = a0
  6404: 55 17 24 84 00           jump @313 if a0 >=u 36
      :                          @303
  6409: 95 17 10                 a0 = sp + 0x10
  6412: 7b 17 68                 u64 [sp + 0x68] = a0
  6415: 33 07 a8 00              a0 = 0xa8
  6419: 7b 17 70                 u64 [sp + 0x70] = a0
  6422: 33 07 b0 00 01           a0 = 0x100b0
  6427: 7b 17 38                 u64 [sp + 0x38] = a0
  6430: 49 11 40 02              u64 [sp + 64] = 0x2
  6434: 49 11 58                 u64 [sp + 88] = 0
  6437: 95 17 68                 a0 = sp + 0x68
  6440: 7b 17 48                 u64 [sp + 0x48] = a0
  6443: 49 11 50 01              u64 [sp + 80] = 0x1
  6447: 95 17 20                 a0 = sp + 0x20
  6450: 95 18 38                 a1 = sp + 0x38
  6453: 50 20 82 00 ea 06        ra = 130, jump @420
      :                          @304 [@dyn 65]
  6459: 82 15 28                 s0 = u64 [sp + 0x28]
  6462: 82 1b 30                 a4 = u64 [sp + 0x30]
  6465: 82 16 20                 s1 = u64 [sp + 0x20]
  6468: 33 07 02                 a0 = 0x2
  6471: 33 08                    a1 = 0
  6473: 33 09                    a2 = 0
  6475: 64 5a                    a3 = s0
  6477: 33 00 84 00              ra = 0x84
  6481: 0a 64                    ecalli 100 // 'log'
  6483: 01                       fallthrough
      :                          @305 [@dyn 66]
  6484: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
  6489: 53 38 00 00 ff 06 ff     jump @287 if a1 <u 4294901760
      :                          @306
  6496: 33 07 b0 1a 03           a0 = 0x31ab0
  6501: 95 77 00 00 01           a0 = a0 + 0x10000
  6506: 01                       fallthrough
      :                          @307
  6507: 82 78                    a1 = u64 [a0]
  6509: c9 87 09                 a2 = a0 - a1
  6512: ab 59 ef fe              jump @287 if a2 != s0
      :                          @308
  6516: c9 68 09                 a2 = a1 - s1
  6519: 01                       fallthrough
      :                          @309
  6520: 82 7a                    a3 = u64 [a0]
  6522: ab 8a f1                 jump @307 if a3 != a1
      :                          @310
  6525: 7b 79                    u64 [a0] = a2
  6527: 33 0b                    a4 = 0
  6529: 01                       fallthrough
      :                          @311
  6530: ab 8a e9                 jump @307 if a3 != a1
      :                          @312
  6533: 28 da fe                 jump @287
      :                          @313
  6536: 95 79 dc                 a2 = a0 + 0xffffffffffffffdc
  6539: 98 98 03                 a1 = a2 >> 0x3
  6542: 55 28 01 02 47 04        jump @362 if a1 >=u 513
      :                          @314
  6548: 33 0a 61 00 03           a3 = 0x30061
  6553: c8 a9 09                 a2 = a2 + a3
  6556: 7c 99                    a2 = u8 [a2]
  6558: 3b 09 80 10 03           u8 [0x31080] = a2
  6563: 95 7c dd                 a5 = a0 + 0xffffffffffffffdd
  6566: 98 c6 03                 s1 = a5 >> 0x3
  6569: 56 26 00 02 2c 04        jump @362 if s1 >u 512
      :                          @315
  6575: c8 ca 0a                 a3 = a3 + a5
  6578: 7c aa                    a3 = u8 [a3]
  6580: 95 7c de                 a5 = a0 + 0xffffffffffffffde
  6583: 98 c6 03                 s1 = a5 >> 0x3
  6586: 3b 0a 81 10 03           u8 [0x31081] = a3
  6591: 56 26 00 02 16 04        jump @362 if s1 >u 512
      :                          @316
  6597: 33 0a 61 00 03           a3 = 0x30061
  6602: c8 ac 0c                 a5 = a5 + a3
  6605: 7c c9                    a2 = u8 [a5]
  6607: 3b 09 82 10 03           u8 [0x31082] = a2
  6612: 95 7c df                 a5 = a0 + 0xffffffffffffffdf
  6615: 98 c6 03                 s1 = a5 >> 0x3
  6618: 56 26 00 02 fb 03        jump @362 if s1 >u 512
      :                          @317
  6624: c8 ca 0a                 a3 = a3 + a5
  6627: 7c aa                    a3 = u8 [a3]
  6629: 95 7c e0                 a5 = a0 + 0xffffffffffffffe0
  6632: 98 c6 03                 s1 = a5 >> 0x3
  6635: 3b 0a 83 10 03           u8 [0x31083] = a3
  6640: 56 26 00 02 e5 03        jump @362 if s1 >u 512
      :                          @318
  6646: 33 0a 61 00 03           a3 = 0x30061
  6651: c8 ac 0c                 a5 = a5 + a3
  6654: 7c c9                    a2 = u8 [a5]
  6656: 3b 09 84 10 03           u8 [0x31084] = a2
  6661: 95 7c e1                 a5 = a0 + 0xffffffffffffffe1
  6664: 98 c6 03                 s1 = a5 >> 0x3
  6667: 56 26 00 02 ca 03        jump @362 if s1 >u 512
      :                          @319
  6673: c8 ca 0a                 a3 = a3 + a5
  6676: 7c aa                    a3 = u8 [a3]
  6678: 95 7c e2                 a5 = a0 + 0xffffffffffffffe2
  6681: 98 c6 03                 s1 = a5 >> 0x3
  6684: 3b 0a 85 10 03           u8 [0x31085] = a3
  6689: 56 26 00 02 b4 03        jump @362 if s1 >u 512
      :                          @320
  6695: 33 0a 61 00 03           a3 = 0x30061
  6700: c8 ac 0c                 a5 = a5 + a3
  6703: 7c c9                    a2 = u8 [a5]
  6705: 3b 09 86 10 03           u8 [0x31086] = a2
  6710: 95 7c e3                 a5 = a0 + 0xffffffffffffffe3
  6713: 98 c6 03                 s1 = a5 >> 0x3
  6716: 56 26 00 02 99 03        jump @362 if s1 >u 512
      :                          @321
  6722: c8 ca 0a                 a3 = a3 + a5
  6725: 7c aa                    a3 = u8 [a3]
  6727: 95 7c e4                 a5 = a0 + 0xffffffffffffffe4
  6730: 98 c6 03                 s1 = a5 >> 0x3
  6733: 3b 0a 87 10 03           u8 [0x31087] = a3
  6738: 56 26 00 02 83 03        jump @362 if s1 >u 512
      :                          @322
  6744: 33 0a 61 00 03           a3 = 0x30061
  6749: c8 ac 0c                 a5 = a5 + a3
  6752: 7c c9                    a2 = u8 [a5]
  6754: 3b 09 88 10 03           u8 [0x31088] = a2
  6759: 95 7c e5                 a5 = a0 + 0xffffffffffffffe5
  6762: 98 c6 03                 s1 = a5 >> 0x3
  6765: 56 26 00 02 68 03        jump @362 if s1 >u 512
      :                          @323
  6771: c8 ca 0a                 a3 = a3 + a5
  6774: 7c aa                    a3 = u8 [a3]
  6776: 95 7c e6                 a5 = a0 + 0xffffffffffffffe6
  6779: 98 c6 03                 s1 = a5 >> 0x3
  6782: 3b 0a 89 10 03           u8 [0x31089] = a3
  6787: 56 26 00 02 52 03        jump @362 if s1 >u 512
      :                          @324
  6793: 33 0a 61 00 03           a3 = 0x30061
  6798: c8 ac 0c                 a5 = a5 + a3
  6801: 7c c9                    a2 = u8 [a5]
  6803: 3b 09 8a 10 03           u8 [0x3108a] = a2
  6808: 95 7c e7                 a5 = a0 + 0xffffffffffffffe7
  6811: 98 c6 03                 s1 = a5 >> 0x3
  6814: 56 26 00 02 37 03        jump @362 if s1 >u 512
      :                          @325
  6820: c8 ca 0a                 a3 = a3 + a5
  6823: 7c aa                    a3 = u8 [a3]
  6825: 95 7c e8                 a5 = a0 + 0xffffffffffffffe8
  6828: 98 c6 03                 s1 = a5 >> 0x3
  6831: 3b 0a 8b 10 03           u8 [0x3108b] = a3
  6836: 56 26 00 02 21 03        jump @362 if s1 >u 512
      :                          @326
  6842: 33 0a 61 00 03           a3 = 0x30061
  6847: c8 ac 0c                 a5 = a5 + a3
  6850: 7c c9                    a2 = u8 [a5]
  6852: 3b 09 8c 10 03           u8 [0x3108c] = a2
  6857: 95 7c e9                 a5 = a0 + 0xffffffffffffffe9
  6860: 98 c6 03                 s1 = a5 >> 0x3
  6863: 56 26 00 02 06 03        jump @362 if s1 >u 512
      :                          @327
  6869: c8 ca 0a                 a3 = a3 + a5
  6872: 7c aa                    a3 = u8 [a3]
  6874: 95 7c ea                 a5 = a0 + 0xffffffffffffffea
  6877: 98 c6 03                 s1 = a5 >> 0x3
  6880: 3b 0a 8d 10 03           u8 [0x3108d] = a3
  6885: 56 26 00 02 f0 02        jump @362 if s1 >u 512
      :                          @328
  6891: 33 0a 61 00 03           a3 = 0x30061
  6896: c8 ac 0c                 a5 = a5 + a3
  6899: 7c c9                    a2 = u8 [a5]
  6901: 3b 09 8e 10 03           u8 [0x3108e] = a2
  6906: 95 7c eb                 a5 = a0 + 0xffffffffffffffeb
  6909: 98 c6 03                 s1 = a5 >> 0x3
  6912: 56 26 00 02 d5 02        jump @362 if s1 >u 512
      :                          @329
  6918: c8 ca 0a                 a3 = a3 + a5
  6921: 7c aa                    a3 = u8 [a3]
  6923: 95 7c ec                 a5 = a0 + 0xffffffffffffffec
  6926: 98 c6 03                 s1 = a5 >> 0x3
  6929: 3b 0a 8f 10 03           u8 [0x3108f] = a3
  6934: 56 26 00 02 bf 02        jump @362 if s1 >u 512
      :                          @330
  6940: 33 0a 61 00 03           a3 = 0x30061
  6945: c8 ac 0c                 a5 = a5 + a3
  6948: 7c c9                    a2 = u8 [a5]
  6950: 3b 09 90 10 03           u8 [0x31090] = a2
  6955: 95 7c ed                 a5 = a0 + 0xffffffffffffffed
  6958: 98 c6 03                 s1 = a5 >> 0x3
  6961: 56 26 00 02 a4 02        jump @362 if s1 >u 512
      :                          @331
  6967: c8 ca 0a                 a3 = a3 + a5
  6970: 7c aa                    a3 = u8 [a3]
  6972: 95 7c ee                 a5 = a0 + 0xffffffffffffffee
  6975: 98 c6 03                 s1 = a5 >> 0x3
  6978: 3b 0a 91 10 03           u8 [0x31091] = a3
  6983: 56 26 00 02 8e 02        jump @362 if s1 >u 512
      :                          @332
  6989: 33 0a 61 00 03           a3 = 0x30061
  6994: c8 ac 0c                 a5 = a5 + a3
  6997: 7c c9                    a2 = u8 [a5]
  6999: 3b 09 92 10 03           u8 [0x31092] = a2
  7004: 95 7c ef                 a5 = a0 + 0xffffffffffffffef
  7007: 98 c6 03                 s1 = a5 >> 0x3
  7010: 56 26 00 02 73 02        jump @362 if s1 >u 512
      :                          @333
  7016: c8 ca 0a                 a3 = a3 + a5
  7019: 7c aa                    a3 = u8 [a3]
  7021: 95 7c f0                 a5 = a0 + 0xfffffffffffffff0
  7024: 98 c6 03                 s1 = a5 >> 0x3
  7027: 3b 0a 93 10 03           u8 [0x31093] = a3
  7032: 56 26 00 02 5d 02        jump @362 if s1 >u 512
      :                          @334
  7038: 33 0a 61 00 03           a3 = 0x30061
  7043: c8 ac 0c                 a5 = a5 + a3
  7046: 7c c9                    a2 = u8 [a5]
  7048: 3b 09 94 10 03           u8 [0x31094] = a2
  7053: 95 7c f1                 a5 = a0 + 0xfffffffffffffff1
  7056: 98 c6 03                 s1 = a5 >> 0x3
  7059: 56 26 00 02 42 02        jump @362 if s1 >u 512
      :                          @335
  7065: c8 ca 0a                 a3 = a3 + a5
  7068: 7c aa                    a3 = u8 [a3]
  7070: 95 7c f2                 a5 = a0 + 0xfffffffffffffff2
  7073: 98 c6 03                 s1 = a5 >> 0x3
  7076: 3b 0a 95 10 03           u8 [0x31095] = a3
  7081: 56 26 00 02 2c 02        jump @362 if s1 >u 512
      :                          @336
  7087: 33 0a 61 00 03           a3 = 0x30061
  7092: c8 ac 0c                 a5 = a5 + a3
  7095: 7c c9                    a2 = u8 [a5]
  7097: 3b 09 96 10 03           u8 [0x31096] = a2
  7102: 95 7c f3                 a5 = a0 + 0xfffffffffffffff3
  7105: 98 c6 03                 s1 = a5 >> 0x3
  7108: 56 26 00 02 11 02        jump @362 if s1 >u 512
      :                          @337
  7114: c8 ca 0a                 a3 = a3 + a5
  7117: 7c aa                    a3 = u8 [a3]
  7119: 95 7c f4                 a5 = a0 + 0xfffffffffffffff4
  7122: 98 c6 03                 s1 = a5 >> 0x3
  7125: 3b 0a 97 10 03           u8 [0x31097] = a3
  7130: 56 26 00 02 fb 01        jump @362 if s1 >u 512
      :                          @338
  7136: 33 0a 61 00 03           a3 = 0x30061
  7141: c8 ac 0c                 a5 = a5 + a3
  7144: 7c c9                    a2 = u8 [a5]
  7146: 3b 09 98 10 03           u8 [0x31098] = a2
  7151: 95 7c f5                 a5 = a0 + 0xfffffffffffffff5
  7154: 98 c6 03                 s1 = a5 >> 0x3
  7157: 56 26 00 02 e0 01        jump @362 if s1 >u 512
      :                          @339
  7163: c8 ca 0a                 a3 = a3 + a5
  7166: 7c aa                    a3 = u8 [a3]
  7168: 95 7c f6                 a5 = a0 + 0xfffffffffffffff6
  7171: 98 c6 03                 s1 = a5 >> 0x3
  7174: 3b 0a 99 10 03           u8 [0x31099] = a3
  7179: 56 26 00 02 ca 01        jump @362 if s1 >u 512
      :                          @340
  7185: 33 0a 61 00 03           a3 = 0x30061
  7190: c8 ac 0c                 a5 = a5 + a3
  7193: 7c c9                    a2 = u8 [a5]
  7195: 3b 09 9a 10 03           u8 [0x3109a] = a2
  7200: 95 7c f7                 a5 = a0 + 0xfffffffffffffff7
  7203: 98 c6 03                 s1 = a5 >> 0x3
  7206: 56 26 00 02 af 01        jump @362 if s1 >u 512
      :                          @341
  7212: c8 ca 0a                 a3 = a3 + a5
  7215: 7c aa                    a3 = u8 [a3]
  7217: 95 7c f8                 a5 = a0 + 0xfffffffffffffff8
  7220: 98 c6 03                 s1 = a5 >> 0x3
  7223: 3b 0a 9b 10 03           u8 [0x3109b] = a3
  7228: 56 26 00 02 99 01        jump @362 if s1 >u 512
      :                          @342
  7234: 33 0a 61 00 03           a3 = 0x30061
  7239: c8 ac 0c                 a5 = a5 + a3
  7242: 7c c9                    a2 = u8 [a5]
  7244: 3b 09 9c 10 03           u8 [0x3109c] = a2
  7249: 95 7c f9                 a5 = a0 + 0xfffffffffffffff9
  7252: 98 c6 03                 s1 = a5 >> 0x3
  7255: 56 26 00 02 7e 01        jump @362 if s1 >u 512
      :                          @343
  7261: c8 ca 0a                 a3 = a3 + a5
  7264: 7c aa                    a3 = u8 [a3]
  7266: 95 7c fa                 a5 = a0 + 0xfffffffffffffffa
  7269: 98 c6 03                 s1 = a5 >> 0x3
  7272: 3b 0a 9d 10 03           u8 [0x3109d] = a3
  7277: 56 26 00 02 68 01        jump @362 if s1 >u 512
      :                          @344
  7283: 33 0a 61 00 03           a3 = 0x30061
  7288: c8 ac 0c                 a5 = a5 + a3
  7291: 7c c9                    a2 = u8 [a5]
  7293: 3b 09 9e 10 03           u8 [0x3109e] = a2
  7298: 95 7c fb                 a5 = a0 + 0xfffffffffffffffb
  7301: 98 c6 03                 s1 = a5 >> 0x3
  7304: 56 26 00 02 4d 01        jump @362 if s1 >u 512
      :                          @345
  7310: c8 ca 0a                 a3 = a3 + a5
  7313: 7c aa                    a3 = u8 [a3]
  7315: 95 7c fc                 a5 = a0 + 0xfffffffffffffffc
  7318: 98 c6 03                 s1 = a5 >> 0x3
  7321: 3b 0a 9f 10 03           u8 [0x3109f] = a3
  7326: 56 26 00 02 37 01        jump @362 if s1 >u 512
      :                          @346
  7332: 33 0a 61 00 03           a3 = 0x30061
  7337: c8 ac 0c                 a5 = a5 + a3
  7340: 7c c9                    a2 = u8 [a5]
  7342: 3b 09 a0 10 03           u8 [0x310a0] = a2
  7347: 95 7c fd                 a5 = a0 + 0xfffffffffffffffd
  7350: 98 c6 03                 s1 = a5 >> 0x3
  7353: 56 26 00 02 1c 01        jump @362 if s1 >u 512
      :                          @347
  7359: c8 ca 0a                 a3 = a3 + a5
  7362: 7c ac                    a5 = u8 [a3]
  7364: 95 7a fe                 a3 = a0 + 0xfffffffffffffffe
  7367: 98 a6 03                 s1 = a3 >> 0x3
  7370: 3b 0c a1 10 03           u8 [0x310a1] = a5
  7375: 56 26 00 02 06 01        jump @362 if s1 >u 512
      :                          @348
  7381: 33 08 61 00 03           a1 = 0x30061
  7386: c8 8a 0a                 a3 = a3 + a1
  7389: 7c a9                    a2 = u8 [a3]
  7391: 33 0c 80 10 03           a5 = 0x31080
  7396: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  7399: 98 7a 03                 a3 = a0 >> 0x3
  7402: 33 0b 00 02              a4 = 0x200
  7406: 7b 1c 08                 u64 [sp + 0x8] = a5
  7409: 3b 09 a2 10 03           u8 [0x310a2] = a2
  7414: ac ab de 00              jump @361 if a4 <u a3
      :                          @349
  7418: c8 87 07                 a0 = a0 + a1
  7421: 7c 77                    a0 = u8 [a0]
  7423: 82 18 08                 a1 = u64 [sp + 0x8]
  7426: 78 87 23                 u8 [a1 + 0x23] = a0
  7429: 80 87 20                 a0 = u32 [a1 + 0x20]
  7432: 7b 17                    u64 [sp] = a0
  7434: 7a 17 1c                 u32 [sp + 0x1c] = a0
  7437: 33 05 a4 10 03           s0 = 0x310a4
  7442: 33 06 50                 s1 = 0x50
  7445: 01                       fallthrough
      :                          @350
  7446: 33 09 20                 a2 = 0x20
  7449: 64 57                    a0 = s0
  7451: 82 18 08                 a1 = u64 [sp + 0x8]
  7454: 50 20 86 00 7b 05        ra = 134, jump @470
      :                          @351 [@dyn 67]
  7460: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  7463: 95 55 20                 s0 = s0 + 0x20
  7466: 52 06 ec                 jump @350 if s1 != 0
      :                          @352
  7469: 33 05 a4 10 03           s0 = 0x310a4
  7474: 33 07                    a0 = 0
  7476: 33 08 a4 10 03           a1 = 0x310a4
  7481: 82 16                    s1 = u64 [sp]
  7483: 64 69                    a2 = s1
  7485: 0a 0f                    ecalli 15 // 'assign'
  7487: 33 07 01                 a0 = 0x1
  7490: 64 58                    a1 = s0
  7492: 64 69                    a2 = s1
  7494: 0a 0f                    ecalli 15 // 'assign'
  7496: 95 17 1c                 a0 = sp + 0x1c
  7499: 7b 17 68                 u64 [sp + 0x68] = a0
  7502: 33 07 d6 00              a0 = 0xd6
  7506: 7b 17 70                 u64 [sp + 0x70] = a0
  7509: 33 07 58 00 01           a0 = 0x10058
  7514: 7b 17 38                 u64 [sp + 0x38] = a0
  7517: 49 11 40 01              u64 [sp + 64] = 0x1
  7521: 49 11 58                 u64 [sp + 88] = 0
  7524: 95 17 68                 a0 = sp + 0x68
  7527: 7b 17 48                 u64 [sp + 0x48] = a0
  7530: 49 11 50 01              u64 [sp + 80] = 0x1
  7534: 95 17 20                 a0 = sp + 0x20
  7537: 95 18 38                 a1 = sp + 0x38
  7540: 50 20 88 00 ab 02        ra = 136, jump @420
      :                          @353 [@dyn 68]
  7546: 82 15 28                 s0 = u64 [sp + 0x28]
  7549: 82 1b 30                 a4 = u64 [sp + 0x30]
  7552: 82 16 20                 s1 = u64 [sp + 0x20]
  7555: 33 07 02                 a0 = 0x2
  7558: 33 08                    a1 = 0
  7560: 33 09                    a2 = 0
  7562: 64 5a                    a3 = s0
  7564: 33 00 8a 00              ra = 0x8a
  7568: 0a 64                    ecalli 100 // 'log'
  7570: 01                       fallthrough
      :                          @354 [@dyn 69]
  7571: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
  7576: 53 38 00 00 ff 31        jump @360 if a1 <u 4294901760
      :                          @355
  7582: 33 07 b0 1a 03           a0 = 0x31ab0
  7587: 95 77 00 00 01           a0 = a0 + 0x10000
  7592: 01                       fallthrough
      :                          @356
  7593: 82 78                    a1 = u64 [a0]
  7595: c9 87 09                 a2 = a0 - a1
  7598: ab 59 1b                 jump @360 if a2 != s0
      :                          @357
  7601: c9 68 09                 a2 = a1 - s1
  7604: 01                       fallthrough
      :                          @358
  7605: 82 7a                    a3 = u64 [a0]
  7607: ab 8a f2                 jump @356 if a3 != a1
      :                          @359
  7610: 7b 79                    u64 [a0] = a2
  7612: 33 0b                    a4 = 0
  7614: 33 07 80 10 03           a0 = 0x31080
  7619: 33 08 20                 a1 = 0x20
  7622: 28 a1 fa                 jump @288
      :                          @360
  7625: 33 07 80 10 03           a0 = 0x31080
  7630: 33 08 20                 a1 = 0x20
  7633: 28 96 fa                 jump @288
      :                          @361
  7636: 00                       trap
      :                          @362
  7637: 00                       trap
      :                          @363 [export #2: 'on_transfer']
  7638: 33 07 00 00 01           a0 = 0x10000
  7643: 33 08                    a1 = 0
  7645: 32 00                    ret
      :                          @364
  7647: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  7650: 7b 10 40                 u64 [sp + 0x40] = ra
  7653: 7b 15 38                 u64 [sp + 0x38] = s0
  7656: 7b 16 30                 u64 [sp + 0x30] = s1
  7659: c8 89 09                 a2 = a2 + a1
  7662: ac 89 53                 jump @372 if a2 <u a1
      :                          @365
  7665: 64 75                    s0 = a0
  7667: 82 77                    a0 = u64 [a0]
  7669: 97 78 01                 a1 = a0 << 0x1
  7672: 33 0a 08                 a3 = 0x8
  7675: e4 a9 09                 a2 = maxu(a2, a3)
  7678: e4 98 06                 s1 = maxu(a1, a2)
  7681: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  7684: 98 88 3f                 a1 = a1 >> 0x3f
  7687: 51 07 12                 jump @367 if a0 == 0
      :                          @366
  7690: 82 59 08                 a2 = u64 [s0 + 0x8]
  7693: 7b 19 18                 u64 [sp + 0x18] = a2
  7696: 49 11 20 01              u64 [sp + 32] = 0x1
  7700: 7b 17 28                 u64 [sp + 0x28] = a0
  7703: 28 06                    jump @368
      :                          @367
  7705: 49 11 20                 u64 [sp + 32] = 0
  7708: 01                       fallthrough
      :                          @368
  7709: 64 17                    a0 = sp
  7711: 95 1a 18                 a3 = sp + 0x18
  7714: 64 69                    a2 = s1
  7716: 50 20 8c 00 33           ra = 140, jump @376
      :                          @369 [@dyn 70]
  7721: 82 18                    a1 = u64 [sp]
  7723: 82 17 08                 a0 = u64 [sp + 0x8]
  7726: 51 08 14                 jump @373 if a1 == 0
      :                          @370
  7729: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  7739: aa 87 0d                 jump @374 if a0 == a1
      :                          @371
  7742: 52 07 18                 jump @375 if a0 != 0
      :                          @372
  7745: 00                       trap
      :                          @373
  7746: 7b 57 08                 u64 [s0 + 0x8] = a0
  7749: 7b 56                    u64 [s0] = s1
  7751: 01                       fallthrough
      :                          @374
  7752: 82 10 40                 ra = u64 [sp + 0x40]
  7755: 82 15 38                 s0 = u64 [sp + 0x38]
  7758: 82 16 30                 s1 = u64 [sp + 0x30]
  7761: 95 11 48                 sp = sp + 0x48
  7764: 32 00                    ret
      :                          @375
  7766: 00                       trap
      :                          @376
  7767: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  7770: 7b 10 30                 u64 [sp + 0x30] = ra
  7773: 7b 15 28                 u64 [sp + 0x28] = s0
  7776: 7b 16 20                 u64 [sp + 0x20] = s1
  7779: 64 95                    s0 = a2
  7781: 64 72                    t0 = a0
  7783: 51 08 7a                 jump @386 if a1 == 0
      :                          @377
  7786: 82 a7 08                 a0 = u64 [a3 + 0x8]
  7789: 51 07 7d                 jump @387 if a0 == 0
      :                          @378
  7792: 82 a9 10                 a2 = u64 [a3 + 0x10]
  7795: 51 09 ab 00              jump @394 if a2 == 0
      :                          @379
  7799: 82 a8                    a1 = u64 [a3]
  7801: 33 06 b0 1a 03           s1 = 0x31ab0
  7806: 33 03 00 00 01           t1 = 0x10000
  7811: c8 36 06                 s1 = s1 + t1
  7814: 01                       fallthrough
      :                          @380
  7815: 82 6a                    a3 = u64 [s1]
  7817: c8 5a 07                 a0 = a3 + s0
  7820: ac a7 d0 00              jump @400 if a0 <u a3
      :                          @381
  7824: 95 7b 01                 a4 = a0 + 0x1
  7827: 88 bc 01                 a5 = a4 <u 0x1
  7830: d8 b3 0b                 a4 = t1 <u a4
  7833: d4 cb 0b                 a4 = a4 | a5
  7836: 52 0b c0 00              jump @400 if a4 != 0
      :                          @382
  7840: 82 6b                    a4 = u64 [s1]
  7842: ab ab e5                 jump @380 if a4 != a3
      :                          @383
  7845: 7b 67                    u64 [s1] = a0
  7847: 33 0c                    a5 = 0
  7849: 7b 12 18                 u64 [sp + 0x18] = t0
  7852: 33 0a b0 1a 03           a3 = 0x31ab0
  7857: 33 0b 00 00 01           a4 = 0x10000
  7862: 7b 1a                    u64 [sp] = a3
  7864: c8 ba 0a                 a3 = a3 + a4
  7867: c9 7a 07                 a0 = a3 - a0
  7870: 7b 17 10                 u64 [sp + 0x10] = a0
  7873: 7b 18 08                 u64 [sp + 0x8] = a1
  7876: 64 96                    s1 = a2
  7878: 50 20 8e 00 d3 03        ra = 142, jump @470
      :                          @384 [@dyn 71]
  7884: 54 36 00 00 01 98 00     jump @401 if s1 <=u 65536
      :                          @385
  7891: 82 12 18                 t0 = u64 [sp + 0x18]
  7894: 82 18 10                 a1 = u64 [sp + 0x10]
  7897: 33 07                    a0 = 0
  7899: 7b 28 08                 u64 [t0 + 0x8] = a1
  7902: 28 b5 00                 jump @407
      :                          @386
  7905: 49 12 08                 u64 [t0 + 8] = 0
  7908: 33 07 01                 a0 = 0x1
  7911: 28 ac 00                 jump @407
      :                          @387
  7914: 33 09 b0 1a 03           a2 = 0x31ab0
  7919: 33 07 00 00 01           a0 = 0x10000
  7924: c8 79 09                 a2 = a2 + a0
  7927: 01                       fallthrough
      :                          @388
  7928: 82 9a                    a3 = u64 [a2]
  7930: c8 5a 08                 a1 = a3 + s0
  7933: ac a8 5f                 jump @400 if a1 <u a3
      :                          @389
  7936: 95 8b 01                 a4 = a1 + 0x1
  7939: 88 bc 01                 a5 = a4 <u 0x1
  7942: d8 b7 0b                 a4 = a0 <u a4
  7945: d4 cb 0b                 a4 = a4 | a5
  7948: 52 0b 50                 jump @400 if a4 != 0
      :                          @390
  7951: 82 9b                    a4 = u64 [a2]
  7953: ab ab e7                 jump @388 if a4 != a3
      :                          @391
  7956: 7b 98                    u64 [a2] = a1
  7958: 33 0c                    a5 = 0
  7960: 01                       fallthrough
      :                          @392
  7961: ab ab df                 jump @388 if a4 != a3
      :                          @393
  7964: 28 31                    jump @399
      :                          @394
  7966: 33 09 b0 1a 03           a2 = 0x31ab0
  7971: 33 07 00 00 01           a0 = 0x10000
  7976: c8 79 09                 a2 = a2 + a0
  7979: 01                       fallthrough
      :                          @395
  7980: 82 9a                    a3 = u64 [a2]
  7982: c8 5a 08                 a1 = a3 + s0
  7985: ac a8 2b                 jump @400 if a1 <u a3
      :                          @396
  7988: 95 8b 01                 a4 = a1 + 0x1
  7991: 88 bc 01                 a5 = a4 <u 0x1
  7994: d8 b7 0b                 a4 = a0 <u a4
  7997: d4 cb 0b                 a4 = a4 | a5
  8000: 52 0b 1c                 jump @400 if a4 != 0
      :                          @397
  8003: 82 9b                    a4 = u64 [a2]
  8005: ab ab e7                 jump @395 if a4 != a3
      :                          @398
  8008: 7b 98                    u64 [a2] = a1
  8010: 33 0c                    a5 = 0
  8012: 01                       fallthrough
      :                          @399
  8013: 33 07 b0 1a 04           a0 = 0x41ab0
  8018: c9 87 08                 a1 = a0 - a1
  8021: 33 07                    a0 = 0
  8023: 7b 28 08                 u64 [t0 + 0x8] = a1
  8026: 28 39                    jump @407
      :                          @400
  8028: 33 07 01                 a0 = 0x1
  8031: 7b 27 08                 u64 [t0 + 0x8] = a0
  8034: 28 31                    jump @407
      :                          @401
  8036: 64 6c                    a5 = s1
  8038: 82 17                    a0 = u64 [sp]
  8040: 95 77 00 00 01           a0 = a0 + 0x10000
  8045: 82 12 18                 t0 = u64 [sp + 0x18]
  8048: 82 16 08                 s1 = u64 [sp + 0x8]
  8051: 01                       fallthrough
      :                          @402
  8052: 82 78                    a1 = u64 [a0]
  8054: c9 87 09                 a2 = a0 - a1
  8057: ab 69 11                 jump @406 if a2 != s1
      :                          @403
  8060: c9 c8 09                 a2 = a1 - a5
  8063: 01                       fallthrough
      :                          @404
  8064: 82 7a                    a3 = u64 [a0]
  8066: ab 8a f2                 jump @402 if a3 != a1
      :                          @405
  8069: 7b 79                    u64 [a0] = a2
  8071: 33 0b                    a4 = 0
  8073: 01                       fallthrough
      :                          @406
  8074: 82 18 10                 a1 = u64 [sp + 0x10]
  8077: 33 07                    a0 = 0
  8079: 7b 28 08                 u64 [t0 + 0x8] = a1
  8082: 01                       fallthrough
      :                          @407
  8083: 7b 25 10                 u64 [t0 + 0x10] = s0
  8086: 7b 27                    u64 [t0] = a0
  8088: 82 10 30                 ra = u64 [sp + 0x30]
  8091: 82 15 28                 s0 = u64 [sp + 0x28]
  8094: 82 16 20                 s1 = u64 [sp + 0x20]
  8097: 95 11 38                 sp = sp + 0x38
  8100: 32 00                    ret
      :                          @408
  8102: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  8105: 7b 10 40                 u64 [sp + 0x40] = ra
  8108: 7b 15 38                 u64 [sp + 0x38] = s0
  8111: 7b 16 30                 u64 [sp + 0x30] = s1
  8114: 95 88 01                 a1 = a1 + 0x1
  8117: 51 08 54                 jump @416 if a1 == 0
      :                          @409
  8120: 64 75                    s0 = a0
  8122: 82 77                    a0 = u64 [a0]
  8124: 97 79 01                 a2 = a0 << 0x1
  8127: 33 0a 08                 a3 = 0x8
  8130: e4 a8 08                 a1 = maxu(a1, a3)
  8133: e4 89 06                 s1 = maxu(a2, a1)
  8136: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  8139: 98 88 3f                 a1 = a1 >> 0x3f
  8142: 51 07 12                 jump @411 if a0 == 0
      :                          @410
  8145: 82 59 08                 a2 = u64 [s0 + 0x8]
  8148: 7b 19 18                 u64 [sp + 0x18] = a2
  8151: 49 11 20 01              u64 [sp + 32] = 0x1
  8155: 7b 17 28                 u64 [sp + 0x28] = a0
  8158: 28 06                    jump @412
      :                          @411
  8160: 49 11 20                 u64 [sp + 32] = 0
  8163: 01                       fallthrough
      :                          @412
  8164: 64 17                    a0 = sp
  8166: 95 1a 18                 a3 = sp + 0x18
  8169: 64 69                    a2 = s1
  8171: 50 20 90 00 6c fe        ra = 144, jump @376
      :                          @413 [@dyn 72]
  8177: 82 18                    a1 = u64 [sp]
  8179: 82 17 08                 a0 = u64 [sp + 0x8]
  8182: 51 08 14                 jump @417 if a1 == 0
      :                          @414
  8185: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  8195: aa 87 0d                 jump @418 if a0 == a1
      :                          @415
  8198: 52 07 18                 jump @419 if a0 != 0
      :                          @416
  8201: 00                       trap
      :                          @417
  8202: 7b 57 08                 u64 [s0 + 0x8] = a0
  8205: 7b 56                    u64 [s0] = s1
  8207: 01                       fallthrough
      :                          @418
  8208: 82 10 40                 ra = u64 [sp + 0x40]
  8211: 82 15 38                 s0 = u64 [sp + 0x38]
  8214: 82 16 30                 s1 = u64 [sp + 0x30]
  8217: 95 11 48                 sp = sp + 0x48
  8220: 32 00                    ret
      :                          @419
  8222: 00                       trap
      :                          @420
  8223: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  8226: 7b 10 30                 u64 [sp + 0x30] = ra
  8229: 7b 15 28                 u64 [sp + 0x28] = s0
  8232: 7b 16 20                 u64 [sp + 0x20] = s1
  8235: 64 89                    a2 = a1
  8237: 82 8a 08                 a3 = u64 [a1 + 0x8]
  8240: 64 75                    s0 = a0
  8242: 51 0a 35                 jump @425 if a3 == 0
      :                          @421
  8245: 82 98                    a1 = u64 [a2]
  8247: 33 07                    a0 = 0
  8249: 95 8b 08                 a4 = a1 + 0x8
  8252: 01                       fallthrough
      :                          @422
  8253: 82 bc                    a5 = u64 [a4]
  8255: c8 c7 07                 a0 = a0 + a5
  8258: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  8261: 95 bb 10                 a4 = a4 + 0x10
  8264: 52 0a f5                 jump @422 if a3 != 0
      :                          @423
  8267: 82 9a 18                 a3 = u64 [a2 + 0x18]
  8270: 51 0a 24                 jump @427 if a3 == 0
      :                          @424
  8273: 82 88 08                 a1 = u64 [a1 + 0x8]
  8276: 8e 88                    a1 = a1 >u 0
  8278: 88 7a 10                 a3 = a0 <u 0x10
  8281: 85 aa 01                 a3 = a3 ^ 0x1
  8284: d4 a8 08                 a1 = a1 | a3
  8287: 89 7a                    a3 = a0 <s 0
  8289: e0 a8 08                 a1 = a1 & ~a3
  8292: 52 08 0a                 jump @426 if a1 != 0
      :                          @425
  8295: 33 07                    a0 = 0
  8297: 33 08 01                 a1 = 0x1
  8300: 28 4a                    jump @435
      :                          @426
  8302: 97 77 01                 a0 = a0 << 0x1
  8305: 01                       fallthrough
      :                          @427
  8306: 51 07 40                 jump @434 if a0 == 0
      :                          @428
  8309: 57 07 79                 jump @440 if a0 <s 0
      :                          @429
  8312: 64 52                    t0 = s0
  8314: 33 0b b0 1a 03           a4 = 0x31ab0
  8319: 33 08 00 00 01           a1 = 0x10000
  8324: c8 8b 0b                 a4 = a4 + a1
  8327: 01                       fallthrough
      :                          @430
  8328: 82 bc                    a5 = u64 [a4]
  8330: c8 7c 0a                 a3 = a5 + a0
  8333: ac ca 5f                 jump @438 if a3 <u a5
      :                          @431
  8336: 95 a5 01                 s0 = a3 + 0x1
  8339: 88 56 01                 s1 = s0 <u 0x1
  8342: d8 58 05                 s0 = a1 <u s0
  8345: d4 65 05                 s0 = s0 | s1
  8348: 52 05 50                 jump @438 if s0 != 0
      :                          @432
  8351: 82 b6                    s1 = u64 [a4]
  8353: ab c6 e7                 jump @430 if s1 != a5
      :                          @433
  8356: 7b ba                    u64 [a4] = a3
  8358: 33 08 b0 1a 04           a1 = 0x41ab0
  8363: c9 a8 08                 a1 = a1 - a3
  8366: 64 25                    s0 = t0
  8368: 28 06                    jump @435
      :                          @434
  8370: 33 08 01                 a1 = 0x1
  8373: 01                       fallthrough
      :                          @435
  8374: 7b 17                    u64 [sp] = a0
  8376: 7b 18 08                 u64 [sp + 0x8] = a1
  8379: 49 11 10                 u64 [sp + 16] = 0
  8382: 33 08 d0 00 01           a1 = 0x100d0
  8387: 64 17                    a0 = sp
  8389: 50 20 92 00 80 06        ra = 146, jump @564
      :                          @436 [@dyn 73]
  8395: 52 07 22                 jump @439 if a0 != 0
      :                          @437
  8398: 82 17 10                 a0 = u64 [sp + 0x10]
  8401: 82 18 08                 a1 = u64 [sp + 0x8]
  8404: 82 19                    a2 = u64 [sp]
  8406: 7b 57 10                 u64 [s0 + 0x10] = a0
  8409: 7b 58 08                 u64 [s0 + 0x8] = a1
  8412: 7b 59                    u64 [s0] = a2
  8414: 82 10 30                 ra = u64 [sp + 0x30]
  8417: 82 15 28                 s0 = u64 [sp + 0x28]
  8420: 82 16 20                 s1 = u64 [sp + 0x20]
  8423: 95 11 38                 sp = sp + 0x38
  8426: 32 00                    ret
      :                          @438
  8428: 00                       trap
      :                          @439
  8429: 00                       trap
      :                          @440
  8430: 00                       trap
      :                          @441 [@dyn 74]
  8431: 82 72                    t0 = u64 [a0]
  8433: 33 09 00 00 ff           a2 = 0xffffffffffff0000
  8438: 95 2a ff ff fe           a3 = t0 + 0xfffffffffffeffff
  8443: ac 9a 28                 jump @447 if a3 <u a2
      :                          @442
  8446: 82 77 08                 a0 = u64 [a0 + 0x8]
  8449: 33 09 b0 1a 03           a2 = 0x31ab0
  8454: 95 99 00 00 01           a2 = a2 + 0x10000
  8459: 01                       fallthrough
      :                          @443
  8460: 82 9a                    a3 = u64 [a2]
  8462: c9 a9 0b                 a4 = a2 - a3
  8465: ab 7b 12                 jump @447 if a4 != a0
      :                          @444
  8468: c9 2a 0b                 a4 = a3 - t0
  8471: 01                       fallthrough
      :                          @445
  8472: 82 9c                    a5 = u64 [a2]
  8474: ab ac f2                 jump @443 if a5 != a3
      :                          @446
  8477: 7b 9b                    u64 [a2] = a4
  8479: 33 08                    a1 = 0
  8481: 32 00                    ret
      :                          @447
  8483: 32 00                    ret
      :                          @448 [@dyn 75]
  8485: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  8488: 7b 10 18                 u64 [sp + 0x18] = ra
  8491: 7b 15 10                 u64 [sp + 0x10] = s0
  8494: 7b 16 08                 u64 [sp + 0x8] = s1
  8497: 64 75                    s0 = a0
  8499: 82 7a 10                 a3 = u64 [a0 + 0x10]
  8502: 82 77                    a0 = u64 [a0]
  8504: c9 a7 07                 a0 = a0 - a3
  8507: 64 96                    s1 = a2
  8509: ac 97 2b                 jump @451 if a0 <u a2
      :                          @449
  8512: 7b 1a                    u64 [sp] = a3
  8514: 82 57 08                 a0 = u64 [s0 + 0x8]
  8517: c8 a7 07                 a0 = a0 + a3
  8520: 64 69                    a2 = s1
  8522: 50 20 98 00 4f 01        ra = 152, jump @470
      :                          @450 [@dyn 76]
  8528: 82 17                    a0 = u64 [sp]
  8530: c8 76 06                 s1 = s1 + a0
  8533: 7b 56 10                 u64 [s0 + 0x10] = s1
  8536: 33 07                    a0 = 0
  8538: 82 10 18                 ra = u64 [sp + 0x18]
  8541: 82 15 10                 s0 = u64 [sp + 0x10]
  8544: 82 16 08                 s1 = u64 [sp + 0x8]
  8547: 95 11 20                 sp = sp + 0x20
  8550: 32 00                    ret
      :                          @451
  8552: 64 57                    a0 = s0
  8554: 7b 18                    u64 [sp] = a1
  8556: 64 a8                    a1 = a3
  8558: 64 69                    a2 = s1
  8560: 50 20 9a 00 6f fc        ra = 154, jump @364
      :                          @452 [@dyn 77]
  8566: 82 18                    a1 = u64 [sp]
  8568: 82 5a 10                 a3 = u64 [s0 + 0x10]
  8571: 28 c5                    jump @449
      :                          @453 [@dyn 78]
  8573: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  8576: 7b 10 20                 u64 [sp + 0x20] = ra
  8579: 7b 15 18                 u64 [sp + 0x18] = s0
  8582: 7b 16 10                 u64 [sp + 0x10] = s1
  8585: 64 86                    s1 = a1
  8587: 83 88                    i32 a1 = a1 + 0
  8589: 33 09 80 00              a2 = 0x80
  8593: 64 7a                    a3 = a0
  8595: ae 98 2c                 jump @458 if a1 >=u a2
      :                          @454
  8598: 82 a8 10                 a1 = u64 [a3 + 0x10]
  8601: 82 a7                    a0 = u64 [a3]
  8603: ab 78 13                 jump @457 if a1 != a0
      :                          @455
  8606: 64 a7                    a0 = a3
  8608: 64 a5                    s0 = a3
  8610: 50 20 9e 00 04 fe        ra = 158, jump @408
      :                          @456 [@dyn 79]
  8616: 64 5a                    a3 = s0
  8618: 82 58 10                 a1 = u64 [s0 + 0x10]
  8621: 01                       fallthrough
      :                          @457
  8622: 82 a7 08                 a0 = u64 [a3 + 0x8]
  8625: c8 87 07                 a0 = a0 + a1
  8628: 78 76                    u8 [a0] = s1
  8630: 95 88 01                 a1 = a1 + 0x1
  8633: 7b a8 10                 u64 [a3 + 0x10] = a1
  8636: 28 ac 00                 jump @466
      :                          @458
  8639: 8b 67 0b                 i32 a0 = s1 >> 0xb
  8642: 48 11 0c                 u32 [sp + 12] = 0
  8645: 52 07 1c                 jump @460 if a0 != 0
      :                          @459
  8648: 98 67 06                 a0 = s1 >> 0x6
  8651: 86 77 c0 00              a0 = a0 | 0xc0
  8655: 78 17 0c                 u8 [sp + 0xc] = a0
  8658: 84 67 3f                 a0 = s1 & 0x3f
  8661: 86 77 80 00              a0 = a0 | 0x80
  8665: 78 17 0d                 u8 [sp + 0xd] = a0
  8668: 33 06 02                 s1 = 0x2
  8671: 28 63                    jump @463
      :                          @460
  8673: 8b 67 10                 i32 a0 = s1 >> 0x10
  8676: 52 07 29                 jump @462 if a0 != 0
      :                          @461
  8679: 98 67 0c                 a0 = s1 >> 0xc
  8682: 86 77 e0 00              a0 = a0 | 0xe0
  8686: 78 17 0c                 u8 [sp + 0xc] = a0
  8689: 97 67 34                 a0 = s1 << 0x34
  8692: 98 77 3a                 a0 = a0 >> 0x3a
  8695: 95 77 80 00              a0 = a0 + 0x80
  8699: 78 17 0d                 u8 [sp + 0xd] = a0
  8702: 84 67 3f                 a0 = s1 & 0x3f
  8705: 86 77 80 00              a0 = a0 | 0x80
  8709: 78 17 0e                 u8 [sp + 0xe] = a0
  8712: 33 06 03                 s1 = 0x3
  8715: 28 37                    jump @463
      :                          @462
  8717: 97 67 2b                 a0 = s1 << 0x2b
  8720: 98 77 3d                 a0 = a0 >> 0x3d
  8723: 95 77 f0 00              a0 = a0 + 0xf0
  8727: 78 17 0c                 u8 [sp + 0xc] = a0
  8730: 97 67 2e                 a0 = s1 << 0x2e
  8733: 98 77 3a                 a0 = a0 >> 0x3a
  8736: 95 77 80 00              a0 = a0 + 0x80
  8740: 78 17 0d                 u8 [sp + 0xd] = a0
  8743: 97 67 34                 a0 = s1 << 0x34
  8746: 98 77 3a                 a0 = a0 >> 0x3a
  8749: 95 77 80 00              a0 = a0 + 0x80
  8753: 78 17 0e                 u8 [sp + 0xe] = a0
  8756: 84 67 3f                 a0 = s1 & 0x3f
  8759: 86 77 80 00              a0 = a0 | 0x80
  8763: 78 17 0f                 u8 [sp + 0xf] = a0
  8766: 33 06 04                 s1 = 0x4
  8769: 01                       fallthrough
      :                          @463
  8770: 82 a5 10                 s0 = u64 [a3 + 0x10]
  8773: 82 a7                    a0 = u64 [a3]
  8775: c9 57 07                 a0 = a0 - s0
  8778: ac 67 2e                 jump @467 if a0 <u s1
      :                          @464
  8781: 7b 1a                    u64 [sp] = a3
  8783: 82 a7 08                 a0 = u64 [a3 + 0x8]
  8786: c8 57 07                 a0 = a0 + s0
  8789: 95 18 0c                 a1 = sp + 0xc
  8792: 64 69                    a2 = s1
  8794: 50 20 a0 00 3f           ra = 160, jump @470
      :                          @465 [@dyn 80]
  8799: c8 56 06                 s1 = s1 + s0
  8802: 82 17                    a0 = u64 [sp]
  8804: 7b 76 10                 u64 [a0 + 0x10] = s1
  8807: 01                       fallthrough
      :                          @466
  8808: 33 07                    a0 = 0
  8810: 82 10 20                 ra = u64 [sp + 0x20]
  8813: 82 15 18                 s0 = u64 [sp + 0x18]
  8816: 82 16 10                 s1 = u64 [sp + 0x10]
  8819: 95 11 28                 sp = sp + 0x28
  8822: 32 00                    ret
      :                          @467
  8824: 64 a7                    a0 = a3
  8826: 64 58                    a1 = s0
  8828: 64 69                    a2 = s1
  8830: 64 a5                    s0 = a3
  8832: 50 20 a2 00 5f fb        ra = 162, jump @364
      :                          @468 [@dyn 81]
  8838: 64 5a                    a3 = s0
  8840: 82 55 10                 s0 = u64 [s0 + 0x10]
  8843: 28 c2                    jump @464
      :                          @469 [@dyn 82]
  8845: 64 8a                    a3 = a1
  8847: 33 08 d0 00 01           a1 = 0x100d0
  8852: 64 a9                    a2 = a3
  8854: 28 af 04                 jump @564
      :                          @470
  8857: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  8860: 7b 10 18                 u64 [sp + 0x18] = ra
  8863: 7b 15 10                 u64 [sp + 0x10] = s0
  8866: 7b 16 08                 u64 [sp + 0x8] = s1
  8869: 53 19 10 64              jump @479 if a2 <u 16
      :                          @471
  8873: 8d 7a                    i32 a3 = -a0
  8875: 84 a2 07                 t0 = a3 & 0x7
  8878: c8 27 0b                 a4 = a0 + t0
  8881: 51 02 15                 jump @474 if t0 == 0
      :                          @472
  8884: 64 8c                    a5 = a1
  8886: 64 75                    s0 = a0
  8888: 01                       fallthrough
      :                          @473
  8889: 7c ca                    a3 = u8 [a5]
  8891: 78 5a                    u8 [s0] = a3
  8893: 95 55 01                 s0 = s0 + 0x1
  8896: 95 cc 01                 a5 = a5 + 0x1
  8899: ac b5 f6                 jump @473 if s0 <u a4
      :                          @474
  8902: c8 28 03                 t1 = a1 + t0
  8905: c9 29 02                 t0 = a2 - t0
  8908: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  8911: 84 38 07                 a1 = t1 & 0x7
  8914: c8 4b 0a                 a3 = a4 + t2
  8917: 51 08 3b                 jump @481 if a1 == 0
      :                          @475
  8920: 58 04 4b                 jump @484 if t2 <=s 0
      :                          @476
  8923: 97 38 03                 a1 = t1 << 0x3
  8926: 84 80 38                 ra = a1 & 0x38
  8929: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  8932: 82 c5                    s0 = u64 [a5]
  8934: 8d 88                    i32 a1 = -a1
  8936: 84 88 38                 a1 = a1 & 0x38
  8939: 95 cc 08                 a5 = a5 + 0x8
  8942: 01                       fallthrough
      :                          @477
  8943: 82 c6                    s1 = u64 [a5]
  8945: d0 05 05                 s0 = s0 >> ra
  8948: cf 86 09                 a2 = s1 << a1
  8951: d4 59 09                 a2 = a2 | s0
  8954: 7b b9                    u64 [a4] = a2
  8956: 95 bb 08                 a4 = a4 + 0x8
  8959: 95 cc 08                 a5 = a5 + 0x8
  8962: 64 65                    s0 = s1
  8964: ac ab eb                 jump @477 if a4 <u a3
      :                          @478
  8967: 28 1c                    jump @484
      :                          @479
  8969: 64 7a                    a3 = a0
  8971: 52 09 21                 jump @485 if a2 != 0
      :                          @480
  8974: 28 2f                    jump @487
      :                          @481
  8976: 58 04 13                 jump @484 if t2 <=s 0
      :                          @482
  8979: 64 38                    a1 = t1
  8981: 01                       fallthrough
      :                          @483
  8982: 82 89                    a2 = u64 [a1]
  8984: 7b b9                    u64 [a4] = a2
  8986: 95 bb 08                 a4 = a4 + 0x8
  8989: 95 88 08                 a1 = a1 + 0x8
  8992: ac ab f6                 jump @483 if a4 <u a3
      :                          @484
  8995: c8 43 08                 a1 = t1 + t2
  8998: 84 29 07                 a2 = t0 & 0x7
  9001: 51 09 14                 jump @487 if a2 == 0
      :                          @485
  9004: c8 a9 09                 a2 = a2 + a3
  9007: 01                       fallthrough
      :                          @486
  9008: 7c 8b                    a4 = u8 [a1]
  9010: 78 ab                    u8 [a3] = a4
  9012: 95 aa 01                 a3 = a3 + 0x1
  9015: 95 88 01                 a1 = a1 + 0x1
  9018: ac 9a f6                 jump @486 if a3 <u a2
      :                          @487
  9021: 82 10 18                 ra = u64 [sp + 0x18]
  9024: 82 15 10                 s0 = u64 [sp + 0x10]
  9027: 82 16 08                 s1 = u64 [sp + 0x8]
  9030: 95 11 20                 sp = sp + 0x20
  9033: 32 00                    ret
      :                          @488
  9035: 8d 7a                    i32 a3 = -a0
  9037: 84 aa 07                 a3 = a3 & 0x7
  9040: c8 a7 0b                 a4 = a0 + a3
  9043: 51 0a 0e                 jump @491 if a3 == 0
      :                          @489
  9046: 64 7c                    a5 = a0
  9048: 01                       fallthrough
      :                          @490
  9049: 78 c8                    u8 [a5] = a1
  9051: 95 cc 01                 a5 = a5 + 0x1
  9054: ac bc fb                 jump @490 if a5 <u a4
      :                          @491
  9057: c9 a9 03                 t1 = a2 - a3
  9060: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  9063: c8 cb 0a                 a3 = a4 + a5
  9066: 58 0c 1d                 jump @494 if a5 <=s 0
      :                          @492
  9069: 84 82 ff 00              t0 = a1 & 0xff
  9073: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  9083: ca 92 0c                 a5 = t0 * a2
  9086: 01                       fallthrough
      :                          @493
  9087: 7b bc                    u64 [a4] = a5
  9089: 95 bb 08                 a4 = a4 + 0x8
  9092: ac ab fb                 jump @493 if a4 <u a3
      :                          @494
  9095: 84 39 07                 a2 = t1 & 0x7
  9098: 52 09 05                 jump @496 if a2 != 0
      :                          @495
  9101: 28 0e                    jump @498
      :                          @496
  9103: c8 a9 09                 a2 = a2 + a3
  9106: 01                       fallthrough
      :                          @497
  9107: 78 a8                    u8 [a3] = a1
  9109: 95 aa 01                 a3 = a3 + 0x1
  9112: ac 9a fb                 jump @497 if a3 <u a2
      :                          @498
  9115: 32 00                    ret
      :                          @499 [@dyn 83]
  9117: 82 77                    a0 = u64 [a0]
  9119: 01                       fallthrough
      :                          @500
  9120: 28                       jump @500
      :                          @501 [@dyn 84]
  9121: 82 77                    a0 = u64 [a0]
  9123: 01                       fallthrough
      :                          @502
  9124: 95 11 a8                 sp = sp + 0xffffffffffffffa8
  9127: 7b 10 50                 u64 [sp + 0x50] = ra
  9130: 7b 15 48                 u64 [sp + 0x48] = s0
  9133: 7b 16 40                 u64 [sp + 0x40] = s1
  9136: 7b 18                    u64 [sp] = a1
  9138: 98 79 04                 a2 = a0 >> 0x4
  9141: 33 08 27                 a1 = 0x27
  9144: 53 29 71 02 81 00        jump @505 if a2 <u 625
      :                          @503
  9150: 33 08 27                 a1 = 0x27
  9153: 95 1a 3e                 a3 = sp + 0x3e
  9156: 3a 09 50 00 03           a2 = u64 [0x30050]
  9161: 7b 19 10                 u64 [sp + 0x10] = a2
  9164: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
  9170: 33 04 7b 14              t2 = 0x147b
  9174: 33 0b 44 01 01           a4 = 0x10144
  9179: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
  9185: 01                       fallthrough
      :                          @504
  9186: 64 72                    t0 = a0
  9188: 82 17 10                 a0 = u64 [sp + 0x10]
  9191: d6 72 07                 a0 = t0 mulhu a0
  9194: 98 77 0b                 a0 = a0 >> 0xb
  9197: 82 19 08                 a2 = u64 [sp + 0x8]
  9200: c0 97 0c                 i32 a5 = a0 * a2
  9203: c8 2c 06                 s1 = a5 + t0
  9206: 97 6c 30                 a5 = s1 << 0x30
  9209: 98 cc 32                 a5 = a5 >> 0x32
  9212: ca 4c 0c                 a5 = a5 * t2
  9215: 98 c3 11                 t1 = a5 >> 0x11
  9218: 98 cc 10                 a5 = a5 >> 0x10
  9221: 84 cc fe 07              a5 = a5 & 0x7fe
  9225: 96 39 9c                 a2 = t1 * 0xffffffffffffff9c
  9228: c8 69 09                 a2 = a2 + s1
  9231: 97 99 31                 a2 = a2 << 0x31
  9234: 98 99 30                 a2 = a2 >> 0x30
  9237: c8 bc 0c                 a5 = a5 + a4
  9240: 7c c6                    s1 = u8 [a5]
  9242: 7c cc 01                 a5 = u8 [a5 + 0x1]
  9245: c8 b9 09                 a2 = a2 + a4
  9248: 7c 95 01                 s0 = u8 [a2 + 0x1]
  9251: 7c 99                    a2 = u8 [a2]
  9253: 78 ac ff                 u8 [a3 + 0xffffffffffffffff] = a5
  9256: 78 a6 fe                 u8 [a3 + 0xfffffffffffffffe] = s1
  9259: 78 a5 01                 u8 [a3 + 0x1] = s0
  9262: 78 a9                    u8 [a3] = a2
  9264: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
  9267: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
  9270: ac 20 ac                 jump @504 if ra <u t0
      :                          @505
  9273: 54 17 63 3b              jump @507 if a0 <=u 99
      :                          @506
  9277: 97 79 30                 a2 = a0 << 0x30
  9280: 98 99 32                 a2 = a2 >> 0x32
  9283: 96 99 7b 14              a2 = a2 * 0x147b
  9287: 98 99 11                 a2 = a2 >> 0x11
  9290: 96 9a 9c                 a3 = a2 * 0xffffffffffffff9c
  9293: c8 a7 07                 a0 = a0 + a3
  9296: 97 77 31                 a0 = a0 << 0x31
  9299: 98 77 30                 a0 = a0 >> 0x30
  9302: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  9305: 33 0a 44 01 01           a3 = 0x10144
  9310: c8 a7 07                 a0 = a0 + a3
  9313: 7c 7a 01                 a3 = u8 [a0 + 0x1]
  9316: 7c 77                    a0 = u8 [a0]
  9318: 95 1b 19                 a4 = sp + 0x19
  9321: c8 8b 0b                 a4 = a4 + a1
  9324: 78 ba 01                 u8 [a4 + 0x1] = a3
  9327: 78 b7                    u8 [a4] = a0
  9329: 64 97                    a0 = a2
  9331: 01                       fallthrough
      :                          @507
  9332: 55 17 0a 14              jump @509 if a0 >=u 10
      :                          @508
  9336: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  9339: 95 19 19                 a2 = sp + 0x19
  9342: c8 89 09                 a2 = a2 + a1
  9345: 83 77 30                 i32 a0 = a0 + 0x30
  9348: 78 97                    u8 [a2] = a0
  9350: 28 21                    jump @510
      :                          @509
  9352: 97 77 01                 a0 = a0 << 0x1
  9355: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  9358: 33 09 44 01 01           a2 = 0x10144
  9363: c8 97 07                 a0 = a0 + a2
  9366: 7c 79 01                 a2 = u8 [a0 + 0x1]
  9369: 7c 77                    a0 = u8 [a0]
  9371: 95 1a 19                 a3 = sp + 0x19
  9374: c8 8a 0a                 a3 = a3 + a1
  9377: 78 a9 01                 u8 [a3 + 0x1] = a2
  9380: 78 a7                    u8 [a3] = a0
  9382: 01                       fallthrough
      :                          @510
  9383: 95 1a 19                 a3 = sp + 0x19
  9386: c8 8a 0a                 a3 = a3 + a1
  9389: 9a 8b 27                 a4 = 0x27 - a1
  9392: 33 08 00 01 01           a1 = 0x10100
  9397: 82 17                    a0 = u64 [sp]
  9399: 33 09                    a2 = 0
  9401: 50 20 aa 00 13           ra = 170, jump @512
      :                          @511 [@dyn 85]
  9406: 82 10 50                 ra = u64 [sp + 0x50]
  9409: 82 15 48                 s0 = u64 [sp + 0x48]
  9412: 82 16 40                 s1 = u64 [sp + 0x40]
  9415: 95 11 58                 sp = sp + 0x58
  9418: 32 00                    ret
      :                          @512
  9420: 95 11 98                 sp = sp + 0xffffffffffffff98
  9423: 7b 10 60                 u64 [sp + 0x60] = ra
  9426: 7b 15 58                 u64 [sp + 0x58] = s0
  9429: 7b 16 50                 u64 [sp + 0x50] = s1
  9432: 80 73 34                 t1 = u32 [a0 + 0x34]
  9435: 7b 1a 20                 u64 [sp + 0x20] = a3
  9438: 64 9c                    a5 = a2
  9440: 84 36 01                 s1 = t1 & 0x1
  9443: 33 02 2b                 t0 = 0x2b
  9446: 33 09 00 00 11           a2 = 0x110000
  9451: 84 3a 04                 a3 = t1 & 0x4
  9454: 7b 1b 28                 u64 [sp + 0x28] = a4
  9457: c8 b6 04                 t2 = s1 + a4
  9460: 7b 1c 30                 u64 [sp + 0x30] = a5
  9463: 52 0a 10                 jump @515 if a3 != 0
      :                          @513
  9466: 49 11 38                 u64 [sp + 56] = 0
  9469: 82 78                    a1 = u64 [a0]
  9471: 94 69 2b                 a2 = 0x2b if s1 != 0
  9474: 52 08 35                 jump @519 if a1 != 0
      :                          @514
  9477: 28 56                    jump @524
      :                          @515
  9479: 7b 18 38                 u64 [sp + 0x38] = a1
  9482: 33 09                    a2 = 0
  9484: 51 0c 1b                 jump @518 if a5 == 0
      :                          @516
  9487: 82 1b 38                 a4 = u64 [sp + 0x38]
  9490: 01                       fallthrough
      :                          @517
  9491: 7d b5                    s0 = i8 [a4]
  9493: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
  9496: 85 5a 01                 a3 = s0 ^ 0x1
  9499: c8 a9 09                 a2 = a2 + a3
  9502: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  9505: 95 bb 01                 a4 = a4 + 0x1
  9508: 52 0c ef                 jump @517 if a5 != 0
      :                          @518
  9511: c8 94 04                 t2 = t2 + a2
  9514: 33 09 00 00 11           a2 = 0x110000
  9519: 82 78                    a1 = u64 [a0]
  9521: db 62 09                 a2 = t0 if s1 != 0
  9524: 51 08 27                 jump @524 if a1 == 0
      :                          @519
  9527: 82 7a 08                 a3 = u64 [a0 + 0x8]
  9530: ae a4 21                 jump @524 if t2 >=u a3
      :                          @520
  9533: 84 38 08                 a1 = t1 & 0x8
  9536: 52 08 51                 jump @527 if a1 != 0
      :                          @521
  9539: 7c 76 38                 s1 = u8 [a0 + 0x38]
  9542: c9 4a 0a                 a3 = a3 - t2
  9545: 7b 19 18                 u64 [sp + 0x18] = a2
  9548: 5a 16 01 a0 00           jump @534 if s1 >s 1
      :                          @522
  9553: 52 06 ad 00              jump @536 if s1 != 0
      :                          @523
  9557: 7b 1a 10                 u64 [sp + 0x10] = a3
  9560: 28 ac 00                 jump @537
      :                          @524
  9563: 82 75 20                 s0 = u64 [a0 + 0x20]
  9566: 82 76 28                 s1 = u64 [a0 + 0x28]
  9569: 64 57                    a0 = s0
  9571: 64 68                    a1 = s1
  9573: 82 1a 38                 a3 = u64 [sp + 0x38]
  9576: 82 1b 30                 a4 = u64 [sp + 0x30]
  9579: 50 20 ac 00 75 01        ra = 172, jump @557
      :                          @525 [@dyn 86]
  9585: 33 08 01                 a1 = 0x1
  9588: 52 07 be 00              jump @542 if a0 != 0
      :                          @526
  9592: 82 6c 18                 a5 = u64 [s1 + 0x18]
  9595: 64 57                    a0 = s0
  9597: 82 18 20                 a1 = u64 [sp + 0x20]
  9600: 82 19 28                 a2 = u64 [sp + 0x28]
  9603: 82 10 60                 ra = u64 [sp + 0x60]
  9606: 82 15 58                 s0 = u64 [sp + 0x58]
  9609: 82 16 50                 s1 = u64 [sp + 0x50]
  9612: 95 11 68                 sp = sp + 0x68
  9615: 32 0c                    jump [a5]
      :                          @527
  9617: 7b 1a 40                 u64 [sp + 0x40] = a3
  9620: 64 45                    s0 = t2
  9622: 81 78 30                 a1 = i32 [a0 + 0x30]
  9625: 7b 18 10                 u64 [sp + 0x10] = a1
  9628: 7c 7a 38                 a3 = u8 [a0 + 0x38]
  9631: 7b 1a 08                 u64 [sp + 0x8] = a3
  9634: 82 7a 20                 a3 = u64 [a0 + 0x20]
  9637: 82 78 28                 a1 = u64 [a0 + 0x28]
  9640: 48 17 30 30              u32 [a0 + 48] = 0x30
  9644: 7b 17                    u64 [sp] = a0
  9646: 46 17 38 01              u8 [a0 + 56] = 0x1
  9650: 7b 1a 48                 u64 [sp + 0x48] = a3
  9653: 64 a7                    a0 = a3
  9655: 64 86                    s1 = a1
  9657: 82 1a 38                 a3 = u64 [sp + 0x38]
  9660: 82 1b 30                 a4 = u64 [sp + 0x30]
  9663: 50 20 ae 00 21 01        ra = 174, jump @557
      :                          @528 [@dyn 87]
  9669: 52 07 69                 jump @541 if a0 != 0
      :                          @529
  9672: 82 17 40                 a0 = u64 [sp + 0x40]
  9675: c9 57 05                 s0 = a0 - s0
  9678: 95 55 01                 s0 = s0 + 0x1
  9681: 01                       fallthrough
      :                          @530
  9682: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  9685: 51 05 cb 00              jump @552 if s0 == 0
      :                          @531
  9689: 82 69 20                 a2 = u64 [s1 + 0x20]
  9692: 33 08 30                 a1 = 0x30
  9695: 82 17 48                 a0 = u64 [sp + 0x48]
  9698: b4 90 02 b0 00           ra = 176, jump [a2]
      :                          @532 [@dyn 88]
  9703: 51 07 eb                 jump @530 if a0 == 0
      :                          @533
  9706: 28 44                    jump @541
      :                          @534
  9708: 52 16 02 12              jump @536 if s1 != 2
      :                          @535
  9712: 98 a6 01                 s1 = a3 >> 0x1
  9715: 95 a8 01                 a1 = a3 + 0x1
  9718: 98 88 01                 a1 = a1 >> 0x1
  9721: 7b 18 10                 u64 [sp + 0x10] = a1
  9724: 28 08                    jump @537
      :                          @536
  9726: 64 a6                    s1 = a3
  9728: 49 11 10                 u64 [sp + 16] = 0
  9731: 01                       fallthrough
      :                          @537
  9732: 82 78 20                 a1 = u64 [a0 + 0x20]
  9735: 7b 18 48                 u64 [sp + 0x48] = a1
  9738: 82 75 28                 s0 = u64 [a0 + 0x28]
  9741: 81 77 30                 a0 = i32 [a0 + 0x30]
  9744: 7b 17 40                 u64 [sp + 0x40] = a0
  9747: 95 66 01                 s1 = s1 + 0x1
  9750: 01                       fallthrough
      :                          @538
  9751: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  9754: 51 06 28                 jump @543 if s1 == 0
      :                          @539
  9757: 82 59 20                 a2 = u64 [s0 + 0x20]
  9760: 82 17 48                 a0 = u64 [sp + 0x48]
  9763: 82 18 40                 a1 = u64 [sp + 0x40]
  9766: b4 90 02 b2 00           ra = 178, jump [a2]
      :                          @540 [@dyn 89]
  9771: 51 07 ec                 jump @538 if a0 == 0
      :                          @541
  9774: 33 08 01                 a1 = 0x1
  9777: 01                       fallthrough
      :                          @542
  9778: 64 87                    a0 = a1
  9780: 82 10 60                 ra = u64 [sp + 0x60]
  9783: 82 15 58                 s0 = u64 [sp + 0x58]
  9786: 82 16 50                 s1 = u64 [sp + 0x50]
  9789: 95 11 68                 sp = sp + 0x68
  9792: 32 00                    ret
      :                          @543
  9794: 82 16 48                 s1 = u64 [sp + 0x48]
  9797: 64 67                    a0 = s1
  9799: 64 58                    a1 = s0
  9801: 82 19 18                 a2 = u64 [sp + 0x18]
  9804: 82 1a 38                 a3 = u64 [sp + 0x38]
  9807: 82 1b 30                 a4 = u64 [sp + 0x30]
  9810: 50 20 b4 00 8e 00        ra = 180, jump @557
      :                          @544 [@dyn 90]
  9816: 33 08 01                 a1 = 0x1
  9819: 52 07 d7                 jump @542 if a0 != 0
      :                          @545
  9822: 82 5a 18                 a3 = u64 [s0 + 0x18]
  9825: 64 67                    a0 = s1
  9827: 82 18 20                 a1 = u64 [sp + 0x20]
  9830: 82 19 28                 a2 = u64 [sp + 0x28]
  9833: b4 a0 02 b6 00           ra = 182, jump [a3]
      :                          @546 [@dyn 91]
  9838: 33 08 01                 a1 = 0x1
  9841: 52 07 c1                 jump @542 if a0 != 0
      :                          @547
  9844: 82 17 10                 a0 = u64 [sp + 0x10]
  9847: 9a 77                    a0 = -a0
  9849: 7b 17 38                 u64 [sp + 0x38] = a0
  9852: 33 06 ff                 s1 = 0xffffffffffffffff
  9855: 01                       fallthrough
      :                          @548
  9856: 82 17 38                 a0 = u64 [sp + 0x38]
  9859: c8 67 07                 a0 = a0 + s1
  9862: 51 17 ff 45              jump @555 if a0 == 4294967295
      :                          @549
  9866: 82 59 20                 a2 = u64 [s0 + 0x20]
  9869: 82 17 48                 a0 = u64 [sp + 0x48]
  9872: 82 18 40                 a1 = u64 [sp + 0x40]
  9875: b4 90 02 b8 00           ra = 184, jump [a2]
      :                          @550 [@dyn 92]
  9880: 95 66 01                 s1 = s1 + 0x1
  9883: 51 07 e5                 jump @548 if a0 == 0
      :                          @551
  9886: 28 39                    jump @556
      :                          @552
  9888: 82 6a 18                 a3 = u64 [s1 + 0x18]
  9891: 82 17 48                 a0 = u64 [sp + 0x48]
  9894: 82 18 20                 a1 = u64 [sp + 0x20]
  9897: 82 19 28                 a2 = u64 [sp + 0x28]
  9900: b4 a0 02 ba 00           ra = 186, jump [a3]
      :                          @553 [@dyn 93]
  9905: 33 08 01                 a1 = 0x1
  9908: 52 07 7e ff              jump @542 if a0 != 0
      :                          @554
  9912: 33 08                    a1 = 0
  9914: 82 16                    s1 = u64 [sp]
  9916: 82 17 10                 a0 = u64 [sp + 0x10]
  9919: 7a 67 30                 u32 [s1 + 0x30] = a0
  9922: 82 17 08                 a0 = u64 [sp + 0x8]
  9925: 78 67 38                 u8 [s1 + 0x38] = a0
  9928: 28 6a ff                 jump @542
      :                          @555
  9931: 82 16 10                 s1 = u64 [sp + 0x10]
  9934: 82 17 10                 a0 = u64 [sp + 0x10]
  9937: d8 76 08                 a1 = s1 <u a0
  9940: 28 5e ff                 jump @542
      :                          @556
  9943: 82 17 10                 a0 = u64 [sp + 0x10]
  9946: d8 76 08                 a1 = s1 <u a0
  9949: 28 55 ff                 jump @542
      :                          @557
  9952: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  9955: 7b 10 20                 u64 [sp + 0x20] = ra
  9958: 7b 15 18                 u64 [sp + 0x18] = s0
  9961: 7b 16 10                 u64 [sp + 0x10] = s1
  9964: 83 9c                    i32 a5 = a2 + 0
  9966: 33 02 00 00 11           t0 = 0x110000
  9971: 64 a6                    s1 = a3
  9973: 64 85                    s0 = a1
  9975: 64 7a                    a3 = a0
  9977: aa 2c 21                 jump @560 if a5 == t0
      :                          @558
  9980: 82 5c 20                 a5 = u64 [s0 + 0x20]
  9983: 64 a7                    a0 = a3
  9985: 64 98                    a1 = a2
  9987: 7b 1b 08                 u64 [sp + 0x8] = a4
  9990: 7b 1a                    u64 [sp] = a3
  9992: b4 c0 02 bc 00           ra = 188, jump [a5]
      :                          @559 [@dyn 94]
  9997: 82 1a                    a3 = u64 [sp]
  9999: 82 1b 08                 a4 = u64 [sp + 0x8]
 10002: 64 78                    a1 = a0
 10004: 33 07 01                 a0 = 0x1
 10007: 52 08 20                 jump @563 if a1 != 0
      :                          @560
 10010: 51 06 1a                 jump @562 if s1 == 0
      :                          @561
 10013: 82 5c 18                 a5 = u64 [s0 + 0x18]
 10016: 64 a7                    a0 = a3
 10018: 64 68                    a1 = s1
 10020: 64 b9                    a2 = a4
 10022: 82 10 20                 ra = u64 [sp + 0x20]
 10025: 82 15 18                 s0 = u64 [sp + 0x18]
 10028: 82 16 10                 s1 = u64 [sp + 0x10]
 10031: 95 11 28                 sp = sp + 0x28
 10034: 32 0c                    jump [a5]
      :                          @562
 10036: 33 07                    a0 = 0
 10038: 01                       fallthrough
      :                          @563
 10039: 82 10 20                 ra = u64 [sp + 0x20]
 10042: 82 15 18                 s0 = u64 [sp + 0x18]
 10045: 82 16 10                 s1 = u64 [sp + 0x10]
 10048: 95 11 28                 sp = sp + 0x28
 10051: 32 00                    ret
      :                          @564
 10053: 95 11 78 ff              sp = sp + 0xffffffffffffff78
 10057: 7b 10 80 00              u64 [sp + 0x80] = ra
 10061: 7b 15 78                 u64 [sp + 0x78] = s0
 10064: 7b 16 70                 u64 [sp + 0x70] = s1
 10067: 49 11 60 20              u64 [sp + 96] = 0x20
 10071: 33 0a 03                 a3 = 0x3
 10074: 78 1a 68                 u8 [sp + 0x68] = a3
 10077: 82 96 20                 s1 = u64 [a2 + 0x20]
 10080: 49 11 30                 u64 [sp + 48] = 0
 10083: 49 11 40                 u64 [sp + 64] = 0
 10086: 7b 17 50                 u64 [sp + 0x50] = a0
 10089: 7b 18 58                 u64 [sp + 0x58] = a1
 10092: 51 06 0a 01              jump @586 if s1 == 0
      :                          @565
 10096: 82 97 28                 a0 = u64 [a2 + 0x28]
 10099: 51 07 79 01              jump @596 if a0 == 0
      :                          @566
 10103: 49 11 28                 u64 [sp + 40] = 0
 10106: 82 95                    s0 = u64 [a2]
 10108: 7b 19 08                 u64 [sp + 0x8] = a2
 10111: 82 98 10                 a1 = u64 [a2 + 0x10]
 10114: 7b 18 18                 u64 [sp + 0x18] = a1
 10117: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 10120: 97 88 03                 a1 = a1 << 0x3
 10123: 98 88 03                 a1 = a1 >> 0x3
 10126: 95 88 01                 a1 = a1 + 0x1
 10129: 7b 18                    u64 [sp] = a1
 10131: 95 55 08                 s0 = s0 + 0x8
 10134: 96 78 38                 a1 = a0 * 0x38
 10137: 95 66 18                 s1 = s1 + 0x18
 10140: 33 07 a6 00              a0 = 0xa6
 10144: 7b 17 10                 u64 [sp + 0x10] = a0
 10147: 01                       fallthrough
      :                          @567
 10148: 7b 18 20                 u64 [sp + 0x20] = a1
 10151: 82 59                    a2 = u64 [s0]
 10153: 51 09 18                 jump @570 if a2 == 0
      :                          @568
 10156: 82 1a 58                 a3 = u64 [sp + 0x58]
 10159: 82 17 50                 a0 = u64 [sp + 0x50]
 10162: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
 10165: 82 aa 18                 a3 = u64 [a3 + 0x18]
 10168: b4 a0 02 be 00           ra = 190, jump [a3]
      :                          @569 [@dyn 95]
 10173: 52 07 55 01              jump @599 if a0 != 0
      :                          @570
 10177: 81 67 10                 a0 = i32 [s1 + 0x10]
 10180: 7a 17 60                 u32 [sp + 0x60] = a0
 10183: 7c 67 18                 a0 = u8 [s1 + 0x18]
 10186: 78 17 68                 u8 [sp + 0x68] = a0
 10189: 81 67 14                 a0 = i32 [s1 + 0x14]
 10192: 7a 17 64                 u32 [sp + 0x64] = a0
 10195: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
 10198: 82 67                    a0 = u64 [s1]
 10200: 51 08 26                 jump @575 if a1 == 0
      :                          @571
 10203: 52 18 01 16              jump @573 if a1 != 1
      :                          @572
 10207: 97 77 04                 a0 = a0 << 0x4
 10210: 82 18 18                 a1 = u64 [sp + 0x18]
 10213: c8 87 07                 a0 = a0 + a1
 10216: 82 78 08                 a1 = u64 [a0 + 0x8]
 10219: 82 19 10                 a2 = u64 [sp + 0x10]
 10222: aa 98 07                 jump @574 if a1 == a2
      :                          @573
 10225: 33 08                    a1 = 0
 10227: 28 0f                    jump @576
      :                          @574
 10229: 82 77                    a0 = u64 [a0]
 10231: 82 77                    a0 = u64 [a0]
 10233: 33 08 01                 a1 = 0x1
 10236: 28 06                    jump @576
      :                          @575
 10238: 33 08 01                 a1 = 0x1
 10241: 01                       fallthrough
      :                          @576
 10242: 7b 18 30                 u64 [sp + 0x30] = a1
 10245: 7b 17 38                 u64 [sp + 0x38] = a0
 10248: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
 10251: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
 10254: 51 08 26                 jump @581 if a1 == 0
      :                          @577
 10257: 52 18 01 16              jump @579 if a1 != 1
      :                          @578
 10261: 97 77 04                 a0 = a0 << 0x4
 10264: 82 18 18                 a1 = u64 [sp + 0x18]
 10267: c8 87 07                 a0 = a0 + a1
 10270: 82 78 08                 a1 = u64 [a0 + 0x8]
 10273: 82 19 10                 a2 = u64 [sp + 0x10]
 10276: aa 98 07                 jump @580 if a1 == a2
      :                          @579
 10279: 33 08                    a1 = 0
 10281: 28 0f                    jump @582
      :                          @580
 10283: 82 77                    a0 = u64 [a0]
 10285: 82 77                    a0 = u64 [a0]
 10287: 33 08 01                 a1 = 0x1
 10290: 28 06                    jump @582
      :                          @581
 10292: 33 08 01                 a1 = 0x1
 10295: 01                       fallthrough
      :                          @582
 10296: 7b 18 40                 u64 [sp + 0x40] = a1
 10299: 7b 17 48                 u64 [sp + 0x48] = a0
 10302: 82 67 08                 a0 = u64 [s1 + 0x8]
 10305: 97 77 04                 a0 = a0 << 0x4
 10308: 82 18 18                 a1 = u64 [sp + 0x18]
 10311: c8 78 08                 a1 = a1 + a0
 10314: 82 87                    a0 = u64 [a1]
 10316: 82 89 08                 a2 = u64 [a1 + 0x8]
 10319: 95 18 30                 a1 = sp + 0x30
 10322: b4 90 02 c0 00           ra = 192, jump [a2]
      :                          @583 [@dyn 96]
 10327: 52 07 bb 00              jump @599 if a0 != 0
      :                          @584
 10331: 95 55 10                 s0 = s0 + 0x10
 10334: 82 18 20                 a1 = u64 [sp + 0x20]
 10337: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
 10340: 95 66 38                 s1 = s1 + 0x38
 10343: 82 17 28                 a0 = u64 [sp + 0x28]
 10346: 95 77 01                 a0 = a0 + 0x1
 10349: 7b 17 28                 u64 [sp + 0x28] = a0
 10352: 52 08 34 ff              jump @567 if a1 != 0
      :                          @585
 10356: 28 6b                    jump @594
      :                          @586
 10358: 82 97 18                 a0 = u64 [a2 + 0x18]
 10361: 51 07 73                 jump @596 if a0 == 0
      :                          @587
 10364: 82 95 10                 s0 = u64 [a2 + 0x10]
 10367: 33 0a                    a3 = 0
 10369: 97 78 04                 a1 = a0 << 0x4
 10372: c8 58 08                 a1 = a1 + s0
 10375: 7b 18 20                 u64 [sp + 0x20] = a1
 10378: 7b 19 08                 u64 [sp + 0x8] = a2
 10381: 82 96                    s1 = u64 [a2]
 10383: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 10386: 97 77 04                 a0 = a0 << 0x4
 10389: 98 77 04                 a0 = a0 >> 0x4
 10392: 95 77 01                 a0 = a0 + 0x1
 10395: 7b 17                    u64 [sp] = a0
 10397: 95 66 08                 s1 = s1 + 0x8
 10400: 01                       fallthrough
      :                          @588
 10401: 7b 1a 28                 u64 [sp + 0x28] = a3
 10404: 82 69                    a2 = u64 [s1]
 10406: 51 09 17                 jump @591 if a2 == 0
      :                          @589
 10409: 82 1a 58                 a3 = u64 [sp + 0x58]
 10412: 82 17 50                 a0 = u64 [sp + 0x50]
 10415: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
 10418: 82 aa 18                 a3 = u64 [a3 + 0x18]
 10421: b4 a0 02 c2 00           ra = 194, jump [a3]
      :                          @590 [@dyn 97]
 10426: 52 07 58                 jump @599 if a0 != 0
      :                          @591
 10429: 82 57                    a0 = u64 [s0]
 10431: 82 59 08                 a2 = u64 [s0 + 0x8]
 10434: 95 18 30                 a1 = sp + 0x30
 10437: b4 90 02 c4 00           ra = 196, jump [a2]
      :                          @592 [@dyn 98]
 10442: 52 07 48                 jump @599 if a0 != 0
      :                          @593
 10445: 95 66 10                 s1 = s1 + 0x10
 10448: 95 55 10                 s0 = s0 + 0x10
 10451: 82 1a 28                 a3 = u64 [sp + 0x28]
 10454: 95 aa 01                 a3 = a3 + 0x1
 10457: 82 17 20                 a0 = u64 [sp + 0x20]
 10460: ab 75 c5                 jump @588 if s0 != a0
      :                          @594
 10463: 82 19 08                 a2 = u64 [sp + 0x8]
 10466: 82 1a                    a3 = u64 [sp]
 10468: 82 97 08                 a0 = u64 [a2 + 0x8]
 10471: ac 7a 0d                 jump @597 if a3 <u a0
      :                          @595
 10474: 28 2d                    jump @600
      :                          @596
 10476: 33 0a                    a3 = 0
 10478: 82 97 08                 a0 = u64 [a2 + 0x8]
 10481: 54 07 26                 jump @600 if a0 <=u 0
      :                          @597
 10484: 82 97                    a0 = u64 [a2]
 10486: 97 a8 04                 a1 = a3 << 0x4
 10489: c8 87 09                 a2 = a0 + a1
 10492: 82 1a 58                 a3 = u64 [sp + 0x58]
 10495: 82 17 50                 a0 = u64 [sp + 0x50]
 10498: 82 98                    a1 = u64 [a2]
 10500: 82 99 08                 a2 = u64 [a2 + 0x8]
 10503: 82 aa 18                 a3 = u64 [a3 + 0x18]
 10506: b4 a0 02 c6 00           ra = 198, jump [a3]
      :                          @598 [@dyn 99]
 10511: 51 07 08                 jump @600 if a0 == 0
      :                          @599
 10514: 33 07 01                 a0 = 0x1
 10517: 28 05                    jump @601
      :                          @600
 10519: 33 07                    a0 = 0
 10521: 01                       fallthrough
      :                          @601
 10522: 82 10 80 00              ra = u64 [sp + 0x80]
 10526: 82 15 78                 s0 = u64 [sp + 0x78]
 10529: 82 16 70                 s1 = u64 [sp + 0x70]
 10532: 95 11 88 00              sp = sp + 0x88
 10536: 32 00                    ret
      :                          @602 [@dyn 100]
 10538: 32 00                    ret
      :                          @603 [@dyn 101]
 10540: 95 11 80                 sp = sp + 0xffffffffffffff80
 10543: 7b 10 78                 u64 [sp + 0x78] = ra
 10546: 7b 15 70                 u64 [sp + 0x70] = s0
 10549: 7b 16 68                 u64 [sp + 0x68] = s1
 10552: 64 92                    t0 = a2
 10554: 33 00                    ra = 0
 10556: 33 0b                    a4 = 0
 10558: 33 05                    s0 = 0
 10560: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
 10570: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
 10576: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
 10586: 82 79 10                 a2 = u64 [a0 + 0x10]
 10589: 7b 19 48                 u64 [sp + 0x48] = a2
 10592: 82 79                    a2 = u64 [a0]
 10594: 7b 19 38                 u64 [sp + 0x38] = a2
 10597: 82 77 08                 a0 = u64 [a0 + 0x8]
 10600: 7b 17 30                 u64 [sp + 0x30] = a0
 10603: 33 07 38 01 01           a0 = 0x10138
 10608: 7b 17 08                 u64 [sp + 0x8] = a0
 10611: 3a 07 58 00 03           a0 = u64 [0x30058]
 10616: 7b 17 60                 u64 [sp + 0x60] = a0
 10619: 7b 18 58                 u64 [sp + 0x58] = a1
 10622: 95 88 08                 a1 = a1 + 0x8
 10625: 7b 18                    u64 [sp] = a1
 10627: 33 0c 0a                 a5 = 0xa
 10630: 7b 12 20                 u64 [sp + 0x20] = t0
 10633: 7b 13 18                 u64 [sp + 0x18] = t1
 10636: 7b 14 10                 u64 [sp + 0x10] = t2
 10639: 28 3b                    jump @607
      :                          @604
 10641: 64 06                    s1 = ra
 10643: c8 89 07                 a0 = a2 + a1
 10646: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
 10649: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
 10652: 88 77 01                 a0 = a0 <u 0x1
 10655: 01                       fallthrough
      :                          @605
 10656: 82 1a 48                 a3 = u64 [sp + 0x48]
 10659: 78 a7                    u8 [a3] = a0
 10661: 82 17 30                 a0 = u64 [sp + 0x30]
 10664: 82 7a 18                 a3 = u64 [a0 + 0x18]
 10667: 82 17 38                 a0 = u64 [sp + 0x38]
 10670: b4 a0 02 cc 00           ra = 204, jump [a3]
      :                          @606 [@dyn 102]
 10675: 64 5b                    a4 = s0
 10677: 82 12 20                 t0 = u64 [sp + 0x20]
 10680: 82 13 18                 t1 = u64 [sp + 0x18]
 10683: 82 14 10                 t2 = u64 [sp + 0x10]
 10686: 64 60                    ra = s1
 10688: 33 0c 0a                 a5 = 0xa
 10691: 82 15 40                 s0 = u64 [sp + 0x40]
 10694: 52 07 64 01              jump @648 if a0 != 0
      :                          @607
 10698: 84 57 ff 00              a0 = s0 & 0xff
 10702: 52 07 58 01              jump @647 if a0 != 0
      :                          @608
 10706: 7b 1b 50                 u64 [sp + 0x50] = a4
 10709: ae 02 0a                 jump @611 if t0 >=u ra
      :                          @609
 10712: 28 ef 00                 jump @638
      :                          @610
 10715: ac 02 ec 00              jump @638 if t0 <u ra
      :                          @611
 10719: c9 02 08                 a1 = t0 - ra
 10722: 82 16 58                 s1 = u64 [sp + 0x58]
 10725: c8 06 06                 s1 = s1 + ra
 10728: 55 18 10 1d              jump @617 if a1 >=u 16
      :                          @612
 10732: aa 02 d8 00              jump @637 if t0 == ra
      :                          @613
 10736: 33 0a                    a3 = 0
 10738: 01                       fallthrough
      :                          @614
 10739: c8 a6 07                 a0 = s1 + a3
 10742: 7c 77                    a0 = u8 [a0]
 10744: aa c7 a5 00              jump @632 if a0 == a5
      :                          @615
 10748: 95 aa 01                 a3 = a3 + 0x1
 10751: ab a8 f4                 jump @614 if a1 != a3
      :                          @616
 10754: 28 c2 00                 jump @637
      :                          @617
 10757: 95 69 07                 a2 = s1 + 0x7
 10760: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
 10763: c9 6a 07                 a0 = a3 - s1
 10766: d3 6a 0a                 a3 = a3 ^ s1
 10769: 88 aa 01                 a3 = a3 <u 0x1
 10772: 88 7b 01                 a4 = a0 <u 0x1
 10775: d4 ba 0a                 a3 = a3 | a4
 10778: 51 0a 45                 jump @623 if a3 == 0
      :                          @618
 10781: 33 07                    a0 = 0
 10783: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
 10786: 82 1b                    a4 = u64 [sp]
 10788: c8 0b 0b                 a4 = a4 + ra
 10791: 28 08                    jump @620
      :                          @619
 10793: 82 1b                    a4 = u64 [sp]
 10795: c8 0b 0b                 a4 = a4 + ra
 10798: 01                       fallthrough
      :                          @620
 10799: c8 76 0c                 a5 = s1 + a0
 10802: 82 cc                    a5 = u64 [a5]
 10804: c8 7b 09                 a2 = a4 + a0
 10807: 82 99                    a2 = u64 [a2]
 10809: d3 4c 05                 s0 = a5 ^ t2
 10812: c8 35 05                 s0 = s0 + t1
 10815: e0 c5 0c                 a5 = s0 & ~a5
 10818: d3 49 05                 s0 = a2 ^ t2
 10821: c8 35 05                 s0 = s0 + t1
 10824: e0 95 09                 a2 = s0 & ~a2
 10827: d4 c9 09                 a2 = a2 | a5
 10830: 82 1c 60                 a5 = u64 [sp + 0x60]
 10833: d2 c9 09                 a2 = a2 & a5
 10836: 52 09 1f                 jump @626 if a2 != 0
      :                          @621
 10839: 95 77 10                 a0 = a0 + 0x10
 10842: ae 7a d5                 jump @620 if a3 >=u a0
      :                          @622
 10845: 28 16                    jump @626
      :                          @623
 10847: c8 a6 0b                 a4 = s1 + a3
 10850: 7c bb                    a4 = u8 [a4]
 10852: aa cb 51                 jump @635 if a4 == a5
      :                          @624
 10855: 95 aa 01                 a3 = a3 + 0x1
 10858: ab a7 f5                 jump @623 if a0 != a3
      :                          @625
 10861: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
 10864: ae 7a b9                 jump @619 if a3 >=u a0
      :                          @626
 10867: aa 87 9b 00              jump @644 if a0 == a1
      :                          @627
 10871: 33 0a                    a3 = 0
 10873: c8 76 06                 s1 = s1 + a0
 10876: c9 72 08                 a1 = t0 - a0
 10879: c9 08 08                 a1 = a1 - ra
 10882: 33 0c 0a                 a5 = 0xa
 10885: 82 1b 50                 a4 = u64 [sp + 0x50]
 10888: 01                       fallthrough
      :                          @628
 10889: c8 a6 09                 a2 = s1 + a3
 10892: 7c 99                    a2 = u8 [a2]
 10894: aa c9 0b                 jump @631 if a2 == a5
      :                          @629
 10897: 95 aa 01                 a3 = a3 + 0x1
 10900: ab a8 f5                 jump @628 if a1 != a3
      :                          @630
 10903: 28 2d                    jump @637
      :                          @631
 10905: c8 7a 0a                 a3 = a3 + a0
 10908: 01                       fallthrough
      :                          @632
 10909: c8 0a 0a                 a3 = a3 + ra
 10912: 95 a0 01                 ra = a3 + 0x1
 10915: ae 2a 38 ff              jump @610 if a3 >=u t0
      :                          @633
 10919: 82 17 58                 a0 = u64 [sp + 0x58]
 10922: c8 7a 0a                 a3 = a3 + a0
 10925: 7c a7                    a0 = u8 [a3]
 10927: ab c7 2c ff              jump @610 if a0 != a5
      :                          @634
 10931: 28 62                    jump @645
      :                          @635
 10933: 82 1b 50                 a4 = u64 [sp + 0x50]
 10936: c8 0a 0a                 a3 = a3 + ra
 10939: 95 a0 01                 ra = a3 + 0x1
 10942: ac 2a e9                 jump @633 if a3 <u t0
      :                          @636
 10945: 28 1a ff                 jump @610
      :                          @637
 10948: 64 20                    ra = t0
 10950: 01                       fallthrough
      :                          @638
 10951: 49 11 40 01              u64 [sp + 64] = 0x1
 10955: 64 b5                    s0 = a4
 10957: 64 26                    s1 = t0
 10959: aa 2b 57                 jump @647 if a4 == t0
      :                          @639
 10962: 82 17 48                 a0 = u64 [sp + 0x48]
 10965: 7c 77                    a0 = u8 [a0]
 10967: 51 07 23                 jump @642 if a0 == 0
      :                          @640
 10970: 82 17 30                 a0 = u64 [sp + 0x30]
 10973: 82 7a 18                 a3 = u64 [a0 + 0x18]
 10976: 33 09 04                 a2 = 0x4
 10979: 82 17 38                 a0 = u64 [sp + 0x38]
 10982: 82 18 08                 a1 = u64 [sp + 0x8]
 10985: 7b 10 28                 u64 [sp + 0x28] = ra
 10988: b4 a0 02 ce 00           ra = 206, jump [a3]
      :                          @641 [@dyn 103]
 10993: 82 1b 50                 a4 = u64 [sp + 0x50]
 10996: 82 10 28                 ra = u64 [sp + 0x28]
 10999: 52 07 33                 jump @648 if a0 != 0
      :                          @642
 11002: c9 b6 09                 a2 = s1 - a4
 11005: 82 18 58                 a1 = u64 [sp + 0x58]
 11008: c8 b8 08                 a1 = a1 + a4
 11011: ab b6 8e fe              jump @604 if s1 != a4
      :                          @643
 11015: 64 06                    s1 = ra
 11017: 33 07                    a0 = 0
 11019: 28 95 fe                 jump @605
      :                          @644
 11022: 64 20                    ra = t0
 11024: 82 1b 50                 a4 = u64 [sp + 0x50]
 11027: 28 b4                    jump @638
      :                          @645
 11029: 49 11 40                 u64 [sp + 64] = 0
 11032: 64 05                    s0 = ra
 11034: 64 06                    s1 = ra
 11036: 82 17 48                 a0 = u64 [sp + 0x48]
 11039: 7c 77                    a0 = u8 [a0]
 11041: 52 07 b9                 jump @640 if a0 != 0
      :                          @646
 11044: 28 d6                    jump @642
      :                          @647
 11046: 33 07                    a0 = 0
 11048: 28 06                    jump @649
      :                          @648
 11050: 33 07 01                 a0 = 0x1
 11053: 01                       fallthrough
      :                          @649
 11054: 82 10 78                 ra = u64 [sp + 0x78]
 11057: 82 15 70                 s0 = u64 [sp + 0x70]
 11060: 82 16 68                 s1 = u64 [sp + 0x68]
 11063: 95 11 80 00              sp = sp + 0x80
 11067: 32 00                    ret
      :                          @650 [@dyn 104]
 11069: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 11072: 7b 10 20                 u64 [sp + 0x20] = ra
 11075: 7b 15 18                 u64 [sp + 0x18] = s0
 11078: 7b 16 10                 u64 [sp + 0x10] = s1
 11081: 82 75 10                 s0 = u64 [a0 + 0x10]
 11084: 7c 59                    a2 = u8 [s0]
 11086: 82 7b                    a4 = u64 [a0]
 11088: 82 76 08                 s1 = u64 [a0 + 0x8]
 11091: 51 09 33                 jump @654 if a2 == 0
      :                          @651
 11094: 82 6a 18                 a3 = u64 [s1 + 0x18]
 11097: 7b 18 08                 u64 [sp + 0x8] = a1
 11100: 33 08 38 01 01           a1 = 0x10138
 11105: 33 09 04                 a2 = 0x4
 11108: 64 b7                    a0 = a4
 11110: 7b 1b                    u64 [sp] = a4
 11112: b4 a0 02 d2 00           ra = 210, jump [a3]
      :                          @652 [@dyn 105]
 11117: 82 18 08                 a1 = u64 [sp + 0x8]
 11120: 82 1b                    a4 = u64 [sp]
 11122: 51 07 14                 jump @654 if a0 == 0
      :                          @653
 11125: 33 07 01                 a0 = 0x1
 11128: 82 10 20                 ra = u64 [sp + 0x20]
 11131: 82 15 18                 s0 = u64 [sp + 0x18]
 11134: 82 16 10                 s1 = u64 [sp + 0x10]
 11137: 95 11 28                 sp = sp + 0x28
 11140: 32 00                    ret
      :                          @654
 11142: 83 87                    i32 a0 = a1 + 0
 11144: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
 11147: 88 77 01                 a0 = a0 <u 0x1
 11150: 78 57                    u8 [s0] = a0
 11152: 82 6c 20                 a5 = u64 [s1 + 0x20]
 11155: 64 b7                    a0 = a4
 11157: 82 10 20                 ra = u64 [sp + 0x20]
 11160: 82 15 18                 s0 = u64 [sp + 0x18]
 11163: 82 16 10                 s1 = u64 [sp + 0x10]
 11166: 95 11 28                 sp = sp + 0x28
 11169: 32 0c                    jump [a5]
      :                          @655 [@dyn 106]
 11171: 64 8a                    a3 = a1
 11173: 33 08 08 01 01           a1 = 0x10108
 11178: 64 a9                    a2 = a3
 11180: 28 99 fb                 jump @564
      :                          @656 [@dyn 107]
 11183: 80 77                    a0 = u32 [a0]
 11185: 28 f3 f7                 jump @502
      :                          @657
 11188: 00                       trap
      :                          @658
 11189: 95 11 70 ff              sp = sp + 0xffffffffffffff70
 11193: 7b 10 88 00              u64 [sp + 0x88] = ra
 11197: 7b 15 80 00              u64 [sp + 0x80] = s0
 11201: 7b 16 78                 u64 [sp + 0x78] = s1
 11204: 64 75                    s0 = a0
 11206: 7c 77 08                 a0 = u8 [a0 + 0x8]
 11209: 64 8b                    a4 = a1
 11211: 33 08 01                 a1 = 0x1
 11214: 33 06 01                 s1 = 0x1
 11217: 51 07 1d                 jump @660 if a0 == 0
      :                          @659
 11220: 78 56 08                 u8 [s0 + 0x8] = s1
 11223: 46 15 09 01              u8 [s0 + 9] = 0x1
 11227: 64 57                    a0 = s0
 11229: 82 10 88 00              ra = u64 [sp + 0x88]
 11233: 82 15 80 00              s0 = u64 [sp + 0x80]
 11237: 82 16 78                 s1 = u64 [sp + 0x78]
 11240: 95 11 90 00              sp = sp + 0x90
 11244: 32 00                    ret
      :                          @660
 11246: 64 9a                    a3 = a2
 11248: 82 5c                    a5 = u64 [s0]
 11250: 80 c7 34                 a0 = u32 [a5 + 0x34]
 11253: 7c 58 09                 a1 = u8 [s0 + 0x9]
 11256: 84 79 04                 a2 = a0 & 0x4
 11259: 52 09 45                 jump @666 if a2 != 0
      :                          @661
 11262: 51 08 32                 jump @664 if a1 == 0
      :                          @662
 11265: 82 c8 28                 a1 = u64 [a5 + 0x28]
 11268: 82 c7 20                 a0 = u64 [a5 + 0x20]
 11271: 82 83 18                 t1 = u64 [a1 + 0x18]
 11274: 33 08 3c 01 01           a1 = 0x1013c
 11279: 33 09 02                 a2 = 0x2
 11282: 64 a6                    s1 = a3
 11284: 7b 1b 10                 u64 [sp + 0x10] = a4
 11287: 7b 1c 08                 u64 [sp + 0x8] = a5
 11290: b4 30 02 d8 00           ra = 216, jump [t1]
      :                          @663 [@dyn 108]
 11295: 82 1c 08                 a5 = u64 [sp + 0x8]
 11298: 82 1b 10                 a4 = u64 [sp + 0x10]
 11301: 64 6a                    a3 = s1
 11303: 33 08 01                 a1 = 0x1
 11306: 33 06 01                 s1 = 0x1
 11309: 52 07 a7                 jump @659 if a0 != 0
      :                          @664
 11312: 64 b7                    a0 = a4
 11314: 64 c8                    a1 = a5
 11316: b4 a0 02 da 00           ra = 218, jump [a3]
      :                          @665 [@dyn 109]
 11321: 33 08 01                 a1 = 0x1
 11324: 64 76                    s1 = a0
 11326: 28 96                    jump @659
      :                          @666
 11328: 52 08 37                 jump @670 if a1 != 0
      :                          @667
 11331: 82 c8 28                 a1 = u64 [a5 + 0x28]
 11334: 82 c7 20                 a0 = u64 [a5 + 0x20]
 11337: 82 83 18                 t1 = u64 [a1 + 0x18]
 11340: 33 08 40 01 01           a1 = 0x10140
 11345: 33 09 01                 a2 = 0x1
 11348: 33 06 01                 s1 = 0x1
 11351: 7b 1a                    u64 [sp] = a3
 11353: 7b 1b 10                 u64 [sp + 0x10] = a4
 11356: 7b 1c 08                 u64 [sp + 0x8] = a5
 11359: b4 30 02 dc 00           ra = 220, jump [t1]
      :                          @668 [@dyn 110]
 11364: 82 1c 08                 a5 = u64 [sp + 0x8]
 11367: 82 1b 10                 a4 = u64 [sp + 0x10]
 11370: 82 1a                    a3 = u64 [sp]
 11372: 33 08 01                 a1 = 0x1
 11375: 52 07 65 ff              jump @659 if a0 != 0
      :                          @669
 11379: 81 c7 34                 a0 = i32 [a5 + 0x34]
 11382: 01                       fallthrough
      :                          @670
 11383: 33 06 01                 s1 = 0x1
 11386: 78 16 37                 u8 [sp + 0x37] = s1
 11389: 82 c8 20                 a1 = u64 [a5 + 0x20]
 11392: 82 c9 28                 a2 = u64 [a5 + 0x28]
 11395: 7b 18 18                 u64 [sp + 0x18] = a1
 11398: 7b 19 20                 u64 [sp + 0x20] = a2
 11401: 95 18 37                 a1 = sp + 0x37
 11404: 7b 18 28                 u64 [sp + 0x28] = a1
 11407: 81 c8 30                 a1 = i32 [a5 + 0x30]
 11410: 7c c9 38                 a2 = u8 [a5 + 0x38]
 11413: 82 c3                    t1 = u64 [a5]
 11415: 82 c4 08                 t2 = u64 [a5 + 0x8]
 11418: 82 c0 10                 ra = u64 [a5 + 0x10]
 11421: 82 c2 18                 t0 = u64 [a5 + 0x18]
 11424: 7a 17 6c                 u32 [sp + 0x6c] = a0
 11427: 7a 18 68                 u32 [sp + 0x68] = a1
 11430: 78 19 70                 u8 [sp + 0x70] = a2
 11433: 7b 13 38                 u64 [sp + 0x38] = t1
 11436: 7b 14 40                 u64 [sp + 0x40] = t2
 11439: 7b 10 48                 u64 [sp + 0x48] = ra
 11442: 7b 12 50                 u64 [sp + 0x50] = t0
 11445: 95 17 18                 a0 = sp + 0x18
 11448: 7b 17 58                 u64 [sp + 0x58] = a0
 11451: 33 07 08 01 01           a0 = 0x10108
 11456: 7b 17 60                 u64 [sp + 0x60] = a0
 11459: 95 18 38                 a1 = sp + 0x38
 11462: 64 b7                    a0 = a4
 11464: b4 a0 02 de 00           ra = 222, jump [a3]
      :                          @671 [@dyn 111]
 11469: 52 07 21                 jump @674 if a0 != 0
      :                          @672
 11472: 82 18 60                 a1 = u64 [sp + 0x60]
 11475: 82 17 58                 a0 = u64 [sp + 0x58]
 11478: 82 8a 18                 a3 = u64 [a1 + 0x18]
 11481: 33 08 3e 01 01           a1 = 0x1013e
 11486: 33 09 02                 a2 = 0x2
 11489: b4 a0 02 e0 00           ra = 224, jump [a3]
      :                          @673 [@dyn 112]
 11494: 64 76                    s1 = a0
 11496: 33 08 01                 a1 = 0x1
 11499: 28 e9 fe                 jump @659
      :                          @674
 11502: 33 08 01                 a1 = 0x1
 11505: 28 e3 fe                 jump @659
      :                          @675
 11508: 51 08 9b 00              jump @696 if a1 == 0
      :                          @676
 11512: 64 79                    a2 = a0
 11514: 7c 77                    a0 = u8 [a0]
 11516: 51 07 91 00              jump @695 if a0 == 0
      :                          @677
 11520: 51 27 ff 00 90 00        jump @697 if a0 == 255
      :                          @678
 11526: 6c 7a                    a3 = sext.b a0
 11528: 57 0a 09                 jump @680 if a3 <s 0
      :                          @679
 11531: 33 0a                    a3 = 0
 11533: 33 08                    a1 = 0
 11535: 28 73                    jump @694
      :                          @680
 11537: 55 27 c0 00 0d           jump @682 if a0 >=u 192
      :                          @681
 11542: 33 0a 01                 a3 = 0x1
 11545: 33 0b 80                 a4 = 0xffffffffffffff80
 11548: 28 4a                    jump @691
      :                          @682
 11550: 55 27 e0 00 0e           jump @684 if a0 >=u 224
      :                          @683
 11555: 33 0a 02                 a3 = 0x2
 11558: 33 0b 40 ff              a4 = 0xffffffffffffff40
 11562: 28 3c                    jump @691
      :                          @684
 11564: 55 27 f0 00 0e           jump @686 if a0 >=u 240
      :                          @685
 11569: 33 0a 03                 a3 = 0x3
 11572: 33 0b 20 ff              a4 = 0xffffffffffffff20
 11576: 28 2e                    jump @691
      :                          @686
 11578: 55 27 f8 00 0e           jump @688 if a0 >=u 248
      :                          @687
 11583: 33 0a 04                 a3 = 0x4
 11586: 33 0b 10 ff              a4 = 0xffffffffffffff10
 11590: 28 20                    jump @691
      :                          @688
 11592: 55 27 fc 00 0e           jump @690 if a0 >=u 252
      :                          @689
 11597: 33 0a 05                 a3 = 0x5
 11600: 33 0b 08 ff              a4 = 0xffffffffffffff08
 11604: 28 12                    jump @691
      :                          @690
 11606: 88 7a fe 00              a3 = a0 <u 0xfe
 11610: 33 0b 04 ff              a4 = 0xffffffffffffff04
 11614: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
 11618: 85 aa 07                 a3 = a3 ^ 0x7
 11621: 01                       fallthrough
      :                          @691
 11622: ae 8a 2b                 jump @698 if a3 >=u a1
      :                          @692
 11625: 33 08                    a1 = 0
 11627: c8 b7 07                 a0 = a0 + a4
 11630: 64 ab                    a4 = a3
 11632: 01                       fallthrough
      :                          @693
 11633: c8 b9 0c                 a5 = a2 + a4
 11636: 7c cc                    a5 = u8 [a5]
 11638: 97 88 08                 a1 = a1 << 0x8
 11641: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 11644: d4 c8 08                 a1 = a1 | a5
 11647: 52 0b f2                 jump @693 if a4 != 0
      :                          @694
 11650: 8a a9 03                 i32 a2 = a3 << 0x3
 11653: cf 97 07                 a0 = a0 << a2
 11656: c8 87 07                 a0 = a0 + a1
 11659: 32 00                    ret
      :                          @695
 11661: 32 00                    ret
      :                          @696
 11663: 00                       trap
      :                          @697
 11664: 00                       trap
      :                          @698
 11665: 00                       trap
