// RO data = 580/580 bytes
// RW data = 88/65648 bytes
// Stack size = 65536 bytes
// RO data = [97, 117, 116, 104, 95, 99, 111, 112, 121, 32, 105, 110, 112, 117, 116, 61, 0, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 97, 117, 116, 104, 95, 99, 111, 112, 121, 32, 110, 117, 109, 95, 111, 112, 115, 61, 0, 0, 0, 0, 0, 0, 32, 0, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 80, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 82, 0, 0, 0, 0, 0, 0, 0, 88, 0, 0, 0, 0, 0, 0, 0, 96, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 130, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 132, 0, 0, 0, 0, 0, 0, 0, 138, 0, 0, 0, 0, 0, 0, 0, 142, 0, 0, 0, 0, 0, 0, 0, 32, 32, 32, 32, 44, 32, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3, 11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4, 7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8, 9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13, 2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9, 12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11, 13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10, 6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5, 10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3]
// RW data = [40, 201, 189, 242, 103, 230, 9, 106, 59, 167, 202, 132, 133, 174, 103, 187, 43, 248, 148, 254, 114, 243, 110, 60, 241, 54, 29, 95, 58, 245, 79, 165, 209, 130, 230, 173, 127, 82, 14, 81, 31, 108, 62, 43, 140, 104, 5, 155, 107, 189, 65, 251, 171, 217, 131, 31, 121, 33, 126, 19, 25, 205, 224, 91, 8, 201, 188, 243, 103, 230, 9, 106, 75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 2699
// Code size = 8265 bytes

      :                          @0
     0: 28 89 04 00 00           jump @89
      :                          @1
     5: 28 80 0f 00 00           jump @239
      :                          @2
    10: 28 d6 11                 jump @285
      :                          @3
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 80 89 34                 a2 = u32 [a1 + 0x34]
    24: 84 9a 10                 a3 = a2 & 0x10
    27: 52 0a 16                 jump @6 if a3 != 0
      :                          @4
    30: 84 99 20                 a2 = a2 & 0x20
    33: 52 09 41                 jump @9 if a2 != 0
      :                          @5
    36: 7c 77                    a0 = u8 [a0]
    38: 82 10 80 00              ra = u64 [sp + 0x80]
    42: 95 11 88 00              sp = sp + 0x88
    46: 28 7d 17                 jump @425
      :                          @6
    49: 7c 77                    a0 = u8 [a0]
    51: 33 0b 81 00              a4 = 0x81
    55: 95 19 7f                 a2 = sp + 0x7f
    58: 33 02 57                 t0 = 0x57
    61: 01                       fallthrough
      :                          @7
    62: 64 bc                    a5 = a4
    64: 84 7b 0f                 a4 = a0 & 0xf
    67: 97 77 38                 a0 = a0 << 0x38
    70: 98 77 3c                 a0 = a0 >> 0x3c
    73: 88 b3 0a                 t1 = a4 <u 0xa
    76: 33 0a 30                 a3 = 0x30
    79: da 32 0a                 a3 = t0 if t1 == 0
    82: be ba 0a                 i32 a3 = a3 + a4
    85: 78 9a                    u8 [a2] = a3
    87: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
    90: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
    93: 52 07 e1                 jump @7 if a0 != 0
      :                          @8
    96: 28 31                    jump @11
      :                          @9
    98: 7c 77                    a0 = u8 [a0]
   100: 33 0b 81 00              a4 = 0x81
   104: 95 19 7f                 a2 = sp + 0x7f
   107: 33 02 37                 t0 = 0x37
   110: 01                       fallthrough
      :                          @10
   111: 64 bc                    a5 = a4
   113: 84 7b 0f                 a4 = a0 & 0xf
   116: 97 77 38                 a0 = a0 << 0x38
   119: 98 77 3c                 a0 = a0 >> 0x3c
   122: 88 b3 0a                 t1 = a4 <u 0xa
   125: 33 0a 30                 a3 = 0x30
   128: da 32 0a                 a3 = t0 if t1 == 0
   131: be ba 0a                 i32 a3 = a3 + a4
   134: 78 9a                    u8 [a2] = a3
   136: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
   139: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
   142: 52 07 e1                 jump @10 if a0 != 0
      :                          @11
   145: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   148: 56 27 80 00 27           jump @14 if a0 >u 128
      :                          @12
   153: 9a bb 81 00              a4 = 0x81 - a4
   157: 64 1a                    a3 = sp
   159: c8 7a 0a                 a3 = a3 + a0
   162: 33 09 02                 a2 = 0x2
   165: 64 87                    a0 = a1
   167: 33 08 ba 00 01           a1 = 0x100ba
   172: 50 10 02 26 18           ra = 2, jump @435
      :                          @13 [@dyn 1]
   177: 82 10 80 00              ra = u64 [sp + 0x80]
   181: 95 11 88 00              sp = sp + 0x88
   185: 32 00                    ret
      :                          @14
   187: 00                       trap
      :                          @15 [@dyn 2]
   188: 95 11 60 ff              sp = sp + 0xffffffffffffff60
   192: 7b 10 98 00              u64 [sp + 0x98] = ra
   196: 7b 15 90 00              u64 [sp + 0x90] = s0
   200: 7b 16 88 00              u64 [sp + 0x88] = s1
   204: 82 89 28                 a2 = u64 [a1 + 0x28]
   207: 82 7a                    a3 = u64 [a0]
   209: 7b 1a 18                 u64 [sp + 0x18] = a3
   212: 82 76 08                 s1 = u64 [a0 + 0x8]
   215: 7b 18 20                 u64 [sp + 0x20] = a1
   218: 82 87 20                 a0 = u64 [a1 + 0x20]
   221: 82 9a 18                 a3 = u64 [a2 + 0x18]
   224: 33 08 78 00 01           a1 = 0x10078
   229: 33 09 01                 a2 = 0x1
   232: 33 05 01                 s0 = 0x1
   235: b4 a0 01 06              ra = 6, jump [a3]
      :                          @16 [@dyn 3]
   239: 51 06 1e                 jump @21 if s1 == 0
      :                          @17
   242: 52 07 be 00              jump @28 if a0 != 0
      :                          @18
   246: 82 18 20                 a1 = u64 [sp + 0x20]
   249: 80 89 34                 a2 = u32 [a1 + 0x34]
   252: 84 97 04                 a0 = a2 & 0x4
   255: 52 07 16                 jump @22 if a0 != 0
      :                          @19
   258: 82 17 18                 a0 = u64 [sp + 0x18]
   261: 50 10 08 08 ff           ra = 8, jump @3
      :                          @20 [@dyn 4]
   266: 28 a3 00                 jump @27
      :                          @21
   269: 64 79                    a2 = a0
   271: 82 18 20                 a1 = u64 [sp + 0x20]
   274: 28 84 01                 jump @42
      :                          @22
   277: 7b 19 10                 u64 [sp + 0x10] = a2
   280: 82 89 28                 a2 = u64 [a1 + 0x28]
   283: 82 87 20                 a0 = u64 [a1 + 0x20]
   286: 7b 19 08                 u64 [sp + 0x8] = a2
   289: 82 9a 18                 a3 = u64 [a2 + 0x18]
   292: 33 08 b8 00 01           a1 = 0x100b8
   297: 33 09 01                 a2 = 0x1
   300: 33 05 01                 s0 = 0x1
   303: 7b 17                    u64 [sp] = a0
   305: b4 a0 01 0a              ra = 10, jump [a3]
      :                          @23 [@dyn 5]
   309: 52 07 7b                 jump @28 if a0 != 0
      :                          @24
   312: 33 05 01                 s0 = 0x1
   315: 78 15 47                 u8 [sp + 0x47] = s0
   318: 82 17                    a0 = u64 [sp]
   320: 7b 17 28                 u64 [sp + 0x28] = a0
   323: 82 17 08                 a0 = u64 [sp + 0x8]
   326: 7b 17 30                 u64 [sp + 0x30] = a0
   329: 95 17 47                 a0 = sp + 0x47
   332: 7b 17 38                 u64 [sp + 0x38] = a0
   335: 82 1c 20                 a5 = u64 [sp + 0x20]
   338: 81 c2 30                 t0 = i32 [a5 + 0x30]
   341: 7c c8 38                 a1 = u8 [a5 + 0x38]
   344: 82 c9                    a2 = u64 [a5]
   346: 82 ca 08                 a3 = u64 [a5 + 0x8]
   349: 82 cb 10                 a4 = u64 [a5 + 0x10]
   352: 82 cc 18                 a5 = u64 [a5 + 0x18]
   355: 82 17 10                 a0 = u64 [sp + 0x10]
   358: 7a 17 7c                 u32 [sp + 0x7c] = a0
   361: 7a 12 78                 u32 [sp + 0x78] = t0
   364: 78 18 80 00              u8 [sp + 0x80] = a1
   368: 7b 19 48                 u64 [sp + 0x48] = a2
   371: 7b 1a 50                 u64 [sp + 0x50] = a3
   374: 7b 1b 58                 u64 [sp + 0x58] = a4
   377: 7b 1c 60                 u64 [sp + 0x60] = a5
   380: 95 17 28                 a0 = sp + 0x28
   383: 7b 17 68                 u64 [sp + 0x68] = a0
   386: 33 07 80 00 01           a0 = 0x10080
   391: 7b 17 70                 u64 [sp + 0x70] = a0
   394: 95 18 48                 a1 = sp + 0x48
   397: 82 17 18                 a0 = u64 [sp + 0x18]
   400: 50 10 0c 7d fe           ra = 12, jump @3
      :                          @25 [@dyn 6]
   405: 52 07 1b                 jump @28 if a0 != 0
      :                          @26
   408: 82 18 70                 a1 = u64 [sp + 0x70]
   411: 82 17 68                 a0 = u64 [sp + 0x68]
   414: 82 8a 18                 a3 = u64 [a1 + 0x18]
   417: 33 08 b6 00 01           a1 = 0x100b6
   422: 33 09 02                 a2 = 0x2
   425: b4 a0 01 0e              ra = 14, jump [a3]
      :                          @27 [@dyn 7]
   429: 64 75                    s0 = a0
   431: 01                       fallthrough
      :                          @28
   432: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
   435: 82 18 20                 a1 = u64 [sp + 0x20]
   438: 64 59                    a2 = s0
   440: 51 06 de 00              jump @42 if s1 == 0
      :                          @29
   444: 82 15 18                 s0 = u64 [sp + 0x18]
   447: 95 55 01                 s0 = s0 + 0x1
   450: 33 07 b4 00 01           a0 = 0x100b4
   455: 7b 17 18                 u64 [sp + 0x18] = a0
   458: 33 07 80 00 01           a0 = 0x10080
   463: 7b 17 10                 u64 [sp + 0x10] = a0
   466: 33 07 b6 00 01           a0 = 0x100b6
   471: 7b 17 08                 u64 [sp + 0x8] = a0
   474: 28 13                    jump @32
      :                          @30
   476: 33 09 01                 a2 = 0x1
   479: 82 18 20                 a1 = u64 [sp + 0x20]
   482: 01                       fallthrough
      :                          @31
   483: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
   486: 95 55 01                 s0 = s0 + 0x1
   489: 51 06 ad 00              jump @42 if s1 == 0
      :                          @32
   493: 84 97 ff 00              a0 = a2 & 0xff
   497: 33 09 01                 a2 = 0x1
   500: 52 07 ef                 jump @31 if a0 != 0
      :                          @33
   503: 80 8b 34                 a4 = u32 [a1 + 0x34]
   506: 82 87 20                 a0 = u64 [a1 + 0x20]
   509: 82 89 28                 a2 = u64 [a1 + 0x28]
   512: 84 ba 04                 a3 = a4 & 0x4
   515: 52 0a 27                 jump @38 if a3 != 0
      :                          @34
   518: 82 9a 18                 a3 = u64 [a2 + 0x18]
   521: 33 09 02                 a2 = 0x2
   524: 82 18 18                 a1 = u64 [sp + 0x18]
   527: b4 a0 01 10              ra = 16, jump [a3]
      :                          @35 [@dyn 8]
   531: 82 18 20                 a1 = u64 [sp + 0x20]
   534: 33 09 01                 a2 = 0x1
   537: 52 07 ca                 jump @31 if a0 != 0
      :                          @36
   540: 64 57                    a0 = s0
   542: 50 10 12 ef fd           ra = 18, jump @3
      :                          @37 [@dyn 9]
   547: 82 18 20                 a1 = u64 [sp + 0x20]
   550: 64 79                    a2 = a0
   552: 28 bb                    jump @31
      :                          @38
   554: 46 11 47 01              u8 [sp + 71] = 0x1
   558: 7b 17 28                 u64 [sp + 0x28] = a0
   561: 7b 19 30                 u64 [sp + 0x30] = a2
   564: 95 17 47                 a0 = sp + 0x47
   567: 7b 17 38                 u64 [sp + 0x38] = a0
   570: 81 87 30                 a0 = i32 [a1 + 0x30]
   573: 7c 89 38                 a2 = u8 [a1 + 0x38]
   576: 82 8a                    a3 = u64 [a1]
   578: 82 83 08                 t1 = u64 [a1 + 0x8]
   581: 82 8c 10                 a5 = u64 [a1 + 0x10]
   584: 82 82 18                 t0 = u64 [a1 + 0x18]
   587: 7a 1b 7c                 u32 [sp + 0x7c] = a4
   590: 7a 17 78                 u32 [sp + 0x78] = a0
   593: 78 19 80 00              u8 [sp + 0x80] = a2
   597: 7b 1a 48                 u64 [sp + 0x48] = a3
   600: 7b 13 50                 u64 [sp + 0x50] = t1
   603: 7b 1c 58                 u64 [sp + 0x58] = a5
   606: 7b 12 60                 u64 [sp + 0x60] = t0
   609: 95 17 28                 a0 = sp + 0x28
   612: 7b 17 68                 u64 [sp + 0x68] = a0
   615: 82 17 10                 a0 = u64 [sp + 0x10]
   618: 7b 17 70                 u64 [sp + 0x70] = a0
   621: 95 18 48                 a1 = sp + 0x48
   624: 64 57                    a0 = s0
   626: 50 10 14 9b fd           ra = 20, jump @3
      :                          @39 [@dyn 10]
   631: 52 07 65 ff              jump @30 if a0 != 0
      :                          @40
   635: 82 18 70                 a1 = u64 [sp + 0x70]
   638: 82 17 68                 a0 = u64 [sp + 0x68]
   641: 82 8a 18                 a3 = u64 [a1 + 0x18]
   644: 33 09 02                 a2 = 0x2
   647: 82 18 08                 a1 = u64 [sp + 0x8]
   650: b4 a0 01 16              ra = 22, jump [a3]
      :                          @41 [@dyn 11]
   654: 64 79                    a2 = a0
   656: 82 18 20                 a1 = u64 [sp + 0x20]
   659: 28 50 ff                 jump @31
      :                          @42
   662: 33 07 01                 a0 = 0x1
   665: 52 09 18                 jump @44 if a2 != 0
      :                          @43
   668: 82 89 28                 a2 = u64 [a1 + 0x28]
   671: 82 87 20                 a0 = u64 [a1 + 0x20]
   674: 82 9a 18                 a3 = u64 [a2 + 0x18]
   677: 33 08 b9 00 01           a1 = 0x100b9
   682: 33 09 01                 a2 = 0x1
   685: b4 a0 01 18              ra = 24, jump [a3]
      :                          @44 [@dyn 12]
   689: 82 10 98 00              ra = u64 [sp + 0x98]
   693: 82 15 90 00              s0 = u64 [sp + 0x90]
   697: 82 16 88 00              s1 = u64 [sp + 0x88]
   701: 95 11 a0 00              sp = sp + 0xa0
   705: 32 00                    ret
      :                          @45
   707: 95 11 c8                 sp = sp + 0xffffffffffffffc8
   710: 7b 10 30                 u64 [sp + 0x30] = ra
   713: 7b 15 28                 u64 [sp + 0x28] = s0
   716: 7b 16 20                 u64 [sp + 0x20] = s1
   719: 64 95                    s0 = a2
   721: 64 72                    t0 = a0
   723: 51 08 79                 jump @55 if a1 == 0
      :                          @46
   726: 82 a7 08                 a0 = u64 [a3 + 0x8]
   729: 51 07 7c                 jump @56 if a0 == 0
      :                          @47
   732: 82 a9 10                 a2 = u64 [a3 + 0x10]
   735: 51 09 aa 00              jump @63 if a2 == 0
      :                          @48
   739: 82 a8                    a1 = u64 [a3]
   741: 33 06 60 00 03           s1 = 0x30060
   746: 33 03 00 00 01           t1 = 0x10000
   751: c8 36 06                 s1 = s1 + t1
   754: 01                       fallthrough
      :                          @49
   755: 82 6a                    a3 = u64 [s1]
   757: c8 5a 07                 a0 = a3 + s0
   760: ac a7 cf 00              jump @69 if a0 <u a3
      :                          @50
   764: 95 7b 01                 a4 = a0 + 0x1
   767: 88 bc 01                 a5 = a4 <u 0x1
   770: d8 b3 0b                 a4 = t1 <u a4
   773: d4 cb 0b                 a4 = a4 | a5
   776: 52 0b bf 00              jump @69 if a4 != 0
      :                          @51
   780: 82 6b                    a4 = u64 [s1]
   782: ab ab e5                 jump @49 if a4 != a3
      :                          @52
   785: 7b 67                    u64 [s1] = a0
   787: 33 0c                    a5 = 0
   789: 7b 12 18                 u64 [sp + 0x18] = t0
   792: 33 0a 60 00 03           a3 = 0x30060
   797: 33 0b 00 00 01           a4 = 0x10000
   802: 7b 1a                    u64 [sp] = a3
   804: c8 ba 0a                 a3 = a3 + a4
   807: c9 7a 07                 a0 = a3 - a0
   810: 7b 17 10                 u64 [sp + 0x10] = a0
   813: 7b 18 08                 u64 [sp + 0x8] = a1
   816: 64 96                    s1 = a2
   818: 50 10 1a 68 13           ra = 26, jump @392
      :                          @53 [@dyn 13]
   823: 54 36 00 00 01 98 00     jump @70 if s1 <=u 65536
      :                          @54
   830: 82 12 18                 t0 = u64 [sp + 0x18]
   833: 82 18 10                 a1 = u64 [sp + 0x10]
   836: 33 07                    a0 = 0
   838: 7b 28 08                 u64 [t0 + 0x8] = a1
   841: 28 b5 00                 jump @76
      :                          @55
   844: 49 12 08                 u64 [t0 + 8] = 0
   847: 33 07 01                 a0 = 0x1
   850: 28 ac 00                 jump @76
      :                          @56
   853: 33 09 60 00 03           a2 = 0x30060
   858: 33 07 00 00 01           a0 = 0x10000
   863: c8 79 09                 a2 = a2 + a0
   866: 01                       fallthrough
      :                          @57
   867: 82 9a                    a3 = u64 [a2]
   869: c8 5a 08                 a1 = a3 + s0
   872: ac a8 5f                 jump @69 if a1 <u a3
      :                          @58
   875: 95 8b 01                 a4 = a1 + 0x1
   878: 88 bc 01                 a5 = a4 <u 0x1
   881: d8 b7 0b                 a4 = a0 <u a4
   884: d4 cb 0b                 a4 = a4 | a5
   887: 52 0b 50                 jump @69 if a4 != 0
      :                          @59
   890: 82 9b                    a4 = u64 [a2]
   892: ab ab e7                 jump @57 if a4 != a3
      :                          @60
   895: 7b 98                    u64 [a2] = a1
   897: 33 0c                    a5 = 0
   899: 01                       fallthrough
      :                          @61
   900: ab ab df                 jump @57 if a4 != a3
      :                          @62
   903: 28 31                    jump @68
      :                          @63
   905: 33 09 60 00 03           a2 = 0x30060
   910: 33 07 00 00 01           a0 = 0x10000
   915: c8 79 09                 a2 = a2 + a0
   918: 01                       fallthrough
      :                          @64
   919: 82 9a                    a3 = u64 [a2]
   921: c8 5a 08                 a1 = a3 + s0
   924: ac a8 2b                 jump @69 if a1 <u a3
      :                          @65
   927: 95 8b 01                 a4 = a1 + 0x1
   930: 88 bc 01                 a5 = a4 <u 0x1
   933: d8 b7 0b                 a4 = a0 <u a4
   936: d4 cb 0b                 a4 = a4 | a5
   939: 52 0b 1c                 jump @69 if a4 != 0
      :                          @66
   942: 82 9b                    a4 = u64 [a2]
   944: ab ab e7                 jump @64 if a4 != a3
      :                          @67
   947: 7b 98                    u64 [a2] = a1
   949: 33 0c                    a5 = 0
   951: 01                       fallthrough
      :                          @68
   952: 33 07 60 00 04           a0 = 0x40060
   957: c9 87 08                 a1 = a0 - a1
   960: 33 07                    a0 = 0
   962: 7b 28 08                 u64 [t0 + 0x8] = a1
   965: 28 39                    jump @76
      :                          @69
   967: 33 07 01                 a0 = 0x1
   970: 7b 27 08                 u64 [t0 + 0x8] = a0
   973: 28 31                    jump @76
      :                          @70
   975: 64 6c                    a5 = s1
   977: 82 17                    a0 = u64 [sp]
   979: 95 77 00 00 01           a0 = a0 + 0x10000
   984: 82 12 18                 t0 = u64 [sp + 0x18]
   987: 82 16 08                 s1 = u64 [sp + 0x8]
   990: 01                       fallthrough
      :                          @71
   991: 82 78                    a1 = u64 [a0]
   993: c9 87 09                 a2 = a0 - a1
   996: ab 69 11                 jump @75 if a2 != s1
      :                          @72
   999: c9 c8 09                 a2 = a1 - a5
  1002: 01                       fallthrough
      :                          @73
  1003: 82 7a                    a3 = u64 [a0]
  1005: ab 8a f2                 jump @71 if a3 != a1
      :                          @74
  1008: 7b 79                    u64 [a0] = a2
  1010: 33 0b                    a4 = 0
  1012: 01                       fallthrough
      :                          @75
  1013: 82 18 10                 a1 = u64 [sp + 0x10]
  1016: 33 07                    a0 = 0
  1018: 7b 28 08                 u64 [t0 + 0x8] = a1
  1021: 01                       fallthrough
      :                          @76
  1022: 7b 25 10                 u64 [t0 + 0x10] = s0
  1025: 7b 27                    u64 [t0] = a0
  1027: 82 10 30                 ra = u64 [sp + 0x30]
  1030: 82 15 28                 s0 = u64 [sp + 0x28]
  1033: 82 16 20                 s1 = u64 [sp + 0x20]
  1036: 95 11 38                 sp = sp + 0x38
  1039: 32 00                    ret
      :                          @77
  1041: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  1044: 7b 10 40                 u64 [sp + 0x40] = ra
  1047: 7b 15 38                 u64 [sp + 0x38] = s0
  1050: 7b 16 30                 u64 [sp + 0x30] = s1
  1053: c8 89 09                 a2 = a2 + a1
  1056: ac 89 53                 jump @85 if a2 <u a1
      :                          @78
  1059: 64 75                    s0 = a0
  1061: 82 77                    a0 = u64 [a0]
  1063: 97 78 01                 a1 = a0 << 0x1
  1066: 33 0a 08                 a3 = 0x8
  1069: e4 a9 09                 a2 = maxu(a2, a3)
  1072: e4 98 06                 s1 = maxu(a1, a2)
  1075: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  1078: 98 88 3f                 a1 = a1 >> 0x3f
  1081: 51 07 12                 jump @80 if a0 == 0
      :                          @79
  1084: 82 59 08                 a2 = u64 [s0 + 0x8]
  1087: 7b 19 18                 u64 [sp + 0x18] = a2
  1090: 49 11 20 01              u64 [sp + 32] = 0x1
  1094: 7b 17 28                 u64 [sp + 0x28] = a0
  1097: 28 06                    jump @81
      :                          @80
  1099: 49 11 20                 u64 [sp + 32] = 0
  1102: 01                       fallthrough
      :                          @81
  1103: 64 17                    a0 = sp
  1105: 95 1a 18                 a3 = sp + 0x18
  1108: 64 69                    a2 = s1
  1110: 50 10 1c 6d fe           ra = 28, jump @45
      :                          @82 [@dyn 14]
  1115: 82 18                    a1 = u64 [sp]
  1117: 82 17 08                 a0 = u64 [sp + 0x8]
  1120: 51 08 14                 jump @86 if a1 == 0
      :                          @83
  1123: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  1133: aa 87 0d                 jump @87 if a0 == a1
      :                          @84
  1136: 52 07 18                 jump @88 if a0 != 0
      :                          @85
  1139: 00                       trap
      :                          @86
  1140: 7b 57 08                 u64 [s0 + 0x8] = a0
  1143: 7b 56                    u64 [s0] = s1
  1145: 01                       fallthrough
      :                          @87
  1146: 82 10 40                 ra = u64 [sp + 0x40]
  1149: 82 15 38                 s0 = u64 [sp + 0x38]
  1152: 82 16 30                 s1 = u64 [sp + 0x30]
  1155: 95 11 48                 sp = sp + 0x48
  1158: 32 00                    ret
      :                          @88
  1160: 00                       trap
      :                          @89 [export #0: 'refine']
  1161: 95 11 d0 fc              sp = sp + 0xfffffffffffffcd0
  1165: 7b 10 28 03              u64 [sp + 0x328] = ra
  1169: 7b 15 20 03              u64 [sp + 0x320] = s0
  1173: 7b 16 18 03              u64 [sp + 0x318] = s1
  1177: 64 85                    s0 = a1
  1179: 64 7b                    a4 = a0
  1181: c8 87 07                 a0 = a0 + a1
  1184: 95 79 e0                 a2 = a0 + 0xffffffffffffffe0
  1187: 7b 19 70 01              u64 [sp + 0x170] = a2
  1191: 49 21 78 01 20           u64 [sp + 376] = 0x20
  1196: 33 07 00 00 01           a0 = 0x10000
  1201: 53 15 04 43              jump @98 if s0 <u 4
      :                          @90
  1205: 7d b8                    a1 = i8 [a4]
  1207: 33 06 01                 s1 = 0x1
  1210: 59 08 37                 jump @97 if a1 >=s 0
      :                          @91
  1213: 84 8a ff 00              a3 = a1 & 0xff
  1217: 33 06 02                 s1 = 0x2
  1220: 53 2a c0 00 2d           jump @97 if a3 <u 192
      :                          @92
  1225: 33 06 03                 s1 = 0x3
  1228: 53 2a e0 00 25           jump @97 if a3 <u 224
      :                          @93
  1233: 33 06 04                 s1 = 0x4
  1236: 53 2a f0 00 1d           jump @97 if a3 <u 240
      :                          @94
  1241: 33 06 05                 s1 = 0x5
  1244: 53 2a f8 00 15           jump @97 if a3 <u 248
      :                          @95
  1249: 33 06 06                 s1 = 0x6
  1252: 53 2a fc 00 0d           jump @97 if a3 <u 252
      :                          @96
  1257: 88 a8 fe 00              a1 = a3 <u 0xfe
  1261: 9a 86 08                 s1 = 0x8 - a1
  1264: 01                       fallthrough
      :                          @97
  1265: ae 65 08                 jump @99 if s0 >=u s1
      :                          @98
  1268: 33 08                    a1 = 0
  1270: 28 e7 00                 jump @122
      :                          @99
  1273: 7b 19 60 01              u64 [sp + 0x160] = a2
  1277: 64 b7                    a0 = a4
  1279: 64 68                    a1 = s1
  1281: 7b 1b 68 01              u64 [sp + 0x168] = a4
  1285: 50 10 1e a6 1a           ra = 30, jump @580
      :                          @100 [@dyn 15]
  1290: aa 65 cb 00              jump @121 if s0 == s1
      :                          @101
  1294: 82 17 68 01              a0 = u64 [sp + 0x168]
  1298: c8 67 07                 a0 = a0 + s1
  1301: 7d 78                    a1 = i8 [a0]
  1303: c9 65 06                 s1 = s0 - s1
  1306: 33 05 01                 s0 = 0x1
  1309: 59 08 37                 jump @108 if a1 >=s 0
      :                          @102
  1312: 84 89 ff 00              a2 = a1 & 0xff
  1316: 33 05 02                 s0 = 0x2
  1319: 53 29 c0 00 2d           jump @108 if a2 <u 192
      :                          @103
  1324: 33 05 03                 s0 = 0x3
  1327: 53 29 e0 00 25           jump @108 if a2 <u 224
      :                          @104
  1332: 33 05 04                 s0 = 0x4
  1335: 53 29 f0 00 1d           jump @108 if a2 <u 240
      :                          @105
  1340: 33 05 05                 s0 = 0x5
  1343: 53 29 f8 00 15           jump @108 if a2 <u 248
      :                          @106
  1348: 33 05 06                 s0 = 0x6
  1351: 53 29 fc 00 0d           jump @108 if a2 <u 252
      :                          @107
  1356: 88 98 fe 00              a1 = a2 <u 0xfe
  1360: 9a 85 08                 s0 = 0x8 - a1
  1363: 01                       fallthrough
      :                          @108
  1364: ac 56 81 00              jump @121 if s1 <u s0
      :                          @109
  1368: 64 58                    a1 = s0
  1370: 7b 17 68 01              u64 [sp + 0x168] = a0
  1374: 50 10 20 4d 1a           ra = 32, jump @580
      :                          @110 [@dyn 16]
  1379: aa 56 72                 jump @121 if s1 == s0
      :                          @111
  1382: 82 17 68 01              a0 = u64 [sp + 0x168]
  1386: c8 57 07                 a0 = a0 + s0
  1389: 7d 78                    a1 = i8 [a0]
  1391: c9 56 05                 s0 = s1 - s0
  1394: 33 06 01                 s1 = 0x1
  1397: 59 08 37                 jump @118 if a1 >=s 0
      :                          @112
  1400: 84 89 ff 00              a2 = a1 & 0xff
  1404: 33 06 02                 s1 = 0x2
  1407: 53 29 c0 00 2d           jump @118 if a2 <u 192
      :                          @113
  1412: 33 06 03                 s1 = 0x3
  1415: 53 29 e0 00 25           jump @118 if a2 <u 224
      :                          @114
  1420: 33 06 04                 s1 = 0x4
  1423: 53 29 f0 00 1d           jump @118 if a2 <u 240
      :                          @115
  1428: 33 06 05                 s1 = 0x5
  1431: 53 29 f8 00 15           jump @118 if a2 <u 248
      :                          @116
  1436: 33 06 06                 s1 = 0x6
  1439: 53 29 fc 00 0d           jump @118 if a2 <u 252
      :                          @117
  1444: 88 99 fe 00              a2 = a2 <u 0xfe
  1448: 9a 96 08                 s1 = 0x8 - a2
  1451: 01                       fallthrough
      :                          @118
  1452: ac 65 d6 09              jump @236 if s0 <u s1
      :                          @119
  1456: 7b 17 68 01              u64 [sp + 0x168] = a0
  1460: 64 68                    a1 = s1
  1462: 50 10 22 f5 19           ra = 34, jump @580
      :                          @120 [@dyn 17]
  1467: 64 72                    t0 = a0
  1469: e4 65 07                 a0 = maxu(s0, s1)
  1472: c9 67 07                 a0 = a0 - s1
  1475: d8 27 08                 a1 = a0 <u t0
  1478: e4 27 07                 a0 = maxu(a0, t0)
  1481: c9 27 07                 a0 = a0 - t0
  1484: 88 77 20                 a0 = a0 <u 0x20
  1487: d4 87 07                 a0 = a0 | a1
  1490: 51 07 1d                 jump @123 if a0 == 0
      :                          @121
  1493: 33 08                    a1 = 0
  1495: 33 07 00 00 01           a0 = 0x10000
  1500: 01                       fallthrough
      :                          @122
  1501: 82 10 28 03              ra = u64 [sp + 0x328]
  1505: 82 15 20 03              s0 = u64 [sp + 0x320]
  1509: 82 16 18 03              s1 = u64 [sp + 0x318]
  1513: 95 11 30 03              sp = sp + 0x330
  1517: 32 00                    ret
      :                          @123
  1519: 51 02 b8 01              jump @152 if t0 == 0
      :                          @124
  1523: 7b 16 50 01              u64 [sp + 0x150] = s1
  1527: 95 26 20                 s1 = t0 + 0x20
  1530: 7b 12 58 01              u64 [sp + 0x158] = t0
  1534: 51 06 31 09              jump @219 if s1 == 0
      :                          @125
  1538: 57 06 81 09              jump @237 if s1 <s 0
      :                          @126
  1542: 89 67                    a0 = s1 <s 0
  1544: 85 78 01                 a1 = a0 ^ 0x1
  1547: 33 0a 60 00 03           a3 = 0x30060
  1552: 33 09 00 00 01           a2 = 0x10000
  1557: c8 9a 0a                 a3 = a3 + a2
  1560: 01                       fallthrough
      :                          @127
  1561: 82 ab                    a4 = u64 [a3]
  1563: c8 6b 07                 a0 = a4 + s1
  1566: ac b7 5f 09              jump @231 if a0 <u a4
      :                          @128
  1570: c8 87 0c                 a5 = a0 + a1
  1573: d8 7c 05                 s0 = a5 <u a0
  1576: d8 c9 0c                 a5 = a2 <u a5
  1579: d4 5c 0c                 a5 = a5 | s0
  1582: 52 0c 4f 09              jump @231 if a5 != 0
      :                          @129
  1586: 82 ac                    a5 = u64 [a3]
  1588: ab bc e5                 jump @127 if a5 != a4
      :                          @130
  1591: 7b a7                    u64 [a3] = a0
  1593: 01                       fallthrough
      :                          @131
  1594: 33 05                    s0 = 0
  1596: 33 08 60 00 04           a1 = 0x40060
  1601: c9 78 08                 a1 = a1 - a0
  1604: 7b 16 b8 01              u64 [sp + 0x1b8] = s1
  1608: 7b 18 c0 01              u64 [sp + 0x1c0] = a1
  1612: 49 21 c8 01              u64 [sp + 456] = 0
  1616: 55 12 e0 ed 08           jump @220 if t0 >=u 4294967264
      :                          @132
  1621: 82 17 68 01              a0 = u64 [sp + 0x168]
  1625: 82 19 50 01              a2 = u64 [sp + 0x150]
  1629: c8 97 07                 a0 = a0 + a2
  1632: 7b 17 50 01              u64 [sp + 0x150] = a0
  1636: 7b 18 68 01              u64 [sp + 0x168] = a1
  1640: c8 58 07                 a0 = a1 + s0
  1643: 33 09 20                 a2 = 0x20
  1646: 82 18 60 01              a1 = u64 [sp + 0x160]
  1650: 50 10 24 28 10           ra = 36, jump @392
      :                          @133 [@dyn 18]
  1655: 95 58 20                 a1 = s0 + 0x20
  1658: c9 86 07                 a0 = s1 - a1
  1661: 7b 18 c8 01              u64 [sp + 0x1c8] = a1
  1665: 82 19 58 01              a2 = u64 [sp + 0x158]
  1669: ac 97 d5 08              jump @222 if a0 <u a2
      :                          @134
  1673: 82 15 68 01              s0 = u64 [sp + 0x168]
  1677: 01                       fallthrough
      :                          @135
  1678: 7b 18 68 01              u64 [sp + 0x168] = a1
  1682: 49 21 60 01 ff ff fe     u64 [sp + 352] = 0xfffffffffffeffff
  1689: c8 85 07                 a0 = s0 + a1
  1692: 82 18 50 01              a1 = u64 [sp + 0x150]
  1696: 50 10 26 fa 0f           ra = 38, jump @392
      :                          @136 [@dyn 19]
  1701: 82 17 68 01              a0 = u64 [sp + 0x168]
  1705: 82 18 58 01              a1 = u64 [sp + 0x158]
  1709: c8 87 07                 a0 = a0 + a1
  1712: 7b 15 68 01              u64 [sp + 0x168] = s0
  1716: 7b 15 80 01              u64 [sp + 0x180] = s0
  1720: 7b 17 88 01              u64 [sp + 0x188] = a0
  1724: 95 17 80 01              a0 = sp + 0x180
  1728: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  1732: 33 07 04                 a0 = 0x4
  1735: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  1739: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  1744: 49 21 c8 01 02           u64 [sp + 456] = 0x2
  1749: 49 21 d8 01              u64 [sp + 472] = 0
  1753: 14 08 20 00 00 00 10 00 00 00 a1 = 0x1000000020
  1763: 7b 18 e0 01              u64 [sp + 0x1e0] = a1
  1767: 46 21 e8 01 03           u8 [sp + 488] = 0x3
  1772: 33 08 10 00 01           a1 = 0x10010
  1777: 7b 18 98 02              u64 [sp + 0x298] = a1
  1781: 49 21 a0 02 01           u64 [sp + 672] = 0x1
  1786: 95 18 b8 01              a1 = sp + 0x1b8
  1790: 7b 18 b8 02              u64 [sp + 0x2b8] = a1
  1794: 49 21 c0 02 01           u64 [sp + 704] = 0x1
  1799: 95 18 a8 01              a1 = sp + 0x1a8
  1803: 7b 18 a8 02              u64 [sp + 0x2a8] = a1
  1807: 49 21 b0 02 01           u64 [sp + 688] = 0x1
  1812: 95 17 90 01              a0 = sp + 0x190
  1816: 95 18 98 02              a1 = sp + 0x298
  1820: 50 10 28 0a 0d           ra = 40, jump @342
      :                          @137 [@dyn 20]
  1825: 82 15 98 01              s0 = u64 [sp + 0x198]
  1829: 82 1b a0 01              a4 = u64 [sp + 0x1a0]
  1833: 82 17 90 01              a0 = u64 [sp + 0x190]
  1837: 7b 17 58 01              u64 [sp + 0x158] = a0
  1841: 33 07 02                 a0 = 0x2
  1844: 33 08                    a1 = 0
  1846: 33 09                    a2 = 0
  1848: 64 5a                    a3 = s0
  1850: 33 00 2a                 ra = 0x2a
  1853: 0a 64                    ecalli 100 // 'log'
  1855: 01                       fallthrough
      :                          @138 [@dyn 21]
  1856: 82 1c 58 01              a5 = u64 [sp + 0x158]
  1860: 82 13 60 01              t1 = u64 [sp + 0x160]
  1864: 33 02 00 00 ff           t0 = 0xffffffffffff0000
  1869: c8 3c 07                 a0 = a5 + t1
  1872: ac 27 24                 jump @144 if a0 <u t0
      :                          @139
  1875: 33 07 60 00 03           a0 = 0x30060
  1880: 95 77 00 00 01           a0 = a0 + 0x10000
  1885: 01                       fallthrough
      :                          @140
  1886: 82 78                    a1 = u64 [a0]
  1888: c9 87 09                 a2 = a0 - a1
  1891: ab 59 11                 jump @144 if a2 != s0
      :                          @141
  1894: c9 c8 09                 a2 = a1 - a5
  1897: 01                       fallthrough
      :                          @142
  1898: 82 7a                    a3 = u64 [a0]
  1900: ab 8a f2                 jump @140 if a3 != a1
      :                          @143
  1903: 7b 79                    u64 [a0] = a2
  1905: 33 0b                    a4 = 0
  1907: 01                       fallthrough
      :                          @144
  1908: c8 36 07                 a0 = s1 + t1
  1911: 82 1c 68 01              a5 = u64 [sp + 0x168]
  1915: ac 27 d8 00              jump @160 if a0 <u t0
      :                          @145
  1919: 33 07 60 00 03           a0 = 0x30060
  1924: 95 77 00 00 01           a0 = a0 + 0x10000
  1929: 01                       fallthrough
      :                          @146
  1930: 82 78                    a1 = u64 [a0]
  1932: c9 87 09                 a2 = a0 - a1
  1935: ab c9 c4 00              jump @160 if a2 != a5
      :                          @147
  1939: c9 68 09                 a2 = a1 - s1
  1942: 01                       fallthrough
      :                          @148
  1943: 82 7a                    a3 = u64 [a0]
  1945: ab 8a f1                 jump @146 if a3 != a1
      :                          @149
  1948: 7b 79                    u64 [a0] = a2
  1950: 33 0b                    a4 = 0
  1952: 01                       fallthrough
      :                          @150
  1953: ab 8a e9                 jump @146 if a3 != a1
      :                          @151
  1956: 28 af 00                 jump @160
      :                          @152
  1959: 95 17 70 01              a0 = sp + 0x170
  1963: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  1967: 33 07 04                 a0 = 0x4
  1970: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  1974: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  1979: 49 21 c8 01 02           u64 [sp + 456] = 0x2
  1984: 49 21 d8 01              u64 [sp + 472] = 0
  1988: 14 08 20 00 00 00 10 00 00 00 a1 = 0x1000000020
  1998: 7b 18 e0 01              u64 [sp + 0x1e0] = a1
  2002: 46 21 e8 01 03           u8 [sp + 488] = 0x3
  2007: 33 08 10 00 01           a1 = 0x10010
  2012: 7b 18 98 02              u64 [sp + 0x298] = a1
  2016: 49 21 a0 02 01           u64 [sp + 672] = 0x1
  2021: 95 18 b8 01              a1 = sp + 0x1b8
  2025: 7b 18 b8 02              u64 [sp + 0x2b8] = a1
  2029: 49 21 c0 02 01           u64 [sp + 704] = 0x1
  2034: 95 18 a8 01              a1 = sp + 0x1a8
  2038: 7b 18 a8 02              u64 [sp + 0x2a8] = a1
  2042: 49 21 b0 02 01           u64 [sp + 688] = 0x1
  2047: 95 17 90 01              a0 = sp + 0x190
  2051: 95 18 98 02              a1 = sp + 0x298
  2055: 50 10 2c 1f 0c           ra = 44, jump @342
      :                          @153 [@dyn 22]
  2060: 82 15 98 01              s0 = u64 [sp + 0x198]
  2064: 82 1b a0 01              a4 = u64 [sp + 0x1a0]
  2068: 82 16 90 01              s1 = u64 [sp + 0x190]
  2072: 33 07 02                 a0 = 0x2
  2075: 33 08                    a1 = 0
  2077: 33 09                    a2 = 0
  2079: 64 5a                    a3 = s0
  2081: 33 00 2e                 ra = 0x2e
  2084: 0a 64                    ecalli 100 // 'log'
  2086: 01                       fallthrough
      :                          @154 [@dyn 23]
  2087: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
  2092: 53 38 00 00 ff 27        jump @160 if a1 <u 4294901760
      :                          @155
  2098: 33 07 60 00 03           a0 = 0x30060
  2103: 95 77 00 00 01           a0 = a0 + 0x10000
  2108: 01                       fallthrough
      :                          @156
  2109: 82 78                    a1 = u64 [a0]
  2111: c9 87 09                 a2 = a0 - a1
  2114: ab 59 11                 jump @160 if a2 != s0
      :                          @157
  2117: c9 68 09                 a2 = a1 - s1
  2120: 01                       fallthrough
      :                          @158
  2121: 82 7a                    a3 = u64 [a0]
  2123: ab 8a f2                 jump @156 if a3 != a1
      :                          @159
  2126: 7b 79                    u64 [a0] = a2
  2128: 33 0b                    a4 = 0
  2130: 01                       fallthrough
      :                          @160
  2131: 82 17 70 01              a0 = u64 [sp + 0x170]
  2135: 7b 17 90 00              u64 [sp + 0x90] = a0
  2139: 82 15 78 01              s0 = u64 [sp + 0x178]
  2143: 95 17 08 02              a0 = sp + 0x208
  2147: 33 09 80 00              a2 = 0x80
  2151: 33 08                    a1 = 0
  2153: 50 10 30 e3 0e           ra = 48, jump @410
      :                          @161 [@dyn 24]
  2158: 3a 07 00 00 03           a0 = u64 [0x30000]
  2163: 3a 09 08 00 03           a2 = u64 [0x30008]
  2168: 3a 0b 10 00 03           a4 = u64 [0x30010]
  2173: 3a 08 18 00 03           a1 = u64 [0x30018]
  2178: 7b 17 b8 01              u64 [sp + 0x1b8] = a0
  2182: 7b 19 40                 u64 [sp + 0x40] = a2
  2185: 7b 19 c0 01              u64 [sp + 0x1c0] = a2
  2189: 7b 1b 38                 u64 [sp + 0x38] = a4
  2192: 7b 1b c8 01              u64 [sp + 0x1c8] = a4
  2196: 7b 18 30                 u64 [sp + 0x30] = a1
  2199: 7b 18 d0 01              u64 [sp + 0x1d0] = a1
  2203: 3a 08 20 00 03           a1 = u64 [0x30020]
  2208: 3a 09 28 00 03           a2 = u64 [0x30028]
  2213: 3a 0b 30 00 03           a4 = u64 [0x30030]
  2218: 3a 07 38 00 03           a0 = u64 [0x30038]
  2223: 7b 18 28                 u64 [sp + 0x28] = a1
  2226: 7b 18 d8 01              u64 [sp + 0x1d8] = a1
  2230: 7b 19 20                 u64 [sp + 0x20] = a2
  2233: 7b 19 e0 01              u64 [sp + 0x1e0] = a2
  2237: 7b 1b 18                 u64 [sp + 0x18] = a4
  2240: 7b 1b e8 01              u64 [sp + 0x1e8] = a4
  2244: 7b 17 10                 u64 [sp + 0x10] = a0
  2247: 7b 17 f0 01              u64 [sp + 0x1f0] = a0
  2251: 49 21 f8 01              u64 [sp + 504] = 0
  2255: 49 21 00 02              u64 [sp + 512] = 0
  2259: 49 21 88 02              u64 [sp + 648] = 0
  2263: 46 21 90 02              u8 [sp + 656] = 0
  2267: 51 05 d1 05              jump @198 if s0 == 0
      :                          @162
  2271: 64 5a                    a3 = s0
  2273: 33 07                    a0 = 0
  2275: 33 0c                    a5 = 0
  2277: 3a 08 40 00 03           a1 = u64 [0x30040]
  2282: 7b 18 08                 u64 [sp + 0x8] = a1
  2285: 33 08 8b 01 01           a1 = 0x1018b
  2290: 7b 18                    u64 [sp] = a1
  2292: 7b 15 98 00              u64 [sp + 0x98] = s0
  2296: 01                       fallthrough
      :                          @163
  2297: 33 0b 80 00              a4 = 0x80
  2301: ab b7 28                 jump @166 if a0 != a4
      :                          @164
  2304: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
  2308: 95 75 80 00              s0 = a0 + 0x80
  2312: 7b 15 f8 01              u64 [sp + 0x1f8] = s0
  2316: 82 19 00 02              a2 = u64 [sp + 0x200]
  2320: 7b 1c 88 00              u64 [sp + 0x88] = a5
  2324: 53 17 80 2b              jump @169 if a0 <u 4294967168
      :                          @165
  2328: 95 99 01                 a2 = a2 + 0x1
  2331: 7b 19 68 01              u64 [sp + 0x168] = a2
  2335: 7b 19 00 02              u64 [sp + 0x200] = a2
  2339: 28 21                    jump @170
      :                          @166
  2341: 9a 78 80 00              a1 = 0x80 - a0
  2345: c9 ca 09                 a2 = a3 - a5
  2348: e6 98 06                 s1 = minu(a1, a2)
  2351: c8 76 09                 a2 = s1 + a0
  2354: ac 69 4e 06              jump @234 if a2 <u s1
      :                          @167
  2358: 54 29 80 00 1d 05        jump @190 if a2 <=u 128
      :                          @168
  2364: 28 45 06                 jump @235
      :                          @169
  2367: 7b 19 68 01              u64 [sp + 0x168] = a2
  2371: 01                       fallthrough
      :                          @170
  2372: 95 17 98 02              a0 = sp + 0x298
  2376: 33 09 80 00              a2 = 0x80
  2380: 95 18 08 02              a1 = sp + 0x208
  2384: 50 10 32 4a 0d           ra = 50, jump @392
      :                          @171 [@dyn 25]
  2389: 82 16 b8 01              s1 = u64 [sp + 0x1b8]
  2393: 82 18 c0 01              a1 = u64 [sp + 0x1c0]
  2397: 82 13 c8 01              t1 = u64 [sp + 0x1c8]
  2401: 82 12 d0 01              t0 = u64 [sp + 0x1d0]
  2405: 82 1b d8 01              a4 = u64 [sp + 0x1d8]
  2409: 82 1a e0 01              a3 = u64 [sp + 0x1e0]
  2413: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
  2417: 82 14 f0 01              t2 = u64 [sp + 0x1f0]
  2421: 82 17 28                 a0 = u64 [sp + 0x28]
  2424: d3 57 07                 a0 = a0 ^ s0
  2427: 7b 17 20 01              u64 [sp + 0x120] = a0
  2431: 82 17 20                 a0 = u64 [sp + 0x20]
  2434: 82 1c 68 01              a5 = u64 [sp + 0x168]
  2438: d3 c7 07                 a0 = a0 ^ a5
  2441: 7b 17 30 01              u64 [sp + 0x130] = a0
  2445: 33 05 0c                 s0 = 0xc
  2448: 82 17                    a0 = u64 [sp]
  2450: 7b 16 48                 u64 [sp + 0x48] = s1
  2453: 7b 16 18 01              u64 [sp + 0x118] = s1
  2457: 64 76                    s1 = a0
  2459: 7b 1b 68                 u64 [sp + 0x68] = a4
  2462: 64 bc                    a5 = a4
  2464: 82 17 08                 a0 = u64 [sp + 0x8]
  2467: 7b 17 48 01              u64 [sp + 0x148] = a0
  2471: 7b 18 50                 u64 [sp + 0x50] = a1
  2474: 7b 18 28 01              u64 [sp + 0x128] = a1
  2478: 7b 1a 70                 u64 [sp + 0x70] = a3
  2481: 64 a0                    ra = a3
  2483: 82 1b 40                 a4 = u64 [sp + 0x40]
  2486: 7b 13 58                 u64 [sp + 0x58] = t1
  2489: 7b 13 40 01              u64 [sp + 0x140] = t1
  2493: 7b 19 78                 u64 [sp + 0x78] = a2
  2496: 64 9a                    a3 = a2
  2498: 82 17 18                 a0 = u64 [sp + 0x18]
  2501: 7b 17 38 01              u64 [sp + 0x138] = a0
  2505: 82 17 38                 a0 = u64 [sp + 0x38]
  2508: 7b 17 60 01              u64 [sp + 0x160] = a0
  2512: 7b 12 60                 u64 [sp + 0x60] = t0
  2515: 64 23                    t1 = t0
  2517: 7b 14 80 00              u64 [sp + 0x80] = t2
  2521: 64 42                    t0 = t2
  2523: 82 17 10                 a0 = u64 [sp + 0x10]
  2526: 7b 17 50 01              u64 [sp + 0x150] = a0
  2530: 82 17 30                 a0 = u64 [sp + 0x30]
  2533: 7b 17 58 01              u64 [sp + 0x158] = a0
  2537: 01                       fallthrough
      :                          @172
  2538: 7b 10 10 01              u64 [sp + 0x110] = ra
  2542: 7b 1a 68 01              u64 [sp + 0x168] = a3
  2546: 7c 60 f9                 ra = u8 [s1 + 0xfffffffffffffff9]
  2549: 56 10 0f 81 05           jump @224 if ra >u 15
      :                          @173
  2554: 7c 67 fa                 a0 = u8 [s1 + 0xfffffffffffffffa]
  2557: 33 08 10                 a1 = 0x10
  2560: ae 87 2e 05              jump @218 if a0 >=u a1
      :                          @174
  2564: 7b 13 08 01              u64 [sp + 0x108] = t1
  2568: 7c 63 fb                 t1 = u8 [s1 + 0xfffffffffffffffb]
  2571: 55 13 10 6c 05           jump @225 if t1 >=u 16
      :                          @175
  2576: 7b 15 00 01              u64 [sp + 0x100] = s0
  2580: 7c 64 fc                 t2 = u8 [s1 + 0xfffffffffffffffc]
  2583: 55 14 10 61 05           jump @226 if t2 >=u 16
      :                          @176
  2588: 7c 69 fd                 a2 = u8 [s1 + 0xfffffffffffffffd]
  2591: 55 19 10 5a 05           jump @227 if a2 >=u 16
      :                          @177
  2596: 7b 12 f8 00              u64 [sp + 0xf8] = t0
  2600: 7c 62 fe                 t0 = u8 [s1 + 0xfffffffffffffffe]
  2603: 55 12 10 4f 05           jump @228 if t0 >=u 16
      :                          @178
  2608: 7c 6a ff                 a3 = u8 [s1 + 0xffffffffffffffff]
  2611: 55 1a 10 48 05           jump @229 if a3 >=u 16
      :                          @179
  2616: 7b 1b f0 00              u64 [sp + 0xf0] = a4
  2620: 7c 6b                    a4 = u8 [s1]
  2622: 55 1b 10 3e 05           jump @230 if a4 >=u 16
      :                          @180
  2627: 7c 65 01                 s0 = u8 [s1 + 0x1]
  2630: 55 15 10 e7 04           jump @217 if s0 >=u 16
      :                          @181
  2635: 7b 15 e8 00              u64 [sp + 0xe8] = s0
  2639: 7c 65 02                 s0 = u8 [s1 + 0x2]
  2642: 55 15 10 db 04           jump @217 if s0 >=u 16
      :                          @182
  2647: 7b 15 e0 00              u64 [sp + 0xe0] = s0
  2651: 7c 65 03                 s0 = u8 [s1 + 0x3]
  2654: 55 15 10 cf 04           jump @217 if s0 >=u 16
      :                          @183
  2659: 7b 15 d8 00              u64 [sp + 0xd8] = s0
  2663: 7c 65 04                 s0 = u8 [s1 + 0x4]
  2666: 55 15 10 c3 04           jump @217 if s0 >=u 16
      :                          @184
  2671: 7b 15 d0 00              u64 [sp + 0xd0] = s0
  2675: 7c 65 05                 s0 = u8 [s1 + 0x5]
  2678: 55 15 10 b7 04           jump @217 if s0 >=u 16
      :                          @185
  2683: 7b 15 c8 00              u64 [sp + 0xc8] = s0
  2687: 7c 65 06                 s0 = u8 [s1 + 0x6]
  2690: 55 15 10 ab 04           jump @217 if s0 >=u 16
      :                          @186
  2695: 7b 15 c0 00              u64 [sp + 0xc0] = s0
  2699: 7c 65 07                 s0 = u8 [s1 + 0x7]
  2702: 55 15 10 9f 04           jump @217 if s0 >=u 16
      :                          @187
  2707: 7b 15 b8 00              u64 [sp + 0xb8] = s0
  2711: 7c 65 08                 s0 = u8 [s1 + 0x8]
  2714: 55 15 10 93 04           jump @217 if s0 >=u 16
      :                          @188
  2719: 97 00 03                 ra = ra << 0x3
  2722: 95 18 98 02              a1 = sp + 0x298
  2726: c8 80 00                 ra = ra + a1
  2729: 7b 15 a8 00              u64 [sp + 0xa8] = s0
  2733: 82 05                    s0 = u64 [ra]
  2735: 97 77 03                 a0 = a0 << 0x3
  2738: c8 87 07                 a0 = a0 + a1
  2741: 82 77                    a0 = u64 [a0]
  2743: 7b 16 b0 00              u64 [sp + 0xb0] = s1
  2747: 7b 1c a0 00              u64 [sp + 0xa0] = a5
  2751: 82 16 18 01              s1 = u64 [sp + 0x118]
  2755: c8 c6 06                 s1 = s1 + a5
  2758: c8 65 05                 s0 = s0 + s1
  2761: 82 1c 20 01              a5 = u64 [sp + 0x120]
  2765: d3 5c 0c                 a5 = a5 ^ s0
  2768: 7b 1c 18 01              u64 [sp + 0x118] = a5
  2772: c8 57 07                 a0 = a0 + s0
  2775: 7b 17 20 01              u64 [sp + 0x120] = a0
  2779: 97 33 03                 t1 = t1 << 0x3
  2782: c8 83 03                 t1 = t1 + a1
  2785: 82 37                    a0 = u64 [t1]
  2787: 97 44 03                 t2 = t2 << 0x3
  2790: c8 84 04                 t2 = t2 + a1
  2793: 82 45                    s0 = u64 [t2]
  2795: 82 10 10 01              ra = u64 [sp + 0x110]
  2799: 82 16 28 01              s1 = u64 [sp + 0x128]
  2803: c8 06 06                 s1 = s1 + ra
  2806: c8 67 07                 a0 = a0 + s1
  2809: 82 1c 30 01              a5 = u64 [sp + 0x130]
  2813: d3 c7 03                 t1 = a0 ^ a5
  2816: c8 57 04                 t2 = a0 + s0
  2819: 97 9c 03                 a5 = a2 << 0x3
  2822: c8 8c 0c                 a5 = a5 + a1
  2825: 82 c7                    a0 = u64 [a5]
  2827: 97 22 03                 t0 = t0 << 0x3
  2830: c8 82 02                 t0 = t0 + a1
  2833: 82 2c                    a5 = u64 [t0]
  2835: 82 16 40 01              s1 = u64 [sp + 0x140]
  2839: 82 18 68 01              a1 = u64 [sp + 0x168]
  2843: c8 86 06                 s1 = s1 + a1
  2846: c8 67 07                 a0 = a0 + s1
  2849: 82 19 38 01              a2 = u64 [sp + 0x138]
  2853: d3 79 09                 a2 = a2 ^ a0
  2856: 7b 19 40 01              u64 [sp + 0x140] = a2
  2860: c8 c7 07                 a0 = a0 + a5
  2863: 7b 17 30 01              u64 [sp + 0x130] = a0
  2867: 97 aa 03                 a3 = a3 << 0x3
  2870: 95 18 98 02              a1 = sp + 0x298
  2874: c8 8a 0a                 a3 = a3 + a1
  2877: 82 a7                    a0 = u64 [a3]
  2879: 97 bb 03                 a4 = a4 << 0x3
  2882: c8 8b 0b                 a4 = a4 + a1
  2885: 82 ba                    a3 = u64 [a4]
  2887: 82 16 f8 00              s1 = u64 [sp + 0xf8]
  2891: 82 1b 08 01              a4 = u64 [sp + 0x108]
  2895: c8 6b 0b                 a4 = a4 + s1
  2898: c8 b7 07                 a0 = a0 + a4
  2901: 82 1b 50 01              a4 = u64 [sp + 0x150]
  2905: d3 7b 0b                 a4 = a4 ^ a0
  2908: c8 a7 02                 t0 = a0 + a3
  2911: 82 17 18 01              a0 = u64 [sp + 0x118]
  2915: 9e 77 20                 a0 = a0 >>r 0x20
  2918: 82 1a 48 01              a3 = u64 [sp + 0x148]
  2922: c8 7a 0a                 a3 = a3 + a0
  2925: 82 15 a0 00              s0 = u64 [sp + 0xa0]
  2929: d3 a5 05                 s0 = s0 ^ a3
  2932: 82 19 e8 00              a2 = u64 [sp + 0xe8]
  2936: 97 99 03                 a2 = a2 << 0x3
  2939: c8 89 09                 a2 = a2 + a1
  2942: 82 99                    a2 = u64 [a2]
  2944: 9e 58 18                 a1 = s0 >>r 0x18
  2947: 7b 18 50 01              u64 [sp + 0x150] = a1
  2951: 82 15 20 01              s0 = u64 [sp + 0x120]
  2955: c8 85 05                 s0 = s0 + a1
  2958: d3 57 07                 a0 = a0 ^ s0
  2961: c8 59 09                 a2 = a2 + s0
  2964: 9e 35 20                 s0 = t1 >>r 0x20
  2967: 82 18 f0 00              a1 = u64 [sp + 0xf0]
  2971: c8 85 03                 t1 = s0 + a1
  2974: d3 03 0c                 a5 = t1 ^ ra
  2977: 9e cc 18                 a5 = a5 >>r 0x18
  2980: c8 c4 04                 t2 = t2 + a5
  2983: d3 54 05                 s0 = t2 ^ s0
  2986: 9e 58 10                 a1 = s0 >>r 0x10
  2989: 7b 18 48 01              u64 [sp + 0x148] = a1
  2993: c8 38 08                 a1 = a1 + t1
  2996: 7b 18 38 01              u64 [sp + 0x138] = a1
  3000: d3 c8 08                 a1 = a1 ^ a5
  3003: 9e 88 3f                 a1 = a1 >>r 0x3f
  3006: 7b 18 28 01              u64 [sp + 0x128] = a1
  3010: 9e bb 20                 a4 = a4 >>r 0x20
  3013: 82 10 58 01              ra = u64 [sp + 0x158]
  3017: c8 b0 00                 ra = ra + a4
  3020: d3 60 0c                 a5 = ra ^ s1
  3023: 9e c5 18                 s0 = a5 >>r 0x18
  3026: c8 52 03                 t1 = t0 + s0
  3029: d3 b3 0b                 a4 = t1 ^ a4
  3032: 9e bb 10                 a4 = a4 >>r 0x10
  3035: c8 b0 00                 ra = ra + a4
  3038: 7b 10 08 01              u64 [sp + 0x108] = ra
  3042: 82 1c e0 00              a5 = u64 [sp + 0xe0]
  3046: 97 cc 03                 a5 = a5 << 0x3
  3049: 95 16 98 02              s1 = sp + 0x298
  3053: c8 6c 0c                 a5 = a5 + s1
  3056: 82 cc                    a5 = u64 [a5]
  3058: 82 12 d8 00              t0 = u64 [sp + 0xd8]
  3062: 97 22 03                 t0 = t0 << 0x3
  3065: c8 62 02                 t0 = t0 + s1
  3068: 82 22                    t0 = u64 [t0]
  3070: c8 89 09                 a2 = a2 + a1
  3073: d3 9b 0b                 a4 = a4 ^ a2
  3076: 7b 1b 20 01              u64 [sp + 0x120] = a4
  3080: c8 c9 09                 a2 = a2 + a5
  3083: 7b 19 58 01              u64 [sp + 0x158] = a2
  3087: c8 24 04                 t2 = t2 + t0
  3090: 9e 76 10                 s1 = a0 >>r 0x10
  3093: c8 6a 0a                 a3 = a3 + s1
  3096: 7b 1a 10 01              u64 [sp + 0x110] = a3
  3100: 82 17 40 01              a0 = u64 [sp + 0x140]
  3104: 9e 79 20                 a2 = a0 >>r 0x20
  3107: 82 12 60 01              t0 = u64 [sp + 0x160]
  3111: c8 92 02                 t0 = t0 + a2
  3114: 82 17 68 01              a0 = u64 [sp + 0x168]
  3118: d3 72 0c                 a5 = t0 ^ a0
  3121: 9e cb 18                 a4 = a5 >>r 0x18
  3124: 82 17 30 01              a0 = u64 [sp + 0x130]
  3128: c8 b7 07                 a0 = a0 + a4
  3131: d3 79 09                 a2 = a2 ^ a0
  3134: 9e 90 10                 ra = a2 >>r 0x10
  3137: c8 02 02                 t0 = t0 + ra
  3140: d3 b2 0b                 a4 = t0 ^ a4
  3143: 9e b8 3f                 a1 = a4 >>r 0x3f
  3146: 7b 18 40 01              u64 [sp + 0x140] = a1
  3150: 82 1a d0 00              a3 = u64 [sp + 0xd0]
  3154: 97 aa 03                 a3 = a3 << 0x3
  3157: 95 19 98 02              a2 = sp + 0x298
  3161: c8 9a 0a                 a3 = a3 + a2
  3164: 82 aa                    a3 = u64 [a3]
  3166: 82 1b c8 00              a4 = u64 [sp + 0xc8]
  3170: 97 bb 03                 a4 = a4 << 0x3
  3173: c8 9b 0b                 a4 = a4 + a2
  3176: 82 bb                    a4 = u64 [a4]
  3178: c8 84 04                 t2 = t2 + a1
  3181: d3 64 06                 s1 = t2 ^ s1
  3184: c8 4a 0a                 a3 = a3 + t2
  3187: 7b 1a 68 01              u64 [sp + 0x168] = a3
  3191: c8 7b 0b                 a4 = a4 + a0
  3194: 82 18 08 01              a1 = u64 [sp + 0x108]
  3198: d3 58 07                 a0 = a1 ^ s0
  3201: 9e 7c 3f                 a5 = a0 >>r 0x3f
  3204: 82 1a c0 00              a3 = u64 [sp + 0xc0]
  3208: 97 aa 03                 a3 = a3 << 0x3
  3211: c8 9a 0a                 a3 = a3 + a2
  3214: 82 aa                    a3 = u64 [a3]
  3216: 82 15 b8 00              s0 = u64 [sp + 0xb8]
  3220: 97 55 03                 s0 = s0 << 0x3
  3223: c8 95 05                 s0 = s0 + a2
  3226: 82 55                    s0 = u64 [s0]
  3228: c8 cb 0b                 a4 = a4 + a5
  3231: 82 17 48 01              a0 = u64 [sp + 0x148]
  3235: d3 b7 07                 a0 = a0 ^ a4
  3238: 7b 17 30 01              u64 [sp + 0x130] = a0
  3242: c8 ba 0a                 a3 = a3 + a4
  3245: 7b 1a 48 01              u64 [sp + 0x148] = a3
  3249: c8 53 03                 t1 = t1 + s0
  3252: 82 1a 50 01              a3 = u64 [sp + 0x150]
  3256: 82 17 10 01              a0 = u64 [sp + 0x110]
  3260: d3 a7 0b                 a4 = a0 ^ a3
  3263: 82 15 a8 00              s0 = u64 [sp + 0xa8]
  3267: 97 55 03                 s0 = s0 << 0x3
  3270: c8 95 05                 s0 = s0 + a2
  3273: 82 55                    s0 = u64 [s0]
  3275: 9e bb 3f                 a4 = a4 >>r 0x3f
  3278: c8 b3 03                 t1 = t1 + a4
  3281: d3 03 04                 t2 = t1 ^ ra
  3284: c8 53 03                 t1 = t1 + s0
  3287: 82 19 20 01              a2 = u64 [sp + 0x120]
  3291: 9e 95 20                 s0 = a2 >>r 0x20
  3294: c8 25 09                 a2 = s0 + t0
  3297: 82 1a 28 01              a3 = u64 [sp + 0x128]
  3301: d3 a9 00                 ra = a2 ^ a3
  3304: 9e 00 18                 ra = ra >>r 0x18
  3307: 82 1a 58 01              a3 = u64 [sp + 0x158]
  3311: c8 0a 0a                 a3 = a3 + ra
  3314: 7b 1a 18 01              u64 [sp + 0x118] = a3
  3318: d3 a5 05                 s0 = s0 ^ a3
  3321: 9e 5a 10                 a3 = s0 >>r 0x10
  3324: 7b 1a 50 01              u64 [sp + 0x150] = a3
  3328: c8 a9 09                 a2 = a2 + a3
  3331: 7b 19 60 01              u64 [sp + 0x160] = a2
  3335: d3 09 09                 a2 = a2 ^ ra
  3338: 9e 90 3f                 ra = a2 >>r 0x3f
  3341: 9e 69 20                 a2 = s1 >>r 0x20
  3344: c8 89 05                 s0 = a2 + a1
  3347: 82 16 40 01              s1 = u64 [sp + 0x140]
  3351: d3 56 06                 s1 = s1 ^ s0
  3354: 9e 66 18                 s1 = s1 >>r 0x18
  3357: 82 18 68 01              a1 = u64 [sp + 0x168]
  3361: c8 68 08                 a1 = a1 + s1
  3364: 7b 18 28 01              u64 [sp + 0x128] = a1
  3368: d3 89 09                 a2 = a2 ^ a1
  3371: 9e 99 10                 a2 = a2 >>r 0x10
  3374: 7b 19 20 01              u64 [sp + 0x120] = a2
  3378: c8 59 09                 a2 = a2 + s0
  3381: 7b 19 58 01              u64 [sp + 0x158] = a2
  3385: d3 69 09                 a2 = a2 ^ s1
  3388: 82 16 b0 00              s1 = u64 [sp + 0xb0]
  3392: 9e 9a 3f                 a3 = a2 >>r 0x3f
  3395: 82 18 30 01              a1 = u64 [sp + 0x130]
  3399: 9e 89 20                 a2 = a1 >>r 0x20
  3402: c8 79 08                 a1 = a2 + a0
  3405: d3 c8 07                 a0 = a1 ^ a5
  3408: 9e 77 18                 a0 = a0 >>r 0x18
  3411: 82 12 48 01              t0 = u64 [sp + 0x148]
  3415: c8 72 02                 t0 = t0 + a0
  3418: 7b 12 40 01              u64 [sp + 0x140] = t0
  3422: d3 92 09                 a2 = t0 ^ a2
  3425: 9e 99 10                 a2 = a2 >>r 0x10
  3428: 7b 19 30 01              u64 [sp + 0x130] = a2
  3432: c8 98 08                 a1 = a1 + a2
  3435: 7b 18 48 01              u64 [sp + 0x148] = a1
  3439: d3 87 07                 a0 = a0 ^ a1
  3442: 9e 72 3f                 t0 = a0 >>r 0x3f
  3445: 9e 47 20                 a0 = t2 >>r 0x20
  3448: 82 18 38 01              a1 = u64 [sp + 0x138]
  3452: c8 78 08                 a1 = a1 + a0
  3455: d3 8b 0b                 a4 = a4 ^ a1
  3458: 9e b9 18                 a2 = a4 >>r 0x18
  3461: c8 93 03                 t1 = t1 + a2
  3464: d3 73 07                 a0 = t1 ^ a0
  3467: 9e 7b 10                 a4 = a0 >>r 0x10
  3470: 7b 1b 38 01              u64 [sp + 0x138] = a4
  3474: c8 8b 0b                 a4 = a4 + a1
  3477: d3 9b 07                 a0 = a4 ^ a2
  3480: 9e 7c 3f                 a5 = a0 >>r 0x3f
  3483: 82 15 00 01              s0 = u64 [sp + 0x100]
  3487: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  3490: 95 66 10                 s1 = s1 + 0x10
  3493: 52 05 45 fc              jump @172 if s0 != 0
      :                          @189
  3497: 33 07                    a0 = 0
  3499: 82 18 48                 a1 = u64 [sp + 0x48]
  3502: 82 19 18 01              a2 = u64 [sp + 0x118]
  3506: d3 98 08                 a1 = a1 ^ a2
  3509: 82 19 48 01              a2 = u64 [sp + 0x148]
  3513: d3 98 08                 a1 = a1 ^ a2
  3516: 7b 18 b8 01              u64 [sp + 0x1b8] = a1
  3520: 82 18 50                 a1 = u64 [sp + 0x50]
  3523: 82 19 28 01              a2 = u64 [sp + 0x128]
  3527: d3 98 08                 a1 = a1 ^ a2
  3530: d3 b8 08                 a1 = a1 ^ a4
  3533: 7b 18 c0 01              u64 [sp + 0x1c0] = a1
  3537: 82 18 58                 a1 = u64 [sp + 0x58]
  3540: 82 19 60 01              a2 = u64 [sp + 0x160]
  3544: d3 98 08                 a1 = a1 ^ a2
  3547: 82 19 40 01              a2 = u64 [sp + 0x140]
  3551: d3 98 08                 a1 = a1 ^ a2
  3554: 7b 18 c8 01              u64 [sp + 0x1c8] = a1
  3558: 82 18 60                 a1 = u64 [sp + 0x60]
  3561: 82 19 58 01              a2 = u64 [sp + 0x158]
  3565: d3 98 08                 a1 = a1 ^ a2
  3568: d3 38 08                 a1 = a1 ^ t1
  3571: 7b 18 d0 01              u64 [sp + 0x1d0] = a1
  3575: 82 18 68                 a1 = u64 [sp + 0x68]
  3578: 82 19 20 01              a2 = u64 [sp + 0x120]
  3582: d3 98 08                 a1 = a1 ^ a2
  3585: d3 c8 08                 a1 = a1 ^ a5
  3588: 7b 18 d8 01              u64 [sp + 0x1d8] = a1
  3592: 82 18 70                 a1 = u64 [sp + 0x70]
  3595: d3 80 08                 a1 = ra ^ a1
  3598: 82 19 30 01              a2 = u64 [sp + 0x130]
  3602: d3 98 08                 a1 = a1 ^ a2
  3605: 7b 18 e0 01              u64 [sp + 0x1e0] = a1
  3609: 82 18 78                 a1 = u64 [sp + 0x78]
  3612: d3 a8 08                 a1 = a1 ^ a3
  3615: 82 19 38 01              a2 = u64 [sp + 0x138]
  3619: d3 98 08                 a1 = a1 ^ a2
  3622: 7b 18 e8 01              u64 [sp + 0x1e8] = a1
  3626: 82 18 80 00              a1 = u64 [sp + 0x80]
  3630: 82 19 50 01              a2 = u64 [sp + 0x150]
  3634: d3 98 08                 a1 = a1 ^ a2
  3637: d3 28 08                 a1 = a1 ^ t0
  3640: 7b 18 f0 01              u64 [sp + 0x1f0] = a1
  3644: 49 21 88 02              u64 [sp + 648] = 0
  3648: 82 1a 98 00              a3 = u64 [sp + 0x98]
  3652: 82 1c 88 00              a5 = u64 [sp + 0x88]
  3656: c9 ca 08                 a1 = a3 - a5
  3659: 33 09 80 00              a2 = 0x80
  3663: e6 98 06                 s1 = minu(a1, a2)
  3666: 01                       fallthrough
      :                          @190
  3667: c8 c6 05                 s0 = s1 + a5
  3670: ac 65 28 01              jump @232 if s0 <u s1
      :                          @191
  3674: ac 5a 25 01              jump @233 if a3 <u s0
      :                          @192
  3678: 95 18 08 02              a1 = sp + 0x208
  3682: c8 87 07                 a0 = a0 + a1
  3685: 82 18 90 00              a1 = u64 [sp + 0x90]
  3689: c8 c8 08                 a1 = a1 + a5
  3692: 64 69                    a2 = s1
  3694: 50 10 34 2c 08           ra = 52, jump @392
      :                          @193 [@dyn 26]
  3699: 82 17 88 02              a0 = u64 [sp + 0x288]
  3703: c8 67 07                 a0 = a0 + s1
  3706: 7b 17 88 02              u64 [sp + 0x288] = a0
  3710: 64 5c                    a5 = s0
  3712: 82 1a 98 00              a3 = u64 [sp + 0x98]
  3716: ac a5 75 fa              jump @163 if s0 <u a3
      :                          @194
  3720: 7c 18 90 02              a1 = u8 [sp + 0x290]
  3724: 52 08 97 00              jump @216 if a1 != 0
      :                          @195
  3728: 82 18 f8 01              a1 = u64 [sp + 0x1f8]
  3732: 85 79 ff                 a2 = a0 ^ 0xffffffffffffffff
  3735: ae 89 0f                 jump @197 if a2 >=u a1
      :                          @196
  3738: 82 18 00 02              a1 = u64 [sp + 0x200]
  3742: 95 88 01                 a1 = a1 + 0x1
  3745: 7b 18 00 02              u64 [sp + 0x200] = a1
  3749: 01                       fallthrough
      :                          @197
  3750: 55 27 81 00 de 00        jump @238 if a0 >=u 129
      :                          @198
  3756: 33 08 8b 01 01           a1 = 0x1018b
  3761: 33 09 0c                 a2 = 0xc
  3764: 33 0a 0f                 a3 = 0xf
  3767: 33 0b 10                 a4 = 0x10
  3770: 01                       fallthrough
      :                          @199
  3771: 7c 87 f9                 a0 = u8 [a1 + 0xfffffffffffffff9]
  3774: ac 7a 70                 jump @218 if a3 <u a0
      :                          @200
  3777: 7c 87 fa                 a0 = u8 [a1 + 0xfffffffffffffffa]
  3780: ae b7 6a                 jump @218 if a0 >=u a4
      :                          @201
  3783: 7c 87 fb                 a0 = u8 [a1 + 0xfffffffffffffffb]
  3786: ae b7 64                 jump @218 if a0 >=u a4
      :                          @202
  3789: 7c 87 fc                 a0 = u8 [a1 + 0xfffffffffffffffc]
  3792: ae b7 5e                 jump @218 if a0 >=u a4
      :                          @203
  3795: 7c 87 fd                 a0 = u8 [a1 + 0xfffffffffffffffd]
  3798: ae b7 58                 jump @218 if a0 >=u a4
      :                          @204
  3801: 7c 87 fe                 a0 = u8 [a1 + 0xfffffffffffffffe]
  3804: ae b7 52                 jump @218 if a0 >=u a4
      :                          @205
  3807: 7c 87 ff                 a0 = u8 [a1 + 0xffffffffffffffff]
  3810: ae b7 4c                 jump @218 if a0 >=u a4
      :                          @206
  3813: 7c 87                    a0 = u8 [a1]
  3815: ae b7 47                 jump @218 if a0 >=u a4
      :                          @207
  3818: 7c 87 01                 a0 = u8 [a1 + 0x1]
  3821: ae b7 41                 jump @218 if a0 >=u a4
      :                          @208
  3824: 7c 87 02                 a0 = u8 [a1 + 0x2]
  3827: ae b7 3b                 jump @218 if a0 >=u a4
      :                          @209
  3830: 7c 87 03                 a0 = u8 [a1 + 0x3]
  3833: ae b7 35                 jump @218 if a0 >=u a4
      :                          @210
  3836: 7c 87 04                 a0 = u8 [a1 + 0x4]
  3839: ae b7 2f                 jump @218 if a0 >=u a4
      :                          @211
  3842: 7c 87 05                 a0 = u8 [a1 + 0x5]
  3845: ae b7 29                 jump @218 if a0 >=u a4
      :                          @212
  3848: 7c 87 06                 a0 = u8 [a1 + 0x6]
  3851: ae b7 23                 jump @218 if a0 >=u a4
      :                          @213
  3854: 7c 87 07                 a0 = u8 [a1 + 0x7]
  3857: ae b7 1d                 jump @218 if a0 >=u a4
      :                          @214
  3860: 7c 87 08                 a0 = u8 [a1 + 0x8]
  3863: ae b7 17                 jump @218 if a0 >=u a4
      :                          @215
  3866: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  3869: 95 88 10                 a1 = a1 + 0x10
  3872: 52 09 9b                 jump @199 if a2 != 0
      :                          @216
  3875: 95 17 b8 01              a0 = sp + 0x1b8
  3879: 33 08 20                 a1 = 0x20
  3882: 28 b3 f6                 jump @122
      :                          @217
  3885: 00                       trap
      :                          @218
  3886: 00                       trap
      :                          @219
  3887: 49 21 b8 01              u64 [sp + 440] = 0
  3891: 49 21 c0 01 01           u64 [sp + 448] = 0x1
  3896: 49 21 c8 01              u64 [sp + 456] = 0
  3900: 01                       fallthrough
      :                          @220
  3901: 95 17 b8 01              a0 = sp + 0x1b8
  3905: 33 09 20                 a2 = 0x20
  3908: 33 08                    a1 = 0
  3910: 50 10 36 cb f4           ra = 54, jump @77
      :                          @221 [@dyn 27]
  3915: 82 15 c8 01              s0 = u64 [sp + 0x1c8]
  3919: 82 18 c0 01              a1 = u64 [sp + 0x1c0]
  3923: 82 16 b8 01              s1 = u64 [sp + 0x1b8]
  3927: 28 fe f6                 jump @132
      :                          @222
  3930: 95 17 b8 01              a0 = sp + 0x1b8
  3934: 64 95                    s0 = a2
  3936: 50 10 38 b1 f4           ra = 56, jump @77
      :                          @223 [@dyn 28]
  3941: 64 59                    a2 = s0
  3943: 82 18 c8 01              a1 = u64 [sp + 0x1c8]
  3947: 82 15 c0 01              s0 = u64 [sp + 0x1c0]
  3951: 82 16 b8 01              s1 = u64 [sp + 0x1b8]
  3955: 28 1b f7                 jump @135
      :                          @224
  3958: 00                       trap
      :                          @225
  3959: 00                       trap
      :                          @226
  3960: 00                       trap
      :                          @227
  3961: 00                       trap
      :                          @228
  3962: 00                       trap
      :                          @229
  3963: 00                       trap
      :                          @230
  3964: 00                       trap
      :                          @231
  3965: 00                       trap
      :                          @232
  3966: 00                       trap
      :                          @233
  3967: 00                       trap
      :                          @234
  3968: 00                       trap
      :                          @235
  3969: 00                       trap
      :                          @236
  3970: 00                       trap
      :                          @237
  3971: 00                       trap
      :                          @238
  3972: 00                       trap
      :                          @239 [export #1: 'accumulate']
  3973: 95 11 08 f8              sp = sp + 0xfffffffffffff808
  3977: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
  3981: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
  3985: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
  3989: 95 11 48 fd              sp = sp + 0xfffffffffffffd48
  3993: 64 85                    s0 = a1
  3995: 7b 17 10                 u64 [sp + 0x10] = a0
  3998: 95 16 ff 07              s1 = sp + 0x7ff
  4002: 95 66 31 02              s1 = s1 + 0x231
  4006: 33 09 00 0a              a2 = 0xa00
  4010: 95 17 18                 a0 = sp + 0x18
  4013: 33 08                    a1 = 0
  4015: 50 10 3a 9d 07           ra = 58, jump @410
      :                          @240 [@dyn 29]
  4020: 49 06                    u64 [s1 + 0] = 0
  4022: 49 16 f8                 u64 [s1 + 4294967288] = 0
  4025: 49 16 f0                 u64 [s1 + 4294967280] = 0
  4028: 49 16 e8                 u64 [s1 + 4294967272] = 0
  4031: 51 05 a1 00              jump @259 if s0 == 0
      :                          @241
  4035: 64 5a                    a3 = s0
  4037: 82 17 10                 a0 = u64 [sp + 0x10]
  4040: 64 75                    s0 = a0
  4042: 7d 77                    a0 = i8 [a0]
  4044: 33 06 01                 s1 = 0x1
  4047: 59 07 37                 jump @248 if a0 >=s 0
      :                          @242
  4050: 84 77 ff 00              a0 = a0 & 0xff
  4054: 33 06 02                 s1 = 0x2
  4057: 53 27 c0 00 2d           jump @248 if a0 <u 192
      :                          @243
  4062: 33 06 03                 s1 = 0x3
  4065: 53 27 e0 00 25           jump @248 if a0 <u 224
      :                          @244
  4070: 33 06 04                 s1 = 0x4
  4073: 53 27 f0 00 1d           jump @248 if a0 <u 240
      :                          @245
  4078: 33 06 05                 s1 = 0x5
  4081: 53 27 f8 00 15           jump @248 if a0 <u 248
      :                          @246
  4086: 33 06 06                 s1 = 0x6
  4089: 53 27 fc 00 0d           jump @248 if a0 <u 252
      :                          @247
  4094: 88 77 fe 00              a0 = a0 <u 0xfe
  4098: 9a 76 08                 s1 = 0x8 - a0
  4101: 01                       fallthrough
      :                          @248
  4102: ac 6a 5a                 jump @259 if a3 <u s1
      :                          @249
  4105: 64 57                    a0 = s0
  4107: 64 68                    a1 = s1
  4109: 7b 1a 08                 u64 [sp + 0x8] = a3
  4112: 50 10 3c 9b 0f           ra = 60, jump @580
      :                          @250 [@dyn 30]
  4117: 82 18 08                 a1 = u64 [sp + 0x8]
  4120: aa 68 48                 jump @259 if a1 == s1
      :                          @251
  4123: c8 56 07                 a0 = s1 + s0
  4126: 7d 79                    a2 = i8 [a0]
  4128: c9 68 0a                 a3 = a1 - s1
  4131: 33 05 01                 s0 = 0x1
  4134: 59 09 37                 jump @258 if a2 >=s 0
      :                          @252
  4137: 84 99 ff 00              a2 = a2 & 0xff
  4141: 33 05 02                 s0 = 0x2
  4144: 53 29 c0 00 2d           jump @258 if a2 <u 192
      :                          @253
  4149: 33 05 03                 s0 = 0x3
  4152: 53 29 e0 00 25           jump @258 if a2 <u 224
      :                          @254
  4157: 33 05 04                 s0 = 0x4
  4160: 53 29 f0 00 1d           jump @258 if a2 <u 240
      :                          @255
  4165: 33 05 05                 s0 = 0x5
  4168: 53 29 f8 00 15           jump @258 if a2 <u 248
      :                          @256
  4173: 33 05 06                 s0 = 0x6
  4176: 53 29 fc 00 0d           jump @258 if a2 <u 252
      :                          @257
  4181: 88 98 fe 00              a1 = a2 <u 0xfe
  4185: 9a 85 08                 s0 = 0x8 - a1
  4188: 01                       fallthrough
      :                          @258
  4189: ae 5a 21                 jump @261 if a3 >=u s0
      :                          @259
  4192: 33 08                    a1 = 0
  4194: 33 07 00 00 01           a0 = 0x10000
  4199: 01                       fallthrough
      :                          @260
  4200: 95 11 b8 02              sp = sp + 0x2b8
  4204: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  4208: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  4212: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  4216: 95 11 f8 07              sp = sp + 0x7f8
  4220: 32 00                    ret
      :                          @261
  4222: 64 58                    a1 = s0
  4224: 7b 1a 10                 u64 [sp + 0x10] = a3
  4227: 64 76                    s1 = a0
  4229: 50 10 3e 26 0f           ra = 62, jump @580
      :                          @262 [@dyn 31]
  4234: c8 65 07                 a0 = s0 + s1
  4237: 82 16 10                 s1 = u64 [sp + 0x10]
  4240: ab 56 0b                 jump @264 if s1 != s0
      :                          @263
  4243: 33 08                    a1 = 0
  4245: 33 00 40                 ra = 0x40
  4248: 28 13 0f                 jump @580
      :                          @264
  4251: 7d 79                    a2 = i8 [a0]
  4253: c9 56 06                 s1 = s1 - s0
  4256: 33 08 01                 a1 = 0x1
  4259: 59 09 44                 jump @271 if a2 >=s 0
      :                          @265
  4262: 84 99 ff 00              a2 = a2 & 0xff
  4266: 33 0a c0 00              a3 = 0xc0
  4270: 33 08 02                 a1 = 0x2
  4273: ac a9 36                 jump @271 if a2 <u a3
      :                          @266
  4276: 33 0a e0 00              a3 = 0xe0
  4280: 33 08 03                 a1 = 0x3
  4283: ac a9 2c                 jump @271 if a2 <u a3
      :                          @267
  4286: 33 0a f0 00              a3 = 0xf0
  4290: 33 08 04                 a1 = 0x4
  4293: ac a9 22                 jump @271 if a2 <u a3
      :                          @268
  4296: 33 0a f8 00              a3 = 0xf8
  4300: 33 08 05                 a1 = 0x5
  4303: ac a9 18                 jump @271 if a2 <u a3
      :                          @269
  4306: 33 0a fc 00              a3 = 0xfc
  4310: 33 08 06                 a1 = 0x6
  4313: ac a9 0e                 jump @271 if a2 <u a3
      :                          @270
  4316: 88 98 fe 00              a1 = a2 <u 0xfe
  4320: 33 09 08                 a2 = 0x8
  4323: c9 89 08                 a1 = a2 - a1
  4326: 01                       fallthrough
      :                          @271
  4327: ac 86 79 ff              jump @259 if s1 <u a1
      :                          @272
  4331: 50 10 40 c0 0e           ra = 64, jump @580
      :                          @273 [@dyn 32]
  4336: 95 16 ff 07              s1 = sp + 0x7ff
  4340: 95 66 31 02              s1 = s1 + 0x231
  4344: 7a 67 0c                 u32 [s1 + 0xc] = a0
  4347: 95 17 ff 07              a0 = sp + 0x7ff
  4351: 95 77 3d 02              a0 = a0 + 0x23d
  4355: 7b 67 58                 u64 [s1 + 0x58] = a0
  4358: 33 07 90 00              a0 = 0x90
  4362: 7b 67 60                 u64 [s1 + 0x60] = a0
  4365: 33 07 38 00 01           a0 = 0x10038
  4370: 7b 67 28                 u64 [s1 + 0x28] = a0
  4373: 49 16 30 01              u64 [s1 + 48] = 0x1
  4377: 49 16 48                 u64 [s1 + 72] = 0
  4380: 95 18 ff 07              a1 = sp + 0x7ff
  4384: 95 88 89 02              a1 = a1 + 0x289
  4388: 7b 68 38                 u64 [s1 + 0x38] = a1
  4391: 49 16 40 01              u64 [s1 + 64] = 0x1
  4395: 95 17 ff 07              a0 = sp + 0x7ff
  4399: 95 77 41 02              a0 = a0 + 0x241
  4403: 95 18 ff 07              a1 = sp + 0x7ff
  4407: 95 88 59 02              a1 = a1 + 0x259
  4411: 50 10 42 eb 02           ra = 66, jump @342
      :                          @274 [@dyn 33]
  4416: 82 65 18                 s0 = u64 [s1 + 0x18]
  4419: 82 6b 20                 a4 = u64 [s1 + 0x20]
  4422: 82 66 10                 s1 = u64 [s1 + 0x10]
  4425: 33 07 02                 a0 = 0x2
  4428: 33 08                    a1 = 0
  4430: 33 09                    a2 = 0
  4432: 64 5a                    a3 = s0
  4434: 33 00 44                 ra = 0x44
  4437: 0a 64                    ecalli 100 // 'log'
  4439: 01                       fallthrough
      :                          @275 [@dyn 34]
  4440: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
  4445: 53 38 00 00 ff 25        jump @281 if a1 <u 4294901760
      :                          @276
  4451: 33 07 60 00 03           a0 = 0x30060
  4456: 95 77 00 00 01           a0 = a0 + 0x10000
  4461: 01                       fallthrough
      :                          @277
  4462: 82 78                    a1 = u64 [a0]
  4464: c9 87 09                 a2 = a0 - a1
  4467: ab 59 0f                 jump @281 if a2 != s0
      :                          @278
  4470: c9 68 09                 a2 = a1 - s1
  4473: 01                       fallthrough
      :                          @279
  4474: 82 7a                    a3 = u64 [a0]
  4476: ab 8a f2                 jump @277 if a3 != a1
      :                          @280
  4479: 7b 79                    u64 [a0] = a2
  4481: 01                       fallthrough
      :                          @281
  4482: 95 18 ff 07              a1 = sp + 0x7ff
  4486: 95 88 19 02              a1 = a1 + 0x219
  4490: 33 09 08                 a2 = 0x8
  4493: 33 0a 0e                 a3 = 0xe
  4496: 33 07                    a0 = 0
  4498: 33 0b                    a4 = 0
  4500: 33 0c                    a5 = 0
  4502: 0a 01                    ecalli 1 // 'fetch'
  4504: 33 06 50                 s1 = 0x50
  4507: 95 15 18                 s0 = sp + 0x18
  4510: 01                       fallthrough
      :                          @282
  4511: 95 18 ff 07              a1 = sp + 0x7ff
  4515: 95 88 19 02              a1 = a1 + 0x219
  4519: 33 09 20                 a2 = 0x20
  4522: 64 57                    a0 = s0
  4524: 50 10 46 ee 04           ra = 70, jump @392
      :                          @283 [@dyn 35]
  4529: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  4532: 95 55 20                 s0 = s0 + 0x20
  4535: 52 06 e8                 jump @282 if s1 != 0
      :                          @284
  4538: 33 09 34 30              a2 = 0x3034
  4542: 95 18 18                 a1 = sp + 0x18
  4545: 33 07                    a0 = 0
  4547: 0a 0f                    ecalli 15 // 'assign'
  4549: 33 09 d5 dd 00           a2 = 0xddd5
  4554: 33 07 01                 a0 = 0x1
  4557: 95 18 18                 a1 = sp + 0x18
  4560: 0a 0f                    ecalli 15 // 'assign'
  4562: 95 17 ff 07              a0 = sp + 0x7ff
  4566: 95 77 19 02              a0 = a0 + 0x219
  4570: 33 08 20                 a1 = 0x20
  4573: 28 8b fe                 jump @260
      :                          @285 [export #2: 'on_transfer']
  4576: 33 07 00 00 01           a0 = 0x10000
  4581: 33 08                    a1 = 0
  4583: 32 00                    ret
      :                          @286
  4585: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  4588: 7b 10 40                 u64 [sp + 0x40] = ra
  4591: 7b 15 38                 u64 [sp + 0x38] = s0
  4594: 7b 16 30                 u64 [sp + 0x30] = s1
  4597: c8 89 09                 a2 = a2 + a1
  4600: ac 89 52                 jump @294 if a2 <u a1
      :                          @287
  4603: 64 75                    s0 = a0
  4605: 82 77                    a0 = u64 [a0]
  4607: 97 78 01                 a1 = a0 << 0x1
  4610: 33 0a 08                 a3 = 0x8
  4613: e4 a9 09                 a2 = maxu(a2, a3)
  4616: e4 98 06                 s1 = maxu(a1, a2)
  4619: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  4622: 98 88 3f                 a1 = a1 >> 0x3f
  4625: 51 07 12                 jump @289 if a0 == 0
      :                          @288
  4628: 82 59 08                 a2 = u64 [s0 + 0x8]
  4631: 7b 19 18                 u64 [sp + 0x18] = a2
  4634: 49 11 20 01              u64 [sp + 32] = 0x1
  4638: 7b 17 28                 u64 [sp + 0x28] = a0
  4641: 28 06                    jump @290
      :                          @289
  4643: 49 11 20                 u64 [sp + 32] = 0
  4646: 01                       fallthrough
      :                          @290
  4647: 64 17                    a0 = sp
  4649: 95 1a 18                 a3 = sp + 0x18
  4652: 64 69                    a2 = s1
  4654: 50 10 48 32              ra = 72, jump @298
      :                          @291 [@dyn 36]
  4658: 82 18                    a1 = u64 [sp]
  4660: 82 17 08                 a0 = u64 [sp + 0x8]
  4663: 51 08 14                 jump @295 if a1 == 0
      :                          @292
  4666: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  4676: aa 87 0d                 jump @296 if a0 == a1
      :                          @293
  4679: 52 07 18                 jump @297 if a0 != 0
      :                          @294
  4682: 00                       trap
      :                          @295
  4683: 7b 57 08                 u64 [s0 + 0x8] = a0
  4686: 7b 56                    u64 [s0] = s1
  4688: 01                       fallthrough
      :                          @296
  4689: 82 10 40                 ra = u64 [sp + 0x40]
  4692: 82 15 38                 s0 = u64 [sp + 0x38]
  4695: 82 16 30                 s1 = u64 [sp + 0x30]
  4698: 95 11 48                 sp = sp + 0x48
  4701: 32 00                    ret
      :                          @297
  4703: 00                       trap
      :                          @298
  4704: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  4707: 7b 10 30                 u64 [sp + 0x30] = ra
  4710: 7b 15 28                 u64 [sp + 0x28] = s0
  4713: 7b 16 20                 u64 [sp + 0x20] = s1
  4716: 64 95                    s0 = a2
  4718: 64 72                    t0 = a0
  4720: 51 08 79                 jump @308 if a1 == 0
      :                          @299
  4723: 82 a7 08                 a0 = u64 [a3 + 0x8]
  4726: 51 07 7c                 jump @309 if a0 == 0
      :                          @300
  4729: 82 a9 10                 a2 = u64 [a3 + 0x10]
  4732: 51 09 aa 00              jump @316 if a2 == 0
      :                          @301
  4736: 82 a8                    a1 = u64 [a3]
  4738: 33 06 60 00 03           s1 = 0x30060
  4743: 33 03 00 00 01           t1 = 0x10000
  4748: c8 36 06                 s1 = s1 + t1
  4751: 01                       fallthrough
      :                          @302
  4752: 82 6a                    a3 = u64 [s1]
  4754: c8 5a 07                 a0 = a3 + s0
  4757: ac a7 cf 00              jump @322 if a0 <u a3
      :                          @303
  4761: 95 7b 01                 a4 = a0 + 0x1
  4764: 88 bc 01                 a5 = a4 <u 0x1
  4767: d8 b3 0b                 a4 = t1 <u a4
  4770: d4 cb 0b                 a4 = a4 | a5
  4773: 52 0b bf 00              jump @322 if a4 != 0
      :                          @304
  4777: 82 6b                    a4 = u64 [s1]
  4779: ab ab e5                 jump @302 if a4 != a3
      :                          @305
  4782: 7b 67                    u64 [s1] = a0
  4784: 33 0c                    a5 = 0
  4786: 7b 12 18                 u64 [sp + 0x18] = t0
  4789: 33 0a 60 00 03           a3 = 0x30060
  4794: 33 0b 00 00 01           a4 = 0x10000
  4799: 7b 1a                    u64 [sp] = a3
  4801: c8 ba 0a                 a3 = a3 + a4
  4804: c9 7a 07                 a0 = a3 - a0
  4807: 7b 17 10                 u64 [sp + 0x10] = a0
  4810: 7b 18 08                 u64 [sp + 0x8] = a1
  4813: 64 96                    s1 = a2
  4815: 50 10 4a cb 03           ra = 74, jump @392
      :                          @306 [@dyn 37]
  4820: 54 36 00 00 01 98 00     jump @323 if s1 <=u 65536
      :                          @307
  4827: 82 12 18                 t0 = u64 [sp + 0x18]
  4830: 82 18 10                 a1 = u64 [sp + 0x10]
  4833: 33 07                    a0 = 0
  4835: 7b 28 08                 u64 [t0 + 0x8] = a1
  4838: 28 b5 00                 jump @329
      :                          @308
  4841: 49 12 08                 u64 [t0 + 8] = 0
  4844: 33 07 01                 a0 = 0x1
  4847: 28 ac 00                 jump @329
      :                          @309
  4850: 33 09 60 00 03           a2 = 0x30060
  4855: 33 07 00 00 01           a0 = 0x10000
  4860: c8 79 09                 a2 = a2 + a0
  4863: 01                       fallthrough
      :                          @310
  4864: 82 9a                    a3 = u64 [a2]
  4866: c8 5a 08                 a1 = a3 + s0
  4869: ac a8 5f                 jump @322 if a1 <u a3
      :                          @311
  4872: 95 8b 01                 a4 = a1 + 0x1
  4875: 88 bc 01                 a5 = a4 <u 0x1
  4878: d8 b7 0b                 a4 = a0 <u a4
  4881: d4 cb 0b                 a4 = a4 | a5
  4884: 52 0b 50                 jump @322 if a4 != 0
      :                          @312
  4887: 82 9b                    a4 = u64 [a2]
  4889: ab ab e7                 jump @310 if a4 != a3
      :                          @313
  4892: 7b 98                    u64 [a2] = a1
  4894: 33 0c                    a5 = 0
  4896: 01                       fallthrough
      :                          @314
  4897: ab ab df                 jump @310 if a4 != a3
      :                          @315
  4900: 28 31                    jump @321
      :                          @316
  4902: 33 09 60 00 03           a2 = 0x30060
  4907: 33 07 00 00 01           a0 = 0x10000
  4912: c8 79 09                 a2 = a2 + a0
  4915: 01                       fallthrough
      :                          @317
  4916: 82 9a                    a3 = u64 [a2]
  4918: c8 5a 08                 a1 = a3 + s0
  4921: ac a8 2b                 jump @322 if a1 <u a3
      :                          @318
  4924: 95 8b 01                 a4 = a1 + 0x1
  4927: 88 bc 01                 a5 = a4 <u 0x1
  4930: d8 b7 0b                 a4 = a0 <u a4
  4933: d4 cb 0b                 a4 = a4 | a5
  4936: 52 0b 1c                 jump @322 if a4 != 0
      :                          @319
  4939: 82 9b                    a4 = u64 [a2]
  4941: ab ab e7                 jump @317 if a4 != a3
      :                          @320
  4944: 7b 98                    u64 [a2] = a1
  4946: 33 0c                    a5 = 0
  4948: 01                       fallthrough
      :                          @321
  4949: 33 07 60 00 04           a0 = 0x40060
  4954: c9 87 08                 a1 = a0 - a1
  4957: 33 07                    a0 = 0
  4959: 7b 28 08                 u64 [t0 + 0x8] = a1
  4962: 28 39                    jump @329
      :                          @322
  4964: 33 07 01                 a0 = 0x1
  4967: 7b 27 08                 u64 [t0 + 0x8] = a0
  4970: 28 31                    jump @329
      :                          @323
  4972: 64 6c                    a5 = s1
  4974: 82 17                    a0 = u64 [sp]
  4976: 95 77 00 00 01           a0 = a0 + 0x10000
  4981: 82 12 18                 t0 = u64 [sp + 0x18]
  4984: 82 16 08                 s1 = u64 [sp + 0x8]
  4987: 01                       fallthrough
      :                          @324
  4988: 82 78                    a1 = u64 [a0]
  4990: c9 87 09                 a2 = a0 - a1
  4993: ab 69 11                 jump @328 if a2 != s1
      :                          @325
  4996: c9 c8 09                 a2 = a1 - a5
  4999: 01                       fallthrough
      :                          @326
  5000: 82 7a                    a3 = u64 [a0]
  5002: ab 8a f2                 jump @324 if a3 != a1
      :                          @327
  5005: 7b 79                    u64 [a0] = a2
  5007: 33 0b                    a4 = 0
  5009: 01                       fallthrough
      :                          @328
  5010: 82 18 10                 a1 = u64 [sp + 0x10]
  5013: 33 07                    a0 = 0
  5015: 7b 28 08                 u64 [t0 + 0x8] = a1
  5018: 01                       fallthrough
      :                          @329
  5019: 7b 25 10                 u64 [t0 + 0x10] = s0
  5022: 7b 27                    u64 [t0] = a0
  5024: 82 10 30                 ra = u64 [sp + 0x30]
  5027: 82 15 28                 s0 = u64 [sp + 0x28]
  5030: 82 16 20                 s1 = u64 [sp + 0x20]
  5033: 95 11 38                 sp = sp + 0x38
  5036: 32 00                    ret
      :                          @330
  5038: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  5041: 7b 10 40                 u64 [sp + 0x40] = ra
  5044: 7b 15 38                 u64 [sp + 0x38] = s0
  5047: 7b 16 30                 u64 [sp + 0x30] = s1
  5050: 95 88 01                 a1 = a1 + 0x1
  5053: 51 08 53                 jump @338 if a1 == 0
      :                          @331
  5056: 64 75                    s0 = a0
  5058: 82 77                    a0 = u64 [a0]
  5060: 97 79 01                 a2 = a0 << 0x1
  5063: 33 0a 08                 a3 = 0x8
  5066: e4 a8 08                 a1 = maxu(a1, a3)
  5069: e4 89 06                 s1 = maxu(a2, a1)
  5072: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  5075: 98 88 3f                 a1 = a1 >> 0x3f
  5078: 51 07 12                 jump @333 if a0 == 0
      :                          @332
  5081: 82 59 08                 a2 = u64 [s0 + 0x8]
  5084: 7b 19 18                 u64 [sp + 0x18] = a2
  5087: 49 11 20 01              u64 [sp + 32] = 0x1
  5091: 7b 17 28                 u64 [sp + 0x28] = a0
  5094: 28 06                    jump @334
      :                          @333
  5096: 49 11 20                 u64 [sp + 32] = 0
  5099: 01                       fallthrough
      :                          @334
  5100: 64 17                    a0 = sp
  5102: 95 1a 18                 a3 = sp + 0x18
  5105: 64 69                    a2 = s1
  5107: 50 10 4c 6d fe           ra = 76, jump @298
      :                          @335 [@dyn 38]
  5112: 82 18                    a1 = u64 [sp]
  5114: 82 17 08                 a0 = u64 [sp + 0x8]
  5117: 51 08 14                 jump @339 if a1 == 0
      :                          @336
  5120: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  5130: aa 87 0d                 jump @340 if a0 == a1
      :                          @337
  5133: 52 07 18                 jump @341 if a0 != 0
      :                          @338
  5136: 00                       trap
      :                          @339
  5137: 7b 57 08                 u64 [s0 + 0x8] = a0
  5140: 7b 56                    u64 [s0] = s1
  5142: 01                       fallthrough
      :                          @340
  5143: 82 10 40                 ra = u64 [sp + 0x40]
  5146: 82 15 38                 s0 = u64 [sp + 0x38]
  5149: 82 16 30                 s1 = u64 [sp + 0x30]
  5152: 95 11 48                 sp = sp + 0x48
  5155: 32 00                    ret
      :                          @341
  5157: 00                       trap
      :                          @342
  5158: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  5161: 7b 10 30                 u64 [sp + 0x30] = ra
  5164: 7b 15 28                 u64 [sp + 0x28] = s0
  5167: 7b 16 20                 u64 [sp + 0x20] = s1
  5170: 64 89                    a2 = a1
  5172: 82 8a 08                 a3 = u64 [a1 + 0x8]
  5175: 64 75                    s0 = a0
  5177: 51 0a 35                 jump @347 if a3 == 0
      :                          @343
  5180: 82 98                    a1 = u64 [a2]
  5182: 33 07                    a0 = 0
  5184: 95 8b 08                 a4 = a1 + 0x8
  5187: 01                       fallthrough
      :                          @344
  5188: 82 bc                    a5 = u64 [a4]
  5190: c8 c7 07                 a0 = a0 + a5
  5193: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  5196: 95 bb 10                 a4 = a4 + 0x10
  5199: 52 0a f5                 jump @344 if a3 != 0
      :                          @345
  5202: 82 9a 18                 a3 = u64 [a2 + 0x18]
  5205: 51 0a 24                 jump @349 if a3 == 0
      :                          @346
  5208: 82 88 08                 a1 = u64 [a1 + 0x8]
  5211: 8e 88                    a1 = a1 >u 0
  5213: 88 7a 10                 a3 = a0 <u 0x10
  5216: 85 aa 01                 a3 = a3 ^ 0x1
  5219: d4 a8 08                 a1 = a1 | a3
  5222: 89 7a                    a3 = a0 <s 0
  5224: e0 a8 08                 a1 = a1 & ~a3
  5227: 52 08 0a                 jump @348 if a1 != 0
      :                          @347
  5230: 33 07                    a0 = 0
  5232: 33 08 01                 a1 = 0x1
  5235: 28 4a                    jump @357
      :                          @348
  5237: 97 77 01                 a0 = a0 << 0x1
  5240: 01                       fallthrough
      :                          @349
  5241: 51 07 40                 jump @356 if a0 == 0
      :                          @350
  5244: 57 07 78                 jump @362 if a0 <s 0
      :                          @351
  5247: 64 52                    t0 = s0
  5249: 33 0b 60 00 03           a4 = 0x30060
  5254: 33 08 00 00 01           a1 = 0x10000
  5259: c8 8b 0b                 a4 = a4 + a1
  5262: 01                       fallthrough
      :                          @352
  5263: 82 bc                    a5 = u64 [a4]
  5265: c8 7c 0a                 a3 = a5 + a0
  5268: ac ca 5e                 jump @360 if a3 <u a5
      :                          @353
  5271: 95 a5 01                 s0 = a3 + 0x1
  5274: 88 56 01                 s1 = s0 <u 0x1
  5277: d8 58 05                 s0 = a1 <u s0
  5280: d4 65 05                 s0 = s0 | s1
  5283: 52 05 4f                 jump @360 if s0 != 0
      :                          @354
  5286: 82 b6                    s1 = u64 [a4]
  5288: ab c6 e7                 jump @352 if s1 != a5
      :                          @355
  5291: 7b ba                    u64 [a4] = a3
  5293: 33 08 60 00 04           a1 = 0x40060
  5298: c9 a8 08                 a1 = a1 - a3
  5301: 64 25                    s0 = t0
  5303: 28 06                    jump @357
      :                          @356
  5305: 33 08 01                 a1 = 0x1
  5308: 01                       fallthrough
      :                          @357
  5309: 7b 17                    u64 [sp] = a0
  5311: 7b 18 08                 u64 [sp + 0x8] = a1
  5314: 49 11 10                 u64 [sp + 16] = 0
  5317: 33 08 48 00 01           a1 = 0x10048
  5322: 64 17                    a0 = sp
  5324: 50 10 4e 75 06           ra = 78, jump @487
      :                          @358 [@dyn 39]
  5329: 52 07 22                 jump @361 if a0 != 0
      :                          @359
  5332: 82 17 10                 a0 = u64 [sp + 0x10]
  5335: 82 18 08                 a1 = u64 [sp + 0x8]
  5338: 82 19                    a2 = u64 [sp]
  5340: 7b 57 10                 u64 [s0 + 0x10] = a0
  5343: 7b 58 08                 u64 [s0 + 0x8] = a1
  5346: 7b 59                    u64 [s0] = a2
  5348: 82 10 30                 ra = u64 [sp + 0x30]
  5351: 82 15 28                 s0 = u64 [sp + 0x28]
  5354: 82 16 20                 s1 = u64 [sp + 0x20]
  5357: 95 11 38                 sp = sp + 0x38
  5360: 32 00                    ret
      :                          @360
  5362: 00                       trap
      :                          @361
  5363: 00                       trap
      :                          @362
  5364: 00                       trap
      :                          @363 [@dyn 40]
  5365: 82 72                    t0 = u64 [a0]
  5367: 33 09 00 00 ff           a2 = 0xffffffffffff0000
  5372: 95 2a ff ff fe           a3 = t0 + 0xfffffffffffeffff
  5377: ac 9a 28                 jump @369 if a3 <u a2
      :                          @364
  5380: 82 77 08                 a0 = u64 [a0 + 0x8]
  5383: 33 09 60 00 03           a2 = 0x30060
  5388: 95 99 00 00 01           a2 = a2 + 0x10000
  5393: 01                       fallthrough
      :                          @365
  5394: 82 9a                    a3 = u64 [a2]
  5396: c9 a9 0b                 a4 = a2 - a3
  5399: ab 7b 12                 jump @369 if a4 != a0
      :                          @366
  5402: c9 2a 0b                 a4 = a3 - t0
  5405: 01                       fallthrough
      :                          @367
  5406: 82 9c                    a5 = u64 [a2]
  5408: ab ac f2                 jump @365 if a5 != a3
      :                          @368
  5411: 7b 9b                    u64 [a2] = a4
  5413: 33 08                    a1 = 0
  5415: 32 00                    ret
      :                          @369
  5417: 32 00                    ret
      :                          @370 [@dyn 41]
  5419: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  5422: 7b 10 18                 u64 [sp + 0x18] = ra
  5425: 7b 15 10                 u64 [sp + 0x10] = s0
  5428: 7b 16 08                 u64 [sp + 0x8] = s1
  5431: 64 75                    s0 = a0
  5433: 82 7a 10                 a3 = u64 [a0 + 0x10]
  5436: 82 77                    a0 = u64 [a0]
  5438: c9 a7 07                 a0 = a0 - a3
  5441: 64 96                    s1 = a2
  5443: ac 97 2a                 jump @373 if a0 <u a2
      :                          @371
  5446: 7b 1a                    u64 [sp] = a3
  5448: 82 57 08                 a0 = u64 [s0 + 0x8]
  5451: c8 a7 07                 a0 = a0 + a3
  5454: 64 69                    a2 = s1
  5456: 50 10 54 4a 01           ra = 84, jump @392
      :                          @372 [@dyn 42]
  5461: 82 17                    a0 = u64 [sp]
  5463: c8 76 06                 s1 = s1 + a0
  5466: 7b 56 10                 u64 [s0 + 0x10] = s1
  5469: 33 07                    a0 = 0
  5471: 82 10 18                 ra = u64 [sp + 0x18]
  5474: 82 15 10                 s0 = u64 [sp + 0x10]
  5477: 82 16 08                 s1 = u64 [sp + 0x8]
  5480: 95 11 20                 sp = sp + 0x20
  5483: 32 00                    ret
      :                          @373
  5485: 64 57                    a0 = s0
  5487: 7b 18                    u64 [sp] = a1
  5489: 64 a8                    a1 = a3
  5491: 64 69                    a2 = s1
  5493: 50 10 56 74 fc           ra = 86, jump @286
      :                          @374 [@dyn 43]
  5498: 82 18                    a1 = u64 [sp]
  5500: 82 5a 10                 a3 = u64 [s0 + 0x10]
  5503: 28 c7                    jump @371
      :                          @375 [@dyn 44]
  5505: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  5508: 7b 10 20                 u64 [sp + 0x20] = ra
  5511: 7b 15 18                 u64 [sp + 0x18] = s0
  5514: 7b 16 10                 u64 [sp + 0x10] = s1
  5517: 64 86                    s1 = a1
  5519: 83 88                    i32 a1 = a1 + 0
  5521: 33 09 80 00              a2 = 0x80
  5525: 64 7a                    a3 = a0
  5527: ae 98 2b                 jump @380 if a1 >=u a2
      :                          @376
  5530: 82 a8 10                 a1 = u64 [a3 + 0x10]
  5533: 82 a7                    a0 = u64 [a3]
  5535: ab 78 12                 jump @379 if a1 != a0
      :                          @377
  5538: 64 a7                    a0 = a3
  5540: 64 a5                    s0 = a3
  5542: 50 10 5a 08 fe           ra = 90, jump @330
      :                          @378 [@dyn 45]
  5547: 64 5a                    a3 = s0
  5549: 82 58 10                 a1 = u64 [s0 + 0x10]
  5552: 01                       fallthrough
      :                          @379
  5553: 82 a7 08                 a0 = u64 [a3 + 0x8]
  5556: c8 87 07                 a0 = a0 + a1
  5559: 78 76                    u8 [a0] = s1
  5561: 95 88 01                 a1 = a1 + 0x1
  5564: 7b a8 10                 u64 [a3 + 0x10] = a1
  5567: 28 ab 00                 jump @388
      :                          @380
  5570: 8b 67 0b                 i32 a0 = s1 >> 0xb
  5573: 48 11 0c                 u32 [sp + 12] = 0
  5576: 52 07 1c                 jump @382 if a0 != 0
      :                          @381
  5579: 98 67 06                 a0 = s1 >> 0x6
  5582: 86 77 c0 00              a0 = a0 | 0xc0
  5586: 78 17 0c                 u8 [sp + 0xc] = a0
  5589: 84 67 3f                 a0 = s1 & 0x3f
  5592: 86 77 80 00              a0 = a0 | 0x80
  5596: 78 17 0d                 u8 [sp + 0xd] = a0
  5599: 33 06 02                 s1 = 0x2
  5602: 28 63                    jump @385
      :                          @382
  5604: 8b 67 10                 i32 a0 = s1 >> 0x10
  5607: 52 07 29                 jump @384 if a0 != 0
      :                          @383
  5610: 98 67 0c                 a0 = s1 >> 0xc
  5613: 86 77 e0 00              a0 = a0 | 0xe0
  5617: 78 17 0c                 u8 [sp + 0xc] = a0
  5620: 97 67 34                 a0 = s1 << 0x34
  5623: 98 77 3a                 a0 = a0 >> 0x3a
  5626: 95 77 80 00              a0 = a0 + 0x80
  5630: 78 17 0d                 u8 [sp + 0xd] = a0
  5633: 84 67 3f                 a0 = s1 & 0x3f
  5636: 86 77 80 00              a0 = a0 | 0x80
  5640: 78 17 0e                 u8 [sp + 0xe] = a0
  5643: 33 06 03                 s1 = 0x3
  5646: 28 37                    jump @385
      :                          @384
  5648: 97 67 2b                 a0 = s1 << 0x2b
  5651: 98 77 3d                 a0 = a0 >> 0x3d
  5654: 95 77 f0 00              a0 = a0 + 0xf0
  5658: 78 17 0c                 u8 [sp + 0xc] = a0
  5661: 97 67 2e                 a0 = s1 << 0x2e
  5664: 98 77 3a                 a0 = a0 >> 0x3a
  5667: 95 77 80 00              a0 = a0 + 0x80
  5671: 78 17 0d                 u8 [sp + 0xd] = a0
  5674: 97 67 34                 a0 = s1 << 0x34
  5677: 98 77 3a                 a0 = a0 >> 0x3a
  5680: 95 77 80 00              a0 = a0 + 0x80
  5684: 78 17 0e                 u8 [sp + 0xe] = a0
  5687: 84 67 3f                 a0 = s1 & 0x3f
  5690: 86 77 80 00              a0 = a0 | 0x80
  5694: 78 17 0f                 u8 [sp + 0xf] = a0
  5697: 33 06 04                 s1 = 0x4
  5700: 01                       fallthrough
      :                          @385
  5701: 82 a5 10                 s0 = u64 [a3 + 0x10]
  5704: 82 a7                    a0 = u64 [a3]
  5706: c9 57 07                 a0 = a0 - s0
  5709: ac 67 2d                 jump @389 if a0 <u s1
      :                          @386
  5712: 7b 1a                    u64 [sp] = a3
  5714: 82 a7 08                 a0 = u64 [a3 + 0x8]
  5717: c8 57 07                 a0 = a0 + s0
  5720: 95 18 0c                 a1 = sp + 0xc
  5723: 64 69                    a2 = s1
  5725: 50 10 5c 3d              ra = 92, jump @392
      :                          @387 [@dyn 46]
  5729: c8 56 06                 s1 = s1 + s0
  5732: 82 17                    a0 = u64 [sp]
  5734: 7b 76 10                 u64 [a0 + 0x10] = s1
  5737: 01                       fallthrough
      :                          @388
  5738: 33 07                    a0 = 0
  5740: 82 10 20                 ra = u64 [sp + 0x20]
  5743: 82 15 18                 s0 = u64 [sp + 0x18]
  5746: 82 16 10                 s1 = u64 [sp + 0x10]
  5749: 95 11 28                 sp = sp + 0x28
  5752: 32 00                    ret
      :                          @389
  5754: 64 a7                    a0 = a3
  5756: 64 58                    a1 = s0
  5758: 64 69                    a2 = s1
  5760: 64 a5                    s0 = a3
  5762: 50 10 5e 67 fb           ra = 94, jump @286
      :                          @390 [@dyn 47]
  5767: 64 5a                    a3 = s0
  5769: 82 55 10                 s0 = u64 [s0 + 0x10]
  5772: 28 c4                    jump @386
      :                          @391 [@dyn 48]
  5774: 64 8a                    a3 = a1
  5776: 33 08 48 00 01           a1 = 0x10048
  5781: 64 a9                    a2 = a3
  5783: 28 aa 04                 jump @487
      :                          @392
  5786: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  5789: 7b 10 18                 u64 [sp + 0x18] = ra
  5792: 7b 15 10                 u64 [sp + 0x10] = s0
  5795: 7b 16 08                 u64 [sp + 0x8] = s1
  5798: 53 19 10 64              jump @401 if a2 <u 16
      :                          @393
  5802: 8d 7a                    i32 a3 = -a0
  5804: 84 a2 07                 t0 = a3 & 0x7
  5807: c8 27 0b                 a4 = a0 + t0
  5810: 51 02 15                 jump @396 if t0 == 0
      :                          @394
  5813: 64 8c                    a5 = a1
  5815: 64 75                    s0 = a0
  5817: 01                       fallthrough
      :                          @395
  5818: 7c ca                    a3 = u8 [a5]
  5820: 78 5a                    u8 [s0] = a3
  5822: 95 55 01                 s0 = s0 + 0x1
  5825: 95 cc 01                 a5 = a5 + 0x1
  5828: ac b5 f6                 jump @395 if s0 <u a4
      :                          @396
  5831: c8 28 03                 t1 = a1 + t0
  5834: c9 29 02                 t0 = a2 - t0
  5837: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  5840: 84 38 07                 a1 = t1 & 0x7
  5843: c8 4b 0a                 a3 = a4 + t2
  5846: 51 08 3b                 jump @403 if a1 == 0
      :                          @397
  5849: 58 04 4b                 jump @406 if t2 <=s 0
      :                          @398
  5852: 97 38 03                 a1 = t1 << 0x3
  5855: 84 80 38                 ra = a1 & 0x38
  5858: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  5861: 82 c5                    s0 = u64 [a5]
  5863: 8d 88                    i32 a1 = -a1
  5865: 84 88 38                 a1 = a1 & 0x38
  5868: 95 cc 08                 a5 = a5 + 0x8
  5871: 01                       fallthrough
      :                          @399
  5872: 82 c6                    s1 = u64 [a5]
  5874: d0 05 05                 s0 = s0 >> ra
  5877: cf 86 09                 a2 = s1 << a1
  5880: d4 59 09                 a2 = a2 | s0
  5883: 7b b9                    u64 [a4] = a2
  5885: 95 bb 08                 a4 = a4 + 0x8
  5888: 95 cc 08                 a5 = a5 + 0x8
  5891: 64 65                    s0 = s1
  5893: ac ab eb                 jump @399 if a4 <u a3
      :                          @400
  5896: 28 1c                    jump @406
      :                          @401
  5898: 64 7a                    a3 = a0
  5900: 52 09 21                 jump @407 if a2 != 0
      :                          @402
  5903: 28 2f                    jump @409
      :                          @403
  5905: 58 04 13                 jump @406 if t2 <=s 0
      :                          @404
  5908: 64 38                    a1 = t1
  5910: 01                       fallthrough
      :                          @405
  5911: 82 89                    a2 = u64 [a1]
  5913: 7b b9                    u64 [a4] = a2
  5915: 95 bb 08                 a4 = a4 + 0x8
  5918: 95 88 08                 a1 = a1 + 0x8
  5921: ac ab f6                 jump @405 if a4 <u a3
      :                          @406
  5924: c8 43 08                 a1 = t1 + t2
  5927: 84 29 07                 a2 = t0 & 0x7
  5930: 51 09 14                 jump @409 if a2 == 0
      :                          @407
  5933: c8 a9 09                 a2 = a2 + a3
  5936: 01                       fallthrough
      :                          @408
  5937: 7c 8b                    a4 = u8 [a1]
  5939: 78 ab                    u8 [a3] = a4
  5941: 95 aa 01                 a3 = a3 + 0x1
  5944: 95 88 01                 a1 = a1 + 0x1
  5947: ac 9a f6                 jump @408 if a3 <u a2
      :                          @409
  5950: 82 10 18                 ra = u64 [sp + 0x18]
  5953: 82 15 10                 s0 = u64 [sp + 0x10]
  5956: 82 16 08                 s1 = u64 [sp + 0x8]
  5959: 95 11 20                 sp = sp + 0x20
  5962: 32 00                    ret
      :                          @410
  5964: 53 19 10 48              jump @419 if a2 <u 16
      :                          @411
  5968: 8d 7a                    i32 a3 = -a0
  5970: 84 aa 07                 a3 = a3 & 0x7
  5973: c8 a7 0b                 a4 = a0 + a3
  5976: 51 0a 0e                 jump @414 if a3 == 0
      :                          @412
  5979: 64 7c                    a5 = a0
  5981: 01                       fallthrough
      :                          @413
  5982: 78 c8                    u8 [a5] = a1
  5984: 95 cc 01                 a5 = a5 + 0x1
  5987: ac bc fb                 jump @413 if a5 <u a4
      :                          @414
  5990: c9 a9 03                 t1 = a2 - a3
  5993: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  5996: c8 cb 0a                 a3 = a4 + a5
  5999: 58 0c 1d                 jump @417 if a5 <=s 0
      :                          @415
  6002: 84 82 ff 00              t0 = a1 & 0xff
  6006: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  6016: ca 92 0c                 a5 = t0 * a2
  6019: 01                       fallthrough
      :                          @416
  6020: 7b bc                    u64 [a4] = a5
  6022: 95 bb 08                 a4 = a4 + 0x8
  6025: ac ab fb                 jump @416 if a4 <u a3
      :                          @417
  6028: 84 39 07                 a2 = t1 & 0x7
  6031: 52 09 0a                 jump @420 if a2 != 0
      :                          @418
  6034: 28 13                    jump @422
      :                          @419
  6036: 64 7a                    a3 = a0
  6038: 51 09 0f                 jump @422 if a2 == 0
      :                          @420
  6041: c8 a9 09                 a2 = a2 + a3
  6044: 01                       fallthrough
      :                          @421
  6045: 78 a8                    u8 [a3] = a1
  6047: 95 aa 01                 a3 = a3 + 0x1
  6050: ac 9a fb                 jump @421 if a3 <u a2
      :                          @422
  6053: 32 00                    ret
      :                          @423 [@dyn 49]
  6055: 82 77                    a0 = u64 [a0]
  6057: 01                       fallthrough
      :                          @424
  6058: 28                       jump @424
      :                          @425
  6059: 95 11 a8                 sp = sp + 0xffffffffffffffa8
  6062: 7b 10 50                 u64 [sp + 0x50] = ra
  6065: 7b 15 48                 u64 [sp + 0x48] = s0
  6068: 7b 16 40                 u64 [sp + 0x40] = s1
  6071: 7b 18                    u64 [sp] = a1
  6073: 98 79 04                 a2 = a0 >> 0x4
  6076: 33 08 27                 a1 = 0x27
  6079: 53 29 71 02 81 00        jump @428 if a2 <u 625
      :                          @426
  6085: 33 08 27                 a1 = 0x27
  6088: 95 1a 3e                 a3 = sp + 0x3e
  6091: 3a 09 48 00 03           a2 = u64 [0x30048]
  6096: 7b 19 10                 u64 [sp + 0x10] = a2
  6099: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
  6105: 33 04 7b 14              t2 = 0x147b
  6109: 33 0b bc 00 01           a4 = 0x100bc
  6114: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
  6120: 01                       fallthrough
      :                          @427
  6121: 64 72                    t0 = a0
  6123: 82 17 10                 a0 = u64 [sp + 0x10]
  6126: d6 72 07                 a0 = t0 mulhu a0
  6129: 98 77 0b                 a0 = a0 >> 0xb
  6132: 82 19 08                 a2 = u64 [sp + 0x8]
  6135: c0 97 0c                 i32 a5 = a0 * a2
  6138: c8 2c 06                 s1 = a5 + t0
  6141: 97 6c 30                 a5 = s1 << 0x30
  6144: 98 cc 32                 a5 = a5 >> 0x32
  6147: ca 4c 0c                 a5 = a5 * t2
  6150: 98 c3 11                 t1 = a5 >> 0x11
  6153: 98 cc 10                 a5 = a5 >> 0x10
  6156: 84 cc fe 07              a5 = a5 & 0x7fe
  6160: 96 39 9c                 a2 = t1 * 0xffffffffffffff9c
  6163: c8 69 09                 a2 = a2 + s1
  6166: 97 99 31                 a2 = a2 << 0x31
  6169: 98 99 30                 a2 = a2 >> 0x30
  6172: c8 bc 0c                 a5 = a5 + a4
  6175: 7c c6                    s1 = u8 [a5]
  6177: 7c cc 01                 a5 = u8 [a5 + 0x1]
  6180: c8 b9 09                 a2 = a2 + a4
  6183: 7c 95 01                 s0 = u8 [a2 + 0x1]
  6186: 7c 99                    a2 = u8 [a2]
  6188: 78 ac ff                 u8 [a3 + 0xffffffffffffffff] = a5
  6191: 78 a6 fe                 u8 [a3 + 0xfffffffffffffffe] = s1
  6194: 78 a5 01                 u8 [a3 + 0x1] = s0
  6197: 78 a9                    u8 [a3] = a2
  6199: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
  6202: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
  6205: ac 20 ac                 jump @427 if ra <u t0
      :                          @428
  6208: 54 17 63 3b              jump @430 if a0 <=u 99
      :                          @429
  6212: 97 79 30                 a2 = a0 << 0x30
  6215: 98 99 32                 a2 = a2 >> 0x32
  6218: 96 99 7b 14              a2 = a2 * 0x147b
  6222: 98 99 11                 a2 = a2 >> 0x11
  6225: 96 9a 9c                 a3 = a2 * 0xffffffffffffff9c
  6228: c8 a7 07                 a0 = a0 + a3
  6231: 97 77 31                 a0 = a0 << 0x31
  6234: 98 77 30                 a0 = a0 >> 0x30
  6237: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  6240: 33 0a bc 00 01           a3 = 0x100bc
  6245: c8 a7 07                 a0 = a0 + a3
  6248: 7c 7a 01                 a3 = u8 [a0 + 0x1]
  6251: 7c 77                    a0 = u8 [a0]
  6253: 95 1b 19                 a4 = sp + 0x19
  6256: c8 8b 0b                 a4 = a4 + a1
  6259: 78 ba 01                 u8 [a4 + 0x1] = a3
  6262: 78 b7                    u8 [a4] = a0
  6264: 64 97                    a0 = a2
  6266: 01                       fallthrough
      :                          @430
  6267: 55 17 0a 14              jump @432 if a0 >=u 10
      :                          @431
  6271: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  6274: 95 19 19                 a2 = sp + 0x19
  6277: c8 89 09                 a2 = a2 + a1
  6280: 83 77 30                 i32 a0 = a0 + 0x30
  6283: 78 97                    u8 [a2] = a0
  6285: 28 21                    jump @433
      :                          @432
  6287: 97 77 01                 a0 = a0 << 0x1
  6290: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  6293: 33 09 bc 00 01           a2 = 0x100bc
  6298: c8 97 07                 a0 = a0 + a2
  6301: 7c 79 01                 a2 = u8 [a0 + 0x1]
  6304: 7c 77                    a0 = u8 [a0]
  6306: 95 1a 19                 a3 = sp + 0x19
  6309: c8 8a 0a                 a3 = a3 + a1
  6312: 78 a9 01                 u8 [a3 + 0x1] = a2
  6315: 78 a7                    u8 [a3] = a0
  6317: 01                       fallthrough
      :                          @433
  6318: 95 1a 19                 a3 = sp + 0x19
  6321: c8 8a 0a                 a3 = a3 + a1
  6324: 9a 8b 27                 a4 = 0x27 - a1
  6327: 33 08 78 00 01           a1 = 0x10078
  6332: 82 17                    a0 = u64 [sp]
  6334: 33 09                    a2 = 0
  6336: 50 10 64 12              ra = 100, jump @435
      :                          @434 [@dyn 50]
  6340: 82 10 50                 ra = u64 [sp + 0x50]
  6343: 82 15 48                 s0 = u64 [sp + 0x48]
  6346: 82 16 40                 s1 = u64 [sp + 0x40]
  6349: 95 11 58                 sp = sp + 0x58
  6352: 32 00                    ret
      :                          @435
  6354: 95 11 98                 sp = sp + 0xffffffffffffff98
  6357: 7b 10 60                 u64 [sp + 0x60] = ra
  6360: 7b 15 58                 u64 [sp + 0x58] = s0
  6363: 7b 16 50                 u64 [sp + 0x50] = s1
  6366: 80 73 34                 t1 = u32 [a0 + 0x34]
  6369: 7b 1a 20                 u64 [sp + 0x20] = a3
  6372: 64 9c                    a5 = a2
  6374: 84 36 01                 s1 = t1 & 0x1
  6377: 33 02 2b                 t0 = 0x2b
  6380: 33 09 00 00 11           a2 = 0x110000
  6385: 84 3a 04                 a3 = t1 & 0x4
  6388: 7b 1b 28                 u64 [sp + 0x28] = a4
  6391: c8 b6 04                 t2 = s1 + a4
  6394: 7b 1c 30                 u64 [sp + 0x30] = a5
  6397: 52 0a 10                 jump @438 if a3 != 0
      :                          @436
  6400: 49 11 38                 u64 [sp + 56] = 0
  6403: 82 78                    a1 = u64 [a0]
  6405: 94 69 2b                 a2 = 0x2b if s1 != 0
  6408: 52 08 35                 jump @442 if a1 != 0
      :                          @437
  6411: 28 56                    jump @447
      :                          @438
  6413: 7b 18 38                 u64 [sp + 0x38] = a1
  6416: 33 09                    a2 = 0
  6418: 51 0c 1b                 jump @441 if a5 == 0
      :                          @439
  6421: 82 1b 38                 a4 = u64 [sp + 0x38]
  6424: 01                       fallthrough
      :                          @440
  6425: 7d b5                    s0 = i8 [a4]
  6427: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
  6430: 85 5a 01                 a3 = s0 ^ 0x1
  6433: c8 a9 09                 a2 = a2 + a3
  6436: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  6439: 95 bb 01                 a4 = a4 + 0x1
  6442: 52 0c ef                 jump @440 if a5 != 0
      :                          @441
  6445: c8 94 04                 t2 = t2 + a2
  6448: 33 09 00 00 11           a2 = 0x110000
  6453: 82 78                    a1 = u64 [a0]
  6455: db 62 09                 a2 = t0 if s1 != 0
  6458: 51 08 27                 jump @447 if a1 == 0
      :                          @442
  6461: 82 7a 08                 a3 = u64 [a0 + 0x8]
  6464: ae a4 21                 jump @447 if t2 >=u a3
      :                          @443
  6467: 84 38 08                 a1 = t1 & 0x8
  6470: 52 08 50                 jump @450 if a1 != 0
      :                          @444
  6473: 7c 76 38                 s1 = u8 [a0 + 0x38]
  6476: c9 4a 0a                 a3 = a3 - t2
  6479: 7b 19 18                 u64 [sp + 0x18] = a2
  6482: 5a 16 01 9d 00           jump @457 if s1 >s 1
      :                          @445
  6487: 52 06 aa 00              jump @459 if s1 != 0
      :                          @446
  6491: 7b 1a 10                 u64 [sp + 0x10] = a3
  6494: 28 a9 00                 jump @460
      :                          @447
  6497: 82 75 20                 s0 = u64 [a0 + 0x20]
  6500: 82 76 28                 s1 = u64 [a0 + 0x28]
  6503: 64 57                    a0 = s0
  6505: 64 68                    a1 = s1
  6507: 82 1a 38                 a3 = u64 [sp + 0x38]
  6510: 82 1b 30                 a4 = u64 [sp + 0x30]
  6513: 50 10 66 6c 01           ra = 102, jump @480
      :                          @448 [@dyn 51]
  6518: 33 08 01                 a1 = 0x1
  6521: 52 07 bb 00              jump @465 if a0 != 0
      :                          @449
  6525: 82 6c 18                 a5 = u64 [s1 + 0x18]
  6528: 64 57                    a0 = s0
  6530: 82 18 20                 a1 = u64 [sp + 0x20]
  6533: 82 19 28                 a2 = u64 [sp + 0x28]
  6536: 82 10 60                 ra = u64 [sp + 0x60]
  6539: 82 15 58                 s0 = u64 [sp + 0x58]
  6542: 82 16 50                 s1 = u64 [sp + 0x50]
  6545: 95 11 68                 sp = sp + 0x68
  6548: 32 0c                    jump [a5]
      :                          @450
  6550: 7b 1a 40                 u64 [sp + 0x40] = a3
  6553: 64 45                    s0 = t2
  6555: 81 78 30                 a1 = i32 [a0 + 0x30]
  6558: 7b 18 10                 u64 [sp + 0x10] = a1
  6561: 7c 7a 38                 a3 = u8 [a0 + 0x38]
  6564: 7b 1a 08                 u64 [sp + 0x8] = a3
  6567: 82 7a 20                 a3 = u64 [a0 + 0x20]
  6570: 82 78 28                 a1 = u64 [a0 + 0x28]
  6573: 48 17 30 30              u32 [a0 + 48] = 0x30
  6577: 7b 17                    u64 [sp] = a0
  6579: 46 17 38 01              u8 [a0 + 56] = 0x1
  6583: 7b 1a 48                 u64 [sp + 0x48] = a3
  6586: 64 a7                    a0 = a3
  6588: 64 86                    s1 = a1
  6590: 82 1a 38                 a3 = u64 [sp + 0x38]
  6593: 82 1b 30                 a4 = u64 [sp + 0x30]
  6596: 50 10 68 19 01           ra = 104, jump @480
      :                          @451 [@dyn 52]
  6601: 52 07 67                 jump @464 if a0 != 0
      :                          @452
  6604: 82 17 40                 a0 = u64 [sp + 0x40]
  6607: c9 57 05                 s0 = a0 - s0
  6610: 95 55 01                 s0 = s0 + 0x1
  6613: 01                       fallthrough
      :                          @453
  6614: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  6617: 51 05 c6 00              jump @475 if s0 == 0
      :                          @454
  6621: 82 69 20                 a2 = u64 [s1 + 0x20]
  6624: 33 08 30                 a1 = 0x30
  6627: 82 17 48                 a0 = u64 [sp + 0x48]
  6630: b4 90 01 6a              ra = 106, jump [a2]
      :                          @455 [@dyn 53]
  6634: 51 07 ec                 jump @453 if a0 == 0
      :                          @456
  6637: 28 43                    jump @464
      :                          @457
  6639: 52 16 02 12              jump @459 if s1 != 2
      :                          @458
  6643: 98 a6 01                 s1 = a3 >> 0x1
  6646: 95 a8 01                 a1 = a3 + 0x1
  6649: 98 88 01                 a1 = a1 >> 0x1
  6652: 7b 18 10                 u64 [sp + 0x10] = a1
  6655: 28 08                    jump @460
      :                          @459
  6657: 64 a6                    s1 = a3
  6659: 49 11 10                 u64 [sp + 16] = 0
  6662: 01                       fallthrough
      :                          @460
  6663: 82 78 20                 a1 = u64 [a0 + 0x20]
  6666: 7b 18 48                 u64 [sp + 0x48] = a1
  6669: 82 75 28                 s0 = u64 [a0 + 0x28]
  6672: 81 77 30                 a0 = i32 [a0 + 0x30]
  6675: 7b 17 40                 u64 [sp + 0x40] = a0
  6678: 95 66 01                 s1 = s1 + 0x1
  6681: 01                       fallthrough
      :                          @461
  6682: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  6685: 51 06 27                 jump @466 if s1 == 0
      :                          @462
  6688: 82 59 20                 a2 = u64 [s0 + 0x20]
  6691: 82 17 48                 a0 = u64 [sp + 0x48]
  6694: 82 18 40                 a1 = u64 [sp + 0x40]
  6697: b4 90 01 6c              ra = 108, jump [a2]
      :                          @463 [@dyn 54]
  6701: 51 07 ed                 jump @461 if a0 == 0
      :                          @464
  6704: 33 08 01                 a1 = 0x1
  6707: 01                       fallthrough
      :                          @465
  6708: 64 87                    a0 = a1
  6710: 82 10 60                 ra = u64 [sp + 0x60]
  6713: 82 15 58                 s0 = u64 [sp + 0x58]
  6716: 82 16 50                 s1 = u64 [sp + 0x50]
  6719: 95 11 68                 sp = sp + 0x68
  6722: 32 00                    ret
      :                          @466
  6724: 82 16 48                 s1 = u64 [sp + 0x48]
  6727: 64 67                    a0 = s1
  6729: 64 58                    a1 = s0
  6731: 82 19 18                 a2 = u64 [sp + 0x18]
  6734: 82 1a 38                 a3 = u64 [sp + 0x38]
  6737: 82 1b 30                 a4 = u64 [sp + 0x30]
  6740: 50 10 6e 89 00           ra = 110, jump @480
      :                          @467 [@dyn 55]
  6745: 33 08 01                 a1 = 0x1
  6748: 52 07 d8                 jump @465 if a0 != 0
      :                          @468
  6751: 82 5a 18                 a3 = u64 [s0 + 0x18]
  6754: 64 67                    a0 = s1
  6756: 82 18 20                 a1 = u64 [sp + 0x20]
  6759: 82 19 28                 a2 = u64 [sp + 0x28]
  6762: b4 a0 01 70              ra = 112, jump [a3]
      :                          @469 [@dyn 56]
  6766: 33 08 01                 a1 = 0x1
  6769: 52 07 c3                 jump @465 if a0 != 0
      :                          @470
  6772: 82 17 10                 a0 = u64 [sp + 0x10]
  6775: 9a 77                    a0 = -a0
  6777: 7b 17 38                 u64 [sp + 0x38] = a0
  6780: 33 06 ff                 s1 = 0xffffffffffffffff
  6783: 01                       fallthrough
      :                          @471
  6784: 82 17 38                 a0 = u64 [sp + 0x38]
  6787: c8 67 07                 a0 = a0 + s1
  6790: 51 17 ff 42              jump @478 if a0 == 4294967295
      :                          @472
  6794: 82 59 20                 a2 = u64 [s0 + 0x20]
  6797: 82 17 48                 a0 = u64 [sp + 0x48]
  6800: 82 18 40                 a1 = u64 [sp + 0x40]
  6803: b4 90 01 72              ra = 114, jump [a2]
      :                          @473 [@dyn 57]
  6807: 95 66 01                 s1 = s1 + 0x1
  6810: 51 07 e6                 jump @471 if a0 == 0
      :                          @474
  6813: 28 37                    jump @479
      :                          @475
  6815: 82 6a 18                 a3 = u64 [s1 + 0x18]
  6818: 82 17 48                 a0 = u64 [sp + 0x48]
  6821: 82 18 20                 a1 = u64 [sp + 0x20]
  6824: 82 19 28                 a2 = u64 [sp + 0x28]
  6827: b4 a0 01 74              ra = 116, jump [a3]
      :                          @476 [@dyn 58]
  6831: 33 08 01                 a1 = 0x1
  6834: 52 07 82                 jump @465 if a0 != 0
      :                          @477
  6837: 33 08                    a1 = 0
  6839: 82 16                    s1 = u64 [sp]
  6841: 82 17 10                 a0 = u64 [sp + 0x10]
  6844: 7a 67 30                 u32 [s1 + 0x30] = a0
  6847: 82 17 08                 a0 = u64 [sp + 0x8]
  6850: 78 67 38                 u8 [s1 + 0x38] = a0
  6853: 28 6f ff                 jump @465
      :                          @478
  6856: 82 16 10                 s1 = u64 [sp + 0x10]
  6859: 82 17 10                 a0 = u64 [sp + 0x10]
  6862: d8 76 08                 a1 = s1 <u a0
  6865: 28 63 ff                 jump @465
      :                          @479
  6868: 82 17 10                 a0 = u64 [sp + 0x10]
  6871: d8 76 08                 a1 = s1 <u a0
  6874: 28 5a ff                 jump @465
      :                          @480
  6877: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  6880: 7b 10 20                 u64 [sp + 0x20] = ra
  6883: 7b 15 18                 u64 [sp + 0x18] = s0
  6886: 7b 16 10                 u64 [sp + 0x10] = s1
  6889: 83 9c                    i32 a5 = a2 + 0
  6891: 33 02 00 00 11           t0 = 0x110000
  6896: 64 a6                    s1 = a3
  6898: 64 85                    s0 = a1
  6900: 64 7a                    a3 = a0
  6902: aa 2c 20                 jump @483 if a5 == t0
      :                          @481
  6905: 82 5c 20                 a5 = u64 [s0 + 0x20]
  6908: 64 a7                    a0 = a3
  6910: 64 98                    a1 = a2
  6912: 7b 1b 08                 u64 [sp + 0x8] = a4
  6915: 7b 1a                    u64 [sp] = a3
  6917: b4 c0 01 76              ra = 118, jump [a5]
      :                          @482 [@dyn 59]
  6921: 82 1a                    a3 = u64 [sp]
  6923: 82 1b 08                 a4 = u64 [sp + 0x8]
  6926: 64 78                    a1 = a0
  6928: 33 07 01                 a0 = 0x1
  6931: 52 08 20                 jump @486 if a1 != 0
      :                          @483
  6934: 51 06 1a                 jump @485 if s1 == 0
      :                          @484
  6937: 82 5c 18                 a5 = u64 [s0 + 0x18]
  6940: 64 a7                    a0 = a3
  6942: 64 68                    a1 = s1
  6944: 64 b9                    a2 = a4
  6946: 82 10 20                 ra = u64 [sp + 0x20]
  6949: 82 15 18                 s0 = u64 [sp + 0x18]
  6952: 82 16 10                 s1 = u64 [sp + 0x10]
  6955: 95 11 28                 sp = sp + 0x28
  6958: 32 0c                    jump [a5]
      :                          @485
  6960: 33 07                    a0 = 0
  6962: 01                       fallthrough
      :                          @486
  6963: 82 10 20                 ra = u64 [sp + 0x20]
  6966: 82 15 18                 s0 = u64 [sp + 0x18]
  6969: 82 16 10                 s1 = u64 [sp + 0x10]
  6972: 95 11 28                 sp = sp + 0x28
  6975: 32 00                    ret
      :                          @487
  6977: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  6981: 7b 10 80 00              u64 [sp + 0x80] = ra
  6985: 7b 15 78                 u64 [sp + 0x78] = s0
  6988: 7b 16 70                 u64 [sp + 0x70] = s1
  6991: 49 11 60 20              u64 [sp + 96] = 0x20
  6995: 33 0a 03                 a3 = 0x3
  6998: 78 1a 68                 u8 [sp + 0x68] = a3
  7001: 82 96 20                 s1 = u64 [a2 + 0x20]
  7004: 49 11 30                 u64 [sp + 48] = 0
  7007: 49 11 40                 u64 [sp + 64] = 0
  7010: 7b 17 50                 u64 [sp + 0x50] = a0
  7013: 7b 18 58                 u64 [sp + 0x58] = a1
  7016: 51 06 07 01              jump @509 if s1 == 0
      :                          @488
  7020: 82 97 28                 a0 = u64 [a2 + 0x28]
  7023: 51 07 74 01              jump @519 if a0 == 0
      :                          @489
  7027: 49 11 28                 u64 [sp + 40] = 0
  7030: 82 95                    s0 = u64 [a2]
  7032: 7b 19 08                 u64 [sp + 0x8] = a2
  7035: 82 98 10                 a1 = u64 [a2 + 0x10]
  7038: 7b 18 18                 u64 [sp + 0x18] = a1
  7041: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  7044: 97 88 03                 a1 = a1 << 0x3
  7047: 98 88 03                 a1 = a1 >> 0x3
  7050: 95 88 01                 a1 = a1 + 0x1
  7053: 7b 18                    u64 [sp] = a1
  7055: 95 55 08                 s0 = s0 + 0x8
  7058: 96 78 38                 a1 = a0 * 0x38
  7061: 95 66 18                 s1 = s1 + 0x18
  7064: 33 07 62                 a0 = 0x62
  7067: 7b 17 10                 u64 [sp + 0x10] = a0
  7070: 01                       fallthrough
      :                          @490
  7071: 7b 18 20                 u64 [sp + 0x20] = a1
  7074: 82 59                    a2 = u64 [s0]
  7076: 51 09 17                 jump @493 if a2 == 0
      :                          @491
  7079: 82 1a 58                 a3 = u64 [sp + 0x58]
  7082: 82 17 50                 a0 = u64 [sp + 0x50]
  7085: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  7088: 82 aa 18                 a3 = u64 [a3 + 0x18]
  7091: b4 a0 01 78              ra = 120, jump [a3]
      :                          @492 [@dyn 60]
  7095: 52 07 52 01              jump @522 if a0 != 0
      :                          @493
  7099: 81 67 10                 a0 = i32 [s1 + 0x10]
  7102: 7a 17 60                 u32 [sp + 0x60] = a0
  7105: 7c 67 18                 a0 = u8 [s1 + 0x18]
  7108: 78 17 68                 u8 [sp + 0x68] = a0
  7111: 81 67 14                 a0 = i32 [s1 + 0x14]
  7114: 7a 17 64                 u32 [sp + 0x64] = a0
  7117: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  7120: 82 67                    a0 = u64 [s1]
  7122: 51 08 26                 jump @498 if a1 == 0
      :                          @494
  7125: 52 18 01 16              jump @496 if a1 != 1
      :                          @495
  7129: 97 77 04                 a0 = a0 << 0x4
  7132: 82 18 18                 a1 = u64 [sp + 0x18]
  7135: c8 87 07                 a0 = a0 + a1
  7138: 82 78 08                 a1 = u64 [a0 + 0x8]
  7141: 82 19 10                 a2 = u64 [sp + 0x10]
  7144: aa 98 07                 jump @497 if a1 == a2
      :                          @496
  7147: 33 08                    a1 = 0
  7149: 28 0f                    jump @499
      :                          @497
  7151: 82 77                    a0 = u64 [a0]
  7153: 82 77                    a0 = u64 [a0]
  7155: 33 08 01                 a1 = 0x1
  7158: 28 06                    jump @499
      :                          @498
  7160: 33 08 01                 a1 = 0x1
  7163: 01                       fallthrough
      :                          @499
  7164: 7b 18 30                 u64 [sp + 0x30] = a1
  7167: 7b 17 38                 u64 [sp + 0x38] = a0
  7170: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  7173: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  7176: 51 08 26                 jump @504 if a1 == 0
      :                          @500
  7179: 52 18 01 16              jump @502 if a1 != 1
      :                          @501
  7183: 97 77 04                 a0 = a0 << 0x4
  7186: 82 18 18                 a1 = u64 [sp + 0x18]
  7189: c8 87 07                 a0 = a0 + a1
  7192: 82 78 08                 a1 = u64 [a0 + 0x8]
  7195: 82 19 10                 a2 = u64 [sp + 0x10]
  7198: aa 98 07                 jump @503 if a1 == a2
      :                          @502
  7201: 33 08                    a1 = 0
  7203: 28 0f                    jump @505
      :                          @503
  7205: 82 77                    a0 = u64 [a0]
  7207: 82 77                    a0 = u64 [a0]
  7209: 33 08 01                 a1 = 0x1
  7212: 28 06                    jump @505
      :                          @504
  7214: 33 08 01                 a1 = 0x1
  7217: 01                       fallthrough
      :                          @505
  7218: 7b 18 40                 u64 [sp + 0x40] = a1
  7221: 7b 17 48                 u64 [sp + 0x48] = a0
  7224: 82 67 08                 a0 = u64 [s1 + 0x8]
  7227: 97 77 04                 a0 = a0 << 0x4
  7230: 82 18 18                 a1 = u64 [sp + 0x18]
  7233: c8 78 08                 a1 = a1 + a0
  7236: 82 87                    a0 = u64 [a1]
  7238: 82 89 08                 a2 = u64 [a1 + 0x8]
  7241: 95 18 30                 a1 = sp + 0x30
  7244: b4 90 01 7a              ra = 122, jump [a2]
      :                          @506 [@dyn 61]
  7248: 52 07 b9 00              jump @522 if a0 != 0
      :                          @507
  7252: 95 55 10                 s0 = s0 + 0x10
  7255: 82 18 20                 a1 = u64 [sp + 0x20]
  7258: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  7261: 95 66 38                 s1 = s1 + 0x38
  7264: 82 17 28                 a0 = u64 [sp + 0x28]
  7267: 95 77 01                 a0 = a0 + 0x1
  7270: 7b 17 28                 u64 [sp + 0x28] = a0
  7273: 52 08 36 ff              jump @490 if a1 != 0
      :                          @508
  7277: 28 69                    jump @517
      :                          @509
  7279: 82 97 18                 a0 = u64 [a2 + 0x18]
  7282: 51 07 71                 jump @519 if a0 == 0
      :                          @510
  7285: 82 95 10                 s0 = u64 [a2 + 0x10]
  7288: 33 0a                    a3 = 0
  7290: 97 78 04                 a1 = a0 << 0x4
  7293: c8 58 08                 a1 = a1 + s0
  7296: 7b 18 20                 u64 [sp + 0x20] = a1
  7299: 7b 19 08                 u64 [sp + 0x8] = a2
  7302: 82 96                    s1 = u64 [a2]
  7304: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  7307: 97 77 04                 a0 = a0 << 0x4
  7310: 98 77 04                 a0 = a0 >> 0x4
  7313: 95 77 01                 a0 = a0 + 0x1
  7316: 7b 17                    u64 [sp] = a0
  7318: 95 66 08                 s1 = s1 + 0x8
  7321: 01                       fallthrough
      :                          @511
  7322: 7b 1a 28                 u64 [sp + 0x28] = a3
  7325: 82 69                    a2 = u64 [s1]
  7327: 51 09 16                 jump @514 if a2 == 0
      :                          @512
  7330: 82 1a 58                 a3 = u64 [sp + 0x58]
  7333: 82 17 50                 a0 = u64 [sp + 0x50]
  7336: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  7339: 82 aa 18                 a3 = u64 [a3 + 0x18]
  7342: b4 a0 01 7c              ra = 124, jump [a3]
      :                          @513 [@dyn 62]
  7346: 52 07 57                 jump @522 if a0 != 0
      :                          @514
  7349: 82 57                    a0 = u64 [s0]
  7351: 82 59 08                 a2 = u64 [s0 + 0x8]
  7354: 95 18 30                 a1 = sp + 0x30
  7357: b4 90 01 7e              ra = 126, jump [a2]
      :                          @515 [@dyn 63]
  7361: 52 07 48                 jump @522 if a0 != 0
      :                          @516
  7364: 95 66 10                 s1 = s1 + 0x10
  7367: 95 55 10                 s0 = s0 + 0x10
  7370: 82 1a 28                 a3 = u64 [sp + 0x28]
  7373: 95 aa 01                 a3 = a3 + 0x1
  7376: 82 17 20                 a0 = u64 [sp + 0x20]
  7379: ab 75 c7                 jump @511 if s0 != a0
      :                          @517
  7382: 82 19 08                 a2 = u64 [sp + 0x8]
  7385: 82 1a                    a3 = u64 [sp]
  7387: 82 97 08                 a0 = u64 [a2 + 0x8]
  7390: ac 7a 0d                 jump @520 if a3 <u a0
      :                          @518
  7393: 28 2d                    jump @523
      :                          @519
  7395: 33 0a                    a3 = 0
  7397: 82 97 08                 a0 = u64 [a2 + 0x8]
  7400: 54 07 26                 jump @523 if a0 <=u 0
      :                          @520
  7403: 82 97                    a0 = u64 [a2]
  7405: 97 a8 04                 a1 = a3 << 0x4
  7408: c8 87 09                 a2 = a0 + a1
  7411: 82 1a 58                 a3 = u64 [sp + 0x58]
  7414: 82 17 50                 a0 = u64 [sp + 0x50]
  7417: 82 98                    a1 = u64 [a2]
  7419: 82 99 08                 a2 = u64 [a2 + 0x8]
  7422: 82 aa 18                 a3 = u64 [a3 + 0x18]
  7425: b4 a0 02 80 00           ra = 128, jump [a3]
      :                          @521 [@dyn 64]
  7430: 51 07 08                 jump @523 if a0 == 0
      :                          @522
  7433: 33 07 01                 a0 = 0x1
  7436: 28 05                    jump @524
      :                          @523
  7438: 33 07                    a0 = 0
  7440: 01                       fallthrough
      :                          @524
  7441: 82 10 80 00              ra = u64 [sp + 0x80]
  7445: 82 15 78                 s0 = u64 [sp + 0x78]
  7448: 82 16 70                 s1 = u64 [sp + 0x70]
  7451: 95 11 88 00              sp = sp + 0x88
  7455: 32 00                    ret
      :                          @525 [@dyn 65]
  7457: 32 00                    ret
      :                          @526 [@dyn 66]
  7459: 95 11 80                 sp = sp + 0xffffffffffffff80
  7462: 7b 10 78                 u64 [sp + 0x78] = ra
  7465: 7b 15 70                 u64 [sp + 0x70] = s0
  7468: 7b 16 68                 u64 [sp + 0x68] = s1
  7471: 64 92                    t0 = a2
  7473: 33 00                    ra = 0
  7475: 33 0b                    a4 = 0
  7477: 33 05                    s0 = 0
  7479: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
  7489: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
  7495: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
  7505: 82 79 10                 a2 = u64 [a0 + 0x10]
  7508: 7b 19 48                 u64 [sp + 0x48] = a2
  7511: 82 79                    a2 = u64 [a0]
  7513: 7b 19 38                 u64 [sp + 0x38] = a2
  7516: 82 77 08                 a0 = u64 [a0 + 0x8]
  7519: 7b 17 30                 u64 [sp + 0x30] = a0
  7522: 33 07 b0 00 01           a0 = 0x100b0
  7527: 7b 17 08                 u64 [sp + 0x8] = a0
  7530: 3a 07 50 00 03           a0 = u64 [0x30050]
  7535: 7b 17 60                 u64 [sp + 0x60] = a0
  7538: 7b 18 58                 u64 [sp + 0x58] = a1
  7541: 95 88 08                 a1 = a1 + 0x8
  7544: 7b 18                    u64 [sp] = a1
  7546: 33 0c 0a                 a5 = 0xa
  7549: 7b 12 20                 u64 [sp + 0x20] = t0
  7552: 7b 13 18                 u64 [sp + 0x18] = t1
  7555: 7b 14 10                 u64 [sp + 0x10] = t2
  7558: 28 3b                    jump @530
      :                          @527
  7560: 64 06                    s1 = ra
  7562: c8 89 07                 a0 = a2 + a1
  7565: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
  7568: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  7571: 88 77 01                 a0 = a0 <u 0x1
  7574: 01                       fallthrough
      :                          @528
  7575: 82 1a 48                 a3 = u64 [sp + 0x48]
  7578: 78 a7                    u8 [a3] = a0
  7580: 82 17 30                 a0 = u64 [sp + 0x30]
  7583: 82 7a 18                 a3 = u64 [a0 + 0x18]
  7586: 82 17 38                 a0 = u64 [sp + 0x38]
  7589: b4 a0 02 86 00           ra = 134, jump [a3]
      :                          @529 [@dyn 67]
  7594: 64 5b                    a4 = s0
  7596: 82 12 20                 t0 = u64 [sp + 0x20]
  7599: 82 13 18                 t1 = u64 [sp + 0x18]
  7602: 82 14 10                 t2 = u64 [sp + 0x10]
  7605: 64 60                    ra = s1
  7607: 33 0c 0a                 a5 = 0xa
  7610: 82 15 40                 s0 = u64 [sp + 0x40]
  7613: 52 07 64 01              jump @571 if a0 != 0
      :                          @530
  7617: 84 57 ff 00              a0 = s0 & 0xff
  7621: 52 07 58 01              jump @570 if a0 != 0
      :                          @531
  7625: 7b 1b 50                 u64 [sp + 0x50] = a4
  7628: ae 02 0a                 jump @534 if t0 >=u ra
      :                          @532
  7631: 28 ef 00                 jump @561
      :                          @533
  7634: ac 02 ec 00              jump @561 if t0 <u ra
      :                          @534
  7638: c9 02 08                 a1 = t0 - ra
  7641: 82 16 58                 s1 = u64 [sp + 0x58]
  7644: c8 06 06                 s1 = s1 + ra
  7647: 55 18 10 1d              jump @540 if a1 >=u 16
      :                          @535
  7651: aa 02 d8 00              jump @560 if t0 == ra
      :                          @536
  7655: 33 0a                    a3 = 0
  7657: 01                       fallthrough
      :                          @537
  7658: c8 a6 07                 a0 = s1 + a3
  7661: 7c 77                    a0 = u8 [a0]
  7663: aa c7 a5 00              jump @555 if a0 == a5
      :                          @538
  7667: 95 aa 01                 a3 = a3 + 0x1
  7670: ab a8 f4                 jump @537 if a1 != a3
      :                          @539
  7673: 28 c2 00                 jump @560
      :                          @540
  7676: 95 69 07                 a2 = s1 + 0x7
  7679: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
  7682: c9 6a 07                 a0 = a3 - s1
  7685: d3 6a 0a                 a3 = a3 ^ s1
  7688: 88 aa 01                 a3 = a3 <u 0x1
  7691: 88 7b 01                 a4 = a0 <u 0x1
  7694: d4 ba 0a                 a3 = a3 | a4
  7697: 51 0a 45                 jump @546 if a3 == 0
      :                          @541
  7700: 33 07                    a0 = 0
  7702: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  7705: 82 1b                    a4 = u64 [sp]
  7707: c8 0b 0b                 a4 = a4 + ra
  7710: 28 08                    jump @543
      :                          @542
  7712: 82 1b                    a4 = u64 [sp]
  7714: c8 0b 0b                 a4 = a4 + ra
  7717: 01                       fallthrough
      :                          @543
  7718: c8 76 0c                 a5 = s1 + a0
  7721: 82 cc                    a5 = u64 [a5]
  7723: c8 7b 09                 a2 = a4 + a0
  7726: 82 99                    a2 = u64 [a2]
  7728: d3 4c 05                 s0 = a5 ^ t2
  7731: c8 35 05                 s0 = s0 + t1
  7734: e0 c5 0c                 a5 = s0 & ~a5
  7737: d3 49 05                 s0 = a2 ^ t2
  7740: c8 35 05                 s0 = s0 + t1
  7743: e0 95 09                 a2 = s0 & ~a2
  7746: d4 c9 09                 a2 = a2 | a5
  7749: 82 1c 60                 a5 = u64 [sp + 0x60]
  7752: d2 c9 09                 a2 = a2 & a5
  7755: 52 09 1f                 jump @549 if a2 != 0
      :                          @544
  7758: 95 77 10                 a0 = a0 + 0x10
  7761: ae 7a d5                 jump @543 if a3 >=u a0
      :                          @545
  7764: 28 16                    jump @549
      :                          @546
  7766: c8 a6 0b                 a4 = s1 + a3
  7769: 7c bb                    a4 = u8 [a4]
  7771: aa cb 51                 jump @558 if a4 == a5
      :                          @547
  7774: 95 aa 01                 a3 = a3 + 0x1
  7777: ab a7 f5                 jump @546 if a0 != a3
      :                          @548
  7780: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  7783: ae 7a b9                 jump @542 if a3 >=u a0
      :                          @549
  7786: aa 87 9b 00              jump @567 if a0 == a1
      :                          @550
  7790: 33 0a                    a3 = 0
  7792: c8 76 06                 s1 = s1 + a0
  7795: c9 72 08                 a1 = t0 - a0
  7798: c9 08 08                 a1 = a1 - ra
  7801: 33 0c 0a                 a5 = 0xa
  7804: 82 1b 50                 a4 = u64 [sp + 0x50]
  7807: 01                       fallthrough
      :                          @551
  7808: c8 a6 09                 a2 = s1 + a3
  7811: 7c 99                    a2 = u8 [a2]
  7813: aa c9 0b                 jump @554 if a2 == a5
      :                          @552
  7816: 95 aa 01                 a3 = a3 + 0x1
  7819: ab a8 f5                 jump @551 if a1 != a3
      :                          @553
  7822: 28 2d                    jump @560
      :                          @554
  7824: c8 7a 0a                 a3 = a3 + a0
  7827: 01                       fallthrough
      :                          @555
  7828: c8 0a 0a                 a3 = a3 + ra
  7831: 95 a0 01                 ra = a3 + 0x1
  7834: ae 2a 38 ff              jump @533 if a3 >=u t0
      :                          @556
  7838: 82 17 58                 a0 = u64 [sp + 0x58]
  7841: c8 7a 0a                 a3 = a3 + a0
  7844: 7c a7                    a0 = u8 [a3]
  7846: ab c7 2c ff              jump @533 if a0 != a5
      :                          @557
  7850: 28 62                    jump @568
      :                          @558
  7852: 82 1b 50                 a4 = u64 [sp + 0x50]
  7855: c8 0a 0a                 a3 = a3 + ra
  7858: 95 a0 01                 ra = a3 + 0x1
  7861: ac 2a e9                 jump @556 if a3 <u t0
      :                          @559
  7864: 28 1a ff                 jump @533
      :                          @560
  7867: 64 20                    ra = t0
  7869: 01                       fallthrough
      :                          @561
  7870: 49 11 40 01              u64 [sp + 64] = 0x1
  7874: 64 b5                    s0 = a4
  7876: 64 26                    s1 = t0
  7878: aa 2b 57                 jump @570 if a4 == t0
      :                          @562
  7881: 82 17 48                 a0 = u64 [sp + 0x48]
  7884: 7c 77                    a0 = u8 [a0]
  7886: 51 07 23                 jump @565 if a0 == 0
      :                          @563
  7889: 82 17 30                 a0 = u64 [sp + 0x30]
  7892: 82 7a 18                 a3 = u64 [a0 + 0x18]
  7895: 33 09 04                 a2 = 0x4
  7898: 82 17 38                 a0 = u64 [sp + 0x38]
  7901: 82 18 08                 a1 = u64 [sp + 0x8]
  7904: 7b 10 28                 u64 [sp + 0x28] = ra
  7907: b4 a0 02 88 00           ra = 136, jump [a3]
      :                          @564 [@dyn 68]
  7912: 82 1b 50                 a4 = u64 [sp + 0x50]
  7915: 82 10 28                 ra = u64 [sp + 0x28]
  7918: 52 07 33                 jump @571 if a0 != 0
      :                          @565
  7921: c9 b6 09                 a2 = s1 - a4
  7924: 82 18 58                 a1 = u64 [sp + 0x58]
  7927: c8 b8 08                 a1 = a1 + a4
  7930: ab b6 8e fe              jump @527 if s1 != a4
      :                          @566
  7934: 64 06                    s1 = ra
  7936: 33 07                    a0 = 0
  7938: 28 95 fe                 jump @528
      :                          @567
  7941: 64 20                    ra = t0
  7943: 82 1b 50                 a4 = u64 [sp + 0x50]
  7946: 28 b4                    jump @561
      :                          @568
  7948: 49 11 40                 u64 [sp + 64] = 0
  7951: 64 05                    s0 = ra
  7953: 64 06                    s1 = ra
  7955: 82 17 48                 a0 = u64 [sp + 0x48]
  7958: 7c 77                    a0 = u8 [a0]
  7960: 52 07 b9                 jump @563 if a0 != 0
      :                          @569
  7963: 28 d6                    jump @565
      :                          @570
  7965: 33 07                    a0 = 0
  7967: 28 06                    jump @572
      :                          @571
  7969: 33 07 01                 a0 = 0x1
  7972: 01                       fallthrough
      :                          @572
  7973: 82 10 78                 ra = u64 [sp + 0x78]
  7976: 82 15 70                 s0 = u64 [sp + 0x70]
  7979: 82 16 68                 s1 = u64 [sp + 0x68]
  7982: 95 11 80 00              sp = sp + 0x80
  7986: 32 00                    ret
      :                          @573 [@dyn 69]
  7988: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  7991: 7b 10 20                 u64 [sp + 0x20] = ra
  7994: 7b 15 18                 u64 [sp + 0x18] = s0
  7997: 7b 16 10                 u64 [sp + 0x10] = s1
  8000: 82 75 10                 s0 = u64 [a0 + 0x10]
  8003: 7c 59                    a2 = u8 [s0]
  8005: 82 7b                    a4 = u64 [a0]
  8007: 82 76 08                 s1 = u64 [a0 + 0x8]
  8010: 51 09 33                 jump @577 if a2 == 0
      :                          @574
  8013: 82 6a 18                 a3 = u64 [s1 + 0x18]
  8016: 7b 18 08                 u64 [sp + 0x8] = a1
  8019: 33 08 b0 00 01           a1 = 0x100b0
  8024: 33 09 04                 a2 = 0x4
  8027: 64 b7                    a0 = a4
  8029: 7b 1b                    u64 [sp] = a4
  8031: b4 a0 02 8c 00           ra = 140, jump [a3]
      :                          @575 [@dyn 70]
  8036: 82 18 08                 a1 = u64 [sp + 0x8]
  8039: 82 1b                    a4 = u64 [sp]
  8041: 51 07 14                 jump @577 if a0 == 0
      :                          @576
  8044: 33 07 01                 a0 = 0x1
  8047: 82 10 20                 ra = u64 [sp + 0x20]
  8050: 82 15 18                 s0 = u64 [sp + 0x18]
  8053: 82 16 10                 s1 = u64 [sp + 0x10]
  8056: 95 11 28                 sp = sp + 0x28
  8059: 32 00                    ret
      :                          @577
  8061: 83 87                    i32 a0 = a1 + 0
  8063: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  8066: 88 77 01                 a0 = a0 <u 0x1
  8069: 78 57                    u8 [s0] = a0
  8071: 82 6c 20                 a5 = u64 [s1 + 0x20]
  8074: 64 b7                    a0 = a4
  8076: 82 10 20                 ra = u64 [sp + 0x20]
  8079: 82 15 18                 s0 = u64 [sp + 0x18]
  8082: 82 16 10                 s1 = u64 [sp + 0x10]
  8085: 95 11 28                 sp = sp + 0x28
  8088: 32 0c                    jump [a5]
      :                          @578 [@dyn 71]
  8090: 64 8a                    a3 = a1
  8092: 33 08 80 00 01           a1 = 0x10080
  8097: 64 a9                    a2 = a3
  8099: 28 9e fb                 jump @487
      :                          @579 [@dyn 72]
  8102: 80 77                    a0 = u32 [a0]
  8104: 28 03 f8                 jump @425
      :                          @580
  8107: 51 08 9b 00              jump @601 if a1 == 0
      :                          @581
  8111: 64 79                    a2 = a0
  8113: 7c 77                    a0 = u8 [a0]
  8115: 51 07 91 00              jump @600 if a0 == 0
      :                          @582
  8119: 51 27 ff 00 90 00        jump @602 if a0 == 255
      :                          @583
  8125: 6c 7a                    a3 = sext.b a0
  8127: 57 0a 09                 jump @585 if a3 <s 0
      :                          @584
  8130: 33 0a                    a3 = 0
  8132: 33 08                    a1 = 0
  8134: 28 73                    jump @599
      :                          @585
  8136: 55 27 c0 00 0d           jump @587 if a0 >=u 192
      :                          @586
  8141: 33 0a 01                 a3 = 0x1
  8144: 33 0b 80                 a4 = 0xffffffffffffff80
  8147: 28 4a                    jump @596
      :                          @587
  8149: 55 27 e0 00 0e           jump @589 if a0 >=u 224
      :                          @588
  8154: 33 0a 02                 a3 = 0x2
  8157: 33 0b 40 ff              a4 = 0xffffffffffffff40
  8161: 28 3c                    jump @596
      :                          @589
  8163: 55 27 f0 00 0e           jump @591 if a0 >=u 240
      :                          @590
  8168: 33 0a 03                 a3 = 0x3
  8171: 33 0b 20 ff              a4 = 0xffffffffffffff20
  8175: 28 2e                    jump @596
      :                          @591
  8177: 55 27 f8 00 0e           jump @593 if a0 >=u 248
      :                          @592
  8182: 33 0a 04                 a3 = 0x4
  8185: 33 0b 10 ff              a4 = 0xffffffffffffff10
  8189: 28 20                    jump @596
      :                          @593
  8191: 55 27 fc 00 0e           jump @595 if a0 >=u 252
      :                          @594
  8196: 33 0a 05                 a3 = 0x5
  8199: 33 0b 08 ff              a4 = 0xffffffffffffff08
  8203: 28 12                    jump @596
      :                          @595
  8205: 88 7a fe 00              a3 = a0 <u 0xfe
  8209: 33 0b 04 ff              a4 = 0xffffffffffffff04
  8213: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  8217: 85 aa 07                 a3 = a3 ^ 0x7
  8220: 01                       fallthrough
      :                          @596
  8221: ae 8a 2b                 jump @603 if a3 >=u a1
      :                          @597
  8224: 33 08                    a1 = 0
  8226: c8 b7 07                 a0 = a0 + a4
  8229: 64 ab                    a4 = a3
  8231: 01                       fallthrough
      :                          @598
  8232: c8 b9 0c                 a5 = a2 + a4
  8235: 7c cc                    a5 = u8 [a5]
  8237: 97 88 08                 a1 = a1 << 0x8
  8240: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  8243: d4 c8 08                 a1 = a1 | a5
  8246: 52 0b f2                 jump @598 if a4 != 0
      :                          @599
  8249: 8a a9 03                 i32 a2 = a3 << 0x3
  8252: cf 97 07                 a0 = a0 << a2
  8255: c8 87 07                 a0 = a0 + a1
  8258: 32 00                    ret
      :                          @600
  8260: 32 00                    ret
      :                          @601
  8262: 00                       trap
      :                          @602
  8263: 00                       trap
      :                          @603
  8264: 00                       trap
