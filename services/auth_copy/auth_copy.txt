// RO data = 684/684 bytes
// RW data = 96/68224 bytes
// Stack size = 65536 bytes
// RO data = [97, 117, 116, 104, 95, 99, 111, 112, 121, 32, 115, 116, 97, 114, 116, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 108, 111, 97, 100, 61, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 24, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 97, 117, 116, 104, 95, 99, 111, 112, 121, 32, 111, 117, 116, 112, 117, 116, 61, 0, 0, 0, 0, 0, 0, 0, 64, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 97, 117, 116, 104, 95, 99, 111, 112, 121, 32, 111, 117, 116, 112, 117, 116, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 111, 117, 116, 112, 117, 116, 95, 108, 101, 110, 103, 116, 104, 61, 104, 0, 1, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 129, 0, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 136, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 138, 0, 0, 0, 0, 0, 0, 0, 144, 0, 0, 0, 0, 0, 0, 0, 152, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 188, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 190, 0, 0, 0, 0, 0, 0, 0, 196, 0, 0, 0, 0, 0, 0, 0, 200, 0, 0, 0, 0, 0, 0, 0, 32, 32, 32, 32, 44, 32, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3, 11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4, 7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8, 9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13, 2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9, 12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11, 13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10, 6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5, 10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3]
// RW data = [40, 201, 189, 242, 103, 230, 9, 106, 59, 167, 202, 132, 133, 174, 103, 187, 43, 248, 148, 254, 114, 243, 110, 60, 241, 54, 29, 95, 58, 245, 79, 165, 209, 130, 230, 173, 127, 82, 14, 81, 31, 108, 62, 43, 140, 104, 5, 155, 107, 189, 65, 251, 171, 217, 131, 31, 121, 33, 126, 19, 25, 205, 224, 91, 8, 201, 188, 243, 103, 230, 9, 106, 148, 66, 190, 4, 84, 38, 124, 224, 75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 3142
// Code size = 9803 bytes

      :                          @0
     0: 28 9b 04 00 00           jump @73
      :                          @1
     5: 28 b1 13 00 00           jump @177
      :                          @2
    10: 28 8b 16                 jump @260
      :                          @3 [@dyn 1]
    13: 95 11 c0                 sp = sp + 0xffffffffffffffc0
    16: 7b 10 38                 u64 [sp + 0x38] = ra
    19: 7b 15 30                 u64 [sp + 0x30] = s0
    22: 7b 16 28                 u64 [sp + 0x28] = s1
    25: 7b 18 08                 u64 [sp + 0x8] = a1
    28: 82 89 28                 a2 = u64 [a1 + 0x28]
    31: 82 76                    s1 = u64 [a0]
    33: 82 75 08                 s0 = u64 [a0 + 0x8]
    36: 82 87 20                 a0 = u64 [a1 + 0x20]
    39: 82 9a 18                 a3 = u64 [a2 + 0x18]
    42: 33 08 e0 00 01           a1 = 0x100e0
    47: 33 09 01                 a2 = 0x1
    50: b4 a0 01 04              ra = 4, jump [a3]
      :                          @4 [@dyn 2]
    54: 82 18 08                 a1 = u64 [sp + 0x8]
    57: 7b 18 10                 u64 [sp + 0x10] = a1
    60: 78 17 18                 u8 [sp + 0x18] = a0
    63: 46 11 19                 u8 [sp + 25] = 0
    66: 51 05 2c                 jump @9 if s0 == 0
      :                          @5
    69: 33 07 0a                 a0 = 0xa
    72: 7b 17                    u64 [sp] = a0
    74: 01                       fallthrough
      :                          @6
    75: 95 67 01                 a0 = s1 + 0x1
    78: 7b 17 08                 u64 [sp + 0x8] = a0
    81: 7b 16 20                 u64 [sp + 0x20] = s1
    84: 95 17 10                 a0 = sp + 0x10
    87: 95 18 20                 a1 = sp + 0x20
    90: 82 19                    a2 = u64 [sp]
    92: 50 10 06 12 24           ra = 6, jump @553
      :                          @7 [@dyn 3]
    97: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
   100: 82 16 08                 s1 = u64 [sp + 0x8]
   103: 52 05 e4                 jump @6 if s0 != 0
      :                          @8
   106: 7c 17 18                 a0 = u8 [sp + 0x18]
   109: 01                       fallthrough
      :                          @9
   110: 33 08 01                 a1 = 0x1
   113: 52 07 1e                 jump @12 if a0 != 0
      :                          @10
   116: 82 17 10                 a0 = u64 [sp + 0x10]
   119: 82 78 28                 a1 = u64 [a0 + 0x28]
   122: 82 77 20                 a0 = u64 [a0 + 0x20]
   125: 82 8a 18                 a3 = u64 [a1 + 0x18]
   128: 33 08 21 01 01           a1 = 0x10121
   133: 33 09 01                 a2 = 0x1
   136: b4 a0 01 08              ra = 8, jump [a3]
      :                          @11 [@dyn 4]
   140: 64 78                    a1 = a0
   142: 01                       fallthrough
      :                          @12
   143: 64 87                    a0 = a1
   145: 82 10 38                 ra = u64 [sp + 0x38]
   148: 82 15 30                 s0 = u64 [sp + 0x30]
   151: 82 16 28                 s1 = u64 [sp + 0x28]
   154: 95 11 40                 sp = sp + 0x40
   157: 32 00                    ret
      :                          @13 [@dyn 5]
   159: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   163: 7b 10 80 00              u64 [sp + 0x80] = ra
   167: 80 89 34                 a2 = u32 [a1 + 0x34]
   170: 82 77                    a0 = u64 [a0]
   172: 84 9a 10                 a3 = a2 & 0x10
   175: 52 0a 16                 jump @16 if a3 != 0
      :                          @14
   178: 84 99 20                 a2 = a2 & 0x20
   181: 52 09 41                 jump @19 if a2 != 0
      :                          @15
   184: 7c 77                    a0 = u8 [a0]
   186: 82 10 80 00              ra = u64 [sp + 0x80]
   190: 95 11 88 00              sp = sp + 0x88
   194: 28 a1 1b                 jump @399
      :                          @16
   197: 7c 77                    a0 = u8 [a0]
   199: 33 0b 81 00              a4 = 0x81
   203: 95 19 7f                 a2 = sp + 0x7f
   206: 33 02 57                 t0 = 0x57
   209: 01                       fallthrough
      :                          @17
   210: 64 bc                    a5 = a4
   212: 84 7b 0f                 a4 = a0 & 0xf
   215: 97 77 38                 a0 = a0 << 0x38
   218: 98 77 3c                 a0 = a0 >> 0x3c
   221: 88 b3 0a                 t1 = a4 <u 0xa
   224: 33 0a 30                 a3 = 0x30
   227: da 32 0a                 a3 = t0 if t1 == 0
   230: be ba 0a                 i32 a3 = a3 + a4
   233: 78 9a                    u8 [a2] = a3
   235: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
   238: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
   241: 52 07 e1                 jump @17 if a0 != 0
      :                          @18
   244: 28 31                    jump @21
      :                          @19
   246: 7c 77                    a0 = u8 [a0]
   248: 33 0b 81 00              a4 = 0x81
   252: 95 19 7f                 a2 = sp + 0x7f
   255: 33 02 37                 t0 = 0x37
   258: 01                       fallthrough
      :                          @20
   259: 64 bc                    a5 = a4
   261: 84 7b 0f                 a4 = a0 & 0xf
   264: 97 77 38                 a0 = a0 << 0x38
   267: 98 77 3c                 a0 = a0 >> 0x3c
   270: 88 b3 0a                 t1 = a4 <u 0xa
   273: 33 0a 30                 a3 = 0x30
   276: da 32 0a                 a3 = t0 if t1 == 0
   279: be ba 0a                 i32 a3 = a3 + a4
   282: 78 9a                    u8 [a2] = a3
   284: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
   287: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
   290: 52 07 e1                 jump @20 if a0 != 0
      :                          @21
   293: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   296: 56 27 80 00 27           jump @24 if a0 >u 128
      :                          @22
   301: 9a bb 81 00              a4 = 0x81 - a4
   305: 64 1a                    a3 = sp
   307: c8 7a 0a                 a3 = a3 + a0
   310: 33 09 02                 a2 = 0x2
   313: 64 87                    a0 = a1
   315: 33 08 22 01 01           a1 = 0x10122
   320: 50 10 0c 4b 1c           ra = 12, jump @409
      :                          @23 [@dyn 6]
   325: 82 10 80 00              ra = u64 [sp + 0x80]
   329: 95 11 88 00              sp = sp + 0x88
   333: 32 00                    ret
      :                          @24
   335: 00                       trap
      :                          @25 [@dyn 7]
   336: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   340: 7b 10 80 00              u64 [sp + 0x80] = ra
   344: 80 89 34                 a2 = u32 [a1 + 0x34]
   347: 84 9a 10                 a3 = a2 & 0x10
   350: 52 0a 16                 jump @28 if a3 != 0
      :                          @26
   353: 84 99 20                 a2 = a2 & 0x20
   356: 52 09 40                 jump @31 if a2 != 0
      :                          @27
   359: 82 77                    a0 = u64 [a0]
   361: 82 10 80 00              ra = u64 [sp + 0x80]
   365: 95 11 88 00              sp = sp + 0x88
   369: 28 f2 1a                 jump @399
      :                          @28
   372: 82 7b                    a4 = u64 [a0]
   374: 33 09 81 00              a2 = 0x81
   378: 95 17 7f                 a0 = sp + 0x7f
   381: 33 02 57                 t0 = 0x57
   384: 01                       fallthrough
      :                          @29
   385: 64 9c                    a5 = a2
   387: 98 ba 04                 a3 = a4 >> 0x4
   390: 84 bb 0f                 a4 = a4 & 0xf
   393: 88 b3 0a                 t1 = a4 <u 0xa
   396: 33 09 30                 a2 = 0x30
   399: da 32 09                 a2 = t0 if t1 == 0
   402: be b9 09                 i32 a2 = a2 + a4
   405: 78 79                    u8 [a0] = a2
   407: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   410: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   413: 64 ab                    a4 = a3
   415: 52 0a e2                 jump @29 if a3 != 0
      :                          @30
   418: 28 30                    jump @33
      :                          @31
   420: 82 7b                    a4 = u64 [a0]
   422: 33 09 81 00              a2 = 0x81
   426: 95 17 7f                 a0 = sp + 0x7f
   429: 33 02 37                 t0 = 0x37
   432: 01                       fallthrough
      :                          @32
   433: 64 9c                    a5 = a2
   435: 98 ba 04                 a3 = a4 >> 0x4
   438: 84 bb 0f                 a4 = a4 & 0xf
   441: 88 b3 0a                 t1 = a4 <u 0xa
   444: 33 09 30                 a2 = 0x30
   447: da 32 09                 a2 = t0 if t1 == 0
   450: be b9 09                 i32 a2 = a2 + a4
   453: 78 79                    u8 [a0] = a2
   455: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   458: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   461: 64 ab                    a4 = a3
   463: 52 0a e2                 jump @32 if a3 != 0
      :                          @33
   466: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   469: 56 27 80 00 27           jump @36 if a0 >u 128
      :                          @34
   474: 9a 9b 81 00              a4 = 0x81 - a2
   478: 64 1a                    a3 = sp
   480: c8 7a 0a                 a3 = a3 + a0
   483: 33 09 02                 a2 = 0x2
   486: 64 87                    a0 = a1
   488: 33 08 22 01 01           a1 = 0x10122
   493: 50 10 10 9e 1b           ra = 16, jump @409
      :                          @35 [@dyn 8]
   498: 82 10 80 00              ra = u64 [sp + 0x80]
   502: 95 11 88 00              sp = sp + 0x88
   506: 32 00                    ret
      :                          @36
   508: 00                       trap
      :                          @37 [@dyn 9]
   509: 95 11 d0                 sp = sp + 0xffffffffffffffd0
   512: 7b 10 28                 u64 [sp + 0x28] = ra
   515: 7b 15 20                 u64 [sp + 0x20] = s0
   518: 7b 16 18                 u64 [sp + 0x18] = s1
   521: 64 85                    s0 = a1
   523: 82 88 28                 a1 = u64 [a1 + 0x28]
   526: 82 5a 20                 a3 = u64 [s0 + 0x20]
   529: 82 8b 18                 a4 = u64 [a1 + 0x18]
   532: 64 76                    s1 = a0
   534: 33 08 e0 00 01           a1 = 0x100e0
   539: 33 09 01                 a2 = 0x1
   542: 64 a7                    a0 = a3
   544: b4 b0 01 14              ra = 20, jump [a4]
      :                          @38 [@dyn 10]
   548: 7b 15                    u64 [sp] = s0
   550: 78 17 08                 u8 [sp + 0x8] = a0
   553: 46 11 09                 u8 [sp + 9] = 0
   556: 7b 16 10                 u64 [sp + 0x10] = s1
   559: 33 05 0a                 s0 = 0xa
   562: 64 17                    a0 = sp
   564: 95 18 10                 a1 = sp + 0x10
   567: 33 09 0a                 a2 = 0xa
   570: 50 10 16 34 22           ra = 22, jump @553
      :                          @39 [@dyn 11]
   575: 95 67 01                 a0 = s1 + 0x1
   578: 7b 17 10                 u64 [sp + 0x10] = a0
   581: 64 17                    a0 = sp
   583: 95 18 10                 a1 = sp + 0x10
   586: 64 59                    a2 = s0
   588: 50 10 18 22 22           ra = 24, jump @553
      :                          @40 [@dyn 12]
   593: 95 67 02                 a0 = s1 + 0x2
   596: 7b 17 10                 u64 [sp + 0x10] = a0
   599: 64 17                    a0 = sp
   601: 95 18 10                 a1 = sp + 0x10
   604: 64 59                    a2 = s0
   606: 50 10 1a 10 22           ra = 26, jump @553
      :                          @41 [@dyn 13]
   611: 95 67 03                 a0 = s1 + 0x3
   614: 7b 17 10                 u64 [sp + 0x10] = a0
   617: 64 17                    a0 = sp
   619: 95 18 10                 a1 = sp + 0x10
   622: 64 59                    a2 = s0
   624: 50 10 1c fe 21           ra = 28, jump @553
      :                          @42 [@dyn 14]
   629: 95 67 04                 a0 = s1 + 0x4
   632: 7b 17 10                 u64 [sp + 0x10] = a0
   635: 64 17                    a0 = sp
   637: 95 18 10                 a1 = sp + 0x10
   640: 64 59                    a2 = s0
   642: 50 10 1e ec 21           ra = 30, jump @553
      :                          @43 [@dyn 15]
   647: 95 67 05                 a0 = s1 + 0x5
   650: 7b 17 10                 u64 [sp + 0x10] = a0
   653: 64 17                    a0 = sp
   655: 95 18 10                 a1 = sp + 0x10
   658: 64 59                    a2 = s0
   660: 50 10 20 da 21           ra = 32, jump @553
      :                          @44 [@dyn 16]
   665: 95 67 06                 a0 = s1 + 0x6
   668: 7b 17 10                 u64 [sp + 0x10] = a0
   671: 64 17                    a0 = sp
   673: 95 18 10                 a1 = sp + 0x10
   676: 64 59                    a2 = s0
   678: 50 10 22 c8 21           ra = 34, jump @553
      :                          @45 [@dyn 17]
   683: 95 67 07                 a0 = s1 + 0x7
   686: 7b 17 10                 u64 [sp + 0x10] = a0
   689: 64 17                    a0 = sp
   691: 95 18 10                 a1 = sp + 0x10
   694: 64 59                    a2 = s0
   696: 50 10 24 b6 21           ra = 36, jump @553
      :                          @46 [@dyn 18]
   701: 95 67 08                 a0 = s1 + 0x8
   704: 7b 17 10                 u64 [sp + 0x10] = a0
   707: 64 17                    a0 = sp
   709: 95 18 10                 a1 = sp + 0x10
   712: 64 59                    a2 = s0
   714: 50 10 26 a4 21           ra = 38, jump @553
      :                          @47 [@dyn 19]
   719: 95 67 09                 a0 = s1 + 0x9
   722: 7b 17 10                 u64 [sp + 0x10] = a0
   725: 64 17                    a0 = sp
   727: 95 18 10                 a1 = sp + 0x10
   730: 64 59                    a2 = s0
   732: 50 10 28 92 21           ra = 40, jump @553
      :                          @48 [@dyn 20]
   737: 95 67 0a                 a0 = s1 + 0xa
   740: 7b 17 10                 u64 [sp + 0x10] = a0
   743: 64 17                    a0 = sp
   745: 95 18 10                 a1 = sp + 0x10
   748: 64 59                    a2 = s0
   750: 50 10 2a 80 21           ra = 42, jump @553
      :                          @49 [@dyn 21]
   755: 95 67 0b                 a0 = s1 + 0xb
   758: 7b 17 10                 u64 [sp + 0x10] = a0
   761: 64 17                    a0 = sp
   763: 95 18 10                 a1 = sp + 0x10
   766: 64 59                    a2 = s0
   768: 50 10 2c 6e 21           ra = 44, jump @553
      :                          @50 [@dyn 22]
   773: 95 67 0c                 a0 = s1 + 0xc
   776: 7b 17 10                 u64 [sp + 0x10] = a0
   779: 64 17                    a0 = sp
   781: 95 18 10                 a1 = sp + 0x10
   784: 64 59                    a2 = s0
   786: 50 10 2e 5c 21           ra = 46, jump @553
      :                          @51 [@dyn 23]
   791: 95 67 0d                 a0 = s1 + 0xd
   794: 7b 17 10                 u64 [sp + 0x10] = a0
   797: 64 17                    a0 = sp
   799: 95 18 10                 a1 = sp + 0x10
   802: 64 59                    a2 = s0
   804: 50 10 30 4a 21           ra = 48, jump @553
      :                          @52 [@dyn 24]
   809: 95 67 0e                 a0 = s1 + 0xe
   812: 7b 17 10                 u64 [sp + 0x10] = a0
   815: 64 17                    a0 = sp
   817: 95 18 10                 a1 = sp + 0x10
   820: 64 59                    a2 = s0
   822: 50 10 32 38 21           ra = 50, jump @553
      :                          @53 [@dyn 25]
   827: 95 67 0f                 a0 = s1 + 0xf
   830: 7b 17 10                 u64 [sp + 0x10] = a0
   833: 64 17                    a0 = sp
   835: 95 18 10                 a1 = sp + 0x10
   838: 64 59                    a2 = s0
   840: 50 10 34 26 21           ra = 52, jump @553
      :                          @54 [@dyn 26]
   845: 95 67 10                 a0 = s1 + 0x10
   848: 7b 17 10                 u64 [sp + 0x10] = a0
   851: 64 17                    a0 = sp
   853: 95 18 10                 a1 = sp + 0x10
   856: 64 59                    a2 = s0
   858: 50 10 36 14 21           ra = 54, jump @553
      :                          @55 [@dyn 27]
   863: 95 67 11                 a0 = s1 + 0x11
   866: 7b 17 10                 u64 [sp + 0x10] = a0
   869: 64 17                    a0 = sp
   871: 95 18 10                 a1 = sp + 0x10
   874: 64 59                    a2 = s0
   876: 50 10 38 02 21           ra = 56, jump @553
      :                          @56 [@dyn 28]
   881: 95 67 12                 a0 = s1 + 0x12
   884: 7b 17 10                 u64 [sp + 0x10] = a0
   887: 64 17                    a0 = sp
   889: 95 18 10                 a1 = sp + 0x10
   892: 64 59                    a2 = s0
   894: 50 10 3a f0 20           ra = 58, jump @553
      :                          @57 [@dyn 29]
   899: 95 67 13                 a0 = s1 + 0x13
   902: 7b 17 10                 u64 [sp + 0x10] = a0
   905: 64 17                    a0 = sp
   907: 95 18 10                 a1 = sp + 0x10
   910: 64 59                    a2 = s0
   912: 50 10 3c de 20           ra = 60, jump @553
      :                          @58 [@dyn 30]
   917: 95 67 14                 a0 = s1 + 0x14
   920: 7b 17 10                 u64 [sp + 0x10] = a0
   923: 64 17                    a0 = sp
   925: 95 18 10                 a1 = sp + 0x10
   928: 64 59                    a2 = s0
   930: 50 10 3e cc 20           ra = 62, jump @553
      :                          @59 [@dyn 31]
   935: 95 67 15                 a0 = s1 + 0x15
   938: 7b 17 10                 u64 [sp + 0x10] = a0
   941: 64 17                    a0 = sp
   943: 95 18 10                 a1 = sp + 0x10
   946: 64 59                    a2 = s0
   948: 50 10 40 ba 20           ra = 64, jump @553
      :                          @60 [@dyn 32]
   953: 95 67 16                 a0 = s1 + 0x16
   956: 7b 17 10                 u64 [sp + 0x10] = a0
   959: 64 17                    a0 = sp
   961: 95 18 10                 a1 = sp + 0x10
   964: 64 59                    a2 = s0
   966: 50 10 42 a8 20           ra = 66, jump @553
      :                          @61 [@dyn 33]
   971: 95 67 17                 a0 = s1 + 0x17
   974: 7b 17 10                 u64 [sp + 0x10] = a0
   977: 64 17                    a0 = sp
   979: 95 18 10                 a1 = sp + 0x10
   982: 64 59                    a2 = s0
   984: 50 10 44 96 20           ra = 68, jump @553
      :                          @62 [@dyn 34]
   989: 95 67 18                 a0 = s1 + 0x18
   992: 7b 17 10                 u64 [sp + 0x10] = a0
   995: 64 17                    a0 = sp
   997: 95 18 10                 a1 = sp + 0x10
  1000: 64 59                    a2 = s0
  1002: 50 10 46 84 20           ra = 70, jump @553
      :                          @63 [@dyn 35]
  1007: 95 67 19                 a0 = s1 + 0x19
  1010: 7b 17 10                 u64 [sp + 0x10] = a0
  1013: 64 17                    a0 = sp
  1015: 95 18 10                 a1 = sp + 0x10
  1018: 64 59                    a2 = s0
  1020: 50 10 48 72 20           ra = 72, jump @553
      :                          @64 [@dyn 36]
  1025: 95 67 1a                 a0 = s1 + 0x1a
  1028: 7b 17 10                 u64 [sp + 0x10] = a0
  1031: 64 17                    a0 = sp
  1033: 95 18 10                 a1 = sp + 0x10
  1036: 64 59                    a2 = s0
  1038: 50 10 4a 60 20           ra = 74, jump @553
      :                          @65 [@dyn 37]
  1043: 95 67 1b                 a0 = s1 + 0x1b
  1046: 7b 17 10                 u64 [sp + 0x10] = a0
  1049: 64 17                    a0 = sp
  1051: 95 18 10                 a1 = sp + 0x10
  1054: 64 59                    a2 = s0
  1056: 50 10 4c 4e 20           ra = 76, jump @553
      :                          @66 [@dyn 38]
  1061: 95 67 1c                 a0 = s1 + 0x1c
  1064: 7b 17 10                 u64 [sp + 0x10] = a0
  1067: 64 17                    a0 = sp
  1069: 95 18 10                 a1 = sp + 0x10
  1072: 64 59                    a2 = s0
  1074: 50 10 4e 3c 20           ra = 78, jump @553
      :                          @67 [@dyn 39]
  1079: 95 67 1d                 a0 = s1 + 0x1d
  1082: 7b 17 10                 u64 [sp + 0x10] = a0
  1085: 64 17                    a0 = sp
  1087: 95 18 10                 a1 = sp + 0x10
  1090: 64 59                    a2 = s0
  1092: 50 10 50 2a 20           ra = 80, jump @553
      :                          @68 [@dyn 40]
  1097: 95 67 1e                 a0 = s1 + 0x1e
  1100: 7b 17 10                 u64 [sp + 0x10] = a0
  1103: 64 17                    a0 = sp
  1105: 95 18 10                 a1 = sp + 0x10
  1108: 64 59                    a2 = s0
  1110: 50 10 52 18 20           ra = 82, jump @553
      :                          @69 [@dyn 41]
  1115: 95 66 1f                 s1 = s1 + 0x1f
  1118: 7b 16 10                 u64 [sp + 0x10] = s1
  1121: 64 17                    a0 = sp
  1123: 95 18 10                 a1 = sp + 0x10
  1126: 64 59                    a2 = s0
  1128: 50 10 54 06 20           ra = 84, jump @553
      :                          @70 [@dyn 42]
  1133: 33 07 01                 a0 = 0x1
  1136: 7c 18 08                 a1 = u8 [sp + 0x8]
  1139: 52 08 1a                 jump @72 if a1 != 0
      :                          @71
  1142: 82 17                    a0 = u64 [sp]
  1144: 82 78 28                 a1 = u64 [a0 + 0x28]
  1147: 82 77 20                 a0 = u64 [a0 + 0x20]
  1150: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1153: 33 08 21 01 01           a1 = 0x10121
  1158: 33 09 01                 a2 = 0x1
  1161: b4 a0 01 56              ra = 86, jump [a3]
      :                          @72 [@dyn 43]
  1165: 82 10 28                 ra = u64 [sp + 0x28]
  1168: 82 15 20                 s0 = u64 [sp + 0x20]
  1171: 82 16 18                 s1 = u64 [sp + 0x18]
  1174: 95 11 30                 sp = sp + 0x30
  1177: 32 00                    ret
      :                          @73 [export #0: 'refine']
  1179: 95 11 28 fc              sp = sp + 0xfffffffffffffc28
  1183: 7b 10 d0 03              u64 [sp + 0x3d0] = ra
  1187: 7b 15 c8 03              u64 [sp + 0x3c8] = s0
  1191: 7b 16 c0 03              u64 [sp + 0x3c0] = s1
  1195: 49 01 ff ff fe           u64 [sp + 0] = 0xfffffffffffeffff
  1200: c8 87 07                 a0 = a0 + a1
  1203: 95 77 e0                 a0 = a0 + 0xffffffffffffffe0
  1206: 7b 17 78 01              u64 [sp + 0x178] = a0
  1210: 7b 17 80 01              u64 [sp + 0x180] = a0
  1214: 49 21 88 01 20           u64 [sp + 392] = 0x20
  1219: 95 17 78 01              a0 = sp + 0x178
  1223: 7b 17 c0 02              u64 [sp + 0x2c0] = a0
  1227: 33 07 0e                 a0 = 0xe
  1230: 7b 17 c8 02              u64 [sp + 0x2c8] = a0
  1234: 95 17 80 01              a0 = sp + 0x180
  1238: 7b 17 d0 02              u64 [sp + 0x2d0] = a0
  1242: 33 07 02                 a0 = 0x2
  1245: 7b 17 d8 02              u64 [sp + 0x2d8] = a0
  1249: 49 21 e0 01 02           u64 [sp + 480] = 0x2
  1254: 49 21 f0 01 02           u64 [sp + 496] = 0x2
  1259: 49 21 00 02              u64 [sp + 512] = 0
  1263: 14 09 20 00 00 00 10 00 00 00 a2 = 0x1000000020
  1273: 7b 19 08 02              u64 [sp + 0x208] = a2
  1277: 46 21 10 02 03           u8 [sp + 528] = 0x3
  1282: 49 21 18 02 02           u64 [sp + 536] = 0x2
  1287: 49 21 28 02 02           u64 [sp + 552] = 0x2
  1292: 49 21 38 02 01           u64 [sp + 568] = 0x1
  1297: 7b 19 40 02              u64 [sp + 0x240] = a2
  1301: 46 21 48 02 03           u8 [sp + 584] = 0x3
  1306: 33 08 20 00 01           a1 = 0x10020
  1311: 7b 18 40 03              u64 [sp + 0x340] = a1
  1315: 49 21 48 03 02           u64 [sp + 840] = 0x2
  1320: 95 18 e0 01              a1 = sp + 0x1e0
  1324: 7b 18 60 03              u64 [sp + 0x360] = a1
  1328: 49 21 68 03 02           u64 [sp + 872] = 0x2
  1333: 95 18 c0 02              a1 = sp + 0x2c0
  1337: 7b 18 50 03              u64 [sp + 0x350] = a1
  1341: 49 21 58 03 02           u64 [sp + 856] = 0x2
  1346: 95 17 98 01              a0 = sp + 0x198
  1350: 95 18 40 03              a1 = sp + 0x340
  1354: 50 10 58 94 13           ra = 88, jump @317
      :                          @74 [@dyn 44]
  1359: 82 15 a0 01              s0 = u64 [sp + 0x1a0]
  1363: 82 1b a8 01              a4 = u64 [sp + 0x1a8]
  1367: 82 16 98 01              s1 = u64 [sp + 0x198]
  1371: 33 07 02                 a0 = 0x2
  1374: 33 08                    a1 = 0
  1376: 33 09                    a2 = 0
  1378: 64 5a                    a3 = s0
  1380: 33 00 5a                 ra = 0x5a
  1383: 0a 64                    ecalli 100 // 'log'
  1385: 01                       fallthrough
      :                          @75 [@dyn 45]
  1386: 82 17                    a0 = u64 [sp]
  1388: c8 67 07                 a0 = a0 + s1
  1391: 53 37 00 00 ff 25        jump @81 if a0 <u 4294901760
      :                          @76
  1397: 33 07 70 0a 03           a0 = 0x30a70
  1402: 95 77 00 00 01           a0 = a0 + 0x10000
  1407: 01                       fallthrough
      :                          @77
  1408: 82 78                    a1 = u64 [a0]
  1410: c9 87 09                 a2 = a0 - a1
  1413: ab 59 0f                 jump @81 if a2 != s0
      :                          @78
  1416: c9 68 09                 a2 = a1 - s1
  1419: 01                       fallthrough
      :                          @79
  1420: 82 7a                    a3 = u64 [a0]
  1422: ab 8a f2                 jump @77 if a3 != a1
      :                          @80
  1425: 7b 79                    u64 [a0] = a2
  1427: 01                       fallthrough
      :                          @81
  1428: 82 17 80 01              a0 = u64 [sp + 0x180]
  1432: 7b 17 88 00              u64 [sp + 0x88] = a0
  1436: 82 15 88 01              s0 = u64 [sp + 0x188]
  1440: 95 17 30 02              a0 = sp + 0x230
  1444: 33 09 80 00              a2 = 0x80
  1448: 33 08                    a1 = 0
  1450: 50 10 5c 60 16           ra = 92, jump @385
      :                          @82 [@dyn 46]
  1455: 64 5b                    a4 = s0
  1457: 3a 0c 00 00 03           a5 = u64 [0x30000]
  1462: 3a 07 08 00 03           a0 = u64 [0x30008]
  1467: 3a 08 10 00 03           a1 = u64 [0x30010]
  1472: 3a 09 18 00 03           a2 = u64 [0x30018]
  1477: 7b 1c e0 01              u64 [sp + 0x1e0] = a5
  1481: 7b 17 38                 u64 [sp + 0x38] = a0
  1484: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
  1488: 7b 18 30                 u64 [sp + 0x30] = a1
  1491: 7b 18 f0 01              u64 [sp + 0x1f0] = a1
  1495: 7b 19 28                 u64 [sp + 0x28] = a2
  1498: 7b 19 f8 01              u64 [sp + 0x1f8] = a2
  1502: 3a 06 20 00 03           s1 = u64 [0x30020]
  1507: 3a 0a 28 00 03           a3 = u64 [0x30028]
  1512: 3a 07 30 00 03           a0 = u64 [0x30030]
  1517: 33 05 38 00 03           s0 = 0x30038
  1522: 3a 08 38 00 03           a1 = u64 [0x30038]
  1527: 7b 16 00 02              u64 [sp + 0x200] = s1
  1531: 7b 1a 08 02              u64 [sp + 0x208] = a3
  1535: 7b 17 20                 u64 [sp + 0x20] = a0
  1538: 7b 17 10 02              u64 [sp + 0x210] = a0
  1542: 7b 18 18                 u64 [sp + 0x18] = a1
  1545: 7b 18 18 02              u64 [sp + 0x218] = a1
  1549: 49 21 20 02              u64 [sp + 544] = 0
  1553: 49 21 28 02              u64 [sp + 552] = 0
  1557: 49 21 b0 02              u64 [sp + 688] = 0
  1561: 46 21 b8 02              u8 [sp + 696] = 0
  1565: 7b 1a 98 00              u64 [sp + 0x98] = a3
  1569: 7b 16 a0 00              u64 [sp + 0xa0] = s1
  1573: 51 0b cc 05              jump @117 if a4 == 0
      :                          @83
  1577: 33 03                    t1 = 0
  1579: 33 0c                    a5 = 0
  1581: 3a 07 40 00 03           a0 = u64 [0x30040]
  1586: 7b 17 10                 u64 [sp + 0x10] = a0
  1589: 33 07 f3 01 01           a0 = 0x101f3
  1594: 7b 17 08                 u64 [sp + 0x8] = a0
  1597: 7b 1b 90 00              u64 [sp + 0x90] = a4
  1601: 01                       fallthrough
      :                          @84
  1602: 52 23 80 00 2a           jump @87 if t1 != 128
      :                          @85
  1607: 82 17 20 02              a0 = u64 [sp + 0x220]
  1611: 95 75 80 00              s0 = a0 + 0x80
  1615: 7b 15 20 02              u64 [sp + 0x220] = s0
  1619: 82 19 28 02              a2 = u64 [sp + 0x228]
  1623: 7b 1c 80 00              u64 [sp + 0x80] = a5
  1627: 53 17 80 32              jump @91 if a0 <u 4294967168
      :                          @86
  1631: 95 99 01                 a2 = a2 + 0x1
  1634: 7b 19 70 01              u64 [sp + 0x170] = a2
  1638: 7b 19 28 02              u64 [sp + 0x228] = a2
  1642: 28 28                    jump @92
      :                          @87
  1644: 9a 37 80 00              a0 = 0x80 - t1
  1648: c9 cb 08                 a1 = a4 - a5
  1651: e6 87 05                 s0 = minu(a0, a1)
  1654: c8 35 09                 a2 = s0 + t1
  1657: ac 59 3b 0d              jump @175 if a2 <u s0
      :                          @88
  1661: 56 29 80 00 38 0d        jump @176 if a2 >u 128
      :                          @89
  1667: c8 c5 06                 s1 = s0 + a5
  1670: ae 56 22 05              jump @112 if s1 >=u s0
      :                          @90
  1674: 28 28 0d                 jump @173
      :                          @91
  1677: 7b 19 70 01              u64 [sp + 0x170] = a2
  1681: 01                       fallthrough
      :                          @92
  1682: 95 17 40 03              a0 = sp + 0x340
  1686: 33 09 80 00              a2 = 0x80
  1690: 95 18 30 02              a1 = sp + 0x230
  1694: 50 10 5e ba 14           ra = 94, jump @367
      :                          @93 [@dyn 47]
  1699: 82 16 e0 01              s1 = u64 [sp + 0x1e0]
  1703: 82 1c e8 01              a5 = u64 [sp + 0x1e8]
  1707: 82 13 f0 01              t1 = u64 [sp + 0x1f0]
  1711: 82 12 f8 01              t0 = u64 [sp + 0x1f8]
  1715: 82 1b 00 02              a4 = u64 [sp + 0x200]
  1719: 82 1a 08 02              a3 = u64 [sp + 0x208]
  1723: 82 18 10 02              a1 = u64 [sp + 0x210]
  1727: 82 14 18 02              t2 = u64 [sp + 0x218]
  1731: 82 17 a0 00              a0 = u64 [sp + 0xa0]
  1735: d3 57 07                 a0 = a0 ^ s0
  1738: 7b 17 28 01              u64 [sp + 0x128] = a0
  1742: 82 17 98 00              a0 = u64 [sp + 0x98]
  1746: 82 19 70 01              a2 = u64 [sp + 0x170]
  1750: d3 97 07                 a0 = a0 ^ a2
  1753: 7b 17 38 01              u64 [sp + 0x138] = a0
  1757: 33 05 0c                 s0 = 0xc
  1760: 82 17 08                 a0 = u64 [sp + 0x8]
  1763: 7b 16 40                 u64 [sp + 0x40] = s1
  1766: 7b 16 20 01              u64 [sp + 0x120] = s1
  1770: 64 76                    s1 = a0
  1772: 7b 1b 60                 u64 [sp + 0x60] = a4
  1775: 64 b9                    a2 = a4
  1777: 82 17 10                 a0 = u64 [sp + 0x10]
  1780: 7b 17 48 01              u64 [sp + 0x148] = a0
  1784: 7b 1c 48                 u64 [sp + 0x48] = a5
  1787: 7b 1c 30 01              u64 [sp + 0x130] = a5
  1791: 7b 1a 68                 u64 [sp + 0x68] = a3
  1794: 64 a0                    ra = a3
  1796: 82 17 38                 a0 = u64 [sp + 0x38]
  1799: 7b 17 58 01              u64 [sp + 0x158] = a0
  1803: 7b 13 50                 u64 [sp + 0x50] = t1
  1806: 7b 13 40 01              u64 [sp + 0x140] = t1
  1810: 7b 18 70                 u64 [sp + 0x70] = a1
  1813: 64 8a                    a3 = a1
  1815: 82 1b 20                 a4 = u64 [sp + 0x20]
  1818: 82 17 30                 a0 = u64 [sp + 0x30]
  1821: 7b 17 68 01              u64 [sp + 0x168] = a0
  1825: 7b 12 58                 u64 [sp + 0x58] = t0
  1828: 64 2c                    a5 = t0
  1830: 7b 14 78                 u64 [sp + 0x78] = t2
  1833: 64 42                    t0 = t2
  1835: 82 17 18                 a0 = u64 [sp + 0x18]
  1838: 7b 17 50 01              u64 [sp + 0x150] = a0
  1842: 82 17 28                 a0 = u64 [sp + 0x28]
  1845: 7b 17 60 01              u64 [sp + 0x160] = a0
  1849: 01                       fallthrough
      :                          @94
  1850: 7b 10 18 01              u64 [sp + 0x118] = ra
  1854: 7b 1a 70 01              u64 [sp + 0x170] = a3
  1858: 7c 60 f9                 ra = u8 [s1 + 0xfffffffffffffff9]
  1861: 56 10 0f 68 0c           jump @168 if ra >u 15
      :                          @95
  1866: 7c 67 fa                 a0 = u8 [s1 + 0xfffffffffffffffa]
  1869: 33 08 10                 a1 = 0x10
  1872: ae 87 58 0c              jump @163 if a0 >=u a1
      :                          @96
  1876: 7b 1b 10 01              u64 [sp + 0x110] = a4
  1880: 7c 63 fb                 t1 = u8 [s1 + 0xfffffffffffffffb]
  1883: 55 13 10 4e 0c           jump @164 if t1 >=u 16
      :                          @97
  1888: 7b 15 08 01              u64 [sp + 0x108] = s0
  1892: 7c 64 fc                 t2 = u8 [s1 + 0xfffffffffffffffc]
  1895: 55 14 10 47 0c           jump @169 if t2 >=u 16
      :                          @98
  1900: 7b 1c 00 01              u64 [sp + 0x100] = a5
  1904: 7c 6c fd                 a5 = u8 [s1 + 0xfffffffffffffffd]
  1907: 55 1c 10 37 0c           jump @165 if a5 >=u 16
      :                          @99
  1912: 7b 12 f8 00              u64 [sp + 0xf8] = t0
  1916: 7c 62 fe                 t0 = u8 [s1 + 0xfffffffffffffffe]
  1919: 55 12 10 30 0c           jump @170 if t0 >=u 16
      :                          @100
  1924: 7c 6a ff                 a3 = u8 [s1 + 0xffffffffffffffff]
  1927: 55 1a 10 24 0c           jump @166 if a3 >=u 16
      :                          @101
  1932: 7c 6b                    a4 = u8 [s1]
  1934: 55 1b 10 1e 0c           jump @167 if a4 >=u 16
      :                          @102
  1939: 7c 65 01                 s0 = u8 [s1 + 0x1]
  1942: 55 15 10 8d 0b           jump @157 if s0 >=u 16
      :                          @103
  1947: 7b 15 f0 00              u64 [sp + 0xf0] = s0
  1951: 7c 65 02                 s0 = u8 [s1 + 0x2]
  1954: 55 15 10 81 0b           jump @157 if s0 >=u 16
      :                          @104
  1959: 7b 15 e8 00              u64 [sp + 0xe8] = s0
  1963: 7c 65 03                 s0 = u8 [s1 + 0x3]
  1966: 55 15 10 75 0b           jump @157 if s0 >=u 16
      :                          @105
  1971: 7b 15 e0 00              u64 [sp + 0xe0] = s0
  1975: 7c 65 04                 s0 = u8 [s1 + 0x4]
  1978: 55 15 10 69 0b           jump @157 if s0 >=u 16
      :                          @106
  1983: 7b 15 d8 00              u64 [sp + 0xd8] = s0
  1987: 7c 65 05                 s0 = u8 [s1 + 0x5]
  1990: 55 15 10 5d 0b           jump @157 if s0 >=u 16
      :                          @107
  1995: 7b 15 d0 00              u64 [sp + 0xd0] = s0
  1999: 7c 65 06                 s0 = u8 [s1 + 0x6]
  2002: 55 15 10 51 0b           jump @157 if s0 >=u 16
      :                          @108
  2007: 7b 15 c8 00              u64 [sp + 0xc8] = s0
  2011: 7c 65 07                 s0 = u8 [s1 + 0x7]
  2014: 55 15 10 45 0b           jump @157 if s0 >=u 16
      :                          @109
  2019: 7b 15 c0 00              u64 [sp + 0xc0] = s0
  2023: 7c 65 08                 s0 = u8 [s1 + 0x8]
  2026: 55 15 10 39 0b           jump @157 if s0 >=u 16
      :                          @110
  2031: 97 00 03                 ra = ra << 0x3
  2034: 95 18 40 03              a1 = sp + 0x340
  2038: c8 80 00                 ra = ra + a1
  2041: 7b 15 b0 00              u64 [sp + 0xb0] = s0
  2045: 82 05                    s0 = u64 [ra]
  2047: 97 77 03                 a0 = a0 << 0x3
  2050: c8 87 07                 a0 = a0 + a1
  2053: 82 77                    a0 = u64 [a0]
  2055: 7b 16 b8 00              u64 [sp + 0xb8] = s1
  2059: 7b 19 a8 00              u64 [sp + 0xa8] = a2
  2063: 82 16 20 01              s1 = u64 [sp + 0x120]
  2067: c8 96 06                 s1 = s1 + a2
  2070: c8 65 05                 s0 = s0 + s1
  2073: 82 19 28 01              a2 = u64 [sp + 0x128]
  2077: d3 59 09                 a2 = a2 ^ s0
  2080: 7b 19 20 01              u64 [sp + 0x120] = a2
  2084: c8 57 07                 a0 = a0 + s0
  2087: 7b 17 28 01              u64 [sp + 0x128] = a0
  2091: 97 33 03                 t1 = t1 << 0x3
  2094: c8 83 03                 t1 = t1 + a1
  2097: 82 37                    a0 = u64 [t1]
  2099: 97 44 03                 t2 = t2 << 0x3
  2102: c8 84 04                 t2 = t2 + a1
  2105: 82 45                    s0 = u64 [t2]
  2107: 82 10 18 01              ra = u64 [sp + 0x118]
  2111: 82 16 30 01              s1 = u64 [sp + 0x130]
  2115: c8 06 06                 s1 = s1 + ra
  2118: c8 67 07                 a0 = a0 + s1
  2121: 82 19 38 01              a2 = u64 [sp + 0x138]
  2125: d3 97 03                 t1 = a0 ^ a2
  2128: c8 57 04                 t2 = a0 + s0
  2131: 97 cc 03                 a5 = a5 << 0x3
  2134: c8 8c 0c                 a5 = a5 + a1
  2137: 82 c7                    a0 = u64 [a5]
  2139: 97 22 03                 t0 = t0 << 0x3
  2142: c8 82 02                 t0 = t0 + a1
  2145: 82 2c                    a5 = u64 [t0]
  2147: 82 16 40 01              s1 = u64 [sp + 0x140]
  2151: 82 18 70 01              a1 = u64 [sp + 0x170]
  2155: c8 86 06                 s1 = s1 + a1
  2158: c8 67 07                 a0 = a0 + s1
  2161: 82 19 10 01              a2 = u64 [sp + 0x110]
  2165: d3 79 09                 a2 = a2 ^ a0
  2168: 7b 19 40 01              u64 [sp + 0x140] = a2
  2172: c8 c7 07                 a0 = a0 + a5
  2175: 7b 17 38 01              u64 [sp + 0x138] = a0
  2179: 97 aa 03                 a3 = a3 << 0x3
  2182: 95 18 40 03              a1 = sp + 0x340
  2186: c8 8a 0a                 a3 = a3 + a1
  2189: 82 a7                    a0 = u64 [a3]
  2191: 97 bb 03                 a4 = a4 << 0x3
  2194: c8 8b 0b                 a4 = a4 + a1
  2197: 82 ba                    a3 = u64 [a4]
  2199: 82 16 f8 00              s1 = u64 [sp + 0xf8]
  2203: 82 1b 00 01              a4 = u64 [sp + 0x100]
  2207: c8 6b 0b                 a4 = a4 + s1
  2210: c8 b7 07                 a0 = a0 + a4
  2213: 82 1b 50 01              a4 = u64 [sp + 0x150]
  2217: d3 7b 0b                 a4 = a4 ^ a0
  2220: c8 a7 02                 t0 = a0 + a3
  2223: 82 17 20 01              a0 = u64 [sp + 0x120]
  2227: 9e 77 20                 a0 = a0 >>r 0x20
  2230: 82 1a 48 01              a3 = u64 [sp + 0x148]
  2234: c8 7a 0a                 a3 = a3 + a0
  2237: 82 15 a8 00              s0 = u64 [sp + 0xa8]
  2241: d3 a5 05                 s0 = s0 ^ a3
  2244: 82 19 f0 00              a2 = u64 [sp + 0xf0]
  2248: 97 99 03                 a2 = a2 << 0x3
  2251: c8 89 09                 a2 = a2 + a1
  2254: 82 99                    a2 = u64 [a2]
  2256: 9e 58 18                 a1 = s0 >>r 0x18
  2259: 7b 18 50 01              u64 [sp + 0x150] = a1
  2263: 82 15 28 01              s0 = u64 [sp + 0x128]
  2267: c8 85 05                 s0 = s0 + a1
  2270: d3 57 07                 a0 = a0 ^ s0
  2273: c8 59 09                 a2 = a2 + s0
  2276: 9e 35 20                 s0 = t1 >>r 0x20
  2279: 82 18 58 01              a1 = u64 [sp + 0x158]
  2283: c8 85 03                 t1 = s0 + a1
  2286: d3 03 0c                 a5 = t1 ^ ra
  2289: 9e cc 18                 a5 = a5 >>r 0x18
  2292: c8 c4 04                 t2 = t2 + a5
  2295: d3 54 05                 s0 = t2 ^ s0
  2298: 9e 58 10                 a1 = s0 >>r 0x10
  2301: 7b 18 48 01              u64 [sp + 0x148] = a1
  2305: c8 38 08                 a1 = a1 + t1
  2308: 7b 18 58 01              u64 [sp + 0x158] = a1
  2312: d3 c8 08                 a1 = a1 ^ a5
  2315: 9e 88 3f                 a1 = a1 >>r 0x3f
  2318: 7b 18 30 01              u64 [sp + 0x130] = a1
  2322: 9e bb 20                 a4 = a4 >>r 0x20
  2325: 82 10 60 01              ra = u64 [sp + 0x160]
  2329: c8 b0 00                 ra = ra + a4
  2332: d3 60 0c                 a5 = ra ^ s1
  2335: 9e c5 18                 s0 = a5 >>r 0x18
  2338: c8 52 03                 t1 = t0 + s0
  2341: d3 b3 0b                 a4 = t1 ^ a4
  2344: 9e bb 10                 a4 = a4 >>r 0x10
  2347: c8 b0 00                 ra = ra + a4
  2350: 7b 10 10 01              u64 [sp + 0x110] = ra
  2354: 82 1c e8 00              a5 = u64 [sp + 0xe8]
  2358: 97 cc 03                 a5 = a5 << 0x3
  2361: 95 16 40 03              s1 = sp + 0x340
  2365: c8 6c 0c                 a5 = a5 + s1
  2368: 82 cc                    a5 = u64 [a5]
  2370: 82 12 e0 00              t0 = u64 [sp + 0xe0]
  2374: 97 22 03                 t0 = t0 << 0x3
  2377: c8 62 02                 t0 = t0 + s1
  2380: 82 22                    t0 = u64 [t0]
  2382: c8 89 09                 a2 = a2 + a1
  2385: d3 9b 0b                 a4 = a4 ^ a2
  2388: 7b 1b 28 01              u64 [sp + 0x128] = a4
  2392: c8 c9 09                 a2 = a2 + a5
  2395: 7b 19 60 01              u64 [sp + 0x160] = a2
  2399: c8 24 04                 t2 = t2 + t0
  2402: 9e 76 10                 s1 = a0 >>r 0x10
  2405: c8 6a 0a                 a3 = a3 + s1
  2408: 7b 1a 18 01              u64 [sp + 0x118] = a3
  2412: 82 17 40 01              a0 = u64 [sp + 0x140]
  2416: 9e 79 20                 a2 = a0 >>r 0x20
  2419: 82 12 68 01              t0 = u64 [sp + 0x168]
  2423: c8 92 02                 t0 = t0 + a2
  2426: 82 17 70 01              a0 = u64 [sp + 0x170]
  2430: d3 72 0c                 a5 = t0 ^ a0
  2433: 9e cb 18                 a4 = a5 >>r 0x18
  2436: 82 17 38 01              a0 = u64 [sp + 0x138]
  2440: c8 b7 07                 a0 = a0 + a4
  2443: d3 79 09                 a2 = a2 ^ a0
  2446: 9e 90 10                 ra = a2 >>r 0x10
  2449: c8 02 02                 t0 = t0 + ra
  2452: d3 b2 0b                 a4 = t0 ^ a4
  2455: 9e b8 3f                 a1 = a4 >>r 0x3f
  2458: 7b 18 40 01              u64 [sp + 0x140] = a1
  2462: 82 1a d8 00              a3 = u64 [sp + 0xd8]
  2466: 97 aa 03                 a3 = a3 << 0x3
  2469: 95 19 40 03              a2 = sp + 0x340
  2473: c8 9a 0a                 a3 = a3 + a2
  2476: 82 aa                    a3 = u64 [a3]
  2478: 82 1b d0 00              a4 = u64 [sp + 0xd0]
  2482: 97 bb 03                 a4 = a4 << 0x3
  2485: c8 9b 0b                 a4 = a4 + a2
  2488: 82 bb                    a4 = u64 [a4]
  2490: c8 84 04                 t2 = t2 + a1
  2493: d3 64 06                 s1 = t2 ^ s1
  2496: c8 4a 0a                 a3 = a3 + t2
  2499: 7b 1a 70 01              u64 [sp + 0x170] = a3
  2503: c8 7b 0b                 a4 = a4 + a0
  2506: 82 18 10 01              a1 = u64 [sp + 0x110]
  2510: d3 58 07                 a0 = a1 ^ s0
  2513: 9e 7c 3f                 a5 = a0 >>r 0x3f
  2516: 82 1a c8 00              a3 = u64 [sp + 0xc8]
  2520: 97 aa 03                 a3 = a3 << 0x3
  2523: c8 9a 0a                 a3 = a3 + a2
  2526: 82 aa                    a3 = u64 [a3]
  2528: 82 15 c0 00              s0 = u64 [sp + 0xc0]
  2532: 97 55 03                 s0 = s0 << 0x3
  2535: c8 95 05                 s0 = s0 + a2
  2538: 82 55                    s0 = u64 [s0]
  2540: c8 cb 0b                 a4 = a4 + a5
  2543: 82 17 48 01              a0 = u64 [sp + 0x148]
  2547: d3 b7 07                 a0 = a0 ^ a4
  2550: 7b 17 38 01              u64 [sp + 0x138] = a0
  2554: c8 ba 0a                 a3 = a3 + a4
  2557: 7b 1a 48 01              u64 [sp + 0x148] = a3
  2561: c8 53 03                 t1 = t1 + s0
  2564: 82 1a 50 01              a3 = u64 [sp + 0x150]
  2568: 82 17 18 01              a0 = u64 [sp + 0x118]
  2572: d3 a7 0b                 a4 = a0 ^ a3
  2575: 82 15 b0 00              s0 = u64 [sp + 0xb0]
  2579: 97 55 03                 s0 = s0 << 0x3
  2582: c8 95 05                 s0 = s0 + a2
  2585: 82 55                    s0 = u64 [s0]
  2587: 9e bb 3f                 a4 = a4 >>r 0x3f
  2590: c8 b3 03                 t1 = t1 + a4
  2593: d3 03 04                 t2 = t1 ^ ra
  2596: c8 53 03                 t1 = t1 + s0
  2599: 82 19 28 01              a2 = u64 [sp + 0x128]
  2603: 9e 95 20                 s0 = a2 >>r 0x20
  2606: c8 25 09                 a2 = s0 + t0
  2609: 82 1a 30 01              a3 = u64 [sp + 0x130]
  2613: d3 a9 00                 ra = a2 ^ a3
  2616: 9e 00 18                 ra = ra >>r 0x18
  2619: 82 1a 60 01              a3 = u64 [sp + 0x160]
  2623: c8 0a 0a                 a3 = a3 + ra
  2626: 7b 1a 20 01              u64 [sp + 0x120] = a3
  2630: d3 a5 05                 s0 = s0 ^ a3
  2633: 9e 5a 10                 a3 = s0 >>r 0x10
  2636: 7b 1a 50 01              u64 [sp + 0x150] = a3
  2640: c8 a9 09                 a2 = a2 + a3
  2643: 7b 19 68 01              u64 [sp + 0x168] = a2
  2647: d3 09 09                 a2 = a2 ^ ra
  2650: 9e 90 3f                 ra = a2 >>r 0x3f
  2653: 9e 69 20                 a2 = s1 >>r 0x20
  2656: c8 89 05                 s0 = a2 + a1
  2659: 82 16 40 01              s1 = u64 [sp + 0x140]
  2663: d3 56 06                 s1 = s1 ^ s0
  2666: 9e 66 18                 s1 = s1 >>r 0x18
  2669: 82 18 70 01              a1 = u64 [sp + 0x170]
  2673: c8 68 08                 a1 = a1 + s1
  2676: 7b 18 30 01              u64 [sp + 0x130] = a1
  2680: d3 89 09                 a2 = a2 ^ a1
  2683: 9e 99 10                 a2 = a2 >>r 0x10
  2686: 7b 19 28 01              u64 [sp + 0x128] = a2
  2690: c8 59 09                 a2 = a2 + s0
  2693: 7b 19 60 01              u64 [sp + 0x160] = a2
  2697: d3 69 09                 a2 = a2 ^ s1
  2700: 82 16 b8 00              s1 = u64 [sp + 0xb8]
  2704: 9e 9a 3f                 a3 = a2 >>r 0x3f
  2707: 82 18 38 01              a1 = u64 [sp + 0x138]
  2711: 9e 89 20                 a2 = a1 >>r 0x20
  2714: c8 79 08                 a1 = a2 + a0
  2717: d3 c8 07                 a0 = a1 ^ a5
  2720: 9e 77 18                 a0 = a0 >>r 0x18
  2723: 82 12 48 01              t0 = u64 [sp + 0x148]
  2727: c8 72 02                 t0 = t0 + a0
  2730: 7b 12 40 01              u64 [sp + 0x140] = t0
  2734: d3 92 09                 a2 = t0 ^ a2
  2737: 9e 99 10                 a2 = a2 >>r 0x10
  2740: 7b 19 38 01              u64 [sp + 0x138] = a2
  2744: c8 98 08                 a1 = a1 + a2
  2747: 7b 18 48 01              u64 [sp + 0x148] = a1
  2751: d3 87 07                 a0 = a0 ^ a1
  2754: 9e 72 3f                 t0 = a0 >>r 0x3f
  2757: 9e 47 20                 a0 = t2 >>r 0x20
  2760: 82 18 58 01              a1 = u64 [sp + 0x158]
  2764: c8 78 08                 a1 = a1 + a0
  2767: d3 8b 0b                 a4 = a4 ^ a1
  2770: 9e b9 18                 a2 = a4 >>r 0x18
  2773: c8 93 0c                 a5 = t1 + a2
  2776: d3 c7 07                 a0 = a0 ^ a5
  2779: 9e 7b 10                 a4 = a0 >>r 0x10
  2782: c8 8b 07                 a0 = a4 + a1
  2785: 7b 17 58 01              u64 [sp + 0x158] = a0
  2789: d3 97 07                 a0 = a0 ^ a2
  2792: 9e 79 3f                 a2 = a0 >>r 0x3f
  2795: 82 15 08 01              s0 = u64 [sp + 0x108]
  2799: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  2802: 95 66 10                 s1 = s1 + 0x10
  2805: 52 05 45 fc              jump @94 if s0 != 0
      :                          @111
  2809: 33 03                    t1 = 0
  2811: 82 17 40                 a0 = u64 [sp + 0x40]
  2814: 82 18 20 01              a1 = u64 [sp + 0x120]
  2818: d3 87 07                 a0 = a0 ^ a1
  2821: 82 18 48 01              a1 = u64 [sp + 0x148]
  2825: d3 87 07                 a0 = a0 ^ a1
  2828: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
  2832: 82 17 48                 a0 = u64 [sp + 0x48]
  2835: 82 18 30 01              a1 = u64 [sp + 0x130]
  2839: d3 87 07                 a0 = a0 ^ a1
  2842: 82 18 58 01              a1 = u64 [sp + 0x158]
  2846: d3 87 07                 a0 = a0 ^ a1
  2849: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
  2853: 82 17 50                 a0 = u64 [sp + 0x50]
  2856: 82 18 68 01              a1 = u64 [sp + 0x168]
  2860: d3 87 07                 a0 = a0 ^ a1
  2863: 82 18 40 01              a1 = u64 [sp + 0x140]
  2867: d3 87 07                 a0 = a0 ^ a1
  2870: 7b 17 f0 01              u64 [sp + 0x1f0] = a0
  2874: 82 17 58                 a0 = u64 [sp + 0x58]
  2877: 82 18 60 01              a1 = u64 [sp + 0x160]
  2881: d3 87 07                 a0 = a0 ^ a1
  2884: d3 c7 07                 a0 = a0 ^ a5
  2887: 7b 17 f8 01              u64 [sp + 0x1f8] = a0
  2891: 82 17 60                 a0 = u64 [sp + 0x60]
  2894: 82 18 28 01              a1 = u64 [sp + 0x128]
  2898: d3 87 07                 a0 = a0 ^ a1
  2901: d3 97 07                 a0 = a0 ^ a2
  2904: 7b 17 00 02              u64 [sp + 0x200] = a0
  2908: 82 17 68                 a0 = u64 [sp + 0x68]
  2911: d3 70 07                 a0 = ra ^ a0
  2914: 82 18 38 01              a1 = u64 [sp + 0x138]
  2918: d3 87 07                 a0 = a0 ^ a1
  2921: 7b 17 08 02              u64 [sp + 0x208] = a0
  2925: 82 17 70                 a0 = u64 [sp + 0x70]
  2928: d3 a7 07                 a0 = a0 ^ a3
  2931: d3 b7 07                 a0 = a0 ^ a4
  2934: 7b 17 10 02              u64 [sp + 0x210] = a0
  2938: 82 17 78                 a0 = u64 [sp + 0x78]
  2941: 82 18 50 01              a1 = u64 [sp + 0x150]
  2945: d3 87 07                 a0 = a0 ^ a1
  2948: d3 27 07                 a0 = a0 ^ t0
  2951: 7b 17 18 02              u64 [sp + 0x218] = a0
  2955: 49 21 b0 02              u64 [sp + 688] = 0
  2959: 82 1b 90 00              a4 = u64 [sp + 0x90]
  2963: 82 1c 80 00              a5 = u64 [sp + 0x80]
  2967: c9 cb 07                 a0 = a4 - a5
  2970: 33 08 80 00              a1 = 0x80
  2974: e6 87 05                 s0 = minu(a0, a1)
  2977: c8 c5 06                 s1 = s0 + a5
  2980: ac 56 0e 08              jump @173 if s1 <u s0
      :                          @112
  2984: ac 6b 0b 08              jump @174 if a4 <u s1
      :                          @113
  2988: 95 17 30 02              a0 = sp + 0x230
  2992: c8 37 07                 a0 = a0 + t1
  2995: 82 18 88 00              a1 = u64 [sp + 0x88]
  2999: c8 c8 08                 a1 = a1 + a5
  3002: 64 59                    a2 = s0
  3004: 50 10 60 9c 0f           ra = 96, jump @367
      :                          @114 [@dyn 48]
  3009: 82 17 b0 02              a0 = u64 [sp + 0x2b0]
  3013: c8 57 03                 t1 = a0 + s0
  3016: 7b 13 b0 02              u64 [sp + 0x2b0] = t1
  3020: 64 6c                    a5 = s1
  3022: 82 1b 90 00              a4 = u64 [sp + 0x90]
  3026: ac b6 70 fa              jump @84 if s1 <u a4
      :                          @115
  3030: 7c 17 b8 02              a0 = u8 [sp + 0x2b8]
  3034: 51 07 4a 07              jump @158 if a0 == 0
      :                          @116
  3038: 49 21 b0 01              u64 [sp + 432] = 0
  3042: 49 21 a8 01              u64 [sp + 424] = 0
  3046: 49 21 a0 01              u64 [sp + 416] = 0
  3050: 49 21 98 01              u64 [sp + 408] = 0
  3054: 28 24 05                 jump @140
      :                          @117
  3057: 7b 1c 60                 u64 [sp + 0x60] = a5
  3060: 95 17 c0 02              a0 = sp + 0x2c0
  3064: 33 09 80 00              a2 = 0x80
  3068: 33 08                    a1 = 0
  3070: 50 10 62 0c 10           ra = 98, jump @385
      :                          @118 [@dyn 49]
  3075: 3a 07 08 00 03           a0 = u64 [0x30008]
  3080: 7b 17 68                 u64 [sp + 0x68] = a0
  3083: 3a 07 10 00 03           a0 = u64 [0x30010]
  3088: 7b 17 70                 u64 [sp + 0x70] = a0
  3091: 3a 0c 18 00 03           a5 = u64 [0x30018]
  3096: 3a 07 30 00 03           a0 = u64 [0x30030]
  3101: 7b 17 68 01              u64 [sp + 0x168] = a0
  3105: 3a 07 38 00 03           a0 = u64 [0x30038]
  3110: 7b 17 48 01              u64 [sp + 0x148] = a0
  3114: 33 09                    a2 = 0
  3116: 82 17 98 00              a0 = u64 [sp + 0x98]
  3120: 7b 17 38 01              u64 [sp + 0x138] = a0
  3124: 7b 16 30 01              u64 [sp + 0x130] = s1
  3128: 01                       fallthrough
      :                          @119
  3129: 7b 1c 58                 u64 [sp + 0x58] = a5
  3132: 95 17 c0 02              a0 = sp + 0x2c0
  3136: 95 18 30 02              a1 = sp + 0x230
  3140: 64 c5                    s0 = a5
  3142: 50 10 64 12 0f           ra = 100, jump @367
      :                          @120 [@dyn 50]
  3147: 95 17 40 03              a0 = sp + 0x340
  3151: 95 18 c0 02              a1 = sp + 0x2c0
  3155: 33 09 80 00              a2 = 0x80
  3159: 50 10 66 01 0f           ra = 102, jump @367
      :                          @121 [@dyn 51]
  3164: 33 0b f3 01 01           a4 = 0x101f3
  3169: 3a 07 18 00 03           a0 = u64 [0x30018]
  3174: 7b 17 58 01              u64 [sp + 0x158] = a0
  3178: 3a 07 38 00 03           a0 = u64 [0x30038]
  3183: 7b 17 40 01              u64 [sp + 0x140] = a0
  3187: 3a 07 10 00 03           a0 = u64 [0x30010]
  3192: 7b 17 60 01              u64 [sp + 0x160] = a0
  3196: 3a 02 48 00 03           t0 = u64 [0x30048]
  3201: 3a 04 08 00 03           t2 = u64 [0x30008]
  3206: 3a 03 40 00 03           t1 = u64 [0x30040]
  3211: 33 06 0c                 s1 = 0xc
  3214: 33 0a 10                 a3 = 0x10
  3217: 82 17 60                 a0 = u64 [sp + 0x60]
  3220: 7b 17 50 01              u64 [sp + 0x150] = a0
  3224: 82 18 68                 a1 = u64 [sp + 0x68]
  3227: 64 80                    ra = a1
  3229: 82 19 70                 a2 = u64 [sp + 0x70]
  3232: 64 9c                    a5 = a2
  3234: 7b 19 70                 u64 [sp + 0x70] = a2
  3237: 7b 18 68                 u64 [sp + 0x68] = a1
  3240: 01                       fallthrough
      :                          @122
  3241: 7b 10 20 01              u64 [sp + 0x120] = ra
  3245: 7b 1c 28 01              u64 [sp + 0x128] = a5
  3249: 7c b0 f9                 ra = u8 [a4 + 0xfffffffffffffff9]
  3252: 56 10 0f f9 06           jump @168 if ra >u 15
      :                          @123
  3257: 64 4c                    a5 = t2
  3259: 7c b4 fa                 t2 = u8 [a4 + 0xfffffffffffffffa]
  3262: 55 14 10 f0 06           jump @169 if t2 >=u 16
      :                          @124
  3267: 7c b7 fb                 a0 = u8 [a4 + 0xfffffffffffffffb]
  3270: 55 17 10 e2 06           jump @163 if a0 >=u 16
      :                          @125
  3275: 7b 12 10 01              u64 [sp + 0x110] = t0
  3279: 7b 13 18 01              u64 [sp + 0x118] = t1
  3283: 7c b3 fc                 t1 = u8 [a4 + 0xfffffffffffffffc]
  3286: 55 13 10 d3 06           jump @164 if t1 >=u 16
      :                          @126
  3291: 7c b9 fd                 a2 = u8 [a4 + 0xfffffffffffffffd]
  3294: 55 19 10 d2 06           jump @171 if a2 >=u 16
      :                          @127
  3299: 7b 17 f8 00              u64 [sp + 0xf8] = a0
  3303: 7b 15 00 01              u64 [sp + 0x100] = s0
  3307: 7b 1c 08 01              u64 [sp + 0x108] = a5
  3311: 7c bc fe                 a5 = u8 [a4 + 0xfffffffffffffffe]
  3314: 55 1c 10 b8 06           jump @165 if a5 >=u 16
      :                          @128
  3319: 33 05 10                 s0 = 0x10
  3322: 7c b7 ff                 a0 = u8 [a4 + 0xffffffffffffffff]
  3325: ae 57 ab 06              jump @163 if a0 >=u s0
      :                          @129
  3329: 7b 1b 70 01              u64 [sp + 0x170] = a4
  3333: 7c bb                    a4 = u8 [a4]
  3335: 55 1b 10 a5 06           jump @167 if a4 >=u 16
      :                          @130
  3340: 7b 19 f0 00              u64 [sp + 0xf0] = a2
  3344: 82 19 70 01              a2 = u64 [sp + 0x170]
  3348: 7c 98 01                 a1 = u8 [a2 + 0x1]
  3351: 55 18 10 9a 06           jump @172 if a1 >=u 16
      :                          @131
  3356: 7b 16 e8 00              u64 [sp + 0xe8] = s1
  3360: 82 16 70 01              s1 = u64 [sp + 0x170]
  3364: 7c 6a 02                 a3 = u8 [s1 + 0x2]
  3367: 55 1a 10 84 06           jump @166 if a3 >=u 16
      :                          @132
  3372: 82 16 70 01              s1 = u64 [sp + 0x170]
  3376: 7c 69 03                 a2 = u8 [s1 + 0x3]
  3379: 55 19 10 7d 06           jump @171 if a2 >=u 16
      :                          @133
  3384: 7b 13 d8 00              u64 [sp + 0xd8] = t1
  3388: 7b 1c e0 00              u64 [sp + 0xe0] = a5
  3392: 82 16 70 01              s1 = u64 [sp + 0x170]
  3396: 7c 63 04                 t1 = u8 [s1 + 0x4]
  3399: 55 13 10 62 06           jump @164 if t1 >=u 16
      :                          @134
  3404: 7b 17 d0 00              u64 [sp + 0xd0] = a0
  3408: 82 16 70 01              s1 = u64 [sp + 0x170]
  3412: 7c 6c 05                 a5 = u8 [s1 + 0x5]
  3415: 55 1c 10 53 06           jump @165 if a5 >=u 16
      :                          @135
  3420: 7b 1b c8 00              u64 [sp + 0xc8] = a4
  3424: 82 16 70 01              s1 = u64 [sp + 0x170]
  3428: 7c 6b 06                 a4 = u8 [s1 + 0x6]
  3431: 55 1b 10 45 06           jump @167 if a4 >=u 16
      :                          @136
  3436: 7b 1a c0 00              u64 [sp + 0xc0] = a3
  3440: 82 16 70 01              s1 = u64 [sp + 0x170]
  3444: 7c 6a 07                 a3 = u8 [s1 + 0x7]
  3447: 55 1a 10 34 06           jump @166 if a3 >=u 16
      :                          @137
  3452: 7b 19 b8 00              u64 [sp + 0xb8] = a2
  3456: 82 16 70 01              s1 = u64 [sp + 0x170]
  3460: 7c 69 08                 a2 = u8 [s1 + 0x8]
  3463: 55 19 10 29 06           jump @171 if a2 >=u 16
      :                          @138
  3468: 97 00 03                 ra = ra << 0x3
  3471: 7b 18 88 00              u64 [sp + 0x88] = a1
  3475: 95 18 40 03              a1 = sp + 0x340
  3479: c8 80 00                 ra = ra + a1
  3482: 82 05                    s0 = u64 [ra]
  3484: 97 47 03                 a0 = t2 << 0x3
  3487: c8 87 07                 a0 = a0 + a1
  3490: 82 70                    ra = u64 [a0]
  3492: 82 16 50 01              s1 = u64 [sp + 0x150]
  3496: 82 17 a0 00              a0 = u64 [sp + 0xa0]
  3500: c8 76 06                 s1 = s1 + a0
  3503: c8 65 05                 s0 = s0 + s1
  3506: 82 16 30 01              s1 = u64 [sp + 0x130]
  3510: d3 56 06                 s1 = s1 ^ s0
  3513: 7b 16 78                 u64 [sp + 0x78] = s1
  3516: c8 05 07                 a0 = s0 + ra
  3519: 7b 17 80 00              u64 [sp + 0x80] = a0
  3523: 7b 19 50 01              u64 [sp + 0x150] = a2
  3527: 7b 1a 30 01              u64 [sp + 0x130] = a3
  3531: 7b 1b b0 00              u64 [sp + 0xb0] = a4
  3535: 7b 1c a8 00              u64 [sp + 0xa8] = a5
  3539: 7b 13 90 00              u64 [sp + 0x90] = t1
  3543: 82 13 f8 00              t1 = u64 [sp + 0xf8]
  3547: 97 33 03                 t1 = t1 << 0x3
  3550: c8 83 03                 t1 = t1 + a1
  3553: 82 37                    a0 = u64 [t1]
  3555: 82 14 d8 00              t2 = u64 [sp + 0xd8]
  3559: 97 44 03                 t2 = t2 << 0x3
  3562: c8 84 04                 t2 = t2 + a1
  3565: 82 45                    s0 = u64 [t2]
  3567: 82 10 98 00              ra = u64 [sp + 0x98]
  3571: 82 16 20 01              s1 = u64 [sp + 0x120]
  3575: c8 06 06                 s1 = s1 + ra
  3578: c8 67 07                 a0 = a0 + s1
  3581: 82 16 38 01              s1 = u64 [sp + 0x138]
  3585: d3 67 03                 t1 = a0 ^ s1
  3588: c8 57 04                 t2 = a0 + s0
  3591: 82 1c f0 00              a5 = u64 [sp + 0xf0]
  3595: 97 cc 03                 a5 = a5 << 0x3
  3598: c8 8c 0c                 a5 = a5 + a1
  3601: 82 c7                    a0 = u64 [a5]
  3603: 82 12 e0 00              t0 = u64 [sp + 0xe0]
  3607: 97 22 03                 t0 = t0 << 0x3
  3610: c8 82 02                 t0 = t0 + a1
  3613: 82 2c                    a5 = u64 [t0]
  3615: 82 16 28 01              s1 = u64 [sp + 0x128]
  3619: 82 18 68 01              a1 = u64 [sp + 0x168]
  3623: c8 86 06                 s1 = s1 + a1
  3626: c8 67 07                 a0 = a0 + s1
  3629: 82 18 10 01              a1 = u64 [sp + 0x110]
  3633: d3 78 08                 a1 = a1 ^ a0
  3636: 7b 18 38 01              u64 [sp + 0x138] = a1
  3640: c8 c7 07                 a0 = a0 + a5
  3643: 7b 17 20 01              u64 [sp + 0x120] = a0
  3647: 82 1a d0 00              a3 = u64 [sp + 0xd0]
  3651: 97 aa 03                 a3 = a3 << 0x3
  3654: 95 18 40 03              a1 = sp + 0x340
  3658: c8 8a 0a                 a3 = a3 + a1
  3661: 82 a7                    a0 = u64 [a3]
  3663: 82 1b c8 00              a4 = u64 [sp + 0xc8]
  3667: 97 bb 03                 a4 = a4 << 0x3
  3670: c8 8b 0b                 a4 = a4 + a1
  3673: 82 ba                    a3 = u64 [a4]
  3675: 82 16 48 01              s1 = u64 [sp + 0x148]
  3679: 82 1b 00 01              a4 = u64 [sp + 0x100]
  3683: c8 6b 0b                 a4 = a4 + s1
  3686: c8 b7 07                 a0 = a0 + a4
  3689: 82 1b 40 01              a4 = u64 [sp + 0x140]
  3693: d3 7b 0b                 a4 = a4 ^ a0
  3696: c8 a7 02                 t0 = a0 + a3
  3699: 82 17 78                 a0 = u64 [sp + 0x78]
  3702: 9e 77 20                 a0 = a0 >>r 0x20
  3705: 82 1a 18 01              a3 = u64 [sp + 0x118]
  3709: c8 7a 0a                 a3 = a3 + a0
  3712: 82 15 a0 00              s0 = u64 [sp + 0xa0]
  3716: d3 a5 05                 s0 = s0 ^ a3
  3719: 82 19 88 00              a2 = u64 [sp + 0x88]
  3723: 97 99 03                 a2 = a2 << 0x3
  3726: c8 89 09                 a2 = a2 + a1
  3729: 82 99                    a2 = u64 [a2]
  3731: 9e 58 18                 a1 = s0 >>r 0x18
  3734: 7b 18 40 01              u64 [sp + 0x140] = a1
  3738: 82 15 80 00              s0 = u64 [sp + 0x80]
  3742: c8 85 05                 s0 = s0 + a1
  3745: d3 57 07                 a0 = a0 ^ s0
  3748: c8 59 09                 a2 = a2 + s0
  3751: 9e 35 20                 s0 = t1 >>r 0x20
  3754: 82 18 08 01              a1 = u64 [sp + 0x108]
  3758: c8 85 03                 t1 = s0 + a1
  3761: d3 03 0c                 a5 = t1 ^ ra
  3764: 9e cc 18                 a5 = a5 >>r 0x18
  3767: c8 c4 04                 t2 = t2 + a5
  3770: d3 54 05                 s0 = t2 ^ s0
  3773: 9e 58 10                 a1 = s0 >>r 0x10
  3776: 7b 18 18 01              u64 [sp + 0x118] = a1
  3780: c8 38 08                 a1 = a1 + t1
  3783: 7b 18 28 01              u64 [sp + 0x128] = a1
  3787: d3 c8 08                 a1 = a1 ^ a5
  3790: 9e 88 3f                 a1 = a1 >>r 0x3f
  3793: 7b 18 10 01              u64 [sp + 0x110] = a1
  3797: 9e bb 20                 a4 = a4 >>r 0x20
  3800: 82 10 58 01              ra = u64 [sp + 0x158]
  3804: c8 b0 00                 ra = ra + a4
  3807: d3 60 0c                 a5 = ra ^ s1
  3810: 9e c5 18                 s0 = a5 >>r 0x18
  3813: c8 52 03                 t1 = t0 + s0
  3816: d3 b3 0b                 a4 = t1 ^ a4
  3819: 9e bb 10                 a4 = a4 >>r 0x10
  3822: c8 b0 00                 ra = ra + a4
  3825: 7b 10 00 01              u64 [sp + 0x100] = ra
  3829: 82 1c c0 00              a5 = u64 [sp + 0xc0]
  3833: 97 cc 03                 a5 = a5 << 0x3
  3836: 95 16 40 03              s1 = sp + 0x340
  3840: c8 6c 0c                 a5 = a5 + s1
  3843: 82 cc                    a5 = u64 [a5]
  3845: 82 12 b8 00              t0 = u64 [sp + 0xb8]
  3849: 97 22 03                 t0 = t0 << 0x3
  3852: c8 62 02                 t0 = t0 + s1
  3855: 82 22                    t0 = u64 [t0]
  3857: c8 89 09                 a2 = a2 + a1
  3860: d3 9b 0b                 a4 = a4 ^ a2
  3863: 7b 1b 48 01              u64 [sp + 0x148] = a4
  3867: c8 c9 09                 a2 = a2 + a5
  3870: 7b 19 58 01              u64 [sp + 0x158] = a2
  3874: c8 24 04                 t2 = t2 + t0
  3877: 9e 76 10                 s1 = a0 >>r 0x10
  3880: c8 6a 0a                 a3 = a3 + s1
  3883: 7b 1a 08 01              u64 [sp + 0x108] = a3
  3887: 82 17 38 01              a0 = u64 [sp + 0x138]
  3891: 9e 79 20                 a2 = a0 >>r 0x20
  3894: 82 12 60 01              t0 = u64 [sp + 0x160]
  3898: c8 92 02                 t0 = t0 + a2
  3901: 82 17 68 01              a0 = u64 [sp + 0x168]
  3905: d3 72 0c                 a5 = t0 ^ a0
  3908: 9e cb 18                 a4 = a5 >>r 0x18
  3911: 82 17 20 01              a0 = u64 [sp + 0x120]
  3915: c8 b7 07                 a0 = a0 + a4
  3918: d3 79 09                 a2 = a2 ^ a0
  3921: 9e 9c 10                 a5 = a2 >>r 0x10
  3924: c8 2c 00                 ra = a5 + t0
  3927: d3 b0 0b                 a4 = ra ^ a4
  3930: 9e b8 3f                 a1 = a4 >>r 0x3f
  3933: 7b 18 38 01              u64 [sp + 0x138] = a1
  3937: 82 1a 90 00              a3 = u64 [sp + 0x90]
  3941: 97 aa 03                 a3 = a3 << 0x3
  3944: 95 19 40 03              a2 = sp + 0x340
  3948: c8 9a 0a                 a3 = a3 + a2
  3951: 82 aa                    a3 = u64 [a3]
  3953: 82 1b a8 00              a4 = u64 [sp + 0xa8]
  3957: 97 bb 03                 a4 = a4 << 0x3
  3960: c8 9b 0b                 a4 = a4 + a2
  3963: 82 bb                    a4 = u64 [a4]
  3965: c8 84 04                 t2 = t2 + a1
  3968: d3 64 06                 s1 = t2 ^ s1
  3971: c8 4a 0a                 a3 = a3 + t2
  3974: 7b 1a 68 01              u64 [sp + 0x168] = a3
  3978: c8 7b 0b                 a4 = a4 + a0
  3981: 82 18 00 01              a1 = u64 [sp + 0x100]
  3985: d3 58 07                 a0 = a1 ^ s0
  3988: 9e 72 3f                 t0 = a0 >>r 0x3f
  3991: 82 1a b0 00              a3 = u64 [sp + 0xb0]
  3995: 97 aa 03                 a3 = a3 << 0x3
  3998: c8 9a 0a                 a3 = a3 + a2
  4001: 82 aa                    a3 = u64 [a3]
  4003: 82 15 30 01              s0 = u64 [sp + 0x130]
  4007: 97 55 03                 s0 = s0 << 0x3
  4010: c8 95 05                 s0 = s0 + a2
  4013: 82 55                    s0 = u64 [s0]
  4015: c8 2b 0b                 a4 = a4 + t0
  4018: 82 17 18 01              a0 = u64 [sp + 0x118]
  4022: d3 b7 07                 a0 = a0 ^ a4
  4025: 7b 17 20 01              u64 [sp + 0x120] = a0
  4029: c8 ba 0a                 a3 = a3 + a4
  4032: 7b 1a 18 01              u64 [sp + 0x118] = a3
  4036: c8 53 03                 t1 = t1 + s0
  4039: 82 1a 40 01              a3 = u64 [sp + 0x140]
  4043: 82 17 08 01              a0 = u64 [sp + 0x108]
  4047: d3 a7 0b                 a4 = a0 ^ a3
  4050: 82 15 50 01              s0 = u64 [sp + 0x150]
  4054: 97 55 03                 s0 = s0 << 0x3
  4057: c8 95 05                 s0 = s0 + a2
  4060: 82 55                    s0 = u64 [s0]
  4062: 9e bb 3f                 a4 = a4 >>r 0x3f
  4065: c8 b3 03                 t1 = t1 + a4
  4068: d3 c3 04                 t2 = t1 ^ a5
  4071: c8 53 0a                 a3 = t1 + s0
  4074: 82 19 48 01              a2 = u64 [sp + 0x148]
  4078: 9e 95 20                 s0 = a2 >>r 0x20
  4081: c8 05 09                 a2 = s0 + ra
  4084: 82 1c 10 01              a5 = u64 [sp + 0x110]
  4088: d3 c9 00                 ra = a2 ^ a5
  4091: 9e 00 18                 ra = ra >>r 0x18
  4094: 82 1c 58 01              a5 = u64 [sp + 0x158]
  4098: c8 0c 0c                 a5 = a5 + ra
  4101: 7b 1c 50 01              u64 [sp + 0x150] = a5
  4105: d3 c5 05                 s0 = s0 ^ a5
  4108: 9e 55 10                 s0 = s0 >>r 0x10
  4111: 7b 15 40 01              u64 [sp + 0x140] = s0
  4115: c8 59 09                 a2 = a2 + s0
  4118: 7b 19 60 01              u64 [sp + 0x160] = a2
  4122: d3 09 09                 a2 = a2 ^ ra
  4125: 9e 99 3f                 a2 = a2 >>r 0x3f
  4128: 7b 19 98 00              u64 [sp + 0x98] = a2
  4132: 9e 69 20                 a2 = s1 >>r 0x20
  4135: c8 89 05                 s0 = a2 + a1
  4138: 82 16 38 01              s1 = u64 [sp + 0x138]
  4142: d3 56 06                 s1 = s1 ^ s0
  4145: 9e 66 18                 s1 = s1 >>r 0x18
  4148: 82 10 68 01              ra = u64 [sp + 0x168]
  4152: c8 60 00                 ra = ra + s1
  4155: d3 90 09                 a2 = ra ^ a2
  4158: 9e 98 10                 a1 = a2 >>r 0x10
  4161: 7b 18 30 01              u64 [sp + 0x130] = a1
  4165: c8 58 08                 a1 = a1 + s0
  4168: 7b 18 58 01              u64 [sp + 0x158] = a1
  4172: d3 68 09                 a2 = a1 ^ s1
  4175: 9e 99 3f                 a2 = a2 >>r 0x3f
  4178: 7b 19 68 01              u64 [sp + 0x168] = a2
  4182: 82 18 20 01              a1 = u64 [sp + 0x120]
  4186: 9e 89 20                 a2 = a1 >>r 0x20
  4189: c8 79 08                 a1 = a2 + a0
  4192: d3 28 07                 a0 = a1 ^ t0
  4195: 9e 77 18                 a0 = a0 >>r 0x18
  4198: 82 1c 18 01              a5 = u64 [sp + 0x118]
  4202: c8 7c 0c                 a5 = a5 + a0
  4205: d3 c9 09                 a2 = a2 ^ a5
  4208: 9e 99 10                 a2 = a2 >>r 0x10
  4211: 7b 19 38 01              u64 [sp + 0x138] = a2
  4215: c8 89 03                 t1 = a2 + a1
  4218: d3 73 07                 a0 = t1 ^ a0
  4221: 9e 77 3f                 a0 = a0 >>r 0x3f
  4224: 7b 17 48 01              u64 [sp + 0x148] = a0
  4228: 9e 47 20                 a0 = t2 >>r 0x20
  4231: 82 18 28 01              a1 = u64 [sp + 0x128]
  4235: c8 78 08                 a1 = a1 + a0
  4238: d3 8b 0b                 a4 = a4 ^ a1
  4241: 9e b9 18                 a2 = a4 >>r 0x18
  4244: c8 9a 05                 s0 = a3 + a2
  4247: d3 57 07                 a0 = a0 ^ s0
  4250: 9e 72 10                 t0 = a0 >>r 0x10
  4253: c8 82 04                 t2 = t0 + a1
  4256: 82 18 68                 a1 = u64 [sp + 0x68]
  4259: d3 94 07                 a0 = t2 ^ a2
  4262: 9e 77 3f                 a0 = a0 >>r 0x3f
  4265: 7b 17 a0 00              u64 [sp + 0xa0] = a0
  4269: 82 16 e8 00              s1 = u64 [sp + 0xe8]
  4273: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  4276: 82 1b 70 01              a4 = u64 [sp + 0x170]
  4280: 95 bb 10                 a4 = a4 + 0x10
  4283: 82 19 70                 a2 = u64 [sp + 0x70]
  4286: 33 0a 10                 a3 = 0x10
  4289: 52 06 e8 fb              jump @122 if s1 != 0
      :                          @139
  4293: 82 17 60                 a0 = u64 [sp + 0x60]
  4296: 64 8a                    a3 = a1
  4298: 82 18 50 01              a1 = u64 [sp + 0x150]
  4302: d3 87 07                 a0 = a0 ^ a1
  4305: d3 37 07                 a0 = a0 ^ t1
  4308: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
  4312: d3 a0 08                 a1 = ra ^ a3
  4315: d3 48 08                 a1 = a1 ^ t2
  4318: 7b 18 e8 01              u64 [sp + 0x1e8] = a1
  4322: 82 1a 60 01              a3 = u64 [sp + 0x160]
  4326: d3 a9 09                 a2 = a2 ^ a3
  4329: d3 c9 09                 a2 = a2 ^ a5
  4332: 7b 19 f0 01              u64 [sp + 0x1f0] = a2
  4336: 82 1a 58                 a3 = u64 [sp + 0x58]
  4339: 82 1b 58 01              a4 = u64 [sp + 0x158]
  4343: d3 ba 0a                 a3 = a3 ^ a4
  4346: d3 5a 0a                 a3 = a3 ^ s0
  4349: 7b 1a f8 01              u64 [sp + 0x1f8] = a3
  4353: 7b 1a b0 01              u64 [sp + 0x1b0] = a3
  4357: 7b 19 a8 01              u64 [sp + 0x1a8] = a2
  4361: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
  4365: 7b 17 98 01              u64 [sp + 0x198] = a0
  4369: 01                       fallthrough
      :                          @140
  4370: 95 17 98 01              a0 = sp + 0x198
  4374: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
  4378: 33 07 12                 a0 = 0x12
  4381: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
  4385: 49 21 e0 01 02           u64 [sp + 480] = 0x2
  4390: 49 21 f0 01 02           u64 [sp + 496] = 0x2
  4395: 49 21 00 02              u64 [sp + 512] = 0
  4399: 33 0b 01                 a4 = 0x1
  4402: 14 07 20 00 00 00 10 00 00 00 a0 = 0x1000000020
  4412: 7b 17 70 01              u64 [sp + 0x170] = a0
  4416: 7b 17 08 02              u64 [sp + 0x208] = a0
  4420: 7c 17 91 01              a0 = u8 [sp + 0x191]
  4424: 7c 18 92 01              a1 = u8 [sp + 0x192]
  4428: 7c 19 93 01              a2 = u8 [sp + 0x193]
  4432: 46 21 10 02 03           u8 [sp + 528] = 0x3
  4437: 78 17 11 02              u8 [sp + 0x211] = a0
  4441: 78 18 12 02              u8 [sp + 0x212] = a1
  4445: 78 19 13 02              u8 [sp + 0x213] = a2
  4449: 7c 17 94 01              a0 = u8 [sp + 0x194]
  4453: 7c 18 95 01              a1 = u8 [sp + 0x195]
  4457: 7c 19 96 01              a2 = u8 [sp + 0x196]
  4461: 7c 1a 97 01              a3 = u8 [sp + 0x197]
  4465: 78 17 14 02              u8 [sp + 0x214] = a0
  4469: 78 18 15 02              u8 [sp + 0x215] = a1
  4473: 78 19 16 02              u8 [sp + 0x216] = a2
  4477: 78 1a 17 02              u8 [sp + 0x217] = a3
  4481: 33 07 58 00 01           a0 = 0x10058
  4486: 7b 17 40 03              u64 [sp + 0x340] = a0
  4490: 7b 1b 48 03              u64 [sp + 0x348] = a4
  4494: 95 17 e0 01              a0 = sp + 0x1e0
  4498: 7b 17 60 03              u64 [sp + 0x360] = a0
  4502: 7b 1b 68 03              u64 [sp + 0x368] = a4
  4506: 95 17 c8 01              a0 = sp + 0x1c8
  4510: 7b 17 50 03              u64 [sp + 0x350] = a0
  4514: 7b 1b 58 03              u64 [sp + 0x358] = a4
  4518: 95 17 c0 02              a0 = sp + 0x2c0
  4522: 95 18 40 03              a1 = sp + 0x340
  4526: 50 10 68 30 07           ra = 104, jump @317
      :                          @141 [@dyn 52]
  4531: 82 15 c8 02              s0 = u64 [sp + 0x2c8]
  4535: 82 1b d0 02              a4 = u64 [sp + 0x2d0]
  4539: 82 16 c0 02              s1 = u64 [sp + 0x2c0]
  4543: 33 07 02                 a0 = 0x2
  4546: 33 08                    a1 = 0
  4548: 33 09                    a2 = 0
  4550: 64 5a                    a3 = s0
  4552: 33 00 6a                 ra = 0x6a
  4555: 0a 64                    ecalli 100 // 'log'
  4557: 01                       fallthrough
      :                          @142 [@dyn 53]
  4558: 82 17                    a0 = u64 [sp]
  4560: c8 67 07                 a0 = a0 + s1
  4563: 53 37 00 00 ff 25        jump @148 if a0 <u 4294901760
      :                          @143
  4569: 33 07 70 0a 03           a0 = 0x30a70
  4574: 95 77 00 00 01           a0 = a0 + 0x10000
  4579: 01                       fallthrough
      :                          @144
  4580: 82 78                    a1 = u64 [a0]
  4582: c9 87 09                 a2 = a0 - a1
  4585: ab 59 0f                 jump @148 if a2 != s0
      :                          @145
  4588: c9 68 09                 a2 = a1 - s1
  4591: 01                       fallthrough
      :                          @146
  4592: 82 7a                    a3 = u64 [a0]
  4594: ab 8a f2                 jump @144 if a3 != a1
      :                          @147
  4597: 7b 79                    u64 [a0] = a2
  4599: 01                       fallthrough
      :                          @148
  4600: 95 17 98 01              a0 = sp + 0x198
  4604: 7b 17 b8 01              u64 [sp + 0x1b8] = a0
  4608: 95 17 b8 01              a0 = sp + 0x1b8
  4612: 7b 17 c0 02              u64 [sp + 0x2c0] = a0
  4616: 33 07 0e                 a0 = 0xe
  4619: 7b 17 c8 02              u64 [sp + 0x2c8] = a0
  4623: 95 17 c0 01              a0 = sp + 0x1c0
  4627: 7b 17 d0 02              u64 [sp + 0x2d0] = a0
  4631: 33 07 9c 00              a0 = 0x9c
  4635: 7b 17 d8 02              u64 [sp + 0x2d8] = a0
  4639: 33 0b 02                 a4 = 0x2
  4642: 7b 1b e0 01              u64 [sp + 0x1e0] = a4
  4646: 7b 1b f0 01              u64 [sp + 0x1f0] = a4
  4650: 7c 17 91 01              a0 = u8 [sp + 0x191]
  4654: 49 21 00 02              u64 [sp + 512] = 0
  4658: 82 18 70 01              a1 = u64 [sp + 0x170]
  4662: 7b 18 08 02              u64 [sp + 0x208] = a1
  4666: 33 0c 03                 a5 = 0x3
  4669: 78 1c 10 02              u8 [sp + 0x210] = a5
  4673: 78 17 11 02              u8 [sp + 0x211] = a0
  4677: 7c 17 92 01              a0 = u8 [sp + 0x192]
  4681: 7c 18 93 01              a1 = u8 [sp + 0x193]
  4685: 7c 19 94 01              a2 = u8 [sp + 0x194]
  4689: 7c 1a 95 01              a3 = u8 [sp + 0x195]
  4693: 78 17 12 02              u8 [sp + 0x212] = a0
  4697: 78 18 13 02              u8 [sp + 0x213] = a1
  4701: 78 19 14 02              u8 [sp + 0x214] = a2
  4705: 78 1a 15 02              u8 [sp + 0x215] = a3
  4709: 7c 17 96 01              a0 = u8 [sp + 0x196]
  4713: 7c 18 97 01              a1 = u8 [sp + 0x197]
  4717: 49 21 c0 01 20           u64 [sp + 448] = 0x20
  4722: 78 17 16 02              u8 [sp + 0x216] = a0
  4726: 78 18 17 02              u8 [sp + 0x217] = a1
  4730: 7b 1b 18 02              u64 [sp + 0x218] = a4
  4734: 7b 1b 28 02              u64 [sp + 0x228] = a4
  4738: 49 21 38 02 01           u64 [sp + 568] = 0x1
  4743: 49 21 40 02 20           u64 [sp + 576] = 0x20
  4748: 78 1c 48 02              u8 [sp + 0x248] = a5
  4752: 33 07 90 00 01           a0 = 0x10090
  4757: 7b 17 40 03              u64 [sp + 0x340] = a0
  4761: 7b 1b 48 03              u64 [sp + 0x348] = a4
  4765: 95 17 e0 01              a0 = sp + 0x1e0
  4769: 7b 17 60 03              u64 [sp + 0x360] = a0
  4773: 7b 1b 68 03              u64 [sp + 0x368] = a4
  4777: 95 17 c0 02              a0 = sp + 0x2c0
  4781: 7b 17 50 03              u64 [sp + 0x350] = a0
  4785: 7b 1b 58 03              u64 [sp + 0x358] = a4
  4789: 95 17 c8 01              a0 = sp + 0x1c8
  4793: 95 18 40 03              a1 = sp + 0x340
  4797: 50 10 6c 21 06           ra = 108, jump @317
      :                          @149 [@dyn 54]
  4802: 82 15 d0 01              s0 = u64 [sp + 0x1d0]
  4806: 82 1b d8 01              a4 = u64 [sp + 0x1d8]
  4810: 82 16 c8 01              s1 = u64 [sp + 0x1c8]
  4814: 33 07 02                 a0 = 0x2
  4817: 33 08                    a1 = 0
  4819: 33 09                    a2 = 0
  4821: 64 5a                    a3 = s0
  4823: 33 00 6e                 ra = 0x6e
  4826: 0a 64                    ecalli 100 // 'log'
  4828: 01                       fallthrough
      :                          @150 [@dyn 55]
  4829: 82 17                    a0 = u64 [sp]
  4831: c8 67 07                 a0 = a0 + s1
  4834: 53 37 00 00 ff 27        jump @156 if a0 <u 4294901760
      :                          @151
  4840: 33 07 70 0a 03           a0 = 0x30a70
  4845: 95 77 00 00 01           a0 = a0 + 0x10000
  4850: 01                       fallthrough
      :                          @152
  4851: 82 78                    a1 = u64 [a0]
  4853: c9 87 09                 a2 = a0 - a1
  4856: ab 59 11                 jump @156 if a2 != s0
      :                          @153
  4859: c9 68 09                 a2 = a1 - s1
  4862: 01                       fallthrough
      :                          @154
  4863: 82 7a                    a3 = u64 [a0]
  4865: ab 8a f2                 jump @152 if a3 != a1
      :                          @155
  4868: 7b 79                    u64 [a0] = a2
  4870: 33 0b                    a4 = 0
  4872: 01                       fallthrough
      :                          @156
  4873: 82 17 b8 01              a0 = u64 [sp + 0x1b8]
  4877: 82 18 c0 01              a1 = u64 [sp + 0x1c0]
  4881: 82 10 d0 03              ra = u64 [sp + 0x3d0]
  4885: 82 15 c8 03              s0 = u64 [sp + 0x3c8]
  4889: 82 16 c0 03              s1 = u64 [sp + 0x3c0]
  4893: 95 11 d8 03              sp = sp + 0x3d8
  4897: 32 00                    ret
      :                          @157
  4899: 00                       trap
      :                          @158
  4900: 82 15 20 02              s0 = u64 [sp + 0x220]
  4904: c8 35 05                 s0 = s0 + t1
  4907: 64 36                    s1 = t1
  4909: ae 35 0f                 jump @160 if s0 >=u t1
      :                          @159
  4912: 82 17 28 02              a0 = u64 [sp + 0x228]
  4916: 95 77 01                 a0 = a0 + 0x1
  4919: 7b 17 28 02              u64 [sp + 0x228] = a0
  4923: 01                       fallthrough
      :                          @160
  4924: 95 17 c0 02              a0 = sp + 0x2c0
  4928: 33 09 80 00              a2 = 0x80
  4932: 33 08                    a1 = 0
  4934: 50 10 70 c4 08           ra = 112, jump @385
      :                          @161 [@dyn 56]
  4939: 64 69                    a2 = s1
  4941: 56 26 80 00 68           jump @176 if s1 >u 128
      :                          @162
  4946: 82 17 28 02              a0 = u64 [sp + 0x228]
  4950: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
  4954: 7b 18 60                 u64 [sp + 0x60] = a1
  4957: 82 18 e8 01              a1 = u64 [sp + 0x1e8]
  4961: 7b 18 68                 u64 [sp + 0x68] = a1
  4964: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
  4968: 7b 18 70                 u64 [sp + 0x70] = a1
  4971: 82 1c f8 01              a5 = u64 [sp + 0x1f8]
  4975: 82 18 00 02              a1 = u64 [sp + 0x200]
  4979: 82 1b 08 02              a4 = u64 [sp + 0x208]
  4983: 82 1a 10 02              a3 = u64 [sp + 0x210]
  4987: 7b 1a 68 01              u64 [sp + 0x168] = a3
  4991: 82 1a 18 02              a3 = u64 [sp + 0x218]
  4995: 7b 1a 48 01              u64 [sp + 0x148] = a3
  4999: 82 1a a0 00              a3 = u64 [sp + 0xa0]
  5003: d3 5a 0a                 a3 = a3 ^ s0
  5006: 7b 1a 30 01              u64 [sp + 0x130] = a3
  5010: 82 1a 98 00              a3 = u64 [sp + 0x98]
  5014: d3 a7 07                 a0 = a0 ^ a3
  5017: 7b 17 38 01              u64 [sp + 0x138] = a0
  5021: 7b 1b 98 00              u64 [sp + 0x98] = a4
  5025: 7b 18 a0 00              u64 [sp + 0xa0] = a1
  5029: 28 94 f8                 jump @119
      :                          @163
  5032: 00                       trap
      :                          @164
  5033: 00                       trap
      :                          @165
  5034: 00                       trap
      :                          @166
  5035: 00                       trap
      :                          @167
  5036: 00                       trap
      :                          @168
  5037: 00                       trap
      :                          @169
  5038: 00                       trap
      :                          @170
  5039: 00                       trap
      :                          @171
  5040: 00                       trap
      :                          @172
  5041: 00                       trap
      :                          @173
  5042: 00                       trap
      :                          @174
  5043: 00                       trap
      :                          @175
  5044: 00                       trap
      :                          @176
  5045: 00                       trap
      :                          @177 [export #1: 'accumulate']
  5046: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  5049: 7b 10 18                 u64 [sp + 0x18] = ra
  5052: 7b 15 10                 u64 [sp + 0x10] = s0
  5055: 7b 16 08                 u64 [sp + 0x8] = s1
  5058: 33 09 00 00 01           a2 = 0x10000
  5063: 51 08 7a 01              jump @223 if a1 == 0
      :                          @178
  5067: 64 86                    s1 = a1
  5069: 7d 78                    a1 = i8 [a0]
  5071: 33 05 01                 s0 = 0x1
  5074: 59 08 37                 jump @185 if a1 >=s 0
      :                          @179
  5077: 84 8a ff 00              a3 = a1 & 0xff
  5081: 33 05 02                 s0 = 0x2
  5084: 53 2a c0 00 2d           jump @185 if a3 <u 192
      :                          @180
  5089: 33 05 03                 s0 = 0x3
  5092: 53 2a e0 00 25           jump @185 if a3 <u 224
      :                          @181
  5097: 33 05 04                 s0 = 0x4
  5100: 53 2a f0 00 1d           jump @185 if a3 <u 240
      :                          @182
  5105: 33 05 05                 s0 = 0x5
  5108: 53 2a f8 00 15           jump @185 if a3 <u 248
      :                          @183
  5113: 33 05 06                 s0 = 0x6
  5116: 53 2a fc 00 0d           jump @185 if a3 <u 252
      :                          @184
  5121: 88 a8 fe 00              a1 = a3 <u 0xfe
  5125: 9a 85 08                 s0 = 0x8 - a1
  5128: 01                       fallthrough
      :                          @185
  5129: ae 56 08                 jump @187 if s1 >=u s0
      :                          @186
  5132: 33 08                    a1 = 0
  5134: 28 33 01                 jump @223
      :                          @187
  5137: 64 58                    a1 = s0
  5139: 7b 17                    u64 [sp] = a0
  5141: 50 10 72 98 11           ra = 114, jump @570
      :                          @188 [@dyn 57]
  5146: aa 56 1f 01              jump @222 if s1 == s0
      :                          @189
  5150: 82 17                    a0 = u64 [sp]
  5152: c8 57 07                 a0 = a0 + s0
  5155: 7d 78                    a1 = i8 [a0]
  5157: c9 56 06                 s1 = s1 - s0
  5160: 33 05 01                 s0 = 0x1
  5163: 59 08 37                 jump @196 if a1 >=s 0
      :                          @190
  5166: 84 89 ff 00              a2 = a1 & 0xff
  5170: 33 05 02                 s0 = 0x2
  5173: 53 29 c0 00 2d           jump @196 if a2 <u 192
      :                          @191
  5178: 33 05 03                 s0 = 0x3
  5181: 53 29 e0 00 25           jump @196 if a2 <u 224
      :                          @192
  5186: 33 05 04                 s0 = 0x4
  5189: 53 29 f0 00 1d           jump @196 if a2 <u 240
      :                          @193
  5194: 33 05 05                 s0 = 0x5
  5197: 53 29 f8 00 15           jump @196 if a2 <u 248
      :                          @194
  5202: 33 05 06                 s0 = 0x6
  5205: 53 29 fc 00 0d           jump @196 if a2 <u 252
      :                          @195
  5210: 88 98 fe 00              a1 = a2 <u 0xfe
  5214: 9a 85 08                 s0 = 0x8 - a1
  5217: 01                       fallthrough
      :                          @196
  5218: ac 56 d7 00              jump @222 if s1 <u s0
      :                          @197
  5222: 64 58                    a1 = s0
  5224: 7b 17                    u64 [sp] = a0
  5226: 50 10 74 43 11           ra = 116, jump @570
      :                          @198 [@dyn 58]
  5231: 82 17                    a0 = u64 [sp]
  5233: c8 57 07                 a0 = a0 + s0
  5236: c9 56 0a                 a3 = s1 - s0
  5239: ab 56 07                 jump @200 if s1 != s0
      :                          @199
  5242: 33 05                    s0 = 0
  5244: 28 41                    jump @208
      :                          @200
  5246: 7d 78                    a1 = i8 [a0]
  5248: 33 05 01                 s0 = 0x1
  5251: 59 08 37                 jump @207 if a1 >=s 0
      :                          @201
  5254: 84 89 ff 00              a2 = a1 & 0xff
  5258: 33 05 02                 s0 = 0x2
  5261: 53 29 c0 00 2d           jump @207 if a2 <u 192
      :                          @202
  5266: 33 05 03                 s0 = 0x3
  5269: 53 29 e0 00 25           jump @207 if a2 <u 224
      :                          @203
  5274: 33 05 04                 s0 = 0x4
  5277: 53 29 f0 00 1d           jump @207 if a2 <u 240
      :                          @204
  5282: 33 05 05                 s0 = 0x5
  5285: 53 29 f8 00 15           jump @207 if a2 <u 248
      :                          @205
  5290: 33 05 06                 s0 = 0x6
  5293: 53 29 fc 00 0d           jump @207 if a2 <u 252
      :                          @206
  5298: 88 98 fe 00              a1 = a2 <u 0xfe
  5302: 9a 85 08                 s0 = 0x8 - a1
  5305: 01                       fallthrough
      :                          @207
  5306: ac 5a 7f                 jump @222 if a3 <u s0
      :                          @208
  5309: 64 a6                    s1 = a3
  5311: 7b 17                    u64 [sp] = a0
  5313: 64 58                    a1 = s0
  5315: 50 10 76 ea 10           ra = 118, jump @570
      :                          @209 [@dyn 59]
  5320: 51 07 71                 jump @222 if a0 == 0
      :                          @210
  5323: e4 56 07                 a0 = maxu(s1, s0)
  5326: c9 57 07                 a0 = a0 - s0
  5329: 33 09 00 00 01           a2 = 0x10000
  5334: 53 17 60 36 ff           jump @186 if a0 <u 96
      :                          @211
  5339: 82 18                    a1 = u64 [sp]
  5341: c8 85 05                 s0 = s0 + a1
  5344: 95 76 a0                 s1 = a0 + 0xffffffffffffffa0
  5347: 95 57 60                 a0 = s0 + 0x60
  5350: 7b 17                    u64 [sp] = a0
  5352: 51 06 69                 jump @224 if s1 == 0
      :                          @212
  5355: 7d 78                    a1 = i8 [a0]
  5357: 33 05 01                 s0 = 0x1
  5360: 59 08 37                 jump @219 if a1 >=s 0
      :                          @213
  5363: 84 89 ff 00              a2 = a1 & 0xff
  5367: 33 05 02                 s0 = 0x2
  5370: 53 29 c0 00 2d           jump @219 if a2 <u 192
      :                          @214
  5375: 33 05 03                 s0 = 0x3
  5378: 53 29 e0 00 25           jump @219 if a2 <u 224
      :                          @215
  5383: 33 05 04                 s0 = 0x4
  5386: 53 29 f0 00 1d           jump @219 if a2 <u 240
      :                          @216
  5391: 33 05 05                 s0 = 0x5
  5394: 53 29 f8 00 15           jump @219 if a2 <u 248
      :                          @217
  5399: 33 05 06                 s0 = 0x6
  5402: 53 29 fc 00 0d           jump @219 if a2 <u 252
      :                          @218
  5407: 88 98 fe 00              a1 = a2 <u 0xfe
  5411: 9a 85 08                 s0 = 0x8 - a1
  5414: 01                       fallthrough
      :                          @219
  5415: ac 56 6b 01              jump @257 if s1 <u s0
      :                          @220
  5419: 64 58                    a1 = s0
  5421: 50 10 78 80 10           ra = 120, jump @570
      :                          @221 [@dyn 60]
  5426: 33 09 00 00 01           a2 = 0x10000
  5431: 28 1f                    jump @225
      :                          @222
  5433: 33 08                    a1 = 0
  5435: 33 09 00 00 01           a2 = 0x10000
  5440: 01                       fallthrough
      :                          @223
  5441: 64 97                    a0 = a2
  5443: 82 10 18                 ra = u64 [sp + 0x18]
  5446: 82 15 10                 s0 = u64 [sp + 0x10]
  5449: 82 16 08                 s1 = u64 [sp + 0x8]
  5452: 95 11 20                 sp = sp + 0x20
  5455: 32 00                    ret
      :                          @224
  5457: 33 05                    s0 = 0
  5459: 33 07                    a0 = 0
  5461: 01                       fallthrough
      :                          @225
  5462: e4 56 08                 a1 = maxu(s1, s0)
  5465: c9 58 08                 a1 = a1 - s0
  5468: e4 78 06                 s1 = maxu(a1, a0)
  5471: c9 76 06                 s1 = s1 - a0
  5474: 53 16 20 aa fe           jump @186 if s1 <u 32
      :                          @226
  5479: 82 18                    a1 = u64 [sp]
  5481: c8 85 05                 s0 = s0 + a1
  5484: c8 57 07                 a0 = a0 + s0
  5487: 95 66 e0                 s1 = s1 + 0xffffffffffffffe0
  5490: 95 77 20                 a0 = a0 + 0x20
  5493: 7b 17                    u64 [sp] = a0
  5495: 51 06 51                 jump @237 if s1 == 0
      :                          @227
  5498: 7d 78                    a1 = i8 [a0]
  5500: 33 05 01                 s0 = 0x1
  5503: 59 08 37                 jump @234 if a1 >=s 0
      :                          @228
  5506: 84 89 ff 00              a2 = a1 & 0xff
  5510: 33 05 02                 s0 = 0x2
  5513: 53 29 c0 00 2d           jump @234 if a2 <u 192
      :                          @229
  5518: 33 05 03                 s0 = 0x3
  5521: 53 29 e0 00 25           jump @234 if a2 <u 224
      :                          @230
  5526: 33 05 04                 s0 = 0x4
  5529: 53 29 f0 00 1d           jump @234 if a2 <u 240
      :                          @231
  5534: 33 05 05                 s0 = 0x5
  5537: 53 29 f8 00 15           jump @234 if a2 <u 248
      :                          @232
  5542: 33 05 06                 s0 = 0x6
  5545: 53 29 fc 00 0d           jump @234 if a2 <u 252
      :                          @233
  5550: 88 98 fe 00              a1 = a2 <u 0xfe
  5554: 9a 85 08                 s0 = 0x8 - a1
  5557: 01                       fallthrough
      :                          @234
  5558: ac 56 dc 00              jump @257 if s1 <u s0
      :                          @235
  5562: 64 58                    a1 = s0
  5564: 50 10 7a f1 0f           ra = 122, jump @570
      :                          @236 [@dyn 61]
  5569: 33 09 00 00 01           a2 = 0x10000
  5574: 28 05                    jump @238
      :                          @237
  5576: 33 05                    s0 = 0
  5578: 01                       fallthrough
      :                          @238
  5579: ae 65 41 fe              jump @186 if s0 >=u s1
      :                          @239
  5583: 82 17                    a0 = u64 [sp]
  5585: c8 57 07                 a0 = a0 + s0
  5588: 7c 78                    a1 = u8 [a0]
  5590: 52 08 bd 00              jump @258 if a1 != 0
      :                          @240
  5594: e4 56 08                 a1 = maxu(s1, s0)
  5597: c9 58 08                 a1 = a1 - s0
  5600: 95 75 01                 s0 = a0 + 0x1
  5603: 33 07 01                 a0 = 0x1
  5606: e4 78 07                 a0 = maxu(a1, a0)
  5609: 33 09 02                 a2 = 0x2
  5612: 95 7a ff                 a3 = a0 + 0xffffffffffffffff
  5615: ae 98 09                 jump @242 if a1 >=u a2
      :                          @241
  5618: 33 06                    s1 = 0
  5620: 33 07                    a0 = 0
  5622: 28 4f                    jump @252
      :                          @242
  5624: 7d 57                    a0 = i8 [s0]
  5626: 33 06 01                 s1 = 0x1
  5629: 59 07 37                 jump @249 if a0 >=s 0
      :                          @243
  5632: 84 77 ff 00              a0 = a0 & 0xff
  5636: 33 06 02                 s1 = 0x2
  5639: 53 27 c0 00 2d           jump @249 if a0 <u 192
      :                          @244
  5644: 33 06 03                 s1 = 0x3
  5647: 53 27 e0 00 25           jump @249 if a0 <u 224
      :                          @245
  5652: 33 06 04                 s1 = 0x4
  5655: 53 27 f0 00 1d           jump @249 if a0 <u 240
      :                          @246
  5660: 33 06 05                 s1 = 0x5
  5663: 53 27 f8 00 15           jump @249 if a0 <u 248
      :                          @247
  5668: 33 06 06                 s1 = 0x6
  5671: 53 27 fc 00 0d           jump @249 if a0 <u 252
      :                          @248
  5676: 88 77 fe 00              a0 = a0 <u 0xfe
  5680: 9a 76 08                 s1 = 0x8 - a0
  5683: 01                       fallthrough
      :                          @249
  5684: 7b 1a                    u64 [sp] = a3
  5686: ac 6a 5e                 jump @259 if a3 <u s1
      :                          @250
  5689: 64 57                    a0 = s0
  5691: 64 68                    a1 = s1
  5693: 50 10 7c 70 0f           ra = 124, jump @570
      :                          @251 [@dyn 62]
  5698: 82 1a                    a3 = u64 [sp]
  5700: 01                       fallthrough
      :                          @252
  5701: e4 6a 08                 a1 = maxu(a3, s1)
  5704: c9 68 08                 a1 = a1 - s1
  5707: e6 78 07                 a0 = minu(a1, a0)
  5710: 52 17 20 45              jump @258 if a0 != 32
      :                          @253
  5714: c8 65 05                 s0 = s0 + s1
  5717: 7b 15                    u64 [sp] = s0
  5719: 33 05 61 00 03           s0 = 0x30061
  5724: 33 06 50                 s1 = 0x50
  5727: 01                       fallthrough
      :                          @254
  5728: 33 09 20                 a2 = 0x20
  5731: 64 57                    a0 = s0
  5733: 82 18                    a1 = u64 [sp]
  5735: 50 10 7e f1 04           ra = 126, jump @367
      :                          @255 [@dyn 63]
  5740: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  5743: 95 55 20                 s0 = s0 + 0x20
  5746: 52 06 ee                 jump @254 if s1 != 0
      :                          @256
  5749: 33 05 61 00 03           s0 = 0x30061
  5754: 33 07                    a0 = 0
  5756: 33 08 61 00 03           a1 = 0x30061
  5761: 0a 06                    ecalli 6 // 'assign'
  5763: 33 07 01                 a0 = 0x1
  5766: 64 58                    a1 = s0
  5768: 0a 06                    ecalli 6 // 'assign'
  5770: 33 08 20                 a1 = 0x20
  5773: 82 19                    a2 = u64 [sp]
  5775: 28 b2 fe                 jump @223
      :                          @257
  5778: 00                       trap
      :                          @258
  5779: 00                       trap
      :                          @259
  5780: 00                       trap
      :                          @260 [export #2: 'on_transfer']
  5781: 33 07 00 00 01           a0 = 0x10000
  5786: 33 08                    a1 = 0
  5788: 32 00                    ret
      :                          @261
  5790: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  5793: 7b 10 40                 u64 [sp + 0x40] = ra
  5796: 7b 15 38                 u64 [sp + 0x38] = s0
  5799: 7b 16 30                 u64 [sp + 0x30] = s1
  5802: c8 89 09                 a2 = a2 + a1
  5805: ac 89 53                 jump @269 if a2 <u a1
      :                          @262
  5808: 64 75                    s0 = a0
  5810: 82 77                    a0 = u64 [a0]
  5812: 97 78 01                 a1 = a0 << 0x1
  5815: 33 0a 08                 a3 = 0x8
  5818: e4 a9 09                 a2 = maxu(a2, a3)
  5821: e4 98 06                 s1 = maxu(a1, a2)
  5824: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  5827: 98 88 3f                 a1 = a1 >> 0x3f
  5830: 51 07 12                 jump @264 if a0 == 0
      :                          @263
  5833: 82 59 08                 a2 = u64 [s0 + 0x8]
  5836: 7b 19 18                 u64 [sp + 0x18] = a2
  5839: 49 11 20 01              u64 [sp + 32] = 0x1
  5843: 7b 17 28                 u64 [sp + 0x28] = a0
  5846: 28 06                    jump @265
      :                          @264
  5848: 49 11 20                 u64 [sp + 32] = 0
  5851: 01                       fallthrough
      :                          @265
  5852: 64 17                    a0 = sp
  5854: 95 1a 18                 a3 = sp + 0x18
  5857: 64 69                    a2 = s1
  5859: 50 20 80 00 33           ra = 128, jump @273
      :                          @266 [@dyn 64]
  5864: 82 18                    a1 = u64 [sp]
  5866: 82 17 08                 a0 = u64 [sp + 0x8]
  5869: 51 08 14                 jump @270 if a1 == 0
      :                          @267
  5872: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  5882: aa 87 0d                 jump @271 if a0 == a1
      :                          @268
  5885: 52 07 18                 jump @272 if a0 != 0
      :                          @269
  5888: 00                       trap
      :                          @270
  5889: 7b 57 08                 u64 [s0 + 0x8] = a0
  5892: 7b 56                    u64 [s0] = s1
  5894: 01                       fallthrough
      :                          @271
  5895: 82 10 40                 ra = u64 [sp + 0x40]
  5898: 82 15 38                 s0 = u64 [sp + 0x38]
  5901: 82 16 30                 s1 = u64 [sp + 0x30]
  5904: 95 11 48                 sp = sp + 0x48
  5907: 32 00                    ret
      :                          @272
  5909: 00                       trap
      :                          @273
  5910: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  5913: 7b 10 30                 u64 [sp + 0x30] = ra
  5916: 7b 15 28                 u64 [sp + 0x28] = s0
  5919: 7b 16 20                 u64 [sp + 0x20] = s1
  5922: 64 95                    s0 = a2
  5924: 64 72                    t0 = a0
  5926: 51 08 7a                 jump @283 if a1 == 0
      :                          @274
  5929: 82 a7 08                 a0 = u64 [a3 + 0x8]
  5932: 51 07 7d                 jump @284 if a0 == 0
      :                          @275
  5935: 82 a9 10                 a2 = u64 [a3 + 0x10]
  5938: 51 09 ab 00              jump @291 if a2 == 0
      :                          @276
  5942: 82 a8                    a1 = u64 [a3]
  5944: 33 06 70 0a 03           s1 = 0x30a70
  5949: 33 03 00 00 01           t1 = 0x10000
  5954: c8 36 06                 s1 = s1 + t1
  5957: 01                       fallthrough
      :                          @277
  5958: 82 6a                    a3 = u64 [s1]
  5960: c8 5a 07                 a0 = a3 + s0
  5963: ac a7 d0 00              jump @297 if a0 <u a3
      :                          @278
  5967: 95 7b 01                 a4 = a0 + 0x1
  5970: 88 bc 01                 a5 = a4 <u 0x1
  5973: d8 b3 0b                 a4 = t1 <u a4
  5976: d4 cb 0b                 a4 = a4 | a5
  5979: 52 0b c0 00              jump @297 if a4 != 0
      :                          @279
  5983: 82 6b                    a4 = u64 [s1]
  5985: ab ab e5                 jump @277 if a4 != a3
      :                          @280
  5988: 7b 67                    u64 [s1] = a0
  5990: 33 0c                    a5 = 0
  5992: 7b 12 18                 u64 [sp + 0x18] = t0
  5995: 33 0a 70 0a 03           a3 = 0x30a70
  6000: 33 0b 00 00 01           a4 = 0x10000
  6005: 7b 1a                    u64 [sp] = a3
  6007: c8 ba 0a                 a3 = a3 + a4
  6010: c9 7a 07                 a0 = a3 - a0
  6013: 7b 17 10                 u64 [sp + 0x10] = a0
  6016: 7b 18 08                 u64 [sp + 0x8] = a1
  6019: 64 96                    s1 = a2
  6021: 50 20 82 00 d3 03        ra = 130, jump @367
      :                          @281 [@dyn 65]
  6027: 54 36 00 00 01 98 00     jump @298 if s1 <=u 65536
      :                          @282
  6034: 82 12 18                 t0 = u64 [sp + 0x18]
  6037: 82 18 10                 a1 = u64 [sp + 0x10]
  6040: 33 07                    a0 = 0
  6042: 7b 28 08                 u64 [t0 + 0x8] = a1
  6045: 28 b5 00                 jump @304
      :                          @283
  6048: 49 12 08                 u64 [t0 + 8] = 0
  6051: 33 07 01                 a0 = 0x1
  6054: 28 ac 00                 jump @304
      :                          @284
  6057: 33 09 70 0a 03           a2 = 0x30a70
  6062: 33 07 00 00 01           a0 = 0x10000
  6067: c8 79 09                 a2 = a2 + a0
  6070: 01                       fallthrough
      :                          @285
  6071: 82 9a                    a3 = u64 [a2]
  6073: c8 5a 08                 a1 = a3 + s0
  6076: ac a8 5f                 jump @297 if a1 <u a3
      :                          @286
  6079: 95 8b 01                 a4 = a1 + 0x1
  6082: 88 bc 01                 a5 = a4 <u 0x1
  6085: d8 b7 0b                 a4 = a0 <u a4
  6088: d4 cb 0b                 a4 = a4 | a5
  6091: 52 0b 50                 jump @297 if a4 != 0
      :                          @287
  6094: 82 9b                    a4 = u64 [a2]
  6096: ab ab e7                 jump @285 if a4 != a3
      :                          @288
  6099: 7b 98                    u64 [a2] = a1
  6101: 33 0c                    a5 = 0
  6103: 01                       fallthrough
      :                          @289
  6104: ab ab df                 jump @285 if a4 != a3
      :                          @290
  6107: 28 31                    jump @296
      :                          @291
  6109: 33 09 70 0a 03           a2 = 0x30a70
  6114: 33 07 00 00 01           a0 = 0x10000
  6119: c8 79 09                 a2 = a2 + a0
  6122: 01                       fallthrough
      :                          @292
  6123: 82 9a                    a3 = u64 [a2]
  6125: c8 5a 08                 a1 = a3 + s0
  6128: ac a8 2b                 jump @297 if a1 <u a3
      :                          @293
  6131: 95 8b 01                 a4 = a1 + 0x1
  6134: 88 bc 01                 a5 = a4 <u 0x1
  6137: d8 b7 0b                 a4 = a0 <u a4
  6140: d4 cb 0b                 a4 = a4 | a5
  6143: 52 0b 1c                 jump @297 if a4 != 0
      :                          @294
  6146: 82 9b                    a4 = u64 [a2]
  6148: ab ab e7                 jump @292 if a4 != a3
      :                          @295
  6151: 7b 98                    u64 [a2] = a1
  6153: 33 0c                    a5 = 0
  6155: 01                       fallthrough
      :                          @296
  6156: 33 07 70 0a 04           a0 = 0x40a70
  6161: c9 87 08                 a1 = a0 - a1
  6164: 33 07                    a0 = 0
  6166: 7b 28 08                 u64 [t0 + 0x8] = a1
  6169: 28 39                    jump @304
      :                          @297
  6171: 33 07 01                 a0 = 0x1
  6174: 7b 27 08                 u64 [t0 + 0x8] = a0
  6177: 28 31                    jump @304
      :                          @298
  6179: 64 6c                    a5 = s1
  6181: 82 17                    a0 = u64 [sp]
  6183: 95 77 00 00 01           a0 = a0 + 0x10000
  6188: 82 12 18                 t0 = u64 [sp + 0x18]
  6191: 82 16 08                 s1 = u64 [sp + 0x8]
  6194: 01                       fallthrough
      :                          @299
  6195: 82 78                    a1 = u64 [a0]
  6197: c9 87 09                 a2 = a0 - a1
  6200: ab 69 11                 jump @303 if a2 != s1
      :                          @300
  6203: c9 c8 09                 a2 = a1 - a5
  6206: 01                       fallthrough
      :                          @301
  6207: 82 7a                    a3 = u64 [a0]
  6209: ab 8a f2                 jump @299 if a3 != a1
      :                          @302
  6212: 7b 79                    u64 [a0] = a2
  6214: 33 0b                    a4 = 0
  6216: 01                       fallthrough
      :                          @303
  6217: 82 18 10                 a1 = u64 [sp + 0x10]
  6220: 33 07                    a0 = 0
  6222: 7b 28 08                 u64 [t0 + 0x8] = a1
  6225: 01                       fallthrough
      :                          @304
  6226: 7b 25 10                 u64 [t0 + 0x10] = s0
  6229: 7b 27                    u64 [t0] = a0
  6231: 82 10 30                 ra = u64 [sp + 0x30]
  6234: 82 15 28                 s0 = u64 [sp + 0x28]
  6237: 82 16 20                 s1 = u64 [sp + 0x20]
  6240: 95 11 38                 sp = sp + 0x38
  6243: 32 00                    ret
      :                          @305
  6245: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  6248: 7b 10 40                 u64 [sp + 0x40] = ra
  6251: 7b 15 38                 u64 [sp + 0x38] = s0
  6254: 7b 16 30                 u64 [sp + 0x30] = s1
  6257: 95 88 01                 a1 = a1 + 0x1
  6260: 51 08 54                 jump @313 if a1 == 0
      :                          @306
  6263: 64 75                    s0 = a0
  6265: 82 77                    a0 = u64 [a0]
  6267: 97 79 01                 a2 = a0 << 0x1
  6270: 33 0a 08                 a3 = 0x8
  6273: e4 a8 08                 a1 = maxu(a1, a3)
  6276: e4 89 06                 s1 = maxu(a2, a1)
  6279: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  6282: 98 88 3f                 a1 = a1 >> 0x3f
  6285: 51 07 12                 jump @308 if a0 == 0
      :                          @307
  6288: 82 59 08                 a2 = u64 [s0 + 0x8]
  6291: 7b 19 18                 u64 [sp + 0x18] = a2
  6294: 49 11 20 01              u64 [sp + 32] = 0x1
  6298: 7b 17 28                 u64 [sp + 0x28] = a0
  6301: 28 06                    jump @309
      :                          @308
  6303: 49 11 20                 u64 [sp + 32] = 0
  6306: 01                       fallthrough
      :                          @309
  6307: 64 17                    a0 = sp
  6309: 95 1a 18                 a3 = sp + 0x18
  6312: 64 69                    a2 = s1
  6314: 50 20 84 00 6c fe        ra = 132, jump @273
      :                          @310 [@dyn 66]
  6320: 82 18                    a1 = u64 [sp]
  6322: 82 17 08                 a0 = u64 [sp + 0x8]
  6325: 51 08 14                 jump @314 if a1 == 0
      :                          @311
  6328: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  6338: aa 87 0d                 jump @315 if a0 == a1
      :                          @312
  6341: 52 07 18                 jump @316 if a0 != 0
      :                          @313
  6344: 00                       trap
      :                          @314
  6345: 7b 57 08                 u64 [s0 + 0x8] = a0
  6348: 7b 56                    u64 [s0] = s1
  6350: 01                       fallthrough
      :                          @315
  6351: 82 10 40                 ra = u64 [sp + 0x40]
  6354: 82 15 38                 s0 = u64 [sp + 0x38]
  6357: 82 16 30                 s1 = u64 [sp + 0x30]
  6360: 95 11 48                 sp = sp + 0x48
  6363: 32 00                    ret
      :                          @316
  6365: 00                       trap
      :                          @317
  6366: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  6369: 7b 10 30                 u64 [sp + 0x30] = ra
  6372: 7b 15 28                 u64 [sp + 0x28] = s0
  6375: 7b 16 20                 u64 [sp + 0x20] = s1
  6378: 64 89                    a2 = a1
  6380: 82 8a 08                 a3 = u64 [a1 + 0x8]
  6383: 64 75                    s0 = a0
  6385: 51 0a 35                 jump @322 if a3 == 0
      :                          @318
  6388: 82 98                    a1 = u64 [a2]
  6390: 33 07                    a0 = 0
  6392: 95 8b 08                 a4 = a1 + 0x8
  6395: 01                       fallthrough
      :                          @319
  6396: 82 bc                    a5 = u64 [a4]
  6398: c8 c7 07                 a0 = a0 + a5
  6401: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  6404: 95 bb 10                 a4 = a4 + 0x10
  6407: 52 0a f5                 jump @319 if a3 != 0
      :                          @320
  6410: 82 9a 18                 a3 = u64 [a2 + 0x18]
  6413: 51 0a 24                 jump @324 if a3 == 0
      :                          @321
  6416: 82 88 08                 a1 = u64 [a1 + 0x8]
  6419: 8e 88                    a1 = a1 >u 0
  6421: 88 7a 10                 a3 = a0 <u 0x10
  6424: 85 aa 01                 a3 = a3 ^ 0x1
  6427: d4 a8 08                 a1 = a1 | a3
  6430: 89 7a                    a3 = a0 <s 0
  6432: e0 a8 08                 a1 = a1 & ~a3
  6435: 52 08 0a                 jump @323 if a1 != 0
      :                          @322
  6438: 33 07                    a0 = 0
  6440: 33 08 01                 a1 = 0x1
  6443: 28 4a                    jump @332
      :                          @323
  6445: 97 77 01                 a0 = a0 << 0x1
  6448: 01                       fallthrough
      :                          @324
  6449: 51 07 40                 jump @331 if a0 == 0
      :                          @325
  6452: 57 07 79                 jump @337 if a0 <s 0
      :                          @326
  6455: 64 52                    t0 = s0
  6457: 33 0b 70 0a 03           a4 = 0x30a70
  6462: 33 08 00 00 01           a1 = 0x10000
  6467: c8 8b 0b                 a4 = a4 + a1
  6470: 01                       fallthrough
      :                          @327
  6471: 82 bc                    a5 = u64 [a4]
  6473: c8 7c 0a                 a3 = a5 + a0
  6476: ac ca 5f                 jump @335 if a3 <u a5
      :                          @328
  6479: 95 a5 01                 s0 = a3 + 0x1
  6482: 88 56 01                 s1 = s0 <u 0x1
  6485: d8 58 05                 s0 = a1 <u s0
  6488: d4 65 05                 s0 = s0 | s1
  6491: 52 05 50                 jump @335 if s0 != 0
      :                          @329
  6494: 82 b6                    s1 = u64 [a4]
  6496: ab c6 e7                 jump @327 if s1 != a5
      :                          @330
  6499: 7b ba                    u64 [a4] = a3
  6501: 33 08 70 0a 04           a1 = 0x40a70
  6506: c9 a8 08                 a1 = a1 - a3
  6509: 64 25                    s0 = t0
  6511: 28 06                    jump @332
      :                          @331
  6513: 33 08 01                 a1 = 0x1
  6516: 01                       fallthrough
      :                          @332
  6517: 7b 17                    u64 [sp] = a0
  6519: 7b 18 08                 u64 [sp + 0x8] = a1
  6522: 49 11 10                 u64 [sp + 16] = 0
  6525: 33 08 b0 00 01           a1 = 0x100b0
  6530: 64 17                    a0 = sp
  6532: 50 20 86 00 80 06        ra = 134, jump @461
      :                          @333 [@dyn 67]
  6538: 52 07 22                 jump @336 if a0 != 0
      :                          @334
  6541: 82 17 10                 a0 = u64 [sp + 0x10]
  6544: 82 18 08                 a1 = u64 [sp + 0x8]
  6547: 82 19                    a2 = u64 [sp]
  6549: 7b 57 10                 u64 [s0 + 0x10] = a0
  6552: 7b 58 08                 u64 [s0 + 0x8] = a1
  6555: 7b 59                    u64 [s0] = a2
  6557: 82 10 30                 ra = u64 [sp + 0x30]
  6560: 82 15 28                 s0 = u64 [sp + 0x28]
  6563: 82 16 20                 s1 = u64 [sp + 0x20]
  6566: 95 11 38                 sp = sp + 0x38
  6569: 32 00                    ret
      :                          @335
  6571: 00                       trap
      :                          @336
  6572: 00                       trap
      :                          @337
  6573: 00                       trap
      :                          @338 [@dyn 68]
  6574: 82 72                    t0 = u64 [a0]
  6576: 33 09 00 00 ff           a2 = 0xffffffffffff0000
  6581: 95 2a ff ff fe           a3 = t0 + 0xfffffffffffeffff
  6586: ac 9a 28                 jump @344 if a3 <u a2
      :                          @339
  6589: 82 77 08                 a0 = u64 [a0 + 0x8]
  6592: 33 09 70 0a 03           a2 = 0x30a70
  6597: 95 99 00 00 01           a2 = a2 + 0x10000
  6602: 01                       fallthrough
      :                          @340
  6603: 82 9a                    a3 = u64 [a2]
  6605: c9 a9 0b                 a4 = a2 - a3
  6608: ab 7b 12                 jump @344 if a4 != a0
      :                          @341
  6611: c9 2a 0b                 a4 = a3 - t0
  6614: 01                       fallthrough
      :                          @342
  6615: 82 9c                    a5 = u64 [a2]
  6617: ab ac f2                 jump @340 if a5 != a3
      :                          @343
  6620: 7b 9b                    u64 [a2] = a4
  6622: 33 08                    a1 = 0
  6624: 32 00                    ret
      :                          @344
  6626: 32 00                    ret
      :                          @345 [@dyn 69]
  6628: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  6631: 7b 10 18                 u64 [sp + 0x18] = ra
  6634: 7b 15 10                 u64 [sp + 0x10] = s0
  6637: 7b 16 08                 u64 [sp + 0x8] = s1
  6640: 64 75                    s0 = a0
  6642: 82 7a 10                 a3 = u64 [a0 + 0x10]
  6645: 82 77                    a0 = u64 [a0]
  6647: c9 a7 07                 a0 = a0 - a3
  6650: 64 96                    s1 = a2
  6652: ac 97 2b                 jump @348 if a0 <u a2
      :                          @346
  6655: 7b 1a                    u64 [sp] = a3
  6657: 82 57 08                 a0 = u64 [s0 + 0x8]
  6660: c8 a7 07                 a0 = a0 + a3
  6663: 64 69                    a2 = s1
  6665: 50 20 8c 00 4f 01        ra = 140, jump @367
      :                          @347 [@dyn 70]
  6671: 82 17                    a0 = u64 [sp]
  6673: c8 76 06                 s1 = s1 + a0
  6676: 7b 56 10                 u64 [s0 + 0x10] = s1
  6679: 33 07                    a0 = 0
  6681: 82 10 18                 ra = u64 [sp + 0x18]
  6684: 82 15 10                 s0 = u64 [sp + 0x10]
  6687: 82 16 08                 s1 = u64 [sp + 0x8]
  6690: 95 11 20                 sp = sp + 0x20
  6693: 32 00                    ret
      :                          @348
  6695: 64 57                    a0 = s0
  6697: 7b 18                    u64 [sp] = a1
  6699: 64 a8                    a1 = a3
  6701: 64 69                    a2 = s1
  6703: 50 20 8e 00 6f fc        ra = 142, jump @261
      :                          @349 [@dyn 71]
  6709: 82 18                    a1 = u64 [sp]
  6711: 82 5a 10                 a3 = u64 [s0 + 0x10]
  6714: 28 c5                    jump @346
      :                          @350 [@dyn 72]
  6716: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  6719: 7b 10 20                 u64 [sp + 0x20] = ra
  6722: 7b 15 18                 u64 [sp + 0x18] = s0
  6725: 7b 16 10                 u64 [sp + 0x10] = s1
  6728: 64 86                    s1 = a1
  6730: 83 88                    i32 a1 = a1 + 0
  6732: 33 09 80 00              a2 = 0x80
  6736: 64 7a                    a3 = a0
  6738: ae 98 2c                 jump @355 if a1 >=u a2
      :                          @351
  6741: 82 a8 10                 a1 = u64 [a3 + 0x10]
  6744: 82 a7                    a0 = u64 [a3]
  6746: ab 78 13                 jump @354 if a1 != a0
      :                          @352
  6749: 64 a7                    a0 = a3
  6751: 64 a5                    s0 = a3
  6753: 50 20 92 00 04 fe        ra = 146, jump @305
      :                          @353 [@dyn 73]
  6759: 64 5a                    a3 = s0
  6761: 82 58 10                 a1 = u64 [s0 + 0x10]
  6764: 01                       fallthrough
      :                          @354
  6765: 82 a7 08                 a0 = u64 [a3 + 0x8]
  6768: c8 87 07                 a0 = a0 + a1
  6771: 78 76                    u8 [a0] = s1
  6773: 95 88 01                 a1 = a1 + 0x1
  6776: 7b a8 10                 u64 [a3 + 0x10] = a1
  6779: 28 ac 00                 jump @363
      :                          @355
  6782: 8b 67 0b                 i32 a0 = s1 >> 0xb
  6785: 48 11 0c                 u32 [sp + 12] = 0
  6788: 52 07 1c                 jump @357 if a0 != 0
      :                          @356
  6791: 98 67 06                 a0 = s1 >> 0x6
  6794: 86 77 c0 00              a0 = a0 | 0xc0
  6798: 78 17 0c                 u8 [sp + 0xc] = a0
  6801: 84 67 3f                 a0 = s1 & 0x3f
  6804: 86 77 80 00              a0 = a0 | 0x80
  6808: 78 17 0d                 u8 [sp + 0xd] = a0
  6811: 33 06 02                 s1 = 0x2
  6814: 28 63                    jump @360
      :                          @357
  6816: 8b 67 10                 i32 a0 = s1 >> 0x10
  6819: 52 07 29                 jump @359 if a0 != 0
      :                          @358
  6822: 98 67 0c                 a0 = s1 >> 0xc
  6825: 86 77 e0 00              a0 = a0 | 0xe0
  6829: 78 17 0c                 u8 [sp + 0xc] = a0
  6832: 97 67 34                 a0 = s1 << 0x34
  6835: 98 77 3a                 a0 = a0 >> 0x3a
  6838: 95 77 80 00              a0 = a0 + 0x80
  6842: 78 17 0d                 u8 [sp + 0xd] = a0
  6845: 84 67 3f                 a0 = s1 & 0x3f
  6848: 86 77 80 00              a0 = a0 | 0x80
  6852: 78 17 0e                 u8 [sp + 0xe] = a0
  6855: 33 06 03                 s1 = 0x3
  6858: 28 37                    jump @360
      :                          @359
  6860: 97 67 2b                 a0 = s1 << 0x2b
  6863: 98 77 3d                 a0 = a0 >> 0x3d
  6866: 95 77 f0 00              a0 = a0 + 0xf0
  6870: 78 17 0c                 u8 [sp + 0xc] = a0
  6873: 97 67 2e                 a0 = s1 << 0x2e
  6876: 98 77 3a                 a0 = a0 >> 0x3a
  6879: 95 77 80 00              a0 = a0 + 0x80
  6883: 78 17 0d                 u8 [sp + 0xd] = a0
  6886: 97 67 34                 a0 = s1 << 0x34
  6889: 98 77 3a                 a0 = a0 >> 0x3a
  6892: 95 77 80 00              a0 = a0 + 0x80
  6896: 78 17 0e                 u8 [sp + 0xe] = a0
  6899: 84 67 3f                 a0 = s1 & 0x3f
  6902: 86 77 80 00              a0 = a0 | 0x80
  6906: 78 17 0f                 u8 [sp + 0xf] = a0
  6909: 33 06 04                 s1 = 0x4
  6912: 01                       fallthrough
      :                          @360
  6913: 82 a5 10                 s0 = u64 [a3 + 0x10]
  6916: 82 a7                    a0 = u64 [a3]
  6918: c9 57 07                 a0 = a0 - s0
  6921: ac 67 2e                 jump @364 if a0 <u s1
      :                          @361
  6924: 7b 1a                    u64 [sp] = a3
  6926: 82 a7 08                 a0 = u64 [a3 + 0x8]
  6929: c8 57 07                 a0 = a0 + s0
  6932: 95 18 0c                 a1 = sp + 0xc
  6935: 64 69                    a2 = s1
  6937: 50 20 94 00 3f           ra = 148, jump @367
      :                          @362 [@dyn 74]
  6942: c8 56 06                 s1 = s1 + s0
  6945: 82 17                    a0 = u64 [sp]
  6947: 7b 76 10                 u64 [a0 + 0x10] = s1
  6950: 01                       fallthrough
      :                          @363
  6951: 33 07                    a0 = 0
  6953: 82 10 20                 ra = u64 [sp + 0x20]
  6956: 82 15 18                 s0 = u64 [sp + 0x18]
  6959: 82 16 10                 s1 = u64 [sp + 0x10]
  6962: 95 11 28                 sp = sp + 0x28
  6965: 32 00                    ret
      :                          @364
  6967: 64 a7                    a0 = a3
  6969: 64 58                    a1 = s0
  6971: 64 69                    a2 = s1
  6973: 64 a5                    s0 = a3
  6975: 50 20 96 00 5f fb        ra = 150, jump @261
      :                          @365 [@dyn 75]
  6981: 64 5a                    a3 = s0
  6983: 82 55 10                 s0 = u64 [s0 + 0x10]
  6986: 28 c2                    jump @361
      :                          @366 [@dyn 76]
  6988: 64 8a                    a3 = a1
  6990: 33 08 b0 00 01           a1 = 0x100b0
  6995: 64 a9                    a2 = a3
  6997: 28 af 04                 jump @461
      :                          @367
  7000: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  7003: 7b 10 18                 u64 [sp + 0x18] = ra
  7006: 7b 15 10                 u64 [sp + 0x10] = s0
  7009: 7b 16 08                 u64 [sp + 0x8] = s1
  7012: 53 19 10 64              jump @376 if a2 <u 16
      :                          @368
  7016: 8d 7a                    i32 a3 = -a0
  7018: 84 a2 07                 t0 = a3 & 0x7
  7021: c8 27 0b                 a4 = a0 + t0
  7024: 51 02 15                 jump @371 if t0 == 0
      :                          @369
  7027: 64 8c                    a5 = a1
  7029: 64 75                    s0 = a0
  7031: 01                       fallthrough
      :                          @370
  7032: 7c ca                    a3 = u8 [a5]
  7034: 78 5a                    u8 [s0] = a3
  7036: 95 55 01                 s0 = s0 + 0x1
  7039: 95 cc 01                 a5 = a5 + 0x1
  7042: ac b5 f6                 jump @370 if s0 <u a4
      :                          @371
  7045: c8 28 03                 t1 = a1 + t0
  7048: c9 29 02                 t0 = a2 - t0
  7051: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  7054: 84 38 07                 a1 = t1 & 0x7
  7057: c8 4b 0a                 a3 = a4 + t2
  7060: 51 08 3b                 jump @378 if a1 == 0
      :                          @372
  7063: 58 04 4b                 jump @381 if t2 <=s 0
      :                          @373
  7066: 97 38 03                 a1 = t1 << 0x3
  7069: 84 80 38                 ra = a1 & 0x38
  7072: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  7075: 82 c5                    s0 = u64 [a5]
  7077: 8d 88                    i32 a1 = -a1
  7079: 84 88 38                 a1 = a1 & 0x38
  7082: 95 cc 08                 a5 = a5 + 0x8
  7085: 01                       fallthrough
      :                          @374
  7086: 82 c6                    s1 = u64 [a5]
  7088: d0 05 05                 s0 = s0 >> ra
  7091: cf 86 09                 a2 = s1 << a1
  7094: d4 59 09                 a2 = a2 | s0
  7097: 7b b9                    u64 [a4] = a2
  7099: 95 bb 08                 a4 = a4 + 0x8
  7102: 95 cc 08                 a5 = a5 + 0x8
  7105: 64 65                    s0 = s1
  7107: ac ab eb                 jump @374 if a4 <u a3
      :                          @375
  7110: 28 1c                    jump @381
      :                          @376
  7112: 64 7a                    a3 = a0
  7114: 52 09 21                 jump @382 if a2 != 0
      :                          @377
  7117: 28 2f                    jump @384
      :                          @378
  7119: 58 04 13                 jump @381 if t2 <=s 0
      :                          @379
  7122: 64 38                    a1 = t1
  7124: 01                       fallthrough
      :                          @380
  7125: 82 89                    a2 = u64 [a1]
  7127: 7b b9                    u64 [a4] = a2
  7129: 95 bb 08                 a4 = a4 + 0x8
  7132: 95 88 08                 a1 = a1 + 0x8
  7135: ac ab f6                 jump @380 if a4 <u a3
      :                          @381
  7138: c8 43 08                 a1 = t1 + t2
  7141: 84 29 07                 a2 = t0 & 0x7
  7144: 51 09 14                 jump @384 if a2 == 0
      :                          @382
  7147: c8 a9 09                 a2 = a2 + a3
  7150: 01                       fallthrough
      :                          @383
  7151: 7c 8b                    a4 = u8 [a1]
  7153: 78 ab                    u8 [a3] = a4
  7155: 95 aa 01                 a3 = a3 + 0x1
  7158: 95 88 01                 a1 = a1 + 0x1
  7161: ac 9a f6                 jump @383 if a3 <u a2
      :                          @384
  7164: 82 10 18                 ra = u64 [sp + 0x18]
  7167: 82 15 10                 s0 = u64 [sp + 0x10]
  7170: 82 16 08                 s1 = u64 [sp + 0x8]
  7173: 95 11 20                 sp = sp + 0x20
  7176: 32 00                    ret
      :                          @385
  7178: 8d 7a                    i32 a3 = -a0
  7180: 84 aa 07                 a3 = a3 & 0x7
  7183: c8 a7 0b                 a4 = a0 + a3
  7186: 51 0a 0e                 jump @388 if a3 == 0
      :                          @386
  7189: 64 7c                    a5 = a0
  7191: 01                       fallthrough
      :                          @387
  7192: 78 c8                    u8 [a5] = a1
  7194: 95 cc 01                 a5 = a5 + 0x1
  7197: ac bc fb                 jump @387 if a5 <u a4
      :                          @388
  7200: c9 a9 03                 t1 = a2 - a3
  7203: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  7206: c8 cb 0a                 a3 = a4 + a5
  7209: 58 0c 1d                 jump @391 if a5 <=s 0
      :                          @389
  7212: 84 82 ff 00              t0 = a1 & 0xff
  7216: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  7226: ca 92 0c                 a5 = t0 * a2
  7229: 01                       fallthrough
      :                          @390
  7230: 7b bc                    u64 [a4] = a5
  7232: 95 bb 08                 a4 = a4 + 0x8
  7235: ac ab fb                 jump @390 if a4 <u a3
      :                          @391
  7238: 84 39 07                 a2 = t1 & 0x7
  7241: 52 09 05                 jump @393 if a2 != 0
      :                          @392
  7244: 28 0e                    jump @395
      :                          @393
  7246: c8 a9 09                 a2 = a2 + a3
  7249: 01                       fallthrough
      :                          @394
  7250: 78 a8                    u8 [a3] = a1
  7252: 95 aa 01                 a3 = a3 + 0x1
  7255: ac 9a fb                 jump @394 if a3 <u a2
      :                          @395
  7258: 32 00                    ret
      :                          @396 [@dyn 77]
  7260: 82 77                    a0 = u64 [a0]
  7262: 01                       fallthrough
      :                          @397
  7263: 28                       jump @397
      :                          @398 [@dyn 78]
  7264: 82 77                    a0 = u64 [a0]
  7266: 01                       fallthrough
      :                          @399
  7267: 95 11 a8                 sp = sp + 0xffffffffffffffa8
  7270: 7b 10 50                 u64 [sp + 0x50] = ra
  7273: 7b 15 48                 u64 [sp + 0x48] = s0
  7276: 7b 16 40                 u64 [sp + 0x40] = s1
  7279: 7b 18                    u64 [sp] = a1
  7281: 98 79 04                 a2 = a0 >> 0x4
  7284: 33 08 27                 a1 = 0x27
  7287: 53 29 71 02 81 00        jump @402 if a2 <u 625
      :                          @400
  7293: 33 08 27                 a1 = 0x27
  7296: 95 1a 3e                 a3 = sp + 0x3e
  7299: 3a 09 50 00 03           a2 = u64 [0x30050]
  7304: 7b 19 10                 u64 [sp + 0x10] = a2
  7307: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
  7313: 33 04 7b 14              t2 = 0x147b
  7317: 33 0b 24 01 01           a4 = 0x10124
  7322: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
  7328: 01                       fallthrough
      :                          @401
  7329: 64 72                    t0 = a0
  7331: 82 17 10                 a0 = u64 [sp + 0x10]
  7334: d6 72 07                 a0 = t0 mulhu a0
  7337: 98 77 0b                 a0 = a0 >> 0xb
  7340: 82 19 08                 a2 = u64 [sp + 0x8]
  7343: c0 97 0c                 i32 a5 = a0 * a2
  7346: c8 2c 06                 s1 = a5 + t0
  7349: 97 6c 30                 a5 = s1 << 0x30
  7352: 98 cc 32                 a5 = a5 >> 0x32
  7355: ca 4c 0c                 a5 = a5 * t2
  7358: 98 c3 11                 t1 = a5 >> 0x11
  7361: 98 cc 10                 a5 = a5 >> 0x10
  7364: 84 cc fe 07              a5 = a5 & 0x7fe
  7368: 96 39 9c                 a2 = t1 * 0xffffffffffffff9c
  7371: c8 69 09                 a2 = a2 + s1
  7374: 97 99 31                 a2 = a2 << 0x31
  7377: 98 99 30                 a2 = a2 >> 0x30
  7380: c8 bc 0c                 a5 = a5 + a4
  7383: 7c c6                    s1 = u8 [a5]
  7385: 7c cc 01                 a5 = u8 [a5 + 0x1]
  7388: c8 b9 09                 a2 = a2 + a4
  7391: 7c 95 01                 s0 = u8 [a2 + 0x1]
  7394: 7c 99                    a2 = u8 [a2]
  7396: 78 ac ff                 u8 [a3 + 0xffffffffffffffff] = a5
  7399: 78 a6 fe                 u8 [a3 + 0xfffffffffffffffe] = s1
  7402: 78 a5 01                 u8 [a3 + 0x1] = s0
  7405: 78 a9                    u8 [a3] = a2
  7407: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
  7410: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
  7413: ac 20 ac                 jump @401 if ra <u t0
      :                          @402
  7416: 54 17 63 3b              jump @404 if a0 <=u 99
      :                          @403
  7420: 97 79 30                 a2 = a0 << 0x30
  7423: 98 99 32                 a2 = a2 >> 0x32
  7426: 96 99 7b 14              a2 = a2 * 0x147b
  7430: 98 99 11                 a2 = a2 >> 0x11
  7433: 96 9a 9c                 a3 = a2 * 0xffffffffffffff9c
  7436: c8 a7 07                 a0 = a0 + a3
  7439: 97 77 31                 a0 = a0 << 0x31
  7442: 98 77 30                 a0 = a0 >> 0x30
  7445: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  7448: 33 0a 24 01 01           a3 = 0x10124
  7453: c8 a7 07                 a0 = a0 + a3
  7456: 7c 7a 01                 a3 = u8 [a0 + 0x1]
  7459: 7c 77                    a0 = u8 [a0]
  7461: 95 1b 19                 a4 = sp + 0x19
  7464: c8 8b 0b                 a4 = a4 + a1
  7467: 78 ba 01                 u8 [a4 + 0x1] = a3
  7470: 78 b7                    u8 [a4] = a0
  7472: 64 97                    a0 = a2
  7474: 01                       fallthrough
      :                          @404
  7475: 55 17 0a 14              jump @406 if a0 >=u 10
      :                          @405
  7479: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  7482: 95 19 19                 a2 = sp + 0x19
  7485: c8 89 09                 a2 = a2 + a1
  7488: 83 77 30                 i32 a0 = a0 + 0x30
  7491: 78 97                    u8 [a2] = a0
  7493: 28 21                    jump @407
      :                          @406
  7495: 97 77 01                 a0 = a0 << 0x1
  7498: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  7501: 33 09 24 01 01           a2 = 0x10124
  7506: c8 97 07                 a0 = a0 + a2
  7509: 7c 79 01                 a2 = u8 [a0 + 0x1]
  7512: 7c 77                    a0 = u8 [a0]
  7514: 95 1a 19                 a3 = sp + 0x19
  7517: c8 8a 0a                 a3 = a3 + a1
  7520: 78 a9 01                 u8 [a3 + 0x1] = a2
  7523: 78 a7                    u8 [a3] = a0
  7525: 01                       fallthrough
      :                          @407
  7526: 95 1a 19                 a3 = sp + 0x19
  7529: c8 8a 0a                 a3 = a3 + a1
  7532: 9a 8b 27                 a4 = 0x27 - a1
  7535: 33 08 e0 00 01           a1 = 0x100e0
  7540: 82 17                    a0 = u64 [sp]
  7542: 33 09                    a2 = 0
  7544: 50 20 9e 00 13           ra = 158, jump @409
      :                          @408 [@dyn 79]
  7549: 82 10 50                 ra = u64 [sp + 0x50]
  7552: 82 15 48                 s0 = u64 [sp + 0x48]
  7555: 82 16 40                 s1 = u64 [sp + 0x40]
  7558: 95 11 58                 sp = sp + 0x58
  7561: 32 00                    ret
      :                          @409
  7563: 95 11 98                 sp = sp + 0xffffffffffffff98
  7566: 7b 10 60                 u64 [sp + 0x60] = ra
  7569: 7b 15 58                 u64 [sp + 0x58] = s0
  7572: 7b 16 50                 u64 [sp + 0x50] = s1
  7575: 80 73 34                 t1 = u32 [a0 + 0x34]
  7578: 7b 1a 20                 u64 [sp + 0x20] = a3
  7581: 64 9c                    a5 = a2
  7583: 84 36 01                 s1 = t1 & 0x1
  7586: 33 02 2b                 t0 = 0x2b
  7589: 33 09 00 00 11           a2 = 0x110000
  7594: 84 3a 04                 a3 = t1 & 0x4
  7597: 7b 1b 28                 u64 [sp + 0x28] = a4
  7600: c8 b6 04                 t2 = s1 + a4
  7603: 7b 1c 30                 u64 [sp + 0x30] = a5
  7606: 52 0a 10                 jump @412 if a3 != 0
      :                          @410
  7609: 49 11 38                 u64 [sp + 56] = 0
  7612: 82 78                    a1 = u64 [a0]
  7614: 94 69 2b                 a2 = 0x2b if s1 != 0
  7617: 52 08 35                 jump @416 if a1 != 0
      :                          @411
  7620: 28 56                    jump @421
      :                          @412
  7622: 7b 18 38                 u64 [sp + 0x38] = a1
  7625: 33 09                    a2 = 0
  7627: 51 0c 1b                 jump @415 if a5 == 0
      :                          @413
  7630: 82 1b 38                 a4 = u64 [sp + 0x38]
  7633: 01                       fallthrough
      :                          @414
  7634: 7d b5                    s0 = i8 [a4]
  7636: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
  7639: 85 5a 01                 a3 = s0 ^ 0x1
  7642: c8 a9 09                 a2 = a2 + a3
  7645: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  7648: 95 bb 01                 a4 = a4 + 0x1
  7651: 52 0c ef                 jump @414 if a5 != 0
      :                          @415
  7654: c8 94 04                 t2 = t2 + a2
  7657: 33 09 00 00 11           a2 = 0x110000
  7662: 82 78                    a1 = u64 [a0]
  7664: db 62 09                 a2 = t0 if s1 != 0
  7667: 51 08 27                 jump @421 if a1 == 0
      :                          @416
  7670: 82 7a 08                 a3 = u64 [a0 + 0x8]
  7673: ae a4 21                 jump @421 if t2 >=u a3
      :                          @417
  7676: 84 38 08                 a1 = t1 & 0x8
  7679: 52 08 51                 jump @424 if a1 != 0
      :                          @418
  7682: 7c 76 38                 s1 = u8 [a0 + 0x38]
  7685: c9 4a 0a                 a3 = a3 - t2
  7688: 7b 19 18                 u64 [sp + 0x18] = a2
  7691: 5a 16 01 a0 00           jump @431 if s1 >s 1
      :                          @419
  7696: 52 06 ad 00              jump @433 if s1 != 0
      :                          @420
  7700: 7b 1a 10                 u64 [sp + 0x10] = a3
  7703: 28 ac 00                 jump @434
      :                          @421
  7706: 82 75 20                 s0 = u64 [a0 + 0x20]
  7709: 82 76 28                 s1 = u64 [a0 + 0x28]
  7712: 64 57                    a0 = s0
  7714: 64 68                    a1 = s1
  7716: 82 1a 38                 a3 = u64 [sp + 0x38]
  7719: 82 1b 30                 a4 = u64 [sp + 0x30]
  7722: 50 20 a0 00 75 01        ra = 160, jump @454
      :                          @422 [@dyn 80]
  7728: 33 08 01                 a1 = 0x1
  7731: 52 07 be 00              jump @439 if a0 != 0
      :                          @423
  7735: 82 6c 18                 a5 = u64 [s1 + 0x18]
  7738: 64 57                    a0 = s0
  7740: 82 18 20                 a1 = u64 [sp + 0x20]
  7743: 82 19 28                 a2 = u64 [sp + 0x28]
  7746: 82 10 60                 ra = u64 [sp + 0x60]
  7749: 82 15 58                 s0 = u64 [sp + 0x58]
  7752: 82 16 50                 s1 = u64 [sp + 0x50]
  7755: 95 11 68                 sp = sp + 0x68
  7758: 32 0c                    jump [a5]
      :                          @424
  7760: 7b 1a 40                 u64 [sp + 0x40] = a3
  7763: 64 45                    s0 = t2
  7765: 81 78 30                 a1 = i32 [a0 + 0x30]
  7768: 7b 18 10                 u64 [sp + 0x10] = a1
  7771: 7c 7a 38                 a3 = u8 [a0 + 0x38]
  7774: 7b 1a 08                 u64 [sp + 0x8] = a3
  7777: 82 7a 20                 a3 = u64 [a0 + 0x20]
  7780: 82 78 28                 a1 = u64 [a0 + 0x28]
  7783: 48 17 30 30              u32 [a0 + 48] = 0x30
  7787: 7b 17                    u64 [sp] = a0
  7789: 46 17 38 01              u8 [a0 + 56] = 0x1
  7793: 7b 1a 48                 u64 [sp + 0x48] = a3
  7796: 64 a7                    a0 = a3
  7798: 64 86                    s1 = a1
  7800: 82 1a 38                 a3 = u64 [sp + 0x38]
  7803: 82 1b 30                 a4 = u64 [sp + 0x30]
  7806: 50 20 a2 00 21 01        ra = 162, jump @454
      :                          @425 [@dyn 81]
  7812: 52 07 69                 jump @438 if a0 != 0
      :                          @426
  7815: 82 17 40                 a0 = u64 [sp + 0x40]
  7818: c9 57 05                 s0 = a0 - s0
  7821: 95 55 01                 s0 = s0 + 0x1
  7824: 01                       fallthrough
      :                          @427
  7825: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  7828: 51 05 cb 00              jump @449 if s0 == 0
      :                          @428
  7832: 82 69 20                 a2 = u64 [s1 + 0x20]
  7835: 33 08 30                 a1 = 0x30
  7838: 82 17 48                 a0 = u64 [sp + 0x48]
  7841: b4 90 02 a4 00           ra = 164, jump [a2]
      :                          @429 [@dyn 82]
  7846: 51 07 eb                 jump @427 if a0 == 0
      :                          @430
  7849: 28 44                    jump @438
      :                          @431
  7851: 52 16 02 12              jump @433 if s1 != 2
      :                          @432
  7855: 98 a6 01                 s1 = a3 >> 0x1
  7858: 95 a8 01                 a1 = a3 + 0x1
  7861: 98 88 01                 a1 = a1 >> 0x1
  7864: 7b 18 10                 u64 [sp + 0x10] = a1
  7867: 28 08                    jump @434
      :                          @433
  7869: 64 a6                    s1 = a3
  7871: 49 11 10                 u64 [sp + 16] = 0
  7874: 01                       fallthrough
      :                          @434
  7875: 82 78 20                 a1 = u64 [a0 + 0x20]
  7878: 7b 18 48                 u64 [sp + 0x48] = a1
  7881: 82 75 28                 s0 = u64 [a0 + 0x28]
  7884: 81 77 30                 a0 = i32 [a0 + 0x30]
  7887: 7b 17 40                 u64 [sp + 0x40] = a0
  7890: 95 66 01                 s1 = s1 + 0x1
  7893: 01                       fallthrough
      :                          @435
  7894: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  7897: 51 06 28                 jump @440 if s1 == 0
      :                          @436
  7900: 82 59 20                 a2 = u64 [s0 + 0x20]
  7903: 82 17 48                 a0 = u64 [sp + 0x48]
  7906: 82 18 40                 a1 = u64 [sp + 0x40]
  7909: b4 90 02 a6 00           ra = 166, jump [a2]
      :                          @437 [@dyn 83]
  7914: 51 07 ec                 jump @435 if a0 == 0
      :                          @438
  7917: 33 08 01                 a1 = 0x1
  7920: 01                       fallthrough
      :                          @439
  7921: 64 87                    a0 = a1
  7923: 82 10 60                 ra = u64 [sp + 0x60]
  7926: 82 15 58                 s0 = u64 [sp + 0x58]
  7929: 82 16 50                 s1 = u64 [sp + 0x50]
  7932: 95 11 68                 sp = sp + 0x68
  7935: 32 00                    ret
      :                          @440
  7937: 82 16 48                 s1 = u64 [sp + 0x48]
  7940: 64 67                    a0 = s1
  7942: 64 58                    a1 = s0
  7944: 82 19 18                 a2 = u64 [sp + 0x18]
  7947: 82 1a 38                 a3 = u64 [sp + 0x38]
  7950: 82 1b 30                 a4 = u64 [sp + 0x30]
  7953: 50 20 a8 00 8e 00        ra = 168, jump @454
      :                          @441 [@dyn 84]
  7959: 33 08 01                 a1 = 0x1
  7962: 52 07 d7                 jump @439 if a0 != 0
      :                          @442
  7965: 82 5a 18                 a3 = u64 [s0 + 0x18]
  7968: 64 67                    a0 = s1
  7970: 82 18 20                 a1 = u64 [sp + 0x20]
  7973: 82 19 28                 a2 = u64 [sp + 0x28]
  7976: b4 a0 02 aa 00           ra = 170, jump [a3]
      :                          @443 [@dyn 85]
  7981: 33 08 01                 a1 = 0x1
  7984: 52 07 c1                 jump @439 if a0 != 0
      :                          @444
  7987: 82 17 10                 a0 = u64 [sp + 0x10]
  7990: 9a 77                    a0 = -a0
  7992: 7b 17 38                 u64 [sp + 0x38] = a0
  7995: 33 06 ff                 s1 = 0xffffffffffffffff
  7998: 01                       fallthrough
      :                          @445
  7999: 82 17 38                 a0 = u64 [sp + 0x38]
  8002: c8 67 07                 a0 = a0 + s1
  8005: 51 17 ff 45              jump @452 if a0 == 4294967295
      :                          @446
  8009: 82 59 20                 a2 = u64 [s0 + 0x20]
  8012: 82 17 48                 a0 = u64 [sp + 0x48]
  8015: 82 18 40                 a1 = u64 [sp + 0x40]
  8018: b4 90 02 ac 00           ra = 172, jump [a2]
      :                          @447 [@dyn 86]
  8023: 95 66 01                 s1 = s1 + 0x1
  8026: 51 07 e5                 jump @445 if a0 == 0
      :                          @448
  8029: 28 39                    jump @453
      :                          @449
  8031: 82 6a 18                 a3 = u64 [s1 + 0x18]
  8034: 82 17 48                 a0 = u64 [sp + 0x48]
  8037: 82 18 20                 a1 = u64 [sp + 0x20]
  8040: 82 19 28                 a2 = u64 [sp + 0x28]
  8043: b4 a0 02 ae 00           ra = 174, jump [a3]
      :                          @450 [@dyn 87]
  8048: 33 08 01                 a1 = 0x1
  8051: 52 07 7e ff              jump @439 if a0 != 0
      :                          @451
  8055: 33 08                    a1 = 0
  8057: 82 16                    s1 = u64 [sp]
  8059: 82 17 10                 a0 = u64 [sp + 0x10]
  8062: 7a 67 30                 u32 [s1 + 0x30] = a0
  8065: 82 17 08                 a0 = u64 [sp + 0x8]
  8068: 78 67 38                 u8 [s1 + 0x38] = a0
  8071: 28 6a ff                 jump @439
      :                          @452
  8074: 82 16 10                 s1 = u64 [sp + 0x10]
  8077: 82 17 10                 a0 = u64 [sp + 0x10]
  8080: d8 76 08                 a1 = s1 <u a0
  8083: 28 5e ff                 jump @439
      :                          @453
  8086: 82 17 10                 a0 = u64 [sp + 0x10]
  8089: d8 76 08                 a1 = s1 <u a0
  8092: 28 55 ff                 jump @439
      :                          @454
  8095: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  8098: 7b 10 20                 u64 [sp + 0x20] = ra
  8101: 7b 15 18                 u64 [sp + 0x18] = s0
  8104: 7b 16 10                 u64 [sp + 0x10] = s1
  8107: 83 9c                    i32 a5 = a2 + 0
  8109: 33 02 00 00 11           t0 = 0x110000
  8114: 64 a6                    s1 = a3
  8116: 64 85                    s0 = a1
  8118: 64 7a                    a3 = a0
  8120: aa 2c 21                 jump @457 if a5 == t0
      :                          @455
  8123: 82 5c 20                 a5 = u64 [s0 + 0x20]
  8126: 64 a7                    a0 = a3
  8128: 64 98                    a1 = a2
  8130: 7b 1b 08                 u64 [sp + 0x8] = a4
  8133: 7b 1a                    u64 [sp] = a3
  8135: b4 c0 02 b0 00           ra = 176, jump [a5]
      :                          @456 [@dyn 88]
  8140: 82 1a                    a3 = u64 [sp]
  8142: 82 1b 08                 a4 = u64 [sp + 0x8]
  8145: 64 78                    a1 = a0
  8147: 33 07 01                 a0 = 0x1
  8150: 52 08 20                 jump @460 if a1 != 0
      :                          @457
  8153: 51 06 1a                 jump @459 if s1 == 0
      :                          @458
  8156: 82 5c 18                 a5 = u64 [s0 + 0x18]
  8159: 64 a7                    a0 = a3
  8161: 64 68                    a1 = s1
  8163: 64 b9                    a2 = a4
  8165: 82 10 20                 ra = u64 [sp + 0x20]
  8168: 82 15 18                 s0 = u64 [sp + 0x18]
  8171: 82 16 10                 s1 = u64 [sp + 0x10]
  8174: 95 11 28                 sp = sp + 0x28
  8177: 32 0c                    jump [a5]
      :                          @459
  8179: 33 07                    a0 = 0
  8181: 01                       fallthrough
      :                          @460
  8182: 82 10 20                 ra = u64 [sp + 0x20]
  8185: 82 15 18                 s0 = u64 [sp + 0x18]
  8188: 82 16 10                 s1 = u64 [sp + 0x10]
  8191: 95 11 28                 sp = sp + 0x28
  8194: 32 00                    ret
      :                          @461
  8196: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  8200: 7b 10 80 00              u64 [sp + 0x80] = ra
  8204: 7b 15 78                 u64 [sp + 0x78] = s0
  8207: 7b 16 70                 u64 [sp + 0x70] = s1
  8210: 49 11 60 20              u64 [sp + 96] = 0x20
  8214: 33 0a 03                 a3 = 0x3
  8217: 78 1a 68                 u8 [sp + 0x68] = a3
  8220: 82 96 20                 s1 = u64 [a2 + 0x20]
  8223: 49 11 30                 u64 [sp + 48] = 0
  8226: 49 11 40                 u64 [sp + 64] = 0
  8229: 7b 17 50                 u64 [sp + 0x50] = a0
  8232: 7b 18 58                 u64 [sp + 0x58] = a1
  8235: 51 06 0a 01              jump @483 if s1 == 0
      :                          @462
  8239: 82 97 28                 a0 = u64 [a2 + 0x28]
  8242: 51 07 79 01              jump @493 if a0 == 0
      :                          @463
  8246: 49 11 28                 u64 [sp + 40] = 0
  8249: 82 95                    s0 = u64 [a2]
  8251: 7b 19 08                 u64 [sp + 0x8] = a2
  8254: 82 98 10                 a1 = u64 [a2 + 0x10]
  8257: 7b 18 18                 u64 [sp + 0x18] = a1
  8260: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  8263: 97 88 03                 a1 = a1 << 0x3
  8266: 98 88 03                 a1 = a1 >> 0x3
  8269: 95 88 01                 a1 = a1 + 0x1
  8272: 7b 18                    u64 [sp] = a1
  8274: 95 55 08                 s0 = s0 + 0x8
  8277: 96 78 38                 a1 = a0 * 0x38
  8280: 95 66 18                 s1 = s1 + 0x18
  8283: 33 07 9a 00              a0 = 0x9a
  8287: 7b 17 10                 u64 [sp + 0x10] = a0
  8290: 01                       fallthrough
      :                          @464
  8291: 7b 18 20                 u64 [sp + 0x20] = a1
  8294: 82 59                    a2 = u64 [s0]
  8296: 51 09 18                 jump @467 if a2 == 0
      :                          @465
  8299: 82 1a 58                 a3 = u64 [sp + 0x58]
  8302: 82 17 50                 a0 = u64 [sp + 0x50]
  8305: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  8308: 82 aa 18                 a3 = u64 [a3 + 0x18]
  8311: b4 a0 02 b2 00           ra = 178, jump [a3]
      :                          @466 [@dyn 89]
  8316: 52 07 55 01              jump @496 if a0 != 0
      :                          @467
  8320: 81 67 10                 a0 = i32 [s1 + 0x10]
  8323: 7a 17 60                 u32 [sp + 0x60] = a0
  8326: 7c 67 18                 a0 = u8 [s1 + 0x18]
  8329: 78 17 68                 u8 [sp + 0x68] = a0
  8332: 81 67 14                 a0 = i32 [s1 + 0x14]
  8335: 7a 17 64                 u32 [sp + 0x64] = a0
  8338: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  8341: 82 67                    a0 = u64 [s1]
  8343: 51 08 26                 jump @472 if a1 == 0
      :                          @468
  8346: 52 18 01 16              jump @470 if a1 != 1
      :                          @469
  8350: 97 77 04                 a0 = a0 << 0x4
  8353: 82 18 18                 a1 = u64 [sp + 0x18]
  8356: c8 87 07                 a0 = a0 + a1
  8359: 82 78 08                 a1 = u64 [a0 + 0x8]
  8362: 82 19 10                 a2 = u64 [sp + 0x10]
  8365: aa 98 07                 jump @471 if a1 == a2
      :                          @470
  8368: 33 08                    a1 = 0
  8370: 28 0f                    jump @473
      :                          @471
  8372: 82 77                    a0 = u64 [a0]
  8374: 82 77                    a0 = u64 [a0]
  8376: 33 08 01                 a1 = 0x1
  8379: 28 06                    jump @473
      :                          @472
  8381: 33 08 01                 a1 = 0x1
  8384: 01                       fallthrough
      :                          @473
  8385: 7b 18 30                 u64 [sp + 0x30] = a1
  8388: 7b 17 38                 u64 [sp + 0x38] = a0
  8391: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  8394: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  8397: 51 08 26                 jump @478 if a1 == 0
      :                          @474
  8400: 52 18 01 16              jump @476 if a1 != 1
      :                          @475
  8404: 97 77 04                 a0 = a0 << 0x4
  8407: 82 18 18                 a1 = u64 [sp + 0x18]
  8410: c8 87 07                 a0 = a0 + a1
  8413: 82 78 08                 a1 = u64 [a0 + 0x8]
  8416: 82 19 10                 a2 = u64 [sp + 0x10]
  8419: aa 98 07                 jump @477 if a1 == a2
      :                          @476
  8422: 33 08                    a1 = 0
  8424: 28 0f                    jump @479
      :                          @477
  8426: 82 77                    a0 = u64 [a0]
  8428: 82 77                    a0 = u64 [a0]
  8430: 33 08 01                 a1 = 0x1
  8433: 28 06                    jump @479
      :                          @478
  8435: 33 08 01                 a1 = 0x1
  8438: 01                       fallthrough
      :                          @479
  8439: 7b 18 40                 u64 [sp + 0x40] = a1
  8442: 7b 17 48                 u64 [sp + 0x48] = a0
  8445: 82 67 08                 a0 = u64 [s1 + 0x8]
  8448: 97 77 04                 a0 = a0 << 0x4
  8451: 82 18 18                 a1 = u64 [sp + 0x18]
  8454: c8 78 08                 a1 = a1 + a0
  8457: 82 87                    a0 = u64 [a1]
  8459: 82 89 08                 a2 = u64 [a1 + 0x8]
  8462: 95 18 30                 a1 = sp + 0x30
  8465: b4 90 02 b4 00           ra = 180, jump [a2]
      :                          @480 [@dyn 90]
  8470: 52 07 bb 00              jump @496 if a0 != 0
      :                          @481
  8474: 95 55 10                 s0 = s0 + 0x10
  8477: 82 18 20                 a1 = u64 [sp + 0x20]
  8480: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  8483: 95 66 38                 s1 = s1 + 0x38
  8486: 82 17 28                 a0 = u64 [sp + 0x28]
  8489: 95 77 01                 a0 = a0 + 0x1
  8492: 7b 17 28                 u64 [sp + 0x28] = a0
  8495: 52 08 34 ff              jump @464 if a1 != 0
      :                          @482
  8499: 28 6b                    jump @491
      :                          @483
  8501: 82 97 18                 a0 = u64 [a2 + 0x18]
  8504: 51 07 73                 jump @493 if a0 == 0
      :                          @484
  8507: 82 95 10                 s0 = u64 [a2 + 0x10]
  8510: 33 0a                    a3 = 0
  8512: 97 78 04                 a1 = a0 << 0x4
  8515: c8 58 08                 a1 = a1 + s0
  8518: 7b 18 20                 u64 [sp + 0x20] = a1
  8521: 7b 19 08                 u64 [sp + 0x8] = a2
  8524: 82 96                    s1 = u64 [a2]
  8526: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  8529: 97 77 04                 a0 = a0 << 0x4
  8532: 98 77 04                 a0 = a0 >> 0x4
  8535: 95 77 01                 a0 = a0 + 0x1
  8538: 7b 17                    u64 [sp] = a0
  8540: 95 66 08                 s1 = s1 + 0x8
  8543: 01                       fallthrough
      :                          @485
  8544: 7b 1a 28                 u64 [sp + 0x28] = a3
  8547: 82 69                    a2 = u64 [s1]
  8549: 51 09 17                 jump @488 if a2 == 0
      :                          @486
  8552: 82 1a 58                 a3 = u64 [sp + 0x58]
  8555: 82 17 50                 a0 = u64 [sp + 0x50]
  8558: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  8561: 82 aa 18                 a3 = u64 [a3 + 0x18]
  8564: b4 a0 02 b6 00           ra = 182, jump [a3]
      :                          @487 [@dyn 91]
  8569: 52 07 58                 jump @496 if a0 != 0
      :                          @488
  8572: 82 57                    a0 = u64 [s0]
  8574: 82 59 08                 a2 = u64 [s0 + 0x8]
  8577: 95 18 30                 a1 = sp + 0x30
  8580: b4 90 02 b8 00           ra = 184, jump [a2]
      :                          @489 [@dyn 92]
  8585: 52 07 48                 jump @496 if a0 != 0
      :                          @490
  8588: 95 66 10                 s1 = s1 + 0x10
  8591: 95 55 10                 s0 = s0 + 0x10
  8594: 82 1a 28                 a3 = u64 [sp + 0x28]
  8597: 95 aa 01                 a3 = a3 + 0x1
  8600: 82 17 20                 a0 = u64 [sp + 0x20]
  8603: ab 75 c5                 jump @485 if s0 != a0
      :                          @491
  8606: 82 19 08                 a2 = u64 [sp + 0x8]
  8609: 82 1a                    a3 = u64 [sp]
  8611: 82 97 08                 a0 = u64 [a2 + 0x8]
  8614: ac 7a 0d                 jump @494 if a3 <u a0
      :                          @492
  8617: 28 2d                    jump @497
      :                          @493
  8619: 33 0a                    a3 = 0
  8621: 82 97 08                 a0 = u64 [a2 + 0x8]
  8624: 54 07 26                 jump @497 if a0 <=u 0
      :                          @494
  8627: 82 97                    a0 = u64 [a2]
  8629: 97 a8 04                 a1 = a3 << 0x4
  8632: c8 87 09                 a2 = a0 + a1
  8635: 82 1a 58                 a3 = u64 [sp + 0x58]
  8638: 82 17 50                 a0 = u64 [sp + 0x50]
  8641: 82 98                    a1 = u64 [a2]
  8643: 82 99 08                 a2 = u64 [a2 + 0x8]
  8646: 82 aa 18                 a3 = u64 [a3 + 0x18]
  8649: b4 a0 02 ba 00           ra = 186, jump [a3]
      :                          @495 [@dyn 93]
  8654: 51 07 08                 jump @497 if a0 == 0
      :                          @496
  8657: 33 07 01                 a0 = 0x1
  8660: 28 05                    jump @498
      :                          @497
  8662: 33 07                    a0 = 0
  8664: 01                       fallthrough
      :                          @498
  8665: 82 10 80 00              ra = u64 [sp + 0x80]
  8669: 82 15 78                 s0 = u64 [sp + 0x78]
  8672: 82 16 70                 s1 = u64 [sp + 0x70]
  8675: 95 11 88 00              sp = sp + 0x88
  8679: 32 00                    ret
      :                          @499 [@dyn 94]
  8681: 32 00                    ret
      :                          @500 [@dyn 95]
  8683: 95 11 80                 sp = sp + 0xffffffffffffff80
  8686: 7b 10 78                 u64 [sp + 0x78] = ra
  8689: 7b 15 70                 u64 [sp + 0x70] = s0
  8692: 7b 16 68                 u64 [sp + 0x68] = s1
  8695: 64 92                    t0 = a2
  8697: 33 00                    ra = 0
  8699: 33 0b                    a4 = 0
  8701: 33 05                    s0 = 0
  8703: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
  8713: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
  8719: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
  8729: 82 79 10                 a2 = u64 [a0 + 0x10]
  8732: 7b 19 48                 u64 [sp + 0x48] = a2
  8735: 82 79                    a2 = u64 [a0]
  8737: 7b 19 38                 u64 [sp + 0x38] = a2
  8740: 82 77 08                 a0 = u64 [a0 + 0x8]
  8743: 7b 17 30                 u64 [sp + 0x30] = a0
  8746: 33 07 18 01 01           a0 = 0x10118
  8751: 7b 17 08                 u64 [sp + 0x8] = a0
  8754: 3a 07 58 00 03           a0 = u64 [0x30058]
  8759: 7b 17 60                 u64 [sp + 0x60] = a0
  8762: 7b 18 58                 u64 [sp + 0x58] = a1
  8765: 95 88 08                 a1 = a1 + 0x8
  8768: 7b 18                    u64 [sp] = a1
  8770: 33 0c 0a                 a5 = 0xa
  8773: 7b 12 20                 u64 [sp + 0x20] = t0
  8776: 7b 13 18                 u64 [sp + 0x18] = t1
  8779: 7b 14 10                 u64 [sp + 0x10] = t2
  8782: 28 3b                    jump @504
      :                          @501
  8784: 64 06                    s1 = ra
  8786: c8 89 07                 a0 = a2 + a1
  8789: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
  8792: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  8795: 88 77 01                 a0 = a0 <u 0x1
  8798: 01                       fallthrough
      :                          @502
  8799: 82 1a 48                 a3 = u64 [sp + 0x48]
  8802: 78 a7                    u8 [a3] = a0
  8804: 82 17 30                 a0 = u64 [sp + 0x30]
  8807: 82 7a 18                 a3 = u64 [a0 + 0x18]
  8810: 82 17 38                 a0 = u64 [sp + 0x38]
  8813: b4 a0 02 c0 00           ra = 192, jump [a3]
      :                          @503 [@dyn 96]
  8818: 64 5b                    a4 = s0
  8820: 82 12 20                 t0 = u64 [sp + 0x20]
  8823: 82 13 18                 t1 = u64 [sp + 0x18]
  8826: 82 14 10                 t2 = u64 [sp + 0x10]
  8829: 64 60                    ra = s1
  8831: 33 0c 0a                 a5 = 0xa
  8834: 82 15 40                 s0 = u64 [sp + 0x40]
  8837: 52 07 64 01              jump @545 if a0 != 0
      :                          @504
  8841: 84 57 ff 00              a0 = s0 & 0xff
  8845: 52 07 58 01              jump @544 if a0 != 0
      :                          @505
  8849: 7b 1b 50                 u64 [sp + 0x50] = a4
  8852: ae 02 0a                 jump @508 if t0 >=u ra
      :                          @506
  8855: 28 ef 00                 jump @535
      :                          @507
  8858: ac 02 ec 00              jump @535 if t0 <u ra
      :                          @508
  8862: c9 02 08                 a1 = t0 - ra
  8865: 82 16 58                 s1 = u64 [sp + 0x58]
  8868: c8 06 06                 s1 = s1 + ra
  8871: 55 18 10 1d              jump @514 if a1 >=u 16
      :                          @509
  8875: aa 02 d8 00              jump @534 if t0 == ra
      :                          @510
  8879: 33 0a                    a3 = 0
  8881: 01                       fallthrough
      :                          @511
  8882: c8 a6 07                 a0 = s1 + a3
  8885: 7c 77                    a0 = u8 [a0]
  8887: aa c7 a5 00              jump @529 if a0 == a5
      :                          @512
  8891: 95 aa 01                 a3 = a3 + 0x1
  8894: ab a8 f4                 jump @511 if a1 != a3
      :                          @513
  8897: 28 c2 00                 jump @534
      :                          @514
  8900: 95 69 07                 a2 = s1 + 0x7
  8903: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
  8906: c9 6a 07                 a0 = a3 - s1
  8909: d3 6a 0a                 a3 = a3 ^ s1
  8912: 88 aa 01                 a3 = a3 <u 0x1
  8915: 88 7b 01                 a4 = a0 <u 0x1
  8918: d4 ba 0a                 a3 = a3 | a4
  8921: 51 0a 45                 jump @520 if a3 == 0
      :                          @515
  8924: 33 07                    a0 = 0
  8926: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  8929: 82 1b                    a4 = u64 [sp]
  8931: c8 0b 0b                 a4 = a4 + ra
  8934: 28 08                    jump @517
      :                          @516
  8936: 82 1b                    a4 = u64 [sp]
  8938: c8 0b 0b                 a4 = a4 + ra
  8941: 01                       fallthrough
      :                          @517
  8942: c8 76 0c                 a5 = s1 + a0
  8945: 82 cc                    a5 = u64 [a5]
  8947: c8 7b 09                 a2 = a4 + a0
  8950: 82 99                    a2 = u64 [a2]
  8952: d3 4c 05                 s0 = a5 ^ t2
  8955: c8 35 05                 s0 = s0 + t1
  8958: e0 c5 0c                 a5 = s0 & ~a5
  8961: d3 49 05                 s0 = a2 ^ t2
  8964: c8 35 05                 s0 = s0 + t1
  8967: e0 95 09                 a2 = s0 & ~a2
  8970: d4 c9 09                 a2 = a2 | a5
  8973: 82 1c 60                 a5 = u64 [sp + 0x60]
  8976: d2 c9 09                 a2 = a2 & a5
  8979: 52 09 1f                 jump @523 if a2 != 0
      :                          @518
  8982: 95 77 10                 a0 = a0 + 0x10
  8985: ae 7a d5                 jump @517 if a3 >=u a0
      :                          @519
  8988: 28 16                    jump @523
      :                          @520
  8990: c8 a6 0b                 a4 = s1 + a3
  8993: 7c bb                    a4 = u8 [a4]
  8995: aa cb 51                 jump @532 if a4 == a5
      :                          @521
  8998: 95 aa 01                 a3 = a3 + 0x1
  9001: ab a7 f5                 jump @520 if a0 != a3
      :                          @522
  9004: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  9007: ae 7a b9                 jump @516 if a3 >=u a0
      :                          @523
  9010: aa 87 9b 00              jump @541 if a0 == a1
      :                          @524
  9014: 33 0a                    a3 = 0
  9016: c8 76 06                 s1 = s1 + a0
  9019: c9 72 08                 a1 = t0 - a0
  9022: c9 08 08                 a1 = a1 - ra
  9025: 33 0c 0a                 a5 = 0xa
  9028: 82 1b 50                 a4 = u64 [sp + 0x50]
  9031: 01                       fallthrough
      :                          @525
  9032: c8 a6 09                 a2 = s1 + a3
  9035: 7c 99                    a2 = u8 [a2]
  9037: aa c9 0b                 jump @528 if a2 == a5
      :                          @526
  9040: 95 aa 01                 a3 = a3 + 0x1
  9043: ab a8 f5                 jump @525 if a1 != a3
      :                          @527
  9046: 28 2d                    jump @534
      :                          @528
  9048: c8 7a 0a                 a3 = a3 + a0
  9051: 01                       fallthrough
      :                          @529
  9052: c8 0a 0a                 a3 = a3 + ra
  9055: 95 a0 01                 ra = a3 + 0x1
  9058: ae 2a 38 ff              jump @507 if a3 >=u t0
      :                          @530
  9062: 82 17 58                 a0 = u64 [sp + 0x58]
  9065: c8 7a 0a                 a3 = a3 + a0
  9068: 7c a7                    a0 = u8 [a3]
  9070: ab c7 2c ff              jump @507 if a0 != a5
      :                          @531
  9074: 28 62                    jump @542
      :                          @532
  9076: 82 1b 50                 a4 = u64 [sp + 0x50]
  9079: c8 0a 0a                 a3 = a3 + ra
  9082: 95 a0 01                 ra = a3 + 0x1
  9085: ac 2a e9                 jump @530 if a3 <u t0
      :                          @533
  9088: 28 1a ff                 jump @507
      :                          @534
  9091: 64 20                    ra = t0
  9093: 01                       fallthrough
      :                          @535
  9094: 49 11 40 01              u64 [sp + 64] = 0x1
  9098: 64 b5                    s0 = a4
  9100: 64 26                    s1 = t0
  9102: aa 2b 57                 jump @544 if a4 == t0
      :                          @536
  9105: 82 17 48                 a0 = u64 [sp + 0x48]
  9108: 7c 77                    a0 = u8 [a0]
  9110: 51 07 23                 jump @539 if a0 == 0
      :                          @537
  9113: 82 17 30                 a0 = u64 [sp + 0x30]
  9116: 82 7a 18                 a3 = u64 [a0 + 0x18]
  9119: 33 09 04                 a2 = 0x4
  9122: 82 17 38                 a0 = u64 [sp + 0x38]
  9125: 82 18 08                 a1 = u64 [sp + 0x8]
  9128: 7b 10 28                 u64 [sp + 0x28] = ra
  9131: b4 a0 02 c2 00           ra = 194, jump [a3]
      :                          @538 [@dyn 97]
  9136: 82 1b 50                 a4 = u64 [sp + 0x50]
  9139: 82 10 28                 ra = u64 [sp + 0x28]
  9142: 52 07 33                 jump @545 if a0 != 0
      :                          @539
  9145: c9 b6 09                 a2 = s1 - a4
  9148: 82 18 58                 a1 = u64 [sp + 0x58]
  9151: c8 b8 08                 a1 = a1 + a4
  9154: ab b6 8e fe              jump @501 if s1 != a4
      :                          @540
  9158: 64 06                    s1 = ra
  9160: 33 07                    a0 = 0
  9162: 28 95 fe                 jump @502
      :                          @541
  9165: 64 20                    ra = t0
  9167: 82 1b 50                 a4 = u64 [sp + 0x50]
  9170: 28 b4                    jump @535
      :                          @542
  9172: 49 11 40                 u64 [sp + 64] = 0
  9175: 64 05                    s0 = ra
  9177: 64 06                    s1 = ra
  9179: 82 17 48                 a0 = u64 [sp + 0x48]
  9182: 7c 77                    a0 = u8 [a0]
  9184: 52 07 b9                 jump @537 if a0 != 0
      :                          @543
  9187: 28 d6                    jump @539
      :                          @544
  9189: 33 07                    a0 = 0
  9191: 28 06                    jump @546
      :                          @545
  9193: 33 07 01                 a0 = 0x1
  9196: 01                       fallthrough
      :                          @546
  9197: 82 10 78                 ra = u64 [sp + 0x78]
  9200: 82 15 70                 s0 = u64 [sp + 0x70]
  9203: 82 16 68                 s1 = u64 [sp + 0x68]
  9206: 95 11 80 00              sp = sp + 0x80
  9210: 32 00                    ret
      :                          @547 [@dyn 98]
  9212: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  9215: 7b 10 20                 u64 [sp + 0x20] = ra
  9218: 7b 15 18                 u64 [sp + 0x18] = s0
  9221: 7b 16 10                 u64 [sp + 0x10] = s1
  9224: 82 75 10                 s0 = u64 [a0 + 0x10]
  9227: 7c 59                    a2 = u8 [s0]
  9229: 82 7b                    a4 = u64 [a0]
  9231: 82 76 08                 s1 = u64 [a0 + 0x8]
  9234: 51 09 33                 jump @551 if a2 == 0
      :                          @548
  9237: 82 6a 18                 a3 = u64 [s1 + 0x18]
  9240: 7b 18 08                 u64 [sp + 0x8] = a1
  9243: 33 08 18 01 01           a1 = 0x10118
  9248: 33 09 04                 a2 = 0x4
  9251: 64 b7                    a0 = a4
  9253: 7b 1b                    u64 [sp] = a4
  9255: b4 a0 02 c6 00           ra = 198, jump [a3]
      :                          @549 [@dyn 99]
  9260: 82 18 08                 a1 = u64 [sp + 0x8]
  9263: 82 1b                    a4 = u64 [sp]
  9265: 51 07 14                 jump @551 if a0 == 0
      :                          @550
  9268: 33 07 01                 a0 = 0x1
  9271: 82 10 20                 ra = u64 [sp + 0x20]
  9274: 82 15 18                 s0 = u64 [sp + 0x18]
  9277: 82 16 10                 s1 = u64 [sp + 0x10]
  9280: 95 11 28                 sp = sp + 0x28
  9283: 32 00                    ret
      :                          @551
  9285: 83 87                    i32 a0 = a1 + 0
  9287: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  9290: 88 77 01                 a0 = a0 <u 0x1
  9293: 78 57                    u8 [s0] = a0
  9295: 82 6c 20                 a5 = u64 [s1 + 0x20]
  9298: 64 b7                    a0 = a4
  9300: 82 10 20                 ra = u64 [sp + 0x20]
  9303: 82 15 18                 s0 = u64 [sp + 0x18]
  9306: 82 16 10                 s1 = u64 [sp + 0x10]
  9309: 95 11 28                 sp = sp + 0x28
  9312: 32 0c                    jump [a5]
      :                          @552 [@dyn 100]
  9314: 64 8a                    a3 = a1
  9316: 33 08 e8 00 01           a1 = 0x100e8
  9321: 64 a9                    a2 = a3
  9323: 28 99 fb                 jump @461
      :                          @553
  9326: 95 11 70 ff              sp = sp + 0xffffffffffffff70
  9330: 7b 10 88 00              u64 [sp + 0x88] = ra
  9334: 7b 15 80 00              u64 [sp + 0x80] = s0
  9338: 7b 16 78                 u64 [sp + 0x78] = s1
  9341: 64 75                    s0 = a0
  9343: 7c 77 08                 a0 = u8 [a0 + 0x8]
  9346: 64 8b                    a4 = a1
  9348: 33 08 01                 a1 = 0x1
  9351: 33 06 01                 s1 = 0x1
  9354: 51 07 1d                 jump @555 if a0 == 0
      :                          @554
  9357: 78 56 08                 u8 [s0 + 0x8] = s1
  9360: 46 15 09 01              u8 [s0 + 9] = 0x1
  9364: 64 57                    a0 = s0
  9366: 82 10 88 00              ra = u64 [sp + 0x88]
  9370: 82 15 80 00              s0 = u64 [sp + 0x80]
  9374: 82 16 78                 s1 = u64 [sp + 0x78]
  9377: 95 11 90 00              sp = sp + 0x90
  9381: 32 00                    ret
      :                          @555
  9383: 64 9a                    a3 = a2
  9385: 82 5c                    a5 = u64 [s0]
  9387: 80 c7 34                 a0 = u32 [a5 + 0x34]
  9390: 7c 58 09                 a1 = u8 [s0 + 0x9]
  9393: 84 79 04                 a2 = a0 & 0x4
  9396: 52 09 45                 jump @561 if a2 != 0
      :                          @556
  9399: 51 08 32                 jump @559 if a1 == 0
      :                          @557
  9402: 82 c8 28                 a1 = u64 [a5 + 0x28]
  9405: 82 c7 20                 a0 = u64 [a5 + 0x20]
  9408: 82 83 18                 t1 = u64 [a1 + 0x18]
  9411: 33 08 1c 01 01           a1 = 0x1011c
  9416: 33 09 02                 a2 = 0x2
  9419: 64 a6                    s1 = a3
  9421: 7b 1b 10                 u64 [sp + 0x10] = a4
  9424: 7b 1c 08                 u64 [sp + 0x8] = a5
  9427: b4 30 02 ca 00           ra = 202, jump [t1]
      :                          @558 [@dyn 101]
  9432: 82 1c 08                 a5 = u64 [sp + 0x8]
  9435: 82 1b 10                 a4 = u64 [sp + 0x10]
  9438: 64 6a                    a3 = s1
  9440: 33 08 01                 a1 = 0x1
  9443: 33 06 01                 s1 = 0x1
  9446: 52 07 a7                 jump @554 if a0 != 0
      :                          @559
  9449: 64 b7                    a0 = a4
  9451: 64 c8                    a1 = a5
  9453: b4 a0 02 cc 00           ra = 204, jump [a3]
      :                          @560 [@dyn 102]
  9458: 33 08 01                 a1 = 0x1
  9461: 64 76                    s1 = a0
  9463: 28 96                    jump @554
      :                          @561
  9465: 52 08 37                 jump @565 if a1 != 0
      :                          @562
  9468: 82 c8 28                 a1 = u64 [a5 + 0x28]
  9471: 82 c7 20                 a0 = u64 [a5 + 0x20]
  9474: 82 83 18                 t1 = u64 [a1 + 0x18]
  9477: 33 08 20 01 01           a1 = 0x10120
  9482: 33 09 01                 a2 = 0x1
  9485: 33 06 01                 s1 = 0x1
  9488: 7b 1a                    u64 [sp] = a3
  9490: 7b 1b 10                 u64 [sp + 0x10] = a4
  9493: 7b 1c 08                 u64 [sp + 0x8] = a5
  9496: b4 30 02 ce 00           ra = 206, jump [t1]
      :                          @563 [@dyn 103]
  9501: 82 1c 08                 a5 = u64 [sp + 0x8]
  9504: 82 1b 10                 a4 = u64 [sp + 0x10]
  9507: 82 1a                    a3 = u64 [sp]
  9509: 33 08 01                 a1 = 0x1
  9512: 52 07 65 ff              jump @554 if a0 != 0
      :                          @564
  9516: 81 c7 34                 a0 = i32 [a5 + 0x34]
  9519: 01                       fallthrough
      :                          @565
  9520: 33 06 01                 s1 = 0x1
  9523: 78 16 37                 u8 [sp + 0x37] = s1
  9526: 82 c8 20                 a1 = u64 [a5 + 0x20]
  9529: 82 c9 28                 a2 = u64 [a5 + 0x28]
  9532: 7b 18 18                 u64 [sp + 0x18] = a1
  9535: 7b 19 20                 u64 [sp + 0x20] = a2
  9538: 95 18 37                 a1 = sp + 0x37
  9541: 7b 18 28                 u64 [sp + 0x28] = a1
  9544: 81 c8 30                 a1 = i32 [a5 + 0x30]
  9547: 7c c9 38                 a2 = u8 [a5 + 0x38]
  9550: 82 c3                    t1 = u64 [a5]
  9552: 82 c4 08                 t2 = u64 [a5 + 0x8]
  9555: 82 c0 10                 ra = u64 [a5 + 0x10]
  9558: 82 c2 18                 t0 = u64 [a5 + 0x18]
  9561: 7a 17 6c                 u32 [sp + 0x6c] = a0
  9564: 7a 18 68                 u32 [sp + 0x68] = a1
  9567: 78 19 70                 u8 [sp + 0x70] = a2
  9570: 7b 13 38                 u64 [sp + 0x38] = t1
  9573: 7b 14 40                 u64 [sp + 0x40] = t2
  9576: 7b 10 48                 u64 [sp + 0x48] = ra
  9579: 7b 12 50                 u64 [sp + 0x50] = t0
  9582: 95 17 18                 a0 = sp + 0x18
  9585: 7b 17 58                 u64 [sp + 0x58] = a0
  9588: 33 07 e8 00 01           a0 = 0x100e8
  9593: 7b 17 60                 u64 [sp + 0x60] = a0
  9596: 95 18 38                 a1 = sp + 0x38
  9599: 64 b7                    a0 = a4
  9601: b4 a0 02 d0 00           ra = 208, jump [a3]
      :                          @566 [@dyn 104]
  9606: 52 07 21                 jump @569 if a0 != 0
      :                          @567
  9609: 82 18 60                 a1 = u64 [sp + 0x60]
  9612: 82 17 58                 a0 = u64 [sp + 0x58]
  9615: 82 8a 18                 a3 = u64 [a1 + 0x18]
  9618: 33 08 1e 01 01           a1 = 0x1011e
  9623: 33 09 02                 a2 = 0x2
  9626: b4 a0 02 d2 00           ra = 210, jump [a3]
      :                          @568 [@dyn 105]
  9631: 64 76                    s1 = a0
  9633: 33 08 01                 a1 = 0x1
  9636: 28 e9 fe                 jump @554
      :                          @569
  9639: 33 08 01                 a1 = 0x1
  9642: 28 e3 fe                 jump @554
      :                          @570
  9645: 51 08 9b 00              jump @591 if a1 == 0
      :                          @571
  9649: 64 79                    a2 = a0
  9651: 7c 77                    a0 = u8 [a0]
  9653: 51 07 91 00              jump @590 if a0 == 0
      :                          @572
  9657: 51 27 ff 00 90 00        jump @592 if a0 == 255
      :                          @573
  9663: 6c 7a                    a3 = sext.b a0
  9665: 57 0a 09                 jump @575 if a3 <s 0
      :                          @574
  9668: 33 0a                    a3 = 0
  9670: 33 08                    a1 = 0
  9672: 28 73                    jump @589
      :                          @575
  9674: 55 27 c0 00 0d           jump @577 if a0 >=u 192
      :                          @576
  9679: 33 0a 01                 a3 = 0x1
  9682: 33 0b 80                 a4 = 0xffffffffffffff80
  9685: 28 4a                    jump @586
      :                          @577
  9687: 55 27 e0 00 0e           jump @579 if a0 >=u 224
      :                          @578
  9692: 33 0a 02                 a3 = 0x2
  9695: 33 0b 40 ff              a4 = 0xffffffffffffff40
  9699: 28 3c                    jump @586
      :                          @579
  9701: 55 27 f0 00 0e           jump @581 if a0 >=u 240
      :                          @580
  9706: 33 0a 03                 a3 = 0x3
  9709: 33 0b 20 ff              a4 = 0xffffffffffffff20
  9713: 28 2e                    jump @586
      :                          @581
  9715: 55 27 f8 00 0e           jump @583 if a0 >=u 248
      :                          @582
  9720: 33 0a 04                 a3 = 0x4
  9723: 33 0b 10 ff              a4 = 0xffffffffffffff10
  9727: 28 20                    jump @586
      :                          @583
  9729: 55 27 fc 00 0e           jump @585 if a0 >=u 252
      :                          @584
  9734: 33 0a 05                 a3 = 0x5
  9737: 33 0b 08 ff              a4 = 0xffffffffffffff08
  9741: 28 12                    jump @586
      :                          @585
  9743: 88 7a fe 00              a3 = a0 <u 0xfe
  9747: 33 0b 04 ff              a4 = 0xffffffffffffff04
  9751: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  9755: 85 aa 07                 a3 = a3 ^ 0x7
  9758: 01                       fallthrough
      :                          @586
  9759: ae 8a 2b                 jump @593 if a3 >=u a1
      :                          @587
  9762: 33 08                    a1 = 0
  9764: c8 b7 07                 a0 = a0 + a4
  9767: 64 ab                    a4 = a3
  9769: 01                       fallthrough
      :                          @588
  9770: c8 b9 0c                 a5 = a2 + a4
  9773: 7c cc                    a5 = u8 [a5]
  9775: 97 88 08                 a1 = a1 << 0x8
  9778: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  9781: d4 c8 08                 a1 = a1 | a5
  9784: 52 0b f2                 jump @588 if a4 != 0
      :                          @589
  9787: 8a a9 03                 i32 a2 = a3 << 0x3
  9790: cf 97 07                 a0 = a0 << a2
  9793: c8 87 07                 a0 = a0 + a1
  9796: 32 00                    ret
      :                          @590
  9798: 32 00                    ret
      :                          @591
  9800: 00                       trap
      :                          @592
  9801: 00                       trap
      :                          @593
  9802: 00                       trap
