// RO data = 772/772 bytes
// RW data = 96/72384 bytes
// Stack size = 65536 bytes
// RO data = [97, 117, 116, 104, 95, 99, 111, 112, 121, 32, 114, 101, 102, 32, 105, 110, 112, 117, 116, 95, 115, 108, 105, 99, 101, 61, 32, 111, 117, 116, 112, 117, 116, 95, 98, 121, 116, 101, 115, 95, 51, 54, 61, 32, 111, 117, 116, 112, 117, 116, 95, 108, 101, 110, 103, 116, 104, 61, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 26, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 43, 0, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 97, 115, 115, 105, 103, 110, 101, 100, 32, 99, 111, 114, 101, 32, 48, 43, 49, 32, 115, 101, 114, 118, 105, 99, 101, 32, 0, 0, 0, 0, 0, 0, 112, 0, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 111, 117, 116, 112, 117, 116, 95, 108, 101, 110, 32, 65, 67, 67, 32, 111, 117, 116, 112, 117, 116, 95, 108, 101, 110, 61, 32, 105, 115, 32, 108, 101, 115, 115, 32, 116, 104, 97, 110, 32, 51, 54, 32, 98, 121, 116, 101, 115, 44, 32, 114, 101, 116, 117, 114, 110, 105, 110, 103, 32, 101, 114, 114, 111, 114, 0, 0, 0, 0, 0, 0, 0, 160, 0, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 186, 0, 1, 0, 0, 0, 0, 0, 39, 0, 0, 0, 0, 0, 0, 0, 150, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 152, 0, 0, 0, 0, 0, 0, 0, 158, 0, 0, 0, 0, 0, 0, 0, 166, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 202, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 204, 0, 0, 0, 0, 0, 0, 0, 210, 0, 0, 0, 0, 0, 0, 0, 214, 0, 0, 0, 0, 0, 0, 0, 32, 32, 32, 32, 44, 32, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3, 11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4, 7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8, 9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13, 2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9, 12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11, 13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10, 6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5, 10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3]
// RW data = [40, 201, 189, 242, 103, 230, 9, 106, 59, 167, 202, 132, 133, 174, 103, 187, 43, 248, 148, 254, 114, 243, 110, 60, 241, 54, 29, 95, 58, 245, 79, 165, 209, 130, 230, 173, 127, 82, 14, 81, 31, 108, 62, 43, 140, 104, 5, 155, 107, 189, 65, 251, 171, 217, 131, 31, 121, 33, 126, 19, 25, 205, 224, 91, 8, 201, 188, 243, 103, 230, 9, 106, 148, 66, 190, 4, 84, 38, 124, 224, 75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 3277
// Code size = 10346 bytes

      :                          @0
     0: 28 36 04 00 00           jump @65
      :                          @1
     5: 28 05 15 00 00           jump @192
      :                          @2
    10: 28 a5 18                 jump @271
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 80 89 34                 a2 = u32 [a1 + 0x34]
    24: 82 77                    a0 = u64 [a0]
    26: 84 9a 10                 a3 = a2 & 0x10
    29: 52 0a 16                 jump @6 if a3 != 0
      :                          @4
    32: 84 99 20                 a2 = a2 & 0x20
    35: 52 09 41                 jump @9 if a2 != 0
      :                          @5
    38: 7c 77                    a0 = u8 [a0]
    40: 82 10 80 00              ra = u64 [sp + 0x80]
    44: 95 11 88 00              sp = sp + 0x88
    48: 28 4d 1e                 jump @410
      :                          @6
    51: 7c 77                    a0 = u8 [a0]
    53: 33 0b 81 00              a4 = 0x81
    57: 95 19 7f                 a2 = sp + 0x7f
    60: 33 02 57                 t0 = 0x57
    63: 01                       fallthrough
      :                          @7
    64: 64 bc                    a5 = a4
    66: 84 7b 0f                 a4 = a0 & 0xf
    69: 97 77 38                 a0 = a0 << 0x38
    72: 98 77 3c                 a0 = a0 >> 0x3c
    75: 88 b3 0a                 t1 = a4 <u 0xa
    78: 33 0a 30                 a3 = 0x30
    81: da 32 0a                 a3 = t0 if t1 == 0
    84: be ba 0a                 i32 a3 = a3 + a4
    87: 78 9a                    u8 [a2] = a3
    89: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
    92: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
    95: 52 07 e1                 jump @7 if a0 != 0
      :                          @8
    98: 28 31                    jump @11
      :                          @9
   100: 7c 77                    a0 = u8 [a0]
   102: 33 0b 81 00              a4 = 0x81
   106: 95 19 7f                 a2 = sp + 0x7f
   109: 33 02 37                 t0 = 0x37
   112: 01                       fallthrough
      :                          @10
   113: 64 bc                    a5 = a4
   115: 84 7b 0f                 a4 = a0 & 0xf
   118: 97 77 38                 a0 = a0 << 0x38
   121: 98 77 3c                 a0 = a0 >> 0x3c
   124: 88 b3 0a                 t1 = a4 <u 0xa
   127: 33 0a 30                 a3 = 0x30
   130: da 32 0a                 a3 = t0 if t1 == 0
   133: be ba 0a                 i32 a3 = a3 + a4
   136: 78 9a                    u8 [a2] = a3
   138: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
   141: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
   144: 52 07 e1                 jump @10 if a0 != 0
      :                          @11
   147: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   150: 56 27 80 00 27           jump @14 if a0 >u 128
      :                          @12
   155: 9a bb 81 00              a4 = 0x81 - a4
   159: 64 1a                    a3 = sp
   161: c8 7a 0a                 a3 = a3 + a0
   164: 33 09 02                 a2 = 0x2
   167: 64 87                    a0 = a1
   169: 33 08 7a 01 01           a1 = 0x1017a
   174: 50 10 04 f7 1e           ra = 4, jump @420
      :                          @13 [@dyn 2]
   179: 82 10 80 00              ra = u64 [sp + 0x80]
   183: 95 11 88 00              sp = sp + 0x88
   187: 32 00                    ret
      :                          @14
   189: 00                       trap
      :                          @15 [@dyn 3]
   190: 95 11 c0                 sp = sp + 0xffffffffffffffc0
   193: 7b 10 38                 u64 [sp + 0x38] = ra
   196: 7b 15 30                 u64 [sp + 0x30] = s0
   199: 7b 16 28                 u64 [sp + 0x28] = s1
   202: 7b 18 08                 u64 [sp + 0x8] = a1
   205: 82 89 28                 a2 = u64 [a1 + 0x28]
   208: 82 76                    s1 = u64 [a0]
   210: 82 75 08                 s0 = u64 [a0 + 0x8]
   213: 82 87 20                 a0 = u64 [a1 + 0x20]
   216: 82 9a 18                 a3 = u64 [a2 + 0x18]
   219: 33 08 38 01 01           a1 = 0x10138
   224: 33 09 01                 a2 = 0x1
   227: b4 a0 01 08              ra = 8, jump [a3]
      :                          @16 [@dyn 4]
   231: 82 18 08                 a1 = u64 [sp + 0x8]
   234: 7b 18 10                 u64 [sp + 0x10] = a1
   237: 78 17 18                 u8 [sp + 0x18] = a0
   240: 46 11 19                 u8 [sp + 25] = 0
   243: 51 05 2c                 jump @21 if s0 == 0
      :                          @17
   246: 33 07 02                 a0 = 0x2
   249: 7b 17                    u64 [sp] = a0
   251: 01                       fallthrough
      :                          @18
   252: 95 67 01                 a0 = s1 + 0x1
   255: 7b 17 08                 u64 [sp + 0x8] = a0
   258: 7b 16 20                 u64 [sp + 0x20] = s1
   261: 95 17 10                 a0 = sp + 0x10
   264: 95 18 20                 a1 = sp + 0x20
   267: 82 19                    a2 = u64 [sp]
   269: 50 10 0a 80 25           ra = 10, jump @565
      :                          @19 [@dyn 5]
   274: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
   277: 82 16 08                 s1 = u64 [sp + 0x8]
   280: 52 05 e4                 jump @18 if s0 != 0
      :                          @20
   283: 7c 17 18                 a0 = u8 [sp + 0x18]
   286: 01                       fallthrough
      :                          @21
   287: 33 08 01                 a1 = 0x1
   290: 52 07 1e                 jump @24 if a0 != 0
      :                          @22
   293: 82 17 10                 a0 = u64 [sp + 0x10]
   296: 82 78 28                 a1 = u64 [a0 + 0x28]
   299: 82 77 20                 a0 = u64 [a0 + 0x20]
   302: 82 8a 18                 a3 = u64 [a1 + 0x18]
   305: 33 08 79 01 01           a1 = 0x10179
   310: 33 09 01                 a2 = 0x1
   313: b4 a0 01 0c              ra = 12, jump [a3]
      :                          @23 [@dyn 6]
   317: 64 78                    a1 = a0
   319: 01                       fallthrough
      :                          @24
   320: 64 87                    a0 = a1
   322: 82 10 38                 ra = u64 [sp + 0x38]
   325: 82 15 30                 s0 = u64 [sp + 0x30]
   328: 82 16 28                 s1 = u64 [sp + 0x28]
   331: 95 11 40                 sp = sp + 0x40
   334: 32 00                    ret
      :                          @25 [@dyn 7]
   336: 95 11 d0                 sp = sp + 0xffffffffffffffd0
   339: 7b 10 28                 u64 [sp + 0x28] = ra
   342: 7b 15 20                 u64 [sp + 0x20] = s0
   345: 7b 16 18                 u64 [sp + 0x18] = s1
   348: 64 85                    s0 = a1
   350: 82 88 28                 a1 = u64 [a1 + 0x28]
   353: 82 5a 20                 a3 = u64 [s0 + 0x20]
   356: 82 8b 18                 a4 = u64 [a1 + 0x18]
   359: 64 76                    s1 = a0
   361: 33 08 38 01 01           a1 = 0x10138
   366: 33 09 01                 a2 = 0x1
   369: 64 a7                    a0 = a3
   371: b4 b0 01 10              ra = 16, jump [a4]
      :                          @26 [@dyn 8]
   375: 7b 15                    u64 [sp] = s0
   377: 78 17 08                 u8 [sp + 0x8] = a0
   380: 46 11 09                 u8 [sp + 9] = 0
   383: 7b 16 10                 u64 [sp + 0x10] = s1
   386: 33 05 02                 s0 = 0x2
   389: 64 17                    a0 = sp
   391: 95 18 10                 a1 = sp + 0x10
   394: 33 09 02                 a2 = 0x2
   397: 50 10 12 00 25           ra = 18, jump @565
      :                          @27 [@dyn 9]
   402: 95 67 01                 a0 = s1 + 0x1
   405: 7b 17 10                 u64 [sp + 0x10] = a0
   408: 64 17                    a0 = sp
   410: 95 18 10                 a1 = sp + 0x10
   413: 64 59                    a2 = s0
   415: 50 10 14 ee 24           ra = 20, jump @565
      :                          @28 [@dyn 10]
   420: 95 67 02                 a0 = s1 + 0x2
   423: 7b 17 10                 u64 [sp + 0x10] = a0
   426: 64 17                    a0 = sp
   428: 95 18 10                 a1 = sp + 0x10
   431: 64 59                    a2 = s0
   433: 50 10 16 dc 24           ra = 22, jump @565
      :                          @29 [@dyn 11]
   438: 95 67 03                 a0 = s1 + 0x3
   441: 7b 17 10                 u64 [sp + 0x10] = a0
   444: 64 17                    a0 = sp
   446: 95 18 10                 a1 = sp + 0x10
   449: 64 59                    a2 = s0
   451: 50 10 18 ca 24           ra = 24, jump @565
      :                          @30 [@dyn 12]
   456: 95 67 04                 a0 = s1 + 0x4
   459: 7b 17 10                 u64 [sp + 0x10] = a0
   462: 64 17                    a0 = sp
   464: 95 18 10                 a1 = sp + 0x10
   467: 64 59                    a2 = s0
   469: 50 10 1a b8 24           ra = 26, jump @565
      :                          @31 [@dyn 13]
   474: 95 67 05                 a0 = s1 + 0x5
   477: 7b 17 10                 u64 [sp + 0x10] = a0
   480: 64 17                    a0 = sp
   482: 95 18 10                 a1 = sp + 0x10
   485: 64 59                    a2 = s0
   487: 50 10 1c a6 24           ra = 28, jump @565
      :                          @32 [@dyn 14]
   492: 95 67 06                 a0 = s1 + 0x6
   495: 7b 17 10                 u64 [sp + 0x10] = a0
   498: 64 17                    a0 = sp
   500: 95 18 10                 a1 = sp + 0x10
   503: 64 59                    a2 = s0
   505: 50 10 1e 94 24           ra = 30, jump @565
      :                          @33 [@dyn 15]
   510: 95 67 07                 a0 = s1 + 0x7
   513: 7b 17 10                 u64 [sp + 0x10] = a0
   516: 64 17                    a0 = sp
   518: 95 18 10                 a1 = sp + 0x10
   521: 64 59                    a2 = s0
   523: 50 10 20 82 24           ra = 32, jump @565
      :                          @34 [@dyn 16]
   528: 95 67 08                 a0 = s1 + 0x8
   531: 7b 17 10                 u64 [sp + 0x10] = a0
   534: 64 17                    a0 = sp
   536: 95 18 10                 a1 = sp + 0x10
   539: 64 59                    a2 = s0
   541: 50 10 22 70 24           ra = 34, jump @565
      :                          @35 [@dyn 17]
   546: 95 67 09                 a0 = s1 + 0x9
   549: 7b 17 10                 u64 [sp + 0x10] = a0
   552: 64 17                    a0 = sp
   554: 95 18 10                 a1 = sp + 0x10
   557: 64 59                    a2 = s0
   559: 50 10 24 5e 24           ra = 36, jump @565
      :                          @36 [@dyn 18]
   564: 95 67 0a                 a0 = s1 + 0xa
   567: 7b 17 10                 u64 [sp + 0x10] = a0
   570: 64 17                    a0 = sp
   572: 95 18 10                 a1 = sp + 0x10
   575: 64 59                    a2 = s0
   577: 50 10 26 4c 24           ra = 38, jump @565
      :                          @37 [@dyn 19]
   582: 95 67 0b                 a0 = s1 + 0xb
   585: 7b 17 10                 u64 [sp + 0x10] = a0
   588: 64 17                    a0 = sp
   590: 95 18 10                 a1 = sp + 0x10
   593: 64 59                    a2 = s0
   595: 50 10 28 3a 24           ra = 40, jump @565
      :                          @38 [@dyn 20]
   600: 95 67 0c                 a0 = s1 + 0xc
   603: 7b 17 10                 u64 [sp + 0x10] = a0
   606: 64 17                    a0 = sp
   608: 95 18 10                 a1 = sp + 0x10
   611: 64 59                    a2 = s0
   613: 50 10 2a 28 24           ra = 42, jump @565
      :                          @39 [@dyn 21]
   618: 95 67 0d                 a0 = s1 + 0xd
   621: 7b 17 10                 u64 [sp + 0x10] = a0
   624: 64 17                    a0 = sp
   626: 95 18 10                 a1 = sp + 0x10
   629: 64 59                    a2 = s0
   631: 50 10 2c 16 24           ra = 44, jump @565
      :                          @40 [@dyn 22]
   636: 95 67 0e                 a0 = s1 + 0xe
   639: 7b 17 10                 u64 [sp + 0x10] = a0
   642: 64 17                    a0 = sp
   644: 95 18 10                 a1 = sp + 0x10
   647: 64 59                    a2 = s0
   649: 50 10 2e 04 24           ra = 46, jump @565
      :                          @41 [@dyn 23]
   654: 95 67 0f                 a0 = s1 + 0xf
   657: 7b 17 10                 u64 [sp + 0x10] = a0
   660: 64 17                    a0 = sp
   662: 95 18 10                 a1 = sp + 0x10
   665: 64 59                    a2 = s0
   667: 50 10 30 f2 23           ra = 48, jump @565
      :                          @42 [@dyn 24]
   672: 95 67 10                 a0 = s1 + 0x10
   675: 7b 17 10                 u64 [sp + 0x10] = a0
   678: 64 17                    a0 = sp
   680: 95 18 10                 a1 = sp + 0x10
   683: 64 59                    a2 = s0
   685: 50 10 32 e0 23           ra = 50, jump @565
      :                          @43 [@dyn 25]
   690: 95 67 11                 a0 = s1 + 0x11
   693: 7b 17 10                 u64 [sp + 0x10] = a0
   696: 64 17                    a0 = sp
   698: 95 18 10                 a1 = sp + 0x10
   701: 64 59                    a2 = s0
   703: 50 10 34 ce 23           ra = 52, jump @565
      :                          @44 [@dyn 26]
   708: 95 67 12                 a0 = s1 + 0x12
   711: 7b 17 10                 u64 [sp + 0x10] = a0
   714: 64 17                    a0 = sp
   716: 95 18 10                 a1 = sp + 0x10
   719: 64 59                    a2 = s0
   721: 50 10 36 bc 23           ra = 54, jump @565
      :                          @45 [@dyn 27]
   726: 95 67 13                 a0 = s1 + 0x13
   729: 7b 17 10                 u64 [sp + 0x10] = a0
   732: 64 17                    a0 = sp
   734: 95 18 10                 a1 = sp + 0x10
   737: 64 59                    a2 = s0
   739: 50 10 38 aa 23           ra = 56, jump @565
      :                          @46 [@dyn 28]
   744: 95 67 14                 a0 = s1 + 0x14
   747: 7b 17 10                 u64 [sp + 0x10] = a0
   750: 64 17                    a0 = sp
   752: 95 18 10                 a1 = sp + 0x10
   755: 64 59                    a2 = s0
   757: 50 10 3a 98 23           ra = 58, jump @565
      :                          @47 [@dyn 29]
   762: 95 67 15                 a0 = s1 + 0x15
   765: 7b 17 10                 u64 [sp + 0x10] = a0
   768: 64 17                    a0 = sp
   770: 95 18 10                 a1 = sp + 0x10
   773: 64 59                    a2 = s0
   775: 50 10 3c 86 23           ra = 60, jump @565
      :                          @48 [@dyn 30]
   780: 95 67 16                 a0 = s1 + 0x16
   783: 7b 17 10                 u64 [sp + 0x10] = a0
   786: 64 17                    a0 = sp
   788: 95 18 10                 a1 = sp + 0x10
   791: 64 59                    a2 = s0
   793: 50 10 3e 74 23           ra = 62, jump @565
      :                          @49 [@dyn 31]
   798: 95 67 17                 a0 = s1 + 0x17
   801: 7b 17 10                 u64 [sp + 0x10] = a0
   804: 64 17                    a0 = sp
   806: 95 18 10                 a1 = sp + 0x10
   809: 64 59                    a2 = s0
   811: 50 10 40 62 23           ra = 64, jump @565
      :                          @50 [@dyn 32]
   816: 95 67 18                 a0 = s1 + 0x18
   819: 7b 17 10                 u64 [sp + 0x10] = a0
   822: 64 17                    a0 = sp
   824: 95 18 10                 a1 = sp + 0x10
   827: 64 59                    a2 = s0
   829: 50 10 42 50 23           ra = 66, jump @565
      :                          @51 [@dyn 33]
   834: 95 67 19                 a0 = s1 + 0x19
   837: 7b 17 10                 u64 [sp + 0x10] = a0
   840: 64 17                    a0 = sp
   842: 95 18 10                 a1 = sp + 0x10
   845: 64 59                    a2 = s0
   847: 50 10 44 3e 23           ra = 68, jump @565
      :                          @52 [@dyn 34]
   852: 95 67 1a                 a0 = s1 + 0x1a
   855: 7b 17 10                 u64 [sp + 0x10] = a0
   858: 64 17                    a0 = sp
   860: 95 18 10                 a1 = sp + 0x10
   863: 64 59                    a2 = s0
   865: 50 10 46 2c 23           ra = 70, jump @565
      :                          @53 [@dyn 35]
   870: 95 67 1b                 a0 = s1 + 0x1b
   873: 7b 17 10                 u64 [sp + 0x10] = a0
   876: 64 17                    a0 = sp
   878: 95 18 10                 a1 = sp + 0x10
   881: 64 59                    a2 = s0
   883: 50 10 48 1a 23           ra = 72, jump @565
      :                          @54 [@dyn 36]
   888: 95 67 1c                 a0 = s1 + 0x1c
   891: 7b 17 10                 u64 [sp + 0x10] = a0
   894: 64 17                    a0 = sp
   896: 95 18 10                 a1 = sp + 0x10
   899: 64 59                    a2 = s0
   901: 50 10 4a 08 23           ra = 74, jump @565
      :                          @55 [@dyn 37]
   906: 95 67 1d                 a0 = s1 + 0x1d
   909: 7b 17 10                 u64 [sp + 0x10] = a0
   912: 64 17                    a0 = sp
   914: 95 18 10                 a1 = sp + 0x10
   917: 64 59                    a2 = s0
   919: 50 10 4c f6 22           ra = 76, jump @565
      :                          @56 [@dyn 38]
   924: 95 67 1e                 a0 = s1 + 0x1e
   927: 7b 17 10                 u64 [sp + 0x10] = a0
   930: 64 17                    a0 = sp
   932: 95 18 10                 a1 = sp + 0x10
   935: 64 59                    a2 = s0
   937: 50 10 4e e4 22           ra = 78, jump @565
      :                          @57 [@dyn 39]
   942: 95 67 1f                 a0 = s1 + 0x1f
   945: 7b 17 10                 u64 [sp + 0x10] = a0
   948: 64 17                    a0 = sp
   950: 95 18 10                 a1 = sp + 0x10
   953: 64 59                    a2 = s0
   955: 50 10 50 d2 22           ra = 80, jump @565
      :                          @58 [@dyn 40]
   960: 95 67 20                 a0 = s1 + 0x20
   963: 7b 17 10                 u64 [sp + 0x10] = a0
   966: 64 17                    a0 = sp
   968: 95 18 10                 a1 = sp + 0x10
   971: 64 59                    a2 = s0
   973: 50 10 52 c0 22           ra = 82, jump @565
      :                          @59 [@dyn 41]
   978: 95 67 21                 a0 = s1 + 0x21
   981: 7b 17 10                 u64 [sp + 0x10] = a0
   984: 64 17                    a0 = sp
   986: 95 18 10                 a1 = sp + 0x10
   989: 64 59                    a2 = s0
   991: 50 10 54 ae 22           ra = 84, jump @565
      :                          @60 [@dyn 42]
   996: 95 67 22                 a0 = s1 + 0x22
   999: 7b 17 10                 u64 [sp + 0x10] = a0
  1002: 64 17                    a0 = sp
  1004: 95 18 10                 a1 = sp + 0x10
  1007: 64 59                    a2 = s0
  1009: 50 10 56 9c 22           ra = 86, jump @565
      :                          @61 [@dyn 43]
  1014: 95 67 23                 a0 = s1 + 0x23
  1017: 7b 17 10                 u64 [sp + 0x10] = a0
  1020: 64 17                    a0 = sp
  1022: 95 18 10                 a1 = sp + 0x10
  1025: 64 59                    a2 = s0
  1027: 50 10 58 8a 22           ra = 88, jump @565
      :                          @62 [@dyn 44]
  1032: 33 07 01                 a0 = 0x1
  1035: 7c 18 08                 a1 = u8 [sp + 0x8]
  1038: 52 08 1a                 jump @64 if a1 != 0
      :                          @63
  1041: 82 17                    a0 = u64 [sp]
  1043: 82 78 28                 a1 = u64 [a0 + 0x28]
  1046: 82 77 20                 a0 = u64 [a0 + 0x20]
  1049: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1052: 33 08 79 01 01           a1 = 0x10179
  1057: 33 09 01                 a2 = 0x1
  1060: b4 a0 01 5a              ra = 90, jump [a3]
      :                          @64 [@dyn 45]
  1064: 82 10 28                 ra = u64 [sp + 0x28]
  1067: 82 15 20                 s0 = u64 [sp + 0x20]
  1070: 82 16 18                 s1 = u64 [sp + 0x18]
  1073: 95 11 30                 sp = sp + 0x30
  1076: 32 00                    ret
      :                          @65 [export #0: 'refine']
  1078: 95 11 60 fc              sp = sp + 0xfffffffffffffc60
  1082: 7b 10 98 03              u64 [sp + 0x398] = ra
  1086: 7b 15 90 03              u64 [sp + 0x390] = s0
  1090: 7b 16 88 03              u64 [sp + 0x388] = s1
  1094: 64 85                    s0 = a1
  1096: 7b 17 68 01              u64 [sp + 0x168] = a0
  1100: 33 06 61 00 03           s1 = 0x30061
  1105: 33 09 08 10              a2 = 0x1008
  1109: 33 0a 08                 a3 = 0x8
  1112: 33 07 61 00 03           a0 = 0x30061
  1117: 33 08                    a1 = 0
  1119: 33 0b                    a4 = 0
  1121: 33 0c                    a5 = 0
  1123: 0a 01                    ecalli 1 // 'fetch'
  1125: 7b 16 70 01              u64 [sp + 0x170] = s1
  1129: 7b 17 98 00              u64 [sp + 0x98] = a0
  1133: 7b 17 78 01              u64 [sp + 0x178] = a0
  1137: 48 21 84 01              u32 [sp + 388] = 0
  1141: 95 17 84 01              a0 = sp + 0x184
  1145: 33 09 04                 a2 = 0x4
  1148: 33 0a 0d                 a3 = 0xd
  1151: 33 08                    a1 = 0
  1153: 33 0b                    a4 = 0
  1155: 33 0c                    a5 = 0
  1157: 33 00 5c                 ra = 0x5c
  1160: 0a 01                    ecalli 1 // 'fetch'
  1162: 01                       fallthrough
      :                          @66 [@dyn 46]
  1163: 33 09 04                 a2 = 0x4
  1166: 33 07 00 00 01           a0 = 0x10000
  1171: ac 95 46                 jump @75 if s0 <u a2
      :                          @67
  1174: 82 1a 68 01              a3 = u64 [sp + 0x168]
  1178: 7d a8                    a1 = i8 [a3]
  1180: 33 06 01                 s1 = 0x1
  1183: 59 08 37                 jump @74 if a1 >=s 0
      :                          @68
  1186: 84 89 ff 00              a2 = a1 & 0xff
  1190: 33 06 02                 s1 = 0x2
  1193: 53 29 c0 00 2d           jump @74 if a2 <u 192
      :                          @69
  1198: 33 06 03                 s1 = 0x3
  1201: 53 29 e0 00 25           jump @74 if a2 <u 224
      :                          @70
  1206: 33 06 04                 s1 = 0x4
  1209: 53 29 f0 00 1d           jump @74 if a2 <u 240
      :                          @71
  1214: 33 06 05                 s1 = 0x5
  1217: 53 29 f8 00 15           jump @74 if a2 <u 248
      :                          @72
  1222: 33 06 06                 s1 = 0x6
  1225: 53 29 fc 00 0d           jump @74 if a2 <u 252
      :                          @73
  1230: 88 98 fe 00              a1 = a2 <u 0xfe
  1234: 9a 86 08                 s1 = 0x8 - a1
  1237: 01                       fallthrough
      :                          @74
  1238: ae 65 07                 jump @76 if s0 >=u s1
      :                          @75
  1241: 33 08                    a1 = 0
  1243: 28 5f                    jump @87
      :                          @76
  1245: 64 a7                    a0 = a3
  1247: 64 68                    a1 = s1
  1249: 50 10 5e eb 22           ra = 94, jump @582
      :                          @77 [@dyn 47]
  1254: aa 65 4c                 jump @86 if s0 == s1
      :                          @78
  1257: 82 17 68 01              a0 = u64 [sp + 0x168]
  1261: c8 67 07                 a0 = a0 + s1
  1264: 7d 79                    a2 = i8 [a0]
  1266: c9 65 06                 s1 = s0 - s1
  1269: 33 05 01                 s0 = 0x1
  1272: 59 09 37                 jump @85 if a2 >=s 0
      :                          @79
  1275: 84 99 ff 00              a2 = a2 & 0xff
  1279: 33 05 02                 s0 = 0x2
  1282: 53 29 c0 00 2d           jump @85 if a2 <u 192
      :                          @80
  1287: 33 05 03                 s0 = 0x3
  1290: 53 29 e0 00 25           jump @85 if a2 <u 224
      :                          @81
  1295: 33 05 04                 s0 = 0x4
  1298: 53 29 f0 00 1d           jump @85 if a2 <u 240
      :                          @82
  1303: 33 05 05                 s0 = 0x5
  1306: 53 29 f8 00 15           jump @85 if a2 <u 248
      :                          @83
  1311: 33 05 06                 s0 = 0x6
  1314: 53 29 fc 00 0d           jump @85 if a2 <u 252
      :                          @84
  1319: 88 98 fe 00              a1 = a2 <u 0xfe
  1323: 9a 85 08                 s0 = 0x8 - a1
  1326: 01                       fallthrough
      :                          @85
  1327: ae 56 1d                 jump @88 if s1 >=u s0
      :                          @86
  1330: 33 08                    a1 = 0
  1332: 33 07 00 00 01           a0 = 0x10000
  1337: 01                       fallthrough
      :                          @87
  1338: 82 10 98 03              ra = u64 [sp + 0x398]
  1342: 82 15 90 03              s0 = u64 [sp + 0x390]
  1346: 82 16 88 03              s1 = u64 [sp + 0x388]
  1350: 95 11 a0 03              sp = sp + 0x3a0
  1354: 32 00                    ret
      :                          @88
  1356: 64 58                    a1 = s0
  1358: 7b 17 68 01              u64 [sp + 0x168] = a0
  1362: 50 10 60 7a 22           ra = 96, jump @582
      :                          @89 [@dyn 48]
  1367: ab 56 09                 jump @91 if s1 != s0
      :                          @90
  1370: 33 08                    a1 = 0
  1372: 33 07                    a0 = 0
  1374: 28 5d                    jump @101
      :                          @91
  1376: 82 17 68 01              a0 = u64 [sp + 0x168]
  1380: c8 57 07                 a0 = a0 + s0
  1383: 7d 78                    a1 = i8 [a0]
  1385: c9 56 05                 s0 = s1 - s0
  1388: 33 06 01                 s1 = 0x1
  1391: 59 08 37                 jump @98 if a1 >=s 0
      :                          @92
  1394: 84 88 ff 00              a1 = a1 & 0xff
  1398: 33 06 02                 s1 = 0x2
  1401: 53 28 c0 00 2d           jump @98 if a1 <u 192
      :                          @93
  1406: 33 06 03                 s1 = 0x3
  1409: 53 28 e0 00 25           jump @98 if a1 <u 224
      :                          @94
  1414: 33 06 04                 s1 = 0x4
  1417: 53 28 f0 00 1d           jump @98 if a1 <u 240
      :                          @95
  1422: 33 06 05                 s1 = 0x5
  1425: 53 28 f8 00 15           jump @98 if a1 <u 248
      :                          @96
  1430: 33 06 06                 s1 = 0x6
  1433: 53 28 fc 00 0d           jump @98 if a1 <u 252
      :                          @97
  1438: 88 88 fe 00              a1 = a1 <u 0xfe
  1442: 9a 86 08                 s1 = 0x8 - a1
  1445: 01                       fallthrough
      :                          @98
  1446: ac 65 63 0f              jump @191 if s0 <u s1
      :                          @99
  1450: 64 68                    a1 = s1
  1452: 50 10 62 20 22           ra = 98, jump @582
      :                          @100 [@dyn 49]
  1457: e4 65 08                 a1 = maxu(s0, s1)
  1460: c9 68 08                 a1 = a1 - s1
  1463: ac 78 7b ff              jump @86 if a1 <u a0
      :                          @101
  1467: e4 78 08                 a1 = maxu(a1, a0)
  1470: c9 78 08                 a1 = a1 - a0
  1473: 33 09 20                 a2 = 0x20
  1476: 33 07 00 00 01           a0 = 0x10000
  1481: ac 98 10 ff              jump @75 if a1 <u a2
      :                          @102
  1485: 95 17 f8 01              a0 = sp + 0x1f8
  1489: 33 09 80 00              a2 = 0x80
  1493: 33 08                    a1 = 0
  1495: 50 10 64 4d 18           ra = 100, jump @396
      :                          @103 [@dyn 50]
  1500: 3a 0c 00 00 03           a5 = u64 [0x30000]
  1505: 3a 07 08 00 03           a0 = u64 [0x30008]
  1510: 3a 08 10 00 03           a1 = u64 [0x30010]
  1515: 3a 09 18 00 03           a2 = u64 [0x30018]
  1520: 7b 1c a8 01              u64 [sp + 0x1a8] = a5
  1524: 7b 17 30                 u64 [sp + 0x30] = a0
  1527: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  1531: 7b 18 28                 u64 [sp + 0x28] = a1
  1534: 7b 18 b8 01              u64 [sp + 0x1b8] = a1
  1538: 7b 19 20                 u64 [sp + 0x20] = a2
  1541: 7b 19 c0 01              u64 [sp + 0x1c0] = a2
  1545: 3a 06 20 00 03           s1 = u64 [0x30020]
  1550: 3a 0a 28 00 03           a3 = u64 [0x30028]
  1555: 3a 07 30 00 03           a0 = u64 [0x30030]
  1560: 33 05 38 00 03           s0 = 0x30038
  1565: 3a 08 38 00 03           a1 = u64 [0x30038]
  1570: 7b 16 c8 01              u64 [sp + 0x1c8] = s1
  1574: 7b 1a d0 01              u64 [sp + 0x1d0] = a3
  1578: 7b 17 18                 u64 [sp + 0x18] = a0
  1581: 7b 17 d8 01              u64 [sp + 0x1d8] = a0
  1585: 7b 18 10                 u64 [sp + 0x10] = a1
  1588: 7b 18 e0 01              u64 [sp + 0x1e0] = a1
  1592: 49 21 e8 01              u64 [sp + 488] = 0
  1596: 49 21 f0 01              u64 [sp + 496] = 0
  1600: 49 21 78 02              u64 [sp + 632] = 0
  1604: 46 21 80 02              u8 [sp + 640] = 0
  1608: 7b 1a 88 00              u64 [sp + 0x88] = a3
  1612: 82 1b 98 00              a4 = u64 [sp + 0x98]
  1616: 7b 16 90 00              u64 [sp + 0x90] = s1
  1620: 51 0b 21 06              jump @138 if a4 == 0
      :                          @104
  1624: 33 03                    t1 = 0
  1626: 33 0c                    a5 = 0
  1628: 33 07 4b 02 01           a0 = 0x1024b
  1633: 7b 17 08                 u64 [sp + 0x8] = a0
  1636: 3a 07 40 00 03           a0 = u64 [0x30040]
  1641: 7b 17                    u64 [sp] = a0
  1643: 33 07 61 00 03           a0 = 0x30061
  1648: 7b 17 80 00              u64 [sp + 0x80] = a0
  1652: 01                       fallthrough
      :                          @105
  1653: 52 23 80 00 29           jump @108 if t1 != 128
      :                          @106
  1658: 82 17 e8 01              a0 = u64 [sp + 0x1e8]
  1662: 95 75 80 00              s0 = a0 + 0x80
  1666: 7b 15 e8 01              u64 [sp + 0x1e8] = s0
  1670: 82 19 f0 01              a2 = u64 [sp + 0x1f0]
  1674: 7b 1c 78                 u64 [sp + 0x78] = a5
  1677: 53 17 80 2b              jump @111 if a0 <u 4294967168
      :                          @107
  1681: 95 99 01                 a2 = a2 + 0x1
  1684: 7b 19 68 01              u64 [sp + 0x168] = a2
  1688: 7b 19 f0 01              u64 [sp + 0x1f0] = a2
  1692: 28 21                    jump @112
      :                          @108
  1694: 9a 37 80 00              a0 = 0x80 - t1
  1698: c9 cb 08                 a1 = a4 - a5
  1701: e6 87 05                 s0 = minu(a0, a1)
  1704: c8 35 09                 a2 = s0 + t1
  1707: ac 59 5c 0e              jump @189 if a2 <u s0
      :                          @109
  1711: 54 29 80 00 1c 05        jump @132 if a2 <=u 128
      :                          @110
  1717: 28 53 0e                 jump @190
      :                          @111
  1720: 7b 19 68 01              u64 [sp + 0x168] = a2
  1724: 01                       fallthrough
      :                          @112
  1725: 95 17 08 03              a0 = sp + 0x308
  1729: 33 09 80 00              a2 = 0x80
  1733: 95 18 f8 01              a1 = sp + 0x1f8
  1737: 50 10 66 a9 16           ra = 102, jump @378
      :                          @113 [@dyn 51]
  1742: 82 16 a8 01              s1 = u64 [sp + 0x1a8]
  1746: 82 1c b0 01              a5 = u64 [sp + 0x1b0]
  1750: 82 13 b8 01              t1 = u64 [sp + 0x1b8]
  1754: 82 12 c0 01              t0 = u64 [sp + 0x1c0]
  1758: 82 1b c8 01              a4 = u64 [sp + 0x1c8]
  1762: 82 1a d0 01              a3 = u64 [sp + 0x1d0]
  1766: 82 18 d8 01              a1 = u64 [sp + 0x1d8]
  1770: 82 14 e0 01              t2 = u64 [sp + 0x1e0]
  1774: 82 17 90 00              a0 = u64 [sp + 0x90]
  1778: d3 57 07                 a0 = a0 ^ s0
  1781: 7b 17 20 01              u64 [sp + 0x120] = a0
  1785: 82 17 88 00              a0 = u64 [sp + 0x88]
  1789: 82 19 68 01              a2 = u64 [sp + 0x168]
  1793: d3 97 07                 a0 = a0 ^ a2
  1796: 7b 17 30 01              u64 [sp + 0x130] = a0
  1800: 33 05 0c                 s0 = 0xc
  1803: 82 17 08                 a0 = u64 [sp + 0x8]
  1806: 7b 16 38                 u64 [sp + 0x38] = s1
  1809: 7b 16 18 01              u64 [sp + 0x118] = s1
  1813: 64 76                    s1 = a0
  1815: 7b 1b 58                 u64 [sp + 0x58] = a4
  1818: 64 b9                    a2 = a4
  1820: 82 17                    a0 = u64 [sp]
  1822: 7b 17 40 01              u64 [sp + 0x140] = a0
  1826: 7b 1c 40                 u64 [sp + 0x40] = a5
  1829: 7b 1c 28 01              u64 [sp + 0x128] = a5
  1833: 7b 1a 60                 u64 [sp + 0x60] = a3
  1836: 64 a0                    ra = a3
  1838: 82 17 30                 a0 = u64 [sp + 0x30]
  1841: 7b 17 50 01              u64 [sp + 0x150] = a0
  1845: 7b 13 48                 u64 [sp + 0x48] = t1
  1848: 7b 13 38 01              u64 [sp + 0x138] = t1
  1852: 7b 18 68                 u64 [sp + 0x68] = a1
  1855: 64 8a                    a3 = a1
  1857: 82 1b 18                 a4 = u64 [sp + 0x18]
  1860: 82 17 28                 a0 = u64 [sp + 0x28]
  1863: 7b 17 60 01              u64 [sp + 0x160] = a0
  1867: 7b 12 50                 u64 [sp + 0x50] = t0
  1870: 64 2c                    a5 = t0
  1872: 7b 14 70                 u64 [sp + 0x70] = t2
  1875: 64 42                    t0 = t2
  1877: 82 17 10                 a0 = u64 [sp + 0x10]
  1880: 7b 17 48 01              u64 [sp + 0x148] = a0
  1884: 82 17 20                 a0 = u64 [sp + 0x20]
  1887: 7b 17 58 01              u64 [sp + 0x158] = a0
  1891: 01                       fallthrough
      :                          @114
  1892: 7b 10 10 01              u64 [sp + 0x110] = ra
  1896: 7b 1a 68 01              u64 [sp + 0x168] = a3
  1900: 7c 60 f9                 ra = u8 [s1 + 0xfffffffffffffff9]
  1903: 56 10 0f 8e 0d           jump @179 if ra >u 15
      :                          @115
  1908: 7c 67 fa                 a0 = u8 [s1 + 0xfffffffffffffffa]
  1911: 33 08 10                 a1 = 0x10
  1914: ae 87 84 0d              jump @180 if a0 >=u a1
      :                          @116
  1918: 7b 1b 08 01              u64 [sp + 0x108] = a4
  1922: 7c 63 fb                 t1 = u8 [s1 + 0xfffffffffffffffb]
  1925: 55 13 10 7b 0d           jump @182 if t1 >=u 16
      :                          @117
  1930: 7b 15 00 01              u64 [sp + 0x100] = s0
  1934: 7c 64 fc                 t2 = u8 [s1 + 0xfffffffffffffffc]
  1937: 55 14 10 6e 0d           jump @181 if t2 >=u 16
      :                          @118
  1942: 7b 1c f8 00              u64 [sp + 0xf8] = a5
  1946: 7c 6c fd                 a5 = u8 [s1 + 0xfffffffffffffffd]
  1949: 55 1c 10 5d 0d           jump @176 if a5 >=u 16
      :                          @119
  1954: 7b 12 f0 00              u64 [sp + 0xf0] = t0
  1958: 7c 62 fe                 t0 = u8 [s1 + 0xfffffffffffffffe]
  1961: 55 12 10 52 0d           jump @177 if t0 >=u 16
      :                          @120
  1966: 7c 6a ff                 a3 = u8 [s1 + 0xffffffffffffffff]
  1969: 55 1a 10 4b 0d           jump @178 if a3 >=u 16
      :                          @121
  1974: 7c 6b                    a4 = u8 [s1]
  1976: 55 1b 10 49 0d           jump @183 if a4 >=u 16
      :                          @122
  1981: 7c 65 01                 s0 = u8 [s1 + 0x1]
  1984: 55 15 10 b2 0c           jump @170 if s0 >=u 16
      :                          @123
  1989: 7b 15 e8 00              u64 [sp + 0xe8] = s0
  1993: 7c 65 02                 s0 = u8 [s1 + 0x2]
  1996: 55 15 10 a6 0c           jump @170 if s0 >=u 16
      :                          @124
  2001: 7b 15 e0 00              u64 [sp + 0xe0] = s0
  2005: 7c 65 03                 s0 = u8 [s1 + 0x3]
  2008: 55 15 10 9a 0c           jump @170 if s0 >=u 16
      :                          @125
  2013: 7b 15 d8 00              u64 [sp + 0xd8] = s0
  2017: 7c 65 04                 s0 = u8 [s1 + 0x4]
  2020: 55 15 10 8e 0c           jump @170 if s0 >=u 16
      :                          @126
  2025: 7b 15 d0 00              u64 [sp + 0xd0] = s0
  2029: 7c 65 05                 s0 = u8 [s1 + 0x5]
  2032: 55 15 10 82 0c           jump @170 if s0 >=u 16
      :                          @127
  2037: 7b 15 c8 00              u64 [sp + 0xc8] = s0
  2041: 7c 65 06                 s0 = u8 [s1 + 0x6]
  2044: 55 15 10 76 0c           jump @170 if s0 >=u 16
      :                          @128
  2049: 7b 15 c0 00              u64 [sp + 0xc0] = s0
  2053: 7c 65 07                 s0 = u8 [s1 + 0x7]
  2056: 55 15 10 6a 0c           jump @170 if s0 >=u 16
      :                          @129
  2061: 7b 15 b8 00              u64 [sp + 0xb8] = s0
  2065: 7c 65 08                 s0 = u8 [s1 + 0x8]
  2068: 55 15 10 5e 0c           jump @170 if s0 >=u 16
      :                          @130
  2073: 97 00 03                 ra = ra << 0x3
  2076: 95 18 08 03              a1 = sp + 0x308
  2080: c8 80 00                 ra = ra + a1
  2083: 7b 15 a8 00              u64 [sp + 0xa8] = s0
  2087: 82 05                    s0 = u64 [ra]
  2089: 97 77 03                 a0 = a0 << 0x3
  2092: c8 87 07                 a0 = a0 + a1
  2095: 82 77                    a0 = u64 [a0]
  2097: 7b 16 b0 00              u64 [sp + 0xb0] = s1
  2101: 7b 19 a0 00              u64 [sp + 0xa0] = a2
  2105: 82 16 18 01              s1 = u64 [sp + 0x118]
  2109: c8 96 06                 s1 = s1 + a2
  2112: c8 65 05                 s0 = s0 + s1
  2115: 82 19 20 01              a2 = u64 [sp + 0x120]
  2119: d3 59 09                 a2 = a2 ^ s0
  2122: 7b 19 18 01              u64 [sp + 0x118] = a2
  2126: c8 57 07                 a0 = a0 + s0
  2129: 7b 17 20 01              u64 [sp + 0x120] = a0
  2133: 97 33 03                 t1 = t1 << 0x3
  2136: c8 83 03                 t1 = t1 + a1
  2139: 82 37                    a0 = u64 [t1]
  2141: 97 44 03                 t2 = t2 << 0x3
  2144: c8 84 04                 t2 = t2 + a1
  2147: 82 45                    s0 = u64 [t2]
  2149: 82 10 10 01              ra = u64 [sp + 0x110]
  2153: 82 16 28 01              s1 = u64 [sp + 0x128]
  2157: c8 06 06                 s1 = s1 + ra
  2160: c8 67 07                 a0 = a0 + s1
  2163: 82 19 30 01              a2 = u64 [sp + 0x130]
  2167: d3 97 03                 t1 = a0 ^ a2
  2170: c8 57 04                 t2 = a0 + s0
  2173: 97 cc 03                 a5 = a5 << 0x3
  2176: c8 8c 0c                 a5 = a5 + a1
  2179: 82 c7                    a0 = u64 [a5]
  2181: 97 22 03                 t0 = t0 << 0x3
  2184: c8 82 02                 t0 = t0 + a1
  2187: 82 2c                    a5 = u64 [t0]
  2189: 82 16 38 01              s1 = u64 [sp + 0x138]
  2193: 82 18 68 01              a1 = u64 [sp + 0x168]
  2197: c8 86 06                 s1 = s1 + a1
  2200: c8 67 07                 a0 = a0 + s1
  2203: 82 19 08 01              a2 = u64 [sp + 0x108]
  2207: d3 79 09                 a2 = a2 ^ a0
  2210: 7b 19 38 01              u64 [sp + 0x138] = a2
  2214: c8 c7 07                 a0 = a0 + a5
  2217: 7b 17 30 01              u64 [sp + 0x130] = a0
  2221: 97 aa 03                 a3 = a3 << 0x3
  2224: 95 18 08 03              a1 = sp + 0x308
  2228: c8 8a 0a                 a3 = a3 + a1
  2231: 82 a7                    a0 = u64 [a3]
  2233: 97 bb 03                 a4 = a4 << 0x3
  2236: c8 8b 0b                 a4 = a4 + a1
  2239: 82 ba                    a3 = u64 [a4]
  2241: 82 16 f0 00              s1 = u64 [sp + 0xf0]
  2245: 82 1b f8 00              a4 = u64 [sp + 0xf8]
  2249: c8 6b 0b                 a4 = a4 + s1
  2252: c8 b7 07                 a0 = a0 + a4
  2255: 82 1b 48 01              a4 = u64 [sp + 0x148]
  2259: d3 7b 0b                 a4 = a4 ^ a0
  2262: c8 a7 02                 t0 = a0 + a3
  2265: 82 17 18 01              a0 = u64 [sp + 0x118]
  2269: 9e 77 20                 a0 = a0 >>r 0x20
  2272: 82 1a 40 01              a3 = u64 [sp + 0x140]
  2276: c8 7a 0a                 a3 = a3 + a0
  2279: 82 15 a0 00              s0 = u64 [sp + 0xa0]
  2283: d3 a5 05                 s0 = s0 ^ a3
  2286: 82 19 e8 00              a2 = u64 [sp + 0xe8]
  2290: 97 99 03                 a2 = a2 << 0x3
  2293: c8 89 09                 a2 = a2 + a1
  2296: 82 99                    a2 = u64 [a2]
  2298: 9e 58 18                 a1 = s0 >>r 0x18
  2301: 7b 18 48 01              u64 [sp + 0x148] = a1
  2305: 82 15 20 01              s0 = u64 [sp + 0x120]
  2309: c8 85 05                 s0 = s0 + a1
  2312: d3 57 07                 a0 = a0 ^ s0
  2315: c8 59 09                 a2 = a2 + s0
  2318: 9e 35 20                 s0 = t1 >>r 0x20
  2321: 82 18 50 01              a1 = u64 [sp + 0x150]
  2325: c8 85 03                 t1 = s0 + a1
  2328: d3 03 0c                 a5 = t1 ^ ra
  2331: 9e cc 18                 a5 = a5 >>r 0x18
  2334: c8 c4 04                 t2 = t2 + a5
  2337: d3 54 05                 s0 = t2 ^ s0
  2340: 9e 58 10                 a1 = s0 >>r 0x10
  2343: 7b 18 40 01              u64 [sp + 0x140] = a1
  2347: c8 38 08                 a1 = a1 + t1
  2350: 7b 18 50 01              u64 [sp + 0x150] = a1
  2354: d3 c8 08                 a1 = a1 ^ a5
  2357: 9e 88 3f                 a1 = a1 >>r 0x3f
  2360: 7b 18 28 01              u64 [sp + 0x128] = a1
  2364: 9e bb 20                 a4 = a4 >>r 0x20
  2367: 82 10 58 01              ra = u64 [sp + 0x158]
  2371: c8 b0 00                 ra = ra + a4
  2374: d3 60 0c                 a5 = ra ^ s1
  2377: 9e c5 18                 s0 = a5 >>r 0x18
  2380: c8 52 03                 t1 = t0 + s0
  2383: d3 b3 0b                 a4 = t1 ^ a4
  2386: 9e bb 10                 a4 = a4 >>r 0x10
  2389: c8 b0 00                 ra = ra + a4
  2392: 7b 10 08 01              u64 [sp + 0x108] = ra
  2396: 82 1c e0 00              a5 = u64 [sp + 0xe0]
  2400: 97 cc 03                 a5 = a5 << 0x3
  2403: 95 16 08 03              s1 = sp + 0x308
  2407: c8 6c 0c                 a5 = a5 + s1
  2410: 82 cc                    a5 = u64 [a5]
  2412: 82 12 d8 00              t0 = u64 [sp + 0xd8]
  2416: 97 22 03                 t0 = t0 << 0x3
  2419: c8 62 02                 t0 = t0 + s1
  2422: 82 22                    t0 = u64 [t0]
  2424: c8 89 09                 a2 = a2 + a1
  2427: d3 9b 0b                 a4 = a4 ^ a2
  2430: 7b 1b 20 01              u64 [sp + 0x120] = a4
  2434: c8 c9 09                 a2 = a2 + a5
  2437: 7b 19 58 01              u64 [sp + 0x158] = a2
  2441: c8 24 04                 t2 = t2 + t0
  2444: 9e 76 10                 s1 = a0 >>r 0x10
  2447: c8 6a 0a                 a3 = a3 + s1
  2450: 7b 1a 10 01              u64 [sp + 0x110] = a3
  2454: 82 17 38 01              a0 = u64 [sp + 0x138]
  2458: 9e 79 20                 a2 = a0 >>r 0x20
  2461: 82 12 60 01              t0 = u64 [sp + 0x160]
  2465: c8 92 02                 t0 = t0 + a2
  2468: 82 17 68 01              a0 = u64 [sp + 0x168]
  2472: d3 72 0c                 a5 = t0 ^ a0
  2475: 9e cb 18                 a4 = a5 >>r 0x18
  2478: 82 17 30 01              a0 = u64 [sp + 0x130]
  2482: c8 b7 07                 a0 = a0 + a4
  2485: d3 79 09                 a2 = a2 ^ a0
  2488: 9e 90 10                 ra = a2 >>r 0x10
  2491: c8 02 02                 t0 = t0 + ra
  2494: d3 b2 0b                 a4 = t0 ^ a4
  2497: 9e b8 3f                 a1 = a4 >>r 0x3f
  2500: 7b 18 38 01              u64 [sp + 0x138] = a1
  2504: 82 1a d0 00              a3 = u64 [sp + 0xd0]
  2508: 97 aa 03                 a3 = a3 << 0x3
  2511: 95 19 08 03              a2 = sp + 0x308
  2515: c8 9a 0a                 a3 = a3 + a2
  2518: 82 aa                    a3 = u64 [a3]
  2520: 82 1b c8 00              a4 = u64 [sp + 0xc8]
  2524: 97 bb 03                 a4 = a4 << 0x3
  2527: c8 9b 0b                 a4 = a4 + a2
  2530: 82 bb                    a4 = u64 [a4]
  2532: c8 84 04                 t2 = t2 + a1
  2535: d3 64 06                 s1 = t2 ^ s1
  2538: c8 4a 0a                 a3 = a3 + t2
  2541: 7b 1a 68 01              u64 [sp + 0x168] = a3
  2545: c8 7b 0b                 a4 = a4 + a0
  2548: 82 18 08 01              a1 = u64 [sp + 0x108]
  2552: d3 58 07                 a0 = a1 ^ s0
  2555: 9e 7c 3f                 a5 = a0 >>r 0x3f
  2558: 82 1a c0 00              a3 = u64 [sp + 0xc0]
  2562: 97 aa 03                 a3 = a3 << 0x3
  2565: c8 9a 0a                 a3 = a3 + a2
  2568: 82 aa                    a3 = u64 [a3]
  2570: 82 15 b8 00              s0 = u64 [sp + 0xb8]
  2574: 97 55 03                 s0 = s0 << 0x3
  2577: c8 95 05                 s0 = s0 + a2
  2580: 82 55                    s0 = u64 [s0]
  2582: c8 cb 0b                 a4 = a4 + a5
  2585: 82 17 40 01              a0 = u64 [sp + 0x140]
  2589: d3 b7 07                 a0 = a0 ^ a4
  2592: 7b 17 30 01              u64 [sp + 0x130] = a0
  2596: c8 ba 0a                 a3 = a3 + a4
  2599: 7b 1a 40 01              u64 [sp + 0x140] = a3
  2603: c8 53 03                 t1 = t1 + s0
  2606: 82 1a 48 01              a3 = u64 [sp + 0x148]
  2610: 82 17 10 01              a0 = u64 [sp + 0x110]
  2614: d3 a7 0b                 a4 = a0 ^ a3
  2617: 82 15 a8 00              s0 = u64 [sp + 0xa8]
  2621: 97 55 03                 s0 = s0 << 0x3
  2624: c8 95 05                 s0 = s0 + a2
  2627: 82 55                    s0 = u64 [s0]
  2629: 9e bb 3f                 a4 = a4 >>r 0x3f
  2632: c8 b3 03                 t1 = t1 + a4
  2635: d3 03 04                 t2 = t1 ^ ra
  2638: c8 53 03                 t1 = t1 + s0
  2641: 82 19 20 01              a2 = u64 [sp + 0x120]
  2645: 9e 95 20                 s0 = a2 >>r 0x20
  2648: c8 25 09                 a2 = s0 + t0
  2651: 82 1a 28 01              a3 = u64 [sp + 0x128]
  2655: d3 a9 00                 ra = a2 ^ a3
  2658: 9e 00 18                 ra = ra >>r 0x18
  2661: 82 1a 58 01              a3 = u64 [sp + 0x158]
  2665: c8 0a 0a                 a3 = a3 + ra
  2668: 7b 1a 18 01              u64 [sp + 0x118] = a3
  2672: d3 a5 05                 s0 = s0 ^ a3
  2675: 9e 5a 10                 a3 = s0 >>r 0x10
  2678: 7b 1a 48 01              u64 [sp + 0x148] = a3
  2682: c8 a9 09                 a2 = a2 + a3
  2685: 7b 19 60 01              u64 [sp + 0x160] = a2
  2689: d3 09 09                 a2 = a2 ^ ra
  2692: 9e 90 3f                 ra = a2 >>r 0x3f
  2695: 9e 69 20                 a2 = s1 >>r 0x20
  2698: c8 89 05                 s0 = a2 + a1
  2701: 82 16 38 01              s1 = u64 [sp + 0x138]
  2705: d3 56 06                 s1 = s1 ^ s0
  2708: 9e 66 18                 s1 = s1 >>r 0x18
  2711: 82 18 68 01              a1 = u64 [sp + 0x168]
  2715: c8 68 08                 a1 = a1 + s1
  2718: 7b 18 28 01              u64 [sp + 0x128] = a1
  2722: d3 89 09                 a2 = a2 ^ a1
  2725: 9e 99 10                 a2 = a2 >>r 0x10
  2728: 7b 19 20 01              u64 [sp + 0x120] = a2
  2732: c8 59 09                 a2 = a2 + s0
  2735: 7b 19 58 01              u64 [sp + 0x158] = a2
  2739: d3 69 09                 a2 = a2 ^ s1
  2742: 82 16 b0 00              s1 = u64 [sp + 0xb0]
  2746: 9e 9a 3f                 a3 = a2 >>r 0x3f
  2749: 82 18 30 01              a1 = u64 [sp + 0x130]
  2753: 9e 89 20                 a2 = a1 >>r 0x20
  2756: c8 79 08                 a1 = a2 + a0
  2759: d3 c8 07                 a0 = a1 ^ a5
  2762: 9e 77 18                 a0 = a0 >>r 0x18
  2765: 82 12 40 01              t0 = u64 [sp + 0x140]
  2769: c8 72 02                 t0 = t0 + a0
  2772: 7b 12 38 01              u64 [sp + 0x138] = t0
  2776: d3 92 09                 a2 = t0 ^ a2
  2779: 9e 99 10                 a2 = a2 >>r 0x10
  2782: 7b 19 30 01              u64 [sp + 0x130] = a2
  2786: c8 98 08                 a1 = a1 + a2
  2789: 7b 18 40 01              u64 [sp + 0x140] = a1
  2793: d3 87 07                 a0 = a0 ^ a1
  2796: 9e 72 3f                 t0 = a0 >>r 0x3f
  2799: 9e 47 20                 a0 = t2 >>r 0x20
  2802: 82 18 50 01              a1 = u64 [sp + 0x150]
  2806: c8 78 08                 a1 = a1 + a0
  2809: d3 8b 0b                 a4 = a4 ^ a1
  2812: 9e b9 18                 a2 = a4 >>r 0x18
  2815: c8 93 0c                 a5 = t1 + a2
  2818: d3 c7 07                 a0 = a0 ^ a5
  2821: 9e 7b 10                 a4 = a0 >>r 0x10
  2824: c8 8b 07                 a0 = a4 + a1
  2827: 7b 17 50 01              u64 [sp + 0x150] = a0
  2831: d3 97 07                 a0 = a0 ^ a2
  2834: 9e 79 3f                 a2 = a0 >>r 0x3f
  2837: 82 15 00 01              s0 = u64 [sp + 0x100]
  2841: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  2844: 95 66 10                 s1 = s1 + 0x10
  2847: 52 05 45 fc              jump @114 if s0 != 0
      :                          @131
  2851: 33 03                    t1 = 0
  2853: 82 17 38                 a0 = u64 [sp + 0x38]
  2856: 82 18 18 01              a1 = u64 [sp + 0x118]
  2860: d3 87 07                 a0 = a0 ^ a1
  2863: 82 18 40 01              a1 = u64 [sp + 0x140]
  2867: d3 87 07                 a0 = a0 ^ a1
  2870: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  2874: 82 17 40                 a0 = u64 [sp + 0x40]
  2877: 82 18 28 01              a1 = u64 [sp + 0x128]
  2881: d3 87 07                 a0 = a0 ^ a1
  2884: 82 18 50 01              a1 = u64 [sp + 0x150]
  2888: d3 87 07                 a0 = a0 ^ a1
  2891: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  2895: 82 17 48                 a0 = u64 [sp + 0x48]
  2898: 82 18 60 01              a1 = u64 [sp + 0x160]
  2902: d3 87 07                 a0 = a0 ^ a1
  2905: 82 18 38 01              a1 = u64 [sp + 0x138]
  2909: d3 87 07                 a0 = a0 ^ a1
  2912: 7b 17 b8 01              u64 [sp + 0x1b8] = a0
  2916: 82 17 50                 a0 = u64 [sp + 0x50]
  2919: 82 18 58 01              a1 = u64 [sp + 0x158]
  2923: d3 87 07                 a0 = a0 ^ a1
  2926: d3 c7 07                 a0 = a0 ^ a5
  2929: 7b 17 c0 01              u64 [sp + 0x1c0] = a0
  2933: 82 17 58                 a0 = u64 [sp + 0x58]
  2936: 82 18 20 01              a1 = u64 [sp + 0x120]
  2940: d3 87 07                 a0 = a0 ^ a1
  2943: d3 97 07                 a0 = a0 ^ a2
  2946: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
  2950: 82 17 60                 a0 = u64 [sp + 0x60]
  2953: d3 70 07                 a0 = ra ^ a0
  2956: 82 18 30 01              a1 = u64 [sp + 0x130]
  2960: d3 87 07                 a0 = a0 ^ a1
  2963: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
  2967: 82 17 68                 a0 = u64 [sp + 0x68]
  2970: d3 a7 07                 a0 = a0 ^ a3
  2973: d3 b7 07                 a0 = a0 ^ a4
  2976: 7b 17 d8 01              u64 [sp + 0x1d8] = a0
  2980: 82 17 70                 a0 = u64 [sp + 0x70]
  2983: 82 18 48 01              a1 = u64 [sp + 0x148]
  2987: d3 87 07                 a0 = a0 ^ a1
  2990: d3 27 07                 a0 = a0 ^ t0
  2993: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
  2997: 49 21 78 02              u64 [sp + 632] = 0
  3001: 82 1b 98 00              a4 = u64 [sp + 0x98]
  3005: 82 1c 78                 a5 = u64 [sp + 0x78]
  3008: c9 cb 07                 a0 = a4 - a5
  3011: 33 08 80 00              a1 = 0x80
  3015: e6 87 05                 s0 = minu(a0, a1)
  3018: 01                       fallthrough
      :                          @132
  3019: c8 c5 06                 s1 = s0 + a5
  3022: ac 56 37 09              jump @187 if s1 <u s0
      :                          @133
  3026: ac 6b 34 09              jump @188 if a4 <u s1
      :                          @134
  3030: 95 17 f8 01              a0 = sp + 0x1f8
  3034: c8 37 07                 a0 = a0 + t1
  3037: 82 18 80 00              a1 = u64 [sp + 0x80]
  3041: c8 c8 08                 a1 = a1 + a5
  3044: 64 59                    a2 = s0
  3046: 50 10 68 8c 11           ra = 104, jump @378
      :                          @135 [@dyn 52]
  3051: 82 17 78 02              a0 = u64 [sp + 0x278]
  3055: c8 57 03                 t1 = a0 + s0
  3058: 7b 13 78 02              u64 [sp + 0x278] = t1
  3062: 64 6c                    a5 = s1
  3064: 82 1b 98 00              a4 = u64 [sp + 0x98]
  3068: ac b6 79 fa              jump @105 if s1 <u a4
      :                          @136
  3072: 7c 17 80 02              a0 = u8 [sp + 0x280]
  3076: 51 07 6f 08              jump @171 if a0 == 0
      :                          @137
  3080: 33 05                    s0 = 0
  3082: 33 06                    s1 = 0
  3084: 33 0c                    a5 = 0
  3086: 33 0b                    a4 = 0
  3088: 33 00                    ra = 0
  3090: 33 04                    t2 = 0
  3092: 33 03                    t1 = 0
  3094: 33 02                    t0 = 0
  3096: 33 0a                    a3 = 0
  3098: 33 09                    a2 = 0
  3100: 33 08                    a1 = 0
  3102: 49 21 c8 00              u64 [sp + 200] = 0
  3106: 49 21 d0 00              u64 [sp + 208] = 0
  3110: 49 21 d8 00              u64 [sp + 216] = 0
  3114: 49 21 e0 00              u64 [sp + 224] = 0
  3118: 49 21 e8 00              u64 [sp + 232] = 0
  3122: 49 21 f0 00              u64 [sp + 240] = 0
  3126: 49 21 f8 00              u64 [sp + 248] = 0
  3130: 49 21 00 01              u64 [sp + 256] = 0
  3134: 49 21 08 01              u64 [sp + 264] = 0
  3138: 49 21 10 01              u64 [sp + 272] = 0
  3142: 49 21 18 01              u64 [sp + 280] = 0
  3146: 49 21 20 01              u64 [sp + 288] = 0
  3150: 49 21 28 01              u64 [sp + 296] = 0
  3154: 49 21 30 01              u64 [sp + 304] = 0
  3158: 49 21 38 01              u64 [sp + 312] = 0
  3162: 49 21 40 01              u64 [sp + 320] = 0
  3166: 49 21 48 01              u64 [sp + 328] = 0
  3170: 49 21 50 01              u64 [sp + 336] = 0
  3174: 49 21 58 01              u64 [sp + 344] = 0
  3178: 49 21 60 01              u64 [sp + 352] = 0
  3182: 49 21 68 01              u64 [sp + 360] = 0
  3186: 28 e8 05                 jump @161
      :                          @138
  3189: 7b 1c 58                 u64 [sp + 0x58] = a5
  3192: 95 17 88 02              a0 = sp + 0x288
  3196: 33 09 80 00              a2 = 0x80
  3200: 33 08                    a1 = 0
  3202: 50 10 6a a2 11           ra = 106, jump @396
      :                          @139 [@dyn 53]
  3207: 3a 07 08 00 03           a0 = u64 [0x30008]
  3212: 7b 17 60                 u64 [sp + 0x60] = a0
  3215: 3a 07 10 00 03           a0 = u64 [0x30010]
  3220: 7b 17 68                 u64 [sp + 0x68] = a0
  3223: 3a 07 18 00 03           a0 = u64 [0x30018]
  3228: 7b 17 70                 u64 [sp + 0x70] = a0
  3231: 3a 07 30 00 03           a0 = u64 [0x30030]
  3236: 7b 17 60 01              u64 [sp + 0x160] = a0
  3240: 3a 07 38 00 03           a0 = u64 [0x30038]
  3245: 7b 17 40 01              u64 [sp + 0x140] = a0
  3249: 33 09                    a2 = 0
  3251: 82 17 88 00              a0 = u64 [sp + 0x88]
  3255: 7b 17 30 01              u64 [sp + 0x130] = a0
  3259: 7b 16 28 01              u64 [sp + 0x128] = s1
  3263: 01                       fallthrough
      :                          @140
  3264: 95 17 88 02              a0 = sp + 0x288
  3268: 95 18 f8 01              a1 = sp + 0x1f8
  3272: 50 10 6c aa 10           ra = 108, jump @378
      :                          @141 [@dyn 54]
  3277: 95 17 08 03              a0 = sp + 0x308
  3281: 95 18 88 02              a1 = sp + 0x288
  3285: 33 09 80 00              a2 = 0x80
  3289: 50 10 6e 99 10           ra = 110, jump @378
      :                          @142 [@dyn 55]
  3294: 33 0b 4b 02 01           a4 = 0x1024b
  3299: 3a 00 18 00 03           ra = u64 [0x30018]
  3304: 3a 07 38 00 03           a0 = u64 [0x30038]
  3309: 7b 17 38 01              u64 [sp + 0x138] = a0
  3313: 3a 07 10 00 03           a0 = u64 [0x30010]
  3318: 7b 17 58 01              u64 [sp + 0x158] = a0
  3322: 3a 07 48 00 03           a0 = u64 [0x30048]
  3327: 7b 17 20 01              u64 [sp + 0x120] = a0
  3331: 3a 07 08 00 03           a0 = u64 [0x30008]
  3336: 7b 17 50 01              u64 [sp + 0x150] = a0
  3340: 3a 05 40 00 03           s0 = u64 [0x30040]
  3345: 33 06 0c                 s1 = 0xc
  3348: 33 0a 10                 a3 = 0x10
  3351: 82 17 58                 a0 = u64 [sp + 0x58]
  3354: 7b 17 48 01              u64 [sp + 0x148] = a0
  3358: 82 19 60                 a2 = u64 [sp + 0x60]
  3361: 64 9c                    a5 = a2
  3363: 82 14 68                 t2 = u64 [sp + 0x68]
  3366: 64 42                    t0 = t2
  3368: 82 18 70                 a1 = u64 [sp + 0x70]
  3371: 64 83                    t1 = a1
  3373: 7b 18 70                 u64 [sp + 0x70] = a1
  3376: 7b 14 68                 u64 [sp + 0x68] = t2
  3379: 7b 19 60                 u64 [sp + 0x60] = a2
  3382: 01                       fallthrough
      :                          @143
  3383: 7b 1c 18 01              u64 [sp + 0x118] = a5
  3387: 7c b4 f9                 t2 = u8 [a4 + 0xfffffffffffffff9]
  3390: 56 14 0f c1 07           jump @181 if t2 >u 15
      :                          @144
  3395: 7c b7 fa                 a0 = u8 [a4 + 0xfffffffffffffffa]
  3398: 55 17 10 b8 07           jump @180 if a0 >=u 16
      :                          @145
  3403: 64 59                    a2 = s0
  3405: 7c b5 fb                 s0 = u8 [a4 + 0xfffffffffffffffb]
  3408: 55 15 10 22 07           jump @170 if s0 >=u 16
      :                          @146
  3413: 7b 12 10 01              u64 [sp + 0x110] = t0
  3417: 7c b2 fc                 t0 = u8 [a4 + 0xfffffffffffffffc]
  3420: 55 12 10 9f 07           jump @177 if t0 >=u 16
      :                          @147
  3425: 7b 13 08 01              u64 [sp + 0x108] = t1
  3429: 7c bc fd                 a5 = u8 [a4 + 0xfffffffffffffffd]
  3432: 55 1c 10 92 07           jump @176 if a5 >=u 16
      :                          @148
  3437: 7b 19 f8 00              u64 [sp + 0xf8] = a2
  3441: 7b 10 00 01              u64 [sp + 0x100] = ra
  3445: 7c b0 fe                 ra = u8 [a4 + 0xfffffffffffffffe]
  3448: 55 10 10 85 07           jump @179 if ra >=u 16
      :                          @149
  3453: 7b 15 f0 00              u64 [sp + 0xf0] = s0
  3457: 33 05 10                 s0 = 0x10
  3460: 7c ba ff                 a3 = u8 [a4 + 0xffffffffffffffff]
  3463: ae 5a 75 07              jump @178 if a3 >=u s0
      :                          @150
  3467: 7b 1b 68 01              u64 [sp + 0x168] = a4
  3471: 7c bb                    a4 = u8 [a4]
  3473: 55 1b 10 70 07           jump @183 if a4 >=u 16
      :                          @151
  3478: 82 19 68 01              a2 = u64 [sp + 0x168]
  3482: 7c 98 01                 a1 = u8 [a2 + 0x1]
  3485: 55 18 10 66 07           jump @185 if a1 >=u 16
      :                          @152
  3490: 7b 16 e8 00              u64 [sp + 0xe8] = s1
  3494: 82 16 68 01              s1 = u64 [sp + 0x168]
  3498: 7c 63 02                 t1 = u8 [s1 + 0x2]
  3501: 55 13 10 53 07           jump @182 if t1 >=u 16
      :                          @153
  3506: 7b 12 d8 00              u64 [sp + 0xd8] = t0
  3510: 7b 1c e0 00              u64 [sp + 0xe0] = a5
  3514: 82 16 68 01              s1 = u64 [sp + 0x168]
  3518: 7c 62 03                 t0 = u8 [s1 + 0x3]
  3521: 55 12 10 3a 07           jump @177 if t0 >=u 16
      :                          @154
  3526: 82 16 68 01              s1 = u64 [sp + 0x168]
  3530: 7c 6c 04                 a5 = u8 [s1 + 0x4]
  3533: 55 1c 10 2d 07           jump @176 if a5 >=u 16
      :                          @155
  3538: 7b 1a d0 00              u64 [sp + 0xd0] = a3
  3542: 82 16 68 01              s1 = u64 [sp + 0x168]
  3546: 7c 6a 05                 a3 = u8 [s1 + 0x5]
  3549: 55 1a 10 1f 07           jump @178 if a3 >=u 16
      :                          @156
  3554: 82 16 68 01              s1 = u64 [sp + 0x168]
  3558: 7c 69 06                 a2 = u8 [s1 + 0x6]
  3561: 55 19 10 1b 07           jump @186 if a2 >=u 16
      :                          @157
  3566: 82 16 68 01              s1 = u64 [sp + 0x168]
  3570: 7c 66 07                 s1 = u8 [s1 + 0x7]
  3573: 55 16 10 0d 07           jump @184 if s1 >=u 16
      :                          @158
  3578: 7b 16 c8 00              u64 [sp + 0xc8] = s1
  3582: 82 16 68 01              s1 = u64 [sp + 0x168]
  3586: 7c 66 08                 s1 = u8 [s1 + 0x8]
  3589: 55 16 10 fd 06           jump @184 if s1 >=u 16
      :                          @159
  3594: 7b 1b 78                 u64 [sp + 0x78] = a4
  3597: 64 0b                    a4 = ra
  3599: 97 40 03                 ra = t2 << 0x3
  3602: 7b 18 a8 00              u64 [sp + 0xa8] = a1
  3606: 95 18 08 03              a1 = sp + 0x308
  3610: c8 80 00                 ra = ra + a1
  3613: 82 05                    s0 = u64 [ra]
  3615: 97 77 03                 a0 = a0 << 0x3
  3618: c8 87 07                 a0 = a0 + a1
  3621: 82 70                    ra = u64 [a0]
  3623: 7b 16 c0 00              u64 [sp + 0xc0] = s1
  3627: 82 16 48 01              s1 = u64 [sp + 0x148]
  3631: 82 17 90 00              a0 = u64 [sp + 0x90]
  3635: c8 76 06                 s1 = s1 + a0
  3638: c8 65 05                 s0 = s0 + s1
  3641: 82 16 28 01              s1 = u64 [sp + 0x128]
  3645: d3 56 06                 s1 = s1 ^ s0
  3648: 7b 16 80 00              u64 [sp + 0x80] = s1
  3652: c8 05 07                 a0 = s0 + ra
  3655: 7b 17 98 00              u64 [sp + 0x98] = a0
  3659: 7b 19 48 01              u64 [sp + 0x148] = a2
  3663: 7b 1a 28 01              u64 [sp + 0x128] = a3
  3667: 7b 1c b8 00              u64 [sp + 0xb8] = a5
  3671: 7b 12 b0 00              u64 [sp + 0xb0] = t0
  3675: 7b 13 a0 00              u64 [sp + 0xa0] = t1
  3679: 82 13 f0 00              t1 = u64 [sp + 0xf0]
  3683: 97 33 03                 t1 = t1 << 0x3
  3686: c8 83 03                 t1 = t1 + a1
  3689: 82 37                    a0 = u64 [t1]
  3691: 82 14 d8 00              t2 = u64 [sp + 0xd8]
  3695: 97 44 03                 t2 = t2 << 0x3
  3698: c8 84 04                 t2 = t2 + a1
  3701: 82 45                    s0 = u64 [t2]
  3703: 82 10 88 00              ra = u64 [sp + 0x88]
  3707: 82 16 18 01              s1 = u64 [sp + 0x118]
  3711: c8 06 06                 s1 = s1 + ra
  3714: c8 67 07                 a0 = a0 + s1
  3717: 82 16 30 01              s1 = u64 [sp + 0x130]
  3721: d3 76 06                 s1 = s1 ^ a0
  3724: 7b 16 18 01              u64 [sp + 0x118] = s1
  3728: c8 57 04                 t2 = a0 + s0
  3731: 82 1c e0 00              a5 = u64 [sp + 0xe0]
  3735: 97 cc 03                 a5 = a5 << 0x3
  3738: c8 8c 0c                 a5 = a5 + a1
  3741: 82 c7                    a0 = u64 [a5]
  3743: 97 b2 03                 t0 = a4 << 0x3
  3746: c8 82 02                 t0 = t0 + a1
  3749: 82 2c                    a5 = u64 [t0]
  3751: 82 16 10 01              s1 = u64 [sp + 0x110]
  3755: 82 18 60 01              a1 = u64 [sp + 0x160]
  3759: c8 86 06                 s1 = s1 + a1
  3762: c8 67 07                 a0 = a0 + s1
  3765: 82 16 20 01              s1 = u64 [sp + 0x120]
  3769: d3 76 06                 s1 = s1 ^ a0
  3772: 7b 16 30 01              u64 [sp + 0x130] = s1
  3776: c8 c7 07                 a0 = a0 + a5
  3779: 7b 17 20 01              u64 [sp + 0x120] = a0
  3783: 82 1a d0 00              a3 = u64 [sp + 0xd0]
  3787: 97 aa 03                 a3 = a3 << 0x3
  3790: 95 18 08 03              a1 = sp + 0x308
  3794: c8 8a 0a                 a3 = a3 + a1
  3797: 82 a7                    a0 = u64 [a3]
  3799: 82 1b 78                 a4 = u64 [sp + 0x78]
  3802: 97 bb 03                 a4 = a4 << 0x3
  3805: c8 8b 0b                 a4 = a4 + a1
  3808: 82 ba                    a3 = u64 [a4]
  3810: 82 16 40 01              s1 = u64 [sp + 0x140]
  3814: 82 1b 08 01              a4 = u64 [sp + 0x108]
  3818: c8 6b 0b                 a4 = a4 + s1
  3821: c8 b7 07                 a0 = a0 + a4
  3824: 82 1b 38 01              a4 = u64 [sp + 0x138]
  3828: d3 7b 0b                 a4 = a4 ^ a0
  3831: c8 a7 02                 t0 = a0 + a3
  3834: 82 17 80 00              a0 = u64 [sp + 0x80]
  3838: 9e 77 20                 a0 = a0 >>r 0x20
  3841: 82 1a f8 00              a3 = u64 [sp + 0xf8]
  3845: c8 7a 0a                 a3 = a3 + a0
  3848: 82 15 90 00              s0 = u64 [sp + 0x90]
  3852: d3 a5 05                 s0 = s0 ^ a3
  3855: 82 19 a8 00              a2 = u64 [sp + 0xa8]
  3859: 97 99 03                 a2 = a2 << 0x3
  3862: c8 89 09                 a2 = a2 + a1
  3865: 82 99                    a2 = u64 [a2]
  3867: 9e 58 18                 a1 = s0 >>r 0x18
  3870: 7b 18 38 01              u64 [sp + 0x138] = a1
  3874: 82 15 98 00              s0 = u64 [sp + 0x98]
  3878: c8 85 05                 s0 = s0 + a1
  3881: d3 75 03                 t1 = s0 ^ a0
  3884: c8 59 09                 a2 = a2 + s0
  3887: 82 17 18 01              a0 = u64 [sp + 0x118]
  3891: 9e 75 20                 s0 = a0 >>r 0x20
  3894: 82 18 50 01              a1 = u64 [sp + 0x150]
  3898: c8 58 08                 a1 = a1 + s0
  3901: d3 08 0c                 a5 = a1 ^ ra
  3904: 9e cc 18                 a5 = a5 >>r 0x18
  3907: c8 c4 04                 t2 = t2 + a5
  3910: d3 54 05                 s0 = t2 ^ s0
  3913: 9e 57 10                 a0 = s0 >>r 0x10
  3916: 7b 17 18 01              u64 [sp + 0x118] = a0
  3920: c8 78 08                 a1 = a1 + a0
  3923: 7b 18 50 01              u64 [sp + 0x150] = a1
  3927: d3 c8 08                 a1 = a1 ^ a5
  3930: 9e 87 3f                 a0 = a1 >>r 0x3f
  3933: 7b 17 08 01              u64 [sp + 0x108] = a0
  3937: 9e bb 20                 a4 = a4 >>r 0x20
  3940: 82 10 00 01              ra = u64 [sp + 0x100]
  3944: c8 b0 00                 ra = ra + a4
  3947: d3 60 0c                 a5 = ra ^ s1
  3950: 9e c5 18                 s0 = a5 >>r 0x18
  3953: c8 52 02                 t0 = t0 + s0
  3956: 7b 12 40 01              u64 [sp + 0x140] = t0
  3960: d3 b2 0b                 a4 = t0 ^ a4
  3963: 9e bb 10                 a4 = a4 >>r 0x10
  3966: c8 0b 08                 a1 = a4 + ra
  3969: 82 1c a0 00              a5 = u64 [sp + 0xa0]
  3973: 97 cc 03                 a5 = a5 << 0x3
  3976: 95 10 08 03              ra = sp + 0x308
  3980: c8 0c 0c                 a5 = a5 + ra
  3983: 82 cc                    a5 = u64 [a5]
  3985: 82 12 b0 00              t0 = u64 [sp + 0xb0]
  3989: 97 22 03                 t0 = t0 << 0x3
  3992: c8 02 02                 t0 = t0 + ra
  3995: 82 22                    t0 = u64 [t0]
  3997: c8 79 09                 a2 = a2 + a0
  4000: d3 9b 0b                 a4 = a4 ^ a2
  4003: 7b 1b 00 01              u64 [sp + 0x100] = a4
  4007: c8 c9 09                 a2 = a2 + a5
  4010: 7b 19 10 01              u64 [sp + 0x110] = a2
  4014: c8 24 04                 t2 = t2 + t0
  4017: 9e 36 10                 s1 = t1 >>r 0x10
  4020: c8 6a 0a                 a3 = a3 + s1
  4023: 7b 1a f8 00              u64 [sp + 0xf8] = a3
  4027: 82 17 30 01              a0 = u64 [sp + 0x130]
  4031: 9e 79 20                 a2 = a0 >>r 0x20
  4034: 82 12 58 01              t0 = u64 [sp + 0x158]
  4038: c8 92 02                 t0 = t0 + a2
  4041: 82 17 60 01              a0 = u64 [sp + 0x160]
  4045: d3 72 0c                 a5 = t0 ^ a0
  4048: 9e cb 18                 a4 = a5 >>r 0x18
  4051: 82 17 20 01              a0 = u64 [sp + 0x120]
  4055: c8 b7 07                 a0 = a0 + a4
  4058: d3 79 09                 a2 = a2 ^ a0
  4061: 9e 9c 10                 a5 = a2 >>r 0x10
  4064: c8 2c 09                 a2 = a5 + t0
  4067: d3 9b 0b                 a4 = a4 ^ a2
  4070: 9e b2 3f                 t0 = a4 >>r 0x3f
  4073: 82 1a b8 00              a3 = u64 [sp + 0xb8]
  4077: 97 aa 03                 a3 = a3 << 0x3
  4080: c8 0a 0a                 a3 = a3 + ra
  4083: 82 aa                    a3 = u64 [a3]
  4085: 82 1b 28 01              a4 = u64 [sp + 0x128]
  4089: 97 bb 03                 a4 = a4 << 0x3
  4092: c8 0b 0b                 a4 = a4 + ra
  4095: 82 bb                    a4 = u64 [a4]
  4097: c8 24 04                 t2 = t2 + t0
  4100: d3 64 06                 s1 = t2 ^ s1
  4103: c8 4a 0a                 a3 = a3 + t2
  4106: 7b 1a 60 01              u64 [sp + 0x160] = a3
  4110: c8 7b 0b                 a4 = a4 + a0
  4113: 64 84                    t2 = a1
  4115: d3 58 07                 a0 = a1 ^ s0
  4118: 9e 77 3f                 a0 = a0 >>r 0x3f
  4121: 82 1a 48 01              a3 = u64 [sp + 0x148]
  4125: 97 aa 03                 a3 = a3 << 0x3
  4128: c8 0a 0a                 a3 = a3 + ra
  4131: 82 aa                    a3 = u64 [a3]
  4133: 82 15 c8 00              s0 = u64 [sp + 0xc8]
  4137: 97 55 03                 s0 = s0 << 0x3
  4140: c8 05 05                 s0 = s0 + ra
  4143: 82 55                    s0 = u64 [s0]
  4145: c8 7b 0b                 a4 = a4 + a0
  4148: 82 18 18 01              a1 = u64 [sp + 0x118]
  4152: d3 b8 08                 a1 = a1 ^ a4
  4155: 7b 18 30 01              u64 [sp + 0x130] = a1
  4159: c8 ba 0a                 a3 = a3 + a4
  4162: 7b 1a 20 01              u64 [sp + 0x120] = a3
  4166: 82 13 40 01              t1 = u64 [sp + 0x140]
  4170: c8 53 03                 t1 = t1 + s0
  4173: 82 1a 38 01              a3 = u64 [sp + 0x138]
  4177: 82 18 f8 00              a1 = u64 [sp + 0xf8]
  4181: d3 a8 0b                 a4 = a1 ^ a3
  4184: 82 15 c0 00              s0 = u64 [sp + 0xc0]
  4188: 97 55 03                 s0 = s0 << 0x3
  4191: c8 05 05                 s0 = s0 + ra
  4194: 82 55                    s0 = u64 [s0]
  4196: 9e bb 3f                 a4 = a4 >>r 0x3f
  4199: c8 b3 03                 t1 = t1 + a4
  4202: d3 c3 0a                 a3 = t1 ^ a5
  4205: c8 53 03                 t1 = t1 + s0
  4208: 82 1c 00 01              a5 = u64 [sp + 0x100]
  4212: 9e c5 20                 s0 = a5 >>r 0x20
  4215: c8 59 09                 a2 = a2 + s0
  4218: 82 1c 08 01              a5 = u64 [sp + 0x108]
  4222: d3 c9 00                 ra = a2 ^ a5
  4225: 9e 00 18                 ra = ra >>r 0x18
  4228: 82 1c 10 01              a5 = u64 [sp + 0x110]
  4232: c8 0c 0c                 a5 = a5 + ra
  4235: 7b 1c 48 01              u64 [sp + 0x148] = a5
  4239: d3 c5 05                 s0 = s0 ^ a5
  4242: 9e 55 10                 s0 = s0 >>r 0x10
  4245: 7b 15 38 01              u64 [sp + 0x138] = s0
  4249: c8 59 09                 a2 = a2 + s0
  4252: 7b 19 58 01              u64 [sp + 0x158] = a2
  4256: d3 09 09                 a2 = a2 ^ ra
  4259: 9e 99 3f                 a2 = a2 >>r 0x3f
  4262: 7b 19 88 00              u64 [sp + 0x88] = a2
  4266: 9e 69 20                 a2 = s1 >>r 0x20
  4269: c8 49 05                 s0 = a2 + t2
  4272: d3 25 06                 s1 = s0 ^ t0
  4275: 9e 66 18                 s1 = s1 >>r 0x18
  4278: 82 1c 60 01              a5 = u64 [sp + 0x160]
  4282: c8 6c 0c                 a5 = a5 + s1
  4285: d3 c9 09                 a2 = a2 ^ a5
  4288: 9e 92 10                 t0 = a2 >>r 0x10
  4291: 7b 12 28 01              u64 [sp + 0x128] = t0
  4295: c8 52 00                 ra = t0 + s0
  4298: 82 14 68                 t2 = u64 [sp + 0x68]
  4301: d3 60 09                 a2 = ra ^ s1
  4304: 9e 99 3f                 a2 = a2 >>r 0x3f
  4307: 7b 19 60 01              u64 [sp + 0x160] = a2
  4311: 82 19 30 01              a2 = u64 [sp + 0x130]
  4315: 9e 99 20                 a2 = a2 >>r 0x20
  4318: c8 98 08                 a1 = a1 + a2
  4321: d3 87 07                 a0 = a0 ^ a1
  4324: 9e 77 18                 a0 = a0 >>r 0x18
  4327: 82 12 20 01              t0 = u64 [sp + 0x120]
  4331: c8 72 02                 t0 = t0 + a0
  4334: d3 92 09                 a2 = t0 ^ a2
  4337: 9e 99 10                 a2 = a2 >>r 0x10
  4340: 7b 19 30 01              u64 [sp + 0x130] = a2
  4344: c8 89 05                 s0 = a2 + a1
  4347: d3 57 07                 a0 = a0 ^ s0
  4350: 9e 77 3f                 a0 = a0 >>r 0x3f
  4353: 7b 17 40 01              u64 [sp + 0x140] = a0
  4357: 9e a7 20                 a0 = a3 >>r 0x20
  4360: 82 18 50 01              a1 = u64 [sp + 0x150]
  4364: c8 78 08                 a1 = a1 + a0
  4367: d3 8b 0b                 a4 = a4 ^ a1
  4370: 9e b9 18                 a2 = a4 >>r 0x18
  4373: c8 93 03                 t1 = t1 + a2
  4376: d3 73 07                 a0 = t1 ^ a0
  4379: 9e 77 10                 a0 = a0 >>r 0x10
  4382: 7b 17 20 01              u64 [sp + 0x120] = a0
  4386: c8 87 07                 a0 = a0 + a1
  4389: 82 18 70                 a1 = u64 [sp + 0x70]
  4392: 7b 17 50 01              u64 [sp + 0x150] = a0
  4396: d3 97 07                 a0 = a0 ^ a2
  4399: 9e 77 3f                 a0 = a0 >>r 0x3f
  4402: 7b 17 90 00              u64 [sp + 0x90] = a0
  4406: 82 16 e8 00              s1 = u64 [sp + 0xe8]
  4410: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  4413: 82 1b 68 01              a4 = u64 [sp + 0x168]
  4417: 95 bb 10                 a4 = a4 + 0x10
  4420: 82 19 60                 a2 = u64 [sp + 0x60]
  4423: 33 0a 10                 a3 = 0x10
  4426: 52 06 ed fb              jump @143 if s1 != 0
      :                          @160
  4430: 82 17 58                 a0 = u64 [sp + 0x58]
  4433: 82 1a 48 01              a3 = u64 [sp + 0x148]
  4437: d3 a7 07                 a0 = a0 ^ a3
  4440: d3 57 07                 a0 = a0 ^ s0
  4443: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  4447: d3 9c 07                 a0 = a5 ^ a2
  4450: 82 19 50 01              a2 = u64 [sp + 0x150]
  4454: d3 97 07                 a0 = a0 ^ a2
  4457: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  4461: 82 17 58 01              a0 = u64 [sp + 0x158]
  4465: d3 47 07                 a0 = a0 ^ t2
  4468: d3 27 07                 a0 = a0 ^ t0
  4471: 7b 17 b8 01              u64 [sp + 0x1b8] = a0
  4475: d3 80 07                 a0 = ra ^ a1
  4478: d3 37 07                 a0 = a0 ^ t1
  4481: 7b 17 c0 01              u64 [sp + 0x1c0] = a0
  4485: 7c 17 c7 01              a0 = u8 [sp + 0x1c7]
  4489: 7b 17 68 01              u64 [sp + 0x168] = a0
  4493: 7c 17 c6 01              a0 = u8 [sp + 0x1c6]
  4497: 7b 17 60 01              u64 [sp + 0x160] = a0
  4501: 7c 17 c5 01              a0 = u8 [sp + 0x1c5]
  4505: 7b 17 58 01              u64 [sp + 0x158] = a0
  4509: 7c 17 c4 01              a0 = u8 [sp + 0x1c4]
  4513: 7b 17 50 01              u64 [sp + 0x150] = a0
  4517: 7c 17 c3 01              a0 = u8 [sp + 0x1c3]
  4521: 7b 17 48 01              u64 [sp + 0x148] = a0
  4525: 7c 17 c2 01              a0 = u8 [sp + 0x1c2]
  4529: 7b 17 40 01              u64 [sp + 0x140] = a0
  4533: 7c 17 c1 01              a0 = u8 [sp + 0x1c1]
  4537: 7b 17 38 01              u64 [sp + 0x138] = a0
  4541: 7c 17 c0 01              a0 = u8 [sp + 0x1c0]
  4545: 7b 17 30 01              u64 [sp + 0x130] = a0
  4549: 7c 17 bf 01              a0 = u8 [sp + 0x1bf]
  4553: 7b 17 28 01              u64 [sp + 0x128] = a0
  4557: 7c 17 be 01              a0 = u8 [sp + 0x1be]
  4561: 7b 17 20 01              u64 [sp + 0x120] = a0
  4565: 7c 17 bd 01              a0 = u8 [sp + 0x1bd]
  4569: 7b 17 18 01              u64 [sp + 0x118] = a0
  4573: 7c 17 bc 01              a0 = u8 [sp + 0x1bc]
  4577: 7b 17 10 01              u64 [sp + 0x110] = a0
  4581: 7c 17 bb 01              a0 = u8 [sp + 0x1bb]
  4585: 7b 17 08 01              u64 [sp + 0x108] = a0
  4589: 7c 17 ba 01              a0 = u8 [sp + 0x1ba]
  4593: 7b 17 00 01              u64 [sp + 0x100] = a0
  4597: 7c 17 b9 01              a0 = u8 [sp + 0x1b9]
  4601: 7b 17 f8 00              u64 [sp + 0xf8] = a0
  4605: 7c 17 b8 01              a0 = u8 [sp + 0x1b8]
  4609: 7b 17 f0 00              u64 [sp + 0xf0] = a0
  4613: 7c 17 b7 01              a0 = u8 [sp + 0x1b7]
  4617: 7b 17 e8 00              u64 [sp + 0xe8] = a0
  4621: 7c 17 b6 01              a0 = u8 [sp + 0x1b6]
  4625: 7b 17 e0 00              u64 [sp + 0xe0] = a0
  4629: 7c 17 b5 01              a0 = u8 [sp + 0x1b5]
  4633: 7b 17 d8 00              u64 [sp + 0xd8] = a0
  4637: 7c 17 b4 01              a0 = u8 [sp + 0x1b4]
  4641: 7b 17 d0 00              u64 [sp + 0xd0] = a0
  4645: 7c 17 b3 01              a0 = u8 [sp + 0x1b3]
  4649: 7b 17 c8 00              u64 [sp + 0xc8] = a0
  4653: 7c 18 b2 01              a1 = u8 [sp + 0x1b2]
  4657: 7c 19 b1 01              a2 = u8 [sp + 0x1b1]
  4661: 7c 1a b0 01              a3 = u8 [sp + 0x1b0]
  4665: 7c 12 af 01              t0 = u8 [sp + 0x1af]
  4669: 7c 13 ae 01              t1 = u8 [sp + 0x1ae]
  4673: 7c 14 ad 01              t2 = u8 [sp + 0x1ad]
  4677: 7c 10 ac 01              ra = u8 [sp + 0x1ac]
  4681: 7c 1b ab 01              a4 = u8 [sp + 0x1ab]
  4685: 7c 1c aa 01              a5 = u8 [sp + 0x1aa]
  4689: 7c 16 a9 01              s1 = u8 [sp + 0x1a9]
  4693: 7c 15 a8 01              s0 = u8 [sp + 0x1a8]
  4697: 01                       fallthrough
      :                          @161
  4698: 3b 05 80 10 03           u8 [0x31080] = s0
  4703: 3b 06 81 10 03           u8 [0x31081] = s1
  4708: 3b 0c 82 10 03           u8 [0x31082] = a5
  4713: 3b 0b 83 10 03           u8 [0x31083] = a4
  4718: 3b 00 84 10 03           u8 [0x31084] = ra
  4723: 3b 04 85 10 03           u8 [0x31085] = t2
  4728: 3b 03 86 10 03           u8 [0x31086] = t1
  4733: 3b 02 87 10 03           u8 [0x31087] = t0
  4738: 3b 0a 88 10 03           u8 [0x31088] = a3
  4743: 3b 09 89 10 03           u8 [0x31089] = a2
  4748: 3b 08 8a 10 03           u8 [0x3108a] = a1
  4753: 82 18 c8 00              a1 = u64 [sp + 0xc8]
  4757: 3b 08 8b 10 03           u8 [0x3108b] = a1
  4762: 82 18 d0 00              a1 = u64 [sp + 0xd0]
  4766: 3b 08 8c 10 03           u8 [0x3108c] = a1
  4771: 82 18 d8 00              a1 = u64 [sp + 0xd8]
  4775: 3b 08 8d 10 03           u8 [0x3108d] = a1
  4780: 82 18 e0 00              a1 = u64 [sp + 0xe0]
  4784: 3b 08 8e 10 03           u8 [0x3108e] = a1
  4789: 82 18 e8 00              a1 = u64 [sp + 0xe8]
  4793: 3b 08 8f 10 03           u8 [0x3108f] = a1
  4798: 82 18 f0 00              a1 = u64 [sp + 0xf0]
  4802: 3b 08 90 10 03           u8 [0x31090] = a1
  4807: 82 18 f8 00              a1 = u64 [sp + 0xf8]
  4811: 3b 08 91 10 03           u8 [0x31091] = a1
  4816: 82 18 00 01              a1 = u64 [sp + 0x100]
  4820: 3b 08 92 10 03           u8 [0x31092] = a1
  4825: 82 18 08 01              a1 = u64 [sp + 0x108]
  4829: 3b 08 93 10 03           u8 [0x31093] = a1
  4834: 82 18 10 01              a1 = u64 [sp + 0x110]
  4838: 3b 08 94 10 03           u8 [0x31094] = a1
  4843: 82 18 18 01              a1 = u64 [sp + 0x118]
  4847: 3b 08 95 10 03           u8 [0x31095] = a1
  4852: 82 18 20 01              a1 = u64 [sp + 0x120]
  4856: 3b 08 96 10 03           u8 [0x31096] = a1
  4861: 82 18 28 01              a1 = u64 [sp + 0x128]
  4865: 3b 08 97 10 03           u8 [0x31097] = a1
  4870: 82 18 30 01              a1 = u64 [sp + 0x130]
  4874: 3b 08 98 10 03           u8 [0x31098] = a1
  4879: 82 18 38 01              a1 = u64 [sp + 0x138]
  4883: 3b 08 99 10 03           u8 [0x31099] = a1
  4888: 82 18 40 01              a1 = u64 [sp + 0x140]
  4892: 3b 08 9a 10 03           u8 [0x3109a] = a1
  4897: 82 18 48 01              a1 = u64 [sp + 0x148]
  4901: 3b 08 9b 10 03           u8 [0x3109b] = a1
  4906: 82 18 50 01              a1 = u64 [sp + 0x150]
  4910: 3b 08 9c 10 03           u8 [0x3109c] = a1
  4915: 82 18 58 01              a1 = u64 [sp + 0x158]
  4919: 3b 08 9d 10 03           u8 [0x3109d] = a1
  4924: 81 18 84 01              a1 = i32 [sp + 0x184]
  4928: 82 19 60 01              a2 = u64 [sp + 0x160]
  4932: 3b 09 9e 10 03           u8 [0x3109e] = a2
  4937: 82 19 68 01              a2 = u64 [sp + 0x168]
  4941: 3b 09 9f 10 03           u8 [0x3109f] = a2
  4946: 33 09 80 10 03           a2 = 0x31080
  4951: 3d 08 a0 10 03           u32 [0x310a0] = a1
  4956: 49 21 88 01 24           u64 [sp + 392] = 0x24
  4961: 95 17 70 01              a0 = sp + 0x170
  4965: 7b 17 08 03              u64 [sp + 0x308] = a0
  4969: 33 07 06                 a0 = 0x6
  4972: 7b 17 10 03              u64 [sp + 0x310] = a0
  4976: 7b 19 68 01              u64 [sp + 0x168] = a2
  4980: 7b 19 18 03              u64 [sp + 0x318] = a2
  4984: 33 07 0e                 a0 = 0xe
  4987: 7b 17 20 03              u64 [sp + 0x320] = a0
  4991: 95 17 88 01              a0 = sp + 0x188
  4995: 7b 17 28 03              u64 [sp + 0x328] = a0
  4999: 33 07 aa 00              a0 = 0xaa
  5003: 7b 17 30 03              u64 [sp + 0x330] = a0
  5007: 49 21 a8 01 02           u64 [sp + 424] = 0x2
  5012: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  5017: 49 21 c8 01              u64 [sp + 456] = 0
  5021: 14 09 20 00 00 00 10 00 00 00 a2 = 0x1000000020
  5031: 7b 19 d0 01              u64 [sp + 0x1d0] = a2
  5035: 46 21 d8 01 03           u8 [sp + 472] = 0x3
  5040: 49 21 e0 01 02           u64 [sp + 480] = 0x2
  5045: 49 21 f0 01 02           u64 [sp + 496] = 0x2
  5050: 49 21 00 02 01           u64 [sp + 512] = 0x1
  5055: 7b 19 08 02              u64 [sp + 0x208] = a2
  5059: 46 21 10 02 03           u8 [sp + 528] = 0x3
  5064: 49 21 18 02 02           u64 [sp + 536] = 0x2
  5069: 49 21 28 02 02           u64 [sp + 552] = 0x2
  5074: 49 21 38 02 02           u64 [sp + 568] = 0x2
  5079: 49 21 40 02 20           u64 [sp + 576] = 0x20
  5084: 33 07 40 00 01           a0 = 0x10040
  5089: 7b 17 88 02              u64 [sp + 0x288] = a0
  5093: 49 21 90 02 03           u64 [sp + 656] = 0x3
  5098: 95 17 a8 01              a0 = sp + 0x1a8
  5102: 7b 17 a8 02              u64 [sp + 0x2a8] = a0
  5106: 49 21 b0 02 03           u64 [sp + 688] = 0x3
  5111: 95 17 08 03              a0 = sp + 0x308
  5115: 7b 17 98 02              u64 [sp + 0x298] = a0
  5119: 46 21 48 02 03           u8 [sp + 584] = 0x3
  5124: 49 21 a0 02 03           u64 [sp + 672] = 0x3
  5129: 95 17 90 01              a0 = sp + 0x190
  5133: 95 18 88 02              a1 = sp + 0x288
  5137: 50 10 70 e7 06           ra = 112, jump @328
      :                          @162 [@dyn 56]
  5142: 82 15 98 01              s0 = u64 [sp + 0x198]
  5146: 82 1b a0 01              a4 = u64 [sp + 0x1a0]
  5150: 82 16 90 01              s1 = u64 [sp + 0x190]
  5154: 33 07 02                 a0 = 0x2
  5157: 33 08                    a1 = 0
  5159: 33 09                    a2 = 0
  5161: 64 5a                    a3 = s0
  5163: 33 00 72                 ra = 0x72
  5166: 0a 64                    ecalli 100 // 'log'
  5168: 01                       fallthrough
      :                          @163 [@dyn 57]
  5169: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
  5174: 53 38 00 00 ff 31        jump @169 if a1 <u 4294901760
      :                          @164
  5180: 33 07 b0 1a 03           a0 = 0x31ab0
  5185: 95 77 00 00 01           a0 = a0 + 0x10000
  5190: 01                       fallthrough
      :                          @165
  5191: 82 78                    a1 = u64 [a0]
  5193: c9 87 09                 a2 = a0 - a1
  5196: ab 59 1b                 jump @169 if a2 != s0
      :                          @166
  5199: c9 68 09                 a2 = a1 - s1
  5202: 01                       fallthrough
      :                          @167
  5203: 82 7a                    a3 = u64 [a0]
  5205: ab 8a f2                 jump @165 if a3 != a1
      :                          @168
  5208: 7b 79                    u64 [a0] = a2
  5210: 33 0b                    a4 = 0
  5212: 82 18 88 01              a1 = u64 [sp + 0x188]
  5216: 82 17 68 01              a0 = u64 [sp + 0x168]
  5220: 28 d6 f0                 jump @87
      :                          @169
  5223: 82 18 88 01              a1 = u64 [sp + 0x188]
  5227: 82 17 68 01              a0 = u64 [sp + 0x168]
  5231: 28 cb f0                 jump @87
      :                          @170
  5234: 00                       trap
      :                          @171
  5235: 82 15 e8 01              s0 = u64 [sp + 0x1e8]
  5239: c8 35 05                 s0 = s0 + t1
  5242: 64 36                    s1 = t1
  5244: ae 35 0f                 jump @173 if s0 >=u t1
      :                          @172
  5247: 82 17 f0 01              a0 = u64 [sp + 0x1f0]
  5251: 95 77 01                 a0 = a0 + 0x1
  5254: 7b 17 f0 01              u64 [sp + 0x1f0] = a0
  5258: 01                       fallthrough
      :                          @173
  5259: 95 17 88 02              a0 = sp + 0x288
  5263: 33 09 80 00              a2 = 0x80
  5267: 33 08                    a1 = 0
  5269: 50 10 74 8f 09           ra = 116, jump @396
      :                          @174 [@dyn 58]
  5274: 64 69                    a2 = s1
  5276: 56 26 80 00 6c           jump @190 if s1 >u 128
      :                          @175
  5281: 82 17 f0 01              a0 = u64 [sp + 0x1f0]
  5285: 82 18 a8 01              a1 = u64 [sp + 0x1a8]
  5289: 7b 18 58                 u64 [sp + 0x58] = a1
  5292: 82 18 b0 01              a1 = u64 [sp + 0x1b0]
  5296: 7b 18 60                 u64 [sp + 0x60] = a1
  5299: 82 18 b8 01              a1 = u64 [sp + 0x1b8]
  5303: 7b 18 68                 u64 [sp + 0x68] = a1
  5306: 82 18 c0 01              a1 = u64 [sp + 0x1c0]
  5310: 7b 18 70                 u64 [sp + 0x70] = a1
  5313: 82 18 c8 01              a1 = u64 [sp + 0x1c8]
  5317: 82 1b d0 01              a4 = u64 [sp + 0x1d0]
  5321: 82 1a d8 01              a3 = u64 [sp + 0x1d8]
  5325: 7b 1a 60 01              u64 [sp + 0x160] = a3
  5329: 82 1a e0 01              a3 = u64 [sp + 0x1e0]
  5333: 7b 1a 40 01              u64 [sp + 0x140] = a3
  5337: 82 1a 90 00              a3 = u64 [sp + 0x90]
  5341: d3 5a 0a                 a3 = a3 ^ s0
  5344: 7b 1a 28 01              u64 [sp + 0x128] = a3
  5348: 82 1a 88 00              a3 = u64 [sp + 0x88]
  5352: d3 a7 07                 a0 = a0 ^ a3
  5355: 7b 17 30 01              u64 [sp + 0x130] = a0
  5359: 7b 1b 88 00              u64 [sp + 0x88] = a4
  5363: 7b 18 90 00              u64 [sp + 0x90] = a1
  5367: 28 c9 f7                 jump @140
      :                          @176
  5370: 00                       trap
      :                          @177
  5371: 00                       trap
      :                          @178
  5372: 00                       trap
      :                          @179
  5373: 00                       trap
      :                          @180
  5374: 00                       trap
      :                          @181
  5375: 00                       trap
      :                          @182
  5376: 00                       trap
      :                          @183
  5377: 00                       trap
      :                          @184
  5378: 00                       trap
      :                          @185
  5379: 00                       trap
      :                          @186
  5380: 00                       trap
      :                          @187
  5381: 00                       trap
      :                          @188
  5382: 00                       trap
      :                          @189
  5383: 00                       trap
      :                          @190
  5384: 00                       trap
      :                          @191
  5385: 00                       trap
      :                          @192 [export #1: 'accumulate']
  5386: 64 7a                    a3 = a0
  5388: 33 07 00 00 01           a0 = 0x10000
  5393: 51 08 b3 02              jump @257 if a1 == 0
      :                          @193
  5397: 95 11 68 ff              sp = sp + 0xffffffffffffff68
  5401: 7b 10 90 00              u64 [sp + 0x90] = ra
  5405: 7b 15 88 00              u64 [sp + 0x88] = s0
  5409: 7b 16 80 00              u64 [sp + 0x80] = s1
  5413: 64 86                    s1 = a1
  5415: 7d a8                    a1 = i8 [a3]
  5417: 33 05 01                 s0 = 0x1
  5420: 59 08 37                 jump @200 if a1 >=s 0
      :                          @194
  5423: 84 89 ff 00              a2 = a1 & 0xff
  5427: 33 05 02                 s0 = 0x2
  5430: 53 29 c0 00 2d           jump @200 if a2 <u 192
      :                          @195
  5435: 33 05 03                 s0 = 0x3
  5438: 53 29 e0 00 25           jump @200 if a2 <u 224
      :                          @196
  5443: 33 05 04                 s0 = 0x4
  5446: 53 29 f0 00 1d           jump @200 if a2 <u 240
      :                          @197
  5451: 33 05 05                 s0 = 0x5
  5454: 53 29 f8 00 15           jump @200 if a2 <u 248
      :                          @198
  5459: 33 05 06                 s0 = 0x6
  5462: 53 29 fc 00 0d           jump @200 if a2 <u 252
      :                          @199
  5467: 88 98 fe 00              a1 = a2 <u 0xfe
  5471: 9a 85 08                 s0 = 0x8 - a1
  5474: 01                       fallthrough
      :                          @200
  5475: ae 56 08                 jump @202 if s1 >=u s0
      :                          @201
  5478: 33 08                    a1 = 0
  5480: 28 4a 02                 jump @256
      :                          @202
  5483: 64 a7                    a0 = a3
  5485: 64 58                    a1 = s0
  5487: 7b 1a 10                 u64 [sp + 0x10] = a3
  5490: 50 10 76 5a 12           ra = 118, jump @582
      :                          @203 [@dyn 59]
  5495: aa 56 33 02              jump @255 if s1 == s0
      :                          @204
  5499: 82 17 10                 a0 = u64 [sp + 0x10]
  5502: c8 57 07                 a0 = a0 + s0
  5505: 7d 78                    a1 = i8 [a0]
  5507: c9 56 06                 s1 = s1 - s0
  5510: 33 05 01                 s0 = 0x1
  5513: 59 08 37                 jump @211 if a1 >=s 0
      :                          @205
  5516: 84 89 ff 00              a2 = a1 & 0xff
  5520: 33 05 02                 s0 = 0x2
  5523: 53 29 c0 00 2d           jump @211 if a2 <u 192
      :                          @206
  5528: 33 05 03                 s0 = 0x3
  5531: 53 29 e0 00 25           jump @211 if a2 <u 224
      :                          @207
  5536: 33 05 04                 s0 = 0x4
  5539: 53 29 f0 00 1d           jump @211 if a2 <u 240
      :                          @208
  5544: 33 05 05                 s0 = 0x5
  5547: 53 29 f8 00 15           jump @211 if a2 <u 248
      :                          @209
  5552: 33 05 06                 s0 = 0x6
  5555: 53 29 fc 00 0d           jump @211 if a2 <u 252
      :                          @210
  5560: 88 98 fe 00              a1 = a2 <u 0xfe
  5564: 9a 85 08                 s0 = 0x8 - a1
  5567: 01                       fallthrough
      :                          @211
  5568: ac 56 ea 01              jump @255 if s1 <u s0
      :                          @212
  5572: 64 58                    a1 = s0
  5574: 7b 16 10                 u64 [sp + 0x10] = s1
  5577: 64 76                    s1 = a0
  5579: 50 10 78 01 12           ra = 120, jump @582
      :                          @213 [@dyn 60]
  5584: c8 65 07                 a0 = s0 + s1
  5587: 82 16 10                 s1 = u64 [sp + 0x10]
  5590: ab 56 0b                 jump @215 if s1 != s0
      :                          @214
  5593: 33 08                    a1 = 0
  5595: 33 00 7a                 ra = 0x7a
  5598: 28 ee 11                 jump @582
      :                          @215
  5601: 7d 79                    a2 = i8 [a0]
  5603: c9 56 06                 s1 = s1 - s0
  5606: 33 08 01                 a1 = 0x1
  5609: 59 09 44                 jump @222 if a2 >=s 0
      :                          @216
  5612: 84 99 ff 00              a2 = a2 & 0xff
  5616: 33 0a c0 00              a3 = 0xc0
  5620: 33 08 02                 a1 = 0x2
  5623: ac a9 36                 jump @222 if a2 <u a3
      :                          @217
  5626: 33 0a e0 00              a3 = 0xe0
  5630: 33 08 03                 a1 = 0x3
  5633: ac a9 2c                 jump @222 if a2 <u a3
      :                          @218
  5636: 33 0a f0 00              a3 = 0xf0
  5640: 33 08 04                 a1 = 0x4
  5643: ac a9 22                 jump @222 if a2 <u a3
      :                          @219
  5646: 33 0a f8 00              a3 = 0xf8
  5650: 33 08 05                 a1 = 0x5
  5653: ac a9 18                 jump @222 if a2 <u a3
      :                          @220
  5656: 33 0a fc 00              a3 = 0xfc
  5660: 33 08 06                 a1 = 0x6
  5663: ac a9 0e                 jump @222 if a2 <u a3
      :                          @221
  5666: 88 98 fe 00              a1 = a2 <u 0xfe
  5670: 33 09 08                 a2 = 0x8
  5673: c9 89 08                 a1 = a2 - a1
  5676: 01                       fallthrough
      :                          @222
  5677: ac 86 7d 01              jump @255 if s1 <u a1
      :                          @223
  5681: 50 10 7a 9b 11           ra = 122, jump @582
      :                          @224 [@dyn 61]
  5686: 33 07 61 00 03           a0 = 0x30061
  5691: 33 09 08 10              a2 = 0x1008
  5695: 33 0a 0f                 a3 = 0xf
  5698: 33 08                    a1 = 0
  5700: 33 0b                    a4 = 0
  5702: 33 0c                    a5 = 0
  5704: 33 00 7c                 ra = 0x7c
  5707: 0a 01                    ecalli 1 // 'fetch'
  5709: 01                       fallthrough
      :                          @225 [@dyn 62]
  5710: 51 07 5c 01              jump @255 if a0 == 0
      :                          @226
  5714: 95 76 80                 s1 = a0 + 0xffffffffffffff80
  5717: 33 07 00 00 01           a0 = 0x10000
  5722: 51 06 0c ff              jump @201 if s1 == 0
      :                          @227
  5726: 35 08 e1 00 03           a1 = i8 [0x300e1]
  5731: 33 05 01                 s0 = 0x1
  5734: 59 08 37                 jump @234 if a1 >=s 0
      :                          @228
  5737: 84 89 ff 00              a2 = a1 & 0xff
  5741: 33 05 02                 s0 = 0x2
  5744: 53 29 c0 00 2d           jump @234 if a2 <u 192
      :                          @229
  5749: 33 05 03                 s0 = 0x3
  5752: 53 29 e0 00 25           jump @234 if a2 <u 224
      :                          @230
  5757: 33 05 04                 s0 = 0x4
  5760: 53 29 f0 00 1d           jump @234 if a2 <u 240
      :                          @231
  5765: 33 05 05                 s0 = 0x5
  5768: 53 29 f8 00 15           jump @234 if a2 <u 248
      :                          @232
  5773: 33 05 06                 s0 = 0x6
  5776: 53 29 fc 00 0d           jump @234 if a2 <u 252
      :                          @233
  5781: 88 98 fe 00              a1 = a2 <u 0xfe
  5785: 9a 85 08                 s0 = 0x8 - a1
  5788: 01                       fallthrough
      :                          @234
  5789: ac 56 c9 fe              jump @201 if s1 <u s0
      :                          @235
  5793: 33 07 61 00 03           a0 = 0x30061
  5798: 7b 17 10                 u64 [sp + 0x10] = a0
  5801: 95 77 80 00              a0 = a0 + 0x80
  5805: 64 58                    a1 = s0
  5807: 50 10 7e 1d 11           ra = 126, jump @582
      :                          @236 [@dyn 63]
  5812: 85 57 ff                 a0 = s0 ^ 0xffffffffffffffff
  5815: c8 67 07                 a0 = a0 + s1
  5818: 51 07 f0 00              jump @255 if a0 == 0
      :                          @237
  5822: 82 18 10                 a1 = u64 [sp + 0x10]
  5825: c8 85 05                 s0 = s0 + a1
  5828: 95 56 81 00              s1 = s0 + 0x81
  5832: 7d 68                    a1 = i8 [s1]
  5834: 33 05 01                 s0 = 0x1
  5837: 59 08 45                 jump @245 if a1 >=s 0
      :                          @238
  5840: 84 88 ff 00              a1 = a1 & 0xff
  5844: 33 09 c0 00              a2 = 0xc0
  5848: 33 05 02                 s0 = 0x2
  5851: ac 98 33                 jump @244 if a1 <u a2
      :                          @239
  5854: 33 09 e0 00              a2 = 0xe0
  5858: 33 05 03                 s0 = 0x3
  5861: ac 98 29                 jump @244 if a1 <u a2
      :                          @240
  5864: 33 09 f0 00              a2 = 0xf0
  5868: 33 05 04                 s0 = 0x4
  5871: ac 98 1f                 jump @244 if a1 <u a2
      :                          @241
  5874: 33 09 f8 00              a2 = 0xf8
  5878: 33 05 05                 s0 = 0x5
  5881: ac 98 15                 jump @244 if a1 <u a2
      :                          @242
  5884: 33 09 fc 00              a2 = 0xfc
  5888: 33 05 06                 s0 = 0x6
  5891: ac 98 0b                 jump @244 if a1 <u a2
      :                          @243
  5894: 88 88 fe 00              a1 = a1 <u 0xfe
  5898: 9a 85 08                 s0 = 0x8 - a1
  5901: 01                       fallthrough
      :                          @244
  5902: ac 57 9c 00              jump @255 if a0 <u s0
      :                          @245
  5906: 49 11 08 ff ff fe        u64 [sp + 8] = 0xfffffffffffeffff
  5912: 64 67                    a0 = s1
  5914: 64 58                    a1 = s0
  5916: 50 20 80 00 b0 10        ra = 128, jump @582
      :                          @246 [@dyn 64]
  5922: 7b 17 18                 u64 [sp + 0x18] = a0
  5925: 56 17 23 a1 00           jump @258 if a0 >u 35
      :                          @247
  5930: 95 17 18                 a0 = sp + 0x18
  5933: 7b 17 70                 u64 [sp + 0x70] = a0
  5936: 33 07 aa 00              a0 = 0xaa
  5940: 7b 17 78                 u64 [sp + 0x78] = a0
  5943: 33 07 e8 00 01           a0 = 0x100e8
  5948: 7b 17 40                 u64 [sp + 0x40] = a0
  5951: 49 11 48 02              u64 [sp + 72] = 0x2
  5955: 49 11 60                 u64 [sp + 96] = 0
  5958: 95 17 70                 a0 = sp + 0x70
  5961: 7b 17 50                 u64 [sp + 0x50] = a0
  5964: 49 11 58 01              u64 [sp + 88] = 0x1
  5968: 95 17 28                 a0 = sp + 0x28
  5971: 95 18 40                 a1 = sp + 0x40
  5974: 50 20 82 00 a2 03        ra = 130, jump @328
      :                          @248 [@dyn 65]
  5980: 82 15 30                 s0 = u64 [sp + 0x30]
  5983: 82 1b 38                 a4 = u64 [sp + 0x38]
  5986: 82 16 28                 s1 = u64 [sp + 0x28]
  5989: 33 07 02                 a0 = 0x2
  5992: 33 08                    a1 = 0
  5994: 33 09                    a2 = 0
  5996: 64 5a                    a3 = s0
  5998: 33 00 84 00              ra = 0x84
  6002: 0a 64                    ecalli 100 // 'log'
  6004: 01                       fallthrough
      :                          @249 [@dyn 66]
  6005: 82 17 08                 a0 = u64 [sp + 0x8]
  6008: c8 67 07                 a0 = a0 + s1
  6011: 53 37 00 00 ff 2f        jump @255 if a0 <u 4294901760
      :                          @250
  6017: 33 07 b0 1a 03           a0 = 0x31ab0
  6022: 95 77 00 00 01           a0 = a0 + 0x10000
  6027: 01                       fallthrough
      :                          @251
  6028: 82 78                    a1 = u64 [a0]
  6030: c9 87 09                 a2 = a0 - a1
  6033: ab 59 19                 jump @255 if a2 != s0
      :                          @252
  6036: c9 68 09                 a2 = a1 - s1
  6039: 01                       fallthrough
      :                          @253
  6040: 82 7a                    a3 = u64 [a0]
  6042: ab 8a f2                 jump @251 if a3 != a1
      :                          @254
  6045: 7b 79                    u64 [a0] = a2
  6047: 33 0b                    a4 = 0
  6049: 33 08                    a1 = 0
  6051: 33 07 00 00 01           a0 = 0x10000
  6056: 28 0a                    jump @256
      :                          @255
  6058: 33 08                    a1 = 0
  6060: 33 07 00 00 01           a0 = 0x10000
  6065: 01                       fallthrough
      :                          @256
  6066: 82 10 90 00              ra = u64 [sp + 0x90]
  6070: 82 15 88 00              s0 = u64 [sp + 0x88]
  6074: 82 16 80 00              s1 = u64 [sp + 0x80]
  6078: 95 11 98 00              sp = sp + 0x98
  6082: 32 00                    ret
      :                          @257
  6084: 32 00                    ret
      :                          @258
  6086: c8 65 08                 a1 = s0 + s1
  6089: 33 05 80 10 03           s0 = 0x31080
  6094: 33 09 24                 a2 = 0x24
  6097: 33 07 80 10 03           a0 = 0x31080
  6102: 50 20 86 00 9c 05        ra = 134, jump @378
      :                          @259 [@dyn 67]
  6108: 7b 15 10                 u64 [sp + 0x10] = s0
  6111: 80 57 20                 a0 = u32 [s0 + 0x20]
  6114: 7b 17                    u64 [sp] = a0
  6116: 7a 17 24                 u32 [sp + 0x24] = a0
  6119: 33 05 a4 10 03           s0 = 0x310a4
  6124: 33 06 50                 s1 = 0x50
  6127: 01                       fallthrough
      :                          @260
  6128: 33 09 20                 a2 = 0x20
  6131: 64 57                    a0 = s0
  6133: 82 18 10                 a1 = u64 [sp + 0x10]
  6136: 50 20 88 00 7a 05        ra = 136, jump @378
      :                          @261 [@dyn 68]
  6142: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  6145: 95 55 20                 s0 = s0 + 0x20
  6148: 52 06 ec                 jump @260 if s1 != 0
      :                          @262
  6151: 33 05 a4 10 03           s0 = 0x310a4
  6156: 33 07                    a0 = 0
  6158: 33 08 a4 10 03           a1 = 0x310a4
  6163: 82 16                    s1 = u64 [sp]
  6165: 64 69                    a2 = s1
  6167: 0a 0f                    ecalli 15 // 'assign'
  6169: 33 07 01                 a0 = 0x1
  6172: 64 58                    a1 = s0
  6174: 64 69                    a2 = s1
  6176: 0a 0f                    ecalli 15 // 'assign'
  6178: 95 17 24                 a0 = sp + 0x24
  6181: 7b 17 70                 u64 [sp + 0x70] = a0
  6184: 33 07 d8 00              a0 = 0xd8
  6188: 7b 17 78                 u64 [sp + 0x78] = a0
  6191: 33 07 90 00 01           a0 = 0x10090
  6196: 7b 17 40                 u64 [sp + 0x40] = a0
  6199: 49 11 48 01              u64 [sp + 72] = 0x1
  6203: 49 11 60                 u64 [sp + 96] = 0
  6206: 95 17 70                 a0 = sp + 0x70
  6209: 7b 17 50                 u64 [sp + 0x50] = a0
  6212: 49 11 58 01              u64 [sp + 88] = 0x1
  6216: 95 17 28                 a0 = sp + 0x28
  6219: 95 18 40                 a1 = sp + 0x40
  6222: 50 20 8a 00 aa 02        ra = 138, jump @328
      :                          @263 [@dyn 69]
  6228: 82 15 30                 s0 = u64 [sp + 0x30]
  6231: 82 1b 38                 a4 = u64 [sp + 0x38]
  6234: 82 16 28                 s1 = u64 [sp + 0x28]
  6237: 33 07 02                 a0 = 0x2
  6240: 33 08                    a1 = 0
  6242: 33 09                    a2 = 0
  6244: 64 5a                    a3 = s0
  6246: 33 00 8c 00              ra = 0x8c
  6250: 0a 64                    ecalli 100 // 'log'
  6252: 01                       fallthrough
      :                          @264 [@dyn 70]
  6253: 82 17 08                 a0 = u64 [sp + 0x8]
  6256: c8 67 07                 a0 = a0 + s1
  6259: 53 37 00 00 ff 31        jump @270 if a0 <u 4294901760
      :                          @265
  6265: 33 07 b0 1a 03           a0 = 0x31ab0
  6270: 95 77 00 00 01           a0 = a0 + 0x10000
  6275: 01                       fallthrough
      :                          @266
  6276: 82 78                    a1 = u64 [a0]
  6278: c9 87 09                 a2 = a0 - a1
  6281: ab 59 1b                 jump @270 if a2 != s0
      :                          @267
  6284: c9 68 09                 a2 = a1 - s1
  6287: 01                       fallthrough
      :                          @268
  6288: 82 7a                    a3 = u64 [a0]
  6290: ab 8a f2                 jump @266 if a3 != a1
      :                          @269
  6293: 7b 79                    u64 [a0] = a2
  6295: 33 0b                    a4 = 0
  6297: 33 07 80 10 03           a0 = 0x31080
  6302: 33 08 20                 a1 = 0x20
  6305: 28 11 ff                 jump @256
      :                          @270
  6308: 33 07 80 10 03           a0 = 0x31080
  6313: 33 08 20                 a1 = 0x20
  6316: 28 06 ff                 jump @256
      :                          @271 [export #2: 'on_transfer']
  6319: 33 07 00 00 01           a0 = 0x10000
  6324: 33 08                    a1 = 0
  6326: 32 00                    ret
      :                          @272
  6328: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  6331: 7b 10 40                 u64 [sp + 0x40] = ra
  6334: 7b 15 38                 u64 [sp + 0x38] = s0
  6337: 7b 16 30                 u64 [sp + 0x30] = s1
  6340: c8 89 09                 a2 = a2 + a1
  6343: ac 89 53                 jump @280 if a2 <u a1
      :                          @273
  6346: 64 75                    s0 = a0
  6348: 82 77                    a0 = u64 [a0]
  6350: 97 78 01                 a1 = a0 << 0x1
  6353: 33 0a 08                 a3 = 0x8
  6356: e4 a9 09                 a2 = maxu(a2, a3)
  6359: e4 98 06                 s1 = maxu(a1, a2)
  6362: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  6365: 98 88 3f                 a1 = a1 >> 0x3f
  6368: 51 07 12                 jump @275 if a0 == 0
      :                          @274
  6371: 82 59 08                 a2 = u64 [s0 + 0x8]
  6374: 7b 19 18                 u64 [sp + 0x18] = a2
  6377: 49 11 20 01              u64 [sp + 32] = 0x1
  6381: 7b 17 28                 u64 [sp + 0x28] = a0
  6384: 28 06                    jump @276
      :                          @275
  6386: 49 11 20                 u64 [sp + 32] = 0
  6389: 01                       fallthrough
      :                          @276
  6390: 64 17                    a0 = sp
  6392: 95 1a 18                 a3 = sp + 0x18
  6395: 64 69                    a2 = s1
  6397: 50 20 8e 00 33           ra = 142, jump @284
      :                          @277 [@dyn 71]
  6402: 82 18                    a1 = u64 [sp]
  6404: 82 17 08                 a0 = u64 [sp + 0x8]
  6407: 51 08 14                 jump @281 if a1 == 0
      :                          @278
  6410: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  6420: aa 87 0d                 jump @282 if a0 == a1
      :                          @279
  6423: 52 07 18                 jump @283 if a0 != 0
      :                          @280
  6426: 00                       trap
      :                          @281
  6427: 7b 57 08                 u64 [s0 + 0x8] = a0
  6430: 7b 56                    u64 [s0] = s1
  6432: 01                       fallthrough
      :                          @282
  6433: 82 10 40                 ra = u64 [sp + 0x40]
  6436: 82 15 38                 s0 = u64 [sp + 0x38]
  6439: 82 16 30                 s1 = u64 [sp + 0x30]
  6442: 95 11 48                 sp = sp + 0x48
  6445: 32 00                    ret
      :                          @283
  6447: 00                       trap
      :                          @284
  6448: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  6451: 7b 10 30                 u64 [sp + 0x30] = ra
  6454: 7b 15 28                 u64 [sp + 0x28] = s0
  6457: 7b 16 20                 u64 [sp + 0x20] = s1
  6460: 64 95                    s0 = a2
  6462: 64 72                    t0 = a0
  6464: 51 08 7a                 jump @294 if a1 == 0
      :                          @285
  6467: 82 a7 08                 a0 = u64 [a3 + 0x8]
  6470: 51 07 7d                 jump @295 if a0 == 0
      :                          @286
  6473: 82 a9 10                 a2 = u64 [a3 + 0x10]
  6476: 51 09 ab 00              jump @302 if a2 == 0
      :                          @287
  6480: 82 a8                    a1 = u64 [a3]
  6482: 33 06 b0 1a 03           s1 = 0x31ab0
  6487: 33 03 00 00 01           t1 = 0x10000
  6492: c8 36 06                 s1 = s1 + t1
  6495: 01                       fallthrough
      :                          @288
  6496: 82 6a                    a3 = u64 [s1]
  6498: c8 5a 07                 a0 = a3 + s0
  6501: ac a7 d0 00              jump @308 if a0 <u a3
      :                          @289
  6505: 95 7b 01                 a4 = a0 + 0x1
  6508: 88 bc 01                 a5 = a4 <u 0x1
  6511: d8 b3 0b                 a4 = t1 <u a4
  6514: d4 cb 0b                 a4 = a4 | a5
  6517: 52 0b c0 00              jump @308 if a4 != 0
      :                          @290
  6521: 82 6b                    a4 = u64 [s1]
  6523: ab ab e5                 jump @288 if a4 != a3
      :                          @291
  6526: 7b 67                    u64 [s1] = a0
  6528: 33 0c                    a5 = 0
  6530: 7b 12 18                 u64 [sp + 0x18] = t0
  6533: 33 0a b0 1a 03           a3 = 0x31ab0
  6538: 33 0b 00 00 01           a4 = 0x10000
  6543: 7b 1a                    u64 [sp] = a3
  6545: c8 ba 0a                 a3 = a3 + a4
  6548: c9 7a 07                 a0 = a3 - a0
  6551: 7b 17 10                 u64 [sp + 0x10] = a0
  6554: 7b 18 08                 u64 [sp + 0x8] = a1
  6557: 64 96                    s1 = a2
  6559: 50 20 90 00 d3 03        ra = 144, jump @378
      :                          @292 [@dyn 72]
  6565: 54 36 00 00 01 98 00     jump @309 if s1 <=u 65536
      :                          @293
  6572: 82 12 18                 t0 = u64 [sp + 0x18]
  6575: 82 18 10                 a1 = u64 [sp + 0x10]
  6578: 33 07                    a0 = 0
  6580: 7b 28 08                 u64 [t0 + 0x8] = a1
  6583: 28 b5 00                 jump @315
      :                          @294
  6586: 49 12 08                 u64 [t0 + 8] = 0
  6589: 33 07 01                 a0 = 0x1
  6592: 28 ac 00                 jump @315
      :                          @295
  6595: 33 09 b0 1a 03           a2 = 0x31ab0
  6600: 33 07 00 00 01           a0 = 0x10000
  6605: c8 79 09                 a2 = a2 + a0
  6608: 01                       fallthrough
      :                          @296
  6609: 82 9a                    a3 = u64 [a2]
  6611: c8 5a 08                 a1 = a3 + s0
  6614: ac a8 5f                 jump @308 if a1 <u a3
      :                          @297
  6617: 95 8b 01                 a4 = a1 + 0x1
  6620: 88 bc 01                 a5 = a4 <u 0x1
  6623: d8 b7 0b                 a4 = a0 <u a4
  6626: d4 cb 0b                 a4 = a4 | a5
  6629: 52 0b 50                 jump @308 if a4 != 0
      :                          @298
  6632: 82 9b                    a4 = u64 [a2]
  6634: ab ab e7                 jump @296 if a4 != a3
      :                          @299
  6637: 7b 98                    u64 [a2] = a1
  6639: 33 0c                    a5 = 0
  6641: 01                       fallthrough
      :                          @300
  6642: ab ab df                 jump @296 if a4 != a3
      :                          @301
  6645: 28 31                    jump @307
      :                          @302
  6647: 33 09 b0 1a 03           a2 = 0x31ab0
  6652: 33 07 00 00 01           a0 = 0x10000
  6657: c8 79 09                 a2 = a2 + a0
  6660: 01                       fallthrough
      :                          @303
  6661: 82 9a                    a3 = u64 [a2]
  6663: c8 5a 08                 a1 = a3 + s0
  6666: ac a8 2b                 jump @308 if a1 <u a3
      :                          @304
  6669: 95 8b 01                 a4 = a1 + 0x1
  6672: 88 bc 01                 a5 = a4 <u 0x1
  6675: d8 b7 0b                 a4 = a0 <u a4
  6678: d4 cb 0b                 a4 = a4 | a5
  6681: 52 0b 1c                 jump @308 if a4 != 0
      :                          @305
  6684: 82 9b                    a4 = u64 [a2]
  6686: ab ab e7                 jump @303 if a4 != a3
      :                          @306
  6689: 7b 98                    u64 [a2] = a1
  6691: 33 0c                    a5 = 0
  6693: 01                       fallthrough
      :                          @307
  6694: 33 07 b0 1a 04           a0 = 0x41ab0
  6699: c9 87 08                 a1 = a0 - a1
  6702: 33 07                    a0 = 0
  6704: 7b 28 08                 u64 [t0 + 0x8] = a1
  6707: 28 39                    jump @315
      :                          @308
  6709: 33 07 01                 a0 = 0x1
  6712: 7b 27 08                 u64 [t0 + 0x8] = a0
  6715: 28 31                    jump @315
      :                          @309
  6717: 64 6c                    a5 = s1
  6719: 82 17                    a0 = u64 [sp]
  6721: 95 77 00 00 01           a0 = a0 + 0x10000
  6726: 82 12 18                 t0 = u64 [sp + 0x18]
  6729: 82 16 08                 s1 = u64 [sp + 0x8]
  6732: 01                       fallthrough
      :                          @310
  6733: 82 78                    a1 = u64 [a0]
  6735: c9 87 09                 a2 = a0 - a1
  6738: ab 69 11                 jump @314 if a2 != s1
      :                          @311
  6741: c9 c8 09                 a2 = a1 - a5
  6744: 01                       fallthrough
      :                          @312
  6745: 82 7a                    a3 = u64 [a0]
  6747: ab 8a f2                 jump @310 if a3 != a1
      :                          @313
  6750: 7b 79                    u64 [a0] = a2
  6752: 33 0b                    a4 = 0
  6754: 01                       fallthrough
      :                          @314
  6755: 82 18 10                 a1 = u64 [sp + 0x10]
  6758: 33 07                    a0 = 0
  6760: 7b 28 08                 u64 [t0 + 0x8] = a1
  6763: 01                       fallthrough
      :                          @315
  6764: 7b 25 10                 u64 [t0 + 0x10] = s0
  6767: 7b 27                    u64 [t0] = a0
  6769: 82 10 30                 ra = u64 [sp + 0x30]
  6772: 82 15 28                 s0 = u64 [sp + 0x28]
  6775: 82 16 20                 s1 = u64 [sp + 0x20]
  6778: 95 11 38                 sp = sp + 0x38
  6781: 32 00                    ret
      :                          @316
  6783: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  6786: 7b 10 40                 u64 [sp + 0x40] = ra
  6789: 7b 15 38                 u64 [sp + 0x38] = s0
  6792: 7b 16 30                 u64 [sp + 0x30] = s1
  6795: 95 88 01                 a1 = a1 + 0x1
  6798: 51 08 54                 jump @324 if a1 == 0
      :                          @317
  6801: 64 75                    s0 = a0
  6803: 82 77                    a0 = u64 [a0]
  6805: 97 79 01                 a2 = a0 << 0x1
  6808: 33 0a 08                 a3 = 0x8
  6811: e4 a8 08                 a1 = maxu(a1, a3)
  6814: e4 89 06                 s1 = maxu(a2, a1)
  6817: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  6820: 98 88 3f                 a1 = a1 >> 0x3f
  6823: 51 07 12                 jump @319 if a0 == 0
      :                          @318
  6826: 82 59 08                 a2 = u64 [s0 + 0x8]
  6829: 7b 19 18                 u64 [sp + 0x18] = a2
  6832: 49 11 20 01              u64 [sp + 32] = 0x1
  6836: 7b 17 28                 u64 [sp + 0x28] = a0
  6839: 28 06                    jump @320
      :                          @319
  6841: 49 11 20                 u64 [sp + 32] = 0
  6844: 01                       fallthrough
      :                          @320
  6845: 64 17                    a0 = sp
  6847: 95 1a 18                 a3 = sp + 0x18
  6850: 64 69                    a2 = s1
  6852: 50 20 92 00 6c fe        ra = 146, jump @284
      :                          @321 [@dyn 73]
  6858: 82 18                    a1 = u64 [sp]
  6860: 82 17 08                 a0 = u64 [sp + 0x8]
  6863: 51 08 14                 jump @325 if a1 == 0
      :                          @322
  6866: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  6876: aa 87 0d                 jump @326 if a0 == a1
      :                          @323
  6879: 52 07 18                 jump @327 if a0 != 0
      :                          @324
  6882: 00                       trap
      :                          @325
  6883: 7b 57 08                 u64 [s0 + 0x8] = a0
  6886: 7b 56                    u64 [s0] = s1
  6888: 01                       fallthrough
      :                          @326
  6889: 82 10 40                 ra = u64 [sp + 0x40]
  6892: 82 15 38                 s0 = u64 [sp + 0x38]
  6895: 82 16 30                 s1 = u64 [sp + 0x30]
  6898: 95 11 48                 sp = sp + 0x48
  6901: 32 00                    ret
      :                          @327
  6903: 00                       trap
      :                          @328
  6904: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  6907: 7b 10 30                 u64 [sp + 0x30] = ra
  6910: 7b 15 28                 u64 [sp + 0x28] = s0
  6913: 7b 16 20                 u64 [sp + 0x20] = s1
  6916: 64 89                    a2 = a1
  6918: 82 8a 08                 a3 = u64 [a1 + 0x8]
  6921: 64 75                    s0 = a0
  6923: 51 0a 35                 jump @333 if a3 == 0
      :                          @329
  6926: 82 98                    a1 = u64 [a2]
  6928: 33 07                    a0 = 0
  6930: 95 8b 08                 a4 = a1 + 0x8
  6933: 01                       fallthrough
      :                          @330
  6934: 82 bc                    a5 = u64 [a4]
  6936: c8 c7 07                 a0 = a0 + a5
  6939: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  6942: 95 bb 10                 a4 = a4 + 0x10
  6945: 52 0a f5                 jump @330 if a3 != 0
      :                          @331
  6948: 82 9a 18                 a3 = u64 [a2 + 0x18]
  6951: 51 0a 24                 jump @335 if a3 == 0
      :                          @332
  6954: 82 88 08                 a1 = u64 [a1 + 0x8]
  6957: 8e 88                    a1 = a1 >u 0
  6959: 88 7a 10                 a3 = a0 <u 0x10
  6962: 85 aa 01                 a3 = a3 ^ 0x1
  6965: d4 a8 08                 a1 = a1 | a3
  6968: 89 7a                    a3 = a0 <s 0
  6970: e0 a8 08                 a1 = a1 & ~a3
  6973: 52 08 0a                 jump @334 if a1 != 0
      :                          @333
  6976: 33 07                    a0 = 0
  6978: 33 08 01                 a1 = 0x1
  6981: 28 4a                    jump @343
      :                          @334
  6983: 97 77 01                 a0 = a0 << 0x1
  6986: 01                       fallthrough
      :                          @335
  6987: 51 07 40                 jump @342 if a0 == 0
      :                          @336
  6990: 57 07 79                 jump @348 if a0 <s 0
      :                          @337
  6993: 64 52                    t0 = s0
  6995: 33 0b b0 1a 03           a4 = 0x31ab0
  7000: 33 08 00 00 01           a1 = 0x10000
  7005: c8 8b 0b                 a4 = a4 + a1
  7008: 01                       fallthrough
      :                          @338
  7009: 82 bc                    a5 = u64 [a4]
  7011: c8 7c 0a                 a3 = a5 + a0
  7014: ac ca 5f                 jump @346 if a3 <u a5
      :                          @339
  7017: 95 a5 01                 s0 = a3 + 0x1
  7020: 88 56 01                 s1 = s0 <u 0x1
  7023: d8 58 05                 s0 = a1 <u s0
  7026: d4 65 05                 s0 = s0 | s1
  7029: 52 05 50                 jump @346 if s0 != 0
      :                          @340
  7032: 82 b6                    s1 = u64 [a4]
  7034: ab c6 e7                 jump @338 if s1 != a5
      :                          @341
  7037: 7b ba                    u64 [a4] = a3
  7039: 33 08 b0 1a 04           a1 = 0x41ab0
  7044: c9 a8 08                 a1 = a1 - a3
  7047: 64 25                    s0 = t0
  7049: 28 06                    jump @343
      :                          @342
  7051: 33 08 01                 a1 = 0x1
  7054: 01                       fallthrough
      :                          @343
  7055: 7b 17                    u64 [sp] = a0
  7057: 7b 18 08                 u64 [sp + 0x8] = a1
  7060: 49 11 10                 u64 [sp + 16] = 0
  7063: 33 08 08 01 01           a1 = 0x10108
  7068: 64 17                    a0 = sp
  7070: 50 20 94 00 80 06        ra = 148, jump @472
      :                          @344 [@dyn 74]
  7076: 52 07 22                 jump @347 if a0 != 0
      :                          @345
  7079: 82 17 10                 a0 = u64 [sp + 0x10]
  7082: 82 18 08                 a1 = u64 [sp + 0x8]
  7085: 82 19                    a2 = u64 [sp]
  7087: 7b 57 10                 u64 [s0 + 0x10] = a0
  7090: 7b 58 08                 u64 [s0 + 0x8] = a1
  7093: 7b 59                    u64 [s0] = a2
  7095: 82 10 30                 ra = u64 [sp + 0x30]
  7098: 82 15 28                 s0 = u64 [sp + 0x28]
  7101: 82 16 20                 s1 = u64 [sp + 0x20]
  7104: 95 11 38                 sp = sp + 0x38
  7107: 32 00                    ret
      :                          @346
  7109: 00                       trap
      :                          @347
  7110: 00                       trap
      :                          @348
  7111: 00                       trap
      :                          @349 [@dyn 75]
  7112: 82 72                    t0 = u64 [a0]
  7114: 33 09 00 00 ff           a2 = 0xffffffffffff0000
  7119: 95 2a ff ff fe           a3 = t0 + 0xfffffffffffeffff
  7124: ac 9a 28                 jump @355 if a3 <u a2
      :                          @350
  7127: 82 77 08                 a0 = u64 [a0 + 0x8]
  7130: 33 09 b0 1a 03           a2 = 0x31ab0
  7135: 95 99 00 00 01           a2 = a2 + 0x10000
  7140: 01                       fallthrough
      :                          @351
  7141: 82 9a                    a3 = u64 [a2]
  7143: c9 a9 0b                 a4 = a2 - a3
  7146: ab 7b 12                 jump @355 if a4 != a0
      :                          @352
  7149: c9 2a 0b                 a4 = a3 - t0
  7152: 01                       fallthrough
      :                          @353
  7153: 82 9c                    a5 = u64 [a2]
  7155: ab ac f2                 jump @351 if a5 != a3
      :                          @354
  7158: 7b 9b                    u64 [a2] = a4
  7160: 33 08                    a1 = 0
  7162: 32 00                    ret
      :                          @355
  7164: 32 00                    ret
      :                          @356 [@dyn 76]
  7166: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  7169: 7b 10 18                 u64 [sp + 0x18] = ra
  7172: 7b 15 10                 u64 [sp + 0x10] = s0
  7175: 7b 16 08                 u64 [sp + 0x8] = s1
  7178: 64 75                    s0 = a0
  7180: 82 7a 10                 a3 = u64 [a0 + 0x10]
  7183: 82 77                    a0 = u64 [a0]
  7185: c9 a7 07                 a0 = a0 - a3
  7188: 64 96                    s1 = a2
  7190: ac 97 2b                 jump @359 if a0 <u a2
      :                          @357
  7193: 7b 1a                    u64 [sp] = a3
  7195: 82 57 08                 a0 = u64 [s0 + 0x8]
  7198: c8 a7 07                 a0 = a0 + a3
  7201: 64 69                    a2 = s1
  7203: 50 20 9a 00 4f 01        ra = 154, jump @378
      :                          @358 [@dyn 77]
  7209: 82 17                    a0 = u64 [sp]
  7211: c8 76 06                 s1 = s1 + a0
  7214: 7b 56 10                 u64 [s0 + 0x10] = s1
  7217: 33 07                    a0 = 0
  7219: 82 10 18                 ra = u64 [sp + 0x18]
  7222: 82 15 10                 s0 = u64 [sp + 0x10]
  7225: 82 16 08                 s1 = u64 [sp + 0x8]
  7228: 95 11 20                 sp = sp + 0x20
  7231: 32 00                    ret
      :                          @359
  7233: 64 57                    a0 = s0
  7235: 7b 18                    u64 [sp] = a1
  7237: 64 a8                    a1 = a3
  7239: 64 69                    a2 = s1
  7241: 50 20 9c 00 6f fc        ra = 156, jump @272
      :                          @360 [@dyn 78]
  7247: 82 18                    a1 = u64 [sp]
  7249: 82 5a 10                 a3 = u64 [s0 + 0x10]
  7252: 28 c5                    jump @357
      :                          @361 [@dyn 79]
  7254: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  7257: 7b 10 20                 u64 [sp + 0x20] = ra
  7260: 7b 15 18                 u64 [sp + 0x18] = s0
  7263: 7b 16 10                 u64 [sp + 0x10] = s1
  7266: 64 86                    s1 = a1
  7268: 83 88                    i32 a1 = a1 + 0
  7270: 33 09 80 00              a2 = 0x80
  7274: 64 7a                    a3 = a0
  7276: ae 98 2c                 jump @366 if a1 >=u a2
      :                          @362
  7279: 82 a8 10                 a1 = u64 [a3 + 0x10]
  7282: 82 a7                    a0 = u64 [a3]
  7284: ab 78 13                 jump @365 if a1 != a0
      :                          @363
  7287: 64 a7                    a0 = a3
  7289: 64 a5                    s0 = a3
  7291: 50 20 a0 00 04 fe        ra = 160, jump @316
      :                          @364 [@dyn 80]
  7297: 64 5a                    a3 = s0
  7299: 82 58 10                 a1 = u64 [s0 + 0x10]
  7302: 01                       fallthrough
      :                          @365
  7303: 82 a7 08                 a0 = u64 [a3 + 0x8]
  7306: c8 87 07                 a0 = a0 + a1
  7309: 78 76                    u8 [a0] = s1
  7311: 95 88 01                 a1 = a1 + 0x1
  7314: 7b a8 10                 u64 [a3 + 0x10] = a1
  7317: 28 ac 00                 jump @374
      :                          @366
  7320: 8b 67 0b                 i32 a0 = s1 >> 0xb
  7323: 48 11 0c                 u32 [sp + 12] = 0
  7326: 52 07 1c                 jump @368 if a0 != 0
      :                          @367
  7329: 98 67 06                 a0 = s1 >> 0x6
  7332: 86 77 c0 00              a0 = a0 | 0xc0
  7336: 78 17 0c                 u8 [sp + 0xc] = a0
  7339: 84 67 3f                 a0 = s1 & 0x3f
  7342: 86 77 80 00              a0 = a0 | 0x80
  7346: 78 17 0d                 u8 [sp + 0xd] = a0
  7349: 33 06 02                 s1 = 0x2
  7352: 28 63                    jump @371
      :                          @368
  7354: 8b 67 10                 i32 a0 = s1 >> 0x10
  7357: 52 07 29                 jump @370 if a0 != 0
      :                          @369
  7360: 98 67 0c                 a0 = s1 >> 0xc
  7363: 86 77 e0 00              a0 = a0 | 0xe0
  7367: 78 17 0c                 u8 [sp + 0xc] = a0
  7370: 97 67 34                 a0 = s1 << 0x34
  7373: 98 77 3a                 a0 = a0 >> 0x3a
  7376: 95 77 80 00              a0 = a0 + 0x80
  7380: 78 17 0d                 u8 [sp + 0xd] = a0
  7383: 84 67 3f                 a0 = s1 & 0x3f
  7386: 86 77 80 00              a0 = a0 | 0x80
  7390: 78 17 0e                 u8 [sp + 0xe] = a0
  7393: 33 06 03                 s1 = 0x3
  7396: 28 37                    jump @371
      :                          @370
  7398: 97 67 2b                 a0 = s1 << 0x2b
  7401: 98 77 3d                 a0 = a0 >> 0x3d
  7404: 95 77 f0 00              a0 = a0 + 0xf0
  7408: 78 17 0c                 u8 [sp + 0xc] = a0
  7411: 97 67 2e                 a0 = s1 << 0x2e
  7414: 98 77 3a                 a0 = a0 >> 0x3a
  7417: 95 77 80 00              a0 = a0 + 0x80
  7421: 78 17 0d                 u8 [sp + 0xd] = a0
  7424: 97 67 34                 a0 = s1 << 0x34
  7427: 98 77 3a                 a0 = a0 >> 0x3a
  7430: 95 77 80 00              a0 = a0 + 0x80
  7434: 78 17 0e                 u8 [sp + 0xe] = a0
  7437: 84 67 3f                 a0 = s1 & 0x3f
  7440: 86 77 80 00              a0 = a0 | 0x80
  7444: 78 17 0f                 u8 [sp + 0xf] = a0
  7447: 33 06 04                 s1 = 0x4
  7450: 01                       fallthrough
      :                          @371
  7451: 82 a5 10                 s0 = u64 [a3 + 0x10]
  7454: 82 a7                    a0 = u64 [a3]
  7456: c9 57 07                 a0 = a0 - s0
  7459: ac 67 2e                 jump @375 if a0 <u s1
      :                          @372
  7462: 7b 1a                    u64 [sp] = a3
  7464: 82 a7 08                 a0 = u64 [a3 + 0x8]
  7467: c8 57 07                 a0 = a0 + s0
  7470: 95 18 0c                 a1 = sp + 0xc
  7473: 64 69                    a2 = s1
  7475: 50 20 a2 00 3f           ra = 162, jump @378
      :                          @373 [@dyn 81]
  7480: c8 56 06                 s1 = s1 + s0
  7483: 82 17                    a0 = u64 [sp]
  7485: 7b 76 10                 u64 [a0 + 0x10] = s1
  7488: 01                       fallthrough
      :                          @374
  7489: 33 07                    a0 = 0
  7491: 82 10 20                 ra = u64 [sp + 0x20]
  7494: 82 15 18                 s0 = u64 [sp + 0x18]
  7497: 82 16 10                 s1 = u64 [sp + 0x10]
  7500: 95 11 28                 sp = sp + 0x28
  7503: 32 00                    ret
      :                          @375
  7505: 64 a7                    a0 = a3
  7507: 64 58                    a1 = s0
  7509: 64 69                    a2 = s1
  7511: 64 a5                    s0 = a3
  7513: 50 20 a4 00 5f fb        ra = 164, jump @272
      :                          @376 [@dyn 82]
  7519: 64 5a                    a3 = s0
  7521: 82 55 10                 s0 = u64 [s0 + 0x10]
  7524: 28 c2                    jump @372
      :                          @377 [@dyn 83]
  7526: 64 8a                    a3 = a1
  7528: 33 08 08 01 01           a1 = 0x10108
  7533: 64 a9                    a2 = a3
  7535: 28 af 04                 jump @472
      :                          @378
  7538: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  7541: 7b 10 18                 u64 [sp + 0x18] = ra
  7544: 7b 15 10                 u64 [sp + 0x10] = s0
  7547: 7b 16 08                 u64 [sp + 0x8] = s1
  7550: 53 19 10 64              jump @387 if a2 <u 16
      :                          @379
  7554: 8d 7a                    i32 a3 = -a0
  7556: 84 a2 07                 t0 = a3 & 0x7
  7559: c8 27 0b                 a4 = a0 + t0
  7562: 51 02 15                 jump @382 if t0 == 0
      :                          @380
  7565: 64 8c                    a5 = a1
  7567: 64 75                    s0 = a0
  7569: 01                       fallthrough
      :                          @381
  7570: 7c ca                    a3 = u8 [a5]
  7572: 78 5a                    u8 [s0] = a3
  7574: 95 55 01                 s0 = s0 + 0x1
  7577: 95 cc 01                 a5 = a5 + 0x1
  7580: ac b5 f6                 jump @381 if s0 <u a4
      :                          @382
  7583: c8 28 03                 t1 = a1 + t0
  7586: c9 29 02                 t0 = a2 - t0
  7589: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  7592: 84 38 07                 a1 = t1 & 0x7
  7595: c8 4b 0a                 a3 = a4 + t2
  7598: 51 08 3b                 jump @389 if a1 == 0
      :                          @383
  7601: 58 04 4b                 jump @392 if t2 <=s 0
      :                          @384
  7604: 97 38 03                 a1 = t1 << 0x3
  7607: 84 80 38                 ra = a1 & 0x38
  7610: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  7613: 82 c5                    s0 = u64 [a5]
  7615: 8d 88                    i32 a1 = -a1
  7617: 84 88 38                 a1 = a1 & 0x38
  7620: 95 cc 08                 a5 = a5 + 0x8
  7623: 01                       fallthrough
      :                          @385
  7624: 82 c6                    s1 = u64 [a5]
  7626: d0 05 05                 s0 = s0 >> ra
  7629: cf 86 09                 a2 = s1 << a1
  7632: d4 59 09                 a2 = a2 | s0
  7635: 7b b9                    u64 [a4] = a2
  7637: 95 bb 08                 a4 = a4 + 0x8
  7640: 95 cc 08                 a5 = a5 + 0x8
  7643: 64 65                    s0 = s1
  7645: ac ab eb                 jump @385 if a4 <u a3
      :                          @386
  7648: 28 1c                    jump @392
      :                          @387
  7650: 64 7a                    a3 = a0
  7652: 52 09 21                 jump @393 if a2 != 0
      :                          @388
  7655: 28 2f                    jump @395
      :                          @389
  7657: 58 04 13                 jump @392 if t2 <=s 0
      :                          @390
  7660: 64 38                    a1 = t1
  7662: 01                       fallthrough
      :                          @391
  7663: 82 89                    a2 = u64 [a1]
  7665: 7b b9                    u64 [a4] = a2
  7667: 95 bb 08                 a4 = a4 + 0x8
  7670: 95 88 08                 a1 = a1 + 0x8
  7673: ac ab f6                 jump @391 if a4 <u a3
      :                          @392
  7676: c8 43 08                 a1 = t1 + t2
  7679: 84 29 07                 a2 = t0 & 0x7
  7682: 51 09 14                 jump @395 if a2 == 0
      :                          @393
  7685: c8 a9 09                 a2 = a2 + a3
  7688: 01                       fallthrough
      :                          @394
  7689: 7c 8b                    a4 = u8 [a1]
  7691: 78 ab                    u8 [a3] = a4
  7693: 95 aa 01                 a3 = a3 + 0x1
  7696: 95 88 01                 a1 = a1 + 0x1
  7699: ac 9a f6                 jump @394 if a3 <u a2
      :                          @395
  7702: 82 10 18                 ra = u64 [sp + 0x18]
  7705: 82 15 10                 s0 = u64 [sp + 0x10]
  7708: 82 16 08                 s1 = u64 [sp + 0x8]
  7711: 95 11 20                 sp = sp + 0x20
  7714: 32 00                    ret
      :                          @396
  7716: 8d 7a                    i32 a3 = -a0
  7718: 84 aa 07                 a3 = a3 & 0x7
  7721: c8 a7 0b                 a4 = a0 + a3
  7724: 51 0a 0e                 jump @399 if a3 == 0
      :                          @397
  7727: 64 7c                    a5 = a0
  7729: 01                       fallthrough
      :                          @398
  7730: 78 c8                    u8 [a5] = a1
  7732: 95 cc 01                 a5 = a5 + 0x1
  7735: ac bc fb                 jump @398 if a5 <u a4
      :                          @399
  7738: c9 a9 03                 t1 = a2 - a3
  7741: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  7744: c8 cb 0a                 a3 = a4 + a5
  7747: 58 0c 1d                 jump @402 if a5 <=s 0
      :                          @400
  7750: 84 82 ff 00              t0 = a1 & 0xff
  7754: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  7764: ca 92 0c                 a5 = t0 * a2
  7767: 01                       fallthrough
      :                          @401
  7768: 7b bc                    u64 [a4] = a5
  7770: 95 bb 08                 a4 = a4 + 0x8
  7773: ac ab fb                 jump @401 if a4 <u a3
      :                          @402
  7776: 84 39 07                 a2 = t1 & 0x7
  7779: 52 09 05                 jump @404 if a2 != 0
      :                          @403
  7782: 28 0e                    jump @406
      :                          @404
  7784: c8 a9 09                 a2 = a2 + a3
  7787: 01                       fallthrough
      :                          @405
  7788: 78 a8                    u8 [a3] = a1
  7790: 95 aa 01                 a3 = a3 + 0x1
  7793: ac 9a fb                 jump @405 if a3 <u a2
      :                          @406
  7796: 32 00                    ret
      :                          @407 [@dyn 84]
  7798: 82 77                    a0 = u64 [a0]
  7800: 01                       fallthrough
      :                          @408
  7801: 28                       jump @408
      :                          @409 [@dyn 85]
  7802: 82 77                    a0 = u64 [a0]
  7804: 01                       fallthrough
      :                          @410
  7805: 95 11 a8                 sp = sp + 0xffffffffffffffa8
  7808: 7b 10 50                 u64 [sp + 0x50] = ra
  7811: 7b 15 48                 u64 [sp + 0x48] = s0
  7814: 7b 16 40                 u64 [sp + 0x40] = s1
  7817: 7b 18                    u64 [sp] = a1
  7819: 98 79 04                 a2 = a0 >> 0x4
  7822: 33 08 27                 a1 = 0x27
  7825: 53 29 71 02 81 00        jump @413 if a2 <u 625
      :                          @411
  7831: 33 08 27                 a1 = 0x27
  7834: 95 1a 3e                 a3 = sp + 0x3e
  7837: 3a 09 50 00 03           a2 = u64 [0x30050]
  7842: 7b 19 10                 u64 [sp + 0x10] = a2
  7845: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
  7851: 33 04 7b 14              t2 = 0x147b
  7855: 33 0b 7c 01 01           a4 = 0x1017c
  7860: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
  7866: 01                       fallthrough
      :                          @412
  7867: 64 72                    t0 = a0
  7869: 82 17 10                 a0 = u64 [sp + 0x10]
  7872: d6 72 07                 a0 = t0 mulhu a0
  7875: 98 77 0b                 a0 = a0 >> 0xb
  7878: 82 19 08                 a2 = u64 [sp + 0x8]
  7881: c0 97 0c                 i32 a5 = a0 * a2
  7884: c8 2c 06                 s1 = a5 + t0
  7887: 97 6c 30                 a5 = s1 << 0x30
  7890: 98 cc 32                 a5 = a5 >> 0x32
  7893: ca 4c 0c                 a5 = a5 * t2
  7896: 98 c3 11                 t1 = a5 >> 0x11
  7899: 98 cc 10                 a5 = a5 >> 0x10
  7902: 84 cc fe 07              a5 = a5 & 0x7fe
  7906: 96 39 9c                 a2 = t1 * 0xffffffffffffff9c
  7909: c8 69 09                 a2 = a2 + s1
  7912: 97 99 31                 a2 = a2 << 0x31
  7915: 98 99 30                 a2 = a2 >> 0x30
  7918: c8 bc 0c                 a5 = a5 + a4
  7921: 7c c6                    s1 = u8 [a5]
  7923: 7c cc 01                 a5 = u8 [a5 + 0x1]
  7926: c8 b9 09                 a2 = a2 + a4
  7929: 7c 95 01                 s0 = u8 [a2 + 0x1]
  7932: 7c 99                    a2 = u8 [a2]
  7934: 78 ac ff                 u8 [a3 + 0xffffffffffffffff] = a5
  7937: 78 a6 fe                 u8 [a3 + 0xfffffffffffffffe] = s1
  7940: 78 a5 01                 u8 [a3 + 0x1] = s0
  7943: 78 a9                    u8 [a3] = a2
  7945: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
  7948: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
  7951: ac 20 ac                 jump @412 if ra <u t0
      :                          @413
  7954: 54 17 63 3b              jump @415 if a0 <=u 99
      :                          @414
  7958: 97 79 30                 a2 = a0 << 0x30
  7961: 98 99 32                 a2 = a2 >> 0x32
  7964: 96 99 7b 14              a2 = a2 * 0x147b
  7968: 98 99 11                 a2 = a2 >> 0x11
  7971: 96 9a 9c                 a3 = a2 * 0xffffffffffffff9c
  7974: c8 a7 07                 a0 = a0 + a3
  7977: 97 77 31                 a0 = a0 << 0x31
  7980: 98 77 30                 a0 = a0 >> 0x30
  7983: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  7986: 33 0a 7c 01 01           a3 = 0x1017c
  7991: c8 a7 07                 a0 = a0 + a3
  7994: 7c 7a 01                 a3 = u8 [a0 + 0x1]
  7997: 7c 77                    a0 = u8 [a0]
  7999: 95 1b 19                 a4 = sp + 0x19
  8002: c8 8b 0b                 a4 = a4 + a1
  8005: 78 ba 01                 u8 [a4 + 0x1] = a3
  8008: 78 b7                    u8 [a4] = a0
  8010: 64 97                    a0 = a2
  8012: 01                       fallthrough
      :                          @415
  8013: 55 17 0a 14              jump @417 if a0 >=u 10
      :                          @416
  8017: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  8020: 95 19 19                 a2 = sp + 0x19
  8023: c8 89 09                 a2 = a2 + a1
  8026: 83 77 30                 i32 a0 = a0 + 0x30
  8029: 78 97                    u8 [a2] = a0
  8031: 28 21                    jump @418
      :                          @417
  8033: 97 77 01                 a0 = a0 << 0x1
  8036: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  8039: 33 09 7c 01 01           a2 = 0x1017c
  8044: c8 97 07                 a0 = a0 + a2
  8047: 7c 79 01                 a2 = u8 [a0 + 0x1]
  8050: 7c 77                    a0 = u8 [a0]
  8052: 95 1a 19                 a3 = sp + 0x19
  8055: c8 8a 0a                 a3 = a3 + a1
  8058: 78 a9 01                 u8 [a3 + 0x1] = a2
  8061: 78 a7                    u8 [a3] = a0
  8063: 01                       fallthrough
      :                          @418
  8064: 95 1a 19                 a3 = sp + 0x19
  8067: c8 8a 0a                 a3 = a3 + a1
  8070: 9a 8b 27                 a4 = 0x27 - a1
  8073: 33 08 38 01 01           a1 = 0x10138
  8078: 82 17                    a0 = u64 [sp]
  8080: 33 09                    a2 = 0
  8082: 50 20 ac 00 13           ra = 172, jump @420
      :                          @419 [@dyn 86]
  8087: 82 10 50                 ra = u64 [sp + 0x50]
  8090: 82 15 48                 s0 = u64 [sp + 0x48]
  8093: 82 16 40                 s1 = u64 [sp + 0x40]
  8096: 95 11 58                 sp = sp + 0x58
  8099: 32 00                    ret
      :                          @420
  8101: 95 11 98                 sp = sp + 0xffffffffffffff98
  8104: 7b 10 60                 u64 [sp + 0x60] = ra
  8107: 7b 15 58                 u64 [sp + 0x58] = s0
  8110: 7b 16 50                 u64 [sp + 0x50] = s1
  8113: 80 73 34                 t1 = u32 [a0 + 0x34]
  8116: 7b 1a 20                 u64 [sp + 0x20] = a3
  8119: 64 9c                    a5 = a2
  8121: 84 36 01                 s1 = t1 & 0x1
  8124: 33 02 2b                 t0 = 0x2b
  8127: 33 09 00 00 11           a2 = 0x110000
  8132: 84 3a 04                 a3 = t1 & 0x4
  8135: 7b 1b 28                 u64 [sp + 0x28] = a4
  8138: c8 b6 04                 t2 = s1 + a4
  8141: 7b 1c 30                 u64 [sp + 0x30] = a5
  8144: 52 0a 10                 jump @423 if a3 != 0
      :                          @421
  8147: 49 11 38                 u64 [sp + 56] = 0
  8150: 82 78                    a1 = u64 [a0]
  8152: 94 69 2b                 a2 = 0x2b if s1 != 0
  8155: 52 08 35                 jump @427 if a1 != 0
      :                          @422
  8158: 28 56                    jump @432
      :                          @423
  8160: 7b 18 38                 u64 [sp + 0x38] = a1
  8163: 33 09                    a2 = 0
  8165: 51 0c 1b                 jump @426 if a5 == 0
      :                          @424
  8168: 82 1b 38                 a4 = u64 [sp + 0x38]
  8171: 01                       fallthrough
      :                          @425
  8172: 7d b5                    s0 = i8 [a4]
  8174: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
  8177: 85 5a 01                 a3 = s0 ^ 0x1
  8180: c8 a9 09                 a2 = a2 + a3
  8183: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  8186: 95 bb 01                 a4 = a4 + 0x1
  8189: 52 0c ef                 jump @425 if a5 != 0
      :                          @426
  8192: c8 94 04                 t2 = t2 + a2
  8195: 33 09 00 00 11           a2 = 0x110000
  8200: 82 78                    a1 = u64 [a0]
  8202: db 62 09                 a2 = t0 if s1 != 0
  8205: 51 08 27                 jump @432 if a1 == 0
      :                          @427
  8208: 82 7a 08                 a3 = u64 [a0 + 0x8]
  8211: ae a4 21                 jump @432 if t2 >=u a3
      :                          @428
  8214: 84 38 08                 a1 = t1 & 0x8
  8217: 52 08 51                 jump @435 if a1 != 0
      :                          @429
  8220: 7c 76 38                 s1 = u8 [a0 + 0x38]
  8223: c9 4a 0a                 a3 = a3 - t2
  8226: 7b 19 18                 u64 [sp + 0x18] = a2
  8229: 5a 16 01 a0 00           jump @442 if s1 >s 1
      :                          @430
  8234: 52 06 ad 00              jump @444 if s1 != 0
      :                          @431
  8238: 7b 1a 10                 u64 [sp + 0x10] = a3
  8241: 28 ac 00                 jump @445
      :                          @432
  8244: 82 75 20                 s0 = u64 [a0 + 0x20]
  8247: 82 76 28                 s1 = u64 [a0 + 0x28]
  8250: 64 57                    a0 = s0
  8252: 64 68                    a1 = s1
  8254: 82 1a 38                 a3 = u64 [sp + 0x38]
  8257: 82 1b 30                 a4 = u64 [sp + 0x30]
  8260: 50 20 ae 00 75 01        ra = 174, jump @465
      :                          @433 [@dyn 87]
  8266: 33 08 01                 a1 = 0x1
  8269: 52 07 be 00              jump @450 if a0 != 0
      :                          @434
  8273: 82 6c 18                 a5 = u64 [s1 + 0x18]
  8276: 64 57                    a0 = s0
  8278: 82 18 20                 a1 = u64 [sp + 0x20]
  8281: 82 19 28                 a2 = u64 [sp + 0x28]
  8284: 82 10 60                 ra = u64 [sp + 0x60]
  8287: 82 15 58                 s0 = u64 [sp + 0x58]
  8290: 82 16 50                 s1 = u64 [sp + 0x50]
  8293: 95 11 68                 sp = sp + 0x68
  8296: 32 0c                    jump [a5]
      :                          @435
  8298: 7b 1a 40                 u64 [sp + 0x40] = a3
  8301: 64 45                    s0 = t2
  8303: 81 78 30                 a1 = i32 [a0 + 0x30]
  8306: 7b 18 10                 u64 [sp + 0x10] = a1
  8309: 7c 7a 38                 a3 = u8 [a0 + 0x38]
  8312: 7b 1a 08                 u64 [sp + 0x8] = a3
  8315: 82 7a 20                 a3 = u64 [a0 + 0x20]
  8318: 82 78 28                 a1 = u64 [a0 + 0x28]
  8321: 48 17 30 30              u32 [a0 + 48] = 0x30
  8325: 7b 17                    u64 [sp] = a0
  8327: 46 17 38 01              u8 [a0 + 56] = 0x1
  8331: 7b 1a 48                 u64 [sp + 0x48] = a3
  8334: 64 a7                    a0 = a3
  8336: 64 86                    s1 = a1
  8338: 82 1a 38                 a3 = u64 [sp + 0x38]
  8341: 82 1b 30                 a4 = u64 [sp + 0x30]
  8344: 50 20 b0 00 21 01        ra = 176, jump @465
      :                          @436 [@dyn 88]
  8350: 52 07 69                 jump @449 if a0 != 0
      :                          @437
  8353: 82 17 40                 a0 = u64 [sp + 0x40]
  8356: c9 57 05                 s0 = a0 - s0
  8359: 95 55 01                 s0 = s0 + 0x1
  8362: 01                       fallthrough
      :                          @438
  8363: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  8366: 51 05 cb 00              jump @460 if s0 == 0
      :                          @439
  8370: 82 69 20                 a2 = u64 [s1 + 0x20]
  8373: 33 08 30                 a1 = 0x30
  8376: 82 17 48                 a0 = u64 [sp + 0x48]
  8379: b4 90 02 b2 00           ra = 178, jump [a2]
      :                          @440 [@dyn 89]
  8384: 51 07 eb                 jump @438 if a0 == 0
      :                          @441
  8387: 28 44                    jump @449
      :                          @442
  8389: 52 16 02 12              jump @444 if s1 != 2
      :                          @443
  8393: 98 a6 01                 s1 = a3 >> 0x1
  8396: 95 a8 01                 a1 = a3 + 0x1
  8399: 98 88 01                 a1 = a1 >> 0x1
  8402: 7b 18 10                 u64 [sp + 0x10] = a1
  8405: 28 08                    jump @445
      :                          @444
  8407: 64 a6                    s1 = a3
  8409: 49 11 10                 u64 [sp + 16] = 0
  8412: 01                       fallthrough
      :                          @445
  8413: 82 78 20                 a1 = u64 [a0 + 0x20]
  8416: 7b 18 48                 u64 [sp + 0x48] = a1
  8419: 82 75 28                 s0 = u64 [a0 + 0x28]
  8422: 81 77 30                 a0 = i32 [a0 + 0x30]
  8425: 7b 17 40                 u64 [sp + 0x40] = a0
  8428: 95 66 01                 s1 = s1 + 0x1
  8431: 01                       fallthrough
      :                          @446
  8432: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  8435: 51 06 28                 jump @451 if s1 == 0
      :                          @447
  8438: 82 59 20                 a2 = u64 [s0 + 0x20]
  8441: 82 17 48                 a0 = u64 [sp + 0x48]
  8444: 82 18 40                 a1 = u64 [sp + 0x40]
  8447: b4 90 02 b4 00           ra = 180, jump [a2]
      :                          @448 [@dyn 90]
  8452: 51 07 ec                 jump @446 if a0 == 0
      :                          @449
  8455: 33 08 01                 a1 = 0x1
  8458: 01                       fallthrough
      :                          @450
  8459: 64 87                    a0 = a1
  8461: 82 10 60                 ra = u64 [sp + 0x60]
  8464: 82 15 58                 s0 = u64 [sp + 0x58]
  8467: 82 16 50                 s1 = u64 [sp + 0x50]
  8470: 95 11 68                 sp = sp + 0x68
  8473: 32 00                    ret
      :                          @451
  8475: 82 16 48                 s1 = u64 [sp + 0x48]
  8478: 64 67                    a0 = s1
  8480: 64 58                    a1 = s0
  8482: 82 19 18                 a2 = u64 [sp + 0x18]
  8485: 82 1a 38                 a3 = u64 [sp + 0x38]
  8488: 82 1b 30                 a4 = u64 [sp + 0x30]
  8491: 50 20 b6 00 8e 00        ra = 182, jump @465
      :                          @452 [@dyn 91]
  8497: 33 08 01                 a1 = 0x1
  8500: 52 07 d7                 jump @450 if a0 != 0
      :                          @453
  8503: 82 5a 18                 a3 = u64 [s0 + 0x18]
  8506: 64 67                    a0 = s1
  8508: 82 18 20                 a1 = u64 [sp + 0x20]
  8511: 82 19 28                 a2 = u64 [sp + 0x28]
  8514: b4 a0 02 b8 00           ra = 184, jump [a3]
      :                          @454 [@dyn 92]
  8519: 33 08 01                 a1 = 0x1
  8522: 52 07 c1                 jump @450 if a0 != 0
      :                          @455
  8525: 82 17 10                 a0 = u64 [sp + 0x10]
  8528: 9a 77                    a0 = -a0
  8530: 7b 17 38                 u64 [sp + 0x38] = a0
  8533: 33 06 ff                 s1 = 0xffffffffffffffff
  8536: 01                       fallthrough
      :                          @456
  8537: 82 17 38                 a0 = u64 [sp + 0x38]
  8540: c8 67 07                 a0 = a0 + s1
  8543: 51 17 ff 45              jump @463 if a0 == 4294967295
      :                          @457
  8547: 82 59 20                 a2 = u64 [s0 + 0x20]
  8550: 82 17 48                 a0 = u64 [sp + 0x48]
  8553: 82 18 40                 a1 = u64 [sp + 0x40]
  8556: b4 90 02 ba 00           ra = 186, jump [a2]
      :                          @458 [@dyn 93]
  8561: 95 66 01                 s1 = s1 + 0x1
  8564: 51 07 e5                 jump @456 if a0 == 0
      :                          @459
  8567: 28 39                    jump @464
      :                          @460
  8569: 82 6a 18                 a3 = u64 [s1 + 0x18]
  8572: 82 17 48                 a0 = u64 [sp + 0x48]
  8575: 82 18 20                 a1 = u64 [sp + 0x20]
  8578: 82 19 28                 a2 = u64 [sp + 0x28]
  8581: b4 a0 02 bc 00           ra = 188, jump [a3]
      :                          @461 [@dyn 94]
  8586: 33 08 01                 a1 = 0x1
  8589: 52 07 7e ff              jump @450 if a0 != 0
      :                          @462
  8593: 33 08                    a1 = 0
  8595: 82 16                    s1 = u64 [sp]
  8597: 82 17 10                 a0 = u64 [sp + 0x10]
  8600: 7a 67 30                 u32 [s1 + 0x30] = a0
  8603: 82 17 08                 a0 = u64 [sp + 0x8]
  8606: 78 67 38                 u8 [s1 + 0x38] = a0
  8609: 28 6a ff                 jump @450
      :                          @463
  8612: 82 16 10                 s1 = u64 [sp + 0x10]
  8615: 82 17 10                 a0 = u64 [sp + 0x10]
  8618: d8 76 08                 a1 = s1 <u a0
  8621: 28 5e ff                 jump @450
      :                          @464
  8624: 82 17 10                 a0 = u64 [sp + 0x10]
  8627: d8 76 08                 a1 = s1 <u a0
  8630: 28 55 ff                 jump @450
      :                          @465
  8633: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  8636: 7b 10 20                 u64 [sp + 0x20] = ra
  8639: 7b 15 18                 u64 [sp + 0x18] = s0
  8642: 7b 16 10                 u64 [sp + 0x10] = s1
  8645: 83 9c                    i32 a5 = a2 + 0
  8647: 33 02 00 00 11           t0 = 0x110000
  8652: 64 a6                    s1 = a3
  8654: 64 85                    s0 = a1
  8656: 64 7a                    a3 = a0
  8658: aa 2c 21                 jump @468 if a5 == t0
      :                          @466
  8661: 82 5c 20                 a5 = u64 [s0 + 0x20]
  8664: 64 a7                    a0 = a3
  8666: 64 98                    a1 = a2
  8668: 7b 1b 08                 u64 [sp + 0x8] = a4
  8671: 7b 1a                    u64 [sp] = a3
  8673: b4 c0 02 be 00           ra = 190, jump [a5]
      :                          @467 [@dyn 95]
  8678: 82 1a                    a3 = u64 [sp]
  8680: 82 1b 08                 a4 = u64 [sp + 0x8]
  8683: 64 78                    a1 = a0
  8685: 33 07 01                 a0 = 0x1
  8688: 52 08 20                 jump @471 if a1 != 0
      :                          @468
  8691: 51 06 1a                 jump @470 if s1 == 0
      :                          @469
  8694: 82 5c 18                 a5 = u64 [s0 + 0x18]
  8697: 64 a7                    a0 = a3
  8699: 64 68                    a1 = s1
  8701: 64 b9                    a2 = a4
  8703: 82 10 20                 ra = u64 [sp + 0x20]
  8706: 82 15 18                 s0 = u64 [sp + 0x18]
  8709: 82 16 10                 s1 = u64 [sp + 0x10]
  8712: 95 11 28                 sp = sp + 0x28
  8715: 32 0c                    jump [a5]
      :                          @470
  8717: 33 07                    a0 = 0
  8719: 01                       fallthrough
      :                          @471
  8720: 82 10 20                 ra = u64 [sp + 0x20]
  8723: 82 15 18                 s0 = u64 [sp + 0x18]
  8726: 82 16 10                 s1 = u64 [sp + 0x10]
  8729: 95 11 28                 sp = sp + 0x28
  8732: 32 00                    ret
      :                          @472
  8734: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  8738: 7b 10 80 00              u64 [sp + 0x80] = ra
  8742: 7b 15 78                 u64 [sp + 0x78] = s0
  8745: 7b 16 70                 u64 [sp + 0x70] = s1
  8748: 49 11 60 20              u64 [sp + 96] = 0x20
  8752: 33 0a 03                 a3 = 0x3
  8755: 78 1a 68                 u8 [sp + 0x68] = a3
  8758: 82 96 20                 s1 = u64 [a2 + 0x20]
  8761: 49 11 30                 u64 [sp + 48] = 0
  8764: 49 11 40                 u64 [sp + 64] = 0
  8767: 7b 17 50                 u64 [sp + 0x50] = a0
  8770: 7b 18 58                 u64 [sp + 0x58] = a1
  8773: 51 06 0a 01              jump @494 if s1 == 0
      :                          @473
  8777: 82 97 28                 a0 = u64 [a2 + 0x28]
  8780: 51 07 79 01              jump @504 if a0 == 0
      :                          @474
  8784: 49 11 28                 u64 [sp + 40] = 0
  8787: 82 95                    s0 = u64 [a2]
  8789: 7b 19 08                 u64 [sp + 0x8] = a2
  8792: 82 98 10                 a1 = u64 [a2 + 0x10]
  8795: 7b 18 18                 u64 [sp + 0x18] = a1
  8798: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  8801: 97 88 03                 a1 = a1 << 0x3
  8804: 98 88 03                 a1 = a1 >> 0x3
  8807: 95 88 01                 a1 = a1 + 0x1
  8810: 7b 18                    u64 [sp] = a1
  8812: 95 55 08                 s0 = s0 + 0x8
  8815: 96 78 38                 a1 = a0 * 0x38
  8818: 95 66 18                 s1 = s1 + 0x18
  8821: 33 07 a8 00              a0 = 0xa8
  8825: 7b 17 10                 u64 [sp + 0x10] = a0
  8828: 01                       fallthrough
      :                          @475
  8829: 7b 18 20                 u64 [sp + 0x20] = a1
  8832: 82 59                    a2 = u64 [s0]
  8834: 51 09 18                 jump @478 if a2 == 0
      :                          @476
  8837: 82 1a 58                 a3 = u64 [sp + 0x58]
  8840: 82 17 50                 a0 = u64 [sp + 0x50]
  8843: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  8846: 82 aa 18                 a3 = u64 [a3 + 0x18]
  8849: b4 a0 02 c0 00           ra = 192, jump [a3]
      :                          @477 [@dyn 96]
  8854: 52 07 55 01              jump @507 if a0 != 0
      :                          @478
  8858: 81 67 10                 a0 = i32 [s1 + 0x10]
  8861: 7a 17 60                 u32 [sp + 0x60] = a0
  8864: 7c 67 18                 a0 = u8 [s1 + 0x18]
  8867: 78 17 68                 u8 [sp + 0x68] = a0
  8870: 81 67 14                 a0 = i32 [s1 + 0x14]
  8873: 7a 17 64                 u32 [sp + 0x64] = a0
  8876: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  8879: 82 67                    a0 = u64 [s1]
  8881: 51 08 26                 jump @483 if a1 == 0
      :                          @479
  8884: 52 18 01 16              jump @481 if a1 != 1
      :                          @480
  8888: 97 77 04                 a0 = a0 << 0x4
  8891: 82 18 18                 a1 = u64 [sp + 0x18]
  8894: c8 87 07                 a0 = a0 + a1
  8897: 82 78 08                 a1 = u64 [a0 + 0x8]
  8900: 82 19 10                 a2 = u64 [sp + 0x10]
  8903: aa 98 07                 jump @482 if a1 == a2
      :                          @481
  8906: 33 08                    a1 = 0
  8908: 28 0f                    jump @484
      :                          @482
  8910: 82 77                    a0 = u64 [a0]
  8912: 82 77                    a0 = u64 [a0]
  8914: 33 08 01                 a1 = 0x1
  8917: 28 06                    jump @484
      :                          @483
  8919: 33 08 01                 a1 = 0x1
  8922: 01                       fallthrough
      :                          @484
  8923: 7b 18 30                 u64 [sp + 0x30] = a1
  8926: 7b 17 38                 u64 [sp + 0x38] = a0
  8929: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  8932: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  8935: 51 08 26                 jump @489 if a1 == 0
      :                          @485
  8938: 52 18 01 16              jump @487 if a1 != 1
      :                          @486
  8942: 97 77 04                 a0 = a0 << 0x4
  8945: 82 18 18                 a1 = u64 [sp + 0x18]
  8948: c8 87 07                 a0 = a0 + a1
  8951: 82 78 08                 a1 = u64 [a0 + 0x8]
  8954: 82 19 10                 a2 = u64 [sp + 0x10]
  8957: aa 98 07                 jump @488 if a1 == a2
      :                          @487
  8960: 33 08                    a1 = 0
  8962: 28 0f                    jump @490
      :                          @488
  8964: 82 77                    a0 = u64 [a0]
  8966: 82 77                    a0 = u64 [a0]
  8968: 33 08 01                 a1 = 0x1
  8971: 28 06                    jump @490
      :                          @489
  8973: 33 08 01                 a1 = 0x1
  8976: 01                       fallthrough
      :                          @490
  8977: 7b 18 40                 u64 [sp + 0x40] = a1
  8980: 7b 17 48                 u64 [sp + 0x48] = a0
  8983: 82 67 08                 a0 = u64 [s1 + 0x8]
  8986: 97 77 04                 a0 = a0 << 0x4
  8989: 82 18 18                 a1 = u64 [sp + 0x18]
  8992: c8 78 08                 a1 = a1 + a0
  8995: 82 87                    a0 = u64 [a1]
  8997: 82 89 08                 a2 = u64 [a1 + 0x8]
  9000: 95 18 30                 a1 = sp + 0x30
  9003: b4 90 02 c2 00           ra = 194, jump [a2]
      :                          @491 [@dyn 97]
  9008: 52 07 bb 00              jump @507 if a0 != 0
      :                          @492
  9012: 95 55 10                 s0 = s0 + 0x10
  9015: 82 18 20                 a1 = u64 [sp + 0x20]
  9018: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  9021: 95 66 38                 s1 = s1 + 0x38
  9024: 82 17 28                 a0 = u64 [sp + 0x28]
  9027: 95 77 01                 a0 = a0 + 0x1
  9030: 7b 17 28                 u64 [sp + 0x28] = a0
  9033: 52 08 34 ff              jump @475 if a1 != 0
      :                          @493
  9037: 28 6b                    jump @502
      :                          @494
  9039: 82 97 18                 a0 = u64 [a2 + 0x18]
  9042: 51 07 73                 jump @504 if a0 == 0
      :                          @495
  9045: 82 95 10                 s0 = u64 [a2 + 0x10]
  9048: 33 0a                    a3 = 0
  9050: 97 78 04                 a1 = a0 << 0x4
  9053: c8 58 08                 a1 = a1 + s0
  9056: 7b 18 20                 u64 [sp + 0x20] = a1
  9059: 7b 19 08                 u64 [sp + 0x8] = a2
  9062: 82 96                    s1 = u64 [a2]
  9064: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  9067: 97 77 04                 a0 = a0 << 0x4
  9070: 98 77 04                 a0 = a0 >> 0x4
  9073: 95 77 01                 a0 = a0 + 0x1
  9076: 7b 17                    u64 [sp] = a0
  9078: 95 66 08                 s1 = s1 + 0x8
  9081: 01                       fallthrough
      :                          @496
  9082: 7b 1a 28                 u64 [sp + 0x28] = a3
  9085: 82 69                    a2 = u64 [s1]
  9087: 51 09 17                 jump @499 if a2 == 0
      :                          @497
  9090: 82 1a 58                 a3 = u64 [sp + 0x58]
  9093: 82 17 50                 a0 = u64 [sp + 0x50]
  9096: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  9099: 82 aa 18                 a3 = u64 [a3 + 0x18]
  9102: b4 a0 02 c4 00           ra = 196, jump [a3]
      :                          @498 [@dyn 98]
  9107: 52 07 58                 jump @507 if a0 != 0
      :                          @499
  9110: 82 57                    a0 = u64 [s0]
  9112: 82 59 08                 a2 = u64 [s0 + 0x8]
  9115: 95 18 30                 a1 = sp + 0x30
  9118: b4 90 02 c6 00           ra = 198, jump [a2]
      :                          @500 [@dyn 99]
  9123: 52 07 48                 jump @507 if a0 != 0
      :                          @501
  9126: 95 66 10                 s1 = s1 + 0x10
  9129: 95 55 10                 s0 = s0 + 0x10
  9132: 82 1a 28                 a3 = u64 [sp + 0x28]
  9135: 95 aa 01                 a3 = a3 + 0x1
  9138: 82 17 20                 a0 = u64 [sp + 0x20]
  9141: ab 75 c5                 jump @496 if s0 != a0
      :                          @502
  9144: 82 19 08                 a2 = u64 [sp + 0x8]
  9147: 82 1a                    a3 = u64 [sp]
  9149: 82 97 08                 a0 = u64 [a2 + 0x8]
  9152: ac 7a 0d                 jump @505 if a3 <u a0
      :                          @503
  9155: 28 2d                    jump @508
      :                          @504
  9157: 33 0a                    a3 = 0
  9159: 82 97 08                 a0 = u64 [a2 + 0x8]
  9162: 54 07 26                 jump @508 if a0 <=u 0
      :                          @505
  9165: 82 97                    a0 = u64 [a2]
  9167: 97 a8 04                 a1 = a3 << 0x4
  9170: c8 87 09                 a2 = a0 + a1
  9173: 82 1a 58                 a3 = u64 [sp + 0x58]
  9176: 82 17 50                 a0 = u64 [sp + 0x50]
  9179: 82 98                    a1 = u64 [a2]
  9181: 82 99 08                 a2 = u64 [a2 + 0x8]
  9184: 82 aa 18                 a3 = u64 [a3 + 0x18]
  9187: b4 a0 02 c8 00           ra = 200, jump [a3]
      :                          @506 [@dyn 100]
  9192: 51 07 08                 jump @508 if a0 == 0
      :                          @507
  9195: 33 07 01                 a0 = 0x1
  9198: 28 05                    jump @509
      :                          @508
  9200: 33 07                    a0 = 0
  9202: 01                       fallthrough
      :                          @509
  9203: 82 10 80 00              ra = u64 [sp + 0x80]
  9207: 82 15 78                 s0 = u64 [sp + 0x78]
  9210: 82 16 70                 s1 = u64 [sp + 0x70]
  9213: 95 11 88 00              sp = sp + 0x88
  9217: 32 00                    ret
      :                          @510 [@dyn 101]
  9219: 32 00                    ret
      :                          @511 [@dyn 102]
  9221: 95 11 80                 sp = sp + 0xffffffffffffff80
  9224: 7b 10 78                 u64 [sp + 0x78] = ra
  9227: 7b 15 70                 u64 [sp + 0x70] = s0
  9230: 7b 16 68                 u64 [sp + 0x68] = s1
  9233: 64 92                    t0 = a2
  9235: 33 00                    ra = 0
  9237: 33 0b                    a4 = 0
  9239: 33 05                    s0 = 0
  9241: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
  9251: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
  9257: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
  9267: 82 79 10                 a2 = u64 [a0 + 0x10]
  9270: 7b 19 48                 u64 [sp + 0x48] = a2
  9273: 82 79                    a2 = u64 [a0]
  9275: 7b 19 38                 u64 [sp + 0x38] = a2
  9278: 82 77 08                 a0 = u64 [a0 + 0x8]
  9281: 7b 17 30                 u64 [sp + 0x30] = a0
  9284: 33 07 70 01 01           a0 = 0x10170
  9289: 7b 17 08                 u64 [sp + 0x8] = a0
  9292: 3a 07 58 00 03           a0 = u64 [0x30058]
  9297: 7b 17 60                 u64 [sp + 0x60] = a0
  9300: 7b 18 58                 u64 [sp + 0x58] = a1
  9303: 95 88 08                 a1 = a1 + 0x8
  9306: 7b 18                    u64 [sp] = a1
  9308: 33 0c 0a                 a5 = 0xa
  9311: 7b 12 20                 u64 [sp + 0x20] = t0
  9314: 7b 13 18                 u64 [sp + 0x18] = t1
  9317: 7b 14 10                 u64 [sp + 0x10] = t2
  9320: 28 3b                    jump @515
      :                          @512
  9322: 64 06                    s1 = ra
  9324: c8 89 07                 a0 = a2 + a1
  9327: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
  9330: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  9333: 88 77 01                 a0 = a0 <u 0x1
  9336: 01                       fallthrough
      :                          @513
  9337: 82 1a 48                 a3 = u64 [sp + 0x48]
  9340: 78 a7                    u8 [a3] = a0
  9342: 82 17 30                 a0 = u64 [sp + 0x30]
  9345: 82 7a 18                 a3 = u64 [a0 + 0x18]
  9348: 82 17 38                 a0 = u64 [sp + 0x38]
  9351: b4 a0 02 ce 00           ra = 206, jump [a3]
      :                          @514 [@dyn 103]
  9356: 64 5b                    a4 = s0
  9358: 82 12 20                 t0 = u64 [sp + 0x20]
  9361: 82 13 18                 t1 = u64 [sp + 0x18]
  9364: 82 14 10                 t2 = u64 [sp + 0x10]
  9367: 64 60                    ra = s1
  9369: 33 0c 0a                 a5 = 0xa
  9372: 82 15 40                 s0 = u64 [sp + 0x40]
  9375: 52 07 64 01              jump @556 if a0 != 0
      :                          @515
  9379: 84 57 ff 00              a0 = s0 & 0xff
  9383: 52 07 58 01              jump @555 if a0 != 0
      :                          @516
  9387: 7b 1b 50                 u64 [sp + 0x50] = a4
  9390: ae 02 0a                 jump @519 if t0 >=u ra
      :                          @517
  9393: 28 ef 00                 jump @546
      :                          @518
  9396: ac 02 ec 00              jump @546 if t0 <u ra
      :                          @519
  9400: c9 02 08                 a1 = t0 - ra
  9403: 82 16 58                 s1 = u64 [sp + 0x58]
  9406: c8 06 06                 s1 = s1 + ra
  9409: 55 18 10 1d              jump @525 if a1 >=u 16
      :                          @520
  9413: aa 02 d8 00              jump @545 if t0 == ra
      :                          @521
  9417: 33 0a                    a3 = 0
  9419: 01                       fallthrough
      :                          @522
  9420: c8 a6 07                 a0 = s1 + a3
  9423: 7c 77                    a0 = u8 [a0]
  9425: aa c7 a5 00              jump @540 if a0 == a5
      :                          @523
  9429: 95 aa 01                 a3 = a3 + 0x1
  9432: ab a8 f4                 jump @522 if a1 != a3
      :                          @524
  9435: 28 c2 00                 jump @545
      :                          @525
  9438: 95 69 07                 a2 = s1 + 0x7
  9441: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
  9444: c9 6a 07                 a0 = a3 - s1
  9447: d3 6a 0a                 a3 = a3 ^ s1
  9450: 88 aa 01                 a3 = a3 <u 0x1
  9453: 88 7b 01                 a4 = a0 <u 0x1
  9456: d4 ba 0a                 a3 = a3 | a4
  9459: 51 0a 45                 jump @531 if a3 == 0
      :                          @526
  9462: 33 07                    a0 = 0
  9464: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  9467: 82 1b                    a4 = u64 [sp]
  9469: c8 0b 0b                 a4 = a4 + ra
  9472: 28 08                    jump @528
      :                          @527
  9474: 82 1b                    a4 = u64 [sp]
  9476: c8 0b 0b                 a4 = a4 + ra
  9479: 01                       fallthrough
      :                          @528
  9480: c8 76 0c                 a5 = s1 + a0
  9483: 82 cc                    a5 = u64 [a5]
  9485: c8 7b 09                 a2 = a4 + a0
  9488: 82 99                    a2 = u64 [a2]
  9490: d3 4c 05                 s0 = a5 ^ t2
  9493: c8 35 05                 s0 = s0 + t1
  9496: e0 c5 0c                 a5 = s0 & ~a5
  9499: d3 49 05                 s0 = a2 ^ t2
  9502: c8 35 05                 s0 = s0 + t1
  9505: e0 95 09                 a2 = s0 & ~a2
  9508: d4 c9 09                 a2 = a2 | a5
  9511: 82 1c 60                 a5 = u64 [sp + 0x60]
  9514: d2 c9 09                 a2 = a2 & a5
  9517: 52 09 1f                 jump @534 if a2 != 0
      :                          @529
  9520: 95 77 10                 a0 = a0 + 0x10
  9523: ae 7a d5                 jump @528 if a3 >=u a0
      :                          @530
  9526: 28 16                    jump @534
      :                          @531
  9528: c8 a6 0b                 a4 = s1 + a3
  9531: 7c bb                    a4 = u8 [a4]
  9533: aa cb 51                 jump @543 if a4 == a5
      :                          @532
  9536: 95 aa 01                 a3 = a3 + 0x1
  9539: ab a7 f5                 jump @531 if a0 != a3
      :                          @533
  9542: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  9545: ae 7a b9                 jump @527 if a3 >=u a0
      :                          @534
  9548: aa 87 9b 00              jump @552 if a0 == a1
      :                          @535
  9552: 33 0a                    a3 = 0
  9554: c8 76 06                 s1 = s1 + a0
  9557: c9 72 08                 a1 = t0 - a0
  9560: c9 08 08                 a1 = a1 - ra
  9563: 33 0c 0a                 a5 = 0xa
  9566: 82 1b 50                 a4 = u64 [sp + 0x50]
  9569: 01                       fallthrough
      :                          @536
  9570: c8 a6 09                 a2 = s1 + a3
  9573: 7c 99                    a2 = u8 [a2]
  9575: aa c9 0b                 jump @539 if a2 == a5
      :                          @537
  9578: 95 aa 01                 a3 = a3 + 0x1
  9581: ab a8 f5                 jump @536 if a1 != a3
      :                          @538
  9584: 28 2d                    jump @545
      :                          @539
  9586: c8 7a 0a                 a3 = a3 + a0
  9589: 01                       fallthrough
      :                          @540
  9590: c8 0a 0a                 a3 = a3 + ra
  9593: 95 a0 01                 ra = a3 + 0x1
  9596: ae 2a 38 ff              jump @518 if a3 >=u t0
      :                          @541
  9600: 82 17 58                 a0 = u64 [sp + 0x58]
  9603: c8 7a 0a                 a3 = a3 + a0
  9606: 7c a7                    a0 = u8 [a3]
  9608: ab c7 2c ff              jump @518 if a0 != a5
      :                          @542
  9612: 28 62                    jump @553
      :                          @543
  9614: 82 1b 50                 a4 = u64 [sp + 0x50]
  9617: c8 0a 0a                 a3 = a3 + ra
  9620: 95 a0 01                 ra = a3 + 0x1
  9623: ac 2a e9                 jump @541 if a3 <u t0
      :                          @544
  9626: 28 1a ff                 jump @518
      :                          @545
  9629: 64 20                    ra = t0
  9631: 01                       fallthrough
      :                          @546
  9632: 49 11 40 01              u64 [sp + 64] = 0x1
  9636: 64 b5                    s0 = a4
  9638: 64 26                    s1 = t0
  9640: aa 2b 57                 jump @555 if a4 == t0
      :                          @547
  9643: 82 17 48                 a0 = u64 [sp + 0x48]
  9646: 7c 77                    a0 = u8 [a0]
  9648: 51 07 23                 jump @550 if a0 == 0
      :                          @548
  9651: 82 17 30                 a0 = u64 [sp + 0x30]
  9654: 82 7a 18                 a3 = u64 [a0 + 0x18]
  9657: 33 09 04                 a2 = 0x4
  9660: 82 17 38                 a0 = u64 [sp + 0x38]
  9663: 82 18 08                 a1 = u64 [sp + 0x8]
  9666: 7b 10 28                 u64 [sp + 0x28] = ra
  9669: b4 a0 02 d0 00           ra = 208, jump [a3]
      :                          @549 [@dyn 104]
  9674: 82 1b 50                 a4 = u64 [sp + 0x50]
  9677: 82 10 28                 ra = u64 [sp + 0x28]
  9680: 52 07 33                 jump @556 if a0 != 0
      :                          @550
  9683: c9 b6 09                 a2 = s1 - a4
  9686: 82 18 58                 a1 = u64 [sp + 0x58]
  9689: c8 b8 08                 a1 = a1 + a4
  9692: ab b6 8e fe              jump @512 if s1 != a4
      :                          @551
  9696: 64 06                    s1 = ra
  9698: 33 07                    a0 = 0
  9700: 28 95 fe                 jump @513
      :                          @552
  9703: 64 20                    ra = t0
  9705: 82 1b 50                 a4 = u64 [sp + 0x50]
  9708: 28 b4                    jump @546
      :                          @553
  9710: 49 11 40                 u64 [sp + 64] = 0
  9713: 64 05                    s0 = ra
  9715: 64 06                    s1 = ra
  9717: 82 17 48                 a0 = u64 [sp + 0x48]
  9720: 7c 77                    a0 = u8 [a0]
  9722: 52 07 b9                 jump @548 if a0 != 0
      :                          @554
  9725: 28 d6                    jump @550
      :                          @555
  9727: 33 07                    a0 = 0
  9729: 28 06                    jump @557
      :                          @556
  9731: 33 07 01                 a0 = 0x1
  9734: 01                       fallthrough
      :                          @557
  9735: 82 10 78                 ra = u64 [sp + 0x78]
  9738: 82 15 70                 s0 = u64 [sp + 0x70]
  9741: 82 16 68                 s1 = u64 [sp + 0x68]
  9744: 95 11 80 00              sp = sp + 0x80
  9748: 32 00                    ret
      :                          @558 [@dyn 105]
  9750: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  9753: 7b 10 20                 u64 [sp + 0x20] = ra
  9756: 7b 15 18                 u64 [sp + 0x18] = s0
  9759: 7b 16 10                 u64 [sp + 0x10] = s1
  9762: 82 75 10                 s0 = u64 [a0 + 0x10]
  9765: 7c 59                    a2 = u8 [s0]
  9767: 82 7b                    a4 = u64 [a0]
  9769: 82 76 08                 s1 = u64 [a0 + 0x8]
  9772: 51 09 33                 jump @562 if a2 == 0
      :                          @559
  9775: 82 6a 18                 a3 = u64 [s1 + 0x18]
  9778: 7b 18 08                 u64 [sp + 0x8] = a1
  9781: 33 08 70 01 01           a1 = 0x10170
  9786: 33 09 04                 a2 = 0x4
  9789: 64 b7                    a0 = a4
  9791: 7b 1b                    u64 [sp] = a4
  9793: b4 a0 02 d4 00           ra = 212, jump [a3]
      :                          @560 [@dyn 106]
  9798: 82 18 08                 a1 = u64 [sp + 0x8]
  9801: 82 1b                    a4 = u64 [sp]
  9803: 51 07 14                 jump @562 if a0 == 0
      :                          @561
  9806: 33 07 01                 a0 = 0x1
  9809: 82 10 20                 ra = u64 [sp + 0x20]
  9812: 82 15 18                 s0 = u64 [sp + 0x18]
  9815: 82 16 10                 s1 = u64 [sp + 0x10]
  9818: 95 11 28                 sp = sp + 0x28
  9821: 32 00                    ret
      :                          @562
  9823: 83 87                    i32 a0 = a1 + 0
  9825: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  9828: 88 77 01                 a0 = a0 <u 0x1
  9831: 78 57                    u8 [s0] = a0
  9833: 82 6c 20                 a5 = u64 [s1 + 0x20]
  9836: 64 b7                    a0 = a4
  9838: 82 10 20                 ra = u64 [sp + 0x20]
  9841: 82 15 18                 s0 = u64 [sp + 0x18]
  9844: 82 16 10                 s1 = u64 [sp + 0x10]
  9847: 95 11 28                 sp = sp + 0x28
  9850: 32 0c                    jump [a5]
      :                          @563 [@dyn 107]
  9852: 64 8a                    a3 = a1
  9854: 33 08 40 01 01           a1 = 0x10140
  9859: 64 a9                    a2 = a3
  9861: 28 99 fb                 jump @472
      :                          @564 [@dyn 108]
  9864: 80 77                    a0 = u32 [a0]
  9866: 28 f3 f7                 jump @410
      :                          @565
  9869: 95 11 70 ff              sp = sp + 0xffffffffffffff70
  9873: 7b 10 88 00              u64 [sp + 0x88] = ra
  9877: 7b 15 80 00              u64 [sp + 0x80] = s0
  9881: 7b 16 78                 u64 [sp + 0x78] = s1
  9884: 64 75                    s0 = a0
  9886: 7c 77 08                 a0 = u8 [a0 + 0x8]
  9889: 64 8b                    a4 = a1
  9891: 33 08 01                 a1 = 0x1
  9894: 33 06 01                 s1 = 0x1
  9897: 51 07 1d                 jump @567 if a0 == 0
      :                          @566
  9900: 78 56 08                 u8 [s0 + 0x8] = s1
  9903: 46 15 09 01              u8 [s0 + 9] = 0x1
  9907: 64 57                    a0 = s0
  9909: 82 10 88 00              ra = u64 [sp + 0x88]
  9913: 82 15 80 00              s0 = u64 [sp + 0x80]
  9917: 82 16 78                 s1 = u64 [sp + 0x78]
  9920: 95 11 90 00              sp = sp + 0x90
  9924: 32 00                    ret
      :                          @567
  9926: 64 9a                    a3 = a2
  9928: 82 5c                    a5 = u64 [s0]
  9930: 80 c7 34                 a0 = u32 [a5 + 0x34]
  9933: 7c 58 09                 a1 = u8 [s0 + 0x9]
  9936: 84 79 04                 a2 = a0 & 0x4
  9939: 52 09 45                 jump @573 if a2 != 0
      :                          @568
  9942: 51 08 32                 jump @571 if a1 == 0
      :                          @569
  9945: 82 c8 28                 a1 = u64 [a5 + 0x28]
  9948: 82 c7 20                 a0 = u64 [a5 + 0x20]
  9951: 82 83 18                 t1 = u64 [a1 + 0x18]
  9954: 33 08 74 01 01           a1 = 0x10174
  9959: 33 09 02                 a2 = 0x2
  9962: 64 a6                    s1 = a3
  9964: 7b 1b 10                 u64 [sp + 0x10] = a4
  9967: 7b 1c 08                 u64 [sp + 0x8] = a5
  9970: b4 30 02 da 00           ra = 218, jump [t1]
      :                          @570 [@dyn 109]
  9975: 82 1c 08                 a5 = u64 [sp + 0x8]
  9978: 82 1b 10                 a4 = u64 [sp + 0x10]
  9981: 64 6a                    a3 = s1
  9983: 33 08 01                 a1 = 0x1
  9986: 33 06 01                 s1 = 0x1
  9989: 52 07 a7                 jump @566 if a0 != 0
      :                          @571
  9992: 64 b7                    a0 = a4
  9994: 64 c8                    a1 = a5
  9996: b4 a0 02 dc 00           ra = 220, jump [a3]
      :                          @572 [@dyn 110]
 10001: 33 08 01                 a1 = 0x1
 10004: 64 76                    s1 = a0
 10006: 28 96                    jump @566
      :                          @573
 10008: 52 08 37                 jump @577 if a1 != 0
      :                          @574
 10011: 82 c8 28                 a1 = u64 [a5 + 0x28]
 10014: 82 c7 20                 a0 = u64 [a5 + 0x20]
 10017: 82 83 18                 t1 = u64 [a1 + 0x18]
 10020: 33 08 78 01 01           a1 = 0x10178
 10025: 33 09 01                 a2 = 0x1
 10028: 33 06 01                 s1 = 0x1
 10031: 7b 1a                    u64 [sp] = a3
 10033: 7b 1b 10                 u64 [sp + 0x10] = a4
 10036: 7b 1c 08                 u64 [sp + 0x8] = a5
 10039: b4 30 02 de 00           ra = 222, jump [t1]
      :                          @575 [@dyn 111]
 10044: 82 1c 08                 a5 = u64 [sp + 0x8]
 10047: 82 1b 10                 a4 = u64 [sp + 0x10]
 10050: 82 1a                    a3 = u64 [sp]
 10052: 33 08 01                 a1 = 0x1
 10055: 52 07 65 ff              jump @566 if a0 != 0
      :                          @576
 10059: 81 c7 34                 a0 = i32 [a5 + 0x34]
 10062: 01                       fallthrough
      :                          @577
 10063: 33 06 01                 s1 = 0x1
 10066: 78 16 37                 u8 [sp + 0x37] = s1
 10069: 82 c8 20                 a1 = u64 [a5 + 0x20]
 10072: 82 c9 28                 a2 = u64 [a5 + 0x28]
 10075: 7b 18 18                 u64 [sp + 0x18] = a1
 10078: 7b 19 20                 u64 [sp + 0x20] = a2
 10081: 95 18 37                 a1 = sp + 0x37
 10084: 7b 18 28                 u64 [sp + 0x28] = a1
 10087: 81 c8 30                 a1 = i32 [a5 + 0x30]
 10090: 7c c9 38                 a2 = u8 [a5 + 0x38]
 10093: 82 c3                    t1 = u64 [a5]
 10095: 82 c4 08                 t2 = u64 [a5 + 0x8]
 10098: 82 c0 10                 ra = u64 [a5 + 0x10]
 10101: 82 c2 18                 t0 = u64 [a5 + 0x18]
 10104: 7a 17 6c                 u32 [sp + 0x6c] = a0
 10107: 7a 18 68                 u32 [sp + 0x68] = a1
 10110: 78 19 70                 u8 [sp + 0x70] = a2
 10113: 7b 13 38                 u64 [sp + 0x38] = t1
 10116: 7b 14 40                 u64 [sp + 0x40] = t2
 10119: 7b 10 48                 u64 [sp + 0x48] = ra
 10122: 7b 12 50                 u64 [sp + 0x50] = t0
 10125: 95 17 18                 a0 = sp + 0x18
 10128: 7b 17 58                 u64 [sp + 0x58] = a0
 10131: 33 07 40 01 01           a0 = 0x10140
 10136: 7b 17 60                 u64 [sp + 0x60] = a0
 10139: 95 18 38                 a1 = sp + 0x38
 10142: 64 b7                    a0 = a4
 10144: b4 a0 02 e0 00           ra = 224, jump [a3]
      :                          @578 [@dyn 112]
 10149: 52 07 21                 jump @581 if a0 != 0
      :                          @579
 10152: 82 18 60                 a1 = u64 [sp + 0x60]
 10155: 82 17 58                 a0 = u64 [sp + 0x58]
 10158: 82 8a 18                 a3 = u64 [a1 + 0x18]
 10161: 33 08 76 01 01           a1 = 0x10176
 10166: 33 09 02                 a2 = 0x2
 10169: b4 a0 02 e2 00           ra = 226, jump [a3]
      :                          @580 [@dyn 113]
 10174: 64 76                    s1 = a0
 10176: 33 08 01                 a1 = 0x1
 10179: 28 e9 fe                 jump @566
      :                          @581
 10182: 33 08 01                 a1 = 0x1
 10185: 28 e3 fe                 jump @566
      :                          @582
 10188: 51 08 9b 00              jump @603 if a1 == 0
      :                          @583
 10192: 64 79                    a2 = a0
 10194: 7c 77                    a0 = u8 [a0]
 10196: 51 07 91 00              jump @602 if a0 == 0
      :                          @584
 10200: 51 27 ff 00 90 00        jump @604 if a0 == 255
      :                          @585
 10206: 6c 7a                    a3 = sext.b a0
 10208: 57 0a 09                 jump @587 if a3 <s 0
      :                          @586
 10211: 33 0a                    a3 = 0
 10213: 33 08                    a1 = 0
 10215: 28 73                    jump @601
      :                          @587
 10217: 55 27 c0 00 0d           jump @589 if a0 >=u 192
      :                          @588
 10222: 33 0a 01                 a3 = 0x1
 10225: 33 0b 80                 a4 = 0xffffffffffffff80
 10228: 28 4a                    jump @598
      :                          @589
 10230: 55 27 e0 00 0e           jump @591 if a0 >=u 224
      :                          @590
 10235: 33 0a 02                 a3 = 0x2
 10238: 33 0b 40 ff              a4 = 0xffffffffffffff40
 10242: 28 3c                    jump @598
      :                          @591
 10244: 55 27 f0 00 0e           jump @593 if a0 >=u 240
      :                          @592
 10249: 33 0a 03                 a3 = 0x3
 10252: 33 0b 20 ff              a4 = 0xffffffffffffff20
 10256: 28 2e                    jump @598
      :                          @593
 10258: 55 27 f8 00 0e           jump @595 if a0 >=u 248
      :                          @594
 10263: 33 0a 04                 a3 = 0x4
 10266: 33 0b 10 ff              a4 = 0xffffffffffffff10
 10270: 28 20                    jump @598
      :                          @595
 10272: 55 27 fc 00 0e           jump @597 if a0 >=u 252
      :                          @596
 10277: 33 0a 05                 a3 = 0x5
 10280: 33 0b 08 ff              a4 = 0xffffffffffffff08
 10284: 28 12                    jump @598
      :                          @597
 10286: 88 7a fe 00              a3 = a0 <u 0xfe
 10290: 33 0b 04 ff              a4 = 0xffffffffffffff04
 10294: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
 10298: 85 aa 07                 a3 = a3 ^ 0x7
 10301: 01                       fallthrough
      :                          @598
 10302: ae 8a 2b                 jump @605 if a3 >=u a1
      :                          @599
 10305: 33 08                    a1 = 0
 10307: c8 b7 07                 a0 = a0 + a4
 10310: 64 ab                    a4 = a3
 10312: 01                       fallthrough
      :                          @600
 10313: c8 b9 0c                 a5 = a2 + a4
 10316: 7c cc                    a5 = u8 [a5]
 10318: 97 88 08                 a1 = a1 << 0x8
 10321: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 10324: d4 c8 08                 a1 = a1 | a5
 10327: 52 0b f2                 jump @600 if a4 != 0
      :                          @601
 10330: 8a a9 03                 i32 a2 = a3 << 0x3
 10333: cf 97 07                 a0 = a0 << a2
 10336: c8 87 07                 a0 = a0 + a1
 10339: 32 00                    ret
      :                          @602
 10341: 32 00                    ret
      :                          @603
 10343: 00                       trap
      :                          @604
 10344: 00                       trap
      :                          @605
 10345: 00                       trap
