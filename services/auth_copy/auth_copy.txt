// RO data = 756/756 bytes
// RW data = 96/72384 bytes
// Stack size = 65536 bytes
// RO data = [97, 117, 116, 104, 95, 99, 111, 112, 121, 32, 114, 101, 102, 32, 105, 110, 112, 117, 116, 95, 115, 108, 105, 99, 101, 61, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 97, 117, 116, 104, 95, 99, 111, 112, 121, 32, 114, 101, 102, 32, 111, 117, 116, 112, 117, 116, 95, 98, 121, 116, 101, 115, 95, 51, 54, 61, 0, 0, 48, 0, 1, 0, 0, 0, 0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 97, 115, 115, 105, 103, 110, 101, 100, 32, 99, 111, 114, 101, 32, 48, 43, 49, 32, 115, 101, 114, 118, 105, 99, 101, 32, 0, 0, 0, 0, 0, 0, 96, 0, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 97, 117, 116, 104, 95, 99, 111, 112, 121, 32, 65, 67, 67, 32, 111, 112, 101, 114, 97, 110, 100, 95, 108, 101, 110, 61, 32, 105, 115, 32, 108, 101, 115, 115, 32, 116, 104, 97, 110, 32, 51, 54, 32, 98, 121, 116, 101, 115, 44, 32, 114, 101, 116, 117, 114, 110, 105, 110, 103, 32, 101, 114, 114, 111, 114, 0, 0, 0, 0, 0, 0, 0, 144, 0, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 170, 0, 1, 0, 0, 0, 0, 0, 39, 0, 0, 0, 0, 0, 0, 0, 146, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 148, 0, 0, 0, 0, 0, 0, 0, 154, 0, 0, 0, 0, 0, 0, 0, 162, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 198, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 200, 0, 0, 0, 0, 0, 0, 0, 206, 0, 0, 0, 0, 0, 0, 0, 210, 0, 0, 0, 0, 0, 0, 0, 32, 32, 32, 32, 44, 32, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3, 11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4, 7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8, 9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13, 2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9, 12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11, 13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10, 6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5, 10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3]
// RW data = [40, 201, 189, 242, 103, 230, 9, 106, 59, 167, 202, 132, 133, 174, 103, 187, 43, 248, 148, 254, 114, 243, 110, 60, 241, 54, 29, 95, 58, 245, 79, 165, 209, 130, 230, 173, 127, 82, 14, 81, 31, 108, 62, 43, 140, 104, 5, 155, 107, 189, 65, 251, 171, 217, 131, 31, 121, 33, 126, 19, 25, 205, 224, 91, 8, 201, 188, 243, 103, 230, 9, 106, 148, 66, 190, 4, 84, 38, 124, 224, 75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 3483
// Code size = 11101 bytes

      :                          @0
     0: 28 36 04 00 00           jump @65
      :                          @1
     5: 28 72 15 00 00           jump @202
      :                          @2
    10: 28 98 1b                 jump @298
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 80 89 34                 a2 = u32 [a1 + 0x34]
    24: 82 77                    a0 = u64 [a0]
    26: 84 9a 10                 a3 = a2 & 0x10
    29: 52 0a 16                 jump @6 if a3 != 0
      :                          @4
    32: 84 99 20                 a2 = a2 & 0x20
    35: 52 09 41                 jump @9 if a2 != 0
      :                          @5
    38: 7c 77                    a0 = u8 [a0]
    40: 82 10 80 00              ra = u64 [sp + 0x80]
    44: 95 11 88 00              sp = sp + 0x88
    48: 28 40 21                 jump @437
      :                          @6
    51: 7c 77                    a0 = u8 [a0]
    53: 33 0b 81 00              a4 = 0x81
    57: 95 19 7f                 a2 = sp + 0x7f
    60: 33 02 57                 t0 = 0x57
    63: 01                       fallthrough
      :                          @7
    64: 64 bc                    a5 = a4
    66: 84 7b 0f                 a4 = a0 & 0xf
    69: 97 77 38                 a0 = a0 << 0x38
    72: 98 77 3c                 a0 = a0 >> 0x3c
    75: 88 b3 0a                 t1 = a4 <u 0xa
    78: 33 0a 30                 a3 = 0x30
    81: da 32 0a                 a3 = t0 if t1 == 0
    84: be ba 0a                 i32 a3 = a3 + a4
    87: 78 9a                    u8 [a2] = a3
    89: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
    92: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
    95: 52 07 e1                 jump @7 if a0 != 0
      :                          @8
    98: 28 31                    jump @11
      :                          @9
   100: 7c 77                    a0 = u8 [a0]
   102: 33 0b 81 00              a4 = 0x81
   106: 95 19 7f                 a2 = sp + 0x7f
   109: 33 02 37                 t0 = 0x37
   112: 01                       fallthrough
      :                          @10
   113: 64 bc                    a5 = a4
   115: 84 7b 0f                 a4 = a0 & 0xf
   118: 97 77 38                 a0 = a0 << 0x38
   121: 98 77 3c                 a0 = a0 >> 0x3c
   124: 88 b3 0a                 t1 = a4 <u 0xa
   127: 33 0a 30                 a3 = 0x30
   130: da 32 0a                 a3 = t0 if t1 == 0
   133: be ba 0a                 i32 a3 = a3 + a4
   136: 78 9a                    u8 [a2] = a3
   138: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
   141: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
   144: 52 07 e1                 jump @10 if a0 != 0
      :                          @11
   147: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   150: 56 27 80 00 27           jump @14 if a0 >u 128
      :                          @12
   155: 9a bb 81 00              a4 = 0x81 - a4
   159: 64 1a                    a3 = sp
   161: c8 7a 0a                 a3 = a3 + a0
   164: 33 09 02                 a2 = 0x2
   167: 64 87                    a0 = a1
   169: 33 08 6a 01 01           a1 = 0x1016a
   174: 50 10 04 ea 21           ra = 4, jump @447
      :                          @13 [@dyn 2]
   179: 82 10 80 00              ra = u64 [sp + 0x80]
   183: 95 11 88 00              sp = sp + 0x88
   187: 32 00                    ret
      :                          @14
   189: 00                       trap
      :                          @15 [@dyn 3]
   190: 95 11 c0                 sp = sp + 0xffffffffffffffc0
   193: 7b 10 38                 u64 [sp + 0x38] = ra
   196: 7b 15 30                 u64 [sp + 0x30] = s0
   199: 7b 16 28                 u64 [sp + 0x28] = s1
   202: 7b 18 08                 u64 [sp + 0x8] = a1
   205: 82 89 28                 a2 = u64 [a1 + 0x28]
   208: 82 76                    s1 = u64 [a0]
   210: 82 75 08                 s0 = u64 [a0 + 0x8]
   213: 82 87 20                 a0 = u64 [a1 + 0x20]
   216: 82 9a 18                 a3 = u64 [a2 + 0x18]
   219: 33 08 28 01 01           a1 = 0x10128
   224: 33 09 01                 a2 = 0x1
   227: b4 a0 01 08              ra = 8, jump [a3]
      :                          @16 [@dyn 4]
   231: 82 18 08                 a1 = u64 [sp + 0x8]
   234: 7b 18 10                 u64 [sp + 0x10] = a1
   237: 78 17 18                 u8 [sp + 0x18] = a0
   240: 46 11 19                 u8 [sp + 25] = 0
   243: 51 05 2c                 jump @21 if s0 == 0
      :                          @17
   246: 33 07 02                 a0 = 0x2
   249: 7b 17                    u64 [sp] = a0
   251: 01                       fallthrough
      :                          @18
   252: 95 67 01                 a0 = s1 + 0x1
   255: 7b 17 08                 u64 [sp + 0x8] = a0
   258: 7b 16 20                 u64 [sp + 0x20] = s1
   261: 95 17 10                 a0 = sp + 0x10
   264: 95 18 20                 a1 = sp + 0x20
   267: 82 19                    a2 = u64 [sp]
   269: 50 10 0a 73 28           ra = 10, jump @592
      :                          @19 [@dyn 5]
   274: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
   277: 82 16 08                 s1 = u64 [sp + 0x8]
   280: 52 05 e4                 jump @18 if s0 != 0
      :                          @20
   283: 7c 17 18                 a0 = u8 [sp + 0x18]
   286: 01                       fallthrough
      :                          @21
   287: 33 08 01                 a1 = 0x1
   290: 52 07 1e                 jump @24 if a0 != 0
      :                          @22
   293: 82 17 10                 a0 = u64 [sp + 0x10]
   296: 82 78 28                 a1 = u64 [a0 + 0x28]
   299: 82 77 20                 a0 = u64 [a0 + 0x20]
   302: 82 8a 18                 a3 = u64 [a1 + 0x18]
   305: 33 08 69 01 01           a1 = 0x10169
   310: 33 09 01                 a2 = 0x1
   313: b4 a0 01 0c              ra = 12, jump [a3]
      :                          @23 [@dyn 6]
   317: 64 78                    a1 = a0
   319: 01                       fallthrough
      :                          @24
   320: 64 87                    a0 = a1
   322: 82 10 38                 ra = u64 [sp + 0x38]
   325: 82 15 30                 s0 = u64 [sp + 0x30]
   328: 82 16 28                 s1 = u64 [sp + 0x28]
   331: 95 11 40                 sp = sp + 0x40
   334: 32 00                    ret
      :                          @25 [@dyn 7]
   336: 95 11 d0                 sp = sp + 0xffffffffffffffd0
   339: 7b 10 28                 u64 [sp + 0x28] = ra
   342: 7b 15 20                 u64 [sp + 0x20] = s0
   345: 7b 16 18                 u64 [sp + 0x18] = s1
   348: 64 85                    s0 = a1
   350: 82 88 28                 a1 = u64 [a1 + 0x28]
   353: 82 5a 20                 a3 = u64 [s0 + 0x20]
   356: 82 8b 18                 a4 = u64 [a1 + 0x18]
   359: 64 76                    s1 = a0
   361: 33 08 28 01 01           a1 = 0x10128
   366: 33 09 01                 a2 = 0x1
   369: 64 a7                    a0 = a3
   371: b4 b0 01 10              ra = 16, jump [a4]
      :                          @26 [@dyn 8]
   375: 7b 15                    u64 [sp] = s0
   377: 78 17 08                 u8 [sp + 0x8] = a0
   380: 46 11 09                 u8 [sp + 9] = 0
   383: 7b 16 10                 u64 [sp + 0x10] = s1
   386: 33 05 02                 s0 = 0x2
   389: 64 17                    a0 = sp
   391: 95 18 10                 a1 = sp + 0x10
   394: 33 09 02                 a2 = 0x2
   397: 50 10 12 f3 27           ra = 18, jump @592
      :                          @27 [@dyn 9]
   402: 95 67 01                 a0 = s1 + 0x1
   405: 7b 17 10                 u64 [sp + 0x10] = a0
   408: 64 17                    a0 = sp
   410: 95 18 10                 a1 = sp + 0x10
   413: 64 59                    a2 = s0
   415: 50 10 14 e1 27           ra = 20, jump @592
      :                          @28 [@dyn 10]
   420: 95 67 02                 a0 = s1 + 0x2
   423: 7b 17 10                 u64 [sp + 0x10] = a0
   426: 64 17                    a0 = sp
   428: 95 18 10                 a1 = sp + 0x10
   431: 64 59                    a2 = s0
   433: 50 10 16 cf 27           ra = 22, jump @592
      :                          @29 [@dyn 11]
   438: 95 67 03                 a0 = s1 + 0x3
   441: 7b 17 10                 u64 [sp + 0x10] = a0
   444: 64 17                    a0 = sp
   446: 95 18 10                 a1 = sp + 0x10
   449: 64 59                    a2 = s0
   451: 50 10 18 bd 27           ra = 24, jump @592
      :                          @30 [@dyn 12]
   456: 95 67 04                 a0 = s1 + 0x4
   459: 7b 17 10                 u64 [sp + 0x10] = a0
   462: 64 17                    a0 = sp
   464: 95 18 10                 a1 = sp + 0x10
   467: 64 59                    a2 = s0
   469: 50 10 1a ab 27           ra = 26, jump @592
      :                          @31 [@dyn 13]
   474: 95 67 05                 a0 = s1 + 0x5
   477: 7b 17 10                 u64 [sp + 0x10] = a0
   480: 64 17                    a0 = sp
   482: 95 18 10                 a1 = sp + 0x10
   485: 64 59                    a2 = s0
   487: 50 10 1c 99 27           ra = 28, jump @592
      :                          @32 [@dyn 14]
   492: 95 67 06                 a0 = s1 + 0x6
   495: 7b 17 10                 u64 [sp + 0x10] = a0
   498: 64 17                    a0 = sp
   500: 95 18 10                 a1 = sp + 0x10
   503: 64 59                    a2 = s0
   505: 50 10 1e 87 27           ra = 30, jump @592
      :                          @33 [@dyn 15]
   510: 95 67 07                 a0 = s1 + 0x7
   513: 7b 17 10                 u64 [sp + 0x10] = a0
   516: 64 17                    a0 = sp
   518: 95 18 10                 a1 = sp + 0x10
   521: 64 59                    a2 = s0
   523: 50 10 20 75 27           ra = 32, jump @592
      :                          @34 [@dyn 16]
   528: 95 67 08                 a0 = s1 + 0x8
   531: 7b 17 10                 u64 [sp + 0x10] = a0
   534: 64 17                    a0 = sp
   536: 95 18 10                 a1 = sp + 0x10
   539: 64 59                    a2 = s0
   541: 50 10 22 63 27           ra = 34, jump @592
      :                          @35 [@dyn 17]
   546: 95 67 09                 a0 = s1 + 0x9
   549: 7b 17 10                 u64 [sp + 0x10] = a0
   552: 64 17                    a0 = sp
   554: 95 18 10                 a1 = sp + 0x10
   557: 64 59                    a2 = s0
   559: 50 10 24 51 27           ra = 36, jump @592
      :                          @36 [@dyn 18]
   564: 95 67 0a                 a0 = s1 + 0xa
   567: 7b 17 10                 u64 [sp + 0x10] = a0
   570: 64 17                    a0 = sp
   572: 95 18 10                 a1 = sp + 0x10
   575: 64 59                    a2 = s0
   577: 50 10 26 3f 27           ra = 38, jump @592
      :                          @37 [@dyn 19]
   582: 95 67 0b                 a0 = s1 + 0xb
   585: 7b 17 10                 u64 [sp + 0x10] = a0
   588: 64 17                    a0 = sp
   590: 95 18 10                 a1 = sp + 0x10
   593: 64 59                    a2 = s0
   595: 50 10 28 2d 27           ra = 40, jump @592
      :                          @38 [@dyn 20]
   600: 95 67 0c                 a0 = s1 + 0xc
   603: 7b 17 10                 u64 [sp + 0x10] = a0
   606: 64 17                    a0 = sp
   608: 95 18 10                 a1 = sp + 0x10
   611: 64 59                    a2 = s0
   613: 50 10 2a 1b 27           ra = 42, jump @592
      :                          @39 [@dyn 21]
   618: 95 67 0d                 a0 = s1 + 0xd
   621: 7b 17 10                 u64 [sp + 0x10] = a0
   624: 64 17                    a0 = sp
   626: 95 18 10                 a1 = sp + 0x10
   629: 64 59                    a2 = s0
   631: 50 10 2c 09 27           ra = 44, jump @592
      :                          @40 [@dyn 22]
   636: 95 67 0e                 a0 = s1 + 0xe
   639: 7b 17 10                 u64 [sp + 0x10] = a0
   642: 64 17                    a0 = sp
   644: 95 18 10                 a1 = sp + 0x10
   647: 64 59                    a2 = s0
   649: 50 10 2e f7 26           ra = 46, jump @592
      :                          @41 [@dyn 23]
   654: 95 67 0f                 a0 = s1 + 0xf
   657: 7b 17 10                 u64 [sp + 0x10] = a0
   660: 64 17                    a0 = sp
   662: 95 18 10                 a1 = sp + 0x10
   665: 64 59                    a2 = s0
   667: 50 10 30 e5 26           ra = 48, jump @592
      :                          @42 [@dyn 24]
   672: 95 67 10                 a0 = s1 + 0x10
   675: 7b 17 10                 u64 [sp + 0x10] = a0
   678: 64 17                    a0 = sp
   680: 95 18 10                 a1 = sp + 0x10
   683: 64 59                    a2 = s0
   685: 50 10 32 d3 26           ra = 50, jump @592
      :                          @43 [@dyn 25]
   690: 95 67 11                 a0 = s1 + 0x11
   693: 7b 17 10                 u64 [sp + 0x10] = a0
   696: 64 17                    a0 = sp
   698: 95 18 10                 a1 = sp + 0x10
   701: 64 59                    a2 = s0
   703: 50 10 34 c1 26           ra = 52, jump @592
      :                          @44 [@dyn 26]
   708: 95 67 12                 a0 = s1 + 0x12
   711: 7b 17 10                 u64 [sp + 0x10] = a0
   714: 64 17                    a0 = sp
   716: 95 18 10                 a1 = sp + 0x10
   719: 64 59                    a2 = s0
   721: 50 10 36 af 26           ra = 54, jump @592
      :                          @45 [@dyn 27]
   726: 95 67 13                 a0 = s1 + 0x13
   729: 7b 17 10                 u64 [sp + 0x10] = a0
   732: 64 17                    a0 = sp
   734: 95 18 10                 a1 = sp + 0x10
   737: 64 59                    a2 = s0
   739: 50 10 38 9d 26           ra = 56, jump @592
      :                          @46 [@dyn 28]
   744: 95 67 14                 a0 = s1 + 0x14
   747: 7b 17 10                 u64 [sp + 0x10] = a0
   750: 64 17                    a0 = sp
   752: 95 18 10                 a1 = sp + 0x10
   755: 64 59                    a2 = s0
   757: 50 10 3a 8b 26           ra = 58, jump @592
      :                          @47 [@dyn 29]
   762: 95 67 15                 a0 = s1 + 0x15
   765: 7b 17 10                 u64 [sp + 0x10] = a0
   768: 64 17                    a0 = sp
   770: 95 18 10                 a1 = sp + 0x10
   773: 64 59                    a2 = s0
   775: 50 10 3c 79 26           ra = 60, jump @592
      :                          @48 [@dyn 30]
   780: 95 67 16                 a0 = s1 + 0x16
   783: 7b 17 10                 u64 [sp + 0x10] = a0
   786: 64 17                    a0 = sp
   788: 95 18 10                 a1 = sp + 0x10
   791: 64 59                    a2 = s0
   793: 50 10 3e 67 26           ra = 62, jump @592
      :                          @49 [@dyn 31]
   798: 95 67 17                 a0 = s1 + 0x17
   801: 7b 17 10                 u64 [sp + 0x10] = a0
   804: 64 17                    a0 = sp
   806: 95 18 10                 a1 = sp + 0x10
   809: 64 59                    a2 = s0
   811: 50 10 40 55 26           ra = 64, jump @592
      :                          @50 [@dyn 32]
   816: 95 67 18                 a0 = s1 + 0x18
   819: 7b 17 10                 u64 [sp + 0x10] = a0
   822: 64 17                    a0 = sp
   824: 95 18 10                 a1 = sp + 0x10
   827: 64 59                    a2 = s0
   829: 50 10 42 43 26           ra = 66, jump @592
      :                          @51 [@dyn 33]
   834: 95 67 19                 a0 = s1 + 0x19
   837: 7b 17 10                 u64 [sp + 0x10] = a0
   840: 64 17                    a0 = sp
   842: 95 18 10                 a1 = sp + 0x10
   845: 64 59                    a2 = s0
   847: 50 10 44 31 26           ra = 68, jump @592
      :                          @52 [@dyn 34]
   852: 95 67 1a                 a0 = s1 + 0x1a
   855: 7b 17 10                 u64 [sp + 0x10] = a0
   858: 64 17                    a0 = sp
   860: 95 18 10                 a1 = sp + 0x10
   863: 64 59                    a2 = s0
   865: 50 10 46 1f 26           ra = 70, jump @592
      :                          @53 [@dyn 35]
   870: 95 67 1b                 a0 = s1 + 0x1b
   873: 7b 17 10                 u64 [sp + 0x10] = a0
   876: 64 17                    a0 = sp
   878: 95 18 10                 a1 = sp + 0x10
   881: 64 59                    a2 = s0
   883: 50 10 48 0d 26           ra = 72, jump @592
      :                          @54 [@dyn 36]
   888: 95 67 1c                 a0 = s1 + 0x1c
   891: 7b 17 10                 u64 [sp + 0x10] = a0
   894: 64 17                    a0 = sp
   896: 95 18 10                 a1 = sp + 0x10
   899: 64 59                    a2 = s0
   901: 50 10 4a fb 25           ra = 74, jump @592
      :                          @55 [@dyn 37]
   906: 95 67 1d                 a0 = s1 + 0x1d
   909: 7b 17 10                 u64 [sp + 0x10] = a0
   912: 64 17                    a0 = sp
   914: 95 18 10                 a1 = sp + 0x10
   917: 64 59                    a2 = s0
   919: 50 10 4c e9 25           ra = 76, jump @592
      :                          @56 [@dyn 38]
   924: 95 67 1e                 a0 = s1 + 0x1e
   927: 7b 17 10                 u64 [sp + 0x10] = a0
   930: 64 17                    a0 = sp
   932: 95 18 10                 a1 = sp + 0x10
   935: 64 59                    a2 = s0
   937: 50 10 4e d7 25           ra = 78, jump @592
      :                          @57 [@dyn 39]
   942: 95 67 1f                 a0 = s1 + 0x1f
   945: 7b 17 10                 u64 [sp + 0x10] = a0
   948: 64 17                    a0 = sp
   950: 95 18 10                 a1 = sp + 0x10
   953: 64 59                    a2 = s0
   955: 50 10 50 c5 25           ra = 80, jump @592
      :                          @58 [@dyn 40]
   960: 95 67 20                 a0 = s1 + 0x20
   963: 7b 17 10                 u64 [sp + 0x10] = a0
   966: 64 17                    a0 = sp
   968: 95 18 10                 a1 = sp + 0x10
   971: 64 59                    a2 = s0
   973: 50 10 52 b3 25           ra = 82, jump @592
      :                          @59 [@dyn 41]
   978: 95 67 21                 a0 = s1 + 0x21
   981: 7b 17 10                 u64 [sp + 0x10] = a0
   984: 64 17                    a0 = sp
   986: 95 18 10                 a1 = sp + 0x10
   989: 64 59                    a2 = s0
   991: 50 10 54 a1 25           ra = 84, jump @592
      :                          @60 [@dyn 42]
   996: 95 67 22                 a0 = s1 + 0x22
   999: 7b 17 10                 u64 [sp + 0x10] = a0
  1002: 64 17                    a0 = sp
  1004: 95 18 10                 a1 = sp + 0x10
  1007: 64 59                    a2 = s0
  1009: 50 10 56 8f 25           ra = 86, jump @592
      :                          @61 [@dyn 43]
  1014: 95 67 23                 a0 = s1 + 0x23
  1017: 7b 17 10                 u64 [sp + 0x10] = a0
  1020: 64 17                    a0 = sp
  1022: 95 18 10                 a1 = sp + 0x10
  1025: 64 59                    a2 = s0
  1027: 50 10 58 7d 25           ra = 88, jump @592
      :                          @62 [@dyn 44]
  1032: 33 07 01                 a0 = 0x1
  1035: 7c 18 08                 a1 = u8 [sp + 0x8]
  1038: 52 08 1a                 jump @64 if a1 != 0
      :                          @63
  1041: 82 17                    a0 = u64 [sp]
  1043: 82 78 28                 a1 = u64 [a0 + 0x28]
  1046: 82 77 20                 a0 = u64 [a0 + 0x20]
  1049: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1052: 33 08 69 01 01           a1 = 0x10169
  1057: 33 09 01                 a2 = 0x1
  1060: b4 a0 01 5a              ra = 90, jump [a3]
      :                          @64 [@dyn 45]
  1064: 82 10 28                 ra = u64 [sp + 0x28]
  1067: 82 15 20                 s0 = u64 [sp + 0x20]
  1070: 82 16 18                 s1 = u64 [sp + 0x18]
  1073: 95 11 30                 sp = sp + 0x30
  1076: 32 00                    ret
      :                          @65 [export #0: 'refine']
  1078: 95 11 70 fc              sp = sp + 0xfffffffffffffc70
  1082: 7b 10 88 03              u64 [sp + 0x388] = ra
  1086: 7b 15 80 03              u64 [sp + 0x380] = s0
  1090: 7b 16 78 03              u64 [sp + 0x378] = s1
  1094: 64 85                    s0 = a1
  1096: 7b 17 68 01              u64 [sp + 0x168] = a0
  1100: 33 06 61 00 03           s1 = 0x30061
  1105: 33 09 08 10              a2 = 0x1008
  1109: 33 0a 08                 a3 = 0x8
  1112: 33 07 61 00 03           a0 = 0x30061
  1117: 33 08                    a1 = 0
  1119: 33 0b                    a4 = 0
  1121: 33 0c                    a5 = 0
  1123: 0a 01                    ecalli 1 // 'fetch'
  1125: 7b 16 70 01              u64 [sp + 0x170] = s1
  1129: 7b 17 98 00              u64 [sp + 0x98] = a0
  1133: 7b 17 78 01              u64 [sp + 0x178] = a0
  1137: 48 21 84 01              u32 [sp + 388] = 0
  1141: 95 17 84 01              a0 = sp + 0x184
  1145: 33 09 04                 a2 = 0x4
  1148: 33 0a 0d                 a3 = 0xd
  1151: 33 08                    a1 = 0
  1153: 33 0b                    a4 = 0
  1155: 33 0c                    a5 = 0
  1157: 33 00 5c                 ra = 0x5c
  1160: 0a 01                    ecalli 1 // 'fetch'
  1162: 01                       fallthrough
      :                          @66 [@dyn 46]
  1163: 33 09 04                 a2 = 0x4
  1166: 33 07 00 00 01           a0 = 0x10000
  1171: ac 95 46                 jump @75 if s0 <u a2
      :                          @67
  1174: 82 1a 68 01              a3 = u64 [sp + 0x168]
  1178: 7d a8                    a1 = i8 [a3]
  1180: 33 06 01                 s1 = 0x1
  1183: 59 08 37                 jump @74 if a1 >=s 0
      :                          @68
  1186: 84 89 ff 00              a2 = a1 & 0xff
  1190: 33 06 02                 s1 = 0x2
  1193: 53 29 c0 00 2d           jump @74 if a2 <u 192
      :                          @69
  1198: 33 06 03                 s1 = 0x3
  1201: 53 29 e0 00 25           jump @74 if a2 <u 224
      :                          @70
  1206: 33 06 04                 s1 = 0x4
  1209: 53 29 f0 00 1d           jump @74 if a2 <u 240
      :                          @71
  1214: 33 06 05                 s1 = 0x5
  1217: 53 29 f8 00 15           jump @74 if a2 <u 248
      :                          @72
  1222: 33 06 06                 s1 = 0x6
  1225: 53 29 fc 00 0d           jump @74 if a2 <u 252
      :                          @73
  1230: 88 98 fe 00              a1 = a2 <u 0xfe
  1234: 9a 86 08                 s1 = 0x8 - a1
  1237: 01                       fallthrough
      :                          @74
  1238: ae 65 07                 jump @76 if s0 >=u s1
      :                          @75
  1241: 33 08                    a1 = 0
  1243: 28 5f                    jump @87
      :                          @76
  1245: 64 a7                    a0 = a3
  1247: 64 68                    a1 = s1
  1249: 50 10 5e de 25           ra = 94, jump @609
      :                          @77 [@dyn 47]
  1254: aa 65 4c                 jump @86 if s0 == s1
      :                          @78
  1257: 82 17 68 01              a0 = u64 [sp + 0x168]
  1261: c8 67 07                 a0 = a0 + s1
  1264: 7d 79                    a2 = i8 [a0]
  1266: c9 65 06                 s1 = s0 - s1
  1269: 33 05 01                 s0 = 0x1
  1272: 59 09 37                 jump @85 if a2 >=s 0
      :                          @79
  1275: 84 99 ff 00              a2 = a2 & 0xff
  1279: 33 05 02                 s0 = 0x2
  1282: 53 29 c0 00 2d           jump @85 if a2 <u 192
      :                          @80
  1287: 33 05 03                 s0 = 0x3
  1290: 53 29 e0 00 25           jump @85 if a2 <u 224
      :                          @81
  1295: 33 05 04                 s0 = 0x4
  1298: 53 29 f0 00 1d           jump @85 if a2 <u 240
      :                          @82
  1303: 33 05 05                 s0 = 0x5
  1306: 53 29 f8 00 15           jump @85 if a2 <u 248
      :                          @83
  1311: 33 05 06                 s0 = 0x6
  1314: 53 29 fc 00 0d           jump @85 if a2 <u 252
      :                          @84
  1319: 88 98 fe 00              a1 = a2 <u 0xfe
  1323: 9a 85 08                 s0 = 0x8 - a1
  1326: 01                       fallthrough
      :                          @85
  1327: ae 56 1d                 jump @88 if s1 >=u s0
      :                          @86
  1330: 33 08                    a1 = 0
  1332: 33 07 00 00 01           a0 = 0x10000
  1337: 01                       fallthrough
      :                          @87
  1338: 82 10 88 03              ra = u64 [sp + 0x388]
  1342: 82 15 80 03              s0 = u64 [sp + 0x380]
  1346: 82 16 78 03              s1 = u64 [sp + 0x378]
  1350: 95 11 90 03              sp = sp + 0x390
  1354: 32 00                    ret
      :                          @88
  1356: 64 58                    a1 = s0
  1358: 7b 17 68 01              u64 [sp + 0x168] = a0
  1362: 50 10 60 6d 25           ra = 96, jump @609
      :                          @89 [@dyn 48]
  1367: ab 56 09                 jump @91 if s1 != s0
      :                          @90
  1370: 33 08                    a1 = 0
  1372: 33 07                    a0 = 0
  1374: 28 5d                    jump @101
      :                          @91
  1376: 82 17 68 01              a0 = u64 [sp + 0x168]
  1380: c8 57 07                 a0 = a0 + s0
  1383: 7d 78                    a1 = i8 [a0]
  1385: c9 56 05                 s0 = s1 - s0
  1388: 33 06 01                 s1 = 0x1
  1391: 59 08 37                 jump @98 if a1 >=s 0
      :                          @92
  1394: 84 88 ff 00              a1 = a1 & 0xff
  1398: 33 06 02                 s1 = 0x2
  1401: 53 28 c0 00 2d           jump @98 if a1 <u 192
      :                          @93
  1406: 33 06 03                 s1 = 0x3
  1409: 53 28 e0 00 25           jump @98 if a1 <u 224
      :                          @94
  1414: 33 06 04                 s1 = 0x4
  1417: 53 28 f0 00 1d           jump @98 if a1 <u 240
      :                          @95
  1422: 33 06 05                 s1 = 0x5
  1425: 53 28 f8 00 15           jump @98 if a1 <u 248
      :                          @96
  1430: 33 06 06                 s1 = 0x6
  1433: 53 28 fc 00 0d           jump @98 if a1 <u 252
      :                          @97
  1438: 88 88 fe 00              a1 = a1 <u 0xfe
  1442: 9a 86 08                 s1 = 0x8 - a1
  1445: 01                       fallthrough
      :                          @98
  1446: ac 65 d0 0f              jump @201 if s0 <u s1
      :                          @99
  1450: 64 68                    a1 = s1
  1452: 50 10 62 13 25           ra = 98, jump @609
      :                          @100 [@dyn 49]
  1457: e4 65 08                 a1 = maxu(s0, s1)
  1460: c9 68 08                 a1 = a1 - s1
  1463: ac 78 7b ff              jump @86 if a1 <u a0
      :                          @101
  1467: e4 78 08                 a1 = maxu(a1, a0)
  1470: c9 78 08                 a1 = a1 - a0
  1473: 33 09 20                 a2 = 0x20
  1476: 33 07 00 00 01           a0 = 0x10000
  1481: ac 98 10 ff              jump @75 if a1 <u a2
      :                          @102
  1485: 95 17 e8 01              a0 = sp + 0x1e8
  1489: 33 09 80 00              a2 = 0x80
  1493: 33 08                    a1 = 0
  1495: 50 10 64 40 1b           ra = 100, jump @423
      :                          @103 [@dyn 50]
  1500: 3a 0c 00 00 03           a5 = u64 [0x30000]
  1505: 3a 07 08 00 03           a0 = u64 [0x30008]
  1510: 3a 08 10 00 03           a1 = u64 [0x30010]
  1515: 3a 09 18 00 03           a2 = u64 [0x30018]
  1520: 7b 1c 98 01              u64 [sp + 0x198] = a5
  1524: 7b 17 30                 u64 [sp + 0x30] = a0
  1527: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  1531: 7b 18 28                 u64 [sp + 0x28] = a1
  1534: 7b 18 a8 01              u64 [sp + 0x1a8] = a1
  1538: 7b 19 20                 u64 [sp + 0x20] = a2
  1541: 7b 19 b0 01              u64 [sp + 0x1b0] = a2
  1545: 3a 06 20 00 03           s1 = u64 [0x30020]
  1550: 3a 0a 28 00 03           a3 = u64 [0x30028]
  1555: 3a 07 30 00 03           a0 = u64 [0x30030]
  1560: 33 05 38 00 03           s0 = 0x30038
  1565: 3a 08 38 00 03           a1 = u64 [0x30038]
  1570: 7b 16 b8 01              u64 [sp + 0x1b8] = s1
  1574: 7b 1a c0 01              u64 [sp + 0x1c0] = a3
  1578: 7b 17 18                 u64 [sp + 0x18] = a0
  1581: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
  1585: 7b 18 10                 u64 [sp + 0x10] = a1
  1588: 7b 18 d0 01              u64 [sp + 0x1d0] = a1
  1592: 49 21 d8 01              u64 [sp + 472] = 0
  1596: 49 21 e0 01              u64 [sp + 480] = 0
  1600: 49 21 68 02              u64 [sp + 616] = 0
  1604: 46 21 70 02              u8 [sp + 624] = 0
  1608: 7b 1a 88 00              u64 [sp + 0x88] = a3
  1612: 82 1b 98 00              a4 = u64 [sp + 0x98]
  1616: 7b 16 90 00              u64 [sp + 0x90] = s1
  1620: 51 0b 21 06              jump @138 if a4 == 0
      :                          @104
  1624: 33 03                    t1 = 0
  1626: 33 0c                    a5 = 0
  1628: 33 07 3b 02 01           a0 = 0x1023b
  1633: 7b 17 08                 u64 [sp + 0x8] = a0
  1636: 3a 07 40 00 03           a0 = u64 [0x30040]
  1641: 7b 17                    u64 [sp] = a0
  1643: 33 07 61 00 03           a0 = 0x30061
  1648: 7b 17 80 00              u64 [sp + 0x80] = a0
  1652: 01                       fallthrough
      :                          @105
  1653: 52 23 80 00 29           jump @108 if t1 != 128
      :                          @106
  1658: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
  1662: 95 75 80 00              s0 = a0 + 0x80
  1666: 7b 15 d8 01              u64 [sp + 0x1d8] = s0
  1670: 82 19 e0 01              a2 = u64 [sp + 0x1e0]
  1674: 7b 1c 78                 u64 [sp + 0x78] = a5
  1677: 53 17 80 2b              jump @111 if a0 <u 4294967168
      :                          @107
  1681: 95 99 01                 a2 = a2 + 0x1
  1684: 7b 19 68 01              u64 [sp + 0x168] = a2
  1688: 7b 19 e0 01              u64 [sp + 0x1e0] = a2
  1692: 28 21                    jump @112
      :                          @108
  1694: 9a 37 80 00              a0 = 0x80 - t1
  1698: c9 cb 08                 a1 = a4 - a5
  1701: e6 87 05                 s0 = minu(a0, a1)
  1704: c8 35 09                 a2 = s0 + t1
  1707: ac 59 c9 0e              jump @199 if a2 <u s0
      :                          @109
  1711: 54 29 80 00 1c 05        jump @132 if a2 <=u 128
      :                          @110
  1717: 28 c0 0e                 jump @200
      :                          @111
  1720: 7b 19 68 01              u64 [sp + 0x168] = a2
  1724: 01                       fallthrough
      :                          @112
  1725: 95 17 f8 02              a0 = sp + 0x2f8
  1729: 33 09 80 00              a2 = 0x80
  1733: 95 18 e8 01              a1 = sp + 0x1e8
  1737: 50 10 66 9c 19           ra = 102, jump @405
      :                          @113 [@dyn 51]
  1742: 82 16 98 01              s1 = u64 [sp + 0x198]
  1746: 82 1c a0 01              a5 = u64 [sp + 0x1a0]
  1750: 82 13 a8 01              t1 = u64 [sp + 0x1a8]
  1754: 82 12 b0 01              t0 = u64 [sp + 0x1b0]
  1758: 82 1b b8 01              a4 = u64 [sp + 0x1b8]
  1762: 82 1a c0 01              a3 = u64 [sp + 0x1c0]
  1766: 82 18 c8 01              a1 = u64 [sp + 0x1c8]
  1770: 82 14 d0 01              t2 = u64 [sp + 0x1d0]
  1774: 82 17 90 00              a0 = u64 [sp + 0x90]
  1778: d3 57 07                 a0 = a0 ^ s0
  1781: 7b 17 20 01              u64 [sp + 0x120] = a0
  1785: 82 17 88 00              a0 = u64 [sp + 0x88]
  1789: 82 19 68 01              a2 = u64 [sp + 0x168]
  1793: d3 97 07                 a0 = a0 ^ a2
  1796: 7b 17 30 01              u64 [sp + 0x130] = a0
  1800: 33 05 0c                 s0 = 0xc
  1803: 82 17 08                 a0 = u64 [sp + 0x8]
  1806: 7b 16 38                 u64 [sp + 0x38] = s1
  1809: 7b 16 18 01              u64 [sp + 0x118] = s1
  1813: 64 76                    s1 = a0
  1815: 7b 1b 58                 u64 [sp + 0x58] = a4
  1818: 64 b9                    a2 = a4
  1820: 82 17                    a0 = u64 [sp]
  1822: 7b 17 40 01              u64 [sp + 0x140] = a0
  1826: 7b 1c 40                 u64 [sp + 0x40] = a5
  1829: 7b 1c 28 01              u64 [sp + 0x128] = a5
  1833: 7b 1a 60                 u64 [sp + 0x60] = a3
  1836: 64 a0                    ra = a3
  1838: 82 17 30                 a0 = u64 [sp + 0x30]
  1841: 7b 17 50 01              u64 [sp + 0x150] = a0
  1845: 7b 13 48                 u64 [sp + 0x48] = t1
  1848: 7b 13 38 01              u64 [sp + 0x138] = t1
  1852: 7b 18 68                 u64 [sp + 0x68] = a1
  1855: 64 8a                    a3 = a1
  1857: 82 1b 18                 a4 = u64 [sp + 0x18]
  1860: 82 17 28                 a0 = u64 [sp + 0x28]
  1863: 7b 17 60 01              u64 [sp + 0x160] = a0
  1867: 7b 12 50                 u64 [sp + 0x50] = t0
  1870: 64 2c                    a5 = t0
  1872: 7b 14 70                 u64 [sp + 0x70] = t2
  1875: 64 42                    t0 = t2
  1877: 82 17 10                 a0 = u64 [sp + 0x10]
  1880: 7b 17 48 01              u64 [sp + 0x148] = a0
  1884: 82 17 20                 a0 = u64 [sp + 0x20]
  1887: 7b 17 58 01              u64 [sp + 0x158] = a0
  1891: 01                       fallthrough
      :                          @114
  1892: 7b 10 10 01              u64 [sp + 0x110] = ra
  1896: 7b 1a 68 01              u64 [sp + 0x168] = a3
  1900: 7c 60 f9                 ra = u8 [s1 + 0xfffffffffffffff9]
  1903: 56 10 0f fb 0d           jump @189 if ra >u 15
      :                          @115
  1908: 7c 67 fa                 a0 = u8 [s1 + 0xfffffffffffffffa]
  1911: 33 08 10                 a1 = 0x10
  1914: ae 87 f1 0d              jump @190 if a0 >=u a1
      :                          @116
  1918: 7b 1b 08 01              u64 [sp + 0x108] = a4
  1922: 7c 63 fb                 t1 = u8 [s1 + 0xfffffffffffffffb]
  1925: 55 13 10 e8 0d           jump @192 if t1 >=u 16
      :                          @117
  1930: 7b 15 00 01              u64 [sp + 0x100] = s0
  1934: 7c 64 fc                 t2 = u8 [s1 + 0xfffffffffffffffc]
  1937: 55 14 10 db 0d           jump @191 if t2 >=u 16
      :                          @118
  1942: 7b 1c f8 00              u64 [sp + 0xf8] = a5
  1946: 7c 6c fd                 a5 = u8 [s1 + 0xfffffffffffffffd]
  1949: 55 1c 10 ca 0d           jump @186 if a5 >=u 16
      :                          @119
  1954: 7b 12 f0 00              u64 [sp + 0xf0] = t0
  1958: 7c 62 fe                 t0 = u8 [s1 + 0xfffffffffffffffe]
  1961: 55 12 10 bf 0d           jump @187 if t0 >=u 16
      :                          @120
  1966: 7c 6a ff                 a3 = u8 [s1 + 0xffffffffffffffff]
  1969: 55 1a 10 b8 0d           jump @188 if a3 >=u 16
      :                          @121
  1974: 7c 6b                    a4 = u8 [s1]
  1976: 55 1b 10 b6 0d           jump @193 if a4 >=u 16
      :                          @122
  1981: 7c 65 01                 s0 = u8 [s1 + 0x1]
  1984: 55 15 10 ee 0c           jump @173 if s0 >=u 16
      :                          @123
  1989: 7b 15 e8 00              u64 [sp + 0xe8] = s0
  1993: 7c 65 02                 s0 = u8 [s1 + 0x2]
  1996: 55 15 10 e2 0c           jump @173 if s0 >=u 16
      :                          @124
  2001: 7b 15 e0 00              u64 [sp + 0xe0] = s0
  2005: 7c 65 03                 s0 = u8 [s1 + 0x3]
  2008: 55 15 10 d6 0c           jump @173 if s0 >=u 16
      :                          @125
  2013: 7b 15 d8 00              u64 [sp + 0xd8] = s0
  2017: 7c 65 04                 s0 = u8 [s1 + 0x4]
  2020: 55 15 10 ca 0c           jump @173 if s0 >=u 16
      :                          @126
  2025: 7b 15 d0 00              u64 [sp + 0xd0] = s0
  2029: 7c 65 05                 s0 = u8 [s1 + 0x5]
  2032: 55 15 10 be 0c           jump @173 if s0 >=u 16
      :                          @127
  2037: 7b 15 c8 00              u64 [sp + 0xc8] = s0
  2041: 7c 65 06                 s0 = u8 [s1 + 0x6]
  2044: 55 15 10 b2 0c           jump @173 if s0 >=u 16
      :                          @128
  2049: 7b 15 c0 00              u64 [sp + 0xc0] = s0
  2053: 7c 65 07                 s0 = u8 [s1 + 0x7]
  2056: 55 15 10 a6 0c           jump @173 if s0 >=u 16
      :                          @129
  2061: 7b 15 b8 00              u64 [sp + 0xb8] = s0
  2065: 7c 65 08                 s0 = u8 [s1 + 0x8]
  2068: 55 15 10 9a 0c           jump @173 if s0 >=u 16
      :                          @130
  2073: 97 00 03                 ra = ra << 0x3
  2076: 95 18 f8 02              a1 = sp + 0x2f8
  2080: c8 80 00                 ra = ra + a1
  2083: 7b 15 a8 00              u64 [sp + 0xa8] = s0
  2087: 82 05                    s0 = u64 [ra]
  2089: 97 77 03                 a0 = a0 << 0x3
  2092: c8 87 07                 a0 = a0 + a1
  2095: 82 77                    a0 = u64 [a0]
  2097: 7b 16 b0 00              u64 [sp + 0xb0] = s1
  2101: 7b 19 a0 00              u64 [sp + 0xa0] = a2
  2105: 82 16 18 01              s1 = u64 [sp + 0x118]
  2109: c8 96 06                 s1 = s1 + a2
  2112: c8 65 05                 s0 = s0 + s1
  2115: 82 19 20 01              a2 = u64 [sp + 0x120]
  2119: d3 59 09                 a2 = a2 ^ s0
  2122: 7b 19 18 01              u64 [sp + 0x118] = a2
  2126: c8 57 07                 a0 = a0 + s0
  2129: 7b 17 20 01              u64 [sp + 0x120] = a0
  2133: 97 33 03                 t1 = t1 << 0x3
  2136: c8 83 03                 t1 = t1 + a1
  2139: 82 37                    a0 = u64 [t1]
  2141: 97 44 03                 t2 = t2 << 0x3
  2144: c8 84 04                 t2 = t2 + a1
  2147: 82 45                    s0 = u64 [t2]
  2149: 82 10 10 01              ra = u64 [sp + 0x110]
  2153: 82 16 28 01              s1 = u64 [sp + 0x128]
  2157: c8 06 06                 s1 = s1 + ra
  2160: c8 67 07                 a0 = a0 + s1
  2163: 82 19 30 01              a2 = u64 [sp + 0x130]
  2167: d3 97 03                 t1 = a0 ^ a2
  2170: c8 57 04                 t2 = a0 + s0
  2173: 97 cc 03                 a5 = a5 << 0x3
  2176: c8 8c 0c                 a5 = a5 + a1
  2179: 82 c7                    a0 = u64 [a5]
  2181: 97 22 03                 t0 = t0 << 0x3
  2184: c8 82 02                 t0 = t0 + a1
  2187: 82 2c                    a5 = u64 [t0]
  2189: 82 16 38 01              s1 = u64 [sp + 0x138]
  2193: 82 18 68 01              a1 = u64 [sp + 0x168]
  2197: c8 86 06                 s1 = s1 + a1
  2200: c8 67 07                 a0 = a0 + s1
  2203: 82 19 08 01              a2 = u64 [sp + 0x108]
  2207: d3 79 09                 a2 = a2 ^ a0
  2210: 7b 19 38 01              u64 [sp + 0x138] = a2
  2214: c8 c7 07                 a0 = a0 + a5
  2217: 7b 17 30 01              u64 [sp + 0x130] = a0
  2221: 97 aa 03                 a3 = a3 << 0x3
  2224: 95 18 f8 02              a1 = sp + 0x2f8
  2228: c8 8a 0a                 a3 = a3 + a1
  2231: 82 a7                    a0 = u64 [a3]
  2233: 97 bb 03                 a4 = a4 << 0x3
  2236: c8 8b 0b                 a4 = a4 + a1
  2239: 82 ba                    a3 = u64 [a4]
  2241: 82 16 f0 00              s1 = u64 [sp + 0xf0]
  2245: 82 1b f8 00              a4 = u64 [sp + 0xf8]
  2249: c8 6b 0b                 a4 = a4 + s1
  2252: c8 b7 07                 a0 = a0 + a4
  2255: 82 1b 48 01              a4 = u64 [sp + 0x148]
  2259: d3 7b 0b                 a4 = a4 ^ a0
  2262: c8 a7 02                 t0 = a0 + a3
  2265: 82 17 18 01              a0 = u64 [sp + 0x118]
  2269: 9e 77 20                 a0 = a0 >>r 0x20
  2272: 82 1a 40 01              a3 = u64 [sp + 0x140]
  2276: c8 7a 0a                 a3 = a3 + a0
  2279: 82 15 a0 00              s0 = u64 [sp + 0xa0]
  2283: d3 a5 05                 s0 = s0 ^ a3
  2286: 82 19 e8 00              a2 = u64 [sp + 0xe8]
  2290: 97 99 03                 a2 = a2 << 0x3
  2293: c8 89 09                 a2 = a2 + a1
  2296: 82 99                    a2 = u64 [a2]
  2298: 9e 58 18                 a1 = s0 >>r 0x18
  2301: 7b 18 48 01              u64 [sp + 0x148] = a1
  2305: 82 15 20 01              s0 = u64 [sp + 0x120]
  2309: c8 85 05                 s0 = s0 + a1
  2312: d3 57 07                 a0 = a0 ^ s0
  2315: c8 59 09                 a2 = a2 + s0
  2318: 9e 35 20                 s0 = t1 >>r 0x20
  2321: 82 18 50 01              a1 = u64 [sp + 0x150]
  2325: c8 85 03                 t1 = s0 + a1
  2328: d3 03 0c                 a5 = t1 ^ ra
  2331: 9e cc 18                 a5 = a5 >>r 0x18
  2334: c8 c4 04                 t2 = t2 + a5
  2337: d3 54 05                 s0 = t2 ^ s0
  2340: 9e 58 10                 a1 = s0 >>r 0x10
  2343: 7b 18 40 01              u64 [sp + 0x140] = a1
  2347: c8 38 08                 a1 = a1 + t1
  2350: 7b 18 50 01              u64 [sp + 0x150] = a1
  2354: d3 c8 08                 a1 = a1 ^ a5
  2357: 9e 88 3f                 a1 = a1 >>r 0x3f
  2360: 7b 18 28 01              u64 [sp + 0x128] = a1
  2364: 9e bb 20                 a4 = a4 >>r 0x20
  2367: 82 10 58 01              ra = u64 [sp + 0x158]
  2371: c8 b0 00                 ra = ra + a4
  2374: d3 60 0c                 a5 = ra ^ s1
  2377: 9e c5 18                 s0 = a5 >>r 0x18
  2380: c8 52 03                 t1 = t0 + s0
  2383: d3 b3 0b                 a4 = t1 ^ a4
  2386: 9e bb 10                 a4 = a4 >>r 0x10
  2389: c8 b0 00                 ra = ra + a4
  2392: 7b 10 08 01              u64 [sp + 0x108] = ra
  2396: 82 1c e0 00              a5 = u64 [sp + 0xe0]
  2400: 97 cc 03                 a5 = a5 << 0x3
  2403: 95 16 f8 02              s1 = sp + 0x2f8
  2407: c8 6c 0c                 a5 = a5 + s1
  2410: 82 cc                    a5 = u64 [a5]
  2412: 82 12 d8 00              t0 = u64 [sp + 0xd8]
  2416: 97 22 03                 t0 = t0 << 0x3
  2419: c8 62 02                 t0 = t0 + s1
  2422: 82 22                    t0 = u64 [t0]
  2424: c8 89 09                 a2 = a2 + a1
  2427: d3 9b 0b                 a4 = a4 ^ a2
  2430: 7b 1b 20 01              u64 [sp + 0x120] = a4
  2434: c8 c9 09                 a2 = a2 + a5
  2437: 7b 19 58 01              u64 [sp + 0x158] = a2
  2441: c8 24 04                 t2 = t2 + t0
  2444: 9e 76 10                 s1 = a0 >>r 0x10
  2447: c8 6a 0a                 a3 = a3 + s1
  2450: 7b 1a 10 01              u64 [sp + 0x110] = a3
  2454: 82 17 38 01              a0 = u64 [sp + 0x138]
  2458: 9e 79 20                 a2 = a0 >>r 0x20
  2461: 82 12 60 01              t0 = u64 [sp + 0x160]
  2465: c8 92 02                 t0 = t0 + a2
  2468: 82 17 68 01              a0 = u64 [sp + 0x168]
  2472: d3 72 0c                 a5 = t0 ^ a0
  2475: 9e cb 18                 a4 = a5 >>r 0x18
  2478: 82 17 30 01              a0 = u64 [sp + 0x130]
  2482: c8 b7 07                 a0 = a0 + a4
  2485: d3 79 09                 a2 = a2 ^ a0
  2488: 9e 90 10                 ra = a2 >>r 0x10
  2491: c8 02 02                 t0 = t0 + ra
  2494: d3 b2 0b                 a4 = t0 ^ a4
  2497: 9e b8 3f                 a1 = a4 >>r 0x3f
  2500: 7b 18 38 01              u64 [sp + 0x138] = a1
  2504: 82 1a d0 00              a3 = u64 [sp + 0xd0]
  2508: 97 aa 03                 a3 = a3 << 0x3
  2511: 95 19 f8 02              a2 = sp + 0x2f8
  2515: c8 9a 0a                 a3 = a3 + a2
  2518: 82 aa                    a3 = u64 [a3]
  2520: 82 1b c8 00              a4 = u64 [sp + 0xc8]
  2524: 97 bb 03                 a4 = a4 << 0x3
  2527: c8 9b 0b                 a4 = a4 + a2
  2530: 82 bb                    a4 = u64 [a4]
  2532: c8 84 04                 t2 = t2 + a1
  2535: d3 64 06                 s1 = t2 ^ s1
  2538: c8 4a 0a                 a3 = a3 + t2
  2541: 7b 1a 68 01              u64 [sp + 0x168] = a3
  2545: c8 7b 0b                 a4 = a4 + a0
  2548: 82 18 08 01              a1 = u64 [sp + 0x108]
  2552: d3 58 07                 a0 = a1 ^ s0
  2555: 9e 7c 3f                 a5 = a0 >>r 0x3f
  2558: 82 1a c0 00              a3 = u64 [sp + 0xc0]
  2562: 97 aa 03                 a3 = a3 << 0x3
  2565: c8 9a 0a                 a3 = a3 + a2
  2568: 82 aa                    a3 = u64 [a3]
  2570: 82 15 b8 00              s0 = u64 [sp + 0xb8]
  2574: 97 55 03                 s0 = s0 << 0x3
  2577: c8 95 05                 s0 = s0 + a2
  2580: 82 55                    s0 = u64 [s0]
  2582: c8 cb 0b                 a4 = a4 + a5
  2585: 82 17 40 01              a0 = u64 [sp + 0x140]
  2589: d3 b7 07                 a0 = a0 ^ a4
  2592: 7b 17 30 01              u64 [sp + 0x130] = a0
  2596: c8 ba 0a                 a3 = a3 + a4
  2599: 7b 1a 40 01              u64 [sp + 0x140] = a3
  2603: c8 53 03                 t1 = t1 + s0
  2606: 82 1a 48 01              a3 = u64 [sp + 0x148]
  2610: 82 17 10 01              a0 = u64 [sp + 0x110]
  2614: d3 a7 0b                 a4 = a0 ^ a3
  2617: 82 15 a8 00              s0 = u64 [sp + 0xa8]
  2621: 97 55 03                 s0 = s0 << 0x3
  2624: c8 95 05                 s0 = s0 + a2
  2627: 82 55                    s0 = u64 [s0]
  2629: 9e bb 3f                 a4 = a4 >>r 0x3f
  2632: c8 b3 03                 t1 = t1 + a4
  2635: d3 03 04                 t2 = t1 ^ ra
  2638: c8 53 03                 t1 = t1 + s0
  2641: 82 19 20 01              a2 = u64 [sp + 0x120]
  2645: 9e 95 20                 s0 = a2 >>r 0x20
  2648: c8 25 09                 a2 = s0 + t0
  2651: 82 1a 28 01              a3 = u64 [sp + 0x128]
  2655: d3 a9 00                 ra = a2 ^ a3
  2658: 9e 00 18                 ra = ra >>r 0x18
  2661: 82 1a 58 01              a3 = u64 [sp + 0x158]
  2665: c8 0a 0a                 a3 = a3 + ra
  2668: 7b 1a 18 01              u64 [sp + 0x118] = a3
  2672: d3 a5 05                 s0 = s0 ^ a3
  2675: 9e 5a 10                 a3 = s0 >>r 0x10
  2678: 7b 1a 48 01              u64 [sp + 0x148] = a3
  2682: c8 a9 09                 a2 = a2 + a3
  2685: 7b 19 60 01              u64 [sp + 0x160] = a2
  2689: d3 09 09                 a2 = a2 ^ ra
  2692: 9e 90 3f                 ra = a2 >>r 0x3f
  2695: 9e 69 20                 a2 = s1 >>r 0x20
  2698: c8 89 05                 s0 = a2 + a1
  2701: 82 16 38 01              s1 = u64 [sp + 0x138]
  2705: d3 56 06                 s1 = s1 ^ s0
  2708: 9e 66 18                 s1 = s1 >>r 0x18
  2711: 82 18 68 01              a1 = u64 [sp + 0x168]
  2715: c8 68 08                 a1 = a1 + s1
  2718: 7b 18 28 01              u64 [sp + 0x128] = a1
  2722: d3 89 09                 a2 = a2 ^ a1
  2725: 9e 99 10                 a2 = a2 >>r 0x10
  2728: 7b 19 20 01              u64 [sp + 0x120] = a2
  2732: c8 59 09                 a2 = a2 + s0
  2735: 7b 19 58 01              u64 [sp + 0x158] = a2
  2739: d3 69 09                 a2 = a2 ^ s1
  2742: 82 16 b0 00              s1 = u64 [sp + 0xb0]
  2746: 9e 9a 3f                 a3 = a2 >>r 0x3f
  2749: 82 18 30 01              a1 = u64 [sp + 0x130]
  2753: 9e 89 20                 a2 = a1 >>r 0x20
  2756: c8 79 08                 a1 = a2 + a0
  2759: d3 c8 07                 a0 = a1 ^ a5
  2762: 9e 77 18                 a0 = a0 >>r 0x18
  2765: 82 12 40 01              t0 = u64 [sp + 0x140]
  2769: c8 72 02                 t0 = t0 + a0
  2772: 7b 12 38 01              u64 [sp + 0x138] = t0
  2776: d3 92 09                 a2 = t0 ^ a2
  2779: 9e 99 10                 a2 = a2 >>r 0x10
  2782: 7b 19 30 01              u64 [sp + 0x130] = a2
  2786: c8 98 08                 a1 = a1 + a2
  2789: 7b 18 40 01              u64 [sp + 0x140] = a1
  2793: d3 87 07                 a0 = a0 ^ a1
  2796: 9e 72 3f                 t0 = a0 >>r 0x3f
  2799: 9e 47 20                 a0 = t2 >>r 0x20
  2802: 82 18 50 01              a1 = u64 [sp + 0x150]
  2806: c8 78 08                 a1 = a1 + a0
  2809: d3 8b 0b                 a4 = a4 ^ a1
  2812: 9e b9 18                 a2 = a4 >>r 0x18
  2815: c8 93 0c                 a5 = t1 + a2
  2818: d3 c7 07                 a0 = a0 ^ a5
  2821: 9e 7b 10                 a4 = a0 >>r 0x10
  2824: c8 8b 07                 a0 = a4 + a1
  2827: 7b 17 50 01              u64 [sp + 0x150] = a0
  2831: d3 97 07                 a0 = a0 ^ a2
  2834: 9e 79 3f                 a2 = a0 >>r 0x3f
  2837: 82 15 00 01              s0 = u64 [sp + 0x100]
  2841: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  2844: 95 66 10                 s1 = s1 + 0x10
  2847: 52 05 45 fc              jump @114 if s0 != 0
      :                          @131
  2851: 33 03                    t1 = 0
  2853: 82 17 38                 a0 = u64 [sp + 0x38]
  2856: 82 18 18 01              a1 = u64 [sp + 0x118]
  2860: d3 87 07                 a0 = a0 ^ a1
  2863: 82 18 40 01              a1 = u64 [sp + 0x140]
  2867: d3 87 07                 a0 = a0 ^ a1
  2870: 7b 17 98 01              u64 [sp + 0x198] = a0
  2874: 82 17 40                 a0 = u64 [sp + 0x40]
  2877: 82 18 28 01              a1 = u64 [sp + 0x128]
  2881: d3 87 07                 a0 = a0 ^ a1
  2884: 82 18 50 01              a1 = u64 [sp + 0x150]
  2888: d3 87 07                 a0 = a0 ^ a1
  2891: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  2895: 82 17 48                 a0 = u64 [sp + 0x48]
  2898: 82 18 60 01              a1 = u64 [sp + 0x160]
  2902: d3 87 07                 a0 = a0 ^ a1
  2905: 82 18 38 01              a1 = u64 [sp + 0x138]
  2909: d3 87 07                 a0 = a0 ^ a1
  2912: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  2916: 82 17 50                 a0 = u64 [sp + 0x50]
  2919: 82 18 58 01              a1 = u64 [sp + 0x158]
  2923: d3 87 07                 a0 = a0 ^ a1
  2926: d3 c7 07                 a0 = a0 ^ a5
  2929: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  2933: 82 17 58                 a0 = u64 [sp + 0x58]
  2936: 82 18 20 01              a1 = u64 [sp + 0x120]
  2940: d3 87 07                 a0 = a0 ^ a1
  2943: d3 97 07                 a0 = a0 ^ a2
  2946: 7b 17 b8 01              u64 [sp + 0x1b8] = a0
  2950: 82 17 60                 a0 = u64 [sp + 0x60]
  2953: d3 70 07                 a0 = ra ^ a0
  2956: 82 18 30 01              a1 = u64 [sp + 0x130]
  2960: d3 87 07                 a0 = a0 ^ a1
  2963: 7b 17 c0 01              u64 [sp + 0x1c0] = a0
  2967: 82 17 68                 a0 = u64 [sp + 0x68]
  2970: d3 a7 07                 a0 = a0 ^ a3
  2973: d3 b7 07                 a0 = a0 ^ a4
  2976: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
  2980: 82 17 70                 a0 = u64 [sp + 0x70]
  2983: 82 18 48 01              a1 = u64 [sp + 0x148]
  2987: d3 87 07                 a0 = a0 ^ a1
  2990: d3 27 07                 a0 = a0 ^ t0
  2993: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
  2997: 49 21 68 02              u64 [sp + 616] = 0
  3001: 82 1b 98 00              a4 = u64 [sp + 0x98]
  3005: 82 1c 78                 a5 = u64 [sp + 0x78]
  3008: c9 cb 07                 a0 = a4 - a5
  3011: 33 08 80 00              a1 = 0x80
  3015: e6 87 05                 s0 = minu(a0, a1)
  3018: 01                       fallthrough
      :                          @132
  3019: c8 c5 06                 s1 = s0 + a5
  3022: ac 56 a4 09              jump @197 if s1 <u s0
      :                          @133
  3026: ac 6b a1 09              jump @198 if a4 <u s1
      :                          @134
  3030: 95 17 e8 01              a0 = sp + 0x1e8
  3034: c8 37 07                 a0 = a0 + t1
  3037: 82 18 80 00              a1 = u64 [sp + 0x80]
  3041: c8 c8 08                 a1 = a1 + a5
  3044: 64 59                    a2 = s0
  3046: 50 10 68 7f 14           ra = 104, jump @405
      :                          @135 [@dyn 52]
  3051: 82 17 68 02              a0 = u64 [sp + 0x268]
  3055: c8 57 03                 t1 = a0 + s0
  3058: 7b 13 68 02              u64 [sp + 0x268] = t1
  3062: 64 6c                    a5 = s1
  3064: 82 1b 98 00              a4 = u64 [sp + 0x98]
  3068: ac b6 79 fa              jump @105 if s1 <u a4
      :                          @136
  3072: 7c 17 70 02              a0 = u8 [sp + 0x270]
  3076: 51 07 dc 08              jump @181 if a0 == 0
      :                          @137
  3080: 33 05                    s0 = 0
  3082: 33 06                    s1 = 0
  3084: 33 0c                    a5 = 0
  3086: 33 0b                    a4 = 0
  3088: 33 00                    ra = 0
  3090: 33 04                    t2 = 0
  3092: 33 03                    t1 = 0
  3094: 33 02                    t0 = 0
  3096: 33 0a                    a3 = 0
  3098: 33 09                    a2 = 0
  3100: 33 08                    a1 = 0
  3102: 49 21 c8 00              u64 [sp + 200] = 0
  3106: 49 21 d0 00              u64 [sp + 208] = 0
  3110: 49 21 d8 00              u64 [sp + 216] = 0
  3114: 49 21 e0 00              u64 [sp + 224] = 0
  3118: 49 21 e8 00              u64 [sp + 232] = 0
  3122: 49 21 f0 00              u64 [sp + 240] = 0
  3126: 49 21 f8 00              u64 [sp + 248] = 0
  3130: 49 21 00 01              u64 [sp + 256] = 0
  3134: 49 21 08 01              u64 [sp + 264] = 0
  3138: 49 21 10 01              u64 [sp + 272] = 0
  3142: 49 21 18 01              u64 [sp + 280] = 0
  3146: 49 21 20 01              u64 [sp + 288] = 0
  3150: 49 21 28 01              u64 [sp + 296] = 0
  3154: 49 21 30 01              u64 [sp + 304] = 0
  3158: 49 21 68 01              u64 [sp + 360] = 0
  3162: 49 21 38 01              u64 [sp + 312] = 0
  3166: 49 21 40 01              u64 [sp + 320] = 0
  3170: 49 21 48 01              u64 [sp + 328] = 0
  3174: 49 21 50 01              u64 [sp + 336] = 0
  3178: 49 21 58 01              u64 [sp + 344] = 0
  3182: 49 21 60 01              u64 [sp + 352] = 0
  3186: 28 e8 05                 jump @161
      :                          @138
  3189: 7b 1c 58                 u64 [sp + 0x58] = a5
  3192: 95 17 78 02              a0 = sp + 0x278
  3196: 33 09 80 00              a2 = 0x80
  3200: 33 08                    a1 = 0
  3202: 50 10 6a 95 14           ra = 106, jump @423
      :                          @139 [@dyn 53]
  3207: 3a 07 08 00 03           a0 = u64 [0x30008]
  3212: 7b 17 60                 u64 [sp + 0x60] = a0
  3215: 3a 07 10 00 03           a0 = u64 [0x30010]
  3220: 7b 17 68                 u64 [sp + 0x68] = a0
  3223: 3a 07 18 00 03           a0 = u64 [0x30018]
  3228: 7b 17 70                 u64 [sp + 0x70] = a0
  3231: 3a 07 30 00 03           a0 = u64 [0x30030]
  3236: 7b 17 60 01              u64 [sp + 0x160] = a0
  3240: 3a 07 38 00 03           a0 = u64 [0x30038]
  3245: 7b 17 40 01              u64 [sp + 0x140] = a0
  3249: 33 09                    a2 = 0
  3251: 82 17 88 00              a0 = u64 [sp + 0x88]
  3255: 7b 17 30 01              u64 [sp + 0x130] = a0
  3259: 7b 16 28 01              u64 [sp + 0x128] = s1
  3263: 01                       fallthrough
      :                          @140
  3264: 95 17 78 02              a0 = sp + 0x278
  3268: 95 18 e8 01              a1 = sp + 0x1e8
  3272: 50 10 6c 9d 13           ra = 108, jump @405
      :                          @141 [@dyn 54]
  3277: 95 17 f8 02              a0 = sp + 0x2f8
  3281: 95 18 78 02              a1 = sp + 0x278
  3285: 33 09 80 00              a2 = 0x80
  3289: 50 10 6e 8c 13           ra = 110, jump @405
      :                          @142 [@dyn 55]
  3294: 33 0b 3b 02 01           a4 = 0x1023b
  3299: 3a 00 18 00 03           ra = u64 [0x30018]
  3304: 3a 07 38 00 03           a0 = u64 [0x30038]
  3309: 7b 17 38 01              u64 [sp + 0x138] = a0
  3313: 3a 07 10 00 03           a0 = u64 [0x30010]
  3318: 7b 17 58 01              u64 [sp + 0x158] = a0
  3322: 3a 07 48 00 03           a0 = u64 [0x30048]
  3327: 7b 17 20 01              u64 [sp + 0x120] = a0
  3331: 3a 07 08 00 03           a0 = u64 [0x30008]
  3336: 7b 17 50 01              u64 [sp + 0x150] = a0
  3340: 3a 05 40 00 03           s0 = u64 [0x30040]
  3345: 33 06 0c                 s1 = 0xc
  3348: 33 0a 10                 a3 = 0x10
  3351: 82 17 58                 a0 = u64 [sp + 0x58]
  3354: 7b 17 48 01              u64 [sp + 0x148] = a0
  3358: 82 19 60                 a2 = u64 [sp + 0x60]
  3361: 64 9c                    a5 = a2
  3363: 82 14 68                 t2 = u64 [sp + 0x68]
  3366: 64 42                    t0 = t2
  3368: 82 18 70                 a1 = u64 [sp + 0x70]
  3371: 64 83                    t1 = a1
  3373: 7b 18 70                 u64 [sp + 0x70] = a1
  3376: 7b 14 68                 u64 [sp + 0x68] = t2
  3379: 7b 19 60                 u64 [sp + 0x60] = a2
  3382: 01                       fallthrough
      :                          @143
  3383: 7b 1c 18 01              u64 [sp + 0x118] = a5
  3387: 7c b4 f9                 t2 = u8 [a4 + 0xfffffffffffffff9]
  3390: 56 14 0f 2e 08           jump @191 if t2 >u 15
      :                          @144
  3395: 7c b7 fa                 a0 = u8 [a4 + 0xfffffffffffffffa]
  3398: 55 17 10 25 08           jump @190 if a0 >=u 16
      :                          @145
  3403: 64 59                    a2 = s0
  3405: 7c b5 fb                 s0 = u8 [a4 + 0xfffffffffffffffb]
  3408: 55 15 10 5e 07           jump @173 if s0 >=u 16
      :                          @146
  3413: 7b 12 10 01              u64 [sp + 0x110] = t0
  3417: 7c b2 fc                 t0 = u8 [a4 + 0xfffffffffffffffc]
  3420: 55 12 10 0c 08           jump @187 if t0 >=u 16
      :                          @147
  3425: 7b 13 08 01              u64 [sp + 0x108] = t1
  3429: 7c bc fd                 a5 = u8 [a4 + 0xfffffffffffffffd]
  3432: 55 1c 10 ff 07           jump @186 if a5 >=u 16
      :                          @148
  3437: 7b 19 f8 00              u64 [sp + 0xf8] = a2
  3441: 7b 10 00 01              u64 [sp + 0x100] = ra
  3445: 7c b0 fe                 ra = u8 [a4 + 0xfffffffffffffffe]
  3448: 55 10 10 f2 07           jump @189 if ra >=u 16
      :                          @149
  3453: 7b 15 f0 00              u64 [sp + 0xf0] = s0
  3457: 33 05 10                 s0 = 0x10
  3460: 7c ba ff                 a3 = u8 [a4 + 0xffffffffffffffff]
  3463: ae 5a e2 07              jump @188 if a3 >=u s0
      :                          @150
  3467: 7b 1b 68 01              u64 [sp + 0x168] = a4
  3471: 7c bb                    a4 = u8 [a4]
  3473: 55 1b 10 dd 07           jump @193 if a4 >=u 16
      :                          @151
  3478: 82 19 68 01              a2 = u64 [sp + 0x168]
  3482: 7c 98 01                 a1 = u8 [a2 + 0x1]
  3485: 55 18 10 d3 07           jump @195 if a1 >=u 16
      :                          @152
  3490: 7b 16 e8 00              u64 [sp + 0xe8] = s1
  3494: 82 16 68 01              s1 = u64 [sp + 0x168]
  3498: 7c 63 02                 t1 = u8 [s1 + 0x2]
  3501: 55 13 10 c0 07           jump @192 if t1 >=u 16
      :                          @153
  3506: 7b 12 d8 00              u64 [sp + 0xd8] = t0
  3510: 7b 1c e0 00              u64 [sp + 0xe0] = a5
  3514: 82 16 68 01              s1 = u64 [sp + 0x168]
  3518: 7c 62 03                 t0 = u8 [s1 + 0x3]
  3521: 55 12 10 a7 07           jump @187 if t0 >=u 16
      :                          @154
  3526: 82 16 68 01              s1 = u64 [sp + 0x168]
  3530: 7c 6c 04                 a5 = u8 [s1 + 0x4]
  3533: 55 1c 10 9a 07           jump @186 if a5 >=u 16
      :                          @155
  3538: 7b 1a d0 00              u64 [sp + 0xd0] = a3
  3542: 82 16 68 01              s1 = u64 [sp + 0x168]
  3546: 7c 6a 05                 a3 = u8 [s1 + 0x5]
  3549: 55 1a 10 8c 07           jump @188 if a3 >=u 16
      :                          @156
  3554: 82 16 68 01              s1 = u64 [sp + 0x168]
  3558: 7c 69 06                 a2 = u8 [s1 + 0x6]
  3561: 55 19 10 88 07           jump @196 if a2 >=u 16
      :                          @157
  3566: 82 16 68 01              s1 = u64 [sp + 0x168]
  3570: 7c 66 07                 s1 = u8 [s1 + 0x7]
  3573: 55 16 10 7a 07           jump @194 if s1 >=u 16
      :                          @158
  3578: 7b 16 c8 00              u64 [sp + 0xc8] = s1
  3582: 82 16 68 01              s1 = u64 [sp + 0x168]
  3586: 7c 66 08                 s1 = u8 [s1 + 0x8]
  3589: 55 16 10 6a 07           jump @194 if s1 >=u 16
      :                          @159
  3594: 7b 1b 78                 u64 [sp + 0x78] = a4
  3597: 64 0b                    a4 = ra
  3599: 97 40 03                 ra = t2 << 0x3
  3602: 7b 18 a8 00              u64 [sp + 0xa8] = a1
  3606: 95 18 f8 02              a1 = sp + 0x2f8
  3610: c8 80 00                 ra = ra + a1
  3613: 82 05                    s0 = u64 [ra]
  3615: 97 77 03                 a0 = a0 << 0x3
  3618: c8 87 07                 a0 = a0 + a1
  3621: 82 70                    ra = u64 [a0]
  3623: 7b 16 c0 00              u64 [sp + 0xc0] = s1
  3627: 82 16 48 01              s1 = u64 [sp + 0x148]
  3631: 82 17 90 00              a0 = u64 [sp + 0x90]
  3635: c8 76 06                 s1 = s1 + a0
  3638: c8 65 05                 s0 = s0 + s1
  3641: 82 16 28 01              s1 = u64 [sp + 0x128]
  3645: d3 56 06                 s1 = s1 ^ s0
  3648: 7b 16 80 00              u64 [sp + 0x80] = s1
  3652: c8 05 07                 a0 = s0 + ra
  3655: 7b 17 98 00              u64 [sp + 0x98] = a0
  3659: 7b 19 48 01              u64 [sp + 0x148] = a2
  3663: 7b 1a 28 01              u64 [sp + 0x128] = a3
  3667: 7b 1c b8 00              u64 [sp + 0xb8] = a5
  3671: 7b 12 b0 00              u64 [sp + 0xb0] = t0
  3675: 7b 13 a0 00              u64 [sp + 0xa0] = t1
  3679: 82 13 f0 00              t1 = u64 [sp + 0xf0]
  3683: 97 33 03                 t1 = t1 << 0x3
  3686: c8 83 03                 t1 = t1 + a1
  3689: 82 37                    a0 = u64 [t1]
  3691: 82 14 d8 00              t2 = u64 [sp + 0xd8]
  3695: 97 44 03                 t2 = t2 << 0x3
  3698: c8 84 04                 t2 = t2 + a1
  3701: 82 45                    s0 = u64 [t2]
  3703: 82 10 88 00              ra = u64 [sp + 0x88]
  3707: 82 16 18 01              s1 = u64 [sp + 0x118]
  3711: c8 06 06                 s1 = s1 + ra
  3714: c8 67 07                 a0 = a0 + s1
  3717: 82 16 30 01              s1 = u64 [sp + 0x130]
  3721: d3 76 06                 s1 = s1 ^ a0
  3724: 7b 16 18 01              u64 [sp + 0x118] = s1
  3728: c8 57 04                 t2 = a0 + s0
  3731: 82 1c e0 00              a5 = u64 [sp + 0xe0]
  3735: 97 cc 03                 a5 = a5 << 0x3
  3738: c8 8c 0c                 a5 = a5 + a1
  3741: 82 c7                    a0 = u64 [a5]
  3743: 97 b2 03                 t0 = a4 << 0x3
  3746: c8 82 02                 t0 = t0 + a1
  3749: 82 2c                    a5 = u64 [t0]
  3751: 82 16 10 01              s1 = u64 [sp + 0x110]
  3755: 82 18 60 01              a1 = u64 [sp + 0x160]
  3759: c8 86 06                 s1 = s1 + a1
  3762: c8 67 07                 a0 = a0 + s1
  3765: 82 16 20 01              s1 = u64 [sp + 0x120]
  3769: d3 76 06                 s1 = s1 ^ a0
  3772: 7b 16 30 01              u64 [sp + 0x130] = s1
  3776: c8 c7 07                 a0 = a0 + a5
  3779: 7b 17 20 01              u64 [sp + 0x120] = a0
  3783: 82 1a d0 00              a3 = u64 [sp + 0xd0]
  3787: 97 aa 03                 a3 = a3 << 0x3
  3790: 95 18 f8 02              a1 = sp + 0x2f8
  3794: c8 8a 0a                 a3 = a3 + a1
  3797: 82 a7                    a0 = u64 [a3]
  3799: 82 1b 78                 a4 = u64 [sp + 0x78]
  3802: 97 bb 03                 a4 = a4 << 0x3
  3805: c8 8b 0b                 a4 = a4 + a1
  3808: 82 ba                    a3 = u64 [a4]
  3810: 82 16 40 01              s1 = u64 [sp + 0x140]
  3814: 82 1b 08 01              a4 = u64 [sp + 0x108]
  3818: c8 6b 0b                 a4 = a4 + s1
  3821: c8 b7 07                 a0 = a0 + a4
  3824: 82 1b 38 01              a4 = u64 [sp + 0x138]
  3828: d3 7b 0b                 a4 = a4 ^ a0
  3831: c8 a7 02                 t0 = a0 + a3
  3834: 82 17 80 00              a0 = u64 [sp + 0x80]
  3838: 9e 77 20                 a0 = a0 >>r 0x20
  3841: 82 1a f8 00              a3 = u64 [sp + 0xf8]
  3845: c8 7a 0a                 a3 = a3 + a0
  3848: 82 15 90 00              s0 = u64 [sp + 0x90]
  3852: d3 a5 05                 s0 = s0 ^ a3
  3855: 82 19 a8 00              a2 = u64 [sp + 0xa8]
  3859: 97 99 03                 a2 = a2 << 0x3
  3862: c8 89 09                 a2 = a2 + a1
  3865: 82 99                    a2 = u64 [a2]
  3867: 9e 58 18                 a1 = s0 >>r 0x18
  3870: 7b 18 38 01              u64 [sp + 0x138] = a1
  3874: 82 15 98 00              s0 = u64 [sp + 0x98]
  3878: c8 85 05                 s0 = s0 + a1
  3881: d3 75 03                 t1 = s0 ^ a0
  3884: c8 59 09                 a2 = a2 + s0
  3887: 82 17 18 01              a0 = u64 [sp + 0x118]
  3891: 9e 75 20                 s0 = a0 >>r 0x20
  3894: 82 18 50 01              a1 = u64 [sp + 0x150]
  3898: c8 58 08                 a1 = a1 + s0
  3901: d3 08 0c                 a5 = a1 ^ ra
  3904: 9e cc 18                 a5 = a5 >>r 0x18
  3907: c8 c4 04                 t2 = t2 + a5
  3910: d3 54 05                 s0 = t2 ^ s0
  3913: 9e 57 10                 a0 = s0 >>r 0x10
  3916: 7b 17 18 01              u64 [sp + 0x118] = a0
  3920: c8 78 08                 a1 = a1 + a0
  3923: 7b 18 50 01              u64 [sp + 0x150] = a1
  3927: d3 c8 08                 a1 = a1 ^ a5
  3930: 9e 87 3f                 a0 = a1 >>r 0x3f
  3933: 7b 17 08 01              u64 [sp + 0x108] = a0
  3937: 9e bb 20                 a4 = a4 >>r 0x20
  3940: 82 10 00 01              ra = u64 [sp + 0x100]
  3944: c8 b0 00                 ra = ra + a4
  3947: d3 60 0c                 a5 = ra ^ s1
  3950: 9e c5 18                 s0 = a5 >>r 0x18
  3953: c8 52 02                 t0 = t0 + s0
  3956: 7b 12 40 01              u64 [sp + 0x140] = t0
  3960: d3 b2 0b                 a4 = t0 ^ a4
  3963: 9e bb 10                 a4 = a4 >>r 0x10
  3966: c8 0b 08                 a1 = a4 + ra
  3969: 82 1c a0 00              a5 = u64 [sp + 0xa0]
  3973: 97 cc 03                 a5 = a5 << 0x3
  3976: 95 10 f8 02              ra = sp + 0x2f8
  3980: c8 0c 0c                 a5 = a5 + ra
  3983: 82 cc                    a5 = u64 [a5]
  3985: 82 12 b0 00              t0 = u64 [sp + 0xb0]
  3989: 97 22 03                 t0 = t0 << 0x3
  3992: c8 02 02                 t0 = t0 + ra
  3995: 82 22                    t0 = u64 [t0]
  3997: c8 79 09                 a2 = a2 + a0
  4000: d3 9b 0b                 a4 = a4 ^ a2
  4003: 7b 1b 00 01              u64 [sp + 0x100] = a4
  4007: c8 c9 09                 a2 = a2 + a5
  4010: 7b 19 10 01              u64 [sp + 0x110] = a2
  4014: c8 24 04                 t2 = t2 + t0
  4017: 9e 36 10                 s1 = t1 >>r 0x10
  4020: c8 6a 0a                 a3 = a3 + s1
  4023: 7b 1a f8 00              u64 [sp + 0xf8] = a3
  4027: 82 17 30 01              a0 = u64 [sp + 0x130]
  4031: 9e 79 20                 a2 = a0 >>r 0x20
  4034: 82 12 58 01              t0 = u64 [sp + 0x158]
  4038: c8 92 02                 t0 = t0 + a2
  4041: 82 17 60 01              a0 = u64 [sp + 0x160]
  4045: d3 72 0c                 a5 = t0 ^ a0
  4048: 9e cb 18                 a4 = a5 >>r 0x18
  4051: 82 17 20 01              a0 = u64 [sp + 0x120]
  4055: c8 b7 07                 a0 = a0 + a4
  4058: d3 79 09                 a2 = a2 ^ a0
  4061: 9e 9c 10                 a5 = a2 >>r 0x10
  4064: c8 2c 09                 a2 = a5 + t0
  4067: d3 9b 0b                 a4 = a4 ^ a2
  4070: 9e b2 3f                 t0 = a4 >>r 0x3f
  4073: 82 1a b8 00              a3 = u64 [sp + 0xb8]
  4077: 97 aa 03                 a3 = a3 << 0x3
  4080: c8 0a 0a                 a3 = a3 + ra
  4083: 82 aa                    a3 = u64 [a3]
  4085: 82 1b 28 01              a4 = u64 [sp + 0x128]
  4089: 97 bb 03                 a4 = a4 << 0x3
  4092: c8 0b 0b                 a4 = a4 + ra
  4095: 82 bb                    a4 = u64 [a4]
  4097: c8 24 04                 t2 = t2 + t0
  4100: d3 64 06                 s1 = t2 ^ s1
  4103: c8 4a 0a                 a3 = a3 + t2
  4106: 7b 1a 60 01              u64 [sp + 0x160] = a3
  4110: c8 7b 0b                 a4 = a4 + a0
  4113: 64 84                    t2 = a1
  4115: d3 58 07                 a0 = a1 ^ s0
  4118: 9e 77 3f                 a0 = a0 >>r 0x3f
  4121: 82 1a 48 01              a3 = u64 [sp + 0x148]
  4125: 97 aa 03                 a3 = a3 << 0x3
  4128: c8 0a 0a                 a3 = a3 + ra
  4131: 82 aa                    a3 = u64 [a3]
  4133: 82 15 c8 00              s0 = u64 [sp + 0xc8]
  4137: 97 55 03                 s0 = s0 << 0x3
  4140: c8 05 05                 s0 = s0 + ra
  4143: 82 55                    s0 = u64 [s0]
  4145: c8 7b 0b                 a4 = a4 + a0
  4148: 82 18 18 01              a1 = u64 [sp + 0x118]
  4152: d3 b8 08                 a1 = a1 ^ a4
  4155: 7b 18 30 01              u64 [sp + 0x130] = a1
  4159: c8 ba 0a                 a3 = a3 + a4
  4162: 7b 1a 20 01              u64 [sp + 0x120] = a3
  4166: 82 13 40 01              t1 = u64 [sp + 0x140]
  4170: c8 53 03                 t1 = t1 + s0
  4173: 82 1a 38 01              a3 = u64 [sp + 0x138]
  4177: 82 18 f8 00              a1 = u64 [sp + 0xf8]
  4181: d3 a8 0b                 a4 = a1 ^ a3
  4184: 82 15 c0 00              s0 = u64 [sp + 0xc0]
  4188: 97 55 03                 s0 = s0 << 0x3
  4191: c8 05 05                 s0 = s0 + ra
  4194: 82 55                    s0 = u64 [s0]
  4196: 9e bb 3f                 a4 = a4 >>r 0x3f
  4199: c8 b3 03                 t1 = t1 + a4
  4202: d3 c3 0a                 a3 = t1 ^ a5
  4205: c8 53 03                 t1 = t1 + s0
  4208: 82 1c 00 01              a5 = u64 [sp + 0x100]
  4212: 9e c5 20                 s0 = a5 >>r 0x20
  4215: c8 59 09                 a2 = a2 + s0
  4218: 82 1c 08 01              a5 = u64 [sp + 0x108]
  4222: d3 c9 00                 ra = a2 ^ a5
  4225: 9e 00 18                 ra = ra >>r 0x18
  4228: 82 1c 10 01              a5 = u64 [sp + 0x110]
  4232: c8 0c 0c                 a5 = a5 + ra
  4235: 7b 1c 48 01              u64 [sp + 0x148] = a5
  4239: d3 c5 05                 s0 = s0 ^ a5
  4242: 9e 55 10                 s0 = s0 >>r 0x10
  4245: 7b 15 38 01              u64 [sp + 0x138] = s0
  4249: c8 59 09                 a2 = a2 + s0
  4252: 7b 19 58 01              u64 [sp + 0x158] = a2
  4256: d3 09 09                 a2 = a2 ^ ra
  4259: 9e 99 3f                 a2 = a2 >>r 0x3f
  4262: 7b 19 88 00              u64 [sp + 0x88] = a2
  4266: 9e 69 20                 a2 = s1 >>r 0x20
  4269: c8 49 05                 s0 = a2 + t2
  4272: d3 25 06                 s1 = s0 ^ t0
  4275: 9e 66 18                 s1 = s1 >>r 0x18
  4278: 82 1c 60 01              a5 = u64 [sp + 0x160]
  4282: c8 6c 0c                 a5 = a5 + s1
  4285: d3 c9 09                 a2 = a2 ^ a5
  4288: 9e 92 10                 t0 = a2 >>r 0x10
  4291: 7b 12 28 01              u64 [sp + 0x128] = t0
  4295: c8 52 00                 ra = t0 + s0
  4298: 82 14 68                 t2 = u64 [sp + 0x68]
  4301: d3 60 09                 a2 = ra ^ s1
  4304: 9e 99 3f                 a2 = a2 >>r 0x3f
  4307: 7b 19 60 01              u64 [sp + 0x160] = a2
  4311: 82 19 30 01              a2 = u64 [sp + 0x130]
  4315: 9e 99 20                 a2 = a2 >>r 0x20
  4318: c8 98 08                 a1 = a1 + a2
  4321: d3 87 07                 a0 = a0 ^ a1
  4324: 9e 77 18                 a0 = a0 >>r 0x18
  4327: 82 12 20 01              t0 = u64 [sp + 0x120]
  4331: c8 72 02                 t0 = t0 + a0
  4334: d3 92 09                 a2 = t0 ^ a2
  4337: 9e 99 10                 a2 = a2 >>r 0x10
  4340: 7b 19 30 01              u64 [sp + 0x130] = a2
  4344: c8 89 05                 s0 = a2 + a1
  4347: d3 57 07                 a0 = a0 ^ s0
  4350: 9e 77 3f                 a0 = a0 >>r 0x3f
  4353: 7b 17 40 01              u64 [sp + 0x140] = a0
  4357: 9e a7 20                 a0 = a3 >>r 0x20
  4360: 82 18 50 01              a1 = u64 [sp + 0x150]
  4364: c8 78 08                 a1 = a1 + a0
  4367: d3 8b 0b                 a4 = a4 ^ a1
  4370: 9e b9 18                 a2 = a4 >>r 0x18
  4373: c8 93 03                 t1 = t1 + a2
  4376: d3 73 07                 a0 = t1 ^ a0
  4379: 9e 77 10                 a0 = a0 >>r 0x10
  4382: 7b 17 20 01              u64 [sp + 0x120] = a0
  4386: c8 87 07                 a0 = a0 + a1
  4389: 82 18 70                 a1 = u64 [sp + 0x70]
  4392: 7b 17 50 01              u64 [sp + 0x150] = a0
  4396: d3 97 07                 a0 = a0 ^ a2
  4399: 9e 77 3f                 a0 = a0 >>r 0x3f
  4402: 7b 17 90 00              u64 [sp + 0x90] = a0
  4406: 82 16 e8 00              s1 = u64 [sp + 0xe8]
  4410: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  4413: 82 1b 68 01              a4 = u64 [sp + 0x168]
  4417: 95 bb 10                 a4 = a4 + 0x10
  4420: 82 19 60                 a2 = u64 [sp + 0x60]
  4423: 33 0a 10                 a3 = 0x10
  4426: 52 06 ed fb              jump @143 if s1 != 0
      :                          @160
  4430: 82 17 58                 a0 = u64 [sp + 0x58]
  4433: 82 1a 48 01              a3 = u64 [sp + 0x148]
  4437: d3 a7 07                 a0 = a0 ^ a3
  4440: d3 57 07                 a0 = a0 ^ s0
  4443: 7b 17 98 01              u64 [sp + 0x198] = a0
  4447: d3 9c 07                 a0 = a5 ^ a2
  4450: 82 19 50 01              a2 = u64 [sp + 0x150]
  4454: d3 97 07                 a0 = a0 ^ a2
  4457: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  4461: 82 17 58 01              a0 = u64 [sp + 0x158]
  4465: d3 47 07                 a0 = a0 ^ t2
  4468: d3 27 07                 a0 = a0 ^ t0
  4471: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  4475: d3 80 07                 a0 = ra ^ a1
  4478: d3 37 07                 a0 = a0 ^ t1
  4481: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  4485: 7c 17 b7 01              a0 = u8 [sp + 0x1b7]
  4489: 7b 17 60 01              u64 [sp + 0x160] = a0
  4493: 7c 17 b6 01              a0 = u8 [sp + 0x1b6]
  4497: 7b 17 58 01              u64 [sp + 0x158] = a0
  4501: 7c 17 b5 01              a0 = u8 [sp + 0x1b5]
  4505: 7b 17 50 01              u64 [sp + 0x150] = a0
  4509: 7c 17 b4 01              a0 = u8 [sp + 0x1b4]
  4513: 7b 17 48 01              u64 [sp + 0x148] = a0
  4517: 7c 17 b3 01              a0 = u8 [sp + 0x1b3]
  4521: 7b 17 40 01              u64 [sp + 0x140] = a0
  4525: 7c 17 b2 01              a0 = u8 [sp + 0x1b2]
  4529: 7b 17 38 01              u64 [sp + 0x138] = a0
  4533: 7c 17 b1 01              a0 = u8 [sp + 0x1b1]
  4537: 7b 17 68 01              u64 [sp + 0x168] = a0
  4541: 7c 17 b0 01              a0 = u8 [sp + 0x1b0]
  4545: 7b 17 30 01              u64 [sp + 0x130] = a0
  4549: 7c 17 af 01              a0 = u8 [sp + 0x1af]
  4553: 7b 17 28 01              u64 [sp + 0x128] = a0
  4557: 7c 17 ae 01              a0 = u8 [sp + 0x1ae]
  4561: 7b 17 20 01              u64 [sp + 0x120] = a0
  4565: 7c 17 ad 01              a0 = u8 [sp + 0x1ad]
  4569: 7b 17 18 01              u64 [sp + 0x118] = a0
  4573: 7c 17 ac 01              a0 = u8 [sp + 0x1ac]
  4577: 7b 17 10 01              u64 [sp + 0x110] = a0
  4581: 7c 17 ab 01              a0 = u8 [sp + 0x1ab]
  4585: 7b 17 08 01              u64 [sp + 0x108] = a0
  4589: 7c 17 aa 01              a0 = u8 [sp + 0x1aa]
  4593: 7b 17 00 01              u64 [sp + 0x100] = a0
  4597: 7c 17 a9 01              a0 = u8 [sp + 0x1a9]
  4601: 7b 17 f8 00              u64 [sp + 0xf8] = a0
  4605: 7c 17 a8 01              a0 = u8 [sp + 0x1a8]
  4609: 7b 17 f0 00              u64 [sp + 0xf0] = a0
  4613: 7c 17 a7 01              a0 = u8 [sp + 0x1a7]
  4617: 7b 17 e8 00              u64 [sp + 0xe8] = a0
  4621: 7c 17 a6 01              a0 = u8 [sp + 0x1a6]
  4625: 7b 17 e0 00              u64 [sp + 0xe0] = a0
  4629: 7c 17 a5 01              a0 = u8 [sp + 0x1a5]
  4633: 7b 17 d8 00              u64 [sp + 0xd8] = a0
  4637: 7c 17 a4 01              a0 = u8 [sp + 0x1a4]
  4641: 7b 17 d0 00              u64 [sp + 0xd0] = a0
  4645: 7c 17 a3 01              a0 = u8 [sp + 0x1a3]
  4649: 7b 17 c8 00              u64 [sp + 0xc8] = a0
  4653: 7c 18 a2 01              a1 = u8 [sp + 0x1a2]
  4657: 7c 19 a1 01              a2 = u8 [sp + 0x1a1]
  4661: 7c 1a a0 01              a3 = u8 [sp + 0x1a0]
  4665: 7c 12 9f 01              t0 = u8 [sp + 0x19f]
  4669: 7c 13 9e 01              t1 = u8 [sp + 0x19e]
  4673: 7c 14 9d 01              t2 = u8 [sp + 0x19d]
  4677: 7c 10 9c 01              ra = u8 [sp + 0x19c]
  4681: 7c 1b 9b 01              a4 = u8 [sp + 0x19b]
  4685: 7c 1c 9a 01              a5 = u8 [sp + 0x19a]
  4689: 7c 16 99 01              s1 = u8 [sp + 0x199]
  4693: 7c 15 98 01              s0 = u8 [sp + 0x198]
  4697: 01                       fallthrough
      :                          @161
  4698: 3b 05 80 10 03           u8 [0x31080] = s0
  4703: 3b 06 81 10 03           u8 [0x31081] = s1
  4708: 3b 0c 82 10 03           u8 [0x31082] = a5
  4713: 3b 0b 83 10 03           u8 [0x31083] = a4
  4718: 3b 00 84 10 03           u8 [0x31084] = ra
  4723: 3b 04 85 10 03           u8 [0x31085] = t2
  4728: 3b 03 86 10 03           u8 [0x31086] = t1
  4733: 3b 02 87 10 03           u8 [0x31087] = t0
  4738: 3b 0a 88 10 03           u8 [0x31088] = a3
  4743: 3b 09 89 10 03           u8 [0x31089] = a2
  4748: 3b 08 8a 10 03           u8 [0x3108a] = a1
  4753: 82 18 c8 00              a1 = u64 [sp + 0xc8]
  4757: 3b 08 8b 10 03           u8 [0x3108b] = a1
  4762: 82 18 d0 00              a1 = u64 [sp + 0xd0]
  4766: 3b 08 8c 10 03           u8 [0x3108c] = a1
  4771: 82 18 d8 00              a1 = u64 [sp + 0xd8]
  4775: 3b 08 8d 10 03           u8 [0x3108d] = a1
  4780: 82 18 e0 00              a1 = u64 [sp + 0xe0]
  4784: 3b 08 8e 10 03           u8 [0x3108e] = a1
  4789: 82 18 e8 00              a1 = u64 [sp + 0xe8]
  4793: 3b 08 8f 10 03           u8 [0x3108f] = a1
  4798: 82 18 f0 00              a1 = u64 [sp + 0xf0]
  4802: 3b 08 90 10 03           u8 [0x31090] = a1
  4807: 82 18 f8 00              a1 = u64 [sp + 0xf8]
  4811: 3b 08 91 10 03           u8 [0x31091] = a1
  4816: 82 18 00 01              a1 = u64 [sp + 0x100]
  4820: 3b 08 92 10 03           u8 [0x31092] = a1
  4825: 82 18 08 01              a1 = u64 [sp + 0x108]
  4829: 3b 08 93 10 03           u8 [0x31093] = a1
  4834: 82 18 10 01              a1 = u64 [sp + 0x110]
  4838: 3b 08 94 10 03           u8 [0x31094] = a1
  4843: 82 18 18 01              a1 = u64 [sp + 0x118]
  4847: 3b 08 95 10 03           u8 [0x31095] = a1
  4852: 82 18 20 01              a1 = u64 [sp + 0x120]
  4856: 3b 08 96 10 03           u8 [0x31096] = a1
  4861: 82 18 28 01              a1 = u64 [sp + 0x128]
  4865: 3b 08 97 10 03           u8 [0x31097] = a1
  4870: 82 18 30 01              a1 = u64 [sp + 0x130]
  4874: 3b 08 98 10 03           u8 [0x31098] = a1
  4879: 82 18 68 01              a1 = u64 [sp + 0x168]
  4883: 3b 08 99 10 03           u8 [0x31099] = a1
  4888: 49 21 68 01 ff ff fe     u64 [sp + 360] = 0xfffffffffffeffff
  4895: 82 18 38 01              a1 = u64 [sp + 0x138]
  4899: 3b 08 9a 10 03           u8 [0x3109a] = a1
  4904: 82 18 40 01              a1 = u64 [sp + 0x140]
  4908: 3b 08 9b 10 03           u8 [0x3109b] = a1
  4913: 82 18 48 01              a1 = u64 [sp + 0x148]
  4917: 3b 08 9c 10 03           u8 [0x3109c] = a1
  4922: 82 18 50 01              a1 = u64 [sp + 0x150]
  4926: 3b 08 9d 10 03           u8 [0x3109d] = a1
  4931: 81 18 84 01              a1 = i32 [sp + 0x184]
  4935: 82 19 58 01              a2 = u64 [sp + 0x158]
  4939: 3b 09 9e 10 03           u8 [0x3109e] = a2
  4944: 82 19 60 01              a2 = u64 [sp + 0x160]
  4948: 3b 09 9f 10 03           u8 [0x3109f] = a2
  4953: 33 07 80 10 03           a0 = 0x31080
  4958: 7b 17 60 01              u64 [sp + 0x160] = a0
  4962: 3d 08 a0 10 03           u32 [0x310a0] = a1
  4967: 95 17 70 01              a0 = sp + 0x170
  4971: 7b 17 88 01              u64 [sp + 0x188] = a0
  4975: 33 07 06                 a0 = 0x6
  4978: 7b 17 90 01              u64 [sp + 0x190] = a0
  4982: 49 21 98 01 02           u64 [sp + 408] = 0x2
  4987: 49 21 a8 01 02           u64 [sp + 424] = 0x2
  4992: 49 21 b8 01              u64 [sp + 440] = 0
  4996: 14 07 20 00 00 00 10 00 00 00 a0 = 0x1000000020
  5006: 7b 17 58 01              u64 [sp + 0x158] = a0
  5010: 7b 17 c0 01              u64 [sp + 0x1c0] = a0
  5014: 46 21 c8 01 03           u8 [sp + 456] = 0x3
  5019: 33 07 20 00 01           a0 = 0x10020
  5024: 7b 17 f8 02              u64 [sp + 0x2f8] = a0
  5028: 49 21 00 03 01           u64 [sp + 768] = 0x1
  5033: 95 17 98 01              a0 = sp + 0x198
  5037: 7b 17 18 03              u64 [sp + 0x318] = a0
  5041: 49 21 20 03 01           u64 [sp + 800] = 0x1
  5046: 95 17 88 01              a0 = sp + 0x188
  5050: 7b 17 08 03              u64 [sp + 0x308] = a0
  5054: 49 21 10 03 01           u64 [sp + 784] = 0x1
  5059: 95 17 78 02              a0 = sp + 0x278
  5063: 95 18 f8 02              a1 = sp + 0x2f8
  5067: 50 10 70 20 0a           ra = 112, jump @355
      :                          @162 [@dyn 56]
  5072: 82 15 80 02              s0 = u64 [sp + 0x280]
  5076: 82 1b 88 02              a4 = u64 [sp + 0x288]
  5080: 82 16 78 02              s1 = u64 [sp + 0x278]
  5084: 33 07 02                 a0 = 0x2
  5087: 33 08                    a1 = 0
  5089: 33 09                    a2 = 0
  5091: 64 5a                    a3 = s0
  5093: 33 00 72                 ra = 0x72
  5096: 0a 64                    ecalli 100 // 'log'
  5098: 01                       fallthrough
      :                          @163 [@dyn 57]
  5099: 82 17 68 01              a0 = u64 [sp + 0x168]
  5103: c8 67 07                 a0 = a0 + s1
  5106: 53 37 00 00 ff 27        jump @169 if a0 <u 4294901760
      :                          @164
  5112: 33 07 b0 1a 03           a0 = 0x31ab0
  5117: 95 77 00 00 01           a0 = a0 + 0x10000
  5122: 01                       fallthrough
      :                          @165
  5123: 82 78                    a1 = u64 [a0]
  5125: c9 87 09                 a2 = a0 - a1
  5128: ab 59 11                 jump @169 if a2 != s0
      :                          @166
  5131: c9 68 09                 a2 = a1 - s1
  5134: 01                       fallthrough
      :                          @167
  5135: 82 7a                    a3 = u64 [a0]
  5137: ab 8a f2                 jump @165 if a3 != a1
      :                          @168
  5140: 7b 79                    u64 [a0] = a2
  5142: 33 0b                    a4 = 0
  5144: 01                       fallthrough
      :                          @169
  5145: 82 17 60 01              a0 = u64 [sp + 0x160]
  5149: 7b 17 88 01              u64 [sp + 0x188] = a0
  5153: 33 07 0e                 a0 = 0xe
  5156: 7b 17 90 01              u64 [sp + 0x190] = a0
  5160: 49 21 98 01 02           u64 [sp + 408] = 0x2
  5165: 49 21 a8 01 02           u64 [sp + 424] = 0x2
  5170: 49 21 b8 01              u64 [sp + 440] = 0
  5174: 82 17 58 01              a0 = u64 [sp + 0x158]
  5178: 7b 17 c0 01              u64 [sp + 0x1c0] = a0
  5182: 46 21 c8 01 03           u8 [sp + 456] = 0x3
  5187: 33 07 50 00 01           a0 = 0x10050
  5192: 7b 17 f8 02              u64 [sp + 0x2f8] = a0
  5196: 49 21 00 03 01           u64 [sp + 768] = 0x1
  5201: 95 18 98 01              a1 = sp + 0x198
  5205: 7b 18 18 03              u64 [sp + 0x318] = a1
  5209: 49 21 20 03 01           u64 [sp + 800] = 0x1
  5214: 95 18 88 01              a1 = sp + 0x188
  5218: 7b 18 08 03              u64 [sp + 0x308] = a1
  5222: 49 21 10 03 01           u64 [sp + 784] = 0x1
  5227: 95 17 78 02              a0 = sp + 0x278
  5231: 95 18 f8 02              a1 = sp + 0x2f8
  5235: 50 10 74 78 09           ra = 116, jump @355
      :                          @170 [@dyn 58]
  5240: 82 1a 80 02              a3 = u64 [sp + 0x280]
  5244: 82 1b 88 02              a4 = u64 [sp + 0x288]
  5248: 82 15 78 02              s0 = u64 [sp + 0x278]
  5252: 33 07 02                 a0 = 0x2
  5255: 33 08                    a1 = 0
  5257: 33 09                    a2 = 0
  5259: 7b 1a 58 01              u64 [sp + 0x158] = a3
  5263: 33 00 76                 ra = 0x76
  5266: 0a 64                    ecalli 100 // 'log'
  5268: 01                       fallthrough
      :                          @171 [@dyn 59]
  5269: 82 17 68 01              a0 = u64 [sp + 0x168]
  5273: c8 57 07                 a0 = a0 + s0
  5276: 33 08 24                 a1 = 0x24
  5279: 33 09 00 00 ff           a2 = 0xffffffffffff0000
  5284: ae 97 0b                 jump @174 if a0 >=u a2
      :                          @172
  5287: 82 17 60 01              a0 = u64 [sp + 0x160]
  5291: 28 8f f0                 jump @87
      :                          @173
  5294: 00                       trap
      :                          @174
  5295: 33 07 b0 1a 03           a0 = 0x31ab0
  5300: 95 76 00 00 01           s1 = a0 + 0x10000
  5305: 33 07 80 10 03           a0 = 0x31080
  5310: 82 12 58 01              t0 = u64 [sp + 0x158]
  5314: 01                       fallthrough
      :                          @175
  5315: 82 69                    a2 = u64 [s1]
  5317: c9 96 0a                 a3 = s1 - a2
  5320: ab 2a 72 f0              jump @87 if a3 != t0
      :                          @176
  5324: c9 59 0a                 a3 = a2 - s0
  5327: 01                       fallthrough
      :                          @177
  5328: 82 6b                    a4 = u64 [s1]
  5330: ab 9b f1                 jump @175 if a4 != a2
      :                          @178
  5333: 7b 6a                    u64 [s1] = a3
  5335: 33 0c                    a5 = 0
  5337: 01                       fallthrough
      :                          @179
  5338: ab 9b e9                 jump @175 if a4 != a2
      :                          @180
  5341: 28 5d f0                 jump @87
      :                          @181
  5344: 82 15 d8 01              s0 = u64 [sp + 0x1d8]
  5348: c8 35 05                 s0 = s0 + t1
  5351: 64 36                    s1 = t1
  5353: ae 35 0f                 jump @183 if s0 >=u t1
      :                          @182
  5356: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
  5360: 95 77 01                 a0 = a0 + 0x1
  5363: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
  5367: 01                       fallthrough
      :                          @183
  5368: 95 17 78 02              a0 = sp + 0x278
  5372: 33 09 80 00              a2 = 0x80
  5376: 33 08                    a1 = 0
  5378: 50 10 78 15 0c           ra = 120, jump @423
      :                          @184 [@dyn 60]
  5383: 64 69                    a2 = s1
  5385: 56 26 80 00 6c           jump @200 if s1 >u 128
      :                          @185
  5390: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
  5394: 82 18 98 01              a1 = u64 [sp + 0x198]
  5398: 7b 18 58                 u64 [sp + 0x58] = a1
  5401: 82 18 a0 01              a1 = u64 [sp + 0x1a0]
  5405: 7b 18 60                 u64 [sp + 0x60] = a1
  5408: 82 18 a8 01              a1 = u64 [sp + 0x1a8]
  5412: 7b 18 68                 u64 [sp + 0x68] = a1
  5415: 82 18 b0 01              a1 = u64 [sp + 0x1b0]
  5419: 7b 18 70                 u64 [sp + 0x70] = a1
  5422: 82 18 b8 01              a1 = u64 [sp + 0x1b8]
  5426: 82 1b c0 01              a4 = u64 [sp + 0x1c0]
  5430: 82 1a c8 01              a3 = u64 [sp + 0x1c8]
  5434: 7b 1a 60 01              u64 [sp + 0x160] = a3
  5438: 82 1a d0 01              a3 = u64 [sp + 0x1d0]
  5442: 7b 1a 40 01              u64 [sp + 0x140] = a3
  5446: 82 1a 90 00              a3 = u64 [sp + 0x90]
  5450: d3 5a 0a                 a3 = a3 ^ s0
  5453: 7b 1a 28 01              u64 [sp + 0x128] = a3
  5457: 82 1a 88 00              a3 = u64 [sp + 0x88]
  5461: d3 a7 07                 a0 = a0 ^ a3
  5464: 7b 17 30 01              u64 [sp + 0x130] = a0
  5468: 7b 1b 88 00              u64 [sp + 0x88] = a4
  5472: 7b 18 90 00              u64 [sp + 0x90] = a1
  5476: 28 5c f7                 jump @140
      :                          @186
  5479: 00                       trap
      :                          @187
  5480: 00                       trap
      :                          @188
  5481: 00                       trap
      :                          @189
  5482: 00                       trap
      :                          @190
  5483: 00                       trap
      :                          @191
  5484: 00                       trap
      :                          @192
  5485: 00                       trap
      :                          @193
  5486: 00                       trap
      :                          @194
  5487: 00                       trap
      :                          @195
  5488: 00                       trap
      :                          @196
  5489: 00                       trap
      :                          @197
  5490: 00                       trap
      :                          @198
  5491: 00                       trap
      :                          @199
  5492: 00                       trap
      :                          @200
  5493: 00                       trap
      :                          @201
  5494: 00                       trap
      :                          @202 [export #1: 'accumulate']
  5495: 95 11 70 ff              sp = sp + 0xffffffffffffff70
  5499: 7b 10 88 00              u64 [sp + 0x88] = ra
  5503: 7b 15 80 00              u64 [sp + 0x80] = s0
  5507: 7b 16 78                 u64 [sp + 0x78] = s1
  5510: 64 7a                    a3 = a0
  5512: 33 07 00 00 01           a0 = 0x10000
  5517: 51 08 a8 00              jump @223 if a1 == 0
      :                          @203
  5521: 64 86                    s1 = a1
  5523: 7d a8                    a1 = i8 [a3]
  5525: 33 05 01                 s0 = 0x1
  5528: 59 08 37                 jump @210 if a1 >=s 0
      :                          @204
  5531: 84 89 ff 00              a2 = a1 & 0xff
  5535: 33 05 02                 s0 = 0x2
  5538: 53 29 c0 00 2d           jump @210 if a2 <u 192
      :                          @205
  5543: 33 05 03                 s0 = 0x3
  5546: 53 29 e0 00 25           jump @210 if a2 <u 224
      :                          @206
  5551: 33 05 04                 s0 = 0x4
  5554: 53 29 f0 00 1d           jump @210 if a2 <u 240
      :                          @207
  5559: 33 05 05                 s0 = 0x5
  5562: 53 29 f8 00 15           jump @210 if a2 <u 248
      :                          @208
  5567: 33 05 06                 s0 = 0x6
  5570: 53 29 fc 00 0d           jump @210 if a2 <u 252
      :                          @209
  5575: 88 98 fe 00              a1 = a2 <u 0xfe
  5579: 9a 85 08                 s0 = 0x8 - a1
  5582: 01                       fallthrough
      :                          @210
  5583: ae 56 07                 jump @212 if s1 >=u s0
      :                          @211
  5586: 33 08                    a1 = 0
  5588: 28 61                    jump @223
      :                          @212
  5590: 64 a7                    a0 = a3
  5592: 64 58                    a1 = s0
  5594: 7b 1a 08                 u64 [sp + 0x8] = a3
  5597: 50 10 7a e2 14           ra = 122, jump @609
      :                          @213 [@dyn 61]
  5602: aa 56 4b                 jump @222 if s1 == s0
      :                          @214
  5605: 82 17 08                 a0 = u64 [sp + 0x8]
  5608: c8 57 07                 a0 = a0 + s0
  5611: 7d 78                    a1 = i8 [a0]
  5613: c9 56 06                 s1 = s1 - s0
  5616: 33 05 01                 s0 = 0x1
  5619: 59 08 37                 jump @221 if a1 >=s 0
      :                          @215
  5622: 84 89 ff 00              a2 = a1 & 0xff
  5626: 33 05 02                 s0 = 0x2
  5629: 53 29 c0 00 2d           jump @221 if a2 <u 192
      :                          @216
  5634: 33 05 03                 s0 = 0x3
  5637: 53 29 e0 00 25           jump @221 if a2 <u 224
      :                          @217
  5642: 33 05 04                 s0 = 0x4
  5645: 53 29 f0 00 1d           jump @221 if a2 <u 240
      :                          @218
  5650: 33 05 05                 s0 = 0x5
  5653: 53 29 f8 00 15           jump @221 if a2 <u 248
      :                          @219
  5658: 33 05 06                 s0 = 0x6
  5661: 53 29 fc 00 0d           jump @221 if a2 <u 252
      :                          @220
  5666: 88 98 fe 00              a1 = a2 <u 0xfe
  5670: 9a 85 08                 s0 = 0x8 - a1
  5673: 01                       fallthrough
      :                          @221
  5674: ae 56 1c                 jump @224 if s1 >=u s0
      :                          @222
  5677: 33 08                    a1 = 0
  5679: 33 07 00 00 01           a0 = 0x10000
  5684: 01                       fallthrough
      :                          @223
  5685: 82 10 88 00              ra = u64 [sp + 0x88]
  5689: 82 15 80 00              s0 = u64 [sp + 0x80]
  5693: 82 16 78                 s1 = u64 [sp + 0x78]
  5696: 95 11 90 00              sp = sp + 0x90
  5700: 32 00                    ret
      :                          @224
  5702: 64 58                    a1 = s0
  5704: 7b 16 08                 u64 [sp + 0x8] = s1
  5707: 64 76                    s1 = a0
  5709: 50 10 7c 72 14           ra = 124, jump @609
      :                          @225 [@dyn 62]
  5714: c8 65 07                 a0 = s0 + s1
  5717: 82 16 08                 s1 = u64 [sp + 0x8]
  5720: ab 56 0b                 jump @227 if s1 != s0
      :                          @226
  5723: 33 08                    a1 = 0
  5725: 33 00 7e                 ra = 0x7e
  5728: 28 5f 14                 jump @609
      :                          @227
  5731: 7d 79                    a2 = i8 [a0]
  5733: c9 56 06                 s1 = s1 - s0
  5736: 33 08 01                 a1 = 0x1
  5739: 59 09 44                 jump @234 if a2 >=s 0
      :                          @228
  5742: 84 99 ff 00              a2 = a2 & 0xff
  5746: 33 0a c0 00              a3 = 0xc0
  5750: 33 08 02                 a1 = 0x2
  5753: ac a9 36                 jump @234 if a2 <u a3
      :                          @229
  5756: 33 0a e0 00              a3 = 0xe0
  5760: 33 08 03                 a1 = 0x3
  5763: ac a9 2c                 jump @234 if a2 <u a3
      :                          @230
  5766: 33 0a f0 00              a3 = 0xf0
  5770: 33 08 04                 a1 = 0x4
  5773: ac a9 22                 jump @234 if a2 <u a3
      :                          @231
  5776: 33 0a f8 00              a3 = 0xf8
  5780: 33 08 05                 a1 = 0x5
  5783: ac a9 18                 jump @234 if a2 <u a3
      :                          @232
  5786: 33 0a fc 00              a3 = 0xfc
  5790: 33 08 06                 a1 = 0x6
  5793: ac a9 0e                 jump @234 if a2 <u a3
      :                          @233
  5796: 88 98 fe 00              a1 = a2 <u 0xfe
  5800: 33 09 08                 a2 = 0x8
  5803: c9 89 08                 a1 = a2 - a1
  5806: 01                       fallthrough
      :                          @234
  5807: ac 86 7e ff              jump @222 if s1 <u a1
      :                          @235
  5811: 50 10 7e 0c 14           ra = 126, jump @609
      :                          @236 [@dyn 63]
  5816: 33 07 61 00 03           a0 = 0x30061
  5821: 33 09 08 10              a2 = 0x1008
  5825: 33 0a 0f                 a3 = 0xf
  5828: 33 08                    a1 = 0
  5830: 33 0b                    a4 = 0
  5832: 33 0c                    a5 = 0
  5834: 0a 01                    ecalli 1 // 'fetch'
  5836: 01                       fallthrough
      :                          @237
  5837: 7b 17 10                 u64 [sp + 0x10] = a0
  5840: 55 17 24 84 00           jump @248 if a0 >=u 36
      :                          @238
  5845: 95 17 10                 a0 = sp + 0x10
  5848: 7b 17 68                 u64 [sp + 0x68] = a0
  5851: 33 07 a6 00              a0 = 0xa6
  5855: 7b 17 70                 u64 [sp + 0x70] = a0
  5858: 33 07 d8 00 01           a0 = 0x100d8
  5863: 7b 17 38                 u64 [sp + 0x38] = a0
  5866: 49 11 40 02              u64 [sp + 64] = 0x2
  5870: 49 11 58                 u64 [sp + 88] = 0
  5873: 95 17 68                 a0 = sp + 0x68
  5876: 7b 17 48                 u64 [sp + 0x48] = a0
  5879: 49 11 50 01              u64 [sp + 80] = 0x1
  5883: 95 17 20                 a0 = sp + 0x20
  5886: 95 18 38                 a1 = sp + 0x38
  5889: 50 20 80 00 ea 06        ra = 128, jump @355
      :                          @239 [@dyn 64]
  5895: 82 15 28                 s0 = u64 [sp + 0x28]
  5898: 82 1b 30                 a4 = u64 [sp + 0x30]
  5901: 82 16 20                 s1 = u64 [sp + 0x20]
  5904: 33 07 02                 a0 = 0x2
  5907: 33 08                    a1 = 0
  5909: 33 09                    a2 = 0
  5911: 64 5a                    a3 = s0
  5913: 33 00 82 00              ra = 0x82
  5917: 0a 64                    ecalli 100 // 'log'
  5919: 01                       fallthrough
      :                          @240 [@dyn 65]
  5920: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
  5925: 53 38 00 00 ff 08 ff     jump @222 if a1 <u 4294901760
      :                          @241
  5932: 33 07 b0 1a 03           a0 = 0x31ab0
  5937: 95 77 00 00 01           a0 = a0 + 0x10000
  5942: 01                       fallthrough
      :                          @242
  5943: 82 78                    a1 = u64 [a0]
  5945: c9 87 09                 a2 = a0 - a1
  5948: ab 59 f1 fe              jump @222 if a2 != s0
      :                          @243
  5952: c9 68 09                 a2 = a1 - s1
  5955: 01                       fallthrough
      :                          @244
  5956: 82 7a                    a3 = u64 [a0]
  5958: ab 8a f1                 jump @242 if a3 != a1
      :                          @245
  5961: 7b 79                    u64 [a0] = a2
  5963: 33 0b                    a4 = 0
  5965: 01                       fallthrough
      :                          @246
  5966: ab 8a e9                 jump @242 if a3 != a1
      :                          @247
  5969: 28 dc fe                 jump @222
      :                          @248
  5972: 95 79 dc                 a2 = a0 + 0xffffffffffffffdc
  5975: 98 98 03                 a1 = a2 >> 0x3
  5978: 55 28 01 02 47 04        jump @297 if a1 >=u 513
      :                          @249
  5984: 33 0a 61 00 03           a3 = 0x30061
  5989: c8 a9 09                 a2 = a2 + a3
  5992: 7c 99                    a2 = u8 [a2]
  5994: 3b 09 80 10 03           u8 [0x31080] = a2
  5999: 95 7c dd                 a5 = a0 + 0xffffffffffffffdd
  6002: 98 c6 03                 s1 = a5 >> 0x3
  6005: 56 26 00 02 2c 04        jump @297 if s1 >u 512
      :                          @250
  6011: c8 ca 0a                 a3 = a3 + a5
  6014: 7c aa                    a3 = u8 [a3]
  6016: 95 7c de                 a5 = a0 + 0xffffffffffffffde
  6019: 98 c6 03                 s1 = a5 >> 0x3
  6022: 3b 0a 81 10 03           u8 [0x31081] = a3
  6027: 56 26 00 02 16 04        jump @297 if s1 >u 512
      :                          @251
  6033: 33 0a 61 00 03           a3 = 0x30061
  6038: c8 ac 0c                 a5 = a5 + a3
  6041: 7c c9                    a2 = u8 [a5]
  6043: 3b 09 82 10 03           u8 [0x31082] = a2
  6048: 95 7c df                 a5 = a0 + 0xffffffffffffffdf
  6051: 98 c6 03                 s1 = a5 >> 0x3
  6054: 56 26 00 02 fb 03        jump @297 if s1 >u 512
      :                          @252
  6060: c8 ca 0a                 a3 = a3 + a5
  6063: 7c aa                    a3 = u8 [a3]
  6065: 95 7c e0                 a5 = a0 + 0xffffffffffffffe0
  6068: 98 c6 03                 s1 = a5 >> 0x3
  6071: 3b 0a 83 10 03           u8 [0x31083] = a3
  6076: 56 26 00 02 e5 03        jump @297 if s1 >u 512
      :                          @253
  6082: 33 0a 61 00 03           a3 = 0x30061
  6087: c8 ac 0c                 a5 = a5 + a3
  6090: 7c c9                    a2 = u8 [a5]
  6092: 3b 09 84 10 03           u8 [0x31084] = a2
  6097: 95 7c e1                 a5 = a0 + 0xffffffffffffffe1
  6100: 98 c6 03                 s1 = a5 >> 0x3
  6103: 56 26 00 02 ca 03        jump @297 if s1 >u 512
      :                          @254
  6109: c8 ca 0a                 a3 = a3 + a5
  6112: 7c aa                    a3 = u8 [a3]
  6114: 95 7c e2                 a5 = a0 + 0xffffffffffffffe2
  6117: 98 c6 03                 s1 = a5 >> 0x3
  6120: 3b 0a 85 10 03           u8 [0x31085] = a3
  6125: 56 26 00 02 b4 03        jump @297 if s1 >u 512
      :                          @255
  6131: 33 0a 61 00 03           a3 = 0x30061
  6136: c8 ac 0c                 a5 = a5 + a3
  6139: 7c c9                    a2 = u8 [a5]
  6141: 3b 09 86 10 03           u8 [0x31086] = a2
  6146: 95 7c e3                 a5 = a0 + 0xffffffffffffffe3
  6149: 98 c6 03                 s1 = a5 >> 0x3
  6152: 56 26 00 02 99 03        jump @297 if s1 >u 512
      :                          @256
  6158: c8 ca 0a                 a3 = a3 + a5
  6161: 7c aa                    a3 = u8 [a3]
  6163: 95 7c e4                 a5 = a0 + 0xffffffffffffffe4
  6166: 98 c6 03                 s1 = a5 >> 0x3
  6169: 3b 0a 87 10 03           u8 [0x31087] = a3
  6174: 56 26 00 02 83 03        jump @297 if s1 >u 512
      :                          @257
  6180: 33 0a 61 00 03           a3 = 0x30061
  6185: c8 ac 0c                 a5 = a5 + a3
  6188: 7c c9                    a2 = u8 [a5]
  6190: 3b 09 88 10 03           u8 [0x31088] = a2
  6195: 95 7c e5                 a5 = a0 + 0xffffffffffffffe5
  6198: 98 c6 03                 s1 = a5 >> 0x3
  6201: 56 26 00 02 68 03        jump @297 if s1 >u 512
      :                          @258
  6207: c8 ca 0a                 a3 = a3 + a5
  6210: 7c aa                    a3 = u8 [a3]
  6212: 95 7c e6                 a5 = a0 + 0xffffffffffffffe6
  6215: 98 c6 03                 s1 = a5 >> 0x3
  6218: 3b 0a 89 10 03           u8 [0x31089] = a3
  6223: 56 26 00 02 52 03        jump @297 if s1 >u 512
      :                          @259
  6229: 33 0a 61 00 03           a3 = 0x30061
  6234: c8 ac 0c                 a5 = a5 + a3
  6237: 7c c9                    a2 = u8 [a5]
  6239: 3b 09 8a 10 03           u8 [0x3108a] = a2
  6244: 95 7c e7                 a5 = a0 + 0xffffffffffffffe7
  6247: 98 c6 03                 s1 = a5 >> 0x3
  6250: 56 26 00 02 37 03        jump @297 if s1 >u 512
      :                          @260
  6256: c8 ca 0a                 a3 = a3 + a5
  6259: 7c aa                    a3 = u8 [a3]
  6261: 95 7c e8                 a5 = a0 + 0xffffffffffffffe8
  6264: 98 c6 03                 s1 = a5 >> 0x3
  6267: 3b 0a 8b 10 03           u8 [0x3108b] = a3
  6272: 56 26 00 02 21 03        jump @297 if s1 >u 512
      :                          @261
  6278: 33 0a 61 00 03           a3 = 0x30061
  6283: c8 ac 0c                 a5 = a5 + a3
  6286: 7c c9                    a2 = u8 [a5]
  6288: 3b 09 8c 10 03           u8 [0x3108c] = a2
  6293: 95 7c e9                 a5 = a0 + 0xffffffffffffffe9
  6296: 98 c6 03                 s1 = a5 >> 0x3
  6299: 56 26 00 02 06 03        jump @297 if s1 >u 512
      :                          @262
  6305: c8 ca 0a                 a3 = a3 + a5
  6308: 7c aa                    a3 = u8 [a3]
  6310: 95 7c ea                 a5 = a0 + 0xffffffffffffffea
  6313: 98 c6 03                 s1 = a5 >> 0x3
  6316: 3b 0a 8d 10 03           u8 [0x3108d] = a3
  6321: 56 26 00 02 f0 02        jump @297 if s1 >u 512
      :                          @263
  6327: 33 0a 61 00 03           a3 = 0x30061
  6332: c8 ac 0c                 a5 = a5 + a3
  6335: 7c c9                    a2 = u8 [a5]
  6337: 3b 09 8e 10 03           u8 [0x3108e] = a2
  6342: 95 7c eb                 a5 = a0 + 0xffffffffffffffeb
  6345: 98 c6 03                 s1 = a5 >> 0x3
  6348: 56 26 00 02 d5 02        jump @297 if s1 >u 512
      :                          @264
  6354: c8 ca 0a                 a3 = a3 + a5
  6357: 7c aa                    a3 = u8 [a3]
  6359: 95 7c ec                 a5 = a0 + 0xffffffffffffffec
  6362: 98 c6 03                 s1 = a5 >> 0x3
  6365: 3b 0a 8f 10 03           u8 [0x3108f] = a3
  6370: 56 26 00 02 bf 02        jump @297 if s1 >u 512
      :                          @265
  6376: 33 0a 61 00 03           a3 = 0x30061
  6381: c8 ac 0c                 a5 = a5 + a3
  6384: 7c c9                    a2 = u8 [a5]
  6386: 3b 09 90 10 03           u8 [0x31090] = a2
  6391: 95 7c ed                 a5 = a0 + 0xffffffffffffffed
  6394: 98 c6 03                 s1 = a5 >> 0x3
  6397: 56 26 00 02 a4 02        jump @297 if s1 >u 512
      :                          @266
  6403: c8 ca 0a                 a3 = a3 + a5
  6406: 7c aa                    a3 = u8 [a3]
  6408: 95 7c ee                 a5 = a0 + 0xffffffffffffffee
  6411: 98 c6 03                 s1 = a5 >> 0x3
  6414: 3b 0a 91 10 03           u8 [0x31091] = a3
  6419: 56 26 00 02 8e 02        jump @297 if s1 >u 512
      :                          @267
  6425: 33 0a 61 00 03           a3 = 0x30061
  6430: c8 ac 0c                 a5 = a5 + a3
  6433: 7c c9                    a2 = u8 [a5]
  6435: 3b 09 92 10 03           u8 [0x31092] = a2
  6440: 95 7c ef                 a5 = a0 + 0xffffffffffffffef
  6443: 98 c6 03                 s1 = a5 >> 0x3
  6446: 56 26 00 02 73 02        jump @297 if s1 >u 512
      :                          @268
  6452: c8 ca 0a                 a3 = a3 + a5
  6455: 7c aa                    a3 = u8 [a3]
  6457: 95 7c f0                 a5 = a0 + 0xfffffffffffffff0
  6460: 98 c6 03                 s1 = a5 >> 0x3
  6463: 3b 0a 93 10 03           u8 [0x31093] = a3
  6468: 56 26 00 02 5d 02        jump @297 if s1 >u 512
      :                          @269
  6474: 33 0a 61 00 03           a3 = 0x30061
  6479: c8 ac 0c                 a5 = a5 + a3
  6482: 7c c9                    a2 = u8 [a5]
  6484: 3b 09 94 10 03           u8 [0x31094] = a2
  6489: 95 7c f1                 a5 = a0 + 0xfffffffffffffff1
  6492: 98 c6 03                 s1 = a5 >> 0x3
  6495: 56 26 00 02 42 02        jump @297 if s1 >u 512
      :                          @270
  6501: c8 ca 0a                 a3 = a3 + a5
  6504: 7c aa                    a3 = u8 [a3]
  6506: 95 7c f2                 a5 = a0 + 0xfffffffffffffff2
  6509: 98 c6 03                 s1 = a5 >> 0x3
  6512: 3b 0a 95 10 03           u8 [0x31095] = a3
  6517: 56 26 00 02 2c 02        jump @297 if s1 >u 512
      :                          @271
  6523: 33 0a 61 00 03           a3 = 0x30061
  6528: c8 ac 0c                 a5 = a5 + a3
  6531: 7c c9                    a2 = u8 [a5]
  6533: 3b 09 96 10 03           u8 [0x31096] = a2
  6538: 95 7c f3                 a5 = a0 + 0xfffffffffffffff3
  6541: 98 c6 03                 s1 = a5 >> 0x3
  6544: 56 26 00 02 11 02        jump @297 if s1 >u 512
      :                          @272
  6550: c8 ca 0a                 a3 = a3 + a5
  6553: 7c aa                    a3 = u8 [a3]
  6555: 95 7c f4                 a5 = a0 + 0xfffffffffffffff4
  6558: 98 c6 03                 s1 = a5 >> 0x3
  6561: 3b 0a 97 10 03           u8 [0x31097] = a3
  6566: 56 26 00 02 fb 01        jump @297 if s1 >u 512
      :                          @273
  6572: 33 0a 61 00 03           a3 = 0x30061
  6577: c8 ac 0c                 a5 = a5 + a3
  6580: 7c c9                    a2 = u8 [a5]
  6582: 3b 09 98 10 03           u8 [0x31098] = a2
  6587: 95 7c f5                 a5 = a0 + 0xfffffffffffffff5
  6590: 98 c6 03                 s1 = a5 >> 0x3
  6593: 56 26 00 02 e0 01        jump @297 if s1 >u 512
      :                          @274
  6599: c8 ca 0a                 a3 = a3 + a5
  6602: 7c aa                    a3 = u8 [a3]
  6604: 95 7c f6                 a5 = a0 + 0xfffffffffffffff6
  6607: 98 c6 03                 s1 = a5 >> 0x3
  6610: 3b 0a 99 10 03           u8 [0x31099] = a3
  6615: 56 26 00 02 ca 01        jump @297 if s1 >u 512
      :                          @275
  6621: 33 0a 61 00 03           a3 = 0x30061
  6626: c8 ac 0c                 a5 = a5 + a3
  6629: 7c c9                    a2 = u8 [a5]
  6631: 3b 09 9a 10 03           u8 [0x3109a] = a2
  6636: 95 7c f7                 a5 = a0 + 0xfffffffffffffff7
  6639: 98 c6 03                 s1 = a5 >> 0x3
  6642: 56 26 00 02 af 01        jump @297 if s1 >u 512
      :                          @276
  6648: c8 ca 0a                 a3 = a3 + a5
  6651: 7c aa                    a3 = u8 [a3]
  6653: 95 7c f8                 a5 = a0 + 0xfffffffffffffff8
  6656: 98 c6 03                 s1 = a5 >> 0x3
  6659: 3b 0a 9b 10 03           u8 [0x3109b] = a3
  6664: 56 26 00 02 99 01        jump @297 if s1 >u 512
      :                          @277
  6670: 33 0a 61 00 03           a3 = 0x30061
  6675: c8 ac 0c                 a5 = a5 + a3
  6678: 7c c9                    a2 = u8 [a5]
  6680: 3b 09 9c 10 03           u8 [0x3109c] = a2
  6685: 95 7c f9                 a5 = a0 + 0xfffffffffffffff9
  6688: 98 c6 03                 s1 = a5 >> 0x3
  6691: 56 26 00 02 7e 01        jump @297 if s1 >u 512
      :                          @278
  6697: c8 ca 0a                 a3 = a3 + a5
  6700: 7c aa                    a3 = u8 [a3]
  6702: 95 7c fa                 a5 = a0 + 0xfffffffffffffffa
  6705: 98 c6 03                 s1 = a5 >> 0x3
  6708: 3b 0a 9d 10 03           u8 [0x3109d] = a3
  6713: 56 26 00 02 68 01        jump @297 if s1 >u 512
      :                          @279
  6719: 33 0a 61 00 03           a3 = 0x30061
  6724: c8 ac 0c                 a5 = a5 + a3
  6727: 7c c9                    a2 = u8 [a5]
  6729: 3b 09 9e 10 03           u8 [0x3109e] = a2
  6734: 95 7c fb                 a5 = a0 + 0xfffffffffffffffb
  6737: 98 c6 03                 s1 = a5 >> 0x3
  6740: 56 26 00 02 4d 01        jump @297 if s1 >u 512
      :                          @280
  6746: c8 ca 0a                 a3 = a3 + a5
  6749: 7c aa                    a3 = u8 [a3]
  6751: 95 7c fc                 a5 = a0 + 0xfffffffffffffffc
  6754: 98 c6 03                 s1 = a5 >> 0x3
  6757: 3b 0a 9f 10 03           u8 [0x3109f] = a3
  6762: 56 26 00 02 37 01        jump @297 if s1 >u 512
      :                          @281
  6768: 33 0a 61 00 03           a3 = 0x30061
  6773: c8 ac 0c                 a5 = a5 + a3
  6776: 7c c9                    a2 = u8 [a5]
  6778: 3b 09 a0 10 03           u8 [0x310a0] = a2
  6783: 95 7c fd                 a5 = a0 + 0xfffffffffffffffd
  6786: 98 c6 03                 s1 = a5 >> 0x3
  6789: 56 26 00 02 1c 01        jump @297 if s1 >u 512
      :                          @282
  6795: c8 ca 0a                 a3 = a3 + a5
  6798: 7c ac                    a5 = u8 [a3]
  6800: 95 7a fe                 a3 = a0 + 0xfffffffffffffffe
  6803: 98 a6 03                 s1 = a3 >> 0x3
  6806: 3b 0c a1 10 03           u8 [0x310a1] = a5
  6811: 56 26 00 02 06 01        jump @297 if s1 >u 512
      :                          @283
  6817: 33 08 61 00 03           a1 = 0x30061
  6822: c8 8a 0a                 a3 = a3 + a1
  6825: 7c a9                    a2 = u8 [a3]
  6827: 33 0c 80 10 03           a5 = 0x31080
  6832: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  6835: 98 7a 03                 a3 = a0 >> 0x3
  6838: 33 0b 00 02              a4 = 0x200
  6842: 7b 1c 08                 u64 [sp + 0x8] = a5
  6845: 3b 09 a2 10 03           u8 [0x310a2] = a2
  6850: ac ab de 00              jump @296 if a4 <u a3
      :                          @284
  6854: c8 87 07                 a0 = a0 + a1
  6857: 7c 77                    a0 = u8 [a0]
  6859: 82 18 08                 a1 = u64 [sp + 0x8]
  6862: 78 87 23                 u8 [a1 + 0x23] = a0
  6865: 80 87 20                 a0 = u32 [a1 + 0x20]
  6868: 7b 17                    u64 [sp] = a0
  6870: 7a 17 1c                 u32 [sp + 0x1c] = a0
  6873: 33 05 a4 10 03           s0 = 0x310a4
  6878: 33 06 50                 s1 = 0x50
  6881: 01                       fallthrough
      :                          @285
  6882: 33 09 20                 a2 = 0x20
  6885: 64 57                    a0 = s0
  6887: 82 18 08                 a1 = u64 [sp + 0x8]
  6890: 50 20 84 00 7b 05        ra = 132, jump @405
      :                          @286 [@dyn 66]
  6896: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  6899: 95 55 20                 s0 = s0 + 0x20
  6902: 52 06 ec                 jump @285 if s1 != 0
      :                          @287
  6905: 33 05 a4 10 03           s0 = 0x310a4
  6910: 33 07                    a0 = 0
  6912: 33 08 a4 10 03           a1 = 0x310a4
  6917: 82 16                    s1 = u64 [sp]
  6919: 64 69                    a2 = s1
  6921: 0a 0f                    ecalli 15 // 'assign'
  6923: 33 07 01                 a0 = 0x1
  6926: 64 58                    a1 = s0
  6928: 64 69                    a2 = s1
  6930: 0a 0f                    ecalli 15 // 'assign'
  6932: 95 17 1c                 a0 = sp + 0x1c
  6935: 7b 17 68                 u64 [sp + 0x68] = a0
  6938: 33 07 d4 00              a0 = 0xd4
  6942: 7b 17 70                 u64 [sp + 0x70] = a0
  6945: 33 07 80 00 01           a0 = 0x10080
  6950: 7b 17 38                 u64 [sp + 0x38] = a0
  6953: 49 11 40 01              u64 [sp + 64] = 0x1
  6957: 49 11 58                 u64 [sp + 88] = 0
  6960: 95 17 68                 a0 = sp + 0x68
  6963: 7b 17 48                 u64 [sp + 0x48] = a0
  6966: 49 11 50 01              u64 [sp + 80] = 0x1
  6970: 95 17 20                 a0 = sp + 0x20
  6973: 95 18 38                 a1 = sp + 0x38
  6976: 50 20 86 00 ab 02        ra = 134, jump @355
      :                          @288 [@dyn 67]
  6982: 82 15 28                 s0 = u64 [sp + 0x28]
  6985: 82 1b 30                 a4 = u64 [sp + 0x30]
  6988: 82 16 20                 s1 = u64 [sp + 0x20]
  6991: 33 07 02                 a0 = 0x2
  6994: 33 08                    a1 = 0
  6996: 33 09                    a2 = 0
  6998: 64 5a                    a3 = s0
  7000: 33 00 88 00              ra = 0x88
  7004: 0a 64                    ecalli 100 // 'log'
  7006: 01                       fallthrough
      :                          @289 [@dyn 68]
  7007: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
  7012: 53 38 00 00 ff 31        jump @295 if a1 <u 4294901760
      :                          @290
  7018: 33 07 b0 1a 03           a0 = 0x31ab0
  7023: 95 77 00 00 01           a0 = a0 + 0x10000
  7028: 01                       fallthrough
      :                          @291
  7029: 82 78                    a1 = u64 [a0]
  7031: c9 87 09                 a2 = a0 - a1
  7034: ab 59 1b                 jump @295 if a2 != s0
      :                          @292
  7037: c9 68 09                 a2 = a1 - s1
  7040: 01                       fallthrough
      :                          @293
  7041: 82 7a                    a3 = u64 [a0]
  7043: ab 8a f2                 jump @291 if a3 != a1
      :                          @294
  7046: 7b 79                    u64 [a0] = a2
  7048: 33 0b                    a4 = 0
  7050: 33 07 80 10 03           a0 = 0x31080
  7055: 33 08 20                 a1 = 0x20
  7058: 28 a3 fa                 jump @223
      :                          @295
  7061: 33 07 80 10 03           a0 = 0x31080
  7066: 33 08 20                 a1 = 0x20
  7069: 28 98 fa                 jump @223
      :                          @296
  7072: 00                       trap
      :                          @297
  7073: 00                       trap
      :                          @298 [export #2: 'on_transfer']
  7074: 33 07 00 00 01           a0 = 0x10000
  7079: 33 08                    a1 = 0
  7081: 32 00                    ret
      :                          @299
  7083: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  7086: 7b 10 40                 u64 [sp + 0x40] = ra
  7089: 7b 15 38                 u64 [sp + 0x38] = s0
  7092: 7b 16 30                 u64 [sp + 0x30] = s1
  7095: c8 89 09                 a2 = a2 + a1
  7098: ac 89 53                 jump @307 if a2 <u a1
      :                          @300
  7101: 64 75                    s0 = a0
  7103: 82 77                    a0 = u64 [a0]
  7105: 97 78 01                 a1 = a0 << 0x1
  7108: 33 0a 08                 a3 = 0x8
  7111: e4 a9 09                 a2 = maxu(a2, a3)
  7114: e4 98 06                 s1 = maxu(a1, a2)
  7117: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  7120: 98 88 3f                 a1 = a1 >> 0x3f
  7123: 51 07 12                 jump @302 if a0 == 0
      :                          @301
  7126: 82 59 08                 a2 = u64 [s0 + 0x8]
  7129: 7b 19 18                 u64 [sp + 0x18] = a2
  7132: 49 11 20 01              u64 [sp + 32] = 0x1
  7136: 7b 17 28                 u64 [sp + 0x28] = a0
  7139: 28 06                    jump @303
      :                          @302
  7141: 49 11 20                 u64 [sp + 32] = 0
  7144: 01                       fallthrough
      :                          @303
  7145: 64 17                    a0 = sp
  7147: 95 1a 18                 a3 = sp + 0x18
  7150: 64 69                    a2 = s1
  7152: 50 20 8a 00 33           ra = 138, jump @311
      :                          @304 [@dyn 69]
  7157: 82 18                    a1 = u64 [sp]
  7159: 82 17 08                 a0 = u64 [sp + 0x8]
  7162: 51 08 14                 jump @308 if a1 == 0
      :                          @305
  7165: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  7175: aa 87 0d                 jump @309 if a0 == a1
      :                          @306
  7178: 52 07 18                 jump @310 if a0 != 0
      :                          @307
  7181: 00                       trap
      :                          @308
  7182: 7b 57 08                 u64 [s0 + 0x8] = a0
  7185: 7b 56                    u64 [s0] = s1
  7187: 01                       fallthrough
      :                          @309
  7188: 82 10 40                 ra = u64 [sp + 0x40]
  7191: 82 15 38                 s0 = u64 [sp + 0x38]
  7194: 82 16 30                 s1 = u64 [sp + 0x30]
  7197: 95 11 48                 sp = sp + 0x48
  7200: 32 00                    ret
      :                          @310
  7202: 00                       trap
      :                          @311
  7203: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  7206: 7b 10 30                 u64 [sp + 0x30] = ra
  7209: 7b 15 28                 u64 [sp + 0x28] = s0
  7212: 7b 16 20                 u64 [sp + 0x20] = s1
  7215: 64 95                    s0 = a2
  7217: 64 72                    t0 = a0
  7219: 51 08 7a                 jump @321 if a1 == 0
      :                          @312
  7222: 82 a7 08                 a0 = u64 [a3 + 0x8]
  7225: 51 07 7d                 jump @322 if a0 == 0
      :                          @313
  7228: 82 a9 10                 a2 = u64 [a3 + 0x10]
  7231: 51 09 ab 00              jump @329 if a2 == 0
      :                          @314
  7235: 82 a8                    a1 = u64 [a3]
  7237: 33 06 b0 1a 03           s1 = 0x31ab0
  7242: 33 03 00 00 01           t1 = 0x10000
  7247: c8 36 06                 s1 = s1 + t1
  7250: 01                       fallthrough
      :                          @315
  7251: 82 6a                    a3 = u64 [s1]
  7253: c8 5a 07                 a0 = a3 + s0
  7256: ac a7 d0 00              jump @335 if a0 <u a3
      :                          @316
  7260: 95 7b 01                 a4 = a0 + 0x1
  7263: 88 bc 01                 a5 = a4 <u 0x1
  7266: d8 b3 0b                 a4 = t1 <u a4
  7269: d4 cb 0b                 a4 = a4 | a5
  7272: 52 0b c0 00              jump @335 if a4 != 0
      :                          @317
  7276: 82 6b                    a4 = u64 [s1]
  7278: ab ab e5                 jump @315 if a4 != a3
      :                          @318
  7281: 7b 67                    u64 [s1] = a0
  7283: 33 0c                    a5 = 0
  7285: 7b 12 18                 u64 [sp + 0x18] = t0
  7288: 33 0a b0 1a 03           a3 = 0x31ab0
  7293: 33 0b 00 00 01           a4 = 0x10000
  7298: 7b 1a                    u64 [sp] = a3
  7300: c8 ba 0a                 a3 = a3 + a4
  7303: c9 7a 07                 a0 = a3 - a0
  7306: 7b 17 10                 u64 [sp + 0x10] = a0
  7309: 7b 18 08                 u64 [sp + 0x8] = a1
  7312: 64 96                    s1 = a2
  7314: 50 20 8c 00 d3 03        ra = 140, jump @405
      :                          @319 [@dyn 70]
  7320: 54 36 00 00 01 98 00     jump @336 if s1 <=u 65536
      :                          @320
  7327: 82 12 18                 t0 = u64 [sp + 0x18]
  7330: 82 18 10                 a1 = u64 [sp + 0x10]
  7333: 33 07                    a0 = 0
  7335: 7b 28 08                 u64 [t0 + 0x8] = a1
  7338: 28 b5 00                 jump @342
      :                          @321
  7341: 49 12 08                 u64 [t0 + 8] = 0
  7344: 33 07 01                 a0 = 0x1
  7347: 28 ac 00                 jump @342
      :                          @322
  7350: 33 09 b0 1a 03           a2 = 0x31ab0
  7355: 33 07 00 00 01           a0 = 0x10000
  7360: c8 79 09                 a2 = a2 + a0
  7363: 01                       fallthrough
      :                          @323
  7364: 82 9a                    a3 = u64 [a2]
  7366: c8 5a 08                 a1 = a3 + s0
  7369: ac a8 5f                 jump @335 if a1 <u a3
      :                          @324
  7372: 95 8b 01                 a4 = a1 + 0x1
  7375: 88 bc 01                 a5 = a4 <u 0x1
  7378: d8 b7 0b                 a4 = a0 <u a4
  7381: d4 cb 0b                 a4 = a4 | a5
  7384: 52 0b 50                 jump @335 if a4 != 0
      :                          @325
  7387: 82 9b                    a4 = u64 [a2]
  7389: ab ab e7                 jump @323 if a4 != a3
      :                          @326
  7392: 7b 98                    u64 [a2] = a1
  7394: 33 0c                    a5 = 0
  7396: 01                       fallthrough
      :                          @327
  7397: ab ab df                 jump @323 if a4 != a3
      :                          @328
  7400: 28 31                    jump @334
      :                          @329
  7402: 33 09 b0 1a 03           a2 = 0x31ab0
  7407: 33 07 00 00 01           a0 = 0x10000
  7412: c8 79 09                 a2 = a2 + a0
  7415: 01                       fallthrough
      :                          @330
  7416: 82 9a                    a3 = u64 [a2]
  7418: c8 5a 08                 a1 = a3 + s0
  7421: ac a8 2b                 jump @335 if a1 <u a3
      :                          @331
  7424: 95 8b 01                 a4 = a1 + 0x1
  7427: 88 bc 01                 a5 = a4 <u 0x1
  7430: d8 b7 0b                 a4 = a0 <u a4
  7433: d4 cb 0b                 a4 = a4 | a5
  7436: 52 0b 1c                 jump @335 if a4 != 0
      :                          @332
  7439: 82 9b                    a4 = u64 [a2]
  7441: ab ab e7                 jump @330 if a4 != a3
      :                          @333
  7444: 7b 98                    u64 [a2] = a1
  7446: 33 0c                    a5 = 0
  7448: 01                       fallthrough
      :                          @334
  7449: 33 07 b0 1a 04           a0 = 0x41ab0
  7454: c9 87 08                 a1 = a0 - a1
  7457: 33 07                    a0 = 0
  7459: 7b 28 08                 u64 [t0 + 0x8] = a1
  7462: 28 39                    jump @342
      :                          @335
  7464: 33 07 01                 a0 = 0x1
  7467: 7b 27 08                 u64 [t0 + 0x8] = a0
  7470: 28 31                    jump @342
      :                          @336
  7472: 64 6c                    a5 = s1
  7474: 82 17                    a0 = u64 [sp]
  7476: 95 77 00 00 01           a0 = a0 + 0x10000
  7481: 82 12 18                 t0 = u64 [sp + 0x18]
  7484: 82 16 08                 s1 = u64 [sp + 0x8]
  7487: 01                       fallthrough
      :                          @337
  7488: 82 78                    a1 = u64 [a0]
  7490: c9 87 09                 a2 = a0 - a1
  7493: ab 69 11                 jump @341 if a2 != s1
      :                          @338
  7496: c9 c8 09                 a2 = a1 - a5
  7499: 01                       fallthrough
      :                          @339
  7500: 82 7a                    a3 = u64 [a0]
  7502: ab 8a f2                 jump @337 if a3 != a1
      :                          @340
  7505: 7b 79                    u64 [a0] = a2
  7507: 33 0b                    a4 = 0
  7509: 01                       fallthrough
      :                          @341
  7510: 82 18 10                 a1 = u64 [sp + 0x10]
  7513: 33 07                    a0 = 0
  7515: 7b 28 08                 u64 [t0 + 0x8] = a1
  7518: 01                       fallthrough
      :                          @342
  7519: 7b 25 10                 u64 [t0 + 0x10] = s0
  7522: 7b 27                    u64 [t0] = a0
  7524: 82 10 30                 ra = u64 [sp + 0x30]
  7527: 82 15 28                 s0 = u64 [sp + 0x28]
  7530: 82 16 20                 s1 = u64 [sp + 0x20]
  7533: 95 11 38                 sp = sp + 0x38
  7536: 32 00                    ret
      :                          @343
  7538: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  7541: 7b 10 40                 u64 [sp + 0x40] = ra
  7544: 7b 15 38                 u64 [sp + 0x38] = s0
  7547: 7b 16 30                 u64 [sp + 0x30] = s1
  7550: 95 88 01                 a1 = a1 + 0x1
  7553: 51 08 54                 jump @351 if a1 == 0
      :                          @344
  7556: 64 75                    s0 = a0
  7558: 82 77                    a0 = u64 [a0]
  7560: 97 79 01                 a2 = a0 << 0x1
  7563: 33 0a 08                 a3 = 0x8
  7566: e4 a8 08                 a1 = maxu(a1, a3)
  7569: e4 89 06                 s1 = maxu(a2, a1)
  7572: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  7575: 98 88 3f                 a1 = a1 >> 0x3f
  7578: 51 07 12                 jump @346 if a0 == 0
      :                          @345
  7581: 82 59 08                 a2 = u64 [s0 + 0x8]
  7584: 7b 19 18                 u64 [sp + 0x18] = a2
  7587: 49 11 20 01              u64 [sp + 32] = 0x1
  7591: 7b 17 28                 u64 [sp + 0x28] = a0
  7594: 28 06                    jump @347
      :                          @346
  7596: 49 11 20                 u64 [sp + 32] = 0
  7599: 01                       fallthrough
      :                          @347
  7600: 64 17                    a0 = sp
  7602: 95 1a 18                 a3 = sp + 0x18
  7605: 64 69                    a2 = s1
  7607: 50 20 8e 00 6c fe        ra = 142, jump @311
      :                          @348 [@dyn 71]
  7613: 82 18                    a1 = u64 [sp]
  7615: 82 17 08                 a0 = u64 [sp + 0x8]
  7618: 51 08 14                 jump @352 if a1 == 0
      :                          @349
  7621: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  7631: aa 87 0d                 jump @353 if a0 == a1
      :                          @350
  7634: 52 07 18                 jump @354 if a0 != 0
      :                          @351
  7637: 00                       trap
      :                          @352
  7638: 7b 57 08                 u64 [s0 + 0x8] = a0
  7641: 7b 56                    u64 [s0] = s1
  7643: 01                       fallthrough
      :                          @353
  7644: 82 10 40                 ra = u64 [sp + 0x40]
  7647: 82 15 38                 s0 = u64 [sp + 0x38]
  7650: 82 16 30                 s1 = u64 [sp + 0x30]
  7653: 95 11 48                 sp = sp + 0x48
  7656: 32 00                    ret
      :                          @354
  7658: 00                       trap
      :                          @355
  7659: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  7662: 7b 10 30                 u64 [sp + 0x30] = ra
  7665: 7b 15 28                 u64 [sp + 0x28] = s0
  7668: 7b 16 20                 u64 [sp + 0x20] = s1
  7671: 64 89                    a2 = a1
  7673: 82 8a 08                 a3 = u64 [a1 + 0x8]
  7676: 64 75                    s0 = a0
  7678: 51 0a 35                 jump @360 if a3 == 0
      :                          @356
  7681: 82 98                    a1 = u64 [a2]
  7683: 33 07                    a0 = 0
  7685: 95 8b 08                 a4 = a1 + 0x8
  7688: 01                       fallthrough
      :                          @357
  7689: 82 bc                    a5 = u64 [a4]
  7691: c8 c7 07                 a0 = a0 + a5
  7694: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  7697: 95 bb 10                 a4 = a4 + 0x10
  7700: 52 0a f5                 jump @357 if a3 != 0
      :                          @358
  7703: 82 9a 18                 a3 = u64 [a2 + 0x18]
  7706: 51 0a 24                 jump @362 if a3 == 0
      :                          @359
  7709: 82 88 08                 a1 = u64 [a1 + 0x8]
  7712: 8e 88                    a1 = a1 >u 0
  7714: 88 7a 10                 a3 = a0 <u 0x10
  7717: 85 aa 01                 a3 = a3 ^ 0x1
  7720: d4 a8 08                 a1 = a1 | a3
  7723: 89 7a                    a3 = a0 <s 0
  7725: e0 a8 08                 a1 = a1 & ~a3
  7728: 52 08 0a                 jump @361 if a1 != 0
      :                          @360
  7731: 33 07                    a0 = 0
  7733: 33 08 01                 a1 = 0x1
  7736: 28 4a                    jump @370
      :                          @361
  7738: 97 77 01                 a0 = a0 << 0x1
  7741: 01                       fallthrough
      :                          @362
  7742: 51 07 40                 jump @369 if a0 == 0
      :                          @363
  7745: 57 07 79                 jump @375 if a0 <s 0
      :                          @364
  7748: 64 52                    t0 = s0
  7750: 33 0b b0 1a 03           a4 = 0x31ab0
  7755: 33 08 00 00 01           a1 = 0x10000
  7760: c8 8b 0b                 a4 = a4 + a1
  7763: 01                       fallthrough
      :                          @365
  7764: 82 bc                    a5 = u64 [a4]
  7766: c8 7c 0a                 a3 = a5 + a0
  7769: ac ca 5f                 jump @373 if a3 <u a5
      :                          @366
  7772: 95 a5 01                 s0 = a3 + 0x1
  7775: 88 56 01                 s1 = s0 <u 0x1
  7778: d8 58 05                 s0 = a1 <u s0
  7781: d4 65 05                 s0 = s0 | s1
  7784: 52 05 50                 jump @373 if s0 != 0
      :                          @367
  7787: 82 b6                    s1 = u64 [a4]
  7789: ab c6 e7                 jump @365 if s1 != a5
      :                          @368
  7792: 7b ba                    u64 [a4] = a3
  7794: 33 08 b0 1a 04           a1 = 0x41ab0
  7799: c9 a8 08                 a1 = a1 - a3
  7802: 64 25                    s0 = t0
  7804: 28 06                    jump @370
      :                          @369
  7806: 33 08 01                 a1 = 0x1
  7809: 01                       fallthrough
      :                          @370
  7810: 7b 17                    u64 [sp] = a0
  7812: 7b 18 08                 u64 [sp + 0x8] = a1
  7815: 49 11 10                 u64 [sp + 16] = 0
  7818: 33 08 f8 00 01           a1 = 0x100f8
  7823: 64 17                    a0 = sp
  7825: 50 20 90 00 80 06        ra = 144, jump @499
      :                          @371 [@dyn 72]
  7831: 52 07 22                 jump @374 if a0 != 0
      :                          @372
  7834: 82 17 10                 a0 = u64 [sp + 0x10]
  7837: 82 18 08                 a1 = u64 [sp + 0x8]
  7840: 82 19                    a2 = u64 [sp]
  7842: 7b 57 10                 u64 [s0 + 0x10] = a0
  7845: 7b 58 08                 u64 [s0 + 0x8] = a1
  7848: 7b 59                    u64 [s0] = a2
  7850: 82 10 30                 ra = u64 [sp + 0x30]
  7853: 82 15 28                 s0 = u64 [sp + 0x28]
  7856: 82 16 20                 s1 = u64 [sp + 0x20]
  7859: 95 11 38                 sp = sp + 0x38
  7862: 32 00                    ret
      :                          @373
  7864: 00                       trap
      :                          @374
  7865: 00                       trap
      :                          @375
  7866: 00                       trap
      :                          @376 [@dyn 73]
  7867: 82 72                    t0 = u64 [a0]
  7869: 33 09 00 00 ff           a2 = 0xffffffffffff0000
  7874: 95 2a ff ff fe           a3 = t0 + 0xfffffffffffeffff
  7879: ac 9a 28                 jump @382 if a3 <u a2
      :                          @377
  7882: 82 77 08                 a0 = u64 [a0 + 0x8]
  7885: 33 09 b0 1a 03           a2 = 0x31ab0
  7890: 95 99 00 00 01           a2 = a2 + 0x10000
  7895: 01                       fallthrough
      :                          @378
  7896: 82 9a                    a3 = u64 [a2]
  7898: c9 a9 0b                 a4 = a2 - a3
  7901: ab 7b 12                 jump @382 if a4 != a0
      :                          @379
  7904: c9 2a 0b                 a4 = a3 - t0
  7907: 01                       fallthrough
      :                          @380
  7908: 82 9c                    a5 = u64 [a2]
  7910: ab ac f2                 jump @378 if a5 != a3
      :                          @381
  7913: 7b 9b                    u64 [a2] = a4
  7915: 33 08                    a1 = 0
  7917: 32 00                    ret
      :                          @382
  7919: 32 00                    ret
      :                          @383 [@dyn 74]
  7921: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  7924: 7b 10 18                 u64 [sp + 0x18] = ra
  7927: 7b 15 10                 u64 [sp + 0x10] = s0
  7930: 7b 16 08                 u64 [sp + 0x8] = s1
  7933: 64 75                    s0 = a0
  7935: 82 7a 10                 a3 = u64 [a0 + 0x10]
  7938: 82 77                    a0 = u64 [a0]
  7940: c9 a7 07                 a0 = a0 - a3
  7943: 64 96                    s1 = a2
  7945: ac 97 2b                 jump @386 if a0 <u a2
      :                          @384
  7948: 7b 1a                    u64 [sp] = a3
  7950: 82 57 08                 a0 = u64 [s0 + 0x8]
  7953: c8 a7 07                 a0 = a0 + a3
  7956: 64 69                    a2 = s1
  7958: 50 20 96 00 4f 01        ra = 150, jump @405
      :                          @385 [@dyn 75]
  7964: 82 17                    a0 = u64 [sp]
  7966: c8 76 06                 s1 = s1 + a0
  7969: 7b 56 10                 u64 [s0 + 0x10] = s1
  7972: 33 07                    a0 = 0
  7974: 82 10 18                 ra = u64 [sp + 0x18]
  7977: 82 15 10                 s0 = u64 [sp + 0x10]
  7980: 82 16 08                 s1 = u64 [sp + 0x8]
  7983: 95 11 20                 sp = sp + 0x20
  7986: 32 00                    ret
      :                          @386
  7988: 64 57                    a0 = s0
  7990: 7b 18                    u64 [sp] = a1
  7992: 64 a8                    a1 = a3
  7994: 64 69                    a2 = s1
  7996: 50 20 98 00 6f fc        ra = 152, jump @299
      :                          @387 [@dyn 76]
  8002: 82 18                    a1 = u64 [sp]
  8004: 82 5a 10                 a3 = u64 [s0 + 0x10]
  8007: 28 c5                    jump @384
      :                          @388 [@dyn 77]
  8009: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  8012: 7b 10 20                 u64 [sp + 0x20] = ra
  8015: 7b 15 18                 u64 [sp + 0x18] = s0
  8018: 7b 16 10                 u64 [sp + 0x10] = s1
  8021: 64 86                    s1 = a1
  8023: 83 88                    i32 a1 = a1 + 0
  8025: 33 09 80 00              a2 = 0x80
  8029: 64 7a                    a3 = a0
  8031: ae 98 2c                 jump @393 if a1 >=u a2
      :                          @389
  8034: 82 a8 10                 a1 = u64 [a3 + 0x10]
  8037: 82 a7                    a0 = u64 [a3]
  8039: ab 78 13                 jump @392 if a1 != a0
      :                          @390
  8042: 64 a7                    a0 = a3
  8044: 64 a5                    s0 = a3
  8046: 50 20 9c 00 04 fe        ra = 156, jump @343
      :                          @391 [@dyn 78]
  8052: 64 5a                    a3 = s0
  8054: 82 58 10                 a1 = u64 [s0 + 0x10]
  8057: 01                       fallthrough
      :                          @392
  8058: 82 a7 08                 a0 = u64 [a3 + 0x8]
  8061: c8 87 07                 a0 = a0 + a1
  8064: 78 76                    u8 [a0] = s1
  8066: 95 88 01                 a1 = a1 + 0x1
  8069: 7b a8 10                 u64 [a3 + 0x10] = a1
  8072: 28 ac 00                 jump @401
      :                          @393
  8075: 8b 67 0b                 i32 a0 = s1 >> 0xb
  8078: 48 11 0c                 u32 [sp + 12] = 0
  8081: 52 07 1c                 jump @395 if a0 != 0
      :                          @394
  8084: 98 67 06                 a0 = s1 >> 0x6
  8087: 86 77 c0 00              a0 = a0 | 0xc0
  8091: 78 17 0c                 u8 [sp + 0xc] = a0
  8094: 84 67 3f                 a0 = s1 & 0x3f
  8097: 86 77 80 00              a0 = a0 | 0x80
  8101: 78 17 0d                 u8 [sp + 0xd] = a0
  8104: 33 06 02                 s1 = 0x2
  8107: 28 63                    jump @398
      :                          @395
  8109: 8b 67 10                 i32 a0 = s1 >> 0x10
  8112: 52 07 29                 jump @397 if a0 != 0
      :                          @396
  8115: 98 67 0c                 a0 = s1 >> 0xc
  8118: 86 77 e0 00              a0 = a0 | 0xe0
  8122: 78 17 0c                 u8 [sp + 0xc] = a0
  8125: 97 67 34                 a0 = s1 << 0x34
  8128: 98 77 3a                 a0 = a0 >> 0x3a
  8131: 95 77 80 00              a0 = a0 + 0x80
  8135: 78 17 0d                 u8 [sp + 0xd] = a0
  8138: 84 67 3f                 a0 = s1 & 0x3f
  8141: 86 77 80 00              a0 = a0 | 0x80
  8145: 78 17 0e                 u8 [sp + 0xe] = a0
  8148: 33 06 03                 s1 = 0x3
  8151: 28 37                    jump @398
      :                          @397
  8153: 97 67 2b                 a0 = s1 << 0x2b
  8156: 98 77 3d                 a0 = a0 >> 0x3d
  8159: 95 77 f0 00              a0 = a0 + 0xf0
  8163: 78 17 0c                 u8 [sp + 0xc] = a0
  8166: 97 67 2e                 a0 = s1 << 0x2e
  8169: 98 77 3a                 a0 = a0 >> 0x3a
  8172: 95 77 80 00              a0 = a0 + 0x80
  8176: 78 17 0d                 u8 [sp + 0xd] = a0
  8179: 97 67 34                 a0 = s1 << 0x34
  8182: 98 77 3a                 a0 = a0 >> 0x3a
  8185: 95 77 80 00              a0 = a0 + 0x80
  8189: 78 17 0e                 u8 [sp + 0xe] = a0
  8192: 84 67 3f                 a0 = s1 & 0x3f
  8195: 86 77 80 00              a0 = a0 | 0x80
  8199: 78 17 0f                 u8 [sp + 0xf] = a0
  8202: 33 06 04                 s1 = 0x4
  8205: 01                       fallthrough
      :                          @398
  8206: 82 a5 10                 s0 = u64 [a3 + 0x10]
  8209: 82 a7                    a0 = u64 [a3]
  8211: c9 57 07                 a0 = a0 - s0
  8214: ac 67 2e                 jump @402 if a0 <u s1
      :                          @399
  8217: 7b 1a                    u64 [sp] = a3
  8219: 82 a7 08                 a0 = u64 [a3 + 0x8]
  8222: c8 57 07                 a0 = a0 + s0
  8225: 95 18 0c                 a1 = sp + 0xc
  8228: 64 69                    a2 = s1
  8230: 50 20 9e 00 3f           ra = 158, jump @405
      :                          @400 [@dyn 79]
  8235: c8 56 06                 s1 = s1 + s0
  8238: 82 17                    a0 = u64 [sp]
  8240: 7b 76 10                 u64 [a0 + 0x10] = s1
  8243: 01                       fallthrough
      :                          @401
  8244: 33 07                    a0 = 0
  8246: 82 10 20                 ra = u64 [sp + 0x20]
  8249: 82 15 18                 s0 = u64 [sp + 0x18]
  8252: 82 16 10                 s1 = u64 [sp + 0x10]
  8255: 95 11 28                 sp = sp + 0x28
  8258: 32 00                    ret
      :                          @402
  8260: 64 a7                    a0 = a3
  8262: 64 58                    a1 = s0
  8264: 64 69                    a2 = s1
  8266: 64 a5                    s0 = a3
  8268: 50 20 a0 00 5f fb        ra = 160, jump @299
      :                          @403 [@dyn 80]
  8274: 64 5a                    a3 = s0
  8276: 82 55 10                 s0 = u64 [s0 + 0x10]
  8279: 28 c2                    jump @399
      :                          @404 [@dyn 81]
  8281: 64 8a                    a3 = a1
  8283: 33 08 f8 00 01           a1 = 0x100f8
  8288: 64 a9                    a2 = a3
  8290: 28 af 04                 jump @499
      :                          @405
  8293: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  8296: 7b 10 18                 u64 [sp + 0x18] = ra
  8299: 7b 15 10                 u64 [sp + 0x10] = s0
  8302: 7b 16 08                 u64 [sp + 0x8] = s1
  8305: 53 19 10 64              jump @414 if a2 <u 16
      :                          @406
  8309: 8d 7a                    i32 a3 = -a0
  8311: 84 a2 07                 t0 = a3 & 0x7
  8314: c8 27 0b                 a4 = a0 + t0
  8317: 51 02 15                 jump @409 if t0 == 0
      :                          @407
  8320: 64 8c                    a5 = a1
  8322: 64 75                    s0 = a0
  8324: 01                       fallthrough
      :                          @408
  8325: 7c ca                    a3 = u8 [a5]
  8327: 78 5a                    u8 [s0] = a3
  8329: 95 55 01                 s0 = s0 + 0x1
  8332: 95 cc 01                 a5 = a5 + 0x1
  8335: ac b5 f6                 jump @408 if s0 <u a4
      :                          @409
  8338: c8 28 03                 t1 = a1 + t0
  8341: c9 29 02                 t0 = a2 - t0
  8344: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  8347: 84 38 07                 a1 = t1 & 0x7
  8350: c8 4b 0a                 a3 = a4 + t2
  8353: 51 08 3b                 jump @416 if a1 == 0
      :                          @410
  8356: 58 04 4b                 jump @419 if t2 <=s 0
      :                          @411
  8359: 97 38 03                 a1 = t1 << 0x3
  8362: 84 80 38                 ra = a1 & 0x38
  8365: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  8368: 82 c5                    s0 = u64 [a5]
  8370: 8d 88                    i32 a1 = -a1
  8372: 84 88 38                 a1 = a1 & 0x38
  8375: 95 cc 08                 a5 = a5 + 0x8
  8378: 01                       fallthrough
      :                          @412
  8379: 82 c6                    s1 = u64 [a5]
  8381: d0 05 05                 s0 = s0 >> ra
  8384: cf 86 09                 a2 = s1 << a1
  8387: d4 59 09                 a2 = a2 | s0
  8390: 7b b9                    u64 [a4] = a2
  8392: 95 bb 08                 a4 = a4 + 0x8
  8395: 95 cc 08                 a5 = a5 + 0x8
  8398: 64 65                    s0 = s1
  8400: ac ab eb                 jump @412 if a4 <u a3
      :                          @413
  8403: 28 1c                    jump @419
      :                          @414
  8405: 64 7a                    a3 = a0
  8407: 52 09 21                 jump @420 if a2 != 0
      :                          @415
  8410: 28 2f                    jump @422
      :                          @416
  8412: 58 04 13                 jump @419 if t2 <=s 0
      :                          @417
  8415: 64 38                    a1 = t1
  8417: 01                       fallthrough
      :                          @418
  8418: 82 89                    a2 = u64 [a1]
  8420: 7b b9                    u64 [a4] = a2
  8422: 95 bb 08                 a4 = a4 + 0x8
  8425: 95 88 08                 a1 = a1 + 0x8
  8428: ac ab f6                 jump @418 if a4 <u a3
      :                          @419
  8431: c8 43 08                 a1 = t1 + t2
  8434: 84 29 07                 a2 = t0 & 0x7
  8437: 51 09 14                 jump @422 if a2 == 0
      :                          @420
  8440: c8 a9 09                 a2 = a2 + a3
  8443: 01                       fallthrough
      :                          @421
  8444: 7c 8b                    a4 = u8 [a1]
  8446: 78 ab                    u8 [a3] = a4
  8448: 95 aa 01                 a3 = a3 + 0x1
  8451: 95 88 01                 a1 = a1 + 0x1
  8454: ac 9a f6                 jump @421 if a3 <u a2
      :                          @422
  8457: 82 10 18                 ra = u64 [sp + 0x18]
  8460: 82 15 10                 s0 = u64 [sp + 0x10]
  8463: 82 16 08                 s1 = u64 [sp + 0x8]
  8466: 95 11 20                 sp = sp + 0x20
  8469: 32 00                    ret
      :                          @423
  8471: 8d 7a                    i32 a3 = -a0
  8473: 84 aa 07                 a3 = a3 & 0x7
  8476: c8 a7 0b                 a4 = a0 + a3
  8479: 51 0a 0e                 jump @426 if a3 == 0
      :                          @424
  8482: 64 7c                    a5 = a0
  8484: 01                       fallthrough
      :                          @425
  8485: 78 c8                    u8 [a5] = a1
  8487: 95 cc 01                 a5 = a5 + 0x1
  8490: ac bc fb                 jump @425 if a5 <u a4
      :                          @426
  8493: c9 a9 03                 t1 = a2 - a3
  8496: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  8499: c8 cb 0a                 a3 = a4 + a5
  8502: 58 0c 1d                 jump @429 if a5 <=s 0
      :                          @427
  8505: 84 82 ff 00              t0 = a1 & 0xff
  8509: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  8519: ca 92 0c                 a5 = t0 * a2
  8522: 01                       fallthrough
      :                          @428
  8523: 7b bc                    u64 [a4] = a5
  8525: 95 bb 08                 a4 = a4 + 0x8
  8528: ac ab fb                 jump @428 if a4 <u a3
      :                          @429
  8531: 84 39 07                 a2 = t1 & 0x7
  8534: 52 09 05                 jump @431 if a2 != 0
      :                          @430
  8537: 28 0e                    jump @433
      :                          @431
  8539: c8 a9 09                 a2 = a2 + a3
  8542: 01                       fallthrough
      :                          @432
  8543: 78 a8                    u8 [a3] = a1
  8545: 95 aa 01                 a3 = a3 + 0x1
  8548: ac 9a fb                 jump @432 if a3 <u a2
      :                          @433
  8551: 32 00                    ret
      :                          @434 [@dyn 82]
  8553: 82 77                    a0 = u64 [a0]
  8555: 01                       fallthrough
      :                          @435
  8556: 28                       jump @435
      :                          @436 [@dyn 83]
  8557: 82 77                    a0 = u64 [a0]
  8559: 01                       fallthrough
      :                          @437
  8560: 95 11 a8                 sp = sp + 0xffffffffffffffa8
  8563: 7b 10 50                 u64 [sp + 0x50] = ra
  8566: 7b 15 48                 u64 [sp + 0x48] = s0
  8569: 7b 16 40                 u64 [sp + 0x40] = s1
  8572: 7b 18                    u64 [sp] = a1
  8574: 98 79 04                 a2 = a0 >> 0x4
  8577: 33 08 27                 a1 = 0x27
  8580: 53 29 71 02 81 00        jump @440 if a2 <u 625
      :                          @438
  8586: 33 08 27                 a1 = 0x27
  8589: 95 1a 3e                 a3 = sp + 0x3e
  8592: 3a 09 50 00 03           a2 = u64 [0x30050]
  8597: 7b 19 10                 u64 [sp + 0x10] = a2
  8600: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
  8606: 33 04 7b 14              t2 = 0x147b
  8610: 33 0b 6c 01 01           a4 = 0x1016c
  8615: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
  8621: 01                       fallthrough
      :                          @439
  8622: 64 72                    t0 = a0
  8624: 82 17 10                 a0 = u64 [sp + 0x10]
  8627: d6 72 07                 a0 = t0 mulhu a0
  8630: 98 77 0b                 a0 = a0 >> 0xb
  8633: 82 19 08                 a2 = u64 [sp + 0x8]
  8636: c0 97 0c                 i32 a5 = a0 * a2
  8639: c8 2c 06                 s1 = a5 + t0
  8642: 97 6c 30                 a5 = s1 << 0x30
  8645: 98 cc 32                 a5 = a5 >> 0x32
  8648: ca 4c 0c                 a5 = a5 * t2
  8651: 98 c3 11                 t1 = a5 >> 0x11
  8654: 98 cc 10                 a5 = a5 >> 0x10
  8657: 84 cc fe 07              a5 = a5 & 0x7fe
  8661: 96 39 9c                 a2 = t1 * 0xffffffffffffff9c
  8664: c8 69 09                 a2 = a2 + s1
  8667: 97 99 31                 a2 = a2 << 0x31
  8670: 98 99 30                 a2 = a2 >> 0x30
  8673: c8 bc 0c                 a5 = a5 + a4
  8676: 7c c6                    s1 = u8 [a5]
  8678: 7c cc 01                 a5 = u8 [a5 + 0x1]
  8681: c8 b9 09                 a2 = a2 + a4
  8684: 7c 95 01                 s0 = u8 [a2 + 0x1]
  8687: 7c 99                    a2 = u8 [a2]
  8689: 78 ac ff                 u8 [a3 + 0xffffffffffffffff] = a5
  8692: 78 a6 fe                 u8 [a3 + 0xfffffffffffffffe] = s1
  8695: 78 a5 01                 u8 [a3 + 0x1] = s0
  8698: 78 a9                    u8 [a3] = a2
  8700: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
  8703: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
  8706: ac 20 ac                 jump @439 if ra <u t0
      :                          @440
  8709: 54 17 63 3b              jump @442 if a0 <=u 99
      :                          @441
  8713: 97 79 30                 a2 = a0 << 0x30
  8716: 98 99 32                 a2 = a2 >> 0x32
  8719: 96 99 7b 14              a2 = a2 * 0x147b
  8723: 98 99 11                 a2 = a2 >> 0x11
  8726: 96 9a 9c                 a3 = a2 * 0xffffffffffffff9c
  8729: c8 a7 07                 a0 = a0 + a3
  8732: 97 77 31                 a0 = a0 << 0x31
  8735: 98 77 30                 a0 = a0 >> 0x30
  8738: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  8741: 33 0a 6c 01 01           a3 = 0x1016c
  8746: c8 a7 07                 a0 = a0 + a3
  8749: 7c 7a 01                 a3 = u8 [a0 + 0x1]
  8752: 7c 77                    a0 = u8 [a0]
  8754: 95 1b 19                 a4 = sp + 0x19
  8757: c8 8b 0b                 a4 = a4 + a1
  8760: 78 ba 01                 u8 [a4 + 0x1] = a3
  8763: 78 b7                    u8 [a4] = a0
  8765: 64 97                    a0 = a2
  8767: 01                       fallthrough
      :                          @442
  8768: 55 17 0a 14              jump @444 if a0 >=u 10
      :                          @443
  8772: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  8775: 95 19 19                 a2 = sp + 0x19
  8778: c8 89 09                 a2 = a2 + a1
  8781: 83 77 30                 i32 a0 = a0 + 0x30
  8784: 78 97                    u8 [a2] = a0
  8786: 28 21                    jump @445
      :                          @444
  8788: 97 77 01                 a0 = a0 << 0x1
  8791: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  8794: 33 09 6c 01 01           a2 = 0x1016c
  8799: c8 97 07                 a0 = a0 + a2
  8802: 7c 79 01                 a2 = u8 [a0 + 0x1]
  8805: 7c 77                    a0 = u8 [a0]
  8807: 95 1a 19                 a3 = sp + 0x19
  8810: c8 8a 0a                 a3 = a3 + a1
  8813: 78 a9 01                 u8 [a3 + 0x1] = a2
  8816: 78 a7                    u8 [a3] = a0
  8818: 01                       fallthrough
      :                          @445
  8819: 95 1a 19                 a3 = sp + 0x19
  8822: c8 8a 0a                 a3 = a3 + a1
  8825: 9a 8b 27                 a4 = 0x27 - a1
  8828: 33 08 28 01 01           a1 = 0x10128
  8833: 82 17                    a0 = u64 [sp]
  8835: 33 09                    a2 = 0
  8837: 50 20 a8 00 13           ra = 168, jump @447
      :                          @446 [@dyn 84]
  8842: 82 10 50                 ra = u64 [sp + 0x50]
  8845: 82 15 48                 s0 = u64 [sp + 0x48]
  8848: 82 16 40                 s1 = u64 [sp + 0x40]
  8851: 95 11 58                 sp = sp + 0x58
  8854: 32 00                    ret
      :                          @447
  8856: 95 11 98                 sp = sp + 0xffffffffffffff98
  8859: 7b 10 60                 u64 [sp + 0x60] = ra
  8862: 7b 15 58                 u64 [sp + 0x58] = s0
  8865: 7b 16 50                 u64 [sp + 0x50] = s1
  8868: 80 73 34                 t1 = u32 [a0 + 0x34]
  8871: 7b 1a 20                 u64 [sp + 0x20] = a3
  8874: 64 9c                    a5 = a2
  8876: 84 36 01                 s1 = t1 & 0x1
  8879: 33 02 2b                 t0 = 0x2b
  8882: 33 09 00 00 11           a2 = 0x110000
  8887: 84 3a 04                 a3 = t1 & 0x4
  8890: 7b 1b 28                 u64 [sp + 0x28] = a4
  8893: c8 b6 04                 t2 = s1 + a4
  8896: 7b 1c 30                 u64 [sp + 0x30] = a5
  8899: 52 0a 10                 jump @450 if a3 != 0
      :                          @448
  8902: 49 11 38                 u64 [sp + 56] = 0
  8905: 82 78                    a1 = u64 [a0]
  8907: 94 69 2b                 a2 = 0x2b if s1 != 0
  8910: 52 08 35                 jump @454 if a1 != 0
      :                          @449
  8913: 28 56                    jump @459
      :                          @450
  8915: 7b 18 38                 u64 [sp + 0x38] = a1
  8918: 33 09                    a2 = 0
  8920: 51 0c 1b                 jump @453 if a5 == 0
      :                          @451
  8923: 82 1b 38                 a4 = u64 [sp + 0x38]
  8926: 01                       fallthrough
      :                          @452
  8927: 7d b5                    s0 = i8 [a4]
  8929: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
  8932: 85 5a 01                 a3 = s0 ^ 0x1
  8935: c8 a9 09                 a2 = a2 + a3
  8938: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  8941: 95 bb 01                 a4 = a4 + 0x1
  8944: 52 0c ef                 jump @452 if a5 != 0
      :                          @453
  8947: c8 94 04                 t2 = t2 + a2
  8950: 33 09 00 00 11           a2 = 0x110000
  8955: 82 78                    a1 = u64 [a0]
  8957: db 62 09                 a2 = t0 if s1 != 0
  8960: 51 08 27                 jump @459 if a1 == 0
      :                          @454
  8963: 82 7a 08                 a3 = u64 [a0 + 0x8]
  8966: ae a4 21                 jump @459 if t2 >=u a3
      :                          @455
  8969: 84 38 08                 a1 = t1 & 0x8
  8972: 52 08 51                 jump @462 if a1 != 0
      :                          @456
  8975: 7c 76 38                 s1 = u8 [a0 + 0x38]
  8978: c9 4a 0a                 a3 = a3 - t2
  8981: 7b 19 18                 u64 [sp + 0x18] = a2
  8984: 5a 16 01 a0 00           jump @469 if s1 >s 1
      :                          @457
  8989: 52 06 ad 00              jump @471 if s1 != 0
      :                          @458
  8993: 7b 1a 10                 u64 [sp + 0x10] = a3
  8996: 28 ac 00                 jump @472
      :                          @459
  8999: 82 75 20                 s0 = u64 [a0 + 0x20]
  9002: 82 76 28                 s1 = u64 [a0 + 0x28]
  9005: 64 57                    a0 = s0
  9007: 64 68                    a1 = s1
  9009: 82 1a 38                 a3 = u64 [sp + 0x38]
  9012: 82 1b 30                 a4 = u64 [sp + 0x30]
  9015: 50 20 aa 00 75 01        ra = 170, jump @492
      :                          @460 [@dyn 85]
  9021: 33 08 01                 a1 = 0x1
  9024: 52 07 be 00              jump @477 if a0 != 0
      :                          @461
  9028: 82 6c 18                 a5 = u64 [s1 + 0x18]
  9031: 64 57                    a0 = s0
  9033: 82 18 20                 a1 = u64 [sp + 0x20]
  9036: 82 19 28                 a2 = u64 [sp + 0x28]
  9039: 82 10 60                 ra = u64 [sp + 0x60]
  9042: 82 15 58                 s0 = u64 [sp + 0x58]
  9045: 82 16 50                 s1 = u64 [sp + 0x50]
  9048: 95 11 68                 sp = sp + 0x68
  9051: 32 0c                    jump [a5]
      :                          @462
  9053: 7b 1a 40                 u64 [sp + 0x40] = a3
  9056: 64 45                    s0 = t2
  9058: 81 78 30                 a1 = i32 [a0 + 0x30]
  9061: 7b 18 10                 u64 [sp + 0x10] = a1
  9064: 7c 7a 38                 a3 = u8 [a0 + 0x38]
  9067: 7b 1a 08                 u64 [sp + 0x8] = a3
  9070: 82 7a 20                 a3 = u64 [a0 + 0x20]
  9073: 82 78 28                 a1 = u64 [a0 + 0x28]
  9076: 48 17 30 30              u32 [a0 + 48] = 0x30
  9080: 7b 17                    u64 [sp] = a0
  9082: 46 17 38 01              u8 [a0 + 56] = 0x1
  9086: 7b 1a 48                 u64 [sp + 0x48] = a3
  9089: 64 a7                    a0 = a3
  9091: 64 86                    s1 = a1
  9093: 82 1a 38                 a3 = u64 [sp + 0x38]
  9096: 82 1b 30                 a4 = u64 [sp + 0x30]
  9099: 50 20 ac 00 21 01        ra = 172, jump @492
      :                          @463 [@dyn 86]
  9105: 52 07 69                 jump @476 if a0 != 0
      :                          @464
  9108: 82 17 40                 a0 = u64 [sp + 0x40]
  9111: c9 57 05                 s0 = a0 - s0
  9114: 95 55 01                 s0 = s0 + 0x1
  9117: 01                       fallthrough
      :                          @465
  9118: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  9121: 51 05 cb 00              jump @487 if s0 == 0
      :                          @466
  9125: 82 69 20                 a2 = u64 [s1 + 0x20]
  9128: 33 08 30                 a1 = 0x30
  9131: 82 17 48                 a0 = u64 [sp + 0x48]
  9134: b4 90 02 ae 00           ra = 174, jump [a2]
      :                          @467 [@dyn 87]
  9139: 51 07 eb                 jump @465 if a0 == 0
      :                          @468
  9142: 28 44                    jump @476
      :                          @469
  9144: 52 16 02 12              jump @471 if s1 != 2
      :                          @470
  9148: 98 a6 01                 s1 = a3 >> 0x1
  9151: 95 a8 01                 a1 = a3 + 0x1
  9154: 98 88 01                 a1 = a1 >> 0x1
  9157: 7b 18 10                 u64 [sp + 0x10] = a1
  9160: 28 08                    jump @472
      :                          @471
  9162: 64 a6                    s1 = a3
  9164: 49 11 10                 u64 [sp + 16] = 0
  9167: 01                       fallthrough
      :                          @472
  9168: 82 78 20                 a1 = u64 [a0 + 0x20]
  9171: 7b 18 48                 u64 [sp + 0x48] = a1
  9174: 82 75 28                 s0 = u64 [a0 + 0x28]
  9177: 81 77 30                 a0 = i32 [a0 + 0x30]
  9180: 7b 17 40                 u64 [sp + 0x40] = a0
  9183: 95 66 01                 s1 = s1 + 0x1
  9186: 01                       fallthrough
      :                          @473
  9187: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  9190: 51 06 28                 jump @478 if s1 == 0
      :                          @474
  9193: 82 59 20                 a2 = u64 [s0 + 0x20]
  9196: 82 17 48                 a0 = u64 [sp + 0x48]
  9199: 82 18 40                 a1 = u64 [sp + 0x40]
  9202: b4 90 02 b0 00           ra = 176, jump [a2]
      :                          @475 [@dyn 88]
  9207: 51 07 ec                 jump @473 if a0 == 0
      :                          @476
  9210: 33 08 01                 a1 = 0x1
  9213: 01                       fallthrough
      :                          @477
  9214: 64 87                    a0 = a1
  9216: 82 10 60                 ra = u64 [sp + 0x60]
  9219: 82 15 58                 s0 = u64 [sp + 0x58]
  9222: 82 16 50                 s1 = u64 [sp + 0x50]
  9225: 95 11 68                 sp = sp + 0x68
  9228: 32 00                    ret
      :                          @478
  9230: 82 16 48                 s1 = u64 [sp + 0x48]
  9233: 64 67                    a0 = s1
  9235: 64 58                    a1 = s0
  9237: 82 19 18                 a2 = u64 [sp + 0x18]
  9240: 82 1a 38                 a3 = u64 [sp + 0x38]
  9243: 82 1b 30                 a4 = u64 [sp + 0x30]
  9246: 50 20 b2 00 8e 00        ra = 178, jump @492
      :                          @479 [@dyn 89]
  9252: 33 08 01                 a1 = 0x1
  9255: 52 07 d7                 jump @477 if a0 != 0
      :                          @480
  9258: 82 5a 18                 a3 = u64 [s0 + 0x18]
  9261: 64 67                    a0 = s1
  9263: 82 18 20                 a1 = u64 [sp + 0x20]
  9266: 82 19 28                 a2 = u64 [sp + 0x28]
  9269: b4 a0 02 b4 00           ra = 180, jump [a3]
      :                          @481 [@dyn 90]
  9274: 33 08 01                 a1 = 0x1
  9277: 52 07 c1                 jump @477 if a0 != 0
      :                          @482
  9280: 82 17 10                 a0 = u64 [sp + 0x10]
  9283: 9a 77                    a0 = -a0
  9285: 7b 17 38                 u64 [sp + 0x38] = a0
  9288: 33 06 ff                 s1 = 0xffffffffffffffff
  9291: 01                       fallthrough
      :                          @483
  9292: 82 17 38                 a0 = u64 [sp + 0x38]
  9295: c8 67 07                 a0 = a0 + s1
  9298: 51 17 ff 45              jump @490 if a0 == 4294967295
      :                          @484
  9302: 82 59 20                 a2 = u64 [s0 + 0x20]
  9305: 82 17 48                 a0 = u64 [sp + 0x48]
  9308: 82 18 40                 a1 = u64 [sp + 0x40]
  9311: b4 90 02 b6 00           ra = 182, jump [a2]
      :                          @485 [@dyn 91]
  9316: 95 66 01                 s1 = s1 + 0x1
  9319: 51 07 e5                 jump @483 if a0 == 0
      :                          @486
  9322: 28 39                    jump @491
      :                          @487
  9324: 82 6a 18                 a3 = u64 [s1 + 0x18]
  9327: 82 17 48                 a0 = u64 [sp + 0x48]
  9330: 82 18 20                 a1 = u64 [sp + 0x20]
  9333: 82 19 28                 a2 = u64 [sp + 0x28]
  9336: b4 a0 02 b8 00           ra = 184, jump [a3]
      :                          @488 [@dyn 92]
  9341: 33 08 01                 a1 = 0x1
  9344: 52 07 7e ff              jump @477 if a0 != 0
      :                          @489
  9348: 33 08                    a1 = 0
  9350: 82 16                    s1 = u64 [sp]
  9352: 82 17 10                 a0 = u64 [sp + 0x10]
  9355: 7a 67 30                 u32 [s1 + 0x30] = a0
  9358: 82 17 08                 a0 = u64 [sp + 0x8]
  9361: 78 67 38                 u8 [s1 + 0x38] = a0
  9364: 28 6a ff                 jump @477
      :                          @490
  9367: 82 16 10                 s1 = u64 [sp + 0x10]
  9370: 82 17 10                 a0 = u64 [sp + 0x10]
  9373: d8 76 08                 a1 = s1 <u a0
  9376: 28 5e ff                 jump @477
      :                          @491
  9379: 82 17 10                 a0 = u64 [sp + 0x10]
  9382: d8 76 08                 a1 = s1 <u a0
  9385: 28 55 ff                 jump @477
      :                          @492
  9388: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  9391: 7b 10 20                 u64 [sp + 0x20] = ra
  9394: 7b 15 18                 u64 [sp + 0x18] = s0
  9397: 7b 16 10                 u64 [sp + 0x10] = s1
  9400: 83 9c                    i32 a5 = a2 + 0
  9402: 33 02 00 00 11           t0 = 0x110000
  9407: 64 a6                    s1 = a3
  9409: 64 85                    s0 = a1
  9411: 64 7a                    a3 = a0
  9413: aa 2c 21                 jump @495 if a5 == t0
      :                          @493
  9416: 82 5c 20                 a5 = u64 [s0 + 0x20]
  9419: 64 a7                    a0 = a3
  9421: 64 98                    a1 = a2
  9423: 7b 1b 08                 u64 [sp + 0x8] = a4
  9426: 7b 1a                    u64 [sp] = a3
  9428: b4 c0 02 ba 00           ra = 186, jump [a5]
      :                          @494 [@dyn 93]
  9433: 82 1a                    a3 = u64 [sp]
  9435: 82 1b 08                 a4 = u64 [sp + 0x8]
  9438: 64 78                    a1 = a0
  9440: 33 07 01                 a0 = 0x1
  9443: 52 08 20                 jump @498 if a1 != 0
      :                          @495
  9446: 51 06 1a                 jump @497 if s1 == 0
      :                          @496
  9449: 82 5c 18                 a5 = u64 [s0 + 0x18]
  9452: 64 a7                    a0 = a3
  9454: 64 68                    a1 = s1
  9456: 64 b9                    a2 = a4
  9458: 82 10 20                 ra = u64 [sp + 0x20]
  9461: 82 15 18                 s0 = u64 [sp + 0x18]
  9464: 82 16 10                 s1 = u64 [sp + 0x10]
  9467: 95 11 28                 sp = sp + 0x28
  9470: 32 0c                    jump [a5]
      :                          @497
  9472: 33 07                    a0 = 0
  9474: 01                       fallthrough
      :                          @498
  9475: 82 10 20                 ra = u64 [sp + 0x20]
  9478: 82 15 18                 s0 = u64 [sp + 0x18]
  9481: 82 16 10                 s1 = u64 [sp + 0x10]
  9484: 95 11 28                 sp = sp + 0x28
  9487: 32 00                    ret
      :                          @499
  9489: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  9493: 7b 10 80 00              u64 [sp + 0x80] = ra
  9497: 7b 15 78                 u64 [sp + 0x78] = s0
  9500: 7b 16 70                 u64 [sp + 0x70] = s1
  9503: 49 11 60 20              u64 [sp + 96] = 0x20
  9507: 33 0a 03                 a3 = 0x3
  9510: 78 1a 68                 u8 [sp + 0x68] = a3
  9513: 82 96 20                 s1 = u64 [a2 + 0x20]
  9516: 49 11 30                 u64 [sp + 48] = 0
  9519: 49 11 40                 u64 [sp + 64] = 0
  9522: 7b 17 50                 u64 [sp + 0x50] = a0
  9525: 7b 18 58                 u64 [sp + 0x58] = a1
  9528: 51 06 0a 01              jump @521 if s1 == 0
      :                          @500
  9532: 82 97 28                 a0 = u64 [a2 + 0x28]
  9535: 51 07 79 01              jump @531 if a0 == 0
      :                          @501
  9539: 49 11 28                 u64 [sp + 40] = 0
  9542: 82 95                    s0 = u64 [a2]
  9544: 7b 19 08                 u64 [sp + 0x8] = a2
  9547: 82 98 10                 a1 = u64 [a2 + 0x10]
  9550: 7b 18 18                 u64 [sp + 0x18] = a1
  9553: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  9556: 97 88 03                 a1 = a1 << 0x3
  9559: 98 88 03                 a1 = a1 >> 0x3
  9562: 95 88 01                 a1 = a1 + 0x1
  9565: 7b 18                    u64 [sp] = a1
  9567: 95 55 08                 s0 = s0 + 0x8
  9570: 96 78 38                 a1 = a0 * 0x38
  9573: 95 66 18                 s1 = s1 + 0x18
  9576: 33 07 a4 00              a0 = 0xa4
  9580: 7b 17 10                 u64 [sp + 0x10] = a0
  9583: 01                       fallthrough
      :                          @502
  9584: 7b 18 20                 u64 [sp + 0x20] = a1
  9587: 82 59                    a2 = u64 [s0]
  9589: 51 09 18                 jump @505 if a2 == 0
      :                          @503
  9592: 82 1a 58                 a3 = u64 [sp + 0x58]
  9595: 82 17 50                 a0 = u64 [sp + 0x50]
  9598: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  9601: 82 aa 18                 a3 = u64 [a3 + 0x18]
  9604: b4 a0 02 bc 00           ra = 188, jump [a3]
      :                          @504 [@dyn 94]
  9609: 52 07 55 01              jump @534 if a0 != 0
      :                          @505
  9613: 81 67 10                 a0 = i32 [s1 + 0x10]
  9616: 7a 17 60                 u32 [sp + 0x60] = a0
  9619: 7c 67 18                 a0 = u8 [s1 + 0x18]
  9622: 78 17 68                 u8 [sp + 0x68] = a0
  9625: 81 67 14                 a0 = i32 [s1 + 0x14]
  9628: 7a 17 64                 u32 [sp + 0x64] = a0
  9631: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  9634: 82 67                    a0 = u64 [s1]
  9636: 51 08 26                 jump @510 if a1 == 0
      :                          @506
  9639: 52 18 01 16              jump @508 if a1 != 1
      :                          @507
  9643: 97 77 04                 a0 = a0 << 0x4
  9646: 82 18 18                 a1 = u64 [sp + 0x18]
  9649: c8 87 07                 a0 = a0 + a1
  9652: 82 78 08                 a1 = u64 [a0 + 0x8]
  9655: 82 19 10                 a2 = u64 [sp + 0x10]
  9658: aa 98 07                 jump @509 if a1 == a2
      :                          @508
  9661: 33 08                    a1 = 0
  9663: 28 0f                    jump @511
      :                          @509
  9665: 82 77                    a0 = u64 [a0]
  9667: 82 77                    a0 = u64 [a0]
  9669: 33 08 01                 a1 = 0x1
  9672: 28 06                    jump @511
      :                          @510
  9674: 33 08 01                 a1 = 0x1
  9677: 01                       fallthrough
      :                          @511
  9678: 7b 18 30                 u64 [sp + 0x30] = a1
  9681: 7b 17 38                 u64 [sp + 0x38] = a0
  9684: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  9687: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  9690: 51 08 26                 jump @516 if a1 == 0
      :                          @512
  9693: 52 18 01 16              jump @514 if a1 != 1
      :                          @513
  9697: 97 77 04                 a0 = a0 << 0x4
  9700: 82 18 18                 a1 = u64 [sp + 0x18]
  9703: c8 87 07                 a0 = a0 + a1
  9706: 82 78 08                 a1 = u64 [a0 + 0x8]
  9709: 82 19 10                 a2 = u64 [sp + 0x10]
  9712: aa 98 07                 jump @515 if a1 == a2
      :                          @514
  9715: 33 08                    a1 = 0
  9717: 28 0f                    jump @517
      :                          @515
  9719: 82 77                    a0 = u64 [a0]
  9721: 82 77                    a0 = u64 [a0]
  9723: 33 08 01                 a1 = 0x1
  9726: 28 06                    jump @517
      :                          @516
  9728: 33 08 01                 a1 = 0x1
  9731: 01                       fallthrough
      :                          @517
  9732: 7b 18 40                 u64 [sp + 0x40] = a1
  9735: 7b 17 48                 u64 [sp + 0x48] = a0
  9738: 82 67 08                 a0 = u64 [s1 + 0x8]
  9741: 97 77 04                 a0 = a0 << 0x4
  9744: 82 18 18                 a1 = u64 [sp + 0x18]
  9747: c8 78 08                 a1 = a1 + a0
  9750: 82 87                    a0 = u64 [a1]
  9752: 82 89 08                 a2 = u64 [a1 + 0x8]
  9755: 95 18 30                 a1 = sp + 0x30
  9758: b4 90 02 be 00           ra = 190, jump [a2]
      :                          @518 [@dyn 95]
  9763: 52 07 bb 00              jump @534 if a0 != 0
      :                          @519
  9767: 95 55 10                 s0 = s0 + 0x10
  9770: 82 18 20                 a1 = u64 [sp + 0x20]
  9773: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  9776: 95 66 38                 s1 = s1 + 0x38
  9779: 82 17 28                 a0 = u64 [sp + 0x28]
  9782: 95 77 01                 a0 = a0 + 0x1
  9785: 7b 17 28                 u64 [sp + 0x28] = a0
  9788: 52 08 34 ff              jump @502 if a1 != 0
      :                          @520
  9792: 28 6b                    jump @529
      :                          @521
  9794: 82 97 18                 a0 = u64 [a2 + 0x18]
  9797: 51 07 73                 jump @531 if a0 == 0
      :                          @522
  9800: 82 95 10                 s0 = u64 [a2 + 0x10]
  9803: 33 0a                    a3 = 0
  9805: 97 78 04                 a1 = a0 << 0x4
  9808: c8 58 08                 a1 = a1 + s0
  9811: 7b 18 20                 u64 [sp + 0x20] = a1
  9814: 7b 19 08                 u64 [sp + 0x8] = a2
  9817: 82 96                    s1 = u64 [a2]
  9819: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  9822: 97 77 04                 a0 = a0 << 0x4
  9825: 98 77 04                 a0 = a0 >> 0x4
  9828: 95 77 01                 a0 = a0 + 0x1
  9831: 7b 17                    u64 [sp] = a0
  9833: 95 66 08                 s1 = s1 + 0x8
  9836: 01                       fallthrough
      :                          @523
  9837: 7b 1a 28                 u64 [sp + 0x28] = a3
  9840: 82 69                    a2 = u64 [s1]
  9842: 51 09 17                 jump @526 if a2 == 0
      :                          @524
  9845: 82 1a 58                 a3 = u64 [sp + 0x58]
  9848: 82 17 50                 a0 = u64 [sp + 0x50]
  9851: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  9854: 82 aa 18                 a3 = u64 [a3 + 0x18]
  9857: b4 a0 02 c0 00           ra = 192, jump [a3]
      :                          @525 [@dyn 96]
  9862: 52 07 58                 jump @534 if a0 != 0
      :                          @526
  9865: 82 57                    a0 = u64 [s0]
  9867: 82 59 08                 a2 = u64 [s0 + 0x8]
  9870: 95 18 30                 a1 = sp + 0x30
  9873: b4 90 02 c2 00           ra = 194, jump [a2]
      :                          @527 [@dyn 97]
  9878: 52 07 48                 jump @534 if a0 != 0
      :                          @528
  9881: 95 66 10                 s1 = s1 + 0x10
  9884: 95 55 10                 s0 = s0 + 0x10
  9887: 82 1a 28                 a3 = u64 [sp + 0x28]
  9890: 95 aa 01                 a3 = a3 + 0x1
  9893: 82 17 20                 a0 = u64 [sp + 0x20]
  9896: ab 75 c5                 jump @523 if s0 != a0
      :                          @529
  9899: 82 19 08                 a2 = u64 [sp + 0x8]
  9902: 82 1a                    a3 = u64 [sp]
  9904: 82 97 08                 a0 = u64 [a2 + 0x8]
  9907: ac 7a 0d                 jump @532 if a3 <u a0
      :                          @530
  9910: 28 2d                    jump @535
      :                          @531
  9912: 33 0a                    a3 = 0
  9914: 82 97 08                 a0 = u64 [a2 + 0x8]
  9917: 54 07 26                 jump @535 if a0 <=u 0
      :                          @532
  9920: 82 97                    a0 = u64 [a2]
  9922: 97 a8 04                 a1 = a3 << 0x4
  9925: c8 87 09                 a2 = a0 + a1
  9928: 82 1a 58                 a3 = u64 [sp + 0x58]
  9931: 82 17 50                 a0 = u64 [sp + 0x50]
  9934: 82 98                    a1 = u64 [a2]
  9936: 82 99 08                 a2 = u64 [a2 + 0x8]
  9939: 82 aa 18                 a3 = u64 [a3 + 0x18]
  9942: b4 a0 02 c4 00           ra = 196, jump [a3]
      :                          @533 [@dyn 98]
  9947: 51 07 08                 jump @535 if a0 == 0
      :                          @534
  9950: 33 07 01                 a0 = 0x1
  9953: 28 05                    jump @536
      :                          @535
  9955: 33 07                    a0 = 0
  9957: 01                       fallthrough
      :                          @536
  9958: 82 10 80 00              ra = u64 [sp + 0x80]
  9962: 82 15 78                 s0 = u64 [sp + 0x78]
  9965: 82 16 70                 s1 = u64 [sp + 0x70]
  9968: 95 11 88 00              sp = sp + 0x88
  9972: 32 00                    ret
      :                          @537 [@dyn 99]
  9974: 32 00                    ret
      :                          @538 [@dyn 100]
  9976: 95 11 80                 sp = sp + 0xffffffffffffff80
  9979: 7b 10 78                 u64 [sp + 0x78] = ra
  9982: 7b 15 70                 u64 [sp + 0x70] = s0
  9985: 7b 16 68                 u64 [sp + 0x68] = s1
  9988: 64 92                    t0 = a2
  9990: 33 00                    ra = 0
  9992: 33 0b                    a4 = 0
  9994: 33 05                    s0 = 0
  9996: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
 10006: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
 10012: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
 10022: 82 79 10                 a2 = u64 [a0 + 0x10]
 10025: 7b 19 48                 u64 [sp + 0x48] = a2
 10028: 82 79                    a2 = u64 [a0]
 10030: 7b 19 38                 u64 [sp + 0x38] = a2
 10033: 82 77 08                 a0 = u64 [a0 + 0x8]
 10036: 7b 17 30                 u64 [sp + 0x30] = a0
 10039: 33 07 60 01 01           a0 = 0x10160
 10044: 7b 17 08                 u64 [sp + 0x8] = a0
 10047: 3a 07 58 00 03           a0 = u64 [0x30058]
 10052: 7b 17 60                 u64 [sp + 0x60] = a0
 10055: 7b 18 58                 u64 [sp + 0x58] = a1
 10058: 95 88 08                 a1 = a1 + 0x8
 10061: 7b 18                    u64 [sp] = a1
 10063: 33 0c 0a                 a5 = 0xa
 10066: 7b 12 20                 u64 [sp + 0x20] = t0
 10069: 7b 13 18                 u64 [sp + 0x18] = t1
 10072: 7b 14 10                 u64 [sp + 0x10] = t2
 10075: 28 3b                    jump @542
      :                          @539
 10077: 64 06                    s1 = ra
 10079: c8 89 07                 a0 = a2 + a1
 10082: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
 10085: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
 10088: 88 77 01                 a0 = a0 <u 0x1
 10091: 01                       fallthrough
      :                          @540
 10092: 82 1a 48                 a3 = u64 [sp + 0x48]
 10095: 78 a7                    u8 [a3] = a0
 10097: 82 17 30                 a0 = u64 [sp + 0x30]
 10100: 82 7a 18                 a3 = u64 [a0 + 0x18]
 10103: 82 17 38                 a0 = u64 [sp + 0x38]
 10106: b4 a0 02 ca 00           ra = 202, jump [a3]
      :                          @541 [@dyn 101]
 10111: 64 5b                    a4 = s0
 10113: 82 12 20                 t0 = u64 [sp + 0x20]
 10116: 82 13 18                 t1 = u64 [sp + 0x18]
 10119: 82 14 10                 t2 = u64 [sp + 0x10]
 10122: 64 60                    ra = s1
 10124: 33 0c 0a                 a5 = 0xa
 10127: 82 15 40                 s0 = u64 [sp + 0x40]
 10130: 52 07 64 01              jump @583 if a0 != 0
      :                          @542
 10134: 84 57 ff 00              a0 = s0 & 0xff
 10138: 52 07 58 01              jump @582 if a0 != 0
      :                          @543
 10142: 7b 1b 50                 u64 [sp + 0x50] = a4
 10145: ae 02 0a                 jump @546 if t0 >=u ra
      :                          @544
 10148: 28 ef 00                 jump @573
      :                          @545
 10151: ac 02 ec 00              jump @573 if t0 <u ra
      :                          @546
 10155: c9 02 08                 a1 = t0 - ra
 10158: 82 16 58                 s1 = u64 [sp + 0x58]
 10161: c8 06 06                 s1 = s1 + ra
 10164: 55 18 10 1d              jump @552 if a1 >=u 16
      :                          @547
 10168: aa 02 d8 00              jump @572 if t0 == ra
      :                          @548
 10172: 33 0a                    a3 = 0
 10174: 01                       fallthrough
      :                          @549
 10175: c8 a6 07                 a0 = s1 + a3
 10178: 7c 77                    a0 = u8 [a0]
 10180: aa c7 a5 00              jump @567 if a0 == a5
      :                          @550
 10184: 95 aa 01                 a3 = a3 + 0x1
 10187: ab a8 f4                 jump @549 if a1 != a3
      :                          @551
 10190: 28 c2 00                 jump @572
      :                          @552
 10193: 95 69 07                 a2 = s1 + 0x7
 10196: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
 10199: c9 6a 07                 a0 = a3 - s1
 10202: d3 6a 0a                 a3 = a3 ^ s1
 10205: 88 aa 01                 a3 = a3 <u 0x1
 10208: 88 7b 01                 a4 = a0 <u 0x1
 10211: d4 ba 0a                 a3 = a3 | a4
 10214: 51 0a 45                 jump @558 if a3 == 0
      :                          @553
 10217: 33 07                    a0 = 0
 10219: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
 10222: 82 1b                    a4 = u64 [sp]
 10224: c8 0b 0b                 a4 = a4 + ra
 10227: 28 08                    jump @555
      :                          @554
 10229: 82 1b                    a4 = u64 [sp]
 10231: c8 0b 0b                 a4 = a4 + ra
 10234: 01                       fallthrough
      :                          @555
 10235: c8 76 0c                 a5 = s1 + a0
 10238: 82 cc                    a5 = u64 [a5]
 10240: c8 7b 09                 a2 = a4 + a0
 10243: 82 99                    a2 = u64 [a2]
 10245: d3 4c 05                 s0 = a5 ^ t2
 10248: c8 35 05                 s0 = s0 + t1
 10251: e0 c5 0c                 a5 = s0 & ~a5
 10254: d3 49 05                 s0 = a2 ^ t2
 10257: c8 35 05                 s0 = s0 + t1
 10260: e0 95 09                 a2 = s0 & ~a2
 10263: d4 c9 09                 a2 = a2 | a5
 10266: 82 1c 60                 a5 = u64 [sp + 0x60]
 10269: d2 c9 09                 a2 = a2 & a5
 10272: 52 09 1f                 jump @561 if a2 != 0
      :                          @556
 10275: 95 77 10                 a0 = a0 + 0x10
 10278: ae 7a d5                 jump @555 if a3 >=u a0
      :                          @557
 10281: 28 16                    jump @561
      :                          @558
 10283: c8 a6 0b                 a4 = s1 + a3
 10286: 7c bb                    a4 = u8 [a4]
 10288: aa cb 51                 jump @570 if a4 == a5
      :                          @559
 10291: 95 aa 01                 a3 = a3 + 0x1
 10294: ab a7 f5                 jump @558 if a0 != a3
      :                          @560
 10297: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
 10300: ae 7a b9                 jump @554 if a3 >=u a0
      :                          @561
 10303: aa 87 9b 00              jump @579 if a0 == a1
      :                          @562
 10307: 33 0a                    a3 = 0
 10309: c8 76 06                 s1 = s1 + a0
 10312: c9 72 08                 a1 = t0 - a0
 10315: c9 08 08                 a1 = a1 - ra
 10318: 33 0c 0a                 a5 = 0xa
 10321: 82 1b 50                 a4 = u64 [sp + 0x50]
 10324: 01                       fallthrough
      :                          @563
 10325: c8 a6 09                 a2 = s1 + a3
 10328: 7c 99                    a2 = u8 [a2]
 10330: aa c9 0b                 jump @566 if a2 == a5
      :                          @564
 10333: 95 aa 01                 a3 = a3 + 0x1
 10336: ab a8 f5                 jump @563 if a1 != a3
      :                          @565
 10339: 28 2d                    jump @572
      :                          @566
 10341: c8 7a 0a                 a3 = a3 + a0
 10344: 01                       fallthrough
      :                          @567
 10345: c8 0a 0a                 a3 = a3 + ra
 10348: 95 a0 01                 ra = a3 + 0x1
 10351: ae 2a 38 ff              jump @545 if a3 >=u t0
      :                          @568
 10355: 82 17 58                 a0 = u64 [sp + 0x58]
 10358: c8 7a 0a                 a3 = a3 + a0
 10361: 7c a7                    a0 = u8 [a3]
 10363: ab c7 2c ff              jump @545 if a0 != a5
      :                          @569
 10367: 28 62                    jump @580
      :                          @570
 10369: 82 1b 50                 a4 = u64 [sp + 0x50]
 10372: c8 0a 0a                 a3 = a3 + ra
 10375: 95 a0 01                 ra = a3 + 0x1
 10378: ac 2a e9                 jump @568 if a3 <u t0
      :                          @571
 10381: 28 1a ff                 jump @545
      :                          @572
 10384: 64 20                    ra = t0
 10386: 01                       fallthrough
      :                          @573
 10387: 49 11 40 01              u64 [sp + 64] = 0x1
 10391: 64 b5                    s0 = a4
 10393: 64 26                    s1 = t0
 10395: aa 2b 57                 jump @582 if a4 == t0
      :                          @574
 10398: 82 17 48                 a0 = u64 [sp + 0x48]
 10401: 7c 77                    a0 = u8 [a0]
 10403: 51 07 23                 jump @577 if a0 == 0
      :                          @575
 10406: 82 17 30                 a0 = u64 [sp + 0x30]
 10409: 82 7a 18                 a3 = u64 [a0 + 0x18]
 10412: 33 09 04                 a2 = 0x4
 10415: 82 17 38                 a0 = u64 [sp + 0x38]
 10418: 82 18 08                 a1 = u64 [sp + 0x8]
 10421: 7b 10 28                 u64 [sp + 0x28] = ra
 10424: b4 a0 02 cc 00           ra = 204, jump [a3]
      :                          @576 [@dyn 102]
 10429: 82 1b 50                 a4 = u64 [sp + 0x50]
 10432: 82 10 28                 ra = u64 [sp + 0x28]
 10435: 52 07 33                 jump @583 if a0 != 0
      :                          @577
 10438: c9 b6 09                 a2 = s1 - a4
 10441: 82 18 58                 a1 = u64 [sp + 0x58]
 10444: c8 b8 08                 a1 = a1 + a4
 10447: ab b6 8e fe              jump @539 if s1 != a4
      :                          @578
 10451: 64 06                    s1 = ra
 10453: 33 07                    a0 = 0
 10455: 28 95 fe                 jump @540
      :                          @579
 10458: 64 20                    ra = t0
 10460: 82 1b 50                 a4 = u64 [sp + 0x50]
 10463: 28 b4                    jump @573
      :                          @580
 10465: 49 11 40                 u64 [sp + 64] = 0
 10468: 64 05                    s0 = ra
 10470: 64 06                    s1 = ra
 10472: 82 17 48                 a0 = u64 [sp + 0x48]
 10475: 7c 77                    a0 = u8 [a0]
 10477: 52 07 b9                 jump @575 if a0 != 0
      :                          @581
 10480: 28 d6                    jump @577
      :                          @582
 10482: 33 07                    a0 = 0
 10484: 28 06                    jump @584
      :                          @583
 10486: 33 07 01                 a0 = 0x1
 10489: 01                       fallthrough
      :                          @584
 10490: 82 10 78                 ra = u64 [sp + 0x78]
 10493: 82 15 70                 s0 = u64 [sp + 0x70]
 10496: 82 16 68                 s1 = u64 [sp + 0x68]
 10499: 95 11 80 00              sp = sp + 0x80
 10503: 32 00                    ret
      :                          @585 [@dyn 103]
 10505: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 10508: 7b 10 20                 u64 [sp + 0x20] = ra
 10511: 7b 15 18                 u64 [sp + 0x18] = s0
 10514: 7b 16 10                 u64 [sp + 0x10] = s1
 10517: 82 75 10                 s0 = u64 [a0 + 0x10]
 10520: 7c 59                    a2 = u8 [s0]
 10522: 82 7b                    a4 = u64 [a0]
 10524: 82 76 08                 s1 = u64 [a0 + 0x8]
 10527: 51 09 33                 jump @589 if a2 == 0
      :                          @586
 10530: 82 6a 18                 a3 = u64 [s1 + 0x18]
 10533: 7b 18 08                 u64 [sp + 0x8] = a1
 10536: 33 08 60 01 01           a1 = 0x10160
 10541: 33 09 04                 a2 = 0x4
 10544: 64 b7                    a0 = a4
 10546: 7b 1b                    u64 [sp] = a4
 10548: b4 a0 02 d0 00           ra = 208, jump [a3]
      :                          @587 [@dyn 104]
 10553: 82 18 08                 a1 = u64 [sp + 0x8]
 10556: 82 1b                    a4 = u64 [sp]
 10558: 51 07 14                 jump @589 if a0 == 0
      :                          @588
 10561: 33 07 01                 a0 = 0x1
 10564: 82 10 20                 ra = u64 [sp + 0x20]
 10567: 82 15 18                 s0 = u64 [sp + 0x18]
 10570: 82 16 10                 s1 = u64 [sp + 0x10]
 10573: 95 11 28                 sp = sp + 0x28
 10576: 32 00                    ret
      :                          @589
 10578: 83 87                    i32 a0 = a1 + 0
 10580: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
 10583: 88 77 01                 a0 = a0 <u 0x1
 10586: 78 57                    u8 [s0] = a0
 10588: 82 6c 20                 a5 = u64 [s1 + 0x20]
 10591: 64 b7                    a0 = a4
 10593: 82 10 20                 ra = u64 [sp + 0x20]
 10596: 82 15 18                 s0 = u64 [sp + 0x18]
 10599: 82 16 10                 s1 = u64 [sp + 0x10]
 10602: 95 11 28                 sp = sp + 0x28
 10605: 32 0c                    jump [a5]
      :                          @590 [@dyn 105]
 10607: 64 8a                    a3 = a1
 10609: 33 08 30 01 01           a1 = 0x10130
 10614: 64 a9                    a2 = a3
 10616: 28 99 fb                 jump @499
      :                          @591 [@dyn 106]
 10619: 80 77                    a0 = u32 [a0]
 10621: 28 f3 f7                 jump @437
      :                          @592
 10624: 95 11 70 ff              sp = sp + 0xffffffffffffff70
 10628: 7b 10 88 00              u64 [sp + 0x88] = ra
 10632: 7b 15 80 00              u64 [sp + 0x80] = s0
 10636: 7b 16 78                 u64 [sp + 0x78] = s1
 10639: 64 75                    s0 = a0
 10641: 7c 77 08                 a0 = u8 [a0 + 0x8]
 10644: 64 8b                    a4 = a1
 10646: 33 08 01                 a1 = 0x1
 10649: 33 06 01                 s1 = 0x1
 10652: 51 07 1d                 jump @594 if a0 == 0
      :                          @593
 10655: 78 56 08                 u8 [s0 + 0x8] = s1
 10658: 46 15 09 01              u8 [s0 + 9] = 0x1
 10662: 64 57                    a0 = s0
 10664: 82 10 88 00              ra = u64 [sp + 0x88]
 10668: 82 15 80 00              s0 = u64 [sp + 0x80]
 10672: 82 16 78                 s1 = u64 [sp + 0x78]
 10675: 95 11 90 00              sp = sp + 0x90
 10679: 32 00                    ret
      :                          @594
 10681: 64 9a                    a3 = a2
 10683: 82 5c                    a5 = u64 [s0]
 10685: 80 c7 34                 a0 = u32 [a5 + 0x34]
 10688: 7c 58 09                 a1 = u8 [s0 + 0x9]
 10691: 84 79 04                 a2 = a0 & 0x4
 10694: 52 09 45                 jump @600 if a2 != 0
      :                          @595
 10697: 51 08 32                 jump @598 if a1 == 0
      :                          @596
 10700: 82 c8 28                 a1 = u64 [a5 + 0x28]
 10703: 82 c7 20                 a0 = u64 [a5 + 0x20]
 10706: 82 83 18                 t1 = u64 [a1 + 0x18]
 10709: 33 08 64 01 01           a1 = 0x10164
 10714: 33 09 02                 a2 = 0x2
 10717: 64 a6                    s1 = a3
 10719: 7b 1b 10                 u64 [sp + 0x10] = a4
 10722: 7b 1c 08                 u64 [sp + 0x8] = a5
 10725: b4 30 02 d6 00           ra = 214, jump [t1]
      :                          @597 [@dyn 107]
 10730: 82 1c 08                 a5 = u64 [sp + 0x8]
 10733: 82 1b 10                 a4 = u64 [sp + 0x10]
 10736: 64 6a                    a3 = s1
 10738: 33 08 01                 a1 = 0x1
 10741: 33 06 01                 s1 = 0x1
 10744: 52 07 a7                 jump @593 if a0 != 0
      :                          @598
 10747: 64 b7                    a0 = a4
 10749: 64 c8                    a1 = a5
 10751: b4 a0 02 d8 00           ra = 216, jump [a3]
      :                          @599 [@dyn 108]
 10756: 33 08 01                 a1 = 0x1
 10759: 64 76                    s1 = a0
 10761: 28 96                    jump @593
      :                          @600
 10763: 52 08 37                 jump @604 if a1 != 0
      :                          @601
 10766: 82 c8 28                 a1 = u64 [a5 + 0x28]
 10769: 82 c7 20                 a0 = u64 [a5 + 0x20]
 10772: 82 83 18                 t1 = u64 [a1 + 0x18]
 10775: 33 08 68 01 01           a1 = 0x10168
 10780: 33 09 01                 a2 = 0x1
 10783: 33 06 01                 s1 = 0x1
 10786: 7b 1a                    u64 [sp] = a3
 10788: 7b 1b 10                 u64 [sp + 0x10] = a4
 10791: 7b 1c 08                 u64 [sp + 0x8] = a5
 10794: b4 30 02 da 00           ra = 218, jump [t1]
      :                          @602 [@dyn 109]
 10799: 82 1c 08                 a5 = u64 [sp + 0x8]
 10802: 82 1b 10                 a4 = u64 [sp + 0x10]
 10805: 82 1a                    a3 = u64 [sp]
 10807: 33 08 01                 a1 = 0x1
 10810: 52 07 65 ff              jump @593 if a0 != 0
      :                          @603
 10814: 81 c7 34                 a0 = i32 [a5 + 0x34]
 10817: 01                       fallthrough
      :                          @604
 10818: 33 06 01                 s1 = 0x1
 10821: 78 16 37                 u8 [sp + 0x37] = s1
 10824: 82 c8 20                 a1 = u64 [a5 + 0x20]
 10827: 82 c9 28                 a2 = u64 [a5 + 0x28]
 10830: 7b 18 18                 u64 [sp + 0x18] = a1
 10833: 7b 19 20                 u64 [sp + 0x20] = a2
 10836: 95 18 37                 a1 = sp + 0x37
 10839: 7b 18 28                 u64 [sp + 0x28] = a1
 10842: 81 c8 30                 a1 = i32 [a5 + 0x30]
 10845: 7c c9 38                 a2 = u8 [a5 + 0x38]
 10848: 82 c3                    t1 = u64 [a5]
 10850: 82 c4 08                 t2 = u64 [a5 + 0x8]
 10853: 82 c0 10                 ra = u64 [a5 + 0x10]
 10856: 82 c2 18                 t0 = u64 [a5 + 0x18]
 10859: 7a 17 6c                 u32 [sp + 0x6c] = a0
 10862: 7a 18 68                 u32 [sp + 0x68] = a1
 10865: 78 19 70                 u8 [sp + 0x70] = a2
 10868: 7b 13 38                 u64 [sp + 0x38] = t1
 10871: 7b 14 40                 u64 [sp + 0x40] = t2
 10874: 7b 10 48                 u64 [sp + 0x48] = ra
 10877: 7b 12 50                 u64 [sp + 0x50] = t0
 10880: 95 17 18                 a0 = sp + 0x18
 10883: 7b 17 58                 u64 [sp + 0x58] = a0
 10886: 33 07 30 01 01           a0 = 0x10130
 10891: 7b 17 60                 u64 [sp + 0x60] = a0
 10894: 95 18 38                 a1 = sp + 0x38
 10897: 64 b7                    a0 = a4
 10899: b4 a0 02 dc 00           ra = 220, jump [a3]
      :                          @605 [@dyn 110]
 10904: 52 07 21                 jump @608 if a0 != 0
      :                          @606
 10907: 82 18 60                 a1 = u64 [sp + 0x60]
 10910: 82 17 58                 a0 = u64 [sp + 0x58]
 10913: 82 8a 18                 a3 = u64 [a1 + 0x18]
 10916: 33 08 66 01 01           a1 = 0x10166
 10921: 33 09 02                 a2 = 0x2
 10924: b4 a0 02 de 00           ra = 222, jump [a3]
      :                          @607 [@dyn 111]
 10929: 64 76                    s1 = a0
 10931: 33 08 01                 a1 = 0x1
 10934: 28 e9 fe                 jump @593
      :                          @608
 10937: 33 08 01                 a1 = 0x1
 10940: 28 e3 fe                 jump @593
      :                          @609
 10943: 51 08 9b 00              jump @630 if a1 == 0
      :                          @610
 10947: 64 79                    a2 = a0
 10949: 7c 77                    a0 = u8 [a0]
 10951: 51 07 91 00              jump @629 if a0 == 0
      :                          @611
 10955: 51 27 ff 00 90 00        jump @631 if a0 == 255
      :                          @612
 10961: 6c 7a                    a3 = sext.b a0
 10963: 57 0a 09                 jump @614 if a3 <s 0
      :                          @613
 10966: 33 0a                    a3 = 0
 10968: 33 08                    a1 = 0
 10970: 28 73                    jump @628
      :                          @614
 10972: 55 27 c0 00 0d           jump @616 if a0 >=u 192
      :                          @615
 10977: 33 0a 01                 a3 = 0x1
 10980: 33 0b 80                 a4 = 0xffffffffffffff80
 10983: 28 4a                    jump @625
      :                          @616
 10985: 55 27 e0 00 0e           jump @618 if a0 >=u 224
      :                          @617
 10990: 33 0a 02                 a3 = 0x2
 10993: 33 0b 40 ff              a4 = 0xffffffffffffff40
 10997: 28 3c                    jump @625
      :                          @618
 10999: 55 27 f0 00 0e           jump @620 if a0 >=u 240
      :                          @619
 11004: 33 0a 03                 a3 = 0x3
 11007: 33 0b 20 ff              a4 = 0xffffffffffffff20
 11011: 28 2e                    jump @625
      :                          @620
 11013: 55 27 f8 00 0e           jump @622 if a0 >=u 248
      :                          @621
 11018: 33 0a 04                 a3 = 0x4
 11021: 33 0b 10 ff              a4 = 0xffffffffffffff10
 11025: 28 20                    jump @625
      :                          @622
 11027: 55 27 fc 00 0e           jump @624 if a0 >=u 252
      :                          @623
 11032: 33 0a 05                 a3 = 0x5
 11035: 33 0b 08 ff              a4 = 0xffffffffffffff08
 11039: 28 12                    jump @625
      :                          @624
 11041: 88 7a fe 00              a3 = a0 <u 0xfe
 11045: 33 0b 04 ff              a4 = 0xffffffffffffff04
 11049: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
 11053: 85 aa 07                 a3 = a3 ^ 0x7
 11056: 01                       fallthrough
      :                          @625
 11057: ae 8a 2b                 jump @632 if a3 >=u a1
      :                          @626
 11060: 33 08                    a1 = 0
 11062: c8 b7 07                 a0 = a0 + a4
 11065: 64 ab                    a4 = a3
 11067: 01                       fallthrough
      :                          @627
 11068: c8 b9 0c                 a5 = a2 + a4
 11071: 7c cc                    a5 = u8 [a5]
 11073: 97 88 08                 a1 = a1 << 0x8
 11076: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 11079: d4 c8 08                 a1 = a1 | a5
 11082: 52 0b f2                 jump @627 if a4 != 0
      :                          @628
 11085: 8a a9 03                 i32 a2 = a3 << 0x3
 11088: cf 97 07                 a0 = a0 << a2
 11091: c8 87 07                 a0 = a0 + a1
 11094: 32 00                    ret
      :                          @629
 11096: 32 00                    ret
      :                          @630
 11098: 00                       trap
      :                          @631
 11099: 00                       trap
      :                          @632
 11100: 00                       trap
