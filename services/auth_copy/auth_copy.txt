// RO data = 796/796 bytes
// RW data = 96/72384 bytes
// Stack size = 65536 bytes
// RO data = [97, 117, 116, 104, 95, 99, 111, 112, 121, 32, 114, 101, 102, 32, 105, 110, 112, 117, 116, 95, 115, 108, 105, 99, 101, 61, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 97, 117, 116, 104, 95, 99, 111, 112, 121, 32, 114, 101, 102, 32, 111, 117, 116, 112, 117, 116, 95, 98, 121, 116, 101, 115, 95, 51, 54, 61, 0, 0, 48, 0, 1, 0, 0, 0, 0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 97, 117, 116, 104, 95, 99, 111, 112, 121, 32, 82, 69, 70, 73, 78, 69, 32, 104, 97, 115, 104, 32, 105, 61, 96, 0, 1, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 97, 115, 115, 105, 103, 110, 101, 100, 32, 99, 111, 114, 101, 32, 48, 43, 49, 32, 115, 101, 114, 118, 105, 99, 101, 32, 0, 0, 0, 0, 0, 0, 136, 0, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 97, 117, 116, 104, 95, 99, 111, 112, 121, 32, 65, 67, 67, 32, 111, 112, 101, 114, 97, 110, 100, 95, 108, 101, 110, 61, 32, 105, 115, 32, 108, 101, 115, 115, 32, 116, 104, 97, 110, 32, 51, 54, 32, 98, 121, 116, 101, 115, 44, 32, 114, 101, 116, 117, 114, 110, 105, 110, 103, 32, 101, 114, 114, 111, 114, 0, 0, 0, 0, 0, 0, 0, 184, 0, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 210, 0, 1, 0, 0, 0, 0, 0, 39, 0, 0, 0, 0, 0, 0, 0, 146, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 148, 0, 0, 0, 0, 0, 0, 0, 154, 0, 0, 0, 0, 0, 0, 0, 162, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 198, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 200, 0, 0, 0, 0, 0, 0, 0, 206, 0, 0, 0, 0, 0, 0, 0, 210, 0, 0, 0, 0, 0, 0, 0, 32, 32, 32, 32, 44, 32, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3, 11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4, 7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8, 9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13, 2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9, 12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11, 13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10, 6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5, 10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3]
// RW data = [75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128, 40, 201, 189, 242, 103, 230, 9, 106, 59, 167, 202, 132, 133, 174, 103, 187, 43, 248, 148, 254, 114, 243, 110, 60, 241, 54, 29, 95, 58, 245, 79, 165, 209, 130, 230, 173, 127, 82, 14, 81, 31, 108, 62, 43, 140, 104, 5, 155, 107, 189, 65, 251, 171, 217, 131, 31, 121, 33, 126, 19, 25, 205, 224, 91, 8, 201, 188, 243, 103, 230, 9, 106, 148, 66, 190, 4, 84, 38, 124, 224]
// Instructions = 3744
// Code size = 11945 bytes

      :                          @0
     0: 28 04 05 00 00           jump @77
      :                          @1
     5: 28 7e 0b 00 00           jump @147
      :                          @2
    10: 28 a4 11                 jump @243
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 64 82                    t0 = a1
    23: 80 88 34                 a1 = u32 [a1 + 0x34]
    26: 82 77                    a0 = u64 [a0]
    28: 84 89 10                 a2 = a1 & 0x10
    31: 52 09 1b                 jump @6 if a2 != 0
      :                          @4
    34: 84 88 20                 a1 = a1 & 0x20
    37: 52 08 46                 jump @9 if a1 != 0
      :                          @5
    40: 7c 77                    a0 = u8 [a0]
    42: 33 08 01                 a1 = 0x1
    45: 64 29                    a2 = t0
    47: 82 10 80 00              ra = u64 [sp + 0x80]
    51: 95 11 88 00              sp = sp + 0x88
    55: 28 53 17                 jump @384
      :                          @6
    58: 7c 77                    a0 = u8 [a0]
    60: 33 0a 81 00              a3 = 0x81
    64: 95 18 7f                 a1 = sp + 0x7f
    67: 33 03 57                 t1 = 0x57
    70: 01                       fallthrough
      :                          @7
    71: 64 ab                    a4 = a3
    73: 84 7a 0f                 a3 = a0 & 0xf
    76: 97 77 38                 a0 = a0 << 0x38
    79: 98 77 3c                 a0 = a0 >> 0x3c
    82: 88 ac 0a                 a5 = a3 <u 0xa
    85: 33 09 30                 a2 = 0x30
    88: da c3 09                 a2 = t1 if a5 == 0
    91: be a9 09                 i32 a2 = a2 + a3
    94: 78 89                    u8 [a1] = a2
    96: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
    99: 95 ba ff                 a3 = a4 + 0xffffffffffffffff
   102: 52 07 e1                 jump @7 if a0 != 0
      :                          @8
   105: 28 31                    jump @11
      :                          @9
   107: 7c 77                    a0 = u8 [a0]
   109: 33 0a 81 00              a3 = 0x81
   113: 95 18 7f                 a1 = sp + 0x7f
   116: 33 03 37                 t1 = 0x37
   119: 01                       fallthrough
      :                          @10
   120: 64 ab                    a4 = a3
   122: 84 7a 0f                 a3 = a0 & 0xf
   125: 97 77 38                 a0 = a0 << 0x38
   128: 98 77 3c                 a0 = a0 >> 0x3c
   131: 88 ac 0a                 a5 = a3 <u 0xa
   134: 33 09 30                 a2 = 0x30
   137: da c3 09                 a2 = t1 if a5 == 0
   140: be a9 09                 i32 a2 = a2 + a3
   143: 78 89                    u8 [a1] = a2
   145: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
   148: 95 ba ff                 a3 = a4 + 0xffffffffffffffff
   151: 52 07 e1                 jump @10 if a0 != 0
      :                          @11
   154: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   157: 56 27 80 00 2a           jump @14 if a0 >u 128
      :                          @12
   162: 9a ac 81 00              a5 = 0x81 - a3
   166: 64 1b                    a4 = sp
   168: c8 7b 0b                 a4 = a4 + a0
   171: 33 09 92 01 01           a2 = 0x10192
   176: 33 08 01                 a1 = 0x1
   179: 33 0a 02                 a3 = 0x2
   182: 64 27                    a0 = t0
   184: 50 10 04 00 18           ra = 4, jump @394
      :                          @13 [@dyn 2]
   189: 82 10 80 00              ra = u64 [sp + 0x80]
   193: 95 11 88 00              sp = sp + 0x88
   197: 32 00                    ret
      :                          @14
   199: 00                       trap
      :                          @15 [@dyn 3]
   200: 95 11 c0                 sp = sp + 0xffffffffffffffc0
   203: 7b 10 38                 u64 [sp + 0x38] = ra
   206: 7b 15 30                 u64 [sp + 0x30] = s0
   209: 7b 16 28                 u64 [sp + 0x28] = s1
   212: 7b 18 08                 u64 [sp + 0x8] = a1
   215: 82 89 28                 a2 = u64 [a1 + 0x28]
   218: 82 76                    s1 = u64 [a0]
   220: 82 75 08                 s0 = u64 [a0 + 0x8]
   223: 82 87 20                 a0 = u64 [a1 + 0x20]
   226: 82 9a 18                 a3 = u64 [a2 + 0x18]
   229: 33 08 50 01 01           a1 = 0x10150
   234: 33 09 01                 a2 = 0x1
   237: b4 a0 01 08              ra = 8, jump [a3]
      :                          @16 [@dyn 4]
   241: 82 18 08                 a1 = u64 [sp + 0x8]
   244: 7b 18 10                 u64 [sp + 0x10] = a1
   247: 78 17 18                 u8 [sp + 0x18] = a0
   250: 46 11 19                 u8 [sp + 25] = 0
   253: 51 05 2c                 jump @21 if s0 == 0
      :                          @17
   256: 33 07 02                 a0 = 0x2
   259: 7b 17                    u64 [sp] = a0
   261: 01                       fallthrough
      :                          @18
   262: 95 67 01                 a0 = s1 + 0x1
   265: 7b 17 08                 u64 [sp + 0x8] = a0
   268: 7b 16 20                 u64 [sp + 0x20] = s1
   271: 95 17 10                 a0 = sp + 0x10
   274: 95 18 20                 a1 = sp + 0x20
   277: 82 19                    a2 = u64 [sp]
   279: 50 10 0a a0 1e           ra = 10, jump @541
      :                          @19 [@dyn 5]
   284: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
   287: 82 16 08                 s1 = u64 [sp + 0x8]
   290: 52 05 e4                 jump @18 if s0 != 0
      :                          @20
   293: 7c 17 18                 a0 = u8 [sp + 0x18]
   296: 01                       fallthrough
      :                          @21
   297: 33 08 01                 a1 = 0x1
   300: 52 07 1e                 jump @24 if a0 != 0
      :                          @22
   303: 82 17 10                 a0 = u64 [sp + 0x10]
   306: 82 78 28                 a1 = u64 [a0 + 0x28]
   309: 82 77 20                 a0 = u64 [a0 + 0x20]
   312: 82 8a 18                 a3 = u64 [a1 + 0x18]
   315: 33 08 91 01 01           a1 = 0x10191
   320: 33 09 01                 a2 = 0x1
   323: b4 a0 01 0c              ra = 12, jump [a3]
      :                          @23 [@dyn 6]
   327: 64 78                    a1 = a0
   329: 01                       fallthrough
      :                          @24
   330: 64 87                    a0 = a1
   332: 82 10 38                 ra = u64 [sp + 0x38]
   335: 82 15 30                 s0 = u64 [sp + 0x30]
   338: 82 16 28                 s1 = u64 [sp + 0x28]
   341: 95 11 40                 sp = sp + 0x40
   344: 32 00                    ret
      :                          @25 [@dyn 7]
   346: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   350: 7b 10 80 00              u64 [sp + 0x80] = ra
   354: 64 82                    t0 = a1
   356: 80 88 34                 a1 = u32 [a1 + 0x34]
   359: 84 89 10                 a2 = a1 & 0x10
   362: 52 09 28                 jump @28 if a2 != 0
      :                          @26
   365: 84 88 20                 a1 = a1 & 0x20
   368: 52 08 52                 jump @31 if a1 != 0
      :                          @27
   371: 81 77                    a0 = i32 [a0]
   373: 89 79                    a2 = a0 <s 0
   375: 85 98 01                 a1 = a2 ^ 0x1
   378: 97 7a 20                 a3 = a0 << 0x20
   381: 98 aa 20                 a3 = a3 >> 0x20
   384: 9a 77                    a0 = -a0
   386: da 9a 07                 a0 = a3 if a2 == 0
   389: 64 29                    a2 = t0
   391: 82 10 80 00              ra = u64 [sp + 0x80]
   395: 95 11 88 00              sp = sp + 0x88
   399: 28 fb 15                 jump @384
      :                          @28
   402: 81 7a                    a3 = i32 [a0]
   404: 33 08 81 00              a1 = 0x81
   408: 95 17 7f                 a0 = sp + 0x7f
   411: 33 03 57                 t1 = 0x57
   414: 01                       fallthrough
      :                          @29
   415: 64 8b                    a4 = a1
   417: 8b ac 04                 i32 a5 = a3 >> 0x4
   420: 84 aa 0f                 a3 = a3 & 0xf
   423: 88 a8 0a                 a1 = a3 <u 0xa
   426: 33 09 30                 a2 = 0x30
   429: da 83 09                 a2 = t1 if a1 == 0
   432: be a9 09                 i32 a2 = a2 + a3
   435: 78 79                    u8 [a0] = a2
   437: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   440: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   443: 64 ca                    a3 = a5
   445: 52 0c e2                 jump @29 if a5 != 0
      :                          @30
   448: 28 30                    jump @33
      :                          @31
   450: 81 7a                    a3 = i32 [a0]
   452: 33 08 81 00              a1 = 0x81
   456: 95 17 7f                 a0 = sp + 0x7f
   459: 33 03 37                 t1 = 0x37
   462: 01                       fallthrough
      :                          @32
   463: 64 8b                    a4 = a1
   465: 8b ac 04                 i32 a5 = a3 >> 0x4
   468: 84 aa 0f                 a3 = a3 & 0xf
   471: 88 a8 0a                 a1 = a3 <u 0xa
   474: 33 09 30                 a2 = 0x30
   477: da 83 09                 a2 = t1 if a1 == 0
   480: be a9 09                 i32 a2 = a2 + a3
   483: 78 79                    u8 [a0] = a2
   485: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   488: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   491: 64 ca                    a3 = a5
   493: 52 0c e2                 jump @32 if a5 != 0
      :                          @33
   496: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   499: 56 27 80 00 2a           jump @36 if a0 >u 128
      :                          @34
   504: 9a 8c 81 00              a5 = 0x81 - a1
   508: 64 1b                    a4 = sp
   510: c8 7b 0b                 a4 = a4 + a0
   513: 33 09 92 01 01           a2 = 0x10192
   518: 33 08 01                 a1 = 0x1
   521: 33 0a 02                 a3 = 0x2
   524: 64 27                    a0 = t0
   526: 50 10 10 aa 16           ra = 16, jump @394
      :                          @35 [@dyn 8]
   531: 82 10 80 00              ra = u64 [sp + 0x80]
   535: 95 11 88 00              sp = sp + 0x88
   539: 32 00                    ret
      :                          @36
   541: 00                       trap
      :                          @37 [@dyn 9]
   542: 95 11 d0                 sp = sp + 0xffffffffffffffd0
   545: 7b 10 28                 u64 [sp + 0x28] = ra
   548: 7b 15 20                 u64 [sp + 0x20] = s0
   551: 7b 16 18                 u64 [sp + 0x18] = s1
   554: 64 85                    s0 = a1
   556: 82 88 28                 a1 = u64 [a1 + 0x28]
   559: 82 5a 20                 a3 = u64 [s0 + 0x20]
   562: 82 8b 18                 a4 = u64 [a1 + 0x18]
   565: 64 76                    s1 = a0
   567: 33 08 50 01 01           a1 = 0x10150
   572: 33 09 01                 a2 = 0x1
   575: 64 a7                    a0 = a3
   577: b4 b0 01 14              ra = 20, jump [a4]
      :                          @38 [@dyn 10]
   581: 7b 15                    u64 [sp] = s0
   583: 78 17 08                 u8 [sp + 0x8] = a0
   586: 46 11 09                 u8 [sp + 9] = 0
   589: 7b 16 10                 u64 [sp + 0x10] = s1
   592: 33 05 02                 s0 = 0x2
   595: 64 17                    a0 = sp
   597: 95 18 10                 a1 = sp + 0x10
   600: 33 09 02                 a2 = 0x2
   603: 50 10 16 5c 1d           ra = 22, jump @541
      :                          @39 [@dyn 11]
   608: 95 67 01                 a0 = s1 + 0x1
   611: 7b 17 10                 u64 [sp + 0x10] = a0
   614: 64 17                    a0 = sp
   616: 95 18 10                 a1 = sp + 0x10
   619: 64 59                    a2 = s0
   621: 50 10 18 4a 1d           ra = 24, jump @541
      :                          @40 [@dyn 12]
   626: 95 67 02                 a0 = s1 + 0x2
   629: 7b 17 10                 u64 [sp + 0x10] = a0
   632: 64 17                    a0 = sp
   634: 95 18 10                 a1 = sp + 0x10
   637: 64 59                    a2 = s0
   639: 50 10 1a 38 1d           ra = 26, jump @541
      :                          @41 [@dyn 13]
   644: 95 67 03                 a0 = s1 + 0x3
   647: 7b 17 10                 u64 [sp + 0x10] = a0
   650: 64 17                    a0 = sp
   652: 95 18 10                 a1 = sp + 0x10
   655: 64 59                    a2 = s0
   657: 50 10 1c 26 1d           ra = 28, jump @541
      :                          @42 [@dyn 14]
   662: 95 67 04                 a0 = s1 + 0x4
   665: 7b 17 10                 u64 [sp + 0x10] = a0
   668: 64 17                    a0 = sp
   670: 95 18 10                 a1 = sp + 0x10
   673: 64 59                    a2 = s0
   675: 50 10 1e 14 1d           ra = 30, jump @541
      :                          @43 [@dyn 15]
   680: 95 67 05                 a0 = s1 + 0x5
   683: 7b 17 10                 u64 [sp + 0x10] = a0
   686: 64 17                    a0 = sp
   688: 95 18 10                 a1 = sp + 0x10
   691: 64 59                    a2 = s0
   693: 50 10 20 02 1d           ra = 32, jump @541
      :                          @44 [@dyn 16]
   698: 95 67 06                 a0 = s1 + 0x6
   701: 7b 17 10                 u64 [sp + 0x10] = a0
   704: 64 17                    a0 = sp
   706: 95 18 10                 a1 = sp + 0x10
   709: 64 59                    a2 = s0
   711: 50 10 22 f0 1c           ra = 34, jump @541
      :                          @45 [@dyn 17]
   716: 95 67 07                 a0 = s1 + 0x7
   719: 7b 17 10                 u64 [sp + 0x10] = a0
   722: 64 17                    a0 = sp
   724: 95 18 10                 a1 = sp + 0x10
   727: 64 59                    a2 = s0
   729: 50 10 24 de 1c           ra = 36, jump @541
      :                          @46 [@dyn 18]
   734: 95 67 08                 a0 = s1 + 0x8
   737: 7b 17 10                 u64 [sp + 0x10] = a0
   740: 64 17                    a0 = sp
   742: 95 18 10                 a1 = sp + 0x10
   745: 64 59                    a2 = s0
   747: 50 10 26 cc 1c           ra = 38, jump @541
      :                          @47 [@dyn 19]
   752: 95 67 09                 a0 = s1 + 0x9
   755: 7b 17 10                 u64 [sp + 0x10] = a0
   758: 64 17                    a0 = sp
   760: 95 18 10                 a1 = sp + 0x10
   763: 64 59                    a2 = s0
   765: 50 10 28 ba 1c           ra = 40, jump @541
      :                          @48 [@dyn 20]
   770: 95 67 0a                 a0 = s1 + 0xa
   773: 7b 17 10                 u64 [sp + 0x10] = a0
   776: 64 17                    a0 = sp
   778: 95 18 10                 a1 = sp + 0x10
   781: 64 59                    a2 = s0
   783: 50 10 2a a8 1c           ra = 42, jump @541
      :                          @49 [@dyn 21]
   788: 95 67 0b                 a0 = s1 + 0xb
   791: 7b 17 10                 u64 [sp + 0x10] = a0
   794: 64 17                    a0 = sp
   796: 95 18 10                 a1 = sp + 0x10
   799: 64 59                    a2 = s0
   801: 50 10 2c 96 1c           ra = 44, jump @541
      :                          @50 [@dyn 22]
   806: 95 67 0c                 a0 = s1 + 0xc
   809: 7b 17 10                 u64 [sp + 0x10] = a0
   812: 64 17                    a0 = sp
   814: 95 18 10                 a1 = sp + 0x10
   817: 64 59                    a2 = s0
   819: 50 10 2e 84 1c           ra = 46, jump @541
      :                          @51 [@dyn 23]
   824: 95 67 0d                 a0 = s1 + 0xd
   827: 7b 17 10                 u64 [sp + 0x10] = a0
   830: 64 17                    a0 = sp
   832: 95 18 10                 a1 = sp + 0x10
   835: 64 59                    a2 = s0
   837: 50 10 30 72 1c           ra = 48, jump @541
      :                          @52 [@dyn 24]
   842: 95 67 0e                 a0 = s1 + 0xe
   845: 7b 17 10                 u64 [sp + 0x10] = a0
   848: 64 17                    a0 = sp
   850: 95 18 10                 a1 = sp + 0x10
   853: 64 59                    a2 = s0
   855: 50 10 32 60 1c           ra = 50, jump @541
      :                          @53 [@dyn 25]
   860: 95 67 0f                 a0 = s1 + 0xf
   863: 7b 17 10                 u64 [sp + 0x10] = a0
   866: 64 17                    a0 = sp
   868: 95 18 10                 a1 = sp + 0x10
   871: 64 59                    a2 = s0
   873: 50 10 34 4e 1c           ra = 52, jump @541
      :                          @54 [@dyn 26]
   878: 95 67 10                 a0 = s1 + 0x10
   881: 7b 17 10                 u64 [sp + 0x10] = a0
   884: 64 17                    a0 = sp
   886: 95 18 10                 a1 = sp + 0x10
   889: 64 59                    a2 = s0
   891: 50 10 36 3c 1c           ra = 54, jump @541
      :                          @55 [@dyn 27]
   896: 95 67 11                 a0 = s1 + 0x11
   899: 7b 17 10                 u64 [sp + 0x10] = a0
   902: 64 17                    a0 = sp
   904: 95 18 10                 a1 = sp + 0x10
   907: 64 59                    a2 = s0
   909: 50 10 38 2a 1c           ra = 56, jump @541
      :                          @56 [@dyn 28]
   914: 95 67 12                 a0 = s1 + 0x12
   917: 7b 17 10                 u64 [sp + 0x10] = a0
   920: 64 17                    a0 = sp
   922: 95 18 10                 a1 = sp + 0x10
   925: 64 59                    a2 = s0
   927: 50 10 3a 18 1c           ra = 58, jump @541
      :                          @57 [@dyn 29]
   932: 95 67 13                 a0 = s1 + 0x13
   935: 7b 17 10                 u64 [sp + 0x10] = a0
   938: 64 17                    a0 = sp
   940: 95 18 10                 a1 = sp + 0x10
   943: 64 59                    a2 = s0
   945: 50 10 3c 06 1c           ra = 60, jump @541
      :                          @58 [@dyn 30]
   950: 95 67 14                 a0 = s1 + 0x14
   953: 7b 17 10                 u64 [sp + 0x10] = a0
   956: 64 17                    a0 = sp
   958: 95 18 10                 a1 = sp + 0x10
   961: 64 59                    a2 = s0
   963: 50 10 3e f4 1b           ra = 62, jump @541
      :                          @59 [@dyn 31]
   968: 95 67 15                 a0 = s1 + 0x15
   971: 7b 17 10                 u64 [sp + 0x10] = a0
   974: 64 17                    a0 = sp
   976: 95 18 10                 a1 = sp + 0x10
   979: 64 59                    a2 = s0
   981: 50 10 40 e2 1b           ra = 64, jump @541
      :                          @60 [@dyn 32]
   986: 95 67 16                 a0 = s1 + 0x16
   989: 7b 17 10                 u64 [sp + 0x10] = a0
   992: 64 17                    a0 = sp
   994: 95 18 10                 a1 = sp + 0x10
   997: 64 59                    a2 = s0
   999: 50 10 42 d0 1b           ra = 66, jump @541
      :                          @61 [@dyn 33]
  1004: 95 67 17                 a0 = s1 + 0x17
  1007: 7b 17 10                 u64 [sp + 0x10] = a0
  1010: 64 17                    a0 = sp
  1012: 95 18 10                 a1 = sp + 0x10
  1015: 64 59                    a2 = s0
  1017: 50 10 44 be 1b           ra = 68, jump @541
      :                          @62 [@dyn 34]
  1022: 95 67 18                 a0 = s1 + 0x18
  1025: 7b 17 10                 u64 [sp + 0x10] = a0
  1028: 64 17                    a0 = sp
  1030: 95 18 10                 a1 = sp + 0x10
  1033: 64 59                    a2 = s0
  1035: 50 10 46 ac 1b           ra = 70, jump @541
      :                          @63 [@dyn 35]
  1040: 95 67 19                 a0 = s1 + 0x19
  1043: 7b 17 10                 u64 [sp + 0x10] = a0
  1046: 64 17                    a0 = sp
  1048: 95 18 10                 a1 = sp + 0x10
  1051: 64 59                    a2 = s0
  1053: 50 10 48 9a 1b           ra = 72, jump @541
      :                          @64 [@dyn 36]
  1058: 95 67 1a                 a0 = s1 + 0x1a
  1061: 7b 17 10                 u64 [sp + 0x10] = a0
  1064: 64 17                    a0 = sp
  1066: 95 18 10                 a1 = sp + 0x10
  1069: 64 59                    a2 = s0
  1071: 50 10 4a 88 1b           ra = 74, jump @541
      :                          @65 [@dyn 37]
  1076: 95 67 1b                 a0 = s1 + 0x1b
  1079: 7b 17 10                 u64 [sp + 0x10] = a0
  1082: 64 17                    a0 = sp
  1084: 95 18 10                 a1 = sp + 0x10
  1087: 64 59                    a2 = s0
  1089: 50 10 4c 76 1b           ra = 76, jump @541
      :                          @66 [@dyn 38]
  1094: 95 67 1c                 a0 = s1 + 0x1c
  1097: 7b 17 10                 u64 [sp + 0x10] = a0
  1100: 64 17                    a0 = sp
  1102: 95 18 10                 a1 = sp + 0x10
  1105: 64 59                    a2 = s0
  1107: 50 10 4e 64 1b           ra = 78, jump @541
      :                          @67 [@dyn 39]
  1112: 95 67 1d                 a0 = s1 + 0x1d
  1115: 7b 17 10                 u64 [sp + 0x10] = a0
  1118: 64 17                    a0 = sp
  1120: 95 18 10                 a1 = sp + 0x10
  1123: 64 59                    a2 = s0
  1125: 50 10 50 52 1b           ra = 80, jump @541
      :                          @68 [@dyn 40]
  1130: 95 67 1e                 a0 = s1 + 0x1e
  1133: 7b 17 10                 u64 [sp + 0x10] = a0
  1136: 64 17                    a0 = sp
  1138: 95 18 10                 a1 = sp + 0x10
  1141: 64 59                    a2 = s0
  1143: 50 10 52 40 1b           ra = 82, jump @541
      :                          @69 [@dyn 41]
  1148: 95 67 1f                 a0 = s1 + 0x1f
  1151: 7b 17 10                 u64 [sp + 0x10] = a0
  1154: 64 17                    a0 = sp
  1156: 95 18 10                 a1 = sp + 0x10
  1159: 64 59                    a2 = s0
  1161: 50 10 54 2e 1b           ra = 84, jump @541
      :                          @70 [@dyn 42]
  1166: 95 67 20                 a0 = s1 + 0x20
  1169: 7b 17 10                 u64 [sp + 0x10] = a0
  1172: 64 17                    a0 = sp
  1174: 95 18 10                 a1 = sp + 0x10
  1177: 64 59                    a2 = s0
  1179: 50 10 56 1c 1b           ra = 86, jump @541
      :                          @71 [@dyn 43]
  1184: 95 67 21                 a0 = s1 + 0x21
  1187: 7b 17 10                 u64 [sp + 0x10] = a0
  1190: 64 17                    a0 = sp
  1192: 95 18 10                 a1 = sp + 0x10
  1195: 64 59                    a2 = s0
  1197: 50 10 58 0a 1b           ra = 88, jump @541
      :                          @72 [@dyn 44]
  1202: 95 67 22                 a0 = s1 + 0x22
  1205: 7b 17 10                 u64 [sp + 0x10] = a0
  1208: 64 17                    a0 = sp
  1210: 95 18 10                 a1 = sp + 0x10
  1213: 64 59                    a2 = s0
  1215: 50 10 5a f8 1a           ra = 90, jump @541
      :                          @73 [@dyn 45]
  1220: 95 67 23                 a0 = s1 + 0x23
  1223: 7b 17 10                 u64 [sp + 0x10] = a0
  1226: 64 17                    a0 = sp
  1228: 95 18 10                 a1 = sp + 0x10
  1231: 64 59                    a2 = s0
  1233: 50 10 5c e6 1a           ra = 92, jump @541
      :                          @74 [@dyn 46]
  1238: 33 07 01                 a0 = 0x1
  1241: 7c 18 08                 a1 = u8 [sp + 0x8]
  1244: 52 08 1a                 jump @76 if a1 != 0
      :                          @75
  1247: 82 17                    a0 = u64 [sp]
  1249: 82 78 28                 a1 = u64 [a0 + 0x28]
  1252: 82 77 20                 a0 = u64 [a0 + 0x20]
  1255: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1258: 33 08 91 01 01           a1 = 0x10191
  1263: 33 09 01                 a2 = 0x1
  1266: b4 a0 01 5e              ra = 94, jump [a3]
      :                          @76 [@dyn 47]
  1270: 82 10 28                 ra = u64 [sp + 0x28]
  1273: 82 15 20                 s0 = u64 [sp + 0x20]
  1276: 82 16 18                 s1 = u64 [sp + 0x18]
  1279: 95 11 30                 sp = sp + 0x30
  1282: 32 00                    ret
      :                          @77 [export #0: 'refine']
  1284: 95 11 c0 fe              sp = sp + 0xfffffffffffffec0
  1288: 7b 10 38 01              u64 [sp + 0x138] = ra
  1292: 7b 15 30 01              u64 [sp + 0x130] = s0
  1296: 7b 16 28 01              u64 [sp + 0x128] = s1
  1300: 64 85                    s0 = a1
  1302: 7b 17 30                 u64 [sp + 0x30] = a0
  1305: 33 06 61 00 03           s1 = 0x30061
  1310: 33 09 08 10              a2 = 0x1008
  1314: 33 0a 08                 a3 = 0x8
  1317: 33 07 61 00 03           a0 = 0x30061
  1322: 33 08                    a1 = 0
  1324: 33 0b                    a4 = 0
  1326: 33 0c                    a5 = 0
  1328: 0a 01                    ecalli 1 // 'fetch'
  1330: 7b 16 38                 u64 [sp + 0x38] = s1
  1333: 7b 17 28                 u64 [sp + 0x28] = a0
  1336: 7b 17 40                 u64 [sp + 0x40] = a0
  1339: 48 11 4c                 u32 [sp + 76] = 0
  1342: 95 17 4c                 a0 = sp + 0x4c
  1345: 33 09 04                 a2 = 0x4
  1348: 33 0a 0d                 a3 = 0xd
  1351: 33 08                    a1 = 0
  1353: 33 0b                    a4 = 0
  1355: 33 0c                    a5 = 0
  1357: 33 00 60                 ra = 0x60
  1360: 0a 01                    ecalli 1 // 'fetch'
  1362: 01                       fallthrough
      :                          @78 [@dyn 48]
  1363: 33 09 04                 a2 = 0x4
  1366: 33 07 00 00 01           a0 = 0x10000
  1371: ac 95 45                 jump @87 if s0 <u a2
      :                          @79
  1374: 82 1a 30                 a3 = u64 [sp + 0x30]
  1377: 7d a8                    a1 = i8 [a3]
  1379: 33 06 01                 s1 = 0x1
  1382: 59 08 37                 jump @86 if a1 >=s 0
      :                          @80
  1385: 84 89 ff 00              a2 = a1 & 0xff
  1389: 33 06 02                 s1 = 0x2
  1392: 53 29 c0 00 2d           jump @86 if a2 <u 192
      :                          @81
  1397: 33 06 03                 s1 = 0x3
  1400: 53 29 e0 00 25           jump @86 if a2 <u 224
      :                          @82
  1405: 33 06 04                 s1 = 0x4
  1408: 53 29 f0 00 1d           jump @86 if a2 <u 240
      :                          @83
  1413: 33 06 05                 s1 = 0x5
  1416: 53 29 f8 00 15           jump @86 if a2 <u 248
      :                          @84
  1421: 33 06 06                 s1 = 0x6
  1424: 53 29 fc 00 0d           jump @86 if a2 <u 252
      :                          @85
  1429: 88 98 fe 00              a1 = a2 <u 0xfe
  1433: 9a 86 08                 s1 = 0x8 - a1
  1436: 01                       fallthrough
      :                          @86
  1437: ae 65 07                 jump @88 if s0 >=u s1
      :                          @87
  1440: 33 08                    a1 = 0
  1442: 28 5e                    jump @99
      :                          @88
  1444: 64 a7                    a0 = a3
  1446: 64 68                    a1 = s1
  1448: 50 10 62 4e 1b           ra = 98, jump @558
      :                          @89 [@dyn 49]
  1453: aa 65 4b                 jump @98 if s0 == s1
      :                          @90
  1456: 82 17 30                 a0 = u64 [sp + 0x30]
  1459: c8 67 07                 a0 = a0 + s1
  1462: 7d 79                    a2 = i8 [a0]
  1464: c9 65 06                 s1 = s0 - s1
  1467: 33 05 01                 s0 = 0x1
  1470: 59 09 37                 jump @97 if a2 >=s 0
      :                          @91
  1473: 84 99 ff 00              a2 = a2 & 0xff
  1477: 33 05 02                 s0 = 0x2
  1480: 53 29 c0 00 2d           jump @97 if a2 <u 192
      :                          @92
  1485: 33 05 03                 s0 = 0x3
  1488: 53 29 e0 00 25           jump @97 if a2 <u 224
      :                          @93
  1493: 33 05 04                 s0 = 0x4
  1496: 53 29 f0 00 1d           jump @97 if a2 <u 240
      :                          @94
  1501: 33 05 05                 s0 = 0x5
  1504: 53 29 f8 00 15           jump @97 if a2 <u 248
      :                          @95
  1509: 33 05 06                 s0 = 0x6
  1512: 53 29 fc 00 0d           jump @97 if a2 <u 252
      :                          @96
  1517: 88 98 fe 00              a1 = a2 <u 0xfe
  1521: 9a 85 08                 s0 = 0x8 - a1
  1524: 01                       fallthrough
      :                          @97
  1525: ae 56 1d                 jump @100 if s1 >=u s0
      :                          @98
  1528: 33 08                    a1 = 0
  1530: 33 07 00 00 01           a0 = 0x10000
  1535: 01                       fallthrough
      :                          @99
  1536: 82 10 38 01              ra = u64 [sp + 0x138]
  1540: 82 15 30 01              s0 = u64 [sp + 0x130]
  1544: 82 16 28 01              s1 = u64 [sp + 0x128]
  1548: 95 11 40 01              sp = sp + 0x140
  1552: 32 00                    ret
      :                          @100
  1554: 64 58                    a1 = s0
  1556: 7b 17 30                 u64 [sp + 0x30] = a0
  1559: 50 10 64 df 1a           ra = 100, jump @558
      :                          @101 [@dyn 50]
  1564: ab 56 09                 jump @103 if s1 != s0
      :                          @102
  1567: 33 08                    a1 = 0
  1569: 33 07                    a0 = 0
  1571: 28 5c                    jump @113
      :                          @103
  1573: 82 17 30                 a0 = u64 [sp + 0x30]
  1576: c8 57 07                 a0 = a0 + s0
  1579: 7d 78                    a1 = i8 [a0]
  1581: c9 56 05                 s0 = s1 - s0
  1584: 33 06 01                 s1 = 0x1
  1587: 59 08 37                 jump @110 if a1 >=s 0
      :                          @104
  1590: 84 88 ff 00              a1 = a1 & 0xff
  1594: 33 06 02                 s1 = 0x2
  1597: 53 28 c0 00 2d           jump @110 if a1 <u 192
      :                          @105
  1602: 33 06 03                 s1 = 0x3
  1605: 53 28 e0 00 25           jump @110 if a1 <u 224
      :                          @106
  1610: 33 06 04                 s1 = 0x4
  1613: 53 28 f0 00 1d           jump @110 if a1 <u 240
      :                          @107
  1618: 33 06 05                 s1 = 0x5
  1621: 53 28 f8 00 15           jump @110 if a1 <u 248
      :                          @108
  1626: 33 06 06                 s1 = 0x6
  1629: 53 28 fc 00 0d           jump @110 if a1 <u 252
      :                          @109
  1634: 88 88 fe 00              a1 = a1 <u 0xfe
  1638: 9a 86 08                 s1 = 0x8 - a1
  1641: 01                       fallthrough
      :                          @110
  1642: ac 65 18 05              jump @146 if s0 <u s1
      :                          @111
  1646: 64 68                    a1 = s1
  1648: 50 10 66 86 1a           ra = 102, jump @558
      :                          @112 [@dyn 51]
  1653: e4 65 08                 a1 = maxu(s0, s1)
  1656: c9 68 08                 a1 = a1 - s1
  1659: ac 78 7d ff              jump @98 if a1 <u a0
      :                          @113
  1663: e4 78 08                 a1 = maxu(a1, a0)
  1666: c9 78 08                 a1 = a1 - a0
  1669: 33 09 20                 a2 = 0x20
  1672: 33 07 00 00 01           a0 = 0x10000
  1677: ac 98 13 ff              jump @87 if a1 <u a2
      :                          @114
  1681: 49 11 18 ff ff fe        u64 [sp + 24] = 0xfffffffffffeffff
  1687: 33 08 61 00 03           a1 = 0x30061
  1692: 95 17 51                 a0 = sp + 0x51
  1695: 82 19 28                 a2 = u64 [sp + 0x28]
  1698: 50 10 68 f2 1a           ra = 104, jump @582
      :                          @115 [@dyn 52]
  1703: 33 05 80 10 03           s0 = 0x31080
  1708: 33 06 80 10 03           s1 = 0x31080
  1713: 95 18 51                 a1 = sp + 0x51
  1716: 33 09 20                 a2 = 0x20
  1719: 33 07 80 10 03           a0 = 0x31080
  1724: 50 10 6a b5 0f           ra = 106, jump @350
      :                          @116 [@dyn 53]
  1729: 81 17 4c                 a0 = i32 [sp + 0x4c]
  1732: 7a 67 20                 u32 [s1 + 0x20] = a0
  1735: 34 02 80 10 03           t0 = u8 [0x31080]
  1740: 34 03 81 10 03           t1 = u8 [0x31081]
  1745: 34 09 82 10 03           a2 = u8 [0x31082]
  1750: 34 0a 83 10 03           a3 = u8 [0x31083]
  1755: 34 0c 9f 10 03           a5 = u8 [0x3109f]
  1760: 34 0b 84 10 03           a4 = u8 [0x31084]
  1765: 34 06 9e 10 03           s1 = u8 [0x3109e]
  1770: 34 07 9d 10 03           a0 = u8 [0x3109d]
  1775: 78 1c 90 00              u8 [sp + 0x90] = a5
  1779: 34 0c 9c 10 03           a5 = u8 [0x3109c]
  1784: 78 16 8f 00              u8 [sp + 0x8f] = s1
  1788: 34 06 9b 10 03           s1 = u8 [0x3109b]
  1793: 78 17 8e 00              u8 [sp + 0x8e] = a0
  1797: 34 07 9a 10 03           a0 = u8 [0x3109a]
  1802: 78 1c 8d 00              u8 [sp + 0x8d] = a5
  1806: 34 0c 99 10 03           a5 = u8 [0x31099]
  1811: 78 16 8c 00              u8 [sp + 0x8c] = s1
  1815: 34 06 98 10 03           s1 = u8 [0x31098]
  1820: 78 17 8b 00              u8 [sp + 0x8b] = a0
  1824: 34 07 97 10 03           a0 = u8 [0x31097]
  1829: 78 1c 8a 00              u8 [sp + 0x8a] = a5
  1833: 34 0c 96 10 03           a5 = u8 [0x31096]
  1838: 78 16 89 00              u8 [sp + 0x89] = s1
  1842: 34 06 95 10 03           s1 = u8 [0x31095]
  1847: 78 17 88 00              u8 [sp + 0x88] = a0
  1851: 34 07 94 10 03           a0 = u8 [0x31094]
  1856: 78 1c 87 00              u8 [sp + 0x87] = a5
  1860: 34 0c 93 10 03           a5 = u8 [0x31093]
  1865: 78 16 86 00              u8 [sp + 0x86] = s1
  1869: 34 06 92 10 03           s1 = u8 [0x31092]
  1874: 78 17 85 00              u8 [sp + 0x85] = a0
  1878: 34 07 91 10 03           a0 = u8 [0x31091]
  1883: 78 1c 84 00              u8 [sp + 0x84] = a5
  1887: 34 0c 90 10 03           a5 = u8 [0x31090]
  1892: 78 16 83 00              u8 [sp + 0x83] = s1
  1896: 34 06 8f 10 03           s1 = u8 [0x3108f]
  1901: 78 17 82 00              u8 [sp + 0x82] = a0
  1905: 34 07 8e 10 03           a0 = u8 [0x3108e]
  1910: 78 1c 81 00              u8 [sp + 0x81] = a5
  1914: 34 0c 8d 10 03           a5 = u8 [0x3108d]
  1919: 78 16 80 00              u8 [sp + 0x80] = s1
  1923: 34 06 8c 10 03           s1 = u8 [0x3108c]
  1928: 78 17 7f                 u8 [sp + 0x7f] = a0
  1931: 34 07 8b 10 03           a0 = u8 [0x3108b]
  1936: 78 1c 7e                 u8 [sp + 0x7e] = a5
  1939: 34 0c 8a 10 03           a5 = u8 [0x3108a]
  1944: 78 16 7d                 u8 [sp + 0x7d] = s1
  1947: 34 06 89 10 03           s1 = u8 [0x31089]
  1952: 78 17 7c                 u8 [sp + 0x7c] = a0
  1955: 34 07 87 10 03           a0 = u8 [0x31087]
  1960: 78 1c 7b                 u8 [sp + 0x7b] = a5
  1963: 34 0c 88 10 03           a5 = u8 [0x31088]
  1968: 78 16 7a                 u8 [sp + 0x7a] = s1
  1971: 34 06 86 10 03           s1 = u8 [0x31086]
  1976: 34 05 85 10 03           s0 = u8 [0x31085]
  1981: 78 1c 79                 u8 [sp + 0x79] = a5
  1984: 78 17 78                 u8 [sp + 0x78] = a0
  1987: 78 16 77                 u8 [sp + 0x77] = s1
  1990: 78 15 76                 u8 [sp + 0x76] = s0
  1993: 33 05                    s0 = 0
  1995: 78 1b 75                 u8 [sp + 0x75] = a4
  1998: 78 1a 74                 u8 [sp + 0x74] = a3
  2001: 78 19 73                 u8 [sp + 0x73] = a2
  2004: 78 13 72                 u8 [sp + 0x72] = t1
  2007: 78 12 71                 u8 [sp + 0x71] = t0
  2010: 49 11 28 29 5c 8f c2     u64 [sp + 40] = 0xffffffffc28f5c29
  2017: 49 11 20 14 ae 47 01     u64 [sp + 32] = 0x147ae14
  2024: 33 07 0e                 a0 = 0xe
  2027: 7b 17 10                 u64 [sp + 0x10] = a0
  2030: 33 07 78 00 01           a0 = 0x10078
  2035: 7b 17 08                 u64 [sp + 0x8] = a0
  2038: 33 07 b0 1a 03           a0 = 0x31ab0
  2043: 95 77 00 00 01           a0 = a0 + 0x10000
  2048: 7b 17                    u64 [sp] = a0
  2050: 28 0f 01                 jump @119
      :                          @117
  2053: 82 15 30                 s0 = u64 [sp + 0x30]
  2056: 83 55 01                 i32 s0 = s0 + 0x1
  2059: 95 17 f0 00              a0 = sp + 0xf0
  2063: 95 18 71                 a1 = sp + 0x71
  2066: 33 09 20                 a2 = 0x20
  2069: 50 10 6c 7f 19           ra = 108, jump @582
      :                          @118 [@dyn 54]
  2074: 7c 18 0f 01              a1 = u8 [sp + 0x10f]
  2078: 7c 17 f1 00              a0 = u8 [sp + 0xf1]
  2082: 7c 19 0e 01              a2 = u8 [sp + 0x10e]
  2086: 7c 1a 0d 01              a3 = u8 [sp + 0x10d]
  2090: 78 18 90 00              u8 [sp + 0x90] = a1
  2094: 7c 18 0c 01              a1 = u8 [sp + 0x10c]
  2098: 78 19 8f 00              u8 [sp + 0x8f] = a2
  2102: 7c 19 0b 01              a2 = u8 [sp + 0x10b]
  2106: 78 1a 8e 00              u8 [sp + 0x8e] = a3
  2110: 7c 1a 0a 01              a3 = u8 [sp + 0x10a]
  2114: 78 18 8d 00              u8 [sp + 0x8d] = a1
  2118: 7c 18 09 01              a1 = u8 [sp + 0x109]
  2122: 78 19 8c 00              u8 [sp + 0x8c] = a2
  2126: 7c 19 08 01              a2 = u8 [sp + 0x108]
  2130: 78 1a 8b 00              u8 [sp + 0x8b] = a3
  2134: 7c 1a 07 01              a3 = u8 [sp + 0x107]
  2138: 78 18 8a 00              u8 [sp + 0x8a] = a1
  2142: 7c 18 06 01              a1 = u8 [sp + 0x106]
  2146: 78 19 89 00              u8 [sp + 0x89] = a2
  2150: 7c 19 05 01              a2 = u8 [sp + 0x105]
  2154: 78 1a 88 00              u8 [sp + 0x88] = a3
  2158: 7c 1a 04 01              a3 = u8 [sp + 0x104]
  2162: 78 18 87 00              u8 [sp + 0x87] = a1
  2166: 7c 18 03 01              a1 = u8 [sp + 0x103]
  2170: 78 19 86 00              u8 [sp + 0x86] = a2
  2174: 7c 19 02 01              a2 = u8 [sp + 0x102]
  2178: 78 1a 85 00              u8 [sp + 0x85] = a3
  2182: 7c 1a 01 01              a3 = u8 [sp + 0x101]
  2186: 78 18 84 00              u8 [sp + 0x84] = a1
  2190: 7c 18 00 01              a1 = u8 [sp + 0x100]
  2194: 78 19 83 00              u8 [sp + 0x83] = a2
  2198: 7c 19 ff 00              a2 = u8 [sp + 0xff]
  2202: 78 1a 82 00              u8 [sp + 0x82] = a3
  2206: 7c 1a fe 00              a3 = u8 [sp + 0xfe]
  2210: 78 18 81 00              u8 [sp + 0x81] = a1
  2214: 7c 18 fd 00              a1 = u8 [sp + 0xfd]
  2218: 78 19 80 00              u8 [sp + 0x80] = a2
  2222: 7c 19 fc 00              a2 = u8 [sp + 0xfc]
  2226: 78 1a 7f                 u8 [sp + 0x7f] = a3
  2229: 7c 1a fb 00              a3 = u8 [sp + 0xfb]
  2233: 78 18 7e                 u8 [sp + 0x7e] = a1
  2236: 7c 18 fa 00              a1 = u8 [sp + 0xfa]
  2240: 78 19 7d                 u8 [sp + 0x7d] = a2
  2243: 7c 19 f9 00              a2 = u8 [sp + 0xf9]
  2247: 78 1a 7c                 u8 [sp + 0x7c] = a3
  2250: 7c 1a f8 00              a3 = u8 [sp + 0xf8]
  2254: 78 18 7b                 u8 [sp + 0x7b] = a1
  2257: 7c 18 f7 00              a1 = u8 [sp + 0xf7]
  2261: 78 19 7a                 u8 [sp + 0x7a] = a2
  2264: 7c 19 f6 00              a2 = u8 [sp + 0xf6]
  2268: 78 1a 79                 u8 [sp + 0x79] = a3
  2271: 7c 1a f5 00              a3 = u8 [sp + 0xf5]
  2275: 78 18 78                 u8 [sp + 0x78] = a1
  2278: 7c 18 f4 00              a1 = u8 [sp + 0xf4]
  2282: 78 19 77                 u8 [sp + 0x77] = a2
  2285: 7c 19 f3 00              a2 = u8 [sp + 0xf3]
  2289: 78 1a 76                 u8 [sp + 0x76] = a3
  2292: 7c 1a f2 00              a3 = u8 [sp + 0xf2]
  2296: 78 18 75                 u8 [sp + 0x75] = a1
  2299: 7c 18 f0 00              a1 = u8 [sp + 0xf0]
  2303: 78 19 74                 u8 [sp + 0x74] = a2
  2306: 78 1a 73                 u8 [sp + 0x73] = a3
  2309: 78 17 72                 u8 [sp + 0x72] = a0
  2312: 78 18 71                 u8 [sp + 0x71] = a1
  2315: 51 25 e8 03 9d 00        jump @129 if s0 == 1000
      :                          @119
  2321: 82 17 28                 a0 = u64 [sp + 0x28]
  2324: ca 75 07                 a0 = s0 * a0
  2327: a0 77 03                 i32 a0 = a0 >>r 0x3
  2330: 7b 15 30                 u64 [sp + 0x30] = s0
  2333: 7a 15 e0 00              u32 [sp + 0xe0] = s0
  2337: 82 18 20                 a1 = u64 [sp + 0x20]
  2340: ac 78 e1 fe              jump @117 if a1 <u a0
      :                          @120
  2344: 95 17 e0 00              a0 = sp + 0xe0
  2348: 7b 17 98 00              u64 [sp + 0x98] = a0
  2352: 82 17 10                 a0 = u64 [sp + 0x10]
  2355: 7b 17 a0 00              u64 [sp + 0xa0] = a0
  2359: 82 17 08                 a0 = u64 [sp + 0x8]
  2362: 7b 17 f0 00              u64 [sp + 0xf0] = a0
  2366: 49 21 f8 00 01           u64 [sp + 248] = 0x1
  2371: 49 21 10 01              u64 [sp + 272] = 0
  2375: 95 18 98 00              a1 = sp + 0x98
  2379: 7b 18 00 01              u64 [sp + 0x100] = a1
  2383: 49 21 08 01 01           u64 [sp + 264] = 0x1
  2388: 95 17 b0 00              a0 = sp + 0xb0
  2392: 95 18 f0 00              a1 = sp + 0xf0
  2396: 50 10 6e 9b 0a           ra = 110, jump @300
      :                          @121 [@dyn 55]
  2401: 82 15 b8 00              s0 = u64 [sp + 0xb8]
  2405: 82 1b c0 00              a4 = u64 [sp + 0xc0]
  2409: 82 16 b0 00              s1 = u64 [sp + 0xb0]
  2413: 33 07 02                 a0 = 0x2
  2416: 33 08                    a1 = 0
  2418: 33 09                    a2 = 0
  2420: 64 5a                    a3 = s0
  2422: 33 00 70                 ra = 0x70
  2425: 0a 64                    ecalli 100 // 'log'
  2427: 01                       fallthrough
      :                          @122 [@dyn 56]
  2428: 82 1b                    a4 = u64 [sp]
  2430: 82 17 18                 a0 = u64 [sp + 0x18]
  2433: c8 67 07                 a0 = a0 + s1
  2436: 53 37 00 00 ff 81 fe     jump @117 if a0 <u 4294901760
      :                          @123
  2443: 82 b7                    a0 = u64 [a4]
  2445: c9 7b 08                 a1 = a4 - a0
  2448: ab 58 75 fe              jump @117 if a1 != s0
      :                          @124
  2452: c9 67 08                 a1 = a0 - s1
  2455: 01                       fallthrough
      :                          @125
  2456: 82 b9                    a2 = u64 [a4]
  2458: ab 79 f1                 jump @123 if a2 != a0
      :                          @126
  2461: 7b b8                    u64 [a4] = a1
  2463: 33 0a                    a3 = 0
  2465: 01                       fallthrough
      :                          @127
  2466: ab 79 e9                 jump @123 if a2 != a0
      :                          @128
  2469: 28 60 fe                 jump @117
      :                          @129
  2472: 95 17 38                 a0 = sp + 0x38
  2475: 7b 17 e0 00              u64 [sp + 0xe0] = a0
  2479: 33 07 06                 a0 = 0x6
  2482: 7b 17 e8 00              u64 [sp + 0xe8] = a0
  2486: 49 21 f0 00 02           u64 [sp + 240] = 0x2
  2491: 49 21 00 01 02           u64 [sp + 256] = 0x2
  2496: 49 21 10 01              u64 [sp + 272] = 0
  2500: 33 0b 01                 a4 = 0x1
  2503: 14 07 20 00 00 00 10 00 00 00 a0 = 0x1000000020
  2513: 7b 17 28                 u64 [sp + 0x28] = a0
  2516: 7b 17 18 01              u64 [sp + 0x118] = a0
  2520: 7c 17 91 00              a0 = u8 [sp + 0x91]
  2524: 7c 18 92 00              a1 = u8 [sp + 0x92]
  2528: 7c 19 93 00              a2 = u8 [sp + 0x93]
  2532: 46 21 20 01 03           u8 [sp + 288] = 0x3
  2537: 78 17 21 01              u8 [sp + 0x121] = a0
  2541: 78 18 22 01              u8 [sp + 0x122] = a1
  2545: 78 19 23 01              u8 [sp + 0x123] = a2
  2549: 7c 17 94 00              a0 = u8 [sp + 0x94]
  2553: 7c 18 95 00              a1 = u8 [sp + 0x95]
  2557: 7c 19 96 00              a2 = u8 [sp + 0x96]
  2561: 7c 1a 97 00              a3 = u8 [sp + 0x97]
  2565: 78 17 24 01              u8 [sp + 0x124] = a0
  2569: 78 18 25 01              u8 [sp + 0x125] = a1
  2573: 78 19 26 01              u8 [sp + 0x126] = a2
  2577: 78 1a 27 01              u8 [sp + 0x127] = a3
  2581: 33 07 20 00 01           a0 = 0x10020
  2586: 7b 17 b0 00              u64 [sp + 0xb0] = a0
  2590: 7b 1b b8 00              u64 [sp + 0xb8] = a4
  2594: 95 17 f0 00              a0 = sp + 0xf0
  2598: 7b 17 d0 00              u64 [sp + 0xd0] = a0
  2602: 7b 1b d8 00              u64 [sp + 0xd8] = a4
  2606: 95 17 e0 00              a0 = sp + 0xe0
  2610: 7b 17 c0 00              u64 [sp + 0xc0] = a0
  2614: 7b 1b c8 00              u64 [sp + 0xc8] = a4
  2618: 95 17 98 00              a0 = sp + 0x98
  2622: 95 18 b0 00              a1 = sp + 0xb0
  2626: 50 10 72 b5 09           ra = 114, jump @300
      :                          @130 [@dyn 57]
  2631: 82 15 a0 00              s0 = u64 [sp + 0xa0]
  2635: 82 1b a8 00              a4 = u64 [sp + 0xa8]
  2639: 82 16 98 00              s1 = u64 [sp + 0x98]
  2643: 33 07 02                 a0 = 0x2
  2646: 33 08                    a1 = 0
  2648: 33 09                    a2 = 0
  2650: 64 5a                    a3 = s0
  2652: 33 00 74                 ra = 0x74
  2655: 0a 64                    ecalli 100 // 'log'
  2657: 01                       fallthrough
      :                          @131 [@dyn 58]
  2658: 82 17 18                 a0 = u64 [sp + 0x18]
  2661: c8 67 07                 a0 = a0 + s1
  2664: 53 37 00 00 ff 27        jump @137 if a0 <u 4294901760
      :                          @132
  2670: 33 07 b0 1a 03           a0 = 0x31ab0
  2675: 95 77 00 00 01           a0 = a0 + 0x10000
  2680: 01                       fallthrough
      :                          @133
  2681: 82 78                    a1 = u64 [a0]
  2683: c9 87 09                 a2 = a0 - a1
  2686: ab 59 11                 jump @137 if a2 != s0
      :                          @134
  2689: c9 68 09                 a2 = a1 - s1
  2692: 01                       fallthrough
      :                          @135
  2693: 82 7a                    a3 = u64 [a0]
  2695: ab 8a f2                 jump @133 if a3 != a1
      :                          @136
  2698: 7b 79                    u64 [a0] = a2
  2700: 33 0b                    a4 = 0
  2702: 01                       fallthrough
      :                          @137
  2703: 33 07 80 10 03           a0 = 0x31080
  2708: 7b 17 30                 u64 [sp + 0x30] = a0
  2711: 7b 17 e0 00              u64 [sp + 0xe0] = a0
  2715: 33 07 12                 a0 = 0x12
  2718: 7b 17 e8 00              u64 [sp + 0xe8] = a0
  2722: 49 21 f0 00 02           u64 [sp + 240] = 0x2
  2727: 49 21 00 01 02           u64 [sp + 256] = 0x2
  2732: 49 21 10 01              u64 [sp + 272] = 0
  2736: 82 17 28                 a0 = u64 [sp + 0x28]
  2739: 7b 17 18 01              u64 [sp + 0x118] = a0
  2743: 7c 17 91 00              a0 = u8 [sp + 0x91]
  2747: 7c 18 92 00              a1 = u8 [sp + 0x92]
  2751: 7c 19 93 00              a2 = u8 [sp + 0x93]
  2755: 46 21 20 01 03           u8 [sp + 288] = 0x3
  2760: 78 17 21 01              u8 [sp + 0x121] = a0
  2764: 78 18 22 01              u8 [sp + 0x122] = a1
  2768: 78 19 23 01              u8 [sp + 0x123] = a2
  2772: 7c 17 94 00              a0 = u8 [sp + 0x94]
  2776: 7c 18 95 00              a1 = u8 [sp + 0x95]
  2780: 7c 19 96 00              a2 = u8 [sp + 0x96]
  2784: 7c 1a 97 00              a3 = u8 [sp + 0x97]
  2788: 78 17 24 01              u8 [sp + 0x124] = a0
  2792: 78 18 25 01              u8 [sp + 0x125] = a1
  2796: 78 19 26 01              u8 [sp + 0x126] = a2
  2800: 78 1a 27 01              u8 [sp + 0x127] = a3
  2804: 33 07 50 00 01           a0 = 0x10050
  2809: 7b 17 b0 00              u64 [sp + 0xb0] = a0
  2813: 49 21 b8 00 01           u64 [sp + 184] = 0x1
  2818: 95 18 f0 00              a1 = sp + 0xf0
  2822: 7b 18 d0 00              u64 [sp + 0xd0] = a1
  2826: 49 21 d8 00 01           u64 [sp + 216] = 0x1
  2831: 95 18 e0 00              a1 = sp + 0xe0
  2835: 7b 18 c0 00              u64 [sp + 0xc0] = a1
  2839: 49 21 c8 00 01           u64 [sp + 200] = 0x1
  2844: 95 17 98 00              a0 = sp + 0x98
  2848: 95 18 b0 00              a1 = sp + 0xb0
  2852: 50 10 76 d3 08           ra = 118, jump @300
      :                          @138 [@dyn 59]
  2857: 82 15 a0 00              s0 = u64 [sp + 0xa0]
  2861: 82 1b a8 00              a4 = u64 [sp + 0xa8]
  2865: 82 16 98 00              s1 = u64 [sp + 0x98]
  2869: 33 07 02                 a0 = 0x2
  2872: 33 08                    a1 = 0
  2874: 33 09                    a2 = 0
  2876: 64 5a                    a3 = s0
  2878: 33 00 78                 ra = 0x78
  2881: 0a 64                    ecalli 100 // 'log'
  2883: 01                       fallthrough
      :                          @139 [@dyn 60]
  2884: 82 17 18                 a0 = u64 [sp + 0x18]
  2887: c8 67 07                 a0 = a0 + s1
  2890: 53 37 00 00 ff 2f        jump @145 if a0 <u 4294901760
      :                          @140
  2896: 33 07 b0 1a 03           a0 = 0x31ab0
  2901: 95 77 00 00 01           a0 = a0 + 0x10000
  2906: 01                       fallthrough
      :                          @141
  2907: 82 78                    a1 = u64 [a0]
  2909: c9 87 09                 a2 = a0 - a1
  2912: ab 59 19                 jump @145 if a2 != s0
      :                          @142
  2915: c9 68 09                 a2 = a1 - s1
  2918: 01                       fallthrough
      :                          @143
  2919: 82 7a                    a3 = u64 [a0]
  2921: ab 8a f2                 jump @141 if a3 != a1
      :                          @144
  2924: 7b 79                    u64 [a0] = a2
  2926: 33 0b                    a4 = 0
  2928: 33 08 24                 a1 = 0x24
  2931: 82 17 30                 a0 = u64 [sp + 0x30]
  2934: 28 8a fa                 jump @99
      :                          @145
  2937: 33 08 24                 a1 = 0x24
  2940: 82 17 30                 a0 = u64 [sp + 0x30]
  2943: 28 81 fa                 jump @99
      :                          @146
  2946: 00                       trap
      :                          @147 [export #1: 'accumulate']
  2947: 95 11 70 ff              sp = sp + 0xffffffffffffff70
  2951: 7b 10 88 00              u64 [sp + 0x88] = ra
  2955: 7b 15 80 00              u64 [sp + 0x80] = s0
  2959: 7b 16 78                 u64 [sp + 0x78] = s1
  2962: 64 7a                    a3 = a0
  2964: 33 07 00 00 01           a0 = 0x10000
  2969: 51 08 a8 00              jump @168 if a1 == 0
      :                          @148
  2973: 64 86                    s1 = a1
  2975: 7d a8                    a1 = i8 [a3]
  2977: 33 05 01                 s0 = 0x1
  2980: 59 08 37                 jump @155 if a1 >=s 0
      :                          @149
  2983: 84 89 ff 00              a2 = a1 & 0xff
  2987: 33 05 02                 s0 = 0x2
  2990: 53 29 c0 00 2d           jump @155 if a2 <u 192
      :                          @150
  2995: 33 05 03                 s0 = 0x3
  2998: 53 29 e0 00 25           jump @155 if a2 <u 224
      :                          @151
  3003: 33 05 04                 s0 = 0x4
  3006: 53 29 f0 00 1d           jump @155 if a2 <u 240
      :                          @152
  3011: 33 05 05                 s0 = 0x5
  3014: 53 29 f8 00 15           jump @155 if a2 <u 248
      :                          @153
  3019: 33 05 06                 s0 = 0x6
  3022: 53 29 fc 00 0d           jump @155 if a2 <u 252
      :                          @154
  3027: 88 98 fe 00              a1 = a2 <u 0xfe
  3031: 9a 85 08                 s0 = 0x8 - a1
  3034: 01                       fallthrough
      :                          @155
  3035: ae 56 07                 jump @157 if s1 >=u s0
      :                          @156
  3038: 33 08                    a1 = 0
  3040: 28 61                    jump @168
      :                          @157
  3042: 64 a7                    a0 = a3
  3044: 64 58                    a1 = s0
  3046: 7b 1a 08                 u64 [sp + 0x8] = a3
  3049: 50 10 7a 0d 15           ra = 122, jump @558
      :                          @158 [@dyn 61]
  3054: aa 56 4b                 jump @167 if s1 == s0
      :                          @159
  3057: 82 17 08                 a0 = u64 [sp + 0x8]
  3060: c8 57 07                 a0 = a0 + s0
  3063: 7d 78                    a1 = i8 [a0]
  3065: c9 56 06                 s1 = s1 - s0
  3068: 33 05 01                 s0 = 0x1
  3071: 59 08 37                 jump @166 if a1 >=s 0
      :                          @160
  3074: 84 89 ff 00              a2 = a1 & 0xff
  3078: 33 05 02                 s0 = 0x2
  3081: 53 29 c0 00 2d           jump @166 if a2 <u 192
      :                          @161
  3086: 33 05 03                 s0 = 0x3
  3089: 53 29 e0 00 25           jump @166 if a2 <u 224
      :                          @162
  3094: 33 05 04                 s0 = 0x4
  3097: 53 29 f0 00 1d           jump @166 if a2 <u 240
      :                          @163
  3102: 33 05 05                 s0 = 0x5
  3105: 53 29 f8 00 15           jump @166 if a2 <u 248
      :                          @164
  3110: 33 05 06                 s0 = 0x6
  3113: 53 29 fc 00 0d           jump @166 if a2 <u 252
      :                          @165
  3118: 88 98 fe 00              a1 = a2 <u 0xfe
  3122: 9a 85 08                 s0 = 0x8 - a1
  3125: 01                       fallthrough
      :                          @166
  3126: ae 56 1c                 jump @169 if s1 >=u s0
      :                          @167
  3129: 33 08                    a1 = 0
  3131: 33 07 00 00 01           a0 = 0x10000
  3136: 01                       fallthrough
      :                          @168
  3137: 82 10 88 00              ra = u64 [sp + 0x88]
  3141: 82 15 80 00              s0 = u64 [sp + 0x80]
  3145: 82 16 78                 s1 = u64 [sp + 0x78]
  3148: 95 11 90 00              sp = sp + 0x90
  3152: 32 00                    ret
      :                          @169
  3154: 64 58                    a1 = s0
  3156: 7b 16 08                 u64 [sp + 0x8] = s1
  3159: 64 76                    s1 = a0
  3161: 50 10 7c 9d 14           ra = 124, jump @558
      :                          @170 [@dyn 62]
  3166: c8 65 07                 a0 = s0 + s1
  3169: 82 16 08                 s1 = u64 [sp + 0x8]
  3172: ab 56 0b                 jump @172 if s1 != s0
      :                          @171
  3175: 33 08                    a1 = 0
  3177: 33 00 7e                 ra = 0x7e
  3180: 28 8a 14                 jump @558
      :                          @172
  3183: 7d 79                    a2 = i8 [a0]
  3185: c9 56 06                 s1 = s1 - s0
  3188: 33 08 01                 a1 = 0x1
  3191: 59 09 44                 jump @179 if a2 >=s 0
      :                          @173
  3194: 84 99 ff 00              a2 = a2 & 0xff
  3198: 33 0a c0 00              a3 = 0xc0
  3202: 33 08 02                 a1 = 0x2
  3205: ac a9 36                 jump @179 if a2 <u a3
      :                          @174
  3208: 33 0a e0 00              a3 = 0xe0
  3212: 33 08 03                 a1 = 0x3
  3215: ac a9 2c                 jump @179 if a2 <u a3
      :                          @175
  3218: 33 0a f0 00              a3 = 0xf0
  3222: 33 08 04                 a1 = 0x4
  3225: ac a9 22                 jump @179 if a2 <u a3
      :                          @176
  3228: 33 0a f8 00              a3 = 0xf8
  3232: 33 08 05                 a1 = 0x5
  3235: ac a9 18                 jump @179 if a2 <u a3
      :                          @177
  3238: 33 0a fc 00              a3 = 0xfc
  3242: 33 08 06                 a1 = 0x6
  3245: ac a9 0e                 jump @179 if a2 <u a3
      :                          @178
  3248: 88 98 fe 00              a1 = a2 <u 0xfe
  3252: 33 09 08                 a2 = 0x8
  3255: c9 89 08                 a1 = a2 - a1
  3258: 01                       fallthrough
      :                          @179
  3259: ac 86 7e ff              jump @167 if s1 <u a1
      :                          @180
  3263: 50 10 7e 37 14           ra = 126, jump @558
      :                          @181 [@dyn 63]
  3268: 33 07 61 00 03           a0 = 0x30061
  3273: 33 09 08 10              a2 = 0x1008
  3277: 33 0a 0f                 a3 = 0xf
  3280: 33 08                    a1 = 0
  3282: 33 0b                    a4 = 0
  3284: 33 0c                    a5 = 0
  3286: 0a 01                    ecalli 1 // 'fetch'
  3288: 01                       fallthrough
      :                          @182
  3289: 7b 17 10                 u64 [sp + 0x10] = a0
  3292: 55 17 24 84 00           jump @193 if a0 >=u 36
      :                          @183
  3297: 95 17 10                 a0 = sp + 0x10
  3300: 7b 17 68                 u64 [sp + 0x68] = a0
  3303: 33 07 a6 00              a0 = 0xa6
  3307: 7b 17 70                 u64 [sp + 0x70] = a0
  3310: 33 07 00 01 01           a0 = 0x10100
  3315: 7b 17 38                 u64 [sp + 0x38] = a0
  3318: 49 11 40 02              u64 [sp + 64] = 0x2
  3322: 49 11 58                 u64 [sp + 88] = 0
  3325: 95 17 68                 a0 = sp + 0x68
  3328: 7b 17 48                 u64 [sp + 0x48] = a0
  3331: 49 11 50 01              u64 [sp + 80] = 0x1
  3335: 95 17 20                 a0 = sp + 0x20
  3338: 95 18 38                 a1 = sp + 0x38
  3341: 50 20 80 00 ea 06        ra = 128, jump @300
      :                          @184 [@dyn 64]
  3347: 82 15 28                 s0 = u64 [sp + 0x28]
  3350: 82 1b 30                 a4 = u64 [sp + 0x30]
  3353: 82 16 20                 s1 = u64 [sp + 0x20]
  3356: 33 07 02                 a0 = 0x2
  3359: 33 08                    a1 = 0
  3361: 33 09                    a2 = 0
  3363: 64 5a                    a3 = s0
  3365: 33 00 82 00              ra = 0x82
  3369: 0a 64                    ecalli 100 // 'log'
  3371: 01                       fallthrough
      :                          @185 [@dyn 65]
  3372: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
  3377: 53 38 00 00 ff 08 ff     jump @167 if a1 <u 4294901760
      :                          @186
  3384: 33 07 b0 1a 03           a0 = 0x31ab0
  3389: 95 77 00 00 01           a0 = a0 + 0x10000
  3394: 01                       fallthrough
      :                          @187
  3395: 82 78                    a1 = u64 [a0]
  3397: c9 87 09                 a2 = a0 - a1
  3400: ab 59 f1 fe              jump @167 if a2 != s0
      :                          @188
  3404: c9 68 09                 a2 = a1 - s1
  3407: 01                       fallthrough
      :                          @189
  3408: 82 7a                    a3 = u64 [a0]
  3410: ab 8a f1                 jump @187 if a3 != a1
      :                          @190
  3413: 7b 79                    u64 [a0] = a2
  3415: 33 0b                    a4 = 0
  3417: 01                       fallthrough
      :                          @191
  3418: ab 8a e9                 jump @187 if a3 != a1
      :                          @192
  3421: 28 dc fe                 jump @167
      :                          @193
  3424: 95 79 dc                 a2 = a0 + 0xffffffffffffffdc
  3427: 98 98 03                 a1 = a2 >> 0x3
  3430: 55 28 01 02 47 04        jump @242 if a1 >=u 513
      :                          @194
  3436: 33 0a 61 00 03           a3 = 0x30061
  3441: c8 a9 09                 a2 = a2 + a3
  3444: 7c 99                    a2 = u8 [a2]
  3446: 3b 09 80 10 03           u8 [0x31080] = a2
  3451: 95 7c dd                 a5 = a0 + 0xffffffffffffffdd
  3454: 98 c6 03                 s1 = a5 >> 0x3
  3457: 56 26 00 02 2c 04        jump @242 if s1 >u 512
      :                          @195
  3463: c8 ca 0a                 a3 = a3 + a5
  3466: 7c aa                    a3 = u8 [a3]
  3468: 95 7c de                 a5 = a0 + 0xffffffffffffffde
  3471: 98 c6 03                 s1 = a5 >> 0x3
  3474: 3b 0a 81 10 03           u8 [0x31081] = a3
  3479: 56 26 00 02 16 04        jump @242 if s1 >u 512
      :                          @196
  3485: 33 0a 61 00 03           a3 = 0x30061
  3490: c8 ac 0c                 a5 = a5 + a3
  3493: 7c c9                    a2 = u8 [a5]
  3495: 3b 09 82 10 03           u8 [0x31082] = a2
  3500: 95 7c df                 a5 = a0 + 0xffffffffffffffdf
  3503: 98 c6 03                 s1 = a5 >> 0x3
  3506: 56 26 00 02 fb 03        jump @242 if s1 >u 512
      :                          @197
  3512: c8 ca 0a                 a3 = a3 + a5
  3515: 7c aa                    a3 = u8 [a3]
  3517: 95 7c e0                 a5 = a0 + 0xffffffffffffffe0
  3520: 98 c6 03                 s1 = a5 >> 0x3
  3523: 3b 0a 83 10 03           u8 [0x31083] = a3
  3528: 56 26 00 02 e5 03        jump @242 if s1 >u 512
      :                          @198
  3534: 33 0a 61 00 03           a3 = 0x30061
  3539: c8 ac 0c                 a5 = a5 + a3
  3542: 7c c9                    a2 = u8 [a5]
  3544: 3b 09 84 10 03           u8 [0x31084] = a2
  3549: 95 7c e1                 a5 = a0 + 0xffffffffffffffe1
  3552: 98 c6 03                 s1 = a5 >> 0x3
  3555: 56 26 00 02 ca 03        jump @242 if s1 >u 512
      :                          @199
  3561: c8 ca 0a                 a3 = a3 + a5
  3564: 7c aa                    a3 = u8 [a3]
  3566: 95 7c e2                 a5 = a0 + 0xffffffffffffffe2
  3569: 98 c6 03                 s1 = a5 >> 0x3
  3572: 3b 0a 85 10 03           u8 [0x31085] = a3
  3577: 56 26 00 02 b4 03        jump @242 if s1 >u 512
      :                          @200
  3583: 33 0a 61 00 03           a3 = 0x30061
  3588: c8 ac 0c                 a5 = a5 + a3
  3591: 7c c9                    a2 = u8 [a5]
  3593: 3b 09 86 10 03           u8 [0x31086] = a2
  3598: 95 7c e3                 a5 = a0 + 0xffffffffffffffe3
  3601: 98 c6 03                 s1 = a5 >> 0x3
  3604: 56 26 00 02 99 03        jump @242 if s1 >u 512
      :                          @201
  3610: c8 ca 0a                 a3 = a3 + a5
  3613: 7c aa                    a3 = u8 [a3]
  3615: 95 7c e4                 a5 = a0 + 0xffffffffffffffe4
  3618: 98 c6 03                 s1 = a5 >> 0x3
  3621: 3b 0a 87 10 03           u8 [0x31087] = a3
  3626: 56 26 00 02 83 03        jump @242 if s1 >u 512
      :                          @202
  3632: 33 0a 61 00 03           a3 = 0x30061
  3637: c8 ac 0c                 a5 = a5 + a3
  3640: 7c c9                    a2 = u8 [a5]
  3642: 3b 09 88 10 03           u8 [0x31088] = a2
  3647: 95 7c e5                 a5 = a0 + 0xffffffffffffffe5
  3650: 98 c6 03                 s1 = a5 >> 0x3
  3653: 56 26 00 02 68 03        jump @242 if s1 >u 512
      :                          @203
  3659: c8 ca 0a                 a3 = a3 + a5
  3662: 7c aa                    a3 = u8 [a3]
  3664: 95 7c e6                 a5 = a0 + 0xffffffffffffffe6
  3667: 98 c6 03                 s1 = a5 >> 0x3
  3670: 3b 0a 89 10 03           u8 [0x31089] = a3
  3675: 56 26 00 02 52 03        jump @242 if s1 >u 512
      :                          @204
  3681: 33 0a 61 00 03           a3 = 0x30061
  3686: c8 ac 0c                 a5 = a5 + a3
  3689: 7c c9                    a2 = u8 [a5]
  3691: 3b 09 8a 10 03           u8 [0x3108a] = a2
  3696: 95 7c e7                 a5 = a0 + 0xffffffffffffffe7
  3699: 98 c6 03                 s1 = a5 >> 0x3
  3702: 56 26 00 02 37 03        jump @242 if s1 >u 512
      :                          @205
  3708: c8 ca 0a                 a3 = a3 + a5
  3711: 7c aa                    a3 = u8 [a3]
  3713: 95 7c e8                 a5 = a0 + 0xffffffffffffffe8
  3716: 98 c6 03                 s1 = a5 >> 0x3
  3719: 3b 0a 8b 10 03           u8 [0x3108b] = a3
  3724: 56 26 00 02 21 03        jump @242 if s1 >u 512
      :                          @206
  3730: 33 0a 61 00 03           a3 = 0x30061
  3735: c8 ac 0c                 a5 = a5 + a3
  3738: 7c c9                    a2 = u8 [a5]
  3740: 3b 09 8c 10 03           u8 [0x3108c] = a2
  3745: 95 7c e9                 a5 = a0 + 0xffffffffffffffe9
  3748: 98 c6 03                 s1 = a5 >> 0x3
  3751: 56 26 00 02 06 03        jump @242 if s1 >u 512
      :                          @207
  3757: c8 ca 0a                 a3 = a3 + a5
  3760: 7c aa                    a3 = u8 [a3]
  3762: 95 7c ea                 a5 = a0 + 0xffffffffffffffea
  3765: 98 c6 03                 s1 = a5 >> 0x3
  3768: 3b 0a 8d 10 03           u8 [0x3108d] = a3
  3773: 56 26 00 02 f0 02        jump @242 if s1 >u 512
      :                          @208
  3779: 33 0a 61 00 03           a3 = 0x30061
  3784: c8 ac 0c                 a5 = a5 + a3
  3787: 7c c9                    a2 = u8 [a5]
  3789: 3b 09 8e 10 03           u8 [0x3108e] = a2
  3794: 95 7c eb                 a5 = a0 + 0xffffffffffffffeb
  3797: 98 c6 03                 s1 = a5 >> 0x3
  3800: 56 26 00 02 d5 02        jump @242 if s1 >u 512
      :                          @209
  3806: c8 ca 0a                 a3 = a3 + a5
  3809: 7c aa                    a3 = u8 [a3]
  3811: 95 7c ec                 a5 = a0 + 0xffffffffffffffec
  3814: 98 c6 03                 s1 = a5 >> 0x3
  3817: 3b 0a 8f 10 03           u8 [0x3108f] = a3
  3822: 56 26 00 02 bf 02        jump @242 if s1 >u 512
      :                          @210
  3828: 33 0a 61 00 03           a3 = 0x30061
  3833: c8 ac 0c                 a5 = a5 + a3
  3836: 7c c9                    a2 = u8 [a5]
  3838: 3b 09 90 10 03           u8 [0x31090] = a2
  3843: 95 7c ed                 a5 = a0 + 0xffffffffffffffed
  3846: 98 c6 03                 s1 = a5 >> 0x3
  3849: 56 26 00 02 a4 02        jump @242 if s1 >u 512
      :                          @211
  3855: c8 ca 0a                 a3 = a3 + a5
  3858: 7c aa                    a3 = u8 [a3]
  3860: 95 7c ee                 a5 = a0 + 0xffffffffffffffee
  3863: 98 c6 03                 s1 = a5 >> 0x3
  3866: 3b 0a 91 10 03           u8 [0x31091] = a3
  3871: 56 26 00 02 8e 02        jump @242 if s1 >u 512
      :                          @212
  3877: 33 0a 61 00 03           a3 = 0x30061
  3882: c8 ac 0c                 a5 = a5 + a3
  3885: 7c c9                    a2 = u8 [a5]
  3887: 3b 09 92 10 03           u8 [0x31092] = a2
  3892: 95 7c ef                 a5 = a0 + 0xffffffffffffffef
  3895: 98 c6 03                 s1 = a5 >> 0x3
  3898: 56 26 00 02 73 02        jump @242 if s1 >u 512
      :                          @213
  3904: c8 ca 0a                 a3 = a3 + a5
  3907: 7c aa                    a3 = u8 [a3]
  3909: 95 7c f0                 a5 = a0 + 0xfffffffffffffff0
  3912: 98 c6 03                 s1 = a5 >> 0x3
  3915: 3b 0a 93 10 03           u8 [0x31093] = a3
  3920: 56 26 00 02 5d 02        jump @242 if s1 >u 512
      :                          @214
  3926: 33 0a 61 00 03           a3 = 0x30061
  3931: c8 ac 0c                 a5 = a5 + a3
  3934: 7c c9                    a2 = u8 [a5]
  3936: 3b 09 94 10 03           u8 [0x31094] = a2
  3941: 95 7c f1                 a5 = a0 + 0xfffffffffffffff1
  3944: 98 c6 03                 s1 = a5 >> 0x3
  3947: 56 26 00 02 42 02        jump @242 if s1 >u 512
      :                          @215
  3953: c8 ca 0a                 a3 = a3 + a5
  3956: 7c aa                    a3 = u8 [a3]
  3958: 95 7c f2                 a5 = a0 + 0xfffffffffffffff2
  3961: 98 c6 03                 s1 = a5 >> 0x3
  3964: 3b 0a 95 10 03           u8 [0x31095] = a3
  3969: 56 26 00 02 2c 02        jump @242 if s1 >u 512
      :                          @216
  3975: 33 0a 61 00 03           a3 = 0x30061
  3980: c8 ac 0c                 a5 = a5 + a3
  3983: 7c c9                    a2 = u8 [a5]
  3985: 3b 09 96 10 03           u8 [0x31096] = a2
  3990: 95 7c f3                 a5 = a0 + 0xfffffffffffffff3
  3993: 98 c6 03                 s1 = a5 >> 0x3
  3996: 56 26 00 02 11 02        jump @242 if s1 >u 512
      :                          @217
  4002: c8 ca 0a                 a3 = a3 + a5
  4005: 7c aa                    a3 = u8 [a3]
  4007: 95 7c f4                 a5 = a0 + 0xfffffffffffffff4
  4010: 98 c6 03                 s1 = a5 >> 0x3
  4013: 3b 0a 97 10 03           u8 [0x31097] = a3
  4018: 56 26 00 02 fb 01        jump @242 if s1 >u 512
      :                          @218
  4024: 33 0a 61 00 03           a3 = 0x30061
  4029: c8 ac 0c                 a5 = a5 + a3
  4032: 7c c9                    a2 = u8 [a5]
  4034: 3b 09 98 10 03           u8 [0x31098] = a2
  4039: 95 7c f5                 a5 = a0 + 0xfffffffffffffff5
  4042: 98 c6 03                 s1 = a5 >> 0x3
  4045: 56 26 00 02 e0 01        jump @242 if s1 >u 512
      :                          @219
  4051: c8 ca 0a                 a3 = a3 + a5
  4054: 7c aa                    a3 = u8 [a3]
  4056: 95 7c f6                 a5 = a0 + 0xfffffffffffffff6
  4059: 98 c6 03                 s1 = a5 >> 0x3
  4062: 3b 0a 99 10 03           u8 [0x31099] = a3
  4067: 56 26 00 02 ca 01        jump @242 if s1 >u 512
      :                          @220
  4073: 33 0a 61 00 03           a3 = 0x30061
  4078: c8 ac 0c                 a5 = a5 + a3
  4081: 7c c9                    a2 = u8 [a5]
  4083: 3b 09 9a 10 03           u8 [0x3109a] = a2
  4088: 95 7c f7                 a5 = a0 + 0xfffffffffffffff7
  4091: 98 c6 03                 s1 = a5 >> 0x3
  4094: 56 26 00 02 af 01        jump @242 if s1 >u 512
      :                          @221
  4100: c8 ca 0a                 a3 = a3 + a5
  4103: 7c aa                    a3 = u8 [a3]
  4105: 95 7c f8                 a5 = a0 + 0xfffffffffffffff8
  4108: 98 c6 03                 s1 = a5 >> 0x3
  4111: 3b 0a 9b 10 03           u8 [0x3109b] = a3
  4116: 56 26 00 02 99 01        jump @242 if s1 >u 512
      :                          @222
  4122: 33 0a 61 00 03           a3 = 0x30061
  4127: c8 ac 0c                 a5 = a5 + a3
  4130: 7c c9                    a2 = u8 [a5]
  4132: 3b 09 9c 10 03           u8 [0x3109c] = a2
  4137: 95 7c f9                 a5 = a0 + 0xfffffffffffffff9
  4140: 98 c6 03                 s1 = a5 >> 0x3
  4143: 56 26 00 02 7e 01        jump @242 if s1 >u 512
      :                          @223
  4149: c8 ca 0a                 a3 = a3 + a5
  4152: 7c aa                    a3 = u8 [a3]
  4154: 95 7c fa                 a5 = a0 + 0xfffffffffffffffa
  4157: 98 c6 03                 s1 = a5 >> 0x3
  4160: 3b 0a 9d 10 03           u8 [0x3109d] = a3
  4165: 56 26 00 02 68 01        jump @242 if s1 >u 512
      :                          @224
  4171: 33 0a 61 00 03           a3 = 0x30061
  4176: c8 ac 0c                 a5 = a5 + a3
  4179: 7c c9                    a2 = u8 [a5]
  4181: 3b 09 9e 10 03           u8 [0x3109e] = a2
  4186: 95 7c fb                 a5 = a0 + 0xfffffffffffffffb
  4189: 98 c6 03                 s1 = a5 >> 0x3
  4192: 56 26 00 02 4d 01        jump @242 if s1 >u 512
      :                          @225
  4198: c8 ca 0a                 a3 = a3 + a5
  4201: 7c aa                    a3 = u8 [a3]
  4203: 95 7c fc                 a5 = a0 + 0xfffffffffffffffc
  4206: 98 c6 03                 s1 = a5 >> 0x3
  4209: 3b 0a 9f 10 03           u8 [0x3109f] = a3
  4214: 56 26 00 02 37 01        jump @242 if s1 >u 512
      :                          @226
  4220: 33 0a 61 00 03           a3 = 0x30061
  4225: c8 ac 0c                 a5 = a5 + a3
  4228: 7c c9                    a2 = u8 [a5]
  4230: 3b 09 a0 10 03           u8 [0x310a0] = a2
  4235: 95 7c fd                 a5 = a0 + 0xfffffffffffffffd
  4238: 98 c6 03                 s1 = a5 >> 0x3
  4241: 56 26 00 02 1c 01        jump @242 if s1 >u 512
      :                          @227
  4247: c8 ca 0a                 a3 = a3 + a5
  4250: 7c ac                    a5 = u8 [a3]
  4252: 95 7a fe                 a3 = a0 + 0xfffffffffffffffe
  4255: 98 a6 03                 s1 = a3 >> 0x3
  4258: 3b 0c a1 10 03           u8 [0x310a1] = a5
  4263: 56 26 00 02 06 01        jump @242 if s1 >u 512
      :                          @228
  4269: 33 08 61 00 03           a1 = 0x30061
  4274: c8 8a 0a                 a3 = a3 + a1
  4277: 7c a9                    a2 = u8 [a3]
  4279: 33 0c 80 10 03           a5 = 0x31080
  4284: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  4287: 98 7a 03                 a3 = a0 >> 0x3
  4290: 33 0b 00 02              a4 = 0x200
  4294: 7b 1c 08                 u64 [sp + 0x8] = a5
  4297: 3b 09 a2 10 03           u8 [0x310a2] = a2
  4302: ac ab de 00              jump @241 if a4 <u a3
      :                          @229
  4306: c8 87 07                 a0 = a0 + a1
  4309: 7c 77                    a0 = u8 [a0]
  4311: 82 18 08                 a1 = u64 [sp + 0x8]
  4314: 78 87 23                 u8 [a1 + 0x23] = a0
  4317: 80 87 20                 a0 = u32 [a1 + 0x20]
  4320: 7b 17                    u64 [sp] = a0
  4322: 7a 17 1c                 u32 [sp + 0x1c] = a0
  4325: 33 05 a4 10 03           s0 = 0x310a4
  4330: 33 06 50                 s1 = 0x50
  4333: 01                       fallthrough
      :                          @230
  4334: 33 09 20                 a2 = 0x20
  4337: 64 57                    a0 = s0
  4339: 82 18 08                 a1 = u64 [sp + 0x8]
  4342: 50 20 84 00 7b 05        ra = 132, jump @350
      :                          @231 [@dyn 66]
  4348: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  4351: 95 55 20                 s0 = s0 + 0x20
  4354: 52 06 ec                 jump @230 if s1 != 0
      :                          @232
  4357: 33 05 a4 10 03           s0 = 0x310a4
  4362: 33 07                    a0 = 0
  4364: 33 08 a4 10 03           a1 = 0x310a4
  4369: 82 16                    s1 = u64 [sp]
  4371: 64 69                    a2 = s1
  4373: 0a 0f                    ecalli 15 // 'assign'
  4375: 33 07 01                 a0 = 0x1
  4378: 64 58                    a1 = s0
  4380: 64 69                    a2 = s1
  4382: 0a 0f                    ecalli 15 // 'assign'
  4384: 95 17 1c                 a0 = sp + 0x1c
  4387: 7b 17 68                 u64 [sp + 0x68] = a0
  4390: 33 07 d4 00              a0 = 0xd4
  4394: 7b 17 70                 u64 [sp + 0x70] = a0
  4397: 33 07 a8 00 01           a0 = 0x100a8
  4402: 7b 17 38                 u64 [sp + 0x38] = a0
  4405: 49 11 40 01              u64 [sp + 64] = 0x1
  4409: 49 11 58                 u64 [sp + 88] = 0
  4412: 95 17 68                 a0 = sp + 0x68
  4415: 7b 17 48                 u64 [sp + 0x48] = a0
  4418: 49 11 50 01              u64 [sp + 80] = 0x1
  4422: 95 17 20                 a0 = sp + 0x20
  4425: 95 18 38                 a1 = sp + 0x38
  4428: 50 20 86 00 ab 02        ra = 134, jump @300
      :                          @233 [@dyn 67]
  4434: 82 15 28                 s0 = u64 [sp + 0x28]
  4437: 82 1b 30                 a4 = u64 [sp + 0x30]
  4440: 82 16 20                 s1 = u64 [sp + 0x20]
  4443: 33 07 02                 a0 = 0x2
  4446: 33 08                    a1 = 0
  4448: 33 09                    a2 = 0
  4450: 64 5a                    a3 = s0
  4452: 33 00 88 00              ra = 0x88
  4456: 0a 64                    ecalli 100 // 'log'
  4458: 01                       fallthrough
      :                          @234 [@dyn 68]
  4459: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
  4464: 53 38 00 00 ff 31        jump @240 if a1 <u 4294901760
      :                          @235
  4470: 33 07 b0 1a 03           a0 = 0x31ab0
  4475: 95 77 00 00 01           a0 = a0 + 0x10000
  4480: 01                       fallthrough
      :                          @236
  4481: 82 78                    a1 = u64 [a0]
  4483: c9 87 09                 a2 = a0 - a1
  4486: ab 59 1b                 jump @240 if a2 != s0
      :                          @237
  4489: c9 68 09                 a2 = a1 - s1
  4492: 01                       fallthrough
      :                          @238
  4493: 82 7a                    a3 = u64 [a0]
  4495: ab 8a f2                 jump @236 if a3 != a1
      :                          @239
  4498: 7b 79                    u64 [a0] = a2
  4500: 33 0b                    a4 = 0
  4502: 33 07 80 10 03           a0 = 0x31080
  4507: 33 08 20                 a1 = 0x20
  4510: 28 a3 fa                 jump @168
      :                          @240
  4513: 33 07 80 10 03           a0 = 0x31080
  4518: 33 08 20                 a1 = 0x20
  4521: 28 98 fa                 jump @168
      :                          @241
  4524: 00                       trap
      :                          @242
  4525: 00                       trap
      :                          @243 [export #2: 'on_transfer']
  4526: 33 07 00 00 01           a0 = 0x10000
  4531: 33 08                    a1 = 0
  4533: 32 00                    ret
      :                          @244
  4535: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  4538: 7b 10 40                 u64 [sp + 0x40] = ra
  4541: 7b 15 38                 u64 [sp + 0x38] = s0
  4544: 7b 16 30                 u64 [sp + 0x30] = s1
  4547: c8 89 09                 a2 = a2 + a1
  4550: ac 89 53                 jump @252 if a2 <u a1
      :                          @245
  4553: 64 75                    s0 = a0
  4555: 82 77                    a0 = u64 [a0]
  4557: 97 78 01                 a1 = a0 << 0x1
  4560: 33 0a 08                 a3 = 0x8
  4563: e4 a9 09                 a2 = maxu(a2, a3)
  4566: e4 98 06                 s1 = maxu(a1, a2)
  4569: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  4572: 98 88 3f                 a1 = a1 >> 0x3f
  4575: 51 07 12                 jump @247 if a0 == 0
      :                          @246
  4578: 82 59 08                 a2 = u64 [s0 + 0x8]
  4581: 7b 19 18                 u64 [sp + 0x18] = a2
  4584: 49 11 20 01              u64 [sp + 32] = 0x1
  4588: 7b 17 28                 u64 [sp + 0x28] = a0
  4591: 28 06                    jump @248
      :                          @247
  4593: 49 11 20                 u64 [sp + 32] = 0
  4596: 01                       fallthrough
      :                          @248
  4597: 64 17                    a0 = sp
  4599: 95 1a 18                 a3 = sp + 0x18
  4602: 64 69                    a2 = s1
  4604: 50 20 8a 00 33           ra = 138, jump @256
      :                          @249 [@dyn 69]
  4609: 82 18                    a1 = u64 [sp]
  4611: 82 17 08                 a0 = u64 [sp + 0x8]
  4614: 51 08 14                 jump @253 if a1 == 0
      :                          @250
  4617: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  4627: aa 87 0d                 jump @254 if a0 == a1
      :                          @251
  4630: 52 07 18                 jump @255 if a0 != 0
      :                          @252
  4633: 00                       trap
      :                          @253
  4634: 7b 57 08                 u64 [s0 + 0x8] = a0
  4637: 7b 56                    u64 [s0] = s1
  4639: 01                       fallthrough
      :                          @254
  4640: 82 10 40                 ra = u64 [sp + 0x40]
  4643: 82 15 38                 s0 = u64 [sp + 0x38]
  4646: 82 16 30                 s1 = u64 [sp + 0x30]
  4649: 95 11 48                 sp = sp + 0x48
  4652: 32 00                    ret
      :                          @255
  4654: 00                       trap
      :                          @256
  4655: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  4658: 7b 10 30                 u64 [sp + 0x30] = ra
  4661: 7b 15 28                 u64 [sp + 0x28] = s0
  4664: 7b 16 20                 u64 [sp + 0x20] = s1
  4667: 64 95                    s0 = a2
  4669: 64 72                    t0 = a0
  4671: 51 08 7a                 jump @266 if a1 == 0
      :                          @257
  4674: 82 a7 08                 a0 = u64 [a3 + 0x8]
  4677: 51 07 7d                 jump @267 if a0 == 0
      :                          @258
  4680: 82 a9 10                 a2 = u64 [a3 + 0x10]
  4683: 51 09 ab 00              jump @274 if a2 == 0
      :                          @259
  4687: 82 a8                    a1 = u64 [a3]
  4689: 33 06 b0 1a 03           s1 = 0x31ab0
  4694: 33 03 00 00 01           t1 = 0x10000
  4699: c8 36 06                 s1 = s1 + t1
  4702: 01                       fallthrough
      :                          @260
  4703: 82 6a                    a3 = u64 [s1]
  4705: c8 5a 07                 a0 = a3 + s0
  4708: ac a7 d0 00              jump @280 if a0 <u a3
      :                          @261
  4712: 95 7b 01                 a4 = a0 + 0x1
  4715: 88 bc 01                 a5 = a4 <u 0x1
  4718: d8 b3 0b                 a4 = t1 <u a4
  4721: d4 cb 0b                 a4 = a4 | a5
  4724: 52 0b c0 00              jump @280 if a4 != 0
      :                          @262
  4728: 82 6b                    a4 = u64 [s1]
  4730: ab ab e5                 jump @260 if a4 != a3
      :                          @263
  4733: 7b 67                    u64 [s1] = a0
  4735: 33 0c                    a5 = 0
  4737: 7b 12 18                 u64 [sp + 0x18] = t0
  4740: 33 0a b0 1a 03           a3 = 0x31ab0
  4745: 33 0b 00 00 01           a4 = 0x10000
  4750: 7b 1a                    u64 [sp] = a3
  4752: c8 ba 0a                 a3 = a3 + a4
  4755: c9 7a 07                 a0 = a3 - a0
  4758: 7b 17 10                 u64 [sp + 0x10] = a0
  4761: 7b 18 08                 u64 [sp + 0x8] = a1
  4764: 64 96                    s1 = a2
  4766: 50 20 8c 00 d3 03        ra = 140, jump @350
      :                          @264 [@dyn 70]
  4772: 54 36 00 00 01 98 00     jump @281 if s1 <=u 65536
      :                          @265
  4779: 82 12 18                 t0 = u64 [sp + 0x18]
  4782: 82 18 10                 a1 = u64 [sp + 0x10]
  4785: 33 07                    a0 = 0
  4787: 7b 28 08                 u64 [t0 + 0x8] = a1
  4790: 28 b5 00                 jump @287
      :                          @266
  4793: 49 12 08                 u64 [t0 + 8] = 0
  4796: 33 07 01                 a0 = 0x1
  4799: 28 ac 00                 jump @287
      :                          @267
  4802: 33 09 b0 1a 03           a2 = 0x31ab0
  4807: 33 07 00 00 01           a0 = 0x10000
  4812: c8 79 09                 a2 = a2 + a0
  4815: 01                       fallthrough
      :                          @268
  4816: 82 9a                    a3 = u64 [a2]
  4818: c8 5a 08                 a1 = a3 + s0
  4821: ac a8 5f                 jump @280 if a1 <u a3
      :                          @269
  4824: 95 8b 01                 a4 = a1 + 0x1
  4827: 88 bc 01                 a5 = a4 <u 0x1
  4830: d8 b7 0b                 a4 = a0 <u a4
  4833: d4 cb 0b                 a4 = a4 | a5
  4836: 52 0b 50                 jump @280 if a4 != 0
      :                          @270
  4839: 82 9b                    a4 = u64 [a2]
  4841: ab ab e7                 jump @268 if a4 != a3
      :                          @271
  4844: 7b 98                    u64 [a2] = a1
  4846: 33 0c                    a5 = 0
  4848: 01                       fallthrough
      :                          @272
  4849: ab ab df                 jump @268 if a4 != a3
      :                          @273
  4852: 28 31                    jump @279
      :                          @274
  4854: 33 09 b0 1a 03           a2 = 0x31ab0
  4859: 33 07 00 00 01           a0 = 0x10000
  4864: c8 79 09                 a2 = a2 + a0
  4867: 01                       fallthrough
      :                          @275
  4868: 82 9a                    a3 = u64 [a2]
  4870: c8 5a 08                 a1 = a3 + s0
  4873: ac a8 2b                 jump @280 if a1 <u a3
      :                          @276
  4876: 95 8b 01                 a4 = a1 + 0x1
  4879: 88 bc 01                 a5 = a4 <u 0x1
  4882: d8 b7 0b                 a4 = a0 <u a4
  4885: d4 cb 0b                 a4 = a4 | a5
  4888: 52 0b 1c                 jump @280 if a4 != 0
      :                          @277
  4891: 82 9b                    a4 = u64 [a2]
  4893: ab ab e7                 jump @275 if a4 != a3
      :                          @278
  4896: 7b 98                    u64 [a2] = a1
  4898: 33 0c                    a5 = 0
  4900: 01                       fallthrough
      :                          @279
  4901: 33 07 b0 1a 04           a0 = 0x41ab0
  4906: c9 87 08                 a1 = a0 - a1
  4909: 33 07                    a0 = 0
  4911: 7b 28 08                 u64 [t0 + 0x8] = a1
  4914: 28 39                    jump @287
      :                          @280
  4916: 33 07 01                 a0 = 0x1
  4919: 7b 27 08                 u64 [t0 + 0x8] = a0
  4922: 28 31                    jump @287
      :                          @281
  4924: 64 6c                    a5 = s1
  4926: 82 17                    a0 = u64 [sp]
  4928: 95 77 00 00 01           a0 = a0 + 0x10000
  4933: 82 12 18                 t0 = u64 [sp + 0x18]
  4936: 82 16 08                 s1 = u64 [sp + 0x8]
  4939: 01                       fallthrough
      :                          @282
  4940: 82 78                    a1 = u64 [a0]
  4942: c9 87 09                 a2 = a0 - a1
  4945: ab 69 11                 jump @286 if a2 != s1
      :                          @283
  4948: c9 c8 09                 a2 = a1 - a5
  4951: 01                       fallthrough
      :                          @284
  4952: 82 7a                    a3 = u64 [a0]
  4954: ab 8a f2                 jump @282 if a3 != a1
      :                          @285
  4957: 7b 79                    u64 [a0] = a2
  4959: 33 0b                    a4 = 0
  4961: 01                       fallthrough
      :                          @286
  4962: 82 18 10                 a1 = u64 [sp + 0x10]
  4965: 33 07                    a0 = 0
  4967: 7b 28 08                 u64 [t0 + 0x8] = a1
  4970: 01                       fallthrough
      :                          @287
  4971: 7b 25 10                 u64 [t0 + 0x10] = s0
  4974: 7b 27                    u64 [t0] = a0
  4976: 82 10 30                 ra = u64 [sp + 0x30]
  4979: 82 15 28                 s0 = u64 [sp + 0x28]
  4982: 82 16 20                 s1 = u64 [sp + 0x20]
  4985: 95 11 38                 sp = sp + 0x38
  4988: 32 00                    ret
      :                          @288
  4990: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  4993: 7b 10 40                 u64 [sp + 0x40] = ra
  4996: 7b 15 38                 u64 [sp + 0x38] = s0
  4999: 7b 16 30                 u64 [sp + 0x30] = s1
  5002: 95 88 01                 a1 = a1 + 0x1
  5005: 51 08 54                 jump @296 if a1 == 0
      :                          @289
  5008: 64 75                    s0 = a0
  5010: 82 77                    a0 = u64 [a0]
  5012: 97 79 01                 a2 = a0 << 0x1
  5015: 33 0a 08                 a3 = 0x8
  5018: e4 a8 08                 a1 = maxu(a1, a3)
  5021: e4 89 06                 s1 = maxu(a2, a1)
  5024: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  5027: 98 88 3f                 a1 = a1 >> 0x3f
  5030: 51 07 12                 jump @291 if a0 == 0
      :                          @290
  5033: 82 59 08                 a2 = u64 [s0 + 0x8]
  5036: 7b 19 18                 u64 [sp + 0x18] = a2
  5039: 49 11 20 01              u64 [sp + 32] = 0x1
  5043: 7b 17 28                 u64 [sp + 0x28] = a0
  5046: 28 06                    jump @292
      :                          @291
  5048: 49 11 20                 u64 [sp + 32] = 0
  5051: 01                       fallthrough
      :                          @292
  5052: 64 17                    a0 = sp
  5054: 95 1a 18                 a3 = sp + 0x18
  5057: 64 69                    a2 = s1
  5059: 50 20 8e 00 6c fe        ra = 142, jump @256
      :                          @293 [@dyn 71]
  5065: 82 18                    a1 = u64 [sp]
  5067: 82 17 08                 a0 = u64 [sp + 0x8]
  5070: 51 08 14                 jump @297 if a1 == 0
      :                          @294
  5073: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  5083: aa 87 0d                 jump @298 if a0 == a1
      :                          @295
  5086: 52 07 18                 jump @299 if a0 != 0
      :                          @296
  5089: 00                       trap
      :                          @297
  5090: 7b 57 08                 u64 [s0 + 0x8] = a0
  5093: 7b 56                    u64 [s0] = s1
  5095: 01                       fallthrough
      :                          @298
  5096: 82 10 40                 ra = u64 [sp + 0x40]
  5099: 82 15 38                 s0 = u64 [sp + 0x38]
  5102: 82 16 30                 s1 = u64 [sp + 0x30]
  5105: 95 11 48                 sp = sp + 0x48
  5108: 32 00                    ret
      :                          @299
  5110: 00                       trap
      :                          @300
  5111: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  5114: 7b 10 30                 u64 [sp + 0x30] = ra
  5117: 7b 15 28                 u64 [sp + 0x28] = s0
  5120: 7b 16 20                 u64 [sp + 0x20] = s1
  5123: 64 89                    a2 = a1
  5125: 82 8a 08                 a3 = u64 [a1 + 0x8]
  5128: 64 75                    s0 = a0
  5130: 51 0a 35                 jump @305 if a3 == 0
      :                          @301
  5133: 82 98                    a1 = u64 [a2]
  5135: 33 07                    a0 = 0
  5137: 95 8b 08                 a4 = a1 + 0x8
  5140: 01                       fallthrough
      :                          @302
  5141: 82 bc                    a5 = u64 [a4]
  5143: c8 c7 07                 a0 = a0 + a5
  5146: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  5149: 95 bb 10                 a4 = a4 + 0x10
  5152: 52 0a f5                 jump @302 if a3 != 0
      :                          @303
  5155: 82 9a 18                 a3 = u64 [a2 + 0x18]
  5158: 51 0a 24                 jump @307 if a3 == 0
      :                          @304
  5161: 82 88 08                 a1 = u64 [a1 + 0x8]
  5164: 8e 88                    a1 = a1 >u 0
  5166: 88 7a 10                 a3 = a0 <u 0x10
  5169: 85 aa 01                 a3 = a3 ^ 0x1
  5172: d4 a8 08                 a1 = a1 | a3
  5175: 89 7a                    a3 = a0 <s 0
  5177: e0 a8 08                 a1 = a1 & ~a3
  5180: 52 08 0a                 jump @306 if a1 != 0
      :                          @305
  5183: 33 07                    a0 = 0
  5185: 33 08 01                 a1 = 0x1
  5188: 28 4a                    jump @315
      :                          @306
  5190: 97 77 01                 a0 = a0 << 0x1
  5193: 01                       fallthrough
      :                          @307
  5194: 51 07 40                 jump @314 if a0 == 0
      :                          @308
  5197: 57 07 79                 jump @320 if a0 <s 0
      :                          @309
  5200: 64 52                    t0 = s0
  5202: 33 0b b0 1a 03           a4 = 0x31ab0
  5207: 33 08 00 00 01           a1 = 0x10000
  5212: c8 8b 0b                 a4 = a4 + a1
  5215: 01                       fallthrough
      :                          @310
  5216: 82 bc                    a5 = u64 [a4]
  5218: c8 7c 0a                 a3 = a5 + a0
  5221: ac ca 5f                 jump @318 if a3 <u a5
      :                          @311
  5224: 95 a5 01                 s0 = a3 + 0x1
  5227: 88 56 01                 s1 = s0 <u 0x1
  5230: d8 58 05                 s0 = a1 <u s0
  5233: d4 65 05                 s0 = s0 | s1
  5236: 52 05 50                 jump @318 if s0 != 0
      :                          @312
  5239: 82 b6                    s1 = u64 [a4]
  5241: ab c6 e7                 jump @310 if s1 != a5
      :                          @313
  5244: 7b ba                    u64 [a4] = a3
  5246: 33 08 b0 1a 04           a1 = 0x41ab0
  5251: c9 a8 08                 a1 = a1 - a3
  5254: 64 25                    s0 = t0
  5256: 28 06                    jump @315
      :                          @314
  5258: 33 08 01                 a1 = 0x1
  5261: 01                       fallthrough
      :                          @315
  5262: 7b 17                    u64 [sp] = a0
  5264: 7b 18 08                 u64 [sp + 0x8] = a1
  5267: 49 11 10                 u64 [sp + 16] = 0
  5270: 33 08 20 01 01           a1 = 0x10120
  5275: 64 17                    a0 = sp
  5277: 50 20 90 00 a6 06        ra = 144, jump @448
      :                          @316 [@dyn 72]
  5283: 52 07 22                 jump @319 if a0 != 0
      :                          @317
  5286: 82 17 10                 a0 = u64 [sp + 0x10]
  5289: 82 18 08                 a1 = u64 [sp + 0x8]
  5292: 82 19                    a2 = u64 [sp]
  5294: 7b 57 10                 u64 [s0 + 0x10] = a0
  5297: 7b 58 08                 u64 [s0 + 0x8] = a1
  5300: 7b 59                    u64 [s0] = a2
  5302: 82 10 30                 ra = u64 [sp + 0x30]
  5305: 82 15 28                 s0 = u64 [sp + 0x28]
  5308: 82 16 20                 s1 = u64 [sp + 0x20]
  5311: 95 11 38                 sp = sp + 0x38
  5314: 32 00                    ret
      :                          @318
  5316: 00                       trap
      :                          @319
  5317: 00                       trap
      :                          @320
  5318: 00                       trap
      :                          @321 [@dyn 73]
  5319: 82 72                    t0 = u64 [a0]
  5321: 33 09 00 00 ff           a2 = 0xffffffffffff0000
  5326: 95 2a ff ff fe           a3 = t0 + 0xfffffffffffeffff
  5331: ac 9a 28                 jump @327 if a3 <u a2
      :                          @322
  5334: 82 77 08                 a0 = u64 [a0 + 0x8]
  5337: 33 09 b0 1a 03           a2 = 0x31ab0
  5342: 95 99 00 00 01           a2 = a2 + 0x10000
  5347: 01                       fallthrough
      :                          @323
  5348: 82 9a                    a3 = u64 [a2]
  5350: c9 a9 0b                 a4 = a2 - a3
  5353: ab 7b 12                 jump @327 if a4 != a0
      :                          @324
  5356: c9 2a 0b                 a4 = a3 - t0
  5359: 01                       fallthrough
      :                          @325
  5360: 82 9c                    a5 = u64 [a2]
  5362: ab ac f2                 jump @323 if a5 != a3
      :                          @326
  5365: 7b 9b                    u64 [a2] = a4
  5367: 33 08                    a1 = 0
  5369: 32 00                    ret
      :                          @327
  5371: 32 00                    ret
      :                          @328 [@dyn 74]
  5373: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  5376: 7b 10 18                 u64 [sp + 0x18] = ra
  5379: 7b 15 10                 u64 [sp + 0x10] = s0
  5382: 7b 16 08                 u64 [sp + 0x8] = s1
  5385: 64 75                    s0 = a0
  5387: 82 7a 10                 a3 = u64 [a0 + 0x10]
  5390: 82 77                    a0 = u64 [a0]
  5392: c9 a7 07                 a0 = a0 - a3
  5395: 64 96                    s1 = a2
  5397: ac 97 2b                 jump @331 if a0 <u a2
      :                          @329
  5400: 7b 1a                    u64 [sp] = a3
  5402: 82 57 08                 a0 = u64 [s0 + 0x8]
  5405: c8 a7 07                 a0 = a0 + a3
  5408: 64 69                    a2 = s1
  5410: 50 20 96 00 4f 01        ra = 150, jump @350
      :                          @330 [@dyn 75]
  5416: 82 17                    a0 = u64 [sp]
  5418: c8 76 06                 s1 = s1 + a0
  5421: 7b 56 10                 u64 [s0 + 0x10] = s1
  5424: 33 07                    a0 = 0
  5426: 82 10 18                 ra = u64 [sp + 0x18]
  5429: 82 15 10                 s0 = u64 [sp + 0x10]
  5432: 82 16 08                 s1 = u64 [sp + 0x8]
  5435: 95 11 20                 sp = sp + 0x20
  5438: 32 00                    ret
      :                          @331
  5440: 64 57                    a0 = s0
  5442: 7b 18                    u64 [sp] = a1
  5444: 64 a8                    a1 = a3
  5446: 64 69                    a2 = s1
  5448: 50 20 98 00 6f fc        ra = 152, jump @244
      :                          @332 [@dyn 76]
  5454: 82 18                    a1 = u64 [sp]
  5456: 82 5a 10                 a3 = u64 [s0 + 0x10]
  5459: 28 c5                    jump @329
      :                          @333 [@dyn 77]
  5461: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  5464: 7b 10 20                 u64 [sp + 0x20] = ra
  5467: 7b 15 18                 u64 [sp + 0x18] = s0
  5470: 7b 16 10                 u64 [sp + 0x10] = s1
  5473: 64 86                    s1 = a1
  5475: 83 88                    i32 a1 = a1 + 0
  5477: 33 09 80 00              a2 = 0x80
  5481: 64 7a                    a3 = a0
  5483: ae 98 2c                 jump @338 if a1 >=u a2
      :                          @334
  5486: 82 a8 10                 a1 = u64 [a3 + 0x10]
  5489: 82 a7                    a0 = u64 [a3]
  5491: ab 78 13                 jump @337 if a1 != a0
      :                          @335
  5494: 64 a7                    a0 = a3
  5496: 64 a5                    s0 = a3
  5498: 50 20 9c 00 04 fe        ra = 156, jump @288
      :                          @336 [@dyn 78]
  5504: 64 5a                    a3 = s0
  5506: 82 58 10                 a1 = u64 [s0 + 0x10]
  5509: 01                       fallthrough
      :                          @337
  5510: 82 a7 08                 a0 = u64 [a3 + 0x8]
  5513: c8 87 07                 a0 = a0 + a1
  5516: 78 76                    u8 [a0] = s1
  5518: 95 88 01                 a1 = a1 + 0x1
  5521: 7b a8 10                 u64 [a3 + 0x10] = a1
  5524: 28 ac 00                 jump @346
      :                          @338
  5527: 8b 67 0b                 i32 a0 = s1 >> 0xb
  5530: 48 11 0c                 u32 [sp + 12] = 0
  5533: 52 07 1c                 jump @340 if a0 != 0
      :                          @339
  5536: 98 67 06                 a0 = s1 >> 0x6
  5539: 86 77 c0 00              a0 = a0 | 0xc0
  5543: 78 17 0c                 u8 [sp + 0xc] = a0
  5546: 84 67 3f                 a0 = s1 & 0x3f
  5549: 86 77 80 00              a0 = a0 | 0x80
  5553: 78 17 0d                 u8 [sp + 0xd] = a0
  5556: 33 06 02                 s1 = 0x2
  5559: 28 63                    jump @343
      :                          @340
  5561: 8b 67 10                 i32 a0 = s1 >> 0x10
  5564: 52 07 29                 jump @342 if a0 != 0
      :                          @341
  5567: 98 67 0c                 a0 = s1 >> 0xc
  5570: 86 77 e0 00              a0 = a0 | 0xe0
  5574: 78 17 0c                 u8 [sp + 0xc] = a0
  5577: 97 67 34                 a0 = s1 << 0x34
  5580: 98 77 3a                 a0 = a0 >> 0x3a
  5583: 95 77 80 00              a0 = a0 + 0x80
  5587: 78 17 0d                 u8 [sp + 0xd] = a0
  5590: 84 67 3f                 a0 = s1 & 0x3f
  5593: 86 77 80 00              a0 = a0 | 0x80
  5597: 78 17 0e                 u8 [sp + 0xe] = a0
  5600: 33 06 03                 s1 = 0x3
  5603: 28 37                    jump @343
      :                          @342
  5605: 97 67 2b                 a0 = s1 << 0x2b
  5608: 98 77 3d                 a0 = a0 >> 0x3d
  5611: 95 77 f0 00              a0 = a0 + 0xf0
  5615: 78 17 0c                 u8 [sp + 0xc] = a0
  5618: 97 67 2e                 a0 = s1 << 0x2e
  5621: 98 77 3a                 a0 = a0 >> 0x3a
  5624: 95 77 80 00              a0 = a0 + 0x80
  5628: 78 17 0d                 u8 [sp + 0xd] = a0
  5631: 97 67 34                 a0 = s1 << 0x34
  5634: 98 77 3a                 a0 = a0 >> 0x3a
  5637: 95 77 80 00              a0 = a0 + 0x80
  5641: 78 17 0e                 u8 [sp + 0xe] = a0
  5644: 84 67 3f                 a0 = s1 & 0x3f
  5647: 86 77 80 00              a0 = a0 | 0x80
  5651: 78 17 0f                 u8 [sp + 0xf] = a0
  5654: 33 06 04                 s1 = 0x4
  5657: 01                       fallthrough
      :                          @343
  5658: 82 a5 10                 s0 = u64 [a3 + 0x10]
  5661: 82 a7                    a0 = u64 [a3]
  5663: c9 57 07                 a0 = a0 - s0
  5666: ac 67 2e                 jump @347 if a0 <u s1
      :                          @344
  5669: 7b 1a                    u64 [sp] = a3
  5671: 82 a7 08                 a0 = u64 [a3 + 0x8]
  5674: c8 57 07                 a0 = a0 + s0
  5677: 95 18 0c                 a1 = sp + 0xc
  5680: 64 69                    a2 = s1
  5682: 50 20 9e 00 3f           ra = 158, jump @350
      :                          @345 [@dyn 79]
  5687: c8 56 06                 s1 = s1 + s0
  5690: 82 17                    a0 = u64 [sp]
  5692: 7b 76 10                 u64 [a0 + 0x10] = s1
  5695: 01                       fallthrough
      :                          @346
  5696: 33 07                    a0 = 0
  5698: 82 10 20                 ra = u64 [sp + 0x20]
  5701: 82 15 18                 s0 = u64 [sp + 0x18]
  5704: 82 16 10                 s1 = u64 [sp + 0x10]
  5707: 95 11 28                 sp = sp + 0x28
  5710: 32 00                    ret
      :                          @347
  5712: 64 a7                    a0 = a3
  5714: 64 58                    a1 = s0
  5716: 64 69                    a2 = s1
  5718: 64 a5                    s0 = a3
  5720: 50 20 a0 00 5f fb        ra = 160, jump @244
      :                          @348 [@dyn 80]
  5726: 64 5a                    a3 = s0
  5728: 82 55 10                 s0 = u64 [s0 + 0x10]
  5731: 28 c2                    jump @344
      :                          @349 [@dyn 81]
  5733: 64 8a                    a3 = a1
  5735: 33 08 20 01 01           a1 = 0x10120
  5740: 64 a9                    a2 = a3
  5742: 28 d5 04                 jump @448
      :                          @350
  5745: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  5748: 7b 10 18                 u64 [sp + 0x18] = ra
  5751: 7b 15 10                 u64 [sp + 0x10] = s0
  5754: 7b 16 08                 u64 [sp + 0x8] = s1
  5757: 53 19 10 64              jump @359 if a2 <u 16
      :                          @351
  5761: 8d 7a                    i32 a3 = -a0
  5763: 84 a2 07                 t0 = a3 & 0x7
  5766: c8 27 0b                 a4 = a0 + t0
  5769: 51 02 15                 jump @354 if t0 == 0
      :                          @352
  5772: 64 8c                    a5 = a1
  5774: 64 75                    s0 = a0
  5776: 01                       fallthrough
      :                          @353
  5777: 7c ca                    a3 = u8 [a5]
  5779: 78 5a                    u8 [s0] = a3
  5781: 95 55 01                 s0 = s0 + 0x1
  5784: 95 cc 01                 a5 = a5 + 0x1
  5787: ac b5 f6                 jump @353 if s0 <u a4
      :                          @354
  5790: c8 28 03                 t1 = a1 + t0
  5793: c9 29 02                 t0 = a2 - t0
  5796: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  5799: 84 38 07                 a1 = t1 & 0x7
  5802: c8 4b 0a                 a3 = a4 + t2
  5805: 51 08 3b                 jump @361 if a1 == 0
      :                          @355
  5808: 58 04 4b                 jump @364 if t2 <=s 0
      :                          @356
  5811: 97 38 03                 a1 = t1 << 0x3
  5814: 84 80 38                 ra = a1 & 0x38
  5817: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  5820: 82 c5                    s0 = u64 [a5]
  5822: 8d 88                    i32 a1 = -a1
  5824: 84 88 38                 a1 = a1 & 0x38
  5827: 95 cc 08                 a5 = a5 + 0x8
  5830: 01                       fallthrough
      :                          @357
  5831: 82 c6                    s1 = u64 [a5]
  5833: d0 05 05                 s0 = s0 >> ra
  5836: cf 86 09                 a2 = s1 << a1
  5839: d4 59 09                 a2 = a2 | s0
  5842: 7b b9                    u64 [a4] = a2
  5844: 95 bb 08                 a4 = a4 + 0x8
  5847: 95 cc 08                 a5 = a5 + 0x8
  5850: 64 65                    s0 = s1
  5852: ac ab eb                 jump @357 if a4 <u a3
      :                          @358
  5855: 28 1c                    jump @364
      :                          @359
  5857: 64 7a                    a3 = a0
  5859: 52 09 21                 jump @365 if a2 != 0
      :                          @360
  5862: 28 2f                    jump @367
      :                          @361
  5864: 58 04 13                 jump @364 if t2 <=s 0
      :                          @362
  5867: 64 38                    a1 = t1
  5869: 01                       fallthrough
      :                          @363
  5870: 82 89                    a2 = u64 [a1]
  5872: 7b b9                    u64 [a4] = a2
  5874: 95 bb 08                 a4 = a4 + 0x8
  5877: 95 88 08                 a1 = a1 + 0x8
  5880: ac ab f6                 jump @363 if a4 <u a3
      :                          @364
  5883: c8 43 08                 a1 = t1 + t2
  5886: 84 29 07                 a2 = t0 & 0x7
  5889: 51 09 14                 jump @367 if a2 == 0
      :                          @365
  5892: c8 a9 09                 a2 = a2 + a3
  5895: 01                       fallthrough
      :                          @366
  5896: 7c 8b                    a4 = u8 [a1]
  5898: 78 ab                    u8 [a3] = a4
  5900: 95 aa 01                 a3 = a3 + 0x1
  5903: 95 88 01                 a1 = a1 + 0x1
  5906: ac 9a f6                 jump @366 if a3 <u a2
      :                          @367
  5909: 82 10 18                 ra = u64 [sp + 0x18]
  5912: 82 15 10                 s0 = u64 [sp + 0x10]
  5915: 82 16 08                 s1 = u64 [sp + 0x8]
  5918: 95 11 20                 sp = sp + 0x20
  5921: 32 00                    ret
      :                          @368
  5923: 53 19 10 48              jump @377 if a2 <u 16
      :                          @369
  5927: 8d 7a                    i32 a3 = -a0
  5929: 84 aa 07                 a3 = a3 & 0x7
  5932: c8 a7 0b                 a4 = a0 + a3
  5935: 51 0a 0e                 jump @372 if a3 == 0
      :                          @370
  5938: 64 7c                    a5 = a0
  5940: 01                       fallthrough
      :                          @371
  5941: 78 c8                    u8 [a5] = a1
  5943: 95 cc 01                 a5 = a5 + 0x1
  5946: ac bc fb                 jump @371 if a5 <u a4
      :                          @372
  5949: c9 a9 03                 t1 = a2 - a3
  5952: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  5955: c8 cb 0a                 a3 = a4 + a5
  5958: 58 0c 1d                 jump @375 if a5 <=s 0
      :                          @373
  5961: 84 82 ff 00              t0 = a1 & 0xff
  5965: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  5975: ca 92 0c                 a5 = t0 * a2
  5978: 01                       fallthrough
      :                          @374
  5979: 7b bc                    u64 [a4] = a5
  5981: 95 bb 08                 a4 = a4 + 0x8
  5984: ac ab fb                 jump @374 if a4 <u a3
      :                          @375
  5987: 84 39 07                 a2 = t1 & 0x7
  5990: 52 09 0a                 jump @378 if a2 != 0
      :                          @376
  5993: 28 13                    jump @380
      :                          @377
  5995: 64 7a                    a3 = a0
  5997: 51 09 0f                 jump @380 if a2 == 0
      :                          @378
  6000: c8 a9 09                 a2 = a2 + a3
  6003: 01                       fallthrough
      :                          @379
  6004: 78 a8                    u8 [a3] = a1
  6006: 95 aa 01                 a3 = a3 + 0x1
  6009: ac 9a fb                 jump @379 if a3 <u a2
      :                          @380
  6012: 32 00                    ret
      :                          @381 [@dyn 82]
  6014: 82 77                    a0 = u64 [a0]
  6016: 01                       fallthrough
      :                          @382
  6017: 28                       jump @382
      :                          @383 [@dyn 83]
  6018: 82 77                    a0 = u64 [a0]
  6020: 64 89                    a2 = a1
  6022: 33 08 01                 a1 = 0x1
  6025: 01                       fallthrough
      :                          @384
  6026: 95 11 a0                 sp = sp + 0xffffffffffffffa0
  6029: 7b 10 58                 u64 [sp + 0x58] = ra
  6032: 7b 15 50                 u64 [sp + 0x50] = s0
  6035: 7b 16 48                 u64 [sp + 0x48] = s1
  6038: 7b 19 08                 u64 [sp + 0x8] = a2
  6041: 7b 18                    u64 [sp] = a1
  6043: 98 7a 04                 a3 = a0 >> 0x4
  6046: 33 09 27                 a2 = 0x27
  6049: 53 2a 71 02 81 00        jump @387 if a3 <u 625
      :                          @385
  6055: 33 09 27                 a2 = 0x27
  6058: 95 1b 46                 a4 = sp + 0x46
  6061: 3a 08 00 00 03           a1 = u64 [0x30000]
  6066: 7b 18 18                 u64 [sp + 0x18] = a1
  6069: 49 11 10 f0 d8 00        u64 [sp + 16] = 0xd8f0
  6075: 33 03 7b 14              t1 = 0x147b
  6079: 33 05 94 01 01           s0 = 0x10194
  6084: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
  6090: 01                       fallthrough
      :                          @386
  6091: 64 74                    t2 = a0
  6093: 82 17 18                 a0 = u64 [sp + 0x18]
  6096: d6 74 07                 a0 = t2 mulhu a0
  6099: 98 77 0b                 a0 = a0 >> 0xb
  6102: 82 18 10                 a1 = u64 [sp + 0x10]
  6105: c0 87 02                 i32 t0 = a0 * a1
  6108: c8 42 0a                 a3 = t0 + t2
  6111: 97 a2 30                 t0 = a3 << 0x30
  6114: 98 28 32                 a1 = t0 >> 0x32
  6117: ca 38 08                 a1 = a1 * t1
  6120: 98 8c 11                 a5 = a1 >> 0x11
  6123: 98 88 10                 a1 = a1 >> 0x10
  6126: 84 88 fe 07              a1 = a1 & 0x7fe
  6130: 96 cc 9c                 a5 = a5 * 0xffffffffffffff9c
  6133: c8 ca 0a                 a3 = a3 + a5
  6136: 97 aa 31                 a3 = a3 << 0x31
  6139: 98 aa 30                 a3 = a3 >> 0x30
  6142: c8 58 08                 a1 = a1 + s0
  6145: 7c 8c                    a5 = u8 [a1]
  6147: 7c 88 01                 a1 = u8 [a1 + 0x1]
  6150: c8 5a 0a                 a3 = a3 + s0
  6153: 7c a6 01                 s1 = u8 [a3 + 0x1]
  6156: 7c aa                    a3 = u8 [a3]
  6158: 78 b8 ff                 u8 [a4 + 0xffffffffffffffff] = a1
  6161: 78 bc fe                 u8 [a4 + 0xfffffffffffffffe] = a5
  6164: 78 b6 01                 u8 [a4 + 0x1] = s1
  6167: 78 ba                    u8 [a4] = a3
  6169: 95 99 fc                 a2 = a2 + 0xfffffffffffffffc
  6172: 95 bb fc                 a4 = a4 + 0xfffffffffffffffc
  6175: ac 40 ac                 jump @386 if ra <u t2
      :                          @387
  6178: 54 17 63 3b              jump @389 if a0 <=u 99
      :                          @388
  6182: 97 78 30                 a1 = a0 << 0x30
  6185: 98 88 32                 a1 = a1 >> 0x32
  6188: 96 88 7b 14              a1 = a1 * 0x147b
  6192: 98 88 11                 a1 = a1 >> 0x11
  6195: 96 8a 9c                 a3 = a1 * 0xffffffffffffff9c
  6198: c8 a7 07                 a0 = a0 + a3
  6201: 97 77 31                 a0 = a0 << 0x31
  6204: 98 77 30                 a0 = a0 >> 0x30
  6207: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
  6210: 33 0a 94 01 01           a3 = 0x10194
  6215: c8 a7 07                 a0 = a0 + a3
  6218: 7c 7a 01                 a3 = u8 [a0 + 0x1]
  6221: 7c 77                    a0 = u8 [a0]
  6223: 95 1b 21                 a4 = sp + 0x21
  6226: c8 9b 0b                 a4 = a4 + a2
  6229: 78 ba 01                 u8 [a4 + 0x1] = a3
  6232: 78 b7                    u8 [a4] = a0
  6234: 64 87                    a0 = a1
  6236: 01                       fallthrough
      :                          @389
  6237: 55 17 0a 14              jump @391 if a0 >=u 10
      :                          @390
  6241: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  6244: 95 18 21                 a1 = sp + 0x21
  6247: c8 98 08                 a1 = a1 + a2
  6250: 83 77 30                 i32 a0 = a0 + 0x30
  6253: 78 87                    u8 [a1] = a0
  6255: 28 21                    jump @392
      :                          @391
  6257: 97 77 01                 a0 = a0 << 0x1
  6260: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
  6263: 33 08 94 01 01           a1 = 0x10194
  6268: c8 87 07                 a0 = a0 + a1
  6271: 7c 78 01                 a1 = u8 [a0 + 0x1]
  6274: 7c 77                    a0 = u8 [a0]
  6276: 95 1a 21                 a3 = sp + 0x21
  6279: c8 9a 0a                 a3 = a3 + a2
  6282: 78 a8 01                 u8 [a3 + 0x1] = a1
  6285: 78 a7                    u8 [a3] = a0
  6287: 01                       fallthrough
      :                          @392
  6288: 95 1b 21                 a4 = sp + 0x21
  6291: c8 9b 0b                 a4 = a4 + a2
  6294: 9a 9c 27                 a5 = 0x27 - a2
  6297: 33 09 50 01 01           a2 = 0x10150
  6302: 82 17 08                 a0 = u64 [sp + 0x8]
  6305: 82 18                    a1 = u64 [sp]
  6307: 33 0a                    a3 = 0
  6309: 50 20 a8 00 13           ra = 168, jump @394
      :                          @393 [@dyn 84]
  6314: 82 10 58                 ra = u64 [sp + 0x58]
  6317: 82 15 50                 s0 = u64 [sp + 0x50]
  6320: 82 16 48                 s1 = u64 [sp + 0x48]
  6323: 95 11 60                 sp = sp + 0x60
  6326: 32 00                    ret
      :                          @394
  6328: 95 11 98                 sp = sp + 0xffffffffffffff98
  6331: 7b 10 60                 u64 [sp + 0x60] = ra
  6334: 7b 15 58                 u64 [sp + 0x58] = s0
  6337: 7b 16 50                 u64 [sp + 0x50] = s1
  6340: 7b 1b 18                 u64 [sp + 0x18] = a4
  6343: 51 08 4f                 jump @401 if a1 == 0
      :                          @395
  6346: 80 76 34                 s1 = u32 [a0 + 0x34]
  6349: 84 68 01                 a1 = s1 & 0x1
  6352: 33 0b 2b                 a4 = 0x2b
  6355: 33 05 00 00 11           s0 = 0x110000
  6360: db 8b 05                 s0 = a4 if a1 != 0
  6363: 7b 15 28                 u64 [sp + 0x28] = s0
  6366: c8 c8 02                 t0 = a1 + a5
  6369: 84 68 04                 a1 = s1 & 0x4
  6372: 51 08 42                 jump @402 if a1 == 0
      :                          @396
  6375: 7b 19 30                 u64 [sp + 0x30] = a2
  6378: 33 08                    a1 = 0
  6380: 51 0a 1a                 jump @399 if a3 == 0
      :                          @397
  6383: 64 a5                    s0 = a3
  6385: 01                       fallthrough
      :                          @398
  6386: 7d 9b                    a4 = i8 [a2]
  6388: 89 bb c0                 a4 = a4 <s 0xffffffffffffffc0
  6391: 85 bb 01                 a4 = a4 ^ 0x1
  6394: c8 b8 08                 a1 = a1 + a4
  6397: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  6400: 95 99 01                 a2 = a2 + 0x1
  6403: 52 05 ef                 jump @398 if s0 != 0
      :                          @399
  6406: c8 82 02                 t0 = t0 + a1
  6409: 7b 1a 38                 u64 [sp + 0x38] = a3
  6412: 82 78                    a1 = u64 [a0]
  6414: 7b 1c 20                 u64 [sp + 0x20] = a5
  6417: 52 08 23                 jump @403 if a1 != 0
      :                          @400
  6420: 28 41                    jump @408
      :                          @401
  6422: 81 76 34                 s1 = i32 [a0 + 0x34]
  6425: 95 c2 01                 t0 = a5 + 0x1
  6428: 49 11 28 2d              u64 [sp + 40] = 0x2d
  6432: 84 68 04                 a1 = s1 & 0x4
  6435: 52 08 c4                 jump @396 if a1 != 0
      :                          @402
  6438: 49 11 30                 u64 [sp + 48] = 0
  6441: 7b 1a 38                 u64 [sp + 0x38] = a3
  6444: 82 78                    a1 = u64 [a0]
  6446: 7b 1c 20                 u64 [sp + 0x20] = a5
  6449: 51 08 24                 jump @408 if a1 == 0
      :                          @403
  6452: 82 75 08                 s0 = u64 [a0 + 0x8]
  6455: ae 52 1e                 jump @408 if t0 >=u s0
      :                          @404
  6458: 84 66 08                 s1 = s1 & 0x8
  6461: 52 06 51                 jump @411 if s1 != 0
      :                          @405
  6464: 7c 79 38                 a2 = u8 [a0 + 0x38]
  6467: c9 25 0a                 a3 = s0 - t0
  6470: 5a 19 01 a4 00           jump @418 if a2 >s 1
      :                          @406
  6475: 52 09 b1 00              jump @420 if a2 != 0
      :                          @407
  6479: 7b 1a 10                 u64 [sp + 0x10] = a3
  6482: 28 b0 00                 jump @421
      :                          @408
  6485: 82 75 20                 s0 = u64 [a0 + 0x20]
  6488: 82 76 28                 s1 = u64 [a0 + 0x28]
  6491: 64 57                    a0 = s0
  6493: 64 68                    a1 = s1
  6495: 82 19 28                 a2 = u64 [sp + 0x28]
  6498: 82 1a 30                 a3 = u64 [sp + 0x30]
  6501: 82 1b 38                 a4 = u64 [sp + 0x38]
  6504: 50 20 aa 00 76 01        ra = 170, jump @441
      :                          @409 [@dyn 85]
  6510: 33 08 01                 a1 = 0x1
  6513: 52 07 bf 00              jump @426 if a0 != 0
      :                          @410
  6517: 82 6c 18                 a5 = u64 [s1 + 0x18]
  6520: 64 57                    a0 = s0
  6522: 82 18 18                 a1 = u64 [sp + 0x18]
  6525: 82 19 20                 a2 = u64 [sp + 0x20]
  6528: 82 10 60                 ra = u64 [sp + 0x60]
  6531: 82 15 58                 s0 = u64 [sp + 0x58]
  6534: 82 16 50                 s1 = u64 [sp + 0x50]
  6537: 95 11 68                 sp = sp + 0x68
  6540: 32 0c                    jump [a5]
      :                          @411
  6542: 7b 12 40                 u64 [sp + 0x40] = t0
  6545: 81 78 30                 a1 = i32 [a0 + 0x30]
  6548: 7b 18 08                 u64 [sp + 0x8] = a1
  6551: 7c 79 38                 a2 = u8 [a0 + 0x38]
  6554: 7b 19                    u64 [sp] = a2
  6556: 82 79 20                 a2 = u64 [a0 + 0x20]
  6559: 82 76 28                 s1 = u64 [a0 + 0x28]
  6562: 48 17 30 30              u32 [a0 + 48] = 0x30
  6566: 7b 17 10                 u64 [sp + 0x10] = a0
  6569: 46 17 38 01              u8 [a0 + 56] = 0x1
  6573: 7b 19 48                 u64 [sp + 0x48] = a2
  6576: 64 97                    a0 = a2
  6578: 64 68                    a1 = s1
  6580: 82 19 28                 a2 = u64 [sp + 0x28]
  6583: 82 1a 30                 a3 = u64 [sp + 0x30]
  6586: 82 1b 38                 a4 = u64 [sp + 0x38]
  6589: 50 20 ac 00 21 01        ra = 172, jump @441
      :                          @412 [@dyn 86]
  6595: 52 07 69                 jump @425 if a0 != 0
      :                          @413
  6598: 82 17 40                 a0 = u64 [sp + 0x40]
  6601: c9 75 05                 s0 = s0 - a0
  6604: 95 55 01                 s0 = s0 + 0x1
  6607: 01                       fallthrough
      :                          @414
  6608: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  6611: 51 05 cb 00              jump @436 if s0 == 0
      :                          @415
  6615: 82 69 20                 a2 = u64 [s1 + 0x20]
  6618: 33 08 30                 a1 = 0x30
  6621: 82 17 48                 a0 = u64 [sp + 0x48]
  6624: b4 90 02 ae 00           ra = 174, jump [a2]
      :                          @416 [@dyn 87]
  6629: 51 07 eb                 jump @414 if a0 == 0
      :                          @417
  6632: 28 44                    jump @425
      :                          @418
  6634: 52 19 02 12              jump @420 if a2 != 2
      :                          @419
  6638: 98 a9 01                 a2 = a3 >> 0x1
  6641: 95 a8 01                 a1 = a3 + 0x1
  6644: 98 88 01                 a1 = a1 >> 0x1
  6647: 7b 18 10                 u64 [sp + 0x10] = a1
  6650: 28 08                    jump @421
      :                          @420
  6652: 64 a9                    a2 = a3
  6654: 49 11 10                 u64 [sp + 16] = 0
  6657: 01                       fallthrough
      :                          @421
  6658: 82 78 20                 a1 = u64 [a0 + 0x20]
  6661: 7b 18 48                 u64 [sp + 0x48] = a1
  6664: 82 76 28                 s1 = u64 [a0 + 0x28]
  6667: 81 77 30                 a0 = i32 [a0 + 0x30]
  6670: 7b 17 40                 u64 [sp + 0x40] = a0
  6673: 95 95 01                 s0 = a2 + 0x1
  6676: 01                       fallthrough
      :                          @422
  6677: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  6680: 51 05 28                 jump @427 if s0 == 0
      :                          @423
  6683: 82 69 20                 a2 = u64 [s1 + 0x20]
  6686: 82 17 48                 a0 = u64 [sp + 0x48]
  6689: 82 18 40                 a1 = u64 [sp + 0x40]
  6692: b4 90 02 b0 00           ra = 176, jump [a2]
      :                          @424 [@dyn 88]
  6697: 51 07 ec                 jump @422 if a0 == 0
      :                          @425
  6700: 33 08 01                 a1 = 0x1
  6703: 01                       fallthrough
      :                          @426
  6704: 64 87                    a0 = a1
  6706: 82 10 60                 ra = u64 [sp + 0x60]
  6709: 82 15 58                 s0 = u64 [sp + 0x58]
  6712: 82 16 50                 s1 = u64 [sp + 0x50]
  6715: 95 11 68                 sp = sp + 0x68
  6718: 32 00                    ret
      :                          @427
  6720: 82 15 48                 s0 = u64 [sp + 0x48]
  6723: 64 57                    a0 = s0
  6725: 64 68                    a1 = s1
  6727: 82 19 28                 a2 = u64 [sp + 0x28]
  6730: 82 1a 30                 a3 = u64 [sp + 0x30]
  6733: 82 1b 38                 a4 = u64 [sp + 0x38]
  6736: 50 20 b2 00 8e 00        ra = 178, jump @441
      :                          @428 [@dyn 89]
  6742: 33 08 01                 a1 = 0x1
  6745: 52 07 d7                 jump @426 if a0 != 0
      :                          @429
  6748: 82 6a 18                 a3 = u64 [s1 + 0x18]
  6751: 64 57                    a0 = s0
  6753: 82 18 18                 a1 = u64 [sp + 0x18]
  6756: 82 19 20                 a2 = u64 [sp + 0x20]
  6759: b4 a0 02 b4 00           ra = 180, jump [a3]
      :                          @430 [@dyn 90]
  6764: 33 08 01                 a1 = 0x1
  6767: 52 07 c1                 jump @426 if a0 != 0
      :                          @431
  6770: 82 17 10                 a0 = u64 [sp + 0x10]
  6773: 9a 77                    a0 = -a0
  6775: 7b 17 38                 u64 [sp + 0x38] = a0
  6778: 33 05 ff                 s0 = 0xffffffffffffffff
  6781: 01                       fallthrough
      :                          @432
  6782: 82 17 38                 a0 = u64 [sp + 0x38]
  6785: c8 57 07                 a0 = a0 + s0
  6788: 51 17 ff 45              jump @439 if a0 == 4294967295
      :                          @433
  6792: 82 69 20                 a2 = u64 [s1 + 0x20]
  6795: 82 17 48                 a0 = u64 [sp + 0x48]
  6798: 82 18 40                 a1 = u64 [sp + 0x40]
  6801: b4 90 02 b6 00           ra = 182, jump [a2]
      :                          @434 [@dyn 91]
  6806: 95 55 01                 s0 = s0 + 0x1
  6809: 51 07 e5                 jump @432 if a0 == 0
      :                          @435
  6812: 28 39                    jump @440
      :                          @436
  6814: 82 6a 18                 a3 = u64 [s1 + 0x18]
  6817: 82 17 48                 a0 = u64 [sp + 0x48]
  6820: 82 18 18                 a1 = u64 [sp + 0x18]
  6823: 82 19 20                 a2 = u64 [sp + 0x20]
  6826: b4 a0 02 b8 00           ra = 184, jump [a3]
      :                          @437 [@dyn 92]
  6831: 33 08 01                 a1 = 0x1
  6834: 52 07 7e ff              jump @426 if a0 != 0
      :                          @438
  6838: 33 08                    a1 = 0
  6840: 82 17 10                 a0 = u64 [sp + 0x10]
  6843: 82 19 08                 a2 = u64 [sp + 0x8]
  6846: 7a 79 30                 u32 [a0 + 0x30] = a2
  6849: 82 19                    a2 = u64 [sp]
  6851: 78 79 38                 u8 [a0 + 0x38] = a2
  6854: 28 6a ff                 jump @426
      :                          @439
  6857: 82 15 10                 s0 = u64 [sp + 0x10]
  6860: 82 17 10                 a0 = u64 [sp + 0x10]
  6863: d8 75 08                 a1 = s0 <u a0
  6866: 28 5e ff                 jump @426
      :                          @440
  6869: 82 17 10                 a0 = u64 [sp + 0x10]
  6872: d8 75 08                 a1 = s0 <u a0
  6875: 28 55 ff                 jump @426
      :                          @441
  6878: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  6881: 7b 10 20                 u64 [sp + 0x20] = ra
  6884: 7b 15 18                 u64 [sp + 0x18] = s0
  6887: 7b 16 10                 u64 [sp + 0x10] = s1
  6890: 83 9c                    i32 a5 = a2 + 0
  6892: 33 02 00 00 11           t0 = 0x110000
  6897: 64 a6                    s1 = a3
  6899: 64 85                    s0 = a1
  6901: 64 7a                    a3 = a0
  6903: aa 2c 21                 jump @444 if a5 == t0
      :                          @442
  6906: 82 5c 20                 a5 = u64 [s0 + 0x20]
  6909: 64 a7                    a0 = a3
  6911: 64 98                    a1 = a2
  6913: 7b 1b 08                 u64 [sp + 0x8] = a4
  6916: 7b 1a                    u64 [sp] = a3
  6918: b4 c0 02 ba 00           ra = 186, jump [a5]
      :                          @443 [@dyn 93]
  6923: 82 1a                    a3 = u64 [sp]
  6925: 82 1b 08                 a4 = u64 [sp + 0x8]
  6928: 64 78                    a1 = a0
  6930: 33 07 01                 a0 = 0x1
  6933: 52 08 20                 jump @447 if a1 != 0
      :                          @444
  6936: 51 06 1a                 jump @446 if s1 == 0
      :                          @445
  6939: 82 5c 18                 a5 = u64 [s0 + 0x18]
  6942: 64 a7                    a0 = a3
  6944: 64 68                    a1 = s1
  6946: 64 b9                    a2 = a4
  6948: 82 10 20                 ra = u64 [sp + 0x20]
  6951: 82 15 18                 s0 = u64 [sp + 0x18]
  6954: 82 16 10                 s1 = u64 [sp + 0x10]
  6957: 95 11 28                 sp = sp + 0x28
  6960: 32 0c                    jump [a5]
      :                          @446
  6962: 33 07                    a0 = 0
  6964: 01                       fallthrough
      :                          @447
  6965: 82 10 20                 ra = u64 [sp + 0x20]
  6968: 82 15 18                 s0 = u64 [sp + 0x18]
  6971: 82 16 10                 s1 = u64 [sp + 0x10]
  6974: 95 11 28                 sp = sp + 0x28
  6977: 32 00                    ret
      :                          @448
  6979: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  6983: 7b 10 80 00              u64 [sp + 0x80] = ra
  6987: 7b 15 78                 u64 [sp + 0x78] = s0
  6990: 7b 16 70                 u64 [sp + 0x70] = s1
  6993: 49 11 60 20              u64 [sp + 96] = 0x20
  6997: 33 0a 03                 a3 = 0x3
  7000: 78 1a 68                 u8 [sp + 0x68] = a3
  7003: 82 96 20                 s1 = u64 [a2 + 0x20]
  7006: 49 11 30                 u64 [sp + 48] = 0
  7009: 49 11 40                 u64 [sp + 64] = 0
  7012: 7b 17 50                 u64 [sp + 0x50] = a0
  7015: 7b 18 58                 u64 [sp + 0x58] = a1
  7018: 51 06 0a 01              jump @470 if s1 == 0
      :                          @449
  7022: 82 97 28                 a0 = u64 [a2 + 0x28]
  7025: 51 07 79 01              jump @480 if a0 == 0
      :                          @450
  7029: 49 11 28                 u64 [sp + 40] = 0
  7032: 82 95                    s0 = u64 [a2]
  7034: 7b 19 08                 u64 [sp + 0x8] = a2
  7037: 82 98 10                 a1 = u64 [a2 + 0x10]
  7040: 7b 18 18                 u64 [sp + 0x18] = a1
  7043: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  7046: 97 88 03                 a1 = a1 << 0x3
  7049: 98 88 03                 a1 = a1 >> 0x3
  7052: 95 88 01                 a1 = a1 + 0x1
  7055: 7b 18                    u64 [sp] = a1
  7057: 95 55 08                 s0 = s0 + 0x8
  7060: 96 78 38                 a1 = a0 * 0x38
  7063: 95 66 18                 s1 = s1 + 0x18
  7066: 33 07 a4 00              a0 = 0xa4
  7070: 7b 17 10                 u64 [sp + 0x10] = a0
  7073: 01                       fallthrough
      :                          @451
  7074: 7b 18 20                 u64 [sp + 0x20] = a1
  7077: 82 59                    a2 = u64 [s0]
  7079: 51 09 18                 jump @454 if a2 == 0
      :                          @452
  7082: 82 1a 58                 a3 = u64 [sp + 0x58]
  7085: 82 17 50                 a0 = u64 [sp + 0x50]
  7088: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  7091: 82 aa 18                 a3 = u64 [a3 + 0x18]
  7094: b4 a0 02 bc 00           ra = 188, jump [a3]
      :                          @453 [@dyn 94]
  7099: 52 07 55 01              jump @483 if a0 != 0
      :                          @454
  7103: 81 67 10                 a0 = i32 [s1 + 0x10]
  7106: 7a 17 60                 u32 [sp + 0x60] = a0
  7109: 7c 67 18                 a0 = u8 [s1 + 0x18]
  7112: 78 17 68                 u8 [sp + 0x68] = a0
  7115: 81 67 14                 a0 = i32 [s1 + 0x14]
  7118: 7a 17 64                 u32 [sp + 0x64] = a0
  7121: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  7124: 82 67                    a0 = u64 [s1]
  7126: 51 08 26                 jump @459 if a1 == 0
      :                          @455
  7129: 52 18 01 16              jump @457 if a1 != 1
      :                          @456
  7133: 97 77 04                 a0 = a0 << 0x4
  7136: 82 18 18                 a1 = u64 [sp + 0x18]
  7139: c8 87 07                 a0 = a0 + a1
  7142: 82 78 08                 a1 = u64 [a0 + 0x8]
  7145: 82 19 10                 a2 = u64 [sp + 0x10]
  7148: aa 98 07                 jump @458 if a1 == a2
      :                          @457
  7151: 33 08                    a1 = 0
  7153: 28 0f                    jump @460
      :                          @458
  7155: 82 77                    a0 = u64 [a0]
  7157: 82 77                    a0 = u64 [a0]
  7159: 33 08 01                 a1 = 0x1
  7162: 28 06                    jump @460
      :                          @459
  7164: 33 08 01                 a1 = 0x1
  7167: 01                       fallthrough
      :                          @460
  7168: 7b 18 30                 u64 [sp + 0x30] = a1
  7171: 7b 17 38                 u64 [sp + 0x38] = a0
  7174: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  7177: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  7180: 51 08 26                 jump @465 if a1 == 0
      :                          @461
  7183: 52 18 01 16              jump @463 if a1 != 1
      :                          @462
  7187: 97 77 04                 a0 = a0 << 0x4
  7190: 82 18 18                 a1 = u64 [sp + 0x18]
  7193: c8 87 07                 a0 = a0 + a1
  7196: 82 78 08                 a1 = u64 [a0 + 0x8]
  7199: 82 19 10                 a2 = u64 [sp + 0x10]
  7202: aa 98 07                 jump @464 if a1 == a2
      :                          @463
  7205: 33 08                    a1 = 0
  7207: 28 0f                    jump @466
      :                          @464
  7209: 82 77                    a0 = u64 [a0]
  7211: 82 77                    a0 = u64 [a0]
  7213: 33 08 01                 a1 = 0x1
  7216: 28 06                    jump @466
      :                          @465
  7218: 33 08 01                 a1 = 0x1
  7221: 01                       fallthrough
      :                          @466
  7222: 7b 18 40                 u64 [sp + 0x40] = a1
  7225: 7b 17 48                 u64 [sp + 0x48] = a0
  7228: 82 67 08                 a0 = u64 [s1 + 0x8]
  7231: 97 77 04                 a0 = a0 << 0x4
  7234: 82 18 18                 a1 = u64 [sp + 0x18]
  7237: c8 78 08                 a1 = a1 + a0
  7240: 82 87                    a0 = u64 [a1]
  7242: 82 89 08                 a2 = u64 [a1 + 0x8]
  7245: 95 18 30                 a1 = sp + 0x30
  7248: b4 90 02 be 00           ra = 190, jump [a2]
      :                          @467 [@dyn 95]
  7253: 52 07 bb 00              jump @483 if a0 != 0
      :                          @468
  7257: 95 55 10                 s0 = s0 + 0x10
  7260: 82 18 20                 a1 = u64 [sp + 0x20]
  7263: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  7266: 95 66 38                 s1 = s1 + 0x38
  7269: 82 17 28                 a0 = u64 [sp + 0x28]
  7272: 95 77 01                 a0 = a0 + 0x1
  7275: 7b 17 28                 u64 [sp + 0x28] = a0
  7278: 52 08 34 ff              jump @451 if a1 != 0
      :                          @469
  7282: 28 6b                    jump @478
      :                          @470
  7284: 82 97 18                 a0 = u64 [a2 + 0x18]
  7287: 51 07 73                 jump @480 if a0 == 0
      :                          @471
  7290: 82 95 10                 s0 = u64 [a2 + 0x10]
  7293: 33 0a                    a3 = 0
  7295: 97 78 04                 a1 = a0 << 0x4
  7298: c8 58 08                 a1 = a1 + s0
  7301: 7b 18 20                 u64 [sp + 0x20] = a1
  7304: 7b 19 08                 u64 [sp + 0x8] = a2
  7307: 82 96                    s1 = u64 [a2]
  7309: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  7312: 97 77 04                 a0 = a0 << 0x4
  7315: 98 77 04                 a0 = a0 >> 0x4
  7318: 95 77 01                 a0 = a0 + 0x1
  7321: 7b 17                    u64 [sp] = a0
  7323: 95 66 08                 s1 = s1 + 0x8
  7326: 01                       fallthrough
      :                          @472
  7327: 7b 1a 28                 u64 [sp + 0x28] = a3
  7330: 82 69                    a2 = u64 [s1]
  7332: 51 09 17                 jump @475 if a2 == 0
      :                          @473
  7335: 82 1a 58                 a3 = u64 [sp + 0x58]
  7338: 82 17 50                 a0 = u64 [sp + 0x50]
  7341: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  7344: 82 aa 18                 a3 = u64 [a3 + 0x18]
  7347: b4 a0 02 c0 00           ra = 192, jump [a3]
      :                          @474 [@dyn 96]
  7352: 52 07 58                 jump @483 if a0 != 0
      :                          @475
  7355: 82 57                    a0 = u64 [s0]
  7357: 82 59 08                 a2 = u64 [s0 + 0x8]
  7360: 95 18 30                 a1 = sp + 0x30
  7363: b4 90 02 c2 00           ra = 194, jump [a2]
      :                          @476 [@dyn 97]
  7368: 52 07 48                 jump @483 if a0 != 0
      :                          @477
  7371: 95 66 10                 s1 = s1 + 0x10
  7374: 95 55 10                 s0 = s0 + 0x10
  7377: 82 1a 28                 a3 = u64 [sp + 0x28]
  7380: 95 aa 01                 a3 = a3 + 0x1
  7383: 82 17 20                 a0 = u64 [sp + 0x20]
  7386: ab 75 c5                 jump @472 if s0 != a0
      :                          @478
  7389: 82 19 08                 a2 = u64 [sp + 0x8]
  7392: 82 1a                    a3 = u64 [sp]
  7394: 82 97 08                 a0 = u64 [a2 + 0x8]
  7397: ac 7a 0d                 jump @481 if a3 <u a0
      :                          @479
  7400: 28 2d                    jump @484
      :                          @480
  7402: 33 0a                    a3 = 0
  7404: 82 97 08                 a0 = u64 [a2 + 0x8]
  7407: 54 07 26                 jump @484 if a0 <=u 0
      :                          @481
  7410: 82 97                    a0 = u64 [a2]
  7412: 97 a8 04                 a1 = a3 << 0x4
  7415: c8 87 09                 a2 = a0 + a1
  7418: 82 1a 58                 a3 = u64 [sp + 0x58]
  7421: 82 17 50                 a0 = u64 [sp + 0x50]
  7424: 82 98                    a1 = u64 [a2]
  7426: 82 99 08                 a2 = u64 [a2 + 0x8]
  7429: 82 aa 18                 a3 = u64 [a3 + 0x18]
  7432: b4 a0 02 c4 00           ra = 196, jump [a3]
      :                          @482 [@dyn 98]
  7437: 51 07 08                 jump @484 if a0 == 0
      :                          @483
  7440: 33 07 01                 a0 = 0x1
  7443: 28 05                    jump @485
      :                          @484
  7445: 33 07                    a0 = 0
  7447: 01                       fallthrough
      :                          @485
  7448: 82 10 80 00              ra = u64 [sp + 0x80]
  7452: 82 15 78                 s0 = u64 [sp + 0x78]
  7455: 82 16 70                 s1 = u64 [sp + 0x70]
  7458: 95 11 88 00              sp = sp + 0x88
  7462: 32 00                    ret
      :                          @486 [@dyn 99]
  7464: 32 00                    ret
      :                          @487 [@dyn 100]
  7466: 95 11 80                 sp = sp + 0xffffffffffffff80
  7469: 7b 10 78                 u64 [sp + 0x78] = ra
  7472: 7b 15 70                 u64 [sp + 0x70] = s0
  7475: 7b 16 68                 u64 [sp + 0x68] = s1
  7478: 64 92                    t0 = a2
  7480: 33 00                    ra = 0
  7482: 33 0b                    a4 = 0
  7484: 33 05                    s0 = 0
  7486: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
  7496: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
  7502: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
  7512: 82 79 10                 a2 = u64 [a0 + 0x10]
  7515: 7b 19 48                 u64 [sp + 0x48] = a2
  7518: 82 79                    a2 = u64 [a0]
  7520: 7b 19 38                 u64 [sp + 0x38] = a2
  7523: 82 77 08                 a0 = u64 [a0 + 0x8]
  7526: 7b 17 30                 u64 [sp + 0x30] = a0
  7529: 33 07 88 01 01           a0 = 0x10188
  7534: 7b 17 08                 u64 [sp + 0x8] = a0
  7537: 3a 07 08 00 03           a0 = u64 [0x30008]
  7542: 7b 17 60                 u64 [sp + 0x60] = a0
  7545: 7b 18 58                 u64 [sp + 0x58] = a1
  7548: 95 88 08                 a1 = a1 + 0x8
  7551: 7b 18                    u64 [sp] = a1
  7553: 33 0c 0a                 a5 = 0xa
  7556: 7b 12 20                 u64 [sp + 0x20] = t0
  7559: 7b 13 18                 u64 [sp + 0x18] = t1
  7562: 7b 14 10                 u64 [sp + 0x10] = t2
  7565: 28 3b                    jump @491
      :                          @488
  7567: 64 06                    s1 = ra
  7569: c8 89 07                 a0 = a2 + a1
  7572: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
  7575: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  7578: 88 77 01                 a0 = a0 <u 0x1
  7581: 01                       fallthrough
      :                          @489
  7582: 82 1a 48                 a3 = u64 [sp + 0x48]
  7585: 78 a7                    u8 [a3] = a0
  7587: 82 17 30                 a0 = u64 [sp + 0x30]
  7590: 82 7a 18                 a3 = u64 [a0 + 0x18]
  7593: 82 17 38                 a0 = u64 [sp + 0x38]
  7596: b4 a0 02 ca 00           ra = 202, jump [a3]
      :                          @490 [@dyn 101]
  7601: 64 5b                    a4 = s0
  7603: 82 12 20                 t0 = u64 [sp + 0x20]
  7606: 82 13 18                 t1 = u64 [sp + 0x18]
  7609: 82 14 10                 t2 = u64 [sp + 0x10]
  7612: 64 60                    ra = s1
  7614: 33 0c 0a                 a5 = 0xa
  7617: 82 15 40                 s0 = u64 [sp + 0x40]
  7620: 52 07 64 01              jump @532 if a0 != 0
      :                          @491
  7624: 84 57 ff 00              a0 = s0 & 0xff
  7628: 52 07 58 01              jump @531 if a0 != 0
      :                          @492
  7632: 7b 1b 50                 u64 [sp + 0x50] = a4
  7635: ae 02 0a                 jump @495 if t0 >=u ra
      :                          @493
  7638: 28 ef 00                 jump @522
      :                          @494
  7641: ac 02 ec 00              jump @522 if t0 <u ra
      :                          @495
  7645: c9 02 08                 a1 = t0 - ra
  7648: 82 16 58                 s1 = u64 [sp + 0x58]
  7651: c8 06 06                 s1 = s1 + ra
  7654: 55 18 10 1d              jump @501 if a1 >=u 16
      :                          @496
  7658: aa 02 d8 00              jump @521 if t0 == ra
      :                          @497
  7662: 33 0a                    a3 = 0
  7664: 01                       fallthrough
      :                          @498
  7665: c8 a6 07                 a0 = s1 + a3
  7668: 7c 77                    a0 = u8 [a0]
  7670: aa c7 a5 00              jump @516 if a0 == a5
      :                          @499
  7674: 95 aa 01                 a3 = a3 + 0x1
  7677: ab a8 f4                 jump @498 if a1 != a3
      :                          @500
  7680: 28 c2 00                 jump @521
      :                          @501
  7683: 95 69 07                 a2 = s1 + 0x7
  7686: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
  7689: c9 6a 07                 a0 = a3 - s1
  7692: d3 6a 0a                 a3 = a3 ^ s1
  7695: 88 aa 01                 a3 = a3 <u 0x1
  7698: 88 7b 01                 a4 = a0 <u 0x1
  7701: d4 ba 0a                 a3 = a3 | a4
  7704: 51 0a 45                 jump @507 if a3 == 0
      :                          @502
  7707: 33 07                    a0 = 0
  7709: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  7712: 82 1b                    a4 = u64 [sp]
  7714: c8 0b 0b                 a4 = a4 + ra
  7717: 28 08                    jump @504
      :                          @503
  7719: 82 1b                    a4 = u64 [sp]
  7721: c8 0b 0b                 a4 = a4 + ra
  7724: 01                       fallthrough
      :                          @504
  7725: c8 76 0c                 a5 = s1 + a0
  7728: 82 cc                    a5 = u64 [a5]
  7730: c8 7b 09                 a2 = a4 + a0
  7733: 82 99                    a2 = u64 [a2]
  7735: d3 4c 05                 s0 = a5 ^ t2
  7738: c8 35 05                 s0 = s0 + t1
  7741: e0 c5 0c                 a5 = s0 & ~a5
  7744: d3 49 05                 s0 = a2 ^ t2
  7747: c8 35 05                 s0 = s0 + t1
  7750: e0 95 09                 a2 = s0 & ~a2
  7753: d4 c9 09                 a2 = a2 | a5
  7756: 82 1c 60                 a5 = u64 [sp + 0x60]
  7759: d2 c9 09                 a2 = a2 & a5
  7762: 52 09 1f                 jump @510 if a2 != 0
      :                          @505
  7765: 95 77 10                 a0 = a0 + 0x10
  7768: ae 7a d5                 jump @504 if a3 >=u a0
      :                          @506
  7771: 28 16                    jump @510
      :                          @507
  7773: c8 a6 0b                 a4 = s1 + a3
  7776: 7c bb                    a4 = u8 [a4]
  7778: aa cb 51                 jump @519 if a4 == a5
      :                          @508
  7781: 95 aa 01                 a3 = a3 + 0x1
  7784: ab a7 f5                 jump @507 if a0 != a3
      :                          @509
  7787: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  7790: ae 7a b9                 jump @503 if a3 >=u a0
      :                          @510
  7793: aa 87 9b 00              jump @528 if a0 == a1
      :                          @511
  7797: 33 0a                    a3 = 0
  7799: c8 76 06                 s1 = s1 + a0
  7802: c9 72 08                 a1 = t0 - a0
  7805: c9 08 08                 a1 = a1 - ra
  7808: 33 0c 0a                 a5 = 0xa
  7811: 82 1b 50                 a4 = u64 [sp + 0x50]
  7814: 01                       fallthrough
      :                          @512
  7815: c8 a6 09                 a2 = s1 + a3
  7818: 7c 99                    a2 = u8 [a2]
  7820: aa c9 0b                 jump @515 if a2 == a5
      :                          @513
  7823: 95 aa 01                 a3 = a3 + 0x1
  7826: ab a8 f5                 jump @512 if a1 != a3
      :                          @514
  7829: 28 2d                    jump @521
      :                          @515
  7831: c8 7a 0a                 a3 = a3 + a0
  7834: 01                       fallthrough
      :                          @516
  7835: c8 0a 0a                 a3 = a3 + ra
  7838: 95 a0 01                 ra = a3 + 0x1
  7841: ae 2a 38 ff              jump @494 if a3 >=u t0
      :                          @517
  7845: 82 17 58                 a0 = u64 [sp + 0x58]
  7848: c8 7a 0a                 a3 = a3 + a0
  7851: 7c a7                    a0 = u8 [a3]
  7853: ab c7 2c ff              jump @494 if a0 != a5
      :                          @518
  7857: 28 62                    jump @529
      :                          @519
  7859: 82 1b 50                 a4 = u64 [sp + 0x50]
  7862: c8 0a 0a                 a3 = a3 + ra
  7865: 95 a0 01                 ra = a3 + 0x1
  7868: ac 2a e9                 jump @517 if a3 <u t0
      :                          @520
  7871: 28 1a ff                 jump @494
      :                          @521
  7874: 64 20                    ra = t0
  7876: 01                       fallthrough
      :                          @522
  7877: 49 11 40 01              u64 [sp + 64] = 0x1
  7881: 64 b5                    s0 = a4
  7883: 64 26                    s1 = t0
  7885: aa 2b 57                 jump @531 if a4 == t0
      :                          @523
  7888: 82 17 48                 a0 = u64 [sp + 0x48]
  7891: 7c 77                    a0 = u8 [a0]
  7893: 51 07 23                 jump @526 if a0 == 0
      :                          @524
  7896: 82 17 30                 a0 = u64 [sp + 0x30]
  7899: 82 7a 18                 a3 = u64 [a0 + 0x18]
  7902: 33 09 04                 a2 = 0x4
  7905: 82 17 38                 a0 = u64 [sp + 0x38]
  7908: 82 18 08                 a1 = u64 [sp + 0x8]
  7911: 7b 10 28                 u64 [sp + 0x28] = ra
  7914: b4 a0 02 cc 00           ra = 204, jump [a3]
      :                          @525 [@dyn 102]
  7919: 82 1b 50                 a4 = u64 [sp + 0x50]
  7922: 82 10 28                 ra = u64 [sp + 0x28]
  7925: 52 07 33                 jump @532 if a0 != 0
      :                          @526
  7928: c9 b6 09                 a2 = s1 - a4
  7931: 82 18 58                 a1 = u64 [sp + 0x58]
  7934: c8 b8 08                 a1 = a1 + a4
  7937: ab b6 8e fe              jump @488 if s1 != a4
      :                          @527
  7941: 64 06                    s1 = ra
  7943: 33 07                    a0 = 0
  7945: 28 95 fe                 jump @489
      :                          @528
  7948: 64 20                    ra = t0
  7950: 82 1b 50                 a4 = u64 [sp + 0x50]
  7953: 28 b4                    jump @522
      :                          @529
  7955: 49 11 40                 u64 [sp + 64] = 0
  7958: 64 05                    s0 = ra
  7960: 64 06                    s1 = ra
  7962: 82 17 48                 a0 = u64 [sp + 0x48]
  7965: 7c 77                    a0 = u8 [a0]
  7967: 52 07 b9                 jump @524 if a0 != 0
      :                          @530
  7970: 28 d6                    jump @526
      :                          @531
  7972: 33 07                    a0 = 0
  7974: 28 06                    jump @533
      :                          @532
  7976: 33 07 01                 a0 = 0x1
  7979: 01                       fallthrough
      :                          @533
  7980: 82 10 78                 ra = u64 [sp + 0x78]
  7983: 82 15 70                 s0 = u64 [sp + 0x70]
  7986: 82 16 68                 s1 = u64 [sp + 0x68]
  7989: 95 11 80 00              sp = sp + 0x80
  7993: 32 00                    ret
      :                          @534 [@dyn 103]
  7995: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  7998: 7b 10 20                 u64 [sp + 0x20] = ra
  8001: 7b 15 18                 u64 [sp + 0x18] = s0
  8004: 7b 16 10                 u64 [sp + 0x10] = s1
  8007: 82 75 10                 s0 = u64 [a0 + 0x10]
  8010: 7c 59                    a2 = u8 [s0]
  8012: 82 7b                    a4 = u64 [a0]
  8014: 82 76 08                 s1 = u64 [a0 + 0x8]
  8017: 51 09 33                 jump @538 if a2 == 0
      :                          @535
  8020: 82 6a 18                 a3 = u64 [s1 + 0x18]
  8023: 7b 18 08                 u64 [sp + 0x8] = a1
  8026: 33 08 88 01 01           a1 = 0x10188
  8031: 33 09 04                 a2 = 0x4
  8034: 64 b7                    a0 = a4
  8036: 7b 1b                    u64 [sp] = a4
  8038: b4 a0 02 d0 00           ra = 208, jump [a3]
      :                          @536 [@dyn 104]
  8043: 82 18 08                 a1 = u64 [sp + 0x8]
  8046: 82 1b                    a4 = u64 [sp]
  8048: 51 07 14                 jump @538 if a0 == 0
      :                          @537
  8051: 33 07 01                 a0 = 0x1
  8054: 82 10 20                 ra = u64 [sp + 0x20]
  8057: 82 15 18                 s0 = u64 [sp + 0x18]
  8060: 82 16 10                 s1 = u64 [sp + 0x10]
  8063: 95 11 28                 sp = sp + 0x28
  8066: 32 00                    ret
      :                          @538
  8068: 83 87                    i32 a0 = a1 + 0
  8070: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  8073: 88 77 01                 a0 = a0 <u 0x1
  8076: 78 57                    u8 [s0] = a0
  8078: 82 6c 20                 a5 = u64 [s1 + 0x20]
  8081: 64 b7                    a0 = a4
  8083: 82 10 20                 ra = u64 [sp + 0x20]
  8086: 82 15 18                 s0 = u64 [sp + 0x18]
  8089: 82 16 10                 s1 = u64 [sp + 0x10]
  8092: 95 11 28                 sp = sp + 0x28
  8095: 32 0c                    jump [a5]
      :                          @539 [@dyn 105]
  8097: 64 8a                    a3 = a1
  8099: 33 08 58 01 01           a1 = 0x10158
  8104: 64 a9                    a2 = a3
  8106: 28 99 fb                 jump @448
      :                          @540 [@dyn 106]
  8109: 80 77                    a0 = u32 [a0]
  8111: 64 89                    a2 = a1
  8113: 33 08 01                 a1 = 0x1
  8116: 28 d6 f7                 jump @384
      :                          @541
  8119: 95 11 70 ff              sp = sp + 0xffffffffffffff70
  8123: 7b 10 88 00              u64 [sp + 0x88] = ra
  8127: 7b 15 80 00              u64 [sp + 0x80] = s0
  8131: 7b 16 78                 u64 [sp + 0x78] = s1
  8134: 64 75                    s0 = a0
  8136: 7c 77 08                 a0 = u8 [a0 + 0x8]
  8139: 64 8b                    a4 = a1
  8141: 33 08 01                 a1 = 0x1
  8144: 33 06 01                 s1 = 0x1
  8147: 51 07 1d                 jump @543 if a0 == 0
      :                          @542
  8150: 78 56 08                 u8 [s0 + 0x8] = s1
  8153: 46 15 09 01              u8 [s0 + 9] = 0x1
  8157: 64 57                    a0 = s0
  8159: 82 10 88 00              ra = u64 [sp + 0x88]
  8163: 82 15 80 00              s0 = u64 [sp + 0x80]
  8167: 82 16 78                 s1 = u64 [sp + 0x78]
  8170: 95 11 90 00              sp = sp + 0x90
  8174: 32 00                    ret
      :                          @543
  8176: 64 9a                    a3 = a2
  8178: 82 5c                    a5 = u64 [s0]
  8180: 80 c7 34                 a0 = u32 [a5 + 0x34]
  8183: 7c 58 09                 a1 = u8 [s0 + 0x9]
  8186: 84 79 04                 a2 = a0 & 0x4
  8189: 52 09 45                 jump @549 if a2 != 0
      :                          @544
  8192: 51 08 32                 jump @547 if a1 == 0
      :                          @545
  8195: 82 c8 28                 a1 = u64 [a5 + 0x28]
  8198: 82 c7 20                 a0 = u64 [a5 + 0x20]
  8201: 82 83 18                 t1 = u64 [a1 + 0x18]
  8204: 33 08 8c 01 01           a1 = 0x1018c
  8209: 33 09 02                 a2 = 0x2
  8212: 64 a6                    s1 = a3
  8214: 7b 1b 10                 u64 [sp + 0x10] = a4
  8217: 7b 1c 08                 u64 [sp + 0x8] = a5
  8220: b4 30 02 d6 00           ra = 214, jump [t1]
      :                          @546 [@dyn 107]
  8225: 82 1c 08                 a5 = u64 [sp + 0x8]
  8228: 82 1b 10                 a4 = u64 [sp + 0x10]
  8231: 64 6a                    a3 = s1
  8233: 33 08 01                 a1 = 0x1
  8236: 33 06 01                 s1 = 0x1
  8239: 52 07 a7                 jump @542 if a0 != 0
      :                          @547
  8242: 64 b7                    a0 = a4
  8244: 64 c8                    a1 = a5
  8246: b4 a0 02 d8 00           ra = 216, jump [a3]
      :                          @548 [@dyn 108]
  8251: 33 08 01                 a1 = 0x1
  8254: 64 76                    s1 = a0
  8256: 28 96                    jump @542
      :                          @549
  8258: 52 08 37                 jump @553 if a1 != 0
      :                          @550
  8261: 82 c8 28                 a1 = u64 [a5 + 0x28]
  8264: 82 c7 20                 a0 = u64 [a5 + 0x20]
  8267: 82 83 18                 t1 = u64 [a1 + 0x18]
  8270: 33 08 90 01 01           a1 = 0x10190
  8275: 33 09 01                 a2 = 0x1
  8278: 33 06 01                 s1 = 0x1
  8281: 7b 1a                    u64 [sp] = a3
  8283: 7b 1b 10                 u64 [sp + 0x10] = a4
  8286: 7b 1c 08                 u64 [sp + 0x8] = a5
  8289: b4 30 02 da 00           ra = 218, jump [t1]
      :                          @551 [@dyn 109]
  8294: 82 1c 08                 a5 = u64 [sp + 0x8]
  8297: 82 1b 10                 a4 = u64 [sp + 0x10]
  8300: 82 1a                    a3 = u64 [sp]
  8302: 33 08 01                 a1 = 0x1
  8305: 52 07 65 ff              jump @542 if a0 != 0
      :                          @552
  8309: 81 c7 34                 a0 = i32 [a5 + 0x34]
  8312: 01                       fallthrough
      :                          @553
  8313: 33 06 01                 s1 = 0x1
  8316: 78 16 37                 u8 [sp + 0x37] = s1
  8319: 82 c8 20                 a1 = u64 [a5 + 0x20]
  8322: 82 c9 28                 a2 = u64 [a5 + 0x28]
  8325: 7b 18 18                 u64 [sp + 0x18] = a1
  8328: 7b 19 20                 u64 [sp + 0x20] = a2
  8331: 95 18 37                 a1 = sp + 0x37
  8334: 7b 18 28                 u64 [sp + 0x28] = a1
  8337: 81 c8 30                 a1 = i32 [a5 + 0x30]
  8340: 7c c9 38                 a2 = u8 [a5 + 0x38]
  8343: 82 c3                    t1 = u64 [a5]
  8345: 82 c4 08                 t2 = u64 [a5 + 0x8]
  8348: 82 c0 10                 ra = u64 [a5 + 0x10]
  8351: 82 c2 18                 t0 = u64 [a5 + 0x18]
  8354: 7a 17 6c                 u32 [sp + 0x6c] = a0
  8357: 7a 18 68                 u32 [sp + 0x68] = a1
  8360: 78 19 70                 u8 [sp + 0x70] = a2
  8363: 7b 13 38                 u64 [sp + 0x38] = t1
  8366: 7b 14 40                 u64 [sp + 0x40] = t2
  8369: 7b 10 48                 u64 [sp + 0x48] = ra
  8372: 7b 12 50                 u64 [sp + 0x50] = t0
  8375: 95 17 18                 a0 = sp + 0x18
  8378: 7b 17 58                 u64 [sp + 0x58] = a0
  8381: 33 07 58 01 01           a0 = 0x10158
  8386: 7b 17 60                 u64 [sp + 0x60] = a0
  8389: 95 18 38                 a1 = sp + 0x38
  8392: 64 b7                    a0 = a4
  8394: b4 a0 02 dc 00           ra = 220, jump [a3]
      :                          @554 [@dyn 110]
  8399: 52 07 21                 jump @557 if a0 != 0
      :                          @555
  8402: 82 18 60                 a1 = u64 [sp + 0x60]
  8405: 82 17 58                 a0 = u64 [sp + 0x58]
  8408: 82 8a 18                 a3 = u64 [a1 + 0x18]
  8411: 33 08 8e 01 01           a1 = 0x1018e
  8416: 33 09 02                 a2 = 0x2
  8419: b4 a0 02 de 00           ra = 222, jump [a3]
      :                          @556 [@dyn 111]
  8424: 64 76                    s1 = a0
  8426: 33 08 01                 a1 = 0x1
  8429: 28 e9 fe                 jump @542
      :                          @557
  8432: 33 08 01                 a1 = 0x1
  8435: 28 e3 fe                 jump @542
      :                          @558
  8438: 51 08 9b 00              jump @579 if a1 == 0
      :                          @559
  8442: 64 79                    a2 = a0
  8444: 7c 77                    a0 = u8 [a0]
  8446: 51 07 91 00              jump @578 if a0 == 0
      :                          @560
  8450: 51 27 ff 00 90 00        jump @580 if a0 == 255
      :                          @561
  8456: 6c 7a                    a3 = sext.b a0
  8458: 57 0a 09                 jump @563 if a3 <s 0
      :                          @562
  8461: 33 0a                    a3 = 0
  8463: 33 08                    a1 = 0
  8465: 28 73                    jump @577
      :                          @563
  8467: 55 27 c0 00 0d           jump @565 if a0 >=u 192
      :                          @564
  8472: 33 0a 01                 a3 = 0x1
  8475: 33 0b 80                 a4 = 0xffffffffffffff80
  8478: 28 4a                    jump @574
      :                          @565
  8480: 55 27 e0 00 0e           jump @567 if a0 >=u 224
      :                          @566
  8485: 33 0a 02                 a3 = 0x2
  8488: 33 0b 40 ff              a4 = 0xffffffffffffff40
  8492: 28 3c                    jump @574
      :                          @567
  8494: 55 27 f0 00 0e           jump @569 if a0 >=u 240
      :                          @568
  8499: 33 0a 03                 a3 = 0x3
  8502: 33 0b 20 ff              a4 = 0xffffffffffffff20
  8506: 28 2e                    jump @574
      :                          @569
  8508: 55 27 f8 00 0e           jump @571 if a0 >=u 248
      :                          @570
  8513: 33 0a 04                 a3 = 0x4
  8516: 33 0b 10 ff              a4 = 0xffffffffffffff10
  8520: 28 20                    jump @574
      :                          @571
  8522: 55 27 fc 00 0e           jump @573 if a0 >=u 252
      :                          @572
  8527: 33 0a 05                 a3 = 0x5
  8530: 33 0b 08 ff              a4 = 0xffffffffffffff08
  8534: 28 12                    jump @574
      :                          @573
  8536: 88 7a fe 00              a3 = a0 <u 0xfe
  8540: 33 0b 04 ff              a4 = 0xffffffffffffff04
  8544: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  8548: 85 aa 07                 a3 = a3 ^ 0x7
  8551: 01                       fallthrough
      :                          @574
  8552: ae 8a 2b                 jump @581 if a3 >=u a1
      :                          @575
  8555: 33 08                    a1 = 0
  8557: c8 b7 07                 a0 = a0 + a4
  8560: 64 ab                    a4 = a3
  8562: 01                       fallthrough
      :                          @576
  8563: c8 b9 0c                 a5 = a2 + a4
  8566: 7c cc                    a5 = u8 [a5]
  8568: 97 88 08                 a1 = a1 << 0x8
  8571: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  8574: d4 c8 08                 a1 = a1 | a5
  8577: 52 0b f2                 jump @576 if a4 != 0
      :                          @577
  8580: 8a a9 03                 i32 a2 = a3 << 0x3
  8583: cf 97 07                 a0 = a0 << a2
  8586: c8 87 07                 a0 = a0 + a1
  8589: 32 00                    ret
      :                          @578
  8591: 32 00                    ret
      :                          @579
  8593: 00                       trap
      :                          @580
  8594: 00                       trap
      :                          @581
  8595: 00                       trap
      :                          @582
  8596: 95 11 90 fc              sp = sp + 0xfffffffffffffc90
  8600: 7b 10 68 03              u64 [sp + 0x368] = ra
  8604: 7b 15 60 03              u64 [sp + 0x360] = s0
  8608: 7b 16 58 03              u64 [sp + 0x358] = s1
  8612: 64 95                    s0 = a2
  8614: 7b 18 88 00              u64 [sp + 0x88] = a1
  8618: 7b 17                    u64 [sp] = a0
  8620: 95 17 c8 01              a0 = sp + 0x1c8
  8624: 33 09 80 00              a2 = 0x80
  8628: 33 08                    a1 = 0
  8630: 50 20 e0 00 6d f5        ra = 224, jump @368
      :                          @583 [@dyn 112]
  8636: 64 5b                    a4 = s0
  8638: 3a 0c 10 00 03           a5 = u64 [0x30010]
  8643: 3a 07 18 00 03           a0 = u64 [0x30018]
  8648: 3a 08 20 00 03           a1 = u64 [0x30020]
  8653: 3a 09 28 00 03           a2 = u64 [0x30028]
  8658: 7b 1c 78 01              u64 [sp + 0x178] = a5
  8662: 7b 17 38                 u64 [sp + 0x38] = a0
  8665: 7b 17 80 01              u64 [sp + 0x180] = a0
  8669: 7b 18 30                 u64 [sp + 0x30] = a1
  8672: 7b 18 88 01              u64 [sp + 0x188] = a1
  8676: 7b 19 28                 u64 [sp + 0x28] = a2
  8679: 7b 19 90 01              u64 [sp + 0x190] = a2
  8683: 3a 06 30 00 03           s1 = u64 [0x30030]
  8688: 3a 0a 38 00 03           a3 = u64 [0x30038]
  8693: 3a 07 40 00 03           a0 = u64 [0x30040]
  8698: 33 05 48 00 03           s0 = 0x30048
  8703: 3a 08 48 00 03           a1 = u64 [0x30048]
  8708: 7b 16 98 01              u64 [sp + 0x198] = s1
  8712: 7b 1a a0 01              u64 [sp + 0x1a0] = a3
  8716: 7b 17 20                 u64 [sp + 0x20] = a0
  8719: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  8723: 7b 18 18                 u64 [sp + 0x18] = a1
  8726: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
  8730: 49 21 b8 01              u64 [sp + 440] = 0
  8734: 49 21 c0 01              u64 [sp + 448] = 0
  8738: 49 21 48 02              u64 [sp + 584] = 0
  8742: 46 21 50 02              u8 [sp + 592] = 0
  8746: 7b 1a 98 00              u64 [sp + 0x98] = a3
  8750: 7b 16 a0 00              u64 [sp + 0xa0] = s1
  8754: 51 0b d7 05              jump @618 if a4 == 0
      :                          @584
  8758: 33 03                    t1 = 0
  8760: 33 0c                    a5 = 0
  8762: 3a 07 50 00 03           a0 = u64 [0x30050]
  8767: 7b 17 10                 u64 [sp + 0x10] = a0
  8770: 33 07 63 02 01           a0 = 0x10263
  8775: 7b 17 08                 u64 [sp + 0x8] = a0
  8778: 7b 1b 90 00              u64 [sp + 0x90] = a4
  8782: 01                       fallthrough
      :                          @585
  8783: 33 0a 80 00              a3 = 0x80
  8787: ab a3 28                 jump @588 if t1 != a3
      :                          @586
  8790: 82 17 b8 01              a0 = u64 [sp + 0x1b8]
  8794: 95 75 80 00              s0 = a0 + 0x80
  8798: 7b 15 b8 01              u64 [sp + 0x1b8] = s0
  8802: 82 19 c0 01              a2 = u64 [sp + 0x1c0]
  8806: 7b 1c 80 00              u64 [sp + 0x80] = a5
  8810: 53 17 80 32              jump @592 if a0 <u 4294967168
      :                          @587
  8814: 95 99 01                 a2 = a2 + 0x1
  8817: 7b 19 70 01              u64 [sp + 0x170] = a2
  8821: 7b 19 c0 01              u64 [sp + 0x1c0] = a2
  8825: 28 28                    jump @593
      :                          @588
  8827: 9a 37 80 00              a0 = 0x80 - t1
  8831: c9 cb 08                 a1 = a4 - a5
  8834: e6 87 05                 s0 = minu(a0, a1)
  8837: c8 35 09                 a2 = s0 + t1
  8840: ac 59 1f 0c              jump @660 if a2 <u s0
      :                          @589
  8844: 56 29 80 00 1c 0c        jump @661 if a2 >u 128
      :                          @590
  8850: c8 c5 06                 s1 = s0 + a5
  8853: ae 56 23 05              jump @613 if s1 >=u s0
      :                          @591
  8857: 28 0c 0c                 jump @658
      :                          @592
  8860: 7b 19 70 01              u64 [sp + 0x170] = a2
  8864: 01                       fallthrough
      :                          @593
  8865: 95 17 d8 02              a0 = sp + 0x2d8
  8869: 33 09 80 00              a2 = 0x80
  8873: 95 18 c8 01              a1 = sp + 0x1c8
  8877: 50 20 e2 00 c4 f3        ra = 226, jump @350
      :                          @594 [@dyn 113]
  8883: 82 16 78 01              s1 = u64 [sp + 0x178]
  8887: 82 1c 80 01              a5 = u64 [sp + 0x180]
  8891: 82 13 88 01              t1 = u64 [sp + 0x188]
  8895: 82 12 90 01              t0 = u64 [sp + 0x190]
  8899: 82 1b 98 01              a4 = u64 [sp + 0x198]
  8903: 82 1a a0 01              a3 = u64 [sp + 0x1a0]
  8907: 82 18 a8 01              a1 = u64 [sp + 0x1a8]
  8911: 82 14 b0 01              t2 = u64 [sp + 0x1b0]
  8915: 82 17 a0 00              a0 = u64 [sp + 0xa0]
  8919: d3 57 07                 a0 = a0 ^ s0
  8922: 7b 17 28 01              u64 [sp + 0x128] = a0
  8926: 82 17 98 00              a0 = u64 [sp + 0x98]
  8930: 82 19 70 01              a2 = u64 [sp + 0x170]
  8934: d3 97 07                 a0 = a0 ^ a2
  8937: 7b 17 38 01              u64 [sp + 0x138] = a0
  8941: 33 05 0c                 s0 = 0xc
  8944: 82 17 08                 a0 = u64 [sp + 0x8]
  8947: 7b 16 40                 u64 [sp + 0x40] = s1
  8950: 7b 16 20 01              u64 [sp + 0x120] = s1
  8954: 64 76                    s1 = a0
  8956: 7b 1b 60                 u64 [sp + 0x60] = a4
  8959: 64 b9                    a2 = a4
  8961: 82 17 10                 a0 = u64 [sp + 0x10]
  8964: 7b 17 48 01              u64 [sp + 0x148] = a0
  8968: 7b 1c 48                 u64 [sp + 0x48] = a5
  8971: 7b 1c 30 01              u64 [sp + 0x130] = a5
  8975: 7b 1a 68                 u64 [sp + 0x68] = a3
  8978: 64 a0                    ra = a3
  8980: 82 17 38                 a0 = u64 [sp + 0x38]
  8983: 7b 17 58 01              u64 [sp + 0x158] = a0
  8987: 7b 13 50                 u64 [sp + 0x50] = t1
  8990: 7b 13 40 01              u64 [sp + 0x140] = t1
  8994: 7b 18 70                 u64 [sp + 0x70] = a1
  8997: 64 8a                    a3 = a1
  8999: 82 1b 20                 a4 = u64 [sp + 0x20]
  9002: 82 17 30                 a0 = u64 [sp + 0x30]
  9005: 7b 17 68 01              u64 [sp + 0x168] = a0
  9009: 7b 12 58                 u64 [sp + 0x58] = t0
  9012: 64 2c                    a5 = t0
  9014: 7b 14 78                 u64 [sp + 0x78] = t2
  9017: 64 42                    t0 = t2
  9019: 82 17 18                 a0 = u64 [sp + 0x18]
  9022: 7b 17 50 01              u64 [sp + 0x150] = a0
  9026: 82 17 28                 a0 = u64 [sp + 0x28]
  9029: 7b 17 60 01              u64 [sp + 0x160] = a0
  9033: 01                       fallthrough
      :                          @595
  9034: 7b 10 18 01              u64 [sp + 0x118] = ra
  9038: 7b 1a 70 01              u64 [sp + 0x170] = a3
  9042: 7c 60 f9                 ra = u8 [s1 + 0xfffffffffffffff9]
  9045: 56 10 0f 48 0b           jump @650 if ra >u 15
      :                          @596
  9050: 7c 67 fa                 a0 = u8 [s1 + 0xfffffffffffffffa]
  9053: 33 08 10                 a1 = 0x10
  9056: ae 87 3e 0b              jump @651 if a0 >=u a1
      :                          @597
  9060: 7b 1b 10 01              u64 [sp + 0x110] = a4
  9064: 7c 63 fb                 t1 = u8 [s1 + 0xfffffffffffffffb]
  9067: 55 13 10 35 0b           jump @653 if t1 >=u 16
      :                          @598
  9072: 7b 15 08 01              u64 [sp + 0x108] = s0
  9076: 7c 64 fc                 t2 = u8 [s1 + 0xfffffffffffffffc]
  9079: 55 14 10 28 0b           jump @652 if t2 >=u 16
      :                          @599
  9084: 7b 1c 00 01              u64 [sp + 0x100] = a5
  9088: 7c 6c fd                 a5 = u8 [s1 + 0xfffffffffffffffd]
  9091: 55 1c 10 17 0b           jump @647 if a5 >=u 16
      :                          @600
  9096: 7b 12 f8 00              u64 [sp + 0xf8] = t0
  9100: 7c 62 fe                 t0 = u8 [s1 + 0xfffffffffffffffe]
  9103: 55 12 10 0c 0b           jump @648 if t0 >=u 16
      :                          @601
  9108: 7c 6a ff                 a3 = u8 [s1 + 0xffffffffffffffff]
  9111: 55 1a 10 05 0b           jump @649 if a3 >=u 16
      :                          @602
  9116: 7c 6b                    a4 = u8 [s1]
  9118: 55 1b 10 03 0b           jump @654 if a4 >=u 16
      :                          @603
  9123: 7c 65 01                 s0 = u8 [s1 + 0x1]
  9126: 55 15 10 6b 0a           jump @641 if s0 >=u 16
      :                          @604
  9131: 7b 15 f0 00              u64 [sp + 0xf0] = s0
  9135: 7c 65 02                 s0 = u8 [s1 + 0x2]
  9138: 55 15 10 5f 0a           jump @641 if s0 >=u 16
      :                          @605
  9143: 7b 15 e8 00              u64 [sp + 0xe8] = s0
  9147: 7c 65 03                 s0 = u8 [s1 + 0x3]
  9150: 55 15 10 53 0a           jump @641 if s0 >=u 16
      :                          @606
  9155: 7b 15 e0 00              u64 [sp + 0xe0] = s0
  9159: 7c 65 04                 s0 = u8 [s1 + 0x4]
  9162: 55 15 10 47 0a           jump @641 if s0 >=u 16
      :                          @607
  9167: 7b 15 d8 00              u64 [sp + 0xd8] = s0
  9171: 7c 65 05                 s0 = u8 [s1 + 0x5]
  9174: 55 15 10 3b 0a           jump @641 if s0 >=u 16
      :                          @608
  9179: 7b 15 d0 00              u64 [sp + 0xd0] = s0
  9183: 7c 65 06                 s0 = u8 [s1 + 0x6]
  9186: 55 15 10 2f 0a           jump @641 if s0 >=u 16
      :                          @609
  9191: 7b 15 c8 00              u64 [sp + 0xc8] = s0
  9195: 7c 65 07                 s0 = u8 [s1 + 0x7]
  9198: 55 15 10 23 0a           jump @641 if s0 >=u 16
      :                          @610
  9203: 7b 15 c0 00              u64 [sp + 0xc0] = s0
  9207: 7c 65 08                 s0 = u8 [s1 + 0x8]
  9210: 55 15 10 17 0a           jump @641 if s0 >=u 16
      :                          @611
  9215: 97 00 03                 ra = ra << 0x3
  9218: 95 18 d8 02              a1 = sp + 0x2d8
  9222: c8 80 00                 ra = ra + a1
  9225: 7b 15 b0 00              u64 [sp + 0xb0] = s0
  9229: 82 05                    s0 = u64 [ra]
  9231: 97 77 03                 a0 = a0 << 0x3
  9234: c8 87 07                 a0 = a0 + a1
  9237: 82 77                    a0 = u64 [a0]
  9239: 7b 16 b8 00              u64 [sp + 0xb8] = s1
  9243: 7b 19 a8 00              u64 [sp + 0xa8] = a2
  9247: 82 16 20 01              s1 = u64 [sp + 0x120]
  9251: c8 96 06                 s1 = s1 + a2
  9254: c8 65 05                 s0 = s0 + s1
  9257: 82 19 28 01              a2 = u64 [sp + 0x128]
  9261: d3 59 09                 a2 = a2 ^ s0
  9264: 7b 19 20 01              u64 [sp + 0x120] = a2
  9268: c8 57 07                 a0 = a0 + s0
  9271: 7b 17 28 01              u64 [sp + 0x128] = a0
  9275: 97 33 03                 t1 = t1 << 0x3
  9278: c8 83 03                 t1 = t1 + a1
  9281: 82 37                    a0 = u64 [t1]
  9283: 97 44 03                 t2 = t2 << 0x3
  9286: c8 84 04                 t2 = t2 + a1
  9289: 82 45                    s0 = u64 [t2]
  9291: 82 10 18 01              ra = u64 [sp + 0x118]
  9295: 82 16 30 01              s1 = u64 [sp + 0x130]
  9299: c8 06 06                 s1 = s1 + ra
  9302: c8 67 07                 a0 = a0 + s1
  9305: 82 19 38 01              a2 = u64 [sp + 0x138]
  9309: d3 97 03                 t1 = a0 ^ a2
  9312: c8 57 04                 t2 = a0 + s0
  9315: 97 cc 03                 a5 = a5 << 0x3
  9318: c8 8c 0c                 a5 = a5 + a1
  9321: 82 c7                    a0 = u64 [a5]
  9323: 97 22 03                 t0 = t0 << 0x3
  9326: c8 82 02                 t0 = t0 + a1
  9329: 82 2c                    a5 = u64 [t0]
  9331: 82 16 40 01              s1 = u64 [sp + 0x140]
  9335: 82 18 70 01              a1 = u64 [sp + 0x170]
  9339: c8 86 06                 s1 = s1 + a1
  9342: c8 67 07                 a0 = a0 + s1
  9345: 82 19 10 01              a2 = u64 [sp + 0x110]
  9349: d3 79 09                 a2 = a2 ^ a0
  9352: 7b 19 40 01              u64 [sp + 0x140] = a2
  9356: c8 c7 07                 a0 = a0 + a5
  9359: 7b 17 38 01              u64 [sp + 0x138] = a0
  9363: 97 aa 03                 a3 = a3 << 0x3
  9366: 95 18 d8 02              a1 = sp + 0x2d8
  9370: c8 8a 0a                 a3 = a3 + a1
  9373: 82 a7                    a0 = u64 [a3]
  9375: 97 bb 03                 a4 = a4 << 0x3
  9378: c8 8b 0b                 a4 = a4 + a1
  9381: 82 ba                    a3 = u64 [a4]
  9383: 82 16 f8 00              s1 = u64 [sp + 0xf8]
  9387: 82 1b 00 01              a4 = u64 [sp + 0x100]
  9391: c8 6b 0b                 a4 = a4 + s1
  9394: c8 b7 07                 a0 = a0 + a4
  9397: 82 1b 50 01              a4 = u64 [sp + 0x150]
  9401: d3 7b 0b                 a4 = a4 ^ a0
  9404: c8 a7 02                 t0 = a0 + a3
  9407: 82 17 20 01              a0 = u64 [sp + 0x120]
  9411: 9e 77 20                 a0 = a0 >>r 0x20
  9414: 82 1a 48 01              a3 = u64 [sp + 0x148]
  9418: c8 7a 0a                 a3 = a3 + a0
  9421: 82 15 a8 00              s0 = u64 [sp + 0xa8]
  9425: d3 a5 05                 s0 = s0 ^ a3
  9428: 82 19 f0 00              a2 = u64 [sp + 0xf0]
  9432: 97 99 03                 a2 = a2 << 0x3
  9435: c8 89 09                 a2 = a2 + a1
  9438: 82 99                    a2 = u64 [a2]
  9440: 9e 58 18                 a1 = s0 >>r 0x18
  9443: 7b 18 50 01              u64 [sp + 0x150] = a1
  9447: 82 15 28 01              s0 = u64 [sp + 0x128]
  9451: c8 85 05                 s0 = s0 + a1
  9454: d3 57 07                 a0 = a0 ^ s0
  9457: c8 59 09                 a2 = a2 + s0
  9460: 9e 35 20                 s0 = t1 >>r 0x20
  9463: 82 18 58 01              a1 = u64 [sp + 0x158]
  9467: c8 85 03                 t1 = s0 + a1
  9470: d3 03 0c                 a5 = t1 ^ ra
  9473: 9e cc 18                 a5 = a5 >>r 0x18
  9476: c8 c4 04                 t2 = t2 + a5
  9479: d3 54 05                 s0 = t2 ^ s0
  9482: 9e 58 10                 a1 = s0 >>r 0x10
  9485: 7b 18 48 01              u64 [sp + 0x148] = a1
  9489: c8 38 08                 a1 = a1 + t1
  9492: 7b 18 58 01              u64 [sp + 0x158] = a1
  9496: d3 c8 08                 a1 = a1 ^ a5
  9499: 9e 88 3f                 a1 = a1 >>r 0x3f
  9502: 7b 18 30 01              u64 [sp + 0x130] = a1
  9506: 9e bb 20                 a4 = a4 >>r 0x20
  9509: 82 10 60 01              ra = u64 [sp + 0x160]
  9513: c8 b0 00                 ra = ra + a4
  9516: d3 60 0c                 a5 = ra ^ s1
  9519: 9e c5 18                 s0 = a5 >>r 0x18
  9522: c8 52 03                 t1 = t0 + s0
  9525: d3 b3 0b                 a4 = t1 ^ a4
  9528: 9e bb 10                 a4 = a4 >>r 0x10
  9531: c8 b0 00                 ra = ra + a4
  9534: 7b 10 10 01              u64 [sp + 0x110] = ra
  9538: 82 1c e8 00              a5 = u64 [sp + 0xe8]
  9542: 97 cc 03                 a5 = a5 << 0x3
  9545: 95 16 d8 02              s1 = sp + 0x2d8
  9549: c8 6c 0c                 a5 = a5 + s1
  9552: 82 cc                    a5 = u64 [a5]
  9554: 82 12 e0 00              t0 = u64 [sp + 0xe0]
  9558: 97 22 03                 t0 = t0 << 0x3
  9561: c8 62 02                 t0 = t0 + s1
  9564: 82 22                    t0 = u64 [t0]
  9566: c8 89 09                 a2 = a2 + a1
  9569: d3 9b 0b                 a4 = a4 ^ a2
  9572: 7b 1b 28 01              u64 [sp + 0x128] = a4
  9576: c8 c9 09                 a2 = a2 + a5
  9579: 7b 19 60 01              u64 [sp + 0x160] = a2
  9583: c8 24 04                 t2 = t2 + t0
  9586: 9e 76 10                 s1 = a0 >>r 0x10
  9589: c8 6a 0a                 a3 = a3 + s1
  9592: 7b 1a 18 01              u64 [sp + 0x118] = a3
  9596: 82 17 40 01              a0 = u64 [sp + 0x140]
  9600: 9e 79 20                 a2 = a0 >>r 0x20
  9603: 82 12 68 01              t0 = u64 [sp + 0x168]
  9607: c8 92 02                 t0 = t0 + a2
  9610: 82 17 70 01              a0 = u64 [sp + 0x170]
  9614: d3 72 0c                 a5 = t0 ^ a0
  9617: 9e cb 18                 a4 = a5 >>r 0x18
  9620: 82 17 38 01              a0 = u64 [sp + 0x138]
  9624: c8 b7 07                 a0 = a0 + a4
  9627: d3 79 09                 a2 = a2 ^ a0
  9630: 9e 90 10                 ra = a2 >>r 0x10
  9633: c8 02 02                 t0 = t0 + ra
  9636: d3 b2 0b                 a4 = t0 ^ a4
  9639: 9e b8 3f                 a1 = a4 >>r 0x3f
  9642: 7b 18 40 01              u64 [sp + 0x140] = a1
  9646: 82 1a d8 00              a3 = u64 [sp + 0xd8]
  9650: 97 aa 03                 a3 = a3 << 0x3
  9653: 95 19 d8 02              a2 = sp + 0x2d8
  9657: c8 9a 0a                 a3 = a3 + a2
  9660: 82 aa                    a3 = u64 [a3]
  9662: 82 1b d0 00              a4 = u64 [sp + 0xd0]
  9666: 97 bb 03                 a4 = a4 << 0x3
  9669: c8 9b 0b                 a4 = a4 + a2
  9672: 82 bb                    a4 = u64 [a4]
  9674: c8 84 04                 t2 = t2 + a1
  9677: d3 64 06                 s1 = t2 ^ s1
  9680: c8 4a 0a                 a3 = a3 + t2
  9683: 7b 1a 70 01              u64 [sp + 0x170] = a3
  9687: c8 7b 0b                 a4 = a4 + a0
  9690: 82 18 10 01              a1 = u64 [sp + 0x110]
  9694: d3 58 07                 a0 = a1 ^ s0
  9697: 9e 7c 3f                 a5 = a0 >>r 0x3f
  9700: 82 1a c8 00              a3 = u64 [sp + 0xc8]
  9704: 97 aa 03                 a3 = a3 << 0x3
  9707: c8 9a 0a                 a3 = a3 + a2
  9710: 82 aa                    a3 = u64 [a3]
  9712: 82 15 c0 00              s0 = u64 [sp + 0xc0]
  9716: 97 55 03                 s0 = s0 << 0x3
  9719: c8 95 05                 s0 = s0 + a2
  9722: 82 55                    s0 = u64 [s0]
  9724: c8 cb 0b                 a4 = a4 + a5
  9727: 82 17 48 01              a0 = u64 [sp + 0x148]
  9731: d3 b7 07                 a0 = a0 ^ a4
  9734: 7b 17 38 01              u64 [sp + 0x138] = a0
  9738: c8 ba 0a                 a3 = a3 + a4
  9741: 7b 1a 48 01              u64 [sp + 0x148] = a3
  9745: c8 53 03                 t1 = t1 + s0
  9748: 82 1a 50 01              a3 = u64 [sp + 0x150]
  9752: 82 17 18 01              a0 = u64 [sp + 0x118]
  9756: d3 a7 0b                 a4 = a0 ^ a3
  9759: 82 15 b0 00              s0 = u64 [sp + 0xb0]
  9763: 97 55 03                 s0 = s0 << 0x3
  9766: c8 95 05                 s0 = s0 + a2
  9769: 82 55                    s0 = u64 [s0]
  9771: 9e bb 3f                 a4 = a4 >>r 0x3f
  9774: c8 b3 03                 t1 = t1 + a4
  9777: d3 03 04                 t2 = t1 ^ ra
  9780: c8 53 03                 t1 = t1 + s0
  9783: 82 19 28 01              a2 = u64 [sp + 0x128]
  9787: 9e 95 20                 s0 = a2 >>r 0x20
  9790: c8 25 09                 a2 = s0 + t0
  9793: 82 1a 30 01              a3 = u64 [sp + 0x130]
  9797: d3 a9 00                 ra = a2 ^ a3
  9800: 9e 00 18                 ra = ra >>r 0x18
  9803: 82 1a 60 01              a3 = u64 [sp + 0x160]
  9807: c8 0a 0a                 a3 = a3 + ra
  9810: 7b 1a 20 01              u64 [sp + 0x120] = a3
  9814: d3 a5 05                 s0 = s0 ^ a3
  9817: 9e 5a 10                 a3 = s0 >>r 0x10
  9820: 7b 1a 50 01              u64 [sp + 0x150] = a3
  9824: c8 a9 09                 a2 = a2 + a3
  9827: 7b 19 68 01              u64 [sp + 0x168] = a2
  9831: d3 09 09                 a2 = a2 ^ ra
  9834: 9e 90 3f                 ra = a2 >>r 0x3f
  9837: 9e 69 20                 a2 = s1 >>r 0x20
  9840: c8 89 05                 s0 = a2 + a1
  9843: 82 16 40 01              s1 = u64 [sp + 0x140]
  9847: d3 56 06                 s1 = s1 ^ s0
  9850: 9e 66 18                 s1 = s1 >>r 0x18
  9853: 82 18 70 01              a1 = u64 [sp + 0x170]
  9857: c8 68 08                 a1 = a1 + s1
  9860: 7b 18 30 01              u64 [sp + 0x130] = a1
  9864: d3 89 09                 a2 = a2 ^ a1
  9867: 9e 99 10                 a2 = a2 >>r 0x10
  9870: 7b 19 28 01              u64 [sp + 0x128] = a2
  9874: c8 59 09                 a2 = a2 + s0
  9877: 7b 19 60 01              u64 [sp + 0x160] = a2
  9881: d3 69 09                 a2 = a2 ^ s1
  9884: 82 16 b8 00              s1 = u64 [sp + 0xb8]
  9888: 9e 9a 3f                 a3 = a2 >>r 0x3f
  9891: 82 18 38 01              a1 = u64 [sp + 0x138]
  9895: 9e 89 20                 a2 = a1 >>r 0x20
  9898: c8 79 08                 a1 = a2 + a0
  9901: d3 c8 07                 a0 = a1 ^ a5
  9904: 9e 77 18                 a0 = a0 >>r 0x18
  9907: 82 12 48 01              t0 = u64 [sp + 0x148]
  9911: c8 72 02                 t0 = t0 + a0
  9914: 7b 12 40 01              u64 [sp + 0x140] = t0
  9918: d3 92 09                 a2 = t0 ^ a2
  9921: 9e 99 10                 a2 = a2 >>r 0x10
  9924: 7b 19 38 01              u64 [sp + 0x138] = a2
  9928: c8 98 08                 a1 = a1 + a2
  9931: 7b 18 48 01              u64 [sp + 0x148] = a1
  9935: d3 87 07                 a0 = a0 ^ a1
  9938: 9e 72 3f                 t0 = a0 >>r 0x3f
  9941: 9e 47 20                 a0 = t2 >>r 0x20
  9944: 82 18 58 01              a1 = u64 [sp + 0x158]
  9948: c8 78 08                 a1 = a1 + a0
  9951: d3 8b 0b                 a4 = a4 ^ a1
  9954: 9e b9 18                 a2 = a4 >>r 0x18
  9957: c8 93 0c                 a5 = t1 + a2
  9960: d3 c7 07                 a0 = a0 ^ a5
  9963: 9e 7b 10                 a4 = a0 >>r 0x10
  9966: c8 8b 07                 a0 = a4 + a1
  9969: 7b 17 58 01              u64 [sp + 0x158] = a0
  9973: d3 97 07                 a0 = a0 ^ a2
  9976: 9e 79 3f                 a2 = a0 >>r 0x3f
  9979: 82 15 08 01              s0 = u64 [sp + 0x108]
  9983: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  9986: 95 66 10                 s1 = s1 + 0x10
  9989: 52 05 45 fc              jump @595 if s0 != 0
      :                          @612
  9993: 33 03                    t1 = 0
  9995: 82 17 40                 a0 = u64 [sp + 0x40]
  9998: 82 18 20 01              a1 = u64 [sp + 0x120]
 10002: d3 87 07                 a0 = a0 ^ a1
 10005: 82 18 48 01              a1 = u64 [sp + 0x148]
 10009: d3 87 07                 a0 = a0 ^ a1
 10012: 7b 17 78 01              u64 [sp + 0x178] = a0
 10016: 82 17 48                 a0 = u64 [sp + 0x48]
 10019: 82 18 30 01              a1 = u64 [sp + 0x130]
 10023: d3 87 07                 a0 = a0 ^ a1
 10026: 82 18 58 01              a1 = u64 [sp + 0x158]
 10030: d3 87 07                 a0 = a0 ^ a1
 10033: 7b 17 80 01              u64 [sp + 0x180] = a0
 10037: 82 17 50                 a0 = u64 [sp + 0x50]
 10040: 82 18 68 01              a1 = u64 [sp + 0x168]
 10044: d3 87 07                 a0 = a0 ^ a1
 10047: 82 18 40 01              a1 = u64 [sp + 0x140]
 10051: d3 87 07                 a0 = a0 ^ a1
 10054: 7b 17 88 01              u64 [sp + 0x188] = a0
 10058: 82 17 58                 a0 = u64 [sp + 0x58]
 10061: 82 18 60 01              a1 = u64 [sp + 0x160]
 10065: d3 87 07                 a0 = a0 ^ a1
 10068: d3 c7 07                 a0 = a0 ^ a5
 10071: 7b 17 90 01              u64 [sp + 0x190] = a0
 10075: 82 17 60                 a0 = u64 [sp + 0x60]
 10078: 82 18 28 01              a1 = u64 [sp + 0x128]
 10082: d3 87 07                 a0 = a0 ^ a1
 10085: d3 97 07                 a0 = a0 ^ a2
 10088: 7b 17 98 01              u64 [sp + 0x198] = a0
 10092: 82 17 68                 a0 = u64 [sp + 0x68]
 10095: d3 70 07                 a0 = ra ^ a0
 10098: 82 18 38 01              a1 = u64 [sp + 0x138]
 10102: d3 87 07                 a0 = a0 ^ a1
 10105: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 10109: 82 17 70                 a0 = u64 [sp + 0x70]
 10112: d3 a7 07                 a0 = a0 ^ a3
 10115: d3 b7 07                 a0 = a0 ^ a4
 10118: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 10122: 82 17 78                 a0 = u64 [sp + 0x78]
 10125: 82 18 50 01              a1 = u64 [sp + 0x150]
 10129: d3 87 07                 a0 = a0 ^ a1
 10132: d3 27 07                 a0 = a0 ^ t0
 10135: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 10139: 49 21 48 02              u64 [sp + 584] = 0
 10143: 82 1b 90 00              a4 = u64 [sp + 0x90]
 10147: 82 1c 80 00              a5 = u64 [sp + 0x80]
 10151: c9 cb 07                 a0 = a4 - a5
 10154: 33 08 80 00              a1 = 0x80
 10158: e6 87 05                 s0 = minu(a0, a1)
 10161: c8 c5 06                 s1 = s0 + a5
 10164: ac 56 f1 06              jump @658 if s1 <u s0
      :                          @613
 10168: ac 6b ee 06              jump @659 if a4 <u s1
      :                          @614
 10172: 95 17 c8 01              a0 = sp + 0x1c8
 10176: c8 37 07                 a0 = a0 + t1
 10179: 82 18 88 00              a1 = u64 [sp + 0x88]
 10183: c8 c8 08                 a1 = a1 + a5
 10186: 64 59                    a2 = s0
 10188: 50 20 e4 00 a5 ee        ra = 228, jump @350
      :                          @615 [@dyn 114]
 10194: 82 17 48 02              a0 = u64 [sp + 0x248]
 10198: c8 57 03                 t1 = a0 + s0
 10201: 7b 13 48 02              u64 [sp + 0x248] = t1
 10205: 64 6c                    a5 = s1
 10207: 82 1b 90 00              a4 = u64 [sp + 0x90]
 10211: ac b6 6c fa              jump @585 if s1 <u a4
      :                          @616
 10215: 7c 17 50 02              a0 = u8 [sp + 0x250]
 10219: 51 07 27 06              jump @642 if a0 == 0
      :                          @617
 10223: 33 09 20                 a2 = 0x20
 10226: 82 17                    a0 = u64 [sp]
 10228: 33 08                    a1 = 0
 10230: 82 10 68 03              ra = u64 [sp + 0x368]
 10234: 82 15 60 03              s0 = u64 [sp + 0x360]
 10238: 82 16 58 03              s1 = u64 [sp + 0x358]
 10242: 95 11 70 03              sp = sp + 0x370
 10246: 28 1d ef                 jump @368
      :                          @618
 10249: 7b 1c 60                 u64 [sp + 0x60] = a5
 10252: 95 17 58 02              a0 = sp + 0x258
 10256: 33 09 80 00              a2 = 0x80
 10260: 33 08                    a1 = 0
 10262: 50 20 e6 00 0d ef        ra = 230, jump @368
      :                          @619 [@dyn 115]
 10268: 3a 07 18 00 03           a0 = u64 [0x30018]
 10273: 7b 17 68                 u64 [sp + 0x68] = a0
 10276: 3a 07 20 00 03           a0 = u64 [0x30020]
 10281: 7b 17 70                 u64 [sp + 0x70] = a0
 10284: 3a 07 28 00 03           a0 = u64 [0x30028]
 10289: 7b 17 78                 u64 [sp + 0x78] = a0
 10292: 3a 07 40 00 03           a0 = u64 [0x30040]
 10297: 7b 17 68 01              u64 [sp + 0x168] = a0
 10301: 3a 07 48 00 03           a0 = u64 [0x30048]
 10306: 7b 17 48 01              u64 [sp + 0x148] = a0
 10310: 33 09                    a2 = 0
 10312: 82 17 98 00              a0 = u64 [sp + 0x98]
 10316: 7b 17 38 01              u64 [sp + 0x138] = a0
 10320: 7b 16 30 01              u64 [sp + 0x130] = s1
 10324: 01                       fallthrough
      :                          @620
 10325: 95 17 58 02              a0 = sp + 0x258
 10329: 95 18 c8 01              a1 = sp + 0x1c8
 10333: 50 20 e8 00 14 ee        ra = 232, jump @350
      :                          @621 [@dyn 116]
 10339: 95 17 d8 02              a0 = sp + 0x2d8
 10343: 95 18 58 02              a1 = sp + 0x258
 10347: 33 09 80 00              a2 = 0x80
 10351: 50 20 ea 00 02 ee        ra = 234, jump @350
      :                          @622 [@dyn 117]
 10357: 33 0b 63 02 01           a4 = 0x10263
 10362: 3a 00 28 00 03           ra = u64 [0x30028]
 10367: 3a 07 48 00 03           a0 = u64 [0x30048]
 10372: 7b 17 40 01              u64 [sp + 0x140] = a0
 10376: 3a 07 20 00 03           a0 = u64 [0x30020]
 10381: 7b 17 60 01              u64 [sp + 0x160] = a0
 10385: 3a 07 58 00 03           a0 = u64 [0x30058]
 10390: 7b 17 28 01              u64 [sp + 0x128] = a0
 10394: 3a 07 18 00 03           a0 = u64 [0x30018]
 10399: 7b 17 58 01              u64 [sp + 0x158] = a0
 10403: 3a 05 50 00 03           s0 = u64 [0x30050]
 10408: 33 06 0c                 s1 = 0xc
 10411: 33 0a 10                 a3 = 0x10
 10414: 82 17 60                 a0 = u64 [sp + 0x60]
 10417: 7b 17 50 01              u64 [sp + 0x150] = a0
 10421: 82 19 68                 a2 = u64 [sp + 0x68]
 10424: 64 9c                    a5 = a2
 10426: 82 14 70                 t2 = u64 [sp + 0x70]
 10429: 64 42                    t0 = t2
 10431: 82 18 78                 a1 = u64 [sp + 0x78]
 10434: 64 83                    t1 = a1
 10436: 7b 18 78                 u64 [sp + 0x78] = a1
 10439: 7b 14 70                 u64 [sp + 0x70] = t2
 10442: 7b 19 68                 u64 [sp + 0x68] = a2
 10445: 01                       fallthrough
      :                          @623
 10446: 7b 1c 20 01              u64 [sp + 0x120] = a5
 10450: 7c b4 f9                 t2 = u8 [a4 + 0xfffffffffffffff9]
 10453: 56 14 0f ca 05           jump @652 if t2 >u 15
      :                          @624
 10458: 7c b7 fa                 a0 = u8 [a4 + 0xfffffffffffffffa]
 10461: 55 17 10 c1 05           jump @651 if a0 >=u 16
      :                          @625
 10466: 64 59                    a2 = s0
 10468: 7c b5 fb                 s0 = u8 [a4 + 0xfffffffffffffffb]
 10471: 55 15 10 2a 05           jump @641 if s0 >=u 16
      :                          @626
 10476: 7b 12 18 01              u64 [sp + 0x118] = t0
 10480: 7c b2 fc                 t0 = u8 [a4 + 0xfffffffffffffffc]
 10483: 55 12 10 a8 05           jump @648 if t0 >=u 16
      :                          @627
 10488: 7b 13 10 01              u64 [sp + 0x110] = t1
 10492: 7c bc fd                 a5 = u8 [a4 + 0xfffffffffffffffd]
 10495: 55 1c 10 9b 05           jump @647 if a5 >=u 16
      :                          @628
 10500: 7b 19 00 01              u64 [sp + 0x100] = a2
 10504: 7b 10 08 01              u64 [sp + 0x108] = ra
 10508: 7c b0 fe                 ra = u8 [a4 + 0xfffffffffffffffe]
 10511: 55 10 10 8e 05           jump @650 if ra >=u 16
      :                          @629
 10516: 7b 15 f8 00              u64 [sp + 0xf8] = s0
 10520: 33 05 10                 s0 = 0x10
 10523: 7c ba ff                 a3 = u8 [a4 + 0xffffffffffffffff]
 10526: ae 5a 7e 05              jump @649 if a3 >=u s0
      :                          @630
 10530: 7b 1b 70 01              u64 [sp + 0x170] = a4
 10534: 7c bb                    a4 = u8 [a4]
 10536: 55 1b 10 79 05           jump @654 if a4 >=u 16
      :                          @631
 10541: 82 19 70 01              a2 = u64 [sp + 0x170]
 10545: 7c 98 01                 a1 = u8 [a2 + 0x1]
 10548: 55 18 10 6f 05           jump @656 if a1 >=u 16
      :                          @632
 10553: 7b 16 f0 00              u64 [sp + 0xf0] = s1
 10557: 82 16 70 01              s1 = u64 [sp + 0x170]
 10561: 7c 63 02                 t1 = u8 [s1 + 0x2]
 10564: 55 13 10 5c 05           jump @653 if t1 >=u 16
      :                          @633
 10569: 7b 12 e0 00              u64 [sp + 0xe0] = t0
 10573: 7b 1c e8 00              u64 [sp + 0xe8] = a5
 10577: 82 16 70 01              s1 = u64 [sp + 0x170]
 10581: 7c 62 03                 t0 = u8 [s1 + 0x3]
 10584: 55 12 10 43 05           jump @648 if t0 >=u 16
      :                          @634
 10589: 82 16 70 01              s1 = u64 [sp + 0x170]
 10593: 7c 6c 04                 a5 = u8 [s1 + 0x4]
 10596: 55 1c 10 36 05           jump @647 if a5 >=u 16
      :                          @635
 10601: 7b 1a d8 00              u64 [sp + 0xd8] = a3
 10605: 82 16 70 01              s1 = u64 [sp + 0x170]
 10609: 7c 6a 05                 a3 = u8 [s1 + 0x5]
 10612: 55 1a 10 28 05           jump @649 if a3 >=u 16
      :                          @636
 10617: 82 16 70 01              s1 = u64 [sp + 0x170]
 10621: 7c 69 06                 a2 = u8 [s1 + 0x6]
 10624: 55 19 10 24 05           jump @657 if a2 >=u 16
      :                          @637
 10629: 82 16 70 01              s1 = u64 [sp + 0x170]
 10633: 7c 66 07                 s1 = u8 [s1 + 0x7]
 10636: 55 16 10 16 05           jump @655 if s1 >=u 16
      :                          @638
 10641: 7b 16 d0 00              u64 [sp + 0xd0] = s1
 10645: 82 16 70 01              s1 = u64 [sp + 0x170]
 10649: 7c 66 08                 s1 = u8 [s1 + 0x8]
 10652: 55 16 10 06 05           jump @655 if s1 >=u 16
      :                          @639
 10657: 7b 1b 80 00              u64 [sp + 0x80] = a4
 10661: 64 0b                    a4 = ra
 10663: 97 40 03                 ra = t2 << 0x3
 10666: 7b 18 b0 00              u64 [sp + 0xb0] = a1
 10670: 95 18 d8 02              a1 = sp + 0x2d8
 10674: c8 80 00                 ra = ra + a1
 10677: 82 05                    s0 = u64 [ra]
 10679: 97 77 03                 a0 = a0 << 0x3
 10682: c8 87 07                 a0 = a0 + a1
 10685: 82 70                    ra = u64 [a0]
 10687: 7b 16 c8 00              u64 [sp + 0xc8] = s1
 10691: 82 16 50 01              s1 = u64 [sp + 0x150]
 10695: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 10699: c8 76 06                 s1 = s1 + a0
 10702: c8 65 05                 s0 = s0 + s1
 10705: 82 16 30 01              s1 = u64 [sp + 0x130]
 10709: d3 56 06                 s1 = s1 ^ s0
 10712: 7b 16 88 00              u64 [sp + 0x88] = s1
 10716: c8 05 07                 a0 = s0 + ra
 10719: 7b 17 90 00              u64 [sp + 0x90] = a0
 10723: 7b 19 50 01              u64 [sp + 0x150] = a2
 10727: 7b 1a 30 01              u64 [sp + 0x130] = a3
 10731: 7b 1c c0 00              u64 [sp + 0xc0] = a5
 10735: 7b 12 b8 00              u64 [sp + 0xb8] = t0
 10739: 7b 13 a8 00              u64 [sp + 0xa8] = t1
 10743: 82 13 f8 00              t1 = u64 [sp + 0xf8]
 10747: 97 33 03                 t1 = t1 << 0x3
 10750: c8 83 03                 t1 = t1 + a1
 10753: 82 37                    a0 = u64 [t1]
 10755: 82 14 e0 00              t2 = u64 [sp + 0xe0]
 10759: 97 44 03                 t2 = t2 << 0x3
 10762: c8 84 04                 t2 = t2 + a1
 10765: 82 45                    s0 = u64 [t2]
 10767: 82 10 98 00              ra = u64 [sp + 0x98]
 10771: 82 16 20 01              s1 = u64 [sp + 0x120]
 10775: c8 06 06                 s1 = s1 + ra
 10778: c8 67 07                 a0 = a0 + s1
 10781: 82 16 38 01              s1 = u64 [sp + 0x138]
 10785: d3 76 06                 s1 = s1 ^ a0
 10788: 7b 16 20 01              u64 [sp + 0x120] = s1
 10792: c8 57 04                 t2 = a0 + s0
 10795: 82 1c e8 00              a5 = u64 [sp + 0xe8]
 10799: 97 cc 03                 a5 = a5 << 0x3
 10802: c8 8c 0c                 a5 = a5 + a1
 10805: 82 c7                    a0 = u64 [a5]
 10807: 97 b2 03                 t0 = a4 << 0x3
 10810: c8 82 02                 t0 = t0 + a1
 10813: 82 2c                    a5 = u64 [t0]
 10815: 82 16 18 01              s1 = u64 [sp + 0x118]
 10819: 82 18 68 01              a1 = u64 [sp + 0x168]
 10823: c8 86 06                 s1 = s1 + a1
 10826: c8 67 07                 a0 = a0 + s1
 10829: 82 16 28 01              s1 = u64 [sp + 0x128]
 10833: d3 76 06                 s1 = s1 ^ a0
 10836: 7b 16 38 01              u64 [sp + 0x138] = s1
 10840: c8 c7 07                 a0 = a0 + a5
 10843: 7b 17 28 01              u64 [sp + 0x128] = a0
 10847: 82 1a d8 00              a3 = u64 [sp + 0xd8]
 10851: 97 aa 03                 a3 = a3 << 0x3
 10854: 95 18 d8 02              a1 = sp + 0x2d8
 10858: c8 8a 0a                 a3 = a3 + a1
 10861: 82 a7                    a0 = u64 [a3]
 10863: 82 1b 80 00              a4 = u64 [sp + 0x80]
 10867: 97 bb 03                 a4 = a4 << 0x3
 10870: c8 8b 0b                 a4 = a4 + a1
 10873: 82 ba                    a3 = u64 [a4]
 10875: 82 16 48 01              s1 = u64 [sp + 0x148]
 10879: 82 1b 10 01              a4 = u64 [sp + 0x110]
 10883: c8 6b 0b                 a4 = a4 + s1
 10886: c8 b7 07                 a0 = a0 + a4
 10889: 82 1b 40 01              a4 = u64 [sp + 0x140]
 10893: d3 7b 0b                 a4 = a4 ^ a0
 10896: c8 a7 02                 t0 = a0 + a3
 10899: 82 17 88 00              a0 = u64 [sp + 0x88]
 10903: 9e 77 20                 a0 = a0 >>r 0x20
 10906: 82 1a 00 01              a3 = u64 [sp + 0x100]
 10910: c8 7a 0a                 a3 = a3 + a0
 10913: 82 15 a0 00              s0 = u64 [sp + 0xa0]
 10917: d3 a5 05                 s0 = s0 ^ a3
 10920: 82 19 b0 00              a2 = u64 [sp + 0xb0]
 10924: 97 99 03                 a2 = a2 << 0x3
 10927: c8 89 09                 a2 = a2 + a1
 10930: 82 99                    a2 = u64 [a2]
 10932: 9e 58 18                 a1 = s0 >>r 0x18
 10935: 7b 18 40 01              u64 [sp + 0x140] = a1
 10939: 82 15 90 00              s0 = u64 [sp + 0x90]
 10943: c8 85 05                 s0 = s0 + a1
 10946: d3 75 03                 t1 = s0 ^ a0
 10949: c8 59 09                 a2 = a2 + s0
 10952: 82 17 20 01              a0 = u64 [sp + 0x120]
 10956: 9e 75 20                 s0 = a0 >>r 0x20
 10959: 82 18 58 01              a1 = u64 [sp + 0x158]
 10963: c8 58 08                 a1 = a1 + s0
 10966: d3 08 0c                 a5 = a1 ^ ra
 10969: 9e cc 18                 a5 = a5 >>r 0x18
 10972: c8 c4 04                 t2 = t2 + a5
 10975: d3 54 05                 s0 = t2 ^ s0
 10978: 9e 57 10                 a0 = s0 >>r 0x10
 10981: 7b 17 20 01              u64 [sp + 0x120] = a0
 10985: c8 78 08                 a1 = a1 + a0
 10988: 7b 18 58 01              u64 [sp + 0x158] = a1
 10992: d3 c8 08                 a1 = a1 ^ a5
 10995: 9e 87 3f                 a0 = a1 >>r 0x3f
 10998: 7b 17 10 01              u64 [sp + 0x110] = a0
 11002: 9e bb 20                 a4 = a4 >>r 0x20
 11005: 82 10 08 01              ra = u64 [sp + 0x108]
 11009: c8 b0 00                 ra = ra + a4
 11012: d3 60 0c                 a5 = ra ^ s1
 11015: 9e c5 18                 s0 = a5 >>r 0x18
 11018: c8 52 02                 t0 = t0 + s0
 11021: 7b 12 48 01              u64 [sp + 0x148] = t0
 11025: d3 b2 0b                 a4 = t0 ^ a4
 11028: 9e bb 10                 a4 = a4 >>r 0x10
 11031: c8 0b 08                 a1 = a4 + ra
 11034: 82 1c a8 00              a5 = u64 [sp + 0xa8]
 11038: 97 cc 03                 a5 = a5 << 0x3
 11041: 95 10 d8 02              ra = sp + 0x2d8
 11045: c8 0c 0c                 a5 = a5 + ra
 11048: 82 cc                    a5 = u64 [a5]
 11050: 82 12 b8 00              t0 = u64 [sp + 0xb8]
 11054: 97 22 03                 t0 = t0 << 0x3
 11057: c8 02 02                 t0 = t0 + ra
 11060: 82 22                    t0 = u64 [t0]
 11062: c8 79 09                 a2 = a2 + a0
 11065: d3 9b 0b                 a4 = a4 ^ a2
 11068: 7b 1b 08 01              u64 [sp + 0x108] = a4
 11072: c8 c9 09                 a2 = a2 + a5
 11075: 7b 19 18 01              u64 [sp + 0x118] = a2
 11079: c8 24 04                 t2 = t2 + t0
 11082: 9e 36 10                 s1 = t1 >>r 0x10
 11085: c8 6a 0a                 a3 = a3 + s1
 11088: 7b 1a 00 01              u64 [sp + 0x100] = a3
 11092: 82 17 38 01              a0 = u64 [sp + 0x138]
 11096: 9e 79 20                 a2 = a0 >>r 0x20
 11099: 82 12 60 01              t0 = u64 [sp + 0x160]
 11103: c8 92 02                 t0 = t0 + a2
 11106: 82 17 68 01              a0 = u64 [sp + 0x168]
 11110: d3 72 0c                 a5 = t0 ^ a0
 11113: 9e cb 18                 a4 = a5 >>r 0x18
 11116: 82 17 28 01              a0 = u64 [sp + 0x128]
 11120: c8 b7 07                 a0 = a0 + a4
 11123: d3 79 09                 a2 = a2 ^ a0
 11126: 9e 9c 10                 a5 = a2 >>r 0x10
 11129: c8 2c 09                 a2 = a5 + t0
 11132: d3 9b 0b                 a4 = a4 ^ a2
 11135: 9e b2 3f                 t0 = a4 >>r 0x3f
 11138: 82 1a c0 00              a3 = u64 [sp + 0xc0]
 11142: 97 aa 03                 a3 = a3 << 0x3
 11145: c8 0a 0a                 a3 = a3 + ra
 11148: 82 aa                    a3 = u64 [a3]
 11150: 82 1b 30 01              a4 = u64 [sp + 0x130]
 11154: 97 bb 03                 a4 = a4 << 0x3
 11157: c8 0b 0b                 a4 = a4 + ra
 11160: 82 bb                    a4 = u64 [a4]
 11162: c8 24 04                 t2 = t2 + t0
 11165: d3 64 06                 s1 = t2 ^ s1
 11168: c8 4a 0a                 a3 = a3 + t2
 11171: 7b 1a 68 01              u64 [sp + 0x168] = a3
 11175: c8 7b 0b                 a4 = a4 + a0
 11178: 64 84                    t2 = a1
 11180: d3 58 07                 a0 = a1 ^ s0
 11183: 9e 77 3f                 a0 = a0 >>r 0x3f
 11186: 82 1a 50 01              a3 = u64 [sp + 0x150]
 11190: 97 aa 03                 a3 = a3 << 0x3
 11193: c8 0a 0a                 a3 = a3 + ra
 11196: 82 aa                    a3 = u64 [a3]
 11198: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 11202: 97 55 03                 s0 = s0 << 0x3
 11205: c8 05 05                 s0 = s0 + ra
 11208: 82 55                    s0 = u64 [s0]
 11210: c8 7b 0b                 a4 = a4 + a0
 11213: 82 18 20 01              a1 = u64 [sp + 0x120]
 11217: d3 b8 08                 a1 = a1 ^ a4
 11220: 7b 18 38 01              u64 [sp + 0x138] = a1
 11224: c8 ba 0a                 a3 = a3 + a4
 11227: 7b 1a 28 01              u64 [sp + 0x128] = a3
 11231: 82 13 48 01              t1 = u64 [sp + 0x148]
 11235: c8 53 03                 t1 = t1 + s0
 11238: 82 1a 40 01              a3 = u64 [sp + 0x140]
 11242: 82 18 00 01              a1 = u64 [sp + 0x100]
 11246: d3 a8 0b                 a4 = a1 ^ a3
 11249: 82 15 c8 00              s0 = u64 [sp + 0xc8]
 11253: 97 55 03                 s0 = s0 << 0x3
 11256: c8 05 05                 s0 = s0 + ra
 11259: 82 55                    s0 = u64 [s0]
 11261: 9e bb 3f                 a4 = a4 >>r 0x3f
 11264: c8 b3 03                 t1 = t1 + a4
 11267: d3 c3 0a                 a3 = t1 ^ a5
 11270: c8 53 03                 t1 = t1 + s0
 11273: 82 1c 08 01              a5 = u64 [sp + 0x108]
 11277: 9e c5 20                 s0 = a5 >>r 0x20
 11280: c8 59 09                 a2 = a2 + s0
 11283: 82 1c 10 01              a5 = u64 [sp + 0x110]
 11287: d3 c9 00                 ra = a2 ^ a5
 11290: 9e 00 18                 ra = ra >>r 0x18
 11293: 82 1c 18 01              a5 = u64 [sp + 0x118]
 11297: c8 0c 0c                 a5 = a5 + ra
 11300: 7b 1c 50 01              u64 [sp + 0x150] = a5
 11304: d3 c5 05                 s0 = s0 ^ a5
 11307: 9e 55 10                 s0 = s0 >>r 0x10
 11310: 7b 15 40 01              u64 [sp + 0x140] = s0
 11314: c8 59 09                 a2 = a2 + s0
 11317: 7b 19 60 01              u64 [sp + 0x160] = a2
 11321: d3 09 09                 a2 = a2 ^ ra
 11324: 9e 99 3f                 a2 = a2 >>r 0x3f
 11327: 7b 19 98 00              u64 [sp + 0x98] = a2
 11331: 9e 69 20                 a2 = s1 >>r 0x20
 11334: c8 49 05                 s0 = a2 + t2
 11337: d3 25 06                 s1 = s0 ^ t0
 11340: 9e 66 18                 s1 = s1 >>r 0x18
 11343: 82 1c 68 01              a5 = u64 [sp + 0x168]
 11347: c8 6c 0c                 a5 = a5 + s1
 11350: d3 c9 09                 a2 = a2 ^ a5
 11353: 9e 92 10                 t0 = a2 >>r 0x10
 11356: 7b 12 30 01              u64 [sp + 0x130] = t0
 11360: c8 52 00                 ra = t0 + s0
 11363: 82 14 70                 t2 = u64 [sp + 0x70]
 11366: d3 60 09                 a2 = ra ^ s1
 11369: 9e 99 3f                 a2 = a2 >>r 0x3f
 11372: 7b 19 68 01              u64 [sp + 0x168] = a2
 11376: 82 19 38 01              a2 = u64 [sp + 0x138]
 11380: 9e 99 20                 a2 = a2 >>r 0x20
 11383: c8 98 08                 a1 = a1 + a2
 11386: d3 87 07                 a0 = a0 ^ a1
 11389: 9e 77 18                 a0 = a0 >>r 0x18
 11392: 82 12 28 01              t0 = u64 [sp + 0x128]
 11396: c8 72 02                 t0 = t0 + a0
 11399: d3 92 09                 a2 = t0 ^ a2
 11402: 9e 99 10                 a2 = a2 >>r 0x10
 11405: 7b 19 38 01              u64 [sp + 0x138] = a2
 11409: c8 89 05                 s0 = a2 + a1
 11412: d3 57 07                 a0 = a0 ^ s0
 11415: 9e 77 3f                 a0 = a0 >>r 0x3f
 11418: 7b 17 48 01              u64 [sp + 0x148] = a0
 11422: 9e a7 20                 a0 = a3 >>r 0x20
 11425: 82 18 58 01              a1 = u64 [sp + 0x158]
 11429: c8 78 08                 a1 = a1 + a0
 11432: d3 8b 0b                 a4 = a4 ^ a1
 11435: 9e b9 18                 a2 = a4 >>r 0x18
 11438: c8 93 03                 t1 = t1 + a2
 11441: d3 73 07                 a0 = t1 ^ a0
 11444: 9e 77 10                 a0 = a0 >>r 0x10
 11447: 7b 17 28 01              u64 [sp + 0x128] = a0
 11451: c8 87 07                 a0 = a0 + a1
 11454: 82 18 78                 a1 = u64 [sp + 0x78]
 11457: 7b 17 58 01              u64 [sp + 0x158] = a0
 11461: d3 97 07                 a0 = a0 ^ a2
 11464: 9e 77 3f                 a0 = a0 >>r 0x3f
 11467: 7b 17 a0 00              u64 [sp + 0xa0] = a0
 11471: 82 16 f0 00              s1 = u64 [sp + 0xf0]
 11475: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 11478: 82 1b 70 01              a4 = u64 [sp + 0x170]
 11482: 95 bb 10                 a4 = a4 + 0x10
 11485: 82 19 68                 a2 = u64 [sp + 0x68]
 11488: 33 0a 10                 a3 = 0x10
 11491: 52 06 eb fb              jump @623 if s1 != 0
      :                          @640
 11495: 82 17 60                 a0 = u64 [sp + 0x60]
 11498: 82 1a 50 01              a3 = u64 [sp + 0x150]
 11502: d3 a7 07                 a0 = a0 ^ a3
 11505: d3 57 07                 a0 = a0 ^ s0
 11508: 7b 17 78 01              u64 [sp + 0x178] = a0
 11512: d3 9c 07                 a0 = a5 ^ a2
 11515: 82 19 58 01              a2 = u64 [sp + 0x158]
 11519: d3 97 07                 a0 = a0 ^ a2
 11522: 7b 17 80 01              u64 [sp + 0x180] = a0
 11526: 82 17 60 01              a0 = u64 [sp + 0x160]
 11530: d3 47 07                 a0 = a0 ^ t2
 11533: d3 27 07                 a0 = a0 ^ t0
 11536: 7b 17 88 01              u64 [sp + 0x188] = a0
 11540: d3 80 07                 a0 = ra ^ a1
 11543: d3 37 07                 a0 = a0 ^ t1
 11546: 7b 17 90 01              u64 [sp + 0x190] = a0
 11550: 7c 18 97 01              a1 = u8 [sp + 0x197]
 11554: 7c 17 78 01              a0 = u8 [sp + 0x178]
 11558: 7c 19 96 01              a2 = u8 [sp + 0x196]
 11562: 7c 1a 95 01              a3 = u8 [sp + 0x195]
 11566: 82 1b                    a4 = u64 [sp]
 11568: 78 b8 1f                 u8 [a4 + 0x1f] = a1
 11571: 7c 18 94 01              a1 = u8 [sp + 0x194]
 11575: 78 b9 1e                 u8 [a4 + 0x1e] = a2
 11578: 7c 19 93 01              a2 = u8 [sp + 0x193]
 11582: 78 ba 1d                 u8 [a4 + 0x1d] = a3
 11585: 7c 1a 92 01              a3 = u8 [sp + 0x192]
 11589: 78 b8 1c                 u8 [a4 + 0x1c] = a1
 11592: 7c 18 91 01              a1 = u8 [sp + 0x191]
 11596: 78 b9 1b                 u8 [a4 + 0x1b] = a2
 11599: 7c 19 90 01              a2 = u8 [sp + 0x190]
 11603: 78 ba 1a                 u8 [a4 + 0x1a] = a3
 11606: 7c 1a 8f 01              a3 = u8 [sp + 0x18f]
 11610: 78 b8 19                 u8 [a4 + 0x19] = a1
 11613: 7c 18 8e 01              a1 = u8 [sp + 0x18e]
 11617: 78 b9 18                 u8 [a4 + 0x18] = a2
 11620: 7c 19 8d 01              a2 = u8 [sp + 0x18d]
 11624: 78 ba 17                 u8 [a4 + 0x17] = a3
 11627: 7c 1a 8b 01              a3 = u8 [sp + 0x18b]
 11631: 78 b8 16                 u8 [a4 + 0x16] = a1
 11634: 7c 18 8a 01              a1 = u8 [sp + 0x18a]
 11638: 78 b9 15                 u8 [a4 + 0x15] = a2
 11641: 7c 19 89 01              a2 = u8 [sp + 0x189]
 11645: 78 ba 13                 u8 [a4 + 0x13] = a3
 11648: 7c 1a 88 01              a3 = u8 [sp + 0x188]
 11652: 78 b8 12                 u8 [a4 + 0x12] = a1
 11655: 7c 18 87 01              a1 = u8 [sp + 0x187]
 11659: 78 b9 11                 u8 [a4 + 0x11] = a2
 11662: 7c 19 86 01              a2 = u8 [sp + 0x186]
 11666: 78 ba 10                 u8 [a4 + 0x10] = a3
 11669: 7c 1a 85 01              a3 = u8 [sp + 0x185]
 11673: 78 b8 0f                 u8 [a4 + 0xf] = a1
 11676: 7c 18 84 01              a1 = u8 [sp + 0x184]
 11680: 78 b9 0e                 u8 [a4 + 0xe] = a2
 11683: 7c 19 83 01              a2 = u8 [sp + 0x183]
 11687: 78 ba 0d                 u8 [a4 + 0xd] = a3
 11690: 7c 1a 82 01              a3 = u8 [sp + 0x182]
 11694: 78 b8 0c                 u8 [a4 + 0xc] = a1
 11697: 7c 18 81 01              a1 = u8 [sp + 0x181]
 11701: 78 b9 0b                 u8 [a4 + 0xb] = a2
 11704: 7c 19 80 01              a2 = u8 [sp + 0x180]
 11708: 78 ba 0a                 u8 [a4 + 0xa] = a3
 11711: 7c 1a 7f 01              a3 = u8 [sp + 0x17f]
 11715: 78 b8 09                 u8 [a4 + 0x9] = a1
 11718: 7c 18 7e 01              a1 = u8 [sp + 0x17e]
 11722: 78 b9 08                 u8 [a4 + 0x8] = a2
 11725: 7c 19 7d 01              a2 = u8 [sp + 0x17d]
 11729: 78 ba 07                 u8 [a4 + 0x7] = a3
 11732: 7c 1a 7c 01              a3 = u8 [sp + 0x17c]
 11736: 78 b8 06                 u8 [a4 + 0x6] = a1
 11739: 7c 18 7b 01              a1 = u8 [sp + 0x17b]
 11743: 78 b9 05                 u8 [a4 + 0x5] = a2
 11746: 7c 19 7a 01              a2 = u8 [sp + 0x17a]
 11750: 78 ba 04                 u8 [a4 + 0x4] = a3
 11753: 7c 1a 79 01              a3 = u8 [sp + 0x179]
 11757: 78 b8 03                 u8 [a4 + 0x3] = a1
 11760: 7c 18 8c 01              a1 = u8 [sp + 0x18c]
 11764: 78 b9 02                 u8 [a4 + 0x2] = a2
 11767: 78 ba 01                 u8 [a4 + 0x1] = a3
 11770: 78 b7                    u8 [a4] = a0
 11772: 78 b8 14                 u8 [a4 + 0x14] = a1
 11775: 82 10 68 03              ra = u64 [sp + 0x368]
 11779: 82 15 60 03              s0 = u64 [sp + 0x360]
 11783: 82 16 58 03              s1 = u64 [sp + 0x358]
 11787: 95 11 70 03              sp = sp + 0x370
 11791: 32 00                    ret
      :                          @641
 11793: 00                       trap
      :                          @642
 11794: 82 15 b8 01              s0 = u64 [sp + 0x1b8]
 11798: c8 35 05                 s0 = s0 + t1
 11801: 64 36                    s1 = t1
 11803: ae 35 0f                 jump @644 if s0 >=u t1
      :                          @643
 11806: 82 17 c0 01              a0 = u64 [sp + 0x1c0]
 11810: 95 77 01                 a0 = a0 + 0x1
 11813: 7b 17 c0 01              u64 [sp + 0x1c0] = a0
 11817: 01                       fallthrough
      :                          @644
 11818: 95 17 58 02              a0 = sp + 0x258
 11822: 33 09 80 00              a2 = 0x80
 11826: 33 08                    a1 = 0
 11828: 50 20 ec 00 ef e8        ra = 236, jump @368
      :                          @645 [@dyn 118]
 11834: 64 69                    a2 = s1
 11836: 56 26 80 00 6c           jump @661 if s1 >u 128
      :                          @646
 11841: 82 17 c0 01              a0 = u64 [sp + 0x1c0]
 11845: 82 18 78 01              a1 = u64 [sp + 0x178]
 11849: 7b 18 60                 u64 [sp + 0x60] = a1
 11852: 82 18 80 01              a1 = u64 [sp + 0x180]
 11856: 7b 18 68                 u64 [sp + 0x68] = a1
 11859: 82 18 88 01              a1 = u64 [sp + 0x188]
 11863: 7b 18 70                 u64 [sp + 0x70] = a1
 11866: 82 18 90 01              a1 = u64 [sp + 0x190]
 11870: 7b 18 78                 u64 [sp + 0x78] = a1
 11873: 82 18 98 01              a1 = u64 [sp + 0x198]
 11877: 82 1b a0 01              a4 = u64 [sp + 0x1a0]
 11881: 82 1a a8 01              a3 = u64 [sp + 0x1a8]
 11885: 7b 1a 68 01              u64 [sp + 0x168] = a3
 11889: 82 1a b0 01              a3 = u64 [sp + 0x1b0]
 11893: 7b 1a 48 01              u64 [sp + 0x148] = a3
 11897: 82 1a a0 00              a3 = u64 [sp + 0xa0]
 11901: d3 5a 0a                 a3 = a3 ^ s0
 11904: 7b 1a 30 01              u64 [sp + 0x130] = a3
 11908: 82 1a 98 00              a3 = u64 [sp + 0x98]
 11912: d3 a7 07                 a0 = a0 ^ a3
 11915: 7b 17 38 01              u64 [sp + 0x138] = a0
 11919: 7b 1b 98 00              u64 [sp + 0x98] = a4
 11923: 7b 18 a0 00              u64 [sp + 0xa0] = a1
 11927: 28 be f9                 jump @620
      :                          @647
 11930: 00                       trap
      :                          @648
 11931: 00                       trap
      :                          @649
 11932: 00                       trap
      :                          @650
 11933: 00                       trap
      :                          @651
 11934: 00                       trap
      :                          @652
 11935: 00                       trap
      :                          @653
 11936: 00                       trap
      :                          @654
 11937: 00                       trap
      :                          @655
 11938: 00                       trap
      :                          @656
 11939: 00                       trap
      :                          @657
 11940: 00                       trap
      :                          @658
 11941: 00                       trap
      :                          @659
 11942: 00                       trap
      :                          @660
 11943: 00                       trap
      :                          @661
 11944: 00                       trap
