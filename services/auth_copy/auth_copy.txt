// RO data = 540/540 bytes
// RW data = 88/65648 bytes
// Stack size = 65536 bytes
// RO data = [97, 117, 116, 104, 95, 99, 111, 112, 121, 32, 105, 110, 112, 117, 116, 61, 0, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 60, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 62, 0, 0, 0, 0, 0, 0, 0, 68, 0, 0, 0, 0, 0, 0, 0, 76, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 110, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 112, 0, 0, 0, 0, 0, 0, 0, 118, 0, 0, 0, 0, 0, 0, 0, 122, 0, 0, 0, 0, 0, 0, 0, 32, 32, 32, 32, 44, 32, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3, 11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4, 7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8, 9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13, 2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9, 12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11, 13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10, 6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5, 10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3]
// RW data = [40, 201, 189, 242, 103, 230, 9, 106, 59, 167, 202, 132, 133, 174, 103, 187, 43, 248, 148, 254, 114, 243, 110, 60, 241, 54, 29, 95, 58, 245, 79, 165, 209, 130, 230, 173, 127, 82, 14, 81, 31, 108, 62, 43, 140, 104, 5, 155, 107, 189, 65, 251, 171, 217, 131, 31, 121, 33, 126, 19, 25, 205, 224, 91, 8, 201, 188, 243, 103, 230, 9, 106, 75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 2593
// Code size = 7895 bytes

      :                          @0
     0: 28 16 03 00 00           jump @69
      :                          @1
     5: 28 0b 0e 00 00           jump @219
      :                          @2
    10: 28 39 0f                 jump @252
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 80 89 34                 a2 = u32 [a1 + 0x34]
    24: 82 77                    a0 = u64 [a0]
    26: 84 9a 10                 a3 = a2 & 0x10
    29: 52 0a 16                 jump @6 if a3 != 0
      :                          @4
    32: 84 99 20                 a2 = a2 & 0x20
    35: 52 09 41                 jump @9 if a2 != 0
      :                          @5
    38: 7c 77                    a0 = u8 [a0]
    40: 82 10 80 00              ra = u64 [sp + 0x80]
    44: 95 11 88 00              sp = sp + 0x88
    48: 28 d5 14                 jump @390
      :                          @6
    51: 7c 77                    a0 = u8 [a0]
    53: 33 0b 81 00              a4 = 0x81
    57: 95 19 7f                 a2 = sp + 0x7f
    60: 33 02 57                 t0 = 0x57
    63: 01                       fallthrough
      :                          @7
    64: 64 bc                    a5 = a4
    66: 84 7b 0f                 a4 = a0 & 0xf
    69: 97 77 38                 a0 = a0 << 0x38
    72: 98 77 3c                 a0 = a0 >> 0x3c
    75: 88 b3 0a                 t1 = a4 <u 0xa
    78: 33 0a 30                 a3 = 0x30
    81: da 32 0a                 a3 = t0 if t1 == 0
    84: be ba 0a                 i32 a3 = a3 + a4
    87: 78 9a                    u8 [a2] = a3
    89: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
    92: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
    95: 52 07 e1                 jump @7 if a0 != 0
      :                          @8
    98: 28 31                    jump @11
      :                          @9
   100: 7c 77                    a0 = u8 [a0]
   102: 33 0b 81 00              a4 = 0x81
   106: 95 19 7f                 a2 = sp + 0x7f
   109: 33 02 37                 t0 = 0x37
   112: 01                       fallthrough
      :                          @10
   113: 64 bc                    a5 = a4
   115: 84 7b 0f                 a4 = a0 & 0xf
   118: 97 77 38                 a0 = a0 << 0x38
   121: 98 77 3c                 a0 = a0 >> 0x3c
   124: 88 b3 0a                 t1 = a4 <u 0xa
   127: 33 0a 30                 a3 = 0x30
   130: da 32 0a                 a3 = t0 if t1 == 0
   133: be ba 0a                 i32 a3 = a3 + a4
   136: 78 9a                    u8 [a2] = a3
   138: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
   141: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
   144: 52 07 e1                 jump @10 if a0 != 0
      :                          @11
   147: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   150: 56 27 80 00 27           jump @14 if a0 >u 128
      :                          @12
   155: 9a bb 81 00              a4 = 0x81 - a4
   159: 64 1a                    a3 = sp
   161: c8 7a 0a                 a3 = a3 + a0
   164: 33 09 02                 a2 = 0x2
   167: 64 87                    a0 = a1
   169: 33 08 92 00 01           a1 = 0x10092
   174: 50 10 04 7e 15           ra = 4, jump @400
      :                          @13 [@dyn 2]
   179: 82 10 80 00              ra = u64 [sp + 0x80]
   183: 95 11 88 00              sp = sp + 0x88
   187: 32 00                    ret
      :                          @14
   189: 00                       trap
      :                          @15 [@dyn 3]
   190: 95 11 c0                 sp = sp + 0xffffffffffffffc0
   193: 7b 10 38                 u64 [sp + 0x38] = ra
   196: 7b 15 30                 u64 [sp + 0x30] = s0
   199: 7b 16 28                 u64 [sp + 0x28] = s1
   202: 7b 18 08                 u64 [sp + 0x8] = a1
   205: 82 89 28                 a2 = u64 [a1 + 0x28]
   208: 82 76                    s1 = u64 [a0]
   210: 82 75 08                 s0 = u64 [a0 + 0x8]
   213: 82 87 20                 a0 = u64 [a1 + 0x20]
   216: 82 9a 18                 a3 = u64 [a2 + 0x18]
   219: 33 08 50 00 01           a1 = 0x10050
   224: 33 09 01                 a2 = 0x1
   227: b4 a0 01 08              ra = 8, jump [a3]
      :                          @16 [@dyn 4]
   231: 82 18 08                 a1 = u64 [sp + 0x8]
   234: 7b 18 10                 u64 [sp + 0x10] = a1
   237: 78 17 18                 u8 [sp + 0x18] = a0
   240: 46 11 19                 u8 [sp + 25] = 0
   243: 51 05 2c                 jump @21 if s0 == 0
      :                          @17
   246: 33 07 02                 a0 = 0x2
   249: 7b 17                    u64 [sp] = a0
   251: 01                       fallthrough
      :                          @18
   252: 95 67 01                 a0 = s1 + 0x1
   255: 7b 17 08                 u64 [sp + 0x8] = a0
   258: 7b 16 20                 u64 [sp + 0x20] = s1
   261: 95 17 10                 a0 = sp + 0x10
   264: 95 18 20                 a1 = sp + 0x20
   267: 82 19                    a2 = u64 [sp]
   269: 50 10 0a ef 1b           ra = 10, jump @544
      :                          @19 [@dyn 5]
   274: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
   277: 82 16 08                 s1 = u64 [sp + 0x8]
   280: 52 05 e4                 jump @18 if s0 != 0
      :                          @20
   283: 7c 17 18                 a0 = u8 [sp + 0x18]
   286: 01                       fallthrough
      :                          @21
   287: 33 08 01                 a1 = 0x1
   290: 52 07 1e                 jump @24 if a0 != 0
      :                          @22
   293: 82 17 10                 a0 = u64 [sp + 0x10]
   296: 82 78 28                 a1 = u64 [a0 + 0x28]
   299: 82 77 20                 a0 = u64 [a0 + 0x20]
   302: 82 8a 18                 a3 = u64 [a1 + 0x18]
   305: 33 08 91 00 01           a1 = 0x10091
   310: 33 09 01                 a2 = 0x1
   313: b4 a0 01 0c              ra = 12, jump [a3]
      :                          @23 [@dyn 6]
   317: 64 78                    a1 = a0
   319: 01                       fallthrough
      :                          @24
   320: 64 87                    a0 = a1
   322: 82 10 38                 ra = u64 [sp + 0x38]
   325: 82 15 30                 s0 = u64 [sp + 0x30]
   328: 82 16 28                 s1 = u64 [sp + 0x28]
   331: 95 11 40                 sp = sp + 0x40
   334: 32 00                    ret
      :                          @25
   336: 95 11 c8                 sp = sp + 0xffffffffffffffc8
   339: 7b 10 30                 u64 [sp + 0x30] = ra
   342: 7b 15 28                 u64 [sp + 0x28] = s0
   345: 7b 16 20                 u64 [sp + 0x20] = s1
   348: 64 95                    s0 = a2
   350: 64 72                    t0 = a0
   352: 51 08 79                 jump @35 if a1 == 0
      :                          @26
   355: 82 a7 08                 a0 = u64 [a3 + 0x8]
   358: 51 07 7c                 jump @36 if a0 == 0
      :                          @27
   361: 82 a9 10                 a2 = u64 [a3 + 0x10]
   364: 51 09 aa 00              jump @43 if a2 == 0
      :                          @28
   368: 82 a8                    a1 = u64 [a3]
   370: 33 06 60 00 03           s1 = 0x30060
   375: 33 03 00 00 01           t1 = 0x10000
   380: c8 36 06                 s1 = s1 + t1
   383: 01                       fallthrough
      :                          @29
   384: 82 6a                    a3 = u64 [s1]
   386: c8 5a 07                 a0 = a3 + s0
   389: ac a7 cf 00              jump @49 if a0 <u a3
      :                          @30
   393: 95 7b 01                 a4 = a0 + 0x1
   396: 88 bc 01                 a5 = a4 <u 0x1
   399: d8 b3 0b                 a4 = t1 <u a4
   402: d4 cb 0b                 a4 = a4 | a5
   405: 52 0b bf 00              jump @49 if a4 != 0
      :                          @31
   409: 82 6b                    a4 = u64 [s1]
   411: ab ab e5                 jump @29 if a4 != a3
      :                          @32
   414: 7b 67                    u64 [s1] = a0
   416: 33 0c                    a5 = 0
   418: 7b 12 18                 u64 [sp + 0x18] = t0
   421: 33 0a 60 00 03           a3 = 0x30060
   426: 33 0b 00 00 01           a4 = 0x10000
   431: 7b 1a                    u64 [sp] = a3
   433: c8 ba 0a                 a3 = a3 + a4
   436: c9 7a 07                 a0 = a3 - a0
   439: 7b 17 10                 u64 [sp + 0x10] = a0
   442: 7b 18 08                 u64 [sp + 0x8] = a1
   445: 64 96                    s1 = a2
   447: 50 10 0e 3e 12           ra = 14, jump @359
      :                          @33 [@dyn 7]
   452: 54 36 00 00 01 98 00     jump @50 if s1 <=u 65536
      :                          @34
   459: 82 12 18                 t0 = u64 [sp + 0x18]
   462: 82 18 10                 a1 = u64 [sp + 0x10]
   465: 33 07                    a0 = 0
   467: 7b 28 08                 u64 [t0 + 0x8] = a1
   470: 28 b5 00                 jump @56
      :                          @35
   473: 49 12 08                 u64 [t0 + 8] = 0
   476: 33 07 01                 a0 = 0x1
   479: 28 ac 00                 jump @56
      :                          @36
   482: 33 09 60 00 03           a2 = 0x30060
   487: 33 07 00 00 01           a0 = 0x10000
   492: c8 79 09                 a2 = a2 + a0
   495: 01                       fallthrough
      :                          @37
   496: 82 9a                    a3 = u64 [a2]
   498: c8 5a 08                 a1 = a3 + s0
   501: ac a8 5f                 jump @49 if a1 <u a3
      :                          @38
   504: 95 8b 01                 a4 = a1 + 0x1
   507: 88 bc 01                 a5 = a4 <u 0x1
   510: d8 b7 0b                 a4 = a0 <u a4
   513: d4 cb 0b                 a4 = a4 | a5
   516: 52 0b 50                 jump @49 if a4 != 0
      :                          @39
   519: 82 9b                    a4 = u64 [a2]
   521: ab ab e7                 jump @37 if a4 != a3
      :                          @40
   524: 7b 98                    u64 [a2] = a1
   526: 33 0c                    a5 = 0
   528: 01                       fallthrough
      :                          @41
   529: ab ab df                 jump @37 if a4 != a3
      :                          @42
   532: 28 31                    jump @48
      :                          @43
   534: 33 09 60 00 03           a2 = 0x30060
   539: 33 07 00 00 01           a0 = 0x10000
   544: c8 79 09                 a2 = a2 + a0
   547: 01                       fallthrough
      :                          @44
   548: 82 9a                    a3 = u64 [a2]
   550: c8 5a 08                 a1 = a3 + s0
   553: ac a8 2b                 jump @49 if a1 <u a3
      :                          @45
   556: 95 8b 01                 a4 = a1 + 0x1
   559: 88 bc 01                 a5 = a4 <u 0x1
   562: d8 b7 0b                 a4 = a0 <u a4
   565: d4 cb 0b                 a4 = a4 | a5
   568: 52 0b 1c                 jump @49 if a4 != 0
      :                          @46
   571: 82 9b                    a4 = u64 [a2]
   573: ab ab e7                 jump @44 if a4 != a3
      :                          @47
   576: 7b 98                    u64 [a2] = a1
   578: 33 0c                    a5 = 0
   580: 01                       fallthrough
      :                          @48
   581: 33 07 60 00 04           a0 = 0x40060
   586: c9 87 08                 a1 = a0 - a1
   589: 33 07                    a0 = 0
   591: 7b 28 08                 u64 [t0 + 0x8] = a1
   594: 28 39                    jump @56
      :                          @49
   596: 33 07 01                 a0 = 0x1
   599: 7b 27 08                 u64 [t0 + 0x8] = a0
   602: 28 31                    jump @56
      :                          @50
   604: 64 6c                    a5 = s1
   606: 82 17                    a0 = u64 [sp]
   608: 95 77 00 00 01           a0 = a0 + 0x10000
   613: 82 12 18                 t0 = u64 [sp + 0x18]
   616: 82 16 08                 s1 = u64 [sp + 0x8]
   619: 01                       fallthrough
      :                          @51
   620: 82 78                    a1 = u64 [a0]
   622: c9 87 09                 a2 = a0 - a1
   625: ab 69 11                 jump @55 if a2 != s1
      :                          @52
   628: c9 c8 09                 a2 = a1 - a5
   631: 01                       fallthrough
      :                          @53
   632: 82 7a                    a3 = u64 [a0]
   634: ab 8a f2                 jump @51 if a3 != a1
      :                          @54
   637: 7b 79                    u64 [a0] = a2
   639: 33 0b                    a4 = 0
   641: 01                       fallthrough
      :                          @55
   642: 82 18 10                 a1 = u64 [sp + 0x10]
   645: 33 07                    a0 = 0
   647: 7b 28 08                 u64 [t0 + 0x8] = a1
   650: 01                       fallthrough
      :                          @56
   651: 7b 25 10                 u64 [t0 + 0x10] = s0
   654: 7b 27                    u64 [t0] = a0
   656: 82 10 30                 ra = u64 [sp + 0x30]
   659: 82 15 28                 s0 = u64 [sp + 0x28]
   662: 82 16 20                 s1 = u64 [sp + 0x20]
   665: 95 11 38                 sp = sp + 0x38
   668: 32 00                    ret
      :                          @57
   670: 95 11 b8                 sp = sp + 0xffffffffffffffb8
   673: 7b 10 40                 u64 [sp + 0x40] = ra
   676: 7b 15 38                 u64 [sp + 0x38] = s0
   679: 7b 16 30                 u64 [sp + 0x30] = s1
   682: c8 89 09                 a2 = a2 + a1
   685: ac 89 53                 jump @65 if a2 <u a1
      :                          @58
   688: 64 75                    s0 = a0
   690: 82 77                    a0 = u64 [a0]
   692: 97 78 01                 a1 = a0 << 0x1
   695: 33 0a 08                 a3 = 0x8
   698: e4 a9 09                 a2 = maxu(a2, a3)
   701: e4 98 06                 s1 = maxu(a1, a2)
   704: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
   707: 98 88 3f                 a1 = a1 >> 0x3f
   710: 51 07 12                 jump @60 if a0 == 0
      :                          @59
   713: 82 59 08                 a2 = u64 [s0 + 0x8]
   716: 7b 19 18                 u64 [sp + 0x18] = a2
   719: 49 11 20 01              u64 [sp + 32] = 0x1
   723: 7b 17 28                 u64 [sp + 0x28] = a0
   726: 28 06                    jump @61
      :                          @60
   728: 49 11 20                 u64 [sp + 32] = 0
   731: 01                       fallthrough
      :                          @61
   732: 64 17                    a0 = sp
   734: 95 1a 18                 a3 = sp + 0x18
   737: 64 69                    a2 = s1
   739: 50 10 10 6d fe           ra = 16, jump @25
      :                          @62 [@dyn 8]
   744: 82 18                    a1 = u64 [sp]
   746: 82 17 08                 a0 = u64 [sp + 0x8]
   749: 51 08 14                 jump @66 if a1 == 0
      :                          @63
   752: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
   762: aa 87 0d                 jump @67 if a0 == a1
      :                          @64
   765: 52 07 18                 jump @68 if a0 != 0
      :                          @65
   768: 00                       trap
      :                          @66
   769: 7b 57 08                 u64 [s0 + 0x8] = a0
   772: 7b 56                    u64 [s0] = s1
   774: 01                       fallthrough
      :                          @67
   775: 82 10 40                 ra = u64 [sp + 0x40]
   778: 82 15 38                 s0 = u64 [sp + 0x38]
   781: 82 16 30                 s1 = u64 [sp + 0x30]
   784: 95 11 48                 sp = sp + 0x48
   787: 32 00                    ret
      :                          @68
   789: 00                       trap
      :                          @69 [export #0: 'refine']
   790: 95 11 d0 fc              sp = sp + 0xfffffffffffffcd0
   794: 7b 10 28 03              u64 [sp + 0x328] = ra
   798: 7b 15 20 03              u64 [sp + 0x320] = s0
   802: 7b 16 18 03              u64 [sp + 0x318] = s1
   806: 64 85                    s0 = a1
   808: 64 7b                    a4 = a0
   810: c8 87 07                 a0 = a0 + a1
   813: 95 79 e0                 a2 = a0 + 0xffffffffffffffe0
   816: 7b 19 70 01              u64 [sp + 0x170] = a2
   820: 49 21 78 01 20           u64 [sp + 376] = 0x20
   825: 33 07 00 00 01           a0 = 0x10000
   830: 53 15 04 43              jump @78 if s0 <u 4
      :                          @70
   834: 7d b8                    a1 = i8 [a4]
   836: 33 06 01                 s1 = 0x1
   839: 59 08 37                 jump @77 if a1 >=s 0
      :                          @71
   842: 84 8a ff 00              a3 = a1 & 0xff
   846: 33 06 02                 s1 = 0x2
   849: 53 2a c0 00 2d           jump @77 if a3 <u 192
      :                          @72
   854: 33 06 03                 s1 = 0x3
   857: 53 2a e0 00 25           jump @77 if a3 <u 224
      :                          @73
   862: 33 06 04                 s1 = 0x4
   865: 53 2a f0 00 1d           jump @77 if a3 <u 240
      :                          @74
   870: 33 06 05                 s1 = 0x5
   873: 53 2a f8 00 15           jump @77 if a3 <u 248
      :                          @75
   878: 33 06 06                 s1 = 0x6
   881: 53 2a fc 00 0d           jump @77 if a3 <u 252
      :                          @76
   886: 88 a8 fe 00              a1 = a3 <u 0xfe
   890: 9a 86 08                 s1 = 0x8 - a1
   893: 01                       fallthrough
      :                          @77
   894: ae 65 08                 jump @79 if s0 >=u s1
      :                          @78
   897: 33 08                    a1 = 0
   899: 28 e7 00                 jump @102
      :                          @79
   902: 7b 19 60 01              u64 [sp + 0x160] = a2
   906: 64 b7                    a0 = a4
   908: 64 68                    a1 = s1
   910: 7b 1b 68 01              u64 [sp + 0x168] = a4
   914: 50 10 12 a7 1a           ra = 18, jump @561
      :                          @80 [@dyn 9]
   919: aa 65 cb 00              jump @101 if s0 == s1
      :                          @81
   923: 82 17 68 01              a0 = u64 [sp + 0x168]
   927: c8 67 07                 a0 = a0 + s1
   930: 7d 78                    a1 = i8 [a0]
   932: c9 65 06                 s1 = s0 - s1
   935: 33 05 01                 s0 = 0x1
   938: 59 08 37                 jump @88 if a1 >=s 0
      :                          @82
   941: 84 89 ff 00              a2 = a1 & 0xff
   945: 33 05 02                 s0 = 0x2
   948: 53 29 c0 00 2d           jump @88 if a2 <u 192
      :                          @83
   953: 33 05 03                 s0 = 0x3
   956: 53 29 e0 00 25           jump @88 if a2 <u 224
      :                          @84
   961: 33 05 04                 s0 = 0x4
   964: 53 29 f0 00 1d           jump @88 if a2 <u 240
      :                          @85
   969: 33 05 05                 s0 = 0x5
   972: 53 29 f8 00 15           jump @88 if a2 <u 248
      :                          @86
   977: 33 05 06                 s0 = 0x6
   980: 53 29 fc 00 0d           jump @88 if a2 <u 252
      :                          @87
   985: 88 98 fe 00              a1 = a2 <u 0xfe
   989: 9a 85 08                 s0 = 0x8 - a1
   992: 01                       fallthrough
      :                          @88
   993: ac 56 81 00              jump @101 if s1 <u s0
      :                          @89
   997: 64 58                    a1 = s0
   999: 7b 17 68 01              u64 [sp + 0x168] = a0
  1003: 50 10 14 4e 1a           ra = 20, jump @561
      :                          @90 [@dyn 10]
  1008: aa 56 72                 jump @101 if s1 == s0
      :                          @91
  1011: 82 17 68 01              a0 = u64 [sp + 0x168]
  1015: c8 57 07                 a0 = a0 + s0
  1018: 7d 78                    a1 = i8 [a0]
  1020: c9 56 05                 s0 = s1 - s0
  1023: 33 06 01                 s1 = 0x1
  1026: 59 08 37                 jump @98 if a1 >=s 0
      :                          @92
  1029: 84 89 ff 00              a2 = a1 & 0xff
  1033: 33 06 02                 s1 = 0x2
  1036: 53 29 c0 00 2d           jump @98 if a2 <u 192
      :                          @93
  1041: 33 06 03                 s1 = 0x3
  1044: 53 29 e0 00 25           jump @98 if a2 <u 224
      :                          @94
  1049: 33 06 04                 s1 = 0x4
  1052: 53 29 f0 00 1d           jump @98 if a2 <u 240
      :                          @95
  1057: 33 06 05                 s1 = 0x5
  1060: 53 29 f8 00 15           jump @98 if a2 <u 248
      :                          @96
  1065: 33 06 06                 s1 = 0x6
  1068: 53 29 fc 00 0d           jump @98 if a2 <u 252
      :                          @97
  1073: 88 99 fe 00              a2 = a2 <u 0xfe
  1077: 9a 96 08                 s1 = 0x8 - a2
  1080: 01                       fallthrough
      :                          @98
  1081: ac 65 d4 09              jump @216 if s0 <u s1
      :                          @99
  1085: 7b 17 68 01              u64 [sp + 0x168] = a0
  1089: 64 68                    a1 = s1
  1091: 50 10 16 f6 19           ra = 22, jump @561
      :                          @100 [@dyn 11]
  1096: 64 72                    t0 = a0
  1098: e4 65 07                 a0 = maxu(s0, s1)
  1101: c9 67 07                 a0 = a0 - s1
  1104: d8 27 08                 a1 = a0 <u t0
  1107: e4 27 07                 a0 = maxu(a0, t0)
  1110: c9 27 07                 a0 = a0 - t0
  1113: 88 77 20                 a0 = a0 <u 0x20
  1116: d4 87 07                 a0 = a0 | a1
  1119: 51 07 1d                 jump @103 if a0 == 0
      :                          @101
  1122: 33 08                    a1 = 0
  1124: 33 07 00 00 01           a0 = 0x10000
  1129: 01                       fallthrough
      :                          @102
  1130: 82 10 28 03              ra = u64 [sp + 0x328]
  1134: 82 15 20 03              s0 = u64 [sp + 0x320]
  1138: 82 16 18 03              s1 = u64 [sp + 0x318]
  1142: 95 11 30 03              sp = sp + 0x330
  1146: 32 00                    ret
      :                          @103
  1148: 51 02 b8 01              jump @132 if t0 == 0
      :                          @104
  1152: 7b 16 50 01              u64 [sp + 0x150] = s1
  1156: 95 26 20                 s1 = t0 + 0x20
  1159: 7b 12 58 01              u64 [sp + 0x158] = t0
  1163: 51 06 2f 09              jump @199 if s1 == 0
      :                          @105
  1167: 57 06 7f 09              jump @217 if s1 <s 0
      :                          @106
  1171: 89 67                    a0 = s1 <s 0
  1173: 85 78 01                 a1 = a0 ^ 0x1
  1176: 33 0a 60 00 03           a3 = 0x30060
  1181: 33 09 00 00 01           a2 = 0x10000
  1186: c8 9a 0a                 a3 = a3 + a2
  1189: 01                       fallthrough
      :                          @107
  1190: 82 ab                    a4 = u64 [a3]
  1192: c8 6b 07                 a0 = a4 + s1
  1195: ac b7 5d 09              jump @211 if a0 <u a4
      :                          @108
  1199: c8 87 0c                 a5 = a0 + a1
  1202: d8 7c 05                 s0 = a5 <u a0
  1205: d8 c9 0c                 a5 = a2 <u a5
  1208: d4 5c 0c                 a5 = a5 | s0
  1211: 52 0c 4d 09              jump @211 if a5 != 0
      :                          @109
  1215: 82 ac                    a5 = u64 [a3]
  1217: ab bc e5                 jump @107 if a5 != a4
      :                          @110
  1220: 7b a7                    u64 [a3] = a0
  1222: 01                       fallthrough
      :                          @111
  1223: 33 05                    s0 = 0
  1225: 33 08 60 00 04           a1 = 0x40060
  1230: c9 78 08                 a1 = a1 - a0
  1233: 7b 16 b8 01              u64 [sp + 0x1b8] = s1
  1237: 7b 18 c0 01              u64 [sp + 0x1c0] = a1
  1241: 49 21 c8 01              u64 [sp + 456] = 0
  1245: 55 12 e0 eb 08           jump @200 if t0 >=u 4294967264
      :                          @112
  1250: 82 17 68 01              a0 = u64 [sp + 0x168]
  1254: 82 19 50 01              a2 = u64 [sp + 0x150]
  1258: c8 97 07                 a0 = a0 + a2
  1261: 7b 17 50 01              u64 [sp + 0x150] = a0
  1265: 7b 18 68 01              u64 [sp + 0x168] = a1
  1269: c8 58 07                 a0 = a1 + s0
  1272: 33 09 20                 a2 = 0x20
  1275: 82 18 60 01              a1 = u64 [sp + 0x160]
  1279: 50 10 18 fe 0e           ra = 24, jump @359
      :                          @113 [@dyn 12]
  1284: 95 58 20                 a1 = s0 + 0x20
  1287: c9 86 07                 a0 = s1 - a1
  1290: 7b 18 c8 01              u64 [sp + 0x1c8] = a1
  1294: 82 19 58 01              a2 = u64 [sp + 0x158]
  1298: ac 97 d3 08              jump @202 if a0 <u a2
      :                          @114
  1302: 82 15 68 01              s0 = u64 [sp + 0x168]
  1306: 01                       fallthrough
      :                          @115
  1307: 7b 18 68 01              u64 [sp + 0x168] = a1
  1311: 49 21 60 01 ff ff fe     u64 [sp + 352] = 0xfffffffffffeffff
  1318: c8 85 07                 a0 = s0 + a1
  1321: 82 18 50 01              a1 = u64 [sp + 0x150]
  1325: 50 10 1a d0 0e           ra = 26, jump @359
      :                          @116 [@dyn 13]
  1330: 82 17 68 01              a0 = u64 [sp + 0x168]
  1334: 82 18 58 01              a1 = u64 [sp + 0x158]
  1338: c8 87 07                 a0 = a0 + a1
  1341: 7b 15 68 01              u64 [sp + 0x168] = s0
  1345: 7b 15 80 01              u64 [sp + 0x180] = s0
  1349: 7b 17 88 01              u64 [sp + 0x188] = a0
  1353: 95 17 80 01              a0 = sp + 0x180
  1357: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  1361: 33 07 06                 a0 = 0x6
  1364: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  1368: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  1373: 49 21 c8 01 02           u64 [sp + 456] = 0x2
  1378: 49 21 d8 01              u64 [sp + 472] = 0
  1382: 14 08 20 00 00 00 10 00 00 00 a1 = 0x1000000020
  1392: 7b 18 e0 01              u64 [sp + 0x1e0] = a1
  1396: 46 21 e8 01 03           u8 [sp + 488] = 0x3
  1401: 33 08 10 00 01           a1 = 0x10010
  1406: 7b 18 98 02              u64 [sp + 0x298] = a1
  1410: 49 21 a0 02 01           u64 [sp + 672] = 0x1
  1415: 95 18 b8 01              a1 = sp + 0x1b8
  1419: 7b 18 b8 02              u64 [sp + 0x2b8] = a1
  1423: 49 21 c0 02 01           u64 [sp + 704] = 0x1
  1428: 95 18 a8 01              a1 = sp + 0x1a8
  1432: 7b 18 a8 02              u64 [sp + 0x2a8] = a1
  1436: 49 21 b0 02 01           u64 [sp + 688] = 0x1
  1441: 95 17 90 01              a0 = sp + 0x190
  1445: 95 18 98 02              a1 = sp + 0x298
  1449: 50 10 1c e0 0b           ra = 28, jump @309
      :                          @117 [@dyn 14]
  1454: 82 15 98 01              s0 = u64 [sp + 0x198]
  1458: 82 1b a0 01              a4 = u64 [sp + 0x1a0]
  1462: 82 17 90 01              a0 = u64 [sp + 0x190]
  1466: 7b 17 58 01              u64 [sp + 0x158] = a0
  1470: 33 07 02                 a0 = 0x2
  1473: 33 08                    a1 = 0
  1475: 33 09                    a2 = 0
  1477: 64 5a                    a3 = s0
  1479: 33 00 1e                 ra = 0x1e
  1482: 0a 64                    ecalli 100 // 'log'
  1484: 01                       fallthrough
      :                          @118 [@dyn 15]
  1485: 82 1c 58 01              a5 = u64 [sp + 0x158]
  1489: 82 13 60 01              t1 = u64 [sp + 0x160]
  1493: 33 02 00 00 ff           t0 = 0xffffffffffff0000
  1498: c8 3c 07                 a0 = a5 + t1
  1501: ac 27 24                 jump @124 if a0 <u t0
      :                          @119
  1504: 33 07 60 00 03           a0 = 0x30060
  1509: 95 77 00 00 01           a0 = a0 + 0x10000
  1514: 01                       fallthrough
      :                          @120
  1515: 82 78                    a1 = u64 [a0]
  1517: c9 87 09                 a2 = a0 - a1
  1520: ab 59 11                 jump @124 if a2 != s0
      :                          @121
  1523: c9 c8 09                 a2 = a1 - a5
  1526: 01                       fallthrough
      :                          @122
  1527: 82 7a                    a3 = u64 [a0]
  1529: ab 8a f2                 jump @120 if a3 != a1
      :                          @123
  1532: 7b 79                    u64 [a0] = a2
  1534: 33 0b                    a4 = 0
  1536: 01                       fallthrough
      :                          @124
  1537: c8 36 07                 a0 = s1 + t1
  1540: 82 1c 68 01              a5 = u64 [sp + 0x168]
  1544: ac 27 d6 00              jump @140 if a0 <u t0
      :                          @125
  1548: 33 07 60 00 03           a0 = 0x30060
  1553: 95 77 00 00 01           a0 = a0 + 0x10000
  1558: 01                       fallthrough
      :                          @126
  1559: 82 78                    a1 = u64 [a0]
  1561: c9 87 09                 a2 = a0 - a1
  1564: ab c9 c2 00              jump @140 if a2 != a5
      :                          @127
  1568: c9 68 09                 a2 = a1 - s1
  1571: 01                       fallthrough
      :                          @128
  1572: 82 7a                    a3 = u64 [a0]
  1574: ab 8a f1                 jump @126 if a3 != a1
      :                          @129
  1577: 7b 79                    u64 [a0] = a2
  1579: 33 0b                    a4 = 0
  1581: 01                       fallthrough
      :                          @130
  1582: ab 8a e9                 jump @126 if a3 != a1
      :                          @131
  1585: 28 ad 00                 jump @140
      :                          @132
  1588: 95 17 70 01              a0 = sp + 0x170
  1592: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  1596: 33 07 06                 a0 = 0x6
  1599: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  1603: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  1608: 49 21 c8 01 02           u64 [sp + 456] = 0x2
  1613: 49 21 d8 01              u64 [sp + 472] = 0
  1617: 14 08 20 00 00 00 10 00 00 00 a1 = 0x1000000020
  1627: 7b 18 e0 01              u64 [sp + 0x1e0] = a1
  1631: 46 21 e8 01 03           u8 [sp + 488] = 0x3
  1636: 33 08 10 00 01           a1 = 0x10010
  1641: 7b 18 98 02              u64 [sp + 0x298] = a1
  1645: 49 21 a0 02 01           u64 [sp + 672] = 0x1
  1650: 95 18 b8 01              a1 = sp + 0x1b8
  1654: 7b 18 b8 02              u64 [sp + 0x2b8] = a1
  1658: 49 21 c0 02 01           u64 [sp + 704] = 0x1
  1663: 95 18 a8 01              a1 = sp + 0x1a8
  1667: 7b 18 a8 02              u64 [sp + 0x2a8] = a1
  1671: 49 21 b0 02 01           u64 [sp + 688] = 0x1
  1676: 95 17 90 01              a0 = sp + 0x190
  1680: 95 18 98 02              a1 = sp + 0x298
  1684: 50 10 20 f5 0a           ra = 32, jump @309
      :                          @133 [@dyn 16]
  1689: 82 15 98 01              s0 = u64 [sp + 0x198]
  1693: 82 1b a0 01              a4 = u64 [sp + 0x1a0]
  1697: 82 16 90 01              s1 = u64 [sp + 0x190]
  1701: 33 07 02                 a0 = 0x2
  1704: 33 08                    a1 = 0
  1706: 33 09                    a2 = 0
  1708: 64 5a                    a3 = s0
  1710: 33 00 22                 ra = 0x22
  1713: 0a 64                    ecalli 100 // 'log'
  1715: 01                       fallthrough
      :                          @134 [@dyn 17]
  1716: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
  1721: 53 38 00 00 ff 25        jump @140 if a1 <u 4294901760
      :                          @135
  1727: 33 07 60 00 03           a0 = 0x30060
  1732: 95 77 00 00 01           a0 = a0 + 0x10000
  1737: 01                       fallthrough
      :                          @136
  1738: 82 78                    a1 = u64 [a0]
  1740: c9 87 09                 a2 = a0 - a1
  1743: ab 59 0f                 jump @140 if a2 != s0
      :                          @137
  1746: c9 68 09                 a2 = a1 - s1
  1749: 01                       fallthrough
      :                          @138
  1750: 82 7a                    a3 = u64 [a0]
  1752: ab 8a f2                 jump @136 if a3 != a1
      :                          @139
  1755: 7b 79                    u64 [a0] = a2
  1757: 01                       fallthrough
      :                          @140
  1758: 82 17 70 01              a0 = u64 [sp + 0x170]
  1762: 7b 17 90 00              u64 [sp + 0x90] = a0
  1766: 82 15 78 01              s0 = u64 [sp + 0x178]
  1770: 95 17 08 02              a0 = sp + 0x208
  1774: 33 09 80 00              a2 = 0x80
  1778: 33 08                    a1 = 0
  1780: 50 10 24 bb 0d           ra = 36, jump @377
      :                          @141 [@dyn 18]
  1785: 3a 07 00 00 03           a0 = u64 [0x30000]
  1790: 3a 09 08 00 03           a2 = u64 [0x30008]
  1795: 3a 0b 10 00 03           a4 = u64 [0x30010]
  1800: 3a 08 18 00 03           a1 = u64 [0x30018]
  1805: 7b 17 b8 01              u64 [sp + 0x1b8] = a0
  1809: 7b 19 40                 u64 [sp + 0x40] = a2
  1812: 7b 19 c0 01              u64 [sp + 0x1c0] = a2
  1816: 7b 1b 38                 u64 [sp + 0x38] = a4
  1819: 7b 1b c8 01              u64 [sp + 0x1c8] = a4
  1823: 7b 18 30                 u64 [sp + 0x30] = a1
  1826: 7b 18 d0 01              u64 [sp + 0x1d0] = a1
  1830: 3a 08 20 00 03           a1 = u64 [0x30020]
  1835: 3a 09 28 00 03           a2 = u64 [0x30028]
  1840: 3a 0b 30 00 03           a4 = u64 [0x30030]
  1845: 3a 07 38 00 03           a0 = u64 [0x30038]
  1850: 7b 18 28                 u64 [sp + 0x28] = a1
  1853: 7b 18 d8 01              u64 [sp + 0x1d8] = a1
  1857: 7b 19 20                 u64 [sp + 0x20] = a2
  1860: 7b 19 e0 01              u64 [sp + 0x1e0] = a2
  1864: 7b 1b 18                 u64 [sp + 0x18] = a4
  1867: 7b 1b e8 01              u64 [sp + 0x1e8] = a4
  1871: 7b 17 10                 u64 [sp + 0x10] = a0
  1874: 7b 17 f0 01              u64 [sp + 0x1f0] = a0
  1878: 49 21 f8 01              u64 [sp + 504] = 0
  1882: 49 21 00 02              u64 [sp + 512] = 0
  1886: 49 21 88 02              u64 [sp + 648] = 0
  1890: 46 21 90 02              u8 [sp + 656] = 0
  1894: 51 05 d1 05              jump @178 if s0 == 0
      :                          @142
  1898: 64 5a                    a3 = s0
  1900: 33 07                    a0 = 0
  1902: 33 0c                    a5 = 0
  1904: 3a 08 40 00 03           a1 = u64 [0x30040]
  1909: 7b 18 08                 u64 [sp + 0x8] = a1
  1912: 33 08 63 01 01           a1 = 0x10163
  1917: 7b 18                    u64 [sp] = a1
  1919: 7b 15 98 00              u64 [sp + 0x98] = s0
  1923: 01                       fallthrough
      :                          @143
  1924: 33 0b 80 00              a4 = 0x80
  1928: ab b7 28                 jump @146 if a0 != a4
      :                          @144
  1931: 82 17 f8 01              a0 = u64 [sp + 0x1f8]
  1935: 95 75 80 00              s0 = a0 + 0x80
  1939: 7b 15 f8 01              u64 [sp + 0x1f8] = s0
  1943: 82 19 00 02              a2 = u64 [sp + 0x200]
  1947: 7b 1c 88 00              u64 [sp + 0x88] = a5
  1951: 53 17 80 2b              jump @149 if a0 <u 4294967168
      :                          @145
  1955: 95 99 01                 a2 = a2 + 0x1
  1958: 7b 19 68 01              u64 [sp + 0x168] = a2
  1962: 7b 19 00 02              u64 [sp + 0x200] = a2
  1966: 28 21                    jump @150
      :                          @146
  1968: 9a 78 80 00              a1 = 0x80 - a0
  1972: c9 ca 09                 a2 = a3 - a5
  1975: e6 98 06                 s1 = minu(a1, a2)
  1978: c8 76 09                 a2 = s1 + a0
  1981: ac 69 4e 06              jump @214 if a2 <u s1
      :                          @147
  1985: 54 29 80 00 1d 05        jump @170 if a2 <=u 128
      :                          @148
  1991: 28 45 06                 jump @215
      :                          @149
  1994: 7b 19 68 01              u64 [sp + 0x168] = a2
  1998: 01                       fallthrough
      :                          @150
  1999: 95 17 98 02              a0 = sp + 0x298
  2003: 33 09 80 00              a2 = 0x80
  2007: 95 18 08 02              a1 = sp + 0x208
  2011: 50 10 26 22 0c           ra = 38, jump @359
      :                          @151 [@dyn 19]
  2016: 82 16 b8 01              s1 = u64 [sp + 0x1b8]
  2020: 82 18 c0 01              a1 = u64 [sp + 0x1c0]
  2024: 82 13 c8 01              t1 = u64 [sp + 0x1c8]
  2028: 82 12 d0 01              t0 = u64 [sp + 0x1d0]
  2032: 82 1b d8 01              a4 = u64 [sp + 0x1d8]
  2036: 82 1a e0 01              a3 = u64 [sp + 0x1e0]
  2040: 82 19 e8 01              a2 = u64 [sp + 0x1e8]
  2044: 82 14 f0 01              t2 = u64 [sp + 0x1f0]
  2048: 82 17 28                 a0 = u64 [sp + 0x28]
  2051: d3 57 07                 a0 = a0 ^ s0
  2054: 7b 17 20 01              u64 [sp + 0x120] = a0
  2058: 82 17 20                 a0 = u64 [sp + 0x20]
  2061: 82 1c 68 01              a5 = u64 [sp + 0x168]
  2065: d3 c7 07                 a0 = a0 ^ a5
  2068: 7b 17 30 01              u64 [sp + 0x130] = a0
  2072: 33 05 0c                 s0 = 0xc
  2075: 82 17                    a0 = u64 [sp]
  2077: 7b 16 48                 u64 [sp + 0x48] = s1
  2080: 7b 16 18 01              u64 [sp + 0x118] = s1
  2084: 64 76                    s1 = a0
  2086: 7b 1b 68                 u64 [sp + 0x68] = a4
  2089: 64 bc                    a5 = a4
  2091: 82 17 08                 a0 = u64 [sp + 0x8]
  2094: 7b 17 48 01              u64 [sp + 0x148] = a0
  2098: 7b 18 50                 u64 [sp + 0x50] = a1
  2101: 7b 18 28 01              u64 [sp + 0x128] = a1
  2105: 7b 1a 70                 u64 [sp + 0x70] = a3
  2108: 64 a0                    ra = a3
  2110: 82 1b 40                 a4 = u64 [sp + 0x40]
  2113: 7b 13 58                 u64 [sp + 0x58] = t1
  2116: 7b 13 40 01              u64 [sp + 0x140] = t1
  2120: 7b 19 78                 u64 [sp + 0x78] = a2
  2123: 64 9a                    a3 = a2
  2125: 82 17 18                 a0 = u64 [sp + 0x18]
  2128: 7b 17 38 01              u64 [sp + 0x138] = a0
  2132: 82 17 38                 a0 = u64 [sp + 0x38]
  2135: 7b 17 60 01              u64 [sp + 0x160] = a0
  2139: 7b 12 60                 u64 [sp + 0x60] = t0
  2142: 64 23                    t1 = t0
  2144: 7b 14 80 00              u64 [sp + 0x80] = t2
  2148: 64 42                    t0 = t2
  2150: 82 17 10                 a0 = u64 [sp + 0x10]
  2153: 7b 17 50 01              u64 [sp + 0x150] = a0
  2157: 82 17 30                 a0 = u64 [sp + 0x30]
  2160: 7b 17 58 01              u64 [sp + 0x158] = a0
  2164: 01                       fallthrough
      :                          @152
  2165: 7b 10 10 01              u64 [sp + 0x110] = ra
  2169: 7b 1a 68 01              u64 [sp + 0x168] = a3
  2173: 7c 60 f9                 ra = u8 [s1 + 0xfffffffffffffff9]
  2176: 56 10 0f 81 05           jump @204 if ra >u 15
      :                          @153
  2181: 7c 67 fa                 a0 = u8 [s1 + 0xfffffffffffffffa]
  2184: 33 08 10                 a1 = 0x10
  2187: ae 87 2e 05              jump @198 if a0 >=u a1
      :                          @154
  2191: 7b 13 08 01              u64 [sp + 0x108] = t1
  2195: 7c 63 fb                 t1 = u8 [s1 + 0xfffffffffffffffb]
  2198: 55 13 10 6c 05           jump @205 if t1 >=u 16
      :                          @155
  2203: 7b 15 00 01              u64 [sp + 0x100] = s0
  2207: 7c 64 fc                 t2 = u8 [s1 + 0xfffffffffffffffc]
  2210: 55 14 10 61 05           jump @206 if t2 >=u 16
      :                          @156
  2215: 7c 69 fd                 a2 = u8 [s1 + 0xfffffffffffffffd]
  2218: 55 19 10 5a 05           jump @207 if a2 >=u 16
      :                          @157
  2223: 7b 12 f8 00              u64 [sp + 0xf8] = t0
  2227: 7c 62 fe                 t0 = u8 [s1 + 0xfffffffffffffffe]
  2230: 55 12 10 4f 05           jump @208 if t0 >=u 16
      :                          @158
  2235: 7c 6a ff                 a3 = u8 [s1 + 0xffffffffffffffff]
  2238: 55 1a 10 48 05           jump @209 if a3 >=u 16
      :                          @159
  2243: 7b 1b f0 00              u64 [sp + 0xf0] = a4
  2247: 7c 6b                    a4 = u8 [s1]
  2249: 55 1b 10 3e 05           jump @210 if a4 >=u 16
      :                          @160
  2254: 7c 65 01                 s0 = u8 [s1 + 0x1]
  2257: 55 15 10 e7 04           jump @197 if s0 >=u 16
      :                          @161
  2262: 7b 15 e8 00              u64 [sp + 0xe8] = s0
  2266: 7c 65 02                 s0 = u8 [s1 + 0x2]
  2269: 55 15 10 db 04           jump @197 if s0 >=u 16
      :                          @162
  2274: 7b 15 e0 00              u64 [sp + 0xe0] = s0
  2278: 7c 65 03                 s0 = u8 [s1 + 0x3]
  2281: 55 15 10 cf 04           jump @197 if s0 >=u 16
      :                          @163
  2286: 7b 15 d8 00              u64 [sp + 0xd8] = s0
  2290: 7c 65 04                 s0 = u8 [s1 + 0x4]
  2293: 55 15 10 c3 04           jump @197 if s0 >=u 16
      :                          @164
  2298: 7b 15 d0 00              u64 [sp + 0xd0] = s0
  2302: 7c 65 05                 s0 = u8 [s1 + 0x5]
  2305: 55 15 10 b7 04           jump @197 if s0 >=u 16
      :                          @165
  2310: 7b 15 c8 00              u64 [sp + 0xc8] = s0
  2314: 7c 65 06                 s0 = u8 [s1 + 0x6]
  2317: 55 15 10 ab 04           jump @197 if s0 >=u 16
      :                          @166
  2322: 7b 15 c0 00              u64 [sp + 0xc0] = s0
  2326: 7c 65 07                 s0 = u8 [s1 + 0x7]
  2329: 55 15 10 9f 04           jump @197 if s0 >=u 16
      :                          @167
  2334: 7b 15 b8 00              u64 [sp + 0xb8] = s0
  2338: 7c 65 08                 s0 = u8 [s1 + 0x8]
  2341: 55 15 10 93 04           jump @197 if s0 >=u 16
      :                          @168
  2346: 97 00 03                 ra = ra << 0x3
  2349: 95 18 98 02              a1 = sp + 0x298
  2353: c8 80 00                 ra = ra + a1
  2356: 7b 15 a8 00              u64 [sp + 0xa8] = s0
  2360: 82 05                    s0 = u64 [ra]
  2362: 97 77 03                 a0 = a0 << 0x3
  2365: c8 87 07                 a0 = a0 + a1
  2368: 82 77                    a0 = u64 [a0]
  2370: 7b 16 b0 00              u64 [sp + 0xb0] = s1
  2374: 7b 1c a0 00              u64 [sp + 0xa0] = a5
  2378: 82 16 18 01              s1 = u64 [sp + 0x118]
  2382: c8 c6 06                 s1 = s1 + a5
  2385: c8 65 05                 s0 = s0 + s1
  2388: 82 1c 20 01              a5 = u64 [sp + 0x120]
  2392: d3 5c 0c                 a5 = a5 ^ s0
  2395: 7b 1c 18 01              u64 [sp + 0x118] = a5
  2399: c8 57 07                 a0 = a0 + s0
  2402: 7b 17 20 01              u64 [sp + 0x120] = a0
  2406: 97 33 03                 t1 = t1 << 0x3
  2409: c8 83 03                 t1 = t1 + a1
  2412: 82 37                    a0 = u64 [t1]
  2414: 97 44 03                 t2 = t2 << 0x3
  2417: c8 84 04                 t2 = t2 + a1
  2420: 82 45                    s0 = u64 [t2]
  2422: 82 10 10 01              ra = u64 [sp + 0x110]
  2426: 82 16 28 01              s1 = u64 [sp + 0x128]
  2430: c8 06 06                 s1 = s1 + ra
  2433: c8 67 07                 a0 = a0 + s1
  2436: 82 1c 30 01              a5 = u64 [sp + 0x130]
  2440: d3 c7 03                 t1 = a0 ^ a5
  2443: c8 57 04                 t2 = a0 + s0
  2446: 97 9c 03                 a5 = a2 << 0x3
  2449: c8 8c 0c                 a5 = a5 + a1
  2452: 82 c7                    a0 = u64 [a5]
  2454: 97 22 03                 t0 = t0 << 0x3
  2457: c8 82 02                 t0 = t0 + a1
  2460: 82 2c                    a5 = u64 [t0]
  2462: 82 16 40 01              s1 = u64 [sp + 0x140]
  2466: 82 18 68 01              a1 = u64 [sp + 0x168]
  2470: c8 86 06                 s1 = s1 + a1
  2473: c8 67 07                 a0 = a0 + s1
  2476: 82 19 38 01              a2 = u64 [sp + 0x138]
  2480: d3 79 09                 a2 = a2 ^ a0
  2483: 7b 19 40 01              u64 [sp + 0x140] = a2
  2487: c8 c7 07                 a0 = a0 + a5
  2490: 7b 17 30 01              u64 [sp + 0x130] = a0
  2494: 97 aa 03                 a3 = a3 << 0x3
  2497: 95 18 98 02              a1 = sp + 0x298
  2501: c8 8a 0a                 a3 = a3 + a1
  2504: 82 a7                    a0 = u64 [a3]
  2506: 97 bb 03                 a4 = a4 << 0x3
  2509: c8 8b 0b                 a4 = a4 + a1
  2512: 82 ba                    a3 = u64 [a4]
  2514: 82 16 f8 00              s1 = u64 [sp + 0xf8]
  2518: 82 1b 08 01              a4 = u64 [sp + 0x108]
  2522: c8 6b 0b                 a4 = a4 + s1
  2525: c8 b7 07                 a0 = a0 + a4
  2528: 82 1b 50 01              a4 = u64 [sp + 0x150]
  2532: d3 7b 0b                 a4 = a4 ^ a0
  2535: c8 a7 02                 t0 = a0 + a3
  2538: 82 17 18 01              a0 = u64 [sp + 0x118]
  2542: 9e 77 20                 a0 = a0 >>r 0x20
  2545: 82 1a 48 01              a3 = u64 [sp + 0x148]
  2549: c8 7a 0a                 a3 = a3 + a0
  2552: 82 15 a0 00              s0 = u64 [sp + 0xa0]
  2556: d3 a5 05                 s0 = s0 ^ a3
  2559: 82 19 e8 00              a2 = u64 [sp + 0xe8]
  2563: 97 99 03                 a2 = a2 << 0x3
  2566: c8 89 09                 a2 = a2 + a1
  2569: 82 99                    a2 = u64 [a2]
  2571: 9e 58 18                 a1 = s0 >>r 0x18
  2574: 7b 18 50 01              u64 [sp + 0x150] = a1
  2578: 82 15 20 01              s0 = u64 [sp + 0x120]
  2582: c8 85 05                 s0 = s0 + a1
  2585: d3 57 07                 a0 = a0 ^ s0
  2588: c8 59 09                 a2 = a2 + s0
  2591: 9e 35 20                 s0 = t1 >>r 0x20
  2594: 82 18 f0 00              a1 = u64 [sp + 0xf0]
  2598: c8 85 03                 t1 = s0 + a1
  2601: d3 03 0c                 a5 = t1 ^ ra
  2604: 9e cc 18                 a5 = a5 >>r 0x18
  2607: c8 c4 04                 t2 = t2 + a5
  2610: d3 54 05                 s0 = t2 ^ s0
  2613: 9e 58 10                 a1 = s0 >>r 0x10
  2616: 7b 18 48 01              u64 [sp + 0x148] = a1
  2620: c8 38 08                 a1 = a1 + t1
  2623: 7b 18 38 01              u64 [sp + 0x138] = a1
  2627: d3 c8 08                 a1 = a1 ^ a5
  2630: 9e 88 3f                 a1 = a1 >>r 0x3f
  2633: 7b 18 28 01              u64 [sp + 0x128] = a1
  2637: 9e bb 20                 a4 = a4 >>r 0x20
  2640: 82 10 58 01              ra = u64 [sp + 0x158]
  2644: c8 b0 00                 ra = ra + a4
  2647: d3 60 0c                 a5 = ra ^ s1
  2650: 9e c5 18                 s0 = a5 >>r 0x18
  2653: c8 52 03                 t1 = t0 + s0
  2656: d3 b3 0b                 a4 = t1 ^ a4
  2659: 9e bb 10                 a4 = a4 >>r 0x10
  2662: c8 b0 00                 ra = ra + a4
  2665: 7b 10 08 01              u64 [sp + 0x108] = ra
  2669: 82 1c e0 00              a5 = u64 [sp + 0xe0]
  2673: 97 cc 03                 a5 = a5 << 0x3
  2676: 95 16 98 02              s1 = sp + 0x298
  2680: c8 6c 0c                 a5 = a5 + s1
  2683: 82 cc                    a5 = u64 [a5]
  2685: 82 12 d8 00              t0 = u64 [sp + 0xd8]
  2689: 97 22 03                 t0 = t0 << 0x3
  2692: c8 62 02                 t0 = t0 + s1
  2695: 82 22                    t0 = u64 [t0]
  2697: c8 89 09                 a2 = a2 + a1
  2700: d3 9b 0b                 a4 = a4 ^ a2
  2703: 7b 1b 20 01              u64 [sp + 0x120] = a4
  2707: c8 c9 09                 a2 = a2 + a5
  2710: 7b 19 58 01              u64 [sp + 0x158] = a2
  2714: c8 24 04                 t2 = t2 + t0
  2717: 9e 76 10                 s1 = a0 >>r 0x10
  2720: c8 6a 0a                 a3 = a3 + s1
  2723: 7b 1a 10 01              u64 [sp + 0x110] = a3
  2727: 82 17 40 01              a0 = u64 [sp + 0x140]
  2731: 9e 79 20                 a2 = a0 >>r 0x20
  2734: 82 12 60 01              t0 = u64 [sp + 0x160]
  2738: c8 92 02                 t0 = t0 + a2
  2741: 82 17 68 01              a0 = u64 [sp + 0x168]
  2745: d3 72 0c                 a5 = t0 ^ a0
  2748: 9e cb 18                 a4 = a5 >>r 0x18
  2751: 82 17 30 01              a0 = u64 [sp + 0x130]
  2755: c8 b7 07                 a0 = a0 + a4
  2758: d3 79 09                 a2 = a2 ^ a0
  2761: 9e 90 10                 ra = a2 >>r 0x10
  2764: c8 02 02                 t0 = t0 + ra
  2767: d3 b2 0b                 a4 = t0 ^ a4
  2770: 9e b8 3f                 a1 = a4 >>r 0x3f
  2773: 7b 18 40 01              u64 [sp + 0x140] = a1
  2777: 82 1a d0 00              a3 = u64 [sp + 0xd0]
  2781: 97 aa 03                 a3 = a3 << 0x3
  2784: 95 19 98 02              a2 = sp + 0x298
  2788: c8 9a 0a                 a3 = a3 + a2
  2791: 82 aa                    a3 = u64 [a3]
  2793: 82 1b c8 00              a4 = u64 [sp + 0xc8]
  2797: 97 bb 03                 a4 = a4 << 0x3
  2800: c8 9b 0b                 a4 = a4 + a2
  2803: 82 bb                    a4 = u64 [a4]
  2805: c8 84 04                 t2 = t2 + a1
  2808: d3 64 06                 s1 = t2 ^ s1
  2811: c8 4a 0a                 a3 = a3 + t2
  2814: 7b 1a 68 01              u64 [sp + 0x168] = a3
  2818: c8 7b 0b                 a4 = a4 + a0
  2821: 82 18 08 01              a1 = u64 [sp + 0x108]
  2825: d3 58 07                 a0 = a1 ^ s0
  2828: 9e 7c 3f                 a5 = a0 >>r 0x3f
  2831: 82 1a c0 00              a3 = u64 [sp + 0xc0]
  2835: 97 aa 03                 a3 = a3 << 0x3
  2838: c8 9a 0a                 a3 = a3 + a2
  2841: 82 aa                    a3 = u64 [a3]
  2843: 82 15 b8 00              s0 = u64 [sp + 0xb8]
  2847: 97 55 03                 s0 = s0 << 0x3
  2850: c8 95 05                 s0 = s0 + a2
  2853: 82 55                    s0 = u64 [s0]
  2855: c8 cb 0b                 a4 = a4 + a5
  2858: 82 17 48 01              a0 = u64 [sp + 0x148]
  2862: d3 b7 07                 a0 = a0 ^ a4
  2865: 7b 17 30 01              u64 [sp + 0x130] = a0
  2869: c8 ba 0a                 a3 = a3 + a4
  2872: 7b 1a 48 01              u64 [sp + 0x148] = a3
  2876: c8 53 03                 t1 = t1 + s0
  2879: 82 1a 50 01              a3 = u64 [sp + 0x150]
  2883: 82 17 10 01              a0 = u64 [sp + 0x110]
  2887: d3 a7 0b                 a4 = a0 ^ a3
  2890: 82 15 a8 00              s0 = u64 [sp + 0xa8]
  2894: 97 55 03                 s0 = s0 << 0x3
  2897: c8 95 05                 s0 = s0 + a2
  2900: 82 55                    s0 = u64 [s0]
  2902: 9e bb 3f                 a4 = a4 >>r 0x3f
  2905: c8 b3 03                 t1 = t1 + a4
  2908: d3 03 04                 t2 = t1 ^ ra
  2911: c8 53 03                 t1 = t1 + s0
  2914: 82 19 20 01              a2 = u64 [sp + 0x120]
  2918: 9e 95 20                 s0 = a2 >>r 0x20
  2921: c8 25 09                 a2 = s0 + t0
  2924: 82 1a 28 01              a3 = u64 [sp + 0x128]
  2928: d3 a9 00                 ra = a2 ^ a3
  2931: 9e 00 18                 ra = ra >>r 0x18
  2934: 82 1a 58 01              a3 = u64 [sp + 0x158]
  2938: c8 0a 0a                 a3 = a3 + ra
  2941: 7b 1a 18 01              u64 [sp + 0x118] = a3
  2945: d3 a5 05                 s0 = s0 ^ a3
  2948: 9e 5a 10                 a3 = s0 >>r 0x10
  2951: 7b 1a 50 01              u64 [sp + 0x150] = a3
  2955: c8 a9 09                 a2 = a2 + a3
  2958: 7b 19 60 01              u64 [sp + 0x160] = a2
  2962: d3 09 09                 a2 = a2 ^ ra
  2965: 9e 90 3f                 ra = a2 >>r 0x3f
  2968: 9e 69 20                 a2 = s1 >>r 0x20
  2971: c8 89 05                 s0 = a2 + a1
  2974: 82 16 40 01              s1 = u64 [sp + 0x140]
  2978: d3 56 06                 s1 = s1 ^ s0
  2981: 9e 66 18                 s1 = s1 >>r 0x18
  2984: 82 18 68 01              a1 = u64 [sp + 0x168]
  2988: c8 68 08                 a1 = a1 + s1
  2991: 7b 18 28 01              u64 [sp + 0x128] = a1
  2995: d3 89 09                 a2 = a2 ^ a1
  2998: 9e 99 10                 a2 = a2 >>r 0x10
  3001: 7b 19 20 01              u64 [sp + 0x120] = a2
  3005: c8 59 09                 a2 = a2 + s0
  3008: 7b 19 58 01              u64 [sp + 0x158] = a2
  3012: d3 69 09                 a2 = a2 ^ s1
  3015: 82 16 b0 00              s1 = u64 [sp + 0xb0]
  3019: 9e 9a 3f                 a3 = a2 >>r 0x3f
  3022: 82 18 30 01              a1 = u64 [sp + 0x130]
  3026: 9e 89 20                 a2 = a1 >>r 0x20
  3029: c8 79 08                 a1 = a2 + a0
  3032: d3 c8 07                 a0 = a1 ^ a5
  3035: 9e 77 18                 a0 = a0 >>r 0x18
  3038: 82 12 48 01              t0 = u64 [sp + 0x148]
  3042: c8 72 02                 t0 = t0 + a0
  3045: 7b 12 40 01              u64 [sp + 0x140] = t0
  3049: d3 92 09                 a2 = t0 ^ a2
  3052: 9e 99 10                 a2 = a2 >>r 0x10
  3055: 7b 19 30 01              u64 [sp + 0x130] = a2
  3059: c8 98 08                 a1 = a1 + a2
  3062: 7b 18 48 01              u64 [sp + 0x148] = a1
  3066: d3 87 07                 a0 = a0 ^ a1
  3069: 9e 72 3f                 t0 = a0 >>r 0x3f
  3072: 9e 47 20                 a0 = t2 >>r 0x20
  3075: 82 18 38 01              a1 = u64 [sp + 0x138]
  3079: c8 78 08                 a1 = a1 + a0
  3082: d3 8b 0b                 a4 = a4 ^ a1
  3085: 9e b9 18                 a2 = a4 >>r 0x18
  3088: c8 93 03                 t1 = t1 + a2
  3091: d3 73 07                 a0 = t1 ^ a0
  3094: 9e 7b 10                 a4 = a0 >>r 0x10
  3097: 7b 1b 38 01              u64 [sp + 0x138] = a4
  3101: c8 8b 0b                 a4 = a4 + a1
  3104: d3 9b 07                 a0 = a4 ^ a2
  3107: 9e 7c 3f                 a5 = a0 >>r 0x3f
  3110: 82 15 00 01              s0 = u64 [sp + 0x100]
  3114: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  3117: 95 66 10                 s1 = s1 + 0x10
  3120: 52 05 45 fc              jump @152 if s0 != 0
      :                          @169
  3124: 33 07                    a0 = 0
  3126: 82 18 48                 a1 = u64 [sp + 0x48]
  3129: 82 19 18 01              a2 = u64 [sp + 0x118]
  3133: d3 98 08                 a1 = a1 ^ a2
  3136: 82 19 48 01              a2 = u64 [sp + 0x148]
  3140: d3 98 08                 a1 = a1 ^ a2
  3143: 7b 18 b8 01              u64 [sp + 0x1b8] = a1
  3147: 82 18 50                 a1 = u64 [sp + 0x50]
  3150: 82 19 28 01              a2 = u64 [sp + 0x128]
  3154: d3 98 08                 a1 = a1 ^ a2
  3157: d3 b8 08                 a1 = a1 ^ a4
  3160: 7b 18 c0 01              u64 [sp + 0x1c0] = a1
  3164: 82 18 58                 a1 = u64 [sp + 0x58]
  3167: 82 19 60 01              a2 = u64 [sp + 0x160]
  3171: d3 98 08                 a1 = a1 ^ a2
  3174: 82 19 40 01              a2 = u64 [sp + 0x140]
  3178: d3 98 08                 a1 = a1 ^ a2
  3181: 7b 18 c8 01              u64 [sp + 0x1c8] = a1
  3185: 82 18 60                 a1 = u64 [sp + 0x60]
  3188: 82 19 58 01              a2 = u64 [sp + 0x158]
  3192: d3 98 08                 a1 = a1 ^ a2
  3195: d3 38 08                 a1 = a1 ^ t1
  3198: 7b 18 d0 01              u64 [sp + 0x1d0] = a1
  3202: 82 18 68                 a1 = u64 [sp + 0x68]
  3205: 82 19 20 01              a2 = u64 [sp + 0x120]
  3209: d3 98 08                 a1 = a1 ^ a2
  3212: d3 c8 08                 a1 = a1 ^ a5
  3215: 7b 18 d8 01              u64 [sp + 0x1d8] = a1
  3219: 82 18 70                 a1 = u64 [sp + 0x70]
  3222: d3 80 08                 a1 = ra ^ a1
  3225: 82 19 30 01              a2 = u64 [sp + 0x130]
  3229: d3 98 08                 a1 = a1 ^ a2
  3232: 7b 18 e0 01              u64 [sp + 0x1e0] = a1
  3236: 82 18 78                 a1 = u64 [sp + 0x78]
  3239: d3 a8 08                 a1 = a1 ^ a3
  3242: 82 19 38 01              a2 = u64 [sp + 0x138]
  3246: d3 98 08                 a1 = a1 ^ a2
  3249: 7b 18 e8 01              u64 [sp + 0x1e8] = a1
  3253: 82 18 80 00              a1 = u64 [sp + 0x80]
  3257: 82 19 50 01              a2 = u64 [sp + 0x150]
  3261: d3 98 08                 a1 = a1 ^ a2
  3264: d3 28 08                 a1 = a1 ^ t0
  3267: 7b 18 f0 01              u64 [sp + 0x1f0] = a1
  3271: 49 21 88 02              u64 [sp + 648] = 0
  3275: 82 1a 98 00              a3 = u64 [sp + 0x98]
  3279: 82 1c 88 00              a5 = u64 [sp + 0x88]
  3283: c9 ca 08                 a1 = a3 - a5
  3286: 33 09 80 00              a2 = 0x80
  3290: e6 98 06                 s1 = minu(a1, a2)
  3293: 01                       fallthrough
      :                          @170
  3294: c8 c6 05                 s0 = s1 + a5
  3297: ac 65 28 01              jump @212 if s0 <u s1
      :                          @171
  3301: ac 5a 25 01              jump @213 if a3 <u s0
      :                          @172
  3305: 95 18 08 02              a1 = sp + 0x208
  3309: c8 87 07                 a0 = a0 + a1
  3312: 82 18 90 00              a1 = u64 [sp + 0x90]
  3316: c8 c8 08                 a1 = a1 + a5
  3319: 64 69                    a2 = s1
  3321: 50 10 28 04 07           ra = 40, jump @359
      :                          @173 [@dyn 20]
  3326: 82 17 88 02              a0 = u64 [sp + 0x288]
  3330: c8 67 07                 a0 = a0 + s1
  3333: 7b 17 88 02              u64 [sp + 0x288] = a0
  3337: 64 5c                    a5 = s0
  3339: 82 1a 98 00              a3 = u64 [sp + 0x98]
  3343: ac a5 75 fa              jump @143 if s0 <u a3
      :                          @174
  3347: 7c 18 90 02              a1 = u8 [sp + 0x290]
  3351: 52 08 97 00              jump @196 if a1 != 0
      :                          @175
  3355: 82 18 f8 01              a1 = u64 [sp + 0x1f8]
  3359: 85 79 ff                 a2 = a0 ^ 0xffffffffffffffff
  3362: ae 89 0f                 jump @177 if a2 >=u a1
      :                          @176
  3365: 82 18 00 02              a1 = u64 [sp + 0x200]
  3369: 95 88 01                 a1 = a1 + 0x1
  3372: 7b 18 00 02              u64 [sp + 0x200] = a1
  3376: 01                       fallthrough
      :                          @177
  3377: 55 27 81 00 de 00        jump @218 if a0 >=u 129
      :                          @178
  3383: 33 08 63 01 01           a1 = 0x10163
  3388: 33 09 0c                 a2 = 0xc
  3391: 33 0a 0f                 a3 = 0xf
  3394: 33 0b 10                 a4 = 0x10
  3397: 01                       fallthrough
      :                          @179
  3398: 7c 87 f9                 a0 = u8 [a1 + 0xfffffffffffffff9]
  3401: ac 7a 70                 jump @198 if a3 <u a0
      :                          @180
  3404: 7c 87 fa                 a0 = u8 [a1 + 0xfffffffffffffffa]
  3407: ae b7 6a                 jump @198 if a0 >=u a4
      :                          @181
  3410: 7c 87 fb                 a0 = u8 [a1 + 0xfffffffffffffffb]
  3413: ae b7 64                 jump @198 if a0 >=u a4
      :                          @182
  3416: 7c 87 fc                 a0 = u8 [a1 + 0xfffffffffffffffc]
  3419: ae b7 5e                 jump @198 if a0 >=u a4
      :                          @183
  3422: 7c 87 fd                 a0 = u8 [a1 + 0xfffffffffffffffd]
  3425: ae b7 58                 jump @198 if a0 >=u a4
      :                          @184
  3428: 7c 87 fe                 a0 = u8 [a1 + 0xfffffffffffffffe]
  3431: ae b7 52                 jump @198 if a0 >=u a4
      :                          @185
  3434: 7c 87 ff                 a0 = u8 [a1 + 0xffffffffffffffff]
  3437: ae b7 4c                 jump @198 if a0 >=u a4
      :                          @186
  3440: 7c 87                    a0 = u8 [a1]
  3442: ae b7 47                 jump @198 if a0 >=u a4
      :                          @187
  3445: 7c 87 01                 a0 = u8 [a1 + 0x1]
  3448: ae b7 41                 jump @198 if a0 >=u a4
      :                          @188
  3451: 7c 87 02                 a0 = u8 [a1 + 0x2]
  3454: ae b7 3b                 jump @198 if a0 >=u a4
      :                          @189
  3457: 7c 87 03                 a0 = u8 [a1 + 0x3]
  3460: ae b7 35                 jump @198 if a0 >=u a4
      :                          @190
  3463: 7c 87 04                 a0 = u8 [a1 + 0x4]
  3466: ae b7 2f                 jump @198 if a0 >=u a4
      :                          @191
  3469: 7c 87 05                 a0 = u8 [a1 + 0x5]
  3472: ae b7 29                 jump @198 if a0 >=u a4
      :                          @192
  3475: 7c 87 06                 a0 = u8 [a1 + 0x6]
  3478: ae b7 23                 jump @198 if a0 >=u a4
      :                          @193
  3481: 7c 87 07                 a0 = u8 [a1 + 0x7]
  3484: ae b7 1d                 jump @198 if a0 >=u a4
      :                          @194
  3487: 7c 87 08                 a0 = u8 [a1 + 0x8]
  3490: ae b7 17                 jump @198 if a0 >=u a4
      :                          @195
  3493: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  3496: 95 88 10                 a1 = a1 + 0x10
  3499: 52 09 9b                 jump @179 if a2 != 0
      :                          @196
  3502: 95 17 b8 01              a0 = sp + 0x1b8
  3506: 33 08 20                 a1 = 0x20
  3509: 28 b5 f6                 jump @102
      :                          @197
  3512: 00                       trap
      :                          @198
  3513: 00                       trap
      :                          @199
  3514: 49 21 b8 01              u64 [sp + 440] = 0
  3518: 49 21 c0 01 01           u64 [sp + 448] = 0x1
  3523: 49 21 c8 01              u64 [sp + 456] = 0
  3527: 01                       fallthrough
      :                          @200
  3528: 95 17 b8 01              a0 = sp + 0x1b8
  3532: 33 09 20                 a2 = 0x20
  3535: 33 08                    a1 = 0
  3537: 50 10 2a cd f4           ra = 42, jump @57
      :                          @201 [@dyn 21]
  3542: 82 15 c8 01              s0 = u64 [sp + 0x1c8]
  3546: 82 18 c0 01              a1 = u64 [sp + 0x1c0]
  3550: 82 16 b8 01              s1 = u64 [sp + 0x1b8]
  3554: 28 00 f7                 jump @112
      :                          @202
  3557: 95 17 b8 01              a0 = sp + 0x1b8
  3561: 64 95                    s0 = a2
  3563: 50 10 2c b3 f4           ra = 44, jump @57
      :                          @203 [@dyn 22]
  3568: 64 59                    a2 = s0
  3570: 82 18 c8 01              a1 = u64 [sp + 0x1c8]
  3574: 82 15 c0 01              s0 = u64 [sp + 0x1c0]
  3578: 82 16 b8 01              s1 = u64 [sp + 0x1b8]
  3582: 28 1d f7                 jump @115
      :                          @204
  3585: 00                       trap
      :                          @205
  3586: 00                       trap
      :                          @206
  3587: 00                       trap
      :                          @207
  3588: 00                       trap
      :                          @208
  3589: 00                       trap
      :                          @209
  3590: 00                       trap
      :                          @210
  3591: 00                       trap
      :                          @211
  3592: 00                       trap
      :                          @212
  3593: 00                       trap
      :                          @213
  3594: 00                       trap
      :                          @214
  3595: 00                       trap
      :                          @215
  3596: 00                       trap
      :                          @216
  3597: 00                       trap
      :                          @217
  3598: 00                       trap
      :                          @218
  3599: 00                       trap
      :                          @219 [export #1: 'accumulate']
  3600: 51 08 2a 01              jump @251 if a1 == 0
      :                          @220
  3604: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3607: 7b 10 18                 u64 [sp + 0x18] = ra
  3610: 7b 15 10                 u64 [sp + 0x10] = s0
  3613: 7b 16 08                 u64 [sp + 0x8] = s1
  3616: 64 85                    s0 = a1
  3618: 7d 78                    a1 = i8 [a0]
  3620: 33 06 01                 s1 = 0x1
  3623: 59 08 37                 jump @227 if a1 >=s 0
      :                          @221
  3626: 84 89 ff 00              a2 = a1 & 0xff
  3630: 33 06 02                 s1 = 0x2
  3633: 53 29 c0 00 2d           jump @227 if a2 <u 192
      :                          @222
  3638: 33 06 03                 s1 = 0x3
  3641: 53 29 e0 00 25           jump @227 if a2 <u 224
      :                          @223
  3646: 33 06 04                 s1 = 0x4
  3649: 53 29 f0 00 1d           jump @227 if a2 <u 240
      :                          @224
  3654: 33 06 05                 s1 = 0x5
  3657: 53 29 f8 00 15           jump @227 if a2 <u 248
      :                          @225
  3662: 33 06 06                 s1 = 0x6
  3665: 53 29 fc 00 0d           jump @227 if a2 <u 252
      :                          @226
  3670: 88 98 fe 00              a1 = a2 <u 0xfe
  3674: 9a 86 08                 s1 = 0x8 - a1
  3677: 01                       fallthrough
      :                          @227
  3678: ac 65 c7 00              jump @250 if s0 <u s1
      :                          @228
  3682: 64 68                    a1 = s1
  3684: 7b 17                    u64 [sp] = a0
  3686: 50 10 2e d3 0f           ra = 46, jump @561
      :                          @229 [@dyn 23]
  3691: 82 17                    a0 = u64 [sp]
  3693: aa 65 b8 00              jump @250 if s0 == s1
      :                          @230
  3697: c8 67 07                 a0 = a0 + s1
  3700: 7d 78                    a1 = i8 [a0]
  3702: c9 65 0a                 a3 = s0 - s1
  3705: 33 05 01                 s0 = 0x1
  3708: 59 08 37                 jump @237 if a1 >=s 0
      :                          @231
  3711: 84 89 ff 00              a2 = a1 & 0xff
  3715: 33 05 02                 s0 = 0x2
  3718: 53 29 c0 00 2d           jump @237 if a2 <u 192
      :                          @232
  3723: 33 05 03                 s0 = 0x3
  3726: 53 29 e0 00 25           jump @237 if a2 <u 224
      :                          @233
  3731: 33 05 04                 s0 = 0x4
  3734: 53 29 f0 00 1d           jump @237 if a2 <u 240
      :                          @234
  3739: 33 05 05                 s0 = 0x5
  3742: 53 29 f8 00 15           jump @237 if a2 <u 248
      :                          @235
  3747: 33 05 06                 s0 = 0x6
  3750: 53 29 fc 00 0d           jump @237 if a2 <u 252
      :                          @236
  3755: 88 98 fe 00              a1 = a2 <u 0xfe
  3759: 9a 85 08                 s0 = 0x8 - a1
  3762: 01                       fallthrough
      :                          @237
  3763: ac 5a 72                 jump @250 if a3 <u s0
      :                          @238
  3766: 64 58                    a1 = s0
  3768: 7b 1a                    u64 [sp] = a3
  3770: 64 76                    s1 = a0
  3772: 50 10 30 7d 0f           ra = 48, jump @561
      :                          @239 [@dyn 24]
  3777: c8 65 07                 a0 = s0 + s1
  3780: 82 16                    s1 = u64 [sp]
  3782: ab 56 0b                 jump @241 if s1 != s0
      :                          @240
  3785: 33 08                    a1 = 0
  3787: 33 00 32                 ra = 0x32
  3790: 28 6b 0f                 jump @561
      :                          @241
  3793: 7d 79                    a2 = i8 [a0]
  3795: c9 56 06                 s1 = s1 - s0
  3798: 33 08 01                 a1 = 0x1
  3801: 59 09 44                 jump @248 if a2 >=s 0
      :                          @242
  3804: 84 99 ff 00              a2 = a2 & 0xff
  3808: 33 0a c0 00              a3 = 0xc0
  3812: 33 08 02                 a1 = 0x2
  3815: ac a9 36                 jump @248 if a2 <u a3
      :                          @243
  3818: 33 0a e0 00              a3 = 0xe0
  3822: 33 08 03                 a1 = 0x3
  3825: ac a9 2c                 jump @248 if a2 <u a3
      :                          @244
  3828: 33 0a f0 00              a3 = 0xf0
  3832: 33 08 04                 a1 = 0x4
  3835: ac a9 22                 jump @248 if a2 <u a3
      :                          @245
  3838: 33 0a f8 00              a3 = 0xf8
  3842: 33 08 05                 a1 = 0x5
  3845: ac a9 18                 jump @248 if a2 <u a3
      :                          @246
  3848: 33 0a fc 00              a3 = 0xfc
  3852: 33 08 06                 a1 = 0x6
  3855: ac a9 0e                 jump @248 if a2 <u a3
      :                          @247
  3858: 88 98 fe 00              a1 = a2 <u 0xfe
  3862: 33 09 08                 a2 = 0x8
  3865: c9 89 08                 a1 = a2 - a1
  3868: 01                       fallthrough
      :                          @248
  3869: ac 86 08                 jump @250 if s1 <u a1
      :                          @249
  3872: 50 10 32 19 0f           ra = 50, jump @561
      :                          @250 [@dyn 25]
  3877: 82 10 18                 ra = u64 [sp + 0x18]
  3880: 82 15 10                 s0 = u64 [sp + 0x10]
  3883: 82 16 08                 s1 = u64 [sp + 0x8]
  3886: 95 11 20                 sp = sp + 0x20
  3889: 33 07 00 00 01           a0 = 0x10000
  3894: 33 08                    a1 = 0
  3896: 32 00                    ret
      :                          @251
  3898: 33 07 00 00 01           a0 = 0x10000
  3903: 33 08                    a1 = 0
  3905: 32 00                    ret
      :                          @252 [export #2: 'on_transfer']
  3907: 33 07 00 00 01           a0 = 0x10000
  3912: 33 08                    a1 = 0
  3914: 32 00                    ret
      :                          @253
  3916: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  3919: 7b 10 40                 u64 [sp + 0x40] = ra
  3922: 7b 15 38                 u64 [sp + 0x38] = s0
  3925: 7b 16 30                 u64 [sp + 0x30] = s1
  3928: c8 89 09                 a2 = a2 + a1
  3931: ac 89 52                 jump @261 if a2 <u a1
      :                          @254
  3934: 64 75                    s0 = a0
  3936: 82 77                    a0 = u64 [a0]
  3938: 97 78 01                 a1 = a0 << 0x1
  3941: 33 0a 08                 a3 = 0x8
  3944: e4 a9 09                 a2 = maxu(a2, a3)
  3947: e4 98 06                 s1 = maxu(a1, a2)
  3950: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  3953: 98 88 3f                 a1 = a1 >> 0x3f
  3956: 51 07 12                 jump @256 if a0 == 0
      :                          @255
  3959: 82 59 08                 a2 = u64 [s0 + 0x8]
  3962: 7b 19 18                 u64 [sp + 0x18] = a2
  3965: 49 11 20 01              u64 [sp + 32] = 0x1
  3969: 7b 17 28                 u64 [sp + 0x28] = a0
  3972: 28 06                    jump @257
      :                          @256
  3974: 49 11 20                 u64 [sp + 32] = 0
  3977: 01                       fallthrough
      :                          @257
  3978: 64 17                    a0 = sp
  3980: 95 1a 18                 a3 = sp + 0x18
  3983: 64 69                    a2 = s1
  3985: 50 10 34 32              ra = 52, jump @265
      :                          @258 [@dyn 26]
  3989: 82 18                    a1 = u64 [sp]
  3991: 82 17 08                 a0 = u64 [sp + 0x8]
  3994: 51 08 14                 jump @262 if a1 == 0
      :                          @259
  3997: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  4007: aa 87 0d                 jump @263 if a0 == a1
      :                          @260
  4010: 52 07 18                 jump @264 if a0 != 0
      :                          @261
  4013: 00                       trap
      :                          @262
  4014: 7b 57 08                 u64 [s0 + 0x8] = a0
  4017: 7b 56                    u64 [s0] = s1
  4019: 01                       fallthrough
      :                          @263
  4020: 82 10 40                 ra = u64 [sp + 0x40]
  4023: 82 15 38                 s0 = u64 [sp + 0x38]
  4026: 82 16 30                 s1 = u64 [sp + 0x30]
  4029: 95 11 48                 sp = sp + 0x48
  4032: 32 00                    ret
      :                          @264
  4034: 00                       trap
      :                          @265
  4035: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  4038: 7b 10 30                 u64 [sp + 0x30] = ra
  4041: 7b 15 28                 u64 [sp + 0x28] = s0
  4044: 7b 16 20                 u64 [sp + 0x20] = s1
  4047: 64 95                    s0 = a2
  4049: 64 72                    t0 = a0
  4051: 51 08 79                 jump @275 if a1 == 0
      :                          @266
  4054: 82 a7 08                 a0 = u64 [a3 + 0x8]
  4057: 51 07 7c                 jump @276 if a0 == 0
      :                          @267
  4060: 82 a9 10                 a2 = u64 [a3 + 0x10]
  4063: 51 09 aa 00              jump @283 if a2 == 0
      :                          @268
  4067: 82 a8                    a1 = u64 [a3]
  4069: 33 06 60 00 03           s1 = 0x30060
  4074: 33 03 00 00 01           t1 = 0x10000
  4079: c8 36 06                 s1 = s1 + t1
  4082: 01                       fallthrough
      :                          @269
  4083: 82 6a                    a3 = u64 [s1]
  4085: c8 5a 07                 a0 = a3 + s0
  4088: ac a7 cf 00              jump @289 if a0 <u a3
      :                          @270
  4092: 95 7b 01                 a4 = a0 + 0x1
  4095: 88 bc 01                 a5 = a4 <u 0x1
  4098: d8 b3 0b                 a4 = t1 <u a4
  4101: d4 cb 0b                 a4 = a4 | a5
  4104: 52 0b bf 00              jump @289 if a4 != 0
      :                          @271
  4108: 82 6b                    a4 = u64 [s1]
  4110: ab ab e5                 jump @269 if a4 != a3
      :                          @272
  4113: 7b 67                    u64 [s1] = a0
  4115: 33 0c                    a5 = 0
  4117: 7b 12 18                 u64 [sp + 0x18] = t0
  4120: 33 0a 60 00 03           a3 = 0x30060
  4125: 33 0b 00 00 01           a4 = 0x10000
  4130: 7b 1a                    u64 [sp] = a3
  4132: c8 ba 0a                 a3 = a3 + a4
  4135: c9 7a 07                 a0 = a3 - a0
  4138: 7b 17 10                 u64 [sp + 0x10] = a0
  4141: 7b 18 08                 u64 [sp + 0x8] = a1
  4144: 64 96                    s1 = a2
  4146: 50 10 36 cb 03           ra = 54, jump @359
      :                          @273 [@dyn 27]
  4151: 54 36 00 00 01 98 00     jump @290 if s1 <=u 65536
      :                          @274
  4158: 82 12 18                 t0 = u64 [sp + 0x18]
  4161: 82 18 10                 a1 = u64 [sp + 0x10]
  4164: 33 07                    a0 = 0
  4166: 7b 28 08                 u64 [t0 + 0x8] = a1
  4169: 28 b5 00                 jump @296
      :                          @275
  4172: 49 12 08                 u64 [t0 + 8] = 0
  4175: 33 07 01                 a0 = 0x1
  4178: 28 ac 00                 jump @296
      :                          @276
  4181: 33 09 60 00 03           a2 = 0x30060
  4186: 33 07 00 00 01           a0 = 0x10000
  4191: c8 79 09                 a2 = a2 + a0
  4194: 01                       fallthrough
      :                          @277
  4195: 82 9a                    a3 = u64 [a2]
  4197: c8 5a 08                 a1 = a3 + s0
  4200: ac a8 5f                 jump @289 if a1 <u a3
      :                          @278
  4203: 95 8b 01                 a4 = a1 + 0x1
  4206: 88 bc 01                 a5 = a4 <u 0x1
  4209: d8 b7 0b                 a4 = a0 <u a4
  4212: d4 cb 0b                 a4 = a4 | a5
  4215: 52 0b 50                 jump @289 if a4 != 0
      :                          @279
  4218: 82 9b                    a4 = u64 [a2]
  4220: ab ab e7                 jump @277 if a4 != a3
      :                          @280
  4223: 7b 98                    u64 [a2] = a1
  4225: 33 0c                    a5 = 0
  4227: 01                       fallthrough
      :                          @281
  4228: ab ab df                 jump @277 if a4 != a3
      :                          @282
  4231: 28 31                    jump @288
      :                          @283
  4233: 33 09 60 00 03           a2 = 0x30060
  4238: 33 07 00 00 01           a0 = 0x10000
  4243: c8 79 09                 a2 = a2 + a0
  4246: 01                       fallthrough
      :                          @284
  4247: 82 9a                    a3 = u64 [a2]
  4249: c8 5a 08                 a1 = a3 + s0
  4252: ac a8 2b                 jump @289 if a1 <u a3
      :                          @285
  4255: 95 8b 01                 a4 = a1 + 0x1
  4258: 88 bc 01                 a5 = a4 <u 0x1
  4261: d8 b7 0b                 a4 = a0 <u a4
  4264: d4 cb 0b                 a4 = a4 | a5
  4267: 52 0b 1c                 jump @289 if a4 != 0
      :                          @286
  4270: 82 9b                    a4 = u64 [a2]
  4272: ab ab e7                 jump @284 if a4 != a3
      :                          @287
  4275: 7b 98                    u64 [a2] = a1
  4277: 33 0c                    a5 = 0
  4279: 01                       fallthrough
      :                          @288
  4280: 33 07 60 00 04           a0 = 0x40060
  4285: c9 87 08                 a1 = a0 - a1
  4288: 33 07                    a0 = 0
  4290: 7b 28 08                 u64 [t0 + 0x8] = a1
  4293: 28 39                    jump @296
      :                          @289
  4295: 33 07 01                 a0 = 0x1
  4298: 7b 27 08                 u64 [t0 + 0x8] = a0
  4301: 28 31                    jump @296
      :                          @290
  4303: 64 6c                    a5 = s1
  4305: 82 17                    a0 = u64 [sp]
  4307: 95 77 00 00 01           a0 = a0 + 0x10000
  4312: 82 12 18                 t0 = u64 [sp + 0x18]
  4315: 82 16 08                 s1 = u64 [sp + 0x8]
  4318: 01                       fallthrough
      :                          @291
  4319: 82 78                    a1 = u64 [a0]
  4321: c9 87 09                 a2 = a0 - a1
  4324: ab 69 11                 jump @295 if a2 != s1
      :                          @292
  4327: c9 c8 09                 a2 = a1 - a5
  4330: 01                       fallthrough
      :                          @293
  4331: 82 7a                    a3 = u64 [a0]
  4333: ab 8a f2                 jump @291 if a3 != a1
      :                          @294
  4336: 7b 79                    u64 [a0] = a2
  4338: 33 0b                    a4 = 0
  4340: 01                       fallthrough
      :                          @295
  4341: 82 18 10                 a1 = u64 [sp + 0x10]
  4344: 33 07                    a0 = 0
  4346: 7b 28 08                 u64 [t0 + 0x8] = a1
  4349: 01                       fallthrough
      :                          @296
  4350: 7b 25 10                 u64 [t0 + 0x10] = s0
  4353: 7b 27                    u64 [t0] = a0
  4355: 82 10 30                 ra = u64 [sp + 0x30]
  4358: 82 15 28                 s0 = u64 [sp + 0x28]
  4361: 82 16 20                 s1 = u64 [sp + 0x20]
  4364: 95 11 38                 sp = sp + 0x38
  4367: 32 00                    ret
      :                          @297
  4369: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  4372: 7b 10 40                 u64 [sp + 0x40] = ra
  4375: 7b 15 38                 u64 [sp + 0x38] = s0
  4378: 7b 16 30                 u64 [sp + 0x30] = s1
  4381: 95 88 01                 a1 = a1 + 0x1
  4384: 51 08 53                 jump @305 if a1 == 0
      :                          @298
  4387: 64 75                    s0 = a0
  4389: 82 77                    a0 = u64 [a0]
  4391: 97 79 01                 a2 = a0 << 0x1
  4394: 33 0a 08                 a3 = 0x8
  4397: e4 a8 08                 a1 = maxu(a1, a3)
  4400: e4 89 06                 s1 = maxu(a2, a1)
  4403: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  4406: 98 88 3f                 a1 = a1 >> 0x3f
  4409: 51 07 12                 jump @300 if a0 == 0
      :                          @299
  4412: 82 59 08                 a2 = u64 [s0 + 0x8]
  4415: 7b 19 18                 u64 [sp + 0x18] = a2
  4418: 49 11 20 01              u64 [sp + 32] = 0x1
  4422: 7b 17 28                 u64 [sp + 0x28] = a0
  4425: 28 06                    jump @301
      :                          @300
  4427: 49 11 20                 u64 [sp + 32] = 0
  4430: 01                       fallthrough
      :                          @301
  4431: 64 17                    a0 = sp
  4433: 95 1a 18                 a3 = sp + 0x18
  4436: 64 69                    a2 = s1
  4438: 50 10 38 6d fe           ra = 56, jump @265
      :                          @302 [@dyn 28]
  4443: 82 18                    a1 = u64 [sp]
  4445: 82 17 08                 a0 = u64 [sp + 0x8]
  4448: 51 08 14                 jump @306 if a1 == 0
      :                          @303
  4451: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  4461: aa 87 0d                 jump @307 if a0 == a1
      :                          @304
  4464: 52 07 18                 jump @308 if a0 != 0
      :                          @305
  4467: 00                       trap
      :                          @306
  4468: 7b 57 08                 u64 [s0 + 0x8] = a0
  4471: 7b 56                    u64 [s0] = s1
  4473: 01                       fallthrough
      :                          @307
  4474: 82 10 40                 ra = u64 [sp + 0x40]
  4477: 82 15 38                 s0 = u64 [sp + 0x38]
  4480: 82 16 30                 s1 = u64 [sp + 0x30]
  4483: 95 11 48                 sp = sp + 0x48
  4486: 32 00                    ret
      :                          @308
  4488: 00                       trap
      :                          @309
  4489: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  4492: 7b 10 30                 u64 [sp + 0x30] = ra
  4495: 7b 15 28                 u64 [sp + 0x28] = s0
  4498: 7b 16 20                 u64 [sp + 0x20] = s1
  4501: 64 89                    a2 = a1
  4503: 82 8a 08                 a3 = u64 [a1 + 0x8]
  4506: 64 75                    s0 = a0
  4508: 51 0a 35                 jump @314 if a3 == 0
      :                          @310
  4511: 82 98                    a1 = u64 [a2]
  4513: 33 07                    a0 = 0
  4515: 95 8b 08                 a4 = a1 + 0x8
  4518: 01                       fallthrough
      :                          @311
  4519: 82 bc                    a5 = u64 [a4]
  4521: c8 c7 07                 a0 = a0 + a5
  4524: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  4527: 95 bb 10                 a4 = a4 + 0x10
  4530: 52 0a f5                 jump @311 if a3 != 0
      :                          @312
  4533: 82 9a 18                 a3 = u64 [a2 + 0x18]
  4536: 51 0a 24                 jump @316 if a3 == 0
      :                          @313
  4539: 82 88 08                 a1 = u64 [a1 + 0x8]
  4542: 8e 88                    a1 = a1 >u 0
  4544: 88 7a 10                 a3 = a0 <u 0x10
  4547: 85 aa 01                 a3 = a3 ^ 0x1
  4550: d4 a8 08                 a1 = a1 | a3
  4553: 89 7a                    a3 = a0 <s 0
  4555: e0 a8 08                 a1 = a1 & ~a3
  4558: 52 08 0a                 jump @315 if a1 != 0
      :                          @314
  4561: 33 07                    a0 = 0
  4563: 33 08 01                 a1 = 0x1
  4566: 28 4a                    jump @324
      :                          @315
  4568: 97 77 01                 a0 = a0 << 0x1
  4571: 01                       fallthrough
      :                          @316
  4572: 51 07 40                 jump @323 if a0 == 0
      :                          @317
  4575: 57 07 78                 jump @329 if a0 <s 0
      :                          @318
  4578: 64 52                    t0 = s0
  4580: 33 0b 60 00 03           a4 = 0x30060
  4585: 33 08 00 00 01           a1 = 0x10000
  4590: c8 8b 0b                 a4 = a4 + a1
  4593: 01                       fallthrough
      :                          @319
  4594: 82 bc                    a5 = u64 [a4]
  4596: c8 7c 0a                 a3 = a5 + a0
  4599: ac ca 5e                 jump @327 if a3 <u a5
      :                          @320
  4602: 95 a5 01                 s0 = a3 + 0x1
  4605: 88 56 01                 s1 = s0 <u 0x1
  4608: d8 58 05                 s0 = a1 <u s0
  4611: d4 65 05                 s0 = s0 | s1
  4614: 52 05 4f                 jump @327 if s0 != 0
      :                          @321
  4617: 82 b6                    s1 = u64 [a4]
  4619: ab c6 e7                 jump @319 if s1 != a5
      :                          @322
  4622: 7b ba                    u64 [a4] = a3
  4624: 33 08 60 00 04           a1 = 0x40060
  4629: c9 a8 08                 a1 = a1 - a3
  4632: 64 25                    s0 = t0
  4634: 28 06                    jump @324
      :                          @323
  4636: 33 08 01                 a1 = 0x1
  4639: 01                       fallthrough
      :                          @324
  4640: 7b 17                    u64 [sp] = a0
  4642: 7b 18 08                 u64 [sp + 0x8] = a1
  4645: 49 11 10                 u64 [sp + 16] = 0
  4648: 33 08 20 00 01           a1 = 0x10020
  4653: 64 17                    a0 = sp
  4655: 50 10 3a 6c 06           ra = 58, jump @452
      :                          @325 [@dyn 29]
  4660: 52 07 22                 jump @328 if a0 != 0
      :                          @326
  4663: 82 17 10                 a0 = u64 [sp + 0x10]
  4666: 82 18 08                 a1 = u64 [sp + 0x8]
  4669: 82 19                    a2 = u64 [sp]
  4671: 7b 57 10                 u64 [s0 + 0x10] = a0
  4674: 7b 58 08                 u64 [s0 + 0x8] = a1
  4677: 7b 59                    u64 [s0] = a2
  4679: 82 10 30                 ra = u64 [sp + 0x30]
  4682: 82 15 28                 s0 = u64 [sp + 0x28]
  4685: 82 16 20                 s1 = u64 [sp + 0x20]
  4688: 95 11 38                 sp = sp + 0x38
  4691: 32 00                    ret
      :                          @327
  4693: 00                       trap
      :                          @328
  4694: 00                       trap
      :                          @329
  4695: 00                       trap
      :                          @330 [@dyn 30]
  4696: 82 72                    t0 = u64 [a0]
  4698: 33 09 00 00 ff           a2 = 0xffffffffffff0000
  4703: 95 2a ff ff fe           a3 = t0 + 0xfffffffffffeffff
  4708: ac 9a 28                 jump @336 if a3 <u a2
      :                          @331
  4711: 82 77 08                 a0 = u64 [a0 + 0x8]
  4714: 33 09 60 00 03           a2 = 0x30060
  4719: 95 99 00 00 01           a2 = a2 + 0x10000
  4724: 01                       fallthrough
      :                          @332
  4725: 82 9a                    a3 = u64 [a2]
  4727: c9 a9 0b                 a4 = a2 - a3
  4730: ab 7b 12                 jump @336 if a4 != a0
      :                          @333
  4733: c9 2a 0b                 a4 = a3 - t0
  4736: 01                       fallthrough
      :                          @334
  4737: 82 9c                    a5 = u64 [a2]
  4739: ab ac f2                 jump @332 if a5 != a3
      :                          @335
  4742: 7b 9b                    u64 [a2] = a4
  4744: 33 08                    a1 = 0
  4746: 32 00                    ret
      :                          @336
  4748: 32 00                    ret
      :                          @337 [@dyn 31]
  4750: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  4753: 7b 10 18                 u64 [sp + 0x18] = ra
  4756: 7b 15 10                 u64 [sp + 0x10] = s0
  4759: 7b 16 08                 u64 [sp + 0x8] = s1
  4762: 64 75                    s0 = a0
  4764: 82 7a 10                 a3 = u64 [a0 + 0x10]
  4767: 82 77                    a0 = u64 [a0]
  4769: c9 a7 07                 a0 = a0 - a3
  4772: 64 96                    s1 = a2
  4774: ac 97 2a                 jump @340 if a0 <u a2
      :                          @338
  4777: 7b 1a                    u64 [sp] = a3
  4779: 82 57 08                 a0 = u64 [s0 + 0x8]
  4782: c8 a7 07                 a0 = a0 + a3
  4785: 64 69                    a2 = s1
  4787: 50 10 40 4a 01           ra = 64, jump @359
      :                          @339 [@dyn 32]
  4792: 82 17                    a0 = u64 [sp]
  4794: c8 76 06                 s1 = s1 + a0
  4797: 7b 56 10                 u64 [s0 + 0x10] = s1
  4800: 33 07                    a0 = 0
  4802: 82 10 18                 ra = u64 [sp + 0x18]
  4805: 82 15 10                 s0 = u64 [sp + 0x10]
  4808: 82 16 08                 s1 = u64 [sp + 0x8]
  4811: 95 11 20                 sp = sp + 0x20
  4814: 32 00                    ret
      :                          @340
  4816: 64 57                    a0 = s0
  4818: 7b 18                    u64 [sp] = a1
  4820: 64 a8                    a1 = a3
  4822: 64 69                    a2 = s1
  4824: 50 10 42 74 fc           ra = 66, jump @253
      :                          @341 [@dyn 33]
  4829: 82 18                    a1 = u64 [sp]
  4831: 82 5a 10                 a3 = u64 [s0 + 0x10]
  4834: 28 c7                    jump @338
      :                          @342 [@dyn 34]
  4836: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  4839: 7b 10 20                 u64 [sp + 0x20] = ra
  4842: 7b 15 18                 u64 [sp + 0x18] = s0
  4845: 7b 16 10                 u64 [sp + 0x10] = s1
  4848: 64 86                    s1 = a1
  4850: 83 88                    i32 a1 = a1 + 0
  4852: 33 09 80 00              a2 = 0x80
  4856: 64 7a                    a3 = a0
  4858: ae 98 2b                 jump @347 if a1 >=u a2
      :                          @343
  4861: 82 a8 10                 a1 = u64 [a3 + 0x10]
  4864: 82 a7                    a0 = u64 [a3]
  4866: ab 78 12                 jump @346 if a1 != a0
      :                          @344
  4869: 64 a7                    a0 = a3
  4871: 64 a5                    s0 = a3
  4873: 50 10 46 08 fe           ra = 70, jump @297
      :                          @345 [@dyn 35]
  4878: 64 5a                    a3 = s0
  4880: 82 58 10                 a1 = u64 [s0 + 0x10]
  4883: 01                       fallthrough
      :                          @346
  4884: 82 a7 08                 a0 = u64 [a3 + 0x8]
  4887: c8 87 07                 a0 = a0 + a1
  4890: 78 76                    u8 [a0] = s1
  4892: 95 88 01                 a1 = a1 + 0x1
  4895: 7b a8 10                 u64 [a3 + 0x10] = a1
  4898: 28 ab 00                 jump @355
      :                          @347
  4901: 8b 67 0b                 i32 a0 = s1 >> 0xb
  4904: 48 11 0c                 u32 [sp + 12] = 0
  4907: 52 07 1c                 jump @349 if a0 != 0
      :                          @348
  4910: 98 67 06                 a0 = s1 >> 0x6
  4913: 86 77 c0 00              a0 = a0 | 0xc0
  4917: 78 17 0c                 u8 [sp + 0xc] = a0
  4920: 84 67 3f                 a0 = s1 & 0x3f
  4923: 86 77 80 00              a0 = a0 | 0x80
  4927: 78 17 0d                 u8 [sp + 0xd] = a0
  4930: 33 06 02                 s1 = 0x2
  4933: 28 63                    jump @352
      :                          @349
  4935: 8b 67 10                 i32 a0 = s1 >> 0x10
  4938: 52 07 29                 jump @351 if a0 != 0
      :                          @350
  4941: 98 67 0c                 a0 = s1 >> 0xc
  4944: 86 77 e0 00              a0 = a0 | 0xe0
  4948: 78 17 0c                 u8 [sp + 0xc] = a0
  4951: 97 67 34                 a0 = s1 << 0x34
  4954: 98 77 3a                 a0 = a0 >> 0x3a
  4957: 95 77 80 00              a0 = a0 + 0x80
  4961: 78 17 0d                 u8 [sp + 0xd] = a0
  4964: 84 67 3f                 a0 = s1 & 0x3f
  4967: 86 77 80 00              a0 = a0 | 0x80
  4971: 78 17 0e                 u8 [sp + 0xe] = a0
  4974: 33 06 03                 s1 = 0x3
  4977: 28 37                    jump @352
      :                          @351
  4979: 97 67 2b                 a0 = s1 << 0x2b
  4982: 98 77 3d                 a0 = a0 >> 0x3d
  4985: 95 77 f0 00              a0 = a0 + 0xf0
  4989: 78 17 0c                 u8 [sp + 0xc] = a0
  4992: 97 67 2e                 a0 = s1 << 0x2e
  4995: 98 77 3a                 a0 = a0 >> 0x3a
  4998: 95 77 80 00              a0 = a0 + 0x80
  5002: 78 17 0d                 u8 [sp + 0xd] = a0
  5005: 97 67 34                 a0 = s1 << 0x34
  5008: 98 77 3a                 a0 = a0 >> 0x3a
  5011: 95 77 80 00              a0 = a0 + 0x80
  5015: 78 17 0e                 u8 [sp + 0xe] = a0
  5018: 84 67 3f                 a0 = s1 & 0x3f
  5021: 86 77 80 00              a0 = a0 | 0x80
  5025: 78 17 0f                 u8 [sp + 0xf] = a0
  5028: 33 06 04                 s1 = 0x4
  5031: 01                       fallthrough
      :                          @352
  5032: 82 a5 10                 s0 = u64 [a3 + 0x10]
  5035: 82 a7                    a0 = u64 [a3]
  5037: c9 57 07                 a0 = a0 - s0
  5040: ac 67 2d                 jump @356 if a0 <u s1
      :                          @353
  5043: 7b 1a                    u64 [sp] = a3
  5045: 82 a7 08                 a0 = u64 [a3 + 0x8]
  5048: c8 57 07                 a0 = a0 + s0
  5051: 95 18 0c                 a1 = sp + 0xc
  5054: 64 69                    a2 = s1
  5056: 50 10 48 3d              ra = 72, jump @359
      :                          @354 [@dyn 36]
  5060: c8 56 06                 s1 = s1 + s0
  5063: 82 17                    a0 = u64 [sp]
  5065: 7b 76 10                 u64 [a0 + 0x10] = s1
  5068: 01                       fallthrough
      :                          @355
  5069: 33 07                    a0 = 0
  5071: 82 10 20                 ra = u64 [sp + 0x20]
  5074: 82 15 18                 s0 = u64 [sp + 0x18]
  5077: 82 16 10                 s1 = u64 [sp + 0x10]
  5080: 95 11 28                 sp = sp + 0x28
  5083: 32 00                    ret
      :                          @356
  5085: 64 a7                    a0 = a3
  5087: 64 58                    a1 = s0
  5089: 64 69                    a2 = s1
  5091: 64 a5                    s0 = a3
  5093: 50 10 4a 67 fb           ra = 74, jump @253
      :                          @357 [@dyn 37]
  5098: 64 5a                    a3 = s0
  5100: 82 55 10                 s0 = u64 [s0 + 0x10]
  5103: 28 c4                    jump @353
      :                          @358 [@dyn 38]
  5105: 64 8a                    a3 = a1
  5107: 33 08 20 00 01           a1 = 0x10020
  5112: 64 a9                    a2 = a3
  5114: 28 a1 04                 jump @452
      :                          @359
  5117: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  5120: 7b 10 18                 u64 [sp + 0x18] = ra
  5123: 7b 15 10                 u64 [sp + 0x10] = s0
  5126: 7b 16 08                 u64 [sp + 0x8] = s1
  5129: 53 19 10 64              jump @368 if a2 <u 16
      :                          @360
  5133: 8d 7a                    i32 a3 = -a0
  5135: 84 a2 07                 t0 = a3 & 0x7
  5138: c8 27 0b                 a4 = a0 + t0
  5141: 51 02 15                 jump @363 if t0 == 0
      :                          @361
  5144: 64 8c                    a5 = a1
  5146: 64 75                    s0 = a0
  5148: 01                       fallthrough
      :                          @362
  5149: 7c ca                    a3 = u8 [a5]
  5151: 78 5a                    u8 [s0] = a3
  5153: 95 55 01                 s0 = s0 + 0x1
  5156: 95 cc 01                 a5 = a5 + 0x1
  5159: ac b5 f6                 jump @362 if s0 <u a4
      :                          @363
  5162: c8 28 03                 t1 = a1 + t0
  5165: c9 29 02                 t0 = a2 - t0
  5168: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  5171: 84 38 07                 a1 = t1 & 0x7
  5174: c8 4b 0a                 a3 = a4 + t2
  5177: 51 08 3b                 jump @370 if a1 == 0
      :                          @364
  5180: 58 04 4b                 jump @373 if t2 <=s 0
      :                          @365
  5183: 97 38 03                 a1 = t1 << 0x3
  5186: 84 80 38                 ra = a1 & 0x38
  5189: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  5192: 82 c5                    s0 = u64 [a5]
  5194: 8d 88                    i32 a1 = -a1
  5196: 84 88 38                 a1 = a1 & 0x38
  5199: 95 cc 08                 a5 = a5 + 0x8
  5202: 01                       fallthrough
      :                          @366
  5203: 82 c6                    s1 = u64 [a5]
  5205: d0 05 05                 s0 = s0 >> ra
  5208: cf 86 09                 a2 = s1 << a1
  5211: d4 59 09                 a2 = a2 | s0
  5214: 7b b9                    u64 [a4] = a2
  5216: 95 bb 08                 a4 = a4 + 0x8
  5219: 95 cc 08                 a5 = a5 + 0x8
  5222: 64 65                    s0 = s1
  5224: ac ab eb                 jump @366 if a4 <u a3
      :                          @367
  5227: 28 1c                    jump @373
      :                          @368
  5229: 64 7a                    a3 = a0
  5231: 52 09 21                 jump @374 if a2 != 0
      :                          @369
  5234: 28 2f                    jump @376
      :                          @370
  5236: 58 04 13                 jump @373 if t2 <=s 0
      :                          @371
  5239: 64 38                    a1 = t1
  5241: 01                       fallthrough
      :                          @372
  5242: 82 89                    a2 = u64 [a1]
  5244: 7b b9                    u64 [a4] = a2
  5246: 95 bb 08                 a4 = a4 + 0x8
  5249: 95 88 08                 a1 = a1 + 0x8
  5252: ac ab f6                 jump @372 if a4 <u a3
      :                          @373
  5255: c8 43 08                 a1 = t1 + t2
  5258: 84 29 07                 a2 = t0 & 0x7
  5261: 51 09 14                 jump @376 if a2 == 0
      :                          @374
  5264: c8 a9 09                 a2 = a2 + a3
  5267: 01                       fallthrough
      :                          @375
  5268: 7c 8b                    a4 = u8 [a1]
  5270: 78 ab                    u8 [a3] = a4
  5272: 95 aa 01                 a3 = a3 + 0x1
  5275: 95 88 01                 a1 = a1 + 0x1
  5278: ac 9a f6                 jump @375 if a3 <u a2
      :                          @376
  5281: 82 10 18                 ra = u64 [sp + 0x18]
  5284: 82 15 10                 s0 = u64 [sp + 0x10]
  5287: 82 16 08                 s1 = u64 [sp + 0x8]
  5290: 95 11 20                 sp = sp + 0x20
  5293: 32 00                    ret
      :                          @377
  5295: 8d 7a                    i32 a3 = -a0
  5297: 84 aa 07                 a3 = a3 & 0x7
  5300: c8 a7 0b                 a4 = a0 + a3
  5303: 51 0a 0e                 jump @380 if a3 == 0
      :                          @378
  5306: 64 7c                    a5 = a0
  5308: 01                       fallthrough
      :                          @379
  5309: 78 c8                    u8 [a5] = a1
  5311: 95 cc 01                 a5 = a5 + 0x1
  5314: ac bc fb                 jump @379 if a5 <u a4
      :                          @380
  5317: c9 a9 03                 t1 = a2 - a3
  5320: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  5323: c8 cb 0a                 a3 = a4 + a5
  5326: 58 0c 1d                 jump @383 if a5 <=s 0
      :                          @381
  5329: 84 82 ff 00              t0 = a1 & 0xff
  5333: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  5343: ca 92 0c                 a5 = t0 * a2
  5346: 01                       fallthrough
      :                          @382
  5347: 7b bc                    u64 [a4] = a5
  5349: 95 bb 08                 a4 = a4 + 0x8
  5352: ac ab fb                 jump @382 if a4 <u a3
      :                          @383
  5355: 84 39 07                 a2 = t1 & 0x7
  5358: 52 09 05                 jump @385 if a2 != 0
      :                          @384
  5361: 28 0e                    jump @387
      :                          @385
  5363: c8 a9 09                 a2 = a2 + a3
  5366: 01                       fallthrough
      :                          @386
  5367: 78 a8                    u8 [a3] = a1
  5369: 95 aa 01                 a3 = a3 + 0x1
  5372: ac 9a fb                 jump @386 if a3 <u a2
      :                          @387
  5375: 32 00                    ret
      :                          @388 [@dyn 39]
  5377: 82 77                    a0 = u64 [a0]
  5379: 01                       fallthrough
      :                          @389
  5380: 28                       jump @389
      :                          @390
  5381: 95 11 a8                 sp = sp + 0xffffffffffffffa8
  5384: 7b 10 50                 u64 [sp + 0x50] = ra
  5387: 7b 15 48                 u64 [sp + 0x48] = s0
  5390: 7b 16 40                 u64 [sp + 0x40] = s1
  5393: 7b 18                    u64 [sp] = a1
  5395: 98 79 04                 a2 = a0 >> 0x4
  5398: 33 08 27                 a1 = 0x27
  5401: 53 29 71 02 81 00        jump @393 if a2 <u 625
      :                          @391
  5407: 33 08 27                 a1 = 0x27
  5410: 95 1a 3e                 a3 = sp + 0x3e
  5413: 3a 09 48 00 03           a2 = u64 [0x30048]
  5418: 7b 19 10                 u64 [sp + 0x10] = a2
  5421: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
  5427: 33 04 7b 14              t2 = 0x147b
  5431: 33 0b 94 00 01           a4 = 0x10094
  5436: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
  5442: 01                       fallthrough
      :                          @392
  5443: 64 72                    t0 = a0
  5445: 82 17 10                 a0 = u64 [sp + 0x10]
  5448: d6 72 07                 a0 = t0 mulhu a0
  5451: 98 77 0b                 a0 = a0 >> 0xb
  5454: 82 19 08                 a2 = u64 [sp + 0x8]
  5457: c0 97 0c                 i32 a5 = a0 * a2
  5460: c8 2c 06                 s1 = a5 + t0
  5463: 97 6c 30                 a5 = s1 << 0x30
  5466: 98 cc 32                 a5 = a5 >> 0x32
  5469: ca 4c 0c                 a5 = a5 * t2
  5472: 98 c3 11                 t1 = a5 >> 0x11
  5475: 98 cc 10                 a5 = a5 >> 0x10
  5478: 84 cc fe 07              a5 = a5 & 0x7fe
  5482: 96 39 9c                 a2 = t1 * 0xffffffffffffff9c
  5485: c8 69 09                 a2 = a2 + s1
  5488: 97 99 31                 a2 = a2 << 0x31
  5491: 98 99 30                 a2 = a2 >> 0x30
  5494: c8 bc 0c                 a5 = a5 + a4
  5497: 7c c6                    s1 = u8 [a5]
  5499: 7c cc 01                 a5 = u8 [a5 + 0x1]
  5502: c8 b9 09                 a2 = a2 + a4
  5505: 7c 95 01                 s0 = u8 [a2 + 0x1]
  5508: 7c 99                    a2 = u8 [a2]
  5510: 78 ac ff                 u8 [a3 + 0xffffffffffffffff] = a5
  5513: 78 a6 fe                 u8 [a3 + 0xfffffffffffffffe] = s1
  5516: 78 a5 01                 u8 [a3 + 0x1] = s0
  5519: 78 a9                    u8 [a3] = a2
  5521: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
  5524: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
  5527: ac 20 ac                 jump @392 if ra <u t0
      :                          @393
  5530: 54 17 63 3b              jump @395 if a0 <=u 99
      :                          @394
  5534: 97 79 30                 a2 = a0 << 0x30
  5537: 98 99 32                 a2 = a2 >> 0x32
  5540: 96 99 7b 14              a2 = a2 * 0x147b
  5544: 98 99 11                 a2 = a2 >> 0x11
  5547: 96 9a 9c                 a3 = a2 * 0xffffffffffffff9c
  5550: c8 a7 07                 a0 = a0 + a3
  5553: 97 77 31                 a0 = a0 << 0x31
  5556: 98 77 30                 a0 = a0 >> 0x30
  5559: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  5562: 33 0a 94 00 01           a3 = 0x10094
  5567: c8 a7 07                 a0 = a0 + a3
  5570: 7c 7a 01                 a3 = u8 [a0 + 0x1]
  5573: 7c 77                    a0 = u8 [a0]
  5575: 95 1b 19                 a4 = sp + 0x19
  5578: c8 8b 0b                 a4 = a4 + a1
  5581: 78 ba 01                 u8 [a4 + 0x1] = a3
  5584: 78 b7                    u8 [a4] = a0
  5586: 64 97                    a0 = a2
  5588: 01                       fallthrough
      :                          @395
  5589: 55 17 0a 14              jump @397 if a0 >=u 10
      :                          @396
  5593: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  5596: 95 19 19                 a2 = sp + 0x19
  5599: c8 89 09                 a2 = a2 + a1
  5602: 83 77 30                 i32 a0 = a0 + 0x30
  5605: 78 97                    u8 [a2] = a0
  5607: 28 21                    jump @398
      :                          @397
  5609: 97 77 01                 a0 = a0 << 0x1
  5612: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  5615: 33 09 94 00 01           a2 = 0x10094
  5620: c8 97 07                 a0 = a0 + a2
  5623: 7c 79 01                 a2 = u8 [a0 + 0x1]
  5626: 7c 77                    a0 = u8 [a0]
  5628: 95 1a 19                 a3 = sp + 0x19
  5631: c8 8a 0a                 a3 = a3 + a1
  5634: 78 a9 01                 u8 [a3 + 0x1] = a2
  5637: 78 a7                    u8 [a3] = a0
  5639: 01                       fallthrough
      :                          @398
  5640: 95 1a 19                 a3 = sp + 0x19
  5643: c8 8a 0a                 a3 = a3 + a1
  5646: 9a 8b 27                 a4 = 0x27 - a1
  5649: 33 08 50 00 01           a1 = 0x10050
  5654: 82 17                    a0 = u64 [sp]
  5656: 33 09                    a2 = 0
  5658: 50 10 50 12              ra = 80, jump @400
      :                          @399 [@dyn 40]
  5662: 82 10 50                 ra = u64 [sp + 0x50]
  5665: 82 15 48                 s0 = u64 [sp + 0x48]
  5668: 82 16 40                 s1 = u64 [sp + 0x40]
  5671: 95 11 58                 sp = sp + 0x58
  5674: 32 00                    ret
      :                          @400
  5676: 95 11 98                 sp = sp + 0xffffffffffffff98
  5679: 7b 10 60                 u64 [sp + 0x60] = ra
  5682: 7b 15 58                 u64 [sp + 0x58] = s0
  5685: 7b 16 50                 u64 [sp + 0x50] = s1
  5688: 80 73 34                 t1 = u32 [a0 + 0x34]
  5691: 7b 1a 20                 u64 [sp + 0x20] = a3
  5694: 64 9c                    a5 = a2
  5696: 84 36 01                 s1 = t1 & 0x1
  5699: 33 02 2b                 t0 = 0x2b
  5702: 33 09 00 00 11           a2 = 0x110000
  5707: 84 3a 04                 a3 = t1 & 0x4
  5710: 7b 1b 28                 u64 [sp + 0x28] = a4
  5713: c8 b6 04                 t2 = s1 + a4
  5716: 7b 1c 30                 u64 [sp + 0x30] = a5
  5719: 52 0a 10                 jump @403 if a3 != 0
      :                          @401
  5722: 49 11 38                 u64 [sp + 56] = 0
  5725: 82 78                    a1 = u64 [a0]
  5727: 94 69 2b                 a2 = 0x2b if s1 != 0
  5730: 52 08 35                 jump @407 if a1 != 0
      :                          @402
  5733: 28 56                    jump @412
      :                          @403
  5735: 7b 18 38                 u64 [sp + 0x38] = a1
  5738: 33 09                    a2 = 0
  5740: 51 0c 1b                 jump @406 if a5 == 0
      :                          @404
  5743: 82 1b 38                 a4 = u64 [sp + 0x38]
  5746: 01                       fallthrough
      :                          @405
  5747: 7d b5                    s0 = i8 [a4]
  5749: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
  5752: 85 5a 01                 a3 = s0 ^ 0x1
  5755: c8 a9 09                 a2 = a2 + a3
  5758: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  5761: 95 bb 01                 a4 = a4 + 0x1
  5764: 52 0c ef                 jump @405 if a5 != 0
      :                          @406
  5767: c8 94 04                 t2 = t2 + a2
  5770: 33 09 00 00 11           a2 = 0x110000
  5775: 82 78                    a1 = u64 [a0]
  5777: db 62 09                 a2 = t0 if s1 != 0
  5780: 51 08 27                 jump @412 if a1 == 0
      :                          @407
  5783: 82 7a 08                 a3 = u64 [a0 + 0x8]
  5786: ae a4 21                 jump @412 if t2 >=u a3
      :                          @408
  5789: 84 38 08                 a1 = t1 & 0x8
  5792: 52 08 50                 jump @415 if a1 != 0
      :                          @409
  5795: 7c 76 38                 s1 = u8 [a0 + 0x38]
  5798: c9 4a 0a                 a3 = a3 - t2
  5801: 7b 19 18                 u64 [sp + 0x18] = a2
  5804: 5a 16 01 9d 00           jump @422 if s1 >s 1
      :                          @410
  5809: 52 06 aa 00              jump @424 if s1 != 0
      :                          @411
  5813: 7b 1a 10                 u64 [sp + 0x10] = a3
  5816: 28 a9 00                 jump @425
      :                          @412
  5819: 82 75 20                 s0 = u64 [a0 + 0x20]
  5822: 82 76 28                 s1 = u64 [a0 + 0x28]
  5825: 64 57                    a0 = s0
  5827: 64 68                    a1 = s1
  5829: 82 1a 38                 a3 = u64 [sp + 0x38]
  5832: 82 1b 30                 a4 = u64 [sp + 0x30]
  5835: 50 10 52 6c 01           ra = 82, jump @445
      :                          @413 [@dyn 41]
  5840: 33 08 01                 a1 = 0x1
  5843: 52 07 bb 00              jump @430 if a0 != 0
      :                          @414
  5847: 82 6c 18                 a5 = u64 [s1 + 0x18]
  5850: 64 57                    a0 = s0
  5852: 82 18 20                 a1 = u64 [sp + 0x20]
  5855: 82 19 28                 a2 = u64 [sp + 0x28]
  5858: 82 10 60                 ra = u64 [sp + 0x60]
  5861: 82 15 58                 s0 = u64 [sp + 0x58]
  5864: 82 16 50                 s1 = u64 [sp + 0x50]
  5867: 95 11 68                 sp = sp + 0x68
  5870: 32 0c                    jump [a5]
      :                          @415
  5872: 7b 1a 40                 u64 [sp + 0x40] = a3
  5875: 64 45                    s0 = t2
  5877: 81 78 30                 a1 = i32 [a0 + 0x30]
  5880: 7b 18 10                 u64 [sp + 0x10] = a1
  5883: 7c 7a 38                 a3 = u8 [a0 + 0x38]
  5886: 7b 1a 08                 u64 [sp + 0x8] = a3
  5889: 82 7a 20                 a3 = u64 [a0 + 0x20]
  5892: 82 78 28                 a1 = u64 [a0 + 0x28]
  5895: 48 17 30 30              u32 [a0 + 48] = 0x30
  5899: 7b 17                    u64 [sp] = a0
  5901: 46 17 38 01              u8 [a0 + 56] = 0x1
  5905: 7b 1a 48                 u64 [sp + 0x48] = a3
  5908: 64 a7                    a0 = a3
  5910: 64 86                    s1 = a1
  5912: 82 1a 38                 a3 = u64 [sp + 0x38]
  5915: 82 1b 30                 a4 = u64 [sp + 0x30]
  5918: 50 10 54 19 01           ra = 84, jump @445
      :                          @416 [@dyn 42]
  5923: 52 07 67                 jump @429 if a0 != 0
      :                          @417
  5926: 82 17 40                 a0 = u64 [sp + 0x40]
  5929: c9 57 05                 s0 = a0 - s0
  5932: 95 55 01                 s0 = s0 + 0x1
  5935: 01                       fallthrough
      :                          @418
  5936: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  5939: 51 05 c6 00              jump @440 if s0 == 0
      :                          @419
  5943: 82 69 20                 a2 = u64 [s1 + 0x20]
  5946: 33 08 30                 a1 = 0x30
  5949: 82 17 48                 a0 = u64 [sp + 0x48]
  5952: b4 90 01 56              ra = 86, jump [a2]
      :                          @420 [@dyn 43]
  5956: 51 07 ec                 jump @418 if a0 == 0
      :                          @421
  5959: 28 43                    jump @429
      :                          @422
  5961: 52 16 02 12              jump @424 if s1 != 2
      :                          @423
  5965: 98 a6 01                 s1 = a3 >> 0x1
  5968: 95 a8 01                 a1 = a3 + 0x1
  5971: 98 88 01                 a1 = a1 >> 0x1
  5974: 7b 18 10                 u64 [sp + 0x10] = a1
  5977: 28 08                    jump @425
      :                          @424
  5979: 64 a6                    s1 = a3
  5981: 49 11 10                 u64 [sp + 16] = 0
  5984: 01                       fallthrough
      :                          @425
  5985: 82 78 20                 a1 = u64 [a0 + 0x20]
  5988: 7b 18 48                 u64 [sp + 0x48] = a1
  5991: 82 75 28                 s0 = u64 [a0 + 0x28]
  5994: 81 77 30                 a0 = i32 [a0 + 0x30]
  5997: 7b 17 40                 u64 [sp + 0x40] = a0
  6000: 95 66 01                 s1 = s1 + 0x1
  6003: 01                       fallthrough
      :                          @426
  6004: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  6007: 51 06 27                 jump @431 if s1 == 0
      :                          @427
  6010: 82 59 20                 a2 = u64 [s0 + 0x20]
  6013: 82 17 48                 a0 = u64 [sp + 0x48]
  6016: 82 18 40                 a1 = u64 [sp + 0x40]
  6019: b4 90 01 58              ra = 88, jump [a2]
      :                          @428 [@dyn 44]
  6023: 51 07 ed                 jump @426 if a0 == 0
      :                          @429
  6026: 33 08 01                 a1 = 0x1
  6029: 01                       fallthrough
      :                          @430
  6030: 64 87                    a0 = a1
  6032: 82 10 60                 ra = u64 [sp + 0x60]
  6035: 82 15 58                 s0 = u64 [sp + 0x58]
  6038: 82 16 50                 s1 = u64 [sp + 0x50]
  6041: 95 11 68                 sp = sp + 0x68
  6044: 32 00                    ret
      :                          @431
  6046: 82 16 48                 s1 = u64 [sp + 0x48]
  6049: 64 67                    a0 = s1
  6051: 64 58                    a1 = s0
  6053: 82 19 18                 a2 = u64 [sp + 0x18]
  6056: 82 1a 38                 a3 = u64 [sp + 0x38]
  6059: 82 1b 30                 a4 = u64 [sp + 0x30]
  6062: 50 10 5a 89 00           ra = 90, jump @445
      :                          @432 [@dyn 45]
  6067: 33 08 01                 a1 = 0x1
  6070: 52 07 d8                 jump @430 if a0 != 0
      :                          @433
  6073: 82 5a 18                 a3 = u64 [s0 + 0x18]
  6076: 64 67                    a0 = s1
  6078: 82 18 20                 a1 = u64 [sp + 0x20]
  6081: 82 19 28                 a2 = u64 [sp + 0x28]
  6084: b4 a0 01 5c              ra = 92, jump [a3]
      :                          @434 [@dyn 46]
  6088: 33 08 01                 a1 = 0x1
  6091: 52 07 c3                 jump @430 if a0 != 0
      :                          @435
  6094: 82 17 10                 a0 = u64 [sp + 0x10]
  6097: 9a 77                    a0 = -a0
  6099: 7b 17 38                 u64 [sp + 0x38] = a0
  6102: 33 06 ff                 s1 = 0xffffffffffffffff
  6105: 01                       fallthrough
      :                          @436
  6106: 82 17 38                 a0 = u64 [sp + 0x38]
  6109: c8 67 07                 a0 = a0 + s1
  6112: 51 17 ff 42              jump @443 if a0 == 4294967295
      :                          @437
  6116: 82 59 20                 a2 = u64 [s0 + 0x20]
  6119: 82 17 48                 a0 = u64 [sp + 0x48]
  6122: 82 18 40                 a1 = u64 [sp + 0x40]
  6125: b4 90 01 5e              ra = 94, jump [a2]
      :                          @438 [@dyn 47]
  6129: 95 66 01                 s1 = s1 + 0x1
  6132: 51 07 e6                 jump @436 if a0 == 0
      :                          @439
  6135: 28 37                    jump @444
      :                          @440
  6137: 82 6a 18                 a3 = u64 [s1 + 0x18]
  6140: 82 17 48                 a0 = u64 [sp + 0x48]
  6143: 82 18 20                 a1 = u64 [sp + 0x20]
  6146: 82 19 28                 a2 = u64 [sp + 0x28]
  6149: b4 a0 01 60              ra = 96, jump [a3]
      :                          @441 [@dyn 48]
  6153: 33 08 01                 a1 = 0x1
  6156: 52 07 82                 jump @430 if a0 != 0
      :                          @442
  6159: 33 08                    a1 = 0
  6161: 82 16                    s1 = u64 [sp]
  6163: 82 17 10                 a0 = u64 [sp + 0x10]
  6166: 7a 67 30                 u32 [s1 + 0x30] = a0
  6169: 82 17 08                 a0 = u64 [sp + 0x8]
  6172: 78 67 38                 u8 [s1 + 0x38] = a0
  6175: 28 6f ff                 jump @430
      :                          @443
  6178: 82 16 10                 s1 = u64 [sp + 0x10]
  6181: 82 17 10                 a0 = u64 [sp + 0x10]
  6184: d8 76 08                 a1 = s1 <u a0
  6187: 28 63 ff                 jump @430
      :                          @444
  6190: 82 17 10                 a0 = u64 [sp + 0x10]
  6193: d8 76 08                 a1 = s1 <u a0
  6196: 28 5a ff                 jump @430
      :                          @445
  6199: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  6202: 7b 10 20                 u64 [sp + 0x20] = ra
  6205: 7b 15 18                 u64 [sp + 0x18] = s0
  6208: 7b 16 10                 u64 [sp + 0x10] = s1
  6211: 83 9c                    i32 a5 = a2 + 0
  6213: 33 02 00 00 11           t0 = 0x110000
  6218: 64 a6                    s1 = a3
  6220: 64 85                    s0 = a1
  6222: 64 7a                    a3 = a0
  6224: aa 2c 20                 jump @448 if a5 == t0
      :                          @446
  6227: 82 5c 20                 a5 = u64 [s0 + 0x20]
  6230: 64 a7                    a0 = a3
  6232: 64 98                    a1 = a2
  6234: 7b 1b 08                 u64 [sp + 0x8] = a4
  6237: 7b 1a                    u64 [sp] = a3
  6239: b4 c0 01 62              ra = 98, jump [a5]
      :                          @447 [@dyn 49]
  6243: 82 1a                    a3 = u64 [sp]
  6245: 82 1b 08                 a4 = u64 [sp + 0x8]
  6248: 64 78                    a1 = a0
  6250: 33 07 01                 a0 = 0x1
  6253: 52 08 20                 jump @451 if a1 != 0
      :                          @448
  6256: 51 06 1a                 jump @450 if s1 == 0
      :                          @449
  6259: 82 5c 18                 a5 = u64 [s0 + 0x18]
  6262: 64 a7                    a0 = a3
  6264: 64 68                    a1 = s1
  6266: 64 b9                    a2 = a4
  6268: 82 10 20                 ra = u64 [sp + 0x20]
  6271: 82 15 18                 s0 = u64 [sp + 0x18]
  6274: 82 16 10                 s1 = u64 [sp + 0x10]
  6277: 95 11 28                 sp = sp + 0x28
  6280: 32 0c                    jump [a5]
      :                          @450
  6282: 33 07                    a0 = 0
  6284: 01                       fallthrough
      :                          @451
  6285: 82 10 20                 ra = u64 [sp + 0x20]
  6288: 82 15 18                 s0 = u64 [sp + 0x18]
  6291: 82 16 10                 s1 = u64 [sp + 0x10]
  6294: 95 11 28                 sp = sp + 0x28
  6297: 32 00                    ret
      :                          @452
  6299: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  6303: 7b 10 80 00              u64 [sp + 0x80] = ra
  6307: 7b 15 78                 u64 [sp + 0x78] = s0
  6310: 7b 16 70                 u64 [sp + 0x70] = s1
  6313: 49 11 60 20              u64 [sp + 96] = 0x20
  6317: 33 0a 03                 a3 = 0x3
  6320: 78 1a 68                 u8 [sp + 0x68] = a3
  6323: 82 96 20                 s1 = u64 [a2 + 0x20]
  6326: 49 11 30                 u64 [sp + 48] = 0
  6329: 49 11 40                 u64 [sp + 64] = 0
  6332: 7b 17 50                 u64 [sp + 0x50] = a0
  6335: 7b 18 58                 u64 [sp + 0x58] = a1
  6338: 51 06 07 01              jump @474 if s1 == 0
      :                          @453
  6342: 82 97 28                 a0 = u64 [a2 + 0x28]
  6345: 51 07 74 01              jump @484 if a0 == 0
      :                          @454
  6349: 49 11 28                 u64 [sp + 40] = 0
  6352: 82 95                    s0 = u64 [a2]
  6354: 7b 19 08                 u64 [sp + 0x8] = a2
  6357: 82 98 10                 a1 = u64 [a2 + 0x10]
  6360: 7b 18 18                 u64 [sp + 0x18] = a1
  6363: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  6366: 97 88 03                 a1 = a1 << 0x3
  6369: 98 88 03                 a1 = a1 >> 0x3
  6372: 95 88 01                 a1 = a1 + 0x1
  6375: 7b 18                    u64 [sp] = a1
  6377: 95 55 08                 s0 = s0 + 0x8
  6380: 96 78 38                 a1 = a0 * 0x38
  6383: 95 66 18                 s1 = s1 + 0x18
  6386: 33 07 4e                 a0 = 0x4e
  6389: 7b 17 10                 u64 [sp + 0x10] = a0
  6392: 01                       fallthrough
      :                          @455
  6393: 7b 18 20                 u64 [sp + 0x20] = a1
  6396: 82 59                    a2 = u64 [s0]
  6398: 51 09 17                 jump @458 if a2 == 0
      :                          @456
  6401: 82 1a 58                 a3 = u64 [sp + 0x58]
  6404: 82 17 50                 a0 = u64 [sp + 0x50]
  6407: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  6410: 82 aa 18                 a3 = u64 [a3 + 0x18]
  6413: b4 a0 01 64              ra = 100, jump [a3]
      :                          @457 [@dyn 50]
  6417: 52 07 51 01              jump @487 if a0 != 0
      :                          @458
  6421: 81 67 10                 a0 = i32 [s1 + 0x10]
  6424: 7a 17 60                 u32 [sp + 0x60] = a0
  6427: 7c 67 18                 a0 = u8 [s1 + 0x18]
  6430: 78 17 68                 u8 [sp + 0x68] = a0
  6433: 81 67 14                 a0 = i32 [s1 + 0x14]
  6436: 7a 17 64                 u32 [sp + 0x64] = a0
  6439: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  6442: 82 67                    a0 = u64 [s1]
  6444: 51 08 26                 jump @463 if a1 == 0
      :                          @459
  6447: 52 18 01 16              jump @461 if a1 != 1
      :                          @460
  6451: 97 77 04                 a0 = a0 << 0x4
  6454: 82 18 18                 a1 = u64 [sp + 0x18]
  6457: c8 87 07                 a0 = a0 + a1
  6460: 82 78 08                 a1 = u64 [a0 + 0x8]
  6463: 82 19 10                 a2 = u64 [sp + 0x10]
  6466: aa 98 07                 jump @462 if a1 == a2
      :                          @461
  6469: 33 08                    a1 = 0
  6471: 28 0f                    jump @464
      :                          @462
  6473: 82 77                    a0 = u64 [a0]
  6475: 82 77                    a0 = u64 [a0]
  6477: 33 08 01                 a1 = 0x1
  6480: 28 06                    jump @464
      :                          @463
  6482: 33 08 01                 a1 = 0x1
  6485: 01                       fallthrough
      :                          @464
  6486: 7b 18 30                 u64 [sp + 0x30] = a1
  6489: 7b 17 38                 u64 [sp + 0x38] = a0
  6492: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  6495: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  6498: 51 08 26                 jump @469 if a1 == 0
      :                          @465
  6501: 52 18 01 16              jump @467 if a1 != 1
      :                          @466
  6505: 97 77 04                 a0 = a0 << 0x4
  6508: 82 18 18                 a1 = u64 [sp + 0x18]
  6511: c8 87 07                 a0 = a0 + a1
  6514: 82 78 08                 a1 = u64 [a0 + 0x8]
  6517: 82 19 10                 a2 = u64 [sp + 0x10]
  6520: aa 98 07                 jump @468 if a1 == a2
      :                          @467
  6523: 33 08                    a1 = 0
  6525: 28 0f                    jump @470
      :                          @468
  6527: 82 77                    a0 = u64 [a0]
  6529: 82 77                    a0 = u64 [a0]
  6531: 33 08 01                 a1 = 0x1
  6534: 28 06                    jump @470
      :                          @469
  6536: 33 08 01                 a1 = 0x1
  6539: 01                       fallthrough
      :                          @470
  6540: 7b 18 40                 u64 [sp + 0x40] = a1
  6543: 7b 17 48                 u64 [sp + 0x48] = a0
  6546: 82 67 08                 a0 = u64 [s1 + 0x8]
  6549: 97 77 04                 a0 = a0 << 0x4
  6552: 82 18 18                 a1 = u64 [sp + 0x18]
  6555: c8 78 08                 a1 = a1 + a0
  6558: 82 87                    a0 = u64 [a1]
  6560: 82 89 08                 a2 = u64 [a1 + 0x8]
  6563: 95 18 30                 a1 = sp + 0x30
  6566: b4 90 01 66              ra = 102, jump [a2]
      :                          @471 [@dyn 51]
  6570: 52 07 b8 00              jump @487 if a0 != 0
      :                          @472
  6574: 95 55 10                 s0 = s0 + 0x10
  6577: 82 18 20                 a1 = u64 [sp + 0x20]
  6580: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  6583: 95 66 38                 s1 = s1 + 0x38
  6586: 82 17 28                 a0 = u64 [sp + 0x28]
  6589: 95 77 01                 a0 = a0 + 0x1
  6592: 7b 17 28                 u64 [sp + 0x28] = a0
  6595: 52 08 36 ff              jump @455 if a1 != 0
      :                          @473
  6599: 28 69                    jump @482
      :                          @474
  6601: 82 97 18                 a0 = u64 [a2 + 0x18]
  6604: 51 07 71                 jump @484 if a0 == 0
      :                          @475
  6607: 82 95 10                 s0 = u64 [a2 + 0x10]
  6610: 33 0a                    a3 = 0
  6612: 97 78 04                 a1 = a0 << 0x4
  6615: c8 58 08                 a1 = a1 + s0
  6618: 7b 18 20                 u64 [sp + 0x20] = a1
  6621: 7b 19 08                 u64 [sp + 0x8] = a2
  6624: 82 96                    s1 = u64 [a2]
  6626: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  6629: 97 77 04                 a0 = a0 << 0x4
  6632: 98 77 04                 a0 = a0 >> 0x4
  6635: 95 77 01                 a0 = a0 + 0x1
  6638: 7b 17                    u64 [sp] = a0
  6640: 95 66 08                 s1 = s1 + 0x8
  6643: 01                       fallthrough
      :                          @476
  6644: 7b 1a 28                 u64 [sp + 0x28] = a3
  6647: 82 69                    a2 = u64 [s1]
  6649: 51 09 16                 jump @479 if a2 == 0
      :                          @477
  6652: 82 1a 58                 a3 = u64 [sp + 0x58]
  6655: 82 17 50                 a0 = u64 [sp + 0x50]
  6658: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  6661: 82 aa 18                 a3 = u64 [a3 + 0x18]
  6664: b4 a0 01 68              ra = 104, jump [a3]
      :                          @478 [@dyn 52]
  6668: 52 07 56                 jump @487 if a0 != 0
      :                          @479
  6671: 82 57                    a0 = u64 [s0]
  6673: 82 59 08                 a2 = u64 [s0 + 0x8]
  6676: 95 18 30                 a1 = sp + 0x30
  6679: b4 90 01 6a              ra = 106, jump [a2]
      :                          @480 [@dyn 53]
  6683: 52 07 47                 jump @487 if a0 != 0
      :                          @481
  6686: 95 66 10                 s1 = s1 + 0x10
  6689: 95 55 10                 s0 = s0 + 0x10
  6692: 82 1a 28                 a3 = u64 [sp + 0x28]
  6695: 95 aa 01                 a3 = a3 + 0x1
  6698: 82 17 20                 a0 = u64 [sp + 0x20]
  6701: ab 75 c7                 jump @476 if s0 != a0
      :                          @482
  6704: 82 19 08                 a2 = u64 [sp + 0x8]
  6707: 82 1a                    a3 = u64 [sp]
  6709: 82 97 08                 a0 = u64 [a2 + 0x8]
  6712: ac 7a 0d                 jump @485 if a3 <u a0
      :                          @483
  6715: 28 2c                    jump @488
      :                          @484
  6717: 33 0a                    a3 = 0
  6719: 82 97 08                 a0 = u64 [a2 + 0x8]
  6722: 54 07 25                 jump @488 if a0 <=u 0
      :                          @485
  6725: 82 97                    a0 = u64 [a2]
  6727: 97 a8 04                 a1 = a3 << 0x4
  6730: c8 87 09                 a2 = a0 + a1
  6733: 82 1a 58                 a3 = u64 [sp + 0x58]
  6736: 82 17 50                 a0 = u64 [sp + 0x50]
  6739: 82 98                    a1 = u64 [a2]
  6741: 82 99 08                 a2 = u64 [a2 + 0x8]
  6744: 82 aa 18                 a3 = u64 [a3 + 0x18]
  6747: b4 a0 01 6c              ra = 108, jump [a3]
      :                          @486 [@dyn 54]
  6751: 51 07 08                 jump @488 if a0 == 0
      :                          @487
  6754: 33 07 01                 a0 = 0x1
  6757: 28 05                    jump @489
      :                          @488
  6759: 33 07                    a0 = 0
  6761: 01                       fallthrough
      :                          @489
  6762: 82 10 80 00              ra = u64 [sp + 0x80]
  6766: 82 15 78                 s0 = u64 [sp + 0x78]
  6769: 82 16 70                 s1 = u64 [sp + 0x70]
  6772: 95 11 88 00              sp = sp + 0x88
  6776: 32 00                    ret
      :                          @490 [@dyn 55]
  6778: 32 00                    ret
      :                          @491 [@dyn 56]
  6780: 95 11 80                 sp = sp + 0xffffffffffffff80
  6783: 7b 10 78                 u64 [sp + 0x78] = ra
  6786: 7b 15 70                 u64 [sp + 0x70] = s0
  6789: 7b 16 68                 u64 [sp + 0x68] = s1
  6792: 64 92                    t0 = a2
  6794: 33 00                    ra = 0
  6796: 33 0b                    a4 = 0
  6798: 33 05                    s0 = 0
  6800: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
  6810: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
  6816: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
  6826: 82 79 10                 a2 = u64 [a0 + 0x10]
  6829: 7b 19 48                 u64 [sp + 0x48] = a2
  6832: 82 79                    a2 = u64 [a0]
  6834: 7b 19 38                 u64 [sp + 0x38] = a2
  6837: 82 77 08                 a0 = u64 [a0 + 0x8]
  6840: 7b 17 30                 u64 [sp + 0x30] = a0
  6843: 33 07 88 00 01           a0 = 0x10088
  6848: 7b 17 08                 u64 [sp + 0x8] = a0
  6851: 3a 07 50 00 03           a0 = u64 [0x30050]
  6856: 7b 17 60                 u64 [sp + 0x60] = a0
  6859: 7b 18 58                 u64 [sp + 0x58] = a1
  6862: 95 88 08                 a1 = a1 + 0x8
  6865: 7b 18                    u64 [sp] = a1
  6867: 33 0c 0a                 a5 = 0xa
  6870: 7b 12 20                 u64 [sp + 0x20] = t0
  6873: 7b 13 18                 u64 [sp + 0x18] = t1
  6876: 7b 14 10                 u64 [sp + 0x10] = t2
  6879: 28 3a                    jump @495
      :                          @492
  6881: 64 06                    s1 = ra
  6883: c8 89 07                 a0 = a2 + a1
  6886: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
  6889: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  6892: 88 77 01                 a0 = a0 <u 0x1
  6895: 01                       fallthrough
      :                          @493
  6896: 82 1a 48                 a3 = u64 [sp + 0x48]
  6899: 78 a7                    u8 [a3] = a0
  6901: 82 17 30                 a0 = u64 [sp + 0x30]
  6904: 82 7a 18                 a3 = u64 [a0 + 0x18]
  6907: 82 17 38                 a0 = u64 [sp + 0x38]
  6910: b4 a0 01 72              ra = 114, jump [a3]
      :                          @494 [@dyn 57]
  6914: 64 5b                    a4 = s0
  6916: 82 12 20                 t0 = u64 [sp + 0x20]
  6919: 82 13 18                 t1 = u64 [sp + 0x18]
  6922: 82 14 10                 t2 = u64 [sp + 0x10]
  6925: 64 60                    ra = s1
  6927: 33 0c 0a                 a5 = 0xa
  6930: 82 15 40                 s0 = u64 [sp + 0x40]
  6933: 52 07 63 01              jump @536 if a0 != 0
      :                          @495
  6937: 84 57 ff 00              a0 = s0 & 0xff
  6941: 52 07 57 01              jump @535 if a0 != 0
      :                          @496
  6945: 7b 1b 50                 u64 [sp + 0x50] = a4
  6948: ae 02 0a                 jump @499 if t0 >=u ra
      :                          @497
  6951: 28 ef 00                 jump @526
      :                          @498
  6954: ac 02 ec 00              jump @526 if t0 <u ra
      :                          @499
  6958: c9 02 08                 a1 = t0 - ra
  6961: 82 16 58                 s1 = u64 [sp + 0x58]
  6964: c8 06 06                 s1 = s1 + ra
  6967: 55 18 10 1d              jump @505 if a1 >=u 16
      :                          @500
  6971: aa 02 d8 00              jump @525 if t0 == ra
      :                          @501
  6975: 33 0a                    a3 = 0
  6977: 01                       fallthrough
      :                          @502
  6978: c8 a6 07                 a0 = s1 + a3
  6981: 7c 77                    a0 = u8 [a0]
  6983: aa c7 a5 00              jump @520 if a0 == a5
      :                          @503
  6987: 95 aa 01                 a3 = a3 + 0x1
  6990: ab a8 f4                 jump @502 if a1 != a3
      :                          @504
  6993: 28 c2 00                 jump @525
      :                          @505
  6996: 95 69 07                 a2 = s1 + 0x7
  6999: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
  7002: c9 6a 07                 a0 = a3 - s1
  7005: d3 6a 0a                 a3 = a3 ^ s1
  7008: 88 aa 01                 a3 = a3 <u 0x1
  7011: 88 7b 01                 a4 = a0 <u 0x1
  7014: d4 ba 0a                 a3 = a3 | a4
  7017: 51 0a 45                 jump @511 if a3 == 0
      :                          @506
  7020: 33 07                    a0 = 0
  7022: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  7025: 82 1b                    a4 = u64 [sp]
  7027: c8 0b 0b                 a4 = a4 + ra
  7030: 28 08                    jump @508
      :                          @507
  7032: 82 1b                    a4 = u64 [sp]
  7034: c8 0b 0b                 a4 = a4 + ra
  7037: 01                       fallthrough
      :                          @508
  7038: c8 76 0c                 a5 = s1 + a0
  7041: 82 cc                    a5 = u64 [a5]
  7043: c8 7b 09                 a2 = a4 + a0
  7046: 82 99                    a2 = u64 [a2]
  7048: d3 4c 05                 s0 = a5 ^ t2
  7051: c8 35 05                 s0 = s0 + t1
  7054: e0 c5 0c                 a5 = s0 & ~a5
  7057: d3 49 05                 s0 = a2 ^ t2
  7060: c8 35 05                 s0 = s0 + t1
  7063: e0 95 09                 a2 = s0 & ~a2
  7066: d4 c9 09                 a2 = a2 | a5
  7069: 82 1c 60                 a5 = u64 [sp + 0x60]
  7072: d2 c9 09                 a2 = a2 & a5
  7075: 52 09 1f                 jump @514 if a2 != 0
      :                          @509
  7078: 95 77 10                 a0 = a0 + 0x10
  7081: ae 7a d5                 jump @508 if a3 >=u a0
      :                          @510
  7084: 28 16                    jump @514
      :                          @511
  7086: c8 a6 0b                 a4 = s1 + a3
  7089: 7c bb                    a4 = u8 [a4]
  7091: aa cb 51                 jump @523 if a4 == a5
      :                          @512
  7094: 95 aa 01                 a3 = a3 + 0x1
  7097: ab a7 f5                 jump @511 if a0 != a3
      :                          @513
  7100: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  7103: ae 7a b9                 jump @507 if a3 >=u a0
      :                          @514
  7106: aa 87 9a 00              jump @532 if a0 == a1
      :                          @515
  7110: 33 0a                    a3 = 0
  7112: c8 76 06                 s1 = s1 + a0
  7115: c9 72 08                 a1 = t0 - a0
  7118: c9 08 08                 a1 = a1 - ra
  7121: 33 0c 0a                 a5 = 0xa
  7124: 82 1b 50                 a4 = u64 [sp + 0x50]
  7127: 01                       fallthrough
      :                          @516
  7128: c8 a6 09                 a2 = s1 + a3
  7131: 7c 99                    a2 = u8 [a2]
  7133: aa c9 0b                 jump @519 if a2 == a5
      :                          @517
  7136: 95 aa 01                 a3 = a3 + 0x1
  7139: ab a8 f5                 jump @516 if a1 != a3
      :                          @518
  7142: 28 2d                    jump @525
      :                          @519
  7144: c8 7a 0a                 a3 = a3 + a0
  7147: 01                       fallthrough
      :                          @520
  7148: c8 0a 0a                 a3 = a3 + ra
  7151: 95 a0 01                 ra = a3 + 0x1
  7154: ae 2a 38 ff              jump @498 if a3 >=u t0
      :                          @521
  7158: 82 17 58                 a0 = u64 [sp + 0x58]
  7161: c8 7a 0a                 a3 = a3 + a0
  7164: 7c a7                    a0 = u8 [a3]
  7166: ab c7 2c ff              jump @498 if a0 != a5
      :                          @522
  7170: 28 61                    jump @533
      :                          @523
  7172: 82 1b 50                 a4 = u64 [sp + 0x50]
  7175: c8 0a 0a                 a3 = a3 + ra
  7178: 95 a0 01                 ra = a3 + 0x1
  7181: ac 2a e9                 jump @521 if a3 <u t0
      :                          @524
  7184: 28 1a ff                 jump @498
      :                          @525
  7187: 64 20                    ra = t0
  7189: 01                       fallthrough
      :                          @526
  7190: 49 11 40 01              u64 [sp + 64] = 0x1
  7194: 64 b5                    s0 = a4
  7196: 64 26                    s1 = t0
  7198: aa 2b 56                 jump @535 if a4 == t0
      :                          @527
  7201: 82 17 48                 a0 = u64 [sp + 0x48]
  7204: 7c 77                    a0 = u8 [a0]
  7206: 51 07 22                 jump @530 if a0 == 0
      :                          @528
  7209: 82 17 30                 a0 = u64 [sp + 0x30]
  7212: 82 7a 18                 a3 = u64 [a0 + 0x18]
  7215: 33 09 04                 a2 = 0x4
  7218: 82 17 38                 a0 = u64 [sp + 0x38]
  7221: 82 18 08                 a1 = u64 [sp + 0x8]
  7224: 7b 10 28                 u64 [sp + 0x28] = ra
  7227: b4 a0 01 74              ra = 116, jump [a3]
      :                          @529 [@dyn 58]
  7231: 82 1b 50                 a4 = u64 [sp + 0x50]
  7234: 82 10 28                 ra = u64 [sp + 0x28]
  7237: 52 07 33                 jump @536 if a0 != 0
      :                          @530
  7240: c9 b6 09                 a2 = s1 - a4
  7243: 82 18 58                 a1 = u64 [sp + 0x58]
  7246: c8 b8 08                 a1 = a1 + a4
  7249: ab b6 90 fe              jump @492 if s1 != a4
      :                          @531
  7253: 64 06                    s1 = ra
  7255: 33 07                    a0 = 0
  7257: 28 97 fe                 jump @493
      :                          @532
  7260: 64 20                    ra = t0
  7262: 82 1b 50                 a4 = u64 [sp + 0x50]
  7265: 28 b5                    jump @526
      :                          @533
  7267: 49 11 40                 u64 [sp + 64] = 0
  7270: 64 05                    s0 = ra
  7272: 64 06                    s1 = ra
  7274: 82 17 48                 a0 = u64 [sp + 0x48]
  7277: 7c 77                    a0 = u8 [a0]
  7279: 52 07 ba                 jump @528 if a0 != 0
      :                          @534
  7282: 28 d6                    jump @530
      :                          @535
  7284: 33 07                    a0 = 0
  7286: 28 06                    jump @537
      :                          @536
  7288: 33 07 01                 a0 = 0x1
  7291: 01                       fallthrough
      :                          @537
  7292: 82 10 78                 ra = u64 [sp + 0x78]
  7295: 82 15 70                 s0 = u64 [sp + 0x70]
  7298: 82 16 68                 s1 = u64 [sp + 0x68]
  7301: 95 11 80 00              sp = sp + 0x80
  7305: 32 00                    ret
      :                          @538 [@dyn 59]
  7307: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  7310: 7b 10 20                 u64 [sp + 0x20] = ra
  7313: 7b 15 18                 u64 [sp + 0x18] = s0
  7316: 7b 16 10                 u64 [sp + 0x10] = s1
  7319: 82 75 10                 s0 = u64 [a0 + 0x10]
  7322: 7c 59                    a2 = u8 [s0]
  7324: 82 7b                    a4 = u64 [a0]
  7326: 82 76 08                 s1 = u64 [a0 + 0x8]
  7329: 51 09 32                 jump @542 if a2 == 0
      :                          @539
  7332: 82 6a 18                 a3 = u64 [s1 + 0x18]
  7335: 7b 18 08                 u64 [sp + 0x8] = a1
  7338: 33 08 88 00 01           a1 = 0x10088
  7343: 33 09 04                 a2 = 0x4
  7346: 64 b7                    a0 = a4
  7348: 7b 1b                    u64 [sp] = a4
  7350: b4 a0 01 78              ra = 120, jump [a3]
      :                          @540 [@dyn 60]
  7354: 82 18 08                 a1 = u64 [sp + 0x8]
  7357: 82 1b                    a4 = u64 [sp]
  7359: 51 07 14                 jump @542 if a0 == 0
      :                          @541
  7362: 33 07 01                 a0 = 0x1
  7365: 82 10 20                 ra = u64 [sp + 0x20]
  7368: 82 15 18                 s0 = u64 [sp + 0x18]
  7371: 82 16 10                 s1 = u64 [sp + 0x10]
  7374: 95 11 28                 sp = sp + 0x28
  7377: 32 00                    ret
      :                          @542
  7379: 83 87                    i32 a0 = a1 + 0
  7381: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  7384: 88 77 01                 a0 = a0 <u 0x1
  7387: 78 57                    u8 [s0] = a0
  7389: 82 6c 20                 a5 = u64 [s1 + 0x20]
  7392: 64 b7                    a0 = a4
  7394: 82 10 20                 ra = u64 [sp + 0x20]
  7397: 82 15 18                 s0 = u64 [sp + 0x18]
  7400: 82 16 10                 s1 = u64 [sp + 0x10]
  7403: 95 11 28                 sp = sp + 0x28
  7406: 32 0c                    jump [a5]
      :                          @543 [@dyn 61]
  7408: 64 8a                    a3 = a1
  7410: 33 08 58 00 01           a1 = 0x10058
  7415: 64 a9                    a2 = a3
  7417: 28 a2 fb                 jump @452
      :                          @544
  7420: 95 11 70 ff              sp = sp + 0xffffffffffffff70
  7424: 7b 10 88 00              u64 [sp + 0x88] = ra
  7428: 7b 15 80 00              u64 [sp + 0x80] = s0
  7432: 7b 16 78                 u64 [sp + 0x78] = s1
  7435: 64 75                    s0 = a0
  7437: 7c 77 08                 a0 = u8 [a0 + 0x8]
  7440: 64 8b                    a4 = a1
  7442: 33 08 01                 a1 = 0x1
  7445: 33 06 01                 s1 = 0x1
  7448: 51 07 1d                 jump @546 if a0 == 0
      :                          @545
  7451: 78 56 08                 u8 [s0 + 0x8] = s1
  7454: 46 15 09 01              u8 [s0 + 9] = 0x1
  7458: 64 57                    a0 = s0
  7460: 82 10 88 00              ra = u64 [sp + 0x88]
  7464: 82 15 80 00              s0 = u64 [sp + 0x80]
  7468: 82 16 78                 s1 = u64 [sp + 0x78]
  7471: 95 11 90 00              sp = sp + 0x90
  7475: 32 00                    ret
      :                          @546
  7477: 64 9a                    a3 = a2
  7479: 82 5c                    a5 = u64 [s0]
  7481: 80 c7 34                 a0 = u32 [a5 + 0x34]
  7484: 7c 58 09                 a1 = u8 [s0 + 0x9]
  7487: 84 79 04                 a2 = a0 & 0x4
  7490: 52 09 43                 jump @552 if a2 != 0
      :                          @547
  7493: 51 08 31                 jump @550 if a1 == 0
      :                          @548
  7496: 82 c8 28                 a1 = u64 [a5 + 0x28]
  7499: 82 c7 20                 a0 = u64 [a5 + 0x20]
  7502: 82 83 18                 t1 = u64 [a1 + 0x18]
  7505: 33 08 8c 00 01           a1 = 0x1008c
  7510: 33 09 02                 a2 = 0x2
  7513: 64 a6                    s1 = a3
  7515: 7b 1b 10                 u64 [sp + 0x10] = a4
  7518: 7b 1c 08                 u64 [sp + 0x8] = a5
  7521: b4 30 01 7c              ra = 124, jump [t1]
      :                          @549 [@dyn 62]
  7525: 82 1c 08                 a5 = u64 [sp + 0x8]
  7528: 82 1b 10                 a4 = u64 [sp + 0x10]
  7531: 64 6a                    a3 = s1
  7533: 33 08 01                 a1 = 0x1
  7536: 33 06 01                 s1 = 0x1
  7539: 52 07 a8                 jump @545 if a0 != 0
      :                          @550
  7542: 64 b7                    a0 = a4
  7544: 64 c8                    a1 = a5
  7546: b4 a0 01 7e              ra = 126, jump [a3]
      :                          @551 [@dyn 63]
  7550: 33 08 01                 a1 = 0x1
  7553: 64 76                    s1 = a0
  7555: 28 98                    jump @545
      :                          @552
  7557: 52 08 37                 jump @556 if a1 != 0
      :                          @553
  7560: 82 c8 28                 a1 = u64 [a5 + 0x28]
  7563: 82 c7 20                 a0 = u64 [a5 + 0x20]
  7566: 82 83 18                 t1 = u64 [a1 + 0x18]
  7569: 33 08 90 00 01           a1 = 0x10090
  7574: 33 09 01                 a2 = 0x1
  7577: 33 06 01                 s1 = 0x1
  7580: 7b 1a                    u64 [sp] = a3
  7582: 7b 1b 10                 u64 [sp + 0x10] = a4
  7585: 7b 1c 08                 u64 [sp + 0x8] = a5
  7588: b4 30 02 80 00           ra = 128, jump [t1]
      :                          @554 [@dyn 64]
  7593: 82 1c 08                 a5 = u64 [sp + 0x8]
  7596: 82 1b 10                 a4 = u64 [sp + 0x10]
  7599: 82 1a                    a3 = u64 [sp]
  7601: 33 08 01                 a1 = 0x1
  7604: 52 07 67 ff              jump @545 if a0 != 0
      :                          @555
  7608: 81 c7 34                 a0 = i32 [a5 + 0x34]
  7611: 01                       fallthrough
      :                          @556
  7612: 33 06 01                 s1 = 0x1
  7615: 78 16 37                 u8 [sp + 0x37] = s1
  7618: 82 c8 20                 a1 = u64 [a5 + 0x20]
  7621: 82 c9 28                 a2 = u64 [a5 + 0x28]
  7624: 7b 18 18                 u64 [sp + 0x18] = a1
  7627: 7b 19 20                 u64 [sp + 0x20] = a2
  7630: 95 18 37                 a1 = sp + 0x37
  7633: 7b 18 28                 u64 [sp + 0x28] = a1
  7636: 81 c8 30                 a1 = i32 [a5 + 0x30]
  7639: 7c c9 38                 a2 = u8 [a5 + 0x38]
  7642: 82 c3                    t1 = u64 [a5]
  7644: 82 c4 08                 t2 = u64 [a5 + 0x8]
  7647: 82 c0 10                 ra = u64 [a5 + 0x10]
  7650: 82 c2 18                 t0 = u64 [a5 + 0x18]
  7653: 7a 17 6c                 u32 [sp + 0x6c] = a0
  7656: 7a 18 68                 u32 [sp + 0x68] = a1
  7659: 78 19 70                 u8 [sp + 0x70] = a2
  7662: 7b 13 38                 u64 [sp + 0x38] = t1
  7665: 7b 14 40                 u64 [sp + 0x40] = t2
  7668: 7b 10 48                 u64 [sp + 0x48] = ra
  7671: 7b 12 50                 u64 [sp + 0x50] = t0
  7674: 95 17 18                 a0 = sp + 0x18
  7677: 7b 17 58                 u64 [sp + 0x58] = a0
  7680: 33 07 58 00 01           a0 = 0x10058
  7685: 7b 17 60                 u64 [sp + 0x60] = a0
  7688: 95 18 38                 a1 = sp + 0x38
  7691: 64 b7                    a0 = a4
  7693: b4 a0 02 82 00           ra = 130, jump [a3]
      :                          @557 [@dyn 65]
  7698: 52 07 21                 jump @560 if a0 != 0
      :                          @558
  7701: 82 18 60                 a1 = u64 [sp + 0x60]
  7704: 82 17 58                 a0 = u64 [sp + 0x58]
  7707: 82 8a 18                 a3 = u64 [a1 + 0x18]
  7710: 33 08 8e 00 01           a1 = 0x1008e
  7715: 33 09 02                 a2 = 0x2
  7718: b4 a0 02 84 00           ra = 132, jump [a3]
      :                          @559 [@dyn 66]
  7723: 64 76                    s1 = a0
  7725: 33 08 01                 a1 = 0x1
  7728: 28 eb fe                 jump @545
      :                          @560
  7731: 33 08 01                 a1 = 0x1
  7734: 28 e5 fe                 jump @545
      :                          @561
  7737: 51 08 9b 00              jump @582 if a1 == 0
      :                          @562
  7741: 64 79                    a2 = a0
  7743: 7c 77                    a0 = u8 [a0]
  7745: 51 07 91 00              jump @581 if a0 == 0
      :                          @563
  7749: 51 27 ff 00 90 00        jump @583 if a0 == 255
      :                          @564
  7755: 6c 7a                    a3 = sext.b a0
  7757: 57 0a 09                 jump @566 if a3 <s 0
      :                          @565
  7760: 33 0a                    a3 = 0
  7762: 33 08                    a1 = 0
  7764: 28 73                    jump @580
      :                          @566
  7766: 55 27 c0 00 0d           jump @568 if a0 >=u 192
      :                          @567
  7771: 33 0a 01                 a3 = 0x1
  7774: 33 0b 80                 a4 = 0xffffffffffffff80
  7777: 28 4a                    jump @577
      :                          @568
  7779: 55 27 e0 00 0e           jump @570 if a0 >=u 224
      :                          @569
  7784: 33 0a 02                 a3 = 0x2
  7787: 33 0b 40 ff              a4 = 0xffffffffffffff40
  7791: 28 3c                    jump @577
      :                          @570
  7793: 55 27 f0 00 0e           jump @572 if a0 >=u 240
      :                          @571
  7798: 33 0a 03                 a3 = 0x3
  7801: 33 0b 20 ff              a4 = 0xffffffffffffff20
  7805: 28 2e                    jump @577
      :                          @572
  7807: 55 27 f8 00 0e           jump @574 if a0 >=u 248
      :                          @573
  7812: 33 0a 04                 a3 = 0x4
  7815: 33 0b 10 ff              a4 = 0xffffffffffffff10
  7819: 28 20                    jump @577
      :                          @574
  7821: 55 27 fc 00 0e           jump @576 if a0 >=u 252
      :                          @575
  7826: 33 0a 05                 a3 = 0x5
  7829: 33 0b 08 ff              a4 = 0xffffffffffffff08
  7833: 28 12                    jump @577
      :                          @576
  7835: 88 7a fe 00              a3 = a0 <u 0xfe
  7839: 33 0b 04 ff              a4 = 0xffffffffffffff04
  7843: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  7847: 85 aa 07                 a3 = a3 ^ 0x7
  7850: 01                       fallthrough
      :                          @577
  7851: ae 8a 2b                 jump @584 if a3 >=u a1
      :                          @578
  7854: 33 08                    a1 = 0
  7856: c8 b7 07                 a0 = a0 + a4
  7859: 64 ab                    a4 = a3
  7861: 01                       fallthrough
      :                          @579
  7862: c8 b9 0c                 a5 = a2 + a4
  7865: 7c cc                    a5 = u8 [a5]
  7867: 97 88 08                 a1 = a1 << 0x8
  7870: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  7873: d4 c8 08                 a1 = a1 | a5
  7876: 52 0b f2                 jump @579 if a4 != 0
      :                          @580
  7879: 8a a9 03                 i32 a2 = a3 << 0x3
  7882: cf 97 07                 a0 = a0 << a2
  7885: c8 87 07                 a0 = a0 + a1
  7888: 32 00                    ret
      :                          @581
  7890: 32 00                    ret
      :                          @582
  7892: 00                       trap
      :                          @583
  7893: 00                       trap
      :                          @584
  7894: 00                       trap
