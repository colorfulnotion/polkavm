// RO data = 716/716 bytes
// RW data = 96/68224 bytes
// Stack size = 65536 bytes
// RO data = [97, 117, 116, 104, 95, 99, 111, 112, 121, 32, 105, 110, 112, 117, 116, 61, 0, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 97, 117, 116, 104, 95, 99, 111, 112, 121, 32, 115, 116, 97, 114, 116, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 108, 111, 97, 100, 61, 0, 0, 32, 0, 1, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 56, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 97, 117, 116, 104, 95, 99, 111, 112, 121, 32, 111, 117, 116, 112, 117, 116, 61, 0, 0, 0, 0, 0, 0, 0, 96, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 97, 117, 116, 104, 95, 99, 111, 112, 121, 32, 111, 117, 116, 112, 117, 116, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 111, 117, 116, 112, 117, 116, 95, 108, 101, 110, 103, 116, 104, 61, 136, 0, 1, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 161, 0, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 160, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 162, 0, 0, 0, 0, 0, 0, 0, 168, 0, 0, 0, 0, 0, 0, 0, 176, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 212, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 214, 0, 0, 0, 0, 0, 0, 0, 220, 0, 0, 0, 0, 0, 0, 0, 224, 0, 0, 0, 0, 0, 0, 0, 32, 32, 32, 32, 44, 32, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3, 11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4, 7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8, 9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13, 2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9, 12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11, 13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10, 6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5, 10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3]
// RW data = [40, 201, 189, 242, 103, 230, 9, 106, 59, 167, 202, 132, 133, 174, 103, 187, 43, 248, 148, 254, 114, 243, 110, 60, 241, 54, 29, 95, 58, 245, 79, 165, 209, 130, 230, 173, 127, 82, 14, 81, 31, 108, 62, 43, 140, 104, 5, 155, 107, 189, 65, 251, 171, 217, 131, 31, 121, 33, 126, 19, 25, 205, 224, 91, 8, 201, 188, 243, 103, 230, 9, 106, 148, 66, 190, 4, 84, 38, 124, 224, 75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 3582
// Code size = 11241 bytes

      :                          @0
     0: 28 61 06 00 00           jump @117
      :                          @1
     5: 28 47 19 00 00           jump @292
      :                          @2
    10: 28 29 1c                 jump @375
      :                          @3 [@dyn 1]
    13: 95 11 c0                 sp = sp + 0xffffffffffffffc0
    16: 7b 10 38                 u64 [sp + 0x38] = ra
    19: 7b 15 30                 u64 [sp + 0x30] = s0
    22: 7b 16 28                 u64 [sp + 0x28] = s1
    25: 7b 18 08                 u64 [sp + 0x8] = a1
    28: 82 89 28                 a2 = u64 [a1 + 0x28]
    31: 82 76                    s1 = u64 [a0]
    33: 82 75 08                 s0 = u64 [a0 + 0x8]
    36: 82 87 20                 a0 = u64 [a1 + 0x20]
    39: 82 9a 18                 a3 = u64 [a2 + 0x18]
    42: 33 08 00 01 01           a1 = 0x10100
    47: 33 09 01                 a2 = 0x1
    50: b4 a0 01 04              ra = 4, jump [a3]
      :                          @4 [@dyn 2]
    54: 82 18 08                 a1 = u64 [sp + 0x8]
    57: 7b 18 10                 u64 [sp + 0x10] = a1
    60: 78 17 18                 u8 [sp + 0x18] = a0
    63: 46 11 19                 u8 [sp + 25] = 0
    66: 51 05 2c                 jump @9 if s0 == 0
      :                          @5
    69: 33 07 0a                 a0 = 0xa
    72: 7b 17                    u64 [sp] = a0
    74: 01                       fallthrough
      :                          @6
    75: 95 67 01                 a0 = s1 + 0x1
    78: 7b 17 08                 u64 [sp + 0x8] = a0
    81: 7b 16 20                 u64 [sp + 0x20] = s1
    84: 95 17 10                 a0 = sp + 0x10
    87: 95 18 20                 a1 = sp + 0x20
    90: 82 19                    a2 = u64 [sp]
    92: 50 10 06 b0 29           ra = 6, jump @668
      :                          @7 [@dyn 3]
    97: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
   100: 82 16 08                 s1 = u64 [sp + 0x8]
   103: 52 05 e4                 jump @6 if s0 != 0
      :                          @8
   106: 7c 17 18                 a0 = u8 [sp + 0x18]
   109: 01                       fallthrough
      :                          @9
   110: 33 08 01                 a1 = 0x1
   113: 52 07 1e                 jump @12 if a0 != 0
      :                          @10
   116: 82 17 10                 a0 = u64 [sp + 0x10]
   119: 82 78 28                 a1 = u64 [a0 + 0x28]
   122: 82 77 20                 a0 = u64 [a0 + 0x20]
   125: 82 8a 18                 a3 = u64 [a1 + 0x18]
   128: 33 08 41 01 01           a1 = 0x10141
   133: 33 09 01                 a2 = 0x1
   136: b4 a0 01 08              ra = 8, jump [a3]
      :                          @11 [@dyn 4]
   140: 64 78                    a1 = a0
   142: 01                       fallthrough
      :                          @12
   143: 64 87                    a0 = a1
   145: 82 10 38                 ra = u64 [sp + 0x38]
   148: 82 15 30                 s0 = u64 [sp + 0x30]
   151: 82 16 28                 s1 = u64 [sp + 0x28]
   154: 95 11 40                 sp = sp + 0x40
   157: 32 00                    ret
      :                          @13 [@dyn 5]
   159: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   163: 7b 10 80 00              u64 [sp + 0x80] = ra
   167: 80 89 34                 a2 = u32 [a1 + 0x34]
   170: 82 77                    a0 = u64 [a0]
   172: 84 9a 10                 a3 = a2 & 0x10
   175: 52 0a 16                 jump @16 if a3 != 0
      :                          @14
   178: 84 99 20                 a2 = a2 & 0x20
   181: 52 09 41                 jump @19 if a2 != 0
      :                          @15
   184: 7c 77                    a0 = u8 [a0]
   186: 82 10 80 00              ra = u64 [sp + 0x80]
   190: 95 11 88 00              sp = sp + 0x88
   194: 28 3f 21                 jump @514
      :                          @16
   197: 7c 77                    a0 = u8 [a0]
   199: 33 0b 81 00              a4 = 0x81
   203: 95 19 7f                 a2 = sp + 0x7f
   206: 33 02 57                 t0 = 0x57
   209: 01                       fallthrough
      :                          @17
   210: 64 bc                    a5 = a4
   212: 84 7b 0f                 a4 = a0 & 0xf
   215: 97 77 38                 a0 = a0 << 0x38
   218: 98 77 3c                 a0 = a0 >> 0x3c
   221: 88 b3 0a                 t1 = a4 <u 0xa
   224: 33 0a 30                 a3 = 0x30
   227: da 32 0a                 a3 = t0 if t1 == 0
   230: be ba 0a                 i32 a3 = a3 + a4
   233: 78 9a                    u8 [a2] = a3
   235: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
   238: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
   241: 52 07 e1                 jump @17 if a0 != 0
      :                          @18
   244: 28 31                    jump @21
      :                          @19
   246: 7c 77                    a0 = u8 [a0]
   248: 33 0b 81 00              a4 = 0x81
   252: 95 19 7f                 a2 = sp + 0x7f
   255: 33 02 37                 t0 = 0x37
   258: 01                       fallthrough
      :                          @20
   259: 64 bc                    a5 = a4
   261: 84 7b 0f                 a4 = a0 & 0xf
   264: 97 77 38                 a0 = a0 << 0x38
   267: 98 77 3c                 a0 = a0 >> 0x3c
   270: 88 b3 0a                 t1 = a4 <u 0xa
   273: 33 0a 30                 a3 = 0x30
   276: da 32 0a                 a3 = t0 if t1 == 0
   279: be ba 0a                 i32 a3 = a3 + a4
   282: 78 9a                    u8 [a2] = a3
   284: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
   287: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
   290: 52 07 e1                 jump @20 if a0 != 0
      :                          @21
   293: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   296: 56 27 80 00 27           jump @24 if a0 >u 128
      :                          @22
   301: 9a bb 81 00              a4 = 0x81 - a4
   305: 64 1a                    a3 = sp
   307: c8 7a 0a                 a3 = a3 + a0
   310: 33 09 02                 a2 = 0x2
   313: 64 87                    a0 = a1
   315: 33 08 42 01 01           a1 = 0x10142
   320: 50 10 0c e9 21           ra = 12, jump @524
      :                          @23 [@dyn 6]
   325: 82 10 80 00              ra = u64 [sp + 0x80]
   329: 95 11 88 00              sp = sp + 0x88
   333: 32 00                    ret
      :                          @24
   335: 00                       trap
      :                          @25 [@dyn 7]
   336: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   340: 7b 10 80 00              u64 [sp + 0x80] = ra
   344: 80 89 34                 a2 = u32 [a1 + 0x34]
   347: 84 9a 10                 a3 = a2 & 0x10
   350: 52 0a 16                 jump @28 if a3 != 0
      :                          @26
   353: 84 99 20                 a2 = a2 & 0x20
   356: 52 09 40                 jump @31 if a2 != 0
      :                          @27
   359: 82 77                    a0 = u64 [a0]
   361: 82 10 80 00              ra = u64 [sp + 0x80]
   365: 95 11 88 00              sp = sp + 0x88
   369: 28 90 20                 jump @514
      :                          @28
   372: 82 7b                    a4 = u64 [a0]
   374: 33 09 81 00              a2 = 0x81
   378: 95 17 7f                 a0 = sp + 0x7f
   381: 33 02 57                 t0 = 0x57
   384: 01                       fallthrough
      :                          @29
   385: 64 9c                    a5 = a2
   387: 98 ba 04                 a3 = a4 >> 0x4
   390: 84 bb 0f                 a4 = a4 & 0xf
   393: 88 b3 0a                 t1 = a4 <u 0xa
   396: 33 09 30                 a2 = 0x30
   399: da 32 09                 a2 = t0 if t1 == 0
   402: be b9 09                 i32 a2 = a2 + a4
   405: 78 79                    u8 [a0] = a2
   407: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   410: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   413: 64 ab                    a4 = a3
   415: 52 0a e2                 jump @29 if a3 != 0
      :                          @30
   418: 28 30                    jump @33
      :                          @31
   420: 82 7b                    a4 = u64 [a0]
   422: 33 09 81 00              a2 = 0x81
   426: 95 17 7f                 a0 = sp + 0x7f
   429: 33 02 37                 t0 = 0x37
   432: 01                       fallthrough
      :                          @32
   433: 64 9c                    a5 = a2
   435: 98 ba 04                 a3 = a4 >> 0x4
   438: 84 bb 0f                 a4 = a4 & 0xf
   441: 88 b3 0a                 t1 = a4 <u 0xa
   444: 33 09 30                 a2 = 0x30
   447: da 32 09                 a2 = t0 if t1 == 0
   450: be b9 09                 i32 a2 = a2 + a4
   453: 78 79                    u8 [a0] = a2
   455: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   458: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   461: 64 ab                    a4 = a3
   463: 52 0a e2                 jump @32 if a3 != 0
      :                          @33
   466: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   469: 56 27 80 00 27           jump @36 if a0 >u 128
      :                          @34
   474: 9a 9b 81 00              a4 = 0x81 - a2
   478: 64 1a                    a3 = sp
   480: c8 7a 0a                 a3 = a3 + a0
   483: 33 09 02                 a2 = 0x2
   486: 64 87                    a0 = a1
   488: 33 08 42 01 01           a1 = 0x10142
   493: 50 10 10 3c 21           ra = 16, jump @524
      :                          @35 [@dyn 8]
   498: 82 10 80 00              ra = u64 [sp + 0x80]
   502: 95 11 88 00              sp = sp + 0x88
   506: 32 00                    ret
      :                          @36
   508: 00                       trap
      :                          @37 [@dyn 9]
   509: 95 11 d0                 sp = sp + 0xffffffffffffffd0
   512: 7b 10 28                 u64 [sp + 0x28] = ra
   515: 7b 15 20                 u64 [sp + 0x20] = s0
   518: 7b 16 18                 u64 [sp + 0x18] = s1
   521: 64 85                    s0 = a1
   523: 82 88 28                 a1 = u64 [a1 + 0x28]
   526: 82 5a 20                 a3 = u64 [s0 + 0x20]
   529: 82 8b 18                 a4 = u64 [a1 + 0x18]
   532: 64 76                    s1 = a0
   534: 33 08 00 01 01           a1 = 0x10100
   539: 33 09 01                 a2 = 0x1
   542: 64 a7                    a0 = a3
   544: b4 b0 01 14              ra = 20, jump [a4]
      :                          @38 [@dyn 10]
   548: 7b 15                    u64 [sp] = s0
   550: 78 17 08                 u8 [sp + 0x8] = a0
   553: 46 11 09                 u8 [sp + 9] = 0
   556: 7b 16 10                 u64 [sp + 0x10] = s1
   559: 33 05 0a                 s0 = 0xa
   562: 64 17                    a0 = sp
   564: 95 18 10                 a1 = sp + 0x10
   567: 33 09 0a                 a2 = 0xa
   570: 50 10 16 d2 27           ra = 22, jump @668
      :                          @39 [@dyn 11]
   575: 95 67 01                 a0 = s1 + 0x1
   578: 7b 17 10                 u64 [sp + 0x10] = a0
   581: 64 17                    a0 = sp
   583: 95 18 10                 a1 = sp + 0x10
   586: 64 59                    a2 = s0
   588: 50 10 18 c0 27           ra = 24, jump @668
      :                          @40 [@dyn 12]
   593: 95 67 02                 a0 = s1 + 0x2
   596: 7b 17 10                 u64 [sp + 0x10] = a0
   599: 64 17                    a0 = sp
   601: 95 18 10                 a1 = sp + 0x10
   604: 64 59                    a2 = s0
   606: 50 10 1a ae 27           ra = 26, jump @668
      :                          @41 [@dyn 13]
   611: 95 67 03                 a0 = s1 + 0x3
   614: 7b 17 10                 u64 [sp + 0x10] = a0
   617: 64 17                    a0 = sp
   619: 95 18 10                 a1 = sp + 0x10
   622: 64 59                    a2 = s0
   624: 50 10 1c 9c 27           ra = 28, jump @668
      :                          @42 [@dyn 14]
   629: 95 67 04                 a0 = s1 + 0x4
   632: 7b 17 10                 u64 [sp + 0x10] = a0
   635: 64 17                    a0 = sp
   637: 95 18 10                 a1 = sp + 0x10
   640: 64 59                    a2 = s0
   642: 50 10 1e 8a 27           ra = 30, jump @668
      :                          @43 [@dyn 15]
   647: 95 67 05                 a0 = s1 + 0x5
   650: 7b 17 10                 u64 [sp + 0x10] = a0
   653: 64 17                    a0 = sp
   655: 95 18 10                 a1 = sp + 0x10
   658: 64 59                    a2 = s0
   660: 50 10 20 78 27           ra = 32, jump @668
      :                          @44 [@dyn 16]
   665: 95 67 06                 a0 = s1 + 0x6
   668: 7b 17 10                 u64 [sp + 0x10] = a0
   671: 64 17                    a0 = sp
   673: 95 18 10                 a1 = sp + 0x10
   676: 64 59                    a2 = s0
   678: 50 10 22 66 27           ra = 34, jump @668
      :                          @45 [@dyn 17]
   683: 95 67 07                 a0 = s1 + 0x7
   686: 7b 17 10                 u64 [sp + 0x10] = a0
   689: 64 17                    a0 = sp
   691: 95 18 10                 a1 = sp + 0x10
   694: 64 59                    a2 = s0
   696: 50 10 24 54 27           ra = 36, jump @668
      :                          @46 [@dyn 18]
   701: 95 67 08                 a0 = s1 + 0x8
   704: 7b 17 10                 u64 [sp + 0x10] = a0
   707: 64 17                    a0 = sp
   709: 95 18 10                 a1 = sp + 0x10
   712: 64 59                    a2 = s0
   714: 50 10 26 42 27           ra = 38, jump @668
      :                          @47 [@dyn 19]
   719: 95 67 09                 a0 = s1 + 0x9
   722: 7b 17 10                 u64 [sp + 0x10] = a0
   725: 64 17                    a0 = sp
   727: 95 18 10                 a1 = sp + 0x10
   730: 64 59                    a2 = s0
   732: 50 10 28 30 27           ra = 40, jump @668
      :                          @48 [@dyn 20]
   737: 95 67 0a                 a0 = s1 + 0xa
   740: 7b 17 10                 u64 [sp + 0x10] = a0
   743: 64 17                    a0 = sp
   745: 95 18 10                 a1 = sp + 0x10
   748: 64 59                    a2 = s0
   750: 50 10 2a 1e 27           ra = 42, jump @668
      :                          @49 [@dyn 21]
   755: 95 67 0b                 a0 = s1 + 0xb
   758: 7b 17 10                 u64 [sp + 0x10] = a0
   761: 64 17                    a0 = sp
   763: 95 18 10                 a1 = sp + 0x10
   766: 64 59                    a2 = s0
   768: 50 10 2c 0c 27           ra = 44, jump @668
      :                          @50 [@dyn 22]
   773: 95 67 0c                 a0 = s1 + 0xc
   776: 7b 17 10                 u64 [sp + 0x10] = a0
   779: 64 17                    a0 = sp
   781: 95 18 10                 a1 = sp + 0x10
   784: 64 59                    a2 = s0
   786: 50 10 2e fa 26           ra = 46, jump @668
      :                          @51 [@dyn 23]
   791: 95 67 0d                 a0 = s1 + 0xd
   794: 7b 17 10                 u64 [sp + 0x10] = a0
   797: 64 17                    a0 = sp
   799: 95 18 10                 a1 = sp + 0x10
   802: 64 59                    a2 = s0
   804: 50 10 30 e8 26           ra = 48, jump @668
      :                          @52 [@dyn 24]
   809: 95 67 0e                 a0 = s1 + 0xe
   812: 7b 17 10                 u64 [sp + 0x10] = a0
   815: 64 17                    a0 = sp
   817: 95 18 10                 a1 = sp + 0x10
   820: 64 59                    a2 = s0
   822: 50 10 32 d6 26           ra = 50, jump @668
      :                          @53 [@dyn 25]
   827: 95 67 0f                 a0 = s1 + 0xf
   830: 7b 17 10                 u64 [sp + 0x10] = a0
   833: 64 17                    a0 = sp
   835: 95 18 10                 a1 = sp + 0x10
   838: 64 59                    a2 = s0
   840: 50 10 34 c4 26           ra = 52, jump @668
      :                          @54 [@dyn 26]
   845: 95 67 10                 a0 = s1 + 0x10
   848: 7b 17 10                 u64 [sp + 0x10] = a0
   851: 64 17                    a0 = sp
   853: 95 18 10                 a1 = sp + 0x10
   856: 64 59                    a2 = s0
   858: 50 10 36 b2 26           ra = 54, jump @668
      :                          @55 [@dyn 27]
   863: 95 67 11                 a0 = s1 + 0x11
   866: 7b 17 10                 u64 [sp + 0x10] = a0
   869: 64 17                    a0 = sp
   871: 95 18 10                 a1 = sp + 0x10
   874: 64 59                    a2 = s0
   876: 50 10 38 a0 26           ra = 56, jump @668
      :                          @56 [@dyn 28]
   881: 95 67 12                 a0 = s1 + 0x12
   884: 7b 17 10                 u64 [sp + 0x10] = a0
   887: 64 17                    a0 = sp
   889: 95 18 10                 a1 = sp + 0x10
   892: 64 59                    a2 = s0
   894: 50 10 3a 8e 26           ra = 58, jump @668
      :                          @57 [@dyn 29]
   899: 95 67 13                 a0 = s1 + 0x13
   902: 7b 17 10                 u64 [sp + 0x10] = a0
   905: 64 17                    a0 = sp
   907: 95 18 10                 a1 = sp + 0x10
   910: 64 59                    a2 = s0
   912: 50 10 3c 7c 26           ra = 60, jump @668
      :                          @58 [@dyn 30]
   917: 95 67 14                 a0 = s1 + 0x14
   920: 7b 17 10                 u64 [sp + 0x10] = a0
   923: 64 17                    a0 = sp
   925: 95 18 10                 a1 = sp + 0x10
   928: 64 59                    a2 = s0
   930: 50 10 3e 6a 26           ra = 62, jump @668
      :                          @59 [@dyn 31]
   935: 95 67 15                 a0 = s1 + 0x15
   938: 7b 17 10                 u64 [sp + 0x10] = a0
   941: 64 17                    a0 = sp
   943: 95 18 10                 a1 = sp + 0x10
   946: 64 59                    a2 = s0
   948: 50 10 40 58 26           ra = 64, jump @668
      :                          @60 [@dyn 32]
   953: 95 67 16                 a0 = s1 + 0x16
   956: 7b 17 10                 u64 [sp + 0x10] = a0
   959: 64 17                    a0 = sp
   961: 95 18 10                 a1 = sp + 0x10
   964: 64 59                    a2 = s0
   966: 50 10 42 46 26           ra = 66, jump @668
      :                          @61 [@dyn 33]
   971: 95 67 17                 a0 = s1 + 0x17
   974: 7b 17 10                 u64 [sp + 0x10] = a0
   977: 64 17                    a0 = sp
   979: 95 18 10                 a1 = sp + 0x10
   982: 64 59                    a2 = s0
   984: 50 10 44 34 26           ra = 68, jump @668
      :                          @62 [@dyn 34]
   989: 95 67 18                 a0 = s1 + 0x18
   992: 7b 17 10                 u64 [sp + 0x10] = a0
   995: 64 17                    a0 = sp
   997: 95 18 10                 a1 = sp + 0x10
  1000: 64 59                    a2 = s0
  1002: 50 10 46 22 26           ra = 70, jump @668
      :                          @63 [@dyn 35]
  1007: 95 67 19                 a0 = s1 + 0x19
  1010: 7b 17 10                 u64 [sp + 0x10] = a0
  1013: 64 17                    a0 = sp
  1015: 95 18 10                 a1 = sp + 0x10
  1018: 64 59                    a2 = s0
  1020: 50 10 48 10 26           ra = 72, jump @668
      :                          @64 [@dyn 36]
  1025: 95 67 1a                 a0 = s1 + 0x1a
  1028: 7b 17 10                 u64 [sp + 0x10] = a0
  1031: 64 17                    a0 = sp
  1033: 95 18 10                 a1 = sp + 0x10
  1036: 64 59                    a2 = s0
  1038: 50 10 4a fe 25           ra = 74, jump @668
      :                          @65 [@dyn 37]
  1043: 95 67 1b                 a0 = s1 + 0x1b
  1046: 7b 17 10                 u64 [sp + 0x10] = a0
  1049: 64 17                    a0 = sp
  1051: 95 18 10                 a1 = sp + 0x10
  1054: 64 59                    a2 = s0
  1056: 50 10 4c ec 25           ra = 76, jump @668
      :                          @66 [@dyn 38]
  1061: 95 67 1c                 a0 = s1 + 0x1c
  1064: 7b 17 10                 u64 [sp + 0x10] = a0
  1067: 64 17                    a0 = sp
  1069: 95 18 10                 a1 = sp + 0x10
  1072: 64 59                    a2 = s0
  1074: 50 10 4e da 25           ra = 78, jump @668
      :                          @67 [@dyn 39]
  1079: 95 67 1d                 a0 = s1 + 0x1d
  1082: 7b 17 10                 u64 [sp + 0x10] = a0
  1085: 64 17                    a0 = sp
  1087: 95 18 10                 a1 = sp + 0x10
  1090: 64 59                    a2 = s0
  1092: 50 10 50 c8 25           ra = 80, jump @668
      :                          @68 [@dyn 40]
  1097: 95 67 1e                 a0 = s1 + 0x1e
  1100: 7b 17 10                 u64 [sp + 0x10] = a0
  1103: 64 17                    a0 = sp
  1105: 95 18 10                 a1 = sp + 0x10
  1108: 64 59                    a2 = s0
  1110: 50 10 52 b6 25           ra = 82, jump @668
      :                          @69 [@dyn 41]
  1115: 95 66 1f                 s1 = s1 + 0x1f
  1118: 7b 16 10                 u64 [sp + 0x10] = s1
  1121: 64 17                    a0 = sp
  1123: 95 18 10                 a1 = sp + 0x10
  1126: 64 59                    a2 = s0
  1128: 50 10 54 a4 25           ra = 84, jump @668
      :                          @70 [@dyn 42]
  1133: 33 07 01                 a0 = 0x1
  1136: 7c 18 08                 a1 = u8 [sp + 0x8]
  1139: 52 08 1a                 jump @72 if a1 != 0
      :                          @71
  1142: 82 17                    a0 = u64 [sp]
  1144: 82 78 28                 a1 = u64 [a0 + 0x28]
  1147: 82 77 20                 a0 = u64 [a0 + 0x20]
  1150: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1153: 33 08 41 01 01           a1 = 0x10141
  1158: 33 09 01                 a2 = 0x1
  1161: b4 a0 01 56              ra = 86, jump [a3]
      :                          @72 [@dyn 43]
  1165: 82 10 28                 ra = u64 [sp + 0x28]
  1168: 82 15 20                 s0 = u64 [sp + 0x20]
  1171: 82 16 18                 s1 = u64 [sp + 0x18]
  1174: 95 11 30                 sp = sp + 0x30
  1177: 32 00                    ret
      :                          @73
  1179: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  1182: 7b 10 30                 u64 [sp + 0x30] = ra
  1185: 7b 15 28                 u64 [sp + 0x28] = s0
  1188: 7b 16 20                 u64 [sp + 0x20] = s1
  1191: 64 95                    s0 = a2
  1193: 64 72                    t0 = a0
  1195: 51 08 79                 jump @83 if a1 == 0
      :                          @74
  1198: 82 a7 08                 a0 = u64 [a3 + 0x8]
  1201: 51 07 7c                 jump @84 if a0 == 0
      :                          @75
  1204: 82 a9 10                 a2 = u64 [a3 + 0x10]
  1207: 51 09 aa 00              jump @91 if a2 == 0
      :                          @76
  1211: 82 a8                    a1 = u64 [a3]
  1213: 33 06 70 0a 03           s1 = 0x30a70
  1218: 33 03 00 00 01           t1 = 0x10000
  1223: c8 36 06                 s1 = s1 + t1
  1226: 01                       fallthrough
      :                          @77
  1227: 82 6a                    a3 = u64 [s1]
  1229: c8 5a 07                 a0 = a3 + s0
  1232: ac a7 cf 00              jump @97 if a0 <u a3
      :                          @78
  1236: 95 7b 01                 a4 = a0 + 0x1
  1239: 88 bc 01                 a5 = a4 <u 0x1
  1242: d8 b3 0b                 a4 = t1 <u a4
  1245: d4 cb 0b                 a4 = a4 | a5
  1248: 52 0b bf 00              jump @97 if a4 != 0
      :                          @79
  1252: 82 6b                    a4 = u64 [s1]
  1254: ab ab e5                 jump @77 if a4 != a3
      :                          @80
  1257: 7b 67                    u64 [s1] = a0
  1259: 33 0c                    a5 = 0
  1261: 7b 12 18                 u64 [sp + 0x18] = t0
  1264: 33 0a 70 0a 03           a3 = 0x30a70
  1269: 33 0b 00 00 01           a4 = 0x10000
  1274: 7b 1a                    u64 [sp] = a3
  1276: c8 ba 0a                 a3 = a3 + a4
  1279: c9 7a 07                 a0 = a3 - a0
  1282: 7b 17 10                 u64 [sp + 0x10] = a0
  1285: 7b 18 08                 u64 [sp + 0x8] = a1
  1288: 64 96                    s1 = a2
  1290: 50 10 58 ec 1b           ra = 88, jump @482
      :                          @81 [@dyn 44]
  1295: 54 36 00 00 01 98 00     jump @98 if s1 <=u 65536
      :                          @82
  1302: 82 12 18                 t0 = u64 [sp + 0x18]
  1305: 82 18 10                 a1 = u64 [sp + 0x10]
  1308: 33 07                    a0 = 0
  1310: 7b 28 08                 u64 [t0 + 0x8] = a1
  1313: 28 b5 00                 jump @104
      :                          @83
  1316: 49 12 08                 u64 [t0 + 8] = 0
  1319: 33 07 01                 a0 = 0x1
  1322: 28 ac 00                 jump @104
      :                          @84
  1325: 33 09 70 0a 03           a2 = 0x30a70
  1330: 33 07 00 00 01           a0 = 0x10000
  1335: c8 79 09                 a2 = a2 + a0
  1338: 01                       fallthrough
      :                          @85
  1339: 82 9a                    a3 = u64 [a2]
  1341: c8 5a 08                 a1 = a3 + s0
  1344: ac a8 5f                 jump @97 if a1 <u a3
      :                          @86
  1347: 95 8b 01                 a4 = a1 + 0x1
  1350: 88 bc 01                 a5 = a4 <u 0x1
  1353: d8 b7 0b                 a4 = a0 <u a4
  1356: d4 cb 0b                 a4 = a4 | a5
  1359: 52 0b 50                 jump @97 if a4 != 0
      :                          @87
  1362: 82 9b                    a4 = u64 [a2]
  1364: ab ab e7                 jump @85 if a4 != a3
      :                          @88
  1367: 7b 98                    u64 [a2] = a1
  1369: 33 0c                    a5 = 0
  1371: 01                       fallthrough
      :                          @89
  1372: ab ab df                 jump @85 if a4 != a3
      :                          @90
  1375: 28 31                    jump @96
      :                          @91
  1377: 33 09 70 0a 03           a2 = 0x30a70
  1382: 33 07 00 00 01           a0 = 0x10000
  1387: c8 79 09                 a2 = a2 + a0
  1390: 01                       fallthrough
      :                          @92
  1391: 82 9a                    a3 = u64 [a2]
  1393: c8 5a 08                 a1 = a3 + s0
  1396: ac a8 2b                 jump @97 if a1 <u a3
      :                          @93
  1399: 95 8b 01                 a4 = a1 + 0x1
  1402: 88 bc 01                 a5 = a4 <u 0x1
  1405: d8 b7 0b                 a4 = a0 <u a4
  1408: d4 cb 0b                 a4 = a4 | a5
  1411: 52 0b 1c                 jump @97 if a4 != 0
      :                          @94
  1414: 82 9b                    a4 = u64 [a2]
  1416: ab ab e7                 jump @92 if a4 != a3
      :                          @95
  1419: 7b 98                    u64 [a2] = a1
  1421: 33 0c                    a5 = 0
  1423: 01                       fallthrough
      :                          @96
  1424: 33 07 70 0a 04           a0 = 0x40a70
  1429: c9 87 08                 a1 = a0 - a1
  1432: 33 07                    a0 = 0
  1434: 7b 28 08                 u64 [t0 + 0x8] = a1
  1437: 28 39                    jump @104
      :                          @97
  1439: 33 07 01                 a0 = 0x1
  1442: 7b 27 08                 u64 [t0 + 0x8] = a0
  1445: 28 31                    jump @104
      :                          @98
  1447: 64 6c                    a5 = s1
  1449: 82 17                    a0 = u64 [sp]
  1451: 95 77 00 00 01           a0 = a0 + 0x10000
  1456: 82 12 18                 t0 = u64 [sp + 0x18]
  1459: 82 16 08                 s1 = u64 [sp + 0x8]
  1462: 01                       fallthrough
      :                          @99
  1463: 82 78                    a1 = u64 [a0]
  1465: c9 87 09                 a2 = a0 - a1
  1468: ab 69 11                 jump @103 if a2 != s1
      :                          @100
  1471: c9 c8 09                 a2 = a1 - a5
  1474: 01                       fallthrough
      :                          @101
  1475: 82 7a                    a3 = u64 [a0]
  1477: ab 8a f2                 jump @99 if a3 != a1
      :                          @102
  1480: 7b 79                    u64 [a0] = a2
  1482: 33 0b                    a4 = 0
  1484: 01                       fallthrough
      :                          @103
  1485: 82 18 10                 a1 = u64 [sp + 0x10]
  1488: 33 07                    a0 = 0
  1490: 7b 28 08                 u64 [t0 + 0x8] = a1
  1493: 01                       fallthrough
      :                          @104
  1494: 7b 25 10                 u64 [t0 + 0x10] = s0
  1497: 7b 27                    u64 [t0] = a0
  1499: 82 10 30                 ra = u64 [sp + 0x30]
  1502: 82 15 28                 s0 = u64 [sp + 0x28]
  1505: 82 16 20                 s1 = u64 [sp + 0x20]
  1508: 95 11 38                 sp = sp + 0x38
  1511: 32 00                    ret
      :                          @105
  1513: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  1516: 7b 10 40                 u64 [sp + 0x40] = ra
  1519: 7b 15 38                 u64 [sp + 0x38] = s0
  1522: 7b 16 30                 u64 [sp + 0x30] = s1
  1525: c8 89 09                 a2 = a2 + a1
  1528: ac 89 53                 jump @113 if a2 <u a1
      :                          @106
  1531: 64 75                    s0 = a0
  1533: 82 77                    a0 = u64 [a0]
  1535: 97 78 01                 a1 = a0 << 0x1
  1538: 33 0a 08                 a3 = 0x8
  1541: e4 a9 09                 a2 = maxu(a2, a3)
  1544: e4 98 06                 s1 = maxu(a1, a2)
  1547: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  1550: 98 88 3f                 a1 = a1 >> 0x3f
  1553: 51 07 12                 jump @108 if a0 == 0
      :                          @107
  1556: 82 59 08                 a2 = u64 [s0 + 0x8]
  1559: 7b 19 18                 u64 [sp + 0x18] = a2
  1562: 49 11 20 01              u64 [sp + 32] = 0x1
  1566: 7b 17 28                 u64 [sp + 0x28] = a0
  1569: 28 06                    jump @109
      :                          @108
  1571: 49 11 20                 u64 [sp + 32] = 0
  1574: 01                       fallthrough
      :                          @109
  1575: 64 17                    a0 = sp
  1577: 95 1a 18                 a3 = sp + 0x18
  1580: 64 69                    a2 = s1
  1582: 50 10 5a 6d fe           ra = 90, jump @73
      :                          @110 [@dyn 45]
  1587: 82 18                    a1 = u64 [sp]
  1589: 82 17 08                 a0 = u64 [sp + 0x8]
  1592: 51 08 14                 jump @114 if a1 == 0
      :                          @111
  1595: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  1605: aa 87 0d                 jump @115 if a0 == a1
      :                          @112
  1608: 52 07 18                 jump @116 if a0 != 0
      :                          @113
  1611: 00                       trap
      :                          @114
  1612: 7b 57 08                 u64 [s0 + 0x8] = a0
  1615: 7b 56                    u64 [s0] = s1
  1617: 01                       fallthrough
      :                          @115
  1618: 82 10 40                 ra = u64 [sp + 0x40]
  1621: 82 15 38                 s0 = u64 [sp + 0x38]
  1624: 82 16 30                 s1 = u64 [sp + 0x30]
  1627: 95 11 48                 sp = sp + 0x48
  1630: 32 00                    ret
      :                          @116
  1632: 00                       trap
      :                          @117 [export #0: 'refine']
  1633: 95 11 28 fc              sp = sp + 0xfffffffffffffc28
  1637: 7b 10 d0 03              u64 [sp + 0x3d0] = ra
  1641: 7b 15 c8 03              u64 [sp + 0x3c8] = s0
  1645: 7b 16 c0 03              u64 [sp + 0x3c0] = s1
  1649: 64 86                    s1 = a1
  1651: 64 7b                    a4 = a0
  1653: c8 87 07                 a0 = a0 + a1
  1656: 95 79 e0                 a2 = a0 + 0xffffffffffffffe0
  1659: 7b 19 78 01              u64 [sp + 0x178] = a2
  1663: 7b 19 80 01              u64 [sp + 0x180] = a2
  1667: 49 21 88 01 20           u64 [sp + 392] = 0x20
  1672: 33 07 00 00 01           a0 = 0x10000
  1677: 53 16 04 43              jump @126 if s1 <u 4
      :                          @118
  1681: 7d b8                    a1 = i8 [a4]
  1683: 33 05 01                 s0 = 0x1
  1686: 59 08 37                 jump @125 if a1 >=s 0
      :                          @119
  1689: 84 8a ff 00              a3 = a1 & 0xff
  1693: 33 05 02                 s0 = 0x2
  1696: 53 2a c0 00 2d           jump @125 if a3 <u 192
      :                          @120
  1701: 33 05 03                 s0 = 0x3
  1704: 53 2a e0 00 25           jump @125 if a3 <u 224
      :                          @121
  1709: 33 05 04                 s0 = 0x4
  1712: 53 2a f0 00 1d           jump @125 if a3 <u 240
      :                          @122
  1717: 33 05 05                 s0 = 0x5
  1720: 53 2a f8 00 15           jump @125 if a3 <u 248
      :                          @123
  1725: 33 05 06                 s0 = 0x6
  1728: 53 2a fc 00 0d           jump @125 if a3 <u 252
      :                          @124
  1733: 88 a8 fe 00              a1 = a3 <u 0xfe
  1737: 9a 85 08                 s0 = 0x8 - a1
  1740: 01                       fallthrough
      :                          @125
  1741: ae 56 18                 jump @128 if s1 >=u s0
      :                          @126
  1744: 33 08                    a1 = 0
  1746: 01                       fallthrough
      :                          @127
  1747: 82 10 d0 03              ra = u64 [sp + 0x3d0]
  1751: 82 15 c8 03              s0 = u64 [sp + 0x3c8]
  1755: 82 16 c0 03              s1 = u64 [sp + 0x3c0]
  1759: 95 11 d8 03              sp = sp + 0x3d8
  1763: 32 00                    ret
      :                          @128
  1765: 7b 19 68 01              u64 [sp + 0x168] = a2
  1769: 64 b7                    a0 = a4
  1771: 64 58                    a1 = s0
  1773: 7b 1b 70 01              u64 [sp + 0x170] = a4
  1777: 50 10 5c 5a 24           ra = 92, jump @685
      :                          @129 [@dyn 46]
  1782: aa 56 74                 jump @141 if s1 == s0
      :                          @130
  1785: 82 17 70 01              a0 = u64 [sp + 0x170]
  1789: c8 57 07                 a0 = a0 + s0
  1792: 7d 78                    a1 = i8 [a0]
  1794: c9 56 05                 s0 = s1 - s0
  1797: 33 06 01                 s1 = 0x1
  1800: 59 08 37                 jump @137 if a1 >=s 0
      :                          @131
  1803: 84 89 ff 00              a2 = a1 & 0xff
  1807: 33 06 02                 s1 = 0x2
  1810: 53 29 c0 00 2d           jump @137 if a2 <u 192
      :                          @132
  1815: 33 06 03                 s1 = 0x3
  1818: 53 29 e0 00 25           jump @137 if a2 <u 224
      :                          @133
  1823: 33 06 04                 s1 = 0x4
  1826: 53 29 f0 00 1d           jump @137 if a2 <u 240
      :                          @134
  1831: 33 06 05                 s1 = 0x5
  1834: 53 29 f8 00 15           jump @137 if a2 <u 248
      :                          @135
  1839: 33 06 06                 s1 = 0x6
  1842: 53 29 fc 00 0d           jump @137 if a2 <u 252
      :                          @136
  1847: 88 99 fe 00              a2 = a2 <u 0xfe
  1851: 9a 96 08                 s1 = 0x8 - a2
  1854: 01                       fallthrough
      :                          @137
  1855: ae 65 06                 jump @139 if s0 >=u s1
      :                          @138
  1858: 28 08 12                 jump @290
      :                          @139
  1861: 7b 17 70 01              u64 [sp + 0x170] = a0
  1865: 64 68                    a1 = s1
  1867: 50 10 5e 00 24           ra = 94, jump @685
      :                          @140 [@dyn 47]
  1872: 64 72                    t0 = a0
  1874: e4 65 07                 a0 = maxu(s0, s1)
  1877: c9 67 07                 a0 = a0 - s1
  1880: d8 27 08                 a1 = a0 <u t0
  1883: e4 27 07                 a0 = maxu(a0, t0)
  1886: c9 27 07                 a0 = a0 - t0
  1889: 88 77 20                 a0 = a0 <u 0x20
  1892: d4 87 07                 a0 = a0 | a1
  1895: 51 07 0d                 jump @142 if a0 == 0
      :                          @141
  1898: 33 08                    a1 = 0
  1900: 33 07 00 00 01           a0 = 0x10000
  1905: 28 62 ff                 jump @127
      :                          @142
  1908: 49 11 38 ff ff fe        u64 [sp + 56] = 0xfffffffffffeffff
  1914: 51 02 b0 01              jump @172 if t0 == 0
      :                          @143
  1918: 7b 16 58 01              u64 [sp + 0x158] = s1
  1922: 95 26 20                 s1 = t0 + 0x20
  1925: 7b 12 60 01              u64 [sp + 0x160] = t0
  1929: 51 06 6e 11              jump @275 if s1 == 0
      :                          @144
  1933: 59 06 06                 jump @146 if s1 >=s 0
      :                          @145
  1936: 28 bb 11                 jump @291
      :                          @146
  1939: 89 67                    a0 = s1 <s 0
  1941: 85 78 01                 a1 = a0 ^ 0x1
  1944: 33 0a 70 0a 03           a3 = 0x30a70
  1949: 33 09 00 00 01           a2 = 0x10000
  1954: c8 9a 0a                 a3 = a3 + a2
  1957: 01                       fallthrough
      :                          @147
  1958: 82 ab                    a4 = u64 [a3]
  1960: c8 6b 07                 a0 = a4 + s1
  1963: ac b7 9a 11              jump @285 if a0 <u a4
      :                          @148
  1967: c8 87 0c                 a5 = a0 + a1
  1970: d8 7c 05                 s0 = a5 <u a0
  1973: d8 c9 0c                 a5 = a2 <u a5
  1976: d4 5c 0c                 a5 = a5 | s0
  1979: 52 0c 8a 11              jump @285 if a5 != 0
      :                          @149
  1983: 82 ac                    a5 = u64 [a3]
  1985: ab bc e5                 jump @147 if a5 != a4
      :                          @150
  1988: 7b a7                    u64 [a3] = a0
  1990: 01                       fallthrough
      :                          @151
  1991: 33 05                    s0 = 0
  1993: 33 08 70 0a 04           a1 = 0x40a70
  1998: c9 78 08                 a1 = a1 - a0
  2001: 7b 16 e0 01              u64 [sp + 0x1e0] = s1
  2005: 7b 18 e8 01              u64 [sp + 0x1e8] = a1
  2009: 49 21 f0 01              u64 [sp + 496] = 0
  2013: 55 12 e0 28 11           jump @276 if t0 >=u 4294967264
      :                          @152
  2018: 82 17 70 01              a0 = u64 [sp + 0x170]
  2022: 82 19 58 01              a2 = u64 [sp + 0x158]
  2026: c8 97 07                 a0 = a0 + a2
  2029: 7b 17 58 01              u64 [sp + 0x158] = a0
  2033: 7b 18 70 01              u64 [sp + 0x170] = a1
  2037: c8 58 07                 a0 = a1 + s0
  2040: 33 09 20                 a2 = 0x20
  2043: 82 18 68 01              a1 = u64 [sp + 0x168]
  2047: 50 10 60 f7 18           ra = 96, jump @482
      :                          @153 [@dyn 48]
  2052: 95 58 20                 a1 = s0 + 0x20
  2055: c9 86 07                 a0 = s1 - a1
  2058: 7b 18 f0 01              u64 [sp + 0x1f0] = a1
  2062: 82 19 60 01              a2 = u64 [sp + 0x160]
  2066: ac 97 11 11              jump @278 if a0 <u a2
      :                          @154
  2070: 82 15 70 01              s0 = u64 [sp + 0x170]
  2074: 01                       fallthrough
      :                          @155
  2075: 7b 18 70 01              u64 [sp + 0x170] = a1
  2079: c8 85 07                 a0 = s0 + a1
  2082: 82 18 58 01              a1 = u64 [sp + 0x158]
  2086: 50 10 62 d0 18           ra = 98, jump @482
      :                          @156 [@dyn 49]
  2091: 82 17 70 01              a0 = u64 [sp + 0x170]
  2095: 82 18 60 01              a1 = u64 [sp + 0x160]
  2099: c8 87 07                 a0 = a0 + a1
  2102: 7b 15 70 01              u64 [sp + 0x170] = s0
  2106: 7b 15 c8 01              u64 [sp + 0x1c8] = s0
  2110: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
  2114: 95 17 c8 01              a0 = sp + 0x1c8
  2118: 7b 17 98 01              u64 [sp + 0x198] = a0
  2122: 33 07 02                 a0 = 0x2
  2125: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  2129: 49 21 e0 01 02           u64 [sp + 480] = 0x2
  2134: 49 21 f0 01 02           u64 [sp + 496] = 0x2
  2139: 49 21 00 02              u64 [sp + 512] = 0
  2143: 14 08 20 00 00 00 10 00 00 00 a1 = 0x1000000020
  2153: 7b 18 08 02              u64 [sp + 0x208] = a1
  2157: 46 21 10 02 03           u8 [sp + 528] = 0x3
  2162: 33 08 10 00 01           a1 = 0x10010
  2167: 7b 18 40 03              u64 [sp + 0x340] = a1
  2171: 49 21 48 03 01           u64 [sp + 840] = 0x1
  2176: 95 18 e0 01              a1 = sp + 0x1e0
  2180: 7b 18 60 03              u64 [sp + 0x360] = a1
  2184: 49 21 68 03 01           u64 [sp + 872] = 0x1
  2189: 95 18 98 01              a1 = sp + 0x198
  2193: 7b 18 50 03              u64 [sp + 0x350] = a1
  2197: 49 21 58 03 01           u64 [sp + 856] = 0x1
  2202: 95 17 c0 02              a0 = sp + 0x2c0
  2206: 95 18 40 03              a1 = sp + 0x340
  2210: 50 10 64 da 15           ra = 100, jump @432
      :                          @157 [@dyn 50]
  2215: 82 15 c8 02              s0 = u64 [sp + 0x2c8]
  2219: 82 1b d0 02              a4 = u64 [sp + 0x2d0]
  2223: 82 17 c0 02              a0 = u64 [sp + 0x2c0]
  2227: 7b 17 68 01              u64 [sp + 0x168] = a0
  2231: 33 07 02                 a0 = 0x2
  2234: 33 08                    a1 = 0
  2236: 33 09                    a2 = 0
  2238: 64 5a                    a3 = s0
  2240: 33 00 66                 ra = 0x66
  2243: 0a 64                    ecalli 100 // 'log'
  2245: 01                       fallthrough
      :                          @158 [@dyn 51]
  2246: 82 17 68 01              a0 = u64 [sp + 0x168]
  2250: 82 13 38                 t1 = u64 [sp + 0x38]
  2253: c8 37 08                 a1 = a0 + t1
  2256: 33 02 00 00 ff           t0 = 0xffffffffffff0000
  2261: ac 28 22                 jump @164 if a1 <u t0
      :                          @159
  2264: 33 08 70 0a 03           a1 = 0x30a70
  2269: 95 88 00 00 01           a1 = a1 + 0x10000
  2274: 01                       fallthrough
      :                          @160
  2275: 82 89                    a2 = u64 [a1]
  2277: c9 98 0a                 a3 = a1 - a2
  2280: ab 5a 0f                 jump @164 if a3 != s0
      :                          @161
  2283: c9 79 0a                 a3 = a2 - a0
  2286: 01                       fallthrough
      :                          @162
  2287: 82 8b                    a4 = u64 [a1]
  2289: ab 9b f2                 jump @160 if a4 != a2
      :                          @163
  2292: 7b 8a                    u64 [a1] = a3
  2294: 01                       fallthrough
      :                          @164
  2295: c8 36 08                 a1 = s1 + t1
  2298: 82 1c 70 01              a5 = u64 [sp + 0x170]
  2302: ac 28 d7 00              jump @180 if a1 <u t0
      :                          @165
  2306: 33 07 70 0a 03           a0 = 0x30a70
  2311: 95 77 00 00 01           a0 = a0 + 0x10000
  2316: 01                       fallthrough
      :                          @166
  2317: 82 78                    a1 = u64 [a0]
  2319: c9 87 09                 a2 = a0 - a1
  2322: ab c9 c3 00              jump @180 if a2 != a5
      :                          @167
  2326: c9 68 09                 a2 = a1 - s1
  2329: 01                       fallthrough
      :                          @168
  2330: 82 7a                    a3 = u64 [a0]
  2332: ab 8a f1                 jump @166 if a3 != a1
      :                          @169
  2335: 7b 79                    u64 [a0] = a2
  2337: 33 0b                    a4 = 0
  2339: 01                       fallthrough
      :                          @170
  2340: ab 8a e9                 jump @166 if a3 != a1
      :                          @171
  2343: 28 ae 00                 jump @180
      :                          @172
  2346: 95 17 80 01              a0 = sp + 0x180
  2350: 7b 17 98 01              u64 [sp + 0x198] = a0
  2354: 33 07 02                 a0 = 0x2
  2357: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  2361: 49 21 e0 01 02           u64 [sp + 480] = 0x2
  2366: 49 21 f0 01 02           u64 [sp + 496] = 0x2
  2371: 49 21 00 02              u64 [sp + 512] = 0
  2375: 14 08 20 00 00 00 10 00 00 00 a1 = 0x1000000020
  2385: 7b 18 08 02              u64 [sp + 0x208] = a1
  2389: 46 21 10 02 03           u8 [sp + 528] = 0x3
  2394: 33 08 10 00 01           a1 = 0x10010
  2399: 7b 18 40 03              u64 [sp + 0x340] = a1
  2403: 49 21 48 03 01           u64 [sp + 840] = 0x1
  2408: 95 18 e0 01              a1 = sp + 0x1e0
  2412: 7b 18 60 03              u64 [sp + 0x360] = a1
  2416: 49 21 68 03 01           u64 [sp + 872] = 0x1
  2421: 95 18 98 01              a1 = sp + 0x198
  2425: 7b 18 50 03              u64 [sp + 0x350] = a1
  2429: 49 21 58 03 01           u64 [sp + 856] = 0x1
  2434: 95 17 c0 02              a0 = sp + 0x2c0
  2438: 95 18 40 03              a1 = sp + 0x340
  2442: 50 10 68 f2 14           ra = 104, jump @432
      :                          @173 [@dyn 52]
  2447: 82 15 c8 02              s0 = u64 [sp + 0x2c8]
  2451: 82 1b d0 02              a4 = u64 [sp + 0x2d0]
  2455: 82 16 c0 02              s1 = u64 [sp + 0x2c0]
  2459: 33 07 02                 a0 = 0x2
  2462: 33 08                    a1 = 0
  2464: 33 09                    a2 = 0
  2466: 64 5a                    a3 = s0
  2468: 33 00 6a                 ra = 0x6a
  2471: 0a 64                    ecalli 100 // 'log'
  2473: 01                       fallthrough
      :                          @174 [@dyn 53]
  2474: 82 17 38                 a0 = u64 [sp + 0x38]
  2477: c8 67 07                 a0 = a0 + s1
  2480: 53 37 00 00 ff 25        jump @180 if a0 <u 4294901760
      :                          @175
  2486: 33 07 70 0a 03           a0 = 0x30a70
  2491: 95 77 00 00 01           a0 = a0 + 0x10000
  2496: 01                       fallthrough
      :                          @176
  2497: 82 78                    a1 = u64 [a0]
  2499: c9 87 09                 a2 = a0 - a1
  2502: ab 59 0f                 jump @180 if a2 != s0
      :                          @177
  2505: c9 68 09                 a2 = a1 - s1
  2508: 01                       fallthrough
      :                          @178
  2509: 82 7a                    a3 = u64 [a0]
  2511: ab 8a f2                 jump @176 if a3 != a1
      :                          @179
  2514: 7b 79                    u64 [a0] = a2
  2516: 01                       fallthrough
      :                          @180
  2517: 95 17 78 01              a0 = sp + 0x178
  2521: 7b 17 c0 02              u64 [sp + 0x2c0] = a0
  2525: 33 07 0e                 a0 = 0xe
  2528: 7b 17 c8 02              u64 [sp + 0x2c8] = a0
  2532: 95 17 80 01              a0 = sp + 0x180
  2536: 7b 17 d0 02              u64 [sp + 0x2d0] = a0
  2540: 33 07 02                 a0 = 0x2
  2543: 7b 17 d8 02              u64 [sp + 0x2d8] = a0
  2547: 49 21 e0 01 02           u64 [sp + 480] = 0x2
  2552: 49 21 f0 01 02           u64 [sp + 496] = 0x2
  2557: 49 21 00 02              u64 [sp + 512] = 0
  2561: 14 09 20 00 00 00 10 00 00 00 a2 = 0x1000000020
  2571: 7b 19 08 02              u64 [sp + 0x208] = a2
  2575: 7c 1b 91 01              a4 = u8 [sp + 0x191]
  2579: 7c 1c 92 01              a5 = u8 [sp + 0x192]
  2583: 7c 16 93 01              s1 = u8 [sp + 0x193]
  2587: 46 21 10 02 03           u8 [sp + 528] = 0x3
  2592: 78 1b 11 02              u8 [sp + 0x211] = a4
  2596: 78 1c 12 02              u8 [sp + 0x212] = a5
  2600: 78 16 13 02              u8 [sp + 0x213] = s1
  2604: 7c 1b 94 01              a4 = u8 [sp + 0x194]
  2608: 7c 1c 95 01              a5 = u8 [sp + 0x195]
  2612: 7c 16 96 01              s1 = u8 [sp + 0x196]
  2616: 7c 15 97 01              s0 = u8 [sp + 0x197]
  2620: 78 1b 14 02              u8 [sp + 0x214] = a4
  2624: 78 1c 15 02              u8 [sp + 0x215] = a5
  2628: 78 16 16 02              u8 [sp + 0x216] = s1
  2632: 78 15 17 02              u8 [sp + 0x217] = s0
  2636: 49 21 18 02 02           u64 [sp + 536] = 0x2
  2641: 49 21 28 02 02           u64 [sp + 552] = 0x2
  2646: 49 21 38 02 01           u64 [sp + 568] = 0x1
  2651: 7b 19 40 02              u64 [sp + 0x240] = a2
  2655: 46 21 48 02 03           u8 [sp + 584] = 0x3
  2660: 33 08 40 00 01           a1 = 0x10040
  2665: 7b 18 40 03              u64 [sp + 0x340] = a1
  2669: 49 21 48 03 02           u64 [sp + 840] = 0x2
  2674: 95 18 e0 01              a1 = sp + 0x1e0
  2678: 7b 18 60 03              u64 [sp + 0x360] = a1
  2682: 49 21 68 03 02           u64 [sp + 872] = 0x2
  2687: 95 18 c0 02              a1 = sp + 0x2c0
  2691: 7b 18 50 03              u64 [sp + 0x350] = a1
  2695: 49 21 58 03 02           u64 [sp + 856] = 0x2
  2700: 95 17 98 01              a0 = sp + 0x198
  2704: 95 18 40 03              a1 = sp + 0x340
  2708: 50 10 6c e8 13           ra = 108, jump @432
      :                          @181 [@dyn 54]
  2713: 82 15 a0 01              s0 = u64 [sp + 0x1a0]
  2717: 82 1b a8 01              a4 = u64 [sp + 0x1a8]
  2721: 82 16 98 01              s1 = u64 [sp + 0x198]
  2725: 33 07 02                 a0 = 0x2
  2728: 33 08                    a1 = 0
  2730: 33 09                    a2 = 0
  2732: 64 5a                    a3 = s0
  2734: 33 00 6e                 ra = 0x6e
  2737: 0a 64                    ecalli 100 // 'log'
  2739: 01                       fallthrough
      :                          @182 [@dyn 55]
  2740: 82 17 38                 a0 = u64 [sp + 0x38]
  2743: c8 67 07                 a0 = a0 + s1
  2746: 53 37 00 00 ff 25        jump @188 if a0 <u 4294901760
      :                          @183
  2752: 33 07 70 0a 03           a0 = 0x30a70
  2757: 95 77 00 00 01           a0 = a0 + 0x10000
  2762: 01                       fallthrough
      :                          @184
  2763: 82 78                    a1 = u64 [a0]
  2765: c9 87 09                 a2 = a0 - a1
  2768: ab 59 0f                 jump @188 if a2 != s0
      :                          @185
  2771: c9 68 09                 a2 = a1 - s1
  2774: 01                       fallthrough
      :                          @186
  2775: 82 7a                    a3 = u64 [a0]
  2777: ab 8a f2                 jump @184 if a3 != a1
      :                          @187
  2780: 7b 79                    u64 [a0] = a2
  2782: 01                       fallthrough
      :                          @188
  2783: 82 17 80 01              a0 = u64 [sp + 0x180]
  2787: 7b 17 88 00              u64 [sp + 0x88] = a0
  2791: 82 15 88 01              s0 = u64 [sp + 0x188]
  2795: 95 17 30 02              a0 = sp + 0x230
  2799: 33 09 80 00              a2 = 0x80
  2803: 33 08                    a1 = 0
  2805: 50 10 70 b3 16           ra = 112, jump @500
      :                          @189 [@dyn 56]
  2810: 64 5b                    a4 = s0
  2812: 3a 0c 00 00 03           a5 = u64 [0x30000]
  2817: 3a 07 08 00 03           a0 = u64 [0x30008]
  2822: 3a 08 10 00 03           a1 = u64 [0x30010]
  2827: 3a 09 18 00 03           a2 = u64 [0x30018]
  2832: 7b 1c e0 01              u64 [sp + 0x1e0] = a5
  2836: 7b 17 30                 u64 [sp + 0x30] = a0
  2839: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
  2843: 7b 18 28                 u64 [sp + 0x28] = a1
  2846: 7b 18 f0 01              u64 [sp + 0x1f0] = a1
  2850: 7b 19 20                 u64 [sp + 0x20] = a2
  2853: 7b 19 f8 01              u64 [sp + 0x1f8] = a2
  2857: 3a 06 20 00 03           s1 = u64 [0x30020]
  2862: 3a 0a 28 00 03           a3 = u64 [0x30028]
  2867: 3a 07 30 00 03           a0 = u64 [0x30030]
  2872: 33 05 38 00 03           s0 = 0x30038
  2877: 3a 08 38 00 03           a1 = u64 [0x30038]
  2882: 7b 16 00 02              u64 [sp + 0x200] = s1
  2886: 7b 1a 08 02              u64 [sp + 0x208] = a3
  2890: 7b 17 18                 u64 [sp + 0x18] = a0
  2893: 7b 17 10 02              u64 [sp + 0x210] = a0
  2897: 7b 18 10                 u64 [sp + 0x10] = a1
  2900: 7b 18 18 02              u64 [sp + 0x218] = a1
  2904: 49 21 20 02              u64 [sp + 544] = 0
  2908: 49 21 28 02              u64 [sp + 552] = 0
  2912: 49 21 b0 02              u64 [sp + 688] = 0
  2916: 46 21 b8 02              u8 [sp + 696] = 0
  2920: 7b 1a 98 00              u64 [sp + 0x98] = a3
  2924: 7b 16 a0 00              u64 [sp + 0xa0] = s1
  2928: 51 0b ca 05              jump @224 if a4 == 0
      :                          @190
  2932: 33 03                    t1 = 0
  2934: 33 0c                    a5 = 0
  2936: 3a 07 40 00 03           a0 = u64 [0x30040]
  2941: 7b 17 08                 u64 [sp + 0x8] = a0
  2944: 33 07 13 02 01           a0 = 0x10213
  2949: 7b 17                    u64 [sp] = a0
  2951: 7b 1b 90 00              u64 [sp + 0x90] = a4
  2955: 01                       fallthrough
      :                          @191
  2956: 52 23 80 00 2a           jump @194 if t1 != 128
      :                          @192
  2961: 82 17 20 02              a0 = u64 [sp + 0x220]
  2965: 95 75 80 00              s0 = a0 + 0x80
  2969: 7b 15 20 02              u64 [sp + 0x220] = s0
  2973: 82 19 28 02              a2 = u64 [sp + 0x228]
  2977: 7b 1c 80 00              u64 [sp + 0x80] = a5
  2981: 53 17 80 32              jump @198 if a0 <u 4294967168
      :                          @193
  2985: 95 99 01                 a2 = a2 + 0x1
  2988: 7b 19 70 01              u64 [sp + 0x170] = a2
  2992: 7b 19 28 02              u64 [sp + 0x228] = a2
  2996: 28 28                    jump @199
      :                          @194
  2998: 9a 37 80 00              a0 = 0x80 - t1
  3002: c9 cb 08                 a1 = a4 - a5
  3005: e6 87 05                 s0 = minu(a0, a1)
  3008: c8 35 09                 a2 = s0 + t1
  3011: ac 59 86 0d              jump @289 if a2 <u s0
      :                          @195
  3015: 56 29 80 00 81 0d        jump @288 if a2 >u 128
      :                          @196
  3021: c8 c5 06                 s1 = s0 + a5
  3024: ae 56 21 05              jump @219 if s1 >=u s0
      :                          @197
  3028: 28 72 0d                 jump @286
      :                          @198
  3031: 7b 19 70 01              u64 [sp + 0x170] = a2
  3035: 01                       fallthrough
      :                          @199
  3036: 95 17 40 03              a0 = sp + 0x340
  3040: 33 09 80 00              a2 = 0x80
  3044: 95 18 30 02              a1 = sp + 0x230
  3048: 50 10 72 0e 15           ra = 114, jump @482
      :                          @200 [@dyn 57]
  3053: 82 16 e0 01              s1 = u64 [sp + 0x1e0]
  3057: 82 1c e8 01              a5 = u64 [sp + 0x1e8]
  3061: 82 13 f0 01              t1 = u64 [sp + 0x1f0]
  3065: 82 12 f8 01              t0 = u64 [sp + 0x1f8]
  3069: 82 1b 00 02              a4 = u64 [sp + 0x200]
  3073: 82 1a 08 02              a3 = u64 [sp + 0x208]
  3077: 82 18 10 02              a1 = u64 [sp + 0x210]
  3081: 82 14 18 02              t2 = u64 [sp + 0x218]
  3085: 82 17 a0 00              a0 = u64 [sp + 0xa0]
  3089: d3 57 07                 a0 = a0 ^ s0
  3092: 7b 17 28 01              u64 [sp + 0x128] = a0
  3096: 82 17 98 00              a0 = u64 [sp + 0x98]
  3100: 82 19 70 01              a2 = u64 [sp + 0x170]
  3104: d3 97 07                 a0 = a0 ^ a2
  3107: 7b 17 38 01              u64 [sp + 0x138] = a0
  3111: 33 05 0c                 s0 = 0xc
  3114: 82 17                    a0 = u64 [sp]
  3116: 7b 16 40                 u64 [sp + 0x40] = s1
  3119: 7b 16 20 01              u64 [sp + 0x120] = s1
  3123: 64 76                    s1 = a0
  3125: 7b 1b 60                 u64 [sp + 0x60] = a4
  3128: 64 b9                    a2 = a4
  3130: 82 17 08                 a0 = u64 [sp + 0x8]
  3133: 7b 17 48 01              u64 [sp + 0x148] = a0
  3137: 7b 1c 48                 u64 [sp + 0x48] = a5
  3140: 7b 1c 30 01              u64 [sp + 0x130] = a5
  3144: 7b 1a 68                 u64 [sp + 0x68] = a3
  3147: 64 a0                    ra = a3
  3149: 82 17 30                 a0 = u64 [sp + 0x30]
  3152: 7b 17 58 01              u64 [sp + 0x158] = a0
  3156: 7b 13 50                 u64 [sp + 0x50] = t1
  3159: 7b 13 40 01              u64 [sp + 0x140] = t1
  3163: 7b 18 70                 u64 [sp + 0x70] = a1
  3166: 64 8a                    a3 = a1
  3168: 82 1b 18                 a4 = u64 [sp + 0x18]
  3171: 82 17 28                 a0 = u64 [sp + 0x28]
  3174: 7b 17 68 01              u64 [sp + 0x168] = a0
  3178: 7b 12 58                 u64 [sp + 0x58] = t0
  3181: 64 2c                    a5 = t0
  3183: 7b 14 78                 u64 [sp + 0x78] = t2
  3186: 64 42                    t0 = t2
  3188: 82 17 10                 a0 = u64 [sp + 0x10]
  3191: 7b 17 50 01              u64 [sp + 0x150] = a0
  3195: 82 17 20                 a0 = u64 [sp + 0x20]
  3198: 7b 17 60 01              u64 [sp + 0x160] = a0
  3202: 01                       fallthrough
      :                          @201
  3203: 7b 10 18 01              u64 [sp + 0x118] = ra
  3207: 7b 1a 70 01              u64 [sp + 0x170] = a3
  3211: 7c 60 f9                 ra = u8 [s1 + 0xfffffffffffffff9]
  3214: 56 10 0f b2 0c           jump @280 if ra >u 15
      :                          @202
  3219: 7c 67 fa                 a0 = u8 [s1 + 0xfffffffffffffffa]
  3222: 33 08 10                 a1 = 0x10
  3225: ae 87 59 0c              jump @270 if a0 >=u a1
      :                          @203
  3229: 7b 1b 10 01              u64 [sp + 0x110] = a4
  3233: 7c 63 fb                 t1 = u8 [s1 + 0xfffffffffffffffb]
  3236: 55 13 10 4f 0c           jump @271 if t1 >=u 16
      :                          @204
  3241: 7b 15 08 01              u64 [sp + 0x108] = s0
  3245: 7c 64 fc                 t2 = u8 [s1 + 0xfffffffffffffffc]
  3248: 55 14 10 91 0c           jump @281 if t2 >=u 16
      :                          @205
  3253: 7b 1c 00 01              u64 [sp + 0x100] = a5
  3257: 7c 6c fd                 a5 = u8 [s1 + 0xfffffffffffffffd]
  3260: 55 1c 10 38 0c           jump @272 if a5 >=u 16
      :                          @206
  3265: 7b 12 f8 00              u64 [sp + 0xf8] = t0
  3269: 7c 62 fe                 t0 = u8 [s1 + 0xfffffffffffffffe]
  3272: 55 12 10 7a 0c           jump @282 if t0 >=u 16
      :                          @207
  3277: 7c 6a ff                 a3 = u8 [s1 + 0xffffffffffffffff]
  3280: 55 1a 10 25 0c           jump @273 if a3 >=u 16
      :                          @208
  3285: 7c 6b                    a4 = u8 [s1]
  3287: 55 1b 10 1f 0c           jump @274 if a4 >=u 16
      :                          @209
  3292: 7c 65 01                 s0 = u8 [s1 + 0x1]
  3295: 55 15 10 8c 0b           jump @264 if s0 >=u 16
      :                          @210
  3300: 7b 15 f0 00              u64 [sp + 0xf0] = s0
  3304: 7c 65 02                 s0 = u8 [s1 + 0x2]
  3307: 55 15 10 80 0b           jump @264 if s0 >=u 16
      :                          @211
  3312: 7b 15 e8 00              u64 [sp + 0xe8] = s0
  3316: 7c 65 03                 s0 = u8 [s1 + 0x3]
  3319: 55 15 10 74 0b           jump @264 if s0 >=u 16
      :                          @212
  3324: 7b 15 e0 00              u64 [sp + 0xe0] = s0
  3328: 7c 65 04                 s0 = u8 [s1 + 0x4]
  3331: 55 15 10 68 0b           jump @264 if s0 >=u 16
      :                          @213
  3336: 7b 15 d8 00              u64 [sp + 0xd8] = s0
  3340: 7c 65 05                 s0 = u8 [s1 + 0x5]
  3343: 55 15 10 5c 0b           jump @264 if s0 >=u 16
      :                          @214
  3348: 7b 15 d0 00              u64 [sp + 0xd0] = s0
  3352: 7c 65 06                 s0 = u8 [s1 + 0x6]
  3355: 55 15 10 50 0b           jump @264 if s0 >=u 16
      :                          @215
  3360: 7b 15 c8 00              u64 [sp + 0xc8] = s0
  3364: 7c 65 07                 s0 = u8 [s1 + 0x7]
  3367: 55 15 10 44 0b           jump @264 if s0 >=u 16
      :                          @216
  3372: 7b 15 c0 00              u64 [sp + 0xc0] = s0
  3376: 7c 65 08                 s0 = u8 [s1 + 0x8]
  3379: 55 15 10 38 0b           jump @264 if s0 >=u 16
      :                          @217
  3384: 97 00 03                 ra = ra << 0x3
  3387: 95 18 40 03              a1 = sp + 0x340
  3391: c8 80 00                 ra = ra + a1
  3394: 7b 15 b0 00              u64 [sp + 0xb0] = s0
  3398: 82 05                    s0 = u64 [ra]
  3400: 97 77 03                 a0 = a0 << 0x3
  3403: c8 87 07                 a0 = a0 + a1
  3406: 82 77                    a0 = u64 [a0]
  3408: 7b 16 b8 00              u64 [sp + 0xb8] = s1
  3412: 7b 19 a8 00              u64 [sp + 0xa8] = a2
  3416: 82 16 20 01              s1 = u64 [sp + 0x120]
  3420: c8 96 06                 s1 = s1 + a2
  3423: c8 65 05                 s0 = s0 + s1
  3426: 82 19 28 01              a2 = u64 [sp + 0x128]
  3430: d3 59 09                 a2 = a2 ^ s0
  3433: 7b 19 20 01              u64 [sp + 0x120] = a2
  3437: c8 57 07                 a0 = a0 + s0
  3440: 7b 17 28 01              u64 [sp + 0x128] = a0
  3444: 97 33 03                 t1 = t1 << 0x3
  3447: c8 83 03                 t1 = t1 + a1
  3450: 82 37                    a0 = u64 [t1]
  3452: 97 44 03                 t2 = t2 << 0x3
  3455: c8 84 04                 t2 = t2 + a1
  3458: 82 45                    s0 = u64 [t2]
  3460: 82 10 18 01              ra = u64 [sp + 0x118]
  3464: 82 16 30 01              s1 = u64 [sp + 0x130]
  3468: c8 06 06                 s1 = s1 + ra
  3471: c8 67 07                 a0 = a0 + s1
  3474: 82 19 38 01              a2 = u64 [sp + 0x138]
  3478: d3 97 03                 t1 = a0 ^ a2
  3481: c8 57 04                 t2 = a0 + s0
  3484: 97 cc 03                 a5 = a5 << 0x3
  3487: c8 8c 0c                 a5 = a5 + a1
  3490: 82 c7                    a0 = u64 [a5]
  3492: 97 22 03                 t0 = t0 << 0x3
  3495: c8 82 02                 t0 = t0 + a1
  3498: 82 2c                    a5 = u64 [t0]
  3500: 82 16 40 01              s1 = u64 [sp + 0x140]
  3504: 82 18 70 01              a1 = u64 [sp + 0x170]
  3508: c8 86 06                 s1 = s1 + a1
  3511: c8 67 07                 a0 = a0 + s1
  3514: 82 19 10 01              a2 = u64 [sp + 0x110]
  3518: d3 79 09                 a2 = a2 ^ a0
  3521: 7b 19 40 01              u64 [sp + 0x140] = a2
  3525: c8 c7 07                 a0 = a0 + a5
  3528: 7b 17 38 01              u64 [sp + 0x138] = a0
  3532: 97 aa 03                 a3 = a3 << 0x3
  3535: 95 18 40 03              a1 = sp + 0x340
  3539: c8 8a 0a                 a3 = a3 + a1
  3542: 82 a7                    a0 = u64 [a3]
  3544: 97 bb 03                 a4 = a4 << 0x3
  3547: c8 8b 0b                 a4 = a4 + a1
  3550: 82 ba                    a3 = u64 [a4]
  3552: 82 16 f8 00              s1 = u64 [sp + 0xf8]
  3556: 82 1b 00 01              a4 = u64 [sp + 0x100]
  3560: c8 6b 0b                 a4 = a4 + s1
  3563: c8 b7 07                 a0 = a0 + a4
  3566: 82 1b 50 01              a4 = u64 [sp + 0x150]
  3570: d3 7b 0b                 a4 = a4 ^ a0
  3573: c8 a7 02                 t0 = a0 + a3
  3576: 82 17 20 01              a0 = u64 [sp + 0x120]
  3580: 9e 77 20                 a0 = a0 >>r 0x20
  3583: 82 1a 48 01              a3 = u64 [sp + 0x148]
  3587: c8 7a 0a                 a3 = a3 + a0
  3590: 82 15 a8 00              s0 = u64 [sp + 0xa8]
  3594: d3 a5 05                 s0 = s0 ^ a3
  3597: 82 19 f0 00              a2 = u64 [sp + 0xf0]
  3601: 97 99 03                 a2 = a2 << 0x3
  3604: c8 89 09                 a2 = a2 + a1
  3607: 82 99                    a2 = u64 [a2]
  3609: 9e 58 18                 a1 = s0 >>r 0x18
  3612: 7b 18 50 01              u64 [sp + 0x150] = a1
  3616: 82 15 28 01              s0 = u64 [sp + 0x128]
  3620: c8 85 05                 s0 = s0 + a1
  3623: d3 57 07                 a0 = a0 ^ s0
  3626: c8 59 09                 a2 = a2 + s0
  3629: 9e 35 20                 s0 = t1 >>r 0x20
  3632: 82 18 58 01              a1 = u64 [sp + 0x158]
  3636: c8 85 03                 t1 = s0 + a1
  3639: d3 03 0c                 a5 = t1 ^ ra
  3642: 9e cc 18                 a5 = a5 >>r 0x18
  3645: c8 c4 04                 t2 = t2 + a5
  3648: d3 54 05                 s0 = t2 ^ s0
  3651: 9e 58 10                 a1 = s0 >>r 0x10
  3654: 7b 18 48 01              u64 [sp + 0x148] = a1
  3658: c8 38 08                 a1 = a1 + t1
  3661: 7b 18 58 01              u64 [sp + 0x158] = a1
  3665: d3 c8 08                 a1 = a1 ^ a5
  3668: 9e 88 3f                 a1 = a1 >>r 0x3f
  3671: 7b 18 30 01              u64 [sp + 0x130] = a1
  3675: 9e bb 20                 a4 = a4 >>r 0x20
  3678: 82 10 60 01              ra = u64 [sp + 0x160]
  3682: c8 b0 00                 ra = ra + a4
  3685: d3 60 0c                 a5 = ra ^ s1
  3688: 9e c5 18                 s0 = a5 >>r 0x18
  3691: c8 52 03                 t1 = t0 + s0
  3694: d3 b3 0b                 a4 = t1 ^ a4
  3697: 9e bb 10                 a4 = a4 >>r 0x10
  3700: c8 b0 00                 ra = ra + a4
  3703: 7b 10 10 01              u64 [sp + 0x110] = ra
  3707: 82 1c e8 00              a5 = u64 [sp + 0xe8]
  3711: 97 cc 03                 a5 = a5 << 0x3
  3714: 95 16 40 03              s1 = sp + 0x340
  3718: c8 6c 0c                 a5 = a5 + s1
  3721: 82 cc                    a5 = u64 [a5]
  3723: 82 12 e0 00              t0 = u64 [sp + 0xe0]
  3727: 97 22 03                 t0 = t0 << 0x3
  3730: c8 62 02                 t0 = t0 + s1
  3733: 82 22                    t0 = u64 [t0]
  3735: c8 89 09                 a2 = a2 + a1
  3738: d3 9b 0b                 a4 = a4 ^ a2
  3741: 7b 1b 28 01              u64 [sp + 0x128] = a4
  3745: c8 c9 09                 a2 = a2 + a5
  3748: 7b 19 60 01              u64 [sp + 0x160] = a2
  3752: c8 24 04                 t2 = t2 + t0
  3755: 9e 76 10                 s1 = a0 >>r 0x10
  3758: c8 6a 0a                 a3 = a3 + s1
  3761: 7b 1a 18 01              u64 [sp + 0x118] = a3
  3765: 82 17 40 01              a0 = u64 [sp + 0x140]
  3769: 9e 79 20                 a2 = a0 >>r 0x20
  3772: 82 12 68 01              t0 = u64 [sp + 0x168]
  3776: c8 92 02                 t0 = t0 + a2
  3779: 82 17 70 01              a0 = u64 [sp + 0x170]
  3783: d3 72 0c                 a5 = t0 ^ a0
  3786: 9e cb 18                 a4 = a5 >>r 0x18
  3789: 82 17 38 01              a0 = u64 [sp + 0x138]
  3793: c8 b7 07                 a0 = a0 + a4
  3796: d3 79 09                 a2 = a2 ^ a0
  3799: 9e 90 10                 ra = a2 >>r 0x10
  3802: c8 02 02                 t0 = t0 + ra
  3805: d3 b2 0b                 a4 = t0 ^ a4
  3808: 9e b8 3f                 a1 = a4 >>r 0x3f
  3811: 7b 18 40 01              u64 [sp + 0x140] = a1
  3815: 82 1a d8 00              a3 = u64 [sp + 0xd8]
  3819: 97 aa 03                 a3 = a3 << 0x3
  3822: 95 19 40 03              a2 = sp + 0x340
  3826: c8 9a 0a                 a3 = a3 + a2
  3829: 82 aa                    a3 = u64 [a3]
  3831: 82 1b d0 00              a4 = u64 [sp + 0xd0]
  3835: 97 bb 03                 a4 = a4 << 0x3
  3838: c8 9b 0b                 a4 = a4 + a2
  3841: 82 bb                    a4 = u64 [a4]
  3843: c8 84 04                 t2 = t2 + a1
  3846: d3 64 06                 s1 = t2 ^ s1
  3849: c8 4a 0a                 a3 = a3 + t2
  3852: 7b 1a 70 01              u64 [sp + 0x170] = a3
  3856: c8 7b 0b                 a4 = a4 + a0
  3859: 82 18 10 01              a1 = u64 [sp + 0x110]
  3863: d3 58 07                 a0 = a1 ^ s0
  3866: 9e 7c 3f                 a5 = a0 >>r 0x3f
  3869: 82 1a c8 00              a3 = u64 [sp + 0xc8]
  3873: 97 aa 03                 a3 = a3 << 0x3
  3876: c8 9a 0a                 a3 = a3 + a2
  3879: 82 aa                    a3 = u64 [a3]
  3881: 82 15 c0 00              s0 = u64 [sp + 0xc0]
  3885: 97 55 03                 s0 = s0 << 0x3
  3888: c8 95 05                 s0 = s0 + a2
  3891: 82 55                    s0 = u64 [s0]
  3893: c8 cb 0b                 a4 = a4 + a5
  3896: 82 17 48 01              a0 = u64 [sp + 0x148]
  3900: d3 b7 07                 a0 = a0 ^ a4
  3903: 7b 17 38 01              u64 [sp + 0x138] = a0
  3907: c8 ba 0a                 a3 = a3 + a4
  3910: 7b 1a 48 01              u64 [sp + 0x148] = a3
  3914: c8 53 03                 t1 = t1 + s0
  3917: 82 1a 50 01              a3 = u64 [sp + 0x150]
  3921: 82 17 18 01              a0 = u64 [sp + 0x118]
  3925: d3 a7 0b                 a4 = a0 ^ a3
  3928: 82 15 b0 00              s0 = u64 [sp + 0xb0]
  3932: 97 55 03                 s0 = s0 << 0x3
  3935: c8 95 05                 s0 = s0 + a2
  3938: 82 55                    s0 = u64 [s0]
  3940: 9e bb 3f                 a4 = a4 >>r 0x3f
  3943: c8 b3 03                 t1 = t1 + a4
  3946: d3 03 04                 t2 = t1 ^ ra
  3949: c8 53 03                 t1 = t1 + s0
  3952: 82 19 28 01              a2 = u64 [sp + 0x128]
  3956: 9e 95 20                 s0 = a2 >>r 0x20
  3959: c8 25 09                 a2 = s0 + t0
  3962: 82 1a 30 01              a3 = u64 [sp + 0x130]
  3966: d3 a9 00                 ra = a2 ^ a3
  3969: 9e 00 18                 ra = ra >>r 0x18
  3972: 82 1a 60 01              a3 = u64 [sp + 0x160]
  3976: c8 0a 0a                 a3 = a3 + ra
  3979: 7b 1a 20 01              u64 [sp + 0x120] = a3
  3983: d3 a5 05                 s0 = s0 ^ a3
  3986: 9e 5a 10                 a3 = s0 >>r 0x10
  3989: 7b 1a 50 01              u64 [sp + 0x150] = a3
  3993: c8 a9 09                 a2 = a2 + a3
  3996: 7b 19 68 01              u64 [sp + 0x168] = a2
  4000: d3 09 09                 a2 = a2 ^ ra
  4003: 9e 90 3f                 ra = a2 >>r 0x3f
  4006: 9e 69 20                 a2 = s1 >>r 0x20
  4009: c8 89 05                 s0 = a2 + a1
  4012: 82 16 40 01              s1 = u64 [sp + 0x140]
  4016: d3 56 06                 s1 = s1 ^ s0
  4019: 9e 66 18                 s1 = s1 >>r 0x18
  4022: 82 18 70 01              a1 = u64 [sp + 0x170]
  4026: c8 68 08                 a1 = a1 + s1
  4029: 7b 18 30 01              u64 [sp + 0x130] = a1
  4033: d3 89 09                 a2 = a2 ^ a1
  4036: 9e 99 10                 a2 = a2 >>r 0x10
  4039: 7b 19 28 01              u64 [sp + 0x128] = a2
  4043: c8 59 09                 a2 = a2 + s0
  4046: 7b 19 60 01              u64 [sp + 0x160] = a2
  4050: d3 69 09                 a2 = a2 ^ s1
  4053: 82 16 b8 00              s1 = u64 [sp + 0xb8]
  4057: 9e 9a 3f                 a3 = a2 >>r 0x3f
  4060: 82 18 38 01              a1 = u64 [sp + 0x138]
  4064: 9e 89 20                 a2 = a1 >>r 0x20
  4067: c8 79 08                 a1 = a2 + a0
  4070: d3 c8 07                 a0 = a1 ^ a5
  4073: 9e 77 18                 a0 = a0 >>r 0x18
  4076: 82 12 48 01              t0 = u64 [sp + 0x148]
  4080: c8 72 02                 t0 = t0 + a0
  4083: 7b 12 40 01              u64 [sp + 0x140] = t0
  4087: d3 92 09                 a2 = t0 ^ a2
  4090: 9e 99 10                 a2 = a2 >>r 0x10
  4093: 7b 19 38 01              u64 [sp + 0x138] = a2
  4097: c8 98 08                 a1 = a1 + a2
  4100: 7b 18 48 01              u64 [sp + 0x148] = a1
  4104: d3 87 07                 a0 = a0 ^ a1
  4107: 9e 72 3f                 t0 = a0 >>r 0x3f
  4110: 9e 47 20                 a0 = t2 >>r 0x20
  4113: 82 18 58 01              a1 = u64 [sp + 0x158]
  4117: c8 78 08                 a1 = a1 + a0
  4120: d3 8b 0b                 a4 = a4 ^ a1
  4123: 9e b9 18                 a2 = a4 >>r 0x18
  4126: c8 93 0c                 a5 = t1 + a2
  4129: d3 c7 07                 a0 = a0 ^ a5
  4132: 9e 7b 10                 a4 = a0 >>r 0x10
  4135: c8 8b 07                 a0 = a4 + a1
  4138: 7b 17 58 01              u64 [sp + 0x158] = a0
  4142: d3 97 07                 a0 = a0 ^ a2
  4145: 9e 79 3f                 a2 = a0 >>r 0x3f
  4148: 82 15 08 01              s0 = u64 [sp + 0x108]
  4152: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  4155: 95 66 10                 s1 = s1 + 0x10
  4158: 52 05 45 fc              jump @201 if s0 != 0
      :                          @218
  4162: 33 03                    t1 = 0
  4164: 82 17 40                 a0 = u64 [sp + 0x40]
  4167: 82 18 20 01              a1 = u64 [sp + 0x120]
  4171: d3 87 07                 a0 = a0 ^ a1
  4174: 82 18 48 01              a1 = u64 [sp + 0x148]
  4178: d3 87 07                 a0 = a0 ^ a1
  4181: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
  4185: 82 17 48                 a0 = u64 [sp + 0x48]
  4188: 82 18 30 01              a1 = u64 [sp + 0x130]
  4192: d3 87 07                 a0 = a0 ^ a1
  4195: 82 18 58 01              a1 = u64 [sp + 0x158]
  4199: d3 87 07                 a0 = a0 ^ a1
  4202: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
  4206: 82 17 50                 a0 = u64 [sp + 0x50]
  4209: 82 18 68 01              a1 = u64 [sp + 0x168]
  4213: d3 87 07                 a0 = a0 ^ a1
  4216: 82 18 40 01              a1 = u64 [sp + 0x140]
  4220: d3 87 07                 a0 = a0 ^ a1
  4223: 7b 17 f0 01              u64 [sp + 0x1f0] = a0
  4227: 82 17 58                 a0 = u64 [sp + 0x58]
  4230: 82 18 60 01              a1 = u64 [sp + 0x160]
  4234: d3 87 07                 a0 = a0 ^ a1
  4237: d3 c7 07                 a0 = a0 ^ a5
  4240: 7b 17 f8 01              u64 [sp + 0x1f8] = a0
  4244: 82 17 60                 a0 = u64 [sp + 0x60]
  4247: 82 18 28 01              a1 = u64 [sp + 0x128]
  4251: d3 87 07                 a0 = a0 ^ a1
  4254: d3 97 07                 a0 = a0 ^ a2
  4257: 7b 17 00 02              u64 [sp + 0x200] = a0
  4261: 82 17 68                 a0 = u64 [sp + 0x68]
  4264: d3 70 07                 a0 = ra ^ a0
  4267: 82 18 38 01              a1 = u64 [sp + 0x138]
  4271: d3 87 07                 a0 = a0 ^ a1
  4274: 7b 17 08 02              u64 [sp + 0x208] = a0
  4278: 82 17 70                 a0 = u64 [sp + 0x70]
  4281: d3 a7 07                 a0 = a0 ^ a3
  4284: d3 b7 07                 a0 = a0 ^ a4
  4287: 7b 17 10 02              u64 [sp + 0x210] = a0
  4291: 82 17 78                 a0 = u64 [sp + 0x78]
  4294: 82 18 50 01              a1 = u64 [sp + 0x150]
  4298: d3 87 07                 a0 = a0 ^ a1
  4301: d3 27 07                 a0 = a0 ^ t0
  4304: 7b 17 18 02              u64 [sp + 0x218] = a0
  4308: 49 21 b0 02              u64 [sp + 688] = 0
  4312: 82 1b 90 00              a4 = u64 [sp + 0x90]
  4316: 82 1c 80 00              a5 = u64 [sp + 0x80]
  4320: c9 cb 07                 a0 = a4 - a5
  4323: 33 08 80 00              a1 = 0x80
  4327: e6 87 05                 s0 = minu(a0, a1)
  4330: c8 c5 06                 s1 = s0 + a5
  4333: ac 56 59 08              jump @286 if s1 <u s0
      :                          @219
  4337: ac 6b 56 08              jump @287 if a4 <u s1
      :                          @220
  4341: 95 17 30 02              a0 = sp + 0x230
  4345: c8 37 07                 a0 = a0 + t1
  4348: 82 18 88 00              a1 = u64 [sp + 0x88]
  4352: c8 c8 08                 a1 = a1 + a5
  4355: 64 59                    a2 = s0
  4357: 50 10 74 f1 0f           ra = 116, jump @482
      :                          @221 [@dyn 58]
  4362: 82 17 b0 02              a0 = u64 [sp + 0x2b0]
  4366: c8 57 03                 t1 = a0 + s0
  4369: 7b 13 b0 02              u64 [sp + 0x2b0] = t1
  4373: 64 6c                    a5 = s1
  4375: 82 1b 90 00              a4 = u64 [sp + 0x90]
  4379: ac b6 71 fa              jump @191 if s1 <u a4
      :                          @222
  4383: 7c 17 b8 02              a0 = u8 [sp + 0x2b8]
  4387: 51 07 49 07              jump @265 if a0 == 0
      :                          @223
  4391: 49 21 b0 01              u64 [sp + 432] = 0
  4395: 49 21 a8 01              u64 [sp + 424] = 0
  4399: 49 21 a0 01              u64 [sp + 416] = 0
  4403: 49 21 98 01              u64 [sp + 408] = 0
  4407: 28 24 05                 jump @247
      :                          @224
  4410: 7b 1c 60                 u64 [sp + 0x60] = a5
  4413: 95 17 c0 02              a0 = sp + 0x2c0
  4417: 33 09 80 00              a2 = 0x80
  4421: 33 08                    a1 = 0
  4423: 50 10 76 61 10           ra = 118, jump @500
      :                          @225 [@dyn 59]
  4428: 3a 07 08 00 03           a0 = u64 [0x30008]
  4433: 7b 17 68                 u64 [sp + 0x68] = a0
  4436: 3a 07 10 00 03           a0 = u64 [0x30010]
  4441: 7b 17 70                 u64 [sp + 0x70] = a0
  4444: 3a 0c 18 00 03           a5 = u64 [0x30018]
  4449: 3a 07 30 00 03           a0 = u64 [0x30030]
  4454: 7b 17 68 01              u64 [sp + 0x168] = a0
  4458: 3a 07 38 00 03           a0 = u64 [0x30038]
  4463: 7b 17 48 01              u64 [sp + 0x148] = a0
  4467: 33 09                    a2 = 0
  4469: 82 17 98 00              a0 = u64 [sp + 0x98]
  4473: 7b 17 38 01              u64 [sp + 0x138] = a0
  4477: 7b 16 30 01              u64 [sp + 0x130] = s1
  4481: 01                       fallthrough
      :                          @226
  4482: 7b 1c 58                 u64 [sp + 0x58] = a5
  4485: 95 17 c0 02              a0 = sp + 0x2c0
  4489: 95 18 30 02              a1 = sp + 0x230
  4493: 64 c5                    s0 = a5
  4495: 50 10 78 67 0f           ra = 120, jump @482
      :                          @227 [@dyn 60]
  4500: 95 17 40 03              a0 = sp + 0x340
  4504: 95 18 c0 02              a1 = sp + 0x2c0
  4508: 33 09 80 00              a2 = 0x80
  4512: 50 10 7a 56 0f           ra = 122, jump @482
      :                          @228 [@dyn 61]
  4517: 33 0b 13 02 01           a4 = 0x10213
  4522: 3a 07 18 00 03           a0 = u64 [0x30018]
  4527: 7b 17 58 01              u64 [sp + 0x158] = a0
  4531: 3a 07 38 00 03           a0 = u64 [0x30038]
  4536: 7b 17 40 01              u64 [sp + 0x140] = a0
  4540: 3a 07 10 00 03           a0 = u64 [0x30010]
  4545: 7b 17 60 01              u64 [sp + 0x160] = a0
  4549: 3a 02 48 00 03           t0 = u64 [0x30048]
  4554: 3a 04 08 00 03           t2 = u64 [0x30008]
  4559: 3a 03 40 00 03           t1 = u64 [0x30040]
  4564: 33 06 0c                 s1 = 0xc
  4567: 33 0a 10                 a3 = 0x10
  4570: 82 17 60                 a0 = u64 [sp + 0x60]
  4573: 7b 17 50 01              u64 [sp + 0x150] = a0
  4577: 82 18 68                 a1 = u64 [sp + 0x68]
  4580: 64 80                    ra = a1
  4582: 82 19 70                 a2 = u64 [sp + 0x70]
  4585: 64 9c                    a5 = a2
  4587: 7b 19 70                 u64 [sp + 0x70] = a2
  4590: 7b 18 68                 u64 [sp + 0x68] = a1
  4593: 01                       fallthrough
      :                          @229
  4594: 7b 10 20 01              u64 [sp + 0x120] = ra
  4598: 7b 1c 28 01              u64 [sp + 0x128] = a5
  4602: 7c b0 f9                 ra = u8 [a4 + 0xfffffffffffffff9]
  4605: 56 10 0f 43 07           jump @280 if ra >u 15
      :                          @230
  4610: 64 4c                    a5 = t2
  4612: 7c b4 fa                 t2 = u8 [a4 + 0xfffffffffffffffa]
  4615: 55 14 10 3a 07           jump @281 if t2 >=u 16
      :                          @231
  4620: 7c b7 fb                 a0 = u8 [a4 + 0xfffffffffffffffb]
  4623: 55 17 10 e3 06           jump @270 if a0 >=u 16
      :                          @232
  4628: 7b 12 10 01              u64 [sp + 0x110] = t0
  4632: 7b 13 18 01              u64 [sp + 0x118] = t1
  4636: 7c b3 fc                 t1 = u8 [a4 + 0xfffffffffffffffc]
  4639: 55 13 10 d4 06           jump @271 if t1 >=u 16
      :                          @233
  4644: 7c b9 fd                 a2 = u8 [a4 + 0xfffffffffffffffd]
  4647: 55 19 10 1c 07           jump @283 if a2 >=u 16
      :                          @234
  4652: 7b 17 f8 00              u64 [sp + 0xf8] = a0
  4656: 7b 15 00 01              u64 [sp + 0x100] = s0
  4660: 7b 1c 08 01              u64 [sp + 0x108] = a5
  4664: 7c bc fe                 a5 = u8 [a4 + 0xfffffffffffffffe]
  4667: 55 1c 10 b9 06           jump @272 if a5 >=u 16
      :                          @235
  4672: 33 05 10                 s0 = 0x10
  4675: 7c b7 ff                 a0 = u8 [a4 + 0xffffffffffffffff]
  4678: ae 57 ac 06              jump @270 if a0 >=u s0
      :                          @236
  4682: 7b 1b 70 01              u64 [sp + 0x170] = a4
  4686: 7c bb                    a4 = u8 [a4]
  4688: 55 1b 10 a6 06           jump @274 if a4 >=u 16
      :                          @237
  4693: 7b 19 f0 00              u64 [sp + 0xf0] = a2
  4697: 82 19 70 01              a2 = u64 [sp + 0x170]
  4701: 7c 98 01                 a1 = u8 [a2 + 0x1]
  4704: 55 18 10 e4 06           jump @284 if a1 >=u 16
      :                          @238
  4709: 7b 16 e8 00              u64 [sp + 0xe8] = s1
  4713: 82 16 70 01              s1 = u64 [sp + 0x170]
  4717: 7c 6a 02                 a3 = u8 [s1 + 0x2]
  4720: 55 1a 10 85 06           jump @273 if a3 >=u 16
      :                          @239
  4725: 82 16 70 01              s1 = u64 [sp + 0x170]
  4729: 7c 69 03                 a2 = u8 [s1 + 0x3]
  4732: 55 19 10 c7 06           jump @283 if a2 >=u 16
      :                          @240
  4737: 7b 13 d8 00              u64 [sp + 0xd8] = t1
  4741: 7b 1c e0 00              u64 [sp + 0xe0] = a5
  4745: 82 16 70 01              s1 = u64 [sp + 0x170]
  4749: 7c 63 04                 t1 = u8 [s1 + 0x4]
  4752: 55 13 10 63 06           jump @271 if t1 >=u 16
      :                          @241
  4757: 7b 17 d0 00              u64 [sp + 0xd0] = a0
  4761: 82 16 70 01              s1 = u64 [sp + 0x170]
  4765: 7c 6c 05                 a5 = u8 [s1 + 0x5]
  4768: 55 1c 10 54 06           jump @272 if a5 >=u 16
      :                          @242
  4773: 7b 1b c8 00              u64 [sp + 0xc8] = a4
  4777: 82 16 70 01              s1 = u64 [sp + 0x170]
  4781: 7c 6b 06                 a4 = u8 [s1 + 0x6]
  4784: 55 1b 10 46 06           jump @274 if a4 >=u 16
      :                          @243
  4789: 7b 1a c0 00              u64 [sp + 0xc0] = a3
  4793: 82 16 70 01              s1 = u64 [sp + 0x170]
  4797: 7c 6a 07                 a3 = u8 [s1 + 0x7]
  4800: 55 1a 10 35 06           jump @273 if a3 >=u 16
      :                          @244
  4805: 7b 19 b8 00              u64 [sp + 0xb8] = a2
  4809: 82 16 70 01              s1 = u64 [sp + 0x170]
  4813: 7c 69 08                 a2 = u8 [s1 + 0x8]
  4816: 55 19 10 73 06           jump @283 if a2 >=u 16
      :                          @245
  4821: 97 00 03                 ra = ra << 0x3
  4824: 7b 18 88 00              u64 [sp + 0x88] = a1
  4828: 95 18 40 03              a1 = sp + 0x340
  4832: c8 80 00                 ra = ra + a1
  4835: 82 05                    s0 = u64 [ra]
  4837: 97 47 03                 a0 = t2 << 0x3
  4840: c8 87 07                 a0 = a0 + a1
  4843: 82 70                    ra = u64 [a0]
  4845: 82 16 50 01              s1 = u64 [sp + 0x150]
  4849: 82 17 a0 00              a0 = u64 [sp + 0xa0]
  4853: c8 76 06                 s1 = s1 + a0
  4856: c8 65 05                 s0 = s0 + s1
  4859: 82 16 30 01              s1 = u64 [sp + 0x130]
  4863: d3 56 06                 s1 = s1 ^ s0
  4866: 7b 16 78                 u64 [sp + 0x78] = s1
  4869: c8 05 07                 a0 = s0 + ra
  4872: 7b 17 80 00              u64 [sp + 0x80] = a0
  4876: 7b 19 50 01              u64 [sp + 0x150] = a2
  4880: 7b 1a 30 01              u64 [sp + 0x130] = a3
  4884: 7b 1b b0 00              u64 [sp + 0xb0] = a4
  4888: 7b 1c a8 00              u64 [sp + 0xa8] = a5
  4892: 7b 13 90 00              u64 [sp + 0x90] = t1
  4896: 82 13 f8 00              t1 = u64 [sp + 0xf8]
  4900: 97 33 03                 t1 = t1 << 0x3
  4903: c8 83 03                 t1 = t1 + a1
  4906: 82 37                    a0 = u64 [t1]
  4908: 82 14 d8 00              t2 = u64 [sp + 0xd8]
  4912: 97 44 03                 t2 = t2 << 0x3
  4915: c8 84 04                 t2 = t2 + a1
  4918: 82 45                    s0 = u64 [t2]
  4920: 82 10 98 00              ra = u64 [sp + 0x98]
  4924: 82 16 20 01              s1 = u64 [sp + 0x120]
  4928: c8 06 06                 s1 = s1 + ra
  4931: c8 67 07                 a0 = a0 + s1
  4934: 82 16 38 01              s1 = u64 [sp + 0x138]
  4938: d3 67 03                 t1 = a0 ^ s1
  4941: c8 57 04                 t2 = a0 + s0
  4944: 82 1c f0 00              a5 = u64 [sp + 0xf0]
  4948: 97 cc 03                 a5 = a5 << 0x3
  4951: c8 8c 0c                 a5 = a5 + a1
  4954: 82 c7                    a0 = u64 [a5]
  4956: 82 12 e0 00              t0 = u64 [sp + 0xe0]
  4960: 97 22 03                 t0 = t0 << 0x3
  4963: c8 82 02                 t0 = t0 + a1
  4966: 82 2c                    a5 = u64 [t0]
  4968: 82 16 28 01              s1 = u64 [sp + 0x128]
  4972: 82 18 68 01              a1 = u64 [sp + 0x168]
  4976: c8 86 06                 s1 = s1 + a1
  4979: c8 67 07                 a0 = a0 + s1
  4982: 82 18 10 01              a1 = u64 [sp + 0x110]
  4986: d3 78 08                 a1 = a1 ^ a0
  4989: 7b 18 38 01              u64 [sp + 0x138] = a1
  4993: c8 c7 07                 a0 = a0 + a5
  4996: 7b 17 20 01              u64 [sp + 0x120] = a0
  5000: 82 1a d0 00              a3 = u64 [sp + 0xd0]
  5004: 97 aa 03                 a3 = a3 << 0x3
  5007: 95 18 40 03              a1 = sp + 0x340
  5011: c8 8a 0a                 a3 = a3 + a1
  5014: 82 a7                    a0 = u64 [a3]
  5016: 82 1b c8 00              a4 = u64 [sp + 0xc8]
  5020: 97 bb 03                 a4 = a4 << 0x3
  5023: c8 8b 0b                 a4 = a4 + a1
  5026: 82 ba                    a3 = u64 [a4]
  5028: 82 16 48 01              s1 = u64 [sp + 0x148]
  5032: 82 1b 00 01              a4 = u64 [sp + 0x100]
  5036: c8 6b 0b                 a4 = a4 + s1
  5039: c8 b7 07                 a0 = a0 + a4
  5042: 82 1b 40 01              a4 = u64 [sp + 0x140]
  5046: d3 7b 0b                 a4 = a4 ^ a0
  5049: c8 a7 02                 t0 = a0 + a3
  5052: 82 17 78                 a0 = u64 [sp + 0x78]
  5055: 9e 77 20                 a0 = a0 >>r 0x20
  5058: 82 1a 18 01              a3 = u64 [sp + 0x118]
  5062: c8 7a 0a                 a3 = a3 + a0
  5065: 82 15 a0 00              s0 = u64 [sp + 0xa0]
  5069: d3 a5 05                 s0 = s0 ^ a3
  5072: 82 19 88 00              a2 = u64 [sp + 0x88]
  5076: 97 99 03                 a2 = a2 << 0x3
  5079: c8 89 09                 a2 = a2 + a1
  5082: 82 99                    a2 = u64 [a2]
  5084: 9e 58 18                 a1 = s0 >>r 0x18
  5087: 7b 18 40 01              u64 [sp + 0x140] = a1
  5091: 82 15 80 00              s0 = u64 [sp + 0x80]
  5095: c8 85 05                 s0 = s0 + a1
  5098: d3 57 07                 a0 = a0 ^ s0
  5101: c8 59 09                 a2 = a2 + s0
  5104: 9e 35 20                 s0 = t1 >>r 0x20
  5107: 82 18 08 01              a1 = u64 [sp + 0x108]
  5111: c8 85 03                 t1 = s0 + a1
  5114: d3 03 0c                 a5 = t1 ^ ra
  5117: 9e cc 18                 a5 = a5 >>r 0x18
  5120: c8 c4 04                 t2 = t2 + a5
  5123: d3 54 05                 s0 = t2 ^ s0
  5126: 9e 58 10                 a1 = s0 >>r 0x10
  5129: 7b 18 18 01              u64 [sp + 0x118] = a1
  5133: c8 38 08                 a1 = a1 + t1
  5136: 7b 18 28 01              u64 [sp + 0x128] = a1
  5140: d3 c8 08                 a1 = a1 ^ a5
  5143: 9e 88 3f                 a1 = a1 >>r 0x3f
  5146: 7b 18 10 01              u64 [sp + 0x110] = a1
  5150: 9e bb 20                 a4 = a4 >>r 0x20
  5153: 82 10 58 01              ra = u64 [sp + 0x158]
  5157: c8 b0 00                 ra = ra + a4
  5160: d3 60 0c                 a5 = ra ^ s1
  5163: 9e c5 18                 s0 = a5 >>r 0x18
  5166: c8 52 03                 t1 = t0 + s0
  5169: d3 b3 0b                 a4 = t1 ^ a4
  5172: 9e bb 10                 a4 = a4 >>r 0x10
  5175: c8 b0 00                 ra = ra + a4
  5178: 7b 10 00 01              u64 [sp + 0x100] = ra
  5182: 82 1c c0 00              a5 = u64 [sp + 0xc0]
  5186: 97 cc 03                 a5 = a5 << 0x3
  5189: 95 16 40 03              s1 = sp + 0x340
  5193: c8 6c 0c                 a5 = a5 + s1
  5196: 82 cc                    a5 = u64 [a5]
  5198: 82 12 b8 00              t0 = u64 [sp + 0xb8]
  5202: 97 22 03                 t0 = t0 << 0x3
  5205: c8 62 02                 t0 = t0 + s1
  5208: 82 22                    t0 = u64 [t0]
  5210: c8 89 09                 a2 = a2 + a1
  5213: d3 9b 0b                 a4 = a4 ^ a2
  5216: 7b 1b 48 01              u64 [sp + 0x148] = a4
  5220: c8 c9 09                 a2 = a2 + a5
  5223: 7b 19 58 01              u64 [sp + 0x158] = a2
  5227: c8 24 04                 t2 = t2 + t0
  5230: 9e 76 10                 s1 = a0 >>r 0x10
  5233: c8 6a 0a                 a3 = a3 + s1
  5236: 7b 1a 08 01              u64 [sp + 0x108] = a3
  5240: 82 17 38 01              a0 = u64 [sp + 0x138]
  5244: 9e 79 20                 a2 = a0 >>r 0x20
  5247: 82 12 60 01              t0 = u64 [sp + 0x160]
  5251: c8 92 02                 t0 = t0 + a2
  5254: 82 17 68 01              a0 = u64 [sp + 0x168]
  5258: d3 72 0c                 a5 = t0 ^ a0
  5261: 9e cb 18                 a4 = a5 >>r 0x18
  5264: 82 17 20 01              a0 = u64 [sp + 0x120]
  5268: c8 b7 07                 a0 = a0 + a4
  5271: d3 79 09                 a2 = a2 ^ a0
  5274: 9e 9c 10                 a5 = a2 >>r 0x10
  5277: c8 2c 00                 ra = a5 + t0
  5280: d3 b0 0b                 a4 = ra ^ a4
  5283: 9e b8 3f                 a1 = a4 >>r 0x3f
  5286: 7b 18 38 01              u64 [sp + 0x138] = a1
  5290: 82 1a 90 00              a3 = u64 [sp + 0x90]
  5294: 97 aa 03                 a3 = a3 << 0x3
  5297: 95 19 40 03              a2 = sp + 0x340
  5301: c8 9a 0a                 a3 = a3 + a2
  5304: 82 aa                    a3 = u64 [a3]
  5306: 82 1b a8 00              a4 = u64 [sp + 0xa8]
  5310: 97 bb 03                 a4 = a4 << 0x3
  5313: c8 9b 0b                 a4 = a4 + a2
  5316: 82 bb                    a4 = u64 [a4]
  5318: c8 84 04                 t2 = t2 + a1
  5321: d3 64 06                 s1 = t2 ^ s1
  5324: c8 4a 0a                 a3 = a3 + t2
  5327: 7b 1a 68 01              u64 [sp + 0x168] = a3
  5331: c8 7b 0b                 a4 = a4 + a0
  5334: 82 18 00 01              a1 = u64 [sp + 0x100]
  5338: d3 58 07                 a0 = a1 ^ s0
  5341: 9e 72 3f                 t0 = a0 >>r 0x3f
  5344: 82 1a b0 00              a3 = u64 [sp + 0xb0]
  5348: 97 aa 03                 a3 = a3 << 0x3
  5351: c8 9a 0a                 a3 = a3 + a2
  5354: 82 aa                    a3 = u64 [a3]
  5356: 82 15 30 01              s0 = u64 [sp + 0x130]
  5360: 97 55 03                 s0 = s0 << 0x3
  5363: c8 95 05                 s0 = s0 + a2
  5366: 82 55                    s0 = u64 [s0]
  5368: c8 2b 0b                 a4 = a4 + t0
  5371: 82 17 18 01              a0 = u64 [sp + 0x118]
  5375: d3 b7 07                 a0 = a0 ^ a4
  5378: 7b 17 20 01              u64 [sp + 0x120] = a0
  5382: c8 ba 0a                 a3 = a3 + a4
  5385: 7b 1a 18 01              u64 [sp + 0x118] = a3
  5389: c8 53 03                 t1 = t1 + s0
  5392: 82 1a 40 01              a3 = u64 [sp + 0x140]
  5396: 82 17 08 01              a0 = u64 [sp + 0x108]
  5400: d3 a7 0b                 a4 = a0 ^ a3
  5403: 82 15 50 01              s0 = u64 [sp + 0x150]
  5407: 97 55 03                 s0 = s0 << 0x3
  5410: c8 95 05                 s0 = s0 + a2
  5413: 82 55                    s0 = u64 [s0]
  5415: 9e bb 3f                 a4 = a4 >>r 0x3f
  5418: c8 b3 03                 t1 = t1 + a4
  5421: d3 c3 04                 t2 = t1 ^ a5
  5424: c8 53 0a                 a3 = t1 + s0
  5427: 82 19 48 01              a2 = u64 [sp + 0x148]
  5431: 9e 95 20                 s0 = a2 >>r 0x20
  5434: c8 05 09                 a2 = s0 + ra
  5437: 82 1c 10 01              a5 = u64 [sp + 0x110]
  5441: d3 c9 00                 ra = a2 ^ a5
  5444: 9e 00 18                 ra = ra >>r 0x18
  5447: 82 1c 58 01              a5 = u64 [sp + 0x158]
  5451: c8 0c 0c                 a5 = a5 + ra
  5454: 7b 1c 50 01              u64 [sp + 0x150] = a5
  5458: d3 c5 05                 s0 = s0 ^ a5
  5461: 9e 55 10                 s0 = s0 >>r 0x10
  5464: 7b 15 40 01              u64 [sp + 0x140] = s0
  5468: c8 59 09                 a2 = a2 + s0
  5471: 7b 19 60 01              u64 [sp + 0x160] = a2
  5475: d3 09 09                 a2 = a2 ^ ra
  5478: 9e 99 3f                 a2 = a2 >>r 0x3f
  5481: 7b 19 98 00              u64 [sp + 0x98] = a2
  5485: 9e 69 20                 a2 = s1 >>r 0x20
  5488: c8 89 05                 s0 = a2 + a1
  5491: 82 16 38 01              s1 = u64 [sp + 0x138]
  5495: d3 56 06                 s1 = s1 ^ s0
  5498: 9e 66 18                 s1 = s1 >>r 0x18
  5501: 82 10 68 01              ra = u64 [sp + 0x168]
  5505: c8 60 00                 ra = ra + s1
  5508: d3 90 09                 a2 = ra ^ a2
  5511: 9e 98 10                 a1 = a2 >>r 0x10
  5514: 7b 18 30 01              u64 [sp + 0x130] = a1
  5518: c8 58 08                 a1 = a1 + s0
  5521: 7b 18 58 01              u64 [sp + 0x158] = a1
  5525: d3 68 09                 a2 = a1 ^ s1
  5528: 9e 99 3f                 a2 = a2 >>r 0x3f
  5531: 7b 19 68 01              u64 [sp + 0x168] = a2
  5535: 82 18 20 01              a1 = u64 [sp + 0x120]
  5539: 9e 89 20                 a2 = a1 >>r 0x20
  5542: c8 79 08                 a1 = a2 + a0
  5545: d3 28 07                 a0 = a1 ^ t0
  5548: 9e 77 18                 a0 = a0 >>r 0x18
  5551: 82 1c 18 01              a5 = u64 [sp + 0x118]
  5555: c8 7c 0c                 a5 = a5 + a0
  5558: d3 c9 09                 a2 = a2 ^ a5
  5561: 9e 99 10                 a2 = a2 >>r 0x10
  5564: 7b 19 38 01              u64 [sp + 0x138] = a2
  5568: c8 89 03                 t1 = a2 + a1
  5571: d3 73 07                 a0 = t1 ^ a0
  5574: 9e 77 3f                 a0 = a0 >>r 0x3f
  5577: 7b 17 48 01              u64 [sp + 0x148] = a0
  5581: 9e 47 20                 a0 = t2 >>r 0x20
  5584: 82 18 28 01              a1 = u64 [sp + 0x128]
  5588: c8 78 08                 a1 = a1 + a0
  5591: d3 8b 0b                 a4 = a4 ^ a1
  5594: 9e b9 18                 a2 = a4 >>r 0x18
  5597: c8 9a 05                 s0 = a3 + a2
  5600: d3 57 07                 a0 = a0 ^ s0
  5603: 9e 72 10                 t0 = a0 >>r 0x10
  5606: c8 82 04                 t2 = t0 + a1
  5609: 82 18 68                 a1 = u64 [sp + 0x68]
  5612: d3 94 07                 a0 = t2 ^ a2
  5615: 9e 77 3f                 a0 = a0 >>r 0x3f
  5618: 7b 17 a0 00              u64 [sp + 0xa0] = a0
  5622: 82 16 e8 00              s1 = u64 [sp + 0xe8]
  5626: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  5629: 82 1b 70 01              a4 = u64 [sp + 0x170]
  5633: 95 bb 10                 a4 = a4 + 0x10
  5636: 82 19 70                 a2 = u64 [sp + 0x70]
  5639: 33 0a 10                 a3 = 0x10
  5642: 52 06 e8 fb              jump @229 if s1 != 0
      :                          @246
  5646: 82 17 60                 a0 = u64 [sp + 0x60]
  5649: 64 8a                    a3 = a1
  5651: 82 18 50 01              a1 = u64 [sp + 0x150]
  5655: d3 87 07                 a0 = a0 ^ a1
  5658: d3 37 07                 a0 = a0 ^ t1
  5661: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
  5665: d3 a0 08                 a1 = ra ^ a3
  5668: d3 48 08                 a1 = a1 ^ t2
  5671: 7b 18 e8 01              u64 [sp + 0x1e8] = a1
  5675: 82 1a 60 01              a3 = u64 [sp + 0x160]
  5679: d3 a9 09                 a2 = a2 ^ a3
  5682: d3 c9 09                 a2 = a2 ^ a5
  5685: 7b 19 f0 01              u64 [sp + 0x1f0] = a2
  5689: 82 1a 58                 a3 = u64 [sp + 0x58]
  5692: 82 1b 58 01              a4 = u64 [sp + 0x158]
  5696: d3 ba 0a                 a3 = a3 ^ a4
  5699: d3 5a 0a                 a3 = a3 ^ s0
  5702: 7b 1a f8 01              u64 [sp + 0x1f8] = a3
  5706: 7b 1a b0 01              u64 [sp + 0x1b0] = a3
  5710: 7b 19 a8 01              u64 [sp + 0x1a8] = a2
  5714: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
  5718: 7b 17 98 01              u64 [sp + 0x198] = a0
  5722: 01                       fallthrough
      :                          @247
  5723: 95 17 98 01              a0 = sp + 0x198
  5727: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
  5731: 33 07 12                 a0 = 0x12
  5734: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
  5738: 49 21 e0 01 02           u64 [sp + 480] = 0x2
  5743: 49 21 f0 01 02           u64 [sp + 496] = 0x2
  5748: 49 21 00 02              u64 [sp + 512] = 0
  5752: 33 0b 01                 a4 = 0x1
  5755: 14 07 20 00 00 00 10 00 00 00 a0 = 0x1000000020
  5765: 7b 17 70 01              u64 [sp + 0x170] = a0
  5769: 7b 17 08 02              u64 [sp + 0x208] = a0
  5773: 7c 17 91 01              a0 = u8 [sp + 0x191]
  5777: 7c 18 92 01              a1 = u8 [sp + 0x192]
  5781: 7c 19 93 01              a2 = u8 [sp + 0x193]
  5785: 46 21 10 02 03           u8 [sp + 528] = 0x3
  5790: 78 17 11 02              u8 [sp + 0x211] = a0
  5794: 78 18 12 02              u8 [sp + 0x212] = a1
  5798: 78 19 13 02              u8 [sp + 0x213] = a2
  5802: 7c 17 94 01              a0 = u8 [sp + 0x194]
  5806: 7c 18 95 01              a1 = u8 [sp + 0x195]
  5810: 7c 19 96 01              a2 = u8 [sp + 0x196]
  5814: 7c 1a 97 01              a3 = u8 [sp + 0x197]
  5818: 78 17 14 02              u8 [sp + 0x214] = a0
  5822: 78 18 15 02              u8 [sp + 0x215] = a1
  5826: 78 19 16 02              u8 [sp + 0x216] = a2
  5830: 78 1a 17 02              u8 [sp + 0x217] = a3
  5834: 33 07 78 00 01           a0 = 0x10078
  5839: 7b 17 40 03              u64 [sp + 0x340] = a0
  5843: 7b 1b 48 03              u64 [sp + 0x348] = a4
  5847: 95 17 e0 01              a0 = sp + 0x1e0
  5851: 7b 17 60 03              u64 [sp + 0x360] = a0
  5855: 7b 1b 68 03              u64 [sp + 0x368] = a4
  5859: 95 17 c8 01              a0 = sp + 0x1c8
  5863: 7b 17 50 03              u64 [sp + 0x350] = a0
  5867: 7b 1b 58 03              u64 [sp + 0x358] = a4
  5871: 95 17 c0 02              a0 = sp + 0x2c0
  5875: 95 18 40 03              a1 = sp + 0x340
  5879: 50 10 7c 85 07           ra = 124, jump @432
      :                          @248 [@dyn 62]
  5884: 82 15 c8 02              s0 = u64 [sp + 0x2c8]
  5888: 82 1b d0 02              a4 = u64 [sp + 0x2d0]
  5892: 82 16 c0 02              s1 = u64 [sp + 0x2c0]
  5896: 33 07 02                 a0 = 0x2
  5899: 33 08                    a1 = 0
  5901: 33 09                    a2 = 0
  5903: 64 5a                    a3 = s0
  5905: 33 00 7e                 ra = 0x7e
  5908: 0a 64                    ecalli 100 // 'log'
  5910: 01                       fallthrough
      :                          @249 [@dyn 63]
  5911: 82 17 38                 a0 = u64 [sp + 0x38]
  5914: c8 67 07                 a0 = a0 + s1
  5917: 53 37 00 00 ff 25        jump @255 if a0 <u 4294901760
      :                          @250
  5923: 33 07 70 0a 03           a0 = 0x30a70
  5928: 95 77 00 00 01           a0 = a0 + 0x10000
  5933: 01                       fallthrough
      :                          @251
  5934: 82 78                    a1 = u64 [a0]
  5936: c9 87 09                 a2 = a0 - a1
  5939: ab 59 0f                 jump @255 if a2 != s0
      :                          @252
  5942: c9 68 09                 a2 = a1 - s1
  5945: 01                       fallthrough
      :                          @253
  5946: 82 7a                    a3 = u64 [a0]
  5948: ab 8a f2                 jump @251 if a3 != a1
      :                          @254
  5951: 7b 79                    u64 [a0] = a2
  5953: 01                       fallthrough
      :                          @255
  5954: 95 17 98 01              a0 = sp + 0x198
  5958: 7b 17 b8 01              u64 [sp + 0x1b8] = a0
  5962: 95 17 b8 01              a0 = sp + 0x1b8
  5966: 7b 17 c0 02              u64 [sp + 0x2c0] = a0
  5970: 33 07 0e                 a0 = 0xe
  5973: 7b 17 c8 02              u64 [sp + 0x2c8] = a0
  5977: 95 17 c0 01              a0 = sp + 0x1c0
  5981: 7b 17 d0 02              u64 [sp + 0x2d0] = a0
  5985: 33 07 b4 00              a0 = 0xb4
  5989: 7b 17 d8 02              u64 [sp + 0x2d8] = a0
  5993: 33 0b 02                 a4 = 0x2
  5996: 7b 1b e0 01              u64 [sp + 0x1e0] = a4
  6000: 7b 1b f0 01              u64 [sp + 0x1f0] = a4
  6004: 7c 17 91 01              a0 = u8 [sp + 0x191]
  6008: 49 21 00 02              u64 [sp + 512] = 0
  6012: 82 18 70 01              a1 = u64 [sp + 0x170]
  6016: 7b 18 08 02              u64 [sp + 0x208] = a1
  6020: 33 0c 03                 a5 = 0x3
  6023: 78 1c 10 02              u8 [sp + 0x210] = a5
  6027: 78 17 11 02              u8 [sp + 0x211] = a0
  6031: 7c 17 92 01              a0 = u8 [sp + 0x192]
  6035: 7c 18 93 01              a1 = u8 [sp + 0x193]
  6039: 7c 19 94 01              a2 = u8 [sp + 0x194]
  6043: 7c 1a 95 01              a3 = u8 [sp + 0x195]
  6047: 78 17 12 02              u8 [sp + 0x212] = a0
  6051: 78 18 13 02              u8 [sp + 0x213] = a1
  6055: 78 19 14 02              u8 [sp + 0x214] = a2
  6059: 78 1a 15 02              u8 [sp + 0x215] = a3
  6063: 7c 17 96 01              a0 = u8 [sp + 0x196]
  6067: 7c 18 97 01              a1 = u8 [sp + 0x197]
  6071: 49 21 c0 01 20           u64 [sp + 448] = 0x20
  6076: 78 17 16 02              u8 [sp + 0x216] = a0
  6080: 78 18 17 02              u8 [sp + 0x217] = a1
  6084: 7b 1b 18 02              u64 [sp + 0x218] = a4
  6088: 7b 1b 28 02              u64 [sp + 0x228] = a4
  6092: 49 21 38 02 01           u64 [sp + 568] = 0x1
  6097: 49 21 40 02 20           u64 [sp + 576] = 0x20
  6102: 78 1c 48 02              u8 [sp + 0x248] = a5
  6106: 33 07 b0 00 01           a0 = 0x100b0
  6111: 7b 17 40 03              u64 [sp + 0x340] = a0
  6115: 7b 1b 48 03              u64 [sp + 0x348] = a4
  6119: 95 17 e0 01              a0 = sp + 0x1e0
  6123: 7b 17 60 03              u64 [sp + 0x360] = a0
  6127: 7b 1b 68 03              u64 [sp + 0x368] = a4
  6131: 95 17 c0 02              a0 = sp + 0x2c0
  6135: 7b 17 50 03              u64 [sp + 0x350] = a0
  6139: 7b 1b 58 03              u64 [sp + 0x358] = a4
  6143: 95 17 c8 01              a0 = sp + 0x1c8
  6147: 95 18 40 03              a1 = sp + 0x340
  6151: 50 20 80 00 75 06        ra = 128, jump @432
      :                          @256 [@dyn 64]
  6157: 82 15 d0 01              s0 = u64 [sp + 0x1d0]
  6161: 82 1b d8 01              a4 = u64 [sp + 0x1d8]
  6165: 82 16 c8 01              s1 = u64 [sp + 0x1c8]
  6169: 33 07 02                 a0 = 0x2
  6172: 33 08                    a1 = 0
  6174: 33 09                    a2 = 0
  6176: 64 5a                    a3 = s0
  6178: 33 00 82 00              ra = 0x82
  6182: 0a 64                    ecalli 100 // 'log'
  6184: 01                       fallthrough
      :                          @257 [@dyn 65]
  6185: 82 17 38                 a0 = u64 [sp + 0x38]
  6188: c8 67 07                 a0 = a0 + s1
  6191: 53 37 00 00 ff 31        jump @263 if a0 <u 4294901760
      :                          @258
  6197: 33 07 70 0a 03           a0 = 0x30a70
  6202: 95 77 00 00 01           a0 = a0 + 0x10000
  6207: 01                       fallthrough
      :                          @259
  6208: 82 78                    a1 = u64 [a0]
  6210: c9 87 09                 a2 = a0 - a1
  6213: ab 59 1b                 jump @263 if a2 != s0
      :                          @260
  6216: c9 68 09                 a2 = a1 - s1
  6219: 01                       fallthrough
      :                          @261
  6220: 82 7a                    a3 = u64 [a0]
  6222: ab 8a f2                 jump @259 if a3 != a1
      :                          @262
  6225: 7b 79                    u64 [a0] = a2
  6227: 33 0b                    a4 = 0
  6229: 82 17 b8 01              a0 = u64 [sp + 0x1b8]
  6233: 82 18 c0 01              a1 = u64 [sp + 0x1c0]
  6237: 28 76 ee                 jump @127
      :                          @263
  6240: 82 17 b8 01              a0 = u64 [sp + 0x1b8]
  6244: 82 18 c0 01              a1 = u64 [sp + 0x1c0]
  6248: 28 6b ee                 jump @127
      :                          @264
  6251: 00                       trap
      :                          @265
  6252: 82 15 20 02              s0 = u64 [sp + 0x220]
  6256: c8 35 05                 s0 = s0 + t1
  6259: 64 36                    s1 = t1
  6261: ae 35 0f                 jump @267 if s0 >=u t1
      :                          @266
  6264: 82 17 28 02              a0 = u64 [sp + 0x228]
  6268: 95 77 01                 a0 = a0 + 0x1
  6271: 7b 17 28 02              u64 [sp + 0x228] = a0
  6275: 01                       fallthrough
      :                          @267
  6276: 95 17 c0 02              a0 = sp + 0x2c0
  6280: 33 09 80 00              a2 = 0x80
  6284: 33 08                    a1 = 0
  6286: 50 20 84 00 1a 09        ra = 132, jump @500
      :                          @268 [@dyn 66]
  6292: 64 69                    a2 = s1
  6294: 56 26 80 00 b2 00        jump @288 if s1 >u 128
      :                          @269
  6300: 82 17 28 02              a0 = u64 [sp + 0x228]
  6304: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
  6308: 7b 18 60                 u64 [sp + 0x60] = a1
  6311: 82 18 e8 01              a1 = u64 [sp + 0x1e8]
  6315: 7b 18 68                 u64 [sp + 0x68] = a1
  6318: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
  6322: 7b 18 70                 u64 [sp + 0x70] = a1
  6325: 82 1c f8 01              a5 = u64 [sp + 0x1f8]
  6329: 82 18 00 02              a1 = u64 [sp + 0x200]
  6333: 82 1b 08 02              a4 = u64 [sp + 0x208]
  6337: 82 1a 10 02              a3 = u64 [sp + 0x210]
  6341: 7b 1a 68 01              u64 [sp + 0x168] = a3
  6345: 82 1a 18 02              a3 = u64 [sp + 0x218]
  6349: 7b 1a 48 01              u64 [sp + 0x148] = a3
  6353: 82 1a a0 00              a3 = u64 [sp + 0xa0]
  6357: d3 5a 0a                 a3 = a3 ^ s0
  6360: 7b 1a 30 01              u64 [sp + 0x130] = a3
  6364: 82 1a 98 00              a3 = u64 [sp + 0x98]
  6368: d3 a7 07                 a0 = a0 ^ a3
  6371: 7b 17 38 01              u64 [sp + 0x138] = a0
  6375: 7b 1b 98 00              u64 [sp + 0x98] = a4
  6379: 7b 18 a0 00              u64 [sp + 0xa0] = a1
  6383: 28 93 f8                 jump @226
      :                          @270
  6386: 00                       trap
      :                          @271
  6387: 00                       trap
      :                          @272
  6388: 00                       trap
      :                          @273
  6389: 00                       trap
      :                          @274
  6390: 00                       trap
      :                          @275
  6391: 49 21 e0 01              u64 [sp + 480] = 0
  6395: 49 21 e8 01 01           u64 [sp + 488] = 0x1
  6400: 49 21 f0 01              u64 [sp + 496] = 0
  6404: 01                       fallthrough
      :                          @276
  6405: 95 17 e0 01              a0 = sp + 0x1e0
  6409: 33 09 20                 a2 = 0x20
  6412: 33 08                    a1 = 0
  6414: 50 20 86 00 db ec        ra = 134, jump @105
      :                          @277 [@dyn 67]
  6420: 82 15 f0 01              s0 = u64 [sp + 0x1f0]
  6424: 82 18 e8 01              a1 = u64 [sp + 0x1e8]
  6428: 82 16 e0 01              s1 = u64 [sp + 0x1e0]
  6432: 28 c2 ee                 jump @152
      :                          @278
  6435: 95 17 e0 01              a0 = sp + 0x1e0
  6439: 64 95                    s0 = a2
  6441: 50 20 88 00 c0 ec        ra = 136, jump @105
      :                          @279 [@dyn 68]
  6447: 64 59                    a2 = s0
  6449: 82 18 f0 01              a1 = u64 [sp + 0x1f0]
  6453: 82 15 e8 01              s0 = u64 [sp + 0x1e8]
  6457: 82 16 e0 01              s1 = u64 [sp + 0x1e0]
  6461: 28 de ee                 jump @155
      :                          @280
  6464: 00                       trap
      :                          @281
  6465: 00                       trap
      :                          @282
  6466: 00                       trap
      :                          @283
  6467: 00                       trap
      :                          @284
  6468: 00                       trap
      :                          @285
  6469: 00                       trap
      :                          @286
  6470: 00                       trap
      :                          @287
  6471: 00                       trap
      :                          @288
  6472: 00                       trap
      :                          @289
  6473: 00                       trap
      :                          @290
  6474: 00                       trap
      :                          @291
  6475: 00                       trap
      :                          @292 [export #1: 'accumulate']
  6476: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  6479: 7b 10 18                 u64 [sp + 0x18] = ra
  6482: 7b 15 10                 u64 [sp + 0x10] = s0
  6485: 7b 16 08                 u64 [sp + 0x8] = s1
  6488: 33 09 00 00 01           a2 = 0x10000
  6493: 51 08 7f 01              jump @338 if a1 == 0
      :                          @293
  6497: 64 86                    s1 = a1
  6499: 7d 78                    a1 = i8 [a0]
  6501: 33 05 01                 s0 = 0x1
  6504: 59 08 37                 jump @300 if a1 >=s 0
      :                          @294
  6507: 84 8a ff 00              a3 = a1 & 0xff
  6511: 33 05 02                 s0 = 0x2
  6514: 53 2a c0 00 2d           jump @300 if a3 <u 192
      :                          @295
  6519: 33 05 03                 s0 = 0x3
  6522: 53 2a e0 00 25           jump @300 if a3 <u 224
      :                          @296
  6527: 33 05 04                 s0 = 0x4
  6530: 53 2a f0 00 1d           jump @300 if a3 <u 240
      :                          @297
  6535: 33 05 05                 s0 = 0x5
  6538: 53 2a f8 00 15           jump @300 if a3 <u 248
      :                          @298
  6543: 33 05 06                 s0 = 0x6
  6546: 53 2a fc 00 0d           jump @300 if a3 <u 252
      :                          @299
  6551: 88 a8 fe 00              a1 = a3 <u 0xfe
  6555: 9a 85 08                 s0 = 0x8 - a1
  6558: 01                       fallthrough
      :                          @300
  6559: ae 56 08                 jump @302 if s1 >=u s0
      :                          @301
  6562: 33 08                    a1 = 0
  6564: 28 38 01                 jump @338
      :                          @302
  6567: 64 58                    a1 = s0
  6569: 7b 17                    u64 [sp] = a0
  6571: 50 20 8a 00 a0 11        ra = 138, jump @685
      :                          @303 [@dyn 69]
  6577: aa 56 23 01              jump @337 if s1 == s0
      :                          @304
  6581: 82 17                    a0 = u64 [sp]
  6583: c8 57 07                 a0 = a0 + s0
  6586: 7d 78                    a1 = i8 [a0]
  6588: c9 56 06                 s1 = s1 - s0
  6591: 33 05 01                 s0 = 0x1
  6594: 59 08 37                 jump @311 if a1 >=s 0
      :                          @305
  6597: 84 89 ff 00              a2 = a1 & 0xff
  6601: 33 05 02                 s0 = 0x2
  6604: 53 29 c0 00 2d           jump @311 if a2 <u 192
      :                          @306
  6609: 33 05 03                 s0 = 0x3
  6612: 53 29 e0 00 25           jump @311 if a2 <u 224
      :                          @307
  6617: 33 05 04                 s0 = 0x4
  6620: 53 29 f0 00 1d           jump @311 if a2 <u 240
      :                          @308
  6625: 33 05 05                 s0 = 0x5
  6628: 53 29 f8 00 15           jump @311 if a2 <u 248
      :                          @309
  6633: 33 05 06                 s0 = 0x6
  6636: 53 29 fc 00 0d           jump @311 if a2 <u 252
      :                          @310
  6641: 88 98 fe 00              a1 = a2 <u 0xfe
  6645: 9a 85 08                 s0 = 0x8 - a1
  6648: 01                       fallthrough
      :                          @311
  6649: ac 56 db 00              jump @337 if s1 <u s0
      :                          @312
  6653: 64 58                    a1 = s0
  6655: 7b 17                    u64 [sp] = a0
  6657: 50 20 8c 00 4a 11        ra = 140, jump @685
      :                          @313 [@dyn 70]
  6663: 82 17                    a0 = u64 [sp]
  6665: c8 57 07                 a0 = a0 + s0
  6668: c9 56 0a                 a3 = s1 - s0
  6671: ab 56 07                 jump @315 if s1 != s0
      :                          @314
  6674: 33 05                    s0 = 0
  6676: 28 42                    jump @323
      :                          @315
  6678: 7d 78                    a1 = i8 [a0]
  6680: 33 05 01                 s0 = 0x1
  6683: 59 08 37                 jump @322 if a1 >=s 0
      :                          @316
  6686: 84 89 ff 00              a2 = a1 & 0xff
  6690: 33 05 02                 s0 = 0x2
  6693: 53 29 c0 00 2d           jump @322 if a2 <u 192
      :                          @317
  6698: 33 05 03                 s0 = 0x3
  6701: 53 29 e0 00 25           jump @322 if a2 <u 224
      :                          @318
  6706: 33 05 04                 s0 = 0x4
  6709: 53 29 f0 00 1d           jump @322 if a2 <u 240
      :                          @319
  6714: 33 05 05                 s0 = 0x5
  6717: 53 29 f8 00 15           jump @322 if a2 <u 248
      :                          @320
  6722: 33 05 06                 s0 = 0x6
  6725: 53 29 fc 00 0d           jump @322 if a2 <u 252
      :                          @321
  6730: 88 98 fe 00              a1 = a2 <u 0xfe
  6734: 9a 85 08                 s0 = 0x8 - a1
  6737: 01                       fallthrough
      :                          @322
  6738: ac 5a 82 00              jump @337 if a3 <u s0
      :                          @323
  6742: 64 a6                    s1 = a3
  6744: 7b 17                    u64 [sp] = a0
  6746: 64 58                    a1 = s0
  6748: 50 20 8e 00 ef 10        ra = 142, jump @685
      :                          @324 [@dyn 71]
  6754: 51 07 72                 jump @337 if a0 == 0
      :                          @325
  6757: e4 56 07                 a0 = maxu(s1, s0)
  6760: c9 57 07                 a0 = a0 - s0
  6763: 33 09 00 00 01           a2 = 0x10000
  6768: 53 17 60 32 ff           jump @301 if a0 <u 96
      :                          @326
  6773: 82 18                    a1 = u64 [sp]
  6775: c8 85 05                 s0 = s0 + a1
  6778: 95 76 a0                 s1 = a0 + 0xffffffffffffffa0
  6781: 95 57 60                 a0 = s0 + 0x60
  6784: 7b 17                    u64 [sp] = a0
  6786: 51 06 6a                 jump @339 if s1 == 0
      :                          @327
  6789: 7d 78                    a1 = i8 [a0]
  6791: 33 05 01                 s0 = 0x1
  6794: 59 08 37                 jump @334 if a1 >=s 0
      :                          @328
  6797: 84 89 ff 00              a2 = a1 & 0xff
  6801: 33 05 02                 s0 = 0x2
  6804: 53 29 c0 00 2d           jump @334 if a2 <u 192
      :                          @329
  6809: 33 05 03                 s0 = 0x3
  6812: 53 29 e0 00 25           jump @334 if a2 <u 224
      :                          @330
  6817: 33 05 04                 s0 = 0x4
  6820: 53 29 f0 00 1d           jump @334 if a2 <u 240
      :                          @331
  6825: 33 05 05                 s0 = 0x5
  6828: 53 29 f8 00 15           jump @334 if a2 <u 248
      :                          @332
  6833: 33 05 06                 s0 = 0x6
  6836: 53 29 fc 00 0d           jump @334 if a2 <u 252
      :                          @333
  6841: 88 98 fe 00              a1 = a2 <u 0xfe
  6845: 9a 85 08                 s0 = 0x8 - a1
  6848: 01                       fallthrough
      :                          @334
  6849: ac 56 6f 01              jump @372 if s1 <u s0
      :                          @335
  6853: 64 58                    a1 = s0
  6855: 50 20 90 00 84 10        ra = 144, jump @685
      :                          @336 [@dyn 72]
  6861: 33 09 00 00 01           a2 = 0x10000
  6866: 28 1f                    jump @340
      :                          @337
  6868: 33 08                    a1 = 0
  6870: 33 09 00 00 01           a2 = 0x10000
  6875: 01                       fallthrough
      :                          @338
  6876: 64 97                    a0 = a2
  6878: 82 10 18                 ra = u64 [sp + 0x18]
  6881: 82 15 10                 s0 = u64 [sp + 0x10]
  6884: 82 16 08                 s1 = u64 [sp + 0x8]
  6887: 95 11 20                 sp = sp + 0x20
  6890: 32 00                    ret
      :                          @339
  6892: 33 05                    s0 = 0
  6894: 33 07                    a0 = 0
  6896: 01                       fallthrough
      :                          @340
  6897: e4 56 08                 a1 = maxu(s1, s0)
  6900: c9 58 08                 a1 = a1 - s0
  6903: e4 78 06                 s1 = maxu(a1, a0)
  6906: c9 76 06                 s1 = s1 - a0
  6909: 53 16 20 a5 fe           jump @301 if s1 <u 32
      :                          @341
  6914: 82 18                    a1 = u64 [sp]
  6916: c8 85 05                 s0 = s0 + a1
  6919: c8 57 07                 a0 = a0 + s0
  6922: 95 66 e0                 s1 = s1 + 0xffffffffffffffe0
  6925: 95 77 20                 a0 = a0 + 0x20
  6928: 7b 17                    u64 [sp] = a0
  6930: 51 06 52                 jump @352 if s1 == 0
      :                          @342
  6933: 7d 78                    a1 = i8 [a0]
  6935: 33 05 01                 s0 = 0x1
  6938: 59 08 37                 jump @349 if a1 >=s 0
      :                          @343
  6941: 84 89 ff 00              a2 = a1 & 0xff
  6945: 33 05 02                 s0 = 0x2
  6948: 53 29 c0 00 2d           jump @349 if a2 <u 192
      :                          @344
  6953: 33 05 03                 s0 = 0x3
  6956: 53 29 e0 00 25           jump @349 if a2 <u 224
      :                          @345
  6961: 33 05 04                 s0 = 0x4
  6964: 53 29 f0 00 1d           jump @349 if a2 <u 240
      :                          @346
  6969: 33 05 05                 s0 = 0x5
  6972: 53 29 f8 00 15           jump @349 if a2 <u 248
      :                          @347
  6977: 33 05 06                 s0 = 0x6
  6980: 53 29 fc 00 0d           jump @349 if a2 <u 252
      :                          @348
  6985: 88 98 fe 00              a1 = a2 <u 0xfe
  6989: 9a 85 08                 s0 = 0x8 - a1
  6992: 01                       fallthrough
      :                          @349
  6993: ac 56 df 00              jump @372 if s1 <u s0
      :                          @350
  6997: 64 58                    a1 = s0
  6999: 50 20 92 00 f4 0f        ra = 146, jump @685
      :                          @351 [@dyn 73]
  7005: 33 09 00 00 01           a2 = 0x10000
  7010: 28 05                    jump @353
      :                          @352
  7012: 33 05                    s0 = 0
  7014: 01                       fallthrough
      :                          @353
  7015: ae 65 3b fe              jump @301 if s0 >=u s1
      :                          @354
  7019: 82 17                    a0 = u64 [sp]
  7021: c8 57 07                 a0 = a0 + s0
  7024: 7c 78                    a1 = u8 [a0]
  7026: 52 08 bf 00              jump @373 if a1 != 0
      :                          @355
  7030: e4 56 08                 a1 = maxu(s1, s0)
  7033: c9 58 08                 a1 = a1 - s0
  7036: 95 75 01                 s0 = a0 + 0x1
  7039: 33 07 01                 a0 = 0x1
  7042: e4 78 07                 a0 = maxu(a1, a0)
  7045: 33 09 02                 a2 = 0x2
  7048: 95 7a ff                 a3 = a0 + 0xffffffffffffffff
  7051: ae 98 09                 jump @357 if a1 >=u a2
      :                          @356
  7054: 33 06                    s1 = 0
  7056: 33 07                    a0 = 0
  7058: 28 50                    jump @367
      :                          @357
  7060: 7d 57                    a0 = i8 [s0]
  7062: 33 06 01                 s1 = 0x1
  7065: 59 07 37                 jump @364 if a0 >=s 0
      :                          @358
  7068: 84 77 ff 00              a0 = a0 & 0xff
  7072: 33 06 02                 s1 = 0x2
  7075: 53 27 c0 00 2d           jump @364 if a0 <u 192
      :                          @359
  7080: 33 06 03                 s1 = 0x3
  7083: 53 27 e0 00 25           jump @364 if a0 <u 224
      :                          @360
  7088: 33 06 04                 s1 = 0x4
  7091: 53 27 f0 00 1d           jump @364 if a0 <u 240
      :                          @361
  7096: 33 06 05                 s1 = 0x5
  7099: 53 27 f8 00 15           jump @364 if a0 <u 248
      :                          @362
  7104: 33 06 06                 s1 = 0x6
  7107: 53 27 fc 00 0d           jump @364 if a0 <u 252
      :                          @363
  7112: 88 77 fe 00              a0 = a0 <u 0xfe
  7116: 9a 76 08                 s1 = 0x8 - a0
  7119: 01                       fallthrough
      :                          @364
  7120: 7b 1a                    u64 [sp] = a3
  7122: ac 6a 60                 jump @374 if a3 <u s1
      :                          @365
  7125: 64 57                    a0 = s0
  7127: 64 68                    a1 = s1
  7129: 50 20 94 00 72 0f        ra = 148, jump @685
      :                          @366 [@dyn 74]
  7135: 82 1a                    a3 = u64 [sp]
  7137: 01                       fallthrough
      :                          @367
  7138: e4 6a 08                 a1 = maxu(a3, s1)
  7141: c9 68 08                 a1 = a1 - s1
  7144: e6 78 07                 a0 = minu(a1, a0)
  7147: 52 17 20 46              jump @373 if a0 != 32
      :                          @368
  7151: c8 65 05                 s0 = s0 + s1
  7154: 7b 15                    u64 [sp] = s0
  7156: 33 05 61 00 03           s0 = 0x30061
  7161: 33 06 50                 s1 = 0x50
  7164: 01                       fallthrough
      :                          @369
  7165: 33 09 20                 a2 = 0x20
  7168: 64 57                    a0 = s0
  7170: 82 18                    a1 = u64 [sp]
  7172: 50 20 96 00 f2 04        ra = 150, jump @482
      :                          @370 [@dyn 75]
  7178: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  7181: 95 55 20                 s0 = s0 + 0x20
  7184: 52 06 ed                 jump @369 if s1 != 0
      :                          @371
  7187: 33 05 61 00 03           s0 = 0x30061
  7192: 33 07                    a0 = 0
  7194: 33 08 61 00 03           a1 = 0x30061
  7199: 0a 06                    ecalli 6 // 'assign'
  7201: 33 07 01                 a0 = 0x1
  7204: 64 58                    a1 = s0
  7206: 0a 06                    ecalli 6 // 'assign'
  7208: 33 08 20                 a1 = 0x20
  7211: 82 19                    a2 = u64 [sp]
  7213: 28 af fe                 jump @338
      :                          @372
  7216: 00                       trap
      :                          @373
  7217: 00                       trap
      :                          @374
  7218: 00                       trap
      :                          @375 [export #2: 'on_transfer']
  7219: 33 07 00 00 01           a0 = 0x10000
  7224: 33 08                    a1 = 0
  7226: 32 00                    ret
      :                          @376
  7228: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  7231: 7b 10 40                 u64 [sp + 0x40] = ra
  7234: 7b 15 38                 u64 [sp + 0x38] = s0
  7237: 7b 16 30                 u64 [sp + 0x30] = s1
  7240: c8 89 09                 a2 = a2 + a1
  7243: ac 89 53                 jump @384 if a2 <u a1
      :                          @377
  7246: 64 75                    s0 = a0
  7248: 82 77                    a0 = u64 [a0]
  7250: 97 78 01                 a1 = a0 << 0x1
  7253: 33 0a 08                 a3 = 0x8
  7256: e4 a9 09                 a2 = maxu(a2, a3)
  7259: e4 98 06                 s1 = maxu(a1, a2)
  7262: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  7265: 98 88 3f                 a1 = a1 >> 0x3f
  7268: 51 07 12                 jump @379 if a0 == 0
      :                          @378
  7271: 82 59 08                 a2 = u64 [s0 + 0x8]
  7274: 7b 19 18                 u64 [sp + 0x18] = a2
  7277: 49 11 20 01              u64 [sp + 32] = 0x1
  7281: 7b 17 28                 u64 [sp + 0x28] = a0
  7284: 28 06                    jump @380
      :                          @379
  7286: 49 11 20                 u64 [sp + 32] = 0
  7289: 01                       fallthrough
      :                          @380
  7290: 64 17                    a0 = sp
  7292: 95 1a 18                 a3 = sp + 0x18
  7295: 64 69                    a2 = s1
  7297: 50 20 98 00 33           ra = 152, jump @388
      :                          @381 [@dyn 76]
  7302: 82 18                    a1 = u64 [sp]
  7304: 82 17 08                 a0 = u64 [sp + 0x8]
  7307: 51 08 14                 jump @385 if a1 == 0
      :                          @382
  7310: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  7320: aa 87 0d                 jump @386 if a0 == a1
      :                          @383
  7323: 52 07 18                 jump @387 if a0 != 0
      :                          @384
  7326: 00                       trap
      :                          @385
  7327: 7b 57 08                 u64 [s0 + 0x8] = a0
  7330: 7b 56                    u64 [s0] = s1
  7332: 01                       fallthrough
      :                          @386
  7333: 82 10 40                 ra = u64 [sp + 0x40]
  7336: 82 15 38                 s0 = u64 [sp + 0x38]
  7339: 82 16 30                 s1 = u64 [sp + 0x30]
  7342: 95 11 48                 sp = sp + 0x48
  7345: 32 00                    ret
      :                          @387
  7347: 00                       trap
      :                          @388
  7348: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  7351: 7b 10 30                 u64 [sp + 0x30] = ra
  7354: 7b 15 28                 u64 [sp + 0x28] = s0
  7357: 7b 16 20                 u64 [sp + 0x20] = s1
  7360: 64 95                    s0 = a2
  7362: 64 72                    t0 = a0
  7364: 51 08 7a                 jump @398 if a1 == 0
      :                          @389
  7367: 82 a7 08                 a0 = u64 [a3 + 0x8]
  7370: 51 07 7d                 jump @399 if a0 == 0
      :                          @390
  7373: 82 a9 10                 a2 = u64 [a3 + 0x10]
  7376: 51 09 ab 00              jump @406 if a2 == 0
      :                          @391
  7380: 82 a8                    a1 = u64 [a3]
  7382: 33 06 70 0a 03           s1 = 0x30a70
  7387: 33 03 00 00 01           t1 = 0x10000
  7392: c8 36 06                 s1 = s1 + t1
  7395: 01                       fallthrough
      :                          @392
  7396: 82 6a                    a3 = u64 [s1]
  7398: c8 5a 07                 a0 = a3 + s0
  7401: ac a7 d0 00              jump @412 if a0 <u a3
      :                          @393
  7405: 95 7b 01                 a4 = a0 + 0x1
  7408: 88 bc 01                 a5 = a4 <u 0x1
  7411: d8 b3 0b                 a4 = t1 <u a4
  7414: d4 cb 0b                 a4 = a4 | a5
  7417: 52 0b c0 00              jump @412 if a4 != 0
      :                          @394
  7421: 82 6b                    a4 = u64 [s1]
  7423: ab ab e5                 jump @392 if a4 != a3
      :                          @395
  7426: 7b 67                    u64 [s1] = a0
  7428: 33 0c                    a5 = 0
  7430: 7b 12 18                 u64 [sp + 0x18] = t0
  7433: 33 0a 70 0a 03           a3 = 0x30a70
  7438: 33 0b 00 00 01           a4 = 0x10000
  7443: 7b 1a                    u64 [sp] = a3
  7445: c8 ba 0a                 a3 = a3 + a4
  7448: c9 7a 07                 a0 = a3 - a0
  7451: 7b 17 10                 u64 [sp + 0x10] = a0
  7454: 7b 18 08                 u64 [sp + 0x8] = a1
  7457: 64 96                    s1 = a2
  7459: 50 20 9a 00 d3 03        ra = 154, jump @482
      :                          @396 [@dyn 77]
  7465: 54 36 00 00 01 98 00     jump @413 if s1 <=u 65536
      :                          @397
  7472: 82 12 18                 t0 = u64 [sp + 0x18]
  7475: 82 18 10                 a1 = u64 [sp + 0x10]
  7478: 33 07                    a0 = 0
  7480: 7b 28 08                 u64 [t0 + 0x8] = a1
  7483: 28 b5 00                 jump @419
      :                          @398
  7486: 49 12 08                 u64 [t0 + 8] = 0
  7489: 33 07 01                 a0 = 0x1
  7492: 28 ac 00                 jump @419
      :                          @399
  7495: 33 09 70 0a 03           a2 = 0x30a70
  7500: 33 07 00 00 01           a0 = 0x10000
  7505: c8 79 09                 a2 = a2 + a0
  7508: 01                       fallthrough
      :                          @400
  7509: 82 9a                    a3 = u64 [a2]
  7511: c8 5a 08                 a1 = a3 + s0
  7514: ac a8 5f                 jump @412 if a1 <u a3
      :                          @401
  7517: 95 8b 01                 a4 = a1 + 0x1
  7520: 88 bc 01                 a5 = a4 <u 0x1
  7523: d8 b7 0b                 a4 = a0 <u a4
  7526: d4 cb 0b                 a4 = a4 | a5
  7529: 52 0b 50                 jump @412 if a4 != 0
      :                          @402
  7532: 82 9b                    a4 = u64 [a2]
  7534: ab ab e7                 jump @400 if a4 != a3
      :                          @403
  7537: 7b 98                    u64 [a2] = a1
  7539: 33 0c                    a5 = 0
  7541: 01                       fallthrough
      :                          @404
  7542: ab ab df                 jump @400 if a4 != a3
      :                          @405
  7545: 28 31                    jump @411
      :                          @406
  7547: 33 09 70 0a 03           a2 = 0x30a70
  7552: 33 07 00 00 01           a0 = 0x10000
  7557: c8 79 09                 a2 = a2 + a0
  7560: 01                       fallthrough
      :                          @407
  7561: 82 9a                    a3 = u64 [a2]
  7563: c8 5a 08                 a1 = a3 + s0
  7566: ac a8 2b                 jump @412 if a1 <u a3
      :                          @408
  7569: 95 8b 01                 a4 = a1 + 0x1
  7572: 88 bc 01                 a5 = a4 <u 0x1
  7575: d8 b7 0b                 a4 = a0 <u a4
  7578: d4 cb 0b                 a4 = a4 | a5
  7581: 52 0b 1c                 jump @412 if a4 != 0
      :                          @409
  7584: 82 9b                    a4 = u64 [a2]
  7586: ab ab e7                 jump @407 if a4 != a3
      :                          @410
  7589: 7b 98                    u64 [a2] = a1
  7591: 33 0c                    a5 = 0
  7593: 01                       fallthrough
      :                          @411
  7594: 33 07 70 0a 04           a0 = 0x40a70
  7599: c9 87 08                 a1 = a0 - a1
  7602: 33 07                    a0 = 0
  7604: 7b 28 08                 u64 [t0 + 0x8] = a1
  7607: 28 39                    jump @419
      :                          @412
  7609: 33 07 01                 a0 = 0x1
  7612: 7b 27 08                 u64 [t0 + 0x8] = a0
  7615: 28 31                    jump @419
      :                          @413
  7617: 64 6c                    a5 = s1
  7619: 82 17                    a0 = u64 [sp]
  7621: 95 77 00 00 01           a0 = a0 + 0x10000
  7626: 82 12 18                 t0 = u64 [sp + 0x18]
  7629: 82 16 08                 s1 = u64 [sp + 0x8]
  7632: 01                       fallthrough
      :                          @414
  7633: 82 78                    a1 = u64 [a0]
  7635: c9 87 09                 a2 = a0 - a1
  7638: ab 69 11                 jump @418 if a2 != s1
      :                          @415
  7641: c9 c8 09                 a2 = a1 - a5
  7644: 01                       fallthrough
      :                          @416
  7645: 82 7a                    a3 = u64 [a0]
  7647: ab 8a f2                 jump @414 if a3 != a1
      :                          @417
  7650: 7b 79                    u64 [a0] = a2
  7652: 33 0b                    a4 = 0
  7654: 01                       fallthrough
      :                          @418
  7655: 82 18 10                 a1 = u64 [sp + 0x10]
  7658: 33 07                    a0 = 0
  7660: 7b 28 08                 u64 [t0 + 0x8] = a1
  7663: 01                       fallthrough
      :                          @419
  7664: 7b 25 10                 u64 [t0 + 0x10] = s0
  7667: 7b 27                    u64 [t0] = a0
  7669: 82 10 30                 ra = u64 [sp + 0x30]
  7672: 82 15 28                 s0 = u64 [sp + 0x28]
  7675: 82 16 20                 s1 = u64 [sp + 0x20]
  7678: 95 11 38                 sp = sp + 0x38
  7681: 32 00                    ret
      :                          @420
  7683: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  7686: 7b 10 40                 u64 [sp + 0x40] = ra
  7689: 7b 15 38                 u64 [sp + 0x38] = s0
  7692: 7b 16 30                 u64 [sp + 0x30] = s1
  7695: 95 88 01                 a1 = a1 + 0x1
  7698: 51 08 54                 jump @428 if a1 == 0
      :                          @421
  7701: 64 75                    s0 = a0
  7703: 82 77                    a0 = u64 [a0]
  7705: 97 79 01                 a2 = a0 << 0x1
  7708: 33 0a 08                 a3 = 0x8
  7711: e4 a8 08                 a1 = maxu(a1, a3)
  7714: e4 89 06                 s1 = maxu(a2, a1)
  7717: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  7720: 98 88 3f                 a1 = a1 >> 0x3f
  7723: 51 07 12                 jump @423 if a0 == 0
      :                          @422
  7726: 82 59 08                 a2 = u64 [s0 + 0x8]
  7729: 7b 19 18                 u64 [sp + 0x18] = a2
  7732: 49 11 20 01              u64 [sp + 32] = 0x1
  7736: 7b 17 28                 u64 [sp + 0x28] = a0
  7739: 28 06                    jump @424
      :                          @423
  7741: 49 11 20                 u64 [sp + 32] = 0
  7744: 01                       fallthrough
      :                          @424
  7745: 64 17                    a0 = sp
  7747: 95 1a 18                 a3 = sp + 0x18
  7750: 64 69                    a2 = s1
  7752: 50 20 9c 00 6c fe        ra = 156, jump @388
      :                          @425 [@dyn 78]
  7758: 82 18                    a1 = u64 [sp]
  7760: 82 17 08                 a0 = u64 [sp + 0x8]
  7763: 51 08 14                 jump @429 if a1 == 0
      :                          @426
  7766: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  7776: aa 87 0d                 jump @430 if a0 == a1
      :                          @427
  7779: 52 07 18                 jump @431 if a0 != 0
      :                          @428
  7782: 00                       trap
      :                          @429
  7783: 7b 57 08                 u64 [s0 + 0x8] = a0
  7786: 7b 56                    u64 [s0] = s1
  7788: 01                       fallthrough
      :                          @430
  7789: 82 10 40                 ra = u64 [sp + 0x40]
  7792: 82 15 38                 s0 = u64 [sp + 0x38]
  7795: 82 16 30                 s1 = u64 [sp + 0x30]
  7798: 95 11 48                 sp = sp + 0x48
  7801: 32 00                    ret
      :                          @431
  7803: 00                       trap
      :                          @432
  7804: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  7807: 7b 10 30                 u64 [sp + 0x30] = ra
  7810: 7b 15 28                 u64 [sp + 0x28] = s0
  7813: 7b 16 20                 u64 [sp + 0x20] = s1
  7816: 64 89                    a2 = a1
  7818: 82 8a 08                 a3 = u64 [a1 + 0x8]
  7821: 64 75                    s0 = a0
  7823: 51 0a 35                 jump @437 if a3 == 0
      :                          @433
  7826: 82 98                    a1 = u64 [a2]
  7828: 33 07                    a0 = 0
  7830: 95 8b 08                 a4 = a1 + 0x8
  7833: 01                       fallthrough
      :                          @434
  7834: 82 bc                    a5 = u64 [a4]
  7836: c8 c7 07                 a0 = a0 + a5
  7839: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  7842: 95 bb 10                 a4 = a4 + 0x10
  7845: 52 0a f5                 jump @434 if a3 != 0
      :                          @435
  7848: 82 9a 18                 a3 = u64 [a2 + 0x18]
  7851: 51 0a 24                 jump @439 if a3 == 0
      :                          @436
  7854: 82 88 08                 a1 = u64 [a1 + 0x8]
  7857: 8e 88                    a1 = a1 >u 0
  7859: 88 7a 10                 a3 = a0 <u 0x10
  7862: 85 aa 01                 a3 = a3 ^ 0x1
  7865: d4 a8 08                 a1 = a1 | a3
  7868: 89 7a                    a3 = a0 <s 0
  7870: e0 a8 08                 a1 = a1 & ~a3
  7873: 52 08 0a                 jump @438 if a1 != 0
      :                          @437
  7876: 33 07                    a0 = 0
  7878: 33 08 01                 a1 = 0x1
  7881: 28 4a                    jump @447
      :                          @438
  7883: 97 77 01                 a0 = a0 << 0x1
  7886: 01                       fallthrough
      :                          @439
  7887: 51 07 40                 jump @446 if a0 == 0
      :                          @440
  7890: 57 07 79                 jump @452 if a0 <s 0
      :                          @441
  7893: 64 52                    t0 = s0
  7895: 33 0b 70 0a 03           a4 = 0x30a70
  7900: 33 08 00 00 01           a1 = 0x10000
  7905: c8 8b 0b                 a4 = a4 + a1
  7908: 01                       fallthrough
      :                          @442
  7909: 82 bc                    a5 = u64 [a4]
  7911: c8 7c 0a                 a3 = a5 + a0
  7914: ac ca 5f                 jump @450 if a3 <u a5
      :                          @443
  7917: 95 a5 01                 s0 = a3 + 0x1
  7920: 88 56 01                 s1 = s0 <u 0x1
  7923: d8 58 05                 s0 = a1 <u s0
  7926: d4 65 05                 s0 = s0 | s1
  7929: 52 05 50                 jump @450 if s0 != 0
      :                          @444
  7932: 82 b6                    s1 = u64 [a4]
  7934: ab c6 e7                 jump @442 if s1 != a5
      :                          @445
  7937: 7b ba                    u64 [a4] = a3
  7939: 33 08 70 0a 04           a1 = 0x40a70
  7944: c9 a8 08                 a1 = a1 - a3
  7947: 64 25                    s0 = t0
  7949: 28 06                    jump @447
      :                          @446
  7951: 33 08 01                 a1 = 0x1
  7954: 01                       fallthrough
      :                          @447
  7955: 7b 17                    u64 [sp] = a0
  7957: 7b 18 08                 u64 [sp + 0x8] = a1
  7960: 49 11 10                 u64 [sp + 16] = 0
  7963: 33 08 d0 00 01           a1 = 0x100d0
  7968: 64 17                    a0 = sp
  7970: 50 20 9e 00 80 06        ra = 158, jump @576
      :                          @448 [@dyn 79]
  7976: 52 07 22                 jump @451 if a0 != 0
      :                          @449
  7979: 82 17 10                 a0 = u64 [sp + 0x10]
  7982: 82 18 08                 a1 = u64 [sp + 0x8]
  7985: 82 19                    a2 = u64 [sp]
  7987: 7b 57 10                 u64 [s0 + 0x10] = a0
  7990: 7b 58 08                 u64 [s0 + 0x8] = a1
  7993: 7b 59                    u64 [s0] = a2
  7995: 82 10 30                 ra = u64 [sp + 0x30]
  7998: 82 15 28                 s0 = u64 [sp + 0x28]
  8001: 82 16 20                 s1 = u64 [sp + 0x20]
  8004: 95 11 38                 sp = sp + 0x38
  8007: 32 00                    ret
      :                          @450
  8009: 00                       trap
      :                          @451
  8010: 00                       trap
      :                          @452
  8011: 00                       trap
      :                          @453 [@dyn 80]
  8012: 82 72                    t0 = u64 [a0]
  8014: 33 09 00 00 ff           a2 = 0xffffffffffff0000
  8019: 95 2a ff ff fe           a3 = t0 + 0xfffffffffffeffff
  8024: ac 9a 28                 jump @459 if a3 <u a2
      :                          @454
  8027: 82 77 08                 a0 = u64 [a0 + 0x8]
  8030: 33 09 70 0a 03           a2 = 0x30a70
  8035: 95 99 00 00 01           a2 = a2 + 0x10000
  8040: 01                       fallthrough
      :                          @455
  8041: 82 9a                    a3 = u64 [a2]
  8043: c9 a9 0b                 a4 = a2 - a3
  8046: ab 7b 12                 jump @459 if a4 != a0
      :                          @456
  8049: c9 2a 0b                 a4 = a3 - t0
  8052: 01                       fallthrough
      :                          @457
  8053: 82 9c                    a5 = u64 [a2]
  8055: ab ac f2                 jump @455 if a5 != a3
      :                          @458
  8058: 7b 9b                    u64 [a2] = a4
  8060: 33 08                    a1 = 0
  8062: 32 00                    ret
      :                          @459
  8064: 32 00                    ret
      :                          @460 [@dyn 81]
  8066: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  8069: 7b 10 18                 u64 [sp + 0x18] = ra
  8072: 7b 15 10                 u64 [sp + 0x10] = s0
  8075: 7b 16 08                 u64 [sp + 0x8] = s1
  8078: 64 75                    s0 = a0
  8080: 82 7a 10                 a3 = u64 [a0 + 0x10]
  8083: 82 77                    a0 = u64 [a0]
  8085: c9 a7 07                 a0 = a0 - a3
  8088: 64 96                    s1 = a2
  8090: ac 97 2b                 jump @463 if a0 <u a2
      :                          @461
  8093: 7b 1a                    u64 [sp] = a3
  8095: 82 57 08                 a0 = u64 [s0 + 0x8]
  8098: c8 a7 07                 a0 = a0 + a3
  8101: 64 69                    a2 = s1
  8103: 50 20 a4 00 4f 01        ra = 164, jump @482
      :                          @462 [@dyn 82]
  8109: 82 17                    a0 = u64 [sp]
  8111: c8 76 06                 s1 = s1 + a0
  8114: 7b 56 10                 u64 [s0 + 0x10] = s1
  8117: 33 07                    a0 = 0
  8119: 82 10 18                 ra = u64 [sp + 0x18]
  8122: 82 15 10                 s0 = u64 [sp + 0x10]
  8125: 82 16 08                 s1 = u64 [sp + 0x8]
  8128: 95 11 20                 sp = sp + 0x20
  8131: 32 00                    ret
      :                          @463
  8133: 64 57                    a0 = s0
  8135: 7b 18                    u64 [sp] = a1
  8137: 64 a8                    a1 = a3
  8139: 64 69                    a2 = s1
  8141: 50 20 a6 00 6f fc        ra = 166, jump @376
      :                          @464 [@dyn 83]
  8147: 82 18                    a1 = u64 [sp]
  8149: 82 5a 10                 a3 = u64 [s0 + 0x10]
  8152: 28 c5                    jump @461
      :                          @465 [@dyn 84]
  8154: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  8157: 7b 10 20                 u64 [sp + 0x20] = ra
  8160: 7b 15 18                 u64 [sp + 0x18] = s0
  8163: 7b 16 10                 u64 [sp + 0x10] = s1
  8166: 64 86                    s1 = a1
  8168: 83 88                    i32 a1 = a1 + 0
  8170: 33 09 80 00              a2 = 0x80
  8174: 64 7a                    a3 = a0
  8176: ae 98 2c                 jump @470 if a1 >=u a2
      :                          @466
  8179: 82 a8 10                 a1 = u64 [a3 + 0x10]
  8182: 82 a7                    a0 = u64 [a3]
  8184: ab 78 13                 jump @469 if a1 != a0
      :                          @467
  8187: 64 a7                    a0 = a3
  8189: 64 a5                    s0 = a3
  8191: 50 20 aa 00 04 fe        ra = 170, jump @420
      :                          @468 [@dyn 85]
  8197: 64 5a                    a3 = s0
  8199: 82 58 10                 a1 = u64 [s0 + 0x10]
  8202: 01                       fallthrough
      :                          @469
  8203: 82 a7 08                 a0 = u64 [a3 + 0x8]
  8206: c8 87 07                 a0 = a0 + a1
  8209: 78 76                    u8 [a0] = s1
  8211: 95 88 01                 a1 = a1 + 0x1
  8214: 7b a8 10                 u64 [a3 + 0x10] = a1
  8217: 28 ac 00                 jump @478
      :                          @470
  8220: 8b 67 0b                 i32 a0 = s1 >> 0xb
  8223: 48 11 0c                 u32 [sp + 12] = 0
  8226: 52 07 1c                 jump @472 if a0 != 0
      :                          @471
  8229: 98 67 06                 a0 = s1 >> 0x6
  8232: 86 77 c0 00              a0 = a0 | 0xc0
  8236: 78 17 0c                 u8 [sp + 0xc] = a0
  8239: 84 67 3f                 a0 = s1 & 0x3f
  8242: 86 77 80 00              a0 = a0 | 0x80
  8246: 78 17 0d                 u8 [sp + 0xd] = a0
  8249: 33 06 02                 s1 = 0x2
  8252: 28 63                    jump @475
      :                          @472
  8254: 8b 67 10                 i32 a0 = s1 >> 0x10
  8257: 52 07 29                 jump @474 if a0 != 0
      :                          @473
  8260: 98 67 0c                 a0 = s1 >> 0xc
  8263: 86 77 e0 00              a0 = a0 | 0xe0
  8267: 78 17 0c                 u8 [sp + 0xc] = a0
  8270: 97 67 34                 a0 = s1 << 0x34
  8273: 98 77 3a                 a0 = a0 >> 0x3a
  8276: 95 77 80 00              a0 = a0 + 0x80
  8280: 78 17 0d                 u8 [sp + 0xd] = a0
  8283: 84 67 3f                 a0 = s1 & 0x3f
  8286: 86 77 80 00              a0 = a0 | 0x80
  8290: 78 17 0e                 u8 [sp + 0xe] = a0
  8293: 33 06 03                 s1 = 0x3
  8296: 28 37                    jump @475
      :                          @474
  8298: 97 67 2b                 a0 = s1 << 0x2b
  8301: 98 77 3d                 a0 = a0 >> 0x3d
  8304: 95 77 f0 00              a0 = a0 + 0xf0
  8308: 78 17 0c                 u8 [sp + 0xc] = a0
  8311: 97 67 2e                 a0 = s1 << 0x2e
  8314: 98 77 3a                 a0 = a0 >> 0x3a
  8317: 95 77 80 00              a0 = a0 + 0x80
  8321: 78 17 0d                 u8 [sp + 0xd] = a0
  8324: 97 67 34                 a0 = s1 << 0x34
  8327: 98 77 3a                 a0 = a0 >> 0x3a
  8330: 95 77 80 00              a0 = a0 + 0x80
  8334: 78 17 0e                 u8 [sp + 0xe] = a0
  8337: 84 67 3f                 a0 = s1 & 0x3f
  8340: 86 77 80 00              a0 = a0 | 0x80
  8344: 78 17 0f                 u8 [sp + 0xf] = a0
  8347: 33 06 04                 s1 = 0x4
  8350: 01                       fallthrough
      :                          @475
  8351: 82 a5 10                 s0 = u64 [a3 + 0x10]
  8354: 82 a7                    a0 = u64 [a3]
  8356: c9 57 07                 a0 = a0 - s0
  8359: ac 67 2e                 jump @479 if a0 <u s1
      :                          @476
  8362: 7b 1a                    u64 [sp] = a3
  8364: 82 a7 08                 a0 = u64 [a3 + 0x8]
  8367: c8 57 07                 a0 = a0 + s0
  8370: 95 18 0c                 a1 = sp + 0xc
  8373: 64 69                    a2 = s1
  8375: 50 20 ac 00 3f           ra = 172, jump @482
      :                          @477 [@dyn 86]
  8380: c8 56 06                 s1 = s1 + s0
  8383: 82 17                    a0 = u64 [sp]
  8385: 7b 76 10                 u64 [a0 + 0x10] = s1
  8388: 01                       fallthrough
      :                          @478
  8389: 33 07                    a0 = 0
  8391: 82 10 20                 ra = u64 [sp + 0x20]
  8394: 82 15 18                 s0 = u64 [sp + 0x18]
  8397: 82 16 10                 s1 = u64 [sp + 0x10]
  8400: 95 11 28                 sp = sp + 0x28
  8403: 32 00                    ret
      :                          @479
  8405: 64 a7                    a0 = a3
  8407: 64 58                    a1 = s0
  8409: 64 69                    a2 = s1
  8411: 64 a5                    s0 = a3
  8413: 50 20 ae 00 5f fb        ra = 174, jump @376
      :                          @480 [@dyn 87]
  8419: 64 5a                    a3 = s0
  8421: 82 55 10                 s0 = u64 [s0 + 0x10]
  8424: 28 c2                    jump @476
      :                          @481 [@dyn 88]
  8426: 64 8a                    a3 = a1
  8428: 33 08 d0 00 01           a1 = 0x100d0
  8433: 64 a9                    a2 = a3
  8435: 28 af 04                 jump @576
      :                          @482
  8438: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  8441: 7b 10 18                 u64 [sp + 0x18] = ra
  8444: 7b 15 10                 u64 [sp + 0x10] = s0
  8447: 7b 16 08                 u64 [sp + 0x8] = s1
  8450: 53 19 10 64              jump @491 if a2 <u 16
      :                          @483
  8454: 8d 7a                    i32 a3 = -a0
  8456: 84 a2 07                 t0 = a3 & 0x7
  8459: c8 27 0b                 a4 = a0 + t0
  8462: 51 02 15                 jump @486 if t0 == 0
      :                          @484
  8465: 64 8c                    a5 = a1
  8467: 64 75                    s0 = a0
  8469: 01                       fallthrough
      :                          @485
  8470: 7c ca                    a3 = u8 [a5]
  8472: 78 5a                    u8 [s0] = a3
  8474: 95 55 01                 s0 = s0 + 0x1
  8477: 95 cc 01                 a5 = a5 + 0x1
  8480: ac b5 f6                 jump @485 if s0 <u a4
      :                          @486
  8483: c8 28 03                 t1 = a1 + t0
  8486: c9 29 02                 t0 = a2 - t0
  8489: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  8492: 84 38 07                 a1 = t1 & 0x7
  8495: c8 4b 0a                 a3 = a4 + t2
  8498: 51 08 3b                 jump @493 if a1 == 0
      :                          @487
  8501: 58 04 4b                 jump @496 if t2 <=s 0
      :                          @488
  8504: 97 38 03                 a1 = t1 << 0x3
  8507: 84 80 38                 ra = a1 & 0x38
  8510: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  8513: 82 c5                    s0 = u64 [a5]
  8515: 8d 88                    i32 a1 = -a1
  8517: 84 88 38                 a1 = a1 & 0x38
  8520: 95 cc 08                 a5 = a5 + 0x8
  8523: 01                       fallthrough
      :                          @489
  8524: 82 c6                    s1 = u64 [a5]
  8526: d0 05 05                 s0 = s0 >> ra
  8529: cf 86 09                 a2 = s1 << a1
  8532: d4 59 09                 a2 = a2 | s0
  8535: 7b b9                    u64 [a4] = a2
  8537: 95 bb 08                 a4 = a4 + 0x8
  8540: 95 cc 08                 a5 = a5 + 0x8
  8543: 64 65                    s0 = s1
  8545: ac ab eb                 jump @489 if a4 <u a3
      :                          @490
  8548: 28 1c                    jump @496
      :                          @491
  8550: 64 7a                    a3 = a0
  8552: 52 09 21                 jump @497 if a2 != 0
      :                          @492
  8555: 28 2f                    jump @499
      :                          @493
  8557: 58 04 13                 jump @496 if t2 <=s 0
      :                          @494
  8560: 64 38                    a1 = t1
  8562: 01                       fallthrough
      :                          @495
  8563: 82 89                    a2 = u64 [a1]
  8565: 7b b9                    u64 [a4] = a2
  8567: 95 bb 08                 a4 = a4 + 0x8
  8570: 95 88 08                 a1 = a1 + 0x8
  8573: ac ab f6                 jump @495 if a4 <u a3
      :                          @496
  8576: c8 43 08                 a1 = t1 + t2
  8579: 84 29 07                 a2 = t0 & 0x7
  8582: 51 09 14                 jump @499 if a2 == 0
      :                          @497
  8585: c8 a9 09                 a2 = a2 + a3
  8588: 01                       fallthrough
      :                          @498
  8589: 7c 8b                    a4 = u8 [a1]
  8591: 78 ab                    u8 [a3] = a4
  8593: 95 aa 01                 a3 = a3 + 0x1
  8596: 95 88 01                 a1 = a1 + 0x1
  8599: ac 9a f6                 jump @498 if a3 <u a2
      :                          @499
  8602: 82 10 18                 ra = u64 [sp + 0x18]
  8605: 82 15 10                 s0 = u64 [sp + 0x10]
  8608: 82 16 08                 s1 = u64 [sp + 0x8]
  8611: 95 11 20                 sp = sp + 0x20
  8614: 32 00                    ret
      :                          @500
  8616: 8d 7a                    i32 a3 = -a0
  8618: 84 aa 07                 a3 = a3 & 0x7
  8621: c8 a7 0b                 a4 = a0 + a3
  8624: 51 0a 0e                 jump @503 if a3 == 0
      :                          @501
  8627: 64 7c                    a5 = a0
  8629: 01                       fallthrough
      :                          @502
  8630: 78 c8                    u8 [a5] = a1
  8632: 95 cc 01                 a5 = a5 + 0x1
  8635: ac bc fb                 jump @502 if a5 <u a4
      :                          @503
  8638: c9 a9 03                 t1 = a2 - a3
  8641: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  8644: c8 cb 0a                 a3 = a4 + a5
  8647: 58 0c 1d                 jump @506 if a5 <=s 0
      :                          @504
  8650: 84 82 ff 00              t0 = a1 & 0xff
  8654: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  8664: ca 92 0c                 a5 = t0 * a2
  8667: 01                       fallthrough
      :                          @505
  8668: 7b bc                    u64 [a4] = a5
  8670: 95 bb 08                 a4 = a4 + 0x8
  8673: ac ab fb                 jump @505 if a4 <u a3
      :                          @506
  8676: 84 39 07                 a2 = t1 & 0x7
  8679: 52 09 05                 jump @508 if a2 != 0
      :                          @507
  8682: 28 0e                    jump @510
      :                          @508
  8684: c8 a9 09                 a2 = a2 + a3
  8687: 01                       fallthrough
      :                          @509
  8688: 78 a8                    u8 [a3] = a1
  8690: 95 aa 01                 a3 = a3 + 0x1
  8693: ac 9a fb                 jump @509 if a3 <u a2
      :                          @510
  8696: 32 00                    ret
      :                          @511 [@dyn 89]
  8698: 82 77                    a0 = u64 [a0]
  8700: 01                       fallthrough
      :                          @512
  8701: 28                       jump @512
      :                          @513 [@dyn 90]
  8702: 82 77                    a0 = u64 [a0]
  8704: 01                       fallthrough
      :                          @514
  8705: 95 11 a8                 sp = sp + 0xffffffffffffffa8
  8708: 7b 10 50                 u64 [sp + 0x50] = ra
  8711: 7b 15 48                 u64 [sp + 0x48] = s0
  8714: 7b 16 40                 u64 [sp + 0x40] = s1
  8717: 7b 18                    u64 [sp] = a1
  8719: 98 79 04                 a2 = a0 >> 0x4
  8722: 33 08 27                 a1 = 0x27
  8725: 53 29 71 02 81 00        jump @517 if a2 <u 625
      :                          @515
  8731: 33 08 27                 a1 = 0x27
  8734: 95 1a 3e                 a3 = sp + 0x3e
  8737: 3a 09 50 00 03           a2 = u64 [0x30050]
  8742: 7b 19 10                 u64 [sp + 0x10] = a2
  8745: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
  8751: 33 04 7b 14              t2 = 0x147b
  8755: 33 0b 44 01 01           a4 = 0x10144
  8760: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
  8766: 01                       fallthrough
      :                          @516
  8767: 64 72                    t0 = a0
  8769: 82 17 10                 a0 = u64 [sp + 0x10]
  8772: d6 72 07                 a0 = t0 mulhu a0
  8775: 98 77 0b                 a0 = a0 >> 0xb
  8778: 82 19 08                 a2 = u64 [sp + 0x8]
  8781: c0 97 0c                 i32 a5 = a0 * a2
  8784: c8 2c 06                 s1 = a5 + t0
  8787: 97 6c 30                 a5 = s1 << 0x30
  8790: 98 cc 32                 a5 = a5 >> 0x32
  8793: ca 4c 0c                 a5 = a5 * t2
  8796: 98 c3 11                 t1 = a5 >> 0x11
  8799: 98 cc 10                 a5 = a5 >> 0x10
  8802: 84 cc fe 07              a5 = a5 & 0x7fe
  8806: 96 39 9c                 a2 = t1 * 0xffffffffffffff9c
  8809: c8 69 09                 a2 = a2 + s1
  8812: 97 99 31                 a2 = a2 << 0x31
  8815: 98 99 30                 a2 = a2 >> 0x30
  8818: c8 bc 0c                 a5 = a5 + a4
  8821: 7c c6                    s1 = u8 [a5]
  8823: 7c cc 01                 a5 = u8 [a5 + 0x1]
  8826: c8 b9 09                 a2 = a2 + a4
  8829: 7c 95 01                 s0 = u8 [a2 + 0x1]
  8832: 7c 99                    a2 = u8 [a2]
  8834: 78 ac ff                 u8 [a3 + 0xffffffffffffffff] = a5
  8837: 78 a6 fe                 u8 [a3 + 0xfffffffffffffffe] = s1
  8840: 78 a5 01                 u8 [a3 + 0x1] = s0
  8843: 78 a9                    u8 [a3] = a2
  8845: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
  8848: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
  8851: ac 20 ac                 jump @516 if ra <u t0
      :                          @517
  8854: 54 17 63 3b              jump @519 if a0 <=u 99
      :                          @518
  8858: 97 79 30                 a2 = a0 << 0x30
  8861: 98 99 32                 a2 = a2 >> 0x32
  8864: 96 99 7b 14              a2 = a2 * 0x147b
  8868: 98 99 11                 a2 = a2 >> 0x11
  8871: 96 9a 9c                 a3 = a2 * 0xffffffffffffff9c
  8874: c8 a7 07                 a0 = a0 + a3
  8877: 97 77 31                 a0 = a0 << 0x31
  8880: 98 77 30                 a0 = a0 >> 0x30
  8883: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  8886: 33 0a 44 01 01           a3 = 0x10144
  8891: c8 a7 07                 a0 = a0 + a3
  8894: 7c 7a 01                 a3 = u8 [a0 + 0x1]
  8897: 7c 77                    a0 = u8 [a0]
  8899: 95 1b 19                 a4 = sp + 0x19
  8902: c8 8b 0b                 a4 = a4 + a1
  8905: 78 ba 01                 u8 [a4 + 0x1] = a3
  8908: 78 b7                    u8 [a4] = a0
  8910: 64 97                    a0 = a2
  8912: 01                       fallthrough
      :                          @519
  8913: 55 17 0a 14              jump @521 if a0 >=u 10
      :                          @520
  8917: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  8920: 95 19 19                 a2 = sp + 0x19
  8923: c8 89 09                 a2 = a2 + a1
  8926: 83 77 30                 i32 a0 = a0 + 0x30
  8929: 78 97                    u8 [a2] = a0
  8931: 28 21                    jump @522
      :                          @521
  8933: 97 77 01                 a0 = a0 << 0x1
  8936: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  8939: 33 09 44 01 01           a2 = 0x10144
  8944: c8 97 07                 a0 = a0 + a2
  8947: 7c 79 01                 a2 = u8 [a0 + 0x1]
  8950: 7c 77                    a0 = u8 [a0]
  8952: 95 1a 19                 a3 = sp + 0x19
  8955: c8 8a 0a                 a3 = a3 + a1
  8958: 78 a9 01                 u8 [a3 + 0x1] = a2
  8961: 78 a7                    u8 [a3] = a0
  8963: 01                       fallthrough
      :                          @522
  8964: 95 1a 19                 a3 = sp + 0x19
  8967: c8 8a 0a                 a3 = a3 + a1
  8970: 9a 8b 27                 a4 = 0x27 - a1
  8973: 33 08 00 01 01           a1 = 0x10100
  8978: 82 17                    a0 = u64 [sp]
  8980: 33 09                    a2 = 0
  8982: 50 20 b6 00 13           ra = 182, jump @524
      :                          @523 [@dyn 91]
  8987: 82 10 50                 ra = u64 [sp + 0x50]
  8990: 82 15 48                 s0 = u64 [sp + 0x48]
  8993: 82 16 40                 s1 = u64 [sp + 0x40]
  8996: 95 11 58                 sp = sp + 0x58
  8999: 32 00                    ret
      :                          @524
  9001: 95 11 98                 sp = sp + 0xffffffffffffff98
  9004: 7b 10 60                 u64 [sp + 0x60] = ra
  9007: 7b 15 58                 u64 [sp + 0x58] = s0
  9010: 7b 16 50                 u64 [sp + 0x50] = s1
  9013: 80 73 34                 t1 = u32 [a0 + 0x34]
  9016: 7b 1a 20                 u64 [sp + 0x20] = a3
  9019: 64 9c                    a5 = a2
  9021: 84 36 01                 s1 = t1 & 0x1
  9024: 33 02 2b                 t0 = 0x2b
  9027: 33 09 00 00 11           a2 = 0x110000
  9032: 84 3a 04                 a3 = t1 & 0x4
  9035: 7b 1b 28                 u64 [sp + 0x28] = a4
  9038: c8 b6 04                 t2 = s1 + a4
  9041: 7b 1c 30                 u64 [sp + 0x30] = a5
  9044: 52 0a 10                 jump @527 if a3 != 0
      :                          @525
  9047: 49 11 38                 u64 [sp + 56] = 0
  9050: 82 78                    a1 = u64 [a0]
  9052: 94 69 2b                 a2 = 0x2b if s1 != 0
  9055: 52 08 35                 jump @531 if a1 != 0
      :                          @526
  9058: 28 56                    jump @536
      :                          @527
  9060: 7b 18 38                 u64 [sp + 0x38] = a1
  9063: 33 09                    a2 = 0
  9065: 51 0c 1b                 jump @530 if a5 == 0
      :                          @528
  9068: 82 1b 38                 a4 = u64 [sp + 0x38]
  9071: 01                       fallthrough
      :                          @529
  9072: 7d b5                    s0 = i8 [a4]
  9074: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
  9077: 85 5a 01                 a3 = s0 ^ 0x1
  9080: c8 a9 09                 a2 = a2 + a3
  9083: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  9086: 95 bb 01                 a4 = a4 + 0x1
  9089: 52 0c ef                 jump @529 if a5 != 0
      :                          @530
  9092: c8 94 04                 t2 = t2 + a2
  9095: 33 09 00 00 11           a2 = 0x110000
  9100: 82 78                    a1 = u64 [a0]
  9102: db 62 09                 a2 = t0 if s1 != 0
  9105: 51 08 27                 jump @536 if a1 == 0
      :                          @531
  9108: 82 7a 08                 a3 = u64 [a0 + 0x8]
  9111: ae a4 21                 jump @536 if t2 >=u a3
      :                          @532
  9114: 84 38 08                 a1 = t1 & 0x8
  9117: 52 08 51                 jump @539 if a1 != 0
      :                          @533
  9120: 7c 76 38                 s1 = u8 [a0 + 0x38]
  9123: c9 4a 0a                 a3 = a3 - t2
  9126: 7b 19 18                 u64 [sp + 0x18] = a2
  9129: 5a 16 01 a0 00           jump @546 if s1 >s 1
      :                          @534
  9134: 52 06 ad 00              jump @548 if s1 != 0
      :                          @535
  9138: 7b 1a 10                 u64 [sp + 0x10] = a3
  9141: 28 ac 00                 jump @549
      :                          @536
  9144: 82 75 20                 s0 = u64 [a0 + 0x20]
  9147: 82 76 28                 s1 = u64 [a0 + 0x28]
  9150: 64 57                    a0 = s0
  9152: 64 68                    a1 = s1
  9154: 82 1a 38                 a3 = u64 [sp + 0x38]
  9157: 82 1b 30                 a4 = u64 [sp + 0x30]
  9160: 50 20 b8 00 75 01        ra = 184, jump @569
      :                          @537 [@dyn 92]
  9166: 33 08 01                 a1 = 0x1
  9169: 52 07 be 00              jump @554 if a0 != 0
      :                          @538
  9173: 82 6c 18                 a5 = u64 [s1 + 0x18]
  9176: 64 57                    a0 = s0
  9178: 82 18 20                 a1 = u64 [sp + 0x20]
  9181: 82 19 28                 a2 = u64 [sp + 0x28]
  9184: 82 10 60                 ra = u64 [sp + 0x60]
  9187: 82 15 58                 s0 = u64 [sp + 0x58]
  9190: 82 16 50                 s1 = u64 [sp + 0x50]
  9193: 95 11 68                 sp = sp + 0x68
  9196: 32 0c                    jump [a5]
      :                          @539
  9198: 7b 1a 40                 u64 [sp + 0x40] = a3
  9201: 64 45                    s0 = t2
  9203: 81 78 30                 a1 = i32 [a0 + 0x30]
  9206: 7b 18 10                 u64 [sp + 0x10] = a1
  9209: 7c 7a 38                 a3 = u8 [a0 + 0x38]
  9212: 7b 1a 08                 u64 [sp + 0x8] = a3
  9215: 82 7a 20                 a3 = u64 [a0 + 0x20]
  9218: 82 78 28                 a1 = u64 [a0 + 0x28]
  9221: 48 17 30 30              u32 [a0 + 48] = 0x30
  9225: 7b 17                    u64 [sp] = a0
  9227: 46 17 38 01              u8 [a0 + 56] = 0x1
  9231: 7b 1a 48                 u64 [sp + 0x48] = a3
  9234: 64 a7                    a0 = a3
  9236: 64 86                    s1 = a1
  9238: 82 1a 38                 a3 = u64 [sp + 0x38]
  9241: 82 1b 30                 a4 = u64 [sp + 0x30]
  9244: 50 20 ba 00 21 01        ra = 186, jump @569
      :                          @540 [@dyn 93]
  9250: 52 07 69                 jump @553 if a0 != 0
      :                          @541
  9253: 82 17 40                 a0 = u64 [sp + 0x40]
  9256: c9 57 05                 s0 = a0 - s0
  9259: 95 55 01                 s0 = s0 + 0x1
  9262: 01                       fallthrough
      :                          @542
  9263: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  9266: 51 05 cb 00              jump @564 if s0 == 0
      :                          @543
  9270: 82 69 20                 a2 = u64 [s1 + 0x20]
  9273: 33 08 30                 a1 = 0x30
  9276: 82 17 48                 a0 = u64 [sp + 0x48]
  9279: b4 90 02 bc 00           ra = 188, jump [a2]
      :                          @544 [@dyn 94]
  9284: 51 07 eb                 jump @542 if a0 == 0
      :                          @545
  9287: 28 44                    jump @553
      :                          @546
  9289: 52 16 02 12              jump @548 if s1 != 2
      :                          @547
  9293: 98 a6 01                 s1 = a3 >> 0x1
  9296: 95 a8 01                 a1 = a3 + 0x1
  9299: 98 88 01                 a1 = a1 >> 0x1
  9302: 7b 18 10                 u64 [sp + 0x10] = a1
  9305: 28 08                    jump @549
      :                          @548
  9307: 64 a6                    s1 = a3
  9309: 49 11 10                 u64 [sp + 16] = 0
  9312: 01                       fallthrough
      :                          @549
  9313: 82 78 20                 a1 = u64 [a0 + 0x20]
  9316: 7b 18 48                 u64 [sp + 0x48] = a1
  9319: 82 75 28                 s0 = u64 [a0 + 0x28]
  9322: 81 77 30                 a0 = i32 [a0 + 0x30]
  9325: 7b 17 40                 u64 [sp + 0x40] = a0
  9328: 95 66 01                 s1 = s1 + 0x1
  9331: 01                       fallthrough
      :                          @550
  9332: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  9335: 51 06 28                 jump @555 if s1 == 0
      :                          @551
  9338: 82 59 20                 a2 = u64 [s0 + 0x20]
  9341: 82 17 48                 a0 = u64 [sp + 0x48]
  9344: 82 18 40                 a1 = u64 [sp + 0x40]
  9347: b4 90 02 be 00           ra = 190, jump [a2]
      :                          @552 [@dyn 95]
  9352: 51 07 ec                 jump @550 if a0 == 0
      :                          @553
  9355: 33 08 01                 a1 = 0x1
  9358: 01                       fallthrough
      :                          @554
  9359: 64 87                    a0 = a1
  9361: 82 10 60                 ra = u64 [sp + 0x60]
  9364: 82 15 58                 s0 = u64 [sp + 0x58]
  9367: 82 16 50                 s1 = u64 [sp + 0x50]
  9370: 95 11 68                 sp = sp + 0x68
  9373: 32 00                    ret
      :                          @555
  9375: 82 16 48                 s1 = u64 [sp + 0x48]
  9378: 64 67                    a0 = s1
  9380: 64 58                    a1 = s0
  9382: 82 19 18                 a2 = u64 [sp + 0x18]
  9385: 82 1a 38                 a3 = u64 [sp + 0x38]
  9388: 82 1b 30                 a4 = u64 [sp + 0x30]
  9391: 50 20 c0 00 8e 00        ra = 192, jump @569
      :                          @556 [@dyn 96]
  9397: 33 08 01                 a1 = 0x1
  9400: 52 07 d7                 jump @554 if a0 != 0
      :                          @557
  9403: 82 5a 18                 a3 = u64 [s0 + 0x18]
  9406: 64 67                    a0 = s1
  9408: 82 18 20                 a1 = u64 [sp + 0x20]
  9411: 82 19 28                 a2 = u64 [sp + 0x28]
  9414: b4 a0 02 c2 00           ra = 194, jump [a3]
      :                          @558 [@dyn 97]
  9419: 33 08 01                 a1 = 0x1
  9422: 52 07 c1                 jump @554 if a0 != 0
      :                          @559
  9425: 82 17 10                 a0 = u64 [sp + 0x10]
  9428: 9a 77                    a0 = -a0
  9430: 7b 17 38                 u64 [sp + 0x38] = a0
  9433: 33 06 ff                 s1 = 0xffffffffffffffff
  9436: 01                       fallthrough
      :                          @560
  9437: 82 17 38                 a0 = u64 [sp + 0x38]
  9440: c8 67 07                 a0 = a0 + s1
  9443: 51 17 ff 45              jump @567 if a0 == 4294967295
      :                          @561
  9447: 82 59 20                 a2 = u64 [s0 + 0x20]
  9450: 82 17 48                 a0 = u64 [sp + 0x48]
  9453: 82 18 40                 a1 = u64 [sp + 0x40]
  9456: b4 90 02 c4 00           ra = 196, jump [a2]
      :                          @562 [@dyn 98]
  9461: 95 66 01                 s1 = s1 + 0x1
  9464: 51 07 e5                 jump @560 if a0 == 0
      :                          @563
  9467: 28 39                    jump @568
      :                          @564
  9469: 82 6a 18                 a3 = u64 [s1 + 0x18]
  9472: 82 17 48                 a0 = u64 [sp + 0x48]
  9475: 82 18 20                 a1 = u64 [sp + 0x20]
  9478: 82 19 28                 a2 = u64 [sp + 0x28]
  9481: b4 a0 02 c6 00           ra = 198, jump [a3]
      :                          @565 [@dyn 99]
  9486: 33 08 01                 a1 = 0x1
  9489: 52 07 7e ff              jump @554 if a0 != 0
      :                          @566
  9493: 33 08                    a1 = 0
  9495: 82 16                    s1 = u64 [sp]
  9497: 82 17 10                 a0 = u64 [sp + 0x10]
  9500: 7a 67 30                 u32 [s1 + 0x30] = a0
  9503: 82 17 08                 a0 = u64 [sp + 0x8]
  9506: 78 67 38                 u8 [s1 + 0x38] = a0
  9509: 28 6a ff                 jump @554
      :                          @567
  9512: 82 16 10                 s1 = u64 [sp + 0x10]
  9515: 82 17 10                 a0 = u64 [sp + 0x10]
  9518: d8 76 08                 a1 = s1 <u a0
  9521: 28 5e ff                 jump @554
      :                          @568
  9524: 82 17 10                 a0 = u64 [sp + 0x10]
  9527: d8 76 08                 a1 = s1 <u a0
  9530: 28 55 ff                 jump @554
      :                          @569
  9533: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  9536: 7b 10 20                 u64 [sp + 0x20] = ra
  9539: 7b 15 18                 u64 [sp + 0x18] = s0
  9542: 7b 16 10                 u64 [sp + 0x10] = s1
  9545: 83 9c                    i32 a5 = a2 + 0
  9547: 33 02 00 00 11           t0 = 0x110000
  9552: 64 a6                    s1 = a3
  9554: 64 85                    s0 = a1
  9556: 64 7a                    a3 = a0
  9558: aa 2c 21                 jump @572 if a5 == t0
      :                          @570
  9561: 82 5c 20                 a5 = u64 [s0 + 0x20]
  9564: 64 a7                    a0 = a3
  9566: 64 98                    a1 = a2
  9568: 7b 1b 08                 u64 [sp + 0x8] = a4
  9571: 7b 1a                    u64 [sp] = a3
  9573: b4 c0 02 c8 00           ra = 200, jump [a5]
      :                          @571 [@dyn 100]
  9578: 82 1a                    a3 = u64 [sp]
  9580: 82 1b 08                 a4 = u64 [sp + 0x8]
  9583: 64 78                    a1 = a0
  9585: 33 07 01                 a0 = 0x1
  9588: 52 08 20                 jump @575 if a1 != 0
      :                          @572
  9591: 51 06 1a                 jump @574 if s1 == 0
      :                          @573
  9594: 82 5c 18                 a5 = u64 [s0 + 0x18]
  9597: 64 a7                    a0 = a3
  9599: 64 68                    a1 = s1
  9601: 64 b9                    a2 = a4
  9603: 82 10 20                 ra = u64 [sp + 0x20]
  9606: 82 15 18                 s0 = u64 [sp + 0x18]
  9609: 82 16 10                 s1 = u64 [sp + 0x10]
  9612: 95 11 28                 sp = sp + 0x28
  9615: 32 0c                    jump [a5]
      :                          @574
  9617: 33 07                    a0 = 0
  9619: 01                       fallthrough
      :                          @575
  9620: 82 10 20                 ra = u64 [sp + 0x20]
  9623: 82 15 18                 s0 = u64 [sp + 0x18]
  9626: 82 16 10                 s1 = u64 [sp + 0x10]
  9629: 95 11 28                 sp = sp + 0x28
  9632: 32 00                    ret
      :                          @576
  9634: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  9638: 7b 10 80 00              u64 [sp + 0x80] = ra
  9642: 7b 15 78                 u64 [sp + 0x78] = s0
  9645: 7b 16 70                 u64 [sp + 0x70] = s1
  9648: 49 11 60 20              u64 [sp + 96] = 0x20
  9652: 33 0a 03                 a3 = 0x3
  9655: 78 1a 68                 u8 [sp + 0x68] = a3
  9658: 82 96 20                 s1 = u64 [a2 + 0x20]
  9661: 49 11 30                 u64 [sp + 48] = 0
  9664: 49 11 40                 u64 [sp + 64] = 0
  9667: 7b 17 50                 u64 [sp + 0x50] = a0
  9670: 7b 18 58                 u64 [sp + 0x58] = a1
  9673: 51 06 0a 01              jump @598 if s1 == 0
      :                          @577
  9677: 82 97 28                 a0 = u64 [a2 + 0x28]
  9680: 51 07 79 01              jump @608 if a0 == 0
      :                          @578
  9684: 49 11 28                 u64 [sp + 40] = 0
  9687: 82 95                    s0 = u64 [a2]
  9689: 7b 19 08                 u64 [sp + 0x8] = a2
  9692: 82 98 10                 a1 = u64 [a2 + 0x10]
  9695: 7b 18 18                 u64 [sp + 0x18] = a1
  9698: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  9701: 97 88 03                 a1 = a1 << 0x3
  9704: 98 88 03                 a1 = a1 >> 0x3
  9707: 95 88 01                 a1 = a1 + 0x1
  9710: 7b 18                    u64 [sp] = a1
  9712: 95 55 08                 s0 = s0 + 0x8
  9715: 96 78 38                 a1 = a0 * 0x38
  9718: 95 66 18                 s1 = s1 + 0x18
  9721: 33 07 b2 00              a0 = 0xb2
  9725: 7b 17 10                 u64 [sp + 0x10] = a0
  9728: 01                       fallthrough
      :                          @579
  9729: 7b 18 20                 u64 [sp + 0x20] = a1
  9732: 82 59                    a2 = u64 [s0]
  9734: 51 09 18                 jump @582 if a2 == 0
      :                          @580
  9737: 82 1a 58                 a3 = u64 [sp + 0x58]
  9740: 82 17 50                 a0 = u64 [sp + 0x50]
  9743: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  9746: 82 aa 18                 a3 = u64 [a3 + 0x18]
  9749: b4 a0 02 ca 00           ra = 202, jump [a3]
      :                          @581 [@dyn 101]
  9754: 52 07 55 01              jump @611 if a0 != 0
      :                          @582
  9758: 81 67 10                 a0 = i32 [s1 + 0x10]
  9761: 7a 17 60                 u32 [sp + 0x60] = a0
  9764: 7c 67 18                 a0 = u8 [s1 + 0x18]
  9767: 78 17 68                 u8 [sp + 0x68] = a0
  9770: 81 67 14                 a0 = i32 [s1 + 0x14]
  9773: 7a 17 64                 u32 [sp + 0x64] = a0
  9776: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  9779: 82 67                    a0 = u64 [s1]
  9781: 51 08 26                 jump @587 if a1 == 0
      :                          @583
  9784: 52 18 01 16              jump @585 if a1 != 1
      :                          @584
  9788: 97 77 04                 a0 = a0 << 0x4
  9791: 82 18 18                 a1 = u64 [sp + 0x18]
  9794: c8 87 07                 a0 = a0 + a1
  9797: 82 78 08                 a1 = u64 [a0 + 0x8]
  9800: 82 19 10                 a2 = u64 [sp + 0x10]
  9803: aa 98 07                 jump @586 if a1 == a2
      :                          @585
  9806: 33 08                    a1 = 0
  9808: 28 0f                    jump @588
      :                          @586
  9810: 82 77                    a0 = u64 [a0]
  9812: 82 77                    a0 = u64 [a0]
  9814: 33 08 01                 a1 = 0x1
  9817: 28 06                    jump @588
      :                          @587
  9819: 33 08 01                 a1 = 0x1
  9822: 01                       fallthrough
      :                          @588
  9823: 7b 18 30                 u64 [sp + 0x30] = a1
  9826: 7b 17 38                 u64 [sp + 0x38] = a0
  9829: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  9832: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  9835: 51 08 26                 jump @593 if a1 == 0
      :                          @589
  9838: 52 18 01 16              jump @591 if a1 != 1
      :                          @590
  9842: 97 77 04                 a0 = a0 << 0x4
  9845: 82 18 18                 a1 = u64 [sp + 0x18]
  9848: c8 87 07                 a0 = a0 + a1
  9851: 82 78 08                 a1 = u64 [a0 + 0x8]
  9854: 82 19 10                 a2 = u64 [sp + 0x10]
  9857: aa 98 07                 jump @592 if a1 == a2
      :                          @591
  9860: 33 08                    a1 = 0
  9862: 28 0f                    jump @594
      :                          @592
  9864: 82 77                    a0 = u64 [a0]
  9866: 82 77                    a0 = u64 [a0]
  9868: 33 08 01                 a1 = 0x1
  9871: 28 06                    jump @594
      :                          @593
  9873: 33 08 01                 a1 = 0x1
  9876: 01                       fallthrough
      :                          @594
  9877: 7b 18 40                 u64 [sp + 0x40] = a1
  9880: 7b 17 48                 u64 [sp + 0x48] = a0
  9883: 82 67 08                 a0 = u64 [s1 + 0x8]
  9886: 97 77 04                 a0 = a0 << 0x4
  9889: 82 18 18                 a1 = u64 [sp + 0x18]
  9892: c8 78 08                 a1 = a1 + a0
  9895: 82 87                    a0 = u64 [a1]
  9897: 82 89 08                 a2 = u64 [a1 + 0x8]
  9900: 95 18 30                 a1 = sp + 0x30
  9903: b4 90 02 cc 00           ra = 204, jump [a2]
      :                          @595 [@dyn 102]
  9908: 52 07 bb 00              jump @611 if a0 != 0
      :                          @596
  9912: 95 55 10                 s0 = s0 + 0x10
  9915: 82 18 20                 a1 = u64 [sp + 0x20]
  9918: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  9921: 95 66 38                 s1 = s1 + 0x38
  9924: 82 17 28                 a0 = u64 [sp + 0x28]
  9927: 95 77 01                 a0 = a0 + 0x1
  9930: 7b 17 28                 u64 [sp + 0x28] = a0
  9933: 52 08 34 ff              jump @579 if a1 != 0
      :                          @597
  9937: 28 6b                    jump @606
      :                          @598
  9939: 82 97 18                 a0 = u64 [a2 + 0x18]
  9942: 51 07 73                 jump @608 if a0 == 0
      :                          @599
  9945: 82 95 10                 s0 = u64 [a2 + 0x10]
  9948: 33 0a                    a3 = 0
  9950: 97 78 04                 a1 = a0 << 0x4
  9953: c8 58 08                 a1 = a1 + s0
  9956: 7b 18 20                 u64 [sp + 0x20] = a1
  9959: 7b 19 08                 u64 [sp + 0x8] = a2
  9962: 82 96                    s1 = u64 [a2]
  9964: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  9967: 97 77 04                 a0 = a0 << 0x4
  9970: 98 77 04                 a0 = a0 >> 0x4
  9973: 95 77 01                 a0 = a0 + 0x1
  9976: 7b 17                    u64 [sp] = a0
  9978: 95 66 08                 s1 = s1 + 0x8
  9981: 01                       fallthrough
      :                          @600
  9982: 7b 1a 28                 u64 [sp + 0x28] = a3
  9985: 82 69                    a2 = u64 [s1]
  9987: 51 09 17                 jump @603 if a2 == 0
      :                          @601
  9990: 82 1a 58                 a3 = u64 [sp + 0x58]
  9993: 82 17 50                 a0 = u64 [sp + 0x50]
  9996: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  9999: 82 aa 18                 a3 = u64 [a3 + 0x18]
 10002: b4 a0 02 ce 00           ra = 206, jump [a3]
      :                          @602 [@dyn 103]
 10007: 52 07 58                 jump @611 if a0 != 0
      :                          @603
 10010: 82 57                    a0 = u64 [s0]
 10012: 82 59 08                 a2 = u64 [s0 + 0x8]
 10015: 95 18 30                 a1 = sp + 0x30
 10018: b4 90 02 d0 00           ra = 208, jump [a2]
      :                          @604 [@dyn 104]
 10023: 52 07 48                 jump @611 if a0 != 0
      :                          @605
 10026: 95 66 10                 s1 = s1 + 0x10
 10029: 95 55 10                 s0 = s0 + 0x10
 10032: 82 1a 28                 a3 = u64 [sp + 0x28]
 10035: 95 aa 01                 a3 = a3 + 0x1
 10038: 82 17 20                 a0 = u64 [sp + 0x20]
 10041: ab 75 c5                 jump @600 if s0 != a0
      :                          @606
 10044: 82 19 08                 a2 = u64 [sp + 0x8]
 10047: 82 1a                    a3 = u64 [sp]
 10049: 82 97 08                 a0 = u64 [a2 + 0x8]
 10052: ac 7a 0d                 jump @609 if a3 <u a0
      :                          @607
 10055: 28 2d                    jump @612
      :                          @608
 10057: 33 0a                    a3 = 0
 10059: 82 97 08                 a0 = u64 [a2 + 0x8]
 10062: 54 07 26                 jump @612 if a0 <=u 0
      :                          @609
 10065: 82 97                    a0 = u64 [a2]
 10067: 97 a8 04                 a1 = a3 << 0x4
 10070: c8 87 09                 a2 = a0 + a1
 10073: 82 1a 58                 a3 = u64 [sp + 0x58]
 10076: 82 17 50                 a0 = u64 [sp + 0x50]
 10079: 82 98                    a1 = u64 [a2]
 10081: 82 99 08                 a2 = u64 [a2 + 0x8]
 10084: 82 aa 18                 a3 = u64 [a3 + 0x18]
 10087: b4 a0 02 d2 00           ra = 210, jump [a3]
      :                          @610 [@dyn 105]
 10092: 51 07 08                 jump @612 if a0 == 0
      :                          @611
 10095: 33 07 01                 a0 = 0x1
 10098: 28 05                    jump @613
      :                          @612
 10100: 33 07                    a0 = 0
 10102: 01                       fallthrough
      :                          @613
 10103: 82 10 80 00              ra = u64 [sp + 0x80]
 10107: 82 15 78                 s0 = u64 [sp + 0x78]
 10110: 82 16 70                 s1 = u64 [sp + 0x70]
 10113: 95 11 88 00              sp = sp + 0x88
 10117: 32 00                    ret
      :                          @614 [@dyn 106]
 10119: 32 00                    ret
      :                          @615 [@dyn 107]
 10121: 95 11 80                 sp = sp + 0xffffffffffffff80
 10124: 7b 10 78                 u64 [sp + 0x78] = ra
 10127: 7b 15 70                 u64 [sp + 0x70] = s0
 10130: 7b 16 68                 u64 [sp + 0x68] = s1
 10133: 64 92                    t0 = a2
 10135: 33 00                    ra = 0
 10137: 33 0b                    a4 = 0
 10139: 33 05                    s0 = 0
 10141: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
 10151: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
 10157: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
 10167: 82 79 10                 a2 = u64 [a0 + 0x10]
 10170: 7b 19 48                 u64 [sp + 0x48] = a2
 10173: 82 79                    a2 = u64 [a0]
 10175: 7b 19 38                 u64 [sp + 0x38] = a2
 10178: 82 77 08                 a0 = u64 [a0 + 0x8]
 10181: 7b 17 30                 u64 [sp + 0x30] = a0
 10184: 33 07 38 01 01           a0 = 0x10138
 10189: 7b 17 08                 u64 [sp + 0x8] = a0
 10192: 3a 07 58 00 03           a0 = u64 [0x30058]
 10197: 7b 17 60                 u64 [sp + 0x60] = a0
 10200: 7b 18 58                 u64 [sp + 0x58] = a1
 10203: 95 88 08                 a1 = a1 + 0x8
 10206: 7b 18                    u64 [sp] = a1
 10208: 33 0c 0a                 a5 = 0xa
 10211: 7b 12 20                 u64 [sp + 0x20] = t0
 10214: 7b 13 18                 u64 [sp + 0x18] = t1
 10217: 7b 14 10                 u64 [sp + 0x10] = t2
 10220: 28 3b                    jump @619
      :                          @616
 10222: 64 06                    s1 = ra
 10224: c8 89 07                 a0 = a2 + a1
 10227: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
 10230: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
 10233: 88 77 01                 a0 = a0 <u 0x1
 10236: 01                       fallthrough
      :                          @617
 10237: 82 1a 48                 a3 = u64 [sp + 0x48]
 10240: 78 a7                    u8 [a3] = a0
 10242: 82 17 30                 a0 = u64 [sp + 0x30]
 10245: 82 7a 18                 a3 = u64 [a0 + 0x18]
 10248: 82 17 38                 a0 = u64 [sp + 0x38]
 10251: b4 a0 02 d8 00           ra = 216, jump [a3]
      :                          @618 [@dyn 108]
 10256: 64 5b                    a4 = s0
 10258: 82 12 20                 t0 = u64 [sp + 0x20]
 10261: 82 13 18                 t1 = u64 [sp + 0x18]
 10264: 82 14 10                 t2 = u64 [sp + 0x10]
 10267: 64 60                    ra = s1
 10269: 33 0c 0a                 a5 = 0xa
 10272: 82 15 40                 s0 = u64 [sp + 0x40]
 10275: 52 07 64 01              jump @660 if a0 != 0
      :                          @619
 10279: 84 57 ff 00              a0 = s0 & 0xff
 10283: 52 07 58 01              jump @659 if a0 != 0
      :                          @620
 10287: 7b 1b 50                 u64 [sp + 0x50] = a4
 10290: ae 02 0a                 jump @623 if t0 >=u ra
      :                          @621
 10293: 28 ef 00                 jump @650
      :                          @622
 10296: ac 02 ec 00              jump @650 if t0 <u ra
      :                          @623
 10300: c9 02 08                 a1 = t0 - ra
 10303: 82 16 58                 s1 = u64 [sp + 0x58]
 10306: c8 06 06                 s1 = s1 + ra
 10309: 55 18 10 1d              jump @629 if a1 >=u 16
      :                          @624
 10313: aa 02 d8 00              jump @649 if t0 == ra
      :                          @625
 10317: 33 0a                    a3 = 0
 10319: 01                       fallthrough
      :                          @626
 10320: c8 a6 07                 a0 = s1 + a3
 10323: 7c 77                    a0 = u8 [a0]
 10325: aa c7 a5 00              jump @644 if a0 == a5
      :                          @627
 10329: 95 aa 01                 a3 = a3 + 0x1
 10332: ab a8 f4                 jump @626 if a1 != a3
      :                          @628
 10335: 28 c2 00                 jump @649
      :                          @629
 10338: 95 69 07                 a2 = s1 + 0x7
 10341: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
 10344: c9 6a 07                 a0 = a3 - s1
 10347: d3 6a 0a                 a3 = a3 ^ s1
 10350: 88 aa 01                 a3 = a3 <u 0x1
 10353: 88 7b 01                 a4 = a0 <u 0x1
 10356: d4 ba 0a                 a3 = a3 | a4
 10359: 51 0a 45                 jump @635 if a3 == 0
      :                          @630
 10362: 33 07                    a0 = 0
 10364: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
 10367: 82 1b                    a4 = u64 [sp]
 10369: c8 0b 0b                 a4 = a4 + ra
 10372: 28 08                    jump @632
      :                          @631
 10374: 82 1b                    a4 = u64 [sp]
 10376: c8 0b 0b                 a4 = a4 + ra
 10379: 01                       fallthrough
      :                          @632
 10380: c8 76 0c                 a5 = s1 + a0
 10383: 82 cc                    a5 = u64 [a5]
 10385: c8 7b 09                 a2 = a4 + a0
 10388: 82 99                    a2 = u64 [a2]
 10390: d3 4c 05                 s0 = a5 ^ t2
 10393: c8 35 05                 s0 = s0 + t1
 10396: e0 c5 0c                 a5 = s0 & ~a5
 10399: d3 49 05                 s0 = a2 ^ t2
 10402: c8 35 05                 s0 = s0 + t1
 10405: e0 95 09                 a2 = s0 & ~a2
 10408: d4 c9 09                 a2 = a2 | a5
 10411: 82 1c 60                 a5 = u64 [sp + 0x60]
 10414: d2 c9 09                 a2 = a2 & a5
 10417: 52 09 1f                 jump @638 if a2 != 0
      :                          @633
 10420: 95 77 10                 a0 = a0 + 0x10
 10423: ae 7a d5                 jump @632 if a3 >=u a0
      :                          @634
 10426: 28 16                    jump @638
      :                          @635
 10428: c8 a6 0b                 a4 = s1 + a3
 10431: 7c bb                    a4 = u8 [a4]
 10433: aa cb 51                 jump @647 if a4 == a5
      :                          @636
 10436: 95 aa 01                 a3 = a3 + 0x1
 10439: ab a7 f5                 jump @635 if a0 != a3
      :                          @637
 10442: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
 10445: ae 7a b9                 jump @631 if a3 >=u a0
      :                          @638
 10448: aa 87 9b 00              jump @656 if a0 == a1
      :                          @639
 10452: 33 0a                    a3 = 0
 10454: c8 76 06                 s1 = s1 + a0
 10457: c9 72 08                 a1 = t0 - a0
 10460: c9 08 08                 a1 = a1 - ra
 10463: 33 0c 0a                 a5 = 0xa
 10466: 82 1b 50                 a4 = u64 [sp + 0x50]
 10469: 01                       fallthrough
      :                          @640
 10470: c8 a6 09                 a2 = s1 + a3
 10473: 7c 99                    a2 = u8 [a2]
 10475: aa c9 0b                 jump @643 if a2 == a5
      :                          @641
 10478: 95 aa 01                 a3 = a3 + 0x1
 10481: ab a8 f5                 jump @640 if a1 != a3
      :                          @642
 10484: 28 2d                    jump @649
      :                          @643
 10486: c8 7a 0a                 a3 = a3 + a0
 10489: 01                       fallthrough
      :                          @644
 10490: c8 0a 0a                 a3 = a3 + ra
 10493: 95 a0 01                 ra = a3 + 0x1
 10496: ae 2a 38 ff              jump @622 if a3 >=u t0
      :                          @645
 10500: 82 17 58                 a0 = u64 [sp + 0x58]
 10503: c8 7a 0a                 a3 = a3 + a0
 10506: 7c a7                    a0 = u8 [a3]
 10508: ab c7 2c ff              jump @622 if a0 != a5
      :                          @646
 10512: 28 62                    jump @657
      :                          @647
 10514: 82 1b 50                 a4 = u64 [sp + 0x50]
 10517: c8 0a 0a                 a3 = a3 + ra
 10520: 95 a0 01                 ra = a3 + 0x1
 10523: ac 2a e9                 jump @645 if a3 <u t0
      :                          @648
 10526: 28 1a ff                 jump @622
      :                          @649
 10529: 64 20                    ra = t0
 10531: 01                       fallthrough
      :                          @650
 10532: 49 11 40 01              u64 [sp + 64] = 0x1
 10536: 64 b5                    s0 = a4
 10538: 64 26                    s1 = t0
 10540: aa 2b 57                 jump @659 if a4 == t0
      :                          @651
 10543: 82 17 48                 a0 = u64 [sp + 0x48]
 10546: 7c 77                    a0 = u8 [a0]
 10548: 51 07 23                 jump @654 if a0 == 0
      :                          @652
 10551: 82 17 30                 a0 = u64 [sp + 0x30]
 10554: 82 7a 18                 a3 = u64 [a0 + 0x18]
 10557: 33 09 04                 a2 = 0x4
 10560: 82 17 38                 a0 = u64 [sp + 0x38]
 10563: 82 18 08                 a1 = u64 [sp + 0x8]
 10566: 7b 10 28                 u64 [sp + 0x28] = ra
 10569: b4 a0 02 da 00           ra = 218, jump [a3]
      :                          @653 [@dyn 109]
 10574: 82 1b 50                 a4 = u64 [sp + 0x50]
 10577: 82 10 28                 ra = u64 [sp + 0x28]
 10580: 52 07 33                 jump @660 if a0 != 0
      :                          @654
 10583: c9 b6 09                 a2 = s1 - a4
 10586: 82 18 58                 a1 = u64 [sp + 0x58]
 10589: c8 b8 08                 a1 = a1 + a4
 10592: ab b6 8e fe              jump @616 if s1 != a4
      :                          @655
 10596: 64 06                    s1 = ra
 10598: 33 07                    a0 = 0
 10600: 28 95 fe                 jump @617
      :                          @656
 10603: 64 20                    ra = t0
 10605: 82 1b 50                 a4 = u64 [sp + 0x50]
 10608: 28 b4                    jump @650
      :                          @657
 10610: 49 11 40                 u64 [sp + 64] = 0
 10613: 64 05                    s0 = ra
 10615: 64 06                    s1 = ra
 10617: 82 17 48                 a0 = u64 [sp + 0x48]
 10620: 7c 77                    a0 = u8 [a0]
 10622: 52 07 b9                 jump @652 if a0 != 0
      :                          @658
 10625: 28 d6                    jump @654
      :                          @659
 10627: 33 07                    a0 = 0
 10629: 28 06                    jump @661
      :                          @660
 10631: 33 07 01                 a0 = 0x1
 10634: 01                       fallthrough
      :                          @661
 10635: 82 10 78                 ra = u64 [sp + 0x78]
 10638: 82 15 70                 s0 = u64 [sp + 0x70]
 10641: 82 16 68                 s1 = u64 [sp + 0x68]
 10644: 95 11 80 00              sp = sp + 0x80
 10648: 32 00                    ret
      :                          @662 [@dyn 110]
 10650: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 10653: 7b 10 20                 u64 [sp + 0x20] = ra
 10656: 7b 15 18                 u64 [sp + 0x18] = s0
 10659: 7b 16 10                 u64 [sp + 0x10] = s1
 10662: 82 75 10                 s0 = u64 [a0 + 0x10]
 10665: 7c 59                    a2 = u8 [s0]
 10667: 82 7b                    a4 = u64 [a0]
 10669: 82 76 08                 s1 = u64 [a0 + 0x8]
 10672: 51 09 33                 jump @666 if a2 == 0
      :                          @663
 10675: 82 6a 18                 a3 = u64 [s1 + 0x18]
 10678: 7b 18 08                 u64 [sp + 0x8] = a1
 10681: 33 08 38 01 01           a1 = 0x10138
 10686: 33 09 04                 a2 = 0x4
 10689: 64 b7                    a0 = a4
 10691: 7b 1b                    u64 [sp] = a4
 10693: b4 a0 02 de 00           ra = 222, jump [a3]
      :                          @664 [@dyn 111]
 10698: 82 18 08                 a1 = u64 [sp + 0x8]
 10701: 82 1b                    a4 = u64 [sp]
 10703: 51 07 14                 jump @666 if a0 == 0
      :                          @665
 10706: 33 07 01                 a0 = 0x1
 10709: 82 10 20                 ra = u64 [sp + 0x20]
 10712: 82 15 18                 s0 = u64 [sp + 0x18]
 10715: 82 16 10                 s1 = u64 [sp + 0x10]
 10718: 95 11 28                 sp = sp + 0x28
 10721: 32 00                    ret
      :                          @666
 10723: 83 87                    i32 a0 = a1 + 0
 10725: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
 10728: 88 77 01                 a0 = a0 <u 0x1
 10731: 78 57                    u8 [s0] = a0
 10733: 82 6c 20                 a5 = u64 [s1 + 0x20]
 10736: 64 b7                    a0 = a4
 10738: 82 10 20                 ra = u64 [sp + 0x20]
 10741: 82 15 18                 s0 = u64 [sp + 0x18]
 10744: 82 16 10                 s1 = u64 [sp + 0x10]
 10747: 95 11 28                 sp = sp + 0x28
 10750: 32 0c                    jump [a5]
      :                          @667 [@dyn 112]
 10752: 64 8a                    a3 = a1
 10754: 33 08 08 01 01           a1 = 0x10108
 10759: 64 a9                    a2 = a3
 10761: 28 99 fb                 jump @576
      :                          @668
 10764: 95 11 70 ff              sp = sp + 0xffffffffffffff70
 10768: 7b 10 88 00              u64 [sp + 0x88] = ra
 10772: 7b 15 80 00              u64 [sp + 0x80] = s0
 10776: 7b 16 78                 u64 [sp + 0x78] = s1
 10779: 64 75                    s0 = a0
 10781: 7c 77 08                 a0 = u8 [a0 + 0x8]
 10784: 64 8b                    a4 = a1
 10786: 33 08 01                 a1 = 0x1
 10789: 33 06 01                 s1 = 0x1
 10792: 51 07 1d                 jump @670 if a0 == 0
      :                          @669
 10795: 78 56 08                 u8 [s0 + 0x8] = s1
 10798: 46 15 09 01              u8 [s0 + 9] = 0x1
 10802: 64 57                    a0 = s0
 10804: 82 10 88 00              ra = u64 [sp + 0x88]
 10808: 82 15 80 00              s0 = u64 [sp + 0x80]
 10812: 82 16 78                 s1 = u64 [sp + 0x78]
 10815: 95 11 90 00              sp = sp + 0x90
 10819: 32 00                    ret
      :                          @670
 10821: 64 9a                    a3 = a2
 10823: 82 5c                    a5 = u64 [s0]
 10825: 80 c7 34                 a0 = u32 [a5 + 0x34]
 10828: 7c 58 09                 a1 = u8 [s0 + 0x9]
 10831: 84 79 04                 a2 = a0 & 0x4
 10834: 52 09 45                 jump @676 if a2 != 0
      :                          @671
 10837: 51 08 32                 jump @674 if a1 == 0
      :                          @672
 10840: 82 c8 28                 a1 = u64 [a5 + 0x28]
 10843: 82 c7 20                 a0 = u64 [a5 + 0x20]
 10846: 82 83 18                 t1 = u64 [a1 + 0x18]
 10849: 33 08 3c 01 01           a1 = 0x1013c
 10854: 33 09 02                 a2 = 0x2
 10857: 64 a6                    s1 = a3
 10859: 7b 1b 10                 u64 [sp + 0x10] = a4
 10862: 7b 1c 08                 u64 [sp + 0x8] = a5
 10865: b4 30 02 e2 00           ra = 226, jump [t1]
      :                          @673 [@dyn 113]
 10870: 82 1c 08                 a5 = u64 [sp + 0x8]
 10873: 82 1b 10                 a4 = u64 [sp + 0x10]
 10876: 64 6a                    a3 = s1
 10878: 33 08 01                 a1 = 0x1
 10881: 33 06 01                 s1 = 0x1
 10884: 52 07 a7                 jump @669 if a0 != 0
      :                          @674
 10887: 64 b7                    a0 = a4
 10889: 64 c8                    a1 = a5
 10891: b4 a0 02 e4 00           ra = 228, jump [a3]
      :                          @675 [@dyn 114]
 10896: 33 08 01                 a1 = 0x1
 10899: 64 76                    s1 = a0
 10901: 28 96                    jump @669
      :                          @676
 10903: 52 08 37                 jump @680 if a1 != 0
      :                          @677
 10906: 82 c8 28                 a1 = u64 [a5 + 0x28]
 10909: 82 c7 20                 a0 = u64 [a5 + 0x20]
 10912: 82 83 18                 t1 = u64 [a1 + 0x18]
 10915: 33 08 40 01 01           a1 = 0x10140
 10920: 33 09 01                 a2 = 0x1
 10923: 33 06 01                 s1 = 0x1
 10926: 7b 1a                    u64 [sp] = a3
 10928: 7b 1b 10                 u64 [sp + 0x10] = a4
 10931: 7b 1c 08                 u64 [sp + 0x8] = a5
 10934: b4 30 02 e6 00           ra = 230, jump [t1]
      :                          @678 [@dyn 115]
 10939: 82 1c 08                 a5 = u64 [sp + 0x8]
 10942: 82 1b 10                 a4 = u64 [sp + 0x10]
 10945: 82 1a                    a3 = u64 [sp]
 10947: 33 08 01                 a1 = 0x1
 10950: 52 07 65 ff              jump @669 if a0 != 0
      :                          @679
 10954: 81 c7 34                 a0 = i32 [a5 + 0x34]
 10957: 01                       fallthrough
      :                          @680
 10958: 33 06 01                 s1 = 0x1
 10961: 78 16 37                 u8 [sp + 0x37] = s1
 10964: 82 c8 20                 a1 = u64 [a5 + 0x20]
 10967: 82 c9 28                 a2 = u64 [a5 + 0x28]
 10970: 7b 18 18                 u64 [sp + 0x18] = a1
 10973: 7b 19 20                 u64 [sp + 0x20] = a2
 10976: 95 18 37                 a1 = sp + 0x37
 10979: 7b 18 28                 u64 [sp + 0x28] = a1
 10982: 81 c8 30                 a1 = i32 [a5 + 0x30]
 10985: 7c c9 38                 a2 = u8 [a5 + 0x38]
 10988: 82 c3                    t1 = u64 [a5]
 10990: 82 c4 08                 t2 = u64 [a5 + 0x8]
 10993: 82 c0 10                 ra = u64 [a5 + 0x10]
 10996: 82 c2 18                 t0 = u64 [a5 + 0x18]
 10999: 7a 17 6c                 u32 [sp + 0x6c] = a0
 11002: 7a 18 68                 u32 [sp + 0x68] = a1
 11005: 78 19 70                 u8 [sp + 0x70] = a2
 11008: 7b 13 38                 u64 [sp + 0x38] = t1
 11011: 7b 14 40                 u64 [sp + 0x40] = t2
 11014: 7b 10 48                 u64 [sp + 0x48] = ra
 11017: 7b 12 50                 u64 [sp + 0x50] = t0
 11020: 95 17 18                 a0 = sp + 0x18
 11023: 7b 17 58                 u64 [sp + 0x58] = a0
 11026: 33 07 08 01 01           a0 = 0x10108
 11031: 7b 17 60                 u64 [sp + 0x60] = a0
 11034: 95 18 38                 a1 = sp + 0x38
 11037: 64 b7                    a0 = a4
 11039: b4 a0 02 e8 00           ra = 232, jump [a3]
      :                          @681 [@dyn 116]
 11044: 52 07 21                 jump @684 if a0 != 0
      :                          @682
 11047: 82 18 60                 a1 = u64 [sp + 0x60]
 11050: 82 17 58                 a0 = u64 [sp + 0x58]
 11053: 82 8a 18                 a3 = u64 [a1 + 0x18]
 11056: 33 08 3e 01 01           a1 = 0x1013e
 11061: 33 09 02                 a2 = 0x2
 11064: b4 a0 02 ea 00           ra = 234, jump [a3]
      :                          @683 [@dyn 117]
 11069: 64 76                    s1 = a0
 11071: 33 08 01                 a1 = 0x1
 11074: 28 e9 fe                 jump @669
      :                          @684
 11077: 33 08 01                 a1 = 0x1
 11080: 28 e3 fe                 jump @669
      :                          @685
 11083: 51 08 9b 00              jump @706 if a1 == 0
      :                          @686
 11087: 64 79                    a2 = a0
 11089: 7c 77                    a0 = u8 [a0]
 11091: 51 07 91 00              jump @705 if a0 == 0
      :                          @687
 11095: 51 27 ff 00 90 00        jump @707 if a0 == 255
      :                          @688
 11101: 6c 7a                    a3 = sext.b a0
 11103: 57 0a 09                 jump @690 if a3 <s 0
      :                          @689
 11106: 33 0a                    a3 = 0
 11108: 33 08                    a1 = 0
 11110: 28 73                    jump @704
      :                          @690
 11112: 55 27 c0 00 0d           jump @692 if a0 >=u 192
      :                          @691
 11117: 33 0a 01                 a3 = 0x1
 11120: 33 0b 80                 a4 = 0xffffffffffffff80
 11123: 28 4a                    jump @701
      :                          @692
 11125: 55 27 e0 00 0e           jump @694 if a0 >=u 224
      :                          @693
 11130: 33 0a 02                 a3 = 0x2
 11133: 33 0b 40 ff              a4 = 0xffffffffffffff40
 11137: 28 3c                    jump @701
      :                          @694
 11139: 55 27 f0 00 0e           jump @696 if a0 >=u 240
      :                          @695
 11144: 33 0a 03                 a3 = 0x3
 11147: 33 0b 20 ff              a4 = 0xffffffffffffff20
 11151: 28 2e                    jump @701
      :                          @696
 11153: 55 27 f8 00 0e           jump @698 if a0 >=u 248
      :                          @697
 11158: 33 0a 04                 a3 = 0x4
 11161: 33 0b 10 ff              a4 = 0xffffffffffffff10
 11165: 28 20                    jump @701
      :                          @698
 11167: 55 27 fc 00 0e           jump @700 if a0 >=u 252
      :                          @699
 11172: 33 0a 05                 a3 = 0x5
 11175: 33 0b 08 ff              a4 = 0xffffffffffffff08
 11179: 28 12                    jump @701
      :                          @700
 11181: 88 7a fe 00              a3 = a0 <u 0xfe
 11185: 33 0b 04 ff              a4 = 0xffffffffffffff04
 11189: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
 11193: 85 aa 07                 a3 = a3 ^ 0x7
 11196: 01                       fallthrough
      :                          @701
 11197: ae 8a 2b                 jump @708 if a3 >=u a1
      :                          @702
 11200: 33 08                    a1 = 0
 11202: c8 b7 07                 a0 = a0 + a4
 11205: 64 ab                    a4 = a3
 11207: 01                       fallthrough
      :                          @703
 11208: c8 b9 0c                 a5 = a2 + a4
 11211: 7c cc                    a5 = u8 [a5]
 11213: 97 88 08                 a1 = a1 << 0x8
 11216: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 11219: d4 c8 08                 a1 = a1 | a5
 11222: 52 0b f2                 jump @703 if a4 != 0
      :                          @704
 11225: 8a a9 03                 i32 a2 = a3 << 0x3
 11228: cf 97 07                 a0 = a0 << a2
 11231: c8 87 07                 a0 = a0 + a1
 11234: 32 00                    ret
      :                          @705
 11236: 32 00                    ret
      :                          @706
 11238: 00                       trap
      :                          @707
 11239: 00                       trap
      :                          @708
 11240: 00                       trap
