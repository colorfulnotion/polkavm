// RO data = 0/0 bytes
// RW data = 0/0 bytes
// Stack size = 8192 bytes
// Jump table entry point size = 2 bytes
// RO data = []
// RW data = []
// Instructions = 402
// Code size = 1224 bytes

      :                          @0
     0: 28 0d 00 00 00           jump @3
      :                          @1
     5: 28 1b 01 00 00           jump @37
      :                          @2
    10: 28 63 04                 jump @138
      :                          @3 [export #0: 'refine']
    13: 64 89                    a2 = a1
    15: 64 78                    a1 = a0
    17: 33 0a 04                 a3 = 0x4
    20: 33 07 00 00 01           a0 = 0x10000
    25: ac a9 61                 jump @17 if a2 <u a3
      :                          @4
    28: 95 94 fc                 t2 = a2 + 0xfffffffffffffffc
    31: 51 04 5b                 jump @17 if t2 == 0
      :                          @5
    34: 95 89 04                 a2 = a1 + 0x4
    37: 7d 9b                    a4 = i8 [a2]
    39: 84 b8 ff 00              a1 = a4 & 0xff
    43: 33 0a 01                 a3 = 0x1
    46: 59 0b 37                 jump @13 if a4 >=s 0
      :                          @6
    49: 33 0a 02                 a3 = 0x2
    52: 53 28 c0 00 2d           jump @12 if a1 <u 192
      :                          @7
    57: 33 0a 03                 a3 = 0x3
    60: 53 28 e0 00 25           jump @12 if a1 <u 224
      :                          @8
    65: 33 0a 04                 a3 = 0x4
    68: 53 28 f0 00 1d           jump @12 if a1 <u 240
      :                          @9
    73: 33 0a 05                 a3 = 0x5
    76: 53 28 f8 00 15           jump @12 if a1 <u 248
      :                          @10
    81: 33 0a 06                 a3 = 0x6
    84: 53 28 fc 00 0d           jump @12 if a1 <u 252
      :                          @11
    89: 88 8a fe 00              a3 = a1 <u 0xfe
    93: 9a aa 08                 a3 = 0x8 - a3
    96: 01                       fallthrough
      :                          @12
    97: ac a4 bd 00              jump @35 if t2 <u a3
      :                          @13
   101: 51 08 94 00              jump @33 if a1 == 0
      :                          @14
   105: 51 28 ff 00 b4 00        jump @34 if a1 == 255
      :                          @15
   111: 6c 8b                    a4 = sext.b a1
   113: 57 0b 0d                 jump @18 if a4 <s 0
      :                          @16
   116: 33 03                    t1 = 0
   118: 33 0c                    a5 = 0
   120: 28 77                    jump @32
      :                          @17
   122: 33 08                    a1 = 0
   124: 32 00                    ret
      :                          @18
   126: 55 28 c0 00 0d           jump @20 if a1 >=u 192
      :                          @19
   131: 33 03 01                 t1 = 0x1
   134: 33 02 80                 t0 = 0xffffffffffffff80
   137: 28 4a                    jump @29
      :                          @20
   139: 55 28 e0 00 0e           jump @22 if a1 >=u 224
      :                          @21
   144: 33 03 02                 t1 = 0x2
   147: 33 02 40 ff              t0 = 0xffffffffffffff40
   151: 28 3c                    jump @29
      :                          @22
   153: 55 28 f0 00 0e           jump @24 if a1 >=u 240
      :                          @23
   158: 33 03 03                 t1 = 0x3
   161: 33 02 20 ff              t0 = 0xffffffffffffff20
   165: 28 2e                    jump @29
      :                          @24
   167: 55 28 f8 00 0e           jump @26 if a1 >=u 248
      :                          @25
   172: 33 03 04                 t1 = 0x4
   175: 33 02 10 ff              t0 = 0xffffffffffffff10
   179: 28 20                    jump @29
      :                          @26
   181: 55 28 fc 00 0e           jump @28 if a1 >=u 252
      :                          @27
   186: 33 03 05                 t1 = 0x5
   189: 33 02 08 ff              t0 = 0xffffffffffffff08
   193: 28 12                    jump @29
      :                          @28
   195: 88 8b fe 00              a4 = a1 <u 0xfe
   199: 33 02 04 ff              t0 = 0xffffffffffffff04
   203: 93 b2 02 ff              t0 = 0xffffffffffffff02 if a4 == 0
   207: 85 b3 07                 t1 = a4 ^ 0x7
   210: 01                       fallthrough
      :                          @29
   211: ae a3 4c                 jump @36 if t1 >=u a3
      :                          @30
   214: 33 0c                    a5 = 0
   216: c8 28 08                 a1 = a1 + t0
   219: 64 3b                    a4 = t1
   221: 01                       fallthrough
      :                          @31
   222: c8 b9 07                 a0 = a2 + a4
   225: 7c 77                    a0 = u8 [a0]
   227: 97 cc 08                 a5 = a5 << 0x8
   230: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
   233: d4 7c 0c                 a5 = a5 | a0
   236: 52 0b f2                 jump @31 if a4 != 0
      :                          @32
   239: 8a 37 03                 i32 a0 = t1 << 0x3
   242: cf 78 08                 a1 = a1 << a0
   245: c8 c8 08                 a1 = a1 + a5
   248: 01                       fallthrough
      :                          @33
   249: e4 a4 07                 a0 = maxu(t2, a3)
   252: c9 a7 07                 a0 = a0 - a3
   255: d8 87 0b                 a4 = a0 <u a1
   258: e4 87 07                 a0 = maxu(a0, a1)
   261: c9 87 07                 a0 = a0 - a1
   264: 88 77 20                 a0 = a0 <u 0x20
   267: d4 7b 0b                 a4 = a4 | a0
   270: c8 a9 09                 a2 = a2 + a3
   273: 94 b8                    a1 = 0 if a4 != 0
   275: 33 07 00 00 01           a0 = 0x10000
   280: da b9 07                 a0 = a2 if a4 == 0
   283: 32 00                    ret
      :                          @34
   285: 00                       trap
      :                          @35
   286: 00                       trap
      :                          @36
   287: 00                       trap
      :                          @37 [export #1: 'accumulate']
   288: 95 11 60 ff              sp = sp + 0xffffffffffffff60
   292: 7b 10 98 00              u64 [sp + 0x98] = ra
   296: 7b 15 90 00              u64 [sp + 0x90] = s0
   300: 7b 16 88 00              u64 [sp + 0x88] = s1
   304: 64 79                    a2 = a0
   306: 95 8b f8                 a4 = a1 + 0xfffffffffffffff8
   309: 33 07 00 00 01           a0 = 0x10000
   314: 51 0b 52                 jump @46 if a4 == 0
      :                          @38
   317: 95 99 08                 a2 = a2 + 0x8
   320: 7d 9c                    a5 = i8 [a2]
   322: 84 c8 ff 00              a1 = a5 & 0xff
   326: 33 04 01                 t2 = 0x1
   329: 59 0c 40                 jump @45 if a5 >=s 0
      :                          @39
   332: 33 0c c0 00              a5 = 0xc0
   336: 33 04 02                 t2 = 0x2
   339: ac c8 36                 jump @45 if a1 <u a5
      :                          @40
   342: 33 0c e0 00              a5 = 0xe0
   346: 33 04 03                 t2 = 0x3
   349: ac c8 2c                 jump @45 if a1 <u a5
      :                          @41
   352: 33 0c f0 00              a5 = 0xf0
   356: 33 04 04                 t2 = 0x4
   359: ac c8 22                 jump @45 if a1 <u a5
      :                          @42
   362: 33 0c f8 00              a5 = 0xf8
   366: 33 04 05                 t2 = 0x5
   369: ac c8 18                 jump @45 if a1 <u a5
      :                          @43
   372: 33 0c fc 00              a5 = 0xfc
   376: 33 04 06                 t2 = 0x6
   379: ac c8 0e                 jump @45 if a1 <u a5
      :                          @44
   382: 88 8a fe 00              a3 = a1 <u 0xfe
   386: 33 0c 08                 a5 = 0x8
   389: c9 ac 04                 t2 = a5 - a3
   392: 01                       fallthrough
      :                          @45
   393: ae 4b 18                 jump @48 if a4 >=u t2
      :                          @46
   396: 33 08                    a1 = 0
   398: 01                       fallthrough
      :                          @47
   399: 82 10 98 00              ra = u64 [sp + 0x98]
   403: 82 15 90 00              s0 = u64 [sp + 0x90]
   407: 82 16 88 00              s1 = u64 [sp + 0x88]
   411: 95 11 a0 00              sp = sp + 0xa0
   415: 32 00                    ret
      :                          @48
   417: 51 08 ee                 jump @47 if a1 == 0
      :                          @49
   420: 51 28 ff 00 c3 02        jump @132 if a1 == 255
      :                          @50
   426: 6c 8c                    a5 = sext.b a1
   428: 57 0c 09                 jump @52 if a5 <s 0
      :                          @51
   431: 33 03                    t1 = 0
   433: 33 0c                    a5 = 0
   435: 28 74                    jump @66
      :                          @52
   437: 55 28 c0 00 0d           jump @54 if a1 >=u 192
      :                          @53
   442: 33 03 01                 t1 = 0x1
   445: 33 02 80                 t0 = 0xffffffffffffff80
   448: 28 4a                    jump @63
      :                          @54
   450: 55 28 e0 00 0e           jump @56 if a1 >=u 224
      :                          @55
   455: 33 03 02                 t1 = 0x2
   458: 33 02 40 ff              t0 = 0xffffffffffffff40
   462: 28 3c                    jump @63
      :                          @56
   464: 55 28 f0 00 0e           jump @58 if a1 >=u 240
      :                          @57
   469: 33 03 03                 t1 = 0x3
   472: 33 02 20 ff              t0 = 0xffffffffffffff20
   476: 28 2e                    jump @63
      :                          @58
   478: 55 28 f8 00 0e           jump @60 if a1 >=u 248
      :                          @59
   483: 33 03 04                 t1 = 0x4
   486: 33 02 10 ff              t0 = 0xffffffffffffff10
   490: 28 20                    jump @63
      :                          @60
   492: 55 28 fc 00 0e           jump @62 if a1 >=u 252
      :                          @61
   497: 33 03 05                 t1 = 0x5
   500: 33 02 08 ff              t0 = 0xffffffffffffff08
   504: 28 12                    jump @63
      :                          @62
   506: 88 8c fe 00              a5 = a1 <u 0xfe
   510: 33 02 04 ff              t0 = 0xffffffffffffff04
   514: 93 c2 02 ff              t0 = 0xffffffffffffff02 if a5 == 0
   518: 85 c3 07                 t1 = a5 ^ 0x7
   521: 01                       fallthrough
      :                          @63
   522: ae 43 5e 02              jump @133 if t1 >=u t2
      :                          @64
   526: 33 0c                    a5 = 0
   528: c8 28 08                 a1 = a1 + t0
   531: 64 35                    s0 = t1
   533: 01                       fallthrough
      :                          @65
   534: c8 59 0a                 a3 = a2 + s0
   537: 7c aa                    a3 = u8 [a3]
   539: 97 cc 08                 a5 = a5 << 0x8
   542: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
   545: d4 ac 0c                 a5 = a5 | a3
   548: 52 05 f2                 jump @65 if s0 != 0
      :                          @66
   551: 8a 3a 03                 i32 a3 = t1 << 0x3
   554: cf a8 08                 a1 = a1 << a3
   557: 9a 8a                    a3 = -a1
   559: aa ac 5d ff              jump @46 if a5 == a3
      :                          @67
   563: e4 4b 08                 a1 = maxu(a4, t2)
   566: c9 48 08                 a1 = a1 - t2
   569: 33 0a 60                 a3 = 0x60
   572: ac a8 50 ff              jump @46 if a1 <u a3
      :                          @68
   576: c8 49 09                 a2 = a2 + t2
   579: 95 88 a0                 a1 = a1 + 0xffffffffffffffa0
   582: 95 99 60                 a2 = a2 + 0x60
   585: 51 08 65                 jump @81 if a1 == 0
      :                          @69
   588: 7d 9b                    a4 = i8 [a2]
   590: 84 bc ff 00              a5 = a4 & 0xff
   594: 33 04 01                 t2 = 0x1
   597: 59 0b 40                 jump @76 if a4 >=s 0
      :                          @70
   600: 33 0b c0 00              a4 = 0xc0
   604: 33 04 02                 t2 = 0x2
   607: ac bc 36                 jump @76 if a5 <u a4
      :                          @71
   610: 33 0b e0 00              a4 = 0xe0
   614: 33 04 03                 t2 = 0x3
   617: ac bc 2c                 jump @76 if a5 <u a4
      :                          @72
   620: 33 0b f0 00              a4 = 0xf0
   624: 33 04 04                 t2 = 0x4
   627: ac bc 22                 jump @76 if a5 <u a4
      :                          @73
   630: 33 0b f8 00              a4 = 0xf8
   634: 33 04 05                 t2 = 0x5
   637: ac bc 18                 jump @76 if a5 <u a4
      :                          @74
   640: 33 0b fc 00              a4 = 0xfc
   644: 33 04 06                 t2 = 0x6
   647: ac bc 0e                 jump @76 if a5 <u a4
      :                          @75
   650: 88 ca fe 00              a3 = a5 <u 0xfe
   654: 33 0b 08                 a4 = 0x8
   657: c9 ab 04                 t2 = a4 - a3
   660: 01                       fallthrough
      :                          @76
   661: ac 48 d4 01              jump @134 if a1 <u t2
      :                          @77
   665: 51 0c 97 00              jump @97 if a5 == 0
      :                          @78
   669: 51 2c ff 00 ca 01        jump @132 if a5 == 255
      :                          @79
   675: 6c cb                    a4 = sext.b a5
   677: 57 0b 0f                 jump @82 if a4 <s 0
      :                          @80
   680: 33 03                    t1 = 0
   682: 33 0b                    a4 = 0
   684: 28 7a                    jump @96
      :                          @81
   686: 33 04                    t2 = 0
   688: 33 0c                    a5 = 0
   690: 28 7e                    jump @97
      :                          @82
   692: 55 2c c0 00 0d           jump @84 if a5 >=u 192
      :                          @83
   697: 33 03 01                 t1 = 0x1
   700: 33 02 80                 t0 = 0xffffffffffffff80
   703: 28 4a                    jump @93
      :                          @84
   705: 55 2c e0 00 0e           jump @86 if a5 >=u 224
      :                          @85
   710: 33 03 02                 t1 = 0x2
   713: 33 02 40 ff              t0 = 0xffffffffffffff40
   717: 28 3c                    jump @93
      :                          @86
   719: 55 2c f0 00 0e           jump @88 if a5 >=u 240
      :                          @87
   724: 33 03 03                 t1 = 0x3
   727: 33 02 20 ff              t0 = 0xffffffffffffff20
   731: 28 2e                    jump @93
      :                          @88
   733: 55 2c f8 00 0e           jump @90 if a5 >=u 248
      :                          @89
   738: 33 03 04                 t1 = 0x4
   741: 33 02 10 ff              t0 = 0xffffffffffffff10
   745: 28 20                    jump @93
      :                          @90
   747: 55 2c fc 00 0e           jump @92 if a5 >=u 252
      :                          @91
   752: 33 03 05                 t1 = 0x5
   755: 33 02 08 ff              t0 = 0xffffffffffffff08
   759: 28 12                    jump @93
      :                          @92
   761: 88 cb fe 00              a4 = a5 <u 0xfe
   765: 33 02 04 ff              t0 = 0xffffffffffffff04
   769: 93 b2 02 ff              t0 = 0xffffffffffffff02 if a4 == 0
   773: 85 b3 07                 t1 = a4 ^ 0x7
   776: 01                       fallthrough
      :                          @93
   777: ae 43 5f 01              jump @133 if t1 >=u t2
      :                          @94
   781: 33 0b                    a4 = 0
   783: c8 2c 0c                 a5 = a5 + t0
   786: 64 35                    s0 = t1
   788: 01                       fallthrough
      :                          @95
   789: c8 59 0a                 a3 = a2 + s0
   792: 7c aa                    a3 = u8 [a3]
   794: 97 bb 08                 a4 = a4 << 0x8
   797: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
   800: d4 ab 0b                 a4 = a4 | a3
   803: 52 05 f2                 jump @95 if s0 != 0
      :                          @96
   806: 8a 3a 03                 i32 a3 = t1 << 0x3
   809: cf ac 0c                 a5 = a5 << a3
   812: c8 bc 0c                 a5 = a5 + a4
   815: 01                       fallthrough
      :                          @97
   816: e4 48 08                 a1 = maxu(a1, t2)
   819: c9 48 08                 a1 = a1 - t2
   822: e4 c8 08                 a1 = maxu(a1, a5)
   825: c9 c8 08                 a1 = a1 - a5
   828: 33 0a 21                 a3 = 0x21
   831: ac a8 4d fe              jump @46 if a1 <u a3
      :                          @98
   835: c8 49 09                 a2 = a2 + t2
   838: c8 9c 0c                 a5 = a5 + a2
   841: 7c c7 20                 a0 = u8 [a5 + 0x20]
   844: 51 07 0a                 jump @100 if a0 == 0
      :                          @99
   847: 33 07                    a0 = 0
   849: 33 05                    s0 = 0
   851: 28 ef 00                 jump @130
      :                          @100
   854: 95 88 df                 a1 = a1 + 0xffffffffffffffdf
   857: 95 c5 21                 s0 = a5 + 0x21
   860: 51 08 58                 jump @113 if a1 == 0
      :                          @101
   863: 7d 5a                    a3 = i8 [s0]
   865: 84 ac ff 00              a5 = a3 & 0xff
   869: 33 09 01                 a2 = 0x1
   872: 59 0a 33                 jump @108 if a3 >=s 0
      :                          @102
   875: 33 09 02                 a2 = 0x2
   878: 53 2c c0 00 2d           jump @108 if a5 <u 192
      :                          @103
   883: 33 09 03                 a2 = 0x3
   886: 53 2c e0 00 25           jump @108 if a5 <u 224
      :                          @104
   891: 33 09 04                 a2 = 0x4
   894: 53 2c f0 00 1d           jump @108 if a5 <u 240
      :                          @105
   899: 33 09 05                 a2 = 0x5
   902: 53 2c f8 00 15           jump @108 if a5 <u 248
      :                          @106
   907: 33 09 06                 a2 = 0x6
   910: 53 2c fc 00 0d           jump @108 if a5 <u 252
      :                          @107
   915: 88 c9 fe 00              a2 = a5 <u 0xfe
   919: 9a 99 08                 a2 = 0x8 - a2
   922: 01                       fallthrough
      :                          @108
   923: ac 98 cf 00              jump @135 if a1 <u a2
      :                          @109
   927: 51 0c 96 00              jump @129 if a5 == 0
      :                          @110
   931: 51 2c ff 00 c8 00        jump @136 if a5 == 255
      :                          @111
   937: 6c ca                    a3 = sext.b a5
   939: 57 0a 0f                 jump @114 if a3 <s 0
      :                          @112
   942: 33 03                    t1 = 0
   944: 33 0a                    a3 = 0
   946: 28 79                    jump @128
      :                          @113
   948: 33 09                    a2 = 0
   950: 33 0c                    a5 = 0
   952: 28 7d                    jump @129
      :                          @114
   954: 55 2c c0 00 0d           jump @116 if a5 >=u 192
      :                          @115
   959: 33 03 01                 t1 = 0x1
   962: 33 02 80                 t0 = 0xffffffffffffff80
   965: 28 4a                    jump @125
      :                          @116
   967: 55 2c e0 00 0e           jump @118 if a5 >=u 224
      :                          @117
   972: 33 03 02                 t1 = 0x2
   975: 33 02 40 ff              t0 = 0xffffffffffffff40
   979: 28 3c                    jump @125
      :                          @118
   981: 55 2c f0 00 0e           jump @120 if a5 >=u 240
      :                          @119
   986: 33 03 03                 t1 = 0x3
   989: 33 02 20 ff              t0 = 0xffffffffffffff20
   993: 28 2e                    jump @125
      :                          @120
   995: 55 2c f8 00 0e           jump @122 if a5 >=u 248
      :                          @121
  1000: 33 03 04                 t1 = 0x4
  1003: 33 02 10 ff              t0 = 0xffffffffffffff10
  1007: 28 20                    jump @125
      :                          @122
  1009: 55 2c fc 00 0e           jump @124 if a5 >=u 252
      :                          @123
  1014: 33 03 05                 t1 = 0x5
  1017: 33 02 08 ff              t0 = 0xffffffffffffff08
  1021: 28 12                    jump @125
      :                          @124
  1023: 88 ca fe 00              a3 = a5 <u 0xfe
  1027: 33 02 04 ff              t0 = 0xffffffffffffff04
  1031: 93 a2 02 ff              t0 = 0xffffffffffffff02 if a3 == 0
  1035: 85 a3 07                 t1 = a3 ^ 0x7
  1038: 01                       fallthrough
      :                          @125
  1039: ae 93 5d                 jump @137 if t1 >=u a2
      :                          @126
  1042: 33 0a                    a3 = 0
  1044: c8 2c 0c                 a5 = a5 + t0
  1047: 64 3b                    a4 = t1
  1049: 01                       fallthrough
      :                          @127
  1050: c8 b5 07                 a0 = s0 + a4
  1053: 7c 77                    a0 = u8 [a0]
  1055: 97 aa 08                 a3 = a3 << 0x8
  1058: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  1061: d4 7a 0a                 a3 = a3 | a0
  1064: 52 0b f2                 jump @127 if a4 != 0
      :                          @128
  1067: 8a 37 03                 i32 a0 = t1 << 0x3
  1070: cf 7c 0c                 a5 = a5 << a0
  1073: c8 ac 0c                 a5 = a5 + a3
  1076: 01                       fallthrough
      :                          @129
  1077: c8 95 05                 s0 = s0 + a2
  1080: e4 98 07                 a0 = maxu(a1, a2)
  1083: c9 97 07                 a0 = a0 - a2
  1086: e6 c7 07                 a0 = minu(a0, a5)
  1089: 01                       fallthrough
      :                          @130
  1090: c8 75 06                 s1 = s0 + a0
  1093: 64 17                    a0 = sp
  1095: 33 09 80 00              a2 = 0x80
  1099: 33 08                    a1 = 0
  1101: 50 10 02 29              ra = 2, jump @139
      :                          @131 [@dyn 1]
  1105: 80 57                    a0 = u32 [s0]
  1107: 80 68 fc                 a1 = u32 [s1 + 0xfffffffffffffffc]
  1110: 33 09 64                 a2 = 0x64
  1113: 64 1a                    a3 = sp
  1115: 0a 0b                    ecalli 11 // 'transfer'
  1117: 95 17 80 00              a0 = sp + 0x80
  1121: 33 08 08                 a1 = 0x8
  1124: 28 2b fd                 jump @47
      :                          @132
  1127: 00                       trap
      :                          @133
  1128: 00                       trap
      :                          @134
  1129: 00                       trap
      :                          @135
  1130: 00                       trap
      :                          @136
  1131: 00                       trap
      :                          @137
  1132: 00                       trap
      :                          @138 [export #2: 'on_transfer']
  1133: 33 07 00 00 01           a0 = 0x10000
  1138: 33 08                    a1 = 0
  1140: 32 00                    ret
      :                          @139
  1142: 8d 7a                    i32 a3 = -a0
  1144: 84 aa 07                 a3 = a3 & 0x7
  1147: c8 a7 0b                 a4 = a0 + a3
  1150: 51 0a 0e                 jump @142 if a3 == 0
      :                          @140
  1153: 64 7c                    a5 = a0
  1155: 01                       fallthrough
      :                          @141
  1156: 78 c8                    u8 [a5] = a1
  1158: 95 cc 01                 a5 = a5 + 0x1
  1161: ac bc fb                 jump @141 if a5 <u a4
      :                          @142
  1164: c9 a9 03                 t1 = a2 - a3
  1167: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  1170: c8 cb 0a                 a3 = a4 + a5
  1173: 58 0c 1d                 jump @145 if a5 <=s 0
      :                          @143
  1176: 84 82 ff 00              t0 = a1 & 0xff
  1180: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  1190: ca 92 0c                 a5 = t0 * a2
  1193: 01                       fallthrough
      :                          @144
  1194: 7b bc                    u64 [a4] = a5
  1196: 95 bb 08                 a4 = a4 + 0x8
  1199: ac ab fb                 jump @144 if a4 <u a3
      :                          @145
  1202: 84 39 07                 a2 = t1 & 0x7
  1205: 52 09 05                 jump @147 if a2 != 0
      :                          @146
  1208: 28 0e                    jump @149
      :                          @147
  1210: c8 a9 09                 a2 = a2 + a3
  1213: 01                       fallthrough
      :                          @148
  1214: 78 a8                    u8 [a3] = a1
  1216: 95 aa 01                 a3 = a3 + 0x1
  1219: ac 9a fb                 jump @148 if a3 <u a2
      :                          @149
  1222: 32 00                    ret
