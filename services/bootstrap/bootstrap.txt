// RO data = 468/468 bytes
// RW data = 16/69712 bytes
// Stack size = 65536 bytes
// RO data = [99, 114, 101, 97, 116, 101, 83, 101, 114, 118, 105, 99, 101, 32, 111, 117, 116, 112, 117, 116, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 32, 32, 32, 108, 101, 110, 61, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 35, 0, 0, 0, 0, 0, 0, 0, 35, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 36, 0, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 83, 69, 82, 86, 73, 67, 69, 73, 68, 61, 32, 115, 116, 111, 114, 97, 103, 101, 95, 107, 101, 121, 61, 0, 96, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 106, 0, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 130, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 132, 0, 0, 0, 0, 0, 0, 0, 138, 0, 0, 0, 0, 0, 0, 0, 146, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 182, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 184, 0, 0, 0, 0, 0, 0, 0, 190, 0, 0, 0, 0, 0, 0, 0, 194, 0, 0, 0, 0, 0, 0, 0, 32, 32, 32, 32, 44, 32, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57]
// RW data = [75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 2252
// Code size = 6757 bytes

      :                          @0
     0: 28 4a 04 00 00           jump @63
      :                          @1
     5: 28 98 05 00 00           jump @101
      :                          @2
    10: 28 a3 0a                 jump @159
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 80 89 34                 a2 = u32 [a1 + 0x34]
    24: 82 77                    a0 = u64 [a0]
    26: 84 9a 10                 a3 = a2 & 0x10
    29: 52 0a 16                 jump @6 if a3 != 0
      :                          @4
    32: 84 99 20                 a2 = a2 & 0x20
    35: 52 09 41                 jump @9 if a2 != 0
      :                          @5
    38: 7c 77                    a0 = u8 [a0]
    40: 82 10 80 00              ra = u64 [sp + 0x80]
    44: 95 11 88 00              sp = sp + 0x88
    48: 28 48 10                 jump @298
      :                          @6
    51: 7c 77                    a0 = u8 [a0]
    53: 33 0b 81 00              a4 = 0x81
    57: 95 19 7f                 a2 = sp + 0x7f
    60: 33 02 57                 t0 = 0x57
    63: 01                       fallthrough
      :                          @7
    64: 64 bc                    a5 = a4
    66: 84 7b 0f                 a4 = a0 & 0xf
    69: 97 77 38                 a0 = a0 << 0x38
    72: 98 77 3c                 a0 = a0 >> 0x3c
    75: 88 b3 0a                 t1 = a4 <u 0xa
    78: 33 0a 30                 a3 = 0x30
    81: da 32 0a                 a3 = t0 if t1 == 0
    84: be ba 0a                 i32 a3 = a3 + a4
    87: 78 9a                    u8 [a2] = a3
    89: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
    92: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
    95: 52 07 e1                 jump @7 if a0 != 0
      :                          @8
    98: 28 31                    jump @11
      :                          @9
   100: 7c 77                    a0 = u8 [a0]
   102: 33 0b 81 00              a4 = 0x81
   106: 95 19 7f                 a2 = sp + 0x7f
   109: 33 02 37                 t0 = 0x37
   112: 01                       fallthrough
      :                          @10
   113: 64 bc                    a5 = a4
   115: 84 7b 0f                 a4 = a0 & 0xf
   118: 97 77 38                 a0 = a0 << 0x38
   121: 98 77 3c                 a0 = a0 >> 0x3c
   124: 88 b3 0a                 t1 = a4 <u 0xa
   127: 33 0a 30                 a3 = 0x30
   130: da 32 0a                 a3 = t0 if t1 == 0
   133: be ba 0a                 i32 a3 = a3 + a4
   136: 78 9a                    u8 [a2] = a3
   138: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
   141: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
   144: 52 07 e1                 jump @10 if a0 != 0
      :                          @11
   147: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   150: 56 27 80 00 27           jump @14 if a0 >u 128
      :                          @12
   155: 9a bb 81 00              a4 = 0x81 - a4
   159: 64 1a                    a3 = sp
   161: c8 7a 0a                 a3 = a3 + a0
   164: 33 09 02                 a2 = 0x2
   167: 64 87                    a0 = a1
   169: 33 08 0a 01 01           a1 = 0x1010a
   174: 50 10 04 f2 10           ra = 4, jump @308
      :                          @13 [@dyn 2]
   179: 82 10 80 00              ra = u64 [sp + 0x80]
   183: 95 11 88 00              sp = sp + 0x88
   187: 32 00                    ret
      :                          @14
   189: 00                       trap
      :                          @15 [@dyn 3]
   190: 95 11 d0                 sp = sp + 0xffffffffffffffd0
   193: 7b 10 28                 u64 [sp + 0x28] = ra
   196: 7b 15 20                 u64 [sp + 0x20] = s0
   199: 7b 16 18                 u64 [sp + 0x18] = s1
   202: 64 85                    s0 = a1
   204: 82 88 28                 a1 = u64 [a1 + 0x28]
   207: 82 5a 20                 a3 = u64 [s0 + 0x20]
   210: 82 8b 18                 a4 = u64 [a1 + 0x18]
   213: 64 76                    s1 = a0
   215: 33 08 c8 00 01           a1 = 0x100c8
   220: 33 09 01                 a2 = 0x1
   223: 64 a7                    a0 = a3
   225: b4 b0 01 08              ra = 8, jump [a4]
      :                          @16 [@dyn 4]
   229: 7b 15                    u64 [sp] = s0
   231: 78 17 08                 u8 [sp + 0x8] = a0
   234: 46 11 09                 u8 [sp + 9] = 0
   237: 7b 16 10                 u64 [sp + 0x10] = s1
   240: 33 05 02                 s0 = 0x2
   243: 64 17                    a0 = sp
   245: 95 18 10                 a1 = sp + 0x10
   248: 33 09 02                 a2 = 0x2
   251: 50 10 0a 8d 17           ra = 10, jump @453
      :                          @17 [@dyn 5]
   256: 95 67 01                 a0 = s1 + 0x1
   259: 7b 17 10                 u64 [sp + 0x10] = a0
   262: 64 17                    a0 = sp
   264: 95 18 10                 a1 = sp + 0x10
   267: 64 59                    a2 = s0
   269: 50 10 0c 7b 17           ra = 12, jump @453
      :                          @18 [@dyn 6]
   274: 95 67 02                 a0 = s1 + 0x2
   277: 7b 17 10                 u64 [sp + 0x10] = a0
   280: 64 17                    a0 = sp
   282: 95 18 10                 a1 = sp + 0x10
   285: 64 59                    a2 = s0
   287: 50 10 0e 69 17           ra = 14, jump @453
      :                          @19 [@dyn 7]
   292: 95 66 03                 s1 = s1 + 0x3
   295: 7b 16 10                 u64 [sp + 0x10] = s1
   298: 64 17                    a0 = sp
   300: 95 18 10                 a1 = sp + 0x10
   303: 64 59                    a2 = s0
   305: 50 10 10 57 17           ra = 16, jump @453
      :                          @20 [@dyn 8]
   310: 33 07 01                 a0 = 0x1
   313: 7c 18 08                 a1 = u8 [sp + 0x8]
   316: 52 08 1a                 jump @22 if a1 != 0
      :                          @21
   319: 82 17                    a0 = u64 [sp]
   321: 82 78 28                 a1 = u64 [a0 + 0x28]
   324: 82 77 20                 a0 = u64 [a0 + 0x20]
   327: 82 8a 18                 a3 = u64 [a1 + 0x18]
   330: 33 08 09 01 01           a1 = 0x10109
   335: 33 09 01                 a2 = 0x1
   338: b4 a0 01 12              ra = 18, jump [a3]
      :                          @22 [@dyn 9]
   342: 82 10 28                 ra = u64 [sp + 0x28]
   345: 82 15 20                 s0 = u64 [sp + 0x20]
   348: 82 16 18                 s1 = u64 [sp + 0x18]
   351: 95 11 30                 sp = sp + 0x30
   354: 32 00                    ret
      :                          @23 [@dyn 10]
   356: 95 11 d0                 sp = sp + 0xffffffffffffffd0
   359: 7b 10 28                 u64 [sp + 0x28] = ra
   362: 7b 15 20                 u64 [sp + 0x20] = s0
   365: 7b 16 18                 u64 [sp + 0x18] = s1
   368: 64 85                    s0 = a1
   370: 82 88 28                 a1 = u64 [a1 + 0x28]
   373: 82 5a 20                 a3 = u64 [s0 + 0x20]
   376: 82 8b 18                 a4 = u64 [a1 + 0x18]
   379: 64 76                    s1 = a0
   381: 33 08 c8 00 01           a1 = 0x100c8
   386: 33 09 01                 a2 = 0x1
   389: 64 a7                    a0 = a3
   391: b4 b0 01 16              ra = 22, jump [a4]
      :                          @24 [@dyn 11]
   395: 7b 15                    u64 [sp] = s0
   397: 78 17 08                 u8 [sp + 0x8] = a0
   400: 46 11 09                 u8 [sp + 9] = 0
   403: 7b 16 10                 u64 [sp + 0x10] = s1
   406: 33 05 02                 s0 = 0x2
   409: 64 17                    a0 = sp
   411: 95 18 10                 a1 = sp + 0x10
   414: 33 09 02                 a2 = 0x2
   417: 50 10 18 e7 16           ra = 24, jump @453
      :                          @25 [@dyn 12]
   422: 95 67 01                 a0 = s1 + 0x1
   425: 7b 17 10                 u64 [sp + 0x10] = a0
   428: 64 17                    a0 = sp
   430: 95 18 10                 a1 = sp + 0x10
   433: 64 59                    a2 = s0
   435: 50 10 1a d5 16           ra = 26, jump @453
      :                          @26 [@dyn 13]
   440: 95 67 02                 a0 = s1 + 0x2
   443: 7b 17 10                 u64 [sp + 0x10] = a0
   446: 64 17                    a0 = sp
   448: 95 18 10                 a1 = sp + 0x10
   451: 64 59                    a2 = s0
   453: 50 10 1c c3 16           ra = 28, jump @453
      :                          @27 [@dyn 14]
   458: 95 67 03                 a0 = s1 + 0x3
   461: 7b 17 10                 u64 [sp + 0x10] = a0
   464: 64 17                    a0 = sp
   466: 95 18 10                 a1 = sp + 0x10
   469: 64 59                    a2 = s0
   471: 50 10 1e b1 16           ra = 30, jump @453
      :                          @28 [@dyn 15]
   476: 95 67 04                 a0 = s1 + 0x4
   479: 7b 17 10                 u64 [sp + 0x10] = a0
   482: 64 17                    a0 = sp
   484: 95 18 10                 a1 = sp + 0x10
   487: 64 59                    a2 = s0
   489: 50 10 20 9f 16           ra = 32, jump @453
      :                          @29 [@dyn 16]
   494: 95 67 05                 a0 = s1 + 0x5
   497: 7b 17 10                 u64 [sp + 0x10] = a0
   500: 64 17                    a0 = sp
   502: 95 18 10                 a1 = sp + 0x10
   505: 64 59                    a2 = s0
   507: 50 10 22 8d 16           ra = 34, jump @453
      :                          @30 [@dyn 17]
   512: 95 67 06                 a0 = s1 + 0x6
   515: 7b 17 10                 u64 [sp + 0x10] = a0
   518: 64 17                    a0 = sp
   520: 95 18 10                 a1 = sp + 0x10
   523: 64 59                    a2 = s0
   525: 50 10 24 7b 16           ra = 36, jump @453
      :                          @31 [@dyn 18]
   530: 95 67 07                 a0 = s1 + 0x7
   533: 7b 17 10                 u64 [sp + 0x10] = a0
   536: 64 17                    a0 = sp
   538: 95 18 10                 a1 = sp + 0x10
   541: 64 59                    a2 = s0
   543: 50 10 26 69 16           ra = 38, jump @453
      :                          @32 [@dyn 19]
   548: 95 67 08                 a0 = s1 + 0x8
   551: 7b 17 10                 u64 [sp + 0x10] = a0
   554: 64 17                    a0 = sp
   556: 95 18 10                 a1 = sp + 0x10
   559: 64 59                    a2 = s0
   561: 50 10 28 57 16           ra = 40, jump @453
      :                          @33 [@dyn 20]
   566: 95 67 09                 a0 = s1 + 0x9
   569: 7b 17 10                 u64 [sp + 0x10] = a0
   572: 64 17                    a0 = sp
   574: 95 18 10                 a1 = sp + 0x10
   577: 64 59                    a2 = s0
   579: 50 10 2a 45 16           ra = 42, jump @453
      :                          @34 [@dyn 21]
   584: 95 67 0a                 a0 = s1 + 0xa
   587: 7b 17 10                 u64 [sp + 0x10] = a0
   590: 64 17                    a0 = sp
   592: 95 18 10                 a1 = sp + 0x10
   595: 64 59                    a2 = s0
   597: 50 10 2c 33 16           ra = 44, jump @453
      :                          @35 [@dyn 22]
   602: 95 67 0b                 a0 = s1 + 0xb
   605: 7b 17 10                 u64 [sp + 0x10] = a0
   608: 64 17                    a0 = sp
   610: 95 18 10                 a1 = sp + 0x10
   613: 64 59                    a2 = s0
   615: 50 10 2e 21 16           ra = 46, jump @453
      :                          @36 [@dyn 23]
   620: 95 67 0c                 a0 = s1 + 0xc
   623: 7b 17 10                 u64 [sp + 0x10] = a0
   626: 64 17                    a0 = sp
   628: 95 18 10                 a1 = sp + 0x10
   631: 64 59                    a2 = s0
   633: 50 10 30 0f 16           ra = 48, jump @453
      :                          @37 [@dyn 24]
   638: 95 67 0d                 a0 = s1 + 0xd
   641: 7b 17 10                 u64 [sp + 0x10] = a0
   644: 64 17                    a0 = sp
   646: 95 18 10                 a1 = sp + 0x10
   649: 64 59                    a2 = s0
   651: 50 10 32 fd 15           ra = 50, jump @453
      :                          @38 [@dyn 25]
   656: 95 67 0e                 a0 = s1 + 0xe
   659: 7b 17 10                 u64 [sp + 0x10] = a0
   662: 64 17                    a0 = sp
   664: 95 18 10                 a1 = sp + 0x10
   667: 64 59                    a2 = s0
   669: 50 10 34 eb 15           ra = 52, jump @453
      :                          @39 [@dyn 26]
   674: 95 67 0f                 a0 = s1 + 0xf
   677: 7b 17 10                 u64 [sp + 0x10] = a0
   680: 64 17                    a0 = sp
   682: 95 18 10                 a1 = sp + 0x10
   685: 64 59                    a2 = s0
   687: 50 10 36 d9 15           ra = 54, jump @453
      :                          @40 [@dyn 27]
   692: 95 67 10                 a0 = s1 + 0x10
   695: 7b 17 10                 u64 [sp + 0x10] = a0
   698: 64 17                    a0 = sp
   700: 95 18 10                 a1 = sp + 0x10
   703: 64 59                    a2 = s0
   705: 50 10 38 c7 15           ra = 56, jump @453
      :                          @41 [@dyn 28]
   710: 95 67 11                 a0 = s1 + 0x11
   713: 7b 17 10                 u64 [sp + 0x10] = a0
   716: 64 17                    a0 = sp
   718: 95 18 10                 a1 = sp + 0x10
   721: 64 59                    a2 = s0
   723: 50 10 3a b5 15           ra = 58, jump @453
      :                          @42 [@dyn 29]
   728: 95 67 12                 a0 = s1 + 0x12
   731: 7b 17 10                 u64 [sp + 0x10] = a0
   734: 64 17                    a0 = sp
   736: 95 18 10                 a1 = sp + 0x10
   739: 64 59                    a2 = s0
   741: 50 10 3c a3 15           ra = 60, jump @453
      :                          @43 [@dyn 30]
   746: 95 67 13                 a0 = s1 + 0x13
   749: 7b 17 10                 u64 [sp + 0x10] = a0
   752: 64 17                    a0 = sp
   754: 95 18 10                 a1 = sp + 0x10
   757: 64 59                    a2 = s0
   759: 50 10 3e 91 15           ra = 62, jump @453
      :                          @44 [@dyn 31]
   764: 95 67 14                 a0 = s1 + 0x14
   767: 7b 17 10                 u64 [sp + 0x10] = a0
   770: 64 17                    a0 = sp
   772: 95 18 10                 a1 = sp + 0x10
   775: 64 59                    a2 = s0
   777: 50 10 40 7f 15           ra = 64, jump @453
      :                          @45 [@dyn 32]
   782: 95 67 15                 a0 = s1 + 0x15
   785: 7b 17 10                 u64 [sp + 0x10] = a0
   788: 64 17                    a0 = sp
   790: 95 18 10                 a1 = sp + 0x10
   793: 64 59                    a2 = s0
   795: 50 10 42 6d 15           ra = 66, jump @453
      :                          @46 [@dyn 33]
   800: 95 67 16                 a0 = s1 + 0x16
   803: 7b 17 10                 u64 [sp + 0x10] = a0
   806: 64 17                    a0 = sp
   808: 95 18 10                 a1 = sp + 0x10
   811: 64 59                    a2 = s0
   813: 50 10 44 5b 15           ra = 68, jump @453
      :                          @47 [@dyn 34]
   818: 95 67 17                 a0 = s1 + 0x17
   821: 7b 17 10                 u64 [sp + 0x10] = a0
   824: 64 17                    a0 = sp
   826: 95 18 10                 a1 = sp + 0x10
   829: 64 59                    a2 = s0
   831: 50 10 46 49 15           ra = 70, jump @453
      :                          @48 [@dyn 35]
   836: 95 67 18                 a0 = s1 + 0x18
   839: 7b 17 10                 u64 [sp + 0x10] = a0
   842: 64 17                    a0 = sp
   844: 95 18 10                 a1 = sp + 0x10
   847: 64 59                    a2 = s0
   849: 50 10 48 37 15           ra = 72, jump @453
      :                          @49 [@dyn 36]
   854: 95 67 19                 a0 = s1 + 0x19
   857: 7b 17 10                 u64 [sp + 0x10] = a0
   860: 64 17                    a0 = sp
   862: 95 18 10                 a1 = sp + 0x10
   865: 64 59                    a2 = s0
   867: 50 10 4a 25 15           ra = 74, jump @453
      :                          @50 [@dyn 37]
   872: 95 67 1a                 a0 = s1 + 0x1a
   875: 7b 17 10                 u64 [sp + 0x10] = a0
   878: 64 17                    a0 = sp
   880: 95 18 10                 a1 = sp + 0x10
   883: 64 59                    a2 = s0
   885: 50 10 4c 13 15           ra = 76, jump @453
      :                          @51 [@dyn 38]
   890: 95 67 1b                 a0 = s1 + 0x1b
   893: 7b 17 10                 u64 [sp + 0x10] = a0
   896: 64 17                    a0 = sp
   898: 95 18 10                 a1 = sp + 0x10
   901: 64 59                    a2 = s0
   903: 50 10 4e 01 15           ra = 78, jump @453
      :                          @52 [@dyn 39]
   908: 95 67 1c                 a0 = s1 + 0x1c
   911: 7b 17 10                 u64 [sp + 0x10] = a0
   914: 64 17                    a0 = sp
   916: 95 18 10                 a1 = sp + 0x10
   919: 64 59                    a2 = s0
   921: 50 10 50 ef 14           ra = 80, jump @453
      :                          @53 [@dyn 40]
   926: 95 67 1d                 a0 = s1 + 0x1d
   929: 7b 17 10                 u64 [sp + 0x10] = a0
   932: 64 17                    a0 = sp
   934: 95 18 10                 a1 = sp + 0x10
   937: 64 59                    a2 = s0
   939: 50 10 52 dd 14           ra = 82, jump @453
      :                          @54 [@dyn 41]
   944: 95 67 1e                 a0 = s1 + 0x1e
   947: 7b 17 10                 u64 [sp + 0x10] = a0
   950: 64 17                    a0 = sp
   952: 95 18 10                 a1 = sp + 0x10
   955: 64 59                    a2 = s0
   957: 50 10 54 cb 14           ra = 84, jump @453
      :                          @55 [@dyn 42]
   962: 95 67 1f                 a0 = s1 + 0x1f
   965: 7b 17 10                 u64 [sp + 0x10] = a0
   968: 64 17                    a0 = sp
   970: 95 18 10                 a1 = sp + 0x10
   973: 64 59                    a2 = s0
   975: 50 10 56 b9 14           ra = 86, jump @453
      :                          @56 [@dyn 43]
   980: 95 67 20                 a0 = s1 + 0x20
   983: 7b 17 10                 u64 [sp + 0x10] = a0
   986: 64 17                    a0 = sp
   988: 95 18 10                 a1 = sp + 0x10
   991: 64 59                    a2 = s0
   993: 50 10 58 a7 14           ra = 88, jump @453
      :                          @57 [@dyn 44]
   998: 95 67 21                 a0 = s1 + 0x21
  1001: 7b 17 10                 u64 [sp + 0x10] = a0
  1004: 64 17                    a0 = sp
  1006: 95 18 10                 a1 = sp + 0x10
  1009: 64 59                    a2 = s0
  1011: 50 10 5a 95 14           ra = 90, jump @453
      :                          @58 [@dyn 45]
  1016: 95 67 22                 a0 = s1 + 0x22
  1019: 7b 17 10                 u64 [sp + 0x10] = a0
  1022: 64 17                    a0 = sp
  1024: 95 18 10                 a1 = sp + 0x10
  1027: 64 59                    a2 = s0
  1029: 50 10 5c 83 14           ra = 92, jump @453
      :                          @59 [@dyn 46]
  1034: 95 67 23                 a0 = s1 + 0x23
  1037: 7b 17 10                 u64 [sp + 0x10] = a0
  1040: 64 17                    a0 = sp
  1042: 95 18 10                 a1 = sp + 0x10
  1045: 64 59                    a2 = s0
  1047: 50 10 5e 71 14           ra = 94, jump @453
      :                          @60 [@dyn 47]
  1052: 33 07 01                 a0 = 0x1
  1055: 7c 18 08                 a1 = u8 [sp + 0x8]
  1058: 52 08 1a                 jump @62 if a1 != 0
      :                          @61
  1061: 82 17                    a0 = u64 [sp]
  1063: 82 78 28                 a1 = u64 [a0 + 0x28]
  1066: 82 77 20                 a0 = u64 [a0 + 0x20]
  1069: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1072: 33 08 09 01 01           a1 = 0x10109
  1077: 33 09 01                 a2 = 0x1
  1080: b4 a0 01 60              ra = 96, jump [a3]
      :                          @62 [@dyn 48]
  1084: 82 10 28                 ra = u64 [sp + 0x28]
  1087: 82 15 20                 s0 = u64 [sp + 0x20]
  1090: 82 16 18                 s1 = u64 [sp + 0x18]
  1093: 95 11 30                 sp = sp + 0x30
  1096: 32 00                    ret
      :                          @63 [export #0: 'refine']
  1098: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  1101: 7b 10 20                 u64 [sp + 0x20] = ra
  1104: 7b 15 18                 u64 [sp + 0x18] = s0
  1107: 7b 16 10                 u64 [sp + 0x10] = s1
  1110: 64 86                    s1 = a1
  1112: 64 7a                    a3 = a0
  1114: 33 07 00 00 01           a0 = 0x10000
  1119: 53 16 04 43              jump @72 if s1 <u 4
      :                          @64
  1123: 7d a8                    a1 = i8 [a3]
  1125: 33 05 01                 s0 = 0x1
  1128: 59 08 37                 jump @71 if a1 >=s 0
      :                          @65
  1131: 84 89 ff 00              a2 = a1 & 0xff
  1135: 33 05 02                 s0 = 0x2
  1138: 53 29 c0 00 2d           jump @71 if a2 <u 192
      :                          @66
  1143: 33 05 03                 s0 = 0x3
  1146: 53 29 e0 00 25           jump @71 if a2 <u 224
      :                          @67
  1151: 33 05 04                 s0 = 0x4
  1154: 53 29 f0 00 1d           jump @71 if a2 <u 240
      :                          @68
  1159: 33 05 05                 s0 = 0x5
  1162: 53 29 f8 00 15           jump @71 if a2 <u 248
      :                          @69
  1167: 33 05 06                 s0 = 0x6
  1170: 53 29 fc 00 0d           jump @71 if a2 <u 252
      :                          @70
  1175: 88 98 fe 00              a1 = a2 <u 0xfe
  1179: 9a 85 08                 s0 = 0x8 - a1
  1182: 01                       fallthrough
      :                          @71
  1183: ae 56 08                 jump @73 if s1 >=u s0
      :                          @72
  1186: 33 08                    a1 = 0
  1188: 28 e3 00                 jump @98
      :                          @73
  1191: 64 a7                    a0 = a3
  1193: 64 58                    a1 = s0
  1195: 7b 1a 08                 u64 [sp + 0x8] = a3
  1198: 50 10 62 19 15           ra = 98, jump @470
      :                          @74 [@dyn 49]
  1203: aa 56 cc 00              jump @97 if s1 == s0
      :                          @75
  1207: 82 17 08                 a0 = u64 [sp + 0x8]
  1210: c8 57 07                 a0 = a0 + s0
  1213: 7d 78                    a1 = i8 [a0]
  1215: c9 56 06                 s1 = s1 - s0
  1218: 33 05 01                 s0 = 0x1
  1221: 59 08 37                 jump @82 if a1 >=s 0
      :                          @76
  1224: 84 89 ff 00              a2 = a1 & 0xff
  1228: 33 05 02                 s0 = 0x2
  1231: 53 29 c0 00 2d           jump @82 if a2 <u 192
      :                          @77
  1236: 33 05 03                 s0 = 0x3
  1239: 53 29 e0 00 25           jump @82 if a2 <u 224
      :                          @78
  1244: 33 05 04                 s0 = 0x4
  1247: 53 29 f0 00 1d           jump @82 if a2 <u 240
      :                          @79
  1252: 33 05 05                 s0 = 0x5
  1255: 53 29 f8 00 15           jump @82 if a2 <u 248
      :                          @80
  1260: 33 05 06                 s0 = 0x6
  1263: 53 29 fc 00 0d           jump @82 if a2 <u 252
      :                          @81
  1268: 88 98 fe 00              a1 = a2 <u 0xfe
  1272: 9a 85 08                 s0 = 0x8 - a1
  1275: 01                       fallthrough
      :                          @82
  1276: ac 56 83 00              jump @97 if s1 <u s0
      :                          @83
  1280: 64 58                    a1 = s0
  1282: 7b 16 08                 u64 [sp + 0x8] = s1
  1285: 64 76                    s1 = a0
  1287: 50 10 64 c0 14           ra = 100, jump @470
      :                          @84 [@dyn 50]
  1292: c8 65 07                 a0 = s0 + s1
  1295: 82 16 08                 s1 = u64 [sp + 0x8]
  1298: 7b 17                    u64 [sp] = a0
  1300: ab 56 0b                 jump @86 if s1 != s0
      :                          @85
  1303: 33 09                    a2 = 0
  1305: 33 05                    s0 = 0
  1307: 33 08                    a1 = 0
  1309: 28 56                    jump @96
      :                          @86
  1311: 7d 78                    a1 = i8 [a0]
  1313: c9 56 06                 s1 = s1 - s0
  1316: 33 05 01                 s0 = 0x1
  1319: 59 08 37                 jump @93 if a1 >=s 0
      :                          @87
  1322: 84 89 ff 00              a2 = a1 & 0xff
  1326: 33 05 02                 s0 = 0x2
  1329: 53 29 c0 00 2d           jump @93 if a2 <u 192
      :                          @88
  1334: 33 05 03                 s0 = 0x3
  1337: 53 29 e0 00 25           jump @93 if a2 <u 224
      :                          @89
  1342: 33 05 04                 s0 = 0x4
  1345: 53 29 f0 00 1d           jump @93 if a2 <u 240
      :                          @90
  1350: 33 05 05                 s0 = 0x5
  1353: 53 29 f8 00 15           jump @93 if a2 <u 248
      :                          @91
  1358: 33 05 06                 s0 = 0x6
  1361: 53 29 fc 00 0d           jump @93 if a2 <u 252
      :                          @92
  1366: 88 98 fe 00              a1 = a2 <u 0xfe
  1370: 9a 85 08                 s0 = 0x8 - a1
  1373: 01                       fallthrough
      :                          @93
  1374: ac 56 3e                 jump @100 if s1 <u s0
      :                          @94
  1377: 64 58                    a1 = s0
  1379: 50 10 66 64 14           ra = 102, jump @470
      :                          @95 [@dyn 51]
  1384: e4 56 09                 a2 = maxu(s1, s0)
  1387: c9 59 09                 a2 = a2 - s0
  1390: 64 78                    a1 = a0
  1392: ac 79 0f                 jump @97 if a2 <u a0
      :                          @96
  1395: e4 89 07                 a0 = maxu(a2, a1)
  1398: c9 87 07                 a0 = a0 - a1
  1401: 33 09 20                 a2 = 0x20
  1404: ae 97 19                 jump @99 if a0 >=u a2
      :                          @97
  1407: 33 08                    a1 = 0
  1409: 33 07 00 00 01           a0 = 0x10000
  1414: 01                       fallthrough
      :                          @98
  1415: 82 10 20                 ra = u64 [sp + 0x20]
  1418: 82 15 18                 s0 = u64 [sp + 0x18]
  1421: 82 16 10                 s1 = u64 [sp + 0x10]
  1424: 95 11 28                 sp = sp + 0x28
  1427: 32 00                    ret
      :                          @99
  1429: 82 17                    a0 = u64 [sp]
  1431: c8 57 07                 a0 = a0 + s0
  1434: 28 ed                    jump @98
      :                          @100
  1436: 00                       trap
      :                          @101 [export #1: 'accumulate']
  1437: 95 11 18 fe              sp = sp + 0xfffffffffffffe18
  1441: 7b 10 e0 01              u64 [sp + 0x1e0] = ra
  1445: 7b 15 d8 01              u64 [sp + 0x1d8] = s0
  1449: 7b 16 d0 01              u64 [sp + 0x1d0] = s1
  1453: 33 0a 00 00 01           a3 = 0x10000
  1458: 51 08 14 01              jump @133 if a1 == 0
      :                          @102
  1462: 64 86                    s1 = a1
  1464: 7d 78                    a1 = i8 [a0]
  1466: 33 05 01                 s0 = 0x1
  1469: 59 08 37                 jump @109 if a1 >=s 0
      :                          @103
  1472: 84 89 ff 00              a2 = a1 & 0xff
  1476: 33 05 02                 s0 = 0x2
  1479: 53 29 c0 00 2d           jump @109 if a2 <u 192
      :                          @104
  1484: 33 05 03                 s0 = 0x3
  1487: 53 29 e0 00 25           jump @109 if a2 <u 224
      :                          @105
  1492: 33 05 04                 s0 = 0x4
  1495: 53 29 f0 00 1d           jump @109 if a2 <u 240
      :                          @106
  1500: 33 05 05                 s0 = 0x5
  1503: 53 29 f8 00 15           jump @109 if a2 <u 248
      :                          @107
  1508: 33 05 06                 s0 = 0x6
  1511: 53 29 fc 00 0d           jump @109 if a2 <u 252
      :                          @108
  1516: 88 98 fe 00              a1 = a2 <u 0xfe
  1520: 9a 85 08                 s0 = 0x8 - a1
  1523: 01                       fallthrough
      :                          @109
  1524: ae 56 08                 jump @111 if s1 >=u s0
      :                          @110
  1527: 33 08                    a1 = 0
  1529: 28 cd 00                 jump @133
      :                          @111
  1532: 64 58                    a1 = s0
  1534: 7b 17 70                 u64 [sp + 0x70] = a0
  1537: 50 10 68 c6 13           ra = 104, jump @470
      :                          @112 [@dyn 52]
  1542: aa 56 b8 00              jump @132 if s1 == s0
      :                          @113
  1546: 82 17 70                 a0 = u64 [sp + 0x70]
  1549: c8 57 07                 a0 = a0 + s0
  1552: 7d 78                    a1 = i8 [a0]
  1554: c9 56 06                 s1 = s1 - s0
  1557: 33 05 01                 s0 = 0x1
  1560: 59 08 37                 jump @120 if a1 >=s 0
      :                          @114
  1563: 84 89 ff 00              a2 = a1 & 0xff
  1567: 33 05 02                 s0 = 0x2
  1570: 53 29 c0 00 2d           jump @120 if a2 <u 192
      :                          @115
  1575: 33 05 03                 s0 = 0x3
  1578: 53 29 e0 00 25           jump @120 if a2 <u 224
      :                          @116
  1583: 33 05 04                 s0 = 0x4
  1586: 53 29 f0 00 1d           jump @120 if a2 <u 240
      :                          @117
  1591: 33 05 05                 s0 = 0x5
  1594: 53 29 f8 00 15           jump @120 if a2 <u 248
      :                          @118
  1599: 33 05 06                 s0 = 0x6
  1602: 53 29 fc 00 0d           jump @120 if a2 <u 252
      :                          @119
  1607: 88 98 fe 00              a1 = a2 <u 0xfe
  1611: 9a 85 08                 s0 = 0x8 - a1
  1614: 01                       fallthrough
      :                          @120
  1615: ac 56 6f                 jump @132 if s1 <u s0
      :                          @121
  1618: 64 58                    a1 = s0
  1620: 7b 16 70                 u64 [sp + 0x70] = s1
  1623: 64 76                    s1 = a0
  1625: 50 10 6a 6e 13           ra = 106, jump @470
      :                          @122 [@dyn 53]
  1630: c8 65 07                 a0 = s0 + s1
  1633: 82 16 70                 s1 = u64 [sp + 0x70]
  1636: ab 56 0b                 jump @124 if s1 != s0
      :                          @123
  1639: 33 08                    a1 = 0
  1641: 33 00 6c                 ra = 0x6c
  1644: 28 5b 13                 jump @470
      :                          @124
  1647: 7d 79                    a2 = i8 [a0]
  1649: c9 56 06                 s1 = s1 - s0
  1652: 33 08 01                 a1 = 0x1
  1655: 59 09 44                 jump @131 if a2 >=s 0
      :                          @125
  1658: 84 99 ff 00              a2 = a2 & 0xff
  1662: 33 0a c0 00              a3 = 0xc0
  1666: 33 08 02                 a1 = 0x2
  1669: ac a9 36                 jump @131 if a2 <u a3
      :                          @126
  1672: 33 0a e0 00              a3 = 0xe0
  1676: 33 08 03                 a1 = 0x3
  1679: ac a9 2c                 jump @131 if a2 <u a3
      :                          @127
  1682: 33 0a f0 00              a3 = 0xf0
  1686: 33 08 04                 a1 = 0x4
  1689: ac a9 22                 jump @131 if a2 <u a3
      :                          @128
  1692: 33 0a f8 00              a3 = 0xf8
  1696: 33 08 05                 a1 = 0x5
  1699: ac a9 18                 jump @131 if a2 <u a3
      :                          @129
  1702: 33 0a fc 00              a3 = 0xfc
  1706: 33 08 06                 a1 = 0x6
  1709: ac a9 0e                 jump @131 if a2 <u a3
      :                          @130
  1712: 88 98 fe 00              a1 = a2 <u 0xfe
  1716: 33 09 08                 a2 = 0x8
  1719: c9 89 08                 a1 = a2 - a1
  1722: 01                       fallthrough
      :                          @131
  1723: ae 86 1f                 jump @134 if s1 >=u a1
      :                          @132
  1726: 33 08                    a1 = 0
  1728: 33 0a 00 00 01           a3 = 0x10000
  1733: 01                       fallthrough
      :                          @133
  1734: 64 a7                    a0 = a3
  1736: 82 10 e0 01              ra = u64 [sp + 0x1e0]
  1740: 82 15 d8 01              s0 = u64 [sp + 0x1d8]
  1744: 82 16 d0 01              s1 = u64 [sp + 0x1d0]
  1748: 95 11 e8 01              sp = sp + 0x1e8
  1752: 32 00                    ret
      :                          @134
  1754: 50 10 6c ed 12           ra = 108, jump @470
      :                          @135 [@dyn 54]
  1759: 33 0a 11 00 03           a3 = 0x30011
  1764: 83 79                    i32 a2 = a0 + 0
  1766: 7b 1a 78                 u64 [sp + 0x78] = a3
  1769: 51 09 bd 03              jump @157 if a2 == 0
      :                          @136
  1773: 33 0b                    a4 = 0
  1775: 14 09 ff ff ff ff 00 00 00 00 a2 = 0xffffffff
  1785: d2 97 07                 a0 = a0 & a2
  1788: 7b 17 08                 u64 [sp + 0x8] = a0
  1791: 33 07 35 00 03           a0 = 0x30035
  1796: 7b 17 48                 u64 [sp + 0x48] = a0
  1799: 49 11 40 08 10           u64 [sp + 64] = 0x1008
  1804: 33 06 11 00 03           s1 = 0x30011
  1809: 33 07 96 00              a0 = 0x96
  1813: 7b 17 68                 u64 [sp + 0x68] = a0
  1816: 33 07 14                 a0 = 0x14
  1819: 7b 17 38                 u64 [sp + 0x38] = a0
  1822: 33 07 c4 00              a0 = 0xc4
  1826: 7b 17 30                 u64 [sp + 0x30] = a0
  1829: 14 07 20 00 00 00 10 00 00 00 a0 = 0x1000000020
  1839: 7b 17 60                 u64 [sp + 0x60] = a0
  1842: 33 07 40 10 03           a0 = 0x31040
  1847: 95 77 00 00 01           a0 = a0 + 0x10000
  1852: 7b 17 58                 u64 [sp + 0x58] = a0
  1855: 33 07 30 00 01           a0 = 0x10030
  1860: 7b 17 28                 u64 [sp + 0x28] = a0
  1863: 33 07 06                 a0 = 0x6
  1866: 7b 17 20                 u64 [sp + 0x20] = a0
  1869: 33 07 78 00 01           a0 = 0x10078
  1874: 7b 17 18                 u64 [sp + 0x18] = a0
  1877: 49 11 10 20 a1 07        u64 [sp + 16] = 0x7a120
  1883: 49 11 50 ff ff fe        u64 [sp + 80] = 0xfffffffffffeffff
  1889: 7b 16                    u64 [sp] = s1
  1891: 01                       fallthrough
      :                          @137
  1892: 33 0a 0f                 a3 = 0xf
  1895: 82 15 48                 s0 = u64 [sp + 0x48]
  1898: 64 57                    a0 = s0
  1900: 33 08                    a1 = 0
  1902: 82 19 40                 a2 = u64 [sp + 0x40]
  1905: 7b 1b 70                 u64 [sp + 0x70] = a4
  1908: 33 0c                    a5 = 0
  1910: 0a 01                    ecalli 1 // 'fetch'
  1912: c8 57 07                 a0 = a0 + s0
  1915: 95 78 dc                 a1 = a0 + 0xffffffffffffffdc
  1918: 33 09 24                 a2 = 0x24
  1921: 64 67                    a0 = s1
  1923: 50 10 6e ea 07           ra = 110, jump @266
      :                          @138 [@dyn 55]
  1928: 7c 67 21                 a0 = u8 [s1 + 0x21]
  1931: 7c 68 20                 a1 = u8 [s1 + 0x20]
  1934: 7c 69 22                 a2 = u8 [s1 + 0x22]
  1937: 7d 6a 23                 a3 = i8 [s1 + 0x23]
  1940: 8a 77 08                 i32 a0 = a0 << 0x8
  1943: d4 87 07                 a0 = a0 | a1
  1946: 8a 98 10                 i32 a1 = a2 << 0x10
  1949: 8a a9 18                 i32 a2 = a3 << 0x18
  1952: d4 98 08                 a1 = a1 | a2
  1955: d4 87 07                 a0 = a0 | a1
  1958: 7a 17 84 00              u32 [sp + 0x84] = a0
  1962: 33 0c 02                 a5 = 0x2
  1965: 7b 1c b8 00              u64 [sp + 0xb8] = a5
  1969: 7b 1c c8 00              u64 [sp + 0xc8] = a5
  1973: 49 21 d8 00              u64 [sp + 216] = 0
  1977: 33 02 20                 t0 = 0x20
  1980: 7b 12 e0 00              u64 [sp + 0xe0] = t0
  1984: 7c 17 68 01              a0 = u8 [sp + 0x168]
  1988: 7c 18 67 01              a1 = u8 [sp + 0x167]
  1992: 7c 19 66 01              a2 = u8 [sp + 0x166]
  1996: 33 05 03                 s0 = 0x3
  1999: 78 15 e8 00              u8 [sp + 0xe8] = s0
  2003: 95 1b e9 00              a4 = sp + 0xe9
  2007: 78 b7 06                 u8 [a4 + 0x6] = a0
  2010: 78 b8 05                 u8 [a4 + 0x5] = a1
  2013: 78 b9 04                 u8 [a4 + 0x4] = a2
  2016: 7c 17 65 01              a0 = u8 [sp + 0x165]
  2020: 7c 18 64 01              a1 = u8 [sp + 0x164]
  2024: 7c 19 63 01              a2 = u8 [sp + 0x163]
  2028: 7c 1a 62 01              a3 = u8 [sp + 0x162]
  2032: 78 b7 03                 u8 [a4 + 0x3] = a0
  2035: 78 b8 02                 u8 [a4 + 0x2] = a1
  2038: 78 b9 01                 u8 [a4 + 0x1] = a2
  2041: 78 ba                    u8 [a4] = a3
  2043: 7b 1c f0 00              u64 [sp + 0xf0] = a5
  2047: 7b 1c 00 01              u64 [sp + 0x100] = a5
  2051: 49 21 10 01 01           u64 [sp + 272] = 0x1
  2056: 82 17 60                 a0 = u64 [sp + 0x60]
  2059: 7b 17 18 01              u64 [sp + 0x118] = a0
  2063: 7c 17 6f 01              a0 = u8 [sp + 0x16f]
  2067: 7c 18 6e 01              a1 = u8 [sp + 0x16e]
  2071: 7c 19 6d 01              a2 = u8 [sp + 0x16d]
  2075: 78 15 20 01              u8 [sp + 0x120] = s0
  2079: 95 1b 21 01              a4 = sp + 0x121
  2083: 78 b7 06                 u8 [a4 + 0x6] = a0
  2086: 78 b8 05                 u8 [a4 + 0x5] = a1
  2089: 78 b9 04                 u8 [a4 + 0x4] = a2
  2092: 7c 17 6c 01              a0 = u8 [sp + 0x16c]
  2096: 7c 18 6b 01              a1 = u8 [sp + 0x16b]
  2100: 7c 19 6a 01              a2 = u8 [sp + 0x16a]
  2104: 7c 1a 69 01              a3 = u8 [sp + 0x169]
  2108: 78 b7 03                 u8 [a4 + 0x3] = a0
  2111: 78 b8 02                 u8 [a4 + 0x2] = a1
  2114: 78 b9 01                 u8 [a4 + 0x1] = a2
  2117: 78 ba                    u8 [a4] = a3
  2119: 95 17 78                 a0 = sp + 0x78
  2122: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  2126: 82 17 68                 a0 = u64 [sp + 0x68]
  2129: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  2133: 7b 16 b0 01              u64 [sp + 0x1b0] = s1
  2137: 82 17 38                 a0 = u64 [sp + 0x38]
  2140: 7b 17 b8 01              u64 [sp + 0x1b8] = a0
  2144: 95 17 84 00              a0 = sp + 0x84
  2148: 7b 17 c0 01              u64 [sp + 0x1c0] = a0
  2152: 82 17 30                 a0 = u64 [sp + 0x30]
  2155: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
  2159: 7b 1c 28 01              u64 [sp + 0x128] = a5
  2163: 7b 1c 38 01              u64 [sp + 0x138] = a5
  2167: 7b 1c 48 01              u64 [sp + 0x148] = a5
  2171: 7b 12 50 01              u64 [sp + 0x150] = t0
  2175: 78 15 58 01              u8 [sp + 0x158] = s0
  2179: 82 17 28                 a0 = u64 [sp + 0x28]
  2182: 7b 17 88 00              u64 [sp + 0x88] = a0
  2186: 7b 15 90 00              u64 [sp + 0x90] = s0
  2190: 95 17 b8 00              a0 = sp + 0xb8
  2194: 7b 17 a8 00              u64 [sp + 0xa8] = a0
  2198: 7b 15 b0 00              u64 [sp + 0xb0] = s0
  2202: 95 17 a0 01              a0 = sp + 0x1a0
  2206: 7b 17 98 00              u64 [sp + 0x98] = a0
  2210: 7b 15 a0 00              u64 [sp + 0xa0] = s0
  2214: 95 17 88 01              a0 = sp + 0x188
  2218: 95 18 88 00              a1 = sp + 0x88
  2222: 50 10 70 45 04           ra = 112, jump @216
      :                          @139 [@dyn 56]
  2227: 82 16 90 01              s1 = u64 [sp + 0x190]
  2231: 82 1b 98 01              a4 = u64 [sp + 0x198]
  2235: 82 15 88 01              s0 = u64 [sp + 0x188]
  2239: 33 07 02                 a0 = 0x2
  2242: 33 08                    a1 = 0
  2244: 33 09                    a2 = 0
  2246: 64 6a                    a3 = s1
  2248: 33 00 72                 ra = 0x72
  2251: 0a 64                    ecalli 100 // 'log'
  2253: 01                       fallthrough
      :                          @140 [@dyn 57]
  2254: 82 17 50                 a0 = u64 [sp + 0x50]
  2257: c8 57 07                 a0 = a0 + s0
  2260: 82 1b 58                 a4 = u64 [sp + 0x58]
  2263: 53 37 00 00 ff 1a        jump @145 if a0 <u 4294901760
      :                          @141
  2269: 82 b7                    a0 = u64 [a4]
  2271: c9 7b 08                 a1 = a4 - a0
  2274: ab 68 0f                 jump @145 if a1 != s1
      :                          @142
  2277: c9 57 08                 a1 = a0 - s0
  2280: 01                       fallthrough
      :                          @143
  2281: 82 b9                    a2 = u64 [a4]
  2283: ab 79 f2                 jump @141 if a2 != a0
      :                          @144
  2286: 7b b8                    u64 [a4] = a1
  2288: 01                       fallthrough
      :                          @145
  2289: 82 17 78                 a0 = u64 [sp + 0x78]
  2292: 80 18 84 00              a1 = u32 [sp + 0x84]
  2296: 33 09 64                 a2 = 0x64
  2299: 33 0a 64                 a3 = 0x64
  2302: 33 0b 00 04              a4 = 0x400
  2306: 0a 12                    ecalli 18 // 'new'
  2308: 7b 17 70 01              u64 [sp + 0x170] = a0
  2312: 7b 17 78 01              u64 [sp + 0x178] = a0
  2316: 82 17 70                 a0 = u64 [sp + 0x70]
  2319: 7a 17 84 01              u32 [sp + 0x184] = a0
  2323: 95 17 84 01              a0 = sp + 0x184
  2327: 33 08 04                 a1 = 0x4
  2330: 95 19 78 01              a2 = sp + 0x178
  2334: 33 0a 04                 a3 = 0x4
  2337: 0a 04                    ecalli 4 // 'write'
  2339: 33 0c 02                 a5 = 0x2
  2342: 7b 1c b8 00              u64 [sp + 0xb8] = a5
  2346: 7b 1c c8 00              u64 [sp + 0xc8] = a5
  2350: 49 21 d8 00              u64 [sp + 216] = 0
  2354: 49 21 e0 00 20           u64 [sp + 224] = 0x20
  2359: 7c 17 68 01              a0 = u8 [sp + 0x168]
  2363: 7c 18 67 01              a1 = u8 [sp + 0x167]
  2367: 7c 19 66 01              a2 = u8 [sp + 0x166]
  2371: 33 06 03                 s1 = 0x3
  2374: 78 16 e8 00              u8 [sp + 0xe8] = s1
  2378: 95 1b e9 00              a4 = sp + 0xe9
  2382: 78 b7 06                 u8 [a4 + 0x6] = a0
  2385: 78 b8 05                 u8 [a4 + 0x5] = a1
  2388: 78 b9 04                 u8 [a4 + 0x4] = a2
  2391: 7c 17 65 01              a0 = u8 [sp + 0x165]
  2395: 7c 18 64 01              a1 = u8 [sp + 0x164]
  2399: 7c 19 63 01              a2 = u8 [sp + 0x163]
  2403: 7c 1a 62 01              a3 = u8 [sp + 0x162]
  2407: 78 b7 03                 u8 [a4 + 0x3] = a0
  2410: 78 b8 02                 u8 [a4 + 0x2] = a1
  2413: 78 b9 01                 u8 [a4 + 0x1] = a2
  2416: 78 ba                    u8 [a4] = a3
  2418: 7b 1c f0 00              u64 [sp + 0xf0] = a5
  2422: 7b 1c 00 01              u64 [sp + 0x100] = a5
  2426: 49 21 10 01 01           u64 [sp + 272] = 0x1
  2431: 82 17 60                 a0 = u64 [sp + 0x60]
  2434: 7b 17 18 01              u64 [sp + 0x118] = a0
  2438: 7c 17 6f 01              a0 = u8 [sp + 0x16f]
  2442: 7c 18 6e 01              a1 = u8 [sp + 0x16e]
  2446: 7c 19 6d 01              a2 = u8 [sp + 0x16d]
  2450: 78 16 20 01              u8 [sp + 0x120] = s1
  2454: 95 1b 21 01              a4 = sp + 0x121
  2458: 78 b7 06                 u8 [a4 + 0x6] = a0
  2461: 78 b8 05                 u8 [a4 + 0x5] = a1
  2464: 78 b9 04                 u8 [a4 + 0x4] = a2
  2467: 7c 17 6c 01              a0 = u8 [sp + 0x16c]
  2471: 7c 18 6b 01              a1 = u8 [sp + 0x16b]
  2475: 7c 19 6a 01              a2 = u8 [sp + 0x16a]
  2479: 7c 1a 69 01              a3 = u8 [sp + 0x169]
  2483: 78 b7 03                 u8 [a4 + 0x3] = a0
  2486: 78 b8 02                 u8 [a4 + 0x2] = a1
  2489: 78 b9 01                 u8 [a4 + 0x1] = a2
  2492: 78 ba                    u8 [a4] = a3
  2494: 95 17 70 01              a0 = sp + 0x170
  2498: 7b 17 88 00              u64 [sp + 0x88] = a0
  2502: 82 17 68                 a0 = u64 [sp + 0x68]
  2505: 7b 17 90 00              u64 [sp + 0x90] = a0
  2509: 95 17 84 01              a0 = sp + 0x184
  2513: 7b 17 98 00              u64 [sp + 0x98] = a0
  2517: 82 17 20                 a0 = u64 [sp + 0x20]
  2520: 7b 17 a0 00              u64 [sp + 0xa0] = a0
  2524: 82 17 18                 a0 = u64 [sp + 0x18]
  2527: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  2531: 7b 1c a8 01              u64 [sp + 0x1a8] = a5
  2535: 95 17 b8 00              a0 = sp + 0xb8
  2539: 7b 17 c0 01              u64 [sp + 0x1c0] = a0
  2543: 7b 1c c8 01              u64 [sp + 0x1c8] = a5
  2547: 95 17 88 00              a0 = sp + 0x88
  2551: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  2555: 7b 1c b8 01              u64 [sp + 0x1b8] = a5
  2559: 95 17 88 01              a0 = sp + 0x188
  2563: 95 18 a0 01              a1 = sp + 0x1a0
  2567: 50 10 74 ec 02           ra = 116, jump @216
      :                          @146 [@dyn 58]
  2572: 82 16 90 01              s1 = u64 [sp + 0x190]
  2576: 82 1b 98 01              a4 = u64 [sp + 0x198]
  2580: 82 15 88 01              s0 = u64 [sp + 0x188]
  2584: 33 07 02                 a0 = 0x2
  2587: 33 08                    a1 = 0
  2589: 33 09                    a2 = 0
  2591: 64 6a                    a3 = s1
  2593: 33 00 76                 ra = 0x76
  2596: 0a 64                    ecalli 100 // 'log'
  2598: 01                       fallthrough
      :                          @147 [@dyn 59]
  2599: 82 1b 58                 a4 = u64 [sp + 0x58]
  2602: 82 17 50                 a0 = u64 [sp + 0x50]
  2605: c8 57 07                 a0 = a0 + s0
  2608: 53 37 00 00 ff 1a        jump @152 if a0 <u 4294901760
      :                          @148
  2614: 82 b7                    a0 = u64 [a4]
  2616: c9 7b 08                 a1 = a4 - a0
  2619: ab 68 0f                 jump @152 if a1 != s1
      :                          @149
  2622: c9 57 08                 a1 = a0 - s0
  2625: 01                       fallthrough
      :                          @150
  2626: 82 b9                    a2 = u64 [a4]
  2628: ab 79 f2                 jump @148 if a2 != a0
      :                          @151
  2631: 7b b8                    u64 [a4] = a1
  2633: 01                       fallthrough
      :                          @152
  2634: 95 17 b8 00              a0 = sp + 0xb8
  2638: 33 09 80 00              a2 = 0x80
  2642: 33 08                    a1 = 0
  2644: 50 10 78 cb 05           ra = 120, jump @284
      :                          @153 [@dyn 60]
  2649: 82 17 70 01              a0 = u64 [sp + 0x170]
  2653: 33 09 64                 a2 = 0x64
  2656: 95 1a b8 00              a3 = sp + 0xb8
  2660: 82 18 10                 a1 = u64 [sp + 0x10]
  2663: 0a 14                    ecalli 20 // 'transfer'
  2665: 01                       fallthrough
      :                          @154
  2666: 82 19 70                 a2 = u64 [sp + 0x70]
  2669: 51 19 09 3f              jump @158 if a2 == 9
      :                          @155
  2673: 81 17 78 01              a0 = i32 [sp + 0x178]
  2677: 95 98 01                 a1 = a2 + 0x1
  2680: 97 99 02                 a2 = a2 << 0x2
  2683: 82 16                    s1 = u64 [sp]
  2685: c8 69 09                 a2 = a2 + s1
  2688: 98 7a 18                 a3 = a0 >> 0x18
  2691: 78 9a 03                 u8 [a2 + 0x3] = a3
  2694: 98 7a 10                 a3 = a0 >> 0x10
  2697: 78 9a 02                 u8 [a2 + 0x2] = a3
  2700: 98 7a 08                 a3 = a0 >> 0x8
  2703: 78 9a 01                 u8 [a2 + 0x1] = a3
  2706: 78 97                    u8 [a2] = a0
  2708: 64 8b                    a4 = a1
  2710: 82 17 08                 a0 = u64 [sp + 0x8]
  2713: ab 78 cb fc              jump @137 if a1 != a0
      :                          @156
  2717: 82 1a 78                 a3 = u64 [sp + 0x78]
  2720: 33 08 20                 a1 = 0x20
  2723: 28 23 fc                 jump @133
      :                          @157
  2726: 33 08 20                 a1 = 0x20
  2729: 28 1d fc                 jump @133
      :                          @158
  2732: 00                       trap
      :                          @159 [export #2: 'on_transfer']
  2733: 33 07 00 00 01           a0 = 0x10000
  2738: 33 08                    a1 = 0
  2740: 32 00                    ret
      :                          @160
  2742: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  2745: 7b 10 40                 u64 [sp + 0x40] = ra
  2748: 7b 15 38                 u64 [sp + 0x38] = s0
  2751: 7b 16 30                 u64 [sp + 0x30] = s1
  2754: c8 89 09                 a2 = a2 + a1
  2757: ac 89 52                 jump @168 if a2 <u a1
      :                          @161
  2760: 64 75                    s0 = a0
  2762: 82 77                    a0 = u64 [a0]
  2764: 97 78 01                 a1 = a0 << 0x1
  2767: 33 0a 08                 a3 = 0x8
  2770: e4 a9 09                 a2 = maxu(a2, a3)
  2773: e4 98 06                 s1 = maxu(a1, a2)
  2776: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  2779: 98 88 3f                 a1 = a1 >> 0x3f
  2782: 51 07 12                 jump @163 if a0 == 0
      :                          @162
  2785: 82 59 08                 a2 = u64 [s0 + 0x8]
  2788: 7b 19 18                 u64 [sp + 0x18] = a2
  2791: 49 11 20 01              u64 [sp + 32] = 0x1
  2795: 7b 17 28                 u64 [sp + 0x28] = a0
  2798: 28 06                    jump @164
      :                          @163
  2800: 49 11 20                 u64 [sp + 32] = 0
  2803: 01                       fallthrough
      :                          @164
  2804: 64 17                    a0 = sp
  2806: 95 1a 18                 a3 = sp + 0x18
  2809: 64 69                    a2 = s1
  2811: 50 10 7a 32              ra = 122, jump @172
      :                          @165 [@dyn 61]
  2815: 82 18                    a1 = u64 [sp]
  2817: 82 17 08                 a0 = u64 [sp + 0x8]
  2820: 51 08 14                 jump @169 if a1 == 0
      :                          @166
  2823: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  2833: aa 87 0d                 jump @170 if a0 == a1
      :                          @167
  2836: 52 07 18                 jump @171 if a0 != 0
      :                          @168
  2839: 00                       trap
      :                          @169
  2840: 7b 57 08                 u64 [s0 + 0x8] = a0
  2843: 7b 56                    u64 [s0] = s1
  2845: 01                       fallthrough
      :                          @170
  2846: 82 10 40                 ra = u64 [sp + 0x40]
  2849: 82 15 38                 s0 = u64 [sp + 0x38]
  2852: 82 16 30                 s1 = u64 [sp + 0x30]
  2855: 95 11 48                 sp = sp + 0x48
  2858: 32 00                    ret
      :                          @171
  2860: 00                       trap
      :                          @172
  2861: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  2864: 7b 10 30                 u64 [sp + 0x30] = ra
  2867: 7b 15 28                 u64 [sp + 0x28] = s0
  2870: 7b 16 20                 u64 [sp + 0x20] = s1
  2873: 64 95                    s0 = a2
  2875: 64 72                    t0 = a0
  2877: 51 08 79                 jump @182 if a1 == 0
      :                          @173
  2880: 82 a7 08                 a0 = u64 [a3 + 0x8]
  2883: 51 07 7c                 jump @183 if a0 == 0
      :                          @174
  2886: 82 a9 10                 a2 = u64 [a3 + 0x10]
  2889: 51 09 aa 00              jump @190 if a2 == 0
      :                          @175
  2893: 82 a8                    a1 = u64 [a3]
  2895: 33 06 40 10 03           s1 = 0x31040
  2900: 33 03 00 00 01           t1 = 0x10000
  2905: c8 36 06                 s1 = s1 + t1
  2908: 01                       fallthrough
      :                          @176
  2909: 82 6a                    a3 = u64 [s1]
  2911: c8 5a 07                 a0 = a3 + s0
  2914: ac a7 cf 00              jump @196 if a0 <u a3
      :                          @177
  2918: 95 7b 01                 a4 = a0 + 0x1
  2921: 88 bc 01                 a5 = a4 <u 0x1
  2924: d8 b3 0b                 a4 = t1 <u a4
  2927: d4 cb 0b                 a4 = a4 | a5
  2930: 52 0b bf 00              jump @196 if a4 != 0
      :                          @178
  2934: 82 6b                    a4 = u64 [s1]
  2936: ab ab e5                 jump @176 if a4 != a3
      :                          @179
  2939: 7b 67                    u64 [s1] = a0
  2941: 33 0c                    a5 = 0
  2943: 7b 12 18                 u64 [sp + 0x18] = t0
  2946: 33 0a 40 10 03           a3 = 0x31040
  2951: 33 0b 00 00 01           a4 = 0x10000
  2956: 7b 1a                    u64 [sp] = a3
  2958: c8 ba 0a                 a3 = a3 + a4
  2961: c9 7a 07                 a0 = a3 - a0
  2964: 7b 17 10                 u64 [sp + 0x10] = a0
  2967: 7b 18 08                 u64 [sp + 0x8] = a1
  2970: 64 96                    s1 = a2
  2972: 50 10 7c d1 03           ra = 124, jump @266
      :                          @180 [@dyn 62]
  2977: 54 36 00 00 01 98 00     jump @197 if s1 <=u 65536
      :                          @181
  2984: 82 12 18                 t0 = u64 [sp + 0x18]
  2987: 82 18 10                 a1 = u64 [sp + 0x10]
  2990: 33 07                    a0 = 0
  2992: 7b 28 08                 u64 [t0 + 0x8] = a1
  2995: 28 b5 00                 jump @203
      :                          @182
  2998: 49 12 08                 u64 [t0 + 8] = 0
  3001: 33 07 01                 a0 = 0x1
  3004: 28 ac 00                 jump @203
      :                          @183
  3007: 33 09 40 10 03           a2 = 0x31040
  3012: 33 07 00 00 01           a0 = 0x10000
  3017: c8 79 09                 a2 = a2 + a0
  3020: 01                       fallthrough
      :                          @184
  3021: 82 9a                    a3 = u64 [a2]
  3023: c8 5a 08                 a1 = a3 + s0
  3026: ac a8 5f                 jump @196 if a1 <u a3
      :                          @185
  3029: 95 8b 01                 a4 = a1 + 0x1
  3032: 88 bc 01                 a5 = a4 <u 0x1
  3035: d8 b7 0b                 a4 = a0 <u a4
  3038: d4 cb 0b                 a4 = a4 | a5
  3041: 52 0b 50                 jump @196 if a4 != 0
      :                          @186
  3044: 82 9b                    a4 = u64 [a2]
  3046: ab ab e7                 jump @184 if a4 != a3
      :                          @187
  3049: 7b 98                    u64 [a2] = a1
  3051: 33 0c                    a5 = 0
  3053: 01                       fallthrough
      :                          @188
  3054: ab ab df                 jump @184 if a4 != a3
      :                          @189
  3057: 28 31                    jump @195
      :                          @190
  3059: 33 09 40 10 03           a2 = 0x31040
  3064: 33 07 00 00 01           a0 = 0x10000
  3069: c8 79 09                 a2 = a2 + a0
  3072: 01                       fallthrough
      :                          @191
  3073: 82 9a                    a3 = u64 [a2]
  3075: c8 5a 08                 a1 = a3 + s0
  3078: ac a8 2b                 jump @196 if a1 <u a3
      :                          @192
  3081: 95 8b 01                 a4 = a1 + 0x1
  3084: 88 bc 01                 a5 = a4 <u 0x1
  3087: d8 b7 0b                 a4 = a0 <u a4
  3090: d4 cb 0b                 a4 = a4 | a5
  3093: 52 0b 1c                 jump @196 if a4 != 0
      :                          @193
  3096: 82 9b                    a4 = u64 [a2]
  3098: ab ab e7                 jump @191 if a4 != a3
      :                          @194
  3101: 7b 98                    u64 [a2] = a1
  3103: 33 0c                    a5 = 0
  3105: 01                       fallthrough
      :                          @195
  3106: 33 07 40 10 04           a0 = 0x41040
  3111: c9 87 08                 a1 = a0 - a1
  3114: 33 07                    a0 = 0
  3116: 7b 28 08                 u64 [t0 + 0x8] = a1
  3119: 28 39                    jump @203
      :                          @196
  3121: 33 07 01                 a0 = 0x1
  3124: 7b 27 08                 u64 [t0 + 0x8] = a0
  3127: 28 31                    jump @203
      :                          @197
  3129: 64 6c                    a5 = s1
  3131: 82 17                    a0 = u64 [sp]
  3133: 95 77 00 00 01           a0 = a0 + 0x10000
  3138: 82 12 18                 t0 = u64 [sp + 0x18]
  3141: 82 16 08                 s1 = u64 [sp + 0x8]
  3144: 01                       fallthrough
      :                          @198
  3145: 82 78                    a1 = u64 [a0]
  3147: c9 87 09                 a2 = a0 - a1
  3150: ab 69 11                 jump @202 if a2 != s1
      :                          @199
  3153: c9 c8 09                 a2 = a1 - a5
  3156: 01                       fallthrough
      :                          @200
  3157: 82 7a                    a3 = u64 [a0]
  3159: ab 8a f2                 jump @198 if a3 != a1
      :                          @201
  3162: 7b 79                    u64 [a0] = a2
  3164: 33 0b                    a4 = 0
  3166: 01                       fallthrough
      :                          @202
  3167: 82 18 10                 a1 = u64 [sp + 0x10]
  3170: 33 07                    a0 = 0
  3172: 7b 28 08                 u64 [t0 + 0x8] = a1
  3175: 01                       fallthrough
      :                          @203
  3176: 7b 25 10                 u64 [t0 + 0x10] = s0
  3179: 7b 27                    u64 [t0] = a0
  3181: 82 10 30                 ra = u64 [sp + 0x30]
  3184: 82 15 28                 s0 = u64 [sp + 0x28]
  3187: 82 16 20                 s1 = u64 [sp + 0x20]
  3190: 95 11 38                 sp = sp + 0x38
  3193: 32 00                    ret
      :                          @204
  3195: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  3198: 7b 10 40                 u64 [sp + 0x40] = ra
  3201: 7b 15 38                 u64 [sp + 0x38] = s0
  3204: 7b 16 30                 u64 [sp + 0x30] = s1
  3207: 95 88 01                 a1 = a1 + 0x1
  3210: 51 08 53                 jump @212 if a1 == 0
      :                          @205
  3213: 64 75                    s0 = a0
  3215: 82 77                    a0 = u64 [a0]
  3217: 97 79 01                 a2 = a0 << 0x1
  3220: 33 0a 08                 a3 = 0x8
  3223: e4 a8 08                 a1 = maxu(a1, a3)
  3226: e4 89 06                 s1 = maxu(a2, a1)
  3229: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  3232: 98 88 3f                 a1 = a1 >> 0x3f
  3235: 51 07 12                 jump @207 if a0 == 0
      :                          @206
  3238: 82 59 08                 a2 = u64 [s0 + 0x8]
  3241: 7b 19 18                 u64 [sp + 0x18] = a2
  3244: 49 11 20 01              u64 [sp + 32] = 0x1
  3248: 7b 17 28                 u64 [sp + 0x28] = a0
  3251: 28 06                    jump @208
      :                          @207
  3253: 49 11 20                 u64 [sp + 32] = 0
  3256: 01                       fallthrough
      :                          @208
  3257: 64 17                    a0 = sp
  3259: 95 1a 18                 a3 = sp + 0x18
  3262: 64 69                    a2 = s1
  3264: 50 10 7e 6d fe           ra = 126, jump @172
      :                          @209 [@dyn 63]
  3269: 82 18                    a1 = u64 [sp]
  3271: 82 17 08                 a0 = u64 [sp + 0x8]
  3274: 51 08 14                 jump @213 if a1 == 0
      :                          @210
  3277: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  3287: aa 87 0d                 jump @214 if a0 == a1
      :                          @211
  3290: 52 07 18                 jump @215 if a0 != 0
      :                          @212
  3293: 00                       trap
      :                          @213
  3294: 7b 57 08                 u64 [s0 + 0x8] = a0
  3297: 7b 56                    u64 [s0] = s1
  3299: 01                       fallthrough
      :                          @214
  3300: 82 10 40                 ra = u64 [sp + 0x40]
  3303: 82 15 38                 s0 = u64 [sp + 0x38]
  3306: 82 16 30                 s1 = u64 [sp + 0x30]
  3309: 95 11 48                 sp = sp + 0x48
  3312: 32 00                    ret
      :                          @215
  3314: 00                       trap
      :                          @216
  3315: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  3318: 7b 10 30                 u64 [sp + 0x30] = ra
  3321: 7b 15 28                 u64 [sp + 0x28] = s0
  3324: 7b 16 20                 u64 [sp + 0x20] = s1
  3327: 64 89                    a2 = a1
  3329: 82 8a 08                 a3 = u64 [a1 + 0x8]
  3332: 64 75                    s0 = a0
  3334: 51 0a 35                 jump @221 if a3 == 0
      :                          @217
  3337: 82 98                    a1 = u64 [a2]
  3339: 33 07                    a0 = 0
  3341: 95 8b 08                 a4 = a1 + 0x8
  3344: 01                       fallthrough
      :                          @218
  3345: 82 bc                    a5 = u64 [a4]
  3347: c8 c7 07                 a0 = a0 + a5
  3350: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  3353: 95 bb 10                 a4 = a4 + 0x10
  3356: 52 0a f5                 jump @218 if a3 != 0
      :                          @219
  3359: 82 9a 18                 a3 = u64 [a2 + 0x18]
  3362: 51 0a 24                 jump @223 if a3 == 0
      :                          @220
  3365: 82 88 08                 a1 = u64 [a1 + 0x8]
  3368: 8e 88                    a1 = a1 >u 0
  3370: 88 7a 10                 a3 = a0 <u 0x10
  3373: 85 aa 01                 a3 = a3 ^ 0x1
  3376: d4 a8 08                 a1 = a1 | a3
  3379: 89 7a                    a3 = a0 <s 0
  3381: e0 a8 08                 a1 = a1 & ~a3
  3384: 52 08 0a                 jump @222 if a1 != 0
      :                          @221
  3387: 33 07                    a0 = 0
  3389: 33 08 01                 a1 = 0x1
  3392: 28 4a                    jump @231
      :                          @222
  3394: 97 77 01                 a0 = a0 << 0x1
  3397: 01                       fallthrough
      :                          @223
  3398: 51 07 40                 jump @230 if a0 == 0
      :                          @224
  3401: 57 07 79                 jump @236 if a0 <s 0
      :                          @225
  3404: 64 52                    t0 = s0
  3406: 33 0b 40 10 03           a4 = 0x31040
  3411: 33 08 00 00 01           a1 = 0x10000
  3416: c8 8b 0b                 a4 = a4 + a1
  3419: 01                       fallthrough
      :                          @226
  3420: 82 bc                    a5 = u64 [a4]
  3422: c8 7c 0a                 a3 = a5 + a0
  3425: ac ca 5f                 jump @234 if a3 <u a5
      :                          @227
  3428: 95 a5 01                 s0 = a3 + 0x1
  3431: 88 56 01                 s1 = s0 <u 0x1
  3434: d8 58 05                 s0 = a1 <u s0
  3437: d4 65 05                 s0 = s0 | s1
  3440: 52 05 50                 jump @234 if s0 != 0
      :                          @228
  3443: 82 b6                    s1 = u64 [a4]
  3445: ab c6 e7                 jump @226 if s1 != a5
      :                          @229
  3448: 7b ba                    u64 [a4] = a3
  3450: 33 08 40 10 04           a1 = 0x41040
  3455: c9 a8 08                 a1 = a1 - a3
  3458: 64 25                    s0 = t0
  3460: 28 06                    jump @231
      :                          @230
  3462: 33 08 01                 a1 = 0x1
  3465: 01                       fallthrough
      :                          @231
  3466: 7b 17                    u64 [sp] = a0
  3468: 7b 18 08                 u64 [sp + 0x8] = a1
  3471: 49 11 10                 u64 [sp + 16] = 0
  3474: 33 08 98 00 01           a1 = 0x10098
  3479: 64 17                    a0 = sp
  3481: 50 20 80 00 80 06        ra = 128, jump @360
      :                          @232 [@dyn 64]
  3487: 52 07 22                 jump @235 if a0 != 0
      :                          @233
  3490: 82 17 10                 a0 = u64 [sp + 0x10]
  3493: 82 18 08                 a1 = u64 [sp + 0x8]
  3496: 82 19                    a2 = u64 [sp]
  3498: 7b 57 10                 u64 [s0 + 0x10] = a0
  3501: 7b 58 08                 u64 [s0 + 0x8] = a1
  3504: 7b 59                    u64 [s0] = a2
  3506: 82 10 30                 ra = u64 [sp + 0x30]
  3509: 82 15 28                 s0 = u64 [sp + 0x28]
  3512: 82 16 20                 s1 = u64 [sp + 0x20]
  3515: 95 11 38                 sp = sp + 0x38
  3518: 32 00                    ret
      :                          @234
  3520: 00                       trap
      :                          @235
  3521: 00                       trap
      :                          @236
  3522: 00                       trap
      :                          @237 [@dyn 65]
  3523: 82 72                    t0 = u64 [a0]
  3525: 33 09 00 00 ff           a2 = 0xffffffffffff0000
  3530: 95 2a ff ff fe           a3 = t0 + 0xfffffffffffeffff
  3535: ac 9a 28                 jump @243 if a3 <u a2
      :                          @238
  3538: 82 77 08                 a0 = u64 [a0 + 0x8]
  3541: 33 09 40 10 03           a2 = 0x31040
  3546: 95 99 00 00 01           a2 = a2 + 0x10000
  3551: 01                       fallthrough
      :                          @239
  3552: 82 9a                    a3 = u64 [a2]
  3554: c9 a9 0b                 a4 = a2 - a3
  3557: ab 7b 12                 jump @243 if a4 != a0
      :                          @240
  3560: c9 2a 0b                 a4 = a3 - t0
  3563: 01                       fallthrough
      :                          @241
  3564: 82 9c                    a5 = u64 [a2]
  3566: ab ac f2                 jump @239 if a5 != a3
      :                          @242
  3569: 7b 9b                    u64 [a2] = a4
  3571: 33 08                    a1 = 0
  3573: 32 00                    ret
      :                          @243
  3575: 32 00                    ret
      :                          @244 [@dyn 66]
  3577: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3580: 7b 10 18                 u64 [sp + 0x18] = ra
  3583: 7b 15 10                 u64 [sp + 0x10] = s0
  3586: 7b 16 08                 u64 [sp + 0x8] = s1
  3589: 64 75                    s0 = a0
  3591: 82 7a 10                 a3 = u64 [a0 + 0x10]
  3594: 82 77                    a0 = u64 [a0]
  3596: c9 a7 07                 a0 = a0 - a3
  3599: 64 96                    s1 = a2
  3601: ac 97 2b                 jump @247 if a0 <u a2
      :                          @245
  3604: 7b 1a                    u64 [sp] = a3
  3606: 82 57 08                 a0 = u64 [s0 + 0x8]
  3609: c8 a7 07                 a0 = a0 + a3
  3612: 64 69                    a2 = s1
  3614: 50 20 86 00 4f 01        ra = 134, jump @266
      :                          @246 [@dyn 67]
  3620: 82 17                    a0 = u64 [sp]
  3622: c8 76 06                 s1 = s1 + a0
  3625: 7b 56 10                 u64 [s0 + 0x10] = s1
  3628: 33 07                    a0 = 0
  3630: 82 10 18                 ra = u64 [sp + 0x18]
  3633: 82 15 10                 s0 = u64 [sp + 0x10]
  3636: 82 16 08                 s1 = u64 [sp + 0x8]
  3639: 95 11 20                 sp = sp + 0x20
  3642: 32 00                    ret
      :                          @247
  3644: 64 57                    a0 = s0
  3646: 7b 18                    u64 [sp] = a1
  3648: 64 a8                    a1 = a3
  3650: 64 69                    a2 = s1
  3652: 50 20 88 00 72 fc        ra = 136, jump @160
      :                          @248 [@dyn 68]
  3658: 82 18                    a1 = u64 [sp]
  3660: 82 5a 10                 a3 = u64 [s0 + 0x10]
  3663: 28 c5                    jump @245
      :                          @249 [@dyn 69]
  3665: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  3668: 7b 10 20                 u64 [sp + 0x20] = ra
  3671: 7b 15 18                 u64 [sp + 0x18] = s0
  3674: 7b 16 10                 u64 [sp + 0x10] = s1
  3677: 64 86                    s1 = a1
  3679: 83 88                    i32 a1 = a1 + 0
  3681: 33 09 80 00              a2 = 0x80
  3685: 64 7a                    a3 = a0
  3687: ae 98 2c                 jump @254 if a1 >=u a2
      :                          @250
  3690: 82 a8 10                 a1 = u64 [a3 + 0x10]
  3693: 82 a7                    a0 = u64 [a3]
  3695: ab 78 13                 jump @253 if a1 != a0
      :                          @251
  3698: 64 a7                    a0 = a3
  3700: 64 a5                    s0 = a3
  3702: 50 20 8c 00 05 fe        ra = 140, jump @204
      :                          @252 [@dyn 70]
  3708: 64 5a                    a3 = s0
  3710: 82 58 10                 a1 = u64 [s0 + 0x10]
  3713: 01                       fallthrough
      :                          @253
  3714: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3717: c8 87 07                 a0 = a0 + a1
  3720: 78 76                    u8 [a0] = s1
  3722: 95 88 01                 a1 = a1 + 0x1
  3725: 7b a8 10                 u64 [a3 + 0x10] = a1
  3728: 28 ac 00                 jump @262
      :                          @254
  3731: 8b 67 0b                 i32 a0 = s1 >> 0xb
  3734: 48 11 0c                 u32 [sp + 12] = 0
  3737: 52 07 1c                 jump @256 if a0 != 0
      :                          @255
  3740: 98 67 06                 a0 = s1 >> 0x6
  3743: 86 77 c0 00              a0 = a0 | 0xc0
  3747: 78 17 0c                 u8 [sp + 0xc] = a0
  3750: 84 67 3f                 a0 = s1 & 0x3f
  3753: 86 77 80 00              a0 = a0 | 0x80
  3757: 78 17 0d                 u8 [sp + 0xd] = a0
  3760: 33 06 02                 s1 = 0x2
  3763: 28 63                    jump @259
      :                          @256
  3765: 8b 67 10                 i32 a0 = s1 >> 0x10
  3768: 52 07 29                 jump @258 if a0 != 0
      :                          @257
  3771: 98 67 0c                 a0 = s1 >> 0xc
  3774: 86 77 e0 00              a0 = a0 | 0xe0
  3778: 78 17 0c                 u8 [sp + 0xc] = a0
  3781: 97 67 34                 a0 = s1 << 0x34
  3784: 98 77 3a                 a0 = a0 >> 0x3a
  3787: 95 77 80 00              a0 = a0 + 0x80
  3791: 78 17 0d                 u8 [sp + 0xd] = a0
  3794: 84 67 3f                 a0 = s1 & 0x3f
  3797: 86 77 80 00              a0 = a0 | 0x80
  3801: 78 17 0e                 u8 [sp + 0xe] = a0
  3804: 33 06 03                 s1 = 0x3
  3807: 28 37                    jump @259
      :                          @258
  3809: 97 67 2b                 a0 = s1 << 0x2b
  3812: 98 77 3d                 a0 = a0 >> 0x3d
  3815: 95 77 f0 00              a0 = a0 + 0xf0
  3819: 78 17 0c                 u8 [sp + 0xc] = a0
  3822: 97 67 2e                 a0 = s1 << 0x2e
  3825: 98 77 3a                 a0 = a0 >> 0x3a
  3828: 95 77 80 00              a0 = a0 + 0x80
  3832: 78 17 0d                 u8 [sp + 0xd] = a0
  3835: 97 67 34                 a0 = s1 << 0x34
  3838: 98 77 3a                 a0 = a0 >> 0x3a
  3841: 95 77 80 00              a0 = a0 + 0x80
  3845: 78 17 0e                 u8 [sp + 0xe] = a0
  3848: 84 67 3f                 a0 = s1 & 0x3f
  3851: 86 77 80 00              a0 = a0 | 0x80
  3855: 78 17 0f                 u8 [sp + 0xf] = a0
  3858: 33 06 04                 s1 = 0x4
  3861: 01                       fallthrough
      :                          @259
  3862: 82 a5 10                 s0 = u64 [a3 + 0x10]
  3865: 82 a7                    a0 = u64 [a3]
  3867: c9 57 07                 a0 = a0 - s0
  3870: ac 67 2e                 jump @263 if a0 <u s1
      :                          @260
  3873: 7b 1a                    u64 [sp] = a3
  3875: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3878: c8 57 07                 a0 = a0 + s0
  3881: 95 18 0c                 a1 = sp + 0xc
  3884: 64 69                    a2 = s1
  3886: 50 20 8e 00 3f           ra = 142, jump @266
      :                          @261 [@dyn 71]
  3891: c8 56 06                 s1 = s1 + s0
  3894: 82 17                    a0 = u64 [sp]
  3896: 7b 76 10                 u64 [a0 + 0x10] = s1
  3899: 01                       fallthrough
      :                          @262
  3900: 33 07                    a0 = 0
  3902: 82 10 20                 ra = u64 [sp + 0x20]
  3905: 82 15 18                 s0 = u64 [sp + 0x18]
  3908: 82 16 10                 s1 = u64 [sp + 0x10]
  3911: 95 11 28                 sp = sp + 0x28
  3914: 32 00                    ret
      :                          @263
  3916: 64 a7                    a0 = a3
  3918: 64 58                    a1 = s0
  3920: 64 69                    a2 = s1
  3922: 64 a5                    s0 = a3
  3924: 50 20 90 00 62 fb        ra = 144, jump @160
      :                          @264 [@dyn 72]
  3930: 64 5a                    a3 = s0
  3932: 82 55 10                 s0 = u64 [s0 + 0x10]
  3935: 28 c2                    jump @260
      :                          @265 [@dyn 73]
  3937: 64 8a                    a3 = a1
  3939: 33 08 98 00 01           a1 = 0x10098
  3944: 64 a9                    a2 = a3
  3946: 28 af 04                 jump @360
      :                          @266
  3949: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3952: 7b 10 18                 u64 [sp + 0x18] = ra
  3955: 7b 15 10                 u64 [sp + 0x10] = s0
  3958: 7b 16 08                 u64 [sp + 0x8] = s1
  3961: 53 19 10 64              jump @275 if a2 <u 16
      :                          @267
  3965: 8d 7a                    i32 a3 = -a0
  3967: 84 a2 07                 t0 = a3 & 0x7
  3970: c8 27 0b                 a4 = a0 + t0
  3973: 51 02 15                 jump @270 if t0 == 0
      :                          @268
  3976: 64 8c                    a5 = a1
  3978: 64 75                    s0 = a0
  3980: 01                       fallthrough
      :                          @269
  3981: 7c ca                    a3 = u8 [a5]
  3983: 78 5a                    u8 [s0] = a3
  3985: 95 55 01                 s0 = s0 + 0x1
  3988: 95 cc 01                 a5 = a5 + 0x1
  3991: ac b5 f6                 jump @269 if s0 <u a4
      :                          @270
  3994: c8 28 03                 t1 = a1 + t0
  3997: c9 29 02                 t0 = a2 - t0
  4000: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  4003: 84 38 07                 a1 = t1 & 0x7
  4006: c8 4b 0a                 a3 = a4 + t2
  4009: 51 08 3b                 jump @277 if a1 == 0
      :                          @271
  4012: 58 04 4b                 jump @280 if t2 <=s 0
      :                          @272
  4015: 97 38 03                 a1 = t1 << 0x3
  4018: 84 80 38                 ra = a1 & 0x38
  4021: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  4024: 82 c5                    s0 = u64 [a5]
  4026: 8d 88                    i32 a1 = -a1
  4028: 84 88 38                 a1 = a1 & 0x38
  4031: 95 cc 08                 a5 = a5 + 0x8
  4034: 01                       fallthrough
      :                          @273
  4035: 82 c6                    s1 = u64 [a5]
  4037: d0 05 05                 s0 = s0 >> ra
  4040: cf 86 09                 a2 = s1 << a1
  4043: d4 59 09                 a2 = a2 | s0
  4046: 7b b9                    u64 [a4] = a2
  4048: 95 bb 08                 a4 = a4 + 0x8
  4051: 95 cc 08                 a5 = a5 + 0x8
  4054: 64 65                    s0 = s1
  4056: ac ab eb                 jump @273 if a4 <u a3
      :                          @274
  4059: 28 1c                    jump @280
      :                          @275
  4061: 64 7a                    a3 = a0
  4063: 52 09 21                 jump @281 if a2 != 0
      :                          @276
  4066: 28 2f                    jump @283
      :                          @277
  4068: 58 04 13                 jump @280 if t2 <=s 0
      :                          @278
  4071: 64 38                    a1 = t1
  4073: 01                       fallthrough
      :                          @279
  4074: 82 89                    a2 = u64 [a1]
  4076: 7b b9                    u64 [a4] = a2
  4078: 95 bb 08                 a4 = a4 + 0x8
  4081: 95 88 08                 a1 = a1 + 0x8
  4084: ac ab f6                 jump @279 if a4 <u a3
      :                          @280
  4087: c8 43 08                 a1 = t1 + t2
  4090: 84 29 07                 a2 = t0 & 0x7
  4093: 51 09 14                 jump @283 if a2 == 0
      :                          @281
  4096: c8 a9 09                 a2 = a2 + a3
  4099: 01                       fallthrough
      :                          @282
  4100: 7c 8b                    a4 = u8 [a1]
  4102: 78 ab                    u8 [a3] = a4
  4104: 95 aa 01                 a3 = a3 + 0x1
  4107: 95 88 01                 a1 = a1 + 0x1
  4110: ac 9a f6                 jump @282 if a3 <u a2
      :                          @283
  4113: 82 10 18                 ra = u64 [sp + 0x18]
  4116: 82 15 10                 s0 = u64 [sp + 0x10]
  4119: 82 16 08                 s1 = u64 [sp + 0x8]
  4122: 95 11 20                 sp = sp + 0x20
  4125: 32 00                    ret
      :                          @284
  4127: 8d 7a                    i32 a3 = -a0
  4129: 84 aa 07                 a3 = a3 & 0x7
  4132: c8 a7 0b                 a4 = a0 + a3
  4135: 51 0a 0e                 jump @287 if a3 == 0
      :                          @285
  4138: 64 7c                    a5 = a0
  4140: 01                       fallthrough
      :                          @286
  4141: 78 c8                    u8 [a5] = a1
  4143: 95 cc 01                 a5 = a5 + 0x1
  4146: ac bc fb                 jump @286 if a5 <u a4
      :                          @287
  4149: c9 a9 03                 t1 = a2 - a3
  4152: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  4155: c8 cb 0a                 a3 = a4 + a5
  4158: 58 0c 1d                 jump @290 if a5 <=s 0
      :                          @288
  4161: 84 82 ff 00              t0 = a1 & 0xff
  4165: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  4175: ca 92 0c                 a5 = t0 * a2
  4178: 01                       fallthrough
      :                          @289
  4179: 7b bc                    u64 [a4] = a5
  4181: 95 bb 08                 a4 = a4 + 0x8
  4184: ac ab fb                 jump @289 if a4 <u a3
      :                          @290
  4187: 84 39 07                 a2 = t1 & 0x7
  4190: 52 09 05                 jump @292 if a2 != 0
      :                          @291
  4193: 28 0e                    jump @294
      :                          @292
  4195: c8 a9 09                 a2 = a2 + a3
  4198: 01                       fallthrough
      :                          @293
  4199: 78 a8                    u8 [a3] = a1
  4201: 95 aa 01                 a3 = a3 + 0x1
  4204: ac 9a fb                 jump @293 if a3 <u a2
      :                          @294
  4207: 32 00                    ret
      :                          @295 [@dyn 74]
  4209: 82 77                    a0 = u64 [a0]
  4211: 01                       fallthrough
      :                          @296
  4212: 28                       jump @296
      :                          @297 [@dyn 75]
  4213: 82 77                    a0 = u64 [a0]
  4215: 01                       fallthrough
      :                          @298
  4216: 95 11 a8                 sp = sp + 0xffffffffffffffa8
  4219: 7b 10 50                 u64 [sp + 0x50] = ra
  4222: 7b 15 48                 u64 [sp + 0x48] = s0
  4225: 7b 16 40                 u64 [sp + 0x40] = s1
  4228: 7b 18                    u64 [sp] = a1
  4230: 98 79 04                 a2 = a0 >> 0x4
  4233: 33 08 27                 a1 = 0x27
  4236: 53 29 71 02 81 00        jump @301 if a2 <u 625
      :                          @299
  4242: 33 08 27                 a1 = 0x27
  4245: 95 1a 3e                 a3 = sp + 0x3e
  4248: 3a 09 00 00 03           a2 = u64 [0x30000]
  4253: 7b 19 10                 u64 [sp + 0x10] = a2
  4256: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
  4262: 33 04 7b 14              t2 = 0x147b
  4266: 33 0b 0c 01 01           a4 = 0x1010c
  4271: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
  4277: 01                       fallthrough
      :                          @300
  4278: 64 72                    t0 = a0
  4280: 82 17 10                 a0 = u64 [sp + 0x10]
  4283: d6 72 07                 a0 = t0 mulhu a0
  4286: 98 77 0b                 a0 = a0 >> 0xb
  4289: 82 19 08                 a2 = u64 [sp + 0x8]
  4292: c0 97 0c                 i32 a5 = a0 * a2
  4295: c8 2c 06                 s1 = a5 + t0
  4298: 97 6c 30                 a5 = s1 << 0x30
  4301: 98 cc 32                 a5 = a5 >> 0x32
  4304: ca 4c 0c                 a5 = a5 * t2
  4307: 98 c3 11                 t1 = a5 >> 0x11
  4310: 98 cc 10                 a5 = a5 >> 0x10
  4313: 84 cc fe 07              a5 = a5 & 0x7fe
  4317: 96 39 9c                 a2 = t1 * 0xffffffffffffff9c
  4320: c8 69 09                 a2 = a2 + s1
  4323: 97 99 31                 a2 = a2 << 0x31
  4326: 98 99 30                 a2 = a2 >> 0x30
  4329: c8 bc 0c                 a5 = a5 + a4
  4332: 7c c6                    s1 = u8 [a5]
  4334: 7c cc 01                 a5 = u8 [a5 + 0x1]
  4337: c8 b9 09                 a2 = a2 + a4
  4340: 7c 95 01                 s0 = u8 [a2 + 0x1]
  4343: 7c 99                    a2 = u8 [a2]
  4345: 78 ac ff                 u8 [a3 + 0xffffffffffffffff] = a5
  4348: 78 a6 fe                 u8 [a3 + 0xfffffffffffffffe] = s1
  4351: 78 a5 01                 u8 [a3 + 0x1] = s0
  4354: 78 a9                    u8 [a3] = a2
  4356: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
  4359: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
  4362: ac 20 ac                 jump @300 if ra <u t0
      :                          @301
  4365: 54 17 63 3b              jump @303 if a0 <=u 99
      :                          @302
  4369: 97 79 30                 a2 = a0 << 0x30
  4372: 98 99 32                 a2 = a2 >> 0x32
  4375: 96 99 7b 14              a2 = a2 * 0x147b
  4379: 98 99 11                 a2 = a2 >> 0x11
  4382: 96 9a 9c                 a3 = a2 * 0xffffffffffffff9c
  4385: c8 a7 07                 a0 = a0 + a3
  4388: 97 77 31                 a0 = a0 << 0x31
  4391: 98 77 30                 a0 = a0 >> 0x30
  4394: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  4397: 33 0a 0c 01 01           a3 = 0x1010c
  4402: c8 a7 07                 a0 = a0 + a3
  4405: 7c 7a 01                 a3 = u8 [a0 + 0x1]
  4408: 7c 77                    a0 = u8 [a0]
  4410: 95 1b 19                 a4 = sp + 0x19
  4413: c8 8b 0b                 a4 = a4 + a1
  4416: 78 ba 01                 u8 [a4 + 0x1] = a3
  4419: 78 b7                    u8 [a4] = a0
  4421: 64 97                    a0 = a2
  4423: 01                       fallthrough
      :                          @303
  4424: 55 17 0a 14              jump @305 if a0 >=u 10
      :                          @304
  4428: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  4431: 95 19 19                 a2 = sp + 0x19
  4434: c8 89 09                 a2 = a2 + a1
  4437: 83 77 30                 i32 a0 = a0 + 0x30
  4440: 78 97                    u8 [a2] = a0
  4442: 28 21                    jump @306
      :                          @305
  4444: 97 77 01                 a0 = a0 << 0x1
  4447: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  4450: 33 09 0c 01 01           a2 = 0x1010c
  4455: c8 97 07                 a0 = a0 + a2
  4458: 7c 79 01                 a2 = u8 [a0 + 0x1]
  4461: 7c 77                    a0 = u8 [a0]
  4463: 95 1a 19                 a3 = sp + 0x19
  4466: c8 8a 0a                 a3 = a3 + a1
  4469: 78 a9 01                 u8 [a3 + 0x1] = a2
  4472: 78 a7                    u8 [a3] = a0
  4474: 01                       fallthrough
      :                          @306
  4475: 95 1a 19                 a3 = sp + 0x19
  4478: c8 8a 0a                 a3 = a3 + a1
  4481: 9a 8b 27                 a4 = 0x27 - a1
  4484: 33 08 c8 00 01           a1 = 0x100c8
  4489: 82 17                    a0 = u64 [sp]
  4491: 33 09                    a2 = 0
  4493: 50 20 98 00 13           ra = 152, jump @308
      :                          @307 [@dyn 76]
  4498: 82 10 50                 ra = u64 [sp + 0x50]
  4501: 82 15 48                 s0 = u64 [sp + 0x48]
  4504: 82 16 40                 s1 = u64 [sp + 0x40]
  4507: 95 11 58                 sp = sp + 0x58
  4510: 32 00                    ret
      :                          @308
  4512: 95 11 98                 sp = sp + 0xffffffffffffff98
  4515: 7b 10 60                 u64 [sp + 0x60] = ra
  4518: 7b 15 58                 u64 [sp + 0x58] = s0
  4521: 7b 16 50                 u64 [sp + 0x50] = s1
  4524: 80 73 34                 t1 = u32 [a0 + 0x34]
  4527: 7b 1a 20                 u64 [sp + 0x20] = a3
  4530: 64 9c                    a5 = a2
  4532: 84 36 01                 s1 = t1 & 0x1
  4535: 33 02 2b                 t0 = 0x2b
  4538: 33 09 00 00 11           a2 = 0x110000
  4543: 84 3a 04                 a3 = t1 & 0x4
  4546: 7b 1b 28                 u64 [sp + 0x28] = a4
  4549: c8 b6 04                 t2 = s1 + a4
  4552: 7b 1c 30                 u64 [sp + 0x30] = a5
  4555: 52 0a 10                 jump @311 if a3 != 0
      :                          @309
  4558: 49 11 38                 u64 [sp + 56] = 0
  4561: 82 78                    a1 = u64 [a0]
  4563: 94 69 2b                 a2 = 0x2b if s1 != 0
  4566: 52 08 35                 jump @315 if a1 != 0
      :                          @310
  4569: 28 56                    jump @320
      :                          @311
  4571: 7b 18 38                 u64 [sp + 0x38] = a1
  4574: 33 09                    a2 = 0
  4576: 51 0c 1b                 jump @314 if a5 == 0
      :                          @312
  4579: 82 1b 38                 a4 = u64 [sp + 0x38]
  4582: 01                       fallthrough
      :                          @313
  4583: 7d b5                    s0 = i8 [a4]
  4585: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
  4588: 85 5a 01                 a3 = s0 ^ 0x1
  4591: c8 a9 09                 a2 = a2 + a3
  4594: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  4597: 95 bb 01                 a4 = a4 + 0x1
  4600: 52 0c ef                 jump @313 if a5 != 0
      :                          @314
  4603: c8 94 04                 t2 = t2 + a2
  4606: 33 09 00 00 11           a2 = 0x110000
  4611: 82 78                    a1 = u64 [a0]
  4613: db 62 09                 a2 = t0 if s1 != 0
  4616: 51 08 27                 jump @320 if a1 == 0
      :                          @315
  4619: 82 7a 08                 a3 = u64 [a0 + 0x8]
  4622: ae a4 21                 jump @320 if t2 >=u a3
      :                          @316
  4625: 84 38 08                 a1 = t1 & 0x8
  4628: 52 08 51                 jump @323 if a1 != 0
      :                          @317
  4631: 7c 76 38                 s1 = u8 [a0 + 0x38]
  4634: c9 4a 0a                 a3 = a3 - t2
  4637: 7b 19 18                 u64 [sp + 0x18] = a2
  4640: 5a 16 01 a0 00           jump @330 if s1 >s 1
      :                          @318
  4645: 52 06 ad 00              jump @332 if s1 != 0
      :                          @319
  4649: 7b 1a 10                 u64 [sp + 0x10] = a3
  4652: 28 ac 00                 jump @333
      :                          @320
  4655: 82 75 20                 s0 = u64 [a0 + 0x20]
  4658: 82 76 28                 s1 = u64 [a0 + 0x28]
  4661: 64 57                    a0 = s0
  4663: 64 68                    a1 = s1
  4665: 82 1a 38                 a3 = u64 [sp + 0x38]
  4668: 82 1b 30                 a4 = u64 [sp + 0x30]
  4671: 50 20 9a 00 75 01        ra = 154, jump @353
      :                          @321 [@dyn 77]
  4677: 33 08 01                 a1 = 0x1
  4680: 52 07 be 00              jump @338 if a0 != 0
      :                          @322
  4684: 82 6c 18                 a5 = u64 [s1 + 0x18]
  4687: 64 57                    a0 = s0
  4689: 82 18 20                 a1 = u64 [sp + 0x20]
  4692: 82 19 28                 a2 = u64 [sp + 0x28]
  4695: 82 10 60                 ra = u64 [sp + 0x60]
  4698: 82 15 58                 s0 = u64 [sp + 0x58]
  4701: 82 16 50                 s1 = u64 [sp + 0x50]
  4704: 95 11 68                 sp = sp + 0x68
  4707: 32 0c                    jump [a5]
      :                          @323
  4709: 7b 1a 40                 u64 [sp + 0x40] = a3
  4712: 64 45                    s0 = t2
  4714: 81 78 30                 a1 = i32 [a0 + 0x30]
  4717: 7b 18 10                 u64 [sp + 0x10] = a1
  4720: 7c 7a 38                 a3 = u8 [a0 + 0x38]
  4723: 7b 1a 08                 u64 [sp + 0x8] = a3
  4726: 82 7a 20                 a3 = u64 [a0 + 0x20]
  4729: 82 78 28                 a1 = u64 [a0 + 0x28]
  4732: 48 17 30 30              u32 [a0 + 48] = 0x30
  4736: 7b 17                    u64 [sp] = a0
  4738: 46 17 38 01              u8 [a0 + 56] = 0x1
  4742: 7b 1a 48                 u64 [sp + 0x48] = a3
  4745: 64 a7                    a0 = a3
  4747: 64 86                    s1 = a1
  4749: 82 1a 38                 a3 = u64 [sp + 0x38]
  4752: 82 1b 30                 a4 = u64 [sp + 0x30]
  4755: 50 20 9c 00 21 01        ra = 156, jump @353
      :                          @324 [@dyn 78]
  4761: 52 07 69                 jump @337 if a0 != 0
      :                          @325
  4764: 82 17 40                 a0 = u64 [sp + 0x40]
  4767: c9 57 05                 s0 = a0 - s0
  4770: 95 55 01                 s0 = s0 + 0x1
  4773: 01                       fallthrough
      :                          @326
  4774: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  4777: 51 05 cb 00              jump @348 if s0 == 0
      :                          @327
  4781: 82 69 20                 a2 = u64 [s1 + 0x20]
  4784: 33 08 30                 a1 = 0x30
  4787: 82 17 48                 a0 = u64 [sp + 0x48]
  4790: b4 90 02 9e 00           ra = 158, jump [a2]
      :                          @328 [@dyn 79]
  4795: 51 07 eb                 jump @326 if a0 == 0
      :                          @329
  4798: 28 44                    jump @337
      :                          @330
  4800: 52 16 02 12              jump @332 if s1 != 2
      :                          @331
  4804: 98 a6 01                 s1 = a3 >> 0x1
  4807: 95 a8 01                 a1 = a3 + 0x1
  4810: 98 88 01                 a1 = a1 >> 0x1
  4813: 7b 18 10                 u64 [sp + 0x10] = a1
  4816: 28 08                    jump @333
      :                          @332
  4818: 64 a6                    s1 = a3
  4820: 49 11 10                 u64 [sp + 16] = 0
  4823: 01                       fallthrough
      :                          @333
  4824: 82 78 20                 a1 = u64 [a0 + 0x20]
  4827: 7b 18 48                 u64 [sp + 0x48] = a1
  4830: 82 75 28                 s0 = u64 [a0 + 0x28]
  4833: 81 77 30                 a0 = i32 [a0 + 0x30]
  4836: 7b 17 40                 u64 [sp + 0x40] = a0
  4839: 95 66 01                 s1 = s1 + 0x1
  4842: 01                       fallthrough
      :                          @334
  4843: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  4846: 51 06 28                 jump @339 if s1 == 0
      :                          @335
  4849: 82 59 20                 a2 = u64 [s0 + 0x20]
  4852: 82 17 48                 a0 = u64 [sp + 0x48]
  4855: 82 18 40                 a1 = u64 [sp + 0x40]
  4858: b4 90 02 a0 00           ra = 160, jump [a2]
      :                          @336 [@dyn 80]
  4863: 51 07 ec                 jump @334 if a0 == 0
      :                          @337
  4866: 33 08 01                 a1 = 0x1
  4869: 01                       fallthrough
      :                          @338
  4870: 64 87                    a0 = a1
  4872: 82 10 60                 ra = u64 [sp + 0x60]
  4875: 82 15 58                 s0 = u64 [sp + 0x58]
  4878: 82 16 50                 s1 = u64 [sp + 0x50]
  4881: 95 11 68                 sp = sp + 0x68
  4884: 32 00                    ret
      :                          @339
  4886: 82 16 48                 s1 = u64 [sp + 0x48]
  4889: 64 67                    a0 = s1
  4891: 64 58                    a1 = s0
  4893: 82 19 18                 a2 = u64 [sp + 0x18]
  4896: 82 1a 38                 a3 = u64 [sp + 0x38]
  4899: 82 1b 30                 a4 = u64 [sp + 0x30]
  4902: 50 20 a2 00 8e 00        ra = 162, jump @353
      :                          @340 [@dyn 81]
  4908: 33 08 01                 a1 = 0x1
  4911: 52 07 d7                 jump @338 if a0 != 0
      :                          @341
  4914: 82 5a 18                 a3 = u64 [s0 + 0x18]
  4917: 64 67                    a0 = s1
  4919: 82 18 20                 a1 = u64 [sp + 0x20]
  4922: 82 19 28                 a2 = u64 [sp + 0x28]
  4925: b4 a0 02 a4 00           ra = 164, jump [a3]
      :                          @342 [@dyn 82]
  4930: 33 08 01                 a1 = 0x1
  4933: 52 07 c1                 jump @338 if a0 != 0
      :                          @343
  4936: 82 17 10                 a0 = u64 [sp + 0x10]
  4939: 9a 77                    a0 = -a0
  4941: 7b 17 38                 u64 [sp + 0x38] = a0
  4944: 33 06 ff                 s1 = 0xffffffffffffffff
  4947: 01                       fallthrough
      :                          @344
  4948: 82 17 38                 a0 = u64 [sp + 0x38]
  4951: c8 67 07                 a0 = a0 + s1
  4954: 51 17 ff 45              jump @351 if a0 == 4294967295
      :                          @345
  4958: 82 59 20                 a2 = u64 [s0 + 0x20]
  4961: 82 17 48                 a0 = u64 [sp + 0x48]
  4964: 82 18 40                 a1 = u64 [sp + 0x40]
  4967: b4 90 02 a6 00           ra = 166, jump [a2]
      :                          @346 [@dyn 83]
  4972: 95 66 01                 s1 = s1 + 0x1
  4975: 51 07 e5                 jump @344 if a0 == 0
      :                          @347
  4978: 28 39                    jump @352
      :                          @348
  4980: 82 6a 18                 a3 = u64 [s1 + 0x18]
  4983: 82 17 48                 a0 = u64 [sp + 0x48]
  4986: 82 18 20                 a1 = u64 [sp + 0x20]
  4989: 82 19 28                 a2 = u64 [sp + 0x28]
  4992: b4 a0 02 a8 00           ra = 168, jump [a3]
      :                          @349 [@dyn 84]
  4997: 33 08 01                 a1 = 0x1
  5000: 52 07 7e ff              jump @338 if a0 != 0
      :                          @350
  5004: 33 08                    a1 = 0
  5006: 82 16                    s1 = u64 [sp]
  5008: 82 17 10                 a0 = u64 [sp + 0x10]
  5011: 7a 67 30                 u32 [s1 + 0x30] = a0
  5014: 82 17 08                 a0 = u64 [sp + 0x8]
  5017: 78 67 38                 u8 [s1 + 0x38] = a0
  5020: 28 6a ff                 jump @338
      :                          @351
  5023: 82 16 10                 s1 = u64 [sp + 0x10]
  5026: 82 17 10                 a0 = u64 [sp + 0x10]
  5029: d8 76 08                 a1 = s1 <u a0
  5032: 28 5e ff                 jump @338
      :                          @352
  5035: 82 17 10                 a0 = u64 [sp + 0x10]
  5038: d8 76 08                 a1 = s1 <u a0
  5041: 28 55 ff                 jump @338
      :                          @353
  5044: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  5047: 7b 10 20                 u64 [sp + 0x20] = ra
  5050: 7b 15 18                 u64 [sp + 0x18] = s0
  5053: 7b 16 10                 u64 [sp + 0x10] = s1
  5056: 83 9c                    i32 a5 = a2 + 0
  5058: 33 02 00 00 11           t0 = 0x110000
  5063: 64 a6                    s1 = a3
  5065: 64 85                    s0 = a1
  5067: 64 7a                    a3 = a0
  5069: aa 2c 21                 jump @356 if a5 == t0
      :                          @354
  5072: 82 5c 20                 a5 = u64 [s0 + 0x20]
  5075: 64 a7                    a0 = a3
  5077: 64 98                    a1 = a2
  5079: 7b 1b 08                 u64 [sp + 0x8] = a4
  5082: 7b 1a                    u64 [sp] = a3
  5084: b4 c0 02 aa 00           ra = 170, jump [a5]
      :                          @355 [@dyn 85]
  5089: 82 1a                    a3 = u64 [sp]
  5091: 82 1b 08                 a4 = u64 [sp + 0x8]
  5094: 64 78                    a1 = a0
  5096: 33 07 01                 a0 = 0x1
  5099: 52 08 20                 jump @359 if a1 != 0
      :                          @356
  5102: 51 06 1a                 jump @358 if s1 == 0
      :                          @357
  5105: 82 5c 18                 a5 = u64 [s0 + 0x18]
  5108: 64 a7                    a0 = a3
  5110: 64 68                    a1 = s1
  5112: 64 b9                    a2 = a4
  5114: 82 10 20                 ra = u64 [sp + 0x20]
  5117: 82 15 18                 s0 = u64 [sp + 0x18]
  5120: 82 16 10                 s1 = u64 [sp + 0x10]
  5123: 95 11 28                 sp = sp + 0x28
  5126: 32 0c                    jump [a5]
      :                          @358
  5128: 33 07                    a0 = 0
  5130: 01                       fallthrough
      :                          @359
  5131: 82 10 20                 ra = u64 [sp + 0x20]
  5134: 82 15 18                 s0 = u64 [sp + 0x18]
  5137: 82 16 10                 s1 = u64 [sp + 0x10]
  5140: 95 11 28                 sp = sp + 0x28
  5143: 32 00                    ret
      :                          @360
  5145: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  5149: 7b 10 80 00              u64 [sp + 0x80] = ra
  5153: 7b 15 78                 u64 [sp + 0x78] = s0
  5156: 7b 16 70                 u64 [sp + 0x70] = s1
  5159: 49 11 60 20              u64 [sp + 96] = 0x20
  5163: 33 0a 03                 a3 = 0x3
  5166: 78 1a 68                 u8 [sp + 0x68] = a3
  5169: 82 96 20                 s1 = u64 [a2 + 0x20]
  5172: 49 11 30                 u64 [sp + 48] = 0
  5175: 49 11 40                 u64 [sp + 64] = 0
  5178: 7b 17 50                 u64 [sp + 0x50] = a0
  5181: 7b 18 58                 u64 [sp + 0x58] = a1
  5184: 51 06 0a 01              jump @382 if s1 == 0
      :                          @361
  5188: 82 97 28                 a0 = u64 [a2 + 0x28]
  5191: 51 07 79 01              jump @392 if a0 == 0
      :                          @362
  5195: 49 11 28                 u64 [sp + 40] = 0
  5198: 82 95                    s0 = u64 [a2]
  5200: 7b 19 08                 u64 [sp + 0x8] = a2
  5203: 82 98 10                 a1 = u64 [a2 + 0x10]
  5206: 7b 18 18                 u64 [sp + 0x18] = a1
  5209: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  5212: 97 88 03                 a1 = a1 << 0x3
  5215: 98 88 03                 a1 = a1 >> 0x3
  5218: 95 88 01                 a1 = a1 + 0x1
  5221: 7b 18                    u64 [sp] = a1
  5223: 95 55 08                 s0 = s0 + 0x8
  5226: 96 78 38                 a1 = a0 * 0x38
  5229: 95 66 18                 s1 = s1 + 0x18
  5232: 33 07 94 00              a0 = 0x94
  5236: 7b 17 10                 u64 [sp + 0x10] = a0
  5239: 01                       fallthrough
      :                          @363
  5240: 7b 18 20                 u64 [sp + 0x20] = a1
  5243: 82 59                    a2 = u64 [s0]
  5245: 51 09 18                 jump @366 if a2 == 0
      :                          @364
  5248: 82 1a 58                 a3 = u64 [sp + 0x58]
  5251: 82 17 50                 a0 = u64 [sp + 0x50]
  5254: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  5257: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5260: b4 a0 02 ac 00           ra = 172, jump [a3]
      :                          @365 [@dyn 86]
  5265: 52 07 55 01              jump @395 if a0 != 0
      :                          @366
  5269: 81 67 10                 a0 = i32 [s1 + 0x10]
  5272: 7a 17 60                 u32 [sp + 0x60] = a0
  5275: 7c 67 18                 a0 = u8 [s1 + 0x18]
  5278: 78 17 68                 u8 [sp + 0x68] = a0
  5281: 81 67 14                 a0 = i32 [s1 + 0x14]
  5284: 7a 17 64                 u32 [sp + 0x64] = a0
  5287: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  5290: 82 67                    a0 = u64 [s1]
  5292: 51 08 26                 jump @371 if a1 == 0
      :                          @367
  5295: 52 18 01 16              jump @369 if a1 != 1
      :                          @368
  5299: 97 77 04                 a0 = a0 << 0x4
  5302: 82 18 18                 a1 = u64 [sp + 0x18]
  5305: c8 87 07                 a0 = a0 + a1
  5308: 82 78 08                 a1 = u64 [a0 + 0x8]
  5311: 82 19 10                 a2 = u64 [sp + 0x10]
  5314: aa 98 07                 jump @370 if a1 == a2
      :                          @369
  5317: 33 08                    a1 = 0
  5319: 28 0f                    jump @372
      :                          @370
  5321: 82 77                    a0 = u64 [a0]
  5323: 82 77                    a0 = u64 [a0]
  5325: 33 08 01                 a1 = 0x1
  5328: 28 06                    jump @372
      :                          @371
  5330: 33 08 01                 a1 = 0x1
  5333: 01                       fallthrough
      :                          @372
  5334: 7b 18 30                 u64 [sp + 0x30] = a1
  5337: 7b 17 38                 u64 [sp + 0x38] = a0
  5340: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  5343: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  5346: 51 08 26                 jump @377 if a1 == 0
      :                          @373
  5349: 52 18 01 16              jump @375 if a1 != 1
      :                          @374
  5353: 97 77 04                 a0 = a0 << 0x4
  5356: 82 18 18                 a1 = u64 [sp + 0x18]
  5359: c8 87 07                 a0 = a0 + a1
  5362: 82 78 08                 a1 = u64 [a0 + 0x8]
  5365: 82 19 10                 a2 = u64 [sp + 0x10]
  5368: aa 98 07                 jump @376 if a1 == a2
      :                          @375
  5371: 33 08                    a1 = 0
  5373: 28 0f                    jump @378
      :                          @376
  5375: 82 77                    a0 = u64 [a0]
  5377: 82 77                    a0 = u64 [a0]
  5379: 33 08 01                 a1 = 0x1
  5382: 28 06                    jump @378
      :                          @377
  5384: 33 08 01                 a1 = 0x1
  5387: 01                       fallthrough
      :                          @378
  5388: 7b 18 40                 u64 [sp + 0x40] = a1
  5391: 7b 17 48                 u64 [sp + 0x48] = a0
  5394: 82 67 08                 a0 = u64 [s1 + 0x8]
  5397: 97 77 04                 a0 = a0 << 0x4
  5400: 82 18 18                 a1 = u64 [sp + 0x18]
  5403: c8 78 08                 a1 = a1 + a0
  5406: 82 87                    a0 = u64 [a1]
  5408: 82 89 08                 a2 = u64 [a1 + 0x8]
  5411: 95 18 30                 a1 = sp + 0x30
  5414: b4 90 02 ae 00           ra = 174, jump [a2]
      :                          @379 [@dyn 87]
  5419: 52 07 bb 00              jump @395 if a0 != 0
      :                          @380
  5423: 95 55 10                 s0 = s0 + 0x10
  5426: 82 18 20                 a1 = u64 [sp + 0x20]
  5429: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  5432: 95 66 38                 s1 = s1 + 0x38
  5435: 82 17 28                 a0 = u64 [sp + 0x28]
  5438: 95 77 01                 a0 = a0 + 0x1
  5441: 7b 17 28                 u64 [sp + 0x28] = a0
  5444: 52 08 34 ff              jump @363 if a1 != 0
      :                          @381
  5448: 28 6b                    jump @390
      :                          @382
  5450: 82 97 18                 a0 = u64 [a2 + 0x18]
  5453: 51 07 73                 jump @392 if a0 == 0
      :                          @383
  5456: 82 95 10                 s0 = u64 [a2 + 0x10]
  5459: 33 0a                    a3 = 0
  5461: 97 78 04                 a1 = a0 << 0x4
  5464: c8 58 08                 a1 = a1 + s0
  5467: 7b 18 20                 u64 [sp + 0x20] = a1
  5470: 7b 19 08                 u64 [sp + 0x8] = a2
  5473: 82 96                    s1 = u64 [a2]
  5475: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  5478: 97 77 04                 a0 = a0 << 0x4
  5481: 98 77 04                 a0 = a0 >> 0x4
  5484: 95 77 01                 a0 = a0 + 0x1
  5487: 7b 17                    u64 [sp] = a0
  5489: 95 66 08                 s1 = s1 + 0x8
  5492: 01                       fallthrough
      :                          @384
  5493: 7b 1a 28                 u64 [sp + 0x28] = a3
  5496: 82 69                    a2 = u64 [s1]
  5498: 51 09 17                 jump @387 if a2 == 0
      :                          @385
  5501: 82 1a 58                 a3 = u64 [sp + 0x58]
  5504: 82 17 50                 a0 = u64 [sp + 0x50]
  5507: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  5510: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5513: b4 a0 02 b0 00           ra = 176, jump [a3]
      :                          @386 [@dyn 88]
  5518: 52 07 58                 jump @395 if a0 != 0
      :                          @387
  5521: 82 57                    a0 = u64 [s0]
  5523: 82 59 08                 a2 = u64 [s0 + 0x8]
  5526: 95 18 30                 a1 = sp + 0x30
  5529: b4 90 02 b2 00           ra = 178, jump [a2]
      :                          @388 [@dyn 89]
  5534: 52 07 48                 jump @395 if a0 != 0
      :                          @389
  5537: 95 66 10                 s1 = s1 + 0x10
  5540: 95 55 10                 s0 = s0 + 0x10
  5543: 82 1a 28                 a3 = u64 [sp + 0x28]
  5546: 95 aa 01                 a3 = a3 + 0x1
  5549: 82 17 20                 a0 = u64 [sp + 0x20]
  5552: ab 75 c5                 jump @384 if s0 != a0
      :                          @390
  5555: 82 19 08                 a2 = u64 [sp + 0x8]
  5558: 82 1a                    a3 = u64 [sp]
  5560: 82 97 08                 a0 = u64 [a2 + 0x8]
  5563: ac 7a 0d                 jump @393 if a3 <u a0
      :                          @391
  5566: 28 2d                    jump @396
      :                          @392
  5568: 33 0a                    a3 = 0
  5570: 82 97 08                 a0 = u64 [a2 + 0x8]
  5573: 54 07 26                 jump @396 if a0 <=u 0
      :                          @393
  5576: 82 97                    a0 = u64 [a2]
  5578: 97 a8 04                 a1 = a3 << 0x4
  5581: c8 87 09                 a2 = a0 + a1
  5584: 82 1a 58                 a3 = u64 [sp + 0x58]
  5587: 82 17 50                 a0 = u64 [sp + 0x50]
  5590: 82 98                    a1 = u64 [a2]
  5592: 82 99 08                 a2 = u64 [a2 + 0x8]
  5595: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5598: b4 a0 02 b4 00           ra = 180, jump [a3]
      :                          @394 [@dyn 90]
  5603: 51 07 08                 jump @396 if a0 == 0
      :                          @395
  5606: 33 07 01                 a0 = 0x1
  5609: 28 05                    jump @397
      :                          @396
  5611: 33 07                    a0 = 0
  5613: 01                       fallthrough
      :                          @397
  5614: 82 10 80 00              ra = u64 [sp + 0x80]
  5618: 82 15 78                 s0 = u64 [sp + 0x78]
  5621: 82 16 70                 s1 = u64 [sp + 0x70]
  5624: 95 11 88 00              sp = sp + 0x88
  5628: 32 00                    ret
      :                          @398 [@dyn 91]
  5630: 32 00                    ret
      :                          @399 [@dyn 92]
  5632: 95 11 80                 sp = sp + 0xffffffffffffff80
  5635: 7b 10 78                 u64 [sp + 0x78] = ra
  5638: 7b 15 70                 u64 [sp + 0x70] = s0
  5641: 7b 16 68                 u64 [sp + 0x68] = s1
  5644: 64 92                    t0 = a2
  5646: 33 00                    ra = 0
  5648: 33 0b                    a4 = 0
  5650: 33 05                    s0 = 0
  5652: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
  5662: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
  5668: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
  5678: 82 79 10                 a2 = u64 [a0 + 0x10]
  5681: 7b 19 48                 u64 [sp + 0x48] = a2
  5684: 82 79                    a2 = u64 [a0]
  5686: 7b 19 38                 u64 [sp + 0x38] = a2
  5689: 82 77 08                 a0 = u64 [a0 + 0x8]
  5692: 7b 17 30                 u64 [sp + 0x30] = a0
  5695: 33 07 00 01 01           a0 = 0x10100
  5700: 7b 17 08                 u64 [sp + 0x8] = a0
  5703: 3a 07 08 00 03           a0 = u64 [0x30008]
  5708: 7b 17 60                 u64 [sp + 0x60] = a0
  5711: 7b 18 58                 u64 [sp + 0x58] = a1
  5714: 95 88 08                 a1 = a1 + 0x8
  5717: 7b 18                    u64 [sp] = a1
  5719: 33 0c 0a                 a5 = 0xa
  5722: 7b 12 20                 u64 [sp + 0x20] = t0
  5725: 7b 13 18                 u64 [sp + 0x18] = t1
  5728: 7b 14 10                 u64 [sp + 0x10] = t2
  5731: 28 3b                    jump @403
      :                          @400
  5733: 64 06                    s1 = ra
  5735: c8 89 07                 a0 = a2 + a1
  5738: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
  5741: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  5744: 88 77 01                 a0 = a0 <u 0x1
  5747: 01                       fallthrough
      :                          @401
  5748: 82 1a 48                 a3 = u64 [sp + 0x48]
  5751: 78 a7                    u8 [a3] = a0
  5753: 82 17 30                 a0 = u64 [sp + 0x30]
  5756: 82 7a 18                 a3 = u64 [a0 + 0x18]
  5759: 82 17 38                 a0 = u64 [sp + 0x38]
  5762: b4 a0 02 ba 00           ra = 186, jump [a3]
      :                          @402 [@dyn 93]
  5767: 64 5b                    a4 = s0
  5769: 82 12 20                 t0 = u64 [sp + 0x20]
  5772: 82 13 18                 t1 = u64 [sp + 0x18]
  5775: 82 14 10                 t2 = u64 [sp + 0x10]
  5778: 64 60                    ra = s1
  5780: 33 0c 0a                 a5 = 0xa
  5783: 82 15 40                 s0 = u64 [sp + 0x40]
  5786: 52 07 64 01              jump @444 if a0 != 0
      :                          @403
  5790: 84 57 ff 00              a0 = s0 & 0xff
  5794: 52 07 58 01              jump @443 if a0 != 0
      :                          @404
  5798: 7b 1b 50                 u64 [sp + 0x50] = a4
  5801: ae 02 0a                 jump @407 if t0 >=u ra
      :                          @405
  5804: 28 ef 00                 jump @434
      :                          @406
  5807: ac 02 ec 00              jump @434 if t0 <u ra
      :                          @407
  5811: c9 02 08                 a1 = t0 - ra
  5814: 82 16 58                 s1 = u64 [sp + 0x58]
  5817: c8 06 06                 s1 = s1 + ra
  5820: 55 18 10 1d              jump @413 if a1 >=u 16
      :                          @408
  5824: aa 02 d8 00              jump @433 if t0 == ra
      :                          @409
  5828: 33 0a                    a3 = 0
  5830: 01                       fallthrough
      :                          @410
  5831: c8 a6 07                 a0 = s1 + a3
  5834: 7c 77                    a0 = u8 [a0]
  5836: aa c7 a5 00              jump @428 if a0 == a5
      :                          @411
  5840: 95 aa 01                 a3 = a3 + 0x1
  5843: ab a8 f4                 jump @410 if a1 != a3
      :                          @412
  5846: 28 c2 00                 jump @433
      :                          @413
  5849: 95 69 07                 a2 = s1 + 0x7
  5852: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
  5855: c9 6a 07                 a0 = a3 - s1
  5858: d3 6a 0a                 a3 = a3 ^ s1
  5861: 88 aa 01                 a3 = a3 <u 0x1
  5864: 88 7b 01                 a4 = a0 <u 0x1
  5867: d4 ba 0a                 a3 = a3 | a4
  5870: 51 0a 45                 jump @419 if a3 == 0
      :                          @414
  5873: 33 07                    a0 = 0
  5875: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  5878: 82 1b                    a4 = u64 [sp]
  5880: c8 0b 0b                 a4 = a4 + ra
  5883: 28 08                    jump @416
      :                          @415
  5885: 82 1b                    a4 = u64 [sp]
  5887: c8 0b 0b                 a4 = a4 + ra
  5890: 01                       fallthrough
      :                          @416
  5891: c8 76 0c                 a5 = s1 + a0
  5894: 82 cc                    a5 = u64 [a5]
  5896: c8 7b 09                 a2 = a4 + a0
  5899: 82 99                    a2 = u64 [a2]
  5901: d3 4c 05                 s0 = a5 ^ t2
  5904: c8 35 05                 s0 = s0 + t1
  5907: e0 c5 0c                 a5 = s0 & ~a5
  5910: d3 49 05                 s0 = a2 ^ t2
  5913: c8 35 05                 s0 = s0 + t1
  5916: e0 95 09                 a2 = s0 & ~a2
  5919: d4 c9 09                 a2 = a2 | a5
  5922: 82 1c 60                 a5 = u64 [sp + 0x60]
  5925: d2 c9 09                 a2 = a2 & a5
  5928: 52 09 1f                 jump @422 if a2 != 0
      :                          @417
  5931: 95 77 10                 a0 = a0 + 0x10
  5934: ae 7a d5                 jump @416 if a3 >=u a0
      :                          @418
  5937: 28 16                    jump @422
      :                          @419
  5939: c8 a6 0b                 a4 = s1 + a3
  5942: 7c bb                    a4 = u8 [a4]
  5944: aa cb 51                 jump @431 if a4 == a5
      :                          @420
  5947: 95 aa 01                 a3 = a3 + 0x1
  5950: ab a7 f5                 jump @419 if a0 != a3
      :                          @421
  5953: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  5956: ae 7a b9                 jump @415 if a3 >=u a0
      :                          @422
  5959: aa 87 9b 00              jump @440 if a0 == a1
      :                          @423
  5963: 33 0a                    a3 = 0
  5965: c8 76 06                 s1 = s1 + a0
  5968: c9 72 08                 a1 = t0 - a0
  5971: c9 08 08                 a1 = a1 - ra
  5974: 33 0c 0a                 a5 = 0xa
  5977: 82 1b 50                 a4 = u64 [sp + 0x50]
  5980: 01                       fallthrough
      :                          @424
  5981: c8 a6 09                 a2 = s1 + a3
  5984: 7c 99                    a2 = u8 [a2]
  5986: aa c9 0b                 jump @427 if a2 == a5
      :                          @425
  5989: 95 aa 01                 a3 = a3 + 0x1
  5992: ab a8 f5                 jump @424 if a1 != a3
      :                          @426
  5995: 28 2d                    jump @433
      :                          @427
  5997: c8 7a 0a                 a3 = a3 + a0
  6000: 01                       fallthrough
      :                          @428
  6001: c8 0a 0a                 a3 = a3 + ra
  6004: 95 a0 01                 ra = a3 + 0x1
  6007: ae 2a 38 ff              jump @406 if a3 >=u t0
      :                          @429
  6011: 82 17 58                 a0 = u64 [sp + 0x58]
  6014: c8 7a 0a                 a3 = a3 + a0
  6017: 7c a7                    a0 = u8 [a3]
  6019: ab c7 2c ff              jump @406 if a0 != a5
      :                          @430
  6023: 28 62                    jump @441
      :                          @431
  6025: 82 1b 50                 a4 = u64 [sp + 0x50]
  6028: c8 0a 0a                 a3 = a3 + ra
  6031: 95 a0 01                 ra = a3 + 0x1
  6034: ac 2a e9                 jump @429 if a3 <u t0
      :                          @432
  6037: 28 1a ff                 jump @406
      :                          @433
  6040: 64 20                    ra = t0
  6042: 01                       fallthrough
      :                          @434
  6043: 49 11 40 01              u64 [sp + 64] = 0x1
  6047: 64 b5                    s0 = a4
  6049: 64 26                    s1 = t0
  6051: aa 2b 57                 jump @443 if a4 == t0
      :                          @435
  6054: 82 17 48                 a0 = u64 [sp + 0x48]
  6057: 7c 77                    a0 = u8 [a0]
  6059: 51 07 23                 jump @438 if a0 == 0
      :                          @436
  6062: 82 17 30                 a0 = u64 [sp + 0x30]
  6065: 82 7a 18                 a3 = u64 [a0 + 0x18]
  6068: 33 09 04                 a2 = 0x4
  6071: 82 17 38                 a0 = u64 [sp + 0x38]
  6074: 82 18 08                 a1 = u64 [sp + 0x8]
  6077: 7b 10 28                 u64 [sp + 0x28] = ra
  6080: b4 a0 02 bc 00           ra = 188, jump [a3]
      :                          @437 [@dyn 94]
  6085: 82 1b 50                 a4 = u64 [sp + 0x50]
  6088: 82 10 28                 ra = u64 [sp + 0x28]
  6091: 52 07 33                 jump @444 if a0 != 0
      :                          @438
  6094: c9 b6 09                 a2 = s1 - a4
  6097: 82 18 58                 a1 = u64 [sp + 0x58]
  6100: c8 b8 08                 a1 = a1 + a4
  6103: ab b6 8e fe              jump @400 if s1 != a4
      :                          @439
  6107: 64 06                    s1 = ra
  6109: 33 07                    a0 = 0
  6111: 28 95 fe                 jump @401
      :                          @440
  6114: 64 20                    ra = t0
  6116: 82 1b 50                 a4 = u64 [sp + 0x50]
  6119: 28 b4                    jump @434
      :                          @441
  6121: 49 11 40                 u64 [sp + 64] = 0
  6124: 64 05                    s0 = ra
  6126: 64 06                    s1 = ra
  6128: 82 17 48                 a0 = u64 [sp + 0x48]
  6131: 7c 77                    a0 = u8 [a0]
  6133: 52 07 b9                 jump @436 if a0 != 0
      :                          @442
  6136: 28 d6                    jump @438
      :                          @443
  6138: 33 07                    a0 = 0
  6140: 28 06                    jump @445
      :                          @444
  6142: 33 07 01                 a0 = 0x1
  6145: 01                       fallthrough
      :                          @445
  6146: 82 10 78                 ra = u64 [sp + 0x78]
  6149: 82 15 70                 s0 = u64 [sp + 0x70]
  6152: 82 16 68                 s1 = u64 [sp + 0x68]
  6155: 95 11 80 00              sp = sp + 0x80
  6159: 32 00                    ret
      :                          @446 [@dyn 95]
  6161: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  6164: 7b 10 20                 u64 [sp + 0x20] = ra
  6167: 7b 15 18                 u64 [sp + 0x18] = s0
  6170: 7b 16 10                 u64 [sp + 0x10] = s1
  6173: 82 75 10                 s0 = u64 [a0 + 0x10]
  6176: 7c 59                    a2 = u8 [s0]
  6178: 82 7b                    a4 = u64 [a0]
  6180: 82 76 08                 s1 = u64 [a0 + 0x8]
  6183: 51 09 33                 jump @450 if a2 == 0
      :                          @447
  6186: 82 6a 18                 a3 = u64 [s1 + 0x18]
  6189: 7b 18 08                 u64 [sp + 0x8] = a1
  6192: 33 08 00 01 01           a1 = 0x10100
  6197: 33 09 04                 a2 = 0x4
  6200: 64 b7                    a0 = a4
  6202: 7b 1b                    u64 [sp] = a4
  6204: b4 a0 02 c0 00           ra = 192, jump [a3]
      :                          @448 [@dyn 96]
  6209: 82 18 08                 a1 = u64 [sp + 0x8]
  6212: 82 1b                    a4 = u64 [sp]
  6214: 51 07 14                 jump @450 if a0 == 0
      :                          @449
  6217: 33 07 01                 a0 = 0x1
  6220: 82 10 20                 ra = u64 [sp + 0x20]
  6223: 82 15 18                 s0 = u64 [sp + 0x18]
  6226: 82 16 10                 s1 = u64 [sp + 0x10]
  6229: 95 11 28                 sp = sp + 0x28
  6232: 32 00                    ret
      :                          @450
  6234: 83 87                    i32 a0 = a1 + 0
  6236: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  6239: 88 77 01                 a0 = a0 <u 0x1
  6242: 78 57                    u8 [s0] = a0
  6244: 82 6c 20                 a5 = u64 [s1 + 0x20]
  6247: 64 b7                    a0 = a4
  6249: 82 10 20                 ra = u64 [sp + 0x20]
  6252: 82 15 18                 s0 = u64 [sp + 0x18]
  6255: 82 16 10                 s1 = u64 [sp + 0x10]
  6258: 95 11 28                 sp = sp + 0x28
  6261: 32 0c                    jump [a5]
      :                          @451 [@dyn 97]
  6263: 64 8a                    a3 = a1
  6265: 33 08 d0 00 01           a1 = 0x100d0
  6270: 64 a9                    a2 = a3
  6272: 28 99 fb                 jump @360
      :                          @452 [@dyn 98]
  6275: 80 77                    a0 = u32 [a0]
  6277: 28 f3 f7                 jump @298
      :                          @453
  6280: 95 11 70 ff              sp = sp + 0xffffffffffffff70
  6284: 7b 10 88 00              u64 [sp + 0x88] = ra
  6288: 7b 15 80 00              u64 [sp + 0x80] = s0
  6292: 7b 16 78                 u64 [sp + 0x78] = s1
  6295: 64 75                    s0 = a0
  6297: 7c 77 08                 a0 = u8 [a0 + 0x8]
  6300: 64 8b                    a4 = a1
  6302: 33 08 01                 a1 = 0x1
  6305: 33 06 01                 s1 = 0x1
  6308: 51 07 1d                 jump @455 if a0 == 0
      :                          @454
  6311: 78 56 08                 u8 [s0 + 0x8] = s1
  6314: 46 15 09 01              u8 [s0 + 9] = 0x1
  6318: 64 57                    a0 = s0
  6320: 82 10 88 00              ra = u64 [sp + 0x88]
  6324: 82 15 80 00              s0 = u64 [sp + 0x80]
  6328: 82 16 78                 s1 = u64 [sp + 0x78]
  6331: 95 11 90 00              sp = sp + 0x90
  6335: 32 00                    ret
      :                          @455
  6337: 64 9a                    a3 = a2
  6339: 82 5c                    a5 = u64 [s0]
  6341: 80 c7 34                 a0 = u32 [a5 + 0x34]
  6344: 7c 58 09                 a1 = u8 [s0 + 0x9]
  6347: 84 79 04                 a2 = a0 & 0x4
  6350: 52 09 45                 jump @461 if a2 != 0
      :                          @456
  6353: 51 08 32                 jump @459 if a1 == 0
      :                          @457
  6356: 82 c8 28                 a1 = u64 [a5 + 0x28]
  6359: 82 c7 20                 a0 = u64 [a5 + 0x20]
  6362: 82 83 18                 t1 = u64 [a1 + 0x18]
  6365: 33 08 04 01 01           a1 = 0x10104
  6370: 33 09 02                 a2 = 0x2
  6373: 64 a6                    s1 = a3
  6375: 7b 1b 10                 u64 [sp + 0x10] = a4
  6378: 7b 1c 08                 u64 [sp + 0x8] = a5
  6381: b4 30 02 c6 00           ra = 198, jump [t1]
      :                          @458 [@dyn 99]
  6386: 82 1c 08                 a5 = u64 [sp + 0x8]
  6389: 82 1b 10                 a4 = u64 [sp + 0x10]
  6392: 64 6a                    a3 = s1
  6394: 33 08 01                 a1 = 0x1
  6397: 33 06 01                 s1 = 0x1
  6400: 52 07 a7                 jump @454 if a0 != 0
      :                          @459
  6403: 64 b7                    a0 = a4
  6405: 64 c8                    a1 = a5
  6407: b4 a0 02 c8 00           ra = 200, jump [a3]
      :                          @460 [@dyn 100]
  6412: 33 08 01                 a1 = 0x1
  6415: 64 76                    s1 = a0
  6417: 28 96                    jump @454
      :                          @461
  6419: 52 08 37                 jump @465 if a1 != 0
      :                          @462
  6422: 82 c8 28                 a1 = u64 [a5 + 0x28]
  6425: 82 c7 20                 a0 = u64 [a5 + 0x20]
  6428: 82 83 18                 t1 = u64 [a1 + 0x18]
  6431: 33 08 08 01 01           a1 = 0x10108
  6436: 33 09 01                 a2 = 0x1
  6439: 33 06 01                 s1 = 0x1
  6442: 7b 1a                    u64 [sp] = a3
  6444: 7b 1b 10                 u64 [sp + 0x10] = a4
  6447: 7b 1c 08                 u64 [sp + 0x8] = a5
  6450: b4 30 02 ca 00           ra = 202, jump [t1]
      :                          @463 [@dyn 101]
  6455: 82 1c 08                 a5 = u64 [sp + 0x8]
  6458: 82 1b 10                 a4 = u64 [sp + 0x10]
  6461: 82 1a                    a3 = u64 [sp]
  6463: 33 08 01                 a1 = 0x1
  6466: 52 07 65 ff              jump @454 if a0 != 0
      :                          @464
  6470: 81 c7 34                 a0 = i32 [a5 + 0x34]
  6473: 01                       fallthrough
      :                          @465
  6474: 33 06 01                 s1 = 0x1
  6477: 78 16 37                 u8 [sp + 0x37] = s1
  6480: 82 c8 20                 a1 = u64 [a5 + 0x20]
  6483: 82 c9 28                 a2 = u64 [a5 + 0x28]
  6486: 7b 18 18                 u64 [sp + 0x18] = a1
  6489: 7b 19 20                 u64 [sp + 0x20] = a2
  6492: 95 18 37                 a1 = sp + 0x37
  6495: 7b 18 28                 u64 [sp + 0x28] = a1
  6498: 81 c8 30                 a1 = i32 [a5 + 0x30]
  6501: 7c c9 38                 a2 = u8 [a5 + 0x38]
  6504: 82 c3                    t1 = u64 [a5]
  6506: 82 c4 08                 t2 = u64 [a5 + 0x8]
  6509: 82 c0 10                 ra = u64 [a5 + 0x10]
  6512: 82 c2 18                 t0 = u64 [a5 + 0x18]
  6515: 7a 17 6c                 u32 [sp + 0x6c] = a0
  6518: 7a 18 68                 u32 [sp + 0x68] = a1
  6521: 78 19 70                 u8 [sp + 0x70] = a2
  6524: 7b 13 38                 u64 [sp + 0x38] = t1
  6527: 7b 14 40                 u64 [sp + 0x40] = t2
  6530: 7b 10 48                 u64 [sp + 0x48] = ra
  6533: 7b 12 50                 u64 [sp + 0x50] = t0
  6536: 95 17 18                 a0 = sp + 0x18
  6539: 7b 17 58                 u64 [sp + 0x58] = a0
  6542: 33 07 d0 00 01           a0 = 0x100d0
  6547: 7b 17 60                 u64 [sp + 0x60] = a0
  6550: 95 18 38                 a1 = sp + 0x38
  6553: 64 b7                    a0 = a4
  6555: b4 a0 02 cc 00           ra = 204, jump [a3]
      :                          @466 [@dyn 102]
  6560: 52 07 21                 jump @469 if a0 != 0
      :                          @467
  6563: 82 18 60                 a1 = u64 [sp + 0x60]
  6566: 82 17 58                 a0 = u64 [sp + 0x58]
  6569: 82 8a 18                 a3 = u64 [a1 + 0x18]
  6572: 33 08 06 01 01           a1 = 0x10106
  6577: 33 09 02                 a2 = 0x2
  6580: b4 a0 02 ce 00           ra = 206, jump [a3]
      :                          @468 [@dyn 103]
  6585: 64 76                    s1 = a0
  6587: 33 08 01                 a1 = 0x1
  6590: 28 e9 fe                 jump @454
      :                          @469
  6593: 33 08 01                 a1 = 0x1
  6596: 28 e3 fe                 jump @454
      :                          @470
  6599: 51 08 9b 00              jump @491 if a1 == 0
      :                          @471
  6603: 64 79                    a2 = a0
  6605: 7c 77                    a0 = u8 [a0]
  6607: 51 07 91 00              jump @490 if a0 == 0
      :                          @472
  6611: 51 27 ff 00 90 00        jump @492 if a0 == 255
      :                          @473
  6617: 6c 7a                    a3 = sext.b a0
  6619: 57 0a 09                 jump @475 if a3 <s 0
      :                          @474
  6622: 33 0a                    a3 = 0
  6624: 33 08                    a1 = 0
  6626: 28 73                    jump @489
      :                          @475
  6628: 55 27 c0 00 0d           jump @477 if a0 >=u 192
      :                          @476
  6633: 33 0a 01                 a3 = 0x1
  6636: 33 0b 80                 a4 = 0xffffffffffffff80
  6639: 28 4a                    jump @486
      :                          @477
  6641: 55 27 e0 00 0e           jump @479 if a0 >=u 224
      :                          @478
  6646: 33 0a 02                 a3 = 0x2
  6649: 33 0b 40 ff              a4 = 0xffffffffffffff40
  6653: 28 3c                    jump @486
      :                          @479
  6655: 55 27 f0 00 0e           jump @481 if a0 >=u 240
      :                          @480
  6660: 33 0a 03                 a3 = 0x3
  6663: 33 0b 20 ff              a4 = 0xffffffffffffff20
  6667: 28 2e                    jump @486
      :                          @481
  6669: 55 27 f8 00 0e           jump @483 if a0 >=u 248
      :                          @482
  6674: 33 0a 04                 a3 = 0x4
  6677: 33 0b 10 ff              a4 = 0xffffffffffffff10
  6681: 28 20                    jump @486
      :                          @483
  6683: 55 27 fc 00 0e           jump @485 if a0 >=u 252
      :                          @484
  6688: 33 0a 05                 a3 = 0x5
  6691: 33 0b 08 ff              a4 = 0xffffffffffffff08
  6695: 28 12                    jump @486
      :                          @485
  6697: 88 7a fe 00              a3 = a0 <u 0xfe
  6701: 33 0b 04 ff              a4 = 0xffffffffffffff04
  6705: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  6709: 85 aa 07                 a3 = a3 ^ 0x7
  6712: 01                       fallthrough
      :                          @486
  6713: ae 8a 2b                 jump @493 if a3 >=u a1
      :                          @487
  6716: 33 08                    a1 = 0
  6718: c8 b7 07                 a0 = a0 + a4
  6721: 64 ab                    a4 = a3
  6723: 01                       fallthrough
      :                          @488
  6724: c8 b9 0c                 a5 = a2 + a4
  6727: 7c cc                    a5 = u8 [a5]
  6729: 97 88 08                 a1 = a1 << 0x8
  6732: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  6735: d4 c8 08                 a1 = a1 | a5
  6738: 52 0b f2                 jump @488 if a4 != 0
      :                          @489
  6741: 8a a9 03                 i32 a2 = a3 << 0x3
  6744: cf 97 07                 a0 = a0 << a2
  6747: c8 87 07                 a0 = a0 + a1
  6750: 32 00                    ret
      :                          @490
  6752: 32 00                    ret
      :                          @491
  6754: 00                       trap
      :                          @492
  6755: 00                       trap
      :                          @493
  6756: 00                       trap
