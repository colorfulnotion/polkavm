// RO data = 420/420 bytes
// RW data = 16/65584 bytes
// Stack size = 65536 bytes
// RO data = [99, 114, 101, 97, 116, 101, 83, 101, 114, 118, 105, 99, 101, 32, 111, 117, 116, 112, 117, 116, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 32, 32, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 35, 0, 0, 0, 0, 0, 0, 0, 35, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 83, 69, 82, 86, 73, 67, 69, 73, 68, 0, 0, 0, 0, 0, 0, 0, 72, 0, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 108, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 110, 0, 0, 0, 0, 0, 0, 0, 116, 0, 0, 0, 0, 0, 0, 0, 124, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 160, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 162, 0, 0, 0, 0, 0, 0, 0, 168, 0, 0, 0, 0, 0, 0, 0, 172, 0, 0, 0, 0, 0, 0, 0, 32, 32, 32, 32, 44, 32, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57]
// RW data = [75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 2112
// Code size = 6232 bytes

      :                          @0
     0: 28 5a 03 00 00           jump @51
      :                          @1
     5: 28 a8 04 00 00           jump @89
      :                          @2
    10: 28 a2 08                 jump @157
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 80 89 34                 a2 = u32 [a1 + 0x34]
    24: 82 77                    a0 = u64 [a0]
    26: 84 9a 10                 a3 = a2 & 0x10
    29: 52 0a 16                 jump @6 if a3 != 0
      :                          @4
    32: 84 99 20                 a2 = a2 & 0x20
    35: 52 09 41                 jump @9 if a2 != 0
      :                          @5
    38: 7c 77                    a0 = u8 [a0]
    40: 82 10 80 00              ra = u64 [sp + 0x80]
    44: 95 11 88 00              sp = sp + 0x88
    48: 28 41 0e                 jump @296
      :                          @6
    51: 7c 77                    a0 = u8 [a0]
    53: 33 0b 81 00              a4 = 0x81
    57: 95 19 7f                 a2 = sp + 0x7f
    60: 33 02 57                 t0 = 0x57
    63: 01                       fallthrough
      :                          @7
    64: 64 bc                    a5 = a4
    66: 84 7b 0f                 a4 = a0 & 0xf
    69: 97 77 38                 a0 = a0 << 0x38
    72: 98 77 3c                 a0 = a0 >> 0x3c
    75: 88 b3 0a                 t1 = a4 <u 0xa
    78: 33 0a 30                 a3 = 0x30
    81: da 32 0a                 a3 = t0 if t1 == 0
    84: be ba 0a                 i32 a3 = a3 + a4
    87: 78 9a                    u8 [a2] = a3
    89: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
    92: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
    95: 52 07 e1                 jump @7 if a0 != 0
      :                          @8
    98: 28 31                    jump @11
      :                          @9
   100: 7c 77                    a0 = u8 [a0]
   102: 33 0b 81 00              a4 = 0x81
   106: 95 19 7f                 a2 = sp + 0x7f
   109: 33 02 37                 t0 = 0x37
   112: 01                       fallthrough
      :                          @10
   113: 64 bc                    a5 = a4
   115: 84 7b 0f                 a4 = a0 & 0xf
   118: 97 77 38                 a0 = a0 << 0x38
   121: 98 77 3c                 a0 = a0 >> 0x3c
   124: 88 b3 0a                 t1 = a4 <u 0xa
   127: 33 0a 30                 a3 = 0x30
   130: da 32 0a                 a3 = t0 if t1 == 0
   133: be ba 0a                 i32 a3 = a3 + a4
   136: 78 9a                    u8 [a2] = a3
   138: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
   141: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
   144: 52 07 e1                 jump @10 if a0 != 0
      :                          @11
   147: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   150: 56 27 80 00 27           jump @14 if a0 >u 128
      :                          @12
   155: 9a bb 81 00              a4 = 0x81 - a4
   159: 64 1a                    a3 = sp
   161: c8 7a 0a                 a3 = a3 + a0
   164: 33 09 02                 a2 = 0x2
   167: 64 87                    a0 = a1
   169: 33 08 da 00 01           a1 = 0x100da
   174: 50 10 04 eb 0e           ra = 4, jump @306
      :                          @13 [@dyn 2]
   179: 82 10 80 00              ra = u64 [sp + 0x80]
   183: 95 11 88 00              sp = sp + 0x88
   187: 32 00                    ret
      :                          @14
   189: 00                       trap
      :                          @15 [@dyn 3]
   190: 95 11 d0                 sp = sp + 0xffffffffffffffd0
   193: 7b 10 28                 u64 [sp + 0x28] = ra
   196: 7b 15 20                 u64 [sp + 0x20] = s0
   199: 7b 16 18                 u64 [sp + 0x18] = s1
   202: 64 86                    s1 = a1
   204: 82 88 28                 a1 = u64 [a1 + 0x28]
   207: 82 75                    s0 = u64 [a0]
   209: 82 67 20                 a0 = u64 [s1 + 0x20]
   212: 82 8a 18                 a3 = u64 [a1 + 0x18]
   215: 33 08 98 00 01           a1 = 0x10098
   220: 33 09 01                 a2 = 0x1
   223: b4 a0 01 08              ra = 8, jump [a3]
      :                          @16 [@dyn 4]
   227: 7b 16                    u64 [sp] = s1
   229: 78 17 08                 u8 [sp + 0x8] = a0
   232: 46 11 09                 u8 [sp + 9] = 0
   235: 7b 15 10                 u64 [sp + 0x10] = s0
   238: 33 06 02                 s1 = 0x2
   241: 64 17                    a0 = sp
   243: 95 18 10                 a1 = sp + 0x10
   246: 33 09 02                 a2 = 0x2
   249: 50 10 0a 82 15           ra = 10, jump @450
      :                          @17 [@dyn 5]
   254: 95 57 01                 a0 = s0 + 0x1
   257: 7b 17 10                 u64 [sp + 0x10] = a0
   260: 64 17                    a0 = sp
   262: 95 18 10                 a1 = sp + 0x10
   265: 64 69                    a2 = s1
   267: 50 10 0c 70 15           ra = 12, jump @450
      :                          @18 [@dyn 6]
   272: 95 57 02                 a0 = s0 + 0x2
   275: 7b 17 10                 u64 [sp + 0x10] = a0
   278: 64 17                    a0 = sp
   280: 95 18 10                 a1 = sp + 0x10
   283: 64 69                    a2 = s1
   285: 50 10 0e 5e 15           ra = 14, jump @450
      :                          @19 [@dyn 7]
   290: 95 57 03                 a0 = s0 + 0x3
   293: 7b 17 10                 u64 [sp + 0x10] = a0
   296: 64 17                    a0 = sp
   298: 95 18 10                 a1 = sp + 0x10
   301: 64 69                    a2 = s1
   303: 50 10 10 4c 15           ra = 16, jump @450
      :                          @20 [@dyn 8]
   308: 95 57 04                 a0 = s0 + 0x4
   311: 7b 17 10                 u64 [sp + 0x10] = a0
   314: 64 17                    a0 = sp
   316: 95 18 10                 a1 = sp + 0x10
   319: 64 69                    a2 = s1
   321: 50 10 12 3a 15           ra = 18, jump @450
      :                          @21 [@dyn 9]
   326: 95 57 05                 a0 = s0 + 0x5
   329: 7b 17 10                 u64 [sp + 0x10] = a0
   332: 64 17                    a0 = sp
   334: 95 18 10                 a1 = sp + 0x10
   337: 64 69                    a2 = s1
   339: 50 10 14 28 15           ra = 20, jump @450
      :                          @22 [@dyn 10]
   344: 95 57 06                 a0 = s0 + 0x6
   347: 7b 17 10                 u64 [sp + 0x10] = a0
   350: 64 17                    a0 = sp
   352: 95 18 10                 a1 = sp + 0x10
   355: 64 69                    a2 = s1
   357: 50 10 16 16 15           ra = 22, jump @450
      :                          @23 [@dyn 11]
   362: 95 57 07                 a0 = s0 + 0x7
   365: 7b 17 10                 u64 [sp + 0x10] = a0
   368: 64 17                    a0 = sp
   370: 95 18 10                 a1 = sp + 0x10
   373: 64 69                    a2 = s1
   375: 50 10 18 04 15           ra = 24, jump @450
      :                          @24 [@dyn 12]
   380: 95 57 08                 a0 = s0 + 0x8
   383: 7b 17 10                 u64 [sp + 0x10] = a0
   386: 64 17                    a0 = sp
   388: 95 18 10                 a1 = sp + 0x10
   391: 64 69                    a2 = s1
   393: 50 10 1a f2 14           ra = 26, jump @450
      :                          @25 [@dyn 13]
   398: 95 57 09                 a0 = s0 + 0x9
   401: 7b 17 10                 u64 [sp + 0x10] = a0
   404: 64 17                    a0 = sp
   406: 95 18 10                 a1 = sp + 0x10
   409: 64 69                    a2 = s1
   411: 50 10 1c e0 14           ra = 28, jump @450
      :                          @26 [@dyn 14]
   416: 95 57 0a                 a0 = s0 + 0xa
   419: 7b 17 10                 u64 [sp + 0x10] = a0
   422: 64 17                    a0 = sp
   424: 95 18 10                 a1 = sp + 0x10
   427: 64 69                    a2 = s1
   429: 50 10 1e ce 14           ra = 30, jump @450
      :                          @27 [@dyn 15]
   434: 95 57 0b                 a0 = s0 + 0xb
   437: 7b 17 10                 u64 [sp + 0x10] = a0
   440: 64 17                    a0 = sp
   442: 95 18 10                 a1 = sp + 0x10
   445: 64 69                    a2 = s1
   447: 50 10 20 bc 14           ra = 32, jump @450
      :                          @28 [@dyn 16]
   452: 95 57 0c                 a0 = s0 + 0xc
   455: 7b 17 10                 u64 [sp + 0x10] = a0
   458: 64 17                    a0 = sp
   460: 95 18 10                 a1 = sp + 0x10
   463: 64 69                    a2 = s1
   465: 50 10 22 aa 14           ra = 34, jump @450
      :                          @29 [@dyn 17]
   470: 95 57 0d                 a0 = s0 + 0xd
   473: 7b 17 10                 u64 [sp + 0x10] = a0
   476: 64 17                    a0 = sp
   478: 95 18 10                 a1 = sp + 0x10
   481: 64 69                    a2 = s1
   483: 50 10 24 98 14           ra = 36, jump @450
      :                          @30 [@dyn 18]
   488: 95 57 0e                 a0 = s0 + 0xe
   491: 7b 17 10                 u64 [sp + 0x10] = a0
   494: 64 17                    a0 = sp
   496: 95 18 10                 a1 = sp + 0x10
   499: 64 69                    a2 = s1
   501: 50 10 26 86 14           ra = 38, jump @450
      :                          @31 [@dyn 19]
   506: 95 57 0f                 a0 = s0 + 0xf
   509: 7b 17 10                 u64 [sp + 0x10] = a0
   512: 64 17                    a0 = sp
   514: 95 18 10                 a1 = sp + 0x10
   517: 64 69                    a2 = s1
   519: 50 10 28 74 14           ra = 40, jump @450
      :                          @32 [@dyn 20]
   524: 95 57 10                 a0 = s0 + 0x10
   527: 7b 17 10                 u64 [sp + 0x10] = a0
   530: 64 17                    a0 = sp
   532: 95 18 10                 a1 = sp + 0x10
   535: 64 69                    a2 = s1
   537: 50 10 2a 62 14           ra = 42, jump @450
      :                          @33 [@dyn 21]
   542: 95 57 11                 a0 = s0 + 0x11
   545: 7b 17 10                 u64 [sp + 0x10] = a0
   548: 64 17                    a0 = sp
   550: 95 18 10                 a1 = sp + 0x10
   553: 64 69                    a2 = s1
   555: 50 10 2c 50 14           ra = 44, jump @450
      :                          @34 [@dyn 22]
   560: 95 57 12                 a0 = s0 + 0x12
   563: 7b 17 10                 u64 [sp + 0x10] = a0
   566: 64 17                    a0 = sp
   568: 95 18 10                 a1 = sp + 0x10
   571: 64 69                    a2 = s1
   573: 50 10 2e 3e 14           ra = 46, jump @450
      :                          @35 [@dyn 23]
   578: 95 57 13                 a0 = s0 + 0x13
   581: 7b 17 10                 u64 [sp + 0x10] = a0
   584: 64 17                    a0 = sp
   586: 95 18 10                 a1 = sp + 0x10
   589: 64 69                    a2 = s1
   591: 50 10 30 2c 14           ra = 48, jump @450
      :                          @36 [@dyn 24]
   596: 95 57 14                 a0 = s0 + 0x14
   599: 7b 17 10                 u64 [sp + 0x10] = a0
   602: 64 17                    a0 = sp
   604: 95 18 10                 a1 = sp + 0x10
   607: 64 69                    a2 = s1
   609: 50 10 32 1a 14           ra = 50, jump @450
      :                          @37 [@dyn 25]
   614: 95 57 15                 a0 = s0 + 0x15
   617: 7b 17 10                 u64 [sp + 0x10] = a0
   620: 64 17                    a0 = sp
   622: 95 18 10                 a1 = sp + 0x10
   625: 64 69                    a2 = s1
   627: 50 10 34 08 14           ra = 52, jump @450
      :                          @38 [@dyn 26]
   632: 95 57 16                 a0 = s0 + 0x16
   635: 7b 17 10                 u64 [sp + 0x10] = a0
   638: 64 17                    a0 = sp
   640: 95 18 10                 a1 = sp + 0x10
   643: 64 69                    a2 = s1
   645: 50 10 36 f6 13           ra = 54, jump @450
      :                          @39 [@dyn 27]
   650: 95 57 17                 a0 = s0 + 0x17
   653: 7b 17 10                 u64 [sp + 0x10] = a0
   656: 64 17                    a0 = sp
   658: 95 18 10                 a1 = sp + 0x10
   661: 64 69                    a2 = s1
   663: 50 10 38 e4 13           ra = 56, jump @450
      :                          @40 [@dyn 28]
   668: 95 57 18                 a0 = s0 + 0x18
   671: 7b 17 10                 u64 [sp + 0x10] = a0
   674: 64 17                    a0 = sp
   676: 95 18 10                 a1 = sp + 0x10
   679: 64 69                    a2 = s1
   681: 50 10 3a d2 13           ra = 58, jump @450
      :                          @41 [@dyn 29]
   686: 95 57 19                 a0 = s0 + 0x19
   689: 7b 17 10                 u64 [sp + 0x10] = a0
   692: 64 17                    a0 = sp
   694: 95 18 10                 a1 = sp + 0x10
   697: 64 69                    a2 = s1
   699: 50 10 3c c0 13           ra = 60, jump @450
      :                          @42 [@dyn 30]
   704: 95 57 1a                 a0 = s0 + 0x1a
   707: 7b 17 10                 u64 [sp + 0x10] = a0
   710: 64 17                    a0 = sp
   712: 95 18 10                 a1 = sp + 0x10
   715: 64 69                    a2 = s1
   717: 50 10 3e ae 13           ra = 62, jump @450
      :                          @43 [@dyn 31]
   722: 95 57 1b                 a0 = s0 + 0x1b
   725: 7b 17 10                 u64 [sp + 0x10] = a0
   728: 64 17                    a0 = sp
   730: 95 18 10                 a1 = sp + 0x10
   733: 64 69                    a2 = s1
   735: 50 10 40 9c 13           ra = 64, jump @450
      :                          @44 [@dyn 32]
   740: 95 57 1c                 a0 = s0 + 0x1c
   743: 7b 17 10                 u64 [sp + 0x10] = a0
   746: 64 17                    a0 = sp
   748: 95 18 10                 a1 = sp + 0x10
   751: 64 69                    a2 = s1
   753: 50 10 42 8a 13           ra = 66, jump @450
      :                          @45 [@dyn 33]
   758: 95 57 1d                 a0 = s0 + 0x1d
   761: 7b 17 10                 u64 [sp + 0x10] = a0
   764: 64 17                    a0 = sp
   766: 95 18 10                 a1 = sp + 0x10
   769: 64 69                    a2 = s1
   771: 50 10 44 78 13           ra = 68, jump @450
      :                          @46 [@dyn 34]
   776: 95 57 1e                 a0 = s0 + 0x1e
   779: 7b 17 10                 u64 [sp + 0x10] = a0
   782: 64 17                    a0 = sp
   784: 95 18 10                 a1 = sp + 0x10
   787: 64 69                    a2 = s1
   789: 50 10 46 66 13           ra = 70, jump @450
      :                          @47 [@dyn 35]
   794: 95 55 1f                 s0 = s0 + 0x1f
   797: 7b 15 10                 u64 [sp + 0x10] = s0
   800: 64 17                    a0 = sp
   802: 95 18 10                 a1 = sp + 0x10
   805: 64 69                    a2 = s1
   807: 50 10 48 54 13           ra = 72, jump @450
      :                          @48 [@dyn 36]
   812: 33 07 01                 a0 = 0x1
   815: 7c 18 08                 a1 = u8 [sp + 0x8]
   818: 52 08 1a                 jump @50 if a1 != 0
      :                          @49
   821: 82 17                    a0 = u64 [sp]
   823: 82 78 28                 a1 = u64 [a0 + 0x28]
   826: 82 77 20                 a0 = u64 [a0 + 0x20]
   829: 82 8a 18                 a3 = u64 [a1 + 0x18]
   832: 33 08 d9 00 01           a1 = 0x100d9
   837: 33 09 01                 a2 = 0x1
   840: b4 a0 01 4a              ra = 74, jump [a3]
      :                          @50 [@dyn 37]
   844: 82 10 28                 ra = u64 [sp + 0x28]
   847: 82 15 20                 s0 = u64 [sp + 0x20]
   850: 82 16 18                 s1 = u64 [sp + 0x18]
   853: 95 11 30                 sp = sp + 0x30
   856: 32 00                    ret
      :                          @51 [export #0: 'refine']
   858: 95 11 d8                 sp = sp + 0xffffffffffffffd8
   861: 7b 10 20                 u64 [sp + 0x20] = ra
   864: 7b 15 18                 u64 [sp + 0x18] = s0
   867: 7b 16 10                 u64 [sp + 0x10] = s1
   870: 64 86                    s1 = a1
   872: 64 7a                    a3 = a0
   874: 33 07 00 00 01           a0 = 0x10000
   879: 53 16 04 43              jump @60 if s1 <u 4
      :                          @52
   883: 7d a8                    a1 = i8 [a3]
   885: 33 05 01                 s0 = 0x1
   888: 59 08 37                 jump @59 if a1 >=s 0
      :                          @53
   891: 84 89 ff 00              a2 = a1 & 0xff
   895: 33 05 02                 s0 = 0x2
   898: 53 29 c0 00 2d           jump @59 if a2 <u 192
      :                          @54
   903: 33 05 03                 s0 = 0x3
   906: 53 29 e0 00 25           jump @59 if a2 <u 224
      :                          @55
   911: 33 05 04                 s0 = 0x4
   914: 53 29 f0 00 1d           jump @59 if a2 <u 240
      :                          @56
   919: 33 05 05                 s0 = 0x5
   922: 53 29 f8 00 15           jump @59 if a2 <u 248
      :                          @57
   927: 33 05 06                 s0 = 0x6
   930: 53 29 fc 00 0d           jump @59 if a2 <u 252
      :                          @58
   935: 88 98 fe 00              a1 = a2 <u 0xfe
   939: 9a 85 08                 s0 = 0x8 - a1
   942: 01                       fallthrough
      :                          @59
   943: ae 56 08                 jump @61 if s1 >=u s0
      :                          @60
   946: 33 08                    a1 = 0
   948: 28 e3 00                 jump @86
      :                          @61
   951: 64 a7                    a0 = a3
   953: 64 58                    a1 = s0
   955: 7b 1a 08                 u64 [sp + 0x8] = a3
   958: 50 10 4c fc 13           ra = 76, jump @467
      :                          @62 [@dyn 38]
   963: aa 56 cc 00              jump @85 if s1 == s0
      :                          @63
   967: 82 17 08                 a0 = u64 [sp + 0x8]
   970: c8 57 07                 a0 = a0 + s0
   973: 7d 78                    a1 = i8 [a0]
   975: c9 56 06                 s1 = s1 - s0
   978: 33 05 01                 s0 = 0x1
   981: 59 08 37                 jump @70 if a1 >=s 0
      :                          @64
   984: 84 89 ff 00              a2 = a1 & 0xff
   988: 33 05 02                 s0 = 0x2
   991: 53 29 c0 00 2d           jump @70 if a2 <u 192
      :                          @65
   996: 33 05 03                 s0 = 0x3
   999: 53 29 e0 00 25           jump @70 if a2 <u 224
      :                          @66
  1004: 33 05 04                 s0 = 0x4
  1007: 53 29 f0 00 1d           jump @70 if a2 <u 240
      :                          @67
  1012: 33 05 05                 s0 = 0x5
  1015: 53 29 f8 00 15           jump @70 if a2 <u 248
      :                          @68
  1020: 33 05 06                 s0 = 0x6
  1023: 53 29 fc 00 0d           jump @70 if a2 <u 252
      :                          @69
  1028: 88 98 fe 00              a1 = a2 <u 0xfe
  1032: 9a 85 08                 s0 = 0x8 - a1
  1035: 01                       fallthrough
      :                          @70
  1036: ac 56 83 00              jump @85 if s1 <u s0
      :                          @71
  1040: 64 58                    a1 = s0
  1042: 7b 16 08                 u64 [sp + 0x8] = s1
  1045: 64 76                    s1 = a0
  1047: 50 10 4e a3 13           ra = 78, jump @467
      :                          @72 [@dyn 39]
  1052: c8 65 07                 a0 = s0 + s1
  1055: 82 16 08                 s1 = u64 [sp + 0x8]
  1058: 7b 17                    u64 [sp] = a0
  1060: ab 56 0b                 jump @74 if s1 != s0
      :                          @73
  1063: 33 09                    a2 = 0
  1065: 33 05                    s0 = 0
  1067: 33 08                    a1 = 0
  1069: 28 56                    jump @84
      :                          @74
  1071: 7d 78                    a1 = i8 [a0]
  1073: c9 56 06                 s1 = s1 - s0
  1076: 33 05 01                 s0 = 0x1
  1079: 59 08 37                 jump @81 if a1 >=s 0
      :                          @75
  1082: 84 89 ff 00              a2 = a1 & 0xff
  1086: 33 05 02                 s0 = 0x2
  1089: 53 29 c0 00 2d           jump @81 if a2 <u 192
      :                          @76
  1094: 33 05 03                 s0 = 0x3
  1097: 53 29 e0 00 25           jump @81 if a2 <u 224
      :                          @77
  1102: 33 05 04                 s0 = 0x4
  1105: 53 29 f0 00 1d           jump @81 if a2 <u 240
      :                          @78
  1110: 33 05 05                 s0 = 0x5
  1113: 53 29 f8 00 15           jump @81 if a2 <u 248
      :                          @79
  1118: 33 05 06                 s0 = 0x6
  1121: 53 29 fc 00 0d           jump @81 if a2 <u 252
      :                          @80
  1126: 88 98 fe 00              a1 = a2 <u 0xfe
  1130: 9a 85 08                 s0 = 0x8 - a1
  1133: 01                       fallthrough
      :                          @81
  1134: ac 56 3e                 jump @88 if s1 <u s0
      :                          @82
  1137: 64 58                    a1 = s0
  1139: 50 10 50 47 13           ra = 80, jump @467
      :                          @83 [@dyn 40]
  1144: e4 56 09                 a2 = maxu(s1, s0)
  1147: c9 59 09                 a2 = a2 - s0
  1150: 64 78                    a1 = a0
  1152: ac 79 0f                 jump @85 if a2 <u a0
      :                          @84
  1155: e4 89 07                 a0 = maxu(a2, a1)
  1158: c9 87 07                 a0 = a0 - a1
  1161: 33 09 20                 a2 = 0x20
  1164: ae 97 19                 jump @87 if a0 >=u a2
      :                          @85
  1167: 33 08                    a1 = 0
  1169: 33 07 00 00 01           a0 = 0x10000
  1174: 01                       fallthrough
      :                          @86
  1175: 82 10 20                 ra = u64 [sp + 0x20]
  1178: 82 15 18                 s0 = u64 [sp + 0x18]
  1181: 82 16 10                 s1 = u64 [sp + 0x10]
  1184: 95 11 28                 sp = sp + 0x28
  1187: 32 00                    ret
      :                          @87
  1189: 82 17                    a0 = u64 [sp]
  1191: c8 57 07                 a0 = a0 + s0
  1194: 28 ed                    jump @86
      :                          @88
  1196: 00                       trap
      :                          @89 [export #1: 'accumulate']
  1197: 95 11 b8 fe              sp = sp + 0xfffffffffffffeb8
  1201: 7b 10 40 01              u64 [sp + 0x140] = ra
  1205: 7b 15 38 01              u64 [sp + 0x138] = s0
  1209: 7b 16 30 01              u64 [sp + 0x130] = s1
  1213: 33 02 00 00 01           t0 = 0x10000
  1218: 51 08 a6 00              jump @110 if a1 == 0
      :                          @90
  1222: 64 86                    s1 = a1
  1224: 7d 78                    a1 = i8 [a0]
  1226: 33 05 01                 s0 = 0x1
  1229: 59 08 37                 jump @97 if a1 >=s 0
      :                          @91
  1232: 84 89 ff 00              a2 = a1 & 0xff
  1236: 33 05 02                 s0 = 0x2
  1239: 53 29 c0 00 2d           jump @97 if a2 <u 192
      :                          @92
  1244: 33 05 03                 s0 = 0x3
  1247: 53 29 e0 00 25           jump @97 if a2 <u 224
      :                          @93
  1252: 33 05 04                 s0 = 0x4
  1255: 53 29 f0 00 1d           jump @97 if a2 <u 240
      :                          @94
  1260: 33 05 05                 s0 = 0x5
  1263: 53 29 f8 00 15           jump @97 if a2 <u 248
      :                          @95
  1268: 33 05 06                 s0 = 0x6
  1271: 53 29 fc 00 0d           jump @97 if a2 <u 252
      :                          @96
  1276: 88 98 fe 00              a1 = a2 <u 0xfe
  1280: 9a 85 08                 s0 = 0x8 - a1
  1283: 01                       fallthrough
      :                          @97
  1284: ae 56 07                 jump @99 if s1 >=u s0
      :                          @98
  1287: 33 08                    a1 = 0
  1289: 28 5f                    jump @110
      :                          @99
  1291: 64 58                    a1 = s0
  1293: 7b 17 48                 u64 [sp + 0x48] = a0
  1296: 50 10 52 aa 12           ra = 82, jump @467
      :                          @100 [@dyn 41]
  1301: aa 56 4b                 jump @109 if s1 == s0
      :                          @101
  1304: 82 17 48                 a0 = u64 [sp + 0x48]
  1307: c8 57 07                 a0 = a0 + s0
  1310: 7d 78                    a1 = i8 [a0]
  1312: c9 56 06                 s1 = s1 - s0
  1315: 33 05 01                 s0 = 0x1
  1318: 59 08 37                 jump @108 if a1 >=s 0
      :                          @102
  1321: 84 89 ff 00              a2 = a1 & 0xff
  1325: 33 05 02                 s0 = 0x2
  1328: 53 29 c0 00 2d           jump @108 if a2 <u 192
      :                          @103
  1333: 33 05 03                 s0 = 0x3
  1336: 53 29 e0 00 25           jump @108 if a2 <u 224
      :                          @104
  1341: 33 05 04                 s0 = 0x4
  1344: 53 29 f0 00 1d           jump @108 if a2 <u 240
      :                          @105
  1349: 33 05 05                 s0 = 0x5
  1352: 53 29 f8 00 15           jump @108 if a2 <u 248
      :                          @106
  1357: 33 05 06                 s0 = 0x6
  1360: 53 29 fc 00 0d           jump @108 if a2 <u 252
      :                          @107
  1365: 88 98 fe 00              a1 = a2 <u 0xfe
  1369: 9a 85 08                 s0 = 0x8 - a1
  1372: 01                       fallthrough
      :                          @108
  1373: ae 56 1f                 jump @111 if s1 >=u s0
      :                          @109
  1376: 33 08                    a1 = 0
  1378: 33 02 00 00 01           t0 = 0x10000
  1383: 01                       fallthrough
      :                          @110
  1384: 64 27                    a0 = t0
  1386: 82 10 40 01              ra = u64 [sp + 0x140]
  1390: 82 15 38 01              s0 = u64 [sp + 0x138]
  1394: 82 16 30 01              s1 = u64 [sp + 0x130]
  1398: 95 11 48 01              sp = sp + 0x148
  1402: 32 00                    ret
      :                          @111
  1404: 64 58                    a1 = s0
  1406: 7b 16 48                 u64 [sp + 0x48] = s1
  1409: 64 76                    s1 = a0
  1411: 50 10 54 37 12           ra = 84, jump @467
      :                          @112 [@dyn 42]
  1416: c8 65 07                 a0 = s0 + s1
  1419: 82 16 48                 s1 = u64 [sp + 0x48]
  1422: ab 56 0b                 jump @114 if s1 != s0
      :                          @113
  1425: 33 08                    a1 = 0
  1427: 33 00 56                 ra = 0x56
  1430: 28 24 12                 jump @467
      :                          @114
  1433: 7d 79                    a2 = i8 [a0]
  1435: c9 56 06                 s1 = s1 - s0
  1438: 33 08 01                 a1 = 0x1
  1441: 59 09 44                 jump @121 if a2 >=s 0
      :                          @115
  1444: 84 99 ff 00              a2 = a2 & 0xff
  1448: 33 0a c0 00              a3 = 0xc0
  1452: 33 08 02                 a1 = 0x2
  1455: ac a9 36                 jump @121 if a2 <u a3
      :                          @116
  1458: 33 0a e0 00              a3 = 0xe0
  1462: 33 08 03                 a1 = 0x3
  1465: ac a9 2c                 jump @121 if a2 <u a3
      :                          @117
  1468: 33 0a f0 00              a3 = 0xf0
  1472: 33 08 04                 a1 = 0x4
  1475: ac a9 22                 jump @121 if a2 <u a3
      :                          @118
  1478: 33 0a f8 00              a3 = 0xf8
  1482: 33 08 05                 a1 = 0x5
  1485: ac a9 18                 jump @121 if a2 <u a3
      :                          @119
  1488: 33 0a fc 00              a3 = 0xfc
  1492: 33 08 06                 a1 = 0x6
  1495: ac a9 0e                 jump @121 if a2 <u a3
      :                          @120
  1498: 88 98 fe 00              a1 = a2 <u 0xfe
  1502: 33 09 08                 a2 = 0x8
  1505: c9 89 08                 a1 = a2 - a1
  1508: 01                       fallthrough
      :                          @121
  1509: 33 02 00 00 01           t0 = 0x10000
  1514: ac 86 1d ff              jump @98 if s1 <u a1
      :                          @122
  1518: 50 10 56 cc 11           ra = 86, jump @467
      :                          @123 [@dyn 43]
  1523: 33 0a 20 00 03           a3 = 0x30020
  1528: 33 09 00 00 01           a2 = 0x10000
  1533: c8 9a 0a                 a3 = a3 + a2
  1536: 01                       fallthrough
      :                          @124
  1537: 82 ab                    a4 = u64 [a3]
  1539: 95 b8 20                 a1 = a4 + 0x20
  1542: ac b8 a4 02              jump @155 if a1 <u a4
      :                          @125
  1546: 95 8c 01                 a5 = a1 + 0x1
  1549: 88 c6 01                 s1 = a5 <u 0x1
  1552: d8 c9 0c                 a5 = a2 <u a5
  1555: d4 6c 0c                 a5 = a5 | s1
  1558: 52 0c 94 02              jump @155 if a5 != 0
      :                          @126
  1562: 82 ac                    a5 = u64 [a3]
  1564: ab bc e5                 jump @124 if a5 != a4
      :                          @127
  1567: 7b a8                    u64 [a3] = a1
  1569: 33 06                    s1 = 0
  1571: 01                       fallthrough
      :                          @128
  1572: 33 0a 20 00 03           a3 = 0x30020
  1577: 33 0b 00 00 01           a4 = 0x10000
  1582: c8 ba 09                 a2 = a3 + a4
  1585: c9 89 08                 a1 = a2 - a1
  1588: 7b 18 50                 u64 [sp + 0x50] = a1
  1591: 46 18 1f                 u8 [a1 + 31] = 0
  1594: 46 18 1e                 u8 [a1 + 30] = 0
  1597: 46 18 1d                 u8 [a1 + 29] = 0
  1600: 46 18 1c                 u8 [a1 + 28] = 0
  1603: 46 18 1b                 u8 [a1 + 27] = 0
  1606: 46 18 1a                 u8 [a1 + 26] = 0
  1609: 46 18 19                 u8 [a1 + 25] = 0
  1612: 46 18 18                 u8 [a1 + 24] = 0
  1615: 46 18 17                 u8 [a1 + 23] = 0
  1618: 46 18 16                 u8 [a1 + 22] = 0
  1621: 46 18 15                 u8 [a1 + 21] = 0
  1624: 46 18 14                 u8 [a1 + 20] = 0
  1627: 46 18 13                 u8 [a1 + 19] = 0
  1630: 46 18 12                 u8 [a1 + 18] = 0
  1633: 46 18 11                 u8 [a1 + 17] = 0
  1636: 46 18 10                 u8 [a1 + 16] = 0
  1639: 46 18 0f                 u8 [a1 + 15] = 0
  1642: 46 18 0e                 u8 [a1 + 14] = 0
  1645: 46 18 0d                 u8 [a1 + 13] = 0
  1648: 46 18 0c                 u8 [a1 + 12] = 0
  1651: 46 18 0b                 u8 [a1 + 11] = 0
  1654: 46 18 0a                 u8 [a1 + 10] = 0
  1657: 46 18 09                 u8 [a1 + 9] = 0
  1660: 46 18 08                 u8 [a1 + 8] = 0
  1663: 46 18 07                 u8 [a1 + 7] = 0
  1666: 46 18 06                 u8 [a1 + 6] = 0
  1669: 46 18 05                 u8 [a1 + 5] = 0
  1672: 46 18 04                 u8 [a1 + 4] = 0
  1675: 46 18 03                 u8 [a1 + 3] = 0
  1678: 46 18 02                 u8 [a1 + 2] = 0
  1681: 46 18 01                 u8 [a1 + 1] = 0
  1684: 46 08                    u8 [a1 + 0] = 0
  1686: 83 79                    i32 a2 = a0 + 0
  1688: 7b 18 58                 u64 [sp + 0x58] = a1
  1691: 64 82                    t0 = a1
  1693: 51 09 e6 01              jump @149 if a2 == 0
      :                          @129
  1697: 33 0b                    a4 = 0
  1699: 14 08 ff ff ff ff 00 00 00 00 a1 = 0xffffffff
  1709: 49 11 48 ff ff fe        u64 [sp + 72] = 0xfffffffffffeffff
  1715: d2 87 07                 a0 = a0 & a1
  1718: 7b 17 08                 u64 [sp + 0x8] = a0
  1721: 33 07 80 00              a0 = 0x80
  1725: 7b 17 40                 u64 [sp + 0x40] = a0
  1728: 33 07 06                 a0 = 0x6
  1731: 7b 17 28                 u64 [sp + 0x28] = a0
  1734: 33 07 28 00 01           a0 = 0x10028
  1739: 7b 17 20                 u64 [sp + 0x20] = a0
  1742: 33 07 58 00 01           a0 = 0x10058
  1747: 7b 17 18                 u64 [sp + 0x18] = a0
  1750: 49 11 10 20 a1 07        u64 [sp + 16] = 0x7a120
  1756: 7b 1a                    u64 [sp] = a3
  1758: 95 a5 00 00 01           s0 = a3 + 0x10000
  1763: 01                       fallthrough
      :                          @130
  1764: 82 18 58                 a1 = u64 [sp + 0x58]
  1767: 33 09 20                 a2 = 0x20
  1770: 33 0a 0e                 a3 = 0xe
  1773: 33 07                    a0 = 0
  1775: 7b 1b 38                 u64 [sp + 0x38] = a4
  1778: 33 0c                    a5 = 0
  1780: 0a 01                    ecalli 1 // 'fetch'
  1782: 95 17 58                 a0 = sp + 0x58
  1785: 7b 17 78                 u64 [sp + 0x78] = a0
  1788: 82 17 40                 a0 = u64 [sp + 0x40]
  1791: 7b 17 80 00              u64 [sp + 0x80] = a0
  1795: 95 17 50                 a0 = sp + 0x50
  1798: 7b 17 88 00              u64 [sp + 0x88] = a0
  1802: 82 17 28                 a0 = u64 [sp + 0x28]
  1805: 7b 17 90 00              u64 [sp + 0x90] = a0
  1809: 82 17 20                 a0 = u64 [sp + 0x20]
  1812: 7b 17 b0 00              u64 [sp + 0xb0] = a0
  1816: 49 21 b8 00 02           u64 [sp + 184] = 0x2
  1821: 49 21 d0 00              u64 [sp + 208] = 0
  1825: 95 18 78                 a1 = sp + 0x78
  1828: 7b 18 c0 00              u64 [sp + 0xc0] = a1
  1832: 49 21 c8 00 02           u64 [sp + 200] = 0x2
  1837: 95 17 60                 a0 = sp + 0x60
  1840: 95 18 b0 00              a1 = sp + 0xb0
  1844: 50 10 58 be 03           ra = 88, jump @214
      :                          @131 [@dyn 44]
  1849: 82 16 68                 s1 = u64 [sp + 0x68]
  1852: 82 1b 70                 a4 = u64 [sp + 0x70]
  1855: 82 17 60                 a0 = u64 [sp + 0x60]
  1858: 7b 17 30                 u64 [sp + 0x30] = a0
  1861: 33 07 02                 a0 = 0x2
  1864: 33 08                    a1 = 0
  1866: 33 09                    a2 = 0
  1868: 64 6a                    a3 = s1
  1870: 33 00 5a                 ra = 0x5a
  1873: 0a 64                    ecalli 100 // 'log'
  1875: 01                       fallthrough
      :                          @132 [@dyn 45]
  1876: 82 1b 30                 a4 = u64 [sp + 0x30]
  1879: 82 17 48                 a0 = u64 [sp + 0x48]
  1882: c8 b7 07                 a0 = a0 + a4
  1885: 53 37 00 00 ff 1a        jump @137 if a0 <u 4294901760
      :                          @133
  1891: 82 57                    a0 = u64 [s0]
  1893: c9 75 08                 a1 = s0 - a0
  1896: ab 68 0f                 jump @137 if a1 != s1
      :                          @134
  1899: c9 b7 08                 a1 = a0 - a4
  1902: 01                       fallthrough
      :                          @135
  1903: 82 59                    a2 = u64 [s0]
  1905: ab 79 f2                 jump @133 if a2 != a0
      :                          @136
  1908: 7b 58                    u64 [s0] = a1
  1910: 01                       fallthrough
      :                          @137
  1911: 82 17 58                 a0 = u64 [sp + 0x58]
  1914: 33 08 20                 a1 = 0x20
  1917: 33 09 64                 a2 = 0x64
  1920: 33 0a 64                 a3 = 0x64
  1923: 33 0b 00 04              a4 = 0x400
  1927: 0a 12                    ecalli 18 // 'new'
  1929: 7b 17 98 00              u64 [sp + 0x98] = a0
  1933: 7b 17 a0 00              u64 [sp + 0xa0] = a0
  1937: 48 21 ac 00              u32 [sp + 172] = 0
  1941: 95 17 ac 00              a0 = sp + 0xac
  1945: 33 08 04                 a1 = 0x4
  1948: 95 19 a0 00              a2 = sp + 0xa0
  1952: 33 0a 04                 a3 = 0x4
  1955: 0a 04                    ecalli 4 // 'write'
  1957: 95 17 98 00              a0 = sp + 0x98
  1961: 7b 17 60                 u64 [sp + 0x60] = a0
  1964: 82 17 40                 a0 = u64 [sp + 0x40]
  1967: 7b 17 68                 u64 [sp + 0x68] = a0
  1970: 82 17 18                 a0 = u64 [sp + 0x18]
  1973: 7b 17 b0 00              u64 [sp + 0xb0] = a0
  1977: 49 21 b8 00 01           u64 [sp + 184] = 0x1
  1982: 49 21 d0 00              u64 [sp + 208] = 0
  1986: 95 17 60                 a0 = sp + 0x60
  1989: 7b 17 c0 00              u64 [sp + 0xc0] = a0
  1993: 49 21 c8 00 01           u64 [sp + 200] = 0x1
  1998: 95 17 78                 a0 = sp + 0x78
  2001: 95 18 b0 00              a1 = sp + 0xb0
  2005: 50 10 5c 1d 03           ra = 92, jump @214
      :                          @138 [@dyn 46]
  2010: 82 16 80 00              s1 = u64 [sp + 0x80]
  2014: 82 1b 88 00              a4 = u64 [sp + 0x88]
  2018: 82 17 78                 a0 = u64 [sp + 0x78]
  2021: 7b 17 30                 u64 [sp + 0x30] = a0
  2024: 33 07 02                 a0 = 0x2
  2027: 33 08                    a1 = 0
  2029: 33 09                    a2 = 0
  2031: 64 6a                    a3 = s1
  2033: 33 00 5e                 ra = 0x5e
  2036: 0a 64                    ecalli 100 // 'log'
  2038: 01                       fallthrough
      :                          @139 [@dyn 47]
  2039: 82 1b 30                 a4 = u64 [sp + 0x30]
  2042: 82 17 48                 a0 = u64 [sp + 0x48]
  2045: c8 b7 07                 a0 = a0 + a4
  2048: 53 37 00 00 ff 1a        jump @144 if a0 <u 4294901760
      :                          @140
  2054: 82 57                    a0 = u64 [s0]
  2056: c9 75 08                 a1 = s0 - a0
  2059: ab 68 0f                 jump @144 if a1 != s1
      :                          @141
  2062: c9 b7 08                 a1 = a0 - a4
  2065: 01                       fallthrough
      :                          @142
  2066: 82 59                    a2 = u64 [s0]
  2068: ab 79 f2                 jump @140 if a2 != a0
      :                          @143
  2071: 7b 58                    u64 [s0] = a1
  2073: 01                       fallthrough
      :                          @144
  2074: 95 17 b0 00              a0 = sp + 0xb0
  2078: 33 09 80 00              a2 = 0x80
  2082: 33 08                    a1 = 0
  2084: 50 10 60 f4 05           ra = 96, jump @282
      :                          @145 [@dyn 48]
  2089: 82 17 98 00              a0 = u64 [sp + 0x98]
  2093: 33 09 64                 a2 = 0x64
  2096: 95 1a b0 00              a3 = sp + 0xb0
  2100: 82 18 10                 a1 = u64 [sp + 0x10]
  2103: 33 00 62                 ra = 0x62
  2106: 0a 14                    ecalli 20 // 'transfer'
  2108: 01                       fallthrough
      :                          @146 [@dyn 49]
  2109: 82 1a 38                 a3 = u64 [sp + 0x38]
  2112: 51 1a 08 6b              jump @156 if a3 == 8
      :                          @147
  2116: 82 17 50                 a0 = u64 [sp + 0x50]
  2119: 81 18 a0 00              a1 = i32 [sp + 0xa0]
  2123: 95 a9 01                 a2 = a3 + 0x1
  2126: 97 aa 02                 a3 = a3 << 0x2
  2129: c8 a7 07                 a0 = a0 + a3
  2132: 98 8a 18                 a3 = a1 >> 0x18
  2135: 78 7a 03                 u8 [a0 + 0x3] = a3
  2138: 98 8a 10                 a3 = a1 >> 0x10
  2141: 78 7a 02                 u8 [a0 + 0x2] = a3
  2144: 98 8a 08                 a3 = a1 >> 0x8
  2147: 78 7a 01                 u8 [a0 + 0x1] = a3
  2150: 78 78                    u8 [a0] = a1
  2152: 64 9b                    a4 = a2
  2154: 82 17 08                 a0 = u64 [sp + 0x8]
  2157: ab 79 77 fe              jump @130 if a2 != a0
      :                          @148
  2161: 82 12 58                 t0 = u64 [sp + 0x58]
  2164: 82 18 50                 a1 = u64 [sp + 0x50]
  2167: 82 1a                    a3 = u64 [sp]
  2169: 33 0b 00 00 01           a4 = 0x10000
  2174: c8 ba 07                 a0 = a3 + a4
  2177: 28 08                    jump @150
      :                          @149
  2179: 95 a7 00 00 01           a0 = a3 + 0x10000
  2184: 01                       fallthrough
      :                          @150
  2185: 82 79                    a2 = u64 [a0]
  2187: c9 97 0a                 a3 = a0 - a2
  2190: ab 8a 16                 jump @154 if a3 != a1
      :                          @151
  2193: 95 9a e0                 a3 = a2 + 0xffffffffffffffe0
  2196: 01                       fallthrough
      :                          @152
  2197: 82 7b                    a4 = u64 [a0]
  2199: ab 9b f2                 jump @150 if a4 != a2
      :                          @153
  2202: 7b 7a                    u64 [a0] = a3
  2204: 33 0c                    a5 = 0
  2206: 33 08 20                 a1 = 0x20
  2209: 28 c7 fc                 jump @110
      :                          @154
  2212: 33 08 20                 a1 = 0x20
  2215: 28 c1 fc                 jump @110
      :                          @155
  2218: 00                       trap
      :                          @156
  2219: 00                       trap
      :                          @157 [export #2: 'on_transfer']
  2220: 33 07 00 00 01           a0 = 0x10000
  2225: 33 08                    a1 = 0
  2227: 32 00                    ret
      :                          @158
  2229: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  2232: 7b 10 40                 u64 [sp + 0x40] = ra
  2235: 7b 15 38                 u64 [sp + 0x38] = s0
  2238: 7b 16 30                 u64 [sp + 0x30] = s1
  2241: c8 89 09                 a2 = a2 + a1
  2244: ac 89 52                 jump @166 if a2 <u a1
      :                          @159
  2247: 64 75                    s0 = a0
  2249: 82 77                    a0 = u64 [a0]
  2251: 97 78 01                 a1 = a0 << 0x1
  2254: 33 0a 08                 a3 = 0x8
  2257: e4 a9 09                 a2 = maxu(a2, a3)
  2260: e4 98 06                 s1 = maxu(a1, a2)
  2263: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  2266: 98 88 3f                 a1 = a1 >> 0x3f
  2269: 51 07 12                 jump @161 if a0 == 0
      :                          @160
  2272: 82 59 08                 a2 = u64 [s0 + 0x8]
  2275: 7b 19 18                 u64 [sp + 0x18] = a2
  2278: 49 11 20 01              u64 [sp + 32] = 0x1
  2282: 7b 17 28                 u64 [sp + 0x28] = a0
  2285: 28 06                    jump @162
      :                          @161
  2287: 49 11 20                 u64 [sp + 32] = 0
  2290: 01                       fallthrough
      :                          @162
  2291: 64 17                    a0 = sp
  2293: 95 1a 18                 a3 = sp + 0x18
  2296: 64 69                    a2 = s1
  2298: 50 10 64 32              ra = 100, jump @170
      :                          @163 [@dyn 50]
  2302: 82 18                    a1 = u64 [sp]
  2304: 82 17 08                 a0 = u64 [sp + 0x8]
  2307: 51 08 14                 jump @167 if a1 == 0
      :                          @164
  2310: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  2320: aa 87 0d                 jump @168 if a0 == a1
      :                          @165
  2323: 52 07 18                 jump @169 if a0 != 0
      :                          @166
  2326: 00                       trap
      :                          @167
  2327: 7b 57 08                 u64 [s0 + 0x8] = a0
  2330: 7b 56                    u64 [s0] = s1
  2332: 01                       fallthrough
      :                          @168
  2333: 82 10 40                 ra = u64 [sp + 0x40]
  2336: 82 15 38                 s0 = u64 [sp + 0x38]
  2339: 82 16 30                 s1 = u64 [sp + 0x30]
  2342: 95 11 48                 sp = sp + 0x48
  2345: 32 00                    ret
      :                          @169
  2347: 00                       trap
      :                          @170
  2348: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  2351: 7b 10 30                 u64 [sp + 0x30] = ra
  2354: 7b 15 28                 u64 [sp + 0x28] = s0
  2357: 7b 16 20                 u64 [sp + 0x20] = s1
  2360: 64 95                    s0 = a2
  2362: 64 72                    t0 = a0
  2364: 51 08 79                 jump @180 if a1 == 0
      :                          @171
  2367: 82 a7 08                 a0 = u64 [a3 + 0x8]
  2370: 51 07 7c                 jump @181 if a0 == 0
      :                          @172
  2373: 82 a9 10                 a2 = u64 [a3 + 0x10]
  2376: 51 09 aa 00              jump @188 if a2 == 0
      :                          @173
  2380: 82 a8                    a1 = u64 [a3]
  2382: 33 06 20 00 03           s1 = 0x30020
  2387: 33 03 00 00 01           t1 = 0x10000
  2392: c8 36 06                 s1 = s1 + t1
  2395: 01                       fallthrough
      :                          @174
  2396: 82 6a                    a3 = u64 [s1]
  2398: c8 5a 07                 a0 = a3 + s0
  2401: ac a7 cf 00              jump @194 if a0 <u a3
      :                          @175
  2405: 95 7b 01                 a4 = a0 + 0x1
  2408: 88 bc 01                 a5 = a4 <u 0x1
  2411: d8 b3 0b                 a4 = t1 <u a4
  2414: d4 cb 0b                 a4 = a4 | a5
  2417: 52 0b bf 00              jump @194 if a4 != 0
      :                          @176
  2421: 82 6b                    a4 = u64 [s1]
  2423: ab ab e5                 jump @174 if a4 != a3
      :                          @177
  2426: 7b 67                    u64 [s1] = a0
  2428: 33 0c                    a5 = 0
  2430: 7b 12 18                 u64 [sp + 0x18] = t0
  2433: 33 0a 20 00 03           a3 = 0x30020
  2438: 33 0b 00 00 01           a4 = 0x10000
  2443: 7b 1a                    u64 [sp] = a3
  2445: c8 ba 0a                 a3 = a3 + a4
  2448: c9 7a 07                 a0 = a3 - a0
  2451: 7b 17 10                 u64 [sp + 0x10] = a0
  2454: 7b 18 08                 u64 [sp + 0x8] = a1
  2457: 64 96                    s1 = a2
  2459: 50 10 66 cb 03           ra = 102, jump @264
      :                          @178 [@dyn 51]
  2464: 54 36 00 00 01 98 00     jump @195 if s1 <=u 65536
      :                          @179
  2471: 82 12 18                 t0 = u64 [sp + 0x18]
  2474: 82 18 10                 a1 = u64 [sp + 0x10]
  2477: 33 07                    a0 = 0
  2479: 7b 28 08                 u64 [t0 + 0x8] = a1
  2482: 28 b5 00                 jump @201
      :                          @180
  2485: 49 12 08                 u64 [t0 + 8] = 0
  2488: 33 07 01                 a0 = 0x1
  2491: 28 ac 00                 jump @201
      :                          @181
  2494: 33 09 20 00 03           a2 = 0x30020
  2499: 33 07 00 00 01           a0 = 0x10000
  2504: c8 79 09                 a2 = a2 + a0
  2507: 01                       fallthrough
      :                          @182
  2508: 82 9a                    a3 = u64 [a2]
  2510: c8 5a 08                 a1 = a3 + s0
  2513: ac a8 5f                 jump @194 if a1 <u a3
      :                          @183
  2516: 95 8b 01                 a4 = a1 + 0x1
  2519: 88 bc 01                 a5 = a4 <u 0x1
  2522: d8 b7 0b                 a4 = a0 <u a4
  2525: d4 cb 0b                 a4 = a4 | a5
  2528: 52 0b 50                 jump @194 if a4 != 0
      :                          @184
  2531: 82 9b                    a4 = u64 [a2]
  2533: ab ab e7                 jump @182 if a4 != a3
      :                          @185
  2536: 7b 98                    u64 [a2] = a1
  2538: 33 0c                    a5 = 0
  2540: 01                       fallthrough
      :                          @186
  2541: ab ab df                 jump @182 if a4 != a3
      :                          @187
  2544: 28 31                    jump @193
      :                          @188
  2546: 33 09 20 00 03           a2 = 0x30020
  2551: 33 07 00 00 01           a0 = 0x10000
  2556: c8 79 09                 a2 = a2 + a0
  2559: 01                       fallthrough
      :                          @189
  2560: 82 9a                    a3 = u64 [a2]
  2562: c8 5a 08                 a1 = a3 + s0
  2565: ac a8 2b                 jump @194 if a1 <u a3
      :                          @190
  2568: 95 8b 01                 a4 = a1 + 0x1
  2571: 88 bc 01                 a5 = a4 <u 0x1
  2574: d8 b7 0b                 a4 = a0 <u a4
  2577: d4 cb 0b                 a4 = a4 | a5
  2580: 52 0b 1c                 jump @194 if a4 != 0
      :                          @191
  2583: 82 9b                    a4 = u64 [a2]
  2585: ab ab e7                 jump @189 if a4 != a3
      :                          @192
  2588: 7b 98                    u64 [a2] = a1
  2590: 33 0c                    a5 = 0
  2592: 01                       fallthrough
      :                          @193
  2593: 33 07 20 00 04           a0 = 0x40020
  2598: c9 87 08                 a1 = a0 - a1
  2601: 33 07                    a0 = 0
  2603: 7b 28 08                 u64 [t0 + 0x8] = a1
  2606: 28 39                    jump @201
      :                          @194
  2608: 33 07 01                 a0 = 0x1
  2611: 7b 27 08                 u64 [t0 + 0x8] = a0
  2614: 28 31                    jump @201
      :                          @195
  2616: 64 6c                    a5 = s1
  2618: 82 17                    a0 = u64 [sp]
  2620: 95 77 00 00 01           a0 = a0 + 0x10000
  2625: 82 12 18                 t0 = u64 [sp + 0x18]
  2628: 82 16 08                 s1 = u64 [sp + 0x8]
  2631: 01                       fallthrough
      :                          @196
  2632: 82 78                    a1 = u64 [a0]
  2634: c9 87 09                 a2 = a0 - a1
  2637: ab 69 11                 jump @200 if a2 != s1
      :                          @197
  2640: c9 c8 09                 a2 = a1 - a5
  2643: 01                       fallthrough
      :                          @198
  2644: 82 7a                    a3 = u64 [a0]
  2646: ab 8a f2                 jump @196 if a3 != a1
      :                          @199
  2649: 7b 79                    u64 [a0] = a2
  2651: 33 0b                    a4 = 0
  2653: 01                       fallthrough
      :                          @200
  2654: 82 18 10                 a1 = u64 [sp + 0x10]
  2657: 33 07                    a0 = 0
  2659: 7b 28 08                 u64 [t0 + 0x8] = a1
  2662: 01                       fallthrough
      :                          @201
  2663: 7b 25 10                 u64 [t0 + 0x10] = s0
  2666: 7b 27                    u64 [t0] = a0
  2668: 82 10 30                 ra = u64 [sp + 0x30]
  2671: 82 15 28                 s0 = u64 [sp + 0x28]
  2674: 82 16 20                 s1 = u64 [sp + 0x20]
  2677: 95 11 38                 sp = sp + 0x38
  2680: 32 00                    ret
      :                          @202
  2682: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  2685: 7b 10 40                 u64 [sp + 0x40] = ra
  2688: 7b 15 38                 u64 [sp + 0x38] = s0
  2691: 7b 16 30                 u64 [sp + 0x30] = s1
  2694: 95 88 01                 a1 = a1 + 0x1
  2697: 51 08 53                 jump @210 if a1 == 0
      :                          @203
  2700: 64 75                    s0 = a0
  2702: 82 77                    a0 = u64 [a0]
  2704: 97 79 01                 a2 = a0 << 0x1
  2707: 33 0a 08                 a3 = 0x8
  2710: e4 a8 08                 a1 = maxu(a1, a3)
  2713: e4 89 06                 s1 = maxu(a2, a1)
  2716: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  2719: 98 88 3f                 a1 = a1 >> 0x3f
  2722: 51 07 12                 jump @205 if a0 == 0
      :                          @204
  2725: 82 59 08                 a2 = u64 [s0 + 0x8]
  2728: 7b 19 18                 u64 [sp + 0x18] = a2
  2731: 49 11 20 01              u64 [sp + 32] = 0x1
  2735: 7b 17 28                 u64 [sp + 0x28] = a0
  2738: 28 06                    jump @206
      :                          @205
  2740: 49 11 20                 u64 [sp + 32] = 0
  2743: 01                       fallthrough
      :                          @206
  2744: 64 17                    a0 = sp
  2746: 95 1a 18                 a3 = sp + 0x18
  2749: 64 69                    a2 = s1
  2751: 50 10 68 6d fe           ra = 104, jump @170
      :                          @207 [@dyn 52]
  2756: 82 18                    a1 = u64 [sp]
  2758: 82 17 08                 a0 = u64 [sp + 0x8]
  2761: 51 08 14                 jump @211 if a1 == 0
      :                          @208
  2764: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  2774: aa 87 0d                 jump @212 if a0 == a1
      :                          @209
  2777: 52 07 18                 jump @213 if a0 != 0
      :                          @210
  2780: 00                       trap
      :                          @211
  2781: 7b 57 08                 u64 [s0 + 0x8] = a0
  2784: 7b 56                    u64 [s0] = s1
  2786: 01                       fallthrough
      :                          @212
  2787: 82 10 40                 ra = u64 [sp + 0x40]
  2790: 82 15 38                 s0 = u64 [sp + 0x38]
  2793: 82 16 30                 s1 = u64 [sp + 0x30]
  2796: 95 11 48                 sp = sp + 0x48
  2799: 32 00                    ret
      :                          @213
  2801: 00                       trap
      :                          @214
  2802: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  2805: 7b 10 30                 u64 [sp + 0x30] = ra
  2808: 7b 15 28                 u64 [sp + 0x28] = s0
  2811: 7b 16 20                 u64 [sp + 0x20] = s1
  2814: 64 89                    a2 = a1
  2816: 82 8a 08                 a3 = u64 [a1 + 0x8]
  2819: 64 75                    s0 = a0
  2821: 51 0a 35                 jump @219 if a3 == 0
      :                          @215
  2824: 82 98                    a1 = u64 [a2]
  2826: 33 07                    a0 = 0
  2828: 95 8b 08                 a4 = a1 + 0x8
  2831: 01                       fallthrough
      :                          @216
  2832: 82 bc                    a5 = u64 [a4]
  2834: c8 c7 07                 a0 = a0 + a5
  2837: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  2840: 95 bb 10                 a4 = a4 + 0x10
  2843: 52 0a f5                 jump @216 if a3 != 0
      :                          @217
  2846: 82 9a 18                 a3 = u64 [a2 + 0x18]
  2849: 51 0a 24                 jump @221 if a3 == 0
      :                          @218
  2852: 82 88 08                 a1 = u64 [a1 + 0x8]
  2855: 8e 88                    a1 = a1 >u 0
  2857: 88 7a 10                 a3 = a0 <u 0x10
  2860: 85 aa 01                 a3 = a3 ^ 0x1
  2863: d4 a8 08                 a1 = a1 | a3
  2866: 89 7a                    a3 = a0 <s 0
  2868: e0 a8 08                 a1 = a1 & ~a3
  2871: 52 08 0a                 jump @220 if a1 != 0
      :                          @219
  2874: 33 07                    a0 = 0
  2876: 33 08 01                 a1 = 0x1
  2879: 28 4a                    jump @229
      :                          @220
  2881: 97 77 01                 a0 = a0 << 0x1
  2884: 01                       fallthrough
      :                          @221
  2885: 51 07 40                 jump @228 if a0 == 0
      :                          @222
  2888: 57 07 78                 jump @234 if a0 <s 0
      :                          @223
  2891: 64 52                    t0 = s0
  2893: 33 0b 20 00 03           a4 = 0x30020
  2898: 33 08 00 00 01           a1 = 0x10000
  2903: c8 8b 0b                 a4 = a4 + a1
  2906: 01                       fallthrough
      :                          @224
  2907: 82 bc                    a5 = u64 [a4]
  2909: c8 7c 0a                 a3 = a5 + a0
  2912: ac ca 5e                 jump @232 if a3 <u a5
      :                          @225
  2915: 95 a5 01                 s0 = a3 + 0x1
  2918: 88 56 01                 s1 = s0 <u 0x1
  2921: d8 58 05                 s0 = a1 <u s0
  2924: d4 65 05                 s0 = s0 | s1
  2927: 52 05 4f                 jump @232 if s0 != 0
      :                          @226
  2930: 82 b6                    s1 = u64 [a4]
  2932: ab c6 e7                 jump @224 if s1 != a5
      :                          @227
  2935: 7b ba                    u64 [a4] = a3
  2937: 33 08 20 00 04           a1 = 0x40020
  2942: c9 a8 08                 a1 = a1 - a3
  2945: 64 25                    s0 = t0
  2947: 28 06                    jump @229
      :                          @228
  2949: 33 08 01                 a1 = 0x1
  2952: 01                       fallthrough
      :                          @229
  2953: 7b 17                    u64 [sp] = a0
  2955: 7b 18 08                 u64 [sp + 0x8] = a1
  2958: 49 11 10                 u64 [sp + 16] = 0
  2961: 33 08 68 00 01           a1 = 0x10068
  2966: 64 17                    a0 = sp
  2968: 50 10 6a 7a 06           ra = 106, jump @358
      :                          @230 [@dyn 53]
  2973: 52 07 22                 jump @233 if a0 != 0
      :                          @231
  2976: 82 17 10                 a0 = u64 [sp + 0x10]
  2979: 82 18 08                 a1 = u64 [sp + 0x8]
  2982: 82 19                    a2 = u64 [sp]
  2984: 7b 57 10                 u64 [s0 + 0x10] = a0
  2987: 7b 58 08                 u64 [s0 + 0x8] = a1
  2990: 7b 59                    u64 [s0] = a2
  2992: 82 10 30                 ra = u64 [sp + 0x30]
  2995: 82 15 28                 s0 = u64 [sp + 0x28]
  2998: 82 16 20                 s1 = u64 [sp + 0x20]
  3001: 95 11 38                 sp = sp + 0x38
  3004: 32 00                    ret
      :                          @232
  3006: 00                       trap
      :                          @233
  3007: 00                       trap
      :                          @234
  3008: 00                       trap
      :                          @235 [@dyn 54]
  3009: 82 72                    t0 = u64 [a0]
  3011: 33 09 00 00 ff           a2 = 0xffffffffffff0000
  3016: 95 2a ff ff fe           a3 = t0 + 0xfffffffffffeffff
  3021: ac 9a 28                 jump @241 if a3 <u a2
      :                          @236
  3024: 82 77 08                 a0 = u64 [a0 + 0x8]
  3027: 33 09 20 00 03           a2 = 0x30020
  3032: 95 99 00 00 01           a2 = a2 + 0x10000
  3037: 01                       fallthrough
      :                          @237
  3038: 82 9a                    a3 = u64 [a2]
  3040: c9 a9 0b                 a4 = a2 - a3
  3043: ab 7b 12                 jump @241 if a4 != a0
      :                          @238
  3046: c9 2a 0b                 a4 = a3 - t0
  3049: 01                       fallthrough
      :                          @239
  3050: 82 9c                    a5 = u64 [a2]
  3052: ab ac f2                 jump @237 if a5 != a3
      :                          @240
  3055: 7b 9b                    u64 [a2] = a4
  3057: 33 08                    a1 = 0
  3059: 32 00                    ret
      :                          @241
  3061: 32 00                    ret
      :                          @242 [@dyn 55]
  3063: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3066: 7b 10 18                 u64 [sp + 0x18] = ra
  3069: 7b 15 10                 u64 [sp + 0x10] = s0
  3072: 7b 16 08                 u64 [sp + 0x8] = s1
  3075: 64 75                    s0 = a0
  3077: 82 7a 10                 a3 = u64 [a0 + 0x10]
  3080: 82 77                    a0 = u64 [a0]
  3082: c9 a7 07                 a0 = a0 - a3
  3085: 64 96                    s1 = a2
  3087: ac 97 2a                 jump @245 if a0 <u a2
      :                          @243
  3090: 7b 1a                    u64 [sp] = a3
  3092: 82 57 08                 a0 = u64 [s0 + 0x8]
  3095: c8 a7 07                 a0 = a0 + a3
  3098: 64 69                    a2 = s1
  3100: 50 10 70 4a 01           ra = 112, jump @264
      :                          @244 [@dyn 56]
  3105: 82 17                    a0 = u64 [sp]
  3107: c8 76 06                 s1 = s1 + a0
  3110: 7b 56 10                 u64 [s0 + 0x10] = s1
  3113: 33 07                    a0 = 0
  3115: 82 10 18                 ra = u64 [sp + 0x18]
  3118: 82 15 10                 s0 = u64 [sp + 0x10]
  3121: 82 16 08                 s1 = u64 [sp + 0x8]
  3124: 95 11 20                 sp = sp + 0x20
  3127: 32 00                    ret
      :                          @245
  3129: 64 57                    a0 = s0
  3131: 7b 18                    u64 [sp] = a1
  3133: 64 a8                    a1 = a3
  3135: 64 69                    a2 = s1
  3137: 50 10 72 74 fc           ra = 114, jump @158
      :                          @246 [@dyn 57]
  3142: 82 18                    a1 = u64 [sp]
  3144: 82 5a 10                 a3 = u64 [s0 + 0x10]
  3147: 28 c7                    jump @243
      :                          @247 [@dyn 58]
  3149: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  3152: 7b 10 20                 u64 [sp + 0x20] = ra
  3155: 7b 15 18                 u64 [sp + 0x18] = s0
  3158: 7b 16 10                 u64 [sp + 0x10] = s1
  3161: 64 86                    s1 = a1
  3163: 83 88                    i32 a1 = a1 + 0
  3165: 33 09 80 00              a2 = 0x80
  3169: 64 7a                    a3 = a0
  3171: ae 98 2b                 jump @252 if a1 >=u a2
      :                          @248
  3174: 82 a8 10                 a1 = u64 [a3 + 0x10]
  3177: 82 a7                    a0 = u64 [a3]
  3179: ab 78 12                 jump @251 if a1 != a0
      :                          @249
  3182: 64 a7                    a0 = a3
  3184: 64 a5                    s0 = a3
  3186: 50 10 76 08 fe           ra = 118, jump @202
      :                          @250 [@dyn 59]
  3191: 64 5a                    a3 = s0
  3193: 82 58 10                 a1 = u64 [s0 + 0x10]
  3196: 01                       fallthrough
      :                          @251
  3197: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3200: c8 87 07                 a0 = a0 + a1
  3203: 78 76                    u8 [a0] = s1
  3205: 95 88 01                 a1 = a1 + 0x1
  3208: 7b a8 10                 u64 [a3 + 0x10] = a1
  3211: 28 ab 00                 jump @260
      :                          @252
  3214: 8b 67 0b                 i32 a0 = s1 >> 0xb
  3217: 48 11 0c                 u32 [sp + 12] = 0
  3220: 52 07 1c                 jump @254 if a0 != 0
      :                          @253
  3223: 98 67 06                 a0 = s1 >> 0x6
  3226: 86 77 c0 00              a0 = a0 | 0xc0
  3230: 78 17 0c                 u8 [sp + 0xc] = a0
  3233: 84 67 3f                 a0 = s1 & 0x3f
  3236: 86 77 80 00              a0 = a0 | 0x80
  3240: 78 17 0d                 u8 [sp + 0xd] = a0
  3243: 33 06 02                 s1 = 0x2
  3246: 28 63                    jump @257
      :                          @254
  3248: 8b 67 10                 i32 a0 = s1 >> 0x10
  3251: 52 07 29                 jump @256 if a0 != 0
      :                          @255
  3254: 98 67 0c                 a0 = s1 >> 0xc
  3257: 86 77 e0 00              a0 = a0 | 0xe0
  3261: 78 17 0c                 u8 [sp + 0xc] = a0
  3264: 97 67 34                 a0 = s1 << 0x34
  3267: 98 77 3a                 a0 = a0 >> 0x3a
  3270: 95 77 80 00              a0 = a0 + 0x80
  3274: 78 17 0d                 u8 [sp + 0xd] = a0
  3277: 84 67 3f                 a0 = s1 & 0x3f
  3280: 86 77 80 00              a0 = a0 | 0x80
  3284: 78 17 0e                 u8 [sp + 0xe] = a0
  3287: 33 06 03                 s1 = 0x3
  3290: 28 37                    jump @257
      :                          @256
  3292: 97 67 2b                 a0 = s1 << 0x2b
  3295: 98 77 3d                 a0 = a0 >> 0x3d
  3298: 95 77 f0 00              a0 = a0 + 0xf0
  3302: 78 17 0c                 u8 [sp + 0xc] = a0
  3305: 97 67 2e                 a0 = s1 << 0x2e
  3308: 98 77 3a                 a0 = a0 >> 0x3a
  3311: 95 77 80 00              a0 = a0 + 0x80
  3315: 78 17 0d                 u8 [sp + 0xd] = a0
  3318: 97 67 34                 a0 = s1 << 0x34
  3321: 98 77 3a                 a0 = a0 >> 0x3a
  3324: 95 77 80 00              a0 = a0 + 0x80
  3328: 78 17 0e                 u8 [sp + 0xe] = a0
  3331: 84 67 3f                 a0 = s1 & 0x3f
  3334: 86 77 80 00              a0 = a0 | 0x80
  3338: 78 17 0f                 u8 [sp + 0xf] = a0
  3341: 33 06 04                 s1 = 0x4
  3344: 01                       fallthrough
      :                          @257
  3345: 82 a5 10                 s0 = u64 [a3 + 0x10]
  3348: 82 a7                    a0 = u64 [a3]
  3350: c9 57 07                 a0 = a0 - s0
  3353: ac 67 2d                 jump @261 if a0 <u s1
      :                          @258
  3356: 7b 1a                    u64 [sp] = a3
  3358: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3361: c8 57 07                 a0 = a0 + s0
  3364: 95 18 0c                 a1 = sp + 0xc
  3367: 64 69                    a2 = s1
  3369: 50 10 78 3d              ra = 120, jump @264
      :                          @259 [@dyn 60]
  3373: c8 56 06                 s1 = s1 + s0
  3376: 82 17                    a0 = u64 [sp]
  3378: 7b 76 10                 u64 [a0 + 0x10] = s1
  3381: 01                       fallthrough
      :                          @260
  3382: 33 07                    a0 = 0
  3384: 82 10 20                 ra = u64 [sp + 0x20]
  3387: 82 15 18                 s0 = u64 [sp + 0x18]
  3390: 82 16 10                 s1 = u64 [sp + 0x10]
  3393: 95 11 28                 sp = sp + 0x28
  3396: 32 00                    ret
      :                          @261
  3398: 64 a7                    a0 = a3
  3400: 64 58                    a1 = s0
  3402: 64 69                    a2 = s1
  3404: 64 a5                    s0 = a3
  3406: 50 10 7a 67 fb           ra = 122, jump @158
      :                          @262 [@dyn 61]
  3411: 64 5a                    a3 = s0
  3413: 82 55 10                 s0 = u64 [s0 + 0x10]
  3416: 28 c4                    jump @258
      :                          @263 [@dyn 62]
  3418: 64 8a                    a3 = a1
  3420: 33 08 68 00 01           a1 = 0x10068
  3425: 64 a9                    a2 = a3
  3427: 28 af 04                 jump @358
      :                          @264
  3430: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3433: 7b 10 18                 u64 [sp + 0x18] = ra
  3436: 7b 15 10                 u64 [sp + 0x10] = s0
  3439: 7b 16 08                 u64 [sp + 0x8] = s1
  3442: 53 19 10 64              jump @273 if a2 <u 16
      :                          @265
  3446: 8d 7a                    i32 a3 = -a0
  3448: 84 a2 07                 t0 = a3 & 0x7
  3451: c8 27 0b                 a4 = a0 + t0
  3454: 51 02 15                 jump @268 if t0 == 0
      :                          @266
  3457: 64 8c                    a5 = a1
  3459: 64 75                    s0 = a0
  3461: 01                       fallthrough
      :                          @267
  3462: 7c ca                    a3 = u8 [a5]
  3464: 78 5a                    u8 [s0] = a3
  3466: 95 55 01                 s0 = s0 + 0x1
  3469: 95 cc 01                 a5 = a5 + 0x1
  3472: ac b5 f6                 jump @267 if s0 <u a4
      :                          @268
  3475: c8 28 03                 t1 = a1 + t0
  3478: c9 29 02                 t0 = a2 - t0
  3481: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  3484: 84 38 07                 a1 = t1 & 0x7
  3487: c8 4b 0a                 a3 = a4 + t2
  3490: 51 08 3b                 jump @275 if a1 == 0
      :                          @269
  3493: 58 04 4b                 jump @278 if t2 <=s 0
      :                          @270
  3496: 97 38 03                 a1 = t1 << 0x3
  3499: 84 80 38                 ra = a1 & 0x38
  3502: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  3505: 82 c5                    s0 = u64 [a5]
  3507: 8d 88                    i32 a1 = -a1
  3509: 84 88 38                 a1 = a1 & 0x38
  3512: 95 cc 08                 a5 = a5 + 0x8
  3515: 01                       fallthrough
      :                          @271
  3516: 82 c6                    s1 = u64 [a5]
  3518: d0 05 05                 s0 = s0 >> ra
  3521: cf 86 09                 a2 = s1 << a1
  3524: d4 59 09                 a2 = a2 | s0
  3527: 7b b9                    u64 [a4] = a2
  3529: 95 bb 08                 a4 = a4 + 0x8
  3532: 95 cc 08                 a5 = a5 + 0x8
  3535: 64 65                    s0 = s1
  3537: ac ab eb                 jump @271 if a4 <u a3
      :                          @272
  3540: 28 1c                    jump @278
      :                          @273
  3542: 64 7a                    a3 = a0
  3544: 52 09 21                 jump @279 if a2 != 0
      :                          @274
  3547: 28 2f                    jump @281
      :                          @275
  3549: 58 04 13                 jump @278 if t2 <=s 0
      :                          @276
  3552: 64 38                    a1 = t1
  3554: 01                       fallthrough
      :                          @277
  3555: 82 89                    a2 = u64 [a1]
  3557: 7b b9                    u64 [a4] = a2
  3559: 95 bb 08                 a4 = a4 + 0x8
  3562: 95 88 08                 a1 = a1 + 0x8
  3565: ac ab f6                 jump @277 if a4 <u a3
      :                          @278
  3568: c8 43 08                 a1 = t1 + t2
  3571: 84 29 07                 a2 = t0 & 0x7
  3574: 51 09 14                 jump @281 if a2 == 0
      :                          @279
  3577: c8 a9 09                 a2 = a2 + a3
  3580: 01                       fallthrough
      :                          @280
  3581: 7c 8b                    a4 = u8 [a1]
  3583: 78 ab                    u8 [a3] = a4
  3585: 95 aa 01                 a3 = a3 + 0x1
  3588: 95 88 01                 a1 = a1 + 0x1
  3591: ac 9a f6                 jump @280 if a3 <u a2
      :                          @281
  3594: 82 10 18                 ra = u64 [sp + 0x18]
  3597: 82 15 10                 s0 = u64 [sp + 0x10]
  3600: 82 16 08                 s1 = u64 [sp + 0x8]
  3603: 95 11 20                 sp = sp + 0x20
  3606: 32 00                    ret
      :                          @282
  3608: 8d 7a                    i32 a3 = -a0
  3610: 84 aa 07                 a3 = a3 & 0x7
  3613: c8 a7 0b                 a4 = a0 + a3
  3616: 51 0a 0e                 jump @285 if a3 == 0
      :                          @283
  3619: 64 7c                    a5 = a0
  3621: 01                       fallthrough
      :                          @284
  3622: 78 c8                    u8 [a5] = a1
  3624: 95 cc 01                 a5 = a5 + 0x1
  3627: ac bc fb                 jump @284 if a5 <u a4
      :                          @285
  3630: c9 a9 03                 t1 = a2 - a3
  3633: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  3636: c8 cb 0a                 a3 = a4 + a5
  3639: 58 0c 1d                 jump @288 if a5 <=s 0
      :                          @286
  3642: 84 82 ff 00              t0 = a1 & 0xff
  3646: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  3656: ca 92 0c                 a5 = t0 * a2
  3659: 01                       fallthrough
      :                          @287
  3660: 7b bc                    u64 [a4] = a5
  3662: 95 bb 08                 a4 = a4 + 0x8
  3665: ac ab fb                 jump @287 if a4 <u a3
      :                          @288
  3668: 84 39 07                 a2 = t1 & 0x7
  3671: 52 09 05                 jump @290 if a2 != 0
      :                          @289
  3674: 28 0e                    jump @292
      :                          @290
  3676: c8 a9 09                 a2 = a2 + a3
  3679: 01                       fallthrough
      :                          @291
  3680: 78 a8                    u8 [a3] = a1
  3682: 95 aa 01                 a3 = a3 + 0x1
  3685: ac 9a fb                 jump @291 if a3 <u a2
      :                          @292
  3688: 32 00                    ret
      :                          @293 [@dyn 63]
  3690: 82 77                    a0 = u64 [a0]
  3692: 01                       fallthrough
      :                          @294
  3693: 28                       jump @294
      :                          @295 [@dyn 64]
  3694: 82 77                    a0 = u64 [a0]
  3696: 01                       fallthrough
      :                          @296
  3697: 95 11 a8                 sp = sp + 0xffffffffffffffa8
  3700: 7b 10 50                 u64 [sp + 0x50] = ra
  3703: 7b 15 48                 u64 [sp + 0x48] = s0
  3706: 7b 16 40                 u64 [sp + 0x40] = s1
  3709: 7b 18                    u64 [sp] = a1
  3711: 98 79 04                 a2 = a0 >> 0x4
  3714: 33 08 27                 a1 = 0x27
  3717: 53 29 71 02 81 00        jump @299 if a2 <u 625
      :                          @297
  3723: 33 08 27                 a1 = 0x27
  3726: 95 1a 3e                 a3 = sp + 0x3e
  3729: 3a 09 00 00 03           a2 = u64 [0x30000]
  3734: 7b 19 10                 u64 [sp + 0x10] = a2
  3737: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
  3743: 33 04 7b 14              t2 = 0x147b
  3747: 33 0b dc 00 01           a4 = 0x100dc
  3752: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
  3758: 01                       fallthrough
      :                          @298
  3759: 64 72                    t0 = a0
  3761: 82 17 10                 a0 = u64 [sp + 0x10]
  3764: d6 72 07                 a0 = t0 mulhu a0
  3767: 98 77 0b                 a0 = a0 >> 0xb
  3770: 82 19 08                 a2 = u64 [sp + 0x8]
  3773: c0 97 0c                 i32 a5 = a0 * a2
  3776: c8 2c 06                 s1 = a5 + t0
  3779: 97 6c 30                 a5 = s1 << 0x30
  3782: 98 cc 32                 a5 = a5 >> 0x32
  3785: ca 4c 0c                 a5 = a5 * t2
  3788: 98 c3 11                 t1 = a5 >> 0x11
  3791: 98 cc 10                 a5 = a5 >> 0x10
  3794: 84 cc fe 07              a5 = a5 & 0x7fe
  3798: 96 39 9c                 a2 = t1 * 0xffffffffffffff9c
  3801: c8 69 09                 a2 = a2 + s1
  3804: 97 99 31                 a2 = a2 << 0x31
  3807: 98 99 30                 a2 = a2 >> 0x30
  3810: c8 bc 0c                 a5 = a5 + a4
  3813: 7c c6                    s1 = u8 [a5]
  3815: 7c cc 01                 a5 = u8 [a5 + 0x1]
  3818: c8 b9 09                 a2 = a2 + a4
  3821: 7c 95 01                 s0 = u8 [a2 + 0x1]
  3824: 7c 99                    a2 = u8 [a2]
  3826: 78 ac ff                 u8 [a3 + 0xffffffffffffffff] = a5
  3829: 78 a6 fe                 u8 [a3 + 0xfffffffffffffffe] = s1
  3832: 78 a5 01                 u8 [a3 + 0x1] = s0
  3835: 78 a9                    u8 [a3] = a2
  3837: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
  3840: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
  3843: ac 20 ac                 jump @298 if ra <u t0
      :                          @299
  3846: 54 17 63 3b              jump @301 if a0 <=u 99
      :                          @300
  3850: 97 79 30                 a2 = a0 << 0x30
  3853: 98 99 32                 a2 = a2 >> 0x32
  3856: 96 99 7b 14              a2 = a2 * 0x147b
  3860: 98 99 11                 a2 = a2 >> 0x11
  3863: 96 9a 9c                 a3 = a2 * 0xffffffffffffff9c
  3866: c8 a7 07                 a0 = a0 + a3
  3869: 97 77 31                 a0 = a0 << 0x31
  3872: 98 77 30                 a0 = a0 >> 0x30
  3875: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  3878: 33 0a dc 00 01           a3 = 0x100dc
  3883: c8 a7 07                 a0 = a0 + a3
  3886: 7c 7a 01                 a3 = u8 [a0 + 0x1]
  3889: 7c 77                    a0 = u8 [a0]
  3891: 95 1b 19                 a4 = sp + 0x19
  3894: c8 8b 0b                 a4 = a4 + a1
  3897: 78 ba 01                 u8 [a4 + 0x1] = a3
  3900: 78 b7                    u8 [a4] = a0
  3902: 64 97                    a0 = a2
  3904: 01                       fallthrough
      :                          @301
  3905: 55 17 0a 14              jump @303 if a0 >=u 10
      :                          @302
  3909: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  3912: 95 19 19                 a2 = sp + 0x19
  3915: c8 89 09                 a2 = a2 + a1
  3918: 83 77 30                 i32 a0 = a0 + 0x30
  3921: 78 97                    u8 [a2] = a0
  3923: 28 21                    jump @304
      :                          @303
  3925: 97 77 01                 a0 = a0 << 0x1
  3928: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  3931: 33 09 dc 00 01           a2 = 0x100dc
  3936: c8 97 07                 a0 = a0 + a2
  3939: 7c 79 01                 a2 = u8 [a0 + 0x1]
  3942: 7c 77                    a0 = u8 [a0]
  3944: 95 1a 19                 a3 = sp + 0x19
  3947: c8 8a 0a                 a3 = a3 + a1
  3950: 78 a9 01                 u8 [a3 + 0x1] = a2
  3953: 78 a7                    u8 [a3] = a0
  3955: 01                       fallthrough
      :                          @304
  3956: 95 1a 19                 a3 = sp + 0x19
  3959: c8 8a 0a                 a3 = a3 + a1
  3962: 9a 8b 27                 a4 = 0x27 - a1
  3965: 33 08 98 00 01           a1 = 0x10098
  3970: 82 17                    a0 = u64 [sp]
  3972: 33 09                    a2 = 0
  3974: 50 20 82 00 13           ra = 130, jump @306
      :                          @305 [@dyn 65]
  3979: 82 10 50                 ra = u64 [sp + 0x50]
  3982: 82 15 48                 s0 = u64 [sp + 0x48]
  3985: 82 16 40                 s1 = u64 [sp + 0x40]
  3988: 95 11 58                 sp = sp + 0x58
  3991: 32 00                    ret
      :                          @306
  3993: 95 11 98                 sp = sp + 0xffffffffffffff98
  3996: 7b 10 60                 u64 [sp + 0x60] = ra
  3999: 7b 15 58                 u64 [sp + 0x58] = s0
  4002: 7b 16 50                 u64 [sp + 0x50] = s1
  4005: 80 73 34                 t1 = u32 [a0 + 0x34]
  4008: 7b 1a 20                 u64 [sp + 0x20] = a3
  4011: 64 9c                    a5 = a2
  4013: 84 36 01                 s1 = t1 & 0x1
  4016: 33 02 2b                 t0 = 0x2b
  4019: 33 09 00 00 11           a2 = 0x110000
  4024: 84 3a 04                 a3 = t1 & 0x4
  4027: 7b 1b 28                 u64 [sp + 0x28] = a4
  4030: c8 b6 04                 t2 = s1 + a4
  4033: 7b 1c 30                 u64 [sp + 0x30] = a5
  4036: 52 0a 10                 jump @309 if a3 != 0
      :                          @307
  4039: 49 11 38                 u64 [sp + 56] = 0
  4042: 82 78                    a1 = u64 [a0]
  4044: 94 69 2b                 a2 = 0x2b if s1 != 0
  4047: 52 08 35                 jump @313 if a1 != 0
      :                          @308
  4050: 28 56                    jump @318
      :                          @309
  4052: 7b 18 38                 u64 [sp + 0x38] = a1
  4055: 33 09                    a2 = 0
  4057: 51 0c 1b                 jump @312 if a5 == 0
      :                          @310
  4060: 82 1b 38                 a4 = u64 [sp + 0x38]
  4063: 01                       fallthrough
      :                          @311
  4064: 7d b5                    s0 = i8 [a4]
  4066: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
  4069: 85 5a 01                 a3 = s0 ^ 0x1
  4072: c8 a9 09                 a2 = a2 + a3
  4075: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  4078: 95 bb 01                 a4 = a4 + 0x1
  4081: 52 0c ef                 jump @311 if a5 != 0
      :                          @312
  4084: c8 94 04                 t2 = t2 + a2
  4087: 33 09 00 00 11           a2 = 0x110000
  4092: 82 78                    a1 = u64 [a0]
  4094: db 62 09                 a2 = t0 if s1 != 0
  4097: 51 08 27                 jump @318 if a1 == 0
      :                          @313
  4100: 82 7a 08                 a3 = u64 [a0 + 0x8]
  4103: ae a4 21                 jump @318 if t2 >=u a3
      :                          @314
  4106: 84 38 08                 a1 = t1 & 0x8
  4109: 52 08 51                 jump @321 if a1 != 0
      :                          @315
  4112: 7c 76 38                 s1 = u8 [a0 + 0x38]
  4115: c9 4a 0a                 a3 = a3 - t2
  4118: 7b 19 18                 u64 [sp + 0x18] = a2
  4121: 5a 16 01 a0 00           jump @328 if s1 >s 1
      :                          @316
  4126: 52 06 ad 00              jump @330 if s1 != 0
      :                          @317
  4130: 7b 1a 10                 u64 [sp + 0x10] = a3
  4133: 28 ac 00                 jump @331
      :                          @318
  4136: 82 75 20                 s0 = u64 [a0 + 0x20]
  4139: 82 76 28                 s1 = u64 [a0 + 0x28]
  4142: 64 57                    a0 = s0
  4144: 64 68                    a1 = s1
  4146: 82 1a 38                 a3 = u64 [sp + 0x38]
  4149: 82 1b 30                 a4 = u64 [sp + 0x30]
  4152: 50 20 84 00 75 01        ra = 132, jump @351
      :                          @319 [@dyn 66]
  4158: 33 08 01                 a1 = 0x1
  4161: 52 07 be 00              jump @336 if a0 != 0
      :                          @320
  4165: 82 6c 18                 a5 = u64 [s1 + 0x18]
  4168: 64 57                    a0 = s0
  4170: 82 18 20                 a1 = u64 [sp + 0x20]
  4173: 82 19 28                 a2 = u64 [sp + 0x28]
  4176: 82 10 60                 ra = u64 [sp + 0x60]
  4179: 82 15 58                 s0 = u64 [sp + 0x58]
  4182: 82 16 50                 s1 = u64 [sp + 0x50]
  4185: 95 11 68                 sp = sp + 0x68
  4188: 32 0c                    jump [a5]
      :                          @321
  4190: 7b 1a 40                 u64 [sp + 0x40] = a3
  4193: 64 45                    s0 = t2
  4195: 81 78 30                 a1 = i32 [a0 + 0x30]
  4198: 7b 18 10                 u64 [sp + 0x10] = a1
  4201: 7c 7a 38                 a3 = u8 [a0 + 0x38]
  4204: 7b 1a 08                 u64 [sp + 0x8] = a3
  4207: 82 7a 20                 a3 = u64 [a0 + 0x20]
  4210: 82 78 28                 a1 = u64 [a0 + 0x28]
  4213: 48 17 30 30              u32 [a0 + 48] = 0x30
  4217: 7b 17                    u64 [sp] = a0
  4219: 46 17 38 01              u8 [a0 + 56] = 0x1
  4223: 7b 1a 48                 u64 [sp + 0x48] = a3
  4226: 64 a7                    a0 = a3
  4228: 64 86                    s1 = a1
  4230: 82 1a 38                 a3 = u64 [sp + 0x38]
  4233: 82 1b 30                 a4 = u64 [sp + 0x30]
  4236: 50 20 86 00 21 01        ra = 134, jump @351
      :                          @322 [@dyn 67]
  4242: 52 07 69                 jump @335 if a0 != 0
      :                          @323
  4245: 82 17 40                 a0 = u64 [sp + 0x40]
  4248: c9 57 05                 s0 = a0 - s0
  4251: 95 55 01                 s0 = s0 + 0x1
  4254: 01                       fallthrough
      :                          @324
  4255: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  4258: 51 05 cb 00              jump @346 if s0 == 0
      :                          @325
  4262: 82 69 20                 a2 = u64 [s1 + 0x20]
  4265: 33 08 30                 a1 = 0x30
  4268: 82 17 48                 a0 = u64 [sp + 0x48]
  4271: b4 90 02 88 00           ra = 136, jump [a2]
      :                          @326 [@dyn 68]
  4276: 51 07 eb                 jump @324 if a0 == 0
      :                          @327
  4279: 28 44                    jump @335
      :                          @328
  4281: 52 16 02 12              jump @330 if s1 != 2
      :                          @329
  4285: 98 a6 01                 s1 = a3 >> 0x1
  4288: 95 a8 01                 a1 = a3 + 0x1
  4291: 98 88 01                 a1 = a1 >> 0x1
  4294: 7b 18 10                 u64 [sp + 0x10] = a1
  4297: 28 08                    jump @331
      :                          @330
  4299: 64 a6                    s1 = a3
  4301: 49 11 10                 u64 [sp + 16] = 0
  4304: 01                       fallthrough
      :                          @331
  4305: 82 78 20                 a1 = u64 [a0 + 0x20]
  4308: 7b 18 48                 u64 [sp + 0x48] = a1
  4311: 82 75 28                 s0 = u64 [a0 + 0x28]
  4314: 81 77 30                 a0 = i32 [a0 + 0x30]
  4317: 7b 17 40                 u64 [sp + 0x40] = a0
  4320: 95 66 01                 s1 = s1 + 0x1
  4323: 01                       fallthrough
      :                          @332
  4324: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  4327: 51 06 28                 jump @337 if s1 == 0
      :                          @333
  4330: 82 59 20                 a2 = u64 [s0 + 0x20]
  4333: 82 17 48                 a0 = u64 [sp + 0x48]
  4336: 82 18 40                 a1 = u64 [sp + 0x40]
  4339: b4 90 02 8a 00           ra = 138, jump [a2]
      :                          @334 [@dyn 69]
  4344: 51 07 ec                 jump @332 if a0 == 0
      :                          @335
  4347: 33 08 01                 a1 = 0x1
  4350: 01                       fallthrough
      :                          @336
  4351: 64 87                    a0 = a1
  4353: 82 10 60                 ra = u64 [sp + 0x60]
  4356: 82 15 58                 s0 = u64 [sp + 0x58]
  4359: 82 16 50                 s1 = u64 [sp + 0x50]
  4362: 95 11 68                 sp = sp + 0x68
  4365: 32 00                    ret
      :                          @337
  4367: 82 16 48                 s1 = u64 [sp + 0x48]
  4370: 64 67                    a0 = s1
  4372: 64 58                    a1 = s0
  4374: 82 19 18                 a2 = u64 [sp + 0x18]
  4377: 82 1a 38                 a3 = u64 [sp + 0x38]
  4380: 82 1b 30                 a4 = u64 [sp + 0x30]
  4383: 50 20 8c 00 8e 00        ra = 140, jump @351
      :                          @338 [@dyn 70]
  4389: 33 08 01                 a1 = 0x1
  4392: 52 07 d7                 jump @336 if a0 != 0
      :                          @339
  4395: 82 5a 18                 a3 = u64 [s0 + 0x18]
  4398: 64 67                    a0 = s1
  4400: 82 18 20                 a1 = u64 [sp + 0x20]
  4403: 82 19 28                 a2 = u64 [sp + 0x28]
  4406: b4 a0 02 8e 00           ra = 142, jump [a3]
      :                          @340 [@dyn 71]
  4411: 33 08 01                 a1 = 0x1
  4414: 52 07 c1                 jump @336 if a0 != 0
      :                          @341
  4417: 82 17 10                 a0 = u64 [sp + 0x10]
  4420: 9a 77                    a0 = -a0
  4422: 7b 17 38                 u64 [sp + 0x38] = a0
  4425: 33 06 ff                 s1 = 0xffffffffffffffff
  4428: 01                       fallthrough
      :                          @342
  4429: 82 17 38                 a0 = u64 [sp + 0x38]
  4432: c8 67 07                 a0 = a0 + s1
  4435: 51 17 ff 45              jump @349 if a0 == 4294967295
      :                          @343
  4439: 82 59 20                 a2 = u64 [s0 + 0x20]
  4442: 82 17 48                 a0 = u64 [sp + 0x48]
  4445: 82 18 40                 a1 = u64 [sp + 0x40]
  4448: b4 90 02 90 00           ra = 144, jump [a2]
      :                          @344 [@dyn 72]
  4453: 95 66 01                 s1 = s1 + 0x1
  4456: 51 07 e5                 jump @342 if a0 == 0
      :                          @345
  4459: 28 39                    jump @350
      :                          @346
  4461: 82 6a 18                 a3 = u64 [s1 + 0x18]
  4464: 82 17 48                 a0 = u64 [sp + 0x48]
  4467: 82 18 20                 a1 = u64 [sp + 0x20]
  4470: 82 19 28                 a2 = u64 [sp + 0x28]
  4473: b4 a0 02 92 00           ra = 146, jump [a3]
      :                          @347 [@dyn 73]
  4478: 33 08 01                 a1 = 0x1
  4481: 52 07 7e ff              jump @336 if a0 != 0
      :                          @348
  4485: 33 08                    a1 = 0
  4487: 82 16                    s1 = u64 [sp]
  4489: 82 17 10                 a0 = u64 [sp + 0x10]
  4492: 7a 67 30                 u32 [s1 + 0x30] = a0
  4495: 82 17 08                 a0 = u64 [sp + 0x8]
  4498: 78 67 38                 u8 [s1 + 0x38] = a0
  4501: 28 6a ff                 jump @336
      :                          @349
  4504: 82 16 10                 s1 = u64 [sp + 0x10]
  4507: 82 17 10                 a0 = u64 [sp + 0x10]
  4510: d8 76 08                 a1 = s1 <u a0
  4513: 28 5e ff                 jump @336
      :                          @350
  4516: 82 17 10                 a0 = u64 [sp + 0x10]
  4519: d8 76 08                 a1 = s1 <u a0
  4522: 28 55 ff                 jump @336
      :                          @351
  4525: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  4528: 7b 10 20                 u64 [sp + 0x20] = ra
  4531: 7b 15 18                 u64 [sp + 0x18] = s0
  4534: 7b 16 10                 u64 [sp + 0x10] = s1
  4537: 83 9c                    i32 a5 = a2 + 0
  4539: 33 02 00 00 11           t0 = 0x110000
  4544: 64 a6                    s1 = a3
  4546: 64 85                    s0 = a1
  4548: 64 7a                    a3 = a0
  4550: aa 2c 21                 jump @354 if a5 == t0
      :                          @352
  4553: 82 5c 20                 a5 = u64 [s0 + 0x20]
  4556: 64 a7                    a0 = a3
  4558: 64 98                    a1 = a2
  4560: 7b 1b 08                 u64 [sp + 0x8] = a4
  4563: 7b 1a                    u64 [sp] = a3
  4565: b4 c0 02 94 00           ra = 148, jump [a5]
      :                          @353 [@dyn 74]
  4570: 82 1a                    a3 = u64 [sp]
  4572: 82 1b 08                 a4 = u64 [sp + 0x8]
  4575: 64 78                    a1 = a0
  4577: 33 07 01                 a0 = 0x1
  4580: 52 08 20                 jump @357 if a1 != 0
      :                          @354
  4583: 51 06 1a                 jump @356 if s1 == 0
      :                          @355
  4586: 82 5c 18                 a5 = u64 [s0 + 0x18]
  4589: 64 a7                    a0 = a3
  4591: 64 68                    a1 = s1
  4593: 64 b9                    a2 = a4
  4595: 82 10 20                 ra = u64 [sp + 0x20]
  4598: 82 15 18                 s0 = u64 [sp + 0x18]
  4601: 82 16 10                 s1 = u64 [sp + 0x10]
  4604: 95 11 28                 sp = sp + 0x28
  4607: 32 0c                    jump [a5]
      :                          @356
  4609: 33 07                    a0 = 0
  4611: 01                       fallthrough
      :                          @357
  4612: 82 10 20                 ra = u64 [sp + 0x20]
  4615: 82 15 18                 s0 = u64 [sp + 0x18]
  4618: 82 16 10                 s1 = u64 [sp + 0x10]
  4621: 95 11 28                 sp = sp + 0x28
  4624: 32 00                    ret
      :                          @358
  4626: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  4630: 7b 10 80 00              u64 [sp + 0x80] = ra
  4634: 7b 15 78                 u64 [sp + 0x78] = s0
  4637: 7b 16 70                 u64 [sp + 0x70] = s1
  4640: 49 11 60 20              u64 [sp + 96] = 0x20
  4644: 33 0a 03                 a3 = 0x3
  4647: 78 1a 68                 u8 [sp + 0x68] = a3
  4650: 82 96 20                 s1 = u64 [a2 + 0x20]
  4653: 49 11 30                 u64 [sp + 48] = 0
  4656: 49 11 40                 u64 [sp + 64] = 0
  4659: 7b 17 50                 u64 [sp + 0x50] = a0
  4662: 7b 18 58                 u64 [sp + 0x58] = a1
  4665: 51 06 09 01              jump @380 if s1 == 0
      :                          @359
  4669: 82 97 28                 a0 = u64 [a2 + 0x28]
  4672: 51 07 78 01              jump @390 if a0 == 0
      :                          @360
  4676: 49 11 28                 u64 [sp + 40] = 0
  4679: 82 95                    s0 = u64 [a2]
  4681: 7b 19 08                 u64 [sp + 0x8] = a2
  4684: 82 98 10                 a1 = u64 [a2 + 0x10]
  4687: 7b 18 18                 u64 [sp + 0x18] = a1
  4690: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  4693: 97 88 03                 a1 = a1 << 0x3
  4696: 98 88 03                 a1 = a1 >> 0x3
  4699: 95 88 01                 a1 = a1 + 0x1
  4702: 7b 18                    u64 [sp] = a1
  4704: 95 55 08                 s0 = s0 + 0x8
  4707: 96 78 38                 a1 = a0 * 0x38
  4710: 95 66 18                 s1 = s1 + 0x18
  4713: 33 07 7e                 a0 = 0x7e
  4716: 7b 17 10                 u64 [sp + 0x10] = a0
  4719: 01                       fallthrough
      :                          @361
  4720: 7b 18 20                 u64 [sp + 0x20] = a1
  4723: 82 59                    a2 = u64 [s0]
  4725: 51 09 18                 jump @364 if a2 == 0
      :                          @362
  4728: 82 1a 58                 a3 = u64 [sp + 0x58]
  4731: 82 17 50                 a0 = u64 [sp + 0x50]
  4734: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  4737: 82 aa 18                 a3 = u64 [a3 + 0x18]
  4740: b4 a0 02 96 00           ra = 150, jump [a3]
      :                          @363 [@dyn 75]
  4745: 52 07 55 01              jump @393 if a0 != 0
      :                          @364
  4749: 81 67 10                 a0 = i32 [s1 + 0x10]
  4752: 7a 17 60                 u32 [sp + 0x60] = a0
  4755: 7c 67 18                 a0 = u8 [s1 + 0x18]
  4758: 78 17 68                 u8 [sp + 0x68] = a0
  4761: 81 67 14                 a0 = i32 [s1 + 0x14]
  4764: 7a 17 64                 u32 [sp + 0x64] = a0
  4767: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  4770: 82 67                    a0 = u64 [s1]
  4772: 51 08 26                 jump @369 if a1 == 0
      :                          @365
  4775: 52 18 01 16              jump @367 if a1 != 1
      :                          @366
  4779: 97 77 04                 a0 = a0 << 0x4
  4782: 82 18 18                 a1 = u64 [sp + 0x18]
  4785: c8 87 07                 a0 = a0 + a1
  4788: 82 78 08                 a1 = u64 [a0 + 0x8]
  4791: 82 19 10                 a2 = u64 [sp + 0x10]
  4794: aa 98 07                 jump @368 if a1 == a2
      :                          @367
  4797: 33 08                    a1 = 0
  4799: 28 0f                    jump @370
      :                          @368
  4801: 82 77                    a0 = u64 [a0]
  4803: 82 77                    a0 = u64 [a0]
  4805: 33 08 01                 a1 = 0x1
  4808: 28 06                    jump @370
      :                          @369
  4810: 33 08 01                 a1 = 0x1
  4813: 01                       fallthrough
      :                          @370
  4814: 7b 18 30                 u64 [sp + 0x30] = a1
  4817: 7b 17 38                 u64 [sp + 0x38] = a0
  4820: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  4823: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  4826: 51 08 26                 jump @375 if a1 == 0
      :                          @371
  4829: 52 18 01 16              jump @373 if a1 != 1
      :                          @372
  4833: 97 77 04                 a0 = a0 << 0x4
  4836: 82 18 18                 a1 = u64 [sp + 0x18]
  4839: c8 87 07                 a0 = a0 + a1
  4842: 82 78 08                 a1 = u64 [a0 + 0x8]
  4845: 82 19 10                 a2 = u64 [sp + 0x10]
  4848: aa 98 07                 jump @374 if a1 == a2
      :                          @373
  4851: 33 08                    a1 = 0
  4853: 28 0f                    jump @376
      :                          @374
  4855: 82 77                    a0 = u64 [a0]
  4857: 82 77                    a0 = u64 [a0]
  4859: 33 08 01                 a1 = 0x1
  4862: 28 06                    jump @376
      :                          @375
  4864: 33 08 01                 a1 = 0x1
  4867: 01                       fallthrough
      :                          @376
  4868: 7b 18 40                 u64 [sp + 0x40] = a1
  4871: 7b 17 48                 u64 [sp + 0x48] = a0
  4874: 82 67 08                 a0 = u64 [s1 + 0x8]
  4877: 97 77 04                 a0 = a0 << 0x4
  4880: 82 18 18                 a1 = u64 [sp + 0x18]
  4883: c8 78 08                 a1 = a1 + a0
  4886: 82 87                    a0 = u64 [a1]
  4888: 82 89 08                 a2 = u64 [a1 + 0x8]
  4891: 95 18 30                 a1 = sp + 0x30
  4894: b4 90 02 98 00           ra = 152, jump [a2]
      :                          @377 [@dyn 76]
  4899: 52 07 bb 00              jump @393 if a0 != 0
      :                          @378
  4903: 95 55 10                 s0 = s0 + 0x10
  4906: 82 18 20                 a1 = u64 [sp + 0x20]
  4909: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  4912: 95 66 38                 s1 = s1 + 0x38
  4915: 82 17 28                 a0 = u64 [sp + 0x28]
  4918: 95 77 01                 a0 = a0 + 0x1
  4921: 7b 17 28                 u64 [sp + 0x28] = a0
  4924: 52 08 34 ff              jump @361 if a1 != 0
      :                          @379
  4928: 28 6b                    jump @388
      :                          @380
  4930: 82 97 18                 a0 = u64 [a2 + 0x18]
  4933: 51 07 73                 jump @390 if a0 == 0
      :                          @381
  4936: 82 95 10                 s0 = u64 [a2 + 0x10]
  4939: 33 0a                    a3 = 0
  4941: 97 78 04                 a1 = a0 << 0x4
  4944: c8 58 08                 a1 = a1 + s0
  4947: 7b 18 20                 u64 [sp + 0x20] = a1
  4950: 7b 19 08                 u64 [sp + 0x8] = a2
  4953: 82 96                    s1 = u64 [a2]
  4955: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  4958: 97 77 04                 a0 = a0 << 0x4
  4961: 98 77 04                 a0 = a0 >> 0x4
  4964: 95 77 01                 a0 = a0 + 0x1
  4967: 7b 17                    u64 [sp] = a0
  4969: 95 66 08                 s1 = s1 + 0x8
  4972: 01                       fallthrough
      :                          @382
  4973: 7b 1a 28                 u64 [sp + 0x28] = a3
  4976: 82 69                    a2 = u64 [s1]
  4978: 51 09 17                 jump @385 if a2 == 0
      :                          @383
  4981: 82 1a 58                 a3 = u64 [sp + 0x58]
  4984: 82 17 50                 a0 = u64 [sp + 0x50]
  4987: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  4990: 82 aa 18                 a3 = u64 [a3 + 0x18]
  4993: b4 a0 02 9a 00           ra = 154, jump [a3]
      :                          @384 [@dyn 77]
  4998: 52 07 58                 jump @393 if a0 != 0
      :                          @385
  5001: 82 57                    a0 = u64 [s0]
  5003: 82 59 08                 a2 = u64 [s0 + 0x8]
  5006: 95 18 30                 a1 = sp + 0x30
  5009: b4 90 02 9c 00           ra = 156, jump [a2]
      :                          @386 [@dyn 78]
  5014: 52 07 48                 jump @393 if a0 != 0
      :                          @387
  5017: 95 66 10                 s1 = s1 + 0x10
  5020: 95 55 10                 s0 = s0 + 0x10
  5023: 82 1a 28                 a3 = u64 [sp + 0x28]
  5026: 95 aa 01                 a3 = a3 + 0x1
  5029: 82 17 20                 a0 = u64 [sp + 0x20]
  5032: ab 75 c5                 jump @382 if s0 != a0
      :                          @388
  5035: 82 19 08                 a2 = u64 [sp + 0x8]
  5038: 82 1a                    a3 = u64 [sp]
  5040: 82 97 08                 a0 = u64 [a2 + 0x8]
  5043: ac 7a 0d                 jump @391 if a3 <u a0
      :                          @389
  5046: 28 2d                    jump @394
      :                          @390
  5048: 33 0a                    a3 = 0
  5050: 82 97 08                 a0 = u64 [a2 + 0x8]
  5053: 54 07 26                 jump @394 if a0 <=u 0
      :                          @391
  5056: 82 97                    a0 = u64 [a2]
  5058: 97 a8 04                 a1 = a3 << 0x4
  5061: c8 87 09                 a2 = a0 + a1
  5064: 82 1a 58                 a3 = u64 [sp + 0x58]
  5067: 82 17 50                 a0 = u64 [sp + 0x50]
  5070: 82 98                    a1 = u64 [a2]
  5072: 82 99 08                 a2 = u64 [a2 + 0x8]
  5075: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5078: b4 a0 02 9e 00           ra = 158, jump [a3]
      :                          @392 [@dyn 79]
  5083: 51 07 08                 jump @394 if a0 == 0
      :                          @393
  5086: 33 07 01                 a0 = 0x1
  5089: 28 05                    jump @395
      :                          @394
  5091: 33 07                    a0 = 0
  5093: 01                       fallthrough
      :                          @395
  5094: 82 10 80 00              ra = u64 [sp + 0x80]
  5098: 82 15 78                 s0 = u64 [sp + 0x78]
  5101: 82 16 70                 s1 = u64 [sp + 0x70]
  5104: 95 11 88 00              sp = sp + 0x88
  5108: 32 00                    ret
      :                          @396 [@dyn 80]
  5110: 32 00                    ret
      :                          @397 [@dyn 81]
  5112: 95 11 80                 sp = sp + 0xffffffffffffff80
  5115: 7b 10 78                 u64 [sp + 0x78] = ra
  5118: 7b 15 70                 u64 [sp + 0x70] = s0
  5121: 7b 16 68                 u64 [sp + 0x68] = s1
  5124: 64 92                    t0 = a2
  5126: 33 00                    ra = 0
  5128: 33 0b                    a4 = 0
  5130: 33 05                    s0 = 0
  5132: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
  5142: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
  5148: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
  5158: 82 79 10                 a2 = u64 [a0 + 0x10]
  5161: 7b 19 48                 u64 [sp + 0x48] = a2
  5164: 82 79                    a2 = u64 [a0]
  5166: 7b 19 38                 u64 [sp + 0x38] = a2
  5169: 82 77 08                 a0 = u64 [a0 + 0x8]
  5172: 7b 17 30                 u64 [sp + 0x30] = a0
  5175: 33 07 d0 00 01           a0 = 0x100d0
  5180: 7b 17 08                 u64 [sp + 0x8] = a0
  5183: 3a 07 08 00 03           a0 = u64 [0x30008]
  5188: 7b 17 60                 u64 [sp + 0x60] = a0
  5191: 7b 18 58                 u64 [sp + 0x58] = a1
  5194: 95 88 08                 a1 = a1 + 0x8
  5197: 7b 18                    u64 [sp] = a1
  5199: 33 0c 0a                 a5 = 0xa
  5202: 7b 12 20                 u64 [sp + 0x20] = t0
  5205: 7b 13 18                 u64 [sp + 0x18] = t1
  5208: 7b 14 10                 u64 [sp + 0x10] = t2
  5211: 28 3b                    jump @401
      :                          @398
  5213: 64 06                    s1 = ra
  5215: c8 89 07                 a0 = a2 + a1
  5218: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
  5221: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  5224: 88 77 01                 a0 = a0 <u 0x1
  5227: 01                       fallthrough
      :                          @399
  5228: 82 1a 48                 a3 = u64 [sp + 0x48]
  5231: 78 a7                    u8 [a3] = a0
  5233: 82 17 30                 a0 = u64 [sp + 0x30]
  5236: 82 7a 18                 a3 = u64 [a0 + 0x18]
  5239: 82 17 38                 a0 = u64 [sp + 0x38]
  5242: b4 a0 02 a4 00           ra = 164, jump [a3]
      :                          @400 [@dyn 82]
  5247: 64 5b                    a4 = s0
  5249: 82 12 20                 t0 = u64 [sp + 0x20]
  5252: 82 13 18                 t1 = u64 [sp + 0x18]
  5255: 82 14 10                 t2 = u64 [sp + 0x10]
  5258: 64 60                    ra = s1
  5260: 33 0c 0a                 a5 = 0xa
  5263: 82 15 40                 s0 = u64 [sp + 0x40]
  5266: 52 07 64 01              jump @442 if a0 != 0
      :                          @401
  5270: 84 57 ff 00              a0 = s0 & 0xff
  5274: 52 07 58 01              jump @441 if a0 != 0
      :                          @402
  5278: 7b 1b 50                 u64 [sp + 0x50] = a4
  5281: ae 02 0a                 jump @405 if t0 >=u ra
      :                          @403
  5284: 28 ef 00                 jump @432
      :                          @404
  5287: ac 02 ec 00              jump @432 if t0 <u ra
      :                          @405
  5291: c9 02 08                 a1 = t0 - ra
  5294: 82 16 58                 s1 = u64 [sp + 0x58]
  5297: c8 06 06                 s1 = s1 + ra
  5300: 55 18 10 1d              jump @411 if a1 >=u 16
      :                          @406
  5304: aa 02 d8 00              jump @431 if t0 == ra
      :                          @407
  5308: 33 0a                    a3 = 0
  5310: 01                       fallthrough
      :                          @408
  5311: c8 a6 07                 a0 = s1 + a3
  5314: 7c 77                    a0 = u8 [a0]
  5316: aa c7 a5 00              jump @426 if a0 == a5
      :                          @409
  5320: 95 aa 01                 a3 = a3 + 0x1
  5323: ab a8 f4                 jump @408 if a1 != a3
      :                          @410
  5326: 28 c2 00                 jump @431
      :                          @411
  5329: 95 69 07                 a2 = s1 + 0x7
  5332: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
  5335: c9 6a 07                 a0 = a3 - s1
  5338: d3 6a 0a                 a3 = a3 ^ s1
  5341: 88 aa 01                 a3 = a3 <u 0x1
  5344: 88 7b 01                 a4 = a0 <u 0x1
  5347: d4 ba 0a                 a3 = a3 | a4
  5350: 51 0a 45                 jump @417 if a3 == 0
      :                          @412
  5353: 33 07                    a0 = 0
  5355: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  5358: 82 1b                    a4 = u64 [sp]
  5360: c8 0b 0b                 a4 = a4 + ra
  5363: 28 08                    jump @414
      :                          @413
  5365: 82 1b                    a4 = u64 [sp]
  5367: c8 0b 0b                 a4 = a4 + ra
  5370: 01                       fallthrough
      :                          @414
  5371: c8 76 0c                 a5 = s1 + a0
  5374: 82 cc                    a5 = u64 [a5]
  5376: c8 7b 09                 a2 = a4 + a0
  5379: 82 99                    a2 = u64 [a2]
  5381: d3 4c 05                 s0 = a5 ^ t2
  5384: c8 35 05                 s0 = s0 + t1
  5387: e0 c5 0c                 a5 = s0 & ~a5
  5390: d3 49 05                 s0 = a2 ^ t2
  5393: c8 35 05                 s0 = s0 + t1
  5396: e0 95 09                 a2 = s0 & ~a2
  5399: d4 c9 09                 a2 = a2 | a5
  5402: 82 1c 60                 a5 = u64 [sp + 0x60]
  5405: d2 c9 09                 a2 = a2 & a5
  5408: 52 09 1f                 jump @420 if a2 != 0
      :                          @415
  5411: 95 77 10                 a0 = a0 + 0x10
  5414: ae 7a d5                 jump @414 if a3 >=u a0
      :                          @416
  5417: 28 16                    jump @420
      :                          @417
  5419: c8 a6 0b                 a4 = s1 + a3
  5422: 7c bb                    a4 = u8 [a4]
  5424: aa cb 51                 jump @429 if a4 == a5
      :                          @418
  5427: 95 aa 01                 a3 = a3 + 0x1
  5430: ab a7 f5                 jump @417 if a0 != a3
      :                          @419
  5433: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  5436: ae 7a b9                 jump @413 if a3 >=u a0
      :                          @420
  5439: aa 87 9b 00              jump @438 if a0 == a1
      :                          @421
  5443: 33 0a                    a3 = 0
  5445: c8 76 06                 s1 = s1 + a0
  5448: c9 72 08                 a1 = t0 - a0
  5451: c9 08 08                 a1 = a1 - ra
  5454: 33 0c 0a                 a5 = 0xa
  5457: 82 1b 50                 a4 = u64 [sp + 0x50]
  5460: 01                       fallthrough
      :                          @422
  5461: c8 a6 09                 a2 = s1 + a3
  5464: 7c 99                    a2 = u8 [a2]
  5466: aa c9 0b                 jump @425 if a2 == a5
      :                          @423
  5469: 95 aa 01                 a3 = a3 + 0x1
  5472: ab a8 f5                 jump @422 if a1 != a3
      :                          @424
  5475: 28 2d                    jump @431
      :                          @425
  5477: c8 7a 0a                 a3 = a3 + a0
  5480: 01                       fallthrough
      :                          @426
  5481: c8 0a 0a                 a3 = a3 + ra
  5484: 95 a0 01                 ra = a3 + 0x1
  5487: ae 2a 38 ff              jump @404 if a3 >=u t0
      :                          @427
  5491: 82 17 58                 a0 = u64 [sp + 0x58]
  5494: c8 7a 0a                 a3 = a3 + a0
  5497: 7c a7                    a0 = u8 [a3]
  5499: ab c7 2c ff              jump @404 if a0 != a5
      :                          @428
  5503: 28 62                    jump @439
      :                          @429
  5505: 82 1b 50                 a4 = u64 [sp + 0x50]
  5508: c8 0a 0a                 a3 = a3 + ra
  5511: 95 a0 01                 ra = a3 + 0x1
  5514: ac 2a e9                 jump @427 if a3 <u t0
      :                          @430
  5517: 28 1a ff                 jump @404
      :                          @431
  5520: 64 20                    ra = t0
  5522: 01                       fallthrough
      :                          @432
  5523: 49 11 40 01              u64 [sp + 64] = 0x1
  5527: 64 b5                    s0 = a4
  5529: 64 26                    s1 = t0
  5531: aa 2b 57                 jump @441 if a4 == t0
      :                          @433
  5534: 82 17 48                 a0 = u64 [sp + 0x48]
  5537: 7c 77                    a0 = u8 [a0]
  5539: 51 07 23                 jump @436 if a0 == 0
      :                          @434
  5542: 82 17 30                 a0 = u64 [sp + 0x30]
  5545: 82 7a 18                 a3 = u64 [a0 + 0x18]
  5548: 33 09 04                 a2 = 0x4
  5551: 82 17 38                 a0 = u64 [sp + 0x38]
  5554: 82 18 08                 a1 = u64 [sp + 0x8]
  5557: 7b 10 28                 u64 [sp + 0x28] = ra
  5560: b4 a0 02 a6 00           ra = 166, jump [a3]
      :                          @435 [@dyn 83]
  5565: 82 1b 50                 a4 = u64 [sp + 0x50]
  5568: 82 10 28                 ra = u64 [sp + 0x28]
  5571: 52 07 33                 jump @442 if a0 != 0
      :                          @436
  5574: c9 b6 09                 a2 = s1 - a4
  5577: 82 18 58                 a1 = u64 [sp + 0x58]
  5580: c8 b8 08                 a1 = a1 + a4
  5583: ab b6 8e fe              jump @398 if s1 != a4
      :                          @437
  5587: 64 06                    s1 = ra
  5589: 33 07                    a0 = 0
  5591: 28 95 fe                 jump @399
      :                          @438
  5594: 64 20                    ra = t0
  5596: 82 1b 50                 a4 = u64 [sp + 0x50]
  5599: 28 b4                    jump @432
      :                          @439
  5601: 49 11 40                 u64 [sp + 64] = 0
  5604: 64 05                    s0 = ra
  5606: 64 06                    s1 = ra
  5608: 82 17 48                 a0 = u64 [sp + 0x48]
  5611: 7c 77                    a0 = u8 [a0]
  5613: 52 07 b9                 jump @434 if a0 != 0
      :                          @440
  5616: 28 d6                    jump @436
      :                          @441
  5618: 33 07                    a0 = 0
  5620: 28 06                    jump @443
      :                          @442
  5622: 33 07 01                 a0 = 0x1
  5625: 01                       fallthrough
      :                          @443
  5626: 82 10 78                 ra = u64 [sp + 0x78]
  5629: 82 15 70                 s0 = u64 [sp + 0x70]
  5632: 82 16 68                 s1 = u64 [sp + 0x68]
  5635: 95 11 80 00              sp = sp + 0x80
  5639: 32 00                    ret
      :                          @444 [@dyn 84]
  5641: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  5644: 7b 10 20                 u64 [sp + 0x20] = ra
  5647: 7b 15 18                 u64 [sp + 0x18] = s0
  5650: 7b 16 10                 u64 [sp + 0x10] = s1
  5653: 82 75 10                 s0 = u64 [a0 + 0x10]
  5656: 7c 59                    a2 = u8 [s0]
  5658: 82 7b                    a4 = u64 [a0]
  5660: 82 76 08                 s1 = u64 [a0 + 0x8]
  5663: 51 09 33                 jump @448 if a2 == 0
      :                          @445
  5666: 82 6a 18                 a3 = u64 [s1 + 0x18]
  5669: 7b 18 08                 u64 [sp + 0x8] = a1
  5672: 33 08 d0 00 01           a1 = 0x100d0
  5677: 33 09 04                 a2 = 0x4
  5680: 64 b7                    a0 = a4
  5682: 7b 1b                    u64 [sp] = a4
  5684: b4 a0 02 aa 00           ra = 170, jump [a3]
      :                          @446 [@dyn 85]
  5689: 82 18 08                 a1 = u64 [sp + 0x8]
  5692: 82 1b                    a4 = u64 [sp]
  5694: 51 07 14                 jump @448 if a0 == 0
      :                          @447
  5697: 33 07 01                 a0 = 0x1
  5700: 82 10 20                 ra = u64 [sp + 0x20]
  5703: 82 15 18                 s0 = u64 [sp + 0x18]
  5706: 82 16 10                 s1 = u64 [sp + 0x10]
  5709: 95 11 28                 sp = sp + 0x28
  5712: 32 00                    ret
      :                          @448
  5714: 83 87                    i32 a0 = a1 + 0
  5716: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  5719: 88 77 01                 a0 = a0 <u 0x1
  5722: 78 57                    u8 [s0] = a0
  5724: 82 6c 20                 a5 = u64 [s1 + 0x20]
  5727: 64 b7                    a0 = a4
  5729: 82 10 20                 ra = u64 [sp + 0x20]
  5732: 82 15 18                 s0 = u64 [sp + 0x18]
  5735: 82 16 10                 s1 = u64 [sp + 0x10]
  5738: 95 11 28                 sp = sp + 0x28
  5741: 32 0c                    jump [a5]
      :                          @449 [@dyn 86]
  5743: 64 8a                    a3 = a1
  5745: 33 08 a0 00 01           a1 = 0x100a0
  5750: 64 a9                    a2 = a3
  5752: 28 9a fb                 jump @358
      :                          @450
  5755: 95 11 70 ff              sp = sp + 0xffffffffffffff70
  5759: 7b 10 88 00              u64 [sp + 0x88] = ra
  5763: 7b 15 80 00              u64 [sp + 0x80] = s0
  5767: 7b 16 78                 u64 [sp + 0x78] = s1
  5770: 64 75                    s0 = a0
  5772: 7c 77 08                 a0 = u8 [a0 + 0x8]
  5775: 64 8b                    a4 = a1
  5777: 33 08 01                 a1 = 0x1
  5780: 33 06 01                 s1 = 0x1
  5783: 51 07 1d                 jump @452 if a0 == 0
      :                          @451
  5786: 78 56 08                 u8 [s0 + 0x8] = s1
  5789: 46 15 09 01              u8 [s0 + 9] = 0x1
  5793: 64 57                    a0 = s0
  5795: 82 10 88 00              ra = u64 [sp + 0x88]
  5799: 82 15 80 00              s0 = u64 [sp + 0x80]
  5803: 82 16 78                 s1 = u64 [sp + 0x78]
  5806: 95 11 90 00              sp = sp + 0x90
  5810: 32 00                    ret
      :                          @452
  5812: 64 9a                    a3 = a2
  5814: 82 5c                    a5 = u64 [s0]
  5816: 80 c7 34                 a0 = u32 [a5 + 0x34]
  5819: 7c 58 09                 a1 = u8 [s0 + 0x9]
  5822: 84 79 04                 a2 = a0 & 0x4
  5825: 52 09 45                 jump @458 if a2 != 0
      :                          @453
  5828: 51 08 32                 jump @456 if a1 == 0
      :                          @454
  5831: 82 c8 28                 a1 = u64 [a5 + 0x28]
  5834: 82 c7 20                 a0 = u64 [a5 + 0x20]
  5837: 82 83 18                 t1 = u64 [a1 + 0x18]
  5840: 33 08 d4 00 01           a1 = 0x100d4
  5845: 33 09 02                 a2 = 0x2
  5848: 64 a6                    s1 = a3
  5850: 7b 1b 10                 u64 [sp + 0x10] = a4
  5853: 7b 1c 08                 u64 [sp + 0x8] = a5
  5856: b4 30 02 ae 00           ra = 174, jump [t1]
      :                          @455 [@dyn 87]
  5861: 82 1c 08                 a5 = u64 [sp + 0x8]
  5864: 82 1b 10                 a4 = u64 [sp + 0x10]
  5867: 64 6a                    a3 = s1
  5869: 33 08 01                 a1 = 0x1
  5872: 33 06 01                 s1 = 0x1
  5875: 52 07 a7                 jump @451 if a0 != 0
      :                          @456
  5878: 64 b7                    a0 = a4
  5880: 64 c8                    a1 = a5
  5882: b4 a0 02 b0 00           ra = 176, jump [a3]
      :                          @457 [@dyn 88]
  5887: 33 08 01                 a1 = 0x1
  5890: 64 76                    s1 = a0
  5892: 28 96                    jump @451
      :                          @458
  5894: 52 08 37                 jump @462 if a1 != 0
      :                          @459
  5897: 82 c8 28                 a1 = u64 [a5 + 0x28]
  5900: 82 c7 20                 a0 = u64 [a5 + 0x20]
  5903: 82 83 18                 t1 = u64 [a1 + 0x18]
  5906: 33 08 d8 00 01           a1 = 0x100d8
  5911: 33 09 01                 a2 = 0x1
  5914: 33 06 01                 s1 = 0x1
  5917: 7b 1a                    u64 [sp] = a3
  5919: 7b 1b 10                 u64 [sp + 0x10] = a4
  5922: 7b 1c 08                 u64 [sp + 0x8] = a5
  5925: b4 30 02 b2 00           ra = 178, jump [t1]
      :                          @460 [@dyn 89]
  5930: 82 1c 08                 a5 = u64 [sp + 0x8]
  5933: 82 1b 10                 a4 = u64 [sp + 0x10]
  5936: 82 1a                    a3 = u64 [sp]
  5938: 33 08 01                 a1 = 0x1
  5941: 52 07 65 ff              jump @451 if a0 != 0
      :                          @461
  5945: 81 c7 34                 a0 = i32 [a5 + 0x34]
  5948: 01                       fallthrough
      :                          @462
  5949: 33 06 01                 s1 = 0x1
  5952: 78 16 37                 u8 [sp + 0x37] = s1
  5955: 82 c8 20                 a1 = u64 [a5 + 0x20]
  5958: 82 c9 28                 a2 = u64 [a5 + 0x28]
  5961: 7b 18 18                 u64 [sp + 0x18] = a1
  5964: 7b 19 20                 u64 [sp + 0x20] = a2
  5967: 95 18 37                 a1 = sp + 0x37
  5970: 7b 18 28                 u64 [sp + 0x28] = a1
  5973: 81 c8 30                 a1 = i32 [a5 + 0x30]
  5976: 7c c9 38                 a2 = u8 [a5 + 0x38]
  5979: 82 c3                    t1 = u64 [a5]
  5981: 82 c4 08                 t2 = u64 [a5 + 0x8]
  5984: 82 c0 10                 ra = u64 [a5 + 0x10]
  5987: 82 c2 18                 t0 = u64 [a5 + 0x18]
  5990: 7a 17 6c                 u32 [sp + 0x6c] = a0
  5993: 7a 18 68                 u32 [sp + 0x68] = a1
  5996: 78 19 70                 u8 [sp + 0x70] = a2
  5999: 7b 13 38                 u64 [sp + 0x38] = t1
  6002: 7b 14 40                 u64 [sp + 0x40] = t2
  6005: 7b 10 48                 u64 [sp + 0x48] = ra
  6008: 7b 12 50                 u64 [sp + 0x50] = t0
  6011: 95 17 18                 a0 = sp + 0x18
  6014: 7b 17 58                 u64 [sp + 0x58] = a0
  6017: 33 07 a0 00 01           a0 = 0x100a0
  6022: 7b 17 60                 u64 [sp + 0x60] = a0
  6025: 95 18 38                 a1 = sp + 0x38
  6028: 64 b7                    a0 = a4
  6030: b4 a0 02 b4 00           ra = 180, jump [a3]
      :                          @463 [@dyn 90]
  6035: 52 07 21                 jump @466 if a0 != 0
      :                          @464
  6038: 82 18 60                 a1 = u64 [sp + 0x60]
  6041: 82 17 58                 a0 = u64 [sp + 0x58]
  6044: 82 8a 18                 a3 = u64 [a1 + 0x18]
  6047: 33 08 d6 00 01           a1 = 0x100d6
  6052: 33 09 02                 a2 = 0x2
  6055: b4 a0 02 b6 00           ra = 182, jump [a3]
      :                          @465 [@dyn 91]
  6060: 64 76                    s1 = a0
  6062: 33 08 01                 a1 = 0x1
  6065: 28 e9 fe                 jump @451
      :                          @466
  6068: 33 08 01                 a1 = 0x1
  6071: 28 e3 fe                 jump @451
      :                          @467
  6074: 51 08 9b 00              jump @488 if a1 == 0
      :                          @468
  6078: 64 79                    a2 = a0
  6080: 7c 77                    a0 = u8 [a0]
  6082: 51 07 91 00              jump @487 if a0 == 0
      :                          @469
  6086: 51 27 ff 00 90 00        jump @489 if a0 == 255
      :                          @470
  6092: 6c 7a                    a3 = sext.b a0
  6094: 57 0a 09                 jump @472 if a3 <s 0
      :                          @471
  6097: 33 0a                    a3 = 0
  6099: 33 08                    a1 = 0
  6101: 28 73                    jump @486
      :                          @472
  6103: 55 27 c0 00 0d           jump @474 if a0 >=u 192
      :                          @473
  6108: 33 0a 01                 a3 = 0x1
  6111: 33 0b 80                 a4 = 0xffffffffffffff80
  6114: 28 4a                    jump @483
      :                          @474
  6116: 55 27 e0 00 0e           jump @476 if a0 >=u 224
      :                          @475
  6121: 33 0a 02                 a3 = 0x2
  6124: 33 0b 40 ff              a4 = 0xffffffffffffff40
  6128: 28 3c                    jump @483
      :                          @476
  6130: 55 27 f0 00 0e           jump @478 if a0 >=u 240
      :                          @477
  6135: 33 0a 03                 a3 = 0x3
  6138: 33 0b 20 ff              a4 = 0xffffffffffffff20
  6142: 28 2e                    jump @483
      :                          @478
  6144: 55 27 f8 00 0e           jump @480 if a0 >=u 248
      :                          @479
  6149: 33 0a 04                 a3 = 0x4
  6152: 33 0b 10 ff              a4 = 0xffffffffffffff10
  6156: 28 20                    jump @483
      :                          @480
  6158: 55 27 fc 00 0e           jump @482 if a0 >=u 252
      :                          @481
  6163: 33 0a 05                 a3 = 0x5
  6166: 33 0b 08 ff              a4 = 0xffffffffffffff08
  6170: 28 12                    jump @483
      :                          @482
  6172: 88 7a fe 00              a3 = a0 <u 0xfe
  6176: 33 0b 04 ff              a4 = 0xffffffffffffff04
  6180: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  6184: 85 aa 07                 a3 = a3 ^ 0x7
  6187: 01                       fallthrough
      :                          @483
  6188: ae 8a 2b                 jump @490 if a3 >=u a1
      :                          @484
  6191: 33 08                    a1 = 0
  6193: c8 b7 07                 a0 = a0 + a4
  6196: 64 ab                    a4 = a3
  6198: 01                       fallthrough
      :                          @485
  6199: c8 b9 0c                 a5 = a2 + a4
  6202: 7c cc                    a5 = u8 [a5]
  6204: 97 88 08                 a1 = a1 << 0x8
  6207: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  6210: d4 c8 08                 a1 = a1 | a5
  6213: 52 0b f2                 jump @485 if a4 != 0
      :                          @486
  6216: 8a a9 03                 i32 a2 = a3 << 0x3
  6219: cf 97 07                 a0 = a0 << a2
  6222: c8 87 07                 a0 = a0 + a1
  6225: 32 00                    ret
      :                          @487
  6227: 32 00                    ret
      :                          @488
  6229: 00                       trap
      :                          @489
  6230: 00                       trap
      :                          @490
  6231: 00                       trap
