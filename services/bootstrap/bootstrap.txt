// RO data = 572/572 bytes
// RW data = 16/69712 bytes
// Stack size = 65536 bytes
// RO data = [99, 114, 101, 97, 116, 101, 83, 101, 114, 118, 105, 99, 101, 32, 111, 117, 116, 112, 117, 116, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 32, 32, 32, 108, 101, 110, 61, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 35, 0, 0, 0, 0, 0, 0, 0, 35, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 36, 0, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 83, 69, 82, 86, 73, 67, 69, 73, 68, 61, 32, 115, 116, 111, 114, 97, 103, 101, 95, 107, 101, 121, 61, 0, 96, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 106, 0, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 111, 117, 116, 112, 117, 116, 95, 108, 101, 110, 32, 65, 67, 67, 32, 111, 117, 116, 112, 117, 116, 95, 108, 101, 110, 61, 32, 105, 115, 32, 108, 101, 115, 115, 32, 116, 104, 97, 110, 32, 51, 54, 32, 98, 121, 116, 101, 115, 44, 32, 114, 101, 116, 117, 114, 110, 105, 110, 103, 32, 101, 114, 114, 111, 114, 0, 0, 0, 0, 0, 0, 0, 152, 0, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 178, 0, 1, 0, 0, 0, 0, 0, 39, 0, 0, 0, 0, 0, 0, 0, 140, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 142, 0, 0, 0, 0, 0, 0, 0, 148, 0, 0, 0, 0, 0, 0, 0, 156, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 192, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 194, 0, 0, 0, 0, 0, 0, 0, 200, 0, 0, 0, 0, 0, 0, 0, 204, 0, 0, 0, 0, 0, 0, 0, 32, 32, 32, 32, 44, 32, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57]
// RW data = [75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 2357
// Code size = 7125 bytes

      :                          @0
     0: 28 4a 04 00 00           jump @63
      :                          @1
     5: 28 98 05 00 00           jump @101
      :                          @2
    10: 28 10 0c                 jump @192
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 80 89 34                 a2 = u32 [a1 + 0x34]
    24: 82 77                    a0 = u64 [a0]
    26: 84 9a 10                 a3 = a2 & 0x10
    29: 52 0a 16                 jump @6 if a3 != 0
      :                          @4
    32: 84 99 20                 a2 = a2 & 0x20
    35: 52 09 41                 jump @9 if a2 != 0
      :                          @5
    38: 7c 77                    a0 = u8 [a0]
    40: 82 10 80 00              ra = u64 [sp + 0x80]
    44: 95 11 88 00              sp = sp + 0x88
    48: 28 b8 11                 jump @331
      :                          @6
    51: 7c 77                    a0 = u8 [a0]
    53: 33 0b 81 00              a4 = 0x81
    57: 95 19 7f                 a2 = sp + 0x7f
    60: 33 02 57                 t0 = 0x57
    63: 01                       fallthrough
      :                          @7
    64: 64 bc                    a5 = a4
    66: 84 7b 0f                 a4 = a0 & 0xf
    69: 97 77 38                 a0 = a0 << 0x38
    72: 98 77 3c                 a0 = a0 >> 0x3c
    75: 88 b3 0a                 t1 = a4 <u 0xa
    78: 33 0a 30                 a3 = 0x30
    81: da 32 0a                 a3 = t0 if t1 == 0
    84: be ba 0a                 i32 a3 = a3 + a4
    87: 78 9a                    u8 [a2] = a3
    89: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
    92: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
    95: 52 07 e1                 jump @7 if a0 != 0
      :                          @8
    98: 28 31                    jump @11
      :                          @9
   100: 7c 77                    a0 = u8 [a0]
   102: 33 0b 81 00              a4 = 0x81
   106: 95 19 7f                 a2 = sp + 0x7f
   109: 33 02 37                 t0 = 0x37
   112: 01                       fallthrough
      :                          @10
   113: 64 bc                    a5 = a4
   115: 84 7b 0f                 a4 = a0 & 0xf
   118: 97 77 38                 a0 = a0 << 0x38
   121: 98 77 3c                 a0 = a0 >> 0x3c
   124: 88 b3 0a                 t1 = a4 <u 0xa
   127: 33 0a 30                 a3 = 0x30
   130: da 32 0a                 a3 = t0 if t1 == 0
   133: be ba 0a                 i32 a3 = a3 + a4
   136: 78 9a                    u8 [a2] = a3
   138: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
   141: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
   144: 52 07 e1                 jump @10 if a0 != 0
      :                          @11
   147: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   150: 56 27 80 00 27           jump @14 if a0 >u 128
      :                          @12
   155: 9a bb 81 00              a4 = 0x81 - a4
   159: 64 1a                    a3 = sp
   161: c8 7a 0a                 a3 = a3 + a0
   164: 33 09 02                 a2 = 0x2
   167: 64 87                    a0 = a1
   169: 33 08 72 01 01           a1 = 0x10172
   174: 50 10 04 62 12           ra = 4, jump @341
      :                          @13 [@dyn 2]
   179: 82 10 80 00              ra = u64 [sp + 0x80]
   183: 95 11 88 00              sp = sp + 0x88
   187: 32 00                    ret
      :                          @14
   189: 00                       trap
      :                          @15 [@dyn 3]
   190: 95 11 d0                 sp = sp + 0xffffffffffffffd0
   193: 7b 10 28                 u64 [sp + 0x28] = ra
   196: 7b 15 20                 u64 [sp + 0x20] = s0
   199: 7b 16 18                 u64 [sp + 0x18] = s1
   202: 64 85                    s0 = a1
   204: 82 88 28                 a1 = u64 [a1 + 0x28]
   207: 82 5a 20                 a3 = u64 [s0 + 0x20]
   210: 82 8b 18                 a4 = u64 [a1 + 0x18]
   213: 64 76                    s1 = a0
   215: 33 08 30 01 01           a1 = 0x10130
   220: 33 09 01                 a2 = 0x1
   223: 64 a7                    a0 = a3
   225: b4 b0 01 08              ra = 8, jump [a4]
      :                          @16 [@dyn 4]
   229: 7b 15                    u64 [sp] = s0
   231: 78 17 08                 u8 [sp + 0x8] = a0
   234: 46 11 09                 u8 [sp + 9] = 0
   237: 7b 16 10                 u64 [sp + 0x10] = s1
   240: 33 05 02                 s0 = 0x2
   243: 64 17                    a0 = sp
   245: 95 18 10                 a1 = sp + 0x10
   248: 33 09 02                 a2 = 0x2
   251: 50 10 0a fd 18           ra = 10, jump @486
      :                          @17 [@dyn 5]
   256: 95 67 01                 a0 = s1 + 0x1
   259: 7b 17 10                 u64 [sp + 0x10] = a0
   262: 64 17                    a0 = sp
   264: 95 18 10                 a1 = sp + 0x10
   267: 64 59                    a2 = s0
   269: 50 10 0c eb 18           ra = 12, jump @486
      :                          @18 [@dyn 6]
   274: 95 67 02                 a0 = s1 + 0x2
   277: 7b 17 10                 u64 [sp + 0x10] = a0
   280: 64 17                    a0 = sp
   282: 95 18 10                 a1 = sp + 0x10
   285: 64 59                    a2 = s0
   287: 50 10 0e d9 18           ra = 14, jump @486
      :                          @19 [@dyn 7]
   292: 95 67 03                 a0 = s1 + 0x3
   295: 7b 17 10                 u64 [sp + 0x10] = a0
   298: 64 17                    a0 = sp
   300: 95 18 10                 a1 = sp + 0x10
   303: 64 59                    a2 = s0
   305: 50 10 10 c7 18           ra = 16, jump @486
      :                          @20 [@dyn 8]
   310: 95 67 04                 a0 = s1 + 0x4
   313: 7b 17 10                 u64 [sp + 0x10] = a0
   316: 64 17                    a0 = sp
   318: 95 18 10                 a1 = sp + 0x10
   321: 64 59                    a2 = s0
   323: 50 10 12 b5 18           ra = 18, jump @486
      :                          @21 [@dyn 9]
   328: 95 67 05                 a0 = s1 + 0x5
   331: 7b 17 10                 u64 [sp + 0x10] = a0
   334: 64 17                    a0 = sp
   336: 95 18 10                 a1 = sp + 0x10
   339: 64 59                    a2 = s0
   341: 50 10 14 a3 18           ra = 20, jump @486
      :                          @22 [@dyn 10]
   346: 95 67 06                 a0 = s1 + 0x6
   349: 7b 17 10                 u64 [sp + 0x10] = a0
   352: 64 17                    a0 = sp
   354: 95 18 10                 a1 = sp + 0x10
   357: 64 59                    a2 = s0
   359: 50 10 16 91 18           ra = 22, jump @486
      :                          @23 [@dyn 11]
   364: 95 67 07                 a0 = s1 + 0x7
   367: 7b 17 10                 u64 [sp + 0x10] = a0
   370: 64 17                    a0 = sp
   372: 95 18 10                 a1 = sp + 0x10
   375: 64 59                    a2 = s0
   377: 50 10 18 7f 18           ra = 24, jump @486
      :                          @24 [@dyn 12]
   382: 95 67 08                 a0 = s1 + 0x8
   385: 7b 17 10                 u64 [sp + 0x10] = a0
   388: 64 17                    a0 = sp
   390: 95 18 10                 a1 = sp + 0x10
   393: 64 59                    a2 = s0
   395: 50 10 1a 6d 18           ra = 26, jump @486
      :                          @25 [@dyn 13]
   400: 95 67 09                 a0 = s1 + 0x9
   403: 7b 17 10                 u64 [sp + 0x10] = a0
   406: 64 17                    a0 = sp
   408: 95 18 10                 a1 = sp + 0x10
   411: 64 59                    a2 = s0
   413: 50 10 1c 5b 18           ra = 28, jump @486
      :                          @26 [@dyn 14]
   418: 95 67 0a                 a0 = s1 + 0xa
   421: 7b 17 10                 u64 [sp + 0x10] = a0
   424: 64 17                    a0 = sp
   426: 95 18 10                 a1 = sp + 0x10
   429: 64 59                    a2 = s0
   431: 50 10 1e 49 18           ra = 30, jump @486
      :                          @27 [@dyn 15]
   436: 95 67 0b                 a0 = s1 + 0xb
   439: 7b 17 10                 u64 [sp + 0x10] = a0
   442: 64 17                    a0 = sp
   444: 95 18 10                 a1 = sp + 0x10
   447: 64 59                    a2 = s0
   449: 50 10 20 37 18           ra = 32, jump @486
      :                          @28 [@dyn 16]
   454: 95 67 0c                 a0 = s1 + 0xc
   457: 7b 17 10                 u64 [sp + 0x10] = a0
   460: 64 17                    a0 = sp
   462: 95 18 10                 a1 = sp + 0x10
   465: 64 59                    a2 = s0
   467: 50 10 22 25 18           ra = 34, jump @486
      :                          @29 [@dyn 17]
   472: 95 67 0d                 a0 = s1 + 0xd
   475: 7b 17 10                 u64 [sp + 0x10] = a0
   478: 64 17                    a0 = sp
   480: 95 18 10                 a1 = sp + 0x10
   483: 64 59                    a2 = s0
   485: 50 10 24 13 18           ra = 36, jump @486
      :                          @30 [@dyn 18]
   490: 95 67 0e                 a0 = s1 + 0xe
   493: 7b 17 10                 u64 [sp + 0x10] = a0
   496: 64 17                    a0 = sp
   498: 95 18 10                 a1 = sp + 0x10
   501: 64 59                    a2 = s0
   503: 50 10 26 01 18           ra = 38, jump @486
      :                          @31 [@dyn 19]
   508: 95 67 0f                 a0 = s1 + 0xf
   511: 7b 17 10                 u64 [sp + 0x10] = a0
   514: 64 17                    a0 = sp
   516: 95 18 10                 a1 = sp + 0x10
   519: 64 59                    a2 = s0
   521: 50 10 28 ef 17           ra = 40, jump @486
      :                          @32 [@dyn 20]
   526: 95 67 10                 a0 = s1 + 0x10
   529: 7b 17 10                 u64 [sp + 0x10] = a0
   532: 64 17                    a0 = sp
   534: 95 18 10                 a1 = sp + 0x10
   537: 64 59                    a2 = s0
   539: 50 10 2a dd 17           ra = 42, jump @486
      :                          @33 [@dyn 21]
   544: 95 67 11                 a0 = s1 + 0x11
   547: 7b 17 10                 u64 [sp + 0x10] = a0
   550: 64 17                    a0 = sp
   552: 95 18 10                 a1 = sp + 0x10
   555: 64 59                    a2 = s0
   557: 50 10 2c cb 17           ra = 44, jump @486
      :                          @34 [@dyn 22]
   562: 95 67 12                 a0 = s1 + 0x12
   565: 7b 17 10                 u64 [sp + 0x10] = a0
   568: 64 17                    a0 = sp
   570: 95 18 10                 a1 = sp + 0x10
   573: 64 59                    a2 = s0
   575: 50 10 2e b9 17           ra = 46, jump @486
      :                          @35 [@dyn 23]
   580: 95 67 13                 a0 = s1 + 0x13
   583: 7b 17 10                 u64 [sp + 0x10] = a0
   586: 64 17                    a0 = sp
   588: 95 18 10                 a1 = sp + 0x10
   591: 64 59                    a2 = s0
   593: 50 10 30 a7 17           ra = 48, jump @486
      :                          @36 [@dyn 24]
   598: 95 67 14                 a0 = s1 + 0x14
   601: 7b 17 10                 u64 [sp + 0x10] = a0
   604: 64 17                    a0 = sp
   606: 95 18 10                 a1 = sp + 0x10
   609: 64 59                    a2 = s0
   611: 50 10 32 95 17           ra = 50, jump @486
      :                          @37 [@dyn 25]
   616: 95 67 15                 a0 = s1 + 0x15
   619: 7b 17 10                 u64 [sp + 0x10] = a0
   622: 64 17                    a0 = sp
   624: 95 18 10                 a1 = sp + 0x10
   627: 64 59                    a2 = s0
   629: 50 10 34 83 17           ra = 52, jump @486
      :                          @38 [@dyn 26]
   634: 95 67 16                 a0 = s1 + 0x16
   637: 7b 17 10                 u64 [sp + 0x10] = a0
   640: 64 17                    a0 = sp
   642: 95 18 10                 a1 = sp + 0x10
   645: 64 59                    a2 = s0
   647: 50 10 36 71 17           ra = 54, jump @486
      :                          @39 [@dyn 27]
   652: 95 67 17                 a0 = s1 + 0x17
   655: 7b 17 10                 u64 [sp + 0x10] = a0
   658: 64 17                    a0 = sp
   660: 95 18 10                 a1 = sp + 0x10
   663: 64 59                    a2 = s0
   665: 50 10 38 5f 17           ra = 56, jump @486
      :                          @40 [@dyn 28]
   670: 95 67 18                 a0 = s1 + 0x18
   673: 7b 17 10                 u64 [sp + 0x10] = a0
   676: 64 17                    a0 = sp
   678: 95 18 10                 a1 = sp + 0x10
   681: 64 59                    a2 = s0
   683: 50 10 3a 4d 17           ra = 58, jump @486
      :                          @41 [@dyn 29]
   688: 95 67 19                 a0 = s1 + 0x19
   691: 7b 17 10                 u64 [sp + 0x10] = a0
   694: 64 17                    a0 = sp
   696: 95 18 10                 a1 = sp + 0x10
   699: 64 59                    a2 = s0
   701: 50 10 3c 3b 17           ra = 60, jump @486
      :                          @42 [@dyn 30]
   706: 95 67 1a                 a0 = s1 + 0x1a
   709: 7b 17 10                 u64 [sp + 0x10] = a0
   712: 64 17                    a0 = sp
   714: 95 18 10                 a1 = sp + 0x10
   717: 64 59                    a2 = s0
   719: 50 10 3e 29 17           ra = 62, jump @486
      :                          @43 [@dyn 31]
   724: 95 67 1b                 a0 = s1 + 0x1b
   727: 7b 17 10                 u64 [sp + 0x10] = a0
   730: 64 17                    a0 = sp
   732: 95 18 10                 a1 = sp + 0x10
   735: 64 59                    a2 = s0
   737: 50 10 40 17 17           ra = 64, jump @486
      :                          @44 [@dyn 32]
   742: 95 67 1c                 a0 = s1 + 0x1c
   745: 7b 17 10                 u64 [sp + 0x10] = a0
   748: 64 17                    a0 = sp
   750: 95 18 10                 a1 = sp + 0x10
   753: 64 59                    a2 = s0
   755: 50 10 42 05 17           ra = 66, jump @486
      :                          @45 [@dyn 33]
   760: 95 67 1d                 a0 = s1 + 0x1d
   763: 7b 17 10                 u64 [sp + 0x10] = a0
   766: 64 17                    a0 = sp
   768: 95 18 10                 a1 = sp + 0x10
   771: 64 59                    a2 = s0
   773: 50 10 44 f3 16           ra = 68, jump @486
      :                          @46 [@dyn 34]
   778: 95 67 1e                 a0 = s1 + 0x1e
   781: 7b 17 10                 u64 [sp + 0x10] = a0
   784: 64 17                    a0 = sp
   786: 95 18 10                 a1 = sp + 0x10
   789: 64 59                    a2 = s0
   791: 50 10 46 e1 16           ra = 70, jump @486
      :                          @47 [@dyn 35]
   796: 95 67 1f                 a0 = s1 + 0x1f
   799: 7b 17 10                 u64 [sp + 0x10] = a0
   802: 64 17                    a0 = sp
   804: 95 18 10                 a1 = sp + 0x10
   807: 64 59                    a2 = s0
   809: 50 10 48 cf 16           ra = 72, jump @486
      :                          @48 [@dyn 36]
   814: 95 67 20                 a0 = s1 + 0x20
   817: 7b 17 10                 u64 [sp + 0x10] = a0
   820: 64 17                    a0 = sp
   822: 95 18 10                 a1 = sp + 0x10
   825: 64 59                    a2 = s0
   827: 50 10 4a bd 16           ra = 74, jump @486
      :                          @49 [@dyn 37]
   832: 95 67 21                 a0 = s1 + 0x21
   835: 7b 17 10                 u64 [sp + 0x10] = a0
   838: 64 17                    a0 = sp
   840: 95 18 10                 a1 = sp + 0x10
   843: 64 59                    a2 = s0
   845: 50 10 4c ab 16           ra = 76, jump @486
      :                          @50 [@dyn 38]
   850: 95 67 22                 a0 = s1 + 0x22
   853: 7b 17 10                 u64 [sp + 0x10] = a0
   856: 64 17                    a0 = sp
   858: 95 18 10                 a1 = sp + 0x10
   861: 64 59                    a2 = s0
   863: 50 10 4e 99 16           ra = 78, jump @486
      :                          @51 [@dyn 39]
   868: 95 67 23                 a0 = s1 + 0x23
   871: 7b 17 10                 u64 [sp + 0x10] = a0
   874: 64 17                    a0 = sp
   876: 95 18 10                 a1 = sp + 0x10
   879: 64 59                    a2 = s0
   881: 50 10 50 87 16           ra = 80, jump @486
      :                          @52 [@dyn 40]
   886: 33 07 01                 a0 = 0x1
   889: 7c 18 08                 a1 = u8 [sp + 0x8]
   892: 52 08 1a                 jump @54 if a1 != 0
      :                          @53
   895: 82 17                    a0 = u64 [sp]
   897: 82 78 28                 a1 = u64 [a0 + 0x28]
   900: 82 77 20                 a0 = u64 [a0 + 0x20]
   903: 82 8a 18                 a3 = u64 [a1 + 0x18]
   906: 33 08 71 01 01           a1 = 0x10171
   911: 33 09 01                 a2 = 0x1
   914: b4 a0 01 52              ra = 82, jump [a3]
      :                          @54 [@dyn 41]
   918: 82 10 28                 ra = u64 [sp + 0x28]
   921: 82 15 20                 s0 = u64 [sp + 0x20]
   924: 82 16 18                 s1 = u64 [sp + 0x18]
   927: 95 11 30                 sp = sp + 0x30
   930: 32 00                    ret
      :                          @55 [@dyn 42]
   932: 95 11 d0                 sp = sp + 0xffffffffffffffd0
   935: 7b 10 28                 u64 [sp + 0x28] = ra
   938: 7b 15 20                 u64 [sp + 0x20] = s0
   941: 7b 16 18                 u64 [sp + 0x18] = s1
   944: 64 85                    s0 = a1
   946: 82 88 28                 a1 = u64 [a1 + 0x28]
   949: 82 5a 20                 a3 = u64 [s0 + 0x20]
   952: 82 8b 18                 a4 = u64 [a1 + 0x18]
   955: 64 76                    s1 = a0
   957: 33 08 30 01 01           a1 = 0x10130
   962: 33 09 01                 a2 = 0x1
   965: 64 a7                    a0 = a3
   967: b4 b0 01 56              ra = 86, jump [a4]
      :                          @56 [@dyn 43]
   971: 7b 15                    u64 [sp] = s0
   973: 78 17 08                 u8 [sp + 0x8] = a0
   976: 46 11 09                 u8 [sp + 9] = 0
   979: 7b 16 10                 u64 [sp + 0x10] = s1
   982: 33 05 02                 s0 = 0x2
   985: 64 17                    a0 = sp
   987: 95 18 10                 a1 = sp + 0x10
   990: 33 09 02                 a2 = 0x2
   993: 50 10 58 17 16           ra = 88, jump @486
      :                          @57 [@dyn 44]
   998: 95 67 01                 a0 = s1 + 0x1
  1001: 7b 17 10                 u64 [sp + 0x10] = a0
  1004: 64 17                    a0 = sp
  1006: 95 18 10                 a1 = sp + 0x10
  1009: 64 59                    a2 = s0
  1011: 50 10 5a 05 16           ra = 90, jump @486
      :                          @58 [@dyn 45]
  1016: 95 67 02                 a0 = s1 + 0x2
  1019: 7b 17 10                 u64 [sp + 0x10] = a0
  1022: 64 17                    a0 = sp
  1024: 95 18 10                 a1 = sp + 0x10
  1027: 64 59                    a2 = s0
  1029: 50 10 5c f3 15           ra = 92, jump @486
      :                          @59 [@dyn 46]
  1034: 95 66 03                 s1 = s1 + 0x3
  1037: 7b 16 10                 u64 [sp + 0x10] = s1
  1040: 64 17                    a0 = sp
  1042: 95 18 10                 a1 = sp + 0x10
  1045: 64 59                    a2 = s0
  1047: 50 10 5e e1 15           ra = 94, jump @486
      :                          @60 [@dyn 47]
  1052: 33 07 01                 a0 = 0x1
  1055: 7c 18 08                 a1 = u8 [sp + 0x8]
  1058: 52 08 1a                 jump @62 if a1 != 0
      :                          @61
  1061: 82 17                    a0 = u64 [sp]
  1063: 82 78 28                 a1 = u64 [a0 + 0x28]
  1066: 82 77 20                 a0 = u64 [a0 + 0x20]
  1069: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1072: 33 08 71 01 01           a1 = 0x10171
  1077: 33 09 01                 a2 = 0x1
  1080: b4 a0 01 60              ra = 96, jump [a3]
      :                          @62 [@dyn 48]
  1084: 82 10 28                 ra = u64 [sp + 0x28]
  1087: 82 15 20                 s0 = u64 [sp + 0x20]
  1090: 82 16 18                 s1 = u64 [sp + 0x18]
  1093: 95 11 30                 sp = sp + 0x30
  1096: 32 00                    ret
      :                          @63 [export #0: 'refine']
  1098: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  1101: 7b 10 20                 u64 [sp + 0x20] = ra
  1104: 7b 15 18                 u64 [sp + 0x18] = s0
  1107: 7b 16 10                 u64 [sp + 0x10] = s1
  1110: 64 86                    s1 = a1
  1112: 64 7a                    a3 = a0
  1114: 33 07 00 00 01           a0 = 0x10000
  1119: 53 16 04 43              jump @72 if s1 <u 4
      :                          @64
  1123: 7d a8                    a1 = i8 [a3]
  1125: 33 05 01                 s0 = 0x1
  1128: 59 08 37                 jump @71 if a1 >=s 0
      :                          @65
  1131: 84 89 ff 00              a2 = a1 & 0xff
  1135: 33 05 02                 s0 = 0x2
  1138: 53 29 c0 00 2d           jump @71 if a2 <u 192
      :                          @66
  1143: 33 05 03                 s0 = 0x3
  1146: 53 29 e0 00 25           jump @71 if a2 <u 224
      :                          @67
  1151: 33 05 04                 s0 = 0x4
  1154: 53 29 f0 00 1d           jump @71 if a2 <u 240
      :                          @68
  1159: 33 05 05                 s0 = 0x5
  1162: 53 29 f8 00 15           jump @71 if a2 <u 248
      :                          @69
  1167: 33 05 06                 s0 = 0x6
  1170: 53 29 fc 00 0d           jump @71 if a2 <u 252
      :                          @70
  1175: 88 98 fe 00              a1 = a2 <u 0xfe
  1179: 9a 85 08                 s0 = 0x8 - a1
  1182: 01                       fallthrough
      :                          @71
  1183: ae 56 08                 jump @73 if s1 >=u s0
      :                          @72
  1186: 33 08                    a1 = 0
  1188: 28 e3 00                 jump @98
      :                          @73
  1191: 64 a7                    a0 = a3
  1193: 64 58                    a1 = s0
  1195: 7b 1a 08                 u64 [sp + 0x8] = a3
  1198: 50 10 62 89 16           ra = 98, jump @503
      :                          @74 [@dyn 49]
  1203: aa 56 cc 00              jump @97 if s1 == s0
      :                          @75
  1207: 82 17 08                 a0 = u64 [sp + 0x8]
  1210: c8 57 07                 a0 = a0 + s0
  1213: 7d 78                    a1 = i8 [a0]
  1215: c9 56 06                 s1 = s1 - s0
  1218: 33 05 01                 s0 = 0x1
  1221: 59 08 37                 jump @82 if a1 >=s 0
      :                          @76
  1224: 84 89 ff 00              a2 = a1 & 0xff
  1228: 33 05 02                 s0 = 0x2
  1231: 53 29 c0 00 2d           jump @82 if a2 <u 192
      :                          @77
  1236: 33 05 03                 s0 = 0x3
  1239: 53 29 e0 00 25           jump @82 if a2 <u 224
      :                          @78
  1244: 33 05 04                 s0 = 0x4
  1247: 53 29 f0 00 1d           jump @82 if a2 <u 240
      :                          @79
  1252: 33 05 05                 s0 = 0x5
  1255: 53 29 f8 00 15           jump @82 if a2 <u 248
      :                          @80
  1260: 33 05 06                 s0 = 0x6
  1263: 53 29 fc 00 0d           jump @82 if a2 <u 252
      :                          @81
  1268: 88 98 fe 00              a1 = a2 <u 0xfe
  1272: 9a 85 08                 s0 = 0x8 - a1
  1275: 01                       fallthrough
      :                          @82
  1276: ac 56 83 00              jump @97 if s1 <u s0
      :                          @83
  1280: 64 58                    a1 = s0
  1282: 7b 16 08                 u64 [sp + 0x8] = s1
  1285: 64 76                    s1 = a0
  1287: 50 10 64 30 16           ra = 100, jump @503
      :                          @84 [@dyn 50]
  1292: c8 65 07                 a0 = s0 + s1
  1295: 82 16 08                 s1 = u64 [sp + 0x8]
  1298: 7b 17                    u64 [sp] = a0
  1300: ab 56 0b                 jump @86 if s1 != s0
      :                          @85
  1303: 33 09                    a2 = 0
  1305: 33 05                    s0 = 0
  1307: 33 08                    a1 = 0
  1309: 28 56                    jump @96
      :                          @86
  1311: 7d 78                    a1 = i8 [a0]
  1313: c9 56 06                 s1 = s1 - s0
  1316: 33 05 01                 s0 = 0x1
  1319: 59 08 37                 jump @93 if a1 >=s 0
      :                          @87
  1322: 84 89 ff 00              a2 = a1 & 0xff
  1326: 33 05 02                 s0 = 0x2
  1329: 53 29 c0 00 2d           jump @93 if a2 <u 192
      :                          @88
  1334: 33 05 03                 s0 = 0x3
  1337: 53 29 e0 00 25           jump @93 if a2 <u 224
      :                          @89
  1342: 33 05 04                 s0 = 0x4
  1345: 53 29 f0 00 1d           jump @93 if a2 <u 240
      :                          @90
  1350: 33 05 05                 s0 = 0x5
  1353: 53 29 f8 00 15           jump @93 if a2 <u 248
      :                          @91
  1358: 33 05 06                 s0 = 0x6
  1361: 53 29 fc 00 0d           jump @93 if a2 <u 252
      :                          @92
  1366: 88 98 fe 00              a1 = a2 <u 0xfe
  1370: 9a 85 08                 s0 = 0x8 - a1
  1373: 01                       fallthrough
      :                          @93
  1374: ac 56 3e                 jump @100 if s1 <u s0
      :                          @94
  1377: 64 58                    a1 = s0
  1379: 50 10 66 d4 15           ra = 102, jump @503
      :                          @95 [@dyn 51]
  1384: e4 56 09                 a2 = maxu(s1, s0)
  1387: c9 59 09                 a2 = a2 - s0
  1390: 64 78                    a1 = a0
  1392: ac 79 0f                 jump @97 if a2 <u a0
      :                          @96
  1395: e4 89 07                 a0 = maxu(a2, a1)
  1398: c9 87 07                 a0 = a0 - a1
  1401: 33 09 20                 a2 = 0x20
  1404: ae 97 19                 jump @99 if a0 >=u a2
      :                          @97
  1407: 33 08                    a1 = 0
  1409: 33 07 00 00 01           a0 = 0x10000
  1414: 01                       fallthrough
      :                          @98
  1415: 82 10 20                 ra = u64 [sp + 0x20]
  1418: 82 15 18                 s0 = u64 [sp + 0x18]
  1421: 82 16 10                 s1 = u64 [sp + 0x10]
  1424: 95 11 28                 sp = sp + 0x28
  1427: 32 00                    ret
      :                          @99
  1429: 82 17                    a0 = u64 [sp]
  1431: c8 57 07                 a0 = a0 + s0
  1434: 28 ed                    jump @98
      :                          @100
  1436: 00                       trap
      :                          @101 [export #1: 'accumulate']
  1437: 95 11 00 fe              sp = sp + 0xfffffffffffffe00
  1441: 7b 10 f8 01              u64 [sp + 0x1f8] = ra
  1445: 7b 15 f0 01              u64 [sp + 0x1f0] = s0
  1449: 7b 16 e8 01              u64 [sp + 0x1e8] = s1
  1453: 33 0a 00 00 01           a3 = 0x10000
  1458: 51 08 18 01              jump @133 if a1 == 0
      :                          @102
  1462: 64 86                    s1 = a1
  1464: 7d 78                    a1 = i8 [a0]
  1466: 33 05 01                 s0 = 0x1
  1469: 59 08 37                 jump @109 if a1 >=s 0
      :                          @103
  1472: 84 89 ff 00              a2 = a1 & 0xff
  1476: 33 05 02                 s0 = 0x2
  1479: 53 29 c0 00 2d           jump @109 if a2 <u 192
      :                          @104
  1484: 33 05 03                 s0 = 0x3
  1487: 53 29 e0 00 25           jump @109 if a2 <u 224
      :                          @105
  1492: 33 05 04                 s0 = 0x4
  1495: 53 29 f0 00 1d           jump @109 if a2 <u 240
      :                          @106
  1500: 33 05 05                 s0 = 0x5
  1503: 53 29 f8 00 15           jump @109 if a2 <u 248
      :                          @107
  1508: 33 05 06                 s0 = 0x6
  1511: 53 29 fc 00 0d           jump @109 if a2 <u 252
      :                          @108
  1516: 88 98 fe 00              a1 = a2 <u 0xfe
  1520: 9a 85 08                 s0 = 0x8 - a1
  1523: 01                       fallthrough
      :                          @109
  1524: ae 56 08                 jump @111 if s1 >=u s0
      :                          @110
  1527: 33 08                    a1 = 0
  1529: 28 d1 00                 jump @133
      :                          @111
  1532: 64 58                    a1 = s0
  1534: 7b 17 80 00              u64 [sp + 0x80] = a0
  1538: 50 10 68 35 15           ra = 104, jump @503
      :                          @112 [@dyn 52]
  1543: aa 56 bb 00              jump @132 if s1 == s0
      :                          @113
  1547: 82 17 80 00              a0 = u64 [sp + 0x80]
  1551: c8 57 07                 a0 = a0 + s0
  1554: 7d 78                    a1 = i8 [a0]
  1556: c9 56 06                 s1 = s1 - s0
  1559: 33 05 01                 s0 = 0x1
  1562: 59 08 37                 jump @120 if a1 >=s 0
      :                          @114
  1565: 84 89 ff 00              a2 = a1 & 0xff
  1569: 33 05 02                 s0 = 0x2
  1572: 53 29 c0 00 2d           jump @120 if a2 <u 192
      :                          @115
  1577: 33 05 03                 s0 = 0x3
  1580: 53 29 e0 00 25           jump @120 if a2 <u 224
      :                          @116
  1585: 33 05 04                 s0 = 0x4
  1588: 53 29 f0 00 1d           jump @120 if a2 <u 240
      :                          @117
  1593: 33 05 05                 s0 = 0x5
  1596: 53 29 f8 00 15           jump @120 if a2 <u 248
      :                          @118
  1601: 33 05 06                 s0 = 0x6
  1604: 53 29 fc 00 0d           jump @120 if a2 <u 252
      :                          @119
  1609: 88 98 fe 00              a1 = a2 <u 0xfe
  1613: 9a 85 08                 s0 = 0x8 - a1
  1616: 01                       fallthrough
      :                          @120
  1617: ac 56 71                 jump @132 if s1 <u s0
      :                          @121
  1620: 64 58                    a1 = s0
  1622: 7b 16 80 00              u64 [sp + 0x80] = s1
  1626: 64 76                    s1 = a0
  1628: 50 10 6a db 14           ra = 106, jump @503
      :                          @122 [@dyn 53]
  1633: c8 65 07                 a0 = s0 + s1
  1636: 82 16 80 00              s1 = u64 [sp + 0x80]
  1640: ab 56 0b                 jump @124 if s1 != s0
      :                          @123
  1643: 33 08                    a1 = 0
  1645: 33 00 6c                 ra = 0x6c
  1648: 28 c7 14                 jump @503
      :                          @124
  1651: 7d 79                    a2 = i8 [a0]
  1653: c9 56 06                 s1 = s1 - s0
  1656: 33 08 01                 a1 = 0x1
  1659: 59 09 44                 jump @131 if a2 >=s 0
      :                          @125
  1662: 84 99 ff 00              a2 = a2 & 0xff
  1666: 33 0a c0 00              a3 = 0xc0
  1670: 33 08 02                 a1 = 0x2
  1673: ac a9 36                 jump @131 if a2 <u a3
      :                          @126
  1676: 33 0a e0 00              a3 = 0xe0
  1680: 33 08 03                 a1 = 0x3
  1683: ac a9 2c                 jump @131 if a2 <u a3
      :                          @127
  1686: 33 0a f0 00              a3 = 0xf0
  1690: 33 08 04                 a1 = 0x4
  1693: ac a9 22                 jump @131 if a2 <u a3
      :                          @128
  1696: 33 0a f8 00              a3 = 0xf8
  1700: 33 08 05                 a1 = 0x5
  1703: ac a9 18                 jump @131 if a2 <u a3
      :                          @129
  1706: 33 0a fc 00              a3 = 0xfc
  1710: 33 08 06                 a1 = 0x6
  1713: ac a9 0e                 jump @131 if a2 <u a3
      :                          @130
  1716: 88 98 fe 00              a1 = a2 <u 0xfe
  1720: 33 09 08                 a2 = 0x8
  1723: c9 89 08                 a1 = a2 - a1
  1726: 01                       fallthrough
      :                          @131
  1727: ae 86 1f                 jump @134 if s1 >=u a1
      :                          @132
  1730: 33 08                    a1 = 0
  1732: 33 0a 00 00 01           a3 = 0x10000
  1737: 01                       fallthrough
      :                          @133
  1738: 64 a7                    a0 = a3
  1740: 82 10 f8 01              ra = u64 [sp + 0x1f8]
  1744: 82 15 f0 01              s0 = u64 [sp + 0x1f0]
  1748: 82 16 e8 01              s1 = u64 [sp + 0x1e8]
  1752: 95 11 00 02              sp = sp + 0x200
  1756: 32 00                    ret
      :                          @134
  1758: 50 10 6c 59 14           ra = 108, jump @503
      :                          @135 [@dyn 54]
  1763: 33 0a 11 00 03           a3 = 0x30011
  1768: 83 79                    i32 a2 = a0 + 0
  1770: 7b 1a 88 00              u64 [sp + 0x88] = a3
  1774: 51 09 97 04              jump @180 if a2 == 0
      :                          @136
  1778: 33 0b                    a4 = 0
  1780: 14 09 ff ff ff ff 00 00 00 00 a2 = 0xffffffff
  1790: d2 97 07                 a0 = a0 & a2
  1793: 7b 17                    u64 [sp] = a0
  1795: 33 06 35 00 03           s1 = 0x30035
  1800: 49 11 40 08 10           u64 [sp + 64] = 0x1008
  1805: 33 07 11 00 03           a0 = 0x30011
  1810: 7b 17 58                 u64 [sp + 0x58] = a0
  1813: 33 07 a0 00              a0 = 0xa0
  1817: 7b 17 68                 u64 [sp + 0x68] = a0
  1820: 33 07 06                 a0 = 0x6
  1823: 7b 17 30                 u64 [sp + 0x30] = a0
  1826: 33 07 ce 00              a0 = 0xce
  1830: 7b 17 28                 u64 [sp + 0x28] = a0
  1833: 33 07 30 00 01           a0 = 0x10030
  1838: 7b 17 20                 u64 [sp + 0x20] = a0
  1841: 33 07 54                 a0 = 0x54
  1844: 7b 17 18                 u64 [sp + 0x18] = a0
  1847: 33 07 40 10 03           a0 = 0x31040
  1852: 95 77 00 00 01           a0 = a0 + 0x10000
  1857: 7b 17 60                 u64 [sp + 0x60] = a0
  1860: 33 07 78 00 01           a0 = 0x10078
  1865: 7b 17 10                 u64 [sp + 0x10] = a0
  1868: 49 11 08 20 a1 07        u64 [sp + 8] = 0x7a120
  1874: 49 11 70 ff ff fe        u64 [sp + 112] = 0xfffffffffffeffff
  1880: 95 67 80 00              a0 = s1 + 0x80
  1884: 7b 17 38                 u64 [sp + 0x38] = a0
  1887: 7b 16 78                 u64 [sp + 0x78] = s1
  1890: 01                       fallthrough
      :                          @137
  1891: 33 0a 0f                 a3 = 0xf
  1894: 64 67                    a0 = s1
  1896: 33 08                    a1 = 0
  1898: 82 19 40                 a2 = u64 [sp + 0x40]
  1901: 7b 1b 80 00              u64 [sp + 0x80] = a4
  1905: 33 0c                    a5 = 0
  1907: 33 00 6e                 ra = 0x6e
  1910: 0a 01                    ecalli 1 // 'fetch'
  1912: 01                       fallthrough
      :                          @138 [@dyn 55]
  1913: 51 07 49 ff              jump @132 if a0 == 0
      :                          @139
  1917: 95 79 80                 a2 = a0 + 0xffffffffffffff80
  1920: 51 09 42 ff              jump @132 if a2 == 0
      :                          @140
  1924: 7d 67 80 00              a0 = i8 [s1 + 0x80]
  1928: 33 05 01                 s0 = 0x1
  1931: 59 07 37                 jump @147 if a0 >=s 0
      :                          @141
  1934: 84 77 ff 00              a0 = a0 & 0xff
  1938: 33 05 02                 s0 = 0x2
  1941: 53 27 c0 00 2d           jump @147 if a0 <u 192
      :                          @142
  1946: 33 05 03                 s0 = 0x3
  1949: 53 27 e0 00 25           jump @147 if a0 <u 224
      :                          @143
  1954: 33 05 04                 s0 = 0x4
  1957: 53 27 f0 00 1d           jump @147 if a0 <u 240
      :                          @144
  1962: 33 05 05                 s0 = 0x5
  1965: 53 27 f8 00 15           jump @147 if a0 <u 248
      :                          @145
  1970: 33 05 06                 s0 = 0x6
  1973: 53 27 fc 00 0d           jump @147 if a0 <u 252
      :                          @146
  1978: 88 77 fe 00              a0 = a0 <u 0xfe
  1982: 9a 75 08                 s0 = 0x8 - a0
  1985: 01                       fallthrough
      :                          @147
  1986: ac 59 00 ff              jump @132 if a2 <u s0
      :                          @148
  1990: 82 17 38                 a0 = u64 [sp + 0x38]
  1993: 64 58                    a1 = s0
  1995: 64 96                    s1 = a2
  1997: 50 10 70 6a 13           ra = 112, jump @503
      :                          @149 [@dyn 56]
  2002: 85 57 ff                 a0 = s0 ^ 0xffffffffffffffff
  2005: c8 76 0a                 a3 = s1 + a0
  2008: 82 17 78                 a0 = u64 [sp + 0x78]
  2011: 51 0a e7 fe              jump @132 if a3 == 0
      :                          @150
  2015: c8 75 05                 s0 = s0 + a0
  2018: 95 56 81 00              s1 = s0 + 0x81
  2022: 7d 69                    a2 = i8 [s1]
  2024: 33 08 01                 a1 = 0x1
  2027: 59 09 45                 jump @158 if a2 >=s 0
      :                          @151
  2030: 84 9b ff 00              a4 = a2 & 0xff
  2034: 33 08 02                 a1 = 0x2
  2037: 33 09 c0 00              a2 = 0xc0
  2041: ac 9b 33                 jump @157 if a4 <u a2
      :                          @152
  2044: 33 08 03                 a1 = 0x3
  2047: 33 09 e0 00              a2 = 0xe0
  2051: ac 9b 29                 jump @157 if a4 <u a2
      :                          @153
  2054: 33 08 04                 a1 = 0x4
  2057: 33 09 f0 00              a2 = 0xf0
  2061: ac 9b 1f                 jump @157 if a4 <u a2
      :                          @154
  2064: 33 08 05                 a1 = 0x5
  2067: 33 09 f8 00              a2 = 0xf8
  2071: ac 9b 15                 jump @157 if a4 <u a2
      :                          @155
  2074: 33 08 06                 a1 = 0x6
  2077: 33 09 fc 00              a2 = 0xfc
  2081: ac 9b 0b                 jump @157 if a4 <u a2
      :                          @156
  2084: 88 b8 fe 00              a1 = a4 <u 0xfe
  2088: 9a 88 08                 a1 = 0x8 - a1
  2091: 01                       fallthrough
      :                          @157
  2092: ac 8a 96 fe              jump @132 if a3 <u a1
      :                          @158
  2096: 64 67                    a0 = s1
  2098: 64 85                    s0 = a1
  2100: 50 10 72 03 13           ra = 114, jump @503
      :                          @159 [@dyn 57]
  2105: 7b 17 90 00              u64 [sp + 0x90] = a0
  2109: 53 17 24 4e 03           jump @181 if a0 <u 36
      :                          @160
  2114: c8 65 08                 a1 = s0 + s1
  2117: 33 09 24                 a2 = 0x24
  2120: 82 15 58                 s0 = u64 [sp + 0x58]
  2123: 64 57                    a0 = s0
  2125: 7b 18 50                 u64 [sp + 0x50] = a1
  2128: 50 10 74 8d 08           ra = 116, jump @299
      :                          @161 [@dyn 58]
  2133: 7c 57 21                 a0 = u8 [s0 + 0x21]
  2136: 7c 58 20                 a1 = u8 [s0 + 0x20]
  2139: 7c 59 22                 a2 = u8 [s0 + 0x22]
  2142: 7d 5a 23                 a3 = i8 [s0 + 0x23]
  2145: 8a 77 08                 i32 a0 = a0 << 0x8
  2148: d4 87 07                 a0 = a0 | a1
  2151: 8a 98 10                 i32 a1 = a2 << 0x10
  2154: 8a a9 18                 i32 a2 = a3 << 0x18
  2157: d4 98 08                 a1 = a1 | a2
  2160: d4 87 07                 a0 = a0 | a1
  2163: 7a 17 9c 00              u32 [sp + 0x9c] = a0
  2167: 33 0c 02                 a5 = 0x2
  2170: 7b 1c d0 00              u64 [sp + 0xd0] = a5
  2174: 7b 1c e0 00              u64 [sp + 0xe0] = a5
  2178: 49 21 f0 00              u64 [sp + 240] = 0
  2182: 33 02 20                 t0 = 0x20
  2185: 7b 12 f8 00              u64 [sp + 0xf8] = t0
  2189: 7c 17 80 01              a0 = u8 [sp + 0x180]
  2193: 7c 18 7f 01              a1 = u8 [sp + 0x17f]
  2197: 7c 19 7e 01              a2 = u8 [sp + 0x17e]
  2201: 33 06 03                 s1 = 0x3
  2204: 78 16 00 01              u8 [sp + 0x100] = s1
  2208: 95 1b 01 01              a4 = sp + 0x101
  2212: 78 b7 06                 u8 [a4 + 0x6] = a0
  2215: 78 b8 05                 u8 [a4 + 0x5] = a1
  2218: 78 b9 04                 u8 [a4 + 0x4] = a2
  2221: 7c 17 7d 01              a0 = u8 [sp + 0x17d]
  2225: 7c 18 7c 01              a1 = u8 [sp + 0x17c]
  2229: 7c 19 7b 01              a2 = u8 [sp + 0x17b]
  2233: 7c 1a 7a 01              a3 = u8 [sp + 0x17a]
  2237: 78 b7 03                 u8 [a4 + 0x3] = a0
  2240: 78 b8 02                 u8 [a4 + 0x2] = a1
  2243: 78 b9 01                 u8 [a4 + 0x1] = a2
  2246: 78 ba                    u8 [a4] = a3
  2248: 7b 1c 08 01              u64 [sp + 0x108] = a5
  2252: 7b 1c 18 01              u64 [sp + 0x118] = a5
  2256: 49 21 28 01 01           u64 [sp + 296] = 0x1
  2261: 14 07 20 00 00 00 10 00 00 00 a0 = 0x1000000020
  2271: 7b 17 48                 u64 [sp + 0x48] = a0
  2274: 7b 17 30 01              u64 [sp + 0x130] = a0
  2278: 7c 17 87 01              a0 = u8 [sp + 0x187]
  2282: 7c 18 86 01              a1 = u8 [sp + 0x186]
  2286: 7c 19 85 01              a2 = u8 [sp + 0x185]
  2290: 78 16 38 01              u8 [sp + 0x138] = s1
  2294: 95 1b 39 01              a4 = sp + 0x139
  2298: 78 b7 06                 u8 [a4 + 0x6] = a0
  2301: 78 b8 05                 u8 [a4 + 0x5] = a1
  2304: 78 b9 04                 u8 [a4 + 0x4] = a2
  2307: 7c 17 84 01              a0 = u8 [sp + 0x184]
  2311: 7c 18 83 01              a1 = u8 [sp + 0x183]
  2315: 7c 19 82 01              a2 = u8 [sp + 0x182]
  2319: 7c 1a 81 01              a3 = u8 [sp + 0x181]
  2323: 78 b7 03                 u8 [a4 + 0x3] = a0
  2326: 78 b8 02                 u8 [a4 + 0x2] = a1
  2329: 78 b9 01                 u8 [a4 + 0x1] = a2
  2332: 78 ba                    u8 [a4] = a3
  2334: 95 17 88 00              a0 = sp + 0x88
  2338: 7b 17 b8 01              u64 [sp + 0x1b8] = a0
  2342: 82 17 68                 a0 = u64 [sp + 0x68]
  2345: 7b 17 c0 01              u64 [sp + 0x1c0] = a0
  2349: 7b 15 c8 01              u64 [sp + 0x1c8] = s0
  2353: 82 17 30                 a0 = u64 [sp + 0x30]
  2356: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
  2360: 95 17 9c 00              a0 = sp + 0x9c
  2364: 7b 17 d8 01              u64 [sp + 0x1d8] = a0
  2368: 82 17 28                 a0 = u64 [sp + 0x28]
  2371: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
  2375: 7b 1c 40 01              u64 [sp + 0x140] = a5
  2379: 7b 1c 50 01              u64 [sp + 0x150] = a5
  2383: 7b 1c 60 01              u64 [sp + 0x160] = a5
  2387: 7b 12 68 01              u64 [sp + 0x168] = t0
  2391: 78 16 70 01              u8 [sp + 0x170] = s1
  2395: 82 17 20                 a0 = u64 [sp + 0x20]
  2398: 7b 17 a0 00              u64 [sp + 0xa0] = a0
  2402: 7b 16 a8 00              u64 [sp + 0xa8] = s1
  2406: 95 17 d0 00              a0 = sp + 0xd0
  2410: 7b 17 c0 00              u64 [sp + 0xc0] = a0
  2414: 7b 16 c8 00              u64 [sp + 0xc8] = s1
  2418: 95 17 b8 01              a0 = sp + 0x1b8
  2422: 7b 17 b0 00              u64 [sp + 0xb0] = a0
  2426: 7b 16 b8 00              u64 [sp + 0xb8] = s1
  2430: 95 17 a0 01              a0 = sp + 0x1a0
  2434: 95 18 a0 00              a1 = sp + 0xa0
  2438: 50 10 76 dd 04           ra = 118, jump @249
      :                          @162 [@dyn 59]
  2443: 82 15 a8 01              s0 = u64 [sp + 0x1a8]
  2447: 82 1b b0 01              a4 = u64 [sp + 0x1b0]
  2451: 82 16 a0 01              s1 = u64 [sp + 0x1a0]
  2455: 33 07 02                 a0 = 0x2
  2458: 33 08                    a1 = 0
  2460: 33 09                    a2 = 0
  2462: 64 5a                    a3 = s0
  2464: 33 00 78                 ra = 0x78
  2467: 0a 64                    ecalli 100 // 'log'
  2469: 01                       fallthrough
      :                          @163 [@dyn 60]
  2470: 82 17 70                 a0 = u64 [sp + 0x70]
  2473: c8 67 07                 a0 = a0 + s1
  2476: 82 1b 60                 a4 = u64 [sp + 0x60]
  2479: 53 37 00 00 ff 1a        jump @168 if a0 <u 4294901760
      :                          @164
  2485: 82 b7                    a0 = u64 [a4]
  2487: c9 7b 08                 a1 = a4 - a0
  2490: ab 58 0f                 jump @168 if a1 != s0
      :                          @165
  2493: c9 67 08                 a1 = a0 - s1
  2496: 01                       fallthrough
      :                          @166
  2497: 82 b9                    a2 = u64 [a4]
  2499: ab 79 f2                 jump @164 if a2 != a0
      :                          @167
  2502: 7b b8                    u64 [a4] = a1
  2504: 01                       fallthrough
      :                          @168
  2505: 80 18 9c 00              a1 = u32 [sp + 0x9c]
  2509: 33 09 64                 a2 = 0x64
  2512: 33 0a 64                 a3 = 0x64
  2515: 33 0b 00 04              a4 = 0x400
  2519: 82 17 50                 a0 = u64 [sp + 0x50]
  2522: 0a 12                    ecalli 18 // 'new'
  2524: 7b 17 88 01              u64 [sp + 0x188] = a0
  2528: 7b 17 90 01              u64 [sp + 0x190] = a0
  2532: 82 17 80 00              a0 = u64 [sp + 0x80]
  2536: 7a 17 9c 01              u32 [sp + 0x19c] = a0
  2540: 95 17 9c 01              a0 = sp + 0x19c
  2544: 33 08 04                 a1 = 0x4
  2547: 95 19 90 01              a2 = sp + 0x190
  2551: 33 0a 04                 a3 = 0x4
  2554: 0a 04                    ecalli 4 // 'write'
  2556: 33 0c 02                 a5 = 0x2
  2559: 7b 1c d0 00              u64 [sp + 0xd0] = a5
  2563: 7b 1c e0 00              u64 [sp + 0xe0] = a5
  2567: 49 21 f0 00              u64 [sp + 240] = 0
  2571: 49 21 f8 00 20           u64 [sp + 248] = 0x20
  2576: 7c 17 80 01              a0 = u8 [sp + 0x180]
  2580: 7c 18 7f 01              a1 = u8 [sp + 0x17f]
  2584: 7c 19 7e 01              a2 = u8 [sp + 0x17e]
  2588: 33 06 03                 s1 = 0x3
  2591: 78 16 00 01              u8 [sp + 0x100] = s1
  2595: 95 1b 01 01              a4 = sp + 0x101
  2599: 78 b7 06                 u8 [a4 + 0x6] = a0
  2602: 78 b8 05                 u8 [a4 + 0x5] = a1
  2605: 78 b9 04                 u8 [a4 + 0x4] = a2
  2608: 7c 17 7d 01              a0 = u8 [sp + 0x17d]
  2612: 7c 18 7c 01              a1 = u8 [sp + 0x17c]
  2616: 7c 19 7b 01              a2 = u8 [sp + 0x17b]
  2620: 7c 1a 7a 01              a3 = u8 [sp + 0x17a]
  2624: 78 b7 03                 u8 [a4 + 0x3] = a0
  2627: 78 b8 02                 u8 [a4 + 0x2] = a1
  2630: 78 b9 01                 u8 [a4 + 0x1] = a2
  2633: 78 ba                    u8 [a4] = a3
  2635: 7b 1c 08 01              u64 [sp + 0x108] = a5
  2639: 7b 1c 18 01              u64 [sp + 0x118] = a5
  2643: 49 21 28 01 01           u64 [sp + 296] = 0x1
  2648: 82 17 48                 a0 = u64 [sp + 0x48]
  2651: 7b 17 30 01              u64 [sp + 0x130] = a0
  2655: 7c 17 87 01              a0 = u8 [sp + 0x187]
  2659: 7c 18 86 01              a1 = u8 [sp + 0x186]
  2663: 7c 19 85 01              a2 = u8 [sp + 0x185]
  2667: 78 16 38 01              u8 [sp + 0x138] = s1
  2671: 95 1b 39 01              a4 = sp + 0x139
  2675: 78 b7 06                 u8 [a4 + 0x6] = a0
  2678: 78 b8 05                 u8 [a4 + 0x5] = a1
  2681: 78 b9 04                 u8 [a4 + 0x4] = a2
  2684: 7c 17 84 01              a0 = u8 [sp + 0x184]
  2688: 7c 18 83 01              a1 = u8 [sp + 0x183]
  2692: 7c 19 82 01              a2 = u8 [sp + 0x182]
  2696: 7c 1a 81 01              a3 = u8 [sp + 0x181]
  2700: 78 b7 03                 u8 [a4 + 0x3] = a0
  2703: 78 b8 02                 u8 [a4 + 0x2] = a1
  2706: 78 b9 01                 u8 [a4 + 0x1] = a2
  2709: 78 ba                    u8 [a4] = a3
  2711: 95 17 88 01              a0 = sp + 0x188
  2715: 7b 17 a0 00              u64 [sp + 0xa0] = a0
  2719: 82 17 68                 a0 = u64 [sp + 0x68]
  2722: 7b 17 a8 00              u64 [sp + 0xa8] = a0
  2726: 95 17 9c 01              a0 = sp + 0x19c
  2730: 7b 17 b0 00              u64 [sp + 0xb0] = a0
  2734: 82 17 18                 a0 = u64 [sp + 0x18]
  2737: 7b 17 b8 00              u64 [sp + 0xb8] = a0
  2741: 82 17 10                 a0 = u64 [sp + 0x10]
  2744: 7b 17 b8 01              u64 [sp + 0x1b8] = a0
  2748: 7b 1c c0 01              u64 [sp + 0x1c0] = a5
  2752: 95 17 d0 00              a0 = sp + 0xd0
  2756: 7b 17 d8 01              u64 [sp + 0x1d8] = a0
  2760: 7b 1c e0 01              u64 [sp + 0x1e0] = a5
  2764: 95 17 a0 00              a0 = sp + 0xa0
  2768: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
  2772: 7b 1c d0 01              u64 [sp + 0x1d0] = a5
  2776: 95 17 a0 01              a0 = sp + 0x1a0
  2780: 95 18 b8 01              a1 = sp + 0x1b8
  2784: 50 10 7a 83 03           ra = 122, jump @249
      :                          @169 [@dyn 61]
  2789: 82 15 a8 01              s0 = u64 [sp + 0x1a8]
  2793: 82 1b b0 01              a4 = u64 [sp + 0x1b0]
  2797: 82 16 a0 01              s1 = u64 [sp + 0x1a0]
  2801: 33 07 02                 a0 = 0x2
  2804: 33 08                    a1 = 0
  2806: 33 09                    a2 = 0
  2808: 64 5a                    a3 = s0
  2810: 33 00 7c                 ra = 0x7c
  2813: 0a 64                    ecalli 100 // 'log'
  2815: 01                       fallthrough
      :                          @170 [@dyn 62]
  2816: 82 1b 60                 a4 = u64 [sp + 0x60]
  2819: 82 17 70                 a0 = u64 [sp + 0x70]
  2822: c8 67 07                 a0 = a0 + s1
  2825: 53 37 00 00 ff 1a        jump @175 if a0 <u 4294901760
      :                          @171
  2831: 82 b7                    a0 = u64 [a4]
  2833: c9 7b 08                 a1 = a4 - a0
  2836: ab 58 0f                 jump @175 if a1 != s0
      :                          @172
  2839: c9 67 08                 a1 = a0 - s1
  2842: 01                       fallthrough
      :                          @173
  2843: 82 b9                    a2 = u64 [a4]
  2845: ab 79 f2                 jump @171 if a2 != a0
      :                          @174
  2848: 7b b8                    u64 [a4] = a1
  2850: 01                       fallthrough
      :                          @175
  2851: 95 17 d0 00              a0 = sp + 0xd0
  2855: 33 09 80 00              a2 = 0x80
  2859: 33 08                    a1 = 0
  2861: 50 10 7e 62 06           ra = 126, jump @317
      :                          @176 [@dyn 63]
  2866: 82 17 88 01              a0 = u64 [sp + 0x188]
  2870: 33 09 64                 a2 = 0x64
  2873: 95 1a d0 00              a3 = sp + 0xd0
  2877: 82 18 08                 a1 = u64 [sp + 0x8]
  2880: 0a 14                    ecalli 20 // 'transfer'
  2882: 01                       fallthrough
      :                          @177
  2883: 82 19 80 00              a2 = u64 [sp + 0x80]
  2887: 51 19 09 d2 00           jump @191 if a2 == 9
      :                          @178
  2892: 81 17 90 01              a0 = i32 [sp + 0x190]
  2896: 95 98 01                 a1 = a2 + 0x1
  2899: 97 99 02                 a2 = a2 << 0x2
  2902: 82 1a 58                 a3 = u64 [sp + 0x58]
  2905: c8 a9 09                 a2 = a2 + a3
  2908: 98 7a 18                 a3 = a0 >> 0x18
  2911: 78 9a 03                 u8 [a2 + 0x3] = a3
  2914: 98 7a 10                 a3 = a0 >> 0x10
  2917: 78 9a 02                 u8 [a2 + 0x2] = a3
  2920: 98 7a 08                 a3 = a0 >> 0x8
  2923: 78 9a 01                 u8 [a2 + 0x1] = a3
  2926: 78 97                    u8 [a2] = a0
  2928: 64 8b                    a4 = a1
  2930: 82 17                    a0 = u64 [sp]
  2932: 82 16 78                 s1 = u64 [sp + 0x78]
  2935: ab 78 ec fb              jump @137 if a1 != a0
      :                          @179
  2939: 82 1a 88 00              a3 = u64 [sp + 0x88]
  2943: 33 08 20                 a1 = 0x20
  2946: 28 48 fb                 jump @133
      :                          @180
  2949: 33 08 20                 a1 = 0x20
  2952: 28 42 fb                 jump @133
      :                          @181
  2955: 95 17 90 00              a0 = sp + 0x90
  2959: 7b 17 a0 00              u64 [sp + 0xa0] = a0
  2963: 33 07 a0 00              a0 = 0xa0
  2967: 7b 17 a8 00              u64 [sp + 0xa8] = a0
  2971: 33 07 e0 00 01           a0 = 0x100e0
  2976: 7b 17 d0 00              u64 [sp + 0xd0] = a0
  2980: 49 21 d8 00 02           u64 [sp + 216] = 0x2
  2985: 49 21 f0 00              u64 [sp + 240] = 0
  2989: 95 17 a0 00              a0 = sp + 0xa0
  2993: 7b 17 e0 00              u64 [sp + 0xe0] = a0
  2997: 49 21 e8 00 01           u64 [sp + 232] = 0x1
  3002: 95 17 b8 01              a0 = sp + 0x1b8
  3006: 95 18 d0 00              a1 = sp + 0xd0
  3010: 50 20 80 00 a1 02        ra = 128, jump @249
      :                          @182 [@dyn 64]
  3016: 82 15 c0 01              s0 = u64 [sp + 0x1c0]
  3020: 82 1b c8 01              a4 = u64 [sp + 0x1c8]
  3024: 82 16 b8 01              s1 = u64 [sp + 0x1b8]
  3028: 33 07 02                 a0 = 0x2
  3031: 33 08                    a1 = 0
  3033: 33 09                    a2 = 0
  3035: 64 5a                    a3 = s0
  3037: 33 00 82 00              ra = 0x82
  3041: 0a 64                    ecalli 100 // 'log'
  3043: 01                       fallthrough
      :                          @183 [@dyn 65]
  3044: 82 17 70                 a0 = u64 [sp + 0x70]
  3047: c8 67 07                 a0 = a0 + s1
  3050: 53 37 00 00 ff d8 fa     jump @132 if a0 <u 4294901760
      :                          @184
  3057: 33 07 40 10 03           a0 = 0x31040
  3062: 95 77 00 00 01           a0 = a0 + 0x10000
  3067: 01                       fallthrough
      :                          @185
  3068: 82 78                    a1 = u64 [a0]
  3070: c9 87 09                 a2 = a0 - a1
  3073: ab 59 c1 fa              jump @132 if a2 != s0
      :                          @186
  3077: c9 68 09                 a2 = a1 - s1
  3080: 01                       fallthrough
      :                          @187
  3081: 82 7a                    a3 = u64 [a0]
  3083: ab 8a f1                 jump @185 if a3 != a1
      :                          @188
  3086: 7b 79                    u64 [a0] = a2
  3088: 33 0b                    a4 = 0
  3090: 01                       fallthrough
      :                          @189
  3091: ab 8a e9                 jump @185 if a3 != a1
      :                          @190
  3094: 28 ac fa                 jump @132
      :                          @191
  3097: 00                       trap
      :                          @192 [export #2: 'on_transfer']
  3098: 33 07 00 00 01           a0 = 0x10000
  3103: 33 08                    a1 = 0
  3105: 32 00                    ret
      :                          @193
  3107: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  3110: 7b 10 40                 u64 [sp + 0x40] = ra
  3113: 7b 15 38                 u64 [sp + 0x38] = s0
  3116: 7b 16 30                 u64 [sp + 0x30] = s1
  3119: c8 89 09                 a2 = a2 + a1
  3122: ac 89 53                 jump @201 if a2 <u a1
      :                          @194
  3125: 64 75                    s0 = a0
  3127: 82 77                    a0 = u64 [a0]
  3129: 97 78 01                 a1 = a0 << 0x1
  3132: 33 0a 08                 a3 = 0x8
  3135: e4 a9 09                 a2 = maxu(a2, a3)
  3138: e4 98 06                 s1 = maxu(a1, a2)
  3141: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  3144: 98 88 3f                 a1 = a1 >> 0x3f
  3147: 51 07 12                 jump @196 if a0 == 0
      :                          @195
  3150: 82 59 08                 a2 = u64 [s0 + 0x8]
  3153: 7b 19 18                 u64 [sp + 0x18] = a2
  3156: 49 11 20 01              u64 [sp + 32] = 0x1
  3160: 7b 17 28                 u64 [sp + 0x28] = a0
  3163: 28 06                    jump @197
      :                          @196
  3165: 49 11 20                 u64 [sp + 32] = 0
  3168: 01                       fallthrough
      :                          @197
  3169: 64 17                    a0 = sp
  3171: 95 1a 18                 a3 = sp + 0x18
  3174: 64 69                    a2 = s1
  3176: 50 20 84 00 33           ra = 132, jump @205
      :                          @198 [@dyn 66]
  3181: 82 18                    a1 = u64 [sp]
  3183: 82 17 08                 a0 = u64 [sp + 0x8]
  3186: 51 08 14                 jump @202 if a1 == 0
      :                          @199
  3189: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  3199: aa 87 0d                 jump @203 if a0 == a1
      :                          @200
  3202: 52 07 18                 jump @204 if a0 != 0
      :                          @201
  3205: 00                       trap
      :                          @202
  3206: 7b 57 08                 u64 [s0 + 0x8] = a0
  3209: 7b 56                    u64 [s0] = s1
  3211: 01                       fallthrough
      :                          @203
  3212: 82 10 40                 ra = u64 [sp + 0x40]
  3215: 82 15 38                 s0 = u64 [sp + 0x38]
  3218: 82 16 30                 s1 = u64 [sp + 0x30]
  3221: 95 11 48                 sp = sp + 0x48
  3224: 32 00                    ret
      :                          @204
  3226: 00                       trap
      :                          @205
  3227: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  3230: 7b 10 30                 u64 [sp + 0x30] = ra
  3233: 7b 15 28                 u64 [sp + 0x28] = s0
  3236: 7b 16 20                 u64 [sp + 0x20] = s1
  3239: 64 95                    s0 = a2
  3241: 64 72                    t0 = a0
  3243: 51 08 7a                 jump @215 if a1 == 0
      :                          @206
  3246: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3249: 51 07 7d                 jump @216 if a0 == 0
      :                          @207
  3252: 82 a9 10                 a2 = u64 [a3 + 0x10]
  3255: 51 09 ab 00              jump @223 if a2 == 0
      :                          @208
  3259: 82 a8                    a1 = u64 [a3]
  3261: 33 06 40 10 03           s1 = 0x31040
  3266: 33 03 00 00 01           t1 = 0x10000
  3271: c8 36 06                 s1 = s1 + t1
  3274: 01                       fallthrough
      :                          @209
  3275: 82 6a                    a3 = u64 [s1]
  3277: c8 5a 07                 a0 = a3 + s0
  3280: ac a7 d0 00              jump @229 if a0 <u a3
      :                          @210
  3284: 95 7b 01                 a4 = a0 + 0x1
  3287: 88 bc 01                 a5 = a4 <u 0x1
  3290: d8 b3 0b                 a4 = t1 <u a4
  3293: d4 cb 0b                 a4 = a4 | a5
  3296: 52 0b c0 00              jump @229 if a4 != 0
      :                          @211
  3300: 82 6b                    a4 = u64 [s1]
  3302: ab ab e5                 jump @209 if a4 != a3
      :                          @212
  3305: 7b 67                    u64 [s1] = a0
  3307: 33 0c                    a5 = 0
  3309: 7b 12 18                 u64 [sp + 0x18] = t0
  3312: 33 0a 40 10 03           a3 = 0x31040
  3317: 33 0b 00 00 01           a4 = 0x10000
  3322: 7b 1a                    u64 [sp] = a3
  3324: c8 ba 0a                 a3 = a3 + a4
  3327: c9 7a 07                 a0 = a3 - a0
  3330: 7b 17 10                 u64 [sp + 0x10] = a0
  3333: 7b 18 08                 u64 [sp + 0x8] = a1
  3336: 64 96                    s1 = a2
  3338: 50 20 86 00 d3 03        ra = 134, jump @299
      :                          @213 [@dyn 67]
  3344: 54 36 00 00 01 98 00     jump @230 if s1 <=u 65536
      :                          @214
  3351: 82 12 18                 t0 = u64 [sp + 0x18]
  3354: 82 18 10                 a1 = u64 [sp + 0x10]
  3357: 33 07                    a0 = 0
  3359: 7b 28 08                 u64 [t0 + 0x8] = a1
  3362: 28 b5 00                 jump @236
      :                          @215
  3365: 49 12 08                 u64 [t0 + 8] = 0
  3368: 33 07 01                 a0 = 0x1
  3371: 28 ac 00                 jump @236
      :                          @216
  3374: 33 09 40 10 03           a2 = 0x31040
  3379: 33 07 00 00 01           a0 = 0x10000
  3384: c8 79 09                 a2 = a2 + a0
  3387: 01                       fallthrough
      :                          @217
  3388: 82 9a                    a3 = u64 [a2]
  3390: c8 5a 08                 a1 = a3 + s0
  3393: ac a8 5f                 jump @229 if a1 <u a3
      :                          @218
  3396: 95 8b 01                 a4 = a1 + 0x1
  3399: 88 bc 01                 a5 = a4 <u 0x1
  3402: d8 b7 0b                 a4 = a0 <u a4
  3405: d4 cb 0b                 a4 = a4 | a5
  3408: 52 0b 50                 jump @229 if a4 != 0
      :                          @219
  3411: 82 9b                    a4 = u64 [a2]
  3413: ab ab e7                 jump @217 if a4 != a3
      :                          @220
  3416: 7b 98                    u64 [a2] = a1
  3418: 33 0c                    a5 = 0
  3420: 01                       fallthrough
      :                          @221
  3421: ab ab df                 jump @217 if a4 != a3
      :                          @222
  3424: 28 31                    jump @228
      :                          @223
  3426: 33 09 40 10 03           a2 = 0x31040
  3431: 33 07 00 00 01           a0 = 0x10000
  3436: c8 79 09                 a2 = a2 + a0
  3439: 01                       fallthrough
      :                          @224
  3440: 82 9a                    a3 = u64 [a2]
  3442: c8 5a 08                 a1 = a3 + s0
  3445: ac a8 2b                 jump @229 if a1 <u a3
      :                          @225
  3448: 95 8b 01                 a4 = a1 + 0x1
  3451: 88 bc 01                 a5 = a4 <u 0x1
  3454: d8 b7 0b                 a4 = a0 <u a4
  3457: d4 cb 0b                 a4 = a4 | a5
  3460: 52 0b 1c                 jump @229 if a4 != 0
      :                          @226
  3463: 82 9b                    a4 = u64 [a2]
  3465: ab ab e7                 jump @224 if a4 != a3
      :                          @227
  3468: 7b 98                    u64 [a2] = a1
  3470: 33 0c                    a5 = 0
  3472: 01                       fallthrough
      :                          @228
  3473: 33 07 40 10 04           a0 = 0x41040
  3478: c9 87 08                 a1 = a0 - a1
  3481: 33 07                    a0 = 0
  3483: 7b 28 08                 u64 [t0 + 0x8] = a1
  3486: 28 39                    jump @236
      :                          @229
  3488: 33 07 01                 a0 = 0x1
  3491: 7b 27 08                 u64 [t0 + 0x8] = a0
  3494: 28 31                    jump @236
      :                          @230
  3496: 64 6c                    a5 = s1
  3498: 82 17                    a0 = u64 [sp]
  3500: 95 77 00 00 01           a0 = a0 + 0x10000
  3505: 82 12 18                 t0 = u64 [sp + 0x18]
  3508: 82 16 08                 s1 = u64 [sp + 0x8]
  3511: 01                       fallthrough
      :                          @231
  3512: 82 78                    a1 = u64 [a0]
  3514: c9 87 09                 a2 = a0 - a1
  3517: ab 69 11                 jump @235 if a2 != s1
      :                          @232
  3520: c9 c8 09                 a2 = a1 - a5
  3523: 01                       fallthrough
      :                          @233
  3524: 82 7a                    a3 = u64 [a0]
  3526: ab 8a f2                 jump @231 if a3 != a1
      :                          @234
  3529: 7b 79                    u64 [a0] = a2
  3531: 33 0b                    a4 = 0
  3533: 01                       fallthrough
      :                          @235
  3534: 82 18 10                 a1 = u64 [sp + 0x10]
  3537: 33 07                    a0 = 0
  3539: 7b 28 08                 u64 [t0 + 0x8] = a1
  3542: 01                       fallthrough
      :                          @236
  3543: 7b 25 10                 u64 [t0 + 0x10] = s0
  3546: 7b 27                    u64 [t0] = a0
  3548: 82 10 30                 ra = u64 [sp + 0x30]
  3551: 82 15 28                 s0 = u64 [sp + 0x28]
  3554: 82 16 20                 s1 = u64 [sp + 0x20]
  3557: 95 11 38                 sp = sp + 0x38
  3560: 32 00                    ret
      :                          @237
  3562: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  3565: 7b 10 40                 u64 [sp + 0x40] = ra
  3568: 7b 15 38                 u64 [sp + 0x38] = s0
  3571: 7b 16 30                 u64 [sp + 0x30] = s1
  3574: 95 88 01                 a1 = a1 + 0x1
  3577: 51 08 54                 jump @245 if a1 == 0
      :                          @238
  3580: 64 75                    s0 = a0
  3582: 82 77                    a0 = u64 [a0]
  3584: 97 79 01                 a2 = a0 << 0x1
  3587: 33 0a 08                 a3 = 0x8
  3590: e4 a8 08                 a1 = maxu(a1, a3)
  3593: e4 89 06                 s1 = maxu(a2, a1)
  3596: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  3599: 98 88 3f                 a1 = a1 >> 0x3f
  3602: 51 07 12                 jump @240 if a0 == 0
      :                          @239
  3605: 82 59 08                 a2 = u64 [s0 + 0x8]
  3608: 7b 19 18                 u64 [sp + 0x18] = a2
  3611: 49 11 20 01              u64 [sp + 32] = 0x1
  3615: 7b 17 28                 u64 [sp + 0x28] = a0
  3618: 28 06                    jump @241
      :                          @240
  3620: 49 11 20                 u64 [sp + 32] = 0
  3623: 01                       fallthrough
      :                          @241
  3624: 64 17                    a0 = sp
  3626: 95 1a 18                 a3 = sp + 0x18
  3629: 64 69                    a2 = s1
  3631: 50 20 88 00 6c fe        ra = 136, jump @205
      :                          @242 [@dyn 68]
  3637: 82 18                    a1 = u64 [sp]
  3639: 82 17 08                 a0 = u64 [sp + 0x8]
  3642: 51 08 14                 jump @246 if a1 == 0
      :                          @243
  3645: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  3655: aa 87 0d                 jump @247 if a0 == a1
      :                          @244
  3658: 52 07 18                 jump @248 if a0 != 0
      :                          @245
  3661: 00                       trap
      :                          @246
  3662: 7b 57 08                 u64 [s0 + 0x8] = a0
  3665: 7b 56                    u64 [s0] = s1
  3667: 01                       fallthrough
      :                          @247
  3668: 82 10 40                 ra = u64 [sp + 0x40]
  3671: 82 15 38                 s0 = u64 [sp + 0x38]
  3674: 82 16 30                 s1 = u64 [sp + 0x30]
  3677: 95 11 48                 sp = sp + 0x48
  3680: 32 00                    ret
      :                          @248
  3682: 00                       trap
      :                          @249
  3683: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  3686: 7b 10 30                 u64 [sp + 0x30] = ra
  3689: 7b 15 28                 u64 [sp + 0x28] = s0
  3692: 7b 16 20                 u64 [sp + 0x20] = s1
  3695: 64 89                    a2 = a1
  3697: 82 8a 08                 a3 = u64 [a1 + 0x8]
  3700: 64 75                    s0 = a0
  3702: 51 0a 35                 jump @254 if a3 == 0
      :                          @250
  3705: 82 98                    a1 = u64 [a2]
  3707: 33 07                    a0 = 0
  3709: 95 8b 08                 a4 = a1 + 0x8
  3712: 01                       fallthrough
      :                          @251
  3713: 82 bc                    a5 = u64 [a4]
  3715: c8 c7 07                 a0 = a0 + a5
  3718: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  3721: 95 bb 10                 a4 = a4 + 0x10
  3724: 52 0a f5                 jump @251 if a3 != 0
      :                          @252
  3727: 82 9a 18                 a3 = u64 [a2 + 0x18]
  3730: 51 0a 24                 jump @256 if a3 == 0
      :                          @253
  3733: 82 88 08                 a1 = u64 [a1 + 0x8]
  3736: 8e 88                    a1 = a1 >u 0
  3738: 88 7a 10                 a3 = a0 <u 0x10
  3741: 85 aa 01                 a3 = a3 ^ 0x1
  3744: d4 a8 08                 a1 = a1 | a3
  3747: 89 7a                    a3 = a0 <s 0
  3749: e0 a8 08                 a1 = a1 & ~a3
  3752: 52 08 0a                 jump @255 if a1 != 0
      :                          @254
  3755: 33 07                    a0 = 0
  3757: 33 08 01                 a1 = 0x1
  3760: 28 4a                    jump @264
      :                          @255
  3762: 97 77 01                 a0 = a0 << 0x1
  3765: 01                       fallthrough
      :                          @256
  3766: 51 07 40                 jump @263 if a0 == 0
      :                          @257
  3769: 57 07 79                 jump @269 if a0 <s 0
      :                          @258
  3772: 64 52                    t0 = s0
  3774: 33 0b 40 10 03           a4 = 0x31040
  3779: 33 08 00 00 01           a1 = 0x10000
  3784: c8 8b 0b                 a4 = a4 + a1
  3787: 01                       fallthrough
      :                          @259
  3788: 82 bc                    a5 = u64 [a4]
  3790: c8 7c 0a                 a3 = a5 + a0
  3793: ac ca 5f                 jump @267 if a3 <u a5
      :                          @260
  3796: 95 a5 01                 s0 = a3 + 0x1
  3799: 88 56 01                 s1 = s0 <u 0x1
  3802: d8 58 05                 s0 = a1 <u s0
  3805: d4 65 05                 s0 = s0 | s1
  3808: 52 05 50                 jump @267 if s0 != 0
      :                          @261
  3811: 82 b6                    s1 = u64 [a4]
  3813: ab c6 e7                 jump @259 if s1 != a5
      :                          @262
  3816: 7b ba                    u64 [a4] = a3
  3818: 33 08 40 10 04           a1 = 0x41040
  3823: c9 a8 08                 a1 = a1 - a3
  3826: 64 25                    s0 = t0
  3828: 28 06                    jump @264
      :                          @263
  3830: 33 08 01                 a1 = 0x1
  3833: 01                       fallthrough
      :                          @264
  3834: 7b 17                    u64 [sp] = a0
  3836: 7b 18 08                 u64 [sp + 0x8] = a1
  3839: 49 11 10                 u64 [sp + 16] = 0
  3842: 33 08 00 01 01           a1 = 0x10100
  3847: 64 17                    a0 = sp
  3849: 50 20 8a 00 80 06        ra = 138, jump @393
      :                          @265 [@dyn 69]
  3855: 52 07 22                 jump @268 if a0 != 0
      :                          @266
  3858: 82 17 10                 a0 = u64 [sp + 0x10]
  3861: 82 18 08                 a1 = u64 [sp + 0x8]
  3864: 82 19                    a2 = u64 [sp]
  3866: 7b 57 10                 u64 [s0 + 0x10] = a0
  3869: 7b 58 08                 u64 [s0 + 0x8] = a1
  3872: 7b 59                    u64 [s0] = a2
  3874: 82 10 30                 ra = u64 [sp + 0x30]
  3877: 82 15 28                 s0 = u64 [sp + 0x28]
  3880: 82 16 20                 s1 = u64 [sp + 0x20]
  3883: 95 11 38                 sp = sp + 0x38
  3886: 32 00                    ret
      :                          @267
  3888: 00                       trap
      :                          @268
  3889: 00                       trap
      :                          @269
  3890: 00                       trap
      :                          @270 [@dyn 70]
  3891: 82 72                    t0 = u64 [a0]
  3893: 33 09 00 00 ff           a2 = 0xffffffffffff0000
  3898: 95 2a ff ff fe           a3 = t0 + 0xfffffffffffeffff
  3903: ac 9a 28                 jump @276 if a3 <u a2
      :                          @271
  3906: 82 77 08                 a0 = u64 [a0 + 0x8]
  3909: 33 09 40 10 03           a2 = 0x31040
  3914: 95 99 00 00 01           a2 = a2 + 0x10000
  3919: 01                       fallthrough
      :                          @272
  3920: 82 9a                    a3 = u64 [a2]
  3922: c9 a9 0b                 a4 = a2 - a3
  3925: ab 7b 12                 jump @276 if a4 != a0
      :                          @273
  3928: c9 2a 0b                 a4 = a3 - t0
  3931: 01                       fallthrough
      :                          @274
  3932: 82 9c                    a5 = u64 [a2]
  3934: ab ac f2                 jump @272 if a5 != a3
      :                          @275
  3937: 7b 9b                    u64 [a2] = a4
  3939: 33 08                    a1 = 0
  3941: 32 00                    ret
      :                          @276
  3943: 32 00                    ret
      :                          @277 [@dyn 71]
  3945: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3948: 7b 10 18                 u64 [sp + 0x18] = ra
  3951: 7b 15 10                 u64 [sp + 0x10] = s0
  3954: 7b 16 08                 u64 [sp + 0x8] = s1
  3957: 64 75                    s0 = a0
  3959: 82 7a 10                 a3 = u64 [a0 + 0x10]
  3962: 82 77                    a0 = u64 [a0]
  3964: c9 a7 07                 a0 = a0 - a3
  3967: 64 96                    s1 = a2
  3969: ac 97 2b                 jump @280 if a0 <u a2
      :                          @278
  3972: 7b 1a                    u64 [sp] = a3
  3974: 82 57 08                 a0 = u64 [s0 + 0x8]
  3977: c8 a7 07                 a0 = a0 + a3
  3980: 64 69                    a2 = s1
  3982: 50 20 90 00 4f 01        ra = 144, jump @299
      :                          @279 [@dyn 72]
  3988: 82 17                    a0 = u64 [sp]
  3990: c8 76 06                 s1 = s1 + a0
  3993: 7b 56 10                 u64 [s0 + 0x10] = s1
  3996: 33 07                    a0 = 0
  3998: 82 10 18                 ra = u64 [sp + 0x18]
  4001: 82 15 10                 s0 = u64 [sp + 0x10]
  4004: 82 16 08                 s1 = u64 [sp + 0x8]
  4007: 95 11 20                 sp = sp + 0x20
  4010: 32 00                    ret
      :                          @280
  4012: 64 57                    a0 = s0
  4014: 7b 18                    u64 [sp] = a1
  4016: 64 a8                    a1 = a3
  4018: 64 69                    a2 = s1
  4020: 50 20 92 00 6f fc        ra = 146, jump @193
      :                          @281 [@dyn 73]
  4026: 82 18                    a1 = u64 [sp]
  4028: 82 5a 10                 a3 = u64 [s0 + 0x10]
  4031: 28 c5                    jump @278
      :                          @282 [@dyn 74]
  4033: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  4036: 7b 10 20                 u64 [sp + 0x20] = ra
  4039: 7b 15 18                 u64 [sp + 0x18] = s0
  4042: 7b 16 10                 u64 [sp + 0x10] = s1
  4045: 64 86                    s1 = a1
  4047: 83 88                    i32 a1 = a1 + 0
  4049: 33 09 80 00              a2 = 0x80
  4053: 64 7a                    a3 = a0
  4055: ae 98 2c                 jump @287 if a1 >=u a2
      :                          @283
  4058: 82 a8 10                 a1 = u64 [a3 + 0x10]
  4061: 82 a7                    a0 = u64 [a3]
  4063: ab 78 13                 jump @286 if a1 != a0
      :                          @284
  4066: 64 a7                    a0 = a3
  4068: 64 a5                    s0 = a3
  4070: 50 20 96 00 04 fe        ra = 150, jump @237
      :                          @285 [@dyn 75]
  4076: 64 5a                    a3 = s0
  4078: 82 58 10                 a1 = u64 [s0 + 0x10]
  4081: 01                       fallthrough
      :                          @286
  4082: 82 a7 08                 a0 = u64 [a3 + 0x8]
  4085: c8 87 07                 a0 = a0 + a1
  4088: 78 76                    u8 [a0] = s1
  4090: 95 88 01                 a1 = a1 + 0x1
  4093: 7b a8 10                 u64 [a3 + 0x10] = a1
  4096: 28 ac 00                 jump @295
      :                          @287
  4099: 8b 67 0b                 i32 a0 = s1 >> 0xb
  4102: 48 11 0c                 u32 [sp + 12] = 0
  4105: 52 07 1c                 jump @289 if a0 != 0
      :                          @288
  4108: 98 67 06                 a0 = s1 >> 0x6
  4111: 86 77 c0 00              a0 = a0 | 0xc0
  4115: 78 17 0c                 u8 [sp + 0xc] = a0
  4118: 84 67 3f                 a0 = s1 & 0x3f
  4121: 86 77 80 00              a0 = a0 | 0x80
  4125: 78 17 0d                 u8 [sp + 0xd] = a0
  4128: 33 06 02                 s1 = 0x2
  4131: 28 63                    jump @292
      :                          @289
  4133: 8b 67 10                 i32 a0 = s1 >> 0x10
  4136: 52 07 29                 jump @291 if a0 != 0
      :                          @290
  4139: 98 67 0c                 a0 = s1 >> 0xc
  4142: 86 77 e0 00              a0 = a0 | 0xe0
  4146: 78 17 0c                 u8 [sp + 0xc] = a0
  4149: 97 67 34                 a0 = s1 << 0x34
  4152: 98 77 3a                 a0 = a0 >> 0x3a
  4155: 95 77 80 00              a0 = a0 + 0x80
  4159: 78 17 0d                 u8 [sp + 0xd] = a0
  4162: 84 67 3f                 a0 = s1 & 0x3f
  4165: 86 77 80 00              a0 = a0 | 0x80
  4169: 78 17 0e                 u8 [sp + 0xe] = a0
  4172: 33 06 03                 s1 = 0x3
  4175: 28 37                    jump @292
      :                          @291
  4177: 97 67 2b                 a0 = s1 << 0x2b
  4180: 98 77 3d                 a0 = a0 >> 0x3d
  4183: 95 77 f0 00              a0 = a0 + 0xf0
  4187: 78 17 0c                 u8 [sp + 0xc] = a0
  4190: 97 67 2e                 a0 = s1 << 0x2e
  4193: 98 77 3a                 a0 = a0 >> 0x3a
  4196: 95 77 80 00              a0 = a0 + 0x80
  4200: 78 17 0d                 u8 [sp + 0xd] = a0
  4203: 97 67 34                 a0 = s1 << 0x34
  4206: 98 77 3a                 a0 = a0 >> 0x3a
  4209: 95 77 80 00              a0 = a0 + 0x80
  4213: 78 17 0e                 u8 [sp + 0xe] = a0
  4216: 84 67 3f                 a0 = s1 & 0x3f
  4219: 86 77 80 00              a0 = a0 | 0x80
  4223: 78 17 0f                 u8 [sp + 0xf] = a0
  4226: 33 06 04                 s1 = 0x4
  4229: 01                       fallthrough
      :                          @292
  4230: 82 a5 10                 s0 = u64 [a3 + 0x10]
  4233: 82 a7                    a0 = u64 [a3]
  4235: c9 57 07                 a0 = a0 - s0
  4238: ac 67 2e                 jump @296 if a0 <u s1
      :                          @293
  4241: 7b 1a                    u64 [sp] = a3
  4243: 82 a7 08                 a0 = u64 [a3 + 0x8]
  4246: c8 57 07                 a0 = a0 + s0
  4249: 95 18 0c                 a1 = sp + 0xc
  4252: 64 69                    a2 = s1
  4254: 50 20 98 00 3f           ra = 152, jump @299
      :                          @294 [@dyn 76]
  4259: c8 56 06                 s1 = s1 + s0
  4262: 82 17                    a0 = u64 [sp]
  4264: 7b 76 10                 u64 [a0 + 0x10] = s1
  4267: 01                       fallthrough
      :                          @295
  4268: 33 07                    a0 = 0
  4270: 82 10 20                 ra = u64 [sp + 0x20]
  4273: 82 15 18                 s0 = u64 [sp + 0x18]
  4276: 82 16 10                 s1 = u64 [sp + 0x10]
  4279: 95 11 28                 sp = sp + 0x28
  4282: 32 00                    ret
      :                          @296
  4284: 64 a7                    a0 = a3
  4286: 64 58                    a1 = s0
  4288: 64 69                    a2 = s1
  4290: 64 a5                    s0 = a3
  4292: 50 20 9a 00 5f fb        ra = 154, jump @193
      :                          @297 [@dyn 77]
  4298: 64 5a                    a3 = s0
  4300: 82 55 10                 s0 = u64 [s0 + 0x10]
  4303: 28 c2                    jump @293
      :                          @298 [@dyn 78]
  4305: 64 8a                    a3 = a1
  4307: 33 08 00 01 01           a1 = 0x10100
  4312: 64 a9                    a2 = a3
  4314: 28 af 04                 jump @393
      :                          @299
  4317: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  4320: 7b 10 18                 u64 [sp + 0x18] = ra
  4323: 7b 15 10                 u64 [sp + 0x10] = s0
  4326: 7b 16 08                 u64 [sp + 0x8] = s1
  4329: 53 19 10 64              jump @308 if a2 <u 16
      :                          @300
  4333: 8d 7a                    i32 a3 = -a0
  4335: 84 a2 07                 t0 = a3 & 0x7
  4338: c8 27 0b                 a4 = a0 + t0
  4341: 51 02 15                 jump @303 if t0 == 0
      :                          @301
  4344: 64 8c                    a5 = a1
  4346: 64 75                    s0 = a0
  4348: 01                       fallthrough
      :                          @302
  4349: 7c ca                    a3 = u8 [a5]
  4351: 78 5a                    u8 [s0] = a3
  4353: 95 55 01                 s0 = s0 + 0x1
  4356: 95 cc 01                 a5 = a5 + 0x1
  4359: ac b5 f6                 jump @302 if s0 <u a4
      :                          @303
  4362: c8 28 03                 t1 = a1 + t0
  4365: c9 29 02                 t0 = a2 - t0
  4368: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  4371: 84 38 07                 a1 = t1 & 0x7
  4374: c8 4b 0a                 a3 = a4 + t2
  4377: 51 08 3b                 jump @310 if a1 == 0
      :                          @304
  4380: 58 04 4b                 jump @313 if t2 <=s 0
      :                          @305
  4383: 97 38 03                 a1 = t1 << 0x3
  4386: 84 80 38                 ra = a1 & 0x38
  4389: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  4392: 82 c5                    s0 = u64 [a5]
  4394: 8d 88                    i32 a1 = -a1
  4396: 84 88 38                 a1 = a1 & 0x38
  4399: 95 cc 08                 a5 = a5 + 0x8
  4402: 01                       fallthrough
      :                          @306
  4403: 82 c6                    s1 = u64 [a5]
  4405: d0 05 05                 s0 = s0 >> ra
  4408: cf 86 09                 a2 = s1 << a1
  4411: d4 59 09                 a2 = a2 | s0
  4414: 7b b9                    u64 [a4] = a2
  4416: 95 bb 08                 a4 = a4 + 0x8
  4419: 95 cc 08                 a5 = a5 + 0x8
  4422: 64 65                    s0 = s1
  4424: ac ab eb                 jump @306 if a4 <u a3
      :                          @307
  4427: 28 1c                    jump @313
      :                          @308
  4429: 64 7a                    a3 = a0
  4431: 52 09 21                 jump @314 if a2 != 0
      :                          @309
  4434: 28 2f                    jump @316
      :                          @310
  4436: 58 04 13                 jump @313 if t2 <=s 0
      :                          @311
  4439: 64 38                    a1 = t1
  4441: 01                       fallthrough
      :                          @312
  4442: 82 89                    a2 = u64 [a1]
  4444: 7b b9                    u64 [a4] = a2
  4446: 95 bb 08                 a4 = a4 + 0x8
  4449: 95 88 08                 a1 = a1 + 0x8
  4452: ac ab f6                 jump @312 if a4 <u a3
      :                          @313
  4455: c8 43 08                 a1 = t1 + t2
  4458: 84 29 07                 a2 = t0 & 0x7
  4461: 51 09 14                 jump @316 if a2 == 0
      :                          @314
  4464: c8 a9 09                 a2 = a2 + a3
  4467: 01                       fallthrough
      :                          @315
  4468: 7c 8b                    a4 = u8 [a1]
  4470: 78 ab                    u8 [a3] = a4
  4472: 95 aa 01                 a3 = a3 + 0x1
  4475: 95 88 01                 a1 = a1 + 0x1
  4478: ac 9a f6                 jump @315 if a3 <u a2
      :                          @316
  4481: 82 10 18                 ra = u64 [sp + 0x18]
  4484: 82 15 10                 s0 = u64 [sp + 0x10]
  4487: 82 16 08                 s1 = u64 [sp + 0x8]
  4490: 95 11 20                 sp = sp + 0x20
  4493: 32 00                    ret
      :                          @317
  4495: 8d 7a                    i32 a3 = -a0
  4497: 84 aa 07                 a3 = a3 & 0x7
  4500: c8 a7 0b                 a4 = a0 + a3
  4503: 51 0a 0e                 jump @320 if a3 == 0
      :                          @318
  4506: 64 7c                    a5 = a0
  4508: 01                       fallthrough
      :                          @319
  4509: 78 c8                    u8 [a5] = a1
  4511: 95 cc 01                 a5 = a5 + 0x1
  4514: ac bc fb                 jump @319 if a5 <u a4
      :                          @320
  4517: c9 a9 03                 t1 = a2 - a3
  4520: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  4523: c8 cb 0a                 a3 = a4 + a5
  4526: 58 0c 1d                 jump @323 if a5 <=s 0
      :                          @321
  4529: 84 82 ff 00              t0 = a1 & 0xff
  4533: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  4543: ca 92 0c                 a5 = t0 * a2
  4546: 01                       fallthrough
      :                          @322
  4547: 7b bc                    u64 [a4] = a5
  4549: 95 bb 08                 a4 = a4 + 0x8
  4552: ac ab fb                 jump @322 if a4 <u a3
      :                          @323
  4555: 84 39 07                 a2 = t1 & 0x7
  4558: 52 09 05                 jump @325 if a2 != 0
      :                          @324
  4561: 28 0e                    jump @327
      :                          @325
  4563: c8 a9 09                 a2 = a2 + a3
  4566: 01                       fallthrough
      :                          @326
  4567: 78 a8                    u8 [a3] = a1
  4569: 95 aa 01                 a3 = a3 + 0x1
  4572: ac 9a fb                 jump @326 if a3 <u a2
      :                          @327
  4575: 32 00                    ret
      :                          @328 [@dyn 79]
  4577: 82 77                    a0 = u64 [a0]
  4579: 01                       fallthrough
      :                          @329
  4580: 28                       jump @329
      :                          @330 [@dyn 80]
  4581: 82 77                    a0 = u64 [a0]
  4583: 01                       fallthrough
      :                          @331
  4584: 95 11 a8                 sp = sp + 0xffffffffffffffa8
  4587: 7b 10 50                 u64 [sp + 0x50] = ra
  4590: 7b 15 48                 u64 [sp + 0x48] = s0
  4593: 7b 16 40                 u64 [sp + 0x40] = s1
  4596: 7b 18                    u64 [sp] = a1
  4598: 98 79 04                 a2 = a0 >> 0x4
  4601: 33 08 27                 a1 = 0x27
  4604: 53 29 71 02 81 00        jump @334 if a2 <u 625
      :                          @332
  4610: 33 08 27                 a1 = 0x27
  4613: 95 1a 3e                 a3 = sp + 0x3e
  4616: 3a 09 00 00 03           a2 = u64 [0x30000]
  4621: 7b 19 10                 u64 [sp + 0x10] = a2
  4624: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
  4630: 33 04 7b 14              t2 = 0x147b
  4634: 33 0b 74 01 01           a4 = 0x10174
  4639: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
  4645: 01                       fallthrough
      :                          @333
  4646: 64 72                    t0 = a0
  4648: 82 17 10                 a0 = u64 [sp + 0x10]
  4651: d6 72 07                 a0 = t0 mulhu a0
  4654: 98 77 0b                 a0 = a0 >> 0xb
  4657: 82 19 08                 a2 = u64 [sp + 0x8]
  4660: c0 97 0c                 i32 a5 = a0 * a2
  4663: c8 2c 06                 s1 = a5 + t0
  4666: 97 6c 30                 a5 = s1 << 0x30
  4669: 98 cc 32                 a5 = a5 >> 0x32
  4672: ca 4c 0c                 a5 = a5 * t2
  4675: 98 c3 11                 t1 = a5 >> 0x11
  4678: 98 cc 10                 a5 = a5 >> 0x10
  4681: 84 cc fe 07              a5 = a5 & 0x7fe
  4685: 96 39 9c                 a2 = t1 * 0xffffffffffffff9c
  4688: c8 69 09                 a2 = a2 + s1
  4691: 97 99 31                 a2 = a2 << 0x31
  4694: 98 99 30                 a2 = a2 >> 0x30
  4697: c8 bc 0c                 a5 = a5 + a4
  4700: 7c c6                    s1 = u8 [a5]
  4702: 7c cc 01                 a5 = u8 [a5 + 0x1]
  4705: c8 b9 09                 a2 = a2 + a4
  4708: 7c 95 01                 s0 = u8 [a2 + 0x1]
  4711: 7c 99                    a2 = u8 [a2]
  4713: 78 ac ff                 u8 [a3 + 0xffffffffffffffff] = a5
  4716: 78 a6 fe                 u8 [a3 + 0xfffffffffffffffe] = s1
  4719: 78 a5 01                 u8 [a3 + 0x1] = s0
  4722: 78 a9                    u8 [a3] = a2
  4724: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
  4727: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
  4730: ac 20 ac                 jump @333 if ra <u t0
      :                          @334
  4733: 54 17 63 3b              jump @336 if a0 <=u 99
      :                          @335
  4737: 97 79 30                 a2 = a0 << 0x30
  4740: 98 99 32                 a2 = a2 >> 0x32
  4743: 96 99 7b 14              a2 = a2 * 0x147b
  4747: 98 99 11                 a2 = a2 >> 0x11
  4750: 96 9a 9c                 a3 = a2 * 0xffffffffffffff9c
  4753: c8 a7 07                 a0 = a0 + a3
  4756: 97 77 31                 a0 = a0 << 0x31
  4759: 98 77 30                 a0 = a0 >> 0x30
  4762: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  4765: 33 0a 74 01 01           a3 = 0x10174
  4770: c8 a7 07                 a0 = a0 + a3
  4773: 7c 7a 01                 a3 = u8 [a0 + 0x1]
  4776: 7c 77                    a0 = u8 [a0]
  4778: 95 1b 19                 a4 = sp + 0x19
  4781: c8 8b 0b                 a4 = a4 + a1
  4784: 78 ba 01                 u8 [a4 + 0x1] = a3
  4787: 78 b7                    u8 [a4] = a0
  4789: 64 97                    a0 = a2
  4791: 01                       fallthrough
      :                          @336
  4792: 55 17 0a 14              jump @338 if a0 >=u 10
      :                          @337
  4796: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  4799: 95 19 19                 a2 = sp + 0x19
  4802: c8 89 09                 a2 = a2 + a1
  4805: 83 77 30                 i32 a0 = a0 + 0x30
  4808: 78 97                    u8 [a2] = a0
  4810: 28 21                    jump @339
      :                          @338
  4812: 97 77 01                 a0 = a0 << 0x1
  4815: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  4818: 33 09 74 01 01           a2 = 0x10174
  4823: c8 97 07                 a0 = a0 + a2
  4826: 7c 79 01                 a2 = u8 [a0 + 0x1]
  4829: 7c 77                    a0 = u8 [a0]
  4831: 95 1a 19                 a3 = sp + 0x19
  4834: c8 8a 0a                 a3 = a3 + a1
  4837: 78 a9 01                 u8 [a3 + 0x1] = a2
  4840: 78 a7                    u8 [a3] = a0
  4842: 01                       fallthrough
      :                          @339
  4843: 95 1a 19                 a3 = sp + 0x19
  4846: c8 8a 0a                 a3 = a3 + a1
  4849: 9a 8b 27                 a4 = 0x27 - a1
  4852: 33 08 30 01 01           a1 = 0x10130
  4857: 82 17                    a0 = u64 [sp]
  4859: 33 09                    a2 = 0
  4861: 50 20 a2 00 13           ra = 162, jump @341
      :                          @340 [@dyn 81]
  4866: 82 10 50                 ra = u64 [sp + 0x50]
  4869: 82 15 48                 s0 = u64 [sp + 0x48]
  4872: 82 16 40                 s1 = u64 [sp + 0x40]
  4875: 95 11 58                 sp = sp + 0x58
  4878: 32 00                    ret
      :                          @341
  4880: 95 11 98                 sp = sp + 0xffffffffffffff98
  4883: 7b 10 60                 u64 [sp + 0x60] = ra
  4886: 7b 15 58                 u64 [sp + 0x58] = s0
  4889: 7b 16 50                 u64 [sp + 0x50] = s1
  4892: 80 73 34                 t1 = u32 [a0 + 0x34]
  4895: 7b 1a 20                 u64 [sp + 0x20] = a3
  4898: 64 9c                    a5 = a2
  4900: 84 36 01                 s1 = t1 & 0x1
  4903: 33 02 2b                 t0 = 0x2b
  4906: 33 09 00 00 11           a2 = 0x110000
  4911: 84 3a 04                 a3 = t1 & 0x4
  4914: 7b 1b 28                 u64 [sp + 0x28] = a4
  4917: c8 b6 04                 t2 = s1 + a4
  4920: 7b 1c 30                 u64 [sp + 0x30] = a5
  4923: 52 0a 10                 jump @344 if a3 != 0
      :                          @342
  4926: 49 11 38                 u64 [sp + 56] = 0
  4929: 82 78                    a1 = u64 [a0]
  4931: 94 69 2b                 a2 = 0x2b if s1 != 0
  4934: 52 08 35                 jump @348 if a1 != 0
      :                          @343
  4937: 28 56                    jump @353
      :                          @344
  4939: 7b 18 38                 u64 [sp + 0x38] = a1
  4942: 33 09                    a2 = 0
  4944: 51 0c 1b                 jump @347 if a5 == 0
      :                          @345
  4947: 82 1b 38                 a4 = u64 [sp + 0x38]
  4950: 01                       fallthrough
      :                          @346
  4951: 7d b5                    s0 = i8 [a4]
  4953: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
  4956: 85 5a 01                 a3 = s0 ^ 0x1
  4959: c8 a9 09                 a2 = a2 + a3
  4962: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  4965: 95 bb 01                 a4 = a4 + 0x1
  4968: 52 0c ef                 jump @346 if a5 != 0
      :                          @347
  4971: c8 94 04                 t2 = t2 + a2
  4974: 33 09 00 00 11           a2 = 0x110000
  4979: 82 78                    a1 = u64 [a0]
  4981: db 62 09                 a2 = t0 if s1 != 0
  4984: 51 08 27                 jump @353 if a1 == 0
      :                          @348
  4987: 82 7a 08                 a3 = u64 [a0 + 0x8]
  4990: ae a4 21                 jump @353 if t2 >=u a3
      :                          @349
  4993: 84 38 08                 a1 = t1 & 0x8
  4996: 52 08 51                 jump @356 if a1 != 0
      :                          @350
  4999: 7c 76 38                 s1 = u8 [a0 + 0x38]
  5002: c9 4a 0a                 a3 = a3 - t2
  5005: 7b 19 18                 u64 [sp + 0x18] = a2
  5008: 5a 16 01 a0 00           jump @363 if s1 >s 1
      :                          @351
  5013: 52 06 ad 00              jump @365 if s1 != 0
      :                          @352
  5017: 7b 1a 10                 u64 [sp + 0x10] = a3
  5020: 28 ac 00                 jump @366
      :                          @353
  5023: 82 75 20                 s0 = u64 [a0 + 0x20]
  5026: 82 76 28                 s1 = u64 [a0 + 0x28]
  5029: 64 57                    a0 = s0
  5031: 64 68                    a1 = s1
  5033: 82 1a 38                 a3 = u64 [sp + 0x38]
  5036: 82 1b 30                 a4 = u64 [sp + 0x30]
  5039: 50 20 a4 00 75 01        ra = 164, jump @386
      :                          @354 [@dyn 82]
  5045: 33 08 01                 a1 = 0x1
  5048: 52 07 be 00              jump @371 if a0 != 0
      :                          @355
  5052: 82 6c 18                 a5 = u64 [s1 + 0x18]
  5055: 64 57                    a0 = s0
  5057: 82 18 20                 a1 = u64 [sp + 0x20]
  5060: 82 19 28                 a2 = u64 [sp + 0x28]
  5063: 82 10 60                 ra = u64 [sp + 0x60]
  5066: 82 15 58                 s0 = u64 [sp + 0x58]
  5069: 82 16 50                 s1 = u64 [sp + 0x50]
  5072: 95 11 68                 sp = sp + 0x68
  5075: 32 0c                    jump [a5]
      :                          @356
  5077: 7b 1a 40                 u64 [sp + 0x40] = a3
  5080: 64 45                    s0 = t2
  5082: 81 78 30                 a1 = i32 [a0 + 0x30]
  5085: 7b 18 10                 u64 [sp + 0x10] = a1
  5088: 7c 7a 38                 a3 = u8 [a0 + 0x38]
  5091: 7b 1a 08                 u64 [sp + 0x8] = a3
  5094: 82 7a 20                 a3 = u64 [a0 + 0x20]
  5097: 82 78 28                 a1 = u64 [a0 + 0x28]
  5100: 48 17 30 30              u32 [a0 + 48] = 0x30
  5104: 7b 17                    u64 [sp] = a0
  5106: 46 17 38 01              u8 [a0 + 56] = 0x1
  5110: 7b 1a 48                 u64 [sp + 0x48] = a3
  5113: 64 a7                    a0 = a3
  5115: 64 86                    s1 = a1
  5117: 82 1a 38                 a3 = u64 [sp + 0x38]
  5120: 82 1b 30                 a4 = u64 [sp + 0x30]
  5123: 50 20 a6 00 21 01        ra = 166, jump @386
      :                          @357 [@dyn 83]
  5129: 52 07 69                 jump @370 if a0 != 0
      :                          @358
  5132: 82 17 40                 a0 = u64 [sp + 0x40]
  5135: c9 57 05                 s0 = a0 - s0
  5138: 95 55 01                 s0 = s0 + 0x1
  5141: 01                       fallthrough
      :                          @359
  5142: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  5145: 51 05 cb 00              jump @381 if s0 == 0
      :                          @360
  5149: 82 69 20                 a2 = u64 [s1 + 0x20]
  5152: 33 08 30                 a1 = 0x30
  5155: 82 17 48                 a0 = u64 [sp + 0x48]
  5158: b4 90 02 a8 00           ra = 168, jump [a2]
      :                          @361 [@dyn 84]
  5163: 51 07 eb                 jump @359 if a0 == 0
      :                          @362
  5166: 28 44                    jump @370
      :                          @363
  5168: 52 16 02 12              jump @365 if s1 != 2
      :                          @364
  5172: 98 a6 01                 s1 = a3 >> 0x1
  5175: 95 a8 01                 a1 = a3 + 0x1
  5178: 98 88 01                 a1 = a1 >> 0x1
  5181: 7b 18 10                 u64 [sp + 0x10] = a1
  5184: 28 08                    jump @366
      :                          @365
  5186: 64 a6                    s1 = a3
  5188: 49 11 10                 u64 [sp + 16] = 0
  5191: 01                       fallthrough
      :                          @366
  5192: 82 78 20                 a1 = u64 [a0 + 0x20]
  5195: 7b 18 48                 u64 [sp + 0x48] = a1
  5198: 82 75 28                 s0 = u64 [a0 + 0x28]
  5201: 81 77 30                 a0 = i32 [a0 + 0x30]
  5204: 7b 17 40                 u64 [sp + 0x40] = a0
  5207: 95 66 01                 s1 = s1 + 0x1
  5210: 01                       fallthrough
      :                          @367
  5211: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  5214: 51 06 28                 jump @372 if s1 == 0
      :                          @368
  5217: 82 59 20                 a2 = u64 [s0 + 0x20]
  5220: 82 17 48                 a0 = u64 [sp + 0x48]
  5223: 82 18 40                 a1 = u64 [sp + 0x40]
  5226: b4 90 02 aa 00           ra = 170, jump [a2]
      :                          @369 [@dyn 85]
  5231: 51 07 ec                 jump @367 if a0 == 0
      :                          @370
  5234: 33 08 01                 a1 = 0x1
  5237: 01                       fallthrough
      :                          @371
  5238: 64 87                    a0 = a1
  5240: 82 10 60                 ra = u64 [sp + 0x60]
  5243: 82 15 58                 s0 = u64 [sp + 0x58]
  5246: 82 16 50                 s1 = u64 [sp + 0x50]
  5249: 95 11 68                 sp = sp + 0x68
  5252: 32 00                    ret
      :                          @372
  5254: 82 16 48                 s1 = u64 [sp + 0x48]
  5257: 64 67                    a0 = s1
  5259: 64 58                    a1 = s0
  5261: 82 19 18                 a2 = u64 [sp + 0x18]
  5264: 82 1a 38                 a3 = u64 [sp + 0x38]
  5267: 82 1b 30                 a4 = u64 [sp + 0x30]
  5270: 50 20 ac 00 8e 00        ra = 172, jump @386
      :                          @373 [@dyn 86]
  5276: 33 08 01                 a1 = 0x1
  5279: 52 07 d7                 jump @371 if a0 != 0
      :                          @374
  5282: 82 5a 18                 a3 = u64 [s0 + 0x18]
  5285: 64 67                    a0 = s1
  5287: 82 18 20                 a1 = u64 [sp + 0x20]
  5290: 82 19 28                 a2 = u64 [sp + 0x28]
  5293: b4 a0 02 ae 00           ra = 174, jump [a3]
      :                          @375 [@dyn 87]
  5298: 33 08 01                 a1 = 0x1
  5301: 52 07 c1                 jump @371 if a0 != 0
      :                          @376
  5304: 82 17 10                 a0 = u64 [sp + 0x10]
  5307: 9a 77                    a0 = -a0
  5309: 7b 17 38                 u64 [sp + 0x38] = a0
  5312: 33 06 ff                 s1 = 0xffffffffffffffff
  5315: 01                       fallthrough
      :                          @377
  5316: 82 17 38                 a0 = u64 [sp + 0x38]
  5319: c8 67 07                 a0 = a0 + s1
  5322: 51 17 ff 45              jump @384 if a0 == 4294967295
      :                          @378
  5326: 82 59 20                 a2 = u64 [s0 + 0x20]
  5329: 82 17 48                 a0 = u64 [sp + 0x48]
  5332: 82 18 40                 a1 = u64 [sp + 0x40]
  5335: b4 90 02 b0 00           ra = 176, jump [a2]
      :                          @379 [@dyn 88]
  5340: 95 66 01                 s1 = s1 + 0x1
  5343: 51 07 e5                 jump @377 if a0 == 0
      :                          @380
  5346: 28 39                    jump @385
      :                          @381
  5348: 82 6a 18                 a3 = u64 [s1 + 0x18]
  5351: 82 17 48                 a0 = u64 [sp + 0x48]
  5354: 82 18 20                 a1 = u64 [sp + 0x20]
  5357: 82 19 28                 a2 = u64 [sp + 0x28]
  5360: b4 a0 02 b2 00           ra = 178, jump [a3]
      :                          @382 [@dyn 89]
  5365: 33 08 01                 a1 = 0x1
  5368: 52 07 7e ff              jump @371 if a0 != 0
      :                          @383
  5372: 33 08                    a1 = 0
  5374: 82 16                    s1 = u64 [sp]
  5376: 82 17 10                 a0 = u64 [sp + 0x10]
  5379: 7a 67 30                 u32 [s1 + 0x30] = a0
  5382: 82 17 08                 a0 = u64 [sp + 0x8]
  5385: 78 67 38                 u8 [s1 + 0x38] = a0
  5388: 28 6a ff                 jump @371
      :                          @384
  5391: 82 16 10                 s1 = u64 [sp + 0x10]
  5394: 82 17 10                 a0 = u64 [sp + 0x10]
  5397: d8 76 08                 a1 = s1 <u a0
  5400: 28 5e ff                 jump @371
      :                          @385
  5403: 82 17 10                 a0 = u64 [sp + 0x10]
  5406: d8 76 08                 a1 = s1 <u a0
  5409: 28 55 ff                 jump @371
      :                          @386
  5412: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  5415: 7b 10 20                 u64 [sp + 0x20] = ra
  5418: 7b 15 18                 u64 [sp + 0x18] = s0
  5421: 7b 16 10                 u64 [sp + 0x10] = s1
  5424: 83 9c                    i32 a5 = a2 + 0
  5426: 33 02 00 00 11           t0 = 0x110000
  5431: 64 a6                    s1 = a3
  5433: 64 85                    s0 = a1
  5435: 64 7a                    a3 = a0
  5437: aa 2c 21                 jump @389 if a5 == t0
      :                          @387
  5440: 82 5c 20                 a5 = u64 [s0 + 0x20]
  5443: 64 a7                    a0 = a3
  5445: 64 98                    a1 = a2
  5447: 7b 1b 08                 u64 [sp + 0x8] = a4
  5450: 7b 1a                    u64 [sp] = a3
  5452: b4 c0 02 b4 00           ra = 180, jump [a5]
      :                          @388 [@dyn 90]
  5457: 82 1a                    a3 = u64 [sp]
  5459: 82 1b 08                 a4 = u64 [sp + 0x8]
  5462: 64 78                    a1 = a0
  5464: 33 07 01                 a0 = 0x1
  5467: 52 08 20                 jump @392 if a1 != 0
      :                          @389
  5470: 51 06 1a                 jump @391 if s1 == 0
      :                          @390
  5473: 82 5c 18                 a5 = u64 [s0 + 0x18]
  5476: 64 a7                    a0 = a3
  5478: 64 68                    a1 = s1
  5480: 64 b9                    a2 = a4
  5482: 82 10 20                 ra = u64 [sp + 0x20]
  5485: 82 15 18                 s0 = u64 [sp + 0x18]
  5488: 82 16 10                 s1 = u64 [sp + 0x10]
  5491: 95 11 28                 sp = sp + 0x28
  5494: 32 0c                    jump [a5]
      :                          @391
  5496: 33 07                    a0 = 0
  5498: 01                       fallthrough
      :                          @392
  5499: 82 10 20                 ra = u64 [sp + 0x20]
  5502: 82 15 18                 s0 = u64 [sp + 0x18]
  5505: 82 16 10                 s1 = u64 [sp + 0x10]
  5508: 95 11 28                 sp = sp + 0x28
  5511: 32 00                    ret
      :                          @393
  5513: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  5517: 7b 10 80 00              u64 [sp + 0x80] = ra
  5521: 7b 15 78                 u64 [sp + 0x78] = s0
  5524: 7b 16 70                 u64 [sp + 0x70] = s1
  5527: 49 11 60 20              u64 [sp + 96] = 0x20
  5531: 33 0a 03                 a3 = 0x3
  5534: 78 1a 68                 u8 [sp + 0x68] = a3
  5537: 82 96 20                 s1 = u64 [a2 + 0x20]
  5540: 49 11 30                 u64 [sp + 48] = 0
  5543: 49 11 40                 u64 [sp + 64] = 0
  5546: 7b 17 50                 u64 [sp + 0x50] = a0
  5549: 7b 18 58                 u64 [sp + 0x58] = a1
  5552: 51 06 0a 01              jump @415 if s1 == 0
      :                          @394
  5556: 82 97 28                 a0 = u64 [a2 + 0x28]
  5559: 51 07 79 01              jump @425 if a0 == 0
      :                          @395
  5563: 49 11 28                 u64 [sp + 40] = 0
  5566: 82 95                    s0 = u64 [a2]
  5568: 7b 19 08                 u64 [sp + 0x8] = a2
  5571: 82 98 10                 a1 = u64 [a2 + 0x10]
  5574: 7b 18 18                 u64 [sp + 0x18] = a1
  5577: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  5580: 97 88 03                 a1 = a1 << 0x3
  5583: 98 88 03                 a1 = a1 >> 0x3
  5586: 95 88 01                 a1 = a1 + 0x1
  5589: 7b 18                    u64 [sp] = a1
  5591: 95 55 08                 s0 = s0 + 0x8
  5594: 96 78 38                 a1 = a0 * 0x38
  5597: 95 66 18                 s1 = s1 + 0x18
  5600: 33 07 9e 00              a0 = 0x9e
  5604: 7b 17 10                 u64 [sp + 0x10] = a0
  5607: 01                       fallthrough
      :                          @396
  5608: 7b 18 20                 u64 [sp + 0x20] = a1
  5611: 82 59                    a2 = u64 [s0]
  5613: 51 09 18                 jump @399 if a2 == 0
      :                          @397
  5616: 82 1a 58                 a3 = u64 [sp + 0x58]
  5619: 82 17 50                 a0 = u64 [sp + 0x50]
  5622: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  5625: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5628: b4 a0 02 b6 00           ra = 182, jump [a3]
      :                          @398 [@dyn 91]
  5633: 52 07 55 01              jump @428 if a0 != 0
      :                          @399
  5637: 81 67 10                 a0 = i32 [s1 + 0x10]
  5640: 7a 17 60                 u32 [sp + 0x60] = a0
  5643: 7c 67 18                 a0 = u8 [s1 + 0x18]
  5646: 78 17 68                 u8 [sp + 0x68] = a0
  5649: 81 67 14                 a0 = i32 [s1 + 0x14]
  5652: 7a 17 64                 u32 [sp + 0x64] = a0
  5655: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  5658: 82 67                    a0 = u64 [s1]
  5660: 51 08 26                 jump @404 if a1 == 0
      :                          @400
  5663: 52 18 01 16              jump @402 if a1 != 1
      :                          @401
  5667: 97 77 04                 a0 = a0 << 0x4
  5670: 82 18 18                 a1 = u64 [sp + 0x18]
  5673: c8 87 07                 a0 = a0 + a1
  5676: 82 78 08                 a1 = u64 [a0 + 0x8]
  5679: 82 19 10                 a2 = u64 [sp + 0x10]
  5682: aa 98 07                 jump @403 if a1 == a2
      :                          @402
  5685: 33 08                    a1 = 0
  5687: 28 0f                    jump @405
      :                          @403
  5689: 82 77                    a0 = u64 [a0]
  5691: 82 77                    a0 = u64 [a0]
  5693: 33 08 01                 a1 = 0x1
  5696: 28 06                    jump @405
      :                          @404
  5698: 33 08 01                 a1 = 0x1
  5701: 01                       fallthrough
      :                          @405
  5702: 7b 18 30                 u64 [sp + 0x30] = a1
  5705: 7b 17 38                 u64 [sp + 0x38] = a0
  5708: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  5711: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  5714: 51 08 26                 jump @410 if a1 == 0
      :                          @406
  5717: 52 18 01 16              jump @408 if a1 != 1
      :                          @407
  5721: 97 77 04                 a0 = a0 << 0x4
  5724: 82 18 18                 a1 = u64 [sp + 0x18]
  5727: c8 87 07                 a0 = a0 + a1
  5730: 82 78 08                 a1 = u64 [a0 + 0x8]
  5733: 82 19 10                 a2 = u64 [sp + 0x10]
  5736: aa 98 07                 jump @409 if a1 == a2
      :                          @408
  5739: 33 08                    a1 = 0
  5741: 28 0f                    jump @411
      :                          @409
  5743: 82 77                    a0 = u64 [a0]
  5745: 82 77                    a0 = u64 [a0]
  5747: 33 08 01                 a1 = 0x1
  5750: 28 06                    jump @411
      :                          @410
  5752: 33 08 01                 a1 = 0x1
  5755: 01                       fallthrough
      :                          @411
  5756: 7b 18 40                 u64 [sp + 0x40] = a1
  5759: 7b 17 48                 u64 [sp + 0x48] = a0
  5762: 82 67 08                 a0 = u64 [s1 + 0x8]
  5765: 97 77 04                 a0 = a0 << 0x4
  5768: 82 18 18                 a1 = u64 [sp + 0x18]
  5771: c8 78 08                 a1 = a1 + a0
  5774: 82 87                    a0 = u64 [a1]
  5776: 82 89 08                 a2 = u64 [a1 + 0x8]
  5779: 95 18 30                 a1 = sp + 0x30
  5782: b4 90 02 b8 00           ra = 184, jump [a2]
      :                          @412 [@dyn 92]
  5787: 52 07 bb 00              jump @428 if a0 != 0
      :                          @413
  5791: 95 55 10                 s0 = s0 + 0x10
  5794: 82 18 20                 a1 = u64 [sp + 0x20]
  5797: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  5800: 95 66 38                 s1 = s1 + 0x38
  5803: 82 17 28                 a0 = u64 [sp + 0x28]
  5806: 95 77 01                 a0 = a0 + 0x1
  5809: 7b 17 28                 u64 [sp + 0x28] = a0
  5812: 52 08 34 ff              jump @396 if a1 != 0
      :                          @414
  5816: 28 6b                    jump @423
      :                          @415
  5818: 82 97 18                 a0 = u64 [a2 + 0x18]
  5821: 51 07 73                 jump @425 if a0 == 0
      :                          @416
  5824: 82 95 10                 s0 = u64 [a2 + 0x10]
  5827: 33 0a                    a3 = 0
  5829: 97 78 04                 a1 = a0 << 0x4
  5832: c8 58 08                 a1 = a1 + s0
  5835: 7b 18 20                 u64 [sp + 0x20] = a1
  5838: 7b 19 08                 u64 [sp + 0x8] = a2
  5841: 82 96                    s1 = u64 [a2]
  5843: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  5846: 97 77 04                 a0 = a0 << 0x4
  5849: 98 77 04                 a0 = a0 >> 0x4
  5852: 95 77 01                 a0 = a0 + 0x1
  5855: 7b 17                    u64 [sp] = a0
  5857: 95 66 08                 s1 = s1 + 0x8
  5860: 01                       fallthrough
      :                          @417
  5861: 7b 1a 28                 u64 [sp + 0x28] = a3
  5864: 82 69                    a2 = u64 [s1]
  5866: 51 09 17                 jump @420 if a2 == 0
      :                          @418
  5869: 82 1a 58                 a3 = u64 [sp + 0x58]
  5872: 82 17 50                 a0 = u64 [sp + 0x50]
  5875: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  5878: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5881: b4 a0 02 ba 00           ra = 186, jump [a3]
      :                          @419 [@dyn 93]
  5886: 52 07 58                 jump @428 if a0 != 0
      :                          @420
  5889: 82 57                    a0 = u64 [s0]
  5891: 82 59 08                 a2 = u64 [s0 + 0x8]
  5894: 95 18 30                 a1 = sp + 0x30
  5897: b4 90 02 bc 00           ra = 188, jump [a2]
      :                          @421 [@dyn 94]
  5902: 52 07 48                 jump @428 if a0 != 0
      :                          @422
  5905: 95 66 10                 s1 = s1 + 0x10
  5908: 95 55 10                 s0 = s0 + 0x10
  5911: 82 1a 28                 a3 = u64 [sp + 0x28]
  5914: 95 aa 01                 a3 = a3 + 0x1
  5917: 82 17 20                 a0 = u64 [sp + 0x20]
  5920: ab 75 c5                 jump @417 if s0 != a0
      :                          @423
  5923: 82 19 08                 a2 = u64 [sp + 0x8]
  5926: 82 1a                    a3 = u64 [sp]
  5928: 82 97 08                 a0 = u64 [a2 + 0x8]
  5931: ac 7a 0d                 jump @426 if a3 <u a0
      :                          @424
  5934: 28 2d                    jump @429
      :                          @425
  5936: 33 0a                    a3 = 0
  5938: 82 97 08                 a0 = u64 [a2 + 0x8]
  5941: 54 07 26                 jump @429 if a0 <=u 0
      :                          @426
  5944: 82 97                    a0 = u64 [a2]
  5946: 97 a8 04                 a1 = a3 << 0x4
  5949: c8 87 09                 a2 = a0 + a1
  5952: 82 1a 58                 a3 = u64 [sp + 0x58]
  5955: 82 17 50                 a0 = u64 [sp + 0x50]
  5958: 82 98                    a1 = u64 [a2]
  5960: 82 99 08                 a2 = u64 [a2 + 0x8]
  5963: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5966: b4 a0 02 be 00           ra = 190, jump [a3]
      :                          @427 [@dyn 95]
  5971: 51 07 08                 jump @429 if a0 == 0
      :                          @428
  5974: 33 07 01                 a0 = 0x1
  5977: 28 05                    jump @430
      :                          @429
  5979: 33 07                    a0 = 0
  5981: 01                       fallthrough
      :                          @430
  5982: 82 10 80 00              ra = u64 [sp + 0x80]
  5986: 82 15 78                 s0 = u64 [sp + 0x78]
  5989: 82 16 70                 s1 = u64 [sp + 0x70]
  5992: 95 11 88 00              sp = sp + 0x88
  5996: 32 00                    ret
      :                          @431 [@dyn 96]
  5998: 32 00                    ret
      :                          @432 [@dyn 97]
  6000: 95 11 80                 sp = sp + 0xffffffffffffff80
  6003: 7b 10 78                 u64 [sp + 0x78] = ra
  6006: 7b 15 70                 u64 [sp + 0x70] = s0
  6009: 7b 16 68                 u64 [sp + 0x68] = s1
  6012: 64 92                    t0 = a2
  6014: 33 00                    ra = 0
  6016: 33 0b                    a4 = 0
  6018: 33 05                    s0 = 0
  6020: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
  6030: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
  6036: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
  6046: 82 79 10                 a2 = u64 [a0 + 0x10]
  6049: 7b 19 48                 u64 [sp + 0x48] = a2
  6052: 82 79                    a2 = u64 [a0]
  6054: 7b 19 38                 u64 [sp + 0x38] = a2
  6057: 82 77 08                 a0 = u64 [a0 + 0x8]
  6060: 7b 17 30                 u64 [sp + 0x30] = a0
  6063: 33 07 68 01 01           a0 = 0x10168
  6068: 7b 17 08                 u64 [sp + 0x8] = a0
  6071: 3a 07 08 00 03           a0 = u64 [0x30008]
  6076: 7b 17 60                 u64 [sp + 0x60] = a0
  6079: 7b 18 58                 u64 [sp + 0x58] = a1
  6082: 95 88 08                 a1 = a1 + 0x8
  6085: 7b 18                    u64 [sp] = a1
  6087: 33 0c 0a                 a5 = 0xa
  6090: 7b 12 20                 u64 [sp + 0x20] = t0
  6093: 7b 13 18                 u64 [sp + 0x18] = t1
  6096: 7b 14 10                 u64 [sp + 0x10] = t2
  6099: 28 3b                    jump @436
      :                          @433
  6101: 64 06                    s1 = ra
  6103: c8 89 07                 a0 = a2 + a1
  6106: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
  6109: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  6112: 88 77 01                 a0 = a0 <u 0x1
  6115: 01                       fallthrough
      :                          @434
  6116: 82 1a 48                 a3 = u64 [sp + 0x48]
  6119: 78 a7                    u8 [a3] = a0
  6121: 82 17 30                 a0 = u64 [sp + 0x30]
  6124: 82 7a 18                 a3 = u64 [a0 + 0x18]
  6127: 82 17 38                 a0 = u64 [sp + 0x38]
  6130: b4 a0 02 c4 00           ra = 196, jump [a3]
      :                          @435 [@dyn 98]
  6135: 64 5b                    a4 = s0
  6137: 82 12 20                 t0 = u64 [sp + 0x20]
  6140: 82 13 18                 t1 = u64 [sp + 0x18]
  6143: 82 14 10                 t2 = u64 [sp + 0x10]
  6146: 64 60                    ra = s1
  6148: 33 0c 0a                 a5 = 0xa
  6151: 82 15 40                 s0 = u64 [sp + 0x40]
  6154: 52 07 64 01              jump @477 if a0 != 0
      :                          @436
  6158: 84 57 ff 00              a0 = s0 & 0xff
  6162: 52 07 58 01              jump @476 if a0 != 0
      :                          @437
  6166: 7b 1b 50                 u64 [sp + 0x50] = a4
  6169: ae 02 0a                 jump @440 if t0 >=u ra
      :                          @438
  6172: 28 ef 00                 jump @467
      :                          @439
  6175: ac 02 ec 00              jump @467 if t0 <u ra
      :                          @440
  6179: c9 02 08                 a1 = t0 - ra
  6182: 82 16 58                 s1 = u64 [sp + 0x58]
  6185: c8 06 06                 s1 = s1 + ra
  6188: 55 18 10 1d              jump @446 if a1 >=u 16
      :                          @441
  6192: aa 02 d8 00              jump @466 if t0 == ra
      :                          @442
  6196: 33 0a                    a3 = 0
  6198: 01                       fallthrough
      :                          @443
  6199: c8 a6 07                 a0 = s1 + a3
  6202: 7c 77                    a0 = u8 [a0]
  6204: aa c7 a5 00              jump @461 if a0 == a5
      :                          @444
  6208: 95 aa 01                 a3 = a3 + 0x1
  6211: ab a8 f4                 jump @443 if a1 != a3
      :                          @445
  6214: 28 c2 00                 jump @466
      :                          @446
  6217: 95 69 07                 a2 = s1 + 0x7
  6220: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
  6223: c9 6a 07                 a0 = a3 - s1
  6226: d3 6a 0a                 a3 = a3 ^ s1
  6229: 88 aa 01                 a3 = a3 <u 0x1
  6232: 88 7b 01                 a4 = a0 <u 0x1
  6235: d4 ba 0a                 a3 = a3 | a4
  6238: 51 0a 45                 jump @452 if a3 == 0
      :                          @447
  6241: 33 07                    a0 = 0
  6243: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  6246: 82 1b                    a4 = u64 [sp]
  6248: c8 0b 0b                 a4 = a4 + ra
  6251: 28 08                    jump @449
      :                          @448
  6253: 82 1b                    a4 = u64 [sp]
  6255: c8 0b 0b                 a4 = a4 + ra
  6258: 01                       fallthrough
      :                          @449
  6259: c8 76 0c                 a5 = s1 + a0
  6262: 82 cc                    a5 = u64 [a5]
  6264: c8 7b 09                 a2 = a4 + a0
  6267: 82 99                    a2 = u64 [a2]
  6269: d3 4c 05                 s0 = a5 ^ t2
  6272: c8 35 05                 s0 = s0 + t1
  6275: e0 c5 0c                 a5 = s0 & ~a5
  6278: d3 49 05                 s0 = a2 ^ t2
  6281: c8 35 05                 s0 = s0 + t1
  6284: e0 95 09                 a2 = s0 & ~a2
  6287: d4 c9 09                 a2 = a2 | a5
  6290: 82 1c 60                 a5 = u64 [sp + 0x60]
  6293: d2 c9 09                 a2 = a2 & a5
  6296: 52 09 1f                 jump @455 if a2 != 0
      :                          @450
  6299: 95 77 10                 a0 = a0 + 0x10
  6302: ae 7a d5                 jump @449 if a3 >=u a0
      :                          @451
  6305: 28 16                    jump @455
      :                          @452
  6307: c8 a6 0b                 a4 = s1 + a3
  6310: 7c bb                    a4 = u8 [a4]
  6312: aa cb 51                 jump @464 if a4 == a5
      :                          @453
  6315: 95 aa 01                 a3 = a3 + 0x1
  6318: ab a7 f5                 jump @452 if a0 != a3
      :                          @454
  6321: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  6324: ae 7a b9                 jump @448 if a3 >=u a0
      :                          @455
  6327: aa 87 9b 00              jump @473 if a0 == a1
      :                          @456
  6331: 33 0a                    a3 = 0
  6333: c8 76 06                 s1 = s1 + a0
  6336: c9 72 08                 a1 = t0 - a0
  6339: c9 08 08                 a1 = a1 - ra
  6342: 33 0c 0a                 a5 = 0xa
  6345: 82 1b 50                 a4 = u64 [sp + 0x50]
  6348: 01                       fallthrough
      :                          @457
  6349: c8 a6 09                 a2 = s1 + a3
  6352: 7c 99                    a2 = u8 [a2]
  6354: aa c9 0b                 jump @460 if a2 == a5
      :                          @458
  6357: 95 aa 01                 a3 = a3 + 0x1
  6360: ab a8 f5                 jump @457 if a1 != a3
      :                          @459
  6363: 28 2d                    jump @466
      :                          @460
  6365: c8 7a 0a                 a3 = a3 + a0
  6368: 01                       fallthrough
      :                          @461
  6369: c8 0a 0a                 a3 = a3 + ra
  6372: 95 a0 01                 ra = a3 + 0x1
  6375: ae 2a 38 ff              jump @439 if a3 >=u t0
      :                          @462
  6379: 82 17 58                 a0 = u64 [sp + 0x58]
  6382: c8 7a 0a                 a3 = a3 + a0
  6385: 7c a7                    a0 = u8 [a3]
  6387: ab c7 2c ff              jump @439 if a0 != a5
      :                          @463
  6391: 28 62                    jump @474
      :                          @464
  6393: 82 1b 50                 a4 = u64 [sp + 0x50]
  6396: c8 0a 0a                 a3 = a3 + ra
  6399: 95 a0 01                 ra = a3 + 0x1
  6402: ac 2a e9                 jump @462 if a3 <u t0
      :                          @465
  6405: 28 1a ff                 jump @439
      :                          @466
  6408: 64 20                    ra = t0
  6410: 01                       fallthrough
      :                          @467
  6411: 49 11 40 01              u64 [sp + 64] = 0x1
  6415: 64 b5                    s0 = a4
  6417: 64 26                    s1 = t0
  6419: aa 2b 57                 jump @476 if a4 == t0
      :                          @468
  6422: 82 17 48                 a0 = u64 [sp + 0x48]
  6425: 7c 77                    a0 = u8 [a0]
  6427: 51 07 23                 jump @471 if a0 == 0
      :                          @469
  6430: 82 17 30                 a0 = u64 [sp + 0x30]
  6433: 82 7a 18                 a3 = u64 [a0 + 0x18]
  6436: 33 09 04                 a2 = 0x4
  6439: 82 17 38                 a0 = u64 [sp + 0x38]
  6442: 82 18 08                 a1 = u64 [sp + 0x8]
  6445: 7b 10 28                 u64 [sp + 0x28] = ra
  6448: b4 a0 02 c6 00           ra = 198, jump [a3]
      :                          @470 [@dyn 99]
  6453: 82 1b 50                 a4 = u64 [sp + 0x50]
  6456: 82 10 28                 ra = u64 [sp + 0x28]
  6459: 52 07 33                 jump @477 if a0 != 0
      :                          @471
  6462: c9 b6 09                 a2 = s1 - a4
  6465: 82 18 58                 a1 = u64 [sp + 0x58]
  6468: c8 b8 08                 a1 = a1 + a4
  6471: ab b6 8e fe              jump @433 if s1 != a4
      :                          @472
  6475: 64 06                    s1 = ra
  6477: 33 07                    a0 = 0
  6479: 28 95 fe                 jump @434
      :                          @473
  6482: 64 20                    ra = t0
  6484: 82 1b 50                 a4 = u64 [sp + 0x50]
  6487: 28 b4                    jump @467
      :                          @474
  6489: 49 11 40                 u64 [sp + 64] = 0
  6492: 64 05                    s0 = ra
  6494: 64 06                    s1 = ra
  6496: 82 17 48                 a0 = u64 [sp + 0x48]
  6499: 7c 77                    a0 = u8 [a0]
  6501: 52 07 b9                 jump @469 if a0 != 0
      :                          @475
  6504: 28 d6                    jump @471
      :                          @476
  6506: 33 07                    a0 = 0
  6508: 28 06                    jump @478
      :                          @477
  6510: 33 07 01                 a0 = 0x1
  6513: 01                       fallthrough
      :                          @478
  6514: 82 10 78                 ra = u64 [sp + 0x78]
  6517: 82 15 70                 s0 = u64 [sp + 0x70]
  6520: 82 16 68                 s1 = u64 [sp + 0x68]
  6523: 95 11 80 00              sp = sp + 0x80
  6527: 32 00                    ret
      :                          @479 [@dyn 100]
  6529: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  6532: 7b 10 20                 u64 [sp + 0x20] = ra
  6535: 7b 15 18                 u64 [sp + 0x18] = s0
  6538: 7b 16 10                 u64 [sp + 0x10] = s1
  6541: 82 75 10                 s0 = u64 [a0 + 0x10]
  6544: 7c 59                    a2 = u8 [s0]
  6546: 82 7b                    a4 = u64 [a0]
  6548: 82 76 08                 s1 = u64 [a0 + 0x8]
  6551: 51 09 33                 jump @483 if a2 == 0
      :                          @480
  6554: 82 6a 18                 a3 = u64 [s1 + 0x18]
  6557: 7b 18 08                 u64 [sp + 0x8] = a1
  6560: 33 08 68 01 01           a1 = 0x10168
  6565: 33 09 04                 a2 = 0x4
  6568: 64 b7                    a0 = a4
  6570: 7b 1b                    u64 [sp] = a4
  6572: b4 a0 02 ca 00           ra = 202, jump [a3]
      :                          @481 [@dyn 101]
  6577: 82 18 08                 a1 = u64 [sp + 0x8]
  6580: 82 1b                    a4 = u64 [sp]
  6582: 51 07 14                 jump @483 if a0 == 0
      :                          @482
  6585: 33 07 01                 a0 = 0x1
  6588: 82 10 20                 ra = u64 [sp + 0x20]
  6591: 82 15 18                 s0 = u64 [sp + 0x18]
  6594: 82 16 10                 s1 = u64 [sp + 0x10]
  6597: 95 11 28                 sp = sp + 0x28
  6600: 32 00                    ret
      :                          @483
  6602: 83 87                    i32 a0 = a1 + 0
  6604: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  6607: 88 77 01                 a0 = a0 <u 0x1
  6610: 78 57                    u8 [s0] = a0
  6612: 82 6c 20                 a5 = u64 [s1 + 0x20]
  6615: 64 b7                    a0 = a4
  6617: 82 10 20                 ra = u64 [sp + 0x20]
  6620: 82 15 18                 s0 = u64 [sp + 0x18]
  6623: 82 16 10                 s1 = u64 [sp + 0x10]
  6626: 95 11 28                 sp = sp + 0x28
  6629: 32 0c                    jump [a5]
      :                          @484 [@dyn 102]
  6631: 64 8a                    a3 = a1
  6633: 33 08 38 01 01           a1 = 0x10138
  6638: 64 a9                    a2 = a3
  6640: 28 99 fb                 jump @393
      :                          @485 [@dyn 103]
  6643: 80 77                    a0 = u32 [a0]
  6645: 28 f3 f7                 jump @331
      :                          @486
  6648: 95 11 70 ff              sp = sp + 0xffffffffffffff70
  6652: 7b 10 88 00              u64 [sp + 0x88] = ra
  6656: 7b 15 80 00              u64 [sp + 0x80] = s0
  6660: 7b 16 78                 u64 [sp + 0x78] = s1
  6663: 64 75                    s0 = a0
  6665: 7c 77 08                 a0 = u8 [a0 + 0x8]
  6668: 64 8b                    a4 = a1
  6670: 33 08 01                 a1 = 0x1
  6673: 33 06 01                 s1 = 0x1
  6676: 51 07 1d                 jump @488 if a0 == 0
      :                          @487
  6679: 78 56 08                 u8 [s0 + 0x8] = s1
  6682: 46 15 09 01              u8 [s0 + 9] = 0x1
  6686: 64 57                    a0 = s0
  6688: 82 10 88 00              ra = u64 [sp + 0x88]
  6692: 82 15 80 00              s0 = u64 [sp + 0x80]
  6696: 82 16 78                 s1 = u64 [sp + 0x78]
  6699: 95 11 90 00              sp = sp + 0x90
  6703: 32 00                    ret
      :                          @488
  6705: 64 9a                    a3 = a2
  6707: 82 5c                    a5 = u64 [s0]
  6709: 80 c7 34                 a0 = u32 [a5 + 0x34]
  6712: 7c 58 09                 a1 = u8 [s0 + 0x9]
  6715: 84 79 04                 a2 = a0 & 0x4
  6718: 52 09 45                 jump @494 if a2 != 0
      :                          @489
  6721: 51 08 32                 jump @492 if a1 == 0
      :                          @490
  6724: 82 c8 28                 a1 = u64 [a5 + 0x28]
  6727: 82 c7 20                 a0 = u64 [a5 + 0x20]
  6730: 82 83 18                 t1 = u64 [a1 + 0x18]
  6733: 33 08 6c 01 01           a1 = 0x1016c
  6738: 33 09 02                 a2 = 0x2
  6741: 64 a6                    s1 = a3
  6743: 7b 1b 10                 u64 [sp + 0x10] = a4
  6746: 7b 1c 08                 u64 [sp + 0x8] = a5
  6749: b4 30 02 d0 00           ra = 208, jump [t1]
      :                          @491 [@dyn 104]
  6754: 82 1c 08                 a5 = u64 [sp + 0x8]
  6757: 82 1b 10                 a4 = u64 [sp + 0x10]
  6760: 64 6a                    a3 = s1
  6762: 33 08 01                 a1 = 0x1
  6765: 33 06 01                 s1 = 0x1
  6768: 52 07 a7                 jump @487 if a0 != 0
      :                          @492
  6771: 64 b7                    a0 = a4
  6773: 64 c8                    a1 = a5
  6775: b4 a0 02 d2 00           ra = 210, jump [a3]
      :                          @493 [@dyn 105]
  6780: 33 08 01                 a1 = 0x1
  6783: 64 76                    s1 = a0
  6785: 28 96                    jump @487
      :                          @494
  6787: 52 08 37                 jump @498 if a1 != 0
      :                          @495
  6790: 82 c8 28                 a1 = u64 [a5 + 0x28]
  6793: 82 c7 20                 a0 = u64 [a5 + 0x20]
  6796: 82 83 18                 t1 = u64 [a1 + 0x18]
  6799: 33 08 70 01 01           a1 = 0x10170
  6804: 33 09 01                 a2 = 0x1
  6807: 33 06 01                 s1 = 0x1
  6810: 7b 1a                    u64 [sp] = a3
  6812: 7b 1b 10                 u64 [sp + 0x10] = a4
  6815: 7b 1c 08                 u64 [sp + 0x8] = a5
  6818: b4 30 02 d4 00           ra = 212, jump [t1]
      :                          @496 [@dyn 106]
  6823: 82 1c 08                 a5 = u64 [sp + 0x8]
  6826: 82 1b 10                 a4 = u64 [sp + 0x10]
  6829: 82 1a                    a3 = u64 [sp]
  6831: 33 08 01                 a1 = 0x1
  6834: 52 07 65 ff              jump @487 if a0 != 0
      :                          @497
  6838: 81 c7 34                 a0 = i32 [a5 + 0x34]
  6841: 01                       fallthrough
      :                          @498
  6842: 33 06 01                 s1 = 0x1
  6845: 78 16 37                 u8 [sp + 0x37] = s1
  6848: 82 c8 20                 a1 = u64 [a5 + 0x20]
  6851: 82 c9 28                 a2 = u64 [a5 + 0x28]
  6854: 7b 18 18                 u64 [sp + 0x18] = a1
  6857: 7b 19 20                 u64 [sp + 0x20] = a2
  6860: 95 18 37                 a1 = sp + 0x37
  6863: 7b 18 28                 u64 [sp + 0x28] = a1
  6866: 81 c8 30                 a1 = i32 [a5 + 0x30]
  6869: 7c c9 38                 a2 = u8 [a5 + 0x38]
  6872: 82 c3                    t1 = u64 [a5]
  6874: 82 c4 08                 t2 = u64 [a5 + 0x8]
  6877: 82 c0 10                 ra = u64 [a5 + 0x10]
  6880: 82 c2 18                 t0 = u64 [a5 + 0x18]
  6883: 7a 17 6c                 u32 [sp + 0x6c] = a0
  6886: 7a 18 68                 u32 [sp + 0x68] = a1
  6889: 78 19 70                 u8 [sp + 0x70] = a2
  6892: 7b 13 38                 u64 [sp + 0x38] = t1
  6895: 7b 14 40                 u64 [sp + 0x40] = t2
  6898: 7b 10 48                 u64 [sp + 0x48] = ra
  6901: 7b 12 50                 u64 [sp + 0x50] = t0
  6904: 95 17 18                 a0 = sp + 0x18
  6907: 7b 17 58                 u64 [sp + 0x58] = a0
  6910: 33 07 38 01 01           a0 = 0x10138
  6915: 7b 17 60                 u64 [sp + 0x60] = a0
  6918: 95 18 38                 a1 = sp + 0x38
  6921: 64 b7                    a0 = a4
  6923: b4 a0 02 d6 00           ra = 214, jump [a3]
      :                          @499 [@dyn 107]
  6928: 52 07 21                 jump @502 if a0 != 0
      :                          @500
  6931: 82 18 60                 a1 = u64 [sp + 0x60]
  6934: 82 17 58                 a0 = u64 [sp + 0x58]
  6937: 82 8a 18                 a3 = u64 [a1 + 0x18]
  6940: 33 08 6e 01 01           a1 = 0x1016e
  6945: 33 09 02                 a2 = 0x2
  6948: b4 a0 02 d8 00           ra = 216, jump [a3]
      :                          @501 [@dyn 108]
  6953: 64 76                    s1 = a0
  6955: 33 08 01                 a1 = 0x1
  6958: 28 e9 fe                 jump @487
      :                          @502
  6961: 33 08 01                 a1 = 0x1
  6964: 28 e3 fe                 jump @487
      :                          @503
  6967: 51 08 9b 00              jump @524 if a1 == 0
      :                          @504
  6971: 64 79                    a2 = a0
  6973: 7c 77                    a0 = u8 [a0]
  6975: 51 07 91 00              jump @523 if a0 == 0
      :                          @505
  6979: 51 27 ff 00 90 00        jump @525 if a0 == 255
      :                          @506
  6985: 6c 7a                    a3 = sext.b a0
  6987: 57 0a 09                 jump @508 if a3 <s 0
      :                          @507
  6990: 33 0a                    a3 = 0
  6992: 33 08                    a1 = 0
  6994: 28 73                    jump @522
      :                          @508
  6996: 55 27 c0 00 0d           jump @510 if a0 >=u 192
      :                          @509
  7001: 33 0a 01                 a3 = 0x1
  7004: 33 0b 80                 a4 = 0xffffffffffffff80
  7007: 28 4a                    jump @519
      :                          @510
  7009: 55 27 e0 00 0e           jump @512 if a0 >=u 224
      :                          @511
  7014: 33 0a 02                 a3 = 0x2
  7017: 33 0b 40 ff              a4 = 0xffffffffffffff40
  7021: 28 3c                    jump @519
      :                          @512
  7023: 55 27 f0 00 0e           jump @514 if a0 >=u 240
      :                          @513
  7028: 33 0a 03                 a3 = 0x3
  7031: 33 0b 20 ff              a4 = 0xffffffffffffff20
  7035: 28 2e                    jump @519
      :                          @514
  7037: 55 27 f8 00 0e           jump @516 if a0 >=u 248
      :                          @515
  7042: 33 0a 04                 a3 = 0x4
  7045: 33 0b 10 ff              a4 = 0xffffffffffffff10
  7049: 28 20                    jump @519
      :                          @516
  7051: 55 27 fc 00 0e           jump @518 if a0 >=u 252
      :                          @517
  7056: 33 0a 05                 a3 = 0x5
  7059: 33 0b 08 ff              a4 = 0xffffffffffffff08
  7063: 28 12                    jump @519
      :                          @518
  7065: 88 7a fe 00              a3 = a0 <u 0xfe
  7069: 33 0b 04 ff              a4 = 0xffffffffffffff04
  7073: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  7077: 85 aa 07                 a3 = a3 ^ 0x7
  7080: 01                       fallthrough
      :                          @519
  7081: ae 8a 2b                 jump @526 if a3 >=u a1
      :                          @520
  7084: 33 08                    a1 = 0
  7086: c8 b7 07                 a0 = a0 + a4
  7089: 64 ab                    a4 = a3
  7091: 01                       fallthrough
      :                          @521
  7092: c8 b9 0c                 a5 = a2 + a4
  7095: 7c cc                    a5 = u8 [a5]
  7097: 97 88 08                 a1 = a1 << 0x8
  7100: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  7103: d4 c8 08                 a1 = a1 | a5
  7106: 52 0b f2                 jump @521 if a4 != 0
      :                          @522
  7109: 8a a9 03                 i32 a2 = a3 << 0x3
  7112: cf 97 07                 a0 = a0 << a2
  7115: c8 87 07                 a0 = a0 + a1
  7118: 32 00                    ret
      :                          @523
  7120: 32 00                    ret
      :                          @524
  7122: 00                       trap
      :                          @525
  7123: 00                       trap
      :                          @526
  7124: 00                       trap
