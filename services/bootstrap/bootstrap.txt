// RO data = 0/0 bytes
// RW data = 0/0 bytes
// Stack size = 8192 bytes
// Jump table entry point size = 2 bytes
// RO data = []
// RW data = []
// Instructions = 421
// Code size = 1274 bytes

      :                          @0
     0: 28 0d 00 00 00           jump @3
      :                          @1
     5: 28 24 01 00 00           jump @38
      :                          @2
    10: 28 9a 04                 jump @140
      :                          @3 [export #0: 'refine']
    13: 95 11 f8                 sp = sp + 0xfffffffffffffff8
    16: 7b 15                    u64 [sp] = s0
    18: 64 7a                    a3 = a0
    20: 33 09 04                 a2 = 0x4
    23: 33 07 ff                 a0 = 0xffffffffffffffff
    26: ac 98 05 01              jump @34 if a1 <u a2
      :                          @4
    30: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
    33: 51 08 fe 00              jump @34 if a1 == 0
      :                          @5
    37: 95 a5 04                 s0 = a3 + 0x4
    40: 7d 59                    a2 = i8 [s0]
    42: 84 9c ff 00              a5 = a2 & 0xff
    46: 33 04 01                 t2 = 0x1
    49: 59 09 3a                 jump @13 if a2 >=s 0
      :                          @6
    52: 33 04 02                 t2 = 0x2
    55: 53 2c c0 00 30           jump @12 if a5 <u 192
      :                          @7
    60: 33 04 03                 t2 = 0x3
    63: 53 2c e0 00 28           jump @12 if a5 <u 224
      :                          @8
    68: 33 04 04                 t2 = 0x4
    71: 53 2c f0 00 20           jump @12 if a5 <u 240
      :                          @9
    76: 33 04 05                 t2 = 0x5
    79: 53 2c f8 00 18           jump @12 if a5 <u 248
      :                          @10
    84: 33 04 06                 t2 = 0x6
    87: 53 2c fc 00 10           jump @12 if a5 <u 252
      :                          @11
    92: 88 c9 fe 00              a2 = a5 <u 0xfe
    96: 33 0b 08                 a4 = 0x8
    99: c9 9b 04                 t2 = a4 - a2
   102: 01                       fallthrough
      :                          @12
   103: ac 48 c0 00              jump @36 if a1 <u t2
      :                          @13
   107: 51 0c 90 00              jump @32 if a5 == 0
      :                          @14
   111: 51 2c ff 00 b7 00        jump @35 if a5 == 255
      :                          @15
   117: 6c c9                    a2 = sext.b a5
   119: 57 09 09                 jump @17 if a2 <s 0
      :                          @16
   122: 33 03                    t1 = 0
   124: 33 0b                    a4 = 0
   126: 28 73                    jump @31
      :                          @17
   128: 55 2c c0 00 0d           jump @19 if a5 >=u 192
      :                          @18
   133: 33 03 01                 t1 = 0x1
   136: 33 02 80                 t0 = 0xffffffffffffff80
   139: 28 4a                    jump @28
      :                          @19
   141: 55 2c e0 00 0e           jump @21 if a5 >=u 224
      :                          @20
   146: 33 03 02                 t1 = 0x2
   149: 33 02 40 ff              t0 = 0xffffffffffffff40
   153: 28 3c                    jump @28
      :                          @21
   155: 55 2c f0 00 0e           jump @23 if a5 >=u 240
      :                          @22
   160: 33 03 03                 t1 = 0x3
   163: 33 02 20 ff              t0 = 0xffffffffffffff20
   167: 28 2e                    jump @28
      :                          @23
   169: 55 2c f8 00 0e           jump @25 if a5 >=u 248
      :                          @24
   174: 33 03 04                 t1 = 0x4
   177: 33 02 10 ff              t0 = 0xffffffffffffff10
   181: 28 20                    jump @28
      :                          @25
   183: 55 2c fc 00 0e           jump @27 if a5 >=u 252
      :                          @26
   188: 33 03 05                 t1 = 0x5
   191: 33 02 08 ff              t0 = 0xffffffffffffff08
   195: 28 12                    jump @28
      :                          @27
   197: 88 c9 fe 00              a2 = a5 <u 0xfe
   201: 33 02 04 ff              t0 = 0xffffffffffffff04
   205: 93 92 02 ff              t0 = 0xffffffffffffff02 if a2 == 0
   209: 85 93 07                 t1 = a2 ^ 0x7
   212: 01                       fallthrough
      :                          @28
   213: ae 43 53                 jump @37 if t1 >=u t2
      :                          @29
   216: 33 0b                    a4 = 0
   218: c8 2c 0c                 a5 = a5 + t0
   221: 64 3a                    a3 = t1
   223: 01                       fallthrough
      :                          @30
   224: c8 a5 09                 a2 = s0 + a3
   227: 7c 99                    a2 = u8 [a2]
   229: 97 bb 08                 a4 = a4 << 0x8
   232: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
   235: d4 9b 0b                 a4 = a4 | a2
   238: 52 0a f2                 jump @30 if a3 != 0
      :                          @31
   241: 8a 39 03                 i32 a2 = t1 << 0x3
   244: cf 9c 0c                 a5 = a5 << a2
   247: c8 bc 0c                 a5 = a5 + a4
   250: 01                       fallthrough
      :                          @32
   251: e4 48 08                 a1 = maxu(a1, t2)
   254: c9 48 08                 a1 = a1 - t2
   257: d8 c8 09                 a2 = a1 <u a5
   260: e4 c8 08                 a1 = maxu(a1, a5)
   263: c9 c8 08                 a1 = a1 - a5
   266: 88 88 20                 a1 = a1 <u 0x20
   269: d4 98 08                 a1 = a1 | a2
   272: 52 08 0f                 jump @34 if a1 != 0
      :                          @33
   275: 64 c8                    a1 = a5
   277: c8 45 07                 a0 = s0 + t2
   280: 82 15                    s0 = u64 [sp]
   282: 95 11 08                 sp = sp + 0x8
   285: 32 00                    ret
      :                          @34
   287: 82 15                    s0 = u64 [sp]
   289: 95 11 08                 sp = sp + 0x8
   292: 32 00                    ret
      :                          @35
   294: 00                       trap
      :                          @36
   295: 00                       trap
      :                          @37
   296: 00                       trap
      :                          @38 [export #1: 'accumulate']
   297: 95 11 40 ff              sp = sp + 0xffffffffffffff40
   301: 7b 10 b8 00              u64 [sp + 0xb8] = ra
   305: 7b 15 b0 00              u64 [sp + 0xb0] = s0
   309: 64 79                    a2 = a0
   311: 64 8a                    a3 = a1
   313: 95 aa f8                 a3 = a3 + 0xfffffffffffffff8
   316: 33 07 ff                 a0 = 0xffffffffffffffff
   319: 51 0a 4f 03              jump @131 if a3 == 0
      :                          @39
   323: 95 9b 08                 a4 = a2 + 0x8
   326: 7d bc                    a5 = i8 [a4]
   328: 84 c4 ff 00              t2 = a5 & 0xff
   332: 33 08 01                 a1 = 0x1
   335: 59 0c 40                 jump @46 if a5 >=s 0
      :                          @40
   338: 33 0c c0 00              a5 = 0xc0
   342: 33 08 02                 a1 = 0x2
   345: ac c4 36                 jump @46 if t2 <u a5
      :                          @41
   348: 33 0c e0 00              a5 = 0xe0
   352: 33 08 03                 a1 = 0x3
   355: ac c4 2c                 jump @46 if t2 <u a5
      :                          @42
   358: 33 0c f0 00              a5 = 0xf0
   362: 33 08 04                 a1 = 0x4
   365: ac c4 22                 jump @46 if t2 <u a5
      :                          @43
   368: 33 0c f8 00              a5 = 0xf8
   372: 33 08 05                 a1 = 0x5
   375: ac c4 18                 jump @46 if t2 <u a5
      :                          @44
   378: 33 0c fc 00              a5 = 0xfc
   382: 33 08 06                 a1 = 0x6
   385: ac c4 0e                 jump @46 if t2 <u a5
      :                          @45
   388: 88 48 fe 00              a1 = t2 <u 0xfe
   392: 33 0c 08                 a5 = 0x8
   395: c9 8c 08                 a1 = a5 - a1
   398: 01                       fallthrough
      :                          @46
   399: ac 8a ff 02              jump @131 if a3 <u a1
      :                          @47
   403: 51 04 fb 02              jump @131 if t2 == 0
      :                          @48
   407: 51 24 ff 00 05 03        jump @132 if t2 == 255
      :                          @49
   413: 6c 4c                    a5 = sext.b t2
   415: 57 0c 09                 jump @51 if a5 <s 0
      :                          @50
   418: 33 03                    t1 = 0
   420: 33 05                    s0 = 0
   422: 28 74                    jump @65
      :                          @51
   424: 55 24 c0 00 0d           jump @53 if t2 >=u 192
      :                          @52
   429: 33 03 01                 t1 = 0x1
   432: 33 02 80                 t0 = 0xffffffffffffff80
   435: 28 4a                    jump @62
      :                          @53
   437: 55 24 e0 00 0e           jump @55 if t2 >=u 224
      :                          @54
   442: 33 03 02                 t1 = 0x2
   445: 33 02 40 ff              t0 = 0xffffffffffffff40
   449: 28 3c                    jump @62
      :                          @55
   451: 55 24 f0 00 0e           jump @57 if t2 >=u 240
      :                          @56
   456: 33 03 03                 t1 = 0x3
   459: 33 02 20 ff              t0 = 0xffffffffffffff20
   463: 28 2e                    jump @62
      :                          @57
   465: 55 24 f8 00 0e           jump @59 if t2 >=u 248
      :                          @58
   470: 33 03 04                 t1 = 0x4
   473: 33 02 10 ff              t0 = 0xffffffffffffff10
   477: 28 20                    jump @62
      :                          @59
   479: 55 24 fc 00 0e           jump @61 if t2 >=u 252
      :                          @60
   484: 33 03 05                 t1 = 0x5
   487: 33 02 08 ff              t0 = 0xffffffffffffff08
   491: 28 12                    jump @62
      :                          @61
   493: 88 4c fe 00              a5 = t2 <u 0xfe
   497: 33 02 04 ff              t0 = 0xffffffffffffff04
   501: 93 c2 02 ff              t0 = 0xffffffffffffff02 if a5 == 0
   505: 85 c3 07                 t1 = a5 ^ 0x7
   508: 01                       fallthrough
      :                          @62
   509: ae 83 a0 02              jump @133 if t1 >=u a1
      :                          @63
   513: 33 05                    s0 = 0
   515: c8 24 04                 t2 = t2 + t0
   518: 64 3c                    a5 = t1
   520: 01                       fallthrough
      :                          @64
   521: c8 cb 09                 a2 = a4 + a5
   524: 7c 99                    a2 = u8 [a2]
   526: 97 55 08                 s0 = s0 << 0x8
   529: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
   532: d4 95 05                 s0 = s0 | a2
   535: 52 0c f2                 jump @64 if a5 != 0
      :                          @65
   538: 8a 39 03                 i32 a2 = t1 << 0x3
   541: cf 94 09                 a2 = t2 << a2
   544: 9a 99                    a2 = -a2
   546: aa 95 6c 02              jump @131 if s0 == a2
      :                          @66
   550: e4 8a 0a                 a3 = maxu(a3, a1)
   553: c9 8a 0a                 a3 = a3 - a1
   556: 33 09 60                 a2 = 0x60
   559: ac 9a 5f 02              jump @131 if a3 <u a2
      :                          @67
   563: c8 8b 0b                 a4 = a4 + a1
   566: 95 a8 a0                 a1 = a3 + 0xffffffffffffffa0
   569: 95 b9 60                 a2 = a4 + 0x60
   572: 51 08 65                 jump @80 if a1 == 0
      :                          @68
   575: 7d 9b                    a4 = i8 [a2]
   577: 84 b5 ff 00              s0 = a4 & 0xff
   581: 33 04 01                 t2 = 0x1
   584: 59 0b 40                 jump @75 if a4 >=s 0
      :                          @69
   587: 33 0b c0 00              a4 = 0xc0
   591: 33 04 02                 t2 = 0x2
   594: ac b5 36                 jump @75 if s0 <u a4
      :                          @70
   597: 33 0b e0 00              a4 = 0xe0
   601: 33 04 03                 t2 = 0x3
   604: ac b5 2c                 jump @75 if s0 <u a4
      :                          @71
   607: 33 0b f0 00              a4 = 0xf0
   611: 33 04 04                 t2 = 0x4
   614: ac b5 22                 jump @75 if s0 <u a4
      :                          @72
   617: 33 0b f8 00              a4 = 0xf8
   621: 33 04 05                 t2 = 0x5
   624: ac b5 18                 jump @75 if s0 <u a4
      :                          @73
   627: 33 0b fc 00              a4 = 0xfc
   631: 33 04 06                 t2 = 0x6
   634: ac b5 0e                 jump @75 if s0 <u a4
      :                          @74
   637: 88 5a fe 00              a3 = s0 <u 0xfe
   641: 33 0b 08                 a4 = 0x8
   644: c9 ab 04                 t2 = a4 - a3
   647: 01                       fallthrough
      :                          @75
   648: ac 48 16 02              jump @134 if a1 <u t2
      :                          @76
   652: 51 05 97 00              jump @96 if s0 == 0
      :                          @77
   656: 51 25 ff 00 0f 02        jump @135 if s0 == 255
      :                          @78
   662: 6c 5b                    a4 = sext.b s0
   664: 57 0b 0f                 jump @81 if a4 <s 0
      :                          @79
   667: 33 03                    t1 = 0
   669: 33 0b                    a4 = 0
   671: 28 7a                    jump @95
      :                          @80
   673: 33 04                    t2 = 0
   675: 33 05                    s0 = 0
   677: 28 7e                    jump @96
      :                          @81
   679: 55 25 c0 00 0d           jump @83 if s0 >=u 192
      :                          @82
   684: 33 03 01                 t1 = 0x1
   687: 33 02 80                 t0 = 0xffffffffffffff80
   690: 28 4a                    jump @92
      :                          @83
   692: 55 25 e0 00 0e           jump @85 if s0 >=u 224
      :                          @84
   697: 33 03 02                 t1 = 0x2
   700: 33 02 40 ff              t0 = 0xffffffffffffff40
   704: 28 3c                    jump @92
      :                          @85
   706: 55 25 f0 00 0e           jump @87 if s0 >=u 240
      :                          @86
   711: 33 03 03                 t1 = 0x3
   714: 33 02 20 ff              t0 = 0xffffffffffffff20
   718: 28 2e                    jump @92
      :                          @87
   720: 55 25 f8 00 0e           jump @89 if s0 >=u 248
      :                          @88
   725: 33 03 04                 t1 = 0x4
   728: 33 02 10 ff              t0 = 0xffffffffffffff10
   732: 28 20                    jump @92
      :                          @89
   734: 55 25 fc 00 0e           jump @91 if s0 >=u 252
      :                          @90
   739: 33 03 05                 t1 = 0x5
   742: 33 02 08 ff              t0 = 0xffffffffffffff08
   746: 28 12                    jump @92
      :                          @91
   748: 88 5b fe 00              a4 = s0 <u 0xfe
   752: 33 02 04 ff              t0 = 0xffffffffffffff04
   756: 93 b2 02 ff              t0 = 0xffffffffffffff02 if a4 == 0
   760: 85 b3 07                 t1 = a4 ^ 0x7
   763: 01                       fallthrough
      :                          @92
   764: ae 43 a4 01              jump @136 if t1 >=u t2
      :                          @93
   768: 33 0b                    a4 = 0
   770: c8 25 05                 s0 = s0 + t0
   773: 64 3c                    a5 = t1
   775: 01                       fallthrough
      :                          @94
   776: c8 c9 0a                 a3 = a2 + a5
   779: 7c aa                    a3 = u8 [a3]
   781: 97 bb 08                 a4 = a4 << 0x8
   784: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
   787: d4 ab 0b                 a4 = a4 | a3
   790: 52 0c f2                 jump @94 if a5 != 0
      :                          @95
   793: 8a 3a 03                 i32 a3 = t1 << 0x3
   796: cf a5 05                 s0 = s0 << a3
   799: c8 b5 05                 s0 = s0 + a4
   802: 01                       fallthrough
      :                          @96
   803: e4 48 08                 a1 = maxu(a1, t2)
   806: c9 48 08                 a1 = a1 - t2
   809: e4 58 08                 a1 = maxu(a1, s0)
   812: c9 58 08                 a1 = a1 - s0
   815: 33 0a 21                 a3 = 0x21
   818: ac a8 5c 01              jump @131 if a1 <u a3
      :                          @97
   822: c8 49 09                 a2 = a2 + t2
   825: c8 95 05                 s0 = s0 + a2
   828: 7c 57 20                 a0 = u8 [s0 + 0x20]
   831: 51 07 0a                 jump @99 if a0 == 0
      :                          @98
   834: 33 08                    a1 = 0
   836: 33 07                    a0 = 0
   838: 28 f0 00                 jump @129
      :                          @99
   841: 95 88 df                 a1 = a1 + 0xffffffffffffffdf
   844: 95 55 21                 s0 = s0 + 0x21
   847: 51 08 58                 jump @112 if a1 == 0
      :                          @100
   850: 7d 5a                    a3 = i8 [s0]
   852: 84 ac ff 00              a5 = a3 & 0xff
   856: 33 09 01                 a2 = 0x1
   859: 59 0a 33                 jump @107 if a3 >=s 0
      :                          @101
   862: 33 09 02                 a2 = 0x2
   865: 53 2c c0 00 2d           jump @107 if a5 <u 192
      :                          @102
   870: 33 09 03                 a2 = 0x3
   873: 53 2c e0 00 25           jump @107 if a5 <u 224
      :                          @103
   878: 33 09 04                 a2 = 0x4
   881: 53 2c f0 00 1d           jump @107 if a5 <u 240
      :                          @104
   886: 33 09 05                 a2 = 0x5
   889: 53 2c f8 00 15           jump @107 if a5 <u 248
      :                          @105
   894: 33 09 06                 a2 = 0x6
   897: 53 2c fc 00 0d           jump @107 if a5 <u 252
      :                          @106
   902: 88 c9 fe 00              a2 = a5 <u 0xfe
   906: 9a 99 08                 a2 = 0x8 - a2
   909: 01                       fallthrough
      :                          @107
   910: ac 98 13 01              jump @137 if a1 <u a2
      :                          @108
   914: 51 0c 97 00              jump @128 if a5 == 0
      :                          @109
   918: 51 2c ff 00 0c 01        jump @138 if a5 == 255
      :                          @110
   924: 6c ca                    a3 = sext.b a5
   926: 57 0a 0f                 jump @113 if a3 <s 0
      :                          @111
   929: 33 02                    t0 = 0
   931: 33 0a                    a3 = 0
   933: 28 7a                    jump @127
      :                          @112
   935: 33 09                    a2 = 0
   937: 33 0c                    a5 = 0
   939: 28 7e                    jump @128
      :                          @113
   941: 55 2c c0 00 0d           jump @115 if a5 >=u 192
      :                          @114
   946: 33 02 01                 t0 = 0x1
   949: 33 0b 80                 a4 = 0xffffffffffffff80
   952: 28 4a                    jump @124
      :                          @115
   954: 55 2c e0 00 0e           jump @117 if a5 >=u 224
      :                          @116
   959: 33 02 02                 t0 = 0x2
   962: 33 0b 40 ff              a4 = 0xffffffffffffff40
   966: 28 3c                    jump @124
      :                          @117
   968: 55 2c f0 00 0e           jump @119 if a5 >=u 240
      :                          @118
   973: 33 02 03                 t0 = 0x3
   976: 33 0b 20 ff              a4 = 0xffffffffffffff20
   980: 28 2e                    jump @124
      :                          @119
   982: 55 2c f8 00 0e           jump @121 if a5 >=u 248
      :                          @120
   987: 33 02 04                 t0 = 0x4
   990: 33 0b 10 ff              a4 = 0xffffffffffffff10
   994: 28 20                    jump @124
      :                          @121
   996: 55 2c fc 00 0e           jump @123 if a5 >=u 252
      :                          @122
  1001: 33 02 05                 t0 = 0x5
  1004: 33 0b 08 ff              a4 = 0xffffffffffffff08
  1008: 28 12                    jump @124
      :                          @123
  1010: 88 ca fe 00              a3 = a5 <u 0xfe
  1014: 33 0b 04 ff              a4 = 0xffffffffffffff04
  1018: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  1022: 85 a2 07                 t0 = a3 ^ 0x7
  1025: 01                       fallthrough
      :                          @124
  1026: ae 92 a1 00              jump @139 if t0 >=u a2
      :                          @125
  1030: 33 0a                    a3 = 0
  1032: c8 bc 0c                 a5 = a5 + a4
  1035: 64 2b                    a4 = t0
  1037: 01                       fallthrough
      :                          @126
  1038: c8 b5 07                 a0 = s0 + a4
  1041: 7c 77                    a0 = u8 [a0]
  1043: 97 aa 08                 a3 = a3 << 0x8
  1046: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  1049: d4 7a 0a                 a3 = a3 | a0
  1052: 52 0b f2                 jump @126 if a4 != 0
      :                          @127
  1055: 8a 27 03                 i32 a0 = t0 << 0x3
  1058: cf 7c 0c                 a5 = a5 << a0
  1061: c8 ac 0c                 a5 = a5 + a3
  1064: 01                       fallthrough
      :                          @128
  1065: c8 95 07                 a0 = s0 + a2
  1068: e4 98 08                 a1 = maxu(a1, a2)
  1071: c9 98 08                 a1 = a1 - a2
  1074: e6 c8 08                 a1 = minu(a1, a5)
  1077: 01                       fallthrough
      :                          @129
  1078: c8 78 08                 a1 = a1 + a0
  1081: 80 88 fc                 a1 = u32 [a1 + 0xfffffffffffffffc]
  1084: 33 09 64                 a2 = 0x64
  1087: 33 0a 64                 a3 = 0x64
  1090: 0a 09                    ecalli 9 // 'new'
  1092: 64 75                    s0 = a0
  1094: 7b 17                    u64 [sp] = a0
  1096: 48 11 0c                 u32 [sp + 12] = 0
  1099: 95 17 0c                 a0 = sp + 0xc
  1102: 33 08 04                 a1 = 0x4
  1105: 64 19                    a2 = sp
  1107: 33 0a 04                 a3 = 0x4
  1110: 0a 03                    ecalli 3 // 'write'
  1112: 95 17 10                 a0 = sp + 0x10
  1115: 33 09 80 00              a2 = 0x80
  1119: 33 08                    a1 = 0
  1121: 50 10 02 47              ra = 2, jump @141
      :                          @130 [@dyn 1]
  1125: 33 08 20 a1 07           a1 = 0x7a120
  1130: 33 09 64                 a2 = 0x64
  1133: 95 1a 10                 a3 = sp + 0x10
  1136: 64 57                    a0 = s0
  1138: 0a 0b                    ecalli 11 // 'transfer'
  1140: 82 17                    a0 = u64 [sp]
  1142: 49 21 a8 00              u64 [sp + 168] = 0
  1146: 49 21 a0 00              u64 [sp + 160] = 0
  1150: 49 21 98 00              u64 [sp + 152] = 0
  1154: 7b 17 90 00              u64 [sp + 0x90] = a0
  1158: 33 08 20                 a1 = 0x20
  1161: 95 17 90 00              a0 = sp + 0x90
  1165: 01                       fallthrough
      :                          @131
  1166: 82 10 b8 00              ra = u64 [sp + 0xb8]
  1170: 82 15 b0 00              s0 = u64 [sp + 0xb0]
  1174: 95 11 c0 00              sp = sp + 0xc0
  1178: 32 00                    ret
      :                          @132
  1180: 00                       trap
      :                          @133
  1181: 00                       trap
      :                          @134
  1182: 00                       trap
      :                          @135
  1183: 00                       trap
      :                          @136
  1184: 00                       trap
      :                          @137
  1185: 00                       trap
      :                          @138
  1186: 00                       trap
      :                          @139
  1187: 00                       trap
      :                          @140 [export #2: 'on_transfer']
  1188: 33 07                    a0 = 0
  1190: 32 00                    ret
      :                          @141
  1192: 8d 7a                    i32 a3 = -a0
  1194: 84 aa 07                 a3 = a3 & 0x7
  1197: c8 a7 0b                 a4 = a0 + a3
  1200: 51 0a 0e                 jump @144 if a3 == 0
      :                          @142
  1203: 64 7c                    a5 = a0
  1205: 01                       fallthrough
      :                          @143
  1206: 78 c8                    u8 [a5] = a1
  1208: 95 cc 01                 a5 = a5 + 0x1
  1211: ac bc fb                 jump @143 if a5 <u a4
      :                          @144
  1214: c9 a9 03                 t1 = a2 - a3
  1217: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  1220: c8 cb 0a                 a3 = a4 + a5
  1223: 58 0c 1d                 jump @147 if a5 <=s 0
      :                          @145
  1226: 84 82 ff 00              t0 = a1 & 0xff
  1230: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  1240: ca 92 0c                 a5 = t0 * a2
  1243: 01                       fallthrough
      :                          @146
  1244: 7b bc                    u64 [a4] = a5
  1246: 95 bb 08                 a4 = a4 + 0x8
  1249: ac ab fb                 jump @146 if a4 <u a3
      :                          @147
  1252: 84 39 07                 a2 = t1 & 0x7
  1255: 52 09 05                 jump @149 if a2 != 0
      :                          @148
  1258: 28 0e                    jump @151
      :                          @149
  1260: c8 a9 09                 a2 = a2 + a3
  1263: 01                       fallthrough
      :                          @150
  1264: 78 a8                    u8 [a3] = a1
  1266: 95 aa 01                 a3 = a3 + 0x1
  1269: ac 9a fb                 jump @150 if a3 <u a2
      :                          @151
  1272: 32 00                    ret
