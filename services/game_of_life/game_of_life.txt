// RO data = 1886/1888 bytes
// RW data = 16/1052752 bytes
// Stack size = 1048576 bytes
// RO data = [0, 16, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 122, 61, 32, 115, 61, 32, 111, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 32, 111, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 32, 119, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 80, 97, 114, 101, 110, 116, 58, 32, 112, 97, 103, 101, 115, 32, 109, 61, 32, 119, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 8, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 18, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 21, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 54, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 102, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 70, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 119, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 38, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 109, 97, 99, 104, 105, 110, 101, 32, 110, 101, 119, 32, 105, 110, 100, 101, 120, 61, 0, 0, 0, 0, 0, 0, 8, 1, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 83, 116, 97, 114, 116, 70, 101, 116, 99, 104, 80, 97, 114, 101, 110, 116, 58, 32, 102, 101, 116, 99, 104, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 32, 102, 101, 116, 99, 104, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 74, 1, 1, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 102, 1, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 44, 32, 112, 97, 103, 101, 95, 105, 100, 61, 32, 112, 97, 103, 101, 115, 95, 114, 101, 115, 117, 108, 116, 61, 86, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 152, 1, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 162, 1, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 112, 111, 107, 101, 32, 109, 61, 32, 111, 61, 32, 122, 61, 32, 112, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 0, 224, 1, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 18, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 239, 1, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 242, 1, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 245, 1, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 102, 105, 114, 115, 116, 95, 112, 97, 103, 101, 95, 97, 100, 100, 114, 101, 115, 115, 61, 0, 0, 0, 0, 0, 88, 2, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 0, 0, 136, 2, 1, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 115, 116, 101, 112, 95, 110, 61, 0, 176, 2, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 110, 117, 109, 95, 111, 102, 95, 103, 108, 111, 100, 101, 114, 115, 61, 0, 208, 2, 1, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 116, 111, 116, 97, 108, 95, 101, 120, 101, 99, 117, 116, 105, 111, 110, 95, 115, 116, 101, 112, 115, 61, 0, 0, 248, 2, 1, 0, 0, 0, 0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 99, 104, 105, 108, 100, 95, 118, 109, 95, 114, 101, 103, 105, 115, 116, 101, 114, 115, 61, 0, 0, 0, 0, 0, 40, 3, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 105, 110, 118, 111, 107, 101, 32, 99, 104, 105, 108, 100, 32, 86, 77, 44, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 0, 88, 3, 1, 0, 0, 0, 0, 0, 39, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 105, 110, 118, 111, 107, 101, 32, 32, 105, 110, 118, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 32, 111, 109, 101, 103, 97, 95, 56, 61, 0, 144, 3, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 159, 3, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 174, 3, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 100, 111, 110, 101, 32, 119, 105, 116, 104, 32, 99, 104, 105, 108, 100, 32, 86, 77, 44, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 0, 0, 0, 0, 0, 0, 232, 3, 1, 0, 0, 0, 0, 0, 42, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 70, 105, 114, 115, 116, 32, 116, 105, 109, 101, 32, 115, 101, 116, 117, 112, 58, 32, 119, 105, 95, 112, 97, 121, 108, 111, 97, 100, 95, 108, 101, 110, 103, 116, 104, 61, 0, 0, 0, 0, 40, 4, 1, 0, 0, 0, 0, 0, 44, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 115, 111, 108, 105, 99, 105, 116, 32, 99, 111, 100, 101, 95, 104, 97, 115, 104, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 111, 100, 101, 95, 108, 101, 110, 103, 116, 104, 61, 0, 104, 4, 1, 0, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 138, 4, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 166, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 168, 0, 0, 0, 0, 0, 0, 0, 174, 0, 0, 0, 0, 0, 0, 0, 182, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 216, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 218, 0, 0, 0, 0, 0, 0, 0, 224, 0, 0, 0, 0, 0, 0, 0, 228, 0, 0, 0, 0, 0, 0, 0, 112, 101, 101, 107, 32, 32, 32, 32, 112, 111, 107, 101, 44, 32, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 115, 117, 99, 99, 101, 115, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 119, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 111, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 115, 116, 97, 99, 107, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 119, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 111, 95, 98, 121, 116, 101, 115]
// RW data = [75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 3279
// Code size = 10241 bytes

      :                          @0
     0: 28 5e 03 00 00           jump @56
      :                          @1
     5: 28 8c 15 00 00           jump @277
      :                          @2
    10: 28 3b 18                 jump @341
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 80 89 34                 a2 = u32 [a1 + 0x34]
    24: 82 77                    a0 = u64 [a0]
    26: 84 9a 10                 a3 = a2 & 0x10
    29: 52 0a 16                 jump @6 if a3 != 0
      :                          @4
    32: 84 99 20                 a2 = a2 & 0x20
    35: 52 09 40                 jump @9 if a2 != 0
      :                          @5
    38: 82 77                    a0 = u64 [a0]
    40: 82 10 80 00              ra = u64 [sp + 0x80]
    44: 95 11 88 00              sp = sp + 0x88
    48: 28 e9 1d                 jump @481
      :                          @6
    51: 82 7b                    a4 = u64 [a0]
    53: 33 09 81 00              a2 = 0x81
    57: 95 17 7f                 a0 = sp + 0x7f
    60: 33 02 57                 t0 = 0x57
    63: 01                       fallthrough
      :                          @7
    64: 64 9c                    a5 = a2
    66: 98 ba 04                 a3 = a4 >> 0x4
    69: 84 bb 0f                 a4 = a4 & 0xf
    72: 88 b3 0a                 t1 = a4 <u 0xa
    75: 33 09 30                 a2 = 0x30
    78: da 32 09                 a2 = t0 if t1 == 0
    81: be b9 09                 i32 a2 = a2 + a4
    84: 78 79                    u8 [a0] = a2
    86: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
    89: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
    92: 64 ab                    a4 = a3
    94: 52 0a e2                 jump @7 if a3 != 0
      :                          @8
    97: 28 30                    jump @11
      :                          @9
    99: 82 7b                    a4 = u64 [a0]
   101: 33 09 81 00              a2 = 0x81
   105: 95 17 7f                 a0 = sp + 0x7f
   108: 33 02 37                 t0 = 0x37
   111: 01                       fallthrough
      :                          @10
   112: 64 9c                    a5 = a2
   114: 98 ba 04                 a3 = a4 >> 0x4
   117: 84 bb 0f                 a4 = a4 & 0xf
   120: 88 b3 0a                 t1 = a4 <u 0xa
   123: 33 09 30                 a2 = 0x30
   126: da 32 09                 a2 = t0 if t1 == 0
   129: be b9 09                 i32 a2 = a2 + a4
   132: 78 79                    u8 [a0] = a2
   134: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   137: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   140: 64 ab                    a4 = a3
   142: 52 0a e2                 jump @10 if a3 != 0
      :                          @11
   145: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   148: 56 27 80 00 27           jump @14 if a0 >u 128
      :                          @12
   153: 9a 9b 81 00              a4 = 0x81 - a2
   157: 64 1a                    a3 = sp
   159: c8 7a 0a                 a3 = a3 + a0
   162: 33 09 02                 a2 = 0x2
   165: 64 87                    a0 = a1
   167: 33 08 32 05 01           a1 = 0x10532
   172: 50 10 04 95 1e           ra = 4, jump @491
      :                          @13 [@dyn 2]
   177: 82 10 80 00              ra = u64 [sp + 0x80]
   181: 95 11 88 00              sp = sp + 0x88
   185: 32 00                    ret
      :                          @14
   187: 00                       trap
      :                          @15 [@dyn 3]
   188: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   192: 7b 10 80 00              u64 [sp + 0x80] = ra
   196: 80 89 34                 a2 = u32 [a1 + 0x34]
   199: 84 9a 10                 a3 = a2 & 0x10
   202: 52 0a 16                 jump @18 if a3 != 0
      :                          @16
   205: 84 99 20                 a2 = a2 & 0x20
   208: 52 09 40                 jump @21 if a2 != 0
      :                          @17
   211: 80 77                    a0 = u32 [a0]
   213: 82 10 80 00              ra = u64 [sp + 0x80]
   217: 95 11 88 00              sp = sp + 0x88
   221: 28 3c 1d                 jump @481
      :                          @18
   224: 81 7b                    a4 = i32 [a0]
   226: 33 09 81 00              a2 = 0x81
   230: 95 17 7f                 a0 = sp + 0x7f
   233: 33 02 57                 t0 = 0x57
   236: 01                       fallthrough
      :                          @19
   237: 64 9c                    a5 = a2
   239: 8b ba 04                 i32 a3 = a4 >> 0x4
   242: 84 bb 0f                 a4 = a4 & 0xf
   245: 88 b3 0a                 t1 = a4 <u 0xa
   248: 33 09 30                 a2 = 0x30
   251: da 32 09                 a2 = t0 if t1 == 0
   254: be b9 09                 i32 a2 = a2 + a4
   257: 78 79                    u8 [a0] = a2
   259: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   262: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   265: 64 ab                    a4 = a3
   267: 52 0a e2                 jump @19 if a3 != 0
      :                          @20
   270: 28 30                    jump @23
      :                          @21
   272: 81 7b                    a4 = i32 [a0]
   274: 33 09 81 00              a2 = 0x81
   278: 95 17 7f                 a0 = sp + 0x7f
   281: 33 02 37                 t0 = 0x37
   284: 01                       fallthrough
      :                          @22
   285: 64 9c                    a5 = a2
   287: 8b ba 04                 i32 a3 = a4 >> 0x4
   290: 84 bb 0f                 a4 = a4 & 0xf
   293: 88 b3 0a                 t1 = a4 <u 0xa
   296: 33 09 30                 a2 = 0x30
   299: da 32 09                 a2 = t0 if t1 == 0
   302: be b9 09                 i32 a2 = a2 + a4
   305: 78 79                    u8 [a0] = a2
   307: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   310: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   313: 64 ab                    a4 = a3
   315: 52 0a e2                 jump @22 if a3 != 0
      :                          @23
   318: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   321: 56 27 80 00 27           jump @26 if a0 >u 128
      :                          @24
   326: 9a 9b 81 00              a4 = 0x81 - a2
   330: 64 1a                    a3 = sp
   332: c8 7a 0a                 a3 = a3 + a0
   335: 33 09 02                 a2 = 0x2
   338: 64 87                    a0 = a1
   340: 33 08 32 05 01           a1 = 0x10532
   345: 50 10 08 e8 1d           ra = 8, jump @491
      :                          @25 [@dyn 4]
   350: 82 10 80 00              ra = u64 [sp + 0x80]
   354: 95 11 88 00              sp = sp + 0x88
   358: 32 00                    ret
      :                          @26
   360: 00                       trap
      :                          @27 [@dyn 5]
   361: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   365: 7b 10 80 00              u64 [sp + 0x80] = ra
   369: 80 89 34                 a2 = u32 [a1 + 0x34]
   372: 84 9a 10                 a3 = a2 & 0x10
   375: 52 0a 16                 jump @30 if a3 != 0
      :                          @28
   378: 84 99 20                 a2 = a2 & 0x20
   381: 52 09 40                 jump @33 if a2 != 0
      :                          @29
   384: 82 77                    a0 = u64 [a0]
   386: 82 10 80 00              ra = u64 [sp + 0x80]
   390: 95 11 88 00              sp = sp + 0x88
   394: 28 8f 1c                 jump @481
      :                          @30
   397: 82 7b                    a4 = u64 [a0]
   399: 33 09 81 00              a2 = 0x81
   403: 95 17 7f                 a0 = sp + 0x7f
   406: 33 02 57                 t0 = 0x57
   409: 01                       fallthrough
      :                          @31
   410: 64 9c                    a5 = a2
   412: 98 ba 04                 a3 = a4 >> 0x4
   415: 84 bb 0f                 a4 = a4 & 0xf
   418: 88 b3 0a                 t1 = a4 <u 0xa
   421: 33 09 30                 a2 = 0x30
   424: da 32 09                 a2 = t0 if t1 == 0
   427: be b9 09                 i32 a2 = a2 + a4
   430: 78 79                    u8 [a0] = a2
   432: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   435: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   438: 64 ab                    a4 = a3
   440: 52 0a e2                 jump @31 if a3 != 0
      :                          @32
   443: 28 30                    jump @35
      :                          @33
   445: 82 7b                    a4 = u64 [a0]
   447: 33 09 81 00              a2 = 0x81
   451: 95 17 7f                 a0 = sp + 0x7f
   454: 33 02 37                 t0 = 0x37
   457: 01                       fallthrough
      :                          @34
   458: 64 9c                    a5 = a2
   460: 98 ba 04                 a3 = a4 >> 0x4
   463: 84 bb 0f                 a4 = a4 & 0xf
   466: 88 b3 0a                 t1 = a4 <u 0xa
   469: 33 09 30                 a2 = 0x30
   472: da 32 09                 a2 = t0 if t1 == 0
   475: be b9 09                 i32 a2 = a2 + a4
   478: 78 79                    u8 [a0] = a2
   480: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   483: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   486: 64 ab                    a4 = a3
   488: 52 0a e2                 jump @34 if a3 != 0
      :                          @35
   491: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   494: 56 27 80 00 27           jump @38 if a0 >u 128
      :                          @36
   499: 9a 9b 81 00              a4 = 0x81 - a2
   503: 64 1a                    a3 = sp
   505: c8 7a 0a                 a3 = a3 + a0
   508: 33 09 02                 a2 = 0x2
   511: 64 87                    a0 = a1
   513: 33 08 32 05 01           a1 = 0x10532
   518: 50 10 0c 3b 1d           ra = 12, jump @491
      :                          @37 [@dyn 6]
   523: 82 10 80 00              ra = u64 [sp + 0x80]
   527: 95 11 88 00              sp = sp + 0x88
   531: 32 00                    ret
      :                          @38
   533: 00                       trap
      :                          @39 [@dyn 7]
   534: 95 11 d0                 sp = sp + 0xffffffffffffffd0
   537: 7b 10 28                 u64 [sp + 0x28] = ra
   540: 7b 15 20                 u64 [sp + 0x20] = s0
   543: 7b 16 18                 u64 [sp + 0x18] = s1
   546: 64 85                    s0 = a1
   548: 82 88 28                 a1 = u64 [a1 + 0x28]
   551: 82 5a 20                 a3 = u64 [s0 + 0x20]
   554: 82 8b 18                 a4 = u64 [a1 + 0x18]
   557: 64 76                    s1 = a0
   559: 33 08 e8 04 01           a1 = 0x104e8
   564: 33 09 01                 a2 = 0x1
   567: 64 a7                    a0 = a3
   569: b4 b0 01 10              ra = 16, jump [a4]
      :                          @40 [@dyn 8]
   573: 7b 15                    u64 [sp] = s0
   575: 78 17 08                 u8 [sp + 0x8] = a0
   578: 46 11 09                 u8 [sp + 9] = 0
   581: 7b 16 10                 u64 [sp + 0x10] = s1
   584: 33 05 02                 s0 = 0x2
   587: 64 17                    a0 = sp
   589: 95 18 10                 a1 = sp + 0x10
   592: 33 09 02                 a2 = 0x2
   595: 50 10 12 d1 23           ra = 18, jump @635
      :                          @41 [@dyn 9]
   600: 95 67 08                 a0 = s1 + 0x8
   603: 7b 17 10                 u64 [sp + 0x10] = a0
   606: 64 17                    a0 = sp
   608: 95 18 10                 a1 = sp + 0x10
   611: 64 59                    a2 = s0
   613: 50 10 14 bf 23           ra = 20, jump @635
      :                          @42 [@dyn 10]
   618: 95 67 10                 a0 = s1 + 0x10
   621: 7b 17 10                 u64 [sp + 0x10] = a0
   624: 64 17                    a0 = sp
   626: 95 18 10                 a1 = sp + 0x10
   629: 64 59                    a2 = s0
   631: 50 10 16 ad 23           ra = 22, jump @635
      :                          @43 [@dyn 11]
   636: 95 67 18                 a0 = s1 + 0x18
   639: 7b 17 10                 u64 [sp + 0x10] = a0
   642: 64 17                    a0 = sp
   644: 95 18 10                 a1 = sp + 0x10
   647: 64 59                    a2 = s0
   649: 50 10 18 9b 23           ra = 24, jump @635
      :                          @44 [@dyn 12]
   654: 95 67 20                 a0 = s1 + 0x20
   657: 7b 17 10                 u64 [sp + 0x10] = a0
   660: 64 17                    a0 = sp
   662: 95 18 10                 a1 = sp + 0x10
   665: 64 59                    a2 = s0
   667: 50 10 1a 89 23           ra = 26, jump @635
      :                          @45 [@dyn 13]
   672: 95 67 28                 a0 = s1 + 0x28
   675: 7b 17 10                 u64 [sp + 0x10] = a0
   678: 64 17                    a0 = sp
   680: 95 18 10                 a1 = sp + 0x10
   683: 64 59                    a2 = s0
   685: 50 10 1c 77 23           ra = 28, jump @635
      :                          @46 [@dyn 14]
   690: 95 67 30                 a0 = s1 + 0x30
   693: 7b 17 10                 u64 [sp + 0x10] = a0
   696: 64 17                    a0 = sp
   698: 95 18 10                 a1 = sp + 0x10
   701: 64 59                    a2 = s0
   703: 50 10 1e 65 23           ra = 30, jump @635
      :                          @47 [@dyn 15]
   708: 95 67 38                 a0 = s1 + 0x38
   711: 7b 17 10                 u64 [sp + 0x10] = a0
   714: 64 17                    a0 = sp
   716: 95 18 10                 a1 = sp + 0x10
   719: 64 59                    a2 = s0
   721: 50 10 20 53 23           ra = 32, jump @635
      :                          @48 [@dyn 16]
   726: 95 67 40                 a0 = s1 + 0x40
   729: 7b 17 10                 u64 [sp + 0x10] = a0
   732: 64 17                    a0 = sp
   734: 95 18 10                 a1 = sp + 0x10
   737: 64 59                    a2 = s0
   739: 50 10 22 41 23           ra = 34, jump @635
      :                          @49 [@dyn 17]
   744: 95 67 48                 a0 = s1 + 0x48
   747: 7b 17 10                 u64 [sp + 0x10] = a0
   750: 64 17                    a0 = sp
   752: 95 18 10                 a1 = sp + 0x10
   755: 64 59                    a2 = s0
   757: 50 10 24 2f 23           ra = 36, jump @635
      :                          @50 [@dyn 18]
   762: 95 67 50                 a0 = s1 + 0x50
   765: 7b 17 10                 u64 [sp + 0x10] = a0
   768: 64 17                    a0 = sp
   770: 95 18 10                 a1 = sp + 0x10
   773: 64 59                    a2 = s0
   775: 50 10 26 1d 23           ra = 38, jump @635
      :                          @51 [@dyn 19]
   780: 95 67 58                 a0 = s1 + 0x58
   783: 7b 17 10                 u64 [sp + 0x10] = a0
   786: 64 17                    a0 = sp
   788: 95 18 10                 a1 = sp + 0x10
   791: 64 59                    a2 = s0
   793: 50 10 28 0b 23           ra = 40, jump @635
      :                          @52 [@dyn 20]
   798: 95 67 60                 a0 = s1 + 0x60
   801: 7b 17 10                 u64 [sp + 0x10] = a0
   804: 64 17                    a0 = sp
   806: 95 18 10                 a1 = sp + 0x10
   809: 64 59                    a2 = s0
   811: 50 10 2a f9 22           ra = 42, jump @635
      :                          @53 [@dyn 21]
   816: 33 07 01                 a0 = 0x1
   819: 7c 18 08                 a1 = u8 [sp + 0x8]
   822: 52 08 1a                 jump @55 if a1 != 0
      :                          @54
   825: 82 17                    a0 = u64 [sp]
   827: 82 78 28                 a1 = u64 [a0 + 0x28]
   830: 82 77 20                 a0 = u64 [a0 + 0x20]
   833: 82 8a 18                 a3 = u64 [a1 + 0x18]
   836: 33 08 31 05 01           a1 = 0x10531
   841: 33 09 01                 a2 = 0x1
   844: b4 a0 01 2c              ra = 44, jump [a3]
      :                          @55 [@dyn 22]
   848: 82 10 28                 ra = u64 [sp + 0x28]
   851: 82 15 20                 s0 = u64 [sp + 0x20]
   854: 82 16 18                 s1 = u64 [sp + 0x18]
   857: 95 11 30                 sp = sp + 0x30
   860: 32 00                    ret
      :                          @56 [export #0: 'refine']
   862: 95 11 08 f8              sp = sp + 0xfffffffffffff808
   866: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
   870: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
   874: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
   878: 95 11 b8 b4 fe           sp = sp + 0xfffffffffffeb4b8
   883: 64 86                    s1 = a1
   885: 64 7a                    a3 = a0
   887: 33 07 00 00 01           a0 = 0x10000
   892: 53 16 04 43              jump @65 if s1 <u 4
      :                          @57
   896: 7d a8                    a1 = i8 [a3]
   898: 33 05 01                 s0 = 0x1
   901: 59 08 37                 jump @64 if a1 >=s 0
      :                          @58
   904: 84 89 ff 00              a2 = a1 & 0xff
   908: 33 05 02                 s0 = 0x2
   911: 53 29 c0 00 2d           jump @64 if a2 <u 192
      :                          @59
   916: 33 05 03                 s0 = 0x3
   919: 53 29 e0 00 25           jump @64 if a2 <u 224
      :                          @60
   924: 33 05 04                 s0 = 0x4
   927: 53 29 f0 00 1d           jump @64 if a2 <u 240
      :                          @61
   932: 33 05 05                 s0 = 0x5
   935: 53 29 f8 00 15           jump @64 if a2 <u 248
      :                          @62
   940: 33 05 06                 s0 = 0x6
   943: 53 29 fc 00 0d           jump @64 if a2 <u 252
      :                          @63
   948: 88 98 fe 00              a1 = a2 <u 0xfe
   952: 9a 85 08                 s0 = 0x8 - a1
   955: 01                       fallthrough
      :                          @64
   956: ae 56 07                 jump @66 if s1 >=u s0
      :                          @65
   959: 33 06                    s1 = 0
   961: 28 61                    jump @77
      :                          @66
   963: 64 a7                    a0 = a3
   965: 64 58                    a1 = s0
   967: 7b 1a 50                 u64 [sp + 0x50] = a3
   970: 50 10 2e 99 23           ra = 46, jump @652
      :                          @67 [@dyn 23]
   975: aa 56 4b                 jump @76 if s1 == s0
      :                          @68
   978: 82 17 50                 a0 = u64 [sp + 0x50]
   981: c8 57 07                 a0 = a0 + s0
   984: 7d 78                    a1 = i8 [a0]
   986: c9 56 0a                 a3 = s1 - s0
   989: 33 06 01                 s1 = 0x1
   992: 59 08 37                 jump @75 if a1 >=s 0
      :                          @69
   995: 84 89 ff 00              a2 = a1 & 0xff
   999: 33 06 02                 s1 = 0x2
  1002: 53 29 c0 00 2d           jump @75 if a2 <u 192
      :                          @70
  1007: 33 06 03                 s1 = 0x3
  1010: 53 29 e0 00 25           jump @75 if a2 <u 224
      :                          @71
  1015: 33 06 04                 s1 = 0x4
  1018: 53 29 f0 00 1d           jump @75 if a2 <u 240
      :                          @72
  1023: 33 06 05                 s1 = 0x5
  1026: 53 29 f8 00 15           jump @75 if a2 <u 248
      :                          @73
  1031: 33 06 06                 s1 = 0x6
  1034: 53 29 fc 00 0d           jump @75 if a2 <u 252
      :                          @74
  1039: 88 98 fe 00              a1 = a2 <u 0xfe
  1043: 9a 86 08                 s1 = 0x8 - a1
  1046: 01                       fallthrough
      :                          @75
  1047: ae 6a 27                 jump @78 if a3 >=u s1
      :                          @76
  1050: 33 06                    s1 = 0
  1052: 33 07 00 00 01           a0 = 0x10000
  1057: 01                       fallthrough
      :                          @77
  1058: 64 68                    a1 = s1
  1060: 33 09 48 4b 01           a2 = 0x14b48
  1065: c8 91 01                 sp = sp + a2
  1068: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  1072: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  1076: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  1080: 95 11 f8 07              sp = sp + 0x7f8
  1084: 32 00                    ret
      :                          @78
  1086: 64 68                    a1 = s1
  1088: 7b 1a 50                 u64 [sp + 0x50] = a3
  1091: 64 75                    s0 = a0
  1093: 50 10 30 1e 23           ra = 48, jump @652
      :                          @79 [@dyn 24]
  1098: c8 56 0a                 a3 = s1 + s0
  1101: 82 15 50                 s0 = u64 [sp + 0x50]
  1104: 7b 17 48                 u64 [sp + 0x48] = a0
  1107: 7b 1a 40                 u64 [sp + 0x40] = a3
  1110: ab 65 0b                 jump @81 if s0 != s1
      :                          @80
  1113: 33 08                    a1 = 0
  1115: 33 06                    s1 = 0
  1117: 33 05                    s0 = 0
  1119: 28 5c                    jump @92
      :                          @81
  1121: 7d a8                    a1 = i8 [a3]
  1123: c9 65 05                 s0 = s0 - s1
  1126: 33 06 01                 s1 = 0x1
  1129: 59 08 37                 jump @88 if a1 >=s 0
      :                          @82
  1132: 84 89 ff 00              a2 = a1 & 0xff
  1136: 33 06 02                 s1 = 0x2
  1139: 53 29 c0 00 2d           jump @88 if a2 <u 192
      :                          @83
  1144: 33 06 03                 s1 = 0x3
  1147: 53 29 e0 00 25           jump @88 if a2 <u 224
      :                          @84
  1152: 33 06 04                 s1 = 0x4
  1155: 53 29 f0 00 1d           jump @88 if a2 <u 240
      :                          @85
  1160: 33 06 05                 s1 = 0x5
  1163: 53 29 f8 00 15           jump @88 if a2 <u 248
      :                          @86
  1168: 33 06 06                 s1 = 0x6
  1171: 53 29 fc 00 0d           jump @88 if a2 <u 252
      :                          @87
  1176: 88 99 fe 00              a2 = a2 <u 0xfe
  1180: 9a 96 08                 s1 = 0x8 - a2
  1183: 01                       fallthrough
      :                          @88
  1184: ae 65 06                 jump @90 if s0 >=u s1
      :                          @89
  1187: 28 ed 10                 jump @276
      :                          @90
  1190: 64 a7                    a0 = a3
  1192: 64 68                    a1 = s1
  1194: 50 10 32 b9 22           ra = 50, jump @652
      :                          @91 [@dyn 25]
  1199: e4 65 08                 a1 = maxu(s0, s1)
  1202: c9 68 08                 a1 = a1 - s1
  1205: 64 75                    s0 = a0
  1207: ac 78 63 ff              jump @76 if a1 <u a0
      :                          @92
  1211: e4 58 07                 a0 = maxu(a1, s0)
  1214: c9 57 09                 a2 = a0 - s0
  1217: 33 07 00 00 01           a0 = 0x10000
  1222: 53 19 20 f9 fe           jump @65 if a2 <u 32
      :                          @93
  1227: 7b 16 38                 u64 [sp + 0x38] = s1
  1230: 7b 15 58                 u64 [sp + 0x58] = s0
  1233: 33 07 11 00 03           a0 = 0x30011
  1238: 33 09 24                 a2 = 0x24
  1241: 33 0a 03                 a3 = 0x3
  1244: 7b 17 50                 u64 [sp + 0x50] = a0
  1247: 33 08                    a1 = 0
  1249: 33 0b                    a4 = 0
  1251: 33 0c                    a5 = 0
  1253: 0a 01                    ecalli 1 // 'fetch'
  1255: 01                       fallthrough
      :                          @94
  1256: 95 18 c0 50 01           a1 = sp + 0x150c0
  1261: 33 06 24                 s1 = 0x24
  1264: 55 15 08 6d              jump @99 if s0 >=u 8
      :                          @95
  1268: 95 17 58                 a0 = sp + 0x58
  1271: 7b 87 68 01              u64 [a1 + 0x168] = a0
  1275: 33 07 0a                 a0 = 0xa
  1278: 7b 87 70 01              u64 [a1 + 0x170] = a0
  1282: 33 07 58 04 01           a0 = 0x10458
  1287: 7b 17 70                 u64 [sp + 0x70] = a0
  1290: 49 11 78 01              u64 [sp + 120] = 0x1
  1294: 49 21 90 00              u64 [sp + 144] = 0
  1298: 95 18 28 52 01           a1 = sp + 0x15228
  1303: 7b 18 80 00              u64 [sp + 0x80] = a1
  1307: 49 21 88 00 01           u64 [sp + 136] = 0x1
  1312: 95 17 b8 40 01           a0 = sp + 0x140b8
  1317: 95 18 70                 a1 = sp + 0x70
  1320: 95 15 70 40 01           s0 = sp + 0x14070
  1325: 50 10 34 61 15           ra = 52, jump @398
      :                          @96 [@dyn 26]
  1330: 82 5a 50                 a3 = u64 [s0 + 0x50]
  1333: 82 5b 58                 a4 = u64 [s0 + 0x58]
  1336: 82 55 48                 s0 = u64 [s0 + 0x48]
  1339: 33 07 02                 a0 = 0x2
  1342: 33 08                    a1 = 0
  1344: 33 09                    a2 = 0
  1346: 7b 1a 48                 u64 [sp + 0x48] = a3
  1349: 33 00 36                 ra = 0x36
  1352: 0a 64                    ecalli 100 // 'log'
  1354: 01                       fallthrough
      :                          @97 [@dyn 27]
  1355: 95 58 ff ff ef           a1 = s0 + 0xffffffffffefffff
  1360: 55 38 00 00 f0 02 03     jump @128 if a1 >=u 4293918720
      :                          @98
  1367: 82 17 50                 a0 = u64 [sp + 0x50]
  1370: 28 c8 fe                 jump @77
      :                          @99
  1373: 82 17 40                 a0 = u64 [sp + 0x40]
  1376: 82 18 38                 a1 = u64 [sp + 0x38]
  1379: c8 87 07                 a0 = a0 + a1
  1382: 81 78                    a1 = i32 [a0]
  1384: 7a 18 64                 u32 [sp + 0x64] = a1
  1387: 81 78 04                 a1 = i32 [a0 + 0x4]
  1390: 7a 18 68                 u32 [sp + 0x68] = a1
  1393: 81 77 08                 a0 = i32 [a0 + 0x8]
  1396: 7a 17 6c                 u32 [sp + 0x6c] = a0
  1399: 95 17 70                 a0 = sp + 0x70
  1402: 33 09 00 40 01           a2 = 0x14000
  1407: 33 08                    a1 = 0
  1409: 50 10 38 39 18           ra = 56, jump @466
      :                          @100 [@dyn 28]
  1414: 82 17 48                 a0 = u64 [sp + 0x48]
  1417: 97 77 20                 a0 = a0 << 0x20
  1420: 98 77 20                 a0 = a0 >> 0x20
  1423: 95 19 70                 a2 = sp + 0x70
  1426: 33 0b 00 40 01           a4 = 0x14000
  1431: 82 18 50                 a1 = u64 [sp + 0x50]
  1434: 33 0a                    a3 = 0
  1436: 0a 06                    ecalli 6 // 'historical_lookup'
  1438: 01                       fallthrough
      :                          @101
  1439: 95 78 01                 a1 = a0 + 0x1
  1442: 53 18 04 78 fe           jump @76 if a1 <u 4
      :                          @102
  1447: 95 78 fd                 a1 = a0 + 0xfffffffffffffffd
  1450: 53 18 03 70 fe           jump @76 if a1 <u 3
      :                          @103
  1455: 84 78 fe                 a1 = a0 & 0xfffffffffffffffe
  1458: 51 18 06 68 fe           jump @76 if a1 == 6
      :                          @104
  1463: 95 78 f8                 a1 = a0 + 0xfffffffffffffff8
  1466: 53 18 03 60 fe           jump @76 if a1 <u 3
      :                          @105
  1471: 7c 18 72                 a1 = u8 [sp + 0x72]
  1474: 7c 19 71                 a2 = u8 [sp + 0x71]
  1477: 7c 1a 70                 a3 = u8 [sp + 0x70]
  1480: 97 88 10                 a1 = a1 << 0x10
  1483: 97 99 08                 a2 = a2 << 0x8
  1486: d4 98 08                 a1 = a1 | a2
  1489: d4 a8 08                 a1 = a1 | a3
  1492: 95 79 f5                 a2 = a0 + 0xfffffffffffffff5
  1495: ac 89 43 fe              jump @76 if a2 <u a1
      :                          @106
  1499: 7c 17 75                 a0 = u8 [sp + 0x75]
  1502: 7c 1a 74                 a3 = u8 [sp + 0x74]
  1505: 7c 1b 73                 a4 = u8 [sp + 0x73]
  1508: 97 77 10                 a0 = a0 << 0x10
  1511: 97 aa 08                 a3 = a3 << 0x8
  1514: d4 a7 07                 a0 = a0 | a3
  1517: d4 b7 07                 a0 = a0 | a4
  1520: c9 89 09                 a2 = a2 - a1
  1523: ac 79 27 fe              jump @76 if a2 <u a0
      :                          @107
  1527: c9 79 06                 s1 = a2 - a0
  1530: 53 16 04 20 fe           jump @76 if s1 <u 4
      :                          @108
  1535: 95 12 7b                 t0 = sp + 0x7b
  1538: c8 28 03                 t1 = a1 + t0
  1541: c8 37 09                 a2 = a0 + t1
  1544: 7c 9c 03                 a5 = u8 [a2 + 0x3]
  1547: 7c 95 02                 s0 = u8 [a2 + 0x2]
  1550: 7c 9b                    a4 = u8 [a2]
  1552: 7c 9a 01                 a3 = u8 [a2 + 0x1]
  1555: 97 cc 10                 a5 = a5 << 0x10
  1558: 97 55 08                 s0 = s0 << 0x8
  1561: d4 5c 0c                 a5 = a5 | s0
  1564: d4 ca 0a                 a3 = a3 | a5
  1567: 97 aa 08                 a3 = a3 << 0x8
  1570: d4 ba 0c                 a5 = a3 | a4
  1573: 95 66 fc                 s1 = s1 + 0xfffffffffffffffc
  1576: ac c6 f2 fd              jump @76 if s1 <u a5
      :                          @109
  1580: 7c 1a 77                 a3 = u8 [sp + 0x77]
  1583: 7c 1b 76                 a4 = u8 [sp + 0x76]
  1586: 97 aa 08                 a3 = a3 << 0x8
  1589: 7c 16 7a                 s1 = u8 [sp + 0x7a]
  1592: 7c 15 79                 s0 = u8 [sp + 0x79]
  1595: d4 ba 0a                 a3 = a3 | a4
  1598: 7c 1b 78                 a4 = u8 [sp + 0x78]
  1601: 97 66 10                 s1 = s1 << 0x10
  1604: 97 55 08                 s0 = s0 << 0x8
  1607: d4 65 05                 s0 = s0 | s1
  1610: d4 5b 0b                 a4 = a4 | s0
  1613: 33 04 70 40 01           t2 = 0x14070
  1618: c8 41 05                 s0 = sp + t2
  1621: 7b 5a                    u64 [s0] = a3
  1623: 7b 5b 08                 u64 [s0 + 0x8] = a4
  1626: 7b 52 10                 u64 [s0 + 0x10] = t0
  1629: 7b 58 18                 u64 [s0 + 0x18] = a1
  1632: 7b 53 20                 u64 [s0 + 0x20] = t1
  1635: 7b 57 28                 u64 [s0 + 0x28] = a0
  1638: 95 99 04                 a2 = a2 + 0x4
  1641: 7b 59 30                 u64 [s0 + 0x30] = a2
  1644: 49 11 50 ff ff ef        u64 [sp + 80] = 0xffffffffffefffff
  1650: 7b 5c 38                 u64 [s0 + 0x38] = a5
  1653: 7b 55 48                 u64 [s0 + 0x48] = s0
  1656: 95 17 78 40 01           a0 = sp + 0x14078
  1661: 7b 57 58                 u64 [s0 + 0x58] = a0
  1664: 95 17 80 40 01           a0 = sp + 0x14080
  1669: 7b 57 68                 u64 [s0 + 0x68] = a0
  1672: 95 17 88 40 01           a0 = sp + 0x14088
  1677: 7b 57 78                 u64 [s0 + 0x78] = a0
  1680: 95 17 90 40 01           a0 = sp + 0x14090
  1685: 7b 57 88 00              u64 [s0 + 0x88] = a0
  1689: 95 17 98 40 01           a0 = sp + 0x14098
  1694: 7b 57 98 00              u64 [s0 + 0x98] = a0
  1698: 95 17 a0 40 01           a0 = sp + 0x140a0
  1703: 7b 57 a8 00              u64 [s0 + 0xa8] = a0
  1707: 95 17 a8 40 01           a0 = sp + 0x140a8
  1712: 7b 57 b8 00              u64 [s0 + 0xb8] = a0
  1716: 33 07 88 00 01           a0 = 0x10088
  1721: 95 16 c0 50 01           s1 = sp + 0x150c0
  1726: 7b 67 68 01              u64 [s1 + 0x168] = a0
  1730: 95 17 b8 40 01           a0 = sp + 0x140b8
  1735: 7b 67 78 01              u64 [s1 + 0x178] = a0
  1739: 49 26 70 01 08           u64 [s1 + 368] = 0x8
  1744: 49 26 80 01 08           u64 [s1 + 384] = 0x8
  1749: 33 07 0a                 a0 = 0xa
  1752: 7b 57 50                 u64 [s0 + 0x50] = a0
  1755: 7b 57 60                 u64 [s0 + 0x60] = a0
  1758: 7b 57 70                 u64 [s0 + 0x70] = a0
  1761: 7b 57 80 00              u64 [s0 + 0x80] = a0
  1765: 7b 57 90 00              u64 [s0 + 0x90] = a0
  1769: 7b 57 a0 00              u64 [s0 + 0xa0] = a0
  1773: 7b 57 b0 00              u64 [s0 + 0xb0] = a0
  1777: 7b 17 48                 u64 [sp + 0x48] = a0
  1780: 7b 57 c0 00              u64 [s0 + 0xc0] = a0
  1784: 49 26 88 01              u64 [s1 + 392] = 0
  1788: 95 17 50 51 01           a0 = sp + 0x15150
  1793: 95 18 28 52 01           a1 = sp + 0x15228
  1798: 50 10 3a 88 13           ra = 58, jump @398
      :                          @110 [@dyn 29]
  1803: 82 65 98 00              s0 = u64 [s1 + 0x98]
  1807: 82 6b a0 00              a4 = u64 [s1 + 0xa0]
  1811: 82 66 90 00              s1 = u64 [s1 + 0x90]
  1815: 33 07 02                 a0 = 0x2
  1818: 33 08                    a1 = 0
  1820: 33 09                    a2 = 0
  1822: 64 5a                    a3 = s0
  1824: 33 00 3c                 ra = 0x3c
  1827: 0a 64                    ecalli 100 // 'log'
  1829: 01                       fallthrough
      :                          @111 [@dyn 30]
  1830: 82 17 50                 a0 = u64 [sp + 0x50]
  1833: c8 67 07                 a0 = a0 + s1
  1836: 53 37 00 00 f0 25        jump @117 if a0 <u 4293918720
      :                          @112
  1842: 33 07 40 10 03           a0 = 0x31040
  1847: 95 77 00 00 10           a0 = a0 + 0x100000
  1852: 01                       fallthrough
      :                          @113
  1853: 82 78                    a1 = u64 [a0]
  1855: c9 87 09                 a2 = a0 - a1
  1858: ab 59 0f                 jump @117 if a2 != s0
      :                          @114
  1861: c9 68 09                 a2 = a1 - s1
  1864: 01                       fallthrough
      :                          @115
  1865: 82 7a                    a3 = u64 [a0]
  1867: ab 8a f2                 jump @113 if a3 != a1
      :                          @116
  1870: 7b 79                    u64 [a0] = a2
  1872: 01                       fallthrough
      :                          @117
  1873: 95 15 70 40 01           s0 = sp + 0x14070
  1878: 82 57 30                 a0 = u64 [s0 + 0x30]
  1881: 82 58 38                 a1 = u64 [s0 + 0x38]
  1884: 33 09                    a2 = 0
  1886: 0a 08                    ecalli 8 // 'machine'
  1888: 7b 57 40                 u64 [s0 + 0x40] = a0
  1891: 95 17 b0 40 01           a0 = sp + 0x140b0
  1896: 95 16 c0 50 01           s1 = sp + 0x150c0
  1901: 7b 67 90 00              u64 [s1 + 0x90] = a0
  1905: 82 17 48                 a0 = u64 [sp + 0x48]
  1908: 7b 67 98 00              u64 [s1 + 0x98] = a0
  1912: 33 07 28 01 01           a0 = 0x10128
  1917: 7b 57 48                 u64 [s0 + 0x48] = a0
  1920: 95 17 50 51 01           a0 = sp + 0x15150
  1925: 7b 57 58                 u64 [s0 + 0x58] = a0
  1928: 49 15 50 01              u64 [s0 + 80] = 0x1
  1932: 49 15 60 01              u64 [s0 + 96] = 0x1
  1936: 14 07 ff ff ff ff 00 00 00 00 a0 = 0xffffffff
  1946: 7b 17 48                 u64 [sp + 0x48] = a0
  1949: 49 15 68                 u64 [s0 + 104] = 0
  1952: 95 17 28 52 01           a0 = sp + 0x15228
  1957: 95 18 b8 40 01           a1 = sp + 0x140b8
  1962: 50 10 3e e4 12           ra = 62, jump @398
      :                          @118 [@dyn 31]
  1967: 82 65 70 01              s0 = u64 [s1 + 0x170]
  1971: 82 6b 78 01              a4 = u64 [s1 + 0x178]
  1975: 82 66 68 01              s1 = u64 [s1 + 0x168]
  1979: 33 07 02                 a0 = 0x2
  1982: 33 08                    a1 = 0
  1984: 33 09                    a2 = 0
  1986: 64 5a                    a3 = s0
  1988: 33 00 40                 ra = 0x40
  1991: 0a 64                    ecalli 100 // 'log'
  1993: 01                       fallthrough
      :                          @119 [@dyn 32]
  1994: 82 17 50                 a0 = u64 [sp + 0x50]
  1997: c8 67 07                 a0 = a0 + s1
  2000: 53 37 00 00 f0 25        jump @125 if a0 <u 4293918720
      :                          @120
  2006: 33 07 40 10 03           a0 = 0x31040
  2011: 95 77 00 00 10           a0 = a0 + 0x100000
  2016: 01                       fallthrough
      :                          @121
  2017: 82 78                    a1 = u64 [a0]
  2019: c9 87 09                 a2 = a0 - a1
  2022: ab 59 0f                 jump @125 if a2 != s0
      :                          @122
  2025: c9 68 09                 a2 = a1 - s1
  2028: 01                       fallthrough
      :                          @123
  2029: 82 7a                    a3 = u64 [a0]
  2031: ab 8a f2                 jump @121 if a3 != a1
      :                          @124
  2034: 7b 79                    u64 [a0] = a2
  2036: 01                       fallthrough
      :                          @125
  2037: 33 05 ff 0f              s0 = 0xfff
  2041: 95 18 70 40 01           a1 = sp + 0x14070
  2046: 82 87                    a0 = u64 [a1]
  2048: 7b 17 30                 u64 [sp + 0x30] = a0
  2051: 82 87 08                 a0 = u64 [a1 + 0x8]
  2054: 7b 17 28                 u64 [sp + 0x28] = a0
  2057: 82 87 10                 a0 = u64 [a1 + 0x10]
  2060: 7b 17 20                 u64 [sp + 0x20] = a0
  2063: 82 89 18                 a2 = u64 [a1 + 0x18]
  2066: 82 87 20                 a0 = u64 [a1 + 0x20]
  2069: 7b 17 18                 u64 [sp + 0x18] = a0
  2072: 82 87 40                 a0 = u64 [a1 + 0x40]
  2075: 82 88 28                 a1 = u64 [a1 + 0x28]
  2078: 7b 18 38                 u64 [sp + 0x38] = a1
  2081: 7b 19 40                 u64 [sp + 0x40] = a2
  2084: c8 59 09                 a2 = a2 + s0
  2087: 98 99 0c                 a2 = a2 >> 0xc
  2090: 82 16 48                 s1 = u64 [sp + 0x48]
  2093: d2 76 06                 s1 = s1 & a0
  2096: 33 08 10                 a1 = 0x10
  2099: 33 0a 04                 a3 = 0x4
  2102: 64 67                    a0 = s1
  2104: 0a 0b                    ecalli 11 // 'pages'
  2106: 01                       fallthrough
      :                          @126
  2107: 51 07 47                 jump @135 if a0 == 0
      :                          @127
  2110: 33 0a 20 07 01           a3 = 0x10720
  2115: 33 07 02                 a0 = 0x2
  2118: 33 0b 3e                 a4 = 0x3e
  2121: 33 08                    a1 = 0
  2123: 33 09                    a2 = 0
  2125: 0a 64                    ecalli 100 // 'log'
  2127: 28 12 01                 jump @148
      :                          @128
  2130: 33 07 40 10 03           a0 = 0x31040
  2135: 95 7c 00 00 10           a5 = a0 + 0x100000
  2140: 33 07 11 00 03           a0 = 0x30011
  2145: 82 12 48                 t0 = u64 [sp + 0x48]
  2148: 01                       fallthrough
      :                          @129
  2149: 82 c8                    a1 = u64 [a5]
  2151: c9 8c 09                 a2 = a5 - a1
  2154: ab 29 b8 fb              jump @77 if a2 != t0
      :                          @130
  2158: c9 58 09                 a2 = a1 - s0
  2161: 01                       fallthrough
      :                          @131
  2162: 82 ca                    a3 = u64 [a5]
  2164: ab 8a f1                 jump @129 if a3 != a1
      :                          @132
  2167: 7b c9                    u64 [a5] = a2
  2169: 33 0b                    a4 = 0
  2171: 01                       fallthrough
      :                          @133
  2172: ab 8a e9                 jump @129 if a3 != a1
      :                          @134
  2175: 28 a3 fb                 jump @77
      :                          @135
  2178: 82 17 38                 a0 = u64 [sp + 0x38]
  2181: 95 77 ff 0f              a0 = a0 + 0xfff
  2185: 98 77 0c                 a0 = a0 >> 0xc
  2188: 82 19 30                 a2 = u64 [sp + 0x30]
  2191: c8 79 09                 a2 = a2 + a0
  2194: 82 18 40                 a1 = u64 [sp + 0x40]
  2197: 95 87 ff ff 00           a0 = a1 + 0xffff
  2202: 84 77 00 00 ff           a0 = a0 & 0xffffffffffff0000
  2207: 95 77 00 00 02           a0 = a0 + 0x20000
  2212: 7b 17 48                 u64 [sp + 0x48] = a0
  2215: 98 78 0c                 a1 = a0 >> 0xc
  2218: 33 0a 04                 a3 = 0x4
  2221: 64 67                    a0 = s1
  2223: 0a 0b                    ecalli 11 // 'pages'
  2225: 01                       fallthrough
      :                          @136
  2226: 51 07 17                 jump @138 if a0 == 0
      :                          @137
  2229: 33 0a e2 06 01           a3 = 0x106e2
  2234: 33 07 02                 a0 = 0x2
  2237: 33 0b 3e                 a4 = 0x3e
  2240: 33 08                    a1 = 0
  2242: 33 09                    a2 = 0
  2244: 0a 64                    ecalli 100 // 'log'
  2246: 28 9b 00                 jump @148
      :                          @138
  2249: 82 17 28                 a0 = u64 [sp + 0x28]
  2252: 95 75 ff 0f              s0 = a0 + 0xfff
  2256: 98 59 0c                 a2 = s0 >> 0xc
  2259: 84 57 00 f0              a0 = s0 & 0xfffffffffffff000
  2263: 14 08 00 00 fe fe 00 00 00 00 a1 = 0xfefe0000
  2273: c9 78 08                 a1 = a1 - a0
  2276: 98 88 0c                 a1 = a1 >> 0xc
  2279: 33 0a 04                 a3 = 0x4
  2282: 64 67                    a0 = s1
  2284: 0a 0b                    ecalli 11 // 'pages'
  2286: 01                       fallthrough
      :                          @139
  2287: 51 07 16                 jump @141 if a0 == 0
      :                          @140
  2290: 33 0a a6 06 01           a3 = 0x106a6
  2295: 33 07 02                 a0 = 0x2
  2298: 33 0b 3c                 a4 = 0x3c
  2301: 33 08                    a1 = 0
  2303: 33 09                    a2 = 0
  2305: 0a 64                    ecalli 100 // 'log'
  2307: 28 5e                    jump @148
      :                          @141
  2309: 33 09 00 00 01           a2 = 0x10000
  2314: 64 67                    a0 = s1
  2316: 82 18 20                 a1 = u64 [sp + 0x20]
  2319: 82 1a 40                 a3 = u64 [sp + 0x40]
  2322: 0a 0a                    ecalli 10 // 'poke'
  2324: 01                       fallthrough
      :                          @142
  2325: 51 07 16                 jump @144 if a0 == 0
      :                          @143
  2328: 33 0a 68 06 01           a3 = 0x10668
  2333: 33 07 02                 a0 = 0x2
  2336: 33 0b 3e                 a4 = 0x3e
  2339: 33 08                    a1 = 0
  2341: 33 09                    a2 = 0
  2343: 0a 64                    ecalli 100 // 'log'
  2345: 28 38                    jump @148
      :                          @144
  2347: 64 67                    a0 = s1
  2349: 82 18 18                 a1 = u64 [sp + 0x18]
  2352: 82 19 48                 a2 = u64 [sp + 0x48]
  2355: 82 1a 38                 a3 = u64 [sp + 0x38]
  2358: 0a 0a                    ecalli 10 // 'poke'
  2360: 01                       fallthrough
      :                          @145
  2361: 51 07 16                 jump @147 if a0 == 0
      :                          @146
  2364: 33 0a 2a 06 01           a3 = 0x1062a
  2369: 33 07 02                 a0 = 0x2
  2372: 33 0b 3e                 a4 = 0x3e
  2375: 33 08                    a1 = 0
  2377: 33 09                    a2 = 0
  2379: 0a 64                    ecalli 100 // 'log'
  2381: 28 14                    jump @148
      :                          @147
  2383: 33 0a fc 05 01           a3 = 0x105fc
  2388: 33 07 02                 a0 = 0x2
  2391: 33 0b 2e                 a4 = 0x2e
  2394: 33 08                    a1 = 0
  2396: 33 09                    a2 = 0
  2398: 0a 64                    ecalli 100 // 'log'
  2400: 01                       fallthrough
      :                          @148
  2401: 33 09 08 10              a2 = 0x1008
  2405: 95 17 b8 40 01           a0 = sp + 0x140b8
  2410: 33 08                    a1 = 0
  2412: 7b 19 38                 u64 [sp + 0x38] = a2
  2415: 50 10 42 4b 14           ra = 66, jump @466
      :                          @149 [@dyn 33]
  2420: 95 17 c0 50 01           a0 = sp + 0x150c0
  2425: 49 07                    u64 [a0 + 0] = 0
  2427: 49 17 18                 u64 [a0 + 24] = 0
  2430: 33 05 40 10 03           s0 = 0x31040
  2435: 33 0b 00 00 10           a4 = 0x100000
  2440: 7b 15 30                 u64 [sp + 0x30] = s0
  2443: c8 b5 05                 s0 = s0 + a4
  2446: 33 07 38 01 01           a0 = 0x10138
  2451: 7b 17 28                 u64 [sp + 0x28] = a0
  2454: 33 07 0a                 a0 = 0xa
  2457: 7b 17 48                 u64 [sp + 0x48] = a0
  2460: 33 07 78 01 01           a0 = 0x10178
  2465: 7b 17 20                 u64 [sp + 0x20] = a0
  2468: 33 07 b0 01 01           a0 = 0x101b0
  2473: 7b 17 18                 u64 [sp + 0x18] = a0
  2476: 33 07 00 00 01           a0 = 0x10000
  2481: 7b 17 10                 u64 [sp + 0x10] = a0
  2484: 33 07 08 02 01           a0 = 0x10208
  2489: 7b 17 08                 u64 [sp + 0x8] = a0
  2492: 28 14                    jump @151
      :                          @150
  2494: 95 18 c0 50 01           a1 = sp + 0x150c0
  2499: 82 87                    a0 = u64 [a1]
  2501: 95 77 01                 a0 = a0 + 0x1
  2504: 7b 87                    u64 [a1] = a0
  2506: 33 0b 00 00 10           a4 = 0x100000
  2511: 01                       fallthrough
      :                          @151
  2512: 82 58                    a1 = u64 [s0]
  2514: 95 87 12                 a0 = a1 + 0x12
  2517: ac 87 ba 0b              jump @275 if a0 <u a1
      :                          @152
  2521: 95 79 01                 a2 = a0 + 0x1
  2524: 88 9a 01                 a3 = a2 <u 0x1
  2527: d8 9b 09                 a2 = a4 <u a2
  2530: d4 a9 09                 a2 = a2 | a3
  2533: 52 09 aa 0b              jump @275 if a2 != 0
      :                          @153
  2537: 82 59                    a2 = u64 [s0]
  2539: ab 89 e5                 jump @151 if a2 != a1
      :                          @154
  2542: 7b 57                    u64 [s0] = a0
  2544: 82 16 30                 s1 = u64 [sp + 0x30]
  2547: c9 76 06                 s1 = s1 - a0
  2550: c8 b6 06                 s1 = s1 + a4
  2553: 33 09 12                 a2 = 0x12
  2556: 64 67                    a0 = s1
  2558: 82 18 28                 a1 = u64 [sp + 0x28]
  2561: 50 10 44 07 13           ra = 68, jump @448
      :                          @155 [@dyn 34]
  2566: 33 07 02                 a0 = 0x2
  2569: 33 0b 12                 a4 = 0x12
  2572: 33 08                    a1 = 0
  2574: 33 09                    a2 = 0
  2576: 64 6a                    a3 = s1
  2578: 33 00 46                 ra = 0x46
  2581: 0a 64                    ecalli 100 // 'log'
  2583: 01                       fallthrough
      :                          @156 [@dyn 35]
  2584: 82 57                    a0 = u64 [s0]
  2586: c9 75 08                 a1 = s0 - a0
  2589: ab 68 0f                 jump @160 if a1 != s1
      :                          @157
  2592: 95 78 ee                 a1 = a0 + 0xffffffffffffffee
  2595: 01                       fallthrough
      :                          @158
  2596: 82 59                    a2 = u64 [s0]
  2598: ab 79 f2                 jump @156 if a2 != a0
      :                          @159
  2601: 7b 58                    u64 [s0] = a1
  2603: 01                       fallthrough
      :                          @160
  2604: 95 17 c0 50 01           a0 = sp + 0x150c0
  2609: 82 7b                    a4 = u64 [a0]
  2611: 95 17 b8 40 01           a0 = sp + 0x140b8
  2616: 33 0a 06                 a3 = 0x6
  2619: 33 08                    a1 = 0
  2621: 82 19 38                 a2 = u64 [sp + 0x38]
  2624: 33 0c                    a5 = 0
  2626: 0a 01                    ecalli 1 // 'fetch'
  2628: 01                       fallthrough
      :                          @161
  2629: 95 19 c0 50 01           a2 = sp + 0x150c0
  2634: 7b 97 20                 u64 [a2 + 0x20] = a0
  2637: 51 17 ff 45 02           jump @187 if a0 == 4294967295
      :                          @162
  2642: 7b 99 90 00              u64 [a2 + 0x90] = a2
  2646: 82 17 48                 a0 = u64 [sp + 0x48]
  2649: 7b 97 98 00              u64 [a2 + 0x98] = a0
  2653: 95 18 e0 50 01           a1 = sp + 0x150e0
  2658: 7b 98 a0 00              u64 [a2 + 0xa0] = a1
  2662: 7b 97 a8 00              u64 [a2 + 0xa8] = a0
  2666: 82 17 20                 a0 = u64 [sp + 0x20]
  2669: 7b 97 68 01              u64 [a2 + 0x168] = a0
  2673: 49 29 70 01 02           u64 [a2 + 368] = 0x2
  2678: 49 29 88 01              u64 [a2 + 392] = 0
  2682: 95 18 50 51 01           a1 = sp + 0x15150
  2687: 7b 98 78 01              u64 [a2 + 0x178] = a1
  2691: 49 29 80 01 02           u64 [a2 + 384] = 0x2
  2696: 95 17 e8 50 01           a0 = sp + 0x150e8
  2701: 95 18 28 52 01           a1 = sp + 0x15228
  2706: 50 10 48 fc 0f           ra = 72, jump @398
      :                          @163 [@dyn 36]
  2711: 95 17 c0 50 01           a0 = sp + 0x150c0
  2716: 82 76 30                 s1 = u64 [a0 + 0x30]
  2719: 82 7b 38                 a4 = u64 [a0 + 0x38]
  2722: 82 77 28                 a0 = u64 [a0 + 0x28]
  2725: 7b 17 40                 u64 [sp + 0x40] = a0
  2728: 33 07 02                 a0 = 0x2
  2731: 33 08                    a1 = 0
  2733: 33 09                    a2 = 0
  2735: 64 6a                    a3 = s1
  2737: 33 00 4a                 ra = 0x4a
  2740: 0a 64                    ecalli 100 // 'log'
  2742: 01                       fallthrough
      :                          @164 [@dyn 37]
  2743: 82 1b 40                 a4 = u64 [sp + 0x40]
  2746: 82 17 50                 a0 = u64 [sp + 0x50]
  2749: c8 b7 07                 a0 = a0 + a4
  2752: 53 37 00 00 f0 1a        jump @169 if a0 <u 4293918720
      :                          @165
  2758: 82 57                    a0 = u64 [s0]
  2760: c9 75 08                 a1 = s0 - a0
  2763: ab 68 0f                 jump @169 if a1 != s1
      :                          @166
  2766: c9 b7 08                 a1 = a0 - a4
  2769: 01                       fallthrough
      :                          @167
  2770: 82 59                    a2 = u64 [s0]
  2772: ab 79 f2                 jump @165 if a2 != a0
      :                          @168
  2775: 7b 58                    u64 [s0] = a1
  2777: 01                       fallthrough
      :                          @169
  2778: 95 18 70 40 01           a1 = sp + 0x14070
  2783: 80 87 48                 a0 = u32 [a1 + 0x48]
  2786: 80 88 4c                 a1 = u32 [a1 + 0x4c]
  2789: 95 1a c0 50 01           a3 = sp + 0x150c0
  2794: 82 a9                    a2 = u64 [a3]
  2796: 7b a7 08                 u64 [a3 + 0x8] = a0
  2799: 7b a8 10                 u64 [a3 + 0x10] = a1
  2802: 52 09 0a                 jump @171 if a2 != 0
      :                          @170
  2805: 97 89 0c                 a2 = a1 << 0xc
  2808: 7b a9 18                 u64 [a3 + 0x18] = a2
  2811: 01                       fallthrough
      :                          @171
  2812: 33 09 01                 a2 = 0x1
  2815: 33 0a 04                 a3 = 0x4
  2818: 0a 0b                    ecalli 11 // 'pages'
  2820: 95 19 c0 50 01           a2 = sp + 0x150c0
  2825: 7b 97 00 01              u64 [a2 + 0x100] = a0
  2829: 95 17 c8 50 01           a0 = sp + 0x150c8
  2834: 7b 97 68 01              u64 [a2 + 0x168] = a0
  2838: 82 17 48                 a0 = u64 [sp + 0x48]
  2841: 7b 97 70 01              u64 [a2 + 0x170] = a0
  2845: 95 18 d0 50 01           a1 = sp + 0x150d0
  2850: 7b 98 78 01              u64 [a2 + 0x178] = a1
  2854: 7b 97 80 01              u64 [a2 + 0x180] = a0
  2858: 95 18 c0 51 01           a1 = sp + 0x151c0
  2863: 7b 98 88 01              u64 [a2 + 0x188] = a1
  2867: 7b 97 90 01              u64 [a2 + 0x190] = a0
  2871: 82 17 18                 a0 = u64 [sp + 0x18]
  2874: 7b 97 90 00              u64 [a2 + 0x90] = a0
  2878: 49 29 98 00 03           u64 [a2 + 152] = 0x3
  2883: 49 29 b0 00              u64 [a2 + 176] = 0
  2887: 95 17 28 52 01           a0 = sp + 0x15228
  2892: 7b 97 a0 00              u64 [a2 + 0xa0] = a0
  2896: 49 29 a8 00 03           u64 [a2 + 168] = 0x3
  2901: 95 17 e8 50 01           a0 = sp + 0x150e8
  2906: 95 18 50 51 01           a1 = sp + 0x15150
  2911: 50 10 4c 2f 0f           ra = 76, jump @398
      :                          @172 [@dyn 38]
  2916: 95 17 c0 50 01           a0 = sp + 0x150c0
  2921: 82 76 30                 s1 = u64 [a0 + 0x30]
  2924: 82 7b 38                 a4 = u64 [a0 + 0x38]
  2927: 82 77 28                 a0 = u64 [a0 + 0x28]
  2930: 7b 17 40                 u64 [sp + 0x40] = a0
  2933: 33 07 02                 a0 = 0x2
  2936: 33 08                    a1 = 0
  2938: 33 09                    a2 = 0
  2940: 64 6a                    a3 = s1
  2942: 33 00 4e                 ra = 0x4e
  2945: 0a 64                    ecalli 100 // 'log'
  2947: 01                       fallthrough
      :                          @173 [@dyn 39]
  2948: 82 1b 40                 a4 = u64 [sp + 0x40]
  2951: 82 17 50                 a0 = u64 [sp + 0x50]
  2954: c8 b7 07                 a0 = a0 + a4
  2957: 53 37 00 00 f0 1a        jump @178 if a0 <u 4293918720
      :                          @174
  2963: 82 57                    a0 = u64 [s0]
  2965: c9 75 08                 a1 = s0 - a0
  2968: ab 68 0f                 jump @178 if a1 != s1
      :                          @175
  2971: c9 b7 08                 a1 = a0 - a4
  2974: 01                       fallthrough
      :                          @176
  2975: 82 59                    a2 = u64 [s0]
  2977: ab 79 f2                 jump @174 if a2 != a0
      :                          @177
  2980: 7b 58                    u64 [s0] = a1
  2982: 01                       fallthrough
      :                          @178
  2983: 95 1a c0 50 01           a3 = sp + 0x150c0
  2988: 82 a9 10                 a2 = u64 [a3 + 0x10]
  2991: 82 a7 08                 a0 = u64 [a3 + 0x8]
  2994: 95 18 b8 40 01           a1 = sp + 0x140b8
  2999: 7b a8 08 01              u64 [a3 + 0x108] = a1
  3003: 97 99 0c                 a2 = a2 << 0xc
  3006: 7b a9 10 01              u64 [a3 + 0x110] = a2
  3010: 33 0a 00 10              a3 = 0x1000
  3014: 95 18 c0 40 01           a1 = sp + 0x140c0
  3019: 0a 0a                    ecalli 10 // 'poke'
  3021: 95 19 c0 50 01           a2 = sp + 0x150c0
  3026: 7b 97 28 01              u64 [a2 + 0x128] = a0
  3030: 95 17 c8 50 01           a0 = sp + 0x150c8
  3035: 7b 97 68 01              u64 [a2 + 0x168] = a0
  3039: 82 17 48                 a0 = u64 [sp + 0x48]
  3042: 7b 97 70 01              u64 [a2 + 0x170] = a0
  3046: 95 18 c8 51 01           a1 = sp + 0x151c8
  3051: 7b 98 78 01              u64 [a2 + 0x178] = a1
  3055: 7b 97 80 01              u64 [a2 + 0x180] = a0
  3059: 95 18 d0 51 01           a1 = sp + 0x151d0
  3064: 7b 98 88 01              u64 [a2 + 0x188] = a1
  3068: 7b 97 90 01              u64 [a2 + 0x190] = a0
  3072: 82 18 10                 a1 = u64 [sp + 0x10]
  3075: 7b 98 98 01              u64 [a2 + 0x198] = a1
  3079: 7b 97 a0 01              u64 [a2 + 0x1a0] = a0
  3083: 95 18 e8 51 01           a1 = sp + 0x151e8
  3088: 7b 98 a8 01              u64 [a2 + 0x1a8] = a1
  3092: 7b 97 b0 01              u64 [a2 + 0x1b0] = a0
  3096: 82 17 08                 a0 = u64 [sp + 0x8]
  3099: 7b 97 90 00              u64 [a2 + 0x90] = a0
  3103: 49 29 98 00 05           u64 [a2 + 152] = 0x5
  3108: 49 29 b0 00              u64 [a2 + 176] = 0
  3112: 95 17 28 52 01           a0 = sp + 0x15228
  3117: 7b 97 a0 00              u64 [a2 + 0xa0] = a0
  3121: 49 29 a8 00 05           u64 [a2 + 168] = 0x5
  3126: 95 17 e8 50 01           a0 = sp + 0x150e8
  3131: 95 18 50 51 01           a1 = sp + 0x15150
  3136: 50 10 50 4e 0e           ra = 80, jump @398
      :                          @179 [@dyn 40]
  3141: 95 17 c0 50 01           a0 = sp + 0x150c0
  3146: 82 76 30                 s1 = u64 [a0 + 0x30]
  3149: 82 7b 38                 a4 = u64 [a0 + 0x38]
  3152: 82 77 28                 a0 = u64 [a0 + 0x28]
  3155: 7b 17 40                 u64 [sp + 0x40] = a0
  3158: 33 07 02                 a0 = 0x2
  3161: 33 08                    a1 = 0
  3163: 33 09                    a2 = 0
  3165: 64 6a                    a3 = s1
  3167: 33 00 52                 ra = 0x52
  3170: 0a 64                    ecalli 100 // 'log'
  3172: 01                       fallthrough
      :                          @180 [@dyn 41]
  3173: 82 1b 40                 a4 = u64 [sp + 0x40]
  3176: 82 17 50                 a0 = u64 [sp + 0x50]
  3179: c8 b7 07                 a0 = a0 + a4
  3182: 53 37 00 00 f0 50 fd     jump @150 if a0 <u 4293918720
      :                          @181
  3189: 82 57                    a0 = u64 [s0]
  3191: c9 75 08                 a1 = s0 - a0
  3194: ab 68 44 fd              jump @150 if a1 != s1
      :                          @182
  3198: c9 b7 08                 a1 = a0 - a4
  3201: 01                       fallthrough
      :                          @183
  3202: 82 59                    a2 = u64 [s0]
  3204: ab 79 f1                 jump @181 if a2 != a0
      :                          @184
  3207: 7b 58                    u64 [s0] = a1
  3209: 33 0a                    a3 = 0
  3211: 01                       fallthrough
      :                          @185
  3212: ab 79 e9                 jump @181 if a2 != a0
      :                          @186
  3215: 28 2f fd                 jump @150
      :                          @187
  3218: 49 19 58                 u64 [a2 + 88] = 0
  3221: 49 19 50                 u64 [a2 + 80] = 0
  3224: 49 19 48                 u64 [a2 + 72] = 0
  3227: 49 19 40                 u64 [a2 + 64] = 0
  3230: 49 19 38                 u64 [a2 + 56] = 0
  3233: 49 19 70                 u64 [a2 + 112] = 0
  3236: 49 19 78                 u64 [a2 + 120] = 0
  3239: 49 29 80 00              u64 [a2 + 128] = 0
  3243: 49 29 88 00              u64 [a2 + 136] = 0
  3247: 14 07 00 00 ff ff 00 00 00 00 a0 = 0xffff0000
  3257: 7b 97 28                 u64 [a2 + 0x28] = a0
  3260: 82 98 18                 a1 = u64 [a2 + 0x18]
  3263: 14 07 00 00 fe fe 00 00 00 00 a0 = 0xfefe0000
  3273: 7b 97 30                 u64 [a2 + 0x30] = a0
  3276: 49 19 68                 u64 [a2 + 104] = 0
  3279: 7b 98 60                 u64 [a2 + 0x60] = a1
  3282: 95 17 d8 50 01           a0 = sp + 0x150d8
  3287: 7b 97 28 01              u64 [a2 + 0x128] = a0
  3291: 33 07 0a                 a0 = 0xa
  3294: 7b 17 48                 u64 [sp + 0x48] = a0
  3297: 7b 97 30 01              u64 [a2 + 0x130] = a0
  3301: 33 07 78 02 01           a0 = 0x10278
  3306: 7b 97 68 01              u64 [a2 + 0x168] = a0
  3310: 49 29 70 01 01           u64 [a2 + 368] = 0x1
  3315: 49 29 88 01              u64 [a2 + 392] = 0
  3319: 95 18 e8 51 01           a1 = sp + 0x151e8
  3324: 7b 98 78 01              u64 [a2 + 0x178] = a1
  3328: 49 29 80 01 01           u64 [a2 + 384] = 0x1
  3333: 95 17 50 51 01           a0 = sp + 0x15150
  3338: 95 18 28 52 01           a1 = sp + 0x15228
  3343: 95 16 c0 50 01           s1 = sp + 0x150c0
  3348: 50 10 54 7a 0d           ra = 84, jump @398
      :                          @188 [@dyn 42]
  3353: 82 65 98 00              s0 = u64 [s1 + 0x98]
  3357: 82 6b a0 00              a4 = u64 [s1 + 0xa0]
  3361: 82 66 90 00              s1 = u64 [s1 + 0x90]
  3365: 33 07 02                 a0 = 0x2
  3368: 33 08                    a1 = 0
  3370: 33 09                    a2 = 0
  3372: 64 5a                    a3 = s0
  3374: 33 00 56                 ra = 0x56
  3377: 0a 64                    ecalli 100 // 'log'
  3379: 01                       fallthrough
      :                          @189 [@dyn 43]
  3380: 82 17 50                 a0 = u64 [sp + 0x50]
  3383: c8 67 07                 a0 = a0 + s1
  3386: 53 37 00 00 f0 27        jump @195 if a0 <u 4293918720
      :                          @190
  3392: 33 07 40 10 03           a0 = 0x31040
  3397: 95 77 00 00 10           a0 = a0 + 0x100000
  3402: 01                       fallthrough
      :                          @191
  3403: 82 78                    a1 = u64 [a0]
  3405: c9 87 09                 a2 = a0 - a1
  3408: ab 59 11                 jump @195 if a2 != s0
      :                          @192
  3411: c9 68 09                 a2 = a1 - s1
  3414: 01                       fallthrough
      :                          @193
  3415: 82 7a                    a3 = u64 [a0]
  3417: ab 8a f2                 jump @191 if a3 != a1
      :                          @194
  3420: 7b 79                    u64 [a0] = a2
  3422: 33 0b                    a4 = 0
  3424: 01                       fallthrough
      :                          @195
  3425: 95 16 c0 50 01           s1 = sp + 0x150c0
  3430: 82 67                    a0 = u64 [s1]
  3432: 97 77 0c                 a0 = a0 << 0xc
  3435: 7b 67 68                 u64 [s1 + 0x68] = a0
  3438: 7b 66 28 01              u64 [s1 + 0x128] = s1
  3442: 82 17 48                 a0 = u64 [sp + 0x48]
  3445: 7b 67 30 01              u64 [s1 + 0x130] = a0
  3449: 33 07 a0 02 01           a0 = 0x102a0
  3454: 7b 67 68 01              u64 [s1 + 0x168] = a0
  3458: 49 26 70 01 01           u64 [s1 + 368] = 0x1
  3463: 49 26 88 01              u64 [s1 + 392] = 0
  3467: 95 18 e8 51 01           a1 = sp + 0x151e8
  3472: 7b 68 78 01              u64 [s1 + 0x178] = a1
  3476: 49 26 80 01 01           u64 [s1 + 384] = 0x1
  3481: 95 17 50 51 01           a0 = sp + 0x15150
  3486: 95 18 28 52 01           a1 = sp + 0x15228
  3491: 50 10 58 eb 0c           ra = 88, jump @398
      :                          @196 [@dyn 44]
  3496: 82 65 98 00              s0 = u64 [s1 + 0x98]
  3500: 82 6b a0 00              a4 = u64 [s1 + 0xa0]
  3504: 82 66 90 00              s1 = u64 [s1 + 0x90]
  3508: 33 07 02                 a0 = 0x2
  3511: 33 08                    a1 = 0
  3513: 33 09                    a2 = 0
  3515: 64 5a                    a3 = s0
  3517: 33 00 5a                 ra = 0x5a
  3520: 0a 64                    ecalli 100 // 'log'
  3522: 01                       fallthrough
      :                          @197 [@dyn 45]
  3523: 82 17 50                 a0 = u64 [sp + 0x50]
  3526: c8 67 07                 a0 = a0 + s1
  3529: 53 37 00 00 f0 27        jump @203 if a0 <u 4293918720
      :                          @198
  3535: 33 07 40 10 03           a0 = 0x31040
  3540: 95 77 00 00 10           a0 = a0 + 0x100000
  3545: 01                       fallthrough
      :                          @199
  3546: 82 78                    a1 = u64 [a0]
  3548: c9 87 09                 a2 = a0 - a1
  3551: ab 59 11                 jump @203 if a2 != s0
      :                          @200
  3554: c9 68 09                 a2 = a1 - s1
  3557: 01                       fallthrough
      :                          @201
  3558: 82 7a                    a3 = u64 [a0]
  3560: ab 8a f2                 jump @199 if a3 != a1
      :                          @202
  3563: 7b 79                    u64 [a0] = a2
  3565: 33 0b                    a4 = 0
  3567: 01                       fallthrough
      :                          @203
  3568: 80 17 64                 a0 = u32 [sp + 0x64]
  3571: 95 16 c0 50 01           s1 = sp + 0x150c0
  3576: 7b 67 70                 u64 [s1 + 0x70] = a0
  3579: 95 17 64                 a0 = sp + 0x64
  3582: 7b 67 28 01              u64 [s1 + 0x128] = a0
  3586: 33 07 06                 a0 = 0x6
  3589: 7b 17 48                 u64 [sp + 0x48] = a0
  3592: 7b 67 30 01              u64 [s1 + 0x130] = a0
  3596: 33 07 c0 02 01           a0 = 0x102c0
  3601: 7b 67 68 01              u64 [s1 + 0x168] = a0
  3605: 49 26 70 01 01           u64 [s1 + 368] = 0x1
  3610: 49 26 88 01              u64 [s1 + 392] = 0
  3614: 95 18 e8 51 01           a1 = sp + 0x151e8
  3619: 7b 68 78 01              u64 [s1 + 0x178] = a1
  3623: 49 26 80 01 01           u64 [s1 + 384] = 0x1
  3628: 95 17 50 51 01           a0 = sp + 0x15150
  3633: 95 18 28 52 01           a1 = sp + 0x15228
  3638: 50 10 5c 58 0c           ra = 92, jump @398
      :                          @204 [@dyn 46]
  3643: 82 65 98 00              s0 = u64 [s1 + 0x98]
  3647: 82 6b a0 00              a4 = u64 [s1 + 0xa0]
  3651: 82 66 90 00              s1 = u64 [s1 + 0x90]
  3655: 33 07 02                 a0 = 0x2
  3658: 33 08                    a1 = 0
  3660: 33 09                    a2 = 0
  3662: 64 5a                    a3 = s0
  3664: 33 00 5e                 ra = 0x5e
  3667: 0a 64                    ecalli 100 // 'log'
  3669: 01                       fallthrough
      :                          @205 [@dyn 47]
  3670: 82 17 50                 a0 = u64 [sp + 0x50]
  3673: c8 67 07                 a0 = a0 + s1
  3676: 53 37 00 00 f0 27        jump @211 if a0 <u 4293918720
      :                          @206
  3682: 33 07 40 10 03           a0 = 0x31040
  3687: 95 77 00 00 10           a0 = a0 + 0x100000
  3692: 01                       fallthrough
      :                          @207
  3693: 82 78                    a1 = u64 [a0]
  3695: c9 87 09                 a2 = a0 - a1
  3698: ab 59 11                 jump @211 if a2 != s0
      :                          @208
  3701: c9 68 09                 a2 = a1 - s1
  3704: 01                       fallthrough
      :                          @209
  3705: 82 7a                    a3 = u64 [a0]
  3707: ab 8a f2                 jump @207 if a3 != a1
      :                          @210
  3710: 7b 79                    u64 [a0] = a2
  3712: 33 0b                    a4 = 0
  3714: 01                       fallthrough
      :                          @211
  3715: 80 17 68                 a0 = u32 [sp + 0x68]
  3718: 95 16 c0 50 01           s1 = sp + 0x150c0
  3723: 7b 67 78                 u64 [s1 + 0x78] = a0
  3726: 95 17 68                 a0 = sp + 0x68
  3729: 7b 67 28 01              u64 [s1 + 0x128] = a0
  3733: 82 17 48                 a0 = u64 [sp + 0x48]
  3736: 7b 67 30 01              u64 [s1 + 0x130] = a0
  3740: 33 07 e8 02 01           a0 = 0x102e8
  3745: 7b 67 68 01              u64 [s1 + 0x168] = a0
  3749: 49 26 70 01 01           u64 [s1 + 368] = 0x1
  3754: 49 26 88 01              u64 [s1 + 392] = 0
  3758: 95 18 e8 51 01           a1 = sp + 0x151e8
  3763: 7b 68 78 01              u64 [s1 + 0x178] = a1
  3767: 49 26 80 01 01           u64 [s1 + 384] = 0x1
  3772: 95 17 50 51 01           a0 = sp + 0x15150
  3777: 95 18 28 52 01           a1 = sp + 0x15228
  3782: 50 10 60 c8 0b           ra = 96, jump @398
      :                          @212 [@dyn 48]
  3787: 82 65 98 00              s0 = u64 [s1 + 0x98]
  3791: 82 6b a0 00              a4 = u64 [s1 + 0xa0]
  3795: 82 66 90 00              s1 = u64 [s1 + 0x90]
  3799: 33 07 02                 a0 = 0x2
  3802: 33 08                    a1 = 0
  3804: 33 09                    a2 = 0
  3806: 64 5a                    a3 = s0
  3808: 33 00 62                 ra = 0x62
  3811: 0a 64                    ecalli 100 // 'log'
  3813: 01                       fallthrough
      :                          @213 [@dyn 49]
  3814: 82 17 50                 a0 = u64 [sp + 0x50]
  3817: c8 67 07                 a0 = a0 + s1
  3820: 53 37 00 00 f0 27        jump @219 if a0 <u 4293918720
      :                          @214
  3826: 33 07 40 10 03           a0 = 0x31040
  3831: 95 77 00 00 10           a0 = a0 + 0x100000
  3836: 01                       fallthrough
      :                          @215
  3837: 82 78                    a1 = u64 [a0]
  3839: c9 87 09                 a2 = a0 - a1
  3842: ab 59 11                 jump @219 if a2 != s0
      :                          @216
  3845: c9 68 09                 a2 = a1 - s1
  3848: 01                       fallthrough
      :                          @217
  3849: 82 7a                    a3 = u64 [a0]
  3851: ab 8a f2                 jump @215 if a3 != a1
      :                          @218
  3854: 7b 79                    u64 [a0] = a2
  3856: 33 0b                    a4 = 0
  3858: 01                       fallthrough
      :                          @219
  3859: 80 17 6c                 a0 = u32 [sp + 0x6c]
  3862: 95 16 c0 50 01           s1 = sp + 0x150c0
  3867: 7b 67 80 00              u64 [s1 + 0x80] = a0
  3871: 95 17 6c                 a0 = sp + 0x6c
  3874: 7b 67 28 01              u64 [s1 + 0x128] = a0
  3878: 33 07 06                 a0 = 0x6
  3881: 7b 67 30 01              u64 [s1 + 0x130] = a0
  3885: 33 07 18 03 01           a0 = 0x10318
  3890: 7b 67 68 01              u64 [s1 + 0x168] = a0
  3894: 49 26 70 01 01           u64 [s1 + 368] = 0x1
  3899: 49 26 88 01              u64 [s1 + 392] = 0
  3903: 95 18 e8 51 01           a1 = sp + 0x151e8
  3908: 7b 68 78 01              u64 [s1 + 0x178] = a1
  3912: 49 26 80 01 01           u64 [s1 + 384] = 0x1
  3917: 95 17 50 51 01           a0 = sp + 0x15150
  3922: 95 18 28 52 01           a1 = sp + 0x15228
  3927: 50 10 64 37 0b           ra = 100, jump @398
      :                          @220 [@dyn 50]
  3932: 82 65 98 00              s0 = u64 [s1 + 0x98]
  3936: 82 6b a0 00              a4 = u64 [s1 + 0xa0]
  3940: 82 66 90 00              s1 = u64 [s1 + 0x90]
  3944: 33 07 02                 a0 = 0x2
  3947: 33 08                    a1 = 0
  3949: 33 09                    a2 = 0
  3951: 64 5a                    a3 = s0
  3953: 33 00 66                 ra = 0x66
  3956: 0a 64                    ecalli 100 // 'log'
  3958: 01                       fallthrough
      :                          @221 [@dyn 51]
  3959: 82 17 50                 a0 = u64 [sp + 0x50]
  3962: c8 67 07                 a0 = a0 + s1
  3965: 53 37 00 00 f0 27        jump @227 if a0 <u 4293918720
      :                          @222
  3971: 33 07 40 10 03           a0 = 0x31040
  3976: 95 77 00 00 10           a0 = a0 + 0x100000
  3981: 01                       fallthrough
      :                          @223
  3982: 82 78                    a1 = u64 [a0]
  3984: c9 87 09                 a2 = a0 - a1
  3987: ab 59 11                 jump @227 if a2 != s0
      :                          @224
  3990: c9 68 09                 a2 = a1 - s1
  3993: 01                       fallthrough
      :                          @225
  3994: 82 7a                    a3 = u64 [a0]
  3996: ab 8a f2                 jump @223 if a3 != a1
      :                          @226
  3999: 7b 79                    u64 [a0] = a2
  4001: 33 0b                    a4 = 0
  4003: 01                       fallthrough
      :                          @227
  4004: 95 17 e8 50 01           a0 = sp + 0x150e8
  4009: 95 16 c0 50 01           s1 = sp + 0x150c0
  4014: 7b 67 28 01              u64 [s1 + 0x128] = a0
  4018: 33 07 0e                 a0 = 0xe
  4021: 7b 67 30 01              u64 [s1 + 0x130] = a0
  4025: 33 07 48 03 01           a0 = 0x10348
  4030: 7b 67 68 01              u64 [s1 + 0x168] = a0
  4034: 49 26 70 01 01           u64 [s1 + 368] = 0x1
  4039: 49 26 88 01              u64 [s1 + 392] = 0
  4043: 95 18 e8 51 01           a1 = sp + 0x151e8
  4048: 7b 68 78 01              u64 [s1 + 0x178] = a1
  4052: 49 26 80 01 01           u64 [s1 + 384] = 0x1
  4057: 95 17 50 51 01           a0 = sp + 0x15150
  4062: 95 18 28 52 01           a1 = sp + 0x15228
  4067: 50 10 68 ab 0a           ra = 104, jump @398
      :                          @228 [@dyn 52]
  4072: 82 65 98 00              s0 = u64 [s1 + 0x98]
  4076: 82 6b a0 00              a4 = u64 [s1 + 0xa0]
  4080: 82 66 90 00              s1 = u64 [s1 + 0x90]
  4084: 33 07 02                 a0 = 0x2
  4087: 33 08                    a1 = 0
  4089: 33 09                    a2 = 0
  4091: 64 5a                    a3 = s0
  4093: 33 00 6a                 ra = 0x6a
  4096: 0a 64                    ecalli 100 // 'log'
  4098: 01                       fallthrough
      :                          @229 [@dyn 53]
  4099: 82 17 50                 a0 = u64 [sp + 0x50]
  4102: c8 67 07                 a0 = a0 + s1
  4105: 53 37 00 00 f0 25        jump @235 if a0 <u 4293918720
      :                          @230
  4111: 33 07 40 10 03           a0 = 0x31040
  4116: 95 77 00 00 10           a0 = a0 + 0x100000
  4121: 01                       fallthrough
      :                          @231
  4122: 82 78                    a1 = u64 [a0]
  4124: c9 87 09                 a2 = a0 - a1
  4127: ab 59 0f                 jump @235 if a2 != s0
      :                          @232
  4130: c9 68 09                 a2 = a1 - s1
  4133: 01                       fallthrough
      :                          @233
  4134: 82 7a                    a3 = u64 [a0]
  4136: ab 8a f2                 jump @231 if a3 != a1
      :                          @234
  4139: 7b 79                    u64 [a0] = a2
  4141: 01                       fallthrough
      :                          @235
  4142: 95 18 c0 50 01           a1 = sp + 0x150c0
  4147: 82 80 28                 ra = u64 [a1 + 0x28]
  4150: 82 87 30                 a0 = u64 [a1 + 0x30]
  4153: 7b 17 48                 u64 [sp + 0x48] = a0
  4156: 82 87 38                 a0 = u64 [a1 + 0x38]
  4159: 7b 17 40                 u64 [sp + 0x40] = a0
  4162: 82 8a 40                 a3 = u64 [a1 + 0x40]
  4165: 82 8b 48                 a4 = u64 [a1 + 0x48]
  4168: 82 8c 50                 a5 = u64 [a1 + 0x50]
  4171: 82 86 58                 s1 = u64 [a1 + 0x58]
  4174: 82 85 60                 s0 = u64 [a1 + 0x60]
  4177: 82 82 68                 t0 = u64 [a1 + 0x68]
  4180: 82 83 70                 t1 = u64 [a1 + 0x70]
  4183: 82 84 78                 t2 = u64 [a1 + 0x78]
  4186: 49 28 90 00 00 00 01     u64 [a1 + 144] = 0x10000
  4193: 82 87 80 00              a0 = u64 [a1 + 0x80]
  4197: 7b 80 98 00              u64 [a1 + 0x98] = ra
  4201: 82 80 88 00              ra = u64 [a1 + 0x88]
  4205: 82 19 48                 a2 = u64 [sp + 0x48]
  4208: 7b 89 a0 00              u64 [a1 + 0xa0] = a2
  4212: 82 19 40                 a2 = u64 [sp + 0x40]
  4215: 7b 89 a8 00              u64 [a1 + 0xa8] = a2
  4219: 7b 8a b0 00              u64 [a1 + 0xb0] = a3
  4223: 7b 8b b8 00              u64 [a1 + 0xb8] = a4
  4227: 7b 8c c0 00              u64 [a1 + 0xc0] = a5
  4231: 7b 86 c8 00              u64 [a1 + 0xc8] = s1
  4235: 7b 85 d0 00              u64 [a1 + 0xd0] = s0
  4239: 7b 82 d8 00              u64 [a1 + 0xd8] = t0
  4243: 7b 83 e0 00              u64 [a1 + 0xe0] = t1
  4247: 7b 84 e8 00              u64 [a1 + 0xe8] = t2
  4251: 7b 87 f0 00              u64 [a1 + 0xf0] = a0
  4255: 7b 80 f8 00              u64 [a1 + 0xf8] = ra
  4259: 33 07 0a                 a0 = 0xa
  4262: 7b 17 40                 u64 [sp + 0x40] = a0
  4265: 33 07 80 03 01           a0 = 0x10380
  4270: 7b 17 18                 u64 [sp + 0x18] = a0
  4273: 33 07 b8 03 01           a0 = 0x103b8
  4278: 7b 17 10                 u64 [sp + 0x10] = a0
  4281: 33 06 40 10 03           s1 = 0x31040
  4286: 95 66 00 00 10           s1 = s1 + 0x100000
  4291: 01                       fallthrough
      :                          @236
  4292: 95 19 c0 50 01           a2 = sp + 0x150c0
  4297: 7b 99 10 01              u64 [a2 + 0x110] = a2
  4301: 82 17 40                 a0 = u64 [sp + 0x40]
  4304: 7b 97 18 01              u64 [a2 + 0x118] = a0
  4308: 82 17 18                 a0 = u64 [sp + 0x18]
  4311: 7b 97 68 01              u64 [a2 + 0x168] = a0
  4315: 49 29 70 01 01           u64 [a2 + 368] = 0x1
  4320: 49 29 88 01              u64 [a2 + 392] = 0
  4324: 95 18 d0 51 01           a1 = sp + 0x151d0
  4329: 7b 98 78 01              u64 [a2 + 0x178] = a1
  4333: 49 29 80 01 01           u64 [a2 + 384] = 0x1
  4338: 95 17 e8 51 01           a0 = sp + 0x151e8
  4343: 95 18 28 52 01           a1 = sp + 0x15228
  4348: 50 10 6c 92 09           ra = 108, jump @398
      :                          @237 [@dyn 54]
  4353: 95 17 c0 50 01           a0 = sp + 0x150c0
  4358: 82 75 30 01              s0 = u64 [a0 + 0x130]
  4362: 82 7b 38 01              a4 = u64 [a0 + 0x138]
  4366: 82 77 28 01              a0 = u64 [a0 + 0x128]
  4370: 7b 17 48                 u64 [sp + 0x48] = a0
  4373: 33 07 02                 a0 = 0x2
  4376: 33 08                    a1 = 0
  4378: 33 09                    a2 = 0
  4380: 64 5a                    a3 = s0
  4382: 33 00 6e                 ra = 0x6e
  4385: 0a 64                    ecalli 100 // 'log'
  4387: 01                       fallthrough
      :                          @238 [@dyn 55]
  4388: 82 1b 48                 a4 = u64 [sp + 0x48]
  4391: 82 17 50                 a0 = u64 [sp + 0x50]
  4394: c8 b7 07                 a0 = a0 + a4
  4397: 53 37 00 00 f0 1a        jump @243 if a0 <u 4293918720
      :                          @239
  4403: 82 67                    a0 = u64 [s1]
  4405: c9 76 08                 a1 = s1 - a0
  4408: ab 58 0f                 jump @243 if a1 != s0
      :                          @240
  4411: c9 b7 08                 a1 = a0 - a4
  4414: 01                       fallthrough
      :                          @241
  4415: 82 69                    a2 = u64 [s1]
  4417: ab 79 f2                 jump @239 if a2 != a0
      :                          @242
  4420: 7b 68                    u64 [s1] = a1
  4422: 01                       fallthrough
      :                          @243
  4423: 95 17 70 40 01           a0 = sp + 0x14070
  4428: 82 77 40                 a0 = u64 [a0 + 0x40]
  4431: 95 18 50 51 01           a1 = sp + 0x15150
  4436: 0a 0c                    ecalli 12 // 'invoke'
  4438: 95 19 c0 50 01           a2 = sp + 0x150c0
  4443: 7b 97 00 01              u64 [a2 + 0x100] = a0
  4447: 7b 98 08 01              u64 [a2 + 0x108] = a1
  4451: 95 17 b0 40 01           a0 = sp + 0x140b0
  4456: 7b 97 68 01              u64 [a2 + 0x168] = a0
  4460: 82 17 40                 a0 = u64 [sp + 0x40]
  4463: 7b 97 70 01              u64 [a2 + 0x170] = a0
  4467: 95 18 c0 51 01           a1 = sp + 0x151c0
  4472: 7b 98 78 01              u64 [a2 + 0x178] = a1
  4476: 7b 97 80 01              u64 [a2 + 0x180] = a0
  4480: 95 18 c8 51 01           a1 = sp + 0x151c8
  4485: 7b 98 88 01              u64 [a2 + 0x188] = a1
  4489: 7b 97 90 01              u64 [a2 + 0x190] = a0
  4493: 82 17 10                 a0 = u64 [sp + 0x10]
  4496: 7b 97 28 01              u64 [a2 + 0x128] = a0
  4500: 49 29 30 01 03           u64 [a2 + 304] = 0x3
  4505: 49 29 48 01              u64 [a2 + 328] = 0
  4509: 95 17 28 52 01           a0 = sp + 0x15228
  4514: 7b 97 38 01              u64 [a2 + 0x138] = a0
  4518: 49 29 40 01 03           u64 [a2 + 320] = 0x3
  4523: 95 17 d0 51 01           a0 = sp + 0x151d0
  4528: 95 18 e8 51 01           a1 = sp + 0x151e8
  4533: 50 10 70 d9 08           ra = 112, jump @398
      :                          @244 [@dyn 56]
  4538: 95 17 c0 50 01           a0 = sp + 0x150c0
  4543: 82 75 18 01              s0 = u64 [a0 + 0x118]
  4547: 82 7b 20 01              a4 = u64 [a0 + 0x120]
  4551: 82 77 10 01              a0 = u64 [a0 + 0x110]
  4555: 7b 17 48                 u64 [sp + 0x48] = a0
  4558: 33 07 02                 a0 = 0x2
  4561: 33 08                    a1 = 0
  4563: 33 09                    a2 = 0
  4565: 64 5a                    a3 = s0
  4567: 33 00 72                 ra = 0x72
  4570: 0a 64                    ecalli 100 // 'log'
  4572: 01                       fallthrough
      :                          @245 [@dyn 57]
  4573: 82 1b 48                 a4 = u64 [sp + 0x48]
  4576: 82 17 50                 a0 = u64 [sp + 0x50]
  4579: c8 b7 07                 a0 = a0 + a4
  4582: 53 37 00 00 f0 1a        jump @250 if a0 <u 4293918720
      :                          @246
  4588: 82 67                    a0 = u64 [s1]
  4590: c9 76 08                 a1 = s1 - a0
  4593: ab 58 0f                 jump @250 if a1 != s0
      :                          @247
  4596: c9 b7 08                 a1 = a0 - a4
  4599: 01                       fallthrough
      :                          @248
  4600: 82 69                    a2 = u64 [s1]
  4602: ab 79 f2                 jump @246 if a2 != a0
      :                          @249
  4605: 7b 68                    u64 [s1] = a1
  4607: 01                       fallthrough
      :                          @250
  4608: 95 18 c0 50 01           a1 = sp + 0x150c0
  4613: 82 87 00 01              a0 = u64 [a1 + 0x100]
  4617: 82 88 08 01              a1 = u64 [a1 + 0x108]
  4621: 85 77 03                 a0 = a0 ^ 0x3
  4624: 85 88 64                 a1 = a1 ^ 0x64
  4627: d4 87 05                 s0 = a0 | a1
  4630: 95 17 e8 50 01           a0 = sp + 0x150e8
  4635: 33 09 68                 a2 = 0x68
  4638: 95 18 58 51 01           a1 = sp + 0x15158
  4643: 50 10 74 e5 0a           ra = 116, jump @448
      :                          @251 [@dyn 58]
  4648: 95 17 c0 50 01           a0 = sp + 0x150c0
  4653: 82 78 60                 a1 = u64 [a0 + 0x60]
  4656: 7b 18 48                 u64 [sp + 0x48] = a1
  4659: 52 05 8f 00              jump @254 if s0 != 0
      :                          @252
  4663: 82 78 68                 a1 = u64 [a0 + 0x68]
  4666: 7b 18 28                 u64 [sp + 0x28] = a1
  4669: 82 75 70                 s0 = u64 [a0 + 0x70]
  4672: 7b 15 20                 u64 [sp + 0x20] = s0
  4675: 82 78 78                 a1 = u64 [a0 + 0x78]
  4678: 7b 18 38                 u64 [sp + 0x38] = a1
  4681: 82 78 80 00              a1 = u64 [a0 + 0x80]
  4685: 7b 18 30                 u64 [sp + 0x30] = a1
  4688: 49 27 60 01              u64 [a0 + 352] = 0
  4692: 49 27 58 01              u64 [a0 + 344] = 0
  4696: 49 27 50 01              u64 [a0 + 336] = 0
  4700: 49 27 48 01              u64 [a0 + 328] = 0
  4704: 49 27 40 01              u64 [a0 + 320] = 0
  4708: 49 27 38 01              u64 [a0 + 312] = 0
  4712: 49 27 30 01              u64 [a0 + 304] = 0
  4716: 49 27 28 01              u64 [a0 + 296] = 0
  4720: 95 17 28 52 01           a0 = sp + 0x15228
  4725: 33 09 00 01              a2 = 0x100
  4729: 33 08                    a1 = 0
  4731: 50 10 76 3f 0b           ra = 118, jump @466
      :                          @253 [@dyn 59]
  4736: 95 17 70 40 01           a0 = sp + 0x14070
  4741: 82 77 40                 a0 = u64 [a0 + 0x40]
  4744: 95 18 e8 51 01           a1 = sp + 0x151e8
  4749: 82 19 28                 a2 = u64 [sp + 0x28]
  4752: 64 5a                    a3 = s0
  4754: 0a 09                    ecalli 9 // 'peek'
  4756: 95 17 70 40 01           a0 = sp + 0x14070
  4761: 82 77 40                 a0 = u64 [a0 + 0x40]
  4764: 95 18 28 52 01           a1 = sp + 0x15228
  4769: 82 19 38                 a2 = u64 [sp + 0x38]
  4772: 82 15 30                 s0 = u64 [sp + 0x30]
  4775: 64 5a                    a3 = s0
  4777: 0a 09                    ecalli 9 // 'peek'
  4779: 95 18 e8 51 01           a1 = sp + 0x151e8
  4784: 95 1a 28 52 01           a3 = sp + 0x15228
  4789: 82 17 48                 a0 = u64 [sp + 0x48]
  4792: 82 19 20                 a2 = u64 [sp + 0x20]
  4795: 64 5b                    a4 = s0
  4797: 0a 64                    ecalli 100 // 'log'
  4799: 28 05 fe                 jump @236
      :                          @254
  4802: 95 17 c0 40 01           a0 = sp + 0x140c0
  4807: 33 09 00 10              a2 = 0x1000
  4811: 33 06 00 10              s1 = 0x1000
  4815: 33 08                    a1 = 0
  4817: 50 10 78 e9 0a           ra = 120, jump @466
      :                          @255 [@dyn 60]
  4822: 95 1a 70 40 01           a3 = sp + 0x14070
  4827: 82 a7 40                 a0 = u64 [a3 + 0x40]
  4830: 7a a7 48                 u32 [a3 + 0x48] = a0
  4833: 82 15 48                 s0 = u64 [sp + 0x48]
  4836: 98 58 0c                 a1 = s0 >> 0xc
  4839: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  4842: 33 0a 00 10              a3 = 0x1000
  4846: 95 18 c0 40 01           a1 = sp + 0x140c0
  4851: 64 59                    a2 = s0
  4853: 0a 09                    ecalli 9 // 'peek'
  4855: 83 66 08                 i32 s1 = s1 + 0x8
  4858: 95 17 b8 40 01           a0 = sp + 0x140b8
  4863: 64 68                    a1 = s1
  4865: 0a 07                    ecalli 7 // 'export'
  4867: 33 09 00 10              a2 = 0x1000
  4871: 95 17 c0 40 01           a0 = sp + 0x140c0
  4876: 33 08                    a1 = 0
  4878: 50 10 7a ac 0a           ra = 122, jump @466
      :                          @256 [@dyn 61]
  4883: 95 1a 70 40 01           a3 = sp + 0x14070
  4888: 82 a7 40                 a0 = u64 [a3 + 0x40]
  4891: 7a a7 48                 u32 [a3 + 0x48] = a0
  4894: 95 59 00 10              a2 = s0 + 0x1000
  4898: 98 98 0c                 a1 = a2 >> 0xc
  4901: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  4904: 33 0a 00 10              a3 = 0x1000
  4908: 95 18 c0 40 01           a1 = sp + 0x140c0
  4913: 0a 09                    ecalli 9 // 'peek'
  4915: 95 17 b8 40 01           a0 = sp + 0x140b8
  4920: 64 68                    a1 = s1
  4922: 0a 07                    ecalli 7 // 'export'
  4924: 33 09 00 10              a2 = 0x1000
  4928: 95 17 c0 40 01           a0 = sp + 0x140c0
  4933: 33 08                    a1 = 0
  4935: 50 10 7c 73 0a           ra = 124, jump @466
      :                          @257 [@dyn 62]
  4940: 95 1a 70 40 01           a3 = sp + 0x14070
  4945: 82 a7 40                 a0 = u64 [a3 + 0x40]
  4948: 7a a7 48                 u32 [a3 + 0x48] = a0
  4951: 95 59 00 20              a2 = s0 + 0x2000
  4955: 98 98 0c                 a1 = a2 >> 0xc
  4958: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  4961: 33 0a 00 10              a3 = 0x1000
  4965: 95 18 c0 40 01           a1 = sp + 0x140c0
  4970: 0a 09                    ecalli 9 // 'peek'
  4972: 95 17 b8 40 01           a0 = sp + 0x140b8
  4977: 64 68                    a1 = s1
  4979: 0a 07                    ecalli 7 // 'export'
  4981: 33 09 00 10              a2 = 0x1000
  4985: 95 17 c0 40 01           a0 = sp + 0x140c0
  4990: 33 08                    a1 = 0
  4992: 50 10 7e 3a 0a           ra = 126, jump @466
      :                          @258 [@dyn 63]
  4997: 95 18 70 40 01           a1 = sp + 0x14070
  5002: 82 87 40                 a0 = u64 [a1 + 0x40]
  5005: 7a 87 48                 u32 [a1 + 0x48] = a0
  5008: 95 1a 70 40 01           a3 = sp + 0x14070
  5013: 95 59 00 30              a2 = s0 + 0x3000
  5017: 98 98 0c                 a1 = a2 >> 0xc
  5020: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  5023: 33 0a 00 10              a3 = 0x1000
  5027: 95 18 c0 40 01           a1 = sp + 0x140c0
  5032: 0a 09                    ecalli 9 // 'peek'
  5034: 95 17 b8 40 01           a0 = sp + 0x140b8
  5039: 64 68                    a1 = s1
  5041: 64 65                    s0 = s1
  5043: 0a 07                    ecalli 7 // 'export'
  5045: 33 09 00 10              a2 = 0x1000
  5049: 95 17 c0 40 01           a0 = sp + 0x140c0
  5054: 33 08                    a1 = 0
  5056: 50 20 80 00 fa 09        ra = 128, jump @466
      :                          @259 [@dyn 64]
  5062: 95 1a 70 40 01           a3 = sp + 0x14070
  5067: 82 a7 40                 a0 = u64 [a3 + 0x40]
  5070: 7a a7 48                 u32 [a3 + 0x48] = a0
  5073: 82 16 48                 s1 = u64 [sp + 0x48]
  5076: 95 69 00 40              a2 = s1 + 0x4000
  5080: 98 98 0c                 a1 = a2 >> 0xc
  5083: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  5086: 33 0a 00 10              a3 = 0x1000
  5090: 95 18 c0 40 01           a1 = sp + 0x140c0
  5095: 0a 09                    ecalli 9 // 'peek'
  5097: 95 17 b8 40 01           a0 = sp + 0x140b8
  5102: 64 58                    a1 = s0
  5104: 0a 07                    ecalli 7 // 'export'
  5106: 33 09 00 10              a2 = 0x1000
  5110: 95 17 c0 40 01           a0 = sp + 0x140c0
  5115: 33 08                    a1 = 0
  5117: 50 20 82 00 bd 09        ra = 130, jump @466
      :                          @260 [@dyn 65]
  5123: 95 18 70 40 01           a1 = sp + 0x14070
  5128: 82 87 40                 a0 = u64 [a1 + 0x40]
  5131: 7a 87 48                 u32 [a1 + 0x48] = a0
  5134: 95 1a 70 40 01           a3 = sp + 0x14070
  5139: 95 69 00 50              a2 = s1 + 0x5000
  5143: 98 98 0c                 a1 = a2 >> 0xc
  5146: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  5149: 33 0a 00 10              a3 = 0x1000
  5153: 95 18 c0 40 01           a1 = sp + 0x140c0
  5158: 0a 09                    ecalli 9 // 'peek'
  5160: 95 17 b8 40 01           a0 = sp + 0x140b8
  5165: 7b 15 40                 u64 [sp + 0x40] = s0
  5168: 64 58                    a1 = s0
  5170: 0a 07                    ecalli 7 // 'export'
  5172: 33 09 00 10              a2 = 0x1000
  5176: 95 17 c0 40 01           a0 = sp + 0x140c0
  5181: 33 08                    a1 = 0
  5183: 50 20 84 00 7b 09        ra = 132, jump @466
      :                          @261 [@dyn 66]
  5189: 95 1a 70 40 01           a3 = sp + 0x14070
  5194: 82 a7 40                 a0 = u64 [a3 + 0x40]
  5197: 7a a7 48                 u32 [a3 + 0x48] = a0
  5200: 95 69 00 60              a2 = s1 + 0x6000
  5204: 98 98 0c                 a1 = a2 >> 0xc
  5207: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  5210: 33 0a 00 10              a3 = 0x1000
  5214: 95 18 c0 40 01           a1 = sp + 0x140c0
  5219: 0a 09                    ecalli 9 // 'peek'
  5221: 95 17 b8 40 01           a0 = sp + 0x140b8
  5226: 64 58                    a1 = s0
  5228: 0a 07                    ecalli 7 // 'export'
  5230: 33 09 00 10              a2 = 0x1000
  5234: 95 17 c0 40 01           a0 = sp + 0x140c0
  5239: 33 08                    a1 = 0
  5241: 50 20 86 00 41 09        ra = 134, jump @466
      :                          @262 [@dyn 67]
  5247: 95 18 70 40 01           a1 = sp + 0x14070
  5252: 82 87 40                 a0 = u64 [a1 + 0x40]
  5255: 7a 87 48                 u32 [a1 + 0x48] = a0
  5258: 95 1a 70 40 01           a3 = sp + 0x14070
  5263: 95 69 00 70              a2 = s1 + 0x7000
  5267: 98 98 0c                 a1 = a2 >> 0xc
  5270: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  5273: 33 0a 00 10              a3 = 0x1000
  5277: 95 18 c0 40 01           a1 = sp + 0x140c0
  5282: 0a 09                    ecalli 9 // 'peek'
  5284: 95 17 b8 40 01           a0 = sp + 0x140b8
  5289: 82 15 40                 s0 = u64 [sp + 0x40]
  5292: 64 58                    a1 = s0
  5294: 0a 07                    ecalli 7 // 'export'
  5296: 33 09 00 10              a2 = 0x1000
  5300: 95 17 c0 40 01           a0 = sp + 0x140c0
  5305: 33 08                    a1 = 0
  5307: 50 20 88 00 ff 08        ra = 136, jump @466
      :                          @263 [@dyn 68]
  5313: 95 1a 70 40 01           a3 = sp + 0x14070
  5318: 82 a7 40                 a0 = u64 [a3 + 0x40]
  5321: 7a a7 48                 u32 [a3 + 0x48] = a0
  5324: 95 69 00 80 00           a2 = s1 + 0x8000
  5329: 98 98 0c                 a1 = a2 >> 0xc
  5332: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  5335: 95 16 70 40 01           s1 = sp + 0x14070
  5340: 33 0a 00 10              a3 = 0x1000
  5344: 95 18 c0 40 01           a1 = sp + 0x140c0
  5349: 0a 09                    ecalli 9 // 'peek'
  5351: 95 17 b8 40 01           a0 = sp + 0x140b8
  5356: 64 58                    a1 = s0
  5358: 0a 07                    ecalli 7 // 'export'
  5360: 82 67 40                 a0 = u64 [s1 + 0x40]
  5363: 0a 0d                    ecalli 13 // 'expunge'
  5365: 33 07 0a                 a0 = 0xa
  5368: 95 18 c0 50 01           a1 = sp + 0x150c0
  5373: 7b 87 18 01              u64 [a1 + 0x118] = a0
  5377: 33 07 18 04 01           a0 = 0x10418
  5382: 7b 87 68 01              u64 [a1 + 0x168] = a0
  5386: 95 17 d0 51 01           a0 = sp + 0x151d0
  5391: 7b 87 78 01              u64 [a1 + 0x178] = a0
  5395: 49 28 70 01 01           u64 [a1 + 368] = 0x1
  5400: 49 28 80 01 01           u64 [a1 + 384] = 0x1
  5405: 7b 88 10 01              u64 [a1 + 0x110] = a1
  5409: 49 28 88 01              u64 [a1 + 392] = 0
  5413: 95 16 c0 50 01           s1 = sp + 0x150c0
  5418: 95 17 e8 51 01           a0 = sp + 0x151e8
  5423: 95 18 28 52 01           a1 = sp + 0x15228
  5428: 50 20 8a 00 5a 05        ra = 138, jump @398
      :                          @264 [@dyn 69]
  5434: 82 65 30 01              s0 = u64 [s1 + 0x130]
  5438: 82 6b 38 01              a4 = u64 [s1 + 0x138]
  5442: 82 66 28 01              s1 = u64 [s1 + 0x128]
  5446: 33 07 02                 a0 = 0x2
  5449: 33 08                    a1 = 0
  5451: 33 09                    a2 = 0
  5453: 64 5a                    a3 = s0
  5455: 33 00 8c 00              ra = 0x8c
  5459: 0a 64                    ecalli 100 // 'log'
  5461: 01                       fallthrough
      :                          @265 [@dyn 70]
  5462: 82 17 50                 a0 = u64 [sp + 0x50]
  5465: c8 67 07                 a0 = a0 + s1
  5468: 55 37 00 00 f0 09        jump @267 if a0 >=u 4293918720
      :                          @266
  5474: 28 b8 ee                 jump @76
      :                          @267
  5477: 33 07 40 10 03           a0 = 0x31040
  5482: 95 77 00 00 10           a0 = a0 + 0x100000
  5487: 01                       fallthrough
      :                          @268
  5488: 82 78                    a1 = u64 [a0]
  5490: c9 87 09                 a2 = a0 - a1
  5493: aa 59 06                 jump @270 if a2 == s0
      :                          @269
  5496: 28 a2 ee                 jump @76
      :                          @270
  5499: c9 68 09                 a2 = a1 - s1
  5502: 01                       fallthrough
      :                          @271
  5503: 82 7a                    a3 = u64 [a0]
  5505: ab 8a ef                 jump @268 if a3 != a1
      :                          @272
  5508: 7b 79                    u64 [a0] = a2
  5510: 33 0b                    a4 = 0
  5512: 01                       fallthrough
      :                          @273
  5513: ab 8a e7                 jump @268 if a3 != a1
      :                          @274
  5516: 28 8e ee                 jump @76
      :                          @275
  5519: 00                       trap
      :                          @276
  5520: 00                       trap
      :                          @277 [export #1: 'accumulate']
  5521: 51 08 ab 02              jump @340 if a1 == 0
      :                          @278
  5525: 95 11 68 ff              sp = sp + 0xffffffffffffff68
  5529: 7b 10 90 00              u64 [sp + 0x90] = ra
  5533: 7b 15 88 00              u64 [sp + 0x88] = s0
  5537: 7b 16 80 00              u64 [sp + 0x80] = s1
  5541: 64 85                    s0 = a1
  5543: 7d 78                    a1 = i8 [a0]
  5545: 33 06 01                 s1 = 0x1
  5548: 59 08 37                 jump @285 if a1 >=s 0
      :                          @279
  5551: 84 89 ff 00              a2 = a1 & 0xff
  5555: 33 06 02                 s1 = 0x2
  5558: 53 29 c0 00 2d           jump @285 if a2 <u 192
      :                          @280
  5563: 33 06 03                 s1 = 0x3
  5566: 53 29 e0 00 25           jump @285 if a2 <u 224
      :                          @281
  5571: 33 06 04                 s1 = 0x4
  5574: 53 29 f0 00 1d           jump @285 if a2 <u 240
      :                          @282
  5579: 33 06 05                 s1 = 0x5
  5582: 53 29 f8 00 15           jump @285 if a2 <u 248
      :                          @283
  5587: 33 06 06                 s1 = 0x6
  5590: 53 29 fc 00 0d           jump @285 if a2 <u 252
      :                          @284
  5595: 88 98 fe 00              a1 = a2 <u 0xfe
  5599: 9a 86 08                 s1 = 0x8 - a1
  5602: 01                       fallthrough
      :                          @285
  5603: ac 65 40 02              jump @339 if s0 <u s1
      :                          @286
  5607: 64 68                    a1 = s1
  5609: 7b 17                    u64 [sp] = a0
  5611: 50 20 8e 00 78 11        ra = 142, jump @652
      :                          @287 [@dyn 71]
  5617: 82 17                    a0 = u64 [sp]
  5619: aa 65 30 02              jump @339 if s0 == s1
      :                          @288
  5623: c8 67 07                 a0 = a0 + s1
  5626: 7d 78                    a1 = i8 [a0]
  5628: c9 65 0a                 a3 = s0 - s1
  5631: 33 05 01                 s0 = 0x1
  5634: 59 08 37                 jump @295 if a1 >=s 0
      :                          @289
  5637: 84 89 ff 00              a2 = a1 & 0xff
  5641: 33 05 02                 s0 = 0x2
  5644: 53 29 c0 00 2d           jump @295 if a2 <u 192
      :                          @290
  5649: 33 05 03                 s0 = 0x3
  5652: 53 29 e0 00 25           jump @295 if a2 <u 224
      :                          @291
  5657: 33 05 04                 s0 = 0x4
  5660: 53 29 f0 00 1d           jump @295 if a2 <u 240
      :                          @292
  5665: 33 05 05                 s0 = 0x5
  5668: 53 29 f8 00 15           jump @295 if a2 <u 248
      :                          @293
  5673: 33 05 06                 s0 = 0x6
  5676: 53 29 fc 00 0d           jump @295 if a2 <u 252
      :                          @294
  5681: 88 98 fe 00              a1 = a2 <u 0xfe
  5685: 9a 85 08                 s0 = 0x8 - a1
  5688: 01                       fallthrough
      :                          @295
  5689: ac 5a ea 01              jump @339 if a3 <u s0
      :                          @296
  5693: 64 58                    a1 = s0
  5695: 7b 1a                    u64 [sp] = a3
  5697: 64 76                    s1 = a0
  5699: 50 20 90 00 20 11        ra = 144, jump @652
      :                          @297 [@dyn 72]
  5705: c8 65 07                 a0 = s0 + s1
  5708: 82 16                    s1 = u64 [sp]
  5710: ab 56 0c                 jump @299 if s1 != s0
      :                          @298
  5713: 33 08                    a1 = 0
  5715: 33 00 92 00              ra = 0x92
  5719: 28 0c 11                 jump @652
      :                          @299
  5722: 7d 79                    a2 = i8 [a0]
  5724: c9 56 06                 s1 = s1 - s0
  5727: 33 08 01                 a1 = 0x1
  5730: 59 09 44                 jump @306 if a2 >=s 0
      :                          @300
  5733: 84 99 ff 00              a2 = a2 & 0xff
  5737: 33 0a c0 00              a3 = 0xc0
  5741: 33 08 02                 a1 = 0x2
  5744: ac a9 36                 jump @306 if a2 <u a3
      :                          @301
  5747: 33 0a e0 00              a3 = 0xe0
  5751: 33 08 03                 a1 = 0x3
  5754: ac a9 2c                 jump @306 if a2 <u a3
      :                          @302
  5757: 33 0a f0 00              a3 = 0xf0
  5761: 33 08 04                 a1 = 0x4
  5764: ac a9 22                 jump @306 if a2 <u a3
      :                          @303
  5767: 33 0a f8 00              a3 = 0xf8
  5771: 33 08 05                 a1 = 0x5
  5774: ac a9 18                 jump @306 if a2 <u a3
      :                          @304
  5777: 33 0a fc 00              a3 = 0xfc
  5781: 33 08 06                 a1 = 0x6
  5784: ac a9 0e                 jump @306 if a2 <u a3
      :                          @305
  5787: 88 98 fe 00              a1 = a2 <u 0xfe
  5791: 33 09 08                 a2 = 0x8
  5794: c9 89 08                 a1 = a2 - a1
  5797: 01                       fallthrough
      :                          @306
  5798: ac 86 7d 01              jump @339 if s1 <u a1
      :                          @307
  5802: 50 20 92 00 b9 10        ra = 146, jump @652
      :                          @308 [@dyn 73]
  5808: 33 07 35 00 03           a0 = 0x30035
  5813: 33 09 08 10              a2 = 0x1008
  5817: 33 0a 0f                 a3 = 0xf
  5820: 33 08                    a1 = 0
  5822: 33 0b                    a4 = 0
  5824: 33 0c                    a5 = 0
  5826: 33 00 94 00              ra = 0x94
  5830: 0a 01                    ecalli 1 // 'fetch'
  5832: 01                       fallthrough
      :                          @309 [@dyn 74]
  5833: 51 07 5a 01              jump @339 if a0 == 0
      :                          @310
  5837: 95 76 80                 s1 = a0 + 0xffffffffffffff80
  5840: 51 06 53 01              jump @339 if s1 == 0
      :                          @311
  5844: 35 07 b5 00 03           a0 = i8 [0x300b5]
  5849: 33 05 01                 s0 = 0x1
  5852: 59 07 37                 jump @318 if a0 >=s 0
      :                          @312
  5855: 84 77 ff 00              a0 = a0 & 0xff
  5859: 33 05 02                 s0 = 0x2
  5862: 53 27 c0 00 2d           jump @318 if a0 <u 192
      :                          @313
  5867: 33 05 03                 s0 = 0x3
  5870: 53 27 e0 00 25           jump @318 if a0 <u 224
      :                          @314
  5875: 33 05 04                 s0 = 0x4
  5878: 53 27 f0 00 1d           jump @318 if a0 <u 240
      :                          @315
  5883: 33 05 05                 s0 = 0x5
  5886: 53 27 f8 00 15           jump @318 if a0 <u 248
      :                          @316
  5891: 33 05 06                 s0 = 0x6
  5894: 53 27 fc 00 0d           jump @318 if a0 <u 252
      :                          @317
  5899: 88 77 fe 00              a0 = a0 <u 0xfe
  5903: 9a 75 08                 s0 = 0x8 - a0
  5906: 01                       fallthrough
      :                          @318
  5907: ac 56 10 01              jump @339 if s1 <u s0
      :                          @319
  5911: 33 07 35 00 03           a0 = 0x30035
  5916: 7b 17                    u64 [sp] = a0
  5918: 95 77 80 00              a0 = a0 + 0x80
  5922: 64 58                    a1 = s0
  5924: 50 20 96 00 3f 10        ra = 150, jump @652
      :                          @320 [@dyn 75]
  5930: 85 57 ff                 a0 = s0 ^ 0xffffffffffffffff
  5933: c8 67 07                 a0 = a0 + s1
  5936: 51 07 f3 00              jump @339 if a0 == 0
      :                          @321
  5940: 82 18                    a1 = u64 [sp]
  5942: c8 85 05                 s0 = s0 + a1
  5945: 95 55 81 00              s0 = s0 + 0x81
  5949: 7d 58                    a1 = i8 [s0]
  5951: 33 06 01                 s1 = 0x1
  5954: 59 08 45                 jump @329 if a1 >=s 0
      :                          @322
  5957: 84 88 ff 00              a1 = a1 & 0xff
  5961: 33 09 c0 00              a2 = 0xc0
  5965: 33 06 02                 s1 = 0x2
  5968: ac 98 33                 jump @328 if a1 <u a2
      :                          @323
  5971: 33 09 e0 00              a2 = 0xe0
  5975: 33 06 03                 s1 = 0x3
  5978: ac 98 29                 jump @328 if a1 <u a2
      :                          @324
  5981: 33 09 f0 00              a2 = 0xf0
  5985: 33 06 04                 s1 = 0x4
  5988: ac 98 1f                 jump @328 if a1 <u a2
      :                          @325
  5991: 33 09 f8 00              a2 = 0xf8
  5995: 33 06 05                 s1 = 0x5
  5998: ac 98 15                 jump @328 if a1 <u a2
      :                          @326
  6001: 33 09 fc 00              a2 = 0xfc
  6005: 33 06 06                 s1 = 0x6
  6008: ac 98 0b                 jump @328 if a1 <u a2
      :                          @327
  6011: 88 88 fe 00              a1 = a1 <u 0xfe
  6015: 9a 86 08                 s1 = 0x8 - a1
  6018: 01                       fallthrough
      :                          @328
  6019: ac 67 a0 00              jump @339 if a0 <u s1
      :                          @329
  6023: 64 57                    a0 = s0
  6025: 64 68                    a1 = s1
  6027: 50 20 98 00 d8 0f        ra = 152, jump @652
      :                          @330 [@dyn 76]
  6033: 52 17 24 92 00           jump @339 if a0 != 36
      :                          @331
  6038: c8 56 07                 a0 = s1 + s0
  6041: 7b 17 08                 u64 [sp + 0x8] = a0
  6044: 80 78 20                 a1 = u32 [a0 + 0x20]
  6047: 7b 18 10                 u64 [sp + 0x10] = a1
  6050: 0a 17                    ecalli 23 // 'solicit'
  6052: 95 17 08                 a0 = sp + 0x8
  6055: 7b 17 60                 u64 [sp + 0x60] = a0
  6058: 33 07 0a                 a0 = 0xa
  6061: 7b 17 68                 u64 [sp + 0x68] = a0
  6064: 95 18 10                 a1 = sp + 0x10
  6067: 7b 18 70                 u64 [sp + 0x70] = a1
  6070: 7b 17 78                 u64 [sp + 0x78] = a0
  6073: 33 07 98 04 01           a0 = 0x10498
  6078: 7b 17 30                 u64 [sp + 0x30] = a0
  6081: 49 11 38 02              u64 [sp + 56] = 0x2
  6085: 49 11 50                 u64 [sp + 80] = 0
  6088: 95 18 60                 a1 = sp + 0x60
  6091: 7b 18 40                 u64 [sp + 0x40] = a1
  6094: 49 11 48 02              u64 [sp + 72] = 0x2
  6098: 95 17 18                 a0 = sp + 0x18
  6101: 95 18 30                 a1 = sp + 0x30
  6104: 50 20 9a 00 b6 02        ra = 154, jump @398
      :                          @332 [@dyn 77]
  6110: 82 15 20                 s0 = u64 [sp + 0x20]
  6113: 82 1b 28                 a4 = u64 [sp + 0x28]
  6116: 82 16 18                 s1 = u64 [sp + 0x18]
  6119: 33 07 02                 a0 = 0x2
  6122: 33 08                    a1 = 0
  6124: 33 09                    a2 = 0
  6126: 64 5a                    a3 = s0
  6128: 33 00 9c 00              ra = 0x9c
  6132: 0a 64                    ecalli 100 // 'log'
  6134: 01                       fallthrough
      :                          @333 [@dyn 78]
  6135: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
  6140: 53 38 00 00 f0 27        jump @339 if a1 <u 4293918720
      :                          @334
  6146: 33 07 40 10 03           a0 = 0x31040
  6151: 95 77 00 00 10           a0 = a0 + 0x100000
  6156: 01                       fallthrough
      :                          @335
  6157: 82 78                    a1 = u64 [a0]
  6159: c9 87 09                 a2 = a0 - a1
  6162: ab 59 11                 jump @339 if a2 != s0
      :                          @336
  6165: c9 68 09                 a2 = a1 - s1
  6168: 01                       fallthrough
      :                          @337
  6169: 82 7a                    a3 = u64 [a0]
  6171: ab 8a f2                 jump @335 if a3 != a1
      :                          @338
  6174: 7b 79                    u64 [a0] = a2
  6176: 33 0b                    a4 = 0
  6178: 01                       fallthrough
      :                          @339
  6179: 82 10 90 00              ra = u64 [sp + 0x90]
  6183: 82 15 88 00              s0 = u64 [sp + 0x88]
  6187: 82 16 80 00              s1 = u64 [sp + 0x80]
  6191: 95 11 98 00              sp = sp + 0x98
  6195: 33 07 00 00 01           a0 = 0x10000
  6200: 33 08                    a1 = 0
  6202: 32 00                    ret
      :                          @340
  6204: 33 07 00 00 01           a0 = 0x10000
  6209: 33 08                    a1 = 0
  6211: 32 00                    ret
      :                          @341 [export #2: 'on_transfer']
  6213: 33 07 00 00 01           a0 = 0x10000
  6218: 33 08                    a1 = 0
  6220: 32 00                    ret
      :                          @342
  6222: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  6225: 7b 10 40                 u64 [sp + 0x40] = ra
  6228: 7b 15 38                 u64 [sp + 0x38] = s0
  6231: 7b 16 30                 u64 [sp + 0x30] = s1
  6234: c8 89 09                 a2 = a2 + a1
  6237: ac 89 53                 jump @350 if a2 <u a1
      :                          @343
  6240: 64 75                    s0 = a0
  6242: 82 77                    a0 = u64 [a0]
  6244: 97 78 01                 a1 = a0 << 0x1
  6247: 33 0a 08                 a3 = 0x8
  6250: e4 a9 09                 a2 = maxu(a2, a3)
  6253: e4 98 06                 s1 = maxu(a1, a2)
  6256: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  6259: 98 88 3f                 a1 = a1 >> 0x3f
  6262: 51 07 12                 jump @345 if a0 == 0
      :                          @344
  6265: 82 59 08                 a2 = u64 [s0 + 0x8]
  6268: 7b 19 18                 u64 [sp + 0x18] = a2
  6271: 49 11 20 01              u64 [sp + 32] = 0x1
  6275: 7b 17 28                 u64 [sp + 0x28] = a0
  6278: 28 06                    jump @346
      :                          @345
  6280: 49 11 20                 u64 [sp + 32] = 0
  6283: 01                       fallthrough
      :                          @346
  6284: 64 17                    a0 = sp
  6286: 95 1a 18                 a3 = sp + 0x18
  6289: 64 69                    a2 = s1
  6291: 50 20 9e 00 33           ra = 158, jump @354
      :                          @347 [@dyn 79]
  6296: 82 18                    a1 = u64 [sp]
  6298: 82 17 08                 a0 = u64 [sp + 0x8]
  6301: 51 08 14                 jump @351 if a1 == 0
      :                          @348
  6304: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  6314: aa 87 0d                 jump @352 if a0 == a1
      :                          @349
  6317: 52 07 18                 jump @353 if a0 != 0
      :                          @350
  6320: 00                       trap
      :                          @351
  6321: 7b 57 08                 u64 [s0 + 0x8] = a0
  6324: 7b 56                    u64 [s0] = s1
  6326: 01                       fallthrough
      :                          @352
  6327: 82 10 40                 ra = u64 [sp + 0x40]
  6330: 82 15 38                 s0 = u64 [sp + 0x38]
  6333: 82 16 30                 s1 = u64 [sp + 0x30]
  6336: 95 11 48                 sp = sp + 0x48
  6339: 32 00                    ret
      :                          @353
  6341: 00                       trap
      :                          @354
  6342: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  6345: 7b 10 30                 u64 [sp + 0x30] = ra
  6348: 7b 15 28                 u64 [sp + 0x28] = s0
  6351: 7b 16 20                 u64 [sp + 0x20] = s1
  6354: 64 95                    s0 = a2
  6356: 64 72                    t0 = a0
  6358: 51 08 7a                 jump @364 if a1 == 0
      :                          @355
  6361: 82 a7 08                 a0 = u64 [a3 + 0x8]
  6364: 51 07 7d                 jump @365 if a0 == 0
      :                          @356
  6367: 82 a9 10                 a2 = u64 [a3 + 0x10]
  6370: 51 09 ab 00              jump @372 if a2 == 0
      :                          @357
  6374: 82 a8                    a1 = u64 [a3]
  6376: 33 06 40 10 03           s1 = 0x31040
  6381: 33 03 00 00 10           t1 = 0x100000
  6386: c8 36 06                 s1 = s1 + t1
  6389: 01                       fallthrough
      :                          @358
  6390: 82 6a                    a3 = u64 [s1]
  6392: c8 5a 07                 a0 = a3 + s0
  6395: ac a7 d0 00              jump @378 if a0 <u a3
      :                          @359
  6399: 95 7b 01                 a4 = a0 + 0x1
  6402: 88 bc 01                 a5 = a4 <u 0x1
  6405: d8 b3 0b                 a4 = t1 <u a4
  6408: d4 cb 0b                 a4 = a4 | a5
  6411: 52 0b c0 00              jump @378 if a4 != 0
      :                          @360
  6415: 82 6b                    a4 = u64 [s1]
  6417: ab ab e5                 jump @358 if a4 != a3
      :                          @361
  6420: 7b 67                    u64 [s1] = a0
  6422: 33 0c                    a5 = 0
  6424: 7b 12 18                 u64 [sp + 0x18] = t0
  6427: 33 0a 40 10 03           a3 = 0x31040
  6432: 33 0b 00 00 10           a4 = 0x100000
  6437: 7b 1a                    u64 [sp] = a3
  6439: c8 ba 0a                 a3 = a3 + a4
  6442: c9 7a 07                 a0 = a3 - a0
  6445: 7b 17 10                 u64 [sp + 0x10] = a0
  6448: 7b 18 08                 u64 [sp + 0x8] = a1
  6451: 64 96                    s1 = a2
  6453: 50 20 a0 00 d3 03        ra = 160, jump @448
      :                          @362 [@dyn 80]
  6459: 54 36 00 00 10 98 00     jump @379 if s1 <=u 1048576
      :                          @363
  6466: 82 12 18                 t0 = u64 [sp + 0x18]
  6469: 82 18 10                 a1 = u64 [sp + 0x10]
  6472: 33 07                    a0 = 0
  6474: 7b 28 08                 u64 [t0 + 0x8] = a1
  6477: 28 b5 00                 jump @385
      :                          @364
  6480: 49 12 08                 u64 [t0 + 8] = 0
  6483: 33 07 01                 a0 = 0x1
  6486: 28 ac 00                 jump @385
      :                          @365
  6489: 33 09 40 10 03           a2 = 0x31040
  6494: 33 07 00 00 10           a0 = 0x100000
  6499: c8 79 09                 a2 = a2 + a0
  6502: 01                       fallthrough
      :                          @366
  6503: 82 9a                    a3 = u64 [a2]
  6505: c8 5a 08                 a1 = a3 + s0
  6508: ac a8 5f                 jump @378 if a1 <u a3
      :                          @367
  6511: 95 8b 01                 a4 = a1 + 0x1
  6514: 88 bc 01                 a5 = a4 <u 0x1
  6517: d8 b7 0b                 a4 = a0 <u a4
  6520: d4 cb 0b                 a4 = a4 | a5
  6523: 52 0b 50                 jump @378 if a4 != 0
      :                          @368
  6526: 82 9b                    a4 = u64 [a2]
  6528: ab ab e7                 jump @366 if a4 != a3
      :                          @369
  6531: 7b 98                    u64 [a2] = a1
  6533: 33 0c                    a5 = 0
  6535: 01                       fallthrough
      :                          @370
  6536: ab ab df                 jump @366 if a4 != a3
      :                          @371
  6539: 28 31                    jump @377
      :                          @372
  6541: 33 09 40 10 03           a2 = 0x31040
  6546: 33 07 00 00 10           a0 = 0x100000
  6551: c8 79 09                 a2 = a2 + a0
  6554: 01                       fallthrough
      :                          @373
  6555: 82 9a                    a3 = u64 [a2]
  6557: c8 5a 08                 a1 = a3 + s0
  6560: ac a8 2b                 jump @378 if a1 <u a3
      :                          @374
  6563: 95 8b 01                 a4 = a1 + 0x1
  6566: 88 bc 01                 a5 = a4 <u 0x1
  6569: d8 b7 0b                 a4 = a0 <u a4
  6572: d4 cb 0b                 a4 = a4 | a5
  6575: 52 0b 1c                 jump @378 if a4 != 0
      :                          @375
  6578: 82 9b                    a4 = u64 [a2]
  6580: ab ab e7                 jump @373 if a4 != a3
      :                          @376
  6583: 7b 98                    u64 [a2] = a1
  6585: 33 0c                    a5 = 0
  6587: 01                       fallthrough
      :                          @377
  6588: 33 07 40 10 13           a0 = 0x131040
  6593: c9 87 08                 a1 = a0 - a1
  6596: 33 07                    a0 = 0
  6598: 7b 28 08                 u64 [t0 + 0x8] = a1
  6601: 28 39                    jump @385
      :                          @378
  6603: 33 07 01                 a0 = 0x1
  6606: 7b 27 08                 u64 [t0 + 0x8] = a0
  6609: 28 31                    jump @385
      :                          @379
  6611: 64 6c                    a5 = s1
  6613: 82 17                    a0 = u64 [sp]
  6615: 95 77 00 00 10           a0 = a0 + 0x100000
  6620: 82 12 18                 t0 = u64 [sp + 0x18]
  6623: 82 16 08                 s1 = u64 [sp + 0x8]
  6626: 01                       fallthrough
      :                          @380
  6627: 82 78                    a1 = u64 [a0]
  6629: c9 87 09                 a2 = a0 - a1
  6632: ab 69 11                 jump @384 if a2 != s1
      :                          @381
  6635: c9 c8 09                 a2 = a1 - a5
  6638: 01                       fallthrough
      :                          @382
  6639: 82 7a                    a3 = u64 [a0]
  6641: ab 8a f2                 jump @380 if a3 != a1
      :                          @383
  6644: 7b 79                    u64 [a0] = a2
  6646: 33 0b                    a4 = 0
  6648: 01                       fallthrough
      :                          @384
  6649: 82 18 10                 a1 = u64 [sp + 0x10]
  6652: 33 07                    a0 = 0
  6654: 7b 28 08                 u64 [t0 + 0x8] = a1
  6657: 01                       fallthrough
      :                          @385
  6658: 7b 25 10                 u64 [t0 + 0x10] = s0
  6661: 7b 27                    u64 [t0] = a0
  6663: 82 10 30                 ra = u64 [sp + 0x30]
  6666: 82 15 28                 s0 = u64 [sp + 0x28]
  6669: 82 16 20                 s1 = u64 [sp + 0x20]
  6672: 95 11 38                 sp = sp + 0x38
  6675: 32 00                    ret
      :                          @386
  6677: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  6680: 7b 10 40                 u64 [sp + 0x40] = ra
  6683: 7b 15 38                 u64 [sp + 0x38] = s0
  6686: 7b 16 30                 u64 [sp + 0x30] = s1
  6689: 95 88 01                 a1 = a1 + 0x1
  6692: 51 08 54                 jump @394 if a1 == 0
      :                          @387
  6695: 64 75                    s0 = a0
  6697: 82 77                    a0 = u64 [a0]
  6699: 97 79 01                 a2 = a0 << 0x1
  6702: 33 0a 08                 a3 = 0x8
  6705: e4 a8 08                 a1 = maxu(a1, a3)
  6708: e4 89 06                 s1 = maxu(a2, a1)
  6711: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  6714: 98 88 3f                 a1 = a1 >> 0x3f
  6717: 51 07 12                 jump @389 if a0 == 0
      :                          @388
  6720: 82 59 08                 a2 = u64 [s0 + 0x8]
  6723: 7b 19 18                 u64 [sp + 0x18] = a2
  6726: 49 11 20 01              u64 [sp + 32] = 0x1
  6730: 7b 17 28                 u64 [sp + 0x28] = a0
  6733: 28 06                    jump @390
      :                          @389
  6735: 49 11 20                 u64 [sp + 32] = 0
  6738: 01                       fallthrough
      :                          @390
  6739: 64 17                    a0 = sp
  6741: 95 1a 18                 a3 = sp + 0x18
  6744: 64 69                    a2 = s1
  6746: 50 20 a2 00 6c fe        ra = 162, jump @354
      :                          @391 [@dyn 81]
  6752: 82 18                    a1 = u64 [sp]
  6754: 82 17 08                 a0 = u64 [sp + 0x8]
  6757: 51 08 14                 jump @395 if a1 == 0
      :                          @392
  6760: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  6770: aa 87 0d                 jump @396 if a0 == a1
      :                          @393
  6773: 52 07 18                 jump @397 if a0 != 0
      :                          @394
  6776: 00                       trap
      :                          @395
  6777: 7b 57 08                 u64 [s0 + 0x8] = a0
  6780: 7b 56                    u64 [s0] = s1
  6782: 01                       fallthrough
      :                          @396
  6783: 82 10 40                 ra = u64 [sp + 0x40]
  6786: 82 15 38                 s0 = u64 [sp + 0x38]
  6789: 82 16 30                 s1 = u64 [sp + 0x30]
  6792: 95 11 48                 sp = sp + 0x48
  6795: 32 00                    ret
      :                          @397
  6797: 00                       trap
      :                          @398
  6798: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  6801: 7b 10 30                 u64 [sp + 0x30] = ra
  6804: 7b 15 28                 u64 [sp + 0x28] = s0
  6807: 7b 16 20                 u64 [sp + 0x20] = s1
  6810: 64 89                    a2 = a1
  6812: 82 8a 08                 a3 = u64 [a1 + 0x8]
  6815: 64 75                    s0 = a0
  6817: 51 0a 35                 jump @403 if a3 == 0
      :                          @399
  6820: 82 98                    a1 = u64 [a2]
  6822: 33 07                    a0 = 0
  6824: 95 8b 08                 a4 = a1 + 0x8
  6827: 01                       fallthrough
      :                          @400
  6828: 82 bc                    a5 = u64 [a4]
  6830: c8 c7 07                 a0 = a0 + a5
  6833: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  6836: 95 bb 10                 a4 = a4 + 0x10
  6839: 52 0a f5                 jump @400 if a3 != 0
      :                          @401
  6842: 82 9a 18                 a3 = u64 [a2 + 0x18]
  6845: 51 0a 24                 jump @405 if a3 == 0
      :                          @402
  6848: 82 88 08                 a1 = u64 [a1 + 0x8]
  6851: 8e 88                    a1 = a1 >u 0
  6853: 88 7a 10                 a3 = a0 <u 0x10
  6856: 85 aa 01                 a3 = a3 ^ 0x1
  6859: d4 a8 08                 a1 = a1 | a3
  6862: 89 7a                    a3 = a0 <s 0
  6864: e0 a8 08                 a1 = a1 & ~a3
  6867: 52 08 0a                 jump @404 if a1 != 0
      :                          @403
  6870: 33 07                    a0 = 0
  6872: 33 08 01                 a1 = 0x1
  6875: 28 4a                    jump @413
      :                          @404
  6877: 97 77 01                 a0 = a0 << 0x1
  6880: 01                       fallthrough
      :                          @405
  6881: 51 07 40                 jump @412 if a0 == 0
      :                          @406
  6884: 57 07 79                 jump @418 if a0 <s 0
      :                          @407
  6887: 64 52                    t0 = s0
  6889: 33 0b 40 10 03           a4 = 0x31040
  6894: 33 08 00 00 10           a1 = 0x100000
  6899: c8 8b 0b                 a4 = a4 + a1
  6902: 01                       fallthrough
      :                          @408
  6903: 82 bc                    a5 = u64 [a4]
  6905: c8 7c 0a                 a3 = a5 + a0
  6908: ac ca 5f                 jump @416 if a3 <u a5
      :                          @409
  6911: 95 a5 01                 s0 = a3 + 0x1
  6914: 88 56 01                 s1 = s0 <u 0x1
  6917: d8 58 05                 s0 = a1 <u s0
  6920: d4 65 05                 s0 = s0 | s1
  6923: 52 05 50                 jump @416 if s0 != 0
      :                          @410
  6926: 82 b6                    s1 = u64 [a4]
  6928: ab c6 e7                 jump @408 if s1 != a5
      :                          @411
  6931: 7b ba                    u64 [a4] = a3
  6933: 33 08 40 10 13           a1 = 0x131040
  6938: c9 a8 08                 a1 = a1 - a3
  6941: 64 25                    s0 = t0
  6943: 28 06                    jump @413
      :                          @412
  6945: 33 08 01                 a1 = 0x1
  6948: 01                       fallthrough
      :                          @413
  6949: 7b 17                    u64 [sp] = a0
  6951: 7b 18 08                 u64 [sp + 0x8] = a1
  6954: 49 11 10                 u64 [sp + 16] = 0
  6957: 33 08 b8 04 01           a1 = 0x104b8
  6962: 64 17                    a0 = sp
  6964: 50 20 a4 00 86 06        ra = 164, jump @543
      :                          @414 [@dyn 82]
  6970: 52 07 22                 jump @417 if a0 != 0
      :                          @415
  6973: 82 17 10                 a0 = u64 [sp + 0x10]
  6976: 82 18 08                 a1 = u64 [sp + 0x8]
  6979: 82 19                    a2 = u64 [sp]
  6981: 7b 57 10                 u64 [s0 + 0x10] = a0
  6984: 7b 58 08                 u64 [s0 + 0x8] = a1
  6987: 7b 59                    u64 [s0] = a2
  6989: 82 10 30                 ra = u64 [sp + 0x30]
  6992: 82 15 28                 s0 = u64 [sp + 0x28]
  6995: 82 16 20                 s1 = u64 [sp + 0x20]
  6998: 95 11 38                 sp = sp + 0x38
  7001: 32 00                    ret
      :                          @416
  7003: 00                       trap
      :                          @417
  7004: 00                       trap
      :                          @418
  7005: 00                       trap
      :                          @419 [@dyn 83]
  7006: 82 72                    t0 = u64 [a0]
  7008: 33 09 00 00 f0           a2 = 0xfffffffffff00000
  7013: 95 2a ff ff ef           a3 = t0 + 0xffffffffffefffff
  7018: ac 9a 28                 jump @425 if a3 <u a2
      :                          @420
  7021: 82 77 08                 a0 = u64 [a0 + 0x8]
  7024: 33 09 40 10 03           a2 = 0x31040
  7029: 95 99 00 00 10           a2 = a2 + 0x100000
  7034: 01                       fallthrough
      :                          @421
  7035: 82 9a                    a3 = u64 [a2]
  7037: c9 a9 0b                 a4 = a2 - a3
  7040: ab 7b 12                 jump @425 if a4 != a0
      :                          @422
  7043: c9 2a 0b                 a4 = a3 - t0
  7046: 01                       fallthrough
      :                          @423
  7047: 82 9c                    a5 = u64 [a2]
  7049: ab ac f2                 jump @421 if a5 != a3
      :                          @424
  7052: 7b 9b                    u64 [a2] = a4
  7054: 33 08                    a1 = 0
  7056: 32 00                    ret
      :                          @425
  7058: 32 00                    ret
      :                          @426 [@dyn 84]
  7060: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  7063: 7b 10 18                 u64 [sp + 0x18] = ra
  7066: 7b 15 10                 u64 [sp + 0x10] = s0
  7069: 7b 16 08                 u64 [sp + 0x8] = s1
  7072: 64 75                    s0 = a0
  7074: 82 7a 10                 a3 = u64 [a0 + 0x10]
  7077: 82 77                    a0 = u64 [a0]
  7079: c9 a7 07                 a0 = a0 - a3
  7082: 64 96                    s1 = a2
  7084: ac 97 2b                 jump @429 if a0 <u a2
      :                          @427
  7087: 7b 1a                    u64 [sp] = a3
  7089: 82 57 08                 a0 = u64 [s0 + 0x8]
  7092: c8 a7 07                 a0 = a0 + a3
  7095: 64 69                    a2 = s1
  7097: 50 20 aa 00 4f 01        ra = 170, jump @448
      :                          @428 [@dyn 85]
  7103: 82 17                    a0 = u64 [sp]
  7105: c8 76 06                 s1 = s1 + a0
  7108: 7b 56 10                 u64 [s0 + 0x10] = s1
  7111: 33 07                    a0 = 0
  7113: 82 10 18                 ra = u64 [sp + 0x18]
  7116: 82 15 10                 s0 = u64 [sp + 0x10]
  7119: 82 16 08                 s1 = u64 [sp + 0x8]
  7122: 95 11 20                 sp = sp + 0x20
  7125: 32 00                    ret
      :                          @429
  7127: 64 57                    a0 = s0
  7129: 7b 18                    u64 [sp] = a1
  7131: 64 a8                    a1 = a3
  7133: 64 69                    a2 = s1
  7135: 50 20 ac 00 6f fc        ra = 172, jump @342
      :                          @430 [@dyn 86]
  7141: 82 18                    a1 = u64 [sp]
  7143: 82 5a 10                 a3 = u64 [s0 + 0x10]
  7146: 28 c5                    jump @427
      :                          @431 [@dyn 87]
  7148: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  7151: 7b 10 20                 u64 [sp + 0x20] = ra
  7154: 7b 15 18                 u64 [sp + 0x18] = s0
  7157: 7b 16 10                 u64 [sp + 0x10] = s1
  7160: 64 86                    s1 = a1
  7162: 83 88                    i32 a1 = a1 + 0
  7164: 33 09 80 00              a2 = 0x80
  7168: 64 7a                    a3 = a0
  7170: ae 98 2c                 jump @436 if a1 >=u a2
      :                          @432
  7173: 82 a8 10                 a1 = u64 [a3 + 0x10]
  7176: 82 a7                    a0 = u64 [a3]
  7178: ab 78 13                 jump @435 if a1 != a0
      :                          @433
  7181: 64 a7                    a0 = a3
  7183: 64 a5                    s0 = a3
  7185: 50 20 b0 00 04 fe        ra = 176, jump @386
      :                          @434 [@dyn 88]
  7191: 64 5a                    a3 = s0
  7193: 82 58 10                 a1 = u64 [s0 + 0x10]
  7196: 01                       fallthrough
      :                          @435
  7197: 82 a7 08                 a0 = u64 [a3 + 0x8]
  7200: c8 87 07                 a0 = a0 + a1
  7203: 78 76                    u8 [a0] = s1
  7205: 95 88 01                 a1 = a1 + 0x1
  7208: 7b a8 10                 u64 [a3 + 0x10] = a1
  7211: 28 ac 00                 jump @444
      :                          @436
  7214: 8b 67 0b                 i32 a0 = s1 >> 0xb
  7217: 48 11 0c                 u32 [sp + 12] = 0
  7220: 52 07 1c                 jump @438 if a0 != 0
      :                          @437
  7223: 98 67 06                 a0 = s1 >> 0x6
  7226: 86 77 c0 00              a0 = a0 | 0xc0
  7230: 78 17 0c                 u8 [sp + 0xc] = a0
  7233: 84 67 3f                 a0 = s1 & 0x3f
  7236: 86 77 80 00              a0 = a0 | 0x80
  7240: 78 17 0d                 u8 [sp + 0xd] = a0
  7243: 33 06 02                 s1 = 0x2
  7246: 28 63                    jump @441
      :                          @438
  7248: 8b 67 10                 i32 a0 = s1 >> 0x10
  7251: 52 07 29                 jump @440 if a0 != 0
      :                          @439
  7254: 98 67 0c                 a0 = s1 >> 0xc
  7257: 86 77 e0 00              a0 = a0 | 0xe0
  7261: 78 17 0c                 u8 [sp + 0xc] = a0
  7264: 97 67 34                 a0 = s1 << 0x34
  7267: 98 77 3a                 a0 = a0 >> 0x3a
  7270: 95 77 80 00              a0 = a0 + 0x80
  7274: 78 17 0d                 u8 [sp + 0xd] = a0
  7277: 84 67 3f                 a0 = s1 & 0x3f
  7280: 86 77 80 00              a0 = a0 | 0x80
  7284: 78 17 0e                 u8 [sp + 0xe] = a0
  7287: 33 06 03                 s1 = 0x3
  7290: 28 37                    jump @441
      :                          @440
  7292: 97 67 2b                 a0 = s1 << 0x2b
  7295: 98 77 3d                 a0 = a0 >> 0x3d
  7298: 95 77 f0 00              a0 = a0 + 0xf0
  7302: 78 17 0c                 u8 [sp + 0xc] = a0
  7305: 97 67 2e                 a0 = s1 << 0x2e
  7308: 98 77 3a                 a0 = a0 >> 0x3a
  7311: 95 77 80 00              a0 = a0 + 0x80
  7315: 78 17 0d                 u8 [sp + 0xd] = a0
  7318: 97 67 34                 a0 = s1 << 0x34
  7321: 98 77 3a                 a0 = a0 >> 0x3a
  7324: 95 77 80 00              a0 = a0 + 0x80
  7328: 78 17 0e                 u8 [sp + 0xe] = a0
  7331: 84 67 3f                 a0 = s1 & 0x3f
  7334: 86 77 80 00              a0 = a0 | 0x80
  7338: 78 17 0f                 u8 [sp + 0xf] = a0
  7341: 33 06 04                 s1 = 0x4
  7344: 01                       fallthrough
      :                          @441
  7345: 82 a5 10                 s0 = u64 [a3 + 0x10]
  7348: 82 a7                    a0 = u64 [a3]
  7350: c9 57 07                 a0 = a0 - s0
  7353: ac 67 2e                 jump @445 if a0 <u s1
      :                          @442
  7356: 7b 1a                    u64 [sp] = a3
  7358: 82 a7 08                 a0 = u64 [a3 + 0x8]
  7361: c8 57 07                 a0 = a0 + s0
  7364: 95 18 0c                 a1 = sp + 0xc
  7367: 64 69                    a2 = s1
  7369: 50 20 b2 00 3f           ra = 178, jump @448
      :                          @443 [@dyn 89]
  7374: c8 56 06                 s1 = s1 + s0
  7377: 82 17                    a0 = u64 [sp]
  7379: 7b 76 10                 u64 [a0 + 0x10] = s1
  7382: 01                       fallthrough
      :                          @444
  7383: 33 07                    a0 = 0
  7385: 82 10 20                 ra = u64 [sp + 0x20]
  7388: 82 15 18                 s0 = u64 [sp + 0x18]
  7391: 82 16 10                 s1 = u64 [sp + 0x10]
  7394: 95 11 28                 sp = sp + 0x28
  7397: 32 00                    ret
      :                          @445
  7399: 64 a7                    a0 = a3
  7401: 64 58                    a1 = s0
  7403: 64 69                    a2 = s1
  7405: 64 a5                    s0 = a3
  7407: 50 20 b4 00 5f fb        ra = 180, jump @342
      :                          @446 [@dyn 90]
  7413: 64 5a                    a3 = s0
  7415: 82 55 10                 s0 = u64 [s0 + 0x10]
  7418: 28 c2                    jump @442
      :                          @447 [@dyn 91]
  7420: 64 8a                    a3 = a1
  7422: 33 08 b8 04 01           a1 = 0x104b8
  7427: 64 a9                    a2 = a3
  7429: 28 b5 04                 jump @543
      :                          @448
  7432: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  7435: 7b 10 18                 u64 [sp + 0x18] = ra
  7438: 7b 15 10                 u64 [sp + 0x10] = s0
  7441: 7b 16 08                 u64 [sp + 0x8] = s1
  7444: 53 19 10 64              jump @457 if a2 <u 16
      :                          @449
  7448: 8d 7a                    i32 a3 = -a0
  7450: 84 a2 07                 t0 = a3 & 0x7
  7453: c8 27 0b                 a4 = a0 + t0
  7456: 51 02 15                 jump @452 if t0 == 0
      :                          @450
  7459: 64 8c                    a5 = a1
  7461: 64 75                    s0 = a0
  7463: 01                       fallthrough
      :                          @451
  7464: 7c ca                    a3 = u8 [a5]
  7466: 78 5a                    u8 [s0] = a3
  7468: 95 55 01                 s0 = s0 + 0x1
  7471: 95 cc 01                 a5 = a5 + 0x1
  7474: ac b5 f6                 jump @451 if s0 <u a4
      :                          @452
  7477: c8 28 03                 t1 = a1 + t0
  7480: c9 29 02                 t0 = a2 - t0
  7483: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  7486: 84 38 07                 a1 = t1 & 0x7
  7489: c8 4b 0a                 a3 = a4 + t2
  7492: 51 08 3b                 jump @459 if a1 == 0
      :                          @453
  7495: 58 04 4b                 jump @462 if t2 <=s 0
      :                          @454
  7498: 97 38 03                 a1 = t1 << 0x3
  7501: 84 80 38                 ra = a1 & 0x38
  7504: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  7507: 82 c5                    s0 = u64 [a5]
  7509: 8d 88                    i32 a1 = -a1
  7511: 84 88 38                 a1 = a1 & 0x38
  7514: 95 cc 08                 a5 = a5 + 0x8
  7517: 01                       fallthrough
      :                          @455
  7518: 82 c6                    s1 = u64 [a5]
  7520: d0 05 05                 s0 = s0 >> ra
  7523: cf 86 09                 a2 = s1 << a1
  7526: d4 59 09                 a2 = a2 | s0
  7529: 7b b9                    u64 [a4] = a2
  7531: 95 bb 08                 a4 = a4 + 0x8
  7534: 95 cc 08                 a5 = a5 + 0x8
  7537: 64 65                    s0 = s1
  7539: ac ab eb                 jump @455 if a4 <u a3
      :                          @456
  7542: 28 1c                    jump @462
      :                          @457
  7544: 64 7a                    a3 = a0
  7546: 52 09 21                 jump @463 if a2 != 0
      :                          @458
  7549: 28 2f                    jump @465
      :                          @459
  7551: 58 04 13                 jump @462 if t2 <=s 0
      :                          @460
  7554: 64 38                    a1 = t1
  7556: 01                       fallthrough
      :                          @461
  7557: 82 89                    a2 = u64 [a1]
  7559: 7b b9                    u64 [a4] = a2
  7561: 95 bb 08                 a4 = a4 + 0x8
  7564: 95 88 08                 a1 = a1 + 0x8
  7567: ac ab f6                 jump @461 if a4 <u a3
      :                          @462
  7570: c8 43 08                 a1 = t1 + t2
  7573: 84 29 07                 a2 = t0 & 0x7
  7576: 51 09 14                 jump @465 if a2 == 0
      :                          @463
  7579: c8 a9 09                 a2 = a2 + a3
  7582: 01                       fallthrough
      :                          @464
  7583: 7c 8b                    a4 = u8 [a1]
  7585: 78 ab                    u8 [a3] = a4
  7587: 95 aa 01                 a3 = a3 + 0x1
  7590: 95 88 01                 a1 = a1 + 0x1
  7593: ac 9a f6                 jump @464 if a3 <u a2
      :                          @465
  7596: 82 10 18                 ra = u64 [sp + 0x18]
  7599: 82 15 10                 s0 = u64 [sp + 0x10]
  7602: 82 16 08                 s1 = u64 [sp + 0x8]
  7605: 95 11 20                 sp = sp + 0x20
  7608: 32 00                    ret
      :                          @466
  7610: 53 19 10 48              jump @475 if a2 <u 16
      :                          @467
  7614: 8d 7a                    i32 a3 = -a0
  7616: 84 aa 07                 a3 = a3 & 0x7
  7619: c8 a7 0b                 a4 = a0 + a3
  7622: 51 0a 0e                 jump @470 if a3 == 0
      :                          @468
  7625: 64 7c                    a5 = a0
  7627: 01                       fallthrough
      :                          @469
  7628: 78 c8                    u8 [a5] = a1
  7630: 95 cc 01                 a5 = a5 + 0x1
  7633: ac bc fb                 jump @469 if a5 <u a4
      :                          @470
  7636: c9 a9 03                 t1 = a2 - a3
  7639: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  7642: c8 cb 0a                 a3 = a4 + a5
  7645: 58 0c 1d                 jump @473 if a5 <=s 0
      :                          @471
  7648: 84 82 ff 00              t0 = a1 & 0xff
  7652: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  7662: ca 92 0c                 a5 = t0 * a2
  7665: 01                       fallthrough
      :                          @472
  7666: 7b bc                    u64 [a4] = a5
  7668: 95 bb 08                 a4 = a4 + 0x8
  7671: ac ab fb                 jump @472 if a4 <u a3
      :                          @473
  7674: 84 39 07                 a2 = t1 & 0x7
  7677: 52 09 0a                 jump @476 if a2 != 0
      :                          @474
  7680: 28 13                    jump @478
      :                          @475
  7682: 64 7a                    a3 = a0
  7684: 51 09 0f                 jump @478 if a2 == 0
      :                          @476
  7687: c8 a9 09                 a2 = a2 + a3
  7690: 01                       fallthrough
      :                          @477
  7691: 78 a8                    u8 [a3] = a1
  7693: 95 aa 01                 a3 = a3 + 0x1
  7696: ac 9a fb                 jump @477 if a3 <u a2
      :                          @478
  7699: 32 00                    ret
      :                          @479 [@dyn 92]
  7701: 82 77                    a0 = u64 [a0]
  7703: 01                       fallthrough
      :                          @480
  7704: 28                       jump @480
      :                          @481
  7705: 95 11 a8                 sp = sp + 0xffffffffffffffa8
  7708: 7b 10 50                 u64 [sp + 0x50] = ra
  7711: 7b 15 48                 u64 [sp + 0x48] = s0
  7714: 7b 16 40                 u64 [sp + 0x40] = s1
  7717: 7b 18                    u64 [sp] = a1
  7719: 98 79 04                 a2 = a0 >> 0x4
  7722: 33 08 27                 a1 = 0x27
  7725: 53 29 71 02 81 00        jump @484 if a2 <u 625
      :                          @482
  7731: 33 08 27                 a1 = 0x27
  7734: 95 1a 3e                 a3 = sp + 0x3e
  7737: 3a 09 00 00 03           a2 = u64 [0x30000]
  7742: 7b 19 10                 u64 [sp + 0x10] = a2
  7745: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
  7751: 33 04 7b 14              t2 = 0x147b
  7755: 33 0b 34 05 01           a4 = 0x10534
  7760: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
  7766: 01                       fallthrough
      :                          @483
  7767: 64 72                    t0 = a0
  7769: 82 17 10                 a0 = u64 [sp + 0x10]
  7772: d6 72 07                 a0 = t0 mulhu a0
  7775: 98 77 0b                 a0 = a0 >> 0xb
  7778: 82 19 08                 a2 = u64 [sp + 0x8]
  7781: c0 97 0c                 i32 a5 = a0 * a2
  7784: c8 2c 06                 s1 = a5 + t0
  7787: 97 6c 30                 a5 = s1 << 0x30
  7790: 98 cc 32                 a5 = a5 >> 0x32
  7793: ca 4c 0c                 a5 = a5 * t2
  7796: 98 c3 11                 t1 = a5 >> 0x11
  7799: 98 cc 10                 a5 = a5 >> 0x10
  7802: 84 cc fe 07              a5 = a5 & 0x7fe
  7806: 96 39 9c                 a2 = t1 * 0xffffffffffffff9c
  7809: c8 69 09                 a2 = a2 + s1
  7812: 97 99 31                 a2 = a2 << 0x31
  7815: 98 99 30                 a2 = a2 >> 0x30
  7818: c8 bc 0c                 a5 = a5 + a4
  7821: 7c c6                    s1 = u8 [a5]
  7823: 7c cc 01                 a5 = u8 [a5 + 0x1]
  7826: c8 b9 09                 a2 = a2 + a4
  7829: 7c 95 01                 s0 = u8 [a2 + 0x1]
  7832: 7c 99                    a2 = u8 [a2]
  7834: 78 ac ff                 u8 [a3 + 0xffffffffffffffff] = a5
  7837: 78 a6 fe                 u8 [a3 + 0xfffffffffffffffe] = s1
  7840: 78 a5 01                 u8 [a3 + 0x1] = s0
  7843: 78 a9                    u8 [a3] = a2
  7845: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
  7848: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
  7851: ac 20 ac                 jump @483 if ra <u t0
      :                          @484
  7854: 54 17 63 3b              jump @486 if a0 <=u 99
      :                          @485
  7858: 97 79 30                 a2 = a0 << 0x30
  7861: 98 99 32                 a2 = a2 >> 0x32
  7864: 96 99 7b 14              a2 = a2 * 0x147b
  7868: 98 99 11                 a2 = a2 >> 0x11
  7871: 96 9a 9c                 a3 = a2 * 0xffffffffffffff9c
  7874: c8 a7 07                 a0 = a0 + a3
  7877: 97 77 31                 a0 = a0 << 0x31
  7880: 98 77 30                 a0 = a0 >> 0x30
  7883: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  7886: 33 0a 34 05 01           a3 = 0x10534
  7891: c8 a7 07                 a0 = a0 + a3
  7894: 7c 7a 01                 a3 = u8 [a0 + 0x1]
  7897: 7c 77                    a0 = u8 [a0]
  7899: 95 1b 19                 a4 = sp + 0x19
  7902: c8 8b 0b                 a4 = a4 + a1
  7905: 78 ba 01                 u8 [a4 + 0x1] = a3
  7908: 78 b7                    u8 [a4] = a0
  7910: 64 97                    a0 = a2
  7912: 01                       fallthrough
      :                          @486
  7913: 55 17 0a 14              jump @488 if a0 >=u 10
      :                          @487
  7917: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  7920: 95 19 19                 a2 = sp + 0x19
  7923: c8 89 09                 a2 = a2 + a1
  7926: 83 77 30                 i32 a0 = a0 + 0x30
  7929: 78 97                    u8 [a2] = a0
  7931: 28 21                    jump @489
      :                          @488
  7933: 97 77 01                 a0 = a0 << 0x1
  7936: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  7939: 33 09 34 05 01           a2 = 0x10534
  7944: c8 97 07                 a0 = a0 + a2
  7947: 7c 79 01                 a2 = u8 [a0 + 0x1]
  7950: 7c 77                    a0 = u8 [a0]
  7952: 95 1a 19                 a3 = sp + 0x19
  7955: c8 8a 0a                 a3 = a3 + a1
  7958: 78 a9 01                 u8 [a3 + 0x1] = a2
  7961: 78 a7                    u8 [a3] = a0
  7963: 01                       fallthrough
      :                          @489
  7964: 95 1a 19                 a3 = sp + 0x19
  7967: c8 8a 0a                 a3 = a3 + a1
  7970: 9a 8b 27                 a4 = 0x27 - a1
  7973: 33 08 e8 04 01           a1 = 0x104e8
  7978: 82 17                    a0 = u64 [sp]
  7980: 33 09                    a2 = 0
  7982: 50 20 ba 00 13           ra = 186, jump @491
      :                          @490 [@dyn 93]
  7987: 82 10 50                 ra = u64 [sp + 0x50]
  7990: 82 15 48                 s0 = u64 [sp + 0x48]
  7993: 82 16 40                 s1 = u64 [sp + 0x40]
  7996: 95 11 58                 sp = sp + 0x58
  7999: 32 00                    ret
      :                          @491
  8001: 95 11 98                 sp = sp + 0xffffffffffffff98
  8004: 7b 10 60                 u64 [sp + 0x60] = ra
  8007: 7b 15 58                 u64 [sp + 0x58] = s0
  8010: 7b 16 50                 u64 [sp + 0x50] = s1
  8013: 80 73 34                 t1 = u32 [a0 + 0x34]
  8016: 7b 1a 20                 u64 [sp + 0x20] = a3
  8019: 64 9c                    a5 = a2
  8021: 84 36 01                 s1 = t1 & 0x1
  8024: 33 02 2b                 t0 = 0x2b
  8027: 33 09 00 00 11           a2 = 0x110000
  8032: 84 3a 04                 a3 = t1 & 0x4
  8035: 7b 1b 28                 u64 [sp + 0x28] = a4
  8038: c8 b6 04                 t2 = s1 + a4
  8041: 7b 1c 30                 u64 [sp + 0x30] = a5
  8044: 52 0a 10                 jump @494 if a3 != 0
      :                          @492
  8047: 49 11 38                 u64 [sp + 56] = 0
  8050: 82 78                    a1 = u64 [a0]
  8052: 94 69 2b                 a2 = 0x2b if s1 != 0
  8055: 52 08 35                 jump @498 if a1 != 0
      :                          @493
  8058: 28 56                    jump @503
      :                          @494
  8060: 7b 18 38                 u64 [sp + 0x38] = a1
  8063: 33 09                    a2 = 0
  8065: 51 0c 1b                 jump @497 if a5 == 0
      :                          @495
  8068: 82 1b 38                 a4 = u64 [sp + 0x38]
  8071: 01                       fallthrough
      :                          @496
  8072: 7d b5                    s0 = i8 [a4]
  8074: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
  8077: 85 5a 01                 a3 = s0 ^ 0x1
  8080: c8 a9 09                 a2 = a2 + a3
  8083: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  8086: 95 bb 01                 a4 = a4 + 0x1
  8089: 52 0c ef                 jump @496 if a5 != 0
      :                          @497
  8092: c8 94 04                 t2 = t2 + a2
  8095: 33 09 00 00 11           a2 = 0x110000
  8100: 82 78                    a1 = u64 [a0]
  8102: db 62 09                 a2 = t0 if s1 != 0
  8105: 51 08 27                 jump @503 if a1 == 0
      :                          @498
  8108: 82 7a 08                 a3 = u64 [a0 + 0x8]
  8111: ae a4 21                 jump @503 if t2 >=u a3
      :                          @499
  8114: 84 38 08                 a1 = t1 & 0x8
  8117: 52 08 51                 jump @506 if a1 != 0
      :                          @500
  8120: 7c 76 38                 s1 = u8 [a0 + 0x38]
  8123: c9 4a 0a                 a3 = a3 - t2
  8126: 7b 19 18                 u64 [sp + 0x18] = a2
  8129: 5a 16 01 a0 00           jump @513 if s1 >s 1
      :                          @501
  8134: 52 06 ad 00              jump @515 if s1 != 0
      :                          @502
  8138: 7b 1a 10                 u64 [sp + 0x10] = a3
  8141: 28 ac 00                 jump @516
      :                          @503
  8144: 82 75 20                 s0 = u64 [a0 + 0x20]
  8147: 82 76 28                 s1 = u64 [a0 + 0x28]
  8150: 64 57                    a0 = s0
  8152: 64 68                    a1 = s1
  8154: 82 1a 38                 a3 = u64 [sp + 0x38]
  8157: 82 1b 30                 a4 = u64 [sp + 0x30]
  8160: 50 20 bc 00 75 01        ra = 188, jump @536
      :                          @504 [@dyn 94]
  8166: 33 08 01                 a1 = 0x1
  8169: 52 07 be 00              jump @521 if a0 != 0
      :                          @505
  8173: 82 6c 18                 a5 = u64 [s1 + 0x18]
  8176: 64 57                    a0 = s0
  8178: 82 18 20                 a1 = u64 [sp + 0x20]
  8181: 82 19 28                 a2 = u64 [sp + 0x28]
  8184: 82 10 60                 ra = u64 [sp + 0x60]
  8187: 82 15 58                 s0 = u64 [sp + 0x58]
  8190: 82 16 50                 s1 = u64 [sp + 0x50]
  8193: 95 11 68                 sp = sp + 0x68
  8196: 32 0c                    jump [a5]
      :                          @506
  8198: 7b 1a 40                 u64 [sp + 0x40] = a3
  8201: 64 45                    s0 = t2
  8203: 81 78 30                 a1 = i32 [a0 + 0x30]
  8206: 7b 18 10                 u64 [sp + 0x10] = a1
  8209: 7c 7a 38                 a3 = u8 [a0 + 0x38]
  8212: 7b 1a 08                 u64 [sp + 0x8] = a3
  8215: 82 7a 20                 a3 = u64 [a0 + 0x20]
  8218: 82 78 28                 a1 = u64 [a0 + 0x28]
  8221: 48 17 30 30              u32 [a0 + 48] = 0x30
  8225: 7b 17                    u64 [sp] = a0
  8227: 46 17 38 01              u8 [a0 + 56] = 0x1
  8231: 7b 1a 48                 u64 [sp + 0x48] = a3
  8234: 64 a7                    a0 = a3
  8236: 64 86                    s1 = a1
  8238: 82 1a 38                 a3 = u64 [sp + 0x38]
  8241: 82 1b 30                 a4 = u64 [sp + 0x30]
  8244: 50 20 be 00 21 01        ra = 190, jump @536
      :                          @507 [@dyn 95]
  8250: 52 07 69                 jump @520 if a0 != 0
      :                          @508
  8253: 82 17 40                 a0 = u64 [sp + 0x40]
  8256: c9 57 05                 s0 = a0 - s0
  8259: 95 55 01                 s0 = s0 + 0x1
  8262: 01                       fallthrough
      :                          @509
  8263: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  8266: 51 05 cb 00              jump @531 if s0 == 0
      :                          @510
  8270: 82 69 20                 a2 = u64 [s1 + 0x20]
  8273: 33 08 30                 a1 = 0x30
  8276: 82 17 48                 a0 = u64 [sp + 0x48]
  8279: b4 90 02 c0 00           ra = 192, jump [a2]
      :                          @511 [@dyn 96]
  8284: 51 07 eb                 jump @509 if a0 == 0
      :                          @512
  8287: 28 44                    jump @520
      :                          @513
  8289: 52 16 02 12              jump @515 if s1 != 2
      :                          @514
  8293: 98 a6 01                 s1 = a3 >> 0x1
  8296: 95 a8 01                 a1 = a3 + 0x1
  8299: 98 88 01                 a1 = a1 >> 0x1
  8302: 7b 18 10                 u64 [sp + 0x10] = a1
  8305: 28 08                    jump @516
      :                          @515
  8307: 64 a6                    s1 = a3
  8309: 49 11 10                 u64 [sp + 16] = 0
  8312: 01                       fallthrough
      :                          @516
  8313: 82 78 20                 a1 = u64 [a0 + 0x20]
  8316: 7b 18 48                 u64 [sp + 0x48] = a1
  8319: 82 75 28                 s0 = u64 [a0 + 0x28]
  8322: 81 77 30                 a0 = i32 [a0 + 0x30]
  8325: 7b 17 40                 u64 [sp + 0x40] = a0
  8328: 95 66 01                 s1 = s1 + 0x1
  8331: 01                       fallthrough
      :                          @517
  8332: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  8335: 51 06 28                 jump @522 if s1 == 0
      :                          @518
  8338: 82 59 20                 a2 = u64 [s0 + 0x20]
  8341: 82 17 48                 a0 = u64 [sp + 0x48]
  8344: 82 18 40                 a1 = u64 [sp + 0x40]
  8347: b4 90 02 c2 00           ra = 194, jump [a2]
      :                          @519 [@dyn 97]
  8352: 51 07 ec                 jump @517 if a0 == 0
      :                          @520
  8355: 33 08 01                 a1 = 0x1
  8358: 01                       fallthrough
      :                          @521
  8359: 64 87                    a0 = a1
  8361: 82 10 60                 ra = u64 [sp + 0x60]
  8364: 82 15 58                 s0 = u64 [sp + 0x58]
  8367: 82 16 50                 s1 = u64 [sp + 0x50]
  8370: 95 11 68                 sp = sp + 0x68
  8373: 32 00                    ret
      :                          @522
  8375: 82 16 48                 s1 = u64 [sp + 0x48]
  8378: 64 67                    a0 = s1
  8380: 64 58                    a1 = s0
  8382: 82 19 18                 a2 = u64 [sp + 0x18]
  8385: 82 1a 38                 a3 = u64 [sp + 0x38]
  8388: 82 1b 30                 a4 = u64 [sp + 0x30]
  8391: 50 20 c4 00 8e 00        ra = 196, jump @536
      :                          @523 [@dyn 98]
  8397: 33 08 01                 a1 = 0x1
  8400: 52 07 d7                 jump @521 if a0 != 0
      :                          @524
  8403: 82 5a 18                 a3 = u64 [s0 + 0x18]
  8406: 64 67                    a0 = s1
  8408: 82 18 20                 a1 = u64 [sp + 0x20]
  8411: 82 19 28                 a2 = u64 [sp + 0x28]
  8414: b4 a0 02 c6 00           ra = 198, jump [a3]
      :                          @525 [@dyn 99]
  8419: 33 08 01                 a1 = 0x1
  8422: 52 07 c1                 jump @521 if a0 != 0
      :                          @526
  8425: 82 17 10                 a0 = u64 [sp + 0x10]
  8428: 9a 77                    a0 = -a0
  8430: 7b 17 38                 u64 [sp + 0x38] = a0
  8433: 33 06 ff                 s1 = 0xffffffffffffffff
  8436: 01                       fallthrough
      :                          @527
  8437: 82 17 38                 a0 = u64 [sp + 0x38]
  8440: c8 67 07                 a0 = a0 + s1
  8443: 51 17 ff 45              jump @534 if a0 == 4294967295
      :                          @528
  8447: 82 59 20                 a2 = u64 [s0 + 0x20]
  8450: 82 17 48                 a0 = u64 [sp + 0x48]
  8453: 82 18 40                 a1 = u64 [sp + 0x40]
  8456: b4 90 02 c8 00           ra = 200, jump [a2]
      :                          @529 [@dyn 100]
  8461: 95 66 01                 s1 = s1 + 0x1
  8464: 51 07 e5                 jump @527 if a0 == 0
      :                          @530
  8467: 28 39                    jump @535
      :                          @531
  8469: 82 6a 18                 a3 = u64 [s1 + 0x18]
  8472: 82 17 48                 a0 = u64 [sp + 0x48]
  8475: 82 18 20                 a1 = u64 [sp + 0x20]
  8478: 82 19 28                 a2 = u64 [sp + 0x28]
  8481: b4 a0 02 ca 00           ra = 202, jump [a3]
      :                          @532 [@dyn 101]
  8486: 33 08 01                 a1 = 0x1
  8489: 52 07 7e ff              jump @521 if a0 != 0
      :                          @533
  8493: 33 08                    a1 = 0
  8495: 82 16                    s1 = u64 [sp]
  8497: 82 17 10                 a0 = u64 [sp + 0x10]
  8500: 7a 67 30                 u32 [s1 + 0x30] = a0
  8503: 82 17 08                 a0 = u64 [sp + 0x8]
  8506: 78 67 38                 u8 [s1 + 0x38] = a0
  8509: 28 6a ff                 jump @521
      :                          @534
  8512: 82 16 10                 s1 = u64 [sp + 0x10]
  8515: 82 17 10                 a0 = u64 [sp + 0x10]
  8518: d8 76 08                 a1 = s1 <u a0
  8521: 28 5e ff                 jump @521
      :                          @535
  8524: 82 17 10                 a0 = u64 [sp + 0x10]
  8527: d8 76 08                 a1 = s1 <u a0
  8530: 28 55 ff                 jump @521
      :                          @536
  8533: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  8536: 7b 10 20                 u64 [sp + 0x20] = ra
  8539: 7b 15 18                 u64 [sp + 0x18] = s0
  8542: 7b 16 10                 u64 [sp + 0x10] = s1
  8545: 83 9c                    i32 a5 = a2 + 0
  8547: 33 02 00 00 11           t0 = 0x110000
  8552: 64 a6                    s1 = a3
  8554: 64 85                    s0 = a1
  8556: 64 7a                    a3 = a0
  8558: aa 2c 21                 jump @539 if a5 == t0
      :                          @537
  8561: 82 5c 20                 a5 = u64 [s0 + 0x20]
  8564: 64 a7                    a0 = a3
  8566: 64 98                    a1 = a2
  8568: 7b 1b 08                 u64 [sp + 0x8] = a4
  8571: 7b 1a                    u64 [sp] = a3
  8573: b4 c0 02 cc 00           ra = 204, jump [a5]
      :                          @538 [@dyn 102]
  8578: 82 1a                    a3 = u64 [sp]
  8580: 82 1b 08                 a4 = u64 [sp + 0x8]
  8583: 64 78                    a1 = a0
  8585: 33 07 01                 a0 = 0x1
  8588: 52 08 20                 jump @542 if a1 != 0
      :                          @539
  8591: 51 06 1a                 jump @541 if s1 == 0
      :                          @540
  8594: 82 5c 18                 a5 = u64 [s0 + 0x18]
  8597: 64 a7                    a0 = a3
  8599: 64 68                    a1 = s1
  8601: 64 b9                    a2 = a4
  8603: 82 10 20                 ra = u64 [sp + 0x20]
  8606: 82 15 18                 s0 = u64 [sp + 0x18]
  8609: 82 16 10                 s1 = u64 [sp + 0x10]
  8612: 95 11 28                 sp = sp + 0x28
  8615: 32 0c                    jump [a5]
      :                          @541
  8617: 33 07                    a0 = 0
  8619: 01                       fallthrough
      :                          @542
  8620: 82 10 20                 ra = u64 [sp + 0x20]
  8623: 82 15 18                 s0 = u64 [sp + 0x18]
  8626: 82 16 10                 s1 = u64 [sp + 0x10]
  8629: 95 11 28                 sp = sp + 0x28
  8632: 32 00                    ret
      :                          @543
  8634: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  8638: 7b 10 80 00              u64 [sp + 0x80] = ra
  8642: 7b 15 78                 u64 [sp + 0x78] = s0
  8645: 7b 16 70                 u64 [sp + 0x70] = s1
  8648: 49 11 60 20              u64 [sp + 96] = 0x20
  8652: 33 0a 03                 a3 = 0x3
  8655: 78 1a 68                 u8 [sp + 0x68] = a3
  8658: 82 96 20                 s1 = u64 [a2 + 0x20]
  8661: 49 11 30                 u64 [sp + 48] = 0
  8664: 49 11 40                 u64 [sp + 64] = 0
  8667: 7b 17 50                 u64 [sp + 0x50] = a0
  8670: 7b 18 58                 u64 [sp + 0x58] = a1
  8673: 51 06 0a 01              jump @565 if s1 == 0
      :                          @544
  8677: 82 97 28                 a0 = u64 [a2 + 0x28]
  8680: 51 07 79 01              jump @575 if a0 == 0
      :                          @545
  8684: 49 11 28                 u64 [sp + 40] = 0
  8687: 82 95                    s0 = u64 [a2]
  8689: 7b 19 08                 u64 [sp + 0x8] = a2
  8692: 82 98 10                 a1 = u64 [a2 + 0x10]
  8695: 7b 18 18                 u64 [sp + 0x18] = a1
  8698: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  8701: 97 88 03                 a1 = a1 << 0x3
  8704: 98 88 03                 a1 = a1 >> 0x3
  8707: 95 88 01                 a1 = a1 + 0x1
  8710: 7b 18                    u64 [sp] = a1
  8712: 95 55 08                 s0 = s0 + 0x8
  8715: 96 78 38                 a1 = a0 * 0x38
  8718: 95 66 18                 s1 = s1 + 0x18
  8721: 33 07 b8 00              a0 = 0xb8
  8725: 7b 17 10                 u64 [sp + 0x10] = a0
  8728: 01                       fallthrough
      :                          @546
  8729: 7b 18 20                 u64 [sp + 0x20] = a1
  8732: 82 59                    a2 = u64 [s0]
  8734: 51 09 18                 jump @549 if a2 == 0
      :                          @547
  8737: 82 1a 58                 a3 = u64 [sp + 0x58]
  8740: 82 17 50                 a0 = u64 [sp + 0x50]
  8743: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  8746: 82 aa 18                 a3 = u64 [a3 + 0x18]
  8749: b4 a0 02 ce 00           ra = 206, jump [a3]
      :                          @548 [@dyn 103]
  8754: 52 07 55 01              jump @578 if a0 != 0
      :                          @549
  8758: 81 67 10                 a0 = i32 [s1 + 0x10]
  8761: 7a 17 60                 u32 [sp + 0x60] = a0
  8764: 7c 67 18                 a0 = u8 [s1 + 0x18]
  8767: 78 17 68                 u8 [sp + 0x68] = a0
  8770: 81 67 14                 a0 = i32 [s1 + 0x14]
  8773: 7a 17 64                 u32 [sp + 0x64] = a0
  8776: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  8779: 82 67                    a0 = u64 [s1]
  8781: 51 08 26                 jump @554 if a1 == 0
      :                          @550
  8784: 52 18 01 16              jump @552 if a1 != 1
      :                          @551
  8788: 97 77 04                 a0 = a0 << 0x4
  8791: 82 18 18                 a1 = u64 [sp + 0x18]
  8794: c8 87 07                 a0 = a0 + a1
  8797: 82 78 08                 a1 = u64 [a0 + 0x8]
  8800: 82 19 10                 a2 = u64 [sp + 0x10]
  8803: aa 98 07                 jump @553 if a1 == a2
      :                          @552
  8806: 33 08                    a1 = 0
  8808: 28 0f                    jump @555
      :                          @553
  8810: 82 77                    a0 = u64 [a0]
  8812: 82 77                    a0 = u64 [a0]
  8814: 33 08 01                 a1 = 0x1
  8817: 28 06                    jump @555
      :                          @554
  8819: 33 08 01                 a1 = 0x1
  8822: 01                       fallthrough
      :                          @555
  8823: 7b 18 30                 u64 [sp + 0x30] = a1
  8826: 7b 17 38                 u64 [sp + 0x38] = a0
  8829: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  8832: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  8835: 51 08 26                 jump @560 if a1 == 0
      :                          @556
  8838: 52 18 01 16              jump @558 if a1 != 1
      :                          @557
  8842: 97 77 04                 a0 = a0 << 0x4
  8845: 82 18 18                 a1 = u64 [sp + 0x18]
  8848: c8 87 07                 a0 = a0 + a1
  8851: 82 78 08                 a1 = u64 [a0 + 0x8]
  8854: 82 19 10                 a2 = u64 [sp + 0x10]
  8857: aa 98 07                 jump @559 if a1 == a2
      :                          @558
  8860: 33 08                    a1 = 0
  8862: 28 0f                    jump @561
      :                          @559
  8864: 82 77                    a0 = u64 [a0]
  8866: 82 77                    a0 = u64 [a0]
  8868: 33 08 01                 a1 = 0x1
  8871: 28 06                    jump @561
      :                          @560
  8873: 33 08 01                 a1 = 0x1
  8876: 01                       fallthrough
      :                          @561
  8877: 7b 18 40                 u64 [sp + 0x40] = a1
  8880: 7b 17 48                 u64 [sp + 0x48] = a0
  8883: 82 67 08                 a0 = u64 [s1 + 0x8]
  8886: 97 77 04                 a0 = a0 << 0x4
  8889: 82 18 18                 a1 = u64 [sp + 0x18]
  8892: c8 78 08                 a1 = a1 + a0
  8895: 82 87                    a0 = u64 [a1]
  8897: 82 89 08                 a2 = u64 [a1 + 0x8]
  8900: 95 18 30                 a1 = sp + 0x30
  8903: b4 90 02 d0 00           ra = 208, jump [a2]
      :                          @562 [@dyn 104]
  8908: 52 07 bb 00              jump @578 if a0 != 0
      :                          @563
  8912: 95 55 10                 s0 = s0 + 0x10
  8915: 82 18 20                 a1 = u64 [sp + 0x20]
  8918: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  8921: 95 66 38                 s1 = s1 + 0x38
  8924: 82 17 28                 a0 = u64 [sp + 0x28]
  8927: 95 77 01                 a0 = a0 + 0x1
  8930: 7b 17 28                 u64 [sp + 0x28] = a0
  8933: 52 08 34 ff              jump @546 if a1 != 0
      :                          @564
  8937: 28 6b                    jump @573
      :                          @565
  8939: 82 97 18                 a0 = u64 [a2 + 0x18]
  8942: 51 07 73                 jump @575 if a0 == 0
      :                          @566
  8945: 82 95 10                 s0 = u64 [a2 + 0x10]
  8948: 33 0a                    a3 = 0
  8950: 97 78 04                 a1 = a0 << 0x4
  8953: c8 58 08                 a1 = a1 + s0
  8956: 7b 18 20                 u64 [sp + 0x20] = a1
  8959: 7b 19 08                 u64 [sp + 0x8] = a2
  8962: 82 96                    s1 = u64 [a2]
  8964: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  8967: 97 77 04                 a0 = a0 << 0x4
  8970: 98 77 04                 a0 = a0 >> 0x4
  8973: 95 77 01                 a0 = a0 + 0x1
  8976: 7b 17                    u64 [sp] = a0
  8978: 95 66 08                 s1 = s1 + 0x8
  8981: 01                       fallthrough
      :                          @567
  8982: 7b 1a 28                 u64 [sp + 0x28] = a3
  8985: 82 69                    a2 = u64 [s1]
  8987: 51 09 17                 jump @570 if a2 == 0
      :                          @568
  8990: 82 1a 58                 a3 = u64 [sp + 0x58]
  8993: 82 17 50                 a0 = u64 [sp + 0x50]
  8996: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  8999: 82 aa 18                 a3 = u64 [a3 + 0x18]
  9002: b4 a0 02 d2 00           ra = 210, jump [a3]
      :                          @569 [@dyn 105]
  9007: 52 07 58                 jump @578 if a0 != 0
      :                          @570
  9010: 82 57                    a0 = u64 [s0]
  9012: 82 59 08                 a2 = u64 [s0 + 0x8]
  9015: 95 18 30                 a1 = sp + 0x30
  9018: b4 90 02 d4 00           ra = 212, jump [a2]
      :                          @571 [@dyn 106]
  9023: 52 07 48                 jump @578 if a0 != 0
      :                          @572
  9026: 95 66 10                 s1 = s1 + 0x10
  9029: 95 55 10                 s0 = s0 + 0x10
  9032: 82 1a 28                 a3 = u64 [sp + 0x28]
  9035: 95 aa 01                 a3 = a3 + 0x1
  9038: 82 17 20                 a0 = u64 [sp + 0x20]
  9041: ab 75 c5                 jump @567 if s0 != a0
      :                          @573
  9044: 82 19 08                 a2 = u64 [sp + 0x8]
  9047: 82 1a                    a3 = u64 [sp]
  9049: 82 97 08                 a0 = u64 [a2 + 0x8]
  9052: ac 7a 0d                 jump @576 if a3 <u a0
      :                          @574
  9055: 28 2d                    jump @579
      :                          @575
  9057: 33 0a                    a3 = 0
  9059: 82 97 08                 a0 = u64 [a2 + 0x8]
  9062: 54 07 26                 jump @579 if a0 <=u 0
      :                          @576
  9065: 82 97                    a0 = u64 [a2]
  9067: 97 a8 04                 a1 = a3 << 0x4
  9070: c8 87 09                 a2 = a0 + a1
  9073: 82 1a 58                 a3 = u64 [sp + 0x58]
  9076: 82 17 50                 a0 = u64 [sp + 0x50]
  9079: 82 98                    a1 = u64 [a2]
  9081: 82 99 08                 a2 = u64 [a2 + 0x8]
  9084: 82 aa 18                 a3 = u64 [a3 + 0x18]
  9087: b4 a0 02 d6 00           ra = 214, jump [a3]
      :                          @577 [@dyn 107]
  9092: 51 07 08                 jump @579 if a0 == 0
      :                          @578
  9095: 33 07 01                 a0 = 0x1
  9098: 28 05                    jump @580
      :                          @579
  9100: 33 07                    a0 = 0
  9102: 01                       fallthrough
      :                          @580
  9103: 82 10 80 00              ra = u64 [sp + 0x80]
  9107: 82 15 78                 s0 = u64 [sp + 0x78]
  9110: 82 16 70                 s1 = u64 [sp + 0x70]
  9113: 95 11 88 00              sp = sp + 0x88
  9117: 32 00                    ret
      :                          @581 [@dyn 108]
  9119: 32 00                    ret
      :                          @582 [@dyn 109]
  9121: 95 11 80                 sp = sp + 0xffffffffffffff80
  9124: 7b 10 78                 u64 [sp + 0x78] = ra
  9127: 7b 15 70                 u64 [sp + 0x70] = s0
  9130: 7b 16 68                 u64 [sp + 0x68] = s1
  9133: 64 92                    t0 = a2
  9135: 33 00                    ra = 0
  9137: 33 0b                    a4 = 0
  9139: 33 05                    s0 = 0
  9141: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
  9151: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
  9157: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
  9167: 82 79 10                 a2 = u64 [a0 + 0x10]
  9170: 7b 19 48                 u64 [sp + 0x48] = a2
  9173: 82 79                    a2 = u64 [a0]
  9175: 7b 19 38                 u64 [sp + 0x38] = a2
  9178: 82 77 08                 a0 = u64 [a0 + 0x8]
  9181: 7b 17 30                 u64 [sp + 0x30] = a0
  9184: 33 07 24 05 01           a0 = 0x10524
  9189: 7b 17 08                 u64 [sp + 0x8] = a0
  9192: 3a 07 08 00 03           a0 = u64 [0x30008]
  9197: 7b 17 60                 u64 [sp + 0x60] = a0
  9200: 7b 18 58                 u64 [sp + 0x58] = a1
  9203: 95 88 08                 a1 = a1 + 0x8
  9206: 7b 18                    u64 [sp] = a1
  9208: 33 0c 0a                 a5 = 0xa
  9211: 7b 12 20                 u64 [sp + 0x20] = t0
  9214: 7b 13 18                 u64 [sp + 0x18] = t1
  9217: 7b 14 10                 u64 [sp + 0x10] = t2
  9220: 28 3b                    jump @586
      :                          @583
  9222: 64 06                    s1 = ra
  9224: c8 89 07                 a0 = a2 + a1
  9227: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
  9230: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  9233: 88 77 01                 a0 = a0 <u 0x1
  9236: 01                       fallthrough
      :                          @584
  9237: 82 1a 48                 a3 = u64 [sp + 0x48]
  9240: 78 a7                    u8 [a3] = a0
  9242: 82 17 30                 a0 = u64 [sp + 0x30]
  9245: 82 7a 18                 a3 = u64 [a0 + 0x18]
  9248: 82 17 38                 a0 = u64 [sp + 0x38]
  9251: b4 a0 02 dc 00           ra = 220, jump [a3]
      :                          @585 [@dyn 110]
  9256: 64 5b                    a4 = s0
  9258: 82 12 20                 t0 = u64 [sp + 0x20]
  9261: 82 13 18                 t1 = u64 [sp + 0x18]
  9264: 82 14 10                 t2 = u64 [sp + 0x10]
  9267: 64 60                    ra = s1
  9269: 33 0c 0a                 a5 = 0xa
  9272: 82 15 40                 s0 = u64 [sp + 0x40]
  9275: 52 07 64 01              jump @627 if a0 != 0
      :                          @586
  9279: 84 57 ff 00              a0 = s0 & 0xff
  9283: 52 07 58 01              jump @626 if a0 != 0
      :                          @587
  9287: 7b 1b 50                 u64 [sp + 0x50] = a4
  9290: ae 02 0a                 jump @590 if t0 >=u ra
      :                          @588
  9293: 28 ef 00                 jump @617
      :                          @589
  9296: ac 02 ec 00              jump @617 if t0 <u ra
      :                          @590
  9300: c9 02 08                 a1 = t0 - ra
  9303: 82 16 58                 s1 = u64 [sp + 0x58]
  9306: c8 06 06                 s1 = s1 + ra
  9309: 55 18 10 1d              jump @596 if a1 >=u 16
      :                          @591
  9313: aa 02 d8 00              jump @616 if t0 == ra
      :                          @592
  9317: 33 0a                    a3 = 0
  9319: 01                       fallthrough
      :                          @593
  9320: c8 a6 07                 a0 = s1 + a3
  9323: 7c 77                    a0 = u8 [a0]
  9325: aa c7 a5 00              jump @611 if a0 == a5
      :                          @594
  9329: 95 aa 01                 a3 = a3 + 0x1
  9332: ab a8 f4                 jump @593 if a1 != a3
      :                          @595
  9335: 28 c2 00                 jump @616
      :                          @596
  9338: 95 69 07                 a2 = s1 + 0x7
  9341: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
  9344: c9 6a 07                 a0 = a3 - s1
  9347: d3 6a 0a                 a3 = a3 ^ s1
  9350: 88 aa 01                 a3 = a3 <u 0x1
  9353: 88 7b 01                 a4 = a0 <u 0x1
  9356: d4 ba 0a                 a3 = a3 | a4
  9359: 51 0a 45                 jump @602 if a3 == 0
      :                          @597
  9362: 33 07                    a0 = 0
  9364: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  9367: 82 1b                    a4 = u64 [sp]
  9369: c8 0b 0b                 a4 = a4 + ra
  9372: 28 08                    jump @599
      :                          @598
  9374: 82 1b                    a4 = u64 [sp]
  9376: c8 0b 0b                 a4 = a4 + ra
  9379: 01                       fallthrough
      :                          @599
  9380: c8 76 0c                 a5 = s1 + a0
  9383: 82 cc                    a5 = u64 [a5]
  9385: c8 7b 09                 a2 = a4 + a0
  9388: 82 99                    a2 = u64 [a2]
  9390: d3 4c 05                 s0 = a5 ^ t2
  9393: c8 35 05                 s0 = s0 + t1
  9396: e0 c5 0c                 a5 = s0 & ~a5
  9399: d3 49 05                 s0 = a2 ^ t2
  9402: c8 35 05                 s0 = s0 + t1
  9405: e0 95 09                 a2 = s0 & ~a2
  9408: d4 c9 09                 a2 = a2 | a5
  9411: 82 1c 60                 a5 = u64 [sp + 0x60]
  9414: d2 c9 09                 a2 = a2 & a5
  9417: 52 09 1f                 jump @605 if a2 != 0
      :                          @600
  9420: 95 77 10                 a0 = a0 + 0x10
  9423: ae 7a d5                 jump @599 if a3 >=u a0
      :                          @601
  9426: 28 16                    jump @605
      :                          @602
  9428: c8 a6 0b                 a4 = s1 + a3
  9431: 7c bb                    a4 = u8 [a4]
  9433: aa cb 51                 jump @614 if a4 == a5
      :                          @603
  9436: 95 aa 01                 a3 = a3 + 0x1
  9439: ab a7 f5                 jump @602 if a0 != a3
      :                          @604
  9442: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  9445: ae 7a b9                 jump @598 if a3 >=u a0
      :                          @605
  9448: aa 87 9b 00              jump @623 if a0 == a1
      :                          @606
  9452: 33 0a                    a3 = 0
  9454: c8 76 06                 s1 = s1 + a0
  9457: c9 72 08                 a1 = t0 - a0
  9460: c9 08 08                 a1 = a1 - ra
  9463: 33 0c 0a                 a5 = 0xa
  9466: 82 1b 50                 a4 = u64 [sp + 0x50]
  9469: 01                       fallthrough
      :                          @607
  9470: c8 a6 09                 a2 = s1 + a3
  9473: 7c 99                    a2 = u8 [a2]
  9475: aa c9 0b                 jump @610 if a2 == a5
      :                          @608
  9478: 95 aa 01                 a3 = a3 + 0x1
  9481: ab a8 f5                 jump @607 if a1 != a3
      :                          @609
  9484: 28 2d                    jump @616
      :                          @610
  9486: c8 7a 0a                 a3 = a3 + a0
  9489: 01                       fallthrough
      :                          @611
  9490: c8 0a 0a                 a3 = a3 + ra
  9493: 95 a0 01                 ra = a3 + 0x1
  9496: ae 2a 38 ff              jump @589 if a3 >=u t0
      :                          @612
  9500: 82 17 58                 a0 = u64 [sp + 0x58]
  9503: c8 7a 0a                 a3 = a3 + a0
  9506: 7c a7                    a0 = u8 [a3]
  9508: ab c7 2c ff              jump @589 if a0 != a5
      :                          @613
  9512: 28 62                    jump @624
      :                          @614
  9514: 82 1b 50                 a4 = u64 [sp + 0x50]
  9517: c8 0a 0a                 a3 = a3 + ra
  9520: 95 a0 01                 ra = a3 + 0x1
  9523: ac 2a e9                 jump @612 if a3 <u t0
      :                          @615
  9526: 28 1a ff                 jump @589
      :                          @616
  9529: 64 20                    ra = t0
  9531: 01                       fallthrough
      :                          @617
  9532: 49 11 40 01              u64 [sp + 64] = 0x1
  9536: 64 b5                    s0 = a4
  9538: 64 26                    s1 = t0
  9540: aa 2b 57                 jump @626 if a4 == t0
      :                          @618
  9543: 82 17 48                 a0 = u64 [sp + 0x48]
  9546: 7c 77                    a0 = u8 [a0]
  9548: 51 07 23                 jump @621 if a0 == 0
      :                          @619
  9551: 82 17 30                 a0 = u64 [sp + 0x30]
  9554: 82 7a 18                 a3 = u64 [a0 + 0x18]
  9557: 33 09 04                 a2 = 0x4
  9560: 82 17 38                 a0 = u64 [sp + 0x38]
  9563: 82 18 08                 a1 = u64 [sp + 0x8]
  9566: 7b 10 28                 u64 [sp + 0x28] = ra
  9569: b4 a0 02 de 00           ra = 222, jump [a3]
      :                          @620 [@dyn 111]
  9574: 82 1b 50                 a4 = u64 [sp + 0x50]
  9577: 82 10 28                 ra = u64 [sp + 0x28]
  9580: 52 07 33                 jump @627 if a0 != 0
      :                          @621
  9583: c9 b6 09                 a2 = s1 - a4
  9586: 82 18 58                 a1 = u64 [sp + 0x58]
  9589: c8 b8 08                 a1 = a1 + a4
  9592: ab b6 8e fe              jump @583 if s1 != a4
      :                          @622
  9596: 64 06                    s1 = ra
  9598: 33 07                    a0 = 0
  9600: 28 95 fe                 jump @584
      :                          @623
  9603: 64 20                    ra = t0
  9605: 82 1b 50                 a4 = u64 [sp + 0x50]
  9608: 28 b4                    jump @617
      :                          @624
  9610: 49 11 40                 u64 [sp + 64] = 0
  9613: 64 05                    s0 = ra
  9615: 64 06                    s1 = ra
  9617: 82 17 48                 a0 = u64 [sp + 0x48]
  9620: 7c 77                    a0 = u8 [a0]
  9622: 52 07 b9                 jump @619 if a0 != 0
      :                          @625
  9625: 28 d6                    jump @621
      :                          @626
  9627: 33 07                    a0 = 0
  9629: 28 06                    jump @628
      :                          @627
  9631: 33 07 01                 a0 = 0x1
  9634: 01                       fallthrough
      :                          @628
  9635: 82 10 78                 ra = u64 [sp + 0x78]
  9638: 82 15 70                 s0 = u64 [sp + 0x70]
  9641: 82 16 68                 s1 = u64 [sp + 0x68]
  9644: 95 11 80 00              sp = sp + 0x80
  9648: 32 00                    ret
      :                          @629 [@dyn 112]
  9650: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  9653: 7b 10 20                 u64 [sp + 0x20] = ra
  9656: 7b 15 18                 u64 [sp + 0x18] = s0
  9659: 7b 16 10                 u64 [sp + 0x10] = s1
  9662: 82 75 10                 s0 = u64 [a0 + 0x10]
  9665: 7c 59                    a2 = u8 [s0]
  9667: 82 7b                    a4 = u64 [a0]
  9669: 82 76 08                 s1 = u64 [a0 + 0x8]
  9672: 51 09 33                 jump @633 if a2 == 0
      :                          @630
  9675: 82 6a 18                 a3 = u64 [s1 + 0x18]
  9678: 7b 18 08                 u64 [sp + 0x8] = a1
  9681: 33 08 24 05 01           a1 = 0x10524
  9686: 33 09 04                 a2 = 0x4
  9689: 64 b7                    a0 = a4
  9691: 7b 1b                    u64 [sp] = a4
  9693: b4 a0 02 e2 00           ra = 226, jump [a3]
      :                          @631 [@dyn 113]
  9698: 82 18 08                 a1 = u64 [sp + 0x8]
  9701: 82 1b                    a4 = u64 [sp]
  9703: 51 07 14                 jump @633 if a0 == 0
      :                          @632
  9706: 33 07 01                 a0 = 0x1
  9709: 82 10 20                 ra = u64 [sp + 0x20]
  9712: 82 15 18                 s0 = u64 [sp + 0x18]
  9715: 82 16 10                 s1 = u64 [sp + 0x10]
  9718: 95 11 28                 sp = sp + 0x28
  9721: 32 00                    ret
      :                          @633
  9723: 83 87                    i32 a0 = a1 + 0
  9725: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  9728: 88 77 01                 a0 = a0 <u 0x1
  9731: 78 57                    u8 [s0] = a0
  9733: 82 6c 20                 a5 = u64 [s1 + 0x20]
  9736: 64 b7                    a0 = a4
  9738: 82 10 20                 ra = u64 [sp + 0x20]
  9741: 82 15 18                 s0 = u64 [sp + 0x18]
  9744: 82 16 10                 s1 = u64 [sp + 0x10]
  9747: 95 11 28                 sp = sp + 0x28
  9750: 32 0c                    jump [a5]
      :                          @634 [@dyn 114]
  9752: 64 8a                    a3 = a1
  9754: 33 08 f0 04 01           a1 = 0x104f0
  9759: 64 a9                    a2 = a3
  9761: 28 99 fb                 jump @543
      :                          @635
  9764: 95 11 70 ff              sp = sp + 0xffffffffffffff70
  9768: 7b 10 88 00              u64 [sp + 0x88] = ra
  9772: 7b 15 80 00              u64 [sp + 0x80] = s0
  9776: 7b 16 78                 u64 [sp + 0x78] = s1
  9779: 64 75                    s0 = a0
  9781: 7c 77 08                 a0 = u8 [a0 + 0x8]
  9784: 64 8b                    a4 = a1
  9786: 33 08 01                 a1 = 0x1
  9789: 33 06 01                 s1 = 0x1
  9792: 51 07 1d                 jump @637 if a0 == 0
      :                          @636
  9795: 78 56 08                 u8 [s0 + 0x8] = s1
  9798: 46 15 09 01              u8 [s0 + 9] = 0x1
  9802: 64 57                    a0 = s0
  9804: 82 10 88 00              ra = u64 [sp + 0x88]
  9808: 82 15 80 00              s0 = u64 [sp + 0x80]
  9812: 82 16 78                 s1 = u64 [sp + 0x78]
  9815: 95 11 90 00              sp = sp + 0x90
  9819: 32 00                    ret
      :                          @637
  9821: 64 9a                    a3 = a2
  9823: 82 5c                    a5 = u64 [s0]
  9825: 80 c7 34                 a0 = u32 [a5 + 0x34]
  9828: 7c 58 09                 a1 = u8 [s0 + 0x9]
  9831: 84 79 04                 a2 = a0 & 0x4
  9834: 52 09 45                 jump @643 if a2 != 0
      :                          @638
  9837: 51 08 32                 jump @641 if a1 == 0
      :                          @639
  9840: 82 c8 28                 a1 = u64 [a5 + 0x28]
  9843: 82 c7 20                 a0 = u64 [a5 + 0x20]
  9846: 82 83 18                 t1 = u64 [a1 + 0x18]
  9849: 33 08 2c 05 01           a1 = 0x1052c
  9854: 33 09 02                 a2 = 0x2
  9857: 64 a6                    s1 = a3
  9859: 7b 1b 10                 u64 [sp + 0x10] = a4
  9862: 7b 1c 08                 u64 [sp + 0x8] = a5
  9865: b4 30 02 e6 00           ra = 230, jump [t1]
      :                          @640 [@dyn 115]
  9870: 82 1c 08                 a5 = u64 [sp + 0x8]
  9873: 82 1b 10                 a4 = u64 [sp + 0x10]
  9876: 64 6a                    a3 = s1
  9878: 33 08 01                 a1 = 0x1
  9881: 33 06 01                 s1 = 0x1
  9884: 52 07 a7                 jump @636 if a0 != 0
      :                          @641
  9887: 64 b7                    a0 = a4
  9889: 64 c8                    a1 = a5
  9891: b4 a0 02 e8 00           ra = 232, jump [a3]
      :                          @642 [@dyn 116]
  9896: 33 08 01                 a1 = 0x1
  9899: 64 76                    s1 = a0
  9901: 28 96                    jump @636
      :                          @643
  9903: 52 08 37                 jump @647 if a1 != 0
      :                          @644
  9906: 82 c8 28                 a1 = u64 [a5 + 0x28]
  9909: 82 c7 20                 a0 = u64 [a5 + 0x20]
  9912: 82 83 18                 t1 = u64 [a1 + 0x18]
  9915: 33 08 30 05 01           a1 = 0x10530
  9920: 33 09 01                 a2 = 0x1
  9923: 33 06 01                 s1 = 0x1
  9926: 7b 1a                    u64 [sp] = a3
  9928: 7b 1b 10                 u64 [sp + 0x10] = a4
  9931: 7b 1c 08                 u64 [sp + 0x8] = a5
  9934: b4 30 02 ea 00           ra = 234, jump [t1]
      :                          @645 [@dyn 117]
  9939: 82 1c 08                 a5 = u64 [sp + 0x8]
  9942: 82 1b 10                 a4 = u64 [sp + 0x10]
  9945: 82 1a                    a3 = u64 [sp]
  9947: 33 08 01                 a1 = 0x1
  9950: 52 07 65 ff              jump @636 if a0 != 0
      :                          @646
  9954: 81 c7 34                 a0 = i32 [a5 + 0x34]
  9957: 01                       fallthrough
      :                          @647
  9958: 33 06 01                 s1 = 0x1
  9961: 78 16 37                 u8 [sp + 0x37] = s1
  9964: 82 c8 20                 a1 = u64 [a5 + 0x20]
  9967: 82 c9 28                 a2 = u64 [a5 + 0x28]
  9970: 7b 18 18                 u64 [sp + 0x18] = a1
  9973: 7b 19 20                 u64 [sp + 0x20] = a2
  9976: 95 18 37                 a1 = sp + 0x37
  9979: 7b 18 28                 u64 [sp + 0x28] = a1
  9982: 81 c8 30                 a1 = i32 [a5 + 0x30]
  9985: 7c c9 38                 a2 = u8 [a5 + 0x38]
  9988: 82 c3                    t1 = u64 [a5]
  9990: 82 c4 08                 t2 = u64 [a5 + 0x8]
  9993: 82 c0 10                 ra = u64 [a5 + 0x10]
  9996: 82 c2 18                 t0 = u64 [a5 + 0x18]
  9999: 7a 17 6c                 u32 [sp + 0x6c] = a0
 10002: 7a 18 68                 u32 [sp + 0x68] = a1
 10005: 78 19 70                 u8 [sp + 0x70] = a2
 10008: 7b 13 38                 u64 [sp + 0x38] = t1
 10011: 7b 14 40                 u64 [sp + 0x40] = t2
 10014: 7b 10 48                 u64 [sp + 0x48] = ra
 10017: 7b 12 50                 u64 [sp + 0x50] = t0
 10020: 95 17 18                 a0 = sp + 0x18
 10023: 7b 17 58                 u64 [sp + 0x58] = a0
 10026: 33 07 f0 04 01           a0 = 0x104f0
 10031: 7b 17 60                 u64 [sp + 0x60] = a0
 10034: 95 18 38                 a1 = sp + 0x38
 10037: 64 b7                    a0 = a4
 10039: b4 a0 02 ec 00           ra = 236, jump [a3]
      :                          @648 [@dyn 118]
 10044: 52 07 21                 jump @651 if a0 != 0
      :                          @649
 10047: 82 18 60                 a1 = u64 [sp + 0x60]
 10050: 82 17 58                 a0 = u64 [sp + 0x58]
 10053: 82 8a 18                 a3 = u64 [a1 + 0x18]
 10056: 33 08 2e 05 01           a1 = 0x1052e
 10061: 33 09 02                 a2 = 0x2
 10064: b4 a0 02 ee 00           ra = 238, jump [a3]
      :                          @650 [@dyn 119]
 10069: 64 76                    s1 = a0
 10071: 33 08 01                 a1 = 0x1
 10074: 28 e9 fe                 jump @636
      :                          @651
 10077: 33 08 01                 a1 = 0x1
 10080: 28 e3 fe                 jump @636
      :                          @652
 10083: 51 08 9b 00              jump @673 if a1 == 0
      :                          @653
 10087: 64 79                    a2 = a0
 10089: 7c 77                    a0 = u8 [a0]
 10091: 51 07 91 00              jump @672 if a0 == 0
      :                          @654
 10095: 51 27 ff 00 90 00        jump @674 if a0 == 255
      :                          @655
 10101: 6c 7a                    a3 = sext.b a0
 10103: 57 0a 09                 jump @657 if a3 <s 0
      :                          @656
 10106: 33 0a                    a3 = 0
 10108: 33 08                    a1 = 0
 10110: 28 73                    jump @671
      :                          @657
 10112: 55 27 c0 00 0d           jump @659 if a0 >=u 192
      :                          @658
 10117: 33 0a 01                 a3 = 0x1
 10120: 33 0b 80                 a4 = 0xffffffffffffff80
 10123: 28 4a                    jump @668
      :                          @659
 10125: 55 27 e0 00 0e           jump @661 if a0 >=u 224
      :                          @660
 10130: 33 0a 02                 a3 = 0x2
 10133: 33 0b 40 ff              a4 = 0xffffffffffffff40
 10137: 28 3c                    jump @668
      :                          @661
 10139: 55 27 f0 00 0e           jump @663 if a0 >=u 240
      :                          @662
 10144: 33 0a 03                 a3 = 0x3
 10147: 33 0b 20 ff              a4 = 0xffffffffffffff20
 10151: 28 2e                    jump @668
      :                          @663
 10153: 55 27 f8 00 0e           jump @665 if a0 >=u 248
      :                          @664
 10158: 33 0a 04                 a3 = 0x4
 10161: 33 0b 10 ff              a4 = 0xffffffffffffff10
 10165: 28 20                    jump @668
      :                          @665
 10167: 55 27 fc 00 0e           jump @667 if a0 >=u 252
      :                          @666
 10172: 33 0a 05                 a3 = 0x5
 10175: 33 0b 08 ff              a4 = 0xffffffffffffff08
 10179: 28 12                    jump @668
      :                          @667
 10181: 88 7a fe 00              a3 = a0 <u 0xfe
 10185: 33 0b 04 ff              a4 = 0xffffffffffffff04
 10189: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
 10193: 85 aa 07                 a3 = a3 ^ 0x7
 10196: 01                       fallthrough
      :                          @668
 10197: ae 8a 2b                 jump @675 if a3 >=u a1
      :                          @669
 10200: 33 08                    a1 = 0
 10202: c8 b7 07                 a0 = a0 + a4
 10205: 64 ab                    a4 = a3
 10207: 01                       fallthrough
      :                          @670
 10208: c8 b9 0c                 a5 = a2 + a4
 10211: 7c cc                    a5 = u8 [a5]
 10213: 97 88 08                 a1 = a1 << 0x8
 10216: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 10219: d4 c8 08                 a1 = a1 | a5
 10222: 52 0b f2                 jump @670 if a4 != 0
      :                          @671
 10225: 8a a9 03                 i32 a2 = a3 << 0x3
 10228: cf 97 07                 a0 = a0 << a2
 10231: c8 87 07                 a0 = a0 + a1
 10234: 32 00                    ret
      :                          @672
 10236: 32 00                    ret
      :                          @673
 10238: 00                       trap
      :                          @674
 10239: 00                       trap
      :                          @675
 10240: 00                       trap
