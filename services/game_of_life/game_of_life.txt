// RO data = 1666/1668 bytes
// RW data = 16/4144 bytes
// Stack size = 409600 bytes
// RO data = [0, 16, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 122, 61, 32, 115, 61, 32, 111, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 32, 111, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 32, 119, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 32, 119, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 8, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 18, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 21, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 54, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 86, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 70, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 103, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 38, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 109, 97, 99, 104, 105, 110, 101, 32, 110, 101, 119, 32, 105, 110, 100, 101, 120, 61, 0, 0, 0, 0, 0, 0, 248, 0, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 102, 101, 116, 99, 104, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 32, 102, 101, 116, 99, 104, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 0, 40, 1, 1, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 68, 1, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 122, 101, 114, 111, 32, 109, 61, 44, 32, 112, 97, 103, 101, 95, 105, 100, 61, 32, 122, 101, 114, 111, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 120, 1, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 135, 1, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 145, 1, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 112, 111, 107, 101, 32, 109, 61, 32, 111, 61, 32, 122, 61, 32, 112, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 0, 208, 1, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 18, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 223, 1, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 226, 1, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 229, 1, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 99, 104, 105, 108, 100, 95, 118, 109, 95, 114, 101, 103, 105, 115, 116, 101, 114, 115, 61, 0, 0, 0, 0, 0, 72, 2, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 105, 110, 118, 111, 107, 101, 32, 99, 104, 105, 108, 100, 32, 86, 77, 44, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 0, 120, 2, 1, 0, 0, 0, 0, 0, 39, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 105, 110, 118, 111, 107, 101, 32, 32, 105, 110, 118, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 32, 111, 109, 101, 103, 97, 95, 56, 61, 0, 176, 2, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 191, 2, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 206, 2, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 100, 111, 110, 101, 32, 119, 105, 116, 104, 32, 99, 104, 105, 108, 100, 32, 86, 77, 44, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 0, 0, 0, 0, 0, 0, 8, 3, 1, 0, 0, 0, 0, 0, 42, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 70, 105, 114, 115, 116, 32, 116, 105, 109, 101, 32, 115, 101, 116, 117, 112, 58, 32, 119, 105, 95, 112, 97, 121, 108, 111, 97, 100, 95, 108, 101, 110, 103, 116, 104, 61, 0, 0, 0, 0, 72, 3, 1, 0, 0, 0, 0, 0, 44, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 115, 111, 108, 105, 99, 105, 116, 32, 99, 111, 100, 101, 95, 104, 97, 115, 104, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 111, 100, 101, 95, 108, 101, 110, 103, 116, 104, 61, 0, 136, 3, 1, 0, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 170, 3, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 128, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 130, 0, 0, 0, 0, 0, 0, 0, 136, 0, 0, 0, 0, 0, 0, 0, 144, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 178, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 180, 0, 0, 0, 0, 0, 0, 0, 186, 0, 0, 0, 0, 0, 0, 0, 190, 0, 0, 0, 0, 0, 0, 0, 112, 101, 101, 107, 122, 101, 114, 111, 32, 32, 32, 32, 112, 111, 107, 101, 44, 32, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 115, 117, 99, 99, 101, 115, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 119, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 111, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 115, 116, 97, 99, 107, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 119, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 111, 95, 98, 121, 116, 101, 115]
// RW data = [75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 2886
// Code size = 8913 bytes

      :                          @0
     0: 28 ad 02 00 00           jump @44
      :                          @1
     5: 28 f7 10 00 00           jump @191
      :                          @2
    10: 28 14 13                 jump @248
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 80 89 34                 a2 = u32 [a1 + 0x34]
    24: 82 77                    a0 = u64 [a0]
    26: 84 9a 10                 a3 = a2 & 0x10
    29: 52 0a 14                 jump @6 if a3 != 0
      :                          @4
    32: 84 99 20                 a2 = a2 & 0x20
    35: 52 09 3e                 jump @9 if a2 != 0
      :                          @5
    38: 82 10 80 00              ra = u64 [sp + 0x80]
    42: 95 11 88 00              sp = sp + 0x88
    46: 28 b6 18                 jump @388
      :                          @6
    49: 82 7b                    a4 = u64 [a0]
    51: 33 09 81 00              a2 = 0x81
    55: 95 17 7f                 a0 = sp + 0x7f
    58: 33 02 57                 t0 = 0x57
    61: 01                       fallthrough
      :                          @7
    62: 64 9c                    a5 = a2
    64: 98 ba 04                 a3 = a4 >> 0x4
    67: 84 bb 0f                 a4 = a4 & 0xf
    70: 88 b3 0a                 t1 = a4 <u 0xa
    73: 33 09 30                 a2 = 0x30
    76: da 32 09                 a2 = t0 if t1 == 0
    79: be b9 09                 i32 a2 = a2 + a4
    82: 78 79                    u8 [a0] = a2
    84: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
    87: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
    90: 64 ab                    a4 = a3
    92: 52 0a e2                 jump @7 if a3 != 0
      :                          @8
    95: 28 30                    jump @11
      :                          @9
    97: 82 7b                    a4 = u64 [a0]
    99: 33 09 81 00              a2 = 0x81
   103: 95 17 7f                 a0 = sp + 0x7f
   106: 33 02 37                 t0 = 0x37
   109: 01                       fallthrough
      :                          @10
   110: 64 9c                    a5 = a2
   112: 98 ba 04                 a3 = a4 >> 0x4
   115: 84 bb 0f                 a4 = a4 & 0xf
   118: 88 b3 0a                 t1 = a4 <u 0xa
   121: 33 09 30                 a2 = 0x30
   124: da 32 09                 a2 = t0 if t1 == 0
   127: be b9 09                 i32 a2 = a2 + a4
   130: 78 79                    u8 [a0] = a2
   132: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   135: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   138: 64 ab                    a4 = a3
   140: 52 0a e2                 jump @10 if a3 != 0
      :                          @11
   143: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   146: 56 27 80 00 27           jump @14 if a0 >u 128
      :                          @12
   151: 9a 9b 81 00              a4 = 0x81 - a2
   155: 64 1a                    a3 = sp
   157: c8 7a 0a                 a3 = a3 + a0
   160: 33 09 02                 a2 = 0x2
   163: 64 87                    a0 = a1
   165: 33 08 56 04 01           a1 = 0x10456
   170: 50 10 04 67 19           ra = 4, jump @398
      :                          @13 [@dyn 2]
   175: 82 10 80 00              ra = u64 [sp + 0x80]
   179: 95 11 88 00              sp = sp + 0x88
   183: 32 00                    ret
      :                          @14
   185: 00                       trap
      :                          @15 [@dyn 3]
   186: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   190: 7b 10 80 00              u64 [sp + 0x80] = ra
   194: 80 89 34                 a2 = u32 [a1 + 0x34]
   197: 84 9a 10                 a3 = a2 & 0x10
   200: 52 0a 14                 jump @18 if a3 != 0
      :                          @16
   203: 84 99 20                 a2 = a2 & 0x20
   206: 52 09 3e                 jump @21 if a2 != 0
      :                          @17
   209: 82 10 80 00              ra = u64 [sp + 0x80]
   213: 95 11 88 00              sp = sp + 0x88
   217: 28 0b 18                 jump @388
      :                          @18
   220: 82 7b                    a4 = u64 [a0]
   222: 33 09 81 00              a2 = 0x81
   226: 95 17 7f                 a0 = sp + 0x7f
   229: 33 02 57                 t0 = 0x57
   232: 01                       fallthrough
      :                          @19
   233: 64 9c                    a5 = a2
   235: 98 ba 04                 a3 = a4 >> 0x4
   238: 84 bb 0f                 a4 = a4 & 0xf
   241: 88 b3 0a                 t1 = a4 <u 0xa
   244: 33 09 30                 a2 = 0x30
   247: da 32 09                 a2 = t0 if t1 == 0
   250: be b9 09                 i32 a2 = a2 + a4
   253: 78 79                    u8 [a0] = a2
   255: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   258: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   261: 64 ab                    a4 = a3
   263: 52 0a e2                 jump @19 if a3 != 0
      :                          @20
   266: 28 30                    jump @23
      :                          @21
   268: 82 7b                    a4 = u64 [a0]
   270: 33 09 81 00              a2 = 0x81
   274: 95 17 7f                 a0 = sp + 0x7f
   277: 33 02 37                 t0 = 0x37
   280: 01                       fallthrough
      :                          @22
   281: 64 9c                    a5 = a2
   283: 98 ba 04                 a3 = a4 >> 0x4
   286: 84 bb 0f                 a4 = a4 & 0xf
   289: 88 b3 0a                 t1 = a4 <u 0xa
   292: 33 09 30                 a2 = 0x30
   295: da 32 09                 a2 = t0 if t1 == 0
   298: be b9 09                 i32 a2 = a2 + a4
   301: 78 79                    u8 [a0] = a2
   303: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   306: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   309: 64 ab                    a4 = a3
   311: 52 0a e2                 jump @22 if a3 != 0
      :                          @23
   314: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   317: 56 27 80 00 27           jump @26 if a0 >u 128
      :                          @24
   322: 9a 9b 81 00              a4 = 0x81 - a2
   326: 64 1a                    a3 = sp
   328: c8 7a 0a                 a3 = a3 + a0
   331: 33 09 02                 a2 = 0x2
   334: 64 87                    a0 = a1
   336: 33 08 56 04 01           a1 = 0x10456
   341: 50 10 08 bc 18           ra = 8, jump @398
      :                          @25 [@dyn 4]
   346: 82 10 80 00              ra = u64 [sp + 0x80]
   350: 95 11 88 00              sp = sp + 0x88
   354: 32 00                    ret
      :                          @26
   356: 00                       trap
      :                          @27 [@dyn 5]
   357: 95 11 d0                 sp = sp + 0xffffffffffffffd0
   360: 7b 10 28                 u64 [sp + 0x28] = ra
   363: 7b 15 20                 u64 [sp + 0x20] = s0
   366: 7b 16 18                 u64 [sp + 0x18] = s1
   369: 64 85                    s0 = a1
   371: 82 88 28                 a1 = u64 [a1 + 0x28]
   374: 82 5a 20                 a3 = u64 [s0 + 0x20]
   377: 82 8b 18                 a4 = u64 [a1 + 0x18]
   380: 64 76                    s1 = a0
   382: 33 08 08 04 01           a1 = 0x10408
   387: 33 09 01                 a2 = 0x1
   390: 64 a7                    a0 = a3
   392: b4 b0 01 0c              ra = 12, jump [a4]
      :                          @28 [@dyn 6]
   396: 7b 15                    u64 [sp] = s0
   398: 78 17 08                 u8 [sp + 0x8] = a0
   401: 46 11 09                 u8 [sp + 9] = 0
   404: 7b 16 10                 u64 [sp + 0x10] = s1
   407: 33 05 02                 s0 = 0x2
   410: 64 17                    a0 = sp
   412: 95 18 10                 a1 = sp + 0x10
   415: 33 09 02                 a2 = 0x2
   418: 50 10 0e 52 1f           ra = 14, jump @542
      :                          @29 [@dyn 7]
   423: 95 67 08                 a0 = s1 + 0x8
   426: 7b 17 10                 u64 [sp + 0x10] = a0
   429: 64 17                    a0 = sp
   431: 95 18 10                 a1 = sp + 0x10
   434: 64 59                    a2 = s0
   436: 50 10 10 40 1f           ra = 16, jump @542
      :                          @30 [@dyn 8]
   441: 95 67 10                 a0 = s1 + 0x10
   444: 7b 17 10                 u64 [sp + 0x10] = a0
   447: 64 17                    a0 = sp
   449: 95 18 10                 a1 = sp + 0x10
   452: 64 59                    a2 = s0
   454: 50 10 12 2e 1f           ra = 18, jump @542
      :                          @31 [@dyn 9]
   459: 95 67 18                 a0 = s1 + 0x18
   462: 7b 17 10                 u64 [sp + 0x10] = a0
   465: 64 17                    a0 = sp
   467: 95 18 10                 a1 = sp + 0x10
   470: 64 59                    a2 = s0
   472: 50 10 14 1c 1f           ra = 20, jump @542
      :                          @32 [@dyn 10]
   477: 95 67 20                 a0 = s1 + 0x20
   480: 7b 17 10                 u64 [sp + 0x10] = a0
   483: 64 17                    a0 = sp
   485: 95 18 10                 a1 = sp + 0x10
   488: 64 59                    a2 = s0
   490: 50 10 16 0a 1f           ra = 22, jump @542
      :                          @33 [@dyn 11]
   495: 95 67 28                 a0 = s1 + 0x28
   498: 7b 17 10                 u64 [sp + 0x10] = a0
   501: 64 17                    a0 = sp
   503: 95 18 10                 a1 = sp + 0x10
   506: 64 59                    a2 = s0
   508: 50 10 18 f8 1e           ra = 24, jump @542
      :                          @34 [@dyn 12]
   513: 95 67 30                 a0 = s1 + 0x30
   516: 7b 17 10                 u64 [sp + 0x10] = a0
   519: 64 17                    a0 = sp
   521: 95 18 10                 a1 = sp + 0x10
   524: 64 59                    a2 = s0
   526: 50 10 1a e6 1e           ra = 26, jump @542
      :                          @35 [@dyn 13]
   531: 95 67 38                 a0 = s1 + 0x38
   534: 7b 17 10                 u64 [sp + 0x10] = a0
   537: 64 17                    a0 = sp
   539: 95 18 10                 a1 = sp + 0x10
   542: 64 59                    a2 = s0
   544: 50 10 1c d4 1e           ra = 28, jump @542
      :                          @36 [@dyn 14]
   549: 95 67 40                 a0 = s1 + 0x40
   552: 7b 17 10                 u64 [sp + 0x10] = a0
   555: 64 17                    a0 = sp
   557: 95 18 10                 a1 = sp + 0x10
   560: 64 59                    a2 = s0
   562: 50 10 1e c2 1e           ra = 30, jump @542
      :                          @37 [@dyn 15]
   567: 95 67 48                 a0 = s1 + 0x48
   570: 7b 17 10                 u64 [sp + 0x10] = a0
   573: 64 17                    a0 = sp
   575: 95 18 10                 a1 = sp + 0x10
   578: 64 59                    a2 = s0
   580: 50 10 20 b0 1e           ra = 32, jump @542
      :                          @38 [@dyn 16]
   585: 95 67 50                 a0 = s1 + 0x50
   588: 7b 17 10                 u64 [sp + 0x10] = a0
   591: 64 17                    a0 = sp
   593: 95 18 10                 a1 = sp + 0x10
   596: 64 59                    a2 = s0
   598: 50 10 22 9e 1e           ra = 34, jump @542
      :                          @39 [@dyn 17]
   603: 95 67 58                 a0 = s1 + 0x58
   606: 7b 17 10                 u64 [sp + 0x10] = a0
   609: 64 17                    a0 = sp
   611: 95 18 10                 a1 = sp + 0x10
   614: 64 59                    a2 = s0
   616: 50 10 24 8c 1e           ra = 36, jump @542
      :                          @40 [@dyn 18]
   621: 95 67 60                 a0 = s1 + 0x60
   624: 7b 17 10                 u64 [sp + 0x10] = a0
   627: 64 17                    a0 = sp
   629: 95 18 10                 a1 = sp + 0x10
   632: 64 59                    a2 = s0
   634: 50 10 26 7a 1e           ra = 38, jump @542
      :                          @41 [@dyn 19]
   639: 33 07 01                 a0 = 0x1
   642: 7c 18 08                 a1 = u8 [sp + 0x8]
   645: 52 08 1a                 jump @43 if a1 != 0
      :                          @42
   648: 82 17                    a0 = u64 [sp]
   650: 82 78 28                 a1 = u64 [a0 + 0x28]
   653: 82 77 20                 a0 = u64 [a0 + 0x20]
   656: 82 8a 18                 a3 = u64 [a1 + 0x18]
   659: 33 08 55 04 01           a1 = 0x10455
   664: 33 09 01                 a2 = 0x1
   667: b4 a0 01 28              ra = 40, jump [a3]
      :                          @43 [@dyn 20]
   671: 82 10 28                 ra = u64 [sp + 0x28]
   674: 82 15 20                 s0 = u64 [sp + 0x20]
   677: 82 16 18                 s1 = u64 [sp + 0x18]
   680: 95 11 30                 sp = sp + 0x30
   683: 32 00                    ret
      :                          @44 [export #0: 'refine']
   685: 95 11 08 f8              sp = sp + 0xfffffffffffff808
   689: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
   693: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
   697: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
   701: 95 11 88 b4 fe           sp = sp + 0xfffffffffffeb488
   706: 33 0a 00 00 01           a3 = 0x10000
   711: 55 18 04 09              jump @46 if a1 >=u 4
      :                          @45
   715: 33 06                    s1 = 0
   717: 28 95 01                 jump @73
      :                          @46
   720: 95 86 fc                 s1 = a1 + 0xfffffffffffffffc
   723: 51 06 8f 01              jump @73 if s1 == 0
      :                          @47
   727: 95 7a 04                 a3 = a0 + 0x4
   730: 7d a8                    a1 = i8 [a3]
   732: 80 79                    a2 = u32 [a0]
   734: 33 05 01                 s0 = 0x1
   737: 59 08 3d                 jump @56 if a1 >=s 0
      :                          @48
   740: 84 87 ff 00              a0 = a1 & 0xff
   744: 33 05 02                 s0 = 0x2
   747: 53 27 c0 00 2d           jump @54 if a0 <u 192
      :                          @49
   752: 33 05 03                 s0 = 0x3
   755: 53 27 e0 00 25           jump @54 if a0 <u 224
      :                          @50
   760: 33 05 04                 s0 = 0x4
   763: 53 27 f0 00 1d           jump @54 if a0 <u 240
      :                          @51
   768: 33 05 05                 s0 = 0x5
   771: 53 27 f8 00 15           jump @54 if a0 <u 248
      :                          @52
   776: 33 05 06                 s0 = 0x6
   779: 53 27 fc 00 0d           jump @54 if a0 <u 252
      :                          @53
   784: 88 77 fe 00              a0 = a0 <u 0xfe
   788: 9a 75 08                 s0 = 0x8 - a0
   791: 01                       fallthrough
      :                          @54
   792: ae 56 06                 jump @56 if s1 >=u s0
      :                          @55
   795: 28 e0 0d                 jump @190
      :                          @56
   798: 7b 19 70                 u64 [sp + 0x70] = a2
   801: 7b 1a 68                 u64 [sp + 0x68] = a3
   804: 64 a7                    a0 = a3
   806: 64 58                    a1 = s0
   808: 50 10 2a 0b 1f           ra = 42, jump @559
      :                          @57 [@dyn 21]
   813: 64 58                    a1 = s0
   815: 64 75                    s0 = a0
   817: e4 86 07                 a0 = maxu(s1, a1)
   820: 7b 18 60                 u64 [sp + 0x60] = a1
   823: c9 87 07                 a0 = a0 - a1
   826: d8 57 08                 a1 = a0 <u s0
   829: e4 57 07                 a0 = maxu(a0, s0)
   832: c9 57 07                 a0 = a0 - s0
   835: 88 77 20                 a0 = a0 <u 0x20
   838: d4 87 07                 a0 = a0 | a1
   841: 52 07 11 01              jump @72 if a0 != 0
      :                          @58
   845: 7b 15 78                 u64 [sp + 0x78] = s0
   848: 48 21 a0 00              u32 [sp + 160] = 0
   852: 49 21 98 00              u64 [sp + 152] = 0
   856: 49 21 90 00              u64 [sp + 144] = 0
   860: 49 21 88 00              u64 [sp + 136] = 0
   864: 49 21 80 00              u64 [sp + 128] = 0
   868: 95 17 80 00              a0 = sp + 0x80
   872: 33 09 24                 a2 = 0x24
   875: 33 0a 03                 a3 = 0x3
   878: 33 08                    a1 = 0
   880: 33 0b                    a4 = 0
   882: 33 0c                    a5 = 0
   884: 0a 12                    ecalli 18 // 'fetch'
   886: 01                       fallthrough
      :                          @59
   887: 95 18 f8 50 01           a1 = sp + 0x150f8
   892: 33 06 24                 s1 = 0x24
   895: 55 15 08 98 00           jump @69 if s0 >=u 8
      :                          @60
   900: 95 17 78                 a0 = sp + 0x78
   903: 7b 87 60 01              u64 [a1 + 0x160] = a0
   907: 33 07 06                 a0 = 0x6
   910: 7b 87 68 01              u64 [a1 + 0x168] = a0
   914: 33 07 78 03 01           a0 = 0x10378
   919: 7b 17 a8 00              u64 [sp + 0xa8] = a0
   923: 49 21 b0 00 01           u64 [sp + 176] = 0x1
   928: 49 21 c8 00              u64 [sp + 200] = 0
   932: 95 18 58 52 01           a1 = sp + 0x15258
   937: 7b 18 b8 00              u64 [sp + 0xb8] = a1
   941: 49 21 c0 00 01           u64 [sp + 192] = 0x1
   946: 95 17 f0 40 01           a0 = sp + 0x140f0
   951: 95 18 a8 00              a1 = sp + 0xa8
   955: 50 10 2c a3 11           ra = 44, jump @305
      :                          @61 [@dyn 22]
   960: 95 17 a8 40 01           a0 = sp + 0x140a8
   965: 82 75 50                 s0 = u64 [a0 + 0x50]
   968: 82 7b 58                 a4 = u64 [a0 + 0x58]
   971: 82 77 48                 a0 = u64 [a0 + 0x48]
   974: 7b 17 70                 u64 [sp + 0x70] = a0
   977: 33 07 02                 a0 = 0x2
   980: 33 08                    a1 = 0
   982: 33 09                    a2 = 0
   984: 64 5a                    a3 = s0
   986: 33 00 2e                 ra = 0x2e
   989: 0a 64                    ecalli 100 // 'log'
   991: 01                       fallthrough
      :                          @62 [@dyn 23]
   992: 82 1c 70                 a5 = u64 [sp + 0x70]
   995: 95 c8 ff ef              a1 = a5 + 0xffffffffffffefff
   999: 53 28 00 f0 2a           jump @68 if a1 <u 4294963200
      :                          @63
  1004: 33 07 20 00 03           a0 = 0x30020
  1009: 95 77 00 10              a0 = a0 + 0x1000
  1013: 01                       fallthrough
      :                          @64
  1014: 82 78                    a1 = u64 [a0]
  1016: c9 87 09                 a2 = a0 - a1
  1019: ab 59 16                 jump @68 if a2 != s0
      :                          @65
  1022: c9 c8 09                 a2 = a1 - a5
  1025: 01                       fallthrough
      :                          @66
  1026: 82 7a                    a3 = u64 [a0]
  1028: ab 8a f2                 jump @64 if a3 != a1
      :                          @67
  1031: 7b 79                    u64 [a0] = a2
  1033: 33 0b                    a4 = 0
  1035: 95 1a 80 00              a3 = sp + 0x80
  1039: 28 53                    jump @73
      :                          @68
  1041: 95 1a 80 00              a3 = sp + 0x80
  1045: 28 4d                    jump @73
      :                          @69
  1047: 82 17 68                 a0 = u64 [sp + 0x68]
  1050: 82 18 60                 a1 = u64 [sp + 0x60]
  1053: c8 87 07                 a0 = a0 + a1
  1056: 80 75                    s0 = u32 [a0]
  1058: 80 78 04                 a1 = u32 [a0 + 0x4]
  1061: 7b 18 68                 u64 [sp + 0x68] = a1
  1064: 80 77 08                 a0 = u32 [a0 + 0x8]
  1067: 7b 17 60                 u64 [sp + 0x60] = a0
  1070: 95 17 a8 00              a0 = sp + 0xa8
  1074: 33 09 00 40 01           a2 = 0x14000
  1079: 33 08                    a1 = 0
  1081: 50 10 30 4c 14           ra = 48, jump @373
      :                          @70 [@dyn 24]
  1086: 95 18 80 00              a1 = sp + 0x80
  1090: 95 19 a8 00              a2 = sp + 0xa8
  1094: 33 0b 00 40 01           a4 = 0x14000
  1099: 82 17 70                 a0 = u64 [sp + 0x70]
  1102: 33 0a                    a3 = 0
  1104: 0a 11                    ecalli 17 // 'historical_lookup'
  1106: 01                       fallthrough
      :                          @71
  1107: 95 78 01                 a1 = a0 + 0x1
  1110: 55 18 04 2a              jump @74 if a1 >=u 4
      :                          @72
  1114: 33 06                    s1 = 0
  1116: 33 0a 00 00 01           a3 = 0x10000
  1121: 01                       fallthrough
      :                          @73
  1122: 64 a7                    a0 = a3
  1124: 64 68                    a1 = s1
  1126: 33 09 78 4b 01           a2 = 0x14b78
  1131: c8 91 01                 sp = sp + a2
  1134: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  1138: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  1142: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  1146: 95 11 f8 07              sp = sp + 0x7f8
  1150: 32 00                    ret
      :                          @74
  1152: 95 78 fd                 a1 = a0 + 0xfffffffffffffffd
  1155: 53 18 03 d7              jump @72 if a1 <u 3
      :                          @75
  1159: 84 78 fe                 a1 = a0 & 0xfffffffffffffffe
  1162: 51 18 06 d0              jump @72 if a1 == 6
      :                          @76
  1166: 95 78 f8                 a1 = a0 + 0xfffffffffffffff8
  1169: 53 18 03 c9              jump @72 if a1 <u 3
      :                          @77
  1173: 7c 18 aa 00              a1 = u8 [sp + 0xaa]
  1177: 7c 19 a9 00              a2 = u8 [sp + 0xa9]
  1181: 7c 1a a8 00              a3 = u8 [sp + 0xa8]
  1185: 97 88 10                 a1 = a1 << 0x10
  1188: 97 99 08                 a2 = a2 << 0x8
  1191: d4 98 08                 a1 = a1 | a2
  1194: d4 a8 08                 a1 = a1 | a3
  1197: 95 79 f5                 a2 = a0 + 0xfffffffffffffff5
  1200: ac 89 aa                 jump @72 if a2 <u a1
      :                          @78
  1203: 7c 17 ad 00              a0 = u8 [sp + 0xad]
  1207: 7c 1a ac 00              a3 = u8 [sp + 0xac]
  1211: 7c 1b ab 00              a4 = u8 [sp + 0xab]
  1215: 97 77 10                 a0 = a0 << 0x10
  1218: 97 aa 08                 a3 = a3 << 0x8
  1221: d4 a7 07                 a0 = a0 | a3
  1224: d4 b7 07                 a0 = a0 | a4
  1227: c9 89 09                 a2 = a2 - a1
  1230: ac 79 8c                 jump @72 if a2 <u a0
      :                          @79
  1233: c9 79 06                 s1 = a2 - a0
  1236: 53 16 04 86              jump @72 if s1 <u 4
      :                          @80
  1240: 95 12 b3 00              t0 = sp + 0xb3
  1244: c8 28 03                 t1 = a1 + t0
  1247: c8 37 0b                 a4 = a0 + t1
  1250: 7c bc 03                 a5 = u8 [a4 + 0x3]
  1253: 7b 15 08                 u64 [sp + 0x8] = s0
  1256: 7c b5 02                 s0 = u8 [a4 + 0x2]
  1259: 7c ba                    a3 = u8 [a4]
  1261: 7c b9 01                 a2 = u8 [a4 + 0x1]
  1264: 97 cc 10                 a5 = a5 << 0x10
  1267: 97 55 08                 s0 = s0 << 0x8
  1270: d4 5c 0c                 a5 = a5 | s0
  1273: d4 c9 09                 a2 = a2 | a5
  1276: 97 99 08                 a2 = a2 << 0x8
  1279: d4 a9 0c                 a5 = a2 | a3
  1282: 95 66 fc                 s1 = s1 + 0xfffffffffffffffc
  1285: ac c6 55 ff              jump @72 if s1 <u a5
      :                          @81
  1289: 7c 19 af 00              a2 = u8 [sp + 0xaf]
  1293: 7c 1a ae 00              a3 = u8 [sp + 0xae]
  1297: 97 99 08                 a2 = a2 << 0x8
  1300: 7c 16 b2 00              s1 = u8 [sp + 0xb2]
  1304: 7c 15 b1 00              s0 = u8 [sp + 0xb1]
  1308: d4 a9 09                 a2 = a2 | a3
  1311: 7c 1a b0 00              a3 = u8 [sp + 0xb0]
  1315: 97 66 10                 s1 = s1 << 0x10
  1318: 97 55 08                 s0 = s0 << 0x8
  1321: d4 65 05                 s0 = s0 | s1
  1324: d4 5a 0a                 a3 = a3 | s0
  1327: 49 11 70 ff ef           u64 [sp + 112] = 0xffffffffffffefff
  1332: 95 bb 04                 a4 = a4 + 0x4
  1335: 33 04 a8 40 01           t2 = 0x140a8
  1340: c8 41 06                 s1 = sp + t2
  1343: 7b 69                    u64 [s1] = a2
  1345: 7b 6a 08                 u64 [s1 + 0x8] = a3
  1348: 7b 62 10                 u64 [s1 + 0x10] = t0
  1351: 7b 68 18                 u64 [s1 + 0x18] = a1
  1354: 7b 63 20                 u64 [s1 + 0x20] = t1
  1357: 7b 67 28                 u64 [s1 + 0x28] = a0
  1360: 7b 6b 30                 u64 [s1 + 0x30] = a4
  1363: 7b 6c 38                 u64 [s1 + 0x38] = a5
  1366: 7b 66 48                 u64 [s1 + 0x48] = s1
  1369: 33 08 06                 a1 = 0x6
  1372: 7b 68 50                 u64 [s1 + 0x50] = a1
  1375: 95 17 b0 40 01           a0 = sp + 0x140b0
  1380: 7b 67 58                 u64 [s1 + 0x58] = a0
  1383: 7b 68 60                 u64 [s1 + 0x60] = a1
  1386: 95 17 b8 40 01           a0 = sp + 0x140b8
  1391: 7b 67 68                 u64 [s1 + 0x68] = a0
  1394: 7b 68 70                 u64 [s1 + 0x70] = a1
  1397: 95 17 c0 40 01           a0 = sp + 0x140c0
  1402: 7b 67 78                 u64 [s1 + 0x78] = a0
  1405: 7b 68 80 00              u64 [s1 + 0x80] = a1
  1409: 95 17 c8 40 01           a0 = sp + 0x140c8
  1414: 7b 67 88 00              u64 [s1 + 0x88] = a0
  1418: 7b 68 90 00              u64 [s1 + 0x90] = a1
  1422: 95 17 d0 40 01           a0 = sp + 0x140d0
  1427: 7b 67 98 00              u64 [s1 + 0x98] = a0
  1431: 7b 68 a0 00              u64 [s1 + 0xa0] = a1
  1435: 95 17 d8 40 01           a0 = sp + 0x140d8
  1440: 7b 67 a8 00              u64 [s1 + 0xa8] = a0
  1444: 7b 68 b0 00              u64 [s1 + 0xb0] = a1
  1448: 95 17 e0 40 01           a0 = sp + 0x140e0
  1453: 7b 67 b8 00              u64 [s1 + 0xb8] = a0
  1457: 7b 18 58                 u64 [sp + 0x58] = a1
  1460: 7b 68 c0 00              u64 [s1 + 0xc0] = a1
  1464: 33 07 78 00 01           a0 = 0x10078
  1469: 95 16 f8 50 01           s1 = sp + 0x150f8
  1474: 7b 67 60 01              u64 [s1 + 0x160] = a0
  1478: 49 26 68 01 08           u64 [s1 + 360] = 0x8
  1483: 49 26 80 01              u64 [s1 + 384] = 0
  1487: 95 18 f0 40 01           a1 = sp + 0x140f0
  1492: 7b 68 70 01              u64 [s1 + 0x170] = a1
  1496: 49 26 78 01 08           u64 [s1 + 376] = 0x8
  1501: 95 17 80 51 01           a0 = sp + 0x15180
  1506: 95 18 58 52 01           a1 = sp + 0x15258
  1511: 50 10 32 77 0f           ra = 50, jump @305
      :                          @82 [@dyn 25]
  1516: 82 65 90 00              s0 = u64 [s1 + 0x90]
  1520: 82 6b 98 00              a4 = u64 [s1 + 0x98]
  1524: 82 66 88 00              s1 = u64 [s1 + 0x88]
  1528: 33 07 02                 a0 = 0x2
  1531: 33 08                    a1 = 0
  1533: 33 09                    a2 = 0
  1535: 64 5a                    a3 = s0
  1537: 33 00 34                 ra = 0x34
  1540: 0a 64                    ecalli 100 // 'log'
  1542: 01                       fallthrough
      :                          @83 [@dyn 26]
  1543: 82 17 70                 a0 = u64 [sp + 0x70]
  1546: c8 67 07                 a0 = a0 + s1
  1549: 53 27 00 f0 23           jump @89 if a0 <u 4294963200
      :                          @84
  1554: 33 07 20 00 03           a0 = 0x30020
  1559: 95 77 00 10              a0 = a0 + 0x1000
  1563: 01                       fallthrough
      :                          @85
  1564: 82 78                    a1 = u64 [a0]
  1566: c9 87 09                 a2 = a0 - a1
  1569: ab 59 0f                 jump @89 if a2 != s0
      :                          @86
  1572: c9 68 09                 a2 = a1 - s1
  1575: 01                       fallthrough
      :                          @87
  1576: 82 7a                    a3 = u64 [a0]
  1578: ab 8a f2                 jump @85 if a3 != a1
      :                          @88
  1581: 7b 79                    u64 [a0] = a2
  1583: 01                       fallthrough
      :                          @89
  1584: 95 15 a8 40 01           s0 = sp + 0x140a8
  1589: 82 57 30                 a0 = u64 [s0 + 0x30]
  1592: 82 58 38                 a1 = u64 [s0 + 0x38]
  1595: 33 09                    a2 = 0
  1597: 0a 14                    ecalli 20 // 'machine'
  1599: 7b 57 40                 u64 [s0 + 0x40] = a0
  1602: 95 17 e8 40 01           a0 = sp + 0x140e8
  1607: 95 16 f8 50 01           s1 = sp + 0x150f8
  1612: 7b 67 88 00              u64 [s1 + 0x88] = a0
  1616: 82 17 58                 a0 = u64 [sp + 0x58]
  1619: 7b 67 90 00              u64 [s1 + 0x90] = a0
  1623: 33 07 18 01 01           a0 = 0x10118
  1628: 7b 57 48                 u64 [s0 + 0x48] = a0
  1631: 95 17 80 51 01           a0 = sp + 0x15180
  1636: 7b 57 58                 u64 [s0 + 0x58] = a0
  1639: 49 15 50 01              u64 [s0 + 80] = 0x1
  1643: 49 15 60 01              u64 [s0 + 96] = 0x1
  1647: 49 15 68                 u64 [s0 + 104] = 0
  1650: 95 17 58 52 01           a0 = sp + 0x15258
  1655: 95 18 f0 40 01           a1 = sp + 0x140f0
  1660: 50 10 36 e2 0e           ra = 54, jump @305
      :                          @90 [@dyn 27]
  1665: 82 65 68 01              s0 = u64 [s1 + 0x168]
  1669: 82 6b 70 01              a4 = u64 [s1 + 0x170]
  1673: 82 66 60 01              s1 = u64 [s1 + 0x160]
  1677: 33 07 02                 a0 = 0x2
  1680: 33 08                    a1 = 0
  1682: 33 09                    a2 = 0
  1684: 64 5a                    a3 = s0
  1686: 33 00 38                 ra = 0x38
  1689: 0a 64                    ecalli 100 // 'log'
  1691: 01                       fallthrough
      :                          @91 [@dyn 28]
  1692: 82 17 70                 a0 = u64 [sp + 0x70]
  1695: c8 67 07                 a0 = a0 + s1
  1698: 53 27 00 f0 23           jump @97 if a0 <u 4294963200
      :                          @92
  1703: 33 07 20 00 03           a0 = 0x30020
  1708: 95 77 00 10              a0 = a0 + 0x1000
  1712: 01                       fallthrough
      :                          @93
  1713: 82 78                    a1 = u64 [a0]
  1715: c9 87 09                 a2 = a0 - a1
  1718: ab 59 0f                 jump @97 if a2 != s0
      :                          @94
  1721: c9 68 09                 a2 = a1 - s1
  1724: 01                       fallthrough
      :                          @95
  1725: 82 7a                    a3 = u64 [a0]
  1727: ab 8a f2                 jump @93 if a3 != a1
      :                          @96
  1730: 7b 79                    u64 [a0] = a2
  1732: 01                       fallthrough
      :                          @97
  1733: 95 19 a8 40 01           a2 = sp + 0x140a8
  1738: 82 97                    a0 = u64 [a2]
  1740: 7b 17 48                 u64 [sp + 0x48] = a0
  1743: 82 97 08                 a0 = u64 [a2 + 0x8]
  1746: 7b 17 40                 u64 [sp + 0x40] = a0
  1749: 82 97 10                 a0 = u64 [a2 + 0x10]
  1752: 7b 17 38                 u64 [sp + 0x38] = a0
  1755: 82 95 18                 s0 = u64 [a2 + 0x18]
  1758: 82 98 20                 a1 = u64 [a2 + 0x20]
  1761: 7b 18 30                 u64 [sp + 0x30] = a1
  1764: 80 97 40                 a0 = u32 [a2 + 0x40]
  1767: 82 96 28                 s1 = u64 [a2 + 0x28]
  1770: 49 11 50 ff 0f           u64 [sp + 80] = 0xfff
  1775: 95 59 ff 0f              a2 = s0 + 0xfff
  1779: 98 99 0c                 a2 = a2 >> 0xc
  1782: 33 08 10                 a1 = 0x10
  1785: 7b 17 58                 u64 [sp + 0x58] = a0
  1788: 0a 17                    ecalli 23 // 'zero'
  1790: 01                       fallthrough
      :                          @98
  1791: 51 07 17                 jump @100 if a0 == 0
      :                          @99
  1794: 33 0a 44 06 01           a3 = 0x10644
  1799: 33 07 02                 a0 = 0x2
  1802: 33 0b 3e                 a4 = 0x3e
  1805: 33 08                    a1 = 0
  1807: 33 09                    a2 = 0
  1809: 0a 64                    ecalli 100 // 'log'
  1811: 28 e0 00                 jump @113
      :                          @100
  1814: 7b 16 28                 u64 [sp + 0x28] = s1
  1817: 82 17 50                 a0 = u64 [sp + 0x50]
  1820: c8 67 07                 a0 = a0 + s1
  1823: 98 77 0c                 a0 = a0 >> 0xc
  1826: 82 19 48                 a2 = u64 [sp + 0x48]
  1829: c8 79 09                 a2 = a2 + a0
  1832: 7b 15 48                 u64 [sp + 0x48] = s0
  1835: 95 57 ff ff 00           a0 = s0 + 0xffff
  1840: 84 77 00 00 ff           a0 = a0 & 0xffffffffffff0000
  1845: 95 75 00 00 02           s0 = a0 + 0x20000
  1850: 98 58 0c                 a1 = s0 >> 0xc
  1853: 82 17 58                 a0 = u64 [sp + 0x58]
  1856: 0a 17                    ecalli 23 // 'zero'
  1858: 01                       fallthrough
      :                          @101
  1859: 51 07 17                 jump @103 if a0 == 0
      :                          @102
  1862: 33 0a 06 06 01           a3 = 0x10606
  1867: 33 07 02                 a0 = 0x2
  1870: 33 0b 3e                 a4 = 0x3e
  1873: 33 08                    a1 = 0
  1875: 33 09                    a2 = 0
  1877: 0a 64                    ecalli 100 // 'log'
  1879: 28 9c 00                 jump @113
      :                          @103
  1882: 82 16 50                 s1 = u64 [sp + 0x50]
  1885: 82 17 40                 a0 = u64 [sp + 0x40]
  1888: c8 76 06                 s1 = s1 + a0
  1891: 98 69 0c                 a2 = s1 >> 0xc
  1894: 84 67 00 f0              a0 = s1 & 0xfffffffffffff000
  1898: 14 08 00 00 fe fe 00 00 00 00 a1 = 0xfefe0000
  1908: c9 78 08                 a1 = a1 - a0
  1911: 98 88 0c                 a1 = a1 >> 0xc
  1914: 82 17 58                 a0 = u64 [sp + 0x58]
  1917: 0a 17                    ecalli 23 // 'zero'
  1919: 01                       fallthrough
      :                          @104
  1920: 51 07 16                 jump @106 if a0 == 0
      :                          @105
  1923: 33 0a ca 05 01           a3 = 0x105ca
  1928: 33 07 02                 a0 = 0x2
  1931: 33 0b 3c                 a4 = 0x3c
  1934: 33 08                    a1 = 0
  1936: 33 09                    a2 = 0
  1938: 0a 64                    ecalli 100 // 'log'
  1940: 28 5f                    jump @113
      :                          @106
  1942: 33 09 00 00 01           a2 = 0x10000
  1947: 82 17 58                 a0 = u64 [sp + 0x58]
  1950: 82 18 38                 a1 = u64 [sp + 0x38]
  1953: 82 1a 48                 a3 = u64 [sp + 0x48]
  1956: 0a 16                    ecalli 22 // 'poke'
  1958: 01                       fallthrough
      :                          @107
  1959: 51 07 16                 jump @109 if a0 == 0
      :                          @108
  1962: 33 0a 8c 05 01           a3 = 0x1058c
  1967: 33 07 02                 a0 = 0x2
  1970: 33 0b 3e                 a4 = 0x3e
  1973: 33 08                    a1 = 0
  1975: 33 09                    a2 = 0
  1977: 0a 64                    ecalli 100 // 'log'
  1979: 28 38                    jump @113
      :                          @109
  1981: 82 17 58                 a0 = u64 [sp + 0x58]
  1984: 82 18 30                 a1 = u64 [sp + 0x30]
  1987: 64 59                    a2 = s0
  1989: 82 1a 28                 a3 = u64 [sp + 0x28]
  1992: 0a 16                    ecalli 22 // 'poke'
  1994: 01                       fallthrough
      :                          @110
  1995: 51 07 16                 jump @112 if a0 == 0
      :                          @111
  1998: 33 0a 4e 05 01           a3 = 0x1054e
  2003: 33 07 02                 a0 = 0x2
  2006: 33 0b 3e                 a4 = 0x3e
  2009: 33 08                    a1 = 0
  2011: 33 09                    a2 = 0
  2013: 0a 64                    ecalli 100 // 'log'
  2015: 28 14                    jump @113
      :                          @112
  2017: 33 0a 20 05 01           a3 = 0x10520
  2022: 33 07 02                 a0 = 0x2
  2025: 33 0b 2e                 a4 = 0x2e
  2028: 33 08                    a1 = 0
  2030: 33 09                    a2 = 0
  2032: 0a 64                    ecalli 100 // 'log'
  2034: 01                       fallthrough
      :                          @113
  2035: 33 06 00 10              s1 = 0x1000
  2039: 33 05 08 10              s0 = 0x1008
  2043: 95 17 f0 40 01           a0 = sp + 0x140f0
  2048: 33 08                    a1 = 0
  2050: 33 09 08 10              a2 = 0x1008
  2054: 50 10 3a 7f 10           ra = 58, jump @373
      :                          @114 [@dyn 29]
  2059: 95 17 f8 50 01           a0 = sp + 0x150f8
  2064: 49 07                    u64 [a0 + 0] = 0
  2066: 95 17 f0 40 01           a0 = sp + 0x140f0
  2071: 33 0a 06                 a3 = 0x6
  2074: 33 08                    a1 = 0
  2076: 7b 15 30                 u64 [sp + 0x30] = s0
  2079: 64 59                    a2 = s0
  2081: 33 0b                    a4 = 0
  2083: 33 0c                    a5 = 0
  2085: 0a 12                    ecalli 18 // 'fetch'
  2087: 01                       fallthrough
      :                          @115
  2088: 95 18 f8 50 01           a1 = sp + 0x150f8
  2093: 7b 87 18                 u64 [a1 + 0x18] = a0
  2096: 51 17 ff b1 02           jump @143 if a0 == 4294967295
      :                          @116
  2101: 33 0c                    a5 = 0
  2103: 33 07 06                 a0 = 0x6
  2106: 7b 17 58                 u64 [sp + 0x58] = a0
  2109: 33 07 58 01 01           a0 = 0x10158
  2114: 7b 17 28                 u64 [sp + 0x28] = a0
  2117: 33 07 a0 01 01           a0 = 0x101a0
  2122: 7b 17 20                 u64 [sp + 0x20] = a0
  2125: 33 07 00 00 01           a0 = 0x10000
  2130: 7b 17 18                 u64 [sp + 0x18] = a0
  2133: 33 07 20 00 03           a0 = 0x30020
  2138: c8 76 06                 s1 = s1 + a0
  2141: 33 07 f8 01 01           a0 = 0x101f8
  2146: 7b 17 10                 u64 [sp + 0x10] = a0
  2149: 28 3c                    jump @119
      :                          @117
  2151: 95 17 f8 50 01           a0 = sp + 0x150f8
  2156: 82 7b                    a4 = u64 [a0]
  2158: 95 bb 01                 a4 = a4 + 0x1
  2161: 7b 7b                    u64 [a0] = a4
  2163: 95 17 f0 40 01           a0 = sp + 0x140f0
  2168: 33 0a 06                 a3 = 0x6
  2171: 33 08                    a1 = 0
  2173: 82 19 30                 a2 = u64 [sp + 0x30]
  2176: 33 0c                    a5 = 0
  2178: 0a 12                    ecalli 18 // 'fetch'
  2180: 01                       fallthrough
      :                          @118
  2181: 82 18 48                 a1 = u64 [sp + 0x48]
  2184: 97 88 0c                 a1 = a1 << 0xc
  2187: 82 1c 50                 a5 = u64 [sp + 0x50]
  2190: 82 19 40                 a2 = u64 [sp + 0x40]
  2193: da 98 0c                 a5 = a1 if a2 == 0
  2196: 95 18 f8 50 01           a1 = sp + 0x150f8
  2201: 7b 87 18                 u64 [a1 + 0x18] = a0
  2204: 51 17 ff 3e 02           jump @142 if a0 == 4294967295
      :                          @119
  2209: 7b 1c 50                 u64 [sp + 0x50] = a5
  2212: 7b 88 88 00              u64 [a1 + 0x88] = a1
  2216: 82 17 58                 a0 = u64 [sp + 0x58]
  2219: 7b 87 90 00              u64 [a1 + 0x90] = a0
  2223: 95 19 10 51 01           a2 = sp + 0x15110
  2228: 7b 89 98 00              u64 [a1 + 0x98] = a2
  2232: 7b 87 a0 00              u64 [a1 + 0xa0] = a0
  2236: 82 17 28                 a0 = u64 [sp + 0x28]
  2239: 7b 87 60 01              u64 [a1 + 0x160] = a0
  2243: 49 28 68 01 02           u64 [a1 + 360] = 0x2
  2248: 49 28 80 01              u64 [a1 + 384] = 0
  2252: 95 19 80 51 01           a2 = sp + 0x15180
  2257: 7b 89 70 01              u64 [a1 + 0x170] = a2
  2261: 49 28 78 01 02           u64 [a1 + 376] = 0x2
  2266: 95 17 18 51 01           a0 = sp + 0x15118
  2271: 95 18 58 52 01           a1 = sp + 0x15258
  2276: 50 10 3c 7a 0c           ra = 60, jump @305
      :                          @120 [@dyn 30]
  2281: 95 17 f8 50 01           a0 = sp + 0x150f8
  2286: 82 75 28                 s0 = u64 [a0 + 0x28]
  2289: 82 7b 30                 a4 = u64 [a0 + 0x30]
  2292: 82 77 20                 a0 = u64 [a0 + 0x20]
  2295: 7b 17 48                 u64 [sp + 0x48] = a0
  2298: 33 07 02                 a0 = 0x2
  2301: 33 08                    a1 = 0
  2303: 33 09                    a2 = 0
  2305: 64 5a                    a3 = s0
  2307: 33 00 3e                 ra = 0x3e
  2310: 0a 64                    ecalli 100 // 'log'
  2312: 01                       fallthrough
      :                          @121 [@dyn 31]
  2313: 82 1b 48                 a4 = u64 [sp + 0x48]
  2316: 82 17 70                 a0 = u64 [sp + 0x70]
  2319: c8 b7 07                 a0 = a0 + a4
  2322: 53 27 00 f0 19           jump @126 if a0 <u 4294963200
      :                          @122
  2327: 82 67                    a0 = u64 [s1]
  2329: c9 76 08                 a1 = s1 - a0
  2332: ab 58 0f                 jump @126 if a1 != s0
      :                          @123
  2335: c9 b7 08                 a1 = a0 - a4
  2338: 01                       fallthrough
      :                          @124
  2339: 82 69                    a2 = u64 [s1]
  2341: ab 79 f2                 jump @122 if a2 != a0
      :                          @125
  2344: 7b 68                    u64 [s1] = a1
  2346: 01                       fallthrough
      :                          @126
  2347: 95 18 a8 40 01           a1 = sp + 0x140a8
  2352: 80 87 48                 a0 = u32 [a1 + 0x48]
  2355: 80 88 4c                 a1 = u32 [a1 + 0x4c]
  2358: 95 19 f8 50 01           a2 = sp + 0x150f8
  2363: 7b 97 08                 u64 [a2 + 0x8] = a0
  2366: 7b 98 10                 u64 [a2 + 0x10] = a1
  2369: 82 99                    a2 = u64 [a2]
  2371: 7b 19 40                 u64 [sp + 0x40] = a2
  2374: 33 09 01                 a2 = 0x1
  2377: 7b 18 48                 u64 [sp + 0x48] = a1
  2380: 0a 17                    ecalli 23 // 'zero'
  2382: 95 19 f8 50 01           a2 = sp + 0x150f8
  2387: 7b 97 f8 00              u64 [a2 + 0xf8] = a0
  2391: 95 17 00 51 01           a0 = sp + 0x15100
  2396: 7b 97 60 01              u64 [a2 + 0x160] = a0
  2400: 82 17 58                 a0 = u64 [sp + 0x58]
  2403: 7b 97 68 01              u64 [a2 + 0x168] = a0
  2407: 95 18 08 51 01           a1 = sp + 0x15108
  2412: 7b 98 70 01              u64 [a2 + 0x170] = a1
  2416: 7b 97 78 01              u64 [a2 + 0x178] = a0
  2420: 95 18 f0 51 01           a1 = sp + 0x151f0
  2425: 7b 98 80 01              u64 [a2 + 0x180] = a1
  2429: 7b 97 88 01              u64 [a2 + 0x188] = a0
  2433: 82 17 20                 a0 = u64 [sp + 0x20]
  2436: 7b 97 88 00              u64 [a2 + 0x88] = a0
  2440: 49 29 90 00 03           u64 [a2 + 144] = 0x3
  2445: 49 29 a8 00              u64 [a2 + 168] = 0
  2449: 95 17 58 52 01           a0 = sp + 0x15258
  2454: 7b 97 98 00              u64 [a2 + 0x98] = a0
  2458: 49 29 a0 00 03           u64 [a2 + 160] = 0x3
  2463: 95 17 18 51 01           a0 = sp + 0x15118
  2468: 95 18 80 51 01           a1 = sp + 0x15180
  2473: 50 10 40 b5 0b           ra = 64, jump @305
      :                          @127 [@dyn 32]
  2478: 95 17 f8 50 01           a0 = sp + 0x150f8
  2483: 82 75 28                 s0 = u64 [a0 + 0x28]
  2486: 82 7b 30                 a4 = u64 [a0 + 0x30]
  2489: 82 77 20                 a0 = u64 [a0 + 0x20]
  2492: 7b 17 38                 u64 [sp + 0x38] = a0
  2495: 33 07 02                 a0 = 0x2
  2498: 33 08                    a1 = 0
  2500: 33 09                    a2 = 0
  2502: 64 5a                    a3 = s0
  2504: 33 00 42                 ra = 0x42
  2507: 0a 64                    ecalli 100 // 'log'
  2509: 01                       fallthrough
      :                          @128 [@dyn 33]
  2510: 82 1b 38                 a4 = u64 [sp + 0x38]
  2513: 82 17 70                 a0 = u64 [sp + 0x70]
  2516: c8 b7 07                 a0 = a0 + a4
  2519: 53 27 00 f0 19           jump @133 if a0 <u 4294963200
      :                          @129
  2524: 82 67                    a0 = u64 [s1]
  2526: c9 76 08                 a1 = s1 - a0
  2529: ab 58 0f                 jump @133 if a1 != s0
      :                          @130
  2532: c9 b7 08                 a1 = a0 - a4
  2535: 01                       fallthrough
      :                          @131
  2536: 82 69                    a2 = u64 [s1]
  2538: ab 79 f2                 jump @129 if a2 != a0
      :                          @132
  2541: 7b 68                    u64 [s1] = a1
  2543: 01                       fallthrough
      :                          @133
  2544: 95 1a f8 50 01           a3 = sp + 0x150f8
  2549: 82 a9 10                 a2 = u64 [a3 + 0x10]
  2552: 82 a7 08                 a0 = u64 [a3 + 0x8]
  2555: 95 18 f0 40 01           a1 = sp + 0x140f0
  2560: 7b a8 00 01              u64 [a3 + 0x100] = a1
  2564: 97 99 0c                 a2 = a2 << 0xc
  2567: 7b a9 08 01              u64 [a3 + 0x108] = a2
  2571: 33 0a 00 10              a3 = 0x1000
  2575: 95 18 f8 40 01           a1 = sp + 0x140f8
  2580: 0a 16                    ecalli 22 // 'poke'
  2582: 95 19 f8 50 01           a2 = sp + 0x150f8
  2587: 7b 97 20 01              u64 [a2 + 0x120] = a0
  2591: 95 17 00 51 01           a0 = sp + 0x15100
  2596: 7b 97 60 01              u64 [a2 + 0x160] = a0
  2600: 82 17 58                 a0 = u64 [sp + 0x58]
  2603: 7b 97 68 01              u64 [a2 + 0x168] = a0
  2607: 95 18 f8 51 01           a1 = sp + 0x151f8
  2612: 7b 98 70 01              u64 [a2 + 0x170] = a1
  2616: 7b 97 78 01              u64 [a2 + 0x178] = a0
  2620: 95 18 00 52 01           a1 = sp + 0x15200
  2625: 7b 98 80 01              u64 [a2 + 0x180] = a1
  2629: 7b 97 88 01              u64 [a2 + 0x188] = a0
  2633: 82 18 18                 a1 = u64 [sp + 0x18]
  2636: 7b 98 90 01              u64 [a2 + 0x190] = a1
  2640: 7b 97 98 01              u64 [a2 + 0x198] = a0
  2644: 95 18 18 52 01           a1 = sp + 0x15218
  2649: 7b 98 a0 01              u64 [a2 + 0x1a0] = a1
  2653: 7b 97 a8 01              u64 [a2 + 0x1a8] = a0
  2657: 82 17 10                 a0 = u64 [sp + 0x10]
  2660: 7b 97 88 00              u64 [a2 + 0x88] = a0
  2664: 49 29 90 00 05           u64 [a2 + 144] = 0x5
  2669: 49 29 a8 00              u64 [a2 + 168] = 0
  2673: 95 17 58 52 01           a0 = sp + 0x15258
  2678: 7b 97 98 00              u64 [a2 + 0x98] = a0
  2682: 49 29 a0 00 05           u64 [a2 + 160] = 0x5
  2687: 95 17 18 51 01           a0 = sp + 0x15118
  2692: 95 18 80 51 01           a1 = sp + 0x15180
  2697: 50 10 44 d5 0a           ra = 68, jump @305
      :                          @134 [@dyn 34]
  2702: 95 17 f8 50 01           a0 = sp + 0x150f8
  2707: 82 75 28                 s0 = u64 [a0 + 0x28]
  2710: 82 7b 30                 a4 = u64 [a0 + 0x30]
  2713: 82 77 20                 a0 = u64 [a0 + 0x20]
  2716: 7b 17 38                 u64 [sp + 0x38] = a0
  2719: 33 07 02                 a0 = 0x2
  2722: 33 08                    a1 = 0
  2724: 33 09                    a2 = 0
  2726: 64 5a                    a3 = s0
  2728: 33 00 46                 ra = 0x46
  2731: 0a 64                    ecalli 100 // 'log'
  2733: 01                       fallthrough
      :                          @135 [@dyn 35]
  2734: 82 1b 38                 a4 = u64 [sp + 0x38]
  2737: 82 17 70                 a0 = u64 [sp + 0x70]
  2740: c8 b7 07                 a0 = a0 + a4
  2743: 53 27 00 f0 b0 fd        jump @117 if a0 <u 4294963200
      :                          @136
  2749: 82 67                    a0 = u64 [s1]
  2751: c9 76 08                 a1 = s1 - a0
  2754: ab 58 a5 fd              jump @117 if a1 != s0
      :                          @137
  2758: c9 b7 08                 a1 = a0 - a4
  2761: 01                       fallthrough
      :                          @138
  2762: 82 69                    a2 = u64 [s1]
  2764: ab 79 f1                 jump @136 if a2 != a0
      :                          @139
  2767: 7b 68                    u64 [s1] = a1
  2769: 33 0a                    a3 = 0
  2771: 01                       fallthrough
      :                          @140
  2772: ab 79 e9                 jump @136 if a2 != a0
      :                          @141
  2775: 28 90 fd                 jump @117
      :                          @142
  2778: 82 87                    a0 = u64 [a1]
  2780: 97 77 0c                 a0 = a0 << 0xc
  2783: 28 07                    jump @144
      :                          @143
  2785: 33 07                    a0 = 0
  2787: 33 0c                    a5 = 0
  2789: 01                       fallthrough
      :                          @144
  2790: 82 19 08                 a2 = u64 [sp + 0x8]
  2793: 82 1a 68                 a3 = u64 [sp + 0x68]
  2796: 82 1b 60                 a4 = u64 [sp + 0x60]
  2799: 49 18 50                 u64 [a1 + 80] = 0
  2802: 49 18 48                 u64 [a1 + 72] = 0
  2805: 49 18 40                 u64 [a1 + 64] = 0
  2808: 49 18 38                 u64 [a1 + 56] = 0
  2811: 49 18 30                 u64 [a1 + 48] = 0
  2814: 49 28 80 00              u64 [a1 + 128] = 0
  2818: 95 16 f8 50 01           s1 = sp + 0x150f8
  2823: 14 08 00 00 ff ff 00 00 00 00 a1 = 0xffff0000
  2833: 7b 68 20                 u64 [s1 + 0x20] = a1
  2836: 14 08 00 00 fe fe 00 00 00 00 a1 = 0xfefe0000
  2846: 7b 68 28                 u64 [s1 + 0x28] = a1
  2849: 7b 6c 58                 u64 [s1 + 0x58] = a5
  2852: 7b 67 60                 u64 [s1 + 0x60] = a0
  2855: 7b 69 68                 u64 [s1 + 0x68] = a2
  2858: 7b 6a 70                 u64 [s1 + 0x70] = a3
  2861: 7b 6b 78                 u64 [s1 + 0x78] = a4
  2864: 95 17 18 51 01           a0 = sp + 0x15118
  2869: 7b 67 20 01              u64 [s1 + 0x120] = a0
  2873: 33 07 0a                 a0 = 0xa
  2876: 7b 67 28 01              u64 [s1 + 0x128] = a0
  2880: 33 07 68 02 01           a0 = 0x10268
  2885: 7b 67 60 01              u64 [s1 + 0x160] = a0
  2889: 49 26 68 01 01           u64 [s1 + 360] = 0x1
  2894: 49 26 80 01              u64 [s1 + 384] = 0
  2898: 95 17 18 52 01           a0 = sp + 0x15218
  2903: 7b 67 70 01              u64 [s1 + 0x170] = a0
  2907: 49 26 78 01 01           u64 [s1 + 376] = 0x1
  2912: 95 17 80 51 01           a0 = sp + 0x15180
  2917: 95 18 58 52 01           a1 = sp + 0x15258
  2922: 50 10 48 f4 09           ra = 72, jump @305
      :                          @145 [@dyn 36]
  2927: 82 65 90 00              s0 = u64 [s1 + 0x90]
  2931: 82 6b 98 00              a4 = u64 [s1 + 0x98]
  2935: 82 66 88 00              s1 = u64 [s1 + 0x88]
  2939: 33 07 02                 a0 = 0x2
  2942: 33 08                    a1 = 0
  2944: 33 09                    a2 = 0
  2946: 64 5a                    a3 = s0
  2948: 33 00 4a                 ra = 0x4a
  2951: 0a 64                    ecalli 100 // 'log'
  2953: 01                       fallthrough
      :                          @146 [@dyn 37]
  2954: 82 17 70                 a0 = u64 [sp + 0x70]
  2957: c8 67 07                 a0 = a0 + s1
  2960: 53 27 00 f0 23           jump @152 if a0 <u 4294963200
      :                          @147
  2965: 33 07 20 00 03           a0 = 0x30020
  2970: 95 77 00 10              a0 = a0 + 0x1000
  2974: 01                       fallthrough
      :                          @148
  2975: 82 78                    a1 = u64 [a0]
  2977: c9 87 09                 a2 = a0 - a1
  2980: ab 59 0f                 jump @152 if a2 != s0
      :                          @149
  2983: c9 68 09                 a2 = a1 - s1
  2986: 01                       fallthrough
      :                          @150
  2987: 82 7a                    a3 = u64 [a0]
  2989: ab 8a f2                 jump @148 if a3 != a1
      :                          @151
  2992: 7b 79                    u64 [a0] = a2
  2994: 01                       fallthrough
      :                          @152
  2995: 95 14 f8 50 01           t2 = sp + 0x150f8
  3000: 82 43 20                 t1 = u64 [t2 + 0x20]
  3003: 82 49 28                 a2 = u64 [t2 + 0x28]
  3006: 82 40 30                 ra = u64 [t2 + 0x30]
  3009: 82 4a 38                 a3 = u64 [t2 + 0x38]
  3012: 82 4b 40                 a4 = u64 [t2 + 0x40]
  3015: 82 4c 48                 a5 = u64 [t2 + 0x48]
  3018: 82 46 50                 s1 = u64 [t2 + 0x50]
  3021: 82 45 58                 s0 = u64 [t2 + 0x58]
  3024: 82 42 60                 t0 = u64 [t2 + 0x60]
  3027: 49 24 88 00 00 00 01     u64 [t2 + 136] = 0x10000
  3034: 82 47 68                 a0 = u64 [t2 + 0x68]
  3037: 7b 43 90 00              u64 [t2 + 0x90] = t1
  3041: 82 48 70                 a1 = u64 [t2 + 0x70]
  3044: 7b 49 98 00              u64 [t2 + 0x98] = a2
  3048: 82 49 78                 a2 = u64 [t2 + 0x78]
  3051: 7b 40 a0 00              u64 [t2 + 0xa0] = ra
  3055: 82 43 80 00              t1 = u64 [t2 + 0x80]
  3059: 7b 4a a8 00              u64 [t2 + 0xa8] = a3
  3063: 7b 4b b0 00              u64 [t2 + 0xb0] = a4
  3067: 7b 4c b8 00              u64 [t2 + 0xb8] = a5
  3071: 7b 46 c0 00              u64 [t2 + 0xc0] = s1
  3075: 7b 45 c8 00              u64 [t2 + 0xc8] = s0
  3079: 7b 42 d0 00              u64 [t2 + 0xd0] = t0
  3083: 7b 47 d8 00              u64 [t2 + 0xd8] = a0
  3087: 7b 48 e0 00              u64 [t2 + 0xe0] = a1
  3091: 95 18 f8 50 01           a1 = sp + 0x150f8
  3096: 7b 89 e8 00              u64 [a1 + 0xe8] = a2
  3100: 7b 83 f0 00              u64 [a1 + 0xf0] = t1
  3104: 33 07 06                 a0 = 0x6
  3107: 7b 17 60                 u64 [sp + 0x60] = a0
  3110: 33 07 a0 02 01           a0 = 0x102a0
  3115: 7b 17 38                 u64 [sp + 0x38] = a0
  3118: 33 07 d8 02 01           a0 = 0x102d8
  3123: 7b 17 30                 u64 [sp + 0x30] = a0
  3126: 33 06 20 00 03           s1 = 0x30020
  3131: 95 66 00 10              s1 = s1 + 0x1000
  3135: 01                       fallthrough
      :                          @153
  3136: 7b 88 08 01              u64 [a1 + 0x108] = a1
  3140: 82 17 60                 a0 = u64 [sp + 0x60]
  3143: 7b 87 10 01              u64 [a1 + 0x110] = a0
  3147: 82 17 38                 a0 = u64 [sp + 0x38]
  3150: 7b 87 60 01              u64 [a1 + 0x160] = a0
  3154: 49 28 68 01 01           u64 [a1 + 360] = 0x1
  3159: 49 28 80 01              u64 [a1 + 384] = 0
  3163: 95 19 00 52 01           a2 = sp + 0x15200
  3168: 7b 89 70 01              u64 [a1 + 0x170] = a2
  3172: 49 28 78 01 01           u64 [a1 + 376] = 0x1
  3177: 95 17 18 52 01           a0 = sp + 0x15218
  3182: 95 18 58 52 01           a1 = sp + 0x15258
  3187: 50 10 4c eb 08           ra = 76, jump @305
      :                          @154 [@dyn 38]
  3192: 95 17 f8 50 01           a0 = sp + 0x150f8
  3197: 82 75 28 01              s0 = u64 [a0 + 0x128]
  3201: 82 7b 30 01              a4 = u64 [a0 + 0x130]
  3205: 82 77 20 01              a0 = u64 [a0 + 0x120]
  3209: 7b 17 68                 u64 [sp + 0x68] = a0
  3212: 33 07 02                 a0 = 0x2
  3215: 33 08                    a1 = 0
  3217: 33 09                    a2 = 0
  3219: 64 5a                    a3 = s0
  3221: 33 00 4e                 ra = 0x4e
  3224: 0a 64                    ecalli 100 // 'log'
  3226: 01                       fallthrough
      :                          @155 [@dyn 39]
  3227: 82 1b 68                 a4 = u64 [sp + 0x68]
  3230: 82 17 70                 a0 = u64 [sp + 0x70]
  3233: c8 b7 07                 a0 = a0 + a4
  3236: 53 27 00 f0 19           jump @160 if a0 <u 4294963200
      :                          @156
  3241: 82 67                    a0 = u64 [s1]
  3243: c9 76 08                 a1 = s1 - a0
  3246: ab 58 0f                 jump @160 if a1 != s0
      :                          @157
  3249: c9 b7 08                 a1 = a0 - a4
  3252: 01                       fallthrough
      :                          @158
  3253: 82 69                    a2 = u64 [s1]
  3255: ab 79 f2                 jump @156 if a2 != a0
      :                          @159
  3258: 7b 68                    u64 [s1] = a1
  3260: 01                       fallthrough
      :                          @160
  3261: 95 17 a8 40 01           a0 = sp + 0x140a8
  3266: 82 77 40                 a0 = u64 [a0 + 0x40]
  3269: 95 18 80 51 01           a1 = sp + 0x15180
  3274: 0a 19                    ecalli 25 // 'invoke'
  3276: 95 19 f8 50 01           a2 = sp + 0x150f8
  3281: 7b 97 f8 00              u64 [a2 + 0xf8] = a0
  3285: 7b 98 00 01              u64 [a2 + 0x100] = a1
  3289: 95 17 e8 40 01           a0 = sp + 0x140e8
  3294: 7b 97 60 01              u64 [a2 + 0x160] = a0
  3298: 82 17 60                 a0 = u64 [sp + 0x60]
  3301: 7b 97 68 01              u64 [a2 + 0x168] = a0
  3305: 95 18 f0 51 01           a1 = sp + 0x151f0
  3310: 7b 98 70 01              u64 [a2 + 0x170] = a1
  3314: 7b 97 78 01              u64 [a2 + 0x178] = a0
  3318: 95 18 f8 51 01           a1 = sp + 0x151f8
  3323: 7b 98 80 01              u64 [a2 + 0x180] = a1
  3327: 7b 97 88 01              u64 [a2 + 0x188] = a0
  3331: 82 17 30                 a0 = u64 [sp + 0x30]
  3334: 7b 97 20 01              u64 [a2 + 0x120] = a0
  3338: 49 29 28 01 03           u64 [a2 + 296] = 0x3
  3343: 49 29 40 01              u64 [a2 + 320] = 0
  3347: 95 17 58 52 01           a0 = sp + 0x15258
  3352: 7b 97 30 01              u64 [a2 + 0x130] = a0
  3356: 49 29 38 01 03           u64 [a2 + 312] = 0x3
  3361: 95 17 00 52 01           a0 = sp + 0x15200
  3366: 95 18 18 52 01           a1 = sp + 0x15218
  3371: 50 10 50 33 08           ra = 80, jump @305
      :                          @161 [@dyn 40]
  3376: 95 17 f8 50 01           a0 = sp + 0x150f8
  3381: 82 75 10 01              s0 = u64 [a0 + 0x110]
  3385: 82 7b 18 01              a4 = u64 [a0 + 0x118]
  3389: 82 77 08 01              a0 = u64 [a0 + 0x108]
  3393: 7b 17 68                 u64 [sp + 0x68] = a0
  3396: 33 07 02                 a0 = 0x2
  3399: 33 08                    a1 = 0
  3401: 33 09                    a2 = 0
  3403: 64 5a                    a3 = s0
  3405: 33 00 52                 ra = 0x52
  3408: 0a 64                    ecalli 100 // 'log'
  3410: 01                       fallthrough
      :                          @162 [@dyn 41]
  3411: 82 1b 68                 a4 = u64 [sp + 0x68]
  3414: 82 17 70                 a0 = u64 [sp + 0x70]
  3417: c8 b7 07                 a0 = a0 + a4
  3420: 53 27 00 f0 19           jump @167 if a0 <u 4294963200
      :                          @163
  3425: 82 67                    a0 = u64 [s1]
  3427: c9 76 08                 a1 = s1 - a0
  3430: ab 58 0f                 jump @167 if a1 != s0
      :                          @164
  3433: c9 b7 08                 a1 = a0 - a4
  3436: 01                       fallthrough
      :                          @165
  3437: 82 69                    a2 = u64 [s1]
  3439: ab 79 f2                 jump @163 if a2 != a0
      :                          @166
  3442: 7b 68                    u64 [s1] = a1
  3444: 01                       fallthrough
      :                          @167
  3445: 95 18 f8 50 01           a1 = sp + 0x150f8
  3450: 82 87 f8 00              a0 = u64 [a1 + 0xf8]
  3454: 82 88 00 01              a1 = u64 [a1 + 0x100]
  3458: 85 77 03                 a0 = a0 ^ 0x3
  3461: 85 88 64                 a1 = a1 ^ 0x64
  3464: d4 87 05                 s0 = a0 | a1
  3467: 95 17 18 51 01           a0 = sp + 0x15118
  3472: 33 09 68                 a2 = 0x68
  3475: 95 18 88 51 01           a1 = sp + 0x15188
  3480: 50 10 54 3b 0a           ra = 84, jump @355
      :                          @168 [@dyn 42]
  3485: 95 17 f8 50 01           a0 = sp + 0x150f8
  3490: 82 78 58                 a1 = u64 [a0 + 0x58]
  3493: 7b 18 68                 u64 [sp + 0x68] = a1
  3496: 52 05 93 00              jump @171 if s0 != 0
      :                          @169
  3500: 82 78 60                 a1 = u64 [a0 + 0x60]
  3503: 7b 18 48                 u64 [sp + 0x48] = a1
  3506: 82 75 68                 s0 = u64 [a0 + 0x68]
  3509: 7b 15 40                 u64 [sp + 0x40] = s0
  3512: 82 78 70                 a1 = u64 [a0 + 0x70]
  3515: 7b 18 58                 u64 [sp + 0x58] = a1
  3518: 82 78 78                 a1 = u64 [a0 + 0x78]
  3521: 7b 18 50                 u64 [sp + 0x50] = a1
  3524: 49 27 58 01              u64 [a0 + 344] = 0
  3528: 49 27 50 01              u64 [a0 + 336] = 0
  3532: 49 27 48 01              u64 [a0 + 328] = 0
  3536: 49 27 40 01              u64 [a0 + 320] = 0
  3540: 49 27 38 01              u64 [a0 + 312] = 0
  3544: 49 27 30 01              u64 [a0 + 304] = 0
  3548: 49 27 28 01              u64 [a0 + 296] = 0
  3552: 49 27 20 01              u64 [a0 + 288] = 0
  3556: 95 17 58 52 01           a0 = sp + 0x15258
  3561: 33 09 00 01              a2 = 0x100
  3565: 33 08                    a1 = 0
  3567: 50 10 56 96 0a           ra = 86, jump @373
      :                          @170 [@dyn 43]
  3572: 95 17 a8 40 01           a0 = sp + 0x140a8
  3577: 82 77 40                 a0 = u64 [a0 + 0x40]
  3580: 95 18 18 52 01           a1 = sp + 0x15218
  3585: 82 19 48                 a2 = u64 [sp + 0x48]
  3588: 64 5a                    a3 = s0
  3590: 0a 15                    ecalli 21 // 'peek'
  3592: 95 17 a8 40 01           a0 = sp + 0x140a8
  3597: 82 77 40                 a0 = u64 [a0 + 0x40]
  3600: 95 18 58 52 01           a1 = sp + 0x15258
  3605: 82 19 58                 a2 = u64 [sp + 0x58]
  3608: 82 15 50                 s0 = u64 [sp + 0x50]
  3611: 64 5a                    a3 = s0
  3613: 0a 15                    ecalli 21 // 'peek'
  3615: 95 18 18 52 01           a1 = sp + 0x15218
  3620: 95 1a 58 52 01           a3 = sp + 0x15258
  3625: 82 17 68                 a0 = u64 [sp + 0x68]
  3628: 82 19 40                 a2 = u64 [sp + 0x40]
  3631: 64 5b                    a4 = s0
  3633: 0a 64                    ecalli 100 // 'log'
  3635: 95 18 f8 50 01           a1 = sp + 0x150f8
  3640: 28 08 fe                 jump @153
      :                          @171
  3643: 95 17 f8 40 01           a0 = sp + 0x140f8
  3648: 33 09 00 10              a2 = 0x1000
  3652: 33 05 00 10              s0 = 0x1000
  3656: 33 08                    a1 = 0
  3658: 50 10 58 3b 0a           ra = 88, jump @373
      :                          @172 [@dyn 44]
  3663: 95 1a a8 40 01           a3 = sp + 0x140a8
  3668: 82 a7 40                 a0 = u64 [a3 + 0x40]
  3671: 7a a7 48                 u32 [a3 + 0x48] = a0
  3674: 82 16 68                 s1 = u64 [sp + 0x68]
  3677: 98 68 0c                 a1 = s1 >> 0xc
  3680: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  3683: 33 0a 00 10              a3 = 0x1000
  3687: 95 18 f8 40 01           a1 = sp + 0x140f8
  3692: 64 69                    a2 = s1
  3694: 0a 15                    ecalli 21 // 'peek'
  3696: 83 55 08                 i32 s0 = s0 + 0x8
  3699: 95 17 f0 40 01           a0 = sp + 0x140f0
  3704: 64 58                    a1 = s0
  3706: 0a 13                    ecalli 19 // 'export'
  3708: 33 09 00 10              a2 = 0x1000
  3712: 95 17 f8 40 01           a0 = sp + 0x140f8
  3717: 33 08                    a1 = 0
  3719: 50 10 5a fe 09           ra = 90, jump @373
      :                          @173 [@dyn 45]
  3724: 95 1a a8 40 01           a3 = sp + 0x140a8
  3729: 82 a7 40                 a0 = u64 [a3 + 0x40]
  3732: 7a a7 48                 u32 [a3 + 0x48] = a0
  3735: 95 69 00 10              a2 = s1 + 0x1000
  3739: 98 98 0c                 a1 = a2 >> 0xc
  3742: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  3745: 33 0a 00 10              a3 = 0x1000
  3749: 95 18 f8 40 01           a1 = sp + 0x140f8
  3754: 0a 15                    ecalli 21 // 'peek'
  3756: 95 17 f0 40 01           a0 = sp + 0x140f0
  3761: 64 58                    a1 = s0
  3763: 0a 13                    ecalli 19 // 'export'
  3765: 33 09 00 10              a2 = 0x1000
  3769: 95 17 f8 40 01           a0 = sp + 0x140f8
  3774: 33 08                    a1 = 0
  3776: 50 10 5c c5 09           ra = 92, jump @373
      :                          @174 [@dyn 46]
  3781: 95 1a a8 40 01           a3 = sp + 0x140a8
  3786: 82 a7 40                 a0 = u64 [a3 + 0x40]
  3789: 7a a7 48                 u32 [a3 + 0x48] = a0
  3792: 95 69 00 20              a2 = s1 + 0x2000
  3796: 98 98 0c                 a1 = a2 >> 0xc
  3799: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  3802: 33 0a 00 10              a3 = 0x1000
  3806: 95 18 f8 40 01           a1 = sp + 0x140f8
  3811: 0a 15                    ecalli 21 // 'peek'
  3813: 95 17 f0 40 01           a0 = sp + 0x140f0
  3818: 64 58                    a1 = s0
  3820: 0a 13                    ecalli 19 // 'export'
  3822: 33 09 00 10              a2 = 0x1000
  3826: 95 17 f8 40 01           a0 = sp + 0x140f8
  3831: 33 08                    a1 = 0
  3833: 50 10 5e 8c 09           ra = 94, jump @373
      :                          @175 [@dyn 47]
  3838: 95 18 a8 40 01           a1 = sp + 0x140a8
  3843: 82 87 40                 a0 = u64 [a1 + 0x40]
  3846: 7a 87 48                 u32 [a1 + 0x48] = a0
  3849: 95 1a a8 40 01           a3 = sp + 0x140a8
  3854: 95 69 00 30              a2 = s1 + 0x3000
  3858: 98 98 0c                 a1 = a2 >> 0xc
  3861: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  3864: 33 0a 00 10              a3 = 0x1000
  3868: 95 18 f8 40 01           a1 = sp + 0x140f8
  3873: 0a 15                    ecalli 21 // 'peek'
  3875: 95 17 f0 40 01           a0 = sp + 0x140f0
  3880: 64 58                    a1 = s0
  3882: 64 56                    s1 = s0
  3884: 0a 13                    ecalli 19 // 'export'
  3886: 33 09 00 10              a2 = 0x1000
  3890: 95 17 f8 40 01           a0 = sp + 0x140f8
  3895: 33 08                    a1 = 0
  3897: 50 10 60 4c 09           ra = 96, jump @373
      :                          @176 [@dyn 48]
  3902: 95 1a a8 40 01           a3 = sp + 0x140a8
  3907: 82 a7 40                 a0 = u64 [a3 + 0x40]
  3910: 7a a7 48                 u32 [a3 + 0x48] = a0
  3913: 82 15 68                 s0 = u64 [sp + 0x68]
  3916: 95 59 00 40              a2 = s0 + 0x4000
  3920: 98 98 0c                 a1 = a2 >> 0xc
  3923: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  3926: 33 0a 00 10              a3 = 0x1000
  3930: 95 18 f8 40 01           a1 = sp + 0x140f8
  3935: 0a 15                    ecalli 21 // 'peek'
  3937: 95 17 f0 40 01           a0 = sp + 0x140f0
  3942: 64 68                    a1 = s1
  3944: 0a 13                    ecalli 19 // 'export'
  3946: 33 09 00 10              a2 = 0x1000
  3950: 95 17 f8 40 01           a0 = sp + 0x140f8
  3955: 33 08                    a1 = 0
  3957: 50 10 62 10 09           ra = 98, jump @373
      :                          @177 [@dyn 49]
  3962: 95 18 a8 40 01           a1 = sp + 0x140a8
  3967: 82 87 40                 a0 = u64 [a1 + 0x40]
  3970: 7a 87 48                 u32 [a1 + 0x48] = a0
  3973: 95 1a a8 40 01           a3 = sp + 0x140a8
  3978: 95 59 00 50              a2 = s0 + 0x5000
  3982: 98 98 0c                 a1 = a2 >> 0xc
  3985: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  3988: 33 0a 00 10              a3 = 0x1000
  3992: 95 18 f8 40 01           a1 = sp + 0x140f8
  3997: 0a 15                    ecalli 21 // 'peek'
  3999: 95 17 f0 40 01           a0 = sp + 0x140f0
  4004: 7b 16 60                 u64 [sp + 0x60] = s1
  4007: 64 68                    a1 = s1
  4009: 0a 13                    ecalli 19 // 'export'
  4011: 33 09 00 10              a2 = 0x1000
  4015: 95 17 f8 40 01           a0 = sp + 0x140f8
  4020: 33 08                    a1 = 0
  4022: 50 10 64 cf 08           ra = 100, jump @373
      :                          @178 [@dyn 50]
  4027: 95 1a a8 40 01           a3 = sp + 0x140a8
  4032: 82 a7 40                 a0 = u64 [a3 + 0x40]
  4035: 7a a7 48                 u32 [a3 + 0x48] = a0
  4038: 95 59 00 60              a2 = s0 + 0x6000
  4042: 98 98 0c                 a1 = a2 >> 0xc
  4045: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  4048: 33 0a 00 10              a3 = 0x1000
  4052: 95 18 f8 40 01           a1 = sp + 0x140f8
  4057: 0a 15                    ecalli 21 // 'peek'
  4059: 95 17 f0 40 01           a0 = sp + 0x140f0
  4064: 64 68                    a1 = s1
  4066: 0a 13                    ecalli 19 // 'export'
  4068: 33 09 00 10              a2 = 0x1000
  4072: 95 17 f8 40 01           a0 = sp + 0x140f8
  4077: 33 08                    a1 = 0
  4079: 50 10 66 96 08           ra = 102, jump @373
      :                          @179 [@dyn 51]
  4084: 95 18 a8 40 01           a1 = sp + 0x140a8
  4089: 82 87 40                 a0 = u64 [a1 + 0x40]
  4092: 7a 87 48                 u32 [a1 + 0x48] = a0
  4095: 95 1a a8 40 01           a3 = sp + 0x140a8
  4100: 95 59 00 70              a2 = s0 + 0x7000
  4104: 98 98 0c                 a1 = a2 >> 0xc
  4107: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  4110: 33 0a 00 10              a3 = 0x1000
  4114: 95 18 f8 40 01           a1 = sp + 0x140f8
  4119: 0a 15                    ecalli 21 // 'peek'
  4121: 95 17 f0 40 01           a0 = sp + 0x140f0
  4126: 82 16 60                 s1 = u64 [sp + 0x60]
  4129: 64 68                    a1 = s1
  4131: 0a 13                    ecalli 19 // 'export'
  4133: 33 09 00 10              a2 = 0x1000
  4137: 95 17 f8 40 01           a0 = sp + 0x140f8
  4142: 33 08                    a1 = 0
  4144: 50 10 68 55 08           ra = 104, jump @373
      :                          @180 [@dyn 52]
  4149: 95 1a a8 40 01           a3 = sp + 0x140a8
  4154: 82 a7 40                 a0 = u64 [a3 + 0x40]
  4157: 7a a7 48                 u32 [a3 + 0x48] = a0
  4160: 95 59 00 80 00           a2 = s0 + 0x8000
  4165: 98 98 0c                 a1 = a2 >> 0xc
  4168: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  4171: 95 15 a8 40 01           s0 = sp + 0x140a8
  4176: 33 0a 00 10              a3 = 0x1000
  4180: 95 18 f8 40 01           a1 = sp + 0x140f8
  4185: 0a 15                    ecalli 21 // 'peek'
  4187: 95 17 f0 40 01           a0 = sp + 0x140f0
  4192: 64 68                    a1 = s1
  4194: 0a 13                    ecalli 19 // 'export'
  4196: 82 57 40                 a0 = u64 [s0 + 0x40]
  4199: 0a 1a                    ecalli 26 // 'expunge'
  4201: 33 07 06                 a0 = 0x6
  4204: 95 18 f8 50 01           a1 = sp + 0x150f8
  4209: 7b 87 10 01              u64 [a1 + 0x110] = a0
  4213: 33 07 38 03 01           a0 = 0x10338
  4218: 7b 87 60 01              u64 [a1 + 0x160] = a0
  4222: 95 17 00 52 01           a0 = sp + 0x15200
  4227: 7b 87 70 01              u64 [a1 + 0x170] = a0
  4231: 49 28 68 01 01           u64 [a1 + 360] = 0x1
  4236: 49 28 78 01 01           u64 [a1 + 376] = 0x1
  4241: 7b 88 08 01              u64 [a1 + 0x108] = a1
  4245: 49 28 80 01              u64 [a1 + 384] = 0
  4249: 95 16 f8 50 01           s1 = sp + 0x150f8
  4254: 95 17 18 52 01           a0 = sp + 0x15218
  4259: 95 18 58 52 01           a1 = sp + 0x15258
  4264: 50 10 6a b6 04           ra = 106, jump @305
      :                          @181 [@dyn 53]
  4269: 82 65 28 01              s0 = u64 [s1 + 0x128]
  4273: 82 6b 30 01              a4 = u64 [s1 + 0x130]
  4277: 82 66 20 01              s1 = u64 [s1 + 0x120]
  4281: 33 07 02                 a0 = 0x2
  4284: 33 08                    a1 = 0
  4286: 33 09                    a2 = 0
  4288: 64 5a                    a3 = s0
  4290: 33 00 6c                 ra = 0x6c
  4293: 0a 64                    ecalli 100 // 'log'
  4295: 01                       fallthrough
      :                          @182 [@dyn 54]
  4296: 82 17 70                 a0 = u64 [sp + 0x70]
  4299: c8 67 07                 a0 = a0 + s1
  4302: 53 27 00 f0 8c f3        jump @72 if a0 <u 4294963200
      :                          @183
  4308: 33 07 20 00 03           a0 = 0x30020
  4313: 95 77 00 10              a0 = a0 + 0x1000
  4317: 01                       fallthrough
      :                          @184
  4318: 82 78                    a1 = u64 [a0]
  4320: c9 87 09                 a2 = a0 - a1
  4323: ab 59 77 f3              jump @72 if a2 != s0
      :                          @185
  4327: c9 68 09                 a2 = a1 - s1
  4330: 01                       fallthrough
      :                          @186
  4331: 82 7a                    a3 = u64 [a0]
  4333: ab 8a f1                 jump @184 if a3 != a1
      :                          @187
  4336: 7b 79                    u64 [a0] = a2
  4338: 33 0b                    a4 = 0
  4340: 01                       fallthrough
      :                          @188
  4341: ab 8a e9                 jump @184 if a3 != a1
      :                          @189
  4344: 28 62 f3                 jump @72
      :                          @190
  4347: 00                       trap
      :                          @191 [export #1: 'accumulate']
  4348: 95 11 68 ff              sp = sp + 0xffffffffffffff68
  4352: 7b 10 90 00              u64 [sp + 0x90] = ra
  4356: 7b 15 88 00              u64 [sp + 0x88] = s0
  4360: 7b 16 80 00              u64 [sp + 0x80] = s1
  4364: 33 09 08                 a2 = 0x8
  4367: ac 98 f4 01              jump @245 if a1 <u a2
      :                          @192
  4371: 51 17 fc 09 02           jump @246 if a0 == 4294967292
      :                          @193
  4376: 51 07 04 02              jump @246 if a0 == 0
      :                          @194
  4380: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
  4383: 95 75 08                 s0 = a0 + 0x8
  4386: 51 0a 45                 jump @204 if a3 == 0
      :                          @195
  4389: 7d 58                    a1 = i8 [s0]
  4391: 33 06 01                 s1 = 0x1
  4394: 59 08 40                 jump @205 if a1 >=s 0
      :                          @196
  4397: 84 89 ff 00              a2 = a1 & 0xff
  4401: 33 06 02                 s1 = 0x2
  4404: 53 29 c0 00 2d           jump @202 if a2 <u 192
      :                          @197
  4409: 33 06 03                 s1 = 0x3
  4412: 53 29 e0 00 25           jump @202 if a2 <u 224
      :                          @198
  4417: 33 06 04                 s1 = 0x4
  4420: 53 29 f0 00 1d           jump @202 if a2 <u 240
      :                          @199
  4425: 33 06 05                 s1 = 0x5
  4428: 53 29 f8 00 15           jump @202 if a2 <u 248
      :                          @200
  4433: 33 06 06                 s1 = 0x6
  4436: 53 29 fc 00 0d           jump @202 if a2 <u 252
      :                          @201
  4441: 88 98 fe 00              a1 = a2 <u 0xfe
  4445: 9a 86 08                 s1 = 0x8 - a1
  4448: 01                       fallthrough
      :                          @202
  4449: ae 6a 09                 jump @205 if a3 >=u s1
      :                          @203
  4452: 28 9f 01                 jump @245
      :                          @204
  4455: 33 06                    s1 = 0
  4457: 01                       fallthrough
      :                          @205
  4458: 7b 16                    u64 [sp] = s1
  4460: 64 57                    a0 = s0
  4462: 64 68                    a1 = s1
  4464: 64 a6                    s1 = a3
  4466: 50 10 6e c1 10           ra = 110, jump @559
      :                          @206 [@dyn 55]
  4471: 82 1a                    a3 = u64 [sp]
  4473: 51 07 8a 01              jump @245 if a0 == 0
      :                          @207
  4477: e4 a6 07                 a0 = maxu(s1, a3)
  4480: c9 a7 07                 a0 = a0 - a3
  4483: 53 17 60 80 01           jump @245 if a0 <u 96
      :                          @208
  4488: c8 5a 08                 a1 = a3 + s0
  4491: 95 76 a0                 s1 = a0 + 0xffffffffffffffa0
  4494: 95 87 60                 a0 = a1 + 0x60
  4497: 7b 17                    u64 [sp] = a0
  4499: 51 06 4c                 jump @219 if s1 == 0
      :                          @209
  4502: 7d 78                    a1 = i8 [a0]
  4504: 33 05 01                 s0 = 0x1
  4507: 59 08 37                 jump @216 if a1 >=s 0
      :                          @210
  4510: 84 89 ff 00              a2 = a1 & 0xff
  4514: 33 05 02                 s0 = 0x2
  4517: 53 29 c0 00 2d           jump @216 if a2 <u 192
      :                          @211
  4522: 33 05 03                 s0 = 0x3
  4525: 53 29 e0 00 25           jump @216 if a2 <u 224
      :                          @212
  4530: 33 05 04                 s0 = 0x4
  4533: 53 29 f0 00 1d           jump @216 if a2 <u 240
      :                          @213
  4538: 33 05 05                 s0 = 0x5
  4541: 53 29 f8 00 15           jump @216 if a2 <u 248
      :                          @214
  4546: 33 05 06                 s0 = 0x6
  4549: 53 29 fc 00 0d           jump @216 if a2 <u 252
      :                          @215
  4554: 88 98 fe 00              a1 = a2 <u 0xfe
  4558: 9a 85 08                 s0 = 0x8 - a1
  4561: 01                       fallthrough
      :                          @216
  4562: ac 56 4b 01              jump @247 if s1 <u s0
      :                          @217
  4566: 64 58                    a1 = s0
  4568: 50 10 70 5b 10           ra = 112, jump @559
      :                          @218 [@dyn 56]
  4573: 28 07                    jump @220
      :                          @219
  4575: 33 05                    s0 = 0
  4577: 33 07                    a0 = 0
  4579: 01                       fallthrough
      :                          @220
  4580: e4 56 08                 a1 = maxu(s1, s0)
  4583: c9 58 08                 a1 = a1 - s0
  4586: e4 78 08                 a1 = maxu(a1, a0)
  4589: c9 78 08                 a1 = a1 - a0
  4592: 33 09 20                 a2 = 0x20
  4595: ac 98 10 01              jump @245 if a1 <u a2
      :                          @221
  4599: 82 19                    a2 = u64 [sp]
  4601: c8 95 05                 s0 = s0 + a2
  4604: c8 57 07                 a0 = a0 + s0
  4607: 51 17 e0 1d 01           jump @246 if a0 == 4294967264
      :                          @222
  4612: 33 09 29                 a2 = 0x29
  4615: ac 98 fc 00              jump @245 if a1 <u a2
      :                          @223
  4619: 7c 79 28                 a2 = u8 [a0 + 0x28]
  4622: 52 09 f5 00              jump @245 if a2 != 0
      :                          @224
  4626: 95 86 d7                 s1 = a1 + 0xffffffffffffffd7
  4629: 95 77 29                 a0 = a0 + 0x29
  4632: 7b 17                    u64 [sp] = a0
  4634: 51 06 4c                 jump @235 if s1 == 0
      :                          @225
  4637: 7d 78                    a1 = i8 [a0]
  4639: 33 05 01                 s0 = 0x1
  4642: 59 08 37                 jump @232 if a1 >=s 0
      :                          @226
  4645: 84 89 ff 00              a2 = a1 & 0xff
  4649: 33 05 02                 s0 = 0x2
  4652: 53 29 c0 00 2d           jump @232 if a2 <u 192
      :                          @227
  4657: 33 05 03                 s0 = 0x3
  4660: 53 29 e0 00 25           jump @232 if a2 <u 224
      :                          @228
  4665: 33 05 04                 s0 = 0x4
  4668: 53 29 f0 00 1d           jump @232 if a2 <u 240
      :                          @229
  4673: 33 05 05                 s0 = 0x5
  4676: 53 29 f8 00 15           jump @232 if a2 <u 248
      :                          @230
  4681: 33 05 06                 s0 = 0x6
  4684: 53 29 fc 00 0d           jump @232 if a2 <u 252
      :                          @231
  4689: 88 98 fe 00              a1 = a2 <u 0xfe
  4693: 9a 85 08                 s0 = 0x8 - a1
  4696: 01                       fallthrough
      :                          @232
  4697: ac 56 c4 00              jump @247 if s1 <u s0
      :                          @233
  4701: 64 58                    a1 = s0
  4703: 50 10 72 d4 0f           ra = 114, jump @559
      :                          @234 [@dyn 57]
  4708: 28 07                    jump @236
      :                          @235
  4710: 33 05                    s0 = 0
  4712: 33 07                    a0 = 0
  4714: 01                       fallthrough
      :                          @236
  4715: e4 56 08                 a1 = maxu(s1, s0)
  4718: c9 58 08                 a1 = a1 - s0
  4721: e6 78 07                 a0 = minu(a1, a0)
  4724: 52 17 24 8f 00           jump @245 if a0 != 36
      :                          @237
  4729: 82 17                    a0 = u64 [sp]
  4731: c8 57 07                 a0 = a0 + s0
  4734: 7b 17 08                 u64 [sp + 0x8] = a0
  4737: 80 78 20                 a1 = u32 [a0 + 0x20]
  4740: 7b 18 10                 u64 [sp + 0x10] = a1
  4743: 0a 0e                    ecalli 14 // 'solicit'
  4745: 95 17 08                 a0 = sp + 0x8
  4748: 7b 17 60                 u64 [sp + 0x60] = a0
  4751: 33 07 06                 a0 = 0x6
  4754: 7b 17 68                 u64 [sp + 0x68] = a0
  4757: 95 18 10                 a1 = sp + 0x10
  4760: 7b 18 70                 u64 [sp + 0x70] = a1
  4763: 7b 17 78                 u64 [sp + 0x78] = a0
  4766: 33 07 b8 03 01           a0 = 0x103b8
  4771: 7b 17 30                 u64 [sp + 0x30] = a0
  4774: 49 11 38 02              u64 [sp + 56] = 0x2
  4778: 49 11 50                 u64 [sp + 80] = 0
  4781: 95 18 60                 a1 = sp + 0x60
  4784: 7b 18 40                 u64 [sp + 0x40] = a1
  4787: 49 11 48 02              u64 [sp + 72] = 0x2
  4791: 95 17 18                 a0 = sp + 0x18
  4794: 95 18 30                 a1 = sp + 0x30
  4797: 50 10 74 a1 02           ra = 116, jump @305
      :                          @238 [@dyn 58]
  4802: 82 15 20                 s0 = u64 [sp + 0x20]
  4805: 82 1b 28                 a4 = u64 [sp + 0x28]
  4808: 82 16 18                 s1 = u64 [sp + 0x18]
  4811: 33 07 02                 a0 = 0x2
  4814: 33 08                    a1 = 0
  4816: 33 09                    a2 = 0
  4818: 64 5a                    a3 = s0
  4820: 33 00 76                 ra = 0x76
  4823: 0a 64                    ecalli 100 // 'log'
  4825: 01                       fallthrough
      :                          @239 [@dyn 59]
  4826: 95 68 ff ef              a1 = s1 + 0xffffffffffffefff
  4830: 53 28 00 f0 25           jump @245 if a1 <u 4294963200
      :                          @240
  4835: 33 07 20 00 03           a0 = 0x30020
  4840: 95 77 00 10              a0 = a0 + 0x1000
  4844: 01                       fallthrough
      :                          @241
  4845: 82 78                    a1 = u64 [a0]
  4847: c9 87 09                 a2 = a0 - a1
  4850: ab 59 11                 jump @245 if a2 != s0
      :                          @242
  4853: c9 68 09                 a2 = a1 - s1
  4856: 01                       fallthrough
      :                          @243
  4857: 82 7a                    a3 = u64 [a0]
  4859: ab 8a f2                 jump @241 if a3 != a1
      :                          @244
  4862: 7b 79                    u64 [a0] = a2
  4864: 33 0b                    a4 = 0
  4866: 01                       fallthrough
      :                          @245
  4867: 33 07 00 00 01           a0 = 0x10000
  4872: 33 08                    a1 = 0
  4874: 82 10 90 00              ra = u64 [sp + 0x90]
  4878: 82 15 88 00              s0 = u64 [sp + 0x88]
  4882: 82 16 80 00              s1 = u64 [sp + 0x80]
  4886: 95 11 98 00              sp = sp + 0x98
  4890: 32 00                    ret
      :                          @246
  4892: 00                       trap
      :                          @247
  4893: 00                       trap
      :                          @248 [export #2: 'on_transfer']
  4894: 33 07 00 00 01           a0 = 0x10000
  4899: 33 08                    a1 = 0
  4901: 32 00                    ret
      :                          @249
  4903: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  4906: 7b 10 40                 u64 [sp + 0x40] = ra
  4909: 7b 15 38                 u64 [sp + 0x38] = s0
  4912: 7b 16 30                 u64 [sp + 0x30] = s1
  4915: c8 89 09                 a2 = a2 + a1
  4918: ac 89 52                 jump @257 if a2 <u a1
      :                          @250
  4921: 64 75                    s0 = a0
  4923: 82 77                    a0 = u64 [a0]
  4925: 97 78 01                 a1 = a0 << 0x1
  4928: 33 0a 08                 a3 = 0x8
  4931: e4 a9 09                 a2 = maxu(a2, a3)
  4934: e4 98 06                 s1 = maxu(a1, a2)
  4937: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  4940: 98 88 3f                 a1 = a1 >> 0x3f
  4943: 51 07 12                 jump @252 if a0 == 0
      :                          @251
  4946: 82 59 08                 a2 = u64 [s0 + 0x8]
  4949: 7b 19 18                 u64 [sp + 0x18] = a2
  4952: 49 11 20 01              u64 [sp + 32] = 0x1
  4956: 7b 17 28                 u64 [sp + 0x28] = a0
  4959: 28 06                    jump @253
      :                          @252
  4961: 49 11 20                 u64 [sp + 32] = 0
  4964: 01                       fallthrough
      :                          @253
  4965: 64 17                    a0 = sp
  4967: 95 1a 18                 a3 = sp + 0x18
  4970: 64 69                    a2 = s1
  4972: 50 10 78 32              ra = 120, jump @261
      :                          @254 [@dyn 60]
  4976: 82 18                    a1 = u64 [sp]
  4978: 82 17 08                 a0 = u64 [sp + 0x8]
  4981: 51 08 14                 jump @258 if a1 == 0
      :                          @255
  4984: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  4994: aa 87 0d                 jump @259 if a0 == a1
      :                          @256
  4997: 52 07 18                 jump @260 if a0 != 0
      :                          @257
  5000: 00                       trap
      :                          @258
  5001: 7b 57 08                 u64 [s0 + 0x8] = a0
  5004: 7b 56                    u64 [s0] = s1
  5006: 01                       fallthrough
      :                          @259
  5007: 82 10 40                 ra = u64 [sp + 0x40]
  5010: 82 15 38                 s0 = u64 [sp + 0x38]
  5013: 82 16 30                 s1 = u64 [sp + 0x30]
  5016: 95 11 48                 sp = sp + 0x48
  5019: 32 00                    ret
      :                          @260
  5021: 00                       trap
      :                          @261
  5022: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  5025: 7b 10 30                 u64 [sp + 0x30] = ra
  5028: 7b 15 28                 u64 [sp + 0x28] = s0
  5031: 7b 16 20                 u64 [sp + 0x20] = s1
  5034: 64 95                    s0 = a2
  5036: 64 72                    t0 = a0
  5038: 51 08 76                 jump @271 if a1 == 0
      :                          @262
  5041: 82 a7 08                 a0 = u64 [a3 + 0x8]
  5044: 51 07 79                 jump @272 if a0 == 0
      :                          @263
  5047: 82 a9 10                 a2 = u64 [a3 + 0x10]
  5050: 51 09 a6 00              jump @279 if a2 == 0
      :                          @264
  5054: 82 a8                    a1 = u64 [a3]
  5056: 33 06 20 00 03           s1 = 0x30020
  5061: 33 03 00 10              t1 = 0x1000
  5065: c8 36 06                 s1 = s1 + t1
  5068: 01                       fallthrough
      :                          @265
  5069: 82 6a                    a3 = u64 [s1]
  5071: c8 5a 07                 a0 = a3 + s0
  5074: ac a7 cb 00              jump @285 if a0 <u a3
      :                          @266
  5078: 95 7b 01                 a4 = a0 + 0x1
  5081: 88 bc 01                 a5 = a4 <u 0x1
  5084: d8 b3 0b                 a4 = t1 <u a4
  5087: d4 cb 0b                 a4 = a4 | a5
  5090: 52 0b bb 00              jump @285 if a4 != 0
      :                          @267
  5094: 82 6b                    a4 = u64 [s1]
  5096: ab ab e5                 jump @265 if a4 != a3
      :                          @268
  5099: 7b 67                    u64 [s1] = a0
  5101: 33 0c                    a5 = 0
  5103: 7b 12 18                 u64 [sp + 0x18] = t0
  5106: 33 0a 20 00 03           a3 = 0x30020
  5111: 33 0b 00 10              a4 = 0x1000
  5115: 7b 1a                    u64 [sp] = a3
  5117: c8 ba 0a                 a3 = a3 + a4
  5120: c9 7a 07                 a0 = a3 - a0
  5123: 7b 17 10                 u64 [sp + 0x10] = a0
  5126: 7b 18 08                 u64 [sp + 0x8] = a1
  5129: 64 96                    s1 = a2
  5131: 50 10 7a c8 03           ra = 122, jump @355
      :                          @269 [@dyn 61]
  5136: 54 26 00 10 95 00        jump @286 if s1 <=u 4096
      :                          @270
  5142: 82 12 18                 t0 = u64 [sp + 0x18]
  5145: 82 18 10                 a1 = u64 [sp + 0x10]
  5148: 33 07                    a0 = 0
  5150: 7b 28 08                 u64 [t0 + 0x8] = a1
  5153: 28 b2 00                 jump @292
      :                          @271
  5156: 49 12 08                 u64 [t0 + 8] = 0
  5159: 33 07 01                 a0 = 0x1
  5162: 28 a9 00                 jump @292
      :                          @272
  5165: 33 09 20 00 03           a2 = 0x30020
  5170: 33 07 00 10              a0 = 0x1000
  5174: c8 79 09                 a2 = a2 + a0
  5177: 01                       fallthrough
      :                          @273
  5178: 82 9a                    a3 = u64 [a2]
  5180: c8 5a 08                 a1 = a3 + s0
  5183: ac a8 5e                 jump @285 if a1 <u a3
      :                          @274
  5186: 95 8b 01                 a4 = a1 + 0x1
  5189: 88 bc 01                 a5 = a4 <u 0x1
  5192: d8 b7 0b                 a4 = a0 <u a4
  5195: d4 cb 0b                 a4 = a4 | a5
  5198: 52 0b 4f                 jump @285 if a4 != 0
      :                          @275
  5201: 82 9b                    a4 = u64 [a2]
  5203: ab ab e7                 jump @273 if a4 != a3
      :                          @276
  5206: 7b 98                    u64 [a2] = a1
  5208: 33 0c                    a5 = 0
  5210: 01                       fallthrough
      :                          @277
  5211: ab ab df                 jump @273 if a4 != a3
      :                          @278
  5214: 28 30                    jump @284
      :                          @279
  5216: 33 09 20 00 03           a2 = 0x30020
  5221: 33 07 00 10              a0 = 0x1000
  5225: c8 79 09                 a2 = a2 + a0
  5228: 01                       fallthrough
      :                          @280
  5229: 82 9a                    a3 = u64 [a2]
  5231: c8 5a 08                 a1 = a3 + s0
  5234: ac a8 2b                 jump @285 if a1 <u a3
      :                          @281
  5237: 95 8b 01                 a4 = a1 + 0x1
  5240: 88 bc 01                 a5 = a4 <u 0x1
  5243: d8 b7 0b                 a4 = a0 <u a4
  5246: d4 cb 0b                 a4 = a4 | a5
  5249: 52 0b 1c                 jump @285 if a4 != 0
      :                          @282
  5252: 82 9b                    a4 = u64 [a2]
  5254: ab ab e7                 jump @280 if a4 != a3
      :                          @283
  5257: 7b 98                    u64 [a2] = a1
  5259: 33 0c                    a5 = 0
  5261: 01                       fallthrough
      :                          @284
  5262: 33 07 20 10 03           a0 = 0x31020
  5267: c9 87 08                 a1 = a0 - a1
  5270: 33 07                    a0 = 0
  5272: 7b 28 08                 u64 [t0 + 0x8] = a1
  5275: 28 38                    jump @292
      :                          @285
  5277: 33 07 01                 a0 = 0x1
  5280: 7b 27 08                 u64 [t0 + 0x8] = a0
  5283: 28 30                    jump @292
      :                          @286
  5285: 64 6c                    a5 = s1
  5287: 82 17                    a0 = u64 [sp]
  5289: 95 77 00 10              a0 = a0 + 0x1000
  5293: 82 12 18                 t0 = u64 [sp + 0x18]
  5296: 82 16 08                 s1 = u64 [sp + 0x8]
  5299: 01                       fallthrough
      :                          @287
  5300: 82 78                    a1 = u64 [a0]
  5302: c9 87 09                 a2 = a0 - a1
  5305: ab 69 11                 jump @291 if a2 != s1
      :                          @288
  5308: c9 c8 09                 a2 = a1 - a5
  5311: 01                       fallthrough
      :                          @289
  5312: 82 7a                    a3 = u64 [a0]
  5314: ab 8a f2                 jump @287 if a3 != a1
      :                          @290
  5317: 7b 79                    u64 [a0] = a2
  5319: 33 0b                    a4 = 0
  5321: 01                       fallthrough
      :                          @291
  5322: 82 18 10                 a1 = u64 [sp + 0x10]
  5325: 33 07                    a0 = 0
  5327: 7b 28 08                 u64 [t0 + 0x8] = a1
  5330: 01                       fallthrough
      :                          @292
  5331: 7b 25 10                 u64 [t0 + 0x10] = s0
  5334: 7b 27                    u64 [t0] = a0
  5336: 82 10 30                 ra = u64 [sp + 0x30]
  5339: 82 15 28                 s0 = u64 [sp + 0x28]
  5342: 82 16 20                 s1 = u64 [sp + 0x20]
  5345: 95 11 38                 sp = sp + 0x38
  5348: 32 00                    ret
      :                          @293
  5350: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  5353: 7b 10 40                 u64 [sp + 0x40] = ra
  5356: 7b 15 38                 u64 [sp + 0x38] = s0
  5359: 7b 16 30                 u64 [sp + 0x30] = s1
  5362: 95 88 01                 a1 = a1 + 0x1
  5365: 51 08 53                 jump @301 if a1 == 0
      :                          @294
  5368: 64 75                    s0 = a0
  5370: 82 77                    a0 = u64 [a0]
  5372: 97 79 01                 a2 = a0 << 0x1
  5375: 33 0a 08                 a3 = 0x8
  5378: e4 a8 08                 a1 = maxu(a1, a3)
  5381: e4 89 06                 s1 = maxu(a2, a1)
  5384: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  5387: 98 88 3f                 a1 = a1 >> 0x3f
  5390: 51 07 12                 jump @296 if a0 == 0
      :                          @295
  5393: 82 59 08                 a2 = u64 [s0 + 0x8]
  5396: 7b 19 18                 u64 [sp + 0x18] = a2
  5399: 49 11 20 01              u64 [sp + 32] = 0x1
  5403: 7b 17 28                 u64 [sp + 0x28] = a0
  5406: 28 06                    jump @297
      :                          @296
  5408: 49 11 20                 u64 [sp + 32] = 0
  5411: 01                       fallthrough
      :                          @297
  5412: 64 17                    a0 = sp
  5414: 95 1a 18                 a3 = sp + 0x18
  5417: 64 69                    a2 = s1
  5419: 50 10 7c 73 fe           ra = 124, jump @261
      :                          @298 [@dyn 62]
  5424: 82 18                    a1 = u64 [sp]
  5426: 82 17 08                 a0 = u64 [sp + 0x8]
  5429: 51 08 14                 jump @302 if a1 == 0
      :                          @299
  5432: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  5442: aa 87 0d                 jump @303 if a0 == a1
      :                          @300
  5445: 52 07 18                 jump @304 if a0 != 0
      :                          @301
  5448: 00                       trap
      :                          @302
  5449: 7b 57 08                 u64 [s0 + 0x8] = a0
  5452: 7b 56                    u64 [s0] = s1
  5454: 01                       fallthrough
      :                          @303
  5455: 82 10 40                 ra = u64 [sp + 0x40]
  5458: 82 15 38                 s0 = u64 [sp + 0x38]
  5461: 82 16 30                 s1 = u64 [sp + 0x30]
  5464: 95 11 48                 sp = sp + 0x48
  5467: 32 00                    ret
      :                          @304
  5469: 00                       trap
      :                          @305
  5470: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  5473: 7b 10 30                 u64 [sp + 0x30] = ra
  5476: 7b 15 28                 u64 [sp + 0x28] = s0
  5479: 7b 16 20                 u64 [sp + 0x20] = s1
  5482: 64 89                    a2 = a1
  5484: 82 8a 08                 a3 = u64 [a1 + 0x8]
  5487: 64 75                    s0 = a0
  5489: 51 0a 35                 jump @310 if a3 == 0
      :                          @306
  5492: 82 98                    a1 = u64 [a2]
  5494: 33 07                    a0 = 0
  5496: 95 8b 08                 a4 = a1 + 0x8
  5499: 01                       fallthrough
      :                          @307
  5500: 82 bc                    a5 = u64 [a4]
  5502: c8 c7 07                 a0 = a0 + a5
  5505: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  5508: 95 bb 10                 a4 = a4 + 0x10
  5511: 52 0a f5                 jump @307 if a3 != 0
      :                          @308
  5514: 82 9a 18                 a3 = u64 [a2 + 0x18]
  5517: 51 0a 24                 jump @312 if a3 == 0
      :                          @309
  5520: 82 88 08                 a1 = u64 [a1 + 0x8]
  5523: 8e 88                    a1 = a1 >u 0
  5525: 88 7a 10                 a3 = a0 <u 0x10
  5528: 85 aa 01                 a3 = a3 ^ 0x1
  5531: d4 a8 08                 a1 = a1 | a3
  5534: 89 7a                    a3 = a0 <s 0
  5536: e0 a8 08                 a1 = a1 & ~a3
  5539: 52 08 0a                 jump @311 if a1 != 0
      :                          @310
  5542: 33 07                    a0 = 0
  5544: 33 08 01                 a1 = 0x1
  5547: 28 49                    jump @320
      :                          @311
  5549: 97 77 01                 a0 = a0 << 0x1
  5552: 01                       fallthrough
      :                          @312
  5553: 51 07 3f                 jump @319 if a0 == 0
      :                          @313
  5556: 57 07 77                 jump @325 if a0 <s 0
      :                          @314
  5559: 64 52                    t0 = s0
  5561: 33 0b 20 00 03           a4 = 0x30020
  5566: 33 08 00 10              a1 = 0x1000
  5570: c8 8b 0b                 a4 = a4 + a1
  5573: 01                       fallthrough
      :                          @315
  5574: 82 bc                    a5 = u64 [a4]
  5576: c8 7c 0a                 a3 = a5 + a0
  5579: ac ca 5e                 jump @323 if a3 <u a5
      :                          @316
  5582: 95 a5 01                 s0 = a3 + 0x1
  5585: 88 56 01                 s1 = s0 <u 0x1
  5588: d8 58 05                 s0 = a1 <u s0
  5591: d4 65 05                 s0 = s0 | s1
  5594: 52 05 4f                 jump @323 if s0 != 0
      :                          @317
  5597: 82 b6                    s1 = u64 [a4]
  5599: ab c6 e7                 jump @315 if s1 != a5
      :                          @318
  5602: 7b ba                    u64 [a4] = a3
  5604: 33 08 20 10 03           a1 = 0x31020
  5609: c9 a8 08                 a1 = a1 - a3
  5612: 64 25                    s0 = t0
  5614: 28 06                    jump @320
      :                          @319
  5616: 33 08 01                 a1 = 0x1
  5619: 01                       fallthrough
      :                          @320
  5620: 7b 17                    u64 [sp] = a0
  5622: 7b 18 08                 u64 [sp + 0x8] = a1
  5625: 49 11 10                 u64 [sp + 16] = 0
  5628: 33 08 d8 03 01           a1 = 0x103d8
  5633: 64 17                    a0 = sp
  5635: 50 10 7e 87 06           ra = 126, jump @450
      :                          @321 [@dyn 63]
  5640: 52 07 22                 jump @324 if a0 != 0
      :                          @322
  5643: 82 17 10                 a0 = u64 [sp + 0x10]
  5646: 82 18 08                 a1 = u64 [sp + 0x8]
  5649: 82 19                    a2 = u64 [sp]
  5651: 7b 57 10                 u64 [s0 + 0x10] = a0
  5654: 7b 58 08                 u64 [s0 + 0x8] = a1
  5657: 7b 59                    u64 [s0] = a2
  5659: 82 10 30                 ra = u64 [sp + 0x30]
  5662: 82 15 28                 s0 = u64 [sp + 0x28]
  5665: 82 16 20                 s1 = u64 [sp + 0x20]
  5668: 95 11 38                 sp = sp + 0x38
  5671: 32 00                    ret
      :                          @323
  5673: 00                       trap
      :                          @324
  5674: 00                       trap
      :                          @325
  5675: 00                       trap
      :                          @326 [@dyn 64]
  5676: 82 72                    t0 = u64 [a0]
  5678: 33 09 00 f0              a2 = 0xfffffffffffff000
  5682: 95 2a ff ef              a3 = t0 + 0xffffffffffffefff
  5686: ac 9a 27                 jump @332 if a3 <u a2
      :                          @327
  5689: 82 77 08                 a0 = u64 [a0 + 0x8]
  5692: 33 09 20 00 03           a2 = 0x30020
  5697: 95 99 00 10              a2 = a2 + 0x1000
  5701: 01                       fallthrough
      :                          @328
  5702: 82 9a                    a3 = u64 [a2]
  5704: c9 a9 0b                 a4 = a2 - a3
  5707: ab 7b 12                 jump @332 if a4 != a0
      :                          @329
  5710: c9 2a 0b                 a4 = a3 - t0
  5713: 01                       fallthrough
      :                          @330
  5714: 82 9c                    a5 = u64 [a2]
  5716: ab ac f2                 jump @328 if a5 != a3
      :                          @331
  5719: 7b 9b                    u64 [a2] = a4
  5721: 33 08                    a1 = 0
  5723: 32 00                    ret
      :                          @332
  5725: 32 00                    ret
      :                          @333 [@dyn 65]
  5727: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  5730: 7b 10 18                 u64 [sp + 0x18] = ra
  5733: 7b 15 10                 u64 [sp + 0x10] = s0
  5736: 7b 16 08                 u64 [sp + 0x8] = s1
  5739: 64 75                    s0 = a0
  5741: 82 7a 10                 a3 = u64 [a0 + 0x10]
  5744: 82 77                    a0 = u64 [a0]
  5746: c9 a7 07                 a0 = a0 - a3
  5749: 64 96                    s1 = a2
  5751: ac 97 2b                 jump @336 if a0 <u a2
      :                          @334
  5754: 7b 1a                    u64 [sp] = a3
  5756: 82 57 08                 a0 = u64 [s0 + 0x8]
  5759: c8 a7 07                 a0 = a0 + a3
  5762: 64 69                    a2 = s1
  5764: 50 20 84 00 4f 01        ra = 132, jump @355
      :                          @335 [@dyn 66]
  5770: 82 17                    a0 = u64 [sp]
  5772: c8 76 06                 s1 = s1 + a0
  5775: 7b 56 10                 u64 [s0 + 0x10] = s1
  5778: 33 07                    a0 = 0
  5780: 82 10 18                 ra = u64 [sp + 0x18]
  5783: 82 15 10                 s0 = u64 [sp + 0x10]
  5786: 82 16 08                 s1 = u64 [sp + 0x8]
  5789: 95 11 20                 sp = sp + 0x20
  5792: 32 00                    ret
      :                          @336
  5794: 64 57                    a0 = s0
  5796: 7b 18                    u64 [sp] = a1
  5798: 64 a8                    a1 = a3
  5800: 64 69                    a2 = s1
  5802: 50 20 86 00 7d fc        ra = 134, jump @249
      :                          @337 [@dyn 67]
  5808: 82 18                    a1 = u64 [sp]
  5810: 82 5a 10                 a3 = u64 [s0 + 0x10]
  5813: 28 c5                    jump @334
      :                          @338 [@dyn 68]
  5815: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  5818: 7b 10 20                 u64 [sp + 0x20] = ra
  5821: 7b 15 18                 u64 [sp + 0x18] = s0
  5824: 7b 16 10                 u64 [sp + 0x10] = s1
  5827: 64 86                    s1 = a1
  5829: 83 88                    i32 a1 = a1 + 0
  5831: 33 09 80 00              a2 = 0x80
  5835: 64 7a                    a3 = a0
  5837: ae 98 2c                 jump @343 if a1 >=u a2
      :                          @339
  5840: 82 a8 10                 a1 = u64 [a3 + 0x10]
  5843: 82 a7                    a0 = u64 [a3]
  5845: ab 78 13                 jump @342 if a1 != a0
      :                          @340
  5848: 64 a7                    a0 = a3
  5850: 64 a5                    s0 = a3
  5852: 50 20 8a 00 0a fe        ra = 138, jump @293
      :                          @341 [@dyn 69]
  5858: 64 5a                    a3 = s0
  5860: 82 58 10                 a1 = u64 [s0 + 0x10]
  5863: 01                       fallthrough
      :                          @342
  5864: 82 a7 08                 a0 = u64 [a3 + 0x8]
  5867: c8 87 07                 a0 = a0 + a1
  5870: 78 76                    u8 [a0] = s1
  5872: 95 88 01                 a1 = a1 + 0x1
  5875: 7b a8 10                 u64 [a3 + 0x10] = a1
  5878: 28 ac 00                 jump @351
      :                          @343
  5881: 8b 67 0b                 i32 a0 = s1 >> 0xb
  5884: 48 11 0c                 u32 [sp + 12] = 0
  5887: 52 07 1c                 jump @345 if a0 != 0
      :                          @344
  5890: 98 67 06                 a0 = s1 >> 0x6
  5893: 86 77 c0 00              a0 = a0 | 0xc0
  5897: 78 17 0c                 u8 [sp + 0xc] = a0
  5900: 84 67 3f                 a0 = s1 & 0x3f
  5903: 86 77 80 00              a0 = a0 | 0x80
  5907: 78 17 0d                 u8 [sp + 0xd] = a0
  5910: 33 06 02                 s1 = 0x2
  5913: 28 63                    jump @348
      :                          @345
  5915: 8b 67 10                 i32 a0 = s1 >> 0x10
  5918: 52 07 29                 jump @347 if a0 != 0
      :                          @346
  5921: 98 67 0c                 a0 = s1 >> 0xc
  5924: 86 77 e0 00              a0 = a0 | 0xe0
  5928: 78 17 0c                 u8 [sp + 0xc] = a0
  5931: 97 67 34                 a0 = s1 << 0x34
  5934: 98 77 3a                 a0 = a0 >> 0x3a
  5937: 95 77 80 00              a0 = a0 + 0x80
  5941: 78 17 0d                 u8 [sp + 0xd] = a0
  5944: 84 67 3f                 a0 = s1 & 0x3f
  5947: 86 77 80 00              a0 = a0 | 0x80
  5951: 78 17 0e                 u8 [sp + 0xe] = a0
  5954: 33 06 03                 s1 = 0x3
  5957: 28 37                    jump @348
      :                          @347
  5959: 97 67 2b                 a0 = s1 << 0x2b
  5962: 98 77 3d                 a0 = a0 >> 0x3d
  5965: 95 77 f0 00              a0 = a0 + 0xf0
  5969: 78 17 0c                 u8 [sp + 0xc] = a0
  5972: 97 67 2e                 a0 = s1 << 0x2e
  5975: 98 77 3a                 a0 = a0 >> 0x3a
  5978: 95 77 80 00              a0 = a0 + 0x80
  5982: 78 17 0d                 u8 [sp + 0xd] = a0
  5985: 97 67 34                 a0 = s1 << 0x34
  5988: 98 77 3a                 a0 = a0 >> 0x3a
  5991: 95 77 80 00              a0 = a0 + 0x80
  5995: 78 17 0e                 u8 [sp + 0xe] = a0
  5998: 84 67 3f                 a0 = s1 & 0x3f
  6001: 86 77 80 00              a0 = a0 | 0x80
  6005: 78 17 0f                 u8 [sp + 0xf] = a0
  6008: 33 06 04                 s1 = 0x4
  6011: 01                       fallthrough
      :                          @348
  6012: 82 a5 10                 s0 = u64 [a3 + 0x10]
  6015: 82 a7                    a0 = u64 [a3]
  6017: c9 57 07                 a0 = a0 - s0
  6020: ac 67 2e                 jump @352 if a0 <u s1
      :                          @349
  6023: 7b 1a                    u64 [sp] = a3
  6025: 82 a7 08                 a0 = u64 [a3 + 0x8]
  6028: c8 57 07                 a0 = a0 + s0
  6031: 95 18 0c                 a1 = sp + 0xc
  6034: 64 69                    a2 = s1
  6036: 50 20 8c 00 3f           ra = 140, jump @355
      :                          @350 [@dyn 70]
  6041: c8 56 06                 s1 = s1 + s0
  6044: 82 17                    a0 = u64 [sp]
  6046: 7b 76 10                 u64 [a0 + 0x10] = s1
  6049: 01                       fallthrough
      :                          @351
  6050: 33 07                    a0 = 0
  6052: 82 10 20                 ra = u64 [sp + 0x20]
  6055: 82 15 18                 s0 = u64 [sp + 0x18]
  6058: 82 16 10                 s1 = u64 [sp + 0x10]
  6061: 95 11 28                 sp = sp + 0x28
  6064: 32 00                    ret
      :                          @352
  6066: 64 a7                    a0 = a3
  6068: 64 58                    a1 = s0
  6070: 64 69                    a2 = s1
  6072: 64 a5                    s0 = a3
  6074: 50 20 8e 00 6d fb        ra = 142, jump @249
      :                          @353 [@dyn 71]
  6080: 64 5a                    a3 = s0
  6082: 82 55 10                 s0 = u64 [s0 + 0x10]
  6085: 28 c2                    jump @349
      :                          @354 [@dyn 72]
  6087: 64 8a                    a3 = a1
  6089: 33 08 d8 03 01           a1 = 0x103d8
  6094: 64 a9                    a2 = a3
  6096: 28 ba 04                 jump @450
      :                          @355
  6099: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  6102: 7b 10 18                 u64 [sp + 0x18] = ra
  6105: 7b 15 10                 u64 [sp + 0x10] = s0
  6108: 7b 16 08                 u64 [sp + 0x8] = s1
  6111: 53 19 10 64              jump @364 if a2 <u 16
      :                          @356
  6115: 8d 7a                    i32 a3 = -a0
  6117: 84 a2 07                 t0 = a3 & 0x7
  6120: c8 27 0b                 a4 = a0 + t0
  6123: 51 02 15                 jump @359 if t0 == 0
      :                          @357
  6126: 64 8c                    a5 = a1
  6128: 64 75                    s0 = a0
  6130: 01                       fallthrough
      :                          @358
  6131: 7c ca                    a3 = u8 [a5]
  6133: 78 5a                    u8 [s0] = a3
  6135: 95 55 01                 s0 = s0 + 0x1
  6138: 95 cc 01                 a5 = a5 + 0x1
  6141: ac b5 f6                 jump @358 if s0 <u a4
      :                          @359
  6144: c8 28 03                 t1 = a1 + t0
  6147: c9 29 02                 t0 = a2 - t0
  6150: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  6153: 84 38 07                 a1 = t1 & 0x7
  6156: c8 4b 0a                 a3 = a4 + t2
  6159: 51 08 3b                 jump @366 if a1 == 0
      :                          @360
  6162: 58 04 4b                 jump @369 if t2 <=s 0
      :                          @361
  6165: 97 38 03                 a1 = t1 << 0x3
  6168: 84 80 38                 ra = a1 & 0x38
  6171: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  6174: 82 c5                    s0 = u64 [a5]
  6176: 8d 88                    i32 a1 = -a1
  6178: 84 88 38                 a1 = a1 & 0x38
  6181: 95 cc 08                 a5 = a5 + 0x8
  6184: 01                       fallthrough
      :                          @362
  6185: 82 c6                    s1 = u64 [a5]
  6187: d0 05 05                 s0 = s0 >> ra
  6190: cf 86 09                 a2 = s1 << a1
  6193: d4 59 09                 a2 = a2 | s0
  6196: 7b b9                    u64 [a4] = a2
  6198: 95 bb 08                 a4 = a4 + 0x8
  6201: 95 cc 08                 a5 = a5 + 0x8
  6204: 64 65                    s0 = s1
  6206: ac ab eb                 jump @362 if a4 <u a3
      :                          @363
  6209: 28 1c                    jump @369
      :                          @364
  6211: 64 7a                    a3 = a0
  6213: 52 09 21                 jump @370 if a2 != 0
      :                          @365
  6216: 28 2f                    jump @372
      :                          @366
  6218: 58 04 13                 jump @369 if t2 <=s 0
      :                          @367
  6221: 64 38                    a1 = t1
  6223: 01                       fallthrough
      :                          @368
  6224: 82 89                    a2 = u64 [a1]
  6226: 7b b9                    u64 [a4] = a2
  6228: 95 bb 08                 a4 = a4 + 0x8
  6231: 95 88 08                 a1 = a1 + 0x8
  6234: ac ab f6                 jump @368 if a4 <u a3
      :                          @369
  6237: c8 43 08                 a1 = t1 + t2
  6240: 84 29 07                 a2 = t0 & 0x7
  6243: 51 09 14                 jump @372 if a2 == 0
      :                          @370
  6246: c8 a9 09                 a2 = a2 + a3
  6249: 01                       fallthrough
      :                          @371
  6250: 7c 8b                    a4 = u8 [a1]
  6252: 78 ab                    u8 [a3] = a4
  6254: 95 aa 01                 a3 = a3 + 0x1
  6257: 95 88 01                 a1 = a1 + 0x1
  6260: ac 9a f6                 jump @371 if a3 <u a2
      :                          @372
  6263: 82 10 18                 ra = u64 [sp + 0x18]
  6266: 82 15 10                 s0 = u64 [sp + 0x10]
  6269: 82 16 08                 s1 = u64 [sp + 0x8]
  6272: 95 11 20                 sp = sp + 0x20
  6275: 32 00                    ret
      :                          @373
  6277: 53 19 10 48              jump @382 if a2 <u 16
      :                          @374
  6281: 8d 7a                    i32 a3 = -a0
  6283: 84 aa 07                 a3 = a3 & 0x7
  6286: c8 a7 0b                 a4 = a0 + a3
  6289: 51 0a 0e                 jump @377 if a3 == 0
      :                          @375
  6292: 64 7c                    a5 = a0
  6294: 01                       fallthrough
      :                          @376
  6295: 78 c8                    u8 [a5] = a1
  6297: 95 cc 01                 a5 = a5 + 0x1
  6300: ac bc fb                 jump @376 if a5 <u a4
      :                          @377
  6303: c9 a9 03                 t1 = a2 - a3
  6306: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  6309: c8 cb 0a                 a3 = a4 + a5
  6312: 58 0c 1d                 jump @380 if a5 <=s 0
      :                          @378
  6315: 84 82 ff 00              t0 = a1 & 0xff
  6319: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  6329: ca 92 0c                 a5 = t0 * a2
  6332: 01                       fallthrough
      :                          @379
  6333: 7b bc                    u64 [a4] = a5
  6335: 95 bb 08                 a4 = a4 + 0x8
  6338: ac ab fb                 jump @379 if a4 <u a3
      :                          @380
  6341: 84 39 07                 a2 = t1 & 0x7
  6344: 52 09 0a                 jump @383 if a2 != 0
      :                          @381
  6347: 28 13                    jump @385
      :                          @382
  6349: 64 7a                    a3 = a0
  6351: 51 09 0f                 jump @385 if a2 == 0
      :                          @383
  6354: c8 a9 09                 a2 = a2 + a3
  6357: 01                       fallthrough
      :                          @384
  6358: 78 a8                    u8 [a3] = a1
  6360: 95 aa 01                 a3 = a3 + 0x1
  6363: ac 9a fb                 jump @384 if a3 <u a2
      :                          @385
  6366: 32 00                    ret
      :                          @386 [@dyn 73]
  6368: 82 77                    a0 = u64 [a0]
  6370: 01                       fallthrough
      :                          @387
  6371: 28                       jump @387
      :                          @388
  6372: 95 11 a8                 sp = sp + 0xffffffffffffffa8
  6375: 7b 10 50                 u64 [sp + 0x50] = ra
  6378: 7b 15 48                 u64 [sp + 0x48] = s0
  6381: 7b 16 40                 u64 [sp + 0x40] = s1
  6384: 82 79                    a2 = u64 [a0]
  6386: 7b 18                    u64 [sp] = a1
  6388: 98 9a 04                 a3 = a2 >> 0x4
  6391: 33 08 27                 a1 = 0x27
  6394: 53 2a 71 02 84 00        jump @391 if a3 <u 625
      :                          @389
  6400: 33 08 27                 a1 = 0x27
  6403: 95 1a 3e                 a3 = sp + 0x3e
  6406: 3a 07 00 00 03           a0 = u64 [0x30000]
  6411: 7b 17 10                 u64 [sp + 0x10] = a0
  6414: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
  6420: 33 00 7b 14              ra = 0x147b
  6424: 33 0c 58 04 01           a5 = 0x10458
  6429: 33 04 ff e0 f5 05        t2 = 0x5f5e0ff
  6435: 33 05 9c                 s0 = 0xffffffffffffff9c
  6438: 01                       fallthrough
      :                          @390
  6439: 64 93                    t1 = a2
  6441: 82 17 10                 a0 = u64 [sp + 0x10]
  6444: d6 79 09                 a2 = a2 mulhu a0
  6447: 98 99 0b                 a2 = a2 >> 0xb
  6450: 82 17 08                 a0 = u64 [sp + 0x8]
  6453: c0 79 0b                 i32 a4 = a2 * a0
  6456: c8 3b 06                 s1 = a4 + t1
  6459: 97 6b 30                 a4 = s1 << 0x30
  6462: 98 bb 32                 a4 = a4 >> 0x32
  6465: ca 0b 0b                 a4 = a4 * ra
  6468: 98 b7 11                 a0 = a4 >> 0x11
  6471: 98 bb 10                 a4 = a4 >> 0x10
  6474: 84 bb fe 07              a4 = a4 & 0x7fe
  6478: ca 57 07                 a0 = a0 * s0
  6481: c8 67 07                 a0 = a0 + s1
  6484: 97 77 31                 a0 = a0 << 0x31
  6487: 98 77 30                 a0 = a0 >> 0x30
  6490: c8 cb 0b                 a4 = a4 + a5
  6493: 7c b6                    s1 = u8 [a4]
  6495: 7c bb 01                 a4 = u8 [a4 + 0x1]
  6498: c8 c7 07                 a0 = a0 + a5
  6501: 7c 72 01                 t0 = u8 [a0 + 0x1]
  6504: 7c 77                    a0 = u8 [a0]
  6506: 78 ab ff                 u8 [a3 + 0xffffffffffffffff] = a4
  6509: 78 a6 fe                 u8 [a3 + 0xfffffffffffffffe] = s1
  6512: 78 a2 01                 u8 [a3 + 0x1] = t0
  6515: 78 a7                    u8 [a3] = a0
  6517: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
  6520: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
  6523: ac 34 ac                 jump @390 if t2 <u t1
      :                          @391
  6526: 54 19 63 3b              jump @393 if a2 <=u 99
      :                          @392
  6530: 97 97 30                 a0 = a2 << 0x30
  6533: 98 77 32                 a0 = a0 >> 0x32
  6536: 96 77 7b 14              a0 = a0 * 0x147b
  6540: 98 77 11                 a0 = a0 >> 0x11
  6543: 96 7a 9c                 a3 = a0 * 0xffffffffffffff9c
  6546: c8 a9 09                 a2 = a2 + a3
  6549: 97 99 31                 a2 = a2 << 0x31
  6552: 98 99 30                 a2 = a2 >> 0x30
  6555: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  6558: 33 0a 58 04 01           a3 = 0x10458
  6563: c8 a9 09                 a2 = a2 + a3
  6566: 7c 9a 01                 a3 = u8 [a2 + 0x1]
  6569: 7c 99                    a2 = u8 [a2]
  6571: 95 1b 19                 a4 = sp + 0x19
  6574: c8 8b 0b                 a4 = a4 + a1
  6577: 78 ba 01                 u8 [a4 + 0x1] = a3
  6580: 78 b9                    u8 [a4] = a2
  6582: 64 79                    a2 = a0
  6584: 01                       fallthrough
      :                          @393
  6585: 55 19 0a 14              jump @395 if a2 >=u 10
      :                          @394
  6589: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  6592: 95 17 19                 a0 = sp + 0x19
  6595: c8 87 07                 a0 = a0 + a1
  6598: 83 99 30                 i32 a2 = a2 + 0x30
  6601: 78 79                    u8 [a0] = a2
  6603: 28 21                    jump @396
      :                          @395
  6605: 97 99 01                 a2 = a2 << 0x1
  6608: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  6611: 33 07 58 04 01           a0 = 0x10458
  6616: c8 97 07                 a0 = a0 + a2
  6619: 7c 79 01                 a2 = u8 [a0 + 0x1]
  6622: 7c 77                    a0 = u8 [a0]
  6624: 95 1a 19                 a3 = sp + 0x19
  6627: c8 8a 0a                 a3 = a3 + a1
  6630: 78 a9 01                 u8 [a3 + 0x1] = a2
  6633: 78 a7                    u8 [a3] = a0
  6635: 01                       fallthrough
      :                          @396
  6636: 95 1a 19                 a3 = sp + 0x19
  6639: c8 8a 0a                 a3 = a3 + a1
  6642: 9a 8b 27                 a4 = 0x27 - a1
  6645: 33 08 08 04 01           a1 = 0x10408
  6650: 82 17                    a0 = u64 [sp]
  6652: 33 09                    a2 = 0
  6654: 50 20 94 00 13           ra = 148, jump @398
      :                          @397 [@dyn 74]
  6659: 82 10 50                 ra = u64 [sp + 0x50]
  6662: 82 15 48                 s0 = u64 [sp + 0x48]
  6665: 82 16 40                 s1 = u64 [sp + 0x40]
  6668: 95 11 58                 sp = sp + 0x58
  6671: 32 00                    ret
      :                          @398
  6673: 95 11 98                 sp = sp + 0xffffffffffffff98
  6676: 7b 10 60                 u64 [sp + 0x60] = ra
  6679: 7b 15 58                 u64 [sp + 0x58] = s0
  6682: 7b 16 50                 u64 [sp + 0x50] = s1
  6685: 80 73 34                 t1 = u32 [a0 + 0x34]
  6688: 7b 1a 20                 u64 [sp + 0x20] = a3
  6691: 64 9c                    a5 = a2
  6693: 84 36 01                 s1 = t1 & 0x1
  6696: 33 02 2b                 t0 = 0x2b
  6699: 33 09 00 00 11           a2 = 0x110000
  6704: 84 3a 04                 a3 = t1 & 0x4
  6707: 7b 1b 28                 u64 [sp + 0x28] = a4
  6710: c8 b6 04                 t2 = s1 + a4
  6713: 7b 1c 30                 u64 [sp + 0x30] = a5
  6716: 52 0a 10                 jump @401 if a3 != 0
      :                          @399
  6719: 49 11 38                 u64 [sp + 56] = 0
  6722: 82 78                    a1 = u64 [a0]
  6724: 94 69 2b                 a2 = 0x2b if s1 != 0
  6727: 52 08 35                 jump @405 if a1 != 0
      :                          @400
  6730: 28 56                    jump @410
      :                          @401
  6732: 7b 18 38                 u64 [sp + 0x38] = a1
  6735: 33 09                    a2 = 0
  6737: 51 0c 1b                 jump @404 if a5 == 0
      :                          @402
  6740: 82 1b 38                 a4 = u64 [sp + 0x38]
  6743: 01                       fallthrough
      :                          @403
  6744: 7d b5                    s0 = i8 [a4]
  6746: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
  6749: 85 5a 01                 a3 = s0 ^ 0x1
  6752: c8 a9 09                 a2 = a2 + a3
  6755: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  6758: 95 bb 01                 a4 = a4 + 0x1
  6761: 52 0c ef                 jump @403 if a5 != 0
      :                          @404
  6764: c8 94 04                 t2 = t2 + a2
  6767: 33 09 00 00 11           a2 = 0x110000
  6772: 82 78                    a1 = u64 [a0]
  6774: db 62 09                 a2 = t0 if s1 != 0
  6777: 51 08 27                 jump @410 if a1 == 0
      :                          @405
  6780: 82 7a 08                 a3 = u64 [a0 + 0x8]
  6783: ae a4 21                 jump @410 if t2 >=u a3
      :                          @406
  6786: 84 38 08                 a1 = t1 & 0x8
  6789: 52 08 51                 jump @413 if a1 != 0
      :                          @407
  6792: 7c 76 38                 s1 = u8 [a0 + 0x38]
  6795: c9 4a 0a                 a3 = a3 - t2
  6798: 7b 19 18                 u64 [sp + 0x18] = a2
  6801: 5a 16 01 a0 00           jump @420 if s1 >s 1
      :                          @408
  6806: 52 06 ad 00              jump @422 if s1 != 0
      :                          @409
  6810: 7b 1a 10                 u64 [sp + 0x10] = a3
  6813: 28 ac 00                 jump @423
      :                          @410
  6816: 82 75 20                 s0 = u64 [a0 + 0x20]
  6819: 82 76 28                 s1 = u64 [a0 + 0x28]
  6822: 64 57                    a0 = s0
  6824: 64 68                    a1 = s1
  6826: 82 1a 38                 a3 = u64 [sp + 0x38]
  6829: 82 1b 30                 a4 = u64 [sp + 0x30]
  6832: 50 20 96 00 75 01        ra = 150, jump @443
      :                          @411 [@dyn 75]
  6838: 33 08 01                 a1 = 0x1
  6841: 52 07 be 00              jump @428 if a0 != 0
      :                          @412
  6845: 82 6c 18                 a5 = u64 [s1 + 0x18]
  6848: 64 57                    a0 = s0
  6850: 82 18 20                 a1 = u64 [sp + 0x20]
  6853: 82 19 28                 a2 = u64 [sp + 0x28]
  6856: 82 10 60                 ra = u64 [sp + 0x60]
  6859: 82 15 58                 s0 = u64 [sp + 0x58]
  6862: 82 16 50                 s1 = u64 [sp + 0x50]
  6865: 95 11 68                 sp = sp + 0x68
  6868: 32 0c                    jump [a5]
      :                          @413
  6870: 7b 1a 40                 u64 [sp + 0x40] = a3
  6873: 64 45                    s0 = t2
  6875: 81 78 30                 a1 = i32 [a0 + 0x30]
  6878: 7b 18 10                 u64 [sp + 0x10] = a1
  6881: 7c 7a 38                 a3 = u8 [a0 + 0x38]
  6884: 7b 1a 08                 u64 [sp + 0x8] = a3
  6887: 82 7a 20                 a3 = u64 [a0 + 0x20]
  6890: 82 78 28                 a1 = u64 [a0 + 0x28]
  6893: 48 17 30 30              u32 [a0 + 48] = 0x30
  6897: 7b 17                    u64 [sp] = a0
  6899: 46 17 38 01              u8 [a0 + 56] = 0x1
  6903: 7b 1a 48                 u64 [sp + 0x48] = a3
  6906: 64 a7                    a0 = a3
  6908: 64 86                    s1 = a1
  6910: 82 1a 38                 a3 = u64 [sp + 0x38]
  6913: 82 1b 30                 a4 = u64 [sp + 0x30]
  6916: 50 20 98 00 21 01        ra = 152, jump @443
      :                          @414 [@dyn 76]
  6922: 52 07 69                 jump @427 if a0 != 0
      :                          @415
  6925: 82 17 40                 a0 = u64 [sp + 0x40]
  6928: c9 57 05                 s0 = a0 - s0
  6931: 95 55 01                 s0 = s0 + 0x1
  6934: 01                       fallthrough
      :                          @416
  6935: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  6938: 51 05 cb 00              jump @438 if s0 == 0
      :                          @417
  6942: 82 69 20                 a2 = u64 [s1 + 0x20]
  6945: 33 08 30                 a1 = 0x30
  6948: 82 17 48                 a0 = u64 [sp + 0x48]
  6951: b4 90 02 9a 00           ra = 154, jump [a2]
      :                          @418 [@dyn 77]
  6956: 51 07 eb                 jump @416 if a0 == 0
      :                          @419
  6959: 28 44                    jump @427
      :                          @420
  6961: 52 16 02 12              jump @422 if s1 != 2
      :                          @421
  6965: 98 a6 01                 s1 = a3 >> 0x1
  6968: 95 a8 01                 a1 = a3 + 0x1
  6971: 98 88 01                 a1 = a1 >> 0x1
  6974: 7b 18 10                 u64 [sp + 0x10] = a1
  6977: 28 08                    jump @423
      :                          @422
  6979: 64 a6                    s1 = a3
  6981: 49 11 10                 u64 [sp + 16] = 0
  6984: 01                       fallthrough
      :                          @423
  6985: 82 78 20                 a1 = u64 [a0 + 0x20]
  6988: 7b 18 48                 u64 [sp + 0x48] = a1
  6991: 82 75 28                 s0 = u64 [a0 + 0x28]
  6994: 81 77 30                 a0 = i32 [a0 + 0x30]
  6997: 7b 17 40                 u64 [sp + 0x40] = a0
  7000: 95 66 01                 s1 = s1 + 0x1
  7003: 01                       fallthrough
      :                          @424
  7004: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  7007: 51 06 28                 jump @429 if s1 == 0
      :                          @425
  7010: 82 59 20                 a2 = u64 [s0 + 0x20]
  7013: 82 17 48                 a0 = u64 [sp + 0x48]
  7016: 82 18 40                 a1 = u64 [sp + 0x40]
  7019: b4 90 02 9c 00           ra = 156, jump [a2]
      :                          @426 [@dyn 78]
  7024: 51 07 ec                 jump @424 if a0 == 0
      :                          @427
  7027: 33 08 01                 a1 = 0x1
  7030: 01                       fallthrough
      :                          @428
  7031: 64 87                    a0 = a1
  7033: 82 10 60                 ra = u64 [sp + 0x60]
  7036: 82 15 58                 s0 = u64 [sp + 0x58]
  7039: 82 16 50                 s1 = u64 [sp + 0x50]
  7042: 95 11 68                 sp = sp + 0x68
  7045: 32 00                    ret
      :                          @429
  7047: 82 16 48                 s1 = u64 [sp + 0x48]
  7050: 64 67                    a0 = s1
  7052: 64 58                    a1 = s0
  7054: 82 19 18                 a2 = u64 [sp + 0x18]
  7057: 82 1a 38                 a3 = u64 [sp + 0x38]
  7060: 82 1b 30                 a4 = u64 [sp + 0x30]
  7063: 50 20 9e 00 8e 00        ra = 158, jump @443
      :                          @430 [@dyn 79]
  7069: 33 08 01                 a1 = 0x1
  7072: 52 07 d7                 jump @428 if a0 != 0
      :                          @431
  7075: 82 5a 18                 a3 = u64 [s0 + 0x18]
  7078: 64 67                    a0 = s1
  7080: 82 18 20                 a1 = u64 [sp + 0x20]
  7083: 82 19 28                 a2 = u64 [sp + 0x28]
  7086: b4 a0 02 a0 00           ra = 160, jump [a3]
      :                          @432 [@dyn 80]
  7091: 33 08 01                 a1 = 0x1
  7094: 52 07 c1                 jump @428 if a0 != 0
      :                          @433
  7097: 82 17 10                 a0 = u64 [sp + 0x10]
  7100: 9a 77                    a0 = -a0
  7102: 7b 17 38                 u64 [sp + 0x38] = a0
  7105: 33 06 ff                 s1 = 0xffffffffffffffff
  7108: 01                       fallthrough
      :                          @434
  7109: 82 17 38                 a0 = u64 [sp + 0x38]
  7112: c8 67 07                 a0 = a0 + s1
  7115: 51 17 ff 45              jump @441 if a0 == 4294967295
      :                          @435
  7119: 82 59 20                 a2 = u64 [s0 + 0x20]
  7122: 82 17 48                 a0 = u64 [sp + 0x48]
  7125: 82 18 40                 a1 = u64 [sp + 0x40]
  7128: b4 90 02 a2 00           ra = 162, jump [a2]
      :                          @436 [@dyn 81]
  7133: 95 66 01                 s1 = s1 + 0x1
  7136: 51 07 e5                 jump @434 if a0 == 0
      :                          @437
  7139: 28 39                    jump @442
      :                          @438
  7141: 82 6a 18                 a3 = u64 [s1 + 0x18]
  7144: 82 17 48                 a0 = u64 [sp + 0x48]
  7147: 82 18 20                 a1 = u64 [sp + 0x20]
  7150: 82 19 28                 a2 = u64 [sp + 0x28]
  7153: b4 a0 02 a4 00           ra = 164, jump [a3]
      :                          @439 [@dyn 82]
  7158: 33 08 01                 a1 = 0x1
  7161: 52 07 7e ff              jump @428 if a0 != 0
      :                          @440
  7165: 33 08                    a1 = 0
  7167: 82 16                    s1 = u64 [sp]
  7169: 82 17 10                 a0 = u64 [sp + 0x10]
  7172: 7a 67 30                 u32 [s1 + 0x30] = a0
  7175: 82 17 08                 a0 = u64 [sp + 0x8]
  7178: 78 67 38                 u8 [s1 + 0x38] = a0
  7181: 28 6a ff                 jump @428
      :                          @441
  7184: 82 16 10                 s1 = u64 [sp + 0x10]
  7187: 82 17 10                 a0 = u64 [sp + 0x10]
  7190: d8 76 08                 a1 = s1 <u a0
  7193: 28 5e ff                 jump @428
      :                          @442
  7196: 82 17 10                 a0 = u64 [sp + 0x10]
  7199: d8 76 08                 a1 = s1 <u a0
  7202: 28 55 ff                 jump @428
      :                          @443
  7205: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  7208: 7b 10 20                 u64 [sp + 0x20] = ra
  7211: 7b 15 18                 u64 [sp + 0x18] = s0
  7214: 7b 16 10                 u64 [sp + 0x10] = s1
  7217: 83 9c                    i32 a5 = a2 + 0
  7219: 33 02 00 00 11           t0 = 0x110000
  7224: 64 a6                    s1 = a3
  7226: 64 85                    s0 = a1
  7228: 64 7a                    a3 = a0
  7230: aa 2c 21                 jump @446 if a5 == t0
      :                          @444
  7233: 82 5c 20                 a5 = u64 [s0 + 0x20]
  7236: 64 a7                    a0 = a3
  7238: 64 98                    a1 = a2
  7240: 7b 1b 08                 u64 [sp + 0x8] = a4
  7243: 7b 1a                    u64 [sp] = a3
  7245: b4 c0 02 a6 00           ra = 166, jump [a5]
      :                          @445 [@dyn 83]
  7250: 82 1a                    a3 = u64 [sp]
  7252: 82 1b 08                 a4 = u64 [sp + 0x8]
  7255: 64 78                    a1 = a0
  7257: 33 07 01                 a0 = 0x1
  7260: 52 08 20                 jump @449 if a1 != 0
      :                          @446
  7263: 51 06 1a                 jump @448 if s1 == 0
      :                          @447
  7266: 82 5c 18                 a5 = u64 [s0 + 0x18]
  7269: 64 a7                    a0 = a3
  7271: 64 68                    a1 = s1
  7273: 64 b9                    a2 = a4
  7275: 82 10 20                 ra = u64 [sp + 0x20]
  7278: 82 15 18                 s0 = u64 [sp + 0x18]
  7281: 82 16 10                 s1 = u64 [sp + 0x10]
  7284: 95 11 28                 sp = sp + 0x28
  7287: 32 0c                    jump [a5]
      :                          @448
  7289: 33 07                    a0 = 0
  7291: 01                       fallthrough
      :                          @449
  7292: 82 10 20                 ra = u64 [sp + 0x20]
  7295: 82 15 18                 s0 = u64 [sp + 0x18]
  7298: 82 16 10                 s1 = u64 [sp + 0x10]
  7301: 95 11 28                 sp = sp + 0x28
  7304: 32 00                    ret
      :                          @450
  7306: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  7310: 7b 10 80 00              u64 [sp + 0x80] = ra
  7314: 7b 15 78                 u64 [sp + 0x78] = s0
  7317: 7b 16 70                 u64 [sp + 0x70] = s1
  7320: 49 11 60 20              u64 [sp + 96] = 0x20
  7324: 33 0a 03                 a3 = 0x3
  7327: 78 1a 68                 u8 [sp + 0x68] = a3
  7330: 82 96 20                 s1 = u64 [a2 + 0x20]
  7333: 49 11 30                 u64 [sp + 48] = 0
  7336: 49 11 40                 u64 [sp + 64] = 0
  7339: 7b 17 50                 u64 [sp + 0x50] = a0
  7342: 7b 18 58                 u64 [sp + 0x58] = a1
  7345: 51 06 0a 01              jump @472 if s1 == 0
      :                          @451
  7349: 82 97 28                 a0 = u64 [a2 + 0x28]
  7352: 51 07 79 01              jump @482 if a0 == 0
      :                          @452
  7356: 49 11 28                 u64 [sp + 40] = 0
  7359: 82 95                    s0 = u64 [a2]
  7361: 7b 19 08                 u64 [sp + 0x8] = a2
  7364: 82 98 10                 a1 = u64 [a2 + 0x10]
  7367: 7b 18 18                 u64 [sp + 0x18] = a1
  7370: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  7373: 97 88 03                 a1 = a1 << 0x3
  7376: 98 88 03                 a1 = a1 >> 0x3
  7379: 95 88 01                 a1 = a1 + 0x1
  7382: 7b 18                    u64 [sp] = a1
  7384: 95 55 08                 s0 = s0 + 0x8
  7387: 96 78 38                 a1 = a0 * 0x38
  7390: 95 66 18                 s1 = s1 + 0x18
  7393: 33 07 92 00              a0 = 0x92
  7397: 7b 17 10                 u64 [sp + 0x10] = a0
  7400: 01                       fallthrough
      :                          @453
  7401: 7b 18 20                 u64 [sp + 0x20] = a1
  7404: 82 59                    a2 = u64 [s0]
  7406: 51 09 18                 jump @456 if a2 == 0
      :                          @454
  7409: 82 1a 58                 a3 = u64 [sp + 0x58]
  7412: 82 17 50                 a0 = u64 [sp + 0x50]
  7415: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  7418: 82 aa 18                 a3 = u64 [a3 + 0x18]
  7421: b4 a0 02 a8 00           ra = 168, jump [a3]
      :                          @455 [@dyn 84]
  7426: 52 07 55 01              jump @485 if a0 != 0
      :                          @456
  7430: 81 67 10                 a0 = i32 [s1 + 0x10]
  7433: 7a 17 60                 u32 [sp + 0x60] = a0
  7436: 7c 67 18                 a0 = u8 [s1 + 0x18]
  7439: 78 17 68                 u8 [sp + 0x68] = a0
  7442: 81 67 14                 a0 = i32 [s1 + 0x14]
  7445: 7a 17 64                 u32 [sp + 0x64] = a0
  7448: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  7451: 82 67                    a0 = u64 [s1]
  7453: 51 08 26                 jump @461 if a1 == 0
      :                          @457
  7456: 52 18 01 16              jump @459 if a1 != 1
      :                          @458
  7460: 97 77 04                 a0 = a0 << 0x4
  7463: 82 18 18                 a1 = u64 [sp + 0x18]
  7466: c8 87 07                 a0 = a0 + a1
  7469: 82 78 08                 a1 = u64 [a0 + 0x8]
  7472: 82 19 10                 a2 = u64 [sp + 0x10]
  7475: aa 98 07                 jump @460 if a1 == a2
      :                          @459
  7478: 33 08                    a1 = 0
  7480: 28 0f                    jump @462
      :                          @460
  7482: 82 77                    a0 = u64 [a0]
  7484: 82 77                    a0 = u64 [a0]
  7486: 33 08 01                 a1 = 0x1
  7489: 28 06                    jump @462
      :                          @461
  7491: 33 08 01                 a1 = 0x1
  7494: 01                       fallthrough
      :                          @462
  7495: 7b 18 30                 u64 [sp + 0x30] = a1
  7498: 7b 17 38                 u64 [sp + 0x38] = a0
  7501: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  7504: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  7507: 51 08 26                 jump @467 if a1 == 0
      :                          @463
  7510: 52 18 01 16              jump @465 if a1 != 1
      :                          @464
  7514: 97 77 04                 a0 = a0 << 0x4
  7517: 82 18 18                 a1 = u64 [sp + 0x18]
  7520: c8 87 07                 a0 = a0 + a1
  7523: 82 78 08                 a1 = u64 [a0 + 0x8]
  7526: 82 19 10                 a2 = u64 [sp + 0x10]
  7529: aa 98 07                 jump @466 if a1 == a2
      :                          @465
  7532: 33 08                    a1 = 0
  7534: 28 0f                    jump @468
      :                          @466
  7536: 82 77                    a0 = u64 [a0]
  7538: 82 77                    a0 = u64 [a0]
  7540: 33 08 01                 a1 = 0x1
  7543: 28 06                    jump @468
      :                          @467
  7545: 33 08 01                 a1 = 0x1
  7548: 01                       fallthrough
      :                          @468
  7549: 7b 18 40                 u64 [sp + 0x40] = a1
  7552: 7b 17 48                 u64 [sp + 0x48] = a0
  7555: 82 67 08                 a0 = u64 [s1 + 0x8]
  7558: 97 77 04                 a0 = a0 << 0x4
  7561: 82 18 18                 a1 = u64 [sp + 0x18]
  7564: c8 78 08                 a1 = a1 + a0
  7567: 82 87                    a0 = u64 [a1]
  7569: 82 89 08                 a2 = u64 [a1 + 0x8]
  7572: 95 18 30                 a1 = sp + 0x30
  7575: b4 90 02 aa 00           ra = 170, jump [a2]
      :                          @469 [@dyn 85]
  7580: 52 07 bb 00              jump @485 if a0 != 0
      :                          @470
  7584: 95 55 10                 s0 = s0 + 0x10
  7587: 82 18 20                 a1 = u64 [sp + 0x20]
  7590: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  7593: 95 66 38                 s1 = s1 + 0x38
  7596: 82 17 28                 a0 = u64 [sp + 0x28]
  7599: 95 77 01                 a0 = a0 + 0x1
  7602: 7b 17 28                 u64 [sp + 0x28] = a0
  7605: 52 08 34 ff              jump @453 if a1 != 0
      :                          @471
  7609: 28 6b                    jump @480
      :                          @472
  7611: 82 97 18                 a0 = u64 [a2 + 0x18]
  7614: 51 07 73                 jump @482 if a0 == 0
      :                          @473
  7617: 82 95 10                 s0 = u64 [a2 + 0x10]
  7620: 33 0a                    a3 = 0
  7622: 97 78 04                 a1 = a0 << 0x4
  7625: c8 58 08                 a1 = a1 + s0
  7628: 7b 18 20                 u64 [sp + 0x20] = a1
  7631: 7b 19 08                 u64 [sp + 0x8] = a2
  7634: 82 96                    s1 = u64 [a2]
  7636: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  7639: 97 77 04                 a0 = a0 << 0x4
  7642: 98 77 04                 a0 = a0 >> 0x4
  7645: 95 77 01                 a0 = a0 + 0x1
  7648: 7b 17                    u64 [sp] = a0
  7650: 95 66 08                 s1 = s1 + 0x8
  7653: 01                       fallthrough
      :                          @474
  7654: 7b 1a 28                 u64 [sp + 0x28] = a3
  7657: 82 69                    a2 = u64 [s1]
  7659: 51 09 17                 jump @477 if a2 == 0
      :                          @475
  7662: 82 1a 58                 a3 = u64 [sp + 0x58]
  7665: 82 17 50                 a0 = u64 [sp + 0x50]
  7668: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  7671: 82 aa 18                 a3 = u64 [a3 + 0x18]
  7674: b4 a0 02 ac 00           ra = 172, jump [a3]
      :                          @476 [@dyn 86]
  7679: 52 07 58                 jump @485 if a0 != 0
      :                          @477
  7682: 82 57                    a0 = u64 [s0]
  7684: 82 59 08                 a2 = u64 [s0 + 0x8]
  7687: 95 18 30                 a1 = sp + 0x30
  7690: b4 90 02 ae 00           ra = 174, jump [a2]
      :                          @478 [@dyn 87]
  7695: 52 07 48                 jump @485 if a0 != 0
      :                          @479
  7698: 95 66 10                 s1 = s1 + 0x10
  7701: 95 55 10                 s0 = s0 + 0x10
  7704: 82 1a 28                 a3 = u64 [sp + 0x28]
  7707: 95 aa 01                 a3 = a3 + 0x1
  7710: 82 17 20                 a0 = u64 [sp + 0x20]
  7713: ab 75 c5                 jump @474 if s0 != a0
      :                          @480
  7716: 82 19 08                 a2 = u64 [sp + 0x8]
  7719: 82 1a                    a3 = u64 [sp]
  7721: 82 97 08                 a0 = u64 [a2 + 0x8]
  7724: ac 7a 0d                 jump @483 if a3 <u a0
      :                          @481
  7727: 28 2d                    jump @486
      :                          @482
  7729: 33 0a                    a3 = 0
  7731: 82 97 08                 a0 = u64 [a2 + 0x8]
  7734: 54 07 26                 jump @486 if a0 <=u 0
      :                          @483
  7737: 82 97                    a0 = u64 [a2]
  7739: 97 a8 04                 a1 = a3 << 0x4
  7742: c8 87 09                 a2 = a0 + a1
  7745: 82 1a 58                 a3 = u64 [sp + 0x58]
  7748: 82 17 50                 a0 = u64 [sp + 0x50]
  7751: 82 98                    a1 = u64 [a2]
  7753: 82 99 08                 a2 = u64 [a2 + 0x8]
  7756: 82 aa 18                 a3 = u64 [a3 + 0x18]
  7759: b4 a0 02 b0 00           ra = 176, jump [a3]
      :                          @484 [@dyn 88]
  7764: 51 07 08                 jump @486 if a0 == 0
      :                          @485
  7767: 33 07 01                 a0 = 0x1
  7770: 28 05                    jump @487
      :                          @486
  7772: 33 07                    a0 = 0
  7774: 01                       fallthrough
      :                          @487
  7775: 82 10 80 00              ra = u64 [sp + 0x80]
  7779: 82 15 78                 s0 = u64 [sp + 0x78]
  7782: 82 16 70                 s1 = u64 [sp + 0x70]
  7785: 95 11 88 00              sp = sp + 0x88
  7789: 32 00                    ret
      :                          @488 [@dyn 89]
  7791: 32 00                    ret
      :                          @489 [@dyn 90]
  7793: 95 11 80                 sp = sp + 0xffffffffffffff80
  7796: 7b 10 78                 u64 [sp + 0x78] = ra
  7799: 7b 15 70                 u64 [sp + 0x70] = s0
  7802: 7b 16 68                 u64 [sp + 0x68] = s1
  7805: 64 92                    t0 = a2
  7807: 33 00                    ra = 0
  7809: 33 0b                    a4 = 0
  7811: 33 05                    s0 = 0
  7813: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
  7823: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
  7829: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
  7839: 82 79 10                 a2 = u64 [a0 + 0x10]
  7842: 7b 19 48                 u64 [sp + 0x48] = a2
  7845: 82 79                    a2 = u64 [a0]
  7847: 7b 19 38                 u64 [sp + 0x38] = a2
  7850: 82 77 08                 a0 = u64 [a0 + 0x8]
  7853: 7b 17 30                 u64 [sp + 0x30] = a0
  7856: 33 07 48 04 01           a0 = 0x10448
  7861: 7b 17 08                 u64 [sp + 0x8] = a0
  7864: 3a 07 08 00 03           a0 = u64 [0x30008]
  7869: 7b 17 60                 u64 [sp + 0x60] = a0
  7872: 7b 18 58                 u64 [sp + 0x58] = a1
  7875: 95 88 08                 a1 = a1 + 0x8
  7878: 7b 18                    u64 [sp] = a1
  7880: 33 0c 0a                 a5 = 0xa
  7883: 7b 12 20                 u64 [sp + 0x20] = t0
  7886: 7b 13 18                 u64 [sp + 0x18] = t1
  7889: 7b 14 10                 u64 [sp + 0x10] = t2
  7892: 28 3b                    jump @493
      :                          @490
  7894: 64 06                    s1 = ra
  7896: c8 89 07                 a0 = a2 + a1
  7899: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
  7902: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  7905: 88 77 01                 a0 = a0 <u 0x1
  7908: 01                       fallthrough
      :                          @491
  7909: 82 1a 48                 a3 = u64 [sp + 0x48]
  7912: 78 a7                    u8 [a3] = a0
  7914: 82 17 30                 a0 = u64 [sp + 0x30]
  7917: 82 7a 18                 a3 = u64 [a0 + 0x18]
  7920: 82 17 38                 a0 = u64 [sp + 0x38]
  7923: b4 a0 02 b6 00           ra = 182, jump [a3]
      :                          @492 [@dyn 91]
  7928: 64 5b                    a4 = s0
  7930: 82 12 20                 t0 = u64 [sp + 0x20]
  7933: 82 13 18                 t1 = u64 [sp + 0x18]
  7936: 82 14 10                 t2 = u64 [sp + 0x10]
  7939: 64 60                    ra = s1
  7941: 33 0c 0a                 a5 = 0xa
  7944: 82 15 40                 s0 = u64 [sp + 0x40]
  7947: 52 07 64 01              jump @534 if a0 != 0
      :                          @493
  7951: 84 57 ff 00              a0 = s0 & 0xff
  7955: 52 07 58 01              jump @533 if a0 != 0
      :                          @494
  7959: 7b 1b 50                 u64 [sp + 0x50] = a4
  7962: ae 02 0a                 jump @497 if t0 >=u ra
      :                          @495
  7965: 28 ef 00                 jump @524
      :                          @496
  7968: ac 02 ec 00              jump @524 if t0 <u ra
      :                          @497
  7972: c9 02 08                 a1 = t0 - ra
  7975: 82 16 58                 s1 = u64 [sp + 0x58]
  7978: c8 06 06                 s1 = s1 + ra
  7981: 55 18 10 1d              jump @503 if a1 >=u 16
      :                          @498
  7985: aa 02 d8 00              jump @523 if t0 == ra
      :                          @499
  7989: 33 0a                    a3 = 0
  7991: 01                       fallthrough
      :                          @500
  7992: c8 a6 07                 a0 = s1 + a3
  7995: 7c 77                    a0 = u8 [a0]
  7997: aa c7 a5 00              jump @518 if a0 == a5
      :                          @501
  8001: 95 aa 01                 a3 = a3 + 0x1
  8004: ab a8 f4                 jump @500 if a1 != a3
      :                          @502
  8007: 28 c2 00                 jump @523
      :                          @503
  8010: 95 69 07                 a2 = s1 + 0x7
  8013: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
  8016: c9 6a 07                 a0 = a3 - s1
  8019: d3 6a 0a                 a3 = a3 ^ s1
  8022: 88 aa 01                 a3 = a3 <u 0x1
  8025: 88 7b 01                 a4 = a0 <u 0x1
  8028: d4 ba 0a                 a3 = a3 | a4
  8031: 51 0a 45                 jump @509 if a3 == 0
      :                          @504
  8034: 33 07                    a0 = 0
  8036: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  8039: 82 1b                    a4 = u64 [sp]
  8041: c8 0b 0b                 a4 = a4 + ra
  8044: 28 08                    jump @506
      :                          @505
  8046: 82 1b                    a4 = u64 [sp]
  8048: c8 0b 0b                 a4 = a4 + ra
  8051: 01                       fallthrough
      :                          @506
  8052: c8 76 0c                 a5 = s1 + a0
  8055: 82 cc                    a5 = u64 [a5]
  8057: c8 7b 09                 a2 = a4 + a0
  8060: 82 99                    a2 = u64 [a2]
  8062: d3 4c 05                 s0 = a5 ^ t2
  8065: c8 35 05                 s0 = s0 + t1
  8068: e0 c5 0c                 a5 = s0 & ~a5
  8071: d3 49 05                 s0 = a2 ^ t2
  8074: c8 35 05                 s0 = s0 + t1
  8077: e0 95 09                 a2 = s0 & ~a2
  8080: d4 c9 09                 a2 = a2 | a5
  8083: 82 1c 60                 a5 = u64 [sp + 0x60]
  8086: d2 c9 09                 a2 = a2 & a5
  8089: 52 09 1f                 jump @512 if a2 != 0
      :                          @507
  8092: 95 77 10                 a0 = a0 + 0x10
  8095: ae 7a d5                 jump @506 if a3 >=u a0
      :                          @508
  8098: 28 16                    jump @512
      :                          @509
  8100: c8 a6 0b                 a4 = s1 + a3
  8103: 7c bb                    a4 = u8 [a4]
  8105: aa cb 51                 jump @521 if a4 == a5
      :                          @510
  8108: 95 aa 01                 a3 = a3 + 0x1
  8111: ab a7 f5                 jump @509 if a0 != a3
      :                          @511
  8114: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  8117: ae 7a b9                 jump @505 if a3 >=u a0
      :                          @512
  8120: aa 87 9b 00              jump @530 if a0 == a1
      :                          @513
  8124: 33 0a                    a3 = 0
  8126: c8 76 06                 s1 = s1 + a0
  8129: c9 72 08                 a1 = t0 - a0
  8132: c9 08 08                 a1 = a1 - ra
  8135: 33 0c 0a                 a5 = 0xa
  8138: 82 1b 50                 a4 = u64 [sp + 0x50]
  8141: 01                       fallthrough
      :                          @514
  8142: c8 a6 09                 a2 = s1 + a3
  8145: 7c 99                    a2 = u8 [a2]
  8147: aa c9 0b                 jump @517 if a2 == a5
      :                          @515
  8150: 95 aa 01                 a3 = a3 + 0x1
  8153: ab a8 f5                 jump @514 if a1 != a3
      :                          @516
  8156: 28 2d                    jump @523
      :                          @517
  8158: c8 7a 0a                 a3 = a3 + a0
  8161: 01                       fallthrough
      :                          @518
  8162: c8 0a 0a                 a3 = a3 + ra
  8165: 95 a0 01                 ra = a3 + 0x1
  8168: ae 2a 38 ff              jump @496 if a3 >=u t0
      :                          @519
  8172: 82 17 58                 a0 = u64 [sp + 0x58]
  8175: c8 7a 0a                 a3 = a3 + a0
  8178: 7c a7                    a0 = u8 [a3]
  8180: ab c7 2c ff              jump @496 if a0 != a5
      :                          @520
  8184: 28 62                    jump @531
      :                          @521
  8186: 82 1b 50                 a4 = u64 [sp + 0x50]
  8189: c8 0a 0a                 a3 = a3 + ra
  8192: 95 a0 01                 ra = a3 + 0x1
  8195: ac 2a e9                 jump @519 if a3 <u t0
      :                          @522
  8198: 28 1a ff                 jump @496
      :                          @523
  8201: 64 20                    ra = t0
  8203: 01                       fallthrough
      :                          @524
  8204: 49 11 40 01              u64 [sp + 64] = 0x1
  8208: 64 b5                    s0 = a4
  8210: 64 26                    s1 = t0
  8212: aa 2b 57                 jump @533 if a4 == t0
      :                          @525
  8215: 82 17 48                 a0 = u64 [sp + 0x48]
  8218: 7c 77                    a0 = u8 [a0]
  8220: 51 07 23                 jump @528 if a0 == 0
      :                          @526
  8223: 82 17 30                 a0 = u64 [sp + 0x30]
  8226: 82 7a 18                 a3 = u64 [a0 + 0x18]
  8229: 33 09 04                 a2 = 0x4
  8232: 82 17 38                 a0 = u64 [sp + 0x38]
  8235: 82 18 08                 a1 = u64 [sp + 0x8]
  8238: 7b 10 28                 u64 [sp + 0x28] = ra
  8241: b4 a0 02 b8 00           ra = 184, jump [a3]
      :                          @527 [@dyn 92]
  8246: 82 1b 50                 a4 = u64 [sp + 0x50]
  8249: 82 10 28                 ra = u64 [sp + 0x28]
  8252: 52 07 33                 jump @534 if a0 != 0
      :                          @528
  8255: c9 b6 09                 a2 = s1 - a4
  8258: 82 18 58                 a1 = u64 [sp + 0x58]
  8261: c8 b8 08                 a1 = a1 + a4
  8264: ab b6 8e fe              jump @490 if s1 != a4
      :                          @529
  8268: 64 06                    s1 = ra
  8270: 33 07                    a0 = 0
  8272: 28 95 fe                 jump @491
      :                          @530
  8275: 64 20                    ra = t0
  8277: 82 1b 50                 a4 = u64 [sp + 0x50]
  8280: 28 b4                    jump @524
      :                          @531
  8282: 49 11 40                 u64 [sp + 64] = 0
  8285: 64 05                    s0 = ra
  8287: 64 06                    s1 = ra
  8289: 82 17 48                 a0 = u64 [sp + 0x48]
  8292: 7c 77                    a0 = u8 [a0]
  8294: 52 07 b9                 jump @526 if a0 != 0
      :                          @532
  8297: 28 d6                    jump @528
      :                          @533
  8299: 33 07                    a0 = 0
  8301: 28 06                    jump @535
      :                          @534
  8303: 33 07 01                 a0 = 0x1
  8306: 01                       fallthrough
      :                          @535
  8307: 82 10 78                 ra = u64 [sp + 0x78]
  8310: 82 15 70                 s0 = u64 [sp + 0x70]
  8313: 82 16 68                 s1 = u64 [sp + 0x68]
  8316: 95 11 80 00              sp = sp + 0x80
  8320: 32 00                    ret
      :                          @536 [@dyn 93]
  8322: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  8325: 7b 10 20                 u64 [sp + 0x20] = ra
  8328: 7b 15 18                 u64 [sp + 0x18] = s0
  8331: 7b 16 10                 u64 [sp + 0x10] = s1
  8334: 82 75 10                 s0 = u64 [a0 + 0x10]
  8337: 7c 59                    a2 = u8 [s0]
  8339: 82 7b                    a4 = u64 [a0]
  8341: 82 76 08                 s1 = u64 [a0 + 0x8]
  8344: 51 09 33                 jump @540 if a2 == 0
      :                          @537
  8347: 82 6a 18                 a3 = u64 [s1 + 0x18]
  8350: 7b 18 08                 u64 [sp + 0x8] = a1
  8353: 33 08 48 04 01           a1 = 0x10448
  8358: 33 09 04                 a2 = 0x4
  8361: 64 b7                    a0 = a4
  8363: 7b 1b                    u64 [sp] = a4
  8365: b4 a0 02 bc 00           ra = 188, jump [a3]
      :                          @538 [@dyn 94]
  8370: 82 18 08                 a1 = u64 [sp + 0x8]
  8373: 82 1b                    a4 = u64 [sp]
  8375: 51 07 14                 jump @540 if a0 == 0
      :                          @539
  8378: 33 07 01                 a0 = 0x1
  8381: 82 10 20                 ra = u64 [sp + 0x20]
  8384: 82 15 18                 s0 = u64 [sp + 0x18]
  8387: 82 16 10                 s1 = u64 [sp + 0x10]
  8390: 95 11 28                 sp = sp + 0x28
  8393: 32 00                    ret
      :                          @540
  8395: 83 87                    i32 a0 = a1 + 0
  8397: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  8400: 88 77 01                 a0 = a0 <u 0x1
  8403: 78 57                    u8 [s0] = a0
  8405: 82 6c 20                 a5 = u64 [s1 + 0x20]
  8408: 64 b7                    a0 = a4
  8410: 82 10 20                 ra = u64 [sp + 0x20]
  8413: 82 15 18                 s0 = u64 [sp + 0x18]
  8416: 82 16 10                 s1 = u64 [sp + 0x10]
  8419: 95 11 28                 sp = sp + 0x28
  8422: 32 0c                    jump [a5]
      :                          @541 [@dyn 95]
  8424: 64 8a                    a3 = a1
  8426: 33 08 10 04 01           a1 = 0x10410
  8431: 64 a9                    a2 = a3
  8433: 28 99 fb                 jump @450
      :                          @542
  8436: 95 11 70 ff              sp = sp + 0xffffffffffffff70
  8440: 7b 10 88 00              u64 [sp + 0x88] = ra
  8444: 7b 15 80 00              u64 [sp + 0x80] = s0
  8448: 7b 16 78                 u64 [sp + 0x78] = s1
  8451: 64 75                    s0 = a0
  8453: 7c 77 08                 a0 = u8 [a0 + 0x8]
  8456: 64 8b                    a4 = a1
  8458: 33 08 01                 a1 = 0x1
  8461: 33 06 01                 s1 = 0x1
  8464: 51 07 1d                 jump @544 if a0 == 0
      :                          @543
  8467: 78 56 08                 u8 [s0 + 0x8] = s1
  8470: 46 15 09 01              u8 [s0 + 9] = 0x1
  8474: 64 57                    a0 = s0
  8476: 82 10 88 00              ra = u64 [sp + 0x88]
  8480: 82 15 80 00              s0 = u64 [sp + 0x80]
  8484: 82 16 78                 s1 = u64 [sp + 0x78]
  8487: 95 11 90 00              sp = sp + 0x90
  8491: 32 00                    ret
      :                          @544
  8493: 64 9a                    a3 = a2
  8495: 82 5c                    a5 = u64 [s0]
  8497: 80 c7 34                 a0 = u32 [a5 + 0x34]
  8500: 7c 58 09                 a1 = u8 [s0 + 0x9]
  8503: 84 79 04                 a2 = a0 & 0x4
  8506: 52 09 45                 jump @550 if a2 != 0
      :                          @545
  8509: 51 08 32                 jump @548 if a1 == 0
      :                          @546
  8512: 82 c8 28                 a1 = u64 [a5 + 0x28]
  8515: 82 c7 20                 a0 = u64 [a5 + 0x20]
  8518: 82 83 18                 t1 = u64 [a1 + 0x18]
  8521: 33 08 50 04 01           a1 = 0x10450
  8526: 33 09 02                 a2 = 0x2
  8529: 64 a6                    s1 = a3
  8531: 7b 1b 10                 u64 [sp + 0x10] = a4
  8534: 7b 1c 08                 u64 [sp + 0x8] = a5
  8537: b4 30 02 c0 00           ra = 192, jump [t1]
      :                          @547 [@dyn 96]
  8542: 82 1c 08                 a5 = u64 [sp + 0x8]
  8545: 82 1b 10                 a4 = u64 [sp + 0x10]
  8548: 64 6a                    a3 = s1
  8550: 33 08 01                 a1 = 0x1
  8553: 33 06 01                 s1 = 0x1
  8556: 52 07 a7                 jump @543 if a0 != 0
      :                          @548
  8559: 64 b7                    a0 = a4
  8561: 64 c8                    a1 = a5
  8563: b4 a0 02 c2 00           ra = 194, jump [a3]
      :                          @549 [@dyn 97]
  8568: 33 08 01                 a1 = 0x1
  8571: 64 76                    s1 = a0
  8573: 28 96                    jump @543
      :                          @550
  8575: 52 08 37                 jump @554 if a1 != 0
      :                          @551
  8578: 82 c8 28                 a1 = u64 [a5 + 0x28]
  8581: 82 c7 20                 a0 = u64 [a5 + 0x20]
  8584: 82 83 18                 t1 = u64 [a1 + 0x18]
  8587: 33 08 54 04 01           a1 = 0x10454
  8592: 33 09 01                 a2 = 0x1
  8595: 33 06 01                 s1 = 0x1
  8598: 7b 1a                    u64 [sp] = a3
  8600: 7b 1b 10                 u64 [sp + 0x10] = a4
  8603: 7b 1c 08                 u64 [sp + 0x8] = a5
  8606: b4 30 02 c4 00           ra = 196, jump [t1]
      :                          @552 [@dyn 98]
  8611: 82 1c 08                 a5 = u64 [sp + 0x8]
  8614: 82 1b 10                 a4 = u64 [sp + 0x10]
  8617: 82 1a                    a3 = u64 [sp]
  8619: 33 08 01                 a1 = 0x1
  8622: 52 07 65 ff              jump @543 if a0 != 0
      :                          @553
  8626: 81 c7 34                 a0 = i32 [a5 + 0x34]
  8629: 01                       fallthrough
      :                          @554
  8630: 33 06 01                 s1 = 0x1
  8633: 78 16 37                 u8 [sp + 0x37] = s1
  8636: 82 c8 20                 a1 = u64 [a5 + 0x20]
  8639: 82 c9 28                 a2 = u64 [a5 + 0x28]
  8642: 7b 18 18                 u64 [sp + 0x18] = a1
  8645: 7b 19 20                 u64 [sp + 0x20] = a2
  8648: 95 18 37                 a1 = sp + 0x37
  8651: 7b 18 28                 u64 [sp + 0x28] = a1
  8654: 81 c8 30                 a1 = i32 [a5 + 0x30]
  8657: 7c c9 38                 a2 = u8 [a5 + 0x38]
  8660: 82 c3                    t1 = u64 [a5]
  8662: 82 c4 08                 t2 = u64 [a5 + 0x8]
  8665: 82 c0 10                 ra = u64 [a5 + 0x10]
  8668: 82 c2 18                 t0 = u64 [a5 + 0x18]
  8671: 7a 17 6c                 u32 [sp + 0x6c] = a0
  8674: 7a 18 68                 u32 [sp + 0x68] = a1
  8677: 78 19 70                 u8 [sp + 0x70] = a2
  8680: 7b 13 38                 u64 [sp + 0x38] = t1
  8683: 7b 14 40                 u64 [sp + 0x40] = t2
  8686: 7b 10 48                 u64 [sp + 0x48] = ra
  8689: 7b 12 50                 u64 [sp + 0x50] = t0
  8692: 95 17 18                 a0 = sp + 0x18
  8695: 7b 17 58                 u64 [sp + 0x58] = a0
  8698: 33 07 10 04 01           a0 = 0x10410
  8703: 7b 17 60                 u64 [sp + 0x60] = a0
  8706: 95 18 38                 a1 = sp + 0x38
  8709: 64 b7                    a0 = a4
  8711: b4 a0 02 c6 00           ra = 198, jump [a3]
      :                          @555 [@dyn 99]
  8716: 52 07 21                 jump @558 if a0 != 0
      :                          @556
  8719: 82 18 60                 a1 = u64 [sp + 0x60]
  8722: 82 17 58                 a0 = u64 [sp + 0x58]
  8725: 82 8a 18                 a3 = u64 [a1 + 0x18]
  8728: 33 08 52 04 01           a1 = 0x10452
  8733: 33 09 02                 a2 = 0x2
  8736: b4 a0 02 c8 00           ra = 200, jump [a3]
      :                          @557 [@dyn 100]
  8741: 64 76                    s1 = a0
  8743: 33 08 01                 a1 = 0x1
  8746: 28 e9 fe                 jump @543
      :                          @558
  8749: 33 08 01                 a1 = 0x1
  8752: 28 e3 fe                 jump @543
      :                          @559
  8755: 51 08 9b 00              jump @580 if a1 == 0
      :                          @560
  8759: 64 79                    a2 = a0
  8761: 7c 77                    a0 = u8 [a0]
  8763: 51 07 91 00              jump @579 if a0 == 0
      :                          @561
  8767: 51 27 ff 00 90 00        jump @581 if a0 == 255
      :                          @562
  8773: 6c 7a                    a3 = sext.b a0
  8775: 57 0a 09                 jump @564 if a3 <s 0
      :                          @563
  8778: 33 0a                    a3 = 0
  8780: 33 08                    a1 = 0
  8782: 28 73                    jump @578
      :                          @564
  8784: 55 27 c0 00 0d           jump @566 if a0 >=u 192
      :                          @565
  8789: 33 0a 01                 a3 = 0x1
  8792: 33 0b 80                 a4 = 0xffffffffffffff80
  8795: 28 4a                    jump @575
      :                          @566
  8797: 55 27 e0 00 0e           jump @568 if a0 >=u 224
      :                          @567
  8802: 33 0a 02                 a3 = 0x2
  8805: 33 0b 40 ff              a4 = 0xffffffffffffff40
  8809: 28 3c                    jump @575
      :                          @568
  8811: 55 27 f0 00 0e           jump @570 if a0 >=u 240
      :                          @569
  8816: 33 0a 03                 a3 = 0x3
  8819: 33 0b 20 ff              a4 = 0xffffffffffffff20
  8823: 28 2e                    jump @575
      :                          @570
  8825: 55 27 f8 00 0e           jump @572 if a0 >=u 248
      :                          @571
  8830: 33 0a 04                 a3 = 0x4
  8833: 33 0b 10 ff              a4 = 0xffffffffffffff10
  8837: 28 20                    jump @575
      :                          @572
  8839: 55 27 fc 00 0e           jump @574 if a0 >=u 252
      :                          @573
  8844: 33 0a 05                 a3 = 0x5
  8847: 33 0b 08 ff              a4 = 0xffffffffffffff08
  8851: 28 12                    jump @575
      :                          @574
  8853: 88 7a fe 00              a3 = a0 <u 0xfe
  8857: 33 0b 04 ff              a4 = 0xffffffffffffff04
  8861: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  8865: 85 aa 07                 a3 = a3 ^ 0x7
  8868: 01                       fallthrough
      :                          @575
  8869: ae 8a 2b                 jump @582 if a3 >=u a1
      :                          @576
  8872: 33 08                    a1 = 0
  8874: c8 b7 07                 a0 = a0 + a4
  8877: 64 ab                    a4 = a3
  8879: 01                       fallthrough
      :                          @577
  8880: c8 b9 0c                 a5 = a2 + a4
  8883: 7c cc                    a5 = u8 [a5]
  8885: 97 88 08                 a1 = a1 << 0x8
  8888: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  8891: d4 c8 08                 a1 = a1 | a5
  8894: 52 0b f2                 jump @577 if a4 != 0
      :                          @578
  8897: 8a a9 03                 i32 a2 = a3 << 0x3
  8900: cf 97 07                 a0 = a0 << a2
  8903: c8 87 07                 a0 = a0 + a1
  8906: 32 00                    ret
      :                          @579
  8908: 32 00                    ret
      :                          @580
  8910: 00                       trap
      :                          @581
  8911: 00                       trap
      :                          @582
  8912: 00                       trap
