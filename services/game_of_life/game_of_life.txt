// RO data = 1666/1668 bytes
// RW data = 16/16773168 bytes
// Stack size = 16773120 bytes
// RO data = [0, 16, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 122, 61, 32, 115, 61, 32, 111, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 32, 111, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 32, 119, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 32, 119, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 8, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 18, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 21, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 54, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 86, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 70, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 103, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 38, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 109, 97, 99, 104, 105, 110, 101, 32, 110, 101, 119, 32, 105, 110, 100, 101, 120, 61, 0, 0, 0, 0, 0, 0, 248, 0, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 102, 101, 116, 99, 104, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 32, 102, 101, 116, 99, 104, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 0, 40, 1, 1, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 68, 1, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 122, 101, 114, 111, 32, 109, 61, 44, 32, 112, 97, 103, 101, 95, 105, 100, 61, 32, 122, 101, 114, 111, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 120, 1, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 135, 1, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 145, 1, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 112, 111, 107, 101, 32, 109, 61, 32, 111, 61, 32, 122, 61, 32, 112, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 0, 208, 1, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 18, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 223, 1, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 226, 1, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 229, 1, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 99, 104, 105, 108, 100, 95, 118, 109, 95, 114, 101, 103, 105, 115, 116, 101, 114, 115, 61, 0, 0, 0, 0, 0, 72, 2, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 105, 110, 118, 111, 107, 101, 32, 99, 104, 105, 108, 100, 32, 86, 77, 44, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 0, 120, 2, 1, 0, 0, 0, 0, 0, 39, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 105, 110, 118, 111, 107, 101, 32, 32, 105, 110, 118, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 32, 111, 109, 101, 103, 97, 95, 56, 61, 0, 176, 2, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 191, 2, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 206, 2, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 100, 111, 110, 101, 32, 119, 105, 116, 104, 32, 99, 104, 105, 108, 100, 32, 86, 77, 44, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 0, 0, 0, 0, 0, 0, 8, 3, 1, 0, 0, 0, 0, 0, 42, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 70, 105, 114, 115, 116, 32, 116, 105, 109, 101, 32, 115, 101, 116, 117, 112, 58, 32, 119, 105, 95, 112, 97, 121, 108, 111, 97, 100, 95, 108, 101, 110, 103, 116, 104, 61, 0, 0, 0, 0, 72, 3, 1, 0, 0, 0, 0, 0, 44, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 115, 111, 108, 105, 99, 105, 116, 32, 99, 111, 100, 101, 95, 104, 97, 115, 104, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 111, 100, 101, 95, 108, 101, 110, 103, 116, 104, 61, 0, 136, 3, 1, 0, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 170, 3, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 128, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 130, 0, 0, 0, 0, 0, 0, 0, 136, 0, 0, 0, 0, 0, 0, 0, 144, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 178, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 180, 0, 0, 0, 0, 0, 0, 0, 186, 0, 0, 0, 0, 0, 0, 0, 190, 0, 0, 0, 0, 0, 0, 0, 112, 101, 101, 107, 122, 101, 114, 111, 32, 32, 32, 32, 112, 111, 107, 101, 44, 32, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 115, 117, 99, 99, 101, 115, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 119, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 111, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 115, 116, 97, 99, 107, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 119, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 111, 95, 98, 121, 116, 101, 115]
// RW data = [75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 2932
// Code size = 9162 bytes

      :                          @0
     0: 28 ad 02 00 00           jump @44
      :                          @1
     5: 28 a8 11 00 00           jump @189
      :                          @2
    10: 28 d4 13                 jump @246
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 80 89 34                 a2 = u32 [a1 + 0x34]
    24: 82 77                    a0 = u64 [a0]
    26: 84 9a 10                 a3 = a2 & 0x10
    29: 52 0a 14                 jump @6 if a3 != 0
      :                          @4
    32: 84 99 20                 a2 = a2 & 0x20
    35: 52 09 3e                 jump @9 if a2 != 0
      :                          @5
    38: 82 10 80 00              ra = u64 [sp + 0x80]
    42: 95 11 88 00              sp = sp + 0x88
    46: 28 af 19                 jump @386
      :                          @6
    49: 82 7b                    a4 = u64 [a0]
    51: 33 09 81 00              a2 = 0x81
    55: 95 17 7f                 a0 = sp + 0x7f
    58: 33 02 57                 t0 = 0x57
    61: 01                       fallthrough
      :                          @7
    62: 64 9c                    a5 = a2
    64: 98 ba 04                 a3 = a4 >> 0x4
    67: 84 bb 0f                 a4 = a4 & 0xf
    70: 88 b3 0a                 t1 = a4 <u 0xa
    73: 33 09 30                 a2 = 0x30
    76: da 32 09                 a2 = t0 if t1 == 0
    79: be b9 09                 i32 a2 = a2 + a4
    82: 78 79                    u8 [a0] = a2
    84: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
    87: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
    90: 64 ab                    a4 = a3
    92: 52 0a e2                 jump @7 if a3 != 0
      :                          @8
    95: 28 30                    jump @11
      :                          @9
    97: 82 7b                    a4 = u64 [a0]
    99: 33 09 81 00              a2 = 0x81
   103: 95 17 7f                 a0 = sp + 0x7f
   106: 33 02 37                 t0 = 0x37
   109: 01                       fallthrough
      :                          @10
   110: 64 9c                    a5 = a2
   112: 98 ba 04                 a3 = a4 >> 0x4
   115: 84 bb 0f                 a4 = a4 & 0xf
   118: 88 b3 0a                 t1 = a4 <u 0xa
   121: 33 09 30                 a2 = 0x30
   124: da 32 09                 a2 = t0 if t1 == 0
   127: be b9 09                 i32 a2 = a2 + a4
   130: 78 79                    u8 [a0] = a2
   132: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   135: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   138: 64 ab                    a4 = a3
   140: 52 0a e2                 jump @10 if a3 != 0
      :                          @11
   143: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   146: 56 27 80 00 27           jump @14 if a0 >u 128
      :                          @12
   151: 9a 9b 81 00              a4 = 0x81 - a2
   155: 64 1a                    a3 = sp
   157: c8 7a 0a                 a3 = a3 + a0
   160: 33 09 02                 a2 = 0x2
   163: 64 87                    a0 = a1
   165: 33 08 56 04 01           a1 = 0x10456
   170: 50 10 04 60 1a           ra = 4, jump @396
      :                          @13 [@dyn 2]
   175: 82 10 80 00              ra = u64 [sp + 0x80]
   179: 95 11 88 00              sp = sp + 0x88
   183: 32 00                    ret
      :                          @14
   185: 00                       trap
      :                          @15 [@dyn 3]
   186: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   190: 7b 10 80 00              u64 [sp + 0x80] = ra
   194: 80 89 34                 a2 = u32 [a1 + 0x34]
   197: 84 9a 10                 a3 = a2 & 0x10
   200: 52 0a 14                 jump @18 if a3 != 0
      :                          @16
   203: 84 99 20                 a2 = a2 & 0x20
   206: 52 09 3e                 jump @21 if a2 != 0
      :                          @17
   209: 82 10 80 00              ra = u64 [sp + 0x80]
   213: 95 11 88 00              sp = sp + 0x88
   217: 28 04 19                 jump @386
      :                          @18
   220: 82 7b                    a4 = u64 [a0]
   222: 33 09 81 00              a2 = 0x81
   226: 95 17 7f                 a0 = sp + 0x7f
   229: 33 02 57                 t0 = 0x57
   232: 01                       fallthrough
      :                          @19
   233: 64 9c                    a5 = a2
   235: 98 ba 04                 a3 = a4 >> 0x4
   238: 84 bb 0f                 a4 = a4 & 0xf
   241: 88 b3 0a                 t1 = a4 <u 0xa
   244: 33 09 30                 a2 = 0x30
   247: da 32 09                 a2 = t0 if t1 == 0
   250: be b9 09                 i32 a2 = a2 + a4
   253: 78 79                    u8 [a0] = a2
   255: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   258: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   261: 64 ab                    a4 = a3
   263: 52 0a e2                 jump @19 if a3 != 0
      :                          @20
   266: 28 30                    jump @23
      :                          @21
   268: 82 7b                    a4 = u64 [a0]
   270: 33 09 81 00              a2 = 0x81
   274: 95 17 7f                 a0 = sp + 0x7f
   277: 33 02 37                 t0 = 0x37
   280: 01                       fallthrough
      :                          @22
   281: 64 9c                    a5 = a2
   283: 98 ba 04                 a3 = a4 >> 0x4
   286: 84 bb 0f                 a4 = a4 & 0xf
   289: 88 b3 0a                 t1 = a4 <u 0xa
   292: 33 09 30                 a2 = 0x30
   295: da 32 09                 a2 = t0 if t1 == 0
   298: be b9 09                 i32 a2 = a2 + a4
   301: 78 79                    u8 [a0] = a2
   303: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   306: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   309: 64 ab                    a4 = a3
   311: 52 0a e2                 jump @22 if a3 != 0
      :                          @23
   314: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   317: 56 27 80 00 27           jump @26 if a0 >u 128
      :                          @24
   322: 9a 9b 81 00              a4 = 0x81 - a2
   326: 64 1a                    a3 = sp
   328: c8 7a 0a                 a3 = a3 + a0
   331: 33 09 02                 a2 = 0x2
   334: 64 87                    a0 = a1
   336: 33 08 56 04 01           a1 = 0x10456
   341: 50 10 08 b5 19           ra = 8, jump @396
      :                          @25 [@dyn 4]
   346: 82 10 80 00              ra = u64 [sp + 0x80]
   350: 95 11 88 00              sp = sp + 0x88
   354: 32 00                    ret
      :                          @26
   356: 00                       trap
      :                          @27 [@dyn 5]
   357: 95 11 d0                 sp = sp + 0xffffffffffffffd0
   360: 7b 10 28                 u64 [sp + 0x28] = ra
   363: 7b 15 20                 u64 [sp + 0x20] = s0
   366: 7b 16 18                 u64 [sp + 0x18] = s1
   369: 64 85                    s0 = a1
   371: 82 88 28                 a1 = u64 [a1 + 0x28]
   374: 82 5a 20                 a3 = u64 [s0 + 0x20]
   377: 82 8b 18                 a4 = u64 [a1 + 0x18]
   380: 64 76                    s1 = a0
   382: 33 08 08 04 01           a1 = 0x10408
   387: 33 09 01                 a2 = 0x1
   390: 64 a7                    a0 = a3
   392: b4 b0 01 0c              ra = 12, jump [a4]
      :                          @28 [@dyn 6]
   396: 7b 15                    u64 [sp] = s0
   398: 78 17 08                 u8 [sp + 0x8] = a0
   401: 46 11 09                 u8 [sp + 9] = 0
   404: 7b 16 10                 u64 [sp + 0x10] = s1
   407: 33 05 02                 s0 = 0x2
   410: 64 17                    a0 = sp
   412: 95 18 10                 a1 = sp + 0x10
   415: 33 09 02                 a2 = 0x2
   418: 50 10 0e 4b 20           ra = 14, jump @540
      :                          @29 [@dyn 7]
   423: 95 67 08                 a0 = s1 + 0x8
   426: 7b 17 10                 u64 [sp + 0x10] = a0
   429: 64 17                    a0 = sp
   431: 95 18 10                 a1 = sp + 0x10
   434: 64 59                    a2 = s0
   436: 50 10 10 39 20           ra = 16, jump @540
      :                          @30 [@dyn 8]
   441: 95 67 10                 a0 = s1 + 0x10
   444: 7b 17 10                 u64 [sp + 0x10] = a0
   447: 64 17                    a0 = sp
   449: 95 18 10                 a1 = sp + 0x10
   452: 64 59                    a2 = s0
   454: 50 10 12 27 20           ra = 18, jump @540
      :                          @31 [@dyn 9]
   459: 95 67 18                 a0 = s1 + 0x18
   462: 7b 17 10                 u64 [sp + 0x10] = a0
   465: 64 17                    a0 = sp
   467: 95 18 10                 a1 = sp + 0x10
   470: 64 59                    a2 = s0
   472: 50 10 14 15 20           ra = 20, jump @540
      :                          @32 [@dyn 10]
   477: 95 67 20                 a0 = s1 + 0x20
   480: 7b 17 10                 u64 [sp + 0x10] = a0
   483: 64 17                    a0 = sp
   485: 95 18 10                 a1 = sp + 0x10
   488: 64 59                    a2 = s0
   490: 50 10 16 03 20           ra = 22, jump @540
      :                          @33 [@dyn 11]
   495: 95 67 28                 a0 = s1 + 0x28
   498: 7b 17 10                 u64 [sp + 0x10] = a0
   501: 64 17                    a0 = sp
   503: 95 18 10                 a1 = sp + 0x10
   506: 64 59                    a2 = s0
   508: 50 10 18 f1 1f           ra = 24, jump @540
      :                          @34 [@dyn 12]
   513: 95 67 30                 a0 = s1 + 0x30
   516: 7b 17 10                 u64 [sp + 0x10] = a0
   519: 64 17                    a0 = sp
   521: 95 18 10                 a1 = sp + 0x10
   524: 64 59                    a2 = s0
   526: 50 10 1a df 1f           ra = 26, jump @540
      :                          @35 [@dyn 13]
   531: 95 67 38                 a0 = s1 + 0x38
   534: 7b 17 10                 u64 [sp + 0x10] = a0
   537: 64 17                    a0 = sp
   539: 95 18 10                 a1 = sp + 0x10
   542: 64 59                    a2 = s0
   544: 50 10 1c cd 1f           ra = 28, jump @540
      :                          @36 [@dyn 14]
   549: 95 67 40                 a0 = s1 + 0x40
   552: 7b 17 10                 u64 [sp + 0x10] = a0
   555: 64 17                    a0 = sp
   557: 95 18 10                 a1 = sp + 0x10
   560: 64 59                    a2 = s0
   562: 50 10 1e bb 1f           ra = 30, jump @540
      :                          @37 [@dyn 15]
   567: 95 67 48                 a0 = s1 + 0x48
   570: 7b 17 10                 u64 [sp + 0x10] = a0
   573: 64 17                    a0 = sp
   575: 95 18 10                 a1 = sp + 0x10
   578: 64 59                    a2 = s0
   580: 50 10 20 a9 1f           ra = 32, jump @540
      :                          @38 [@dyn 16]
   585: 95 67 50                 a0 = s1 + 0x50
   588: 7b 17 10                 u64 [sp + 0x10] = a0
   591: 64 17                    a0 = sp
   593: 95 18 10                 a1 = sp + 0x10
   596: 64 59                    a2 = s0
   598: 50 10 22 97 1f           ra = 34, jump @540
      :                          @39 [@dyn 17]
   603: 95 67 58                 a0 = s1 + 0x58
   606: 7b 17 10                 u64 [sp + 0x10] = a0
   609: 64 17                    a0 = sp
   611: 95 18 10                 a1 = sp + 0x10
   614: 64 59                    a2 = s0
   616: 50 10 24 85 1f           ra = 36, jump @540
      :                          @40 [@dyn 18]
   621: 95 67 60                 a0 = s1 + 0x60
   624: 7b 17 10                 u64 [sp + 0x10] = a0
   627: 64 17                    a0 = sp
   629: 95 18 10                 a1 = sp + 0x10
   632: 64 59                    a2 = s0
   634: 50 10 26 73 1f           ra = 38, jump @540
      :                          @41 [@dyn 19]
   639: 33 07 01                 a0 = 0x1
   642: 7c 18 08                 a1 = u8 [sp + 0x8]
   645: 52 08 1a                 jump @43 if a1 != 0
      :                          @42
   648: 82 17                    a0 = u64 [sp]
   650: 82 78 28                 a1 = u64 [a0 + 0x28]
   653: 82 77 20                 a0 = u64 [a0 + 0x20]
   656: 82 8a 18                 a3 = u64 [a1 + 0x18]
   659: 33 08 55 04 01           a1 = 0x10455
   664: 33 09 01                 a2 = 0x1
   667: b4 a0 01 28              ra = 40, jump [a3]
      :                          @43 [@dyn 20]
   671: 82 10 28                 ra = u64 [sp + 0x28]
   674: 82 15 20                 s0 = u64 [sp + 0x20]
   677: 82 16 18                 s1 = u64 [sp + 0x18]
   680: 95 11 30                 sp = sp + 0x30
   683: 32 00                    ret
      :                          @44 [export #0: 'refine']
   685: 95 11 08 f8              sp = sp + 0xfffffffffffff808
   689: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
   693: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
   697: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
   701: 95 11 80 b4 fe           sp = sp + 0xfffffffffffeb480
   706: 33 0a 00 00 01           a3 = 0x10000
   711: 55 18 04 09              jump @46 if a1 >=u 4
      :                          @45
   715: 33 06                    s1 = 0
   717: 28 a4 01                 jump @73
      :                          @46
   720: 95 86 fc                 s1 = a1 + 0xfffffffffffffffc
   723: 51 06 9e 01              jump @73 if s1 == 0
      :                          @47
   727: 95 7a 04                 a3 = a0 + 0x4
   730: 7d a8                    a1 = i8 [a3]
   732: 80 79                    a2 = u32 [a0]
   734: 33 05 01                 s0 = 0x1
   737: 59 08 3d                 jump @56 if a1 >=s 0
      :                          @48
   740: 84 87 ff 00              a0 = a1 & 0xff
   744: 33 05 02                 s0 = 0x2
   747: 53 27 c0 00 2d           jump @54 if a0 <u 192
      :                          @49
   752: 33 05 03                 s0 = 0x3
   755: 53 27 e0 00 25           jump @54 if a0 <u 224
      :                          @50
   760: 33 05 04                 s0 = 0x4
   763: 53 27 f0 00 1d           jump @54 if a0 <u 240
      :                          @51
   768: 33 05 05                 s0 = 0x5
   771: 53 27 f8 00 15           jump @54 if a0 <u 248
      :                          @52
   776: 33 05 06                 s0 = 0x6
   779: 53 27 fc 00 0d           jump @54 if a0 <u 252
      :                          @53
   784: 88 77 fe 00              a0 = a0 <u 0xfe
   788: 9a 75 08                 s0 = 0x8 - a0
   791: 01                       fallthrough
      :                          @54
   792: ae 56 06                 jump @56 if s1 >=u s0
      :                          @55
   795: 28 91 0e                 jump @188
      :                          @56
   798: 7b 19 78                 u64 [sp + 0x78] = a2
   801: 7b 1a 70                 u64 [sp + 0x70] = a3
   804: 64 a7                    a0 = a3
   806: 64 58                    a1 = s0
   808: 50 10 2a 04 20           ra = 42, jump @557
      :                          @57 [@dyn 21]
   813: 64 58                    a1 = s0
   815: 64 75                    s0 = a0
   817: e4 86 07                 a0 = maxu(s1, a1)
   820: 7b 18 68                 u64 [sp + 0x68] = a1
   823: c9 87 07                 a0 = a0 - a1
   826: d8 57 08                 a1 = a0 <u s0
   829: e4 57 07                 a0 = maxu(a0, s0)
   832: c9 57 07                 a0 = a0 - s0
   835: 88 77 20                 a0 = a0 <u 0x20
   838: d4 87 07                 a0 = a0 | a1
   841: 52 07 20 01              jump @72 if a0 != 0
      :                          @58
   845: 7b 15 80 00              u64 [sp + 0x80] = s0
   849: 48 21 a8 00              u32 [sp + 168] = 0
   853: 49 21 a0 00              u64 [sp + 160] = 0
   857: 49 21 98 00              u64 [sp + 152] = 0
   861: 49 21 90 00              u64 [sp + 144] = 0
   865: 49 21 88 00              u64 [sp + 136] = 0
   869: 95 17 88 00              a0 = sp + 0x88
   873: 33 09 24                 a2 = 0x24
   876: 33 0a 03                 a3 = 0x3
   879: 33 08                    a1 = 0
   881: 33 0b                    a4 = 0
   883: 33 0c                    a5 = 0
   885: 0a 12                    ecalli 18 // 'fetch'
   887: 01                       fallthrough
      :                          @59
   888: 95 18 00 51 01           a1 = sp + 0x15100
   893: 33 06 24                 s1 = 0x24
   896: 55 15 08 a6 00           jump @69 if s0 >=u 8
      :                          @60
   901: 95 17 80 00              a0 = sp + 0x80
   905: 7b 87 60 01              u64 [a1 + 0x160] = a0
   909: 33 07 06                 a0 = 0x6
   912: 7b 87 68 01              u64 [a1 + 0x168] = a0
   916: 33 07 78 03 01           a0 = 0x10378
   921: 7b 17 b0 00              u64 [sp + 0xb0] = a0
   925: 49 21 b8 00 01           u64 [sp + 184] = 0x1
   930: 49 21 d0 00              u64 [sp + 208] = 0
   934: 95 18 60 52 01           a1 = sp + 0x15260
   939: 7b 18 c0 00              u64 [sp + 0xc0] = a1
   943: 49 21 c8 00 01           u64 [sp + 200] = 0x1
   948: 95 17 f8 40 01           a0 = sp + 0x140f8
   953: 95 18 b0 00              a1 = sp + 0xb0
   957: 95 15 b0 40 01           s0 = sp + 0x140b0
   962: 50 10 2c 80 12           ra = 44, jump @303
      :                          @61 [@dyn 22]
   967: 82 5a 50                 a3 = u64 [s0 + 0x50]
   970: 82 5b 58                 a4 = u64 [s0 + 0x58]
   973: 82 55 48                 s0 = u64 [s0 + 0x48]
   976: 33 07 02                 a0 = 0x2
   979: 33 08                    a1 = 0
   981: 33 09                    a2 = 0
   983: 7b 1a 78                 u64 [sp + 0x78] = a3
   986: 33 00 2e                 ra = 0x2e
   989: 0a 64                    ecalli 100 // 'log'
   991: 01                       fallthrough
      :                          @62 [@dyn 23]
   992: 95 58 00 10 00 ff        a1 = s0 + 0xffffffffff001000
   998: 53 48 01 10 00 ff 3a     jump @68 if a1 <u 4278194177
      :                          @63
  1005: 64 53                    t1 = s0
  1007: 33 02 20 00 03           t0 = 0x30020
  1012: 95 28 00 f0 ff 00        a1 = t0 + 0xfff000
  1018: 33 09 ff ef ff 00        a2 = 0xffefff
  1024: 82 17 78                 a0 = u64 [sp + 0x78]
  1027: 01                       fallthrough
      :                          @64
  1028: 82 8a                    a3 = u64 [a1]
  1030: c8 92 0b                 a4 = t0 + a2
  1033: c9 ab 0b                 a4 = a4 - a3
  1036: ab 7b 14                 jump @68 if a4 != a0
      :                          @65
  1039: c9 3a 0b                 a4 = a3 - t1
  1042: 01                       fallthrough
      :                          @66
  1043: 82 8c                    a5 = u64 [a1]
  1045: ab ac ef                 jump @64 if a5 != a3
      :                          @67
  1048: 7b 8b                    u64 [a1] = a4
  1050: 95 1a 88 00              a3 = sp + 0x88
  1054: 28 53                    jump @73
      :                          @68
  1056: 95 1a 88 00              a3 = sp + 0x88
  1060: 28 4d                    jump @73
      :                          @69
  1062: 82 17 70                 a0 = u64 [sp + 0x70]
  1065: 82 18 68                 a1 = u64 [sp + 0x68]
  1068: c8 87 07                 a0 = a0 + a1
  1071: 80 75                    s0 = u32 [a0]
  1073: 80 78 04                 a1 = u32 [a0 + 0x4]
  1076: 7b 18 70                 u64 [sp + 0x70] = a1
  1079: 80 77 08                 a0 = u32 [a0 + 0x8]
  1082: 7b 17 68                 u64 [sp + 0x68] = a0
  1085: 95 17 b0 00              a0 = sp + 0xb0
  1089: 33 09 00 40 01           a2 = 0x14000
  1094: 33 08                    a1 = 0
  1096: 50 10 30 36 15           ra = 48, jump @371
      :                          @70 [@dyn 24]
  1101: 95 18 88 00              a1 = sp + 0x88
  1105: 95 19 b0 00              a2 = sp + 0xb0
  1109: 33 0b 00 40 01           a4 = 0x14000
  1114: 82 17 78                 a0 = u64 [sp + 0x78]
  1117: 33 0a                    a3 = 0
  1119: 0a 11                    ecalli 17 // 'historical_lookup'
  1121: 01                       fallthrough
      :                          @71
  1122: 95 78 01                 a1 = a0 + 0x1
  1125: 55 18 04 2a              jump @74 if a1 >=u 4
      :                          @72
  1129: 33 06                    s1 = 0
  1131: 33 0a 00 00 01           a3 = 0x10000
  1136: 01                       fallthrough
      :                          @73
  1137: 64 a7                    a0 = a3
  1139: 64 68                    a1 = s1
  1141: 33 09 80 4b 01           a2 = 0x14b80
  1146: c8 91 01                 sp = sp + a2
  1149: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  1153: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  1157: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  1161: 95 11 f8 07              sp = sp + 0x7f8
  1165: 32 00                    ret
      :                          @74
  1167: 95 78 fd                 a1 = a0 + 0xfffffffffffffffd
  1170: 53 18 03 d7              jump @72 if a1 <u 3
      :                          @75
  1174: 84 78 fe                 a1 = a0 & 0xfffffffffffffffe
  1177: 51 18 06 d0              jump @72 if a1 == 6
      :                          @76
  1181: 95 78 f8                 a1 = a0 + 0xfffffffffffffff8
  1184: 53 18 03 c9              jump @72 if a1 <u 3
      :                          @77
  1188: 7c 18 b2 00              a1 = u8 [sp + 0xb2]
  1192: 7c 19 b1 00              a2 = u8 [sp + 0xb1]
  1196: 7c 1a b0 00              a3 = u8 [sp + 0xb0]
  1200: 97 88 10                 a1 = a1 << 0x10
  1203: 97 99 08                 a2 = a2 << 0x8
  1206: d4 98 08                 a1 = a1 | a2
  1209: d4 a8 08                 a1 = a1 | a3
  1212: 95 79 f5                 a2 = a0 + 0xfffffffffffffff5
  1215: ac 89 aa                 jump @72 if a2 <u a1
      :                          @78
  1218: 7c 17 b5 00              a0 = u8 [sp + 0xb5]
  1222: 7c 1a b4 00              a3 = u8 [sp + 0xb4]
  1226: 7c 1b b3 00              a4 = u8 [sp + 0xb3]
  1230: 97 77 10                 a0 = a0 << 0x10
  1233: 97 aa 08                 a3 = a3 << 0x8
  1236: d4 a7 07                 a0 = a0 | a3
  1239: d4 b7 07                 a0 = a0 | a4
  1242: c9 89 09                 a2 = a2 - a1
  1245: ac 79 8c                 jump @72 if a2 <u a0
      :                          @79
  1248: c9 79 06                 s1 = a2 - a0
  1251: 53 16 04 86              jump @72 if s1 <u 4
      :                          @80
  1255: 95 12 bb 00              t0 = sp + 0xbb
  1259: c8 28 03                 t1 = a1 + t0
  1262: c8 37 0b                 a4 = a0 + t1
  1265: 7c bc 03                 a5 = u8 [a4 + 0x3]
  1268: 7b 15 08                 u64 [sp + 0x8] = s0
  1271: 7c b5 02                 s0 = u8 [a4 + 0x2]
  1274: 7c ba                    a3 = u8 [a4]
  1276: 7c b9 01                 a2 = u8 [a4 + 0x1]
  1279: 97 cc 10                 a5 = a5 << 0x10
  1282: 97 55 08                 s0 = s0 << 0x8
  1285: d4 5c 0c                 a5 = a5 | s0
  1288: d4 c9 09                 a2 = a2 | a5
  1291: 97 99 08                 a2 = a2 << 0x8
  1294: d4 a9 0c                 a5 = a2 | a3
  1297: 95 66 fc                 s1 = s1 + 0xfffffffffffffffc
  1300: ac c6 55 ff              jump @72 if s1 <u a5
      :                          @81
  1304: 7c 19 b7 00              a2 = u8 [sp + 0xb7]
  1308: 7c 1a b6 00              a3 = u8 [sp + 0xb6]
  1312: 97 99 08                 a2 = a2 << 0x8
  1315: 7c 16 ba 00              s1 = u8 [sp + 0xba]
  1319: 7c 15 b9 00              s0 = u8 [sp + 0xb9]
  1323: d4 a9 09                 a2 = a2 | a3
  1326: 7c 1a b8 00              a3 = u8 [sp + 0xb8]
  1330: 97 66 10                 s1 = s1 << 0x10
  1333: 97 55 08                 s0 = s0 << 0x8
  1336: d4 65 05                 s0 = s0 | s1
  1339: d4 5a 0a                 a3 = a3 | s0
  1342: 95 bb 04                 a4 = a4 + 0x4
  1345: 33 04 b0 40 01           t2 = 0x140b0
  1350: c8 41 06                 s1 = sp + t2
  1353: 7b 69                    u64 [s1] = a2
  1355: 7b 6a 08                 u64 [s1 + 0x8] = a3
  1358: 7b 62 10                 u64 [s1 + 0x10] = t0
  1361: 7b 68 18                 u64 [s1 + 0x18] = a1
  1364: 7b 63 20                 u64 [s1 + 0x20] = t1
  1367: 7b 67 28                 u64 [s1 + 0x28] = a0
  1370: 7b 6b 30                 u64 [s1 + 0x30] = a4
  1373: 7b 6c 38                 u64 [s1 + 0x38] = a5
  1376: 7b 66 48                 u64 [s1 + 0x48] = s1
  1379: 33 08 06                 a1 = 0x6
  1382: 7b 68 50                 u64 [s1 + 0x50] = a1
  1385: 95 17 b8 40 01           a0 = sp + 0x140b8
  1390: 7b 67 58                 u64 [s1 + 0x58] = a0
  1393: 7b 68 60                 u64 [s1 + 0x60] = a1
  1396: 95 17 c0 40 01           a0 = sp + 0x140c0
  1401: 7b 67 68                 u64 [s1 + 0x68] = a0
  1404: 7b 68 70                 u64 [s1 + 0x70] = a1
  1407: 95 17 c8 40 01           a0 = sp + 0x140c8
  1412: 7b 67 78                 u64 [s1 + 0x78] = a0
  1415: 7b 68 80 00              u64 [s1 + 0x80] = a1
  1419: 95 17 d0 40 01           a0 = sp + 0x140d0
  1424: 7b 67 88 00              u64 [s1 + 0x88] = a0
  1428: 7b 68 90 00              u64 [s1 + 0x90] = a1
  1432: 95 17 d8 40 01           a0 = sp + 0x140d8
  1437: 7b 67 98 00              u64 [s1 + 0x98] = a0
  1441: 7b 68 a0 00              u64 [s1 + 0xa0] = a1
  1445: 95 17 e0 40 01           a0 = sp + 0x140e0
  1450: 7b 67 a8 00              u64 [s1 + 0xa8] = a0
  1454: 7b 68 b0 00              u64 [s1 + 0xb0] = a1
  1458: 95 17 e8 40 01           a0 = sp + 0x140e8
  1463: 7b 67 b8 00              u64 [s1 + 0xb8] = a0
  1467: 7b 18 78                 u64 [sp + 0x78] = a1
  1470: 7b 68 c0 00              u64 [s1 + 0xc0] = a1
  1474: 33 07 78 00 01           a0 = 0x10078
  1479: 95 16 00 51 01           s1 = sp + 0x15100
  1484: 7b 67 60 01              u64 [s1 + 0x160] = a0
  1488: 49 26 68 01 08           u64 [s1 + 360] = 0x8
  1493: 49 26 80 01              u64 [s1 + 384] = 0
  1497: 95 18 f8 40 01           a1 = sp + 0x140f8
  1502: 7b 68 70 01              u64 [s1 + 0x170] = a1
  1506: 49 26 78 01 08           u64 [s1 + 376] = 0x8
  1511: 95 17 88 51 01           a0 = sp + 0x15188
  1516: 95 18 60 52 01           a1 = sp + 0x15260
  1521: 50 10 32 51 10           ra = 50, jump @303
      :                          @82 [@dyn 25]
  1526: 82 65 90 00              s0 = u64 [s1 + 0x90]
  1530: 82 6b 98 00              a4 = u64 [s1 + 0x98]
  1534: 82 66 88 00              s1 = u64 [s1 + 0x88]
  1538: 33 07 02                 a0 = 0x2
  1541: 33 08                    a1 = 0
  1543: 33 09                    a2 = 0
  1545: 64 5a                    a3 = s0
  1547: 33 00 34                 ra = 0x34
  1550: 0a 64                    ecalli 100 // 'log'
  1552: 01                       fallthrough
      :                          @83 [@dyn 26]
  1553: 95 67 00 10 00 ff        a0 = s1 + 0xffffffffff001000
  1559: 49 11 60 01 10 00 ff     u64 [sp + 96] = 0xffffffffff001001
  1566: 53 47 01 10 00 ff 36     jump @89 if a0 <u 4278194177
      :                          @84
  1573: 64 52                    t0 = s0
  1575: 64 65                    s0 = s1
  1577: 33 07 20 00 03           a0 = 0x30020
  1582: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
  1588: 33 09 ff ef ff 00        a2 = 0xffefff
  1594: 01                       fallthrough
      :                          @85
  1595: 82 8a                    a3 = u64 [a1]
  1597: c8 97 0b                 a4 = a0 + a2
  1600: c9 ab 0b                 a4 = a4 - a3
  1603: ab 2b 11                 jump @89 if a4 != t0
      :                          @86
  1606: c9 5a 0b                 a4 = a3 - s0
  1609: 01                       fallthrough
      :                          @87
  1610: 82 8c                    a5 = u64 [a1]
  1612: ab ac ef                 jump @85 if a5 != a3
      :                          @88
  1615: 7b 8b                    u64 [a1] = a4
  1617: 33 06                    s1 = 0
  1619: 01                       fallthrough
      :                          @89
  1620: 95 15 b0 40 01           s0 = sp + 0x140b0
  1625: 82 57 30                 a0 = u64 [s0 + 0x30]
  1628: 82 58 38                 a1 = u64 [s0 + 0x38]
  1631: 33 09                    a2 = 0
  1633: 0a 14                    ecalli 20 // 'machine'
  1635: 7b 57 40                 u64 [s0 + 0x40] = a0
  1638: 95 17 f0 40 01           a0 = sp + 0x140f0
  1643: 95 18 00 51 01           a1 = sp + 0x15100
  1648: 7b 87 88 00              u64 [a1 + 0x88] = a0
  1652: 82 17 78                 a0 = u64 [sp + 0x78]
  1655: 7b 87 90 00              u64 [a1 + 0x90] = a0
  1659: 33 07 18 01 01           a0 = 0x10118
  1664: 7b 57 48                 u64 [s0 + 0x48] = a0
  1667: 95 17 88 51 01           a0 = sp + 0x15188
  1672: 7b 57 58                 u64 [s0 + 0x58] = a0
  1675: 49 15 50 01              u64 [s0 + 80] = 0x1
  1679: 49 15 60 01              u64 [s0 + 96] = 0x1
  1683: 49 15 68                 u64 [s0 + 104] = 0
  1686: 95 17 60 52 01           a0 = sp + 0x15260
  1691: 95 18 f8 40 01           a1 = sp + 0x140f8
  1696: 50 10 36 a2 0f           ra = 54, jump @303
      :                          @90 [@dyn 27]
  1701: 95 17 00 51 01           a0 = sp + 0x15100
  1706: 82 76 68 01              s1 = u64 [a0 + 0x168]
  1710: 82 7b 70 01              a4 = u64 [a0 + 0x170]
  1714: 82 75 60 01              s0 = u64 [a0 + 0x160]
  1718: 33 07 02                 a0 = 0x2
  1721: 33 08                    a1 = 0
  1723: 33 09                    a2 = 0
  1725: 64 6a                    a3 = s1
  1727: 33 00 38                 ra = 0x38
  1730: 0a 64                    ecalli 100 // 'log'
  1732: 01                       fallthrough
      :                          @91 [@dyn 28]
  1733: 95 57 00 10 00 ff        a0 = s0 + 0xffffffffff001000
  1739: 82 18 60                 a1 = u64 [sp + 0x60]
  1742: ac 87 2e                 jump @97 if a0 <u a1
      :                          @92
  1745: 64 62                    t0 = s1
  1747: 33 07 20 00 03           a0 = 0x30020
  1752: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
  1758: 33 09 ff ef ff 00        a2 = 0xffefff
  1764: 01                       fallthrough
      :                          @93
  1765: 82 8a                    a3 = u64 [a1]
  1767: c8 97 0b                 a4 = a0 + a2
  1770: c9 ab 0b                 a4 = a4 - a3
  1773: ab 2b 0f                 jump @97 if a4 != t0
      :                          @94
  1776: c9 5a 0b                 a4 = a3 - s0
  1779: 01                       fallthrough
      :                          @95
  1780: 82 8c                    a5 = u64 [a1]
  1782: ab ac ef                 jump @93 if a5 != a3
      :                          @96
  1785: 7b 8b                    u64 [a1] = a4
  1787: 01                       fallthrough
      :                          @97
  1788: 95 19 b0 40 01           a2 = sp + 0x140b0
  1793: 82 97                    a0 = u64 [a2]
  1795: 7b 17 58                 u64 [sp + 0x58] = a0
  1798: 82 97 08                 a0 = u64 [a2 + 0x8]
  1801: 7b 17 50                 u64 [sp + 0x50] = a0
  1804: 82 97 10                 a0 = u64 [a2 + 0x10]
  1807: 7b 17 48                 u64 [sp + 0x48] = a0
  1810: 82 95 18                 s0 = u64 [a2 + 0x18]
  1813: 82 98 20                 a1 = u64 [a2 + 0x20]
  1816: 7b 18 40                 u64 [sp + 0x40] = a1
  1819: 80 97 40                 a0 = u32 [a2 + 0x40]
  1822: 82 96 28                 s1 = u64 [a2 + 0x28]
  1825: 49 11 60 ff 0f           u64 [sp + 96] = 0xfff
  1830: 95 59 ff 0f              a2 = s0 + 0xfff
  1834: 98 99 0c                 a2 = a2 >> 0xc
  1837: 33 08 10                 a1 = 0x10
  1840: 7b 17 78                 u64 [sp + 0x78] = a0
  1843: 0a 17                    ecalli 23 // 'zero'
  1845: 01                       fallthrough
      :                          @98
  1846: 51 07 17                 jump @100 if a0 == 0
      :                          @99
  1849: 33 0a 44 06 01           a3 = 0x10644
  1854: 33 07 02                 a0 = 0x2
  1857: 33 0b 3e                 a4 = 0x3e
  1860: 33 08                    a1 = 0
  1862: 33 09                    a2 = 0
  1864: 0a 64                    ecalli 100 // 'log'
  1866: 28 e0 00                 jump @113
      :                          @100
  1869: 7b 16 38                 u64 [sp + 0x38] = s1
  1872: 82 17 60                 a0 = u64 [sp + 0x60]
  1875: c8 67 07                 a0 = a0 + s1
  1878: 98 77 0c                 a0 = a0 >> 0xc
  1881: 82 19 58                 a2 = u64 [sp + 0x58]
  1884: c8 79 09                 a2 = a2 + a0
  1887: 7b 15 58                 u64 [sp + 0x58] = s0
  1890: 95 57 ff ff 00           a0 = s0 + 0xffff
  1895: 84 77 00 00 ff           a0 = a0 & 0xffffffffffff0000
  1900: 95 75 00 00 02           s0 = a0 + 0x20000
  1905: 98 58 0c                 a1 = s0 >> 0xc
  1908: 82 17 78                 a0 = u64 [sp + 0x78]
  1911: 0a 17                    ecalli 23 // 'zero'
  1913: 01                       fallthrough
      :                          @101
  1914: 51 07 17                 jump @103 if a0 == 0
      :                          @102
  1917: 33 0a 06 06 01           a3 = 0x10606
  1922: 33 07 02                 a0 = 0x2
  1925: 33 0b 3e                 a4 = 0x3e
  1928: 33 08                    a1 = 0
  1930: 33 09                    a2 = 0
  1932: 0a 64                    ecalli 100 // 'log'
  1934: 28 9c 00                 jump @113
      :                          @103
  1937: 82 16 60                 s1 = u64 [sp + 0x60]
  1940: 82 17 50                 a0 = u64 [sp + 0x50]
  1943: c8 76 06                 s1 = s1 + a0
  1946: 98 69 0c                 a2 = s1 >> 0xc
  1949: 84 67 00 f0              a0 = s1 & 0xfffffffffffff000
  1953: 14 08 00 00 fe fe 00 00 00 00 a1 = 0xfefe0000
  1963: c9 78 08                 a1 = a1 - a0
  1966: 98 88 0c                 a1 = a1 >> 0xc
  1969: 82 17 78                 a0 = u64 [sp + 0x78]
  1972: 0a 17                    ecalli 23 // 'zero'
  1974: 01                       fallthrough
      :                          @104
  1975: 51 07 16                 jump @106 if a0 == 0
      :                          @105
  1978: 33 0a ca 05 01           a3 = 0x105ca
  1983: 33 07 02                 a0 = 0x2
  1986: 33 0b 3c                 a4 = 0x3c
  1989: 33 08                    a1 = 0
  1991: 33 09                    a2 = 0
  1993: 0a 64                    ecalli 100 // 'log'
  1995: 28 5f                    jump @113
      :                          @106
  1997: 33 09 00 00 01           a2 = 0x10000
  2002: 82 17 78                 a0 = u64 [sp + 0x78]
  2005: 82 18 48                 a1 = u64 [sp + 0x48]
  2008: 82 1a 58                 a3 = u64 [sp + 0x58]
  2011: 0a 16                    ecalli 22 // 'poke'
  2013: 01                       fallthrough
      :                          @107
  2014: 51 07 16                 jump @109 if a0 == 0
      :                          @108
  2017: 33 0a 8c 05 01           a3 = 0x1058c
  2022: 33 07 02                 a0 = 0x2
  2025: 33 0b 3e                 a4 = 0x3e
  2028: 33 08                    a1 = 0
  2030: 33 09                    a2 = 0
  2032: 0a 64                    ecalli 100 // 'log'
  2034: 28 38                    jump @113
      :                          @109
  2036: 82 17 78                 a0 = u64 [sp + 0x78]
  2039: 82 18 40                 a1 = u64 [sp + 0x40]
  2042: 64 59                    a2 = s0
  2044: 82 1a 38                 a3 = u64 [sp + 0x38]
  2047: 0a 16                    ecalli 22 // 'poke'
  2049: 01                       fallthrough
      :                          @110
  2050: 51 07 16                 jump @112 if a0 == 0
      :                          @111
  2053: 33 0a 4e 05 01           a3 = 0x1054e
  2058: 33 07 02                 a0 = 0x2
  2061: 33 0b 3e                 a4 = 0x3e
  2064: 33 08                    a1 = 0
  2066: 33 09                    a2 = 0
  2068: 0a 64                    ecalli 100 // 'log'
  2070: 28 14                    jump @113
      :                          @112
  2072: 33 0a 20 05 01           a3 = 0x10520
  2077: 33 07 02                 a0 = 0x2
  2080: 33 0b 2e                 a4 = 0x2e
  2083: 33 08                    a1 = 0
  2085: 33 09                    a2 = 0
  2087: 0a 64                    ecalli 100 // 'log'
  2089: 01                       fallthrough
      :                          @113
  2090: 33 05 08 10              s0 = 0x1008
  2094: 95 17 f8 40 01           a0 = sp + 0x140f8
  2099: 33 08                    a1 = 0
  2101: 33 09 08 10              a2 = 0x1008
  2105: 50 10 3a 45 11           ra = 58, jump @371
      :                          @114 [@dyn 29]
  2110: 95 17 00 51 01           a0 = sp + 0x15100
  2115: 49 07                    u64 [a0 + 0] = 0
  2117: 95 17 f8 40 01           a0 = sp + 0x140f8
  2122: 33 0a 06                 a3 = 0x6
  2125: 33 08                    a1 = 0
  2127: 7b 15 30                 u64 [sp + 0x30] = s0
  2130: 64 59                    a2 = s0
  2132: 33 0b                    a4 = 0
  2134: 33 0c                    a5 = 0
  2136: 0a 12                    ecalli 18 // 'fetch'
  2138: 01                       fallthrough
      :                          @115
  2139: 95 18 00 51 01           a1 = sp + 0x15100
  2144: 7b 87 18                 u64 [a1 + 0x18] = a0
  2147: 33 0a                    a3 = 0
  2149: 51 17 ff e6 02           jump @142 if a0 == 4294967295
      :                          @116
  2154: 33 07 06                 a0 = 0x6
  2157: 7b 17 78                 u64 [sp + 0x78] = a0
  2160: 33 07 58 01 01           a0 = 0x10158
  2165: 7b 17 28                 u64 [sp + 0x28] = a0
  2168: 33 07 a0 01 01           a0 = 0x101a0
  2173: 7b 17 20                 u64 [sp + 0x20] = a0
  2176: 33 07 00 00 01           a0 = 0x10000
  2181: 7b 17 18                 u64 [sp + 0x18] = a0
  2184: 33 07 f8 01 01           a0 = 0x101f8
  2189: 7b 17 10                 u64 [sp + 0x10] = a0
  2192: 33 06 20 00 03           s1 = 0x30020
  2197: 49 11 60 01 10 00 ff     u64 [sp + 96] = 0xffffffffff001001
  2204: 28 3c                    jump @119
      :                          @117
  2206: 95 17 00 51 01           a0 = sp + 0x15100
  2211: 82 7b                    a4 = u64 [a0]
  2213: 95 bb 01                 a4 = a4 + 0x1
  2216: 7b 7b                    u64 [a0] = a4
  2218: 95 17 f8 40 01           a0 = sp + 0x140f8
  2223: 33 0a 06                 a3 = 0x6
  2226: 33 08                    a1 = 0
  2228: 82 19 30                 a2 = u64 [sp + 0x30]
  2231: 33 0c                    a5 = 0
  2233: 0a 12                    ecalli 18 // 'fetch'
  2235: 01                       fallthrough
      :                          @118
  2236: 82 18 48                 a1 = u64 [sp + 0x48]
  2239: 97 88 0c                 a1 = a1 << 0xc
  2242: 82 1a 50                 a3 = u64 [sp + 0x50]
  2245: 82 19 40                 a2 = u64 [sp + 0x40]
  2248: da 98 0a                 a3 = a1 if a2 == 0
  2251: 95 18 00 51 01           a1 = sp + 0x15100
  2256: 7b 87 18                 u64 [a1 + 0x18] = a0
  2259: 51 17 ff 78 02           jump @142 if a0 == 4294967295
      :                          @119
  2264: 7b 1a 50                 u64 [sp + 0x50] = a3
  2267: 7b 88 88 00              u64 [a1 + 0x88] = a1
  2271: 82 17 78                 a0 = u64 [sp + 0x78]
  2274: 7b 87 90 00              u64 [a1 + 0x90] = a0
  2278: 95 19 18 51 01           a2 = sp + 0x15118
  2283: 7b 89 98 00              u64 [a1 + 0x98] = a2
  2287: 7b 87 a0 00              u64 [a1 + 0xa0] = a0
  2291: 82 17 28                 a0 = u64 [sp + 0x28]
  2294: 7b 87 60 01              u64 [a1 + 0x160] = a0
  2298: 49 28 68 01 02           u64 [a1 + 360] = 0x2
  2303: 49 28 80 01              u64 [a1 + 384] = 0
  2307: 95 19 88 51 01           a2 = sp + 0x15188
  2312: 7b 89 70 01              u64 [a1 + 0x170] = a2
  2316: 49 28 78 01 02           u64 [a1 + 376] = 0x2
  2321: 95 17 20 51 01           a0 = sp + 0x15120
  2326: 95 18 60 52 01           a1 = sp + 0x15260
  2331: 50 10 3c 27 0d           ra = 60, jump @303
      :                          @120 [@dyn 30]
  2336: 95 17 00 51 01           a0 = sp + 0x15100
  2341: 82 75 28                 s0 = u64 [a0 + 0x28]
  2344: 82 7b 30                 a4 = u64 [a0 + 0x30]
  2347: 82 77 20                 a0 = u64 [a0 + 0x20]
  2350: 7b 17 58                 u64 [sp + 0x58] = a0
  2353: 33 07 02                 a0 = 0x2
  2356: 33 08                    a1 = 0
  2358: 33 09                    a2 = 0
  2360: 64 5a                    a3 = s0
  2362: 33 00 3e                 ra = 0x3e
  2365: 0a 64                    ecalli 100 // 'log'
  2367: 01                       fallthrough
      :                          @121 [@dyn 31]
  2368: 82 1c 58                 a5 = u64 [sp + 0x58]
  2371: 95 c7 00 10 00 ff        a0 = a5 + 0xffffffffff001000
  2377: 33 02 00 f0 ff 00        t0 = 0xfff000
  2383: 33 03 ff ef ff 00        t1 = 0xffefff
  2389: 82 18 60                 a1 = u64 [sp + 0x60]
  2392: ac 87 1d                 jump @126 if a0 <u a1
      :                          @122
  2395: c8 26 08                 a1 = s1 + t0
  2398: 82 87                    a0 = u64 [a1]
  2400: c8 36 09                 a2 = s1 + t1
  2403: c9 79 09                 a2 = a2 - a0
  2406: ab 59 0f                 jump @126 if a2 != s0
      :                          @123
  2409: c9 c7 09                 a2 = a0 - a5
  2412: 01                       fallthrough
      :                          @124
  2413: 82 8a                    a3 = u64 [a1]
  2415: ab 7a ec                 jump @122 if a3 != a0
      :                          @125
  2418: 7b 89                    u64 [a1] = a2
  2420: 01                       fallthrough
      :                          @126
  2421: 95 18 b0 40 01           a1 = sp + 0x140b0
  2426: 80 87 48                 a0 = u32 [a1 + 0x48]
  2429: 80 88 4c                 a1 = u32 [a1 + 0x4c]
  2432: 95 19 00 51 01           a2 = sp + 0x15100
  2437: 7b 97 08                 u64 [a2 + 0x8] = a0
  2440: 7b 98 10                 u64 [a2 + 0x10] = a1
  2443: 82 99                    a2 = u64 [a2]
  2445: 7b 19 40                 u64 [sp + 0x40] = a2
  2448: 33 09 01                 a2 = 0x1
  2451: 7b 18 48                 u64 [sp + 0x48] = a1
  2454: 7b 13 58                 u64 [sp + 0x58] = t1
  2457: 0a 17                    ecalli 23 // 'zero'
  2459: 95 19 00 51 01           a2 = sp + 0x15100
  2464: 7b 97 f8 00              u64 [a2 + 0xf8] = a0
  2468: 95 17 08 51 01           a0 = sp + 0x15108
  2473: 7b 97 60 01              u64 [a2 + 0x160] = a0
  2477: 82 17 78                 a0 = u64 [sp + 0x78]
  2480: 7b 97 68 01              u64 [a2 + 0x168] = a0
  2484: 95 18 10 51 01           a1 = sp + 0x15110
  2489: 7b 98 70 01              u64 [a2 + 0x170] = a1
  2493: 7b 97 78 01              u64 [a2 + 0x178] = a0
  2497: 95 18 f8 51 01           a1 = sp + 0x151f8
  2502: 7b 98 80 01              u64 [a2 + 0x180] = a1
  2506: 7b 97 88 01              u64 [a2 + 0x188] = a0
  2510: 82 17 20                 a0 = u64 [sp + 0x20]
  2513: 7b 97 88 00              u64 [a2 + 0x88] = a0
  2517: 49 29 90 00 03           u64 [a2 + 144] = 0x3
  2522: 49 29 a8 00              u64 [a2 + 168] = 0
  2526: 95 17 60 52 01           a0 = sp + 0x15260
  2531: 7b 97 98 00              u64 [a2 + 0x98] = a0
  2535: 49 29 a0 00 03           u64 [a2 + 160] = 0x3
  2540: 95 17 20 51 01           a0 = sp + 0x15120
  2545: 95 18 88 51 01           a1 = sp + 0x15188
  2550: 50 10 40 4c 0c           ra = 64, jump @303
      :                          @127 [@dyn 32]
  2555: 95 17 00 51 01           a0 = sp + 0x15100
  2560: 82 75 28                 s0 = u64 [a0 + 0x28]
  2563: 82 7b 30                 a4 = u64 [a0 + 0x30]
  2566: 82 77 20                 a0 = u64 [a0 + 0x20]
  2569: 7b 17 38                 u64 [sp + 0x38] = a0
  2572: 33 07 02                 a0 = 0x2
  2575: 33 08                    a1 = 0
  2577: 33 09                    a2 = 0
  2579: 64 5a                    a3 = s0
  2581: 33 00 42                 ra = 0x42
  2584: 0a 64                    ecalli 100 // 'log'
  2586: 01                       fallthrough
      :                          @128 [@dyn 33]
  2587: 64 53                    t1 = s0
  2589: 82 15 38                 s0 = u64 [sp + 0x38]
  2592: 82 1c 58                 a5 = u64 [sp + 0x58]
  2595: 33 02 00 f0 ff 00        t0 = 0xfff000
  2601: 95 57 00 10 00 ff        a0 = s0 + 0xffffffffff001000
  2607: 82 18 60                 a1 = u64 [sp + 0x60]
  2610: ac 87 1d                 jump @133 if a0 <u a1
      :                          @129
  2613: c8 26 08                 a1 = s1 + t0
  2616: 82 87                    a0 = u64 [a1]
  2618: c8 c6 09                 a2 = s1 + a5
  2621: c9 79 09                 a2 = a2 - a0
  2624: ab 39 0f                 jump @133 if a2 != t1
      :                          @130
  2627: c9 57 09                 a2 = a0 - s0
  2630: 01                       fallthrough
      :                          @131
  2631: 82 8a                    a3 = u64 [a1]
  2633: ab 7a ec                 jump @129 if a3 != a0
      :                          @132
  2636: 7b 89                    u64 [a1] = a2
  2638: 01                       fallthrough
      :                          @133
  2639: 95 1a 00 51 01           a3 = sp + 0x15100
  2644: 82 a9 10                 a2 = u64 [a3 + 0x10]
  2647: 82 a7 08                 a0 = u64 [a3 + 0x8]
  2650: 95 18 f8 40 01           a1 = sp + 0x140f8
  2655: 7b a8 00 01              u64 [a3 + 0x100] = a1
  2659: 97 99 0c                 a2 = a2 << 0xc
  2662: 7b a9 08 01              u64 [a3 + 0x108] = a2
  2666: 33 0a 00 10              a3 = 0x1000
  2670: 95 18 00 41 01           a1 = sp + 0x14100
  2675: 0a 16                    ecalli 22 // 'poke'
  2677: 95 19 00 51 01           a2 = sp + 0x15100
  2682: 7b 97 20 01              u64 [a2 + 0x120] = a0
  2686: 95 17 08 51 01           a0 = sp + 0x15108
  2691: 7b 97 60 01              u64 [a2 + 0x160] = a0
  2695: 82 17 78                 a0 = u64 [sp + 0x78]
  2698: 7b 97 68 01              u64 [a2 + 0x168] = a0
  2702: 95 18 00 52 01           a1 = sp + 0x15200
  2707: 7b 98 70 01              u64 [a2 + 0x170] = a1
  2711: 7b 97 78 01              u64 [a2 + 0x178] = a0
  2715: 95 18 08 52 01           a1 = sp + 0x15208
  2720: 7b 98 80 01              u64 [a2 + 0x180] = a1
  2724: 7b 97 88 01              u64 [a2 + 0x188] = a0
  2728: 82 18 18                 a1 = u64 [sp + 0x18]
  2731: 7b 98 90 01              u64 [a2 + 0x190] = a1
  2735: 7b 97 98 01              u64 [a2 + 0x198] = a0
  2739: 95 18 20 52 01           a1 = sp + 0x15220
  2744: 7b 98 a0 01              u64 [a2 + 0x1a0] = a1
  2748: 7b 97 a8 01              u64 [a2 + 0x1a8] = a0
  2752: 82 17 10                 a0 = u64 [sp + 0x10]
  2755: 7b 97 88 00              u64 [a2 + 0x88] = a0
  2759: 49 29 90 00 05           u64 [a2 + 144] = 0x5
  2764: 49 29 a8 00              u64 [a2 + 168] = 0
  2768: 95 17 60 52 01           a0 = sp + 0x15260
  2773: 7b 97 98 00              u64 [a2 + 0x98] = a0
  2777: 49 29 a0 00 05           u64 [a2 + 160] = 0x5
  2782: 95 17 20 51 01           a0 = sp + 0x15120
  2787: 95 18 88 51 01           a1 = sp + 0x15188
  2792: 50 10 44 5a 0b           ra = 68, jump @303
      :                          @134 [@dyn 34]
  2797: 95 17 00 51 01           a0 = sp + 0x15100
  2802: 82 75 28                 s0 = u64 [a0 + 0x28]
  2805: 82 7b 30                 a4 = u64 [a0 + 0x30]
  2808: 82 77 20                 a0 = u64 [a0 + 0x20]
  2811: 7b 17 38                 u64 [sp + 0x38] = a0
  2814: 33 07 02                 a0 = 0x2
  2817: 33 08                    a1 = 0
  2819: 33 09                    a2 = 0
  2821: 64 5a                    a3 = s0
  2823: 33 00 46                 ra = 0x46
  2826: 0a 64                    ecalli 100 // 'log'
  2828: 01                       fallthrough
      :                          @135 [@dyn 35]
  2829: 64 53                    t1 = s0
  2831: 82 15 38                 s0 = u64 [sp + 0x38]
  2834: 82 1c 58                 a5 = u64 [sp + 0x58]
  2837: 33 02 00 f0 ff 00        t0 = 0xfff000
  2843: 95 57 00 10 00 ff        a0 = s0 + 0xffffffffff001000
  2849: 82 18 60                 a1 = u64 [sp + 0x60]
  2852: ac 87 7a fd              jump @117 if a0 <u a1
      :                          @136
  2856: c8 26 08                 a1 = s1 + t0
  2859: 82 87                    a0 = u64 [a1]
  2861: c8 c6 09                 a2 = s1 + a5
  2864: c9 79 09                 a2 = a2 - a0
  2867: ab 39 6b fd              jump @117 if a2 != t1
      :                          @137
  2871: c9 57 09                 a2 = a0 - s0
  2874: 01                       fallthrough
      :                          @138
  2875: 82 8a                    a3 = u64 [a1]
  2877: ab 7a eb                 jump @136 if a3 != a0
      :                          @139
  2880: 7b 89                    u64 [a1] = a2
  2882: 33 0b                    a4 = 0
  2884: 01                       fallthrough
      :                          @140
  2885: ab 7a e3                 jump @136 if a3 != a0
      :                          @141
  2888: 28 56 fd                 jump @117
      :                          @142
  2891: 49 18 50                 u64 [a1 + 80] = 0
  2894: 49 18 48                 u64 [a1 + 72] = 0
  2897: 49 18 40                 u64 [a1 + 64] = 0
  2900: 49 18 38                 u64 [a1 + 56] = 0
  2903: 14 07 00 00 ff ff 00 00 00 00 a0 = 0xffff0000
  2913: 7b 87 20                 u64 [a1 + 0x20] = a0
  2916: 14 07 00 00 fe fe 00 00 00 00 a0 = 0xfefe0000
  2926: 7b 87 28                 u64 [a1 + 0x28] = a0
  2929: 82 87                    a0 = u64 [a1]
  2931: 49 18 30                 u64 [a1 + 48] = 0
  2934: 49 28 80 00              u64 [a1 + 128] = 0
  2938: 7b 8a 58                 u64 [a1 + 0x58] = a3
  2941: 97 77 0c                 a0 = a0 << 0xc
  2944: 7b 87 60                 u64 [a1 + 0x60] = a0
  2947: 82 17 08                 a0 = u64 [sp + 0x8]
  2950: 7b 87 68                 u64 [a1 + 0x68] = a0
  2953: 82 17 70                 a0 = u64 [sp + 0x70]
  2956: 7b 87 70                 u64 [a1 + 0x70] = a0
  2959: 82 17 68                 a0 = u64 [sp + 0x68]
  2962: 7b 87 78                 u64 [a1 + 0x78] = a0
  2965: 95 17 20 51 01           a0 = sp + 0x15120
  2970: 7b 87 20 01              u64 [a1 + 0x120] = a0
  2974: 33 07 0a                 a0 = 0xa
  2977: 7b 87 28 01              u64 [a1 + 0x128] = a0
  2981: 33 07 68 02 01           a0 = 0x10268
  2986: 7b 87 60 01              u64 [a1 + 0x160] = a0
  2990: 49 28 68 01 01           u64 [a1 + 360] = 0x1
  2995: 49 28 80 01              u64 [a1 + 384] = 0
  2999: 95 17 20 52 01           a0 = sp + 0x15220
  3004: 7b 87 70 01              u64 [a1 + 0x170] = a0
  3008: 49 28 78 01 01           u64 [a1 + 376] = 0x1
  3013: 95 17 88 51 01           a0 = sp + 0x15188
  3018: 95 15 00 51 01           s0 = sp + 0x15100
  3023: 95 18 60 52 01           a1 = sp + 0x15260
  3028: 50 10 48 6e 0a           ra = 72, jump @303
      :                          @143 [@dyn 36]
  3033: 82 56 90 00              s1 = u64 [s0 + 0x90]
  3037: 82 5b 98 00              a4 = u64 [s0 + 0x98]
  3041: 82 55 88 00              s0 = u64 [s0 + 0x88]
  3045: 33 07 02                 a0 = 0x2
  3048: 33 08                    a1 = 0
  3050: 33 09                    a2 = 0
  3052: 64 6a                    a3 = s1
  3054: 33 00 4a                 ra = 0x4a
  3057: 0a 64                    ecalli 100 // 'log'
  3059: 01                       fallthrough
      :                          @144 [@dyn 37]
  3060: 95 57 00 10 00 ff        a0 = s0 + 0xffffffffff001000
  3066: 49 11 78 01 10 00 ff     u64 [sp + 120] = 0xffffffffff001001
  3073: 53 47 01 10 00 ff 32     jump @150 if a0 <u 4278194177
      :                          @145
  3080: 64 62                    t0 = s1
  3082: 33 07 20 00 03           a0 = 0x30020
  3087: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
  3093: 33 09 ff ef ff 00        a2 = 0xffefff
  3099: 01                       fallthrough
      :                          @146
  3100: 82 8a                    a3 = u64 [a1]
  3102: c8 97 0b                 a4 = a0 + a2
  3105: c9 ab 0b                 a4 = a4 - a3
  3108: ab 2b 0f                 jump @150 if a4 != t0
      :                          @147
  3111: c9 5a 0b                 a4 = a3 - s0
  3114: 01                       fallthrough
      :                          @148
  3115: 82 8c                    a5 = u64 [a1]
  3117: ab ac ef                 jump @146 if a5 != a3
      :                          @149
  3120: 7b 8b                    u64 [a1] = a4
  3122: 01                       fallthrough
      :                          @150
  3123: 95 18 00 51 01           a1 = sp + 0x15100
  3128: 82 80 20                 ra = u64 [a1 + 0x20]
  3131: 82 87 28                 a0 = u64 [a1 + 0x28]
  3134: 7b 17 70                 u64 [sp + 0x70] = a0
  3137: 82 87 30                 a0 = u64 [a1 + 0x30]
  3140: 7b 17 68                 u64 [sp + 0x68] = a0
  3143: 82 8a 38                 a3 = u64 [a1 + 0x38]
  3146: 82 8b 40                 a4 = u64 [a1 + 0x40]
  3149: 82 8c 48                 a5 = u64 [a1 + 0x48]
  3152: 82 86 50                 s1 = u64 [a1 + 0x50]
  3155: 82 85 58                 s0 = u64 [a1 + 0x58]
  3158: 82 82 60                 t0 = u64 [a1 + 0x60]
  3161: 82 83 68                 t1 = u64 [a1 + 0x68]
  3164: 82 84 70                 t2 = u64 [a1 + 0x70]
  3167: 49 28 88 00 00 00 01     u64 [a1 + 136] = 0x10000
  3174: 82 87 78                 a0 = u64 [a1 + 0x78]
  3177: 7b 80 90 00              u64 [a1 + 0x90] = ra
  3181: 82 80 80 00              ra = u64 [a1 + 0x80]
  3185: 82 19 70                 a2 = u64 [sp + 0x70]
  3188: 7b 89 98 00              u64 [a1 + 0x98] = a2
  3192: 95 18 00 51 01           a1 = sp + 0x15100
  3197: 82 19 68                 a2 = u64 [sp + 0x68]
  3200: 7b 89 a0 00              u64 [a1 + 0xa0] = a2
  3204: 7b 8a a8 00              u64 [a1 + 0xa8] = a3
  3208: 7b 8b b0 00              u64 [a1 + 0xb0] = a4
  3212: 7b 8c b8 00              u64 [a1 + 0xb8] = a5
  3216: 7b 86 c0 00              u64 [a1 + 0xc0] = s1
  3220: 7b 85 c8 00              u64 [a1 + 0xc8] = s0
  3224: 7b 82 d0 00              u64 [a1 + 0xd0] = t0
  3228: 7b 83 d8 00              u64 [a1 + 0xd8] = t1
  3232: 7b 84 e0 00              u64 [a1 + 0xe0] = t2
  3236: 7b 87 e8 00              u64 [a1 + 0xe8] = a0
  3240: 7b 80 f0 00              u64 [a1 + 0xf0] = ra
  3244: 33 07 06                 a0 = 0x6
  3247: 7b 17 70                 u64 [sp + 0x70] = a0
  3250: 33 07 a0 02 01           a0 = 0x102a0
  3255: 7b 17 38                 u64 [sp + 0x38] = a0
  3258: 33 07 d8 02 01           a0 = 0x102d8
  3263: 7b 17 30                 u64 [sp + 0x30] = a0
  3266: 33 09 20 00 03           a2 = 0x30020
  3271: 7b 19 68                 u64 [sp + 0x68] = a2
  3274: 95 99 00 f0 ff 00        a2 = a2 + 0xfff000
  3280: 7b 19 60                 u64 [sp + 0x60] = a2
  3283: 49 11 58 ff ef ff 00     u64 [sp + 88] = 0xffefff
  3290: 01                       fallthrough
      :                          @151
  3291: 7b 88 08 01              u64 [a1 + 0x108] = a1
  3295: 82 17 70                 a0 = u64 [sp + 0x70]
  3298: 7b 87 10 01              u64 [a1 + 0x110] = a0
  3302: 82 17 38                 a0 = u64 [sp + 0x38]
  3305: 7b 87 60 01              u64 [a1 + 0x160] = a0
  3309: 49 28 68 01 01           u64 [a1 + 360] = 0x1
  3314: 49 28 80 01              u64 [a1 + 384] = 0
  3318: 95 19 08 52 01           a2 = sp + 0x15208
  3323: 7b 89 70 01              u64 [a1 + 0x170] = a2
  3327: 49 28 78 01 01           u64 [a1 + 376] = 0x1
  3332: 95 17 20 52 01           a0 = sp + 0x15220
  3337: 95 15 00 51 01           s0 = sp + 0x15100
  3342: 95 18 60 52 01           a1 = sp + 0x15260
  3347: 50 10 4c 2f 09           ra = 76, jump @303
      :                          @152 [@dyn 38]
  3352: 82 56 28 01              s1 = u64 [s0 + 0x128]
  3356: 82 5b 30 01              a4 = u64 [s0 + 0x130]
  3360: 82 55 20 01              s0 = u64 [s0 + 0x120]
  3364: 33 07 02                 a0 = 0x2
  3367: 33 08                    a1 = 0
  3369: 33 09                    a2 = 0
  3371: 64 6a                    a3 = s1
  3373: 33 00 4e                 ra = 0x4e
  3376: 0a 64                    ecalli 100 // 'log'
  3378: 01                       fallthrough
      :                          @153 [@dyn 39]
  3379: 64 62                    t0 = s1
  3381: 95 57 00 10 00 ff        a0 = s0 + 0xffffffffff001000
  3387: 82 18 78                 a1 = u64 [sp + 0x78]
  3390: 82 1b 68                 a4 = u64 [sp + 0x68]
  3393: 82 1c 60                 a5 = u64 [sp + 0x60]
  3396: 82 16 58                 s1 = u64 [sp + 0x58]
  3399: ac 87 1a                 jump @158 if a0 <u a1
      :                          @154
  3402: 82 c7                    a0 = u64 [a5]
  3404: c8 6b 08                 a1 = a4 + s1
  3407: c9 78 08                 a1 = a1 - a0
  3410: ab 28 0f                 jump @158 if a1 != t0
      :                          @155
  3413: c9 57 08                 a1 = a0 - s0
  3416: 01                       fallthrough
      :                          @156
  3417: 82 c9                    a2 = u64 [a5]
  3419: ab 79 ef                 jump @154 if a2 != a0
      :                          @157
  3422: 7b c8                    u64 [a5] = a1
  3424: 01                       fallthrough
      :                          @158
  3425: 95 17 b0 40 01           a0 = sp + 0x140b0
  3430: 82 77 40                 a0 = u64 [a0 + 0x40]
  3433: 95 18 88 51 01           a1 = sp + 0x15188
  3438: 0a 19                    ecalli 25 // 'invoke'
  3440: 95 16 00 51 01           s1 = sp + 0x15100
  3445: 7b 67 f8 00              u64 [s1 + 0xf8] = a0
  3449: 7b 68 00 01              u64 [s1 + 0x100] = a1
  3453: 95 17 f0 40 01           a0 = sp + 0x140f0
  3458: 7b 67 60 01              u64 [s1 + 0x160] = a0
  3462: 82 17 70                 a0 = u64 [sp + 0x70]
  3465: 7b 67 68 01              u64 [s1 + 0x168] = a0
  3469: 95 18 f8 51 01           a1 = sp + 0x151f8
  3474: 7b 68 70 01              u64 [s1 + 0x170] = a1
  3478: 7b 67 78 01              u64 [s1 + 0x178] = a0
  3482: 95 18 00 52 01           a1 = sp + 0x15200
  3487: 7b 68 80 01              u64 [s1 + 0x180] = a1
  3491: 7b 67 88 01              u64 [s1 + 0x188] = a0
  3495: 82 17 30                 a0 = u64 [sp + 0x30]
  3498: 7b 67 20 01              u64 [s1 + 0x120] = a0
  3502: 49 26 28 01 03           u64 [s1 + 296] = 0x3
  3507: 49 26 40 01              u64 [s1 + 320] = 0
  3511: 95 17 60 52 01           a0 = sp + 0x15260
  3516: 7b 67 30 01              u64 [s1 + 0x130] = a0
  3520: 49 26 38 01 03           u64 [s1 + 312] = 0x3
  3525: 95 17 08 52 01           a0 = sp + 0x15208
  3530: 95 18 20 52 01           a1 = sp + 0x15220
  3535: 50 10 50 73 08           ra = 80, jump @303
      :                          @159 [@dyn 40]
  3540: 82 65 10 01              s0 = u64 [s1 + 0x110]
  3544: 82 6b 18 01              a4 = u64 [s1 + 0x118]
  3548: 82 66 08 01              s1 = u64 [s1 + 0x108]
  3552: 33 07 02                 a0 = 0x2
  3555: 33 08                    a1 = 0
  3557: 33 09                    a2 = 0
  3559: 64 5a                    a3 = s0
  3561: 33 00 52                 ra = 0x52
  3564: 0a 64                    ecalli 100 // 'log'
  3566: 01                       fallthrough
      :                          @160 [@dyn 41]
  3567: 64 52                    t0 = s0
  3569: 64 65                    s0 = s1
  3571: 82 16 58                 s1 = u64 [sp + 0x58]
  3574: 82 1c 60                 a5 = u64 [sp + 0x60]
  3577: 82 1b 68                 a4 = u64 [sp + 0x68]
  3580: 95 57 00 10 00 ff        a0 = s0 + 0xffffffffff001000
  3586: 82 18 78                 a1 = u64 [sp + 0x78]
  3589: ac 87 1a                 jump @165 if a0 <u a1
      :                          @161
  3592: 82 c7                    a0 = u64 [a5]
  3594: c8 6b 08                 a1 = a4 + s1
  3597: c9 78 08                 a1 = a1 - a0
  3600: ab 28 0f                 jump @165 if a1 != t0
      :                          @162
  3603: c9 57 08                 a1 = a0 - s0
  3606: 01                       fallthrough
      :                          @163
  3607: 82 c9                    a2 = u64 [a5]
  3609: ab 79 ef                 jump @161 if a2 != a0
      :                          @164
  3612: 7b c8                    u64 [a5] = a1
  3614: 01                       fallthrough
      :                          @165
  3615: 95 18 00 51 01           a1 = sp + 0x15100
  3620: 82 87 f8 00              a0 = u64 [a1 + 0xf8]
  3624: 82 88 00 01              a1 = u64 [a1 + 0x100]
  3628: 85 77 03                 a0 = a0 ^ 0x3
  3631: 85 88 64                 a1 = a1 ^ 0x64
  3634: d4 87 05                 s0 = a0 | a1
  3637: 95 17 20 51 01           a0 = sp + 0x15120
  3642: 33 09 68                 a2 = 0x68
  3645: 95 18 90 51 01           a1 = sp + 0x15190
  3650: 50 10 54 8a 0a           ra = 84, jump @353
      :                          @166 [@dyn 42]
  3655: 95 17 00 51 01           a0 = sp + 0x15100
  3660: 82 78 58                 a1 = u64 [a0 + 0x58]
  3663: 7b 18 50                 u64 [sp + 0x50] = a1
  3666: 52 05 89 00              jump @169 if s0 != 0
      :                          @167
  3670: 82 78 60                 a1 = u64 [a0 + 0x60]
  3673: 7b 18 40                 u64 [sp + 0x40] = a1
  3676: 82 75 68                 s0 = u64 [a0 + 0x68]
  3679: 82 78 70                 a1 = u64 [a0 + 0x70]
  3682: 7b 18 48                 u64 [sp + 0x48] = a1
  3685: 82 76 78                 s1 = u64 [a0 + 0x78]
  3688: 49 27 58 01              u64 [a0 + 344] = 0
  3692: 49 27 50 01              u64 [a0 + 336] = 0
  3696: 49 27 48 01              u64 [a0 + 328] = 0
  3700: 49 27 40 01              u64 [a0 + 320] = 0
  3704: 49 27 38 01              u64 [a0 + 312] = 0
  3708: 49 27 30 01              u64 [a0 + 304] = 0
  3712: 49 27 28 01              u64 [a0 + 296] = 0
  3716: 49 27 20 01              u64 [a0 + 288] = 0
  3720: 95 17 60 52 01           a0 = sp + 0x15260
  3725: 33 09 00 01              a2 = 0x100
  3729: 33 08                    a1 = 0
  3731: 50 10 56 eb 0a           ra = 86, jump @371
      :                          @168 [@dyn 43]
  3736: 95 17 b0 40 01           a0 = sp + 0x140b0
  3741: 82 77 40                 a0 = u64 [a0 + 0x40]
  3744: 95 18 20 52 01           a1 = sp + 0x15220
  3749: 82 19 40                 a2 = u64 [sp + 0x40]
  3752: 64 5a                    a3 = s0
  3754: 0a 15                    ecalli 21 // 'peek'
  3756: 95 17 b0 40 01           a0 = sp + 0x140b0
  3761: 82 77 40                 a0 = u64 [a0 + 0x40]
  3764: 95 18 60 52 01           a1 = sp + 0x15260
  3769: 82 19 48                 a2 = u64 [sp + 0x48]
  3772: 64 6a                    a3 = s1
  3774: 0a 15                    ecalli 21 // 'peek'
  3776: 95 18 20 52 01           a1 = sp + 0x15220
  3781: 95 1a 60 52 01           a3 = sp + 0x15260
  3786: 82 17 50                 a0 = u64 [sp + 0x50]
  3789: 64 59                    a2 = s0
  3791: 64 6b                    a4 = s1
  3793: 0a 64                    ecalli 100 // 'log'
  3795: 95 18 00 51 01           a1 = sp + 0x15100
  3800: 28 03 fe                 jump @151
      :                          @169
  3803: 95 17 00 41 01           a0 = sp + 0x14100
  3808: 33 09 00 10              a2 = 0x1000
  3812: 33 06 00 10              s1 = 0x1000
  3816: 33 08                    a1 = 0
  3818: 50 10 58 94 0a           ra = 88, jump @371
      :                          @170 [@dyn 44]
  3823: 95 1a b0 40 01           a3 = sp + 0x140b0
  3828: 82 a7 40                 a0 = u64 [a3 + 0x40]
  3831: 7a a7 48                 u32 [a3 + 0x48] = a0
  3834: 82 15 50                 s0 = u64 [sp + 0x50]
  3837: 98 58 0c                 a1 = s0 >> 0xc
  3840: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  3843: 33 0a 00 10              a3 = 0x1000
  3847: 95 18 00 41 01           a1 = sp + 0x14100
  3852: 64 59                    a2 = s0
  3854: 0a 15                    ecalli 21 // 'peek'
  3856: 83 66 08                 i32 s1 = s1 + 0x8
  3859: 95 17 f8 40 01           a0 = sp + 0x140f8
  3864: 64 68                    a1 = s1
  3866: 0a 13                    ecalli 19 // 'export'
  3868: 33 09 00 10              a2 = 0x1000
  3872: 95 17 00 41 01           a0 = sp + 0x14100
  3877: 33 08                    a1 = 0
  3879: 50 10 5a 57 0a           ra = 90, jump @371
      :                          @171 [@dyn 45]
  3884: 95 1a b0 40 01           a3 = sp + 0x140b0
  3889: 82 a7 40                 a0 = u64 [a3 + 0x40]
  3892: 7a a7 48                 u32 [a3 + 0x48] = a0
  3895: 95 59 00 10              a2 = s0 + 0x1000
  3899: 98 98 0c                 a1 = a2 >> 0xc
  3902: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  3905: 33 0a 00 10              a3 = 0x1000
  3909: 95 18 00 41 01           a1 = sp + 0x14100
  3914: 0a 15                    ecalli 21 // 'peek'
  3916: 95 17 f8 40 01           a0 = sp + 0x140f8
  3921: 64 68                    a1 = s1
  3923: 0a 13                    ecalli 19 // 'export'
  3925: 33 09 00 10              a2 = 0x1000
  3929: 95 17 00 41 01           a0 = sp + 0x14100
  3934: 33 08                    a1 = 0
  3936: 50 10 5c 1e 0a           ra = 92, jump @371
      :                          @172 [@dyn 46]
  3941: 95 1a b0 40 01           a3 = sp + 0x140b0
  3946: 82 a7 40                 a0 = u64 [a3 + 0x40]
  3949: 7a a7 48                 u32 [a3 + 0x48] = a0
  3952: 95 59 00 20              a2 = s0 + 0x2000
  3956: 98 98 0c                 a1 = a2 >> 0xc
  3959: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  3962: 33 0a 00 10              a3 = 0x1000
  3966: 95 18 00 41 01           a1 = sp + 0x14100
  3971: 0a 15                    ecalli 21 // 'peek'
  3973: 95 17 f8 40 01           a0 = sp + 0x140f8
  3978: 64 68                    a1 = s1
  3980: 0a 13                    ecalli 19 // 'export'
  3982: 33 09 00 10              a2 = 0x1000
  3986: 95 17 00 41 01           a0 = sp + 0x14100
  3991: 33 08                    a1 = 0
  3993: 50 10 5e e5 09           ra = 94, jump @371
      :                          @173 [@dyn 47]
  3998: 95 18 b0 40 01           a1 = sp + 0x140b0
  4003: 82 87 40                 a0 = u64 [a1 + 0x40]
  4006: 7a 87 48                 u32 [a1 + 0x48] = a0
  4009: 95 1a b0 40 01           a3 = sp + 0x140b0
  4014: 95 59 00 30              a2 = s0 + 0x3000
  4018: 98 98 0c                 a1 = a2 >> 0xc
  4021: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  4024: 33 0a 00 10              a3 = 0x1000
  4028: 95 18 00 41 01           a1 = sp + 0x14100
  4033: 0a 15                    ecalli 21 // 'peek'
  4035: 95 17 f8 40 01           a0 = sp + 0x140f8
  4040: 64 68                    a1 = s1
  4042: 64 65                    s0 = s1
  4044: 0a 13                    ecalli 19 // 'export'
  4046: 33 09 00 10              a2 = 0x1000
  4050: 95 17 00 41 01           a0 = sp + 0x14100
  4055: 33 08                    a1 = 0
  4057: 50 10 60 a5 09           ra = 96, jump @371
      :                          @174 [@dyn 48]
  4062: 95 1a b0 40 01           a3 = sp + 0x140b0
  4067: 82 a7 40                 a0 = u64 [a3 + 0x40]
  4070: 7a a7 48                 u32 [a3 + 0x48] = a0
  4073: 82 16 50                 s1 = u64 [sp + 0x50]
  4076: 95 69 00 40              a2 = s1 + 0x4000
  4080: 98 98 0c                 a1 = a2 >> 0xc
  4083: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  4086: 33 0a 00 10              a3 = 0x1000
  4090: 95 18 00 41 01           a1 = sp + 0x14100
  4095: 0a 15                    ecalli 21 // 'peek'
  4097: 95 17 f8 40 01           a0 = sp + 0x140f8
  4102: 64 58                    a1 = s0
  4104: 0a 13                    ecalli 19 // 'export'
  4106: 33 09 00 10              a2 = 0x1000
  4110: 95 17 00 41 01           a0 = sp + 0x14100
  4115: 33 08                    a1 = 0
  4117: 50 10 62 69 09           ra = 98, jump @371
      :                          @175 [@dyn 49]
  4122: 95 18 b0 40 01           a1 = sp + 0x140b0
  4127: 82 87 40                 a0 = u64 [a1 + 0x40]
  4130: 7a 87 48                 u32 [a1 + 0x48] = a0
  4133: 95 1a b0 40 01           a3 = sp + 0x140b0
  4138: 95 69 00 50              a2 = s1 + 0x5000
  4142: 98 98 0c                 a1 = a2 >> 0xc
  4145: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  4148: 33 0a 00 10              a3 = 0x1000
  4152: 95 18 00 41 01           a1 = sp + 0x14100
  4157: 0a 15                    ecalli 21 // 'peek'
  4159: 95 17 f8 40 01           a0 = sp + 0x140f8
  4164: 7b 15 78                 u64 [sp + 0x78] = s0
  4167: 64 58                    a1 = s0
  4169: 0a 13                    ecalli 19 // 'export'
  4171: 33 09 00 10              a2 = 0x1000
  4175: 95 17 00 41 01           a0 = sp + 0x14100
  4180: 33 08                    a1 = 0
  4182: 50 10 64 28 09           ra = 100, jump @371
      :                          @176 [@dyn 50]
  4187: 95 1a b0 40 01           a3 = sp + 0x140b0
  4192: 82 a7 40                 a0 = u64 [a3 + 0x40]
  4195: 7a a7 48                 u32 [a3 + 0x48] = a0
  4198: 95 69 00 60              a2 = s1 + 0x6000
  4202: 98 98 0c                 a1 = a2 >> 0xc
  4205: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  4208: 33 0a 00 10              a3 = 0x1000
  4212: 95 18 00 41 01           a1 = sp + 0x14100
  4217: 0a 15                    ecalli 21 // 'peek'
  4219: 95 17 f8 40 01           a0 = sp + 0x140f8
  4224: 64 58                    a1 = s0
  4226: 0a 13                    ecalli 19 // 'export'
  4228: 33 09 00 10              a2 = 0x1000
  4232: 95 17 00 41 01           a0 = sp + 0x14100
  4237: 33 08                    a1 = 0
  4239: 50 10 66 ef 08           ra = 102, jump @371
      :                          @177 [@dyn 51]
  4244: 95 18 b0 40 01           a1 = sp + 0x140b0
  4249: 82 87 40                 a0 = u64 [a1 + 0x40]
  4252: 7a 87 48                 u32 [a1 + 0x48] = a0
  4255: 95 1a b0 40 01           a3 = sp + 0x140b0
  4260: 95 69 00 70              a2 = s1 + 0x7000
  4264: 98 98 0c                 a1 = a2 >> 0xc
  4267: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  4270: 33 0a 00 10              a3 = 0x1000
  4274: 95 18 00 41 01           a1 = sp + 0x14100
  4279: 0a 15                    ecalli 21 // 'peek'
  4281: 95 17 f8 40 01           a0 = sp + 0x140f8
  4286: 82 15 78                 s0 = u64 [sp + 0x78]
  4289: 64 58                    a1 = s0
  4291: 0a 13                    ecalli 19 // 'export'
  4293: 33 09 00 10              a2 = 0x1000
  4297: 95 17 00 41 01           a0 = sp + 0x14100
  4302: 33 08                    a1 = 0
  4304: 50 10 68 ae 08           ra = 104, jump @371
      :                          @178 [@dyn 52]
  4309: 95 1a b0 40 01           a3 = sp + 0x140b0
  4314: 82 a7 40                 a0 = u64 [a3 + 0x40]
  4317: 7a a7 48                 u32 [a3 + 0x48] = a0
  4320: 95 69 00 80 00           a2 = s1 + 0x8000
  4325: 98 98 0c                 a1 = a2 >> 0xc
  4328: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  4331: 95 16 b0 40 01           s1 = sp + 0x140b0
  4336: 33 0a 00 10              a3 = 0x1000
  4340: 95 18 00 41 01           a1 = sp + 0x14100
  4345: 0a 15                    ecalli 21 // 'peek'
  4347: 95 17 f8 40 01           a0 = sp + 0x140f8
  4352: 64 58                    a1 = s0
  4354: 0a 13                    ecalli 19 // 'export'
  4356: 82 67 40                 a0 = u64 [s1 + 0x40]
  4359: 0a 1a                    ecalli 26 // 'expunge'
  4361: 33 07 06                 a0 = 0x6
  4364: 95 18 00 51 01           a1 = sp + 0x15100
  4369: 7b 87 10 01              u64 [a1 + 0x110] = a0
  4373: 33 07 38 03 01           a0 = 0x10338
  4378: 7b 87 60 01              u64 [a1 + 0x160] = a0
  4382: 95 17 08 52 01           a0 = sp + 0x15208
  4387: 7b 87 70 01              u64 [a1 + 0x170] = a0
  4391: 49 28 68 01 01           u64 [a1 + 360] = 0x1
  4396: 49 28 78 01 01           u64 [a1 + 376] = 0x1
  4401: 7b 88 08 01              u64 [a1 + 0x108] = a1
  4405: 49 28 80 01              u64 [a1 + 384] = 0
  4409: 95 15 00 51 01           s0 = sp + 0x15100
  4414: 95 17 20 52 01           a0 = sp + 0x15220
  4419: 95 18 60 52 01           a1 = sp + 0x15260
  4424: 50 10 6a fa 04           ra = 106, jump @303
      :                          @179 [@dyn 53]
  4429: 82 56 28 01              s1 = u64 [s0 + 0x128]
  4433: 82 5b 30 01              a4 = u64 [s0 + 0x130]
  4437: 82 55 20 01              s0 = u64 [s0 + 0x120]
  4441: 33 07 02                 a0 = 0x2
  4444: 33 08                    a1 = 0
  4446: 33 09                    a2 = 0
  4448: 64 6a                    a3 = s1
  4450: 33 00 6c                 ra = 0x6c
  4453: 0a 64                    ecalli 100 // 'log'
  4455: 01                       fallthrough
      :                          @180 [@dyn 54]
  4456: 95 59 00 10 00 ff        a2 = s0 + 0xffffffffff001000
  4462: 53 49 01 10 00 ff fb f2  jump @72 if a2 <u 4278194177
      :                          @181
  4470: 64 62                    t0 = s1
  4472: 64 58                    a1 = s0
  4474: 33 07 20 00 03           a0 = 0x30020
  4479: 33 05 00 f0 ff 00        s0 = 0xfff000
  4485: 01                       fallthrough
      :                          @182
  4486: c8 57 0a                 a3 = a0 + s0
  4489: 82 a9                    a2 = u64 [a3]
  4491: 83 5b ff                 i32 a4 = s0 + 0xffffffffffffffff
  4494: c8 7b 0b                 a4 = a4 + a0
  4497: c9 9b 0b                 a4 = a4 - a2
  4500: ab 2b d5 f2              jump @72 if a4 != t0
      :                          @183
  4504: c9 89 0b                 a4 = a2 - a1
  4507: 01                       fallthrough
      :                          @184
  4508: 82 ac                    a5 = u64 [a3]
  4510: ab 9c e8                 jump @182 if a5 != a2
      :                          @185
  4513: 7b ab                    u64 [a3] = a4
  4515: 33 06                    s1 = 0
  4517: 01                       fallthrough
      :                          @186
  4518: ab 9c e0                 jump @182 if a5 != a2
      :                          @187
  4521: 28 c0 f2                 jump @72
      :                          @188
  4524: 00                       trap
      :                          @189 [export #1: 'accumulate']
  4525: 95 11 68 ff              sp = sp + 0xffffffffffffff68
  4529: 7b 10 90 00              u64 [sp + 0x90] = ra
  4533: 7b 15 88 00              u64 [sp + 0x88] = s0
  4537: 7b 16 80 00              u64 [sp + 0x80] = s1
  4541: 33 09 08                 a2 = 0x8
  4544: ac 98 03 02              jump @243 if a1 <u a2
      :                          @190
  4548: 51 17 fc 18 02           jump @244 if a0 == 4294967292
      :                          @191
  4553: 51 07 13 02              jump @244 if a0 == 0
      :                          @192
  4557: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
  4560: 95 75 08                 s0 = a0 + 0x8
  4563: 51 0a 45                 jump @202 if a3 == 0
      :                          @193
  4566: 7d 58                    a1 = i8 [s0]
  4568: 33 06 01                 s1 = 0x1
  4571: 59 08 40                 jump @203 if a1 >=s 0
      :                          @194
  4574: 84 89 ff 00              a2 = a1 & 0xff
  4578: 33 06 02                 s1 = 0x2
  4581: 53 29 c0 00 2d           jump @200 if a2 <u 192
      :                          @195
  4586: 33 06 03                 s1 = 0x3
  4589: 53 29 e0 00 25           jump @200 if a2 <u 224
      :                          @196
  4594: 33 06 04                 s1 = 0x4
  4597: 53 29 f0 00 1d           jump @200 if a2 <u 240
      :                          @197
  4602: 33 06 05                 s1 = 0x5
  4605: 53 29 f8 00 15           jump @200 if a2 <u 248
      :                          @198
  4610: 33 06 06                 s1 = 0x6
  4613: 53 29 fc 00 0d           jump @200 if a2 <u 252
      :                          @199
  4618: 88 98 fe 00              a1 = a2 <u 0xfe
  4622: 9a 86 08                 s1 = 0x8 - a1
  4625: 01                       fallthrough
      :                          @200
  4626: ae 6a 09                 jump @203 if a3 >=u s1
      :                          @201
  4629: 28 ae 01                 jump @243
      :                          @202
  4632: 33 06                    s1 = 0
  4634: 01                       fallthrough
      :                          @203
  4635: 7b 16                    u64 [sp] = s1
  4637: 64 57                    a0 = s0
  4639: 64 68                    a1 = s1
  4641: 64 a6                    s1 = a3
  4643: 50 10 6e 09 11           ra = 110, jump @557
      :                          @204 [@dyn 55]
  4648: 82 1a                    a3 = u64 [sp]
  4650: 51 07 99 01              jump @243 if a0 == 0
      :                          @205
  4654: e4 a6 07                 a0 = maxu(s1, a3)
  4657: c9 a7 07                 a0 = a0 - a3
  4660: 53 17 60 8f 01           jump @243 if a0 <u 96
      :                          @206
  4665: c8 5a 08                 a1 = a3 + s0
  4668: 95 76 a0                 s1 = a0 + 0xffffffffffffffa0
  4671: 95 87 60                 a0 = a1 + 0x60
  4674: 7b 17                    u64 [sp] = a0
  4676: 51 06 4c                 jump @217 if s1 == 0
      :                          @207
  4679: 7d 78                    a1 = i8 [a0]
  4681: 33 05 01                 s0 = 0x1
  4684: 59 08 37                 jump @214 if a1 >=s 0
      :                          @208
  4687: 84 89 ff 00              a2 = a1 & 0xff
  4691: 33 05 02                 s0 = 0x2
  4694: 53 29 c0 00 2d           jump @214 if a2 <u 192
      :                          @209
  4699: 33 05 03                 s0 = 0x3
  4702: 53 29 e0 00 25           jump @214 if a2 <u 224
      :                          @210
  4707: 33 05 04                 s0 = 0x4
  4710: 53 29 f0 00 1d           jump @214 if a2 <u 240
      :                          @211
  4715: 33 05 05                 s0 = 0x5
  4718: 53 29 f8 00 15           jump @214 if a2 <u 248
      :                          @212
  4723: 33 05 06                 s0 = 0x6
  4726: 53 29 fc 00 0d           jump @214 if a2 <u 252
      :                          @213
  4731: 88 98 fe 00              a1 = a2 <u 0xfe
  4735: 9a 85 08                 s0 = 0x8 - a1
  4738: 01                       fallthrough
      :                          @214
  4739: ac 56 5a 01              jump @245 if s1 <u s0
      :                          @215
  4743: 64 58                    a1 = s0
  4745: 50 10 70 a3 10           ra = 112, jump @557
      :                          @216 [@dyn 56]
  4750: 28 07                    jump @218
      :                          @217
  4752: 33 05                    s0 = 0
  4754: 33 07                    a0 = 0
  4756: 01                       fallthrough
      :                          @218
  4757: e4 56 08                 a1 = maxu(s1, s0)
  4760: c9 58 08                 a1 = a1 - s0
  4763: e4 78 08                 a1 = maxu(a1, a0)
  4766: c9 78 08                 a1 = a1 - a0
  4769: 33 09 20                 a2 = 0x20
  4772: ac 98 1f 01              jump @243 if a1 <u a2
      :                          @219
  4776: 82 19                    a2 = u64 [sp]
  4778: c8 95 05                 s0 = s0 + a2
  4781: c8 57 07                 a0 = a0 + s0
  4784: 51 17 e0 2c 01           jump @244 if a0 == 4294967264
      :                          @220
  4789: 33 09 29                 a2 = 0x29
  4792: ac 98 0b 01              jump @243 if a1 <u a2
      :                          @221
  4796: 7c 79 28                 a2 = u8 [a0 + 0x28]
  4799: 52 09 04 01              jump @243 if a2 != 0
      :                          @222
  4803: 95 86 d7                 s1 = a1 + 0xffffffffffffffd7
  4806: 95 77 29                 a0 = a0 + 0x29
  4809: 7b 17                    u64 [sp] = a0
  4811: 51 06 4c                 jump @233 if s1 == 0
      :                          @223
  4814: 7d 78                    a1 = i8 [a0]
  4816: 33 05 01                 s0 = 0x1
  4819: 59 08 37                 jump @230 if a1 >=s 0
      :                          @224
  4822: 84 89 ff 00              a2 = a1 & 0xff
  4826: 33 05 02                 s0 = 0x2
  4829: 53 29 c0 00 2d           jump @230 if a2 <u 192
      :                          @225
  4834: 33 05 03                 s0 = 0x3
  4837: 53 29 e0 00 25           jump @230 if a2 <u 224
      :                          @226
  4842: 33 05 04                 s0 = 0x4
  4845: 53 29 f0 00 1d           jump @230 if a2 <u 240
      :                          @227
  4850: 33 05 05                 s0 = 0x5
  4853: 53 29 f8 00 15           jump @230 if a2 <u 248
      :                          @228
  4858: 33 05 06                 s0 = 0x6
  4861: 53 29 fc 00 0d           jump @230 if a2 <u 252
      :                          @229
  4866: 88 98 fe 00              a1 = a2 <u 0xfe
  4870: 9a 85 08                 s0 = 0x8 - a1
  4873: 01                       fallthrough
      :                          @230
  4874: ac 56 d3 00              jump @245 if s1 <u s0
      :                          @231
  4878: 64 58                    a1 = s0
  4880: 50 10 72 1c 10           ra = 114, jump @557
      :                          @232 [@dyn 57]
  4885: 28 07                    jump @234
      :                          @233
  4887: 33 05                    s0 = 0
  4889: 33 07                    a0 = 0
  4891: 01                       fallthrough
      :                          @234
  4892: e4 56 08                 a1 = maxu(s1, s0)
  4895: c9 58 08                 a1 = a1 - s0
  4898: e6 78 07                 a0 = minu(a1, a0)
  4901: 52 17 24 9e 00           jump @243 if a0 != 36
      :                          @235
  4906: 82 17                    a0 = u64 [sp]
  4908: c8 57 07                 a0 = a0 + s0
  4911: 7b 17 08                 u64 [sp + 0x8] = a0
  4914: 80 78 20                 a1 = u32 [a0 + 0x20]
  4917: 7b 18 10                 u64 [sp + 0x10] = a1
  4920: 0a 0e                    ecalli 14 // 'solicit'
  4922: 95 17 08                 a0 = sp + 0x8
  4925: 7b 17 60                 u64 [sp + 0x60] = a0
  4928: 33 07 06                 a0 = 0x6
  4931: 7b 17 68                 u64 [sp + 0x68] = a0
  4934: 95 18 10                 a1 = sp + 0x10
  4937: 7b 18 70                 u64 [sp + 0x70] = a1
  4940: 7b 17 78                 u64 [sp + 0x78] = a0
  4943: 33 07 b8 03 01           a0 = 0x103b8
  4948: 7b 17 30                 u64 [sp + 0x30] = a0
  4951: 49 11 38 02              u64 [sp + 56] = 0x2
  4955: 49 11 50                 u64 [sp + 80] = 0
  4958: 95 18 60                 a1 = sp + 0x60
  4961: 7b 18 40                 u64 [sp + 0x40] = a1
  4964: 49 11 48 02              u64 [sp + 72] = 0x2
  4968: 95 17 18                 a0 = sp + 0x18
  4971: 95 18 30                 a1 = sp + 0x30
  4974: 50 10 74 d4 02           ra = 116, jump @303
      :                          @236 [@dyn 58]
  4979: 82 16 20                 s1 = u64 [sp + 0x20]
  4982: 82 1b 28                 a4 = u64 [sp + 0x28]
  4985: 82 15 18                 s0 = u64 [sp + 0x18]
  4988: 33 07 02                 a0 = 0x2
  4991: 33 08                    a1 = 0
  4993: 33 09                    a2 = 0
  4995: 64 6a                    a3 = s1
  4997: 33 00 76                 ra = 0x76
  5000: 0a 64                    ecalli 100 // 'log'
  5002: 01                       fallthrough
      :                          @237 [@dyn 59]
  5003: 95 58 00 10 00 ff        a1 = s0 + 0xffffffffff001000
  5009: 53 48 01 10 00 ff 32     jump @243 if a1 <u 4278194177
      :                          @238
  5016: 64 62                    t0 = s1
  5018: 33 07 20 00 03           a0 = 0x30020
  5023: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
  5029: 33 09 ff ef ff 00        a2 = 0xffefff
  5035: 01                       fallthrough
      :                          @239
  5036: 82 8a                    a3 = u64 [a1]
  5038: c8 97 0b                 a4 = a0 + a2
  5041: c9 ab 0b                 a4 = a4 - a3
  5044: ab 2b 0f                 jump @243 if a4 != t0
      :                          @240
  5047: c9 5a 0b                 a4 = a3 - s0
  5050: 01                       fallthrough
      :                          @241
  5051: 82 8c                    a5 = u64 [a1]
  5053: ab ac ef                 jump @239 if a5 != a3
      :                          @242
  5056: 7b 8b                    u64 [a1] = a4
  5058: 01                       fallthrough
      :                          @243
  5059: 33 07 00 00 01           a0 = 0x10000
  5064: 33 08                    a1 = 0
  5066: 82 10 90 00              ra = u64 [sp + 0x90]
  5070: 82 15 88 00              s0 = u64 [sp + 0x88]
  5074: 82 16 80 00              s1 = u64 [sp + 0x80]
  5078: 95 11 98 00              sp = sp + 0x98
  5082: 32 00                    ret
      :                          @244
  5084: 00                       trap
      :                          @245
  5085: 00                       trap
      :                          @246 [export #2: 'on_transfer']
  5086: 33 07 00 00 01           a0 = 0x10000
  5091: 33 08                    a1 = 0
  5093: 32 00                    ret
      :                          @247
  5095: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  5098: 7b 10 40                 u64 [sp + 0x40] = ra
  5101: 7b 15 38                 u64 [sp + 0x38] = s0
  5104: 7b 16 30                 u64 [sp + 0x30] = s1
  5107: c8 89 09                 a2 = a2 + a1
  5110: ac 89 52                 jump @255 if a2 <u a1
      :                          @248
  5113: 64 75                    s0 = a0
  5115: 82 77                    a0 = u64 [a0]
  5117: 97 78 01                 a1 = a0 << 0x1
  5120: 33 0a 08                 a3 = 0x8
  5123: e4 a9 09                 a2 = maxu(a2, a3)
  5126: e4 98 06                 s1 = maxu(a1, a2)
  5129: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  5132: 98 88 3f                 a1 = a1 >> 0x3f
  5135: 51 07 12                 jump @250 if a0 == 0
      :                          @249
  5138: 82 59 08                 a2 = u64 [s0 + 0x8]
  5141: 7b 19 18                 u64 [sp + 0x18] = a2
  5144: 49 11 20 01              u64 [sp + 32] = 0x1
  5148: 7b 17 28                 u64 [sp + 0x28] = a0
  5151: 28 06                    jump @251
      :                          @250
  5153: 49 11 20                 u64 [sp + 32] = 0
  5156: 01                       fallthrough
      :                          @251
  5157: 64 17                    a0 = sp
  5159: 95 1a 18                 a3 = sp + 0x18
  5162: 64 69                    a2 = s1
  5164: 50 10 78 32              ra = 120, jump @259
      :                          @252 [@dyn 60]
  5168: 82 18                    a1 = u64 [sp]
  5170: 82 17 08                 a0 = u64 [sp + 0x8]
  5173: 51 08 14                 jump @256 if a1 == 0
      :                          @253
  5176: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  5186: aa 87 0d                 jump @257 if a0 == a1
      :                          @254
  5189: 52 07 18                 jump @258 if a0 != 0
      :                          @255
  5192: 00                       trap
      :                          @256
  5193: 7b 57 08                 u64 [s0 + 0x8] = a0
  5196: 7b 56                    u64 [s0] = s1
  5198: 01                       fallthrough
      :                          @257
  5199: 82 10 40                 ra = u64 [sp + 0x40]
  5202: 82 15 38                 s0 = u64 [sp + 0x38]
  5205: 82 16 30                 s1 = u64 [sp + 0x30]
  5208: 95 11 48                 sp = sp + 0x48
  5211: 32 00                    ret
      :                          @258
  5213: 00                       trap
      :                          @259
  5214: 64 93                    t1 = a2
  5216: 64 72                    t0 = a0
  5218: 51 08 8f 00              jump @269 if a1 == 0
      :                          @260
  5222: 95 11 c0                 sp = sp + 0xffffffffffffffc0
  5225: 7b 10 38                 u64 [sp + 0x38] = ra
  5228: 7b 15 30                 u64 [sp + 0x30] = s0
  5231: 7b 16 28                 u64 [sp + 0x28] = s1
  5234: 82 a7 08                 a0 = u64 [a3 + 0x8]
  5237: 51 07 89 00              jump @270 if a0 == 0
      :                          @261
  5241: 82 a9 10                 a2 = u64 [a3 + 0x10]
  5244: 51 09 ba 00              jump @277 if a2 == 0
      :                          @262
  5248: 82 a8                    a1 = u64 [a3]
  5250: 33 06 20 00 03           s1 = 0x30020
  5255: 95 66 00 f0 ff 00        s1 = s1 + 0xfff000
  5261: 33 05 ff ef ff 00        s0 = 0xffefff
  5267: 01                       fallthrough
      :                          @263
  5268: 82 6a                    a3 = u64 [s1]
  5270: c8 3a 07                 a0 = a3 + t1
  5273: ac a7 e0 00              jump @283 if a0 <u a3
      :                          @264
  5277: 95 7b 01                 a4 = a0 + 0x1
  5280: 88 bc 01                 a5 = a4 <u 0x1
  5283: d8 b5 0b                 a4 = s0 <u a4
  5286: d4 cb 0b                 a4 = a4 | a5
  5289: 52 0b d0 00              jump @283 if a4 != 0
      :                          @265
  5293: 82 6b                    a4 = u64 [s1]
  5295: ab ab e5                 jump @263 if a4 != a3
      :                          @266
  5298: 7b 67                    u64 [s1] = a0
  5300: 33 0c                    a5 = 0
  5302: 7b 13 10                 u64 [sp + 0x10] = t1
  5305: 7b 12 20                 u64 [sp + 0x20] = t0
  5308: 33 05 ff ef ff 00        s0 = 0xffefff
  5314: 33 0a 20 00 03           a3 = 0x30020
  5319: 7b 1a                    u64 [sp] = a3
  5321: c8 5a 0a                 a3 = a3 + s0
  5324: c9 7a 07                 a0 = a3 - a0
  5327: 7b 17 18                 u64 [sp + 0x18] = a0
  5330: 7b 18 08                 u64 [sp + 0x8] = a1
  5333: 64 96                    s1 = a2
  5335: 50 10 7a f5 03           ra = 122, jump @353
      :                          @267 [@dyn 61]
  5340: ae 65 a5 00              jump @284 if s0 >=u s1
      :                          @268
  5344: 82 12 20                 t0 = u64 [sp + 0x20]
  5347: 82 13 10                 t1 = u64 [sp + 0x10]
  5350: 82 18 18                 a1 = u64 [sp + 0x18]
  5353: 33 07                    a0 = 0
  5355: 7b 28 08                 u64 [t0 + 0x8] = a1
  5358: 28 c9 00                 jump @290
      :                          @269
  5361: 49 12 08                 u64 [t0 + 8] = 0
  5364: 33 07 01                 a0 = 0x1
  5367: 7b 23 10                 u64 [t0 + 0x10] = t1
  5370: 7b 27                    u64 [t0] = a0
  5372: 32 00                    ret
      :                          @270
  5374: 33 07 20 00 03           a0 = 0x30020
  5379: 95 77 00 f0 ff 00        a0 = a0 + 0xfff000
  5385: 33 09 ff ef ff 00        a2 = 0xffefff
  5391: 01                       fallthrough
      :                          @271
  5392: 82 7a                    a3 = u64 [a0]
  5394: c8 3a 08                 a1 = a3 + t1
  5397: ac a8 64                 jump @283 if a1 <u a3
      :                          @272
  5400: 95 8b 01                 a4 = a1 + 0x1
  5403: 88 bc 01                 a5 = a4 <u 0x1
  5406: d8 b9 0b                 a4 = a2 <u a4
  5409: d4 cb 0b                 a4 = a4 | a5
  5412: 52 0b 55                 jump @283 if a4 != 0
      :                          @273
  5415: 82 7b                    a4 = u64 [a0]
  5417: ab ab e7                 jump @271 if a4 != a3
      :                          @274
  5420: 7b 78                    u64 [a0] = a1
  5422: 33 0c                    a5 = 0
  5424: 01                       fallthrough
      :                          @275
  5425: ab ab df                 jump @271 if a4 != a3
      :                          @276
  5428: 28 35                    jump @282
      :                          @277
  5430: 33 07 20 00 03           a0 = 0x30020
  5435: 95 77 00 f0 ff 00        a0 = a0 + 0xfff000
  5441: 33 09 ff ef ff 00        a2 = 0xffefff
  5447: 01                       fallthrough
      :                          @278
  5448: 82 7a                    a3 = u64 [a0]
  5450: c8 3a 08                 a1 = a3 + t1
  5453: ac a8 2c                 jump @283 if a1 <u a3
      :                          @279
  5456: 95 8b 01                 a4 = a1 + 0x1
  5459: 88 bc 01                 a5 = a4 <u 0x1
  5462: d8 b9 0b                 a4 = a2 <u a4
  5465: d4 cb 0b                 a4 = a4 | a5
  5468: 52 0b 1d                 jump @283 if a4 != 0
      :                          @280
  5471: 82 7b                    a4 = u64 [a0]
  5473: ab ab e7                 jump @278 if a4 != a3
      :                          @281
  5476: 7b 78                    u64 [a0] = a1
  5478: 33 0c                    a5 = 0
  5480: 01                       fallthrough
      :                          @282
  5481: 33 07 1f f0 02 01        a0 = 0x102f01f
  5487: c9 87 08                 a1 = a0 - a1
  5490: 33 07                    a0 = 0
  5492: 7b 28 08                 u64 [t0 + 0x8] = a1
  5495: 28 40                    jump @290
      :                          @283
  5497: 33 07 01                 a0 = 0x1
  5500: 7b 27 08                 u64 [t0 + 0x8] = a0
  5503: 28 38                    jump @290
      :                          @284
  5505: 64 6c                    a5 = s1
  5507: 82 16                    s1 = u64 [sp]
  5509: 95 67 00 f0 ff 00        a0 = s1 + 0xfff000
  5515: 82 12 20                 t0 = u64 [sp + 0x20]
  5518: 82 14 08                 t2 = u64 [sp + 0x8]
  5521: 82 13 10                 t1 = u64 [sp + 0x10]
  5524: 01                       fallthrough
      :                          @285
  5525: 82 78                    a1 = u64 [a0]
  5527: c8 56 09                 a2 = s1 + s0
  5530: c9 89 09                 a2 = a2 - a1
  5533: ab 49 11                 jump @289 if a2 != t2
      :                          @286
  5536: c9 c8 09                 a2 = a1 - a5
  5539: 01                       fallthrough
      :                          @287
  5540: 82 7a                    a3 = u64 [a0]
  5542: ab 8a ef                 jump @285 if a3 != a1
      :                          @288
  5545: 7b 79                    u64 [a0] = a2
  5547: 33 0b                    a4 = 0
  5549: 01                       fallthrough
      :                          @289
  5550: 82 18 18                 a1 = u64 [sp + 0x18]
  5553: 33 07                    a0 = 0
  5555: 7b 28 08                 u64 [t0 + 0x8] = a1
  5558: 01                       fallthrough
      :                          @290
  5559: 82 10 38                 ra = u64 [sp + 0x38]
  5562: 82 15 30                 s0 = u64 [sp + 0x30]
  5565: 82 16 28                 s1 = u64 [sp + 0x28]
  5568: 95 11 40                 sp = sp + 0x40
  5571: 7b 23 10                 u64 [t0 + 0x10] = t1
  5574: 7b 27                    u64 [t0] = a0
  5576: 32 00                    ret
      :                          @291
  5578: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  5581: 7b 10 40                 u64 [sp + 0x40] = ra
  5584: 7b 15 38                 u64 [sp + 0x38] = s0
  5587: 7b 16 30                 u64 [sp + 0x30] = s1
  5590: 95 88 01                 a1 = a1 + 0x1
  5593: 51 08 53                 jump @299 if a1 == 0
      :                          @292
  5596: 64 75                    s0 = a0
  5598: 82 77                    a0 = u64 [a0]
  5600: 97 79 01                 a2 = a0 << 0x1
  5603: 33 0a 08                 a3 = 0x8
  5606: e4 a8 08                 a1 = maxu(a1, a3)
  5609: e4 89 06                 s1 = maxu(a2, a1)
  5612: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  5615: 98 88 3f                 a1 = a1 >> 0x3f
  5618: 51 07 12                 jump @294 if a0 == 0
      :                          @293
  5621: 82 59 08                 a2 = u64 [s0 + 0x8]
  5624: 7b 19 18                 u64 [sp + 0x18] = a2
  5627: 49 11 20 01              u64 [sp + 32] = 0x1
  5631: 7b 17 28                 u64 [sp + 0x28] = a0
  5634: 28 06                    jump @295
      :                          @294
  5636: 49 11 20                 u64 [sp + 32] = 0
  5639: 01                       fallthrough
      :                          @295
  5640: 64 17                    a0 = sp
  5642: 95 1a 18                 a3 = sp + 0x18
  5645: 64 69                    a2 = s1
  5647: 50 10 7c 4f fe           ra = 124, jump @259
      :                          @296 [@dyn 62]
  5652: 82 18                    a1 = u64 [sp]
  5654: 82 17 08                 a0 = u64 [sp + 0x8]
  5657: 51 08 14                 jump @300 if a1 == 0
      :                          @297
  5660: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  5670: aa 87 0d                 jump @301 if a0 == a1
      :                          @298
  5673: 52 07 18                 jump @302 if a0 != 0
      :                          @299
  5676: 00                       trap
      :                          @300
  5677: 7b 57 08                 u64 [s0 + 0x8] = a0
  5680: 7b 56                    u64 [s0] = s1
  5682: 01                       fallthrough
      :                          @301
  5683: 82 10 40                 ra = u64 [sp + 0x40]
  5686: 82 15 38                 s0 = u64 [sp + 0x38]
  5689: 82 16 30                 s1 = u64 [sp + 0x30]
  5692: 95 11 48                 sp = sp + 0x48
  5695: 32 00                    ret
      :                          @302
  5697: 00                       trap
      :                          @303
  5698: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  5701: 7b 10 30                 u64 [sp + 0x30] = ra
  5704: 7b 15 28                 u64 [sp + 0x28] = s0
  5707: 7b 16 20                 u64 [sp + 0x20] = s1
  5710: 64 89                    a2 = a1
  5712: 82 8a 08                 a3 = u64 [a1 + 0x8]
  5715: 64 75                    s0 = a0
  5717: 51 0a 35                 jump @308 if a3 == 0
      :                          @304
  5720: 82 98                    a1 = u64 [a2]
  5722: 33 07                    a0 = 0
  5724: 95 8b 08                 a4 = a1 + 0x8
  5727: 01                       fallthrough
      :                          @305
  5728: 82 bc                    a5 = u64 [a4]
  5730: c8 c7 07                 a0 = a0 + a5
  5733: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  5736: 95 bb 10                 a4 = a4 + 0x10
  5739: 52 0a f5                 jump @305 if a3 != 0
      :                          @306
  5742: 82 9a 18                 a3 = u64 [a2 + 0x18]
  5745: 51 0a 24                 jump @310 if a3 == 0
      :                          @307
  5748: 82 88 08                 a1 = u64 [a1 + 0x8]
  5751: 8e 88                    a1 = a1 >u 0
  5753: 88 7a 10                 a3 = a0 <u 0x10
  5756: 85 aa 01                 a3 = a3 ^ 0x1
  5759: d4 a8 08                 a1 = a1 | a3
  5762: 89 7a                    a3 = a0 <s 0
  5764: e0 a8 08                 a1 = a1 & ~a3
  5767: 52 08 0a                 jump @309 if a1 != 0
      :                          @308
  5770: 33 07                    a0 = 0
  5772: 33 08 01                 a1 = 0x1
  5775: 28 4f                    jump @318
      :                          @309
  5777: 97 77 01                 a0 = a0 << 0x1
  5780: 01                       fallthrough
      :                          @310
  5781: 51 07 45                 jump @317 if a0 == 0
      :                          @311
  5784: 57 07 7d                 jump @323 if a0 <s 0
      :                          @312
  5787: 64 52                    t0 = s0
  5789: 33 08 20 00 03           a1 = 0x30020
  5794: 95 88 00 f0 ff 00        a1 = a1 + 0xfff000
  5800: 33 0b ff ef ff 00        a4 = 0xffefff
  5806: 01                       fallthrough
      :                          @313
  5807: 82 8c                    a5 = u64 [a1]
  5809: c8 7c 0a                 a3 = a5 + a0
  5812: ac ca 5f                 jump @321 if a3 <u a5
      :                          @314
  5815: 95 a5 01                 s0 = a3 + 0x1
  5818: 88 56 01                 s1 = s0 <u 0x1
  5821: d8 5b 05                 s0 = a4 <u s0
  5824: d4 65 05                 s0 = s0 | s1
  5827: 52 05 50                 jump @321 if s0 != 0
      :                          @315
  5830: 82 86                    s1 = u64 [a1]
  5832: ab c6 e7                 jump @313 if s1 != a5
      :                          @316
  5835: 7b 8a                    u64 [a1] = a3
  5837: 33 08 1f f0 02 01        a1 = 0x102f01f
  5843: c9 a8 08                 a1 = a1 - a3
  5846: 64 25                    s0 = t0
  5848: 28 06                    jump @318
      :                          @317
  5850: 33 08 01                 a1 = 0x1
  5853: 01                       fallthrough
      :                          @318
  5854: 7b 17                    u64 [sp] = a0
  5856: 7b 18 08                 u64 [sp + 0x8] = a1
  5859: 49 11 10                 u64 [sp + 16] = 0
  5862: 33 08 d8 03 01           a1 = 0x103d8
  5867: 64 17                    a0 = sp
  5869: 50 10 7e 96 06           ra = 126, jump @448
      :                          @319 [@dyn 63]
  5874: 52 07 22                 jump @322 if a0 != 0
      :                          @320
  5877: 82 17 10                 a0 = u64 [sp + 0x10]
  5880: 82 18 08                 a1 = u64 [sp + 0x8]
  5883: 82 19                    a2 = u64 [sp]
  5885: 7b 57 10                 u64 [s0 + 0x10] = a0
  5888: 7b 58 08                 u64 [s0 + 0x8] = a1
  5891: 7b 59                    u64 [s0] = a2
  5893: 82 10 30                 ra = u64 [sp + 0x30]
  5896: 82 15 28                 s0 = u64 [sp + 0x28]
  5899: 82 16 20                 s1 = u64 [sp + 0x20]
  5902: 95 11 38                 sp = sp + 0x38
  5905: 32 00                    ret
      :                          @321
  5907: 00                       trap
      :                          @322
  5908: 00                       trap
      :                          @323
  5909: 00                       trap
      :                          @324 [@dyn 64]
  5910: 82 72                    t0 = u64 [a0]
  5912: 95 2a 00 10 00 ff        a3 = t0 + 0xffffffffff001000
  5918: 33 09 01 10 00 ff        a2 = 0xffffffffff001001
  5924: ac 9a 32                 jump @330 if a3 <u a2
      :                          @325
  5927: 82 73 08                 t1 = u64 [a0 + 0x8]
  5930: 33 04 20 00 03           t2 = 0x30020
  5935: 95 4a 00 f0 ff 00        a3 = t2 + 0xfff000
  5941: 33 0b ff ef ff 00        a4 = 0xffefff
  5947: 01                       fallthrough
      :                          @326
  5948: 82 ac                    a5 = u64 [a3]
  5950: c8 b4 09                 a2 = t2 + a4
  5953: c9 c9 09                 a2 = a2 - a5
  5956: ab 39 12                 jump @330 if a2 != t1
      :                          @327
  5959: c9 2c 09                 a2 = a5 - t0
  5962: 01                       fallthrough
      :                          @328
  5963: 82 a7                    a0 = u64 [a3]
  5965: ab c7 ef                 jump @326 if a0 != a5
      :                          @329
  5968: 7b a9                    u64 [a3] = a2
  5970: 33 08                    a1 = 0
  5972: 32 00                    ret
      :                          @330
  5974: 32 00                    ret
      :                          @331 [@dyn 65]
  5976: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  5979: 7b 10 18                 u64 [sp + 0x18] = ra
  5982: 7b 15 10                 u64 [sp + 0x10] = s0
  5985: 7b 16 08                 u64 [sp + 0x8] = s1
  5988: 64 75                    s0 = a0
  5990: 82 7a 10                 a3 = u64 [a0 + 0x10]
  5993: 82 77                    a0 = u64 [a0]
  5995: c9 a7 07                 a0 = a0 - a3
  5998: 64 96                    s1 = a2
  6000: ac 97 2b                 jump @334 if a0 <u a2
      :                          @332
  6003: 7b 1a                    u64 [sp] = a3
  6005: 82 57 08                 a0 = u64 [s0 + 0x8]
  6008: c8 a7 07                 a0 = a0 + a3
  6011: 64 69                    a2 = s1
  6013: 50 20 84 00 4f 01        ra = 132, jump @353
      :                          @333 [@dyn 66]
  6019: 82 17                    a0 = u64 [sp]
  6021: c8 76 06                 s1 = s1 + a0
  6024: 7b 56 10                 u64 [s0 + 0x10] = s1
  6027: 33 07                    a0 = 0
  6029: 82 10 18                 ra = u64 [sp + 0x18]
  6032: 82 15 10                 s0 = u64 [sp + 0x10]
  6035: 82 16 08                 s1 = u64 [sp + 0x8]
  6038: 95 11 20                 sp = sp + 0x20
  6041: 32 00                    ret
      :                          @334
  6043: 64 57                    a0 = s0
  6045: 7b 18                    u64 [sp] = a1
  6047: 64 a8                    a1 = a3
  6049: 64 69                    a2 = s1
  6051: 50 20 86 00 44 fc        ra = 134, jump @247
      :                          @335 [@dyn 67]
  6057: 82 18                    a1 = u64 [sp]
  6059: 82 5a 10                 a3 = u64 [s0 + 0x10]
  6062: 28 c5                    jump @332
      :                          @336 [@dyn 68]
  6064: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  6067: 7b 10 20                 u64 [sp + 0x20] = ra
  6070: 7b 15 18                 u64 [sp + 0x18] = s0
  6073: 7b 16 10                 u64 [sp + 0x10] = s1
  6076: 64 86                    s1 = a1
  6078: 83 88                    i32 a1 = a1 + 0
  6080: 33 09 80 00              a2 = 0x80
  6084: 64 7a                    a3 = a0
  6086: ae 98 2c                 jump @341 if a1 >=u a2
      :                          @337
  6089: 82 a8 10                 a1 = u64 [a3 + 0x10]
  6092: 82 a7                    a0 = u64 [a3]
  6094: ab 78 13                 jump @340 if a1 != a0
      :                          @338
  6097: 64 a7                    a0 = a3
  6099: 64 a5                    s0 = a3
  6101: 50 20 8a 00 f5 fd        ra = 138, jump @291
      :                          @339 [@dyn 69]
  6107: 64 5a                    a3 = s0
  6109: 82 58 10                 a1 = u64 [s0 + 0x10]
  6112: 01                       fallthrough
      :                          @340
  6113: 82 a7 08                 a0 = u64 [a3 + 0x8]
  6116: c8 87 07                 a0 = a0 + a1
  6119: 78 76                    u8 [a0] = s1
  6121: 95 88 01                 a1 = a1 + 0x1
  6124: 7b a8 10                 u64 [a3 + 0x10] = a1
  6127: 28 ac 00                 jump @349
      :                          @341
  6130: 8b 67 0b                 i32 a0 = s1 >> 0xb
  6133: 48 11 0c                 u32 [sp + 12] = 0
  6136: 52 07 1c                 jump @343 if a0 != 0
      :                          @342
  6139: 98 67 06                 a0 = s1 >> 0x6
  6142: 86 77 c0 00              a0 = a0 | 0xc0
  6146: 78 17 0c                 u8 [sp + 0xc] = a0
  6149: 84 67 3f                 a0 = s1 & 0x3f
  6152: 86 77 80 00              a0 = a0 | 0x80
  6156: 78 17 0d                 u8 [sp + 0xd] = a0
  6159: 33 06 02                 s1 = 0x2
  6162: 28 63                    jump @346
      :                          @343
  6164: 8b 67 10                 i32 a0 = s1 >> 0x10
  6167: 52 07 29                 jump @345 if a0 != 0
      :                          @344
  6170: 98 67 0c                 a0 = s1 >> 0xc
  6173: 86 77 e0 00              a0 = a0 | 0xe0
  6177: 78 17 0c                 u8 [sp + 0xc] = a0
  6180: 97 67 34                 a0 = s1 << 0x34
  6183: 98 77 3a                 a0 = a0 >> 0x3a
  6186: 95 77 80 00              a0 = a0 + 0x80
  6190: 78 17 0d                 u8 [sp + 0xd] = a0
  6193: 84 67 3f                 a0 = s1 & 0x3f
  6196: 86 77 80 00              a0 = a0 | 0x80
  6200: 78 17 0e                 u8 [sp + 0xe] = a0
  6203: 33 06 03                 s1 = 0x3
  6206: 28 37                    jump @346
      :                          @345
  6208: 97 67 2b                 a0 = s1 << 0x2b
  6211: 98 77 3d                 a0 = a0 >> 0x3d
  6214: 95 77 f0 00              a0 = a0 + 0xf0
  6218: 78 17 0c                 u8 [sp + 0xc] = a0
  6221: 97 67 2e                 a0 = s1 << 0x2e
  6224: 98 77 3a                 a0 = a0 >> 0x3a
  6227: 95 77 80 00              a0 = a0 + 0x80
  6231: 78 17 0d                 u8 [sp + 0xd] = a0
  6234: 97 67 34                 a0 = s1 << 0x34
  6237: 98 77 3a                 a0 = a0 >> 0x3a
  6240: 95 77 80 00              a0 = a0 + 0x80
  6244: 78 17 0e                 u8 [sp + 0xe] = a0
  6247: 84 67 3f                 a0 = s1 & 0x3f
  6250: 86 77 80 00              a0 = a0 | 0x80
  6254: 78 17 0f                 u8 [sp + 0xf] = a0
  6257: 33 06 04                 s1 = 0x4
  6260: 01                       fallthrough
      :                          @346
  6261: 82 a5 10                 s0 = u64 [a3 + 0x10]
  6264: 82 a7                    a0 = u64 [a3]
  6266: c9 57 07                 a0 = a0 - s0
  6269: ac 67 2e                 jump @350 if a0 <u s1
      :                          @347
  6272: 7b 1a                    u64 [sp] = a3
  6274: 82 a7 08                 a0 = u64 [a3 + 0x8]
  6277: c8 57 07                 a0 = a0 + s0
  6280: 95 18 0c                 a1 = sp + 0xc
  6283: 64 69                    a2 = s1
  6285: 50 20 8c 00 3f           ra = 140, jump @353
      :                          @348 [@dyn 70]
  6290: c8 56 06                 s1 = s1 + s0
  6293: 82 17                    a0 = u64 [sp]
  6295: 7b 76 10                 u64 [a0 + 0x10] = s1
  6298: 01                       fallthrough
      :                          @349
  6299: 33 07                    a0 = 0
  6301: 82 10 20                 ra = u64 [sp + 0x20]
  6304: 82 15 18                 s0 = u64 [sp + 0x18]
  6307: 82 16 10                 s1 = u64 [sp + 0x10]
  6310: 95 11 28                 sp = sp + 0x28
  6313: 32 00                    ret
      :                          @350
  6315: 64 a7                    a0 = a3
  6317: 64 58                    a1 = s0
  6319: 64 69                    a2 = s1
  6321: 64 a5                    s0 = a3
  6323: 50 20 8e 00 34 fb        ra = 142, jump @247
      :                          @351 [@dyn 71]
  6329: 64 5a                    a3 = s0
  6331: 82 55 10                 s0 = u64 [s0 + 0x10]
  6334: 28 c2                    jump @347
      :                          @352 [@dyn 72]
  6336: 64 8a                    a3 = a1
  6338: 33 08 d8 03 01           a1 = 0x103d8
  6343: 64 a9                    a2 = a3
  6345: 28 ba 04                 jump @448
      :                          @353
  6348: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  6351: 7b 10 18                 u64 [sp + 0x18] = ra
  6354: 7b 15 10                 u64 [sp + 0x10] = s0
  6357: 7b 16 08                 u64 [sp + 0x8] = s1
  6360: 53 19 10 64              jump @362 if a2 <u 16
      :                          @354
  6364: 8d 7a                    i32 a3 = -a0
  6366: 84 a2 07                 t0 = a3 & 0x7
  6369: c8 27 0b                 a4 = a0 + t0
  6372: 51 02 15                 jump @357 if t0 == 0
      :                          @355
  6375: 64 8c                    a5 = a1
  6377: 64 75                    s0 = a0
  6379: 01                       fallthrough
      :                          @356
  6380: 7c ca                    a3 = u8 [a5]
  6382: 78 5a                    u8 [s0] = a3
  6384: 95 55 01                 s0 = s0 + 0x1
  6387: 95 cc 01                 a5 = a5 + 0x1
  6390: ac b5 f6                 jump @356 if s0 <u a4
      :                          @357
  6393: c8 28 03                 t1 = a1 + t0
  6396: c9 29 02                 t0 = a2 - t0
  6399: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  6402: 84 38 07                 a1 = t1 & 0x7
  6405: c8 4b 0a                 a3 = a4 + t2
  6408: 51 08 3b                 jump @364 if a1 == 0
      :                          @358
  6411: 58 04 4b                 jump @367 if t2 <=s 0
      :                          @359
  6414: 97 38 03                 a1 = t1 << 0x3
  6417: 84 80 38                 ra = a1 & 0x38
  6420: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  6423: 82 c5                    s0 = u64 [a5]
  6425: 8d 88                    i32 a1 = -a1
  6427: 84 88 38                 a1 = a1 & 0x38
  6430: 95 cc 08                 a5 = a5 + 0x8
  6433: 01                       fallthrough
      :                          @360
  6434: 82 c6                    s1 = u64 [a5]
  6436: d0 05 05                 s0 = s0 >> ra
  6439: cf 86 09                 a2 = s1 << a1
  6442: d4 59 09                 a2 = a2 | s0
  6445: 7b b9                    u64 [a4] = a2
  6447: 95 bb 08                 a4 = a4 + 0x8
  6450: 95 cc 08                 a5 = a5 + 0x8
  6453: 64 65                    s0 = s1
  6455: ac ab eb                 jump @360 if a4 <u a3
      :                          @361
  6458: 28 1c                    jump @367
      :                          @362
  6460: 64 7a                    a3 = a0
  6462: 52 09 21                 jump @368 if a2 != 0
      :                          @363
  6465: 28 2f                    jump @370
      :                          @364
  6467: 58 04 13                 jump @367 if t2 <=s 0
      :                          @365
  6470: 64 38                    a1 = t1
  6472: 01                       fallthrough
      :                          @366
  6473: 82 89                    a2 = u64 [a1]
  6475: 7b b9                    u64 [a4] = a2
  6477: 95 bb 08                 a4 = a4 + 0x8
  6480: 95 88 08                 a1 = a1 + 0x8
  6483: ac ab f6                 jump @366 if a4 <u a3
      :                          @367
  6486: c8 43 08                 a1 = t1 + t2
  6489: 84 29 07                 a2 = t0 & 0x7
  6492: 51 09 14                 jump @370 if a2 == 0
      :                          @368
  6495: c8 a9 09                 a2 = a2 + a3
  6498: 01                       fallthrough
      :                          @369
  6499: 7c 8b                    a4 = u8 [a1]
  6501: 78 ab                    u8 [a3] = a4
  6503: 95 aa 01                 a3 = a3 + 0x1
  6506: 95 88 01                 a1 = a1 + 0x1
  6509: ac 9a f6                 jump @369 if a3 <u a2
      :                          @370
  6512: 82 10 18                 ra = u64 [sp + 0x18]
  6515: 82 15 10                 s0 = u64 [sp + 0x10]
  6518: 82 16 08                 s1 = u64 [sp + 0x8]
  6521: 95 11 20                 sp = sp + 0x20
  6524: 32 00                    ret
      :                          @371
  6526: 53 19 10 48              jump @380 if a2 <u 16
      :                          @372
  6530: 8d 7a                    i32 a3 = -a0
  6532: 84 aa 07                 a3 = a3 & 0x7
  6535: c8 a7 0b                 a4 = a0 + a3
  6538: 51 0a 0e                 jump @375 if a3 == 0
      :                          @373
  6541: 64 7c                    a5 = a0
  6543: 01                       fallthrough
      :                          @374
  6544: 78 c8                    u8 [a5] = a1
  6546: 95 cc 01                 a5 = a5 + 0x1
  6549: ac bc fb                 jump @374 if a5 <u a4
      :                          @375
  6552: c9 a9 03                 t1 = a2 - a3
  6555: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  6558: c8 cb 0a                 a3 = a4 + a5
  6561: 58 0c 1d                 jump @378 if a5 <=s 0
      :                          @376
  6564: 84 82 ff 00              t0 = a1 & 0xff
  6568: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  6578: ca 92 0c                 a5 = t0 * a2
  6581: 01                       fallthrough
      :                          @377
  6582: 7b bc                    u64 [a4] = a5
  6584: 95 bb 08                 a4 = a4 + 0x8
  6587: ac ab fb                 jump @377 if a4 <u a3
      :                          @378
  6590: 84 39 07                 a2 = t1 & 0x7
  6593: 52 09 0a                 jump @381 if a2 != 0
      :                          @379
  6596: 28 13                    jump @383
      :                          @380
  6598: 64 7a                    a3 = a0
  6600: 51 09 0f                 jump @383 if a2 == 0
      :                          @381
  6603: c8 a9 09                 a2 = a2 + a3
  6606: 01                       fallthrough
      :                          @382
  6607: 78 a8                    u8 [a3] = a1
  6609: 95 aa 01                 a3 = a3 + 0x1
  6612: ac 9a fb                 jump @382 if a3 <u a2
      :                          @383
  6615: 32 00                    ret
      :                          @384 [@dyn 73]
  6617: 82 77                    a0 = u64 [a0]
  6619: 01                       fallthrough
      :                          @385
  6620: 28                       jump @385
      :                          @386
  6621: 95 11 a8                 sp = sp + 0xffffffffffffffa8
  6624: 7b 10 50                 u64 [sp + 0x50] = ra
  6627: 7b 15 48                 u64 [sp + 0x48] = s0
  6630: 7b 16 40                 u64 [sp + 0x40] = s1
  6633: 82 79                    a2 = u64 [a0]
  6635: 7b 18                    u64 [sp] = a1
  6637: 98 9a 04                 a3 = a2 >> 0x4
  6640: 33 08 27                 a1 = 0x27
  6643: 53 2a 71 02 84 00        jump @389 if a3 <u 625
      :                          @387
  6649: 33 08 27                 a1 = 0x27
  6652: 95 1a 3e                 a3 = sp + 0x3e
  6655: 3a 07 00 00 03           a0 = u64 [0x30000]
  6660: 7b 17 10                 u64 [sp + 0x10] = a0
  6663: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
  6669: 33 00 7b 14              ra = 0x147b
  6673: 33 0c 58 04 01           a5 = 0x10458
  6678: 33 04 ff e0 f5 05        t2 = 0x5f5e0ff
  6684: 33 05 9c                 s0 = 0xffffffffffffff9c
  6687: 01                       fallthrough
      :                          @388
  6688: 64 93                    t1 = a2
  6690: 82 17 10                 a0 = u64 [sp + 0x10]
  6693: d6 79 09                 a2 = a2 mulhu a0
  6696: 98 99 0b                 a2 = a2 >> 0xb
  6699: 82 17 08                 a0 = u64 [sp + 0x8]
  6702: c0 79 0b                 i32 a4 = a2 * a0
  6705: c8 3b 06                 s1 = a4 + t1
  6708: 97 6b 30                 a4 = s1 << 0x30
  6711: 98 bb 32                 a4 = a4 >> 0x32
  6714: ca 0b 0b                 a4 = a4 * ra
  6717: 98 b7 11                 a0 = a4 >> 0x11
  6720: 98 bb 10                 a4 = a4 >> 0x10
  6723: 84 bb fe 07              a4 = a4 & 0x7fe
  6727: ca 57 07                 a0 = a0 * s0
  6730: c8 67 07                 a0 = a0 + s1
  6733: 97 77 31                 a0 = a0 << 0x31
  6736: 98 77 30                 a0 = a0 >> 0x30
  6739: c8 cb 0b                 a4 = a4 + a5
  6742: 7c b6                    s1 = u8 [a4]
  6744: 7c bb 01                 a4 = u8 [a4 + 0x1]
  6747: c8 c7 07                 a0 = a0 + a5
  6750: 7c 72 01                 t0 = u8 [a0 + 0x1]
  6753: 7c 77                    a0 = u8 [a0]
  6755: 78 ab ff                 u8 [a3 + 0xffffffffffffffff] = a4
  6758: 78 a6 fe                 u8 [a3 + 0xfffffffffffffffe] = s1
  6761: 78 a2 01                 u8 [a3 + 0x1] = t0
  6764: 78 a7                    u8 [a3] = a0
  6766: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
  6769: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
  6772: ac 34 ac                 jump @388 if t2 <u t1
      :                          @389
  6775: 54 19 63 3b              jump @391 if a2 <=u 99
      :                          @390
  6779: 97 97 30                 a0 = a2 << 0x30
  6782: 98 77 32                 a0 = a0 >> 0x32
  6785: 96 77 7b 14              a0 = a0 * 0x147b
  6789: 98 77 11                 a0 = a0 >> 0x11
  6792: 96 7a 9c                 a3 = a0 * 0xffffffffffffff9c
  6795: c8 a9 09                 a2 = a2 + a3
  6798: 97 99 31                 a2 = a2 << 0x31
  6801: 98 99 30                 a2 = a2 >> 0x30
  6804: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  6807: 33 0a 58 04 01           a3 = 0x10458
  6812: c8 a9 09                 a2 = a2 + a3
  6815: 7c 9a 01                 a3 = u8 [a2 + 0x1]
  6818: 7c 99                    a2 = u8 [a2]
  6820: 95 1b 19                 a4 = sp + 0x19
  6823: c8 8b 0b                 a4 = a4 + a1
  6826: 78 ba 01                 u8 [a4 + 0x1] = a3
  6829: 78 b9                    u8 [a4] = a2
  6831: 64 79                    a2 = a0
  6833: 01                       fallthrough
      :                          @391
  6834: 55 19 0a 14              jump @393 if a2 >=u 10
      :                          @392
  6838: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  6841: 95 17 19                 a0 = sp + 0x19
  6844: c8 87 07                 a0 = a0 + a1
  6847: 83 99 30                 i32 a2 = a2 + 0x30
  6850: 78 79                    u8 [a0] = a2
  6852: 28 21                    jump @394
      :                          @393
  6854: 97 99 01                 a2 = a2 << 0x1
  6857: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  6860: 33 07 58 04 01           a0 = 0x10458
  6865: c8 97 07                 a0 = a0 + a2
  6868: 7c 79 01                 a2 = u8 [a0 + 0x1]
  6871: 7c 77                    a0 = u8 [a0]
  6873: 95 1a 19                 a3 = sp + 0x19
  6876: c8 8a 0a                 a3 = a3 + a1
  6879: 78 a9 01                 u8 [a3 + 0x1] = a2
  6882: 78 a7                    u8 [a3] = a0
  6884: 01                       fallthrough
      :                          @394
  6885: 95 1a 19                 a3 = sp + 0x19
  6888: c8 8a 0a                 a3 = a3 + a1
  6891: 9a 8b 27                 a4 = 0x27 - a1
  6894: 33 08 08 04 01           a1 = 0x10408
  6899: 82 17                    a0 = u64 [sp]
  6901: 33 09                    a2 = 0
  6903: 50 20 94 00 13           ra = 148, jump @396
      :                          @395 [@dyn 74]
  6908: 82 10 50                 ra = u64 [sp + 0x50]
  6911: 82 15 48                 s0 = u64 [sp + 0x48]
  6914: 82 16 40                 s1 = u64 [sp + 0x40]
  6917: 95 11 58                 sp = sp + 0x58
  6920: 32 00                    ret
      :                          @396
  6922: 95 11 98                 sp = sp + 0xffffffffffffff98
  6925: 7b 10 60                 u64 [sp + 0x60] = ra
  6928: 7b 15 58                 u64 [sp + 0x58] = s0
  6931: 7b 16 50                 u64 [sp + 0x50] = s1
  6934: 80 73 34                 t1 = u32 [a0 + 0x34]
  6937: 7b 1a 20                 u64 [sp + 0x20] = a3
  6940: 64 9c                    a5 = a2
  6942: 84 36 01                 s1 = t1 & 0x1
  6945: 33 02 2b                 t0 = 0x2b
  6948: 33 09 00 00 11           a2 = 0x110000
  6953: 84 3a 04                 a3 = t1 & 0x4
  6956: 7b 1b 28                 u64 [sp + 0x28] = a4
  6959: c8 b6 04                 t2 = s1 + a4
  6962: 7b 1c 30                 u64 [sp + 0x30] = a5
  6965: 52 0a 10                 jump @399 if a3 != 0
      :                          @397
  6968: 49 11 38                 u64 [sp + 56] = 0
  6971: 82 78                    a1 = u64 [a0]
  6973: 94 69 2b                 a2 = 0x2b if s1 != 0
  6976: 52 08 35                 jump @403 if a1 != 0
      :                          @398
  6979: 28 56                    jump @408
      :                          @399
  6981: 7b 18 38                 u64 [sp + 0x38] = a1
  6984: 33 09                    a2 = 0
  6986: 51 0c 1b                 jump @402 if a5 == 0
      :                          @400
  6989: 82 1b 38                 a4 = u64 [sp + 0x38]
  6992: 01                       fallthrough
      :                          @401
  6993: 7d b5                    s0 = i8 [a4]
  6995: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
  6998: 85 5a 01                 a3 = s0 ^ 0x1
  7001: c8 a9 09                 a2 = a2 + a3
  7004: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  7007: 95 bb 01                 a4 = a4 + 0x1
  7010: 52 0c ef                 jump @401 if a5 != 0
      :                          @402
  7013: c8 94 04                 t2 = t2 + a2
  7016: 33 09 00 00 11           a2 = 0x110000
  7021: 82 78                    a1 = u64 [a0]
  7023: db 62 09                 a2 = t0 if s1 != 0
  7026: 51 08 27                 jump @408 if a1 == 0
      :                          @403
  7029: 82 7a 08                 a3 = u64 [a0 + 0x8]
  7032: ae a4 21                 jump @408 if t2 >=u a3
      :                          @404
  7035: 84 38 08                 a1 = t1 & 0x8
  7038: 52 08 51                 jump @411 if a1 != 0
      :                          @405
  7041: 7c 76 38                 s1 = u8 [a0 + 0x38]
  7044: c9 4a 0a                 a3 = a3 - t2
  7047: 7b 19 18                 u64 [sp + 0x18] = a2
  7050: 5a 16 01 a0 00           jump @418 if s1 >s 1
      :                          @406
  7055: 52 06 ad 00              jump @420 if s1 != 0
      :                          @407
  7059: 7b 1a 10                 u64 [sp + 0x10] = a3
  7062: 28 ac 00                 jump @421
      :                          @408
  7065: 82 75 20                 s0 = u64 [a0 + 0x20]
  7068: 82 76 28                 s1 = u64 [a0 + 0x28]
  7071: 64 57                    a0 = s0
  7073: 64 68                    a1 = s1
  7075: 82 1a 38                 a3 = u64 [sp + 0x38]
  7078: 82 1b 30                 a4 = u64 [sp + 0x30]
  7081: 50 20 96 00 75 01        ra = 150, jump @441
      :                          @409 [@dyn 75]
  7087: 33 08 01                 a1 = 0x1
  7090: 52 07 be 00              jump @426 if a0 != 0
      :                          @410
  7094: 82 6c 18                 a5 = u64 [s1 + 0x18]
  7097: 64 57                    a0 = s0
  7099: 82 18 20                 a1 = u64 [sp + 0x20]
  7102: 82 19 28                 a2 = u64 [sp + 0x28]
  7105: 82 10 60                 ra = u64 [sp + 0x60]
  7108: 82 15 58                 s0 = u64 [sp + 0x58]
  7111: 82 16 50                 s1 = u64 [sp + 0x50]
  7114: 95 11 68                 sp = sp + 0x68
  7117: 32 0c                    jump [a5]
      :                          @411
  7119: 7b 1a 40                 u64 [sp + 0x40] = a3
  7122: 64 45                    s0 = t2
  7124: 81 78 30                 a1 = i32 [a0 + 0x30]
  7127: 7b 18 10                 u64 [sp + 0x10] = a1
  7130: 7c 7a 38                 a3 = u8 [a0 + 0x38]
  7133: 7b 1a 08                 u64 [sp + 0x8] = a3
  7136: 82 7a 20                 a3 = u64 [a0 + 0x20]
  7139: 82 78 28                 a1 = u64 [a0 + 0x28]
  7142: 48 17 30 30              u32 [a0 + 48] = 0x30
  7146: 7b 17                    u64 [sp] = a0
  7148: 46 17 38 01              u8 [a0 + 56] = 0x1
  7152: 7b 1a 48                 u64 [sp + 0x48] = a3
  7155: 64 a7                    a0 = a3
  7157: 64 86                    s1 = a1
  7159: 82 1a 38                 a3 = u64 [sp + 0x38]
  7162: 82 1b 30                 a4 = u64 [sp + 0x30]
  7165: 50 20 98 00 21 01        ra = 152, jump @441
      :                          @412 [@dyn 76]
  7171: 52 07 69                 jump @425 if a0 != 0
      :                          @413
  7174: 82 17 40                 a0 = u64 [sp + 0x40]
  7177: c9 57 05                 s0 = a0 - s0
  7180: 95 55 01                 s0 = s0 + 0x1
  7183: 01                       fallthrough
      :                          @414
  7184: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  7187: 51 05 cb 00              jump @436 if s0 == 0
      :                          @415
  7191: 82 69 20                 a2 = u64 [s1 + 0x20]
  7194: 33 08 30                 a1 = 0x30
  7197: 82 17 48                 a0 = u64 [sp + 0x48]
  7200: b4 90 02 9a 00           ra = 154, jump [a2]
      :                          @416 [@dyn 77]
  7205: 51 07 eb                 jump @414 if a0 == 0
      :                          @417
  7208: 28 44                    jump @425
      :                          @418
  7210: 52 16 02 12              jump @420 if s1 != 2
      :                          @419
  7214: 98 a6 01                 s1 = a3 >> 0x1
  7217: 95 a8 01                 a1 = a3 + 0x1
  7220: 98 88 01                 a1 = a1 >> 0x1
  7223: 7b 18 10                 u64 [sp + 0x10] = a1
  7226: 28 08                    jump @421
      :                          @420
  7228: 64 a6                    s1 = a3
  7230: 49 11 10                 u64 [sp + 16] = 0
  7233: 01                       fallthrough
      :                          @421
  7234: 82 78 20                 a1 = u64 [a0 + 0x20]
  7237: 7b 18 48                 u64 [sp + 0x48] = a1
  7240: 82 75 28                 s0 = u64 [a0 + 0x28]
  7243: 81 77 30                 a0 = i32 [a0 + 0x30]
  7246: 7b 17 40                 u64 [sp + 0x40] = a0
  7249: 95 66 01                 s1 = s1 + 0x1
  7252: 01                       fallthrough
      :                          @422
  7253: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  7256: 51 06 28                 jump @427 if s1 == 0
      :                          @423
  7259: 82 59 20                 a2 = u64 [s0 + 0x20]
  7262: 82 17 48                 a0 = u64 [sp + 0x48]
  7265: 82 18 40                 a1 = u64 [sp + 0x40]
  7268: b4 90 02 9c 00           ra = 156, jump [a2]
      :                          @424 [@dyn 78]
  7273: 51 07 ec                 jump @422 if a0 == 0
      :                          @425
  7276: 33 08 01                 a1 = 0x1
  7279: 01                       fallthrough
      :                          @426
  7280: 64 87                    a0 = a1
  7282: 82 10 60                 ra = u64 [sp + 0x60]
  7285: 82 15 58                 s0 = u64 [sp + 0x58]
  7288: 82 16 50                 s1 = u64 [sp + 0x50]
  7291: 95 11 68                 sp = sp + 0x68
  7294: 32 00                    ret
      :                          @427
  7296: 82 16 48                 s1 = u64 [sp + 0x48]
  7299: 64 67                    a0 = s1
  7301: 64 58                    a1 = s0
  7303: 82 19 18                 a2 = u64 [sp + 0x18]
  7306: 82 1a 38                 a3 = u64 [sp + 0x38]
  7309: 82 1b 30                 a4 = u64 [sp + 0x30]
  7312: 50 20 9e 00 8e 00        ra = 158, jump @441
      :                          @428 [@dyn 79]
  7318: 33 08 01                 a1 = 0x1
  7321: 52 07 d7                 jump @426 if a0 != 0
      :                          @429
  7324: 82 5a 18                 a3 = u64 [s0 + 0x18]
  7327: 64 67                    a0 = s1
  7329: 82 18 20                 a1 = u64 [sp + 0x20]
  7332: 82 19 28                 a2 = u64 [sp + 0x28]
  7335: b4 a0 02 a0 00           ra = 160, jump [a3]
      :                          @430 [@dyn 80]
  7340: 33 08 01                 a1 = 0x1
  7343: 52 07 c1                 jump @426 if a0 != 0
      :                          @431
  7346: 82 17 10                 a0 = u64 [sp + 0x10]
  7349: 9a 77                    a0 = -a0
  7351: 7b 17 38                 u64 [sp + 0x38] = a0
  7354: 33 06 ff                 s1 = 0xffffffffffffffff
  7357: 01                       fallthrough
      :                          @432
  7358: 82 17 38                 a0 = u64 [sp + 0x38]
  7361: c8 67 07                 a0 = a0 + s1
  7364: 51 17 ff 45              jump @439 if a0 == 4294967295
      :                          @433
  7368: 82 59 20                 a2 = u64 [s0 + 0x20]
  7371: 82 17 48                 a0 = u64 [sp + 0x48]
  7374: 82 18 40                 a1 = u64 [sp + 0x40]
  7377: b4 90 02 a2 00           ra = 162, jump [a2]
      :                          @434 [@dyn 81]
  7382: 95 66 01                 s1 = s1 + 0x1
  7385: 51 07 e5                 jump @432 if a0 == 0
      :                          @435
  7388: 28 39                    jump @440
      :                          @436
  7390: 82 6a 18                 a3 = u64 [s1 + 0x18]
  7393: 82 17 48                 a0 = u64 [sp + 0x48]
  7396: 82 18 20                 a1 = u64 [sp + 0x20]
  7399: 82 19 28                 a2 = u64 [sp + 0x28]
  7402: b4 a0 02 a4 00           ra = 164, jump [a3]
      :                          @437 [@dyn 82]
  7407: 33 08 01                 a1 = 0x1
  7410: 52 07 7e ff              jump @426 if a0 != 0
      :                          @438
  7414: 33 08                    a1 = 0
  7416: 82 16                    s1 = u64 [sp]
  7418: 82 17 10                 a0 = u64 [sp + 0x10]
  7421: 7a 67 30                 u32 [s1 + 0x30] = a0
  7424: 82 17 08                 a0 = u64 [sp + 0x8]
  7427: 78 67 38                 u8 [s1 + 0x38] = a0
  7430: 28 6a ff                 jump @426
      :                          @439
  7433: 82 16 10                 s1 = u64 [sp + 0x10]
  7436: 82 17 10                 a0 = u64 [sp + 0x10]
  7439: d8 76 08                 a1 = s1 <u a0
  7442: 28 5e ff                 jump @426
      :                          @440
  7445: 82 17 10                 a0 = u64 [sp + 0x10]
  7448: d8 76 08                 a1 = s1 <u a0
  7451: 28 55 ff                 jump @426
      :                          @441
  7454: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  7457: 7b 10 20                 u64 [sp + 0x20] = ra
  7460: 7b 15 18                 u64 [sp + 0x18] = s0
  7463: 7b 16 10                 u64 [sp + 0x10] = s1
  7466: 83 9c                    i32 a5 = a2 + 0
  7468: 33 02 00 00 11           t0 = 0x110000
  7473: 64 a6                    s1 = a3
  7475: 64 85                    s0 = a1
  7477: 64 7a                    a3 = a0
  7479: aa 2c 21                 jump @444 if a5 == t0
      :                          @442
  7482: 82 5c 20                 a5 = u64 [s0 + 0x20]
  7485: 64 a7                    a0 = a3
  7487: 64 98                    a1 = a2
  7489: 7b 1b 08                 u64 [sp + 0x8] = a4
  7492: 7b 1a                    u64 [sp] = a3
  7494: b4 c0 02 a6 00           ra = 166, jump [a5]
      :                          @443 [@dyn 83]
  7499: 82 1a                    a3 = u64 [sp]
  7501: 82 1b 08                 a4 = u64 [sp + 0x8]
  7504: 64 78                    a1 = a0
  7506: 33 07 01                 a0 = 0x1
  7509: 52 08 20                 jump @447 if a1 != 0
      :                          @444
  7512: 51 06 1a                 jump @446 if s1 == 0
      :                          @445
  7515: 82 5c 18                 a5 = u64 [s0 + 0x18]
  7518: 64 a7                    a0 = a3
  7520: 64 68                    a1 = s1
  7522: 64 b9                    a2 = a4
  7524: 82 10 20                 ra = u64 [sp + 0x20]
  7527: 82 15 18                 s0 = u64 [sp + 0x18]
  7530: 82 16 10                 s1 = u64 [sp + 0x10]
  7533: 95 11 28                 sp = sp + 0x28
  7536: 32 0c                    jump [a5]
      :                          @446
  7538: 33 07                    a0 = 0
  7540: 01                       fallthrough
      :                          @447
  7541: 82 10 20                 ra = u64 [sp + 0x20]
  7544: 82 15 18                 s0 = u64 [sp + 0x18]
  7547: 82 16 10                 s1 = u64 [sp + 0x10]
  7550: 95 11 28                 sp = sp + 0x28
  7553: 32 00                    ret
      :                          @448
  7555: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  7559: 7b 10 80 00              u64 [sp + 0x80] = ra
  7563: 7b 15 78                 u64 [sp + 0x78] = s0
  7566: 7b 16 70                 u64 [sp + 0x70] = s1
  7569: 49 11 60 20              u64 [sp + 96] = 0x20
  7573: 33 0a 03                 a3 = 0x3
  7576: 78 1a 68                 u8 [sp + 0x68] = a3
  7579: 82 96 20                 s1 = u64 [a2 + 0x20]
  7582: 49 11 30                 u64 [sp + 48] = 0
  7585: 49 11 40                 u64 [sp + 64] = 0
  7588: 7b 17 50                 u64 [sp + 0x50] = a0
  7591: 7b 18 58                 u64 [sp + 0x58] = a1
  7594: 51 06 0a 01              jump @470 if s1 == 0
      :                          @449
  7598: 82 97 28                 a0 = u64 [a2 + 0x28]
  7601: 51 07 79 01              jump @480 if a0 == 0
      :                          @450
  7605: 49 11 28                 u64 [sp + 40] = 0
  7608: 82 95                    s0 = u64 [a2]
  7610: 7b 19 08                 u64 [sp + 0x8] = a2
  7613: 82 98 10                 a1 = u64 [a2 + 0x10]
  7616: 7b 18 18                 u64 [sp + 0x18] = a1
  7619: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  7622: 97 88 03                 a1 = a1 << 0x3
  7625: 98 88 03                 a1 = a1 >> 0x3
  7628: 95 88 01                 a1 = a1 + 0x1
  7631: 7b 18                    u64 [sp] = a1
  7633: 95 55 08                 s0 = s0 + 0x8
  7636: 96 78 38                 a1 = a0 * 0x38
  7639: 95 66 18                 s1 = s1 + 0x18
  7642: 33 07 92 00              a0 = 0x92
  7646: 7b 17 10                 u64 [sp + 0x10] = a0
  7649: 01                       fallthrough
      :                          @451
  7650: 7b 18 20                 u64 [sp + 0x20] = a1
  7653: 82 59                    a2 = u64 [s0]
  7655: 51 09 18                 jump @454 if a2 == 0
      :                          @452
  7658: 82 1a 58                 a3 = u64 [sp + 0x58]
  7661: 82 17 50                 a0 = u64 [sp + 0x50]
  7664: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  7667: 82 aa 18                 a3 = u64 [a3 + 0x18]
  7670: b4 a0 02 a8 00           ra = 168, jump [a3]
      :                          @453 [@dyn 84]
  7675: 52 07 55 01              jump @483 if a0 != 0
      :                          @454
  7679: 81 67 10                 a0 = i32 [s1 + 0x10]
  7682: 7a 17 60                 u32 [sp + 0x60] = a0
  7685: 7c 67 18                 a0 = u8 [s1 + 0x18]
  7688: 78 17 68                 u8 [sp + 0x68] = a0
  7691: 81 67 14                 a0 = i32 [s1 + 0x14]
  7694: 7a 17 64                 u32 [sp + 0x64] = a0
  7697: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  7700: 82 67                    a0 = u64 [s1]
  7702: 51 08 26                 jump @459 if a1 == 0
      :                          @455
  7705: 52 18 01 16              jump @457 if a1 != 1
      :                          @456
  7709: 97 77 04                 a0 = a0 << 0x4
  7712: 82 18 18                 a1 = u64 [sp + 0x18]
  7715: c8 87 07                 a0 = a0 + a1
  7718: 82 78 08                 a1 = u64 [a0 + 0x8]
  7721: 82 19 10                 a2 = u64 [sp + 0x10]
  7724: aa 98 07                 jump @458 if a1 == a2
      :                          @457
  7727: 33 08                    a1 = 0
  7729: 28 0f                    jump @460
      :                          @458
  7731: 82 77                    a0 = u64 [a0]
  7733: 82 77                    a0 = u64 [a0]
  7735: 33 08 01                 a1 = 0x1
  7738: 28 06                    jump @460
      :                          @459
  7740: 33 08 01                 a1 = 0x1
  7743: 01                       fallthrough
      :                          @460
  7744: 7b 18 30                 u64 [sp + 0x30] = a1
  7747: 7b 17 38                 u64 [sp + 0x38] = a0
  7750: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  7753: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  7756: 51 08 26                 jump @465 if a1 == 0
      :                          @461
  7759: 52 18 01 16              jump @463 if a1 != 1
      :                          @462
  7763: 97 77 04                 a0 = a0 << 0x4
  7766: 82 18 18                 a1 = u64 [sp + 0x18]
  7769: c8 87 07                 a0 = a0 + a1
  7772: 82 78 08                 a1 = u64 [a0 + 0x8]
  7775: 82 19 10                 a2 = u64 [sp + 0x10]
  7778: aa 98 07                 jump @464 if a1 == a2
      :                          @463
  7781: 33 08                    a1 = 0
  7783: 28 0f                    jump @466
      :                          @464
  7785: 82 77                    a0 = u64 [a0]
  7787: 82 77                    a0 = u64 [a0]
  7789: 33 08 01                 a1 = 0x1
  7792: 28 06                    jump @466
      :                          @465
  7794: 33 08 01                 a1 = 0x1
  7797: 01                       fallthrough
      :                          @466
  7798: 7b 18 40                 u64 [sp + 0x40] = a1
  7801: 7b 17 48                 u64 [sp + 0x48] = a0
  7804: 82 67 08                 a0 = u64 [s1 + 0x8]
  7807: 97 77 04                 a0 = a0 << 0x4
  7810: 82 18 18                 a1 = u64 [sp + 0x18]
  7813: c8 78 08                 a1 = a1 + a0
  7816: 82 87                    a0 = u64 [a1]
  7818: 82 89 08                 a2 = u64 [a1 + 0x8]
  7821: 95 18 30                 a1 = sp + 0x30
  7824: b4 90 02 aa 00           ra = 170, jump [a2]
      :                          @467 [@dyn 85]
  7829: 52 07 bb 00              jump @483 if a0 != 0
      :                          @468
  7833: 95 55 10                 s0 = s0 + 0x10
  7836: 82 18 20                 a1 = u64 [sp + 0x20]
  7839: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  7842: 95 66 38                 s1 = s1 + 0x38
  7845: 82 17 28                 a0 = u64 [sp + 0x28]
  7848: 95 77 01                 a0 = a0 + 0x1
  7851: 7b 17 28                 u64 [sp + 0x28] = a0
  7854: 52 08 34 ff              jump @451 if a1 != 0
      :                          @469
  7858: 28 6b                    jump @478
      :                          @470
  7860: 82 97 18                 a0 = u64 [a2 + 0x18]
  7863: 51 07 73                 jump @480 if a0 == 0
      :                          @471
  7866: 82 95 10                 s0 = u64 [a2 + 0x10]
  7869: 33 0a                    a3 = 0
  7871: 97 78 04                 a1 = a0 << 0x4
  7874: c8 58 08                 a1 = a1 + s0
  7877: 7b 18 20                 u64 [sp + 0x20] = a1
  7880: 7b 19 08                 u64 [sp + 0x8] = a2
  7883: 82 96                    s1 = u64 [a2]
  7885: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  7888: 97 77 04                 a0 = a0 << 0x4
  7891: 98 77 04                 a0 = a0 >> 0x4
  7894: 95 77 01                 a0 = a0 + 0x1
  7897: 7b 17                    u64 [sp] = a0
  7899: 95 66 08                 s1 = s1 + 0x8
  7902: 01                       fallthrough
      :                          @472
  7903: 7b 1a 28                 u64 [sp + 0x28] = a3
  7906: 82 69                    a2 = u64 [s1]
  7908: 51 09 17                 jump @475 if a2 == 0
      :                          @473
  7911: 82 1a 58                 a3 = u64 [sp + 0x58]
  7914: 82 17 50                 a0 = u64 [sp + 0x50]
  7917: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  7920: 82 aa 18                 a3 = u64 [a3 + 0x18]
  7923: b4 a0 02 ac 00           ra = 172, jump [a3]
      :                          @474 [@dyn 86]
  7928: 52 07 58                 jump @483 if a0 != 0
      :                          @475
  7931: 82 57                    a0 = u64 [s0]
  7933: 82 59 08                 a2 = u64 [s0 + 0x8]
  7936: 95 18 30                 a1 = sp + 0x30
  7939: b4 90 02 ae 00           ra = 174, jump [a2]
      :                          @476 [@dyn 87]
  7944: 52 07 48                 jump @483 if a0 != 0
      :                          @477
  7947: 95 66 10                 s1 = s1 + 0x10
  7950: 95 55 10                 s0 = s0 + 0x10
  7953: 82 1a 28                 a3 = u64 [sp + 0x28]
  7956: 95 aa 01                 a3 = a3 + 0x1
  7959: 82 17 20                 a0 = u64 [sp + 0x20]
  7962: ab 75 c5                 jump @472 if s0 != a0
      :                          @478
  7965: 82 19 08                 a2 = u64 [sp + 0x8]
  7968: 82 1a                    a3 = u64 [sp]
  7970: 82 97 08                 a0 = u64 [a2 + 0x8]
  7973: ac 7a 0d                 jump @481 if a3 <u a0
      :                          @479
  7976: 28 2d                    jump @484
      :                          @480
  7978: 33 0a                    a3 = 0
  7980: 82 97 08                 a0 = u64 [a2 + 0x8]
  7983: 54 07 26                 jump @484 if a0 <=u 0
      :                          @481
  7986: 82 97                    a0 = u64 [a2]
  7988: 97 a8 04                 a1 = a3 << 0x4
  7991: c8 87 09                 a2 = a0 + a1
  7994: 82 1a 58                 a3 = u64 [sp + 0x58]
  7997: 82 17 50                 a0 = u64 [sp + 0x50]
  8000: 82 98                    a1 = u64 [a2]
  8002: 82 99 08                 a2 = u64 [a2 + 0x8]
  8005: 82 aa 18                 a3 = u64 [a3 + 0x18]
  8008: b4 a0 02 b0 00           ra = 176, jump [a3]
      :                          @482 [@dyn 88]
  8013: 51 07 08                 jump @484 if a0 == 0
      :                          @483
  8016: 33 07 01                 a0 = 0x1
  8019: 28 05                    jump @485
      :                          @484
  8021: 33 07                    a0 = 0
  8023: 01                       fallthrough
      :                          @485
  8024: 82 10 80 00              ra = u64 [sp + 0x80]
  8028: 82 15 78                 s0 = u64 [sp + 0x78]
  8031: 82 16 70                 s1 = u64 [sp + 0x70]
  8034: 95 11 88 00              sp = sp + 0x88
  8038: 32 00                    ret
      :                          @486 [@dyn 89]
  8040: 32 00                    ret
      :                          @487 [@dyn 90]
  8042: 95 11 80                 sp = sp + 0xffffffffffffff80
  8045: 7b 10 78                 u64 [sp + 0x78] = ra
  8048: 7b 15 70                 u64 [sp + 0x70] = s0
  8051: 7b 16 68                 u64 [sp + 0x68] = s1
  8054: 64 92                    t0 = a2
  8056: 33 00                    ra = 0
  8058: 33 0b                    a4 = 0
  8060: 33 05                    s0 = 0
  8062: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
  8072: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
  8078: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
  8088: 82 79 10                 a2 = u64 [a0 + 0x10]
  8091: 7b 19 48                 u64 [sp + 0x48] = a2
  8094: 82 79                    a2 = u64 [a0]
  8096: 7b 19 38                 u64 [sp + 0x38] = a2
  8099: 82 77 08                 a0 = u64 [a0 + 0x8]
  8102: 7b 17 30                 u64 [sp + 0x30] = a0
  8105: 33 07 48 04 01           a0 = 0x10448
  8110: 7b 17 08                 u64 [sp + 0x8] = a0
  8113: 3a 07 08 00 03           a0 = u64 [0x30008]
  8118: 7b 17 60                 u64 [sp + 0x60] = a0
  8121: 7b 18 58                 u64 [sp + 0x58] = a1
  8124: 95 88 08                 a1 = a1 + 0x8
  8127: 7b 18                    u64 [sp] = a1
  8129: 33 0c 0a                 a5 = 0xa
  8132: 7b 12 20                 u64 [sp + 0x20] = t0
  8135: 7b 13 18                 u64 [sp + 0x18] = t1
  8138: 7b 14 10                 u64 [sp + 0x10] = t2
  8141: 28 3b                    jump @491
      :                          @488
  8143: 64 06                    s1 = ra
  8145: c8 89 07                 a0 = a2 + a1
  8148: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
  8151: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  8154: 88 77 01                 a0 = a0 <u 0x1
  8157: 01                       fallthrough
      :                          @489
  8158: 82 1a 48                 a3 = u64 [sp + 0x48]
  8161: 78 a7                    u8 [a3] = a0
  8163: 82 17 30                 a0 = u64 [sp + 0x30]
  8166: 82 7a 18                 a3 = u64 [a0 + 0x18]
  8169: 82 17 38                 a0 = u64 [sp + 0x38]
  8172: b4 a0 02 b6 00           ra = 182, jump [a3]
      :                          @490 [@dyn 91]
  8177: 64 5b                    a4 = s0
  8179: 82 12 20                 t0 = u64 [sp + 0x20]
  8182: 82 13 18                 t1 = u64 [sp + 0x18]
  8185: 82 14 10                 t2 = u64 [sp + 0x10]
  8188: 64 60                    ra = s1
  8190: 33 0c 0a                 a5 = 0xa
  8193: 82 15 40                 s0 = u64 [sp + 0x40]
  8196: 52 07 64 01              jump @532 if a0 != 0
      :                          @491
  8200: 84 57 ff 00              a0 = s0 & 0xff
  8204: 52 07 58 01              jump @531 if a0 != 0
      :                          @492
  8208: 7b 1b 50                 u64 [sp + 0x50] = a4
  8211: ae 02 0a                 jump @495 if t0 >=u ra
      :                          @493
  8214: 28 ef 00                 jump @522
      :                          @494
  8217: ac 02 ec 00              jump @522 if t0 <u ra
      :                          @495
  8221: c9 02 08                 a1 = t0 - ra
  8224: 82 16 58                 s1 = u64 [sp + 0x58]
  8227: c8 06 06                 s1 = s1 + ra
  8230: 55 18 10 1d              jump @501 if a1 >=u 16
      :                          @496
  8234: aa 02 d8 00              jump @521 if t0 == ra
      :                          @497
  8238: 33 0a                    a3 = 0
  8240: 01                       fallthrough
      :                          @498
  8241: c8 a6 07                 a0 = s1 + a3
  8244: 7c 77                    a0 = u8 [a0]
  8246: aa c7 a5 00              jump @516 if a0 == a5
      :                          @499
  8250: 95 aa 01                 a3 = a3 + 0x1
  8253: ab a8 f4                 jump @498 if a1 != a3
      :                          @500
  8256: 28 c2 00                 jump @521
      :                          @501
  8259: 95 69 07                 a2 = s1 + 0x7
  8262: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
  8265: c9 6a 07                 a0 = a3 - s1
  8268: d3 6a 0a                 a3 = a3 ^ s1
  8271: 88 aa 01                 a3 = a3 <u 0x1
  8274: 88 7b 01                 a4 = a0 <u 0x1
  8277: d4 ba 0a                 a3 = a3 | a4
  8280: 51 0a 45                 jump @507 if a3 == 0
      :                          @502
  8283: 33 07                    a0 = 0
  8285: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  8288: 82 1b                    a4 = u64 [sp]
  8290: c8 0b 0b                 a4 = a4 + ra
  8293: 28 08                    jump @504
      :                          @503
  8295: 82 1b                    a4 = u64 [sp]
  8297: c8 0b 0b                 a4 = a4 + ra
  8300: 01                       fallthrough
      :                          @504
  8301: c8 76 0c                 a5 = s1 + a0
  8304: 82 cc                    a5 = u64 [a5]
  8306: c8 7b 09                 a2 = a4 + a0
  8309: 82 99                    a2 = u64 [a2]
  8311: d3 4c 05                 s0 = a5 ^ t2
  8314: c8 35 05                 s0 = s0 + t1
  8317: e0 c5 0c                 a5 = s0 & ~a5
  8320: d3 49 05                 s0 = a2 ^ t2
  8323: c8 35 05                 s0 = s0 + t1
  8326: e0 95 09                 a2 = s0 & ~a2
  8329: d4 c9 09                 a2 = a2 | a5
  8332: 82 1c 60                 a5 = u64 [sp + 0x60]
  8335: d2 c9 09                 a2 = a2 & a5
  8338: 52 09 1f                 jump @510 if a2 != 0
      :                          @505
  8341: 95 77 10                 a0 = a0 + 0x10
  8344: ae 7a d5                 jump @504 if a3 >=u a0
      :                          @506
  8347: 28 16                    jump @510
      :                          @507
  8349: c8 a6 0b                 a4 = s1 + a3
  8352: 7c bb                    a4 = u8 [a4]
  8354: aa cb 51                 jump @519 if a4 == a5
      :                          @508
  8357: 95 aa 01                 a3 = a3 + 0x1
  8360: ab a7 f5                 jump @507 if a0 != a3
      :                          @509
  8363: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  8366: ae 7a b9                 jump @503 if a3 >=u a0
      :                          @510
  8369: aa 87 9b 00              jump @528 if a0 == a1
      :                          @511
  8373: 33 0a                    a3 = 0
  8375: c8 76 06                 s1 = s1 + a0
  8378: c9 72 08                 a1 = t0 - a0
  8381: c9 08 08                 a1 = a1 - ra
  8384: 33 0c 0a                 a5 = 0xa
  8387: 82 1b 50                 a4 = u64 [sp + 0x50]
  8390: 01                       fallthrough
      :                          @512
  8391: c8 a6 09                 a2 = s1 + a3
  8394: 7c 99                    a2 = u8 [a2]
  8396: aa c9 0b                 jump @515 if a2 == a5
      :                          @513
  8399: 95 aa 01                 a3 = a3 + 0x1
  8402: ab a8 f5                 jump @512 if a1 != a3
      :                          @514
  8405: 28 2d                    jump @521
      :                          @515
  8407: c8 7a 0a                 a3 = a3 + a0
  8410: 01                       fallthrough
      :                          @516
  8411: c8 0a 0a                 a3 = a3 + ra
  8414: 95 a0 01                 ra = a3 + 0x1
  8417: ae 2a 38 ff              jump @494 if a3 >=u t0
      :                          @517
  8421: 82 17 58                 a0 = u64 [sp + 0x58]
  8424: c8 7a 0a                 a3 = a3 + a0
  8427: 7c a7                    a0 = u8 [a3]
  8429: ab c7 2c ff              jump @494 if a0 != a5
      :                          @518
  8433: 28 62                    jump @529
      :                          @519
  8435: 82 1b 50                 a4 = u64 [sp + 0x50]
  8438: c8 0a 0a                 a3 = a3 + ra
  8441: 95 a0 01                 ra = a3 + 0x1
  8444: ac 2a e9                 jump @517 if a3 <u t0
      :                          @520
  8447: 28 1a ff                 jump @494
      :                          @521
  8450: 64 20                    ra = t0
  8452: 01                       fallthrough
      :                          @522
  8453: 49 11 40 01              u64 [sp + 64] = 0x1
  8457: 64 b5                    s0 = a4
  8459: 64 26                    s1 = t0
  8461: aa 2b 57                 jump @531 if a4 == t0
      :                          @523
  8464: 82 17 48                 a0 = u64 [sp + 0x48]
  8467: 7c 77                    a0 = u8 [a0]
  8469: 51 07 23                 jump @526 if a0 == 0
      :                          @524
  8472: 82 17 30                 a0 = u64 [sp + 0x30]
  8475: 82 7a 18                 a3 = u64 [a0 + 0x18]
  8478: 33 09 04                 a2 = 0x4
  8481: 82 17 38                 a0 = u64 [sp + 0x38]
  8484: 82 18 08                 a1 = u64 [sp + 0x8]
  8487: 7b 10 28                 u64 [sp + 0x28] = ra
  8490: b4 a0 02 b8 00           ra = 184, jump [a3]
      :                          @525 [@dyn 92]
  8495: 82 1b 50                 a4 = u64 [sp + 0x50]
  8498: 82 10 28                 ra = u64 [sp + 0x28]
  8501: 52 07 33                 jump @532 if a0 != 0
      :                          @526
  8504: c9 b6 09                 a2 = s1 - a4
  8507: 82 18 58                 a1 = u64 [sp + 0x58]
  8510: c8 b8 08                 a1 = a1 + a4
  8513: ab b6 8e fe              jump @488 if s1 != a4
      :                          @527
  8517: 64 06                    s1 = ra
  8519: 33 07                    a0 = 0
  8521: 28 95 fe                 jump @489
      :                          @528
  8524: 64 20                    ra = t0
  8526: 82 1b 50                 a4 = u64 [sp + 0x50]
  8529: 28 b4                    jump @522
      :                          @529
  8531: 49 11 40                 u64 [sp + 64] = 0
  8534: 64 05                    s0 = ra
  8536: 64 06                    s1 = ra
  8538: 82 17 48                 a0 = u64 [sp + 0x48]
  8541: 7c 77                    a0 = u8 [a0]
  8543: 52 07 b9                 jump @524 if a0 != 0
      :                          @530
  8546: 28 d6                    jump @526
      :                          @531
  8548: 33 07                    a0 = 0
  8550: 28 06                    jump @533
      :                          @532
  8552: 33 07 01                 a0 = 0x1
  8555: 01                       fallthrough
      :                          @533
  8556: 82 10 78                 ra = u64 [sp + 0x78]
  8559: 82 15 70                 s0 = u64 [sp + 0x70]
  8562: 82 16 68                 s1 = u64 [sp + 0x68]
  8565: 95 11 80 00              sp = sp + 0x80
  8569: 32 00                    ret
      :                          @534 [@dyn 93]
  8571: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  8574: 7b 10 20                 u64 [sp + 0x20] = ra
  8577: 7b 15 18                 u64 [sp + 0x18] = s0
  8580: 7b 16 10                 u64 [sp + 0x10] = s1
  8583: 82 75 10                 s0 = u64 [a0 + 0x10]
  8586: 7c 59                    a2 = u8 [s0]
  8588: 82 7b                    a4 = u64 [a0]
  8590: 82 76 08                 s1 = u64 [a0 + 0x8]
  8593: 51 09 33                 jump @538 if a2 == 0
      :                          @535
  8596: 82 6a 18                 a3 = u64 [s1 + 0x18]
  8599: 7b 18 08                 u64 [sp + 0x8] = a1
  8602: 33 08 48 04 01           a1 = 0x10448
  8607: 33 09 04                 a2 = 0x4
  8610: 64 b7                    a0 = a4
  8612: 7b 1b                    u64 [sp] = a4
  8614: b4 a0 02 bc 00           ra = 188, jump [a3]
      :                          @536 [@dyn 94]
  8619: 82 18 08                 a1 = u64 [sp + 0x8]
  8622: 82 1b                    a4 = u64 [sp]
  8624: 51 07 14                 jump @538 if a0 == 0
      :                          @537
  8627: 33 07 01                 a0 = 0x1
  8630: 82 10 20                 ra = u64 [sp + 0x20]
  8633: 82 15 18                 s0 = u64 [sp + 0x18]
  8636: 82 16 10                 s1 = u64 [sp + 0x10]
  8639: 95 11 28                 sp = sp + 0x28
  8642: 32 00                    ret
      :                          @538
  8644: 83 87                    i32 a0 = a1 + 0
  8646: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  8649: 88 77 01                 a0 = a0 <u 0x1
  8652: 78 57                    u8 [s0] = a0
  8654: 82 6c 20                 a5 = u64 [s1 + 0x20]
  8657: 64 b7                    a0 = a4
  8659: 82 10 20                 ra = u64 [sp + 0x20]
  8662: 82 15 18                 s0 = u64 [sp + 0x18]
  8665: 82 16 10                 s1 = u64 [sp + 0x10]
  8668: 95 11 28                 sp = sp + 0x28
  8671: 32 0c                    jump [a5]
      :                          @539 [@dyn 95]
  8673: 64 8a                    a3 = a1
  8675: 33 08 10 04 01           a1 = 0x10410
  8680: 64 a9                    a2 = a3
  8682: 28 99 fb                 jump @448
      :                          @540
  8685: 95 11 70 ff              sp = sp + 0xffffffffffffff70
  8689: 7b 10 88 00              u64 [sp + 0x88] = ra
  8693: 7b 15 80 00              u64 [sp + 0x80] = s0
  8697: 7b 16 78                 u64 [sp + 0x78] = s1
  8700: 64 75                    s0 = a0
  8702: 7c 77 08                 a0 = u8 [a0 + 0x8]
  8705: 64 8b                    a4 = a1
  8707: 33 08 01                 a1 = 0x1
  8710: 33 06 01                 s1 = 0x1
  8713: 51 07 1d                 jump @542 if a0 == 0
      :                          @541
  8716: 78 56 08                 u8 [s0 + 0x8] = s1
  8719: 46 15 09 01              u8 [s0 + 9] = 0x1
  8723: 64 57                    a0 = s0
  8725: 82 10 88 00              ra = u64 [sp + 0x88]
  8729: 82 15 80 00              s0 = u64 [sp + 0x80]
  8733: 82 16 78                 s1 = u64 [sp + 0x78]
  8736: 95 11 90 00              sp = sp + 0x90
  8740: 32 00                    ret
      :                          @542
  8742: 64 9a                    a3 = a2
  8744: 82 5c                    a5 = u64 [s0]
  8746: 80 c7 34                 a0 = u32 [a5 + 0x34]
  8749: 7c 58 09                 a1 = u8 [s0 + 0x9]
  8752: 84 79 04                 a2 = a0 & 0x4
  8755: 52 09 45                 jump @548 if a2 != 0
      :                          @543
  8758: 51 08 32                 jump @546 if a1 == 0
      :                          @544
  8761: 82 c8 28                 a1 = u64 [a5 + 0x28]
  8764: 82 c7 20                 a0 = u64 [a5 + 0x20]
  8767: 82 83 18                 t1 = u64 [a1 + 0x18]
  8770: 33 08 50 04 01           a1 = 0x10450
  8775: 33 09 02                 a2 = 0x2
  8778: 64 a6                    s1 = a3
  8780: 7b 1b 10                 u64 [sp + 0x10] = a4
  8783: 7b 1c 08                 u64 [sp + 0x8] = a5
  8786: b4 30 02 c0 00           ra = 192, jump [t1]
      :                          @545 [@dyn 96]
  8791: 82 1c 08                 a5 = u64 [sp + 0x8]
  8794: 82 1b 10                 a4 = u64 [sp + 0x10]
  8797: 64 6a                    a3 = s1
  8799: 33 08 01                 a1 = 0x1
  8802: 33 06 01                 s1 = 0x1
  8805: 52 07 a7                 jump @541 if a0 != 0
      :                          @546
  8808: 64 b7                    a0 = a4
  8810: 64 c8                    a1 = a5
  8812: b4 a0 02 c2 00           ra = 194, jump [a3]
      :                          @547 [@dyn 97]
  8817: 33 08 01                 a1 = 0x1
  8820: 64 76                    s1 = a0
  8822: 28 96                    jump @541
      :                          @548
  8824: 52 08 37                 jump @552 if a1 != 0
      :                          @549
  8827: 82 c8 28                 a1 = u64 [a5 + 0x28]
  8830: 82 c7 20                 a0 = u64 [a5 + 0x20]
  8833: 82 83 18                 t1 = u64 [a1 + 0x18]
  8836: 33 08 54 04 01           a1 = 0x10454
  8841: 33 09 01                 a2 = 0x1
  8844: 33 06 01                 s1 = 0x1
  8847: 7b 1a                    u64 [sp] = a3
  8849: 7b 1b 10                 u64 [sp + 0x10] = a4
  8852: 7b 1c 08                 u64 [sp + 0x8] = a5
  8855: b4 30 02 c4 00           ra = 196, jump [t1]
      :                          @550 [@dyn 98]
  8860: 82 1c 08                 a5 = u64 [sp + 0x8]
  8863: 82 1b 10                 a4 = u64 [sp + 0x10]
  8866: 82 1a                    a3 = u64 [sp]
  8868: 33 08 01                 a1 = 0x1
  8871: 52 07 65 ff              jump @541 if a0 != 0
      :                          @551
  8875: 81 c7 34                 a0 = i32 [a5 + 0x34]
  8878: 01                       fallthrough
      :                          @552
  8879: 33 06 01                 s1 = 0x1
  8882: 78 16 37                 u8 [sp + 0x37] = s1
  8885: 82 c8 20                 a1 = u64 [a5 + 0x20]
  8888: 82 c9 28                 a2 = u64 [a5 + 0x28]
  8891: 7b 18 18                 u64 [sp + 0x18] = a1
  8894: 7b 19 20                 u64 [sp + 0x20] = a2
  8897: 95 18 37                 a1 = sp + 0x37
  8900: 7b 18 28                 u64 [sp + 0x28] = a1
  8903: 81 c8 30                 a1 = i32 [a5 + 0x30]
  8906: 7c c9 38                 a2 = u8 [a5 + 0x38]
  8909: 82 c3                    t1 = u64 [a5]
  8911: 82 c4 08                 t2 = u64 [a5 + 0x8]
  8914: 82 c0 10                 ra = u64 [a5 + 0x10]
  8917: 82 c2 18                 t0 = u64 [a5 + 0x18]
  8920: 7a 17 6c                 u32 [sp + 0x6c] = a0
  8923: 7a 18 68                 u32 [sp + 0x68] = a1
  8926: 78 19 70                 u8 [sp + 0x70] = a2
  8929: 7b 13 38                 u64 [sp + 0x38] = t1
  8932: 7b 14 40                 u64 [sp + 0x40] = t2
  8935: 7b 10 48                 u64 [sp + 0x48] = ra
  8938: 7b 12 50                 u64 [sp + 0x50] = t0
  8941: 95 17 18                 a0 = sp + 0x18
  8944: 7b 17 58                 u64 [sp + 0x58] = a0
  8947: 33 07 10 04 01           a0 = 0x10410
  8952: 7b 17 60                 u64 [sp + 0x60] = a0
  8955: 95 18 38                 a1 = sp + 0x38
  8958: 64 b7                    a0 = a4
  8960: b4 a0 02 c6 00           ra = 198, jump [a3]
      :                          @553 [@dyn 99]
  8965: 52 07 21                 jump @556 if a0 != 0
      :                          @554
  8968: 82 18 60                 a1 = u64 [sp + 0x60]
  8971: 82 17 58                 a0 = u64 [sp + 0x58]
  8974: 82 8a 18                 a3 = u64 [a1 + 0x18]
  8977: 33 08 52 04 01           a1 = 0x10452
  8982: 33 09 02                 a2 = 0x2
  8985: b4 a0 02 c8 00           ra = 200, jump [a3]
      :                          @555 [@dyn 100]
  8990: 64 76                    s1 = a0
  8992: 33 08 01                 a1 = 0x1
  8995: 28 e9 fe                 jump @541
      :                          @556
  8998: 33 08 01                 a1 = 0x1
  9001: 28 e3 fe                 jump @541
      :                          @557
  9004: 51 08 9b 00              jump @578 if a1 == 0
      :                          @558
  9008: 64 79                    a2 = a0
  9010: 7c 77                    a0 = u8 [a0]
  9012: 51 07 91 00              jump @577 if a0 == 0
      :                          @559
  9016: 51 27 ff 00 90 00        jump @579 if a0 == 255
      :                          @560
  9022: 6c 7a                    a3 = sext.b a0
  9024: 57 0a 09                 jump @562 if a3 <s 0
      :                          @561
  9027: 33 0a                    a3 = 0
  9029: 33 08                    a1 = 0
  9031: 28 73                    jump @576
      :                          @562
  9033: 55 27 c0 00 0d           jump @564 if a0 >=u 192
      :                          @563
  9038: 33 0a 01                 a3 = 0x1
  9041: 33 0b 80                 a4 = 0xffffffffffffff80
  9044: 28 4a                    jump @573
      :                          @564
  9046: 55 27 e0 00 0e           jump @566 if a0 >=u 224
      :                          @565
  9051: 33 0a 02                 a3 = 0x2
  9054: 33 0b 40 ff              a4 = 0xffffffffffffff40
  9058: 28 3c                    jump @573
      :                          @566
  9060: 55 27 f0 00 0e           jump @568 if a0 >=u 240
      :                          @567
  9065: 33 0a 03                 a3 = 0x3
  9068: 33 0b 20 ff              a4 = 0xffffffffffffff20
  9072: 28 2e                    jump @573
      :                          @568
  9074: 55 27 f8 00 0e           jump @570 if a0 >=u 248
      :                          @569
  9079: 33 0a 04                 a3 = 0x4
  9082: 33 0b 10 ff              a4 = 0xffffffffffffff10
  9086: 28 20                    jump @573
      :                          @570
  9088: 55 27 fc 00 0e           jump @572 if a0 >=u 252
      :                          @571
  9093: 33 0a 05                 a3 = 0x5
  9096: 33 0b 08 ff              a4 = 0xffffffffffffff08
  9100: 28 12                    jump @573
      :                          @572
  9102: 88 7a fe 00              a3 = a0 <u 0xfe
  9106: 33 0b 04 ff              a4 = 0xffffffffffffff04
  9110: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  9114: 85 aa 07                 a3 = a3 ^ 0x7
  9117: 01                       fallthrough
      :                          @573
  9118: ae 8a 2b                 jump @580 if a3 >=u a1
      :                          @574
  9121: 33 08                    a1 = 0
  9123: c8 b7 07                 a0 = a0 + a4
  9126: 64 ab                    a4 = a3
  9128: 01                       fallthrough
      :                          @575
  9129: c8 b9 0c                 a5 = a2 + a4
  9132: 7c cc                    a5 = u8 [a5]
  9134: 97 88 08                 a1 = a1 << 0x8
  9137: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  9140: d4 c8 08                 a1 = a1 | a5
  9143: 52 0b f2                 jump @575 if a4 != 0
      :                          @576
  9146: 8a a9 03                 i32 a2 = a3 << 0x3
  9149: cf 97 07                 a0 = a0 << a2
  9152: c8 87 07                 a0 = a0 + a1
  9155: 32 00                    ret
      :                          @577
  9157: 32 00                    ret
      :                          @578
  9159: 00                       trap
      :                          @579
  9160: 00                       trap
      :                          @580
  9161: 00                       trap
