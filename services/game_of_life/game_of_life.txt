// RO data = 712/712 bytes
// RW data = 88/4208 bytes
// Stack size = 409600 bytes
// Jump table entry point size = 2 bytes
// RO data = [70, 105, 110, 105, 115, 104, 32, 104, 97, 115, 104, 58, 32, 70, 105, 110, 105, 115, 104, 32, 104, 97, 115, 104, 32, 99, 104, 97, 105, 110, 70, 105, 110, 105, 115, 104, 32, 104, 97, 115, 104, 32, 99, 104, 97, 105, 110, 32, 99, 111, 112, 121, 83, 116, 101, 112, 32, 58, 32, 40, 103, 101, 116, 32, 115, 116, 101, 112, 115, 41, 58, 32, 40, 105, 110, 105, 116, 101, 100, 41, 58, 32, 40, 115, 116, 101, 112, 112, 101, 100, 41, 58, 32, 40, 100, 111, 110, 101, 41, 0, 0, 0, 0, 0, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3, 11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4, 7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8, 9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13, 2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9, 12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11, 13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10, 6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5, 10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3, 0, 0, 0, 0, 0, 0, 104, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 52, 0, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 57, 0, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 52, 0, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 70, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 52, 0, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 80, 0, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 52, 0, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 91, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 118, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 120, 0, 0, 0, 0, 0, 0, 0, 126, 0, 0, 0, 0, 0, 0, 0, 134, 0, 0, 0, 0, 0, 0, 0]
// RW data = [31, 108, 62, 43, 140, 104, 5, 155, 209, 130, 230, 173, 127, 82, 14, 81, 40, 201, 189, 242, 103, 230, 9, 106, 59, 167, 202, 132, 133, 174, 103, 187, 43, 248, 148, 254, 114, 243, 110, 60, 241, 54, 29, 95, 58, 245, 79, 165, 107, 189, 65, 251, 171, 217, 131, 31, 121, 33, 126, 19, 25, 205, 224, 91, 8, 201, 188, 243, 103, 230, 9, 106, 148, 66, 190, 4, 84, 38, 124, 224, 75, 89, 134, 56, 214, 197, 109, 52]
// Instructions = 3571
// Code size = 11320 bytes

      :                          @0
     0: 28 35 02 00 00           jump @54
      :                          @1
     5: 28 d2 1e 00 00           jump @381
      :                          @2
    10: 28 d6 1e                 jump @382
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 82 77                    a0 = u64 [a0]
    23: 7c 77                    a0 = u8 [a0]
    25: 33 0b 81 00              a4 = 0x81
    29: 95 19 7f                 a2 = sp + 0x7f
    32: 33 02 57                 t0 = 0x57
    35: 01                       fallthrough
      :                          @4
    36: 64 bc                    a5 = a4
    38: 84 7b 0f                 a4 = a0 & 0xf
    41: 97 77 38                 a0 = a0 << 0x38
    44: 98 77 3c                 a0 = a0 >> 0x3c
    47: 88 b3 0a                 t1 = a4 <u 0xa
    50: 33 0a 30                 a3 = 0x30
    53: da 32 0a                 a3 = t0 if t1 == 0
    56: be ba 0a                 i32 a3 = a3 + a4
    59: 78 9a                    u8 [a2] = a3
    61: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
    64: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
    67: 52 07 e1                 jump @4 if a0 != 0
      :                          @5
    70: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
    73: 56 27 80 00 27           jump @8 if a0 >u 128
      :                          @6
    78: 9a bb 81 00              a4 = 0x81 - a4
    82: 64 1a                    a3 = sp
    84: c8 7a 0a                 a3 = a3 + a0
    87: 33 09 02                 a2 = 0x2
    90: 64 87                    a0 = a1
    92: 33 08 68 00 01           a1 = 0x10068
    97: 50 10 04 93 23           ra = 4, jump @488
      :                          @7 [@dyn 2]
   102: 82 10 80 00              ra = u64 [sp + 0x80]
   106: 95 11 88 00              sp = sp + 0x88
   110: 32 00                    ret
      :                          @8
   112: 00                       trap
      :                          @9
   113: 95 11 c8                 sp = sp + 0xffffffffffffffc8
   116: 7b 10 30                 u64 [sp + 0x30] = ra
   119: 7b 15 28                 u64 [sp + 0x28] = s0
   122: 7b 16 20                 u64 [sp + 0x20] = s1
   125: 64 96                    s1 = a2
   127: 64 73                    t1 = a0
   129: 51 08 6e                 jump @19 if a1 == 0
      :                          @10
   132: 82 a7 08                 a0 = u64 [a3 + 0x8]
   135: 51 07 71                 jump @20 if a0 == 0
      :                          @11
   138: 82 a9 10                 a2 = u64 [a3 + 0x10]
   141: 51 09 9e 00              jump @27 if a2 == 0
      :                          @12
   145: 82 a8                    a1 = u64 [a3]
   147: 33 02 00 10              t0 = 0x1000
   151: 33 04 60 00 03           t2 = 0x30060
   156: c8 24 07                 a0 = t2 + t0
   159: 01                       fallthrough
      :                          @13
   160: 82 7a                    a3 = u64 [a0]
   162: c8 6a 05                 s0 = a3 + s1
   165: ac a5 c2 00              jump @33 if s0 <u a3
      :                          @14
   169: 95 5b 01                 a4 = s0 + 0x1
   172: 88 bc 01                 a5 = a4 <u 0x1
   175: d8 b2 0b                 a4 = t0 <u a4
   178: d4 cb 0b                 a4 = a4 | a5
   181: 52 0b b2 00              jump @33 if a4 != 0
      :                          @15
   185: 82 7b                    a4 = u64 [a0]
   187: ab ab e5                 jump @13 if a4 != a3
      :                          @16
   190: 7b 75                    u64 [a0] = s0
   192: 33 0c                    a5 = 0
   194: 7b 13 18                 u64 [sp + 0x18] = t1
   197: c9 54 07                 a0 = t2 - s0
   200: 95 77 00 10              a0 = a0 + 0x1000
   204: 7b 17 10                 u64 [sp + 0x10] = a0
   207: 7b 18 08                 u64 [sp + 0x8] = a1
   210: 64 95                    s0 = a2
   212: 7b 14                    u64 [sp] = t2
   214: 50 10 06 f0 20           ra = 6, jump @445
      :                          @17 [@dyn 3]
   219: 54 25 00 10 94 00        jump @34 if s0 <=u 4096
      :                          @18
   225: 82 13 18                 t1 = u64 [sp + 0x18]
   228: 82 18 10                 a1 = u64 [sp + 0x10]
   231: 33 07                    a0 = 0
   233: 7b 38 08                 u64 [t1 + 0x8] = a1
   236: 28 b1 00                 jump @40
      :                          @19
   239: 49 13 08                 u64 [t1 + 8] = 0
   242: 33 07 01                 a0 = 0x1
   245: 28 a8 00                 jump @40
      :                          @20
   248: 33 07 00 10              a0 = 0x1000
   252: 33 02 60 00 03           t0 = 0x30060
   257: c8 72 09                 a2 = t0 + a0
   260: 01                       fallthrough
      :                          @21
   261: 82 9b                    a4 = u64 [a2]
   263: c8 6b 0a                 a3 = a4 + s1
   266: ac ba 5d                 jump @33 if a3 <u a4
      :                          @22
   269: 95 ac 01                 a5 = a3 + 0x1
   272: 88 c8 01                 a1 = a5 <u 0x1
   275: d8 c7 0c                 a5 = a0 <u a5
   278: d4 c8 08                 a1 = a1 | a5
   281: 52 08 4e                 jump @33 if a1 != 0
      :                          @23
   284: 82 98                    a1 = u64 [a2]
   286: ab b8 e7                 jump @21 if a1 != a4
      :                          @24
   289: 7b 9a                    u64 [a2] = a3
   291: 33 0c                    a5 = 0
   293: 01                       fallthrough
      :                          @25
   294: ab b8 df                 jump @21 if a1 != a4
      :                          @26
   297: 28 30                    jump @32
      :                          @27
   299: 33 07 00 10              a0 = 0x1000
   303: 33 02 60 00 03           t0 = 0x30060
   308: c8 72 09                 a2 = t0 + a0
   311: 01                       fallthrough
      :                          @28
   312: 82 9b                    a4 = u64 [a2]
   314: c8 6b 0a                 a3 = a4 + s1
   317: ac ba 2a                 jump @33 if a3 <u a4
      :                          @29
   320: 95 ac 01                 a5 = a3 + 0x1
   323: 88 c8 01                 a1 = a5 <u 0x1
   326: d8 c7 0c                 a5 = a0 <u a5
   329: d4 c8 08                 a1 = a1 | a5
   332: 52 08 1b                 jump @33 if a1 != 0
      :                          @30
   335: 82 98                    a1 = u64 [a2]
   337: ab b8 e7                 jump @28 if a1 != a4
      :                          @31
   340: 7b 9a                    u64 [a2] = a3
   342: 33 0c                    a5 = 0
   344: 01                       fallthrough
      :                          @32
   345: c9 a2 07                 a0 = t0 - a3
   348: 95 78 00 10              a1 = a0 + 0x1000
   352: 33 07                    a0 = 0
   354: 7b 38 08                 u64 [t1 + 0x8] = a1
   357: 28 38                    jump @40
      :                          @33
   359: 33 07 01                 a0 = 0x1
   362: 7b 37 08                 u64 [t1 + 0x8] = a0
   365: 28 30                    jump @40
      :                          @34
   367: 64 5c                    a5 = s0
   369: 82 18                    a1 = u64 [sp]
   371: 95 87 00 10              a0 = a1 + 0x1000
   375: 82 13 18                 t1 = u64 [sp + 0x18]
   378: 82 15 08                 s0 = u64 [sp + 0x8]
   381: 01                       fallthrough
      :                          @35
   382: 82 78                    a1 = u64 [a0]
   384: c9 87 09                 a2 = a0 - a1
   387: ab 59 11                 jump @39 if a2 != s0
      :                          @36
   390: c9 c8 09                 a2 = a1 - a5
   393: 01                       fallthrough
      :                          @37
   394: 82 7a                    a3 = u64 [a0]
   396: ab 8a f2                 jump @35 if a3 != a1
      :                          @38
   399: 7b 79                    u64 [a0] = a2
   401: 33 0b                    a4 = 0
   403: 01                       fallthrough
      :                          @39
   404: 82 18 10                 a1 = u64 [sp + 0x10]
   407: 33 07                    a0 = 0
   409: 7b 38 08                 u64 [t1 + 0x8] = a1
   412: 01                       fallthrough
      :                          @40
   413: 7b 36 10                 u64 [t1 + 0x10] = s1
   416: 7b 37                    u64 [t1] = a0
   418: 82 10 30                 ra = u64 [sp + 0x30]
   421: 82 15 28                 s0 = u64 [sp + 0x28]
   424: 82 16 20                 s1 = u64 [sp + 0x20]
   427: 95 11 38                 sp = sp + 0x38
   430: 32 00                    ret
      :                          @41
   432: 95 11 b8                 sp = sp + 0xffffffffffffffb8
   435: 7b 10 40                 u64 [sp + 0x40] = ra
   438: 7b 15 38                 u64 [sp + 0x38] = s0
   441: 7b 16 30                 u64 [sp + 0x30] = s1
   444: c8 89 09                 a2 = a2 + a1
   447: ac 89 53                 jump @49 if a2 <u a1
      :                          @42
   450: 64 75                    s0 = a0
   452: 82 77                    a0 = u64 [a0]
   454: 97 78 01                 a1 = a0 << 0x1
   457: 33 0a 08                 a3 = 0x8
   460: e4 a9 09                 a2 = maxu(a2, a3)
   463: e4 98 06                 s1 = maxu(a1, a2)
   466: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
   469: 98 88 3f                 a1 = a1 >> 0x3f
   472: 51 07 12                 jump @44 if a0 == 0
      :                          @43
   475: 82 59 08                 a2 = u64 [s0 + 0x8]
   478: 7b 19 18                 u64 [sp + 0x18] = a2
   481: 49 11 20 01              u64 [sp + 32] = 0x1
   485: 7b 17 28                 u64 [sp + 0x28] = a0
   488: 28 06                    jump @45
      :                          @44
   490: 49 11 20                 u64 [sp + 32] = 0
   493: 01                       fallthrough
      :                          @45
   494: 64 17                    a0 = sp
   496: 95 1a 18                 a3 = sp + 0x18
   499: 64 69                    a2 = s1
   501: 50 10 08 7c fe           ra = 8, jump @9
      :                          @46 [@dyn 4]
   506: 82 18                    a1 = u64 [sp]
   508: 82 17 08                 a0 = u64 [sp + 0x8]
   511: 51 08 14                 jump @50 if a1 == 0
      :                          @47
   514: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
   524: aa 87 0d                 jump @51 if a0 == a1
      :                          @48
   527: 52 07 18                 jump @52 if a0 != 0
      :                          @49
   530: 00                       trap
      :                          @50
   531: 7b 57 08                 u64 [s0 + 0x8] = a0
   534: 7b 56                    u64 [s0] = s1
   536: 01                       fallthrough
      :                          @51
   537: 82 10 40                 ra = u64 [sp + 0x40]
   540: 82 15 38                 s0 = u64 [sp + 0x38]
   543: 82 16 30                 s1 = u64 [sp + 0x30]
   546: 95 11 48                 sp = sp + 0x48
   549: 32 00                    ret
      :                          @52
   551: 00                       trap
      :                          @53 [@dyn 5]
   552: 82 7a 08                 a3 = u64 [a0 + 0x8]
   555: 82 79 10                 a2 = u64 [a0 + 0x10]
   558: 64 87                    a0 = a1
   560: 64 a8                    a1 = a3
   562: 28 3b 24                 jump @540
      :                          @54 [export #0: 'refine']
   565: 95 11 08 f8              sp = sp + 0xfffffffffffff808
   569: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
   573: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
   577: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
   581: 95 11 e0 c1 fd           sp = sp + 0xfffffffffffdc1e0
   586: 55 18 04 07              jump @56 if a1 >=u 4
      :                          @55
   590: 28 5c 1c                 jump @368
      :                          @56
   593: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
   596: 52 08 06                 jump @58 if a1 != 0
      :                          @57
   599: 28 53 1c                 jump @368
      :                          @58
   602: 95 76 04                 s1 = a0 + 0x4
   605: 7d 6a                    a3 = i8 [s1]
   607: 84 ac ff 00              a5 = a3 & 0xff
   611: 33 09 01                 a2 = 0x1
   614: 59 0a 46                 jump @67 if a3 >=s 0
      :                          @59
   617: 33 0a c0 00              a3 = 0xc0
   621: 33 09 02                 a2 = 0x2
   624: ac ac 36                 jump @65 if a5 <u a3
      :                          @60
   627: 33 0a e0 00              a3 = 0xe0
   631: 33 09 03                 a2 = 0x3
   634: ac ac 2c                 jump @65 if a5 <u a3
      :                          @61
   637: 33 0a f0 00              a3 = 0xf0
   641: 33 09 04                 a2 = 0x4
   644: ac ac 22                 jump @65 if a5 <u a3
      :                          @62
   647: 33 0a f8 00              a3 = 0xf8
   651: 33 09 05                 a2 = 0x5
   654: ac ac 18                 jump @65 if a5 <u a3
      :                          @63
   657: 33 0a fc 00              a3 = 0xfc
   661: 33 09 06                 a2 = 0x6
   664: ac ac 0e                 jump @65 if a5 <u a3
      :                          @64
   667: 88 c9 fe 00              a2 = a5 <u 0xfe
   671: 33 0a 08                 a3 = 0x8
   674: c9 9a 09                 a2 = a3 - a2
   677: 01                       fallthrough
      :                          @65
   678: ae 98 06                 jump @67 if a1 >=u a2
      :                          @66
   681: 28 2a 1c                 jump @377
      :                          @67
   684: 51 0c 95 00              jump @88 if a5 == 0
      :                          @68
   688: 52 2c ff 00 08           jump @70 if a5 != 255
      :                          @69
   693: 28 1d 1c                 jump @376
      :                          @70
   696: 6c ca                    a3 = sext.b a5
   698: 57 0a 09                 jump @72 if a3 <s 0
      :                          @71
   701: 33 05                    s0 = 0
   703: 33 0a                    a3 = 0
   705: 28 76                    jump @87
      :                          @72
   707: 55 2c c0 00 0d           jump @74 if a5 >=u 192
      :                          @73
   712: 33 05 01                 s0 = 0x1
   715: 33 07 80                 a0 = 0xffffffffffffff80
   718: 28 4a                    jump @83
      :                          @74
   720: 55 2c e0 00 0e           jump @76 if a5 >=u 224
      :                          @75
   725: 33 05 02                 s0 = 0x2
   728: 33 07 40 ff              a0 = 0xffffffffffffff40
   732: 28 3c                    jump @83
      :                          @76
   734: 55 2c f0 00 0e           jump @78 if a5 >=u 240
      :                          @77
   739: 33 05 03                 s0 = 0x3
   742: 33 07 20 ff              a0 = 0xffffffffffffff20
   746: 28 2e                    jump @83
      :                          @78
   748: 55 2c f8 00 0e           jump @80 if a5 >=u 248
      :                          @79
   753: 33 05 04                 s0 = 0x4
   756: 33 07 10 ff              a0 = 0xffffffffffffff10
   760: 28 20                    jump @83
      :                          @80
   762: 55 2c fc 00 0e           jump @82 if a5 >=u 252
      :                          @81
   767: 33 05 05                 s0 = 0x5
   770: 33 07 08 ff              a0 = 0xffffffffffffff08
   774: 28 12                    jump @83
      :                          @82
   776: 88 ca fe 00              a3 = a5 <u 0xfe
   780: 33 07 04 ff              a0 = 0xffffffffffffff04
   784: 93 a7 02 ff              a0 = 0xffffffffffffff02 if a3 == 0
   788: 85 a5 07                 s0 = a3 ^ 0x7
   791: 01                       fallthrough
      :                          @83
   792: ac 95 06                 jump @85 if s0 <u a2
      :                          @84
   795: 28 bb 1b                 jump @380
      :                          @85
   798: 33 0a                    a3 = 0
   800: c8 7c 0c                 a5 = a5 + a0
   803: 64 5b                    a4 = s0
   805: 01                       fallthrough
      :                          @86
   806: c8 b6 07                 a0 = s1 + a4
   809: 7c 77                    a0 = u8 [a0]
   811: 97 aa 08                 a3 = a3 << 0x8
   814: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
   817: d4 7a 0a                 a3 = a3 | a0
   820: 52 0b f2                 jump @86 if a4 != 0
      :                          @87
   823: 8a 57 03                 i32 a0 = s0 << 0x3
   826: cf 7c 0c                 a5 = a5 << a0
   829: c8 ac 0c                 a5 = a5 + a3
   832: 01                       fallthrough
      :                          @88
   833: e4 98 07                 a0 = maxu(a1, a2)
   836: c9 97 07                 a0 = a0 - a2
   839: d8 c7 08                 a1 = a0 <u a5
   842: e4 c7 07                 a0 = maxu(a0, a5)
   845: c9 c7 07                 a0 = a0 - a5
   848: 88 77 20                 a0 = a0 <u 0x20
   851: d4 87 07                 a0 = a0 | a1
   854: 51 07 06                 jump @90 if a0 == 0
      :                          @89
   857: 28 51 1b                 jump @368
      :                          @90
   860: 95 15 ec 91 00           s0 = sp + 0x91ec
   865: 49 21 e8 00 ff ef        u64 [sp + 232] = 0xffffffffffffefff
   871: c8 96 06                 s1 = s1 + a2
   874: 95 17 ec 01              a0 = sp + 0x1ec
   878: 33 09 00 90 00           a2 = 0x9000
   883: 33 08                    a1 = 0
   885: 50 10 0c 03 1f           ra = 12, jump @463
      :                          @91 [@dyn 6]
   890: 81 67                    a0 = i32 [s1]
   892: 7a 57                    u32 [s0] = a0
   894: 95 17 ec 91 00           a0 = sp + 0x91ec
   899: 95 18 78 25 01           a1 = sp + 0x12578
   904: 7b 87                    u64 [a1] = a0
   906: 33 07 ae 00              a0 = 0xae
   910: 7b 17 b8 00              u64 [sp + 0xb8] = a0
   914: 7b 87 08                 u64 [a1 + 0x8] = a0
   917: 33 07 18 02 01           a0 = 0x10218
   922: 7b 57 84 00              u64 [s0 + 0x84] = a0
   926: 49 25 8c 00 02           u64 [s0 + 140] = 0x2
   931: 49 25 a4 00              u64 [s0 + 164] = 0
   935: 95 17 78 25 01           a0 = sp + 0x12578
   940: 7b 57 94 00              u64 [s0 + 0x94] = a0
   944: 49 25 9c 00 01           u64 [s0 + 156] = 0x1
   949: 95 17 78 b5 01           a0 = sp + 0x1b578
   954: 95 18 70 92 00           a1 = sp + 0x9270
   959: 50 10 0e a2 1b           ra = 14, jump @395
      :                          @92 [@dyn 7]
   964: 95 17 78 b5 01           a0 = sp + 0x1b578
   969: 82 75 08                 s0 = u64 [a0 + 0x8]
   972: 82 7b 10                 a4 = u64 [a0 + 0x10]
   975: 82 76                    s1 = u64 [a0]
   977: 33 07 02                 a0 = 0x2
   980: 33 08                    a1 = 0
   982: 33 09                    a2 = 0
   984: 64 5a                    a3 = s0
   986: 33 00 10                 ra = 0x10
   989: 0a 64                    ecalli 100 // 'log'
   991: 01                       fallthrough
      :                          @93 [@dyn 8]
   992: 82 17 e8 00              a0 = u64 [sp + 0xe8]
   996: c8 67 07                 a0 = a0 + s1
   999: 33 0c 60 00 03           a5 = 0x30060
  1004: 53 27 00 f0 20           jump @99 if a0 <u 4294963200
      :                          @94
  1009: 95 c7 00 10              a0 = a5 + 0x1000
  1013: 01                       fallthrough
      :                          @95
  1014: 82 78                    a1 = u64 [a0]
  1016: c9 87 09                 a2 = a0 - a1
  1019: ab 59 11                 jump @99 if a2 != s0
      :                          @96
  1022: c9 68 09                 a2 = a1 - s1
  1025: 01                       fallthrough
      :                          @97
  1026: 82 7a                    a3 = u64 [a0]
  1028: ab 8a f2                 jump @95 if a3 != a1
      :                          @98
  1031: 7b 79                    u64 [a0] = a2
  1033: 33 0b                    a4 = 0
  1035: 01                       fallthrough
      :                          @99
  1036: 7b 1c d0 00              u64 [sp + 0xd0] = a5
  1040: 95 16 ec 91 00           s1 = sp + 0x91ec
  1045: 81 67                    a0 = i32 [s1]
  1047: 51 07 17 01              jump @125 if a0 == 0
      :                          @100
  1051: 33 05 00 10              s0 = 0x1000
  1055: 95 17 ec 01              a0 = sp + 0x1ec
  1059: 33 09 00 10              a2 = 0x1000
  1063: 33 0a 06                 a3 = 0x6
  1066: 33 06 ff                 s1 = 0xffffffffffffffff
  1069: 33 08                    a1 = 0
  1071: 33 0b                    a4 = 0
  1073: 33 0c                    a5 = 0
  1075: 0a 12                    ecalli 18 // 'fetch'
  1077: 01                       fallthrough
      :                          @101
  1078: 52 17 ff 07              jump @103 if a0 != 4294967295
      :                          @102
  1082: 28 41 12                 jump @270
      :                          @103
  1085: 95 17 ec 01              a0 = sp + 0x1ec
  1089: 95 77 00 10              a0 = a0 + 0x1000
  1093: 33 09 00 10              a2 = 0x1000
  1097: 33 0a 06                 a3 = 0x6
  1100: 33 0b 01                 a4 = 0x1
  1103: 33 08                    a1 = 0
  1105: 33 0c                    a5 = 0
  1107: 0a 12                    ecalli 18 // 'fetch'
  1109: 01                       fallthrough
      :                          @104
  1110: 52 17 ff 07              jump @106 if a0 != 4294967295
      :                          @105
  1114: 28 21 12                 jump @270
      :                          @106
  1117: 95 15 ec 01              s0 = sp + 0x1ec
  1121: 95 57 00 20              a0 = s0 + 0x2000
  1125: 33 09 00 10              a2 = 0x1000
  1129: 33 0a 06                 a3 = 0x6
  1132: 33 0b 02                 a4 = 0x2
  1135: 33 06 ff                 s1 = 0xffffffffffffffff
  1138: 33 08                    a1 = 0
  1140: 33 0c                    a5 = 0
  1142: 0a 12                    ecalli 18 // 'fetch'
  1144: 01                       fallthrough
      :                          @107
  1145: 52 17 ff 07              jump @109 if a0 != 4294967295
      :                          @108
  1149: 28 fe 11                 jump @270
      :                          @109
  1152: 95 57 00 30              a0 = s0 + 0x3000
  1156: 33 09 00 10              a2 = 0x1000
  1160: 33 0a 06                 a3 = 0x6
  1163: 33 0b 03                 a4 = 0x3
  1166: 33 08                    a1 = 0
  1168: 33 0c                    a5 = 0
  1170: 0a 12                    ecalli 18 // 'fetch'
  1172: 01                       fallthrough
      :                          @110
  1173: 52 17 ff 07              jump @112 if a0 != 4294967295
      :                          @111
  1177: 28 e2 11                 jump @270
      :                          @112
  1180: 95 57 00 40              a0 = s0 + 0x4000
  1184: 33 09 00 10              a2 = 0x1000
  1188: 33 0a 06                 a3 = 0x6
  1191: 33 0b 04                 a4 = 0x4
  1194: 33 06 ff                 s1 = 0xffffffffffffffff
  1197: 33 08                    a1 = 0
  1199: 33 0c                    a5 = 0
  1201: 0a 12                    ecalli 18 // 'fetch'
  1203: 01                       fallthrough
      :                          @113
  1204: 52 17 ff 07              jump @115 if a0 != 4294967295
      :                          @114
  1208: 28 c3 11                 jump @270
      :                          @115
  1211: 95 57 00 50              a0 = s0 + 0x5000
  1215: 33 09 00 10              a2 = 0x1000
  1219: 33 0a 06                 a3 = 0x6
  1222: 33 0b 05                 a4 = 0x5
  1225: 33 08                    a1 = 0
  1227: 33 0c                    a5 = 0
  1229: 0a 12                    ecalli 18 // 'fetch'
  1231: 01                       fallthrough
      :                          @116
  1232: 52 17 ff 07              jump @118 if a0 != 4294967295
      :                          @117
  1236: 28 a7 11                 jump @270
      :                          @118
  1239: 95 57 00 60              a0 = s0 + 0x6000
  1243: 33 09 00 10              a2 = 0x1000
  1247: 33 0a 06                 a3 = 0x6
  1250: 33 0b 06                 a4 = 0x6
  1253: 33 06 ff                 s1 = 0xffffffffffffffff
  1256: 33 08                    a1 = 0
  1258: 33 0c                    a5 = 0
  1260: 0a 12                    ecalli 18 // 'fetch'
  1262: 01                       fallthrough
      :                          @119
  1263: 52 17 ff 07              jump @121 if a0 != 4294967295
      :                          @120
  1267: 28 88 11                 jump @270
      :                          @121
  1270: 95 57 00 70              a0 = s0 + 0x7000
  1274: 33 09 00 10              a2 = 0x1000
  1278: 33 0a 06                 a3 = 0x6
  1281: 33 0b 07                 a4 = 0x7
  1284: 33 08                    a1 = 0
  1286: 33 0c                    a5 = 0
  1288: 0a 12                    ecalli 18 // 'fetch'
  1290: 01                       fallthrough
      :                          @122
  1291: 52 17 ff 07              jump @124 if a0 != 4294967295
      :                          @123
  1295: 28 6c 11                 jump @270
      :                          @124
  1298: 95 18 ec 01              a1 = sp + 0x1ec
  1302: 95 87 00 80 00           a0 = a1 + 0x8000
  1307: 33 09 00 10              a2 = 0x1000
  1311: 33 0a 06                 a3 = 0x6
  1314: 33 0b 08                 a4 = 0x8
  1317: 33 08                    a1 = 0
  1319: 33 0c                    a5 = 0
  1321: 0a 12                    ecalli 18 // 'fetch'
  1323: 28 50 11                 jump @270
      :                          @125
  1326: 3a 05 00 00 03           s0 = u64 [0x30000]
  1331: 3a 07 08 00 03           a0 = u64 [0x30008]
  1336: 7b 17 c0 00              u64 [sp + 0xc0] = a0
  1340: 95 17 70 92 00           a0 = sp + 0x9270
  1345: 33 09 00 90 00           a2 = 0x9000
  1350: 33 08                    a1 = 0
  1352: 50 10 12 30 1d           ra = 18, jump @463
      :                          @126 [@dyn 9]
  1357: 33 00                    ra = 0
  1359: 33 0b                    a4 = 0
  1361: 49 11 38                 u64 [sp + 56] = 0
  1364: 49 16 04                 u64 [s1 + 4] = 0
  1367: 49 16 0c 01              u64 [s1 + 12] = 0x1
  1371: 49 16 14                 u64 [s1 + 20] = 0
  1374: 95 17 c8 b5 01           a0 = sp + 0x1b5c8
  1379: 95 12 b8 b5 01           t0 = sp + 0x1b5b8
  1384: 3a 03 10 00 03           t1 = u64 [0x30010]
  1389: 33 09 32 01 01           a2 = 0x10132
  1394: 3a 08 48 00 03           a1 = u64 [0x30048]
  1399: 7b 18 20                 u64 [sp + 0x20] = a1
  1402: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
  1412: 7b 18 08                 u64 [sp + 0x8] = a1
  1415: 7b 18 90 00              u64 [sp + 0x90] = a1
  1419: 3a 04 18 00 03           t2 = u64 [0x30018]
  1424: 7b 18 88 00              u64 [sp + 0x88] = a1
  1428: 3a 06 20 00 03           s1 = u64 [0x30020]
  1433: 7b 18 80 00              u64 [sp + 0x80] = a1
  1437: 3a 0c 28 00 03           a5 = u64 [0x30028]
  1442: 7b 18 78                 u64 [sp + 0x78] = a1
  1445: 3a 08 30 00 03           a1 = u64 [0x30030]
  1450: 7b 18 40                 u64 [sp + 0x40] = a1
  1453: 7b 18 70                 u64 [sp + 0x70] = a1
  1456: 3a 08 38 00 03           a1 = u64 [0x30038]
  1461: 7b 18 50                 u64 [sp + 0x50] = a1
  1464: 7b 19 98 00              u64 [sp + 0x98] = a2
  1468: 95 99 07                 a2 = a2 + 0x7
  1471: 7b 19 18                 u64 [sp + 0x18] = a2
  1474: 7b 18 68                 u64 [sp + 0x68] = a1
  1477: 3a 08 40 00 03           a1 = u64 [0x30040]
  1482: 7b 18 10                 u64 [sp + 0x10] = a1
  1485: 49 21 10 01 01           u64 [sp + 272] = 0x1
  1490: 7b 15 c8 00              u64 [sp + 0xc8] = s0
  1494: 7b 13 48                 u64 [sp + 0x48] = t1
  1497: 7b 14 60                 u64 [sp + 0x60] = t2
  1500: 7b 16 30                 u64 [sp + 0x30] = s1
  1503: 7b 1c 58                 u64 [sp + 0x58] = a5
  1506: 01                       fallthrough
      :                          @127
  1507: 7b 1b 18 01              u64 [sp + 0x118] = a4
  1511: 7b 10 28                 u64 [sp + 0x28] = ra
  1514: 33 09 80 00              a2 = 0x80
  1518: 33 08                    a1 = 0
  1520: 64 25                    s0 = t0
  1522: 50 10 14 86 1c           ra = 20, jump @463
      :                          @128 [@dyn 10]
  1527: 95 1b 78 b5 01           a4 = sp + 0x1b578
  1532: 82 17 48                 a0 = u64 [sp + 0x48]
  1535: 7b b7                    u64 [a4] = a0
  1537: 82 17 60                 a0 = u64 [sp + 0x60]
  1540: 7b b7 08                 u64 [a4 + 0x8] = a0
  1543: 7b b6 10                 u64 [a4 + 0x10] = s1
  1546: 82 14 58                 t2 = u64 [sp + 0x58]
  1549: 7b b4 18                 u64 [a4 + 0x18] = t2
  1552: 82 12 c0 00              t0 = u64 [sp + 0xc0]
  1556: 7b b2 20                 u64 [a4 + 0x20] = t0
  1559: 82 17 c8 00              a0 = u64 [sp + 0xc8]
  1563: 7b b7 28                 u64 [a4 + 0x28] = a0
  1566: 82 19 40                 a2 = u64 [sp + 0x40]
  1569: 7b b9 30                 u64 [a4 + 0x30] = a2
  1572: 82 17 50                 a0 = u64 [sp + 0x50]
  1575: 7b b7 38                 u64 [a4 + 0x38] = a0
  1578: 49 05                    u64 [s0 + 0] = 0
  1580: 49 15 08                 u64 [s0 + 8] = 0
  1583: 49 2b d0 00              u64 [a4 + 208] = 0
  1587: 46 2b d8 00              u8 [a4 + 216] = 0
  1591: 64 76                    s1 = a0
  1593: 82 17 18 01              a0 = u64 [sp + 0x118]
  1597: 51 07 f1 05              jump @165 if a0 == 0
      :                          @129
  1601: 33 03                    t1 = 0
  1603: 33 0a                    a3 = 0
  1605: 82 1c 18 01              a5 = u64 [sp + 0x118]
  1609: 01                       fallthrough
      :                          @130
  1610: 52 23 80 00 64 05        jump @153 if t1 != 128
      :                          @131
  1616: 82 b7 40                 a0 = u64 [a4 + 0x40]
  1619: 82 b6 48                 s1 = u64 [a4 + 0x48]
  1622: 95 7c 80 00              a5 = a0 + 0x80
  1626: 7b bc 40                 u64 [a4 + 0x40] = a5
  1629: 95 18 c8 b5 01           a1 = sp + 0x1b5c8
  1634: 7b 1a 08 01              u64 [sp + 0x108] = a3
  1638: 7b 1c e0 01              u64 [sp + 0x1e0] = a5
  1642: 53 17 80 0b              jump @133 if a0 <u 4294967168
      :                          @132
  1646: 95 66 01                 s1 = s1 + 0x1
  1649: 7b b6 48                 u64 [a4 + 0x48] = s1
  1652: 01                       fallthrough
      :                          @133
  1653: 95 15 78 b5 01           s0 = sp + 0x1b578
  1658: 95 17 78 25 01           a0 = sp + 0x12578
  1663: 33 09 80 00              a2 = 0x80
  1667: 50 10 16 43 1b           ra = 22, jump @445
      :                          @134 [@dyn 11]
  1672: 82 58                    a1 = u64 [s0]
  1674: 82 5c 08                 a5 = u64 [s0 + 0x8]
  1677: 82 53 10                 t1 = u64 [s0 + 0x10]
  1680: 82 52 18                 t0 = u64 [s0 + 0x18]
  1683: 82 5b 20                 a4 = u64 [s0 + 0x20]
  1686: 82 59 28                 a2 = u64 [s0 + 0x28]
  1689: 82 54 30                 t2 = u64 [s0 + 0x30]
  1692: 82 55 38                 s0 = u64 [s0 + 0x38]
  1695: 82 17 c0 00              a0 = u64 [sp + 0xc0]
  1699: 82 1a e0 01              a3 = u64 [sp + 0x1e0]
  1703: d3 a7 07                 a0 = a0 ^ a3
  1706: 7b 17 98 01              u64 [sp + 0x198] = a0
  1710: 3a 0a 28 00 03           a3 = u64 [0x30028]
  1715: 3a 07 38 00 03           a0 = u64 [0x30038]
  1720: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
  1724: 3a 07 20 00 03           a0 = u64 [0x30020]
  1729: 7b 17 d8 01              u64 [sp + 0x1d8] = a0
  1733: 3a 07 30 00 03           a0 = u64 [0x30030]
  1738: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  1742: 3a 07 18 00 03           a0 = u64 [0x30018]
  1747: 7b 17 c0 01              u64 [sp + 0x1c0] = a0
  1751: 3a 07 40 00 03           a0 = u64 [0x30040]
  1756: 7b 17 b8 01              u64 [sp + 0x1b8] = a0
  1760: 82 17 c8 00              a0 = u64 [sp + 0xc8]
  1764: d3 67 07                 a0 = a0 ^ s1
  1767: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  1771: 82 17 98 00              a0 = u64 [sp + 0x98]
  1775: 95 77 07                 a0 = a0 + 0x7
  1778: 33 06 0c                 s1 = 0xc
  1781: 7b 18 a0 00              u64 [sp + 0xa0] = a1
  1785: 7b 18 88 01              u64 [sp + 0x188] = a1
  1789: 7b 1b e0 00              u64 [sp + 0xe0] = a4
  1793: 7b 1c a8 00              u64 [sp + 0xa8] = a5
  1797: 7b 1c 90 01              u64 [sp + 0x190] = a5
  1801: 7b 19 f0 00              u64 [sp + 0xf0] = a2
  1805: 7b 19 d0 01              u64 [sp + 0x1d0] = a2
  1809: 7b 13 b0 00              u64 [sp + 0xb0] = t1
  1813: 7b 13 a8 01              u64 [sp + 0x1a8] = t1
  1817: 7b 14 f8 00              u64 [sp + 0xf8] = t2
  1821: 64 40                    ra = t2
  1823: 7b 12 d8 00              u64 [sp + 0xd8] = t0
  1827: 64 2c                    a5 = t0
  1829: 7b 15 00 01              u64 [sp + 0x100] = s0
  1833: 64 52                    t0 = s0
  1835: 64 75                    s0 = a0
  1837: 01                       fallthrough
      :                          @135
  1838: 7b 1a 80 01              u64 [sp + 0x180] = a3
  1842: 7b 10 e0 01              u64 [sp + 0x1e0] = ra
  1846: 7c 50 f9                 ra = u8 [s0 + 0xfffffffffffffff9]
  1849: 56 10 0f 54 0d           jump @226 if ra >u 15
      :                          @136
  1854: 7c 57 fa                 a0 = u8 [s0 + 0xfffffffffffffffa]
  1857: 33 08 10                 a1 = 0x10
  1860: ae 87 44 0d              jump @221 if a0 >=u a1
      :                          @137
  1864: 7c 53 fb                 t1 = u8 [s0 + 0xfffffffffffffffb]
  1867: 55 13 10 3e 0d           jump @222 if t1 >=u 16
      :                          @138
  1872: 7b 16 78 01              u64 [sp + 0x178] = s1
  1876: 7c 54 fc                 t2 = u8 [s0 + 0xfffffffffffffffc]
  1879: 55 14 10 37 0d           jump @227 if t2 >=u 16
      :                          @139
  1884: 7b 1c 70 01              u64 [sp + 0x170] = a5
  1888: 7c 5c fd                 a5 = u8 [s0 + 0xfffffffffffffffd]
  1891: 55 1c 10 27 0d           jump @223 if a5 >=u 16
      :                          @140
  1896: 7b 12 68 01              u64 [sp + 0x168] = t0
  1900: 7c 52 fe                 t0 = u8 [s0 + 0xfffffffffffffffe]
  1903: 55 12 10 20 0d           jump @228 if t0 >=u 16
      :                          @141
  1908: 7c 5a ff                 a3 = u8 [s0 + 0xffffffffffffffff]
  1911: 55 1a 10 14 0d           jump @224 if a3 >=u 16
      :                          @142
  1916: 64 b6                    s1 = a4
  1918: 7c 5b                    a4 = u8 [s0]
  1920: 55 1b 10 0c 0d           jump @225 if a4 >=u 16
      :                          @143
  1925: 7c 59 01                 a2 = u8 [s0 + 0x1]
  1928: 55 19 10 ff 0c           jump @220 if a2 >=u 16
      :                          @144
  1933: 7b 19 60 01              u64 [sp + 0x160] = a2
  1937: 7c 59 02                 a2 = u8 [s0 + 0x2]
  1940: 55 19 10 f3 0c           jump @220 if a2 >=u 16
      :                          @145
  1945: 7b 19 58 01              u64 [sp + 0x158] = a2
  1949: 7c 59 03                 a2 = u8 [s0 + 0x3]
  1952: 55 19 10 e7 0c           jump @220 if a2 >=u 16
      :                          @146
  1957: 7b 19 50 01              u64 [sp + 0x150] = a2
  1961: 7c 59 04                 a2 = u8 [s0 + 0x4]
  1964: 55 19 10 db 0c           jump @220 if a2 >=u 16
      :                          @147
  1969: 7b 19 48 01              u64 [sp + 0x148] = a2
  1973: 7c 59 05                 a2 = u8 [s0 + 0x5]
  1976: 55 19 10 cf 0c           jump @220 if a2 >=u 16
      :                          @148
  1981: 7b 19 40 01              u64 [sp + 0x140] = a2
  1985: 7c 59 06                 a2 = u8 [s0 + 0x6]
  1988: 55 19 10 c3 0c           jump @220 if a2 >=u 16
      :                          @149
  1993: 7b 19 38 01              u64 [sp + 0x138] = a2
  1997: 7c 59 07                 a2 = u8 [s0 + 0x7]
  2000: 55 19 10 b7 0c           jump @220 if a2 >=u 16
      :                          @150
  2005: 7b 19 28 01              u64 [sp + 0x128] = a2
  2009: 7c 59 08                 a2 = u8 [s0 + 0x8]
  2012: 7b 19 30 01              u64 [sp + 0x130] = a2
  2016: 55 19 10 b0 0c           jump @229 if a2 >=u 16
      :                          @151
  2021: 97 00 03                 ra = ra << 0x3
  2024: 95 19 78 25 01           a2 = sp + 0x12578
  2029: c8 90 00                 ra = ra + a2
  2032: 7b 15 20 01              u64 [sp + 0x120] = s0
  2036: 82 05                    s0 = u64 [ra]
  2038: 97 77 03                 a0 = a0 << 0x3
  2041: c8 97 07                 a0 = a0 + a2
  2044: 82 77                    a0 = u64 [a0]
  2046: 64 68                    a1 = s1
  2048: 82 16 88 01              s1 = u64 [sp + 0x188]
  2052: c8 86 06                 s1 = s1 + a1
  2055: c8 65 05                 s0 = s0 + s1
  2058: 82 16 98 01              s1 = u64 [sp + 0x198]
  2062: d3 56 06                 s1 = s1 ^ s0
  2065: 7b 16 88 01              u64 [sp + 0x188] = s1
  2069: c8 57 07                 a0 = a0 + s0
  2072: 7b 17 98 01              u64 [sp + 0x198] = a0
  2076: 97 33 03                 t1 = t1 << 0x3
  2079: c8 93 03                 t1 = t1 + a2
  2082: 82 37                    a0 = u64 [t1]
  2084: 97 44 03                 t2 = t2 << 0x3
  2087: c8 94 04                 t2 = t2 + a2
  2090: 82 45                    s0 = u64 [t2]
  2092: 82 10 d0 01              ra = u64 [sp + 0x1d0]
  2096: 82 16 90 01              s1 = u64 [sp + 0x190]
  2100: c8 06 06                 s1 = s1 + ra
  2103: c8 67 07                 a0 = a0 + s1
  2106: 82 16 a0 01              s1 = u64 [sp + 0x1a0]
  2110: d3 67 03                 t1 = a0 ^ s1
  2113: c8 57 04                 t2 = a0 + s0
  2116: 97 cc 03                 a5 = a5 << 0x3
  2119: c8 9c 0c                 a5 = a5 + a2
  2122: 82 c7                    a0 = u64 [a5]
  2124: 97 22 03                 t0 = t0 << 0x3
  2127: c8 92 02                 t0 = t0 + a2
  2130: 82 2c                    a5 = u64 [t0]
  2132: 82 16 a8 01              s1 = u64 [sp + 0x1a8]
  2136: 82 19 e0 01              a2 = u64 [sp + 0x1e0]
  2140: c8 96 06                 s1 = s1 + a2
  2143: c8 67 07                 a0 = a0 + s1
  2146: 82 16 b0 01              s1 = u64 [sp + 0x1b0]
  2150: d3 76 06                 s1 = s1 ^ a0
  2153: 7b 16 b0 01              u64 [sp + 0x1b0] = s1
  2157: c8 c7 07                 a0 = a0 + a5
  2160: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  2164: 97 aa 03                 a3 = a3 << 0x3
  2167: 95 19 78 25 01           a2 = sp + 0x12578
  2172: c8 9a 0a                 a3 = a3 + a2
  2175: 82 a7                    a0 = u64 [a3]
  2177: 97 bb 03                 a4 = a4 << 0x3
  2180: c8 9b 0b                 a4 = a4 + a2
  2183: 95 1c 78 25 01           a5 = sp + 0x12578
  2188: 82 ba                    a3 = u64 [a4]
  2190: 82 16 68 01              s1 = u64 [sp + 0x168]
  2194: 82 1b 70 01              a4 = u64 [sp + 0x170]
  2198: c8 6b 0b                 a4 = a4 + s1
  2201: c8 b7 07                 a0 = a0 + a4
  2204: 82 1b c8 01              a4 = u64 [sp + 0x1c8]
  2208: d3 7b 0b                 a4 = a4 ^ a0
  2211: c8 a7 02                 t0 = a0 + a3
  2214: 82 17 88 01              a0 = u64 [sp + 0x188]
  2218: 9e 77 20                 a0 = a0 >>r 0x20
  2221: 82 1a b8 01              a3 = u64 [sp + 0x1b8]
  2225: c8 7a 0a                 a3 = a3 + a0
  2228: d3 8a 05                 s0 = a3 ^ a1
  2231: 82 19 60 01              a2 = u64 [sp + 0x160]
  2235: 97 99 03                 a2 = a2 << 0x3
  2238: c8 c9 09                 a2 = a2 + a5
  2241: 82 99                    a2 = u64 [a2]
  2243: 9e 58 18                 a1 = s0 >>r 0x18
  2246: 7b 18 c8 01              u64 [sp + 0x1c8] = a1
  2250: 82 15 98 01              s0 = u64 [sp + 0x198]
  2254: c8 85 05                 s0 = s0 + a1
  2257: d3 57 07                 a0 = a0 ^ s0
  2260: c8 59 09                 a2 = a2 + s0
  2263: 9e 35 20                 s0 = t1 >>r 0x20
  2266: 82 18 c0 01              a1 = u64 [sp + 0x1c0]
  2270: c8 85 03                 t1 = s0 + a1
  2273: d3 03 0c                 a5 = t1 ^ ra
  2276: 9e cc 18                 a5 = a5 >>r 0x18
  2279: c8 c4 04                 t2 = t2 + a5
  2282: d3 54 05                 s0 = t2 ^ s0
  2285: 9e 58 10                 a1 = s0 >>r 0x10
  2288: 7b 18 d0 01              u64 [sp + 0x1d0] = a1
  2292: c8 38 08                 a1 = a1 + t1
  2295: 7b 18 c0 01              u64 [sp + 0x1c0] = a1
  2299: d3 c8 08                 a1 = a1 ^ a5
  2302: 9e 88 3f                 a1 = a1 >>r 0x3f
  2305: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
  2309: 9e bb 20                 a4 = a4 >>r 0x20
  2312: 82 10 80 01              ra = u64 [sp + 0x180]
  2316: c8 b0 00                 ra = ra + a4
  2319: d3 60 0c                 a5 = ra ^ s1
  2322: 9e c5 18                 s0 = a5 >>r 0x18
  2325: c8 52 03                 t1 = t0 + s0
  2328: d3 b3 0b                 a4 = t1 ^ a4
  2331: 9e bb 10                 a4 = a4 >>r 0x10
  2334: c8 b0 00                 ra = ra + a4
  2337: 7b 10 90 01              u64 [sp + 0x190] = ra
  2341: 82 1c 58 01              a5 = u64 [sp + 0x158]
  2345: 97 cc 03                 a5 = a5 << 0x3
  2348: 95 16 78 25 01           s1 = sp + 0x12578
  2353: c8 6c 0c                 a5 = a5 + s1
  2356: 82 cc                    a5 = u64 [a5]
  2358: 82 12 50 01              t0 = u64 [sp + 0x150]
  2362: 97 22 03                 t0 = t0 << 0x3
  2365: c8 62 02                 t0 = t0 + s1
  2368: 82 22                    t0 = u64 [t0]
  2370: c8 89 09                 a2 = a2 + a1
  2373: d3 9b 0b                 a4 = a4 ^ a2
  2376: 7b 1b 98 01              u64 [sp + 0x198] = a4
  2380: c8 c9 09                 a2 = a2 + a5
  2383: 7b 19 b8 01              u64 [sp + 0x1b8] = a2
  2387: c8 24 04                 t2 = t2 + t0
  2390: 9e 76 10                 s1 = a0 >>r 0x10
  2393: c8 6a 0a                 a3 = a3 + s1
  2396: 7b 1a 80 01              u64 [sp + 0x180] = a3
  2400: 82 17 b0 01              a0 = u64 [sp + 0x1b0]
  2404: 9e 79 20                 a2 = a0 >>r 0x20
  2407: 82 12 d8 01              t0 = u64 [sp + 0x1d8]
  2411: c8 92 02                 t0 = t0 + a2
  2414: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
  2418: d3 72 0c                 a5 = t0 ^ a0
  2421: 9e cb 18                 a4 = a5 >>r 0x18
  2424: 82 17 a8 01              a0 = u64 [sp + 0x1a8]
  2428: c8 b7 07                 a0 = a0 + a4
  2431: d3 79 09                 a2 = a2 ^ a0
  2434: 9e 90 10                 ra = a2 >>r 0x10
  2437: c8 02 02                 t0 = t0 + ra
  2440: d3 b2 0b                 a4 = t0 ^ a4
  2443: 9e b8 3f                 a1 = a4 >>r 0x3f
  2446: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
  2450: 82 1a 48 01              a3 = u64 [sp + 0x148]
  2454: 97 aa 03                 a3 = a3 << 0x3
  2457: 95 19 78 25 01           a2 = sp + 0x12578
  2462: c8 9a 0a                 a3 = a3 + a2
  2465: 82 aa                    a3 = u64 [a3]
  2467: 82 1b 40 01              a4 = u64 [sp + 0x140]
  2471: 97 bb 03                 a4 = a4 << 0x3
  2474: c8 9b 0b                 a4 = a4 + a2
  2477: 82 bb                    a4 = u64 [a4]
  2479: c8 84 04                 t2 = t2 + a1
  2482: d3 64 06                 s1 = t2 ^ s1
  2485: c8 4a 0a                 a3 = a3 + t2
  2488: 7b 1a e0 01              u64 [sp + 0x1e0] = a3
  2492: c8 7b 0b                 a4 = a4 + a0
  2495: 82 18 90 01              a1 = u64 [sp + 0x190]
  2499: d3 58 07                 a0 = a1 ^ s0
  2502: 9e 7c 3f                 a5 = a0 >>r 0x3f
  2505: 82 1a 38 01              a3 = u64 [sp + 0x138]
  2509: 97 aa 03                 a3 = a3 << 0x3
  2512: c8 9a 0a                 a3 = a3 + a2
  2515: 95 19 78 25 01           a2 = sp + 0x12578
  2520: 82 aa                    a3 = u64 [a3]
  2522: 82 15 28 01              s0 = u64 [sp + 0x128]
  2526: 97 55 03                 s0 = s0 << 0x3
  2529: c8 95 05                 s0 = s0 + a2
  2532: 82 55                    s0 = u64 [s0]
  2534: c8 cb 0b                 a4 = a4 + a5
  2537: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
  2541: d3 b7 07                 a0 = a0 ^ a4
  2544: 7b 17 70 01              u64 [sp + 0x170] = a0
  2548: c8 ba 0a                 a3 = a3 + a4
  2551: 7b 1a a8 01              u64 [sp + 0x1a8] = a3
  2555: c8 53 03                 t1 = t1 + s0
  2558: 82 1a c8 01              a3 = u64 [sp + 0x1c8]
  2562: 82 17 80 01              a0 = u64 [sp + 0x180]
  2566: d3 a7 0b                 a4 = a0 ^ a3
  2569: 82 15 30 01              s0 = u64 [sp + 0x130]
  2573: 97 55 03                 s0 = s0 << 0x3
  2576: c8 95 05                 s0 = s0 + a2
  2579: 82 55                    s0 = u64 [s0]
  2581: 9e bb 3f                 a4 = a4 >>r 0x3f
  2584: c8 b3 03                 t1 = t1 + a4
  2587: d3 03 04                 t2 = t1 ^ ra
  2590: c8 53 03                 t1 = t1 + s0
  2593: 82 19 98 01              a2 = u64 [sp + 0x198]
  2597: 9e 95 20                 s0 = a2 >>r 0x20
  2600: c8 25 09                 a2 = s0 + t0
  2603: 82 1a a0 01              a3 = u64 [sp + 0x1a0]
  2607: d3 a9 00                 ra = a2 ^ a3
  2610: 9e 00 18                 ra = ra >>r 0x18
  2613: 82 1a b8 01              a3 = u64 [sp + 0x1b8]
  2617: c8 0a 0a                 a3 = a3 + ra
  2620: 7b 1a 88 01              u64 [sp + 0x188] = a3
  2624: d3 a5 05                 s0 = s0 ^ a3
  2627: 9e 5a 10                 a3 = s0 >>r 0x10
  2630: 7b 1a c8 01              u64 [sp + 0x1c8] = a3
  2634: c8 a9 09                 a2 = a2 + a3
  2637: 7b 19 d8 01              u64 [sp + 0x1d8] = a2
  2641: d3 09 09                 a2 = a2 ^ ra
  2644: 9e 99 3f                 a2 = a2 >>r 0x3f
  2647: 7b 19 d0 01              u64 [sp + 0x1d0] = a2
  2651: 9e 69 20                 a2 = s1 >>r 0x20
  2654: c8 89 05                 s0 = a2 + a1
  2657: 82 16 b0 01              s1 = u64 [sp + 0x1b0]
  2661: d3 56 06                 s1 = s1 ^ s0
  2664: 9e 66 18                 s1 = s1 >>r 0x18
  2667: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
  2671: c8 68 08                 a1 = a1 + s1
  2674: 7b 18 90 01              u64 [sp + 0x190] = a1
  2678: d3 89 09                 a2 = a2 ^ a1
  2681: 9e 9a 10                 a3 = a2 >>r 0x10
  2684: 7b 1a 98 01              u64 [sp + 0x198] = a3
  2688: c8 5a 0a                 a3 = a3 + s0
  2691: 82 15 20 01              s0 = u64 [sp + 0x120]
  2695: d3 6a 09                 a2 = a3 ^ s1
  2698: 9e 90 3f                 ra = a2 >>r 0x3f
  2701: 82 18 70 01              a1 = u64 [sp + 0x170]
  2705: 9e 89 20                 a2 = a1 >>r 0x20
  2708: c8 79 08                 a1 = a2 + a0
  2711: d3 c8 07                 a0 = a1 ^ a5
  2714: 9e 77 18                 a0 = a0 >>r 0x18
  2717: 82 12 a8 01              t0 = u64 [sp + 0x1a8]
  2721: c8 72 02                 t0 = t0 + a0
  2724: 7b 12 a8 01              u64 [sp + 0x1a8] = t0
  2728: d3 92 09                 a2 = t0 ^ a2
  2731: 9e 99 10                 a2 = a2 >>r 0x10
  2734: 7b 19 a0 01              u64 [sp + 0x1a0] = a2
  2738: c8 98 08                 a1 = a1 + a2
  2741: 7b 18 b8 01              u64 [sp + 0x1b8] = a1
  2745: d3 87 07                 a0 = a0 ^ a1
  2748: 9e 72 3f                 t0 = a0 >>r 0x3f
  2751: 9e 47 20                 a0 = t2 >>r 0x20
  2754: 82 18 c0 01              a1 = u64 [sp + 0x1c0]
  2758: c8 78 08                 a1 = a1 + a0
  2761: d3 8b 0b                 a4 = a4 ^ a1
  2764: 9e b9 18                 a2 = a4 >>r 0x18
  2767: c8 93 0c                 a5 = t1 + a2
  2770: d3 c7 07                 a0 = a0 ^ a5
  2773: 9e 77 10                 a0 = a0 >>r 0x10
  2776: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  2780: c8 87 07                 a0 = a0 + a1
  2783: 7b 17 c0 01              u64 [sp + 0x1c0] = a0
  2787: d3 97 07                 a0 = a0 ^ a2
  2790: 9e 7b 3f                 a4 = a0 >>r 0x3f
  2793: 82 16 78 01              s1 = u64 [sp + 0x178]
  2797: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  2800: 95 55 10                 s0 = s0 + 0x10
  2803: 52 06 3b fc              jump @135 if s1 != 0
      :                          @152
  2807: 33 03                    t1 = 0
  2809: 82 17 a0 00              a0 = u64 [sp + 0xa0]
  2813: 82 18 88 01              a1 = u64 [sp + 0x188]
  2817: d3 87 07                 a0 = a0 ^ a1
  2820: 82 18 b8 01              a1 = u64 [sp + 0x1b8]
  2824: d3 87 07                 a0 = a0 ^ a1
  2827: 95 18 78 b5 01           a1 = sp + 0x1b578
  2832: 7b 87                    u64 [a1] = a0
  2834: 82 17 a8 00              a0 = u64 [sp + 0xa8]
  2838: 82 19 90 01              a2 = u64 [sp + 0x190]
  2842: d3 97 07                 a0 = a0 ^ a2
  2845: 82 19 c0 01              a2 = u64 [sp + 0x1c0]
  2849: d3 97 07                 a0 = a0 ^ a2
  2852: 7b 87 08                 u64 [a1 + 0x8] = a0
  2855: 82 17 b0 00              a0 = u64 [sp + 0xb0]
  2859: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
  2863: d3 97 07                 a0 = a0 ^ a2
  2866: 82 19 a8 01              a2 = u64 [sp + 0x1a8]
  2870: d3 97 07                 a0 = a0 ^ a2
  2873: 7b 87 10                 u64 [a1 + 0x10] = a0
  2876: 82 17 d8 00              a0 = u64 [sp + 0xd8]
  2880: d3 a7 07                 a0 = a0 ^ a3
  2883: d3 c7 07                 a0 = a0 ^ a5
  2886: 7b 87 18                 u64 [a1 + 0x18] = a0
  2889: 82 17 e0 00              a0 = u64 [sp + 0xe0]
  2893: 82 19 98 01              a2 = u64 [sp + 0x198]
  2897: d3 97 07                 a0 = a0 ^ a2
  2900: d3 b7 07                 a0 = a0 ^ a4
  2903: 7b 87 20                 u64 [a1 + 0x20] = a0
  2906: 82 17 f0 00              a0 = u64 [sp + 0xf0]
  2910: 82 19 d0 01              a2 = u64 [sp + 0x1d0]
  2914: d3 97 07                 a0 = a0 ^ a2
  2917: 82 19 a0 01              a2 = u64 [sp + 0x1a0]
  2921: d3 97 07                 a0 = a0 ^ a2
  2924: 7b 87 28                 u64 [a1 + 0x28] = a0
  2927: 82 17 f8 00              a0 = u64 [sp + 0xf8]
  2931: d3 70 07                 a0 = ra ^ a0
  2934: 82 19 b0 01              a2 = u64 [sp + 0x1b0]
  2938: d3 97 07                 a0 = a0 ^ a2
  2941: 7b 87 30                 u64 [a1 + 0x30] = a0
  2944: 82 17 00 01              a0 = u64 [sp + 0x100]
  2948: 82 19 c8 01              a2 = u64 [sp + 0x1c8]
  2952: d3 97 07                 a0 = a0 ^ a2
  2955: d3 27 07                 a0 = a0 ^ t0
  2958: 7b 87 38                 u64 [a1 + 0x38] = a0
  2961: 49 28 d0 00              u64 [a1 + 208] = 0
  2965: 82 1c 18 01              a5 = u64 [sp + 0x118]
  2969: 82 1a 08 01              a3 = u64 [sp + 0x108]
  2973: c9 ac 07                 a0 = a5 - a3
  2976: 33 08 80 00              a1 = 0x80
  2980: e6 87 05                 s0 = minu(a0, a1)
  2983: 95 17 c8 b5 01           a0 = sp + 0x1b5c8
  2988: 28 22                    jump @157
      :                          @153
  2990: 9a 37 80 00              a0 = 0x80 - t1
  2994: c9 ac 08                 a1 = a5 - a3
  2997: e6 87 05                 s0 = minu(a0, a1)
  3000: c8 35 09                 a2 = s0 + t1
  3003: 95 17 c8 b5 01           a0 = sp + 0x1b5c8
  3008: ae 59 06                 jump @155 if a2 >=u s0
      :                          @154
  3011: 28 0e 13                 jump @375
      :                          @155
  3014: 54 29 80 00 08           jump @157 if a2 <=u 128
      :                          @156
  3019: 28 05 13                 jump @374
      :                          @157
  3022: c8 a5 06                 s1 = s0 + a3
  3025: ae 56 06                 jump @159 if s1 >=u s0
      :                          @158
  3028: 28 fa 12                 jump @372
      :                          @159
  3031: ae 6c 06                 jump @161 if a5 >=u s1
      :                          @160
  3034: 28 f5 12                 jump @373
      :                          @161
  3037: c8 37 07                 a0 = a0 + t1
  3040: 82 18 10 01              a1 = u64 [sp + 0x110]
  3044: c8 a8 08                 a1 = a1 + a3
  3047: 64 59                    a2 = s0
  3049: 50 10 18 dd 15           ra = 24, jump @445
      :                          @162 [@dyn 12]
  3054: 95 1b 78 b5 01           a4 = sp + 0x1b578
  3059: 82 b7 d0 00              a0 = u64 [a4 + 0xd0]
  3063: c8 57 03                 t1 = a0 + s0
  3066: 7b b3 d0 00              u64 [a4 + 0xd0] = t1
  3070: 64 6a                    a3 = s1
  3072: 82 1c 18 01              a5 = u64 [sp + 0x118]
  3076: ac c6 46 fa              jump @130 if s1 <u a5
      :                          @163
  3080: 7c b7 d8 00              a0 = u8 [a4 + 0xd8]
  3084: 95 19 ec 91 00           a2 = sp + 0x91ec
  3089: 51 07 f2 07              jump @215 if a0 == 0
      :                          @164
  3093: 49 19 34                 u64 [a2 + 52] = 0
  3096: 49 19 2c                 u64 [a2 + 44] = 0
  3099: 49 19 24                 u64 [a2 + 36] = 0
  3102: 49 19 1c                 u64 [a2 + 28] = 0
  3105: 95 15 78 b5 01           s0 = sp + 0x1b578
  3110: 95 16 ec 91 00           s1 = sp + 0x91ec
  3115: 28 66 05                 jump @188
      :                          @165
  3118: 95 17 78 45 02           a0 = sp + 0x24578
  3123: 33 09 80 00              a2 = 0x80
  3127: 33 08                    a1 = 0
  3129: 64 45                    s0 = t2
  3131: 50 10 1a 3d 16           ra = 26, jump @463
      :                          @166 [@dyn 13]
  3136: 33 09                    a2 = 0
  3138: 7b 16 a0 01              u64 [sp + 0x1a0] = s1
  3142: 82 1a 40                 a3 = u64 [sp + 0x40]
  3145: 7b 1a d8 01              u64 [sp + 0x1d8] = a3
  3149: 33 06                    s1 = 0
  3151: 82 17 c8 00              a0 = u64 [sp + 0xc8]
  3155: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  3159: 82 17 c0 00              a0 = u64 [sp + 0xc0]
  3163: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
  3167: 7b 15 b0 00              u64 [sp + 0xb0] = s0
  3171: 33 05                    s0 = 0
  3173: 82 17 30                 a0 = u64 [sp + 0x30]
  3176: 7b 17 a8 00              u64 [sp + 0xa8] = a0
  3180: 82 17 60                 a0 = u64 [sp + 0x60]
  3183: 7b 17 e0 00              u64 [sp + 0xe0] = a0
  3187: 82 17 48                 a0 = u64 [sp + 0x48]
  3190: 7b 17 d8 00              u64 [sp + 0xd8] = a0
  3194: 95 18 c8 b5 01           a1 = sp + 0x1b5c8
  3199: 95 17 78 45 02           a0 = sp + 0x24578
  3204: 50 10 1c 42 15           ra = 28, jump @445
      :                          @167 [@dyn 14]
  3209: 95 17 78 25 01           a0 = sp + 0x12578
  3214: 95 18 78 45 02           a1 = sp + 0x24578
  3219: 33 09 80 00              a2 = 0x80
  3223: 50 10 1e 2f 15           ra = 30, jump @445
      :                          @168 [@dyn 15]
  3228: 82 17 c0 00              a0 = u64 [sp + 0xc0]
  3232: d3 76 00                 ra = s1 ^ a0
  3235: 82 17 c8 00              a0 = u64 [sp + 0xc8]
  3239: d3 75 05                 s0 = s0 ^ a0
  3242: 33 0a 0c                 a3 = 0xc
  3245: 82 17 18                 a0 = u64 [sp + 0x18]
  3248: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
  3252: 82 1b d8 00              a4 = u64 [sp + 0xd8]
  3256: 7b 1b b0 01              u64 [sp + 0x1b0] = a4
  3260: 82 17 10                 a0 = u64 [sp + 0x10]
  3263: 7b 17 b8 01              u64 [sp + 0x1b8] = a0
  3267: 82 19 e0 00              a2 = u64 [sp + 0xe0]
  3271: 64 9c                    a5 = a2
  3273: 82 12 60                 t0 = u64 [sp + 0x60]
  3276: 82 14 a8 00              t2 = u64 [sp + 0xa8]
  3280: 82 16 20                 s1 = u64 [sp + 0x20]
  3283: 82 17 30                 a0 = u64 [sp + 0x30]
  3286: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
  3290: 82 13 b0 00              t1 = u64 [sp + 0xb0]
  3294: 82 17 50                 a0 = u64 [sp + 0x50]
  3297: 7b 17 98 01              u64 [sp + 0x198] = a0
  3301: 82 17 58                 a0 = u64 [sp + 0x58]
  3304: 7b 17 c0 01              u64 [sp + 0x1c0] = a0
  3308: 7b 19 e0 00              u64 [sp + 0xe0] = a2
  3312: 7b 1b d8 00              u64 [sp + 0xd8] = a4
  3316: 01                       fallthrough
      :                          @169
  3317: 7b 10 80 01              u64 [sp + 0x180] = ra
  3321: 7b 15 88 01              u64 [sp + 0x188] = s0
  3325: 7b 1c 90 01              u64 [sp + 0x190] = a5
  3329: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
  3333: 7c 70 f9                 ra = u8 [a0 + 0xfffffffffffffff9]
  3336: 56 10 0f 85 07           jump @226 if ra >u 15
      :                          @170
  3341: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
  3345: 7c 75 fa                 s0 = u8 [a0 + 0xfffffffffffffffa]
  3348: 33 08 10                 a1 = 0x10
  3351: ae 85 7a 07              jump @230 if s0 >=u a1
      :                          @171
  3355: 7b 16 78 01              u64 [sp + 0x178] = s1
  3359: 82 1c e0 01              a5 = u64 [sp + 0x1e0]
  3363: 7c c7 fb                 a0 = u8 [a5 + 0xfffffffffffffffb]
  3366: 55 17 10 62 07           jump @221 if a0 >=u 16
      :                          @172
  3371: 7b 14 68 01              u64 [sp + 0x168] = t2
  3375: 7b 13 70 01              u64 [sp + 0x170] = t1
  3379: 82 1c e0 01              a5 = u64 [sp + 0x1e0]
  3383: 7c c3 fc                 t1 = u8 [a5 + 0xfffffffffffffffc]
  3386: 55 13 10 4f 07           jump @222 if t1 >=u 16
      :                          @173
  3391: 82 1c e0 01              a5 = u64 [sp + 0x1e0]
  3395: 7c cc fd                 a5 = u8 [a5 + 0xfffffffffffffffd]
  3398: 55 1c 10 44 07           jump @223 if a5 >=u 16
      :                          @174
  3403: 64 54                    t2 = s0
  3405: 7b 12 60 01              u64 [sp + 0x160] = t0
  3409: 82 16 e0 01              s1 = u64 [sp + 0x1e0]
  3413: 7c 65 fe                 s0 = u8 [s1 + 0xfffffffffffffffe]
  3416: 55 15 10 39 07           jump @230 if s0 >=u 16
      :                          @175
  3421: 7b 1a 58 01              u64 [sp + 0x158] = a3
  3425: 82 1a e0 01              a3 = u64 [sp + 0x1e0]
  3429: 7c aa ff                 a3 = u8 [a3 + 0xffffffffffffffff]
  3432: 55 1a 10 23 07           jump @224 if a3 >=u 16
      :                          @176
  3437: 82 1b e0 01              a4 = u64 [sp + 0x1e0]
  3441: 7c bb                    a4 = u8 [a4]
  3443: 55 1b 10 19 07           jump @225 if a4 >=u 16
      :                          @177
  3448: 7b 17 50 01              u64 [sp + 0x150] = a0
  3452: 82 19 e0 01              a2 = u64 [sp + 0x1e0]
  3456: 7c 97 01                 a0 = u8 [a2 + 0x1]
  3459: 55 17 10 05 07           jump @221 if a0 >=u 16
      :                          @178
  3464: 64 32                    t0 = t1
  3466: 82 16 e0 01              s1 = u64 [sp + 0x1e0]
  3470: 7c 63 02                 t1 = u8 [s1 + 0x2]
  3473: 55 13 10 f8 06           jump @222 if t1 >=u 16
      :                          @179
  3478: 7b 15 48 01              u64 [sp + 0x148] = s0
  3482: 7b 1c 40 01              u64 [sp + 0x140] = a5
  3486: 82 16 e0 01              s1 = u64 [sp + 0x1e0]
  3490: 7c 6c 03                 a5 = u8 [s1 + 0x3]
  3493: 55 1c 10 e5 06           jump @223 if a5 >=u 16
      :                          @180
  3498: 7b 1b 38 01              u64 [sp + 0x138] = a4
  3502: 82 16 e0 01              s1 = u64 [sp + 0x1e0]
  3506: 7c 6b 04                 a4 = u8 [s1 + 0x4]
  3509: 55 1b 10 d7 06           jump @225 if a4 >=u 16
      :                          @181
  3514: 7b 1a 30 01              u64 [sp + 0x130] = a3
  3518: 82 16 e0 01              s1 = u64 [sp + 0x1e0]
  3522: 7c 6a 05                 a3 = u8 [s1 + 0x5]
  3525: 55 1a 10 c6 06           jump @224 if a3 >=u 16
      :                          @182
  3530: 82 16 e0 01              s1 = u64 [sp + 0x1e0]
  3534: 7c 69 06                 a2 = u8 [s1 + 0x6]
  3537: 55 19 10 b6 06           jump @220 if a2 >=u 16
      :                          @183
  3542: 7b 17 28 01              u64 [sp + 0x128] = a0
  3546: 82 16 e0 01              s1 = u64 [sp + 0x1e0]
  3550: 7c 65 07                 s0 = u8 [s1 + 0x7]
  3553: 55 15 10 b0 06           jump @230 if s0 >=u 16
      :                          @184
  3558: 82 16 e0 01              s1 = u64 [sp + 0x1e0]
  3562: 7c 66 08                 s1 = u8 [s1 + 0x8]
  3565: 53 16 10 07              jump @186 if s1 <u 16
      :                          @185
  3569: 28 db 10                 jump @370
      :                          @186
  3572: 97 00 03                 ra = ra << 0x3
  3575: 95 18 78 25 01           a1 = sp + 0x12578
  3580: c8 80 00                 ra = ra + a1
  3583: 7b 16 20 01              u64 [sp + 0x120] = s1
  3587: 7b 15 18 01              u64 [sp + 0x118] = s0
  3591: 82 05                    s0 = u64 [ra]
  3593: 97 47 03                 a0 = t2 << 0x3
  3596: c8 87 07                 a0 = a0 + a1
  3599: 82 70                    ra = u64 [a0]
  3601: 82 16 b0 01              s1 = u64 [sp + 0x1b0]
  3605: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
  3609: c8 76 06                 s1 = s1 + a0
  3612: c8 65 05                 s0 = s0 + s1
  3615: 82 16 80 01              s1 = u64 [sp + 0x180]
  3619: d3 56 06                 s1 = s1 ^ s0
  3622: 7b 16 f0 00              u64 [sp + 0xf0] = s1
  3626: c8 05 07                 a0 = s0 + ra
  3629: 7b 17 f8 00              u64 [sp + 0xf8] = a0
  3633: 7b 19 b0 01              u64 [sp + 0x1b0] = a2
  3637: 7b 1a 80 01              u64 [sp + 0x180] = a3
  3641: 7b 1b 10 01              u64 [sp + 0x110] = a4
  3645: 7b 1c 08 01              u64 [sp + 0x108] = a5
  3649: 7b 13 00 01              u64 [sp + 0x100] = t1
  3653: 82 13 50 01              t1 = u64 [sp + 0x150]
  3657: 97 33 03                 t1 = t1 << 0x3
  3660: c8 83 03                 t1 = t1 + a1
  3663: 82 37                    a0 = u64 [t1]
  3665: 97 24 03                 t2 = t0 << 0x3
  3668: c8 84 04                 t2 = t2 + a1
  3671: 82 45                    s0 = u64 [t2]
  3673: 82 10 a8 01              ra = u64 [sp + 0x1a8]
  3677: 82 16 90 01              s1 = u64 [sp + 0x190]
  3681: c8 06 06                 s1 = s1 + ra
  3684: c8 67 07                 a0 = a0 + s1
  3687: 82 16 88 01              s1 = u64 [sp + 0x188]
  3691: d3 67 03                 t1 = a0 ^ s1
  3694: c8 57 04                 t2 = a0 + s0
  3697: 82 1c 40 01              a5 = u64 [sp + 0x140]
  3701: 97 cc 03                 a5 = a5 << 0x3
  3704: c8 8c 0c                 a5 = a5 + a1
  3707: 82 c7                    a0 = u64 [a5]
  3709: 82 12 48 01              t0 = u64 [sp + 0x148]
  3713: 97 22 03                 t0 = t0 << 0x3
  3716: c8 82 02                 t0 = t0 + a1
  3719: 82 2c                    a5 = u64 [t0]
  3721: 82 16 68 01              s1 = u64 [sp + 0x168]
  3725: 82 18 d8 01              a1 = u64 [sp + 0x1d8]
  3729: c8 86 06                 s1 = s1 + a1
  3732: c8 67 07                 a0 = a0 + s1
  3735: 82 16 78 01              s1 = u64 [sp + 0x178]
  3739: d3 76 06                 s1 = s1 ^ a0
  3742: 7b 16 90 01              u64 [sp + 0x190] = s1
  3746: c8 c7 07                 a0 = a0 + a5
  3749: 7b 17 88 01              u64 [sp + 0x188] = a0
  3753: 82 1a 30 01              a3 = u64 [sp + 0x130]
  3757: 97 aa 03                 a3 = a3 << 0x3
  3760: 95 18 78 25 01           a1 = sp + 0x12578
  3765: c8 8a 0a                 a3 = a3 + a1
  3768: 82 a7                    a0 = u64 [a3]
  3770: 82 1b 38 01              a4 = u64 [sp + 0x138]
  3774: 97 bb 03                 a4 = a4 << 0x3
  3777: c8 8b 0b                 a4 = a4 + a1
  3780: 95 18 78 25 01           a1 = sp + 0x12578
  3785: 82 ba                    a3 = u64 [a4]
  3787: 82 16 a0 01              s1 = u64 [sp + 0x1a0]
  3791: 82 1b 70 01              a4 = u64 [sp + 0x170]
  3795: c8 6b 0b                 a4 = a4 + s1
  3798: c8 b7 07                 a0 = a0 + a4
  3801: 82 1b 98 01              a4 = u64 [sp + 0x198]
  3805: d3 7b 0b                 a4 = a4 ^ a0
  3808: c8 a7 02                 t0 = a0 + a3
  3811: 82 17 f0 00              a0 = u64 [sp + 0xf0]
  3815: 9e 77 20                 a0 = a0 >>r 0x20
  3818: 82 1a b8 01              a3 = u64 [sp + 0x1b8]
  3822: c8 7a 0a                 a3 = a3 + a0
  3825: 82 15 d0 01              s0 = u64 [sp + 0x1d0]
  3829: d3 a5 05                 s0 = s0 ^ a3
  3832: 82 19 28 01              a2 = u64 [sp + 0x128]
  3836: 97 99 03                 a2 = a2 << 0x3
  3839: c8 89 09                 a2 = a2 + a1
  3842: 82 99                    a2 = u64 [a2]
  3844: 9e 58 18                 a1 = s0 >>r 0x18
  3847: 7b 18 b8 01              u64 [sp + 0x1b8] = a1
  3851: 82 15 f8 00              s0 = u64 [sp + 0xf8]
  3855: c8 85 05                 s0 = s0 + a1
  3858: d3 57 07                 a0 = a0 ^ s0
  3861: c8 59 09                 a2 = a2 + s0
  3864: 9e 35 20                 s0 = t1 >>r 0x20
  3867: 82 18 60 01              a1 = u64 [sp + 0x160]
  3871: c8 85 03                 t1 = s0 + a1
  3874: d3 03 0c                 a5 = t1 ^ ra
  3877: 9e cc 18                 a5 = a5 >>r 0x18
  3880: c8 c4 04                 t2 = t2 + a5
  3883: d3 54 05                 s0 = t2 ^ s0
  3886: 9e 58 10                 a1 = s0 >>r 0x10
  3889: 7b 18 a8 01              u64 [sp + 0x1a8] = a1
  3893: c8 38 08                 a1 = a1 + t1
  3896: 7b 18 d0 01              u64 [sp + 0x1d0] = a1
  3900: d3 c8 08                 a1 = a1 ^ a5
  3903: 9e 88 3f                 a1 = a1 >>r 0x3f
  3906: 7b 18 98 01              u64 [sp + 0x198] = a1
  3910: 9e bb 20                 a4 = a4 >>r 0x20
  3913: 82 10 c0 01              ra = u64 [sp + 0x1c0]
  3917: c8 b0 00                 ra = ra + a4
  3920: d3 60 0c                 a5 = ra ^ s1
  3923: 9e c5 18                 s0 = a5 >>r 0x18
  3926: c8 52 03                 t1 = t0 + s0
  3929: d3 b3 0b                 a4 = t1 ^ a4
  3932: 9e bb 10                 a4 = a4 >>r 0x10
  3935: c8 b0 00                 ra = ra + a4
  3938: 7b 10 70 01              u64 [sp + 0x170] = ra
  3942: 82 1c 00 01              a5 = u64 [sp + 0x100]
  3946: 97 cc 03                 a5 = a5 << 0x3
  3949: 95 16 78 25 01           s1 = sp + 0x12578
  3954: c8 6c 0c                 a5 = a5 + s1
  3957: 82 cc                    a5 = u64 [a5]
  3959: 82 12 08 01              t0 = u64 [sp + 0x108]
  3963: 97 22 03                 t0 = t0 << 0x3
  3966: c8 62 02                 t0 = t0 + s1
  3969: 82 22                    t0 = u64 [t0]
  3971: c8 89 09                 a2 = a2 + a1
  3974: d3 9b 0b                 a4 = a4 ^ a2
  3977: 7b 1b a0 01              u64 [sp + 0x1a0] = a4
  3981: c8 c9 09                 a2 = a2 + a5
  3984: 7b 19 c0 01              u64 [sp + 0x1c0] = a2
  3988: c8 24 04                 t2 = t2 + t0
  3991: 9e 76 10                 s1 = a0 >>r 0x10
  3994: c8 6a 0a                 a3 = a3 + s1
  3997: 7b 1a 78 01              u64 [sp + 0x178] = a3
  4001: 82 17 90 01              a0 = u64 [sp + 0x190]
  4005: 9e 79 20                 a2 = a0 >>r 0x20
  4008: 82 12 c8 01              t0 = u64 [sp + 0x1c8]
  4012: c8 92 02                 t0 = t0 + a2
  4015: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
  4019: d3 72 0c                 a5 = t0 ^ a0
  4022: 9e cb 18                 a4 = a5 >>r 0x18
  4025: 82 17 88 01              a0 = u64 [sp + 0x188]
  4029: c8 b7 07                 a0 = a0 + a4
  4032: d3 79 09                 a2 = a2 ^ a0
  4035: 9e 9c 10                 a5 = a2 >>r 0x10
  4038: c8 2c 00                 ra = a5 + t0
  4041: d3 b0 0b                 a4 = ra ^ a4
  4044: 9e b8 3f                 a1 = a4 >>r 0x3f
  4047: 7b 18 90 01              u64 [sp + 0x190] = a1
  4051: 82 1a 10 01              a3 = u64 [sp + 0x110]
  4055: 97 aa 03                 a3 = a3 << 0x3
  4058: 95 19 78 25 01           a2 = sp + 0x12578
  4063: c8 9a 0a                 a3 = a3 + a2
  4066: 82 aa                    a3 = u64 [a3]
  4068: 82 1b 80 01              a4 = u64 [sp + 0x180]
  4072: 97 bb 03                 a4 = a4 << 0x3
  4075: c8 9b 0b                 a4 = a4 + a2
  4078: 82 bb                    a4 = u64 [a4]
  4080: c8 84 04                 t2 = t2 + a1
  4083: d3 64 06                 s1 = t2 ^ s1
  4086: c8 4a 0a                 a3 = a3 + t2
  4089: 7b 1a d8 01              u64 [sp + 0x1d8] = a3
  4093: c8 7b 0b                 a4 = a4 + a0
  4096: 82 18 70 01              a1 = u64 [sp + 0x170]
  4100: d3 58 07                 a0 = a1 ^ s0
  4103: 9e 72 3f                 t0 = a0 >>r 0x3f
  4106: 82 1a b0 01              a3 = u64 [sp + 0x1b0]
  4110: 97 aa 03                 a3 = a3 << 0x3
  4113: c8 9a 0a                 a3 = a3 + a2
  4116: 95 19 78 25 01           a2 = sp + 0x12578
  4121: 82 aa                    a3 = u64 [a3]
  4123: 82 15 18 01              s0 = u64 [sp + 0x118]
  4127: 97 55 03                 s0 = s0 << 0x3
  4130: c8 95 05                 s0 = s0 + a2
  4133: 82 55                    s0 = u64 [s0]
  4135: c8 2b 0b                 a4 = a4 + t0
  4138: 82 17 a8 01              a0 = u64 [sp + 0x1a8]
  4142: d3 7b 04                 t2 = a4 ^ a0
  4145: c8 ba 0a                 a3 = a3 + a4
  4148: 7b 1a 80 01              u64 [sp + 0x180] = a3
  4152: c8 53 03                 t1 = t1 + s0
  4155: 82 1a b8 01              a3 = u64 [sp + 0x1b8]
  4159: 82 17 78 01              a0 = u64 [sp + 0x178]
  4163: d3 a7 0b                 a4 = a0 ^ a3
  4166: 82 15 20 01              s0 = u64 [sp + 0x120]
  4170: 97 55 03                 s0 = s0 << 0x3
  4173: c8 95 05                 s0 = s0 + a2
  4176: 82 55                    s0 = u64 [s0]
  4178: 9e bb 3f                 a4 = a4 >>r 0x3f
  4181: c8 b3 03                 t1 = t1 + a4
  4184: d3 c3 09                 a2 = t1 ^ a5
  4187: 7b 19 88 01              u64 [sp + 0x188] = a2
  4191: c8 53 0a                 a3 = t1 + s0
  4194: 82 19 a0 01              a2 = u64 [sp + 0x1a0]
  4198: 9e 95 20                 s0 = a2 >>r 0x20
  4201: c8 05 09                 a2 = s0 + ra
  4204: 82 1c 98 01              a5 = u64 [sp + 0x198]
  4208: d3 c9 00                 ra = a2 ^ a5
  4211: 9e 00 18                 ra = ra >>r 0x18
  4214: 82 1c c0 01              a5 = u64 [sp + 0x1c0]
  4218: c8 0c 0c                 a5 = a5 + ra
  4221: 7b 1c b0 01              u64 [sp + 0x1b0] = a5
  4225: d3 c5 05                 s0 = s0 ^ a5
  4228: 9e 55 10                 s0 = s0 >>r 0x10
  4231: 7b 15 98 01              u64 [sp + 0x198] = s0
  4235: c8 59 09                 a2 = a2 + s0
  4238: 7b 19 c8 01              u64 [sp + 0x1c8] = a2
  4242: d3 09 09                 a2 = a2 ^ ra
  4245: 9e 99 3f                 a2 = a2 >>r 0x3f
  4248: 7b 19 a8 01              u64 [sp + 0x1a8] = a2
  4252: 9e 69 20                 a2 = s1 >>r 0x20
  4255: c8 89 05                 s0 = a2 + a1
  4258: 82 16 90 01              s1 = u64 [sp + 0x190]
  4262: d3 56 06                 s1 = s1 ^ s0
  4265: 9e 66 18                 s1 = s1 >>r 0x18
  4268: 82 1c d8 01              a5 = u64 [sp + 0x1d8]
  4272: c8 6c 0c                 a5 = a5 + s1
  4275: d3 c9 09                 a2 = a2 ^ a5
  4278: 9e 90 10                 ra = a2 >>r 0x10
  4281: c8 50 09                 a2 = ra + s0
  4284: 7b 19 c0 01              u64 [sp + 0x1c0] = a2
  4288: d3 69 09                 a2 = a2 ^ s1
  4291: 9e 98 3f                 a1 = a2 >>r 0x3f
  4294: 7b 18 d8 01              u64 [sp + 0x1d8] = a1
  4298: 9e 49 20                 a2 = t2 >>r 0x20
  4301: c8 79 08                 a1 = a2 + a0
  4304: d3 28 07                 a0 = a1 ^ t0
  4307: 9e 77 18                 a0 = a0 >>r 0x18
  4310: 82 14 80 01              t2 = u64 [sp + 0x180]
  4314: c8 74 04                 t2 = t2 + a0
  4317: d3 94 09                 a2 = t2 ^ a2
  4320: 9e 95 10                 s0 = a2 >>r 0x10
  4323: c8 58 08                 a1 = a1 + s0
  4326: 7b 18 b8 01              u64 [sp + 0x1b8] = a1
  4330: d3 87 07                 a0 = a0 ^ a1
  4333: 9e 77 3f                 a0 = a0 >>r 0x3f
  4336: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  4340: 82 17 88 01              a0 = u64 [sp + 0x188]
  4344: 9e 77 20                 a0 = a0 >>r 0x20
  4347: 82 18 d0 01              a1 = u64 [sp + 0x1d0]
  4351: c8 78 08                 a1 = a1 + a0
  4354: d3 8b 0b                 a4 = a4 ^ a1
  4357: 9e b9 18                 a2 = a4 >>r 0x18
  4360: c8 9a 03                 t1 = a3 + a2
  4363: d3 73 07                 a0 = t1 ^ a0
  4366: 9e 76 10                 s1 = a0 >>r 0x10
  4369: c8 86 02                 t0 = s1 + a1
  4372: d3 92 07                 a0 = t0 ^ a2
  4375: 9e 77 3f                 a0 = a0 >>r 0x3f
  4378: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
  4382: 82 1a 58 01              a3 = u64 [sp + 0x158]
  4386: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  4389: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
  4393: 95 77 10                 a0 = a0 + 0x10
  4396: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
  4400: 82 19 e0 00              a2 = u64 [sp + 0xe0]
  4404: 82 1b d8 00              a4 = u64 [sp + 0xd8]
  4408: 52 0a bd fb              jump @169 if a3 != 0
      :                          @187
  4412: 82 17 b0 01              a0 = u64 [sp + 0x1b0]
  4416: d3 b7 07                 a0 = a0 ^ a4
  4419: 82 18 b8 01              a1 = u64 [sp + 0x1b8]
  4423: d3 87 07                 a0 = a0 ^ a1
  4426: d3 9c 08                 a1 = a5 ^ a2
  4429: d3 28 08                 a1 = a1 ^ t0
  4432: 82 19 a8 00              a2 = u64 [sp + 0xa8]
  4436: 82 1a c8 01              a3 = u64 [sp + 0x1c8]
  4440: d3 a9 09                 a2 = a2 ^ a3
  4443: d3 49 09                 a2 = a2 ^ t2
  4446: 82 1a b0 00              a3 = u64 [sp + 0xb0]
  4450: 82 1b c0 01              a4 = u64 [sp + 0x1c0]
  4454: d3 ba 0a                 a3 = a3 ^ a4
  4457: d3 3a 0a                 a3 = a3 ^ t1
  4460: 95 15 78 b5 01           s0 = sp + 0x1b578
  4465: 7b 5a 18                 u64 [s0 + 0x18] = a3
  4468: 33 0b ec 91 00           a4 = 0x91ec
  4473: c8 b1 06                 s1 = sp + a4
  4476: 7b 6a 34                 u64 [s1 + 0x34] = a3
  4479: 7b 59 10                 u64 [s0 + 0x10] = a2
  4482: 7b 69 2c                 u64 [s1 + 0x2c] = a2
  4485: 7b 58 08                 u64 [s0 + 0x8] = a1
  4488: 7b 68 24                 u64 [s1 + 0x24] = a1
  4491: 7b 57                    u64 [s0] = a0
  4493: 7b 67 1c                 u64 [s1 + 0x1c] = a0
  4496: 01                       fallthrough
      :                          @188
  4497: 82 17 38                 a0 = u64 [sp + 0x38]
  4500: 97 77 05                 a0 = a0 << 0x5
  4503: 95 18 70 92 00           a1 = sp + 0x9270
  4508: c8 87 07                 a0 = a0 + a1
  4511: 95 18 08 92 00           a1 = sp + 0x9208
  4516: 33 09 20                 a2 = 0x20
  4519: 50 10 20 1f 10           ra = 32, jump @445
      :                          @189 [@dyn 16]
  4524: 95 17 08 92 00           a0 = sp + 0x9208
  4529: 7b 67 54                 u64 [s1 + 0x54] = a0
  4532: 95 18 78 45 02           a1 = sp + 0x24578
  4537: 95 17 40 92 00           a0 = sp + 0x9240
  4542: 7b 87                    u64 [a1] = a0
  4544: 33 07 02                 a0 = 0x2
  4547: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
  4551: 7b 87 08                 u64 [a1 + 0x8] = a0
  4554: 49 05 02                 u64 [s0 + 0] = 0x2
  4557: 49 15 10                 u64 [s0 + 16] = 0
  4560: 49 15 18 02              u64 [s0 + 24] = 0x2
  4564: 49 15 20                 u64 [s0 + 32] = 0
  4567: 14 07 20 00 00 00 08 00 00 00 a0 = 0x800000020
  4577: 7b 57 28                 u64 [s0 + 0x28] = a0
  4580: 46 15 30 03              u8 [s0 + 48] = 0x3
  4584: 33 08 f8 01 01           a1 = 0x101f8
  4589: 95 17 78 25 01           a0 = sp + 0x12578
  4594: 7b 18 c0 01              u64 [sp + 0x1c0] = a1
  4598: 7b 78                    u64 [a0] = a1
  4600: 49 17 08 01              u64 [a0 + 8] = 0x1
  4604: 95 18 78 b5 01           a1 = sp + 0x1b578
  4609: 7b 78 20                 u64 [a0 + 0x20] = a1
  4612: 49 17 28 01              u64 [a0 + 40] = 0x1
  4616: 95 18 78 45 02           a1 = sp + 0x24578
  4621: 7b 78 10                 u64 [a0 + 0x10] = a1
  4624: 49 21 10 01 01           u64 [sp + 272] = 0x1
  4629: 49 17 18 01              u64 [a0 + 24] = 0x1
  4633: 95 17 28 92 00           a0 = sp + 0x9228
  4638: 95 18 78 25 01           a1 = sp + 0x12578
  4643: 50 10 22 3e 0d           ra = 34, jump @395
      :                          @190 [@dyn 17]
  4648: 82 68 3c                 a1 = u64 [s1 + 0x3c]
  4651: 49 21 18 01              u64 [sp + 280] = 0
  4655: 82 17 28                 a0 = u64 [sp + 0x28]
  4658: 33 00                    ra = 0
  4660: 95 12 ec 91 00           t0 = sp + 0x91ec
  4665: 82 13 d0 00              t1 = u64 [sp + 0xd0]
  4669: 82 19 08                 a2 = u64 [sp + 0x8]
  4672: 33 04 00 10              t2 = 0x1000
  4676: aa 98 64 01              jump @207 if a1 == a2
      :                          @191
  4680: 82 27 44                 a0 = u64 [t0 + 0x44]
  4683: 82 28 3c                 a1 = u64 [t0 + 0x3c]
  4686: 82 29 4c                 a2 = u64 [t0 + 0x4c]
  4689: 33 06                    s1 = 0
  4691: 7b 27 5c                 u64 [t0 + 0x5c] = a0
  4694: 7b 28 54                 u64 [t0 + 0x54] = a1
  4697: 7b 19 18 01              u64 [sp + 0x118] = a2
  4701: 7b 29 64                 u64 [t0 + 0x64] = a2
  4704: 95 18 78 b5 01           a1 = sp + 0x1b578
  4709: 28 13                    jump @193
      :                          @192
  4711: 82 16 e0 01              s1 = u64 [sp + 0x1e0]
  4715: 95 66 01                 s1 = s1 + 0x1
  4718: 95 18 78 b5 01           a1 = sp + 0x1b578
  4723: 51 16 1f 2e 01           jump @206 if s1 == 31
      :                          @193
  4728: 95 17 09 92 00           a0 = sp + 0x9209
  4733: c8 67 07                 a0 = a0 + s1
  4736: 7b 27 6c                 u64 [t0 + 0x6c] = a0
  4739: 14 07 20 00 00 00 08 00 00 00 a0 = 0x800000020
  4749: 7b 87 28                 u64 [a1 + 0x28] = a0
  4752: 95 17 58 92 00           a0 = sp + 0x9258
  4757: 7b 27 74                 u64 [t0 + 0x74] = a0
  4760: 82 17 c8 01              a0 = u64 [sp + 0x1c8]
  4764: 7b 27 7c                 u64 [t0 + 0x7c] = a0
  4767: 49 08 02                 u64 [a1 + 0] = 0x2
  4770: 49 18 10                 u64 [a1 + 16] = 0
  4773: 49 18 18 02              u64 [a1 + 24] = 0x2
  4777: 49 18 20                 u64 [a1 + 32] = 0
  4780: 46 18 30 03              u8 [a1 + 48] = 0x3
  4784: 95 17 78 25 01           a0 = sp + 0x12578
  4789: 82 18 c0 01              a1 = u64 [sp + 0x1c0]
  4793: 7b 78                    u64 [a0] = a1
  4795: 49 17 08 01              u64 [a0 + 8] = 0x1
  4799: 95 18 78 b5 01           a1 = sp + 0x1b578
  4804: 7b 78 20                 u64 [a0 + 0x20] = a1
  4807: 49 17 28 01              u64 [a0 + 40] = 0x1
  4811: 95 18 60 92 00           a1 = sp + 0x9260
  4816: 7b 78 10                 u64 [a0 + 0x10] = a1
  4819: 49 17 18 01              u64 [a0 + 24] = 0x1
  4823: 95 17 78 45 02           a0 = sp + 0x24578
  4828: 49 07                    u64 [a0 + 0] = 0
  4830: 49 17 08 01              u64 [a0 + 8] = 0x1
  4834: 49 17 10                 u64 [a0 + 16] = 0
  4837: 95 17 78 45 02           a0 = sp + 0x24578
  4842: 95 18 78 25 01           a1 = sp + 0x12578
  4847: 95 15 ec 91 00           s0 = sp + 0x91ec
  4852: 50 10 24 56 17           ra = 36, jump @613
      :                          @194 [@dyn 18]
  4857: 52 07 d4 0b              jump @371 if a0 != 0
      :                          @195
  4861: 95 18 78 45 02           a1 = sp + 0x24578
  4866: 82 87                    a0 = u64 [a1]
  4868: 7b 17 d8 01              u64 [sp + 0x1d8] = a0
  4872: 82 57 54                 a0 = u64 [s0 + 0x54]
  4875: 82 89 10                 a2 = u64 [a1 + 0x10]
  4878: 82 85 08                 s0 = u64 [a1 + 0x8]
  4881: 82 1a 18 01              a3 = u64 [sp + 0x118]
  4885: c9 a7 07                 a0 = a0 - a3
  4888: 95 18 ec 91 00           a1 = sp + 0x91ec
  4893: 7b 16 e0 01              u64 [sp + 0x1e0] = s1
  4897: ac 97 66                 jump @204 if a0 <u a2
      :                          @196
  4900: 82 87 5c                 a0 = u64 [a1 + 0x5c]
  4903: 7b 17 10 01              u64 [sp + 0x110] = a0
  4907: c8 a7 07                 a0 = a0 + a3
  4910: 64 58                    a1 = s0
  4912: 7b 19 d0 01              u64 [sp + 0x1d0] = a2
  4916: 64 a6                    s1 = a3
  4918: 50 10 26 90 0e           ra = 38, jump @445
      :                          @197 [@dyn 19]
  4923: 95 12 ec 91 00           t0 = sp + 0x91ec
  4928: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
  4932: c8 76 06                 s1 = s1 + a0
  4935: 82 17 e8 00              a0 = u64 [sp + 0xe8]
  4939: 82 1c d8 01              a5 = u64 [sp + 0x1d8]
  4943: c8 c7 07                 a0 = a0 + a5
  4946: 7b 16 18 01              u64 [sp + 0x118] = s1
  4950: 7b 26 64                 u64 [t0 + 0x64] = s1
  4953: 82 13 d0 00              t1 = u64 [sp + 0xd0]
  4957: 33 04 00 10              t2 = 0x1000
  4961: 53 27 00 f0 06 ff        jump @192 if a0 <u 4294963200
      :                          @198
  4967: c8 43 08                 a1 = t1 + t2
  4970: 82 87                    a0 = u64 [a1]
  4972: c9 78 09                 a2 = a1 - a0
  4975: ab 59 f8 fe              jump @192 if a2 != s0
      :                          @199
  4979: c9 c7 09                 a2 = a0 - a5
  4982: 01                       fallthrough
      :                          @200
  4983: 82 8a                    a3 = u64 [a1]
  4985: ab 7a ee                 jump @198 if a3 != a0
      :                          @201
  4988: 7b 89                    u64 [a1] = a2
  4990: 33 0b                    a4 = 0
  4992: 01                       fallthrough
      :                          @202
  4993: ab 7a e6                 jump @198 if a3 != a0
      :                          @203
  4996: 28 e3 fe                 jump @192
      :                          @204
  4999: 95 17 40 92 00           a0 = sp + 0x9240
  5004: 64 a8                    a1 = a3
  5006: 64 96                    s1 = a2
  5008: 50 10 28 20 ee           ra = 40, jump @41
      :                          @205 [@dyn 20]
  5013: 64 69                    a2 = s1
  5015: 95 18 ec 91 00           a1 = sp + 0x91ec
  5020: 82 8a 64                 a3 = u64 [a1 + 0x64]
  5023: 28 85                    jump @196
      :                          @206
  5025: 82 20 54                 ra = u64 [t0 + 0x54]
  5028: 82 27 04                 a0 = u64 [t0 + 0x4]
  5031: 01                       fallthrough
      :                          @207
  5032: 82 18 e8 00              a1 = u64 [sp + 0xe8]
  5036: c8 78 08                 a1 = a1 + a0
  5039: 53 28 00 f0 20           jump @213 if a1 <u 4294963200
      :                          @208
  5044: 82 28 0c                 a1 = u64 [t0 + 0xc]
  5047: 01                       fallthrough
      :                          @209
  5048: c8 43 0a                 a3 = t1 + t2
  5051: 82 a9                    a2 = u64 [a3]
  5053: c9 9a 0b                 a4 = a3 - a2
  5056: ab 8b 0f                 jump @213 if a4 != a1
      :                          @210
  5059: c9 79 0b                 a4 = a2 - a0
  5062: 01                       fallthrough
      :                          @211
  5063: 82 ac                    a5 = u64 [a3]
  5065: ab 9c ef                 jump @209 if a5 != a2
      :                          @212
  5068: 7b ab                    u64 [a3] = a4
  5070: 01                       fallthrough
      :                          @213
  5071: 82 19 38                 a2 = u64 [sp + 0x38]
  5074: 95 99 01                 a2 = a2 + 0x1
  5077: 7b 20 04                 u64 [t0 + 0x4] = ra
  5080: 82 17 10 01              a0 = u64 [sp + 0x110]
  5084: 7b 27 0c                 u64 [t0 + 0xc] = a0
  5087: 82 1b 18 01              a4 = u64 [sp + 0x118]
  5091: 7b 2b 14                 u64 [t0 + 0x14] = a4
  5094: 95 18 78 45 02           a1 = sp + 0x24578
  5099: 7b 19 38                 u64 [sp + 0x38] = a2
  5102: 95 17 c8 b5 01           a0 = sp + 0x1b5c8
  5107: 95 12 b8 b5 01           t0 = sp + 0x1b5b8
  5112: 82 16 30                 s1 = u64 [sp + 0x30]
  5115: 52 19 64 e8 f1           jump @127 if a2 != 100
      :                          @214
  5120: 28 92 00                 jump @231
      :                          @215
  5123: 82 b5 40                 s0 = u64 [a4 + 0x40]
  5126: c8 53 07                 a0 = t1 + s0
  5129: 64 35                    s0 = t1
  5131: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
  5135: ae 37 0d                 jump @217 if a0 >=u t1
      :                          @216
  5138: 82 b7 48                 a0 = u64 [a4 + 0x48]
  5141: 95 77 01                 a0 = a0 + 0x1
  5144: 7b b7 48                 u64 [a4 + 0x48] = a0
  5147: 01                       fallthrough
      :                          @217
  5148: 95 17 78 45 02           a0 = sp + 0x24578
  5153: 33 09 80 00              a2 = 0x80
  5157: 33 08                    a1 = 0
  5159: 50 10 2a 51 0e           ra = 42, jump @463
      :                          @218 [@dyn 21]
  5164: 64 59                    a2 = s0
  5166: 56 25 80 00 a2 0a        jump @374 if s0 >u 128
      :                          @219
  5172: 95 17 78 b5 01           a0 = sp + 0x1b578
  5177: 82 75 48                 s0 = u64 [a0 + 0x48]
  5180: 82 78                    a1 = u64 [a0]
  5182: 7b 18 d8 00              u64 [sp + 0xd8] = a1
  5186: 82 78 08                 a1 = u64 [a0 + 0x8]
  5189: 7b 18 e0 00              u64 [sp + 0xe0] = a1
  5193: 82 78 10                 a1 = u64 [a0 + 0x10]
  5196: 7b 18 a8 00              u64 [sp + 0xa8] = a1
  5200: 82 78 18                 a1 = u64 [a0 + 0x18]
  5203: 7b 18 b0 00              u64 [sp + 0xb0] = a1
  5207: 82 78 20                 a1 = u64 [a0 + 0x20]
  5210: 7b 18 d0 01              u64 [sp + 0x1d0] = a1
  5214: 82 78 28                 a1 = u64 [a0 + 0x28]
  5217: 7b 18 a8 01              u64 [sp + 0x1a8] = a1
  5221: 82 78 30                 a1 = u64 [a0 + 0x30]
  5224: 7b 18 d8 01              u64 [sp + 0x1d8] = a1
  5228: 82 77 38                 a0 = u64 [a0 + 0x38]
  5231: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  5235: 95 18 c8 b5 01           a1 = sp + 0x1b5c8
  5240: 82 16 e0 01              s1 = u64 [sp + 0x1e0]
  5244: 95 17 78 45 02           a0 = sp + 0x24578
  5249: 33 00 1c                 ra = 0x1c
  5252: 28 42 0d                 jump @445
      :                          @220
  5255: 00                       trap
      :                          @221
  5256: 00                       trap
      :                          @222
  5257: 00                       trap
      :                          @223
  5258: 00                       trap
      :                          @224
  5259: 00                       trap
      :                          @225
  5260: 00                       trap
      :                          @226
  5261: 00                       trap
      :                          @227
  5262: 00                       trap
      :                          @228
  5263: 00                       trap
      :                          @229
  5264: 00                       trap
      :                          @230
  5265: 00                       trap
      :                          @231
  5266: 95 17 f0 91 00           a0 = sp + 0x91f0
  5271: 7b 87                    u64 [a1] = a0
  5273: 33 07 0a                 a0 = 0xa
  5276: 7b 87 08                 u64 [a1 + 0x8] = a0
  5279: 33 07 08 02 01           a0 = 0x10208
  5284: 95 19 78 b5 01           a2 = sp + 0x1b578
  5289: 7b 97                    u64 [a2] = a0
  5291: 49 19 08 01              u64 [a2 + 8] = 0x1
  5295: 49 19 20                 u64 [a2 + 32] = 0
  5298: 95 18 78 45 02           a1 = sp + 0x24578
  5303: 7b 98 10                 u64 [a2 + 0x10] = a1
  5306: 49 19 18 01              u64 [a2 + 24] = 0x1
  5310: 95 17 78 25 01           a0 = sp + 0x12578
  5315: 95 18 78 b5 01           a1 = sp + 0x1b578
  5320: 50 10 2c 99 0a           ra = 44, jump @395
      :                          @232 [@dyn 22]
  5325: 95 17 78 25 01           a0 = sp + 0x12578
  5330: 82 75 08                 s0 = u64 [a0 + 0x8]
  5333: 82 7b 10                 a4 = u64 [a0 + 0x10]
  5336: 82 76                    s1 = u64 [a0]
  5338: 33 07 02                 a0 = 0x2
  5341: 33 08                    a1 = 0
  5343: 33 09                    a2 = 0
  5345: 64 5a                    a3 = s0
  5347: 33 00 2e                 ra = 0x2e
  5350: 0a 64                    ecalli 100 // 'log'
  5352: 01                       fallthrough
      :                          @233 [@dyn 23]
  5353: 82 17 e8 00              a0 = u64 [sp + 0xe8]
  5357: c8 67 07                 a0 = a0 + s1
  5360: 82 12 d0 00              t0 = u64 [sp + 0xd0]
  5364: 53 27 00 f0 2b           jump @239 if a0 <u 4294963200
      :                          @234
  5369: 95 27 00 10              a0 = t0 + 0x1000
  5373: 01                       fallthrough
      :                          @235
  5374: 82 78                    a1 = u64 [a0]
  5376: c9 87 09                 a2 = a0 - a1
  5379: ab 59 1c                 jump @239 if a2 != s0
      :                          @236
  5382: c9 68 09                 a2 = a1 - s1
  5385: 01                       fallthrough
      :                          @237
  5386: 82 7a                    a3 = u64 [a0]
  5388: ab 8a f2                 jump @235 if a3 != a1
      :                          @238
  5391: 7b 79                    u64 [a0] = a2
  5393: 33 0b                    a4 = 0
  5395: 33 07 00 90 00           a0 = 0x9000
  5400: 95 18 70 92 00           a1 = sp + 0x9270
  5405: 28 0d                    jump @240
      :                          @239
  5407: 33 07 00 90 00           a0 = 0x9000
  5412: 95 18 70 92 00           a1 = sp + 0x9270
  5417: 01                       fallthrough
      :                          @240
  5418: 7c 89                    a2 = u8 [a1]
  5420: 98 99 07                 a2 = a2 >> 0x7
  5423: 78 89                    u8 [a1] = a2
  5425: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  5428: 95 88 01                 a1 = a1 + 0x1
  5431: 52 07 f3                 jump @240 if a0 != 0
      :                          @241
  5434: 33 06 58 00 03           s1 = 0x30058
  5439: 33 07 00 10              a0 = 0x1000
  5443: c8 72 08                 a1 = t0 + a0
  5446: 01                       fallthrough
      :                          @242
  5447: 82 8a                    a3 = u64 [a1]
  5449: 95 a9 11                 a2 = a3 + 0x11
  5452: ac a9 88 09              jump @378 if a2 <u a3
      :                          @243
  5456: 95 9b 01                 a4 = a2 + 0x1
  5459: 88 bc 01                 a5 = a4 <u 0x1
  5462: d8 b7 0b                 a4 = a0 <u a4
  5465: d4 cb 0b                 a4 = a4 | a5
  5468: 52 0b 78 09              jump @378 if a4 != 0
      :                          @244
  5472: 82 8b                    a4 = u64 [a1]
  5474: ab ab e5                 jump @242 if a4 != a3
      :                          @245
  5477: 7b 89                    u64 [a1] = a2
  5479: 33 0c                    a5 = 0
  5481: 7b 16 e0 01              u64 [sp + 0x1e0] = s1
  5485: c9 92 05                 s0 = t0 - a2
  5488: 95 55 00 10              s0 = s0 + 0x1000
  5492: 33 08 0d 00 01           a1 = 0x1000d
  5497: 33 09 11                 a2 = 0x11
  5500: 64 57                    a0 = s0
  5502: 64 26                    s1 = t0
  5504: 50 10 30 46 0c           ra = 48, jump @445
      :                          @246 [@dyn 24]
  5509: 33 07 02                 a0 = 0x2
  5512: 33 0b 11                 a4 = 0x11
  5515: 33 08                    a1 = 0
  5517: 33 09                    a2 = 0
  5519: 64 5a                    a3 = s0
  5521: 33 00 32                 ra = 0x32
  5524: 0a 64                    ecalli 100 // 'log'
  5526: 95 67 00 10              a0 = s1 + 0x1000
  5530: 28 07                    jump @248
      :                          @247 [@dyn 25]
  5532: 95 67 00 10              a0 = s1 + 0x1000
  5536: 01                       fallthrough
      :                          @248
  5537: 82 78                    a1 = u64 [a0]
  5539: c9 87 09                 a2 = a0 - a1
  5542: ab 59 11                 jump @252 if a2 != s0
      :                          @249
  5545: 95 89 ef                 a2 = a1 + 0xffffffffffffffef
  5548: 01                       fallthrough
      :                          @250
  5549: 82 7a                    a3 = u64 [a0]
  5551: ab 8a f2                 jump @248 if a3 != a1
      :                          @251
  5554: 7b 79                    u64 [a0] = a2
  5556: 33 0b                    a4 = 0
  5558: 01                       fallthrough
      :                          @252
  5559: 95 17 ec 01              a0 = sp + 0x1ec
  5563: 95 18 70 92 00           a1 = sp + 0x9270
  5568: 33 09 00 90 00           a2 = 0x9000
  5573: 50 10 34 01 0c           ra = 52, jump @445
      :                          @253 [@dyn 26]
  5578: 33 07 00 10              a0 = 0x1000
  5582: 82 15 d0 00              s0 = u64 [sp + 0xd0]
  5586: c8 75 08                 a1 = s0 + a0
  5589: 01                       fallthrough
      :                          @254
  5590: 82 8a                    a3 = u64 [a1]
  5592: 95 a9 16                 a2 = a3 + 0x16
  5595: ac a9 fa 08              jump @379 if a2 <u a3
      :                          @255
  5599: 95 9b 01                 a4 = a2 + 0x1
  5602: 88 bc 01                 a5 = a4 <u 0x1
  5605: d8 b7 0b                 a4 = a0 <u a4
  5608: d4 cb 0b                 a4 = a4 | a5
  5611: 52 0b ea 08              jump @379 if a4 != 0
      :                          @256
  5615: 82 8b                    a4 = u64 [a1]
  5617: ab ab e5                 jump @254 if a4 != a3
      :                          @257
  5620: 7b 89                    u64 [a1] = a2
  5622: 33 0c                    a5 = 0
  5624: c9 95 05                 s0 = s0 - a2
  5627: 33 06 00 10              s1 = 0x1000
  5631: c8 65 05                 s0 = s0 + s1
  5634: 33 08 1e 00 01           a1 = 0x1001e
  5639: 33 09 16                 a2 = 0x16
  5642: 64 57                    a0 = s0
  5644: 50 10 36 ba 0b           ra = 54, jump @445
      :                          @258 [@dyn 27]
  5649: 33 07 02                 a0 = 0x2
  5652: 33 0b 16                 a4 = 0x16
  5655: 33 08                    a1 = 0
  5657: 33 09                    a2 = 0
  5659: 64 5a                    a3 = s0
  5661: 33 00 38                 ra = 0x38
  5664: 0a 64                    ecalli 100 // 'log'
  5666: 82 1c d0 00              a5 = u64 [sp + 0xd0]
  5670: c8 6c 07                 a0 = a5 + s1
  5673: 28 0a                    jump @260
      :                          @259 [@dyn 28]
  5675: 82 1c d0 00              a5 = u64 [sp + 0xd0]
  5679: c8 6c 07                 a0 = a5 + s1
  5682: 01                       fallthrough
      :                          @260
  5683: 82 78                    a1 = u64 [a0]
  5685: c9 87 09                 a2 = a0 - a1
  5688: ab 59 11                 jump @264 if a2 != s0
      :                          @261
  5691: 95 89 ea                 a2 = a1 + 0xffffffffffffffea
  5694: 01                       fallthrough
      :                          @262
  5695: 82 7a                    a3 = u64 [a0]
  5697: ab 8a f2                 jump @260 if a3 != a1
      :                          @263
  5700: 7b 79                    u64 [a0] = a2
  5702: 33 0b                    a4 = 0
  5704: 01                       fallthrough
      :                          @264
  5705: 95 1a ec 91 00           a3 = sp + 0x91ec
  5710: 82 a7 04                 a0 = u64 [a3 + 0x4]
  5713: 82 18 e8 00              a1 = u64 [sp + 0xe8]
  5717: c8 78 08                 a1 = a1 + a0
  5720: 53 28 00 f0 23           jump @270 if a1 <u 4294963200
      :                          @265
  5725: 82 a8 0c                 a1 = u64 [a3 + 0xc]
  5728: 95 c9 00 10              a2 = a5 + 0x1000
  5732: 01                       fallthrough
      :                          @266
  5733: 82 9a                    a3 = u64 [a2]
  5735: c9 a9 0b                 a4 = a2 - a3
  5738: ab 8b 11                 jump @270 if a4 != a1
      :                          @267
  5741: c9 7a 0b                 a4 = a3 - a0
  5744: 01                       fallthrough
      :                          @268
  5745: 82 9c                    a5 = u64 [a2]
  5747: ab ac f2                 jump @266 if a5 != a3
      :                          @269
  5750: 7b 9b                    u64 [a2] = a4
  5752: 33 06                    s1 = 0
  5754: 01                       fallthrough
      :                          @270
  5755: 49 21 e0 01 81 91 00     u64 [sp + 480] = 0x9181
  5762: 95 17 ec 91 00           a0 = sp + 0x91ec
  5767: 95 18 78 25 01           a1 = sp + 0x12578
  5772: 7b 87                    u64 [a1] = a0
  5774: 82 17 b8 00              a0 = u64 [sp + 0xb8]
  5778: 7b 87 08                 u64 [a1 + 0x8] = a0
  5781: 33 07 38 02 01           a0 = 0x10238
  5786: 95 18 ec 91 00           a1 = sp + 0x91ec
  5791: 7b 87 84 00              u64 [a1 + 0x84] = a0
  5795: 49 28 8c 00 02           u64 [a1 + 140] = 0x2
  5800: 49 28 a4 00              u64 [a1 + 164] = 0
  5804: 95 17 78 25 01           a0 = sp + 0x12578
  5809: 7b 87 94 00              u64 [a1 + 0x94] = a0
  5813: 49 28 9c 00 01           u64 [a1 + 156] = 0x1
  5818: 95 17 78 b5 01           a0 = sp + 0x1b578
  5823: 95 18 70 92 00           a1 = sp + 0x9270
  5828: 50 10 3a 9d 08           ra = 58, jump @395
      :                          @271 [@dyn 29]
  5833: 95 17 78 b5 01           a0 = sp + 0x1b578
  5838: 82 75 08                 s0 = u64 [a0 + 0x8]
  5841: 82 7b 10                 a4 = u64 [a0 + 0x10]
  5844: 82 76                    s1 = u64 [a0]
  5846: 33 07 02                 a0 = 0x2
  5849: 33 08                    a1 = 0
  5851: 33 09                    a2 = 0
  5853: 64 5a                    a3 = s0
  5855: 33 00 3c                 ra = 0x3c
  5858: 0a 64                    ecalli 100 // 'log'
  5860: 01                       fallthrough
      :                          @272 [@dyn 30]
  5861: 82 17 e8 00              a0 = u64 [sp + 0xe8]
  5865: c8 67 07                 a0 = a0 + s1
  5868: 53 27 00 f0 24           jump @278 if a0 <u 4294963200
      :                          @273
  5873: 82 18 d0 00              a1 = u64 [sp + 0xd0]
  5877: 95 87 00 10              a0 = a1 + 0x1000
  5881: 01                       fallthrough
      :                          @274
  5882: 82 78                    a1 = u64 [a0]
  5884: c9 87 09                 a2 = a0 - a1
  5887: ab 59 11                 jump @278 if a2 != s0
      :                          @275
  5890: c9 68 09                 a2 = a1 - s1
  5893: 01                       fallthrough
      :                          @276
  5894: 82 7a                    a3 = u64 [a0]
  5896: ab 8a f2                 jump @274 if a3 != a1
      :                          @277
  5899: 7b 79                    u64 [a0] = a2
  5901: 33 0b                    a4 = 0
  5903: 01                       fallthrough
      :                          @278
  5904: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
  5908: 95 18 70 92 00           a1 = sp + 0x9270
  5913: c8 87 07                 a0 = a0 + a1
  5916: 7b 17 d8 01              u64 [sp + 0x1d8] = a0
  5920: 33 09 04 93 00           a2 = 0x9304
  5925: 95 17 70 92 00           a0 = sp + 0x9270
  5930: 33 08                    a1 = 0
  5932: 50 10 3e 4c 0b           ra = 62, jump @463
      :                          @279 [@dyn 31]
  5937: 33 07 40                 a0 = 0x40
  5940: 95 15 ec 01              s0 = sp + 0x1ec
  5944: 95 16 33 93 00           s1 = sp + 0x9333
  5949: 01                       fallthrough
      :                          @280
  5950: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
  5954: 33 09 40                 a2 = 0x40
  5957: 64 67                    a0 = s1
  5959: 64 58                    a1 = s0
  5961: 50 10 40 7d 0a           ra = 64, jump @445
      :                          @281 [@dyn 32]
  5966: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
  5970: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  5973: 95 55 40                 s0 = s0 + 0x40
  5976: 95 66 c2 00              s1 = s1 + 0xc2
  5980: 52 07 e2                 jump @280 if a0 != 0
      :                          @282
  5983: 95 18 ec 01              a1 = sp + 0x1ec
  5987: 95 87 00 10              a0 = a1 + 0x1000
  5991: 33 05 40                 s0 = 0x40
  5994: 95 16 73 93 00           s1 = sp + 0x9373
  5999: 01                       fallthrough
      :                          @283
  6000: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
  6004: 33 09 40                 a2 = 0x40
  6007: 64 67                    a0 = s1
  6009: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
  6013: 50 10 42 49 0a           ra = 66, jump @445
      :                          @284 [@dyn 33]
  6018: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
  6022: 95 77 40                 a0 = a0 + 0x40
  6025: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  6028: 95 66 c2 00              s1 = s1 + 0xc2
  6032: 52 05 e0                 jump @283 if s0 != 0
      :                          @285
  6035: 95 18 ec 01              a1 = sp + 0x1ec
  6039: 95 87 00 20              a0 = a1 + 0x2000
  6043: 33 05 40                 s0 = 0x40
  6046: 95 16 b3 93 00           s1 = sp + 0x93b3
  6051: 01                       fallthrough
      :                          @286
  6052: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
  6056: 33 09 40                 a2 = 0x40
  6059: 64 67                    a0 = s1
  6061: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
  6065: 50 10 44 15 0a           ra = 68, jump @445
      :                          @287 [@dyn 34]
  6070: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
  6074: 95 77 40                 a0 = a0 + 0x40
  6077: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  6080: 95 66 c2 00              s1 = s1 + 0xc2
  6084: 52 05 e0                 jump @286 if s0 != 0
      :                          @288
  6087: 95 18 ec 01              a1 = sp + 0x1ec
  6091: 95 88 00 30              a1 = a1 + 0x3000
  6095: 95 17 70 92 00           a0 = sp + 0x9270
  6100: 95 76 43 31              s1 = a0 + 0x3143
  6104: 33 05 40                 s0 = 0x40
  6107: 01                       fallthrough
      :                          @289
  6108: 7b 18 e0 01              u64 [sp + 0x1e0] = a1
  6112: 33 09 40                 a2 = 0x40
  6115: 64 67                    a0 = s1
  6117: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
  6121: 50 10 46 dd 09           ra = 70, jump @445
      :                          @290 [@dyn 35]
  6126: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
  6130: 95 88 40                 a1 = a1 + 0x40
  6133: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  6136: 95 66 c2 00              s1 = s1 + 0xc2
  6140: 52 05 e0                 jump @289 if s0 != 0
      :                          @291
  6143: 95 18 ec 01              a1 = sp + 0x1ec
  6147: 95 88 00 40              a1 = a1 + 0x4000
  6151: 95 17 70 92 00           a0 = sp + 0x9270
  6156: 95 76 83 31              s1 = a0 + 0x3183
  6160: 33 05 40                 s0 = 0x40
  6163: 01                       fallthrough
      :                          @292
  6164: 7b 18 e0 01              u64 [sp + 0x1e0] = a1
  6168: 33 09 40                 a2 = 0x40
  6171: 64 67                    a0 = s1
  6173: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
  6177: 50 10 48 a5 09           ra = 72, jump @445
      :                          @293 [@dyn 36]
  6182: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
  6186: 95 88 40                 a1 = a1 + 0x40
  6189: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  6192: 95 66 c2 00              s1 = s1 + 0xc2
  6196: 52 05 e0                 jump @292 if s0 != 0
      :                          @294
  6199: 95 18 ec 01              a1 = sp + 0x1ec
  6203: 95 88 00 50              a1 = a1 + 0x5000
  6207: 95 17 70 92 00           a0 = sp + 0x9270
  6212: 95 76 c3 31              s1 = a0 + 0x31c3
  6216: 33 05 40                 s0 = 0x40
  6219: 01                       fallthrough
      :                          @295
  6220: 7b 18 e0 01              u64 [sp + 0x1e0] = a1
  6224: 33 09 40                 a2 = 0x40
  6227: 64 67                    a0 = s1
  6229: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
  6233: 50 10 4a 6d 09           ra = 74, jump @445
      :                          @296 [@dyn 37]
  6238: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
  6242: 95 88 40                 a1 = a1 + 0x40
  6245: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  6248: 95 66 c2 00              s1 = s1 + 0xc2
  6252: 52 05 e0                 jump @295 if s0 != 0
      :                          @297
  6255: 95 18 ec 01              a1 = sp + 0x1ec
  6259: 95 88 00 60              a1 = a1 + 0x6000
  6263: 95 17 70 92 00           a0 = sp + 0x9270
  6268: 95 76 c3 61              s1 = a0 + 0x61c3
  6272: 33 05 40                 s0 = 0x40
  6275: 01                       fallthrough
      :                          @298
  6276: 7b 18 e0 01              u64 [sp + 0x1e0] = a1
  6280: 33 09 40                 a2 = 0x40
  6283: 64 67                    a0 = s1
  6285: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
  6289: 50 10 4c 35 09           ra = 76, jump @445
      :                          @299 [@dyn 38]
  6294: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
  6298: 95 88 40                 a1 = a1 + 0x40
  6301: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  6304: 95 66 c2 00              s1 = s1 + 0xc2
  6308: 52 05 e0                 jump @298 if s0 != 0
      :                          @300
  6311: 95 18 ec 01              a1 = sp + 0x1ec
  6315: 95 88 00 70              a1 = a1 + 0x7000
  6319: 95 17 70 92 00           a0 = sp + 0x9270
  6324: 95 76 03 62              s1 = a0 + 0x6203
  6328: 33 05 40                 s0 = 0x40
  6331: 01                       fallthrough
      :                          @301
  6332: 7b 18 e0 01              u64 [sp + 0x1e0] = a1
  6336: 33 09 40                 a2 = 0x40
  6339: 64 67                    a0 = s1
  6341: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
  6345: 50 10 4e fd 08           ra = 78, jump @445
      :                          @302 [@dyn 39]
  6350: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
  6354: 95 88 40                 a1 = a1 + 0x40
  6357: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  6360: 95 66 c2 00              s1 = s1 + 0xc2
  6364: 52 05 e0                 jump @301 if s0 != 0
      :                          @303
  6367: 95 18 ec 01              a1 = sp + 0x1ec
  6371: 95 88 00 80 00           a1 = a1 + 0x8000
  6376: 95 17 70 92 00           a0 = sp + 0x9270
  6381: 95 76 43 62              s1 = a0 + 0x6243
  6385: 33 05 40                 s0 = 0x40
  6388: 01                       fallthrough
      :                          @304
  6389: 7b 18 e0 01              u64 [sp + 0x1e0] = a1
  6393: 33 09 40                 a2 = 0x40
  6396: 64 67                    a0 = s1
  6398: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
  6402: 50 10 50 c4 08           ra = 80, jump @445
      :                          @305 [@dyn 40]
  6407: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
  6411: 95 88 40                 a1 = a1 + 0x40
  6414: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  6417: 95 66 c2 00              s1 = s1 + 0xc2
  6421: 52 05 e0                 jump @304 if s0 != 0
      :                          @306
  6424: 33 0a 01                 a3 = 0x1
  6427: 33 07 c0 00              a0 = 0xc0
  6431: 33 06 00 90 00           s1 = 0x9000
  6436: 95 19 70 92 00           a2 = sp + 0x9270
  6441: 01                       fallthrough
      :                          @307
  6442: 88 ab c0 00              a4 = a3 <u 0xc0
  6446: c8 a9 0c                 a5 = a2 + a3
  6449: c8 6c 08                 a1 = a5 + s1
  6452: 7c 85 80 01              s0 = u8 [a1 + 0x180]
  6456: 95 aa 01                 a3 = a3 + 0x1
  6459: da b7 0a                 a3 = a0 if a4 == 0
  6462: 85 bb 01                 a4 = a4 ^ 0x1
  6465: 78 c5                    u8 [a5] = s0
  6467: 7c cc c2 00              a5 = u8 [a5 + 0xc2]
  6471: 88 a5 c1 00              s0 = a3 <u 0xc1
  6475: 85 55 01                 s0 = s0 ^ 0x1
  6478: d4 5b 0b                 a4 = a4 | s0
  6481: 78 8c 42 02              u8 [a1 + 0x242] = a5
  6485: 51 0b d5                 jump @307 if a4 == 0
      :                          @308
  6488: 33 0a 01                 a3 = 0x1
  6491: 33 07 c0 00              a0 = 0xc0
  6495: 33 08 c2 00              a1 = 0xc2
  6499: 95 19 70 92 00           a2 = sp + 0x9270
  6504: 95 12 ec 91 00           t0 = sp + 0x91ec
  6509: 01                       fallthrough
      :                          @309
  6510: 88 ab c0 00              a4 = a3 <u 0xc0
  6514: ca 8a 0c                 a5 = a3 * a1
  6517: c8 9c 0c                 a5 = a5 + a2
  6520: 7c c6 c0 00              s1 = u8 [a5 + 0xc0]
  6524: 85 b5 01                 s0 = a4 ^ 0x1
  6527: 95 aa 01                 a3 = a3 + 0x1
  6530: da b7 0a                 a3 = a0 if a4 == 0
  6533: 78 c6                    u8 [a5] = s1
  6535: 7c cb 01                 a4 = u8 [a5 + 0x1]
  6538: 88 a6 c1 00              s1 = a3 <u 0xc1
  6542: 85 66 01                 s1 = s1 ^ 0x1
  6545: d4 65 05                 s0 = s0 | s1
  6548: 78 cb c1 00              u8 [a5 + 0xc1] = a4
  6552: 51 05 d6                 jump @309 if s0 == 0
      :                          @310
  6555: 82 19 d8 01              a2 = u64 [sp + 0x1d8]
  6559: 7c 97 bf 00              a0 = u8 [a2 + 0xbf]
  6563: 78 27 84 00              u8 [t0 + 0x84] = a0
  6567: 7c 97                    a0 = u8 [a2]
  6569: 7c 28 06 02              a1 = u8 [t0 + 0x206]
  6573: 78 27 45 01              u8 [t0 + 0x145] = a0
  6577: 78 98 c1 00              u8 [a2 + 0xc1] = a1
  6581: 7c 27 47 01              a0 = u8 [t0 + 0x147]
  6585: 78 97 82 01              u8 [a2 + 0x182] = a0
  6589: 95 17 78 25 01           a0 = sp + 0x12578
  6594: 33 09 00 90 00           a2 = 0x9000
  6599: 33 08                    a1 = 0
  6601: 50 10 52 af 08           ra = 82, jump @463
      :                          @311 [@dyn 41]
  6606: 33 06 01                 s1 = 0x1
  6609: 28 15                    jump @313
      :                          @312
  6611: 82 16 c8 01              s1 = u64 [sp + 0x1c8]
  6615: 88 67 c1 00              a0 = s1 <u 0xc1
  6619: 82 18 c0 01              a1 = u64 [sp + 0x1c0]
  6623: d2 78 08                 a1 = a1 & a0
  6626: 51 08 eb 00              jump @323 if a1 == 0
      :                          @313
  6630: 95 67 ff                 a0 = s1 + 0xffffffffffffffff
  6633: 56 27 c1 00 e2 04        jump @369 if a0 >u 193
      :                          @314
  6639: 95 68 01                 a1 = s1 + 0x1
  6642: 88 69 c0 00              a2 = s1 <u 0xc0
  6646: 7b 18 d0 01              u64 [sp + 0x1d0] = a1
  6650: 7b 19 c0 01              u64 [sp + 0x1c0] = a2
  6654: 93 98 c0 00              a1 = 0xc0 if a2 == 0
  6658: 7b 18 c8 01              u64 [sp + 0x1c8] = a1
  6662: 33 00 01                 ra = 0x1
  6665: 7b 16 e0 01              u64 [sp + 0x1e0] = s1
  6669: 7b 17 d8 01              u64 [sp + 0x1d8] = a0
  6673: 28 35                    jump @317
      :                          @315
  6675: 33 02                    t0 = 0
  6677: 01                       fallthrough
      :                          @316
  6678: 88 08 c0 00              a1 = ra <u 0xc0
  6682: 93 83 c0 00              t1 = 0xc0 if a1 == 0
  6686: 33 0b c0 00              a4 = 0xc0
  6690: 82 17 d8 01              a0 = u64 [sp + 0x1d8]
  6694: ca b7 09                 a2 = a0 * a4
  6697: 95 1a 78 25 01           a3 = sp + 0x12578
  6702: c8 a9 09                 a2 = a2 + a3
  6705: c8 49 09                 a2 = a2 + t2
  6708: 88 3a c1 00              a3 = t1 <u 0xc1
  6712: d2 a8 08                 a1 = a1 & a3
  6715: 78 92                    u8 [a2] = t0
  6717: 64 30                    ra = t1
  6719: 82 16 e0 01              s1 = u64 [sp + 0x1e0]
  6723: 51 08 90                 jump @312 if a1 == 0
      :                          @317
  6726: 95 03 01                 t1 = ra + 0x1
  6729: 95 04 ff                 t2 = ra + 0xffffffffffffffff
  6732: 96 78 c2 00              a1 = a0 * 0xc2
  6736: 95 1b 70 92 00           a4 = sp + 0x9270
  6741: c8 8b 09                 a2 = a4 + a1
  6744: c8 49 08                 a1 = a2 + t2
  6747: 7c 88                    a1 = u8 [a1]
  6749: c8 09 0c                 a5 = a2 + ra
  6752: 7c cc                    a5 = u8 [a5]
  6754: c8 39 09                 a2 = a2 + t1
  6757: 7c 99                    a2 = u8 [a2]
  6759: 96 65 c2 00              s0 = s1 * 0xc2
  6763: c8 5b 06                 s1 = a4 + s0
  6766: c8 46 05                 s0 = s1 + t2
  6769: 7c 55                    s0 = u8 [s0]
  6771: c8 c8 08                 a1 = a1 + a5
  6774: c8 59 09                 a2 = a2 + s0
  6777: c8 98 08                 a1 = a1 + a2
  6780: c8 36 09                 a2 = s1 + t1
  6783: 7c 99                    a2 = u8 [a2]
  6785: 82 17 d0 01              a0 = u64 [sp + 0x1d0]
  6789: 96 7c c2 00              a5 = a0 * 0xc2
  6793: c8 cb 0b                 a4 = a4 + a5
  6796: c8 4b 0c                 a5 = a4 + t2
  6799: 7c cc                    a5 = u8 [a5]
  6801: c8 0b 0a                 a3 = a4 + ra
  6804: 7c aa                    a3 = u8 [a3]
  6806: c8 3b 0b                 a4 = a4 + t1
  6809: 7c bb                    a4 = u8 [a4]
  6811: c8 06 06                 s1 = s1 + ra
  6814: 7c 65                    s0 = u8 [s1]
  6816: c8 c9 09                 a2 = a2 + a5
  6819: c8 a9 09                 a2 = a2 + a3
  6822: c8 98 08                 a1 = a1 + a2
  6825: be b8 08                 i32 a1 = a1 + a4
  6828: 51 05 16                 jump @321 if s0 == 0
      :                          @318
  6831: 52 15 01 64 ff           jump @315 if s0 != 1
      :                          @319
  6836: 84 88 fe                 a1 = a1 & 0xfffffffffffffffe
  6839: 33 02 01                 t0 = 0x1
  6842: 52 18 02 59 ff           jump @315 if a1 != 2
      :                          @320
  6847: 28 57 ff                 jump @316
      :                          @321
  6850: 33 02 01                 t0 = 0x1
  6853: 52 18 03 4e ff           jump @315 if a1 != 3
      :                          @322
  6858: 28 4c ff                 jump @316
      :                          @323
  6861: 95 17 78 b5 01           a0 = sp + 0x1b578
  6866: 33 09 00 90 00           a2 = 0x9000
  6871: 95 15 78 b5 01           s0 = sp + 0x1b578
  6876: 50 10 54 9c 07           ra = 84, jump @463
      :                          @324 [@dyn 42]
  6881: 33 07 40                 a0 = 0x40
  6884: 95 16 78 25 01           s1 = sp + 0x12578
  6889: 01                       fallthrough
      :                          @325
  6890: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
  6894: 33 09 40                 a2 = 0x40
  6897: 64 57                    a0 = s0
  6899: 64 68                    a1 = s1
  6901: 50 10 56 d1 06           ra = 86, jump @445
      :                          @326 [@dyn 43]
  6906: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
  6910: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  6913: 95 66 c0 00              s1 = s1 + 0xc0
  6917: 95 55 40                 s0 = s0 + 0x40
  6920: 52 07 e2                 jump @325 if a0 != 0
      :                          @327
  6923: 95 18 78 b5 01           a1 = sp + 0x1b578
  6928: 95 87 00 10              a0 = a1 + 0x1000
  6932: 33 05 40                 s0 = 0x40
  6935: 95 16 b8 25 01           s1 = sp + 0x125b8
  6940: 01                       fallthrough
      :                          @328
  6941: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
  6945: 33 09 40                 a2 = 0x40
  6948: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
  6952: 64 68                    a1 = s1
  6954: 50 10 58 9c 06           ra = 88, jump @445
      :                          @329 [@dyn 44]
  6959: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
  6963: 95 77 40                 a0 = a0 + 0x40
  6966: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  6969: 95 66 c0 00              s1 = s1 + 0xc0
  6973: 52 05 e0                 jump @328 if s0 != 0
      :                          @330
  6976: 95 18 78 b5 01           a1 = sp + 0x1b578
  6981: 95 87 00 20              a0 = a1 + 0x2000
  6985: 33 05 40                 s0 = 0x40
  6988: 95 16 f8 25 01           s1 = sp + 0x125f8
  6993: 01                       fallthrough
      :                          @331
  6994: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
  6998: 33 09 40                 a2 = 0x40
  7001: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
  7005: 64 68                    a1 = s1
  7007: 50 10 5a 67 06           ra = 90, jump @445
      :                          @332 [@dyn 45]
  7012: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
  7016: 95 77 40                 a0 = a0 + 0x40
  7019: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  7022: 95 66 c0 00              s1 = s1 + 0xc0
  7026: 52 05 e0                 jump @331 if s0 != 0
      :                          @333
  7029: 95 17 78 b5 01           a0 = sp + 0x1b578
  7034: 95 77 00 30              a0 = a0 + 0x3000
  7038: 95 18 78 25 01           a1 = sp + 0x12578
  7043: 95 86 00 30              s1 = a1 + 0x3000
  7047: 33 05 40                 s0 = 0x40
  7050: 01                       fallthrough
      :                          @334
  7051: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
  7055: 33 09 40                 a2 = 0x40
  7058: 64 68                    a1 = s1
  7060: 50 10 5c 32 06           ra = 92, jump @445
      :                          @335 [@dyn 46]
  7065: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
  7069: 95 77 40                 a0 = a0 + 0x40
  7072: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  7075: 95 66 c0 00              s1 = s1 + 0xc0
  7079: 52 05 e4                 jump @334 if s0 != 0
      :                          @336
  7082: 95 18 78 b5 01           a1 = sp + 0x1b578
  7087: 95 88 00 40              a1 = a1 + 0x4000
  7091: 95 17 78 25 01           a0 = sp + 0x12578
  7096: 95 76 40 30              s1 = a0 + 0x3040
  7100: 33 05 40                 s0 = 0x40
  7103: 01                       fallthrough
      :                          @337
  7104: 7b 18 e0 01              u64 [sp + 0x1e0] = a1
  7108: 33 09 40                 a2 = 0x40
  7111: 64 87                    a0 = a1
  7113: 64 68                    a1 = s1
  7115: 50 10 5e fb 05           ra = 94, jump @445
      :                          @338 [@dyn 47]
  7120: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
  7124: 95 88 40                 a1 = a1 + 0x40
  7127: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  7130: 95 66 c0 00              s1 = s1 + 0xc0
  7134: 52 05 e2                 jump @337 if s0 != 0
      :                          @339
  7137: 95 18 78 b5 01           a1 = sp + 0x1b578
  7142: 95 88 00 50              a1 = a1 + 0x5000
  7146: 95 17 78 25 01           a0 = sp + 0x12578
  7151: 95 76 80 30              s1 = a0 + 0x3080
  7155: 33 05 40                 s0 = 0x40
  7158: 01                       fallthrough
      :                          @340
  7159: 7b 18 e0 01              u64 [sp + 0x1e0] = a1
  7163: 33 09 40                 a2 = 0x40
  7166: 64 87                    a0 = a1
  7168: 64 68                    a1 = s1
  7170: 50 10 60 c4 05           ra = 96, jump @445
      :                          @341 [@dyn 48]
  7175: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
  7179: 95 88 40                 a1 = a1 + 0x40
  7182: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  7185: 95 66 c0 00              s1 = s1 + 0xc0
  7189: 52 05 e2                 jump @340 if s0 != 0
      :                          @342
  7192: 95 17 78 b5 01           a0 = sp + 0x1b578
  7197: 95 77 00 60              a0 = a0 + 0x6000
  7201: 95 18 78 25 01           a1 = sp + 0x12578
  7206: 95 86 00 60              s1 = a1 + 0x6000
  7210: 33 05 40                 s0 = 0x40
  7213: 01                       fallthrough
      :                          @343
  7214: 7b 17 e0 01              u64 [sp + 0x1e0] = a0
  7218: 33 09 40                 a2 = 0x40
  7221: 64 68                    a1 = s1
  7223: 50 10 62 8f 05           ra = 98, jump @445
      :                          @344 [@dyn 49]
  7228: 82 17 e0 01              a0 = u64 [sp + 0x1e0]
  7232: 95 77 40                 a0 = a0 + 0x40
  7235: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  7238: 95 66 c0 00              s1 = s1 + 0xc0
  7242: 52 05 e4                 jump @343 if s0 != 0
      :                          @345
  7245: 95 18 78 b5 01           a1 = sp + 0x1b578
  7250: 95 88 00 70              a1 = a1 + 0x7000
  7254: 95 17 78 25 01           a0 = sp + 0x12578
  7259: 95 76 40 60              s1 = a0 + 0x6040
  7263: 33 05 40                 s0 = 0x40
  7266: 01                       fallthrough
      :                          @346
  7267: 7b 18 e0 01              u64 [sp + 0x1e0] = a1
  7271: 33 09 40                 a2 = 0x40
  7274: 64 87                    a0 = a1
  7276: 64 68                    a1 = s1
  7278: 50 10 64 58 05           ra = 100, jump @445
      :                          @347 [@dyn 50]
  7283: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
  7287: 95 88 40                 a1 = a1 + 0x40
  7290: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  7293: 95 66 c0 00              s1 = s1 + 0xc0
  7297: 52 05 e2                 jump @346 if s0 != 0
      :                          @348
  7300: 95 18 78 b5 01           a1 = sp + 0x1b578
  7305: 95 88 00 80 00           a1 = a1 + 0x8000
  7310: 95 17 78 25 01           a0 = sp + 0x12578
  7315: 95 76 80 60              s1 = a0 + 0x6080
  7319: 33 05 40                 s0 = 0x40
  7322: 01                       fallthrough
      :                          @349
  7323: 7b 18 e0 01              u64 [sp + 0x1e0] = a1
  7327: 33 09 40                 a2 = 0x40
  7330: 64 87                    a0 = a1
  7332: 64 68                    a1 = s1
  7334: 50 10 66 20 05           ra = 102, jump @445
      :                          @350 [@dyn 51]
  7339: 82 18 e0 01              a1 = u64 [sp + 0x1e0]
  7343: 95 88 40                 a1 = a1 + 0x40
  7346: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  7349: 95 66 c0 00              s1 = s1 + 0xc0
  7353: 52 05 e2                 jump @349 if s0 != 0
      :                          @351
  7356: 95 17 ec 01              a0 = sp + 0x1ec
  7360: 95 18 78 b5 01           a1 = sp + 0x1b578
  7365: 33 09 00 90 00           a2 = 0x9000
  7370: 50 10 68 fc 04           ra = 104, jump @445
      :                          @352 [@dyn 52]
  7375: 95 18 ec 91 00           a1 = sp + 0x91ec
  7380: 95 17 78 25 01           a0 = sp + 0x12578
  7385: 7b 78                    u64 [a0] = a1
  7387: 82 18 b8 00              a1 = u64 [sp + 0xb8]
  7391: 7b 78 08                 u64 [a0 + 0x8] = a1
  7394: 33 07 58 02 01           a0 = 0x10258
  7399: 95 18 ec 91 00           a1 = sp + 0x91ec
  7404: 7b 87 84 00              u64 [a1 + 0x84] = a0
  7408: 49 28 8c 00 02           u64 [a1 + 140] = 0x2
  7413: 49 28 a4 00              u64 [a1 + 164] = 0
  7417: 95 17 78 25 01           a0 = sp + 0x12578
  7422: 7b 87 94 00              u64 [a1 + 0x94] = a0
  7426: 49 28 9c 00 01           u64 [a1 + 156] = 0x1
  7431: 95 17 78 b5 01           a0 = sp + 0x1b578
  7436: 95 18 70 92 00           a1 = sp + 0x9270
  7441: 50 10 6a 50 02           ra = 106, jump @395
      :                          @353 [@dyn 53]
  7446: 95 17 78 b5 01           a0 = sp + 0x1b578
  7451: 82 75 08                 s0 = u64 [a0 + 0x8]
  7454: 82 7b 10                 a4 = u64 [a0 + 0x10]
  7457: 82 76                    s1 = u64 [a0]
  7459: 33 07 02                 a0 = 0x2
  7462: 33 08                    a1 = 0
  7464: 33 09                    a2 = 0
  7466: 64 5a                    a3 = s0
  7468: 33 00 6c                 ra = 0x6c
  7471: 0a 64                    ecalli 100 // 'log'
  7473: 01                       fallthrough
      :                          @354 [@dyn 54]
  7474: 82 17 e8 00              a0 = u64 [sp + 0xe8]
  7478: c8 67 07                 a0 = a0 + s1
  7481: 53 27 00 f0 22           jump @360 if a0 <u 4294963200
      :                          @355
  7486: 82 18 d0 00              a1 = u64 [sp + 0xd0]
  7490: 95 87 00 10              a0 = a1 + 0x1000
  7494: 01                       fallthrough
      :                          @356
  7495: 82 78                    a1 = u64 [a0]
  7497: c9 87 09                 a2 = a0 - a1
  7500: ab 59 0f                 jump @360 if a2 != s0
      :                          @357
  7503: c9 68 09                 a2 = a1 - s1
  7506: 01                       fallthrough
      :                          @358
  7507: 82 7a                    a3 = u64 [a0]
  7509: ab 8a f2                 jump @356 if a3 != a1
      :                          @359
  7512: 7b 79                    u64 [a0] = a2
  7514: 01                       fallthrough
      :                          @360
  7515: 95 17 ec 91 00           a0 = sp + 0x91ec
  7520: 80 77                    a0 = u32 [a0]
  7522: 96 78 39 8e e3 38        a1 = a0 * 0x38e38e39
  7528: 98 88 2d                 a1 = a1 >> 0x2d
  7531: 96 88 00 90 00           a1 = a1 * 0x9000
  7536: bf 87 07                 i32 a0 = a0 - a1
  7539: 97 78 20                 a1 = a0 << 0x20
  7542: 14 09 00 00 00 00 ab aa 00 00 a2 = 0xaaab00000000
  7552: d6 98 08                 a1 = a1 mulhu a2
  7555: 98 89 17                 a2 = a1 >> 0x17
  7558: 96 99 40 ff              a2 = a2 * 0xffffffffffffff40
  7562: c8 97 07                 a0 = a0 + a2
  7565: 98 89 1d                 a2 = a1 >> 0x1d
  7568: 97 9a 01                 a3 = a2 << 0x1
  7571: c8 a9 09                 a2 = a2 + a3
  7574: 97 7a 30                 a3 = a0 << 0x30
  7577: 98 aa 36                 a3 = a3 >> 0x36
  7580: 6e 99                    a2 = zext.h a2
  7582: c8 a9 09                 a2 = a2 + a3
  7585: 98 88 11                 a1 = a1 >> 0x11
  7588: 33 05 00 10              s0 = 0x1000
  7592: 84 88 c0 0f              a1 = a1 & 0xfc0
  7596: 84 77 3f                 a0 = a0 & 0x3f
  7599: d4 87 07                 a0 = a0 | a1
  7602: 97 99 0c                 a2 = a2 << 0xc
  7605: 95 16 ec 01              s1 = sp + 0x1ec
  7609: c8 67 07                 a0 = a0 + s1
  7612: c8 97 07                 a0 = a0 + a2
  7615: 46 07 01                 u8 [a0 + 0] = 0x1
  7618: 95 17 ec 01              a0 = sp + 0x1ec
  7622: 33 08 00 10              a1 = 0x1000
  7626: 0a 13                    ecalli 19 // 'export'
  7628: c8 56 07                 a0 = s1 + s0
  7631: 33 08 00 10              a1 = 0x1000
  7635: 0a 13                    ecalli 19 // 'export'
  7637: 95 67 00 20              a0 = s1 + 0x2000
  7641: 33 08 00 10              a1 = 0x1000
  7645: 0a 13                    ecalli 19 // 'export'
  7647: 95 67 00 30              a0 = s1 + 0x3000
  7651: 33 08 00 10              a1 = 0x1000
  7655: 0a 13                    ecalli 19 // 'export'
  7657: 95 67 00 40              a0 = s1 + 0x4000
  7661: 33 08 00 10              a1 = 0x1000
  7665: 0a 13                    ecalli 19 // 'export'
  7667: 95 67 00 50              a0 = s1 + 0x5000
  7671: 33 08 00 10              a1 = 0x1000
  7675: 0a 13                    ecalli 19 // 'export'
  7677: 95 67 00 60              a0 = s1 + 0x6000
  7681: 33 08 00 10              a1 = 0x1000
  7685: 0a 13                    ecalli 19 // 'export'
  7687: 95 67 00 70              a0 = s1 + 0x7000
  7691: 33 08 00 10              a1 = 0x1000
  7695: 0a 13                    ecalli 19 // 'export'
  7697: 95 67 00 80 00           a0 = s1 + 0x8000
  7702: 33 08 00 10              a1 = 0x1000
  7706: 0a 13                    ecalli 19 // 'export'
  7708: 95 17 78 25 01           a0 = sp + 0x12578
  7713: 95 18 ec 91 00           a1 = sp + 0x91ec
  7718: 7b 78                    u64 [a0] = a1
  7720: 82 18 b8 00              a1 = u64 [sp + 0xb8]
  7724: 7b 78 08                 u64 [a0 + 0x8] = a1
  7727: 33 07 78 02 01           a0 = 0x10278
  7732: 95 18 ec 91 00           a1 = sp + 0x91ec
  7737: 7b 87 84 00              u64 [a1 + 0x84] = a0
  7741: 49 28 8c 00 02           u64 [a1 + 140] = 0x2
  7746: 95 17 78 25 01           a0 = sp + 0x12578
  7751: 7b 87 94 00              u64 [a1 + 0x94] = a0
  7755: 49 28 9c 00 01           u64 [a1 + 156] = 0x1
  7760: 49 28 a4 00              u64 [a1 + 164] = 0
  7764: 95 17 78 b5 01           a0 = sp + 0x1b578
  7769: 95 18 70 92 00           a1 = sp + 0x9270
  7774: 50 10 6e 03 01           ra = 110, jump @395
      :                          @361 [@dyn 55]
  7779: 95 17 78 b5 01           a0 = sp + 0x1b578
  7784: 82 75 08                 s0 = u64 [a0 + 0x8]
  7787: 82 7b 10                 a4 = u64 [a0 + 0x10]
  7790: 82 76                    s1 = u64 [a0]
  7792: 33 07 02                 a0 = 0x2
  7795: 33 08                    a1 = 0
  7797: 33 09                    a2 = 0
  7799: 64 5a                    a3 = s0
  7801: 33 00 70                 ra = 0x70
  7804: 0a 64                    ecalli 100 // 'log'
  7806: 01                       fallthrough
      :                          @362 [@dyn 56]
  7807: 82 17 e8 00              a0 = u64 [sp + 0xe8]
  7811: c8 67 07                 a0 = a0 + s1
  7814: 53 27 00 f0 24           jump @368 if a0 <u 4294963200
      :                          @363
  7819: 82 17 d0 00              a0 = u64 [sp + 0xd0]
  7823: 95 77 00 10              a0 = a0 + 0x1000
  7827: 01                       fallthrough
      :                          @364
  7828: 82 78                    a1 = u64 [a0]
  7830: c9 87 09                 a2 = a0 - a1
  7833: ab 59 11                 jump @368 if a2 != s0
      :                          @365
  7836: c9 68 09                 a2 = a1 - s1
  7839: 01                       fallthrough
      :                          @366
  7840: 82 7a                    a3 = u64 [a0]
  7842: ab 8a f2                 jump @364 if a3 != a1
      :                          @367
  7845: 7b 79                    u64 [a0] = a2
  7847: 33 0b                    a4 = 0
  7849: 01                       fallthrough
      :                          @368
  7850: 33 07 00 00 01           a0 = 0x10000
  7855: 33 08                    a1 = 0
  7857: 33 09 20 3e 02           a2 = 0x23e20
  7862: c8 91 01                 sp = sp + a2
  7865: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  7869: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  7873: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  7877: 95 11 f8 07              sp = sp + 0x7f8
  7881: 32 00                    ret
      :                          @369
  7883: 00                       trap
      :                          @370
  7884: 00                       trap
      :                          @371
  7885: 00                       trap
      :                          @372
  7886: 00                       trap
      :                          @373
  7887: 00                       trap
      :                          @374
  7888: 00                       trap
      :                          @375
  7889: 00                       trap
      :                          @376
  7890: 00                       trap
      :                          @377
  7891: 00                       trap
      :                          @378
  7892: 00                       trap
      :                          @379
  7893: 00                       trap
      :                          @380
  7894: 00                       trap
      :                          @381 [export #1: 'accumulate']
  7895: 33 07 00 00 01           a0 = 0x10000
  7900: 33 08                    a1 = 0
  7902: 32 00                    ret
      :                          @382 [export #2: 'on_transfer']
  7904: 33 07 00 00 01           a0 = 0x10000
  7909: 33 08                    a1 = 0
  7911: 32 00                    ret
      :                          @383
  7913: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  7916: 7b 10 40                 u64 [sp + 0x40] = ra
  7919: 7b 15 38                 u64 [sp + 0x38] = s0
  7922: 7b 16 30                 u64 [sp + 0x30] = s1
  7925: 95 88 01                 a1 = a1 + 0x1
  7928: 51 08 53                 jump @391 if a1 == 0
      :                          @384
  7931: 64 75                    s0 = a0
  7933: 82 77                    a0 = u64 [a0]
  7935: 97 79 01                 a2 = a0 << 0x1
  7938: 33 0a 08                 a3 = 0x8
  7941: e4 a8 08                 a1 = maxu(a1, a3)
  7944: e4 89 06                 s1 = maxu(a2, a1)
  7947: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  7950: 98 88 3f                 a1 = a1 >> 0x3f
  7953: 51 07 12                 jump @386 if a0 == 0
      :                          @385
  7956: 82 59 08                 a2 = u64 [s0 + 0x8]
  7959: 7b 19 18                 u64 [sp + 0x18] = a2
  7962: 49 11 20 01              u64 [sp + 32] = 0x1
  7966: 7b 17 28                 u64 [sp + 0x28] = a0
  7969: 28 06                    jump @387
      :                          @386
  7971: 49 11 20                 u64 [sp + 32] = 0
  7974: 01                       fallthrough
      :                          @387
  7975: 64 17                    a0 = sp
  7977: 95 1a 18                 a3 = sp + 0x18
  7980: 64 69                    a2 = s1
  7982: 50 10 72 43 e1           ra = 114, jump @9
      :                          @388 [@dyn 57]
  7987: 82 18                    a1 = u64 [sp]
  7989: 82 17 08                 a0 = u64 [sp + 0x8]
  7992: 51 08 14                 jump @392 if a1 == 0
      :                          @389
  7995: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  8005: aa 87 0d                 jump @393 if a0 == a1
      :                          @390
  8008: 52 07 18                 jump @394 if a0 != 0
      :                          @391
  8011: 00                       trap
      :                          @392
  8012: 7b 57 08                 u64 [s0 + 0x8] = a0
  8015: 7b 56                    u64 [s0] = s1
  8017: 01                       fallthrough
      :                          @393
  8018: 82 10 40                 ra = u64 [sp + 0x40]
  8021: 82 15 38                 s0 = u64 [sp + 0x38]
  8024: 82 16 30                 s1 = u64 [sp + 0x30]
  8027: 95 11 48                 sp = sp + 0x48
  8030: 32 00                    ret
      :                          @394
  8032: 00                       trap
      :                          @395
  8033: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  8036: 7b 10 30                 u64 [sp + 0x30] = ra
  8039: 7b 15 28                 u64 [sp + 0x28] = s0
  8042: 7b 16 20                 u64 [sp + 0x20] = s1
  8045: 82 8a 08                 a3 = u64 [a1 + 0x8]
  8048: 64 75                    s0 = a0
  8050: 51 0a 35                 jump @400 if a3 == 0
      :                          @396
  8053: 82 89                    a2 = u64 [a1]
  8055: 33 07                    a0 = 0
  8057: 95 9b 08                 a4 = a2 + 0x8
  8060: 01                       fallthrough
      :                          @397
  8061: 82 bc                    a5 = u64 [a4]
  8063: c8 c7 07                 a0 = a0 + a5
  8066: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  8069: 95 bb 10                 a4 = a4 + 0x10
  8072: 52 0a f5                 jump @397 if a3 != 0
      :                          @398
  8075: 82 8a 18                 a3 = u64 [a1 + 0x18]
  8078: 51 0a 24                 jump @402 if a3 == 0
      :                          @399
  8081: 82 99 08                 a2 = u64 [a2 + 0x8]
  8084: 8e 99                    a2 = a2 >u 0
  8086: 88 7a 10                 a3 = a0 <u 0x10
  8089: 85 aa 01                 a3 = a3 ^ 0x1
  8092: d4 a9 09                 a2 = a2 | a3
  8095: 89 7a                    a3 = a0 <s 0
  8097: e0 a9 09                 a2 = a2 & ~a3
  8100: 52 09 0a                 jump @401 if a2 != 0
      :                          @400
  8103: 33 07                    a0 = 0
  8105: 33 09 01                 a2 = 0x1
  8108: 28 4b                    jump @410
      :                          @401
  8110: 97 77 01                 a0 = a0 << 0x1
  8113: 01                       fallthrough
      :                          @402
  8114: 51 07 41                 jump @409 if a0 == 0
      :                          @403
  8117: 57 07 74                 jump @415 if a0 <s 0
      :                          @404
  8120: 64 53                    t1 = s0
  8122: 33 09 00 10              a2 = 0x1000
  8126: 33 02 60 00 03           t0 = 0x30060
  8131: c8 92 0b                 a4 = t0 + a2
  8134: 01                       fallthrough
      :                          @405
  8135: 82 bc                    a5 = u64 [a4]
  8137: c8 7c 0a                 a3 = a5 + a0
  8140: ac ca 5b                 jump @413 if a3 <u a5
      :                          @406
  8143: 95 a5 01                 s0 = a3 + 0x1
  8146: 88 56 01                 s1 = s0 <u 0x1
  8149: d8 59 05                 s0 = a2 <u s0
  8152: d4 65 05                 s0 = s0 | s1
  8155: 52 05 4c                 jump @413 if s0 != 0
      :                          @407
  8158: 82 b6                    s1 = u64 [a4]
  8160: ab c6 e7                 jump @405 if s1 != a5
      :                          @408
  8163: 7b ba                    u64 [a4] = a3
  8165: c9 a2 09                 a2 = t0 - a3
  8168: 33 0a 00 10              a3 = 0x1000
  8172: c8 a9 09                 a2 = a2 + a3
  8175: 64 35                    s0 = t1
  8177: 28 06                    jump @410
      :                          @409
  8179: 33 09 01                 a2 = 0x1
  8182: 01                       fallthrough
      :                          @410
  8183: 7b 17                    u64 [sp] = a0
  8185: 7b 19 08                 u64 [sp + 0x8] = a2
  8188: 49 11 10                 u64 [sp + 16] = 0
  8191: 64 17                    a0 = sp
  8193: 50 10 74 49 0a           ra = 116, jump @613
      :                          @411 [@dyn 58]
  8198: 52 07 22                 jump @414 if a0 != 0
      :                          @412
  8201: 82 17 10                 a0 = u64 [sp + 0x10]
  8204: 82 18 08                 a1 = u64 [sp + 0x8]
  8207: 82 19                    a2 = u64 [sp]
  8209: 7b 57 10                 u64 [s0 + 0x10] = a0
  8212: 7b 58 08                 u64 [s0 + 0x8] = a1
  8215: 7b 59                    u64 [s0] = a2
  8217: 82 10 30                 ra = u64 [sp + 0x30]
  8220: 82 15 28                 s0 = u64 [sp + 0x28]
  8223: 82 16 20                 s1 = u64 [sp + 0x20]
  8226: 95 11 38                 sp = sp + 0x38
  8229: 32 00                    ret
      :                          @413
  8231: 00                       trap
      :                          @414
  8232: 00                       trap
      :                          @415
  8233: 00                       trap
      :                          @416 [@dyn 59]
  8234: 82 72                    t0 = u64 [a0]
  8236: 33 09 00 f0              a2 = 0xfffffffffffff000
  8240: 95 2a ff ef              a3 = t0 + 0xffffffffffffefff
  8244: ac 9a 27                 jump @422 if a3 <u a2
      :                          @417
  8247: 82 77 08                 a0 = u64 [a0 + 0x8]
  8250: 33 09 60 00 03           a2 = 0x30060
  8255: 95 99 00 10              a2 = a2 + 0x1000
  8259: 01                       fallthrough
      :                          @418
  8260: 82 9a                    a3 = u64 [a2]
  8262: c9 a9 0b                 a4 = a2 - a3
  8265: ab 7b 12                 jump @422 if a4 != a0
      :                          @419
  8268: c9 2a 0b                 a4 = a3 - t0
  8271: 01                       fallthrough
      :                          @420
  8272: 82 9c                    a5 = u64 [a2]
  8274: ab ac f2                 jump @418 if a5 != a3
      :                          @421
  8277: 7b 9b                    u64 [a2] = a4
  8279: 33 08                    a1 = 0
  8281: 32 00                    ret
      :                          @422
  8283: 32 00                    ret
      :                          @423 [@dyn 60]
  8285: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  8288: 7b 10 18                 u64 [sp + 0x18] = ra
  8291: 7b 15 10                 u64 [sp + 0x10] = s0
  8294: 7b 16 08                 u64 [sp + 0x8] = s1
  8297: 64 75                    s0 = a0
  8299: 82 7a 10                 a3 = u64 [a0 + 0x10]
  8302: 82 77                    a0 = u64 [a0]
  8304: c9 a7 07                 a0 = a0 - a3
  8307: 64 96                    s1 = a2
  8309: ac 97 2a                 jump @426 if a0 <u a2
      :                          @424
  8312: 7b 1a                    u64 [sp] = a3
  8314: 82 57 08                 a0 = u64 [s0 + 0x8]
  8317: c8 a7 07                 a0 = a0 + a3
  8320: 64 69                    a2 = s1
  8322: 50 10 7a 44 01           ra = 122, jump @445
      :                          @425 [@dyn 61]
  8327: 82 17                    a0 = u64 [sp]
  8329: c8 76 06                 s1 = s1 + a0
  8332: 7b 56 10                 u64 [s0 + 0x10] = s1
  8335: 33 07                    a0 = 0
  8337: 82 10 18                 ra = u64 [sp + 0x18]
  8340: 82 15 10                 s0 = u64 [sp + 0x10]
  8343: 82 16 08                 s1 = u64 [sp + 0x8]
  8346: 95 11 20                 sp = sp + 0x20
  8349: 32 00                    ret
      :                          @426
  8351: 64 57                    a0 = s0
  8353: 7b 18                    u64 [sp] = a1
  8355: 64 a8                    a1 = a3
  8357: 64 69                    a2 = s1
  8359: 50 10 7c 09 e1           ra = 124, jump @41
      :                          @427 [@dyn 62]
  8364: 82 18                    a1 = u64 [sp]
  8366: 82 5a 10                 a3 = u64 [s0 + 0x10]
  8369: 28 c7                    jump @424
      :                          @428 [@dyn 63]
  8371: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  8374: 7b 10 20                 u64 [sp + 0x20] = ra
  8377: 7b 15 18                 u64 [sp + 0x18] = s0
  8380: 7b 16 10                 u64 [sp + 0x10] = s1
  8383: 64 86                    s1 = a1
  8385: 83 88                    i32 a1 = a1 + 0
  8387: 33 09 80 00              a2 = 0x80
  8391: 64 7a                    a3 = a0
  8393: ae 98 2c                 jump @433 if a1 >=u a2
      :                          @429
  8396: 82 a8 10                 a1 = u64 [a3 + 0x10]
  8399: 82 a7                    a0 = u64 [a3]
  8401: ab 78 13                 jump @432 if a1 != a0
      :                          @430
  8404: 64 a7                    a0 = a3
  8406: 64 a5                    s0 = a3
  8408: 50 20 80 00 11 fe        ra = 128, jump @383
      :                          @431 [@dyn 64]
  8414: 64 5a                    a3 = s0
  8416: 82 58 10                 a1 = u64 [s0 + 0x10]
  8419: 01                       fallthrough
      :                          @432
  8420: 82 a7 08                 a0 = u64 [a3 + 0x8]
  8423: c8 87 07                 a0 = a0 + a1
  8426: 78 76                    u8 [a0] = s1
  8428: 95 88 01                 a1 = a1 + 0x1
  8431: 7b a8 10                 u64 [a3 + 0x10] = a1
  8434: 28 ac 00                 jump @441
      :                          @433
  8437: 8b 67 0b                 i32 a0 = s1 >> 0xb
  8440: 48 11 0c                 u32 [sp + 12] = 0
  8443: 52 07 1c                 jump @435 if a0 != 0
      :                          @434
  8446: 98 67 06                 a0 = s1 >> 0x6
  8449: 86 77 c0 00              a0 = a0 | 0xc0
  8453: 78 17 0c                 u8 [sp + 0xc] = a0
  8456: 84 67 3f                 a0 = s1 & 0x3f
  8459: 86 77 80 00              a0 = a0 | 0x80
  8463: 78 17 0d                 u8 [sp + 0xd] = a0
  8466: 33 06 02                 s1 = 0x2
  8469: 28 63                    jump @438
      :                          @435
  8471: 8b 67 10                 i32 a0 = s1 >> 0x10
  8474: 52 07 29                 jump @437 if a0 != 0
      :                          @436
  8477: 98 67 0c                 a0 = s1 >> 0xc
  8480: 86 77 e0 00              a0 = a0 | 0xe0
  8484: 78 17 0c                 u8 [sp + 0xc] = a0
  8487: 97 67 34                 a0 = s1 << 0x34
  8490: 98 77 3a                 a0 = a0 >> 0x3a
  8493: 95 77 80 00              a0 = a0 + 0x80
  8497: 78 17 0d                 u8 [sp + 0xd] = a0
  8500: 84 67 3f                 a0 = s1 & 0x3f
  8503: 86 77 80 00              a0 = a0 | 0x80
  8507: 78 17 0e                 u8 [sp + 0xe] = a0
  8510: 33 06 03                 s1 = 0x3
  8513: 28 37                    jump @438
      :                          @437
  8515: 97 67 2b                 a0 = s1 << 0x2b
  8518: 98 77 3d                 a0 = a0 >> 0x3d
  8521: 95 77 f0 00              a0 = a0 + 0xf0
  8525: 78 17 0c                 u8 [sp + 0xc] = a0
  8528: 97 67 2e                 a0 = s1 << 0x2e
  8531: 98 77 3a                 a0 = a0 >> 0x3a
  8534: 95 77 80 00              a0 = a0 + 0x80
  8538: 78 17 0d                 u8 [sp + 0xd] = a0
  8541: 97 67 34                 a0 = s1 << 0x34
  8544: 98 77 3a                 a0 = a0 >> 0x3a
  8547: 95 77 80 00              a0 = a0 + 0x80
  8551: 78 17 0e                 u8 [sp + 0xe] = a0
  8554: 84 67 3f                 a0 = s1 & 0x3f
  8557: 86 77 80 00              a0 = a0 | 0x80
  8561: 78 17 0f                 u8 [sp + 0xf] = a0
  8564: 33 06 04                 s1 = 0x4
  8567: 01                       fallthrough
      :                          @438
  8568: 82 a5 10                 s0 = u64 [a3 + 0x10]
  8571: 82 a7                    a0 = u64 [a3]
  8573: c9 57 07                 a0 = a0 - s0
  8576: ac 67 2e                 jump @442 if a0 <u s1
      :                          @439
  8579: 7b 1a                    u64 [sp] = a3
  8581: 82 a7 08                 a0 = u64 [a3 + 0x8]
  8584: c8 57 07                 a0 = a0 + s0
  8587: 95 18 0c                 a1 = sp + 0xc
  8590: 64 69                    a2 = s1
  8592: 50 20 82 00 36           ra = 130, jump @445
      :                          @440 [@dyn 65]
  8597: c8 56 06                 s1 = s1 + s0
  8600: 82 17                    a0 = u64 [sp]
  8602: 7b 76 10                 u64 [a0 + 0x10] = s1
  8605: 01                       fallthrough
      :                          @441
  8606: 33 07                    a0 = 0
  8608: 82 10 20                 ra = u64 [sp + 0x20]
  8611: 82 15 18                 s0 = u64 [sp + 0x18]
  8614: 82 16 10                 s1 = u64 [sp + 0x10]
  8617: 95 11 28                 sp = sp + 0x28
  8620: 32 00                    ret
      :                          @442
  8622: 64 a7                    a0 = a3
  8624: 64 58                    a1 = s0
  8626: 64 69                    a2 = s1
  8628: 64 a5                    s0 = a3
  8630: 50 20 84 00 fa df        ra = 132, jump @41
      :                          @443 [@dyn 66]
  8636: 64 5a                    a3 = s0
  8638: 82 55 10                 s0 = u64 [s0 + 0x10]
  8641: 28 c2                    jump @439
      :                          @444 [@dyn 67]
  8643: 28 87 08                 jump @613
      :                          @445
  8646: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  8649: 7b 10 18                 u64 [sp + 0x18] = ra
  8652: 7b 15 10                 u64 [sp + 0x10] = s0
  8655: 7b 16 08                 u64 [sp + 0x8] = s1
  8658: 53 19 10 64              jump @454 if a2 <u 16
      :                          @446
  8662: 8d 7a                    i32 a3 = -a0
  8664: 84 a2 07                 t0 = a3 & 0x7
  8667: c8 27 0b                 a4 = a0 + t0
  8670: 51 02 15                 jump @449 if t0 == 0
      :                          @447
  8673: 64 8c                    a5 = a1
  8675: 64 75                    s0 = a0
  8677: 01                       fallthrough
      :                          @448
  8678: 7c ca                    a3 = u8 [a5]
  8680: 78 5a                    u8 [s0] = a3
  8682: 95 55 01                 s0 = s0 + 0x1
  8685: 95 cc 01                 a5 = a5 + 0x1
  8688: ac b5 f6                 jump @448 if s0 <u a4
      :                          @449
  8691: c8 28 03                 t1 = a1 + t0
  8694: c9 29 02                 t0 = a2 - t0
  8697: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  8700: 84 38 07                 a1 = t1 & 0x7
  8703: c8 4b 0a                 a3 = a4 + t2
  8706: 51 08 3b                 jump @456 if a1 == 0
      :                          @450
  8709: 58 04 4b                 jump @459 if t2 <=s 0
      :                          @451
  8712: 97 38 03                 a1 = t1 << 0x3
  8715: 84 80 38                 ra = a1 & 0x38
  8718: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  8721: 82 c5                    s0 = u64 [a5]
  8723: 8d 88                    i32 a1 = -a1
  8725: 84 88 38                 a1 = a1 & 0x38
  8728: 95 cc 08                 a5 = a5 + 0x8
  8731: 01                       fallthrough
      :                          @452
  8732: 82 c6                    s1 = u64 [a5]
  8734: d0 05 05                 s0 = s0 >> ra
  8737: cf 86 09                 a2 = s1 << a1
  8740: d4 59 09                 a2 = a2 | s0
  8743: 7b b9                    u64 [a4] = a2
  8745: 95 bb 08                 a4 = a4 + 0x8
  8748: 95 cc 08                 a5 = a5 + 0x8
  8751: 64 65                    s0 = s1
  8753: ac ab eb                 jump @452 if a4 <u a3
      :                          @453
  8756: 28 1c                    jump @459
      :                          @454
  8758: 64 7a                    a3 = a0
  8760: 52 09 21                 jump @460 if a2 != 0
      :                          @455
  8763: 28 2f                    jump @462
      :                          @456
  8765: 58 04 13                 jump @459 if t2 <=s 0
      :                          @457
  8768: 64 38                    a1 = t1
  8770: 01                       fallthrough
      :                          @458
  8771: 82 89                    a2 = u64 [a1]
  8773: 7b b9                    u64 [a4] = a2
  8775: 95 bb 08                 a4 = a4 + 0x8
  8778: 95 88 08                 a1 = a1 + 0x8
  8781: ac ab f6                 jump @458 if a4 <u a3
      :                          @459
  8784: c8 43 08                 a1 = t1 + t2
  8787: 84 29 07                 a2 = t0 & 0x7
  8790: 51 09 14                 jump @462 if a2 == 0
      :                          @460
  8793: c8 a9 09                 a2 = a2 + a3
  8796: 01                       fallthrough
      :                          @461
  8797: 7c 8b                    a4 = u8 [a1]
  8799: 78 ab                    u8 [a3] = a4
  8801: 95 aa 01                 a3 = a3 + 0x1
  8804: 95 88 01                 a1 = a1 + 0x1
  8807: ac 9a f6                 jump @461 if a3 <u a2
      :                          @462
  8810: 82 10 18                 ra = u64 [sp + 0x18]
  8813: 82 15 10                 s0 = u64 [sp + 0x10]
  8816: 82 16 08                 s1 = u64 [sp + 0x8]
  8819: 95 11 20                 sp = sp + 0x20
  8822: 32 00                    ret
      :                          @463
  8824: 53 19 10 48              jump @472 if a2 <u 16
      :                          @464
  8828: 8d 7a                    i32 a3 = -a0
  8830: 84 aa 07                 a3 = a3 & 0x7
  8833: c8 a7 0b                 a4 = a0 + a3
  8836: 51 0a 0e                 jump @467 if a3 == 0
      :                          @465
  8839: 64 7c                    a5 = a0
  8841: 01                       fallthrough
      :                          @466
  8842: 78 c8                    u8 [a5] = a1
  8844: 95 cc 01                 a5 = a5 + 0x1
  8847: ac bc fb                 jump @466 if a5 <u a4
      :                          @467
  8850: c9 a9 03                 t1 = a2 - a3
  8853: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  8856: c8 cb 0a                 a3 = a4 + a5
  8859: 58 0c 1d                 jump @470 if a5 <=s 0
      :                          @468
  8862: 84 82 ff 00              t0 = a1 & 0xff
  8866: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  8876: ca 92 0c                 a5 = t0 * a2
  8879: 01                       fallthrough
      :                          @469
  8880: 7b bc                    u64 [a4] = a5
  8882: 95 bb 08                 a4 = a4 + 0x8
  8885: ac ab fb                 jump @469 if a4 <u a3
      :                          @470
  8888: 84 39 07                 a2 = t1 & 0x7
  8891: 52 09 0a                 jump @473 if a2 != 0
      :                          @471
  8894: 28 13                    jump @475
      :                          @472
  8896: 64 7a                    a3 = a0
  8898: 51 09 0f                 jump @475 if a2 == 0
      :                          @473
  8901: c8 a9 09                 a2 = a2 + a3
  8904: 01                       fallthrough
      :                          @474
  8905: 78 a8                    u8 [a3] = a1
  8907: 95 aa 01                 a3 = a3 + 0x1
  8910: ac 9a fb                 jump @474 if a3 <u a2
      :                          @475
  8913: 32 00                    ret
      :                          @476 [@dyn 68]
  8915: 82 77                    a0 = u64 [a0]
  8917: 01                       fallthrough
      :                          @477
  8918: 28                       jump @477
      :                          @478
  8919: 95 11 a8                 sp = sp + 0xffffffffffffffa8
  8922: 7b 10 50                 u64 [sp + 0x50] = ra
  8925: 7b 15 48                 u64 [sp + 0x48] = s0
  8928: 7b 16 40                 u64 [sp + 0x40] = s1
  8931: 7b 18                    u64 [sp] = a1
  8933: 98 79 04                 a2 = a0 >> 0x4
  8936: 33 08 27                 a1 = 0x27
  8939: 33 0a 6a 00 01           a3 = 0x1006a
  8944: 53 29 71 02 7b           jump @481 if a2 <u 625
      :                          @479
  8949: 33 08 27                 a1 = 0x27
  8952: 95 1b 3e                 a4 = sp + 0x3e
  8955: 3a 09 50 00 03           a2 = u64 [0x30050]
  8960: 7b 19 10                 u64 [sp + 0x10] = a2
  8963: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
  8969: 33 03 7b 14              t1 = 0x147b
  8973: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
  8979: 01                       fallthrough
      :                          @480
  8980: 64 72                    t0 = a0
  8982: 82 17 10                 a0 = u64 [sp + 0x10]
  8985: d6 72 07                 a0 = t0 mulhu a0
  8988: 98 77 0b                 a0 = a0 >> 0xb
  8991: 82 19 08                 a2 = u64 [sp + 0x8]
  8994: c0 97 09                 i32 a2 = a0 * a2
  8997: c8 29 06                 s1 = a2 + t0
  9000: 97 69 30                 a2 = s1 << 0x30
  9003: 98 99 32                 a2 = a2 >> 0x32
  9006: ca 39 09                 a2 = a2 * t1
  9009: 98 94 11                 t2 = a2 >> 0x11
  9012: 98 99 10                 a2 = a2 >> 0x10
  9015: 84 99 fe 07              a2 = a2 & 0x7fe
  9019: 96 4c 9c                 a5 = t2 * 0xffffffffffffff9c
  9022: c8 6c 0c                 a5 = a5 + s1
  9025: 97 cc 31                 a5 = a5 << 0x31
  9028: 98 cc 30                 a5 = a5 >> 0x30
  9031: c8 a9 09                 a2 = a2 + a3
  9034: 7c 96                    s1 = u8 [a2]
  9036: 7c 99 01                 a2 = u8 [a2 + 0x1]
  9039: c8 ac 0c                 a5 = a5 + a3
  9042: 7c c5 01                 s0 = u8 [a5 + 0x1]
  9045: 7c cc                    a5 = u8 [a5]
  9047: 78 b9 ff                 u8 [a4 + 0xffffffffffffffff] = a2
  9050: 78 b6 fe                 u8 [a4 + 0xfffffffffffffffe] = s1
  9053: 78 b5 01                 u8 [a4 + 0x1] = s0
  9056: 78 bc                    u8 [a4] = a5
  9058: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
  9061: 95 bb fc                 a4 = a4 + 0xfffffffffffffffc
  9064: ac 20 ac                 jump @480 if ra <u t0
      :                          @481
  9067: 54 17 63 36              jump @483 if a0 <=u 99
      :                          @482
  9071: 97 79 30                 a2 = a0 << 0x30
  9074: 98 99 32                 a2 = a2 >> 0x32
  9077: 96 99 7b 14              a2 = a2 * 0x147b
  9081: 98 99 11                 a2 = a2 >> 0x11
  9084: 96 9b 9c                 a4 = a2 * 0xffffffffffffff9c
  9087: c8 b7 07                 a0 = a0 + a4
  9090: 97 77 31                 a0 = a0 << 0x31
  9093: 98 77 30                 a0 = a0 >> 0x30
  9096: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  9099: c8 a7 07                 a0 = a0 + a3
  9102: 7c 7b 01                 a4 = u8 [a0 + 0x1]
  9105: 7c 77                    a0 = u8 [a0]
  9107: 95 1c 19                 a5 = sp + 0x19
  9110: c8 8c 0c                 a5 = a5 + a1
  9113: 78 cb 01                 u8 [a5 + 0x1] = a4
  9116: 78 c7                    u8 [a5] = a0
  9118: 64 97                    a0 = a2
  9120: 01                       fallthrough
      :                          @483
  9121: 55 17 0a 14              jump @485 if a0 >=u 10
      :                          @484
  9125: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  9128: 95 19 19                 a2 = sp + 0x19
  9131: c8 89 09                 a2 = a2 + a1
  9134: 83 77 30                 i32 a0 = a0 + 0x30
  9137: 78 97                    u8 [a2] = a0
  9139: 28 1c                    jump @486
      :                          @485
  9141: 97 77 01                 a0 = a0 << 0x1
  9144: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  9147: c8 a7 07                 a0 = a0 + a3
  9150: 7c 79 01                 a2 = u8 [a0 + 0x1]
  9153: 7c 77                    a0 = u8 [a0]
  9155: 95 1a 19                 a3 = sp + 0x19
  9158: c8 8a 0a                 a3 = a3 + a1
  9161: 78 a9 01                 u8 [a3 + 0x1] = a2
  9164: 78 a7                    u8 [a3] = a0
  9166: 01                       fallthrough
      :                          @486
  9167: 95 1a 19                 a3 = sp + 0x19
  9170: c8 8a 0a                 a3 = a3 + a1
  9173: 9a 8b 27                 a4 = 0x27 - a1
  9176: 33 08 68 00 01           a1 = 0x10068
  9181: 82 17                    a0 = u64 [sp]
  9183: 33 09                    a2 = 0
  9185: 50 20 8a 00 13           ra = 138, jump @488
      :                          @487 [@dyn 69]
  9190: 82 10 50                 ra = u64 [sp + 0x50]
  9193: 82 15 48                 s0 = u64 [sp + 0x48]
  9196: 82 16 40                 s1 = u64 [sp + 0x40]
  9199: 95 11 58                 sp = sp + 0x58
  9202: 32 00                    ret
      :                          @488
  9204: 95 11 98                 sp = sp + 0xffffffffffffff98
  9207: 7b 10 60                 u64 [sp + 0x60] = ra
  9210: 7b 15 58                 u64 [sp + 0x58] = s0
  9213: 7b 16 50                 u64 [sp + 0x50] = s1
  9216: 80 73 34                 t1 = u32 [a0 + 0x34]
  9219: 7b 1a 20                 u64 [sp + 0x20] = a3
  9222: 64 9c                    a5 = a2
  9224: 84 36 01                 s1 = t1 & 0x1
  9227: 33 02 2b                 t0 = 0x2b
  9230: 33 09 00 00 11           a2 = 0x110000
  9235: 84 3a 04                 a3 = t1 & 0x4
  9238: 7b 1b 28                 u64 [sp + 0x28] = a4
  9241: c8 b6 04                 t2 = s1 + a4
  9244: 7b 1c 30                 u64 [sp + 0x30] = a5
  9247: 52 0a 10                 jump @491 if a3 != 0
      :                          @489
  9250: 49 11 38                 u64 [sp + 56] = 0
  9253: 82 78                    a1 = u64 [a0]
  9255: 94 69 2b                 a2 = 0x2b if s1 != 0
  9258: 52 08 35                 jump @495 if a1 != 0
      :                          @490
  9261: 28 56                    jump @500
      :                          @491
  9263: 7b 18 38                 u64 [sp + 0x38] = a1
  9266: 33 09                    a2 = 0
  9268: 51 0c 1b                 jump @494 if a5 == 0
      :                          @492
  9271: 82 1b 38                 a4 = u64 [sp + 0x38]
  9274: 01                       fallthrough
      :                          @493
  9275: 7d b5                    s0 = i8 [a4]
  9277: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
  9280: 85 5a 01                 a3 = s0 ^ 0x1
  9283: c8 a9 09                 a2 = a2 + a3
  9286: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  9289: 95 bb 01                 a4 = a4 + 0x1
  9292: 52 0c ef                 jump @493 if a5 != 0
      :                          @494
  9295: c8 94 04                 t2 = t2 + a2
  9298: 33 09 00 00 11           a2 = 0x110000
  9303: 82 78                    a1 = u64 [a0]
  9305: db 62 09                 a2 = t0 if s1 != 0
  9308: 51 08 27                 jump @500 if a1 == 0
      :                          @495
  9311: 82 7a 08                 a3 = u64 [a0 + 0x8]
  9314: ae a4 21                 jump @500 if t2 >=u a3
      :                          @496
  9317: 84 38 08                 a1 = t1 & 0x8
  9320: 52 08 51                 jump @503 if a1 != 0
      :                          @497
  9323: 7c 76 38                 s1 = u8 [a0 + 0x38]
  9326: c9 4a 0a                 a3 = a3 - t2
  9329: 7b 19 18                 u64 [sp + 0x18] = a2
  9332: 5a 16 01 a0 00           jump @510 if s1 >s 1
      :                          @498
  9337: 52 06 ad 00              jump @512 if s1 != 0
      :                          @499
  9341: 7b 1a 10                 u64 [sp + 0x10] = a3
  9344: 28 ac 00                 jump @513
      :                          @500
  9347: 82 75 20                 s0 = u64 [a0 + 0x20]
  9350: 82 76 28                 s1 = u64 [a0 + 0x28]
  9353: 64 57                    a0 = s0
  9355: 64 68                    a1 = s1
  9357: 82 1a 38                 a3 = u64 [sp + 0x38]
  9360: 82 1b 30                 a4 = u64 [sp + 0x30]
  9363: 50 20 8c 00 75 01        ra = 140, jump @533
      :                          @501 [@dyn 70]
  9369: 33 08 01                 a1 = 0x1
  9372: 52 07 be 00              jump @518 if a0 != 0
      :                          @502
  9376: 82 6c 18                 a5 = u64 [s1 + 0x18]
  9379: 64 57                    a0 = s0
  9381: 82 18 20                 a1 = u64 [sp + 0x20]
  9384: 82 19 28                 a2 = u64 [sp + 0x28]
  9387: 82 10 60                 ra = u64 [sp + 0x60]
  9390: 82 15 58                 s0 = u64 [sp + 0x58]
  9393: 82 16 50                 s1 = u64 [sp + 0x50]
  9396: 95 11 68                 sp = sp + 0x68
  9399: 32 0c                    jump [a5]
      :                          @503
  9401: 7b 1a 40                 u64 [sp + 0x40] = a3
  9404: 64 45                    s0 = t2
  9406: 81 78 30                 a1 = i32 [a0 + 0x30]
  9409: 7b 18 10                 u64 [sp + 0x10] = a1
  9412: 7c 7a 38                 a3 = u8 [a0 + 0x38]
  9415: 7b 1a 08                 u64 [sp + 0x8] = a3
  9418: 82 7a 20                 a3 = u64 [a0 + 0x20]
  9421: 82 78 28                 a1 = u64 [a0 + 0x28]
  9424: 48 17 30 30              u32 [a0 + 48] = 0x30
  9428: 7b 17                    u64 [sp] = a0
  9430: 46 17 38 01              u8 [a0 + 56] = 0x1
  9434: 7b 1a 48                 u64 [sp + 0x48] = a3
  9437: 64 a7                    a0 = a3
  9439: 64 86                    s1 = a1
  9441: 82 1a 38                 a3 = u64 [sp + 0x38]
  9444: 82 1b 30                 a4 = u64 [sp + 0x30]
  9447: 50 20 8e 00 21 01        ra = 142, jump @533
      :                          @504 [@dyn 71]
  9453: 52 07 69                 jump @517 if a0 != 0
      :                          @505
  9456: 82 17 40                 a0 = u64 [sp + 0x40]
  9459: c9 57 05                 s0 = a0 - s0
  9462: 95 55 01                 s0 = s0 + 0x1
  9465: 01                       fallthrough
      :                          @506
  9466: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  9469: 51 05 cb 00              jump @528 if s0 == 0
      :                          @507
  9473: 82 69 20                 a2 = u64 [s1 + 0x20]
  9476: 33 08 30                 a1 = 0x30
  9479: 82 17 48                 a0 = u64 [sp + 0x48]
  9482: b4 90 02 90 00           ra = 144, jump [a2]
      :                          @508 [@dyn 72]
  9487: 51 07 eb                 jump @506 if a0 == 0
      :                          @509
  9490: 28 44                    jump @517
      :                          @510
  9492: 52 16 02 12              jump @512 if s1 != 2
      :                          @511
  9496: 98 a6 01                 s1 = a3 >> 0x1
  9499: 95 a8 01                 a1 = a3 + 0x1
  9502: 98 88 01                 a1 = a1 >> 0x1
  9505: 7b 18 10                 u64 [sp + 0x10] = a1
  9508: 28 08                    jump @513
      :                          @512
  9510: 64 a6                    s1 = a3
  9512: 49 11 10                 u64 [sp + 16] = 0
  9515: 01                       fallthrough
      :                          @513
  9516: 82 78 20                 a1 = u64 [a0 + 0x20]
  9519: 7b 18 48                 u64 [sp + 0x48] = a1
  9522: 82 75 28                 s0 = u64 [a0 + 0x28]
  9525: 81 77 30                 a0 = i32 [a0 + 0x30]
  9528: 7b 17 40                 u64 [sp + 0x40] = a0
  9531: 95 66 01                 s1 = s1 + 0x1
  9534: 01                       fallthrough
      :                          @514
  9535: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  9538: 51 06 28                 jump @519 if s1 == 0
      :                          @515
  9541: 82 59 20                 a2 = u64 [s0 + 0x20]
  9544: 82 17 48                 a0 = u64 [sp + 0x48]
  9547: 82 18 40                 a1 = u64 [sp + 0x40]
  9550: b4 90 02 92 00           ra = 146, jump [a2]
      :                          @516 [@dyn 73]
  9555: 51 07 ec                 jump @514 if a0 == 0
      :                          @517
  9558: 33 08 01                 a1 = 0x1
  9561: 01                       fallthrough
      :                          @518
  9562: 64 87                    a0 = a1
  9564: 82 10 60                 ra = u64 [sp + 0x60]
  9567: 82 15 58                 s0 = u64 [sp + 0x58]
  9570: 82 16 50                 s1 = u64 [sp + 0x50]
  9573: 95 11 68                 sp = sp + 0x68
  9576: 32 00                    ret
      :                          @519
  9578: 82 16 48                 s1 = u64 [sp + 0x48]
  9581: 64 67                    a0 = s1
  9583: 64 58                    a1 = s0
  9585: 82 19 18                 a2 = u64 [sp + 0x18]
  9588: 82 1a 38                 a3 = u64 [sp + 0x38]
  9591: 82 1b 30                 a4 = u64 [sp + 0x30]
  9594: 50 20 94 00 8e 00        ra = 148, jump @533
      :                          @520 [@dyn 74]
  9600: 33 08 01                 a1 = 0x1
  9603: 52 07 d7                 jump @518 if a0 != 0
      :                          @521
  9606: 82 5a 18                 a3 = u64 [s0 + 0x18]
  9609: 64 67                    a0 = s1
  9611: 82 18 20                 a1 = u64 [sp + 0x20]
  9614: 82 19 28                 a2 = u64 [sp + 0x28]
  9617: b4 a0 02 96 00           ra = 150, jump [a3]
      :                          @522 [@dyn 75]
  9622: 33 08 01                 a1 = 0x1
  9625: 52 07 c1                 jump @518 if a0 != 0
      :                          @523
  9628: 82 17 10                 a0 = u64 [sp + 0x10]
  9631: 9a 77                    a0 = -a0
  9633: 7b 17 38                 u64 [sp + 0x38] = a0
  9636: 33 06 ff                 s1 = 0xffffffffffffffff
  9639: 01                       fallthrough
      :                          @524
  9640: 82 17 38                 a0 = u64 [sp + 0x38]
  9643: c8 67 07                 a0 = a0 + s1
  9646: 51 17 ff 45              jump @531 if a0 == 4294967295
      :                          @525
  9650: 82 59 20                 a2 = u64 [s0 + 0x20]
  9653: 82 17 48                 a0 = u64 [sp + 0x48]
  9656: 82 18 40                 a1 = u64 [sp + 0x40]
  9659: b4 90 02 98 00           ra = 152, jump [a2]
      :                          @526 [@dyn 76]
  9664: 95 66 01                 s1 = s1 + 0x1
  9667: 51 07 e5                 jump @524 if a0 == 0
      :                          @527
  9670: 28 39                    jump @532
      :                          @528
  9672: 82 6a 18                 a3 = u64 [s1 + 0x18]
  9675: 82 17 48                 a0 = u64 [sp + 0x48]
  9678: 82 18 20                 a1 = u64 [sp + 0x20]
  9681: 82 19 28                 a2 = u64 [sp + 0x28]
  9684: b4 a0 02 9a 00           ra = 154, jump [a3]
      :                          @529 [@dyn 77]
  9689: 33 08 01                 a1 = 0x1
  9692: 52 07 7e ff              jump @518 if a0 != 0
      :                          @530
  9696: 33 08                    a1 = 0
  9698: 82 16                    s1 = u64 [sp]
  9700: 82 17 10                 a0 = u64 [sp + 0x10]
  9703: 7a 67 30                 u32 [s1 + 0x30] = a0
  9706: 82 17 08                 a0 = u64 [sp + 0x8]
  9709: 78 67 38                 u8 [s1 + 0x38] = a0
  9712: 28 6a ff                 jump @518
      :                          @531
  9715: 82 16 10                 s1 = u64 [sp + 0x10]
  9718: 82 17 10                 a0 = u64 [sp + 0x10]
  9721: d8 76 08                 a1 = s1 <u a0
  9724: 28 5e ff                 jump @518
      :                          @532
  9727: 82 17 10                 a0 = u64 [sp + 0x10]
  9730: d8 76 08                 a1 = s1 <u a0
  9733: 28 55 ff                 jump @518
      :                          @533
  9736: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  9739: 7b 10 20                 u64 [sp + 0x20] = ra
  9742: 7b 15 18                 u64 [sp + 0x18] = s0
  9745: 7b 16 10                 u64 [sp + 0x10] = s1
  9748: 83 9c                    i32 a5 = a2 + 0
  9750: 33 02 00 00 11           t0 = 0x110000
  9755: 64 a6                    s1 = a3
  9757: 64 85                    s0 = a1
  9759: 64 7a                    a3 = a0
  9761: aa 2c 21                 jump @536 if a5 == t0
      :                          @534
  9764: 82 5c 20                 a5 = u64 [s0 + 0x20]
  9767: 64 a7                    a0 = a3
  9769: 64 98                    a1 = a2
  9771: 7b 1b 08                 u64 [sp + 0x8] = a4
  9774: 7b 1a                    u64 [sp] = a3
  9776: b4 c0 02 9c 00           ra = 156, jump [a5]
      :                          @535 [@dyn 78]
  9781: 82 1a                    a3 = u64 [sp]
  9783: 82 1b 08                 a4 = u64 [sp + 0x8]
  9786: 64 78                    a1 = a0
  9788: 33 07 01                 a0 = 0x1
  9791: 52 08 20                 jump @539 if a1 != 0
      :                          @536
  9794: 51 06 1a                 jump @538 if s1 == 0
      :                          @537
  9797: 82 5c 18                 a5 = u64 [s0 + 0x18]
  9800: 64 a7                    a0 = a3
  9802: 64 68                    a1 = s1
  9804: 64 b9                    a2 = a4
  9806: 82 10 20                 ra = u64 [sp + 0x20]
  9809: 82 15 18                 s0 = u64 [sp + 0x18]
  9812: 82 16 10                 s1 = u64 [sp + 0x10]
  9815: 95 11 28                 sp = sp + 0x28
  9818: 32 0c                    jump [a5]
      :                          @538
  9820: 33 07                    a0 = 0
  9822: 01                       fallthrough
      :                          @539
  9823: 82 10 20                 ra = u64 [sp + 0x20]
  9826: 82 15 18                 s0 = u64 [sp + 0x18]
  9829: 82 16 10                 s1 = u64 [sp + 0x10]
  9832: 95 11 28                 sp = sp + 0x28
  9835: 32 00                    ret
      :                          @540
  9837: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  9840: 7b 10 40                 u64 [sp + 0x40] = ra
  9843: 7b 15 38                 u64 [sp + 0x38] = s0
  9846: 7b 16 30                 u64 [sp + 0x30] = s1
  9849: 82 74                    t2 = u64 [a0]
  9851: 82 7a 10                 a3 = u64 [a0 + 0x10]
  9854: d4 a4 0b                 a4 = t2 | a3
  9857: 64 93                    t1 = a2
  9859: 64 85                    s0 = a1
  9861: 51 0b aa 03              jump @612 if a4 == 0
      :                          @541
  9865: 7b 17 08                 u64 [sp + 0x8] = a0
  9868: 51 0a f4 00              jump @560 if a3 == 0
      :                          @542
  9872: 82 7c 18                 a5 = u64 [a0 + 0x18]
  9875: 33 0a                    a3 = 0
  9877: 7b 13 18                 u64 [sp + 0x18] = t1
  9880: c8 53 03                 t1 = t1 + s0
  9883: 95 cc 01                 a5 = a5 + 0x1
  9886: 33 00 00 00 11           ra = 0x110000
  9891: 33 07 df 00              a0 = 0xdf
  9895: 7b 15 10                 u64 [sp + 0x10] = s0
  9898: 64 59                    a2 = s0
  9900: 28 12                    jump @545
      :                          @543
  9902: 95 98 01                 a1 = a2 + 0x1
  9905: 01                       fallthrough
      :                          @544
  9906: c9 9a 0a                 a3 = a3 - a2
  9909: c8 8a 0a                 a3 = a3 + a1
  9912: 64 89                    a2 = a1
  9914: aa 05 bc 00              jump @559 if s0 == ra
      :                          @545
  9918: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  9921: 51 0c 68                 jump @554 if a5 == 0
      :                          @546
  9924: aa 39 b2 00              jump @559 if a2 == t1
      :                          @547
  9928: 7d 98                    a1 = i8 [a2]
  9930: 84 85 ff 00              s0 = a1 & 0xff
  9934: 59 08 e0                 jump @543 if a1 >=s 0
      :                          @548
  9937: 7c 98 01                 a1 = u8 [a2 + 0x1]
  9940: 84 56 1f                 s1 = s0 & 0x1f
  9943: 84 8b 3f                 a4 = a1 & 0x3f
  9946: ae 57 35                 jump @552 if a0 >=u s0
      :                          @549
  9949: 7c 98 02                 a1 = u8 [a2 + 0x2]
  9952: 97 bb 06                 a4 = a4 << 0x6
  9955: 84 88 3f                 a1 = a1 & 0x3f
  9958: d4 8b 02                 t0 = a4 | a1
  9961: 53 25 f0 00 31           jump @553 if s0 <u 240
      :                          @550
  9966: 7c 98 03                 a1 = u8 [a2 + 0x3]
  9969: 97 66 3d                 s1 = s1 << 0x3d
  9972: 98 66 2b                 s1 = s1 >> 0x2b
  9975: 97 22 06                 t0 = t0 << 0x6
  9978: 84 88 3f                 a1 = a1 & 0x3f
  9981: d4 82 05                 s0 = t0 | a1
  9984: d4 65 05                 s0 = s0 | s1
  9987: aa 05 73                 jump @559 if s0 == ra
      :                          @551
  9990: 95 98 04                 a1 = a2 + 0x4
  9993: 33 07 df 00              a0 = 0xdf
  9997: 28 a5                    jump @544
      :                          @552
  9999: 95 98 02                 a1 = a2 + 0x2
 10002: 97 65 06                 s0 = s1 << 0x6
 10005: d4 b5 05                 s0 = s0 | a4
 10008: 28 9a                    jump @544
      :                          @553
 10010: 95 98 03                 a1 = a2 + 0x3
 10013: 97 66 0c                 s1 = s1 << 0xc
 10016: d4 62 05                 s0 = t0 | s1
 10019: 33 07 df 00              a0 = 0xdf
 10023: 28 8b                    jump @544
      :                          @554
 10025: aa 39 4d                 jump @559 if a2 == t1
      :                          @555
 10028: 7d 98                    a1 = i8 [a2]
 10030: 59 08 b6 02              jump @602 if a1 >=s 0
      :                          @556
 10034: 84 88 ff 00              a1 = a1 & 0xff
 10038: 33 0b e0 00              a4 = 0xe0
 10042: ac b8 aa 02              jump @602 if a1 <u a4
      :                          @557
 10046: 33 0b f0 00              a4 = 0xf0
 10050: ac b8 a2 02              jump @602 if a1 <u a4
      :                          @558
 10054: 7c 9b 01                 a4 = u8 [a2 + 0x1]
 10057: 7c 9c 02                 a5 = u8 [a2 + 0x2]
 10060: 84 bb 3f                 a4 = a4 & 0x3f
 10063: 84 cc 3f                 a5 = a5 & 0x3f
 10066: 7c 99 03                 a2 = u8 [a2 + 0x3]
 10069: 97 88 3d                 a1 = a1 << 0x3d
 10072: 98 88 2b                 a1 = a1 >> 0x2b
 10075: 97 bb 0c                 a4 = a4 << 0xc
 10078: 97 cc 06                 a5 = a5 << 0x6
 10081: d4 cb 0b                 a4 = a4 | a5
 10084: 84 99 3f                 a2 = a2 & 0x3f
 10087: d4 b9 09                 a2 = a2 | a4
 10090: d4 98 08                 a1 = a1 | a2
 10093: 33 09 00 00 11           a2 = 0x110000
 10098: ab 98 72 02              jump @602 if a1 != a2
      :                          @559
 10102: 82 13 18                 t1 = u64 [sp + 0x18]
 10105: 82 15 10                 s0 = u64 [sp + 0x10]
 10108: 82 17 08                 a0 = u64 [sp + 0x8]
 10111: 01                       fallthrough
      :                          @560
 10112: 51 04 af 02              jump @612 if t2 == 0
      :                          @561
 10116: 82 7c 08                 a5 = u64 [a0 + 0x8]
 10119: 7b 13 18                 u64 [sp + 0x18] = t1
 10122: 7b 15 10                 u64 [sp + 0x10] = s0
 10125: 55 13 20 29              jump @567 if t1 >=u 32
      :                          @562
 10129: 33 09                    a2 = 0
 10131: 51 03 1c                 jump @565 if t1 == 0
      :                          @563
 10134: 64 58                    a1 = s0
 10136: 64 3a                    a3 = t1
 10138: 01                       fallthrough
      :                          @564
 10139: 7d 8b                    a4 = i8 [a1]
 10141: 89 bb c0                 a4 = a4 <s 0xffffffffffffffc0
 10144: 85 bb 01                 a4 = a4 ^ 0x1
 10147: c8 b9 09                 a2 = a2 + a4
 10150: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 10153: 95 88 01                 a1 = a1 + 0x1
 10156: 52 0a ef                 jump @564 if a3 != 0
      :                          @565
 10159: ac c9 95 01              jump @584 if a2 <u a5
      :                          @566
 10163: 28 7c 02                 jump @612
      :                          @567
 10166: 7b 1c                    u64 [sp] = a5
 10168: 95 58 07                 a1 = s0 + 0x7
 10171: 64 5c                    a5 = s0
 10173: 84 85 f8                 s0 = a1 & 0xfffffffffffffff8
 10176: c9 5c 0b                 a4 = a5 - s0
 10179: c8 b3 02                 t0 = t1 + a4
 10182: 84 2a 07                 a3 = t0 & 0x7
 10185: 33 08                    a1 = 0
 10187: aa c5 17                 jump @569 if s0 == a5
      :                          @568
 10190: 7d c6                    s1 = i8 [a5]
 10192: 89 66 c0                 s1 = s1 <s 0xffffffffffffffc0
 10195: 85 69 01                 a2 = s1 ^ 0x1
 10198: c8 98 08                 a1 = a1 + a2
 10201: 95 bb 01                 a4 = a4 + 0x1
 10204: 95 cc 01                 a5 = a5 + 0x1
 10207: 52 0b ef                 jump @568 if a4 != 0
      :                          @569
 10210: 33 0b                    a4 = 0
 10212: 51 0a 1e                 jump @572 if a3 == 0
      :                          @570
 10215: 84 2c f8                 a5 = t0 & 0xfffffffffffffff8
 10218: c8 5c 0c                 a5 = a5 + s0
 10221: 01                       fallthrough
      :                          @571
 10222: 7d c7                    a0 = i8 [a5]
 10224: 89 77 c0                 a0 = a0 <s 0xffffffffffffffc0
 10227: 85 77 01                 a0 = a0 ^ 0x1
 10230: c8 7b 0b                 a4 = a4 + a0
 10233: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 10236: 95 cc 01                 a5 = a5 + 0x1
 10239: 52 0a ef                 jump @571 if a3 != 0
      :                          @572
 10242: 98 20 03                 ra = t0 >> 0x3
 10245: 14 0a 01 01 01 01 01 01 01 01 a3 = 0x101010101010101
 10255: 14 07 ff 00 ff 00 ff 00 ff 00 a0 = 0xff00ff00ff00ff
 10265: 7b 17 28                 u64 [sp + 0x28] = a0
 10268: 14 04 00 00 00 00 01 00 01 00 t2 = 0x1000100000000
 10278: 14 07 01 00 01 00 01 00 01 00 a0 = 0x1000100010001
 10288: 7b 17 20                 u64 [sp + 0x20] = a0
 10291: c8 8b 09                 a2 = a4 + a1
 10294: 28 2d                    jump @574
      :                          @573
 10296: 97 45 03                 s0 = t2 << 0x3
 10299: c8 35 05                 s0 = s0 + t1
 10302: c9 40 00                 ra = ra - t2
 10305: 84 46 03                 s1 = t2 & 0x3
 10308: 82 1b 28                 a4 = u64 [sp + 0x28]
 10311: d2 b2 07                 a0 = t0 & a4
 10314: 98 28 08                 a1 = t0 >> 0x8
 10317: d2 b8 08                 a1 = a1 & a4
 10320: c8 87 07                 a0 = a0 + a1
 10323: 82 18 20                 a1 = u64 [sp + 0x20]
 10326: ca 87 07                 a0 = a0 * a1
 10329: 98 77 30                 a0 = a0 >> 0x30
 10332: c8 79 09                 a2 = a2 + a0
 10335: 52 06 8e 00              jump @581 if s1 != 0
      :                          @574
 10339: 51 00 79                 jump @579 if ra == 0
      :                          @575
 10342: 64 53                    t1 = s0
 10344: 33 07 c0 00              a0 = 0xc0
 10348: e6 70 04                 t2 = minu(ra, a0)
 10351: 33 02                    t0 = 0
 10353: 98 48 02                 a1 = t2 >> 0x2
 10356: 51 08 c4                 jump @573 if a1 == 0
      :                          @576
 10359: 97 88 05                 a1 = a1 << 0x5
 10362: c8 38 08                 a1 = a1 + t1
 10365: 64 36                    s1 = t1
 10367: 01                       fallthrough
      :                          @577
 10368: 82 67                    a0 = u64 [s1]
 10370: 85 7c ff                 a5 = a0 ^ 0xffffffffffffffff
 10373: 98 cc 07                 a5 = a5 >> 0x7
 10376: 98 77 06                 a0 = a0 >> 0x6
 10379: 82 6b 08                 a4 = u64 [s1 + 0x8]
 10382: d4 c7 07                 a0 = a0 | a5
 10385: d2 a7 07                 a0 = a0 & a3
 10388: c8 27 07                 a0 = a0 + t0
 10391: 85 bc ff                 a5 = a4 ^ 0xffffffffffffffff
 10394: 98 cc 07                 a5 = a5 >> 0x7
 10397: 82 65 10                 s0 = u64 [s1 + 0x10]
 10400: 98 bb 06                 a4 = a4 >> 0x6
 10403: d4 cb 0b                 a4 = a4 | a5
 10406: d2 ab 0b                 a4 = a4 & a3
 10409: 85 5c ff                 a5 = s0 ^ 0xffffffffffffffff
 10412: 98 cc 07                 a5 = a5 >> 0x7
 10415: 98 55 06                 s0 = s0 >> 0x6
 10418: d4 5c 0c                 a5 = a5 | s0
 10421: 82 65 18                 s0 = u64 [s1 + 0x18]
 10424: d2 ac 0c                 a5 = a5 & a3
 10427: c8 cb 0b                 a4 = a4 + a5
 10430: c8 b7 07                 a0 = a0 + a4
 10433: 85 5b ff                 a4 = s0 ^ 0xffffffffffffffff
 10436: 98 bb 07                 a4 = a4 >> 0x7
 10439: 98 55 06                 s0 = s0 >> 0x6
 10442: d4 5b 0b                 a4 = a4 | s0
 10445: d2 ab 0b                 a4 = a4 & a3
 10448: 95 66 20                 s1 = s1 + 0x20
 10451: c8 7b 02                 t0 = a4 + a0
 10454: ab 86 aa                 jump @577 if s1 != a1
      :                          @578
 10457: 28 5f ff                 jump @573
      :                          @579
 10460: 82 13 18                 t1 = u64 [sp + 0x18]
 10463: 82 15 10                 s0 = u64 [sp + 0x10]
 10466: 82 17 08                 a0 = u64 [sp + 0x8]
 10469: 82 1c                    a5 = u64 [sp]
 10471: ac c9 5d                 jump @584 if a2 <u a5
      :                          @580
 10474: 28 45 01                 jump @612
      :                          @581
 10477: 33 08                    a1 = 0
 10479: 84 47 fc 00              a0 = t2 & 0xfc
 10483: 97 77 03                 a0 = a0 << 0x3
 10486: c8 73 0b                 a4 = t1 + a0
 10489: 97 66 03                 s1 = s1 << 0x3
 10492: 82 13 18                 t1 = u64 [sp + 0x18]
 10495: 82 15 10                 s0 = u64 [sp + 0x10]
 10498: 01                       fallthrough
      :                          @582
 10499: 82 b7                    a0 = u64 [a4]
 10501: 95 bb 08                 a4 = a4 + 0x8
 10504: 85 7c ff                 a5 = a0 ^ 0xffffffffffffffff
 10507: 98 cc 07                 a5 = a5 >> 0x7
 10510: 98 77 06                 a0 = a0 >> 0x6
 10513: d4 c7 07                 a0 = a0 | a5
 10516: d2 a7 07                 a0 = a0 & a3
 10519: 95 66 f8                 s1 = s1 + 0xfffffffffffffff8
 10522: c8 78 08                 a1 = a1 + a0
 10525: 52 06 e6                 jump @582 if s1 != 0
      :                          @583
 10528: 82 1a 28                 a3 = u64 [sp + 0x28]
 10531: d2 a8 07                 a0 = a1 & a3
 10534: 98 88 08                 a1 = a1 >> 0x8
 10537: d2 a8 08                 a1 = a1 & a3
 10540: c8 87 07                 a0 = a0 + a1
 10543: 82 18 20                 a1 = u64 [sp + 0x20]
 10546: ca 87 07                 a0 = a0 * a1
 10549: 98 77 30                 a0 = a0 >> 0x30
 10552: c8 79 09                 a2 = a2 + a0
 10555: 82 17 08                 a0 = u64 [sp + 0x8]
 10558: 82 1c                    a5 = u64 [sp]
 10560: ae c9 ef 00              jump @612 if a2 >=u a5
      :                          @584
 10564: 7c 7a 38                 a3 = u8 [a0 + 0x38]
 10567: 33 08                    a1 = 0
 10569: 33 0b 01                 a4 = 0x1
 10572: c9 9c 0c                 a5 = a5 - a2
 10575: ad ab 0c                 jump @587 if a4 <s a3
      :                          @585
 10578: 51 0a 1a                 jump @589 if a3 == 0
      :                          @586
 10581: 64 c8                    a1 = a5
 10583: 49 01                    u64 [sp + 0] = 0
 10585: 28 16                    jump @590
      :                          @587
 10587: 52 1a 02 11              jump @589 if a3 != 2
      :                          @588
 10591: 98 c8 01                 a1 = a5 >> 0x1
 10594: 95 c9 01                 a2 = a5 + 0x1
 10597: 98 99 01                 a2 = a2 >> 0x1
 10600: 7b 19                    u64 [sp] = a2
 10602: 28 05                    jump @590
      :                          @589
 10604: 7b 1c                    u64 [sp] = a5
 10606: 01                       fallthrough
      :                          @590
 10607: 82 79 20                 a2 = u64 [a0 + 0x20]
 10610: 7b 19 28                 u64 [sp + 0x28] = a2
 10613: 82 75 28                 s0 = u64 [a0 + 0x28]
 10616: 81 77 30                 a0 = i32 [a0 + 0x30]
 10619: 7b 17 20                 u64 [sp + 0x20] = a0
 10622: 95 86 01                 s1 = a1 + 0x1
 10625: 01                       fallthrough
      :                          @591
 10626: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 10629: 51 06 19                 jump @595 if s1 == 0
      :                          @592
 10632: 82 59 20                 a2 = u64 [s0 + 0x20]
 10635: 82 17 28                 a0 = u64 [sp + 0x28]
 10638: 82 18 20                 a1 = u64 [sp + 0x20]
 10641: b4 90 02 9e 00           ra = 158, jump [a2]
      :                          @593 [@dyn 79]
 10646: 51 07 ec                 jump @591 if a0 == 0
      :                          @594
 10649: 33 07 01                 a0 = 0x1
 10652: 28 72                    jump @608
      :                          @595
 10654: 82 5a 18                 a3 = u64 [s0 + 0x18]
 10657: 82 17 28                 a0 = u64 [sp + 0x28]
 10660: 82 18 10                 a1 = u64 [sp + 0x10]
 10663: 82 19 18                 a2 = u64 [sp + 0x18]
 10666: b4 a0 02 a0 00           ra = 160, jump [a3]
      :                          @596 [@dyn 80]
 10671: 64 78                    a1 = a0
 10673: 33 07 01                 a0 = 0x1
 10676: 52 08 5a                 jump @608 if a1 != 0
      :                          @597
 10679: 82 17                    a0 = u64 [sp]
 10681: 9a 77                    a0 = -a0
 10683: 7b 17 18                 u64 [sp + 0x18] = a0
 10686: 33 06 ff                 s1 = 0xffffffffffffffff
 10689: 01                       fallthrough
      :                          @598
 10690: 82 17 18                 a0 = u64 [sp + 0x18]
 10693: c8 67 07                 a0 = a0 + s1
 10696: 33 08 ff                 a1 = 0xffffffffffffffff
 10699: aa 87 34                 jump @606 if a0 == a1
      :                          @599
 10702: 82 59 20                 a2 = u64 [s0 + 0x20]
 10705: 82 17 28                 a0 = u64 [sp + 0x28]
 10708: 82 18 20                 a1 = u64 [sp + 0x20]
 10711: b4 90 02 a2 00           ra = 162, jump [a2]
      :                          @600 [@dyn 81]
 10716: 95 66 01                 s1 = s1 + 0x1
 10719: 51 07 e3                 jump @598 if a0 == 0
      :                          @601
 10722: 28 26                    jump @607
      :                          @602
 10724: 82 13 18                 t1 = u64 [sp + 0x18]
 10727: 82 15 10                 s0 = u64 [sp + 0x10]
 10730: 51 0a 35                 jump @610 if a3 == 0
      :                          @603
 10733: ae 3a 2f                 jump @609 if a3 >=u t1
      :                          @604
 10736: c8 a5 08                 a1 = s0 + a3
 10739: 7d 88                    a1 = i8 [a1]
 10741: 33 09 c0                 a2 = 0xffffffffffffffc0
 10744: af 98 27                 jump @610 if a1 >=s a2
      :                          @605
 10747: 33 08                    a1 = 0
 10749: 28 25                    jump @611
      :                          @606
 10751: 82 16                    s1 = u64 [sp]
 10753: 82 17                    a0 = u64 [sp]
 10755: d8 76 07                 a0 = s1 <u a0
 10758: 28 08                    jump @608
      :                          @607
 10760: 82 17                    a0 = u64 [sp]
 10762: d8 76 07                 a0 = s1 <u a0
 10765: 01                       fallthrough
      :                          @608
 10766: 82 10 40                 ra = u64 [sp + 0x40]
 10769: 82 15 38                 s0 = u64 [sp + 0x38]
 10772: 82 16 30                 s1 = u64 [sp + 0x30]
 10775: 95 11 48                 sp = sp + 0x48
 10778: 32 00                    ret
      :                          @609
 10780: ab 3a df                 jump @605 if a3 != t1
      :                          @610
 10783: 64 58                    a1 = s0
 10785: 01                       fallthrough
      :                          @611
 10786: 82 17 08                 a0 = u64 [sp + 0x8]
 10789: db 8a 03                 t1 = a3 if a1 != 0
 10792: db 88 05                 s0 = a1 if a1 != 0
 10795: 52 04 59 fd              jump @561 if t2 != 0
      :                          @612
 10799: 82 78 28                 a1 = u64 [a0 + 0x28]
 10802: 82 77 20                 a0 = u64 [a0 + 0x20]
 10805: 82 8c 18                 a5 = u64 [a1 + 0x18]
 10808: 64 58                    a1 = s0
 10810: 64 39                    a2 = t1
 10812: 82 10 40                 ra = u64 [sp + 0x40]
 10815: 82 15 38                 s0 = u64 [sp + 0x38]
 10818: 82 16 30                 s1 = u64 [sp + 0x30]
 10821: 95 11 48                 sp = sp + 0x48
 10824: 32 0c                    jump [a5]
      :                          @613
 10826: 95 11 78 ff              sp = sp + 0xffffffffffffff78
 10830: 7b 10 80 00              u64 [sp + 0x80] = ra
 10834: 7b 15 78                 u64 [sp + 0x78] = s0
 10837: 7b 16 70                 u64 [sp + 0x70] = s1
 10840: 49 11 60 20              u64 [sp + 96] = 0x20
 10844: 33 09 03                 a2 = 0x3
 10847: 78 19 68                 u8 [sp + 0x68] = a2
 10850: 49 11 30                 u64 [sp + 48] = 0
 10853: 49 11 40                 u64 [sp + 64] = 0
 10856: 82 86 20                 s1 = u64 [a1 + 0x20]
 10859: 7b 17 50                 u64 [sp + 0x50] = a0
 10862: 33 07 98 02 01           a0 = 0x10298
 10867: 7b 17 58                 u64 [sp + 0x58] = a0
 10870: 51 06 09 01              jump @635 if s1 == 0
      :                          @614
 10874: 82 87 28                 a0 = u64 [a1 + 0x28]
 10877: 51 07 78 01              jump @645 if a0 == 0
      :                          @615
 10881: 33 09                    a2 = 0
 10883: 82 85                    s0 = u64 [a1]
 10885: 7b 18 08                 u64 [sp + 0x8] = a1
 10888: 82 88 10                 a1 = u64 [a1 + 0x10]
 10891: 7b 18 18                 u64 [sp + 0x18] = a1
 10894: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 10897: 97 88 03                 a1 = a1 << 0x3
 10900: 98 88 03                 a1 = a1 >> 0x3
 10903: 95 88 01                 a1 = a1 + 0x1
 10906: 7b 18                    u64 [sp] = a1
 10908: 95 55 08                 s0 = s0 + 0x8
 10911: 96 78 38                 a1 = a0 * 0x38
 10914: 95 66 18                 s1 = s1 + 0x18
 10917: 33 07 88 00              a0 = 0x88
 10921: 7b 17 10                 u64 [sp + 0x10] = a0
 10924: 01                       fallthrough
      :                          @616
 10925: 7b 18 20                 u64 [sp + 0x20] = a1
 10928: 7b 19 28                 u64 [sp + 0x28] = a2
 10931: 82 59                    a2 = u64 [s0]
 10933: 51 09 18                 jump @619 if a2 == 0
      :                          @617
 10936: 82 1a 58                 a3 = u64 [sp + 0x58]
 10939: 82 17 50                 a0 = u64 [sp + 0x50]
 10942: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
 10945: 82 aa 18                 a3 = u64 [a3 + 0x18]
 10948: b4 a0 02 a4 00           ra = 164, jump [a3]
      :                          @618 [@dyn 82]
 10953: 52 07 52 01              jump @648 if a0 != 0
      :                          @619
 10957: 81 67 10                 a0 = i32 [s1 + 0x10]
 10960: 7a 17 60                 u32 [sp + 0x60] = a0
 10963: 7c 67 18                 a0 = u8 [s1 + 0x18]
 10966: 78 17 68                 u8 [sp + 0x68] = a0
 10969: 81 67 14                 a0 = i32 [s1 + 0x14]
 10972: 7a 17 64                 u32 [sp + 0x64] = a0
 10975: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
 10978: 82 67                    a0 = u64 [s1]
 10980: 51 08 26                 jump @624 if a1 == 0
      :                          @620
 10983: 52 18 01 16              jump @622 if a1 != 1
      :                          @621
 10987: 97 77 04                 a0 = a0 << 0x4
 10990: 82 18 18                 a1 = u64 [sp + 0x18]
 10993: c8 87 07                 a0 = a0 + a1
 10996: 82 78 08                 a1 = u64 [a0 + 0x8]
 10999: 82 19 10                 a2 = u64 [sp + 0x10]
 11002: aa 98 07                 jump @623 if a1 == a2
      :                          @622
 11005: 33 08                    a1 = 0
 11007: 28 0f                    jump @625
      :                          @623
 11009: 82 77                    a0 = u64 [a0]
 11011: 82 77                    a0 = u64 [a0]
 11013: 33 08 01                 a1 = 0x1
 11016: 28 06                    jump @625
      :                          @624
 11018: 33 08 01                 a1 = 0x1
 11021: 01                       fallthrough
      :                          @625
 11022: 7b 18 30                 u64 [sp + 0x30] = a1
 11025: 7b 17 38                 u64 [sp + 0x38] = a0
 11028: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
 11031: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
 11034: 51 08 26                 jump @630 if a1 == 0
      :                          @626
 11037: 52 18 01 16              jump @628 if a1 != 1
      :                          @627
 11041: 97 77 04                 a0 = a0 << 0x4
 11044: 82 18 18                 a1 = u64 [sp + 0x18]
 11047: c8 87 07                 a0 = a0 + a1
 11050: 82 78 08                 a1 = u64 [a0 + 0x8]
 11053: 82 19 10                 a2 = u64 [sp + 0x10]
 11056: aa 98 07                 jump @629 if a1 == a2
      :                          @628
 11059: 33 08                    a1 = 0
 11061: 28 0f                    jump @631
      :                          @629
 11063: 82 77                    a0 = u64 [a0]
 11065: 82 77                    a0 = u64 [a0]
 11067: 33 08 01                 a1 = 0x1
 11070: 28 06                    jump @631
      :                          @630
 11072: 33 08 01                 a1 = 0x1
 11075: 01                       fallthrough
      :                          @631
 11076: 7b 18 40                 u64 [sp + 0x40] = a1
 11079: 7b 17 48                 u64 [sp + 0x48] = a0
 11082: 82 67 08                 a0 = u64 [s1 + 0x8]
 11085: 97 77 04                 a0 = a0 << 0x4
 11088: 82 18 18                 a1 = u64 [sp + 0x18]
 11091: c8 78 08                 a1 = a1 + a0
 11094: 82 87                    a0 = u64 [a1]
 11096: 82 89 08                 a2 = u64 [a1 + 0x8]
 11099: 95 18 30                 a1 = sp + 0x30
 11102: b4 90 02 a6 00           ra = 166, jump [a2]
      :                          @632 [@dyn 83]
 11107: 52 07 b8 00              jump @648 if a0 != 0
      :                          @633
 11111: 95 55 10                 s0 = s0 + 0x10
 11114: 82 18 20                 a1 = u64 [sp + 0x20]
 11117: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
 11120: 95 66 38                 s1 = s1 + 0x38
 11123: 82 19 28                 a2 = u64 [sp + 0x28]
 11126: 95 99 01                 a2 = a2 + 0x1
 11129: 52 08 34 ff              jump @616 if a1 != 0
      :                          @634
 11133: 28 6b                    jump @643
      :                          @635
 11135: 82 87 18                 a0 = u64 [a1 + 0x18]
 11138: 51 07 73                 jump @645 if a0 == 0
      :                          @636
 11141: 82 85 10                 s0 = u64 [a1 + 0x10]
 11144: 33 0a                    a3 = 0
 11146: 97 79 04                 a2 = a0 << 0x4
 11149: c8 59 09                 a2 = a2 + s0
 11152: 7b 19 20                 u64 [sp + 0x20] = a2
 11155: 7b 18 08                 u64 [sp + 0x8] = a1
 11158: 82 86                    s1 = u64 [a1]
 11160: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 11163: 97 77 04                 a0 = a0 << 0x4
 11166: 98 77 04                 a0 = a0 >> 0x4
 11169: 95 77 01                 a0 = a0 + 0x1
 11172: 7b 17                    u64 [sp] = a0
 11174: 95 66 08                 s1 = s1 + 0x8
 11177: 01                       fallthrough
      :                          @637
 11178: 7b 1a 28                 u64 [sp + 0x28] = a3
 11181: 82 69                    a2 = u64 [s1]
 11183: 51 09 17                 jump @640 if a2 == 0
      :                          @638
 11186: 82 1a 58                 a3 = u64 [sp + 0x58]
 11189: 82 17 50                 a0 = u64 [sp + 0x50]
 11192: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
 11195: 82 aa 18                 a3 = u64 [a3 + 0x18]
 11198: b4 a0 02 a8 00           ra = 168, jump [a3]
      :                          @639 [@dyn 84]
 11203: 52 07 58                 jump @648 if a0 != 0
      :                          @640
 11206: 82 57                    a0 = u64 [s0]
 11208: 82 59 08                 a2 = u64 [s0 + 0x8]
 11211: 95 18 30                 a1 = sp + 0x30
 11214: b4 90 02 aa 00           ra = 170, jump [a2]
      :                          @641 [@dyn 85]
 11219: 52 07 48                 jump @648 if a0 != 0
      :                          @642
 11222: 95 66 10                 s1 = s1 + 0x10
 11225: 95 55 10                 s0 = s0 + 0x10
 11228: 82 1a 28                 a3 = u64 [sp + 0x28]
 11231: 95 aa 01                 a3 = a3 + 0x1
 11234: 82 17 20                 a0 = u64 [sp + 0x20]
 11237: ab 75 c5                 jump @637 if s0 != a0
      :                          @643
 11240: 82 18 08                 a1 = u64 [sp + 0x8]
 11243: 82 1a                    a3 = u64 [sp]
 11245: 82 87 08                 a0 = u64 [a1 + 0x8]
 11248: ac 7a 0d                 jump @646 if a3 <u a0
      :                          @644
 11251: 28 2d                    jump @649
      :                          @645
 11253: 33 0a                    a3 = 0
 11255: 82 87 08                 a0 = u64 [a1 + 0x8]
 11258: 54 07 26                 jump @649 if a0 <=u 0
      :                          @646
 11261: 82 87                    a0 = u64 [a1]
 11263: 97 a8 04                 a1 = a3 << 0x4
 11266: c8 87 09                 a2 = a0 + a1
 11269: 82 1a 58                 a3 = u64 [sp + 0x58]
 11272: 82 17 50                 a0 = u64 [sp + 0x50]
 11275: 82 98                    a1 = u64 [a2]
 11277: 82 99 08                 a2 = u64 [a2 + 0x8]
 11280: 82 aa 18                 a3 = u64 [a3 + 0x18]
 11283: b4 a0 02 ac 00           ra = 172, jump [a3]
      :                          @647 [@dyn 86]
 11288: 51 07 08                 jump @649 if a0 == 0
      :                          @648
 11291: 33 07 01                 a0 = 0x1
 11294: 28 05                    jump @650
      :                          @649
 11296: 33 07                    a0 = 0
 11298: 01                       fallthrough
      :                          @650
 11299: 82 10 80 00              ra = u64 [sp + 0x80]
 11303: 82 15 78                 s0 = u64 [sp + 0x78]
 11306: 82 16 70                 s1 = u64 [sp + 0x70]
 11309: 95 11 88 00              sp = sp + 0x88
 11313: 32 00                    ret
      :                          @651 [@dyn 87]
 11315: 80 77                    a0 = u32 [a0]
 11317: 28 a2 f6                 jump @478
