// RO data = 1742/1744 bytes
// RW data = 16/1052752 bytes
// Stack size = 1048576 bytes
// RO data = [0, 16, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 122, 61, 32, 115, 61, 32, 111, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 32, 111, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 32, 119, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 80, 97, 114, 101, 110, 116, 58, 32, 112, 97, 103, 101, 115, 32, 109, 61, 32, 119, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 8, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 18, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 21, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 54, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 102, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 70, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 119, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 38, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 109, 97, 99, 104, 105, 110, 101, 32, 110, 101, 119, 32, 105, 110, 100, 101, 120, 61, 0, 0, 0, 0, 0, 0, 8, 1, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 83, 116, 97, 114, 116, 70, 101, 116, 99, 104, 80, 97, 114, 101, 110, 116, 58, 32, 102, 101, 116, 99, 104, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 32, 102, 101, 116, 99, 104, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 74, 1, 1, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 102, 1, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 102, 105, 114, 115, 116, 32, 115, 101, 103, 109, 101, 110, 116, 32, 109, 61, 32, 112, 97, 103, 101, 95, 105, 100, 61, 0, 0, 0, 0, 0, 0, 0, 152, 1, 1, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 176, 1, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 44, 32, 112, 97, 103, 101, 95, 105, 100, 61, 32, 112, 97, 103, 101, 115, 95, 114, 101, 115, 117, 108, 116, 61, 86, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 224, 1, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 234, 1, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 112, 111, 107, 101, 32, 109, 61, 32, 111, 61, 32, 122, 61, 32, 112, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 0, 40, 2, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 18, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 55, 2, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 58, 2, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 61, 2, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 102, 105, 114, 115, 116, 95, 112, 97, 103, 101, 95, 97, 100, 100, 114, 101, 115, 115, 61, 0, 0, 0, 0, 0, 160, 2, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 99, 104, 105, 108, 100, 95, 118, 109, 95, 114, 101, 103, 105, 115, 116, 101, 114, 115, 61, 0, 0, 0, 0, 0, 208, 2, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 105, 110, 118, 111, 107, 101, 32, 32, 105, 110, 118, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 32, 111, 109, 101, 103, 97, 95, 56, 61, 0, 0, 3, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 15, 3, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 30, 3, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 100, 111, 110, 101, 32, 119, 105, 116, 104, 32, 99, 104, 105, 108, 100, 32, 86, 77, 44, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 0, 0, 0, 0, 0, 0, 88, 3, 1, 0, 0, 0, 0, 0, 42, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 70, 105, 114, 115, 116, 32, 116, 105, 109, 101, 32, 115, 101, 116, 117, 112, 58, 32, 119, 105, 95, 112, 97, 121, 108, 111, 97, 100, 95, 108, 101, 110, 103, 116, 104, 61, 0, 0, 0, 0, 152, 3, 1, 0, 0, 0, 0, 0, 44, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 115, 111, 108, 105, 99, 105, 116, 32, 99, 111, 100, 101, 95, 104, 97, 115, 104, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 111, 100, 101, 95, 108, 101, 110, 103, 116, 104, 61, 0, 216, 3, 1, 0, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 250, 3, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 146, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 148, 0, 0, 0, 0, 0, 0, 0, 154, 0, 0, 0, 0, 0, 0, 0, 162, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 196, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 198, 0, 0, 0, 0, 0, 0, 0, 204, 0, 0, 0, 0, 0, 0, 0, 208, 0, 0, 0, 0, 0, 0, 0, 112, 101, 101, 107, 32, 32, 32, 32, 112, 111, 107, 101, 44, 32, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 115, 117, 99, 99, 101, 115, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 119, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 111, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 115, 116, 97, 99, 107, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 119, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 111, 95, 98, 121, 116, 101, 115]
// RW data = [75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 3059
// Code size = 9535 bytes

      :                          @0
     0: 28 ad 02 00 00           jump @44
      :                          @1
     5: 28 c9 12 00 00           jump @233
      :                          @2
    10: 28 74 15                 jump @297
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 80 89 34                 a2 = u32 [a1 + 0x34]
    24: 82 77                    a0 = u64 [a0]
    26: 84 9a 10                 a3 = a2 & 0x10
    29: 52 0a 14                 jump @6 if a3 != 0
      :                          @4
    32: 84 99 20                 a2 = a2 & 0x20
    35: 52 09 3e                 jump @9 if a2 != 0
      :                          @5
    38: 82 10 80 00              ra = u64 [sp + 0x80]
    42: 95 11 88 00              sp = sp + 0x88
    46: 28 24 1b                 jump @437
      :                          @6
    49: 82 7b                    a4 = u64 [a0]
    51: 33 09 81 00              a2 = 0x81
    55: 95 17 7f                 a0 = sp + 0x7f
    58: 33 02 57                 t0 = 0x57
    61: 01                       fallthrough
      :                          @7
    62: 64 9c                    a5 = a2
    64: 98 ba 04                 a3 = a4 >> 0x4
    67: 84 bb 0f                 a4 = a4 & 0xf
    70: 88 b3 0a                 t1 = a4 <u 0xa
    73: 33 09 30                 a2 = 0x30
    76: da 32 09                 a2 = t0 if t1 == 0
    79: be b9 09                 i32 a2 = a2 + a4
    82: 78 79                    u8 [a0] = a2
    84: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
    87: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
    90: 64 ab                    a4 = a3
    92: 52 0a e2                 jump @7 if a3 != 0
      :                          @8
    95: 28 30                    jump @11
      :                          @9
    97: 82 7b                    a4 = u64 [a0]
    99: 33 09 81 00              a2 = 0x81
   103: 95 17 7f                 a0 = sp + 0x7f
   106: 33 02 37                 t0 = 0x37
   109: 01                       fallthrough
      :                          @10
   110: 64 9c                    a5 = a2
   112: 98 ba 04                 a3 = a4 >> 0x4
   115: 84 bb 0f                 a4 = a4 & 0xf
   118: 88 b3 0a                 t1 = a4 <u 0xa
   121: 33 09 30                 a2 = 0x30
   124: da 32 09                 a2 = t0 if t1 == 0
   127: be b9 09                 i32 a2 = a2 + a4
   130: 78 79                    u8 [a0] = a2
   132: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   135: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   138: 64 ab                    a4 = a3
   140: 52 0a e2                 jump @10 if a3 != 0
      :                          @11
   143: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   146: 56 27 80 00 27           jump @14 if a0 >u 128
      :                          @12
   151: 9a 9b 81 00              a4 = 0x81 - a2
   155: 64 1a                    a3 = sp
   157: c8 7a 0a                 a3 = a3 + a0
   160: 33 09 02                 a2 = 0x2
   163: 64 87                    a0 = a1
   165: 33 08 a2 04 01           a1 = 0x104a2
   170: 50 10 04 d5 1b           ra = 4, jump @447
      :                          @13 [@dyn 2]
   175: 82 10 80 00              ra = u64 [sp + 0x80]
   179: 95 11 88 00              sp = sp + 0x88
   183: 32 00                    ret
      :                          @14
   185: 00                       trap
      :                          @15 [@dyn 3]
   186: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   190: 7b 10 80 00              u64 [sp + 0x80] = ra
   194: 80 89 34                 a2 = u32 [a1 + 0x34]
   197: 84 9a 10                 a3 = a2 & 0x10
   200: 52 0a 14                 jump @18 if a3 != 0
      :                          @16
   203: 84 99 20                 a2 = a2 & 0x20
   206: 52 09 3e                 jump @21 if a2 != 0
      :                          @17
   209: 82 10 80 00              ra = u64 [sp + 0x80]
   213: 95 11 88 00              sp = sp + 0x88
   217: 28 79 1a                 jump @437
      :                          @18
   220: 82 7b                    a4 = u64 [a0]
   222: 33 09 81 00              a2 = 0x81
   226: 95 17 7f                 a0 = sp + 0x7f
   229: 33 02 57                 t0 = 0x57
   232: 01                       fallthrough
      :                          @19
   233: 64 9c                    a5 = a2
   235: 98 ba 04                 a3 = a4 >> 0x4
   238: 84 bb 0f                 a4 = a4 & 0xf
   241: 88 b3 0a                 t1 = a4 <u 0xa
   244: 33 09 30                 a2 = 0x30
   247: da 32 09                 a2 = t0 if t1 == 0
   250: be b9 09                 i32 a2 = a2 + a4
   253: 78 79                    u8 [a0] = a2
   255: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   258: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   261: 64 ab                    a4 = a3
   263: 52 0a e2                 jump @19 if a3 != 0
      :                          @20
   266: 28 30                    jump @23
      :                          @21
   268: 82 7b                    a4 = u64 [a0]
   270: 33 09 81 00              a2 = 0x81
   274: 95 17 7f                 a0 = sp + 0x7f
   277: 33 02 37                 t0 = 0x37
   280: 01                       fallthrough
      :                          @22
   281: 64 9c                    a5 = a2
   283: 98 ba 04                 a3 = a4 >> 0x4
   286: 84 bb 0f                 a4 = a4 & 0xf
   289: 88 b3 0a                 t1 = a4 <u 0xa
   292: 33 09 30                 a2 = 0x30
   295: da 32 09                 a2 = t0 if t1 == 0
   298: be b9 09                 i32 a2 = a2 + a4
   301: 78 79                    u8 [a0] = a2
   303: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   306: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   309: 64 ab                    a4 = a3
   311: 52 0a e2                 jump @22 if a3 != 0
      :                          @23
   314: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   317: 56 27 80 00 27           jump @26 if a0 >u 128
      :                          @24
   322: 9a 9b 81 00              a4 = 0x81 - a2
   326: 64 1a                    a3 = sp
   328: c8 7a 0a                 a3 = a3 + a0
   331: 33 09 02                 a2 = 0x2
   334: 64 87                    a0 = a1
   336: 33 08 a2 04 01           a1 = 0x104a2
   341: 50 10 08 2a 1b           ra = 8, jump @447
      :                          @25 [@dyn 4]
   346: 82 10 80 00              ra = u64 [sp + 0x80]
   350: 95 11 88 00              sp = sp + 0x88
   354: 32 00                    ret
      :                          @26
   356: 00                       trap
      :                          @27 [@dyn 5]
   357: 95 11 d0                 sp = sp + 0xffffffffffffffd0
   360: 7b 10 28                 u64 [sp + 0x28] = ra
   363: 7b 15 20                 u64 [sp + 0x20] = s0
   366: 7b 16 18                 u64 [sp + 0x18] = s1
   369: 64 85                    s0 = a1
   371: 82 88 28                 a1 = u64 [a1 + 0x28]
   374: 82 5a 20                 a3 = u64 [s0 + 0x20]
   377: 82 8b 18                 a4 = u64 [a1 + 0x18]
   380: 64 76                    s1 = a0
   382: 33 08 58 04 01           a1 = 0x10458
   387: 33 09 01                 a2 = 0x1
   390: 64 a7                    a0 = a3
   392: b4 b0 01 0c              ra = 12, jump [a4]
      :                          @28 [@dyn 6]
   396: 7b 15                    u64 [sp] = s0
   398: 78 17 08                 u8 [sp + 0x8] = a0
   401: 46 11 09                 u8 [sp + 9] = 0
   404: 7b 16 10                 u64 [sp + 0x10] = s1
   407: 33 05 02                 s0 = 0x2
   410: 64 17                    a0 = sp
   412: 95 18 10                 a1 = sp + 0x10
   415: 33 09 02                 a2 = 0x2
   418: 50 10 0e c0 21           ra = 14, jump @591
      :                          @29 [@dyn 7]
   423: 95 67 08                 a0 = s1 + 0x8
   426: 7b 17 10                 u64 [sp + 0x10] = a0
   429: 64 17                    a0 = sp
   431: 95 18 10                 a1 = sp + 0x10
   434: 64 59                    a2 = s0
   436: 50 10 10 ae 21           ra = 16, jump @591
      :                          @30 [@dyn 8]
   441: 95 67 10                 a0 = s1 + 0x10
   444: 7b 17 10                 u64 [sp + 0x10] = a0
   447: 64 17                    a0 = sp
   449: 95 18 10                 a1 = sp + 0x10
   452: 64 59                    a2 = s0
   454: 50 10 12 9c 21           ra = 18, jump @591
      :                          @31 [@dyn 9]
   459: 95 67 18                 a0 = s1 + 0x18
   462: 7b 17 10                 u64 [sp + 0x10] = a0
   465: 64 17                    a0 = sp
   467: 95 18 10                 a1 = sp + 0x10
   470: 64 59                    a2 = s0
   472: 50 10 14 8a 21           ra = 20, jump @591
      :                          @32 [@dyn 10]
   477: 95 67 20                 a0 = s1 + 0x20
   480: 7b 17 10                 u64 [sp + 0x10] = a0
   483: 64 17                    a0 = sp
   485: 95 18 10                 a1 = sp + 0x10
   488: 64 59                    a2 = s0
   490: 50 10 16 78 21           ra = 22, jump @591
      :                          @33 [@dyn 11]
   495: 95 67 28                 a0 = s1 + 0x28
   498: 7b 17 10                 u64 [sp + 0x10] = a0
   501: 64 17                    a0 = sp
   503: 95 18 10                 a1 = sp + 0x10
   506: 64 59                    a2 = s0
   508: 50 10 18 66 21           ra = 24, jump @591
      :                          @34 [@dyn 12]
   513: 95 67 30                 a0 = s1 + 0x30
   516: 7b 17 10                 u64 [sp + 0x10] = a0
   519: 64 17                    a0 = sp
   521: 95 18 10                 a1 = sp + 0x10
   524: 64 59                    a2 = s0
   526: 50 10 1a 54 21           ra = 26, jump @591
      :                          @35 [@dyn 13]
   531: 95 67 38                 a0 = s1 + 0x38
   534: 7b 17 10                 u64 [sp + 0x10] = a0
   537: 64 17                    a0 = sp
   539: 95 18 10                 a1 = sp + 0x10
   542: 64 59                    a2 = s0
   544: 50 10 1c 42 21           ra = 28, jump @591
      :                          @36 [@dyn 14]
   549: 95 67 40                 a0 = s1 + 0x40
   552: 7b 17 10                 u64 [sp + 0x10] = a0
   555: 64 17                    a0 = sp
   557: 95 18 10                 a1 = sp + 0x10
   560: 64 59                    a2 = s0
   562: 50 10 1e 30 21           ra = 30, jump @591
      :                          @37 [@dyn 15]
   567: 95 67 48                 a0 = s1 + 0x48
   570: 7b 17 10                 u64 [sp + 0x10] = a0
   573: 64 17                    a0 = sp
   575: 95 18 10                 a1 = sp + 0x10
   578: 64 59                    a2 = s0
   580: 50 10 20 1e 21           ra = 32, jump @591
      :                          @38 [@dyn 16]
   585: 95 67 50                 a0 = s1 + 0x50
   588: 7b 17 10                 u64 [sp + 0x10] = a0
   591: 64 17                    a0 = sp
   593: 95 18 10                 a1 = sp + 0x10
   596: 64 59                    a2 = s0
   598: 50 10 22 0c 21           ra = 34, jump @591
      :                          @39 [@dyn 17]
   603: 95 67 58                 a0 = s1 + 0x58
   606: 7b 17 10                 u64 [sp + 0x10] = a0
   609: 64 17                    a0 = sp
   611: 95 18 10                 a1 = sp + 0x10
   614: 64 59                    a2 = s0
   616: 50 10 24 fa 20           ra = 36, jump @591
      :                          @40 [@dyn 18]
   621: 95 67 60                 a0 = s1 + 0x60
   624: 7b 17 10                 u64 [sp + 0x10] = a0
   627: 64 17                    a0 = sp
   629: 95 18 10                 a1 = sp + 0x10
   632: 64 59                    a2 = s0
   634: 50 10 26 e8 20           ra = 38, jump @591
      :                          @41 [@dyn 19]
   639: 33 07 01                 a0 = 0x1
   642: 7c 18 08                 a1 = u8 [sp + 0x8]
   645: 52 08 1a                 jump @43 if a1 != 0
      :                          @42
   648: 82 17                    a0 = u64 [sp]
   650: 82 78 28                 a1 = u64 [a0 + 0x28]
   653: 82 77 20                 a0 = u64 [a0 + 0x20]
   656: 82 8a 18                 a3 = u64 [a1 + 0x18]
   659: 33 08 a1 04 01           a1 = 0x104a1
   664: 33 09 01                 a2 = 0x1
   667: b4 a0 01 28              ra = 40, jump [a3]
      :                          @43 [@dyn 20]
   671: 82 10 28                 ra = u64 [sp + 0x28]
   674: 82 15 20                 s0 = u64 [sp + 0x20]
   677: 82 16 18                 s1 = u64 [sp + 0x18]
   680: 95 11 30                 sp = sp + 0x30
   683: 32 00                    ret
      :                          @44 [export #0: 'refine']
   685: 95 11 08 f8              sp = sp + 0xfffffffffffff808
   689: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
   693: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
   697: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
   701: 95 11 a0 b4 fe           sp = sp + 0xfffffffffffeb4a0
   706: 64 86                    s1 = a1
   708: 64 7a                    a3 = a0
   710: 33 07 00 00 01           a0 = 0x10000
   715: 53 16 04 43              jump @53 if s1 <u 4
      :                          @45
   719: 7d a8                    a1 = i8 [a3]
   721: 33 05 01                 s0 = 0x1
   724: 59 08 37                 jump @52 if a1 >=s 0
      :                          @46
   727: 84 89 ff 00              a2 = a1 & 0xff
   731: 33 05 02                 s0 = 0x2
   734: 53 29 c0 00 2d           jump @52 if a2 <u 192
      :                          @47
   739: 33 05 03                 s0 = 0x3
   742: 53 29 e0 00 25           jump @52 if a2 <u 224
      :                          @48
   747: 33 05 04                 s0 = 0x4
   750: 53 29 f0 00 1d           jump @52 if a2 <u 240
      :                          @49
   755: 33 05 05                 s0 = 0x5
   758: 53 29 f8 00 15           jump @52 if a2 <u 248
      :                          @50
   763: 33 05 06                 s0 = 0x6
   766: 53 29 fc 00 0d           jump @52 if a2 <u 252
      :                          @51
   771: 88 98 fe 00              a1 = a2 <u 0xfe
   775: 9a 85 08                 s0 = 0x8 - a1
   778: 01                       fallthrough
      :                          @52
   779: ae 56 07                 jump @54 if s1 >=u s0
      :                          @53
   782: 33 06                    s1 = 0
   784: 28 61                    jump @65
      :                          @54
   786: 64 a7                    a0 = a3
   788: 64 58                    a1 = s0
   790: 7b 1a 78                 u64 [sp + 0x78] = a3
   793: 50 10 2a 88 21           ra = 42, jump @608
      :                          @55 [@dyn 21]
   798: aa 56 4b                 jump @64 if s1 == s0
      :                          @56
   801: 82 17 78                 a0 = u64 [sp + 0x78]
   804: c8 57 07                 a0 = a0 + s0
   807: 7d 78                    a1 = i8 [a0]
   809: c9 56 0a                 a3 = s1 - s0
   812: 33 06 01                 s1 = 0x1
   815: 59 08 37                 jump @63 if a1 >=s 0
      :                          @57
   818: 84 89 ff 00              a2 = a1 & 0xff
   822: 33 06 02                 s1 = 0x2
   825: 53 29 c0 00 2d           jump @63 if a2 <u 192
      :                          @58
   830: 33 06 03                 s1 = 0x3
   833: 53 29 e0 00 25           jump @63 if a2 <u 224
      :                          @59
   838: 33 06 04                 s1 = 0x4
   841: 53 29 f0 00 1d           jump @63 if a2 <u 240
      :                          @60
   846: 33 06 05                 s1 = 0x5
   849: 53 29 f8 00 15           jump @63 if a2 <u 248
      :                          @61
   854: 33 06 06                 s1 = 0x6
   857: 53 29 fc 00 0d           jump @63 if a2 <u 252
      :                          @62
   862: 88 98 fe 00              a1 = a2 <u 0xfe
   866: 9a 86 08                 s1 = 0x8 - a1
   869: 01                       fallthrough
      :                          @63
   870: ae 6a 27                 jump @66 if a3 >=u s1
      :                          @64
   873: 33 06                    s1 = 0
   875: 33 07 00 00 01           a0 = 0x10000
   880: 01                       fallthrough
      :                          @65
   881: 64 68                    a1 = s1
   883: 33 09 60 4b 01           a2 = 0x14b60
   888: c8 91 01                 sp = sp + a2
   891: 82 10 f0 07              ra = u64 [sp + 0x7f0]
   895: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
   899: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
   903: 95 11 f8 07              sp = sp + 0x7f8
   907: 32 00                    ret
      :                          @66
   909: 64 68                    a1 = s1
   911: 7b 1a 78                 u64 [sp + 0x78] = a3
   914: 64 75                    s0 = a0
   916: 50 10 2c 0d 21           ra = 44, jump @608
      :                          @67 [@dyn 22]
   921: c8 56 0a                 a3 = s1 + s0
   924: 82 15 78                 s0 = u64 [sp + 0x78]
   927: 7b 17 70                 u64 [sp + 0x70] = a0
   930: 7b 1a 68                 u64 [sp + 0x68] = a3
   933: ab 65 0b                 jump @69 if s0 != s1
      :                          @68
   936: 33 08                    a1 = 0
   938: 33 06                    s1 = 0
   940: 33 05                    s0 = 0
   942: 28 5c                    jump @80
      :                          @69
   944: 7d a8                    a1 = i8 [a3]
   946: c9 65 05                 s0 = s0 - s1
   949: 33 06 01                 s1 = 0x1
   952: 59 08 37                 jump @76 if a1 >=s 0
      :                          @70
   955: 84 89 ff 00              a2 = a1 & 0xff
   959: 33 06 02                 s1 = 0x2
   962: 53 29 c0 00 2d           jump @76 if a2 <u 192
      :                          @71
   967: 33 06 03                 s1 = 0x3
   970: 53 29 e0 00 25           jump @76 if a2 <u 224
      :                          @72
   975: 33 06 04                 s1 = 0x4
   978: 53 29 f0 00 1d           jump @76 if a2 <u 240
      :                          @73
   983: 33 06 05                 s1 = 0x5
   986: 53 29 f8 00 15           jump @76 if a2 <u 248
      :                          @74
   991: 33 06 06                 s1 = 0x6
   994: 53 29 fc 00 0d           jump @76 if a2 <u 252
      :                          @75
   999: 88 99 fe 00              a2 = a2 <u 0xfe
  1003: 9a 96 08                 s1 = 0x8 - a2
  1006: 01                       fallthrough
      :                          @76
  1007: ae 65 06                 jump @78 if s0 >=u s1
      :                          @77
  1010: 28 db 0e                 jump @232
      :                          @78
  1013: 64 a7                    a0 = a3
  1015: 64 68                    a1 = s1
  1017: 50 10 2e a8 20           ra = 46, jump @608
      :                          @79 [@dyn 23]
  1022: e4 65 08                 a1 = maxu(s0, s1)
  1025: c9 68 08                 a1 = a1 - s1
  1028: 64 75                    s0 = a0
  1030: ac 78 63 ff              jump @64 if a1 <u a0
      :                          @80
  1034: e4 58 07                 a0 = maxu(a1, s0)
  1037: c9 57 09                 a2 = a0 - s0
  1040: 33 07 00 00 01           a0 = 0x10000
  1045: 53 19 20 f9 fe           jump @53 if a2 <u 32
      :                          @81
  1050: 7b 16 60                 u64 [sp + 0x60] = s1
  1053: 7b 15 80 00              u64 [sp + 0x80] = s0
  1057: 33 07 11 00 03           a0 = 0x30011
  1062: 33 09 24                 a2 = 0x24
  1065: 33 0a 03                 a3 = 0x3
  1068: 7b 17 78                 u64 [sp + 0x78] = a0
  1071: 33 08                    a1 = 0
  1073: 33 0b                    a4 = 0
  1075: 33 0c                    a5 = 0
  1077: 0a 01                    ecalli 1 // 'fetch'
  1079: 01                       fallthrough
      :                          @82
  1080: 95 18 d8 50 01           a1 = sp + 0x150d8
  1085: 33 06 24                 s1 = 0x24
  1088: 55 15 08 71              jump @87 if s0 >=u 8
      :                          @83
  1092: 95 17 80 00              a0 = sp + 0x80
  1096: 7b 87 68 01              u64 [a1 + 0x168] = a0
  1100: 33 07 06                 a0 = 0x6
  1103: 7b 87 70 01              u64 [a1 + 0x170] = a0
  1107: 33 07 c8 03 01           a0 = 0x103c8
  1112: 7b 17 88 00              u64 [sp + 0x88] = a0
  1116: 49 21 90 00 01           u64 [sp + 144] = 0x1
  1121: 49 21 a8 00              u64 [sp + 168] = 0
  1125: 95 18 40 52 01           a1 = sp + 0x15240
  1130: 7b 18 98 00              u64 [sp + 0x98] = a1
  1134: 49 21 a0 00 01           u64 [sp + 160] = 0x1
  1139: 95 17 d0 40 01           a0 = sp + 0x140d0
  1144: 95 18 88 00              a1 = sp + 0x88
  1148: 95 15 88 40 01           s0 = sp + 0x14088
  1153: 50 10 30 46 13           ra = 48, jump @354
      :                          @84 [@dyn 24]
  1158: 82 5a 50                 a3 = u64 [s0 + 0x50]
  1161: 82 5b 58                 a4 = u64 [s0 + 0x58]
  1164: 82 55 48                 s0 = u64 [s0 + 0x48]
  1167: 33 07 02                 a0 = 0x2
  1170: 33 08                    a1 = 0
  1172: 33 09                    a2 = 0
  1174: 7b 1a 70                 u64 [sp + 0x70] = a3
  1177: 33 00 32                 ra = 0x32
  1180: 0a 64                    ecalli 100 // 'log'
  1182: 01                       fallthrough
      :                          @85 [@dyn 25]
  1183: 95 58 ff ff ef           a1 = s0 + 0xffffffffffefffff
  1188: 55 38 00 00 f0 10 03     jump @116 if a1 >=u 4293918720
      :                          @86
  1195: 82 17 78                 a0 = u64 [sp + 0x78]
  1198: 28 c3 fe                 jump @65
      :                          @87
  1201: 82 17 68                 a0 = u64 [sp + 0x68]
  1204: 82 18 60                 a1 = u64 [sp + 0x60]
  1207: c8 87 07                 a0 = a0 + a1
  1210: 80 75                    s0 = u32 [a0]
  1212: 80 78 04                 a1 = u32 [a0 + 0x4]
  1215: 7b 18 68                 u64 [sp + 0x68] = a1
  1218: 80 77 08                 a0 = u32 [a0 + 0x8]
  1221: 7b 17 60                 u64 [sp + 0x60] = a0
  1224: 95 17 88 00              a0 = sp + 0x88
  1228: 33 09 00 40 01           a2 = 0x14000
  1233: 33 08                    a1 = 0
  1235: 50 10 34 20 16           ra = 52, jump @422
      :                          @88 [@dyn 26]
  1240: 82 17 70                 a0 = u64 [sp + 0x70]
  1243: 97 77 20                 a0 = a0 << 0x20
  1246: 98 77 20                 a0 = a0 >> 0x20
  1249: 95 19 88 00              a2 = sp + 0x88
  1253: 33 0b 00 40 01           a4 = 0x14000
  1258: 82 18 78                 a1 = u64 [sp + 0x78]
  1261: 33 0a                    a3 = 0
  1263: 0a 06                    ecalli 6 // 'historical_lookup'
  1265: 01                       fallthrough
      :                          @89
  1266: 95 78 01                 a1 = a0 + 0x1
  1269: 53 18 04 74 fe           jump @64 if a1 <u 4
      :                          @90
  1274: 95 78 fd                 a1 = a0 + 0xfffffffffffffffd
  1277: 53 18 03 6c fe           jump @64 if a1 <u 3
      :                          @91
  1282: 84 78 fe                 a1 = a0 & 0xfffffffffffffffe
  1285: 51 18 06 64 fe           jump @64 if a1 == 6
      :                          @92
  1290: 95 78 f8                 a1 = a0 + 0xfffffffffffffff8
  1293: 53 18 03 5c fe           jump @64 if a1 <u 3
      :                          @93
  1298: 7c 18 8a 00              a1 = u8 [sp + 0x8a]
  1302: 7c 19 89 00              a2 = u8 [sp + 0x89]
  1306: 7c 1a 88 00              a3 = u8 [sp + 0x88]
  1310: 97 88 10                 a1 = a1 << 0x10
  1313: 97 99 08                 a2 = a2 << 0x8
  1316: d4 98 08                 a1 = a1 | a2
  1319: d4 a8 08                 a1 = a1 | a3
  1322: 95 79 f5                 a2 = a0 + 0xfffffffffffffff5
  1325: ac 89 3c fe              jump @64 if a2 <u a1
      :                          @94
  1329: 7c 17 8d 00              a0 = u8 [sp + 0x8d]
  1333: 7c 1a 8c 00              a3 = u8 [sp + 0x8c]
  1337: 7c 1b 8b 00              a4 = u8 [sp + 0x8b]
  1341: 97 77 10                 a0 = a0 << 0x10
  1344: 97 aa 08                 a3 = a3 << 0x8
  1347: d4 a7 07                 a0 = a0 | a3
  1350: d4 b7 07                 a0 = a0 | a4
  1353: c9 89 09                 a2 = a2 - a1
  1356: ac 79 1d fe              jump @64 if a2 <u a0
      :                          @95
  1360: c9 79 06                 s1 = a2 - a0
  1363: 53 16 04 16 fe           jump @64 if s1 <u 4
      :                          @96
  1368: 95 12 93 00              t0 = sp + 0x93
  1372: c8 28 03                 t1 = a1 + t0
  1375: c8 37 09                 a2 = a0 + t1
  1378: 7c 9c 03                 a5 = u8 [a2 + 0x3]
  1381: 7b 15 08                 u64 [sp + 0x8] = s0
  1384: 7c 95 02                 s0 = u8 [a2 + 0x2]
  1387: 7c 9b                    a4 = u8 [a2]
  1389: 7c 9a 01                 a3 = u8 [a2 + 0x1]
  1392: 97 cc 10                 a5 = a5 << 0x10
  1395: 97 55 08                 s0 = s0 << 0x8
  1398: d4 5c 0c                 a5 = a5 | s0
  1401: d4 ca 0a                 a3 = a3 | a5
  1404: 97 aa 08                 a3 = a3 << 0x8
  1407: d4 ba 0c                 a5 = a3 | a4
  1410: 95 66 fc                 s1 = s1 + 0xfffffffffffffffc
  1413: ac c6 e4 fd              jump @64 if s1 <u a5
      :                          @97
  1417: 7c 1a 8f 00              a3 = u8 [sp + 0x8f]
  1421: 7c 1b 8e 00              a4 = u8 [sp + 0x8e]
  1425: 97 aa 08                 a3 = a3 << 0x8
  1428: 7c 16 92 00              s1 = u8 [sp + 0x92]
  1432: 7c 15 91 00              s0 = u8 [sp + 0x91]
  1436: d4 ba 0a                 a3 = a3 | a4
  1439: 7c 1b 90 00              a4 = u8 [sp + 0x90]
  1443: 97 66 10                 s1 = s1 << 0x10
  1446: 97 55 08                 s0 = s0 << 0x8
  1449: d4 65 05                 s0 = s0 | s1
  1452: d4 5b 0b                 a4 = a4 | s0
  1455: 33 04 88 40 01           t2 = 0x14088
  1460: c8 41 06                 s1 = sp + t2
  1463: 7b 6a                    u64 [s1] = a3
  1465: 7b 6b 08                 u64 [s1 + 0x8] = a4
  1468: 7b 62 10                 u64 [s1 + 0x10] = t0
  1471: 7b 68 18                 u64 [s1 + 0x18] = a1
  1474: 7b 63 20                 u64 [s1 + 0x20] = t1
  1477: 7b 67 28                 u64 [s1 + 0x28] = a0
  1480: 95 99 04                 a2 = a2 + 0x4
  1483: 7b 69 30                 u64 [s1 + 0x30] = a2
  1486: 49 11 78 ff ff ef        u64 [sp + 120] = 0xffffffffffefffff
  1492: 7b 6c 38                 u64 [s1 + 0x38] = a5
  1495: 7b 66 48                 u64 [s1 + 0x48] = s1
  1498: 95 17 90 40 01           a0 = sp + 0x14090
  1503: 7b 67 58                 u64 [s1 + 0x58] = a0
  1506: 95 17 98 40 01           a0 = sp + 0x14098
  1511: 7b 67 68                 u64 [s1 + 0x68] = a0
  1514: 95 17 a0 40 01           a0 = sp + 0x140a0
  1519: 7b 67 78                 u64 [s1 + 0x78] = a0
  1522: 95 17 a8 40 01           a0 = sp + 0x140a8
  1527: 7b 67 88 00              u64 [s1 + 0x88] = a0
  1531: 95 17 b0 40 01           a0 = sp + 0x140b0
  1536: 7b 67 98 00              u64 [s1 + 0x98] = a0
  1540: 95 17 b8 40 01           a0 = sp + 0x140b8
  1545: 7b 67 a8 00              u64 [s1 + 0xa8] = a0
  1549: 95 17 c0 40 01           a0 = sp + 0x140c0
  1554: 7b 67 b8 00              u64 [s1 + 0xb8] = a0
  1558: 33 07 88 00 01           a0 = 0x10088
  1563: 95 15 d8 50 01           s0 = sp + 0x150d8
  1568: 7b 57 68 01              u64 [s0 + 0x168] = a0
  1572: 95 17 d0 40 01           a0 = sp + 0x140d0
  1577: 7b 57 78 01              u64 [s0 + 0x178] = a0
  1581: 49 25 70 01 08           u64 [s0 + 368] = 0x8
  1586: 49 25 80 01 08           u64 [s0 + 384] = 0x8
  1591: 33 07 06                 a0 = 0x6
  1594: 7b 67 50                 u64 [s1 + 0x50] = a0
  1597: 7b 67 60                 u64 [s1 + 0x60] = a0
  1600: 7b 67 70                 u64 [s1 + 0x70] = a0
  1603: 7b 67 80 00              u64 [s1 + 0x80] = a0
  1607: 7b 67 90 00              u64 [s1 + 0x90] = a0
  1611: 7b 67 a0 00              u64 [s1 + 0xa0] = a0
  1615: 7b 67 b0 00              u64 [s1 + 0xb0] = a0
  1619: 7b 17 70                 u64 [sp + 0x70] = a0
  1622: 7b 67 c0 00              u64 [s1 + 0xc0] = a0
  1626: 49 25 88 01              u64 [s0 + 392] = 0
  1630: 95 17 68 51 01           a0 = sp + 0x15168
  1635: 95 18 40 52 01           a1 = sp + 0x15240
  1640: 50 10 36 5f 11           ra = 54, jump @354
      :                          @98 [@dyn 27]
  1645: 82 56 98 00              s1 = u64 [s0 + 0x98]
  1649: 82 5b a0 00              a4 = u64 [s0 + 0xa0]
  1653: 82 55 90 00              s0 = u64 [s0 + 0x90]
  1657: 33 07 02                 a0 = 0x2
  1660: 33 08                    a1 = 0
  1662: 33 09                    a2 = 0
  1664: 64 6a                    a3 = s1
  1666: 33 00 38                 ra = 0x38
  1669: 0a 64                    ecalli 100 // 'log'
  1671: 01                       fallthrough
      :                          @99 [@dyn 28]
  1672: 82 17 78                 a0 = u64 [sp + 0x78]
  1675: c8 57 07                 a0 = a0 + s0
  1678: 53 37 00 00 f0 25        jump @105 if a0 <u 4293918720
      :                          @100
  1684: 33 07 40 10 03           a0 = 0x31040
  1689: 95 77 00 00 10           a0 = a0 + 0x100000
  1694: 01                       fallthrough
      :                          @101
  1695: 82 78                    a1 = u64 [a0]
  1697: c9 87 09                 a2 = a0 - a1
  1700: ab 69 0f                 jump @105 if a2 != s1
      :                          @102
  1703: c9 58 09                 a2 = a1 - s0
  1706: 01                       fallthrough
      :                          @103
  1707: 82 7a                    a3 = u64 [a0]
  1709: ab 8a f2                 jump @101 if a3 != a1
      :                          @104
  1712: 7b 79                    u64 [a0] = a2
  1714: 01                       fallthrough
      :                          @105
  1715: 95 16 88 40 01           s1 = sp + 0x14088
  1720: 82 67 30                 a0 = u64 [s1 + 0x30]
  1723: 82 68 38                 a1 = u64 [s1 + 0x38]
  1726: 33 09                    a2 = 0
  1728: 0a 08                    ecalli 8 // 'machine'
  1730: 7b 67 40                 u64 [s1 + 0x40] = a0
  1733: 95 17 c8 40 01           a0 = sp + 0x140c8
  1738: 95 15 d8 50 01           s0 = sp + 0x150d8
  1743: 7b 57 90 00              u64 [s0 + 0x90] = a0
  1747: 82 17 70                 a0 = u64 [sp + 0x70]
  1750: 7b 57 98 00              u64 [s0 + 0x98] = a0
  1754: 33 07 28 01 01           a0 = 0x10128
  1759: 7b 67 48                 u64 [s1 + 0x48] = a0
  1762: 95 17 68 51 01           a0 = sp + 0x15168
  1767: 7b 67 58                 u64 [s1 + 0x58] = a0
  1770: 49 16 50 01              u64 [s1 + 80] = 0x1
  1774: 49 16 60 01              u64 [s1 + 96] = 0x1
  1778: 14 07 ff ff ff ff 00 00 00 00 a0 = 0xffffffff
  1788: 7b 17 70                 u64 [sp + 0x70] = a0
  1791: 49 16 68                 u64 [s1 + 104] = 0
  1794: 95 17 40 52 01           a0 = sp + 0x15240
  1799: 95 18 d0 40 01           a1 = sp + 0x140d0
  1804: 50 10 3a bb 10           ra = 58, jump @354
      :                          @106 [@dyn 29]
  1809: 82 56 70 01              s1 = u64 [s0 + 0x170]
  1813: 82 5b 78 01              a4 = u64 [s0 + 0x178]
  1817: 82 55 68 01              s0 = u64 [s0 + 0x168]
  1821: 33 07 02                 a0 = 0x2
  1824: 33 08                    a1 = 0
  1826: 33 09                    a2 = 0
  1828: 64 6a                    a3 = s1
  1830: 33 00 3c                 ra = 0x3c
  1833: 0a 64                    ecalli 100 // 'log'
  1835: 01                       fallthrough
      :                          @107 [@dyn 30]
  1836: 82 17 78                 a0 = u64 [sp + 0x78]
  1839: c8 57 07                 a0 = a0 + s0
  1842: 53 37 00 00 f0 25        jump @113 if a0 <u 4293918720
      :                          @108
  1848: 33 07 40 10 03           a0 = 0x31040
  1853: 95 77 00 00 10           a0 = a0 + 0x100000
  1858: 01                       fallthrough
      :                          @109
  1859: 82 78                    a1 = u64 [a0]
  1861: c9 87 09                 a2 = a0 - a1
  1864: ab 69 0f                 jump @113 if a2 != s1
      :                          @110
  1867: c9 58 09                 a2 = a1 - s0
  1870: 01                       fallthrough
      :                          @111
  1871: 82 7a                    a3 = u64 [a0]
  1873: ab 8a f2                 jump @109 if a3 != a1
      :                          @112
  1876: 7b 79                    u64 [a0] = a2
  1878: 01                       fallthrough
      :                          @113
  1879: 33 05 ff 0f              s0 = 0xfff
  1883: 95 18 88 40 01           a1 = sp + 0x14088
  1888: 82 87                    a0 = u64 [a1]
  1890: 7b 17 48                 u64 [sp + 0x48] = a0
  1893: 82 87 08                 a0 = u64 [a1 + 0x8]
  1896: 7b 17 40                 u64 [sp + 0x40] = a0
  1899: 82 87 10                 a0 = u64 [a1 + 0x10]
  1902: 7b 17 38                 u64 [sp + 0x38] = a0
  1905: 82 89 18                 a2 = u64 [a1 + 0x18]
  1908: 82 87 20                 a0 = u64 [a1 + 0x20]
  1911: 7b 17 30                 u64 [sp + 0x30] = a0
  1914: 82 87 40                 a0 = u64 [a1 + 0x40]
  1917: 82 88 28                 a1 = u64 [a1 + 0x28]
  1920: 7b 18 50                 u64 [sp + 0x50] = a1
  1923: 7b 19 58                 u64 [sp + 0x58] = a2
  1926: c8 59 09                 a2 = a2 + s0
  1929: 98 99 0c                 a2 = a2 >> 0xc
  1932: 82 16 70                 s1 = u64 [sp + 0x70]
  1935: d2 76 06                 s1 = s1 & a0
  1938: 33 08 10                 a1 = 0x10
  1941: 33 0a 04                 a3 = 0x4
  1944: 64 67                    a0 = s1
  1946: 0a 0b                    ecalli 11 // 'pages'
  1948: 01                       fallthrough
      :                          @114
  1949: 51 07 47                 jump @123 if a0 == 0
      :                          @115
  1952: 33 0a 90 06 01           a3 = 0x10690
  1957: 33 07 02                 a0 = 0x2
  1960: 33 0b 3e                 a4 = 0x3e
  1963: 33 08                    a1 = 0
  1965: 33 09                    a2 = 0
  1967: 0a 64                    ecalli 100 // 'log'
  1969: 28 12 01                 jump @136
      :                          @116
  1972: 33 07 40 10 03           a0 = 0x31040
  1977: 95 7c 00 00 10           a5 = a0 + 0x100000
  1982: 33 07 11 00 03           a0 = 0x30011
  1987: 82 12 70                 t0 = u64 [sp + 0x70]
  1990: 01                       fallthrough
      :                          @117
  1991: 82 c8                    a1 = u64 [a5]
  1993: c9 8c 09                 a2 = a5 - a1
  1996: ab 29 a5 fb              jump @65 if a2 != t0
      :                          @118
  2000: c9 58 09                 a2 = a1 - s0
  2003: 01                       fallthrough
      :                          @119
  2004: 82 ca                    a3 = u64 [a5]
  2006: ab 8a f1                 jump @117 if a3 != a1
      :                          @120
  2009: 7b c9                    u64 [a5] = a2
  2011: 33 0b                    a4 = 0
  2013: 01                       fallthrough
      :                          @121
  2014: ab 8a e9                 jump @117 if a3 != a1
      :                          @122
  2017: 28 90 fb                 jump @65
      :                          @123
  2020: 82 17 50                 a0 = u64 [sp + 0x50]
  2023: 95 77 ff 0f              a0 = a0 + 0xfff
  2027: 98 77 0c                 a0 = a0 >> 0xc
  2030: 82 19 48                 a2 = u64 [sp + 0x48]
  2033: c8 79 09                 a2 = a2 + a0
  2036: 82 18 58                 a1 = u64 [sp + 0x58]
  2039: 95 87 ff ff 00           a0 = a1 + 0xffff
  2044: 84 77 00 00 ff           a0 = a0 & 0xffffffffffff0000
  2049: 95 77 00 00 02           a0 = a0 + 0x20000
  2054: 7b 17 70                 u64 [sp + 0x70] = a0
  2057: 98 78 0c                 a1 = a0 >> 0xc
  2060: 33 0a 04                 a3 = 0x4
  2063: 64 67                    a0 = s1
  2065: 0a 0b                    ecalli 11 // 'pages'
  2067: 01                       fallthrough
      :                          @124
  2068: 51 07 17                 jump @126 if a0 == 0
      :                          @125
  2071: 33 0a 52 06 01           a3 = 0x10652
  2076: 33 07 02                 a0 = 0x2
  2079: 33 0b 3e                 a4 = 0x3e
  2082: 33 08                    a1 = 0
  2084: 33 09                    a2 = 0
  2086: 0a 64                    ecalli 100 // 'log'
  2088: 28 9b 00                 jump @136
      :                          @126
  2091: 82 17 40                 a0 = u64 [sp + 0x40]
  2094: 95 75 ff 0f              s0 = a0 + 0xfff
  2098: 98 59 0c                 a2 = s0 >> 0xc
  2101: 84 57 00 f0              a0 = s0 & 0xfffffffffffff000
  2105: 14 08 00 00 fe fe 00 00 00 00 a1 = 0xfefe0000
  2115: c9 78 08                 a1 = a1 - a0
  2118: 98 88 0c                 a1 = a1 >> 0xc
  2121: 33 0a 04                 a3 = 0x4
  2124: 64 67                    a0 = s1
  2126: 0a 0b                    ecalli 11 // 'pages'
  2128: 01                       fallthrough
      :                          @127
  2129: 51 07 16                 jump @129 if a0 == 0
      :                          @128
  2132: 33 0a 16 06 01           a3 = 0x10616
  2137: 33 07 02                 a0 = 0x2
  2140: 33 0b 3c                 a4 = 0x3c
  2143: 33 08                    a1 = 0
  2145: 33 09                    a2 = 0
  2147: 0a 64                    ecalli 100 // 'log'
  2149: 28 5e                    jump @136
      :                          @129
  2151: 33 09 00 00 01           a2 = 0x10000
  2156: 64 67                    a0 = s1
  2158: 82 18 38                 a1 = u64 [sp + 0x38]
  2161: 82 1a 58                 a3 = u64 [sp + 0x58]
  2164: 0a 0a                    ecalli 10 // 'poke'
  2166: 01                       fallthrough
      :                          @130
  2167: 51 07 16                 jump @132 if a0 == 0
      :                          @131
  2170: 33 0a d8 05 01           a3 = 0x105d8
  2175: 33 07 02                 a0 = 0x2
  2178: 33 0b 3e                 a4 = 0x3e
  2181: 33 08                    a1 = 0
  2183: 33 09                    a2 = 0
  2185: 0a 64                    ecalli 100 // 'log'
  2187: 28 38                    jump @136
      :                          @132
  2189: 64 67                    a0 = s1
  2191: 82 18 30                 a1 = u64 [sp + 0x30]
  2194: 82 19 70                 a2 = u64 [sp + 0x70]
  2197: 82 1a 50                 a3 = u64 [sp + 0x50]
  2200: 0a 0a                    ecalli 10 // 'poke'
  2202: 01                       fallthrough
      :                          @133
  2203: 51 07 16                 jump @135 if a0 == 0
      :                          @134
  2206: 33 0a 9a 05 01           a3 = 0x1059a
  2211: 33 07 02                 a0 = 0x2
  2214: 33 0b 3e                 a4 = 0x3e
  2217: 33 08                    a1 = 0
  2219: 33 09                    a2 = 0
  2221: 0a 64                    ecalli 100 // 'log'
  2223: 28 14                    jump @136
      :                          @135
  2225: 33 0a 6c 05 01           a3 = 0x1056c
  2230: 33 07 02                 a0 = 0x2
  2233: 33 0b 2e                 a4 = 0x2e
  2236: 33 08                    a1 = 0
  2238: 33 09                    a2 = 0
  2240: 0a 64                    ecalli 100 // 'log'
  2242: 01                       fallthrough
      :                          @136
  2243: 33 09 08 10              a2 = 0x1008
  2247: 95 17 d0 40 01           a0 = sp + 0x140d0
  2252: 33 08                    a1 = 0
  2254: 7b 19 50                 u64 [sp + 0x50] = a2
  2257: 50 10 3e 22 12           ra = 62, jump @422
      :                          @137 [@dyn 31]
  2262: 49 11 18                 u64 [sp + 24] = 0
  2265: 95 17 d8 50 01           a0 = sp + 0x150d8
  2270: 49 07                    u64 [a0 + 0] = 0
  2272: 49 17 18                 u64 [a0 + 24] = 0
  2275: 33 05 40 10 03           s0 = 0x31040
  2280: 33 0b 00 00 10           a4 = 0x100000
  2285: 33 07 38 01 01           a0 = 0x10138
  2290: 7b 17 40                 u64 [sp + 0x40] = a0
  2293: 33 07 06                 a0 = 0x6
  2296: 7b 17 70                 u64 [sp + 0x70] = a0
  2299: 33 07 78 01 01           a0 = 0x10178
  2304: 7b 17 38                 u64 [sp + 0x38] = a0
  2307: 33 07 c0 01 01           a0 = 0x101c0
  2312: 7b 17 10                 u64 [sp + 0x10] = a0
  2315: 33 07 f8 01 01           a0 = 0x101f8
  2320: 7b 17 30                 u64 [sp + 0x30] = a0
  2323: 33 07 00 00 01           a0 = 0x10000
  2328: 7b 17 28                 u64 [sp + 0x28] = a0
  2331: 33 07 50 02 01           a0 = 0x10250
  2336: 7b 17 20                 u64 [sp + 0x20] = a0
  2339: 7b 15 48                 u64 [sp + 0x48] = s0
  2342: c8 b5 05                 s0 = s0 + a4
  2345: 28 14                    jump @139
      :                          @138
  2347: 95 18 d8 50 01           a1 = sp + 0x150d8
  2352: 82 87                    a0 = u64 [a1]
  2354: 95 77 01                 a0 = a0 + 0x1
  2357: 7b 87                    u64 [a1] = a0
  2359: 33 0b 00 00 10           a4 = 0x100000
  2364: 01                       fallthrough
      :                          @139
  2365: 82 58                    a1 = u64 [s0]
  2367: 95 87 12                 a0 = a1 + 0x12
  2370: ac 87 8a 09              jump @231 if a0 <u a1
      :                          @140
  2374: 95 79 01                 a2 = a0 + 0x1
  2377: 88 9a 01                 a3 = a2 <u 0x1
  2380: d8 9b 09                 a2 = a4 <u a2
  2383: d4 a9 09                 a2 = a2 | a3
  2386: 52 09 7a 09              jump @231 if a2 != 0
      :                          @141
  2390: 82 59                    a2 = u64 [s0]
  2392: ab 89 e5                 jump @139 if a2 != a1
      :                          @142
  2395: 7b 57                    u64 [s0] = a0
  2397: 82 16 48                 s1 = u64 [sp + 0x48]
  2400: c9 76 06                 s1 = s1 - a0
  2403: c8 b6 06                 s1 = s1 + a4
  2406: 33 09 12                 a2 = 0x12
  2409: 64 67                    a0 = s1
  2411: 82 18 40                 a1 = u64 [sp + 0x40]
  2414: 50 10 40 d3 10           ra = 64, jump @404
      :                          @143 [@dyn 32]
  2419: 33 07 02                 a0 = 0x2
  2422: 33 0b 12                 a4 = 0x12
  2425: 33 08                    a1 = 0
  2427: 33 09                    a2 = 0
  2429: 64 6a                    a3 = s1
  2431: 33 00 42                 ra = 0x42
  2434: 0a 64                    ecalli 100 // 'log'
  2436: 01                       fallthrough
      :                          @144 [@dyn 33]
  2437: 82 57                    a0 = u64 [s0]
  2439: c9 75 08                 a1 = s0 - a0
  2442: ab 68 0f                 jump @148 if a1 != s1
      :                          @145
  2445: 95 78 ee                 a1 = a0 + 0xffffffffffffffee
  2448: 01                       fallthrough
      :                          @146
  2449: 82 59                    a2 = u64 [s0]
  2451: ab 79 f2                 jump @144 if a2 != a0
      :                          @147
  2454: 7b 58                    u64 [s0] = a1
  2456: 01                       fallthrough
      :                          @148
  2457: 95 17 d8 50 01           a0 = sp + 0x150d8
  2462: 82 7b                    a4 = u64 [a0]
  2464: 95 17 d0 40 01           a0 = sp + 0x140d0
  2469: 33 0a 06                 a3 = 0x6
  2472: 33 08                    a1 = 0
  2474: 82 19 50                 a2 = u64 [sp + 0x50]
  2477: 33 0c                    a5 = 0
  2479: 0a 01                    ecalli 1 // 'fetch'
  2481: 01                       fallthrough
      :                          @149
  2482: 95 18 d8 50 01           a1 = sp + 0x150d8
  2487: 7b 87 20                 u64 [a1 + 0x20] = a0
  2490: 51 17 ff e1 02           jump @182 if a0 == 4294967295
      :                          @150
  2495: 7b 88 90 00              u64 [a1 + 0x90] = a1
  2499: 82 17 70                 a0 = u64 [sp + 0x70]
  2502: 7b 87 98 00              u64 [a1 + 0x98] = a0
  2506: 95 19 f8 50 01           a2 = sp + 0x150f8
  2511: 7b 89 a0 00              u64 [a1 + 0xa0] = a2
  2515: 7b 87 a8 00              u64 [a1 + 0xa8] = a0
  2519: 82 17 38                 a0 = u64 [sp + 0x38]
  2522: 7b 87 68 01              u64 [a1 + 0x168] = a0
  2526: 49 28 70 01 02           u64 [a1 + 368] = 0x2
  2531: 49 28 88 01              u64 [a1 + 392] = 0
  2535: 95 19 68 51 01           a2 = sp + 0x15168
  2540: 7b 89 78 01              u64 [a1 + 0x178] = a2
  2544: 49 28 80 01 02           u64 [a1 + 384] = 0x2
  2549: 95 17 00 51 01           a0 = sp + 0x15100
  2554: 95 18 40 52 01           a1 = sp + 0x15240
  2559: 50 10 44 c8 0d           ra = 68, jump @354
      :                          @151 [@dyn 34]
  2564: 95 17 d8 50 01           a0 = sp + 0x150d8
  2569: 82 76 30                 s1 = u64 [a0 + 0x30]
  2572: 82 7b 38                 a4 = u64 [a0 + 0x38]
  2575: 82 77 28                 a0 = u64 [a0 + 0x28]
  2578: 7b 17 58                 u64 [sp + 0x58] = a0
  2581: 33 07 02                 a0 = 0x2
  2584: 33 08                    a1 = 0
  2586: 33 09                    a2 = 0
  2588: 64 6a                    a3 = s1
  2590: 33 00 46                 ra = 0x46
  2593: 0a 64                    ecalli 100 // 'log'
  2595: 01                       fallthrough
      :                          @152 [@dyn 35]
  2596: 82 1b 58                 a4 = u64 [sp + 0x58]
  2599: 82 17 78                 a0 = u64 [sp + 0x78]
  2602: c8 b7 07                 a0 = a0 + a4
  2605: 53 37 00 00 f0 1a        jump @157 if a0 <u 4293918720
      :                          @153
  2611: 82 57                    a0 = u64 [s0]
  2613: c9 75 08                 a1 = s0 - a0
  2616: ab 68 0f                 jump @157 if a1 != s1
      :                          @154
  2619: c9 b7 08                 a1 = a0 - a4
  2622: 01                       fallthrough
      :                          @155
  2623: 82 59                    a2 = u64 [s0]
  2625: ab 79 f2                 jump @153 if a2 != a0
      :                          @156
  2628: 7b 58                    u64 [s0] = a1
  2630: 01                       fallthrough
      :                          @157
  2631: 95 18 88 40 01           a1 = sp + 0x14088
  2636: 80 87 48                 a0 = u32 [a1 + 0x48]
  2639: 80 88 4c                 a1 = u32 [a1 + 0x4c]
  2642: 95 1a d8 50 01           a3 = sp + 0x150d8
  2647: 82 a9                    a2 = u64 [a3]
  2649: 7b a7 08                 u64 [a3 + 0x8] = a0
  2652: 7b a8 10                 u64 [a3 + 0x10] = a1
  2655: 52 09 a6 00              jump @166 if a2 != 0
      :                          @158
  2659: 95 17 e0 50 01           a0 = sp + 0x150e0
  2664: 7b a7 90 00              u64 [a3 + 0x90] = a0
  2668: 82 17 70                 a0 = u64 [sp + 0x70]
  2671: 7b a7 98 00              u64 [a3 + 0x98] = a0
  2675: 95 18 e8 50 01           a1 = sp + 0x150e8
  2680: 7b a8 a0 00              u64 [a3 + 0xa0] = a1
  2684: 7b a7 a8 00              u64 [a3 + 0xa8] = a0
  2688: 82 17 10                 a0 = u64 [sp + 0x10]
  2691: 7b a7 68 01              u64 [a3 + 0x168] = a0
  2695: 49 2a 70 01 02           u64 [a3 + 368] = 0x2
  2700: 49 2a 88 01              u64 [a3 + 392] = 0
  2704: 95 18 68 51 01           a1 = sp + 0x15168
  2709: 7b a8 78 01              u64 [a3 + 0x178] = a1
  2713: 49 2a 80 01 02           u64 [a3 + 384] = 0x2
  2718: 95 17 00 51 01           a0 = sp + 0x15100
  2723: 95 18 40 52 01           a1 = sp + 0x15240
  2728: 50 10 48 1f 0d           ra = 72, jump @354
      :                          @159 [@dyn 36]
  2733: 95 17 d8 50 01           a0 = sp + 0x150d8
  2738: 82 76 30                 s1 = u64 [a0 + 0x30]
  2741: 82 7b 38                 a4 = u64 [a0 + 0x38]
  2744: 82 77 28                 a0 = u64 [a0 + 0x28]
  2747: 7b 17 58                 u64 [sp + 0x58] = a0
  2750: 33 07 02                 a0 = 0x2
  2753: 33 08                    a1 = 0
  2755: 33 09                    a2 = 0
  2757: 64 6a                    a3 = s1
  2759: 33 00 4a                 ra = 0x4a
  2762: 0a 64                    ecalli 100 // 'log'
  2764: 01                       fallthrough
      :                          @160 [@dyn 37]
  2765: 82 1b 58                 a4 = u64 [sp + 0x58]
  2768: 82 17 78                 a0 = u64 [sp + 0x78]
  2771: c8 b7 07                 a0 = a0 + a4
  2774: 53 37 00 00 f0 1a        jump @165 if a0 <u 4293918720
      :                          @161
  2780: 82 57                    a0 = u64 [s0]
  2782: c9 75 08                 a1 = s0 - a0
  2785: ab 68 0f                 jump @165 if a1 != s1
      :                          @162
  2788: c9 b7 08                 a1 = a0 - a4
  2791: 01                       fallthrough
      :                          @163
  2792: 82 59                    a2 = u64 [s0]
  2794: ab 79 f2                 jump @161 if a2 != a0
      :                          @164
  2797: 7b 58                    u64 [s0] = a1
  2799: 01                       fallthrough
      :                          @165
  2800: 95 19 d8 50 01           a2 = sp + 0x150d8
  2805: 82 98 10                 a1 = u64 [a2 + 0x10]
  2808: 82 97 08                 a0 = u64 [a2 + 0x8]
  2811: 97 8a 0c                 a3 = a1 << 0xc
  2814: 7b 1a 18                 u64 [sp + 0x18] = a3
  2817: 7b 9a 18                 u64 [a2 + 0x18] = a3
  2820: 01                       fallthrough
      :                          @166
  2821: 33 09 01                 a2 = 0x1
  2824: 33 0a 04                 a3 = 0x4
  2827: 0a 0b                    ecalli 11 // 'pages'
  2829: 95 19 d8 50 01           a2 = sp + 0x150d8
  2834: 7b 97 00 01              u64 [a2 + 0x100] = a0
  2838: 95 17 e0 50 01           a0 = sp + 0x150e0
  2843: 7b 97 68 01              u64 [a2 + 0x168] = a0
  2847: 82 17 70                 a0 = u64 [sp + 0x70]
  2850: 7b 97 70 01              u64 [a2 + 0x170] = a0
  2854: 95 18 e8 50 01           a1 = sp + 0x150e8
  2859: 7b 98 78 01              u64 [a2 + 0x178] = a1
  2863: 7b 97 80 01              u64 [a2 + 0x180] = a0
  2867: 95 18 d8 51 01           a1 = sp + 0x151d8
  2872: 7b 98 88 01              u64 [a2 + 0x188] = a1
  2876: 7b 97 90 01              u64 [a2 + 0x190] = a0
  2880: 82 17 30                 a0 = u64 [sp + 0x30]
  2883: 7b 97 90 00              u64 [a2 + 0x90] = a0
  2887: 49 29 98 00 03           u64 [a2 + 152] = 0x3
  2892: 49 29 b0 00              u64 [a2 + 176] = 0
  2896: 95 17 40 52 01           a0 = sp + 0x15240
  2901: 7b 97 a0 00              u64 [a2 + 0xa0] = a0
  2905: 49 29 a8 00 03           u64 [a2 + 168] = 0x3
  2910: 95 17 00 51 01           a0 = sp + 0x15100
  2915: 95 18 68 51 01           a1 = sp + 0x15168
  2920: 50 10 4c 5f 0c           ra = 76, jump @354
      :                          @167 [@dyn 38]
  2925: 95 17 d8 50 01           a0 = sp + 0x150d8
  2930: 82 76 30                 s1 = u64 [a0 + 0x30]
  2933: 82 7b 38                 a4 = u64 [a0 + 0x38]
  2936: 82 77 28                 a0 = u64 [a0 + 0x28]
  2939: 7b 17 58                 u64 [sp + 0x58] = a0
  2942: 33 07 02                 a0 = 0x2
  2945: 33 08                    a1 = 0
  2947: 33 09                    a2 = 0
  2949: 64 6a                    a3 = s1
  2951: 33 00 4e                 ra = 0x4e
  2954: 0a 64                    ecalli 100 // 'log'
  2956: 01                       fallthrough
      :                          @168 [@dyn 39]
  2957: 82 1b 58                 a4 = u64 [sp + 0x58]
  2960: 82 17 78                 a0 = u64 [sp + 0x78]
  2963: c8 b7 07                 a0 = a0 + a4
  2966: 53 37 00 00 f0 1a        jump @173 if a0 <u 4293918720
      :                          @169
  2972: 82 57                    a0 = u64 [s0]
  2974: c9 75 08                 a1 = s0 - a0
  2977: ab 68 0f                 jump @173 if a1 != s1
      :                          @170
  2980: c9 b7 08                 a1 = a0 - a4
  2983: 01                       fallthrough
      :                          @171
  2984: 82 59                    a2 = u64 [s0]
  2986: ab 79 f2                 jump @169 if a2 != a0
      :                          @172
  2989: 7b 58                    u64 [s0] = a1
  2991: 01                       fallthrough
      :                          @173
  2992: 95 1a d8 50 01           a3 = sp + 0x150d8
  2997: 82 a9 10                 a2 = u64 [a3 + 0x10]
  3000: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3003: 95 18 d0 40 01           a1 = sp + 0x140d0
  3008: 7b a8 08 01              u64 [a3 + 0x108] = a1
  3012: 97 99 0c                 a2 = a2 << 0xc
  3015: 7b a9 10 01              u64 [a3 + 0x110] = a2
  3019: 33 0a 00 10              a3 = 0x1000
  3023: 95 18 d8 40 01           a1 = sp + 0x140d8
  3028: 0a 0a                    ecalli 10 // 'poke'
  3030: 95 19 d8 50 01           a2 = sp + 0x150d8
  3035: 7b 97 28 01              u64 [a2 + 0x128] = a0
  3039: 95 17 e0 50 01           a0 = sp + 0x150e0
  3044: 7b 97 68 01              u64 [a2 + 0x168] = a0
  3048: 82 17 70                 a0 = u64 [sp + 0x70]
  3051: 7b 97 70 01              u64 [a2 + 0x170] = a0
  3055: 95 18 e0 51 01           a1 = sp + 0x151e0
  3060: 7b 98 78 01              u64 [a2 + 0x178] = a1
  3064: 7b 97 80 01              u64 [a2 + 0x180] = a0
  3068: 95 18 e8 51 01           a1 = sp + 0x151e8
  3073: 7b 98 88 01              u64 [a2 + 0x188] = a1
  3077: 7b 97 90 01              u64 [a2 + 0x190] = a0
  3081: 82 18 28                 a1 = u64 [sp + 0x28]
  3084: 7b 98 98 01              u64 [a2 + 0x198] = a1
  3088: 7b 97 a0 01              u64 [a2 + 0x1a0] = a0
  3092: 95 18 00 52 01           a1 = sp + 0x15200
  3097: 7b 98 a8 01              u64 [a2 + 0x1a8] = a1
  3101: 7b 97 b0 01              u64 [a2 + 0x1b0] = a0
  3105: 82 17 20                 a0 = u64 [sp + 0x20]
  3108: 7b 97 90 00              u64 [a2 + 0x90] = a0
  3112: 49 29 98 00 05           u64 [a2 + 152] = 0x5
  3117: 49 29 b0 00              u64 [a2 + 176] = 0
  3121: 95 17 40 52 01           a0 = sp + 0x15240
  3126: 7b 97 a0 00              u64 [a2 + 0xa0] = a0
  3130: 49 29 a8 00 05           u64 [a2 + 168] = 0x5
  3135: 95 17 00 51 01           a0 = sp + 0x15100
  3140: 95 18 68 51 01           a1 = sp + 0x15168
  3145: 50 10 50 7e 0b           ra = 80, jump @354
      :                          @174 [@dyn 40]
  3150: 95 17 d8 50 01           a0 = sp + 0x150d8
  3155: 82 76 30                 s1 = u64 [a0 + 0x30]
  3158: 82 7b 38                 a4 = u64 [a0 + 0x38]
  3161: 82 77 28                 a0 = u64 [a0 + 0x28]
  3164: 7b 17 58                 u64 [sp + 0x58] = a0
  3167: 33 07 02                 a0 = 0x2
  3170: 33 08                    a1 = 0
  3172: 33 09                    a2 = 0
  3174: 64 6a                    a3 = s1
  3176: 33 00 52                 ra = 0x52
  3179: 0a 64                    ecalli 100 // 'log'
  3181: 01                       fallthrough
      :                          @175 [@dyn 41]
  3182: 82 1b 58                 a4 = u64 [sp + 0x58]
  3185: 82 17 78                 a0 = u64 [sp + 0x78]
  3188: c8 b7 07                 a0 = a0 + a4
  3191: 53 37 00 00 f0 b4 fc     jump @138 if a0 <u 4293918720
      :                          @176
  3198: 82 57                    a0 = u64 [s0]
  3200: c9 75 08                 a1 = s0 - a0
  3203: ab 68 a8 fc              jump @138 if a1 != s1
      :                          @177
  3207: c9 b7 08                 a1 = a0 - a4
  3210: 01                       fallthrough
      :                          @178
  3211: 82 59                    a2 = u64 [s0]
  3213: ab 79 f1                 jump @176 if a2 != a0
      :                          @179
  3216: 7b 58                    u64 [s0] = a1
  3218: 33 0a                    a3 = 0
  3220: 01                       fallthrough
      :                          @180
  3221: ab 79 e9                 jump @176 if a2 != a0
      :                          @181
  3224: 28 93 fc                 jump @138
      :                          @182
  3227: 49 18 58                 u64 [a1 + 88] = 0
  3230: 49 18 50                 u64 [a1 + 80] = 0
  3233: 49 18 48                 u64 [a1 + 72] = 0
  3236: 49 18 40                 u64 [a1 + 64] = 0
  3239: 49 18 38                 u64 [a1 + 56] = 0
  3242: 49 18 70                 u64 [a1 + 112] = 0
  3245: 49 18 78                 u64 [a1 + 120] = 0
  3248: 49 28 80 00              u64 [a1 + 128] = 0
  3252: 49 28 88 00              u64 [a1 + 136] = 0
  3256: 14 07 00 00 ff ff 00 00 00 00 a0 = 0xffff0000
  3266: 7b 87 28                 u64 [a1 + 0x28] = a0
  3269: 14 07 00 00 fe fe 00 00 00 00 a0 = 0xfefe0000
  3279: 7b 87 30                 u64 [a1 + 0x30] = a0
  3282: 49 18 68                 u64 [a1 + 104] = 0
  3285: 82 17 18                 a0 = u64 [sp + 0x18]
  3288: 7b 87 60                 u64 [a1 + 0x60] = a0
  3291: 95 17 f0 50 01           a0 = sp + 0x150f0
  3296: 7b 87 28 01              u64 [a1 + 0x128] = a0
  3300: 33 07 06                 a0 = 0x6
  3303: 7b 87 30 01              u64 [a1 + 0x130] = a0
  3307: 33 07 c0 02 01           a0 = 0x102c0
  3312: 7b 87 68 01              u64 [a1 + 0x168] = a0
  3316: 49 28 70 01 01           u64 [a1 + 368] = 0x1
  3321: 49 28 88 01              u64 [a1 + 392] = 0
  3325: 95 19 00 52 01           a2 = sp + 0x15200
  3330: 7b 89 78 01              u64 [a1 + 0x178] = a2
  3334: 49 28 80 01 01           u64 [a1 + 384] = 0x1
  3339: 95 17 68 51 01           a0 = sp + 0x15168
  3344: 95 18 40 52 01           a1 = sp + 0x15240
  3349: 95 15 d8 50 01           s0 = sp + 0x150d8
  3354: 50 10 54 ad 0a           ra = 84, jump @354
      :                          @183 [@dyn 42]
  3359: 82 56 98 00              s1 = u64 [s0 + 0x98]
  3363: 82 5b a0 00              a4 = u64 [s0 + 0xa0]
  3367: 82 55 90 00              s0 = u64 [s0 + 0x90]
  3371: 33 07 02                 a0 = 0x2
  3374: 33 08                    a1 = 0
  3376: 33 09                    a2 = 0
  3378: 64 6a                    a3 = s1
  3380: 33 00 56                 ra = 0x56
  3383: 0a 64                    ecalli 100 // 'log'
  3385: 01                       fallthrough
      :                          @184 [@dyn 43]
  3386: 82 17 78                 a0 = u64 [sp + 0x78]
  3389: c8 57 07                 a0 = a0 + s0
  3392: 53 37 00 00 f0 27        jump @190 if a0 <u 4293918720
      :                          @185
  3398: 33 07 40 10 03           a0 = 0x31040
  3403: 95 77 00 00 10           a0 = a0 + 0x100000
  3408: 01                       fallthrough
      :                          @186
  3409: 82 78                    a1 = u64 [a0]
  3411: c9 87 09                 a2 = a0 - a1
  3414: ab 69 11                 jump @190 if a2 != s1
      :                          @187
  3417: c9 58 09                 a2 = a1 - s0
  3420: 01                       fallthrough
      :                          @188
  3421: 82 7a                    a3 = u64 [a0]
  3423: ab 8a f2                 jump @186 if a3 != a1
      :                          @189
  3426: 7b 79                    u64 [a0] = a2
  3428: 33 0b                    a4 = 0
  3430: 01                       fallthrough
      :                          @190
  3431: 95 16 d8 50 01           s1 = sp + 0x150d8
  3436: 82 67                    a0 = u64 [s1]
  3438: 97 77 0c                 a0 = a0 << 0xc
  3441: 7b 67 68                 u64 [s1 + 0x68] = a0
  3444: 82 17 08                 a0 = u64 [sp + 0x8]
  3447: 7b 67 70                 u64 [s1 + 0x70] = a0
  3450: 82 17 68                 a0 = u64 [sp + 0x68]
  3453: 7b 67 78                 u64 [s1 + 0x78] = a0
  3456: 82 17 60                 a0 = u64 [sp + 0x60]
  3459: 7b 67 80 00              u64 [s1 + 0x80] = a0
  3463: 95 17 00 51 01           a0 = sp + 0x15100
  3468: 7b 67 28 01              u64 [s1 + 0x128] = a0
  3472: 33 07 0a                 a0 = 0xa
  3475: 7b 67 30 01              u64 [s1 + 0x130] = a0
  3479: 33 07 f0 02 01           a0 = 0x102f0
  3484: 7b 67 68 01              u64 [s1 + 0x168] = a0
  3488: 49 26 70 01 01           u64 [s1 + 368] = 0x1
  3493: 49 26 88 01              u64 [s1 + 392] = 0
  3497: 95 18 00 52 01           a1 = sp + 0x15200
  3502: 7b 68 78 01              u64 [s1 + 0x178] = a1
  3506: 49 26 80 01 01           u64 [s1 + 384] = 0x1
  3511: 95 17 68 51 01           a0 = sp + 0x15168
  3516: 95 18 40 52 01           a1 = sp + 0x15240
  3521: 50 10 58 06 0a           ra = 88, jump @354
      :                          @191 [@dyn 44]
  3526: 82 65 98 00              s0 = u64 [s1 + 0x98]
  3530: 82 6b a0 00              a4 = u64 [s1 + 0xa0]
  3534: 82 66 90 00              s1 = u64 [s1 + 0x90]
  3538: 33 07 02                 a0 = 0x2
  3541: 33 08                    a1 = 0
  3543: 33 09                    a2 = 0
  3545: 64 5a                    a3 = s0
  3547: 33 00 5a                 ra = 0x5a
  3550: 0a 64                    ecalli 100 // 'log'
  3552: 01                       fallthrough
      :                          @192 [@dyn 45]
  3553: 82 17 78                 a0 = u64 [sp + 0x78]
  3556: c8 67 07                 a0 = a0 + s1
  3559: 53 37 00 00 f0 25        jump @198 if a0 <u 4293918720
      :                          @193
  3565: 33 07 40 10 03           a0 = 0x31040
  3570: 95 77 00 00 10           a0 = a0 + 0x100000
  3575: 01                       fallthrough
      :                          @194
  3576: 82 78                    a1 = u64 [a0]
  3578: c9 87 09                 a2 = a0 - a1
  3581: ab 59 0f                 jump @198 if a2 != s0
      :                          @195
  3584: c9 68 09                 a2 = a1 - s1
  3587: 01                       fallthrough
      :                          @196
  3588: 82 7a                    a3 = u64 [a0]
  3590: ab 8a f2                 jump @194 if a3 != a1
      :                          @197
  3593: 7b 79                    u64 [a0] = a2
  3595: 01                       fallthrough
      :                          @198
  3596: 95 16 d8 50 01           s1 = sp + 0x150d8
  3601: 82 62 28                 t0 = u64 [s1 + 0x28]
  3604: 82 63 30                 t1 = u64 [s1 + 0x30]
  3607: 82 64 38                 t2 = u64 [s1 + 0x38]
  3610: 82 60 40                 ra = u64 [s1 + 0x40]
  3613: 82 6b 48                 a4 = u64 [s1 + 0x48]
  3616: 82 6c 50                 a5 = u64 [s1 + 0x50]
  3619: 82 67 58                 a0 = u64 [s1 + 0x58]
  3622: 7b 17 70                 u64 [sp + 0x70] = a0
  3625: 82 65 60                 s0 = u64 [s1 + 0x60]
  3628: 49 26 90 00 00 00 01     u64 [s1 + 144] = 0x10000
  3635: 82 67 68                 a0 = u64 [s1 + 0x68]
  3638: 7b 62 98 00              u64 [s1 + 0x98] = t0
  3642: 82 68 70                 a1 = u64 [s1 + 0x70]
  3645: 7b 63 a0 00              u64 [s1 + 0xa0] = t1
  3649: 82 69 78                 a2 = u64 [s1 + 0x78]
  3652: 7b 64 a8 00              u64 [s1 + 0xa8] = t2
  3656: 82 6a 80 00              a3 = u64 [s1 + 0x80]
  3660: 7b 60 b0 00              u64 [s1 + 0xb0] = ra
  3664: 82 62 88 00              t0 = u64 [s1 + 0x88]
  3668: 7b 6b b8 00              u64 [s1 + 0xb8] = a4
  3672: 7b 6c c0 00              u64 [s1 + 0xc0] = a5
  3676: 82 1b 70                 a4 = u64 [sp + 0x70]
  3679: 7b 6b c8 00              u64 [s1 + 0xc8] = a4
  3683: 7b 65 d0 00              u64 [s1 + 0xd0] = s0
  3687: 7b 67 d8 00              u64 [s1 + 0xd8] = a0
  3691: 7b 68 e0 00              u64 [s1 + 0xe0] = a1
  3695: 7b 69 e8 00              u64 [s1 + 0xe8] = a2
  3699: 7b 6a f0 00              u64 [s1 + 0xf0] = a3
  3703: 7b 62 f8 00              u64 [s1 + 0xf8] = t0
  3707: 33 07 06                 a0 = 0x6
  3710: 7b 17 48                 u64 [sp + 0x48] = a0
  3713: 33 07 28 03 01           a0 = 0x10328
  3718: 7b 17 40                 u64 [sp + 0x40] = a0
  3721: 33 07 40 10 03           a0 = 0x31040
  3726: 95 77 00 00 10           a0 = a0 + 0x100000
  3731: 7b 17 38                 u64 [sp + 0x38] = a0
  3734: 01                       fallthrough
      :                          @199
  3735: 95 17 88 40 01           a0 = sp + 0x14088
  3740: 82 77 40                 a0 = u64 [a0 + 0x40]
  3743: 95 18 68 51 01           a1 = sp + 0x15168
  3748: 0a 0c                    ecalli 12 // 'invoke'
  3750: 7b 67 00 01              u64 [s1 + 0x100] = a0
  3754: 7b 68 08 01              u64 [s1 + 0x108] = a1
  3758: 95 17 c8 40 01           a0 = sp + 0x140c8
  3763: 7b 67 68 01              u64 [s1 + 0x168] = a0
  3767: 82 17 48                 a0 = u64 [sp + 0x48]
  3770: 7b 67 70 01              u64 [s1 + 0x170] = a0
  3774: 95 18 d8 51 01           a1 = sp + 0x151d8
  3779: 7b 68 78 01              u64 [s1 + 0x178] = a1
  3783: 7b 67 80 01              u64 [s1 + 0x180] = a0
  3787: 95 18 e0 51 01           a1 = sp + 0x151e0
  3792: 7b 68 88 01              u64 [s1 + 0x188] = a1
  3796: 7b 67 90 01              u64 [s1 + 0x190] = a0
  3800: 82 17 40                 a0 = u64 [sp + 0x40]
  3803: 7b 67 28 01              u64 [s1 + 0x128] = a0
  3807: 49 26 30 01 03           u64 [s1 + 304] = 0x3
  3812: 49 26 48 01              u64 [s1 + 328] = 0
  3816: 95 17 40 52 01           a0 = sp + 0x15240
  3821: 7b 67 38 01              u64 [s1 + 0x138] = a0
  3825: 49 26 40 01 03           u64 [s1 + 320] = 0x3
  3830: 95 17 e8 51 01           a0 = sp + 0x151e8
  3835: 95 18 00 52 01           a1 = sp + 0x15200
  3840: 50 10 5c c7 08           ra = 92, jump @354
      :                          @200 [@dyn 46]
  3845: 82 65 18 01              s0 = u64 [s1 + 0x118]
  3849: 82 6b 20 01              a4 = u64 [s1 + 0x120]
  3853: 82 66 10 01              s1 = u64 [s1 + 0x110]
  3857: 33 07 02                 a0 = 0x2
  3860: 33 08                    a1 = 0
  3862: 33 09                    a2 = 0
  3864: 64 5a                    a3 = s0
  3866: 33 00 5e                 ra = 0x5e
  3869: 0a 64                    ecalli 100 // 'log'
  3871: 01                       fallthrough
      :                          @201 [@dyn 47]
  3872: 82 17 78                 a0 = u64 [sp + 0x78]
  3875: c8 67 07                 a0 = a0 + s1
  3878: 82 1b 38                 a4 = u64 [sp + 0x38]
  3881: 53 37 00 00 f0 1a        jump @206 if a0 <u 4293918720
      :                          @202
  3887: 82 b7                    a0 = u64 [a4]
  3889: c9 7b 08                 a1 = a4 - a0
  3892: ab 58 0f                 jump @206 if a1 != s0
      :                          @203
  3895: c9 67 08                 a1 = a0 - s1
  3898: 01                       fallthrough
      :                          @204
  3899: 82 b9                    a2 = u64 [a4]
  3901: ab 79 f2                 jump @202 if a2 != a0
      :                          @205
  3904: 7b b8                    u64 [a4] = a1
  3906: 01                       fallthrough
      :                          @206
  3907: 95 18 d8 50 01           a1 = sp + 0x150d8
  3912: 82 87 00 01              a0 = u64 [a1 + 0x100]
  3916: 82 88 08 01              a1 = u64 [a1 + 0x108]
  3920: 85 77 03                 a0 = a0 ^ 0x3
  3923: 85 88 64                 a1 = a1 ^ 0x64
  3926: d4 87 05                 s0 = a0 | a1
  3929: 95 17 00 51 01           a0 = sp + 0x15100
  3934: 33 09 68                 a2 = 0x68
  3937: 95 18 70 51 01           a1 = sp + 0x15170
  3942: 50 10 60 db 0a           ra = 96, jump @404
      :                          @207 [@dyn 48]
  3947: 95 17 d8 50 01           a0 = sp + 0x150d8
  3952: 82 78 60                 a1 = u64 [a0 + 0x60]
  3955: 7b 18 68                 u64 [sp + 0x68] = a1
  3958: 52 05 90 00              jump @210 if s0 != 0
      :                          @208
  3962: 82 78 68                 a1 = u64 [a0 + 0x68]
  3965: 7b 18 58                 u64 [sp + 0x58] = a1
  3968: 82 78 70                 a1 = u64 [a0 + 0x70]
  3971: 7b 18 70                 u64 [sp + 0x70] = a1
  3974: 82 78 78                 a1 = u64 [a0 + 0x78]
  3977: 7b 18 60                 u64 [sp + 0x60] = a1
  3980: 82 78 80 00              a1 = u64 [a0 + 0x80]
  3984: 7b 18 50                 u64 [sp + 0x50] = a1
  3987: 49 27 60 01              u64 [a0 + 352] = 0
  3991: 49 27 58 01              u64 [a0 + 344] = 0
  3995: 49 27 50 01              u64 [a0 + 336] = 0
  3999: 49 27 48 01              u64 [a0 + 328] = 0
  4003: 49 27 40 01              u64 [a0 + 320] = 0
  4007: 49 27 38 01              u64 [a0 + 312] = 0
  4011: 49 27 30 01              u64 [a0 + 304] = 0
  4015: 49 27 28 01              u64 [a0 + 296] = 0
  4019: 95 17 40 52 01           a0 = sp + 0x15240
  4024: 33 09 00 01              a2 = 0x100
  4028: 33 08                    a1 = 0
  4030: 95 16 d8 50 01           s1 = sp + 0x150d8
  4035: 50 10 62 30 0b           ra = 98, jump @422
      :                          @209 [@dyn 49]
  4040: 95 15 88 40 01           s0 = sp + 0x14088
  4045: 82 57 40                 a0 = u64 [s0 + 0x40]
  4048: 95 18 00 52 01           a1 = sp + 0x15200
  4053: 82 19 58                 a2 = u64 [sp + 0x58]
  4056: 82 1a 70                 a3 = u64 [sp + 0x70]
  4059: 0a 09                    ecalli 9 // 'peek'
  4061: 82 57 40                 a0 = u64 [s0 + 0x40]
  4064: 95 18 40 52 01           a1 = sp + 0x15240
  4069: 82 19 60                 a2 = u64 [sp + 0x60]
  4072: 82 15 50                 s0 = u64 [sp + 0x50]
  4075: 64 5a                    a3 = s0
  4077: 0a 09                    ecalli 9 // 'peek'
  4079: 95 18 00 52 01           a1 = sp + 0x15200
  4084: 95 1a 40 52 01           a3 = sp + 0x15240
  4089: 82 17 68                 a0 = u64 [sp + 0x68]
  4092: 82 19 70                 a2 = u64 [sp + 0x70]
  4095: 64 5b                    a4 = s0
  4097: 0a 64                    ecalli 100 // 'log'
  4099: 28 94 fe                 jump @199
      :                          @210
  4102: 95 17 d8 40 01           a0 = sp + 0x140d8
  4107: 33 09 00 10              a2 = 0x1000
  4111: 33 06 00 10              s1 = 0x1000
  4115: 33 08                    a1 = 0
  4117: 50 10 64 de 0a           ra = 100, jump @422
      :                          @211 [@dyn 50]
  4122: 95 1a 88 40 01           a3 = sp + 0x14088
  4127: 82 a7 40                 a0 = u64 [a3 + 0x40]
  4130: 7a a7 48                 u32 [a3 + 0x48] = a0
  4133: 82 15 68                 s0 = u64 [sp + 0x68]
  4136: 98 58 0c                 a1 = s0 >> 0xc
  4139: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  4142: 33 0a 00 10              a3 = 0x1000
  4146: 95 18 d8 40 01           a1 = sp + 0x140d8
  4151: 64 59                    a2 = s0
  4153: 0a 09                    ecalli 9 // 'peek'
  4155: 83 66 08                 i32 s1 = s1 + 0x8
  4158: 95 17 d0 40 01           a0 = sp + 0x140d0
  4163: 64 68                    a1 = s1
  4165: 0a 07                    ecalli 7 // 'export'
  4167: 33 09 00 10              a2 = 0x1000
  4171: 95 17 d8 40 01           a0 = sp + 0x140d8
  4176: 33 08                    a1 = 0
  4178: 50 10 66 a1 0a           ra = 102, jump @422
      :                          @212 [@dyn 51]
  4183: 95 1a 88 40 01           a3 = sp + 0x14088
  4188: 82 a7 40                 a0 = u64 [a3 + 0x40]
  4191: 7a a7 48                 u32 [a3 + 0x48] = a0
  4194: 95 59 00 10              a2 = s0 + 0x1000
  4198: 98 98 0c                 a1 = a2 >> 0xc
  4201: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  4204: 33 0a 00 10              a3 = 0x1000
  4208: 95 18 d8 40 01           a1 = sp + 0x140d8
  4213: 0a 09                    ecalli 9 // 'peek'
  4215: 95 17 d0 40 01           a0 = sp + 0x140d0
  4220: 64 68                    a1 = s1
  4222: 0a 07                    ecalli 7 // 'export'
  4224: 33 09 00 10              a2 = 0x1000
  4228: 95 17 d8 40 01           a0 = sp + 0x140d8
  4233: 33 08                    a1 = 0
  4235: 50 10 68 68 0a           ra = 104, jump @422
      :                          @213 [@dyn 52]
  4240: 95 1a 88 40 01           a3 = sp + 0x14088
  4245: 82 a7 40                 a0 = u64 [a3 + 0x40]
  4248: 7a a7 48                 u32 [a3 + 0x48] = a0
  4251: 95 59 00 20              a2 = s0 + 0x2000
  4255: 98 98 0c                 a1 = a2 >> 0xc
  4258: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  4261: 33 0a 00 10              a3 = 0x1000
  4265: 95 18 d8 40 01           a1 = sp + 0x140d8
  4270: 0a 09                    ecalli 9 // 'peek'
  4272: 95 17 d0 40 01           a0 = sp + 0x140d0
  4277: 64 68                    a1 = s1
  4279: 0a 07                    ecalli 7 // 'export'
  4281: 33 09 00 10              a2 = 0x1000
  4285: 95 17 d8 40 01           a0 = sp + 0x140d8
  4290: 33 08                    a1 = 0
  4292: 50 10 6a 2f 0a           ra = 106, jump @422
      :                          @214 [@dyn 53]
  4297: 95 18 88 40 01           a1 = sp + 0x14088
  4302: 82 87 40                 a0 = u64 [a1 + 0x40]
  4305: 7a 87 48                 u32 [a1 + 0x48] = a0
  4308: 95 1a 88 40 01           a3 = sp + 0x14088
  4313: 95 59 00 30              a2 = s0 + 0x3000
  4317: 98 98 0c                 a1 = a2 >> 0xc
  4320: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  4323: 33 0a 00 10              a3 = 0x1000
  4327: 95 18 d8 40 01           a1 = sp + 0x140d8
  4332: 0a 09                    ecalli 9 // 'peek'
  4334: 95 17 d0 40 01           a0 = sp + 0x140d0
  4339: 64 68                    a1 = s1
  4341: 64 65                    s0 = s1
  4343: 0a 07                    ecalli 7 // 'export'
  4345: 33 09 00 10              a2 = 0x1000
  4349: 95 17 d8 40 01           a0 = sp + 0x140d8
  4354: 33 08                    a1 = 0
  4356: 50 10 6c ef 09           ra = 108, jump @422
      :                          @215 [@dyn 54]
  4361: 95 1a 88 40 01           a3 = sp + 0x14088
  4366: 82 a7 40                 a0 = u64 [a3 + 0x40]
  4369: 7a a7 48                 u32 [a3 + 0x48] = a0
  4372: 82 16 68                 s1 = u64 [sp + 0x68]
  4375: 95 69 00 40              a2 = s1 + 0x4000
  4379: 98 98 0c                 a1 = a2 >> 0xc
  4382: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  4385: 33 0a 00 10              a3 = 0x1000
  4389: 95 18 d8 40 01           a1 = sp + 0x140d8
  4394: 0a 09                    ecalli 9 // 'peek'
  4396: 95 17 d0 40 01           a0 = sp + 0x140d0
  4401: 64 58                    a1 = s0
  4403: 0a 07                    ecalli 7 // 'export'
  4405: 33 09 00 10              a2 = 0x1000
  4409: 95 17 d8 40 01           a0 = sp + 0x140d8
  4414: 33 08                    a1 = 0
  4416: 50 10 6e b3 09           ra = 110, jump @422
      :                          @216 [@dyn 55]
  4421: 95 18 88 40 01           a1 = sp + 0x14088
  4426: 82 87 40                 a0 = u64 [a1 + 0x40]
  4429: 7a 87 48                 u32 [a1 + 0x48] = a0
  4432: 95 1a 88 40 01           a3 = sp + 0x14088
  4437: 95 69 00 50              a2 = s1 + 0x5000
  4441: 98 98 0c                 a1 = a2 >> 0xc
  4444: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  4447: 33 0a 00 10              a3 = 0x1000
  4451: 95 18 d8 40 01           a1 = sp + 0x140d8
  4456: 0a 09                    ecalli 9 // 'peek'
  4458: 95 17 d0 40 01           a0 = sp + 0x140d0
  4463: 7b 15 70                 u64 [sp + 0x70] = s0
  4466: 64 58                    a1 = s0
  4468: 0a 07                    ecalli 7 // 'export'
  4470: 33 09 00 10              a2 = 0x1000
  4474: 95 17 d8 40 01           a0 = sp + 0x140d8
  4479: 33 08                    a1 = 0
  4481: 50 10 70 72 09           ra = 112, jump @422
      :                          @217 [@dyn 56]
  4486: 95 1a 88 40 01           a3 = sp + 0x14088
  4491: 82 a7 40                 a0 = u64 [a3 + 0x40]
  4494: 7a a7 48                 u32 [a3 + 0x48] = a0
  4497: 95 69 00 60              a2 = s1 + 0x6000
  4501: 98 98 0c                 a1 = a2 >> 0xc
  4504: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  4507: 33 0a 00 10              a3 = 0x1000
  4511: 95 18 d8 40 01           a1 = sp + 0x140d8
  4516: 0a 09                    ecalli 9 // 'peek'
  4518: 95 17 d0 40 01           a0 = sp + 0x140d0
  4523: 64 58                    a1 = s0
  4525: 0a 07                    ecalli 7 // 'export'
  4527: 33 09 00 10              a2 = 0x1000
  4531: 95 17 d8 40 01           a0 = sp + 0x140d8
  4536: 33 08                    a1 = 0
  4538: 50 10 72 39 09           ra = 114, jump @422
      :                          @218 [@dyn 57]
  4543: 95 18 88 40 01           a1 = sp + 0x14088
  4548: 82 87 40                 a0 = u64 [a1 + 0x40]
  4551: 7a 87 48                 u32 [a1 + 0x48] = a0
  4554: 95 1a 88 40 01           a3 = sp + 0x14088
  4559: 95 69 00 70              a2 = s1 + 0x7000
  4563: 98 98 0c                 a1 = a2 >> 0xc
  4566: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  4569: 33 0a 00 10              a3 = 0x1000
  4573: 95 18 d8 40 01           a1 = sp + 0x140d8
  4578: 0a 09                    ecalli 9 // 'peek'
  4580: 95 17 d0 40 01           a0 = sp + 0x140d0
  4585: 82 15 70                 s0 = u64 [sp + 0x70]
  4588: 64 58                    a1 = s0
  4590: 0a 07                    ecalli 7 // 'export'
  4592: 33 09 00 10              a2 = 0x1000
  4596: 95 17 d8 40 01           a0 = sp + 0x140d8
  4601: 33 08                    a1 = 0
  4603: 50 10 74 f8 08           ra = 116, jump @422
      :                          @219 [@dyn 58]
  4608: 95 1a 88 40 01           a3 = sp + 0x14088
  4613: 82 a7 40                 a0 = u64 [a3 + 0x40]
  4616: 7a a7 48                 u32 [a3 + 0x48] = a0
  4619: 95 69 00 80 00           a2 = s1 + 0x8000
  4624: 98 98 0c                 a1 = a2 >> 0xc
  4627: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  4630: 95 16 88 40 01           s1 = sp + 0x14088
  4635: 33 0a 00 10              a3 = 0x1000
  4639: 95 18 d8 40 01           a1 = sp + 0x140d8
  4644: 0a 09                    ecalli 9 // 'peek'
  4646: 95 17 d0 40 01           a0 = sp + 0x140d0
  4651: 64 58                    a1 = s0
  4653: 0a 07                    ecalli 7 // 'export'
  4655: 82 67 40                 a0 = u64 [s1 + 0x40]
  4658: 0a 0d                    ecalli 13 // 'expunge'
  4660: 33 07 06                 a0 = 0x6
  4663: 95 18 d8 50 01           a1 = sp + 0x150d8
  4668: 7b 87 18 01              u64 [a1 + 0x118] = a0
  4672: 33 07 88 03 01           a0 = 0x10388
  4677: 7b 87 68 01              u64 [a1 + 0x168] = a0
  4681: 95 17 e8 51 01           a0 = sp + 0x151e8
  4686: 7b 87 78 01              u64 [a1 + 0x178] = a0
  4690: 49 28 70 01 01           u64 [a1 + 368] = 0x1
  4695: 49 28 80 01 01           u64 [a1 + 384] = 0x1
  4700: 7b 88 10 01              u64 [a1 + 0x110] = a1
  4704: 49 28 88 01              u64 [a1 + 392] = 0
  4708: 95 16 d8 50 01           s1 = sp + 0x150d8
  4713: 95 17 00 52 01           a0 = sp + 0x15200
  4718: 95 18 40 52 01           a1 = sp + 0x15240
  4723: 50 10 76 54 05           ra = 118, jump @354
      :                          @220 [@dyn 59]
  4728: 82 65 30 01              s0 = u64 [s1 + 0x130]
  4732: 82 6b 38 01              a4 = u64 [s1 + 0x138]
  4736: 82 66 28 01              s1 = u64 [s1 + 0x128]
  4740: 33 07 02                 a0 = 0x2
  4743: 33 08                    a1 = 0
  4745: 33 09                    a2 = 0
  4747: 64 5a                    a3 = s0
  4749: 33 00 78                 ra = 0x78
  4752: 0a 64                    ecalli 100 // 'log'
  4754: 01                       fallthrough
      :                          @221 [@dyn 60]
  4755: 82 17 78                 a0 = u64 [sp + 0x78]
  4758: c8 67 07                 a0 = a0 + s1
  4761: 55 37 00 00 f0 09        jump @223 if a0 >=u 4293918720
      :                          @222
  4767: 28 ca f0                 jump @64
      :                          @223
  4770: 33 07 40 10 03           a0 = 0x31040
  4775: 95 77 00 00 10           a0 = a0 + 0x100000
  4780: 01                       fallthrough
      :                          @224
  4781: 82 78                    a1 = u64 [a0]
  4783: c9 87 09                 a2 = a0 - a1
  4786: aa 59 06                 jump @226 if a2 == s0
      :                          @225
  4789: 28 b4 f0                 jump @64
      :                          @226
  4792: c9 68 09                 a2 = a1 - s1
  4795: 01                       fallthrough
      :                          @227
  4796: 82 7a                    a3 = u64 [a0]
  4798: ab 8a ef                 jump @224 if a3 != a1
      :                          @228
  4801: 7b 79                    u64 [a0] = a2
  4803: 33 0b                    a4 = 0
  4805: 01                       fallthrough
      :                          @229
  4806: ab 8a e7                 jump @224 if a3 != a1
      :                          @230
  4809: 28 a0 f0                 jump @64
      :                          @231
  4812: 00                       trap
      :                          @232
  4813: 00                       trap
      :                          @233 [export #1: 'accumulate']
  4814: 51 08 a7 02              jump @296 if a1 == 0
      :                          @234
  4818: 95 11 68 ff              sp = sp + 0xffffffffffffff68
  4822: 7b 10 90 00              u64 [sp + 0x90] = ra
  4826: 7b 15 88 00              u64 [sp + 0x88] = s0
  4830: 7b 16 80 00              u64 [sp + 0x80] = s1
  4834: 64 85                    s0 = a1
  4836: 7d 78                    a1 = i8 [a0]
  4838: 33 06 01                 s1 = 0x1
  4841: 59 08 37                 jump @241 if a1 >=s 0
      :                          @235
  4844: 84 89 ff 00              a2 = a1 & 0xff
  4848: 33 06 02                 s1 = 0x2
  4851: 53 29 c0 00 2d           jump @241 if a2 <u 192
      :                          @236
  4856: 33 06 03                 s1 = 0x3
  4859: 53 29 e0 00 25           jump @241 if a2 <u 224
      :                          @237
  4864: 33 06 04                 s1 = 0x4
  4867: 53 29 f0 00 1d           jump @241 if a2 <u 240
      :                          @238
  4872: 33 06 05                 s1 = 0x5
  4875: 53 29 f8 00 15           jump @241 if a2 <u 248
      :                          @239
  4880: 33 06 06                 s1 = 0x6
  4883: 53 29 fc 00 0d           jump @241 if a2 <u 252
      :                          @240
  4888: 88 98 fe 00              a1 = a2 <u 0xfe
  4892: 9a 86 08                 s1 = 0x8 - a1
  4895: 01                       fallthrough
      :                          @241
  4896: ac 65 3c 02              jump @295 if s0 <u s1
      :                          @242
  4900: 64 68                    a1 = s1
  4902: 7b 17                    u64 [sp] = a0
  4904: 50 10 7a 79 11           ra = 122, jump @608
      :                          @243 [@dyn 61]
  4909: 82 17                    a0 = u64 [sp]
  4911: aa 65 2d 02              jump @295 if s0 == s1
      :                          @244
  4915: c8 67 07                 a0 = a0 + s1
  4918: 7d 78                    a1 = i8 [a0]
  4920: c9 65 0a                 a3 = s0 - s1
  4923: 33 05 01                 s0 = 0x1
  4926: 59 08 37                 jump @251 if a1 >=s 0
      :                          @245
  4929: 84 89 ff 00              a2 = a1 & 0xff
  4933: 33 05 02                 s0 = 0x2
  4936: 53 29 c0 00 2d           jump @251 if a2 <u 192
      :                          @246
  4941: 33 05 03                 s0 = 0x3
  4944: 53 29 e0 00 25           jump @251 if a2 <u 224
      :                          @247
  4949: 33 05 04                 s0 = 0x4
  4952: 53 29 f0 00 1d           jump @251 if a2 <u 240
      :                          @248
  4957: 33 05 05                 s0 = 0x5
  4960: 53 29 f8 00 15           jump @251 if a2 <u 248
      :                          @249
  4965: 33 05 06                 s0 = 0x6
  4968: 53 29 fc 00 0d           jump @251 if a2 <u 252
      :                          @250
  4973: 88 98 fe 00              a1 = a2 <u 0xfe
  4977: 9a 85 08                 s0 = 0x8 - a1
  4980: 01                       fallthrough
      :                          @251
  4981: ac 5a e7 01              jump @295 if a3 <u s0
      :                          @252
  4985: 64 58                    a1 = s0
  4987: 7b 1a                    u64 [sp] = a3
  4989: 64 76                    s1 = a0
  4991: 50 10 7c 22 11           ra = 124, jump @608
      :                          @253 [@dyn 62]
  4996: c8 65 07                 a0 = s0 + s1
  4999: 82 16                    s1 = u64 [sp]
  5001: ab 56 0b                 jump @255 if s1 != s0
      :                          @254
  5004: 33 08                    a1 = 0
  5006: 33 00 7e                 ra = 0x7e
  5009: 28 10 11                 jump @608
      :                          @255
  5012: 7d 79                    a2 = i8 [a0]
  5014: c9 56 06                 s1 = s1 - s0
  5017: 33 08 01                 a1 = 0x1
  5020: 59 09 44                 jump @262 if a2 >=s 0
      :                          @256
  5023: 84 99 ff 00              a2 = a2 & 0xff
  5027: 33 0a c0 00              a3 = 0xc0
  5031: 33 08 02                 a1 = 0x2
  5034: ac a9 36                 jump @262 if a2 <u a3
      :                          @257
  5037: 33 0a e0 00              a3 = 0xe0
  5041: 33 08 03                 a1 = 0x3
  5044: ac a9 2c                 jump @262 if a2 <u a3
      :                          @258
  5047: 33 0a f0 00              a3 = 0xf0
  5051: 33 08 04                 a1 = 0x4
  5054: ac a9 22                 jump @262 if a2 <u a3
      :                          @259
  5057: 33 0a f8 00              a3 = 0xf8
  5061: 33 08 05                 a1 = 0x5
  5064: ac a9 18                 jump @262 if a2 <u a3
      :                          @260
  5067: 33 0a fc 00              a3 = 0xfc
  5071: 33 08 06                 a1 = 0x6
  5074: ac a9 0e                 jump @262 if a2 <u a3
      :                          @261
  5077: 88 98 fe 00              a1 = a2 <u 0xfe
  5081: 33 09 08                 a2 = 0x8
  5084: c9 89 08                 a1 = a2 - a1
  5087: 01                       fallthrough
      :                          @262
  5088: ac 86 7c 01              jump @295 if s1 <u a1
      :                          @263
  5092: 50 10 7e bd 10           ra = 126, jump @608
      :                          @264 [@dyn 63]
  5097: 33 07 35 00 03           a0 = 0x30035
  5102: 33 09 08 10              a2 = 0x1008
  5106: 33 0a 0f                 a3 = 0xf
  5109: 33 08                    a1 = 0
  5111: 33 0b                    a4 = 0
  5113: 33 0c                    a5 = 0
  5115: 33 00 80 00              ra = 0x80
  5119: 0a 01                    ecalli 1 // 'fetch'
  5121: 01                       fallthrough
      :                          @265 [@dyn 64]
  5122: 51 07 5a 01              jump @295 if a0 == 0
      :                          @266
  5126: 95 76 80                 s1 = a0 + 0xffffffffffffff80
  5129: 51 06 53 01              jump @295 if s1 == 0
      :                          @267
  5133: 35 07 b5 00 03           a0 = i8 [0x300b5]
  5138: 33 05 01                 s0 = 0x1
  5141: 59 07 37                 jump @274 if a0 >=s 0
      :                          @268
  5144: 84 77 ff 00              a0 = a0 & 0xff
  5148: 33 05 02                 s0 = 0x2
  5151: 53 27 c0 00 2d           jump @274 if a0 <u 192
      :                          @269
  5156: 33 05 03                 s0 = 0x3
  5159: 53 27 e0 00 25           jump @274 if a0 <u 224
      :                          @270
  5164: 33 05 04                 s0 = 0x4
  5167: 53 27 f0 00 1d           jump @274 if a0 <u 240
      :                          @271
  5172: 33 05 05                 s0 = 0x5
  5175: 53 27 f8 00 15           jump @274 if a0 <u 248
      :                          @272
  5180: 33 05 06                 s0 = 0x6
  5183: 53 27 fc 00 0d           jump @274 if a0 <u 252
      :                          @273
  5188: 88 77 fe 00              a0 = a0 <u 0xfe
  5192: 9a 75 08                 s0 = 0x8 - a0
  5195: 01                       fallthrough
      :                          @274
  5196: ac 56 10 01              jump @295 if s1 <u s0
      :                          @275
  5200: 33 07 35 00 03           a0 = 0x30035
  5205: 7b 17                    u64 [sp] = a0
  5207: 95 77 80 00              a0 = a0 + 0x80
  5211: 64 58                    a1 = s0
  5213: 50 20 82 00 44 10        ra = 130, jump @608
      :                          @276 [@dyn 65]
  5219: 85 57 ff                 a0 = s0 ^ 0xffffffffffffffff
  5222: c8 67 07                 a0 = a0 + s1
  5225: 51 07 f3 00              jump @295 if a0 == 0
      :                          @277
  5229: 82 18                    a1 = u64 [sp]
  5231: c8 85 05                 s0 = s0 + a1
  5234: 95 55 81 00              s0 = s0 + 0x81
  5238: 7d 58                    a1 = i8 [s0]
  5240: 33 06 01                 s1 = 0x1
  5243: 59 08 45                 jump @285 if a1 >=s 0
      :                          @278
  5246: 84 88 ff 00              a1 = a1 & 0xff
  5250: 33 09 c0 00              a2 = 0xc0
  5254: 33 06 02                 s1 = 0x2
  5257: ac 98 33                 jump @284 if a1 <u a2
      :                          @279
  5260: 33 09 e0 00              a2 = 0xe0
  5264: 33 06 03                 s1 = 0x3
  5267: ac 98 29                 jump @284 if a1 <u a2
      :                          @280
  5270: 33 09 f0 00              a2 = 0xf0
  5274: 33 06 04                 s1 = 0x4
  5277: ac 98 1f                 jump @284 if a1 <u a2
      :                          @281
  5280: 33 09 f8 00              a2 = 0xf8
  5284: 33 06 05                 s1 = 0x5
  5287: ac 98 15                 jump @284 if a1 <u a2
      :                          @282
  5290: 33 09 fc 00              a2 = 0xfc
  5294: 33 06 06                 s1 = 0x6
  5297: ac 98 0b                 jump @284 if a1 <u a2
      :                          @283
  5300: 88 88 fe 00              a1 = a1 <u 0xfe
  5304: 9a 86 08                 s1 = 0x8 - a1
  5307: 01                       fallthrough
      :                          @284
  5308: ac 67 a0 00              jump @295 if a0 <u s1
      :                          @285
  5312: 64 57                    a0 = s0
  5314: 64 68                    a1 = s1
  5316: 50 20 84 00 dd 0f        ra = 132, jump @608
      :                          @286 [@dyn 66]
  5322: 52 17 24 92 00           jump @295 if a0 != 36
      :                          @287
  5327: c8 56 07                 a0 = s1 + s0
  5330: 7b 17 08                 u64 [sp + 0x8] = a0
  5333: 80 78 20                 a1 = u32 [a0 + 0x20]
  5336: 7b 18 10                 u64 [sp + 0x10] = a1
  5339: 0a 17                    ecalli 23 // 'solicit'
  5341: 95 17 08                 a0 = sp + 0x8
  5344: 7b 17 60                 u64 [sp + 0x60] = a0
  5347: 33 07 06                 a0 = 0x6
  5350: 7b 17 68                 u64 [sp + 0x68] = a0
  5353: 95 18 10                 a1 = sp + 0x10
  5356: 7b 18 70                 u64 [sp + 0x70] = a1
  5359: 7b 17 78                 u64 [sp + 0x78] = a0
  5362: 33 07 08 04 01           a0 = 0x10408
  5367: 7b 17 30                 u64 [sp + 0x30] = a0
  5370: 49 11 38 02              u64 [sp + 56] = 0x2
  5374: 49 11 50                 u64 [sp + 80] = 0
  5377: 95 18 60                 a1 = sp + 0x60
  5380: 7b 18 40                 u64 [sp + 0x40] = a1
  5383: 49 11 48 02              u64 [sp + 72] = 0x2
  5387: 95 17 18                 a0 = sp + 0x18
  5390: 95 18 30                 a1 = sp + 0x30
  5393: 50 20 86 00 b6 02        ra = 134, jump @354
      :                          @288 [@dyn 67]
  5399: 82 15 20                 s0 = u64 [sp + 0x20]
  5402: 82 1b 28                 a4 = u64 [sp + 0x28]
  5405: 82 16 18                 s1 = u64 [sp + 0x18]
  5408: 33 07 02                 a0 = 0x2
  5411: 33 08                    a1 = 0
  5413: 33 09                    a2 = 0
  5415: 64 5a                    a3 = s0
  5417: 33 00 88 00              ra = 0x88
  5421: 0a 64                    ecalli 100 // 'log'
  5423: 01                       fallthrough
      :                          @289 [@dyn 68]
  5424: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
  5429: 53 38 00 00 f0 27        jump @295 if a1 <u 4293918720
      :                          @290
  5435: 33 07 40 10 03           a0 = 0x31040
  5440: 95 77 00 00 10           a0 = a0 + 0x100000
  5445: 01                       fallthrough
      :                          @291
  5446: 82 78                    a1 = u64 [a0]
  5448: c9 87 09                 a2 = a0 - a1
  5451: ab 59 11                 jump @295 if a2 != s0
      :                          @292
  5454: c9 68 09                 a2 = a1 - s1
  5457: 01                       fallthrough
      :                          @293
  5458: 82 7a                    a3 = u64 [a0]
  5460: ab 8a f2                 jump @291 if a3 != a1
      :                          @294
  5463: 7b 79                    u64 [a0] = a2
  5465: 33 0b                    a4 = 0
  5467: 01                       fallthrough
      :                          @295
  5468: 82 10 90 00              ra = u64 [sp + 0x90]
  5472: 82 15 88 00              s0 = u64 [sp + 0x88]
  5476: 82 16 80 00              s1 = u64 [sp + 0x80]
  5480: 95 11 98 00              sp = sp + 0x98
  5484: 33 07 00 00 01           a0 = 0x10000
  5489: 33 08                    a1 = 0
  5491: 32 00                    ret
      :                          @296
  5493: 33 07 00 00 01           a0 = 0x10000
  5498: 33 08                    a1 = 0
  5500: 32 00                    ret
      :                          @297 [export #2: 'on_transfer']
  5502: 33 07 00 00 01           a0 = 0x10000
  5507: 33 08                    a1 = 0
  5509: 32 00                    ret
      :                          @298
  5511: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  5514: 7b 10 40                 u64 [sp + 0x40] = ra
  5517: 7b 15 38                 u64 [sp + 0x38] = s0
  5520: 7b 16 30                 u64 [sp + 0x30] = s1
  5523: c8 89 09                 a2 = a2 + a1
  5526: ac 89 53                 jump @306 if a2 <u a1
      :                          @299
  5529: 64 75                    s0 = a0
  5531: 82 77                    a0 = u64 [a0]
  5533: 97 78 01                 a1 = a0 << 0x1
  5536: 33 0a 08                 a3 = 0x8
  5539: e4 a9 09                 a2 = maxu(a2, a3)
  5542: e4 98 06                 s1 = maxu(a1, a2)
  5545: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  5548: 98 88 3f                 a1 = a1 >> 0x3f
  5551: 51 07 12                 jump @301 if a0 == 0
      :                          @300
  5554: 82 59 08                 a2 = u64 [s0 + 0x8]
  5557: 7b 19 18                 u64 [sp + 0x18] = a2
  5560: 49 11 20 01              u64 [sp + 32] = 0x1
  5564: 7b 17 28                 u64 [sp + 0x28] = a0
  5567: 28 06                    jump @302
      :                          @301
  5569: 49 11 20                 u64 [sp + 32] = 0
  5572: 01                       fallthrough
      :                          @302
  5573: 64 17                    a0 = sp
  5575: 95 1a 18                 a3 = sp + 0x18
  5578: 64 69                    a2 = s1
  5580: 50 20 8a 00 33           ra = 138, jump @310
      :                          @303 [@dyn 69]
  5585: 82 18                    a1 = u64 [sp]
  5587: 82 17 08                 a0 = u64 [sp + 0x8]
  5590: 51 08 14                 jump @307 if a1 == 0
      :                          @304
  5593: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  5603: aa 87 0d                 jump @308 if a0 == a1
      :                          @305
  5606: 52 07 18                 jump @309 if a0 != 0
      :                          @306
  5609: 00                       trap
      :                          @307
  5610: 7b 57 08                 u64 [s0 + 0x8] = a0
  5613: 7b 56                    u64 [s0] = s1
  5615: 01                       fallthrough
      :                          @308
  5616: 82 10 40                 ra = u64 [sp + 0x40]
  5619: 82 15 38                 s0 = u64 [sp + 0x38]
  5622: 82 16 30                 s1 = u64 [sp + 0x30]
  5625: 95 11 48                 sp = sp + 0x48
  5628: 32 00                    ret
      :                          @309
  5630: 00                       trap
      :                          @310
  5631: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  5634: 7b 10 30                 u64 [sp + 0x30] = ra
  5637: 7b 15 28                 u64 [sp + 0x28] = s0
  5640: 7b 16 20                 u64 [sp + 0x20] = s1
  5643: 64 95                    s0 = a2
  5645: 64 72                    t0 = a0
  5647: 51 08 7a                 jump @320 if a1 == 0
      :                          @311
  5650: 82 a7 08                 a0 = u64 [a3 + 0x8]
  5653: 51 07 7d                 jump @321 if a0 == 0
      :                          @312
  5656: 82 a9 10                 a2 = u64 [a3 + 0x10]
  5659: 51 09 ab 00              jump @328 if a2 == 0
      :                          @313
  5663: 82 a8                    a1 = u64 [a3]
  5665: 33 06 40 10 03           s1 = 0x31040
  5670: 33 03 00 00 10           t1 = 0x100000
  5675: c8 36 06                 s1 = s1 + t1
  5678: 01                       fallthrough
      :                          @314
  5679: 82 6a                    a3 = u64 [s1]
  5681: c8 5a 07                 a0 = a3 + s0
  5684: ac a7 d0 00              jump @334 if a0 <u a3
      :                          @315
  5688: 95 7b 01                 a4 = a0 + 0x1
  5691: 88 bc 01                 a5 = a4 <u 0x1
  5694: d8 b3 0b                 a4 = t1 <u a4
  5697: d4 cb 0b                 a4 = a4 | a5
  5700: 52 0b c0 00              jump @334 if a4 != 0
      :                          @316
  5704: 82 6b                    a4 = u64 [s1]
  5706: ab ab e5                 jump @314 if a4 != a3
      :                          @317
  5709: 7b 67                    u64 [s1] = a0
  5711: 33 0c                    a5 = 0
  5713: 7b 12 18                 u64 [sp + 0x18] = t0
  5716: 33 0a 40 10 03           a3 = 0x31040
  5721: 33 0b 00 00 10           a4 = 0x100000
  5726: 7b 1a                    u64 [sp] = a3
  5728: c8 ba 0a                 a3 = a3 + a4
  5731: c9 7a 07                 a0 = a3 - a0
  5734: 7b 17 10                 u64 [sp + 0x10] = a0
  5737: 7b 18 08                 u64 [sp + 0x8] = a1
  5740: 64 96                    s1 = a2
  5742: 50 20 8c 00 d3 03        ra = 140, jump @404
      :                          @318 [@dyn 70]
  5748: 54 36 00 00 10 98 00     jump @335 if s1 <=u 1048576
      :                          @319
  5755: 82 12 18                 t0 = u64 [sp + 0x18]
  5758: 82 18 10                 a1 = u64 [sp + 0x10]
  5761: 33 07                    a0 = 0
  5763: 7b 28 08                 u64 [t0 + 0x8] = a1
  5766: 28 b5 00                 jump @341
      :                          @320
  5769: 49 12 08                 u64 [t0 + 8] = 0
  5772: 33 07 01                 a0 = 0x1
  5775: 28 ac 00                 jump @341
      :                          @321
  5778: 33 09 40 10 03           a2 = 0x31040
  5783: 33 07 00 00 10           a0 = 0x100000
  5788: c8 79 09                 a2 = a2 + a0
  5791: 01                       fallthrough
      :                          @322
  5792: 82 9a                    a3 = u64 [a2]
  5794: c8 5a 08                 a1 = a3 + s0
  5797: ac a8 5f                 jump @334 if a1 <u a3
      :                          @323
  5800: 95 8b 01                 a4 = a1 + 0x1
  5803: 88 bc 01                 a5 = a4 <u 0x1
  5806: d8 b7 0b                 a4 = a0 <u a4
  5809: d4 cb 0b                 a4 = a4 | a5
  5812: 52 0b 50                 jump @334 if a4 != 0
      :                          @324
  5815: 82 9b                    a4 = u64 [a2]
  5817: ab ab e7                 jump @322 if a4 != a3
      :                          @325
  5820: 7b 98                    u64 [a2] = a1
  5822: 33 0c                    a5 = 0
  5824: 01                       fallthrough
      :                          @326
  5825: ab ab df                 jump @322 if a4 != a3
      :                          @327
  5828: 28 31                    jump @333
      :                          @328
  5830: 33 09 40 10 03           a2 = 0x31040
  5835: 33 07 00 00 10           a0 = 0x100000
  5840: c8 79 09                 a2 = a2 + a0
  5843: 01                       fallthrough
      :                          @329
  5844: 82 9a                    a3 = u64 [a2]
  5846: c8 5a 08                 a1 = a3 + s0
  5849: ac a8 2b                 jump @334 if a1 <u a3
      :                          @330
  5852: 95 8b 01                 a4 = a1 + 0x1
  5855: 88 bc 01                 a5 = a4 <u 0x1
  5858: d8 b7 0b                 a4 = a0 <u a4
  5861: d4 cb 0b                 a4 = a4 | a5
  5864: 52 0b 1c                 jump @334 if a4 != 0
      :                          @331
  5867: 82 9b                    a4 = u64 [a2]
  5869: ab ab e7                 jump @329 if a4 != a3
      :                          @332
  5872: 7b 98                    u64 [a2] = a1
  5874: 33 0c                    a5 = 0
  5876: 01                       fallthrough
      :                          @333
  5877: 33 07 40 10 13           a0 = 0x131040
  5882: c9 87 08                 a1 = a0 - a1
  5885: 33 07                    a0 = 0
  5887: 7b 28 08                 u64 [t0 + 0x8] = a1
  5890: 28 39                    jump @341
      :                          @334
  5892: 33 07 01                 a0 = 0x1
  5895: 7b 27 08                 u64 [t0 + 0x8] = a0
  5898: 28 31                    jump @341
      :                          @335
  5900: 64 6c                    a5 = s1
  5902: 82 17                    a0 = u64 [sp]
  5904: 95 77 00 00 10           a0 = a0 + 0x100000
  5909: 82 12 18                 t0 = u64 [sp + 0x18]
  5912: 82 16 08                 s1 = u64 [sp + 0x8]
  5915: 01                       fallthrough
      :                          @336
  5916: 82 78                    a1 = u64 [a0]
  5918: c9 87 09                 a2 = a0 - a1
  5921: ab 69 11                 jump @340 if a2 != s1
      :                          @337
  5924: c9 c8 09                 a2 = a1 - a5
  5927: 01                       fallthrough
      :                          @338
  5928: 82 7a                    a3 = u64 [a0]
  5930: ab 8a f2                 jump @336 if a3 != a1
      :                          @339
  5933: 7b 79                    u64 [a0] = a2
  5935: 33 0b                    a4 = 0
  5937: 01                       fallthrough
      :                          @340
  5938: 82 18 10                 a1 = u64 [sp + 0x10]
  5941: 33 07                    a0 = 0
  5943: 7b 28 08                 u64 [t0 + 0x8] = a1
  5946: 01                       fallthrough
      :                          @341
  5947: 7b 25 10                 u64 [t0 + 0x10] = s0
  5950: 7b 27                    u64 [t0] = a0
  5952: 82 10 30                 ra = u64 [sp + 0x30]
  5955: 82 15 28                 s0 = u64 [sp + 0x28]
  5958: 82 16 20                 s1 = u64 [sp + 0x20]
  5961: 95 11 38                 sp = sp + 0x38
  5964: 32 00                    ret
      :                          @342
  5966: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  5969: 7b 10 40                 u64 [sp + 0x40] = ra
  5972: 7b 15 38                 u64 [sp + 0x38] = s0
  5975: 7b 16 30                 u64 [sp + 0x30] = s1
  5978: 95 88 01                 a1 = a1 + 0x1
  5981: 51 08 54                 jump @350 if a1 == 0
      :                          @343
  5984: 64 75                    s0 = a0
  5986: 82 77                    a0 = u64 [a0]
  5988: 97 79 01                 a2 = a0 << 0x1
  5991: 33 0a 08                 a3 = 0x8
  5994: e4 a8 08                 a1 = maxu(a1, a3)
  5997: e4 89 06                 s1 = maxu(a2, a1)
  6000: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  6003: 98 88 3f                 a1 = a1 >> 0x3f
  6006: 51 07 12                 jump @345 if a0 == 0
      :                          @344
  6009: 82 59 08                 a2 = u64 [s0 + 0x8]
  6012: 7b 19 18                 u64 [sp + 0x18] = a2
  6015: 49 11 20 01              u64 [sp + 32] = 0x1
  6019: 7b 17 28                 u64 [sp + 0x28] = a0
  6022: 28 06                    jump @346
      :                          @345
  6024: 49 11 20                 u64 [sp + 32] = 0
  6027: 01                       fallthrough
      :                          @346
  6028: 64 17                    a0 = sp
  6030: 95 1a 18                 a3 = sp + 0x18
  6033: 64 69                    a2 = s1
  6035: 50 20 8e 00 6c fe        ra = 142, jump @310
      :                          @347 [@dyn 71]
  6041: 82 18                    a1 = u64 [sp]
  6043: 82 17 08                 a0 = u64 [sp + 0x8]
  6046: 51 08 14                 jump @351 if a1 == 0
      :                          @348
  6049: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  6059: aa 87 0d                 jump @352 if a0 == a1
      :                          @349
  6062: 52 07 18                 jump @353 if a0 != 0
      :                          @350
  6065: 00                       trap
      :                          @351
  6066: 7b 57 08                 u64 [s0 + 0x8] = a0
  6069: 7b 56                    u64 [s0] = s1
  6071: 01                       fallthrough
      :                          @352
  6072: 82 10 40                 ra = u64 [sp + 0x40]
  6075: 82 15 38                 s0 = u64 [sp + 0x38]
  6078: 82 16 30                 s1 = u64 [sp + 0x30]
  6081: 95 11 48                 sp = sp + 0x48
  6084: 32 00                    ret
      :                          @353
  6086: 00                       trap
      :                          @354
  6087: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  6090: 7b 10 30                 u64 [sp + 0x30] = ra
  6093: 7b 15 28                 u64 [sp + 0x28] = s0
  6096: 7b 16 20                 u64 [sp + 0x20] = s1
  6099: 64 89                    a2 = a1
  6101: 82 8a 08                 a3 = u64 [a1 + 0x8]
  6104: 64 75                    s0 = a0
  6106: 51 0a 35                 jump @359 if a3 == 0
      :                          @355
  6109: 82 98                    a1 = u64 [a2]
  6111: 33 07                    a0 = 0
  6113: 95 8b 08                 a4 = a1 + 0x8
  6116: 01                       fallthrough
      :                          @356
  6117: 82 bc                    a5 = u64 [a4]
  6119: c8 c7 07                 a0 = a0 + a5
  6122: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  6125: 95 bb 10                 a4 = a4 + 0x10
  6128: 52 0a f5                 jump @356 if a3 != 0
      :                          @357
  6131: 82 9a 18                 a3 = u64 [a2 + 0x18]
  6134: 51 0a 24                 jump @361 if a3 == 0
      :                          @358
  6137: 82 88 08                 a1 = u64 [a1 + 0x8]
  6140: 8e 88                    a1 = a1 >u 0
  6142: 88 7a 10                 a3 = a0 <u 0x10
  6145: 85 aa 01                 a3 = a3 ^ 0x1
  6148: d4 a8 08                 a1 = a1 | a3
  6151: 89 7a                    a3 = a0 <s 0
  6153: e0 a8 08                 a1 = a1 & ~a3
  6156: 52 08 0a                 jump @360 if a1 != 0
      :                          @359
  6159: 33 07                    a0 = 0
  6161: 33 08 01                 a1 = 0x1
  6164: 28 4a                    jump @369
      :                          @360
  6166: 97 77 01                 a0 = a0 << 0x1
  6169: 01                       fallthrough
      :                          @361
  6170: 51 07 40                 jump @368 if a0 == 0
      :                          @362
  6173: 57 07 79                 jump @374 if a0 <s 0
      :                          @363
  6176: 64 52                    t0 = s0
  6178: 33 0b 40 10 03           a4 = 0x31040
  6183: 33 08 00 00 10           a1 = 0x100000
  6188: c8 8b 0b                 a4 = a4 + a1
  6191: 01                       fallthrough
      :                          @364
  6192: 82 bc                    a5 = u64 [a4]
  6194: c8 7c 0a                 a3 = a5 + a0
  6197: ac ca 5f                 jump @372 if a3 <u a5
      :                          @365
  6200: 95 a5 01                 s0 = a3 + 0x1
  6203: 88 56 01                 s1 = s0 <u 0x1
  6206: d8 58 05                 s0 = a1 <u s0
  6209: d4 65 05                 s0 = s0 | s1
  6212: 52 05 50                 jump @372 if s0 != 0
      :                          @366
  6215: 82 b6                    s1 = u64 [a4]
  6217: ab c6 e7                 jump @364 if s1 != a5
      :                          @367
  6220: 7b ba                    u64 [a4] = a3
  6222: 33 08 40 10 13           a1 = 0x131040
  6227: c9 a8 08                 a1 = a1 - a3
  6230: 64 25                    s0 = t0
  6232: 28 06                    jump @369
      :                          @368
  6234: 33 08 01                 a1 = 0x1
  6237: 01                       fallthrough
      :                          @369
  6238: 7b 17                    u64 [sp] = a0
  6240: 7b 18 08                 u64 [sp + 0x8] = a1
  6243: 49 11 10                 u64 [sp + 16] = 0
  6246: 33 08 28 04 01           a1 = 0x10428
  6251: 64 17                    a0 = sp
  6253: 50 20 90 00 8b 06        ra = 144, jump @499
      :                          @370 [@dyn 72]
  6259: 52 07 22                 jump @373 if a0 != 0
      :                          @371
  6262: 82 17 10                 a0 = u64 [sp + 0x10]
  6265: 82 18 08                 a1 = u64 [sp + 0x8]
  6268: 82 19                    a2 = u64 [sp]
  6270: 7b 57 10                 u64 [s0 + 0x10] = a0
  6273: 7b 58 08                 u64 [s0 + 0x8] = a1
  6276: 7b 59                    u64 [s0] = a2
  6278: 82 10 30                 ra = u64 [sp + 0x30]
  6281: 82 15 28                 s0 = u64 [sp + 0x28]
  6284: 82 16 20                 s1 = u64 [sp + 0x20]
  6287: 95 11 38                 sp = sp + 0x38
  6290: 32 00                    ret
      :                          @372
  6292: 00                       trap
      :                          @373
  6293: 00                       trap
      :                          @374
  6294: 00                       trap
      :                          @375 [@dyn 73]
  6295: 82 72                    t0 = u64 [a0]
  6297: 33 09 00 00 f0           a2 = 0xfffffffffff00000
  6302: 95 2a ff ff ef           a3 = t0 + 0xffffffffffefffff
  6307: ac 9a 28                 jump @381 if a3 <u a2
      :                          @376
  6310: 82 77 08                 a0 = u64 [a0 + 0x8]
  6313: 33 09 40 10 03           a2 = 0x31040
  6318: 95 99 00 00 10           a2 = a2 + 0x100000
  6323: 01                       fallthrough
      :                          @377
  6324: 82 9a                    a3 = u64 [a2]
  6326: c9 a9 0b                 a4 = a2 - a3
  6329: ab 7b 12                 jump @381 if a4 != a0
      :                          @378
  6332: c9 2a 0b                 a4 = a3 - t0
  6335: 01                       fallthrough
      :                          @379
  6336: 82 9c                    a5 = u64 [a2]
  6338: ab ac f2                 jump @377 if a5 != a3
      :                          @380
  6341: 7b 9b                    u64 [a2] = a4
  6343: 33 08                    a1 = 0
  6345: 32 00                    ret
      :                          @381
  6347: 32 00                    ret
      :                          @382 [@dyn 74]
  6349: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  6352: 7b 10 18                 u64 [sp + 0x18] = ra
  6355: 7b 15 10                 u64 [sp + 0x10] = s0
  6358: 7b 16 08                 u64 [sp + 0x8] = s1
  6361: 64 75                    s0 = a0
  6363: 82 7a 10                 a3 = u64 [a0 + 0x10]
  6366: 82 77                    a0 = u64 [a0]
  6368: c9 a7 07                 a0 = a0 - a3
  6371: 64 96                    s1 = a2
  6373: ac 97 2b                 jump @385 if a0 <u a2
      :                          @383
  6376: 7b 1a                    u64 [sp] = a3
  6378: 82 57 08                 a0 = u64 [s0 + 0x8]
  6381: c8 a7 07                 a0 = a0 + a3
  6384: 64 69                    a2 = s1
  6386: 50 20 96 00 4f 01        ra = 150, jump @404
      :                          @384 [@dyn 75]
  6392: 82 17                    a0 = u64 [sp]
  6394: c8 76 06                 s1 = s1 + a0
  6397: 7b 56 10                 u64 [s0 + 0x10] = s1
  6400: 33 07                    a0 = 0
  6402: 82 10 18                 ra = u64 [sp + 0x18]
  6405: 82 15 10                 s0 = u64 [sp + 0x10]
  6408: 82 16 08                 s1 = u64 [sp + 0x8]
  6411: 95 11 20                 sp = sp + 0x20
  6414: 32 00                    ret
      :                          @385
  6416: 64 57                    a0 = s0
  6418: 7b 18                    u64 [sp] = a1
  6420: 64 a8                    a1 = a3
  6422: 64 69                    a2 = s1
  6424: 50 20 98 00 6f fc        ra = 152, jump @298
      :                          @386 [@dyn 76]
  6430: 82 18                    a1 = u64 [sp]
  6432: 82 5a 10                 a3 = u64 [s0 + 0x10]
  6435: 28 c5                    jump @383
      :                          @387 [@dyn 77]
  6437: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  6440: 7b 10 20                 u64 [sp + 0x20] = ra
  6443: 7b 15 18                 u64 [sp + 0x18] = s0
  6446: 7b 16 10                 u64 [sp + 0x10] = s1
  6449: 64 86                    s1 = a1
  6451: 83 88                    i32 a1 = a1 + 0
  6453: 33 09 80 00              a2 = 0x80
  6457: 64 7a                    a3 = a0
  6459: ae 98 2c                 jump @392 if a1 >=u a2
      :                          @388
  6462: 82 a8 10                 a1 = u64 [a3 + 0x10]
  6465: 82 a7                    a0 = u64 [a3]
  6467: ab 78 13                 jump @391 if a1 != a0
      :                          @389
  6470: 64 a7                    a0 = a3
  6472: 64 a5                    s0 = a3
  6474: 50 20 9c 00 04 fe        ra = 156, jump @342
      :                          @390 [@dyn 78]
  6480: 64 5a                    a3 = s0
  6482: 82 58 10                 a1 = u64 [s0 + 0x10]
  6485: 01                       fallthrough
      :                          @391
  6486: 82 a7 08                 a0 = u64 [a3 + 0x8]
  6489: c8 87 07                 a0 = a0 + a1
  6492: 78 76                    u8 [a0] = s1
  6494: 95 88 01                 a1 = a1 + 0x1
  6497: 7b a8 10                 u64 [a3 + 0x10] = a1
  6500: 28 ac 00                 jump @400
      :                          @392
  6503: 8b 67 0b                 i32 a0 = s1 >> 0xb
  6506: 48 11 0c                 u32 [sp + 12] = 0
  6509: 52 07 1c                 jump @394 if a0 != 0
      :                          @393
  6512: 98 67 06                 a0 = s1 >> 0x6
  6515: 86 77 c0 00              a0 = a0 | 0xc0
  6519: 78 17 0c                 u8 [sp + 0xc] = a0
  6522: 84 67 3f                 a0 = s1 & 0x3f
  6525: 86 77 80 00              a0 = a0 | 0x80
  6529: 78 17 0d                 u8 [sp + 0xd] = a0
  6532: 33 06 02                 s1 = 0x2
  6535: 28 63                    jump @397
      :                          @394
  6537: 8b 67 10                 i32 a0 = s1 >> 0x10
  6540: 52 07 29                 jump @396 if a0 != 0
      :                          @395
  6543: 98 67 0c                 a0 = s1 >> 0xc
  6546: 86 77 e0 00              a0 = a0 | 0xe0
  6550: 78 17 0c                 u8 [sp + 0xc] = a0
  6553: 97 67 34                 a0 = s1 << 0x34
  6556: 98 77 3a                 a0 = a0 >> 0x3a
  6559: 95 77 80 00              a0 = a0 + 0x80
  6563: 78 17 0d                 u8 [sp + 0xd] = a0
  6566: 84 67 3f                 a0 = s1 & 0x3f
  6569: 86 77 80 00              a0 = a0 | 0x80
  6573: 78 17 0e                 u8 [sp + 0xe] = a0
  6576: 33 06 03                 s1 = 0x3
  6579: 28 37                    jump @397
      :                          @396
  6581: 97 67 2b                 a0 = s1 << 0x2b
  6584: 98 77 3d                 a0 = a0 >> 0x3d
  6587: 95 77 f0 00              a0 = a0 + 0xf0
  6591: 78 17 0c                 u8 [sp + 0xc] = a0
  6594: 97 67 2e                 a0 = s1 << 0x2e
  6597: 98 77 3a                 a0 = a0 >> 0x3a
  6600: 95 77 80 00              a0 = a0 + 0x80
  6604: 78 17 0d                 u8 [sp + 0xd] = a0
  6607: 97 67 34                 a0 = s1 << 0x34
  6610: 98 77 3a                 a0 = a0 >> 0x3a
  6613: 95 77 80 00              a0 = a0 + 0x80
  6617: 78 17 0e                 u8 [sp + 0xe] = a0
  6620: 84 67 3f                 a0 = s1 & 0x3f
  6623: 86 77 80 00              a0 = a0 | 0x80
  6627: 78 17 0f                 u8 [sp + 0xf] = a0
  6630: 33 06 04                 s1 = 0x4
  6633: 01                       fallthrough
      :                          @397
  6634: 82 a5 10                 s0 = u64 [a3 + 0x10]
  6637: 82 a7                    a0 = u64 [a3]
  6639: c9 57 07                 a0 = a0 - s0
  6642: ac 67 2e                 jump @401 if a0 <u s1
      :                          @398
  6645: 7b 1a                    u64 [sp] = a3
  6647: 82 a7 08                 a0 = u64 [a3 + 0x8]
  6650: c8 57 07                 a0 = a0 + s0
  6653: 95 18 0c                 a1 = sp + 0xc
  6656: 64 69                    a2 = s1
  6658: 50 20 9e 00 3f           ra = 158, jump @404
      :                          @399 [@dyn 79]
  6663: c8 56 06                 s1 = s1 + s0
  6666: 82 17                    a0 = u64 [sp]
  6668: 7b 76 10                 u64 [a0 + 0x10] = s1
  6671: 01                       fallthrough
      :                          @400
  6672: 33 07                    a0 = 0
  6674: 82 10 20                 ra = u64 [sp + 0x20]
  6677: 82 15 18                 s0 = u64 [sp + 0x18]
  6680: 82 16 10                 s1 = u64 [sp + 0x10]
  6683: 95 11 28                 sp = sp + 0x28
  6686: 32 00                    ret
      :                          @401
  6688: 64 a7                    a0 = a3
  6690: 64 58                    a1 = s0
  6692: 64 69                    a2 = s1
  6694: 64 a5                    s0 = a3
  6696: 50 20 a0 00 5f fb        ra = 160, jump @298
      :                          @402 [@dyn 80]
  6702: 64 5a                    a3 = s0
  6704: 82 55 10                 s0 = u64 [s0 + 0x10]
  6707: 28 c2                    jump @398
      :                          @403 [@dyn 81]
  6709: 64 8a                    a3 = a1
  6711: 33 08 28 04 01           a1 = 0x10428
  6716: 64 a9                    a2 = a3
  6718: 28 ba 04                 jump @499
      :                          @404
  6721: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  6724: 7b 10 18                 u64 [sp + 0x18] = ra
  6727: 7b 15 10                 u64 [sp + 0x10] = s0
  6730: 7b 16 08                 u64 [sp + 0x8] = s1
  6733: 53 19 10 64              jump @413 if a2 <u 16
      :                          @405
  6737: 8d 7a                    i32 a3 = -a0
  6739: 84 a2 07                 t0 = a3 & 0x7
  6742: c8 27 0b                 a4 = a0 + t0
  6745: 51 02 15                 jump @408 if t0 == 0
      :                          @406
  6748: 64 8c                    a5 = a1
  6750: 64 75                    s0 = a0
  6752: 01                       fallthrough
      :                          @407
  6753: 7c ca                    a3 = u8 [a5]
  6755: 78 5a                    u8 [s0] = a3
  6757: 95 55 01                 s0 = s0 + 0x1
  6760: 95 cc 01                 a5 = a5 + 0x1
  6763: ac b5 f6                 jump @407 if s0 <u a4
      :                          @408
  6766: c8 28 03                 t1 = a1 + t0
  6769: c9 29 02                 t0 = a2 - t0
  6772: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  6775: 84 38 07                 a1 = t1 & 0x7
  6778: c8 4b 0a                 a3 = a4 + t2
  6781: 51 08 3b                 jump @415 if a1 == 0
      :                          @409
  6784: 58 04 4b                 jump @418 if t2 <=s 0
      :                          @410
  6787: 97 38 03                 a1 = t1 << 0x3
  6790: 84 80 38                 ra = a1 & 0x38
  6793: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  6796: 82 c5                    s0 = u64 [a5]
  6798: 8d 88                    i32 a1 = -a1
  6800: 84 88 38                 a1 = a1 & 0x38
  6803: 95 cc 08                 a5 = a5 + 0x8
  6806: 01                       fallthrough
      :                          @411
  6807: 82 c6                    s1 = u64 [a5]
  6809: d0 05 05                 s0 = s0 >> ra
  6812: cf 86 09                 a2 = s1 << a1
  6815: d4 59 09                 a2 = a2 | s0
  6818: 7b b9                    u64 [a4] = a2
  6820: 95 bb 08                 a4 = a4 + 0x8
  6823: 95 cc 08                 a5 = a5 + 0x8
  6826: 64 65                    s0 = s1
  6828: ac ab eb                 jump @411 if a4 <u a3
      :                          @412
  6831: 28 1c                    jump @418
      :                          @413
  6833: 64 7a                    a3 = a0
  6835: 52 09 21                 jump @419 if a2 != 0
      :                          @414
  6838: 28 2f                    jump @421
      :                          @415
  6840: 58 04 13                 jump @418 if t2 <=s 0
      :                          @416
  6843: 64 38                    a1 = t1
  6845: 01                       fallthrough
      :                          @417
  6846: 82 89                    a2 = u64 [a1]
  6848: 7b b9                    u64 [a4] = a2
  6850: 95 bb 08                 a4 = a4 + 0x8
  6853: 95 88 08                 a1 = a1 + 0x8
  6856: ac ab f6                 jump @417 if a4 <u a3
      :                          @418
  6859: c8 43 08                 a1 = t1 + t2
  6862: 84 29 07                 a2 = t0 & 0x7
  6865: 51 09 14                 jump @421 if a2 == 0
      :                          @419
  6868: c8 a9 09                 a2 = a2 + a3
  6871: 01                       fallthrough
      :                          @420
  6872: 7c 8b                    a4 = u8 [a1]
  6874: 78 ab                    u8 [a3] = a4
  6876: 95 aa 01                 a3 = a3 + 0x1
  6879: 95 88 01                 a1 = a1 + 0x1
  6882: ac 9a f6                 jump @420 if a3 <u a2
      :                          @421
  6885: 82 10 18                 ra = u64 [sp + 0x18]
  6888: 82 15 10                 s0 = u64 [sp + 0x10]
  6891: 82 16 08                 s1 = u64 [sp + 0x8]
  6894: 95 11 20                 sp = sp + 0x20
  6897: 32 00                    ret
      :                          @422
  6899: 53 19 10 48              jump @431 if a2 <u 16
      :                          @423
  6903: 8d 7a                    i32 a3 = -a0
  6905: 84 aa 07                 a3 = a3 & 0x7
  6908: c8 a7 0b                 a4 = a0 + a3
  6911: 51 0a 0e                 jump @426 if a3 == 0
      :                          @424
  6914: 64 7c                    a5 = a0
  6916: 01                       fallthrough
      :                          @425
  6917: 78 c8                    u8 [a5] = a1
  6919: 95 cc 01                 a5 = a5 + 0x1
  6922: ac bc fb                 jump @425 if a5 <u a4
      :                          @426
  6925: c9 a9 03                 t1 = a2 - a3
  6928: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  6931: c8 cb 0a                 a3 = a4 + a5
  6934: 58 0c 1d                 jump @429 if a5 <=s 0
      :                          @427
  6937: 84 82 ff 00              t0 = a1 & 0xff
  6941: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  6951: ca 92 0c                 a5 = t0 * a2
  6954: 01                       fallthrough
      :                          @428
  6955: 7b bc                    u64 [a4] = a5
  6957: 95 bb 08                 a4 = a4 + 0x8
  6960: ac ab fb                 jump @428 if a4 <u a3
      :                          @429
  6963: 84 39 07                 a2 = t1 & 0x7
  6966: 52 09 0a                 jump @432 if a2 != 0
      :                          @430
  6969: 28 13                    jump @434
      :                          @431
  6971: 64 7a                    a3 = a0
  6973: 51 09 0f                 jump @434 if a2 == 0
      :                          @432
  6976: c8 a9 09                 a2 = a2 + a3
  6979: 01                       fallthrough
      :                          @433
  6980: 78 a8                    u8 [a3] = a1
  6982: 95 aa 01                 a3 = a3 + 0x1
  6985: ac 9a fb                 jump @433 if a3 <u a2
      :                          @434
  6988: 32 00                    ret
      :                          @435 [@dyn 82]
  6990: 82 77                    a0 = u64 [a0]
  6992: 01                       fallthrough
      :                          @436
  6993: 28                       jump @436
      :                          @437
  6994: 95 11 a8                 sp = sp + 0xffffffffffffffa8
  6997: 7b 10 50                 u64 [sp + 0x50] = ra
  7000: 7b 15 48                 u64 [sp + 0x48] = s0
  7003: 7b 16 40                 u64 [sp + 0x40] = s1
  7006: 82 79                    a2 = u64 [a0]
  7008: 7b 18                    u64 [sp] = a1
  7010: 98 9a 04                 a3 = a2 >> 0x4
  7013: 33 08 27                 a1 = 0x27
  7016: 53 2a 71 02 84 00        jump @440 if a3 <u 625
      :                          @438
  7022: 33 08 27                 a1 = 0x27
  7025: 95 1a 3e                 a3 = sp + 0x3e
  7028: 3a 07 00 00 03           a0 = u64 [0x30000]
  7033: 7b 17 10                 u64 [sp + 0x10] = a0
  7036: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
  7042: 33 00 7b 14              ra = 0x147b
  7046: 33 0c a4 04 01           a5 = 0x104a4
  7051: 33 04 ff e0 f5 05        t2 = 0x5f5e0ff
  7057: 33 05 9c                 s0 = 0xffffffffffffff9c
  7060: 01                       fallthrough
      :                          @439
  7061: 64 93                    t1 = a2
  7063: 82 17 10                 a0 = u64 [sp + 0x10]
  7066: d6 79 09                 a2 = a2 mulhu a0
  7069: 98 99 0b                 a2 = a2 >> 0xb
  7072: 82 17 08                 a0 = u64 [sp + 0x8]
  7075: c0 79 0b                 i32 a4 = a2 * a0
  7078: c8 3b 06                 s1 = a4 + t1
  7081: 97 6b 30                 a4 = s1 << 0x30
  7084: 98 bb 32                 a4 = a4 >> 0x32
  7087: ca 0b 0b                 a4 = a4 * ra
  7090: 98 b7 11                 a0 = a4 >> 0x11
  7093: 98 bb 10                 a4 = a4 >> 0x10
  7096: 84 bb fe 07              a4 = a4 & 0x7fe
  7100: ca 57 07                 a0 = a0 * s0
  7103: c8 67 07                 a0 = a0 + s1
  7106: 97 77 31                 a0 = a0 << 0x31
  7109: 98 77 30                 a0 = a0 >> 0x30
  7112: c8 cb 0b                 a4 = a4 + a5
  7115: 7c b6                    s1 = u8 [a4]
  7117: 7c bb 01                 a4 = u8 [a4 + 0x1]
  7120: c8 c7 07                 a0 = a0 + a5
  7123: 7c 72 01                 t0 = u8 [a0 + 0x1]
  7126: 7c 77                    a0 = u8 [a0]
  7128: 78 ab ff                 u8 [a3 + 0xffffffffffffffff] = a4
  7131: 78 a6 fe                 u8 [a3 + 0xfffffffffffffffe] = s1
  7134: 78 a2 01                 u8 [a3 + 0x1] = t0
  7137: 78 a7                    u8 [a3] = a0
  7139: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
  7142: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
  7145: ac 34 ac                 jump @439 if t2 <u t1
      :                          @440
  7148: 54 19 63 3b              jump @442 if a2 <=u 99
      :                          @441
  7152: 97 97 30                 a0 = a2 << 0x30
  7155: 98 77 32                 a0 = a0 >> 0x32
  7158: 96 77 7b 14              a0 = a0 * 0x147b
  7162: 98 77 11                 a0 = a0 >> 0x11
  7165: 96 7a 9c                 a3 = a0 * 0xffffffffffffff9c
  7168: c8 a9 09                 a2 = a2 + a3
  7171: 97 99 31                 a2 = a2 << 0x31
  7174: 98 99 30                 a2 = a2 >> 0x30
  7177: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  7180: 33 0a a4 04 01           a3 = 0x104a4
  7185: c8 a9 09                 a2 = a2 + a3
  7188: 7c 9a 01                 a3 = u8 [a2 + 0x1]
  7191: 7c 99                    a2 = u8 [a2]
  7193: 95 1b 19                 a4 = sp + 0x19
  7196: c8 8b 0b                 a4 = a4 + a1
  7199: 78 ba 01                 u8 [a4 + 0x1] = a3
  7202: 78 b9                    u8 [a4] = a2
  7204: 64 79                    a2 = a0
  7206: 01                       fallthrough
      :                          @442
  7207: 55 19 0a 14              jump @444 if a2 >=u 10
      :                          @443
  7211: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  7214: 95 17 19                 a0 = sp + 0x19
  7217: c8 87 07                 a0 = a0 + a1
  7220: 83 99 30                 i32 a2 = a2 + 0x30
  7223: 78 79                    u8 [a0] = a2
  7225: 28 21                    jump @445
      :                          @444
  7227: 97 99 01                 a2 = a2 << 0x1
  7230: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  7233: 33 07 a4 04 01           a0 = 0x104a4
  7238: c8 97 07                 a0 = a0 + a2
  7241: 7c 79 01                 a2 = u8 [a0 + 0x1]
  7244: 7c 77                    a0 = u8 [a0]
  7246: 95 1a 19                 a3 = sp + 0x19
  7249: c8 8a 0a                 a3 = a3 + a1
  7252: 78 a9 01                 u8 [a3 + 0x1] = a2
  7255: 78 a7                    u8 [a3] = a0
  7257: 01                       fallthrough
      :                          @445
  7258: 95 1a 19                 a3 = sp + 0x19
  7261: c8 8a 0a                 a3 = a3 + a1
  7264: 9a 8b 27                 a4 = 0x27 - a1
  7267: 33 08 58 04 01           a1 = 0x10458
  7272: 82 17                    a0 = u64 [sp]
  7274: 33 09                    a2 = 0
  7276: 50 20 a6 00 13           ra = 166, jump @447
      :                          @446 [@dyn 83]
  7281: 82 10 50                 ra = u64 [sp + 0x50]
  7284: 82 15 48                 s0 = u64 [sp + 0x48]
  7287: 82 16 40                 s1 = u64 [sp + 0x40]
  7290: 95 11 58                 sp = sp + 0x58
  7293: 32 00                    ret
      :                          @447
  7295: 95 11 98                 sp = sp + 0xffffffffffffff98
  7298: 7b 10 60                 u64 [sp + 0x60] = ra
  7301: 7b 15 58                 u64 [sp + 0x58] = s0
  7304: 7b 16 50                 u64 [sp + 0x50] = s1
  7307: 80 73 34                 t1 = u32 [a0 + 0x34]
  7310: 7b 1a 20                 u64 [sp + 0x20] = a3
  7313: 64 9c                    a5 = a2
  7315: 84 36 01                 s1 = t1 & 0x1
  7318: 33 02 2b                 t0 = 0x2b
  7321: 33 09 00 00 11           a2 = 0x110000
  7326: 84 3a 04                 a3 = t1 & 0x4
  7329: 7b 1b 28                 u64 [sp + 0x28] = a4
  7332: c8 b6 04                 t2 = s1 + a4
  7335: 7b 1c 30                 u64 [sp + 0x30] = a5
  7338: 52 0a 10                 jump @450 if a3 != 0
      :                          @448
  7341: 49 11 38                 u64 [sp + 56] = 0
  7344: 82 78                    a1 = u64 [a0]
  7346: 94 69 2b                 a2 = 0x2b if s1 != 0
  7349: 52 08 35                 jump @454 if a1 != 0
      :                          @449
  7352: 28 56                    jump @459
      :                          @450
  7354: 7b 18 38                 u64 [sp + 0x38] = a1
  7357: 33 09                    a2 = 0
  7359: 51 0c 1b                 jump @453 if a5 == 0
      :                          @451
  7362: 82 1b 38                 a4 = u64 [sp + 0x38]
  7365: 01                       fallthrough
      :                          @452
  7366: 7d b5                    s0 = i8 [a4]
  7368: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
  7371: 85 5a 01                 a3 = s0 ^ 0x1
  7374: c8 a9 09                 a2 = a2 + a3
  7377: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  7380: 95 bb 01                 a4 = a4 + 0x1
  7383: 52 0c ef                 jump @452 if a5 != 0
      :                          @453
  7386: c8 94 04                 t2 = t2 + a2
  7389: 33 09 00 00 11           a2 = 0x110000
  7394: 82 78                    a1 = u64 [a0]
  7396: db 62 09                 a2 = t0 if s1 != 0
  7399: 51 08 27                 jump @459 if a1 == 0
      :                          @454
  7402: 82 7a 08                 a3 = u64 [a0 + 0x8]
  7405: ae a4 21                 jump @459 if t2 >=u a3
      :                          @455
  7408: 84 38 08                 a1 = t1 & 0x8
  7411: 52 08 51                 jump @462 if a1 != 0
      :                          @456
  7414: 7c 76 38                 s1 = u8 [a0 + 0x38]
  7417: c9 4a 0a                 a3 = a3 - t2
  7420: 7b 19 18                 u64 [sp + 0x18] = a2
  7423: 5a 16 01 a0 00           jump @469 if s1 >s 1
      :                          @457
  7428: 52 06 ad 00              jump @471 if s1 != 0
      :                          @458
  7432: 7b 1a 10                 u64 [sp + 0x10] = a3
  7435: 28 ac 00                 jump @472
      :                          @459
  7438: 82 75 20                 s0 = u64 [a0 + 0x20]
  7441: 82 76 28                 s1 = u64 [a0 + 0x28]
  7444: 64 57                    a0 = s0
  7446: 64 68                    a1 = s1
  7448: 82 1a 38                 a3 = u64 [sp + 0x38]
  7451: 82 1b 30                 a4 = u64 [sp + 0x30]
  7454: 50 20 a8 00 75 01        ra = 168, jump @492
      :                          @460 [@dyn 84]
  7460: 33 08 01                 a1 = 0x1
  7463: 52 07 be 00              jump @477 if a0 != 0
      :                          @461
  7467: 82 6c 18                 a5 = u64 [s1 + 0x18]
  7470: 64 57                    a0 = s0
  7472: 82 18 20                 a1 = u64 [sp + 0x20]
  7475: 82 19 28                 a2 = u64 [sp + 0x28]
  7478: 82 10 60                 ra = u64 [sp + 0x60]
  7481: 82 15 58                 s0 = u64 [sp + 0x58]
  7484: 82 16 50                 s1 = u64 [sp + 0x50]
  7487: 95 11 68                 sp = sp + 0x68
  7490: 32 0c                    jump [a5]
      :                          @462
  7492: 7b 1a 40                 u64 [sp + 0x40] = a3
  7495: 64 45                    s0 = t2
  7497: 81 78 30                 a1 = i32 [a0 + 0x30]
  7500: 7b 18 10                 u64 [sp + 0x10] = a1
  7503: 7c 7a 38                 a3 = u8 [a0 + 0x38]
  7506: 7b 1a 08                 u64 [sp + 0x8] = a3
  7509: 82 7a 20                 a3 = u64 [a0 + 0x20]
  7512: 82 78 28                 a1 = u64 [a0 + 0x28]
  7515: 48 17 30 30              u32 [a0 + 48] = 0x30
  7519: 7b 17                    u64 [sp] = a0
  7521: 46 17 38 01              u8 [a0 + 56] = 0x1
  7525: 7b 1a 48                 u64 [sp + 0x48] = a3
  7528: 64 a7                    a0 = a3
  7530: 64 86                    s1 = a1
  7532: 82 1a 38                 a3 = u64 [sp + 0x38]
  7535: 82 1b 30                 a4 = u64 [sp + 0x30]
  7538: 50 20 aa 00 21 01        ra = 170, jump @492
      :                          @463 [@dyn 85]
  7544: 52 07 69                 jump @476 if a0 != 0
      :                          @464
  7547: 82 17 40                 a0 = u64 [sp + 0x40]
  7550: c9 57 05                 s0 = a0 - s0
  7553: 95 55 01                 s0 = s0 + 0x1
  7556: 01                       fallthrough
      :                          @465
  7557: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  7560: 51 05 cb 00              jump @487 if s0 == 0
      :                          @466
  7564: 82 69 20                 a2 = u64 [s1 + 0x20]
  7567: 33 08 30                 a1 = 0x30
  7570: 82 17 48                 a0 = u64 [sp + 0x48]
  7573: b4 90 02 ac 00           ra = 172, jump [a2]
      :                          @467 [@dyn 86]
  7578: 51 07 eb                 jump @465 if a0 == 0
      :                          @468
  7581: 28 44                    jump @476
      :                          @469
  7583: 52 16 02 12              jump @471 if s1 != 2
      :                          @470
  7587: 98 a6 01                 s1 = a3 >> 0x1
  7590: 95 a8 01                 a1 = a3 + 0x1
  7593: 98 88 01                 a1 = a1 >> 0x1
  7596: 7b 18 10                 u64 [sp + 0x10] = a1
  7599: 28 08                    jump @472
      :                          @471
  7601: 64 a6                    s1 = a3
  7603: 49 11 10                 u64 [sp + 16] = 0
  7606: 01                       fallthrough
      :                          @472
  7607: 82 78 20                 a1 = u64 [a0 + 0x20]
  7610: 7b 18 48                 u64 [sp + 0x48] = a1
  7613: 82 75 28                 s0 = u64 [a0 + 0x28]
  7616: 81 77 30                 a0 = i32 [a0 + 0x30]
  7619: 7b 17 40                 u64 [sp + 0x40] = a0
  7622: 95 66 01                 s1 = s1 + 0x1
  7625: 01                       fallthrough
      :                          @473
  7626: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  7629: 51 06 28                 jump @478 if s1 == 0
      :                          @474
  7632: 82 59 20                 a2 = u64 [s0 + 0x20]
  7635: 82 17 48                 a0 = u64 [sp + 0x48]
  7638: 82 18 40                 a1 = u64 [sp + 0x40]
  7641: b4 90 02 ae 00           ra = 174, jump [a2]
      :                          @475 [@dyn 87]
  7646: 51 07 ec                 jump @473 if a0 == 0
      :                          @476
  7649: 33 08 01                 a1 = 0x1
  7652: 01                       fallthrough
      :                          @477
  7653: 64 87                    a0 = a1
  7655: 82 10 60                 ra = u64 [sp + 0x60]
  7658: 82 15 58                 s0 = u64 [sp + 0x58]
  7661: 82 16 50                 s1 = u64 [sp + 0x50]
  7664: 95 11 68                 sp = sp + 0x68
  7667: 32 00                    ret
      :                          @478
  7669: 82 16 48                 s1 = u64 [sp + 0x48]
  7672: 64 67                    a0 = s1
  7674: 64 58                    a1 = s0
  7676: 82 19 18                 a2 = u64 [sp + 0x18]
  7679: 82 1a 38                 a3 = u64 [sp + 0x38]
  7682: 82 1b 30                 a4 = u64 [sp + 0x30]
  7685: 50 20 b0 00 8e 00        ra = 176, jump @492
      :                          @479 [@dyn 88]
  7691: 33 08 01                 a1 = 0x1
  7694: 52 07 d7                 jump @477 if a0 != 0
      :                          @480
  7697: 82 5a 18                 a3 = u64 [s0 + 0x18]
  7700: 64 67                    a0 = s1
  7702: 82 18 20                 a1 = u64 [sp + 0x20]
  7705: 82 19 28                 a2 = u64 [sp + 0x28]
  7708: b4 a0 02 b2 00           ra = 178, jump [a3]
      :                          @481 [@dyn 89]
  7713: 33 08 01                 a1 = 0x1
  7716: 52 07 c1                 jump @477 if a0 != 0
      :                          @482
  7719: 82 17 10                 a0 = u64 [sp + 0x10]
  7722: 9a 77                    a0 = -a0
  7724: 7b 17 38                 u64 [sp + 0x38] = a0
  7727: 33 06 ff                 s1 = 0xffffffffffffffff
  7730: 01                       fallthrough
      :                          @483
  7731: 82 17 38                 a0 = u64 [sp + 0x38]
  7734: c8 67 07                 a0 = a0 + s1
  7737: 51 17 ff 45              jump @490 if a0 == 4294967295
      :                          @484
  7741: 82 59 20                 a2 = u64 [s0 + 0x20]
  7744: 82 17 48                 a0 = u64 [sp + 0x48]
  7747: 82 18 40                 a1 = u64 [sp + 0x40]
  7750: b4 90 02 b4 00           ra = 180, jump [a2]
      :                          @485 [@dyn 90]
  7755: 95 66 01                 s1 = s1 + 0x1
  7758: 51 07 e5                 jump @483 if a0 == 0
      :                          @486
  7761: 28 39                    jump @491
      :                          @487
  7763: 82 6a 18                 a3 = u64 [s1 + 0x18]
  7766: 82 17 48                 a0 = u64 [sp + 0x48]
  7769: 82 18 20                 a1 = u64 [sp + 0x20]
  7772: 82 19 28                 a2 = u64 [sp + 0x28]
  7775: b4 a0 02 b6 00           ra = 182, jump [a3]
      :                          @488 [@dyn 91]
  7780: 33 08 01                 a1 = 0x1
  7783: 52 07 7e ff              jump @477 if a0 != 0
      :                          @489
  7787: 33 08                    a1 = 0
  7789: 82 16                    s1 = u64 [sp]
  7791: 82 17 10                 a0 = u64 [sp + 0x10]
  7794: 7a 67 30                 u32 [s1 + 0x30] = a0
  7797: 82 17 08                 a0 = u64 [sp + 0x8]
  7800: 78 67 38                 u8 [s1 + 0x38] = a0
  7803: 28 6a ff                 jump @477
      :                          @490
  7806: 82 16 10                 s1 = u64 [sp + 0x10]
  7809: 82 17 10                 a0 = u64 [sp + 0x10]
  7812: d8 76 08                 a1 = s1 <u a0
  7815: 28 5e ff                 jump @477
      :                          @491
  7818: 82 17 10                 a0 = u64 [sp + 0x10]
  7821: d8 76 08                 a1 = s1 <u a0
  7824: 28 55 ff                 jump @477
      :                          @492
  7827: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  7830: 7b 10 20                 u64 [sp + 0x20] = ra
  7833: 7b 15 18                 u64 [sp + 0x18] = s0
  7836: 7b 16 10                 u64 [sp + 0x10] = s1
  7839: 83 9c                    i32 a5 = a2 + 0
  7841: 33 02 00 00 11           t0 = 0x110000
  7846: 64 a6                    s1 = a3
  7848: 64 85                    s0 = a1
  7850: 64 7a                    a3 = a0
  7852: aa 2c 21                 jump @495 if a5 == t0
      :                          @493
  7855: 82 5c 20                 a5 = u64 [s0 + 0x20]
  7858: 64 a7                    a0 = a3
  7860: 64 98                    a1 = a2
  7862: 7b 1b 08                 u64 [sp + 0x8] = a4
  7865: 7b 1a                    u64 [sp] = a3
  7867: b4 c0 02 b8 00           ra = 184, jump [a5]
      :                          @494 [@dyn 92]
  7872: 82 1a                    a3 = u64 [sp]
  7874: 82 1b 08                 a4 = u64 [sp + 0x8]
  7877: 64 78                    a1 = a0
  7879: 33 07 01                 a0 = 0x1
  7882: 52 08 20                 jump @498 if a1 != 0
      :                          @495
  7885: 51 06 1a                 jump @497 if s1 == 0
      :                          @496
  7888: 82 5c 18                 a5 = u64 [s0 + 0x18]
  7891: 64 a7                    a0 = a3
  7893: 64 68                    a1 = s1
  7895: 64 b9                    a2 = a4
  7897: 82 10 20                 ra = u64 [sp + 0x20]
  7900: 82 15 18                 s0 = u64 [sp + 0x18]
  7903: 82 16 10                 s1 = u64 [sp + 0x10]
  7906: 95 11 28                 sp = sp + 0x28
  7909: 32 0c                    jump [a5]
      :                          @497
  7911: 33 07                    a0 = 0
  7913: 01                       fallthrough
      :                          @498
  7914: 82 10 20                 ra = u64 [sp + 0x20]
  7917: 82 15 18                 s0 = u64 [sp + 0x18]
  7920: 82 16 10                 s1 = u64 [sp + 0x10]
  7923: 95 11 28                 sp = sp + 0x28
  7926: 32 00                    ret
      :                          @499
  7928: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  7932: 7b 10 80 00              u64 [sp + 0x80] = ra
  7936: 7b 15 78                 u64 [sp + 0x78] = s0
  7939: 7b 16 70                 u64 [sp + 0x70] = s1
  7942: 49 11 60 20              u64 [sp + 96] = 0x20
  7946: 33 0a 03                 a3 = 0x3
  7949: 78 1a 68                 u8 [sp + 0x68] = a3
  7952: 82 96 20                 s1 = u64 [a2 + 0x20]
  7955: 49 11 30                 u64 [sp + 48] = 0
  7958: 49 11 40                 u64 [sp + 64] = 0
  7961: 7b 17 50                 u64 [sp + 0x50] = a0
  7964: 7b 18 58                 u64 [sp + 0x58] = a1
  7967: 51 06 0a 01              jump @521 if s1 == 0
      :                          @500
  7971: 82 97 28                 a0 = u64 [a2 + 0x28]
  7974: 51 07 79 01              jump @531 if a0 == 0
      :                          @501
  7978: 49 11 28                 u64 [sp + 40] = 0
  7981: 82 95                    s0 = u64 [a2]
  7983: 7b 19 08                 u64 [sp + 0x8] = a2
  7986: 82 98 10                 a1 = u64 [a2 + 0x10]
  7989: 7b 18 18                 u64 [sp + 0x18] = a1
  7992: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  7995: 97 88 03                 a1 = a1 << 0x3
  7998: 98 88 03                 a1 = a1 >> 0x3
  8001: 95 88 01                 a1 = a1 + 0x1
  8004: 7b 18                    u64 [sp] = a1
  8006: 95 55 08                 s0 = s0 + 0x8
  8009: 96 78 38                 a1 = a0 * 0x38
  8012: 95 66 18                 s1 = s1 + 0x18
  8015: 33 07 a4 00              a0 = 0xa4
  8019: 7b 17 10                 u64 [sp + 0x10] = a0
  8022: 01                       fallthrough
      :                          @502
  8023: 7b 18 20                 u64 [sp + 0x20] = a1
  8026: 82 59                    a2 = u64 [s0]
  8028: 51 09 18                 jump @505 if a2 == 0
      :                          @503
  8031: 82 1a 58                 a3 = u64 [sp + 0x58]
  8034: 82 17 50                 a0 = u64 [sp + 0x50]
  8037: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  8040: 82 aa 18                 a3 = u64 [a3 + 0x18]
  8043: b4 a0 02 ba 00           ra = 186, jump [a3]
      :                          @504 [@dyn 93]
  8048: 52 07 55 01              jump @534 if a0 != 0
      :                          @505
  8052: 81 67 10                 a0 = i32 [s1 + 0x10]
  8055: 7a 17 60                 u32 [sp + 0x60] = a0
  8058: 7c 67 18                 a0 = u8 [s1 + 0x18]
  8061: 78 17 68                 u8 [sp + 0x68] = a0
  8064: 81 67 14                 a0 = i32 [s1 + 0x14]
  8067: 7a 17 64                 u32 [sp + 0x64] = a0
  8070: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  8073: 82 67                    a0 = u64 [s1]
  8075: 51 08 26                 jump @510 if a1 == 0
      :                          @506
  8078: 52 18 01 16              jump @508 if a1 != 1
      :                          @507
  8082: 97 77 04                 a0 = a0 << 0x4
  8085: 82 18 18                 a1 = u64 [sp + 0x18]
  8088: c8 87 07                 a0 = a0 + a1
  8091: 82 78 08                 a1 = u64 [a0 + 0x8]
  8094: 82 19 10                 a2 = u64 [sp + 0x10]
  8097: aa 98 07                 jump @509 if a1 == a2
      :                          @508
  8100: 33 08                    a1 = 0
  8102: 28 0f                    jump @511
      :                          @509
  8104: 82 77                    a0 = u64 [a0]
  8106: 82 77                    a0 = u64 [a0]
  8108: 33 08 01                 a1 = 0x1
  8111: 28 06                    jump @511
      :                          @510
  8113: 33 08 01                 a1 = 0x1
  8116: 01                       fallthrough
      :                          @511
  8117: 7b 18 30                 u64 [sp + 0x30] = a1
  8120: 7b 17 38                 u64 [sp + 0x38] = a0
  8123: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  8126: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  8129: 51 08 26                 jump @516 if a1 == 0
      :                          @512
  8132: 52 18 01 16              jump @514 if a1 != 1
      :                          @513
  8136: 97 77 04                 a0 = a0 << 0x4
  8139: 82 18 18                 a1 = u64 [sp + 0x18]
  8142: c8 87 07                 a0 = a0 + a1
  8145: 82 78 08                 a1 = u64 [a0 + 0x8]
  8148: 82 19 10                 a2 = u64 [sp + 0x10]
  8151: aa 98 07                 jump @515 if a1 == a2
      :                          @514
  8154: 33 08                    a1 = 0
  8156: 28 0f                    jump @517
      :                          @515
  8158: 82 77                    a0 = u64 [a0]
  8160: 82 77                    a0 = u64 [a0]
  8162: 33 08 01                 a1 = 0x1
  8165: 28 06                    jump @517
      :                          @516
  8167: 33 08 01                 a1 = 0x1
  8170: 01                       fallthrough
      :                          @517
  8171: 7b 18 40                 u64 [sp + 0x40] = a1
  8174: 7b 17 48                 u64 [sp + 0x48] = a0
  8177: 82 67 08                 a0 = u64 [s1 + 0x8]
  8180: 97 77 04                 a0 = a0 << 0x4
  8183: 82 18 18                 a1 = u64 [sp + 0x18]
  8186: c8 78 08                 a1 = a1 + a0
  8189: 82 87                    a0 = u64 [a1]
  8191: 82 89 08                 a2 = u64 [a1 + 0x8]
  8194: 95 18 30                 a1 = sp + 0x30
  8197: b4 90 02 bc 00           ra = 188, jump [a2]
      :                          @518 [@dyn 94]
  8202: 52 07 bb 00              jump @534 if a0 != 0
      :                          @519
  8206: 95 55 10                 s0 = s0 + 0x10
  8209: 82 18 20                 a1 = u64 [sp + 0x20]
  8212: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  8215: 95 66 38                 s1 = s1 + 0x38
  8218: 82 17 28                 a0 = u64 [sp + 0x28]
  8221: 95 77 01                 a0 = a0 + 0x1
  8224: 7b 17 28                 u64 [sp + 0x28] = a0
  8227: 52 08 34 ff              jump @502 if a1 != 0
      :                          @520
  8231: 28 6b                    jump @529
      :                          @521
  8233: 82 97 18                 a0 = u64 [a2 + 0x18]
  8236: 51 07 73                 jump @531 if a0 == 0
      :                          @522
  8239: 82 95 10                 s0 = u64 [a2 + 0x10]
  8242: 33 0a                    a3 = 0
  8244: 97 78 04                 a1 = a0 << 0x4
  8247: c8 58 08                 a1 = a1 + s0
  8250: 7b 18 20                 u64 [sp + 0x20] = a1
  8253: 7b 19 08                 u64 [sp + 0x8] = a2
  8256: 82 96                    s1 = u64 [a2]
  8258: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  8261: 97 77 04                 a0 = a0 << 0x4
  8264: 98 77 04                 a0 = a0 >> 0x4
  8267: 95 77 01                 a0 = a0 + 0x1
  8270: 7b 17                    u64 [sp] = a0
  8272: 95 66 08                 s1 = s1 + 0x8
  8275: 01                       fallthrough
      :                          @523
  8276: 7b 1a 28                 u64 [sp + 0x28] = a3
  8279: 82 69                    a2 = u64 [s1]
  8281: 51 09 17                 jump @526 if a2 == 0
      :                          @524
  8284: 82 1a 58                 a3 = u64 [sp + 0x58]
  8287: 82 17 50                 a0 = u64 [sp + 0x50]
  8290: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  8293: 82 aa 18                 a3 = u64 [a3 + 0x18]
  8296: b4 a0 02 be 00           ra = 190, jump [a3]
      :                          @525 [@dyn 95]
  8301: 52 07 58                 jump @534 if a0 != 0
      :                          @526
  8304: 82 57                    a0 = u64 [s0]
  8306: 82 59 08                 a2 = u64 [s0 + 0x8]
  8309: 95 18 30                 a1 = sp + 0x30
  8312: b4 90 02 c0 00           ra = 192, jump [a2]
      :                          @527 [@dyn 96]
  8317: 52 07 48                 jump @534 if a0 != 0
      :                          @528
  8320: 95 66 10                 s1 = s1 + 0x10
  8323: 95 55 10                 s0 = s0 + 0x10
  8326: 82 1a 28                 a3 = u64 [sp + 0x28]
  8329: 95 aa 01                 a3 = a3 + 0x1
  8332: 82 17 20                 a0 = u64 [sp + 0x20]
  8335: ab 75 c5                 jump @523 if s0 != a0
      :                          @529
  8338: 82 19 08                 a2 = u64 [sp + 0x8]
  8341: 82 1a                    a3 = u64 [sp]
  8343: 82 97 08                 a0 = u64 [a2 + 0x8]
  8346: ac 7a 0d                 jump @532 if a3 <u a0
      :                          @530
  8349: 28 2d                    jump @535
      :                          @531
  8351: 33 0a                    a3 = 0
  8353: 82 97 08                 a0 = u64 [a2 + 0x8]
  8356: 54 07 26                 jump @535 if a0 <=u 0
      :                          @532
  8359: 82 97                    a0 = u64 [a2]
  8361: 97 a8 04                 a1 = a3 << 0x4
  8364: c8 87 09                 a2 = a0 + a1
  8367: 82 1a 58                 a3 = u64 [sp + 0x58]
  8370: 82 17 50                 a0 = u64 [sp + 0x50]
  8373: 82 98                    a1 = u64 [a2]
  8375: 82 99 08                 a2 = u64 [a2 + 0x8]
  8378: 82 aa 18                 a3 = u64 [a3 + 0x18]
  8381: b4 a0 02 c2 00           ra = 194, jump [a3]
      :                          @533 [@dyn 97]
  8386: 51 07 08                 jump @535 if a0 == 0
      :                          @534
  8389: 33 07 01                 a0 = 0x1
  8392: 28 05                    jump @536
      :                          @535
  8394: 33 07                    a0 = 0
  8396: 01                       fallthrough
      :                          @536
  8397: 82 10 80 00              ra = u64 [sp + 0x80]
  8401: 82 15 78                 s0 = u64 [sp + 0x78]
  8404: 82 16 70                 s1 = u64 [sp + 0x70]
  8407: 95 11 88 00              sp = sp + 0x88
  8411: 32 00                    ret
      :                          @537 [@dyn 98]
  8413: 32 00                    ret
      :                          @538 [@dyn 99]
  8415: 95 11 80                 sp = sp + 0xffffffffffffff80
  8418: 7b 10 78                 u64 [sp + 0x78] = ra
  8421: 7b 15 70                 u64 [sp + 0x70] = s0
  8424: 7b 16 68                 u64 [sp + 0x68] = s1
  8427: 64 92                    t0 = a2
  8429: 33 00                    ra = 0
  8431: 33 0b                    a4 = 0
  8433: 33 05                    s0 = 0
  8435: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
  8445: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
  8451: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
  8461: 82 79 10                 a2 = u64 [a0 + 0x10]
  8464: 7b 19 48                 u64 [sp + 0x48] = a2
  8467: 82 79                    a2 = u64 [a0]
  8469: 7b 19 38                 u64 [sp + 0x38] = a2
  8472: 82 77 08                 a0 = u64 [a0 + 0x8]
  8475: 7b 17 30                 u64 [sp + 0x30] = a0
  8478: 33 07 94 04 01           a0 = 0x10494
  8483: 7b 17 08                 u64 [sp + 0x8] = a0
  8486: 3a 07 08 00 03           a0 = u64 [0x30008]
  8491: 7b 17 60                 u64 [sp + 0x60] = a0
  8494: 7b 18 58                 u64 [sp + 0x58] = a1
  8497: 95 88 08                 a1 = a1 + 0x8
  8500: 7b 18                    u64 [sp] = a1
  8502: 33 0c 0a                 a5 = 0xa
  8505: 7b 12 20                 u64 [sp + 0x20] = t0
  8508: 7b 13 18                 u64 [sp + 0x18] = t1
  8511: 7b 14 10                 u64 [sp + 0x10] = t2
  8514: 28 3b                    jump @542
      :                          @539
  8516: 64 06                    s1 = ra
  8518: c8 89 07                 a0 = a2 + a1
  8521: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
  8524: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  8527: 88 77 01                 a0 = a0 <u 0x1
  8530: 01                       fallthrough
      :                          @540
  8531: 82 1a 48                 a3 = u64 [sp + 0x48]
  8534: 78 a7                    u8 [a3] = a0
  8536: 82 17 30                 a0 = u64 [sp + 0x30]
  8539: 82 7a 18                 a3 = u64 [a0 + 0x18]
  8542: 82 17 38                 a0 = u64 [sp + 0x38]
  8545: b4 a0 02 c8 00           ra = 200, jump [a3]
      :                          @541 [@dyn 100]
  8550: 64 5b                    a4 = s0
  8552: 82 12 20                 t0 = u64 [sp + 0x20]
  8555: 82 13 18                 t1 = u64 [sp + 0x18]
  8558: 82 14 10                 t2 = u64 [sp + 0x10]
  8561: 64 60                    ra = s1
  8563: 33 0c 0a                 a5 = 0xa
  8566: 82 15 40                 s0 = u64 [sp + 0x40]
  8569: 52 07 64 01              jump @583 if a0 != 0
      :                          @542
  8573: 84 57 ff 00              a0 = s0 & 0xff
  8577: 52 07 58 01              jump @582 if a0 != 0
      :                          @543
  8581: 7b 1b 50                 u64 [sp + 0x50] = a4
  8584: ae 02 0a                 jump @546 if t0 >=u ra
      :                          @544
  8587: 28 ef 00                 jump @573
      :                          @545
  8590: ac 02 ec 00              jump @573 if t0 <u ra
      :                          @546
  8594: c9 02 08                 a1 = t0 - ra
  8597: 82 16 58                 s1 = u64 [sp + 0x58]
  8600: c8 06 06                 s1 = s1 + ra
  8603: 55 18 10 1d              jump @552 if a1 >=u 16
      :                          @547
  8607: aa 02 d8 00              jump @572 if t0 == ra
      :                          @548
  8611: 33 0a                    a3 = 0
  8613: 01                       fallthrough
      :                          @549
  8614: c8 a6 07                 a0 = s1 + a3
  8617: 7c 77                    a0 = u8 [a0]
  8619: aa c7 a5 00              jump @567 if a0 == a5
      :                          @550
  8623: 95 aa 01                 a3 = a3 + 0x1
  8626: ab a8 f4                 jump @549 if a1 != a3
      :                          @551
  8629: 28 c2 00                 jump @572
      :                          @552
  8632: 95 69 07                 a2 = s1 + 0x7
  8635: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
  8638: c9 6a 07                 a0 = a3 - s1
  8641: d3 6a 0a                 a3 = a3 ^ s1
  8644: 88 aa 01                 a3 = a3 <u 0x1
  8647: 88 7b 01                 a4 = a0 <u 0x1
  8650: d4 ba 0a                 a3 = a3 | a4
  8653: 51 0a 45                 jump @558 if a3 == 0
      :                          @553
  8656: 33 07                    a0 = 0
  8658: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  8661: 82 1b                    a4 = u64 [sp]
  8663: c8 0b 0b                 a4 = a4 + ra
  8666: 28 08                    jump @555
      :                          @554
  8668: 82 1b                    a4 = u64 [sp]
  8670: c8 0b 0b                 a4 = a4 + ra
  8673: 01                       fallthrough
      :                          @555
  8674: c8 76 0c                 a5 = s1 + a0
  8677: 82 cc                    a5 = u64 [a5]
  8679: c8 7b 09                 a2 = a4 + a0
  8682: 82 99                    a2 = u64 [a2]
  8684: d3 4c 05                 s0 = a5 ^ t2
  8687: c8 35 05                 s0 = s0 + t1
  8690: e0 c5 0c                 a5 = s0 & ~a5
  8693: d3 49 05                 s0 = a2 ^ t2
  8696: c8 35 05                 s0 = s0 + t1
  8699: e0 95 09                 a2 = s0 & ~a2
  8702: d4 c9 09                 a2 = a2 | a5
  8705: 82 1c 60                 a5 = u64 [sp + 0x60]
  8708: d2 c9 09                 a2 = a2 & a5
  8711: 52 09 1f                 jump @561 if a2 != 0
      :                          @556
  8714: 95 77 10                 a0 = a0 + 0x10
  8717: ae 7a d5                 jump @555 if a3 >=u a0
      :                          @557
  8720: 28 16                    jump @561
      :                          @558
  8722: c8 a6 0b                 a4 = s1 + a3
  8725: 7c bb                    a4 = u8 [a4]
  8727: aa cb 51                 jump @570 if a4 == a5
      :                          @559
  8730: 95 aa 01                 a3 = a3 + 0x1
  8733: ab a7 f5                 jump @558 if a0 != a3
      :                          @560
  8736: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  8739: ae 7a b9                 jump @554 if a3 >=u a0
      :                          @561
  8742: aa 87 9b 00              jump @579 if a0 == a1
      :                          @562
  8746: 33 0a                    a3 = 0
  8748: c8 76 06                 s1 = s1 + a0
  8751: c9 72 08                 a1 = t0 - a0
  8754: c9 08 08                 a1 = a1 - ra
  8757: 33 0c 0a                 a5 = 0xa
  8760: 82 1b 50                 a4 = u64 [sp + 0x50]
  8763: 01                       fallthrough
      :                          @563
  8764: c8 a6 09                 a2 = s1 + a3
  8767: 7c 99                    a2 = u8 [a2]
  8769: aa c9 0b                 jump @566 if a2 == a5
      :                          @564
  8772: 95 aa 01                 a3 = a3 + 0x1
  8775: ab a8 f5                 jump @563 if a1 != a3
      :                          @565
  8778: 28 2d                    jump @572
      :                          @566
  8780: c8 7a 0a                 a3 = a3 + a0
  8783: 01                       fallthrough
      :                          @567
  8784: c8 0a 0a                 a3 = a3 + ra
  8787: 95 a0 01                 ra = a3 + 0x1
  8790: ae 2a 38 ff              jump @545 if a3 >=u t0
      :                          @568
  8794: 82 17 58                 a0 = u64 [sp + 0x58]
  8797: c8 7a 0a                 a3 = a3 + a0
  8800: 7c a7                    a0 = u8 [a3]
  8802: ab c7 2c ff              jump @545 if a0 != a5
      :                          @569
  8806: 28 62                    jump @580
      :                          @570
  8808: 82 1b 50                 a4 = u64 [sp + 0x50]
  8811: c8 0a 0a                 a3 = a3 + ra
  8814: 95 a0 01                 ra = a3 + 0x1
  8817: ac 2a e9                 jump @568 if a3 <u t0
      :                          @571
  8820: 28 1a ff                 jump @545
      :                          @572
  8823: 64 20                    ra = t0
  8825: 01                       fallthrough
      :                          @573
  8826: 49 11 40 01              u64 [sp + 64] = 0x1
  8830: 64 b5                    s0 = a4
  8832: 64 26                    s1 = t0
  8834: aa 2b 57                 jump @582 if a4 == t0
      :                          @574
  8837: 82 17 48                 a0 = u64 [sp + 0x48]
  8840: 7c 77                    a0 = u8 [a0]
  8842: 51 07 23                 jump @577 if a0 == 0
      :                          @575
  8845: 82 17 30                 a0 = u64 [sp + 0x30]
  8848: 82 7a 18                 a3 = u64 [a0 + 0x18]
  8851: 33 09 04                 a2 = 0x4
  8854: 82 17 38                 a0 = u64 [sp + 0x38]
  8857: 82 18 08                 a1 = u64 [sp + 0x8]
  8860: 7b 10 28                 u64 [sp + 0x28] = ra
  8863: b4 a0 02 ca 00           ra = 202, jump [a3]
      :                          @576 [@dyn 101]
  8868: 82 1b 50                 a4 = u64 [sp + 0x50]
  8871: 82 10 28                 ra = u64 [sp + 0x28]
  8874: 52 07 33                 jump @583 if a0 != 0
      :                          @577
  8877: c9 b6 09                 a2 = s1 - a4
  8880: 82 18 58                 a1 = u64 [sp + 0x58]
  8883: c8 b8 08                 a1 = a1 + a4
  8886: ab b6 8e fe              jump @539 if s1 != a4
      :                          @578
  8890: 64 06                    s1 = ra
  8892: 33 07                    a0 = 0
  8894: 28 95 fe                 jump @540
      :                          @579
  8897: 64 20                    ra = t0
  8899: 82 1b 50                 a4 = u64 [sp + 0x50]
  8902: 28 b4                    jump @573
      :                          @580
  8904: 49 11 40                 u64 [sp + 64] = 0
  8907: 64 05                    s0 = ra
  8909: 64 06                    s1 = ra
  8911: 82 17 48                 a0 = u64 [sp + 0x48]
  8914: 7c 77                    a0 = u8 [a0]
  8916: 52 07 b9                 jump @575 if a0 != 0
      :                          @581
  8919: 28 d6                    jump @577
      :                          @582
  8921: 33 07                    a0 = 0
  8923: 28 06                    jump @584
      :                          @583
  8925: 33 07 01                 a0 = 0x1
  8928: 01                       fallthrough
      :                          @584
  8929: 82 10 78                 ra = u64 [sp + 0x78]
  8932: 82 15 70                 s0 = u64 [sp + 0x70]
  8935: 82 16 68                 s1 = u64 [sp + 0x68]
  8938: 95 11 80 00              sp = sp + 0x80
  8942: 32 00                    ret
      :                          @585 [@dyn 102]
  8944: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  8947: 7b 10 20                 u64 [sp + 0x20] = ra
  8950: 7b 15 18                 u64 [sp + 0x18] = s0
  8953: 7b 16 10                 u64 [sp + 0x10] = s1
  8956: 82 75 10                 s0 = u64 [a0 + 0x10]
  8959: 7c 59                    a2 = u8 [s0]
  8961: 82 7b                    a4 = u64 [a0]
  8963: 82 76 08                 s1 = u64 [a0 + 0x8]
  8966: 51 09 33                 jump @589 if a2 == 0
      :                          @586
  8969: 82 6a 18                 a3 = u64 [s1 + 0x18]
  8972: 7b 18 08                 u64 [sp + 0x8] = a1
  8975: 33 08 94 04 01           a1 = 0x10494
  8980: 33 09 04                 a2 = 0x4
  8983: 64 b7                    a0 = a4
  8985: 7b 1b                    u64 [sp] = a4
  8987: b4 a0 02 ce 00           ra = 206, jump [a3]
      :                          @587 [@dyn 103]
  8992: 82 18 08                 a1 = u64 [sp + 0x8]
  8995: 82 1b                    a4 = u64 [sp]
  8997: 51 07 14                 jump @589 if a0 == 0
      :                          @588
  9000: 33 07 01                 a0 = 0x1
  9003: 82 10 20                 ra = u64 [sp + 0x20]
  9006: 82 15 18                 s0 = u64 [sp + 0x18]
  9009: 82 16 10                 s1 = u64 [sp + 0x10]
  9012: 95 11 28                 sp = sp + 0x28
  9015: 32 00                    ret
      :                          @589
  9017: 83 87                    i32 a0 = a1 + 0
  9019: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  9022: 88 77 01                 a0 = a0 <u 0x1
  9025: 78 57                    u8 [s0] = a0
  9027: 82 6c 20                 a5 = u64 [s1 + 0x20]
  9030: 64 b7                    a0 = a4
  9032: 82 10 20                 ra = u64 [sp + 0x20]
  9035: 82 15 18                 s0 = u64 [sp + 0x18]
  9038: 82 16 10                 s1 = u64 [sp + 0x10]
  9041: 95 11 28                 sp = sp + 0x28
  9044: 32 0c                    jump [a5]
      :                          @590 [@dyn 104]
  9046: 64 8a                    a3 = a1
  9048: 33 08 60 04 01           a1 = 0x10460
  9053: 64 a9                    a2 = a3
  9055: 28 99 fb                 jump @499
      :                          @591
  9058: 95 11 70 ff              sp = sp + 0xffffffffffffff70
  9062: 7b 10 88 00              u64 [sp + 0x88] = ra
  9066: 7b 15 80 00              u64 [sp + 0x80] = s0
  9070: 7b 16 78                 u64 [sp + 0x78] = s1
  9073: 64 75                    s0 = a0
  9075: 7c 77 08                 a0 = u8 [a0 + 0x8]
  9078: 64 8b                    a4 = a1
  9080: 33 08 01                 a1 = 0x1
  9083: 33 06 01                 s1 = 0x1
  9086: 51 07 1d                 jump @593 if a0 == 0
      :                          @592
  9089: 78 56 08                 u8 [s0 + 0x8] = s1
  9092: 46 15 09 01              u8 [s0 + 9] = 0x1
  9096: 64 57                    a0 = s0
  9098: 82 10 88 00              ra = u64 [sp + 0x88]
  9102: 82 15 80 00              s0 = u64 [sp + 0x80]
  9106: 82 16 78                 s1 = u64 [sp + 0x78]
  9109: 95 11 90 00              sp = sp + 0x90
  9113: 32 00                    ret
      :                          @593
  9115: 64 9a                    a3 = a2
  9117: 82 5c                    a5 = u64 [s0]
  9119: 80 c7 34                 a0 = u32 [a5 + 0x34]
  9122: 7c 58 09                 a1 = u8 [s0 + 0x9]
  9125: 84 79 04                 a2 = a0 & 0x4
  9128: 52 09 45                 jump @599 if a2 != 0
      :                          @594
  9131: 51 08 32                 jump @597 if a1 == 0
      :                          @595
  9134: 82 c8 28                 a1 = u64 [a5 + 0x28]
  9137: 82 c7 20                 a0 = u64 [a5 + 0x20]
  9140: 82 83 18                 t1 = u64 [a1 + 0x18]
  9143: 33 08 9c 04 01           a1 = 0x1049c
  9148: 33 09 02                 a2 = 0x2
  9151: 64 a6                    s1 = a3
  9153: 7b 1b 10                 u64 [sp + 0x10] = a4
  9156: 7b 1c 08                 u64 [sp + 0x8] = a5
  9159: b4 30 02 d2 00           ra = 210, jump [t1]
      :                          @596 [@dyn 105]
  9164: 82 1c 08                 a5 = u64 [sp + 0x8]
  9167: 82 1b 10                 a4 = u64 [sp + 0x10]
  9170: 64 6a                    a3 = s1
  9172: 33 08 01                 a1 = 0x1
  9175: 33 06 01                 s1 = 0x1
  9178: 52 07 a7                 jump @592 if a0 != 0
      :                          @597
  9181: 64 b7                    a0 = a4
  9183: 64 c8                    a1 = a5
  9185: b4 a0 02 d4 00           ra = 212, jump [a3]
      :                          @598 [@dyn 106]
  9190: 33 08 01                 a1 = 0x1
  9193: 64 76                    s1 = a0
  9195: 28 96                    jump @592
      :                          @599
  9197: 52 08 37                 jump @603 if a1 != 0
      :                          @600
  9200: 82 c8 28                 a1 = u64 [a5 + 0x28]
  9203: 82 c7 20                 a0 = u64 [a5 + 0x20]
  9206: 82 83 18                 t1 = u64 [a1 + 0x18]
  9209: 33 08 a0 04 01           a1 = 0x104a0
  9214: 33 09 01                 a2 = 0x1
  9217: 33 06 01                 s1 = 0x1
  9220: 7b 1a                    u64 [sp] = a3
  9222: 7b 1b 10                 u64 [sp + 0x10] = a4
  9225: 7b 1c 08                 u64 [sp + 0x8] = a5
  9228: b4 30 02 d6 00           ra = 214, jump [t1]
      :                          @601 [@dyn 107]
  9233: 82 1c 08                 a5 = u64 [sp + 0x8]
  9236: 82 1b 10                 a4 = u64 [sp + 0x10]
  9239: 82 1a                    a3 = u64 [sp]
  9241: 33 08 01                 a1 = 0x1
  9244: 52 07 65 ff              jump @592 if a0 != 0
      :                          @602
  9248: 81 c7 34                 a0 = i32 [a5 + 0x34]
  9251: 01                       fallthrough
      :                          @603
  9252: 33 06 01                 s1 = 0x1
  9255: 78 16 37                 u8 [sp + 0x37] = s1
  9258: 82 c8 20                 a1 = u64 [a5 + 0x20]
  9261: 82 c9 28                 a2 = u64 [a5 + 0x28]
  9264: 7b 18 18                 u64 [sp + 0x18] = a1
  9267: 7b 19 20                 u64 [sp + 0x20] = a2
  9270: 95 18 37                 a1 = sp + 0x37
  9273: 7b 18 28                 u64 [sp + 0x28] = a1
  9276: 81 c8 30                 a1 = i32 [a5 + 0x30]
  9279: 7c c9 38                 a2 = u8 [a5 + 0x38]
  9282: 82 c3                    t1 = u64 [a5]
  9284: 82 c4 08                 t2 = u64 [a5 + 0x8]
  9287: 82 c0 10                 ra = u64 [a5 + 0x10]
  9290: 82 c2 18                 t0 = u64 [a5 + 0x18]
  9293: 7a 17 6c                 u32 [sp + 0x6c] = a0
  9296: 7a 18 68                 u32 [sp + 0x68] = a1
  9299: 78 19 70                 u8 [sp + 0x70] = a2
  9302: 7b 13 38                 u64 [sp + 0x38] = t1
  9305: 7b 14 40                 u64 [sp + 0x40] = t2
  9308: 7b 10 48                 u64 [sp + 0x48] = ra
  9311: 7b 12 50                 u64 [sp + 0x50] = t0
  9314: 95 17 18                 a0 = sp + 0x18
  9317: 7b 17 58                 u64 [sp + 0x58] = a0
  9320: 33 07 60 04 01           a0 = 0x10460
  9325: 7b 17 60                 u64 [sp + 0x60] = a0
  9328: 95 18 38                 a1 = sp + 0x38
  9331: 64 b7                    a0 = a4
  9333: b4 a0 02 d8 00           ra = 216, jump [a3]
      :                          @604 [@dyn 108]
  9338: 52 07 21                 jump @607 if a0 != 0
      :                          @605
  9341: 82 18 60                 a1 = u64 [sp + 0x60]
  9344: 82 17 58                 a0 = u64 [sp + 0x58]
  9347: 82 8a 18                 a3 = u64 [a1 + 0x18]
  9350: 33 08 9e 04 01           a1 = 0x1049e
  9355: 33 09 02                 a2 = 0x2
  9358: b4 a0 02 da 00           ra = 218, jump [a3]
      :                          @606 [@dyn 109]
  9363: 64 76                    s1 = a0
  9365: 33 08 01                 a1 = 0x1
  9368: 28 e9 fe                 jump @592
      :                          @607
  9371: 33 08 01                 a1 = 0x1
  9374: 28 e3 fe                 jump @592
      :                          @608
  9377: 51 08 9b 00              jump @629 if a1 == 0
      :                          @609
  9381: 64 79                    a2 = a0
  9383: 7c 77                    a0 = u8 [a0]
  9385: 51 07 91 00              jump @628 if a0 == 0
      :                          @610
  9389: 51 27 ff 00 90 00        jump @630 if a0 == 255
      :                          @611
  9395: 6c 7a                    a3 = sext.b a0
  9397: 57 0a 09                 jump @613 if a3 <s 0
      :                          @612
  9400: 33 0a                    a3 = 0
  9402: 33 08                    a1 = 0
  9404: 28 73                    jump @627
      :                          @613
  9406: 55 27 c0 00 0d           jump @615 if a0 >=u 192
      :                          @614
  9411: 33 0a 01                 a3 = 0x1
  9414: 33 0b 80                 a4 = 0xffffffffffffff80
  9417: 28 4a                    jump @624
      :                          @615
  9419: 55 27 e0 00 0e           jump @617 if a0 >=u 224
      :                          @616
  9424: 33 0a 02                 a3 = 0x2
  9427: 33 0b 40 ff              a4 = 0xffffffffffffff40
  9431: 28 3c                    jump @624
      :                          @617
  9433: 55 27 f0 00 0e           jump @619 if a0 >=u 240
      :                          @618
  9438: 33 0a 03                 a3 = 0x3
  9441: 33 0b 20 ff              a4 = 0xffffffffffffff20
  9445: 28 2e                    jump @624
      :                          @619
  9447: 55 27 f8 00 0e           jump @621 if a0 >=u 248
      :                          @620
  9452: 33 0a 04                 a3 = 0x4
  9455: 33 0b 10 ff              a4 = 0xffffffffffffff10
  9459: 28 20                    jump @624
      :                          @621
  9461: 55 27 fc 00 0e           jump @623 if a0 >=u 252
      :                          @622
  9466: 33 0a 05                 a3 = 0x5
  9469: 33 0b 08 ff              a4 = 0xffffffffffffff08
  9473: 28 12                    jump @624
      :                          @623
  9475: 88 7a fe 00              a3 = a0 <u 0xfe
  9479: 33 0b 04 ff              a4 = 0xffffffffffffff04
  9483: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  9487: 85 aa 07                 a3 = a3 ^ 0x7
  9490: 01                       fallthrough
      :                          @624
  9491: ae 8a 2b                 jump @631 if a3 >=u a1
      :                          @625
  9494: 33 08                    a1 = 0
  9496: c8 b7 07                 a0 = a0 + a4
  9499: 64 ab                    a4 = a3
  9501: 01                       fallthrough
      :                          @626
  9502: c8 b9 0c                 a5 = a2 + a4
  9505: 7c cc                    a5 = u8 [a5]
  9507: 97 88 08                 a1 = a1 << 0x8
  9510: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  9513: d4 c8 08                 a1 = a1 | a5
  9516: 52 0b f2                 jump @626 if a4 != 0
      :                          @627
  9519: 8a a9 03                 i32 a2 = a3 << 0x3
  9522: cf 97 07                 a0 = a0 << a2
  9525: c8 87 07                 a0 = a0 + a1
  9528: 32 00                    ret
      :                          @628
  9530: 32 00                    ret
      :                          @629
  9532: 00                       trap
      :                          @630
  9533: 00                       trap
      :                          @631
  9534: 00                       trap
