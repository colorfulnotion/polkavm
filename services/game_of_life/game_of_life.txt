// RO data = 1666/1668 bytes
// RW data = 16/1048624 bytes
// Stack size = 1048576 bytes
// RO data = [0, 16, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 122, 61, 32, 115, 61, 32, 111, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 32, 111, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 32, 119, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 32, 119, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 8, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 18, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 21, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 54, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 86, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 70, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 103, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 38, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 109, 97, 99, 104, 105, 110, 101, 32, 110, 101, 119, 32, 105, 110, 100, 101, 120, 61, 0, 0, 0, 0, 0, 0, 248, 0, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 102, 101, 116, 99, 104, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 32, 102, 101, 116, 99, 104, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 0, 40, 1, 1, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 68, 1, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 122, 101, 114, 111, 32, 109, 61, 44, 32, 112, 97, 103, 101, 95, 105, 100, 61, 32, 122, 101, 114, 111, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 120, 1, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 135, 1, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 145, 1, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 112, 111, 107, 101, 32, 109, 61, 32, 111, 61, 32, 122, 61, 32, 112, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 0, 208, 1, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 18, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 223, 1, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 226, 1, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 229, 1, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 99, 104, 105, 108, 100, 95, 118, 109, 95, 114, 101, 103, 105, 115, 116, 101, 114, 115, 61, 0, 0, 0, 0, 0, 72, 2, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 105, 110, 118, 111, 107, 101, 32, 99, 104, 105, 108, 100, 32, 86, 77, 44, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 0, 120, 2, 1, 0, 0, 0, 0, 0, 39, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 105, 110, 118, 111, 107, 101, 32, 32, 105, 110, 118, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 32, 111, 109, 101, 103, 97, 95, 56, 61, 0, 176, 2, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 191, 2, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 206, 2, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 100, 111, 110, 101, 32, 119, 105, 116, 104, 32, 99, 104, 105, 108, 100, 32, 86, 77, 44, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 0, 0, 0, 0, 0, 0, 8, 3, 1, 0, 0, 0, 0, 0, 42, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 70, 105, 114, 115, 116, 32, 116, 105, 109, 101, 32, 115, 101, 116, 117, 112, 58, 32, 119, 105, 95, 112, 97, 121, 108, 111, 97, 100, 95, 108, 101, 110, 103, 116, 104, 61, 0, 0, 0, 0, 72, 3, 1, 0, 0, 0, 0, 0, 44, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 115, 111, 108, 105, 99, 105, 116, 32, 99, 111, 100, 101, 95, 104, 97, 115, 104, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 111, 100, 101, 95, 108, 101, 110, 103, 116, 104, 61, 0, 136, 3, 1, 0, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 170, 3, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 130, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 132, 0, 0, 0, 0, 0, 0, 0, 138, 0, 0, 0, 0, 0, 0, 0, 146, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 180, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 182, 0, 0, 0, 0, 0, 0, 0, 188, 0, 0, 0, 0, 0, 0, 0, 192, 0, 0, 0, 0, 0, 0, 0, 112, 101, 101, 107, 122, 101, 114, 111, 32, 32, 32, 32, 112, 111, 107, 101, 44, 32, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 115, 117, 99, 99, 101, 115, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 119, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 111, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 115, 116, 97, 99, 107, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 119, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 111, 95, 98, 121, 116, 101, 115]
// RW data = [75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 2917
// Code size = 9043 bytes

      :                          @0
     0: 28 ad 02 00 00           jump @44
      :                          @1
     5: 28 00 11 00 00           jump @189
      :                          @2
    10: 28 8b 13                 jump @259
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 80 89 34                 a2 = u32 [a1 + 0x34]
    24: 82 77                    a0 = u64 [a0]
    26: 84 9a 10                 a3 = a2 & 0x10
    29: 52 0a 14                 jump @6 if a3 != 0
      :                          @4
    32: 84 99 20                 a2 = a2 & 0x20
    35: 52 09 3e                 jump @9 if a2 != 0
      :                          @5
    38: 82 10 80 00              ra = u64 [sp + 0x80]
    42: 95 11 88 00              sp = sp + 0x88
    46: 28 38 19                 jump @399
      :                          @6
    49: 82 7b                    a4 = u64 [a0]
    51: 33 09 81 00              a2 = 0x81
    55: 95 17 7f                 a0 = sp + 0x7f
    58: 33 02 57                 t0 = 0x57
    61: 01                       fallthrough
      :                          @7
    62: 64 9c                    a5 = a2
    64: 98 ba 04                 a3 = a4 >> 0x4
    67: 84 bb 0f                 a4 = a4 & 0xf
    70: 88 b3 0a                 t1 = a4 <u 0xa
    73: 33 09 30                 a2 = 0x30
    76: da 32 09                 a2 = t0 if t1 == 0
    79: be b9 09                 i32 a2 = a2 + a4
    82: 78 79                    u8 [a0] = a2
    84: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
    87: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
    90: 64 ab                    a4 = a3
    92: 52 0a e2                 jump @7 if a3 != 0
      :                          @8
    95: 28 30                    jump @11
      :                          @9
    97: 82 7b                    a4 = u64 [a0]
    99: 33 09 81 00              a2 = 0x81
   103: 95 17 7f                 a0 = sp + 0x7f
   106: 33 02 37                 t0 = 0x37
   109: 01                       fallthrough
      :                          @10
   110: 64 9c                    a5 = a2
   112: 98 ba 04                 a3 = a4 >> 0x4
   115: 84 bb 0f                 a4 = a4 & 0xf
   118: 88 b3 0a                 t1 = a4 <u 0xa
   121: 33 09 30                 a2 = 0x30
   124: da 32 09                 a2 = t0 if t1 == 0
   127: be b9 09                 i32 a2 = a2 + a4
   130: 78 79                    u8 [a0] = a2
   132: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   135: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   138: 64 ab                    a4 = a3
   140: 52 0a e2                 jump @10 if a3 != 0
      :                          @11
   143: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   146: 56 27 80 00 27           jump @14 if a0 >u 128
      :                          @12
   151: 9a 9b 81 00              a4 = 0x81 - a2
   155: 64 1a                    a3 = sp
   157: c8 7a 0a                 a3 = a3 + a0
   160: 33 09 02                 a2 = 0x2
   163: 64 87                    a0 = a1
   165: 33 08 56 04 01           a1 = 0x10456
   170: 50 10 04 e9 19           ra = 4, jump @409
      :                          @13 [@dyn 2]
   175: 82 10 80 00              ra = u64 [sp + 0x80]
   179: 95 11 88 00              sp = sp + 0x88
   183: 32 00                    ret
      :                          @14
   185: 00                       trap
      :                          @15 [@dyn 3]
   186: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   190: 7b 10 80 00              u64 [sp + 0x80] = ra
   194: 80 89 34                 a2 = u32 [a1 + 0x34]
   197: 84 9a 10                 a3 = a2 & 0x10
   200: 52 0a 14                 jump @18 if a3 != 0
      :                          @16
   203: 84 99 20                 a2 = a2 & 0x20
   206: 52 09 3e                 jump @21 if a2 != 0
      :                          @17
   209: 82 10 80 00              ra = u64 [sp + 0x80]
   213: 95 11 88 00              sp = sp + 0x88
   217: 28 8d 18                 jump @399
      :                          @18
   220: 82 7b                    a4 = u64 [a0]
   222: 33 09 81 00              a2 = 0x81
   226: 95 17 7f                 a0 = sp + 0x7f
   229: 33 02 57                 t0 = 0x57
   232: 01                       fallthrough
      :                          @19
   233: 64 9c                    a5 = a2
   235: 98 ba 04                 a3 = a4 >> 0x4
   238: 84 bb 0f                 a4 = a4 & 0xf
   241: 88 b3 0a                 t1 = a4 <u 0xa
   244: 33 09 30                 a2 = 0x30
   247: da 32 09                 a2 = t0 if t1 == 0
   250: be b9 09                 i32 a2 = a2 + a4
   253: 78 79                    u8 [a0] = a2
   255: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   258: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   261: 64 ab                    a4 = a3
   263: 52 0a e2                 jump @19 if a3 != 0
      :                          @20
   266: 28 30                    jump @23
      :                          @21
   268: 82 7b                    a4 = u64 [a0]
   270: 33 09 81 00              a2 = 0x81
   274: 95 17 7f                 a0 = sp + 0x7f
   277: 33 02 37                 t0 = 0x37
   280: 01                       fallthrough
      :                          @22
   281: 64 9c                    a5 = a2
   283: 98 ba 04                 a3 = a4 >> 0x4
   286: 84 bb 0f                 a4 = a4 & 0xf
   289: 88 b3 0a                 t1 = a4 <u 0xa
   292: 33 09 30                 a2 = 0x30
   295: da 32 09                 a2 = t0 if t1 == 0
   298: be b9 09                 i32 a2 = a2 + a4
   301: 78 79                    u8 [a0] = a2
   303: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   306: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   309: 64 ab                    a4 = a3
   311: 52 0a e2                 jump @22 if a3 != 0
      :                          @23
   314: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   317: 56 27 80 00 27           jump @26 if a0 >u 128
      :                          @24
   322: 9a 9b 81 00              a4 = 0x81 - a2
   326: 64 1a                    a3 = sp
   328: c8 7a 0a                 a3 = a3 + a0
   331: 33 09 02                 a2 = 0x2
   334: 64 87                    a0 = a1
   336: 33 08 56 04 01           a1 = 0x10456
   341: 50 10 08 3e 19           ra = 8, jump @409
      :                          @25 [@dyn 4]
   346: 82 10 80 00              ra = u64 [sp + 0x80]
   350: 95 11 88 00              sp = sp + 0x88
   354: 32 00                    ret
      :                          @26
   356: 00                       trap
      :                          @27 [@dyn 5]
   357: 95 11 d0                 sp = sp + 0xffffffffffffffd0
   360: 7b 10 28                 u64 [sp + 0x28] = ra
   363: 7b 15 20                 u64 [sp + 0x20] = s0
   366: 7b 16 18                 u64 [sp + 0x18] = s1
   369: 64 85                    s0 = a1
   371: 82 88 28                 a1 = u64 [a1 + 0x28]
   374: 82 5a 20                 a3 = u64 [s0 + 0x20]
   377: 82 8b 18                 a4 = u64 [a1 + 0x18]
   380: 64 76                    s1 = a0
   382: 33 08 08 04 01           a1 = 0x10408
   387: 33 09 01                 a2 = 0x1
   390: 64 a7                    a0 = a3
   392: b4 b0 01 0c              ra = 12, jump [a4]
      :                          @28 [@dyn 6]
   396: 7b 15                    u64 [sp] = s0
   398: 78 17 08                 u8 [sp + 0x8] = a0
   401: 46 11 09                 u8 [sp + 9] = 0
   404: 7b 16 10                 u64 [sp + 0x10] = s1
   407: 33 05 02                 s0 = 0x2
   410: 64 17                    a0 = sp
   412: 95 18 10                 a1 = sp + 0x10
   415: 33 09 02                 a2 = 0x2
   418: 50 10 0e d4 1f           ra = 14, jump @553
      :                          @29 [@dyn 7]
   423: 95 67 08                 a0 = s1 + 0x8
   426: 7b 17 10                 u64 [sp + 0x10] = a0
   429: 64 17                    a0 = sp
   431: 95 18 10                 a1 = sp + 0x10
   434: 64 59                    a2 = s0
   436: 50 10 10 c2 1f           ra = 16, jump @553
      :                          @30 [@dyn 8]
   441: 95 67 10                 a0 = s1 + 0x10
   444: 7b 17 10                 u64 [sp + 0x10] = a0
   447: 64 17                    a0 = sp
   449: 95 18 10                 a1 = sp + 0x10
   452: 64 59                    a2 = s0
   454: 50 10 12 b0 1f           ra = 18, jump @553
      :                          @31 [@dyn 9]
   459: 95 67 18                 a0 = s1 + 0x18
   462: 7b 17 10                 u64 [sp + 0x10] = a0
   465: 64 17                    a0 = sp
   467: 95 18 10                 a1 = sp + 0x10
   470: 64 59                    a2 = s0
   472: 50 10 14 9e 1f           ra = 20, jump @553
      :                          @32 [@dyn 10]
   477: 95 67 20                 a0 = s1 + 0x20
   480: 7b 17 10                 u64 [sp + 0x10] = a0
   483: 64 17                    a0 = sp
   485: 95 18 10                 a1 = sp + 0x10
   488: 64 59                    a2 = s0
   490: 50 10 16 8c 1f           ra = 22, jump @553
      :                          @33 [@dyn 11]
   495: 95 67 28                 a0 = s1 + 0x28
   498: 7b 17 10                 u64 [sp + 0x10] = a0
   501: 64 17                    a0 = sp
   503: 95 18 10                 a1 = sp + 0x10
   506: 64 59                    a2 = s0
   508: 50 10 18 7a 1f           ra = 24, jump @553
      :                          @34 [@dyn 12]
   513: 95 67 30                 a0 = s1 + 0x30
   516: 7b 17 10                 u64 [sp + 0x10] = a0
   519: 64 17                    a0 = sp
   521: 95 18 10                 a1 = sp + 0x10
   524: 64 59                    a2 = s0
   526: 50 10 1a 68 1f           ra = 26, jump @553
      :                          @35 [@dyn 13]
   531: 95 67 38                 a0 = s1 + 0x38
   534: 7b 17 10                 u64 [sp + 0x10] = a0
   537: 64 17                    a0 = sp
   539: 95 18 10                 a1 = sp + 0x10
   542: 64 59                    a2 = s0
   544: 50 10 1c 56 1f           ra = 28, jump @553
      :                          @36 [@dyn 14]
   549: 95 67 40                 a0 = s1 + 0x40
   552: 7b 17 10                 u64 [sp + 0x10] = a0
   555: 64 17                    a0 = sp
   557: 95 18 10                 a1 = sp + 0x10
   560: 64 59                    a2 = s0
   562: 50 10 1e 44 1f           ra = 30, jump @553
      :                          @37 [@dyn 15]
   567: 95 67 48                 a0 = s1 + 0x48
   570: 7b 17 10                 u64 [sp + 0x10] = a0
   573: 64 17                    a0 = sp
   575: 95 18 10                 a1 = sp + 0x10
   578: 64 59                    a2 = s0
   580: 50 10 20 32 1f           ra = 32, jump @553
      :                          @38 [@dyn 16]
   585: 95 67 50                 a0 = s1 + 0x50
   588: 7b 17 10                 u64 [sp + 0x10] = a0
   591: 64 17                    a0 = sp
   593: 95 18 10                 a1 = sp + 0x10
   596: 64 59                    a2 = s0
   598: 50 10 22 20 1f           ra = 34, jump @553
      :                          @39 [@dyn 17]
   603: 95 67 58                 a0 = s1 + 0x58
   606: 7b 17 10                 u64 [sp + 0x10] = a0
   609: 64 17                    a0 = sp
   611: 95 18 10                 a1 = sp + 0x10
   614: 64 59                    a2 = s0
   616: 50 10 24 0e 1f           ra = 36, jump @553
      :                          @40 [@dyn 18]
   621: 95 67 60                 a0 = s1 + 0x60
   624: 7b 17 10                 u64 [sp + 0x10] = a0
   627: 64 17                    a0 = sp
   629: 95 18 10                 a1 = sp + 0x10
   632: 64 59                    a2 = s0
   634: 50 10 26 fc 1e           ra = 38, jump @553
      :                          @41 [@dyn 19]
   639: 33 07 01                 a0 = 0x1
   642: 7c 18 08                 a1 = u8 [sp + 0x8]
   645: 52 08 1a                 jump @43 if a1 != 0
      :                          @42
   648: 82 17                    a0 = u64 [sp]
   650: 82 78 28                 a1 = u64 [a0 + 0x28]
   653: 82 77 20                 a0 = u64 [a0 + 0x20]
   656: 82 8a 18                 a3 = u64 [a1 + 0x18]
   659: 33 08 55 04 01           a1 = 0x10455
   664: 33 09 01                 a2 = 0x1
   667: b4 a0 01 28              ra = 40, jump [a3]
      :                          @43 [@dyn 20]
   671: 82 10 28                 ra = u64 [sp + 0x28]
   674: 82 15 20                 s0 = u64 [sp + 0x20]
   677: 82 16 18                 s1 = u64 [sp + 0x18]
   680: 95 11 30                 sp = sp + 0x30
   683: 32 00                    ret
      :                          @44 [export #0: 'refine']
   685: 95 11 08 f8              sp = sp + 0xfffffffffffff808
   689: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
   693: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
   697: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
   701: 95 11 88 b4 fe           sp = sp + 0xfffffffffffeb488
   706: 33 0a 00 00 01           a3 = 0x10000
   711: 55 18 04 09              jump @46 if a1 >=u 4
      :                          @45
   715: 33 06                    s1 = 0
   717: 28 98 01                 jump @73
      :                          @46
   720: 95 86 fc                 s1 = a1 + 0xfffffffffffffffc
   723: 51 06 92 01              jump @73 if s1 == 0
      :                          @47
   727: 95 7a 04                 a3 = a0 + 0x4
   730: 7d a8                    a1 = i8 [a3]
   732: 80 79                    a2 = u32 [a0]
   734: 33 05 01                 s0 = 0x1
   737: 59 08 3d                 jump @56 if a1 >=s 0
      :                          @48
   740: 84 87 ff 00              a0 = a1 & 0xff
   744: 33 05 02                 s0 = 0x2
   747: 53 27 c0 00 2d           jump @54 if a0 <u 192
      :                          @49
   752: 33 05 03                 s0 = 0x3
   755: 53 27 e0 00 25           jump @54 if a0 <u 224
      :                          @50
   760: 33 05 04                 s0 = 0x4
   763: 53 27 f0 00 1d           jump @54 if a0 <u 240
      :                          @51
   768: 33 05 05                 s0 = 0x5
   771: 53 27 f8 00 15           jump @54 if a0 <u 248
      :                          @52
   776: 33 05 06                 s0 = 0x6
   779: 53 27 fc 00 0d           jump @54 if a0 <u 252
      :                          @53
   784: 88 77 fe 00              a0 = a0 <u 0xfe
   788: 9a 75 08                 s0 = 0x8 - a0
   791: 01                       fallthrough
      :                          @54
   792: ae 56 06                 jump @56 if s1 >=u s0
      :                          @55
   795: 28 e9 0d                 jump @188
      :                          @56
   798: 7b 19 70                 u64 [sp + 0x70] = a2
   801: 7b 1a 68                 u64 [sp + 0x68] = a3
   804: 64 a7                    a0 = a3
   806: 64 58                    a1 = s0
   808: 50 10 2a 8d 1f           ra = 42, jump @570
      :                          @57 [@dyn 21]
   813: 64 58                    a1 = s0
   815: 64 75                    s0 = a0
   817: e4 86 07                 a0 = maxu(s1, a1)
   820: 7b 18 60                 u64 [sp + 0x60] = a1
   823: c9 87 07                 a0 = a0 - a1
   826: d8 57 08                 a1 = a0 <u s0
   829: e4 57 07                 a0 = maxu(a0, s0)
   832: c9 57 07                 a0 = a0 - s0
   835: 88 77 20                 a0 = a0 <u 0x20
   838: d4 87 07                 a0 = a0 | a1
   841: 52 07 14 01              jump @72 if a0 != 0
      :                          @58
   845: 7b 15 78                 u64 [sp + 0x78] = s0
   848: 48 21 a0 00              u32 [sp + 160] = 0
   852: 49 21 98 00              u64 [sp + 152] = 0
   856: 49 21 90 00              u64 [sp + 144] = 0
   860: 49 21 88 00              u64 [sp + 136] = 0
   864: 49 21 80 00              u64 [sp + 128] = 0
   868: 95 17 80 00              a0 = sp + 0x80
   872: 33 09 24                 a2 = 0x24
   875: 33 0a 03                 a3 = 0x3
   878: 33 08                    a1 = 0
   880: 33 0b                    a4 = 0
   882: 33 0c                    a5 = 0
   884: 0a 12                    ecalli 18 // 'fetch'
   886: 01                       fallthrough
      :                          @59
   887: 95 18 f8 50 01           a1 = sp + 0x150f8
   892: 33 06 24                 s1 = 0x24
   895: 55 15 08 9b 00           jump @69 if s0 >=u 8
      :                          @60
   900: 95 17 78                 a0 = sp + 0x78
   903: 7b 87 60 01              u64 [a1 + 0x160] = a0
   907: 33 07 06                 a0 = 0x6
   910: 7b 87 68 01              u64 [a1 + 0x168] = a0
   914: 33 07 78 03 01           a0 = 0x10378
   919: 7b 17 a8 00              u64 [sp + 0xa8] = a0
   923: 49 21 b0 00 01           u64 [sp + 176] = 0x1
   928: 49 21 c8 00              u64 [sp + 200] = 0
   932: 95 18 58 52 01           a1 = sp + 0x15258
   937: 7b 18 b8 00              u64 [sp + 0xb8] = a1
   941: 49 21 c0 00 01           u64 [sp + 192] = 0x1
   946: 95 17 f0 40 01           a0 = sp + 0x140f0
   951: 95 18 a8 00              a1 = sp + 0xa8
   955: 50 10 2c 20 12           ra = 44, jump @316
      :                          @61 [@dyn 22]
   960: 95 17 a8 40 01           a0 = sp + 0x140a8
   965: 82 75 50                 s0 = u64 [a0 + 0x50]
   968: 82 7b 58                 a4 = u64 [a0 + 0x58]
   971: 82 77 48                 a0 = u64 [a0 + 0x48]
   974: 7b 17 70                 u64 [sp + 0x70] = a0
   977: 33 07 02                 a0 = 0x2
   980: 33 08                    a1 = 0
   982: 33 09                    a2 = 0
   984: 64 5a                    a3 = s0
   986: 33 00 2e                 ra = 0x2e
   989: 0a 64                    ecalli 100 // 'log'
   991: 01                       fallthrough
      :                          @62 [@dyn 23]
   992: 82 1c 70                 a5 = u64 [sp + 0x70]
   995: 95 c8 ff ff ef           a1 = a5 + 0xffffffffffefffff
  1000: 53 38 00 00 f0 2c        jump @68 if a1 <u 4293918720
      :                          @63
  1006: 33 07 20 00 03           a0 = 0x30020
  1011: 95 77 00 00 10           a0 = a0 + 0x100000
  1016: 01                       fallthrough
      :                          @64
  1017: 82 78                    a1 = u64 [a0]
  1019: c9 87 09                 a2 = a0 - a1
  1022: ab 59 16                 jump @68 if a2 != s0
      :                          @65
  1025: c9 c8 09                 a2 = a1 - a5
  1028: 01                       fallthrough
      :                          @66
  1029: 82 7a                    a3 = u64 [a0]
  1031: ab 8a f2                 jump @64 if a3 != a1
      :                          @67
  1034: 7b 79                    u64 [a0] = a2
  1036: 33 0b                    a4 = 0
  1038: 95 1a 80 00              a3 = sp + 0x80
  1042: 28 53                    jump @73
      :                          @68
  1044: 95 1a 80 00              a3 = sp + 0x80
  1048: 28 4d                    jump @73
      :                          @69
  1050: 82 17 68                 a0 = u64 [sp + 0x68]
  1053: 82 18 60                 a1 = u64 [sp + 0x60]
  1056: c8 87 07                 a0 = a0 + a1
  1059: 80 75                    s0 = u32 [a0]
  1061: 80 78 04                 a1 = u32 [a0 + 0x4]
  1064: 7b 18 68                 u64 [sp + 0x68] = a1
  1067: 80 77 08                 a0 = u32 [a0 + 0x8]
  1070: 7b 17 60                 u64 [sp + 0x60] = a0
  1073: 95 17 a8 00              a0 = sp + 0xa8
  1077: 33 09 00 40 01           a2 = 0x14000
  1082: 33 08                    a1 = 0
  1084: 50 10 30 cb 14           ra = 48, jump @384
      :                          @70 [@dyn 24]
  1089: 95 18 80 00              a1 = sp + 0x80
  1093: 95 19 a8 00              a2 = sp + 0xa8
  1097: 33 0b 00 40 01           a4 = 0x14000
  1102: 82 17 70                 a0 = u64 [sp + 0x70]
  1105: 33 0a                    a3 = 0
  1107: 0a 11                    ecalli 17 // 'historical_lookup'
  1109: 01                       fallthrough
      :                          @71
  1110: 95 78 01                 a1 = a0 + 0x1
  1113: 55 18 04 2a              jump @74 if a1 >=u 4
      :                          @72
  1117: 33 06                    s1 = 0
  1119: 33 0a 00 00 01           a3 = 0x10000
  1124: 01                       fallthrough
      :                          @73
  1125: 64 a7                    a0 = a3
  1127: 64 68                    a1 = s1
  1129: 33 09 78 4b 01           a2 = 0x14b78
  1134: c8 91 01                 sp = sp + a2
  1137: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  1141: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  1145: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  1149: 95 11 f8 07              sp = sp + 0x7f8
  1153: 32 00                    ret
      :                          @74
  1155: 95 78 fd                 a1 = a0 + 0xfffffffffffffffd
  1158: 53 18 03 d7              jump @72 if a1 <u 3
      :                          @75
  1162: 84 78 fe                 a1 = a0 & 0xfffffffffffffffe
  1165: 51 18 06 d0              jump @72 if a1 == 6
      :                          @76
  1169: 95 78 f8                 a1 = a0 + 0xfffffffffffffff8
  1172: 53 18 03 c9              jump @72 if a1 <u 3
      :                          @77
  1176: 7c 18 aa 00              a1 = u8 [sp + 0xaa]
  1180: 7c 19 a9 00              a2 = u8 [sp + 0xa9]
  1184: 7c 1a a8 00              a3 = u8 [sp + 0xa8]
  1188: 97 88 10                 a1 = a1 << 0x10
  1191: 97 99 08                 a2 = a2 << 0x8
  1194: d4 98 08                 a1 = a1 | a2
  1197: d4 a8 08                 a1 = a1 | a3
  1200: 95 79 f5                 a2 = a0 + 0xfffffffffffffff5
  1203: ac 89 aa                 jump @72 if a2 <u a1
      :                          @78
  1206: 7c 17 ad 00              a0 = u8 [sp + 0xad]
  1210: 7c 1a ac 00              a3 = u8 [sp + 0xac]
  1214: 7c 1b ab 00              a4 = u8 [sp + 0xab]
  1218: 97 77 10                 a0 = a0 << 0x10
  1221: 97 aa 08                 a3 = a3 << 0x8
  1224: d4 a7 07                 a0 = a0 | a3
  1227: d4 b7 07                 a0 = a0 | a4
  1230: c9 89 09                 a2 = a2 - a1
  1233: ac 79 8c                 jump @72 if a2 <u a0
      :                          @79
  1236: c9 79 06                 s1 = a2 - a0
  1239: 53 16 04 86              jump @72 if s1 <u 4
      :                          @80
  1243: 95 12 b3 00              t0 = sp + 0xb3
  1247: c8 28 03                 t1 = a1 + t0
  1250: c8 37 0b                 a4 = a0 + t1
  1253: 7c bc 03                 a5 = u8 [a4 + 0x3]
  1256: 7b 15 08                 u64 [sp + 0x8] = s0
  1259: 7c b5 02                 s0 = u8 [a4 + 0x2]
  1262: 7c ba                    a3 = u8 [a4]
  1264: 7c b9 01                 a2 = u8 [a4 + 0x1]
  1267: 97 cc 10                 a5 = a5 << 0x10
  1270: 97 55 08                 s0 = s0 << 0x8
  1273: d4 5c 0c                 a5 = a5 | s0
  1276: d4 c9 09                 a2 = a2 | a5
  1279: 97 99 08                 a2 = a2 << 0x8
  1282: d4 a9 0c                 a5 = a2 | a3
  1285: 95 66 fc                 s1 = s1 + 0xfffffffffffffffc
  1288: ac c6 55 ff              jump @72 if s1 <u a5
      :                          @81
  1292: 7c 19 af 00              a2 = u8 [sp + 0xaf]
  1296: 7c 1a ae 00              a3 = u8 [sp + 0xae]
  1300: 97 99 08                 a2 = a2 << 0x8
  1303: 7c 16 b2 00              s1 = u8 [sp + 0xb2]
  1307: 7c 15 b1 00              s0 = u8 [sp + 0xb1]
  1311: d4 a9 09                 a2 = a2 | a3
  1314: 7c 1a b0 00              a3 = u8 [sp + 0xb0]
  1318: 97 66 10                 s1 = s1 << 0x10
  1321: 97 55 08                 s0 = s0 << 0x8
  1324: d4 65 05                 s0 = s0 | s1
  1327: d4 5a 0a                 a3 = a3 | s0
  1330: 49 11 70 ff ff ef        u64 [sp + 112] = 0xffffffffffefffff
  1336: 95 bb 04                 a4 = a4 + 0x4
  1339: 33 04 a8 40 01           t2 = 0x140a8
  1344: c8 41 06                 s1 = sp + t2
  1347: 7b 69                    u64 [s1] = a2
  1349: 7b 6a 08                 u64 [s1 + 0x8] = a3
  1352: 7b 62 10                 u64 [s1 + 0x10] = t0
  1355: 7b 68 18                 u64 [s1 + 0x18] = a1
  1358: 7b 63 20                 u64 [s1 + 0x20] = t1
  1361: 7b 67 28                 u64 [s1 + 0x28] = a0
  1364: 7b 6b 30                 u64 [s1 + 0x30] = a4
  1367: 7b 6c 38                 u64 [s1 + 0x38] = a5
  1370: 7b 66 48                 u64 [s1 + 0x48] = s1
  1373: 33 08 06                 a1 = 0x6
  1376: 7b 68 50                 u64 [s1 + 0x50] = a1
  1379: 95 17 b0 40 01           a0 = sp + 0x140b0
  1384: 7b 67 58                 u64 [s1 + 0x58] = a0
  1387: 7b 68 60                 u64 [s1 + 0x60] = a1
  1390: 95 17 b8 40 01           a0 = sp + 0x140b8
  1395: 7b 67 68                 u64 [s1 + 0x68] = a0
  1398: 7b 68 70                 u64 [s1 + 0x70] = a1
  1401: 95 17 c0 40 01           a0 = sp + 0x140c0
  1406: 7b 67 78                 u64 [s1 + 0x78] = a0
  1409: 7b 68 80 00              u64 [s1 + 0x80] = a1
  1413: 95 17 c8 40 01           a0 = sp + 0x140c8
  1418: 7b 67 88 00              u64 [s1 + 0x88] = a0
  1422: 7b 68 90 00              u64 [s1 + 0x90] = a1
  1426: 95 17 d0 40 01           a0 = sp + 0x140d0
  1431: 7b 67 98 00              u64 [s1 + 0x98] = a0
  1435: 7b 68 a0 00              u64 [s1 + 0xa0] = a1
  1439: 95 17 d8 40 01           a0 = sp + 0x140d8
  1444: 7b 67 a8 00              u64 [s1 + 0xa8] = a0
  1448: 7b 68 b0 00              u64 [s1 + 0xb0] = a1
  1452: 95 17 e0 40 01           a0 = sp + 0x140e0
  1457: 7b 67 b8 00              u64 [s1 + 0xb8] = a0
  1461: 7b 18 58                 u64 [sp + 0x58] = a1
  1464: 7b 68 c0 00              u64 [s1 + 0xc0] = a1
  1468: 33 07 78 00 01           a0 = 0x10078
  1473: 95 16 f8 50 01           s1 = sp + 0x150f8
  1478: 7b 67 60 01              u64 [s1 + 0x160] = a0
  1482: 49 26 68 01 08           u64 [s1 + 360] = 0x8
  1487: 49 26 80 01              u64 [s1 + 384] = 0
  1491: 95 18 f0 40 01           a1 = sp + 0x140f0
  1496: 7b 68 70 01              u64 [s1 + 0x170] = a1
  1500: 49 26 78 01 08           u64 [s1 + 376] = 0x8
  1505: 95 17 80 51 01           a0 = sp + 0x15180
  1510: 95 18 58 52 01           a1 = sp + 0x15258
  1515: 50 10 32 f0 0f           ra = 50, jump @316
      :                          @82 [@dyn 25]
  1520: 82 65 90 00              s0 = u64 [s1 + 0x90]
  1524: 82 6b 98 00              a4 = u64 [s1 + 0x98]
  1528: 82 66 88 00              s1 = u64 [s1 + 0x88]
  1532: 33 07 02                 a0 = 0x2
  1535: 33 08                    a1 = 0
  1537: 33 09                    a2 = 0
  1539: 64 5a                    a3 = s0
  1541: 33 00 34                 ra = 0x34
  1544: 0a 64                    ecalli 100 // 'log'
  1546: 01                       fallthrough
      :                          @83 [@dyn 26]
  1547: 82 17 70                 a0 = u64 [sp + 0x70]
  1550: c8 67 07                 a0 = a0 + s1
  1553: 53 37 00 00 f0 25        jump @89 if a0 <u 4293918720
      :                          @84
  1559: 33 07 20 00 03           a0 = 0x30020
  1564: 95 77 00 00 10           a0 = a0 + 0x100000
  1569: 01                       fallthrough
      :                          @85
  1570: 82 78                    a1 = u64 [a0]
  1572: c9 87 09                 a2 = a0 - a1
  1575: ab 59 0f                 jump @89 if a2 != s0
      :                          @86
  1578: c9 68 09                 a2 = a1 - s1
  1581: 01                       fallthrough
      :                          @87
  1582: 82 7a                    a3 = u64 [a0]
  1584: ab 8a f2                 jump @85 if a3 != a1
      :                          @88
  1587: 7b 79                    u64 [a0] = a2
  1589: 01                       fallthrough
      :                          @89
  1590: 95 15 a8 40 01           s0 = sp + 0x140a8
  1595: 82 57 30                 a0 = u64 [s0 + 0x30]
  1598: 82 58 38                 a1 = u64 [s0 + 0x38]
  1601: 33 09                    a2 = 0
  1603: 0a 14                    ecalli 20 // 'machine'
  1605: 7b 57 40                 u64 [s0 + 0x40] = a0
  1608: 95 17 e8 40 01           a0 = sp + 0x140e8
  1613: 95 16 f8 50 01           s1 = sp + 0x150f8
  1618: 7b 67 88 00              u64 [s1 + 0x88] = a0
  1622: 82 17 58                 a0 = u64 [sp + 0x58]
  1625: 7b 67 90 00              u64 [s1 + 0x90] = a0
  1629: 33 07 18 01 01           a0 = 0x10118
  1634: 7b 57 48                 u64 [s0 + 0x48] = a0
  1637: 95 17 80 51 01           a0 = sp + 0x15180
  1642: 7b 57 58                 u64 [s0 + 0x58] = a0
  1645: 49 15 50 01              u64 [s0 + 80] = 0x1
  1649: 49 15 60 01              u64 [s0 + 96] = 0x1
  1653: 49 15 68                 u64 [s0 + 104] = 0
  1656: 95 17 58 52 01           a0 = sp + 0x15258
  1661: 95 18 f0 40 01           a1 = sp + 0x140f0
  1666: 50 10 36 59 0f           ra = 54, jump @316
      :                          @90 [@dyn 27]
  1671: 82 65 68 01              s0 = u64 [s1 + 0x168]
  1675: 82 6b 70 01              a4 = u64 [s1 + 0x170]
  1679: 82 66 60 01              s1 = u64 [s1 + 0x160]
  1683: 33 07 02                 a0 = 0x2
  1686: 33 08                    a1 = 0
  1688: 33 09                    a2 = 0
  1690: 64 5a                    a3 = s0
  1692: 33 00 38                 ra = 0x38
  1695: 0a 64                    ecalli 100 // 'log'
  1697: 01                       fallthrough
      :                          @91 [@dyn 28]
  1698: 82 17 70                 a0 = u64 [sp + 0x70]
  1701: c8 67 07                 a0 = a0 + s1
  1704: 53 37 00 00 f0 25        jump @97 if a0 <u 4293918720
      :                          @92
  1710: 33 07 20 00 03           a0 = 0x30020
  1715: 95 77 00 00 10           a0 = a0 + 0x100000
  1720: 01                       fallthrough
      :                          @93
  1721: 82 78                    a1 = u64 [a0]
  1723: c9 87 09                 a2 = a0 - a1
  1726: ab 59 0f                 jump @97 if a2 != s0
      :                          @94
  1729: c9 68 09                 a2 = a1 - s1
  1732: 01                       fallthrough
      :                          @95
  1733: 82 7a                    a3 = u64 [a0]
  1735: ab 8a f2                 jump @93 if a3 != a1
      :                          @96
  1738: 7b 79                    u64 [a0] = a2
  1740: 01                       fallthrough
      :                          @97
  1741: 95 19 a8 40 01           a2 = sp + 0x140a8
  1746: 82 97                    a0 = u64 [a2]
  1748: 7b 17 48                 u64 [sp + 0x48] = a0
  1751: 82 97 08                 a0 = u64 [a2 + 0x8]
  1754: 7b 17 40                 u64 [sp + 0x40] = a0
  1757: 82 97 10                 a0 = u64 [a2 + 0x10]
  1760: 7b 17 38                 u64 [sp + 0x38] = a0
  1763: 82 95 18                 s0 = u64 [a2 + 0x18]
  1766: 82 98 20                 a1 = u64 [a2 + 0x20]
  1769: 7b 18 30                 u64 [sp + 0x30] = a1
  1772: 80 97 40                 a0 = u32 [a2 + 0x40]
  1775: 82 96 28                 s1 = u64 [a2 + 0x28]
  1778: 49 11 50 ff 0f           u64 [sp + 80] = 0xfff
  1783: 95 59 ff 0f              a2 = s0 + 0xfff
  1787: 98 99 0c                 a2 = a2 >> 0xc
  1790: 33 08 10                 a1 = 0x10
  1793: 7b 17 58                 u64 [sp + 0x58] = a0
  1796: 0a 17                    ecalli 23 // 'zero'
  1798: 01                       fallthrough
      :                          @98
  1799: 51 07 17                 jump @100 if a0 == 0
      :                          @99
  1802: 33 0a 44 06 01           a3 = 0x10644
  1807: 33 07 02                 a0 = 0x2
  1810: 33 0b 3e                 a4 = 0x3e
  1813: 33 08                    a1 = 0
  1815: 33 09                    a2 = 0
  1817: 0a 64                    ecalli 100 // 'log'
  1819: 28 e0 00                 jump @113
      :                          @100
  1822: 7b 16 28                 u64 [sp + 0x28] = s1
  1825: 82 17 50                 a0 = u64 [sp + 0x50]
  1828: c8 67 07                 a0 = a0 + s1
  1831: 98 77 0c                 a0 = a0 >> 0xc
  1834: 82 19 48                 a2 = u64 [sp + 0x48]
  1837: c8 79 09                 a2 = a2 + a0
  1840: 7b 15 48                 u64 [sp + 0x48] = s0
  1843: 95 57 ff ff 00           a0 = s0 + 0xffff
  1848: 84 77 00 00 ff           a0 = a0 & 0xffffffffffff0000
  1853: 95 75 00 00 02           s0 = a0 + 0x20000
  1858: 98 58 0c                 a1 = s0 >> 0xc
  1861: 82 17 58                 a0 = u64 [sp + 0x58]
  1864: 0a 17                    ecalli 23 // 'zero'
  1866: 01                       fallthrough
      :                          @101
  1867: 51 07 17                 jump @103 if a0 == 0
      :                          @102
  1870: 33 0a 06 06 01           a3 = 0x10606
  1875: 33 07 02                 a0 = 0x2
  1878: 33 0b 3e                 a4 = 0x3e
  1881: 33 08                    a1 = 0
  1883: 33 09                    a2 = 0
  1885: 0a 64                    ecalli 100 // 'log'
  1887: 28 9c 00                 jump @113
      :                          @103
  1890: 82 16 50                 s1 = u64 [sp + 0x50]
  1893: 82 17 40                 a0 = u64 [sp + 0x40]
  1896: c8 76 06                 s1 = s1 + a0
  1899: 98 69 0c                 a2 = s1 >> 0xc
  1902: 84 67 00 f0              a0 = s1 & 0xfffffffffffff000
  1906: 14 08 00 00 fe fe 00 00 00 00 a1 = 0xfefe0000
  1916: c9 78 08                 a1 = a1 - a0
  1919: 98 88 0c                 a1 = a1 >> 0xc
  1922: 82 17 58                 a0 = u64 [sp + 0x58]
  1925: 0a 17                    ecalli 23 // 'zero'
  1927: 01                       fallthrough
      :                          @104
  1928: 51 07 16                 jump @106 if a0 == 0
      :                          @105
  1931: 33 0a ca 05 01           a3 = 0x105ca
  1936: 33 07 02                 a0 = 0x2
  1939: 33 0b 3c                 a4 = 0x3c
  1942: 33 08                    a1 = 0
  1944: 33 09                    a2 = 0
  1946: 0a 64                    ecalli 100 // 'log'
  1948: 28 5f                    jump @113
      :                          @106
  1950: 33 09 00 00 01           a2 = 0x10000
  1955: 82 17 58                 a0 = u64 [sp + 0x58]
  1958: 82 18 38                 a1 = u64 [sp + 0x38]
  1961: 82 1a 48                 a3 = u64 [sp + 0x48]
  1964: 0a 16                    ecalli 22 // 'poke'
  1966: 01                       fallthrough
      :                          @107
  1967: 51 07 16                 jump @109 if a0 == 0
      :                          @108
  1970: 33 0a 8c 05 01           a3 = 0x1058c
  1975: 33 07 02                 a0 = 0x2
  1978: 33 0b 3e                 a4 = 0x3e
  1981: 33 08                    a1 = 0
  1983: 33 09                    a2 = 0
  1985: 0a 64                    ecalli 100 // 'log'
  1987: 28 38                    jump @113
      :                          @109
  1989: 82 17 58                 a0 = u64 [sp + 0x58]
  1992: 82 18 30                 a1 = u64 [sp + 0x30]
  1995: 64 59                    a2 = s0
  1997: 82 1a 28                 a3 = u64 [sp + 0x28]
  2000: 0a 16                    ecalli 22 // 'poke'
  2002: 01                       fallthrough
      :                          @110
  2003: 51 07 16                 jump @112 if a0 == 0
      :                          @111
  2006: 33 0a 4e 05 01           a3 = 0x1054e
  2011: 33 07 02                 a0 = 0x2
  2014: 33 0b 3e                 a4 = 0x3e
  2017: 33 08                    a1 = 0
  2019: 33 09                    a2 = 0
  2021: 0a 64                    ecalli 100 // 'log'
  2023: 28 14                    jump @113
      :                          @112
  2025: 33 0a 20 05 01           a3 = 0x10520
  2030: 33 07 02                 a0 = 0x2
  2033: 33 0b 2e                 a4 = 0x2e
  2036: 33 08                    a1 = 0
  2038: 33 09                    a2 = 0
  2040: 0a 64                    ecalli 100 // 'log'
  2042: 01                       fallthrough
      :                          @113
  2043: 33 05 08 10              s0 = 0x1008
  2047: 95 17 f0 40 01           a0 = sp + 0x140f0
  2052: 33 08                    a1 = 0
  2054: 33 09 08 10              a2 = 0x1008
  2058: 50 10 3a fd 10           ra = 58, jump @384
      :                          @114 [@dyn 29]
  2063: 95 17 f8 50 01           a0 = sp + 0x150f8
  2068: 49 07                    u64 [a0 + 0] = 0
  2070: 95 17 f0 40 01           a0 = sp + 0x140f0
  2075: 33 0a 06                 a3 = 0x6
  2078: 33 08                    a1 = 0
  2080: 7b 15 30                 u64 [sp + 0x30] = s0
  2083: 64 59                    a2 = s0
  2085: 33 0b                    a4 = 0
  2087: 33 0c                    a5 = 0
  2089: 0a 12                    ecalli 18 // 'fetch'
  2091: 01                       fallthrough
      :                          @115
  2092: 95 18 f8 50 01           a1 = sp + 0x150f8
  2097: 7b 87 18                 u64 [a1 + 0x18] = a0
  2100: 33 0a                    a3 = 0
  2102: 51 17 ff ad 02           jump @142 if a0 == 4294967295
      :                          @116
  2107: 33 07 06                 a0 = 0x6
  2110: 7b 17 58                 u64 [sp + 0x58] = a0
  2113: 33 07 58 01 01           a0 = 0x10158
  2118: 7b 17 28                 u64 [sp + 0x28] = a0
  2121: 33 07 a0 01 01           a0 = 0x101a0
  2126: 7b 17 20                 u64 [sp + 0x20] = a0
  2129: 33 07 00 00 01           a0 = 0x10000
  2134: 7b 17 18                 u64 [sp + 0x18] = a0
  2137: 33 06 20 00 03           s1 = 0x30020
  2142: 95 66 00 00 10           s1 = s1 + 0x100000
  2147: 33 07 f8 01 01           a0 = 0x101f8
  2152: 7b 17 10                 u64 [sp + 0x10] = a0
  2155: 28 3c                    jump @119
      :                          @117
  2157: 95 17 f8 50 01           a0 = sp + 0x150f8
  2162: 82 7b                    a4 = u64 [a0]
  2164: 95 bb 01                 a4 = a4 + 0x1
  2167: 7b 7b                    u64 [a0] = a4
  2169: 95 17 f0 40 01           a0 = sp + 0x140f0
  2174: 33 0a 06                 a3 = 0x6
  2177: 33 08                    a1 = 0
  2179: 82 19 30                 a2 = u64 [sp + 0x30]
  2182: 33 0c                    a5 = 0
  2184: 0a 12                    ecalli 18 // 'fetch'
  2186: 01                       fallthrough
      :                          @118
  2187: 82 18 48                 a1 = u64 [sp + 0x48]
  2190: 97 88 0c                 a1 = a1 << 0xc
  2193: 82 1a 50                 a3 = u64 [sp + 0x50]
  2196: 82 19 40                 a2 = u64 [sp + 0x40]
  2199: da 98 0a                 a3 = a1 if a2 == 0
  2202: 95 18 f8 50 01           a1 = sp + 0x150f8
  2207: 7b 87 18                 u64 [a1 + 0x18] = a0
  2210: 51 17 ff 41 02           jump @142 if a0 == 4294967295
      :                          @119
  2215: 7b 1a 50                 u64 [sp + 0x50] = a3
  2218: 7b 88 88 00              u64 [a1 + 0x88] = a1
  2222: 82 17 58                 a0 = u64 [sp + 0x58]
  2225: 7b 87 90 00              u64 [a1 + 0x90] = a0
  2229: 95 19 10 51 01           a2 = sp + 0x15110
  2234: 7b 89 98 00              u64 [a1 + 0x98] = a2
  2238: 7b 87 a0 00              u64 [a1 + 0xa0] = a0
  2242: 82 17 28                 a0 = u64 [sp + 0x28]
  2245: 7b 87 60 01              u64 [a1 + 0x160] = a0
  2249: 49 28 68 01 02           u64 [a1 + 360] = 0x2
  2254: 49 28 80 01              u64 [a1 + 384] = 0
  2258: 95 19 80 51 01           a2 = sp + 0x15180
  2263: 7b 89 70 01              u64 [a1 + 0x170] = a2
  2267: 49 28 78 01 02           u64 [a1 + 376] = 0x2
  2272: 95 17 18 51 01           a0 = sp + 0x15118
  2277: 95 18 58 52 01           a1 = sp + 0x15258
  2282: 50 10 3c f1 0c           ra = 60, jump @316
      :                          @120 [@dyn 30]
  2287: 95 17 f8 50 01           a0 = sp + 0x150f8
  2292: 82 75 28                 s0 = u64 [a0 + 0x28]
  2295: 82 7b 30                 a4 = u64 [a0 + 0x30]
  2298: 82 77 20                 a0 = u64 [a0 + 0x20]
  2301: 7b 17 48                 u64 [sp + 0x48] = a0
  2304: 33 07 02                 a0 = 0x2
  2307: 33 08                    a1 = 0
  2309: 33 09                    a2 = 0
  2311: 64 5a                    a3 = s0
  2313: 33 00 3e                 ra = 0x3e
  2316: 0a 64                    ecalli 100 // 'log'
  2318: 01                       fallthrough
      :                          @121 [@dyn 31]
  2319: 82 1b 48                 a4 = u64 [sp + 0x48]
  2322: 82 17 70                 a0 = u64 [sp + 0x70]
  2325: c8 b7 07                 a0 = a0 + a4
  2328: 53 37 00 00 f0 1a        jump @126 if a0 <u 4293918720
      :                          @122
  2334: 82 67                    a0 = u64 [s1]
  2336: c9 76 08                 a1 = s1 - a0
  2339: ab 58 0f                 jump @126 if a1 != s0
      :                          @123
  2342: c9 b7 08                 a1 = a0 - a4
  2345: 01                       fallthrough
      :                          @124
  2346: 82 69                    a2 = u64 [s1]
  2348: ab 79 f2                 jump @122 if a2 != a0
      :                          @125
  2351: 7b 68                    u64 [s1] = a1
  2353: 01                       fallthrough
      :                          @126
  2354: 95 18 a8 40 01           a1 = sp + 0x140a8
  2359: 80 87 48                 a0 = u32 [a1 + 0x48]
  2362: 80 88 4c                 a1 = u32 [a1 + 0x4c]
  2365: 95 19 f8 50 01           a2 = sp + 0x150f8
  2370: 7b 97 08                 u64 [a2 + 0x8] = a0
  2373: 7b 98 10                 u64 [a2 + 0x10] = a1
  2376: 82 99                    a2 = u64 [a2]
  2378: 7b 19 40                 u64 [sp + 0x40] = a2
  2381: 33 09 01                 a2 = 0x1
  2384: 7b 18 48                 u64 [sp + 0x48] = a1
  2387: 0a 17                    ecalli 23 // 'zero'
  2389: 95 19 f8 50 01           a2 = sp + 0x150f8
  2394: 7b 97 f8 00              u64 [a2 + 0xf8] = a0
  2398: 95 17 00 51 01           a0 = sp + 0x15100
  2403: 7b 97 60 01              u64 [a2 + 0x160] = a0
  2407: 82 17 58                 a0 = u64 [sp + 0x58]
  2410: 7b 97 68 01              u64 [a2 + 0x168] = a0
  2414: 95 18 08 51 01           a1 = sp + 0x15108
  2419: 7b 98 70 01              u64 [a2 + 0x170] = a1
  2423: 7b 97 78 01              u64 [a2 + 0x178] = a0
  2427: 95 18 f0 51 01           a1 = sp + 0x151f0
  2432: 7b 98 80 01              u64 [a2 + 0x180] = a1
  2436: 7b 97 88 01              u64 [a2 + 0x188] = a0
  2440: 82 17 20                 a0 = u64 [sp + 0x20]
  2443: 7b 97 88 00              u64 [a2 + 0x88] = a0
  2447: 49 29 90 00 03           u64 [a2 + 144] = 0x3
  2452: 49 29 a8 00              u64 [a2 + 168] = 0
  2456: 95 17 58 52 01           a0 = sp + 0x15258
  2461: 7b 97 98 00              u64 [a2 + 0x98] = a0
  2465: 49 29 a0 00 03           u64 [a2 + 160] = 0x3
  2470: 95 17 18 51 01           a0 = sp + 0x15118
  2475: 95 18 80 51 01           a1 = sp + 0x15180
  2480: 50 10 40 2b 0c           ra = 64, jump @316
      :                          @127 [@dyn 32]
  2485: 95 17 f8 50 01           a0 = sp + 0x150f8
  2490: 82 75 28                 s0 = u64 [a0 + 0x28]
  2493: 82 7b 30                 a4 = u64 [a0 + 0x30]
  2496: 82 77 20                 a0 = u64 [a0 + 0x20]
  2499: 7b 17 38                 u64 [sp + 0x38] = a0
  2502: 33 07 02                 a0 = 0x2
  2505: 33 08                    a1 = 0
  2507: 33 09                    a2 = 0
  2509: 64 5a                    a3 = s0
  2511: 33 00 42                 ra = 0x42
  2514: 0a 64                    ecalli 100 // 'log'
  2516: 01                       fallthrough
      :                          @128 [@dyn 33]
  2517: 82 1b 38                 a4 = u64 [sp + 0x38]
  2520: 82 17 70                 a0 = u64 [sp + 0x70]
  2523: c8 b7 07                 a0 = a0 + a4
  2526: 53 37 00 00 f0 1a        jump @133 if a0 <u 4293918720
      :                          @129
  2532: 82 67                    a0 = u64 [s1]
  2534: c9 76 08                 a1 = s1 - a0
  2537: ab 58 0f                 jump @133 if a1 != s0
      :                          @130
  2540: c9 b7 08                 a1 = a0 - a4
  2543: 01                       fallthrough
      :                          @131
  2544: 82 69                    a2 = u64 [s1]
  2546: ab 79 f2                 jump @129 if a2 != a0
      :                          @132
  2549: 7b 68                    u64 [s1] = a1
  2551: 01                       fallthrough
      :                          @133
  2552: 95 1a f8 50 01           a3 = sp + 0x150f8
  2557: 82 a9 10                 a2 = u64 [a3 + 0x10]
  2560: 82 a7 08                 a0 = u64 [a3 + 0x8]
  2563: 95 18 f0 40 01           a1 = sp + 0x140f0
  2568: 7b a8 00 01              u64 [a3 + 0x100] = a1
  2572: 97 99 0c                 a2 = a2 << 0xc
  2575: 7b a9 08 01              u64 [a3 + 0x108] = a2
  2579: 33 0a 00 10              a3 = 0x1000
  2583: 95 18 f8 40 01           a1 = sp + 0x140f8
  2588: 0a 16                    ecalli 22 // 'poke'
  2590: 95 19 f8 50 01           a2 = sp + 0x150f8
  2595: 7b 97 20 01              u64 [a2 + 0x120] = a0
  2599: 95 17 00 51 01           a0 = sp + 0x15100
  2604: 7b 97 60 01              u64 [a2 + 0x160] = a0
  2608: 82 17 58                 a0 = u64 [sp + 0x58]
  2611: 7b 97 68 01              u64 [a2 + 0x168] = a0
  2615: 95 18 f8 51 01           a1 = sp + 0x151f8
  2620: 7b 98 70 01              u64 [a2 + 0x170] = a1
  2624: 7b 97 78 01              u64 [a2 + 0x178] = a0
  2628: 95 18 00 52 01           a1 = sp + 0x15200
  2633: 7b 98 80 01              u64 [a2 + 0x180] = a1
  2637: 7b 97 88 01              u64 [a2 + 0x188] = a0
  2641: 82 18 18                 a1 = u64 [sp + 0x18]
  2644: 7b 98 90 01              u64 [a2 + 0x190] = a1
  2648: 7b 97 98 01              u64 [a2 + 0x198] = a0
  2652: 95 18 18 52 01           a1 = sp + 0x15218
  2657: 7b 98 a0 01              u64 [a2 + 0x1a0] = a1
  2661: 7b 97 a8 01              u64 [a2 + 0x1a8] = a0
  2665: 82 17 10                 a0 = u64 [sp + 0x10]
  2668: 7b 97 88 00              u64 [a2 + 0x88] = a0
  2672: 49 29 90 00 05           u64 [a2 + 144] = 0x5
  2677: 49 29 a8 00              u64 [a2 + 168] = 0
  2681: 95 17 58 52 01           a0 = sp + 0x15258
  2686: 7b 97 98 00              u64 [a2 + 0x98] = a0
  2690: 49 29 a0 00 05           u64 [a2 + 160] = 0x5
  2695: 95 17 18 51 01           a0 = sp + 0x15118
  2700: 95 18 80 51 01           a1 = sp + 0x15180
  2705: 50 10 44 4a 0b           ra = 68, jump @316
      :                          @134 [@dyn 34]
  2710: 95 17 f8 50 01           a0 = sp + 0x150f8
  2715: 82 75 28                 s0 = u64 [a0 + 0x28]
  2718: 82 7b 30                 a4 = u64 [a0 + 0x30]
  2721: 82 77 20                 a0 = u64 [a0 + 0x20]
  2724: 7b 17 38                 u64 [sp + 0x38] = a0
  2727: 33 07 02                 a0 = 0x2
  2730: 33 08                    a1 = 0
  2732: 33 09                    a2 = 0
  2734: 64 5a                    a3 = s0
  2736: 33 00 46                 ra = 0x46
  2739: 0a 64                    ecalli 100 // 'log'
  2741: 01                       fallthrough
      :                          @135 [@dyn 35]
  2742: 82 1b 38                 a4 = u64 [sp + 0x38]
  2745: 82 17 70                 a0 = u64 [sp + 0x70]
  2748: c8 b7 07                 a0 = a0 + a4
  2751: 53 37 00 00 f0 ae fd     jump @117 if a0 <u 4293918720
      :                          @136
  2758: 82 67                    a0 = u64 [s1]
  2760: c9 76 08                 a1 = s1 - a0
  2763: ab 58 a2 fd              jump @117 if a1 != s0
      :                          @137
  2767: c9 b7 08                 a1 = a0 - a4
  2770: 01                       fallthrough
      :                          @138
  2771: 82 69                    a2 = u64 [s1]
  2773: ab 79 f1                 jump @136 if a2 != a0
      :                          @139
  2776: 7b 68                    u64 [s1] = a1
  2778: 33 0a                    a3 = 0
  2780: 01                       fallthrough
      :                          @140
  2781: ab 79 e9                 jump @136 if a2 != a0
      :                          @141
  2784: 28 8d fd                 jump @117
      :                          @142
  2787: 49 18 50                 u64 [a1 + 80] = 0
  2790: 49 18 48                 u64 [a1 + 72] = 0
  2793: 49 18 40                 u64 [a1 + 64] = 0
  2796: 49 18 38                 u64 [a1 + 56] = 0
  2799: 14 07 00 00 ff ff 00 00 00 00 a0 = 0xffff0000
  2809: 7b 87 20                 u64 [a1 + 0x20] = a0
  2812: 14 07 00 00 fe fe 00 00 00 00 a0 = 0xfefe0000
  2822: 7b 87 28                 u64 [a1 + 0x28] = a0
  2825: 82 87                    a0 = u64 [a1]
  2827: 49 18 30                 u64 [a1 + 48] = 0
  2830: 49 28 80 00              u64 [a1 + 128] = 0
  2834: 7b 8a 58                 u64 [a1 + 0x58] = a3
  2837: 97 77 0c                 a0 = a0 << 0xc
  2840: 7b 87 60                 u64 [a1 + 0x60] = a0
  2843: 82 17 08                 a0 = u64 [sp + 0x8]
  2846: 7b 87 68                 u64 [a1 + 0x68] = a0
  2849: 82 17 68                 a0 = u64 [sp + 0x68]
  2852: 7b 87 70                 u64 [a1 + 0x70] = a0
  2855: 82 17 60                 a0 = u64 [sp + 0x60]
  2858: 7b 87 78                 u64 [a1 + 0x78] = a0
  2861: 95 17 18 51 01           a0 = sp + 0x15118
  2866: 7b 87 20 01              u64 [a1 + 0x120] = a0
  2870: 33 07 0a                 a0 = 0xa
  2873: 7b 87 28 01              u64 [a1 + 0x128] = a0
  2877: 33 07 68 02 01           a0 = 0x10268
  2882: 7b 87 60 01              u64 [a1 + 0x160] = a0
  2886: 49 28 68 01 01           u64 [a1 + 360] = 0x1
  2891: 49 28 80 01              u64 [a1 + 384] = 0
  2895: 95 17 18 52 01           a0 = sp + 0x15218
  2900: 7b 87 70 01              u64 [a1 + 0x170] = a0
  2904: 49 28 78 01 01           u64 [a1 + 376] = 0x1
  2909: 95 17 80 51 01           a0 = sp + 0x15180
  2914: 95 16 f8 50 01           s1 = sp + 0x150f8
  2919: 95 18 58 52 01           a1 = sp + 0x15258
  2924: 50 10 48 6f 0a           ra = 72, jump @316
      :                          @143 [@dyn 36]
  2929: 82 65 90 00              s0 = u64 [s1 + 0x90]
  2933: 82 6b 98 00              a4 = u64 [s1 + 0x98]
  2937: 82 66 88 00              s1 = u64 [s1 + 0x88]
  2941: 33 07 02                 a0 = 0x2
  2944: 33 08                    a1 = 0
  2946: 33 09                    a2 = 0
  2948: 64 5a                    a3 = s0
  2950: 33 00 4a                 ra = 0x4a
  2953: 0a 64                    ecalli 100 // 'log'
  2955: 01                       fallthrough
      :                          @144 [@dyn 37]
  2956: 82 17 70                 a0 = u64 [sp + 0x70]
  2959: c8 67 07                 a0 = a0 + s1
  2962: 53 37 00 00 f0 25        jump @150 if a0 <u 4293918720
      :                          @145
  2968: 33 07 20 00 03           a0 = 0x30020
  2973: 95 77 00 00 10           a0 = a0 + 0x100000
  2978: 01                       fallthrough
      :                          @146
  2979: 82 78                    a1 = u64 [a0]
  2981: c9 87 09                 a2 = a0 - a1
  2984: ab 59 0f                 jump @150 if a2 != s0
      :                          @147
  2987: c9 68 09                 a2 = a1 - s1
  2990: 01                       fallthrough
      :                          @148
  2991: 82 7a                    a3 = u64 [a0]
  2993: ab 8a f2                 jump @146 if a3 != a1
      :                          @149
  2996: 7b 79                    u64 [a0] = a2
  2998: 01                       fallthrough
      :                          @150
  2999: 95 14 f8 50 01           t2 = sp + 0x150f8
  3004: 82 43 20                 t1 = u64 [t2 + 0x20]
  3007: 82 49 28                 a2 = u64 [t2 + 0x28]
  3010: 82 40 30                 ra = u64 [t2 + 0x30]
  3013: 82 4a 38                 a3 = u64 [t2 + 0x38]
  3016: 82 4b 40                 a4 = u64 [t2 + 0x40]
  3019: 82 4c 48                 a5 = u64 [t2 + 0x48]
  3022: 82 46 50                 s1 = u64 [t2 + 0x50]
  3025: 82 45 58                 s0 = u64 [t2 + 0x58]
  3028: 82 42 60                 t0 = u64 [t2 + 0x60]
  3031: 49 24 88 00 00 00 01     u64 [t2 + 136] = 0x10000
  3038: 82 47 68                 a0 = u64 [t2 + 0x68]
  3041: 7b 43 90 00              u64 [t2 + 0x90] = t1
  3045: 82 48 70                 a1 = u64 [t2 + 0x70]
  3048: 7b 49 98 00              u64 [t2 + 0x98] = a2
  3052: 82 49 78                 a2 = u64 [t2 + 0x78]
  3055: 7b 40 a0 00              u64 [t2 + 0xa0] = ra
  3059: 82 43 80 00              t1 = u64 [t2 + 0x80]
  3063: 7b 4a a8 00              u64 [t2 + 0xa8] = a3
  3067: 7b 4b b0 00              u64 [t2 + 0xb0] = a4
  3071: 7b 4c b8 00              u64 [t2 + 0xb8] = a5
  3075: 7b 46 c0 00              u64 [t2 + 0xc0] = s1
  3079: 7b 45 c8 00              u64 [t2 + 0xc8] = s0
  3083: 7b 42 d0 00              u64 [t2 + 0xd0] = t0
  3087: 7b 47 d8 00              u64 [t2 + 0xd8] = a0
  3091: 7b 48 e0 00              u64 [t2 + 0xe0] = a1
  3095: 95 18 f8 50 01           a1 = sp + 0x150f8
  3100: 7b 89 e8 00              u64 [a1 + 0xe8] = a2
  3104: 7b 83 f0 00              u64 [a1 + 0xf0] = t1
  3108: 33 07 06                 a0 = 0x6
  3111: 7b 17 60                 u64 [sp + 0x60] = a0
  3114: 33 07 a0 02 01           a0 = 0x102a0
  3119: 7b 17 38                 u64 [sp + 0x38] = a0
  3122: 33 07 d8 02 01           a0 = 0x102d8
  3127: 7b 17 30                 u64 [sp + 0x30] = a0
  3130: 33 06 20 00 03           s1 = 0x30020
  3135: 95 66 00 00 10           s1 = s1 + 0x100000
  3140: 01                       fallthrough
      :                          @151
  3141: 7b 88 08 01              u64 [a1 + 0x108] = a1
  3145: 82 17 60                 a0 = u64 [sp + 0x60]
  3148: 7b 87 10 01              u64 [a1 + 0x110] = a0
  3152: 82 17 38                 a0 = u64 [sp + 0x38]
  3155: 7b 87 60 01              u64 [a1 + 0x160] = a0
  3159: 49 28 68 01 01           u64 [a1 + 360] = 0x1
  3164: 49 28 80 01              u64 [a1 + 384] = 0
  3168: 95 19 00 52 01           a2 = sp + 0x15200
  3173: 7b 89 70 01              u64 [a1 + 0x170] = a2
  3177: 49 28 78 01 01           u64 [a1 + 376] = 0x1
  3182: 95 17 18 52 01           a0 = sp + 0x15218
  3187: 95 18 58 52 01           a1 = sp + 0x15258
  3192: 50 10 4c 63 09           ra = 76, jump @316
      :                          @152 [@dyn 38]
  3197: 95 17 f8 50 01           a0 = sp + 0x150f8
  3202: 82 75 28 01              s0 = u64 [a0 + 0x128]
  3206: 82 7b 30 01              a4 = u64 [a0 + 0x130]
  3210: 82 77 20 01              a0 = u64 [a0 + 0x120]
  3214: 7b 17 68                 u64 [sp + 0x68] = a0
  3217: 33 07 02                 a0 = 0x2
  3220: 33 08                    a1 = 0
  3222: 33 09                    a2 = 0
  3224: 64 5a                    a3 = s0
  3226: 33 00 4e                 ra = 0x4e
  3229: 0a 64                    ecalli 100 // 'log'
  3231: 01                       fallthrough
      :                          @153 [@dyn 39]
  3232: 82 1b 68                 a4 = u64 [sp + 0x68]
  3235: 82 17 70                 a0 = u64 [sp + 0x70]
  3238: c8 b7 07                 a0 = a0 + a4
  3241: 53 37 00 00 f0 1a        jump @158 if a0 <u 4293918720
      :                          @154
  3247: 82 67                    a0 = u64 [s1]
  3249: c9 76 08                 a1 = s1 - a0
  3252: ab 58 0f                 jump @158 if a1 != s0
      :                          @155
  3255: c9 b7 08                 a1 = a0 - a4
  3258: 01                       fallthrough
      :                          @156
  3259: 82 69                    a2 = u64 [s1]
  3261: ab 79 f2                 jump @154 if a2 != a0
      :                          @157
  3264: 7b 68                    u64 [s1] = a1
  3266: 01                       fallthrough
      :                          @158
  3267: 95 17 a8 40 01           a0 = sp + 0x140a8
  3272: 82 77 40                 a0 = u64 [a0 + 0x40]
  3275: 95 18 80 51 01           a1 = sp + 0x15180
  3280: 0a 19                    ecalli 25 // 'invoke'
  3282: 95 19 f8 50 01           a2 = sp + 0x150f8
  3287: 7b 97 f8 00              u64 [a2 + 0xf8] = a0
  3291: 7b 98 00 01              u64 [a2 + 0x100] = a1
  3295: 95 17 e8 40 01           a0 = sp + 0x140e8
  3300: 7b 97 60 01              u64 [a2 + 0x160] = a0
  3304: 82 17 60                 a0 = u64 [sp + 0x60]
  3307: 7b 97 68 01              u64 [a2 + 0x168] = a0
  3311: 95 18 f0 51 01           a1 = sp + 0x151f0
  3316: 7b 98 70 01              u64 [a2 + 0x170] = a1
  3320: 7b 97 78 01              u64 [a2 + 0x178] = a0
  3324: 95 18 f8 51 01           a1 = sp + 0x151f8
  3329: 7b 98 80 01              u64 [a2 + 0x180] = a1
  3333: 7b 97 88 01              u64 [a2 + 0x188] = a0
  3337: 82 17 30                 a0 = u64 [sp + 0x30]
  3340: 7b 97 20 01              u64 [a2 + 0x120] = a0
  3344: 49 29 28 01 03           u64 [a2 + 296] = 0x3
  3349: 49 29 40 01              u64 [a2 + 320] = 0
  3353: 95 17 58 52 01           a0 = sp + 0x15258
  3358: 7b 97 30 01              u64 [a2 + 0x130] = a0
  3362: 49 29 38 01 03           u64 [a2 + 312] = 0x3
  3367: 95 17 00 52 01           a0 = sp + 0x15200
  3372: 95 18 18 52 01           a1 = sp + 0x15218
  3377: 50 10 50 aa 08           ra = 80, jump @316
      :                          @159 [@dyn 40]
  3382: 95 17 f8 50 01           a0 = sp + 0x150f8
  3387: 82 75 10 01              s0 = u64 [a0 + 0x110]
  3391: 82 7b 18 01              a4 = u64 [a0 + 0x118]
  3395: 82 77 08 01              a0 = u64 [a0 + 0x108]
  3399: 7b 17 68                 u64 [sp + 0x68] = a0
  3402: 33 07 02                 a0 = 0x2
  3405: 33 08                    a1 = 0
  3407: 33 09                    a2 = 0
  3409: 64 5a                    a3 = s0
  3411: 33 00 52                 ra = 0x52
  3414: 0a 64                    ecalli 100 // 'log'
  3416: 01                       fallthrough
      :                          @160 [@dyn 41]
  3417: 82 1b 68                 a4 = u64 [sp + 0x68]
  3420: 82 17 70                 a0 = u64 [sp + 0x70]
  3423: c8 b7 07                 a0 = a0 + a4
  3426: 53 37 00 00 f0 1a        jump @165 if a0 <u 4293918720
      :                          @161
  3432: 82 67                    a0 = u64 [s1]
  3434: c9 76 08                 a1 = s1 - a0
  3437: ab 58 0f                 jump @165 if a1 != s0
      :                          @162
  3440: c9 b7 08                 a1 = a0 - a4
  3443: 01                       fallthrough
      :                          @163
  3444: 82 69                    a2 = u64 [s1]
  3446: ab 79 f2                 jump @161 if a2 != a0
      :                          @164
  3449: 7b 68                    u64 [s1] = a1
  3451: 01                       fallthrough
      :                          @165
  3452: 95 18 f8 50 01           a1 = sp + 0x150f8
  3457: 82 87 f8 00              a0 = u64 [a1 + 0xf8]
  3461: 82 88 00 01              a1 = u64 [a1 + 0x100]
  3465: 85 77 03                 a0 = a0 ^ 0x3
  3468: 85 88 64                 a1 = a1 ^ 0x64
  3471: d4 87 05                 s0 = a0 | a1
  3474: 95 17 18 51 01           a0 = sp + 0x15118
  3479: 33 09 68                 a2 = 0x68
  3482: 95 18 88 51 01           a1 = sp + 0x15188
  3487: 50 10 54 b6 0a           ra = 84, jump @366
      :                          @166 [@dyn 42]
  3492: 95 17 f8 50 01           a0 = sp + 0x150f8
  3497: 82 78 58                 a1 = u64 [a0 + 0x58]
  3500: 7b 18 68                 u64 [sp + 0x68] = a1
  3503: 52 05 93 00              jump @169 if s0 != 0
      :                          @167
  3507: 82 78 60                 a1 = u64 [a0 + 0x60]
  3510: 7b 18 48                 u64 [sp + 0x48] = a1
  3513: 82 75 68                 s0 = u64 [a0 + 0x68]
  3516: 7b 15 40                 u64 [sp + 0x40] = s0
  3519: 82 78 70                 a1 = u64 [a0 + 0x70]
  3522: 7b 18 58                 u64 [sp + 0x58] = a1
  3525: 82 78 78                 a1 = u64 [a0 + 0x78]
  3528: 7b 18 50                 u64 [sp + 0x50] = a1
  3531: 49 27 58 01              u64 [a0 + 344] = 0
  3535: 49 27 50 01              u64 [a0 + 336] = 0
  3539: 49 27 48 01              u64 [a0 + 328] = 0
  3543: 49 27 40 01              u64 [a0 + 320] = 0
  3547: 49 27 38 01              u64 [a0 + 312] = 0
  3551: 49 27 30 01              u64 [a0 + 304] = 0
  3555: 49 27 28 01              u64 [a0 + 296] = 0
  3559: 49 27 20 01              u64 [a0 + 288] = 0
  3563: 95 17 58 52 01           a0 = sp + 0x15258
  3568: 33 09 00 01              a2 = 0x100
  3572: 33 08                    a1 = 0
  3574: 50 10 56 11 0b           ra = 86, jump @384
      :                          @168 [@dyn 43]
  3579: 95 17 a8 40 01           a0 = sp + 0x140a8
  3584: 82 77 40                 a0 = u64 [a0 + 0x40]
  3587: 95 18 18 52 01           a1 = sp + 0x15218
  3592: 82 19 48                 a2 = u64 [sp + 0x48]
  3595: 64 5a                    a3 = s0
  3597: 0a 15                    ecalli 21 // 'peek'
  3599: 95 17 a8 40 01           a0 = sp + 0x140a8
  3604: 82 77 40                 a0 = u64 [a0 + 0x40]
  3607: 95 18 58 52 01           a1 = sp + 0x15258
  3612: 82 19 58                 a2 = u64 [sp + 0x58]
  3615: 82 15 50                 s0 = u64 [sp + 0x50]
  3618: 64 5a                    a3 = s0
  3620: 0a 15                    ecalli 21 // 'peek'
  3622: 95 18 18 52 01           a1 = sp + 0x15218
  3627: 95 1a 58 52 01           a3 = sp + 0x15258
  3632: 82 17 68                 a0 = u64 [sp + 0x68]
  3635: 82 19 40                 a2 = u64 [sp + 0x40]
  3638: 64 5b                    a4 = s0
  3640: 0a 64                    ecalli 100 // 'log'
  3642: 95 18 f8 50 01           a1 = sp + 0x150f8
  3647: 28 06 fe                 jump @151
      :                          @169
  3650: 95 17 f8 40 01           a0 = sp + 0x140f8
  3655: 33 09 00 10              a2 = 0x1000
  3659: 33 05 00 10              s0 = 0x1000
  3663: 33 08                    a1 = 0
  3665: 50 10 58 b6 0a           ra = 88, jump @384
      :                          @170 [@dyn 44]
  3670: 95 1a a8 40 01           a3 = sp + 0x140a8
  3675: 82 a7 40                 a0 = u64 [a3 + 0x40]
  3678: 7a a7 48                 u32 [a3 + 0x48] = a0
  3681: 82 16 68                 s1 = u64 [sp + 0x68]
  3684: 98 68 0c                 a1 = s1 >> 0xc
  3687: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  3690: 33 0a 00 10              a3 = 0x1000
  3694: 95 18 f8 40 01           a1 = sp + 0x140f8
  3699: 64 69                    a2 = s1
  3701: 0a 15                    ecalli 21 // 'peek'
  3703: 83 55 08                 i32 s0 = s0 + 0x8
  3706: 95 17 f0 40 01           a0 = sp + 0x140f0
  3711: 64 58                    a1 = s0
  3713: 0a 13                    ecalli 19 // 'export'
  3715: 33 09 00 10              a2 = 0x1000
  3719: 95 17 f8 40 01           a0 = sp + 0x140f8
  3724: 33 08                    a1 = 0
  3726: 50 10 5a 79 0a           ra = 90, jump @384
      :                          @171 [@dyn 45]
  3731: 95 1a a8 40 01           a3 = sp + 0x140a8
  3736: 82 a7 40                 a0 = u64 [a3 + 0x40]
  3739: 7a a7 48                 u32 [a3 + 0x48] = a0
  3742: 95 69 00 10              a2 = s1 + 0x1000
  3746: 98 98 0c                 a1 = a2 >> 0xc
  3749: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  3752: 33 0a 00 10              a3 = 0x1000
  3756: 95 18 f8 40 01           a1 = sp + 0x140f8
  3761: 0a 15                    ecalli 21 // 'peek'
  3763: 95 17 f0 40 01           a0 = sp + 0x140f0
  3768: 64 58                    a1 = s0
  3770: 0a 13                    ecalli 19 // 'export'
  3772: 33 09 00 10              a2 = 0x1000
  3776: 95 17 f8 40 01           a0 = sp + 0x140f8
  3781: 33 08                    a1 = 0
  3783: 50 10 5c 40 0a           ra = 92, jump @384
      :                          @172 [@dyn 46]
  3788: 95 1a a8 40 01           a3 = sp + 0x140a8
  3793: 82 a7 40                 a0 = u64 [a3 + 0x40]
  3796: 7a a7 48                 u32 [a3 + 0x48] = a0
  3799: 95 69 00 20              a2 = s1 + 0x2000
  3803: 98 98 0c                 a1 = a2 >> 0xc
  3806: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  3809: 33 0a 00 10              a3 = 0x1000
  3813: 95 18 f8 40 01           a1 = sp + 0x140f8
  3818: 0a 15                    ecalli 21 // 'peek'
  3820: 95 17 f0 40 01           a0 = sp + 0x140f0
  3825: 64 58                    a1 = s0
  3827: 0a 13                    ecalli 19 // 'export'
  3829: 33 09 00 10              a2 = 0x1000
  3833: 95 17 f8 40 01           a0 = sp + 0x140f8
  3838: 33 08                    a1 = 0
  3840: 50 10 5e 07 0a           ra = 94, jump @384
      :                          @173 [@dyn 47]
  3845: 95 18 a8 40 01           a1 = sp + 0x140a8
  3850: 82 87 40                 a0 = u64 [a1 + 0x40]
  3853: 7a 87 48                 u32 [a1 + 0x48] = a0
  3856: 95 1a a8 40 01           a3 = sp + 0x140a8
  3861: 95 69 00 30              a2 = s1 + 0x3000
  3865: 98 98 0c                 a1 = a2 >> 0xc
  3868: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  3871: 33 0a 00 10              a3 = 0x1000
  3875: 95 18 f8 40 01           a1 = sp + 0x140f8
  3880: 0a 15                    ecalli 21 // 'peek'
  3882: 95 17 f0 40 01           a0 = sp + 0x140f0
  3887: 64 58                    a1 = s0
  3889: 64 56                    s1 = s0
  3891: 0a 13                    ecalli 19 // 'export'
  3893: 33 09 00 10              a2 = 0x1000
  3897: 95 17 f8 40 01           a0 = sp + 0x140f8
  3902: 33 08                    a1 = 0
  3904: 50 10 60 c7 09           ra = 96, jump @384
      :                          @174 [@dyn 48]
  3909: 95 1a a8 40 01           a3 = sp + 0x140a8
  3914: 82 a7 40                 a0 = u64 [a3 + 0x40]
  3917: 7a a7 48                 u32 [a3 + 0x48] = a0
  3920: 82 15 68                 s0 = u64 [sp + 0x68]
  3923: 95 59 00 40              a2 = s0 + 0x4000
  3927: 98 98 0c                 a1 = a2 >> 0xc
  3930: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  3933: 33 0a 00 10              a3 = 0x1000
  3937: 95 18 f8 40 01           a1 = sp + 0x140f8
  3942: 0a 15                    ecalli 21 // 'peek'
  3944: 95 17 f0 40 01           a0 = sp + 0x140f0
  3949: 64 68                    a1 = s1
  3951: 0a 13                    ecalli 19 // 'export'
  3953: 33 09 00 10              a2 = 0x1000
  3957: 95 17 f8 40 01           a0 = sp + 0x140f8
  3962: 33 08                    a1 = 0
  3964: 50 10 62 8b 09           ra = 98, jump @384
      :                          @175 [@dyn 49]
  3969: 95 18 a8 40 01           a1 = sp + 0x140a8
  3974: 82 87 40                 a0 = u64 [a1 + 0x40]
  3977: 7a 87 48                 u32 [a1 + 0x48] = a0
  3980: 95 1a a8 40 01           a3 = sp + 0x140a8
  3985: 95 59 00 50              a2 = s0 + 0x5000
  3989: 98 98 0c                 a1 = a2 >> 0xc
  3992: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  3995: 33 0a 00 10              a3 = 0x1000
  3999: 95 18 f8 40 01           a1 = sp + 0x140f8
  4004: 0a 15                    ecalli 21 // 'peek'
  4006: 95 17 f0 40 01           a0 = sp + 0x140f0
  4011: 7b 16 60                 u64 [sp + 0x60] = s1
  4014: 64 68                    a1 = s1
  4016: 0a 13                    ecalli 19 // 'export'
  4018: 33 09 00 10              a2 = 0x1000
  4022: 95 17 f8 40 01           a0 = sp + 0x140f8
  4027: 33 08                    a1 = 0
  4029: 50 10 64 4a 09           ra = 100, jump @384
      :                          @176 [@dyn 50]
  4034: 95 1a a8 40 01           a3 = sp + 0x140a8
  4039: 82 a7 40                 a0 = u64 [a3 + 0x40]
  4042: 7a a7 48                 u32 [a3 + 0x48] = a0
  4045: 95 59 00 60              a2 = s0 + 0x6000
  4049: 98 98 0c                 a1 = a2 >> 0xc
  4052: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  4055: 33 0a 00 10              a3 = 0x1000
  4059: 95 18 f8 40 01           a1 = sp + 0x140f8
  4064: 0a 15                    ecalli 21 // 'peek'
  4066: 95 17 f0 40 01           a0 = sp + 0x140f0
  4071: 64 68                    a1 = s1
  4073: 0a 13                    ecalli 19 // 'export'
  4075: 33 09 00 10              a2 = 0x1000
  4079: 95 17 f8 40 01           a0 = sp + 0x140f8
  4084: 33 08                    a1 = 0
  4086: 50 10 66 11 09           ra = 102, jump @384
      :                          @177 [@dyn 51]
  4091: 95 18 a8 40 01           a1 = sp + 0x140a8
  4096: 82 87 40                 a0 = u64 [a1 + 0x40]
  4099: 7a 87 48                 u32 [a1 + 0x48] = a0
  4102: 95 1a a8 40 01           a3 = sp + 0x140a8
  4107: 95 59 00 70              a2 = s0 + 0x7000
  4111: 98 98 0c                 a1 = a2 >> 0xc
  4114: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  4117: 33 0a 00 10              a3 = 0x1000
  4121: 95 18 f8 40 01           a1 = sp + 0x140f8
  4126: 0a 15                    ecalli 21 // 'peek'
  4128: 95 17 f0 40 01           a0 = sp + 0x140f0
  4133: 82 16 60                 s1 = u64 [sp + 0x60]
  4136: 64 68                    a1 = s1
  4138: 0a 13                    ecalli 19 // 'export'
  4140: 33 09 00 10              a2 = 0x1000
  4144: 95 17 f8 40 01           a0 = sp + 0x140f8
  4149: 33 08                    a1 = 0
  4151: 50 10 68 d0 08           ra = 104, jump @384
      :                          @178 [@dyn 52]
  4156: 95 1a a8 40 01           a3 = sp + 0x140a8
  4161: 82 a7 40                 a0 = u64 [a3 + 0x40]
  4164: 7a a7 48                 u32 [a3 + 0x48] = a0
  4167: 95 59 00 80 00           a2 = s0 + 0x8000
  4172: 98 98 0c                 a1 = a2 >> 0xc
  4175: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  4178: 95 15 a8 40 01           s0 = sp + 0x140a8
  4183: 33 0a 00 10              a3 = 0x1000
  4187: 95 18 f8 40 01           a1 = sp + 0x140f8
  4192: 0a 15                    ecalli 21 // 'peek'
  4194: 95 17 f0 40 01           a0 = sp + 0x140f0
  4199: 64 68                    a1 = s1
  4201: 0a 13                    ecalli 19 // 'export'
  4203: 82 57 40                 a0 = u64 [s0 + 0x40]
  4206: 0a 1a                    ecalli 26 // 'expunge'
  4208: 33 07 06                 a0 = 0x6
  4211: 95 18 f8 50 01           a1 = sp + 0x150f8
  4216: 7b 87 10 01              u64 [a1 + 0x110] = a0
  4220: 33 07 38 03 01           a0 = 0x10338
  4225: 7b 87 60 01              u64 [a1 + 0x160] = a0
  4229: 95 17 00 52 01           a0 = sp + 0x15200
  4234: 7b 87 70 01              u64 [a1 + 0x170] = a0
  4238: 49 28 68 01 01           u64 [a1 + 360] = 0x1
  4243: 49 28 78 01 01           u64 [a1 + 376] = 0x1
  4248: 7b 88 08 01              u64 [a1 + 0x108] = a1
  4252: 49 28 80 01              u64 [a1 + 384] = 0
  4256: 95 16 f8 50 01           s1 = sp + 0x150f8
  4261: 95 17 18 52 01           a0 = sp + 0x15218
  4266: 95 18 58 52 01           a1 = sp + 0x15258
  4271: 50 10 6a 2c 05           ra = 106, jump @316
      :                          @179 [@dyn 53]
  4276: 82 65 28 01              s0 = u64 [s1 + 0x128]
  4280: 82 6b 30 01              a4 = u64 [s1 + 0x130]
  4284: 82 66 20 01              s1 = u64 [s1 + 0x120]
  4288: 33 07 02                 a0 = 0x2
  4291: 33 08                    a1 = 0
  4293: 33 09                    a2 = 0
  4295: 64 5a                    a3 = s0
  4297: 33 00 6c                 ra = 0x6c
  4300: 0a 64                    ecalli 100 // 'log'
  4302: 01                       fallthrough
      :                          @180 [@dyn 54]
  4303: 82 17 70                 a0 = u64 [sp + 0x70]
  4306: c8 67 07                 a0 = a0 + s1
  4309: 53 37 00 00 f0 88 f3     jump @72 if a0 <u 4293918720
      :                          @181
  4316: 33 07 20 00 03           a0 = 0x30020
  4321: 95 77 00 00 10           a0 = a0 + 0x100000
  4326: 01                       fallthrough
      :                          @182
  4327: 82 78                    a1 = u64 [a0]
  4329: c9 87 09                 a2 = a0 - a1
  4332: ab 59 71 f3              jump @72 if a2 != s0
      :                          @183
  4336: c9 68 09                 a2 = a1 - s1
  4339: 01                       fallthrough
      :                          @184
  4340: 82 7a                    a3 = u64 [a0]
  4342: ab 8a f1                 jump @182 if a3 != a1
      :                          @185
  4345: 7b 79                    u64 [a0] = a2
  4347: 33 0b                    a4 = 0
  4349: 01                       fallthrough
      :                          @186
  4350: ab 8a e9                 jump @182 if a3 != a1
      :                          @187
  4353: 28 5c f3                 jump @72
      :                          @188
  4356: 00                       trap
      :                          @189 [export #1: 'accumulate']
  4357: 95 11 68 ff              sp = sp + 0xffffffffffffff68
  4361: 7b 10 90 00              u64 [sp + 0x90] = ra
  4365: 7b 15 88 00              u64 [sp + 0x88] = s0
  4369: 7b 16 80 00              u64 [sp + 0x80] = s1
  4373: 33 09 08                 a2 = 0x8
  4376: ac 98 60 02              jump @254 if a1 <u a2
      :                          @190
  4380: 51 17 fc 75 02           jump @255 if a0 == 4294967292
      :                          @191
  4385: 51 07 70 02              jump @255 if a0 == 0
      :                          @192
  4389: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
  4392: 95 75 08                 s0 = a0 + 0x8
  4395: 51 0a 45                 jump @202 if a3 == 0
      :                          @193
  4398: 7d 58                    a1 = i8 [s0]
  4400: 33 06 01                 s1 = 0x1
  4403: 59 08 40                 jump @203 if a1 >=s 0
      :                          @194
  4406: 84 89 ff 00              a2 = a1 & 0xff
  4410: 33 06 02                 s1 = 0x2
  4413: 53 29 c0 00 2d           jump @200 if a2 <u 192
      :                          @195
  4418: 33 06 03                 s1 = 0x3
  4421: 53 29 e0 00 25           jump @200 if a2 <u 224
      :                          @196
  4426: 33 06 04                 s1 = 0x4
  4429: 53 29 f0 00 1d           jump @200 if a2 <u 240
      :                          @197
  4434: 33 06 05                 s1 = 0x5
  4437: 53 29 f8 00 15           jump @200 if a2 <u 248
      :                          @198
  4442: 33 06 06                 s1 = 0x6
  4445: 53 29 fc 00 0d           jump @200 if a2 <u 252
      :                          @199
  4450: 88 98 fe 00              a1 = a2 <u 0xfe
  4454: 9a 86 08                 s1 = 0x8 - a1
  4457: 01                       fallthrough
      :                          @200
  4458: ae 6a 09                 jump @203 if a3 >=u s1
      :                          @201
  4461: 28 0b 02                 jump @254
      :                          @202
  4464: 33 06                    s1 = 0
  4466: 01                       fallthrough
      :                          @203
  4467: 7b 16                    u64 [sp] = s1
  4469: 64 57                    a0 = s0
  4471: 64 68                    a1 = s1
  4473: 64 a6                    s1 = a3
  4475: 50 10 6e 3a 11           ra = 110, jump @570
      :                          @204 [@dyn 55]
  4480: 82 1a                    a3 = u64 [sp]
  4482: 51 07 f6 01              jump @254 if a0 == 0
      :                          @205
  4486: e4 a6 07                 a0 = maxu(s1, a3)
  4489: c9 a7 07                 a0 = a0 - a3
  4492: 53 17 60 ec 01           jump @254 if a0 <u 96
      :                          @206
  4497: c8 5a 08                 a1 = a3 + s0
  4500: 95 76 a0                 s1 = a0 + 0xffffffffffffffa0
  4503: 95 87 60                 a0 = a1 + 0x60
  4506: 7b 17                    u64 [sp] = a0
  4508: 51 06 4c                 jump @217 if s1 == 0
      :                          @207
  4511: 7d 78                    a1 = i8 [a0]
  4513: 33 05 01                 s0 = 0x1
  4516: 59 08 37                 jump @214 if a1 >=s 0
      :                          @208
  4519: 84 89 ff 00              a2 = a1 & 0xff
  4523: 33 05 02                 s0 = 0x2
  4526: 53 29 c0 00 2d           jump @214 if a2 <u 192
      :                          @209
  4531: 33 05 03                 s0 = 0x3
  4534: 53 29 e0 00 25           jump @214 if a2 <u 224
      :                          @210
  4539: 33 05 04                 s0 = 0x4
  4542: 53 29 f0 00 1d           jump @214 if a2 <u 240
      :                          @211
  4547: 33 05 05                 s0 = 0x5
  4550: 53 29 f8 00 15           jump @214 if a2 <u 248
      :                          @212
  4555: 33 05 06                 s0 = 0x6
  4558: 53 29 fc 00 0d           jump @214 if a2 <u 252
      :                          @213
  4563: 88 98 fe 00              a1 = a2 <u 0xfe
  4567: 9a 85 08                 s0 = 0x8 - a1
  4570: 01                       fallthrough
      :                          @214
  4571: ac 56 b7 01              jump @256 if s1 <u s0
      :                          @215
  4575: 64 58                    a1 = s0
  4577: 50 10 70 d4 10           ra = 112, jump @570
      :                          @216 [@dyn 56]
  4582: 28 07                    jump @218
      :                          @217
  4584: 33 05                    s0 = 0
  4586: 33 07                    a0 = 0
  4588: 01                       fallthrough
      :                          @218
  4589: e4 56 08                 a1 = maxu(s1, s0)
  4592: c9 58 08                 a1 = a1 - s0
  4595: e4 78 08                 a1 = maxu(a1, a0)
  4598: c9 78 08                 a1 = a1 - a0
  4601: 33 09 20                 a2 = 0x20
  4604: ac 98 7c 01              jump @254 if a1 <u a2
      :                          @219
  4608: 82 19                    a2 = u64 [sp]
  4610: c8 95 05                 s0 = s0 + a2
  4613: c8 57 07                 a0 = a0 + s0
  4616: 95 85 e0                 s0 = a1 + 0xffffffffffffffe0
  4619: 95 77 20                 a0 = a0 + 0x20
  4622: 7b 17                    u64 [sp] = a0
  4624: 51 05 50                 jump @231 if s0 == 0
      :                          @220
  4627: 7d 78                    a1 = i8 [a0]
  4629: 33 06 01                 s1 = 0x1
  4632: 59 08 37                 jump @227 if a1 >=s 0
      :                          @221
  4635: 84 89 ff 00              a2 = a1 & 0xff
  4639: 33 06 02                 s1 = 0x2
  4642: 53 29 c0 00 2d           jump @227 if a2 <u 192
      :                          @222
  4647: 33 06 03                 s1 = 0x3
  4650: 53 29 e0 00 25           jump @227 if a2 <u 224
      :                          @223
  4655: 33 06 04                 s1 = 0x4
  4658: 53 29 f0 00 1d           jump @227 if a2 <u 240
      :                          @224
  4663: 33 06 05                 s1 = 0x5
  4666: 53 29 f8 00 15           jump @227 if a2 <u 248
      :                          @225
  4671: 33 06 06                 s1 = 0x6
  4674: 53 29 fc 00 0d           jump @227 if a2 <u 252
      :                          @226
  4679: 88 98 fe 00              a1 = a2 <u 0xfe
  4683: 9a 86 08                 s1 = 0x8 - a1
  4686: 01                       fallthrough
      :                          @227
  4687: ac 65 44 01              jump @257 if s0 <u s1
      :                          @228
  4691: 64 68                    a1 = s1
  4693: 50 10 72 60 10           ra = 114, jump @570
      :                          @229 [@dyn 57]
  4698: ac 56 0c                 jump @232 if s1 <u s0
      :                          @230
  4701: 28 1b 01                 jump @254
      :                          @231
  4704: 33 06                    s1 = 0
  4706: 54 05 16 01              jump @254 if s0 <=u 0
      :                          @232
  4710: 82 17                    a0 = u64 [sp]
  4712: c8 67 07                 a0 = a0 + s1
  4715: 7c 78                    a1 = u8 [a0]
  4717: 52 08 0b 01              jump @254 if a1 != 0
      :                          @233
  4721: e4 65 08                 a1 = maxu(s0, s1)
  4724: c9 68 08                 a1 = a1 - s1
  4727: 95 77 01                 a0 = a0 + 0x1
  4730: 33 09 01                 a2 = 0x1
  4733: e4 98 06                 s1 = maxu(a1, a2)
  4736: 33 09 02                 a2 = 0x2
  4739: 95 6a ff                 a3 = s1 + 0xffffffffffffffff
  4742: ae 98 0b                 jump @235 if a1 >=u a2
      :                          @234
  4745: 64 76                    s1 = a0
  4747: 33 05                    s0 = 0
  4749: 33 07                    a0 = 0
  4751: 28 50                    jump @245
      :                          @235
  4753: 7d 78                    a1 = i8 [a0]
  4755: 33 05 01                 s0 = 0x1
  4758: 59 08 37                 jump @242 if a1 >=s 0
      :                          @236
  4761: 84 89 ff 00              a2 = a1 & 0xff
  4765: 33 05 02                 s0 = 0x2
  4768: 53 29 c0 00 2d           jump @242 if a2 <u 192
      :                          @237
  4773: 33 05 03                 s0 = 0x3
  4776: 53 29 e0 00 25           jump @242 if a2 <u 224
      :                          @238
  4781: 33 05 04                 s0 = 0x4
  4784: 53 29 f0 00 1d           jump @242 if a2 <u 240
      :                          @239
  4789: 33 05 05                 s0 = 0x5
  4792: 53 29 f8 00 15           jump @242 if a2 <u 248
      :                          @240
  4797: 33 05 06                 s0 = 0x6
  4800: 53 29 fc 00 0d           jump @242 if a2 <u 252
      :                          @241
  4805: 88 98 fe 00              a1 = a2 <u 0xfe
  4809: 9a 85 08                 s0 = 0x8 - a1
  4812: 01                       fallthrough
      :                          @242
  4813: 7b 1a                    u64 [sp] = a3
  4815: ac 5a c5 00              jump @258 if a3 <u s0
      :                          @243
  4819: 64 76                    s1 = a0
  4821: 64 58                    a1 = s0
  4823: 50 10 74 de 0f           ra = 116, jump @570
      :                          @244 [@dyn 58]
  4828: 82 1a                    a3 = u64 [sp]
  4830: 01                       fallthrough
      :                          @245
  4831: e4 5a 08                 a1 = maxu(a3, s0)
  4834: c9 58 08                 a1 = a1 - s0
  4837: e6 78 07                 a0 = minu(a1, a0)
  4840: 52 17 24 90 00           jump @254 if a0 != 36
      :                          @246
  4845: c8 56 07                 a0 = s1 + s0
  4848: 7b 17 08                 u64 [sp + 0x8] = a0
  4851: 80 78 20                 a1 = u32 [a0 + 0x20]
  4854: 7b 18 10                 u64 [sp + 0x10] = a1
  4857: 0a 0e                    ecalli 14 // 'solicit'
  4859: 95 17 08                 a0 = sp + 0x8
  4862: 7b 17 60                 u64 [sp + 0x60] = a0
  4865: 33 07 06                 a0 = 0x6
  4868: 7b 17 68                 u64 [sp + 0x68] = a0
  4871: 95 18 10                 a1 = sp + 0x10
  4874: 7b 18 70                 u64 [sp + 0x70] = a1
  4877: 7b 17 78                 u64 [sp + 0x78] = a0
  4880: 33 07 b8 03 01           a0 = 0x103b8
  4885: 7b 17 30                 u64 [sp + 0x30] = a0
  4888: 49 11 38 02              u64 [sp + 56] = 0x2
  4892: 49 11 50                 u64 [sp + 80] = 0
  4895: 95 18 60                 a1 = sp + 0x60
  4898: 7b 18 40                 u64 [sp + 0x40] = a1
  4901: 49 11 48 02              u64 [sp + 72] = 0x2
  4905: 95 17 18                 a0 = sp + 0x18
  4908: 95 18 30                 a1 = sp + 0x30
  4911: 50 10 76 ac 02           ra = 118, jump @316
      :                          @247 [@dyn 59]
  4916: 82 15 20                 s0 = u64 [sp + 0x20]
  4919: 82 1b 28                 a4 = u64 [sp + 0x28]
  4922: 82 16 18                 s1 = u64 [sp + 0x18]
  4925: 33 07 02                 a0 = 0x2
  4928: 33 08                    a1 = 0
  4930: 33 09                    a2 = 0
  4932: 64 5a                    a3 = s0
  4934: 33 00 78                 ra = 0x78
  4937: 0a 64                    ecalli 100 // 'log'
  4939: 01                       fallthrough
      :                          @248 [@dyn 60]
  4940: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
  4945: 53 38 00 00 f0 27        jump @254 if a1 <u 4293918720
      :                          @249
  4951: 33 07 20 00 03           a0 = 0x30020
  4956: 95 77 00 00 10           a0 = a0 + 0x100000
  4961: 01                       fallthrough
      :                          @250
  4962: 82 78                    a1 = u64 [a0]
  4964: c9 87 09                 a2 = a0 - a1
  4967: ab 59 11                 jump @254 if a2 != s0
      :                          @251
  4970: c9 68 09                 a2 = a1 - s1
  4973: 01                       fallthrough
      :                          @252
  4974: 82 7a                    a3 = u64 [a0]
  4976: ab 8a f2                 jump @250 if a3 != a1
      :                          @253
  4979: 7b 79                    u64 [a0] = a2
  4981: 33 0b                    a4 = 0
  4983: 01                       fallthrough
      :                          @254
  4984: 33 07 00 00 01           a0 = 0x10000
  4989: 33 08                    a1 = 0
  4991: 82 10 90 00              ra = u64 [sp + 0x90]
  4995: 82 15 88 00              s0 = u64 [sp + 0x88]
  4999: 82 16 80 00              s1 = u64 [sp + 0x80]
  5003: 95 11 98 00              sp = sp + 0x98
  5007: 32 00                    ret
      :                          @255
  5009: 00                       trap
      :                          @256
  5010: 00                       trap
      :                          @257
  5011: 00                       trap
      :                          @258
  5012: 00                       trap
      :                          @259 [export #2: 'on_transfer']
  5013: 33 07 00 00 01           a0 = 0x10000
  5018: 33 08                    a1 = 0
  5020: 32 00                    ret
      :                          @260
  5022: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  5025: 7b 10 40                 u64 [sp + 0x40] = ra
  5028: 7b 15 38                 u64 [sp + 0x38] = s0
  5031: 7b 16 30                 u64 [sp + 0x30] = s1
  5034: c8 89 09                 a2 = a2 + a1
  5037: ac 89 52                 jump @268 if a2 <u a1
      :                          @261
  5040: 64 75                    s0 = a0
  5042: 82 77                    a0 = u64 [a0]
  5044: 97 78 01                 a1 = a0 << 0x1
  5047: 33 0a 08                 a3 = 0x8
  5050: e4 a9 09                 a2 = maxu(a2, a3)
  5053: e4 98 06                 s1 = maxu(a1, a2)
  5056: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  5059: 98 88 3f                 a1 = a1 >> 0x3f
  5062: 51 07 12                 jump @263 if a0 == 0
      :                          @262
  5065: 82 59 08                 a2 = u64 [s0 + 0x8]
  5068: 7b 19 18                 u64 [sp + 0x18] = a2
  5071: 49 11 20 01              u64 [sp + 32] = 0x1
  5075: 7b 17 28                 u64 [sp + 0x28] = a0
  5078: 28 06                    jump @264
      :                          @263
  5080: 49 11 20                 u64 [sp + 32] = 0
  5083: 01                       fallthrough
      :                          @264
  5084: 64 17                    a0 = sp
  5086: 95 1a 18                 a3 = sp + 0x18
  5089: 64 69                    a2 = s1
  5091: 50 10 7a 32              ra = 122, jump @272
      :                          @265 [@dyn 61]
  5095: 82 18                    a1 = u64 [sp]
  5097: 82 17 08                 a0 = u64 [sp + 0x8]
  5100: 51 08 14                 jump @269 if a1 == 0
      :                          @266
  5103: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  5113: aa 87 0d                 jump @270 if a0 == a1
      :                          @267
  5116: 52 07 18                 jump @271 if a0 != 0
      :                          @268
  5119: 00                       trap
      :                          @269
  5120: 7b 57 08                 u64 [s0 + 0x8] = a0
  5123: 7b 56                    u64 [s0] = s1
  5125: 01                       fallthrough
      :                          @270
  5126: 82 10 40                 ra = u64 [sp + 0x40]
  5129: 82 15 38                 s0 = u64 [sp + 0x38]
  5132: 82 16 30                 s1 = u64 [sp + 0x30]
  5135: 95 11 48                 sp = sp + 0x48
  5138: 32 00                    ret
      :                          @271
  5140: 00                       trap
      :                          @272
  5141: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  5144: 7b 10 30                 u64 [sp + 0x30] = ra
  5147: 7b 15 28                 u64 [sp + 0x28] = s0
  5150: 7b 16 20                 u64 [sp + 0x20] = s1
  5153: 64 95                    s0 = a2
  5155: 64 72                    t0 = a0
  5157: 51 08 79                 jump @282 if a1 == 0
      :                          @273
  5160: 82 a7 08                 a0 = u64 [a3 + 0x8]
  5163: 51 07 7c                 jump @283 if a0 == 0
      :                          @274
  5166: 82 a9 10                 a2 = u64 [a3 + 0x10]
  5169: 51 09 aa 00              jump @290 if a2 == 0
      :                          @275
  5173: 82 a8                    a1 = u64 [a3]
  5175: 33 06 20 00 03           s1 = 0x30020
  5180: 33 03 00 00 10           t1 = 0x100000
  5185: c8 36 06                 s1 = s1 + t1
  5188: 01                       fallthrough
      :                          @276
  5189: 82 6a                    a3 = u64 [s1]
  5191: c8 5a 07                 a0 = a3 + s0
  5194: ac a7 cf 00              jump @296 if a0 <u a3
      :                          @277
  5198: 95 7b 01                 a4 = a0 + 0x1
  5201: 88 bc 01                 a5 = a4 <u 0x1
  5204: d8 b3 0b                 a4 = t1 <u a4
  5207: d4 cb 0b                 a4 = a4 | a5
  5210: 52 0b bf 00              jump @296 if a4 != 0
      :                          @278
  5214: 82 6b                    a4 = u64 [s1]
  5216: ab ab e5                 jump @276 if a4 != a3
      :                          @279
  5219: 7b 67                    u64 [s1] = a0
  5221: 33 0c                    a5 = 0
  5223: 7b 12 18                 u64 [sp + 0x18] = t0
  5226: 33 0a 20 00 03           a3 = 0x30020
  5231: 33 0b 00 00 10           a4 = 0x100000
  5236: 7b 1a                    u64 [sp] = a3
  5238: c8 ba 0a                 a3 = a3 + a4
  5241: c9 7a 07                 a0 = a3 - a0
  5244: 7b 17 10                 u64 [sp + 0x10] = a0
  5247: 7b 18 08                 u64 [sp + 0x8] = a1
  5250: 64 96                    s1 = a2
  5252: 50 10 7c d1 03           ra = 124, jump @366
      :                          @280 [@dyn 62]
  5257: 54 36 00 00 10 98 00     jump @297 if s1 <=u 1048576
      :                          @281
  5264: 82 12 18                 t0 = u64 [sp + 0x18]
  5267: 82 18 10                 a1 = u64 [sp + 0x10]
  5270: 33 07                    a0 = 0
  5272: 7b 28 08                 u64 [t0 + 0x8] = a1
  5275: 28 b5 00                 jump @303
      :                          @282
  5278: 49 12 08                 u64 [t0 + 8] = 0
  5281: 33 07 01                 a0 = 0x1
  5284: 28 ac 00                 jump @303
      :                          @283
  5287: 33 09 20 00 03           a2 = 0x30020
  5292: 33 07 00 00 10           a0 = 0x100000
  5297: c8 79 09                 a2 = a2 + a0
  5300: 01                       fallthrough
      :                          @284
  5301: 82 9a                    a3 = u64 [a2]
  5303: c8 5a 08                 a1 = a3 + s0
  5306: ac a8 5f                 jump @296 if a1 <u a3
      :                          @285
  5309: 95 8b 01                 a4 = a1 + 0x1
  5312: 88 bc 01                 a5 = a4 <u 0x1
  5315: d8 b7 0b                 a4 = a0 <u a4
  5318: d4 cb 0b                 a4 = a4 | a5
  5321: 52 0b 50                 jump @296 if a4 != 0
      :                          @286
  5324: 82 9b                    a4 = u64 [a2]
  5326: ab ab e7                 jump @284 if a4 != a3
      :                          @287
  5329: 7b 98                    u64 [a2] = a1
  5331: 33 0c                    a5 = 0
  5333: 01                       fallthrough
      :                          @288
  5334: ab ab df                 jump @284 if a4 != a3
      :                          @289
  5337: 28 31                    jump @295
      :                          @290
  5339: 33 09 20 00 03           a2 = 0x30020
  5344: 33 07 00 00 10           a0 = 0x100000
  5349: c8 79 09                 a2 = a2 + a0
  5352: 01                       fallthrough
      :                          @291
  5353: 82 9a                    a3 = u64 [a2]
  5355: c8 5a 08                 a1 = a3 + s0
  5358: ac a8 2b                 jump @296 if a1 <u a3
      :                          @292
  5361: 95 8b 01                 a4 = a1 + 0x1
  5364: 88 bc 01                 a5 = a4 <u 0x1
  5367: d8 b7 0b                 a4 = a0 <u a4
  5370: d4 cb 0b                 a4 = a4 | a5
  5373: 52 0b 1c                 jump @296 if a4 != 0
      :                          @293
  5376: 82 9b                    a4 = u64 [a2]
  5378: ab ab e7                 jump @291 if a4 != a3
      :                          @294
  5381: 7b 98                    u64 [a2] = a1
  5383: 33 0c                    a5 = 0
  5385: 01                       fallthrough
      :                          @295
  5386: 33 07 20 00 13           a0 = 0x130020
  5391: c9 87 08                 a1 = a0 - a1
  5394: 33 07                    a0 = 0
  5396: 7b 28 08                 u64 [t0 + 0x8] = a1
  5399: 28 39                    jump @303
      :                          @296
  5401: 33 07 01                 a0 = 0x1
  5404: 7b 27 08                 u64 [t0 + 0x8] = a0
  5407: 28 31                    jump @303
      :                          @297
  5409: 64 6c                    a5 = s1
  5411: 82 17                    a0 = u64 [sp]
  5413: 95 77 00 00 10           a0 = a0 + 0x100000
  5418: 82 12 18                 t0 = u64 [sp + 0x18]
  5421: 82 16 08                 s1 = u64 [sp + 0x8]
  5424: 01                       fallthrough
      :                          @298
  5425: 82 78                    a1 = u64 [a0]
  5427: c9 87 09                 a2 = a0 - a1
  5430: ab 69 11                 jump @302 if a2 != s1
      :                          @299
  5433: c9 c8 09                 a2 = a1 - a5
  5436: 01                       fallthrough
      :                          @300
  5437: 82 7a                    a3 = u64 [a0]
  5439: ab 8a f2                 jump @298 if a3 != a1
      :                          @301
  5442: 7b 79                    u64 [a0] = a2
  5444: 33 0b                    a4 = 0
  5446: 01                       fallthrough
      :                          @302
  5447: 82 18 10                 a1 = u64 [sp + 0x10]
  5450: 33 07                    a0 = 0
  5452: 7b 28 08                 u64 [t0 + 0x8] = a1
  5455: 01                       fallthrough
      :                          @303
  5456: 7b 25 10                 u64 [t0 + 0x10] = s0
  5459: 7b 27                    u64 [t0] = a0
  5461: 82 10 30                 ra = u64 [sp + 0x30]
  5464: 82 15 28                 s0 = u64 [sp + 0x28]
  5467: 82 16 20                 s1 = u64 [sp + 0x20]
  5470: 95 11 38                 sp = sp + 0x38
  5473: 32 00                    ret
      :                          @304
  5475: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  5478: 7b 10 40                 u64 [sp + 0x40] = ra
  5481: 7b 15 38                 u64 [sp + 0x38] = s0
  5484: 7b 16 30                 u64 [sp + 0x30] = s1
  5487: 95 88 01                 a1 = a1 + 0x1
  5490: 51 08 53                 jump @312 if a1 == 0
      :                          @305
  5493: 64 75                    s0 = a0
  5495: 82 77                    a0 = u64 [a0]
  5497: 97 79 01                 a2 = a0 << 0x1
  5500: 33 0a 08                 a3 = 0x8
  5503: e4 a8 08                 a1 = maxu(a1, a3)
  5506: e4 89 06                 s1 = maxu(a2, a1)
  5509: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  5512: 98 88 3f                 a1 = a1 >> 0x3f
  5515: 51 07 12                 jump @307 if a0 == 0
      :                          @306
  5518: 82 59 08                 a2 = u64 [s0 + 0x8]
  5521: 7b 19 18                 u64 [sp + 0x18] = a2
  5524: 49 11 20 01              u64 [sp + 32] = 0x1
  5528: 7b 17 28                 u64 [sp + 0x28] = a0
  5531: 28 06                    jump @308
      :                          @307
  5533: 49 11 20                 u64 [sp + 32] = 0
  5536: 01                       fallthrough
      :                          @308
  5537: 64 17                    a0 = sp
  5539: 95 1a 18                 a3 = sp + 0x18
  5542: 64 69                    a2 = s1
  5544: 50 10 7e 6d fe           ra = 126, jump @272
      :                          @309 [@dyn 63]
  5549: 82 18                    a1 = u64 [sp]
  5551: 82 17 08                 a0 = u64 [sp + 0x8]
  5554: 51 08 14                 jump @313 if a1 == 0
      :                          @310
  5557: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  5567: aa 87 0d                 jump @314 if a0 == a1
      :                          @311
  5570: 52 07 18                 jump @315 if a0 != 0
      :                          @312
  5573: 00                       trap
      :                          @313
  5574: 7b 57 08                 u64 [s0 + 0x8] = a0
  5577: 7b 56                    u64 [s0] = s1
  5579: 01                       fallthrough
      :                          @314
  5580: 82 10 40                 ra = u64 [sp + 0x40]
  5583: 82 15 38                 s0 = u64 [sp + 0x38]
  5586: 82 16 30                 s1 = u64 [sp + 0x30]
  5589: 95 11 48                 sp = sp + 0x48
  5592: 32 00                    ret
      :                          @315
  5594: 00                       trap
      :                          @316
  5595: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  5598: 7b 10 30                 u64 [sp + 0x30] = ra
  5601: 7b 15 28                 u64 [sp + 0x28] = s0
  5604: 7b 16 20                 u64 [sp + 0x20] = s1
  5607: 64 89                    a2 = a1
  5609: 82 8a 08                 a3 = u64 [a1 + 0x8]
  5612: 64 75                    s0 = a0
  5614: 51 0a 35                 jump @321 if a3 == 0
      :                          @317
  5617: 82 98                    a1 = u64 [a2]
  5619: 33 07                    a0 = 0
  5621: 95 8b 08                 a4 = a1 + 0x8
  5624: 01                       fallthrough
      :                          @318
  5625: 82 bc                    a5 = u64 [a4]
  5627: c8 c7 07                 a0 = a0 + a5
  5630: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  5633: 95 bb 10                 a4 = a4 + 0x10
  5636: 52 0a f5                 jump @318 if a3 != 0
      :                          @319
  5639: 82 9a 18                 a3 = u64 [a2 + 0x18]
  5642: 51 0a 24                 jump @323 if a3 == 0
      :                          @320
  5645: 82 88 08                 a1 = u64 [a1 + 0x8]
  5648: 8e 88                    a1 = a1 >u 0
  5650: 88 7a 10                 a3 = a0 <u 0x10
  5653: 85 aa 01                 a3 = a3 ^ 0x1
  5656: d4 a8 08                 a1 = a1 | a3
  5659: 89 7a                    a3 = a0 <s 0
  5661: e0 a8 08                 a1 = a1 & ~a3
  5664: 52 08 0a                 jump @322 if a1 != 0
      :                          @321
  5667: 33 07                    a0 = 0
  5669: 33 08 01                 a1 = 0x1
  5672: 28 4a                    jump @331
      :                          @322
  5674: 97 77 01                 a0 = a0 << 0x1
  5677: 01                       fallthrough
      :                          @323
  5678: 51 07 40                 jump @330 if a0 == 0
      :                          @324
  5681: 57 07 79                 jump @336 if a0 <s 0
      :                          @325
  5684: 64 52                    t0 = s0
  5686: 33 0b 20 00 03           a4 = 0x30020
  5691: 33 08 00 00 10           a1 = 0x100000
  5696: c8 8b 0b                 a4 = a4 + a1
  5699: 01                       fallthrough
      :                          @326
  5700: 82 bc                    a5 = u64 [a4]
  5702: c8 7c 0a                 a3 = a5 + a0
  5705: ac ca 5f                 jump @334 if a3 <u a5
      :                          @327
  5708: 95 a5 01                 s0 = a3 + 0x1
  5711: 88 56 01                 s1 = s0 <u 0x1
  5714: d8 58 05                 s0 = a1 <u s0
  5717: d4 65 05                 s0 = s0 | s1
  5720: 52 05 50                 jump @334 if s0 != 0
      :                          @328
  5723: 82 b6                    s1 = u64 [a4]
  5725: ab c6 e7                 jump @326 if s1 != a5
      :                          @329
  5728: 7b ba                    u64 [a4] = a3
  5730: 33 08 20 00 13           a1 = 0x130020
  5735: c9 a8 08                 a1 = a1 - a3
  5738: 64 25                    s0 = t0
  5740: 28 06                    jump @331
      :                          @330
  5742: 33 08 01                 a1 = 0x1
  5745: 01                       fallthrough
      :                          @331
  5746: 7b 17                    u64 [sp] = a0
  5748: 7b 18 08                 u64 [sp + 0x8] = a1
  5751: 49 11 10                 u64 [sp + 16] = 0
  5754: 33 08 d8 03 01           a1 = 0x103d8
  5759: 64 17                    a0 = sp
  5761: 50 20 80 00 8b 06        ra = 128, jump @461
      :                          @332 [@dyn 64]
  5767: 52 07 22                 jump @335 if a0 != 0
      :                          @333
  5770: 82 17 10                 a0 = u64 [sp + 0x10]
  5773: 82 18 08                 a1 = u64 [sp + 0x8]
  5776: 82 19                    a2 = u64 [sp]
  5778: 7b 57 10                 u64 [s0 + 0x10] = a0
  5781: 7b 58 08                 u64 [s0 + 0x8] = a1
  5784: 7b 59                    u64 [s0] = a2
  5786: 82 10 30                 ra = u64 [sp + 0x30]
  5789: 82 15 28                 s0 = u64 [sp + 0x28]
  5792: 82 16 20                 s1 = u64 [sp + 0x20]
  5795: 95 11 38                 sp = sp + 0x38
  5798: 32 00                    ret
      :                          @334
  5800: 00                       trap
      :                          @335
  5801: 00                       trap
      :                          @336
  5802: 00                       trap
      :                          @337 [@dyn 65]
  5803: 82 72                    t0 = u64 [a0]
  5805: 33 09 00 00 f0           a2 = 0xfffffffffff00000
  5810: 95 2a ff ff ef           a3 = t0 + 0xffffffffffefffff
  5815: ac 9a 28                 jump @343 if a3 <u a2
      :                          @338
  5818: 82 77 08                 a0 = u64 [a0 + 0x8]
  5821: 33 09 20 00 03           a2 = 0x30020
  5826: 95 99 00 00 10           a2 = a2 + 0x100000
  5831: 01                       fallthrough
      :                          @339
  5832: 82 9a                    a3 = u64 [a2]
  5834: c9 a9 0b                 a4 = a2 - a3
  5837: ab 7b 12                 jump @343 if a4 != a0
      :                          @340
  5840: c9 2a 0b                 a4 = a3 - t0
  5843: 01                       fallthrough
      :                          @341
  5844: 82 9c                    a5 = u64 [a2]
  5846: ab ac f2                 jump @339 if a5 != a3
      :                          @342
  5849: 7b 9b                    u64 [a2] = a4
  5851: 33 08                    a1 = 0
  5853: 32 00                    ret
      :                          @343
  5855: 32 00                    ret
      :                          @344 [@dyn 66]
  5857: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  5860: 7b 10 18                 u64 [sp + 0x18] = ra
  5863: 7b 15 10                 u64 [sp + 0x10] = s0
  5866: 7b 16 08                 u64 [sp + 0x8] = s1
  5869: 64 75                    s0 = a0
  5871: 82 7a 10                 a3 = u64 [a0 + 0x10]
  5874: 82 77                    a0 = u64 [a0]
  5876: c9 a7 07                 a0 = a0 - a3
  5879: 64 96                    s1 = a2
  5881: ac 97 2b                 jump @347 if a0 <u a2
      :                          @345
  5884: 7b 1a                    u64 [sp] = a3
  5886: 82 57 08                 a0 = u64 [s0 + 0x8]
  5889: c8 a7 07                 a0 = a0 + a3
  5892: 64 69                    a2 = s1
  5894: 50 20 86 00 4f 01        ra = 134, jump @366
      :                          @346 [@dyn 67]
  5900: 82 17                    a0 = u64 [sp]
  5902: c8 76 06                 s1 = s1 + a0
  5905: 7b 56 10                 u64 [s0 + 0x10] = s1
  5908: 33 07                    a0 = 0
  5910: 82 10 18                 ra = u64 [sp + 0x18]
  5913: 82 15 10                 s0 = u64 [sp + 0x10]
  5916: 82 16 08                 s1 = u64 [sp + 0x8]
  5919: 95 11 20                 sp = sp + 0x20
  5922: 32 00                    ret
      :                          @347
  5924: 64 57                    a0 = s0
  5926: 7b 18                    u64 [sp] = a1
  5928: 64 a8                    a1 = a3
  5930: 64 69                    a2 = s1
  5932: 50 20 88 00 72 fc        ra = 136, jump @260
      :                          @348 [@dyn 68]
  5938: 82 18                    a1 = u64 [sp]
  5940: 82 5a 10                 a3 = u64 [s0 + 0x10]
  5943: 28 c5                    jump @345
      :                          @349 [@dyn 69]
  5945: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  5948: 7b 10 20                 u64 [sp + 0x20] = ra
  5951: 7b 15 18                 u64 [sp + 0x18] = s0
  5954: 7b 16 10                 u64 [sp + 0x10] = s1
  5957: 64 86                    s1 = a1
  5959: 83 88                    i32 a1 = a1 + 0
  5961: 33 09 80 00              a2 = 0x80
  5965: 64 7a                    a3 = a0
  5967: ae 98 2c                 jump @354 if a1 >=u a2
      :                          @350
  5970: 82 a8 10                 a1 = u64 [a3 + 0x10]
  5973: 82 a7                    a0 = u64 [a3]
  5975: ab 78 13                 jump @353 if a1 != a0
      :                          @351
  5978: 64 a7                    a0 = a3
  5980: 64 a5                    s0 = a3
  5982: 50 20 8c 00 05 fe        ra = 140, jump @304
      :                          @352 [@dyn 70]
  5988: 64 5a                    a3 = s0
  5990: 82 58 10                 a1 = u64 [s0 + 0x10]
  5993: 01                       fallthrough
      :                          @353
  5994: 82 a7 08                 a0 = u64 [a3 + 0x8]
  5997: c8 87 07                 a0 = a0 + a1
  6000: 78 76                    u8 [a0] = s1
  6002: 95 88 01                 a1 = a1 + 0x1
  6005: 7b a8 10                 u64 [a3 + 0x10] = a1
  6008: 28 ac 00                 jump @362
      :                          @354
  6011: 8b 67 0b                 i32 a0 = s1 >> 0xb
  6014: 48 11 0c                 u32 [sp + 12] = 0
  6017: 52 07 1c                 jump @356 if a0 != 0
      :                          @355
  6020: 98 67 06                 a0 = s1 >> 0x6
  6023: 86 77 c0 00              a0 = a0 | 0xc0
  6027: 78 17 0c                 u8 [sp + 0xc] = a0
  6030: 84 67 3f                 a0 = s1 & 0x3f
  6033: 86 77 80 00              a0 = a0 | 0x80
  6037: 78 17 0d                 u8 [sp + 0xd] = a0
  6040: 33 06 02                 s1 = 0x2
  6043: 28 63                    jump @359
      :                          @356
  6045: 8b 67 10                 i32 a0 = s1 >> 0x10
  6048: 52 07 29                 jump @358 if a0 != 0
      :                          @357
  6051: 98 67 0c                 a0 = s1 >> 0xc
  6054: 86 77 e0 00              a0 = a0 | 0xe0
  6058: 78 17 0c                 u8 [sp + 0xc] = a0
  6061: 97 67 34                 a0 = s1 << 0x34
  6064: 98 77 3a                 a0 = a0 >> 0x3a
  6067: 95 77 80 00              a0 = a0 + 0x80
  6071: 78 17 0d                 u8 [sp + 0xd] = a0
  6074: 84 67 3f                 a0 = s1 & 0x3f
  6077: 86 77 80 00              a0 = a0 | 0x80
  6081: 78 17 0e                 u8 [sp + 0xe] = a0
  6084: 33 06 03                 s1 = 0x3
  6087: 28 37                    jump @359
      :                          @358
  6089: 97 67 2b                 a0 = s1 << 0x2b
  6092: 98 77 3d                 a0 = a0 >> 0x3d
  6095: 95 77 f0 00              a0 = a0 + 0xf0
  6099: 78 17 0c                 u8 [sp + 0xc] = a0
  6102: 97 67 2e                 a0 = s1 << 0x2e
  6105: 98 77 3a                 a0 = a0 >> 0x3a
  6108: 95 77 80 00              a0 = a0 + 0x80
  6112: 78 17 0d                 u8 [sp + 0xd] = a0
  6115: 97 67 34                 a0 = s1 << 0x34
  6118: 98 77 3a                 a0 = a0 >> 0x3a
  6121: 95 77 80 00              a0 = a0 + 0x80
  6125: 78 17 0e                 u8 [sp + 0xe] = a0
  6128: 84 67 3f                 a0 = s1 & 0x3f
  6131: 86 77 80 00              a0 = a0 | 0x80
  6135: 78 17 0f                 u8 [sp + 0xf] = a0
  6138: 33 06 04                 s1 = 0x4
  6141: 01                       fallthrough
      :                          @359
  6142: 82 a5 10                 s0 = u64 [a3 + 0x10]
  6145: 82 a7                    a0 = u64 [a3]
  6147: c9 57 07                 a0 = a0 - s0
  6150: ac 67 2e                 jump @363 if a0 <u s1
      :                          @360
  6153: 7b 1a                    u64 [sp] = a3
  6155: 82 a7 08                 a0 = u64 [a3 + 0x8]
  6158: c8 57 07                 a0 = a0 + s0
  6161: 95 18 0c                 a1 = sp + 0xc
  6164: 64 69                    a2 = s1
  6166: 50 20 8e 00 3f           ra = 142, jump @366
      :                          @361 [@dyn 71]
  6171: c8 56 06                 s1 = s1 + s0
  6174: 82 17                    a0 = u64 [sp]
  6176: 7b 76 10                 u64 [a0 + 0x10] = s1
  6179: 01                       fallthrough
      :                          @362
  6180: 33 07                    a0 = 0
  6182: 82 10 20                 ra = u64 [sp + 0x20]
  6185: 82 15 18                 s0 = u64 [sp + 0x18]
  6188: 82 16 10                 s1 = u64 [sp + 0x10]
  6191: 95 11 28                 sp = sp + 0x28
  6194: 32 00                    ret
      :                          @363
  6196: 64 a7                    a0 = a3
  6198: 64 58                    a1 = s0
  6200: 64 69                    a2 = s1
  6202: 64 a5                    s0 = a3
  6204: 50 20 90 00 62 fb        ra = 144, jump @260
      :                          @364 [@dyn 72]
  6210: 64 5a                    a3 = s0
  6212: 82 55 10                 s0 = u64 [s0 + 0x10]
  6215: 28 c2                    jump @360
      :                          @365 [@dyn 73]
  6217: 64 8a                    a3 = a1
  6219: 33 08 d8 03 01           a1 = 0x103d8
  6224: 64 a9                    a2 = a3
  6226: 28 ba 04                 jump @461
      :                          @366
  6229: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  6232: 7b 10 18                 u64 [sp + 0x18] = ra
  6235: 7b 15 10                 u64 [sp + 0x10] = s0
  6238: 7b 16 08                 u64 [sp + 0x8] = s1
  6241: 53 19 10 64              jump @375 if a2 <u 16
      :                          @367
  6245: 8d 7a                    i32 a3 = -a0
  6247: 84 a2 07                 t0 = a3 & 0x7
  6250: c8 27 0b                 a4 = a0 + t0
  6253: 51 02 15                 jump @370 if t0 == 0
      :                          @368
  6256: 64 8c                    a5 = a1
  6258: 64 75                    s0 = a0
  6260: 01                       fallthrough
      :                          @369
  6261: 7c ca                    a3 = u8 [a5]
  6263: 78 5a                    u8 [s0] = a3
  6265: 95 55 01                 s0 = s0 + 0x1
  6268: 95 cc 01                 a5 = a5 + 0x1
  6271: ac b5 f6                 jump @369 if s0 <u a4
      :                          @370
  6274: c8 28 03                 t1 = a1 + t0
  6277: c9 29 02                 t0 = a2 - t0
  6280: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  6283: 84 38 07                 a1 = t1 & 0x7
  6286: c8 4b 0a                 a3 = a4 + t2
  6289: 51 08 3b                 jump @377 if a1 == 0
      :                          @371
  6292: 58 04 4b                 jump @380 if t2 <=s 0
      :                          @372
  6295: 97 38 03                 a1 = t1 << 0x3
  6298: 84 80 38                 ra = a1 & 0x38
  6301: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  6304: 82 c5                    s0 = u64 [a5]
  6306: 8d 88                    i32 a1 = -a1
  6308: 84 88 38                 a1 = a1 & 0x38
  6311: 95 cc 08                 a5 = a5 + 0x8
  6314: 01                       fallthrough
      :                          @373
  6315: 82 c6                    s1 = u64 [a5]
  6317: d0 05 05                 s0 = s0 >> ra
  6320: cf 86 09                 a2 = s1 << a1
  6323: d4 59 09                 a2 = a2 | s0
  6326: 7b b9                    u64 [a4] = a2
  6328: 95 bb 08                 a4 = a4 + 0x8
  6331: 95 cc 08                 a5 = a5 + 0x8
  6334: 64 65                    s0 = s1
  6336: ac ab eb                 jump @373 if a4 <u a3
      :                          @374
  6339: 28 1c                    jump @380
      :                          @375
  6341: 64 7a                    a3 = a0
  6343: 52 09 21                 jump @381 if a2 != 0
      :                          @376
  6346: 28 2f                    jump @383
      :                          @377
  6348: 58 04 13                 jump @380 if t2 <=s 0
      :                          @378
  6351: 64 38                    a1 = t1
  6353: 01                       fallthrough
      :                          @379
  6354: 82 89                    a2 = u64 [a1]
  6356: 7b b9                    u64 [a4] = a2
  6358: 95 bb 08                 a4 = a4 + 0x8
  6361: 95 88 08                 a1 = a1 + 0x8
  6364: ac ab f6                 jump @379 if a4 <u a3
      :                          @380
  6367: c8 43 08                 a1 = t1 + t2
  6370: 84 29 07                 a2 = t0 & 0x7
  6373: 51 09 14                 jump @383 if a2 == 0
      :                          @381
  6376: c8 a9 09                 a2 = a2 + a3
  6379: 01                       fallthrough
      :                          @382
  6380: 7c 8b                    a4 = u8 [a1]
  6382: 78 ab                    u8 [a3] = a4
  6384: 95 aa 01                 a3 = a3 + 0x1
  6387: 95 88 01                 a1 = a1 + 0x1
  6390: ac 9a f6                 jump @382 if a3 <u a2
      :                          @383
  6393: 82 10 18                 ra = u64 [sp + 0x18]
  6396: 82 15 10                 s0 = u64 [sp + 0x10]
  6399: 82 16 08                 s1 = u64 [sp + 0x8]
  6402: 95 11 20                 sp = sp + 0x20
  6405: 32 00                    ret
      :                          @384
  6407: 53 19 10 48              jump @393 if a2 <u 16
      :                          @385
  6411: 8d 7a                    i32 a3 = -a0
  6413: 84 aa 07                 a3 = a3 & 0x7
  6416: c8 a7 0b                 a4 = a0 + a3
  6419: 51 0a 0e                 jump @388 if a3 == 0
      :                          @386
  6422: 64 7c                    a5 = a0
  6424: 01                       fallthrough
      :                          @387
  6425: 78 c8                    u8 [a5] = a1
  6427: 95 cc 01                 a5 = a5 + 0x1
  6430: ac bc fb                 jump @387 if a5 <u a4
      :                          @388
  6433: c9 a9 03                 t1 = a2 - a3
  6436: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  6439: c8 cb 0a                 a3 = a4 + a5
  6442: 58 0c 1d                 jump @391 if a5 <=s 0
      :                          @389
  6445: 84 82 ff 00              t0 = a1 & 0xff
  6449: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  6459: ca 92 0c                 a5 = t0 * a2
  6462: 01                       fallthrough
      :                          @390
  6463: 7b bc                    u64 [a4] = a5
  6465: 95 bb 08                 a4 = a4 + 0x8
  6468: ac ab fb                 jump @390 if a4 <u a3
      :                          @391
  6471: 84 39 07                 a2 = t1 & 0x7
  6474: 52 09 0a                 jump @394 if a2 != 0
      :                          @392
  6477: 28 13                    jump @396
      :                          @393
  6479: 64 7a                    a3 = a0
  6481: 51 09 0f                 jump @396 if a2 == 0
      :                          @394
  6484: c8 a9 09                 a2 = a2 + a3
  6487: 01                       fallthrough
      :                          @395
  6488: 78 a8                    u8 [a3] = a1
  6490: 95 aa 01                 a3 = a3 + 0x1
  6493: ac 9a fb                 jump @395 if a3 <u a2
      :                          @396
  6496: 32 00                    ret
      :                          @397 [@dyn 74]
  6498: 82 77                    a0 = u64 [a0]
  6500: 01                       fallthrough
      :                          @398
  6501: 28                       jump @398
      :                          @399
  6502: 95 11 a8                 sp = sp + 0xffffffffffffffa8
  6505: 7b 10 50                 u64 [sp + 0x50] = ra
  6508: 7b 15 48                 u64 [sp + 0x48] = s0
  6511: 7b 16 40                 u64 [sp + 0x40] = s1
  6514: 82 79                    a2 = u64 [a0]
  6516: 7b 18                    u64 [sp] = a1
  6518: 98 9a 04                 a3 = a2 >> 0x4
  6521: 33 08 27                 a1 = 0x27
  6524: 53 2a 71 02 84 00        jump @402 if a3 <u 625
      :                          @400
  6530: 33 08 27                 a1 = 0x27
  6533: 95 1a 3e                 a3 = sp + 0x3e
  6536: 3a 07 00 00 03           a0 = u64 [0x30000]
  6541: 7b 17 10                 u64 [sp + 0x10] = a0
  6544: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
  6550: 33 00 7b 14              ra = 0x147b
  6554: 33 0c 58 04 01           a5 = 0x10458
  6559: 33 04 ff e0 f5 05        t2 = 0x5f5e0ff
  6565: 33 05 9c                 s0 = 0xffffffffffffff9c
  6568: 01                       fallthrough
      :                          @401
  6569: 64 93                    t1 = a2
  6571: 82 17 10                 a0 = u64 [sp + 0x10]
  6574: d6 79 09                 a2 = a2 mulhu a0
  6577: 98 99 0b                 a2 = a2 >> 0xb
  6580: 82 17 08                 a0 = u64 [sp + 0x8]
  6583: c0 79 0b                 i32 a4 = a2 * a0
  6586: c8 3b 06                 s1 = a4 + t1
  6589: 97 6b 30                 a4 = s1 << 0x30
  6592: 98 bb 32                 a4 = a4 >> 0x32
  6595: ca 0b 0b                 a4 = a4 * ra
  6598: 98 b7 11                 a0 = a4 >> 0x11
  6601: 98 bb 10                 a4 = a4 >> 0x10
  6604: 84 bb fe 07              a4 = a4 & 0x7fe
  6608: ca 57 07                 a0 = a0 * s0
  6611: c8 67 07                 a0 = a0 + s1
  6614: 97 77 31                 a0 = a0 << 0x31
  6617: 98 77 30                 a0 = a0 >> 0x30
  6620: c8 cb 0b                 a4 = a4 + a5
  6623: 7c b6                    s1 = u8 [a4]
  6625: 7c bb 01                 a4 = u8 [a4 + 0x1]
  6628: c8 c7 07                 a0 = a0 + a5
  6631: 7c 72 01                 t0 = u8 [a0 + 0x1]
  6634: 7c 77                    a0 = u8 [a0]
  6636: 78 ab ff                 u8 [a3 + 0xffffffffffffffff] = a4
  6639: 78 a6 fe                 u8 [a3 + 0xfffffffffffffffe] = s1
  6642: 78 a2 01                 u8 [a3 + 0x1] = t0
  6645: 78 a7                    u8 [a3] = a0
  6647: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
  6650: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
  6653: ac 34 ac                 jump @401 if t2 <u t1
      :                          @402
  6656: 54 19 63 3b              jump @404 if a2 <=u 99
      :                          @403
  6660: 97 97 30                 a0 = a2 << 0x30
  6663: 98 77 32                 a0 = a0 >> 0x32
  6666: 96 77 7b 14              a0 = a0 * 0x147b
  6670: 98 77 11                 a0 = a0 >> 0x11
  6673: 96 7a 9c                 a3 = a0 * 0xffffffffffffff9c
  6676: c8 a9 09                 a2 = a2 + a3
  6679: 97 99 31                 a2 = a2 << 0x31
  6682: 98 99 30                 a2 = a2 >> 0x30
  6685: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  6688: 33 0a 58 04 01           a3 = 0x10458
  6693: c8 a9 09                 a2 = a2 + a3
  6696: 7c 9a 01                 a3 = u8 [a2 + 0x1]
  6699: 7c 99                    a2 = u8 [a2]
  6701: 95 1b 19                 a4 = sp + 0x19
  6704: c8 8b 0b                 a4 = a4 + a1
  6707: 78 ba 01                 u8 [a4 + 0x1] = a3
  6710: 78 b9                    u8 [a4] = a2
  6712: 64 79                    a2 = a0
  6714: 01                       fallthrough
      :                          @404
  6715: 55 19 0a 14              jump @406 if a2 >=u 10
      :                          @405
  6719: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  6722: 95 17 19                 a0 = sp + 0x19
  6725: c8 87 07                 a0 = a0 + a1
  6728: 83 99 30                 i32 a2 = a2 + 0x30
  6731: 78 79                    u8 [a0] = a2
  6733: 28 21                    jump @407
      :                          @406
  6735: 97 99 01                 a2 = a2 << 0x1
  6738: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  6741: 33 07 58 04 01           a0 = 0x10458
  6746: c8 97 07                 a0 = a0 + a2
  6749: 7c 79 01                 a2 = u8 [a0 + 0x1]
  6752: 7c 77                    a0 = u8 [a0]
  6754: 95 1a 19                 a3 = sp + 0x19
  6757: c8 8a 0a                 a3 = a3 + a1
  6760: 78 a9 01                 u8 [a3 + 0x1] = a2
  6763: 78 a7                    u8 [a3] = a0
  6765: 01                       fallthrough
      :                          @407
  6766: 95 1a 19                 a3 = sp + 0x19
  6769: c8 8a 0a                 a3 = a3 + a1
  6772: 9a 8b 27                 a4 = 0x27 - a1
  6775: 33 08 08 04 01           a1 = 0x10408
  6780: 82 17                    a0 = u64 [sp]
  6782: 33 09                    a2 = 0
  6784: 50 20 96 00 13           ra = 150, jump @409
      :                          @408 [@dyn 75]
  6789: 82 10 50                 ra = u64 [sp + 0x50]
  6792: 82 15 48                 s0 = u64 [sp + 0x48]
  6795: 82 16 40                 s1 = u64 [sp + 0x40]
  6798: 95 11 58                 sp = sp + 0x58
  6801: 32 00                    ret
      :                          @409
  6803: 95 11 98                 sp = sp + 0xffffffffffffff98
  6806: 7b 10 60                 u64 [sp + 0x60] = ra
  6809: 7b 15 58                 u64 [sp + 0x58] = s0
  6812: 7b 16 50                 u64 [sp + 0x50] = s1
  6815: 80 73 34                 t1 = u32 [a0 + 0x34]
  6818: 7b 1a 20                 u64 [sp + 0x20] = a3
  6821: 64 9c                    a5 = a2
  6823: 84 36 01                 s1 = t1 & 0x1
  6826: 33 02 2b                 t0 = 0x2b
  6829: 33 09 00 00 11           a2 = 0x110000
  6834: 84 3a 04                 a3 = t1 & 0x4
  6837: 7b 1b 28                 u64 [sp + 0x28] = a4
  6840: c8 b6 04                 t2 = s1 + a4
  6843: 7b 1c 30                 u64 [sp + 0x30] = a5
  6846: 52 0a 10                 jump @412 if a3 != 0
      :                          @410
  6849: 49 11 38                 u64 [sp + 56] = 0
  6852: 82 78                    a1 = u64 [a0]
  6854: 94 69 2b                 a2 = 0x2b if s1 != 0
  6857: 52 08 35                 jump @416 if a1 != 0
      :                          @411
  6860: 28 56                    jump @421
      :                          @412
  6862: 7b 18 38                 u64 [sp + 0x38] = a1
  6865: 33 09                    a2 = 0
  6867: 51 0c 1b                 jump @415 if a5 == 0
      :                          @413
  6870: 82 1b 38                 a4 = u64 [sp + 0x38]
  6873: 01                       fallthrough
      :                          @414
  6874: 7d b5                    s0 = i8 [a4]
  6876: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
  6879: 85 5a 01                 a3 = s0 ^ 0x1
  6882: c8 a9 09                 a2 = a2 + a3
  6885: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  6888: 95 bb 01                 a4 = a4 + 0x1
  6891: 52 0c ef                 jump @414 if a5 != 0
      :                          @415
  6894: c8 94 04                 t2 = t2 + a2
  6897: 33 09 00 00 11           a2 = 0x110000
  6902: 82 78                    a1 = u64 [a0]
  6904: db 62 09                 a2 = t0 if s1 != 0
  6907: 51 08 27                 jump @421 if a1 == 0
      :                          @416
  6910: 82 7a 08                 a3 = u64 [a0 + 0x8]
  6913: ae a4 21                 jump @421 if t2 >=u a3
      :                          @417
  6916: 84 38 08                 a1 = t1 & 0x8
  6919: 52 08 51                 jump @424 if a1 != 0
      :                          @418
  6922: 7c 76 38                 s1 = u8 [a0 + 0x38]
  6925: c9 4a 0a                 a3 = a3 - t2
  6928: 7b 19 18                 u64 [sp + 0x18] = a2
  6931: 5a 16 01 a0 00           jump @431 if s1 >s 1
      :                          @419
  6936: 52 06 ad 00              jump @433 if s1 != 0
      :                          @420
  6940: 7b 1a 10                 u64 [sp + 0x10] = a3
  6943: 28 ac 00                 jump @434
      :                          @421
  6946: 82 75 20                 s0 = u64 [a0 + 0x20]
  6949: 82 76 28                 s1 = u64 [a0 + 0x28]
  6952: 64 57                    a0 = s0
  6954: 64 68                    a1 = s1
  6956: 82 1a 38                 a3 = u64 [sp + 0x38]
  6959: 82 1b 30                 a4 = u64 [sp + 0x30]
  6962: 50 20 98 00 75 01        ra = 152, jump @454
      :                          @422 [@dyn 76]
  6968: 33 08 01                 a1 = 0x1
  6971: 52 07 be 00              jump @439 if a0 != 0
      :                          @423
  6975: 82 6c 18                 a5 = u64 [s1 + 0x18]
  6978: 64 57                    a0 = s0
  6980: 82 18 20                 a1 = u64 [sp + 0x20]
  6983: 82 19 28                 a2 = u64 [sp + 0x28]
  6986: 82 10 60                 ra = u64 [sp + 0x60]
  6989: 82 15 58                 s0 = u64 [sp + 0x58]
  6992: 82 16 50                 s1 = u64 [sp + 0x50]
  6995: 95 11 68                 sp = sp + 0x68
  6998: 32 0c                    jump [a5]
      :                          @424
  7000: 7b 1a 40                 u64 [sp + 0x40] = a3
  7003: 64 45                    s0 = t2
  7005: 81 78 30                 a1 = i32 [a0 + 0x30]
  7008: 7b 18 10                 u64 [sp + 0x10] = a1
  7011: 7c 7a 38                 a3 = u8 [a0 + 0x38]
  7014: 7b 1a 08                 u64 [sp + 0x8] = a3
  7017: 82 7a 20                 a3 = u64 [a0 + 0x20]
  7020: 82 78 28                 a1 = u64 [a0 + 0x28]
  7023: 48 17 30 30              u32 [a0 + 48] = 0x30
  7027: 7b 17                    u64 [sp] = a0
  7029: 46 17 38 01              u8 [a0 + 56] = 0x1
  7033: 7b 1a 48                 u64 [sp + 0x48] = a3
  7036: 64 a7                    a0 = a3
  7038: 64 86                    s1 = a1
  7040: 82 1a 38                 a3 = u64 [sp + 0x38]
  7043: 82 1b 30                 a4 = u64 [sp + 0x30]
  7046: 50 20 9a 00 21 01        ra = 154, jump @454
      :                          @425 [@dyn 77]
  7052: 52 07 69                 jump @438 if a0 != 0
      :                          @426
  7055: 82 17 40                 a0 = u64 [sp + 0x40]
  7058: c9 57 05                 s0 = a0 - s0
  7061: 95 55 01                 s0 = s0 + 0x1
  7064: 01                       fallthrough
      :                          @427
  7065: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  7068: 51 05 cb 00              jump @449 if s0 == 0
      :                          @428
  7072: 82 69 20                 a2 = u64 [s1 + 0x20]
  7075: 33 08 30                 a1 = 0x30
  7078: 82 17 48                 a0 = u64 [sp + 0x48]
  7081: b4 90 02 9c 00           ra = 156, jump [a2]
      :                          @429 [@dyn 78]
  7086: 51 07 eb                 jump @427 if a0 == 0
      :                          @430
  7089: 28 44                    jump @438
      :                          @431
  7091: 52 16 02 12              jump @433 if s1 != 2
      :                          @432
  7095: 98 a6 01                 s1 = a3 >> 0x1
  7098: 95 a8 01                 a1 = a3 + 0x1
  7101: 98 88 01                 a1 = a1 >> 0x1
  7104: 7b 18 10                 u64 [sp + 0x10] = a1
  7107: 28 08                    jump @434
      :                          @433
  7109: 64 a6                    s1 = a3
  7111: 49 11 10                 u64 [sp + 16] = 0
  7114: 01                       fallthrough
      :                          @434
  7115: 82 78 20                 a1 = u64 [a0 + 0x20]
  7118: 7b 18 48                 u64 [sp + 0x48] = a1
  7121: 82 75 28                 s0 = u64 [a0 + 0x28]
  7124: 81 77 30                 a0 = i32 [a0 + 0x30]
  7127: 7b 17 40                 u64 [sp + 0x40] = a0
  7130: 95 66 01                 s1 = s1 + 0x1
  7133: 01                       fallthrough
      :                          @435
  7134: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  7137: 51 06 28                 jump @440 if s1 == 0
      :                          @436
  7140: 82 59 20                 a2 = u64 [s0 + 0x20]
  7143: 82 17 48                 a0 = u64 [sp + 0x48]
  7146: 82 18 40                 a1 = u64 [sp + 0x40]
  7149: b4 90 02 9e 00           ra = 158, jump [a2]
      :                          @437 [@dyn 79]
  7154: 51 07 ec                 jump @435 if a0 == 0
      :                          @438
  7157: 33 08 01                 a1 = 0x1
  7160: 01                       fallthrough
      :                          @439
  7161: 64 87                    a0 = a1
  7163: 82 10 60                 ra = u64 [sp + 0x60]
  7166: 82 15 58                 s0 = u64 [sp + 0x58]
  7169: 82 16 50                 s1 = u64 [sp + 0x50]
  7172: 95 11 68                 sp = sp + 0x68
  7175: 32 00                    ret
      :                          @440
  7177: 82 16 48                 s1 = u64 [sp + 0x48]
  7180: 64 67                    a0 = s1
  7182: 64 58                    a1 = s0
  7184: 82 19 18                 a2 = u64 [sp + 0x18]
  7187: 82 1a 38                 a3 = u64 [sp + 0x38]
  7190: 82 1b 30                 a4 = u64 [sp + 0x30]
  7193: 50 20 a0 00 8e 00        ra = 160, jump @454
      :                          @441 [@dyn 80]
  7199: 33 08 01                 a1 = 0x1
  7202: 52 07 d7                 jump @439 if a0 != 0
      :                          @442
  7205: 82 5a 18                 a3 = u64 [s0 + 0x18]
  7208: 64 67                    a0 = s1
  7210: 82 18 20                 a1 = u64 [sp + 0x20]
  7213: 82 19 28                 a2 = u64 [sp + 0x28]
  7216: b4 a0 02 a2 00           ra = 162, jump [a3]
      :                          @443 [@dyn 81]
  7221: 33 08 01                 a1 = 0x1
  7224: 52 07 c1                 jump @439 if a0 != 0
      :                          @444
  7227: 82 17 10                 a0 = u64 [sp + 0x10]
  7230: 9a 77                    a0 = -a0
  7232: 7b 17 38                 u64 [sp + 0x38] = a0
  7235: 33 06 ff                 s1 = 0xffffffffffffffff
  7238: 01                       fallthrough
      :                          @445
  7239: 82 17 38                 a0 = u64 [sp + 0x38]
  7242: c8 67 07                 a0 = a0 + s1
  7245: 51 17 ff 45              jump @452 if a0 == 4294967295
      :                          @446
  7249: 82 59 20                 a2 = u64 [s0 + 0x20]
  7252: 82 17 48                 a0 = u64 [sp + 0x48]
  7255: 82 18 40                 a1 = u64 [sp + 0x40]
  7258: b4 90 02 a4 00           ra = 164, jump [a2]
      :                          @447 [@dyn 82]
  7263: 95 66 01                 s1 = s1 + 0x1
  7266: 51 07 e5                 jump @445 if a0 == 0
      :                          @448
  7269: 28 39                    jump @453
      :                          @449
  7271: 82 6a 18                 a3 = u64 [s1 + 0x18]
  7274: 82 17 48                 a0 = u64 [sp + 0x48]
  7277: 82 18 20                 a1 = u64 [sp + 0x20]
  7280: 82 19 28                 a2 = u64 [sp + 0x28]
  7283: b4 a0 02 a6 00           ra = 166, jump [a3]
      :                          @450 [@dyn 83]
  7288: 33 08 01                 a1 = 0x1
  7291: 52 07 7e ff              jump @439 if a0 != 0
      :                          @451
  7295: 33 08                    a1 = 0
  7297: 82 16                    s1 = u64 [sp]
  7299: 82 17 10                 a0 = u64 [sp + 0x10]
  7302: 7a 67 30                 u32 [s1 + 0x30] = a0
  7305: 82 17 08                 a0 = u64 [sp + 0x8]
  7308: 78 67 38                 u8 [s1 + 0x38] = a0
  7311: 28 6a ff                 jump @439
      :                          @452
  7314: 82 16 10                 s1 = u64 [sp + 0x10]
  7317: 82 17 10                 a0 = u64 [sp + 0x10]
  7320: d8 76 08                 a1 = s1 <u a0
  7323: 28 5e ff                 jump @439
      :                          @453
  7326: 82 17 10                 a0 = u64 [sp + 0x10]
  7329: d8 76 08                 a1 = s1 <u a0
  7332: 28 55 ff                 jump @439
      :                          @454
  7335: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  7338: 7b 10 20                 u64 [sp + 0x20] = ra
  7341: 7b 15 18                 u64 [sp + 0x18] = s0
  7344: 7b 16 10                 u64 [sp + 0x10] = s1
  7347: 83 9c                    i32 a5 = a2 + 0
  7349: 33 02 00 00 11           t0 = 0x110000
  7354: 64 a6                    s1 = a3
  7356: 64 85                    s0 = a1
  7358: 64 7a                    a3 = a0
  7360: aa 2c 21                 jump @457 if a5 == t0
      :                          @455
  7363: 82 5c 20                 a5 = u64 [s0 + 0x20]
  7366: 64 a7                    a0 = a3
  7368: 64 98                    a1 = a2
  7370: 7b 1b 08                 u64 [sp + 0x8] = a4
  7373: 7b 1a                    u64 [sp] = a3
  7375: b4 c0 02 a8 00           ra = 168, jump [a5]
      :                          @456 [@dyn 84]
  7380: 82 1a                    a3 = u64 [sp]
  7382: 82 1b 08                 a4 = u64 [sp + 0x8]
  7385: 64 78                    a1 = a0
  7387: 33 07 01                 a0 = 0x1
  7390: 52 08 20                 jump @460 if a1 != 0
      :                          @457
  7393: 51 06 1a                 jump @459 if s1 == 0
      :                          @458
  7396: 82 5c 18                 a5 = u64 [s0 + 0x18]
  7399: 64 a7                    a0 = a3
  7401: 64 68                    a1 = s1
  7403: 64 b9                    a2 = a4
  7405: 82 10 20                 ra = u64 [sp + 0x20]
  7408: 82 15 18                 s0 = u64 [sp + 0x18]
  7411: 82 16 10                 s1 = u64 [sp + 0x10]
  7414: 95 11 28                 sp = sp + 0x28
  7417: 32 0c                    jump [a5]
      :                          @459
  7419: 33 07                    a0 = 0
  7421: 01                       fallthrough
      :                          @460
  7422: 82 10 20                 ra = u64 [sp + 0x20]
  7425: 82 15 18                 s0 = u64 [sp + 0x18]
  7428: 82 16 10                 s1 = u64 [sp + 0x10]
  7431: 95 11 28                 sp = sp + 0x28
  7434: 32 00                    ret
      :                          @461
  7436: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  7440: 7b 10 80 00              u64 [sp + 0x80] = ra
  7444: 7b 15 78                 u64 [sp + 0x78] = s0
  7447: 7b 16 70                 u64 [sp + 0x70] = s1
  7450: 49 11 60 20              u64 [sp + 96] = 0x20
  7454: 33 0a 03                 a3 = 0x3
  7457: 78 1a 68                 u8 [sp + 0x68] = a3
  7460: 82 96 20                 s1 = u64 [a2 + 0x20]
  7463: 49 11 30                 u64 [sp + 48] = 0
  7466: 49 11 40                 u64 [sp + 64] = 0
  7469: 7b 17 50                 u64 [sp + 0x50] = a0
  7472: 7b 18 58                 u64 [sp + 0x58] = a1
  7475: 51 06 0a 01              jump @483 if s1 == 0
      :                          @462
  7479: 82 97 28                 a0 = u64 [a2 + 0x28]
  7482: 51 07 79 01              jump @493 if a0 == 0
      :                          @463
  7486: 49 11 28                 u64 [sp + 40] = 0
  7489: 82 95                    s0 = u64 [a2]
  7491: 7b 19 08                 u64 [sp + 0x8] = a2
  7494: 82 98 10                 a1 = u64 [a2 + 0x10]
  7497: 7b 18 18                 u64 [sp + 0x18] = a1
  7500: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  7503: 97 88 03                 a1 = a1 << 0x3
  7506: 98 88 03                 a1 = a1 >> 0x3
  7509: 95 88 01                 a1 = a1 + 0x1
  7512: 7b 18                    u64 [sp] = a1
  7514: 95 55 08                 s0 = s0 + 0x8
  7517: 96 78 38                 a1 = a0 * 0x38
  7520: 95 66 18                 s1 = s1 + 0x18
  7523: 33 07 94 00              a0 = 0x94
  7527: 7b 17 10                 u64 [sp + 0x10] = a0
  7530: 01                       fallthrough
      :                          @464
  7531: 7b 18 20                 u64 [sp + 0x20] = a1
  7534: 82 59                    a2 = u64 [s0]
  7536: 51 09 18                 jump @467 if a2 == 0
      :                          @465
  7539: 82 1a 58                 a3 = u64 [sp + 0x58]
  7542: 82 17 50                 a0 = u64 [sp + 0x50]
  7545: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  7548: 82 aa 18                 a3 = u64 [a3 + 0x18]
  7551: b4 a0 02 aa 00           ra = 170, jump [a3]
      :                          @466 [@dyn 85]
  7556: 52 07 55 01              jump @496 if a0 != 0
      :                          @467
  7560: 81 67 10                 a0 = i32 [s1 + 0x10]
  7563: 7a 17 60                 u32 [sp + 0x60] = a0
  7566: 7c 67 18                 a0 = u8 [s1 + 0x18]
  7569: 78 17 68                 u8 [sp + 0x68] = a0
  7572: 81 67 14                 a0 = i32 [s1 + 0x14]
  7575: 7a 17 64                 u32 [sp + 0x64] = a0
  7578: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  7581: 82 67                    a0 = u64 [s1]
  7583: 51 08 26                 jump @472 if a1 == 0
      :                          @468
  7586: 52 18 01 16              jump @470 if a1 != 1
      :                          @469
  7590: 97 77 04                 a0 = a0 << 0x4
  7593: 82 18 18                 a1 = u64 [sp + 0x18]
  7596: c8 87 07                 a0 = a0 + a1
  7599: 82 78 08                 a1 = u64 [a0 + 0x8]
  7602: 82 19 10                 a2 = u64 [sp + 0x10]
  7605: aa 98 07                 jump @471 if a1 == a2
      :                          @470
  7608: 33 08                    a1 = 0
  7610: 28 0f                    jump @473
      :                          @471
  7612: 82 77                    a0 = u64 [a0]
  7614: 82 77                    a0 = u64 [a0]
  7616: 33 08 01                 a1 = 0x1
  7619: 28 06                    jump @473
      :                          @472
  7621: 33 08 01                 a1 = 0x1
  7624: 01                       fallthrough
      :                          @473
  7625: 7b 18 30                 u64 [sp + 0x30] = a1
  7628: 7b 17 38                 u64 [sp + 0x38] = a0
  7631: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  7634: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  7637: 51 08 26                 jump @478 if a1 == 0
      :                          @474
  7640: 52 18 01 16              jump @476 if a1 != 1
      :                          @475
  7644: 97 77 04                 a0 = a0 << 0x4
  7647: 82 18 18                 a1 = u64 [sp + 0x18]
  7650: c8 87 07                 a0 = a0 + a1
  7653: 82 78 08                 a1 = u64 [a0 + 0x8]
  7656: 82 19 10                 a2 = u64 [sp + 0x10]
  7659: aa 98 07                 jump @477 if a1 == a2
      :                          @476
  7662: 33 08                    a1 = 0
  7664: 28 0f                    jump @479
      :                          @477
  7666: 82 77                    a0 = u64 [a0]
  7668: 82 77                    a0 = u64 [a0]
  7670: 33 08 01                 a1 = 0x1
  7673: 28 06                    jump @479
      :                          @478
  7675: 33 08 01                 a1 = 0x1
  7678: 01                       fallthrough
      :                          @479
  7679: 7b 18 40                 u64 [sp + 0x40] = a1
  7682: 7b 17 48                 u64 [sp + 0x48] = a0
  7685: 82 67 08                 a0 = u64 [s1 + 0x8]
  7688: 97 77 04                 a0 = a0 << 0x4
  7691: 82 18 18                 a1 = u64 [sp + 0x18]
  7694: c8 78 08                 a1 = a1 + a0
  7697: 82 87                    a0 = u64 [a1]
  7699: 82 89 08                 a2 = u64 [a1 + 0x8]
  7702: 95 18 30                 a1 = sp + 0x30
  7705: b4 90 02 ac 00           ra = 172, jump [a2]
      :                          @480 [@dyn 86]
  7710: 52 07 bb 00              jump @496 if a0 != 0
      :                          @481
  7714: 95 55 10                 s0 = s0 + 0x10
  7717: 82 18 20                 a1 = u64 [sp + 0x20]
  7720: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  7723: 95 66 38                 s1 = s1 + 0x38
  7726: 82 17 28                 a0 = u64 [sp + 0x28]
  7729: 95 77 01                 a0 = a0 + 0x1
  7732: 7b 17 28                 u64 [sp + 0x28] = a0
  7735: 52 08 34 ff              jump @464 if a1 != 0
      :                          @482
  7739: 28 6b                    jump @491
      :                          @483
  7741: 82 97 18                 a0 = u64 [a2 + 0x18]
  7744: 51 07 73                 jump @493 if a0 == 0
      :                          @484
  7747: 82 95 10                 s0 = u64 [a2 + 0x10]
  7750: 33 0a                    a3 = 0
  7752: 97 78 04                 a1 = a0 << 0x4
  7755: c8 58 08                 a1 = a1 + s0
  7758: 7b 18 20                 u64 [sp + 0x20] = a1
  7761: 7b 19 08                 u64 [sp + 0x8] = a2
  7764: 82 96                    s1 = u64 [a2]
  7766: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  7769: 97 77 04                 a0 = a0 << 0x4
  7772: 98 77 04                 a0 = a0 >> 0x4
  7775: 95 77 01                 a0 = a0 + 0x1
  7778: 7b 17                    u64 [sp] = a0
  7780: 95 66 08                 s1 = s1 + 0x8
  7783: 01                       fallthrough
      :                          @485
  7784: 7b 1a 28                 u64 [sp + 0x28] = a3
  7787: 82 69                    a2 = u64 [s1]
  7789: 51 09 17                 jump @488 if a2 == 0
      :                          @486
  7792: 82 1a 58                 a3 = u64 [sp + 0x58]
  7795: 82 17 50                 a0 = u64 [sp + 0x50]
  7798: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  7801: 82 aa 18                 a3 = u64 [a3 + 0x18]
  7804: b4 a0 02 ae 00           ra = 174, jump [a3]
      :                          @487 [@dyn 87]
  7809: 52 07 58                 jump @496 if a0 != 0
      :                          @488
  7812: 82 57                    a0 = u64 [s0]
  7814: 82 59 08                 a2 = u64 [s0 + 0x8]
  7817: 95 18 30                 a1 = sp + 0x30
  7820: b4 90 02 b0 00           ra = 176, jump [a2]
      :                          @489 [@dyn 88]
  7825: 52 07 48                 jump @496 if a0 != 0
      :                          @490
  7828: 95 66 10                 s1 = s1 + 0x10
  7831: 95 55 10                 s0 = s0 + 0x10
  7834: 82 1a 28                 a3 = u64 [sp + 0x28]
  7837: 95 aa 01                 a3 = a3 + 0x1
  7840: 82 17 20                 a0 = u64 [sp + 0x20]
  7843: ab 75 c5                 jump @485 if s0 != a0
      :                          @491
  7846: 82 19 08                 a2 = u64 [sp + 0x8]
  7849: 82 1a                    a3 = u64 [sp]
  7851: 82 97 08                 a0 = u64 [a2 + 0x8]
  7854: ac 7a 0d                 jump @494 if a3 <u a0
      :                          @492
  7857: 28 2d                    jump @497
      :                          @493
  7859: 33 0a                    a3 = 0
  7861: 82 97 08                 a0 = u64 [a2 + 0x8]
  7864: 54 07 26                 jump @497 if a0 <=u 0
      :                          @494
  7867: 82 97                    a0 = u64 [a2]
  7869: 97 a8 04                 a1 = a3 << 0x4
  7872: c8 87 09                 a2 = a0 + a1
  7875: 82 1a 58                 a3 = u64 [sp + 0x58]
  7878: 82 17 50                 a0 = u64 [sp + 0x50]
  7881: 82 98                    a1 = u64 [a2]
  7883: 82 99 08                 a2 = u64 [a2 + 0x8]
  7886: 82 aa 18                 a3 = u64 [a3 + 0x18]
  7889: b4 a0 02 b2 00           ra = 178, jump [a3]
      :                          @495 [@dyn 89]
  7894: 51 07 08                 jump @497 if a0 == 0
      :                          @496
  7897: 33 07 01                 a0 = 0x1
  7900: 28 05                    jump @498
      :                          @497
  7902: 33 07                    a0 = 0
  7904: 01                       fallthrough
      :                          @498
  7905: 82 10 80 00              ra = u64 [sp + 0x80]
  7909: 82 15 78                 s0 = u64 [sp + 0x78]
  7912: 82 16 70                 s1 = u64 [sp + 0x70]
  7915: 95 11 88 00              sp = sp + 0x88
  7919: 32 00                    ret
      :                          @499 [@dyn 90]
  7921: 32 00                    ret
      :                          @500 [@dyn 91]
  7923: 95 11 80                 sp = sp + 0xffffffffffffff80
  7926: 7b 10 78                 u64 [sp + 0x78] = ra
  7929: 7b 15 70                 u64 [sp + 0x70] = s0
  7932: 7b 16 68                 u64 [sp + 0x68] = s1
  7935: 64 92                    t0 = a2
  7937: 33 00                    ra = 0
  7939: 33 0b                    a4 = 0
  7941: 33 05                    s0 = 0
  7943: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
  7953: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
  7959: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
  7969: 82 79 10                 a2 = u64 [a0 + 0x10]
  7972: 7b 19 48                 u64 [sp + 0x48] = a2
  7975: 82 79                    a2 = u64 [a0]
  7977: 7b 19 38                 u64 [sp + 0x38] = a2
  7980: 82 77 08                 a0 = u64 [a0 + 0x8]
  7983: 7b 17 30                 u64 [sp + 0x30] = a0
  7986: 33 07 48 04 01           a0 = 0x10448
  7991: 7b 17 08                 u64 [sp + 0x8] = a0
  7994: 3a 07 08 00 03           a0 = u64 [0x30008]
  7999: 7b 17 60                 u64 [sp + 0x60] = a0
  8002: 7b 18 58                 u64 [sp + 0x58] = a1
  8005: 95 88 08                 a1 = a1 + 0x8
  8008: 7b 18                    u64 [sp] = a1
  8010: 33 0c 0a                 a5 = 0xa
  8013: 7b 12 20                 u64 [sp + 0x20] = t0
  8016: 7b 13 18                 u64 [sp + 0x18] = t1
  8019: 7b 14 10                 u64 [sp + 0x10] = t2
  8022: 28 3b                    jump @504
      :                          @501
  8024: 64 06                    s1 = ra
  8026: c8 89 07                 a0 = a2 + a1
  8029: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
  8032: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  8035: 88 77 01                 a0 = a0 <u 0x1
  8038: 01                       fallthrough
      :                          @502
  8039: 82 1a 48                 a3 = u64 [sp + 0x48]
  8042: 78 a7                    u8 [a3] = a0
  8044: 82 17 30                 a0 = u64 [sp + 0x30]
  8047: 82 7a 18                 a3 = u64 [a0 + 0x18]
  8050: 82 17 38                 a0 = u64 [sp + 0x38]
  8053: b4 a0 02 b8 00           ra = 184, jump [a3]
      :                          @503 [@dyn 92]
  8058: 64 5b                    a4 = s0
  8060: 82 12 20                 t0 = u64 [sp + 0x20]
  8063: 82 13 18                 t1 = u64 [sp + 0x18]
  8066: 82 14 10                 t2 = u64 [sp + 0x10]
  8069: 64 60                    ra = s1
  8071: 33 0c 0a                 a5 = 0xa
  8074: 82 15 40                 s0 = u64 [sp + 0x40]
  8077: 52 07 64 01              jump @545 if a0 != 0
      :                          @504
  8081: 84 57 ff 00              a0 = s0 & 0xff
  8085: 52 07 58 01              jump @544 if a0 != 0
      :                          @505
  8089: 7b 1b 50                 u64 [sp + 0x50] = a4
  8092: ae 02 0a                 jump @508 if t0 >=u ra
      :                          @506
  8095: 28 ef 00                 jump @535
      :                          @507
  8098: ac 02 ec 00              jump @535 if t0 <u ra
      :                          @508
  8102: c9 02 08                 a1 = t0 - ra
  8105: 82 16 58                 s1 = u64 [sp + 0x58]
  8108: c8 06 06                 s1 = s1 + ra
  8111: 55 18 10 1d              jump @514 if a1 >=u 16
      :                          @509
  8115: aa 02 d8 00              jump @534 if t0 == ra
      :                          @510
  8119: 33 0a                    a3 = 0
  8121: 01                       fallthrough
      :                          @511
  8122: c8 a6 07                 a0 = s1 + a3
  8125: 7c 77                    a0 = u8 [a0]
  8127: aa c7 a5 00              jump @529 if a0 == a5
      :                          @512
  8131: 95 aa 01                 a3 = a3 + 0x1
  8134: ab a8 f4                 jump @511 if a1 != a3
      :                          @513
  8137: 28 c2 00                 jump @534
      :                          @514
  8140: 95 69 07                 a2 = s1 + 0x7
  8143: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
  8146: c9 6a 07                 a0 = a3 - s1
  8149: d3 6a 0a                 a3 = a3 ^ s1
  8152: 88 aa 01                 a3 = a3 <u 0x1
  8155: 88 7b 01                 a4 = a0 <u 0x1
  8158: d4 ba 0a                 a3 = a3 | a4
  8161: 51 0a 45                 jump @520 if a3 == 0
      :                          @515
  8164: 33 07                    a0 = 0
  8166: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  8169: 82 1b                    a4 = u64 [sp]
  8171: c8 0b 0b                 a4 = a4 + ra
  8174: 28 08                    jump @517
      :                          @516
  8176: 82 1b                    a4 = u64 [sp]
  8178: c8 0b 0b                 a4 = a4 + ra
  8181: 01                       fallthrough
      :                          @517
  8182: c8 76 0c                 a5 = s1 + a0
  8185: 82 cc                    a5 = u64 [a5]
  8187: c8 7b 09                 a2 = a4 + a0
  8190: 82 99                    a2 = u64 [a2]
  8192: d3 4c 05                 s0 = a5 ^ t2
  8195: c8 35 05                 s0 = s0 + t1
  8198: e0 c5 0c                 a5 = s0 & ~a5
  8201: d3 49 05                 s0 = a2 ^ t2
  8204: c8 35 05                 s0 = s0 + t1
  8207: e0 95 09                 a2 = s0 & ~a2
  8210: d4 c9 09                 a2 = a2 | a5
  8213: 82 1c 60                 a5 = u64 [sp + 0x60]
  8216: d2 c9 09                 a2 = a2 & a5
  8219: 52 09 1f                 jump @523 if a2 != 0
      :                          @518
  8222: 95 77 10                 a0 = a0 + 0x10
  8225: ae 7a d5                 jump @517 if a3 >=u a0
      :                          @519
  8228: 28 16                    jump @523
      :                          @520
  8230: c8 a6 0b                 a4 = s1 + a3
  8233: 7c bb                    a4 = u8 [a4]
  8235: aa cb 51                 jump @532 if a4 == a5
      :                          @521
  8238: 95 aa 01                 a3 = a3 + 0x1
  8241: ab a7 f5                 jump @520 if a0 != a3
      :                          @522
  8244: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  8247: ae 7a b9                 jump @516 if a3 >=u a0
      :                          @523
  8250: aa 87 9b 00              jump @541 if a0 == a1
      :                          @524
  8254: 33 0a                    a3 = 0
  8256: c8 76 06                 s1 = s1 + a0
  8259: c9 72 08                 a1 = t0 - a0
  8262: c9 08 08                 a1 = a1 - ra
  8265: 33 0c 0a                 a5 = 0xa
  8268: 82 1b 50                 a4 = u64 [sp + 0x50]
  8271: 01                       fallthrough
      :                          @525
  8272: c8 a6 09                 a2 = s1 + a3
  8275: 7c 99                    a2 = u8 [a2]
  8277: aa c9 0b                 jump @528 if a2 == a5
      :                          @526
  8280: 95 aa 01                 a3 = a3 + 0x1
  8283: ab a8 f5                 jump @525 if a1 != a3
      :                          @527
  8286: 28 2d                    jump @534
      :                          @528
  8288: c8 7a 0a                 a3 = a3 + a0
  8291: 01                       fallthrough
      :                          @529
  8292: c8 0a 0a                 a3 = a3 + ra
  8295: 95 a0 01                 ra = a3 + 0x1
  8298: ae 2a 38 ff              jump @507 if a3 >=u t0
      :                          @530
  8302: 82 17 58                 a0 = u64 [sp + 0x58]
  8305: c8 7a 0a                 a3 = a3 + a0
  8308: 7c a7                    a0 = u8 [a3]
  8310: ab c7 2c ff              jump @507 if a0 != a5
      :                          @531
  8314: 28 62                    jump @542
      :                          @532
  8316: 82 1b 50                 a4 = u64 [sp + 0x50]
  8319: c8 0a 0a                 a3 = a3 + ra
  8322: 95 a0 01                 ra = a3 + 0x1
  8325: ac 2a e9                 jump @530 if a3 <u t0
      :                          @533
  8328: 28 1a ff                 jump @507
      :                          @534
  8331: 64 20                    ra = t0
  8333: 01                       fallthrough
      :                          @535
  8334: 49 11 40 01              u64 [sp + 64] = 0x1
  8338: 64 b5                    s0 = a4
  8340: 64 26                    s1 = t0
  8342: aa 2b 57                 jump @544 if a4 == t0
      :                          @536
  8345: 82 17 48                 a0 = u64 [sp + 0x48]
  8348: 7c 77                    a0 = u8 [a0]
  8350: 51 07 23                 jump @539 if a0 == 0
      :                          @537
  8353: 82 17 30                 a0 = u64 [sp + 0x30]
  8356: 82 7a 18                 a3 = u64 [a0 + 0x18]
  8359: 33 09 04                 a2 = 0x4
  8362: 82 17 38                 a0 = u64 [sp + 0x38]
  8365: 82 18 08                 a1 = u64 [sp + 0x8]
  8368: 7b 10 28                 u64 [sp + 0x28] = ra
  8371: b4 a0 02 ba 00           ra = 186, jump [a3]
      :                          @538 [@dyn 93]
  8376: 82 1b 50                 a4 = u64 [sp + 0x50]
  8379: 82 10 28                 ra = u64 [sp + 0x28]
  8382: 52 07 33                 jump @545 if a0 != 0
      :                          @539
  8385: c9 b6 09                 a2 = s1 - a4
  8388: 82 18 58                 a1 = u64 [sp + 0x58]
  8391: c8 b8 08                 a1 = a1 + a4
  8394: ab b6 8e fe              jump @501 if s1 != a4
      :                          @540
  8398: 64 06                    s1 = ra
  8400: 33 07                    a0 = 0
  8402: 28 95 fe                 jump @502
      :                          @541
  8405: 64 20                    ra = t0
  8407: 82 1b 50                 a4 = u64 [sp + 0x50]
  8410: 28 b4                    jump @535
      :                          @542
  8412: 49 11 40                 u64 [sp + 64] = 0
  8415: 64 05                    s0 = ra
  8417: 64 06                    s1 = ra
  8419: 82 17 48                 a0 = u64 [sp + 0x48]
  8422: 7c 77                    a0 = u8 [a0]
  8424: 52 07 b9                 jump @537 if a0 != 0
      :                          @543
  8427: 28 d6                    jump @539
      :                          @544
  8429: 33 07                    a0 = 0
  8431: 28 06                    jump @546
      :                          @545
  8433: 33 07 01                 a0 = 0x1
  8436: 01                       fallthrough
      :                          @546
  8437: 82 10 78                 ra = u64 [sp + 0x78]
  8440: 82 15 70                 s0 = u64 [sp + 0x70]
  8443: 82 16 68                 s1 = u64 [sp + 0x68]
  8446: 95 11 80 00              sp = sp + 0x80
  8450: 32 00                    ret
      :                          @547 [@dyn 94]
  8452: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  8455: 7b 10 20                 u64 [sp + 0x20] = ra
  8458: 7b 15 18                 u64 [sp + 0x18] = s0
  8461: 7b 16 10                 u64 [sp + 0x10] = s1
  8464: 82 75 10                 s0 = u64 [a0 + 0x10]
  8467: 7c 59                    a2 = u8 [s0]
  8469: 82 7b                    a4 = u64 [a0]
  8471: 82 76 08                 s1 = u64 [a0 + 0x8]
  8474: 51 09 33                 jump @551 if a2 == 0
      :                          @548
  8477: 82 6a 18                 a3 = u64 [s1 + 0x18]
  8480: 7b 18 08                 u64 [sp + 0x8] = a1
  8483: 33 08 48 04 01           a1 = 0x10448
  8488: 33 09 04                 a2 = 0x4
  8491: 64 b7                    a0 = a4
  8493: 7b 1b                    u64 [sp] = a4
  8495: b4 a0 02 be 00           ra = 190, jump [a3]
      :                          @549 [@dyn 95]
  8500: 82 18 08                 a1 = u64 [sp + 0x8]
  8503: 82 1b                    a4 = u64 [sp]
  8505: 51 07 14                 jump @551 if a0 == 0
      :                          @550
  8508: 33 07 01                 a0 = 0x1
  8511: 82 10 20                 ra = u64 [sp + 0x20]
  8514: 82 15 18                 s0 = u64 [sp + 0x18]
  8517: 82 16 10                 s1 = u64 [sp + 0x10]
  8520: 95 11 28                 sp = sp + 0x28
  8523: 32 00                    ret
      :                          @551
  8525: 83 87                    i32 a0 = a1 + 0
  8527: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  8530: 88 77 01                 a0 = a0 <u 0x1
  8533: 78 57                    u8 [s0] = a0
  8535: 82 6c 20                 a5 = u64 [s1 + 0x20]
  8538: 64 b7                    a0 = a4
  8540: 82 10 20                 ra = u64 [sp + 0x20]
  8543: 82 15 18                 s0 = u64 [sp + 0x18]
  8546: 82 16 10                 s1 = u64 [sp + 0x10]
  8549: 95 11 28                 sp = sp + 0x28
  8552: 32 0c                    jump [a5]
      :                          @552 [@dyn 96]
  8554: 64 8a                    a3 = a1
  8556: 33 08 10 04 01           a1 = 0x10410
  8561: 64 a9                    a2 = a3
  8563: 28 99 fb                 jump @461
      :                          @553
  8566: 95 11 70 ff              sp = sp + 0xffffffffffffff70
  8570: 7b 10 88 00              u64 [sp + 0x88] = ra
  8574: 7b 15 80 00              u64 [sp + 0x80] = s0
  8578: 7b 16 78                 u64 [sp + 0x78] = s1
  8581: 64 75                    s0 = a0
  8583: 7c 77 08                 a0 = u8 [a0 + 0x8]
  8586: 64 8b                    a4 = a1
  8588: 33 08 01                 a1 = 0x1
  8591: 33 06 01                 s1 = 0x1
  8594: 51 07 1d                 jump @555 if a0 == 0
      :                          @554
  8597: 78 56 08                 u8 [s0 + 0x8] = s1
  8600: 46 15 09 01              u8 [s0 + 9] = 0x1
  8604: 64 57                    a0 = s0
  8606: 82 10 88 00              ra = u64 [sp + 0x88]
  8610: 82 15 80 00              s0 = u64 [sp + 0x80]
  8614: 82 16 78                 s1 = u64 [sp + 0x78]
  8617: 95 11 90 00              sp = sp + 0x90
  8621: 32 00                    ret
      :                          @555
  8623: 64 9a                    a3 = a2
  8625: 82 5c                    a5 = u64 [s0]
  8627: 80 c7 34                 a0 = u32 [a5 + 0x34]
  8630: 7c 58 09                 a1 = u8 [s0 + 0x9]
  8633: 84 79 04                 a2 = a0 & 0x4
  8636: 52 09 45                 jump @561 if a2 != 0
      :                          @556
  8639: 51 08 32                 jump @559 if a1 == 0
      :                          @557
  8642: 82 c8 28                 a1 = u64 [a5 + 0x28]
  8645: 82 c7 20                 a0 = u64 [a5 + 0x20]
  8648: 82 83 18                 t1 = u64 [a1 + 0x18]
  8651: 33 08 50 04 01           a1 = 0x10450
  8656: 33 09 02                 a2 = 0x2
  8659: 64 a6                    s1 = a3
  8661: 7b 1b 10                 u64 [sp + 0x10] = a4
  8664: 7b 1c 08                 u64 [sp + 0x8] = a5
  8667: b4 30 02 c2 00           ra = 194, jump [t1]
      :                          @558 [@dyn 97]
  8672: 82 1c 08                 a5 = u64 [sp + 0x8]
  8675: 82 1b 10                 a4 = u64 [sp + 0x10]
  8678: 64 6a                    a3 = s1
  8680: 33 08 01                 a1 = 0x1
  8683: 33 06 01                 s1 = 0x1
  8686: 52 07 a7                 jump @554 if a0 != 0
      :                          @559
  8689: 64 b7                    a0 = a4
  8691: 64 c8                    a1 = a5
  8693: b4 a0 02 c4 00           ra = 196, jump [a3]
      :                          @560 [@dyn 98]
  8698: 33 08 01                 a1 = 0x1
  8701: 64 76                    s1 = a0
  8703: 28 96                    jump @554
      :                          @561
  8705: 52 08 37                 jump @565 if a1 != 0
      :                          @562
  8708: 82 c8 28                 a1 = u64 [a5 + 0x28]
  8711: 82 c7 20                 a0 = u64 [a5 + 0x20]
  8714: 82 83 18                 t1 = u64 [a1 + 0x18]
  8717: 33 08 54 04 01           a1 = 0x10454
  8722: 33 09 01                 a2 = 0x1
  8725: 33 06 01                 s1 = 0x1
  8728: 7b 1a                    u64 [sp] = a3
  8730: 7b 1b 10                 u64 [sp + 0x10] = a4
  8733: 7b 1c 08                 u64 [sp + 0x8] = a5
  8736: b4 30 02 c6 00           ra = 198, jump [t1]
      :                          @563 [@dyn 99]
  8741: 82 1c 08                 a5 = u64 [sp + 0x8]
  8744: 82 1b 10                 a4 = u64 [sp + 0x10]
  8747: 82 1a                    a3 = u64 [sp]
  8749: 33 08 01                 a1 = 0x1
  8752: 52 07 65 ff              jump @554 if a0 != 0
      :                          @564
  8756: 81 c7 34                 a0 = i32 [a5 + 0x34]
  8759: 01                       fallthrough
      :                          @565
  8760: 33 06 01                 s1 = 0x1
  8763: 78 16 37                 u8 [sp + 0x37] = s1
  8766: 82 c8 20                 a1 = u64 [a5 + 0x20]
  8769: 82 c9 28                 a2 = u64 [a5 + 0x28]
  8772: 7b 18 18                 u64 [sp + 0x18] = a1
  8775: 7b 19 20                 u64 [sp + 0x20] = a2
  8778: 95 18 37                 a1 = sp + 0x37
  8781: 7b 18 28                 u64 [sp + 0x28] = a1
  8784: 81 c8 30                 a1 = i32 [a5 + 0x30]
  8787: 7c c9 38                 a2 = u8 [a5 + 0x38]
  8790: 82 c3                    t1 = u64 [a5]
  8792: 82 c4 08                 t2 = u64 [a5 + 0x8]
  8795: 82 c0 10                 ra = u64 [a5 + 0x10]
  8798: 82 c2 18                 t0 = u64 [a5 + 0x18]
  8801: 7a 17 6c                 u32 [sp + 0x6c] = a0
  8804: 7a 18 68                 u32 [sp + 0x68] = a1
  8807: 78 19 70                 u8 [sp + 0x70] = a2
  8810: 7b 13 38                 u64 [sp + 0x38] = t1
  8813: 7b 14 40                 u64 [sp + 0x40] = t2
  8816: 7b 10 48                 u64 [sp + 0x48] = ra
  8819: 7b 12 50                 u64 [sp + 0x50] = t0
  8822: 95 17 18                 a0 = sp + 0x18
  8825: 7b 17 58                 u64 [sp + 0x58] = a0
  8828: 33 07 10 04 01           a0 = 0x10410
  8833: 7b 17 60                 u64 [sp + 0x60] = a0
  8836: 95 18 38                 a1 = sp + 0x38
  8839: 64 b7                    a0 = a4
  8841: b4 a0 02 c8 00           ra = 200, jump [a3]
      :                          @566 [@dyn 100]
  8846: 52 07 21                 jump @569 if a0 != 0
      :                          @567
  8849: 82 18 60                 a1 = u64 [sp + 0x60]
  8852: 82 17 58                 a0 = u64 [sp + 0x58]
  8855: 82 8a 18                 a3 = u64 [a1 + 0x18]
  8858: 33 08 52 04 01           a1 = 0x10452
  8863: 33 09 02                 a2 = 0x2
  8866: b4 a0 02 ca 00           ra = 202, jump [a3]
      :                          @568 [@dyn 101]
  8871: 64 76                    s1 = a0
  8873: 33 08 01                 a1 = 0x1
  8876: 28 e9 fe                 jump @554
      :                          @569
  8879: 33 08 01                 a1 = 0x1
  8882: 28 e3 fe                 jump @554
      :                          @570
  8885: 51 08 9b 00              jump @591 if a1 == 0
      :                          @571
  8889: 64 79                    a2 = a0
  8891: 7c 77                    a0 = u8 [a0]
  8893: 51 07 91 00              jump @590 if a0 == 0
      :                          @572
  8897: 51 27 ff 00 90 00        jump @592 if a0 == 255
      :                          @573
  8903: 6c 7a                    a3 = sext.b a0
  8905: 57 0a 09                 jump @575 if a3 <s 0
      :                          @574
  8908: 33 0a                    a3 = 0
  8910: 33 08                    a1 = 0
  8912: 28 73                    jump @589
      :                          @575
  8914: 55 27 c0 00 0d           jump @577 if a0 >=u 192
      :                          @576
  8919: 33 0a 01                 a3 = 0x1
  8922: 33 0b 80                 a4 = 0xffffffffffffff80
  8925: 28 4a                    jump @586
      :                          @577
  8927: 55 27 e0 00 0e           jump @579 if a0 >=u 224
      :                          @578
  8932: 33 0a 02                 a3 = 0x2
  8935: 33 0b 40 ff              a4 = 0xffffffffffffff40
  8939: 28 3c                    jump @586
      :                          @579
  8941: 55 27 f0 00 0e           jump @581 if a0 >=u 240
      :                          @580
  8946: 33 0a 03                 a3 = 0x3
  8949: 33 0b 20 ff              a4 = 0xffffffffffffff20
  8953: 28 2e                    jump @586
      :                          @581
  8955: 55 27 f8 00 0e           jump @583 if a0 >=u 248
      :                          @582
  8960: 33 0a 04                 a3 = 0x4
  8963: 33 0b 10 ff              a4 = 0xffffffffffffff10
  8967: 28 20                    jump @586
      :                          @583
  8969: 55 27 fc 00 0e           jump @585 if a0 >=u 252
      :                          @584
  8974: 33 0a 05                 a3 = 0x5
  8977: 33 0b 08 ff              a4 = 0xffffffffffffff08
  8981: 28 12                    jump @586
      :                          @585
  8983: 88 7a fe 00              a3 = a0 <u 0xfe
  8987: 33 0b 04 ff              a4 = 0xffffffffffffff04
  8991: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  8995: 85 aa 07                 a3 = a3 ^ 0x7
  8998: 01                       fallthrough
      :                          @586
  8999: ae 8a 2b                 jump @593 if a3 >=u a1
      :                          @587
  9002: 33 08                    a1 = 0
  9004: c8 b7 07                 a0 = a0 + a4
  9007: 64 ab                    a4 = a3
  9009: 01                       fallthrough
      :                          @588
  9010: c8 b9 0c                 a5 = a2 + a4
  9013: 7c cc                    a5 = u8 [a5]
  9015: 97 88 08                 a1 = a1 << 0x8
  9018: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  9021: d4 c8 08                 a1 = a1 | a5
  9024: 52 0b f2                 jump @588 if a4 != 0
      :                          @589
  9027: 8a a9 03                 i32 a2 = a3 << 0x3
  9030: cf 97 07                 a0 = a0 << a2
  9033: c8 87 07                 a0 = a0 + a1
  9036: 32 00                    ret
      :                          @590
  9038: 32 00                    ret
      :                          @591
  9040: 00                       trap
      :                          @592
  9041: 00                       trap
      :                          @593
  9042: 00                       trap
