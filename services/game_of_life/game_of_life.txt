// RO data = 560/560 bytes
// RW data = 8/4128 bytes
// Stack size = 409600 bytes
// Jump table entry point size = 2 bytes
// RO data = [70, 105, 110, 105, 115, 104, 32, 103, 108, 105, 100, 101, 114, 32, 105, 110, 105, 116, 44, 32, 112, 108, 97, 99, 101, 100, 32, 0, 0, 0, 0, 0, 83, 116, 101, 112, 95, 110, 58, 32, 9, 0, 0, 0, 0, 0, 0, 0, 32, 103, 108, 105, 100, 101, 114, 115, 44, 32, 103, 108, 105, 100, 101, 114, 115, 58, 32, 44, 32, 116, 111, 116, 97, 108, 95, 115, 116, 101, 112, 115, 58, 32, 44, 32, 70, 101, 116, 99, 104, 101, 100, 32, 32, 115, 101, 103, 109, 101, 110, 116, 115, 44, 32, 101, 120, 112, 111, 114, 116, 101, 100, 32, 32, 115, 101, 103, 109, 101, 110, 116, 115, 44, 32, 100, 111, 110, 101, 0, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 48, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 32, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 56, 0, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 67, 0, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 32, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 82, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 92, 0, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 32, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 101, 0, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 112, 0, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 68, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 70, 0, 0, 0, 0, 0, 0, 0, 76, 0, 0, 0, 0, 0, 0, 0, 84, 0, 0, 0, 0, 0, 0, 0]
// RW data = [75, 89, 134, 56, 214, 197, 109, 52]
// Instructions = 2280
// Code size = 6806 bytes

      :                          @0
     0: 28 84 02 00 00           jump @45
      :                          @1
     5: 28 3d 0f 00 00           jump @236
      :                          @2
    10: 28 41 0f                 jump @237
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 64 82                    t0 = a1
    23: 80 88 34                 a1 = u32 [a1 + 0x34]
    26: 84 89 10                 a2 = a1 & 0x10
    29: 52 09 28                 jump @6 if a2 != 0
      :                          @4
    32: 84 88 20                 a1 = a1 & 0x20
    35: 52 08 68                 jump @10 if a1 != 0
      :                          @5
    38: 81 77                    a0 = i32 [a0]
    40: 89 79                    a2 = a0 <s 0
    42: 85 98 01                 a1 = a2 ^ 0x1
    45: 97 7a 20                 a3 = a0 << 0x20
    48: 98 aa 20                 a3 = a3 >> 0x20
    51: 9a 77                    a0 = -a0
    53: da 9a 07                 a0 = a3 if a2 == 0
    56: 64 29                    a2 = t0
    58: 82 10 80 00              ra = u64 [sp + 0x80]
    62: 95 11 88 00              sp = sp + 0x88
    66: 28 b3 14                 jump @377
      :                          @6
    69: 81 7a                    a3 = i32 [a0]
    71: 33 08 81 00              a1 = 0x81
    75: 95 17 7f                 a0 = sp + 0x7f
    78: 33 03 57                 t1 = 0x57
    81: 01                       fallthrough
      :                          @7
    82: 64 8b                    a4 = a1
    84: 8b ac 04                 i32 a5 = a3 >> 0x4
    87: 84 aa 0f                 a3 = a3 & 0xf
    90: 88 a8 0a                 a1 = a3 <u 0xa
    93: 33 09 30                 a2 = 0x30
    96: da 83 09                 a2 = t1 if a1 == 0
    99: be a9 09                 i32 a2 = a2 + a3
   102: 78 79                    u8 [a0] = a2
   104: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   107: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   110: 64 ca                    a3 = a5
   112: 52 0c e2                 jump @7 if a5 != 0
      :                          @8
   115: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   118: 56 27 80 00 71           jump @16 if a0 >u 128
      :                          @9
   123: 9a 8c 81 00              a5 = 0x81 - a1
   127: 64 1b                    a4 = sp
   129: c8 7b 0b                 a4 = a4 + a0
   132: 33 09 80 00 01           a2 = 0x10080
   137: 28 47                    jump @14
      :                          @10
   139: 81 7a                    a3 = i32 [a0]
   141: 33 08 81 00              a1 = 0x81
   145: 95 17 7f                 a0 = sp + 0x7f
   148: 33 03 37                 t1 = 0x37
   151: 01                       fallthrough
      :                          @11
   152: 64 8b                    a4 = a1
   154: 8b ac 04                 i32 a5 = a3 >> 0x4
   157: 84 aa 0f                 a3 = a3 & 0xf
   160: 88 a8 0a                 a1 = a3 <u 0xa
   163: 33 09 30                 a2 = 0x30
   166: da 83 09                 a2 = t1 if a1 == 0
   169: be a9 09                 i32 a2 = a2 + a3
   172: 78 79                    u8 [a0] = a2
   174: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   177: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   180: 64 ca                    a3 = a5
   182: 52 0c e2                 jump @11 if a5 != 0
      :                          @12
   185: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   188: 56 27 80 00 2b           jump @16 if a0 >u 128
      :                          @13
   193: 9a 8c 81 00              a5 = 0x81 - a1
   197: 64 1b                    a4 = sp
   199: c8 7b 0b                 a4 = a4 + a0
   202: 33 09 80 00 01           a2 = 0x10080
   207: 01                       fallthrough
      :                          @14
   208: 33 08 01                 a1 = 0x1
   211: 33 0a 02                 a3 = 0x2
   214: 64 27                    a0 = t0
   216: 50 10 04 3f 15           ra = 4, jump @387
      :                          @15 [@dyn 2]
   221: 82 10 80 00              ra = u64 [sp + 0x80]
   225: 95 11 88 00              sp = sp + 0x88
   229: 32 00                    ret
      :                          @16
   231: 00                       trap
      :                          @17 [@dyn 3]
   232: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   236: 7b 10 80 00              u64 [sp + 0x80] = ra
   240: 64 82                    t0 = a1
   242: 80 88 34                 a1 = u32 [a1 + 0x34]
   245: 84 89 10                 a2 = a1 & 0x10
   248: 52 09 1b                 jump @20 if a2 != 0
      :                          @18
   251: 84 88 20                 a1 = a1 & 0x20
   254: 52 08 5b                 jump @24 if a1 != 0
      :                          @19
   257: 80 77                    a0 = u32 [a0]
   259: 33 08 01                 a1 = 0x1
   262: 64 29                    a2 = t0
   264: 82 10 80 00              ra = u64 [sp + 0x80]
   268: 95 11 88 00              sp = sp + 0x88
   272: 28 e5 13                 jump @377
      :                          @20
   275: 81 7a                    a3 = i32 [a0]
   277: 33 08 81 00              a1 = 0x81
   281: 95 17 7f                 a0 = sp + 0x7f
   284: 33 03 57                 t1 = 0x57
   287: 01                       fallthrough
      :                          @21
   288: 64 8b                    a4 = a1
   290: 8b ac 04                 i32 a5 = a3 >> 0x4
   293: 84 aa 0f                 a3 = a3 & 0xf
   296: 88 a8 0a                 a1 = a3 <u 0xa
   299: 33 09 30                 a2 = 0x30
   302: da 83 09                 a2 = t1 if a1 == 0
   305: be a9 09                 i32 a2 = a2 + a3
   308: 78 79                    u8 [a0] = a2
   310: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   313: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   316: 64 ca                    a3 = a5
   318: 52 0c e2                 jump @21 if a5 != 0
      :                          @22
   321: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   324: 56 27 80 00 71           jump @30 if a0 >u 128
      :                          @23
   329: 9a 8c 81 00              a5 = 0x81 - a1
   333: 64 1b                    a4 = sp
   335: c8 7b 0b                 a4 = a4 + a0
   338: 33 09 80 00 01           a2 = 0x10080
   343: 28 47                    jump @28
      :                          @24
   345: 81 7a                    a3 = i32 [a0]
   347: 33 08 81 00              a1 = 0x81
   351: 95 17 7f                 a0 = sp + 0x7f
   354: 33 03 37                 t1 = 0x37
   357: 01                       fallthrough
      :                          @25
   358: 64 8b                    a4 = a1
   360: 8b ac 04                 i32 a5 = a3 >> 0x4
   363: 84 aa 0f                 a3 = a3 & 0xf
   366: 88 a8 0a                 a1 = a3 <u 0xa
   369: 33 09 30                 a2 = 0x30
   372: da 83 09                 a2 = t1 if a1 == 0
   375: be a9 09                 i32 a2 = a2 + a3
   378: 78 79                    u8 [a0] = a2
   380: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   383: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   386: 64 ca                    a3 = a5
   388: 52 0c e2                 jump @25 if a5 != 0
      :                          @26
   391: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   394: 56 27 80 00 2b           jump @30 if a0 >u 128
      :                          @27
   399: 9a 8c 81 00              a5 = 0x81 - a1
   403: 64 1b                    a4 = sp
   405: c8 7b 0b                 a4 = a4 + a0
   408: 33 09 80 00 01           a2 = 0x10080
   413: 01                       fallthrough
      :                          @28
   414: 33 08 01                 a1 = 0x1
   417: 33 0a 02                 a3 = 0x2
   420: 64 27                    a0 = t0
   422: 50 10 08 71 14           ra = 8, jump @387
      :                          @29 [@dyn 4]
   427: 82 10 80 00              ra = u64 [sp + 0x80]
   431: 95 11 88 00              sp = sp + 0x88
   435: 32 00                    ret
      :                          @30
   437: 00                       trap
      :                          @31 [@dyn 5]
   438: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   442: 7b 10 80 00              u64 [sp + 0x80] = ra
   446: 64 82                    t0 = a1
   448: 80 88 34                 a1 = u32 [a1 + 0x34]
   451: 84 89 10                 a2 = a1 & 0x10
   454: 52 09 1b                 jump @34 if a2 != 0
      :                          @32
   457: 84 88 20                 a1 = a1 & 0x20
   460: 52 08 5b                 jump @38 if a1 != 0
      :                          @33
   463: 82 77                    a0 = u64 [a0]
   465: 33 08 01                 a1 = 0x1
   468: 64 29                    a2 = t0
   470: 82 10 80 00              ra = u64 [sp + 0x80]
   474: 95 11 88 00              sp = sp + 0x88
   478: 28 17 13                 jump @377
      :                          @34
   481: 82 7a                    a3 = u64 [a0]
   483: 33 08 81 00              a1 = 0x81
   487: 95 17 7f                 a0 = sp + 0x7f
   490: 33 03 57                 t1 = 0x57
   493: 01                       fallthrough
      :                          @35
   494: 64 8b                    a4 = a1
   496: 98 ac 04                 a5 = a3 >> 0x4
   499: 84 aa 0f                 a3 = a3 & 0xf
   502: 88 a8 0a                 a1 = a3 <u 0xa
   505: 33 09 30                 a2 = 0x30
   508: da 83 09                 a2 = t1 if a1 == 0
   511: be a9 09                 i32 a2 = a2 + a3
   514: 78 79                    u8 [a0] = a2
   516: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   519: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   522: 64 ca                    a3 = a5
   524: 52 0c e2                 jump @35 if a5 != 0
      :                          @36
   527: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   530: 56 27 80 00 71           jump @44 if a0 >u 128
      :                          @37
   535: 9a 8c 81 00              a5 = 0x81 - a1
   539: 64 1b                    a4 = sp
   541: c8 7b 0b                 a4 = a4 + a0
   544: 33 09 80 00 01           a2 = 0x10080
   549: 28 47                    jump @42
      :                          @38
   551: 82 7a                    a3 = u64 [a0]
   553: 33 08 81 00              a1 = 0x81
   557: 95 17 7f                 a0 = sp + 0x7f
   560: 33 03 37                 t1 = 0x37
   563: 01                       fallthrough
      :                          @39
   564: 64 8b                    a4 = a1
   566: 98 ac 04                 a5 = a3 >> 0x4
   569: 84 aa 0f                 a3 = a3 & 0xf
   572: 88 a8 0a                 a1 = a3 <u 0xa
   575: 33 09 30                 a2 = 0x30
   578: da 83 09                 a2 = t1 if a1 == 0
   581: be a9 09                 i32 a2 = a2 + a3
   584: 78 79                    u8 [a0] = a2
   586: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   589: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   592: 64 ca                    a3 = a5
   594: 52 0c e2                 jump @39 if a5 != 0
      :                          @40
   597: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   600: 56 27 80 00 2b           jump @44 if a0 >u 128
      :                          @41
   605: 9a 8c 81 00              a5 = 0x81 - a1
   609: 64 1b                    a4 = sp
   611: c8 7b 0b                 a4 = a4 + a0
   614: 33 09 80 00 01           a2 = 0x10080
   619: 01                       fallthrough
      :                          @42
   620: 33 08 01                 a1 = 0x1
   623: 33 0a 02                 a3 = 0x2
   626: 64 27                    a0 = t0
   628: 50 10 0c a3 13           ra = 12, jump @387
      :                          @43 [@dyn 6]
   633: 82 10 80 00              ra = u64 [sp + 0x80]
   637: 95 11 88 00              sp = sp + 0x88
   641: 32 00                    ret
      :                          @44
   643: 00                       trap
      :                          @45 [export #0: 'refine']
   644: 95 11 08 f8              sp = sp + 0xfffffffffffff808
   648: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
   652: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
   656: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
   660: 95 11 80 c3 fd           sp = sp + 0xfffffffffffdc380
   665: 53 18 04 81 0c           jump @228 if a1 <u 4
      :                          @46
   670: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
   673: 51 08 79 0c              jump @228 if a1 == 0
      :                          @47
   677: 95 76 04                 s1 = a0 + 0x4
   680: 7d 6a                    a3 = i8 [s1]
   682: 84 ac ff 00              a5 = a3 & 0xff
   686: 33 09 01                 a2 = 0x1
   689: 59 0a 44                 jump @55 if a3 >=s 0
      :                          @48
   692: 33 0a c0 00              a3 = 0xc0
   696: 33 09 02                 a2 = 0x2
   699: ac ac 36                 jump @54 if a5 <u a3
      :                          @49
   702: 33 0a e0 00              a3 = 0xe0
   706: 33 09 03                 a2 = 0x3
   709: ac ac 2c                 jump @54 if a5 <u a3
      :                          @50
   712: 33 0a f0 00              a3 = 0xf0
   716: 33 09 04                 a2 = 0x4
   719: ac ac 22                 jump @54 if a5 <u a3
      :                          @51
   722: 33 0a f8 00              a3 = 0xf8
   726: 33 09 05                 a2 = 0x5
   729: ac ac 18                 jump @54 if a5 <u a3
      :                          @52
   732: 33 0a fc 00              a3 = 0xfc
   736: 33 09 06                 a2 = 0x6
   739: ac ac 0e                 jump @54 if a5 <u a3
      :                          @53
   742: 88 c9 fe 00              a2 = a5 <u 0xfe
   746: 33 0a 08                 a3 = 0x8
   749: c9 9a 09                 a2 = a3 - a2
   752: 01                       fallthrough
      :                          @54
   753: ac 98 4f 0c              jump @234 if a1 <u a2
      :                          @55
   757: 51 0c 91 00              jump @74 if a5 == 0
      :                          @56
   761: 51 2c ff 00 46 0c        jump @233 if a5 == 255
      :                          @57
   767: 6c ca                    a3 = sext.b a5
   769: 57 0a 09                 jump @59 if a3 <s 0
      :                          @58
   772: 33 05                    s0 = 0
   774: 33 0a                    a3 = 0
   776: 28 74                    jump @73
      :                          @59
   778: 55 2c c0 00 0d           jump @61 if a5 >=u 192
      :                          @60
   783: 33 05 01                 s0 = 0x1
   786: 33 07 80                 a0 = 0xffffffffffffff80
   789: 28 4a                    jump @70
      :                          @61
   791: 55 2c e0 00 0e           jump @63 if a5 >=u 224
      :                          @62
   796: 33 05 02                 s0 = 0x2
   799: 33 07 40 ff              a0 = 0xffffffffffffff40
   803: 28 3c                    jump @70
      :                          @63
   805: 55 2c f0 00 0e           jump @65 if a5 >=u 240
      :                          @64
   810: 33 05 03                 s0 = 0x3
   813: 33 07 20 ff              a0 = 0xffffffffffffff20
   817: 28 2e                    jump @70
      :                          @65
   819: 55 2c f8 00 0e           jump @67 if a5 >=u 248
      :                          @66
   824: 33 05 04                 s0 = 0x4
   827: 33 07 10 ff              a0 = 0xffffffffffffff10
   831: 28 20                    jump @70
      :                          @67
   833: 55 2c fc 00 0e           jump @69 if a5 >=u 252
      :                          @68
   838: 33 05 05                 s0 = 0x5
   841: 33 07 08 ff              a0 = 0xffffffffffffff08
   845: 28 12                    jump @70
      :                          @69
   847: 88 ca fe 00              a3 = a5 <u 0xfe
   851: 33 07 04 ff              a0 = 0xffffffffffffff04
   855: 93 a7 02 ff              a0 = 0xffffffffffffff02 if a3 == 0
   859: 85 a5 07                 s0 = a3 ^ 0x7
   862: 01                       fallthrough
      :                          @70
   863: ae 95 e2 0b              jump @235 if s0 >=u a2
      :                          @71
   867: 33 0a                    a3 = 0
   869: c8 7c 0c                 a5 = a5 + a0
   872: 64 5b                    a4 = s0
   874: 01                       fallthrough
      :                          @72
   875: c8 b6 07                 a0 = s1 + a4
   878: 7c 77                    a0 = u8 [a0]
   880: 97 aa 08                 a3 = a3 << 0x8
   883: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
   886: d4 7a 0a                 a3 = a3 | a0
   889: 52 0b f2                 jump @72 if a4 != 0
      :                          @73
   892: 8a 57 03                 i32 a0 = s0 << 0x3
   895: cf 7c 0c                 a5 = a5 << a0
   898: c8 ac 0c                 a5 = a5 + a3
   901: 01                       fallthrough
      :                          @74
   902: e4 98 07                 a0 = maxu(a1, a2)
   905: c9 97 07                 a0 = a0 - a2
   908: d8 c7 08                 a1 = a0 <u a5
   911: e4 c7 07                 a0 = maxu(a0, a5)
   914: c9 c7 07                 a0 = a0 - a5
   917: 88 77 20                 a0 = a0 <u 0x20
   920: d4 87 07                 a0 = a0 | a1
   923: 52 07 7f 0b              jump @228 if a0 != 0
      :                          @75
   927: 95 15 44 91 00           s0 = sp + 0x9144
   932: 49 11 10 ff ef           u64 [sp + 16] = 0xffffffffffffefff
   937: c8 96 06                 s1 = s1 + a2
   940: 95 17 44 01              a0 = sp + 0x144
   944: 33 09 00 90 00           a2 = 0x9000
   949: 33 08                    a1 = 0
   951: 50 10 0e df 10           ra = 14, jump @362
      :                          @76 [@dyn 7]
   956: 81 67                    a0 = i32 [s1]
   958: 7a 57                    u32 [s0] = a0
   960: 81 67 04                 a0 = i32 [s1 + 0x4]
   963: 7a 57 04                 u32 [s0 + 0x4] = a0
   966: 81 67 08                 a0 = i32 [s1 + 0x8]
   969: 7a 57 08                 u32 [s0 + 0x8] = a0
   972: 7b 55 14                 u64 [s0 + 0x14] = s0
   975: 33 08 06                 a1 = 0x6
   978: 7b 58 1c                 u64 [s0 + 0x1c] = a1
   981: 95 17 48 91 00           a0 = sp + 0x9148
   986: 7b 57 24                 u64 [s0 + 0x24] = a0
   989: 7b 58 2c                 u64 [s0 + 0x2c] = a1
   992: 95 17 4c 91 00           a0 = sp + 0x914c
   997: 7b 57 34                 u64 [s0 + 0x34] = a0
  1000: 7b 18 08                 u64 [sp + 0x8] = a1
  1003: 7b 58 3c                 u64 [s0 + 0x3c] = a1
  1006: 33 07 70 01 01           a0 = 0x10170
  1011: 95 19 60 b4 01           a2 = sp + 0x1b460
  1016: 7b 97                    u64 [a2] = a0
  1018: 49 19 08 03              u64 [a2 + 8] = 0x3
  1022: 49 19 20                 u64 [a2 + 32] = 0
  1025: 95 18 58 91 00           a1 = sp + 0x9158
  1030: 7b 98 10                 u64 [a2 + 0x10] = a1
  1033: 49 19 18 03              u64 [a2 + 24] = 0x3
  1037: 95 17 60 24 01           a0 = sp + 0x12460
  1042: 95 18 60 b4 01           a1 = sp + 0x1b460
  1047: 50 10 10 6b 0d           ra = 16, jump @294
      :                          @77 [@dyn 8]
  1052: 95 17 60 24 01           a0 = sp + 0x12460
  1057: 82 75 08                 s0 = u64 [a0 + 0x8]
  1060: 82 7b 10                 a4 = u64 [a0 + 0x10]
  1063: 82 76                    s1 = u64 [a0]
  1065: 33 07 02                 a0 = 0x2
  1068: 33 08                    a1 = 0
  1070: 33 09                    a2 = 0
  1072: 64 5a                    a3 = s0
  1074: 33 00 12                 ra = 0x12
  1077: 0a 64                    ecalli 100 // 'log'
  1079: 01                       fallthrough
      :                          @78 [@dyn 9]
  1080: 82 17 10                 a0 = u64 [sp + 0x10]
  1083: c8 67 07                 a0 = a0 + s1
  1086: 53 27 00 f0 23           jump @84 if a0 <u 4294963200
      :                          @79
  1091: 33 07 10 00 03           a0 = 0x30010
  1096: 95 77 00 10              a0 = a0 + 0x1000
  1100: 01                       fallthrough
      :                          @80
  1101: 82 78                    a1 = u64 [a0]
  1103: c9 87 09                 a2 = a0 - a1
  1106: ab 59 0f                 jump @84 if a2 != s0
      :                          @81
  1109: c9 68 09                 a2 = a1 - s1
  1112: 01                       fallthrough
      :                          @82
  1113: 82 7a                    a3 = u64 [a0]
  1115: ab 8a f2                 jump @80 if a3 != a1
      :                          @83
  1118: 7b 79                    u64 [a0] = a2
  1120: 01                       fallthrough
      :                          @84
  1121: 95 16 44 91 00           s1 = sp + 0x9144
  1126: 48 16 0c                 u32 [s1 + 12] = 0
  1129: 95 17 44 01              a0 = sp + 0x144
  1133: 33 09 00 10              a2 = 0x1000
  1137: 33 0a 06                 a3 = 0x6
  1140: 33 08                    a1 = 0
  1142: 33 0b                    a4 = 0
  1144: 33 0c                    a5 = 0
  1146: 0a 12                    ecalli 18 // 'fetch'
  1148: 01                       fallthrough
      :                          @85
  1149: 95 18 44 01              a1 = sp + 0x144
  1153: 33 05 ff                 s0 = 0xffffffffffffffff
  1156: 33 09 00 10              a2 = 0x1000
  1160: aa 57 49 01              jump @103 if a0 == s0
      :                          @86
  1164: 81 67 0c                 a0 = i32 [s1 + 0xc]
  1167: 83 77 01                 i32 a0 = a0 + 0x1
  1170: 7a 67 0c                 u32 [s1 + 0xc] = a0
  1173: 95 87 00 10              a0 = a1 + 0x1000
  1177: 33 0a 06                 a3 = 0x6
  1180: 33 0b 01                 a4 = 0x1
  1183: 33 08                    a1 = 0
  1185: 33 0c                    a5 = 0
  1187: 0a 12                    ecalli 18 // 'fetch'
  1189: 01                       fallthrough
      :                          @87
  1190: 51 17 ff 2b 01           jump @103 if a0 == 4294967295
      :                          @88
  1195: 81 67 0c                 a0 = i32 [s1 + 0xc]
  1198: 83 77 01                 i32 a0 = a0 + 0x1
  1201: 7a 67 0c                 u32 [s1 + 0xc] = a0
  1204: 95 18 44 01              a1 = sp + 0x144
  1208: 95 87 00 20              a0 = a1 + 0x2000
  1212: 33 09 00 10              a2 = 0x1000
  1216: 33 0a 06                 a3 = 0x6
  1219: 33 0b 02                 a4 = 0x2
  1222: 33 05 ff                 s0 = 0xffffffffffffffff
  1225: 33 08                    a1 = 0
  1227: 33 0c                    a5 = 0
  1229: 0a 12                    ecalli 18 // 'fetch'
  1231: 01                       fallthrough
      :                          @89
  1232: 51 17 ff 01 01           jump @103 if a0 == 4294967295
      :                          @90
  1237: 81 67 0c                 a0 = i32 [s1 + 0xc]
  1240: 83 77 01                 i32 a0 = a0 + 0x1
  1243: 7a 67 0c                 u32 [s1 + 0xc] = a0
  1246: 95 18 44 01              a1 = sp + 0x144
  1250: 95 87 00 30              a0 = a1 + 0x3000
  1254: 33 09 00 10              a2 = 0x1000
  1258: 33 0a 06                 a3 = 0x6
  1261: 33 0b 03                 a4 = 0x3
  1264: 33 08                    a1 = 0
  1266: 33 0c                    a5 = 0
  1268: 0a 12                    ecalli 18 // 'fetch'
  1270: 01                       fallthrough
      :                          @91
  1271: 51 17 ff da 00           jump @103 if a0 == 4294967295
      :                          @92
  1276: 81 67 0c                 a0 = i32 [s1 + 0xc]
  1279: 83 77 01                 i32 a0 = a0 + 0x1
  1282: 7a 67 0c                 u32 [s1 + 0xc] = a0
  1285: 95 18 44 01              a1 = sp + 0x144
  1289: 95 87 00 40              a0 = a1 + 0x4000
  1293: 33 09 00 10              a2 = 0x1000
  1297: 33 0a 06                 a3 = 0x6
  1300: 33 0b 04                 a4 = 0x4
  1303: 33 05 ff                 s0 = 0xffffffffffffffff
  1306: 33 08                    a1 = 0
  1308: 33 0c                    a5 = 0
  1310: 0a 12                    ecalli 18 // 'fetch'
  1312: 01                       fallthrough
      :                          @93
  1313: 51 17 ff b0 00           jump @103 if a0 == 4294967295
      :                          @94
  1318: 81 67 0c                 a0 = i32 [s1 + 0xc]
  1321: 83 77 01                 i32 a0 = a0 + 0x1
  1324: 7a 67 0c                 u32 [s1 + 0xc] = a0
  1327: 95 18 44 01              a1 = sp + 0x144
  1331: 95 87 00 50              a0 = a1 + 0x5000
  1335: 33 09 00 10              a2 = 0x1000
  1339: 33 0a 06                 a3 = 0x6
  1342: 33 0b 05                 a4 = 0x5
  1345: 33 08                    a1 = 0
  1347: 33 0c                    a5 = 0
  1349: 0a 12                    ecalli 18 // 'fetch'
  1351: 01                       fallthrough
      :                          @95
  1352: 51 17 ff 89 00           jump @103 if a0 == 4294967295
      :                          @96
  1357: 81 67 0c                 a0 = i32 [s1 + 0xc]
  1360: 83 77 01                 i32 a0 = a0 + 0x1
  1363: 7a 67 0c                 u32 [s1 + 0xc] = a0
  1366: 95 18 44 01              a1 = sp + 0x144
  1370: 95 87 00 60              a0 = a1 + 0x6000
  1374: 33 09 00 10              a2 = 0x1000
  1378: 33 0a 06                 a3 = 0x6
  1381: 33 0b 06                 a4 = 0x6
  1384: 33 05 ff                 s0 = 0xffffffffffffffff
  1387: 33 08                    a1 = 0
  1389: 33 0c                    a5 = 0
  1391: 0a 12                    ecalli 18 // 'fetch'
  1393: 01                       fallthrough
      :                          @97
  1394: 51 17 ff 5f              jump @103 if a0 == 4294967295
      :                          @98
  1398: 81 67 0c                 a0 = i32 [s1 + 0xc]
  1401: 83 77 01                 i32 a0 = a0 + 0x1
  1404: 7a 67 0c                 u32 [s1 + 0xc] = a0
  1407: 95 18 44 01              a1 = sp + 0x144
  1411: 95 87 00 70              a0 = a1 + 0x7000
  1415: 33 09 00 10              a2 = 0x1000
  1419: 33 0a 06                 a3 = 0x6
  1422: 33 0b 07                 a4 = 0x7
  1425: 33 08                    a1 = 0
  1427: 33 0c                    a5 = 0
  1429: 0a 12                    ecalli 18 // 'fetch'
  1431: 01                       fallthrough
      :                          @99
  1432: 51 17 ff 39              jump @103 if a0 == 4294967295
      :                          @100
  1436: 81 67 0c                 a0 = i32 [s1 + 0xc]
  1439: 83 77 01                 i32 a0 = a0 + 0x1
  1442: 7a 67 0c                 u32 [s1 + 0xc] = a0
  1445: 95 18 44 01              a1 = sp + 0x144
  1449: 95 87 00 80 00           a0 = a1 + 0x8000
  1454: 33 09 00 10              a2 = 0x1000
  1458: 33 0a 06                 a3 = 0x6
  1461: 33 0b 08                 a4 = 0x8
  1464: 33 05 ff                 s0 = 0xffffffffffffffff
  1467: 33 08                    a1 = 0
  1469: 33 0c                    a5 = 0
  1471: 0a 12                    ecalli 18 // 'fetch'
  1473: 01                       fallthrough
      :                          @101
  1474: 51 17 ff 0f              jump @103 if a0 == 4294967295
      :                          @102
  1478: 81 67 0c                 a0 = i32 [s1 + 0xc]
  1481: 83 77 01                 i32 a0 = a0 + 0x1
  1484: 7a 67 0c                 u32 [s1 + 0xc] = a0
  1487: 28 06                    jump @104
      :                          @103
  1489: 81 67 0c                 a0 = i32 [s1 + 0xc]
  1492: 01                       fallthrough
      :                          @104
  1493: 95 18 44 91 00           a1 = sp + 0x9144
  1498: 58 07 9d 00              jump @115 if a0 <=s 0
      :                          @105
  1502: 95 17 44 91 00           a0 = sp + 0x9144
  1507: 95 19 60 b4 01           a2 = sp + 0x1b460
  1512: 7b 97                    u64 [a2] = a0
  1514: 82 17 08                 a0 = u64 [sp + 0x8]
  1517: 7b 97 08                 u64 [a2 + 0x8] = a0
  1520: 95 17 50 91 00           a0 = sp + 0x9150
  1525: 7b 97 10                 u64 [a2 + 0x10] = a0
  1528: 33 07 02                 a0 = 0x2
  1531: 7b 97 18                 u64 [a2 + 0x18] = a0
  1534: 33 07 a0 01 01           a0 = 0x101a0
  1539: 7b 87 14                 u64 [a1 + 0x14] = a0
  1542: 49 18 1c 03              u64 [a1 + 28] = 0x3
  1546: 49 18 34                 u64 [a1 + 52] = 0
  1549: 95 17 60 b4 01           a0 = sp + 0x1b460
  1554: 7b 87 24                 u64 [a1 + 0x24] = a0
  1557: 49 18 2c 02              u64 [a1 + 44] = 0x2
  1561: 95 17 60 24 01           a0 = sp + 0x12460
  1566: 95 18 58 91 00           a1 = sp + 0x9158
  1571: 50 10 14 5f 0b           ra = 20, jump @294
      :                          @106 [@dyn 10]
  1576: 95 17 60 24 01           a0 = sp + 0x12460
  1581: 82 75 08                 s0 = u64 [a0 + 0x8]
  1584: 82 7b 10                 a4 = u64 [a0 + 0x10]
  1587: 82 76                    s1 = u64 [a0]
  1589: 33 07 02                 a0 = 0x2
  1592: 33 08                    a1 = 0
  1594: 33 09                    a2 = 0
  1596: 64 5a                    a3 = s0
  1598: 33 00 16                 ra = 0x16
  1601: 0a 64                    ecalli 100 // 'log'
  1603: 01                       fallthrough
      :                          @107 [@dyn 11]
  1604: 82 17 10                 a0 = u64 [sp + 0x10]
  1607: c8 67 07                 a0 = a0 + s1
  1610: 53 27 00 f0 4e 01        jump @134 if a0 <u 4294963200
      :                          @108
  1616: 33 07 10 00 03           a0 = 0x30010
  1621: 95 77 00 10              a0 = a0 + 0x1000
  1625: 01                       fallthrough
      :                          @109
  1626: 82 78                    a1 = u64 [a0]
  1628: c9 87 09                 a2 = a0 - a1
  1631: ab 59 39 01              jump @134 if a2 != s0
      :                          @110
  1635: c9 68 09                 a2 = a1 - s1
  1638: 01                       fallthrough
      :                          @111
  1639: 82 7a                    a3 = u64 [a0]
  1641: ab 8a f1                 jump @109 if a3 != a1
      :                          @112
  1644: 7b 79                    u64 [a0] = a2
  1646: 33 0b                    a4 = 0
  1648: 01                       fallthrough
      :                          @113
  1649: ab 8a e9                 jump @109 if a3 != a1
      :                          @114
  1652: 28 24 01                 jump @134
      :                          @115
  1655: 80 85 04                 s0 = u32 [a1 + 0x4]
  1658: 95 17 44 01              a0 = sp + 0x144
  1662: 33 09 00 90 00           a2 = 0x9000
  1667: 33 08                    a1 = 0
  1669: 50 10 18 11 0e           ra = 24, jump @362
      :                          @116 [@dyn 12]
  1674: 51 05 7c                 jump @124 if s0 == 0
      :                          @117
  1677: 33 0c                    a5 = 0
  1679: 33 08                    a1 = 0
  1681: 97 59 02                 a2 = s0 << 0x2
  1684: 64 54                    t2 = s0
  1686: c8 59 09                 a2 = a2 + s0
  1689: 14 0a ab aa aa aa aa aa aa aa a3 = 0xaaaaaaaaaaaaaaab
  1699: 33 02 04 01              t0 = 0x104
  1703: 33 03 d0 02              t1 = 0x2d0
  1707: 33 05 01                 s0 = 0x1
  1710: 95 10 44 01              ra = sp + 0x144
  1714: 01                       fallthrough
      :                          @118
  1715: aa 3c 57                 jump @125 if a5 == t1
      :                          @119
  1718: d6 a8 07                 a0 = a1 mulhu a3
  1721: 98 77 03                 a0 = a0 >> 0x3
  1724: ca 27 06                 s1 = a0 * t0
  1727: 95 67 04 01              a0 = s1 + 0x104
  1731: c8 c0 0b                 a4 = ra + a5
  1734: c8 b6 06                 s1 = s1 + a4
  1737: 78 65 83 00              u8 [s1 + 0x83] = s0
  1741: c8 c7 07                 a0 = a0 + a5
  1744: 95 7b fe                 a4 = a0 + 0xfffffffffffffffe
  1747: 98 bb 0c                 a4 = a4 >> 0xc
  1750: 78 65 c4 00              u8 [s1 + 0xc4] = s0
  1754: 52 0b 62 08              jump @230 if a4 != 0
      :                          @120
  1758: 95 7b ff                 a4 = a0 + 0xffffffffffffffff
  1761: 98 bb 0c                 a4 = a4 >> 0xc
  1764: 78 65 02 01              u8 [s1 + 0x102] = s0
  1768: 52 0b 55 08              jump @231 if a4 != 0
      :                          @121
  1772: 98 77 0c                 a0 = a0 >> 0xc
  1775: 78 65 03 01              u8 [s1 + 0x103] = s0
  1779: 52 07 4b 08              jump @232 if a0 != 0
      :                          @122
  1783: 78 65 04 01              u8 [s1 + 0x104] = s0
  1787: 95 cc 05                 a5 = a5 + 0x5
  1790: 95 88 01                 a1 = a1 + 0x1
  1793: ab c9 b2                 jump @118 if a2 != a5
      :                          @123
  1796: 28 0b                    jump @126
      :                          @124
  1798: 33 04                    t2 = 0
  1800: 28 07                    jump @126
      :                          @125
  1802: 33 04 90 00              t2 = 0x90
  1806: 01                       fallthrough
      :                          @126
  1807: 95 19 44 91 00           a2 = sp + 0x9144
  1812: 7a 94 10                 u32 [a2 + 0x10] = t2
  1815: 95 17 54 91 00           a0 = sp + 0x9154
  1820: 95 18 60 24 01           a1 = sp + 0x12460
  1825: 7b 87                    u64 [a1] = a0
  1827: 33 07 76                 a0 = 0x76
  1830: 7b 87 08                 u64 [a1 + 0x8] = a0
  1833: 33 07 50 01 01           a0 = 0x10150
  1838: 7b 97 14                 u64 [a2 + 0x14] = a0
  1841: 49 19 1c 02              u64 [a2 + 28] = 0x2
  1845: 49 19 34                 u64 [a2 + 52] = 0
  1848: 95 17 60 24 01           a0 = sp + 0x12460
  1853: 7b 97 24                 u64 [a2 + 0x24] = a0
  1856: 49 19 2c 01              u64 [a2 + 44] = 0x1
  1860: 95 17 60 b4 01           a0 = sp + 0x1b460
  1865: 95 18 58 91 00           a1 = sp + 0x9158
  1870: 50 10 1a 34 0a           ra = 26, jump @294
      :                          @127 [@dyn 13]
  1875: 95 17 60 b4 01           a0 = sp + 0x1b460
  1880: 82 75 08                 s0 = u64 [a0 + 0x8]
  1883: 82 7b 10                 a4 = u64 [a0 + 0x10]
  1886: 82 76                    s1 = u64 [a0]
  1888: 33 07 02                 a0 = 0x2
  1891: 33 08                    a1 = 0
  1893: 33 09                    a2 = 0
  1895: 64 5a                    a3 = s0
  1897: 33 00 1c                 ra = 0x1c
  1900: 0a 64                    ecalli 100 // 'log'
  1902: 01                       fallthrough
      :                          @128 [@dyn 14]
  1903: 82 17 10                 a0 = u64 [sp + 0x10]
  1906: c8 67 07                 a0 = a0 + s1
  1909: 53 27 00 f0 23           jump @134 if a0 <u 4294963200
      :                          @129
  1914: 33 07 10 00 03           a0 = 0x30010
  1919: 95 77 00 10              a0 = a0 + 0x1000
  1923: 01                       fallthrough
      :                          @130
  1924: 82 78                    a1 = u64 [a0]
  1926: c9 87 09                 a2 = a0 - a1
  1929: ab 59 0f                 jump @134 if a2 != s0
      :                          @131
  1932: c9 68 09                 a2 = a1 - s1
  1935: 01                       fallthrough
      :                          @132
  1936: 82 7a                    a3 = u64 [a0]
  1938: ab 8a f2                 jump @130 if a3 != a1
      :                          @133
  1941: 7b 79                    u64 [a0] = a2
  1943: 01                       fallthrough
      :                          @134
  1944: 95 17 44 91 00           a0 = sp + 0x9144
  1949: 81 77 08                 a0 = i32 [a0 + 0x8]
  1952: 7b 17 08 01              u64 [sp + 0x108] = a0
  1956: 51 07 7e 06              jump @220 if a0 == 0
      :                          @135
  1960: 33 04                    t2 = 0
  1962: 95 18 58 91 00           a1 = sp + 0x9158
  1967: 95 87 81 91 00           a0 = a1 + 0x9181
  1972: 7b 17 00 01              u64 [sp + 0x100] = a0
  1976: 95 18 44 01              a1 = sp + 0x144
  1980: 95 15 58 91 00           s0 = sp + 0x9158
  1985: 95 5a 43 31              a3 = s0 + 0x3143
  1989: 7b 1a f8 00              u64 [sp + 0xf8] = a3
  1993: 95 5a 83 31              a3 = s0 + 0x3183
  1997: 7b 1a f0 00              u64 [sp + 0xf0] = a3
  2001: 95 5a c3 31              a3 = s0 + 0x31c3
  2005: 7b 1a e8 00              u64 [sp + 0xe8] = a3
  2009: 95 5b c3 61              a4 = s0 + 0x61c3
  2013: 7b 1b e0 00              u64 [sp + 0xe0] = a4
  2017: 95 5b 03 62              a4 = s0 + 0x6203
  2021: 7b 1b d8 00              u64 [sp + 0xd8] = a4
  2025: 95 87 00 10              a0 = a1 + 0x1000
  2029: 7b 17 d0 00              u64 [sp + 0xd0] = a0
  2033: 95 87 00 20              a0 = a1 + 0x2000
  2037: 7b 17 c8 00              u64 [sp + 0xc8] = a0
  2041: 95 87 00 30              a0 = a1 + 0x3000
  2045: 7b 17 c0 00              u64 [sp + 0xc0] = a0
  2049: 95 87 00 40              a0 = a1 + 0x4000
  2053: 7b 17 b8 00              u64 [sp + 0xb8] = a0
  2057: 95 87 00 50              a0 = a1 + 0x5000
  2061: 7b 17 b0 00              u64 [sp + 0xb0] = a0
  2065: 95 87 00 60              a0 = a1 + 0x6000
  2069: 7b 17 a8 00              u64 [sp + 0xa8] = a0
  2073: 95 87 00 70              a0 = a1 + 0x7000
  2077: 7b 17 a0 00              u64 [sp + 0xa0] = a0
  2081: 95 88 00 80 00           a1 = a1 + 0x8000
  2086: 7b 18 98 00              u64 [sp + 0x98] = a1
  2090: 95 58 43 62              a1 = s0 + 0x6243
  2094: 7b 18 90 00              u64 [sp + 0x90] = a1
  2098: 95 18 60 b4 01           a1 = sp + 0x1b460
  2103: 95 82 00 10              t0 = a1 + 0x1000
  2107: 7b 12 80 00              u64 [sp + 0x80] = t0
  2111: 95 8b 00 20              a4 = a1 + 0x2000
  2115: 7b 1b 78                 u64 [sp + 0x78] = a4
  2118: 95 8c 00 40              a5 = a1 + 0x4000
  2122: 7b 1c 70                 u64 [sp + 0x70] = a5
  2125: 95 1c 60 24 01           a5 = sp + 0x12460
  2130: 95 cb 40 30              a4 = a5 + 0x3040
  2134: 7b 1b 68                 u64 [sp + 0x68] = a4
  2137: 95 86 00 50              s1 = a1 + 0x5000
  2141: 7b 16 60                 u64 [sp + 0x60] = s1
  2144: 33 06                    s1 = 0
  2146: 95 8b 00 30              a4 = a1 + 0x3000
  2150: 7b 1b 58                 u64 [sp + 0x58] = a4
  2153: 95 cb 00 30              a4 = a5 + 0x3000
  2157: 7b 1b 50                 u64 [sp + 0x50] = a4
  2160: 95 c9 80 30              a2 = a5 + 0x3080
  2164: 7b 19 48                 u64 [sp + 0x48] = a2
  2167: 95 83 00 70              t1 = a1 + 0x7000
  2171: 7b 13 40                 u64 [sp + 0x40] = t1
  2174: 95 87 00 80 00           a0 = a1 + 0x8000
  2179: 7b 17 38                 u64 [sp + 0x38] = a0
  2182: 95 88 00 60              a1 = a1 + 0x6000
  2186: 7b 18 30                 u64 [sp + 0x30] = a1
  2189: 95 c7 40 60              a0 = a5 + 0x6040
  2193: 7b 17 28                 u64 [sp + 0x28] = a0
  2196: 95 c7 00 60              a0 = a5 + 0x6000
  2200: 7b 17 20                 u64 [sp + 0x20] = a0
  2203: 95 c7 80 60              a0 = a5 + 0x6080
  2207: 7b 17 18                 u64 [sp + 0x18] = a0
  2210: 49 21 88 00 04 93 00     u64 [sp + 136] = 0x9304
  2217: 33 05 c2 00              s0 = 0xc2
  2221: 01                       fallthrough
      :                          @136
  2222: 95 17 58 91 00           a0 = sp + 0x9158
  2227: 33 08                    a1 = 0
  2229: 82 19 88 00              a2 = u64 [sp + 0x88]
  2233: 50 10 1e dd 0b           ra = 30, jump @362
      :                          @137 [@dyn 15]
  2238: 83 66 01                 i32 s1 = s1 + 0x1
  2241: 7b 16 10 01              u64 [sp + 0x110] = s1
  2245: 95 17 1b 92 00           a0 = sp + 0x921b
  2250: 95 18 44 01              a1 = sp + 0x144
  2254: 33 0a 01                 a3 = 0x1
  2257: 95 13 58 91 00           t1 = sp + 0x9158
  2262: 33 02 40                 t0 = 0x40
  2265: 01                       fallthrough
      :                          @138
  2266: 64 a9                    a2 = a3
  2268: 33 0a 40                 a3 = 0x40
  2271: 64 7b                    a4 = a0
  2273: 64 8c                    a5 = a1
  2275: 01                       fallthrough
      :                          @139
  2276: 7c c6                    s1 = u8 [a5]
  2278: 78 b6                    u8 [a4] = s1
  2280: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  2283: 95 cc 01                 a5 = a5 + 0x1
  2286: 95 bb 01                 a4 = a4 + 0x1
  2289: 52 0a f3                 jump @139 if a3 != 0
      :                          @140
  2292: 88 9a 40                 a3 = a2 <u 0x40
  2295: c8 9a 0a                 a3 = a3 + a2
  2298: 95 88 40                 a1 = a1 + 0x40
  2301: 95 77 c2 00              a0 = a0 + 0xc2
  2305: ac 29 d9                 jump @138 if a2 <u t0
      :                          @141
  2308: 33 0a 01                 a3 = 0x1
  2311: 95 17 5b 92 00           a0 = sp + 0x925b
  2316: 82 18 d0 00              a1 = u64 [sp + 0xd0]
  2320: 01                       fallthrough
      :                          @142
  2321: 64 a9                    a2 = a3
  2323: 33 0a 40                 a3 = 0x40
  2326: 64 7b                    a4 = a0
  2328: 64 8c                    a5 = a1
  2330: 01                       fallthrough
      :                          @143
  2331: 7c c6                    s1 = u8 [a5]
  2333: 78 b6                    u8 [a4] = s1
  2335: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  2338: 95 cc 01                 a5 = a5 + 0x1
  2341: 95 bb 01                 a4 = a4 + 0x1
  2344: 52 0a f3                 jump @143 if a3 != 0
      :                          @144
  2347: 88 9a 40                 a3 = a2 <u 0x40
  2350: c8 9a 0a                 a3 = a3 + a2
  2353: 95 88 40                 a1 = a1 + 0x40
  2356: 95 77 c2 00              a0 = a0 + 0xc2
  2360: ac 29 d9                 jump @142 if a2 <u t0
      :                          @145
  2363: 33 0a 01                 a3 = 0x1
  2366: 95 17 9b 92 00           a0 = sp + 0x929b
  2371: 82 18 c8 00              a1 = u64 [sp + 0xc8]
  2375: 01                       fallthrough
      :                          @146
  2376: 64 a9                    a2 = a3
  2378: 33 0a 40                 a3 = 0x40
  2381: 64 7b                    a4 = a0
  2383: 64 8c                    a5 = a1
  2385: 01                       fallthrough
      :                          @147
  2386: 7c c6                    s1 = u8 [a5]
  2388: 78 b6                    u8 [a4] = s1
  2390: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  2393: 95 cc 01                 a5 = a5 + 0x1
  2396: 95 bb 01                 a4 = a4 + 0x1
  2399: 52 0a f3                 jump @147 if a3 != 0
      :                          @148
  2402: 88 9a 40                 a3 = a2 <u 0x40
  2405: c8 9a 0a                 a3 = a3 + a2
  2408: 95 88 40                 a1 = a1 + 0x40
  2411: 95 77 c2 00              a0 = a0 + 0xc2
  2415: ac 29 d9                 jump @146 if a2 <u t0
      :                          @149
  2418: 33 0a 01                 a3 = 0x1
  2421: 82 17 f8 00              a0 = u64 [sp + 0xf8]
  2425: 82 18 c0 00              a1 = u64 [sp + 0xc0]
  2429: 01                       fallthrough
      :                          @150
  2430: 64 a9                    a2 = a3
  2432: 33 0a 40                 a3 = 0x40
  2435: 64 7b                    a4 = a0
  2437: 64 8c                    a5 = a1
  2439: 01                       fallthrough
      :                          @151
  2440: 7c c6                    s1 = u8 [a5]
  2442: 78 b6                    u8 [a4] = s1
  2444: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  2447: 95 cc 01                 a5 = a5 + 0x1
  2450: 95 bb 01                 a4 = a4 + 0x1
  2453: 52 0a f3                 jump @151 if a3 != 0
      :                          @152
  2456: 88 9a 40                 a3 = a2 <u 0x40
  2459: c8 9a 0a                 a3 = a3 + a2
  2462: 95 88 40                 a1 = a1 + 0x40
  2465: 95 77 c2 00              a0 = a0 + 0xc2
  2469: ac 29 d9                 jump @150 if a2 <u t0
      :                          @153
  2472: 33 0a 01                 a3 = 0x1
  2475: 82 17 f0 00              a0 = u64 [sp + 0xf0]
  2479: 82 18 b8 00              a1 = u64 [sp + 0xb8]
  2483: 01                       fallthrough
      :                          @154
  2484: 64 a9                    a2 = a3
  2486: 33 0a 40                 a3 = 0x40
  2489: 64 7b                    a4 = a0
  2491: 64 8c                    a5 = a1
  2493: 01                       fallthrough
      :                          @155
  2494: 7c c6                    s1 = u8 [a5]
  2496: 78 b6                    u8 [a4] = s1
  2498: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  2501: 95 cc 01                 a5 = a5 + 0x1
  2504: 95 bb 01                 a4 = a4 + 0x1
  2507: 52 0a f3                 jump @155 if a3 != 0
      :                          @156
  2510: 88 9a 40                 a3 = a2 <u 0x40
  2513: c8 9a 0a                 a3 = a3 + a2
  2516: 95 88 40                 a1 = a1 + 0x40
  2519: 95 77 c2 00              a0 = a0 + 0xc2
  2523: ac 29 d9                 jump @154 if a2 <u t0
      :                          @157
  2526: 33 0a 01                 a3 = 0x1
  2529: 82 17 e8 00              a0 = u64 [sp + 0xe8]
  2533: 82 18 b0 00              a1 = u64 [sp + 0xb0]
  2537: 01                       fallthrough
      :                          @158
  2538: 64 a9                    a2 = a3
  2540: 33 0a 40                 a3 = 0x40
  2543: 64 7b                    a4 = a0
  2545: 64 8c                    a5 = a1
  2547: 01                       fallthrough
      :                          @159
  2548: 7c c6                    s1 = u8 [a5]
  2550: 78 b6                    u8 [a4] = s1
  2552: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  2555: 95 cc 01                 a5 = a5 + 0x1
  2558: 95 bb 01                 a4 = a4 + 0x1
  2561: 52 0a f3                 jump @159 if a3 != 0
      :                          @160
  2564: 88 9a 40                 a3 = a2 <u 0x40
  2567: c8 9a 0a                 a3 = a3 + a2
  2570: 95 88 40                 a1 = a1 + 0x40
  2573: 95 77 c2 00              a0 = a0 + 0xc2
  2577: ac 29 d9                 jump @158 if a2 <u t0
      :                          @161
  2580: 33 0a 01                 a3 = 0x1
  2583: 82 17 e0 00              a0 = u64 [sp + 0xe0]
  2587: 82 18 a8 00              a1 = u64 [sp + 0xa8]
  2591: 01                       fallthrough
      :                          @162
  2592: 64 a9                    a2 = a3
  2594: 33 0a 40                 a3 = 0x40
  2597: 64 7b                    a4 = a0
  2599: 64 8c                    a5 = a1
  2601: 01                       fallthrough
      :                          @163
  2602: 7c c6                    s1 = u8 [a5]
  2604: 78 b6                    u8 [a4] = s1
  2606: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  2609: 95 cc 01                 a5 = a5 + 0x1
  2612: 95 bb 01                 a4 = a4 + 0x1
  2615: 52 0a f3                 jump @163 if a3 != 0
      :                          @164
  2618: 88 9a 40                 a3 = a2 <u 0x40
  2621: c8 9a 0a                 a3 = a3 + a2
  2624: 95 88 40                 a1 = a1 + 0x40
  2627: 95 77 c2 00              a0 = a0 + 0xc2
  2631: ac 29 d9                 jump @162 if a2 <u t0
      :                          @165
  2634: 33 0a 01                 a3 = 0x1
  2637: 82 17 d8 00              a0 = u64 [sp + 0xd8]
  2641: 82 18 a0 00              a1 = u64 [sp + 0xa0]
  2645: 01                       fallthrough
      :                          @166
  2646: 64 a9                    a2 = a3
  2648: 33 0a 40                 a3 = 0x40
  2651: 64 7b                    a4 = a0
  2653: 64 8c                    a5 = a1
  2655: 01                       fallthrough
      :                          @167
  2656: 7c c6                    s1 = u8 [a5]
  2658: 78 b6                    u8 [a4] = s1
  2660: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  2663: 95 cc 01                 a5 = a5 + 0x1
  2666: 95 bb 01                 a4 = a4 + 0x1
  2669: 52 0a f3                 jump @167 if a3 != 0
      :                          @168
  2672: 88 9a 40                 a3 = a2 <u 0x40
  2675: c8 9a 0a                 a3 = a3 + a2
  2678: 95 88 40                 a1 = a1 + 0x40
  2681: 95 77 c2 00              a0 = a0 + 0xc2
  2685: ac 29 d9                 jump @166 if a2 <u t0
      :                          @169
  2688: 33 0a 01                 a3 = 0x1
  2691: 82 17 90 00              a0 = u64 [sp + 0x90]
  2695: 82 18 98 00              a1 = u64 [sp + 0x98]
  2699: 01                       fallthrough
      :                          @170
  2700: 64 a9                    a2 = a3
  2702: 33 0a 40                 a3 = 0x40
  2705: 64 7b                    a4 = a0
  2707: 64 8c                    a5 = a1
  2709: 01                       fallthrough
      :                          @171
  2710: 7c c6                    s1 = u8 [a5]
  2712: 78 b6                    u8 [a4] = s1
  2714: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  2717: 95 cc 01                 a5 = a5 + 0x1
  2720: 95 bb 01                 a4 = a4 + 0x1
  2723: 52 0a f3                 jump @171 if a3 != 0
      :                          @172
  2726: 88 9a 40                 a3 = a2 <u 0x40
  2729: c8 9a 0a                 a3 = a3 + a2
  2732: 95 88 40                 a1 = a1 + 0x40
  2735: 95 77 c2 00              a0 = a0 + 0xc2
  2739: ac 29 d9                 jump @170 if a2 <u t0
      :                          @173
  2742: 33 07 01                 a0 = 0x1
  2745: 33 0c 00 90 00           a5 = 0x9000
  2750: 33 06 c0 00              s1 = 0xc0
  2754: 01                       fallthrough
      :                          @174
  2755: 88 78 c0 00              a1 = a0 <u 0xc0
  2759: c8 73 09                 a2 = t1 + a0
  2762: c8 c9 0a                 a3 = a2 + a5
  2765: 7c ab 80 01              a4 = u8 [a3 + 0x180]
  2769: 95 77 01                 a0 = a0 + 0x1
  2772: da 86 07                 a0 = s1 if a1 == 0
  2775: 85 88 01                 a1 = a1 ^ 0x1
  2778: 78 9b                    u8 [a2] = a4
  2780: 7c 99 c2 00              a2 = u8 [a2 + 0xc2]
  2784: 88 7b c1 00              a4 = a0 <u 0xc1
  2788: 85 bb 01                 a4 = a4 ^ 0x1
  2791: d4 b8 08                 a1 = a1 | a4
  2794: 78 a9 42 02              u8 [a3 + 0x242] = a2
  2798: 51 08 d5                 jump @174 if a1 == 0
      :                          @175
  2801: 33 07 01                 a0 = 0x1
  2804: 01                       fallthrough
      :                          @176
  2805: 88 78 c0 00              a1 = a0 <u 0xc0
  2809: ca 57 09                 a2 = a0 * s0
  2812: c8 39 09                 a2 = a2 + t1
  2815: 7c 9a c0 00              a3 = u8 [a2 + 0xc0]
  2819: 85 8b 01                 a4 = a1 ^ 0x1
  2822: 95 77 01                 a0 = a0 + 0x1
  2825: da 86 07                 a0 = s1 if a1 == 0
  2828: 78 9a                    u8 [a2] = a3
  2830: 7c 98 01                 a1 = u8 [a2 + 0x1]
  2833: 88 7a c1 00              a3 = a0 <u 0xc1
  2837: 85 aa 01                 a3 = a3 ^ 0x1
  2840: d4 ba 0a                 a3 = a3 | a4
  2843: 78 98 c1 00              u8 [a2 + 0xc1] = a1
  2847: 51 0a d6                 jump @176 if a3 == 0
      :                          @177
  2850: 82 1a 00 01              a3 = u64 [sp + 0x100]
  2854: 7c a7 bf 00              a0 = u8 [a3 + 0xbf]
  2858: 95 19 44 91 00           a2 = sp + 0x9144
  2863: 78 97 14                 u8 [a2 + 0x14] = a0
  2866: 7c a7                    a0 = u8 [a3]
  2868: 7c 98 96 01              a1 = u8 [a2 + 0x196]
  2872: 78 97 d5 00              u8 [a2 + 0xd5] = a0
  2876: 78 a8 c1 00              u8 [a3 + 0xc1] = a1
  2880: 7c 97 d7 00              a0 = u8 [a2 + 0xd7]
  2884: 78 a7 82 01              u8 [a3 + 0x182] = a0
  2888: 95 17 60 24 01           a0 = sp + 0x12460
  2893: 33 09 00 90 00           a2 = 0x9000
  2898: 33 08                    a1 = 0
  2900: 50 10 20 42 09           ra = 32, jump @362
      :                          @178 [@dyn 16]
  2905: 95 13 58 91 00           t1 = sp + 0x9158
  2910: 33 0b 01                 a4 = 0x1
  2913: 28 15                    jump @180
      :                          @179
  2915: 82 1b 20 01              a4 = u64 [sp + 0x120]
  2919: 88 b7 c1 00              a0 = a4 <u 0xc1
  2923: 82 18 18 01              a1 = u64 [sp + 0x118]
  2927: d2 87 07                 a0 = a0 & a1
  2930: 51 07 f0 00              jump @190 if a0 == 0
      :                          @180
  2934: 95 b7 ff                 a0 = a4 + 0xffffffffffffffff
  2937: 56 27 c1 00 c2 03        jump @229 if a0 >u 193
      :                          @181
  2943: 95 b8 01                 a1 = a4 + 0x1
  2946: 88 b9 c0 00              a2 = a4 <u 0xc0
  2950: 7b 18 28 01              u64 [sp + 0x128] = a1
  2954: 7b 19 18 01              u64 [sp + 0x118] = a2
  2958: 93 98 c0 00              a1 = 0xc0 if a2 == 0
  2962: 7b 18 20 01              u64 [sp + 0x120] = a1
  2966: 33 0c 01                 a5 = 0x1
  2969: 7b 1b 38 01              u64 [sp + 0x138] = a4
  2973: 7b 17 30 01              u64 [sp + 0x130] = a0
  2977: 28 37                    jump @184
      :                          @182
  2979: 33 0a                    a3 = 0
  2981: 01                       fallthrough
      :                          @183
  2982: 88 c8 c0 00              a1 = a5 <u 0xc0
  2986: 93 86 c0 00              s1 = 0xc0 if a1 == 0
  2990: 82 17 30 01              a0 = u64 [sp + 0x130]
  2994: 96 79 c0 00              a2 = a0 * 0xc0
  2998: 95 1b 60 24 01           a4 = sp + 0x12460
  3003: c8 b9 09                 a2 = a2 + a4
  3006: c8 09 09                 a2 = a2 + ra
  3009: 88 6b c1 00              a4 = s1 <u 0xc1
  3013: d2 b8 08                 a1 = a1 & a4
  3016: 78 9a                    u8 [a2] = a3
  3018: 64 6c                    a5 = s1
  3020: 95 13 58 91 00           t1 = sp + 0x9158
  3025: 82 1b 38 01              a4 = u64 [sp + 0x138]
  3029: 51 08 8e                 jump @179 if a1 == 0
      :                          @184
  3032: 95 c6 01                 s1 = a5 + 0x1
  3035: 95 c0 ff                 ra = a5 + 0xffffffffffffffff
  3038: 96 79 c2 00              a2 = a0 * 0xc2
  3042: c8 93 08                 a1 = t1 + a2
  3045: c8 08 0a                 a3 = a1 + ra
  3048: 7c aa                    a3 = u8 [a3]
  3050: c8 c8 09                 a2 = a1 + a5
  3053: 7c 99                    a2 = u8 [a2]
  3055: c8 68 08                 a1 = a1 + s1
  3058: 7c 88                    a1 = u8 [a1]
  3060: 96 bb c2 00              a4 = a4 * 0xc2
  3064: c8 b3 02                 t0 = t1 + a4
  3067: c8 02 0b                 a4 = t0 + ra
  3070: 7c bb                    a4 = u8 [a4]
  3072: c8 a9 09                 a2 = a2 + a3
  3075: c8 b8 08                 a1 = a1 + a4
  3078: c8 98 08                 a1 = a1 + a2
  3081: c8 62 09                 a2 = t0 + s1
  3084: 7c 99                    a2 = u8 [a2]
  3086: 82 17 28 01              a0 = u64 [sp + 0x128]
  3090: 96 7a c2 00              a3 = a0 * 0xc2
  3094: c8 a3 03                 t1 = t1 + a3
  3097: c8 03 0b                 a4 = t1 + ra
  3100: 7c bb                    a4 = u8 [a4]
  3102: c8 c3 0a                 a3 = t1 + a5
  3105: 7c a4                    t2 = u8 [a3]
  3107: c8 63 03                 t1 = t1 + s1
  3110: 7c 35                    s0 = u8 [t1]
  3112: c8 c2 02                 t0 = t0 + a5
  3115: 7c 2a                    a3 = u8 [t0]
  3117: c8 b9 09                 a2 = a2 + a4
  3120: c8 49 09                 a2 = a2 + t2
  3123: c8 98 08                 a1 = a1 + a2
  3126: be 58 09                 i32 a2 = a1 + s0
  3129: 51 0a 1a                 jump @188 if a3 == 0
      :                          @185
  3132: 33 05 c0 00              s0 = 0xc0
  3136: 52 1a 01 63 ff           jump @182 if a3 != 1
      :                          @186
  3141: 84 99 fe                 a2 = a2 & 0xfffffffffffffffe
  3144: 33 0a 01                 a3 = 0x1
  3147: 52 19 02 58 ff           jump @182 if a2 != 2
      :                          @187
  3152: 28 56 ff                 jump @183
      :                          @188
  3155: 33 0a 01                 a3 = 0x1
  3158: 33 05 c0 00              s0 = 0xc0
  3162: 52 19 03 49 ff           jump @182 if a2 != 3
      :                          @189
  3167: 28 47 ff                 jump @183
      :                          @190
  3170: 95 17 60 b4 01           a0 = sp + 0x1b460
  3175: 33 09 00 90 00           a2 = 0x9000
  3180: 95 16 60 b4 01           s1 = sp + 0x1b460
  3185: 33 08                    a1 = 0
  3187: 50 10 22 23 08           ra = 34, jump @362
      :                          @191 [@dyn 17]
  3192: 33 07 40                 a0 = 0x40
  3195: 95 15 60 24 01           s0 = sp + 0x12460
  3200: 01                       fallthrough
      :                          @192
  3201: 7b 17 38 01              u64 [sp + 0x138] = a0
  3205: 33 09 40                 a2 = 0x40
  3208: 64 67                    a0 = s1
  3210: 64 58                    a1 = s0
  3212: 50 10 24 58 07           ra = 36, jump @344
      :                          @193 [@dyn 18]
  3217: 82 17 38 01              a0 = u64 [sp + 0x138]
  3221: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  3224: 95 55 c0 00              s0 = s0 + 0xc0
  3228: 95 66 40                 s1 = s1 + 0x40
  3231: 52 07 e2                 jump @192 if a0 != 0
      :                          @194
  3234: 33 07 40                 a0 = 0x40
  3237: 95 15 a0 24 01           s0 = sp + 0x124a0
  3242: 82 16 80 00              s1 = u64 [sp + 0x80]
  3246: 01                       fallthrough
      :                          @195
  3247: 7b 17 38 01              u64 [sp + 0x138] = a0
  3251: 33 09 40                 a2 = 0x40
  3254: 64 67                    a0 = s1
  3256: 64 58                    a1 = s0
  3258: 50 10 26 2a 07           ra = 38, jump @344
      :                          @196 [@dyn 19]
  3263: 82 17 38 01              a0 = u64 [sp + 0x138]
  3267: 95 66 40                 s1 = s1 + 0x40
  3270: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  3273: 95 55 c0 00              s0 = s0 + 0xc0
  3277: 52 07 e2                 jump @195 if a0 != 0
      :                          @197
  3280: 33 07 40                 a0 = 0x40
  3283: 95 15 e0 24 01           s0 = sp + 0x124e0
  3288: 82 16 78                 s1 = u64 [sp + 0x78]
  3291: 01                       fallthrough
      :                          @198
  3292: 7b 17 38 01              u64 [sp + 0x138] = a0
  3296: 33 09 40                 a2 = 0x40
  3299: 64 67                    a0 = s1
  3301: 64 58                    a1 = s0
  3303: 50 10 28 fd 06           ra = 40, jump @344
      :                          @199 [@dyn 20]
  3308: 82 17 38 01              a0 = u64 [sp + 0x138]
  3312: 95 66 40                 s1 = s1 + 0x40
  3315: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  3318: 95 55 c0 00              s0 = s0 + 0xc0
  3322: 52 07 e2                 jump @198 if a0 != 0
      :                          @200
  3325: 33 07 40                 a0 = 0x40
  3328: 82 15 50                 s0 = u64 [sp + 0x50]
  3331: 82 16 58                 s1 = u64 [sp + 0x58]
  3334: 01                       fallthrough
      :                          @201
  3335: 7b 17 38 01              u64 [sp + 0x138] = a0
  3339: 33 09 40                 a2 = 0x40
  3342: 64 67                    a0 = s1
  3344: 64 58                    a1 = s0
  3346: 50 10 2a d2 06           ra = 42, jump @344
      :                          @202 [@dyn 21]
  3351: 82 17 38 01              a0 = u64 [sp + 0x138]
  3355: 95 66 40                 s1 = s1 + 0x40
  3358: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  3361: 95 55 c0 00              s0 = s0 + 0xc0
  3365: 52 07 e2                 jump @201 if a0 != 0
      :                          @203
  3368: 33 07 40                 a0 = 0x40
  3371: 82 15 68                 s0 = u64 [sp + 0x68]
  3374: 82 16 70                 s1 = u64 [sp + 0x70]
  3377: 01                       fallthrough
      :                          @204
  3378: 7b 17 38 01              u64 [sp + 0x138] = a0
  3382: 33 09 40                 a2 = 0x40
  3385: 64 67                    a0 = s1
  3387: 64 58                    a1 = s0
  3389: 50 10 2c a7 06           ra = 44, jump @344
      :                          @205 [@dyn 22]
  3394: 82 17 38 01              a0 = u64 [sp + 0x138]
  3398: 95 66 40                 s1 = s1 + 0x40
  3401: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  3404: 95 55 c0 00              s0 = s0 + 0xc0
  3408: 52 07 e2                 jump @204 if a0 != 0
      :                          @206
  3411: 33 07 40                 a0 = 0x40
  3414: 82 15 48                 s0 = u64 [sp + 0x48]
  3417: 82 16 60                 s1 = u64 [sp + 0x60]
  3420: 01                       fallthrough
      :                          @207
  3421: 7b 17 38 01              u64 [sp + 0x138] = a0
  3425: 33 09 40                 a2 = 0x40
  3428: 64 67                    a0 = s1
  3430: 64 58                    a1 = s0
  3432: 50 10 2e 7c 06           ra = 46, jump @344
      :                          @208 [@dyn 23]
  3437: 82 17 38 01              a0 = u64 [sp + 0x138]
  3441: 95 66 40                 s1 = s1 + 0x40
  3444: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  3447: 95 55 c0 00              s0 = s0 + 0xc0
  3451: 52 07 e2                 jump @207 if a0 != 0
      :                          @209
  3454: 33 07 40                 a0 = 0x40
  3457: 82 15 20                 s0 = u64 [sp + 0x20]
  3460: 82 16 30                 s1 = u64 [sp + 0x30]
  3463: 01                       fallthrough
      :                          @210
  3464: 7b 17 38 01              u64 [sp + 0x138] = a0
  3468: 33 09 40                 a2 = 0x40
  3471: 64 67                    a0 = s1
  3473: 64 58                    a1 = s0
  3475: 50 10 30 51 06           ra = 48, jump @344
      :                          @211 [@dyn 24]
  3480: 82 17 38 01              a0 = u64 [sp + 0x138]
  3484: 95 66 40                 s1 = s1 + 0x40
  3487: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  3490: 95 55 c0 00              s0 = s0 + 0xc0
  3494: 52 07 e2                 jump @210 if a0 != 0
      :                          @212
  3497: 33 07 40                 a0 = 0x40
  3500: 82 15 28                 s0 = u64 [sp + 0x28]
  3503: 82 16 40                 s1 = u64 [sp + 0x40]
  3506: 01                       fallthrough
      :                          @213
  3507: 7b 17 38 01              u64 [sp + 0x138] = a0
  3511: 33 09 40                 a2 = 0x40
  3514: 64 67                    a0 = s1
  3516: 64 58                    a1 = s0
  3518: 50 10 32 26 06           ra = 50, jump @344
      :                          @214 [@dyn 25]
  3523: 82 17 38 01              a0 = u64 [sp + 0x138]
  3527: 95 66 40                 s1 = s1 + 0x40
  3530: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  3533: 95 55 c0 00              s0 = s0 + 0xc0
  3537: 52 07 e2                 jump @213 if a0 != 0
      :                          @215
  3540: 33 07 40                 a0 = 0x40
  3543: 82 15 18                 s0 = u64 [sp + 0x18]
  3546: 82 16 38                 s1 = u64 [sp + 0x38]
  3549: 01                       fallthrough
      :                          @216
  3550: 7b 17 38 01              u64 [sp + 0x138] = a0
  3554: 33 09 40                 a2 = 0x40
  3557: 64 67                    a0 = s1
  3559: 64 58                    a1 = s0
  3561: 50 10 34 fb 05           ra = 52, jump @344
      :                          @217 [@dyn 26]
  3566: 82 17 38 01              a0 = u64 [sp + 0x138]
  3570: 95 66 40                 s1 = s1 + 0x40
  3573: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  3576: 95 55 c0 00              s0 = s0 + 0xc0
  3580: 52 07 e2                 jump @216 if a0 != 0
      :                          @218
  3583: 95 17 44 01              a0 = sp + 0x144
  3587: 95 18 60 b4 01           a1 = sp + 0x1b460
  3592: 33 09 00 90 00           a2 = 0x9000
  3597: 50 10 36 d7 05           ra = 54, jump @344
      :                          @219 [@dyn 27]
  3602: 82 17 08 01              a0 = u64 [sp + 0x108]
  3606: 82 16 10 01              s1 = u64 [sp + 0x110]
  3610: 33 05 c2 00              s0 = 0xc2
  3614: ab 76 90 fa              jump @136 if s1 != a0
      :                          @220
  3618: 95 15 44 01              s0 = sp + 0x144
  3622: 33 06 00 10              s1 = 0x1000
  3626: 95 17 44 01              a0 = sp + 0x144
  3630: 33 08 00 10              a1 = 0x1000
  3634: 0a 13                    ecalli 19 // 'export'
  3636: c8 65 07                 a0 = s0 + s1
  3639: 33 08 00 10              a1 = 0x1000
  3643: 0a 13                    ecalli 19 // 'export'
  3645: 95 57 00 20              a0 = s0 + 0x2000
  3649: 33 08 00 10              a1 = 0x1000
  3653: 0a 13                    ecalli 19 // 'export'
  3655: 95 57 00 30              a0 = s0 + 0x3000
  3659: 33 08 00 10              a1 = 0x1000
  3663: 0a 13                    ecalli 19 // 'export'
  3665: 95 57 00 40              a0 = s0 + 0x4000
  3669: 33 08 00 10              a1 = 0x1000
  3673: 0a 13                    ecalli 19 // 'export'
  3675: 95 57 00 50              a0 = s0 + 0x5000
  3679: 33 08 00 10              a1 = 0x1000
  3683: 0a 13                    ecalli 19 // 'export'
  3685: 95 57 00 60              a0 = s0 + 0x6000
  3689: 33 08 00 10              a1 = 0x1000
  3693: 0a 13                    ecalli 19 // 'export'
  3695: 95 57 00 70              a0 = s0 + 0x7000
  3699: 33 08 00 10              a1 = 0x1000
  3703: 0a 13                    ecalli 19 // 'export'
  3705: 95 57 00 80 00           a0 = s0 + 0x8000
  3710: 33 08 00 10              a1 = 0x1000
  3714: 0a 13                    ecalli 19 // 'export'
  3716: 95 17 44 91 00           a0 = sp + 0x9144
  3721: 95 18 60 b4 01           a1 = sp + 0x1b460
  3726: 7b 87                    u64 [a1] = a0
  3728: 82 17 08                 a0 = u64 [sp + 0x8]
  3731: 7b 87 08                 u64 [a1 + 0x8] = a0
  3734: 33 07 28 00 01           a0 = 0x10028
  3739: 7b 87 10                 u64 [a1 + 0x10] = a0
  3742: 33 07 0a                 a0 = 0xa
  3745: 7b 87 18                 u64 [a1 + 0x18] = a0
  3748: 33 07 d0 01 01           a0 = 0x101d0
  3753: 95 18 44 91 00           a1 = sp + 0x9144
  3758: 7b 87 14                 u64 [a1 + 0x14] = a0
  3761: 49 18 1c 03              u64 [a1 + 28] = 0x3
  3765: 95 17 60 b4 01           a0 = sp + 0x1b460
  3770: 7b 87 24                 u64 [a1 + 0x24] = a0
  3773: 49 18 2c 02              u64 [a1 + 44] = 0x2
  3777: 49 18 34                 u64 [a1 + 52] = 0
  3780: 95 17 60 24 01           a0 = sp + 0x12460
  3785: 95 18 58 91 00           a1 = sp + 0x9158
  3790: 50 10 38 b4 02           ra = 56, jump @294
      :                          @221 [@dyn 28]
  3795: 95 17 60 24 01           a0 = sp + 0x12460
  3800: 82 75 08                 s0 = u64 [a0 + 0x8]
  3803: 82 7b 10                 a4 = u64 [a0 + 0x10]
  3806: 82 76                    s1 = u64 [a0]
  3808: 33 07 02                 a0 = 0x2
  3811: 33 08                    a1 = 0
  3813: 33 09                    a2 = 0
  3815: 64 5a                    a3 = s0
  3817: 33 00 3a                 ra = 0x3a
  3820: 0a 64                    ecalli 100 // 'log'
  3822: 01                       fallthrough
      :                          @222 [@dyn 29]
  3823: 82 17 10                 a0 = u64 [sp + 0x10]
  3826: c8 67 07                 a0 = a0 + s1
  3829: 53 27 00 f0 25           jump @228 if a0 <u 4294963200
      :                          @223
  3834: 33 07 10 00 03           a0 = 0x30010
  3839: 95 77 00 10              a0 = a0 + 0x1000
  3843: 01                       fallthrough
      :                          @224
  3844: 82 78                    a1 = u64 [a0]
  3846: c9 87 09                 a2 = a0 - a1
  3849: ab 59 11                 jump @228 if a2 != s0
      :                          @225
  3852: c9 68 09                 a2 = a1 - s1
  3855: 01                       fallthrough
      :                          @226
  3856: 82 7a                    a3 = u64 [a0]
  3858: ab 8a f2                 jump @224 if a3 != a1
      :                          @227
  3861: 7b 79                    u64 [a0] = a2
  3863: 33 0b                    a4 = 0
  3865: 01                       fallthrough
      :                          @228
  3866: 33 07 00 00 01           a0 = 0x10000
  3871: 33 08                    a1 = 0
  3873: 33 09 80 3c 02           a2 = 0x23c80
  3878: c8 91 01                 sp = sp + a2
  3881: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  3885: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  3889: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  3893: 95 11 f8 07              sp = sp + 0x7f8
  3897: 32 00                    ret
      :                          @229
  3899: 00                       trap
      :                          @230
  3900: 00                       trap
      :                          @231
  3901: 00                       trap
      :                          @232
  3902: 00                       trap
      :                          @233
  3903: 00                       trap
      :                          @234
  3904: 00                       trap
      :                          @235
  3905: 00                       trap
      :                          @236 [export #1: 'accumulate']
  3906: 33 07 00 00 01           a0 = 0x10000
  3911: 33 08                    a1 = 0
  3913: 32 00                    ret
      :                          @237 [export #2: 'on_transfer']
  3915: 33 07 00 00 01           a0 = 0x10000
  3920: 33 08                    a1 = 0
  3922: 32 00                    ret
      :                          @238
  3924: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  3927: 7b 10 40                 u64 [sp + 0x40] = ra
  3930: 7b 15 38                 u64 [sp + 0x38] = s0
  3933: 7b 16 30                 u64 [sp + 0x30] = s1
  3936: c8 89 09                 a2 = a2 + a1
  3939: ac 89 52                 jump @246 if a2 <u a1
      :                          @239
  3942: 64 75                    s0 = a0
  3944: 82 77                    a0 = u64 [a0]
  3946: 97 78 01                 a1 = a0 << 0x1
  3949: 33 0a 08                 a3 = 0x8
  3952: e4 a9 09                 a2 = maxu(a2, a3)
  3955: e4 98 06                 s1 = maxu(a1, a2)
  3958: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  3961: 98 88 3f                 a1 = a1 >> 0x3f
  3964: 51 07 12                 jump @241 if a0 == 0
      :                          @240
  3967: 82 59 08                 a2 = u64 [s0 + 0x8]
  3970: 7b 19 18                 u64 [sp + 0x18] = a2
  3973: 49 11 20 01              u64 [sp + 32] = 0x1
  3977: 7b 17 28                 u64 [sp + 0x28] = a0
  3980: 28 06                    jump @242
      :                          @241
  3982: 49 11 20                 u64 [sp + 32] = 0
  3985: 01                       fallthrough
      :                          @242
  3986: 64 17                    a0 = sp
  3988: 95 1a 18                 a3 = sp + 0x18
  3991: 64 69                    a2 = s1
  3993: 50 10 3c 32              ra = 60, jump @250
      :                          @243 [@dyn 30]
  3997: 82 18                    a1 = u64 [sp]
  3999: 82 17 08                 a0 = u64 [sp + 0x8]
  4002: 51 08 14                 jump @247 if a1 == 0
      :                          @244
  4005: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  4015: aa 87 0d                 jump @248 if a0 == a1
      :                          @245
  4018: 52 07 18                 jump @249 if a0 != 0
      :                          @246
  4021: 00                       trap
      :                          @247
  4022: 7b 57 08                 u64 [s0 + 0x8] = a0
  4025: 7b 56                    u64 [s0] = s1
  4027: 01                       fallthrough
      :                          @248
  4028: 82 10 40                 ra = u64 [sp + 0x40]
  4031: 82 15 38                 s0 = u64 [sp + 0x38]
  4034: 82 16 30                 s1 = u64 [sp + 0x30]
  4037: 95 11 48                 sp = sp + 0x48
  4040: 32 00                    ret
      :                          @249
  4042: 00                       trap
      :                          @250
  4043: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  4046: 7b 10 30                 u64 [sp + 0x30] = ra
  4049: 7b 15 28                 u64 [sp + 0x28] = s0
  4052: 7b 16 20                 u64 [sp + 0x20] = s1
  4055: 64 96                    s1 = a2
  4057: 64 73                    t1 = a0
  4059: 51 08 6e                 jump @260 if a1 == 0
      :                          @251
  4062: 82 a7 08                 a0 = u64 [a3 + 0x8]
  4065: 51 07 71                 jump @261 if a0 == 0
      :                          @252
  4068: 82 a9 10                 a2 = u64 [a3 + 0x10]
  4071: 51 09 9e 00              jump @268 if a2 == 0
      :                          @253
  4075: 82 a8                    a1 = u64 [a3]
  4077: 33 02 00 10              t0 = 0x1000
  4081: 33 04 10 00 03           t2 = 0x30010
  4086: c8 24 07                 a0 = t2 + t0
  4089: 01                       fallthrough
      :                          @254
  4090: 82 7a                    a3 = u64 [a0]
  4092: c8 6a 05                 s0 = a3 + s1
  4095: ac a5 c2 00              jump @274 if s0 <u a3
      :                          @255
  4099: 95 5b 01                 a4 = s0 + 0x1
  4102: 88 bc 01                 a5 = a4 <u 0x1
  4105: d8 b2 0b                 a4 = t0 <u a4
  4108: d4 cb 0b                 a4 = a4 | a5
  4111: 52 0b b2 00              jump @274 if a4 != 0
      :                          @256
  4115: 82 7b                    a4 = u64 [a0]
  4117: ab ab e5                 jump @254 if a4 != a3
      :                          @257
  4120: 7b 75                    u64 [a0] = s0
  4122: 33 0c                    a5 = 0
  4124: 7b 13 18                 u64 [sp + 0x18] = t1
  4127: c9 54 07                 a0 = t2 - s0
  4130: 95 77 00 10              a0 = a0 + 0x1000
  4134: 7b 17 10                 u64 [sp + 0x10] = a0
  4137: 7b 18 08                 u64 [sp + 0x8] = a1
  4140: 64 95                    s0 = a2
  4142: 7b 14                    u64 [sp] = t2
  4144: 50 10 3e b4 03           ra = 62, jump @344
      :                          @258 [@dyn 31]
  4149: 54 25 00 10 94 00        jump @275 if s0 <=u 4096
      :                          @259
  4155: 82 13 18                 t1 = u64 [sp + 0x18]
  4158: 82 18 10                 a1 = u64 [sp + 0x10]
  4161: 33 07                    a0 = 0
  4163: 7b 38 08                 u64 [t1 + 0x8] = a1
  4166: 28 b1 00                 jump @281
      :                          @260
  4169: 49 13 08                 u64 [t1 + 8] = 0
  4172: 33 07 01                 a0 = 0x1
  4175: 28 a8 00                 jump @281
      :                          @261
  4178: 33 07 00 10              a0 = 0x1000
  4182: 33 02 10 00 03           t0 = 0x30010
  4187: c8 72 09                 a2 = t0 + a0
  4190: 01                       fallthrough
      :                          @262
  4191: 82 9b                    a4 = u64 [a2]
  4193: c8 6b 0a                 a3 = a4 + s1
  4196: ac ba 5d                 jump @274 if a3 <u a4
      :                          @263
  4199: 95 ac 01                 a5 = a3 + 0x1
  4202: 88 c8 01                 a1 = a5 <u 0x1
  4205: d8 c7 0c                 a5 = a0 <u a5
  4208: d4 c8 08                 a1 = a1 | a5
  4211: 52 08 4e                 jump @274 if a1 != 0
      :                          @264
  4214: 82 98                    a1 = u64 [a2]
  4216: ab b8 e7                 jump @262 if a1 != a4
      :                          @265
  4219: 7b 9a                    u64 [a2] = a3
  4221: 33 0c                    a5 = 0
  4223: 01                       fallthrough
      :                          @266
  4224: ab b8 df                 jump @262 if a1 != a4
      :                          @267
  4227: 28 30                    jump @273
      :                          @268
  4229: 33 07 00 10              a0 = 0x1000
  4233: 33 02 10 00 03           t0 = 0x30010
  4238: c8 72 09                 a2 = t0 + a0
  4241: 01                       fallthrough
      :                          @269
  4242: 82 9b                    a4 = u64 [a2]
  4244: c8 6b 0a                 a3 = a4 + s1
  4247: ac ba 2a                 jump @274 if a3 <u a4
      :                          @270
  4250: 95 ac 01                 a5 = a3 + 0x1
  4253: 88 c8 01                 a1 = a5 <u 0x1
  4256: d8 c7 0c                 a5 = a0 <u a5
  4259: d4 c8 08                 a1 = a1 | a5
  4262: 52 08 1b                 jump @274 if a1 != 0
      :                          @271
  4265: 82 98                    a1 = u64 [a2]
  4267: ab b8 e7                 jump @269 if a1 != a4
      :                          @272
  4270: 7b 9a                    u64 [a2] = a3
  4272: 33 0c                    a5 = 0
  4274: 01                       fallthrough
      :                          @273
  4275: c9 a2 07                 a0 = t0 - a3
  4278: 95 78 00 10              a1 = a0 + 0x1000
  4282: 33 07                    a0 = 0
  4284: 7b 38 08                 u64 [t1 + 0x8] = a1
  4287: 28 38                    jump @281
      :                          @274
  4289: 33 07 01                 a0 = 0x1
  4292: 7b 37 08                 u64 [t1 + 0x8] = a0
  4295: 28 30                    jump @281
      :                          @275
  4297: 64 5c                    a5 = s0
  4299: 82 18                    a1 = u64 [sp]
  4301: 95 87 00 10              a0 = a1 + 0x1000
  4305: 82 13 18                 t1 = u64 [sp + 0x18]
  4308: 82 15 08                 s0 = u64 [sp + 0x8]
  4311: 01                       fallthrough
      :                          @276
  4312: 82 78                    a1 = u64 [a0]
  4314: c9 87 09                 a2 = a0 - a1
  4317: ab 59 11                 jump @280 if a2 != s0
      :                          @277
  4320: c9 c8 09                 a2 = a1 - a5
  4323: 01                       fallthrough
      :                          @278
  4324: 82 7a                    a3 = u64 [a0]
  4326: ab 8a f2                 jump @276 if a3 != a1
      :                          @279
  4329: 7b 79                    u64 [a0] = a2
  4331: 33 0b                    a4 = 0
  4333: 01                       fallthrough
      :                          @280
  4334: 82 18 10                 a1 = u64 [sp + 0x10]
  4337: 33 07                    a0 = 0
  4339: 7b 38 08                 u64 [t1 + 0x8] = a1
  4342: 01                       fallthrough
      :                          @281
  4343: 7b 36 10                 u64 [t1 + 0x10] = s1
  4346: 7b 37                    u64 [t1] = a0
  4348: 82 10 30                 ra = u64 [sp + 0x30]
  4351: 82 15 28                 s0 = u64 [sp + 0x28]
  4354: 82 16 20                 s1 = u64 [sp + 0x20]
  4357: 95 11 38                 sp = sp + 0x38
  4360: 32 00                    ret
      :                          @282
  4362: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  4365: 7b 10 40                 u64 [sp + 0x40] = ra
  4368: 7b 15 38                 u64 [sp + 0x38] = s0
  4371: 7b 16 30                 u64 [sp + 0x30] = s1
  4374: 95 88 01                 a1 = a1 + 0x1
  4377: 51 08 53                 jump @290 if a1 == 0
      :                          @283
  4380: 64 75                    s0 = a0
  4382: 82 77                    a0 = u64 [a0]
  4384: 97 79 01                 a2 = a0 << 0x1
  4387: 33 0a 08                 a3 = 0x8
  4390: e4 a8 08                 a1 = maxu(a1, a3)
  4393: e4 89 06                 s1 = maxu(a2, a1)
  4396: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  4399: 98 88 3f                 a1 = a1 >> 0x3f
  4402: 51 07 12                 jump @285 if a0 == 0
      :                          @284
  4405: 82 59 08                 a2 = u64 [s0 + 0x8]
  4408: 7b 19 18                 u64 [sp + 0x18] = a2
  4411: 49 11 20 01              u64 [sp + 32] = 0x1
  4415: 7b 17 28                 u64 [sp + 0x28] = a0
  4418: 28 06                    jump @286
      :                          @285
  4420: 49 11 20                 u64 [sp + 32] = 0
  4423: 01                       fallthrough
      :                          @286
  4424: 64 17                    a0 = sp
  4426: 95 1a 18                 a3 = sp + 0x18
  4429: 64 69                    a2 = s1
  4431: 50 10 40 7c fe           ra = 64, jump @250
      :                          @287 [@dyn 32]
  4436: 82 18                    a1 = u64 [sp]
  4438: 82 17 08                 a0 = u64 [sp + 0x8]
  4441: 51 08 14                 jump @291 if a1 == 0
      :                          @288
  4444: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  4454: aa 87 0d                 jump @292 if a0 == a1
      :                          @289
  4457: 52 07 18                 jump @293 if a0 != 0
      :                          @290
  4460: 00                       trap
      :                          @291
  4461: 7b 57 08                 u64 [s0 + 0x8] = a0
  4464: 7b 56                    u64 [s0] = s1
  4466: 01                       fallthrough
      :                          @292
  4467: 82 10 40                 ra = u64 [sp + 0x40]
  4470: 82 15 38                 s0 = u64 [sp + 0x38]
  4473: 82 16 30                 s1 = u64 [sp + 0x30]
  4476: 95 11 48                 sp = sp + 0x48
  4479: 32 00                    ret
      :                          @293
  4481: 00                       trap
      :                          @294
  4482: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  4485: 7b 10 30                 u64 [sp + 0x30] = ra
  4488: 7b 15 28                 u64 [sp + 0x28] = s0
  4491: 7b 16 20                 u64 [sp + 0x20] = s1
  4494: 82 8a 08                 a3 = u64 [a1 + 0x8]
  4497: 64 75                    s0 = a0
  4499: 51 0a 35                 jump @299 if a3 == 0
      :                          @295
  4502: 82 89                    a2 = u64 [a1]
  4504: 33 07                    a0 = 0
  4506: 95 9b 08                 a4 = a2 + 0x8
  4509: 01                       fallthrough
      :                          @296
  4510: 82 bc                    a5 = u64 [a4]
  4512: c8 c7 07                 a0 = a0 + a5
  4515: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  4518: 95 bb 10                 a4 = a4 + 0x10
  4521: 52 0a f5                 jump @296 if a3 != 0
      :                          @297
  4524: 82 8a 18                 a3 = u64 [a1 + 0x18]
  4527: 51 0a 24                 jump @301 if a3 == 0
      :                          @298
  4530: 82 99 08                 a2 = u64 [a2 + 0x8]
  4533: 8e 99                    a2 = a2 >u 0
  4535: 88 7a 10                 a3 = a0 <u 0x10
  4538: 85 aa 01                 a3 = a3 ^ 0x1
  4541: d4 a9 09                 a2 = a2 | a3
  4544: 89 7a                    a3 = a0 <s 0
  4546: e0 a9 09                 a2 = a2 & ~a3
  4549: 52 09 0a                 jump @300 if a2 != 0
      :                          @299
  4552: 33 07                    a0 = 0
  4554: 33 09 01                 a2 = 0x1
  4557: 28 4b                    jump @309
      :                          @300
  4559: 97 77 01                 a0 = a0 << 0x1
  4562: 01                       fallthrough
      :                          @301
  4563: 51 07 41                 jump @308 if a0 == 0
      :                          @302
  4566: 57 07 74                 jump @314 if a0 <s 0
      :                          @303
  4569: 64 53                    t1 = s0
  4571: 33 09 00 10              a2 = 0x1000
  4575: 33 02 10 00 03           t0 = 0x30010
  4580: c8 92 0b                 a4 = t0 + a2
  4583: 01                       fallthrough
      :                          @304
  4584: 82 bc                    a5 = u64 [a4]
  4586: c8 7c 0a                 a3 = a5 + a0
  4589: ac ca 5b                 jump @312 if a3 <u a5
      :                          @305
  4592: 95 a5 01                 s0 = a3 + 0x1
  4595: 88 56 01                 s1 = s0 <u 0x1
  4598: d8 59 05                 s0 = a2 <u s0
  4601: d4 65 05                 s0 = s0 | s1
  4604: 52 05 4c                 jump @312 if s0 != 0
      :                          @306
  4607: 82 b6                    s1 = u64 [a4]
  4609: ab c6 e7                 jump @304 if s1 != a5
      :                          @307
  4612: 7b ba                    u64 [a4] = a3
  4614: c9 a2 09                 a2 = t0 - a3
  4617: 33 0a 00 10              a3 = 0x1000
  4621: c8 a9 09                 a2 = a2 + a3
  4624: 64 35                    s0 = t1
  4626: 28 06                    jump @309
      :                          @308
  4628: 33 09 01                 a2 = 0x1
  4631: 01                       fallthrough
      :                          @309
  4632: 7b 17                    u64 [sp] = a0
  4634: 7b 19 08                 u64 [sp + 0x8] = a2
  4637: 49 11 10                 u64 [sp + 16] = 0
  4640: 64 17                    a0 = sp
  4642: 50 10 42 76 06           ra = 66, jump @441
      :                          @310 [@dyn 33]
  4647: 52 07 22                 jump @313 if a0 != 0
      :                          @311
  4650: 82 17 10                 a0 = u64 [sp + 0x10]
  4653: 82 18 08                 a1 = u64 [sp + 0x8]
  4656: 82 19                    a2 = u64 [sp]
  4658: 7b 57 10                 u64 [s0 + 0x10] = a0
  4661: 7b 58 08                 u64 [s0 + 0x8] = a1
  4664: 7b 59                    u64 [s0] = a2
  4666: 82 10 30                 ra = u64 [sp + 0x30]
  4669: 82 15 28                 s0 = u64 [sp + 0x28]
  4672: 82 16 20                 s1 = u64 [sp + 0x20]
  4675: 95 11 38                 sp = sp + 0x38
  4678: 32 00                    ret
      :                          @312
  4680: 00                       trap
      :                          @313
  4681: 00                       trap
      :                          @314
  4682: 00                       trap
      :                          @315 [@dyn 34]
  4683: 82 72                    t0 = u64 [a0]
  4685: 33 09 00 f0              a2 = 0xfffffffffffff000
  4689: 95 2a ff ef              a3 = t0 + 0xffffffffffffefff
  4693: ac 9a 27                 jump @321 if a3 <u a2
      :                          @316
  4696: 82 77 08                 a0 = u64 [a0 + 0x8]
  4699: 33 09 10 00 03           a2 = 0x30010
  4704: 95 99 00 10              a2 = a2 + 0x1000
  4708: 01                       fallthrough
      :                          @317
  4709: 82 9a                    a3 = u64 [a2]
  4711: c9 a9 0b                 a4 = a2 - a3
  4714: ab 7b 12                 jump @321 if a4 != a0
      :                          @318
  4717: c9 2a 0b                 a4 = a3 - t0
  4720: 01                       fallthrough
      :                          @319
  4721: 82 9c                    a5 = u64 [a2]
  4723: ab ac f2                 jump @317 if a5 != a3
      :                          @320
  4726: 7b 9b                    u64 [a2] = a4
  4728: 33 08                    a1 = 0
  4730: 32 00                    ret
      :                          @321
  4732: 32 00                    ret
      :                          @322 [@dyn 35]
  4734: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  4737: 7b 10 18                 u64 [sp + 0x18] = ra
  4740: 7b 15 10                 u64 [sp + 0x10] = s0
  4743: 7b 16 08                 u64 [sp + 0x8] = s1
  4746: 64 75                    s0 = a0
  4748: 82 7a 10                 a3 = u64 [a0 + 0x10]
  4751: 82 77                    a0 = u64 [a0]
  4753: c9 a7 07                 a0 = a0 - a3
  4756: 64 96                    s1 = a2
  4758: ac 97 2a                 jump @325 if a0 <u a2
      :                          @323
  4761: 7b 1a                    u64 [sp] = a3
  4763: 82 57 08                 a0 = u64 [s0 + 0x8]
  4766: c8 a7 07                 a0 = a0 + a3
  4769: 64 69                    a2 = s1
  4771: 50 10 48 41 01           ra = 72, jump @344
      :                          @324 [@dyn 36]
  4776: 82 17                    a0 = u64 [sp]
  4778: c8 76 06                 s1 = s1 + a0
  4781: 7b 56 10                 u64 [s0 + 0x10] = s1
  4784: 33 07                    a0 = 0
  4786: 82 10 18                 ra = u64 [sp + 0x18]
  4789: 82 15 10                 s0 = u64 [sp + 0x10]
  4792: 82 16 08                 s1 = u64 [sp + 0x8]
  4795: 95 11 20                 sp = sp + 0x20
  4798: 32 00                    ret
      :                          @325
  4800: 64 57                    a0 = s0
  4802: 7b 18                    u64 [sp] = a1
  4804: 64 a8                    a1 = a3
  4806: 64 69                    a2 = s1
  4808: 50 10 4a 8c fc           ra = 74, jump @238
      :                          @326 [@dyn 37]
  4813: 82 18                    a1 = u64 [sp]
  4815: 82 5a 10                 a3 = u64 [s0 + 0x10]
  4818: 28 c7                    jump @323
      :                          @327 [@dyn 38]
  4820: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  4823: 7b 10 20                 u64 [sp + 0x20] = ra
  4826: 7b 15 18                 u64 [sp + 0x18] = s0
  4829: 7b 16 10                 u64 [sp + 0x10] = s1
  4832: 64 86                    s1 = a1
  4834: 83 88                    i32 a1 = a1 + 0
  4836: 33 09 80 00              a2 = 0x80
  4840: 64 7a                    a3 = a0
  4842: ae 98 2b                 jump @332 if a1 >=u a2
      :                          @328
  4845: 82 a8 10                 a1 = u64 [a3 + 0x10]
  4848: 82 a7                    a0 = u64 [a3]
  4850: ab 78 12                 jump @331 if a1 != a0
      :                          @329
  4853: 64 a7                    a0 = a3
  4855: 64 a5                    s0 = a3
  4857: 50 10 4e 11 fe           ra = 78, jump @282
      :                          @330 [@dyn 39]
  4862: 64 5a                    a3 = s0
  4864: 82 58 10                 a1 = u64 [s0 + 0x10]
  4867: 01                       fallthrough
      :                          @331
  4868: 82 a7 08                 a0 = u64 [a3 + 0x8]
  4871: c8 87 07                 a0 = a0 + a1
  4874: 78 76                    u8 [a0] = s1
  4876: 95 88 01                 a1 = a1 + 0x1
  4879: 7b a8 10                 u64 [a3 + 0x10] = a1
  4882: 28 ab 00                 jump @340
      :                          @332
  4885: 8b 67 0b                 i32 a0 = s1 >> 0xb
  4888: 48 11 0c                 u32 [sp + 12] = 0
  4891: 52 07 1c                 jump @334 if a0 != 0
      :                          @333
  4894: 98 67 06                 a0 = s1 >> 0x6
  4897: 86 77 c0 00              a0 = a0 | 0xc0
  4901: 78 17 0c                 u8 [sp + 0xc] = a0
  4904: 84 67 3f                 a0 = s1 & 0x3f
  4907: 86 77 80 00              a0 = a0 | 0x80
  4911: 78 17 0d                 u8 [sp + 0xd] = a0
  4914: 33 06 02                 s1 = 0x2
  4917: 28 63                    jump @337
      :                          @334
  4919: 8b 67 10                 i32 a0 = s1 >> 0x10
  4922: 52 07 29                 jump @336 if a0 != 0
      :                          @335
  4925: 98 67 0c                 a0 = s1 >> 0xc
  4928: 86 77 e0 00              a0 = a0 | 0xe0
  4932: 78 17 0c                 u8 [sp + 0xc] = a0
  4935: 97 67 34                 a0 = s1 << 0x34
  4938: 98 77 3a                 a0 = a0 >> 0x3a
  4941: 95 77 80 00              a0 = a0 + 0x80
  4945: 78 17 0d                 u8 [sp + 0xd] = a0
  4948: 84 67 3f                 a0 = s1 & 0x3f
  4951: 86 77 80 00              a0 = a0 | 0x80
  4955: 78 17 0e                 u8 [sp + 0xe] = a0
  4958: 33 06 03                 s1 = 0x3
  4961: 28 37                    jump @337
      :                          @336
  4963: 97 67 2b                 a0 = s1 << 0x2b
  4966: 98 77 3d                 a0 = a0 >> 0x3d
  4969: 95 77 f0 00              a0 = a0 + 0xf0
  4973: 78 17 0c                 u8 [sp + 0xc] = a0
  4976: 97 67 2e                 a0 = s1 << 0x2e
  4979: 98 77 3a                 a0 = a0 >> 0x3a
  4982: 95 77 80 00              a0 = a0 + 0x80
  4986: 78 17 0d                 u8 [sp + 0xd] = a0
  4989: 97 67 34                 a0 = s1 << 0x34
  4992: 98 77 3a                 a0 = a0 >> 0x3a
  4995: 95 77 80 00              a0 = a0 + 0x80
  4999: 78 17 0e                 u8 [sp + 0xe] = a0
  5002: 84 67 3f                 a0 = s1 & 0x3f
  5005: 86 77 80 00              a0 = a0 | 0x80
  5009: 78 17 0f                 u8 [sp + 0xf] = a0
  5012: 33 06 04                 s1 = 0x4
  5015: 01                       fallthrough
      :                          @337
  5016: 82 a5 10                 s0 = u64 [a3 + 0x10]
  5019: 82 a7                    a0 = u64 [a3]
  5021: c9 57 07                 a0 = a0 - s0
  5024: ac 67 2d                 jump @341 if a0 <u s1
      :                          @338
  5027: 7b 1a                    u64 [sp] = a3
  5029: 82 a7 08                 a0 = u64 [a3 + 0x8]
  5032: c8 57 07                 a0 = a0 + s0
  5035: 95 18 0c                 a1 = sp + 0xc
  5038: 64 69                    a2 = s1
  5040: 50 10 50 34              ra = 80, jump @344
      :                          @339 [@dyn 40]
  5044: c8 56 06                 s1 = s1 + s0
  5047: 82 17                    a0 = u64 [sp]
  5049: 7b 76 10                 u64 [a0 + 0x10] = s1
  5052: 01                       fallthrough
      :                          @340
  5053: 33 07                    a0 = 0
  5055: 82 10 20                 ra = u64 [sp + 0x20]
  5058: 82 15 18                 s0 = u64 [sp + 0x18]
  5061: 82 16 10                 s1 = u64 [sp + 0x10]
  5064: 95 11 28                 sp = sp + 0x28
  5067: 32 00                    ret
      :                          @341
  5069: 64 a7                    a0 = a3
  5071: 64 58                    a1 = s0
  5073: 64 69                    a2 = s1
  5075: 64 a5                    s0 = a3
  5077: 50 10 52 7f fb           ra = 82, jump @238
      :                          @342 [@dyn 41]
  5082: 64 5a                    a3 = s0
  5084: 82 55 10                 s0 = u64 [s0 + 0x10]
  5087: 28 c4                    jump @338
      :                          @343 [@dyn 42]
  5089: 28 b7 04                 jump @441
      :                          @344
  5092: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  5095: 7b 10 18                 u64 [sp + 0x18] = ra
  5098: 7b 15 10                 u64 [sp + 0x10] = s0
  5101: 7b 16 08                 u64 [sp + 0x8] = s1
  5104: 53 19 10 64              jump @353 if a2 <u 16
      :                          @345
  5108: 8d 7a                    i32 a3 = -a0
  5110: 84 a2 07                 t0 = a3 & 0x7
  5113: c8 27 0b                 a4 = a0 + t0
  5116: 51 02 15                 jump @348 if t0 == 0
      :                          @346
  5119: 64 8c                    a5 = a1
  5121: 64 75                    s0 = a0
  5123: 01                       fallthrough
      :                          @347
  5124: 7c ca                    a3 = u8 [a5]
  5126: 78 5a                    u8 [s0] = a3
  5128: 95 55 01                 s0 = s0 + 0x1
  5131: 95 cc 01                 a5 = a5 + 0x1
  5134: ac b5 f6                 jump @347 if s0 <u a4
      :                          @348
  5137: c8 28 03                 t1 = a1 + t0
  5140: c9 29 02                 t0 = a2 - t0
  5143: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  5146: 84 38 07                 a1 = t1 & 0x7
  5149: c8 4b 0a                 a3 = a4 + t2
  5152: 51 08 3b                 jump @355 if a1 == 0
      :                          @349
  5155: 58 04 4b                 jump @358 if t2 <=s 0
      :                          @350
  5158: 97 38 03                 a1 = t1 << 0x3
  5161: 84 80 38                 ra = a1 & 0x38
  5164: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  5167: 82 c5                    s0 = u64 [a5]
  5169: 8d 88                    i32 a1 = -a1
  5171: 84 88 38                 a1 = a1 & 0x38
  5174: 95 cc 08                 a5 = a5 + 0x8
  5177: 01                       fallthrough
      :                          @351
  5178: 82 c6                    s1 = u64 [a5]
  5180: d0 05 05                 s0 = s0 >> ra
  5183: cf 86 09                 a2 = s1 << a1
  5186: d4 59 09                 a2 = a2 | s0
  5189: 7b b9                    u64 [a4] = a2
  5191: 95 bb 08                 a4 = a4 + 0x8
  5194: 95 cc 08                 a5 = a5 + 0x8
  5197: 64 65                    s0 = s1
  5199: ac ab eb                 jump @351 if a4 <u a3
      :                          @352
  5202: 28 1c                    jump @358
      :                          @353
  5204: 64 7a                    a3 = a0
  5206: 52 09 21                 jump @359 if a2 != 0
      :                          @354
  5209: 28 2f                    jump @361
      :                          @355
  5211: 58 04 13                 jump @358 if t2 <=s 0
      :                          @356
  5214: 64 38                    a1 = t1
  5216: 01                       fallthrough
      :                          @357
  5217: 82 89                    a2 = u64 [a1]
  5219: 7b b9                    u64 [a4] = a2
  5221: 95 bb 08                 a4 = a4 + 0x8
  5224: 95 88 08                 a1 = a1 + 0x8
  5227: ac ab f6                 jump @357 if a4 <u a3
      :                          @358
  5230: c8 43 08                 a1 = t1 + t2
  5233: 84 29 07                 a2 = t0 & 0x7
  5236: 51 09 14                 jump @361 if a2 == 0
      :                          @359
  5239: c8 a9 09                 a2 = a2 + a3
  5242: 01                       fallthrough
      :                          @360
  5243: 7c 8b                    a4 = u8 [a1]
  5245: 78 ab                    u8 [a3] = a4
  5247: 95 aa 01                 a3 = a3 + 0x1
  5250: 95 88 01                 a1 = a1 + 0x1
  5253: ac 9a f6                 jump @360 if a3 <u a2
      :                          @361
  5256: 82 10 18                 ra = u64 [sp + 0x18]
  5259: 82 15 10                 s0 = u64 [sp + 0x10]
  5262: 82 16 08                 s1 = u64 [sp + 0x8]
  5265: 95 11 20                 sp = sp + 0x20
  5268: 32 00                    ret
      :                          @362
  5270: 53 19 10 48              jump @371 if a2 <u 16
      :                          @363
  5274: 8d 7a                    i32 a3 = -a0
  5276: 84 aa 07                 a3 = a3 & 0x7
  5279: c8 a7 0b                 a4 = a0 + a3
  5282: 51 0a 0e                 jump @366 if a3 == 0
      :                          @364
  5285: 64 7c                    a5 = a0
  5287: 01                       fallthrough
      :                          @365
  5288: 78 c8                    u8 [a5] = a1
  5290: 95 cc 01                 a5 = a5 + 0x1
  5293: ac bc fb                 jump @365 if a5 <u a4
      :                          @366
  5296: c9 a9 03                 t1 = a2 - a3
  5299: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  5302: c8 cb 0a                 a3 = a4 + a5
  5305: 58 0c 1d                 jump @369 if a5 <=s 0
      :                          @367
  5308: 84 82 ff 00              t0 = a1 & 0xff
  5312: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  5322: ca 92 0c                 a5 = t0 * a2
  5325: 01                       fallthrough
      :                          @368
  5326: 7b bc                    u64 [a4] = a5
  5328: 95 bb 08                 a4 = a4 + 0x8
  5331: ac ab fb                 jump @368 if a4 <u a3
      :                          @369
  5334: 84 39 07                 a2 = t1 & 0x7
  5337: 52 09 0a                 jump @372 if a2 != 0
      :                          @370
  5340: 28 13                    jump @374
      :                          @371
  5342: 64 7a                    a3 = a0
  5344: 51 09 0f                 jump @374 if a2 == 0
      :                          @372
  5347: c8 a9 09                 a2 = a2 + a3
  5350: 01                       fallthrough
      :                          @373
  5351: 78 a8                    u8 [a3] = a1
  5353: 95 aa 01                 a3 = a3 + 0x1
  5356: ac 9a fb                 jump @373 if a3 <u a2
      :                          @374
  5359: 32 00                    ret
      :                          @375 [@dyn 43]
  5361: 82 77                    a0 = u64 [a0]
  5363: 01                       fallthrough
      :                          @376
  5364: 28                       jump @376
      :                          @377
  5365: 95 11 a0                 sp = sp + 0xffffffffffffffa0
  5368: 7b 10 58                 u64 [sp + 0x58] = ra
  5371: 7b 15 50                 u64 [sp + 0x50] = s0
  5374: 7b 16 48                 u64 [sp + 0x48] = s1
  5377: 7b 19 08                 u64 [sp + 0x8] = a2
  5380: 7b 18                    u64 [sp] = a1
  5382: 98 7a 04                 a3 = a0 >> 0x4
  5385: 33 09 27                 a2 = 0x27
  5388: 33 0b 82 00 01           a4 = 0x10082
  5393: 53 2a 71 02 7b           jump @380 if a3 <u 625
      :                          @378
  5398: 33 09 27                 a2 = 0x27
  5401: 95 1c 46                 a5 = sp + 0x46
  5404: 3a 08 00 00 03           a1 = u64 [0x30000]
  5409: 7b 18 18                 u64 [sp + 0x18] = a1
  5412: 49 11 10 f0 d8 00        u64 [sp + 16] = 0xd8f0
  5418: 33 03 7b 14              t1 = 0x147b
  5422: 33 04 ff e0 f5 05        t2 = 0x5f5e0ff
  5428: 01                       fallthrough
      :                          @379
  5429: 64 70                    ra = a0
  5431: 82 17 18                 a0 = u64 [sp + 0x18]
  5434: d6 70 07                 a0 = ra mulhu a0
  5437: 98 77 0b                 a0 = a0 >> 0xb
  5440: 82 18 10                 a1 = u64 [sp + 0x10]
  5443: c0 87 02                 i32 t0 = a0 * a1
  5446: c8 02 05                 s0 = t0 + ra
  5449: 97 52 30                 t0 = s0 << 0x30
  5452: 98 28 32                 a1 = t0 >> 0x32
  5455: ca 38 08                 a1 = a1 * t1
  5458: 98 8a 11                 a3 = a1 >> 0x11
  5461: 98 88 10                 a1 = a1 >> 0x10
  5464: 84 88 fe 07              a1 = a1 & 0x7fe
  5468: 96 aa 9c                 a3 = a3 * 0xffffffffffffff9c
  5471: c8 5a 0a                 a3 = a3 + s0
  5474: 97 aa 31                 a3 = a3 << 0x31
  5477: 98 aa 30                 a3 = a3 >> 0x30
  5480: c8 b8 08                 a1 = a1 + a4
  5483: 7c 85                    s0 = u8 [a1]
  5485: 7c 88 01                 a1 = u8 [a1 + 0x1]
  5488: c8 ba 0a                 a3 = a3 + a4
  5491: 7c a6 01                 s1 = u8 [a3 + 0x1]
  5494: 7c aa                    a3 = u8 [a3]
  5496: 78 c8 ff                 u8 [a5 + 0xffffffffffffffff] = a1
  5499: 78 c5 fe                 u8 [a5 + 0xfffffffffffffffe] = s0
  5502: 78 c6 01                 u8 [a5 + 0x1] = s1
  5505: 78 ca                    u8 [a5] = a3
  5507: 95 99 fc                 a2 = a2 + 0xfffffffffffffffc
  5510: 95 cc fc                 a5 = a5 + 0xfffffffffffffffc
  5513: ac 04 ac                 jump @379 if t2 <u ra
      :                          @380
  5516: 54 17 63 36              jump @382 if a0 <=u 99
      :                          @381
  5520: 97 78 30                 a1 = a0 << 0x30
  5523: 98 88 32                 a1 = a1 >> 0x32
  5526: 96 88 7b 14              a1 = a1 * 0x147b
  5530: 98 88 11                 a1 = a1 >> 0x11
  5533: 96 8a 9c                 a3 = a1 * 0xffffffffffffff9c
  5536: c8 a7 07                 a0 = a0 + a3
  5539: 97 77 31                 a0 = a0 << 0x31
  5542: 98 77 30                 a0 = a0 >> 0x30
  5545: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
  5548: c8 b7 07                 a0 = a0 + a4
  5551: 7c 7a 01                 a3 = u8 [a0 + 0x1]
  5554: 7c 77                    a0 = u8 [a0]
  5556: 95 1c 21                 a5 = sp + 0x21
  5559: c8 9c 0c                 a5 = a5 + a2
  5562: 78 ca 01                 u8 [a5 + 0x1] = a3
  5565: 78 c7                    u8 [a5] = a0
  5567: 64 87                    a0 = a1
  5569: 01                       fallthrough
      :                          @382
  5570: 55 17 0a 14              jump @384 if a0 >=u 10
      :                          @383
  5574: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  5577: 95 18 21                 a1 = sp + 0x21
  5580: c8 98 08                 a1 = a1 + a2
  5583: 83 77 30                 i32 a0 = a0 + 0x30
  5586: 78 87                    u8 [a1] = a0
  5588: 28 1c                    jump @385
      :                          @384
  5590: 97 77 01                 a0 = a0 << 0x1
  5593: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
  5596: c8 b7 07                 a0 = a0 + a4
  5599: 7c 78 01                 a1 = u8 [a0 + 0x1]
  5602: 7c 77                    a0 = u8 [a0]
  5604: 95 1a 21                 a3 = sp + 0x21
  5607: c8 9a 0a                 a3 = a3 + a2
  5610: 78 a8 01                 u8 [a3 + 0x1] = a1
  5613: 78 a7                    u8 [a3] = a0
  5615: 01                       fallthrough
      :                          @385
  5616: 95 1b 21                 a4 = sp + 0x21
  5619: c8 9b 0b                 a4 = a4 + a2
  5622: 9a 9c 27                 a5 = 0x27 - a2
  5625: 33 09 80 00 01           a2 = 0x10080
  5630: 82 17 08                 a0 = u64 [sp + 0x8]
  5633: 82 18                    a1 = u64 [sp]
  5635: 33 0a                    a3 = 0
  5637: 50 10 58 12              ra = 88, jump @387
      :                          @386 [@dyn 44]
  5641: 82 10 58                 ra = u64 [sp + 0x58]
  5644: 82 15 50                 s0 = u64 [sp + 0x50]
  5647: 82 16 48                 s1 = u64 [sp + 0x48]
  5650: 95 11 60                 sp = sp + 0x60
  5653: 32 00                    ret
      :                          @387
  5655: 95 11 98                 sp = sp + 0xffffffffffffff98
  5658: 7b 10 60                 u64 [sp + 0x60] = ra
  5661: 7b 15 58                 u64 [sp + 0x58] = s0
  5664: 7b 16 50                 u64 [sp + 0x50] = s1
  5667: 7b 1b 18                 u64 [sp + 0x18] = a4
  5670: 51 08 4f                 jump @394 if a1 == 0
      :                          @388
  5673: 80 76 34                 s1 = u32 [a0 + 0x34]
  5676: 84 68 01                 a1 = s1 & 0x1
  5679: 33 0b 2b                 a4 = 0x2b
  5682: 33 05 00 00 11           s0 = 0x110000
  5687: db 8b 05                 s0 = a4 if a1 != 0
  5690: 7b 15 28                 u64 [sp + 0x28] = s0
  5693: c8 c8 02                 t0 = a1 + a5
  5696: 84 68 04                 a1 = s1 & 0x4
  5699: 51 08 42                 jump @395 if a1 == 0
      :                          @389
  5702: 7b 19 30                 u64 [sp + 0x30] = a2
  5705: 33 08                    a1 = 0
  5707: 51 0a 1a                 jump @392 if a3 == 0
      :                          @390
  5710: 64 a5                    s0 = a3
  5712: 01                       fallthrough
      :                          @391
  5713: 7d 9b                    a4 = i8 [a2]
  5715: 89 bb c0                 a4 = a4 <s 0xffffffffffffffc0
  5718: 85 bb 01                 a4 = a4 ^ 0x1
  5721: c8 b8 08                 a1 = a1 + a4
  5724: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  5727: 95 99 01                 a2 = a2 + 0x1
  5730: 52 05 ef                 jump @391 if s0 != 0
      :                          @392
  5733: c8 82 02                 t0 = t0 + a1
  5736: 7b 1a 38                 u64 [sp + 0x38] = a3
  5739: 82 78                    a1 = u64 [a0]
  5741: 7b 1c 20                 u64 [sp + 0x20] = a5
  5744: 52 08 23                 jump @396 if a1 != 0
      :                          @393
  5747: 28 41                    jump @401
      :                          @394
  5749: 81 76 34                 s1 = i32 [a0 + 0x34]
  5752: 95 c2 01                 t0 = a5 + 0x1
  5755: 49 11 28 2d              u64 [sp + 40] = 0x2d
  5759: 84 68 04                 a1 = s1 & 0x4
  5762: 52 08 c4                 jump @389 if a1 != 0
      :                          @395
  5765: 49 11 30                 u64 [sp + 48] = 0
  5768: 7b 1a 38                 u64 [sp + 0x38] = a3
  5771: 82 78                    a1 = u64 [a0]
  5773: 7b 1c 20                 u64 [sp + 0x20] = a5
  5776: 51 08 24                 jump @401 if a1 == 0
      :                          @396
  5779: 82 75 08                 s0 = u64 [a0 + 0x8]
  5782: ae 52 1e                 jump @401 if t0 >=u s0
      :                          @397
  5785: 84 66 08                 s1 = s1 & 0x8
  5788: 52 06 50                 jump @404 if s1 != 0
      :                          @398
  5791: 7c 79 38                 a2 = u8 [a0 + 0x38]
  5794: c9 25 0a                 a3 = s0 - t0
  5797: 5a 19 01 a1 00           jump @411 if a2 >s 1
      :                          @399
  5802: 52 09 ae 00              jump @413 if a2 != 0
      :                          @400
  5806: 7b 1a 10                 u64 [sp + 0x10] = a3
  5809: 28 ad 00                 jump @414
      :                          @401
  5812: 82 75 20                 s0 = u64 [a0 + 0x20]
  5815: 82 76 28                 s1 = u64 [a0 + 0x28]
  5818: 64 57                    a0 = s0
  5820: 64 68                    a1 = s1
  5822: 82 19 28                 a2 = u64 [sp + 0x28]
  5825: 82 1a 30                 a3 = u64 [sp + 0x30]
  5828: 82 1b 38                 a4 = u64 [sp + 0x38]
  5831: 50 10 5a 6d 01           ra = 90, jump @434
      :                          @402 [@dyn 45]
  5836: 33 08 01                 a1 = 0x1
  5839: 52 07 bc 00              jump @419 if a0 != 0
      :                          @403
  5843: 82 6c 18                 a5 = u64 [s1 + 0x18]
  5846: 64 57                    a0 = s0
  5848: 82 18 18                 a1 = u64 [sp + 0x18]
  5851: 82 19 20                 a2 = u64 [sp + 0x20]
  5854: 82 10 60                 ra = u64 [sp + 0x60]
  5857: 82 15 58                 s0 = u64 [sp + 0x58]
  5860: 82 16 50                 s1 = u64 [sp + 0x50]
  5863: 95 11 68                 sp = sp + 0x68
  5866: 32 0c                    jump [a5]
      :                          @404
  5868: 7b 12 40                 u64 [sp + 0x40] = t0
  5871: 81 78 30                 a1 = i32 [a0 + 0x30]
  5874: 7b 18 08                 u64 [sp + 0x8] = a1
  5877: 7c 79 38                 a2 = u8 [a0 + 0x38]
  5880: 7b 19                    u64 [sp] = a2
  5882: 82 79 20                 a2 = u64 [a0 + 0x20]
  5885: 82 76 28                 s1 = u64 [a0 + 0x28]
  5888: 48 17 30 30              u32 [a0 + 48] = 0x30
  5892: 7b 17 10                 u64 [sp + 0x10] = a0
  5895: 46 17 38 01              u8 [a0 + 56] = 0x1
  5899: 7b 19 48                 u64 [sp + 0x48] = a2
  5902: 64 97                    a0 = a2
  5904: 64 68                    a1 = s1
  5906: 82 19 28                 a2 = u64 [sp + 0x28]
  5909: 82 1a 30                 a3 = u64 [sp + 0x30]
  5912: 82 1b 38                 a4 = u64 [sp + 0x38]
  5915: 50 10 5c 19 01           ra = 92, jump @434
      :                          @405 [@dyn 46]
  5920: 52 07 67                 jump @418 if a0 != 0
      :                          @406
  5923: 82 17 40                 a0 = u64 [sp + 0x40]
  5926: c9 75 05                 s0 = s0 - a0
  5929: 95 55 01                 s0 = s0 + 0x1
  5932: 01                       fallthrough
      :                          @407
  5933: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  5936: 51 05 c6 00              jump @429 if s0 == 0
      :                          @408
  5940: 82 69 20                 a2 = u64 [s1 + 0x20]
  5943: 33 08 30                 a1 = 0x30
  5946: 82 17 48                 a0 = u64 [sp + 0x48]
  5949: b4 90 01 5e              ra = 94, jump [a2]
      :                          @409 [@dyn 47]
  5953: 51 07 ec                 jump @407 if a0 == 0
      :                          @410
  5956: 28 43                    jump @418
      :                          @411
  5958: 52 19 02 12              jump @413 if a2 != 2
      :                          @412
  5962: 98 a9 01                 a2 = a3 >> 0x1
  5965: 95 a8 01                 a1 = a3 + 0x1
  5968: 98 88 01                 a1 = a1 >> 0x1
  5971: 7b 18 10                 u64 [sp + 0x10] = a1
  5974: 28 08                    jump @414
      :                          @413
  5976: 64 a9                    a2 = a3
  5978: 49 11 10                 u64 [sp + 16] = 0
  5981: 01                       fallthrough
      :                          @414
  5982: 82 78 20                 a1 = u64 [a0 + 0x20]
  5985: 7b 18 48                 u64 [sp + 0x48] = a1
  5988: 82 76 28                 s1 = u64 [a0 + 0x28]
  5991: 81 77 30                 a0 = i32 [a0 + 0x30]
  5994: 7b 17 40                 u64 [sp + 0x40] = a0
  5997: 95 95 01                 s0 = a2 + 0x1
  6000: 01                       fallthrough
      :                          @415
  6001: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  6004: 51 05 27                 jump @420 if s0 == 0
      :                          @416
  6007: 82 69 20                 a2 = u64 [s1 + 0x20]
  6010: 82 17 48                 a0 = u64 [sp + 0x48]
  6013: 82 18 40                 a1 = u64 [sp + 0x40]
  6016: b4 90 01 60              ra = 96, jump [a2]
      :                          @417 [@dyn 48]
  6020: 51 07 ed                 jump @415 if a0 == 0
      :                          @418
  6023: 33 08 01                 a1 = 0x1
  6026: 01                       fallthrough
      :                          @419
  6027: 64 87                    a0 = a1
  6029: 82 10 60                 ra = u64 [sp + 0x60]
  6032: 82 15 58                 s0 = u64 [sp + 0x58]
  6035: 82 16 50                 s1 = u64 [sp + 0x50]
  6038: 95 11 68                 sp = sp + 0x68
  6041: 32 00                    ret
      :                          @420
  6043: 82 15 48                 s0 = u64 [sp + 0x48]
  6046: 64 57                    a0 = s0
  6048: 64 68                    a1 = s1
  6050: 82 19 28                 a2 = u64 [sp + 0x28]
  6053: 82 1a 30                 a3 = u64 [sp + 0x30]
  6056: 82 1b 38                 a4 = u64 [sp + 0x38]
  6059: 50 10 62 89 00           ra = 98, jump @434
      :                          @421 [@dyn 49]
  6064: 33 08 01                 a1 = 0x1
  6067: 52 07 d8                 jump @419 if a0 != 0
      :                          @422
  6070: 82 6a 18                 a3 = u64 [s1 + 0x18]
  6073: 64 57                    a0 = s0
  6075: 82 18 18                 a1 = u64 [sp + 0x18]
  6078: 82 19 20                 a2 = u64 [sp + 0x20]
  6081: b4 a0 01 64              ra = 100, jump [a3]
      :                          @423 [@dyn 50]
  6085: 33 08 01                 a1 = 0x1
  6088: 52 07 c3                 jump @419 if a0 != 0
      :                          @424
  6091: 82 17 10                 a0 = u64 [sp + 0x10]
  6094: 9a 77                    a0 = -a0
  6096: 7b 17 38                 u64 [sp + 0x38] = a0
  6099: 33 05 ff                 s0 = 0xffffffffffffffff
  6102: 01                       fallthrough
      :                          @425
  6103: 82 17 38                 a0 = u64 [sp + 0x38]
  6106: c8 57 07                 a0 = a0 + s0
  6109: 51 17 ff 42              jump @432 if a0 == 4294967295
      :                          @426
  6113: 82 69 20                 a2 = u64 [s1 + 0x20]
  6116: 82 17 48                 a0 = u64 [sp + 0x48]
  6119: 82 18 40                 a1 = u64 [sp + 0x40]
  6122: b4 90 01 66              ra = 102, jump [a2]
      :                          @427 [@dyn 51]
  6126: 95 55 01                 s0 = s0 + 0x1
  6129: 51 07 e6                 jump @425 if a0 == 0
      :                          @428
  6132: 28 37                    jump @433
      :                          @429
  6134: 82 6a 18                 a3 = u64 [s1 + 0x18]
  6137: 82 17 48                 a0 = u64 [sp + 0x48]
  6140: 82 18 18                 a1 = u64 [sp + 0x18]
  6143: 82 19 20                 a2 = u64 [sp + 0x20]
  6146: b4 a0 01 68              ra = 104, jump [a3]
      :                          @430 [@dyn 52]
  6150: 33 08 01                 a1 = 0x1
  6153: 52 07 82                 jump @419 if a0 != 0
      :                          @431
  6156: 33 08                    a1 = 0
  6158: 82 17 10                 a0 = u64 [sp + 0x10]
  6161: 82 19 08                 a2 = u64 [sp + 0x8]
  6164: 7a 79 30                 u32 [a0 + 0x30] = a2
  6167: 82 19                    a2 = u64 [sp]
  6169: 78 79 38                 u8 [a0 + 0x38] = a2
  6172: 28 6f ff                 jump @419
      :                          @432
  6175: 82 15 10                 s0 = u64 [sp + 0x10]
  6178: 82 17 10                 a0 = u64 [sp + 0x10]
  6181: d8 75 08                 a1 = s0 <u a0
  6184: 28 63 ff                 jump @419
      :                          @433
  6187: 82 17 10                 a0 = u64 [sp + 0x10]
  6190: d8 75 08                 a1 = s0 <u a0
  6193: 28 5a ff                 jump @419
      :                          @434
  6196: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  6199: 7b 10 20                 u64 [sp + 0x20] = ra
  6202: 7b 15 18                 u64 [sp + 0x18] = s0
  6205: 7b 16 10                 u64 [sp + 0x10] = s1
  6208: 83 9c                    i32 a5 = a2 + 0
  6210: 33 02 00 00 11           t0 = 0x110000
  6215: 64 a6                    s1 = a3
  6217: 64 85                    s0 = a1
  6219: 64 7a                    a3 = a0
  6221: aa 2c 20                 jump @437 if a5 == t0
      :                          @435
  6224: 82 5c 20                 a5 = u64 [s0 + 0x20]
  6227: 64 a7                    a0 = a3
  6229: 64 98                    a1 = a2
  6231: 7b 1b 08                 u64 [sp + 0x8] = a4
  6234: 7b 1a                    u64 [sp] = a3
  6236: b4 c0 01 6a              ra = 106, jump [a5]
      :                          @436 [@dyn 53]
  6240: 82 1a                    a3 = u64 [sp]
  6242: 82 1b 08                 a4 = u64 [sp + 0x8]
  6245: 64 78                    a1 = a0
  6247: 33 07 01                 a0 = 0x1
  6250: 52 08 20                 jump @440 if a1 != 0
      :                          @437
  6253: 51 06 1a                 jump @439 if s1 == 0
      :                          @438
  6256: 82 5c 18                 a5 = u64 [s0 + 0x18]
  6259: 64 a7                    a0 = a3
  6261: 64 68                    a1 = s1
  6263: 64 b9                    a2 = a4
  6265: 82 10 20                 ra = u64 [sp + 0x20]
  6268: 82 15 18                 s0 = u64 [sp + 0x18]
  6271: 82 16 10                 s1 = u64 [sp + 0x10]
  6274: 95 11 28                 sp = sp + 0x28
  6277: 32 0c                    jump [a5]
      :                          @439
  6279: 33 07                    a0 = 0
  6281: 01                       fallthrough
      :                          @440
  6282: 82 10 20                 ra = u64 [sp + 0x20]
  6285: 82 15 18                 s0 = u64 [sp + 0x18]
  6288: 82 16 10                 s1 = u64 [sp + 0x10]
  6291: 95 11 28                 sp = sp + 0x28
  6294: 32 00                    ret
      :                          @441
  6296: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  6300: 7b 10 80 00              u64 [sp + 0x80] = ra
  6304: 7b 15 78                 u64 [sp + 0x78] = s0
  6307: 7b 16 70                 u64 [sp + 0x70] = s1
  6310: 49 11 60 20              u64 [sp + 96] = 0x20
  6314: 33 09 03                 a2 = 0x3
  6317: 78 19 68                 u8 [sp + 0x68] = a2
  6320: 49 11 30                 u64 [sp + 48] = 0
  6323: 49 11 40                 u64 [sp + 64] = 0
  6326: 82 86 20                 s1 = u64 [a1 + 0x20]
  6329: 7b 17 50                 u64 [sp + 0x50] = a0
  6332: 33 07 00 02 01           a0 = 0x10200
  6337: 7b 17 58                 u64 [sp + 0x58] = a0
  6340: 51 06 06 01              jump @463 if s1 == 0
      :                          @442
  6344: 82 87 28                 a0 = u64 [a1 + 0x28]
  6347: 51 07 73 01              jump @473 if a0 == 0
      :                          @443
  6351: 33 09                    a2 = 0
  6353: 82 85                    s0 = u64 [a1]
  6355: 7b 18 08                 u64 [sp + 0x8] = a1
  6358: 82 88 10                 a1 = u64 [a1 + 0x10]
  6361: 7b 18 18                 u64 [sp + 0x18] = a1
  6364: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  6367: 97 88 03                 a1 = a1 << 0x3
  6370: 98 88 03                 a1 = a1 >> 0x3
  6373: 95 88 01                 a1 = a1 + 0x1
  6376: 7b 18                    u64 [sp] = a1
  6378: 95 55 08                 s0 = s0 + 0x8
  6381: 96 78 38                 a1 = a0 * 0x38
  6384: 95 66 18                 s1 = s1 + 0x18
  6387: 33 07 56                 a0 = 0x56
  6390: 7b 17 10                 u64 [sp + 0x10] = a0
  6393: 01                       fallthrough
      :                          @444
  6394: 7b 18 20                 u64 [sp + 0x20] = a1
  6397: 7b 19 28                 u64 [sp + 0x28] = a2
  6400: 82 59                    a2 = u64 [s0]
  6402: 51 09 17                 jump @447 if a2 == 0
      :                          @445
  6405: 82 1a 58                 a3 = u64 [sp + 0x58]
  6408: 82 17 50                 a0 = u64 [sp + 0x50]
  6411: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  6414: 82 aa 18                 a3 = u64 [a3 + 0x18]
  6417: b4 a0 01 6c              ra = 108, jump [a3]
      :                          @446 [@dyn 54]
  6421: 52 07 4e 01              jump @476 if a0 != 0
      :                          @447
  6425: 81 67 10                 a0 = i32 [s1 + 0x10]
  6428: 7a 17 60                 u32 [sp + 0x60] = a0
  6431: 7c 67 18                 a0 = u8 [s1 + 0x18]
  6434: 78 17 68                 u8 [sp + 0x68] = a0
  6437: 81 67 14                 a0 = i32 [s1 + 0x14]
  6440: 7a 17 64                 u32 [sp + 0x64] = a0
  6443: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  6446: 82 67                    a0 = u64 [s1]
  6448: 51 08 26                 jump @452 if a1 == 0
      :                          @448
  6451: 52 18 01 16              jump @450 if a1 != 1
      :                          @449
  6455: 97 77 04                 a0 = a0 << 0x4
  6458: 82 18 18                 a1 = u64 [sp + 0x18]
  6461: c8 87 07                 a0 = a0 + a1
  6464: 82 78 08                 a1 = u64 [a0 + 0x8]
  6467: 82 19 10                 a2 = u64 [sp + 0x10]
  6470: aa 98 07                 jump @451 if a1 == a2
      :                          @450
  6473: 33 08                    a1 = 0
  6475: 28 0f                    jump @453
      :                          @451
  6477: 82 77                    a0 = u64 [a0]
  6479: 82 77                    a0 = u64 [a0]
  6481: 33 08 01                 a1 = 0x1
  6484: 28 06                    jump @453
      :                          @452
  6486: 33 08 01                 a1 = 0x1
  6489: 01                       fallthrough
      :                          @453
  6490: 7b 18 30                 u64 [sp + 0x30] = a1
  6493: 7b 17 38                 u64 [sp + 0x38] = a0
  6496: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  6499: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  6502: 51 08 26                 jump @458 if a1 == 0
      :                          @454
  6505: 52 18 01 16              jump @456 if a1 != 1
      :                          @455
  6509: 97 77 04                 a0 = a0 << 0x4
  6512: 82 18 18                 a1 = u64 [sp + 0x18]
  6515: c8 87 07                 a0 = a0 + a1
  6518: 82 78 08                 a1 = u64 [a0 + 0x8]
  6521: 82 19 10                 a2 = u64 [sp + 0x10]
  6524: aa 98 07                 jump @457 if a1 == a2
      :                          @456
  6527: 33 08                    a1 = 0
  6529: 28 0f                    jump @459
      :                          @457
  6531: 82 77                    a0 = u64 [a0]
  6533: 82 77                    a0 = u64 [a0]
  6535: 33 08 01                 a1 = 0x1
  6538: 28 06                    jump @459
      :                          @458
  6540: 33 08 01                 a1 = 0x1
  6543: 01                       fallthrough
      :                          @459
  6544: 7b 18 40                 u64 [sp + 0x40] = a1
  6547: 7b 17 48                 u64 [sp + 0x48] = a0
  6550: 82 67 08                 a0 = u64 [s1 + 0x8]
  6553: 97 77 04                 a0 = a0 << 0x4
  6556: 82 18 18                 a1 = u64 [sp + 0x18]
  6559: c8 78 08                 a1 = a1 + a0
  6562: 82 87                    a0 = u64 [a1]
  6564: 82 89 08                 a2 = u64 [a1 + 0x8]
  6567: 95 18 30                 a1 = sp + 0x30
  6570: b4 90 01 6e              ra = 110, jump [a2]
      :                          @460 [@dyn 55]
  6574: 52 07 b5 00              jump @476 if a0 != 0
      :                          @461
  6578: 95 55 10                 s0 = s0 + 0x10
  6581: 82 18 20                 a1 = u64 [sp + 0x20]
  6584: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  6587: 95 66 38                 s1 = s1 + 0x38
  6590: 82 19 28                 a2 = u64 [sp + 0x28]
  6593: 95 99 01                 a2 = a2 + 0x1
  6596: 52 08 36 ff              jump @444 if a1 != 0
      :                          @462
  6600: 28 69                    jump @471
      :                          @463
  6602: 82 87 18                 a0 = u64 [a1 + 0x18]
  6605: 51 07 71                 jump @473 if a0 == 0
      :                          @464
  6608: 82 85 10                 s0 = u64 [a1 + 0x10]
  6611: 33 0a                    a3 = 0
  6613: 97 79 04                 a2 = a0 << 0x4
  6616: c8 59 09                 a2 = a2 + s0
  6619: 7b 19 20                 u64 [sp + 0x20] = a2
  6622: 7b 18 08                 u64 [sp + 0x8] = a1
  6625: 82 86                    s1 = u64 [a1]
  6627: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  6630: 97 77 04                 a0 = a0 << 0x4
  6633: 98 77 04                 a0 = a0 >> 0x4
  6636: 95 77 01                 a0 = a0 + 0x1
  6639: 7b 17                    u64 [sp] = a0
  6641: 95 66 08                 s1 = s1 + 0x8
  6644: 01                       fallthrough
      :                          @465
  6645: 7b 1a 28                 u64 [sp + 0x28] = a3
  6648: 82 69                    a2 = u64 [s1]
  6650: 51 09 16                 jump @468 if a2 == 0
      :                          @466
  6653: 82 1a 58                 a3 = u64 [sp + 0x58]
  6656: 82 17 50                 a0 = u64 [sp + 0x50]
  6659: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  6662: 82 aa 18                 a3 = u64 [a3 + 0x18]
  6665: b4 a0 01 70              ra = 112, jump [a3]
      :                          @467 [@dyn 56]
  6669: 52 07 56                 jump @476 if a0 != 0
      :                          @468
  6672: 82 57                    a0 = u64 [s0]
  6674: 82 59 08                 a2 = u64 [s0 + 0x8]
  6677: 95 18 30                 a1 = sp + 0x30
  6680: b4 90 01 72              ra = 114, jump [a2]
      :                          @469 [@dyn 57]
  6684: 52 07 47                 jump @476 if a0 != 0
      :                          @470
  6687: 95 66 10                 s1 = s1 + 0x10
  6690: 95 55 10                 s0 = s0 + 0x10
  6693: 82 1a 28                 a3 = u64 [sp + 0x28]
  6696: 95 aa 01                 a3 = a3 + 0x1
  6699: 82 17 20                 a0 = u64 [sp + 0x20]
  6702: ab 75 c7                 jump @465 if s0 != a0
      :                          @471
  6705: 82 18 08                 a1 = u64 [sp + 0x8]
  6708: 82 1a                    a3 = u64 [sp]
  6710: 82 87 08                 a0 = u64 [a1 + 0x8]
  6713: ac 7a 0d                 jump @474 if a3 <u a0
      :                          @472
  6716: 28 2c                    jump @477
      :                          @473
  6718: 33 0a                    a3 = 0
  6720: 82 87 08                 a0 = u64 [a1 + 0x8]
  6723: 54 07 25                 jump @477 if a0 <=u 0
      :                          @474
  6726: 82 87                    a0 = u64 [a1]
  6728: 97 a8 04                 a1 = a3 << 0x4
  6731: c8 87 09                 a2 = a0 + a1
  6734: 82 1a 58                 a3 = u64 [sp + 0x58]
  6737: 82 17 50                 a0 = u64 [sp + 0x50]
  6740: 82 98                    a1 = u64 [a2]
  6742: 82 99 08                 a2 = u64 [a2 + 0x8]
  6745: 82 aa 18                 a3 = u64 [a3 + 0x18]
  6748: b4 a0 01 74              ra = 116, jump [a3]
      :                          @475 [@dyn 58]
  6752: 51 07 08                 jump @477 if a0 == 0
      :                          @476
  6755: 33 07 01                 a0 = 0x1
  6758: 28 05                    jump @478
      :                          @477
  6760: 33 07                    a0 = 0
  6762: 01                       fallthrough
      :                          @478
  6763: 82 10 80 00              ra = u64 [sp + 0x80]
  6767: 82 15 78                 s0 = u64 [sp + 0x78]
  6770: 82 16 70                 s1 = u64 [sp + 0x70]
  6773: 95 11 88 00              sp = sp + 0x88
  6777: 32 00                    ret
      :                          @479 [@dyn 59]
  6779: 81 77                    a0 = i32 [a0]
  6781: 89 7a                    a3 = a0 <s 0
  6783: 85 a9 01                 a2 = a3 ^ 0x1
  6786: 97 7b 20                 a4 = a0 << 0x20
  6789: 98 bb 20                 a4 = a4 >> 0x20
  6792: 9a 77                    a0 = -a0
  6794: da ab 07                 a0 = a4 if a3 == 0
  6797: 64 8a                    a3 = a1
  6799: 64 98                    a1 = a2
  6801: 64 a9                    a2 = a3
  6803: 28 62 fa                 jump @377
