// RO data = 1666/1668 bytes
// RW data = 16/1048656 bytes
// Stack size = 1048576 bytes
// RO data = [0, 16, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 122, 61, 32, 115, 61, 32, 111, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 32, 111, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 32, 119, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 32, 119, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 8, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 18, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 21, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 54, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 86, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 70, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 103, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 38, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 109, 97, 99, 104, 105, 110, 101, 32, 110, 101, 119, 32, 105, 110, 100, 101, 120, 61, 0, 0, 0, 0, 0, 0, 248, 0, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 102, 101, 116, 99, 104, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 32, 102, 101, 116, 99, 104, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 0, 40, 1, 1, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 68, 1, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 122, 101, 114, 111, 32, 109, 61, 44, 32, 112, 97, 103, 101, 95, 105, 100, 61, 32, 122, 101, 114, 111, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 120, 1, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 135, 1, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 145, 1, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 112, 111, 107, 101, 32, 109, 61, 32, 111, 61, 32, 122, 61, 32, 112, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 0, 208, 1, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 18, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 223, 1, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 226, 1, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 229, 1, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 99, 104, 105, 108, 100, 95, 118, 109, 95, 114, 101, 103, 105, 115, 116, 101, 114, 115, 61, 0, 0, 0, 0, 0, 72, 2, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 105, 110, 118, 111, 107, 101, 32, 99, 104, 105, 108, 100, 32, 86, 77, 44, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 0, 120, 2, 1, 0, 0, 0, 0, 0, 39, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 105, 110, 118, 111, 107, 101, 32, 32, 105, 110, 118, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 32, 111, 109, 101, 103, 97, 95, 56, 61, 0, 176, 2, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 191, 2, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 206, 2, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 100, 111, 110, 101, 32, 119, 105, 116, 104, 32, 99, 104, 105, 108, 100, 32, 86, 77, 44, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 0, 0, 0, 0, 0, 0, 8, 3, 1, 0, 0, 0, 0, 0, 42, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 70, 105, 114, 115, 116, 32, 116, 105, 109, 101, 32, 115, 101, 116, 117, 112, 58, 32, 119, 105, 95, 112, 97, 121, 108, 111, 97, 100, 95, 108, 101, 110, 103, 116, 104, 61, 0, 0, 0, 0, 72, 3, 1, 0, 0, 0, 0, 0, 44, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 115, 111, 108, 105, 99, 105, 116, 32, 99, 111, 100, 101, 95, 104, 97, 115, 104, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 111, 100, 101, 95, 108, 101, 110, 103, 116, 104, 61, 0, 136, 3, 1, 0, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 170, 3, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 130, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 132, 0, 0, 0, 0, 0, 0, 0, 138, 0, 0, 0, 0, 0, 0, 0, 146, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 180, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 182, 0, 0, 0, 0, 0, 0, 0, 188, 0, 0, 0, 0, 0, 0, 0, 192, 0, 0, 0, 0, 0, 0, 0, 112, 101, 101, 107, 122, 101, 114, 111, 32, 32, 32, 32, 112, 111, 107, 101, 44, 32, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 115, 117, 99, 99, 101, 115, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 119, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 111, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 115, 116, 97, 99, 107, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 119, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 111, 95, 98, 121, 116, 101, 115]
// RW data = [75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 2915
// Code size = 9034 bytes

      :                          @0
     0: 28 ad 02 00 00           jump @44
      :                          @1
     5: 28 f7 10 00 00           jump @190
      :                          @2
    10: 28 82 13                 jump @260
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 80 89 34                 a2 = u32 [a1 + 0x34]
    24: 82 77                    a0 = u64 [a0]
    26: 84 9a 10                 a3 = a2 & 0x10
    29: 52 0a 14                 jump @6 if a3 != 0
      :                          @4
    32: 84 99 20                 a2 = a2 & 0x20
    35: 52 09 3e                 jump @9 if a2 != 0
      :                          @5
    38: 82 10 80 00              ra = u64 [sp + 0x80]
    42: 95 11 88 00              sp = sp + 0x88
    46: 28 2f 19                 jump @400
      :                          @6
    49: 82 7b                    a4 = u64 [a0]
    51: 33 09 81 00              a2 = 0x81
    55: 95 17 7f                 a0 = sp + 0x7f
    58: 33 02 57                 t0 = 0x57
    61: 01                       fallthrough
      :                          @7
    62: 64 9c                    a5 = a2
    64: 98 ba 04                 a3 = a4 >> 0x4
    67: 84 bb 0f                 a4 = a4 & 0xf
    70: 88 b3 0a                 t1 = a4 <u 0xa
    73: 33 09 30                 a2 = 0x30
    76: da 32 09                 a2 = t0 if t1 == 0
    79: be b9 09                 i32 a2 = a2 + a4
    82: 78 79                    u8 [a0] = a2
    84: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
    87: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
    90: 64 ab                    a4 = a3
    92: 52 0a e2                 jump @7 if a3 != 0
      :                          @8
    95: 28 30                    jump @11
      :                          @9
    97: 82 7b                    a4 = u64 [a0]
    99: 33 09 81 00              a2 = 0x81
   103: 95 17 7f                 a0 = sp + 0x7f
   106: 33 02 37                 t0 = 0x37
   109: 01                       fallthrough
      :                          @10
   110: 64 9c                    a5 = a2
   112: 98 ba 04                 a3 = a4 >> 0x4
   115: 84 bb 0f                 a4 = a4 & 0xf
   118: 88 b3 0a                 t1 = a4 <u 0xa
   121: 33 09 30                 a2 = 0x30
   124: da 32 09                 a2 = t0 if t1 == 0
   127: be b9 09                 i32 a2 = a2 + a4
   130: 78 79                    u8 [a0] = a2
   132: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   135: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   138: 64 ab                    a4 = a3
   140: 52 0a e2                 jump @10 if a3 != 0
      :                          @11
   143: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   146: 56 27 80 00 27           jump @14 if a0 >u 128
      :                          @12
   151: 9a 9b 81 00              a4 = 0x81 - a2
   155: 64 1a                    a3 = sp
   157: c8 7a 0a                 a3 = a3 + a0
   160: 33 09 02                 a2 = 0x2
   163: 64 87                    a0 = a1
   165: 33 08 56 04 01           a1 = 0x10456
   170: 50 10 04 e0 19           ra = 4, jump @410
      :                          @13 [@dyn 2]
   175: 82 10 80 00              ra = u64 [sp + 0x80]
   179: 95 11 88 00              sp = sp + 0x88
   183: 32 00                    ret
      :                          @14
   185: 00                       trap
      :                          @15 [@dyn 3]
   186: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   190: 7b 10 80 00              u64 [sp + 0x80] = ra
   194: 80 89 34                 a2 = u32 [a1 + 0x34]
   197: 84 9a 10                 a3 = a2 & 0x10
   200: 52 0a 14                 jump @18 if a3 != 0
      :                          @16
   203: 84 99 20                 a2 = a2 & 0x20
   206: 52 09 3e                 jump @21 if a2 != 0
      :                          @17
   209: 82 10 80 00              ra = u64 [sp + 0x80]
   213: 95 11 88 00              sp = sp + 0x88
   217: 28 84 18                 jump @400
      :                          @18
   220: 82 7b                    a4 = u64 [a0]
   222: 33 09 81 00              a2 = 0x81
   226: 95 17 7f                 a0 = sp + 0x7f
   229: 33 02 57                 t0 = 0x57
   232: 01                       fallthrough
      :                          @19
   233: 64 9c                    a5 = a2
   235: 98 ba 04                 a3 = a4 >> 0x4
   238: 84 bb 0f                 a4 = a4 & 0xf
   241: 88 b3 0a                 t1 = a4 <u 0xa
   244: 33 09 30                 a2 = 0x30
   247: da 32 09                 a2 = t0 if t1 == 0
   250: be b9 09                 i32 a2 = a2 + a4
   253: 78 79                    u8 [a0] = a2
   255: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   258: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   261: 64 ab                    a4 = a3
   263: 52 0a e2                 jump @19 if a3 != 0
      :                          @20
   266: 28 30                    jump @23
      :                          @21
   268: 82 7b                    a4 = u64 [a0]
   270: 33 09 81 00              a2 = 0x81
   274: 95 17 7f                 a0 = sp + 0x7f
   277: 33 02 37                 t0 = 0x37
   280: 01                       fallthrough
      :                          @22
   281: 64 9c                    a5 = a2
   283: 98 ba 04                 a3 = a4 >> 0x4
   286: 84 bb 0f                 a4 = a4 & 0xf
   289: 88 b3 0a                 t1 = a4 <u 0xa
   292: 33 09 30                 a2 = 0x30
   295: da 32 09                 a2 = t0 if t1 == 0
   298: be b9 09                 i32 a2 = a2 + a4
   301: 78 79                    u8 [a0] = a2
   303: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   306: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   309: 64 ab                    a4 = a3
   311: 52 0a e2                 jump @22 if a3 != 0
      :                          @23
   314: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   317: 56 27 80 00 27           jump @26 if a0 >u 128
      :                          @24
   322: 9a 9b 81 00              a4 = 0x81 - a2
   326: 64 1a                    a3 = sp
   328: c8 7a 0a                 a3 = a3 + a0
   331: 33 09 02                 a2 = 0x2
   334: 64 87                    a0 = a1
   336: 33 08 56 04 01           a1 = 0x10456
   341: 50 10 08 35 19           ra = 8, jump @410
      :                          @25 [@dyn 4]
   346: 82 10 80 00              ra = u64 [sp + 0x80]
   350: 95 11 88 00              sp = sp + 0x88
   354: 32 00                    ret
      :                          @26
   356: 00                       trap
      :                          @27 [@dyn 5]
   357: 95 11 d0                 sp = sp + 0xffffffffffffffd0
   360: 7b 10 28                 u64 [sp + 0x28] = ra
   363: 7b 15 20                 u64 [sp + 0x20] = s0
   366: 7b 16 18                 u64 [sp + 0x18] = s1
   369: 64 85                    s0 = a1
   371: 82 88 28                 a1 = u64 [a1 + 0x28]
   374: 82 5a 20                 a3 = u64 [s0 + 0x20]
   377: 82 8b 18                 a4 = u64 [a1 + 0x18]
   380: 64 76                    s1 = a0
   382: 33 08 08 04 01           a1 = 0x10408
   387: 33 09 01                 a2 = 0x1
   390: 64 a7                    a0 = a3
   392: b4 b0 01 0c              ra = 12, jump [a4]
      :                          @28 [@dyn 6]
   396: 7b 15                    u64 [sp] = s0
   398: 78 17 08                 u8 [sp + 0x8] = a0
   401: 46 11 09                 u8 [sp + 9] = 0
   404: 7b 16 10                 u64 [sp + 0x10] = s1
   407: 33 05 02                 s0 = 0x2
   410: 64 17                    a0 = sp
   412: 95 18 10                 a1 = sp + 0x10
   415: 33 09 02                 a2 = 0x2
   418: 50 10 0e cb 1f           ra = 14, jump @554
      :                          @29 [@dyn 7]
   423: 95 67 08                 a0 = s1 + 0x8
   426: 7b 17 10                 u64 [sp + 0x10] = a0
   429: 64 17                    a0 = sp
   431: 95 18 10                 a1 = sp + 0x10
   434: 64 59                    a2 = s0
   436: 50 10 10 b9 1f           ra = 16, jump @554
      :                          @30 [@dyn 8]
   441: 95 67 10                 a0 = s1 + 0x10
   444: 7b 17 10                 u64 [sp + 0x10] = a0
   447: 64 17                    a0 = sp
   449: 95 18 10                 a1 = sp + 0x10
   452: 64 59                    a2 = s0
   454: 50 10 12 a7 1f           ra = 18, jump @554
      :                          @31 [@dyn 9]
   459: 95 67 18                 a0 = s1 + 0x18
   462: 7b 17 10                 u64 [sp + 0x10] = a0
   465: 64 17                    a0 = sp
   467: 95 18 10                 a1 = sp + 0x10
   470: 64 59                    a2 = s0
   472: 50 10 14 95 1f           ra = 20, jump @554
      :                          @32 [@dyn 10]
   477: 95 67 20                 a0 = s1 + 0x20
   480: 7b 17 10                 u64 [sp + 0x10] = a0
   483: 64 17                    a0 = sp
   485: 95 18 10                 a1 = sp + 0x10
   488: 64 59                    a2 = s0
   490: 50 10 16 83 1f           ra = 22, jump @554
      :                          @33 [@dyn 11]
   495: 95 67 28                 a0 = s1 + 0x28
   498: 7b 17 10                 u64 [sp + 0x10] = a0
   501: 64 17                    a0 = sp
   503: 95 18 10                 a1 = sp + 0x10
   506: 64 59                    a2 = s0
   508: 50 10 18 71 1f           ra = 24, jump @554
      :                          @34 [@dyn 12]
   513: 95 67 30                 a0 = s1 + 0x30
   516: 7b 17 10                 u64 [sp + 0x10] = a0
   519: 64 17                    a0 = sp
   521: 95 18 10                 a1 = sp + 0x10
   524: 64 59                    a2 = s0
   526: 50 10 1a 5f 1f           ra = 26, jump @554
      :                          @35 [@dyn 13]
   531: 95 67 38                 a0 = s1 + 0x38
   534: 7b 17 10                 u64 [sp + 0x10] = a0
   537: 64 17                    a0 = sp
   539: 95 18 10                 a1 = sp + 0x10
   542: 64 59                    a2 = s0
   544: 50 10 1c 4d 1f           ra = 28, jump @554
      :                          @36 [@dyn 14]
   549: 95 67 40                 a0 = s1 + 0x40
   552: 7b 17 10                 u64 [sp + 0x10] = a0
   555: 64 17                    a0 = sp
   557: 95 18 10                 a1 = sp + 0x10
   560: 64 59                    a2 = s0
   562: 50 10 1e 3b 1f           ra = 30, jump @554
      :                          @37 [@dyn 15]
   567: 95 67 48                 a0 = s1 + 0x48
   570: 7b 17 10                 u64 [sp + 0x10] = a0
   573: 64 17                    a0 = sp
   575: 95 18 10                 a1 = sp + 0x10
   578: 64 59                    a2 = s0
   580: 50 10 20 29 1f           ra = 32, jump @554
      :                          @38 [@dyn 16]
   585: 95 67 50                 a0 = s1 + 0x50
   588: 7b 17 10                 u64 [sp + 0x10] = a0
   591: 64 17                    a0 = sp
   593: 95 18 10                 a1 = sp + 0x10
   596: 64 59                    a2 = s0
   598: 50 10 22 17 1f           ra = 34, jump @554
      :                          @39 [@dyn 17]
   603: 95 67 58                 a0 = s1 + 0x58
   606: 7b 17 10                 u64 [sp + 0x10] = a0
   609: 64 17                    a0 = sp
   611: 95 18 10                 a1 = sp + 0x10
   614: 64 59                    a2 = s0
   616: 50 10 24 05 1f           ra = 36, jump @554
      :                          @40 [@dyn 18]
   621: 95 67 60                 a0 = s1 + 0x60
   624: 7b 17 10                 u64 [sp + 0x10] = a0
   627: 64 17                    a0 = sp
   629: 95 18 10                 a1 = sp + 0x10
   632: 64 59                    a2 = s0
   634: 50 10 26 f3 1e           ra = 38, jump @554
      :                          @41 [@dyn 19]
   639: 33 07 01                 a0 = 0x1
   642: 7c 18 08                 a1 = u8 [sp + 0x8]
   645: 52 08 1a                 jump @43 if a1 != 0
      :                          @42
   648: 82 17                    a0 = u64 [sp]
   650: 82 78 28                 a1 = u64 [a0 + 0x28]
   653: 82 77 20                 a0 = u64 [a0 + 0x20]
   656: 82 8a 18                 a3 = u64 [a1 + 0x18]
   659: 33 08 55 04 01           a1 = 0x10455
   664: 33 09 01                 a2 = 0x1
   667: b4 a0 01 28              ra = 40, jump [a3]
      :                          @43 [@dyn 20]
   671: 82 10 28                 ra = u64 [sp + 0x28]
   674: 82 15 20                 s0 = u64 [sp + 0x20]
   677: 82 16 18                 s1 = u64 [sp + 0x18]
   680: 95 11 30                 sp = sp + 0x30
   683: 32 00                    ret
      :                          @44 [export #0: 'refine']
   685: 95 11 08 f8              sp = sp + 0xfffffffffffff808
   689: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
   693: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
   697: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
   701: 95 11 b0 b4 fe           sp = sp + 0xfffffffffffeb4b0
   706: 33 0c 00 00 01           a5 = 0x10000
   711: 55 18 04 09              jump @46 if a1 >=u 4
      :                          @45
   715: 33 06                    s1 = 0
   717: 28 5a 01                 jump @68
      :                          @46
   720: 95 86 fc                 s1 = a1 + 0xfffffffffffffffc
   723: 51 06 54 01              jump @68 if s1 == 0
      :                          @47
   727: 95 7a 04                 a3 = a0 + 0x4
   730: 7d a8                    a1 = i8 [a3]
   732: 80 79                    a2 = u32 [a0]
   734: 33 05 01                 s0 = 0x1
   737: 59 08 3d                 jump @56 if a1 >=s 0
      :                          @48
   740: 84 87 ff 00              a0 = a1 & 0xff
   744: 33 05 02                 s0 = 0x2
   747: 53 27 c0 00 2d           jump @54 if a0 <u 192
      :                          @49
   752: 33 05 03                 s0 = 0x3
   755: 53 27 e0 00 25           jump @54 if a0 <u 224
      :                          @50
   760: 33 05 04                 s0 = 0x4
   763: 53 27 f0 00 1d           jump @54 if a0 <u 240
      :                          @51
   768: 33 05 05                 s0 = 0x5
   771: 53 27 f8 00 15           jump @54 if a0 <u 248
      :                          @52
   776: 33 05 06                 s0 = 0x6
   779: 53 27 fc 00 0d           jump @54 if a0 <u 252
      :                          @53
   784: 88 77 fe 00              a0 = a0 <u 0xfe
   788: 9a 75 08                 s0 = 0x8 - a0
   791: 01                       fallthrough
      :                          @54
   792: ae 56 06                 jump @56 if s1 >=u s0
      :                          @55
   795: 28 e0 0d                 jump @189
      :                          @56
   798: 7b 19 70                 u64 [sp + 0x70] = a2
   801: 7b 1a 68                 u64 [sp + 0x68] = a3
   804: 64 a7                    a0 = a3
   806: 64 58                    a1 = s0
   808: 50 10 2a 84 1f           ra = 42, jump @571
      :                          @57 [@dyn 21]
   813: 64 58                    a1 = s0
   815: 64 75                    s0 = a0
   817: e4 86 07                 a0 = maxu(s1, a1)
   820: 7b 18 60                 u64 [sp + 0x60] = a1
   823: c9 87 07                 a0 = a0 - a1
   826: d8 57 08                 a1 = a0 <u s0
   829: e4 57 07                 a0 = maxu(a0, s0)
   832: c9 57 07                 a0 = a0 - s0
   835: 88 77 20                 a0 = a0 <u 0x20
   838: d4 87 07                 a0 = a0 | a1
   841: 52 07 d6 00              jump @67 if a0 != 0
      :                          @58
   845: 7b 15 78                 u64 [sp + 0x78] = s0
   848: 33 07 11 00 03           a0 = 0x30011
   853: 33 09 24                 a2 = 0x24
   856: 33 0a 03                 a3 = 0x3
   859: 7b 17 58                 u64 [sp + 0x58] = a0
   862: 33 08                    a1 = 0
   864: 33 0b                    a4 = 0
   866: 33 0c                    a5 = 0
   868: 0a 12                    ecalli 18 // 'fetch'
   870: 01                       fallthrough
      :                          @59
   871: 95 18 d0 50 01           a1 = sp + 0x150d0
   876: 33 06 24                 s1 = 0x24
   879: 55 15 08 6e              jump @64 if s0 >=u 8
      :                          @60
   883: 95 17 78                 a0 = sp + 0x78
   886: 7b 87 60 01              u64 [a1 + 0x160] = a0
   890: 33 07 06                 a0 = 0x6
   893: 7b 87 68 01              u64 [a1 + 0x168] = a0
   897: 33 07 78 03 01           a0 = 0x10378
   902: 7b 17 80 00              u64 [sp + 0x80] = a0
   906: 49 21 88 00 01           u64 [sp + 136] = 0x1
   911: 49 21 a0 00              u64 [sp + 160] = 0
   915: 95 18 30 52 01           a1 = sp + 0x15230
   920: 7b 18 90 00              u64 [sp + 0x90] = a1
   924: 49 21 98 00 01           u64 [sp + 152] = 0x1
   929: 95 17 c8 40 01           a0 = sp + 0x140c8
   934: 95 18 80 00              a1 = sp + 0x80
   938: 95 15 80 40 01           s0 = sp + 0x14080
   943: 50 10 2c 23 12           ra = 44, jump @317
      :                          @61 [@dyn 22]
   948: 82 5a 50                 a3 = u64 [s0 + 0x50]
   951: 82 5b 58                 a4 = u64 [s0 + 0x58]
   954: 82 55 48                 s0 = u64 [s0 + 0x48]
   957: 33 07 02                 a0 = 0x2
   960: 33 08                    a1 = 0
   962: 33 09                    a2 = 0
   964: 7b 1a 70                 u64 [sp + 0x70] = a3
   967: 33 00 2e                 ra = 0x2e
   970: 0a 64                    ecalli 100 // 'log'
   972: 01                       fallthrough
      :                          @62 [@dyn 23]
   973: 95 58 ff ff ef           a1 = s0 + 0xffffffffffefffff
   978: 55 38 00 00 f0 73        jump @69 if a1 >=u 4293918720
      :                          @63
   984: 82 1c 58                 a5 = u64 [sp + 0x58]
   987: 28 4c                    jump @68
      :                          @64
   989: 82 17 68                 a0 = u64 [sp + 0x68]
   992: 82 18 60                 a1 = u64 [sp + 0x60]
   995: c8 87 07                 a0 = a0 + a1
   998: 80 75                    s0 = u32 [a0]
  1000: 80 78 04                 a1 = u32 [a0 + 0x4]
  1003: 7b 18 68                 u64 [sp + 0x68] = a1
  1006: 80 77 08                 a0 = u32 [a0 + 0x8]
  1009: 7b 17 60                 u64 [sp + 0x60] = a0
  1012: 95 17 80 00              a0 = sp + 0x80
  1016: 33 09 00 40 01           a2 = 0x14000
  1021: 33 08                    a1 = 0
  1023: 50 10 30 ff 14           ra = 48, jump @385
      :                          @65 [@dyn 24]
  1028: 95 19 80 00              a2 = sp + 0x80
  1032: 33 0b 00 40 01           a4 = 0x14000
  1037: 82 17 70                 a0 = u64 [sp + 0x70]
  1040: 82 18 58                 a1 = u64 [sp + 0x58]
  1043: 33 0a                    a3 = 0
  1045: 0a 11                    ecalli 17 // 'historical_lookup'
  1047: 01                       fallthrough
      :                          @66
  1048: 95 78 01                 a1 = a0 + 0x1
  1051: 55 18 04 5c              jump @75 if a1 >=u 4
      :                          @67
  1055: 33 06                    s1 = 0
  1057: 33 0c 00 00 01           a5 = 0x10000
  1062: 01                       fallthrough
      :                          @68
  1063: 64 c7                    a0 = a5
  1065: 64 68                    a1 = s1
  1067: 33 09 50 4b 01           a2 = 0x14b50
  1072: c8 91 01                 sp = sp + a2
  1075: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  1079: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  1083: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  1087: 95 11 f8 07              sp = sp + 0x7f8
  1091: 32 00                    ret
      :                          @69
  1093: 33 07 40 00 03           a0 = 0x30040
  1098: 95 77 00 00 10           a0 = a0 + 0x100000
  1103: 33 0c 11 00 03           a5 = 0x30011
  1108: 82 16 70                 s1 = u64 [sp + 0x70]
  1111: 01                       fallthrough
      :                          @70
  1112: 82 78                    a1 = u64 [a0]
  1114: c9 87 09                 a2 = a0 - a1
  1117: ab 69 15                 jump @74 if a2 != s1
      :                          @71
  1120: c9 58 09                 a2 = a1 - s0
  1123: 01                       fallthrough
      :                          @72
  1124: 82 7a                    a3 = u64 [a0]
  1126: ab 8a f2                 jump @70 if a3 != a1
      :                          @73
  1129: 7b 79                    u64 [a0] = a2
  1131: 33 0b                    a4 = 0
  1133: 33 06 24                 s1 = 0x24
  1136: 28 b7                    jump @68
      :                          @74
  1138: 33 06 24                 s1 = 0x24
  1141: 28 b2                    jump @68
      :                          @75
  1143: 95 78 fd                 a1 = a0 + 0xfffffffffffffffd
  1146: 53 18 03 a5              jump @67 if a1 <u 3
      :                          @76
  1150: 84 78 fe                 a1 = a0 & 0xfffffffffffffffe
  1153: 51 18 06 9e              jump @67 if a1 == 6
      :                          @77
  1157: 95 78 f8                 a1 = a0 + 0xfffffffffffffff8
  1160: 53 18 03 97              jump @67 if a1 <u 3
      :                          @78
  1164: 7c 18 82 00              a1 = u8 [sp + 0x82]
  1168: 7c 19 81 00              a2 = u8 [sp + 0x81]
  1172: 7c 1a 80 00              a3 = u8 [sp + 0x80]
  1176: 97 88 10                 a1 = a1 << 0x10
  1179: 97 99 08                 a2 = a2 << 0x8
  1182: d4 98 08                 a1 = a1 | a2
  1185: d4 a8 08                 a1 = a1 | a3
  1188: 95 79 f5                 a2 = a0 + 0xfffffffffffffff5
  1191: ac 89 78 ff              jump @67 if a2 <u a1
      :                          @79
  1195: 7c 17 85 00              a0 = u8 [sp + 0x85]
  1199: 7c 1a 84 00              a3 = u8 [sp + 0x84]
  1203: 7c 1b 83 00              a4 = u8 [sp + 0x83]
  1207: 97 77 10                 a0 = a0 << 0x10
  1210: 97 aa 08                 a3 = a3 << 0x8
  1213: d4 a7 07                 a0 = a0 | a3
  1216: d4 b7 07                 a0 = a0 | a4
  1219: c9 89 09                 a2 = a2 - a1
  1222: ac 79 59 ff              jump @67 if a2 <u a0
      :                          @80
  1226: c9 79 06                 s1 = a2 - a0
  1229: 53 16 04 52 ff           jump @67 if s1 <u 4
      :                          @81
  1234: 95 12 8b 00              t0 = sp + 0x8b
  1238: c8 28 03                 t1 = a1 + t0
  1241: c8 37 0b                 a4 = a0 + t1
  1244: 7c bc 03                 a5 = u8 [a4 + 0x3]
  1247: 7b 15 08                 u64 [sp + 0x8] = s0
  1250: 7c b5 02                 s0 = u8 [a4 + 0x2]
  1253: 7c ba                    a3 = u8 [a4]
  1255: 7c b9 01                 a2 = u8 [a4 + 0x1]
  1258: 97 cc 10                 a5 = a5 << 0x10
  1261: 97 55 08                 s0 = s0 << 0x8
  1264: d4 5c 0c                 a5 = a5 | s0
  1267: d4 c9 09                 a2 = a2 | a5
  1270: 97 99 08                 a2 = a2 << 0x8
  1273: d4 a9 0c                 a5 = a2 | a3
  1276: 95 66 fc                 s1 = s1 + 0xfffffffffffffffc
  1279: ac c6 20 ff              jump @67 if s1 <u a5
      :                          @82
  1283: 7c 19 87 00              a2 = u8 [sp + 0x87]
  1287: 7c 1a 86 00              a3 = u8 [sp + 0x86]
  1291: 97 99 08                 a2 = a2 << 0x8
  1294: 7c 16 8a 00              s1 = u8 [sp + 0x8a]
  1298: 7c 15 89 00              s0 = u8 [sp + 0x89]
  1302: d4 a9 09                 a2 = a2 | a3
  1305: 7c 1a 88 00              a3 = u8 [sp + 0x88]
  1309: 97 66 10                 s1 = s1 << 0x10
  1312: 97 55 08                 s0 = s0 << 0x8
  1315: d4 65 05                 s0 = s0 | s1
  1318: d4 5a 0a                 a3 = a3 | s0
  1321: 49 11 70 ff ff ef        u64 [sp + 112] = 0xffffffffffefffff
  1327: 95 bb 04                 a4 = a4 + 0x4
  1330: 33 04 80 40 01           t2 = 0x14080
  1335: c8 41 06                 s1 = sp + t2
  1338: 7b 69                    u64 [s1] = a2
  1340: 7b 6a 08                 u64 [s1 + 0x8] = a3
  1343: 7b 62 10                 u64 [s1 + 0x10] = t0
  1346: 7b 68 18                 u64 [s1 + 0x18] = a1
  1349: 7b 63 20                 u64 [s1 + 0x20] = t1
  1352: 7b 67 28                 u64 [s1 + 0x28] = a0
  1355: 7b 6b 30                 u64 [s1 + 0x30] = a4
  1358: 7b 6c 38                 u64 [s1 + 0x38] = a5
  1361: 7b 66 48                 u64 [s1 + 0x48] = s1
  1364: 33 08 06                 a1 = 0x6
  1367: 7b 68 50                 u64 [s1 + 0x50] = a1
  1370: 95 17 88 40 01           a0 = sp + 0x14088
  1375: 7b 67 58                 u64 [s1 + 0x58] = a0
  1378: 7b 68 60                 u64 [s1 + 0x60] = a1
  1381: 95 17 90 40 01           a0 = sp + 0x14090
  1386: 7b 67 68                 u64 [s1 + 0x68] = a0
  1389: 7b 68 70                 u64 [s1 + 0x70] = a1
  1392: 95 17 98 40 01           a0 = sp + 0x14098
  1397: 7b 67 78                 u64 [s1 + 0x78] = a0
  1400: 7b 68 80 00              u64 [s1 + 0x80] = a1
  1404: 95 17 a0 40 01           a0 = sp + 0x140a0
  1409: 7b 67 88 00              u64 [s1 + 0x88] = a0
  1413: 7b 68 90 00              u64 [s1 + 0x90] = a1
  1417: 95 17 a8 40 01           a0 = sp + 0x140a8
  1422: 7b 67 98 00              u64 [s1 + 0x98] = a0
  1426: 7b 68 a0 00              u64 [s1 + 0xa0] = a1
  1430: 95 17 b0 40 01           a0 = sp + 0x140b0
  1435: 7b 67 a8 00              u64 [s1 + 0xa8] = a0
  1439: 7b 68 b0 00              u64 [s1 + 0xb0] = a1
  1443: 95 17 b8 40 01           a0 = sp + 0x140b8
  1448: 7b 67 b8 00              u64 [s1 + 0xb8] = a0
  1452: 7b 18 58                 u64 [sp + 0x58] = a1
  1455: 7b 68 c0 00              u64 [s1 + 0xc0] = a1
  1459: 33 07 78 00 01           a0 = 0x10078
  1464: 95 16 d0 50 01           s1 = sp + 0x150d0
  1469: 7b 67 60 01              u64 [s1 + 0x160] = a0
  1473: 49 26 68 01 08           u64 [s1 + 360] = 0x8
  1478: 49 26 80 01              u64 [s1 + 384] = 0
  1482: 95 18 c8 40 01           a1 = sp + 0x140c8
  1487: 7b 68 70 01              u64 [s1 + 0x170] = a1
  1491: 49 26 78 01 08           u64 [s1 + 376] = 0x8
  1496: 95 17 58 51 01           a0 = sp + 0x15158
  1501: 95 18 30 52 01           a1 = sp + 0x15230
  1506: 50 10 32 f0 0f           ra = 50, jump @317
      :                          @83 [@dyn 25]
  1511: 82 65 90 00              s0 = u64 [s1 + 0x90]
  1515: 82 6b 98 00              a4 = u64 [s1 + 0x98]
  1519: 82 66 88 00              s1 = u64 [s1 + 0x88]
  1523: 33 07 02                 a0 = 0x2
  1526: 33 08                    a1 = 0
  1528: 33 09                    a2 = 0
  1530: 64 5a                    a3 = s0
  1532: 33 00 34                 ra = 0x34
  1535: 0a 64                    ecalli 100 // 'log'
  1537: 01                       fallthrough
      :                          @84 [@dyn 26]
  1538: 82 17 70                 a0 = u64 [sp + 0x70]
  1541: c8 67 07                 a0 = a0 + s1
  1544: 53 37 00 00 f0 25        jump @90 if a0 <u 4293918720
      :                          @85
  1550: 33 07 40 00 03           a0 = 0x30040
  1555: 95 77 00 00 10           a0 = a0 + 0x100000
  1560: 01                       fallthrough
      :                          @86
  1561: 82 78                    a1 = u64 [a0]
  1563: c9 87 09                 a2 = a0 - a1
  1566: ab 59 0f                 jump @90 if a2 != s0
      :                          @87
  1569: c9 68 09                 a2 = a1 - s1
  1572: 01                       fallthrough
      :                          @88
  1573: 82 7a                    a3 = u64 [a0]
  1575: ab 8a f2                 jump @86 if a3 != a1
      :                          @89
  1578: 7b 79                    u64 [a0] = a2
  1580: 01                       fallthrough
      :                          @90
  1581: 95 15 80 40 01           s0 = sp + 0x14080
  1586: 82 57 30                 a0 = u64 [s0 + 0x30]
  1589: 82 58 38                 a1 = u64 [s0 + 0x38]
  1592: 33 09                    a2 = 0
  1594: 0a 14                    ecalli 20 // 'machine'
  1596: 7b 57 40                 u64 [s0 + 0x40] = a0
  1599: 95 17 c0 40 01           a0 = sp + 0x140c0
  1604: 95 16 d0 50 01           s1 = sp + 0x150d0
  1609: 7b 67 88 00              u64 [s1 + 0x88] = a0
  1613: 82 17 58                 a0 = u64 [sp + 0x58]
  1616: 7b 67 90 00              u64 [s1 + 0x90] = a0
  1620: 33 07 18 01 01           a0 = 0x10118
  1625: 7b 57 48                 u64 [s0 + 0x48] = a0
  1628: 95 17 58 51 01           a0 = sp + 0x15158
  1633: 7b 57 58                 u64 [s0 + 0x58] = a0
  1636: 49 15 50 01              u64 [s0 + 80] = 0x1
  1640: 49 15 60 01              u64 [s0 + 96] = 0x1
  1644: 49 15 68                 u64 [s0 + 104] = 0
  1647: 95 17 30 52 01           a0 = sp + 0x15230
  1652: 95 18 c8 40 01           a1 = sp + 0x140c8
  1657: 50 10 36 59 0f           ra = 54, jump @317
      :                          @91 [@dyn 27]
  1662: 82 65 68 01              s0 = u64 [s1 + 0x168]
  1666: 82 6b 70 01              a4 = u64 [s1 + 0x170]
  1670: 82 66 60 01              s1 = u64 [s1 + 0x160]
  1674: 33 07 02                 a0 = 0x2
  1677: 33 08                    a1 = 0
  1679: 33 09                    a2 = 0
  1681: 64 5a                    a3 = s0
  1683: 33 00 38                 ra = 0x38
  1686: 0a 64                    ecalli 100 // 'log'
  1688: 01                       fallthrough
      :                          @92 [@dyn 28]
  1689: 82 17 70                 a0 = u64 [sp + 0x70]
  1692: c8 67 07                 a0 = a0 + s1
  1695: 53 37 00 00 f0 25        jump @98 if a0 <u 4293918720
      :                          @93
  1701: 33 07 40 00 03           a0 = 0x30040
  1706: 95 77 00 00 10           a0 = a0 + 0x100000
  1711: 01                       fallthrough
      :                          @94
  1712: 82 78                    a1 = u64 [a0]
  1714: c9 87 09                 a2 = a0 - a1
  1717: ab 59 0f                 jump @98 if a2 != s0
      :                          @95
  1720: c9 68 09                 a2 = a1 - s1
  1723: 01                       fallthrough
      :                          @96
  1724: 82 7a                    a3 = u64 [a0]
  1726: ab 8a f2                 jump @94 if a3 != a1
      :                          @97
  1729: 7b 79                    u64 [a0] = a2
  1731: 01                       fallthrough
      :                          @98
  1732: 95 19 80 40 01           a2 = sp + 0x14080
  1737: 82 97                    a0 = u64 [a2]
  1739: 7b 17 48                 u64 [sp + 0x48] = a0
  1742: 82 97 08                 a0 = u64 [a2 + 0x8]
  1745: 7b 17 40                 u64 [sp + 0x40] = a0
  1748: 82 97 10                 a0 = u64 [a2 + 0x10]
  1751: 7b 17 38                 u64 [sp + 0x38] = a0
  1754: 82 95 18                 s0 = u64 [a2 + 0x18]
  1757: 82 98 20                 a1 = u64 [a2 + 0x20]
  1760: 7b 18 30                 u64 [sp + 0x30] = a1
  1763: 80 97 40                 a0 = u32 [a2 + 0x40]
  1766: 82 96 28                 s1 = u64 [a2 + 0x28]
  1769: 49 11 50 ff 0f           u64 [sp + 80] = 0xfff
  1774: 95 59 ff 0f              a2 = s0 + 0xfff
  1778: 98 99 0c                 a2 = a2 >> 0xc
  1781: 33 08 10                 a1 = 0x10
  1784: 7b 17 58                 u64 [sp + 0x58] = a0
  1787: 0a 17                    ecalli 23 // 'zero'
  1789: 01                       fallthrough
      :                          @99
  1790: 51 07 17                 jump @101 if a0 == 0
      :                          @100
  1793: 33 0a 44 06 01           a3 = 0x10644
  1798: 33 07 02                 a0 = 0x2
  1801: 33 0b 3e                 a4 = 0x3e
  1804: 33 08                    a1 = 0
  1806: 33 09                    a2 = 0
  1808: 0a 64                    ecalli 100 // 'log'
  1810: 28 e0 00                 jump @114
      :                          @101
  1813: 7b 16 28                 u64 [sp + 0x28] = s1
  1816: 82 17 50                 a0 = u64 [sp + 0x50]
  1819: c8 67 07                 a0 = a0 + s1
  1822: 98 77 0c                 a0 = a0 >> 0xc
  1825: 82 19 48                 a2 = u64 [sp + 0x48]
  1828: c8 79 09                 a2 = a2 + a0
  1831: 7b 15 48                 u64 [sp + 0x48] = s0
  1834: 95 57 ff ff 00           a0 = s0 + 0xffff
  1839: 84 77 00 00 ff           a0 = a0 & 0xffffffffffff0000
  1844: 95 75 00 00 02           s0 = a0 + 0x20000
  1849: 98 58 0c                 a1 = s0 >> 0xc
  1852: 82 17 58                 a0 = u64 [sp + 0x58]
  1855: 0a 17                    ecalli 23 // 'zero'
  1857: 01                       fallthrough
      :                          @102
  1858: 51 07 17                 jump @104 if a0 == 0
      :                          @103
  1861: 33 0a 06 06 01           a3 = 0x10606
  1866: 33 07 02                 a0 = 0x2
  1869: 33 0b 3e                 a4 = 0x3e
  1872: 33 08                    a1 = 0
  1874: 33 09                    a2 = 0
  1876: 0a 64                    ecalli 100 // 'log'
  1878: 28 9c 00                 jump @114
      :                          @104
  1881: 82 16 50                 s1 = u64 [sp + 0x50]
  1884: 82 17 40                 a0 = u64 [sp + 0x40]
  1887: c8 76 06                 s1 = s1 + a0
  1890: 98 69 0c                 a2 = s1 >> 0xc
  1893: 84 67 00 f0              a0 = s1 & 0xfffffffffffff000
  1897: 14 08 00 00 fe fe 00 00 00 00 a1 = 0xfefe0000
  1907: c9 78 08                 a1 = a1 - a0
  1910: 98 88 0c                 a1 = a1 >> 0xc
  1913: 82 17 58                 a0 = u64 [sp + 0x58]
  1916: 0a 17                    ecalli 23 // 'zero'
  1918: 01                       fallthrough
      :                          @105
  1919: 51 07 16                 jump @107 if a0 == 0
      :                          @106
  1922: 33 0a ca 05 01           a3 = 0x105ca
  1927: 33 07 02                 a0 = 0x2
  1930: 33 0b 3c                 a4 = 0x3c
  1933: 33 08                    a1 = 0
  1935: 33 09                    a2 = 0
  1937: 0a 64                    ecalli 100 // 'log'
  1939: 28 5f                    jump @114
      :                          @107
  1941: 33 09 00 00 01           a2 = 0x10000
  1946: 82 17 58                 a0 = u64 [sp + 0x58]
  1949: 82 18 38                 a1 = u64 [sp + 0x38]
  1952: 82 1a 48                 a3 = u64 [sp + 0x48]
  1955: 0a 16                    ecalli 22 // 'poke'
  1957: 01                       fallthrough
      :                          @108
  1958: 51 07 16                 jump @110 if a0 == 0
      :                          @109
  1961: 33 0a 8c 05 01           a3 = 0x1058c
  1966: 33 07 02                 a0 = 0x2
  1969: 33 0b 3e                 a4 = 0x3e
  1972: 33 08                    a1 = 0
  1974: 33 09                    a2 = 0
  1976: 0a 64                    ecalli 100 // 'log'
  1978: 28 38                    jump @114
      :                          @110
  1980: 82 17 58                 a0 = u64 [sp + 0x58]
  1983: 82 18 30                 a1 = u64 [sp + 0x30]
  1986: 64 59                    a2 = s0
  1988: 82 1a 28                 a3 = u64 [sp + 0x28]
  1991: 0a 16                    ecalli 22 // 'poke'
  1993: 01                       fallthrough
      :                          @111
  1994: 51 07 16                 jump @113 if a0 == 0
      :                          @112
  1997: 33 0a 4e 05 01           a3 = 0x1054e
  2002: 33 07 02                 a0 = 0x2
  2005: 33 0b 3e                 a4 = 0x3e
  2008: 33 08                    a1 = 0
  2010: 33 09                    a2 = 0
  2012: 0a 64                    ecalli 100 // 'log'
  2014: 28 14                    jump @114
      :                          @113
  2016: 33 0a 20 05 01           a3 = 0x10520
  2021: 33 07 02                 a0 = 0x2
  2024: 33 0b 2e                 a4 = 0x2e
  2027: 33 08                    a1 = 0
  2029: 33 09                    a2 = 0
  2031: 0a 64                    ecalli 100 // 'log'
  2033: 01                       fallthrough
      :                          @114
  2034: 33 05 08 10              s0 = 0x1008
  2038: 95 17 c8 40 01           a0 = sp + 0x140c8
  2043: 33 08                    a1 = 0
  2045: 33 09 08 10              a2 = 0x1008
  2049: 50 10 3a fd 10           ra = 58, jump @385
      :                          @115 [@dyn 29]
  2054: 95 17 d0 50 01           a0 = sp + 0x150d0
  2059: 49 07                    u64 [a0 + 0] = 0
  2061: 95 17 c8 40 01           a0 = sp + 0x140c8
  2066: 33 0a 06                 a3 = 0x6
  2069: 33 08                    a1 = 0
  2071: 7b 15 30                 u64 [sp + 0x30] = s0
  2074: 64 59                    a2 = s0
  2076: 33 0b                    a4 = 0
  2078: 33 0c                    a5 = 0
  2080: 0a 12                    ecalli 18 // 'fetch'
  2082: 01                       fallthrough
      :                          @116
  2083: 95 18 d0 50 01           a1 = sp + 0x150d0
  2088: 7b 87 18                 u64 [a1 + 0x18] = a0
  2091: 33 0a                    a3 = 0
  2093: 51 17 ff ad 02           jump @143 if a0 == 4294967295
      :                          @117
  2098: 33 07 06                 a0 = 0x6
  2101: 7b 17 58                 u64 [sp + 0x58] = a0
  2104: 33 07 58 01 01           a0 = 0x10158
  2109: 7b 17 28                 u64 [sp + 0x28] = a0
  2112: 33 07 a0 01 01           a0 = 0x101a0
  2117: 7b 17 20                 u64 [sp + 0x20] = a0
  2120: 33 07 00 00 01           a0 = 0x10000
  2125: 7b 17 18                 u64 [sp + 0x18] = a0
  2128: 33 06 40 00 03           s1 = 0x30040
  2133: 95 66 00 00 10           s1 = s1 + 0x100000
  2138: 33 07 f8 01 01           a0 = 0x101f8
  2143: 7b 17 10                 u64 [sp + 0x10] = a0
  2146: 28 3c                    jump @120
      :                          @118
  2148: 95 17 d0 50 01           a0 = sp + 0x150d0
  2153: 82 7b                    a4 = u64 [a0]
  2155: 95 bb 01                 a4 = a4 + 0x1
  2158: 7b 7b                    u64 [a0] = a4
  2160: 95 17 c8 40 01           a0 = sp + 0x140c8
  2165: 33 0a 06                 a3 = 0x6
  2168: 33 08                    a1 = 0
  2170: 82 19 30                 a2 = u64 [sp + 0x30]
  2173: 33 0c                    a5 = 0
  2175: 0a 12                    ecalli 18 // 'fetch'
  2177: 01                       fallthrough
      :                          @119
  2178: 82 18 48                 a1 = u64 [sp + 0x48]
  2181: 97 88 0c                 a1 = a1 << 0xc
  2184: 82 1a 50                 a3 = u64 [sp + 0x50]
  2187: 82 19 40                 a2 = u64 [sp + 0x40]
  2190: da 98 0a                 a3 = a1 if a2 == 0
  2193: 95 18 d0 50 01           a1 = sp + 0x150d0
  2198: 7b 87 18                 u64 [a1 + 0x18] = a0
  2201: 51 17 ff 41 02           jump @143 if a0 == 4294967295
      :                          @120
  2206: 7b 1a 50                 u64 [sp + 0x50] = a3
  2209: 7b 88 88 00              u64 [a1 + 0x88] = a1
  2213: 82 17 58                 a0 = u64 [sp + 0x58]
  2216: 7b 87 90 00              u64 [a1 + 0x90] = a0
  2220: 95 19 e8 50 01           a2 = sp + 0x150e8
  2225: 7b 89 98 00              u64 [a1 + 0x98] = a2
  2229: 7b 87 a0 00              u64 [a1 + 0xa0] = a0
  2233: 82 17 28                 a0 = u64 [sp + 0x28]
  2236: 7b 87 60 01              u64 [a1 + 0x160] = a0
  2240: 49 28 68 01 02           u64 [a1 + 360] = 0x2
  2245: 49 28 80 01              u64 [a1 + 384] = 0
  2249: 95 19 58 51 01           a2 = sp + 0x15158
  2254: 7b 89 70 01              u64 [a1 + 0x170] = a2
  2258: 49 28 78 01 02           u64 [a1 + 376] = 0x2
  2263: 95 17 f0 50 01           a0 = sp + 0x150f0
  2268: 95 18 30 52 01           a1 = sp + 0x15230
  2273: 50 10 3c f1 0c           ra = 60, jump @317
      :                          @121 [@dyn 30]
  2278: 95 17 d0 50 01           a0 = sp + 0x150d0
  2283: 82 75 28                 s0 = u64 [a0 + 0x28]
  2286: 82 7b 30                 a4 = u64 [a0 + 0x30]
  2289: 82 77 20                 a0 = u64 [a0 + 0x20]
  2292: 7b 17 48                 u64 [sp + 0x48] = a0
  2295: 33 07 02                 a0 = 0x2
  2298: 33 08                    a1 = 0
  2300: 33 09                    a2 = 0
  2302: 64 5a                    a3 = s0
  2304: 33 00 3e                 ra = 0x3e
  2307: 0a 64                    ecalli 100 // 'log'
  2309: 01                       fallthrough
      :                          @122 [@dyn 31]
  2310: 82 1b 48                 a4 = u64 [sp + 0x48]
  2313: 82 17 70                 a0 = u64 [sp + 0x70]
  2316: c8 b7 07                 a0 = a0 + a4
  2319: 53 37 00 00 f0 1a        jump @127 if a0 <u 4293918720
      :                          @123
  2325: 82 67                    a0 = u64 [s1]
  2327: c9 76 08                 a1 = s1 - a0
  2330: ab 58 0f                 jump @127 if a1 != s0
      :                          @124
  2333: c9 b7 08                 a1 = a0 - a4
  2336: 01                       fallthrough
      :                          @125
  2337: 82 69                    a2 = u64 [s1]
  2339: ab 79 f2                 jump @123 if a2 != a0
      :                          @126
  2342: 7b 68                    u64 [s1] = a1
  2344: 01                       fallthrough
      :                          @127
  2345: 95 18 80 40 01           a1 = sp + 0x14080
  2350: 80 87 48                 a0 = u32 [a1 + 0x48]
  2353: 80 88 4c                 a1 = u32 [a1 + 0x4c]
  2356: 95 19 d0 50 01           a2 = sp + 0x150d0
  2361: 7b 97 08                 u64 [a2 + 0x8] = a0
  2364: 7b 98 10                 u64 [a2 + 0x10] = a1
  2367: 82 99                    a2 = u64 [a2]
  2369: 7b 19 40                 u64 [sp + 0x40] = a2
  2372: 33 09 01                 a2 = 0x1
  2375: 7b 18 48                 u64 [sp + 0x48] = a1
  2378: 0a 17                    ecalli 23 // 'zero'
  2380: 95 19 d0 50 01           a2 = sp + 0x150d0
  2385: 7b 97 f8 00              u64 [a2 + 0xf8] = a0
  2389: 95 17 d8 50 01           a0 = sp + 0x150d8
  2394: 7b 97 60 01              u64 [a2 + 0x160] = a0
  2398: 82 17 58                 a0 = u64 [sp + 0x58]
  2401: 7b 97 68 01              u64 [a2 + 0x168] = a0
  2405: 95 18 e0 50 01           a1 = sp + 0x150e0
  2410: 7b 98 70 01              u64 [a2 + 0x170] = a1
  2414: 7b 97 78 01              u64 [a2 + 0x178] = a0
  2418: 95 18 c8 51 01           a1 = sp + 0x151c8
  2423: 7b 98 80 01              u64 [a2 + 0x180] = a1
  2427: 7b 97 88 01              u64 [a2 + 0x188] = a0
  2431: 82 17 20                 a0 = u64 [sp + 0x20]
  2434: 7b 97 88 00              u64 [a2 + 0x88] = a0
  2438: 49 29 90 00 03           u64 [a2 + 144] = 0x3
  2443: 49 29 a8 00              u64 [a2 + 168] = 0
  2447: 95 17 30 52 01           a0 = sp + 0x15230
  2452: 7b 97 98 00              u64 [a2 + 0x98] = a0
  2456: 49 29 a0 00 03           u64 [a2 + 160] = 0x3
  2461: 95 17 f0 50 01           a0 = sp + 0x150f0
  2466: 95 18 58 51 01           a1 = sp + 0x15158
  2471: 50 10 40 2b 0c           ra = 64, jump @317
      :                          @128 [@dyn 32]
  2476: 95 17 d0 50 01           a0 = sp + 0x150d0
  2481: 82 75 28                 s0 = u64 [a0 + 0x28]
  2484: 82 7b 30                 a4 = u64 [a0 + 0x30]
  2487: 82 77 20                 a0 = u64 [a0 + 0x20]
  2490: 7b 17 38                 u64 [sp + 0x38] = a0
  2493: 33 07 02                 a0 = 0x2
  2496: 33 08                    a1 = 0
  2498: 33 09                    a2 = 0
  2500: 64 5a                    a3 = s0
  2502: 33 00 42                 ra = 0x42
  2505: 0a 64                    ecalli 100 // 'log'
  2507: 01                       fallthrough
      :                          @129 [@dyn 33]
  2508: 82 1b 38                 a4 = u64 [sp + 0x38]
  2511: 82 17 70                 a0 = u64 [sp + 0x70]
  2514: c8 b7 07                 a0 = a0 + a4
  2517: 53 37 00 00 f0 1a        jump @134 if a0 <u 4293918720
      :                          @130
  2523: 82 67                    a0 = u64 [s1]
  2525: c9 76 08                 a1 = s1 - a0
  2528: ab 58 0f                 jump @134 if a1 != s0
      :                          @131
  2531: c9 b7 08                 a1 = a0 - a4
  2534: 01                       fallthrough
      :                          @132
  2535: 82 69                    a2 = u64 [s1]
  2537: ab 79 f2                 jump @130 if a2 != a0
      :                          @133
  2540: 7b 68                    u64 [s1] = a1
  2542: 01                       fallthrough
      :                          @134
  2543: 95 1a d0 50 01           a3 = sp + 0x150d0
  2548: 82 a9 10                 a2 = u64 [a3 + 0x10]
  2551: 82 a7 08                 a0 = u64 [a3 + 0x8]
  2554: 95 18 c8 40 01           a1 = sp + 0x140c8
  2559: 7b a8 00 01              u64 [a3 + 0x100] = a1
  2563: 97 99 0c                 a2 = a2 << 0xc
  2566: 7b a9 08 01              u64 [a3 + 0x108] = a2
  2570: 33 0a 00 10              a3 = 0x1000
  2574: 95 18 d0 40 01           a1 = sp + 0x140d0
  2579: 0a 16                    ecalli 22 // 'poke'
  2581: 95 19 d0 50 01           a2 = sp + 0x150d0
  2586: 7b 97 20 01              u64 [a2 + 0x120] = a0
  2590: 95 17 d8 50 01           a0 = sp + 0x150d8
  2595: 7b 97 60 01              u64 [a2 + 0x160] = a0
  2599: 82 17 58                 a0 = u64 [sp + 0x58]
  2602: 7b 97 68 01              u64 [a2 + 0x168] = a0
  2606: 95 18 d0 51 01           a1 = sp + 0x151d0
  2611: 7b 98 70 01              u64 [a2 + 0x170] = a1
  2615: 7b 97 78 01              u64 [a2 + 0x178] = a0
  2619: 95 18 d8 51 01           a1 = sp + 0x151d8
  2624: 7b 98 80 01              u64 [a2 + 0x180] = a1
  2628: 7b 97 88 01              u64 [a2 + 0x188] = a0
  2632: 82 18 18                 a1 = u64 [sp + 0x18]
  2635: 7b 98 90 01              u64 [a2 + 0x190] = a1
  2639: 7b 97 98 01              u64 [a2 + 0x198] = a0
  2643: 95 18 f0 51 01           a1 = sp + 0x151f0
  2648: 7b 98 a0 01              u64 [a2 + 0x1a0] = a1
  2652: 7b 97 a8 01              u64 [a2 + 0x1a8] = a0
  2656: 82 17 10                 a0 = u64 [sp + 0x10]
  2659: 7b 97 88 00              u64 [a2 + 0x88] = a0
  2663: 49 29 90 00 05           u64 [a2 + 144] = 0x5
  2668: 49 29 a8 00              u64 [a2 + 168] = 0
  2672: 95 17 30 52 01           a0 = sp + 0x15230
  2677: 7b 97 98 00              u64 [a2 + 0x98] = a0
  2681: 49 29 a0 00 05           u64 [a2 + 160] = 0x5
  2686: 95 17 f0 50 01           a0 = sp + 0x150f0
  2691: 95 18 58 51 01           a1 = sp + 0x15158
  2696: 50 10 44 4a 0b           ra = 68, jump @317
      :                          @135 [@dyn 34]
  2701: 95 17 d0 50 01           a0 = sp + 0x150d0
  2706: 82 75 28                 s0 = u64 [a0 + 0x28]
  2709: 82 7b 30                 a4 = u64 [a0 + 0x30]
  2712: 82 77 20                 a0 = u64 [a0 + 0x20]
  2715: 7b 17 38                 u64 [sp + 0x38] = a0
  2718: 33 07 02                 a0 = 0x2
  2721: 33 08                    a1 = 0
  2723: 33 09                    a2 = 0
  2725: 64 5a                    a3 = s0
  2727: 33 00 46                 ra = 0x46
  2730: 0a 64                    ecalli 100 // 'log'
  2732: 01                       fallthrough
      :                          @136 [@dyn 35]
  2733: 82 1b 38                 a4 = u64 [sp + 0x38]
  2736: 82 17 70                 a0 = u64 [sp + 0x70]
  2739: c8 b7 07                 a0 = a0 + a4
  2742: 53 37 00 00 f0 ae fd     jump @118 if a0 <u 4293918720
      :                          @137
  2749: 82 67                    a0 = u64 [s1]
  2751: c9 76 08                 a1 = s1 - a0
  2754: ab 58 a2 fd              jump @118 if a1 != s0
      :                          @138
  2758: c9 b7 08                 a1 = a0 - a4
  2761: 01                       fallthrough
      :                          @139
  2762: 82 69                    a2 = u64 [s1]
  2764: ab 79 f1                 jump @137 if a2 != a0
      :                          @140
  2767: 7b 68                    u64 [s1] = a1
  2769: 33 0a                    a3 = 0
  2771: 01                       fallthrough
      :                          @141
  2772: ab 79 e9                 jump @137 if a2 != a0
      :                          @142
  2775: 28 8d fd                 jump @118
      :                          @143
  2778: 49 18 50                 u64 [a1 + 80] = 0
  2781: 49 18 48                 u64 [a1 + 72] = 0
  2784: 49 18 40                 u64 [a1 + 64] = 0
  2787: 49 18 38                 u64 [a1 + 56] = 0
  2790: 14 07 00 00 ff ff 00 00 00 00 a0 = 0xffff0000
  2800: 7b 87 20                 u64 [a1 + 0x20] = a0
  2803: 14 07 00 00 fe fe 00 00 00 00 a0 = 0xfefe0000
  2813: 7b 87 28                 u64 [a1 + 0x28] = a0
  2816: 82 87                    a0 = u64 [a1]
  2818: 49 18 30                 u64 [a1 + 48] = 0
  2821: 49 28 80 00              u64 [a1 + 128] = 0
  2825: 7b 8a 58                 u64 [a1 + 0x58] = a3
  2828: 97 77 0c                 a0 = a0 << 0xc
  2831: 7b 87 60                 u64 [a1 + 0x60] = a0
  2834: 82 17 08                 a0 = u64 [sp + 0x8]
  2837: 7b 87 68                 u64 [a1 + 0x68] = a0
  2840: 82 17 68                 a0 = u64 [sp + 0x68]
  2843: 7b 87 70                 u64 [a1 + 0x70] = a0
  2846: 82 17 60                 a0 = u64 [sp + 0x60]
  2849: 7b 87 78                 u64 [a1 + 0x78] = a0
  2852: 95 17 f0 50 01           a0 = sp + 0x150f0
  2857: 7b 87 20 01              u64 [a1 + 0x120] = a0
  2861: 33 07 0a                 a0 = 0xa
  2864: 7b 87 28 01              u64 [a1 + 0x128] = a0
  2868: 33 07 68 02 01           a0 = 0x10268
  2873: 7b 87 60 01              u64 [a1 + 0x160] = a0
  2877: 49 28 68 01 01           u64 [a1 + 360] = 0x1
  2882: 49 28 80 01              u64 [a1 + 384] = 0
  2886: 95 17 f0 51 01           a0 = sp + 0x151f0
  2891: 7b 87 70 01              u64 [a1 + 0x170] = a0
  2895: 49 28 78 01 01           u64 [a1 + 376] = 0x1
  2900: 95 17 58 51 01           a0 = sp + 0x15158
  2905: 95 16 d0 50 01           s1 = sp + 0x150d0
  2910: 95 18 30 52 01           a1 = sp + 0x15230
  2915: 50 10 48 6f 0a           ra = 72, jump @317
      :                          @144 [@dyn 36]
  2920: 82 65 90 00              s0 = u64 [s1 + 0x90]
  2924: 82 6b 98 00              a4 = u64 [s1 + 0x98]
  2928: 82 66 88 00              s1 = u64 [s1 + 0x88]
  2932: 33 07 02                 a0 = 0x2
  2935: 33 08                    a1 = 0
  2937: 33 09                    a2 = 0
  2939: 64 5a                    a3 = s0
  2941: 33 00 4a                 ra = 0x4a
  2944: 0a 64                    ecalli 100 // 'log'
  2946: 01                       fallthrough
      :                          @145 [@dyn 37]
  2947: 82 17 70                 a0 = u64 [sp + 0x70]
  2950: c8 67 07                 a0 = a0 + s1
  2953: 53 37 00 00 f0 25        jump @151 if a0 <u 4293918720
      :                          @146
  2959: 33 07 40 00 03           a0 = 0x30040
  2964: 95 77 00 00 10           a0 = a0 + 0x100000
  2969: 01                       fallthrough
      :                          @147
  2970: 82 78                    a1 = u64 [a0]
  2972: c9 87 09                 a2 = a0 - a1
  2975: ab 59 0f                 jump @151 if a2 != s0
      :                          @148
  2978: c9 68 09                 a2 = a1 - s1
  2981: 01                       fallthrough
      :                          @149
  2982: 82 7a                    a3 = u64 [a0]
  2984: ab 8a f2                 jump @147 if a3 != a1
      :                          @150
  2987: 7b 79                    u64 [a0] = a2
  2989: 01                       fallthrough
      :                          @151
  2990: 95 14 d0 50 01           t2 = sp + 0x150d0
  2995: 82 43 20                 t1 = u64 [t2 + 0x20]
  2998: 82 49 28                 a2 = u64 [t2 + 0x28]
  3001: 82 40 30                 ra = u64 [t2 + 0x30]
  3004: 82 4a 38                 a3 = u64 [t2 + 0x38]
  3007: 82 4b 40                 a4 = u64 [t2 + 0x40]
  3010: 82 4c 48                 a5 = u64 [t2 + 0x48]
  3013: 82 46 50                 s1 = u64 [t2 + 0x50]
  3016: 82 45 58                 s0 = u64 [t2 + 0x58]
  3019: 82 42 60                 t0 = u64 [t2 + 0x60]
  3022: 49 24 88 00 00 00 01     u64 [t2 + 136] = 0x10000
  3029: 82 47 68                 a0 = u64 [t2 + 0x68]
  3032: 7b 43 90 00              u64 [t2 + 0x90] = t1
  3036: 82 48 70                 a1 = u64 [t2 + 0x70]
  3039: 7b 49 98 00              u64 [t2 + 0x98] = a2
  3043: 82 49 78                 a2 = u64 [t2 + 0x78]
  3046: 7b 40 a0 00              u64 [t2 + 0xa0] = ra
  3050: 82 43 80 00              t1 = u64 [t2 + 0x80]
  3054: 7b 4a a8 00              u64 [t2 + 0xa8] = a3
  3058: 7b 4b b0 00              u64 [t2 + 0xb0] = a4
  3062: 7b 4c b8 00              u64 [t2 + 0xb8] = a5
  3066: 7b 46 c0 00              u64 [t2 + 0xc0] = s1
  3070: 7b 45 c8 00              u64 [t2 + 0xc8] = s0
  3074: 7b 42 d0 00              u64 [t2 + 0xd0] = t0
  3078: 7b 47 d8 00              u64 [t2 + 0xd8] = a0
  3082: 7b 48 e0 00              u64 [t2 + 0xe0] = a1
  3086: 95 18 d0 50 01           a1 = sp + 0x150d0
  3091: 7b 89 e8 00              u64 [a1 + 0xe8] = a2
  3095: 7b 83 f0 00              u64 [a1 + 0xf0] = t1
  3099: 33 07 06                 a0 = 0x6
  3102: 7b 17 60                 u64 [sp + 0x60] = a0
  3105: 33 07 a0 02 01           a0 = 0x102a0
  3110: 7b 17 38                 u64 [sp + 0x38] = a0
  3113: 33 07 d8 02 01           a0 = 0x102d8
  3118: 7b 17 30                 u64 [sp + 0x30] = a0
  3121: 33 06 40 00 03           s1 = 0x30040
  3126: 95 66 00 00 10           s1 = s1 + 0x100000
  3131: 01                       fallthrough
      :                          @152
  3132: 7b 88 08 01              u64 [a1 + 0x108] = a1
  3136: 82 17 60                 a0 = u64 [sp + 0x60]
  3139: 7b 87 10 01              u64 [a1 + 0x110] = a0
  3143: 82 17 38                 a0 = u64 [sp + 0x38]
  3146: 7b 87 60 01              u64 [a1 + 0x160] = a0
  3150: 49 28 68 01 01           u64 [a1 + 360] = 0x1
  3155: 49 28 80 01              u64 [a1 + 384] = 0
  3159: 95 19 d8 51 01           a2 = sp + 0x151d8
  3164: 7b 89 70 01              u64 [a1 + 0x170] = a2
  3168: 49 28 78 01 01           u64 [a1 + 376] = 0x1
  3173: 95 17 f0 51 01           a0 = sp + 0x151f0
  3178: 95 18 30 52 01           a1 = sp + 0x15230
  3183: 50 10 4c 63 09           ra = 76, jump @317
      :                          @153 [@dyn 38]
  3188: 95 17 d0 50 01           a0 = sp + 0x150d0
  3193: 82 75 28 01              s0 = u64 [a0 + 0x128]
  3197: 82 7b 30 01              a4 = u64 [a0 + 0x130]
  3201: 82 77 20 01              a0 = u64 [a0 + 0x120]
  3205: 7b 17 68                 u64 [sp + 0x68] = a0
  3208: 33 07 02                 a0 = 0x2
  3211: 33 08                    a1 = 0
  3213: 33 09                    a2 = 0
  3215: 64 5a                    a3 = s0
  3217: 33 00 4e                 ra = 0x4e
  3220: 0a 64                    ecalli 100 // 'log'
  3222: 01                       fallthrough
      :                          @154 [@dyn 39]
  3223: 82 1b 68                 a4 = u64 [sp + 0x68]
  3226: 82 17 70                 a0 = u64 [sp + 0x70]
  3229: c8 b7 07                 a0 = a0 + a4
  3232: 53 37 00 00 f0 1a        jump @159 if a0 <u 4293918720
      :                          @155
  3238: 82 67                    a0 = u64 [s1]
  3240: c9 76 08                 a1 = s1 - a0
  3243: ab 58 0f                 jump @159 if a1 != s0
      :                          @156
  3246: c9 b7 08                 a1 = a0 - a4
  3249: 01                       fallthrough
      :                          @157
  3250: 82 69                    a2 = u64 [s1]
  3252: ab 79 f2                 jump @155 if a2 != a0
      :                          @158
  3255: 7b 68                    u64 [s1] = a1
  3257: 01                       fallthrough
      :                          @159
  3258: 95 17 80 40 01           a0 = sp + 0x14080
  3263: 82 77 40                 a0 = u64 [a0 + 0x40]
  3266: 95 18 58 51 01           a1 = sp + 0x15158
  3271: 0a 19                    ecalli 25 // 'invoke'
  3273: 95 19 d0 50 01           a2 = sp + 0x150d0
  3278: 7b 97 f8 00              u64 [a2 + 0xf8] = a0
  3282: 7b 98 00 01              u64 [a2 + 0x100] = a1
  3286: 95 17 c0 40 01           a0 = sp + 0x140c0
  3291: 7b 97 60 01              u64 [a2 + 0x160] = a0
  3295: 82 17 60                 a0 = u64 [sp + 0x60]
  3298: 7b 97 68 01              u64 [a2 + 0x168] = a0
  3302: 95 18 c8 51 01           a1 = sp + 0x151c8
  3307: 7b 98 70 01              u64 [a2 + 0x170] = a1
  3311: 7b 97 78 01              u64 [a2 + 0x178] = a0
  3315: 95 18 d0 51 01           a1 = sp + 0x151d0
  3320: 7b 98 80 01              u64 [a2 + 0x180] = a1
  3324: 7b 97 88 01              u64 [a2 + 0x188] = a0
  3328: 82 17 30                 a0 = u64 [sp + 0x30]
  3331: 7b 97 20 01              u64 [a2 + 0x120] = a0
  3335: 49 29 28 01 03           u64 [a2 + 296] = 0x3
  3340: 49 29 40 01              u64 [a2 + 320] = 0
  3344: 95 17 30 52 01           a0 = sp + 0x15230
  3349: 7b 97 30 01              u64 [a2 + 0x130] = a0
  3353: 49 29 38 01 03           u64 [a2 + 312] = 0x3
  3358: 95 17 d8 51 01           a0 = sp + 0x151d8
  3363: 95 18 f0 51 01           a1 = sp + 0x151f0
  3368: 50 10 50 aa 08           ra = 80, jump @317
      :                          @160 [@dyn 40]
  3373: 95 17 d0 50 01           a0 = sp + 0x150d0
  3378: 82 75 10 01              s0 = u64 [a0 + 0x110]
  3382: 82 7b 18 01              a4 = u64 [a0 + 0x118]
  3386: 82 77 08 01              a0 = u64 [a0 + 0x108]
  3390: 7b 17 68                 u64 [sp + 0x68] = a0
  3393: 33 07 02                 a0 = 0x2
  3396: 33 08                    a1 = 0
  3398: 33 09                    a2 = 0
  3400: 64 5a                    a3 = s0
  3402: 33 00 52                 ra = 0x52
  3405: 0a 64                    ecalli 100 // 'log'
  3407: 01                       fallthrough
      :                          @161 [@dyn 41]
  3408: 82 1b 68                 a4 = u64 [sp + 0x68]
  3411: 82 17 70                 a0 = u64 [sp + 0x70]
  3414: c8 b7 07                 a0 = a0 + a4
  3417: 53 37 00 00 f0 1a        jump @166 if a0 <u 4293918720
      :                          @162
  3423: 82 67                    a0 = u64 [s1]
  3425: c9 76 08                 a1 = s1 - a0
  3428: ab 58 0f                 jump @166 if a1 != s0
      :                          @163
  3431: c9 b7 08                 a1 = a0 - a4
  3434: 01                       fallthrough
      :                          @164
  3435: 82 69                    a2 = u64 [s1]
  3437: ab 79 f2                 jump @162 if a2 != a0
      :                          @165
  3440: 7b 68                    u64 [s1] = a1
  3442: 01                       fallthrough
      :                          @166
  3443: 95 18 d0 50 01           a1 = sp + 0x150d0
  3448: 82 87 f8 00              a0 = u64 [a1 + 0xf8]
  3452: 82 88 00 01              a1 = u64 [a1 + 0x100]
  3456: 85 77 03                 a0 = a0 ^ 0x3
  3459: 85 88 64                 a1 = a1 ^ 0x64
  3462: d4 87 05                 s0 = a0 | a1
  3465: 95 17 f0 50 01           a0 = sp + 0x150f0
  3470: 33 09 68                 a2 = 0x68
  3473: 95 18 60 51 01           a1 = sp + 0x15160
  3478: 50 10 54 b6 0a           ra = 84, jump @367
      :                          @167 [@dyn 42]
  3483: 95 17 d0 50 01           a0 = sp + 0x150d0
  3488: 82 78 58                 a1 = u64 [a0 + 0x58]
  3491: 7b 18 68                 u64 [sp + 0x68] = a1
  3494: 52 05 93 00              jump @170 if s0 != 0
      :                          @168
  3498: 82 78 60                 a1 = u64 [a0 + 0x60]
  3501: 7b 18 48                 u64 [sp + 0x48] = a1
  3504: 82 75 68                 s0 = u64 [a0 + 0x68]
  3507: 7b 15 40                 u64 [sp + 0x40] = s0
  3510: 82 78 70                 a1 = u64 [a0 + 0x70]
  3513: 7b 18 58                 u64 [sp + 0x58] = a1
  3516: 82 78 78                 a1 = u64 [a0 + 0x78]
  3519: 7b 18 50                 u64 [sp + 0x50] = a1
  3522: 49 27 58 01              u64 [a0 + 344] = 0
  3526: 49 27 50 01              u64 [a0 + 336] = 0
  3530: 49 27 48 01              u64 [a0 + 328] = 0
  3534: 49 27 40 01              u64 [a0 + 320] = 0
  3538: 49 27 38 01              u64 [a0 + 312] = 0
  3542: 49 27 30 01              u64 [a0 + 304] = 0
  3546: 49 27 28 01              u64 [a0 + 296] = 0
  3550: 49 27 20 01              u64 [a0 + 288] = 0
  3554: 95 17 30 52 01           a0 = sp + 0x15230
  3559: 33 09 00 01              a2 = 0x100
  3563: 33 08                    a1 = 0
  3565: 50 10 56 11 0b           ra = 86, jump @385
      :                          @169 [@dyn 43]
  3570: 95 17 80 40 01           a0 = sp + 0x14080
  3575: 82 77 40                 a0 = u64 [a0 + 0x40]
  3578: 95 18 f0 51 01           a1 = sp + 0x151f0
  3583: 82 19 48                 a2 = u64 [sp + 0x48]
  3586: 64 5a                    a3 = s0
  3588: 0a 15                    ecalli 21 // 'peek'
  3590: 95 17 80 40 01           a0 = sp + 0x14080
  3595: 82 77 40                 a0 = u64 [a0 + 0x40]
  3598: 95 18 30 52 01           a1 = sp + 0x15230
  3603: 82 19 58                 a2 = u64 [sp + 0x58]
  3606: 82 15 50                 s0 = u64 [sp + 0x50]
  3609: 64 5a                    a3 = s0
  3611: 0a 15                    ecalli 21 // 'peek'
  3613: 95 18 f0 51 01           a1 = sp + 0x151f0
  3618: 95 1a 30 52 01           a3 = sp + 0x15230
  3623: 82 17 68                 a0 = u64 [sp + 0x68]
  3626: 82 19 40                 a2 = u64 [sp + 0x40]
  3629: 64 5b                    a4 = s0
  3631: 0a 64                    ecalli 100 // 'log'
  3633: 95 18 d0 50 01           a1 = sp + 0x150d0
  3638: 28 06 fe                 jump @152
      :                          @170
  3641: 95 17 d0 40 01           a0 = sp + 0x140d0
  3646: 33 09 00 10              a2 = 0x1000
  3650: 33 05 00 10              s0 = 0x1000
  3654: 33 08                    a1 = 0
  3656: 50 10 58 b6 0a           ra = 88, jump @385
      :                          @171 [@dyn 44]
  3661: 95 1a 80 40 01           a3 = sp + 0x14080
  3666: 82 a7 40                 a0 = u64 [a3 + 0x40]
  3669: 7a a7 48                 u32 [a3 + 0x48] = a0
  3672: 82 16 68                 s1 = u64 [sp + 0x68]
  3675: 98 68 0c                 a1 = s1 >> 0xc
  3678: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  3681: 33 0a 00 10              a3 = 0x1000
  3685: 95 18 d0 40 01           a1 = sp + 0x140d0
  3690: 64 69                    a2 = s1
  3692: 0a 15                    ecalli 21 // 'peek'
  3694: 83 55 08                 i32 s0 = s0 + 0x8
  3697: 95 17 c8 40 01           a0 = sp + 0x140c8
  3702: 64 58                    a1 = s0
  3704: 0a 13                    ecalli 19 // 'export'
  3706: 33 09 00 10              a2 = 0x1000
  3710: 95 17 d0 40 01           a0 = sp + 0x140d0
  3715: 33 08                    a1 = 0
  3717: 50 10 5a 79 0a           ra = 90, jump @385
      :                          @172 [@dyn 45]
  3722: 95 1a 80 40 01           a3 = sp + 0x14080
  3727: 82 a7 40                 a0 = u64 [a3 + 0x40]
  3730: 7a a7 48                 u32 [a3 + 0x48] = a0
  3733: 95 69 00 10              a2 = s1 + 0x1000
  3737: 98 98 0c                 a1 = a2 >> 0xc
  3740: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  3743: 33 0a 00 10              a3 = 0x1000
  3747: 95 18 d0 40 01           a1 = sp + 0x140d0
  3752: 0a 15                    ecalli 21 // 'peek'
  3754: 95 17 c8 40 01           a0 = sp + 0x140c8
  3759: 64 58                    a1 = s0
  3761: 0a 13                    ecalli 19 // 'export'
  3763: 33 09 00 10              a2 = 0x1000
  3767: 95 17 d0 40 01           a0 = sp + 0x140d0
  3772: 33 08                    a1 = 0
  3774: 50 10 5c 40 0a           ra = 92, jump @385
      :                          @173 [@dyn 46]
  3779: 95 1a 80 40 01           a3 = sp + 0x14080
  3784: 82 a7 40                 a0 = u64 [a3 + 0x40]
  3787: 7a a7 48                 u32 [a3 + 0x48] = a0
  3790: 95 69 00 20              a2 = s1 + 0x2000
  3794: 98 98 0c                 a1 = a2 >> 0xc
  3797: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  3800: 33 0a 00 10              a3 = 0x1000
  3804: 95 18 d0 40 01           a1 = sp + 0x140d0
  3809: 0a 15                    ecalli 21 // 'peek'
  3811: 95 17 c8 40 01           a0 = sp + 0x140c8
  3816: 64 58                    a1 = s0
  3818: 0a 13                    ecalli 19 // 'export'
  3820: 33 09 00 10              a2 = 0x1000
  3824: 95 17 d0 40 01           a0 = sp + 0x140d0
  3829: 33 08                    a1 = 0
  3831: 50 10 5e 07 0a           ra = 94, jump @385
      :                          @174 [@dyn 47]
  3836: 95 18 80 40 01           a1 = sp + 0x14080
  3841: 82 87 40                 a0 = u64 [a1 + 0x40]
  3844: 7a 87 48                 u32 [a1 + 0x48] = a0
  3847: 95 1a 80 40 01           a3 = sp + 0x14080
  3852: 95 69 00 30              a2 = s1 + 0x3000
  3856: 98 98 0c                 a1 = a2 >> 0xc
  3859: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  3862: 33 0a 00 10              a3 = 0x1000
  3866: 95 18 d0 40 01           a1 = sp + 0x140d0
  3871: 0a 15                    ecalli 21 // 'peek'
  3873: 95 17 c8 40 01           a0 = sp + 0x140c8
  3878: 64 58                    a1 = s0
  3880: 64 56                    s1 = s0
  3882: 0a 13                    ecalli 19 // 'export'
  3884: 33 09 00 10              a2 = 0x1000
  3888: 95 17 d0 40 01           a0 = sp + 0x140d0
  3893: 33 08                    a1 = 0
  3895: 50 10 60 c7 09           ra = 96, jump @385
      :                          @175 [@dyn 48]
  3900: 95 1a 80 40 01           a3 = sp + 0x14080
  3905: 82 a7 40                 a0 = u64 [a3 + 0x40]
  3908: 7a a7 48                 u32 [a3 + 0x48] = a0
  3911: 82 15 68                 s0 = u64 [sp + 0x68]
  3914: 95 59 00 40              a2 = s0 + 0x4000
  3918: 98 98 0c                 a1 = a2 >> 0xc
  3921: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  3924: 33 0a 00 10              a3 = 0x1000
  3928: 95 18 d0 40 01           a1 = sp + 0x140d0
  3933: 0a 15                    ecalli 21 // 'peek'
  3935: 95 17 c8 40 01           a0 = sp + 0x140c8
  3940: 64 68                    a1 = s1
  3942: 0a 13                    ecalli 19 // 'export'
  3944: 33 09 00 10              a2 = 0x1000
  3948: 95 17 d0 40 01           a0 = sp + 0x140d0
  3953: 33 08                    a1 = 0
  3955: 50 10 62 8b 09           ra = 98, jump @385
      :                          @176 [@dyn 49]
  3960: 95 18 80 40 01           a1 = sp + 0x14080
  3965: 82 87 40                 a0 = u64 [a1 + 0x40]
  3968: 7a 87 48                 u32 [a1 + 0x48] = a0
  3971: 95 1a 80 40 01           a3 = sp + 0x14080
  3976: 95 59 00 50              a2 = s0 + 0x5000
  3980: 98 98 0c                 a1 = a2 >> 0xc
  3983: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  3986: 33 0a 00 10              a3 = 0x1000
  3990: 95 18 d0 40 01           a1 = sp + 0x140d0
  3995: 0a 15                    ecalli 21 // 'peek'
  3997: 95 17 c8 40 01           a0 = sp + 0x140c8
  4002: 7b 16 60                 u64 [sp + 0x60] = s1
  4005: 64 68                    a1 = s1
  4007: 0a 13                    ecalli 19 // 'export'
  4009: 33 09 00 10              a2 = 0x1000
  4013: 95 17 d0 40 01           a0 = sp + 0x140d0
  4018: 33 08                    a1 = 0
  4020: 50 10 64 4a 09           ra = 100, jump @385
      :                          @177 [@dyn 50]
  4025: 95 1a 80 40 01           a3 = sp + 0x14080
  4030: 82 a7 40                 a0 = u64 [a3 + 0x40]
  4033: 7a a7 48                 u32 [a3 + 0x48] = a0
  4036: 95 59 00 60              a2 = s0 + 0x6000
  4040: 98 98 0c                 a1 = a2 >> 0xc
  4043: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  4046: 33 0a 00 10              a3 = 0x1000
  4050: 95 18 d0 40 01           a1 = sp + 0x140d0
  4055: 0a 15                    ecalli 21 // 'peek'
  4057: 95 17 c8 40 01           a0 = sp + 0x140c8
  4062: 64 68                    a1 = s1
  4064: 0a 13                    ecalli 19 // 'export'
  4066: 33 09 00 10              a2 = 0x1000
  4070: 95 17 d0 40 01           a0 = sp + 0x140d0
  4075: 33 08                    a1 = 0
  4077: 50 10 66 11 09           ra = 102, jump @385
      :                          @178 [@dyn 51]
  4082: 95 18 80 40 01           a1 = sp + 0x14080
  4087: 82 87 40                 a0 = u64 [a1 + 0x40]
  4090: 7a 87 48                 u32 [a1 + 0x48] = a0
  4093: 95 1a 80 40 01           a3 = sp + 0x14080
  4098: 95 59 00 70              a2 = s0 + 0x7000
  4102: 98 98 0c                 a1 = a2 >> 0xc
  4105: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  4108: 33 0a 00 10              a3 = 0x1000
  4112: 95 18 d0 40 01           a1 = sp + 0x140d0
  4117: 0a 15                    ecalli 21 // 'peek'
  4119: 95 17 c8 40 01           a0 = sp + 0x140c8
  4124: 82 16 60                 s1 = u64 [sp + 0x60]
  4127: 64 68                    a1 = s1
  4129: 0a 13                    ecalli 19 // 'export'
  4131: 33 09 00 10              a2 = 0x1000
  4135: 95 17 d0 40 01           a0 = sp + 0x140d0
  4140: 33 08                    a1 = 0
  4142: 50 10 68 d0 08           ra = 104, jump @385
      :                          @179 [@dyn 52]
  4147: 95 1a 80 40 01           a3 = sp + 0x14080
  4152: 82 a7 40                 a0 = u64 [a3 + 0x40]
  4155: 7a a7 48                 u32 [a3 + 0x48] = a0
  4158: 95 59 00 80 00           a2 = s0 + 0x8000
  4163: 98 98 0c                 a1 = a2 >> 0xc
  4166: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  4169: 95 15 80 40 01           s0 = sp + 0x14080
  4174: 33 0a 00 10              a3 = 0x1000
  4178: 95 18 d0 40 01           a1 = sp + 0x140d0
  4183: 0a 15                    ecalli 21 // 'peek'
  4185: 95 17 c8 40 01           a0 = sp + 0x140c8
  4190: 64 68                    a1 = s1
  4192: 0a 13                    ecalli 19 // 'export'
  4194: 82 57 40                 a0 = u64 [s0 + 0x40]
  4197: 0a 1a                    ecalli 26 // 'expunge'
  4199: 33 07 06                 a0 = 0x6
  4202: 95 18 d0 50 01           a1 = sp + 0x150d0
  4207: 7b 87 10 01              u64 [a1 + 0x110] = a0
  4211: 33 07 38 03 01           a0 = 0x10338
  4216: 7b 87 60 01              u64 [a1 + 0x160] = a0
  4220: 95 17 d8 51 01           a0 = sp + 0x151d8
  4225: 7b 87 70 01              u64 [a1 + 0x170] = a0
  4229: 49 28 68 01 01           u64 [a1 + 360] = 0x1
  4234: 49 28 78 01 01           u64 [a1 + 376] = 0x1
  4239: 7b 88 08 01              u64 [a1 + 0x108] = a1
  4243: 49 28 80 01              u64 [a1 + 384] = 0
  4247: 95 16 d0 50 01           s1 = sp + 0x150d0
  4252: 95 17 f0 51 01           a0 = sp + 0x151f0
  4257: 95 18 30 52 01           a1 = sp + 0x15230
  4262: 50 10 6a 2c 05           ra = 106, jump @317
      :                          @180 [@dyn 53]
  4267: 82 65 28 01              s0 = u64 [s1 + 0x128]
  4271: 82 6b 30 01              a4 = u64 [s1 + 0x130]
  4275: 82 66 20 01              s1 = u64 [s1 + 0x120]
  4279: 33 07 02                 a0 = 0x2
  4282: 33 08                    a1 = 0
  4284: 33 09                    a2 = 0
  4286: 64 5a                    a3 = s0
  4288: 33 00 6c                 ra = 0x6c
  4291: 0a 64                    ecalli 100 // 'log'
  4293: 01                       fallthrough
      :                          @181 [@dyn 54]
  4294: 82 17 70                 a0 = u64 [sp + 0x70]
  4297: c8 67 07                 a0 = a0 + s1
  4300: 53 37 00 00 f0 53 f3     jump @67 if a0 <u 4293918720
      :                          @182
  4307: 33 07 40 00 03           a0 = 0x30040
  4312: 95 77 00 00 10           a0 = a0 + 0x100000
  4317: 01                       fallthrough
      :                          @183
  4318: 82 78                    a1 = u64 [a0]
  4320: c9 87 09                 a2 = a0 - a1
  4323: ab 59 3c f3              jump @67 if a2 != s0
      :                          @184
  4327: c9 68 09                 a2 = a1 - s1
  4330: 01                       fallthrough
      :                          @185
  4331: 82 7a                    a3 = u64 [a0]
  4333: ab 8a f1                 jump @183 if a3 != a1
      :                          @186
  4336: 7b 79                    u64 [a0] = a2
  4338: 33 0b                    a4 = 0
  4340: 01                       fallthrough
      :                          @187
  4341: ab 8a e9                 jump @183 if a3 != a1
      :                          @188
  4344: 28 27 f3                 jump @67
      :                          @189
  4347: 00                       trap
      :                          @190 [export #1: 'accumulate']
  4348: 95 11 68 ff              sp = sp + 0xffffffffffffff68
  4352: 7b 10 90 00              u64 [sp + 0x90] = ra
  4356: 7b 15 88 00              u64 [sp + 0x88] = s0
  4360: 7b 16 80 00              u64 [sp + 0x80] = s1
  4364: 33 09 08                 a2 = 0x8
  4367: ac 98 60 02              jump @255 if a1 <u a2
      :                          @191
  4371: 51 17 fc 75 02           jump @256 if a0 == 4294967292
      :                          @192
  4376: 51 07 70 02              jump @256 if a0 == 0
      :                          @193
  4380: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
  4383: 95 75 08                 s0 = a0 + 0x8
  4386: 51 0a 45                 jump @203 if a3 == 0
      :                          @194
  4389: 7d 58                    a1 = i8 [s0]
  4391: 33 06 01                 s1 = 0x1
  4394: 59 08 40                 jump @204 if a1 >=s 0
      :                          @195
  4397: 84 89 ff 00              a2 = a1 & 0xff
  4401: 33 06 02                 s1 = 0x2
  4404: 53 29 c0 00 2d           jump @201 if a2 <u 192
      :                          @196
  4409: 33 06 03                 s1 = 0x3
  4412: 53 29 e0 00 25           jump @201 if a2 <u 224
      :                          @197
  4417: 33 06 04                 s1 = 0x4
  4420: 53 29 f0 00 1d           jump @201 if a2 <u 240
      :                          @198
  4425: 33 06 05                 s1 = 0x5
  4428: 53 29 f8 00 15           jump @201 if a2 <u 248
      :                          @199
  4433: 33 06 06                 s1 = 0x6
  4436: 53 29 fc 00 0d           jump @201 if a2 <u 252
      :                          @200
  4441: 88 98 fe 00              a1 = a2 <u 0xfe
  4445: 9a 86 08                 s1 = 0x8 - a1
  4448: 01                       fallthrough
      :                          @201
  4449: ae 6a 09                 jump @204 if a3 >=u s1
      :                          @202
  4452: 28 0b 02                 jump @255
      :                          @203
  4455: 33 06                    s1 = 0
  4457: 01                       fallthrough
      :                          @204
  4458: 7b 16                    u64 [sp] = s1
  4460: 64 57                    a0 = s0
  4462: 64 68                    a1 = s1
  4464: 64 a6                    s1 = a3
  4466: 50 10 6e 3a 11           ra = 110, jump @571
      :                          @205 [@dyn 55]
  4471: 82 1a                    a3 = u64 [sp]
  4473: 51 07 f6 01              jump @255 if a0 == 0
      :                          @206
  4477: e4 a6 07                 a0 = maxu(s1, a3)
  4480: c9 a7 07                 a0 = a0 - a3
  4483: 53 17 60 ec 01           jump @255 if a0 <u 96
      :                          @207
  4488: c8 5a 08                 a1 = a3 + s0
  4491: 95 76 a0                 s1 = a0 + 0xffffffffffffffa0
  4494: 95 87 60                 a0 = a1 + 0x60
  4497: 7b 17                    u64 [sp] = a0
  4499: 51 06 4c                 jump @218 if s1 == 0
      :                          @208
  4502: 7d 78                    a1 = i8 [a0]
  4504: 33 05 01                 s0 = 0x1
  4507: 59 08 37                 jump @215 if a1 >=s 0
      :                          @209
  4510: 84 89 ff 00              a2 = a1 & 0xff
  4514: 33 05 02                 s0 = 0x2
  4517: 53 29 c0 00 2d           jump @215 if a2 <u 192
      :                          @210
  4522: 33 05 03                 s0 = 0x3
  4525: 53 29 e0 00 25           jump @215 if a2 <u 224
      :                          @211
  4530: 33 05 04                 s0 = 0x4
  4533: 53 29 f0 00 1d           jump @215 if a2 <u 240
      :                          @212
  4538: 33 05 05                 s0 = 0x5
  4541: 53 29 f8 00 15           jump @215 if a2 <u 248
      :                          @213
  4546: 33 05 06                 s0 = 0x6
  4549: 53 29 fc 00 0d           jump @215 if a2 <u 252
      :                          @214
  4554: 88 98 fe 00              a1 = a2 <u 0xfe
  4558: 9a 85 08                 s0 = 0x8 - a1
  4561: 01                       fallthrough
      :                          @215
  4562: ac 56 b7 01              jump @257 if s1 <u s0
      :                          @216
  4566: 64 58                    a1 = s0
  4568: 50 10 70 d4 10           ra = 112, jump @571
      :                          @217 [@dyn 56]
  4573: 28 07                    jump @219
      :                          @218
  4575: 33 05                    s0 = 0
  4577: 33 07                    a0 = 0
  4579: 01                       fallthrough
      :                          @219
  4580: e4 56 08                 a1 = maxu(s1, s0)
  4583: c9 58 08                 a1 = a1 - s0
  4586: e4 78 08                 a1 = maxu(a1, a0)
  4589: c9 78 08                 a1 = a1 - a0
  4592: 33 09 20                 a2 = 0x20
  4595: ac 98 7c 01              jump @255 if a1 <u a2
      :                          @220
  4599: 82 19                    a2 = u64 [sp]
  4601: c8 95 05                 s0 = s0 + a2
  4604: c8 57 07                 a0 = a0 + s0
  4607: 95 85 e0                 s0 = a1 + 0xffffffffffffffe0
  4610: 95 77 20                 a0 = a0 + 0x20
  4613: 7b 17                    u64 [sp] = a0
  4615: 51 05 50                 jump @232 if s0 == 0
      :                          @221
  4618: 7d 78                    a1 = i8 [a0]
  4620: 33 06 01                 s1 = 0x1
  4623: 59 08 37                 jump @228 if a1 >=s 0
      :                          @222
  4626: 84 89 ff 00              a2 = a1 & 0xff
  4630: 33 06 02                 s1 = 0x2
  4633: 53 29 c0 00 2d           jump @228 if a2 <u 192
      :                          @223
  4638: 33 06 03                 s1 = 0x3
  4641: 53 29 e0 00 25           jump @228 if a2 <u 224
      :                          @224
  4646: 33 06 04                 s1 = 0x4
  4649: 53 29 f0 00 1d           jump @228 if a2 <u 240
      :                          @225
  4654: 33 06 05                 s1 = 0x5
  4657: 53 29 f8 00 15           jump @228 if a2 <u 248
      :                          @226
  4662: 33 06 06                 s1 = 0x6
  4665: 53 29 fc 00 0d           jump @228 if a2 <u 252
      :                          @227
  4670: 88 98 fe 00              a1 = a2 <u 0xfe
  4674: 9a 86 08                 s1 = 0x8 - a1
  4677: 01                       fallthrough
      :                          @228
  4678: ac 65 44 01              jump @258 if s0 <u s1
      :                          @229
  4682: 64 68                    a1 = s1
  4684: 50 10 72 60 10           ra = 114, jump @571
      :                          @230 [@dyn 57]
  4689: ac 56 0c                 jump @233 if s1 <u s0
      :                          @231
  4692: 28 1b 01                 jump @255
      :                          @232
  4695: 33 06                    s1 = 0
  4697: 54 05 16 01              jump @255 if s0 <=u 0
      :                          @233
  4701: 82 17                    a0 = u64 [sp]
  4703: c8 67 07                 a0 = a0 + s1
  4706: 7c 78                    a1 = u8 [a0]
  4708: 52 08 0b 01              jump @255 if a1 != 0
      :                          @234
  4712: e4 65 08                 a1 = maxu(s0, s1)
  4715: c9 68 08                 a1 = a1 - s1
  4718: 95 77 01                 a0 = a0 + 0x1
  4721: 33 09 01                 a2 = 0x1
  4724: e4 98 06                 s1 = maxu(a1, a2)
  4727: 33 09 02                 a2 = 0x2
  4730: 95 6a ff                 a3 = s1 + 0xffffffffffffffff
  4733: ae 98 0b                 jump @236 if a1 >=u a2
      :                          @235
  4736: 64 76                    s1 = a0
  4738: 33 05                    s0 = 0
  4740: 33 07                    a0 = 0
  4742: 28 50                    jump @246
      :                          @236
  4744: 7d 78                    a1 = i8 [a0]
  4746: 33 05 01                 s0 = 0x1
  4749: 59 08 37                 jump @243 if a1 >=s 0
      :                          @237
  4752: 84 89 ff 00              a2 = a1 & 0xff
  4756: 33 05 02                 s0 = 0x2
  4759: 53 29 c0 00 2d           jump @243 if a2 <u 192
      :                          @238
  4764: 33 05 03                 s0 = 0x3
  4767: 53 29 e0 00 25           jump @243 if a2 <u 224
      :                          @239
  4772: 33 05 04                 s0 = 0x4
  4775: 53 29 f0 00 1d           jump @243 if a2 <u 240
      :                          @240
  4780: 33 05 05                 s0 = 0x5
  4783: 53 29 f8 00 15           jump @243 if a2 <u 248
      :                          @241
  4788: 33 05 06                 s0 = 0x6
  4791: 53 29 fc 00 0d           jump @243 if a2 <u 252
      :                          @242
  4796: 88 98 fe 00              a1 = a2 <u 0xfe
  4800: 9a 85 08                 s0 = 0x8 - a1
  4803: 01                       fallthrough
      :                          @243
  4804: 7b 1a                    u64 [sp] = a3
  4806: ac 5a c5 00              jump @259 if a3 <u s0
      :                          @244
  4810: 64 76                    s1 = a0
  4812: 64 58                    a1 = s0
  4814: 50 10 74 de 0f           ra = 116, jump @571
      :                          @245 [@dyn 58]
  4819: 82 1a                    a3 = u64 [sp]
  4821: 01                       fallthrough
      :                          @246
  4822: e4 5a 08                 a1 = maxu(a3, s0)
  4825: c9 58 08                 a1 = a1 - s0
  4828: e6 78 07                 a0 = minu(a1, a0)
  4831: 52 17 24 90 00           jump @255 if a0 != 36
      :                          @247
  4836: c8 56 07                 a0 = s1 + s0
  4839: 7b 17 08                 u64 [sp + 0x8] = a0
  4842: 80 78 20                 a1 = u32 [a0 + 0x20]
  4845: 7b 18 10                 u64 [sp + 0x10] = a1
  4848: 0a 0e                    ecalli 14 // 'solicit'
  4850: 95 17 08                 a0 = sp + 0x8
  4853: 7b 17 60                 u64 [sp + 0x60] = a0
  4856: 33 07 06                 a0 = 0x6
  4859: 7b 17 68                 u64 [sp + 0x68] = a0
  4862: 95 18 10                 a1 = sp + 0x10
  4865: 7b 18 70                 u64 [sp + 0x70] = a1
  4868: 7b 17 78                 u64 [sp + 0x78] = a0
  4871: 33 07 b8 03 01           a0 = 0x103b8
  4876: 7b 17 30                 u64 [sp + 0x30] = a0
  4879: 49 11 38 02              u64 [sp + 56] = 0x2
  4883: 49 11 50                 u64 [sp + 80] = 0
  4886: 95 18 60                 a1 = sp + 0x60
  4889: 7b 18 40                 u64 [sp + 0x40] = a1
  4892: 49 11 48 02              u64 [sp + 72] = 0x2
  4896: 95 17 18                 a0 = sp + 0x18
  4899: 95 18 30                 a1 = sp + 0x30
  4902: 50 10 76 ac 02           ra = 118, jump @317
      :                          @248 [@dyn 59]
  4907: 82 15 20                 s0 = u64 [sp + 0x20]
  4910: 82 1b 28                 a4 = u64 [sp + 0x28]
  4913: 82 16 18                 s1 = u64 [sp + 0x18]
  4916: 33 07 02                 a0 = 0x2
  4919: 33 08                    a1 = 0
  4921: 33 09                    a2 = 0
  4923: 64 5a                    a3 = s0
  4925: 33 00 78                 ra = 0x78
  4928: 0a 64                    ecalli 100 // 'log'
  4930: 01                       fallthrough
      :                          @249 [@dyn 60]
  4931: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
  4936: 53 38 00 00 f0 27        jump @255 if a1 <u 4293918720
      :                          @250
  4942: 33 07 40 00 03           a0 = 0x30040
  4947: 95 77 00 00 10           a0 = a0 + 0x100000
  4952: 01                       fallthrough
      :                          @251
  4953: 82 78                    a1 = u64 [a0]
  4955: c9 87 09                 a2 = a0 - a1
  4958: ab 59 11                 jump @255 if a2 != s0
      :                          @252
  4961: c9 68 09                 a2 = a1 - s1
  4964: 01                       fallthrough
      :                          @253
  4965: 82 7a                    a3 = u64 [a0]
  4967: ab 8a f2                 jump @251 if a3 != a1
      :                          @254
  4970: 7b 79                    u64 [a0] = a2
  4972: 33 0b                    a4 = 0
  4974: 01                       fallthrough
      :                          @255
  4975: 33 07 00 00 01           a0 = 0x10000
  4980: 33 08                    a1 = 0
  4982: 82 10 90 00              ra = u64 [sp + 0x90]
  4986: 82 15 88 00              s0 = u64 [sp + 0x88]
  4990: 82 16 80 00              s1 = u64 [sp + 0x80]
  4994: 95 11 98 00              sp = sp + 0x98
  4998: 32 00                    ret
      :                          @256
  5000: 00                       trap
      :                          @257
  5001: 00                       trap
      :                          @258
  5002: 00                       trap
      :                          @259
  5003: 00                       trap
      :                          @260 [export #2: 'on_transfer']
  5004: 33 07 00 00 01           a0 = 0x10000
  5009: 33 08                    a1 = 0
  5011: 32 00                    ret
      :                          @261
  5013: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  5016: 7b 10 40                 u64 [sp + 0x40] = ra
  5019: 7b 15 38                 u64 [sp + 0x38] = s0
  5022: 7b 16 30                 u64 [sp + 0x30] = s1
  5025: c8 89 09                 a2 = a2 + a1
  5028: ac 89 52                 jump @269 if a2 <u a1
      :                          @262
  5031: 64 75                    s0 = a0
  5033: 82 77                    a0 = u64 [a0]
  5035: 97 78 01                 a1 = a0 << 0x1
  5038: 33 0a 08                 a3 = 0x8
  5041: e4 a9 09                 a2 = maxu(a2, a3)
  5044: e4 98 06                 s1 = maxu(a1, a2)
  5047: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  5050: 98 88 3f                 a1 = a1 >> 0x3f
  5053: 51 07 12                 jump @264 if a0 == 0
      :                          @263
  5056: 82 59 08                 a2 = u64 [s0 + 0x8]
  5059: 7b 19 18                 u64 [sp + 0x18] = a2
  5062: 49 11 20 01              u64 [sp + 32] = 0x1
  5066: 7b 17 28                 u64 [sp + 0x28] = a0
  5069: 28 06                    jump @265
      :                          @264
  5071: 49 11 20                 u64 [sp + 32] = 0
  5074: 01                       fallthrough
      :                          @265
  5075: 64 17                    a0 = sp
  5077: 95 1a 18                 a3 = sp + 0x18
  5080: 64 69                    a2 = s1
  5082: 50 10 7a 32              ra = 122, jump @273
      :                          @266 [@dyn 61]
  5086: 82 18                    a1 = u64 [sp]
  5088: 82 17 08                 a0 = u64 [sp + 0x8]
  5091: 51 08 14                 jump @270 if a1 == 0
      :                          @267
  5094: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  5104: aa 87 0d                 jump @271 if a0 == a1
      :                          @268
  5107: 52 07 18                 jump @272 if a0 != 0
      :                          @269
  5110: 00                       trap
      :                          @270
  5111: 7b 57 08                 u64 [s0 + 0x8] = a0
  5114: 7b 56                    u64 [s0] = s1
  5116: 01                       fallthrough
      :                          @271
  5117: 82 10 40                 ra = u64 [sp + 0x40]
  5120: 82 15 38                 s0 = u64 [sp + 0x38]
  5123: 82 16 30                 s1 = u64 [sp + 0x30]
  5126: 95 11 48                 sp = sp + 0x48
  5129: 32 00                    ret
      :                          @272
  5131: 00                       trap
      :                          @273
  5132: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  5135: 7b 10 30                 u64 [sp + 0x30] = ra
  5138: 7b 15 28                 u64 [sp + 0x28] = s0
  5141: 7b 16 20                 u64 [sp + 0x20] = s1
  5144: 64 95                    s0 = a2
  5146: 64 72                    t0 = a0
  5148: 51 08 79                 jump @283 if a1 == 0
      :                          @274
  5151: 82 a7 08                 a0 = u64 [a3 + 0x8]
  5154: 51 07 7c                 jump @284 if a0 == 0
      :                          @275
  5157: 82 a9 10                 a2 = u64 [a3 + 0x10]
  5160: 51 09 aa 00              jump @291 if a2 == 0
      :                          @276
  5164: 82 a8                    a1 = u64 [a3]
  5166: 33 06 40 00 03           s1 = 0x30040
  5171: 33 03 00 00 10           t1 = 0x100000
  5176: c8 36 06                 s1 = s1 + t1
  5179: 01                       fallthrough
      :                          @277
  5180: 82 6a                    a3 = u64 [s1]
  5182: c8 5a 07                 a0 = a3 + s0
  5185: ac a7 cf 00              jump @297 if a0 <u a3
      :                          @278
  5189: 95 7b 01                 a4 = a0 + 0x1
  5192: 88 bc 01                 a5 = a4 <u 0x1
  5195: d8 b3 0b                 a4 = t1 <u a4
  5198: d4 cb 0b                 a4 = a4 | a5
  5201: 52 0b bf 00              jump @297 if a4 != 0
      :                          @279
  5205: 82 6b                    a4 = u64 [s1]
  5207: ab ab e5                 jump @277 if a4 != a3
      :                          @280
  5210: 7b 67                    u64 [s1] = a0
  5212: 33 0c                    a5 = 0
  5214: 7b 12 18                 u64 [sp + 0x18] = t0
  5217: 33 0a 40 00 03           a3 = 0x30040
  5222: 33 0b 00 00 10           a4 = 0x100000
  5227: 7b 1a                    u64 [sp] = a3
  5229: c8 ba 0a                 a3 = a3 + a4
  5232: c9 7a 07                 a0 = a3 - a0
  5235: 7b 17 10                 u64 [sp + 0x10] = a0
  5238: 7b 18 08                 u64 [sp + 0x8] = a1
  5241: 64 96                    s1 = a2
  5243: 50 10 7c d1 03           ra = 124, jump @367
      :                          @281 [@dyn 62]
  5248: 54 36 00 00 10 98 00     jump @298 if s1 <=u 1048576
      :                          @282
  5255: 82 12 18                 t0 = u64 [sp + 0x18]
  5258: 82 18 10                 a1 = u64 [sp + 0x10]
  5261: 33 07                    a0 = 0
  5263: 7b 28 08                 u64 [t0 + 0x8] = a1
  5266: 28 b5 00                 jump @304
      :                          @283
  5269: 49 12 08                 u64 [t0 + 8] = 0
  5272: 33 07 01                 a0 = 0x1
  5275: 28 ac 00                 jump @304
      :                          @284
  5278: 33 09 40 00 03           a2 = 0x30040
  5283: 33 07 00 00 10           a0 = 0x100000
  5288: c8 79 09                 a2 = a2 + a0
  5291: 01                       fallthrough
      :                          @285
  5292: 82 9a                    a3 = u64 [a2]
  5294: c8 5a 08                 a1 = a3 + s0
  5297: ac a8 5f                 jump @297 if a1 <u a3
      :                          @286
  5300: 95 8b 01                 a4 = a1 + 0x1
  5303: 88 bc 01                 a5 = a4 <u 0x1
  5306: d8 b7 0b                 a4 = a0 <u a4
  5309: d4 cb 0b                 a4 = a4 | a5
  5312: 52 0b 50                 jump @297 if a4 != 0
      :                          @287
  5315: 82 9b                    a4 = u64 [a2]
  5317: ab ab e7                 jump @285 if a4 != a3
      :                          @288
  5320: 7b 98                    u64 [a2] = a1
  5322: 33 0c                    a5 = 0
  5324: 01                       fallthrough
      :                          @289
  5325: ab ab df                 jump @285 if a4 != a3
      :                          @290
  5328: 28 31                    jump @296
      :                          @291
  5330: 33 09 40 00 03           a2 = 0x30040
  5335: 33 07 00 00 10           a0 = 0x100000
  5340: c8 79 09                 a2 = a2 + a0
  5343: 01                       fallthrough
      :                          @292
  5344: 82 9a                    a3 = u64 [a2]
  5346: c8 5a 08                 a1 = a3 + s0
  5349: ac a8 2b                 jump @297 if a1 <u a3
      :                          @293
  5352: 95 8b 01                 a4 = a1 + 0x1
  5355: 88 bc 01                 a5 = a4 <u 0x1
  5358: d8 b7 0b                 a4 = a0 <u a4
  5361: d4 cb 0b                 a4 = a4 | a5
  5364: 52 0b 1c                 jump @297 if a4 != 0
      :                          @294
  5367: 82 9b                    a4 = u64 [a2]
  5369: ab ab e7                 jump @292 if a4 != a3
      :                          @295
  5372: 7b 98                    u64 [a2] = a1
  5374: 33 0c                    a5 = 0
  5376: 01                       fallthrough
      :                          @296
  5377: 33 07 40 00 13           a0 = 0x130040
  5382: c9 87 08                 a1 = a0 - a1
  5385: 33 07                    a0 = 0
  5387: 7b 28 08                 u64 [t0 + 0x8] = a1
  5390: 28 39                    jump @304
      :                          @297
  5392: 33 07 01                 a0 = 0x1
  5395: 7b 27 08                 u64 [t0 + 0x8] = a0
  5398: 28 31                    jump @304
      :                          @298
  5400: 64 6c                    a5 = s1
  5402: 82 17                    a0 = u64 [sp]
  5404: 95 77 00 00 10           a0 = a0 + 0x100000
  5409: 82 12 18                 t0 = u64 [sp + 0x18]
  5412: 82 16 08                 s1 = u64 [sp + 0x8]
  5415: 01                       fallthrough
      :                          @299
  5416: 82 78                    a1 = u64 [a0]
  5418: c9 87 09                 a2 = a0 - a1
  5421: ab 69 11                 jump @303 if a2 != s1
      :                          @300
  5424: c9 c8 09                 a2 = a1 - a5
  5427: 01                       fallthrough
      :                          @301
  5428: 82 7a                    a3 = u64 [a0]
  5430: ab 8a f2                 jump @299 if a3 != a1
      :                          @302
  5433: 7b 79                    u64 [a0] = a2
  5435: 33 0b                    a4 = 0
  5437: 01                       fallthrough
      :                          @303
  5438: 82 18 10                 a1 = u64 [sp + 0x10]
  5441: 33 07                    a0 = 0
  5443: 7b 28 08                 u64 [t0 + 0x8] = a1
  5446: 01                       fallthrough
      :                          @304
  5447: 7b 25 10                 u64 [t0 + 0x10] = s0
  5450: 7b 27                    u64 [t0] = a0
  5452: 82 10 30                 ra = u64 [sp + 0x30]
  5455: 82 15 28                 s0 = u64 [sp + 0x28]
  5458: 82 16 20                 s1 = u64 [sp + 0x20]
  5461: 95 11 38                 sp = sp + 0x38
  5464: 32 00                    ret
      :                          @305
  5466: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  5469: 7b 10 40                 u64 [sp + 0x40] = ra
  5472: 7b 15 38                 u64 [sp + 0x38] = s0
  5475: 7b 16 30                 u64 [sp + 0x30] = s1
  5478: 95 88 01                 a1 = a1 + 0x1
  5481: 51 08 53                 jump @313 if a1 == 0
      :                          @306
  5484: 64 75                    s0 = a0
  5486: 82 77                    a0 = u64 [a0]
  5488: 97 79 01                 a2 = a0 << 0x1
  5491: 33 0a 08                 a3 = 0x8
  5494: e4 a8 08                 a1 = maxu(a1, a3)
  5497: e4 89 06                 s1 = maxu(a2, a1)
  5500: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  5503: 98 88 3f                 a1 = a1 >> 0x3f
  5506: 51 07 12                 jump @308 if a0 == 0
      :                          @307
  5509: 82 59 08                 a2 = u64 [s0 + 0x8]
  5512: 7b 19 18                 u64 [sp + 0x18] = a2
  5515: 49 11 20 01              u64 [sp + 32] = 0x1
  5519: 7b 17 28                 u64 [sp + 0x28] = a0
  5522: 28 06                    jump @309
      :                          @308
  5524: 49 11 20                 u64 [sp + 32] = 0
  5527: 01                       fallthrough
      :                          @309
  5528: 64 17                    a0 = sp
  5530: 95 1a 18                 a3 = sp + 0x18
  5533: 64 69                    a2 = s1
  5535: 50 10 7e 6d fe           ra = 126, jump @273
      :                          @310 [@dyn 63]
  5540: 82 18                    a1 = u64 [sp]
  5542: 82 17 08                 a0 = u64 [sp + 0x8]
  5545: 51 08 14                 jump @314 if a1 == 0
      :                          @311
  5548: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  5558: aa 87 0d                 jump @315 if a0 == a1
      :                          @312
  5561: 52 07 18                 jump @316 if a0 != 0
      :                          @313
  5564: 00                       trap
      :                          @314
  5565: 7b 57 08                 u64 [s0 + 0x8] = a0
  5568: 7b 56                    u64 [s0] = s1
  5570: 01                       fallthrough
      :                          @315
  5571: 82 10 40                 ra = u64 [sp + 0x40]
  5574: 82 15 38                 s0 = u64 [sp + 0x38]
  5577: 82 16 30                 s1 = u64 [sp + 0x30]
  5580: 95 11 48                 sp = sp + 0x48
  5583: 32 00                    ret
      :                          @316
  5585: 00                       trap
      :                          @317
  5586: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  5589: 7b 10 30                 u64 [sp + 0x30] = ra
  5592: 7b 15 28                 u64 [sp + 0x28] = s0
  5595: 7b 16 20                 u64 [sp + 0x20] = s1
  5598: 64 89                    a2 = a1
  5600: 82 8a 08                 a3 = u64 [a1 + 0x8]
  5603: 64 75                    s0 = a0
  5605: 51 0a 35                 jump @322 if a3 == 0
      :                          @318
  5608: 82 98                    a1 = u64 [a2]
  5610: 33 07                    a0 = 0
  5612: 95 8b 08                 a4 = a1 + 0x8
  5615: 01                       fallthrough
      :                          @319
  5616: 82 bc                    a5 = u64 [a4]
  5618: c8 c7 07                 a0 = a0 + a5
  5621: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  5624: 95 bb 10                 a4 = a4 + 0x10
  5627: 52 0a f5                 jump @319 if a3 != 0
      :                          @320
  5630: 82 9a 18                 a3 = u64 [a2 + 0x18]
  5633: 51 0a 24                 jump @324 if a3 == 0
      :                          @321
  5636: 82 88 08                 a1 = u64 [a1 + 0x8]
  5639: 8e 88                    a1 = a1 >u 0
  5641: 88 7a 10                 a3 = a0 <u 0x10
  5644: 85 aa 01                 a3 = a3 ^ 0x1
  5647: d4 a8 08                 a1 = a1 | a3
  5650: 89 7a                    a3 = a0 <s 0
  5652: e0 a8 08                 a1 = a1 & ~a3
  5655: 52 08 0a                 jump @323 if a1 != 0
      :                          @322
  5658: 33 07                    a0 = 0
  5660: 33 08 01                 a1 = 0x1
  5663: 28 4a                    jump @332
      :                          @323
  5665: 97 77 01                 a0 = a0 << 0x1
  5668: 01                       fallthrough
      :                          @324
  5669: 51 07 40                 jump @331 if a0 == 0
      :                          @325
  5672: 57 07 79                 jump @337 if a0 <s 0
      :                          @326
  5675: 64 52                    t0 = s0
  5677: 33 0b 40 00 03           a4 = 0x30040
  5682: 33 08 00 00 10           a1 = 0x100000
  5687: c8 8b 0b                 a4 = a4 + a1
  5690: 01                       fallthrough
      :                          @327
  5691: 82 bc                    a5 = u64 [a4]
  5693: c8 7c 0a                 a3 = a5 + a0
  5696: ac ca 5f                 jump @335 if a3 <u a5
      :                          @328
  5699: 95 a5 01                 s0 = a3 + 0x1
  5702: 88 56 01                 s1 = s0 <u 0x1
  5705: d8 58 05                 s0 = a1 <u s0
  5708: d4 65 05                 s0 = s0 | s1
  5711: 52 05 50                 jump @335 if s0 != 0
      :                          @329
  5714: 82 b6                    s1 = u64 [a4]
  5716: ab c6 e7                 jump @327 if s1 != a5
      :                          @330
  5719: 7b ba                    u64 [a4] = a3
  5721: 33 08 40 00 13           a1 = 0x130040
  5726: c9 a8 08                 a1 = a1 - a3
  5729: 64 25                    s0 = t0
  5731: 28 06                    jump @332
      :                          @331
  5733: 33 08 01                 a1 = 0x1
  5736: 01                       fallthrough
      :                          @332
  5737: 7b 17                    u64 [sp] = a0
  5739: 7b 18 08                 u64 [sp + 0x8] = a1
  5742: 49 11 10                 u64 [sp + 16] = 0
  5745: 33 08 d8 03 01           a1 = 0x103d8
  5750: 64 17                    a0 = sp
  5752: 50 20 80 00 8b 06        ra = 128, jump @462
      :                          @333 [@dyn 64]
  5758: 52 07 22                 jump @336 if a0 != 0
      :                          @334
  5761: 82 17 10                 a0 = u64 [sp + 0x10]
  5764: 82 18 08                 a1 = u64 [sp + 0x8]
  5767: 82 19                    a2 = u64 [sp]
  5769: 7b 57 10                 u64 [s0 + 0x10] = a0
  5772: 7b 58 08                 u64 [s0 + 0x8] = a1
  5775: 7b 59                    u64 [s0] = a2
  5777: 82 10 30                 ra = u64 [sp + 0x30]
  5780: 82 15 28                 s0 = u64 [sp + 0x28]
  5783: 82 16 20                 s1 = u64 [sp + 0x20]
  5786: 95 11 38                 sp = sp + 0x38
  5789: 32 00                    ret
      :                          @335
  5791: 00                       trap
      :                          @336
  5792: 00                       trap
      :                          @337
  5793: 00                       trap
      :                          @338 [@dyn 65]
  5794: 82 72                    t0 = u64 [a0]
  5796: 33 09 00 00 f0           a2 = 0xfffffffffff00000
  5801: 95 2a ff ff ef           a3 = t0 + 0xffffffffffefffff
  5806: ac 9a 28                 jump @344 if a3 <u a2
      :                          @339
  5809: 82 77 08                 a0 = u64 [a0 + 0x8]
  5812: 33 09 40 00 03           a2 = 0x30040
  5817: 95 99 00 00 10           a2 = a2 + 0x100000
  5822: 01                       fallthrough
      :                          @340
  5823: 82 9a                    a3 = u64 [a2]
  5825: c9 a9 0b                 a4 = a2 - a3
  5828: ab 7b 12                 jump @344 if a4 != a0
      :                          @341
  5831: c9 2a 0b                 a4 = a3 - t0
  5834: 01                       fallthrough
      :                          @342
  5835: 82 9c                    a5 = u64 [a2]
  5837: ab ac f2                 jump @340 if a5 != a3
      :                          @343
  5840: 7b 9b                    u64 [a2] = a4
  5842: 33 08                    a1 = 0
  5844: 32 00                    ret
      :                          @344
  5846: 32 00                    ret
      :                          @345 [@dyn 66]
  5848: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  5851: 7b 10 18                 u64 [sp + 0x18] = ra
  5854: 7b 15 10                 u64 [sp + 0x10] = s0
  5857: 7b 16 08                 u64 [sp + 0x8] = s1
  5860: 64 75                    s0 = a0
  5862: 82 7a 10                 a3 = u64 [a0 + 0x10]
  5865: 82 77                    a0 = u64 [a0]
  5867: c9 a7 07                 a0 = a0 - a3
  5870: 64 96                    s1 = a2
  5872: ac 97 2b                 jump @348 if a0 <u a2
      :                          @346
  5875: 7b 1a                    u64 [sp] = a3
  5877: 82 57 08                 a0 = u64 [s0 + 0x8]
  5880: c8 a7 07                 a0 = a0 + a3
  5883: 64 69                    a2 = s1
  5885: 50 20 86 00 4f 01        ra = 134, jump @367
      :                          @347 [@dyn 67]
  5891: 82 17                    a0 = u64 [sp]
  5893: c8 76 06                 s1 = s1 + a0
  5896: 7b 56 10                 u64 [s0 + 0x10] = s1
  5899: 33 07                    a0 = 0
  5901: 82 10 18                 ra = u64 [sp + 0x18]
  5904: 82 15 10                 s0 = u64 [sp + 0x10]
  5907: 82 16 08                 s1 = u64 [sp + 0x8]
  5910: 95 11 20                 sp = sp + 0x20
  5913: 32 00                    ret
      :                          @348
  5915: 64 57                    a0 = s0
  5917: 7b 18                    u64 [sp] = a1
  5919: 64 a8                    a1 = a3
  5921: 64 69                    a2 = s1
  5923: 50 20 88 00 72 fc        ra = 136, jump @261
      :                          @349 [@dyn 68]
  5929: 82 18                    a1 = u64 [sp]
  5931: 82 5a 10                 a3 = u64 [s0 + 0x10]
  5934: 28 c5                    jump @346
      :                          @350 [@dyn 69]
  5936: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  5939: 7b 10 20                 u64 [sp + 0x20] = ra
  5942: 7b 15 18                 u64 [sp + 0x18] = s0
  5945: 7b 16 10                 u64 [sp + 0x10] = s1
  5948: 64 86                    s1 = a1
  5950: 83 88                    i32 a1 = a1 + 0
  5952: 33 09 80 00              a2 = 0x80
  5956: 64 7a                    a3 = a0
  5958: ae 98 2c                 jump @355 if a1 >=u a2
      :                          @351
  5961: 82 a8 10                 a1 = u64 [a3 + 0x10]
  5964: 82 a7                    a0 = u64 [a3]
  5966: ab 78 13                 jump @354 if a1 != a0
      :                          @352
  5969: 64 a7                    a0 = a3
  5971: 64 a5                    s0 = a3
  5973: 50 20 8c 00 05 fe        ra = 140, jump @305
      :                          @353 [@dyn 70]
  5979: 64 5a                    a3 = s0
  5981: 82 58 10                 a1 = u64 [s0 + 0x10]
  5984: 01                       fallthrough
      :                          @354
  5985: 82 a7 08                 a0 = u64 [a3 + 0x8]
  5988: c8 87 07                 a0 = a0 + a1
  5991: 78 76                    u8 [a0] = s1
  5993: 95 88 01                 a1 = a1 + 0x1
  5996: 7b a8 10                 u64 [a3 + 0x10] = a1
  5999: 28 ac 00                 jump @363
      :                          @355
  6002: 8b 67 0b                 i32 a0 = s1 >> 0xb
  6005: 48 11 0c                 u32 [sp + 12] = 0
  6008: 52 07 1c                 jump @357 if a0 != 0
      :                          @356
  6011: 98 67 06                 a0 = s1 >> 0x6
  6014: 86 77 c0 00              a0 = a0 | 0xc0
  6018: 78 17 0c                 u8 [sp + 0xc] = a0
  6021: 84 67 3f                 a0 = s1 & 0x3f
  6024: 86 77 80 00              a0 = a0 | 0x80
  6028: 78 17 0d                 u8 [sp + 0xd] = a0
  6031: 33 06 02                 s1 = 0x2
  6034: 28 63                    jump @360
      :                          @357
  6036: 8b 67 10                 i32 a0 = s1 >> 0x10
  6039: 52 07 29                 jump @359 if a0 != 0
      :                          @358
  6042: 98 67 0c                 a0 = s1 >> 0xc
  6045: 86 77 e0 00              a0 = a0 | 0xe0
  6049: 78 17 0c                 u8 [sp + 0xc] = a0
  6052: 97 67 34                 a0 = s1 << 0x34
  6055: 98 77 3a                 a0 = a0 >> 0x3a
  6058: 95 77 80 00              a0 = a0 + 0x80
  6062: 78 17 0d                 u8 [sp + 0xd] = a0
  6065: 84 67 3f                 a0 = s1 & 0x3f
  6068: 86 77 80 00              a0 = a0 | 0x80
  6072: 78 17 0e                 u8 [sp + 0xe] = a0
  6075: 33 06 03                 s1 = 0x3
  6078: 28 37                    jump @360
      :                          @359
  6080: 97 67 2b                 a0 = s1 << 0x2b
  6083: 98 77 3d                 a0 = a0 >> 0x3d
  6086: 95 77 f0 00              a0 = a0 + 0xf0
  6090: 78 17 0c                 u8 [sp + 0xc] = a0
  6093: 97 67 2e                 a0 = s1 << 0x2e
  6096: 98 77 3a                 a0 = a0 >> 0x3a
  6099: 95 77 80 00              a0 = a0 + 0x80
  6103: 78 17 0d                 u8 [sp + 0xd] = a0
  6106: 97 67 34                 a0 = s1 << 0x34
  6109: 98 77 3a                 a0 = a0 >> 0x3a
  6112: 95 77 80 00              a0 = a0 + 0x80
  6116: 78 17 0e                 u8 [sp + 0xe] = a0
  6119: 84 67 3f                 a0 = s1 & 0x3f
  6122: 86 77 80 00              a0 = a0 | 0x80
  6126: 78 17 0f                 u8 [sp + 0xf] = a0
  6129: 33 06 04                 s1 = 0x4
  6132: 01                       fallthrough
      :                          @360
  6133: 82 a5 10                 s0 = u64 [a3 + 0x10]
  6136: 82 a7                    a0 = u64 [a3]
  6138: c9 57 07                 a0 = a0 - s0
  6141: ac 67 2e                 jump @364 if a0 <u s1
      :                          @361
  6144: 7b 1a                    u64 [sp] = a3
  6146: 82 a7 08                 a0 = u64 [a3 + 0x8]
  6149: c8 57 07                 a0 = a0 + s0
  6152: 95 18 0c                 a1 = sp + 0xc
  6155: 64 69                    a2 = s1
  6157: 50 20 8e 00 3f           ra = 142, jump @367
      :                          @362 [@dyn 71]
  6162: c8 56 06                 s1 = s1 + s0
  6165: 82 17                    a0 = u64 [sp]
  6167: 7b 76 10                 u64 [a0 + 0x10] = s1
  6170: 01                       fallthrough
      :                          @363
  6171: 33 07                    a0 = 0
  6173: 82 10 20                 ra = u64 [sp + 0x20]
  6176: 82 15 18                 s0 = u64 [sp + 0x18]
  6179: 82 16 10                 s1 = u64 [sp + 0x10]
  6182: 95 11 28                 sp = sp + 0x28
  6185: 32 00                    ret
      :                          @364
  6187: 64 a7                    a0 = a3
  6189: 64 58                    a1 = s0
  6191: 64 69                    a2 = s1
  6193: 64 a5                    s0 = a3
  6195: 50 20 90 00 62 fb        ra = 144, jump @261
      :                          @365 [@dyn 72]
  6201: 64 5a                    a3 = s0
  6203: 82 55 10                 s0 = u64 [s0 + 0x10]
  6206: 28 c2                    jump @361
      :                          @366 [@dyn 73]
  6208: 64 8a                    a3 = a1
  6210: 33 08 d8 03 01           a1 = 0x103d8
  6215: 64 a9                    a2 = a3
  6217: 28 ba 04                 jump @462
      :                          @367
  6220: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  6223: 7b 10 18                 u64 [sp + 0x18] = ra
  6226: 7b 15 10                 u64 [sp + 0x10] = s0
  6229: 7b 16 08                 u64 [sp + 0x8] = s1
  6232: 53 19 10 64              jump @376 if a2 <u 16
      :                          @368
  6236: 8d 7a                    i32 a3 = -a0
  6238: 84 a2 07                 t0 = a3 & 0x7
  6241: c8 27 0b                 a4 = a0 + t0
  6244: 51 02 15                 jump @371 if t0 == 0
      :                          @369
  6247: 64 8c                    a5 = a1
  6249: 64 75                    s0 = a0
  6251: 01                       fallthrough
      :                          @370
  6252: 7c ca                    a3 = u8 [a5]
  6254: 78 5a                    u8 [s0] = a3
  6256: 95 55 01                 s0 = s0 + 0x1
  6259: 95 cc 01                 a5 = a5 + 0x1
  6262: ac b5 f6                 jump @370 if s0 <u a4
      :                          @371
  6265: c8 28 03                 t1 = a1 + t0
  6268: c9 29 02                 t0 = a2 - t0
  6271: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  6274: 84 38 07                 a1 = t1 & 0x7
  6277: c8 4b 0a                 a3 = a4 + t2
  6280: 51 08 3b                 jump @378 if a1 == 0
      :                          @372
  6283: 58 04 4b                 jump @381 if t2 <=s 0
      :                          @373
  6286: 97 38 03                 a1 = t1 << 0x3
  6289: 84 80 38                 ra = a1 & 0x38
  6292: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  6295: 82 c5                    s0 = u64 [a5]
  6297: 8d 88                    i32 a1 = -a1
  6299: 84 88 38                 a1 = a1 & 0x38
  6302: 95 cc 08                 a5 = a5 + 0x8
  6305: 01                       fallthrough
      :                          @374
  6306: 82 c6                    s1 = u64 [a5]
  6308: d0 05 05                 s0 = s0 >> ra
  6311: cf 86 09                 a2 = s1 << a1
  6314: d4 59 09                 a2 = a2 | s0
  6317: 7b b9                    u64 [a4] = a2
  6319: 95 bb 08                 a4 = a4 + 0x8
  6322: 95 cc 08                 a5 = a5 + 0x8
  6325: 64 65                    s0 = s1
  6327: ac ab eb                 jump @374 if a4 <u a3
      :                          @375
  6330: 28 1c                    jump @381
      :                          @376
  6332: 64 7a                    a3 = a0
  6334: 52 09 21                 jump @382 if a2 != 0
      :                          @377
  6337: 28 2f                    jump @384
      :                          @378
  6339: 58 04 13                 jump @381 if t2 <=s 0
      :                          @379
  6342: 64 38                    a1 = t1
  6344: 01                       fallthrough
      :                          @380
  6345: 82 89                    a2 = u64 [a1]
  6347: 7b b9                    u64 [a4] = a2
  6349: 95 bb 08                 a4 = a4 + 0x8
  6352: 95 88 08                 a1 = a1 + 0x8
  6355: ac ab f6                 jump @380 if a4 <u a3
      :                          @381
  6358: c8 43 08                 a1 = t1 + t2
  6361: 84 29 07                 a2 = t0 & 0x7
  6364: 51 09 14                 jump @384 if a2 == 0
      :                          @382
  6367: c8 a9 09                 a2 = a2 + a3
  6370: 01                       fallthrough
      :                          @383
  6371: 7c 8b                    a4 = u8 [a1]
  6373: 78 ab                    u8 [a3] = a4
  6375: 95 aa 01                 a3 = a3 + 0x1
  6378: 95 88 01                 a1 = a1 + 0x1
  6381: ac 9a f6                 jump @383 if a3 <u a2
      :                          @384
  6384: 82 10 18                 ra = u64 [sp + 0x18]
  6387: 82 15 10                 s0 = u64 [sp + 0x10]
  6390: 82 16 08                 s1 = u64 [sp + 0x8]
  6393: 95 11 20                 sp = sp + 0x20
  6396: 32 00                    ret
      :                          @385
  6398: 53 19 10 48              jump @394 if a2 <u 16
      :                          @386
  6402: 8d 7a                    i32 a3 = -a0
  6404: 84 aa 07                 a3 = a3 & 0x7
  6407: c8 a7 0b                 a4 = a0 + a3
  6410: 51 0a 0e                 jump @389 if a3 == 0
      :                          @387
  6413: 64 7c                    a5 = a0
  6415: 01                       fallthrough
      :                          @388
  6416: 78 c8                    u8 [a5] = a1
  6418: 95 cc 01                 a5 = a5 + 0x1
  6421: ac bc fb                 jump @388 if a5 <u a4
      :                          @389
  6424: c9 a9 03                 t1 = a2 - a3
  6427: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  6430: c8 cb 0a                 a3 = a4 + a5
  6433: 58 0c 1d                 jump @392 if a5 <=s 0
      :                          @390
  6436: 84 82 ff 00              t0 = a1 & 0xff
  6440: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  6450: ca 92 0c                 a5 = t0 * a2
  6453: 01                       fallthrough
      :                          @391
  6454: 7b bc                    u64 [a4] = a5
  6456: 95 bb 08                 a4 = a4 + 0x8
  6459: ac ab fb                 jump @391 if a4 <u a3
      :                          @392
  6462: 84 39 07                 a2 = t1 & 0x7
  6465: 52 09 0a                 jump @395 if a2 != 0
      :                          @393
  6468: 28 13                    jump @397
      :                          @394
  6470: 64 7a                    a3 = a0
  6472: 51 09 0f                 jump @397 if a2 == 0
      :                          @395
  6475: c8 a9 09                 a2 = a2 + a3
  6478: 01                       fallthrough
      :                          @396
  6479: 78 a8                    u8 [a3] = a1
  6481: 95 aa 01                 a3 = a3 + 0x1
  6484: ac 9a fb                 jump @396 if a3 <u a2
      :                          @397
  6487: 32 00                    ret
      :                          @398 [@dyn 74]
  6489: 82 77                    a0 = u64 [a0]
  6491: 01                       fallthrough
      :                          @399
  6492: 28                       jump @399
      :                          @400
  6493: 95 11 a8                 sp = sp + 0xffffffffffffffa8
  6496: 7b 10 50                 u64 [sp + 0x50] = ra
  6499: 7b 15 48                 u64 [sp + 0x48] = s0
  6502: 7b 16 40                 u64 [sp + 0x40] = s1
  6505: 82 79                    a2 = u64 [a0]
  6507: 7b 18                    u64 [sp] = a1
  6509: 98 9a 04                 a3 = a2 >> 0x4
  6512: 33 08 27                 a1 = 0x27
  6515: 53 2a 71 02 84 00        jump @403 if a3 <u 625
      :                          @401
  6521: 33 08 27                 a1 = 0x27
  6524: 95 1a 3e                 a3 = sp + 0x3e
  6527: 3a 07 00 00 03           a0 = u64 [0x30000]
  6532: 7b 17 10                 u64 [sp + 0x10] = a0
  6535: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
  6541: 33 00 7b 14              ra = 0x147b
  6545: 33 0c 58 04 01           a5 = 0x10458
  6550: 33 04 ff e0 f5 05        t2 = 0x5f5e0ff
  6556: 33 05 9c                 s0 = 0xffffffffffffff9c
  6559: 01                       fallthrough
      :                          @402
  6560: 64 93                    t1 = a2
  6562: 82 17 10                 a0 = u64 [sp + 0x10]
  6565: d6 79 09                 a2 = a2 mulhu a0
  6568: 98 99 0b                 a2 = a2 >> 0xb
  6571: 82 17 08                 a0 = u64 [sp + 0x8]
  6574: c0 79 0b                 i32 a4 = a2 * a0
  6577: c8 3b 06                 s1 = a4 + t1
  6580: 97 6b 30                 a4 = s1 << 0x30
  6583: 98 bb 32                 a4 = a4 >> 0x32
  6586: ca 0b 0b                 a4 = a4 * ra
  6589: 98 b7 11                 a0 = a4 >> 0x11
  6592: 98 bb 10                 a4 = a4 >> 0x10
  6595: 84 bb fe 07              a4 = a4 & 0x7fe
  6599: ca 57 07                 a0 = a0 * s0
  6602: c8 67 07                 a0 = a0 + s1
  6605: 97 77 31                 a0 = a0 << 0x31
  6608: 98 77 30                 a0 = a0 >> 0x30
  6611: c8 cb 0b                 a4 = a4 + a5
  6614: 7c b6                    s1 = u8 [a4]
  6616: 7c bb 01                 a4 = u8 [a4 + 0x1]
  6619: c8 c7 07                 a0 = a0 + a5
  6622: 7c 72 01                 t0 = u8 [a0 + 0x1]
  6625: 7c 77                    a0 = u8 [a0]
  6627: 78 ab ff                 u8 [a3 + 0xffffffffffffffff] = a4
  6630: 78 a6 fe                 u8 [a3 + 0xfffffffffffffffe] = s1
  6633: 78 a2 01                 u8 [a3 + 0x1] = t0
  6636: 78 a7                    u8 [a3] = a0
  6638: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
  6641: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
  6644: ac 34 ac                 jump @402 if t2 <u t1
      :                          @403
  6647: 54 19 63 3b              jump @405 if a2 <=u 99
      :                          @404
  6651: 97 97 30                 a0 = a2 << 0x30
  6654: 98 77 32                 a0 = a0 >> 0x32
  6657: 96 77 7b 14              a0 = a0 * 0x147b
  6661: 98 77 11                 a0 = a0 >> 0x11
  6664: 96 7a 9c                 a3 = a0 * 0xffffffffffffff9c
  6667: c8 a9 09                 a2 = a2 + a3
  6670: 97 99 31                 a2 = a2 << 0x31
  6673: 98 99 30                 a2 = a2 >> 0x30
  6676: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  6679: 33 0a 58 04 01           a3 = 0x10458
  6684: c8 a9 09                 a2 = a2 + a3
  6687: 7c 9a 01                 a3 = u8 [a2 + 0x1]
  6690: 7c 99                    a2 = u8 [a2]
  6692: 95 1b 19                 a4 = sp + 0x19
  6695: c8 8b 0b                 a4 = a4 + a1
  6698: 78 ba 01                 u8 [a4 + 0x1] = a3
  6701: 78 b9                    u8 [a4] = a2
  6703: 64 79                    a2 = a0
  6705: 01                       fallthrough
      :                          @405
  6706: 55 19 0a 14              jump @407 if a2 >=u 10
      :                          @406
  6710: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  6713: 95 17 19                 a0 = sp + 0x19
  6716: c8 87 07                 a0 = a0 + a1
  6719: 83 99 30                 i32 a2 = a2 + 0x30
  6722: 78 79                    u8 [a0] = a2
  6724: 28 21                    jump @408
      :                          @407
  6726: 97 99 01                 a2 = a2 << 0x1
  6729: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  6732: 33 07 58 04 01           a0 = 0x10458
  6737: c8 97 07                 a0 = a0 + a2
  6740: 7c 79 01                 a2 = u8 [a0 + 0x1]
  6743: 7c 77                    a0 = u8 [a0]
  6745: 95 1a 19                 a3 = sp + 0x19
  6748: c8 8a 0a                 a3 = a3 + a1
  6751: 78 a9 01                 u8 [a3 + 0x1] = a2
  6754: 78 a7                    u8 [a3] = a0
  6756: 01                       fallthrough
      :                          @408
  6757: 95 1a 19                 a3 = sp + 0x19
  6760: c8 8a 0a                 a3 = a3 + a1
  6763: 9a 8b 27                 a4 = 0x27 - a1
  6766: 33 08 08 04 01           a1 = 0x10408
  6771: 82 17                    a0 = u64 [sp]
  6773: 33 09                    a2 = 0
  6775: 50 20 96 00 13           ra = 150, jump @410
      :                          @409 [@dyn 75]
  6780: 82 10 50                 ra = u64 [sp + 0x50]
  6783: 82 15 48                 s0 = u64 [sp + 0x48]
  6786: 82 16 40                 s1 = u64 [sp + 0x40]
  6789: 95 11 58                 sp = sp + 0x58
  6792: 32 00                    ret
      :                          @410
  6794: 95 11 98                 sp = sp + 0xffffffffffffff98
  6797: 7b 10 60                 u64 [sp + 0x60] = ra
  6800: 7b 15 58                 u64 [sp + 0x58] = s0
  6803: 7b 16 50                 u64 [sp + 0x50] = s1
  6806: 80 73 34                 t1 = u32 [a0 + 0x34]
  6809: 7b 1a 20                 u64 [sp + 0x20] = a3
  6812: 64 9c                    a5 = a2
  6814: 84 36 01                 s1 = t1 & 0x1
  6817: 33 02 2b                 t0 = 0x2b
  6820: 33 09 00 00 11           a2 = 0x110000
  6825: 84 3a 04                 a3 = t1 & 0x4
  6828: 7b 1b 28                 u64 [sp + 0x28] = a4
  6831: c8 b6 04                 t2 = s1 + a4
  6834: 7b 1c 30                 u64 [sp + 0x30] = a5
  6837: 52 0a 10                 jump @413 if a3 != 0
      :                          @411
  6840: 49 11 38                 u64 [sp + 56] = 0
  6843: 82 78                    a1 = u64 [a0]
  6845: 94 69 2b                 a2 = 0x2b if s1 != 0
  6848: 52 08 35                 jump @417 if a1 != 0
      :                          @412
  6851: 28 56                    jump @422
      :                          @413
  6853: 7b 18 38                 u64 [sp + 0x38] = a1
  6856: 33 09                    a2 = 0
  6858: 51 0c 1b                 jump @416 if a5 == 0
      :                          @414
  6861: 82 1b 38                 a4 = u64 [sp + 0x38]
  6864: 01                       fallthrough
      :                          @415
  6865: 7d b5                    s0 = i8 [a4]
  6867: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
  6870: 85 5a 01                 a3 = s0 ^ 0x1
  6873: c8 a9 09                 a2 = a2 + a3
  6876: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  6879: 95 bb 01                 a4 = a4 + 0x1
  6882: 52 0c ef                 jump @415 if a5 != 0
      :                          @416
  6885: c8 94 04                 t2 = t2 + a2
  6888: 33 09 00 00 11           a2 = 0x110000
  6893: 82 78                    a1 = u64 [a0]
  6895: db 62 09                 a2 = t0 if s1 != 0
  6898: 51 08 27                 jump @422 if a1 == 0
      :                          @417
  6901: 82 7a 08                 a3 = u64 [a0 + 0x8]
  6904: ae a4 21                 jump @422 if t2 >=u a3
      :                          @418
  6907: 84 38 08                 a1 = t1 & 0x8
  6910: 52 08 51                 jump @425 if a1 != 0
      :                          @419
  6913: 7c 76 38                 s1 = u8 [a0 + 0x38]
  6916: c9 4a 0a                 a3 = a3 - t2
  6919: 7b 19 18                 u64 [sp + 0x18] = a2
  6922: 5a 16 01 a0 00           jump @432 if s1 >s 1
      :                          @420
  6927: 52 06 ad 00              jump @434 if s1 != 0
      :                          @421
  6931: 7b 1a 10                 u64 [sp + 0x10] = a3
  6934: 28 ac 00                 jump @435
      :                          @422
  6937: 82 75 20                 s0 = u64 [a0 + 0x20]
  6940: 82 76 28                 s1 = u64 [a0 + 0x28]
  6943: 64 57                    a0 = s0
  6945: 64 68                    a1 = s1
  6947: 82 1a 38                 a3 = u64 [sp + 0x38]
  6950: 82 1b 30                 a4 = u64 [sp + 0x30]
  6953: 50 20 98 00 75 01        ra = 152, jump @455
      :                          @423 [@dyn 76]
  6959: 33 08 01                 a1 = 0x1
  6962: 52 07 be 00              jump @440 if a0 != 0
      :                          @424
  6966: 82 6c 18                 a5 = u64 [s1 + 0x18]
  6969: 64 57                    a0 = s0
  6971: 82 18 20                 a1 = u64 [sp + 0x20]
  6974: 82 19 28                 a2 = u64 [sp + 0x28]
  6977: 82 10 60                 ra = u64 [sp + 0x60]
  6980: 82 15 58                 s0 = u64 [sp + 0x58]
  6983: 82 16 50                 s1 = u64 [sp + 0x50]
  6986: 95 11 68                 sp = sp + 0x68
  6989: 32 0c                    jump [a5]
      :                          @425
  6991: 7b 1a 40                 u64 [sp + 0x40] = a3
  6994: 64 45                    s0 = t2
  6996: 81 78 30                 a1 = i32 [a0 + 0x30]
  6999: 7b 18 10                 u64 [sp + 0x10] = a1
  7002: 7c 7a 38                 a3 = u8 [a0 + 0x38]
  7005: 7b 1a 08                 u64 [sp + 0x8] = a3
  7008: 82 7a 20                 a3 = u64 [a0 + 0x20]
  7011: 82 78 28                 a1 = u64 [a0 + 0x28]
  7014: 48 17 30 30              u32 [a0 + 48] = 0x30
  7018: 7b 17                    u64 [sp] = a0
  7020: 46 17 38 01              u8 [a0 + 56] = 0x1
  7024: 7b 1a 48                 u64 [sp + 0x48] = a3
  7027: 64 a7                    a0 = a3
  7029: 64 86                    s1 = a1
  7031: 82 1a 38                 a3 = u64 [sp + 0x38]
  7034: 82 1b 30                 a4 = u64 [sp + 0x30]
  7037: 50 20 9a 00 21 01        ra = 154, jump @455
      :                          @426 [@dyn 77]
  7043: 52 07 69                 jump @439 if a0 != 0
      :                          @427
  7046: 82 17 40                 a0 = u64 [sp + 0x40]
  7049: c9 57 05                 s0 = a0 - s0
  7052: 95 55 01                 s0 = s0 + 0x1
  7055: 01                       fallthrough
      :                          @428
  7056: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  7059: 51 05 cb 00              jump @450 if s0 == 0
      :                          @429
  7063: 82 69 20                 a2 = u64 [s1 + 0x20]
  7066: 33 08 30                 a1 = 0x30
  7069: 82 17 48                 a0 = u64 [sp + 0x48]
  7072: b4 90 02 9c 00           ra = 156, jump [a2]
      :                          @430 [@dyn 78]
  7077: 51 07 eb                 jump @428 if a0 == 0
      :                          @431
  7080: 28 44                    jump @439
      :                          @432
  7082: 52 16 02 12              jump @434 if s1 != 2
      :                          @433
  7086: 98 a6 01                 s1 = a3 >> 0x1
  7089: 95 a8 01                 a1 = a3 + 0x1
  7092: 98 88 01                 a1 = a1 >> 0x1
  7095: 7b 18 10                 u64 [sp + 0x10] = a1
  7098: 28 08                    jump @435
      :                          @434
  7100: 64 a6                    s1 = a3
  7102: 49 11 10                 u64 [sp + 16] = 0
  7105: 01                       fallthrough
      :                          @435
  7106: 82 78 20                 a1 = u64 [a0 + 0x20]
  7109: 7b 18 48                 u64 [sp + 0x48] = a1
  7112: 82 75 28                 s0 = u64 [a0 + 0x28]
  7115: 81 77 30                 a0 = i32 [a0 + 0x30]
  7118: 7b 17 40                 u64 [sp + 0x40] = a0
  7121: 95 66 01                 s1 = s1 + 0x1
  7124: 01                       fallthrough
      :                          @436
  7125: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  7128: 51 06 28                 jump @441 if s1 == 0
      :                          @437
  7131: 82 59 20                 a2 = u64 [s0 + 0x20]
  7134: 82 17 48                 a0 = u64 [sp + 0x48]
  7137: 82 18 40                 a1 = u64 [sp + 0x40]
  7140: b4 90 02 9e 00           ra = 158, jump [a2]
      :                          @438 [@dyn 79]
  7145: 51 07 ec                 jump @436 if a0 == 0
      :                          @439
  7148: 33 08 01                 a1 = 0x1
  7151: 01                       fallthrough
      :                          @440
  7152: 64 87                    a0 = a1
  7154: 82 10 60                 ra = u64 [sp + 0x60]
  7157: 82 15 58                 s0 = u64 [sp + 0x58]
  7160: 82 16 50                 s1 = u64 [sp + 0x50]
  7163: 95 11 68                 sp = sp + 0x68
  7166: 32 00                    ret
      :                          @441
  7168: 82 16 48                 s1 = u64 [sp + 0x48]
  7171: 64 67                    a0 = s1
  7173: 64 58                    a1 = s0
  7175: 82 19 18                 a2 = u64 [sp + 0x18]
  7178: 82 1a 38                 a3 = u64 [sp + 0x38]
  7181: 82 1b 30                 a4 = u64 [sp + 0x30]
  7184: 50 20 a0 00 8e 00        ra = 160, jump @455
      :                          @442 [@dyn 80]
  7190: 33 08 01                 a1 = 0x1
  7193: 52 07 d7                 jump @440 if a0 != 0
      :                          @443
  7196: 82 5a 18                 a3 = u64 [s0 + 0x18]
  7199: 64 67                    a0 = s1
  7201: 82 18 20                 a1 = u64 [sp + 0x20]
  7204: 82 19 28                 a2 = u64 [sp + 0x28]
  7207: b4 a0 02 a2 00           ra = 162, jump [a3]
      :                          @444 [@dyn 81]
  7212: 33 08 01                 a1 = 0x1
  7215: 52 07 c1                 jump @440 if a0 != 0
      :                          @445
  7218: 82 17 10                 a0 = u64 [sp + 0x10]
  7221: 9a 77                    a0 = -a0
  7223: 7b 17 38                 u64 [sp + 0x38] = a0
  7226: 33 06 ff                 s1 = 0xffffffffffffffff
  7229: 01                       fallthrough
      :                          @446
  7230: 82 17 38                 a0 = u64 [sp + 0x38]
  7233: c8 67 07                 a0 = a0 + s1
  7236: 51 17 ff 45              jump @453 if a0 == 4294967295
      :                          @447
  7240: 82 59 20                 a2 = u64 [s0 + 0x20]
  7243: 82 17 48                 a0 = u64 [sp + 0x48]
  7246: 82 18 40                 a1 = u64 [sp + 0x40]
  7249: b4 90 02 a4 00           ra = 164, jump [a2]
      :                          @448 [@dyn 82]
  7254: 95 66 01                 s1 = s1 + 0x1
  7257: 51 07 e5                 jump @446 if a0 == 0
      :                          @449
  7260: 28 39                    jump @454
      :                          @450
  7262: 82 6a 18                 a3 = u64 [s1 + 0x18]
  7265: 82 17 48                 a0 = u64 [sp + 0x48]
  7268: 82 18 20                 a1 = u64 [sp + 0x20]
  7271: 82 19 28                 a2 = u64 [sp + 0x28]
  7274: b4 a0 02 a6 00           ra = 166, jump [a3]
      :                          @451 [@dyn 83]
  7279: 33 08 01                 a1 = 0x1
  7282: 52 07 7e ff              jump @440 if a0 != 0
      :                          @452
  7286: 33 08                    a1 = 0
  7288: 82 16                    s1 = u64 [sp]
  7290: 82 17 10                 a0 = u64 [sp + 0x10]
  7293: 7a 67 30                 u32 [s1 + 0x30] = a0
  7296: 82 17 08                 a0 = u64 [sp + 0x8]
  7299: 78 67 38                 u8 [s1 + 0x38] = a0
  7302: 28 6a ff                 jump @440
      :                          @453
  7305: 82 16 10                 s1 = u64 [sp + 0x10]
  7308: 82 17 10                 a0 = u64 [sp + 0x10]
  7311: d8 76 08                 a1 = s1 <u a0
  7314: 28 5e ff                 jump @440
      :                          @454
  7317: 82 17 10                 a0 = u64 [sp + 0x10]
  7320: d8 76 08                 a1 = s1 <u a0
  7323: 28 55 ff                 jump @440
      :                          @455
  7326: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  7329: 7b 10 20                 u64 [sp + 0x20] = ra
  7332: 7b 15 18                 u64 [sp + 0x18] = s0
  7335: 7b 16 10                 u64 [sp + 0x10] = s1
  7338: 83 9c                    i32 a5 = a2 + 0
  7340: 33 02 00 00 11           t0 = 0x110000
  7345: 64 a6                    s1 = a3
  7347: 64 85                    s0 = a1
  7349: 64 7a                    a3 = a0
  7351: aa 2c 21                 jump @458 if a5 == t0
      :                          @456
  7354: 82 5c 20                 a5 = u64 [s0 + 0x20]
  7357: 64 a7                    a0 = a3
  7359: 64 98                    a1 = a2
  7361: 7b 1b 08                 u64 [sp + 0x8] = a4
  7364: 7b 1a                    u64 [sp] = a3
  7366: b4 c0 02 a8 00           ra = 168, jump [a5]
      :                          @457 [@dyn 84]
  7371: 82 1a                    a3 = u64 [sp]
  7373: 82 1b 08                 a4 = u64 [sp + 0x8]
  7376: 64 78                    a1 = a0
  7378: 33 07 01                 a0 = 0x1
  7381: 52 08 20                 jump @461 if a1 != 0
      :                          @458
  7384: 51 06 1a                 jump @460 if s1 == 0
      :                          @459
  7387: 82 5c 18                 a5 = u64 [s0 + 0x18]
  7390: 64 a7                    a0 = a3
  7392: 64 68                    a1 = s1
  7394: 64 b9                    a2 = a4
  7396: 82 10 20                 ra = u64 [sp + 0x20]
  7399: 82 15 18                 s0 = u64 [sp + 0x18]
  7402: 82 16 10                 s1 = u64 [sp + 0x10]
  7405: 95 11 28                 sp = sp + 0x28
  7408: 32 0c                    jump [a5]
      :                          @460
  7410: 33 07                    a0 = 0
  7412: 01                       fallthrough
      :                          @461
  7413: 82 10 20                 ra = u64 [sp + 0x20]
  7416: 82 15 18                 s0 = u64 [sp + 0x18]
  7419: 82 16 10                 s1 = u64 [sp + 0x10]
  7422: 95 11 28                 sp = sp + 0x28
  7425: 32 00                    ret
      :                          @462
  7427: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  7431: 7b 10 80 00              u64 [sp + 0x80] = ra
  7435: 7b 15 78                 u64 [sp + 0x78] = s0
  7438: 7b 16 70                 u64 [sp + 0x70] = s1
  7441: 49 11 60 20              u64 [sp + 96] = 0x20
  7445: 33 0a 03                 a3 = 0x3
  7448: 78 1a 68                 u8 [sp + 0x68] = a3
  7451: 82 96 20                 s1 = u64 [a2 + 0x20]
  7454: 49 11 30                 u64 [sp + 48] = 0
  7457: 49 11 40                 u64 [sp + 64] = 0
  7460: 7b 17 50                 u64 [sp + 0x50] = a0
  7463: 7b 18 58                 u64 [sp + 0x58] = a1
  7466: 51 06 0a 01              jump @484 if s1 == 0
      :                          @463
  7470: 82 97 28                 a0 = u64 [a2 + 0x28]
  7473: 51 07 79 01              jump @494 if a0 == 0
      :                          @464
  7477: 49 11 28                 u64 [sp + 40] = 0
  7480: 82 95                    s0 = u64 [a2]
  7482: 7b 19 08                 u64 [sp + 0x8] = a2
  7485: 82 98 10                 a1 = u64 [a2 + 0x10]
  7488: 7b 18 18                 u64 [sp + 0x18] = a1
  7491: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  7494: 97 88 03                 a1 = a1 << 0x3
  7497: 98 88 03                 a1 = a1 >> 0x3
  7500: 95 88 01                 a1 = a1 + 0x1
  7503: 7b 18                    u64 [sp] = a1
  7505: 95 55 08                 s0 = s0 + 0x8
  7508: 96 78 38                 a1 = a0 * 0x38
  7511: 95 66 18                 s1 = s1 + 0x18
  7514: 33 07 94 00              a0 = 0x94
  7518: 7b 17 10                 u64 [sp + 0x10] = a0
  7521: 01                       fallthrough
      :                          @465
  7522: 7b 18 20                 u64 [sp + 0x20] = a1
  7525: 82 59                    a2 = u64 [s0]
  7527: 51 09 18                 jump @468 if a2 == 0
      :                          @466
  7530: 82 1a 58                 a3 = u64 [sp + 0x58]
  7533: 82 17 50                 a0 = u64 [sp + 0x50]
  7536: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  7539: 82 aa 18                 a3 = u64 [a3 + 0x18]
  7542: b4 a0 02 aa 00           ra = 170, jump [a3]
      :                          @467 [@dyn 85]
  7547: 52 07 55 01              jump @497 if a0 != 0
      :                          @468
  7551: 81 67 10                 a0 = i32 [s1 + 0x10]
  7554: 7a 17 60                 u32 [sp + 0x60] = a0
  7557: 7c 67 18                 a0 = u8 [s1 + 0x18]
  7560: 78 17 68                 u8 [sp + 0x68] = a0
  7563: 81 67 14                 a0 = i32 [s1 + 0x14]
  7566: 7a 17 64                 u32 [sp + 0x64] = a0
  7569: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  7572: 82 67                    a0 = u64 [s1]
  7574: 51 08 26                 jump @473 if a1 == 0
      :                          @469
  7577: 52 18 01 16              jump @471 if a1 != 1
      :                          @470
  7581: 97 77 04                 a0 = a0 << 0x4
  7584: 82 18 18                 a1 = u64 [sp + 0x18]
  7587: c8 87 07                 a0 = a0 + a1
  7590: 82 78 08                 a1 = u64 [a0 + 0x8]
  7593: 82 19 10                 a2 = u64 [sp + 0x10]
  7596: aa 98 07                 jump @472 if a1 == a2
      :                          @471
  7599: 33 08                    a1 = 0
  7601: 28 0f                    jump @474
      :                          @472
  7603: 82 77                    a0 = u64 [a0]
  7605: 82 77                    a0 = u64 [a0]
  7607: 33 08 01                 a1 = 0x1
  7610: 28 06                    jump @474
      :                          @473
  7612: 33 08 01                 a1 = 0x1
  7615: 01                       fallthrough
      :                          @474
  7616: 7b 18 30                 u64 [sp + 0x30] = a1
  7619: 7b 17 38                 u64 [sp + 0x38] = a0
  7622: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  7625: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  7628: 51 08 26                 jump @479 if a1 == 0
      :                          @475
  7631: 52 18 01 16              jump @477 if a1 != 1
      :                          @476
  7635: 97 77 04                 a0 = a0 << 0x4
  7638: 82 18 18                 a1 = u64 [sp + 0x18]
  7641: c8 87 07                 a0 = a0 + a1
  7644: 82 78 08                 a1 = u64 [a0 + 0x8]
  7647: 82 19 10                 a2 = u64 [sp + 0x10]
  7650: aa 98 07                 jump @478 if a1 == a2
      :                          @477
  7653: 33 08                    a1 = 0
  7655: 28 0f                    jump @480
      :                          @478
  7657: 82 77                    a0 = u64 [a0]
  7659: 82 77                    a0 = u64 [a0]
  7661: 33 08 01                 a1 = 0x1
  7664: 28 06                    jump @480
      :                          @479
  7666: 33 08 01                 a1 = 0x1
  7669: 01                       fallthrough
      :                          @480
  7670: 7b 18 40                 u64 [sp + 0x40] = a1
  7673: 7b 17 48                 u64 [sp + 0x48] = a0
  7676: 82 67 08                 a0 = u64 [s1 + 0x8]
  7679: 97 77 04                 a0 = a0 << 0x4
  7682: 82 18 18                 a1 = u64 [sp + 0x18]
  7685: c8 78 08                 a1 = a1 + a0
  7688: 82 87                    a0 = u64 [a1]
  7690: 82 89 08                 a2 = u64 [a1 + 0x8]
  7693: 95 18 30                 a1 = sp + 0x30
  7696: b4 90 02 ac 00           ra = 172, jump [a2]
      :                          @481 [@dyn 86]
  7701: 52 07 bb 00              jump @497 if a0 != 0
      :                          @482
  7705: 95 55 10                 s0 = s0 + 0x10
  7708: 82 18 20                 a1 = u64 [sp + 0x20]
  7711: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  7714: 95 66 38                 s1 = s1 + 0x38
  7717: 82 17 28                 a0 = u64 [sp + 0x28]
  7720: 95 77 01                 a0 = a0 + 0x1
  7723: 7b 17 28                 u64 [sp + 0x28] = a0
  7726: 52 08 34 ff              jump @465 if a1 != 0
      :                          @483
  7730: 28 6b                    jump @492
      :                          @484
  7732: 82 97 18                 a0 = u64 [a2 + 0x18]
  7735: 51 07 73                 jump @494 if a0 == 0
      :                          @485
  7738: 82 95 10                 s0 = u64 [a2 + 0x10]
  7741: 33 0a                    a3 = 0
  7743: 97 78 04                 a1 = a0 << 0x4
  7746: c8 58 08                 a1 = a1 + s0
  7749: 7b 18 20                 u64 [sp + 0x20] = a1
  7752: 7b 19 08                 u64 [sp + 0x8] = a2
  7755: 82 96                    s1 = u64 [a2]
  7757: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  7760: 97 77 04                 a0 = a0 << 0x4
  7763: 98 77 04                 a0 = a0 >> 0x4
  7766: 95 77 01                 a0 = a0 + 0x1
  7769: 7b 17                    u64 [sp] = a0
  7771: 95 66 08                 s1 = s1 + 0x8
  7774: 01                       fallthrough
      :                          @486
  7775: 7b 1a 28                 u64 [sp + 0x28] = a3
  7778: 82 69                    a2 = u64 [s1]
  7780: 51 09 17                 jump @489 if a2 == 0
      :                          @487
  7783: 82 1a 58                 a3 = u64 [sp + 0x58]
  7786: 82 17 50                 a0 = u64 [sp + 0x50]
  7789: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  7792: 82 aa 18                 a3 = u64 [a3 + 0x18]
  7795: b4 a0 02 ae 00           ra = 174, jump [a3]
      :                          @488 [@dyn 87]
  7800: 52 07 58                 jump @497 if a0 != 0
      :                          @489
  7803: 82 57                    a0 = u64 [s0]
  7805: 82 59 08                 a2 = u64 [s0 + 0x8]
  7808: 95 18 30                 a1 = sp + 0x30
  7811: b4 90 02 b0 00           ra = 176, jump [a2]
      :                          @490 [@dyn 88]
  7816: 52 07 48                 jump @497 if a0 != 0
      :                          @491
  7819: 95 66 10                 s1 = s1 + 0x10
  7822: 95 55 10                 s0 = s0 + 0x10
  7825: 82 1a 28                 a3 = u64 [sp + 0x28]
  7828: 95 aa 01                 a3 = a3 + 0x1
  7831: 82 17 20                 a0 = u64 [sp + 0x20]
  7834: ab 75 c5                 jump @486 if s0 != a0
      :                          @492
  7837: 82 19 08                 a2 = u64 [sp + 0x8]
  7840: 82 1a                    a3 = u64 [sp]
  7842: 82 97 08                 a0 = u64 [a2 + 0x8]
  7845: ac 7a 0d                 jump @495 if a3 <u a0
      :                          @493
  7848: 28 2d                    jump @498
      :                          @494
  7850: 33 0a                    a3 = 0
  7852: 82 97 08                 a0 = u64 [a2 + 0x8]
  7855: 54 07 26                 jump @498 if a0 <=u 0
      :                          @495
  7858: 82 97                    a0 = u64 [a2]
  7860: 97 a8 04                 a1 = a3 << 0x4
  7863: c8 87 09                 a2 = a0 + a1
  7866: 82 1a 58                 a3 = u64 [sp + 0x58]
  7869: 82 17 50                 a0 = u64 [sp + 0x50]
  7872: 82 98                    a1 = u64 [a2]
  7874: 82 99 08                 a2 = u64 [a2 + 0x8]
  7877: 82 aa 18                 a3 = u64 [a3 + 0x18]
  7880: b4 a0 02 b2 00           ra = 178, jump [a3]
      :                          @496 [@dyn 89]
  7885: 51 07 08                 jump @498 if a0 == 0
      :                          @497
  7888: 33 07 01                 a0 = 0x1
  7891: 28 05                    jump @499
      :                          @498
  7893: 33 07                    a0 = 0
  7895: 01                       fallthrough
      :                          @499
  7896: 82 10 80 00              ra = u64 [sp + 0x80]
  7900: 82 15 78                 s0 = u64 [sp + 0x78]
  7903: 82 16 70                 s1 = u64 [sp + 0x70]
  7906: 95 11 88 00              sp = sp + 0x88
  7910: 32 00                    ret
      :                          @500 [@dyn 90]
  7912: 32 00                    ret
      :                          @501 [@dyn 91]
  7914: 95 11 80                 sp = sp + 0xffffffffffffff80
  7917: 7b 10 78                 u64 [sp + 0x78] = ra
  7920: 7b 15 70                 u64 [sp + 0x70] = s0
  7923: 7b 16 68                 u64 [sp + 0x68] = s1
  7926: 64 92                    t0 = a2
  7928: 33 00                    ra = 0
  7930: 33 0b                    a4 = 0
  7932: 33 05                    s0 = 0
  7934: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
  7944: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
  7950: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
  7960: 82 79 10                 a2 = u64 [a0 + 0x10]
  7963: 7b 19 48                 u64 [sp + 0x48] = a2
  7966: 82 79                    a2 = u64 [a0]
  7968: 7b 19 38                 u64 [sp + 0x38] = a2
  7971: 82 77 08                 a0 = u64 [a0 + 0x8]
  7974: 7b 17 30                 u64 [sp + 0x30] = a0
  7977: 33 07 48 04 01           a0 = 0x10448
  7982: 7b 17 08                 u64 [sp + 0x8] = a0
  7985: 3a 07 08 00 03           a0 = u64 [0x30008]
  7990: 7b 17 60                 u64 [sp + 0x60] = a0
  7993: 7b 18 58                 u64 [sp + 0x58] = a1
  7996: 95 88 08                 a1 = a1 + 0x8
  7999: 7b 18                    u64 [sp] = a1
  8001: 33 0c 0a                 a5 = 0xa
  8004: 7b 12 20                 u64 [sp + 0x20] = t0
  8007: 7b 13 18                 u64 [sp + 0x18] = t1
  8010: 7b 14 10                 u64 [sp + 0x10] = t2
  8013: 28 3b                    jump @505
      :                          @502
  8015: 64 06                    s1 = ra
  8017: c8 89 07                 a0 = a2 + a1
  8020: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
  8023: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  8026: 88 77 01                 a0 = a0 <u 0x1
  8029: 01                       fallthrough
      :                          @503
  8030: 82 1a 48                 a3 = u64 [sp + 0x48]
  8033: 78 a7                    u8 [a3] = a0
  8035: 82 17 30                 a0 = u64 [sp + 0x30]
  8038: 82 7a 18                 a3 = u64 [a0 + 0x18]
  8041: 82 17 38                 a0 = u64 [sp + 0x38]
  8044: b4 a0 02 b8 00           ra = 184, jump [a3]
      :                          @504 [@dyn 92]
  8049: 64 5b                    a4 = s0
  8051: 82 12 20                 t0 = u64 [sp + 0x20]
  8054: 82 13 18                 t1 = u64 [sp + 0x18]
  8057: 82 14 10                 t2 = u64 [sp + 0x10]
  8060: 64 60                    ra = s1
  8062: 33 0c 0a                 a5 = 0xa
  8065: 82 15 40                 s0 = u64 [sp + 0x40]
  8068: 52 07 64 01              jump @546 if a0 != 0
      :                          @505
  8072: 84 57 ff 00              a0 = s0 & 0xff
  8076: 52 07 58 01              jump @545 if a0 != 0
      :                          @506
  8080: 7b 1b 50                 u64 [sp + 0x50] = a4
  8083: ae 02 0a                 jump @509 if t0 >=u ra
      :                          @507
  8086: 28 ef 00                 jump @536
      :                          @508
  8089: ac 02 ec 00              jump @536 if t0 <u ra
      :                          @509
  8093: c9 02 08                 a1 = t0 - ra
  8096: 82 16 58                 s1 = u64 [sp + 0x58]
  8099: c8 06 06                 s1 = s1 + ra
  8102: 55 18 10 1d              jump @515 if a1 >=u 16
      :                          @510
  8106: aa 02 d8 00              jump @535 if t0 == ra
      :                          @511
  8110: 33 0a                    a3 = 0
  8112: 01                       fallthrough
      :                          @512
  8113: c8 a6 07                 a0 = s1 + a3
  8116: 7c 77                    a0 = u8 [a0]
  8118: aa c7 a5 00              jump @530 if a0 == a5
      :                          @513
  8122: 95 aa 01                 a3 = a3 + 0x1
  8125: ab a8 f4                 jump @512 if a1 != a3
      :                          @514
  8128: 28 c2 00                 jump @535
      :                          @515
  8131: 95 69 07                 a2 = s1 + 0x7
  8134: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
  8137: c9 6a 07                 a0 = a3 - s1
  8140: d3 6a 0a                 a3 = a3 ^ s1
  8143: 88 aa 01                 a3 = a3 <u 0x1
  8146: 88 7b 01                 a4 = a0 <u 0x1
  8149: d4 ba 0a                 a3 = a3 | a4
  8152: 51 0a 45                 jump @521 if a3 == 0
      :                          @516
  8155: 33 07                    a0 = 0
  8157: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  8160: 82 1b                    a4 = u64 [sp]
  8162: c8 0b 0b                 a4 = a4 + ra
  8165: 28 08                    jump @518
      :                          @517
  8167: 82 1b                    a4 = u64 [sp]
  8169: c8 0b 0b                 a4 = a4 + ra
  8172: 01                       fallthrough
      :                          @518
  8173: c8 76 0c                 a5 = s1 + a0
  8176: 82 cc                    a5 = u64 [a5]
  8178: c8 7b 09                 a2 = a4 + a0
  8181: 82 99                    a2 = u64 [a2]
  8183: d3 4c 05                 s0 = a5 ^ t2
  8186: c8 35 05                 s0 = s0 + t1
  8189: e0 c5 0c                 a5 = s0 & ~a5
  8192: d3 49 05                 s0 = a2 ^ t2
  8195: c8 35 05                 s0 = s0 + t1
  8198: e0 95 09                 a2 = s0 & ~a2
  8201: d4 c9 09                 a2 = a2 | a5
  8204: 82 1c 60                 a5 = u64 [sp + 0x60]
  8207: d2 c9 09                 a2 = a2 & a5
  8210: 52 09 1f                 jump @524 if a2 != 0
      :                          @519
  8213: 95 77 10                 a0 = a0 + 0x10
  8216: ae 7a d5                 jump @518 if a3 >=u a0
      :                          @520
  8219: 28 16                    jump @524
      :                          @521
  8221: c8 a6 0b                 a4 = s1 + a3
  8224: 7c bb                    a4 = u8 [a4]
  8226: aa cb 51                 jump @533 if a4 == a5
      :                          @522
  8229: 95 aa 01                 a3 = a3 + 0x1
  8232: ab a7 f5                 jump @521 if a0 != a3
      :                          @523
  8235: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  8238: ae 7a b9                 jump @517 if a3 >=u a0
      :                          @524
  8241: aa 87 9b 00              jump @542 if a0 == a1
      :                          @525
  8245: 33 0a                    a3 = 0
  8247: c8 76 06                 s1 = s1 + a0
  8250: c9 72 08                 a1 = t0 - a0
  8253: c9 08 08                 a1 = a1 - ra
  8256: 33 0c 0a                 a5 = 0xa
  8259: 82 1b 50                 a4 = u64 [sp + 0x50]
  8262: 01                       fallthrough
      :                          @526
  8263: c8 a6 09                 a2 = s1 + a3
  8266: 7c 99                    a2 = u8 [a2]
  8268: aa c9 0b                 jump @529 if a2 == a5
      :                          @527
  8271: 95 aa 01                 a3 = a3 + 0x1
  8274: ab a8 f5                 jump @526 if a1 != a3
      :                          @528
  8277: 28 2d                    jump @535
      :                          @529
  8279: c8 7a 0a                 a3 = a3 + a0
  8282: 01                       fallthrough
      :                          @530
  8283: c8 0a 0a                 a3 = a3 + ra
  8286: 95 a0 01                 ra = a3 + 0x1
  8289: ae 2a 38 ff              jump @508 if a3 >=u t0
      :                          @531
  8293: 82 17 58                 a0 = u64 [sp + 0x58]
  8296: c8 7a 0a                 a3 = a3 + a0
  8299: 7c a7                    a0 = u8 [a3]
  8301: ab c7 2c ff              jump @508 if a0 != a5
      :                          @532
  8305: 28 62                    jump @543
      :                          @533
  8307: 82 1b 50                 a4 = u64 [sp + 0x50]
  8310: c8 0a 0a                 a3 = a3 + ra
  8313: 95 a0 01                 ra = a3 + 0x1
  8316: ac 2a e9                 jump @531 if a3 <u t0
      :                          @534
  8319: 28 1a ff                 jump @508
      :                          @535
  8322: 64 20                    ra = t0
  8324: 01                       fallthrough
      :                          @536
  8325: 49 11 40 01              u64 [sp + 64] = 0x1
  8329: 64 b5                    s0 = a4
  8331: 64 26                    s1 = t0
  8333: aa 2b 57                 jump @545 if a4 == t0
      :                          @537
  8336: 82 17 48                 a0 = u64 [sp + 0x48]
  8339: 7c 77                    a0 = u8 [a0]
  8341: 51 07 23                 jump @540 if a0 == 0
      :                          @538
  8344: 82 17 30                 a0 = u64 [sp + 0x30]
  8347: 82 7a 18                 a3 = u64 [a0 + 0x18]
  8350: 33 09 04                 a2 = 0x4
  8353: 82 17 38                 a0 = u64 [sp + 0x38]
  8356: 82 18 08                 a1 = u64 [sp + 0x8]
  8359: 7b 10 28                 u64 [sp + 0x28] = ra
  8362: b4 a0 02 ba 00           ra = 186, jump [a3]
      :                          @539 [@dyn 93]
  8367: 82 1b 50                 a4 = u64 [sp + 0x50]
  8370: 82 10 28                 ra = u64 [sp + 0x28]
  8373: 52 07 33                 jump @546 if a0 != 0
      :                          @540
  8376: c9 b6 09                 a2 = s1 - a4
  8379: 82 18 58                 a1 = u64 [sp + 0x58]
  8382: c8 b8 08                 a1 = a1 + a4
  8385: ab b6 8e fe              jump @502 if s1 != a4
      :                          @541
  8389: 64 06                    s1 = ra
  8391: 33 07                    a0 = 0
  8393: 28 95 fe                 jump @503
      :                          @542
  8396: 64 20                    ra = t0
  8398: 82 1b 50                 a4 = u64 [sp + 0x50]
  8401: 28 b4                    jump @536
      :                          @543
  8403: 49 11 40                 u64 [sp + 64] = 0
  8406: 64 05                    s0 = ra
  8408: 64 06                    s1 = ra
  8410: 82 17 48                 a0 = u64 [sp + 0x48]
  8413: 7c 77                    a0 = u8 [a0]
  8415: 52 07 b9                 jump @538 if a0 != 0
      :                          @544
  8418: 28 d6                    jump @540
      :                          @545
  8420: 33 07                    a0 = 0
  8422: 28 06                    jump @547
      :                          @546
  8424: 33 07 01                 a0 = 0x1
  8427: 01                       fallthrough
      :                          @547
  8428: 82 10 78                 ra = u64 [sp + 0x78]
  8431: 82 15 70                 s0 = u64 [sp + 0x70]
  8434: 82 16 68                 s1 = u64 [sp + 0x68]
  8437: 95 11 80 00              sp = sp + 0x80
  8441: 32 00                    ret
      :                          @548 [@dyn 94]
  8443: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  8446: 7b 10 20                 u64 [sp + 0x20] = ra
  8449: 7b 15 18                 u64 [sp + 0x18] = s0
  8452: 7b 16 10                 u64 [sp + 0x10] = s1
  8455: 82 75 10                 s0 = u64 [a0 + 0x10]
  8458: 7c 59                    a2 = u8 [s0]
  8460: 82 7b                    a4 = u64 [a0]
  8462: 82 76 08                 s1 = u64 [a0 + 0x8]
  8465: 51 09 33                 jump @552 if a2 == 0
      :                          @549
  8468: 82 6a 18                 a3 = u64 [s1 + 0x18]
  8471: 7b 18 08                 u64 [sp + 0x8] = a1
  8474: 33 08 48 04 01           a1 = 0x10448
  8479: 33 09 04                 a2 = 0x4
  8482: 64 b7                    a0 = a4
  8484: 7b 1b                    u64 [sp] = a4
  8486: b4 a0 02 be 00           ra = 190, jump [a3]
      :                          @550 [@dyn 95]
  8491: 82 18 08                 a1 = u64 [sp + 0x8]
  8494: 82 1b                    a4 = u64 [sp]
  8496: 51 07 14                 jump @552 if a0 == 0
      :                          @551
  8499: 33 07 01                 a0 = 0x1
  8502: 82 10 20                 ra = u64 [sp + 0x20]
  8505: 82 15 18                 s0 = u64 [sp + 0x18]
  8508: 82 16 10                 s1 = u64 [sp + 0x10]
  8511: 95 11 28                 sp = sp + 0x28
  8514: 32 00                    ret
      :                          @552
  8516: 83 87                    i32 a0 = a1 + 0
  8518: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  8521: 88 77 01                 a0 = a0 <u 0x1
  8524: 78 57                    u8 [s0] = a0
  8526: 82 6c 20                 a5 = u64 [s1 + 0x20]
  8529: 64 b7                    a0 = a4
  8531: 82 10 20                 ra = u64 [sp + 0x20]
  8534: 82 15 18                 s0 = u64 [sp + 0x18]
  8537: 82 16 10                 s1 = u64 [sp + 0x10]
  8540: 95 11 28                 sp = sp + 0x28
  8543: 32 0c                    jump [a5]
      :                          @553 [@dyn 96]
  8545: 64 8a                    a3 = a1
  8547: 33 08 10 04 01           a1 = 0x10410
  8552: 64 a9                    a2 = a3
  8554: 28 99 fb                 jump @462
      :                          @554
  8557: 95 11 70 ff              sp = sp + 0xffffffffffffff70
  8561: 7b 10 88 00              u64 [sp + 0x88] = ra
  8565: 7b 15 80 00              u64 [sp + 0x80] = s0
  8569: 7b 16 78                 u64 [sp + 0x78] = s1
  8572: 64 75                    s0 = a0
  8574: 7c 77 08                 a0 = u8 [a0 + 0x8]
  8577: 64 8b                    a4 = a1
  8579: 33 08 01                 a1 = 0x1
  8582: 33 06 01                 s1 = 0x1
  8585: 51 07 1d                 jump @556 if a0 == 0
      :                          @555
  8588: 78 56 08                 u8 [s0 + 0x8] = s1
  8591: 46 15 09 01              u8 [s0 + 9] = 0x1
  8595: 64 57                    a0 = s0
  8597: 82 10 88 00              ra = u64 [sp + 0x88]
  8601: 82 15 80 00              s0 = u64 [sp + 0x80]
  8605: 82 16 78                 s1 = u64 [sp + 0x78]
  8608: 95 11 90 00              sp = sp + 0x90
  8612: 32 00                    ret
      :                          @556
  8614: 64 9a                    a3 = a2
  8616: 82 5c                    a5 = u64 [s0]
  8618: 80 c7 34                 a0 = u32 [a5 + 0x34]
  8621: 7c 58 09                 a1 = u8 [s0 + 0x9]
  8624: 84 79 04                 a2 = a0 & 0x4
  8627: 52 09 45                 jump @562 if a2 != 0
      :                          @557
  8630: 51 08 32                 jump @560 if a1 == 0
      :                          @558
  8633: 82 c8 28                 a1 = u64 [a5 + 0x28]
  8636: 82 c7 20                 a0 = u64 [a5 + 0x20]
  8639: 82 83 18                 t1 = u64 [a1 + 0x18]
  8642: 33 08 50 04 01           a1 = 0x10450
  8647: 33 09 02                 a2 = 0x2
  8650: 64 a6                    s1 = a3
  8652: 7b 1b 10                 u64 [sp + 0x10] = a4
  8655: 7b 1c 08                 u64 [sp + 0x8] = a5
  8658: b4 30 02 c2 00           ra = 194, jump [t1]
      :                          @559 [@dyn 97]
  8663: 82 1c 08                 a5 = u64 [sp + 0x8]
  8666: 82 1b 10                 a4 = u64 [sp + 0x10]
  8669: 64 6a                    a3 = s1
  8671: 33 08 01                 a1 = 0x1
  8674: 33 06 01                 s1 = 0x1
  8677: 52 07 a7                 jump @555 if a0 != 0
      :                          @560
  8680: 64 b7                    a0 = a4
  8682: 64 c8                    a1 = a5
  8684: b4 a0 02 c4 00           ra = 196, jump [a3]
      :                          @561 [@dyn 98]
  8689: 33 08 01                 a1 = 0x1
  8692: 64 76                    s1 = a0
  8694: 28 96                    jump @555
      :                          @562
  8696: 52 08 37                 jump @566 if a1 != 0
      :                          @563
  8699: 82 c8 28                 a1 = u64 [a5 + 0x28]
  8702: 82 c7 20                 a0 = u64 [a5 + 0x20]
  8705: 82 83 18                 t1 = u64 [a1 + 0x18]
  8708: 33 08 54 04 01           a1 = 0x10454
  8713: 33 09 01                 a2 = 0x1
  8716: 33 06 01                 s1 = 0x1
  8719: 7b 1a                    u64 [sp] = a3
  8721: 7b 1b 10                 u64 [sp + 0x10] = a4
  8724: 7b 1c 08                 u64 [sp + 0x8] = a5
  8727: b4 30 02 c6 00           ra = 198, jump [t1]
      :                          @564 [@dyn 99]
  8732: 82 1c 08                 a5 = u64 [sp + 0x8]
  8735: 82 1b 10                 a4 = u64 [sp + 0x10]
  8738: 82 1a                    a3 = u64 [sp]
  8740: 33 08 01                 a1 = 0x1
  8743: 52 07 65 ff              jump @555 if a0 != 0
      :                          @565
  8747: 81 c7 34                 a0 = i32 [a5 + 0x34]
  8750: 01                       fallthrough
      :                          @566
  8751: 33 06 01                 s1 = 0x1
  8754: 78 16 37                 u8 [sp + 0x37] = s1
  8757: 82 c8 20                 a1 = u64 [a5 + 0x20]
  8760: 82 c9 28                 a2 = u64 [a5 + 0x28]
  8763: 7b 18 18                 u64 [sp + 0x18] = a1
  8766: 7b 19 20                 u64 [sp + 0x20] = a2
  8769: 95 18 37                 a1 = sp + 0x37
  8772: 7b 18 28                 u64 [sp + 0x28] = a1
  8775: 81 c8 30                 a1 = i32 [a5 + 0x30]
  8778: 7c c9 38                 a2 = u8 [a5 + 0x38]
  8781: 82 c3                    t1 = u64 [a5]
  8783: 82 c4 08                 t2 = u64 [a5 + 0x8]
  8786: 82 c0 10                 ra = u64 [a5 + 0x10]
  8789: 82 c2 18                 t0 = u64 [a5 + 0x18]
  8792: 7a 17 6c                 u32 [sp + 0x6c] = a0
  8795: 7a 18 68                 u32 [sp + 0x68] = a1
  8798: 78 19 70                 u8 [sp + 0x70] = a2
  8801: 7b 13 38                 u64 [sp + 0x38] = t1
  8804: 7b 14 40                 u64 [sp + 0x40] = t2
  8807: 7b 10 48                 u64 [sp + 0x48] = ra
  8810: 7b 12 50                 u64 [sp + 0x50] = t0
  8813: 95 17 18                 a0 = sp + 0x18
  8816: 7b 17 58                 u64 [sp + 0x58] = a0
  8819: 33 07 10 04 01           a0 = 0x10410
  8824: 7b 17 60                 u64 [sp + 0x60] = a0
  8827: 95 18 38                 a1 = sp + 0x38
  8830: 64 b7                    a0 = a4
  8832: b4 a0 02 c8 00           ra = 200, jump [a3]
      :                          @567 [@dyn 100]
  8837: 52 07 21                 jump @570 if a0 != 0
      :                          @568
  8840: 82 18 60                 a1 = u64 [sp + 0x60]
  8843: 82 17 58                 a0 = u64 [sp + 0x58]
  8846: 82 8a 18                 a3 = u64 [a1 + 0x18]
  8849: 33 08 52 04 01           a1 = 0x10452
  8854: 33 09 02                 a2 = 0x2
  8857: b4 a0 02 ca 00           ra = 202, jump [a3]
      :                          @569 [@dyn 101]
  8862: 64 76                    s1 = a0
  8864: 33 08 01                 a1 = 0x1
  8867: 28 e9 fe                 jump @555
      :                          @570
  8870: 33 08 01                 a1 = 0x1
  8873: 28 e3 fe                 jump @555
      :                          @571
  8876: 51 08 9b 00              jump @592 if a1 == 0
      :                          @572
  8880: 64 79                    a2 = a0
  8882: 7c 77                    a0 = u8 [a0]
  8884: 51 07 91 00              jump @591 if a0 == 0
      :                          @573
  8888: 51 27 ff 00 90 00        jump @593 if a0 == 255
      :                          @574
  8894: 6c 7a                    a3 = sext.b a0
  8896: 57 0a 09                 jump @576 if a3 <s 0
      :                          @575
  8899: 33 0a                    a3 = 0
  8901: 33 08                    a1 = 0
  8903: 28 73                    jump @590
      :                          @576
  8905: 55 27 c0 00 0d           jump @578 if a0 >=u 192
      :                          @577
  8910: 33 0a 01                 a3 = 0x1
  8913: 33 0b 80                 a4 = 0xffffffffffffff80
  8916: 28 4a                    jump @587
      :                          @578
  8918: 55 27 e0 00 0e           jump @580 if a0 >=u 224
      :                          @579
  8923: 33 0a 02                 a3 = 0x2
  8926: 33 0b 40 ff              a4 = 0xffffffffffffff40
  8930: 28 3c                    jump @587
      :                          @580
  8932: 55 27 f0 00 0e           jump @582 if a0 >=u 240
      :                          @581
  8937: 33 0a 03                 a3 = 0x3
  8940: 33 0b 20 ff              a4 = 0xffffffffffffff20
  8944: 28 2e                    jump @587
      :                          @582
  8946: 55 27 f8 00 0e           jump @584 if a0 >=u 248
      :                          @583
  8951: 33 0a 04                 a3 = 0x4
  8954: 33 0b 10 ff              a4 = 0xffffffffffffff10
  8958: 28 20                    jump @587
      :                          @584
  8960: 55 27 fc 00 0e           jump @586 if a0 >=u 252
      :                          @585
  8965: 33 0a 05                 a3 = 0x5
  8968: 33 0b 08 ff              a4 = 0xffffffffffffff08
  8972: 28 12                    jump @587
      :                          @586
  8974: 88 7a fe 00              a3 = a0 <u 0xfe
  8978: 33 0b 04 ff              a4 = 0xffffffffffffff04
  8982: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  8986: 85 aa 07                 a3 = a3 ^ 0x7
  8989: 01                       fallthrough
      :                          @587
  8990: ae 8a 2b                 jump @594 if a3 >=u a1
      :                          @588
  8993: 33 08                    a1 = 0
  8995: c8 b7 07                 a0 = a0 + a4
  8998: 64 ab                    a4 = a3
  9000: 01                       fallthrough
      :                          @589
  9001: c8 b9 0c                 a5 = a2 + a4
  9004: 7c cc                    a5 = u8 [a5]
  9006: 97 88 08                 a1 = a1 << 0x8
  9009: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  9012: d4 c8 08                 a1 = a1 | a5
  9015: 52 0b f2                 jump @589 if a4 != 0
      :                          @590
  9018: 8a a9 03                 i32 a2 = a3 << 0x3
  9021: cf 97 07                 a0 = a0 << a2
  9024: c8 87 07                 a0 = a0 + a1
  9027: 32 00                    ret
      :                          @591
  9029: 32 00                    ret
      :                          @592
  9031: 00                       trap
      :                          @593
  9032: 00                       trap
      :                          @594
  9033: 00                       trap
