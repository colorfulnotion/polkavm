// RO data = 1632/1632 bytes
// RW data = 16/4144 bytes
// Stack size = 409600 bytes
// RO data = [0, 16, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 122, 61, 32, 115, 61, 32, 111, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 32, 111, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 32, 119, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 32, 119, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 80, 97, 114, 101, 110, 116, 58, 32, 109, 97, 99, 104, 105, 110, 101, 32, 110, 101, 119, 32, 105, 110, 100, 101, 120, 61, 80, 97, 114, 101, 110, 116, 58, 32, 102, 101, 116, 99, 104, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 32, 102, 101, 116, 99, 104, 95, 114, 101, 115, 117, 108, 116, 61, 80, 97, 114, 101, 110, 116, 58, 32, 122, 101, 114, 111, 32, 109, 61, 44, 32, 112, 97, 103, 101, 95, 105, 100, 61, 32, 122, 101, 114, 111, 95, 114, 101, 115, 117, 108, 116, 61, 80, 97, 114, 101, 110, 116, 58, 32, 112, 111, 107, 101, 32, 109, 61, 32, 111, 61, 32, 122, 61, 32, 112, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 80, 97, 114, 101, 110, 116, 58, 32, 99, 104, 105, 108, 100, 95, 118, 109, 95, 114, 101, 103, 105, 115, 116, 101, 114, 115, 61, 80, 97, 114, 101, 110, 116, 58, 32, 105, 110, 118, 111, 107, 101, 32, 99, 104, 105, 108, 100, 32, 86, 77, 44, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 80, 97, 114, 101, 110, 116, 58, 32, 105, 110, 118, 111, 107, 101, 32, 32, 105, 110, 118, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 32, 111, 109, 101, 103, 97, 95, 56, 61, 80, 97, 114, 101, 110, 116, 58, 32, 100, 111, 110, 101, 32, 119, 105, 116, 104, 32, 99, 104, 105, 108, 100, 32, 86, 77, 44, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 80, 97, 114, 101, 110, 116, 58, 32, 70, 105, 114, 115, 116, 32, 116, 105, 109, 101, 32, 115, 101, 116, 117, 112, 58, 32, 119, 105, 95, 112, 97, 121, 108, 111, 97, 100, 95, 108, 101, 110, 103, 116, 104, 61, 80, 97, 114, 101, 110, 116, 58, 32, 115, 111, 108, 105, 99, 105, 116, 32, 99, 111, 100, 101, 95, 104, 97, 115, 104, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 111, 100, 101, 95, 108, 101, 110, 103, 116, 104, 61, 0, 0, 0, 0, 0, 0, 91, 112, 101, 101, 107, 122, 101, 114, 111, 32, 32, 32, 32, 112, 111, 107, 101, 44, 32, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 115, 117, 99, 99, 101, 115, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 119, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 111, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 115, 116, 97, 99, 107, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 119, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 111, 95, 98, 121, 116, 101, 115, 0, 0, 0, 0, 0, 8, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 18, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 21, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 54, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 86, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 70, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 103, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 38, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 120, 0, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 146, 0, 1, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 174, 0, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 188, 0, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 203, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 213, 0, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 226, 0, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 18, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 241, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 244, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 247, 0, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 4, 1, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 31, 1, 1, 0, 0, 0, 0, 0, 39, 0, 0, 0, 0, 0, 0, 0, 70, 1, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 85, 1, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 100, 1, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 109, 1, 1, 0, 0, 0, 0, 0, 42, 0, 0, 0, 0, 0, 0, 0, 151, 1, 1, 0, 0, 0, 0, 0, 44, 0, 0, 0, 0, 0, 0, 0, 195, 1, 1, 0, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 229, 1, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 128, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 130, 0, 0, 0, 0, 0, 0, 0, 136, 0, 0, 0, 0, 0, 0, 0, 144, 0, 0, 0, 0, 0, 0, 0, 178, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 180, 0, 0, 0, 0, 0, 0, 0, 186, 0, 0, 0, 0, 0, 0, 0, 190, 0, 0, 0, 0, 0, 0, 0]
// RW data = [75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 2882
// Code size = 8873 bytes

      :                          @0
     0: 28 d1 02 00 00           jump @48
      :                          @1
     5: 28 f6 10 00 00           jump @195
      :                          @2
    10: 28 08 13                 jump @251
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 80 89 34                 a2 = u32 [a1 + 0x34]
    24: 82 77                    a0 = u64 [a0]
    26: 84 9a 10                 a3 = a2 & 0x10
    29: 52 0a 14                 jump @6 if a3 != 0
      :                          @4
    32: 84 99 20                 a2 = a2 & 0x20
    35: 52 09 4f                 jump @10 if a2 != 0
      :                          @5
    38: 82 10 80 00              ra = u64 [sp + 0x80]
    42: 95 11 88 00              sp = sp + 0x88
    46: 28 a0 18                 jump @391
      :                          @6
    49: 82 7b                    a4 = u64 [a0]
    51: 33 09 81 00              a2 = 0x81
    55: 95 17 7f                 a0 = sp + 0x7f
    58: 33 02 57                 t0 = 0x57
    61: 01                       fallthrough
      :                          @7
    62: 64 9c                    a5 = a2
    64: 98 ba 04                 a3 = a4 >> 0x4
    67: 84 bb 0f                 a4 = a4 & 0xf
    70: 88 b3 0a                 t1 = a4 <u 0xa
    73: 33 09 30                 a2 = 0x30
    76: da 32 09                 a2 = t0 if t1 == 0
    79: be b9 09                 i32 a2 = a2 + a4
    82: 78 79                    u8 [a0] = a2
    84: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
    87: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
    90: 64 ab                    a4 = a3
    92: 52 0a e2                 jump @7 if a3 != 0
      :                          @8
    95: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
    98: 56 27 80 00 69           jump @16 if a0 >u 128
      :                          @9
   103: 9a 9b 81 00              a4 = 0x81 - a2
   107: 64 1a                    a3 = sp
   109: c8 7a 0a                 a3 = a3 + a0
   112: 28 42                    jump @14
      :                          @10
   114: 82 7b                    a4 = u64 [a0]
   116: 33 09 81 00              a2 = 0x81
   120: 95 17 7f                 a0 = sp + 0x7f
   123: 33 02 37                 t0 = 0x37
   126: 01                       fallthrough
      :                          @11
   127: 64 9c                    a5 = a2
   129: 98 ba 04                 a3 = a4 >> 0x4
   132: 84 bb 0f                 a4 = a4 & 0xf
   135: 88 b3 0a                 t1 = a4 <u 0xa
   138: 33 09 30                 a2 = 0x30
   141: da 32 09                 a2 = t0 if t1 == 0
   144: be b9 09                 i32 a2 = a2 + a4
   147: 78 79                    u8 [a0] = a2
   149: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   152: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   155: 64 ab                    a4 = a3
   157: 52 0a e2                 jump @11 if a3 != 0
      :                          @12
   160: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   163: 56 27 80 00 28           jump @16 if a0 >u 128
      :                          @13
   168: 9a 9b 81 00              a4 = 0x81 - a2
   172: 64 1a                    a3 = sp
   174: c8 7a 0a                 a3 = a3 + a0
   177: 01                       fallthrough
      :                          @14
   178: 33 09 02                 a2 = 0x2
   181: 64 87                    a0 = a1
   183: 33 08 0f 02 01           a1 = 0x1020f
   188: 50 10 04 34 19           ra = 4, jump @401
      :                          @15 [@dyn 2]
   193: 82 10 80 00              ra = u64 [sp + 0x80]
   197: 95 11 88 00              sp = sp + 0x88
   201: 32 00                    ret
      :                          @16
   203: 00                       trap
      :                          @17 [@dyn 3]
   204: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   208: 7b 10 80 00              u64 [sp + 0x80] = ra
   212: 80 89 34                 a2 = u32 [a1 + 0x34]
   215: 84 9a 10                 a3 = a2 & 0x10
   218: 52 0a 14                 jump @20 if a3 != 0
      :                          @18
   221: 84 99 20                 a2 = a2 & 0x20
   224: 52 09 4f                 jump @24 if a2 != 0
      :                          @19
   227: 82 10 80 00              ra = u64 [sp + 0x80]
   231: 95 11 88 00              sp = sp + 0x88
   235: 28 e3 17                 jump @391
      :                          @20
   238: 82 7b                    a4 = u64 [a0]
   240: 33 09 81 00              a2 = 0x81
   244: 95 17 7f                 a0 = sp + 0x7f
   247: 33 02 57                 t0 = 0x57
   250: 01                       fallthrough
      :                          @21
   251: 64 9c                    a5 = a2
   253: 98 ba 04                 a3 = a4 >> 0x4
   256: 84 bb 0f                 a4 = a4 & 0xf
   259: 88 b3 0a                 t1 = a4 <u 0xa
   262: 33 09 30                 a2 = 0x30
   265: da 32 09                 a2 = t0 if t1 == 0
   268: be b9 09                 i32 a2 = a2 + a4
   271: 78 79                    u8 [a0] = a2
   273: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   276: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   279: 64 ab                    a4 = a3
   281: 52 0a e2                 jump @21 if a3 != 0
      :                          @22
   284: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   287: 56 27 80 00 69           jump @30 if a0 >u 128
      :                          @23
   292: 9a 9b 81 00              a4 = 0x81 - a2
   296: 64 1a                    a3 = sp
   298: c8 7a 0a                 a3 = a3 + a0
   301: 28 42                    jump @28
      :                          @24
   303: 82 7b                    a4 = u64 [a0]
   305: 33 09 81 00              a2 = 0x81
   309: 95 17 7f                 a0 = sp + 0x7f
   312: 33 02 37                 t0 = 0x37
   315: 01                       fallthrough
      :                          @25
   316: 64 9c                    a5 = a2
   318: 98 ba 04                 a3 = a4 >> 0x4
   321: 84 bb 0f                 a4 = a4 & 0xf
   324: 88 b3 0a                 t1 = a4 <u 0xa
   327: 33 09 30                 a2 = 0x30
   330: da 32 09                 a2 = t0 if t1 == 0
   333: be b9 09                 i32 a2 = a2 + a4
   336: 78 79                    u8 [a0] = a2
   338: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   341: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   344: 64 ab                    a4 = a3
   346: 52 0a e2                 jump @25 if a3 != 0
      :                          @26
   349: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   352: 56 27 80 00 28           jump @30 if a0 >u 128
      :                          @27
   357: 9a 9b 81 00              a4 = 0x81 - a2
   361: 64 1a                    a3 = sp
   363: c8 7a 0a                 a3 = a3 + a0
   366: 01                       fallthrough
      :                          @28
   367: 33 09 02                 a2 = 0x2
   370: 64 87                    a0 = a1
   372: 33 08 0f 02 01           a1 = 0x1020f
   377: 50 10 08 77 18           ra = 8, jump @401
      :                          @29 [@dyn 4]
   382: 82 10 80 00              ra = u64 [sp + 0x80]
   386: 95 11 88 00              sp = sp + 0x88
   390: 32 00                    ret
      :                          @30
   392: 00                       trap
      :                          @31 [@dyn 5]
   393: 95 11 d0                 sp = sp + 0xffffffffffffffd0
   396: 7b 10 28                 u64 [sp + 0x28] = ra
   399: 7b 15 20                 u64 [sp + 0x20] = s0
   402: 7b 16 18                 u64 [sp + 0x18] = s1
   405: 64 85                    s0 = a1
   407: 82 88 28                 a1 = u64 [a1 + 0x28]
   410: 82 5a 20                 a3 = u64 [s0 + 0x20]
   413: 82 8b 18                 a4 = u64 [a1 + 0x18]
   416: 64 76                    s1 = a0
   418: 33 08 f8 01 01           a1 = 0x101f8
   423: 33 09 01                 a2 = 0x1
   426: 64 a7                    a0 = a3
   428: b4 b0 01 0c              ra = 12, jump [a4]
      :                          @32 [@dyn 6]
   432: 7b 15                    u64 [sp] = s0
   434: 78 17 08                 u8 [sp + 0x8] = a0
   437: 46 11 09                 u8 [sp + 9] = 0
   440: 7b 16 10                 u64 [sp + 0x10] = s1
   443: 33 05 02                 s0 = 0x2
   446: 64 17                    a0 = sp
   448: 95 18 10                 a1 = sp + 0x10
   451: 33 09 02                 a2 = 0x2
   454: 50 10 0e 06 1f           ra = 14, jump @545
      :                          @33 [@dyn 7]
   459: 95 67 08                 a0 = s1 + 0x8
   462: 7b 17 10                 u64 [sp + 0x10] = a0
   465: 64 17                    a0 = sp
   467: 95 18 10                 a1 = sp + 0x10
   470: 64 59                    a2 = s0
   472: 50 10 10 f4 1e           ra = 16, jump @545
      :                          @34 [@dyn 8]
   477: 95 67 10                 a0 = s1 + 0x10
   480: 7b 17 10                 u64 [sp + 0x10] = a0
   483: 64 17                    a0 = sp
   485: 95 18 10                 a1 = sp + 0x10
   488: 64 59                    a2 = s0
   490: 50 10 12 e2 1e           ra = 18, jump @545
      :                          @35 [@dyn 9]
   495: 95 67 18                 a0 = s1 + 0x18
   498: 7b 17 10                 u64 [sp + 0x10] = a0
   501: 64 17                    a0 = sp
   503: 95 18 10                 a1 = sp + 0x10
   506: 64 59                    a2 = s0
   508: 50 10 14 d0 1e           ra = 20, jump @545
      :                          @36 [@dyn 10]
   513: 95 67 20                 a0 = s1 + 0x20
   516: 7b 17 10                 u64 [sp + 0x10] = a0
   519: 64 17                    a0 = sp
   521: 95 18 10                 a1 = sp + 0x10
   524: 64 59                    a2 = s0
   526: 50 10 16 be 1e           ra = 22, jump @545
      :                          @37 [@dyn 11]
   531: 95 67 28                 a0 = s1 + 0x28
   534: 7b 17 10                 u64 [sp + 0x10] = a0
   537: 64 17                    a0 = sp
   539: 95 18 10                 a1 = sp + 0x10
   542: 64 59                    a2 = s0
   544: 50 10 18 ac 1e           ra = 24, jump @545
      :                          @38 [@dyn 12]
   549: 95 67 30                 a0 = s1 + 0x30
   552: 7b 17 10                 u64 [sp + 0x10] = a0
   555: 64 17                    a0 = sp
   557: 95 18 10                 a1 = sp + 0x10
   560: 64 59                    a2 = s0
   562: 50 10 1a 9a 1e           ra = 26, jump @545
      :                          @39 [@dyn 13]
   567: 95 67 38                 a0 = s1 + 0x38
   570: 7b 17 10                 u64 [sp + 0x10] = a0
   573: 64 17                    a0 = sp
   575: 95 18 10                 a1 = sp + 0x10
   578: 64 59                    a2 = s0
   580: 50 10 1c 88 1e           ra = 28, jump @545
      :                          @40 [@dyn 14]
   585: 95 67 40                 a0 = s1 + 0x40
   588: 7b 17 10                 u64 [sp + 0x10] = a0
   591: 64 17                    a0 = sp
   593: 95 18 10                 a1 = sp + 0x10
   596: 64 59                    a2 = s0
   598: 50 10 1e 76 1e           ra = 30, jump @545
      :                          @41 [@dyn 15]
   603: 95 67 48                 a0 = s1 + 0x48
   606: 7b 17 10                 u64 [sp + 0x10] = a0
   609: 64 17                    a0 = sp
   611: 95 18 10                 a1 = sp + 0x10
   614: 64 59                    a2 = s0
   616: 50 10 20 64 1e           ra = 32, jump @545
      :                          @42 [@dyn 16]
   621: 95 67 50                 a0 = s1 + 0x50
   624: 7b 17 10                 u64 [sp + 0x10] = a0
   627: 64 17                    a0 = sp
   629: 95 18 10                 a1 = sp + 0x10
   632: 64 59                    a2 = s0
   634: 50 10 22 52 1e           ra = 34, jump @545
      :                          @43 [@dyn 17]
   639: 95 67 58                 a0 = s1 + 0x58
   642: 7b 17 10                 u64 [sp + 0x10] = a0
   645: 64 17                    a0 = sp
   647: 95 18 10                 a1 = sp + 0x10
   650: 64 59                    a2 = s0
   652: 50 10 24 40 1e           ra = 36, jump @545
      :                          @44 [@dyn 18]
   657: 95 67 60                 a0 = s1 + 0x60
   660: 7b 17 10                 u64 [sp + 0x10] = a0
   663: 64 17                    a0 = sp
   665: 95 18 10                 a1 = sp + 0x10
   668: 64 59                    a2 = s0
   670: 50 10 26 2e 1e           ra = 38, jump @545
      :                          @45 [@dyn 19]
   675: 33 07 01                 a0 = 0x1
   678: 7c 18 08                 a1 = u8 [sp + 0x8]
   681: 52 08 1a                 jump @47 if a1 != 0
      :                          @46
   684: 82 17                    a0 = u64 [sp]
   686: 82 78 28                 a1 = u64 [a0 + 0x28]
   689: 82 77 20                 a0 = u64 [a0 + 0x20]
   692: 82 8a 18                 a3 = u64 [a1 + 0x18]
   695: 33 08 0e 02 01           a1 = 0x1020e
   700: 33 09 01                 a2 = 0x1
   703: b4 a0 01 28              ra = 40, jump [a3]
      :                          @47 [@dyn 20]
   707: 82 10 28                 ra = u64 [sp + 0x28]
   710: 82 15 20                 s0 = u64 [sp + 0x20]
   713: 82 16 18                 s1 = u64 [sp + 0x18]
   716: 95 11 30                 sp = sp + 0x30
   719: 32 00                    ret
      :                          @48 [export #0: 'refine']
   721: 95 11 08 f8              sp = sp + 0xfffffffffffff808
   725: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
   729: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
   733: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
   737: 95 11 88 b4 fe           sp = sp + 0xfffffffffffeb488
   742: 33 0a 00 00 01           a3 = 0x10000
   747: 55 18 04 09              jump @50 if a1 >=u 4
      :                          @49
   751: 33 06                    s1 = 0
   753: 28 95 01                 jump @77
      :                          @50
   756: 95 86 fc                 s1 = a1 + 0xfffffffffffffffc
   759: 51 06 8f 01              jump @77 if s1 == 0
      :                          @51
   763: 95 7a 04                 a3 = a0 + 0x4
   766: 7d a8                    a1 = i8 [a3]
   768: 80 79                    a2 = u32 [a0]
   770: 33 05 01                 s0 = 0x1
   773: 59 08 3d                 jump @60 if a1 >=s 0
      :                          @52
   776: 84 87 ff 00              a0 = a1 & 0xff
   780: 33 05 02                 s0 = 0x2
   783: 53 27 c0 00 2d           jump @58 if a0 <u 192
      :                          @53
   788: 33 05 03                 s0 = 0x3
   791: 53 27 e0 00 25           jump @58 if a0 <u 224
      :                          @54
   796: 33 05 04                 s0 = 0x4
   799: 53 27 f0 00 1d           jump @58 if a0 <u 240
      :                          @55
   804: 33 05 05                 s0 = 0x5
   807: 53 27 f8 00 15           jump @58 if a0 <u 248
      :                          @56
   812: 33 05 06                 s0 = 0x6
   815: 53 27 fc 00 0d           jump @58 if a0 <u 252
      :                          @57
   820: 88 77 fe 00              a0 = a0 <u 0xfe
   824: 9a 75 08                 s0 = 0x8 - a0
   827: 01                       fallthrough
      :                          @58
   828: ae 56 06                 jump @60 if s1 >=u s0
      :                          @59
   831: 28 bb 0d                 jump @194
      :                          @60
   834: 7b 19 70                 u64 [sp + 0x70] = a2
   837: 7b 1a 68                 u64 [sp + 0x68] = a3
   840: 64 a7                    a0 = a3
   842: 64 58                    a1 = s0
   844: 50 10 2a bf 1e           ra = 42, jump @562
      :                          @61 [@dyn 21]
   849: 64 58                    a1 = s0
   851: 64 75                    s0 = a0
   853: e4 86 07                 a0 = maxu(s1, a1)
   856: 7b 18 60                 u64 [sp + 0x60] = a1
   859: c9 87 07                 a0 = a0 - a1
   862: d8 57 08                 a1 = a0 <u s0
   865: e4 57 07                 a0 = maxu(a0, s0)
   868: c9 57 07                 a0 = a0 - s0
   871: 88 77 20                 a0 = a0 <u 0x20
   874: d4 87 07                 a0 = a0 | a1
   877: 52 07 11 01              jump @76 if a0 != 0
      :                          @62
   881: 7b 15 78                 u64 [sp + 0x78] = s0
   884: 48 21 a0 00              u32 [sp + 160] = 0
   888: 49 21 98 00              u64 [sp + 152] = 0
   892: 49 21 90 00              u64 [sp + 144] = 0
   896: 49 21 88 00              u64 [sp + 136] = 0
   900: 49 21 80 00              u64 [sp + 128] = 0
   904: 95 17 80 00              a0 = sp + 0x80
   908: 33 09 24                 a2 = 0x24
   911: 33 0a 03                 a3 = 0x3
   914: 33 08                    a1 = 0
   916: 33 0b                    a4 = 0
   918: 33 0c                    a5 = 0
   920: 0a 12                    ecalli 18 // 'fetch'
   922: 01                       fallthrough
      :                          @63
   923: 95 18 f8 50 01           a1 = sp + 0x150f8
   928: 33 06 24                 s1 = 0x24
   931: 55 15 08 98 00           jump @73 if s0 >=u 8
      :                          @64
   936: 95 17 78                 a0 = sp + 0x78
   939: 7b 87 60 01              u64 [a1 + 0x160] = a0
   943: 33 07 06                 a0 = 0x6
   946: 7b 87 68 01              u64 [a1 + 0x168] = a0
   950: 33 07 d0 05 01           a0 = 0x105d0
   955: 7b 17 a8 00              u64 [sp + 0xa8] = a0
   959: 49 21 b0 00 01           u64 [sp + 176] = 0x1
   964: 49 21 c8 00              u64 [sp + 200] = 0
   968: 95 18 58 52 01           a1 = sp + 0x15258
   973: 7b 18 b8 00              u64 [sp + 0xb8] = a1
   977: 49 21 c0 00 01           u64 [sp + 192] = 0x1
   982: 95 17 f0 40 01           a0 = sp + 0x140f0
   987: 95 18 a8 00              a1 = sp + 0xa8
   991: 50 10 2c 6a 11           ra = 44, jump @308
      :                          @65 [@dyn 22]
   996: 95 17 a8 40 01           a0 = sp + 0x140a8
  1001: 82 75 50                 s0 = u64 [a0 + 0x50]
  1004: 82 7b 58                 a4 = u64 [a0 + 0x58]
  1007: 82 77 48                 a0 = u64 [a0 + 0x48]
  1010: 7b 17 70                 u64 [sp + 0x70] = a0
  1013: 33 07 02                 a0 = 0x2
  1016: 33 08                    a1 = 0
  1018: 33 09                    a2 = 0
  1020: 64 5a                    a3 = s0
  1022: 33 00 2e                 ra = 0x2e
  1025: 0a 64                    ecalli 100 // 'log'
  1027: 01                       fallthrough
      :                          @66 [@dyn 23]
  1028: 82 1c 70                 a5 = u64 [sp + 0x70]
  1031: 95 c8 ff ef              a1 = a5 + 0xffffffffffffefff
  1035: 53 28 00 f0 2a           jump @72 if a1 <u 4294963200
      :                          @67
  1040: 33 07 20 00 03           a0 = 0x30020
  1045: 95 77 00 10              a0 = a0 + 0x1000
  1049: 01                       fallthrough
      :                          @68
  1050: 82 78                    a1 = u64 [a0]
  1052: c9 87 09                 a2 = a0 - a1
  1055: ab 59 16                 jump @72 if a2 != s0
      :                          @69
  1058: c9 c8 09                 a2 = a1 - a5
  1061: 01                       fallthrough
      :                          @70
  1062: 82 7a                    a3 = u64 [a0]
  1064: ab 8a f2                 jump @68 if a3 != a1
      :                          @71
  1067: 7b 79                    u64 [a0] = a2
  1069: 33 0b                    a4 = 0
  1071: 95 1a 80 00              a3 = sp + 0x80
  1075: 28 53                    jump @77
      :                          @72
  1077: 95 1a 80 00              a3 = sp + 0x80
  1081: 28 4d                    jump @77
      :                          @73
  1083: 82 17 68                 a0 = u64 [sp + 0x68]
  1086: 82 18 60                 a1 = u64 [sp + 0x60]
  1089: c8 87 07                 a0 = a0 + a1
  1092: 80 75                    s0 = u32 [a0]
  1094: 80 78 04                 a1 = u32 [a0 + 0x4]
  1097: 7b 18 68                 u64 [sp + 0x68] = a1
  1100: 80 77 08                 a0 = u32 [a0 + 0x8]
  1103: 7b 17 60                 u64 [sp + 0x60] = a0
  1106: 95 17 a8 00              a0 = sp + 0xa8
  1110: 33 09 00 40 01           a2 = 0x14000
  1115: 33 08                    a1 = 0
  1117: 50 10 30 12 14           ra = 48, jump @376
      :                          @74 [@dyn 24]
  1122: 95 18 80 00              a1 = sp + 0x80
  1126: 95 19 a8 00              a2 = sp + 0xa8
  1130: 33 0b 00 40 01           a4 = 0x14000
  1135: 82 17 70                 a0 = u64 [sp + 0x70]
  1138: 33 0a                    a3 = 0
  1140: 0a 11                    ecalli 17 // 'historical_lookup'
  1142: 01                       fallthrough
      :                          @75
  1143: 95 78 01                 a1 = a0 + 0x1
  1146: 55 18 04 2a              jump @78 if a1 >=u 4
      :                          @76
  1150: 33 06                    s1 = 0
  1152: 33 0a 00 00 01           a3 = 0x10000
  1157: 01                       fallthrough
      :                          @77
  1158: 64 a7                    a0 = a3
  1160: 64 68                    a1 = s1
  1162: 33 09 78 4b 01           a2 = 0x14b78
  1167: c8 91 01                 sp = sp + a2
  1170: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  1174: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  1178: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  1182: 95 11 f8 07              sp = sp + 0x7f8
  1186: 32 00                    ret
      :                          @78
  1188: 95 78 fd                 a1 = a0 + 0xfffffffffffffffd
  1191: 53 18 03 d7              jump @76 if a1 <u 3
      :                          @79
  1195: 84 78 fe                 a1 = a0 & 0xfffffffffffffffe
  1198: 51 18 06 d0              jump @76 if a1 == 6
      :                          @80
  1202: 95 78 f8                 a1 = a0 + 0xfffffffffffffff8
  1205: 53 18 03 c9              jump @76 if a1 <u 3
      :                          @81
  1209: 7c 18 aa 00              a1 = u8 [sp + 0xaa]
  1213: 7c 19 a9 00              a2 = u8 [sp + 0xa9]
  1217: 7c 1a a8 00              a3 = u8 [sp + 0xa8]
  1221: 97 88 10                 a1 = a1 << 0x10
  1224: 97 99 08                 a2 = a2 << 0x8
  1227: d4 98 08                 a1 = a1 | a2
  1230: d4 a8 08                 a1 = a1 | a3
  1233: 95 79 f5                 a2 = a0 + 0xfffffffffffffff5
  1236: ac 89 aa                 jump @76 if a2 <u a1
      :                          @82
  1239: 7c 17 ad 00              a0 = u8 [sp + 0xad]
  1243: 7c 1a ac 00              a3 = u8 [sp + 0xac]
  1247: 7c 1b ab 00              a4 = u8 [sp + 0xab]
  1251: 97 77 10                 a0 = a0 << 0x10
  1254: 97 aa 08                 a3 = a3 << 0x8
  1257: d4 a7 07                 a0 = a0 | a3
  1260: d4 b7 07                 a0 = a0 | a4
  1263: c9 89 09                 a2 = a2 - a1
  1266: ac 79 8c                 jump @76 if a2 <u a0
      :                          @83
  1269: c9 79 06                 s1 = a2 - a0
  1272: 53 16 04 86              jump @76 if s1 <u 4
      :                          @84
  1276: 95 12 b3 00              t0 = sp + 0xb3
  1280: c8 28 03                 t1 = a1 + t0
  1283: c8 37 0b                 a4 = a0 + t1
  1286: 7c bc 03                 a5 = u8 [a4 + 0x3]
  1289: 7b 15 08                 u64 [sp + 0x8] = s0
  1292: 7c b5 02                 s0 = u8 [a4 + 0x2]
  1295: 7c ba                    a3 = u8 [a4]
  1297: 7c b9 01                 a2 = u8 [a4 + 0x1]
  1300: 97 cc 10                 a5 = a5 << 0x10
  1303: 97 55 08                 s0 = s0 << 0x8
  1306: d4 5c 0c                 a5 = a5 | s0
  1309: d4 c9 09                 a2 = a2 | a5
  1312: 97 99 08                 a2 = a2 << 0x8
  1315: d4 a9 0c                 a5 = a2 | a3
  1318: 95 66 fc                 s1 = s1 + 0xfffffffffffffffc
  1321: ac c6 55 ff              jump @76 if s1 <u a5
      :                          @85
  1325: 7c 19 af 00              a2 = u8 [sp + 0xaf]
  1329: 7c 1a ae 00              a3 = u8 [sp + 0xae]
  1333: 97 99 08                 a2 = a2 << 0x8
  1336: 7c 16 b2 00              s1 = u8 [sp + 0xb2]
  1340: 7c 15 b1 00              s0 = u8 [sp + 0xb1]
  1344: d4 a9 09                 a2 = a2 | a3
  1347: 7c 1a b0 00              a3 = u8 [sp + 0xb0]
  1351: 97 66 10                 s1 = s1 << 0x10
  1354: 97 55 08                 s0 = s0 << 0x8
  1357: d4 65 05                 s0 = s0 | s1
  1360: d4 5a 0a                 a3 = a3 | s0
  1363: 49 11 70 ff ef           u64 [sp + 112] = 0xffffffffffffefff
  1368: 95 bb 04                 a4 = a4 + 0x4
  1371: 33 04 a8 40 01           t2 = 0x140a8
  1376: c8 41 06                 s1 = sp + t2
  1379: 7b 69                    u64 [s1] = a2
  1381: 7b 6a 08                 u64 [s1 + 0x8] = a3
  1384: 7b 62 10                 u64 [s1 + 0x10] = t0
  1387: 7b 68 18                 u64 [s1 + 0x18] = a1
  1390: 7b 63 20                 u64 [s1 + 0x20] = t1
  1393: 7b 67 28                 u64 [s1 + 0x28] = a0
  1396: 7b 6b 30                 u64 [s1 + 0x30] = a4
  1399: 7b 6c 38                 u64 [s1 + 0x38] = a5
  1402: 7b 66 48                 u64 [s1 + 0x48] = s1
  1405: 33 08 06                 a1 = 0x6
  1408: 7b 68 50                 u64 [s1 + 0x50] = a1
  1411: 95 17 b0 40 01           a0 = sp + 0x140b0
  1416: 7b 67 58                 u64 [s1 + 0x58] = a0
  1419: 7b 68 60                 u64 [s1 + 0x60] = a1
  1422: 95 17 b8 40 01           a0 = sp + 0x140b8
  1427: 7b 67 68                 u64 [s1 + 0x68] = a0
  1430: 7b 68 70                 u64 [s1 + 0x70] = a1
  1433: 95 17 c0 40 01           a0 = sp + 0x140c0
  1438: 7b 67 78                 u64 [s1 + 0x78] = a0
  1441: 7b 68 80 00              u64 [s1 + 0x80] = a1
  1445: 95 17 c8 40 01           a0 = sp + 0x140c8
  1450: 7b 67 88 00              u64 [s1 + 0x88] = a0
  1454: 7b 68 90 00              u64 [s1 + 0x90] = a1
  1458: 95 17 d0 40 01           a0 = sp + 0x140d0
  1463: 7b 67 98 00              u64 [s1 + 0x98] = a0
  1467: 7b 68 a0 00              u64 [s1 + 0xa0] = a1
  1471: 95 17 d8 40 01           a0 = sp + 0x140d8
  1476: 7b 67 a8 00              u64 [s1 + 0xa8] = a0
  1480: 7b 68 b0 00              u64 [s1 + 0xb0] = a1
  1484: 95 17 e0 40 01           a0 = sp + 0x140e0
  1489: 7b 67 b8 00              u64 [s1 + 0xb8] = a0
  1493: 7b 18 58                 u64 [sp + 0x58] = a1
  1496: 7b 68 c0 00              u64 [s1 + 0xc0] = a1
  1500: 33 07 40 04 01           a0 = 0x10440
  1505: 95 16 f8 50 01           s1 = sp + 0x150f8
  1510: 7b 67 60 01              u64 [s1 + 0x160] = a0
  1514: 49 26 68 01 08           u64 [s1 + 360] = 0x8
  1519: 49 26 80 01              u64 [s1 + 384] = 0
  1523: 95 18 f0 40 01           a1 = sp + 0x140f0
  1528: 7b 68 70 01              u64 [s1 + 0x170] = a1
  1532: 49 26 78 01 08           u64 [s1 + 376] = 0x8
  1537: 95 17 80 51 01           a0 = sp + 0x15180
  1542: 95 18 58 52 01           a1 = sp + 0x15258
  1547: 50 10 32 3e 0f           ra = 50, jump @308
      :                          @86 [@dyn 25]
  1552: 82 65 90 00              s0 = u64 [s1 + 0x90]
  1556: 82 6b 98 00              a4 = u64 [s1 + 0x98]
  1560: 82 66 88 00              s1 = u64 [s1 + 0x88]
  1564: 33 07 02                 a0 = 0x2
  1567: 33 08                    a1 = 0
  1569: 33 09                    a2 = 0
  1571: 64 5a                    a3 = s0
  1573: 33 00 34                 ra = 0x34
  1576: 0a 64                    ecalli 100 // 'log'
  1578: 01                       fallthrough
      :                          @87 [@dyn 26]
  1579: 82 17 70                 a0 = u64 [sp + 0x70]
  1582: c8 67 07                 a0 = a0 + s1
  1585: 33 0c 20 00 03           a5 = 0x30020
  1590: 53 27 00 f0 1e           jump @93 if a0 <u 4294963200
      :                          @88
  1595: 95 c7 00 10              a0 = a5 + 0x1000
  1599: 01                       fallthrough
      :                          @89
  1600: 82 78                    a1 = u64 [a0]
  1602: c9 87 09                 a2 = a0 - a1
  1605: ab 59 0f                 jump @93 if a2 != s0
      :                          @90
  1608: c9 68 09                 a2 = a1 - s1
  1611: 01                       fallthrough
      :                          @91
  1612: 82 7a                    a3 = u64 [a0]
  1614: ab 8a f2                 jump @89 if a3 != a1
      :                          @92
  1617: 7b 79                    u64 [a0] = a2
  1619: 01                       fallthrough
      :                          @93
  1620: 7b 1c 50                 u64 [sp + 0x50] = a5
  1623: 95 15 a8 40 01           s0 = sp + 0x140a8
  1628: 82 57 30                 a0 = u64 [s0 + 0x30]
  1631: 82 58 38                 a1 = u64 [s0 + 0x38]
  1634: 33 09                    a2 = 0
  1636: 0a 14                    ecalli 20 // 'machine'
  1638: 7b 57 40                 u64 [s0 + 0x40] = a0
  1641: 95 17 e8 40 01           a0 = sp + 0x140e8
  1646: 95 16 f8 50 01           s1 = sp + 0x150f8
  1651: 7b 67 88 00              u64 [s1 + 0x88] = a0
  1655: 33 07 c0 04 01           a0 = 0x104c0
  1660: 7b 57 48                 u64 [s0 + 0x48] = a0
  1663: 95 17 80 51 01           a0 = sp + 0x15180
  1668: 7b 57 58                 u64 [s0 + 0x58] = a0
  1671: 49 15 50 01              u64 [s0 + 80] = 0x1
  1675: 49 15 60 01              u64 [s0 + 96] = 0x1
  1679: 82 17 58                 a0 = u64 [sp + 0x58]
  1682: 7b 67 90 00              u64 [s1 + 0x90] = a0
  1686: 49 15 68                 u64 [s0 + 104] = 0
  1689: 95 17 58 52 01           a0 = sp + 0x15258
  1694: 95 18 f0 40 01           a1 = sp + 0x140f0
  1699: 50 10 36 a6 0e           ra = 54, jump @308
      :                          @94 [@dyn 27]
  1704: 82 65 68 01              s0 = u64 [s1 + 0x168]
  1708: 82 6b 70 01              a4 = u64 [s1 + 0x170]
  1712: 82 66 60 01              s1 = u64 [s1 + 0x160]
  1716: 33 07 02                 a0 = 0x2
  1719: 33 08                    a1 = 0
  1721: 33 09                    a2 = 0
  1723: 64 5a                    a3 = s0
  1725: 33 00 38                 ra = 0x38
  1728: 0a 64                    ecalli 100 // 'log'
  1730: 01                       fallthrough
      :                          @95 [@dyn 28]
  1731: 82 17 70                 a0 = u64 [sp + 0x70]
  1734: c8 67 07                 a0 = a0 + s1
  1737: 53 27 00 f0 21           jump @101 if a0 <u 4294963200
      :                          @96
  1742: 82 18 50                 a1 = u64 [sp + 0x50]
  1745: 95 87 00 10              a0 = a1 + 0x1000
  1749: 01                       fallthrough
      :                          @97
  1750: 82 78                    a1 = u64 [a0]
  1752: c9 87 09                 a2 = a0 - a1
  1755: ab 59 0f                 jump @101 if a2 != s0
      :                          @98
  1758: c9 68 09                 a2 = a1 - s1
  1761: 01                       fallthrough
      :                          @99
  1762: 82 7a                    a3 = u64 [a0]
  1764: ab 8a f2                 jump @97 if a3 != a1
      :                          @100
  1767: 7b 79                    u64 [a0] = a2
  1769: 01                       fallthrough
      :                          @101
  1770: 95 19 a8 40 01           a2 = sp + 0x140a8
  1775: 82 97                    a0 = u64 [a2]
  1777: 7b 17 38                 u64 [sp + 0x38] = a0
  1780: 82 97 08                 a0 = u64 [a2 + 0x8]
  1783: 7b 17 30                 u64 [sp + 0x30] = a0
  1786: 82 97 10                 a0 = u64 [a2 + 0x10]
  1789: 7b 17 28                 u64 [sp + 0x28] = a0
  1792: 82 95 18                 s0 = u64 [a2 + 0x18]
  1795: 82 98 20                 a1 = u64 [a2 + 0x20]
  1798: 7b 18 20                 u64 [sp + 0x20] = a1
  1801: 80 97 40                 a0 = u32 [a2 + 0x40]
  1804: 82 96 28                 s1 = u64 [a2 + 0x28]
  1807: 49 11 40 ff 0f           u64 [sp + 64] = 0xfff
  1812: 95 59 ff 0f              a2 = s0 + 0xfff
  1816: 98 99 0c                 a2 = a2 >> 0xc
  1819: 33 08 10                 a1 = 0x10
  1822: 7b 17 48                 u64 [sp + 0x48] = a0
  1825: 0a 17                    ecalli 23 // 'zero'
  1827: 01                       fallthrough
      :                          @102
  1828: 51 07 17                 jump @104 if a0 == 0
      :                          @103
  1831: 33 0a fd 03 01           a3 = 0x103fd
  1836: 33 07 02                 a0 = 0x2
  1839: 33 0b 3e                 a4 = 0x3e
  1842: 33 08                    a1 = 0
  1844: 33 09                    a2 = 0
  1846: 0a 64                    ecalli 100 // 'log'
  1848: 28 e0 00                 jump @117
      :                          @104
  1851: 7b 16 18                 u64 [sp + 0x18] = s1
  1854: 82 17 40                 a0 = u64 [sp + 0x40]
  1857: c8 67 07                 a0 = a0 + s1
  1860: 98 77 0c                 a0 = a0 >> 0xc
  1863: 82 19 38                 a2 = u64 [sp + 0x38]
  1866: c8 79 09                 a2 = a2 + a0
  1869: 7b 15 38                 u64 [sp + 0x38] = s0
  1872: 95 57 ff ff 00           a0 = s0 + 0xffff
  1877: 84 77 00 00 ff           a0 = a0 & 0xffffffffffff0000
  1882: 95 75 00 00 02           s0 = a0 + 0x20000
  1887: 98 58 0c                 a1 = s0 >> 0xc
  1890: 82 17 48                 a0 = u64 [sp + 0x48]
  1893: 0a 17                    ecalli 23 // 'zero'
  1895: 01                       fallthrough
      :                          @105
  1896: 51 07 17                 jump @107 if a0 == 0
      :                          @106
  1899: 33 0a bf 03 01           a3 = 0x103bf
  1904: 33 07 02                 a0 = 0x2
  1907: 33 0b 3e                 a4 = 0x3e
  1910: 33 08                    a1 = 0
  1912: 33 09                    a2 = 0
  1914: 0a 64                    ecalli 100 // 'log'
  1916: 28 9c 00                 jump @117
      :                          @107
  1919: 82 16 40                 s1 = u64 [sp + 0x40]
  1922: 82 17 30                 a0 = u64 [sp + 0x30]
  1925: c8 76 06                 s1 = s1 + a0
  1928: 98 69 0c                 a2 = s1 >> 0xc
  1931: 84 67 00 f0              a0 = s1 & 0xfffffffffffff000
  1935: 14 08 00 00 fe fe 00 00 00 00 a1 = 0xfefe0000
  1945: c9 78 08                 a1 = a1 - a0
  1948: 98 88 0c                 a1 = a1 >> 0xc
  1951: 82 17 48                 a0 = u64 [sp + 0x48]
  1954: 0a 17                    ecalli 23 // 'zero'
  1956: 01                       fallthrough
      :                          @108
  1957: 51 07 16                 jump @110 if a0 == 0
      :                          @109
  1960: 33 0a 83 03 01           a3 = 0x10383
  1965: 33 07 02                 a0 = 0x2
  1968: 33 0b 3c                 a4 = 0x3c
  1971: 33 08                    a1 = 0
  1973: 33 09                    a2 = 0
  1975: 0a 64                    ecalli 100 // 'log'
  1977: 28 5f                    jump @117
      :                          @110
  1979: 33 09 00 00 01           a2 = 0x10000
  1984: 82 17 48                 a0 = u64 [sp + 0x48]
  1987: 82 18 28                 a1 = u64 [sp + 0x28]
  1990: 82 1a 38                 a3 = u64 [sp + 0x38]
  1993: 0a 16                    ecalli 22 // 'poke'
  1995: 01                       fallthrough
      :                          @111
  1996: 51 07 16                 jump @113 if a0 == 0
      :                          @112
  1999: 33 0a 45 03 01           a3 = 0x10345
  2004: 33 07 02                 a0 = 0x2
  2007: 33 0b 3e                 a4 = 0x3e
  2010: 33 08                    a1 = 0
  2012: 33 09                    a2 = 0
  2014: 0a 64                    ecalli 100 // 'log'
  2016: 28 38                    jump @117
      :                          @113
  2018: 82 17 48                 a0 = u64 [sp + 0x48]
  2021: 82 18 20                 a1 = u64 [sp + 0x20]
  2024: 64 59                    a2 = s0
  2026: 82 1a 18                 a3 = u64 [sp + 0x18]
  2029: 0a 16                    ecalli 22 // 'poke'
  2031: 01                       fallthrough
      :                          @114
  2032: 51 07 16                 jump @116 if a0 == 0
      :                          @115
  2035: 33 0a 07 03 01           a3 = 0x10307
  2040: 33 07 02                 a0 = 0x2
  2043: 33 0b 3e                 a4 = 0x3e
  2046: 33 08                    a1 = 0
  2048: 33 09                    a2 = 0
  2050: 0a 64                    ecalli 100 // 'log'
  2052: 28 14                    jump @117
      :                          @116
  2054: 33 0a d9 02 01           a3 = 0x102d9
  2059: 33 07 02                 a0 = 0x2
  2062: 33 0b 2e                 a4 = 0x2e
  2065: 33 08                    a1 = 0
  2067: 33 09                    a2 = 0
  2069: 0a 64                    ecalli 100 // 'log'
  2071: 01                       fallthrough
      :                          @117
  2072: 33 05 08 10              s0 = 0x1008
  2076: 95 17 f0 40 01           a0 = sp + 0x140f0
  2081: 33 08                    a1 = 0
  2083: 33 09 08 10              a2 = 0x1008
  2087: 50 10 3a 48 10           ra = 58, jump @376
      :                          @118 [@dyn 29]
  2092: 95 17 f8 50 01           a0 = sp + 0x150f8
  2097: 49 07                    u64 [a0 + 0] = 0
  2099: 95 17 f0 40 01           a0 = sp + 0x140f0
  2104: 33 0a 06                 a3 = 0x6
  2107: 33 08                    a1 = 0
  2109: 7b 15 30                 u64 [sp + 0x30] = s0
  2112: 64 59                    a2 = s0
  2114: 33 0b                    a4 = 0
  2116: 33 0c                    a5 = 0
  2118: 0a 12                    ecalli 18 // 'fetch'
  2120: 01                       fallthrough
      :                          @119
  2121: 95 18 f8 50 01           a1 = sp + 0x150f8
  2126: 7b 87 18                 u64 [a1 + 0x18] = a0
  2129: 51 17 ff 9b 02           jump @147 if a0 == 4294967295
      :                          @120
  2134: 33 0c                    a5 = 0
  2136: 33 07 d0 04 01           a0 = 0x104d0
  2141: 7b 17 28                 u64 [sp + 0x28] = a0
  2144: 33 07 f0 04 01           a0 = 0x104f0
  2149: 7b 17 20                 u64 [sp + 0x20] = a0
  2152: 33 07 00 00 01           a0 = 0x10000
  2157: 7b 17 18                 u64 [sp + 0x18] = a0
  2160: 33 07 20 05 01           a0 = 0x10520
  2165: 7b 17 10                 u64 [sp + 0x10] = a0
  2168: 28 3c                    jump @123
      :                          @121
  2170: 95 17 f8 50 01           a0 = sp + 0x150f8
  2175: 82 7b                    a4 = u64 [a0]
  2177: 95 bb 01                 a4 = a4 + 0x1
  2180: 7b 7b                    u64 [a0] = a4
  2182: 95 17 f0 40 01           a0 = sp + 0x140f0
  2187: 33 0a 06                 a3 = 0x6
  2190: 33 08                    a1 = 0
  2192: 82 19 30                 a2 = u64 [sp + 0x30]
  2195: 33 0c                    a5 = 0
  2197: 0a 12                    ecalli 18 // 'fetch'
  2199: 01                       fallthrough
      :                          @122
  2200: 82 18 40                 a1 = u64 [sp + 0x40]
  2203: 97 88 0c                 a1 = a1 << 0xc
  2206: 82 1c 48                 a5 = u64 [sp + 0x48]
  2209: 82 19 38                 a2 = u64 [sp + 0x38]
  2212: da 98 0c                 a5 = a1 if a2 == 0
  2215: 95 18 f8 50 01           a1 = sp + 0x150f8
  2220: 7b 87 18                 u64 [a1 + 0x18] = a0
  2223: 51 17 ff 36 02           jump @146 if a0 == 4294967295
      :                          @123
  2228: 7b 1c 48                 u64 [sp + 0x48] = a5
  2231: 7b 88 88 00              u64 [a1 + 0x88] = a1
  2235: 82 17 58                 a0 = u64 [sp + 0x58]
  2238: 7b 87 90 00              u64 [a1 + 0x90] = a0
  2242: 95 19 10 51 01           a2 = sp + 0x15110
  2247: 7b 89 98 00              u64 [a1 + 0x98] = a2
  2251: 7b 87 a0 00              u64 [a1 + 0xa0] = a0
  2255: 82 17 28                 a0 = u64 [sp + 0x28]
  2258: 7b 87 60 01              u64 [a1 + 0x160] = a0
  2262: 49 28 68 01 02           u64 [a1 + 360] = 0x2
  2267: 49 28 80 01              u64 [a1 + 384] = 0
  2271: 95 19 80 51 01           a2 = sp + 0x15180
  2276: 7b 89 70 01              u64 [a1 + 0x170] = a2
  2280: 49 28 78 01 02           u64 [a1 + 376] = 0x2
  2285: 95 17 18 51 01           a0 = sp + 0x15118
  2290: 95 16 f8 50 01           s1 = sp + 0x150f8
  2295: 95 18 58 52 01           a1 = sp + 0x15258
  2300: 50 10 3c 4d 0c           ra = 60, jump @308
      :                          @124 [@dyn 30]
  2305: 82 65 28                 s0 = u64 [s1 + 0x28]
  2308: 82 6b 30                 a4 = u64 [s1 + 0x30]
  2311: 82 66 20                 s1 = u64 [s1 + 0x20]
  2314: 33 07 02                 a0 = 0x2
  2317: 33 08                    a1 = 0
  2319: 33 09                    a2 = 0
  2321: 64 5a                    a3 = s0
  2323: 33 00 3e                 ra = 0x3e
  2326: 0a 64                    ecalli 100 // 'log'
  2328: 01                       fallthrough
      :                          @125 [@dyn 31]
  2329: 82 17 70                 a0 = u64 [sp + 0x70]
  2332: c8 67 07                 a0 = a0 + s1
  2335: 82 1c 50                 a5 = u64 [sp + 0x50]
  2338: 33 02 00 10              t0 = 0x1000
  2342: 53 27 00 f0 1c           jump @130 if a0 <u 4294963200
      :                          @126
  2347: c8 2c 08                 a1 = a5 + t0
  2350: 82 87                    a0 = u64 [a1]
  2352: c9 78 09                 a2 = a1 - a0
  2355: ab 59 0f                 jump @130 if a2 != s0
      :                          @127
  2358: c9 67 09                 a2 = a0 - s1
  2361: 01                       fallthrough
      :                          @128
  2362: 82 8a                    a3 = u64 [a1]
  2364: ab 7a ef                 jump @126 if a3 != a0
      :                          @129
  2367: 7b 89                    u64 [a1] = a2
  2369: 01                       fallthrough
      :                          @130
  2370: 95 18 a8 40 01           a1 = sp + 0x140a8
  2375: 80 87 48                 a0 = u32 [a1 + 0x48]
  2378: 80 88 4c                 a1 = u32 [a1 + 0x4c]
  2381: 95 15 f8 50 01           s0 = sp + 0x150f8
  2386: 7b 57 08                 u64 [s0 + 0x8] = a0
  2389: 7b 58 10                 u64 [s0 + 0x10] = a1
  2392: 82 59                    a2 = u64 [s0]
  2394: 7b 19 38                 u64 [sp + 0x38] = a2
  2397: 33 09 01                 a2 = 0x1
  2400: 7b 18 40                 u64 [sp + 0x40] = a1
  2403: 0a 17                    ecalli 23 // 'zero'
  2405: 7b 57 f8 00              u64 [s0 + 0xf8] = a0
  2409: 95 17 00 51 01           a0 = sp + 0x15100
  2414: 7b 57 60 01              u64 [s0 + 0x160] = a0
  2418: 82 17 58                 a0 = u64 [sp + 0x58]
  2421: 7b 57 68 01              u64 [s0 + 0x168] = a0
  2425: 95 18 08 51 01           a1 = sp + 0x15108
  2430: 7b 58 70 01              u64 [s0 + 0x170] = a1
  2434: 7b 57 78 01              u64 [s0 + 0x178] = a0
  2438: 95 18 f0 51 01           a1 = sp + 0x151f0
  2443: 7b 58 80 01              u64 [s0 + 0x180] = a1
  2447: 7b 57 88 01              u64 [s0 + 0x188] = a0
  2451: 82 17 20                 a0 = u64 [sp + 0x20]
  2454: 7b 57 88 00              u64 [s0 + 0x88] = a0
  2458: 49 25 90 00 03           u64 [s0 + 144] = 0x3
  2463: 49 25 a8 00              u64 [s0 + 168] = 0
  2467: 95 17 58 52 01           a0 = sp + 0x15258
  2472: 7b 57 98 00              u64 [s0 + 0x98] = a0
  2476: 49 25 a0 00 03           u64 [s0 + 160] = 0x3
  2481: 95 17 18 51 01           a0 = sp + 0x15118
  2486: 95 18 80 51 01           a1 = sp + 0x15180
  2491: 50 10 40 8e 0b           ra = 64, jump @308
      :                          @131 [@dyn 32]
  2496: 82 56 28                 s1 = u64 [s0 + 0x28]
  2499: 82 5b 30                 a4 = u64 [s0 + 0x30]
  2502: 82 55 20                 s0 = u64 [s0 + 0x20]
  2505: 33 07 02                 a0 = 0x2
  2508: 33 08                    a1 = 0
  2510: 33 09                    a2 = 0
  2512: 64 6a                    a3 = s1
  2514: 33 00 42                 ra = 0x42
  2517: 0a 64                    ecalli 100 // 'log'
  2519: 01                       fallthrough
      :                          @132 [@dyn 33]
  2520: 33 02 00 10              t0 = 0x1000
  2524: 82 1c 50                 a5 = u64 [sp + 0x50]
  2527: 82 17 70                 a0 = u64 [sp + 0x70]
  2530: c8 57 07                 a0 = a0 + s0
  2533: 53 27 00 f0 1c           jump @137 if a0 <u 4294963200
      :                          @133
  2538: c8 2c 08                 a1 = a5 + t0
  2541: 82 87                    a0 = u64 [a1]
  2543: c9 78 09                 a2 = a1 - a0
  2546: ab 69 0f                 jump @137 if a2 != s1
      :                          @134
  2549: c9 57 09                 a2 = a0 - s0
  2552: 01                       fallthrough
      :                          @135
  2553: 82 8a                    a3 = u64 [a1]
  2555: ab 7a ef                 jump @133 if a3 != a0
      :                          @136
  2558: 7b 89                    u64 [a1] = a2
  2560: 01                       fallthrough
      :                          @137
  2561: 95 15 f8 50 01           s0 = sp + 0x150f8
  2566: 82 59 10                 a2 = u64 [s0 + 0x10]
  2569: 82 57 08                 a0 = u64 [s0 + 0x8]
  2572: 95 18 f0 40 01           a1 = sp + 0x140f0
  2577: 7b 58 00 01              u64 [s0 + 0x100] = a1
  2581: 97 99 0c                 a2 = a2 << 0xc
  2584: 7b 59 08 01              u64 [s0 + 0x108] = a2
  2588: 33 0a 00 10              a3 = 0x1000
  2592: 95 18 f8 40 01           a1 = sp + 0x140f8
  2597: 0a 16                    ecalli 22 // 'poke'
  2599: 7b 57 20 01              u64 [s0 + 0x120] = a0
  2603: 95 17 00 51 01           a0 = sp + 0x15100
  2608: 7b 57 60 01              u64 [s0 + 0x160] = a0
  2612: 82 17 58                 a0 = u64 [sp + 0x58]
  2615: 7b 57 68 01              u64 [s0 + 0x168] = a0
  2619: 95 18 f8 51 01           a1 = sp + 0x151f8
  2624: 7b 58 70 01              u64 [s0 + 0x170] = a1
  2628: 7b 57 78 01              u64 [s0 + 0x178] = a0
  2632: 95 18 00 52 01           a1 = sp + 0x15200
  2637: 7b 58 80 01              u64 [s0 + 0x180] = a1
  2641: 7b 57 88 01              u64 [s0 + 0x188] = a0
  2645: 82 18 18                 a1 = u64 [sp + 0x18]
  2648: 7b 58 90 01              u64 [s0 + 0x190] = a1
  2652: 7b 57 98 01              u64 [s0 + 0x198] = a0
  2656: 95 18 18 52 01           a1 = sp + 0x15218
  2661: 7b 58 a0 01              u64 [s0 + 0x1a0] = a1
  2665: 7b 57 a8 01              u64 [s0 + 0x1a8] = a0
  2669: 82 17 10                 a0 = u64 [sp + 0x10]
  2672: 7b 57 88 00              u64 [s0 + 0x88] = a0
  2676: 49 25 90 00 05           u64 [s0 + 144] = 0x5
  2681: 49 25 a8 00              u64 [s0 + 168] = 0
  2685: 95 17 58 52 01           a0 = sp + 0x15258
  2690: 7b 57 98 00              u64 [s0 + 0x98] = a0
  2694: 49 25 a0 00 05           u64 [s0 + 160] = 0x5
  2699: 95 17 18 51 01           a0 = sp + 0x15118
  2704: 95 18 80 51 01           a1 = sp + 0x15180
  2709: 50 10 44 b4 0a           ra = 68, jump @308
      :                          @138 [@dyn 34]
  2714: 82 56 28                 s1 = u64 [s0 + 0x28]
  2717: 82 5b 30                 a4 = u64 [s0 + 0x30]
  2720: 82 55 20                 s0 = u64 [s0 + 0x20]
  2723: 33 07 02                 a0 = 0x2
  2726: 33 08                    a1 = 0
  2728: 33 09                    a2 = 0
  2730: 64 6a                    a3 = s1
  2732: 33 00 46                 ra = 0x46
  2735: 0a 64                    ecalli 100 // 'log'
  2737: 01                       fallthrough
      :                          @139 [@dyn 35]
  2738: 33 02 00 10              t0 = 0x1000
  2742: 82 1c 50                 a5 = u64 [sp + 0x50]
  2745: 82 17 70                 a0 = u64 [sp + 0x70]
  2748: c8 57 07                 a0 = a0 + s0
  2751: 53 27 00 f0 bb fd        jump @121 if a0 <u 4294963200
      :                          @140
  2757: c8 2c 08                 a1 = a5 + t0
  2760: 82 87                    a0 = u64 [a1]
  2762: c9 78 09                 a2 = a1 - a0
  2765: ab 69 ad fd              jump @121 if a2 != s1
      :                          @141
  2769: c9 57 09                 a2 = a0 - s0
  2772: 01                       fallthrough
      :                          @142
  2773: 82 8a                    a3 = u64 [a1]
  2775: ab 7a ee                 jump @140 if a3 != a0
      :                          @143
  2778: 7b 89                    u64 [a1] = a2
  2780: 33 0b                    a4 = 0
  2782: 01                       fallthrough
      :                          @144
  2783: ab 7a e6                 jump @140 if a3 != a0
      :                          @145
  2786: 28 98 fd                 jump @121
      :                          @146
  2789: 82 87                    a0 = u64 [a1]
  2791: 97 77 0c                 a0 = a0 << 0xc
  2794: 28 07                    jump @148
      :                          @147
  2796: 33 07                    a0 = 0
  2798: 33 0c                    a5 = 0
  2800: 01                       fallthrough
      :                          @148
  2801: 82 19 08                 a2 = u64 [sp + 0x8]
  2804: 82 1a 68                 a3 = u64 [sp + 0x68]
  2807: 82 1b 60                 a4 = u64 [sp + 0x60]
  2810: 49 18 50                 u64 [a1 + 80] = 0
  2813: 49 18 48                 u64 [a1 + 72] = 0
  2816: 49 18 40                 u64 [a1 + 64] = 0
  2819: 49 18 38                 u64 [a1 + 56] = 0
  2822: 49 18 30                 u64 [a1 + 48] = 0
  2825: 49 28 80 00              u64 [a1 + 128] = 0
  2829: 95 16 f8 50 01           s1 = sp + 0x150f8
  2834: 14 08 00 00 ff ff 00 00 00 00 a1 = 0xffff0000
  2844: 7b 68 20                 u64 [s1 + 0x20] = a1
  2847: 14 08 00 00 fe fe 00 00 00 00 a1 = 0xfefe0000
  2857: 7b 68 28                 u64 [s1 + 0x28] = a1
  2860: 7b 6c 58                 u64 [s1 + 0x58] = a5
  2863: 7b 67 60                 u64 [s1 + 0x60] = a0
  2866: 7b 69 68                 u64 [s1 + 0x68] = a2
  2869: 7b 6a 70                 u64 [s1 + 0x70] = a3
  2872: 7b 6b 78                 u64 [s1 + 0x78] = a4
  2875: 95 17 18 51 01           a0 = sp + 0x15118
  2880: 7b 67 20 01              u64 [s1 + 0x120] = a0
  2884: 33 07 0a                 a0 = 0xa
  2887: 7b 67 28 01              u64 [s1 + 0x128] = a0
  2891: 33 07 70 05 01           a0 = 0x10570
  2896: 7b 67 60 01              u64 [s1 + 0x160] = a0
  2900: 49 26 68 01 01           u64 [s1 + 360] = 0x1
  2905: 49 26 80 01              u64 [s1 + 384] = 0
  2909: 95 17 18 52 01           a0 = sp + 0x15218
  2914: 7b 67 70 01              u64 [s1 + 0x170] = a0
  2918: 49 26 78 01 01           u64 [s1 + 376] = 0x1
  2923: 95 17 80 51 01           a0 = sp + 0x15180
  2928: 95 18 58 52 01           a1 = sp + 0x15258
  2933: 50 10 48 d4 09           ra = 72, jump @308
      :                          @149 [@dyn 36]
  2938: 82 65 90 00              s0 = u64 [s1 + 0x90]
  2942: 82 6b 98 00              a4 = u64 [s1 + 0x98]
  2946: 82 66 88 00              s1 = u64 [s1 + 0x88]
  2950: 33 07 02                 a0 = 0x2
  2953: 33 08                    a1 = 0
  2955: 33 09                    a2 = 0
  2957: 64 5a                    a3 = s0
  2959: 33 00 4a                 ra = 0x4a
  2962: 0a 64                    ecalli 100 // 'log'
  2964: 01                       fallthrough
      :                          @150 [@dyn 37]
  2965: 82 17 70                 a0 = u64 [sp + 0x70]
  2968: c8 67 07                 a0 = a0 + s1
  2971: 53 27 00 f0 21           jump @156 if a0 <u 4294963200
      :                          @151
  2976: 82 18 50                 a1 = u64 [sp + 0x50]
  2979: 95 87 00 10              a0 = a1 + 0x1000
  2983: 01                       fallthrough
      :                          @152
  2984: 82 78                    a1 = u64 [a0]
  2986: c9 87 09                 a2 = a0 - a1
  2989: ab 59 0f                 jump @156 if a2 != s0
      :                          @153
  2992: c9 68 09                 a2 = a1 - s1
  2995: 01                       fallthrough
      :                          @154
  2996: 82 7a                    a3 = u64 [a0]
  2998: ab 8a f2                 jump @152 if a3 != a1
      :                          @155
  3001: 7b 79                    u64 [a0] = a2
  3003: 01                       fallthrough
      :                          @156
  3004: 95 13 f8 50 01           t1 = sp + 0x150f8
  3009: 82 32 20                 t0 = u64 [t1 + 0x20]
  3012: 82 39 28                 a2 = u64 [t1 + 0x28]
  3015: 82 34 30                 t2 = u64 [t1 + 0x30]
  3018: 82 30 38                 ra = u64 [t1 + 0x38]
  3021: 82 3b 40                 a4 = u64 [t1 + 0x40]
  3024: 82 3c 48                 a5 = u64 [t1 + 0x48]
  3027: 82 36 50                 s1 = u64 [t1 + 0x50]
  3030: 82 35 58                 s0 = u64 [t1 + 0x58]
  3033: 49 23 88 00 00 00 01     u64 [t1 + 136] = 0x10000
  3040: 82 37 60                 a0 = u64 [t1 + 0x60]
  3043: 7b 32 90 00              u64 [t1 + 0x90] = t0
  3047: 82 38 68                 a1 = u64 [t1 + 0x68]
  3050: 7b 39 98 00              u64 [t1 + 0x98] = a2
  3054: 82 39 70                 a2 = u64 [t1 + 0x70]
  3057: 7b 34 a0 00              u64 [t1 + 0xa0] = t2
  3061: 82 3a 78                 a3 = u64 [t1 + 0x78]
  3064: 7b 30 a8 00              u64 [t1 + 0xa8] = ra
  3068: 82 32 80 00              t0 = u64 [t1 + 0x80]
  3072: 7b 3b b0 00              u64 [t1 + 0xb0] = a4
  3076: 7b 3c b8 00              u64 [t1 + 0xb8] = a5
  3080: 7b 36 c0 00              u64 [t1 + 0xc0] = s1
  3084: 7b 35 c8 00              u64 [t1 + 0xc8] = s0
  3088: 7b 37 d0 00              u64 [t1 + 0xd0] = a0
  3092: 7b 38 d8 00              u64 [t1 + 0xd8] = a1
  3096: 95 18 f8 50 01           a1 = sp + 0x150f8
  3101: 7b 89 e0 00              u64 [a1 + 0xe0] = a2
  3105: 7b 8a e8 00              u64 [a1 + 0xe8] = a3
  3109: 7b 82 f0 00              u64 [a1 + 0xf0] = t0
  3113: 33 07 80 05 01           a0 = 0x10580
  3118: 7b 17 30                 u64 [sp + 0x30] = a0
  3121: 33 07 90 05 01           a0 = 0x10590
  3126: 7b 17 28                 u64 [sp + 0x28] = a0
  3129: 82 17 50                 a0 = u64 [sp + 0x50]
  3132: 95 76 00 10              s1 = a0 + 0x1000
  3136: 01                       fallthrough
      :                          @157
  3137: 7b 88 08 01              u64 [a1 + 0x108] = a1
  3141: 82 17 58                 a0 = u64 [sp + 0x58]
  3144: 7b 87 10 01              u64 [a1 + 0x110] = a0
  3148: 82 17 30                 a0 = u64 [sp + 0x30]
  3151: 7b 87 60 01              u64 [a1 + 0x160] = a0
  3155: 49 28 68 01 01           u64 [a1 + 360] = 0x1
  3160: 49 28 80 01              u64 [a1 + 384] = 0
  3164: 95 19 00 52 01           a2 = sp + 0x15200
  3169: 7b 89 70 01              u64 [a1 + 0x170] = a2
  3173: 49 28 78 01 01           u64 [a1 + 376] = 0x1
  3178: 95 17 18 52 01           a0 = sp + 0x15218
  3183: 95 18 58 52 01           a1 = sp + 0x15258
  3188: 50 10 4c d5 08           ra = 76, jump @308
      :                          @158 [@dyn 38]
  3193: 95 17 f8 50 01           a0 = sp + 0x150f8
  3198: 82 75 28 01              s0 = u64 [a0 + 0x128]
  3202: 82 7b 30 01              a4 = u64 [a0 + 0x130]
  3206: 82 77 20 01              a0 = u64 [a0 + 0x120]
  3210: 7b 17 68                 u64 [sp + 0x68] = a0
  3213: 33 07 02                 a0 = 0x2
  3216: 33 08                    a1 = 0
  3218: 33 09                    a2 = 0
  3220: 64 5a                    a3 = s0
  3222: 33 00 4e                 ra = 0x4e
  3225: 0a 64                    ecalli 100 // 'log'
  3227: 01                       fallthrough
      :                          @159 [@dyn 39]
  3228: 82 1b 68                 a4 = u64 [sp + 0x68]
  3231: 82 17 70                 a0 = u64 [sp + 0x70]
  3234: c8 b7 07                 a0 = a0 + a4
  3237: 53 27 00 f0 19           jump @164 if a0 <u 4294963200
      :                          @160
  3242: 82 67                    a0 = u64 [s1]
  3244: c9 76 08                 a1 = s1 - a0
  3247: ab 58 0f                 jump @164 if a1 != s0
      :                          @161
  3250: c9 b7 08                 a1 = a0 - a4
  3253: 01                       fallthrough
      :                          @162
  3254: 82 69                    a2 = u64 [s1]
  3256: ab 79 f2                 jump @160 if a2 != a0
      :                          @163
  3259: 7b 68                    u64 [s1] = a1
  3261: 01                       fallthrough
      :                          @164
  3262: 95 17 a8 40 01           a0 = sp + 0x140a8
  3267: 82 77 40                 a0 = u64 [a0 + 0x40]
  3270: 95 18 80 51 01           a1 = sp + 0x15180
  3275: 0a 19                    ecalli 25 // 'invoke'
  3277: 95 19 f8 50 01           a2 = sp + 0x150f8
  3282: 7b 97 f8 00              u64 [a2 + 0xf8] = a0
  3286: 7b 98 00 01              u64 [a2 + 0x100] = a1
  3290: 95 17 e8 40 01           a0 = sp + 0x140e8
  3295: 7b 97 60 01              u64 [a2 + 0x160] = a0
  3299: 82 17 58                 a0 = u64 [sp + 0x58]
  3302: 7b 97 68 01              u64 [a2 + 0x168] = a0
  3306: 95 18 f0 51 01           a1 = sp + 0x151f0
  3311: 7b 98 70 01              u64 [a2 + 0x170] = a1
  3315: 7b 97 78 01              u64 [a2 + 0x178] = a0
  3319: 95 18 f8 51 01           a1 = sp + 0x151f8
  3324: 7b 98 80 01              u64 [a2 + 0x180] = a1
  3328: 7b 97 88 01              u64 [a2 + 0x188] = a0
  3332: 82 17 28                 a0 = u64 [sp + 0x28]
  3335: 7b 97 20 01              u64 [a2 + 0x120] = a0
  3339: 49 29 28 01 03           u64 [a2 + 296] = 0x3
  3344: 49 29 40 01              u64 [a2 + 320] = 0
  3348: 95 17 58 52 01           a0 = sp + 0x15258
  3353: 7b 97 30 01              u64 [a2 + 0x130] = a0
  3357: 49 29 38 01 03           u64 [a2 + 312] = 0x3
  3362: 95 17 00 52 01           a0 = sp + 0x15200
  3367: 95 18 18 52 01           a1 = sp + 0x15218
  3372: 50 10 50 1d 08           ra = 80, jump @308
      :                          @165 [@dyn 40]
  3377: 95 17 f8 50 01           a0 = sp + 0x150f8
  3382: 82 75 10 01              s0 = u64 [a0 + 0x110]
  3386: 82 7b 18 01              a4 = u64 [a0 + 0x118]
  3390: 82 77 08 01              a0 = u64 [a0 + 0x108]
  3394: 7b 17 68                 u64 [sp + 0x68] = a0
  3397: 33 07 02                 a0 = 0x2
  3400: 33 08                    a1 = 0
  3402: 33 09                    a2 = 0
  3404: 64 5a                    a3 = s0
  3406: 33 00 52                 ra = 0x52
  3409: 0a 64                    ecalli 100 // 'log'
  3411: 01                       fallthrough
      :                          @166 [@dyn 41]
  3412: 82 1b 68                 a4 = u64 [sp + 0x68]
  3415: 82 17 70                 a0 = u64 [sp + 0x70]
  3418: c8 b7 07                 a0 = a0 + a4
  3421: 53 27 00 f0 19           jump @171 if a0 <u 4294963200
      :                          @167
  3426: 82 67                    a0 = u64 [s1]
  3428: c9 76 08                 a1 = s1 - a0
  3431: ab 58 0f                 jump @171 if a1 != s0
      :                          @168
  3434: c9 b7 08                 a1 = a0 - a4
  3437: 01                       fallthrough
      :                          @169
  3438: 82 69                    a2 = u64 [s1]
  3440: ab 79 f2                 jump @167 if a2 != a0
      :                          @170
  3443: 7b 68                    u64 [s1] = a1
  3445: 01                       fallthrough
      :                          @171
  3446: 95 18 f8 50 01           a1 = sp + 0x150f8
  3451: 82 87 f8 00              a0 = u64 [a1 + 0xf8]
  3455: 82 88 00 01              a1 = u64 [a1 + 0x100]
  3459: 85 77 03                 a0 = a0 ^ 0x3
  3462: 85 88 64                 a1 = a1 ^ 0x64
  3465: d4 87 05                 s0 = a0 | a1
  3468: 95 17 18 51 01           a0 = sp + 0x15118
  3473: 33 09 68                 a2 = 0x68
  3476: 95 18 88 51 01           a1 = sp + 0x15188
  3481: 50 10 54 24 0a           ra = 84, jump @358
      :                          @172 [@dyn 42]
  3486: 95 17 f8 50 01           a0 = sp + 0x150f8
  3491: 82 78 58                 a1 = u64 [a0 + 0x58]
  3494: 7b 18 68                 u64 [sp + 0x68] = a1
  3497: 52 05 93 00              jump @175 if s0 != 0
      :                          @173
  3501: 82 78 60                 a1 = u64 [a0 + 0x60]
  3504: 7b 18 40                 u64 [sp + 0x40] = a1
  3507: 82 75 68                 s0 = u64 [a0 + 0x68]
  3510: 7b 15 38                 u64 [sp + 0x38] = s0
  3513: 82 78 70                 a1 = u64 [a0 + 0x70]
  3516: 7b 18 60                 u64 [sp + 0x60] = a1
  3519: 82 78 78                 a1 = u64 [a0 + 0x78]
  3522: 7b 18 48                 u64 [sp + 0x48] = a1
  3525: 49 27 58 01              u64 [a0 + 344] = 0
  3529: 49 27 50 01              u64 [a0 + 336] = 0
  3533: 49 27 48 01              u64 [a0 + 328] = 0
  3537: 49 27 40 01              u64 [a0 + 320] = 0
  3541: 49 27 38 01              u64 [a0 + 312] = 0
  3545: 49 27 30 01              u64 [a0 + 304] = 0
  3549: 49 27 28 01              u64 [a0 + 296] = 0
  3553: 49 27 20 01              u64 [a0 + 288] = 0
  3557: 95 17 58 52 01           a0 = sp + 0x15258
  3562: 33 09 00 01              a2 = 0x100
  3566: 33 08                    a1 = 0
  3568: 50 10 56 7f 0a           ra = 86, jump @376
      :                          @174 [@dyn 43]
  3573: 95 17 a8 40 01           a0 = sp + 0x140a8
  3578: 82 77 40                 a0 = u64 [a0 + 0x40]
  3581: 95 18 18 52 01           a1 = sp + 0x15218
  3586: 82 19 40                 a2 = u64 [sp + 0x40]
  3589: 64 5a                    a3 = s0
  3591: 0a 15                    ecalli 21 // 'peek'
  3593: 95 17 a8 40 01           a0 = sp + 0x140a8
  3598: 82 77 40                 a0 = u64 [a0 + 0x40]
  3601: 95 18 58 52 01           a1 = sp + 0x15258
  3606: 82 19 60                 a2 = u64 [sp + 0x60]
  3609: 82 15 48                 s0 = u64 [sp + 0x48]
  3612: 64 5a                    a3 = s0
  3614: 0a 15                    ecalli 21 // 'peek'
  3616: 95 18 18 52 01           a1 = sp + 0x15218
  3621: 95 1a 58 52 01           a3 = sp + 0x15258
  3626: 82 17 68                 a0 = u64 [sp + 0x68]
  3629: 82 19 38                 a2 = u64 [sp + 0x38]
  3632: 64 5b                    a4 = s0
  3634: 0a 64                    ecalli 100 // 'log'
  3636: 95 18 f8 50 01           a1 = sp + 0x150f8
  3641: 28 08 fe                 jump @157
      :                          @175
  3644: 95 17 f8 40 01           a0 = sp + 0x140f8
  3649: 33 09 00 10              a2 = 0x1000
  3653: 33 05 00 10              s0 = 0x1000
  3657: 33 08                    a1 = 0
  3659: 50 10 58 24 0a           ra = 88, jump @376
      :                          @176 [@dyn 44]
  3664: 95 1a a8 40 01           a3 = sp + 0x140a8
  3669: 82 a7 40                 a0 = u64 [a3 + 0x40]
  3672: 7a a7 48                 u32 [a3 + 0x48] = a0
  3675: 82 16 68                 s1 = u64 [sp + 0x68]
  3678: 98 68 0c                 a1 = s1 >> 0xc
  3681: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  3684: 33 0a 00 10              a3 = 0x1000
  3688: 95 18 f8 40 01           a1 = sp + 0x140f8
  3693: 64 69                    a2 = s1
  3695: 0a 15                    ecalli 21 // 'peek'
  3697: 83 55 08                 i32 s0 = s0 + 0x8
  3700: 95 17 f0 40 01           a0 = sp + 0x140f0
  3705: 64 58                    a1 = s0
  3707: 0a 13                    ecalli 19 // 'export'
  3709: 33 09 00 10              a2 = 0x1000
  3713: 95 17 f8 40 01           a0 = sp + 0x140f8
  3718: 33 08                    a1 = 0
  3720: 50 10 5a e7 09           ra = 90, jump @376
      :                          @177 [@dyn 45]
  3725: 95 1a a8 40 01           a3 = sp + 0x140a8
  3730: 82 a7 40                 a0 = u64 [a3 + 0x40]
  3733: 7a a7 48                 u32 [a3 + 0x48] = a0
  3736: 95 69 00 10              a2 = s1 + 0x1000
  3740: 98 98 0c                 a1 = a2 >> 0xc
  3743: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  3746: 33 0a 00 10              a3 = 0x1000
  3750: 95 18 f8 40 01           a1 = sp + 0x140f8
  3755: 0a 15                    ecalli 21 // 'peek'
  3757: 95 17 f0 40 01           a0 = sp + 0x140f0
  3762: 64 58                    a1 = s0
  3764: 0a 13                    ecalli 19 // 'export'
  3766: 33 09 00 10              a2 = 0x1000
  3770: 95 17 f8 40 01           a0 = sp + 0x140f8
  3775: 33 08                    a1 = 0
  3777: 50 10 5c ae 09           ra = 92, jump @376
      :                          @178 [@dyn 46]
  3782: 95 1a a8 40 01           a3 = sp + 0x140a8
  3787: 82 a7 40                 a0 = u64 [a3 + 0x40]
  3790: 7a a7 48                 u32 [a3 + 0x48] = a0
  3793: 95 69 00 20              a2 = s1 + 0x2000
  3797: 98 98 0c                 a1 = a2 >> 0xc
  3800: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  3803: 33 0a 00 10              a3 = 0x1000
  3807: 95 18 f8 40 01           a1 = sp + 0x140f8
  3812: 0a 15                    ecalli 21 // 'peek'
  3814: 95 17 f0 40 01           a0 = sp + 0x140f0
  3819: 64 58                    a1 = s0
  3821: 0a 13                    ecalli 19 // 'export'
  3823: 33 09 00 10              a2 = 0x1000
  3827: 95 17 f8 40 01           a0 = sp + 0x140f8
  3832: 33 08                    a1 = 0
  3834: 50 10 5e 75 09           ra = 94, jump @376
      :                          @179 [@dyn 47]
  3839: 95 18 a8 40 01           a1 = sp + 0x140a8
  3844: 82 87 40                 a0 = u64 [a1 + 0x40]
  3847: 7a 87 48                 u32 [a1 + 0x48] = a0
  3850: 95 1a a8 40 01           a3 = sp + 0x140a8
  3855: 95 69 00 30              a2 = s1 + 0x3000
  3859: 98 98 0c                 a1 = a2 >> 0xc
  3862: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  3865: 33 0a 00 10              a3 = 0x1000
  3869: 95 18 f8 40 01           a1 = sp + 0x140f8
  3874: 0a 15                    ecalli 21 // 'peek'
  3876: 95 17 f0 40 01           a0 = sp + 0x140f0
  3881: 64 58                    a1 = s0
  3883: 64 56                    s1 = s0
  3885: 0a 13                    ecalli 19 // 'export'
  3887: 33 09 00 10              a2 = 0x1000
  3891: 95 17 f8 40 01           a0 = sp + 0x140f8
  3896: 33 08                    a1 = 0
  3898: 50 10 60 35 09           ra = 96, jump @376
      :                          @180 [@dyn 48]
  3903: 95 1a a8 40 01           a3 = sp + 0x140a8
  3908: 82 a7 40                 a0 = u64 [a3 + 0x40]
  3911: 7a a7 48                 u32 [a3 + 0x48] = a0
  3914: 82 15 68                 s0 = u64 [sp + 0x68]
  3917: 95 59 00 40              a2 = s0 + 0x4000
  3921: 98 98 0c                 a1 = a2 >> 0xc
  3924: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  3927: 33 0a 00 10              a3 = 0x1000
  3931: 95 18 f8 40 01           a1 = sp + 0x140f8
  3936: 0a 15                    ecalli 21 // 'peek'
  3938: 95 17 f0 40 01           a0 = sp + 0x140f0
  3943: 64 68                    a1 = s1
  3945: 0a 13                    ecalli 19 // 'export'
  3947: 33 09 00 10              a2 = 0x1000
  3951: 95 17 f8 40 01           a0 = sp + 0x140f8
  3956: 33 08                    a1 = 0
  3958: 50 10 62 f9 08           ra = 98, jump @376
      :                          @181 [@dyn 49]
  3963: 95 18 a8 40 01           a1 = sp + 0x140a8
  3968: 82 87 40                 a0 = u64 [a1 + 0x40]
  3971: 7a 87 48                 u32 [a1 + 0x48] = a0
  3974: 95 1a a8 40 01           a3 = sp + 0x140a8
  3979: 95 59 00 50              a2 = s0 + 0x5000
  3983: 98 98 0c                 a1 = a2 >> 0xc
  3986: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  3989: 33 0a 00 10              a3 = 0x1000
  3993: 95 18 f8 40 01           a1 = sp + 0x140f8
  3998: 0a 15                    ecalli 21 // 'peek'
  4000: 95 17 f0 40 01           a0 = sp + 0x140f0
  4005: 7b 16 60                 u64 [sp + 0x60] = s1
  4008: 64 68                    a1 = s1
  4010: 0a 13                    ecalli 19 // 'export'
  4012: 33 09 00 10              a2 = 0x1000
  4016: 95 17 f8 40 01           a0 = sp + 0x140f8
  4021: 33 08                    a1 = 0
  4023: 50 10 64 b8 08           ra = 100, jump @376
      :                          @182 [@dyn 50]
  4028: 95 1a a8 40 01           a3 = sp + 0x140a8
  4033: 82 a7 40                 a0 = u64 [a3 + 0x40]
  4036: 7a a7 48                 u32 [a3 + 0x48] = a0
  4039: 95 59 00 60              a2 = s0 + 0x6000
  4043: 98 98 0c                 a1 = a2 >> 0xc
  4046: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  4049: 33 0a 00 10              a3 = 0x1000
  4053: 95 18 f8 40 01           a1 = sp + 0x140f8
  4058: 0a 15                    ecalli 21 // 'peek'
  4060: 95 17 f0 40 01           a0 = sp + 0x140f0
  4065: 64 68                    a1 = s1
  4067: 0a 13                    ecalli 19 // 'export'
  4069: 33 09 00 10              a2 = 0x1000
  4073: 95 17 f8 40 01           a0 = sp + 0x140f8
  4078: 33 08                    a1 = 0
  4080: 50 10 66 7f 08           ra = 102, jump @376
      :                          @183 [@dyn 51]
  4085: 95 18 a8 40 01           a1 = sp + 0x140a8
  4090: 82 87 40                 a0 = u64 [a1 + 0x40]
  4093: 7a 87 48                 u32 [a1 + 0x48] = a0
  4096: 95 1a a8 40 01           a3 = sp + 0x140a8
  4101: 95 59 00 70              a2 = s0 + 0x7000
  4105: 98 98 0c                 a1 = a2 >> 0xc
  4108: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  4111: 33 0a 00 10              a3 = 0x1000
  4115: 95 18 f8 40 01           a1 = sp + 0x140f8
  4120: 0a 15                    ecalli 21 // 'peek'
  4122: 95 17 f0 40 01           a0 = sp + 0x140f0
  4127: 82 16 60                 s1 = u64 [sp + 0x60]
  4130: 64 68                    a1 = s1
  4132: 0a 13                    ecalli 19 // 'export'
  4134: 33 09 00 10              a2 = 0x1000
  4138: 95 17 f8 40 01           a0 = sp + 0x140f8
  4143: 33 08                    a1 = 0
  4145: 50 10 68 3e 08           ra = 104, jump @376
      :                          @184 [@dyn 52]
  4150: 95 1a a8 40 01           a3 = sp + 0x140a8
  4155: 82 a7 40                 a0 = u64 [a3 + 0x40]
  4158: 7a a7 48                 u32 [a3 + 0x48] = a0
  4161: 95 59 00 80 00           a2 = s0 + 0x8000
  4166: 98 98 0c                 a1 = a2 >> 0xc
  4169: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  4172: 95 15 a8 40 01           s0 = sp + 0x140a8
  4177: 33 0a 00 10              a3 = 0x1000
  4181: 95 18 f8 40 01           a1 = sp + 0x140f8
  4186: 0a 15                    ecalli 21 // 'peek'
  4188: 95 17 f0 40 01           a0 = sp + 0x140f0
  4193: 64 68                    a1 = s1
  4195: 0a 13                    ecalli 19 // 'export'
  4197: 82 57 40                 a0 = u64 [s0 + 0x40]
  4200: 0a 1a                    ecalli 26 // 'expunge'
  4202: 82 17 58                 a0 = u64 [sp + 0x58]
  4205: 95 18 f8 50 01           a1 = sp + 0x150f8
  4210: 7b 87 10 01              u64 [a1 + 0x110] = a0
  4214: 33 07 c0 05 01           a0 = 0x105c0
  4219: 7b 87 60 01              u64 [a1 + 0x160] = a0
  4223: 95 17 00 52 01           a0 = sp + 0x15200
  4228: 7b 87 70 01              u64 [a1 + 0x170] = a0
  4232: 49 28 68 01 01           u64 [a1 + 360] = 0x1
  4237: 49 28 78 01 01           u64 [a1 + 376] = 0x1
  4242: 7b 88 08 01              u64 [a1 + 0x108] = a1
  4246: 49 28 80 01              u64 [a1 + 384] = 0
  4250: 95 16 f8 50 01           s1 = sp + 0x150f8
  4255: 95 17 18 52 01           a0 = sp + 0x15218
  4260: 95 18 58 52 01           a1 = sp + 0x15258
  4265: 50 10 6a a0 04           ra = 106, jump @308
      :                          @185 [@dyn 53]
  4270: 82 65 28 01              s0 = u64 [s1 + 0x128]
  4274: 82 6b 30 01              a4 = u64 [s1 + 0x130]
  4278: 82 66 20 01              s1 = u64 [s1 + 0x120]
  4282: 33 07 02                 a0 = 0x2
  4285: 33 08                    a1 = 0
  4287: 33 09                    a2 = 0
  4289: 64 5a                    a3 = s0
  4291: 33 00 6c                 ra = 0x6c
  4294: 0a 64                    ecalli 100 // 'log'
  4296: 01                       fallthrough
      :                          @186 [@dyn 54]
  4297: 82 17 70                 a0 = u64 [sp + 0x70]
  4300: c8 67 07                 a0 = a0 + s1
  4303: 53 27 00 f0 af f3        jump @76 if a0 <u 4294963200
      :                          @187
  4309: 82 17 50                 a0 = u64 [sp + 0x50]
  4312: 95 77 00 10              a0 = a0 + 0x1000
  4316: 01                       fallthrough
      :                          @188
  4317: 82 78                    a1 = u64 [a0]
  4319: c9 87 09                 a2 = a0 - a1
  4322: ab 59 9c f3              jump @76 if a2 != s0
      :                          @189
  4326: c9 68 09                 a2 = a1 - s1
  4329: 01                       fallthrough
      :                          @190
  4330: 82 7a                    a3 = u64 [a0]
  4332: ab 8a f1                 jump @188 if a3 != a1
      :                          @191
  4335: 7b 79                    u64 [a0] = a2
  4337: 33 0b                    a4 = 0
  4339: 01                       fallthrough
      :                          @192
  4340: ab 8a e9                 jump @188 if a3 != a1
      :                          @193
  4343: 28 87 f3                 jump @76
      :                          @194
  4346: 00                       trap
      :                          @195 [export #1: 'accumulate']
  4347: 95 11 68 ff              sp = sp + 0xffffffffffffff68
  4351: 7b 10 90 00              u64 [sp + 0x90] = ra
  4355: 7b 15 88 00              u64 [sp + 0x88] = s0
  4359: 7b 16 80 00              u64 [sp + 0x80] = s1
  4363: 33 09 08                 a2 = 0x8
  4366: ac 98 e8 01              jump @247 if a1 <u a2
      :                          @196
  4370: 51 17 fc fd 01           jump @248 if a0 == 4294967292
      :                          @197
  4375: 51 07 f9 01              jump @249 if a0 == 0
      :                          @198
  4379: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
  4382: 95 75 08                 s0 = a0 + 0x8
  4385: 51 0a 45                 jump @208 if a3 == 0
      :                          @199
  4388: 7d 58                    a1 = i8 [s0]
  4390: 33 06 01                 s1 = 0x1
  4393: 59 08 40                 jump @209 if a1 >=s 0
      :                          @200
  4396: 84 89 ff 00              a2 = a1 & 0xff
  4400: 33 06 02                 s1 = 0x2
  4403: 53 29 c0 00 2d           jump @206 if a2 <u 192
      :                          @201
  4408: 33 06 03                 s1 = 0x3
  4411: 53 29 e0 00 25           jump @206 if a2 <u 224
      :                          @202
  4416: 33 06 04                 s1 = 0x4
  4419: 53 29 f0 00 1d           jump @206 if a2 <u 240
      :                          @203
  4424: 33 06 05                 s1 = 0x5
  4427: 53 29 f8 00 15           jump @206 if a2 <u 248
      :                          @204
  4432: 33 06 06                 s1 = 0x6
  4435: 53 29 fc 00 0d           jump @206 if a2 <u 252
      :                          @205
  4440: 88 98 fe 00              a1 = a2 <u 0xfe
  4444: 9a 86 08                 s1 = 0x8 - a1
  4447: 01                       fallthrough
      :                          @206
  4448: ae 6a 09                 jump @209 if a3 >=u s1
      :                          @207
  4451: 28 93 01                 jump @247
      :                          @208
  4454: 33 06                    s1 = 0
  4456: 01                       fallthrough
      :                          @209
  4457: 7b 16                    u64 [sp] = s1
  4459: 64 57                    a0 = s0
  4461: 64 68                    a1 = s1
  4463: 64 a6                    s1 = a3
  4465: 50 10 6e 9a 10           ra = 110, jump @562
      :                          @210 [@dyn 55]
  4470: 82 1a                    a3 = u64 [sp]
  4472: 51 07 7e 01              jump @247 if a0 == 0
      :                          @211
  4476: e4 a6 07                 a0 = maxu(s1, a3)
  4479: c9 a7 07                 a0 = a0 - a3
  4482: 53 17 60 74 01           jump @247 if a0 <u 96
      :                          @212
  4487: c8 5a 08                 a1 = a3 + s0
  4490: 95 76 a0                 s1 = a0 + 0xffffffffffffffa0
  4493: 95 87 60                 a0 = a1 + 0x60
  4496: 7b 17                    u64 [sp] = a0
  4498: 51 06 4c                 jump @223 if s1 == 0
      :                          @213
  4501: 7d 78                    a1 = i8 [a0]
  4503: 33 05 01                 s0 = 0x1
  4506: 59 08 37                 jump @220 if a1 >=s 0
      :                          @214
  4509: 84 89 ff 00              a2 = a1 & 0xff
  4513: 33 05 02                 s0 = 0x2
  4516: 53 29 c0 00 2d           jump @220 if a2 <u 192
      :                          @215
  4521: 33 05 03                 s0 = 0x3
  4524: 53 29 e0 00 25           jump @220 if a2 <u 224
      :                          @216
  4529: 33 05 04                 s0 = 0x4
  4532: 53 29 f0 00 1d           jump @220 if a2 <u 240
      :                          @217
  4537: 33 05 05                 s0 = 0x5
  4540: 53 29 f8 00 15           jump @220 if a2 <u 248
      :                          @218
  4545: 33 05 06                 s0 = 0x6
  4548: 53 29 fc 00 0d           jump @220 if a2 <u 252
      :                          @219
  4553: 88 98 fe 00              a1 = a2 <u 0xfe
  4557: 9a 85 08                 s0 = 0x8 - a1
  4560: 01                       fallthrough
      :                          @220
  4561: ac 56 40 01              jump @250 if s1 <u s0
      :                          @221
  4565: 64 58                    a1 = s0
  4567: 50 10 70 34 10           ra = 112, jump @562
      :                          @222 [@dyn 56]
  4572: 28 07                    jump @224
      :                          @223
  4574: 33 05                    s0 = 0
  4576: 33 07                    a0 = 0
  4578: 01                       fallthrough
      :                          @224
  4579: e4 56 08                 a1 = maxu(s1, s0)
  4582: c9 58 08                 a1 = a1 - s0
  4585: e4 78 08                 a1 = maxu(a1, a0)
  4588: c9 78 08                 a1 = a1 - a0
  4591: 33 09 21                 a2 = 0x21
  4594: ac 98 04 01              jump @247 if a1 <u a2
      :                          @225
  4598: 82 19                    a2 = u64 [sp]
  4600: c8 95 05                 s0 = s0 + a2
  4603: c8 57 07                 a0 = a0 + s0
  4606: 7c 79 20                 a2 = u8 [a0 + 0x20]
  4609: 52 09 f5 00              jump @247 if a2 != 0
      :                          @226
  4613: 95 86 df                 s1 = a1 + 0xffffffffffffffdf
  4616: 95 77 21                 a0 = a0 + 0x21
  4619: 7b 17                    u64 [sp] = a0
  4621: 51 06 4c                 jump @237 if s1 == 0
      :                          @227
  4624: 7d 78                    a1 = i8 [a0]
  4626: 33 05 01                 s0 = 0x1
  4629: 59 08 37                 jump @234 if a1 >=s 0
      :                          @228
  4632: 84 89 ff 00              a2 = a1 & 0xff
  4636: 33 05 02                 s0 = 0x2
  4639: 53 29 c0 00 2d           jump @234 if a2 <u 192
      :                          @229
  4644: 33 05 03                 s0 = 0x3
  4647: 53 29 e0 00 25           jump @234 if a2 <u 224
      :                          @230
  4652: 33 05 04                 s0 = 0x4
  4655: 53 29 f0 00 1d           jump @234 if a2 <u 240
      :                          @231
  4660: 33 05 05                 s0 = 0x5
  4663: 53 29 f8 00 15           jump @234 if a2 <u 248
      :                          @232
  4668: 33 05 06                 s0 = 0x6
  4671: 53 29 fc 00 0d           jump @234 if a2 <u 252
      :                          @233
  4676: 88 98 fe 00              a1 = a2 <u 0xfe
  4680: 9a 85 08                 s0 = 0x8 - a1
  4683: 01                       fallthrough
      :                          @234
  4684: ac 56 c5 00              jump @250 if s1 <u s0
      :                          @235
  4688: 64 58                    a1 = s0
  4690: 50 10 72 b9 0f           ra = 114, jump @562
      :                          @236 [@dyn 57]
  4695: 28 07                    jump @238
      :                          @237
  4697: 33 05                    s0 = 0
  4699: 33 07                    a0 = 0
  4701: 01                       fallthrough
      :                          @238
  4702: e4 56 08                 a1 = maxu(s1, s0)
  4705: c9 58 08                 a1 = a1 - s0
  4708: e6 78 07                 a0 = minu(a1, a0)
  4711: 52 17 24 8f 00           jump @247 if a0 != 36
      :                          @239
  4716: 82 17                    a0 = u64 [sp]
  4718: c8 57 07                 a0 = a0 + s0
  4721: 7b 17 08                 u64 [sp + 0x8] = a0
  4724: 80 78 20                 a1 = u32 [a0 + 0x20]
  4727: 7b 18 10                 u64 [sp + 0x10] = a1
  4730: 0a 0e                    ecalli 14 // 'solicit'
  4732: 95 17 08                 a0 = sp + 0x8
  4735: 7b 17 60                 u64 [sp + 0x60] = a0
  4738: 33 07 06                 a0 = 0x6
  4741: 7b 17 68                 u64 [sp + 0x68] = a0
  4744: 95 18 10                 a1 = sp + 0x10
  4747: 7b 18 70                 u64 [sp + 0x70] = a1
  4750: 7b 17 78                 u64 [sp + 0x78] = a0
  4753: 33 07 e0 05 01           a0 = 0x105e0
  4758: 7b 17 30                 u64 [sp + 0x30] = a0
  4761: 49 11 38 02              u64 [sp + 56] = 0x2
  4765: 49 11 50                 u64 [sp + 80] = 0
  4768: 95 18 60                 a1 = sp + 0x60
  4771: 7b 18 40                 u64 [sp + 0x40] = a1
  4774: 49 11 48 02              u64 [sp + 72] = 0x2
  4778: 95 17 18                 a0 = sp + 0x18
  4781: 95 18 30                 a1 = sp + 0x30
  4784: 50 10 74 99 02           ra = 116, jump @308
      :                          @240 [@dyn 58]
  4789: 82 15 20                 s0 = u64 [sp + 0x20]
  4792: 82 1b 28                 a4 = u64 [sp + 0x28]
  4795: 82 16 18                 s1 = u64 [sp + 0x18]
  4798: 33 07 02                 a0 = 0x2
  4801: 33 08                    a1 = 0
  4803: 33 09                    a2 = 0
  4805: 64 5a                    a3 = s0
  4807: 33 00 76                 ra = 0x76
  4810: 0a 64                    ecalli 100 // 'log'
  4812: 01                       fallthrough
      :                          @241 [@dyn 59]
  4813: 95 68 ff ef              a1 = s1 + 0xffffffffffffefff
  4817: 53 28 00 f0 25           jump @247 if a1 <u 4294963200
      :                          @242
  4822: 33 07 20 00 03           a0 = 0x30020
  4827: 95 77 00 10              a0 = a0 + 0x1000
  4831: 01                       fallthrough
      :                          @243
  4832: 82 78                    a1 = u64 [a0]
  4834: c9 87 09                 a2 = a0 - a1
  4837: ab 59 11                 jump @247 if a2 != s0
      :                          @244
  4840: c9 68 09                 a2 = a1 - s1
  4843: 01                       fallthrough
      :                          @245
  4844: 82 7a                    a3 = u64 [a0]
  4846: ab 8a f2                 jump @243 if a3 != a1
      :                          @246
  4849: 7b 79                    u64 [a0] = a2
  4851: 33 0b                    a4 = 0
  4853: 01                       fallthrough
      :                          @247
  4854: 33 07 00 00 01           a0 = 0x10000
  4859: 33 08                    a1 = 0
  4861: 82 10 90 00              ra = u64 [sp + 0x90]
  4865: 82 15 88 00              s0 = u64 [sp + 0x88]
  4869: 82 16 80 00              s1 = u64 [sp + 0x80]
  4873: 95 11 98 00              sp = sp + 0x98
  4877: 32 00                    ret
      :                          @248
  4879: 00                       trap
      :                          @249
  4880: 00                       trap
      :                          @250
  4881: 00                       trap
      :                          @251 [export #2: 'on_transfer']
  4882: 33 07 00 00 01           a0 = 0x10000
  4887: 33 08                    a1 = 0
  4889: 32 00                    ret
      :                          @252
  4891: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  4894: 7b 10 40                 u64 [sp + 0x40] = ra
  4897: 7b 15 38                 u64 [sp + 0x38] = s0
  4900: 7b 16 30                 u64 [sp + 0x30] = s1
  4903: c8 89 09                 a2 = a2 + a1
  4906: ac 89 52                 jump @260 if a2 <u a1
      :                          @253
  4909: 64 75                    s0 = a0
  4911: 82 77                    a0 = u64 [a0]
  4913: 97 78 01                 a1 = a0 << 0x1
  4916: 33 0a 08                 a3 = 0x8
  4919: e4 a9 09                 a2 = maxu(a2, a3)
  4922: e4 98 06                 s1 = maxu(a1, a2)
  4925: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  4928: 98 88 3f                 a1 = a1 >> 0x3f
  4931: 51 07 12                 jump @255 if a0 == 0
      :                          @254
  4934: 82 59 08                 a2 = u64 [s0 + 0x8]
  4937: 7b 19 18                 u64 [sp + 0x18] = a2
  4940: 49 11 20 01              u64 [sp + 32] = 0x1
  4944: 7b 17 28                 u64 [sp + 0x28] = a0
  4947: 28 06                    jump @256
      :                          @255
  4949: 49 11 20                 u64 [sp + 32] = 0
  4952: 01                       fallthrough
      :                          @256
  4953: 64 17                    a0 = sp
  4955: 95 1a 18                 a3 = sp + 0x18
  4958: 64 69                    a2 = s1
  4960: 50 10 78 32              ra = 120, jump @264
      :                          @257 [@dyn 60]
  4964: 82 18                    a1 = u64 [sp]
  4966: 82 17 08                 a0 = u64 [sp + 0x8]
  4969: 51 08 14                 jump @261 if a1 == 0
      :                          @258
  4972: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  4982: aa 87 0d                 jump @262 if a0 == a1
      :                          @259
  4985: 52 07 18                 jump @263 if a0 != 0
      :                          @260
  4988: 00                       trap
      :                          @261
  4989: 7b 57 08                 u64 [s0 + 0x8] = a0
  4992: 7b 56                    u64 [s0] = s1
  4994: 01                       fallthrough
      :                          @262
  4995: 82 10 40                 ra = u64 [sp + 0x40]
  4998: 82 15 38                 s0 = u64 [sp + 0x38]
  5001: 82 16 30                 s1 = u64 [sp + 0x30]
  5004: 95 11 48                 sp = sp + 0x48
  5007: 32 00                    ret
      :                          @263
  5009: 00                       trap
      :                          @264
  5010: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  5013: 7b 10 30                 u64 [sp + 0x30] = ra
  5016: 7b 15 28                 u64 [sp + 0x28] = s0
  5019: 7b 16 20                 u64 [sp + 0x20] = s1
  5022: 64 96                    s1 = a2
  5024: 64 73                    t1 = a0
  5026: 51 08 6e                 jump @274 if a1 == 0
      :                          @265
  5029: 82 a7 08                 a0 = u64 [a3 + 0x8]
  5032: 51 07 71                 jump @275 if a0 == 0
      :                          @266
  5035: 82 a9 10                 a2 = u64 [a3 + 0x10]
  5038: 51 09 9e 00              jump @282 if a2 == 0
      :                          @267
  5042: 82 a8                    a1 = u64 [a3]
  5044: 33 02 00 10              t0 = 0x1000
  5048: 33 04 20 00 03           t2 = 0x30020
  5053: c8 24 07                 a0 = t2 + t0
  5056: 01                       fallthrough
      :                          @268
  5057: 82 7a                    a3 = u64 [a0]
  5059: c8 6a 05                 s0 = a3 + s1
  5062: ac a5 c2 00              jump @288 if s0 <u a3
      :                          @269
  5066: 95 5b 01                 a4 = s0 + 0x1
  5069: 88 bc 01                 a5 = a4 <u 0x1
  5072: d8 b2 0b                 a4 = t0 <u a4
  5075: d4 cb 0b                 a4 = a4 | a5
  5078: 52 0b b2 00              jump @288 if a4 != 0
      :                          @270
  5082: 82 7b                    a4 = u64 [a0]
  5084: ab ab e5                 jump @268 if a4 != a3
      :                          @271
  5087: 7b 75                    u64 [a0] = s0
  5089: 33 0c                    a5 = 0
  5091: 7b 13 18                 u64 [sp + 0x18] = t1
  5094: c9 54 07                 a0 = t2 - s0
  5097: 95 77 00 10              a0 = a0 + 0x1000
  5101: 7b 17 10                 u64 [sp + 0x10] = a0
  5104: 7b 18 08                 u64 [sp + 0x8] = a1
  5107: 64 95                    s0 = a2
  5109: 7b 14                    u64 [sp] = t2
  5111: 50 10 7a c6 03           ra = 122, jump @358
      :                          @272 [@dyn 61]
  5116: 54 25 00 10 94 00        jump @289 if s0 <=u 4096
      :                          @273
  5122: 82 13 18                 t1 = u64 [sp + 0x18]
  5125: 82 18 10                 a1 = u64 [sp + 0x10]
  5128: 33 07                    a0 = 0
  5130: 7b 38 08                 u64 [t1 + 0x8] = a1
  5133: 28 b1 00                 jump @295
      :                          @274
  5136: 49 13 08                 u64 [t1 + 8] = 0
  5139: 33 07 01                 a0 = 0x1
  5142: 28 a8 00                 jump @295
      :                          @275
  5145: 33 07 00 10              a0 = 0x1000
  5149: 33 02 20 00 03           t0 = 0x30020
  5154: c8 72 09                 a2 = t0 + a0
  5157: 01                       fallthrough
      :                          @276
  5158: 82 9b                    a4 = u64 [a2]
  5160: c8 6b 0a                 a3 = a4 + s1
  5163: ac ba 5d                 jump @288 if a3 <u a4
      :                          @277
  5166: 95 ac 01                 a5 = a3 + 0x1
  5169: 88 c8 01                 a1 = a5 <u 0x1
  5172: d8 c7 0c                 a5 = a0 <u a5
  5175: d4 c8 08                 a1 = a1 | a5
  5178: 52 08 4e                 jump @288 if a1 != 0
      :                          @278
  5181: 82 98                    a1 = u64 [a2]
  5183: ab b8 e7                 jump @276 if a1 != a4
      :                          @279
  5186: 7b 9a                    u64 [a2] = a3
  5188: 33 0c                    a5 = 0
  5190: 01                       fallthrough
      :                          @280
  5191: ab b8 df                 jump @276 if a1 != a4
      :                          @281
  5194: 28 30                    jump @287
      :                          @282
  5196: 33 07 00 10              a0 = 0x1000
  5200: 33 02 20 00 03           t0 = 0x30020
  5205: c8 72 09                 a2 = t0 + a0
  5208: 01                       fallthrough
      :                          @283
  5209: 82 9b                    a4 = u64 [a2]
  5211: c8 6b 0a                 a3 = a4 + s1
  5214: ac ba 2a                 jump @288 if a3 <u a4
      :                          @284
  5217: 95 ac 01                 a5 = a3 + 0x1
  5220: 88 c8 01                 a1 = a5 <u 0x1
  5223: d8 c7 0c                 a5 = a0 <u a5
  5226: d4 c8 08                 a1 = a1 | a5
  5229: 52 08 1b                 jump @288 if a1 != 0
      :                          @285
  5232: 82 98                    a1 = u64 [a2]
  5234: ab b8 e7                 jump @283 if a1 != a4
      :                          @286
  5237: 7b 9a                    u64 [a2] = a3
  5239: 33 0c                    a5 = 0
  5241: 01                       fallthrough
      :                          @287
  5242: c9 a2 07                 a0 = t0 - a3
  5245: 95 78 00 10              a1 = a0 + 0x1000
  5249: 33 07                    a0 = 0
  5251: 7b 38 08                 u64 [t1 + 0x8] = a1
  5254: 28 38                    jump @295
      :                          @288
  5256: 33 07 01                 a0 = 0x1
  5259: 7b 37 08                 u64 [t1 + 0x8] = a0
  5262: 28 30                    jump @295
      :                          @289
  5264: 64 5c                    a5 = s0
  5266: 82 18                    a1 = u64 [sp]
  5268: 95 87 00 10              a0 = a1 + 0x1000
  5272: 82 13 18                 t1 = u64 [sp + 0x18]
  5275: 82 15 08                 s0 = u64 [sp + 0x8]
  5278: 01                       fallthrough
      :                          @290
  5279: 82 78                    a1 = u64 [a0]
  5281: c9 87 09                 a2 = a0 - a1
  5284: ab 59 11                 jump @294 if a2 != s0
      :                          @291
  5287: c9 c8 09                 a2 = a1 - a5
  5290: 01                       fallthrough
      :                          @292
  5291: 82 7a                    a3 = u64 [a0]
  5293: ab 8a f2                 jump @290 if a3 != a1
      :                          @293
  5296: 7b 79                    u64 [a0] = a2
  5298: 33 0b                    a4 = 0
  5300: 01                       fallthrough
      :                          @294
  5301: 82 18 10                 a1 = u64 [sp + 0x10]
  5304: 33 07                    a0 = 0
  5306: 7b 38 08                 u64 [t1 + 0x8] = a1
  5309: 01                       fallthrough
      :                          @295
  5310: 7b 36 10                 u64 [t1 + 0x10] = s1
  5313: 7b 37                    u64 [t1] = a0
  5315: 82 10 30                 ra = u64 [sp + 0x30]
  5318: 82 15 28                 s0 = u64 [sp + 0x28]
  5321: 82 16 20                 s1 = u64 [sp + 0x20]
  5324: 95 11 38                 sp = sp + 0x38
  5327: 32 00                    ret
      :                          @296
  5329: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  5332: 7b 10 40                 u64 [sp + 0x40] = ra
  5335: 7b 15 38                 u64 [sp + 0x38] = s0
  5338: 7b 16 30                 u64 [sp + 0x30] = s1
  5341: 95 88 01                 a1 = a1 + 0x1
  5344: 51 08 53                 jump @304 if a1 == 0
      :                          @297
  5347: 64 75                    s0 = a0
  5349: 82 77                    a0 = u64 [a0]
  5351: 97 79 01                 a2 = a0 << 0x1
  5354: 33 0a 08                 a3 = 0x8
  5357: e4 a8 08                 a1 = maxu(a1, a3)
  5360: e4 89 06                 s1 = maxu(a2, a1)
  5363: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  5366: 98 88 3f                 a1 = a1 >> 0x3f
  5369: 51 07 12                 jump @299 if a0 == 0
      :                          @298
  5372: 82 59 08                 a2 = u64 [s0 + 0x8]
  5375: 7b 19 18                 u64 [sp + 0x18] = a2
  5378: 49 11 20 01              u64 [sp + 32] = 0x1
  5382: 7b 17 28                 u64 [sp + 0x28] = a0
  5385: 28 06                    jump @300
      :                          @299
  5387: 49 11 20                 u64 [sp + 32] = 0
  5390: 01                       fallthrough
      :                          @300
  5391: 64 17                    a0 = sp
  5393: 95 1a 18                 a3 = sp + 0x18
  5396: 64 69                    a2 = s1
  5398: 50 10 7c 7c fe           ra = 124, jump @264
      :                          @301 [@dyn 62]
  5403: 82 18                    a1 = u64 [sp]
  5405: 82 17 08                 a0 = u64 [sp + 0x8]
  5408: 51 08 14                 jump @305 if a1 == 0
      :                          @302
  5411: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  5421: aa 87 0d                 jump @306 if a0 == a1
      :                          @303
  5424: 52 07 18                 jump @307 if a0 != 0
      :                          @304
  5427: 00                       trap
      :                          @305
  5428: 7b 57 08                 u64 [s0 + 0x8] = a0
  5431: 7b 56                    u64 [s0] = s1
  5433: 01                       fallthrough
      :                          @306
  5434: 82 10 40                 ra = u64 [sp + 0x40]
  5437: 82 15 38                 s0 = u64 [sp + 0x38]
  5440: 82 16 30                 s1 = u64 [sp + 0x30]
  5443: 95 11 48                 sp = sp + 0x48
  5446: 32 00                    ret
      :                          @307
  5448: 00                       trap
      :                          @308
  5449: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  5452: 7b 10 30                 u64 [sp + 0x30] = ra
  5455: 7b 15 28                 u64 [sp + 0x28] = s0
  5458: 7b 16 20                 u64 [sp + 0x20] = s1
  5461: 64 89                    a2 = a1
  5463: 82 8a 08                 a3 = u64 [a1 + 0x8]
  5466: 64 75                    s0 = a0
  5468: 51 0a 35                 jump @313 if a3 == 0
      :                          @309
  5471: 82 98                    a1 = u64 [a2]
  5473: 33 07                    a0 = 0
  5475: 95 8b 08                 a4 = a1 + 0x8
  5478: 01                       fallthrough
      :                          @310
  5479: 82 bc                    a5 = u64 [a4]
  5481: c8 c7 07                 a0 = a0 + a5
  5484: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  5487: 95 bb 10                 a4 = a4 + 0x10
  5490: 52 0a f5                 jump @310 if a3 != 0
      :                          @311
  5493: 82 9a 18                 a3 = u64 [a2 + 0x18]
  5496: 51 0a 24                 jump @315 if a3 == 0
      :                          @312
  5499: 82 88 08                 a1 = u64 [a1 + 0x8]
  5502: 8e 88                    a1 = a1 >u 0
  5504: 88 7a 10                 a3 = a0 <u 0x10
  5507: 85 aa 01                 a3 = a3 ^ 0x1
  5510: d4 a8 08                 a1 = a1 | a3
  5513: 89 7a                    a3 = a0 <s 0
  5515: e0 a8 08                 a1 = a1 & ~a3
  5518: 52 08 0a                 jump @314 if a1 != 0
      :                          @313
  5521: 33 07                    a0 = 0
  5523: 33 08 01                 a1 = 0x1
  5526: 28 48                    jump @323
      :                          @314
  5528: 97 77 01                 a0 = a0 << 0x1
  5531: 01                       fallthrough
      :                          @315
  5532: 51 07 3e                 jump @322 if a0 == 0
      :                          @316
  5535: 57 07 76                 jump @328 if a0 <s 0
      :                          @317
  5538: 64 53                    t1 = s0
  5540: 33 08 00 10              a1 = 0x1000
  5544: 33 02 20 00 03           t0 = 0x30020
  5549: c8 82 0b                 a4 = t0 + a1
  5552: 01                       fallthrough
      :                          @318
  5553: 82 bc                    a5 = u64 [a4]
  5555: c8 7c 0a                 a3 = a5 + a0
  5558: ac ca 5d                 jump @326 if a3 <u a5
      :                          @319
  5561: 95 a5 01                 s0 = a3 + 0x1
  5564: 88 56 01                 s1 = s0 <u 0x1
  5567: d8 58 05                 s0 = a1 <u s0
  5570: d4 65 05                 s0 = s0 | s1
  5573: 52 05 4e                 jump @326 if s0 != 0
      :                          @320
  5576: 82 b6                    s1 = u64 [a4]
  5578: ab c6 e7                 jump @318 if s1 != a5
      :                          @321
  5581: 7b ba                    u64 [a4] = a3
  5583: c9 a2 08                 a1 = t0 - a3
  5586: 95 88 00 10              a1 = a1 + 0x1000
  5590: 64 35                    s0 = t1
  5592: 28 06                    jump @323
      :                          @322
  5594: 33 08 01                 a1 = 0x1
  5597: 01                       fallthrough
      :                          @323
  5598: 7b 17                    u64 [sp] = a0
  5600: 7b 18 08                 u64 [sp + 0x8] = a1
  5603: 49 11 10                 u64 [sp + 16] = 0
  5606: 33 08 00 06 01           a1 = 0x10600
  5611: 64 17                    a0 = sp
  5613: 50 10 7e 7c 06           ra = 126, jump @453
      :                          @324 [@dyn 63]
  5618: 52 07 22                 jump @327 if a0 != 0
      :                          @325
  5621: 82 17 10                 a0 = u64 [sp + 0x10]
  5624: 82 18 08                 a1 = u64 [sp + 0x8]
  5627: 82 19                    a2 = u64 [sp]
  5629: 7b 57 10                 u64 [s0 + 0x10] = a0
  5632: 7b 58 08                 u64 [s0 + 0x8] = a1
  5635: 7b 59                    u64 [s0] = a2
  5637: 82 10 30                 ra = u64 [sp + 0x30]
  5640: 82 15 28                 s0 = u64 [sp + 0x28]
  5643: 82 16 20                 s1 = u64 [sp + 0x20]
  5646: 95 11 38                 sp = sp + 0x38
  5649: 32 00                    ret
      :                          @326
  5651: 00                       trap
      :                          @327
  5652: 00                       trap
      :                          @328
  5653: 00                       trap
      :                          @329 [@dyn 64]
  5654: 82 72                    t0 = u64 [a0]
  5656: 33 09 00 f0              a2 = 0xfffffffffffff000
  5660: 95 2a ff ef              a3 = t0 + 0xffffffffffffefff
  5664: ac 9a 27                 jump @335 if a3 <u a2
      :                          @330
  5667: 82 77 08                 a0 = u64 [a0 + 0x8]
  5670: 33 09 20 00 03           a2 = 0x30020
  5675: 95 99 00 10              a2 = a2 + 0x1000
  5679: 01                       fallthrough
      :                          @331
  5680: 82 9a                    a3 = u64 [a2]
  5682: c9 a9 0b                 a4 = a2 - a3
  5685: ab 7b 12                 jump @335 if a4 != a0
      :                          @332
  5688: c9 2a 0b                 a4 = a3 - t0
  5691: 01                       fallthrough
      :                          @333
  5692: 82 9c                    a5 = u64 [a2]
  5694: ab ac f2                 jump @331 if a5 != a3
      :                          @334
  5697: 7b 9b                    u64 [a2] = a4
  5699: 33 08                    a1 = 0
  5701: 32 00                    ret
      :                          @335
  5703: 32 00                    ret
      :                          @336 [@dyn 65]
  5705: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  5708: 7b 10 18                 u64 [sp + 0x18] = ra
  5711: 7b 15 10                 u64 [sp + 0x10] = s0
  5714: 7b 16 08                 u64 [sp + 0x8] = s1
  5717: 64 75                    s0 = a0
  5719: 82 7a 10                 a3 = u64 [a0 + 0x10]
  5722: 82 77                    a0 = u64 [a0]
  5724: c9 a7 07                 a0 = a0 - a3
  5727: 64 96                    s1 = a2
  5729: ac 97 2b                 jump @339 if a0 <u a2
      :                          @337
  5732: 7b 1a                    u64 [sp] = a3
  5734: 82 57 08                 a0 = u64 [s0 + 0x8]
  5737: c8 a7 07                 a0 = a0 + a3
  5740: 64 69                    a2 = s1
  5742: 50 20 84 00 4f 01        ra = 132, jump @358
      :                          @338 [@dyn 66]
  5748: 82 17                    a0 = u64 [sp]
  5750: c8 76 06                 s1 = s1 + a0
  5753: 7b 56 10                 u64 [s0 + 0x10] = s1
  5756: 33 07                    a0 = 0
  5758: 82 10 18                 ra = u64 [sp + 0x18]
  5761: 82 15 10                 s0 = u64 [sp + 0x10]
  5764: 82 16 08                 s1 = u64 [sp + 0x8]
  5767: 95 11 20                 sp = sp + 0x20
  5770: 32 00                    ret
      :                          @339
  5772: 64 57                    a0 = s0
  5774: 7b 18                    u64 [sp] = a1
  5776: 64 a8                    a1 = a3
  5778: 64 69                    a2 = s1
  5780: 50 20 86 00 87 fc        ra = 134, jump @252
      :                          @340 [@dyn 67]
  5786: 82 18                    a1 = u64 [sp]
  5788: 82 5a 10                 a3 = u64 [s0 + 0x10]
  5791: 28 c5                    jump @337
      :                          @341 [@dyn 68]
  5793: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  5796: 7b 10 20                 u64 [sp + 0x20] = ra
  5799: 7b 15 18                 u64 [sp + 0x18] = s0
  5802: 7b 16 10                 u64 [sp + 0x10] = s1
  5805: 64 86                    s1 = a1
  5807: 83 88                    i32 a1 = a1 + 0
  5809: 33 09 80 00              a2 = 0x80
  5813: 64 7a                    a3 = a0
  5815: ae 98 2c                 jump @346 if a1 >=u a2
      :                          @342
  5818: 82 a8 10                 a1 = u64 [a3 + 0x10]
  5821: 82 a7                    a0 = u64 [a3]
  5823: ab 78 13                 jump @345 if a1 != a0
      :                          @343
  5826: 64 a7                    a0 = a3
  5828: 64 a5                    s0 = a3
  5830: 50 20 8a 00 0b fe        ra = 138, jump @296
      :                          @344 [@dyn 69]
  5836: 64 5a                    a3 = s0
  5838: 82 58 10                 a1 = u64 [s0 + 0x10]
  5841: 01                       fallthrough
      :                          @345
  5842: 82 a7 08                 a0 = u64 [a3 + 0x8]
  5845: c8 87 07                 a0 = a0 + a1
  5848: 78 76                    u8 [a0] = s1
  5850: 95 88 01                 a1 = a1 + 0x1
  5853: 7b a8 10                 u64 [a3 + 0x10] = a1
  5856: 28 ac 00                 jump @354
      :                          @346
  5859: 8b 67 0b                 i32 a0 = s1 >> 0xb
  5862: 48 11 0c                 u32 [sp + 12] = 0
  5865: 52 07 1c                 jump @348 if a0 != 0
      :                          @347
  5868: 98 67 06                 a0 = s1 >> 0x6
  5871: 86 77 c0 00              a0 = a0 | 0xc0
  5875: 78 17 0c                 u8 [sp + 0xc] = a0
  5878: 84 67 3f                 a0 = s1 & 0x3f
  5881: 86 77 80 00              a0 = a0 | 0x80
  5885: 78 17 0d                 u8 [sp + 0xd] = a0
  5888: 33 06 02                 s1 = 0x2
  5891: 28 63                    jump @351
      :                          @348
  5893: 8b 67 10                 i32 a0 = s1 >> 0x10
  5896: 52 07 29                 jump @350 if a0 != 0
      :                          @349
  5899: 98 67 0c                 a0 = s1 >> 0xc
  5902: 86 77 e0 00              a0 = a0 | 0xe0
  5906: 78 17 0c                 u8 [sp + 0xc] = a0
  5909: 97 67 34                 a0 = s1 << 0x34
  5912: 98 77 3a                 a0 = a0 >> 0x3a
  5915: 95 77 80 00              a0 = a0 + 0x80
  5919: 78 17 0d                 u8 [sp + 0xd] = a0
  5922: 84 67 3f                 a0 = s1 & 0x3f
  5925: 86 77 80 00              a0 = a0 | 0x80
  5929: 78 17 0e                 u8 [sp + 0xe] = a0
  5932: 33 06 03                 s1 = 0x3
  5935: 28 37                    jump @351
      :                          @350
  5937: 97 67 2b                 a0 = s1 << 0x2b
  5940: 98 77 3d                 a0 = a0 >> 0x3d
  5943: 95 77 f0 00              a0 = a0 + 0xf0
  5947: 78 17 0c                 u8 [sp + 0xc] = a0
  5950: 97 67 2e                 a0 = s1 << 0x2e
  5953: 98 77 3a                 a0 = a0 >> 0x3a
  5956: 95 77 80 00              a0 = a0 + 0x80
  5960: 78 17 0d                 u8 [sp + 0xd] = a0
  5963: 97 67 34                 a0 = s1 << 0x34
  5966: 98 77 3a                 a0 = a0 >> 0x3a
  5969: 95 77 80 00              a0 = a0 + 0x80
  5973: 78 17 0e                 u8 [sp + 0xe] = a0
  5976: 84 67 3f                 a0 = s1 & 0x3f
  5979: 86 77 80 00              a0 = a0 | 0x80
  5983: 78 17 0f                 u8 [sp + 0xf] = a0
  5986: 33 06 04                 s1 = 0x4
  5989: 01                       fallthrough
      :                          @351
  5990: 82 a5 10                 s0 = u64 [a3 + 0x10]
  5993: 82 a7                    a0 = u64 [a3]
  5995: c9 57 07                 a0 = a0 - s0
  5998: ac 67 2e                 jump @355 if a0 <u s1
      :                          @352
  6001: 7b 1a                    u64 [sp] = a3
  6003: 82 a7 08                 a0 = u64 [a3 + 0x8]
  6006: c8 57 07                 a0 = a0 + s0
  6009: 95 18 0c                 a1 = sp + 0xc
  6012: 64 69                    a2 = s1
  6014: 50 20 8c 00 3f           ra = 140, jump @358
      :                          @353 [@dyn 70]
  6019: c8 56 06                 s1 = s1 + s0
  6022: 82 17                    a0 = u64 [sp]
  6024: 7b 76 10                 u64 [a0 + 0x10] = s1
  6027: 01                       fallthrough
      :                          @354
  6028: 33 07                    a0 = 0
  6030: 82 10 20                 ra = u64 [sp + 0x20]
  6033: 82 15 18                 s0 = u64 [sp + 0x18]
  6036: 82 16 10                 s1 = u64 [sp + 0x10]
  6039: 95 11 28                 sp = sp + 0x28
  6042: 32 00                    ret
      :                          @355
  6044: 64 a7                    a0 = a3
  6046: 64 58                    a1 = s0
  6048: 64 69                    a2 = s1
  6050: 64 a5                    s0 = a3
  6052: 50 20 8e 00 77 fb        ra = 142, jump @252
      :                          @356 [@dyn 71]
  6058: 64 5a                    a3 = s0
  6060: 82 55 10                 s0 = u64 [s0 + 0x10]
  6063: 28 c2                    jump @352
      :                          @357 [@dyn 72]
  6065: 64 8a                    a3 = a1
  6067: 33 08 00 06 01           a1 = 0x10600
  6072: 64 a9                    a2 = a3
  6074: 28 af 04                 jump @453
      :                          @358
  6077: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  6080: 7b 10 18                 u64 [sp + 0x18] = ra
  6083: 7b 15 10                 u64 [sp + 0x10] = s0
  6086: 7b 16 08                 u64 [sp + 0x8] = s1
  6089: 53 19 10 64              jump @367 if a2 <u 16
      :                          @359
  6093: 8d 7a                    i32 a3 = -a0
  6095: 84 a2 07                 t0 = a3 & 0x7
  6098: c8 27 0b                 a4 = a0 + t0
  6101: 51 02 15                 jump @362 if t0 == 0
      :                          @360
  6104: 64 8c                    a5 = a1
  6106: 64 75                    s0 = a0
  6108: 01                       fallthrough
      :                          @361
  6109: 7c ca                    a3 = u8 [a5]
  6111: 78 5a                    u8 [s0] = a3
  6113: 95 55 01                 s0 = s0 + 0x1
  6116: 95 cc 01                 a5 = a5 + 0x1
  6119: ac b5 f6                 jump @361 if s0 <u a4
      :                          @362
  6122: c8 28 03                 t1 = a1 + t0
  6125: c9 29 02                 t0 = a2 - t0
  6128: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  6131: 84 38 07                 a1 = t1 & 0x7
  6134: c8 4b 0a                 a3 = a4 + t2
  6137: 51 08 3b                 jump @369 if a1 == 0
      :                          @363
  6140: 58 04 4b                 jump @372 if t2 <=s 0
      :                          @364
  6143: 97 38 03                 a1 = t1 << 0x3
  6146: 84 80 38                 ra = a1 & 0x38
  6149: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  6152: 82 c5                    s0 = u64 [a5]
  6154: 8d 88                    i32 a1 = -a1
  6156: 84 88 38                 a1 = a1 & 0x38
  6159: 95 cc 08                 a5 = a5 + 0x8
  6162: 01                       fallthrough
      :                          @365
  6163: 82 c6                    s1 = u64 [a5]
  6165: d0 05 05                 s0 = s0 >> ra
  6168: cf 86 09                 a2 = s1 << a1
  6171: d4 59 09                 a2 = a2 | s0
  6174: 7b b9                    u64 [a4] = a2
  6176: 95 bb 08                 a4 = a4 + 0x8
  6179: 95 cc 08                 a5 = a5 + 0x8
  6182: 64 65                    s0 = s1
  6184: ac ab eb                 jump @365 if a4 <u a3
      :                          @366
  6187: 28 1c                    jump @372
      :                          @367
  6189: 64 7a                    a3 = a0
  6191: 52 09 21                 jump @373 if a2 != 0
      :                          @368
  6194: 28 2f                    jump @375
      :                          @369
  6196: 58 04 13                 jump @372 if t2 <=s 0
      :                          @370
  6199: 64 38                    a1 = t1
  6201: 01                       fallthrough
      :                          @371
  6202: 82 89                    a2 = u64 [a1]
  6204: 7b b9                    u64 [a4] = a2
  6206: 95 bb 08                 a4 = a4 + 0x8
  6209: 95 88 08                 a1 = a1 + 0x8
  6212: ac ab f6                 jump @371 if a4 <u a3
      :                          @372
  6215: c8 43 08                 a1 = t1 + t2
  6218: 84 29 07                 a2 = t0 & 0x7
  6221: 51 09 14                 jump @375 if a2 == 0
      :                          @373
  6224: c8 a9 09                 a2 = a2 + a3
  6227: 01                       fallthrough
      :                          @374
  6228: 7c 8b                    a4 = u8 [a1]
  6230: 78 ab                    u8 [a3] = a4
  6232: 95 aa 01                 a3 = a3 + 0x1
  6235: 95 88 01                 a1 = a1 + 0x1
  6238: ac 9a f6                 jump @374 if a3 <u a2
      :                          @375
  6241: 82 10 18                 ra = u64 [sp + 0x18]
  6244: 82 15 10                 s0 = u64 [sp + 0x10]
  6247: 82 16 08                 s1 = u64 [sp + 0x8]
  6250: 95 11 20                 sp = sp + 0x20
  6253: 32 00                    ret
      :                          @376
  6255: 53 19 10 48              jump @385 if a2 <u 16
      :                          @377
  6259: 8d 7a                    i32 a3 = -a0
  6261: 84 aa 07                 a3 = a3 & 0x7
  6264: c8 a7 0b                 a4 = a0 + a3
  6267: 51 0a 0e                 jump @380 if a3 == 0
      :                          @378
  6270: 64 7c                    a5 = a0
  6272: 01                       fallthrough
      :                          @379
  6273: 78 c8                    u8 [a5] = a1
  6275: 95 cc 01                 a5 = a5 + 0x1
  6278: ac bc fb                 jump @379 if a5 <u a4
      :                          @380
  6281: c9 a9 03                 t1 = a2 - a3
  6284: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  6287: c8 cb 0a                 a3 = a4 + a5
  6290: 58 0c 1d                 jump @383 if a5 <=s 0
      :                          @381
  6293: 84 82 ff 00              t0 = a1 & 0xff
  6297: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  6307: ca 92 0c                 a5 = t0 * a2
  6310: 01                       fallthrough
      :                          @382
  6311: 7b bc                    u64 [a4] = a5
  6313: 95 bb 08                 a4 = a4 + 0x8
  6316: ac ab fb                 jump @382 if a4 <u a3
      :                          @383
  6319: 84 39 07                 a2 = t1 & 0x7
  6322: 52 09 0a                 jump @386 if a2 != 0
      :                          @384
  6325: 28 13                    jump @388
      :                          @385
  6327: 64 7a                    a3 = a0
  6329: 51 09 0f                 jump @388 if a2 == 0
      :                          @386
  6332: c8 a9 09                 a2 = a2 + a3
  6335: 01                       fallthrough
      :                          @387
  6336: 78 a8                    u8 [a3] = a1
  6338: 95 aa 01                 a3 = a3 + 0x1
  6341: ac 9a fb                 jump @387 if a3 <u a2
      :                          @388
  6344: 32 00                    ret
      :                          @389 [@dyn 73]
  6346: 82 77                    a0 = u64 [a0]
  6348: 01                       fallthrough
      :                          @390
  6349: 28                       jump @390
      :                          @391
  6350: 95 11 a8                 sp = sp + 0xffffffffffffffa8
  6353: 7b 10 50                 u64 [sp + 0x50] = ra
  6356: 7b 15 48                 u64 [sp + 0x48] = s0
  6359: 7b 16 40                 u64 [sp + 0x40] = s1
  6362: 82 7a                    a3 = u64 [a0]
  6364: 7b 18                    u64 [sp] = a1
  6366: 98 ab 04                 a4 = a3 >> 0x4
  6369: 33 08 27                 a1 = 0x27
  6372: 33 09 11 02 01           a2 = 0x10211
  6377: 53 2b 71 02 7e           jump @394 if a4 <u 625
      :                          @392
  6382: 33 08 27                 a1 = 0x27
  6385: 95 1b 3e                 a4 = sp + 0x3e
  6388: 3a 07 00 00 03           a0 = u64 [0x30000]
  6393: 7b 17 10                 u64 [sp + 0x10] = a0
  6396: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
  6402: 33 00 7b 14              ra = 0x147b
  6406: 33 03 ff e0 f5 05        t1 = 0x5f5e0ff
  6412: 33 05 9c                 s0 = 0xffffffffffffff9c
  6415: 01                       fallthrough
      :                          @393
  6416: 64 a4                    t2 = a3
  6418: 82 17 10                 a0 = u64 [sp + 0x10]
  6421: d6 7a 0a                 a3 = a3 mulhu a0
  6424: 98 aa 0b                 a3 = a3 >> 0xb
  6427: 82 17 08                 a0 = u64 [sp + 0x8]
  6430: c0 7a 0c                 i32 a5 = a3 * a0
  6433: c8 4c 06                 s1 = a5 + t2
  6436: 97 6c 30                 a5 = s1 << 0x30
  6439: 98 cc 32                 a5 = a5 >> 0x32
  6442: ca 0c 0c                 a5 = a5 * ra
  6445: 98 c7 11                 a0 = a5 >> 0x11
  6448: 98 cc 10                 a5 = a5 >> 0x10
  6451: 84 cc fe 07              a5 = a5 & 0x7fe
  6455: ca 57 07                 a0 = a0 * s0
  6458: c8 67 07                 a0 = a0 + s1
  6461: 97 77 31                 a0 = a0 << 0x31
  6464: 98 77 30                 a0 = a0 >> 0x30
  6467: c8 9c 0c                 a5 = a5 + a2
  6470: 7c c6                    s1 = u8 [a5]
  6472: 7c cc 01                 a5 = u8 [a5 + 0x1]
  6475: c8 97 07                 a0 = a0 + a2
  6478: 7c 72 01                 t0 = u8 [a0 + 0x1]
  6481: 7c 77                    a0 = u8 [a0]
  6483: 78 bc ff                 u8 [a4 + 0xffffffffffffffff] = a5
  6486: 78 b6 fe                 u8 [a4 + 0xfffffffffffffffe] = s1
  6489: 78 b2 01                 u8 [a4 + 0x1] = t0
  6492: 78 b7                    u8 [a4] = a0
  6494: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
  6497: 95 bb fc                 a4 = a4 + 0xfffffffffffffffc
  6500: ac 43 ac                 jump @393 if t1 <u t2
      :                          @394
  6503: 54 1a 63 36              jump @396 if a3 <=u 99
      :                          @395
  6507: 97 a7 30                 a0 = a3 << 0x30
  6510: 98 77 32                 a0 = a0 >> 0x32
  6513: 96 77 7b 14              a0 = a0 * 0x147b
  6517: 98 77 11                 a0 = a0 >> 0x11
  6520: 96 7b 9c                 a4 = a0 * 0xffffffffffffff9c
  6523: c8 ba 0a                 a3 = a3 + a4
  6526: 97 aa 31                 a3 = a3 << 0x31
  6529: 98 aa 30                 a3 = a3 >> 0x30
  6532: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  6535: c8 9a 0a                 a3 = a3 + a2
  6538: 7c ab 01                 a4 = u8 [a3 + 0x1]
  6541: 7c aa                    a3 = u8 [a3]
  6543: 95 1c 19                 a5 = sp + 0x19
  6546: c8 8c 0c                 a5 = a5 + a1
  6549: 78 cb 01                 u8 [a5 + 0x1] = a4
  6552: 78 ca                    u8 [a5] = a3
  6554: 64 7a                    a3 = a0
  6556: 01                       fallthrough
      :                          @396
  6557: 55 1a 0a 14              jump @398 if a3 >=u 10
      :                          @397
  6561: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  6564: 95 17 19                 a0 = sp + 0x19
  6567: c8 87 07                 a0 = a0 + a1
  6570: 83 a9 30                 i32 a2 = a3 + 0x30
  6573: 78 79                    u8 [a0] = a2
  6575: 28 1c                    jump @399
      :                          @398
  6577: 97 aa 01                 a3 = a3 << 0x1
  6580: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  6583: c8 a9 09                 a2 = a2 + a3
  6586: 7c 97 01                 a0 = u8 [a2 + 0x1]
  6589: 7c 99                    a2 = u8 [a2]
  6591: 95 1a 19                 a3 = sp + 0x19
  6594: c8 8a 0a                 a3 = a3 + a1
  6597: 78 a7 01                 u8 [a3 + 0x1] = a0
  6600: 78 a9                    u8 [a3] = a2
  6602: 01                       fallthrough
      :                          @399
  6603: 95 1a 19                 a3 = sp + 0x19
  6606: c8 8a 0a                 a3 = a3 + a1
  6609: 9a 8b 27                 a4 = 0x27 - a1
  6612: 33 08 f8 01 01           a1 = 0x101f8
  6617: 82 17                    a0 = u64 [sp]
  6619: 33 09                    a2 = 0
  6621: 50 20 94 00 13           ra = 148, jump @401
      :                          @400 [@dyn 74]
  6626: 82 10 50                 ra = u64 [sp + 0x50]
  6629: 82 15 48                 s0 = u64 [sp + 0x48]
  6632: 82 16 40                 s1 = u64 [sp + 0x40]
  6635: 95 11 58                 sp = sp + 0x58
  6638: 32 00                    ret
      :                          @401
  6640: 95 11 98                 sp = sp + 0xffffffffffffff98
  6643: 7b 10 60                 u64 [sp + 0x60] = ra
  6646: 7b 15 58                 u64 [sp + 0x58] = s0
  6649: 7b 16 50                 u64 [sp + 0x50] = s1
  6652: 80 73 34                 t1 = u32 [a0 + 0x34]
  6655: 7b 1a 20                 u64 [sp + 0x20] = a3
  6658: 64 9c                    a5 = a2
  6660: 84 36 01                 s1 = t1 & 0x1
  6663: 33 02 2b                 t0 = 0x2b
  6666: 33 09 00 00 11           a2 = 0x110000
  6671: 84 3a 04                 a3 = t1 & 0x4
  6674: 7b 1b 28                 u64 [sp + 0x28] = a4
  6677: c8 b6 04                 t2 = s1 + a4
  6680: 7b 1c 30                 u64 [sp + 0x30] = a5
  6683: 52 0a 10                 jump @404 if a3 != 0
      :                          @402
  6686: 49 11 38                 u64 [sp + 56] = 0
  6689: 82 78                    a1 = u64 [a0]
  6691: 94 69 2b                 a2 = 0x2b if s1 != 0
  6694: 52 08 35                 jump @408 if a1 != 0
      :                          @403
  6697: 28 56                    jump @413
      :                          @404
  6699: 7b 18 38                 u64 [sp + 0x38] = a1
  6702: 33 09                    a2 = 0
  6704: 51 0c 1b                 jump @407 if a5 == 0
      :                          @405
  6707: 82 1b 38                 a4 = u64 [sp + 0x38]
  6710: 01                       fallthrough
      :                          @406
  6711: 7d b5                    s0 = i8 [a4]
  6713: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
  6716: 85 5a 01                 a3 = s0 ^ 0x1
  6719: c8 a9 09                 a2 = a2 + a3
  6722: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  6725: 95 bb 01                 a4 = a4 + 0x1
  6728: 52 0c ef                 jump @406 if a5 != 0
      :                          @407
  6731: c8 94 04                 t2 = t2 + a2
  6734: 33 09 00 00 11           a2 = 0x110000
  6739: 82 78                    a1 = u64 [a0]
  6741: db 62 09                 a2 = t0 if s1 != 0
  6744: 51 08 27                 jump @413 if a1 == 0
      :                          @408
  6747: 82 7a 08                 a3 = u64 [a0 + 0x8]
  6750: ae a4 21                 jump @413 if t2 >=u a3
      :                          @409
  6753: 84 38 08                 a1 = t1 & 0x8
  6756: 52 08 51                 jump @416 if a1 != 0
      :                          @410
  6759: 7c 76 38                 s1 = u8 [a0 + 0x38]
  6762: c9 4a 0a                 a3 = a3 - t2
  6765: 7b 19 18                 u64 [sp + 0x18] = a2
  6768: 5a 16 01 a0 00           jump @423 if s1 >s 1
      :                          @411
  6773: 52 06 ad 00              jump @425 if s1 != 0
      :                          @412
  6777: 7b 1a 10                 u64 [sp + 0x10] = a3
  6780: 28 ac 00                 jump @426
      :                          @413
  6783: 82 75 20                 s0 = u64 [a0 + 0x20]
  6786: 82 76 28                 s1 = u64 [a0 + 0x28]
  6789: 64 57                    a0 = s0
  6791: 64 68                    a1 = s1
  6793: 82 1a 38                 a3 = u64 [sp + 0x38]
  6796: 82 1b 30                 a4 = u64 [sp + 0x30]
  6799: 50 20 96 00 75 01        ra = 150, jump @446
      :                          @414 [@dyn 75]
  6805: 33 08 01                 a1 = 0x1
  6808: 52 07 be 00              jump @431 if a0 != 0
      :                          @415
  6812: 82 6c 18                 a5 = u64 [s1 + 0x18]
  6815: 64 57                    a0 = s0
  6817: 82 18 20                 a1 = u64 [sp + 0x20]
  6820: 82 19 28                 a2 = u64 [sp + 0x28]
  6823: 82 10 60                 ra = u64 [sp + 0x60]
  6826: 82 15 58                 s0 = u64 [sp + 0x58]
  6829: 82 16 50                 s1 = u64 [sp + 0x50]
  6832: 95 11 68                 sp = sp + 0x68
  6835: 32 0c                    jump [a5]
      :                          @416
  6837: 7b 1a 40                 u64 [sp + 0x40] = a3
  6840: 64 45                    s0 = t2
  6842: 81 78 30                 a1 = i32 [a0 + 0x30]
  6845: 7b 18 10                 u64 [sp + 0x10] = a1
  6848: 7c 7a 38                 a3 = u8 [a0 + 0x38]
  6851: 7b 1a 08                 u64 [sp + 0x8] = a3
  6854: 82 7a 20                 a3 = u64 [a0 + 0x20]
  6857: 82 78 28                 a1 = u64 [a0 + 0x28]
  6860: 48 17 30 30              u32 [a0 + 48] = 0x30
  6864: 7b 17                    u64 [sp] = a0
  6866: 46 17 38 01              u8 [a0 + 56] = 0x1
  6870: 7b 1a 48                 u64 [sp + 0x48] = a3
  6873: 64 a7                    a0 = a3
  6875: 64 86                    s1 = a1
  6877: 82 1a 38                 a3 = u64 [sp + 0x38]
  6880: 82 1b 30                 a4 = u64 [sp + 0x30]
  6883: 50 20 98 00 21 01        ra = 152, jump @446
      :                          @417 [@dyn 76]
  6889: 52 07 69                 jump @430 if a0 != 0
      :                          @418
  6892: 82 17 40                 a0 = u64 [sp + 0x40]
  6895: c9 57 05                 s0 = a0 - s0
  6898: 95 55 01                 s0 = s0 + 0x1
  6901: 01                       fallthrough
      :                          @419
  6902: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  6905: 51 05 cb 00              jump @441 if s0 == 0
      :                          @420
  6909: 82 69 20                 a2 = u64 [s1 + 0x20]
  6912: 33 08 30                 a1 = 0x30
  6915: 82 17 48                 a0 = u64 [sp + 0x48]
  6918: b4 90 02 9a 00           ra = 154, jump [a2]
      :                          @421 [@dyn 77]
  6923: 51 07 eb                 jump @419 if a0 == 0
      :                          @422
  6926: 28 44                    jump @430
      :                          @423
  6928: 52 16 02 12              jump @425 if s1 != 2
      :                          @424
  6932: 98 a6 01                 s1 = a3 >> 0x1
  6935: 95 a8 01                 a1 = a3 + 0x1
  6938: 98 88 01                 a1 = a1 >> 0x1
  6941: 7b 18 10                 u64 [sp + 0x10] = a1
  6944: 28 08                    jump @426
      :                          @425
  6946: 64 a6                    s1 = a3
  6948: 49 11 10                 u64 [sp + 16] = 0
  6951: 01                       fallthrough
      :                          @426
  6952: 82 78 20                 a1 = u64 [a0 + 0x20]
  6955: 7b 18 48                 u64 [sp + 0x48] = a1
  6958: 82 75 28                 s0 = u64 [a0 + 0x28]
  6961: 81 77 30                 a0 = i32 [a0 + 0x30]
  6964: 7b 17 40                 u64 [sp + 0x40] = a0
  6967: 95 66 01                 s1 = s1 + 0x1
  6970: 01                       fallthrough
      :                          @427
  6971: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  6974: 51 06 28                 jump @432 if s1 == 0
      :                          @428
  6977: 82 59 20                 a2 = u64 [s0 + 0x20]
  6980: 82 17 48                 a0 = u64 [sp + 0x48]
  6983: 82 18 40                 a1 = u64 [sp + 0x40]
  6986: b4 90 02 9c 00           ra = 156, jump [a2]
      :                          @429 [@dyn 78]
  6991: 51 07 ec                 jump @427 if a0 == 0
      :                          @430
  6994: 33 08 01                 a1 = 0x1
  6997: 01                       fallthrough
      :                          @431
  6998: 64 87                    a0 = a1
  7000: 82 10 60                 ra = u64 [sp + 0x60]
  7003: 82 15 58                 s0 = u64 [sp + 0x58]
  7006: 82 16 50                 s1 = u64 [sp + 0x50]
  7009: 95 11 68                 sp = sp + 0x68
  7012: 32 00                    ret
      :                          @432
  7014: 82 16 48                 s1 = u64 [sp + 0x48]
  7017: 64 67                    a0 = s1
  7019: 64 58                    a1 = s0
  7021: 82 19 18                 a2 = u64 [sp + 0x18]
  7024: 82 1a 38                 a3 = u64 [sp + 0x38]
  7027: 82 1b 30                 a4 = u64 [sp + 0x30]
  7030: 50 20 9e 00 8e 00        ra = 158, jump @446
      :                          @433 [@dyn 79]
  7036: 33 08 01                 a1 = 0x1
  7039: 52 07 d7                 jump @431 if a0 != 0
      :                          @434
  7042: 82 5a 18                 a3 = u64 [s0 + 0x18]
  7045: 64 67                    a0 = s1
  7047: 82 18 20                 a1 = u64 [sp + 0x20]
  7050: 82 19 28                 a2 = u64 [sp + 0x28]
  7053: b4 a0 02 a0 00           ra = 160, jump [a3]
      :                          @435 [@dyn 80]
  7058: 33 08 01                 a1 = 0x1
  7061: 52 07 c1                 jump @431 if a0 != 0
      :                          @436
  7064: 82 17 10                 a0 = u64 [sp + 0x10]
  7067: 9a 77                    a0 = -a0
  7069: 7b 17 38                 u64 [sp + 0x38] = a0
  7072: 33 06 ff                 s1 = 0xffffffffffffffff
  7075: 01                       fallthrough
      :                          @437
  7076: 82 17 38                 a0 = u64 [sp + 0x38]
  7079: c8 67 07                 a0 = a0 + s1
  7082: 51 17 ff 45              jump @444 if a0 == 4294967295
      :                          @438
  7086: 82 59 20                 a2 = u64 [s0 + 0x20]
  7089: 82 17 48                 a0 = u64 [sp + 0x48]
  7092: 82 18 40                 a1 = u64 [sp + 0x40]
  7095: b4 90 02 a2 00           ra = 162, jump [a2]
      :                          @439 [@dyn 81]
  7100: 95 66 01                 s1 = s1 + 0x1
  7103: 51 07 e5                 jump @437 if a0 == 0
      :                          @440
  7106: 28 39                    jump @445
      :                          @441
  7108: 82 6a 18                 a3 = u64 [s1 + 0x18]
  7111: 82 17 48                 a0 = u64 [sp + 0x48]
  7114: 82 18 20                 a1 = u64 [sp + 0x20]
  7117: 82 19 28                 a2 = u64 [sp + 0x28]
  7120: b4 a0 02 a4 00           ra = 164, jump [a3]
      :                          @442 [@dyn 82]
  7125: 33 08 01                 a1 = 0x1
  7128: 52 07 7e ff              jump @431 if a0 != 0
      :                          @443
  7132: 33 08                    a1 = 0
  7134: 82 16                    s1 = u64 [sp]
  7136: 82 17 10                 a0 = u64 [sp + 0x10]
  7139: 7a 67 30                 u32 [s1 + 0x30] = a0
  7142: 82 17 08                 a0 = u64 [sp + 0x8]
  7145: 78 67 38                 u8 [s1 + 0x38] = a0
  7148: 28 6a ff                 jump @431
      :                          @444
  7151: 82 16 10                 s1 = u64 [sp + 0x10]
  7154: 82 17 10                 a0 = u64 [sp + 0x10]
  7157: d8 76 08                 a1 = s1 <u a0
  7160: 28 5e ff                 jump @431
      :                          @445
  7163: 82 17 10                 a0 = u64 [sp + 0x10]
  7166: d8 76 08                 a1 = s1 <u a0
  7169: 28 55 ff                 jump @431
      :                          @446
  7172: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  7175: 7b 10 20                 u64 [sp + 0x20] = ra
  7178: 7b 15 18                 u64 [sp + 0x18] = s0
  7181: 7b 16 10                 u64 [sp + 0x10] = s1
  7184: 83 9c                    i32 a5 = a2 + 0
  7186: 33 02 00 00 11           t0 = 0x110000
  7191: 64 a6                    s1 = a3
  7193: 64 85                    s0 = a1
  7195: 64 7a                    a3 = a0
  7197: aa 2c 21                 jump @449 if a5 == t0
      :                          @447
  7200: 82 5c 20                 a5 = u64 [s0 + 0x20]
  7203: 64 a7                    a0 = a3
  7205: 64 98                    a1 = a2
  7207: 7b 1b 08                 u64 [sp + 0x8] = a4
  7210: 7b 1a                    u64 [sp] = a3
  7212: b4 c0 02 a6 00           ra = 166, jump [a5]
      :                          @448 [@dyn 83]
  7217: 82 1a                    a3 = u64 [sp]
  7219: 82 1b 08                 a4 = u64 [sp + 0x8]
  7222: 64 78                    a1 = a0
  7224: 33 07 01                 a0 = 0x1
  7227: 52 08 20                 jump @452 if a1 != 0
      :                          @449
  7230: 51 06 1a                 jump @451 if s1 == 0
      :                          @450
  7233: 82 5c 18                 a5 = u64 [s0 + 0x18]
  7236: 64 a7                    a0 = a3
  7238: 64 68                    a1 = s1
  7240: 64 b9                    a2 = a4
  7242: 82 10 20                 ra = u64 [sp + 0x20]
  7245: 82 15 18                 s0 = u64 [sp + 0x18]
  7248: 82 16 10                 s1 = u64 [sp + 0x10]
  7251: 95 11 28                 sp = sp + 0x28
  7254: 32 0c                    jump [a5]
      :                          @451
  7256: 33 07                    a0 = 0
  7258: 01                       fallthrough
      :                          @452
  7259: 82 10 20                 ra = u64 [sp + 0x20]
  7262: 82 15 18                 s0 = u64 [sp + 0x18]
  7265: 82 16 10                 s1 = u64 [sp + 0x10]
  7268: 95 11 28                 sp = sp + 0x28
  7271: 32 00                    ret
      :                          @453
  7273: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  7277: 7b 10 80 00              u64 [sp + 0x80] = ra
  7281: 7b 15 78                 u64 [sp + 0x78] = s0
  7284: 7b 16 70                 u64 [sp + 0x70] = s1
  7287: 49 11 60 20              u64 [sp + 96] = 0x20
  7291: 33 0a 03                 a3 = 0x3
  7294: 78 1a 68                 u8 [sp + 0x68] = a3
  7297: 82 96 20                 s1 = u64 [a2 + 0x20]
  7300: 49 11 30                 u64 [sp + 48] = 0
  7303: 49 11 40                 u64 [sp + 64] = 0
  7306: 7b 17 50                 u64 [sp + 0x50] = a0
  7309: 7b 18 58                 u64 [sp + 0x58] = a1
  7312: 51 06 0a 01              jump @475 if s1 == 0
      :                          @454
  7316: 82 97 28                 a0 = u64 [a2 + 0x28]
  7319: 51 07 79 01              jump @485 if a0 == 0
      :                          @455
  7323: 49 11 28                 u64 [sp + 40] = 0
  7326: 82 95                    s0 = u64 [a2]
  7328: 7b 19 08                 u64 [sp + 0x8] = a2
  7331: 82 98 10                 a1 = u64 [a2 + 0x10]
  7334: 7b 18 18                 u64 [sp + 0x18] = a1
  7337: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  7340: 97 88 03                 a1 = a1 << 0x3
  7343: 98 88 03                 a1 = a1 >> 0x3
  7346: 95 88 01                 a1 = a1 + 0x1
  7349: 7b 18                    u64 [sp] = a1
  7351: 95 55 08                 s0 = s0 + 0x8
  7354: 96 78 38                 a1 = a0 * 0x38
  7357: 95 66 18                 s1 = s1 + 0x18
  7360: 33 07 92 00              a0 = 0x92
  7364: 7b 17 10                 u64 [sp + 0x10] = a0
  7367: 01                       fallthrough
      :                          @456
  7368: 7b 18 20                 u64 [sp + 0x20] = a1
  7371: 82 59                    a2 = u64 [s0]
  7373: 51 09 18                 jump @459 if a2 == 0
      :                          @457
  7376: 82 1a 58                 a3 = u64 [sp + 0x58]
  7379: 82 17 50                 a0 = u64 [sp + 0x50]
  7382: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  7385: 82 aa 18                 a3 = u64 [a3 + 0x18]
  7388: b4 a0 02 a8 00           ra = 168, jump [a3]
      :                          @458 [@dyn 84]
  7393: 52 07 55 01              jump @488 if a0 != 0
      :                          @459
  7397: 81 67 10                 a0 = i32 [s1 + 0x10]
  7400: 7a 17 60                 u32 [sp + 0x60] = a0
  7403: 7c 67 18                 a0 = u8 [s1 + 0x18]
  7406: 78 17 68                 u8 [sp + 0x68] = a0
  7409: 81 67 14                 a0 = i32 [s1 + 0x14]
  7412: 7a 17 64                 u32 [sp + 0x64] = a0
  7415: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  7418: 82 67                    a0 = u64 [s1]
  7420: 51 08 26                 jump @464 if a1 == 0
      :                          @460
  7423: 52 18 01 16              jump @462 if a1 != 1
      :                          @461
  7427: 97 77 04                 a0 = a0 << 0x4
  7430: 82 18 18                 a1 = u64 [sp + 0x18]
  7433: c8 87 07                 a0 = a0 + a1
  7436: 82 78 08                 a1 = u64 [a0 + 0x8]
  7439: 82 19 10                 a2 = u64 [sp + 0x10]
  7442: aa 98 07                 jump @463 if a1 == a2
      :                          @462
  7445: 33 08                    a1 = 0
  7447: 28 0f                    jump @465
      :                          @463
  7449: 82 77                    a0 = u64 [a0]
  7451: 82 77                    a0 = u64 [a0]
  7453: 33 08 01                 a1 = 0x1
  7456: 28 06                    jump @465
      :                          @464
  7458: 33 08 01                 a1 = 0x1
  7461: 01                       fallthrough
      :                          @465
  7462: 7b 18 30                 u64 [sp + 0x30] = a1
  7465: 7b 17 38                 u64 [sp + 0x38] = a0
  7468: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  7471: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  7474: 51 08 26                 jump @470 if a1 == 0
      :                          @466
  7477: 52 18 01 16              jump @468 if a1 != 1
      :                          @467
  7481: 97 77 04                 a0 = a0 << 0x4
  7484: 82 18 18                 a1 = u64 [sp + 0x18]
  7487: c8 87 07                 a0 = a0 + a1
  7490: 82 78 08                 a1 = u64 [a0 + 0x8]
  7493: 82 19 10                 a2 = u64 [sp + 0x10]
  7496: aa 98 07                 jump @469 if a1 == a2
      :                          @468
  7499: 33 08                    a1 = 0
  7501: 28 0f                    jump @471
      :                          @469
  7503: 82 77                    a0 = u64 [a0]
  7505: 82 77                    a0 = u64 [a0]
  7507: 33 08 01                 a1 = 0x1
  7510: 28 06                    jump @471
      :                          @470
  7512: 33 08 01                 a1 = 0x1
  7515: 01                       fallthrough
      :                          @471
  7516: 7b 18 40                 u64 [sp + 0x40] = a1
  7519: 7b 17 48                 u64 [sp + 0x48] = a0
  7522: 82 67 08                 a0 = u64 [s1 + 0x8]
  7525: 97 77 04                 a0 = a0 << 0x4
  7528: 82 18 18                 a1 = u64 [sp + 0x18]
  7531: c8 78 08                 a1 = a1 + a0
  7534: 82 87                    a0 = u64 [a1]
  7536: 82 89 08                 a2 = u64 [a1 + 0x8]
  7539: 95 18 30                 a1 = sp + 0x30
  7542: b4 90 02 aa 00           ra = 170, jump [a2]
      :                          @472 [@dyn 85]
  7547: 52 07 bb 00              jump @488 if a0 != 0
      :                          @473
  7551: 95 55 10                 s0 = s0 + 0x10
  7554: 82 18 20                 a1 = u64 [sp + 0x20]
  7557: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  7560: 95 66 38                 s1 = s1 + 0x38
  7563: 82 17 28                 a0 = u64 [sp + 0x28]
  7566: 95 77 01                 a0 = a0 + 0x1
  7569: 7b 17 28                 u64 [sp + 0x28] = a0
  7572: 52 08 34 ff              jump @456 if a1 != 0
      :                          @474
  7576: 28 6b                    jump @483
      :                          @475
  7578: 82 97 18                 a0 = u64 [a2 + 0x18]
  7581: 51 07 73                 jump @485 if a0 == 0
      :                          @476
  7584: 82 95 10                 s0 = u64 [a2 + 0x10]
  7587: 33 0a                    a3 = 0
  7589: 97 78 04                 a1 = a0 << 0x4
  7592: c8 58 08                 a1 = a1 + s0
  7595: 7b 18 20                 u64 [sp + 0x20] = a1
  7598: 7b 19 08                 u64 [sp + 0x8] = a2
  7601: 82 96                    s1 = u64 [a2]
  7603: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  7606: 97 77 04                 a0 = a0 << 0x4
  7609: 98 77 04                 a0 = a0 >> 0x4
  7612: 95 77 01                 a0 = a0 + 0x1
  7615: 7b 17                    u64 [sp] = a0
  7617: 95 66 08                 s1 = s1 + 0x8
  7620: 01                       fallthrough
      :                          @477
  7621: 7b 1a 28                 u64 [sp + 0x28] = a3
  7624: 82 69                    a2 = u64 [s1]
  7626: 51 09 17                 jump @480 if a2 == 0
      :                          @478
  7629: 82 1a 58                 a3 = u64 [sp + 0x58]
  7632: 82 17 50                 a0 = u64 [sp + 0x50]
  7635: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  7638: 82 aa 18                 a3 = u64 [a3 + 0x18]
  7641: b4 a0 02 ac 00           ra = 172, jump [a3]
      :                          @479 [@dyn 86]
  7646: 52 07 58                 jump @488 if a0 != 0
      :                          @480
  7649: 82 57                    a0 = u64 [s0]
  7651: 82 59 08                 a2 = u64 [s0 + 0x8]
  7654: 95 18 30                 a1 = sp + 0x30
  7657: b4 90 02 ae 00           ra = 174, jump [a2]
      :                          @481 [@dyn 87]
  7662: 52 07 48                 jump @488 if a0 != 0
      :                          @482
  7665: 95 66 10                 s1 = s1 + 0x10
  7668: 95 55 10                 s0 = s0 + 0x10
  7671: 82 1a 28                 a3 = u64 [sp + 0x28]
  7674: 95 aa 01                 a3 = a3 + 0x1
  7677: 82 17 20                 a0 = u64 [sp + 0x20]
  7680: ab 75 c5                 jump @477 if s0 != a0
      :                          @483
  7683: 82 19 08                 a2 = u64 [sp + 0x8]
  7686: 82 1a                    a3 = u64 [sp]
  7688: 82 97 08                 a0 = u64 [a2 + 0x8]
  7691: ac 7a 0d                 jump @486 if a3 <u a0
      :                          @484
  7694: 28 2d                    jump @489
      :                          @485
  7696: 33 0a                    a3 = 0
  7698: 82 97 08                 a0 = u64 [a2 + 0x8]
  7701: 54 07 26                 jump @489 if a0 <=u 0
      :                          @486
  7704: 82 97                    a0 = u64 [a2]
  7706: 97 a8 04                 a1 = a3 << 0x4
  7709: c8 87 09                 a2 = a0 + a1
  7712: 82 1a 58                 a3 = u64 [sp + 0x58]
  7715: 82 17 50                 a0 = u64 [sp + 0x50]
  7718: 82 98                    a1 = u64 [a2]
  7720: 82 99 08                 a2 = u64 [a2 + 0x8]
  7723: 82 aa 18                 a3 = u64 [a3 + 0x18]
  7726: b4 a0 02 b0 00           ra = 176, jump [a3]
      :                          @487 [@dyn 88]
  7731: 51 07 08                 jump @489 if a0 == 0
      :                          @488
  7734: 33 07 01                 a0 = 0x1
  7737: 28 05                    jump @490
      :                          @489
  7739: 33 07                    a0 = 0
  7741: 01                       fallthrough
      :                          @490
  7742: 82 10 80 00              ra = u64 [sp + 0x80]
  7746: 82 15 78                 s0 = u64 [sp + 0x78]
  7749: 82 16 70                 s1 = u64 [sp + 0x70]
  7752: 95 11 88 00              sp = sp + 0x88
  7756: 32 00                    ret
      :                          @491 [@dyn 89]
  7758: 32 00                    ret
      :                          @492 [@dyn 90]
  7760: 95 11 88                 sp = sp + 0xffffffffffffff88
  7763: 7b 10 70                 u64 [sp + 0x70] = ra
  7766: 7b 15 68                 u64 [sp + 0x68] = s0
  7769: 7b 16 60                 u64 [sp + 0x60] = s1
  7772: 64 93                    t1 = a2
  7774: 33 0c                    a5 = 0
  7776: 33 02                    t0 = 0
  7778: 33 0b                    a4 = 0
  7780: 14 04 ff fe fe fe fe fe fe fe t2 = 0xfefefefefefefeff
  7790: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
  7796: 14 00 0a 0a 0a 0a 0a 0a 0a 0a ra = 0xa0a0a0a0a0a0a0a
  7806: 82 79 10                 a2 = u64 [a0 + 0x10]
  7809: 7b 19 48                 u64 [sp + 0x48] = a2
  7812: 82 79                    a2 = u64 [a0]
  7814: 7b 19 30                 u64 [sp + 0x30] = a2
  7817: 82 77 08                 a0 = u64 [a0 + 0x8]
  7820: 7b 17 28                 u64 [sp + 0x28] = a0
  7823: 7b 18 50                 u64 [sp + 0x50] = a1
  7826: 95 88 08                 a1 = a1 + 0x8
  7829: 7b 18                    u64 [sp] = a1
  7831: 33 07 01 02 01           a0 = 0x10201
  7836: 7b 17 08                 u64 [sp + 0x8] = a0
  7839: 33 05 0a                 s0 = 0xa
  7842: 7b 13 20                 u64 [sp + 0x20] = t1
  7845: 7b 14 18                 u64 [sp + 0x18] = t2
  7848: 7b 10 10                 u64 [sp + 0x10] = ra
  7851: 28 3a                    jump @496
      :                          @493
  7853: c8 89 07                 a0 = a2 + a1
  7856: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
  7859: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  7862: 88 77 01                 a0 = a0 <u 0x1
  7865: 01                       fallthrough
      :                          @494
  7866: 82 1a 48                 a3 = u64 [sp + 0x48]
  7869: 78 a7                    u8 [a3] = a0
  7871: 82 17 28                 a0 = u64 [sp + 0x28]
  7874: 82 7a 18                 a3 = u64 [a0 + 0x18]
  7877: 82 17 30                 a0 = u64 [sp + 0x30]
  7880: b4 a0 02 b6 00           ra = 182, jump [a3]
      :                          @495 [@dyn 91]
  7885: 64 52                    t0 = s0
  7887: 82 13 20                 t1 = u64 [sp + 0x20]
  7890: 82 14 18                 t2 = u64 [sp + 0x18]
  7893: 82 10 10                 ra = u64 [sp + 0x10]
  7896: 82 1c 58                 a5 = u64 [sp + 0x58]
  7899: 33 05 0a                 s0 = 0xa
  7902: 82 1b 38                 a4 = u64 [sp + 0x38]
  7905: 52 07 67 01              jump @537 if a0 != 0
      :                          @496
  7909: 84 b7 ff 00              a0 = a4 & 0xff
  7913: 52 07 5b 01              jump @536 if a0 != 0
      :                          @497
  7917: 7b 12 40                 u64 [sp + 0x40] = t0
  7920: ae c3 0a                 jump @500 if t1 >=u a5
      :                          @498
  7923: 28 f4 00                 jump @527
      :                          @499
  7926: ac c3 f1 00              jump @527 if t1 <u a5
      :                          @500
  7930: c9 c3 08                 a1 = t1 - a5
  7933: 82 16 50                 s1 = u64 [sp + 0x50]
  7936: c8 c6 06                 s1 = s1 + a5
  7939: 55 18 10 1d              jump @506 if a1 >=u 16
      :                          @501
  7943: aa c3 dd 00              jump @526 if t1 == a5
      :                          @502
  7947: 33 0a                    a3 = 0
  7949: 01                       fallthrough
      :                          @503
  7950: c8 a6 07                 a0 = s1 + a3
  7953: 7c 77                    a0 = u8 [a0]
  7955: aa 57 aa 00              jump @521 if a0 == s0
      :                          @504
  7959: 95 aa 01                 a3 = a3 + 0x1
  7962: ab a8 f4                 jump @503 if a1 != a3
      :                          @505
  7965: 28 c7 00                 jump @526
      :                          @506
  7968: 95 69 07                 a2 = s1 + 0x7
  7971: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
  7974: c9 6a 07                 a0 = a3 - s1
  7977: d3 6a 0a                 a3 = a3 ^ s1
  7980: 88 aa 01                 a3 = a3 <u 0x1
  7983: 88 7b 01                 a4 = a0 <u 0x1
  7986: d4 ba 0a                 a3 = a3 | a4
  7989: 7b 1c 58                 u64 [sp + 0x58] = a5
  7992: 51 0a 44                 jump @512 if a3 == 0
      :                          @507
  7995: 33 07                    a0 = 0
  7997: 95 82 f0                 t0 = a1 + 0xfffffffffffffff0
  8000: 01                       fallthrough
      :                          @508
  8001: 82 1b 58                 a4 = u64 [sp + 0x58]
  8004: 82 19                    a2 = u64 [sp]
  8006: c8 9b 0b                 a4 = a4 + a2
  8009: 01                       fallthrough
      :                          @509
  8010: c8 76 0c                 a5 = s1 + a0
  8013: 82 cc                    a5 = u64 [a5]
  8015: c8 7b 09                 a2 = a4 + a0
  8018: 82 99                    a2 = u64 [a2]
  8020: d3 0c 05                 s0 = a5 ^ ra
  8023: c8 45 05                 s0 = s0 + t2
  8026: e0 c5 0c                 a5 = s0 & ~a5
  8029: d3 09 05                 s0 = a2 ^ ra
  8032: 3a 0a 08 00 03           a3 = u64 [0x30008]
  8037: c8 45 05                 s0 = s0 + t2
  8040: e0 95 09                 a2 = s0 & ~a2
  8043: d4 c9 09                 a2 = a2 | a5
  8046: d2 a9 09                 a2 = a2 & a3
  8049: 52 09 1f                 jump @515 if a2 != 0
      :                          @510
  8052: 95 77 10                 a0 = a0 + 0x10
  8055: ae 72 d3                 jump @509 if t0 >=u a0
      :                          @511
  8058: 28 16                    jump @515
      :                          @512
  8060: c8 a6 0b                 a4 = s1 + a3
  8063: 7c bb                    a4 = u8 [a4]
  8065: aa 5b 54                 jump @524 if a4 == s0
      :                          @513
  8068: 95 aa 01                 a3 = a3 + 0x1
  8071: ab a7 f5                 jump @512 if a0 != a3
      :                          @514
  8074: 95 82 f0                 t0 = a1 + 0xfffffffffffffff0
  8077: ae 72 b4                 jump @508 if t0 >=u a0
      :                          @515
  8080: aa 87 99 00              jump @533 if a0 == a1
      :                          @516
  8084: 33 0a                    a3 = 0
  8086: c8 76 06                 s1 = s1 + a0
  8089: c9 73 08                 a1 = t1 - a0
  8092: 82 1c 58                 a5 = u64 [sp + 0x58]
  8095: c9 c8 08                 a1 = a1 - a5
  8098: 33 05 0a                 s0 = 0xa
  8101: 82 12 40                 t0 = u64 [sp + 0x40]
  8104: 01                       fallthrough
      :                          @517
  8105: c8 a6 09                 a2 = s1 + a3
  8108: 7c 99                    a2 = u8 [a2]
  8110: aa 59 0b                 jump @520 if a2 == s0
      :                          @518
  8113: 95 aa 01                 a3 = a3 + 0x1
  8116: ab a8 f5                 jump @517 if a1 != a3
      :                          @519
  8119: 28 2d                    jump @526
      :                          @520
  8121: c8 7a 0a                 a3 = a3 + a0
  8124: 01                       fallthrough
      :                          @521
  8125: c8 ca 0a                 a3 = a3 + a5
  8128: 95 ac 01                 a5 = a3 + 0x1
  8131: ae 3a 33 ff              jump @499 if a3 >=u t1
      :                          @522
  8135: 82 17 50                 a0 = u64 [sp + 0x50]
  8138: c8 7a 0a                 a3 = a3 + a0
  8141: 7c a7                    a0 = u8 [a3]
  8143: ab 57 27 ff              jump @499 if a0 != s0
      :                          @523
  8147: 28 5d                    jump @534
      :                          @524
  8149: 82 1c 58                 a5 = u64 [sp + 0x58]
  8152: c8 ca 0a                 a3 = a3 + a5
  8155: 95 ac 01                 a5 = a3 + 0x1
  8158: ac 3a e9                 jump @522 if a3 <u t1
      :                          @525
  8161: 28 15 ff                 jump @499
      :                          @526
  8164: 64 3c                    a5 = t1
  8166: 01                       fallthrough
      :                          @527
  8167: 7b 1c 58                 u64 [sp + 0x58] = a5
  8170: 49 11 38 01              u64 [sp + 56] = 0x1
  8174: 64 25                    s0 = t0
  8176: 64 36                    s1 = t1
  8178: aa 32 52                 jump @536 if t0 == t1
      :                          @528
  8181: 82 17 48                 a0 = u64 [sp + 0x48]
  8184: 7c 77                    a0 = u8 [a0]
  8186: 51 07 1d                 jump @531 if a0 == 0
      :                          @529
  8189: 82 17 28                 a0 = u64 [sp + 0x28]
  8192: 82 7a 18                 a3 = u64 [a0 + 0x18]
  8195: 33 09 04                 a2 = 0x4
  8198: 82 17 30                 a0 = u64 [sp + 0x30]
  8201: 82 18 08                 a1 = u64 [sp + 0x8]
  8204: b4 a0 02 b8 00           ra = 184, jump [a3]
      :                          @530 [@dyn 92]
  8209: 82 12 40                 t0 = u64 [sp + 0x40]
  8212: 52 07 34                 jump @537 if a0 != 0
      :                          @531
  8215: c9 26 09                 a2 = s1 - t0
  8218: 82 18 50                 a1 = u64 [sp + 0x50]
  8221: c8 28 08                 a1 = a1 + t0
  8224: ab 26 8d fe              jump @493 if s1 != t0
      :                          @532
  8228: 33 07                    a0 = 0
  8230: 28 94 fe                 jump @494
      :                          @533
  8233: 64 3c                    a5 = t1
  8235: 82 12 40                 t0 = u64 [sp + 0x40]
  8238: 28 b9                    jump @527
      :                          @534
  8240: 49 11 38                 u64 [sp + 56] = 0
  8243: 64 c6                    s1 = a5
  8245: 64 c5                    s0 = a5
  8247: 7b 1c 58                 u64 [sp + 0x58] = a5
  8250: 82 17 48                 a0 = u64 [sp + 0x48]
  8253: 7c 77                    a0 = u8 [a0]
  8255: 52 07 be                 jump @529 if a0 != 0
      :                          @535
  8258: 28 d5                    jump @531
      :                          @536
  8260: 33 07                    a0 = 0
  8262: 28 06                    jump @538
      :                          @537
  8264: 33 07 01                 a0 = 0x1
  8267: 01                       fallthrough
      :                          @538
  8268: 82 10 70                 ra = u64 [sp + 0x70]
  8271: 82 15 68                 s0 = u64 [sp + 0x68]
  8274: 82 16 60                 s1 = u64 [sp + 0x60]
  8277: 95 11 78                 sp = sp + 0x78
  8280: 32 00                    ret
      :                          @539 [@dyn 93]
  8282: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  8285: 7b 10 20                 u64 [sp + 0x20] = ra
  8288: 7b 15 18                 u64 [sp + 0x18] = s0
  8291: 7b 16 10                 u64 [sp + 0x10] = s1
  8294: 82 75 10                 s0 = u64 [a0 + 0x10]
  8297: 7c 59                    a2 = u8 [s0]
  8299: 82 7b                    a4 = u64 [a0]
  8301: 82 76 08                 s1 = u64 [a0 + 0x8]
  8304: 51 09 33                 jump @543 if a2 == 0
      :                          @540
  8307: 82 6a 18                 a3 = u64 [s1 + 0x18]
  8310: 7b 18 08                 u64 [sp + 0x8] = a1
  8313: 33 08 01 02 01           a1 = 0x10201
  8318: 33 09 04                 a2 = 0x4
  8321: 64 b7                    a0 = a4
  8323: 7b 1b                    u64 [sp] = a4
  8325: b4 a0 02 bc 00           ra = 188, jump [a3]
      :                          @541 [@dyn 94]
  8330: 82 18 08                 a1 = u64 [sp + 0x8]
  8333: 82 1b                    a4 = u64 [sp]
  8335: 51 07 14                 jump @543 if a0 == 0
      :                          @542
  8338: 33 07 01                 a0 = 0x1
  8341: 82 10 20                 ra = u64 [sp + 0x20]
  8344: 82 15 18                 s0 = u64 [sp + 0x18]
  8347: 82 16 10                 s1 = u64 [sp + 0x10]
  8350: 95 11 28                 sp = sp + 0x28
  8353: 32 00                    ret
      :                          @543
  8355: 83 87                    i32 a0 = a1 + 0
  8357: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  8360: 88 77 01                 a0 = a0 <u 0x1
  8363: 78 57                    u8 [s0] = a0
  8365: 82 6c 20                 a5 = u64 [s1 + 0x20]
  8368: 64 b7                    a0 = a4
  8370: 82 10 20                 ra = u64 [sp + 0x20]
  8373: 82 15 18                 s0 = u64 [sp + 0x18]
  8376: 82 16 10                 s1 = u64 [sp + 0x10]
  8379: 95 11 28                 sp = sp + 0x28
  8382: 32 0c                    jump [a5]
      :                          @544 [@dyn 95]
  8384: 64 8a                    a3 = a1
  8386: 33 08 30 06 01           a1 = 0x10630
  8391: 64 a9                    a2 = a3
  8393: 28 a0 fb                 jump @453
      :                          @545
  8396: 95 11 70 ff              sp = sp + 0xffffffffffffff70
  8400: 7b 10 88 00              u64 [sp + 0x88] = ra
  8404: 7b 15 80 00              u64 [sp + 0x80] = s0
  8408: 7b 16 78                 u64 [sp + 0x78] = s1
  8411: 64 75                    s0 = a0
  8413: 7c 77 08                 a0 = u8 [a0 + 0x8]
  8416: 64 8b                    a4 = a1
  8418: 33 08 01                 a1 = 0x1
  8421: 33 06 01                 s1 = 0x1
  8424: 51 07 1d                 jump @547 if a0 == 0
      :                          @546
  8427: 78 56 08                 u8 [s0 + 0x8] = s1
  8430: 46 15 09 01              u8 [s0 + 9] = 0x1
  8434: 64 57                    a0 = s0
  8436: 82 10 88 00              ra = u64 [sp + 0x88]
  8440: 82 15 80 00              s0 = u64 [sp + 0x80]
  8444: 82 16 78                 s1 = u64 [sp + 0x78]
  8447: 95 11 90 00              sp = sp + 0x90
  8451: 32 00                    ret
      :                          @547
  8453: 64 9a                    a3 = a2
  8455: 82 5c                    a5 = u64 [s0]
  8457: 80 c7 34                 a0 = u32 [a5 + 0x34]
  8460: 7c 58 09                 a1 = u8 [s0 + 0x9]
  8463: 84 79 04                 a2 = a0 & 0x4
  8466: 52 09 45                 jump @553 if a2 != 0
      :                          @548
  8469: 51 08 32                 jump @551 if a1 == 0
      :                          @549
  8472: 82 c8 28                 a1 = u64 [a5 + 0x28]
  8475: 82 c7 20                 a0 = u64 [a5 + 0x20]
  8478: 82 83 18                 t1 = u64 [a1 + 0x18]
  8481: 33 08 09 02 01           a1 = 0x10209
  8486: 33 09 02                 a2 = 0x2
  8489: 64 a6                    s1 = a3
  8491: 7b 1b 10                 u64 [sp + 0x10] = a4
  8494: 7b 1c 08                 u64 [sp + 0x8] = a5
  8497: b4 30 02 c0 00           ra = 192, jump [t1]
      :                          @550 [@dyn 96]
  8502: 82 1c 08                 a5 = u64 [sp + 0x8]
  8505: 82 1b 10                 a4 = u64 [sp + 0x10]
  8508: 64 6a                    a3 = s1
  8510: 33 08 01                 a1 = 0x1
  8513: 33 06 01                 s1 = 0x1
  8516: 52 07 a7                 jump @546 if a0 != 0
      :                          @551
  8519: 64 b7                    a0 = a4
  8521: 64 c8                    a1 = a5
  8523: b4 a0 02 c2 00           ra = 194, jump [a3]
      :                          @552 [@dyn 97]
  8528: 33 08 01                 a1 = 0x1
  8531: 64 76                    s1 = a0
  8533: 28 96                    jump @546
      :                          @553
  8535: 52 08 37                 jump @557 if a1 != 0
      :                          @554
  8538: 82 c8 28                 a1 = u64 [a5 + 0x28]
  8541: 82 c7 20                 a0 = u64 [a5 + 0x20]
  8544: 82 83 18                 t1 = u64 [a1 + 0x18]
  8547: 33 08 0d 02 01           a1 = 0x1020d
  8552: 33 09 01                 a2 = 0x1
  8555: 33 06 01                 s1 = 0x1
  8558: 7b 1a                    u64 [sp] = a3
  8560: 7b 1b 10                 u64 [sp + 0x10] = a4
  8563: 7b 1c 08                 u64 [sp + 0x8] = a5
  8566: b4 30 02 c4 00           ra = 196, jump [t1]
      :                          @555 [@dyn 98]
  8571: 82 1c 08                 a5 = u64 [sp + 0x8]
  8574: 82 1b 10                 a4 = u64 [sp + 0x10]
  8577: 82 1a                    a3 = u64 [sp]
  8579: 33 08 01                 a1 = 0x1
  8582: 52 07 65 ff              jump @546 if a0 != 0
      :                          @556
  8586: 81 c7 34                 a0 = i32 [a5 + 0x34]
  8589: 01                       fallthrough
      :                          @557
  8590: 33 06 01                 s1 = 0x1
  8593: 78 16 37                 u8 [sp + 0x37] = s1
  8596: 82 c8 20                 a1 = u64 [a5 + 0x20]
  8599: 82 c9 28                 a2 = u64 [a5 + 0x28]
  8602: 7b 18 18                 u64 [sp + 0x18] = a1
  8605: 7b 19 20                 u64 [sp + 0x20] = a2
  8608: 95 18 37                 a1 = sp + 0x37
  8611: 7b 18 28                 u64 [sp + 0x28] = a1
  8614: 81 c8 30                 a1 = i32 [a5 + 0x30]
  8617: 7c c9 38                 a2 = u8 [a5 + 0x38]
  8620: 82 c3                    t1 = u64 [a5]
  8622: 82 c4 08                 t2 = u64 [a5 + 0x8]
  8625: 82 c0 10                 ra = u64 [a5 + 0x10]
  8628: 82 c2 18                 t0 = u64 [a5 + 0x18]
  8631: 7a 17 6c                 u32 [sp + 0x6c] = a0
  8634: 7a 18 68                 u32 [sp + 0x68] = a1
  8637: 78 19 70                 u8 [sp + 0x70] = a2
  8640: 7b 13 38                 u64 [sp + 0x38] = t1
  8643: 7b 14 40                 u64 [sp + 0x40] = t2
  8646: 7b 10 48                 u64 [sp + 0x48] = ra
  8649: 7b 12 50                 u64 [sp + 0x50] = t0
  8652: 95 17 18                 a0 = sp + 0x18
  8655: 7b 17 58                 u64 [sp + 0x58] = a0
  8658: 33 07 30 06 01           a0 = 0x10630
  8663: 7b 17 60                 u64 [sp + 0x60] = a0
  8666: 95 18 38                 a1 = sp + 0x38
  8669: 64 b7                    a0 = a4
  8671: b4 a0 02 c6 00           ra = 198, jump [a3]
      :                          @558 [@dyn 99]
  8676: 52 07 21                 jump @561 if a0 != 0
      :                          @559
  8679: 82 18 60                 a1 = u64 [sp + 0x60]
  8682: 82 17 58                 a0 = u64 [sp + 0x58]
  8685: 82 8a 18                 a3 = u64 [a1 + 0x18]
  8688: 33 08 0b 02 01           a1 = 0x1020b
  8693: 33 09 02                 a2 = 0x2
  8696: b4 a0 02 c8 00           ra = 200, jump [a3]
      :                          @560 [@dyn 100]
  8701: 64 76                    s1 = a0
  8703: 33 08 01                 a1 = 0x1
  8706: 28 e9 fe                 jump @546
      :                          @561
  8709: 33 08 01                 a1 = 0x1
  8712: 28 e3 fe                 jump @546
      :                          @562
  8715: 51 08 9b 00              jump @583 if a1 == 0
      :                          @563
  8719: 64 79                    a2 = a0
  8721: 7c 77                    a0 = u8 [a0]
  8723: 51 07 91 00              jump @582 if a0 == 0
      :                          @564
  8727: 51 27 ff 00 90 00        jump @584 if a0 == 255
      :                          @565
  8733: 6c 7a                    a3 = sext.b a0
  8735: 57 0a 09                 jump @567 if a3 <s 0
      :                          @566
  8738: 33 0a                    a3 = 0
  8740: 33 08                    a1 = 0
  8742: 28 73                    jump @581
      :                          @567
  8744: 55 27 c0 00 0d           jump @569 if a0 >=u 192
      :                          @568
  8749: 33 0a 01                 a3 = 0x1
  8752: 33 0b 80                 a4 = 0xffffffffffffff80
  8755: 28 4a                    jump @578
      :                          @569
  8757: 55 27 e0 00 0e           jump @571 if a0 >=u 224
      :                          @570
  8762: 33 0a 02                 a3 = 0x2
  8765: 33 0b 40 ff              a4 = 0xffffffffffffff40
  8769: 28 3c                    jump @578
      :                          @571
  8771: 55 27 f0 00 0e           jump @573 if a0 >=u 240
      :                          @572
  8776: 33 0a 03                 a3 = 0x3
  8779: 33 0b 20 ff              a4 = 0xffffffffffffff20
  8783: 28 2e                    jump @578
      :                          @573
  8785: 55 27 f8 00 0e           jump @575 if a0 >=u 248
      :                          @574
  8790: 33 0a 04                 a3 = 0x4
  8793: 33 0b 10 ff              a4 = 0xffffffffffffff10
  8797: 28 20                    jump @578
      :                          @575
  8799: 55 27 fc 00 0e           jump @577 if a0 >=u 252
      :                          @576
  8804: 33 0a 05                 a3 = 0x5
  8807: 33 0b 08 ff              a4 = 0xffffffffffffff08
  8811: 28 12                    jump @578
      :                          @577
  8813: 88 7a fe 00              a3 = a0 <u 0xfe
  8817: 33 0b 04 ff              a4 = 0xffffffffffffff04
  8821: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  8825: 85 aa 07                 a3 = a3 ^ 0x7
  8828: 01                       fallthrough
      :                          @578
  8829: ae 8a 2b                 jump @585 if a3 >=u a1
      :                          @579
  8832: 33 08                    a1 = 0
  8834: c8 b7 07                 a0 = a0 + a4
  8837: 64 ab                    a4 = a3
  8839: 01                       fallthrough
      :                          @580
  8840: c8 b9 0c                 a5 = a2 + a4
  8843: 7c cc                    a5 = u8 [a5]
  8845: 97 88 08                 a1 = a1 << 0x8
  8848: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  8851: d4 c8 08                 a1 = a1 | a5
  8854: 52 0b f2                 jump @580 if a4 != 0
      :                          @581
  8857: 8a a9 03                 i32 a2 = a3 << 0x3
  8860: cf 97 07                 a0 = a0 << a2
  8863: c8 87 07                 a0 = a0 + a1
  8866: 32 00                    ret
      :                          @582
  8868: 32 00                    ret
      :                          @583
  8870: 00                       trap
      :                          @584
  8871: 00                       trap
      :                          @585
  8872: 00                       trap
