// RO data = 1644/1644 bytes
// RW data = 8/1052720 bytes
// Stack size = 1048576 bytes
// RO data = [0, 16, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 70, 105, 114, 115, 116, 32, 114, 111, 117, 110, 100, 32, 115, 101, 116, 117, 112, 58, 32, 119, 105, 95, 112, 97, 121, 108, 111, 97, 100, 95, 108, 101, 110, 103, 116, 104, 61, 0, 0, 0, 8, 0, 1, 0, 0, 0, 0, 0, 45, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 122, 61, 32, 115, 61, 32, 111, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 32, 111, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 32, 119, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 80, 97, 114, 101, 110, 116, 58, 32, 112, 97, 103, 101, 115, 32, 109, 61, 32, 119, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 72, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 82, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 85, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 118, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 166, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 134, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 183, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 102, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 109, 97, 99, 104, 105, 110, 101, 32, 110, 101, 119, 32, 105, 110, 100, 101, 120, 61, 0, 0, 0, 0, 0, 0, 72, 1, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 83, 116, 97, 114, 116, 70, 101, 116, 99, 104, 80, 97, 114, 101, 110, 116, 58, 32, 102, 101, 116, 99, 104, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 32, 102, 101, 116, 99, 104, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 138, 1, 1, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 166, 1, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 102, 105, 114, 115, 116, 32, 115, 101, 103, 109, 101, 110, 116, 32, 109, 61, 32, 112, 97, 103, 101, 95, 105, 100, 61, 0, 0, 0, 0, 0, 0, 0, 216, 1, 1, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 240, 1, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 44, 32, 112, 97, 103, 101, 95, 105, 100, 61, 32, 112, 97, 103, 101, 115, 95, 114, 101, 115, 117, 108, 116, 61, 150, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 32, 2, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 42, 2, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 112, 111, 107, 101, 32, 109, 61, 32, 111, 61, 32, 122, 61, 32, 112, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 0, 104, 2, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 82, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 119, 2, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 122, 2, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 125, 2, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 105, 110, 118, 111, 107, 101, 32, 32, 105, 110, 118, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 32, 111, 109, 101, 103, 97, 95, 56, 61, 0, 224, 2, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 239, 2, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 254, 2, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 100, 111, 110, 101, 32, 119, 105, 116, 104, 32, 99, 104, 105, 108, 100, 32, 86, 77, 44, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 0, 0, 0, 0, 0, 0, 56, 3, 1, 0, 0, 0, 0, 0, 42, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 73, 110, 118, 97, 108, 105, 100, 32, 112, 97, 121, 108, 111, 97, 100, 32, 108, 101, 110, 103, 116, 104, 58, 32, 101, 120, 112, 101, 99, 116, 101, 100, 32, 52, 52, 44, 32, 103, 111, 116, 32, 0, 0, 0, 0, 0, 0, 0, 120, 3, 1, 0, 0, 0, 0, 0, 49, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 115, 111, 108, 105, 99, 105, 116, 32, 99, 111, 100, 101, 95, 104, 97, 115, 104, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 111, 100, 101, 95, 108, 101, 110, 103, 116, 104, 61, 0, 192, 3, 1, 0, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 226, 3, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 106, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 108, 0, 0, 0, 0, 0, 0, 0, 114, 0, 0, 0, 0, 0, 0, 0, 122, 0, 0, 0, 0, 0, 0, 0, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 115, 117, 99, 99, 101, 115, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 119, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 111, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 115, 116, 97, 99, 107, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 119, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 111, 95, 98, 121, 116, 101, 115]
// RW data = [75, 89, 134, 56, 214, 197, 109, 52]
// Instructions = 2470
// Code size = 7736 bytes

      :                          @0
     0: 28 b8 00 00 00           jump @15
      :                          @1
     5: 28 a2 0f 00 00           jump @194
      :                          @2
    10: 28 48 12                 jump @258
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 80 89 34                 a2 = u32 [a1 + 0x34]
    24: 84 9a 10                 a3 = a2 & 0x10
    27: 52 0a 14                 jump @6 if a3 != 0
      :                          @4
    30: 84 99 20                 a2 = a2 & 0x20
    33: 52 09 3e                 jump @9 if a2 != 0
      :                          @5
    36: 82 10 80 00              ra = u64 [sp + 0x80]
    40: 95 11 88 00              sp = sp + 0x88
    44: 28 e1 17                 jump @398
      :                          @6
    47: 82 7b                    a4 = u64 [a0]
    49: 33 09 81 00              a2 = 0x81
    53: 95 17 7f                 a0 = sp + 0x7f
    56: 33 02 57                 t0 = 0x57
    59: 01                       fallthrough
      :                          @7
    60: 64 9c                    a5 = a2
    62: 98 ba 04                 a3 = a4 >> 0x4
    65: 84 bb 0f                 a4 = a4 & 0xf
    68: 88 b3 0a                 t1 = a4 <u 0xa
    71: 33 09 30                 a2 = 0x30
    74: da 32 09                 a2 = t0 if t1 == 0
    77: be b9 09                 i32 a2 = a2 + a4
    80: 78 79                    u8 [a0] = a2
    82: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
    85: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
    88: 64 ab                    a4 = a3
    90: 52 0a e2                 jump @7 if a3 != 0
      :                          @8
    93: 28 30                    jump @11
      :                          @9
    95: 82 7b                    a4 = u64 [a0]
    97: 33 09 81 00              a2 = 0x81
   101: 95 17 7f                 a0 = sp + 0x7f
   104: 33 02 37                 t0 = 0x37
   107: 01                       fallthrough
      :                          @10
   108: 64 9c                    a5 = a2
   110: 98 ba 04                 a3 = a4 >> 0x4
   113: 84 bb 0f                 a4 = a4 & 0xf
   116: 88 b3 0a                 t1 = a4 <u 0xa
   119: 33 09 30                 a2 = 0x30
   122: da 32 09                 a2 = t0 if t1 == 0
   125: be b9 09                 i32 a2 = a2 + a4
   128: 78 79                    u8 [a0] = a2
   130: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   133: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   136: 64 ab                    a4 = a3
   138: 52 0a e2                 jump @10 if a3 != 0
      :                          @11
   141: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   144: 56 27 80 00 27           jump @14 if a0 >u 128
      :                          @12
   149: 9a 9b 81 00              a4 = 0x81 - a2
   153: 64 1a                    a3 = sp
   155: c8 7a 0a                 a3 = a3 + a0
   158: 33 09 02                 a2 = 0x2
   161: 64 87                    a0 = a1
   163: 33 08 40 04 01           a1 = 0x10440
   168: 50 10 04 91 18           ra = 4, jump @408
      :                          @13 [@dyn 2]
   173: 82 10 80 00              ra = u64 [sp + 0x80]
   177: 95 11 88 00              sp = sp + 0x88
   181: 32 00                    ret
      :                          @14
   183: 00                       trap
      :                          @15 [export #0: 'refine']
   184: 95 11 08 f8              sp = sp + 0xfffffffffffff808
   188: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
   192: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
   196: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
   200: 95 11 08 b5 fe           sp = sp + 0xfffffffffffeb508
   205: 64 86                    s1 = a1
   207: 33 0c 00 00 01           a5 = 0x10000
   212: 53 16 04 43              jump @24 if s1 <u 4
      :                          @16
   216: 7d 78                    a1 = i8 [a0]
   218: 33 05 01                 s0 = 0x1
   221: 59 08 37                 jump @23 if a1 >=s 0
      :                          @17
   224: 84 89 ff 00              a2 = a1 & 0xff
   228: 33 05 02                 s0 = 0x2
   231: 53 29 c0 00 2d           jump @23 if a2 <u 192
      :                          @18
   236: 33 05 03                 s0 = 0x3
   239: 53 29 e0 00 25           jump @23 if a2 <u 224
      :                          @19
   244: 33 05 04                 s0 = 0x4
   247: 53 29 f0 00 1d           jump @23 if a2 <u 240
      :                          @20
   252: 33 05 05                 s0 = 0x5
   255: 53 29 f8 00 15           jump @23 if a2 <u 248
      :                          @21
   260: 33 05 06                 s0 = 0x6
   263: 53 29 fc 00 0d           jump @23 if a2 <u 252
      :                          @22
   268: 88 98 fe 00              a1 = a2 <u 0xfe
   272: 9a 85 08                 s0 = 0x8 - a1
   275: 01                       fallthrough
      :                          @23
   276: ae 56 07                 jump @25 if s1 >=u s0
      :                          @24
   279: 33 05                    s0 = 0
   281: 28 5f                    jump @36
      :                          @25
   283: 64 58                    a1 = s0
   285: 7b 17 78                 u64 [sp + 0x78] = a0
   288: 50 10 06 7a 1c           ra = 6, jump @498
      :                          @26 [@dyn 3]
   293: aa 56 4b                 jump @35 if s1 == s0
      :                          @27
   296: 82 17 78                 a0 = u64 [sp + 0x78]
   299: c8 57 07                 a0 = a0 + s0
   302: 7d 78                    a1 = i8 [a0]
   304: c9 56 05                 s0 = s1 - s0
   307: 33 06 01                 s1 = 0x1
   310: 59 08 37                 jump @34 if a1 >=s 0
      :                          @28
   313: 84 89 ff 00              a2 = a1 & 0xff
   317: 33 06 02                 s1 = 0x2
   320: 53 29 c0 00 2d           jump @34 if a2 <u 192
      :                          @29
   325: 33 06 03                 s1 = 0x3
   328: 53 29 e0 00 25           jump @34 if a2 <u 224
      :                          @30
   333: 33 06 04                 s1 = 0x4
   336: 53 29 f0 00 1d           jump @34 if a2 <u 240
      :                          @31
   341: 33 06 05                 s1 = 0x5
   344: 53 29 f8 00 15           jump @34 if a2 <u 248
      :                          @32
   349: 33 06 06                 s1 = 0x6
   352: 53 29 fc 00 0d           jump @34 if a2 <u 252
      :                          @33
   357: 88 98 fe 00              a1 = a2 <u 0xfe
   361: 9a 86 08                 s1 = 0x8 - a1
   364: 01                       fallthrough
      :                          @34
   365: ae 65 29                 jump @37 if s0 >=u s1
      :                          @35
   368: 33 05                    s0 = 0
   370: 33 0c 00 00 01           a5 = 0x10000
   375: 01                       fallthrough
      :                          @36
   376: 64 c7                    a0 = a5
   378: 64 58                    a1 = s0
   380: 33 09 f8 4a 01           a2 = 0x14af8
   385: c8 91 01                 sp = sp + a2
   388: 82 10 f0 07              ra = u64 [sp + 0x7f0]
   392: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
   396: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
   400: 95 11 f8 07              sp = sp + 0x7f8
   404: 32 00                    ret
      :                          @37
   406: 64 68                    a1 = s1
   408: 7b 17 78                 u64 [sp + 0x78] = a0
   411: 50 10 08 ff 1b           ra = 8, jump @498
      :                          @38 [@dyn 4]
   416: 7b 17 70                 u64 [sp + 0x70] = a0
   419: 82 17 78                 a0 = u64 [sp + 0x78]
   422: c8 67 07                 a0 = a0 + s1
   425: 7b 17 78                 u64 [sp + 0x78] = a0
   428: ab 65 0b                 jump @40 if s0 != s1
      :                          @39
   431: 33 08                    a1 = 0
   433: 33 05                    s0 = 0
   435: 33 07                    a0 = 0
   437: 28 56                    jump @50
      :                          @40
   439: 7d 78                    a1 = i8 [a0]
   441: c9 65 06                 s1 = s0 - s1
   444: 33 05 01                 s0 = 0x1
   447: 59 08 37                 jump @47 if a1 >=s 0
      :                          @41
   450: 84 89 ff 00              a2 = a1 & 0xff
   454: 33 05 02                 s0 = 0x2
   457: 53 29 c0 00 2d           jump @47 if a2 <u 192
      :                          @42
   462: 33 05 03                 s0 = 0x3
   465: 53 29 e0 00 25           jump @47 if a2 <u 224
      :                          @43
   470: 33 05 04                 s0 = 0x4
   473: 53 29 f0 00 1d           jump @47 if a2 <u 240
      :                          @44
   478: 33 05 05                 s0 = 0x5
   481: 53 29 f8 00 15           jump @47 if a2 <u 248
      :                          @45
   486: 33 05 06                 s0 = 0x6
   489: 53 29 fc 00 0d           jump @47 if a2 <u 252
      :                          @46
   494: 88 98 fe 00              a1 = a2 <u 0xfe
   498: 9a 85 08                 s0 = 0x8 - a1
   501: 01                       fallthrough
      :                          @47
   502: ac 56 af 0d              jump @192 if s1 <u s0
      :                          @48
   506: 64 58                    a1 = s0
   508: 50 10 0a 9e 1b           ra = 10, jump @498
      :                          @49 [@dyn 5]
   513: e4 56 08                 a1 = maxu(s1, s0)
   516: c9 58 08                 a1 = a1 - s0
   519: ac 78 69 ff              jump @35 if a1 <u a0
      :                          @50
   523: e4 78 08                 a1 = maxu(a1, a0)
   526: c9 78 08                 a1 = a1 - a0
   529: 33 0c 00 00 01           a5 = 0x10000
   534: 53 18 20 01 ff           jump @24 if a1 <u 32
      :                          @51
   539: 95 19 d8 50 01           a2 = sp + 0x150d8
   544: 82 1a 78                 a3 = u64 [sp + 0x78]
   547: c8 a5 06                 s1 = s0 + a3
   550: 7b 17 80 00              u64 [sp + 0x80] = a0
   554: 51 17 2c a6 00           jump @62 if a0 == 44
      :                          @52
   559: 52 17 24 9f 03           jump @91 if a0 != 36
      :                          @53
   564: 7b 16 78                 u64 [sp + 0x78] = s1
   567: 95 17 80 00              a0 = sp + 0x80
   571: 7b 97 00 01              u64 [a2 + 0x100] = a0
   575: 33 07 02                 a0 = 0x2
   578: 7b 97 08 01              u64 [a2 + 0x108] = a0
   582: 33 07 38 00 01           a0 = 0x10038
   587: 7b 17 88 00              u64 [sp + 0x88] = a0
   591: 49 21 90 00 01           u64 [sp + 144] = 0x1
   596: 49 21 a8 00              u64 [sp + 168] = 0
   600: 95 18 d8 51 01           a1 = sp + 0x151d8
   605: 7b 18 98 00              u64 [sp + 0x98] = a1
   609: 49 21 a0 00 01           u64 [sp + 160] = 0x1
   614: 95 17 d0 40 01           a0 = sp + 0x140d0
   619: 95 18 88 00              a1 = sp + 0x88
   623: 50 10 0c 29 12           ra = 12, jump @315
      :                          @54 [@dyn 6]
   628: 95 17 88 40 01           a0 = sp + 0x14088
   633: 82 75 50                 s0 = u64 [a0 + 0x50]
   636: 82 7b 58                 a4 = u64 [a0 + 0x58]
   639: 82 76 48                 s1 = u64 [a0 + 0x48]
   642: 33 07 02                 a0 = 0x2
   645: 33 08                    a1 = 0
   647: 33 09                    a2 = 0
   649: 64 5a                    a3 = s0
   651: 33 00 0e                 ra = 0xe
   654: 0a 64                    ecalli 100 // 'log'
   656: 01                       fallthrough
      :                          @55 [@dyn 7]
   657: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
   662: 53 38 00 00 f0 30        jump @61 if a1 <u 4293918720
      :                          @56
   668: 33 07 20 10 03           a0 = 0x31020
   673: 95 77 00 00 10           a0 = a0 + 0x100000
   678: 01                       fallthrough
      :                          @57
   679: 82 78                    a1 = u64 [a0]
   681: c9 87 09                 a2 = a0 - a1
   684: ab 59 1a                 jump @61 if a2 != s0
      :                          @58
   687: c9 68 09                 a2 = a1 - s1
   690: 01                       fallthrough
      :                          @59
   691: 82 7a                    a3 = u64 [a0]
   693: ab 8a f2                 jump @57 if a3 != a1
      :                          @60
   696: 7b 79                    u64 [a0] = a2
   698: 33 0b                    a4 = 0
   700: 82 15 80 00              s0 = u64 [sp + 0x80]
   704: 82 1c 78                 a5 = u64 [sp + 0x78]
   707: 28 b5 fe                 jump @36
      :                          @61
   710: 82 15 80 00              s0 = u64 [sp + 0x80]
   714: 82 1c 78                 a5 = u64 [sp + 0x78]
   717: 28 ab fe                 jump @36
      :                          @62
   720: 80 65 20                 s0 = u32 [s1 + 0x20]
   723: 80 67 24                 a0 = u32 [s1 + 0x24]
   726: 7b 17 78                 u64 [sp + 0x78] = a0
   729: 80 67 28                 a0 = u32 [s1 + 0x28]
   732: 7b 17 68                 u64 [sp + 0x68] = a0
   735: 95 17 88 00              a0 = sp + 0x88
   739: 33 09 00 40 01           a2 = 0x14000
   744: 33 08                    a1 = 0
   746: 50 10 10 c4 14           ra = 16, jump @383
      :                          @63 [@dyn 8]
   751: 82 17 70                 a0 = u64 [sp + 0x70]
   754: 97 77 20                 a0 = a0 << 0x20
   757: 98 77 20                 a0 = a0 >> 0x20
   760: 95 19 88 00              a2 = sp + 0x88
   764: 33 0b 00 40 01           a4 = 0x14000
   769: 64 68                    a1 = s1
   771: 33 0a                    a3 = 0
   773: 33 00 12                 ra = 0x12
   776: 0a 06                    ecalli 6 // 'historical_lookup'
   778: 01                       fallthrough
      :                          @64 [@dyn 9]
   779: 95 78 01                 a1 = a0 + 0x1
   782: 53 18 04 62 fe           jump @35 if a1 <u 4
      :                          @65
   787: 95 78 fd                 a1 = a0 + 0xfffffffffffffffd
   790: 53 18 03 5a fe           jump @35 if a1 <u 3
      :                          @66
   795: 84 78 fe                 a1 = a0 & 0xfffffffffffffffe
   798: 51 18 06 52 fe           jump @35 if a1 == 6
      :                          @67
   803: 95 78 f8                 a1 = a0 + 0xfffffffffffffff8
   806: 53 18 03 4a fe           jump @35 if a1 <u 3
      :                          @68
   811: 7c 18 8a 00              a1 = u8 [sp + 0x8a]
   815: 7c 19 89 00              a2 = u8 [sp + 0x89]
   819: 7c 1a 88 00              a3 = u8 [sp + 0x88]
   823: 97 88 10                 a1 = a1 << 0x10
   826: 97 99 08                 a2 = a2 << 0x8
   829: d4 98 08                 a1 = a1 | a2
   832: d4 a8 08                 a1 = a1 | a3
   835: 95 79 f5                 a2 = a0 + 0xfffffffffffffff5
   838: ac 89 2a fe              jump @35 if a2 <u a1
      :                          @69
   842: 7c 17 8d 00              a0 = u8 [sp + 0x8d]
   846: 7c 1a 8c 00              a3 = u8 [sp + 0x8c]
   850: 7c 1b 8b 00              a4 = u8 [sp + 0x8b]
   854: 97 77 10                 a0 = a0 << 0x10
   857: 97 aa 08                 a3 = a3 << 0x8
   860: d4 a7 07                 a0 = a0 | a3
   863: d4 b7 07                 a0 = a0 | a4
   866: c9 89 09                 a2 = a2 - a1
   869: ac 79 0b fe              jump @35 if a2 <u a0
      :                          @70
   873: c9 79 06                 s1 = a2 - a0
   876: 53 16 04 04 fe           jump @35 if s1 <u 4
      :                          @71
   881: 95 12 93 00              t0 = sp + 0x93
   885: c8 28 03                 t1 = a1 + t0
   888: c8 37 09                 a2 = a0 + t1
   891: 7c 9c 03                 a5 = u8 [a2 + 0x3]
   894: 7b 15 08                 u64 [sp + 0x8] = s0
   897: 7c 95 02                 s0 = u8 [a2 + 0x2]
   900: 7c 9b                    a4 = u8 [a2]
   902: 7c 9a 01                 a3 = u8 [a2 + 0x1]
   905: 97 cc 10                 a5 = a5 << 0x10
   908: 97 55 08                 s0 = s0 << 0x8
   911: d4 5c 0c                 a5 = a5 | s0
   914: d4 ca 0a                 a3 = a3 | a5
   917: 97 aa 08                 a3 = a3 << 0x8
   920: d4 ba 0c                 a5 = a3 | a4
   923: 95 66 fc                 s1 = s1 + 0xfffffffffffffffc
   926: ac c6 d2 fd              jump @35 if s1 <u a5
      :                          @72
   930: 7c 1a 8f 00              a3 = u8 [sp + 0x8f]
   934: 7c 1b 8e 00              a4 = u8 [sp + 0x8e]
   938: 97 aa 08                 a3 = a3 << 0x8
   941: 7c 16 92 00              s1 = u8 [sp + 0x92]
   945: 7c 15 91 00              s0 = u8 [sp + 0x91]
   949: d4 ba 0a                 a3 = a3 | a4
   952: 7c 1b 90 00              a4 = u8 [sp + 0x90]
   956: 97 66 10                 s1 = s1 << 0x10
   959: 97 55 08                 s0 = s0 << 0x8
   962: d4 65 05                 s0 = s0 | s1
   965: d4 5b 0b                 a4 = a4 | s0
   968: 33 04 88 40 01           t2 = 0x14088
   973: c8 41 06                 s1 = sp + t2
   976: 7b 6a                    u64 [s1] = a3
   978: 7b 6b 08                 u64 [s1 + 0x8] = a4
   981: 7b 62 10                 u64 [s1 + 0x10] = t0
   984: 7b 68 18                 u64 [s1 + 0x18] = a1
   987: 7b 63 20                 u64 [s1 + 0x20] = t1
   990: 7b 67 28                 u64 [s1 + 0x28] = a0
   993: 95 99 04                 a2 = a2 + 0x4
   996: 7b 69 30                 u64 [s1 + 0x30] = a2
   999: 49 11 70 ff ff ef        u64 [sp + 112] = 0xffffffffffefffff
  1005: 7b 6c 38                 u64 [s1 + 0x38] = a5
  1008: 7b 66 48                 u64 [s1 + 0x48] = s1
  1011: 95 17 90 40 01           a0 = sp + 0x14090
  1016: 7b 67 58                 u64 [s1 + 0x58] = a0
  1019: 95 17 98 40 01           a0 = sp + 0x14098
  1024: 7b 67 68                 u64 [s1 + 0x68] = a0
  1027: 95 17 a0 40 01           a0 = sp + 0x140a0
  1032: 7b 67 78                 u64 [s1 + 0x78] = a0
  1035: 95 17 a8 40 01           a0 = sp + 0x140a8
  1040: 7b 67 88 00              u64 [s1 + 0x88] = a0
  1044: 95 17 b0 40 01           a0 = sp + 0x140b0
  1049: 7b 67 98 00              u64 [s1 + 0x98] = a0
  1053: 95 17 b8 40 01           a0 = sp + 0x140b8
  1058: 7b 67 a8 00              u64 [s1 + 0xa8] = a0
  1062: 95 17 c0 40 01           a0 = sp + 0x140c0
  1067: 7b 67 b8 00              u64 [s1 + 0xb8] = a0
  1071: 33 07 c8 00 01           a0 = 0x100c8
  1076: 95 15 d8 50 01           s0 = sp + 0x150d8
  1081: 7b 57 00 01              u64 [s0 + 0x100] = a0
  1085: 95 17 d0 40 01           a0 = sp + 0x140d0
  1090: 7b 57 10 01              u64 [s0 + 0x110] = a0
  1094: 49 25 08 01 08           u64 [s0 + 264] = 0x8
  1099: 49 25 18 01 08           u64 [s0 + 280] = 0x8
  1104: 33 07 02                 a0 = 0x2
  1107: 7b 67 50                 u64 [s1 + 0x50] = a0
  1110: 7b 67 60                 u64 [s1 + 0x60] = a0
  1113: 7b 67 70                 u64 [s1 + 0x70] = a0
  1116: 7b 67 80 00              u64 [s1 + 0x80] = a0
  1120: 7b 67 90 00              u64 [s1 + 0x90] = a0
  1124: 7b 67 a0 00              u64 [s1 + 0xa0] = a0
  1128: 7b 67 b0 00              u64 [s1 + 0xb0] = a0
  1132: 7b 17 60                 u64 [sp + 0x60] = a0
  1135: 7b 67 c0 00              u64 [s1 + 0xc0] = a0
  1139: 49 25 20 01              u64 [s0 + 288] = 0
  1143: 95 17 00 51 01           a0 = sp + 0x15100
  1148: 95 18 d8 51 01           a1 = sp + 0x151d8
  1153: 50 10 14 17 10           ra = 20, jump @315
      :                          @73 [@dyn 10]
  1158: 82 56 30                 s1 = u64 [s0 + 0x30]
  1161: 82 5b 38                 a4 = u64 [s0 + 0x38]
  1164: 82 55 28                 s0 = u64 [s0 + 0x28]
  1167: 33 07 02                 a0 = 0x2
  1170: 33 08                    a1 = 0
  1172: 33 09                    a2 = 0
  1174: 64 6a                    a3 = s1
  1176: 33 00 16                 ra = 0x16
  1179: 0a 64                    ecalli 100 // 'log'
  1181: 01                       fallthrough
      :                          @74 [@dyn 11]
  1182: 82 17 70                 a0 = u64 [sp + 0x70]
  1185: c8 57 07                 a0 = a0 + s0
  1188: 53 37 00 00 f0 25        jump @80 if a0 <u 4293918720
      :                          @75
  1194: 33 07 20 10 03           a0 = 0x31020
  1199: 95 77 00 00 10           a0 = a0 + 0x100000
  1204: 01                       fallthrough
      :                          @76
  1205: 82 78                    a1 = u64 [a0]
  1207: c9 87 09                 a2 = a0 - a1
  1210: ab 69 0f                 jump @80 if a2 != s1
      :                          @77
  1213: c9 58 09                 a2 = a1 - s0
  1216: 01                       fallthrough
      :                          @78
  1217: 82 7a                    a3 = u64 [a0]
  1219: ab 8a f2                 jump @76 if a3 != a1
      :                          @79
  1222: 7b 79                    u64 [a0] = a2
  1224: 01                       fallthrough
      :                          @80
  1225: 95 15 88 40 01           s0 = sp + 0x14088
  1230: 82 57 30                 a0 = u64 [s0 + 0x30]
  1233: 82 58 38                 a1 = u64 [s0 + 0x38]
  1236: 33 09                    a2 = 0
  1238: 0a 08                    ecalli 8 // 'machine'
  1240: 7b 57 40                 u64 [s0 + 0x40] = a0
  1243: 95 17 c8 40 01           a0 = sp + 0x140c8
  1248: 95 18 d8 50 01           a1 = sp + 0x150d8
  1253: 7b 87 28                 u64 [a1 + 0x28] = a0
  1256: 82 17 60                 a0 = u64 [sp + 0x60]
  1259: 7b 87 30                 u64 [a1 + 0x30] = a0
  1262: 33 07 68 01 01           a0 = 0x10168
  1267: 7b 57 48                 u64 [s0 + 0x48] = a0
  1270: 95 17 00 51 01           a0 = sp + 0x15100
  1275: 7b 57 58                 u64 [s0 + 0x58] = a0
  1278: 49 15 50 01              u64 [s0 + 80] = 0x1
  1282: 49 15 60 01              u64 [s0 + 96] = 0x1
  1286: 14 07 ff ff ff ff 00 00 00 00 a0 = 0xffffffff
  1296: 7b 17 60                 u64 [sp + 0x60] = a0
  1299: 49 15 68                 u64 [s0 + 104] = 0
  1302: 95 17 d8 51 01           a0 = sp + 0x151d8
  1307: 95 18 d0 40 01           a1 = sp + 0x140d0
  1312: 50 10 18 78 0f           ra = 24, jump @315
      :                          @81 [@dyn 12]
  1317: 95 17 d8 50 01           a0 = sp + 0x150d8
  1322: 82 76 08 01              s1 = u64 [a0 + 0x108]
  1326: 82 7b 10 01              a4 = u64 [a0 + 0x110]
  1330: 82 75 00 01              s0 = u64 [a0 + 0x100]
  1334: 33 07 02                 a0 = 0x2
  1337: 33 08                    a1 = 0
  1339: 33 09                    a2 = 0
  1341: 64 6a                    a3 = s1
  1343: 33 00 1a                 ra = 0x1a
  1346: 0a 64                    ecalli 100 // 'log'
  1348: 01                       fallthrough
      :                          @82 [@dyn 13]
  1349: 82 17 70                 a0 = u64 [sp + 0x70]
  1352: c8 57 07                 a0 = a0 + s0
  1355: 53 37 00 00 f0 25        jump @88 if a0 <u 4293918720
      :                          @83
  1361: 33 07 20 10 03           a0 = 0x31020
  1366: 95 77 00 00 10           a0 = a0 + 0x100000
  1371: 01                       fallthrough
      :                          @84
  1372: 82 78                    a1 = u64 [a0]
  1374: c9 87 09                 a2 = a0 - a1
  1377: ab 69 0f                 jump @88 if a2 != s1
      :                          @85
  1380: c9 58 09                 a2 = a1 - s0
  1383: 01                       fallthrough
      :                          @86
  1384: 82 7a                    a3 = u64 [a0]
  1386: ab 8a f2                 jump @84 if a3 != a1
      :                          @87
  1389: 7b 79                    u64 [a0] = a2
  1391: 01                       fallthrough
      :                          @88
  1392: 33 05 ff 0f              s0 = 0xfff
  1396: 95 18 88 40 01           a1 = sp + 0x14088
  1401: 82 87                    a0 = u64 [a1]
  1403: 7b 17 48                 u64 [sp + 0x48] = a0
  1406: 82 87 08                 a0 = u64 [a1 + 0x8]
  1409: 7b 17 40                 u64 [sp + 0x40] = a0
  1412: 82 87 10                 a0 = u64 [a1 + 0x10]
  1415: 7b 17 38                 u64 [sp + 0x38] = a0
  1418: 82 89 18                 a2 = u64 [a1 + 0x18]
  1421: 82 87 20                 a0 = u64 [a1 + 0x20]
  1424: 7b 17 30                 u64 [sp + 0x30] = a0
  1427: 82 87 40                 a0 = u64 [a1 + 0x40]
  1430: 82 88 28                 a1 = u64 [a1 + 0x28]
  1433: 7b 18 50                 u64 [sp + 0x50] = a1
  1436: 7b 19 58                 u64 [sp + 0x58] = a2
  1439: c8 59 09                 a2 = a2 + s0
  1442: 98 99 0c                 a2 = a2 >> 0xc
  1445: 82 16 60                 s1 = u64 [sp + 0x60]
  1448: d2 76 06                 s1 = s1 & a0
  1451: 33 08 10                 a1 = 0x10
  1454: 33 0a 04                 a3 = 0x4
  1457: 64 67                    a0 = s1
  1459: 0a 0b                    ecalli 11 // 'pages'
  1461: 01                       fallthrough
      :                          @89
  1462: 51 07 af 00              jump @101 if a0 == 0
      :                          @90
  1466: 33 0a 2e 06 01           a3 = 0x1062e
  1471: 33 07 02                 a0 = 0x2
  1474: 33 0b 3e                 a4 = 0x3e
  1477: 33 08                    a1 = 0
  1479: 33 09                    a2 = 0
  1481: 0a 64                    ecalli 100 // 'log'
  1483: 28 79 01                 jump @114
      :                          @91
  1486: 95 17 80 00              a0 = sp + 0x80
  1490: 7b 97 00 01              u64 [a2 + 0x100] = a0
  1494: 33 07 02                 a0 = 0x2
  1497: 7b 97 08 01              u64 [a2 + 0x108] = a0
  1501: 33 07 b0 03 01           a0 = 0x103b0
  1506: 7b 17 88 00              u64 [sp + 0x88] = a0
  1510: 49 21 90 00 01           u64 [sp + 144] = 0x1
  1515: 49 21 a8 00              u64 [sp + 168] = 0
  1519: 95 18 d8 51 01           a1 = sp + 0x151d8
  1524: 7b 18 98 00              u64 [sp + 0x98] = a1
  1528: 49 21 a0 00 01           u64 [sp + 160] = 0x1
  1533: 95 17 d0 40 01           a0 = sp + 0x140d0
  1538: 95 18 88 00              a1 = sp + 0x88
  1542: 50 10 1c 92 0e           ra = 28, jump @315
      :                          @92 [@dyn 14]
  1547: 95 17 88 40 01           a0 = sp + 0x14088
  1552: 82 7a 50                 a3 = u64 [a0 + 0x50]
  1555: 82 7b 58                 a4 = u64 [a0 + 0x58]
  1558: 82 76 48                 s1 = u64 [a0 + 0x48]
  1561: 33 07 02                 a0 = 0x2
  1564: 33 08                    a1 = 0
  1566: 33 09                    a2 = 0
  1568: 7b 1a 78                 u64 [sp + 0x78] = a3
  1571: 33 00 1e                 ra = 0x1e
  1574: 0a 64                    ecalli 100 // 'log'
  1576: 01                       fallthrough
      :                          @93 [@dyn 15]
  1577: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
  1582: 33 0c 00 00 01           a5 = 0x10000
  1587: 53 38 00 00 f0 e4 fa     jump @24 if a1 <u 4293918720
      :                          @94
  1594: 33 07 20 10 03           a0 = 0x31020
  1599: 95 77 00 00 10           a0 = a0 + 0x100000
  1604: 82 15 78                 s0 = u64 [sp + 0x78]
  1607: 01                       fallthrough
      :                          @95
  1608: 82 78                    a1 = u64 [a0]
  1610: c9 87 09                 a2 = a0 - a1
  1613: ab 59 ca fa              jump @24 if a2 != s0
      :                          @96
  1617: c9 68 09                 a2 = a1 - s1
  1620: 01                       fallthrough
      :                          @97
  1621: 82 7a                    a3 = u64 [a0]
  1623: ab 8a f1                 jump @95 if a3 != a1
      :                          @98
  1626: 7b 79                    u64 [a0] = a2
  1628: 33 0b                    a4 = 0
  1630: 01                       fallthrough
      :                          @99
  1631: ab 8a e9                 jump @95 if a3 != a1
      :                          @100
  1634: 28 b5 fa                 jump @24
      :                          @101
  1637: 82 17 50                 a0 = u64 [sp + 0x50]
  1640: 95 77 ff 0f              a0 = a0 + 0xfff
  1644: 98 77 0c                 a0 = a0 >> 0xc
  1647: 82 19 48                 a2 = u64 [sp + 0x48]
  1650: c8 79 09                 a2 = a2 + a0
  1653: 82 18 58                 a1 = u64 [sp + 0x58]
  1656: 95 87 ff ff 00           a0 = a1 + 0xffff
  1661: 84 77 00 00 ff           a0 = a0 & 0xffffffffffff0000
  1666: 95 77 00 00 02           a0 = a0 + 0x20000
  1671: 7b 17 60                 u64 [sp + 0x60] = a0
  1674: 98 78 0c                 a1 = a0 >> 0xc
  1677: 33 0a 04                 a3 = 0x4
  1680: 64 67                    a0 = s1
  1682: 0a 0b                    ecalli 11 // 'pages'
  1684: 01                       fallthrough
      :                          @102
  1685: 51 07 17                 jump @104 if a0 == 0
      :                          @103
  1688: 33 0a f0 05 01           a3 = 0x105f0
  1693: 33 07 02                 a0 = 0x2
  1696: 33 0b 3e                 a4 = 0x3e
  1699: 33 08                    a1 = 0
  1701: 33 09                    a2 = 0
  1703: 0a 64                    ecalli 100 // 'log'
  1705: 28 9b 00                 jump @114
      :                          @104
  1708: 82 17 40                 a0 = u64 [sp + 0x40]
  1711: 95 75 ff 0f              s0 = a0 + 0xfff
  1715: 98 59 0c                 a2 = s0 >> 0xc
  1718: 84 57 00 f0              a0 = s0 & 0xfffffffffffff000
  1722: 14 08 00 00 fe fe 00 00 00 00 a1 = 0xfefe0000
  1732: c9 78 08                 a1 = a1 - a0
  1735: 98 88 0c                 a1 = a1 >> 0xc
  1738: 33 0a 04                 a3 = 0x4
  1741: 64 67                    a0 = s1
  1743: 0a 0b                    ecalli 11 // 'pages'
  1745: 01                       fallthrough
      :                          @105
  1746: 51 07 16                 jump @107 if a0 == 0
      :                          @106
  1749: 33 0a b4 05 01           a3 = 0x105b4
  1754: 33 07 02                 a0 = 0x2
  1757: 33 0b 3c                 a4 = 0x3c
  1760: 33 08                    a1 = 0
  1762: 33 09                    a2 = 0
  1764: 0a 64                    ecalli 100 // 'log'
  1766: 28 5e                    jump @114
      :                          @107
  1768: 33 09 00 00 01           a2 = 0x10000
  1773: 64 67                    a0 = s1
  1775: 82 18 38                 a1 = u64 [sp + 0x38]
  1778: 82 1a 58                 a3 = u64 [sp + 0x58]
  1781: 0a 0a                    ecalli 10 // 'poke'
  1783: 01                       fallthrough
      :                          @108
  1784: 51 07 16                 jump @110 if a0 == 0
      :                          @109
  1787: 33 0a 76 05 01           a3 = 0x10576
  1792: 33 07 02                 a0 = 0x2
  1795: 33 0b 3e                 a4 = 0x3e
  1798: 33 08                    a1 = 0
  1800: 33 09                    a2 = 0
  1802: 0a 64                    ecalli 100 // 'log'
  1804: 28 38                    jump @114
      :                          @110
  1806: 64 67                    a0 = s1
  1808: 82 18 30                 a1 = u64 [sp + 0x30]
  1811: 82 19 60                 a2 = u64 [sp + 0x60]
  1814: 82 1a 50                 a3 = u64 [sp + 0x50]
  1817: 0a 0a                    ecalli 10 // 'poke'
  1819: 01                       fallthrough
      :                          @111
  1820: 51 07 16                 jump @113 if a0 == 0
      :                          @112
  1823: 33 0a 38 05 01           a3 = 0x10538
  1828: 33 07 02                 a0 = 0x2
  1831: 33 0b 3e                 a4 = 0x3e
  1834: 33 08                    a1 = 0
  1836: 33 09                    a2 = 0
  1838: 0a 64                    ecalli 100 // 'log'
  1840: 28 14                    jump @114
      :                          @113
  1842: 33 0a 0a 05 01           a3 = 0x1050a
  1847: 33 07 02                 a0 = 0x2
  1850: 33 0b 2e                 a4 = 0x2e
  1853: 33 08                    a1 = 0
  1855: 33 09                    a2 = 0
  1857: 0a 64                    ecalli 100 // 'log'
  1859: 01                       fallthrough
      :                          @114
  1860: 33 09 08 10              a2 = 0x1008
  1864: 95 17 d0 40 01           a0 = sp + 0x140d0
  1869: 33 08                    a1 = 0
  1871: 7b 19 50                 u64 [sp + 0x50] = a2
  1874: 50 10 20 5c 10           ra = 32, jump @383
      :                          @115 [@dyn 16]
  1879: 49 11 18                 u64 [sp + 24] = 0
  1882: 95 17 d8 50 01           a0 = sp + 0x150d8
  1887: 49 07                    u64 [a0 + 0] = 0
  1889: 33 05 20 10 03           s0 = 0x31020
  1894: 33 0b 00 00 10           a4 = 0x100000
  1899: 33 07 78 01 01           a0 = 0x10178
  1904: 7b 17 40                 u64 [sp + 0x40] = a0
  1907: 33 07 02                 a0 = 0x2
  1910: 7b 17 60                 u64 [sp + 0x60] = a0
  1913: 33 07 b8 01 01           a0 = 0x101b8
  1918: 7b 17 38                 u64 [sp + 0x38] = a0
  1921: 33 07 00 02 01           a0 = 0x10200
  1926: 7b 17 10                 u64 [sp + 0x10] = a0
  1929: 33 07 38 02 01           a0 = 0x10238
  1934: 7b 17 30                 u64 [sp + 0x30] = a0
  1937: 33 07 00 00 01           a0 = 0x10000
  1942: 7b 17 28                 u64 [sp + 0x28] = a0
  1945: 33 07 90 02 01           a0 = 0x10290
  1950: 7b 17 20                 u64 [sp + 0x20] = a0
  1953: 7b 15 48                 u64 [sp + 0x48] = s0
  1956: c8 b5 05                 s0 = s0 + a4
  1959: 28 14                    jump @117
      :                          @116
  1961: 95 18 d8 50 01           a1 = sp + 0x150d8
  1966: 82 87                    a0 = u64 [a1]
  1968: 95 77 01                 a0 = a0 + 0x1
  1971: 7b 87                    u64 [a1] = a0
  1973: 33 0b 00 00 10           a4 = 0x100000
  1978: 01                       fallthrough
      :                          @117
  1979: 82 58                    a1 = u64 [s0]
  1981: 95 87 12                 a0 = a1 + 0x12
  1984: ac 87 e6 07              jump @193 if a0 <u a1
      :                          @118
  1988: 95 79 01                 a2 = a0 + 0x1
  1991: 88 9a 01                 a3 = a2 <u 0x1
  1994: d8 9b 09                 a2 = a4 <u a2
  1997: d4 a9 09                 a2 = a2 | a3
  2000: 52 09 d6 07              jump @193 if a2 != 0
      :                          @119
  2004: 82 59                    a2 = u64 [s0]
  2006: ab 89 e5                 jump @117 if a2 != a1
      :                          @120
  2009: 7b 57                    u64 [s0] = a0
  2011: 82 16 48                 s1 = u64 [sp + 0x48]
  2014: c9 76 06                 s1 = s1 - a0
  2017: c8 b6 06                 s1 = s1 + a4
  2020: 33 09 12                 a2 = 0x12
  2023: 64 67                    a0 = s1
  2025: 82 18 40                 a1 = u64 [sp + 0x40]
  2028: 50 10 22 10 0f           ra = 34, jump @365
      :                          @121 [@dyn 17]
  2033: 33 07 02                 a0 = 0x2
  2036: 33 0b 12                 a4 = 0x12
  2039: 33 08                    a1 = 0
  2041: 33 09                    a2 = 0
  2043: 64 6a                    a3 = s1
  2045: 33 00 24                 ra = 0x24
  2048: 0a 64                    ecalli 100 // 'log'
  2050: 01                       fallthrough
      :                          @122 [@dyn 18]
  2051: 82 57                    a0 = u64 [s0]
  2053: c9 75 08                 a1 = s0 - a0
  2056: ab 68 0f                 jump @126 if a1 != s1
      :                          @123
  2059: 95 78 ee                 a1 = a0 + 0xffffffffffffffee
  2062: 01                       fallthrough
      :                          @124
  2063: 82 59                    a2 = u64 [s0]
  2065: ab 79 f2                 jump @122 if a2 != a0
      :                          @125
  2068: 7b 58                    u64 [s0] = a1
  2070: 01                       fallthrough
      :                          @126
  2071: 95 17 d8 50 01           a0 = sp + 0x150d8
  2076: 82 7b                    a4 = u64 [a0]
  2078: 95 17 d0 40 01           a0 = sp + 0x140d0
  2083: 33 0a 06                 a3 = 0x6
  2086: 33 08                    a1 = 0
  2088: 82 19 50                 a2 = u64 [sp + 0x50]
  2091: 33 0c                    a5 = 0
  2093: 0a 01                    ecalli 1 // 'fetch'
  2095: 01                       fallthrough
      :                          @127
  2096: 95 19 d8 50 01           a2 = sp + 0x150d8
  2101: 7b 97 18                 u64 [a2 + 0x18] = a0
  2104: 51 17 ff d7 02           jump @160 if a0 == 4294967295
      :                          @128
  2109: 7b 99 28                 u64 [a2 + 0x28] = a2
  2112: 82 17 60                 a0 = u64 [sp + 0x60]
  2115: 7b 97 30                 u64 [a2 + 0x30] = a0
  2118: 95 18 f0 50 01           a1 = sp + 0x150f0
  2123: 7b 98 38                 u64 [a2 + 0x38] = a1
  2126: 7b 97 40                 u64 [a2 + 0x40] = a0
  2129: 82 17 38                 a0 = u64 [sp + 0x38]
  2132: 7b 97 00 01              u64 [a2 + 0x100] = a0
  2136: 49 29 08 01 02           u64 [a2 + 264] = 0x2
  2141: 49 29 20 01              u64 [a2 + 288] = 0
  2145: 95 18 00 51 01           a1 = sp + 0x15100
  2150: 7b 98 10 01              u64 [a2 + 0x110] = a1
  2154: 49 29 18 01 02           u64 [a2 + 280] = 0x2
  2159: 95 17 98 51 01           a0 = sp + 0x15198
  2164: 95 18 d8 51 01           a1 = sp + 0x151d8
  2169: 50 10 26 1f 0c           ra = 38, jump @315
      :                          @129 [@dyn 19]
  2174: 95 17 d8 50 01           a0 = sp + 0x150d8
  2179: 82 76 c8 00              s1 = u64 [a0 + 0xc8]
  2183: 82 7b d0 00              a4 = u64 [a0 + 0xd0]
  2187: 82 77 c0 00              a0 = u64 [a0 + 0xc0]
  2191: 7b 17 58                 u64 [sp + 0x58] = a0
  2194: 33 07 02                 a0 = 0x2
  2197: 33 08                    a1 = 0
  2199: 33 09                    a2 = 0
  2201: 64 6a                    a3 = s1
  2203: 33 00 28                 ra = 0x28
  2206: 0a 64                    ecalli 100 // 'log'
  2208: 01                       fallthrough
      :                          @130 [@dyn 20]
  2209: 82 1b 58                 a4 = u64 [sp + 0x58]
  2212: 82 17 70                 a0 = u64 [sp + 0x70]
  2215: c8 b7 07                 a0 = a0 + a4
  2218: 53 37 00 00 f0 1a        jump @135 if a0 <u 4293918720
      :                          @131
  2224: 82 57                    a0 = u64 [s0]
  2226: c9 75 08                 a1 = s0 - a0
  2229: ab 68 0f                 jump @135 if a1 != s1
      :                          @132
  2232: c9 b7 08                 a1 = a0 - a4
  2235: 01                       fallthrough
      :                          @133
  2236: 82 59                    a2 = u64 [s0]
  2238: ab 79 f2                 jump @131 if a2 != a0
      :                          @134
  2241: 7b 58                    u64 [s0] = a1
  2243: 01                       fallthrough
      :                          @135
  2244: 95 18 88 40 01           a1 = sp + 0x14088
  2249: 80 87 48                 a0 = u32 [a1 + 0x48]
  2252: 80 88 4c                 a1 = u32 [a1 + 0x4c]
  2255: 95 1a d8 50 01           a3 = sp + 0x150d8
  2260: 82 a9                    a2 = u64 [a3]
  2262: 7b a7 08                 u64 [a3 + 0x8] = a0
  2265: 7b a8 10                 u64 [a3 + 0x10] = a1
  2268: 52 09 a2 00              jump @144 if a2 != 0
      :                          @136
  2272: 95 17 e0 50 01           a0 = sp + 0x150e0
  2277: 7b a7 28                 u64 [a3 + 0x28] = a0
  2280: 82 17 60                 a0 = u64 [sp + 0x60]
  2283: 7b a7 30                 u64 [a3 + 0x30] = a0
  2286: 95 18 e8 50 01           a1 = sp + 0x150e8
  2291: 7b a8 38                 u64 [a3 + 0x38] = a1
  2294: 7b a7 40                 u64 [a3 + 0x40] = a0
  2297: 82 17 10                 a0 = u64 [sp + 0x10]
  2300: 7b a7 00 01              u64 [a3 + 0x100] = a0
  2304: 49 2a 08 01 02           u64 [a3 + 264] = 0x2
  2309: 49 2a 20 01              u64 [a3 + 288] = 0
  2313: 95 18 00 51 01           a1 = sp + 0x15100
  2318: 7b a8 10 01              u64 [a3 + 0x110] = a1
  2322: 49 2a 18 01 02           u64 [a3 + 280] = 0x2
  2327: 95 17 98 51 01           a0 = sp + 0x15198
  2332: 95 18 d8 51 01           a1 = sp + 0x151d8
  2337: 50 10 2a 77 0b           ra = 42, jump @315
      :                          @137 [@dyn 21]
  2342: 95 17 d8 50 01           a0 = sp + 0x150d8
  2347: 82 76 c8 00              s1 = u64 [a0 + 0xc8]
  2351: 82 7b d0 00              a4 = u64 [a0 + 0xd0]
  2355: 82 77 c0 00              a0 = u64 [a0 + 0xc0]
  2359: 7b 17 58                 u64 [sp + 0x58] = a0
  2362: 33 07 02                 a0 = 0x2
  2365: 33 08                    a1 = 0
  2367: 33 09                    a2 = 0
  2369: 64 6a                    a3 = s1
  2371: 33 00 2c                 ra = 0x2c
  2374: 0a 64                    ecalli 100 // 'log'
  2376: 01                       fallthrough
      :                          @138 [@dyn 22]
  2377: 82 1b 58                 a4 = u64 [sp + 0x58]
  2380: 82 17 70                 a0 = u64 [sp + 0x70]
  2383: c8 b7 07                 a0 = a0 + a4
  2386: 53 37 00 00 f0 1a        jump @143 if a0 <u 4293918720
      :                          @139
  2392: 82 57                    a0 = u64 [s0]
  2394: c9 75 08                 a1 = s0 - a0
  2397: ab 68 0f                 jump @143 if a1 != s1
      :                          @140
  2400: c9 b7 08                 a1 = a0 - a4
  2403: 01                       fallthrough
      :                          @141
  2404: 82 59                    a2 = u64 [s0]
  2406: ab 79 f2                 jump @139 if a2 != a0
      :                          @142
  2409: 7b 58                    u64 [s0] = a1
  2411: 01                       fallthrough
      :                          @143
  2412: 95 17 d8 50 01           a0 = sp + 0x150d8
  2417: 82 78 10                 a1 = u64 [a0 + 0x10]
  2420: 82 77 08                 a0 = u64 [a0 + 0x8]
  2423: 97 89 0c                 a2 = a1 << 0xc
  2426: 7b 19 18                 u64 [sp + 0x18] = a2
  2429: 01                       fallthrough
      :                          @144
  2430: 33 09 01                 a2 = 0x1
  2433: 33 0a 04                 a3 = 0x4
  2436: 0a 0b                    ecalli 11 // 'pages'
  2438: 95 19 d8 50 01           a2 = sp + 0x150d8
  2443: 7b 97 20                 u64 [a2 + 0x20] = a0
  2446: 95 17 e0 50 01           a0 = sp + 0x150e0
  2451: 7b 97 00 01              u64 [a2 + 0x100] = a0
  2455: 82 17 60                 a0 = u64 [sp + 0x60]
  2458: 7b 97 08 01              u64 [a2 + 0x108] = a0
  2462: 95 18 e8 50 01           a1 = sp + 0x150e8
  2467: 7b 98 10 01              u64 [a2 + 0x110] = a1
  2471: 7b 97 18 01              u64 [a2 + 0x118] = a0
  2475: 95 18 f8 50 01           a1 = sp + 0x150f8
  2480: 7b 98 20 01              u64 [a2 + 0x120] = a1
  2484: 7b 97 28 01              u64 [a2 + 0x128] = a0
  2488: 82 17 30                 a0 = u64 [sp + 0x30]
  2491: 7b 97 28                 u64 [a2 + 0x28] = a0
  2494: 49 19 30 03              u64 [a2 + 48] = 0x3
  2498: 49 19 48                 u64 [a2 + 72] = 0
  2501: 95 17 d8 51 01           a0 = sp + 0x151d8
  2506: 7b 97 38                 u64 [a2 + 0x38] = a0
  2509: 49 19 40 03              u64 [a2 + 64] = 0x3
  2513: 95 17 98 51 01           a0 = sp + 0x15198
  2518: 95 18 00 51 01           a1 = sp + 0x15100
  2523: 50 10 2e bd 0a           ra = 46, jump @315
      :                          @145 [@dyn 23]
  2528: 95 17 d8 50 01           a0 = sp + 0x150d8
  2533: 82 76 c8 00              s1 = u64 [a0 + 0xc8]
  2537: 82 7b d0 00              a4 = u64 [a0 + 0xd0]
  2541: 82 77 c0 00              a0 = u64 [a0 + 0xc0]
  2545: 7b 17 58                 u64 [sp + 0x58] = a0
  2548: 33 07 02                 a0 = 0x2
  2551: 33 08                    a1 = 0
  2553: 33 09                    a2 = 0
  2555: 64 6a                    a3 = s1
  2557: 33 00 30                 ra = 0x30
  2560: 0a 64                    ecalli 100 // 'log'
  2562: 01                       fallthrough
      :                          @146 [@dyn 24]
  2563: 82 1b 58                 a4 = u64 [sp + 0x58]
  2566: 82 17 70                 a0 = u64 [sp + 0x70]
  2569: c8 b7 07                 a0 = a0 + a4
  2572: 53 37 00 00 f0 1a        jump @151 if a0 <u 4293918720
      :                          @147
  2578: 82 57                    a0 = u64 [s0]
  2580: c9 75 08                 a1 = s0 - a0
  2583: ab 68 0f                 jump @151 if a1 != s1
      :                          @148
  2586: c9 b7 08                 a1 = a0 - a4
  2589: 01                       fallthrough
      :                          @149
  2590: 82 59                    a2 = u64 [s0]
  2592: ab 79 f2                 jump @147 if a2 != a0
      :                          @150
  2595: 7b 58                    u64 [s0] = a1
  2597: 01                       fallthrough
      :                          @151
  2598: 95 1a d8 50 01           a3 = sp + 0x150d8
  2603: 82 a9 10                 a2 = u64 [a3 + 0x10]
  2606: 82 a7 08                 a0 = u64 [a3 + 0x8]
  2609: 95 18 d0 40 01           a1 = sp + 0x140d0
  2614: 7b a8 98 00              u64 [a3 + 0x98] = a1
  2618: 97 99 0c                 a2 = a2 << 0xc
  2621: 7b a9 a0 00              u64 [a3 + 0xa0] = a2
  2625: 33 0a 00 10              a3 = 0x1000
  2629: 95 18 d8 40 01           a1 = sp + 0x140d8
  2634: 0a 0a                    ecalli 10 // 'poke'
  2636: 95 19 d8 50 01           a2 = sp + 0x150d8
  2641: 7b 97 a8 00              u64 [a2 + 0xa8] = a0
  2645: 95 17 e0 50 01           a0 = sp + 0x150e0
  2650: 7b 97 00 01              u64 [a2 + 0x100] = a0
  2654: 82 17 60                 a0 = u64 [sp + 0x60]
  2657: 7b 97 08 01              u64 [a2 + 0x108] = a0
  2661: 95 18 70 51 01           a1 = sp + 0x15170
  2666: 7b 98 10 01              u64 [a2 + 0x110] = a1
  2670: 7b 97 18 01              u64 [a2 + 0x118] = a0
  2674: 95 18 78 51 01           a1 = sp + 0x15178
  2679: 7b 98 20 01              u64 [a2 + 0x120] = a1
  2683: 7b 97 28 01              u64 [a2 + 0x128] = a0
  2687: 82 18 28                 a1 = u64 [sp + 0x28]
  2690: 7b 98 30 01              u64 [a2 + 0x130] = a1
  2694: 7b 97 38 01              u64 [a2 + 0x138] = a0
  2698: 95 18 80 51 01           a1 = sp + 0x15180
  2703: 7b 98 40 01              u64 [a2 + 0x140] = a1
  2707: 7b 97 48 01              u64 [a2 + 0x148] = a0
  2711: 82 17 20                 a0 = u64 [sp + 0x20]
  2714: 7b 97 28                 u64 [a2 + 0x28] = a0
  2717: 49 19 30 05              u64 [a2 + 48] = 0x5
  2721: 49 19 48                 u64 [a2 + 72] = 0
  2724: 95 17 d8 51 01           a0 = sp + 0x151d8
  2729: 7b 97 38                 u64 [a2 + 0x38] = a0
  2732: 49 19 40 05              u64 [a2 + 64] = 0x5
  2736: 95 17 98 51 01           a0 = sp + 0x15198
  2741: 95 18 00 51 01           a1 = sp + 0x15100
  2746: 50 10 32 de 09           ra = 50, jump @315
      :                          @152 [@dyn 25]
  2751: 95 17 d8 50 01           a0 = sp + 0x150d8
  2756: 82 76 c8 00              s1 = u64 [a0 + 0xc8]
  2760: 82 7b d0 00              a4 = u64 [a0 + 0xd0]
  2764: 82 77 c0 00              a0 = u64 [a0 + 0xc0]
  2768: 7b 17 58                 u64 [sp + 0x58] = a0
  2771: 33 07 02                 a0 = 0x2
  2774: 33 08                    a1 = 0
  2776: 33 09                    a2 = 0
  2778: 64 6a                    a3 = s1
  2780: 33 00 34                 ra = 0x34
  2783: 0a 64                    ecalli 100 // 'log'
  2785: 01                       fallthrough
      :                          @153 [@dyn 26]
  2786: 82 1b 58                 a4 = u64 [sp + 0x58]
  2789: 82 17 70                 a0 = u64 [sp + 0x70]
  2792: c8 b7 07                 a0 = a0 + a4
  2795: 53 37 00 00 f0 be fc     jump @116 if a0 <u 4293918720
      :                          @154
  2802: 82 57                    a0 = u64 [s0]
  2804: c9 75 08                 a1 = s0 - a0
  2807: ab 68 b2 fc              jump @116 if a1 != s1
      :                          @155
  2811: c9 b7 08                 a1 = a0 - a4
  2814: 01                       fallthrough
      :                          @156
  2815: 82 59                    a2 = u64 [s0]
  2817: ab 79 f1                 jump @154 if a2 != a0
      :                          @157
  2820: 7b 58                    u64 [s0] = a1
  2822: 33 0a                    a3 = 0
  2824: 01                       fallthrough
      :                          @158
  2825: ab 79 e9                 jump @154 if a2 != a0
      :                          @159
  2828: 28 9d fc                 jump @116
      :                          @160
  2831: 82 97                    a0 = u64 [a2]
  2833: 97 77 0c                 a0 = a0 << 0xc
  2836: 49 19 28 ff ff ff 0f     u64 [a2 + 40] = 0xfffffff
  2843: 14 08 00 00 ff ff 00 00 00 00 a1 = 0xffff0000
  2853: 7b 98 30                 u64 [a2 + 0x30] = a1
  2856: 14 08 00 00 fe fe 00 00 00 00 a1 = 0xfefe0000
  2866: 7b 98 38                 u64 [a2 + 0x38] = a1
  2869: 49 19 40                 u64 [a2 + 64] = 0
  2872: 49 19 48                 u64 [a2 + 72] = 0
  2875: 49 19 50                 u64 [a2 + 80] = 0
  2878: 49 19 58                 u64 [a2 + 88] = 0
  2881: 49 19 60                 u64 [a2 + 96] = 0
  2884: 82 18 18                 a1 = u64 [sp + 0x18]
  2887: 7b 98 68                 u64 [a2 + 0x68] = a1
  2890: 7b 97 70                 u64 [a2 + 0x70] = a0
  2893: 82 17 08                 a0 = u64 [sp + 0x8]
  2896: 7b 97 78                 u64 [a2 + 0x78] = a0
  2899: 82 17 78                 a0 = u64 [sp + 0x78]
  2902: 7b 97 80 00              u64 [a2 + 0x80] = a0
  2906: 82 17 68                 a0 = u64 [sp + 0x68]
  2909: 7b 97 88 00              u64 [a2 + 0x88] = a0
  2913: 49 29 90 00              u64 [a2 + 144] = 0
  2917: 33 07 02                 a0 = 0x2
  2920: 7b 17 48                 u64 [sp + 0x48] = a0
  2923: 33 07 08 03 01           a0 = 0x10308
  2928: 7b 17 40                 u64 [sp + 0x40] = a0
  2931: 33 07 20 10 03           a0 = 0x31020
  2936: 95 77 00 00 10           a0 = a0 + 0x100000
  2941: 7b 17 38                 u64 [sp + 0x38] = a0
  2944: 95 16 d8 50 01           s1 = sp + 0x150d8
  2949: 01                       fallthrough
      :                          @161
  2950: 95 17 88 40 01           a0 = sp + 0x14088
  2955: 82 77 40                 a0 = u64 [a0 + 0x40]
  2958: 95 18 00 51 01           a1 = sp + 0x15100
  2963: 0a 0c                    ecalli 12 // 'invoke'
  2965: 7b 67 98 00              u64 [s1 + 0x98] = a0
  2969: 7b 68 a0 00              u64 [s1 + 0xa0] = a1
  2973: 95 17 c8 40 01           a0 = sp + 0x140c8
  2978: 7b 67 00 01              u64 [s1 + 0x100] = a0
  2982: 82 17 48                 a0 = u64 [sp + 0x48]
  2985: 7b 67 08 01              u64 [s1 + 0x108] = a0
  2989: 95 18 70 51 01           a1 = sp + 0x15170
  2994: 7b 68 10 01              u64 [s1 + 0x110] = a1
  2998: 7b 67 18 01              u64 [s1 + 0x118] = a0
  3002: 95 18 78 51 01           a1 = sp + 0x15178
  3007: 7b 68 20 01              u64 [s1 + 0x120] = a1
  3011: 7b 67 28 01              u64 [s1 + 0x128] = a0
  3015: 82 17 40                 a0 = u64 [sp + 0x40]
  3018: 7b 67 c0 00              u64 [s1 + 0xc0] = a0
  3022: 49 26 c8 00 03           u64 [s1 + 200] = 0x3
  3027: 49 26 e0 00              u64 [s1 + 224] = 0
  3031: 95 18 d8 51 01           a1 = sp + 0x151d8
  3036: 7b 68 d0 00              u64 [s1 + 0xd0] = a1
  3040: 49 26 d8 00 03           u64 [s1 + 216] = 0x3
  3045: 95 17 80 51 01           a0 = sp + 0x15180
  3050: 95 18 98 51 01           a1 = sp + 0x15198
  3055: 50 10 36 a9 08           ra = 54, jump @315
      :                          @162 [@dyn 27]
  3060: 82 65 b0 00              s0 = u64 [s1 + 0xb0]
  3064: 82 6b b8 00              a4 = u64 [s1 + 0xb8]
  3068: 82 66 a8 00              s1 = u64 [s1 + 0xa8]
  3072: 33 07 02                 a0 = 0x2
  3075: 33 08                    a1 = 0
  3077: 33 09                    a2 = 0
  3079: 64 5a                    a3 = s0
  3081: 33 00 38                 ra = 0x38
  3084: 0a 64                    ecalli 100 // 'log'
  3086: 01                       fallthrough
      :                          @163 [@dyn 28]
  3087: 82 17 70                 a0 = u64 [sp + 0x70]
  3090: c8 67 07                 a0 = a0 + s1
  3093: 82 1b 38                 a4 = u64 [sp + 0x38]
  3096: 53 37 00 00 f0 1a        jump @168 if a0 <u 4293918720
      :                          @164
  3102: 82 b7                    a0 = u64 [a4]
  3104: c9 7b 08                 a1 = a4 - a0
  3107: ab 58 0f                 jump @168 if a1 != s0
      :                          @165
  3110: c9 67 08                 a1 = a0 - s1
  3113: 01                       fallthrough
      :                          @166
  3114: 82 b9                    a2 = u64 [a4]
  3116: ab 79 f2                 jump @164 if a2 != a0
      :                          @167
  3119: 7b b8                    u64 [a4] = a1
  3121: 01                       fallthrough
      :                          @168
  3122: 95 19 d8 50 01           a2 = sp + 0x150d8
  3127: 82 97 98 00              a0 = u64 [a2 + 0x98]
  3131: 82 98 a0 00              a1 = u64 [a2 + 0xa0]
  3135: 85 77 03                 a0 = a0 ^ 0x3
  3138: 82 9a 68                 a3 = u64 [a2 + 0x68]
  3141: 7b 1a 68                 u64 [sp + 0x68] = a3
  3144: 85 88 64                 a1 = a1 ^ 0x64
  3147: d4 87 07                 a0 = a0 | a1
  3150: 52 07 91 00              jump @171 if a0 != 0
      :                          @169
  3154: 82 97 70                 a0 = u64 [a2 + 0x70]
  3157: 7b 17 58                 u64 [sp + 0x58] = a0
  3160: 82 97 78                 a0 = u64 [a2 + 0x78]
  3163: 7b 17 78                 u64 [sp + 0x78] = a0
  3166: 82 97 80 00              a0 = u64 [a2 + 0x80]
  3170: 7b 17 60                 u64 [sp + 0x60] = a0
  3173: 82 97 88 00              a0 = u64 [a2 + 0x88]
  3177: 7b 17 50                 u64 [sp + 0x50] = a0
  3180: 49 29 f8 00              u64 [a2 + 248] = 0
  3184: 49 29 f0 00              u64 [a2 + 240] = 0
  3188: 49 29 e8 00              u64 [a2 + 232] = 0
  3192: 49 29 e0 00              u64 [a2 + 224] = 0
  3196: 49 29 d8 00              u64 [a2 + 216] = 0
  3200: 49 29 d0 00              u64 [a2 + 208] = 0
  3204: 49 29 c8 00              u64 [a2 + 200] = 0
  3208: 49 29 c0 00              u64 [a2 + 192] = 0
  3212: 95 17 d8 51 01           a0 = sp + 0x151d8
  3217: 33 09 00 01              a2 = 0x100
  3221: 33 08                    a1 = 0
  3223: 95 16 d8 50 01           s1 = sp + 0x150d8
  3228: 50 10 3a 12 0b           ra = 58, jump @383
      :                          @170 [@dyn 29]
  3233: 95 15 88 40 01           s0 = sp + 0x14088
  3238: 82 57 40                 a0 = u64 [s0 + 0x40]
  3241: 95 18 98 51 01           a1 = sp + 0x15198
  3246: 82 19 58                 a2 = u64 [sp + 0x58]
  3249: 82 1a 78                 a3 = u64 [sp + 0x78]
  3252: 0a 09                    ecalli 9 // 'peek'
  3254: 82 57 40                 a0 = u64 [s0 + 0x40]
  3257: 95 18 d8 51 01           a1 = sp + 0x151d8
  3262: 82 19 60                 a2 = u64 [sp + 0x60]
  3265: 82 15 50                 s0 = u64 [sp + 0x50]
  3268: 64 5a                    a3 = s0
  3270: 0a 09                    ecalli 9 // 'peek'
  3272: 95 18 98 51 01           a1 = sp + 0x15198
  3277: 95 1a d8 51 01           a3 = sp + 0x151d8
  3282: 82 17 68                 a0 = u64 [sp + 0x68]
  3285: 82 19 78                 a2 = u64 [sp + 0x78]
  3288: 64 5b                    a4 = s0
  3290: 0a 64                    ecalli 100 // 'log'
  3292: 28 aa fe                 jump @161
      :                          @171
  3295: 95 17 d8 40 01           a0 = sp + 0x140d8
  3300: 33 09 00 10              a2 = 0x1000
  3304: 33 06 00 10              s1 = 0x1000
  3308: 33 08                    a1 = 0
  3310: 50 10 3c c0 0a           ra = 60, jump @383
      :                          @172 [@dyn 30]
  3315: 95 1a 88 40 01           a3 = sp + 0x14088
  3320: 82 a7 40                 a0 = u64 [a3 + 0x40]
  3323: 7a a7 48                 u32 [a3 + 0x48] = a0
  3326: 82 15 68                 s0 = u64 [sp + 0x68]
  3329: 98 58 0c                 a1 = s0 >> 0xc
  3332: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  3335: 33 0a 00 10              a3 = 0x1000
  3339: 95 18 d8 40 01           a1 = sp + 0x140d8
  3344: 64 59                    a2 = s0
  3346: 0a 09                    ecalli 9 // 'peek'
  3348: 83 66 08                 i32 s1 = s1 + 0x8
  3351: 95 17 d0 40 01           a0 = sp + 0x140d0
  3356: 64 68                    a1 = s1
  3358: 0a 07                    ecalli 7 // 'export'
  3360: 33 09 00 10              a2 = 0x1000
  3364: 95 17 d8 40 01           a0 = sp + 0x140d8
  3369: 33 08                    a1 = 0
  3371: 50 10 3e 83 0a           ra = 62, jump @383
      :                          @173 [@dyn 31]
  3376: 95 1a 88 40 01           a3 = sp + 0x14088
  3381: 82 a7 40                 a0 = u64 [a3 + 0x40]
  3384: 7a a7 48                 u32 [a3 + 0x48] = a0
  3387: 95 59 00 10              a2 = s0 + 0x1000
  3391: 98 98 0c                 a1 = a2 >> 0xc
  3394: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  3397: 33 0a 00 10              a3 = 0x1000
  3401: 95 18 d8 40 01           a1 = sp + 0x140d8
  3406: 0a 09                    ecalli 9 // 'peek'
  3408: 95 17 d0 40 01           a0 = sp + 0x140d0
  3413: 64 68                    a1 = s1
  3415: 0a 07                    ecalli 7 // 'export'
  3417: 33 09 00 10              a2 = 0x1000
  3421: 95 17 d8 40 01           a0 = sp + 0x140d8
  3426: 33 08                    a1 = 0
  3428: 50 10 40 4a 0a           ra = 64, jump @383
      :                          @174 [@dyn 32]
  3433: 95 1a 88 40 01           a3 = sp + 0x14088
  3438: 82 a7 40                 a0 = u64 [a3 + 0x40]
  3441: 7a a7 48                 u32 [a3 + 0x48] = a0
  3444: 95 59 00 20              a2 = s0 + 0x2000
  3448: 98 98 0c                 a1 = a2 >> 0xc
  3451: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  3454: 33 0a 00 10              a3 = 0x1000
  3458: 95 18 d8 40 01           a1 = sp + 0x140d8
  3463: 0a 09                    ecalli 9 // 'peek'
  3465: 95 17 d0 40 01           a0 = sp + 0x140d0
  3470: 64 68                    a1 = s1
  3472: 0a 07                    ecalli 7 // 'export'
  3474: 33 09 00 10              a2 = 0x1000
  3478: 95 17 d8 40 01           a0 = sp + 0x140d8
  3483: 33 08                    a1 = 0
  3485: 50 10 42 11 0a           ra = 66, jump @383
      :                          @175 [@dyn 33]
  3490: 95 18 88 40 01           a1 = sp + 0x14088
  3495: 82 87 40                 a0 = u64 [a1 + 0x40]
  3498: 7a 87 48                 u32 [a1 + 0x48] = a0
  3501: 95 1a 88 40 01           a3 = sp + 0x14088
  3506: 95 59 00 30              a2 = s0 + 0x3000
  3510: 98 98 0c                 a1 = a2 >> 0xc
  3513: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  3516: 33 0a 00 10              a3 = 0x1000
  3520: 95 18 d8 40 01           a1 = sp + 0x140d8
  3525: 0a 09                    ecalli 9 // 'peek'
  3527: 95 17 d0 40 01           a0 = sp + 0x140d0
  3532: 64 68                    a1 = s1
  3534: 64 65                    s0 = s1
  3536: 0a 07                    ecalli 7 // 'export'
  3538: 33 09 00 10              a2 = 0x1000
  3542: 95 17 d8 40 01           a0 = sp + 0x140d8
  3547: 33 08                    a1 = 0
  3549: 50 10 44 d1 09           ra = 68, jump @383
      :                          @176 [@dyn 34]
  3554: 95 1a 88 40 01           a3 = sp + 0x14088
  3559: 82 a7 40                 a0 = u64 [a3 + 0x40]
  3562: 7a a7 48                 u32 [a3 + 0x48] = a0
  3565: 82 16 68                 s1 = u64 [sp + 0x68]
  3568: 95 69 00 40              a2 = s1 + 0x4000
  3572: 98 98 0c                 a1 = a2 >> 0xc
  3575: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  3578: 33 0a 00 10              a3 = 0x1000
  3582: 95 18 d8 40 01           a1 = sp + 0x140d8
  3587: 0a 09                    ecalli 9 // 'peek'
  3589: 95 17 d0 40 01           a0 = sp + 0x140d0
  3594: 64 58                    a1 = s0
  3596: 0a 07                    ecalli 7 // 'export'
  3598: 33 09 00 10              a2 = 0x1000
  3602: 95 17 d8 40 01           a0 = sp + 0x140d8
  3607: 33 08                    a1 = 0
  3609: 50 10 46 95 09           ra = 70, jump @383
      :                          @177 [@dyn 35]
  3614: 95 18 88 40 01           a1 = sp + 0x14088
  3619: 82 87 40                 a0 = u64 [a1 + 0x40]
  3622: 7a 87 48                 u32 [a1 + 0x48] = a0
  3625: 95 1a 88 40 01           a3 = sp + 0x14088
  3630: 95 69 00 50              a2 = s1 + 0x5000
  3634: 98 98 0c                 a1 = a2 >> 0xc
  3637: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  3640: 33 0a 00 10              a3 = 0x1000
  3644: 95 18 d8 40 01           a1 = sp + 0x140d8
  3649: 0a 09                    ecalli 9 // 'peek'
  3651: 95 17 d0 40 01           a0 = sp + 0x140d0
  3656: 7b 15 78                 u64 [sp + 0x78] = s0
  3659: 64 58                    a1 = s0
  3661: 0a 07                    ecalli 7 // 'export'
  3663: 33 09 00 10              a2 = 0x1000
  3667: 95 17 d8 40 01           a0 = sp + 0x140d8
  3672: 33 08                    a1 = 0
  3674: 50 10 48 54 09           ra = 72, jump @383
      :                          @178 [@dyn 36]
  3679: 95 1a 88 40 01           a3 = sp + 0x14088
  3684: 82 a7 40                 a0 = u64 [a3 + 0x40]
  3687: 7a a7 48                 u32 [a3 + 0x48] = a0
  3690: 95 69 00 60              a2 = s1 + 0x6000
  3694: 98 98 0c                 a1 = a2 >> 0xc
  3697: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  3700: 33 0a 00 10              a3 = 0x1000
  3704: 95 18 d8 40 01           a1 = sp + 0x140d8
  3709: 0a 09                    ecalli 9 // 'peek'
  3711: 95 17 d0 40 01           a0 = sp + 0x140d0
  3716: 64 58                    a1 = s0
  3718: 0a 07                    ecalli 7 // 'export'
  3720: 33 09 00 10              a2 = 0x1000
  3724: 95 17 d8 40 01           a0 = sp + 0x140d8
  3729: 33 08                    a1 = 0
  3731: 50 10 4a 1b 09           ra = 74, jump @383
      :                          @179 [@dyn 37]
  3736: 95 18 88 40 01           a1 = sp + 0x14088
  3741: 82 87 40                 a0 = u64 [a1 + 0x40]
  3744: 7a 87 48                 u32 [a1 + 0x48] = a0
  3747: 95 1a 88 40 01           a3 = sp + 0x14088
  3752: 95 69 00 70              a2 = s1 + 0x7000
  3756: 98 98 0c                 a1 = a2 >> 0xc
  3759: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  3762: 33 0a 00 10              a3 = 0x1000
  3766: 95 18 d8 40 01           a1 = sp + 0x140d8
  3771: 0a 09                    ecalli 9 // 'peek'
  3773: 95 17 d0 40 01           a0 = sp + 0x140d0
  3778: 82 15 78                 s0 = u64 [sp + 0x78]
  3781: 64 58                    a1 = s0
  3783: 0a 07                    ecalli 7 // 'export'
  3785: 33 09 00 10              a2 = 0x1000
  3789: 95 17 d8 40 01           a0 = sp + 0x140d8
  3794: 33 08                    a1 = 0
  3796: 50 10 4c da 08           ra = 76, jump @383
      :                          @180 [@dyn 38]
  3801: 95 1a 88 40 01           a3 = sp + 0x14088
  3806: 82 a7 40                 a0 = u64 [a3 + 0x40]
  3809: 7a a7 48                 u32 [a3 + 0x48] = a0
  3812: 95 69 00 80 00           a2 = s1 + 0x8000
  3817: 98 98 0c                 a1 = a2 >> 0xc
  3820: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  3823: 95 16 88 40 01           s1 = sp + 0x14088
  3828: 33 0a 00 10              a3 = 0x1000
  3832: 95 18 d8 40 01           a1 = sp + 0x140d8
  3837: 0a 09                    ecalli 9 // 'peek'
  3839: 95 17 d0 40 01           a0 = sp + 0x140d0
  3844: 64 58                    a1 = s0
  3846: 0a 07                    ecalli 7 // 'export'
  3848: 82 67 40                 a0 = u64 [s1 + 0x40]
  3851: 0a 0d                    ecalli 13 // 'expunge'
  3853: 33 07 02                 a0 = 0x2
  3856: 95 18 d8 50 01           a1 = sp + 0x150d8
  3861: 7b 87 b0 00              u64 [a1 + 0xb0] = a0
  3865: 33 07 68 03 01           a0 = 0x10368
  3870: 7b 87 00 01              u64 [a1 + 0x100] = a0
  3874: 95 17 80 51 01           a0 = sp + 0x15180
  3879: 7b 87 10 01              u64 [a1 + 0x110] = a0
  3883: 49 28 08 01 01           u64 [a1 + 264] = 0x1
  3888: 49 28 18 01 01           u64 [a1 + 280] = 0x1
  3893: 7b 88 a8 00              u64 [a1 + 0xa8] = a1
  3897: 49 28 20 01              u64 [a1 + 288] = 0
  3901: 95 16 d8 50 01           s1 = sp + 0x150d8
  3906: 95 17 98 51 01           a0 = sp + 0x15198
  3911: 95 18 d8 51 01           a1 = sp + 0x151d8
  3916: 50 10 4e 4c 05           ra = 78, jump @315
      :                          @181 [@dyn 39]
  3921: 82 65 c8 00              s0 = u64 [s1 + 0xc8]
  3925: 82 6b d0 00              a4 = u64 [s1 + 0xd0]
  3929: 82 66 c0 00              s1 = u64 [s1 + 0xc0]
  3933: 33 07 02                 a0 = 0x2
  3936: 33 08                    a1 = 0
  3938: 33 09                    a2 = 0
  3940: 64 5a                    a3 = s0
  3942: 33 00 50                 ra = 0x50
  3945: 0a 64                    ecalli 100 // 'log'
  3947: 01                       fallthrough
      :                          @182 [@dyn 40]
  3948: 82 17 70                 a0 = u64 [sp + 0x70]
  3951: c8 67 07                 a0 = a0 + s1
  3954: 55 37 00 00 f0 09        jump @184 if a0 >=u 4293918720
      :                          @183
  3960: 28 f8 f1                 jump @35
      :                          @184
  3963: 33 07 20 10 03           a0 = 0x31020
  3968: 95 77 00 00 10           a0 = a0 + 0x100000
  3973: 01                       fallthrough
      :                          @185
  3974: 82 78                    a1 = u64 [a0]
  3976: c9 87 09                 a2 = a0 - a1
  3979: aa 59 06                 jump @187 if a2 == s0
      :                          @186
  3982: 28 e2 f1                 jump @35
      :                          @187
  3985: c9 68 09                 a2 = a1 - s1
  3988: 01                       fallthrough
      :                          @188
  3989: 82 7a                    a3 = u64 [a0]
  3991: ab 8a ef                 jump @185 if a3 != a1
      :                          @189
  3994: 7b 79                    u64 [a0] = a2
  3996: 33 0b                    a4 = 0
  3998: 01                       fallthrough
      :                          @190
  3999: ab 8a e7                 jump @185 if a3 != a1
      :                          @191
  4002: 28 ce f1                 jump @35
      :                          @192
  4005: 00                       trap
      :                          @193
  4006: 00                       trap
      :                          @194 [export #1: 'accumulate']
  4007: 51 08 a2 02              jump @257 if a1 == 0
      :                          @195
  4011: 95 11 68 ff              sp = sp + 0xffffffffffffff68
  4015: 7b 10 90 00              u64 [sp + 0x90] = ra
  4019: 7b 15 88 00              u64 [sp + 0x88] = s0
  4023: 7b 16 80 00              u64 [sp + 0x80] = s1
  4027: 64 85                    s0 = a1
  4029: 7d 78                    a1 = i8 [a0]
  4031: 33 06 01                 s1 = 0x1
  4034: 59 08 37                 jump @202 if a1 >=s 0
      :                          @196
  4037: 84 89 ff 00              a2 = a1 & 0xff
  4041: 33 06 02                 s1 = 0x2
  4044: 53 29 c0 00 2d           jump @202 if a2 <u 192
      :                          @197
  4049: 33 06 03                 s1 = 0x3
  4052: 53 29 e0 00 25           jump @202 if a2 <u 224
      :                          @198
  4057: 33 06 04                 s1 = 0x4
  4060: 53 29 f0 00 1d           jump @202 if a2 <u 240
      :                          @199
  4065: 33 06 05                 s1 = 0x5
  4068: 53 29 f8 00 15           jump @202 if a2 <u 248
      :                          @200
  4073: 33 06 06                 s1 = 0x6
  4076: 53 29 fc 00 0d           jump @202 if a2 <u 252
      :                          @201
  4081: 88 98 fe 00              a1 = a2 <u 0xfe
  4085: 9a 86 08                 s1 = 0x8 - a1
  4088: 01                       fallthrough
      :                          @202
  4089: ac 65 37 02              jump @256 if s0 <u s1
      :                          @203
  4093: 64 68                    a1 = s1
  4095: 7b 17                    u64 [sp] = a0
  4097: 50 10 52 99 0d           ra = 82, jump @498
      :                          @204 [@dyn 41]
  4102: 82 17                    a0 = u64 [sp]
  4104: aa 65 28 02              jump @256 if s0 == s1
      :                          @205
  4108: c8 67 07                 a0 = a0 + s1
  4111: 7d 78                    a1 = i8 [a0]
  4113: c9 65 0a                 a3 = s0 - s1
  4116: 33 05 01                 s0 = 0x1
  4119: 59 08 37                 jump @212 if a1 >=s 0
      :                          @206
  4122: 84 89 ff 00              a2 = a1 & 0xff
  4126: 33 05 02                 s0 = 0x2
  4129: 53 29 c0 00 2d           jump @212 if a2 <u 192
      :                          @207
  4134: 33 05 03                 s0 = 0x3
  4137: 53 29 e0 00 25           jump @212 if a2 <u 224
      :                          @208
  4142: 33 05 04                 s0 = 0x4
  4145: 53 29 f0 00 1d           jump @212 if a2 <u 240
      :                          @209
  4150: 33 05 05                 s0 = 0x5
  4153: 53 29 f8 00 15           jump @212 if a2 <u 248
      :                          @210
  4158: 33 05 06                 s0 = 0x6
  4161: 53 29 fc 00 0d           jump @212 if a2 <u 252
      :                          @211
  4166: 88 98 fe 00              a1 = a2 <u 0xfe
  4170: 9a 85 08                 s0 = 0x8 - a1
  4173: 01                       fallthrough
      :                          @212
  4174: ac 5a e2 01              jump @256 if a3 <u s0
      :                          @213
  4178: 64 58                    a1 = s0
  4180: 7b 1a                    u64 [sp] = a3
  4182: 64 76                    s1 = a0
  4184: 50 10 54 42 0d           ra = 84, jump @498
      :                          @214 [@dyn 42]
  4189: c8 65 07                 a0 = s0 + s1
  4192: 82 16                    s1 = u64 [sp]
  4194: ab 56 0b                 jump @216 if s1 != s0
      :                          @215
  4197: 33 08                    a1 = 0
  4199: 33 00 56                 ra = 0x56
  4202: 28 30 0d                 jump @498
      :                          @216
  4205: 7d 79                    a2 = i8 [a0]
  4207: c9 56 06                 s1 = s1 - s0
  4210: 33 08 01                 a1 = 0x1
  4213: 59 09 44                 jump @223 if a2 >=s 0
      :                          @217
  4216: 84 99 ff 00              a2 = a2 & 0xff
  4220: 33 0a c0 00              a3 = 0xc0
  4224: 33 08 02                 a1 = 0x2
  4227: ac a9 36                 jump @223 if a2 <u a3
      :                          @218
  4230: 33 0a e0 00              a3 = 0xe0
  4234: 33 08 03                 a1 = 0x3
  4237: ac a9 2c                 jump @223 if a2 <u a3
      :                          @219
  4240: 33 0a f0 00              a3 = 0xf0
  4244: 33 08 04                 a1 = 0x4
  4247: ac a9 22                 jump @223 if a2 <u a3
      :                          @220
  4250: 33 0a f8 00              a3 = 0xf8
  4254: 33 08 05                 a1 = 0x5
  4257: ac a9 18                 jump @223 if a2 <u a3
      :                          @221
  4260: 33 0a fc 00              a3 = 0xfc
  4264: 33 08 06                 a1 = 0x6
  4267: ac a9 0e                 jump @223 if a2 <u a3
      :                          @222
  4270: 88 98 fe 00              a1 = a2 <u 0xfe
  4274: 33 09 08                 a2 = 0x8
  4277: c9 89 08                 a1 = a2 - a1
  4280: 01                       fallthrough
      :                          @223
  4281: ac 86 77 01              jump @256 if s1 <u a1
      :                          @224
  4285: 50 10 56 dd 0c           ra = 86, jump @498
      :                          @225 [@dyn 43]
  4290: 33 07 09 00 03           a0 = 0x30009
  4295: 33 09 08 10              a2 = 0x1008
  4299: 33 0a 0f                 a3 = 0xf
  4302: 33 08                    a1 = 0
  4304: 33 0b                    a4 = 0
  4306: 33 0c                    a5 = 0
  4308: 33 00 58                 ra = 0x58
  4311: 0a 01                    ecalli 1 // 'fetch'
  4313: 01                       fallthrough
      :                          @226 [@dyn 44]
  4314: 51 07 56 01              jump @256 if a0 == 0
      :                          @227
  4318: 95 76 80                 s1 = a0 + 0xffffffffffffff80
  4321: 51 06 4f 01              jump @256 if s1 == 0
      :                          @228
  4325: 35 07 89 00 03           a0 = i8 [0x30089]
  4330: 33 05 01                 s0 = 0x1
  4333: 59 07 37                 jump @235 if a0 >=s 0
      :                          @229
  4336: 84 77 ff 00              a0 = a0 & 0xff
  4340: 33 05 02                 s0 = 0x2
  4343: 53 27 c0 00 2d           jump @235 if a0 <u 192
      :                          @230
  4348: 33 05 03                 s0 = 0x3
  4351: 53 27 e0 00 25           jump @235 if a0 <u 224
      :                          @231
  4356: 33 05 04                 s0 = 0x4
  4359: 53 27 f0 00 1d           jump @235 if a0 <u 240
      :                          @232
  4364: 33 05 05                 s0 = 0x5
  4367: 53 27 f8 00 15           jump @235 if a0 <u 248
      :                          @233
  4372: 33 05 06                 s0 = 0x6
  4375: 53 27 fc 00 0d           jump @235 if a0 <u 252
      :                          @234
  4380: 88 77 fe 00              a0 = a0 <u 0xfe
  4384: 9a 75 08                 s0 = 0x8 - a0
  4387: 01                       fallthrough
      :                          @235
  4388: ac 56 0c 01              jump @256 if s1 <u s0
      :                          @236
  4392: 33 07 09 00 03           a0 = 0x30009
  4397: 7b 17                    u64 [sp] = a0
  4399: 95 77 80 00              a0 = a0 + 0x80
  4403: 64 58                    a1 = s0
  4405: 50 10 5a 65 0c           ra = 90, jump @498
      :                          @237 [@dyn 45]
  4410: 85 57 ff                 a0 = s0 ^ 0xffffffffffffffff
  4413: c8 67 07                 a0 = a0 + s1
  4416: 51 07 f0 00              jump @256 if a0 == 0
      :                          @238
  4420: 82 18                    a1 = u64 [sp]
  4422: c8 85 05                 s0 = s0 + a1
  4425: 95 55 81 00              s0 = s0 + 0x81
  4429: 7d 58                    a1 = i8 [s0]
  4431: 33 06 01                 s1 = 0x1
  4434: 59 08 45                 jump @246 if a1 >=s 0
      :                          @239
  4437: 84 88 ff 00              a1 = a1 & 0xff
  4441: 33 09 c0 00              a2 = 0xc0
  4445: 33 06 02                 s1 = 0x2
  4448: ac 98 33                 jump @245 if a1 <u a2
      :                          @240
  4451: 33 09 e0 00              a2 = 0xe0
  4455: 33 06 03                 s1 = 0x3
  4458: ac 98 29                 jump @245 if a1 <u a2
      :                          @241
  4461: 33 09 f0 00              a2 = 0xf0
  4465: 33 06 04                 s1 = 0x4
  4468: ac 98 1f                 jump @245 if a1 <u a2
      :                          @242
  4471: 33 09 f8 00              a2 = 0xf8
  4475: 33 06 05                 s1 = 0x5
  4478: ac 98 15                 jump @245 if a1 <u a2
      :                          @243
  4481: 33 09 fc 00              a2 = 0xfc
  4485: 33 06 06                 s1 = 0x6
  4488: ac 98 0b                 jump @245 if a1 <u a2
      :                          @244
  4491: 88 88 fe 00              a1 = a1 <u 0xfe
  4495: 9a 86 08                 s1 = 0x8 - a1
  4498: 01                       fallthrough
      :                          @245
  4499: ac 67 9d 00              jump @256 if a0 <u s1
      :                          @246
  4503: 64 57                    a0 = s0
  4505: 64 68                    a1 = s1
  4507: 50 10 5c ff 0b           ra = 92, jump @498
      :                          @247 [@dyn 46]
  4512: 52 17 24 90 00           jump @256 if a0 != 36
      :                          @248
  4517: c8 56 07                 a0 = s1 + s0
  4520: 7b 17 08                 u64 [sp + 0x8] = a0
  4523: 80 78 20                 a1 = u32 [a0 + 0x20]
  4526: 7b 18 10                 u64 [sp + 0x10] = a1
  4529: 0a 17                    ecalli 23 // 'solicit'
  4531: 95 17 08                 a0 = sp + 0x8
  4534: 7b 17 60                 u64 [sp + 0x60] = a0
  4537: 33 07 02                 a0 = 0x2
  4540: 7b 17 68                 u64 [sp + 0x68] = a0
  4543: 95 18 10                 a1 = sp + 0x10
  4546: 7b 18 70                 u64 [sp + 0x70] = a1
  4549: 7b 17 78                 u64 [sp + 0x78] = a0
  4552: 33 07 f0 03 01           a0 = 0x103f0
  4557: 7b 17 30                 u64 [sp + 0x30] = a0
  4560: 49 11 38 02              u64 [sp + 56] = 0x2
  4564: 49 11 50                 u64 [sp + 80] = 0
  4567: 95 18 60                 a1 = sp + 0x60
  4570: 7b 18 40                 u64 [sp + 0x40] = a1
  4573: 49 11 48 02              u64 [sp + 72] = 0x2
  4577: 95 17 18                 a0 = sp + 0x18
  4580: 95 18 30                 a1 = sp + 0x30
  4583: 50 10 5e b1 02           ra = 94, jump @315
      :                          @249 [@dyn 47]
  4588: 82 15 20                 s0 = u64 [sp + 0x20]
  4591: 82 1b 28                 a4 = u64 [sp + 0x28]
  4594: 82 16 18                 s1 = u64 [sp + 0x18]
  4597: 33 07 02                 a0 = 0x2
  4600: 33 08                    a1 = 0
  4602: 33 09                    a2 = 0
  4604: 64 5a                    a3 = s0
  4606: 33 00 60                 ra = 0x60
  4609: 0a 64                    ecalli 100 // 'log'
  4611: 01                       fallthrough
      :                          @250 [@dyn 48]
  4612: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
  4617: 53 38 00 00 f0 27        jump @256 if a1 <u 4293918720
      :                          @251
  4623: 33 07 20 10 03           a0 = 0x31020
  4628: 95 77 00 00 10           a0 = a0 + 0x100000
  4633: 01                       fallthrough
      :                          @252
  4634: 82 78                    a1 = u64 [a0]
  4636: c9 87 09                 a2 = a0 - a1
  4639: ab 59 11                 jump @256 if a2 != s0
      :                          @253
  4642: c9 68 09                 a2 = a1 - s1
  4645: 01                       fallthrough
      :                          @254
  4646: 82 7a                    a3 = u64 [a0]
  4648: ab 8a f2                 jump @252 if a3 != a1
      :                          @255
  4651: 7b 79                    u64 [a0] = a2
  4653: 33 0b                    a4 = 0
  4655: 01                       fallthrough
      :                          @256
  4656: 82 10 90 00              ra = u64 [sp + 0x90]
  4660: 82 15 88 00              s0 = u64 [sp + 0x88]
  4664: 82 16 80 00              s1 = u64 [sp + 0x80]
  4668: 95 11 98 00              sp = sp + 0x98
  4672: 33 07 00 00 01           a0 = 0x10000
  4677: 33 08                    a1 = 0
  4679: 32 00                    ret
      :                          @257
  4681: 33 07 00 00 01           a0 = 0x10000
  4686: 33 08                    a1 = 0
  4688: 32 00                    ret
      :                          @258 [export #2: 'on_transfer']
  4690: 33 07 00 00 01           a0 = 0x10000
  4695: 33 08                    a1 = 0
  4697: 32 00                    ret
      :                          @259
  4699: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  4702: 7b 10 40                 u64 [sp + 0x40] = ra
  4705: 7b 15 38                 u64 [sp + 0x38] = s0
  4708: 7b 16 30                 u64 [sp + 0x30] = s1
  4711: c8 89 09                 a2 = a2 + a1
  4714: ac 89 52                 jump @267 if a2 <u a1
      :                          @260
  4717: 64 75                    s0 = a0
  4719: 82 77                    a0 = u64 [a0]
  4721: 97 78 01                 a1 = a0 << 0x1
  4724: 33 0a 08                 a3 = 0x8
  4727: e4 a9 09                 a2 = maxu(a2, a3)
  4730: e4 98 06                 s1 = maxu(a1, a2)
  4733: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  4736: 98 88 3f                 a1 = a1 >> 0x3f
  4739: 51 07 12                 jump @262 if a0 == 0
      :                          @261
  4742: 82 59 08                 a2 = u64 [s0 + 0x8]
  4745: 7b 19 18                 u64 [sp + 0x18] = a2
  4748: 49 11 20 01              u64 [sp + 32] = 0x1
  4752: 7b 17 28                 u64 [sp + 0x28] = a0
  4755: 28 06                    jump @263
      :                          @262
  4757: 49 11 20                 u64 [sp + 32] = 0
  4760: 01                       fallthrough
      :                          @263
  4761: 64 17                    a0 = sp
  4763: 95 1a 18                 a3 = sp + 0x18
  4766: 64 69                    a2 = s1
  4768: 50 10 62 32              ra = 98, jump @271
      :                          @264 [@dyn 49]
  4772: 82 18                    a1 = u64 [sp]
  4774: 82 17 08                 a0 = u64 [sp + 0x8]
  4777: 51 08 14                 jump @268 if a1 == 0
      :                          @265
  4780: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  4790: aa 87 0d                 jump @269 if a0 == a1
      :                          @266
  4793: 52 07 18                 jump @270 if a0 != 0
      :                          @267
  4796: 00                       trap
      :                          @268
  4797: 7b 57 08                 u64 [s0 + 0x8] = a0
  4800: 7b 56                    u64 [s0] = s1
  4802: 01                       fallthrough
      :                          @269
  4803: 82 10 40                 ra = u64 [sp + 0x40]
  4806: 82 15 38                 s0 = u64 [sp + 0x38]
  4809: 82 16 30                 s1 = u64 [sp + 0x30]
  4812: 95 11 48                 sp = sp + 0x48
  4815: 32 00                    ret
      :                          @270
  4817: 00                       trap
      :                          @271
  4818: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  4821: 7b 10 30                 u64 [sp + 0x30] = ra
  4824: 7b 15 28                 u64 [sp + 0x28] = s0
  4827: 7b 16 20                 u64 [sp + 0x20] = s1
  4830: 64 95                    s0 = a2
  4832: 64 72                    t0 = a0
  4834: 51 08 79                 jump @281 if a1 == 0
      :                          @272
  4837: 82 a7 08                 a0 = u64 [a3 + 0x8]
  4840: 51 07 7c                 jump @282 if a0 == 0
      :                          @273
  4843: 82 a9 10                 a2 = u64 [a3 + 0x10]
  4846: 51 09 aa 00              jump @289 if a2 == 0
      :                          @274
  4850: 82 a8                    a1 = u64 [a3]
  4852: 33 06 20 10 03           s1 = 0x31020
  4857: 33 03 00 00 10           t1 = 0x100000
  4862: c8 36 06                 s1 = s1 + t1
  4865: 01                       fallthrough
      :                          @275
  4866: 82 6a                    a3 = u64 [s1]
  4868: c8 5a 07                 a0 = a3 + s0
  4871: ac a7 cf 00              jump @295 if a0 <u a3
      :                          @276
  4875: 95 7b 01                 a4 = a0 + 0x1
  4878: 88 bc 01                 a5 = a4 <u 0x1
  4881: d8 b3 0b                 a4 = t1 <u a4
  4884: d4 cb 0b                 a4 = a4 | a5
  4887: 52 0b bf 00              jump @295 if a4 != 0
      :                          @277
  4891: 82 6b                    a4 = u64 [s1]
  4893: ab ab e5                 jump @275 if a4 != a3
      :                          @278
  4896: 7b 67                    u64 [s1] = a0
  4898: 33 0c                    a5 = 0
  4900: 7b 12 18                 u64 [sp + 0x18] = t0
  4903: 33 0a 20 10 03           a3 = 0x31020
  4908: 33 0b 00 00 10           a4 = 0x100000
  4913: 7b 1a                    u64 [sp] = a3
  4915: c8 ba 0a                 a3 = a3 + a4
  4918: c9 7a 07                 a0 = a3 - a0
  4921: 7b 17 10                 u64 [sp + 0x10] = a0
  4924: 7b 18 08                 u64 [sp + 0x8] = a1
  4927: 64 96                    s1 = a2
  4929: 50 10 64 bb 03           ra = 100, jump @365
      :                          @279 [@dyn 50]
  4934: 54 36 00 00 10 98 00     jump @296 if s1 <=u 1048576
      :                          @280
  4941: 82 12 18                 t0 = u64 [sp + 0x18]
  4944: 82 18 10                 a1 = u64 [sp + 0x10]
  4947: 33 07                    a0 = 0
  4949: 7b 28 08                 u64 [t0 + 0x8] = a1
  4952: 28 b5 00                 jump @302
      :                          @281
  4955: 49 12 08                 u64 [t0 + 8] = 0
  4958: 33 07 01                 a0 = 0x1
  4961: 28 ac 00                 jump @302
      :                          @282
  4964: 33 09 20 10 03           a2 = 0x31020
  4969: 33 07 00 00 10           a0 = 0x100000
  4974: c8 79 09                 a2 = a2 + a0
  4977: 01                       fallthrough
      :                          @283
  4978: 82 9a                    a3 = u64 [a2]
  4980: c8 5a 08                 a1 = a3 + s0
  4983: ac a8 5f                 jump @295 if a1 <u a3
      :                          @284
  4986: 95 8b 01                 a4 = a1 + 0x1
  4989: 88 bc 01                 a5 = a4 <u 0x1
  4992: d8 b7 0b                 a4 = a0 <u a4
  4995: d4 cb 0b                 a4 = a4 | a5
  4998: 52 0b 50                 jump @295 if a4 != 0
      :                          @285
  5001: 82 9b                    a4 = u64 [a2]
  5003: ab ab e7                 jump @283 if a4 != a3
      :                          @286
  5006: 7b 98                    u64 [a2] = a1
  5008: 33 0c                    a5 = 0
  5010: 01                       fallthrough
      :                          @287
  5011: ab ab df                 jump @283 if a4 != a3
      :                          @288
  5014: 28 31                    jump @294
      :                          @289
  5016: 33 09 20 10 03           a2 = 0x31020
  5021: 33 07 00 00 10           a0 = 0x100000
  5026: c8 79 09                 a2 = a2 + a0
  5029: 01                       fallthrough
      :                          @290
  5030: 82 9a                    a3 = u64 [a2]
  5032: c8 5a 08                 a1 = a3 + s0
  5035: ac a8 2b                 jump @295 if a1 <u a3
      :                          @291
  5038: 95 8b 01                 a4 = a1 + 0x1
  5041: 88 bc 01                 a5 = a4 <u 0x1
  5044: d8 b7 0b                 a4 = a0 <u a4
  5047: d4 cb 0b                 a4 = a4 | a5
  5050: 52 0b 1c                 jump @295 if a4 != 0
      :                          @292
  5053: 82 9b                    a4 = u64 [a2]
  5055: ab ab e7                 jump @290 if a4 != a3
      :                          @293
  5058: 7b 98                    u64 [a2] = a1
  5060: 33 0c                    a5 = 0
  5062: 01                       fallthrough
      :                          @294
  5063: 33 07 20 10 13           a0 = 0x131020
  5068: c9 87 08                 a1 = a0 - a1
  5071: 33 07                    a0 = 0
  5073: 7b 28 08                 u64 [t0 + 0x8] = a1
  5076: 28 39                    jump @302
      :                          @295
  5078: 33 07 01                 a0 = 0x1
  5081: 7b 27 08                 u64 [t0 + 0x8] = a0
  5084: 28 31                    jump @302
      :                          @296
  5086: 64 6c                    a5 = s1
  5088: 82 17                    a0 = u64 [sp]
  5090: 95 77 00 00 10           a0 = a0 + 0x100000
  5095: 82 12 18                 t0 = u64 [sp + 0x18]
  5098: 82 16 08                 s1 = u64 [sp + 0x8]
  5101: 01                       fallthrough
      :                          @297
  5102: 82 78                    a1 = u64 [a0]
  5104: c9 87 09                 a2 = a0 - a1
  5107: ab 69 11                 jump @301 if a2 != s1
      :                          @298
  5110: c9 c8 09                 a2 = a1 - a5
  5113: 01                       fallthrough
      :                          @299
  5114: 82 7a                    a3 = u64 [a0]
  5116: ab 8a f2                 jump @297 if a3 != a1
      :                          @300
  5119: 7b 79                    u64 [a0] = a2
  5121: 33 0b                    a4 = 0
  5123: 01                       fallthrough
      :                          @301
  5124: 82 18 10                 a1 = u64 [sp + 0x10]
  5127: 33 07                    a0 = 0
  5129: 7b 28 08                 u64 [t0 + 0x8] = a1
  5132: 01                       fallthrough
      :                          @302
  5133: 7b 25 10                 u64 [t0 + 0x10] = s0
  5136: 7b 27                    u64 [t0] = a0
  5138: 82 10 30                 ra = u64 [sp + 0x30]
  5141: 82 15 28                 s0 = u64 [sp + 0x28]
  5144: 82 16 20                 s1 = u64 [sp + 0x20]
  5147: 95 11 38                 sp = sp + 0x38
  5150: 32 00                    ret
      :                          @303
  5152: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  5155: 7b 10 40                 u64 [sp + 0x40] = ra
  5158: 7b 15 38                 u64 [sp + 0x38] = s0
  5161: 7b 16 30                 u64 [sp + 0x30] = s1
  5164: 95 88 01                 a1 = a1 + 0x1
  5167: 51 08 53                 jump @311 if a1 == 0
      :                          @304
  5170: 64 75                    s0 = a0
  5172: 82 77                    a0 = u64 [a0]
  5174: 97 79 01                 a2 = a0 << 0x1
  5177: 33 0a 08                 a3 = 0x8
  5180: e4 a8 08                 a1 = maxu(a1, a3)
  5183: e4 89 06                 s1 = maxu(a2, a1)
  5186: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  5189: 98 88 3f                 a1 = a1 >> 0x3f
  5192: 51 07 12                 jump @306 if a0 == 0
      :                          @305
  5195: 82 59 08                 a2 = u64 [s0 + 0x8]
  5198: 7b 19 18                 u64 [sp + 0x18] = a2
  5201: 49 11 20 01              u64 [sp + 32] = 0x1
  5205: 7b 17 28                 u64 [sp + 0x28] = a0
  5208: 28 06                    jump @307
      :                          @306
  5210: 49 11 20                 u64 [sp + 32] = 0
  5213: 01                       fallthrough
      :                          @307
  5214: 64 17                    a0 = sp
  5216: 95 1a 18                 a3 = sp + 0x18
  5219: 64 69                    a2 = s1
  5221: 50 10 66 6d fe           ra = 102, jump @271
      :                          @308 [@dyn 51]
  5226: 82 18                    a1 = u64 [sp]
  5228: 82 17 08                 a0 = u64 [sp + 0x8]
  5231: 51 08 14                 jump @312 if a1 == 0
      :                          @309
  5234: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  5244: aa 87 0d                 jump @313 if a0 == a1
      :                          @310
  5247: 52 07 18                 jump @314 if a0 != 0
      :                          @311
  5250: 00                       trap
      :                          @312
  5251: 7b 57 08                 u64 [s0 + 0x8] = a0
  5254: 7b 56                    u64 [s0] = s1
  5256: 01                       fallthrough
      :                          @313
  5257: 82 10 40                 ra = u64 [sp + 0x40]
  5260: 82 15 38                 s0 = u64 [sp + 0x38]
  5263: 82 16 30                 s1 = u64 [sp + 0x30]
  5266: 95 11 48                 sp = sp + 0x48
  5269: 32 00                    ret
      :                          @314
  5271: 00                       trap
      :                          @315
  5272: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  5275: 7b 10 30                 u64 [sp + 0x30] = ra
  5278: 7b 15 28                 u64 [sp + 0x28] = s0
  5281: 7b 16 20                 u64 [sp + 0x20] = s1
  5284: 82 8a 08                 a3 = u64 [a1 + 0x8]
  5287: 64 75                    s0 = a0
  5289: 51 0a 35                 jump @320 if a3 == 0
      :                          @316
  5292: 82 89                    a2 = u64 [a1]
  5294: 33 07                    a0 = 0
  5296: 95 9b 08                 a4 = a2 + 0x8
  5299: 01                       fallthrough
      :                          @317
  5300: 82 bc                    a5 = u64 [a4]
  5302: c8 c7 07                 a0 = a0 + a5
  5305: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  5308: 95 bb 10                 a4 = a4 + 0x10
  5311: 52 0a f5                 jump @317 if a3 != 0
      :                          @318
  5314: 82 8a 18                 a3 = u64 [a1 + 0x18]
  5317: 51 0a 24                 jump @322 if a3 == 0
      :                          @319
  5320: 82 99 08                 a2 = u64 [a2 + 0x8]
  5323: 8e 99                    a2 = a2 >u 0
  5325: 88 7a 10                 a3 = a0 <u 0x10
  5328: 85 aa 01                 a3 = a3 ^ 0x1
  5331: d4 a9 09                 a2 = a2 | a3
  5334: 89 7a                    a3 = a0 <s 0
  5336: e0 a9 09                 a2 = a2 & ~a3
  5339: 52 09 0a                 jump @321 if a2 != 0
      :                          @320
  5342: 33 07                    a0 = 0
  5344: 33 09 01                 a2 = 0x1
  5347: 28 4a                    jump @330
      :                          @321
  5349: 97 77 01                 a0 = a0 << 0x1
  5352: 01                       fallthrough
      :                          @322
  5353: 51 07 40                 jump @329 if a0 == 0
      :                          @323
  5356: 57 07 73                 jump @335 if a0 <s 0
      :                          @324
  5359: 64 52                    t0 = s0
  5361: 33 0b 20 10 03           a4 = 0x31020
  5366: 33 09 00 00 10           a2 = 0x100000
  5371: c8 9b 0b                 a4 = a4 + a2
  5374: 01                       fallthrough
      :                          @325
  5375: 82 bc                    a5 = u64 [a4]
  5377: c8 7c 0a                 a3 = a5 + a0
  5380: ac ca 59                 jump @333 if a3 <u a5
      :                          @326
  5383: 95 a5 01                 s0 = a3 + 0x1
  5386: 88 56 01                 s1 = s0 <u 0x1
  5389: d8 59 05                 s0 = a2 <u s0
  5392: d4 65 05                 s0 = s0 | s1
  5395: 52 05 4a                 jump @333 if s0 != 0
      :                          @327
  5398: 82 b6                    s1 = u64 [a4]
  5400: ab c6 e7                 jump @325 if s1 != a5
      :                          @328
  5403: 7b ba                    u64 [a4] = a3
  5405: 33 09 20 10 13           a2 = 0x131020
  5410: c9 a9 09                 a2 = a2 - a3
  5413: 64 25                    s0 = t0
  5415: 28 06                    jump @330
      :                          @329
  5417: 33 09 01                 a2 = 0x1
  5420: 01                       fallthrough
      :                          @330
  5421: 7b 17                    u64 [sp] = a0
  5423: 7b 19 08                 u64 [sp + 0x8] = a2
  5426: 49 11 10                 u64 [sp + 16] = 0
  5429: 64 17                    a0 = sp
  5431: 50 10 68 7b 06           ra = 104, jump @460
      :                          @331 [@dyn 52]
  5436: 52 07 22                 jump @334 if a0 != 0
      :                          @332
  5439: 82 17 10                 a0 = u64 [sp + 0x10]
  5442: 82 18 08                 a1 = u64 [sp + 0x8]
  5445: 82 19                    a2 = u64 [sp]
  5447: 7b 57 10                 u64 [s0 + 0x10] = a0
  5450: 7b 58 08                 u64 [s0 + 0x8] = a1
  5453: 7b 59                    u64 [s0] = a2
  5455: 82 10 30                 ra = u64 [sp + 0x30]
  5458: 82 15 28                 s0 = u64 [sp + 0x28]
  5461: 82 16 20                 s1 = u64 [sp + 0x20]
  5464: 95 11 38                 sp = sp + 0x38
  5467: 32 00                    ret
      :                          @333
  5469: 00                       trap
      :                          @334
  5470: 00                       trap
      :                          @335
  5471: 00                       trap
      :                          @336 [@dyn 53]
  5472: 82 72                    t0 = u64 [a0]
  5474: 33 09 00 00 f0           a2 = 0xfffffffffff00000
  5479: 95 2a ff ff ef           a3 = t0 + 0xffffffffffefffff
  5484: ac 9a 28                 jump @342 if a3 <u a2
      :                          @337
  5487: 82 77 08                 a0 = u64 [a0 + 0x8]
  5490: 33 09 20 10 03           a2 = 0x31020
  5495: 95 99 00 00 10           a2 = a2 + 0x100000
  5500: 01                       fallthrough
      :                          @338
  5501: 82 9a                    a3 = u64 [a2]
  5503: c9 a9 0b                 a4 = a2 - a3
  5506: ab 7b 12                 jump @342 if a4 != a0
      :                          @339
  5509: c9 2a 0b                 a4 = a3 - t0
  5512: 01                       fallthrough
      :                          @340
  5513: 82 9c                    a5 = u64 [a2]
  5515: ab ac f2                 jump @338 if a5 != a3
      :                          @341
  5518: 7b 9b                    u64 [a2] = a4
  5520: 33 08                    a1 = 0
  5522: 32 00                    ret
      :                          @342
  5524: 32 00                    ret
      :                          @343 [@dyn 54]
  5526: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  5529: 7b 10 18                 u64 [sp + 0x18] = ra
  5532: 7b 15 10                 u64 [sp + 0x10] = s0
  5535: 7b 16 08                 u64 [sp + 0x8] = s1
  5538: 64 75                    s0 = a0
  5540: 82 7a 10                 a3 = u64 [a0 + 0x10]
  5543: 82 77                    a0 = u64 [a0]
  5545: c9 a7 07                 a0 = a0 - a3
  5548: 64 96                    s1 = a2
  5550: ac 97 2a                 jump @346 if a0 <u a2
      :                          @344
  5553: 7b 1a                    u64 [sp] = a3
  5555: 82 57 08                 a0 = u64 [s0 + 0x8]
  5558: c8 a7 07                 a0 = a0 + a3
  5561: 64 69                    a2 = s1
  5563: 50 10 6e 41 01           ra = 110, jump @365
      :                          @345 [@dyn 55]
  5568: 82 17                    a0 = u64 [sp]
  5570: c8 76 06                 s1 = s1 + a0
  5573: 7b 56 10                 u64 [s0 + 0x10] = s1
  5576: 33 07                    a0 = 0
  5578: 82 10 18                 ra = u64 [sp + 0x18]
  5581: 82 15 10                 s0 = u64 [sp + 0x10]
  5584: 82 16 08                 s1 = u64 [sp + 0x8]
  5587: 95 11 20                 sp = sp + 0x20
  5590: 32 00                    ret
      :                          @346
  5592: 64 57                    a0 = s0
  5594: 7b 18                    u64 [sp] = a1
  5596: 64 a8                    a1 = a3
  5598: 64 69                    a2 = s1
  5600: 50 10 70 7b fc           ra = 112, jump @259
      :                          @347 [@dyn 56]
  5605: 82 18                    a1 = u64 [sp]
  5607: 82 5a 10                 a3 = u64 [s0 + 0x10]
  5610: 28 c7                    jump @344
      :                          @348 [@dyn 57]
  5612: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  5615: 7b 10 20                 u64 [sp + 0x20] = ra
  5618: 7b 15 18                 u64 [sp + 0x18] = s0
  5621: 7b 16 10                 u64 [sp + 0x10] = s1
  5624: 64 86                    s1 = a1
  5626: 83 88                    i32 a1 = a1 + 0
  5628: 33 09 80 00              a2 = 0x80
  5632: 64 7a                    a3 = a0
  5634: ae 98 2b                 jump @353 if a1 >=u a2
      :                          @349
  5637: 82 a8 10                 a1 = u64 [a3 + 0x10]
  5640: 82 a7                    a0 = u64 [a3]
  5642: ab 78 12                 jump @352 if a1 != a0
      :                          @350
  5645: 64 a7                    a0 = a3
  5647: 64 a5                    s0 = a3
  5649: 50 10 74 0f fe           ra = 116, jump @303
      :                          @351 [@dyn 58]
  5654: 64 5a                    a3 = s0
  5656: 82 58 10                 a1 = u64 [s0 + 0x10]
  5659: 01                       fallthrough
      :                          @352
  5660: 82 a7 08                 a0 = u64 [a3 + 0x8]
  5663: c8 87 07                 a0 = a0 + a1
  5666: 78 76                    u8 [a0] = s1
  5668: 95 88 01                 a1 = a1 + 0x1
  5671: 7b a8 10                 u64 [a3 + 0x10] = a1
  5674: 28 ab 00                 jump @361
      :                          @353
  5677: 8b 67 0b                 i32 a0 = s1 >> 0xb
  5680: 48 11 0c                 u32 [sp + 12] = 0
  5683: 52 07 1c                 jump @355 if a0 != 0
      :                          @354
  5686: 98 67 06                 a0 = s1 >> 0x6
  5689: 86 77 c0 00              a0 = a0 | 0xc0
  5693: 78 17 0c                 u8 [sp + 0xc] = a0
  5696: 84 67 3f                 a0 = s1 & 0x3f
  5699: 86 77 80 00              a0 = a0 | 0x80
  5703: 78 17 0d                 u8 [sp + 0xd] = a0
  5706: 33 06 02                 s1 = 0x2
  5709: 28 63                    jump @358
      :                          @355
  5711: 8b 67 10                 i32 a0 = s1 >> 0x10
  5714: 52 07 29                 jump @357 if a0 != 0
      :                          @356
  5717: 98 67 0c                 a0 = s1 >> 0xc
  5720: 86 77 e0 00              a0 = a0 | 0xe0
  5724: 78 17 0c                 u8 [sp + 0xc] = a0
  5727: 97 67 34                 a0 = s1 << 0x34
  5730: 98 77 3a                 a0 = a0 >> 0x3a
  5733: 95 77 80 00              a0 = a0 + 0x80
  5737: 78 17 0d                 u8 [sp + 0xd] = a0
  5740: 84 67 3f                 a0 = s1 & 0x3f
  5743: 86 77 80 00              a0 = a0 | 0x80
  5747: 78 17 0e                 u8 [sp + 0xe] = a0
  5750: 33 06 03                 s1 = 0x3
  5753: 28 37                    jump @358
      :                          @357
  5755: 97 67 2b                 a0 = s1 << 0x2b
  5758: 98 77 3d                 a0 = a0 >> 0x3d
  5761: 95 77 f0 00              a0 = a0 + 0xf0
  5765: 78 17 0c                 u8 [sp + 0xc] = a0
  5768: 97 67 2e                 a0 = s1 << 0x2e
  5771: 98 77 3a                 a0 = a0 >> 0x3a
  5774: 95 77 80 00              a0 = a0 + 0x80
  5778: 78 17 0d                 u8 [sp + 0xd] = a0
  5781: 97 67 34                 a0 = s1 << 0x34
  5784: 98 77 3a                 a0 = a0 >> 0x3a
  5787: 95 77 80 00              a0 = a0 + 0x80
  5791: 78 17 0e                 u8 [sp + 0xe] = a0
  5794: 84 67 3f                 a0 = s1 & 0x3f
  5797: 86 77 80 00              a0 = a0 | 0x80
  5801: 78 17 0f                 u8 [sp + 0xf] = a0
  5804: 33 06 04                 s1 = 0x4
  5807: 01                       fallthrough
      :                          @358
  5808: 82 a5 10                 s0 = u64 [a3 + 0x10]
  5811: 82 a7                    a0 = u64 [a3]
  5813: c9 57 07                 a0 = a0 - s0
  5816: ac 67 2d                 jump @362 if a0 <u s1
      :                          @359
  5819: 7b 1a                    u64 [sp] = a3
  5821: 82 a7 08                 a0 = u64 [a3 + 0x8]
  5824: c8 57 07                 a0 = a0 + s0
  5827: 95 18 0c                 a1 = sp + 0xc
  5830: 64 69                    a2 = s1
  5832: 50 10 76 34              ra = 118, jump @365
      :                          @360 [@dyn 59]
  5836: c8 56 06                 s1 = s1 + s0
  5839: 82 17                    a0 = u64 [sp]
  5841: 7b 76 10                 u64 [a0 + 0x10] = s1
  5844: 01                       fallthrough
      :                          @361
  5845: 33 07                    a0 = 0
  5847: 82 10 20                 ra = u64 [sp + 0x20]
  5850: 82 15 18                 s0 = u64 [sp + 0x18]
  5853: 82 16 10                 s1 = u64 [sp + 0x10]
  5856: 95 11 28                 sp = sp + 0x28
  5859: 32 00                    ret
      :                          @362
  5861: 64 a7                    a0 = a3
  5863: 64 58                    a1 = s0
  5865: 64 69                    a2 = s1
  5867: 64 a5                    s0 = a3
  5869: 50 10 78 6e fb           ra = 120, jump @259
      :                          @363 [@dyn 60]
  5874: 64 5a                    a3 = s0
  5876: 82 55 10                 s0 = u64 [s0 + 0x10]
  5879: 28 c4                    jump @359
      :                          @364 [@dyn 61]
  5881: 28 b9 04                 jump @460
      :                          @365
  5884: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  5887: 7b 10 18                 u64 [sp + 0x18] = ra
  5890: 7b 15 10                 u64 [sp + 0x10] = s0
  5893: 7b 16 08                 u64 [sp + 0x8] = s1
  5896: 53 19 10 64              jump @374 if a2 <u 16
      :                          @366
  5900: 8d 7a                    i32 a3 = -a0
  5902: 84 a2 07                 t0 = a3 & 0x7
  5905: c8 27 0b                 a4 = a0 + t0
  5908: 51 02 15                 jump @369 if t0 == 0
      :                          @367
  5911: 64 8c                    a5 = a1
  5913: 64 75                    s0 = a0
  5915: 01                       fallthrough
      :                          @368
  5916: 7c ca                    a3 = u8 [a5]
  5918: 78 5a                    u8 [s0] = a3
  5920: 95 55 01                 s0 = s0 + 0x1
  5923: 95 cc 01                 a5 = a5 + 0x1
  5926: ac b5 f6                 jump @368 if s0 <u a4
      :                          @369
  5929: c8 28 03                 t1 = a1 + t0
  5932: c9 29 02                 t0 = a2 - t0
  5935: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  5938: 84 38 07                 a1 = t1 & 0x7
  5941: c8 4b 0a                 a3 = a4 + t2
  5944: 51 08 3b                 jump @376 if a1 == 0
      :                          @370
  5947: 58 04 4b                 jump @379 if t2 <=s 0
      :                          @371
  5950: 97 38 03                 a1 = t1 << 0x3
  5953: 84 80 38                 ra = a1 & 0x38
  5956: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  5959: 82 c5                    s0 = u64 [a5]
  5961: 8d 88                    i32 a1 = -a1
  5963: 84 88 38                 a1 = a1 & 0x38
  5966: 95 cc 08                 a5 = a5 + 0x8
  5969: 01                       fallthrough
      :                          @372
  5970: 82 c6                    s1 = u64 [a5]
  5972: d0 05 05                 s0 = s0 >> ra
  5975: cf 86 09                 a2 = s1 << a1
  5978: d4 59 09                 a2 = a2 | s0
  5981: 7b b9                    u64 [a4] = a2
  5983: 95 bb 08                 a4 = a4 + 0x8
  5986: 95 cc 08                 a5 = a5 + 0x8
  5989: 64 65                    s0 = s1
  5991: ac ab eb                 jump @372 if a4 <u a3
      :                          @373
  5994: 28 1c                    jump @379
      :                          @374
  5996: 64 7a                    a3 = a0
  5998: 52 09 21                 jump @380 if a2 != 0
      :                          @375
  6001: 28 2f                    jump @382
      :                          @376
  6003: 58 04 13                 jump @379 if t2 <=s 0
      :                          @377
  6006: 64 38                    a1 = t1
  6008: 01                       fallthrough
      :                          @378
  6009: 82 89                    a2 = u64 [a1]
  6011: 7b b9                    u64 [a4] = a2
  6013: 95 bb 08                 a4 = a4 + 0x8
  6016: 95 88 08                 a1 = a1 + 0x8
  6019: ac ab f6                 jump @378 if a4 <u a3
      :                          @379
  6022: c8 43 08                 a1 = t1 + t2
  6025: 84 29 07                 a2 = t0 & 0x7
  6028: 51 09 14                 jump @382 if a2 == 0
      :                          @380
  6031: c8 a9 09                 a2 = a2 + a3
  6034: 01                       fallthrough
      :                          @381
  6035: 7c 8b                    a4 = u8 [a1]
  6037: 78 ab                    u8 [a3] = a4
  6039: 95 aa 01                 a3 = a3 + 0x1
  6042: 95 88 01                 a1 = a1 + 0x1
  6045: ac 9a f6                 jump @381 if a3 <u a2
      :                          @382
  6048: 82 10 18                 ra = u64 [sp + 0x18]
  6051: 82 15 10                 s0 = u64 [sp + 0x10]
  6054: 82 16 08                 s1 = u64 [sp + 0x8]
  6057: 95 11 20                 sp = sp + 0x20
  6060: 32 00                    ret
      :                          @383
  6062: 53 19 10 48              jump @392 if a2 <u 16
      :                          @384
  6066: 8d 7a                    i32 a3 = -a0
  6068: 84 aa 07                 a3 = a3 & 0x7
  6071: c8 a7 0b                 a4 = a0 + a3
  6074: 51 0a 0e                 jump @387 if a3 == 0
      :                          @385
  6077: 64 7c                    a5 = a0
  6079: 01                       fallthrough
      :                          @386
  6080: 78 c8                    u8 [a5] = a1
  6082: 95 cc 01                 a5 = a5 + 0x1
  6085: ac bc fb                 jump @386 if a5 <u a4
      :                          @387
  6088: c9 a9 03                 t1 = a2 - a3
  6091: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  6094: c8 cb 0a                 a3 = a4 + a5
  6097: 58 0c 1d                 jump @390 if a5 <=s 0
      :                          @388
  6100: 84 82 ff 00              t0 = a1 & 0xff
  6104: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  6114: ca 92 0c                 a5 = t0 * a2
  6117: 01                       fallthrough
      :                          @389
  6118: 7b bc                    u64 [a4] = a5
  6120: 95 bb 08                 a4 = a4 + 0x8
  6123: ac ab fb                 jump @389 if a4 <u a3
      :                          @390
  6126: 84 39 07                 a2 = t1 & 0x7
  6129: 52 09 0a                 jump @393 if a2 != 0
      :                          @391
  6132: 28 13                    jump @395
      :                          @392
  6134: 64 7a                    a3 = a0
  6136: 51 09 0f                 jump @395 if a2 == 0
      :                          @393
  6139: c8 a9 09                 a2 = a2 + a3
  6142: 01                       fallthrough
      :                          @394
  6143: 78 a8                    u8 [a3] = a1
  6145: 95 aa 01                 a3 = a3 + 0x1
  6148: ac 9a fb                 jump @394 if a3 <u a2
      :                          @395
  6151: 32 00                    ret
      :                          @396 [@dyn 62]
  6153: 82 77                    a0 = u64 [a0]
  6155: 01                       fallthrough
      :                          @397
  6156: 28                       jump @397
      :                          @398
  6157: 95 11 a8                 sp = sp + 0xffffffffffffffa8
  6160: 7b 10 50                 u64 [sp + 0x50] = ra
  6163: 7b 15 48                 u64 [sp + 0x48] = s0
  6166: 7b 16 40                 u64 [sp + 0x40] = s1
  6169: 82 79                    a2 = u64 [a0]
  6171: 7b 18                    u64 [sp] = a1
  6173: 98 9a 04                 a3 = a2 >> 0x4
  6176: 33 08 27                 a1 = 0x27
  6179: 53 2a 71 02 84 00        jump @401 if a3 <u 625
      :                          @399
  6185: 33 08 27                 a1 = 0x27
  6188: 95 1a 3e                 a3 = sp + 0x3e
  6191: 3a 07 00 00 03           a0 = u64 [0x30000]
  6196: 7b 17 10                 u64 [sp + 0x10] = a0
  6199: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
  6205: 33 00 7b 14              ra = 0x147b
  6209: 33 0c 42 04 01           a5 = 0x10442
  6214: 33 04 ff e0 f5 05        t2 = 0x5f5e0ff
  6220: 33 05 9c                 s0 = 0xffffffffffffff9c
  6223: 01                       fallthrough
      :                          @400
  6224: 64 93                    t1 = a2
  6226: 82 17 10                 a0 = u64 [sp + 0x10]
  6229: d6 79 09                 a2 = a2 mulhu a0
  6232: 98 99 0b                 a2 = a2 >> 0xb
  6235: 82 17 08                 a0 = u64 [sp + 0x8]
  6238: c0 79 0b                 i32 a4 = a2 * a0
  6241: c8 3b 06                 s1 = a4 + t1
  6244: 97 6b 30                 a4 = s1 << 0x30
  6247: 98 bb 32                 a4 = a4 >> 0x32
  6250: ca 0b 0b                 a4 = a4 * ra
  6253: 98 b7 11                 a0 = a4 >> 0x11
  6256: 98 bb 10                 a4 = a4 >> 0x10
  6259: 84 bb fe 07              a4 = a4 & 0x7fe
  6263: ca 57 07                 a0 = a0 * s0
  6266: c8 67 07                 a0 = a0 + s1
  6269: 97 77 31                 a0 = a0 << 0x31
  6272: 98 77 30                 a0 = a0 >> 0x30
  6275: c8 cb 0b                 a4 = a4 + a5
  6278: 7c b6                    s1 = u8 [a4]
  6280: 7c bb 01                 a4 = u8 [a4 + 0x1]
  6283: c8 c7 07                 a0 = a0 + a5
  6286: 7c 72 01                 t0 = u8 [a0 + 0x1]
  6289: 7c 77                    a0 = u8 [a0]
  6291: 78 ab ff                 u8 [a3 + 0xffffffffffffffff] = a4
  6294: 78 a6 fe                 u8 [a3 + 0xfffffffffffffffe] = s1
  6297: 78 a2 01                 u8 [a3 + 0x1] = t0
  6300: 78 a7                    u8 [a3] = a0
  6302: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
  6305: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
  6308: ac 34 ac                 jump @400 if t2 <u t1
      :                          @401
  6311: 54 19 63 3b              jump @403 if a2 <=u 99
      :                          @402
  6315: 97 97 30                 a0 = a2 << 0x30
  6318: 98 77 32                 a0 = a0 >> 0x32
  6321: 96 77 7b 14              a0 = a0 * 0x147b
  6325: 98 77 11                 a0 = a0 >> 0x11
  6328: 96 7a 9c                 a3 = a0 * 0xffffffffffffff9c
  6331: c8 a9 09                 a2 = a2 + a3
  6334: 97 99 31                 a2 = a2 << 0x31
  6337: 98 99 30                 a2 = a2 >> 0x30
  6340: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  6343: 33 0a 42 04 01           a3 = 0x10442
  6348: c8 a9 09                 a2 = a2 + a3
  6351: 7c 9a 01                 a3 = u8 [a2 + 0x1]
  6354: 7c 99                    a2 = u8 [a2]
  6356: 95 1b 19                 a4 = sp + 0x19
  6359: c8 8b 0b                 a4 = a4 + a1
  6362: 78 ba 01                 u8 [a4 + 0x1] = a3
  6365: 78 b9                    u8 [a4] = a2
  6367: 64 79                    a2 = a0
  6369: 01                       fallthrough
      :                          @403
  6370: 55 19 0a 14              jump @405 if a2 >=u 10
      :                          @404
  6374: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  6377: 95 17 19                 a0 = sp + 0x19
  6380: c8 87 07                 a0 = a0 + a1
  6383: 83 99 30                 i32 a2 = a2 + 0x30
  6386: 78 79                    u8 [a0] = a2
  6388: 28 21                    jump @406
      :                          @405
  6390: 97 99 01                 a2 = a2 << 0x1
  6393: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  6396: 33 07 42 04 01           a0 = 0x10442
  6401: c8 97 07                 a0 = a0 + a2
  6404: 7c 79 01                 a2 = u8 [a0 + 0x1]
  6407: 7c 77                    a0 = u8 [a0]
  6409: 95 1a 19                 a3 = sp + 0x19
  6412: c8 8a 0a                 a3 = a3 + a1
  6415: 78 a9 01                 u8 [a3 + 0x1] = a2
  6418: 78 a7                    u8 [a3] = a0
  6420: 01                       fallthrough
      :                          @406
  6421: 95 1a 19                 a3 = sp + 0x19
  6424: c8 8a 0a                 a3 = a3 + a1
  6427: 9a 8b 27                 a4 = 0x27 - a1
  6430: 33 08 40 04 01           a1 = 0x10440
  6435: 82 17                    a0 = u64 [sp]
  6437: 33 09                    a2 = 0
  6439: 50 10 7e 12              ra = 126, jump @408
      :                          @407 [@dyn 63]
  6443: 82 10 50                 ra = u64 [sp + 0x50]
  6446: 82 15 48                 s0 = u64 [sp + 0x48]
  6449: 82 16 40                 s1 = u64 [sp + 0x40]
  6452: 95 11 58                 sp = sp + 0x58
  6455: 32 00                    ret
      :                          @408
  6457: 95 11 98                 sp = sp + 0xffffffffffffff98
  6460: 7b 10 60                 u64 [sp + 0x60] = ra
  6463: 7b 15 58                 u64 [sp + 0x58] = s0
  6466: 7b 16 50                 u64 [sp + 0x50] = s1
  6469: 80 73 34                 t1 = u32 [a0 + 0x34]
  6472: 7b 1a 20                 u64 [sp + 0x20] = a3
  6475: 64 9c                    a5 = a2
  6477: 84 36 01                 s1 = t1 & 0x1
  6480: 33 02 2b                 t0 = 0x2b
  6483: 33 09 00 00 11           a2 = 0x110000
  6488: 84 3a 04                 a3 = t1 & 0x4
  6491: 7b 1b 28                 u64 [sp + 0x28] = a4
  6494: c8 b6 04                 t2 = s1 + a4
  6497: 7b 1c 30                 u64 [sp + 0x30] = a5
  6500: 52 0a 10                 jump @411 if a3 != 0
      :                          @409
  6503: 49 11 38                 u64 [sp + 56] = 0
  6506: 82 78                    a1 = u64 [a0]
  6508: 94 69 2b                 a2 = 0x2b if s1 != 0
  6511: 52 08 35                 jump @415 if a1 != 0
      :                          @410
  6514: 28 56                    jump @420
      :                          @411
  6516: 7b 18 38                 u64 [sp + 0x38] = a1
  6519: 33 09                    a2 = 0
  6521: 51 0c 1b                 jump @414 if a5 == 0
      :                          @412
  6524: 82 1b 38                 a4 = u64 [sp + 0x38]
  6527: 01                       fallthrough
      :                          @413
  6528: 7d b5                    s0 = i8 [a4]
  6530: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
  6533: 85 5a 01                 a3 = s0 ^ 0x1
  6536: c8 a9 09                 a2 = a2 + a3
  6539: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  6542: 95 bb 01                 a4 = a4 + 0x1
  6545: 52 0c ef                 jump @413 if a5 != 0
      :                          @414
  6548: c8 94 04                 t2 = t2 + a2
  6551: 33 09 00 00 11           a2 = 0x110000
  6556: 82 78                    a1 = u64 [a0]
  6558: db 62 09                 a2 = t0 if s1 != 0
  6561: 51 08 27                 jump @420 if a1 == 0
      :                          @415
  6564: 82 7a 08                 a3 = u64 [a0 + 0x8]
  6567: ae a4 21                 jump @420 if t2 >=u a3
      :                          @416
  6570: 84 38 08                 a1 = t1 & 0x8
  6573: 52 08 51                 jump @423 if a1 != 0
      :                          @417
  6576: 7c 76 38                 s1 = u8 [a0 + 0x38]
  6579: c9 4a 0a                 a3 = a3 - t2
  6582: 7b 19 18                 u64 [sp + 0x18] = a2
  6585: 5a 16 01 a0 00           jump @430 if s1 >s 1
      :                          @418
  6590: 52 06 ad 00              jump @432 if s1 != 0
      :                          @419
  6594: 7b 1a 10                 u64 [sp + 0x10] = a3
  6597: 28 ac 00                 jump @433
      :                          @420
  6600: 82 75 20                 s0 = u64 [a0 + 0x20]
  6603: 82 76 28                 s1 = u64 [a0 + 0x28]
  6606: 64 57                    a0 = s0
  6608: 64 68                    a1 = s1
  6610: 82 1a 38                 a3 = u64 [sp + 0x38]
  6613: 82 1b 30                 a4 = u64 [sp + 0x30]
  6616: 50 20 80 00 75 01        ra = 128, jump @453
      :                          @421 [@dyn 64]
  6622: 33 08 01                 a1 = 0x1
  6625: 52 07 be 00              jump @438 if a0 != 0
      :                          @422
  6629: 82 6c 18                 a5 = u64 [s1 + 0x18]
  6632: 64 57                    a0 = s0
  6634: 82 18 20                 a1 = u64 [sp + 0x20]
  6637: 82 19 28                 a2 = u64 [sp + 0x28]
  6640: 82 10 60                 ra = u64 [sp + 0x60]
  6643: 82 15 58                 s0 = u64 [sp + 0x58]
  6646: 82 16 50                 s1 = u64 [sp + 0x50]
  6649: 95 11 68                 sp = sp + 0x68
  6652: 32 0c                    jump [a5]
      :                          @423
  6654: 7b 1a 40                 u64 [sp + 0x40] = a3
  6657: 64 45                    s0 = t2
  6659: 81 78 30                 a1 = i32 [a0 + 0x30]
  6662: 7b 18 10                 u64 [sp + 0x10] = a1
  6665: 7c 7a 38                 a3 = u8 [a0 + 0x38]
  6668: 7b 1a 08                 u64 [sp + 0x8] = a3
  6671: 82 7a 20                 a3 = u64 [a0 + 0x20]
  6674: 82 78 28                 a1 = u64 [a0 + 0x28]
  6677: 48 17 30 30              u32 [a0 + 48] = 0x30
  6681: 7b 17                    u64 [sp] = a0
  6683: 46 17 38 01              u8 [a0 + 56] = 0x1
  6687: 7b 1a 48                 u64 [sp + 0x48] = a3
  6690: 64 a7                    a0 = a3
  6692: 64 86                    s1 = a1
  6694: 82 1a 38                 a3 = u64 [sp + 0x38]
  6697: 82 1b 30                 a4 = u64 [sp + 0x30]
  6700: 50 20 82 00 21 01        ra = 130, jump @453
      :                          @424 [@dyn 65]
  6706: 52 07 69                 jump @437 if a0 != 0
      :                          @425
  6709: 82 17 40                 a0 = u64 [sp + 0x40]
  6712: c9 57 05                 s0 = a0 - s0
  6715: 95 55 01                 s0 = s0 + 0x1
  6718: 01                       fallthrough
      :                          @426
  6719: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  6722: 51 05 cb 00              jump @448 if s0 == 0
      :                          @427
  6726: 82 69 20                 a2 = u64 [s1 + 0x20]
  6729: 33 08 30                 a1 = 0x30
  6732: 82 17 48                 a0 = u64 [sp + 0x48]
  6735: b4 90 02 84 00           ra = 132, jump [a2]
      :                          @428 [@dyn 66]
  6740: 51 07 eb                 jump @426 if a0 == 0
      :                          @429
  6743: 28 44                    jump @437
      :                          @430
  6745: 52 16 02 12              jump @432 if s1 != 2
      :                          @431
  6749: 98 a6 01                 s1 = a3 >> 0x1
  6752: 95 a8 01                 a1 = a3 + 0x1
  6755: 98 88 01                 a1 = a1 >> 0x1
  6758: 7b 18 10                 u64 [sp + 0x10] = a1
  6761: 28 08                    jump @433
      :                          @432
  6763: 64 a6                    s1 = a3
  6765: 49 11 10                 u64 [sp + 16] = 0
  6768: 01                       fallthrough
      :                          @433
  6769: 82 78 20                 a1 = u64 [a0 + 0x20]
  6772: 7b 18 48                 u64 [sp + 0x48] = a1
  6775: 82 75 28                 s0 = u64 [a0 + 0x28]
  6778: 81 77 30                 a0 = i32 [a0 + 0x30]
  6781: 7b 17 40                 u64 [sp + 0x40] = a0
  6784: 95 66 01                 s1 = s1 + 0x1
  6787: 01                       fallthrough
      :                          @434
  6788: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  6791: 51 06 28                 jump @439 if s1 == 0
      :                          @435
  6794: 82 59 20                 a2 = u64 [s0 + 0x20]
  6797: 82 17 48                 a0 = u64 [sp + 0x48]
  6800: 82 18 40                 a1 = u64 [sp + 0x40]
  6803: b4 90 02 86 00           ra = 134, jump [a2]
      :                          @436 [@dyn 67]
  6808: 51 07 ec                 jump @434 if a0 == 0
      :                          @437
  6811: 33 08 01                 a1 = 0x1
  6814: 01                       fallthrough
      :                          @438
  6815: 64 87                    a0 = a1
  6817: 82 10 60                 ra = u64 [sp + 0x60]
  6820: 82 15 58                 s0 = u64 [sp + 0x58]
  6823: 82 16 50                 s1 = u64 [sp + 0x50]
  6826: 95 11 68                 sp = sp + 0x68
  6829: 32 00                    ret
      :                          @439
  6831: 82 16 48                 s1 = u64 [sp + 0x48]
  6834: 64 67                    a0 = s1
  6836: 64 58                    a1 = s0
  6838: 82 19 18                 a2 = u64 [sp + 0x18]
  6841: 82 1a 38                 a3 = u64 [sp + 0x38]
  6844: 82 1b 30                 a4 = u64 [sp + 0x30]
  6847: 50 20 88 00 8e 00        ra = 136, jump @453
      :                          @440 [@dyn 68]
  6853: 33 08 01                 a1 = 0x1
  6856: 52 07 d7                 jump @438 if a0 != 0
      :                          @441
  6859: 82 5a 18                 a3 = u64 [s0 + 0x18]
  6862: 64 67                    a0 = s1
  6864: 82 18 20                 a1 = u64 [sp + 0x20]
  6867: 82 19 28                 a2 = u64 [sp + 0x28]
  6870: b4 a0 02 8a 00           ra = 138, jump [a3]
      :                          @442 [@dyn 69]
  6875: 33 08 01                 a1 = 0x1
  6878: 52 07 c1                 jump @438 if a0 != 0
      :                          @443
  6881: 82 17 10                 a0 = u64 [sp + 0x10]
  6884: 9a 77                    a0 = -a0
  6886: 7b 17 38                 u64 [sp + 0x38] = a0
  6889: 33 06 ff                 s1 = 0xffffffffffffffff
  6892: 01                       fallthrough
      :                          @444
  6893: 82 17 38                 a0 = u64 [sp + 0x38]
  6896: c8 67 07                 a0 = a0 + s1
  6899: 51 17 ff 45              jump @451 if a0 == 4294967295
      :                          @445
  6903: 82 59 20                 a2 = u64 [s0 + 0x20]
  6906: 82 17 48                 a0 = u64 [sp + 0x48]
  6909: 82 18 40                 a1 = u64 [sp + 0x40]
  6912: b4 90 02 8c 00           ra = 140, jump [a2]
      :                          @446 [@dyn 70]
  6917: 95 66 01                 s1 = s1 + 0x1
  6920: 51 07 e5                 jump @444 if a0 == 0
      :                          @447
  6923: 28 39                    jump @452
      :                          @448
  6925: 82 6a 18                 a3 = u64 [s1 + 0x18]
  6928: 82 17 48                 a0 = u64 [sp + 0x48]
  6931: 82 18 20                 a1 = u64 [sp + 0x20]
  6934: 82 19 28                 a2 = u64 [sp + 0x28]
  6937: b4 a0 02 8e 00           ra = 142, jump [a3]
      :                          @449 [@dyn 71]
  6942: 33 08 01                 a1 = 0x1
  6945: 52 07 7e ff              jump @438 if a0 != 0
      :                          @450
  6949: 33 08                    a1 = 0
  6951: 82 16                    s1 = u64 [sp]
  6953: 82 17 10                 a0 = u64 [sp + 0x10]
  6956: 7a 67 30                 u32 [s1 + 0x30] = a0
  6959: 82 17 08                 a0 = u64 [sp + 0x8]
  6962: 78 67 38                 u8 [s1 + 0x38] = a0
  6965: 28 6a ff                 jump @438
      :                          @451
  6968: 82 16 10                 s1 = u64 [sp + 0x10]
  6971: 82 17 10                 a0 = u64 [sp + 0x10]
  6974: d8 76 08                 a1 = s1 <u a0
  6977: 28 5e ff                 jump @438
      :                          @452
  6980: 82 17 10                 a0 = u64 [sp + 0x10]
  6983: d8 76 08                 a1 = s1 <u a0
  6986: 28 55 ff                 jump @438
      :                          @453
  6989: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  6992: 7b 10 20                 u64 [sp + 0x20] = ra
  6995: 7b 15 18                 u64 [sp + 0x18] = s0
  6998: 7b 16 10                 u64 [sp + 0x10] = s1
  7001: 83 9c                    i32 a5 = a2 + 0
  7003: 33 02 00 00 11           t0 = 0x110000
  7008: 64 a6                    s1 = a3
  7010: 64 85                    s0 = a1
  7012: 64 7a                    a3 = a0
  7014: aa 2c 21                 jump @456 if a5 == t0
      :                          @454
  7017: 82 5c 20                 a5 = u64 [s0 + 0x20]
  7020: 64 a7                    a0 = a3
  7022: 64 98                    a1 = a2
  7024: 7b 1b 08                 u64 [sp + 0x8] = a4
  7027: 7b 1a                    u64 [sp] = a3
  7029: b4 c0 02 90 00           ra = 144, jump [a5]
      :                          @455 [@dyn 72]
  7034: 82 1a                    a3 = u64 [sp]
  7036: 82 1b 08                 a4 = u64 [sp + 0x8]
  7039: 64 78                    a1 = a0
  7041: 33 07 01                 a0 = 0x1
  7044: 52 08 20                 jump @459 if a1 != 0
      :                          @456
  7047: 51 06 1a                 jump @458 if s1 == 0
      :                          @457
  7050: 82 5c 18                 a5 = u64 [s0 + 0x18]
  7053: 64 a7                    a0 = a3
  7055: 64 68                    a1 = s1
  7057: 64 b9                    a2 = a4
  7059: 82 10 20                 ra = u64 [sp + 0x20]
  7062: 82 15 18                 s0 = u64 [sp + 0x18]
  7065: 82 16 10                 s1 = u64 [sp + 0x10]
  7068: 95 11 28                 sp = sp + 0x28
  7071: 32 0c                    jump [a5]
      :                          @458
  7073: 33 07                    a0 = 0
  7075: 01                       fallthrough
      :                          @459
  7076: 82 10 20                 ra = u64 [sp + 0x20]
  7079: 82 15 18                 s0 = u64 [sp + 0x18]
  7082: 82 16 10                 s1 = u64 [sp + 0x10]
  7085: 95 11 28                 sp = sp + 0x28
  7088: 32 00                    ret
      :                          @460
  7090: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  7094: 7b 10 80 00              u64 [sp + 0x80] = ra
  7098: 7b 15 78                 u64 [sp + 0x78] = s0
  7101: 7b 16 70                 u64 [sp + 0x70] = s1
  7104: 49 11 60 20              u64 [sp + 96] = 0x20
  7108: 33 09 03                 a2 = 0x3
  7111: 78 19 68                 u8 [sp + 0x68] = a2
  7114: 49 11 30                 u64 [sp + 48] = 0
  7117: 49 11 40                 u64 [sp + 64] = 0
  7120: 82 86 20                 s1 = u64 [a1 + 0x20]
  7123: 7b 17 50                 u64 [sp + 0x50] = a0
  7126: 33 07 10 04 01           a0 = 0x10410
  7131: 7b 17 58                 u64 [sp + 0x58] = a0
  7134: 51 06 08 01              jump @482 if s1 == 0
      :                          @461
  7138: 82 87 28                 a0 = u64 [a1 + 0x28]
  7141: 51 07 77 01              jump @492 if a0 == 0
      :                          @462
  7145: 33 09                    a2 = 0
  7147: 82 85                    s0 = u64 [a1]
  7149: 7b 18 08                 u64 [sp + 0x8] = a1
  7152: 82 88 10                 a1 = u64 [a1 + 0x10]
  7155: 7b 18 18                 u64 [sp + 0x18] = a1
  7158: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  7161: 97 88 03                 a1 = a1 << 0x3
  7164: 98 88 03                 a1 = a1 >> 0x3
  7167: 95 88 01                 a1 = a1 + 0x1
  7170: 7b 18                    u64 [sp] = a1
  7172: 95 55 08                 s0 = s0 + 0x8
  7175: 96 78 38                 a1 = a0 * 0x38
  7178: 95 66 18                 s1 = s1 + 0x18
  7181: 33 07 7c                 a0 = 0x7c
  7184: 7b 17 10                 u64 [sp + 0x10] = a0
  7187: 01                       fallthrough
      :                          @463
  7188: 7b 18 20                 u64 [sp + 0x20] = a1
  7191: 7b 19 28                 u64 [sp + 0x28] = a2
  7194: 82 59                    a2 = u64 [s0]
  7196: 51 09 18                 jump @466 if a2 == 0
      :                          @464
  7199: 82 1a 58                 a3 = u64 [sp + 0x58]
  7202: 82 17 50                 a0 = u64 [sp + 0x50]
  7205: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  7208: 82 aa 18                 a3 = u64 [a3 + 0x18]
  7211: b4 a0 02 92 00           ra = 146, jump [a3]
      :                          @465 [@dyn 73]
  7216: 52 07 52 01              jump @495 if a0 != 0
      :                          @466
  7220: 81 67 10                 a0 = i32 [s1 + 0x10]
  7223: 7a 17 60                 u32 [sp + 0x60] = a0
  7226: 7c 67 18                 a0 = u8 [s1 + 0x18]
  7229: 78 17 68                 u8 [sp + 0x68] = a0
  7232: 81 67 14                 a0 = i32 [s1 + 0x14]
  7235: 7a 17 64                 u32 [sp + 0x64] = a0
  7238: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  7241: 82 67                    a0 = u64 [s1]
  7243: 51 08 26                 jump @471 if a1 == 0
      :                          @467
  7246: 52 18 01 16              jump @469 if a1 != 1
      :                          @468
  7250: 97 77 04                 a0 = a0 << 0x4
  7253: 82 18 18                 a1 = u64 [sp + 0x18]
  7256: c8 87 07                 a0 = a0 + a1
  7259: 82 78 08                 a1 = u64 [a0 + 0x8]
  7262: 82 19 10                 a2 = u64 [sp + 0x10]
  7265: aa 98 07                 jump @470 if a1 == a2
      :                          @469
  7268: 33 08                    a1 = 0
  7270: 28 0f                    jump @472
      :                          @470
  7272: 82 77                    a0 = u64 [a0]
  7274: 82 77                    a0 = u64 [a0]
  7276: 33 08 01                 a1 = 0x1
  7279: 28 06                    jump @472
      :                          @471
  7281: 33 08 01                 a1 = 0x1
  7284: 01                       fallthrough
      :                          @472
  7285: 7b 18 30                 u64 [sp + 0x30] = a1
  7288: 7b 17 38                 u64 [sp + 0x38] = a0
  7291: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  7294: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  7297: 51 08 26                 jump @477 if a1 == 0
      :                          @473
  7300: 52 18 01 16              jump @475 if a1 != 1
      :                          @474
  7304: 97 77 04                 a0 = a0 << 0x4
  7307: 82 18 18                 a1 = u64 [sp + 0x18]
  7310: c8 87 07                 a0 = a0 + a1
  7313: 82 78 08                 a1 = u64 [a0 + 0x8]
  7316: 82 19 10                 a2 = u64 [sp + 0x10]
  7319: aa 98 07                 jump @476 if a1 == a2
      :                          @475
  7322: 33 08                    a1 = 0
  7324: 28 0f                    jump @478
      :                          @476
  7326: 82 77                    a0 = u64 [a0]
  7328: 82 77                    a0 = u64 [a0]
  7330: 33 08 01                 a1 = 0x1
  7333: 28 06                    jump @478
      :                          @477
  7335: 33 08 01                 a1 = 0x1
  7338: 01                       fallthrough
      :                          @478
  7339: 7b 18 40                 u64 [sp + 0x40] = a1
  7342: 7b 17 48                 u64 [sp + 0x48] = a0
  7345: 82 67 08                 a0 = u64 [s1 + 0x8]
  7348: 97 77 04                 a0 = a0 << 0x4
  7351: 82 18 18                 a1 = u64 [sp + 0x18]
  7354: c8 78 08                 a1 = a1 + a0
  7357: 82 87                    a0 = u64 [a1]
  7359: 82 89 08                 a2 = u64 [a1 + 0x8]
  7362: 95 18 30                 a1 = sp + 0x30
  7365: b4 90 02 94 00           ra = 148, jump [a2]
      :                          @479 [@dyn 74]
  7370: 52 07 b8 00              jump @495 if a0 != 0
      :                          @480
  7374: 95 55 10                 s0 = s0 + 0x10
  7377: 82 18 20                 a1 = u64 [sp + 0x20]
  7380: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  7383: 95 66 38                 s1 = s1 + 0x38
  7386: 82 19 28                 a2 = u64 [sp + 0x28]
  7389: 95 99 01                 a2 = a2 + 0x1
  7392: 52 08 34 ff              jump @463 if a1 != 0
      :                          @481
  7396: 28 6b                    jump @490
      :                          @482
  7398: 82 87 18                 a0 = u64 [a1 + 0x18]
  7401: 51 07 73                 jump @492 if a0 == 0
      :                          @483
  7404: 82 85 10                 s0 = u64 [a1 + 0x10]
  7407: 33 0a                    a3 = 0
  7409: 97 79 04                 a2 = a0 << 0x4
  7412: c8 59 09                 a2 = a2 + s0
  7415: 7b 19 20                 u64 [sp + 0x20] = a2
  7418: 7b 18 08                 u64 [sp + 0x8] = a1
  7421: 82 86                    s1 = u64 [a1]
  7423: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  7426: 97 77 04                 a0 = a0 << 0x4
  7429: 98 77 04                 a0 = a0 >> 0x4
  7432: 95 77 01                 a0 = a0 + 0x1
  7435: 7b 17                    u64 [sp] = a0
  7437: 95 66 08                 s1 = s1 + 0x8
  7440: 01                       fallthrough
      :                          @484
  7441: 7b 1a 28                 u64 [sp + 0x28] = a3
  7444: 82 69                    a2 = u64 [s1]
  7446: 51 09 17                 jump @487 if a2 == 0
      :                          @485
  7449: 82 1a 58                 a3 = u64 [sp + 0x58]
  7452: 82 17 50                 a0 = u64 [sp + 0x50]
  7455: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  7458: 82 aa 18                 a3 = u64 [a3 + 0x18]
  7461: b4 a0 02 96 00           ra = 150, jump [a3]
      :                          @486 [@dyn 75]
  7466: 52 07 58                 jump @495 if a0 != 0
      :                          @487
  7469: 82 57                    a0 = u64 [s0]
  7471: 82 59 08                 a2 = u64 [s0 + 0x8]
  7474: 95 18 30                 a1 = sp + 0x30
  7477: b4 90 02 98 00           ra = 152, jump [a2]
      :                          @488 [@dyn 76]
  7482: 52 07 48                 jump @495 if a0 != 0
      :                          @489
  7485: 95 66 10                 s1 = s1 + 0x10
  7488: 95 55 10                 s0 = s0 + 0x10
  7491: 82 1a 28                 a3 = u64 [sp + 0x28]
  7494: 95 aa 01                 a3 = a3 + 0x1
  7497: 82 17 20                 a0 = u64 [sp + 0x20]
  7500: ab 75 c5                 jump @484 if s0 != a0
      :                          @490
  7503: 82 18 08                 a1 = u64 [sp + 0x8]
  7506: 82 1a                    a3 = u64 [sp]
  7508: 82 87 08                 a0 = u64 [a1 + 0x8]
  7511: ac 7a 0d                 jump @493 if a3 <u a0
      :                          @491
  7514: 28 2d                    jump @496
      :                          @492
  7516: 33 0a                    a3 = 0
  7518: 82 87 08                 a0 = u64 [a1 + 0x8]
  7521: 54 07 26                 jump @496 if a0 <=u 0
      :                          @493
  7524: 82 87                    a0 = u64 [a1]
  7526: 97 a8 04                 a1 = a3 << 0x4
  7529: c8 87 09                 a2 = a0 + a1
  7532: 82 1a 58                 a3 = u64 [sp + 0x58]
  7535: 82 17 50                 a0 = u64 [sp + 0x50]
  7538: 82 98                    a1 = u64 [a2]
  7540: 82 99 08                 a2 = u64 [a2 + 0x8]
  7543: 82 aa 18                 a3 = u64 [a3 + 0x18]
  7546: b4 a0 02 9a 00           ra = 154, jump [a3]
      :                          @494 [@dyn 77]
  7551: 51 07 08                 jump @496 if a0 == 0
      :                          @495
  7554: 33 07 01                 a0 = 0x1
  7557: 28 05                    jump @497
      :                          @496
  7559: 33 07                    a0 = 0
  7561: 01                       fallthrough
      :                          @497
  7562: 82 10 80 00              ra = u64 [sp + 0x80]
  7566: 82 15 78                 s0 = u64 [sp + 0x78]
  7569: 82 16 70                 s1 = u64 [sp + 0x70]
  7572: 95 11 88 00              sp = sp + 0x88
  7576: 32 00                    ret
      :                          @498
  7578: 51 08 9b 00              jump @519 if a1 == 0
      :                          @499
  7582: 64 79                    a2 = a0
  7584: 7c 77                    a0 = u8 [a0]
  7586: 51 07 91 00              jump @518 if a0 == 0
      :                          @500
  7590: 51 27 ff 00 90 00        jump @520 if a0 == 255
      :                          @501
  7596: 6c 7a                    a3 = sext.b a0
  7598: 57 0a 09                 jump @503 if a3 <s 0
      :                          @502
  7601: 33 0a                    a3 = 0
  7603: 33 08                    a1 = 0
  7605: 28 73                    jump @517
      :                          @503
  7607: 55 27 c0 00 0d           jump @505 if a0 >=u 192
      :                          @504
  7612: 33 0a 01                 a3 = 0x1
  7615: 33 0b 80                 a4 = 0xffffffffffffff80
  7618: 28 4a                    jump @514
      :                          @505
  7620: 55 27 e0 00 0e           jump @507 if a0 >=u 224
      :                          @506
  7625: 33 0a 02                 a3 = 0x2
  7628: 33 0b 40 ff              a4 = 0xffffffffffffff40
  7632: 28 3c                    jump @514
      :                          @507
  7634: 55 27 f0 00 0e           jump @509 if a0 >=u 240
      :                          @508
  7639: 33 0a 03                 a3 = 0x3
  7642: 33 0b 20 ff              a4 = 0xffffffffffffff20
  7646: 28 2e                    jump @514
      :                          @509
  7648: 55 27 f8 00 0e           jump @511 if a0 >=u 248
      :                          @510
  7653: 33 0a 04                 a3 = 0x4
  7656: 33 0b 10 ff              a4 = 0xffffffffffffff10
  7660: 28 20                    jump @514
      :                          @511
  7662: 55 27 fc 00 0e           jump @513 if a0 >=u 252
      :                          @512
  7667: 33 0a 05                 a3 = 0x5
  7670: 33 0b 08 ff              a4 = 0xffffffffffffff08
  7674: 28 12                    jump @514
      :                          @513
  7676: 88 7a fe 00              a3 = a0 <u 0xfe
  7680: 33 0b 04 ff              a4 = 0xffffffffffffff04
  7684: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  7688: 85 aa 07                 a3 = a3 ^ 0x7
  7691: 01                       fallthrough
      :                          @514
  7692: ae 8a 2b                 jump @521 if a3 >=u a1
      :                          @515
  7695: 33 08                    a1 = 0
  7697: c8 b7 07                 a0 = a0 + a4
  7700: 64 ab                    a4 = a3
  7702: 01                       fallthrough
      :                          @516
  7703: c8 b9 0c                 a5 = a2 + a4
  7706: 7c cc                    a5 = u8 [a5]
  7708: 97 88 08                 a1 = a1 << 0x8
  7711: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  7714: d4 c8 08                 a1 = a1 | a5
  7717: 52 0b f2                 jump @516 if a4 != 0
      :                          @517
  7720: 8a a9 03                 i32 a2 = a3 << 0x3
  7723: cf 97 07                 a0 = a0 << a2
  7726: c8 87 07                 a0 = a0 + a1
  7729: 32 00                    ret
      :                          @518
  7731: 32 00                    ret
      :                          @519
  7733: 00                       trap
      :                          @520
  7734: 00                       trap
      :                          @521
  7735: 00                       trap
