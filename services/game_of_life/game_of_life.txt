// RO data = 3670/3672 bytes
// RW data = 16/1052720 bytes
// Stack size = 1048576 bytes
// RO data = [0, 16, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 114, 101, 102, 105, 110, 101, 32, 99, 97, 108, 108, 101, 100, 32, 119, 105, 116, 104, 32, 119, 105, 95, 115, 101, 114, 118, 105, 99, 101, 95, 105, 110, 100, 101, 120, 61, 32, 119, 105, 95, 112, 97, 121, 108, 111, 97, 100, 95, 115, 116, 97, 114, 116, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 119, 105, 95, 112, 97, 121, 108, 111, 97, 100, 95, 108, 101, 110, 103, 116, 104, 61, 0, 0, 0, 0, 0, 0, 0, 8, 0, 1, 0, 0, 0, 0, 0, 44, 0, 0, 0, 0, 0, 0, 0, 52, 0, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 78, 0, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 70, 105, 114, 115, 116, 32, 114, 111, 117, 110, 100, 32, 115, 101, 116, 117, 112, 58, 32, 119, 105, 95, 112, 97, 121, 108, 111, 97, 100, 95, 108, 101, 110, 103, 116, 104, 61, 0, 0, 0, 152, 0, 1, 0, 0, 0, 0, 0, 45, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 115, 116, 101, 112, 95, 110, 61, 32, 99, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 32, 111, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 32, 119, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 80, 97, 114, 101, 110, 116, 58, 32, 112, 97, 103, 101, 115, 32, 109, 61, 32, 110, 117, 109, 95, 111, 102, 95, 103, 108, 111, 100, 101, 114, 115, 61, 44, 32, 109, 97, 99, 104, 105, 110, 101, 95, 105, 110, 100, 101, 120, 61, 32, 116, 111, 116, 97, 108, 95, 101, 120, 101, 99, 117, 116, 105, 111, 110, 95, 115, 116, 101, 112, 115, 61, 0, 0, 216, 0, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 39, 1, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 71, 1, 1, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 122, 61, 32, 115, 61, 32, 111, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 119, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 144, 1, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 154, 1, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 157, 1, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 247, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 174, 1, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 7, 1, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 191, 1, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 231, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 109, 97, 99, 104, 105, 110, 101, 32, 110, 101, 119, 32, 105, 110, 100, 101, 120, 61, 0, 0, 0, 0, 0, 0, 80, 2, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 83, 116, 97, 114, 116, 70, 101, 116, 99, 104, 80, 97, 114, 101, 110, 116, 58, 32, 102, 101, 116, 99, 104, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 32, 102, 101, 116, 99, 104, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 146, 2, 1, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 174, 2, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 102, 105, 114, 115, 116, 32, 115, 101, 103, 109, 101, 110, 116, 32, 109, 61, 32, 112, 97, 103, 101, 95, 105, 100, 61, 0, 0, 0, 0, 0, 0, 0, 224, 2, 1, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 248, 2, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 44, 32, 112, 97, 103, 101, 95, 105, 100, 61, 32, 112, 97, 103, 101, 115, 95, 114, 101, 115, 117, 108, 116, 61, 23, 1, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 40, 3, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 50, 3, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 112, 111, 107, 101, 32, 109, 61, 32, 111, 61, 32, 122, 61, 32, 112, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 0, 112, 3, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 154, 1, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 127, 3, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 130, 3, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 133, 3, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 102, 101, 116, 99, 104, 32, 114, 101, 116, 117, 114, 110, 101, 100, 32, 78, 79, 78, 69, 44, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 0, 0, 0, 0, 0, 232, 3, 1, 0, 0, 0, 0, 0, 43, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 105, 110, 118, 111, 107, 101, 32, 32, 105, 110, 118, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 32, 111, 109, 101, 103, 97, 95, 56, 61, 0, 40, 4, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 55, 4, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 70, 4, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 101, 120, 105, 116, 105, 110, 103, 32, 105, 110, 118, 111, 107, 101, 32, 108, 111, 111, 112, 32, 105, 110, 118, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 0, 128, 4, 1, 0, 0, 0, 0, 0, 42, 0, 0, 0, 0, 0, 0, 0, 70, 4, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 103, 97, 115, 32, 117, 115, 101, 100, 61, 32, 99, 104, 105, 108, 100, 95, 118, 109, 95, 114, 101, 103, 105, 115, 116, 101, 114, 115, 61, 0, 0, 0, 208, 4, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 225, 4, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 99, 104, 105, 108, 100, 95, 118, 109, 95, 114, 101, 103, 105, 115, 116, 101, 114, 115, 32, 97, 102, 116, 101, 114, 32, 105, 110, 118, 111, 107, 101, 61, 24, 5, 1, 0, 0, 0, 0, 0, 40, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 100, 111, 110, 101, 32, 119, 105, 116, 104, 32, 99, 104, 105, 108, 100, 32, 86, 77, 44, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 0, 0, 0, 0, 0, 0, 80, 5, 1, 0, 0, 0, 0, 0, 42, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 112, 97, 114, 115, 101, 95, 115, 116, 97, 110, 100, 97, 114, 100, 95, 112, 114, 111, 103, 114, 97, 109, 95, 105, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 95, 97, 114, 103, 115, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 114, 97, 119, 95, 98, 108, 111, 98, 95, 97, 100, 100, 114, 101, 115, 115, 58, 32, 32, 114, 97, 119, 95, 98, 108, 111, 98, 95, 108, 101, 110, 103, 116, 104, 58, 32, 0, 0, 0, 0, 0, 0, 144, 5, 1, 0, 0, 0, 0, 0, 80, 0, 0, 0, 0, 0, 0, 0, 224, 5, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 104, 105, 115, 116, 111, 114, 105, 99, 97, 108, 95, 108, 111, 111, 107, 117, 112, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 115, 101, 114, 118, 105, 99, 101, 32, 105, 110, 100, 101, 120, 58, 32, 32, 97, 110, 100, 32, 99, 111, 100, 101, 32, 104, 97, 115, 104, 32, 97, 100, 100, 114, 101, 115, 115, 58, 32, 0, 0, 0, 0, 24, 6, 1, 0, 0, 0, 0, 0, 52, 0, 0, 0, 0, 0, 0, 0, 76, 6, 1, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 73, 110, 118, 97, 108, 105, 100, 32, 112, 97, 121, 108, 111, 97, 100, 32, 108, 101, 110, 103, 116, 104, 58, 32, 101, 120, 112, 101, 99, 116, 101, 100, 32, 52, 52, 44, 32, 103, 111, 116, 32, 0, 0, 0, 0, 0, 0, 0, 136, 6, 1, 0, 0, 0, 0, 0, 49, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 115, 111, 108, 105, 99, 105, 116, 32, 99, 111, 100, 101, 95, 104, 97, 115, 104, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 111, 100, 101, 95, 108, 101, 110, 103, 116, 104, 61, 0, 208, 6, 1, 0, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 242, 6, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 222, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 224, 0, 0, 0, 0, 0, 0, 0, 230, 0, 0, 0, 0, 0, 0, 0, 238, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 18, 1, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 20, 1, 0, 0, 0, 0, 0, 0, 26, 1, 0, 0, 0, 0, 0, 0, 30, 1, 0, 0, 0, 0, 0, 0, 44, 32, 115, 61, 112, 101, 101, 107, 32, 32, 32, 32, 112, 111, 107, 101, 44, 32, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 61, 44, 32, 111, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 48, 120, 44, 32, 111, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 44, 32, 119, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 48, 120, 44, 32, 119, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 0, 0, 0, 0, 0, 104, 8, 1, 0, 0, 0, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 136, 7, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 145, 8, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 165, 8, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 182, 8, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 202, 8, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 55, 1, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 105, 110, 103, 32, 111, 95, 98, 121, 116, 101, 115, 58, 32, 111, 95, 115, 116, 97, 114, 116, 95, 112, 97, 103, 101, 61, 44, 32, 111, 95, 98, 121, 116, 101, 115, 95, 112, 97, 103, 101, 95, 108, 101, 110, 61, 80, 9, 1, 0, 0, 0, 0, 0, 69, 0, 0, 0, 0, 0, 0, 0, 149, 9, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 97, 103, 101, 115, 32, 114, 101, 115, 117, 108, 116, 32, 102, 111, 114, 32, 111, 95, 98, 121, 116, 101, 115, 58, 32, 0, 0, 0, 0, 0, 0, 0, 200, 9, 1, 0, 0, 0, 0, 0, 65, 0, 0, 0, 0, 0, 0, 0, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 105, 110, 103, 32, 119, 95, 98, 121, 116, 101, 115, 58, 32, 119, 95, 115, 116, 97, 114, 116, 95, 112, 97, 103, 101, 61, 44, 32, 119, 95, 98, 121, 116, 101, 115, 95, 112, 97, 103, 101, 95, 108, 101, 110, 61, 32, 10, 1, 0, 0, 0, 0, 0, 69, 0, 0, 0, 0, 0, 0, 0, 101, 10, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 97, 103, 101, 115, 32, 114, 101, 115, 117, 108, 116, 32, 102, 111, 114, 32, 119, 95, 98, 121, 116, 101, 115, 58, 32, 0, 0, 0, 0, 0, 0, 0, 152, 10, 1, 0, 0, 0, 0, 0, 65, 0, 0, 0, 0, 0, 0, 0, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 105, 110, 103, 32, 115, 116, 97, 99, 107, 58, 32, 115, 95, 115, 116, 97, 114, 116, 95, 112, 97, 103, 101, 61, 44, 32, 115, 116, 97, 99, 107, 95, 112, 97, 103, 101, 95, 108, 101, 110, 61, 0, 0, 0, 0, 240, 10, 1, 0, 0, 0, 0, 0, 67, 0, 0, 0, 0, 0, 0, 0, 51, 11, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 97, 103, 101, 115, 32, 114, 101, 115, 117, 108, 116, 32, 102, 111, 114, 32, 115, 116, 97, 99, 107, 58, 32, 0, 104, 11, 1, 0, 0, 0, 0, 0, 63, 0, 0, 0, 0, 0, 0, 0, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 105, 110, 103, 32, 111, 95, 98, 121, 116, 101, 115, 58, 32, 111, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 48, 120, 44, 32, 111, 95, 115, 116, 97, 114, 116, 95, 97, 100, 100, 114, 101, 101, 115, 115, 61, 48, 120, 0, 0, 184, 11, 1, 0, 0, 0, 0, 0, 73, 0, 0, 0, 0, 0, 0, 0, 1, 12, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 165, 8, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 105, 110, 103, 32, 119, 95, 98, 121, 116, 101, 115, 58, 32, 119, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 48, 120, 44, 32, 119, 95, 115, 116, 97, 114, 116, 95, 97, 100, 100, 114, 101, 115, 115, 61, 48, 120, 0, 0, 0, 72, 12, 1, 0, 0, 0, 0, 0, 73, 0, 0, 0, 0, 0, 0, 0, 145, 12, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 202, 8, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 115, 117, 99, 99, 101, 115, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 119, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 111, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 115, 116, 97, 99, 107, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 119, 95, 98, 121, 116, 101, 115, 44, 32, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 190, 13, 1, 0, 0, 0, 0, 0, 71, 0, 0, 0, 0, 0, 0, 0, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 111, 95, 98, 121, 116, 101, 115]
// RW data = [75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 3960
// Code size = 12647 bytes

      :                          @0
     0: 28 5e 03 00 00           jump @56
      :                          @1
     5: 28 88 1e 00 00           jump @385
      :                          @2
    10: 28 37 21                 jump @449
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 80 89 34                 a2 = u32 [a1 + 0x34]
    24: 82 77                    a0 = u64 [a0]
    26: 84 9a 10                 a3 = a2 & 0x10
    29: 52 0a 16                 jump @6 if a3 != 0
      :                          @4
    32: 84 99 20                 a2 = a2 & 0x20
    35: 52 09 40                 jump @9 if a2 != 0
      :                          @5
    38: 82 77                    a0 = u64 [a0]
    40: 82 10 80 00              ra = u64 [sp + 0x80]
    44: 95 11 88 00              sp = sp + 0x88
    48: 28 e8 26                 jump @590
      :                          @6
    51: 82 7b                    a4 = u64 [a0]
    53: 33 09 81 00              a2 = 0x81
    57: 95 17 7f                 a0 = sp + 0x7f
    60: 33 02 57                 t0 = 0x57
    63: 01                       fallthrough
      :                          @7
    64: 64 9c                    a5 = a2
    66: 98 ba 04                 a3 = a4 >> 0x4
    69: 84 bb 0f                 a4 = a4 & 0xf
    72: 88 b3 0a                 t1 = a4 <u 0xa
    75: 33 09 30                 a2 = 0x30
    78: da 32 09                 a2 = t0 if t1 == 0
    81: be b9 09                 i32 a2 = a2 + a4
    84: 78 79                    u8 [a0] = a2
    86: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
    89: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
    92: 64 ab                    a4 = a3
    94: 52 0a e2                 jump @7 if a3 != 0
      :                          @8
    97: 28 30                    jump @11
      :                          @9
    99: 82 7b                    a4 = u64 [a0]
   101: 33 09 81 00              a2 = 0x81
   105: 95 17 7f                 a0 = sp + 0x7f
   108: 33 02 37                 t0 = 0x37
   111: 01                       fallthrough
      :                          @10
   112: 64 9c                    a5 = a2
   114: 98 ba 04                 a3 = a4 >> 0x4
   117: 84 bb 0f                 a4 = a4 & 0xf
   120: 88 b3 0a                 t1 = a4 <u 0xa
   123: 33 09 30                 a2 = 0x30
   126: da 32 09                 a2 = t0 if t1 == 0
   129: be b9 09                 i32 a2 = a2 + a4
   132: 78 79                    u8 [a0] = a2
   134: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   137: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   140: 64 ab                    a4 = a3
   142: 52 0a e2                 jump @10 if a3 != 0
      :                          @11
   145: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   148: 56 27 80 00 27           jump @14 if a0 >u 128
      :                          @12
   153: 9a 9b 81 00              a4 = 0x81 - a2
   157: 64 1a                    a3 = sp
   159: c8 7a 0a                 a3 = a3 + a0
   162: 33 09 02                 a2 = 0x2
   165: 64 87                    a0 = a1
   167: 33 08 9e 07 01           a1 = 0x1079e
   172: 50 10 04 94 27           ra = 4, jump @600
      :                          @13 [@dyn 2]
   177: 82 10 80 00              ra = u64 [sp + 0x80]
   181: 95 11 88 00              sp = sp + 0x88
   185: 32 00                    ret
      :                          @14
   187: 00                       trap
      :                          @15 [@dyn 3]
   188: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   192: 7b 10 80 00              u64 [sp + 0x80] = ra
   196: 80 89 34                 a2 = u32 [a1 + 0x34]
   199: 84 9a 10                 a3 = a2 & 0x10
   202: 52 0a 16                 jump @18 if a3 != 0
      :                          @16
   205: 84 99 20                 a2 = a2 & 0x20
   208: 52 09 40                 jump @21 if a2 != 0
      :                          @17
   211: 80 77                    a0 = u32 [a0]
   213: 82 10 80 00              ra = u64 [sp + 0x80]
   217: 95 11 88 00              sp = sp + 0x88
   221: 28 3b 26                 jump @590
      :                          @18
   224: 81 7b                    a4 = i32 [a0]
   226: 33 09 81 00              a2 = 0x81
   230: 95 17 7f                 a0 = sp + 0x7f
   233: 33 02 57                 t0 = 0x57
   236: 01                       fallthrough
      :                          @19
   237: 64 9c                    a5 = a2
   239: 8b ba 04                 i32 a3 = a4 >> 0x4
   242: 84 bb 0f                 a4 = a4 & 0xf
   245: 88 b3 0a                 t1 = a4 <u 0xa
   248: 33 09 30                 a2 = 0x30
   251: da 32 09                 a2 = t0 if t1 == 0
   254: be b9 09                 i32 a2 = a2 + a4
   257: 78 79                    u8 [a0] = a2
   259: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   262: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   265: 64 ab                    a4 = a3
   267: 52 0a e2                 jump @19 if a3 != 0
      :                          @20
   270: 28 30                    jump @23
      :                          @21
   272: 81 7b                    a4 = i32 [a0]
   274: 33 09 81 00              a2 = 0x81
   278: 95 17 7f                 a0 = sp + 0x7f
   281: 33 02 37                 t0 = 0x37
   284: 01                       fallthrough
      :                          @22
   285: 64 9c                    a5 = a2
   287: 8b ba 04                 i32 a3 = a4 >> 0x4
   290: 84 bb 0f                 a4 = a4 & 0xf
   293: 88 b3 0a                 t1 = a4 <u 0xa
   296: 33 09 30                 a2 = 0x30
   299: da 32 09                 a2 = t0 if t1 == 0
   302: be b9 09                 i32 a2 = a2 + a4
   305: 78 79                    u8 [a0] = a2
   307: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   310: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   313: 64 ab                    a4 = a3
   315: 52 0a e2                 jump @22 if a3 != 0
      :                          @23
   318: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   321: 56 27 80 00 27           jump @26 if a0 >u 128
      :                          @24
   326: 9a 9b 81 00              a4 = 0x81 - a2
   330: 64 1a                    a3 = sp
   332: c8 7a 0a                 a3 = a3 + a0
   335: 33 09 02                 a2 = 0x2
   338: 64 87                    a0 = a1
   340: 33 08 9e 07 01           a1 = 0x1079e
   345: 50 10 08 e7 26           ra = 8, jump @600
      :                          @25 [@dyn 4]
   350: 82 10 80 00              ra = u64 [sp + 0x80]
   354: 95 11 88 00              sp = sp + 0x88
   358: 32 00                    ret
      :                          @26
   360: 00                       trap
      :                          @27 [@dyn 5]
   361: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   365: 7b 10 80 00              u64 [sp + 0x80] = ra
   369: 80 89 34                 a2 = u32 [a1 + 0x34]
   372: 84 9a 10                 a3 = a2 & 0x10
   375: 52 0a 16                 jump @30 if a3 != 0
      :                          @28
   378: 84 99 20                 a2 = a2 & 0x20
   381: 52 09 40                 jump @33 if a2 != 0
      :                          @29
   384: 82 77                    a0 = u64 [a0]
   386: 82 10 80 00              ra = u64 [sp + 0x80]
   390: 95 11 88 00              sp = sp + 0x88
   394: 28 8e 25                 jump @590
      :                          @30
   397: 82 7b                    a4 = u64 [a0]
   399: 33 09 81 00              a2 = 0x81
   403: 95 17 7f                 a0 = sp + 0x7f
   406: 33 02 57                 t0 = 0x57
   409: 01                       fallthrough
      :                          @31
   410: 64 9c                    a5 = a2
   412: 98 ba 04                 a3 = a4 >> 0x4
   415: 84 bb 0f                 a4 = a4 & 0xf
   418: 88 b3 0a                 t1 = a4 <u 0xa
   421: 33 09 30                 a2 = 0x30
   424: da 32 09                 a2 = t0 if t1 == 0
   427: be b9 09                 i32 a2 = a2 + a4
   430: 78 79                    u8 [a0] = a2
   432: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   435: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   438: 64 ab                    a4 = a3
   440: 52 0a e2                 jump @31 if a3 != 0
      :                          @32
   443: 28 30                    jump @35
      :                          @33
   445: 82 7b                    a4 = u64 [a0]
   447: 33 09 81 00              a2 = 0x81
   451: 95 17 7f                 a0 = sp + 0x7f
   454: 33 02 37                 t0 = 0x37
   457: 01                       fallthrough
      :                          @34
   458: 64 9c                    a5 = a2
   460: 98 ba 04                 a3 = a4 >> 0x4
   463: 84 bb 0f                 a4 = a4 & 0xf
   466: 88 b3 0a                 t1 = a4 <u 0xa
   469: 33 09 30                 a2 = 0x30
   472: da 32 09                 a2 = t0 if t1 == 0
   475: be b9 09                 i32 a2 = a2 + a4
   478: 78 79                    u8 [a0] = a2
   480: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   483: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   486: 64 ab                    a4 = a3
   488: 52 0a e2                 jump @34 if a3 != 0
      :                          @35
   491: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   494: 56 27 80 00 27           jump @38 if a0 >u 128
      :                          @36
   499: 9a 9b 81 00              a4 = 0x81 - a2
   503: 64 1a                    a3 = sp
   505: c8 7a 0a                 a3 = a3 + a0
   508: 33 09 02                 a2 = 0x2
   511: 64 87                    a0 = a1
   513: 33 08 9e 07 01           a1 = 0x1079e
   518: 50 10 0c 3a 26           ra = 12, jump @600
      :                          @37 [@dyn 6]
   523: 82 10 80 00              ra = u64 [sp + 0x80]
   527: 95 11 88 00              sp = sp + 0x88
   531: 32 00                    ret
      :                          @38
   533: 00                       trap
      :                          @39 [@dyn 7]
   534: 95 11 d0                 sp = sp + 0xffffffffffffffd0
   537: 7b 10 28                 u64 [sp + 0x28] = ra
   540: 7b 15 20                 u64 [sp + 0x20] = s0
   543: 7b 16 18                 u64 [sp + 0x18] = s1
   546: 64 85                    s0 = a1
   548: 82 88 28                 a1 = u64 [a1 + 0x28]
   551: 82 5a 20                 a3 = u64 [s0 + 0x20]
   554: 82 8b 18                 a4 = u64 [a1 + 0x18]
   557: 64 76                    s1 = a0
   559: 33 08 50 07 01           a1 = 0x10750
   564: 33 09 01                 a2 = 0x1
   567: 64 a7                    a0 = a3
   569: b4 b0 01 10              ra = 16, jump [a4]
      :                          @40 [@dyn 8]
   573: 7b 15                    u64 [sp] = s0
   575: 78 17 08                 u8 [sp + 0x8] = a0
   578: 46 11 09                 u8 [sp + 9] = 0
   581: 7b 16 10                 u64 [sp + 0x10] = s1
   584: 33 05 02                 s0 = 0x2
   587: 64 17                    a0 = sp
   589: 95 18 10                 a1 = sp + 0x10
   592: 33 09 02                 a2 = 0x2
   595: 50 10 12 37 2d           ra = 18, jump @751
      :                          @41 [@dyn 9]
   600: 95 67 08                 a0 = s1 + 0x8
   603: 7b 17 10                 u64 [sp + 0x10] = a0
   606: 64 17                    a0 = sp
   608: 95 18 10                 a1 = sp + 0x10
   611: 64 59                    a2 = s0
   613: 50 10 14 25 2d           ra = 20, jump @751
      :                          @42 [@dyn 10]
   618: 95 67 10                 a0 = s1 + 0x10
   621: 7b 17 10                 u64 [sp + 0x10] = a0
   624: 64 17                    a0 = sp
   626: 95 18 10                 a1 = sp + 0x10
   629: 64 59                    a2 = s0
   631: 50 10 16 13 2d           ra = 22, jump @751
      :                          @43 [@dyn 11]
   636: 95 67 18                 a0 = s1 + 0x18
   639: 7b 17 10                 u64 [sp + 0x10] = a0
   642: 64 17                    a0 = sp
   644: 95 18 10                 a1 = sp + 0x10
   647: 64 59                    a2 = s0
   649: 50 10 18 01 2d           ra = 24, jump @751
      :                          @44 [@dyn 12]
   654: 95 67 20                 a0 = s1 + 0x20
   657: 7b 17 10                 u64 [sp + 0x10] = a0
   660: 64 17                    a0 = sp
   662: 95 18 10                 a1 = sp + 0x10
   665: 64 59                    a2 = s0
   667: 50 10 1a ef 2c           ra = 26, jump @751
      :                          @45 [@dyn 13]
   672: 95 67 28                 a0 = s1 + 0x28
   675: 7b 17 10                 u64 [sp + 0x10] = a0
   678: 64 17                    a0 = sp
   680: 95 18 10                 a1 = sp + 0x10
   683: 64 59                    a2 = s0
   685: 50 10 1c dd 2c           ra = 28, jump @751
      :                          @46 [@dyn 14]
   690: 95 67 30                 a0 = s1 + 0x30
   693: 7b 17 10                 u64 [sp + 0x10] = a0
   696: 64 17                    a0 = sp
   698: 95 18 10                 a1 = sp + 0x10
   701: 64 59                    a2 = s0
   703: 50 10 1e cb 2c           ra = 30, jump @751
      :                          @47 [@dyn 15]
   708: 95 67 38                 a0 = s1 + 0x38
   711: 7b 17 10                 u64 [sp + 0x10] = a0
   714: 64 17                    a0 = sp
   716: 95 18 10                 a1 = sp + 0x10
   719: 64 59                    a2 = s0
   721: 50 10 20 b9 2c           ra = 32, jump @751
      :                          @48 [@dyn 16]
   726: 95 67 40                 a0 = s1 + 0x40
   729: 7b 17 10                 u64 [sp + 0x10] = a0
   732: 64 17                    a0 = sp
   734: 95 18 10                 a1 = sp + 0x10
   737: 64 59                    a2 = s0
   739: 50 10 22 a7 2c           ra = 34, jump @751
      :                          @49 [@dyn 17]
   744: 95 67 48                 a0 = s1 + 0x48
   747: 7b 17 10                 u64 [sp + 0x10] = a0
   750: 64 17                    a0 = sp
   752: 95 18 10                 a1 = sp + 0x10
   755: 64 59                    a2 = s0
   757: 50 10 24 95 2c           ra = 36, jump @751
      :                          @50 [@dyn 18]
   762: 95 67 50                 a0 = s1 + 0x50
   765: 7b 17 10                 u64 [sp + 0x10] = a0
   768: 64 17                    a0 = sp
   770: 95 18 10                 a1 = sp + 0x10
   773: 64 59                    a2 = s0
   775: 50 10 26 83 2c           ra = 38, jump @751
      :                          @51 [@dyn 19]
   780: 95 67 58                 a0 = s1 + 0x58
   783: 7b 17 10                 u64 [sp + 0x10] = a0
   786: 64 17                    a0 = sp
   788: 95 18 10                 a1 = sp + 0x10
   791: 64 59                    a2 = s0
   793: 50 10 28 71 2c           ra = 40, jump @751
      :                          @52 [@dyn 20]
   798: 95 67 60                 a0 = s1 + 0x60
   801: 7b 17 10                 u64 [sp + 0x10] = a0
   804: 64 17                    a0 = sp
   806: 95 18 10                 a1 = sp + 0x10
   809: 64 59                    a2 = s0
   811: 50 10 2a 5f 2c           ra = 42, jump @751
      :                          @53 [@dyn 21]
   816: 33 07 01                 a0 = 0x1
   819: 7c 18 08                 a1 = u8 [sp + 0x8]
   822: 52 08 1a                 jump @55 if a1 != 0
      :                          @54
   825: 82 17                    a0 = u64 [sp]
   827: 82 78 28                 a1 = u64 [a0 + 0x28]
   830: 82 77 20                 a0 = u64 [a0 + 0x20]
   833: 82 8a 18                 a3 = u64 [a1 + 0x18]
   836: 33 08 9d 07 01           a1 = 0x1079d
   841: 33 09 01                 a2 = 0x1
   844: b4 a0 01 2c              ra = 44, jump [a3]
      :                          @55 [@dyn 22]
   848: 82 10 28                 ra = u64 [sp + 0x28]
   851: 82 15 20                 s0 = u64 [sp + 0x20]
   854: 82 16 18                 s1 = u64 [sp + 0x18]
   857: 95 11 30                 sp = sp + 0x30
   860: 32 00                    ret
      :                          @56 [export #0: 'refine']
   862: 95 11 08 f8              sp = sp + 0xfffffffffffff808
   866: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
   870: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
   874: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
   878: 95 11 40 b4 fe           sp = sp + 0xfffffffffffeb440
   883: 64 86                    s1 = a1
   885: 64 7a                    a3 = a0
   887: 33 07 00 00 01           a0 = 0x10000
   892: 53 16 04 43              jump @65 if s1 <u 4
      :                          @57
   896: 7d a8                    a1 = i8 [a3]
   898: 33 05 01                 s0 = 0x1
   901: 59 08 37                 jump @64 if a1 >=s 0
      :                          @58
   904: 84 89 ff 00              a2 = a1 & 0xff
   908: 33 05 02                 s0 = 0x2
   911: 53 29 c0 00 2d           jump @64 if a2 <u 192
      :                          @59
   916: 33 05 03                 s0 = 0x3
   919: 53 29 e0 00 25           jump @64 if a2 <u 224
      :                          @60
   924: 33 05 04                 s0 = 0x4
   927: 53 29 f0 00 1d           jump @64 if a2 <u 240
      :                          @61
   932: 33 05 05                 s0 = 0x5
   935: 53 29 f8 00 15           jump @64 if a2 <u 248
      :                          @62
   940: 33 05 06                 s0 = 0x6
   943: 53 29 fc 00 0d           jump @64 if a2 <u 252
      :                          @63
   948: 88 98 fe 00              a1 = a2 <u 0xfe
   952: 9a 85 08                 s0 = 0x8 - a1
   955: 01                       fallthrough
      :                          @64
   956: ae 56 08                 jump @66 if s1 >=u s0
      :                          @65
   959: 33 06                    s1 = 0
   961: 28 eb 00                 jump @92
      :                          @66
   964: 64 a7                    a0 = a3
   966: 64 58                    a1 = s0
   968: 7b 1a 60                 u64 [sp + 0x60] = a3
   971: 50 10 2e fe 2c           ra = 46, jump @768
      :                          @67 [@dyn 23]
   976: aa 56 d4 00              jump @91 if s1 == s0
      :                          @68
   980: 82 17 60                 a0 = u64 [sp + 0x60]
   983: c8 57 07                 a0 = a0 + s0
   986: 7d 78                    a1 = i8 [a0]
   988: c9 56 0a                 a3 = s1 - s0
   991: 33 06 01                 s1 = 0x1
   994: 59 08 37                 jump @75 if a1 >=s 0
      :                          @69
   997: 84 89 ff 00              a2 = a1 & 0xff
  1001: 33 06 02                 s1 = 0x2
  1004: 53 29 c0 00 2d           jump @75 if a2 <u 192
      :                          @70
  1009: 33 06 03                 s1 = 0x3
  1012: 53 29 e0 00 25           jump @75 if a2 <u 224
      :                          @71
  1017: 33 06 04                 s1 = 0x4
  1020: 53 29 f0 00 1d           jump @75 if a2 <u 240
      :                          @72
  1025: 33 06 05                 s1 = 0x5
  1028: 53 29 f8 00 15           jump @75 if a2 <u 248
      :                          @73
  1033: 33 06 06                 s1 = 0x6
  1036: 53 29 fc 00 0d           jump @75 if a2 <u 252
      :                          @74
  1041: 88 98 fe 00              a1 = a2 <u 0xfe
  1045: 9a 86 08                 s1 = 0x8 - a1
  1048: 01                       fallthrough
      :                          @75
  1049: ac 6a 8b 00              jump @91 if a3 <u s1
      :                          @76
  1053: 64 68                    a1 = s1
  1055: 7b 1a 60                 u64 [sp + 0x60] = a3
  1058: 64 75                    s0 = a0
  1060: 50 10 30 a5 2c           ra = 48, jump @768
      :                          @77 [@dyn 24]
  1065: 64 7a                    a3 = a0
  1067: c8 56 07                 a0 = s1 + s0
  1070: 82 15 60                 s0 = u64 [sp + 0x60]
  1073: 7b 17 58                 u64 [sp + 0x58] = a0
  1076: ab 65 0b                 jump @79 if s0 != s1
      :                          @78
  1079: 33 08                    a1 = 0
  1081: 33 06                    s1 = 0
  1083: 33 07                    a0 = 0
  1085: 28 5d                    jump @90
      :                          @79
  1087: 7d 78                    a1 = i8 [a0]
  1089: c9 65 05                 s0 = s0 - s1
  1092: 33 06 01                 s1 = 0x1
  1095: 59 08 37                 jump @86 if a1 >=s 0
      :                          @80
  1098: 84 89 ff 00              a2 = a1 & 0xff
  1102: 33 06 02                 s1 = 0x2
  1105: 53 29 c0 00 2d           jump @86 if a2 <u 192
      :                          @81
  1110: 33 06 03                 s1 = 0x3
  1113: 53 29 e0 00 25           jump @86 if a2 <u 224
      :                          @82
  1118: 33 06 04                 s1 = 0x4
  1121: 53 29 f0 00 1d           jump @86 if a2 <u 240
      :                          @83
  1126: 33 06 05                 s1 = 0x5
  1129: 53 29 f8 00 15           jump @86 if a2 <u 248
      :                          @84
  1134: 33 06 06                 s1 = 0x6
  1137: 53 29 fc 00 0d           jump @86 if a2 <u 252
      :                          @85
  1142: 88 98 fe 00              a1 = a2 <u 0xfe
  1146: 9a 86 08                 s1 = 0x8 - a1
  1149: 01                       fallthrough
      :                          @86
  1150: 7b 1a 60                 u64 [sp + 0x60] = a3
  1153: ae 65 06                 jump @88 if s0 >=u s1
      :                          @87
  1156: 28 08 1a                 jump @384
      :                          @88
  1159: 64 68                    a1 = s1
  1161: 50 10 32 40 2c           ra = 50, jump @768
      :                          @89 [@dyn 25]
  1166: e4 65 08                 a1 = maxu(s0, s1)
  1169: c9 68 08                 a1 = a1 - s1
  1172: 82 1a 60                 a3 = u64 [sp + 0x60]
  1175: ac 78 0d                 jump @91 if a1 <u a0
      :                          @90
  1178: e4 78 08                 a1 = maxu(a1, a0)
  1181: c9 78 08                 a1 = a1 - a0
  1184: 55 18 20 28              jump @93 if a1 >=u 32
      :                          @91
  1188: 33 06                    s1 = 0
  1190: 33 07 00 00 01           a0 = 0x10000
  1195: 01                       fallthrough
      :                          @92
  1196: 64 68                    a1 = s1
  1198: 33 09 c0 4b 01           a2 = 0x14bc0
  1203: c8 91 01                 sp = sp + a2
  1206: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  1210: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  1214: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  1218: 95 11 f8 07              sp = sp + 0x7f8
  1222: 32 00                    ret
      :                          @93
  1224: 95 19 98 40 01           a2 = sp + 0x14098
  1229: 49 11 60 ff ff ef        u64 [sp + 96] = 0xffffffffffefffff
  1235: 82 18 58                 a1 = u64 [sp + 0x58]
  1238: c8 86 06                 s1 = s1 + a1
  1241: 7a 1a 6c                 u32 [sp + 0x6c] = a3
  1244: 7b 16 70                 u64 [sp + 0x70] = s1
  1247: 7b 17 78                 u64 [sp + 0x78] = a0
  1250: 95 17 6c                 a0 = sp + 0x6c
  1253: 7b 17 98 00              u64 [sp + 0x98] = a0
  1257: 33 07 06                 a0 = 0x6
  1260: 7b 17 a0 00              u64 [sp + 0xa0] = a0
  1264: 95 17 70                 a0 = sp + 0x70
  1267: 7b 17 a8 00              u64 [sp + 0xa8] = a0
  1271: 33 07 0a                 a0 = 0xa
  1274: 7b 17 b0 00              u64 [sp + 0xb0] = a0
  1278: 95 18 78                 a1 = sp + 0x78
  1281: 7b 18 b8 00              u64 [sp + 0xb8] = a1
  1285: 7b 17 c0 00              u64 [sp + 0xc0] = a0
  1289: 33 07 68 00 01           a0 = 0x10068
  1294: 7b 97 58                 u64 [a2 + 0x58] = a0
  1297: 49 19 60 03              u64 [a2 + 96] = 0x3
  1301: 49 19 78                 u64 [a2 + 120] = 0
  1304: 95 18 98 00              a1 = sp + 0x98
  1308: 7b 98 68                 u64 [a2 + 0x68] = a1
  1311: 49 19 70 03              u64 [a2 + 112] = 0x3
  1315: 95 17 10 52 01           a0 = sp + 0x15210
  1320: 95 18 f0 40 01           a1 = sp + 0x140f0
  1325: 50 10 34 5d 1e           ra = 52, jump @506
      :                          @94 [@dyn 26]
  1330: 95 17 f8 50 01           a0 = sp + 0x150f8
  1335: 82 75 20 01              s0 = u64 [a0 + 0x120]
  1339: 82 7b 28 01              a4 = u64 [a0 + 0x128]
  1343: 82 76 18 01              s1 = u64 [a0 + 0x118]
  1347: 33 07 02                 a0 = 0x2
  1350: 33 08                    a1 = 0
  1352: 33 09                    a2 = 0
  1354: 64 5a                    a3 = s0
  1356: 33 00 36                 ra = 0x36
  1359: 0a 64                    ecalli 100 // 'log'
  1361: 01                       fallthrough
      :                          @95 [@dyn 27]
  1362: 82 17 60                 a0 = u64 [sp + 0x60]
  1365: c8 67 07                 a0 = a0 + s1
  1368: 53 37 00 00 f0 27        jump @101 if a0 <u 4293918720
      :                          @96
  1374: 33 07 20 10 03           a0 = 0x31020
  1379: 95 77 00 00 10           a0 = a0 + 0x100000
  1384: 01                       fallthrough
      :                          @97
  1385: 82 78                    a1 = u64 [a0]
  1387: c9 87 09                 a2 = a0 - a1
  1390: ab 59 11                 jump @101 if a2 != s0
      :                          @98
  1393: c9 68 09                 a2 = a1 - s1
  1396: 01                       fallthrough
      :                          @99
  1397: 82 7a                    a3 = u64 [a0]
  1399: ab 8a f2                 jump @97 if a3 != a1
      :                          @100
  1402: 7b 79                    u64 [a0] = a2
  1404: 33 0b                    a4 = 0
  1406: 01                       fallthrough
      :                          @101
  1407: 82 17 78                 a0 = u64 [sp + 0x78]
  1410: 51 17 2c a6 00           jump @112 if a0 == 44
      :                          @102
  1415: 95 19 f8 50 01           a2 = sp + 0x150f8
  1420: 52 17 24 c8 02           jump @141 if a0 != 36
      :                          @103
  1425: 95 17 78                 a0 = sp + 0x78
  1428: 7b 97 18 01              u64 [a2 + 0x118] = a0
  1432: 33 07 0a                 a0 = 0xa
  1435: 7b 97 20 01              u64 [a2 + 0x120] = a0
  1439: 33 07 c8 00 01           a0 = 0x100c8
  1444: 7b 17 98 00              u64 [sp + 0x98] = a0
  1448: 49 21 a0 00 01           u64 [sp + 160] = 0x1
  1453: 49 21 b8 00              u64 [sp + 184] = 0
  1457: 95 18 10 52 01           a1 = sp + 0x15210
  1462: 7b 18 a8 00              u64 [sp + 0xa8] = a1
  1466: 49 21 b0 00 01           u64 [sp + 176] = 0x1
  1471: 95 17 f0 40 01           a0 = sp + 0x140f0
  1476: 95 18 98 00              a1 = sp + 0x98
  1480: 50 10 38 c2 1d           ra = 56, jump @506
      :                          @104 [@dyn 28]
  1485: 95 17 98 40 01           a0 = sp + 0x14098
  1490: 82 75 60                 s0 = u64 [a0 + 0x60]
  1493: 82 7b 68                 a4 = u64 [a0 + 0x68]
  1496: 82 76 58                 s1 = u64 [a0 + 0x58]
  1499: 33 07 02                 a0 = 0x2
  1502: 33 08                    a1 = 0
  1504: 33 09                    a2 = 0
  1506: 64 5a                    a3 = s0
  1508: 33 00 3a                 ra = 0x3a
  1511: 0a 64                    ecalli 100 // 'log'
  1513: 01                       fallthrough
      :                          @105 [@dyn 29]
  1514: 82 17 60                 a0 = u64 [sp + 0x60]
  1517: c8 67 07                 a0 = a0 + s1
  1520: 53 37 00 00 f0 2f        jump @111 if a0 <u 4293918720
      :                          @106
  1526: 33 07 20 10 03           a0 = 0x31020
  1531: 95 77 00 00 10           a0 = a0 + 0x100000
  1536: 01                       fallthrough
      :                          @107
  1537: 82 78                    a1 = u64 [a0]
  1539: c9 87 09                 a2 = a0 - a1
  1542: ab 59 19                 jump @111 if a2 != s0
      :                          @108
  1545: c9 68 09                 a2 = a1 - s1
  1548: 01                       fallthrough
      :                          @109
  1549: 82 7a                    a3 = u64 [a0]
  1551: ab 8a f2                 jump @107 if a3 != a1
      :                          @110
  1554: 7b 79                    u64 [a0] = a2
  1556: 33 0b                    a4 = 0
  1558: 82 17 70                 a0 = u64 [sp + 0x70]
  1561: 82 16 78                 s1 = u64 [sp + 0x78]
  1564: 28 90 fe                 jump @92
      :                          @111
  1567: 82 17 70                 a0 = u64 [sp + 0x70]
  1570: 82 16 78                 s1 = u64 [sp + 0x78]
  1573: 28 87 fe                 jump @92
      :                          @112
  1576: 82 18 70                 a1 = u64 [sp + 0x70]
  1579: 7b 18 80 00              u64 [sp + 0x80] = a1
  1583: 81 87 20                 a0 = i32 [a1 + 0x20]
  1586: 7a 17 8c 00              u32 [sp + 0x8c] = a0
  1590: 81 87 24                 a0 = i32 [a1 + 0x24]
  1593: 7a 17 90 00              u32 [sp + 0x90] = a0
  1597: 7b 18 58                 u64 [sp + 0x58] = a1
  1600: 81 87 28                 a0 = i32 [a1 + 0x28]
  1603: 7a 17 94 00              u32 [sp + 0x94] = a0
  1607: 95 17 8c 00              a0 = sp + 0x8c
  1611: 7b 17 98 00              u64 [sp + 0x98] = a0
  1615: 33 07 06                 a0 = 0x6
  1618: 7b 17 a0 00              u64 [sp + 0xa0] = a0
  1622: 95 18 90 00              a1 = sp + 0x90
  1626: 7b 18 a8 00              u64 [sp + 0xa8] = a1
  1630: 7b 17 b0 00              u64 [sp + 0xb0] = a0
  1634: 95 18 94 00              a1 = sp + 0x94
  1638: 7b 18 b8 00              u64 [sp + 0xb8] = a1
  1642: 7b 17 c0 00              u64 [sp + 0xc0] = a0
  1646: 33 07 60 01 01           a0 = 0x10160
  1651: 95 18 98 40 01           a1 = sp + 0x14098
  1656: 7b 87 58                 u64 [a1 + 0x58] = a0
  1659: 49 18 60 03              u64 [a1 + 96] = 0x3
  1663: 49 18 78                 u64 [a1 + 120] = 0
  1666: 95 19 98 00              a2 = sp + 0x98
  1670: 7b 89 68                 u64 [a1 + 0x68] = a2
  1673: 49 18 70 03              u64 [a1 + 112] = 0x3
  1677: 95 17 10 52 01           a0 = sp + 0x15210
  1682: 95 18 f0 40 01           a1 = sp + 0x140f0
  1687: 50 10 3c f3 1c           ra = 60, jump @506
      :                          @113 [@dyn 30]
  1692: 95 17 f8 50 01           a0 = sp + 0x150f8
  1697: 82 76 20 01              s1 = u64 [a0 + 0x120]
  1701: 82 7b 28 01              a4 = u64 [a0 + 0x128]
  1705: 82 75 18 01              s0 = u64 [a0 + 0x118]
  1709: 33 07 02                 a0 = 0x2
  1712: 33 08                    a1 = 0
  1714: 33 09                    a2 = 0
  1716: 64 6a                    a3 = s1
  1718: 33 00 3e                 ra = 0x3e
  1721: 0a 64                    ecalli 100 // 'log'
  1723: 01                       fallthrough
      :                          @114 [@dyn 31]
  1724: 82 17 60                 a0 = u64 [sp + 0x60]
  1727: c8 57 07                 a0 = a0 + s0
  1730: 53 37 00 00 f0 27        jump @120 if a0 <u 4293918720
      :                          @115
  1736: 33 07 20 10 03           a0 = 0x31020
  1741: 95 77 00 00 10           a0 = a0 + 0x100000
  1746: 01                       fallthrough
      :                          @116
  1747: 82 78                    a1 = u64 [a0]
  1749: c9 87 09                 a2 = a0 - a1
  1752: ab 69 11                 jump @120 if a2 != s1
      :                          @117
  1755: c9 58 09                 a2 = a1 - s0
  1758: 01                       fallthrough
      :                          @118
  1759: 82 7a                    a3 = u64 [a0]
  1761: ab 8a f2                 jump @116 if a3 != a1
      :                          @119
  1764: 7b 79                    u64 [a0] = a2
  1766: 33 0b                    a4 = 0
  1768: 01                       fallthrough
      :                          @120
  1769: 95 17 98 00              a0 = sp + 0x98
  1773: 33 09 00 40 01           a2 = 0x14000
  1778: 33 08                    a1 = 0
  1780: 50 10 40 c2 1f           ra = 64, jump @574
      :                          @121 [@dyn 32]
  1785: 80 17 6c                 a0 = u32 [sp + 0x6c]
  1788: 95 18 98 40 01           a1 = sp + 0x14098
  1793: 95 19 98 00              a2 = sp + 0x98
  1797: 7b 89                    u64 [a1] = a2
  1799: 33 0b 00 40 01           a4 = 0x14000
  1804: 82 18 58                 a1 = u64 [sp + 0x58]
  1807: 33 0a                    a3 = 0
  1809: 33 00 42                 ra = 0x42
  1812: 0a 06                    ecalli 6 // 'historical_lookup'
  1814: 01                       fallthrough
      :                          @122 [@dyn 33]
  1815: 95 1b 98 40 01           a4 = sp + 0x14098
  1820: 7b b7 08                 u64 [a4 + 0x8] = a0
  1823: 51 17 ff ce 01           jump @151 if a0 == 4294967295
      :                          @123
  1828: 53 17 03 8c 00           jump @131 if a0 <u 3
      :                          @124
  1833: 95 79 fd                 a2 = a0 + 0xfffffffffffffffd
  1836: 53 19 03 84 00           jump @131 if a2 <u 3
      :                          @125
  1841: 84 78 fe                 a1 = a0 & 0xfffffffffffffffe
  1844: 51 18 06 7c              jump @131 if a1 == 6
      :                          @126
  1848: 95 78 f8                 a1 = a0 + 0xfffffffffffffff8
  1851: 53 18 03 75              jump @131 if a1 <u 3
      :                          @127
  1855: 7c 18 9a 00              a1 = u8 [sp + 0x9a]
  1859: 7c 19 99 00              a2 = u8 [sp + 0x99]
  1863: 7c 1a 98 00              a3 = u8 [sp + 0x98]
  1867: 97 88 10                 a1 = a1 << 0x10
  1870: 97 99 08                 a2 = a2 << 0x8
  1873: d4 98 08                 a1 = a1 | a2
  1876: d4 a8 08                 a1 = a1 | a3
  1879: 95 79 f5                 a2 = a0 + 0xfffffffffffffff5
  1882: ac 89 56                 jump @131 if a2 <u a1
      :                          @128
  1885: 7c 17 9d 00              a0 = u8 [sp + 0x9d]
  1889: 7c 1a 9c 00              a3 = u8 [sp + 0x9c]
  1893: 7c 1c 9b 00              a5 = u8 [sp + 0x9b]
  1897: 97 77 10                 a0 = a0 << 0x10
  1900: 97 aa 08                 a3 = a3 << 0x8
  1903: d4 a7 07                 a0 = a0 | a3
  1906: d4 c7 07                 a0 = a0 | a5
  1909: c9 89 09                 a2 = a2 - a1
  1912: ac 79 38                 jump @131 if a2 <u a0
      :                          @129
  1915: c9 79 06                 s1 = a2 - a0
  1918: 53 16 04 32              jump @131 if s1 <u 4
      :                          @130
  1922: 95 12 a3 00              t0 = sp + 0xa3
  1926: c8 28 03                 t1 = a1 + t0
  1929: c8 37 0a                 a3 = a0 + t1
  1932: 7c ac 03                 a5 = u8 [a3 + 0x3]
  1935: 7c a5 02                 s0 = u8 [a3 + 0x2]
  1938: 7c a4                    t2 = u8 [a3]
  1940: 7c a9 01                 a2 = u8 [a3 + 0x1]
  1943: 97 cc 10                 a5 = a5 << 0x10
  1946: 97 55 08                 s0 = s0 << 0x8
  1949: d4 5c 0c                 a5 = a5 | s0
  1952: d4 c9 09                 a2 = a2 | a5
  1955: 97 99 08                 a2 = a2 << 0x8
  1958: d4 49 0c                 a5 = a2 | t2
  1961: 95 66 fc                 s1 = s1 + 0xfffffffffffffffc
  1964: ae c6 e5 01              jump @161 if s1 >=u a5
      :                          @131
  1968: 95 17 98 40 01           a0 = sp + 0x14098
  1973: 95 16 f8 50 01           s1 = sp + 0x150f8
  1978: 7b 67 18 01              u64 [s1 + 0x118] = a0
  1982: 33 07 0a                 a0 = 0xa
  1985: 7b 67 20 01              u64 [s1 + 0x120] = a0
  1989: 95 18 a0 40 01           a1 = sp + 0x140a0
  1994: 7b 68 28 01              u64 [s1 + 0x128] = a1
  1998: 7b 67 30 01              u64 [s1 + 0x130] = a0
  2002: 33 07 f8 05 01           a0 = 0x105f8
  2007: 7b b7 58                 u64 [a4 + 0x58] = a0
  2010: 49 1b 60 02              u64 [a4 + 96] = 0x2
  2014: 49 1b 78                 u64 [a4 + 120] = 0
  2017: 95 18 10 52 01           a1 = sp + 0x15210
  2022: 7b b8 68                 u64 [a4 + 0x68] = a1
  2025: 49 1b 70 02              u64 [a4 + 112] = 0x2
  2029: 95 17 60 51 01           a0 = sp + 0x15160
  2034: 95 18 f0 40 01           a1 = sp + 0x140f0
  2039: 50 10 44 93 1b           ra = 68, jump @506
      :                          @132 [@dyn 34]
  2044: 82 65 70                 s0 = u64 [s1 + 0x70]
  2047: 82 6b 78                 a4 = u64 [s1 + 0x78]
  2050: 82 67 68                 a0 = u64 [s1 + 0x68]
  2053: 7b 17 58                 u64 [sp + 0x58] = a0
  2056: 33 07 01                 a0 = 0x1
  2059: 33 08                    a1 = 0
  2061: 33 09                    a2 = 0
  2063: 64 5a                    a3 = s0
  2065: 33 00 46                 ra = 0x46
  2068: 0a 64                    ecalli 100 // 'log'
  2070: 01                       fallthrough
      :                          @133 [@dyn 35]
  2071: 82 1c 58                 a5 = u64 [sp + 0x58]
  2074: 82 17 60                 a0 = u64 [sp + 0x60]
  2077: c8 7c 09                 a2 = a5 + a0
  2080: 33 07 00 00 01           a0 = 0x10000
  2085: 53 39 00 00 f0 9a fb     jump @65 if a2 <u 4293918720
      :                          @134
  2092: 33 07 20 10 03           a0 = 0x31020
  2097: 95 77 00 00 10           a0 = a0 + 0x100000
  2102: 01                       fallthrough
      :                          @135
  2103: 82 78                    a1 = u64 [a0]
  2105: c9 87 09                 a2 = a0 - a1
  2108: ab 59 68 fc              jump @91 if a2 != s0
      :                          @136
  2112: c9 c8 09                 a2 = a1 - a5
  2115: 01                       fallthrough
      :                          @137
  2116: 82 7a                    a3 = u64 [a0]
  2118: ab 8a f1                 jump @135 if a3 != a1
      :                          @138
  2121: 7b 79                    u64 [a0] = a2
  2123: 33 0b                    a4 = 0
  2125: 01                       fallthrough
      :                          @139
  2126: ab 8a e9                 jump @135 if a3 != a1
      :                          @140
  2129: 28 53 fc                 jump @91
      :                          @141
  2132: 95 17 78                 a0 = sp + 0x78
  2135: 7b 97 18 01              u64 [a2 + 0x118] = a0
  2139: 33 07 0a                 a0 = 0xa
  2142: 7b 97 20 01              u64 [a2 + 0x120] = a0
  2146: 33 07 c0 06 01           a0 = 0x106c0
  2151: 7b 17 98 00              u64 [sp + 0x98] = a0
  2155: 49 21 a0 00 01           u64 [sp + 160] = 0x1
  2160: 49 21 b8 00              u64 [sp + 184] = 0
  2164: 95 18 10 52 01           a1 = sp + 0x15210
  2169: 7b 18 a8 00              u64 [sp + 0xa8] = a1
  2173: 49 21 b0 00 01           u64 [sp + 176] = 0x1
  2178: 95 17 f0 40 01           a0 = sp + 0x140f0
  2183: 95 18 98 00              a1 = sp + 0x98
  2187: 50 10 48 ff 1a           ra = 72, jump @506
      :                          @142 [@dyn 36]
  2192: 95 17 98 40 01           a0 = sp + 0x14098
  2197: 82 75 60                 s0 = u64 [a0 + 0x60]
  2200: 82 7b 68                 a4 = u64 [a0 + 0x68]
  2203: 82 77 58                 a0 = u64 [a0 + 0x58]
  2206: 7b 17 58                 u64 [sp + 0x58] = a0
  2209: 33 07 02                 a0 = 0x2
  2212: 33 08                    a1 = 0
  2214: 33 09                    a2 = 0
  2216: 64 5a                    a3 = s0
  2218: 33 00 4a                 ra = 0x4a
  2221: 0a 64                    ecalli 100 // 'log'
  2223: 01                       fallthrough
      :                          @143 [@dyn 37]
  2224: 82 1c 58                 a5 = u64 [sp + 0x58]
  2227: 82 17 60                 a0 = u64 [sp + 0x60]
  2230: c8 7c 09                 a2 = a5 + a0
  2233: 33 07 00 00 01           a0 = 0x10000
  2238: 53 39 00 00 f0 01 fb     jump @65 if a2 <u 4293918720
      :                          @144
  2245: 33 07 20 10 03           a0 = 0x31020
  2250: 95 77 00 00 10           a0 = a0 + 0x100000
  2255: 01                       fallthrough
      :                          @145
  2256: 82 78                    a1 = u64 [a0]
  2258: c9 87 09                 a2 = a0 - a1
  2261: ab 59 cf fb              jump @91 if a2 != s0
      :                          @146
  2265: c9 c8 09                 a2 = a1 - a5
  2268: 01                       fallthrough
      :                          @147
  2269: 82 7a                    a3 = u64 [a0]
  2271: ab 8a f1                 jump @145 if a3 != a1
      :                          @148
  2274: 7b 79                    u64 [a0] = a2
  2276: 33 0b                    a4 = 0
  2278: 01                       fallthrough
      :                          @149
  2279: ab 8a e9                 jump @145 if a3 != a1
      :                          @150
  2282: 28 ba fb                 jump @91
      :                          @151
  2285: 95 17 6c                 a0 = sp + 0x6c
  2288: 95 16 f8 50 01           s1 = sp + 0x150f8
  2293: 7b 67 18 01              u64 [s1 + 0x118] = a0
  2297: 33 07 06                 a0 = 0x6
  2300: 7b 67 20 01              u64 [s1 + 0x120] = a0
  2304: 95 17 80 00              a0 = sp + 0x80
  2308: 7b 67 28 01              u64 [s1 + 0x128] = a0
  2312: 33 07 0a                 a0 = 0xa
  2315: 7b 67 30 01              u64 [s1 + 0x130] = a0
  2319: 33 07 68 06 01           a0 = 0x10668
  2324: 7b b7 58                 u64 [a4 + 0x58] = a0
  2327: 49 1b 60 02              u64 [a4 + 96] = 0x2
  2331: 49 1b 78                 u64 [a4 + 120] = 0
  2334: 95 18 10 52 01           a1 = sp + 0x15210
  2339: 7b b8 68                 u64 [a4 + 0x68] = a1
  2342: 49 1b 70 02              u64 [a4 + 112] = 0x2
  2346: 95 17 60 51 01           a0 = sp + 0x15160
  2351: 95 18 f0 40 01           a1 = sp + 0x140f0
  2356: 50 10 4c 56 1a           ra = 76, jump @506
      :                          @152 [@dyn 38]
  2361: 82 65 70                 s0 = u64 [s1 + 0x70]
  2364: 82 6b 78                 a4 = u64 [s1 + 0x78]
  2367: 82 67 68                 a0 = u64 [s1 + 0x68]
  2370: 7b 17 58                 u64 [sp + 0x58] = a0
  2373: 33 07 01                 a0 = 0x1
  2376: 33 08                    a1 = 0
  2378: 33 09                    a2 = 0
  2380: 64 5a                    a3 = s0
  2382: 33 00 4e                 ra = 0x4e
  2385: 0a 64                    ecalli 100 // 'log'
  2387: 01                       fallthrough
      :                          @153 [@dyn 39]
  2388: 82 1c 58                 a5 = u64 [sp + 0x58]
  2391: 82 17 60                 a0 = u64 [sp + 0x60]
  2394: c8 7c 09                 a2 = a5 + a0
  2397: 33 07 00 00 01           a0 = 0x10000
  2402: 53 39 00 00 f0 5d fa     jump @65 if a2 <u 4293918720
      :                          @154
  2409: 33 07 20 10 03           a0 = 0x31020
  2414: 95 77 00 00 10           a0 = a0 + 0x100000
  2419: 01                       fallthrough
      :                          @155
  2420: 82 78                    a1 = u64 [a0]
  2422: c9 87 09                 a2 = a0 - a1
  2425: ab 59 2b fb              jump @91 if a2 != s0
      :                          @156
  2429: c9 c8 09                 a2 = a1 - a5
  2432: 01                       fallthrough
      :                          @157
  2433: 82 7a                    a3 = u64 [a0]
  2435: ab 8a f1                 jump @155 if a3 != a1
      :                          @158
  2438: 7b 79                    u64 [a0] = a2
  2440: 33 0b                    a4 = 0
  2442: 01                       fallthrough
      :                          @159
  2443: ab 8a e9                 jump @155 if a3 != a1
      :                          @160
  2446: 28 16 fb                 jump @91
      :                          @161
  2449: 7c 19 9f 00              a2 = u8 [sp + 0x9f]
  2453: 7c 14 9e 00              t2 = u8 [sp + 0x9e]
  2457: 97 99 08                 a2 = a2 << 0x8
  2460: 7c 16 a2 00              s1 = u8 [sp + 0xa2]
  2464: 7c 15 a1 00              s0 = u8 [sp + 0xa1]
  2468: d4 49 04                 t2 = a2 | t2
  2471: 7c 19 a0 00              a2 = u8 [sp + 0xa0]
  2475: 97 66 10                 s1 = s1 << 0x10
  2478: 97 55 08                 s0 = s0 << 0x8
  2481: d4 65 05                 s0 = s0 | s1
  2484: d4 59 09                 a2 = a2 | s0
  2487: 95 aa 04                 a3 = a3 + 0x4
  2490: 7b b4 10                 u64 [a4 + 0x10] = t2
  2493: 7b b9 18                 u64 [a4 + 0x18] = a2
  2496: 7b b2 20                 u64 [a4 + 0x20] = t0
  2499: 7b b8 28                 u64 [a4 + 0x28] = a1
  2502: 7b b3 30                 u64 [a4 + 0x30] = t1
  2505: 7b b7 38                 u64 [a4 + 0x38] = a0
  2508: 7b ba 40                 u64 [a4 + 0x40] = a3
  2511: 7b bc 48                 u64 [a4 + 0x48] = a5
  2514: 95 17 a8 40 01           a0 = sp + 0x140a8
  2519: 7b b7 58                 u64 [a4 + 0x58] = a0
  2522: 33 08 0a                 a1 = 0xa
  2525: 7b b8 60                 u64 [a4 + 0x60] = a1
  2528: 95 17 b0 40 01           a0 = sp + 0x140b0
  2533: 7b b7 68                 u64 [a4 + 0x68] = a0
  2536: 7b b8 70                 u64 [a4 + 0x70] = a1
  2539: 95 17 b8 40 01           a0 = sp + 0x140b8
  2544: 7b b7 78                 u64 [a4 + 0x78] = a0
  2547: 7b b8 80 00              u64 [a4 + 0x80] = a1
  2551: 95 17 c0 40 01           a0 = sp + 0x140c0
  2556: 7b b7 88 00              u64 [a4 + 0x88] = a0
  2560: 7b b8 90 00              u64 [a4 + 0x90] = a1
  2564: 95 17 c8 40 01           a0 = sp + 0x140c8
  2569: 7b b7 98 00              u64 [a4 + 0x98] = a0
  2573: 7b b8 a0 00              u64 [a4 + 0xa0] = a1
  2577: 95 17 d0 40 01           a0 = sp + 0x140d0
  2582: 7b b7 a8 00              u64 [a4 + 0xa8] = a0
  2586: 7b b8 b0 00              u64 [a4 + 0xb0] = a1
  2590: 95 17 d8 40 01           a0 = sp + 0x140d8
  2595: 7b b7 b8 00              u64 [a4 + 0xb8] = a0
  2599: 7b b8 c0 00              u64 [a4 + 0xc0] = a1
  2603: 95 17 e0 40 01           a0 = sp + 0x140e0
  2608: 7b b7 c8 00              u64 [a4 + 0xc8] = a0
  2612: 7b 18 58                 u64 [sp + 0x58] = a1
  2615: 7b b8 d0 00              u64 [a4 + 0xd0] = a1
  2619: 33 07 d0 01 01           a0 = 0x101d0
  2624: 95 16 f8 50 01           s1 = sp + 0x150f8
  2629: 7b 67 18 01              u64 [s1 + 0x118] = a0
  2633: 49 26 20 01 08           u64 [s1 + 288] = 0x8
  2638: 49 26 38 01              u64 [s1 + 312] = 0
  2642: 95 18 f0 40 01           a1 = sp + 0x140f0
  2647: 7b 68 28 01              u64 [s1 + 0x128] = a1
  2651: 49 26 30 01 08           u64 [s1 + 304] = 0x8
  2656: 95 17 60 51 01           a0 = sp + 0x15160
  2661: 95 18 10 52 01           a1 = sp + 0x15210
  2666: 50 10 50 20 19           ra = 80, jump @506
      :                          @162 [@dyn 40]
  2671: 82 65 70                 s0 = u64 [s1 + 0x70]
  2674: 82 6b 78                 a4 = u64 [s1 + 0x78]
  2677: 82 66 68                 s1 = u64 [s1 + 0x68]
  2680: 33 07 02                 a0 = 0x2
  2683: 33 08                    a1 = 0
  2685: 33 09                    a2 = 0
  2687: 64 5a                    a3 = s0
  2689: 33 00 52                 ra = 0x52
  2692: 0a 64                    ecalli 100 // 'log'
  2694: 01                       fallthrough
      :                          @163 [@dyn 41]
  2695: 82 17 60                 a0 = u64 [sp + 0x60]
  2698: c8 67 07                 a0 = a0 + s1
  2701: 53 37 00 00 f0 25        jump @169 if a0 <u 4293918720
      :                          @164
  2707: 33 07 20 10 03           a0 = 0x31020
  2712: 95 77 00 00 10           a0 = a0 + 0x100000
  2717: 01                       fallthrough
      :                          @165
  2718: 82 78                    a1 = u64 [a0]
  2720: c9 87 09                 a2 = a0 - a1
  2723: ab 59 0f                 jump @169 if a2 != s0
      :                          @166
  2726: c9 68 09                 a2 = a1 - s1
  2729: 01                       fallthrough
      :                          @167
  2730: 82 7a                    a3 = u64 [a0]
  2732: ab 8a f2                 jump @165 if a3 != a1
      :                          @168
  2735: 7b 79                    u64 [a0] = a2
  2737: 01                       fallthrough
      :                          @169
  2738: 95 15 98 40 01           s0 = sp + 0x14098
  2743: 82 57 40                 a0 = u64 [s0 + 0x40]
  2746: 82 58 48                 a1 = u64 [s0 + 0x48]
  2749: 33 09                    a2 = 0
  2751: 0a 08                    ecalli 8 // 'machine'
  2753: 7b 57 50                 u64 [s0 + 0x50] = a0
  2756: 95 17 e8 40 01           a0 = sp + 0x140e8
  2761: 95 16 f8 50 01           s1 = sp + 0x150f8
  2766: 7b 67 68                 u64 [s1 + 0x68] = a0
  2769: 82 17 58                 a0 = u64 [sp + 0x58]
  2772: 7b 67 70                 u64 [s1 + 0x70] = a0
  2775: 33 07 70 02 01           a0 = 0x10270
  2780: 7b 57 58                 u64 [s0 + 0x58] = a0
  2783: 95 17 60 51 01           a0 = sp + 0x15160
  2788: 7b 57 68                 u64 [s0 + 0x68] = a0
  2791: 49 15 60 01              u64 [s0 + 96] = 0x1
  2795: 49 15 70 01              u64 [s0 + 112] = 0x1
  2799: 49 15 78                 u64 [s0 + 120] = 0
  2802: 95 17 10 52 01           a0 = sp + 0x15210
  2807: 95 18 f0 40 01           a1 = sp + 0x140f0
  2812: 50 10 54 8e 18           ra = 84, jump @506
      :                          @170 [@dyn 42]
  2817: 82 65 20 01              s0 = u64 [s1 + 0x120]
  2821: 82 6b 28 01              a4 = u64 [s1 + 0x128]
  2825: 82 66 18 01              s1 = u64 [s1 + 0x118]
  2829: 33 07 02                 a0 = 0x2
  2832: 33 08                    a1 = 0
  2834: 33 09                    a2 = 0
  2836: 64 5a                    a3 = s0
  2838: 33 00 56                 ra = 0x56
  2841: 0a 64                    ecalli 100 // 'log'
  2843: 01                       fallthrough
      :                          @171 [@dyn 43]
  2844: 82 17 60                 a0 = u64 [sp + 0x60]
  2847: c8 67 07                 a0 = a0 + s1
  2850: 53 37 00 00 f0 25        jump @177 if a0 <u 4293918720
      :                          @172
  2856: 33 07 20 10 03           a0 = 0x31020
  2861: 95 77 00 00 10           a0 = a0 + 0x100000
  2866: 01                       fallthrough
      :                          @173
  2867: 82 78                    a1 = u64 [a0]
  2869: c9 87 09                 a2 = a0 - a1
  2872: ab 59 0f                 jump @177 if a2 != s0
      :                          @174
  2875: c9 68 09                 a2 = a1 - s1
  2878: 01                       fallthrough
      :                          @175
  2879: 82 7a                    a3 = u64 [a0]
  2881: ab 8a f2                 jump @173 if a3 != a1
      :                          @176
  2884: 7b 79                    u64 [a0] = a2
  2886: 01                       fallthrough
      :                          @177
  2887: 95 19 98 40 01           a2 = sp + 0x14098
  2892: 82 97 10                 a0 = u64 [a2 + 0x10]
  2895: 82 98 18                 a1 = u64 [a2 + 0x18]
  2898: 82 92 20                 t0 = u64 [a2 + 0x20]
  2901: 82 9a 28                 a3 = u64 [a2 + 0x28]
  2904: 82 9b 30                 a4 = u64 [a2 + 0x30]
  2907: 82 9c 38                 a5 = u64 [a2 + 0x38]
  2910: 82 95 50                 s0 = u64 [a2 + 0x50]
  2913: 33 03 f8 50 01           t1 = 0x150f8
  2918: c8 31 06                 s1 = sp + t1
  2921: 7b 67 30 02              u64 [s1 + 0x230] = a0
  2925: 7b 68 38 02              u64 [s1 + 0x238] = a1
  2929: 7b 62 40 02              u64 [s1 + 0x240] = t0
  2933: 7b 6a 48 02              u64 [s1 + 0x248] = a3
  2937: 7b 6b 50 02              u64 [s1 + 0x250] = a4
  2941: 7b 6c 58 02              u64 [s1 + 0x258] = a5
  2945: 7a 65 64 02              u32 [s1 + 0x264] = s0
  2949: 95 17 28 53 01           a0 = sp + 0x15328
  2954: 7b 97 58                 u64 [a2 + 0x58] = a0
  2957: 33 0a f2 00              a3 = 0xf2
  2961: 7b 9a 60                 u64 [a2 + 0x60] = a3
  2964: 95 17 30 53 01           a0 = sp + 0x15330
  2969: 7b 97 68                 u64 [a2 + 0x68] = a0
  2972: 7b 9a 70                 u64 [a2 + 0x70] = a3
  2975: 95 17 38 53 01           a0 = sp + 0x15338
  2980: 7b 97 78                 u64 [a2 + 0x78] = a0
  2983: 33 07 22 01              a0 = 0x122
  2987: 7b 97 80 00              u64 [a2 + 0x80] = a0
  2991: 95 18 40 53 01           a1 = sp + 0x15340
  2996: 7b 98 88 00              u64 [a2 + 0x88] = a1
  3000: 7b 9a 90 00              u64 [a2 + 0x90] = a3
  3004: 95 18 48 53 01           a1 = sp + 0x15348
  3009: 7b 98 98 00              u64 [a2 + 0x98] = a1
  3013: 7b 97 a0 00              u64 [a2 + 0xa0] = a0
  3017: 95 17 50 53 01           a0 = sp + 0x15350
  3022: 7b 97 a8 00              u64 [a2 + 0xa8] = a0
  3026: 7b 1a 58                 u64 [sp + 0x58] = a3
  3029: 7b 9a b0 00              u64 [a2 + 0xb0] = a3
  3033: 95 17 5c 53 01           a0 = sp + 0x1535c
  3038: 7b 97 b8 00              u64 [a2 + 0xb8] = a0
  3042: 33 07 20 01              a0 = 0x120
  3046: 7b 97 c0 00              u64 [a2 + 0xc0] = a0
  3050: 33 07 e0 08 01           a0 = 0x108e0
  3055: 7b 67 18 01              u64 [s1 + 0x118] = a0
  3059: 49 26 20 01 07           u64 [s1 + 288] = 0x7
  3064: 49 26 38 01              u64 [s1 + 312] = 0
  3068: 95 18 f0 40 01           a1 = sp + 0x140f0
  3073: 7b 68 28 01              u64 [s1 + 0x128] = a1
  3077: 49 26 30 01 07           u64 [s1 + 304] = 0x7
  3082: 95 17 60 51 01           a0 = sp + 0x15160
  3087: 95 18 10 52 01           a1 = sp + 0x15210
  3092: 50 10 58 76 17           ra = 88, jump @506
      :                          @178 [@dyn 44]
  3097: 82 65 70                 s0 = u64 [s1 + 0x70]
  3100: 82 6b 78                 a4 = u64 [s1 + 0x78]
  3103: 82 66 68                 s1 = u64 [s1 + 0x68]
  3106: 33 07 02                 a0 = 0x2
  3109: 33 08                    a1 = 0
  3111: 33 09                    a2 = 0
  3113: 64 5a                    a3 = s0
  3115: 33 00 5a                 ra = 0x5a
  3118: 0a 64                    ecalli 100 // 'log'
  3120: 01                       fallthrough
      :                          @179 [@dyn 45]
  3121: 82 18 60                 a1 = u64 [sp + 0x60]
  3124: c8 68 08                 a1 = a1 + s1
  3127: 33 07 02                 a0 = 0x2
  3130: 53 38 00 00 f0 27        jump @185 if a1 <u 4293918720
      :                          @180
  3136: 33 08 20 10 03           a1 = 0x31020
  3141: 95 88 00 00 10           a1 = a1 + 0x100000
  3146: 01                       fallthrough
      :                          @181
  3147: 82 89                    a2 = u64 [a1]
  3149: c9 98 0a                 a3 = a1 - a2
  3152: ab 5a 11                 jump @185 if a3 != s0
      :                          @182
  3155: c9 69 0a                 a3 = a2 - s1
  3158: 01                       fallthrough
      :                          @183
  3159: 82 8b                    a4 = u64 [a1]
  3161: ab 9b f2                 jump @181 if a4 != a2
      :                          @184
  3164: 7b 8a                    u64 [a1] = a3
  3166: 33 0c                    a5 = 0
  3168: 01                       fallthrough
      :                          @185
  3169: 95 16 f8 50 01           s1 = sp + 0x150f8
  3174: 82 68 48 02              a1 = u64 [s1 + 0x248]
  3178: 33 0b ff 0f              a4 = 0xfff
  3182: c8 b8 08                 a1 = a1 + a4
  3185: 82 69 58 02              a2 = u64 [s1 + 0x258]
  3189: 98 88 0c                 a1 = a1 >> 0xc
  3192: 7b 68 68 02              u64 [s1 + 0x268] = a1
  3196: 82 68 30 02              a1 = u64 [s1 + 0x230]
  3200: c8 b9 09                 a2 = a2 + a4
  3203: 82 6a 38 02              a3 = u64 [s1 + 0x238]
  3207: 98 99 0c                 a2 = a2 >> 0xc
  3210: c8 98 08                 a1 = a1 + a2
  3213: 7b 68 70 02              u64 [s1 + 0x270] = a1
  3217: 7b 1b 50                 u64 [sp + 0x50] = a4
  3220: c8 ba 0a                 a3 = a3 + a4
  3223: 98 aa 0c                 a3 = a3 >> 0xc
  3226: 7b 6a 78 02              u64 [s1 + 0x278] = a3
  3230: 49 26 80 02 00 00 01     u64 [s1 + 640] = 0x10000
  3237: 49 26 88 02 10           u64 [s1 + 648] = 0x10
  3242: 95 18 80 53 01           a1 = sp + 0x15380
  3247: 7b 68 18 01              u64 [s1 + 0x118] = a1
  3251: 82 19 58                 a2 = u64 [sp + 0x58]
  3254: 7b 69 20 01              u64 [s1 + 0x120] = a2
  3258: 95 18 60 53 01           a1 = sp + 0x15360
  3263: 7b 68 28 01              u64 [s1 + 0x128] = a1
  3267: 7b 69 30 01              u64 [s1 + 0x130] = a2
  3271: 33 08 a8 09 01           a1 = 0x109a8
  3276: 95 19 98 40 01           a2 = sp + 0x14098
  3281: 7b 98 58                 u64 [a2 + 0x58] = a1
  3284: 7b 97 60                 u64 [a2 + 0x60] = a0
  3287: 49 19 78                 u64 [a2 + 120] = 0
  3290: 95 18 10 52 01           a1 = sp + 0x15210
  3295: 7b 98 68                 u64 [a2 + 0x68] = a1
  3298: 7b 97 70                 u64 [a2 + 0x70] = a0
  3301: 95 17 60 51 01           a0 = sp + 0x15160
  3306: 95 18 f0 40 01           a1 = sp + 0x140f0
  3311: 50 10 5c 9b 16           ra = 92, jump @506
      :                          @186 [@dyn 46]
  3316: 82 65 70                 s0 = u64 [s1 + 0x70]
  3319: 82 6b 78                 a4 = u64 [s1 + 0x78]
  3322: 82 66 68                 s1 = u64 [s1 + 0x68]
  3325: 33 07 02                 a0 = 0x2
  3328: 33 08                    a1 = 0
  3330: 33 09                    a2 = 0
  3332: 64 5a                    a3 = s0
  3334: 33 00 5e                 ra = 0x5e
  3337: 0a 64                    ecalli 100 // 'log'
  3339: 01                       fallthrough
      :                          @187 [@dyn 47]
  3340: 82 17 60                 a0 = u64 [sp + 0x60]
  3343: c8 67 07                 a0 = a0 + s1
  3346: 53 37 00 00 f0 25        jump @193 if a0 <u 4293918720
      :                          @188
  3352: 33 07 20 10 03           a0 = 0x31020
  3357: 95 77 00 00 10           a0 = a0 + 0x100000
  3362: 01                       fallthrough
      :                          @189
  3363: 82 78                    a1 = u64 [a0]
  3365: c9 87 09                 a2 = a0 - a1
  3368: ab 59 0f                 jump @193 if a2 != s0
      :                          @190
  3371: c9 68 09                 a2 = a1 - s1
  3374: 01                       fallthrough
      :                          @191
  3375: 82 7a                    a3 = u64 [a0]
  3377: ab 8a f2                 jump @189 if a3 != a1
      :                          @192
  3380: 7b 79                    u64 [a0] = a2
  3382: 01                       fallthrough
      :                          @193
  3383: 95 16 f8 50 01           s1 = sp + 0x150f8
  3388: 80 67 64 02              a0 = u32 [s1 + 0x264]
  3392: 82 68 88 02              a1 = u64 [s1 + 0x288]
  3396: 82 69 68 02              a2 = u64 [s1 + 0x268]
  3400: 33 0a 02                 a3 = 0x2
  3403: 0a 0b                    ecalli 11 // 'pages'
  3405: 7b 67 90 02              u64 [s1 + 0x290] = a0
  3409: 95 17 88 53 01           a0 = sp + 0x15388
  3414: 7b 67 68                 u64 [s1 + 0x68] = a0
  3417: 33 07 f2 00              a0 = 0xf2
  3421: 7b 67 70                 u64 [s1 + 0x70] = a0
  3424: 33 07 10 0a 01           a0 = 0x10a10
  3429: 95 18 98 40 01           a1 = sp + 0x14098
  3434: 7b 87 58                 u64 [a1 + 0x58] = a0
  3437: 95 17 60 51 01           a0 = sp + 0x15160
  3442: 7b 87 68                 u64 [a1 + 0x68] = a0
  3445: 49 18 60 01              u64 [a1 + 96] = 0x1
  3449: 49 18 70 01              u64 [a1 + 112] = 0x1
  3453: 49 18 78                 u64 [a1 + 120] = 0
  3456: 95 17 10 52 01           a0 = sp + 0x15210
  3461: 95 18 f0 40 01           a1 = sp + 0x140f0
  3466: 50 10 60 00 16           ra = 96, jump @506
      :                          @194 [@dyn 48]
  3471: 82 65 20 01              s0 = u64 [s1 + 0x120]
  3475: 82 6b 28 01              a4 = u64 [s1 + 0x128]
  3479: 82 66 18 01              s1 = u64 [s1 + 0x118]
  3483: 33 07 02                 a0 = 0x2
  3486: 33 08                    a1 = 0
  3488: 33 09                    a2 = 0
  3490: 64 5a                    a3 = s0
  3492: 33 00 62                 ra = 0x62
  3495: 0a 64                    ecalli 100 // 'log'
  3497: 01                       fallthrough
      :                          @195 [@dyn 49]
  3498: 82 17 60                 a0 = u64 [sp + 0x60]
  3501: c8 67 07                 a0 = a0 + s1
  3504: 53 37 00 00 f0 27        jump @201 if a0 <u 4293918720
      :                          @196
  3510: 33 07 20 10 03           a0 = 0x31020
  3515: 95 77 00 00 10           a0 = a0 + 0x100000
  3520: 01                       fallthrough
      :                          @197
  3521: 82 78                    a1 = u64 [a0]
  3523: c9 87 09                 a2 = a0 - a1
  3526: ab 59 11                 jump @201 if a2 != s0
      :                          @198
  3529: c9 68 09                 a2 = a1 - s1
  3532: 01                       fallthrough
      :                          @199
  3533: 82 7a                    a3 = u64 [a0]
  3535: ab 8a f2                 jump @197 if a3 != a1
      :                          @200
  3538: 7b 79                    u64 [a0] = a2
  3540: 33 0b                    a4 = 0
  3542: 01                       fallthrough
      :                          @201
  3543: 95 17 f8 50 01           a0 = sp + 0x150f8
  3548: 82 77 90 02              a0 = u64 [a0 + 0x290]
  3552: 51 07 78 0b              jump @314 if a0 == 0
      :                          @202
  3556: 33 0a 18 0e 01           a3 = 0x10e18
  3561: 33 07 01                 a0 = 0x1
  3564: 33 0b 3e                 a4 = 0x3e
  3567: 33 08                    a1 = 0
  3569: 33 09                    a2 = 0
  3571: 0a 64                    ecalli 100 // 'log'
  3573: 01                       fallthrough
      :                          @203
  3574: 33 09 08 10              a2 = 0x1008
  3578: 95 17 f0 40 01           a0 = sp + 0x140f0
  3583: 33 08                    a1 = 0
  3585: 7b 19 48                 u64 [sp + 0x48] = a2
  3588: 50 10 64 b2 18           ra = 100, jump @574
      :                          @204 [@dyn 50]
  3593: 49 11 10                 u64 [sp + 16] = 0
  3596: 95 17 f8 50 01           a0 = sp + 0x150f8
  3601: 49 27 70 02              u64 [a0 + 624] = 0
  3605: 33 05 20 10 03           s0 = 0x31020
  3610: 33 0b 00 00 10           a4 = 0x100000
  3615: 33 07 80 02 01           a0 = 0x10280
  3620: 7b 17 38                 u64 [sp + 0x38] = a0
  3623: 33 07 0a                 a0 = 0xa
  3626: 7b 17 58                 u64 [sp + 0x58] = a0
  3629: 33 07 c0 02 01           a0 = 0x102c0
  3634: 7b 17 30                 u64 [sp + 0x30] = a0
  3637: 33 07 08 03 01           a0 = 0x10308
  3642: 7b 17 08                 u64 [sp + 0x8] = a0
  3645: 33 07 40 03 01           a0 = 0x10340
  3650: 7b 17 28                 u64 [sp + 0x28] = a0
  3653: 33 07 00 00 01           a0 = 0x10000
  3658: 7b 17 20                 u64 [sp + 0x20] = a0
  3661: 33 07 98 03 01           a0 = 0x10398
  3666: 7b 17 18                 u64 [sp + 0x18] = a0
  3669: 7b 15 40                 u64 [sp + 0x40] = s0
  3672: c8 b5 05                 s0 = s0 + a4
  3675: 28 18                    jump @206
      :                          @205
  3677: 95 18 f8 50 01           a1 = sp + 0x150f8
  3682: 82 87 70 02              a0 = u64 [a1 + 0x270]
  3686: 95 77 01                 a0 = a0 + 0x1
  3689: 7b 87 70 02              u64 [a1 + 0x270] = a0
  3693: 33 0b 00 00 10           a4 = 0x100000
  3698: 01                       fallthrough
      :                          @206
  3699: 82 58                    a1 = u64 [s0]
  3701: 95 87 12                 a0 = a1 + 0x12
  3704: ae 87 06                 jump @208 if a0 >=u a1
      :                          @207
  3707: 28 10 10                 jump @383
      :                          @208
  3710: 95 79 01                 a2 = a0 + 0x1
  3713: 88 9a 01                 a3 = a2 <u 0x1
  3716: d8 9b 09                 a2 = a4 <u a2
  3719: d4 a9 09                 a2 = a2 | a3
  3722: 51 09 06                 jump @210 if a2 == 0
      :                          @209
  3725: 28 fe 0f                 jump @383
      :                          @210
  3728: 82 59                    a2 = u64 [s0]
  3730: ab 89 e1                 jump @206 if a2 != a1
      :                          @211
  3733: 7b 57                    u64 [s0] = a0
  3735: 82 16 40                 s1 = u64 [sp + 0x40]
  3738: c9 76 06                 s1 = s1 - a0
  3741: c8 b6 06                 s1 = s1 + a4
  3744: 33 09 12                 a2 = 0x12
  3747: 64 67                    a0 = s1
  3749: 82 18 38                 a1 = u64 [sp + 0x38]
  3752: 50 10 66 5c 17           ra = 102, jump @556
      :                          @212 [@dyn 51]
  3757: 33 07 02                 a0 = 0x2
  3760: 33 0b 12                 a4 = 0x12
  3763: 33 08                    a1 = 0
  3765: 33 09                    a2 = 0
  3767: 64 6a                    a3 = s1
  3769: 33 00 68                 ra = 0x68
  3772: 0a 64                    ecalli 100 // 'log'
  3774: 01                       fallthrough
      :                          @213 [@dyn 52]
  3775: 82 57                    a0 = u64 [s0]
  3777: c9 75 08                 a1 = s0 - a0
  3780: ab 68 0f                 jump @217 if a1 != s1
      :                          @214
  3783: 95 78 ee                 a1 = a0 + 0xffffffffffffffee
  3786: 01                       fallthrough
      :                          @215
  3787: 82 59                    a2 = u64 [s0]
  3789: ab 79 f2                 jump @213 if a2 != a0
      :                          @216
  3792: 7b 58                    u64 [s0] = a1
  3794: 01                       fallthrough
      :                          @217
  3795: 95 16 f8 50 01           s1 = sp + 0x150f8
  3800: 82 6b 70 02              a4 = u64 [s1 + 0x270]
  3804: 95 17 f0 40 01           a0 = sp + 0x140f0
  3809: 33 0a 06                 a3 = 0x6
  3812: 33 08                    a1 = 0
  3814: 82 19 48                 a2 = u64 [sp + 0x48]
  3817: 33 0c                    a5 = 0
  3819: 0a 01                    ecalli 1 // 'fetch'
  3821: 01                       fallthrough
      :                          @218
  3822: 7b 67 90 02              u64 [s1 + 0x290] = a0
  3826: 51 17 ff d6 02           jump @251 if a0 == 4294967295
      :                          @219
  3831: 95 17 68 53 01           a0 = sp + 0x15368
  3836: 7b 67 68                 u64 [s1 + 0x68] = a0
  3839: 82 17 58                 a0 = u64 [sp + 0x58]
  3842: 7b 67 70                 u64 [s1 + 0x70] = a0
  3845: 95 18 88 53 01           a1 = sp + 0x15388
  3850: 7b 68 78                 u64 [s1 + 0x78] = a1
  3853: 7b 67 80 00              u64 [s1 + 0x80] = a0
  3857: 82 17 30                 a0 = u64 [sp + 0x30]
  3860: 7b 67 18 01              u64 [s1 + 0x118] = a0
  3864: 49 26 20 01 02           u64 [s1 + 288] = 0x2
  3869: 49 26 38 01              u64 [s1 + 312] = 0
  3873: 95 18 60 51 01           a1 = sp + 0x15160
  3878: 7b 68 28 01              u64 [s1 + 0x128] = a1
  3882: 49 26 30 01 02           u64 [s1 + 304] = 0x2
  3887: 95 17 f8 50 01           a0 = sp + 0x150f8
  3892: 95 18 10 52 01           a1 = sp + 0x15210
  3897: 50 10 6a 51 14           ra = 106, jump @506
      :                          @220 [@dyn 53]
  3902: 95 17 f8 50 01           a0 = sp + 0x150f8
  3907: 82 76 08                 s1 = u64 [a0 + 0x8]
  3910: 82 7b 10                 a4 = u64 [a0 + 0x10]
  3913: 82 77                    a0 = u64 [a0]
  3915: 7b 17 50                 u64 [sp + 0x50] = a0
  3918: 33 07 02                 a0 = 0x2
  3921: 33 08                    a1 = 0
  3923: 33 09                    a2 = 0
  3925: 64 6a                    a3 = s1
  3927: 33 00 6c                 ra = 0x6c
  3930: 0a 64                    ecalli 100 // 'log'
  3932: 01                       fallthrough
      :                          @221 [@dyn 54]
  3933: 82 1b 50                 a4 = u64 [sp + 0x50]
  3936: 82 17 60                 a0 = u64 [sp + 0x60]
  3939: c8 b7 07                 a0 = a0 + a4
  3942: 53 37 00 00 f0 1a        jump @226 if a0 <u 4293918720
      :                          @222
  3948: 82 57                    a0 = u64 [s0]
  3950: c9 75 08                 a1 = s0 - a0
  3953: ab 68 0f                 jump @226 if a1 != s1
      :                          @223
  3956: c9 b7 08                 a1 = a0 - a4
  3959: 01                       fallthrough
      :                          @224
  3960: 82 59                    a2 = u64 [s0]
  3962: ab 79 f2                 jump @222 if a2 != a0
      :                          @225
  3965: 7b 58                    u64 [s0] = a1
  3967: 01                       fallthrough
      :                          @226
  3968: 95 18 98 40 01           a1 = sp + 0x14098
  3973: 80 87 58                 a0 = u32 [a1 + 0x58]
  3976: 80 88 5c                 a1 = u32 [a1 + 0x5c]
  3979: 95 16 f8 50 01           s1 = sp + 0x150f8
  3984: 82 69 70 02              a2 = u64 [s1 + 0x270]
  3988: 7b 67 78 02              u64 [s1 + 0x278] = a0
  3992: 7b 68 80 02              u64 [s1 + 0x280] = a1
  3996: 52 09 a1 00              jump @235 if a2 != 0
      :                          @227
  4000: 95 17 70 53 01           a0 = sp + 0x15370
  4005: 7b 67 68                 u64 [s1 + 0x68] = a0
  4008: 82 17 58                 a0 = u64 [sp + 0x58]
  4011: 7b 67 70                 u64 [s1 + 0x70] = a0
  4014: 95 18 78 53 01           a1 = sp + 0x15378
  4019: 7b 68 78                 u64 [s1 + 0x78] = a1
  4022: 7b 67 80 00              u64 [s1 + 0x80] = a0
  4026: 82 17 08                 a0 = u64 [sp + 0x8]
  4029: 7b 67 18 01              u64 [s1 + 0x118] = a0
  4033: 49 26 20 01 02           u64 [s1 + 288] = 0x2
  4038: 49 26 38 01              u64 [s1 + 312] = 0
  4042: 95 18 60 51 01           a1 = sp + 0x15160
  4047: 7b 68 28 01              u64 [s1 + 0x128] = a1
  4051: 49 26 30 01 02           u64 [s1 + 304] = 0x2
  4056: 95 17 f8 50 01           a0 = sp + 0x150f8
  4061: 95 18 10 52 01           a1 = sp + 0x15210
  4066: 50 10 6e a8 13           ra = 110, jump @506
      :                          @228 [@dyn 55]
  4071: 95 17 f8 50 01           a0 = sp + 0x150f8
  4076: 82 76 08                 s1 = u64 [a0 + 0x8]
  4079: 82 7b 10                 a4 = u64 [a0 + 0x10]
  4082: 82 77                    a0 = u64 [a0]
  4084: 7b 17 50                 u64 [sp + 0x50] = a0
  4087: 33 07 02                 a0 = 0x2
  4090: 33 08                    a1 = 0
  4092: 33 09                    a2 = 0
  4094: 64 6a                    a3 = s1
  4096: 33 00 70                 ra = 0x70
  4099: 0a 64                    ecalli 100 // 'log'
  4101: 01                       fallthrough
      :                          @229 [@dyn 56]
  4102: 82 1b 50                 a4 = u64 [sp + 0x50]
  4105: 82 17 60                 a0 = u64 [sp + 0x60]
  4108: c8 b7 07                 a0 = a0 + a4
  4111: 53 37 00 00 f0 1a        jump @234 if a0 <u 4293918720
      :                          @230
  4117: 82 57                    a0 = u64 [s0]
  4119: c9 75 08                 a1 = s0 - a0
  4122: ab 68 0f                 jump @234 if a1 != s1
      :                          @231
  4125: c9 b7 08                 a1 = a0 - a4
  4128: 01                       fallthrough
      :                          @232
  4129: 82 59                    a2 = u64 [s0]
  4131: ab 79 f2                 jump @230 if a2 != a0
      :                          @233
  4134: 7b 58                    u64 [s0] = a1
  4136: 01                       fallthrough
      :                          @234
  4137: 95 16 f8 50 01           s1 = sp + 0x150f8
  4142: 82 68 80 02              a1 = u64 [s1 + 0x280]
  4146: 82 67 78 02              a0 = u64 [s1 + 0x278]
  4150: 97 89 0c                 a2 = a1 << 0xc
  4153: 7b 19 10                 u64 [sp + 0x10] = a2
  4156: 01                       fallthrough
      :                          @235
  4157: 33 09 01                 a2 = 0x1
  4160: 33 0a 02                 a3 = 0x2
  4163: 0a 0b                    ecalli 11 // 'pages'
  4165: 7b 67 98 02              u64 [s1 + 0x298] = a0
  4169: 95 17 70 53 01           a0 = sp + 0x15370
  4174: 7b 67 18 01              u64 [s1 + 0x118] = a0
  4178: 82 17 58                 a0 = u64 [sp + 0x58]
  4181: 7b 67 20 01              u64 [s1 + 0x120] = a0
  4185: 95 18 78 53 01           a1 = sp + 0x15378
  4190: 7b 68 28 01              u64 [s1 + 0x128] = a1
  4194: 7b 67 30 01              u64 [s1 + 0x130] = a0
  4198: 95 18 90 53 01           a1 = sp + 0x15390
  4203: 7b 68 38 01              u64 [s1 + 0x138] = a1
  4207: 7b 67 40 01              u64 [s1 + 0x140] = a0
  4211: 82 17 28                 a0 = u64 [sp + 0x28]
  4214: 7b 67 68                 u64 [s1 + 0x68] = a0
  4217: 49 16 70 03              u64 [s1 + 112] = 0x3
  4221: 49 26 88 00              u64 [s1 + 136] = 0
  4225: 95 17 10 52 01           a0 = sp + 0x15210
  4230: 7b 67 78                 u64 [s1 + 0x78] = a0
  4233: 49 26 80 00 03           u64 [s1 + 128] = 0x3
  4238: 95 17 f8 50 01           a0 = sp + 0x150f8
  4243: 95 18 60 51 01           a1 = sp + 0x15160
  4248: 50 10 72 f2 12           ra = 114, jump @506
      :                          @236 [@dyn 57]
  4253: 95 17 f8 50 01           a0 = sp + 0x150f8
  4258: 82 76 08                 s1 = u64 [a0 + 0x8]
  4261: 82 7b 10                 a4 = u64 [a0 + 0x10]
  4264: 82 77                    a0 = u64 [a0]
  4266: 7b 17 50                 u64 [sp + 0x50] = a0
  4269: 33 07 02                 a0 = 0x2
  4272: 33 08                    a1 = 0
  4274: 33 09                    a2 = 0
  4276: 64 6a                    a3 = s1
  4278: 33 00 74                 ra = 0x74
  4281: 0a 64                    ecalli 100 // 'log'
  4283: 01                       fallthrough
      :                          @237 [@dyn 58]
  4284: 82 1b 50                 a4 = u64 [sp + 0x50]
  4287: 82 17 60                 a0 = u64 [sp + 0x60]
  4290: c8 b7 07                 a0 = a0 + a4
  4293: 53 37 00 00 f0 1a        jump @242 if a0 <u 4293918720
      :                          @238
  4299: 82 57                    a0 = u64 [s0]
  4301: c9 75 08                 a1 = s0 - a0
  4304: ab 68 0f                 jump @242 if a1 != s1
      :                          @239
  4307: c9 b7 08                 a1 = a0 - a4
  4310: 01                       fallthrough
      :                          @240
  4311: 82 59                    a2 = u64 [s0]
  4313: ab 79 f2                 jump @238 if a2 != a0
      :                          @241
  4316: 7b 58                    u64 [s0] = a1
  4318: 01                       fallthrough
      :                          @242
  4319: 95 1a f8 50 01           a3 = sp + 0x150f8
  4324: 82 a9 80 02              a2 = u64 [a3 + 0x280]
  4328: 82 a7 78 02              a0 = u64 [a3 + 0x278]
  4332: 95 18 f0 40 01           a1 = sp + 0x140f0
  4337: 7b a8 a0 02              u64 [a3 + 0x2a0] = a1
  4341: 97 99 0c                 a2 = a2 << 0xc
  4344: 7b a9 18 02              u64 [a3 + 0x218] = a2
  4348: 33 0a 00 10              a3 = 0x1000
  4352: 95 18 f8 40 01           a1 = sp + 0x140f8
  4357: 0a 0a                    ecalli 10 // 'poke'
  4359: 95 19 f8 50 01           a2 = sp + 0x150f8
  4364: 7b 97 d8 00              u64 [a2 + 0xd8] = a0
  4368: 95 17 70 53 01           a0 = sp + 0x15370
  4373: 7b 97 18 01              u64 [a2 + 0x118] = a0
  4377: 82 17 58                 a0 = u64 [sp + 0x58]
  4380: 7b 97 20 01              u64 [a2 + 0x120] = a0
  4384: 95 18 98 53 01           a1 = sp + 0x15398
  4389: 7b 98 28 01              u64 [a2 + 0x128] = a1
  4393: 7b 97 30 01              u64 [a2 + 0x130] = a0
  4397: 95 18 10 53 01           a1 = sp + 0x15310
  4402: 7b 98 38 01              u64 [a2 + 0x138] = a1
  4406: 7b 97 40 01              u64 [a2 + 0x140] = a0
  4410: 82 18 20                 a1 = u64 [sp + 0x20]
  4413: 7b 98 48 01              u64 [a2 + 0x148] = a1
  4417: 7b 97 50 01              u64 [a2 + 0x150] = a0
  4421: 95 18 d0 51 01           a1 = sp + 0x151d0
  4426: 7b 98 58 01              u64 [a2 + 0x158] = a1
  4430: 7b 97 60 01              u64 [a2 + 0x160] = a0
  4434: 82 17 18                 a0 = u64 [sp + 0x18]
  4437: 7b 97 68                 u64 [a2 + 0x68] = a0
  4440: 49 19 70 05              u64 [a2 + 112] = 0x5
  4444: 49 29 88 00              u64 [a2 + 136] = 0
  4448: 95 17 10 52 01           a0 = sp + 0x15210
  4453: 7b 97 78                 u64 [a2 + 0x78] = a0
  4456: 49 29 80 00 05           u64 [a2 + 128] = 0x5
  4461: 95 17 f8 50 01           a0 = sp + 0x150f8
  4466: 95 18 60 51 01           a1 = sp + 0x15160
  4471: 50 10 76 13 12           ra = 118, jump @506
      :                          @243 [@dyn 59]
  4476: 95 17 f8 50 01           a0 = sp + 0x150f8
  4481: 82 76 08                 s1 = u64 [a0 + 0x8]
  4484: 82 7b 10                 a4 = u64 [a0 + 0x10]
  4487: 82 77                    a0 = u64 [a0]
  4489: 7b 17 50                 u64 [sp + 0x50] = a0
  4492: 33 07 02                 a0 = 0x2
  4495: 33 08                    a1 = 0
  4497: 33 09                    a2 = 0
  4499: 64 6a                    a3 = s1
  4501: 33 00 78                 ra = 0x78
  4504: 0a 64                    ecalli 100 // 'log'
  4506: 01                       fallthrough
      :                          @244 [@dyn 60]
  4507: 82 1b 50                 a4 = u64 [sp + 0x50]
  4510: 82 17 60                 a0 = u64 [sp + 0x60]
  4513: c8 b7 07                 a0 = a0 + a4
  4516: 53 37 00 00 f0 b9 fc     jump @205 if a0 <u 4293918720
      :                          @245
  4523: 82 57                    a0 = u64 [s0]
  4525: c9 75 08                 a1 = s0 - a0
  4528: ab 68 ad fc              jump @205 if a1 != s1
      :                          @246
  4532: c9 b7 08                 a1 = a0 - a4
  4535: 01                       fallthrough
      :                          @247
  4536: 82 59                    a2 = u64 [s0]
  4538: ab 79 f1                 jump @245 if a2 != a0
      :                          @248
  4541: 7b 58                    u64 [s0] = a1
  4543: 33 0a                    a3 = 0
  4545: 01                       fallthrough
      :                          @249
  4546: ab 79 e9                 jump @245 if a2 != a0
      :                          @250
  4549: 28 98 fc                 jump @205
      :                          @251
  4552: 95 17 68 53 01           a0 = sp + 0x15368
  4557: 7b 67                    u64 [s1] = a0
  4559: 33 07 0a                 a0 = 0xa
  4562: 7b 17 30                 u64 [sp + 0x30] = a0
  4565: 7b 67 08                 u64 [s1 + 0x8] = a0
  4568: 33 07 18 04 01           a0 = 0x10418
  4573: 7b 67 18 01              u64 [s1 + 0x118] = a0
  4577: 49 26 20 01 01           u64 [s1 + 288] = 0x1
  4582: 49 26 38 01              u64 [s1 + 312] = 0
  4586: 95 18 f8 50 01           a1 = sp + 0x150f8
  4591: 7b 68 28 01              u64 [s1 + 0x128] = a1
  4595: 49 26 30 01 01           u64 [s1 + 304] = 0x1
  4600: 95 17 60 51 01           a0 = sp + 0x15160
  4605: 95 18 10 52 01           a1 = sp + 0x15210
  4610: 50 10 7a 88 11           ra = 122, jump @506
      :                          @252 [@dyn 61]
  4615: 82 65 70                 s0 = u64 [s1 + 0x70]
  4618: 82 6b 78                 a4 = u64 [s1 + 0x78]
  4621: 95 17 f8 50 01           a0 = sp + 0x150f8
  4626: 82 76 68                 s1 = u64 [a0 + 0x68]
  4629: 33 07 02                 a0 = 0x2
  4632: 33 08                    a1 = 0
  4634: 33 09                    a2 = 0
  4636: 64 5a                    a3 = s0
  4638: 33 00 7c                 ra = 0x7c
  4641: 0a 64                    ecalli 100 // 'log'
  4643: 01                       fallthrough
      :                          @253 [@dyn 62]
  4644: 82 17 60                 a0 = u64 [sp + 0x60]
  4647: c8 67 07                 a0 = a0 + s1
  4650: 53 37 00 00 f0 25        jump @259 if a0 <u 4293918720
      :                          @254
  4656: 33 07 20 10 03           a0 = 0x31020
  4661: 95 77 00 00 10           a0 = a0 + 0x100000
  4666: 01                       fallthrough
      :                          @255
  4667: 82 78                    a1 = u64 [a0]
  4669: c9 87 09                 a2 = a0 - a1
  4672: ab 59 0f                 jump @259 if a2 != s0
      :                          @256
  4675: c9 68 09                 a2 = a1 - s1
  4678: 01                       fallthrough
      :                          @257
  4679: 82 7a                    a3 = u64 [a0]
  4681: ab 8a f2                 jump @255 if a3 != a1
      :                          @258
  4684: 7b 79                    u64 [a0] = a2
  4686: 01                       fallthrough
      :                          @259
  4687: 95 15 f8 50 01           s0 = sp + 0x150f8
  4692: 49 15 30                 u64 [s0 + 48] = 0
  4695: 49 15 28                 u64 [s0 + 40] = 0
  4698: 49 15 20                 u64 [s0 + 32] = 0
  4701: 49 15 18                 u64 [s0 + 24] = 0
  4704: 49 15 10                 u64 [s0 + 16] = 0
  4707: 49 15 60                 u64 [s0 + 96] = 0
  4710: 14 02 00 00 ff ff 00 00 00 00 t0 = 0xffff0000
  4720: 7b 52                    u64 [s0] = t0
  4722: 82 59 70 02              a2 = u64 [s0 + 0x270]
  4726: 14 08 00 00 fe fe 00 00 00 00 a1 = 0xfefe0000
  4736: 7b 58 08                 u64 [s0 + 0x8] = a1
  4739: 82 17 10                 a0 = u64 [sp + 0x10]
  4742: 7b 57 38                 u64 [s0 + 0x38] = a0
  4745: 97 99 0c                 a2 = a2 << 0xc
  4748: 80 1a 8c 00              a3 = u32 [sp + 0x8c]
  4752: 80 1b 90 00              a4 = u32 [sp + 0x90]
  4756: 80 1c 94 00              a5 = u32 [sp + 0x94]
  4760: 7b 59 40                 u64 [s0 + 0x40] = a2
  4763: 7b 5a 48                 u64 [s0 + 0x48] = a3
  4766: 7b 5b 50                 u64 [s0 + 0x50] = a4
  4769: 7b 5c 58                 u64 [s0 + 0x58] = a5
  4772: 14 06 ff ff ff ff ff ff ff 6f s1 = 0x6fffffffffffffff
  4782: 7b 56 68                 u64 [s0 + 0x68] = s1
  4785: 95 16 f8 50 01           s1 = sp + 0x150f8
  4790: 7b 62 70                 u64 [s1 + 0x70] = t0
  4793: 7b 68 78                 u64 [s1 + 0x78] = a1
  4796: 49 26 80 00              u64 [s1 + 128] = 0
  4800: 49 26 88 00              u64 [s1 + 136] = 0
  4804: 49 26 90 00              u64 [s1 + 144] = 0
  4808: 49 26 98 00              u64 [s1 + 152] = 0
  4812: 49 26 a0 00              u64 [s1 + 160] = 0
  4816: 7b 67 a8 00              u64 [s1 + 0xa8] = a0
  4820: 7b 69 b0 00              u64 [s1 + 0xb0] = a2
  4824: 7b 6a b8 00              u64 [s1 + 0xb8] = a3
  4828: 7b 6b c0 00              u64 [s1 + 0xc0] = a4
  4832: 7b 6c c8 00              u64 [s1 + 0xc8] = a5
  4836: 49 26 d0 00              u64 [s1 + 208] = 0
  4840: 49 26 98 02              u64 [s1 + 664] = 0
  4844: 33 07 50 04 01           a0 = 0x10450
  4849: 7b 17 28                 u64 [sp + 0x28] = a0
  4852: 33 07 20 10 03           a0 = 0x31020
  4857: 95 77 00 00 10           a0 = a0 + 0x100000
  4862: 7b 17 20                 u64 [sp + 0x20] = a0
  4865: 01                       fallthrough
      :                          @260
  4866: 95 17 98 40 01           a0 = sp + 0x14098
  4871: 82 77 50                 a0 = u64 [a0 + 0x50]
  4874: 95 18 60 51 01           a1 = sp + 0x15160
  4879: 0a 0c                    ecalli 12 // 'invoke'
  4881: 7b 67 88 02              u64 [s1 + 0x288] = a0
  4885: 7b 68 90 02              u64 [s1 + 0x290] = a1
  4889: 95 17 e8 40 01           a0 = sp + 0x140e8
  4894: 7b 67 18 01              u64 [s1 + 0x118] = a0
  4898: 82 17 30                 a0 = u64 [sp + 0x30]
  4901: 7b 67 20 01              u64 [s1 + 0x120] = a0
  4905: 95 18 80 53 01           a1 = sp + 0x15380
  4910: 7b 68 28 01              u64 [s1 + 0x128] = a1
  4914: 7b 67 30 01              u64 [s1 + 0x130] = a0
  4918: 95 18 88 53 01           a1 = sp + 0x15388
  4923: 7b 68 38 01              u64 [s1 + 0x138] = a1
  4927: 7b 67 40 01              u64 [s1 + 0x140] = a0
  4931: 82 17 28                 a0 = u64 [sp + 0x28]
  4934: 7b 67 d8 00              u64 [s1 + 0xd8] = a0
  4938: 49 26 e0 00 03           u64 [s1 + 224] = 0x3
  4943: 49 26 f8 00              u64 [s1 + 248] = 0
  4947: 95 17 10 52 01           a0 = sp + 0x15210
  4952: 7b 67 e8 00              u64 [s1 + 0xe8] = a0
  4956: 49 26 f0 00 03           u64 [s1 + 240] = 0x3
  4961: 95 17 10 53 01           a0 = sp + 0x15310
  4966: 95 18 d0 51 01           a1 = sp + 0x151d0
  4971: 50 10 7e 1f 10           ra = 126, jump @506
      :                          @261 [@dyn 63]
  4976: 82 65 20 02              s0 = u64 [s1 + 0x220]
  4980: 82 6b 28 02              a4 = u64 [s1 + 0x228]
  4984: 95 17 f8 50 01           a0 = sp + 0x150f8
  4989: 82 76 18 02              s1 = u64 [a0 + 0x218]
  4993: 33 07 02                 a0 = 0x2
  4996: 33 08                    a1 = 0
  4998: 33 09                    a2 = 0
  5000: 64 5a                    a3 = s0
  5002: 33 00 80 00              ra = 0x80
  5006: 0a 64                    ecalli 100 // 'log'
  5008: 01                       fallthrough
      :                          @262 [@dyn 64]
  5009: 82 17 60                 a0 = u64 [sp + 0x60]
  5012: c8 67 07                 a0 = a0 + s1
  5015: 82 1b 20                 a4 = u64 [sp + 0x20]
  5018: 53 37 00 00 f0 1a        jump @267 if a0 <u 4293918720
      :                          @263
  5024: 82 b7                    a0 = u64 [a4]
  5026: c9 7b 08                 a1 = a4 - a0
  5029: ab 58 0f                 jump @267 if a1 != s0
      :                          @264
  5032: c9 67 08                 a1 = a0 - s1
  5035: 01                       fallthrough
      :                          @265
  5036: 82 b9                    a2 = u64 [a4]
  5038: ab 79 f2                 jump @263 if a2 != a0
      :                          @266
  5041: 7b b8                    u64 [a4] = a1
  5043: 01                       fallthrough
      :                          @267
  5044: 95 16 f8 50 01           s1 = sp + 0x150f8
  5049: 82 67 88 02              a0 = u64 [s1 + 0x288]
  5053: 82 68 90 02              a1 = u64 [s1 + 0x290]
  5057: 85 77 03                 a0 = a0 ^ 0x3
  5060: 85 88 64                 a1 = a1 ^ 0x64
  5063: d4 87 07                 a0 = a0 | a1
  5066: 52 07 a4 00              jump @271 if a0 != 0
      :                          @268
  5070: 95 17 f8 50 01           a0 = sp + 0x150f8
  5075: 33 09 68                 a2 = 0x68
  5078: 95 18 68 51 01           a1 = sp + 0x15168
  5083: 50 20 82 00 29 12        ra = 130, jump @556
      :                          @269 [@dyn 65]
  5089: 82 67 38                 a0 = u64 [s1 + 0x38]
  5092: 7b 17 50                 u64 [sp + 0x50] = a0
  5095: 82 67 40                 a0 = u64 [s1 + 0x40]
  5098: 7b 17 40                 u64 [sp + 0x40] = a0
  5101: 82 67 48                 a0 = u64 [s1 + 0x48]
  5104: 7b 17 58                 u64 [sp + 0x58] = a0
  5107: 82 67 50                 a0 = u64 [s1 + 0x50]
  5110: 7b 17 48                 u64 [sp + 0x48] = a0
  5113: 82 67 58                 a0 = u64 [s1 + 0x58]
  5116: 7b 17 38                 u64 [sp + 0x38] = a0
  5119: 49 26 10 01              u64 [s1 + 272] = 0
  5123: 49 26 08 01              u64 [s1 + 264] = 0
  5127: 49 26 00 01              u64 [s1 + 256] = 0
  5131: 49 26 f8 00              u64 [s1 + 248] = 0
  5135: 49 26 f0 00              u64 [s1 + 240] = 0
  5139: 49 26 e8 00              u64 [s1 + 232] = 0
  5143: 49 26 e0 00              u64 [s1 + 224] = 0
  5147: 49 26 d8 00              u64 [s1 + 216] = 0
  5151: 95 17 10 52 01           a0 = sp + 0x15210
  5156: 33 09 00 01              a2 = 0x100
  5160: 33 08                    a1 = 0
  5162: 50 20 84 00 8c 12        ra = 132, jump @574
      :                          @270 [@dyn 66]
  5168: 95 15 98 40 01           s0 = sp + 0x14098
  5173: 82 57 50                 a0 = u64 [s0 + 0x50]
  5176: 95 18 d0 51 01           a1 = sp + 0x151d0
  5181: 82 19 40                 a2 = u64 [sp + 0x40]
  5184: 82 1a 58                 a3 = u64 [sp + 0x58]
  5187: 0a 09                    ecalli 9 // 'peek'
  5189: 82 57 50                 a0 = u64 [s0 + 0x50]
  5192: 95 18 10 52 01           a1 = sp + 0x15210
  5197: 82 19 48                 a2 = u64 [sp + 0x48]
  5200: 82 15 38                 s0 = u64 [sp + 0x38]
  5203: 64 5a                    a3 = s0
  5205: 0a 09                    ecalli 9 // 'peek'
  5207: 95 18 d0 51 01           a1 = sp + 0x151d0
  5212: 95 1a 10 52 01           a3 = sp + 0x15210
  5217: 82 17 50                 a0 = u64 [sp + 0x50]
  5220: 82 19 58                 a2 = u64 [sp + 0x58]
  5223: 64 5b                    a4 = s0
  5225: 0a 64                    ecalli 100 // 'log'
  5227: 28 97 fe                 jump @260
      :                          @271
  5230: 95 17 80 53 01           a0 = sp + 0x15380
  5235: 7b 67 d8 00              u64 [s1 + 0xd8] = a0
  5239: 33 08 0a                 a1 = 0xa
  5242: 7b 68 e0 00              u64 [s1 + 0xe0] = a1
  5246: 95 17 88 53 01           a0 = sp + 0x15388
  5251: 7b 67 e8 00              u64 [s1 + 0xe8] = a0
  5255: 7b 18 58                 u64 [sp + 0x58] = a1
  5258: 7b 68 f0 00              u64 [s1 + 0xf0] = a1
  5262: 33 07 b0 04 01           a0 = 0x104b0
  5267: 7b 67 18 01              u64 [s1 + 0x118] = a0
  5271: 49 26 20 01 02           u64 [s1 + 288] = 0x2
  5276: 49 26 38 01              u64 [s1 + 312] = 0
  5280: 95 18 d0 51 01           a1 = sp + 0x151d0
  5285: 7b 68 28 01              u64 [s1 + 0x128] = a1
  5289: 49 26 30 01 02           u64 [s1 + 304] = 0x2
  5294: 95 17 10 53 01           a0 = sp + 0x15310
  5299: 95 18 10 52 01           a1 = sp + 0x15210
  5304: 50 20 86 00 d2 0e        ra = 134, jump @506
      :                          @272 [@dyn 67]
  5310: 82 65 20 02              s0 = u64 [s1 + 0x220]
  5314: 82 6b 28 02              a4 = u64 [s1 + 0x228]
  5318: 95 17 f8 50 01           a0 = sp + 0x150f8
  5323: 82 76 18 02              s1 = u64 [a0 + 0x218]
  5327: 33 07 02                 a0 = 0x2
  5330: 33 08                    a1 = 0
  5332: 33 09                    a2 = 0
  5334: 64 5a                    a3 = s0
  5336: 33 00 88 00              ra = 0x88
  5340: 0a 64                    ecalli 100 // 'log'
  5342: 01                       fallthrough
      :                          @273 [@dyn 68]
  5343: 82 17 60                 a0 = u64 [sp + 0x60]
  5346: c8 67 07                 a0 = a0 + s1
  5349: 53 37 00 00 f0 27        jump @279 if a0 <u 4293918720
      :                          @274
  5355: 33 07 20 10 03           a0 = 0x31020
  5360: 95 77 00 00 10           a0 = a0 + 0x100000
  5365: 01                       fallthrough
      :                          @275
  5366: 82 78                    a1 = u64 [a0]
  5368: c9 87 09                 a2 = a0 - a1
  5371: ab 59 11                 jump @279 if a2 != s0
      :                          @276
  5374: c9 68 09                 a2 = a1 - s1
  5377: 01                       fallthrough
      :                          @277
  5378: 82 7a                    a3 = u64 [a0]
  5380: ab 8a f2                 jump @275 if a3 != a1
      :                          @278
  5383: 7b 79                    u64 [a0] = a2
  5385: 33 0b                    a4 = 0
  5387: 01                       fallthrough
      :                          @279
  5388: 95 16 f8 50 01           s1 = sp + 0x150f8
  5393: 82 65 68                 s0 = u64 [s1 + 0x68]
  5396: 95 17 f8 50 01           a0 = sp + 0x150f8
  5401: 33 09 68                 a2 = 0x68
  5404: 95 18 68 51 01           a1 = sp + 0x15168
  5409: 50 20 8a 00 e3 10        ra = 138, jump @556
      :                          @280 [@dyn 69]
  5415: 14 07 ff ff ff ff ff ff ff 6f a0 = 0x6fffffffffffffff
  5425: c9 57 07                 a0 = a0 - s0
  5428: 7b 67 a0 02              u64 [s1 + 0x2a0] = a0
  5432: 95 17 98 53 01           a0 = sp + 0x15398
  5437: 7b 67 d8 00              u64 [s1 + 0xd8] = a0
  5441: 82 17 58                 a0 = u64 [sp + 0x58]
  5444: 7b 67 e0 00              u64 [s1 + 0xe0] = a0
  5448: 95 17 f8 50 01           a0 = sp + 0x150f8
  5453: 7b 67 e8 00              u64 [s1 + 0xe8] = a0
  5457: 33 07 0e                 a0 = 0xe
  5460: 7b 17 58                 u64 [sp + 0x58] = a0
  5463: 7b 67 f0 00              u64 [s1 + 0xf0] = a0
  5467: 33 07 f8 04 01           a0 = 0x104f8
  5472: 7b 67 18 01              u64 [s1 + 0x118] = a0
  5476: 49 26 20 01 02           u64 [s1 + 288] = 0x2
  5481: 49 26 38 01              u64 [s1 + 312] = 0
  5485: 95 18 d0 51 01           a1 = sp + 0x151d0
  5490: 7b 68 28 01              u64 [s1 + 0x128] = a1
  5494: 49 26 30 01 02           u64 [s1 + 304] = 0x2
  5499: 95 17 10 53 01           a0 = sp + 0x15310
  5504: 95 18 10 52 01           a1 = sp + 0x15210
  5509: 50 20 8c 00 05 0e        ra = 140, jump @506
      :                          @281 [@dyn 70]
  5515: 82 65 20 02              s0 = u64 [s1 + 0x220]
  5519: 82 6b 28 02              a4 = u64 [s1 + 0x228]
  5523: 82 66 18 02              s1 = u64 [s1 + 0x218]
  5527: 33 07 02                 a0 = 0x2
  5530: 33 08                    a1 = 0
  5532: 33 09                    a2 = 0
  5534: 64 5a                    a3 = s0
  5536: 33 00 8e 00              ra = 0x8e
  5540: 0a 64                    ecalli 100 // 'log'
  5542: 01                       fallthrough
      :                          @282 [@dyn 71]
  5543: 82 17 60                 a0 = u64 [sp + 0x60]
  5546: c8 67 07                 a0 = a0 + s1
  5549: 53 37 00 00 f0 27        jump @288 if a0 <u 4293918720
      :                          @283
  5555: 33 07 20 10 03           a0 = 0x31020
  5560: 95 77 00 00 10           a0 = a0 + 0x100000
  5565: 01                       fallthrough
      :                          @284
  5566: 82 78                    a1 = u64 [a0]
  5568: c9 87 09                 a2 = a0 - a1
  5571: ab 59 11                 jump @288 if a2 != s0
      :                          @285
  5574: c9 68 09                 a2 = a1 - s1
  5577: 01                       fallthrough
      :                          @286
  5578: 82 7a                    a3 = u64 [a0]
  5580: ab 8a f2                 jump @284 if a3 != a1
      :                          @287
  5583: 7b 79                    u64 [a0] = a2
  5585: 33 0b                    a4 = 0
  5587: 01                       fallthrough
      :                          @288
  5588: 95 16 f8 50 01           s1 = sp + 0x150f8
  5593: 82 67 a0 02              a0 = u64 [s1 + 0x2a0]
  5597: 7b 67 98 02              u64 [s1 + 0x298] = a0
  5601: 95 17 f8 50 01           a0 = sp + 0x150f8
  5606: 7b 67 18 02              u64 [s1 + 0x218] = a0
  5610: 82 17 58                 a0 = u64 [sp + 0x58]
  5613: 7b 67 20 02              u64 [s1 + 0x220] = a0
  5617: 33 07 40 05 01           a0 = 0x10540
  5622: 7b 67 18 01              u64 [s1 + 0x118] = a0
  5626: 49 26 20 01 01           u64 [s1 + 288] = 0x1
  5631: 49 26 38 01              u64 [s1 + 312] = 0
  5635: 95 18 10 53 01           a1 = sp + 0x15310
  5640: 7b 68 28 01              u64 [s1 + 0x128] = a1
  5644: 49 26 30 01 01           u64 [s1 + 304] = 0x1
  5649: 95 17 d0 51 01           a0 = sp + 0x151d0
  5654: 95 18 10 52 01           a1 = sp + 0x15210
  5659: 50 20 90 00 6f 0d        ra = 144, jump @506
      :                          @289 [@dyn 72]
  5665: 82 65 e0 00              s0 = u64 [s1 + 0xe0]
  5669: 82 6b e8 00              a4 = u64 [s1 + 0xe8]
  5673: 82 66 d8 00              s1 = u64 [s1 + 0xd8]
  5677: 33 07 02                 a0 = 0x2
  5680: 33 08                    a1 = 0
  5682: 33 09                    a2 = 0
  5684: 64 5a                    a3 = s0
  5686: 33 00 92 00              ra = 0x92
  5690: 0a 64                    ecalli 100 // 'log'
  5692: 01                       fallthrough
      :                          @290 [@dyn 73]
  5693: 82 17 60                 a0 = u64 [sp + 0x60]
  5696: c8 67 07                 a0 = a0 + s1
  5699: 53 37 00 00 f0 27        jump @296 if a0 <u 4293918720
      :                          @291
  5705: 33 07 20 10 03           a0 = 0x31020
  5710: 95 77 00 00 10           a0 = a0 + 0x100000
  5715: 01                       fallthrough
      :                          @292
  5716: 82 78                    a1 = u64 [a0]
  5718: c9 87 09                 a2 = a0 - a1
  5721: ab 59 11                 jump @296 if a2 != s0
      :                          @293
  5724: c9 68 09                 a2 = a1 - s1
  5727: 01                       fallthrough
      :                          @294
  5728: 82 7a                    a3 = u64 [a0]
  5730: ab 8a f2                 jump @292 if a3 != a1
      :                          @295
  5733: 7b 79                    u64 [a0] = a2
  5735: 33 0b                    a4 = 0
  5737: 01                       fallthrough
      :                          @296
  5738: 95 17 f8 50 01           a0 = sp + 0x150f8
  5743: 82 75 38                 s0 = u64 [a0 + 0x38]
  5746: 95 17 f8 40 01           a0 = sp + 0x140f8
  5751: 33 09 00 10              a2 = 0x1000
  5755: 33 06 00 10              s1 = 0x1000
  5759: 33 08                    a1 = 0
  5761: 50 20 94 00 35 10        ra = 148, jump @574
      :                          @297 [@dyn 74]
  5767: 95 1a 98 40 01           a3 = sp + 0x14098
  5772: 82 a7 50                 a0 = u64 [a3 + 0x50]
  5775: 7a a7 58                 u32 [a3 + 0x58] = a0
  5778: 98 58 0c                 a1 = s0 >> 0xc
  5781: 7a a8 5c                 u32 [a3 + 0x5c] = a1
  5784: 33 0a 00 10              a3 = 0x1000
  5788: 95 18 f8 40 01           a1 = sp + 0x140f8
  5793: 64 59                    a2 = s0
  5795: 0a 09                    ecalli 9 // 'peek'
  5797: 83 68 08                 i32 a1 = s1 + 0x8
  5800: 7b 18 58                 u64 [sp + 0x58] = a1
  5803: 95 17 f0 40 01           a0 = sp + 0x140f0
  5808: 0a 07                    ecalli 7 // 'export'
  5810: 33 09 00 10              a2 = 0x1000
  5814: 95 17 f8 40 01           a0 = sp + 0x140f8
  5819: 33 08                    a1 = 0
  5821: 50 20 96 00 f9 0f        ra = 150, jump @574
      :                          @298 [@dyn 75]
  5827: 95 1a 98 40 01           a3 = sp + 0x14098
  5832: 82 a7 50                 a0 = u64 [a3 + 0x50]
  5835: 7a a7 58                 u32 [a3 + 0x58] = a0
  5838: c8 65 09                 a2 = s0 + s1
  5841: 98 98 0c                 a1 = a2 >> 0xc
  5844: 7a a8 5c                 u32 [a3 + 0x5c] = a1
  5847: 33 0a 00 10              a3 = 0x1000
  5851: 95 18 f8 40 01           a1 = sp + 0x140f8
  5856: 0a 09                    ecalli 9 // 'peek'
  5858: 95 17 f0 40 01           a0 = sp + 0x140f0
  5863: 82 16 58                 s1 = u64 [sp + 0x58]
  5866: 64 68                    a1 = s1
  5868: 0a 07                    ecalli 7 // 'export'
  5870: 33 09 00 10              a2 = 0x1000
  5874: 95 17 f8 40 01           a0 = sp + 0x140f8
  5879: 33 08                    a1 = 0
  5881: 50 20 98 00 bd 0f        ra = 152, jump @574
      :                          @299 [@dyn 76]
  5887: 95 1a 98 40 01           a3 = sp + 0x14098
  5892: 82 a7 50                 a0 = u64 [a3 + 0x50]
  5895: 7a a7 58                 u32 [a3 + 0x58] = a0
  5898: 95 59 00 20              a2 = s0 + 0x2000
  5902: 98 98 0c                 a1 = a2 >> 0xc
  5905: 7a a8 5c                 u32 [a3 + 0x5c] = a1
  5908: 33 0a 00 10              a3 = 0x1000
  5912: 95 18 f8 40 01           a1 = sp + 0x140f8
  5917: 0a 09                    ecalli 9 // 'peek'
  5919: 95 17 f0 40 01           a0 = sp + 0x140f0
  5924: 64 68                    a1 = s1
  5926: 0a 07                    ecalli 7 // 'export'
  5928: 33 09 00 10              a2 = 0x1000
  5932: 95 17 f8 40 01           a0 = sp + 0x140f8
  5937: 33 08                    a1 = 0
  5939: 50 20 9a 00 83 0f        ra = 154, jump @574
      :                          @300 [@dyn 77]
  5945: 95 18 98 40 01           a1 = sp + 0x14098
  5950: 82 87 50                 a0 = u64 [a1 + 0x50]
  5953: 7a 87 58                 u32 [a1 + 0x58] = a0
  5956: 95 1a 98 40 01           a3 = sp + 0x14098
  5961: 95 59 00 30              a2 = s0 + 0x3000
  5965: 64 56                    s1 = s0
  5967: 98 98 0c                 a1 = a2 >> 0xc
  5970: 7a a8 5c                 u32 [a3 + 0x5c] = a1
  5973: 33 0a 00 10              a3 = 0x1000
  5977: 95 18 f8 40 01           a1 = sp + 0x140f8
  5982: 0a 09                    ecalli 9 // 'peek'
  5984: 95 17 f0 40 01           a0 = sp + 0x140f0
  5989: 82 15 58                 s0 = u64 [sp + 0x58]
  5992: 64 58                    a1 = s0
  5994: 0a 07                    ecalli 7 // 'export'
  5996: 33 09 00 10              a2 = 0x1000
  6000: 95 17 f8 40 01           a0 = sp + 0x140f8
  6005: 33 08                    a1 = 0
  6007: 50 20 9c 00 3f 0f        ra = 156, jump @574
      :                          @301 [@dyn 78]
  6013: 95 1a 98 40 01           a3 = sp + 0x14098
  6018: 82 a7 50                 a0 = u64 [a3 + 0x50]
  6021: 7a a7 58                 u32 [a3 + 0x58] = a0
  6024: 95 69 00 40              a2 = s1 + 0x4000
  6028: 98 98 0c                 a1 = a2 >> 0xc
  6031: 7a a8 5c                 u32 [a3 + 0x5c] = a1
  6034: 33 0a 00 10              a3 = 0x1000
  6038: 95 18 f8 40 01           a1 = sp + 0x140f8
  6043: 0a 09                    ecalli 9 // 'peek'
  6045: 95 17 f0 40 01           a0 = sp + 0x140f0
  6050: 64 58                    a1 = s0
  6052: 0a 07                    ecalli 7 // 'export'
  6054: 33 09 00 10              a2 = 0x1000
  6058: 95 17 f8 40 01           a0 = sp + 0x140f8
  6063: 33 08                    a1 = 0
  6065: 50 20 9e 00 05 0f        ra = 158, jump @574
      :                          @302 [@dyn 79]
  6071: 95 18 98 40 01           a1 = sp + 0x14098
  6076: 82 87 50                 a0 = u64 [a1 + 0x50]
  6079: 7a 87 58                 u32 [a1 + 0x58] = a0
  6082: 95 1a 98 40 01           a3 = sp + 0x14098
  6087: 64 65                    s0 = s1
  6089: 7b 16 50                 u64 [sp + 0x50] = s1
  6092: 95 69 00 50              a2 = s1 + 0x5000
  6096: 98 98 0c                 a1 = a2 >> 0xc
  6099: 7a a8 5c                 u32 [a3 + 0x5c] = a1
  6102: 33 0a 00 10              a3 = 0x1000
  6106: 95 18 f8 40 01           a1 = sp + 0x140f8
  6111: 0a 09                    ecalli 9 // 'peek'
  6113: 95 17 f0 40 01           a0 = sp + 0x140f0
  6118: 82 16 58                 s1 = u64 [sp + 0x58]
  6121: 64 68                    a1 = s1
  6123: 0a 07                    ecalli 7 // 'export'
  6125: 33 09 00 10              a2 = 0x1000
  6129: 95 17 f8 40 01           a0 = sp + 0x140f8
  6134: 33 08                    a1 = 0
  6136: 50 20 a0 00 be 0e        ra = 160, jump @574
      :                          @303 [@dyn 80]
  6142: 95 1a 98 40 01           a3 = sp + 0x14098
  6147: 82 a7 50                 a0 = u64 [a3 + 0x50]
  6150: 7a a7 58                 u32 [a3 + 0x58] = a0
  6153: 95 59 00 60              a2 = s0 + 0x6000
  6157: 98 98 0c                 a1 = a2 >> 0xc
  6160: 7a a8 5c                 u32 [a3 + 0x5c] = a1
  6163: 33 0a 00 10              a3 = 0x1000
  6167: 95 18 f8 40 01           a1 = sp + 0x140f8
  6172: 0a 09                    ecalli 9 // 'peek'
  6174: 95 17 f0 40 01           a0 = sp + 0x140f0
  6179: 64 68                    a1 = s1
  6181: 0a 07                    ecalli 7 // 'export'
  6183: 33 09 00 10              a2 = 0x1000
  6187: 95 17 f8 40 01           a0 = sp + 0x140f8
  6192: 33 08                    a1 = 0
  6194: 50 20 a2 00 84 0e        ra = 162, jump @574
      :                          @304 [@dyn 81]
  6200: 95 18 98 40 01           a1 = sp + 0x14098
  6205: 82 87 50                 a0 = u64 [a1 + 0x50]
  6208: 7a 87 58                 u32 [a1 + 0x58] = a0
  6211: 95 1a 98 40 01           a3 = sp + 0x14098
  6216: 95 59 00 70              a2 = s0 + 0x7000
  6220: 98 98 0c                 a1 = a2 >> 0xc
  6223: 7a a8 5c                 u32 [a3 + 0x5c] = a1
  6226: 33 0a 00 10              a3 = 0x1000
  6230: 95 18 f8 40 01           a1 = sp + 0x140f8
  6235: 0a 09                    ecalli 9 // 'peek'
  6237: 95 17 f0 40 01           a0 = sp + 0x140f0
  6242: 64 65                    s0 = s1
  6244: 64 68                    a1 = s1
  6246: 0a 07                    ecalli 7 // 'export'
  6248: 33 09 00 10              a2 = 0x1000
  6252: 95 17 f8 40 01           a0 = sp + 0x140f8
  6257: 33 08                    a1 = 0
  6259: 50 20 a4 00 43 0e        ra = 164, jump @574
      :                          @305 [@dyn 82]
  6265: 95 1a 98 40 01           a3 = sp + 0x14098
  6270: 82 a7 50                 a0 = u64 [a3 + 0x50]
  6273: 7a a7 58                 u32 [a3 + 0x58] = a0
  6276: 82 18 50                 a1 = u64 [sp + 0x50]
  6279: 95 89 00 80 00           a2 = a1 + 0x8000
  6284: 98 98 0c                 a1 = a2 >> 0xc
  6287: 7a a8 5c                 u32 [a3 + 0x5c] = a1
  6290: 95 16 98 40 01           s1 = sp + 0x14098
  6295: 33 0a 00 10              a3 = 0x1000
  6299: 95 18 f8 40 01           a1 = sp + 0x140f8
  6304: 0a 09                    ecalli 9 // 'peek'
  6306: 95 17 f0 40 01           a0 = sp + 0x140f0
  6311: 64 58                    a1 = s0
  6313: 0a 07                    ecalli 7 // 'export'
  6315: 82 67 50                 a0 = u64 [s1 + 0x50]
  6318: 0a 0d                    ecalli 13 // 'expunge'
  6320: 95 17 68 53 01           a0 = sp + 0x15368
  6325: 95 18 f8 50 01           a1 = sp + 0x150f8
  6330: 7b 87 18 02              u64 [a1 + 0x218] = a0
  6334: 33 07 0a                 a0 = 0xa
  6337: 7b 87 20 02              u64 [a1 + 0x220] = a0
  6341: 33 07 80 05 01           a0 = 0x10580
  6346: 7b 87 18 01              u64 [a1 + 0x118] = a0
  6350: 95 17 10 53 01           a0 = sp + 0x15310
  6355: 7b 87 28 01              u64 [a1 + 0x128] = a0
  6359: 49 28 20 01 01           u64 [a1 + 288] = 0x1
  6364: 49 28 30 01 01           u64 [a1 + 304] = 0x1
  6369: 49 28 38 01              u64 [a1 + 312] = 0
  6373: 95 16 f8 50 01           s1 = sp + 0x150f8
  6378: 95 17 d0 51 01           a0 = sp + 0x151d0
  6383: 95 18 10 52 01           a1 = sp + 0x15210
  6388: 50 20 a6 00 96 0a        ra = 166, jump @506
      :                          @306 [@dyn 83]
  6394: 82 65 e0 00              s0 = u64 [s1 + 0xe0]
  6398: 82 6b e8 00              a4 = u64 [s1 + 0xe8]
  6402: 82 66 d8 00              s1 = u64 [s1 + 0xd8]
  6406: 33 07 02                 a0 = 0x2
  6409: 33 08                    a1 = 0
  6411: 33 09                    a2 = 0
  6413: 64 5a                    a3 = s0
  6415: 33 00 a8 00              ra = 0xa8
  6419: 0a 64                    ecalli 100 // 'log'
  6421: 01                       fallthrough
      :                          @307 [@dyn 84]
  6422: 82 17 60                 a0 = u64 [sp + 0x60]
  6425: c8 67 07                 a0 = a0 + s1
  6428: 53 37 00 00 f0 31        jump @313 if a0 <u 4293918720
      :                          @308
  6434: 33 07 20 10 03           a0 = 0x31020
  6439: 95 77 00 00 10           a0 = a0 + 0x100000
  6444: 01                       fallthrough
      :                          @309
  6445: 82 78                    a1 = u64 [a0]
  6447: c9 87 09                 a2 = a0 - a1
  6450: ab 59 1b                 jump @313 if a2 != s0
      :                          @310
  6453: c9 68 09                 a2 = a1 - s1
  6456: 01                       fallthrough
      :                          @311
  6457: 82 7a                    a3 = u64 [a0]
  6459: ab 8a f2                 jump @309 if a3 != a1
      :                          @312
  6462: 7b 79                    u64 [a0] = a2
  6464: 33 0b                    a4 = 0
  6466: 95 17 90 53 01           a0 = sp + 0x15390
  6471: 33 06 08                 s1 = 0x8
  6474: 28 62 eb                 jump @92
      :                          @313
  6477: 95 17 90 53 01           a0 = sp + 0x15390
  6482: 33 06 08                 s1 = 0x8
  6485: 28 57 eb                 jump @92
      :                          @314
  6488: 95 16 f8 50 01           s1 = sp + 0x150f8
  6493: 82 67 48 02              a0 = u64 [s1 + 0x248]
  6497: 95 77 ff ff 00           a0 = a0 + 0xffff
  6502: 84 77 00 00 ff           a0 = a0 & 0xffffffffffff0000
  6507: 95 77 00 00 02           a0 = a0 + 0x20000
  6512: 7b 67 98 02              u64 [s1 + 0x298] = a0
  6516: 98 77 0c                 a0 = a0 >> 0xc
  6519: 7b 67 a0 02              u64 [s1 + 0x2a0] = a0
  6523: 95 17 98 53 01           a0 = sp + 0x15398
  6528: 7b 67 18 01              u64 [s1 + 0x118] = a0
  6532: 33 08 f2 00              a1 = 0xf2
  6536: 7b 68 20 01              u64 [s1 + 0x120] = a1
  6540: 95 17 68 53 01           a0 = sp + 0x15368
  6545: 7b 67 28 01              u64 [s1 + 0x128] = a0
  6549: 7b 18 58                 u64 [sp + 0x58] = a1
  6552: 7b 68 30 01              u64 [s1 + 0x130] = a1
  6556: 33 07 78 0a 01           a0 = 0x10a78
  6561: 95 19 98 40 01           a2 = sp + 0x14098
  6566: 7b 97 58                 u64 [a2 + 0x58] = a0
  6569: 49 19 60 02              u64 [a2 + 96] = 0x2
  6573: 49 19 78                 u64 [a2 + 120] = 0
  6576: 95 18 10 52 01           a1 = sp + 0x15210
  6581: 7b 98 68                 u64 [a2 + 0x68] = a1
  6584: 49 19 70 02              u64 [a2 + 112] = 0x2
  6588: 95 17 60 51 01           a0 = sp + 0x15160
  6593: 95 18 f0 40 01           a1 = sp + 0x140f0
  6598: 50 20 aa 00 c4 09        ra = 170, jump @506
      :                          @315 [@dyn 85]
  6604: 82 65 70                 s0 = u64 [s1 + 0x70]
  6607: 82 6b 78                 a4 = u64 [s1 + 0x78]
  6610: 82 66 68                 s1 = u64 [s1 + 0x68]
  6613: 33 07 02                 a0 = 0x2
  6616: 33 08                    a1 = 0
  6618: 33 09                    a2 = 0
  6620: 64 5a                    a3 = s0
  6622: 33 00 ac 00              ra = 0xac
  6626: 0a 64                    ecalli 100 // 'log'
  6628: 01                       fallthrough
      :                          @316 [@dyn 86]
  6629: 82 17 60                 a0 = u64 [sp + 0x60]
  6632: c8 67 07                 a0 = a0 + s1
  6635: 53 37 00 00 f0 25        jump @322 if a0 <u 4293918720
      :                          @317
  6641: 33 07 20 10 03           a0 = 0x31020
  6646: 95 77 00 00 10           a0 = a0 + 0x100000
  6651: 01                       fallthrough
      :                          @318
  6652: 82 78                    a1 = u64 [a0]
  6654: c9 87 09                 a2 = a0 - a1
  6657: ab 59 0f                 jump @322 if a2 != s0
      :                          @319
  6660: c9 68 09                 a2 = a1 - s1
  6663: 01                       fallthrough
      :                          @320
  6664: 82 7a                    a3 = u64 [a0]
  6666: ab 8a f2                 jump @318 if a3 != a1
      :                          @321
  6669: 7b 79                    u64 [a0] = a2
  6671: 01                       fallthrough
      :                          @322
  6672: 95 16 f8 50 01           s1 = sp + 0x150f8
  6677: 80 67 64 02              a0 = u32 [s1 + 0x264]
  6681: 82 68 a0 02              a1 = u64 [s1 + 0x2a0]
  6685: 82 69 70 02              a2 = u64 [s1 + 0x270]
  6689: 33 0a 02                 a3 = 0x2
  6692: 0a 0b                    ecalli 11 // 'pages'
  6694: 7b 67 18 02              u64 [s1 + 0x218] = a0
  6698: 95 17 10 53 01           a0 = sp + 0x15310
  6703: 7b 67 68                 u64 [s1 + 0x68] = a0
  6706: 82 17 58                 a0 = u64 [sp + 0x58]
  6709: 7b 67 70                 u64 [s1 + 0x70] = a0
  6712: 33 07 e0 0a 01           a0 = 0x10ae0
  6717: 95 18 98 40 01           a1 = sp + 0x14098
  6722: 7b 87 58                 u64 [a1 + 0x58] = a0
  6725: 95 17 60 51 01           a0 = sp + 0x15160
  6730: 7b 87 68                 u64 [a1 + 0x68] = a0
  6733: 49 18 60 01              u64 [a1 + 96] = 0x1
  6737: 49 18 70 01              u64 [a1 + 112] = 0x1
  6741: 49 18 78                 u64 [a1 + 120] = 0
  6744: 95 17 10 52 01           a0 = sp + 0x15210
  6749: 95 18 f0 40 01           a1 = sp + 0x140f0
  6754: 50 20 ae 00 28 09        ra = 174, jump @506
      :                          @323 [@dyn 87]
  6760: 82 65 20 01              s0 = u64 [s1 + 0x120]
  6764: 82 6b 28 01              a4 = u64 [s1 + 0x128]
  6768: 82 66 18 01              s1 = u64 [s1 + 0x118]
  6772: 33 07 02                 a0 = 0x2
  6775: 33 08                    a1 = 0
  6777: 33 09                    a2 = 0
  6779: 64 5a                    a3 = s0
  6781: 33 00 b0 00              ra = 0xb0
  6785: 0a 64                    ecalli 100 // 'log'
  6787: 01                       fallthrough
      :                          @324 [@dyn 88]
  6788: 82 17 60                 a0 = u64 [sp + 0x60]
  6791: c8 67 07                 a0 = a0 + s1
  6794: 53 37 00 00 f0 27        jump @330 if a0 <u 4293918720
      :                          @325
  6800: 33 07 20 10 03           a0 = 0x31020
  6805: 95 77 00 00 10           a0 = a0 + 0x100000
  6810: 01                       fallthrough
      :                          @326
  6811: 82 78                    a1 = u64 [a0]
  6813: c9 87 09                 a2 = a0 - a1
  6816: ab 59 11                 jump @330 if a2 != s0
      :                          @327
  6819: c9 68 09                 a2 = a1 - s1
  6822: 01                       fallthrough
      :                          @328
  6823: 82 7a                    a3 = u64 [a0]
  6825: ab 8a f2                 jump @326 if a3 != a1
      :                          @329
  6828: 7b 79                    u64 [a0] = a2
  6830: 33 0b                    a4 = 0
  6832: 01                       fallthrough
      :                          @330
  6833: 95 17 f8 50 01           a0 = sp + 0x150f8
  6838: 82 77 18 02              a0 = u64 [a0 + 0x218]
  6842: 51 07 9b 00              jump @342 if a0 == 0
      :                          @331
  6846: 95 17 10 53 01           a0 = sp + 0x15310
  6851: 95 16 f8 50 01           s1 = sp + 0x150f8
  6856: 7b 67 68                 u64 [s1 + 0x68] = a0
  6859: 33 07 f2 00              a0 = 0xf2
  6863: 7b 67 70                 u64 [s1 + 0x70] = a0
  6866: 33 07 08 0e 01           a0 = 0x10e08
  6871: 95 19 98 40 01           a2 = sp + 0x14098
  6876: 7b 97 58                 u64 [a2 + 0x58] = a0
  6879: 49 19 60 01              u64 [a2 + 96] = 0x1
  6883: 49 19 78                 u64 [a2 + 120] = 0
  6886: 95 18 60 51 01           a1 = sp + 0x15160
  6891: 7b 98 68                 u64 [a2 + 0x68] = a1
  6894: 49 19 70 01              u64 [a2 + 112] = 0x1
  6898: 95 17 10 52 01           a0 = sp + 0x15210
  6903: 95 18 f0 40 01           a1 = sp + 0x140f0
  6908: 50 20 b2 00 8e 08        ra = 178, jump @506
      :                          @332 [@dyn 89]
  6914: 82 65 20 01              s0 = u64 [s1 + 0x120]
  6918: 82 6b 28 01              a4 = u64 [s1 + 0x128]
  6922: 82 66 18 01              s1 = u64 [s1 + 0x118]
  6926: 33 07 01                 a0 = 0x1
  6929: 33 08                    a1 = 0
  6931: 33 09                    a2 = 0
  6933: 64 5a                    a3 = s0
  6935: 33 00 b4 00              ra = 0xb4
  6939: 0a 64                    ecalli 100 // 'log'
  6941: 01                       fallthrough
      :                          @333 [@dyn 90]
  6942: 82 17 60                 a0 = u64 [sp + 0x60]
  6945: c8 67 07                 a0 = a0 + s1
  6948: 53 37 00 00 f0 d2 f2     jump @203 if a0 <u 4293918720
      :                          @334
  6955: 33 07 20 10 03           a0 = 0x31020
  6960: 95 77 00 00 10           a0 = a0 + 0x100000
  6965: 01                       fallthrough
      :                          @335
  6966: 82 78                    a1 = u64 [a0]
  6968: c9 87 09                 a2 = a0 - a1
  6971: aa 59 06                 jump @337 if a2 == s0
      :                          @336
  6974: 28 b8 f2                 jump @203
      :                          @337
  6977: c9 68 09                 a2 = a1 - s1
  6980: 01                       fallthrough
      :                          @338
  6981: 82 7a                    a3 = u64 [a0]
  6983: ab 8a ef                 jump @335 if a3 != a1
      :                          @339
  6986: 7b 79                    u64 [a0] = a2
  6988: 33 0b                    a4 = 0
  6990: 01                       fallthrough
      :                          @340
  6991: ab 8a e7                 jump @335 if a3 != a1
      :                          @341
  6994: 28 a4 f2                 jump @203
      :                          @342
  6997: 95 16 f8 50 01           s1 = sp + 0x150f8
  7002: 82 67 38 02              a0 = u64 [s1 + 0x238]
  7006: 82 18 50                 a1 = u64 [sp + 0x50]
  7009: c8 87 07                 a0 = a0 + a1
  7012: 84 77 00 f0              a0 = a0 & 0xfffffffffffff000
  7016: 14 08 00 00 fe fe 00 00 00 00 a1 = 0xfefe0000
  7026: c9 78 08                 a1 = a1 - a0
  7029: 98 88 0c                 a1 = a1 >> 0xc
  7032: 7b 68 d8 00              u64 [s1 + 0xd8] = a1
  7036: 95 17 d0 51 01           a0 = sp + 0x151d0
  7041: 7b 67 18 01              u64 [s1 + 0x118] = a0
  7045: 33 08 f2 00              a1 = 0xf2
  7049: 7b 68 20 01              u64 [s1 + 0x120] = a1
  7053: 95 17 70 53 01           a0 = sp + 0x15370
  7058: 7b 67 28 01              u64 [s1 + 0x128] = a0
  7062: 7b 18 58                 u64 [sp + 0x58] = a1
  7065: 7b 68 30 01              u64 [s1 + 0x130] = a1
  7069: 33 07 48 0b 01           a0 = 0x10b48
  7074: 95 19 98 40 01           a2 = sp + 0x14098
  7079: 7b 97 58                 u64 [a2 + 0x58] = a0
  7082: 49 19 60 02              u64 [a2 + 96] = 0x2
  7086: 49 19 78                 u64 [a2 + 120] = 0
  7089: 95 18 10 52 01           a1 = sp + 0x15210
  7094: 7b 98 68                 u64 [a2 + 0x68] = a1
  7097: 49 19 70 02              u64 [a2 + 112] = 0x2
  7101: 95 17 60 51 01           a0 = sp + 0x15160
  7106: 95 18 f0 40 01           a1 = sp + 0x140f0
  7111: 50 20 b6 00 c3 07        ra = 182, jump @506
      :                          @343 [@dyn 91]
  7117: 82 65 70                 s0 = u64 [s1 + 0x70]
  7120: 82 6b 78                 a4 = u64 [s1 + 0x78]
  7123: 82 66 68                 s1 = u64 [s1 + 0x68]
  7126: 33 07 02                 a0 = 0x2
  7129: 33 08                    a1 = 0
  7131: 33 09                    a2 = 0
  7133: 64 5a                    a3 = s0
  7135: 33 00 b8 00              ra = 0xb8
  7139: 0a 64                    ecalli 100 // 'log'
  7141: 01                       fallthrough
      :                          @344 [@dyn 92]
  7142: 82 17 60                 a0 = u64 [sp + 0x60]
  7145: c8 67 07                 a0 = a0 + s1
  7148: 53 37 00 00 f0 25        jump @350 if a0 <u 4293918720
      :                          @345
  7154: 33 07 20 10 03           a0 = 0x31020
  7159: 95 77 00 00 10           a0 = a0 + 0x100000
  7164: 01                       fallthrough
      :                          @346
  7165: 82 78                    a1 = u64 [a0]
  7167: c9 87 09                 a2 = a0 - a1
  7170: ab 59 0f                 jump @350 if a2 != s0
      :                          @347
  7173: c9 68 09                 a2 = a1 - s1
  7176: 01                       fallthrough
      :                          @348
  7177: 82 7a                    a3 = u64 [a0]
  7179: ab 8a f2                 jump @346 if a3 != a1
      :                          @349
  7182: 7b 79                    u64 [a0] = a2
  7184: 01                       fallthrough
      :                          @350
  7185: 95 16 f8 50 01           s1 = sp + 0x150f8
  7190: 80 67 64 02              a0 = u32 [s1 + 0x264]
  7194: 82 68 d8 00              a1 = u64 [s1 + 0xd8]
  7198: 82 69 78 02              a2 = u64 [s1 + 0x278]
  7202: 33 0a 02                 a3 = 0x2
  7205: 0a 0b                    ecalli 11 // 'pages'
  7207: 7b 67                    u64 [s1] = a0
  7209: 82 17 58                 a0 = u64 [sp + 0x58]
  7212: 7b 67 70                 u64 [s1 + 0x70] = a0
  7215: 33 07 a8 0b 01           a0 = 0x10ba8
  7220: 95 18 98 40 01           a1 = sp + 0x14098
  7225: 7b 87 58                 u64 [a1 + 0x58] = a0
  7228: 95 17 60 51 01           a0 = sp + 0x15160
  7233: 7b 87 68                 u64 [a1 + 0x68] = a0
  7236: 49 18 60 01              u64 [a1 + 96] = 0x1
  7240: 49 18 70 01              u64 [a1 + 112] = 0x1
  7244: 7b 66 68                 u64 [s1 + 0x68] = s1
  7247: 49 18 78                 u64 [a1 + 120] = 0
  7250: 95 17 10 52 01           a0 = sp + 0x15210
  7255: 95 18 f0 40 01           a1 = sp + 0x140f0
  7260: 50 20 ba 00 2e 07        ra = 186, jump @506
      :                          @351 [@dyn 93]
  7266: 82 65 20 01              s0 = u64 [s1 + 0x120]
  7270: 82 6b 28 01              a4 = u64 [s1 + 0x128]
  7274: 82 66 18 01              s1 = u64 [s1 + 0x118]
  7278: 33 07 02                 a0 = 0x2
  7281: 33 08                    a1 = 0
  7283: 33 09                    a2 = 0
  7285: 64 5a                    a3 = s0
  7287: 33 00 bc 00              ra = 0xbc
  7291: 0a 64                    ecalli 100 // 'log'
  7293: 01                       fallthrough
      :                          @352 [@dyn 94]
  7294: 82 17 60                 a0 = u64 [sp + 0x60]
  7297: c8 67 07                 a0 = a0 + s1
  7300: 53 37 00 00 f0 27        jump @358 if a0 <u 4293918720
      :                          @353
  7306: 33 07 20 10 03           a0 = 0x31020
  7311: 95 77 00 00 10           a0 = a0 + 0x100000
  7316: 01                       fallthrough
      :                          @354
  7317: 82 78                    a1 = u64 [a0]
  7319: c9 87 09                 a2 = a0 - a1
  7322: ab 59 11                 jump @358 if a2 != s0
      :                          @355
  7325: c9 68 09                 a2 = a1 - s1
  7328: 01                       fallthrough
      :                          @356
  7329: 82 7a                    a3 = u64 [a0]
  7331: ab 8a f2                 jump @354 if a3 != a1
      :                          @357
  7334: 7b 79                    u64 [a0] = a2
  7336: 33 0b                    a4 = 0
  7338: 01                       fallthrough
      :                          @358
  7339: 95 17 f8 50 01           a0 = sp + 0x150f8
  7344: 82 77                    a0 = u64 [a0]
  7346: 51 07 17                 jump @360 if a0 == 0
      :                          @359
  7349: 33 0a 82 0d 01           a3 = 0x10d82
  7354: 33 07 01                 a0 = 0x1
  7357: 33 0b 3c                 a4 = 0x3c
  7360: 33 08                    a1 = 0
  7362: 33 09                    a2 = 0
  7364: 0a 64                    ecalli 100 // 'log'
  7366: 28 30 f1                 jump @203
      :                          @360
  7369: 95 17 38 53 01           a0 = sp + 0x15338
  7374: 95 19 98 40 01           a2 = sp + 0x14098
  7379: 7b 97 58                 u64 [a2 + 0x58] = a0
  7382: 33 07 22 01              a0 = 0x122
  7386: 7b 97 60                 u64 [a2 + 0x60] = a0
  7389: 95 18 78 53 01           a1 = sp + 0x15378
  7394: 7b 98 68                 u64 [a2 + 0x68] = a1
  7397: 7b 97 70                 u64 [a2 + 0x70] = a0
  7400: 95 17 40 53 01           a0 = sp + 0x15340
  7405: 7b 97 78                 u64 [a2 + 0x78] = a0
  7408: 33 07 f2 00              a0 = 0xf2
  7412: 7b 97 80 00              u64 [a2 + 0x80] = a0
  7416: 33 07 18 0c 01           a0 = 0x10c18
  7421: 95 16 f8 50 01           s1 = sp + 0x150f8
  7426: 7b 67 18 01              u64 [s1 + 0x118] = a0
  7430: 49 26 20 01 03           u64 [s1 + 288] = 0x3
  7435: 49 26 38 01              u64 [s1 + 312] = 0
  7439: 95 18 f0 40 01           a1 = sp + 0x140f0
  7444: 7b 68 28 01              u64 [s1 + 0x128] = a1
  7448: 49 26 30 01 03           u64 [s1 + 304] = 0x3
  7453: 95 17 60 51 01           a0 = sp + 0x15160
  7458: 95 18 10 52 01           a1 = sp + 0x15210
  7463: 50 20 be 00 63 06        ra = 190, jump @506
      :                          @361 [@dyn 95]
  7469: 82 65 70                 s0 = u64 [s1 + 0x70]
  7472: 82 6b 78                 a4 = u64 [s1 + 0x78]
  7475: 82 66 68                 s1 = u64 [s1 + 0x68]
  7478: 33 07 02                 a0 = 0x2
  7481: 33 08                    a1 = 0
  7483: 33 09                    a2 = 0
  7485: 64 5a                    a3 = s0
  7487: 33 00 c0 00              ra = 0xc0
  7491: 0a 64                    ecalli 100 // 'log'
  7493: 01                       fallthrough
      :                          @362 [@dyn 96]
  7494: 82 17 60                 a0 = u64 [sp + 0x60]
  7497: c8 67 07                 a0 = a0 + s1
  7500: 53 37 00 00 f0 25        jump @368 if a0 <u 4293918720
      :                          @363
  7506: 33 07 20 10 03           a0 = 0x31020
  7511: 95 77 00 00 10           a0 = a0 + 0x100000
  7516: 01                       fallthrough
      :                          @364
  7517: 82 78                    a1 = u64 [a0]
  7519: c9 87 09                 a2 = a0 - a1
  7522: ab 59 0f                 jump @368 if a2 != s0
      :                          @365
  7525: c9 68 09                 a2 = a1 - s1
  7528: 01                       fallthrough
      :                          @366
  7529: 82 7a                    a3 = u64 [a0]
  7531: ab 8a f2                 jump @364 if a3 != a1
      :                          @367
  7534: 7b 79                    u64 [a0] = a2
  7536: 01                       fallthrough
      :                          @368
  7537: 95 1a f8 50 01           a3 = sp + 0x150f8
  7542: 80 a7 64 02              a0 = u32 [a3 + 0x264]
  7546: 82 a8 40 02              a1 = u64 [a3 + 0x240]
  7550: 82 a9 80 02              a2 = u64 [a3 + 0x280]
  7554: 82 aa 48 02              a3 = u64 [a3 + 0x248]
  7558: 0a 0a                    ecalli 10 // 'poke'
  7560: 01                       fallthrough
      :                          @369
  7561: 51 07 17                 jump @371 if a0 == 0
      :                          @370
  7564: 33 0a 44 0d 01           a3 = 0x10d44
  7569: 33 07 01                 a0 = 0x1
  7572: 33 0b 3e                 a4 = 0x3e
  7575: 33 08                    a1 = 0
  7577: 33 09                    a2 = 0
  7579: 0a 64                    ecalli 100 // 'log'
  7581: 28 59 f0                 jump @203
      :                          @371
  7584: 95 17 48 53 01           a0 = sp + 0x15348
  7589: 95 19 98 40 01           a2 = sp + 0x14098
  7594: 7b 97 58                 u64 [a2 + 0x58] = a0
  7597: 33 07 22 01              a0 = 0x122
  7601: 7b 97 60                 u64 [a2 + 0x60] = a0
  7604: 95 18 90 53 01           a1 = sp + 0x15390
  7609: 7b 98 68                 u64 [a2 + 0x68] = a1
  7612: 7b 97 70                 u64 [a2 + 0x70] = a0
  7615: 95 17 50 53 01           a0 = sp + 0x15350
  7620: 7b 97 78                 u64 [a2 + 0x78] = a0
  7623: 33 07 f2 00              a0 = 0xf2
  7627: 7b 97 80 00              u64 [a2 + 0x80] = a0
  7631: 33 07 a8 0c 01           a0 = 0x10ca8
  7636: 95 16 f8 50 01           s1 = sp + 0x150f8
  7641: 7b 67 18 01              u64 [s1 + 0x118] = a0
  7645: 49 26 20 01 03           u64 [s1 + 288] = 0x3
  7650: 49 26 38 01              u64 [s1 + 312] = 0
  7654: 95 18 f0 40 01           a1 = sp + 0x140f0
  7659: 7b 68 28 01              u64 [s1 + 0x128] = a1
  7663: 49 26 30 01 03           u64 [s1 + 304] = 0x3
  7668: 95 17 60 51 01           a0 = sp + 0x15160
  7673: 95 18 10 52 01           a1 = sp + 0x15210
  7678: 50 20 c2 00 8c 05        ra = 194, jump @506
      :                          @372 [@dyn 97]
  7684: 82 65 70                 s0 = u64 [s1 + 0x70]
  7687: 82 6b 78                 a4 = u64 [s1 + 0x78]
  7690: 82 66 68                 s1 = u64 [s1 + 0x68]
  7693: 33 07 02                 a0 = 0x2
  7696: 33 08                    a1 = 0
  7698: 33 09                    a2 = 0
  7700: 64 5a                    a3 = s0
  7702: 33 00 c4 00              ra = 0xc4
  7706: 0a 64                    ecalli 100 // 'log'
  7708: 01                       fallthrough
      :                          @373 [@dyn 98]
  7709: 82 17 60                 a0 = u64 [sp + 0x60]
  7712: c8 67 07                 a0 = a0 + s1
  7715: 53 37 00 00 f0 25        jump @379 if a0 <u 4293918720
      :                          @374
  7721: 33 07 20 10 03           a0 = 0x31020
  7726: 95 77 00 00 10           a0 = a0 + 0x100000
  7731: 01                       fallthrough
      :                          @375
  7732: 82 78                    a1 = u64 [a0]
  7734: c9 87 09                 a2 = a0 - a1
  7737: ab 59 0f                 jump @379 if a2 != s0
      :                          @376
  7740: c9 68 09                 a2 = a1 - s1
  7743: 01                       fallthrough
      :                          @377
  7744: 82 7a                    a3 = u64 [a0]
  7746: ab 8a f2                 jump @375 if a3 != a1
      :                          @378
  7749: 7b 79                    u64 [a0] = a2
  7751: 01                       fallthrough
      :                          @379
  7752: 95 1a f8 50 01           a3 = sp + 0x150f8
  7757: 80 a7 64 02              a0 = u32 [a3 + 0x264]
  7761: 82 a8 50 02              a1 = u64 [a3 + 0x250]
  7765: 82 a9 98 02              a2 = u64 [a3 + 0x298]
  7769: 82 aa 58 02              a3 = u64 [a3 + 0x258]
  7773: 0a 0a                    ecalli 10 // 'poke'
  7775: 01                       fallthrough
      :                          @380
  7776: 51 07 17                 jump @382 if a0 == 0
      :                          @381
  7779: 33 0a 06 0d 01           a3 = 0x10d06
  7784: 33 07 01                 a0 = 0x1
  7787: 33 0b 3e                 a4 = 0x3e
  7790: 33 08                    a1 = 0
  7792: 33 09                    a2 = 0
  7794: 0a 64                    ecalli 100 // 'log'
  7796: 28 82 ef                 jump @203
      :                          @382
  7799: 33 0a d8 0c 01           a3 = 0x10cd8
  7804: 33 07 02                 a0 = 0x2
  7807: 33 0b 2e                 a4 = 0x2e
  7810: 33 08                    a1 = 0
  7812: 33 09                    a2 = 0
  7814: 0a 64                    ecalli 100 // 'log'
  7816: 28 6e ef                 jump @203
      :                          @383
  7819: 00                       trap
      :                          @384
  7820: 00                       trap
      :                          @385 [export #1: 'accumulate']
  7821: 51 08 ab 02              jump @448 if a1 == 0
      :                          @386
  7825: 95 11 68 ff              sp = sp + 0xffffffffffffff68
  7829: 7b 10 90 00              u64 [sp + 0x90] = ra
  7833: 7b 15 88 00              u64 [sp + 0x88] = s0
  7837: 7b 16 80 00              u64 [sp + 0x80] = s1
  7841: 64 85                    s0 = a1
  7843: 7d 78                    a1 = i8 [a0]
  7845: 33 06 01                 s1 = 0x1
  7848: 59 08 37                 jump @393 if a1 >=s 0
      :                          @387
  7851: 84 89 ff 00              a2 = a1 & 0xff
  7855: 33 06 02                 s1 = 0x2
  7858: 53 29 c0 00 2d           jump @393 if a2 <u 192
      :                          @388
  7863: 33 06 03                 s1 = 0x3
  7866: 53 29 e0 00 25           jump @393 if a2 <u 224
      :                          @389
  7871: 33 06 04                 s1 = 0x4
  7874: 53 29 f0 00 1d           jump @393 if a2 <u 240
      :                          @390
  7879: 33 06 05                 s1 = 0x5
  7882: 53 29 f8 00 15           jump @393 if a2 <u 248
      :                          @391
  7887: 33 06 06                 s1 = 0x6
  7890: 53 29 fc 00 0d           jump @393 if a2 <u 252
      :                          @392
  7895: 88 98 fe 00              a1 = a2 <u 0xfe
  7899: 9a 86 08                 s1 = 0x8 - a1
  7902: 01                       fallthrough
      :                          @393
  7903: ac 65 40 02              jump @447 if s0 <u s1
      :                          @394
  7907: 64 68                    a1 = s1
  7909: 7b 17                    u64 [sp] = a0
  7911: 50 20 c6 00 e2 11        ra = 198, jump @768
      :                          @395 [@dyn 99]
  7917: 82 17                    a0 = u64 [sp]
  7919: aa 65 30 02              jump @447 if s0 == s1
      :                          @396
  7923: c8 67 07                 a0 = a0 + s1
  7926: 7d 78                    a1 = i8 [a0]
  7928: c9 65 0a                 a3 = s0 - s1
  7931: 33 05 01                 s0 = 0x1
  7934: 59 08 37                 jump @403 if a1 >=s 0
      :                          @397
  7937: 84 89 ff 00              a2 = a1 & 0xff
  7941: 33 05 02                 s0 = 0x2
  7944: 53 29 c0 00 2d           jump @403 if a2 <u 192
      :                          @398
  7949: 33 05 03                 s0 = 0x3
  7952: 53 29 e0 00 25           jump @403 if a2 <u 224
      :                          @399
  7957: 33 05 04                 s0 = 0x4
  7960: 53 29 f0 00 1d           jump @403 if a2 <u 240
      :                          @400
  7965: 33 05 05                 s0 = 0x5
  7968: 53 29 f8 00 15           jump @403 if a2 <u 248
      :                          @401
  7973: 33 05 06                 s0 = 0x6
  7976: 53 29 fc 00 0d           jump @403 if a2 <u 252
      :                          @402
  7981: 88 98 fe 00              a1 = a2 <u 0xfe
  7985: 9a 85 08                 s0 = 0x8 - a1
  7988: 01                       fallthrough
      :                          @403
  7989: ac 5a ea 01              jump @447 if a3 <u s0
      :                          @404
  7993: 64 58                    a1 = s0
  7995: 7b 1a                    u64 [sp] = a3
  7997: 64 76                    s1 = a0
  7999: 50 20 c8 00 8a 11        ra = 200, jump @768
      :                          @405 [@dyn 100]
  8005: c8 65 07                 a0 = s0 + s1
  8008: 82 16                    s1 = u64 [sp]
  8010: ab 56 0c                 jump @407 if s1 != s0
      :                          @406
  8013: 33 08                    a1 = 0
  8015: 33 00 ca 00              ra = 0xca
  8019: 28 76 11                 jump @768
      :                          @407
  8022: 7d 79                    a2 = i8 [a0]
  8024: c9 56 06                 s1 = s1 - s0
  8027: 33 08 01                 a1 = 0x1
  8030: 59 09 44                 jump @414 if a2 >=s 0
      :                          @408
  8033: 84 99 ff 00              a2 = a2 & 0xff
  8037: 33 0a c0 00              a3 = 0xc0
  8041: 33 08 02                 a1 = 0x2
  8044: ac a9 36                 jump @414 if a2 <u a3
      :                          @409
  8047: 33 0a e0 00              a3 = 0xe0
  8051: 33 08 03                 a1 = 0x3
  8054: ac a9 2c                 jump @414 if a2 <u a3
      :                          @410
  8057: 33 0a f0 00              a3 = 0xf0
  8061: 33 08 04                 a1 = 0x4
  8064: ac a9 22                 jump @414 if a2 <u a3
      :                          @411
  8067: 33 0a f8 00              a3 = 0xf8
  8071: 33 08 05                 a1 = 0x5
  8074: ac a9 18                 jump @414 if a2 <u a3
      :                          @412
  8077: 33 0a fc 00              a3 = 0xfc
  8081: 33 08 06                 a1 = 0x6
  8084: ac a9 0e                 jump @414 if a2 <u a3
      :                          @413
  8087: 88 98 fe 00              a1 = a2 <u 0xfe
  8091: 33 09 08                 a2 = 0x8
  8094: c9 89 08                 a1 = a2 - a1
  8097: 01                       fallthrough
      :                          @414
  8098: ac 86 7d 01              jump @447 if s1 <u a1
      :                          @415
  8102: 50 20 ca 00 23 11        ra = 202, jump @768
      :                          @416 [@dyn 101]
  8108: 33 07 11 00 03           a0 = 0x30011
  8113: 33 09 08 10              a2 = 0x1008
  8117: 33 0a 0f                 a3 = 0xf
  8120: 33 08                    a1 = 0
  8122: 33 0b                    a4 = 0
  8124: 33 0c                    a5 = 0
  8126: 33 00 cc 00              ra = 0xcc
  8130: 0a 01                    ecalli 1 // 'fetch'
  8132: 01                       fallthrough
      :                          @417 [@dyn 102]
  8133: 51 07 5a 01              jump @447 if a0 == 0
      :                          @418
  8137: 95 76 80                 s1 = a0 + 0xffffffffffffff80
  8140: 51 06 53 01              jump @447 if s1 == 0
      :                          @419
  8144: 35 07 91 00 03           a0 = i8 [0x30091]
  8149: 33 05 01                 s0 = 0x1
  8152: 59 07 37                 jump @426 if a0 >=s 0
      :                          @420
  8155: 84 77 ff 00              a0 = a0 & 0xff
  8159: 33 05 02                 s0 = 0x2
  8162: 53 27 c0 00 2d           jump @426 if a0 <u 192
      :                          @421
  8167: 33 05 03                 s0 = 0x3
  8170: 53 27 e0 00 25           jump @426 if a0 <u 224
      :                          @422
  8175: 33 05 04                 s0 = 0x4
  8178: 53 27 f0 00 1d           jump @426 if a0 <u 240
      :                          @423
  8183: 33 05 05                 s0 = 0x5
  8186: 53 27 f8 00 15           jump @426 if a0 <u 248
      :                          @424
  8191: 33 05 06                 s0 = 0x6
  8194: 53 27 fc 00 0d           jump @426 if a0 <u 252
      :                          @425
  8199: 88 77 fe 00              a0 = a0 <u 0xfe
  8203: 9a 75 08                 s0 = 0x8 - a0
  8206: 01                       fallthrough
      :                          @426
  8207: ac 56 10 01              jump @447 if s1 <u s0
      :                          @427
  8211: 33 07 11 00 03           a0 = 0x30011
  8216: 7b 17                    u64 [sp] = a0
  8218: 95 77 80 00              a0 = a0 + 0x80
  8222: 64 58                    a1 = s0
  8224: 50 20 ce 00 a9 10        ra = 206, jump @768
      :                          @428 [@dyn 103]
  8230: 85 57 ff                 a0 = s0 ^ 0xffffffffffffffff
  8233: c8 67 07                 a0 = a0 + s1
  8236: 51 07 f3 00              jump @447 if a0 == 0
      :                          @429
  8240: 82 18                    a1 = u64 [sp]
  8242: c8 85 05                 s0 = s0 + a1
  8245: 95 55 81 00              s0 = s0 + 0x81
  8249: 7d 58                    a1 = i8 [s0]
  8251: 33 06 01                 s1 = 0x1
  8254: 59 08 45                 jump @437 if a1 >=s 0
      :                          @430
  8257: 84 88 ff 00              a1 = a1 & 0xff
  8261: 33 09 c0 00              a2 = 0xc0
  8265: 33 06 02                 s1 = 0x2
  8268: ac 98 33                 jump @436 if a1 <u a2
      :                          @431
  8271: 33 09 e0 00              a2 = 0xe0
  8275: 33 06 03                 s1 = 0x3
  8278: ac 98 29                 jump @436 if a1 <u a2
      :                          @432
  8281: 33 09 f0 00              a2 = 0xf0
  8285: 33 06 04                 s1 = 0x4
  8288: ac 98 1f                 jump @436 if a1 <u a2
      :                          @433
  8291: 33 09 f8 00              a2 = 0xf8
  8295: 33 06 05                 s1 = 0x5
  8298: ac 98 15                 jump @436 if a1 <u a2
      :                          @434
  8301: 33 09 fc 00              a2 = 0xfc
  8305: 33 06 06                 s1 = 0x6
  8308: ac 98 0b                 jump @436 if a1 <u a2
      :                          @435
  8311: 88 88 fe 00              a1 = a1 <u 0xfe
  8315: 9a 86 08                 s1 = 0x8 - a1
  8318: 01                       fallthrough
      :                          @436
  8319: ac 67 a0 00              jump @447 if a0 <u s1
      :                          @437
  8323: 64 57                    a0 = s0
  8325: 64 68                    a1 = s1
  8327: 50 20 d0 00 42 10        ra = 208, jump @768
      :                          @438 [@dyn 104]
  8333: 52 17 24 92 00           jump @447 if a0 != 36
      :                          @439
  8338: c8 56 07                 a0 = s1 + s0
  8341: 7b 17 08                 u64 [sp + 0x8] = a0
  8344: 80 78 20                 a1 = u32 [a0 + 0x20]
  8347: 7b 18 10                 u64 [sp + 0x10] = a1
  8350: 0a 17                    ecalli 23 // 'solicit'
  8352: 95 17 08                 a0 = sp + 0x8
  8355: 7b 17 60                 u64 [sp + 0x60] = a0
  8358: 33 07 0a                 a0 = 0xa
  8361: 7b 17 68                 u64 [sp + 0x68] = a0
  8364: 95 18 10                 a1 = sp + 0x10
  8367: 7b 18 70                 u64 [sp + 0x70] = a1
  8370: 7b 17 78                 u64 [sp + 0x78] = a0
  8373: 33 07 00 07 01           a0 = 0x10700
  8378: 7b 17 30                 u64 [sp + 0x30] = a0
  8381: 49 11 38 02              u64 [sp + 56] = 0x2
  8385: 49 11 50                 u64 [sp + 80] = 0
  8388: 95 18 60                 a1 = sp + 0x60
  8391: 7b 18 40                 u64 [sp + 0x40] = a1
  8394: 49 11 48 02              u64 [sp + 72] = 0x2
  8398: 95 17 18                 a0 = sp + 0x18
  8401: 95 18 30                 a1 = sp + 0x30
  8404: 50 20 d2 00 b6 02        ra = 210, jump @506
      :                          @440 [@dyn 105]
  8410: 82 15 20                 s0 = u64 [sp + 0x20]
  8413: 82 1b 28                 a4 = u64 [sp + 0x28]
  8416: 82 16 18                 s1 = u64 [sp + 0x18]
  8419: 33 07 02                 a0 = 0x2
  8422: 33 08                    a1 = 0
  8424: 33 09                    a2 = 0
  8426: 64 5a                    a3 = s0
  8428: 33 00 d4 00              ra = 0xd4
  8432: 0a 64                    ecalli 100 // 'log'
  8434: 01                       fallthrough
      :                          @441 [@dyn 106]
  8435: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
  8440: 53 38 00 00 f0 27        jump @447 if a1 <u 4293918720
      :                          @442
  8446: 33 07 20 10 03           a0 = 0x31020
  8451: 95 77 00 00 10           a0 = a0 + 0x100000
  8456: 01                       fallthrough
      :                          @443
  8457: 82 78                    a1 = u64 [a0]
  8459: c9 87 09                 a2 = a0 - a1
  8462: ab 59 11                 jump @447 if a2 != s0
      :                          @444
  8465: c9 68 09                 a2 = a1 - s1
  8468: 01                       fallthrough
      :                          @445
  8469: 82 7a                    a3 = u64 [a0]
  8471: ab 8a f2                 jump @443 if a3 != a1
      :                          @446
  8474: 7b 79                    u64 [a0] = a2
  8476: 33 0b                    a4 = 0
  8478: 01                       fallthrough
      :                          @447
  8479: 82 10 90 00              ra = u64 [sp + 0x90]
  8483: 82 15 88 00              s0 = u64 [sp + 0x88]
  8487: 82 16 80 00              s1 = u64 [sp + 0x80]
  8491: 95 11 98 00              sp = sp + 0x98
  8495: 33 07 00 00 01           a0 = 0x10000
  8500: 33 08                    a1 = 0
  8502: 32 00                    ret
      :                          @448
  8504: 33 07 00 00 01           a0 = 0x10000
  8509: 33 08                    a1 = 0
  8511: 32 00                    ret
      :                          @449 [export #2: 'on_transfer']
  8513: 33 07 00 00 01           a0 = 0x10000
  8518: 33 08                    a1 = 0
  8520: 32 00                    ret
      :                          @450
  8522: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  8525: 7b 10 40                 u64 [sp + 0x40] = ra
  8528: 7b 15 38                 u64 [sp + 0x38] = s0
  8531: 7b 16 30                 u64 [sp + 0x30] = s1
  8534: c8 89 09                 a2 = a2 + a1
  8537: ac 89 53                 jump @458 if a2 <u a1
      :                          @451
  8540: 64 75                    s0 = a0
  8542: 82 77                    a0 = u64 [a0]
  8544: 97 78 01                 a1 = a0 << 0x1
  8547: 33 0a 08                 a3 = 0x8
  8550: e4 a9 09                 a2 = maxu(a2, a3)
  8553: e4 98 06                 s1 = maxu(a1, a2)
  8556: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  8559: 98 88 3f                 a1 = a1 >> 0x3f
  8562: 51 07 12                 jump @453 if a0 == 0
      :                          @452
  8565: 82 59 08                 a2 = u64 [s0 + 0x8]
  8568: 7b 19 18                 u64 [sp + 0x18] = a2
  8571: 49 11 20 01              u64 [sp + 32] = 0x1
  8575: 7b 17 28                 u64 [sp + 0x28] = a0
  8578: 28 06                    jump @454
      :                          @453
  8580: 49 11 20                 u64 [sp + 32] = 0
  8583: 01                       fallthrough
      :                          @454
  8584: 64 17                    a0 = sp
  8586: 95 1a 18                 a3 = sp + 0x18
  8589: 64 69                    a2 = s1
  8591: 50 20 d6 00 33           ra = 214, jump @462
      :                          @455 [@dyn 107]
  8596: 82 18                    a1 = u64 [sp]
  8598: 82 17 08                 a0 = u64 [sp + 0x8]
  8601: 51 08 14                 jump @459 if a1 == 0
      :                          @456
  8604: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  8614: aa 87 0d                 jump @460 if a0 == a1
      :                          @457
  8617: 52 07 18                 jump @461 if a0 != 0
      :                          @458
  8620: 00                       trap
      :                          @459
  8621: 7b 57 08                 u64 [s0 + 0x8] = a0
  8624: 7b 56                    u64 [s0] = s1
  8626: 01                       fallthrough
      :                          @460
  8627: 82 10 40                 ra = u64 [sp + 0x40]
  8630: 82 15 38                 s0 = u64 [sp + 0x38]
  8633: 82 16 30                 s1 = u64 [sp + 0x30]
  8636: 95 11 48                 sp = sp + 0x48
  8639: 32 00                    ret
      :                          @461
  8641: 00                       trap
      :                          @462
  8642: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  8645: 7b 10 30                 u64 [sp + 0x30] = ra
  8648: 7b 15 28                 u64 [sp + 0x28] = s0
  8651: 7b 16 20                 u64 [sp + 0x20] = s1
  8654: 64 95                    s0 = a2
  8656: 64 72                    t0 = a0
  8658: 51 08 7a                 jump @472 if a1 == 0
      :                          @463
  8661: 82 a7 08                 a0 = u64 [a3 + 0x8]
  8664: 51 07 7d                 jump @473 if a0 == 0
      :                          @464
  8667: 82 a9 10                 a2 = u64 [a3 + 0x10]
  8670: 51 09 ab 00              jump @480 if a2 == 0
      :                          @465
  8674: 82 a8                    a1 = u64 [a3]
  8676: 33 06 20 10 03           s1 = 0x31020
  8681: 33 03 00 00 10           t1 = 0x100000
  8686: c8 36 06                 s1 = s1 + t1
  8689: 01                       fallthrough
      :                          @466
  8690: 82 6a                    a3 = u64 [s1]
  8692: c8 5a 07                 a0 = a3 + s0
  8695: ac a7 d0 00              jump @486 if a0 <u a3
      :                          @467
  8699: 95 7b 01                 a4 = a0 + 0x1
  8702: 88 bc 01                 a5 = a4 <u 0x1
  8705: d8 b3 0b                 a4 = t1 <u a4
  8708: d4 cb 0b                 a4 = a4 | a5
  8711: 52 0b c0 00              jump @486 if a4 != 0
      :                          @468
  8715: 82 6b                    a4 = u64 [s1]
  8717: ab ab e5                 jump @466 if a4 != a3
      :                          @469
  8720: 7b 67                    u64 [s1] = a0
  8722: 33 0c                    a5 = 0
  8724: 7b 12 18                 u64 [sp + 0x18] = t0
  8727: 33 0a 20 10 03           a3 = 0x31020
  8732: 33 0b 00 00 10           a4 = 0x100000
  8737: 7b 1a                    u64 [sp] = a3
  8739: c8 ba 0a                 a3 = a3 + a4
  8742: c9 7a 07                 a0 = a3 - a0
  8745: 7b 17 10                 u64 [sp + 0x10] = a0
  8748: 7b 18 08                 u64 [sp + 0x8] = a1
  8751: 64 96                    s1 = a2
  8753: 50 20 d8 00 d3 03        ra = 216, jump @556
      :                          @470 [@dyn 108]
  8759: 54 36 00 00 10 98 00     jump @487 if s1 <=u 1048576
      :                          @471
  8766: 82 12 18                 t0 = u64 [sp + 0x18]
  8769: 82 18 10                 a1 = u64 [sp + 0x10]
  8772: 33 07                    a0 = 0
  8774: 7b 28 08                 u64 [t0 + 0x8] = a1
  8777: 28 b5 00                 jump @493
      :                          @472
  8780: 49 12 08                 u64 [t0 + 8] = 0
  8783: 33 07 01                 a0 = 0x1
  8786: 28 ac 00                 jump @493
      :                          @473
  8789: 33 09 20 10 03           a2 = 0x31020
  8794: 33 07 00 00 10           a0 = 0x100000
  8799: c8 79 09                 a2 = a2 + a0
  8802: 01                       fallthrough
      :                          @474
  8803: 82 9a                    a3 = u64 [a2]
  8805: c8 5a 08                 a1 = a3 + s0
  8808: ac a8 5f                 jump @486 if a1 <u a3
      :                          @475
  8811: 95 8b 01                 a4 = a1 + 0x1
  8814: 88 bc 01                 a5 = a4 <u 0x1
  8817: d8 b7 0b                 a4 = a0 <u a4
  8820: d4 cb 0b                 a4 = a4 | a5
  8823: 52 0b 50                 jump @486 if a4 != 0
      :                          @476
  8826: 82 9b                    a4 = u64 [a2]
  8828: ab ab e7                 jump @474 if a4 != a3
      :                          @477
  8831: 7b 98                    u64 [a2] = a1
  8833: 33 0c                    a5 = 0
  8835: 01                       fallthrough
      :                          @478
  8836: ab ab df                 jump @474 if a4 != a3
      :                          @479
  8839: 28 31                    jump @485
      :                          @480
  8841: 33 09 20 10 03           a2 = 0x31020
  8846: 33 07 00 00 10           a0 = 0x100000
  8851: c8 79 09                 a2 = a2 + a0
  8854: 01                       fallthrough
      :                          @481
  8855: 82 9a                    a3 = u64 [a2]
  8857: c8 5a 08                 a1 = a3 + s0
  8860: ac a8 2b                 jump @486 if a1 <u a3
      :                          @482
  8863: 95 8b 01                 a4 = a1 + 0x1
  8866: 88 bc 01                 a5 = a4 <u 0x1
  8869: d8 b7 0b                 a4 = a0 <u a4
  8872: d4 cb 0b                 a4 = a4 | a5
  8875: 52 0b 1c                 jump @486 if a4 != 0
      :                          @483
  8878: 82 9b                    a4 = u64 [a2]
  8880: ab ab e7                 jump @481 if a4 != a3
      :                          @484
  8883: 7b 98                    u64 [a2] = a1
  8885: 33 0c                    a5 = 0
  8887: 01                       fallthrough
      :                          @485
  8888: 33 07 20 10 13           a0 = 0x131020
  8893: c9 87 08                 a1 = a0 - a1
  8896: 33 07                    a0 = 0
  8898: 7b 28 08                 u64 [t0 + 0x8] = a1
  8901: 28 39                    jump @493
      :                          @486
  8903: 33 07 01                 a0 = 0x1
  8906: 7b 27 08                 u64 [t0 + 0x8] = a0
  8909: 28 31                    jump @493
      :                          @487
  8911: 64 6c                    a5 = s1
  8913: 82 17                    a0 = u64 [sp]
  8915: 95 77 00 00 10           a0 = a0 + 0x100000
  8920: 82 12 18                 t0 = u64 [sp + 0x18]
  8923: 82 16 08                 s1 = u64 [sp + 0x8]
  8926: 01                       fallthrough
      :                          @488
  8927: 82 78                    a1 = u64 [a0]
  8929: c9 87 09                 a2 = a0 - a1
  8932: ab 69 11                 jump @492 if a2 != s1
      :                          @489
  8935: c9 c8 09                 a2 = a1 - a5
  8938: 01                       fallthrough
      :                          @490
  8939: 82 7a                    a3 = u64 [a0]
  8941: ab 8a f2                 jump @488 if a3 != a1
      :                          @491
  8944: 7b 79                    u64 [a0] = a2
  8946: 33 0b                    a4 = 0
  8948: 01                       fallthrough
      :                          @492
  8949: 82 18 10                 a1 = u64 [sp + 0x10]
  8952: 33 07                    a0 = 0
  8954: 7b 28 08                 u64 [t0 + 0x8] = a1
  8957: 01                       fallthrough
      :                          @493
  8958: 7b 25 10                 u64 [t0 + 0x10] = s0
  8961: 7b 27                    u64 [t0] = a0
  8963: 82 10 30                 ra = u64 [sp + 0x30]
  8966: 82 15 28                 s0 = u64 [sp + 0x28]
  8969: 82 16 20                 s1 = u64 [sp + 0x20]
  8972: 95 11 38                 sp = sp + 0x38
  8975: 32 00                    ret
      :                          @494
  8977: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  8980: 7b 10 40                 u64 [sp + 0x40] = ra
  8983: 7b 15 38                 u64 [sp + 0x38] = s0
  8986: 7b 16 30                 u64 [sp + 0x30] = s1
  8989: 95 88 01                 a1 = a1 + 0x1
  8992: 51 08 54                 jump @502 if a1 == 0
      :                          @495
  8995: 64 75                    s0 = a0
  8997: 82 77                    a0 = u64 [a0]
  8999: 97 79 01                 a2 = a0 << 0x1
  9002: 33 0a 08                 a3 = 0x8
  9005: e4 a8 08                 a1 = maxu(a1, a3)
  9008: e4 89 06                 s1 = maxu(a2, a1)
  9011: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  9014: 98 88 3f                 a1 = a1 >> 0x3f
  9017: 51 07 12                 jump @497 if a0 == 0
      :                          @496
  9020: 82 59 08                 a2 = u64 [s0 + 0x8]
  9023: 7b 19 18                 u64 [sp + 0x18] = a2
  9026: 49 11 20 01              u64 [sp + 32] = 0x1
  9030: 7b 17 28                 u64 [sp + 0x28] = a0
  9033: 28 06                    jump @498
      :                          @497
  9035: 49 11 20                 u64 [sp + 32] = 0
  9038: 01                       fallthrough
      :                          @498
  9039: 64 17                    a0 = sp
  9041: 95 1a 18                 a3 = sp + 0x18
  9044: 64 69                    a2 = s1
  9046: 50 20 da 00 6c fe        ra = 218, jump @462
      :                          @499 [@dyn 109]
  9052: 82 18                    a1 = u64 [sp]
  9054: 82 17 08                 a0 = u64 [sp + 0x8]
  9057: 51 08 14                 jump @503 if a1 == 0
      :                          @500
  9060: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  9070: aa 87 0d                 jump @504 if a0 == a1
      :                          @501
  9073: 52 07 18                 jump @505 if a0 != 0
      :                          @502
  9076: 00                       trap
      :                          @503
  9077: 7b 57 08                 u64 [s0 + 0x8] = a0
  9080: 7b 56                    u64 [s0] = s1
  9082: 01                       fallthrough
      :                          @504
  9083: 82 10 40                 ra = u64 [sp + 0x40]
  9086: 82 15 38                 s0 = u64 [sp + 0x38]
  9089: 82 16 30                 s1 = u64 [sp + 0x30]
  9092: 95 11 48                 sp = sp + 0x48
  9095: 32 00                    ret
      :                          @505
  9097: 00                       trap
      :                          @506
  9098: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  9101: 7b 10 30                 u64 [sp + 0x30] = ra
  9104: 7b 15 28                 u64 [sp + 0x28] = s0
  9107: 7b 16 20                 u64 [sp + 0x20] = s1
  9110: 64 89                    a2 = a1
  9112: 82 8a 08                 a3 = u64 [a1 + 0x8]
  9115: 64 75                    s0 = a0
  9117: 51 0a 35                 jump @511 if a3 == 0
      :                          @507
  9120: 82 98                    a1 = u64 [a2]
  9122: 33 07                    a0 = 0
  9124: 95 8b 08                 a4 = a1 + 0x8
  9127: 01                       fallthrough
      :                          @508
  9128: 82 bc                    a5 = u64 [a4]
  9130: c8 c7 07                 a0 = a0 + a5
  9133: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  9136: 95 bb 10                 a4 = a4 + 0x10
  9139: 52 0a f5                 jump @508 if a3 != 0
      :                          @509
  9142: 82 9a 18                 a3 = u64 [a2 + 0x18]
  9145: 51 0a 24                 jump @513 if a3 == 0
      :                          @510
  9148: 82 88 08                 a1 = u64 [a1 + 0x8]
  9151: 8e 88                    a1 = a1 >u 0
  9153: 88 7a 10                 a3 = a0 <u 0x10
  9156: 85 aa 01                 a3 = a3 ^ 0x1
  9159: d4 a8 08                 a1 = a1 | a3
  9162: 89 7a                    a3 = a0 <s 0
  9164: e0 a8 08                 a1 = a1 & ~a3
  9167: 52 08 0a                 jump @512 if a1 != 0
      :                          @511
  9170: 33 07                    a0 = 0
  9172: 33 08 01                 a1 = 0x1
  9175: 28 4a                    jump @521
      :                          @512
  9177: 97 77 01                 a0 = a0 << 0x1
  9180: 01                       fallthrough
      :                          @513
  9181: 51 07 40                 jump @520 if a0 == 0
      :                          @514
  9184: 57 07 79                 jump @526 if a0 <s 0
      :                          @515
  9187: 64 52                    t0 = s0
  9189: 33 0b 20 10 03           a4 = 0x31020
  9194: 33 08 00 00 10           a1 = 0x100000
  9199: c8 8b 0b                 a4 = a4 + a1
  9202: 01                       fallthrough
      :                          @516
  9203: 82 bc                    a5 = u64 [a4]
  9205: c8 7c 0a                 a3 = a5 + a0
  9208: ac ca 5f                 jump @524 if a3 <u a5
      :                          @517
  9211: 95 a5 01                 s0 = a3 + 0x1
  9214: 88 56 01                 s1 = s0 <u 0x1
  9217: d8 58 05                 s0 = a1 <u s0
  9220: d4 65 05                 s0 = s0 | s1
  9223: 52 05 50                 jump @524 if s0 != 0
      :                          @518
  9226: 82 b6                    s1 = u64 [a4]
  9228: ab c6 e7                 jump @516 if s1 != a5
      :                          @519
  9231: 7b ba                    u64 [a4] = a3
  9233: 33 08 20 10 13           a1 = 0x131020
  9238: c9 a8 08                 a1 = a1 - a3
  9241: 64 25                    s0 = t0
  9243: 28 06                    jump @521
      :                          @520
  9245: 33 08 01                 a1 = 0x1
  9248: 01                       fallthrough
      :                          @521
  9249: 7b 17                    u64 [sp] = a0
  9251: 7b 18 08                 u64 [sp + 0x8] = a1
  9254: 49 11 10                 u64 [sp + 16] = 0
  9257: 33 08 20 07 01           a1 = 0x10720
  9262: 64 17                    a0 = sp
  9264: 50 20 dc 00 89 06        ra = 220, jump @652
      :                          @522 [@dyn 110]
  9270: 52 07 22                 jump @525 if a0 != 0
      :                          @523
  9273: 82 17 10                 a0 = u64 [sp + 0x10]
  9276: 82 18 08                 a1 = u64 [sp + 0x8]
  9279: 82 19                    a2 = u64 [sp]
  9281: 7b 57 10                 u64 [s0 + 0x10] = a0
  9284: 7b 58 08                 u64 [s0 + 0x8] = a1
  9287: 7b 59                    u64 [s0] = a2
  9289: 82 10 30                 ra = u64 [sp + 0x30]
  9292: 82 15 28                 s0 = u64 [sp + 0x28]
  9295: 82 16 20                 s1 = u64 [sp + 0x20]
  9298: 95 11 38                 sp = sp + 0x38
  9301: 32 00                    ret
      :                          @524
  9303: 00                       trap
      :                          @525
  9304: 00                       trap
      :                          @526
  9305: 00                       trap
      :                          @527 [@dyn 111]
  9306: 82 72                    t0 = u64 [a0]
  9308: 33 09 00 00 f0           a2 = 0xfffffffffff00000
  9313: 95 2a ff ff ef           a3 = t0 + 0xffffffffffefffff
  9318: ac 9a 28                 jump @533 if a3 <u a2
      :                          @528
  9321: 82 77 08                 a0 = u64 [a0 + 0x8]
  9324: 33 09 20 10 03           a2 = 0x31020
  9329: 95 99 00 00 10           a2 = a2 + 0x100000
  9334: 01                       fallthrough
      :                          @529
  9335: 82 9a                    a3 = u64 [a2]
  9337: c9 a9 0b                 a4 = a2 - a3
  9340: ab 7b 12                 jump @533 if a4 != a0
      :                          @530
  9343: c9 2a 0b                 a4 = a3 - t0
  9346: 01                       fallthrough
      :                          @531
  9347: 82 9c                    a5 = u64 [a2]
  9349: ab ac f2                 jump @529 if a5 != a3
      :                          @532
  9352: 7b 9b                    u64 [a2] = a4
  9354: 33 08                    a1 = 0
  9356: 32 00                    ret
      :                          @533
  9358: 32 00                    ret
      :                          @534 [@dyn 112]
  9360: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  9363: 7b 10 18                 u64 [sp + 0x18] = ra
  9366: 7b 15 10                 u64 [sp + 0x10] = s0
  9369: 7b 16 08                 u64 [sp + 0x8] = s1
  9372: 64 75                    s0 = a0
  9374: 82 7a 10                 a3 = u64 [a0 + 0x10]
  9377: 82 77                    a0 = u64 [a0]
  9379: c9 a7 07                 a0 = a0 - a3
  9382: 64 96                    s1 = a2
  9384: ac 97 2b                 jump @537 if a0 <u a2
      :                          @535
  9387: 7b 1a                    u64 [sp] = a3
  9389: 82 57 08                 a0 = u64 [s0 + 0x8]
  9392: c8 a7 07                 a0 = a0 + a3
  9395: 64 69                    a2 = s1
  9397: 50 20 e2 00 4f 01        ra = 226, jump @556
      :                          @536 [@dyn 113]
  9403: 82 17                    a0 = u64 [sp]
  9405: c8 76 06                 s1 = s1 + a0
  9408: 7b 56 10                 u64 [s0 + 0x10] = s1
  9411: 33 07                    a0 = 0
  9413: 82 10 18                 ra = u64 [sp + 0x18]
  9416: 82 15 10                 s0 = u64 [sp + 0x10]
  9419: 82 16 08                 s1 = u64 [sp + 0x8]
  9422: 95 11 20                 sp = sp + 0x20
  9425: 32 00                    ret
      :                          @537
  9427: 64 57                    a0 = s0
  9429: 7b 18                    u64 [sp] = a1
  9431: 64 a8                    a1 = a3
  9433: 64 69                    a2 = s1
  9435: 50 20 e4 00 6f fc        ra = 228, jump @450
      :                          @538 [@dyn 114]
  9441: 82 18                    a1 = u64 [sp]
  9443: 82 5a 10                 a3 = u64 [s0 + 0x10]
  9446: 28 c5                    jump @535
      :                          @539 [@dyn 115]
  9448: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  9451: 7b 10 20                 u64 [sp + 0x20] = ra
  9454: 7b 15 18                 u64 [sp + 0x18] = s0
  9457: 7b 16 10                 u64 [sp + 0x10] = s1
  9460: 64 86                    s1 = a1
  9462: 83 88                    i32 a1 = a1 + 0
  9464: 33 09 80 00              a2 = 0x80
  9468: 64 7a                    a3 = a0
  9470: ae 98 2c                 jump @544 if a1 >=u a2
      :                          @540
  9473: 82 a8 10                 a1 = u64 [a3 + 0x10]
  9476: 82 a7                    a0 = u64 [a3]
  9478: ab 78 13                 jump @543 if a1 != a0
      :                          @541
  9481: 64 a7                    a0 = a3
  9483: 64 a5                    s0 = a3
  9485: 50 20 e8 00 04 fe        ra = 232, jump @494
      :                          @542 [@dyn 116]
  9491: 64 5a                    a3 = s0
  9493: 82 58 10                 a1 = u64 [s0 + 0x10]
  9496: 01                       fallthrough
      :                          @543
  9497: 82 a7 08                 a0 = u64 [a3 + 0x8]
  9500: c8 87 07                 a0 = a0 + a1
  9503: 78 76                    u8 [a0] = s1
  9505: 95 88 01                 a1 = a1 + 0x1
  9508: 7b a8 10                 u64 [a3 + 0x10] = a1
  9511: 28 ac 00                 jump @552
      :                          @544
  9514: 8b 67 0b                 i32 a0 = s1 >> 0xb
  9517: 48 11 0c                 u32 [sp + 12] = 0
  9520: 52 07 1c                 jump @546 if a0 != 0
      :                          @545
  9523: 98 67 06                 a0 = s1 >> 0x6
  9526: 86 77 c0 00              a0 = a0 | 0xc0
  9530: 78 17 0c                 u8 [sp + 0xc] = a0
  9533: 84 67 3f                 a0 = s1 & 0x3f
  9536: 86 77 80 00              a0 = a0 | 0x80
  9540: 78 17 0d                 u8 [sp + 0xd] = a0
  9543: 33 06 02                 s1 = 0x2
  9546: 28 63                    jump @549
      :                          @546
  9548: 8b 67 10                 i32 a0 = s1 >> 0x10
  9551: 52 07 29                 jump @548 if a0 != 0
      :                          @547
  9554: 98 67 0c                 a0 = s1 >> 0xc
  9557: 86 77 e0 00              a0 = a0 | 0xe0
  9561: 78 17 0c                 u8 [sp + 0xc] = a0
  9564: 97 67 34                 a0 = s1 << 0x34
  9567: 98 77 3a                 a0 = a0 >> 0x3a
  9570: 95 77 80 00              a0 = a0 + 0x80
  9574: 78 17 0d                 u8 [sp + 0xd] = a0
  9577: 84 67 3f                 a0 = s1 & 0x3f
  9580: 86 77 80 00              a0 = a0 | 0x80
  9584: 78 17 0e                 u8 [sp + 0xe] = a0
  9587: 33 06 03                 s1 = 0x3
  9590: 28 37                    jump @549
      :                          @548
  9592: 97 67 2b                 a0 = s1 << 0x2b
  9595: 98 77 3d                 a0 = a0 >> 0x3d
  9598: 95 77 f0 00              a0 = a0 + 0xf0
  9602: 78 17 0c                 u8 [sp + 0xc] = a0
  9605: 97 67 2e                 a0 = s1 << 0x2e
  9608: 98 77 3a                 a0 = a0 >> 0x3a
  9611: 95 77 80 00              a0 = a0 + 0x80
  9615: 78 17 0d                 u8 [sp + 0xd] = a0
  9618: 97 67 34                 a0 = s1 << 0x34
  9621: 98 77 3a                 a0 = a0 >> 0x3a
  9624: 95 77 80 00              a0 = a0 + 0x80
  9628: 78 17 0e                 u8 [sp + 0xe] = a0
  9631: 84 67 3f                 a0 = s1 & 0x3f
  9634: 86 77 80 00              a0 = a0 | 0x80
  9638: 78 17 0f                 u8 [sp + 0xf] = a0
  9641: 33 06 04                 s1 = 0x4
  9644: 01                       fallthrough
      :                          @549
  9645: 82 a5 10                 s0 = u64 [a3 + 0x10]
  9648: 82 a7                    a0 = u64 [a3]
  9650: c9 57 07                 a0 = a0 - s0
  9653: ac 67 2e                 jump @553 if a0 <u s1
      :                          @550
  9656: 7b 1a                    u64 [sp] = a3
  9658: 82 a7 08                 a0 = u64 [a3 + 0x8]
  9661: c8 57 07                 a0 = a0 + s0
  9664: 95 18 0c                 a1 = sp + 0xc
  9667: 64 69                    a2 = s1
  9669: 50 20 ea 00 3f           ra = 234, jump @556
      :                          @551 [@dyn 117]
  9674: c8 56 06                 s1 = s1 + s0
  9677: 82 17                    a0 = u64 [sp]
  9679: 7b 76 10                 u64 [a0 + 0x10] = s1
  9682: 01                       fallthrough
      :                          @552
  9683: 33 07                    a0 = 0
  9685: 82 10 20                 ra = u64 [sp + 0x20]
  9688: 82 15 18                 s0 = u64 [sp + 0x18]
  9691: 82 16 10                 s1 = u64 [sp + 0x10]
  9694: 95 11 28                 sp = sp + 0x28
  9697: 32 00                    ret
      :                          @553
  9699: 64 a7                    a0 = a3
  9701: 64 58                    a1 = s0
  9703: 64 69                    a2 = s1
  9705: 64 a5                    s0 = a3
  9707: 50 20 ec 00 5f fb        ra = 236, jump @450
      :                          @554 [@dyn 118]
  9713: 64 5a                    a3 = s0
  9715: 82 55 10                 s0 = u64 [s0 + 0x10]
  9718: 28 c2                    jump @550
      :                          @555 [@dyn 119]
  9720: 64 8a                    a3 = a1
  9722: 33 08 20 07 01           a1 = 0x10720
  9727: 64 a9                    a2 = a3
  9729: 28 b8 04                 jump @652
      :                          @556
  9732: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  9735: 7b 10 18                 u64 [sp + 0x18] = ra
  9738: 7b 15 10                 u64 [sp + 0x10] = s0
  9741: 7b 16 08                 u64 [sp + 0x8] = s1
  9744: 53 19 10 64              jump @565 if a2 <u 16
      :                          @557
  9748: 8d 7a                    i32 a3 = -a0
  9750: 84 a2 07                 t0 = a3 & 0x7
  9753: c8 27 0b                 a4 = a0 + t0
  9756: 51 02 15                 jump @560 if t0 == 0
      :                          @558
  9759: 64 8c                    a5 = a1
  9761: 64 75                    s0 = a0
  9763: 01                       fallthrough
      :                          @559
  9764: 7c ca                    a3 = u8 [a5]
  9766: 78 5a                    u8 [s0] = a3
  9768: 95 55 01                 s0 = s0 + 0x1
  9771: 95 cc 01                 a5 = a5 + 0x1
  9774: ac b5 f6                 jump @559 if s0 <u a4
      :                          @560
  9777: c8 28 03                 t1 = a1 + t0
  9780: c9 29 02                 t0 = a2 - t0
  9783: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  9786: 84 38 07                 a1 = t1 & 0x7
  9789: c8 4b 0a                 a3 = a4 + t2
  9792: 51 08 3b                 jump @567 if a1 == 0
      :                          @561
  9795: 58 04 4b                 jump @570 if t2 <=s 0
      :                          @562
  9798: 97 38 03                 a1 = t1 << 0x3
  9801: 84 80 38                 ra = a1 & 0x38
  9804: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  9807: 82 c5                    s0 = u64 [a5]
  9809: 8d 88                    i32 a1 = -a1
  9811: 84 88 38                 a1 = a1 & 0x38
  9814: 95 cc 08                 a5 = a5 + 0x8
  9817: 01                       fallthrough
      :                          @563
  9818: 82 c6                    s1 = u64 [a5]
  9820: d0 05 05                 s0 = s0 >> ra
  9823: cf 86 09                 a2 = s1 << a1
  9826: d4 59 09                 a2 = a2 | s0
  9829: 7b b9                    u64 [a4] = a2
  9831: 95 bb 08                 a4 = a4 + 0x8
  9834: 95 cc 08                 a5 = a5 + 0x8
  9837: 64 65                    s0 = s1
  9839: ac ab eb                 jump @563 if a4 <u a3
      :                          @564
  9842: 28 1c                    jump @570
      :                          @565
  9844: 64 7a                    a3 = a0
  9846: 52 09 21                 jump @571 if a2 != 0
      :                          @566
  9849: 28 2f                    jump @573
      :                          @567
  9851: 58 04 13                 jump @570 if t2 <=s 0
      :                          @568
  9854: 64 38                    a1 = t1
  9856: 01                       fallthrough
      :                          @569
  9857: 82 89                    a2 = u64 [a1]
  9859: 7b b9                    u64 [a4] = a2
  9861: 95 bb 08                 a4 = a4 + 0x8
  9864: 95 88 08                 a1 = a1 + 0x8
  9867: ac ab f6                 jump @569 if a4 <u a3
      :                          @570
  9870: c8 43 08                 a1 = t1 + t2
  9873: 84 29 07                 a2 = t0 & 0x7
  9876: 51 09 14                 jump @573 if a2 == 0
      :                          @571
  9879: c8 a9 09                 a2 = a2 + a3
  9882: 01                       fallthrough
      :                          @572
  9883: 7c 8b                    a4 = u8 [a1]
  9885: 78 ab                    u8 [a3] = a4
  9887: 95 aa 01                 a3 = a3 + 0x1
  9890: 95 88 01                 a1 = a1 + 0x1
  9893: ac 9a f6                 jump @572 if a3 <u a2
      :                          @573
  9896: 82 10 18                 ra = u64 [sp + 0x18]
  9899: 82 15 10                 s0 = u64 [sp + 0x10]
  9902: 82 16 08                 s1 = u64 [sp + 0x8]
  9905: 95 11 20                 sp = sp + 0x20
  9908: 32 00                    ret
      :                          @574
  9910: 53 19 10 48              jump @583 if a2 <u 16
      :                          @575
  9914: 8d 7a                    i32 a3 = -a0
  9916: 84 aa 07                 a3 = a3 & 0x7
  9919: c8 a7 0b                 a4 = a0 + a3
  9922: 51 0a 0e                 jump @578 if a3 == 0
      :                          @576
  9925: 64 7c                    a5 = a0
  9927: 01                       fallthrough
      :                          @577
  9928: 78 c8                    u8 [a5] = a1
  9930: 95 cc 01                 a5 = a5 + 0x1
  9933: ac bc fb                 jump @577 if a5 <u a4
      :                          @578
  9936: c9 a9 03                 t1 = a2 - a3
  9939: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  9942: c8 cb 0a                 a3 = a4 + a5
  9945: 58 0c 1d                 jump @581 if a5 <=s 0
      :                          @579
  9948: 84 82 ff 00              t0 = a1 & 0xff
  9952: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  9962: ca 92 0c                 a5 = t0 * a2
  9965: 01                       fallthrough
      :                          @580
  9966: 7b bc                    u64 [a4] = a5
  9968: 95 bb 08                 a4 = a4 + 0x8
  9971: ac ab fb                 jump @580 if a4 <u a3
      :                          @581
  9974: 84 39 07                 a2 = t1 & 0x7
  9977: 52 09 0a                 jump @584 if a2 != 0
      :                          @582
  9980: 28 13                    jump @586
      :                          @583
  9982: 64 7a                    a3 = a0
  9984: 51 09 0f                 jump @586 if a2 == 0
      :                          @584
  9987: c8 a9 09                 a2 = a2 + a3
  9990: 01                       fallthrough
      :                          @585
  9991: 78 a8                    u8 [a3] = a1
  9993: 95 aa 01                 a3 = a3 + 0x1
  9996: ac 9a fb                 jump @585 if a3 <u a2
      :                          @586
  9999: 32 00                    ret
      :                          @587 [@dyn 120]
 10001: 82 77                    a0 = u64 [a0]
 10003: 01                       fallthrough
      :                          @588
 10004: 28                       jump @588
      :                          @589 [@dyn 121]
 10005: 82 77                    a0 = u64 [a0]
 10007: 01                       fallthrough
      :                          @590
 10008: 95 11 a8                 sp = sp + 0xffffffffffffffa8
 10011: 7b 10 50                 u64 [sp + 0x50] = ra
 10014: 7b 15 48                 u64 [sp + 0x48] = s0
 10017: 7b 16 40                 u64 [sp + 0x40] = s1
 10020: 7b 18                    u64 [sp] = a1
 10022: 98 79 04                 a2 = a0 >> 0x4
 10025: 33 08 27                 a1 = 0x27
 10028: 53 29 71 02 81 00        jump @593 if a2 <u 625
      :                          @591
 10034: 33 08 27                 a1 = 0x27
 10037: 95 1a 3e                 a3 = sp + 0x3e
 10040: 3a 09 00 00 03           a2 = u64 [0x30000]
 10045: 7b 19 10                 u64 [sp + 0x10] = a2
 10048: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
 10054: 33 04 7b 14              t2 = 0x147b
 10058: 33 0b a0 07 01           a4 = 0x107a0
 10063: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
 10069: 01                       fallthrough
      :                          @592
 10070: 64 72                    t0 = a0
 10072: 82 17 10                 a0 = u64 [sp + 0x10]
 10075: d6 72 07                 a0 = t0 mulhu a0
 10078: 98 77 0b                 a0 = a0 >> 0xb
 10081: 82 19 08                 a2 = u64 [sp + 0x8]
 10084: c0 97 0c                 i32 a5 = a0 * a2
 10087: c8 2c 06                 s1 = a5 + t0
 10090: 97 6c 30                 a5 = s1 << 0x30
 10093: 98 cc 32                 a5 = a5 >> 0x32
 10096: ca 4c 0c                 a5 = a5 * t2
 10099: 98 c3 11                 t1 = a5 >> 0x11
 10102: 98 cc 10                 a5 = a5 >> 0x10
 10105: 84 cc fe 07              a5 = a5 & 0x7fe
 10109: 96 39 9c                 a2 = t1 * 0xffffffffffffff9c
 10112: c8 69 09                 a2 = a2 + s1
 10115: 97 99 31                 a2 = a2 << 0x31
 10118: 98 99 30                 a2 = a2 >> 0x30
 10121: c8 bc 0c                 a5 = a5 + a4
 10124: 7c c6                    s1 = u8 [a5]
 10126: 7c cc 01                 a5 = u8 [a5 + 0x1]
 10129: c8 b9 09                 a2 = a2 + a4
 10132: 7c 95 01                 s0 = u8 [a2 + 0x1]
 10135: 7c 99                    a2 = u8 [a2]
 10137: 78 ac ff                 u8 [a3 + 0xffffffffffffffff] = a5
 10140: 78 a6 fe                 u8 [a3 + 0xfffffffffffffffe] = s1
 10143: 78 a5 01                 u8 [a3 + 0x1] = s0
 10146: 78 a9                    u8 [a3] = a2
 10148: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
 10151: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
 10154: ac 20 ac                 jump @592 if ra <u t0
      :                          @593
 10157: 54 17 63 3b              jump @595 if a0 <=u 99
      :                          @594
 10161: 97 79 30                 a2 = a0 << 0x30
 10164: 98 99 32                 a2 = a2 >> 0x32
 10167: 96 99 7b 14              a2 = a2 * 0x147b
 10171: 98 99 11                 a2 = a2 >> 0x11
 10174: 96 9a 9c                 a3 = a2 * 0xffffffffffffff9c
 10177: c8 a7 07                 a0 = a0 + a3
 10180: 97 77 31                 a0 = a0 << 0x31
 10183: 98 77 30                 a0 = a0 >> 0x30
 10186: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
 10189: 33 0a a0 07 01           a3 = 0x107a0
 10194: c8 a7 07                 a0 = a0 + a3
 10197: 7c 7a 01                 a3 = u8 [a0 + 0x1]
 10200: 7c 77                    a0 = u8 [a0]
 10202: 95 1b 19                 a4 = sp + 0x19
 10205: c8 8b 0b                 a4 = a4 + a1
 10208: 78 ba 01                 u8 [a4 + 0x1] = a3
 10211: 78 b7                    u8 [a4] = a0
 10213: 64 97                    a0 = a2
 10215: 01                       fallthrough
      :                          @595
 10216: 55 17 0a 14              jump @597 if a0 >=u 10
      :                          @596
 10220: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 10223: 95 19 19                 a2 = sp + 0x19
 10226: c8 89 09                 a2 = a2 + a1
 10229: 83 77 30                 i32 a0 = a0 + 0x30
 10232: 78 97                    u8 [a2] = a0
 10234: 28 21                    jump @598
      :                          @597
 10236: 97 77 01                 a0 = a0 << 0x1
 10239: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
 10242: 33 09 a0 07 01           a2 = 0x107a0
 10247: c8 97 07                 a0 = a0 + a2
 10250: 7c 79 01                 a2 = u8 [a0 + 0x1]
 10253: 7c 77                    a0 = u8 [a0]
 10255: 95 1a 19                 a3 = sp + 0x19
 10258: c8 8a 0a                 a3 = a3 + a1
 10261: 78 a9 01                 u8 [a3 + 0x1] = a2
 10264: 78 a7                    u8 [a3] = a0
 10266: 01                       fallthrough
      :                          @598
 10267: 95 1a 19                 a3 = sp + 0x19
 10270: c8 8a 0a                 a3 = a3 + a1
 10273: 9a 8b 27                 a4 = 0x27 - a1
 10276: 33 08 50 07 01           a1 = 0x10750
 10281: 82 17                    a0 = u64 [sp]
 10283: 33 09                    a2 = 0
 10285: 50 20 f4 00 13           ra = 244, jump @600
      :                          @599 [@dyn 122]
 10290: 82 10 50                 ra = u64 [sp + 0x50]
 10293: 82 15 48                 s0 = u64 [sp + 0x48]
 10296: 82 16 40                 s1 = u64 [sp + 0x40]
 10299: 95 11 58                 sp = sp + 0x58
 10302: 32 00                    ret
      :                          @600
 10304: 95 11 98                 sp = sp + 0xffffffffffffff98
 10307: 7b 10 60                 u64 [sp + 0x60] = ra
 10310: 7b 15 58                 u64 [sp + 0x58] = s0
 10313: 7b 16 50                 u64 [sp + 0x50] = s1
 10316: 80 73 34                 t1 = u32 [a0 + 0x34]
 10319: 7b 1a 20                 u64 [sp + 0x20] = a3
 10322: 64 9c                    a5 = a2
 10324: 84 36 01                 s1 = t1 & 0x1
 10327: 33 02 2b                 t0 = 0x2b
 10330: 33 09 00 00 11           a2 = 0x110000
 10335: 84 3a 04                 a3 = t1 & 0x4
 10338: 7b 1b 28                 u64 [sp + 0x28] = a4
 10341: c8 b6 04                 t2 = s1 + a4
 10344: 7b 1c 30                 u64 [sp + 0x30] = a5
 10347: 52 0a 10                 jump @603 if a3 != 0
      :                          @601
 10350: 49 11 38                 u64 [sp + 56] = 0
 10353: 82 78                    a1 = u64 [a0]
 10355: 94 69 2b                 a2 = 0x2b if s1 != 0
 10358: 52 08 35                 jump @607 if a1 != 0
      :                          @602
 10361: 28 56                    jump @612
      :                          @603
 10363: 7b 18 38                 u64 [sp + 0x38] = a1
 10366: 33 09                    a2 = 0
 10368: 51 0c 1b                 jump @606 if a5 == 0
      :                          @604
 10371: 82 1b 38                 a4 = u64 [sp + 0x38]
 10374: 01                       fallthrough
      :                          @605
 10375: 7d b5                    s0 = i8 [a4]
 10377: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
 10380: 85 5a 01                 a3 = s0 ^ 0x1
 10383: c8 a9 09                 a2 = a2 + a3
 10386: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 10389: 95 bb 01                 a4 = a4 + 0x1
 10392: 52 0c ef                 jump @605 if a5 != 0
      :                          @606
 10395: c8 94 04                 t2 = t2 + a2
 10398: 33 09 00 00 11           a2 = 0x110000
 10403: 82 78                    a1 = u64 [a0]
 10405: db 62 09                 a2 = t0 if s1 != 0
 10408: 51 08 27                 jump @612 if a1 == 0
      :                          @607
 10411: 82 7a 08                 a3 = u64 [a0 + 0x8]
 10414: ae a4 21                 jump @612 if t2 >=u a3
      :                          @608
 10417: 84 38 08                 a1 = t1 & 0x8
 10420: 52 08 51                 jump @615 if a1 != 0
      :                          @609
 10423: 7c 76 38                 s1 = u8 [a0 + 0x38]
 10426: c9 4a 0a                 a3 = a3 - t2
 10429: 7b 19 18                 u64 [sp + 0x18] = a2
 10432: 5a 16 01 a0 00           jump @622 if s1 >s 1
      :                          @610
 10437: 52 06 ad 00              jump @624 if s1 != 0
      :                          @611
 10441: 7b 1a 10                 u64 [sp + 0x10] = a3
 10444: 28 ac 00                 jump @625
      :                          @612
 10447: 82 75 20                 s0 = u64 [a0 + 0x20]
 10450: 82 76 28                 s1 = u64 [a0 + 0x28]
 10453: 64 57                    a0 = s0
 10455: 64 68                    a1 = s1
 10457: 82 1a 38                 a3 = u64 [sp + 0x38]
 10460: 82 1b 30                 a4 = u64 [sp + 0x30]
 10463: 50 20 f6 00 75 01        ra = 246, jump @645
      :                          @613 [@dyn 123]
 10469: 33 08 01                 a1 = 0x1
 10472: 52 07 be 00              jump @630 if a0 != 0
      :                          @614
 10476: 82 6c 18                 a5 = u64 [s1 + 0x18]
 10479: 64 57                    a0 = s0
 10481: 82 18 20                 a1 = u64 [sp + 0x20]
 10484: 82 19 28                 a2 = u64 [sp + 0x28]
 10487: 82 10 60                 ra = u64 [sp + 0x60]
 10490: 82 15 58                 s0 = u64 [sp + 0x58]
 10493: 82 16 50                 s1 = u64 [sp + 0x50]
 10496: 95 11 68                 sp = sp + 0x68
 10499: 32 0c                    jump [a5]
      :                          @615
 10501: 7b 1a 40                 u64 [sp + 0x40] = a3
 10504: 64 45                    s0 = t2
 10506: 81 78 30                 a1 = i32 [a0 + 0x30]
 10509: 7b 18 10                 u64 [sp + 0x10] = a1
 10512: 7c 7a 38                 a3 = u8 [a0 + 0x38]
 10515: 7b 1a 08                 u64 [sp + 0x8] = a3
 10518: 82 7a 20                 a3 = u64 [a0 + 0x20]
 10521: 82 78 28                 a1 = u64 [a0 + 0x28]
 10524: 48 17 30 30              u32 [a0 + 48] = 0x30
 10528: 7b 17                    u64 [sp] = a0
 10530: 46 17 38 01              u8 [a0 + 56] = 0x1
 10534: 7b 1a 48                 u64 [sp + 0x48] = a3
 10537: 64 a7                    a0 = a3
 10539: 64 86                    s1 = a1
 10541: 82 1a 38                 a3 = u64 [sp + 0x38]
 10544: 82 1b 30                 a4 = u64 [sp + 0x30]
 10547: 50 20 f8 00 21 01        ra = 248, jump @645
      :                          @616 [@dyn 124]
 10553: 52 07 69                 jump @629 if a0 != 0
      :                          @617
 10556: 82 17 40                 a0 = u64 [sp + 0x40]
 10559: c9 57 05                 s0 = a0 - s0
 10562: 95 55 01                 s0 = s0 + 0x1
 10565: 01                       fallthrough
      :                          @618
 10566: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 10569: 51 05 cb 00              jump @640 if s0 == 0
      :                          @619
 10573: 82 69 20                 a2 = u64 [s1 + 0x20]
 10576: 33 08 30                 a1 = 0x30
 10579: 82 17 48                 a0 = u64 [sp + 0x48]
 10582: b4 90 02 fa 00           ra = 250, jump [a2]
      :                          @620 [@dyn 125]
 10587: 51 07 eb                 jump @618 if a0 == 0
      :                          @621
 10590: 28 44                    jump @629
      :                          @622
 10592: 52 16 02 12              jump @624 if s1 != 2
      :                          @623
 10596: 98 a6 01                 s1 = a3 >> 0x1
 10599: 95 a8 01                 a1 = a3 + 0x1
 10602: 98 88 01                 a1 = a1 >> 0x1
 10605: 7b 18 10                 u64 [sp + 0x10] = a1
 10608: 28 08                    jump @625
      :                          @624
 10610: 64 a6                    s1 = a3
 10612: 49 11 10                 u64 [sp + 16] = 0
 10615: 01                       fallthrough
      :                          @625
 10616: 82 78 20                 a1 = u64 [a0 + 0x20]
 10619: 7b 18 48                 u64 [sp + 0x48] = a1
 10622: 82 75 28                 s0 = u64 [a0 + 0x28]
 10625: 81 77 30                 a0 = i32 [a0 + 0x30]
 10628: 7b 17 40                 u64 [sp + 0x40] = a0
 10631: 95 66 01                 s1 = s1 + 0x1
 10634: 01                       fallthrough
      :                          @626
 10635: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 10638: 51 06 28                 jump @631 if s1 == 0
      :                          @627
 10641: 82 59 20                 a2 = u64 [s0 + 0x20]
 10644: 82 17 48                 a0 = u64 [sp + 0x48]
 10647: 82 18 40                 a1 = u64 [sp + 0x40]
 10650: b4 90 02 fc 00           ra = 252, jump [a2]
      :                          @628 [@dyn 126]
 10655: 51 07 ec                 jump @626 if a0 == 0
      :                          @629
 10658: 33 08 01                 a1 = 0x1
 10661: 01                       fallthrough
      :                          @630
 10662: 64 87                    a0 = a1
 10664: 82 10 60                 ra = u64 [sp + 0x60]
 10667: 82 15 58                 s0 = u64 [sp + 0x58]
 10670: 82 16 50                 s1 = u64 [sp + 0x50]
 10673: 95 11 68                 sp = sp + 0x68
 10676: 32 00                    ret
      :                          @631
 10678: 82 16 48                 s1 = u64 [sp + 0x48]
 10681: 64 67                    a0 = s1
 10683: 64 58                    a1 = s0
 10685: 82 19 18                 a2 = u64 [sp + 0x18]
 10688: 82 1a 38                 a3 = u64 [sp + 0x38]
 10691: 82 1b 30                 a4 = u64 [sp + 0x30]
 10694: 50 20 fe 00 8e 00        ra = 254, jump @645
      :                          @632 [@dyn 127]
 10700: 33 08 01                 a1 = 0x1
 10703: 52 07 d7                 jump @630 if a0 != 0
      :                          @633
 10706: 82 5a 18                 a3 = u64 [s0 + 0x18]
 10709: 64 67                    a0 = s1
 10711: 82 18 20                 a1 = u64 [sp + 0x20]
 10714: 82 19 28                 a2 = u64 [sp + 0x28]
 10717: b4 a0 02 00 01           ra = 256, jump [a3]
      :                          @634 [@dyn 128]
 10722: 33 08 01                 a1 = 0x1
 10725: 52 07 c1                 jump @630 if a0 != 0
      :                          @635
 10728: 82 17 10                 a0 = u64 [sp + 0x10]
 10731: 9a 77                    a0 = -a0
 10733: 7b 17 38                 u64 [sp + 0x38] = a0
 10736: 33 06 ff                 s1 = 0xffffffffffffffff
 10739: 01                       fallthrough
      :                          @636
 10740: 82 17 38                 a0 = u64 [sp + 0x38]
 10743: c8 67 07                 a0 = a0 + s1
 10746: 51 17 ff 45              jump @643 if a0 == 4294967295
      :                          @637
 10750: 82 59 20                 a2 = u64 [s0 + 0x20]
 10753: 82 17 48                 a0 = u64 [sp + 0x48]
 10756: 82 18 40                 a1 = u64 [sp + 0x40]
 10759: b4 90 02 02 01           ra = 258, jump [a2]
      :                          @638 [@dyn 129]
 10764: 95 66 01                 s1 = s1 + 0x1
 10767: 51 07 e5                 jump @636 if a0 == 0
      :                          @639
 10770: 28 39                    jump @644
      :                          @640
 10772: 82 6a 18                 a3 = u64 [s1 + 0x18]
 10775: 82 17 48                 a0 = u64 [sp + 0x48]
 10778: 82 18 20                 a1 = u64 [sp + 0x20]
 10781: 82 19 28                 a2 = u64 [sp + 0x28]
 10784: b4 a0 02 04 01           ra = 260, jump [a3]
      :                          @641 [@dyn 130]
 10789: 33 08 01                 a1 = 0x1
 10792: 52 07 7e ff              jump @630 if a0 != 0
      :                          @642
 10796: 33 08                    a1 = 0
 10798: 82 16                    s1 = u64 [sp]
 10800: 82 17 10                 a0 = u64 [sp + 0x10]
 10803: 7a 67 30                 u32 [s1 + 0x30] = a0
 10806: 82 17 08                 a0 = u64 [sp + 0x8]
 10809: 78 67 38                 u8 [s1 + 0x38] = a0
 10812: 28 6a ff                 jump @630
      :                          @643
 10815: 82 16 10                 s1 = u64 [sp + 0x10]
 10818: 82 17 10                 a0 = u64 [sp + 0x10]
 10821: d8 76 08                 a1 = s1 <u a0
 10824: 28 5e ff                 jump @630
      :                          @644
 10827: 82 17 10                 a0 = u64 [sp + 0x10]
 10830: d8 76 08                 a1 = s1 <u a0
 10833: 28 55 ff                 jump @630
      :                          @645
 10836: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 10839: 7b 10 20                 u64 [sp + 0x20] = ra
 10842: 7b 15 18                 u64 [sp + 0x18] = s0
 10845: 7b 16 10                 u64 [sp + 0x10] = s1
 10848: 83 9c                    i32 a5 = a2 + 0
 10850: 33 02 00 00 11           t0 = 0x110000
 10855: 64 a6                    s1 = a3
 10857: 64 85                    s0 = a1
 10859: 64 7a                    a3 = a0
 10861: aa 2c 21                 jump @648 if a5 == t0
      :                          @646
 10864: 82 5c 20                 a5 = u64 [s0 + 0x20]
 10867: 64 a7                    a0 = a3
 10869: 64 98                    a1 = a2
 10871: 7b 1b 08                 u64 [sp + 0x8] = a4
 10874: 7b 1a                    u64 [sp] = a3
 10876: b4 c0 02 06 01           ra = 262, jump [a5]
      :                          @647 [@dyn 131]
 10881: 82 1a                    a3 = u64 [sp]
 10883: 82 1b 08                 a4 = u64 [sp + 0x8]
 10886: 64 78                    a1 = a0
 10888: 33 07 01                 a0 = 0x1
 10891: 52 08 20                 jump @651 if a1 != 0
      :                          @648
 10894: 51 06 1a                 jump @650 if s1 == 0
      :                          @649
 10897: 82 5c 18                 a5 = u64 [s0 + 0x18]
 10900: 64 a7                    a0 = a3
 10902: 64 68                    a1 = s1
 10904: 64 b9                    a2 = a4
 10906: 82 10 20                 ra = u64 [sp + 0x20]
 10909: 82 15 18                 s0 = u64 [sp + 0x18]
 10912: 82 16 10                 s1 = u64 [sp + 0x10]
 10915: 95 11 28                 sp = sp + 0x28
 10918: 32 0c                    jump [a5]
      :                          @650
 10920: 33 07                    a0 = 0
 10922: 01                       fallthrough
      :                          @651
 10923: 82 10 20                 ra = u64 [sp + 0x20]
 10926: 82 15 18                 s0 = u64 [sp + 0x18]
 10929: 82 16 10                 s1 = u64 [sp + 0x10]
 10932: 95 11 28                 sp = sp + 0x28
 10935: 32 00                    ret
      :                          @652
 10937: 95 11 78 ff              sp = sp + 0xffffffffffffff78
 10941: 7b 10 80 00              u64 [sp + 0x80] = ra
 10945: 7b 15 78                 u64 [sp + 0x78] = s0
 10948: 7b 16 70                 u64 [sp + 0x70] = s1
 10951: 49 11 60 20              u64 [sp + 96] = 0x20
 10955: 33 0a 03                 a3 = 0x3
 10958: 78 1a 68                 u8 [sp + 0x68] = a3
 10961: 82 96 20                 s1 = u64 [a2 + 0x20]
 10964: 49 11 30                 u64 [sp + 48] = 0
 10967: 49 11 40                 u64 [sp + 64] = 0
 10970: 7b 17 50                 u64 [sp + 0x50] = a0
 10973: 7b 18 58                 u64 [sp + 0x58] = a1
 10976: 51 06 0a 01              jump @674 if s1 == 0
      :                          @653
 10980: 82 97 28                 a0 = u64 [a2 + 0x28]
 10983: 51 07 79 01              jump @684 if a0 == 0
      :                          @654
 10987: 49 11 28                 u64 [sp + 40] = 0
 10990: 82 95                    s0 = u64 [a2]
 10992: 7b 19 08                 u64 [sp + 0x8] = a2
 10995: 82 98 10                 a1 = u64 [a2 + 0x10]
 10998: 7b 18 18                 u64 [sp + 0x18] = a1
 11001: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 11004: 97 88 03                 a1 = a1 << 0x3
 11007: 98 88 03                 a1 = a1 >> 0x3
 11010: 95 88 01                 a1 = a1 + 0x1
 11013: 7b 18                    u64 [sp] = a1
 11015: 95 55 08                 s0 = s0 + 0x8
 11018: 96 78 38                 a1 = a0 * 0x38
 11021: 95 66 18                 s1 = s1 + 0x18
 11024: 33 07 f0 00              a0 = 0xf0
 11028: 7b 17 10                 u64 [sp + 0x10] = a0
 11031: 01                       fallthrough
      :                          @655
 11032: 7b 18 20                 u64 [sp + 0x20] = a1
 11035: 82 59                    a2 = u64 [s0]
 11037: 51 09 18                 jump @658 if a2 == 0
      :                          @656
 11040: 82 1a 58                 a3 = u64 [sp + 0x58]
 11043: 82 17 50                 a0 = u64 [sp + 0x50]
 11046: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
 11049: 82 aa 18                 a3 = u64 [a3 + 0x18]
 11052: b4 a0 02 08 01           ra = 264, jump [a3]
      :                          @657 [@dyn 132]
 11057: 52 07 55 01              jump @687 if a0 != 0
      :                          @658
 11061: 81 67 10                 a0 = i32 [s1 + 0x10]
 11064: 7a 17 60                 u32 [sp + 0x60] = a0
 11067: 7c 67 18                 a0 = u8 [s1 + 0x18]
 11070: 78 17 68                 u8 [sp + 0x68] = a0
 11073: 81 67 14                 a0 = i32 [s1 + 0x14]
 11076: 7a 17 64                 u32 [sp + 0x64] = a0
 11079: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
 11082: 82 67                    a0 = u64 [s1]
 11084: 51 08 26                 jump @663 if a1 == 0
      :                          @659
 11087: 52 18 01 16              jump @661 if a1 != 1
      :                          @660
 11091: 97 77 04                 a0 = a0 << 0x4
 11094: 82 18 18                 a1 = u64 [sp + 0x18]
 11097: c8 87 07                 a0 = a0 + a1
 11100: 82 78 08                 a1 = u64 [a0 + 0x8]
 11103: 82 19 10                 a2 = u64 [sp + 0x10]
 11106: aa 98 07                 jump @662 if a1 == a2
      :                          @661
 11109: 33 08                    a1 = 0
 11111: 28 0f                    jump @664
      :                          @662
 11113: 82 77                    a0 = u64 [a0]
 11115: 82 77                    a0 = u64 [a0]
 11117: 33 08 01                 a1 = 0x1
 11120: 28 06                    jump @664
      :                          @663
 11122: 33 08 01                 a1 = 0x1
 11125: 01                       fallthrough
      :                          @664
 11126: 7b 18 30                 u64 [sp + 0x30] = a1
 11129: 7b 17 38                 u64 [sp + 0x38] = a0
 11132: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
 11135: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
 11138: 51 08 26                 jump @669 if a1 == 0
      :                          @665
 11141: 52 18 01 16              jump @667 if a1 != 1
      :                          @666
 11145: 97 77 04                 a0 = a0 << 0x4
 11148: 82 18 18                 a1 = u64 [sp + 0x18]
 11151: c8 87 07                 a0 = a0 + a1
 11154: 82 78 08                 a1 = u64 [a0 + 0x8]
 11157: 82 19 10                 a2 = u64 [sp + 0x10]
 11160: aa 98 07                 jump @668 if a1 == a2
      :                          @667
 11163: 33 08                    a1 = 0
 11165: 28 0f                    jump @670
      :                          @668
 11167: 82 77                    a0 = u64 [a0]
 11169: 82 77                    a0 = u64 [a0]
 11171: 33 08 01                 a1 = 0x1
 11174: 28 06                    jump @670
      :                          @669
 11176: 33 08 01                 a1 = 0x1
 11179: 01                       fallthrough
      :                          @670
 11180: 7b 18 40                 u64 [sp + 0x40] = a1
 11183: 7b 17 48                 u64 [sp + 0x48] = a0
 11186: 82 67 08                 a0 = u64 [s1 + 0x8]
 11189: 97 77 04                 a0 = a0 << 0x4
 11192: 82 18 18                 a1 = u64 [sp + 0x18]
 11195: c8 78 08                 a1 = a1 + a0
 11198: 82 87                    a0 = u64 [a1]
 11200: 82 89 08                 a2 = u64 [a1 + 0x8]
 11203: 95 18 30                 a1 = sp + 0x30
 11206: b4 90 02 0a 01           ra = 266, jump [a2]
      :                          @671 [@dyn 133]
 11211: 52 07 bb 00              jump @687 if a0 != 0
      :                          @672
 11215: 95 55 10                 s0 = s0 + 0x10
 11218: 82 18 20                 a1 = u64 [sp + 0x20]
 11221: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
 11224: 95 66 38                 s1 = s1 + 0x38
 11227: 82 17 28                 a0 = u64 [sp + 0x28]
 11230: 95 77 01                 a0 = a0 + 0x1
 11233: 7b 17 28                 u64 [sp + 0x28] = a0
 11236: 52 08 34 ff              jump @655 if a1 != 0
      :                          @673
 11240: 28 6b                    jump @682
      :                          @674
 11242: 82 97 18                 a0 = u64 [a2 + 0x18]
 11245: 51 07 73                 jump @684 if a0 == 0
      :                          @675
 11248: 82 95 10                 s0 = u64 [a2 + 0x10]
 11251: 33 0a                    a3 = 0
 11253: 97 78 04                 a1 = a0 << 0x4
 11256: c8 58 08                 a1 = a1 + s0
 11259: 7b 18 20                 u64 [sp + 0x20] = a1
 11262: 7b 19 08                 u64 [sp + 0x8] = a2
 11265: 82 96                    s1 = u64 [a2]
 11267: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 11270: 97 77 04                 a0 = a0 << 0x4
 11273: 98 77 04                 a0 = a0 >> 0x4
 11276: 95 77 01                 a0 = a0 + 0x1
 11279: 7b 17                    u64 [sp] = a0
 11281: 95 66 08                 s1 = s1 + 0x8
 11284: 01                       fallthrough
      :                          @676
 11285: 7b 1a 28                 u64 [sp + 0x28] = a3
 11288: 82 69                    a2 = u64 [s1]
 11290: 51 09 17                 jump @679 if a2 == 0
      :                          @677
 11293: 82 1a 58                 a3 = u64 [sp + 0x58]
 11296: 82 17 50                 a0 = u64 [sp + 0x50]
 11299: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
 11302: 82 aa 18                 a3 = u64 [a3 + 0x18]
 11305: b4 a0 02 0c 01           ra = 268, jump [a3]
      :                          @678 [@dyn 134]
 11310: 52 07 58                 jump @687 if a0 != 0
      :                          @679
 11313: 82 57                    a0 = u64 [s0]
 11315: 82 59 08                 a2 = u64 [s0 + 0x8]
 11318: 95 18 30                 a1 = sp + 0x30
 11321: b4 90 02 0e 01           ra = 270, jump [a2]
      :                          @680 [@dyn 135]
 11326: 52 07 48                 jump @687 if a0 != 0
      :                          @681
 11329: 95 66 10                 s1 = s1 + 0x10
 11332: 95 55 10                 s0 = s0 + 0x10
 11335: 82 1a 28                 a3 = u64 [sp + 0x28]
 11338: 95 aa 01                 a3 = a3 + 0x1
 11341: 82 17 20                 a0 = u64 [sp + 0x20]
 11344: ab 75 c5                 jump @676 if s0 != a0
      :                          @682
 11347: 82 19 08                 a2 = u64 [sp + 0x8]
 11350: 82 1a                    a3 = u64 [sp]
 11352: 82 97 08                 a0 = u64 [a2 + 0x8]
 11355: ac 7a 0d                 jump @685 if a3 <u a0
      :                          @683
 11358: 28 2d                    jump @688
      :                          @684
 11360: 33 0a                    a3 = 0
 11362: 82 97 08                 a0 = u64 [a2 + 0x8]
 11365: 54 07 26                 jump @688 if a0 <=u 0
      :                          @685
 11368: 82 97                    a0 = u64 [a2]
 11370: 97 a8 04                 a1 = a3 << 0x4
 11373: c8 87 09                 a2 = a0 + a1
 11376: 82 1a 58                 a3 = u64 [sp + 0x58]
 11379: 82 17 50                 a0 = u64 [sp + 0x50]
 11382: 82 98                    a1 = u64 [a2]
 11384: 82 99 08                 a2 = u64 [a2 + 0x8]
 11387: 82 aa 18                 a3 = u64 [a3 + 0x18]
 11390: b4 a0 02 10 01           ra = 272, jump [a3]
      :                          @686 [@dyn 136]
 11395: 51 07 08                 jump @688 if a0 == 0
      :                          @687
 11398: 33 07 01                 a0 = 0x1
 11401: 28 05                    jump @689
      :                          @688
 11403: 33 07                    a0 = 0
 11405: 01                       fallthrough
      :                          @689
 11406: 82 10 80 00              ra = u64 [sp + 0x80]
 11410: 82 15 78                 s0 = u64 [sp + 0x78]
 11413: 82 16 70                 s1 = u64 [sp + 0x70]
 11416: 95 11 88 00              sp = sp + 0x88
 11420: 32 00                    ret
      :                          @690 [@dyn 137]
 11422: 32 00                    ret
      :                          @691 [@dyn 138]
 11424: 95 11 80                 sp = sp + 0xffffffffffffff80
 11427: 7b 10 78                 u64 [sp + 0x78] = ra
 11430: 7b 15 70                 u64 [sp + 0x70] = s0
 11433: 7b 16 68                 u64 [sp + 0x68] = s1
 11436: 64 92                    t0 = a2
 11438: 33 00                    ra = 0
 11440: 33 0b                    a4 = 0
 11442: 33 05                    s0 = 0
 11444: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
 11454: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
 11460: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
 11470: 82 79 10                 a2 = u64 [a0 + 0x10]
 11473: 7b 19 48                 u64 [sp + 0x48] = a2
 11476: 82 79                    a2 = u64 [a0]
 11478: 7b 19 38                 u64 [sp + 0x38] = a2
 11481: 82 77 08                 a0 = u64 [a0 + 0x8]
 11484: 7b 17 30                 u64 [sp + 0x30] = a0
 11487: 33 07 90 07 01           a0 = 0x10790
 11492: 7b 17 08                 u64 [sp + 0x8] = a0
 11495: 3a 07 08 00 03           a0 = u64 [0x30008]
 11500: 7b 17 60                 u64 [sp + 0x60] = a0
 11503: 7b 18 58                 u64 [sp + 0x58] = a1
 11506: 95 88 08                 a1 = a1 + 0x8
 11509: 7b 18                    u64 [sp] = a1
 11511: 33 0c 0a                 a5 = 0xa
 11514: 7b 12 20                 u64 [sp + 0x20] = t0
 11517: 7b 13 18                 u64 [sp + 0x18] = t1
 11520: 7b 14 10                 u64 [sp + 0x10] = t2
 11523: 28 3b                    jump @695
      :                          @692
 11525: 64 06                    s1 = ra
 11527: c8 89 07                 a0 = a2 + a1
 11530: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
 11533: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
 11536: 88 77 01                 a0 = a0 <u 0x1
 11539: 01                       fallthrough
      :                          @693
 11540: 82 1a 48                 a3 = u64 [sp + 0x48]
 11543: 78 a7                    u8 [a3] = a0
 11545: 82 17 30                 a0 = u64 [sp + 0x30]
 11548: 82 7a 18                 a3 = u64 [a0 + 0x18]
 11551: 82 17 38                 a0 = u64 [sp + 0x38]
 11554: b4 a0 02 16 01           ra = 278, jump [a3]
      :                          @694 [@dyn 139]
 11559: 64 5b                    a4 = s0
 11561: 82 12 20                 t0 = u64 [sp + 0x20]
 11564: 82 13 18                 t1 = u64 [sp + 0x18]
 11567: 82 14 10                 t2 = u64 [sp + 0x10]
 11570: 64 60                    ra = s1
 11572: 33 0c 0a                 a5 = 0xa
 11575: 82 15 40                 s0 = u64 [sp + 0x40]
 11578: 52 07 64 01              jump @736 if a0 != 0
      :                          @695
 11582: 84 57 ff 00              a0 = s0 & 0xff
 11586: 52 07 58 01              jump @735 if a0 != 0
      :                          @696
 11590: 7b 1b 50                 u64 [sp + 0x50] = a4
 11593: ae 02 0a                 jump @699 if t0 >=u ra
      :                          @697
 11596: 28 ef 00                 jump @726
      :                          @698
 11599: ac 02 ec 00              jump @726 if t0 <u ra
      :                          @699
 11603: c9 02 08                 a1 = t0 - ra
 11606: 82 16 58                 s1 = u64 [sp + 0x58]
 11609: c8 06 06                 s1 = s1 + ra
 11612: 55 18 10 1d              jump @705 if a1 >=u 16
      :                          @700
 11616: aa 02 d8 00              jump @725 if t0 == ra
      :                          @701
 11620: 33 0a                    a3 = 0
 11622: 01                       fallthrough
      :                          @702
 11623: c8 a6 07                 a0 = s1 + a3
 11626: 7c 77                    a0 = u8 [a0]
 11628: aa c7 a5 00              jump @720 if a0 == a5
      :                          @703
 11632: 95 aa 01                 a3 = a3 + 0x1
 11635: ab a8 f4                 jump @702 if a1 != a3
      :                          @704
 11638: 28 c2 00                 jump @725
      :                          @705
 11641: 95 69 07                 a2 = s1 + 0x7
 11644: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
 11647: c9 6a 07                 a0 = a3 - s1
 11650: d3 6a 0a                 a3 = a3 ^ s1
 11653: 88 aa 01                 a3 = a3 <u 0x1
 11656: 88 7b 01                 a4 = a0 <u 0x1
 11659: d4 ba 0a                 a3 = a3 | a4
 11662: 51 0a 45                 jump @711 if a3 == 0
      :                          @706
 11665: 33 07                    a0 = 0
 11667: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
 11670: 82 1b                    a4 = u64 [sp]
 11672: c8 0b 0b                 a4 = a4 + ra
 11675: 28 08                    jump @708
      :                          @707
 11677: 82 1b                    a4 = u64 [sp]
 11679: c8 0b 0b                 a4 = a4 + ra
 11682: 01                       fallthrough
      :                          @708
 11683: c8 76 0c                 a5 = s1 + a0
 11686: 82 cc                    a5 = u64 [a5]
 11688: c8 7b 09                 a2 = a4 + a0
 11691: 82 99                    a2 = u64 [a2]
 11693: d3 4c 05                 s0 = a5 ^ t2
 11696: c8 35 05                 s0 = s0 + t1
 11699: e0 c5 0c                 a5 = s0 & ~a5
 11702: d3 49 05                 s0 = a2 ^ t2
 11705: c8 35 05                 s0 = s0 + t1
 11708: e0 95 09                 a2 = s0 & ~a2
 11711: d4 c9 09                 a2 = a2 | a5
 11714: 82 1c 60                 a5 = u64 [sp + 0x60]
 11717: d2 c9 09                 a2 = a2 & a5
 11720: 52 09 1f                 jump @714 if a2 != 0
      :                          @709
 11723: 95 77 10                 a0 = a0 + 0x10
 11726: ae 7a d5                 jump @708 if a3 >=u a0
      :                          @710
 11729: 28 16                    jump @714
      :                          @711
 11731: c8 a6 0b                 a4 = s1 + a3
 11734: 7c bb                    a4 = u8 [a4]
 11736: aa cb 51                 jump @723 if a4 == a5
      :                          @712
 11739: 95 aa 01                 a3 = a3 + 0x1
 11742: ab a7 f5                 jump @711 if a0 != a3
      :                          @713
 11745: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
 11748: ae 7a b9                 jump @707 if a3 >=u a0
      :                          @714
 11751: aa 87 9b 00              jump @732 if a0 == a1
      :                          @715
 11755: 33 0a                    a3 = 0
 11757: c8 76 06                 s1 = s1 + a0
 11760: c9 72 08                 a1 = t0 - a0
 11763: c9 08 08                 a1 = a1 - ra
 11766: 33 0c 0a                 a5 = 0xa
 11769: 82 1b 50                 a4 = u64 [sp + 0x50]
 11772: 01                       fallthrough
      :                          @716
 11773: c8 a6 09                 a2 = s1 + a3
 11776: 7c 99                    a2 = u8 [a2]
 11778: aa c9 0b                 jump @719 if a2 == a5
      :                          @717
 11781: 95 aa 01                 a3 = a3 + 0x1
 11784: ab a8 f5                 jump @716 if a1 != a3
      :                          @718
 11787: 28 2d                    jump @725
      :                          @719
 11789: c8 7a 0a                 a3 = a3 + a0
 11792: 01                       fallthrough
      :                          @720
 11793: c8 0a 0a                 a3 = a3 + ra
 11796: 95 a0 01                 ra = a3 + 0x1
 11799: ae 2a 38 ff              jump @698 if a3 >=u t0
      :                          @721
 11803: 82 17 58                 a0 = u64 [sp + 0x58]
 11806: c8 7a 0a                 a3 = a3 + a0
 11809: 7c a7                    a0 = u8 [a3]
 11811: ab c7 2c ff              jump @698 if a0 != a5
      :                          @722
 11815: 28 62                    jump @733
      :                          @723
 11817: 82 1b 50                 a4 = u64 [sp + 0x50]
 11820: c8 0a 0a                 a3 = a3 + ra
 11823: 95 a0 01                 ra = a3 + 0x1
 11826: ac 2a e9                 jump @721 if a3 <u t0
      :                          @724
 11829: 28 1a ff                 jump @698
      :                          @725
 11832: 64 20                    ra = t0
 11834: 01                       fallthrough
      :                          @726
 11835: 49 11 40 01              u64 [sp + 64] = 0x1
 11839: 64 b5                    s0 = a4
 11841: 64 26                    s1 = t0
 11843: aa 2b 57                 jump @735 if a4 == t0
      :                          @727
 11846: 82 17 48                 a0 = u64 [sp + 0x48]
 11849: 7c 77                    a0 = u8 [a0]
 11851: 51 07 23                 jump @730 if a0 == 0
      :                          @728
 11854: 82 17 30                 a0 = u64 [sp + 0x30]
 11857: 82 7a 18                 a3 = u64 [a0 + 0x18]
 11860: 33 09 04                 a2 = 0x4
 11863: 82 17 38                 a0 = u64 [sp + 0x38]
 11866: 82 18 08                 a1 = u64 [sp + 0x8]
 11869: 7b 10 28                 u64 [sp + 0x28] = ra
 11872: b4 a0 02 18 01           ra = 280, jump [a3]
      :                          @729 [@dyn 140]
 11877: 82 1b 50                 a4 = u64 [sp + 0x50]
 11880: 82 10 28                 ra = u64 [sp + 0x28]
 11883: 52 07 33                 jump @736 if a0 != 0
      :                          @730
 11886: c9 b6 09                 a2 = s1 - a4
 11889: 82 18 58                 a1 = u64 [sp + 0x58]
 11892: c8 b8 08                 a1 = a1 + a4
 11895: ab b6 8e fe              jump @692 if s1 != a4
      :                          @731
 11899: 64 06                    s1 = ra
 11901: 33 07                    a0 = 0
 11903: 28 95 fe                 jump @693
      :                          @732
 11906: 64 20                    ra = t0
 11908: 82 1b 50                 a4 = u64 [sp + 0x50]
 11911: 28 b4                    jump @726
      :                          @733
 11913: 49 11 40                 u64 [sp + 64] = 0
 11916: 64 05                    s0 = ra
 11918: 64 06                    s1 = ra
 11920: 82 17 48                 a0 = u64 [sp + 0x48]
 11923: 7c 77                    a0 = u8 [a0]
 11925: 52 07 b9                 jump @728 if a0 != 0
      :                          @734
 11928: 28 d6                    jump @730
      :                          @735
 11930: 33 07                    a0 = 0
 11932: 28 06                    jump @737
      :                          @736
 11934: 33 07 01                 a0 = 0x1
 11937: 01                       fallthrough
      :                          @737
 11938: 82 10 78                 ra = u64 [sp + 0x78]
 11941: 82 15 70                 s0 = u64 [sp + 0x70]
 11944: 82 16 68                 s1 = u64 [sp + 0x68]
 11947: 95 11 80 00              sp = sp + 0x80
 11951: 32 00                    ret
      :                          @738 [@dyn 141]
 11953: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 11956: 7b 10 20                 u64 [sp + 0x20] = ra
 11959: 7b 15 18                 u64 [sp + 0x18] = s0
 11962: 7b 16 10                 u64 [sp + 0x10] = s1
 11965: 82 75 10                 s0 = u64 [a0 + 0x10]
 11968: 7c 59                    a2 = u8 [s0]
 11970: 82 7b                    a4 = u64 [a0]
 11972: 82 76 08                 s1 = u64 [a0 + 0x8]
 11975: 51 09 33                 jump @742 if a2 == 0
      :                          @739
 11978: 82 6a 18                 a3 = u64 [s1 + 0x18]
 11981: 7b 18 08                 u64 [sp + 0x8] = a1
 11984: 33 08 90 07 01           a1 = 0x10790
 11989: 33 09 04                 a2 = 0x4
 11992: 64 b7                    a0 = a4
 11994: 7b 1b                    u64 [sp] = a4
 11996: b4 a0 02 1c 01           ra = 284, jump [a3]
      :                          @740 [@dyn 142]
 12001: 82 18 08                 a1 = u64 [sp + 0x8]
 12004: 82 1b                    a4 = u64 [sp]
 12006: 51 07 14                 jump @742 if a0 == 0
      :                          @741
 12009: 33 07 01                 a0 = 0x1
 12012: 82 10 20                 ra = u64 [sp + 0x20]
 12015: 82 15 18                 s0 = u64 [sp + 0x18]
 12018: 82 16 10                 s1 = u64 [sp + 0x10]
 12021: 95 11 28                 sp = sp + 0x28
 12024: 32 00                    ret
      :                          @742
 12026: 83 87                    i32 a0 = a1 + 0
 12028: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
 12031: 88 77 01                 a0 = a0 <u 0x1
 12034: 78 57                    u8 [s0] = a0
 12036: 82 6c 20                 a5 = u64 [s1 + 0x20]
 12039: 64 b7                    a0 = a4
 12041: 82 10 20                 ra = u64 [sp + 0x20]
 12044: 82 15 18                 s0 = u64 [sp + 0x18]
 12047: 82 16 10                 s1 = u64 [sp + 0x10]
 12050: 95 11 28                 sp = sp + 0x28
 12053: 32 0c                    jump [a5]
      :                          @743 [@dyn 143]
 12055: 64 8a                    a3 = a1
 12057: 33 08 58 07 01           a1 = 0x10758
 12062: 64 a9                    a2 = a3
 12064: 28 99 fb                 jump @652
      :                          @744 [@dyn 144]
 12067: 80 77                    a0 = u32 [a0]
 12069: 28 f3 f7                 jump @590
      :                          @745 [@dyn 145]
 12072: 95 11 78 ff              sp = sp + 0xffffffffffffff78
 12076: 7b 10 80 00              u64 [sp + 0x80] = ra
 12080: 82 7b                    a4 = u64 [a0]
 12082: 33 09 81 00              a2 = 0x81
 12086: 95 17 7f                 a0 = sp + 0x7f
 12089: 33 02 57                 t0 = 0x57
 12092: 01                       fallthrough
      :                          @746
 12093: 64 9c                    a5 = a2
 12095: 98 ba 04                 a3 = a4 >> 0x4
 12098: 84 bb 0f                 a4 = a4 & 0xf
 12101: 88 b3 0a                 t1 = a4 <u 0xa
 12104: 33 09 30                 a2 = 0x30
 12107: da 32 09                 a2 = t0 if t1 == 0
 12110: be b9 09                 i32 a2 = a2 + a4
 12113: 78 79                    u8 [a0] = a2
 12115: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 12118: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
 12121: 64 ab                    a4 = a3
 12123: 52 0a e2                 jump @746 if a3 != 0
      :                          @747
 12126: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
 12129: 56 27 80 00 28           jump @750 if a0 >u 128
      :                          @748
 12134: 9a 9b 81 00              a4 = 0x81 - a2
 12138: 64 1a                    a3 = sp
 12140: c8 7a 0a                 a3 = a3 + a0
 12143: 33 09 02                 a2 = 0x2
 12146: 64 87                    a0 = a1
 12148: 33 08 9e 07 01           a1 = 0x1079e
 12153: 50 20 24 01 c7 f8        ra = 292, jump @600
      :                          @749 [@dyn 146]
 12159: 82 10 80 00              ra = u64 [sp + 0x80]
 12163: 95 11 88 00              sp = sp + 0x88
 12167: 32 00                    ret
      :                          @750
 12169: 00                       trap
      :                          @751
 12170: 95 11 70 ff              sp = sp + 0xffffffffffffff70
 12174: 7b 10 88 00              u64 [sp + 0x88] = ra
 12178: 7b 15 80 00              u64 [sp + 0x80] = s0
 12182: 7b 16 78                 u64 [sp + 0x78] = s1
 12185: 64 75                    s0 = a0
 12187: 7c 77 08                 a0 = u8 [a0 + 0x8]
 12190: 64 8b                    a4 = a1
 12192: 33 08 01                 a1 = 0x1
 12195: 33 06 01                 s1 = 0x1
 12198: 51 07 1d                 jump @753 if a0 == 0
      :                          @752
 12201: 78 56 08                 u8 [s0 + 0x8] = s1
 12204: 46 15 09 01              u8 [s0 + 9] = 0x1
 12208: 64 57                    a0 = s0
 12210: 82 10 88 00              ra = u64 [sp + 0x88]
 12214: 82 15 80 00              s0 = u64 [sp + 0x80]
 12218: 82 16 78                 s1 = u64 [sp + 0x78]
 12221: 95 11 90 00              sp = sp + 0x90
 12225: 32 00                    ret
      :                          @753
 12227: 64 9a                    a3 = a2
 12229: 82 5c                    a5 = u64 [s0]
 12231: 80 c7 34                 a0 = u32 [a5 + 0x34]
 12234: 7c 58 09                 a1 = u8 [s0 + 0x9]
 12237: 84 79 04                 a2 = a0 & 0x4
 12240: 52 09 45                 jump @759 if a2 != 0
      :                          @754
 12243: 51 08 32                 jump @757 if a1 == 0
      :                          @755
 12246: 82 c8 28                 a1 = u64 [a5 + 0x28]
 12249: 82 c7 20                 a0 = u64 [a5 + 0x20]
 12252: 82 83 18                 t1 = u64 [a1 + 0x18]
 12255: 33 08 98 07 01           a1 = 0x10798
 12260: 33 09 02                 a2 = 0x2
 12263: 64 a6                    s1 = a3
 12265: 7b 1b 10                 u64 [sp + 0x10] = a4
 12268: 7b 1c 08                 u64 [sp + 0x8] = a5
 12271: b4 30 02 26 01           ra = 294, jump [t1]
      :                          @756 [@dyn 147]
 12276: 82 1c 08                 a5 = u64 [sp + 0x8]
 12279: 82 1b 10                 a4 = u64 [sp + 0x10]
 12282: 64 6a                    a3 = s1
 12284: 33 08 01                 a1 = 0x1
 12287: 33 06 01                 s1 = 0x1
 12290: 52 07 a7                 jump @752 if a0 != 0
      :                          @757
 12293: 64 b7                    a0 = a4
 12295: 64 c8                    a1 = a5
 12297: b4 a0 02 28 01           ra = 296, jump [a3]
      :                          @758 [@dyn 148]
 12302: 33 08 01                 a1 = 0x1
 12305: 64 76                    s1 = a0
 12307: 28 96                    jump @752
      :                          @759
 12309: 52 08 37                 jump @763 if a1 != 0
      :                          @760
 12312: 82 c8 28                 a1 = u64 [a5 + 0x28]
 12315: 82 c7 20                 a0 = u64 [a5 + 0x20]
 12318: 82 83 18                 t1 = u64 [a1 + 0x18]
 12321: 33 08 9c 07 01           a1 = 0x1079c
 12326: 33 09 01                 a2 = 0x1
 12329: 33 06 01                 s1 = 0x1
 12332: 7b 1a                    u64 [sp] = a3
 12334: 7b 1b 10                 u64 [sp + 0x10] = a4
 12337: 7b 1c 08                 u64 [sp + 0x8] = a5
 12340: b4 30 02 2a 01           ra = 298, jump [t1]
      :                          @761 [@dyn 149]
 12345: 82 1c 08                 a5 = u64 [sp + 0x8]
 12348: 82 1b 10                 a4 = u64 [sp + 0x10]
 12351: 82 1a                    a3 = u64 [sp]
 12353: 33 08 01                 a1 = 0x1
 12356: 52 07 65 ff              jump @752 if a0 != 0
      :                          @762
 12360: 81 c7 34                 a0 = i32 [a5 + 0x34]
 12363: 01                       fallthrough
      :                          @763
 12364: 33 06 01                 s1 = 0x1
 12367: 78 16 37                 u8 [sp + 0x37] = s1
 12370: 82 c8 20                 a1 = u64 [a5 + 0x20]
 12373: 82 c9 28                 a2 = u64 [a5 + 0x28]
 12376: 7b 18 18                 u64 [sp + 0x18] = a1
 12379: 7b 19 20                 u64 [sp + 0x20] = a2
 12382: 95 18 37                 a1 = sp + 0x37
 12385: 7b 18 28                 u64 [sp + 0x28] = a1
 12388: 81 c8 30                 a1 = i32 [a5 + 0x30]
 12391: 7c c9 38                 a2 = u8 [a5 + 0x38]
 12394: 82 c3                    t1 = u64 [a5]
 12396: 82 c4 08                 t2 = u64 [a5 + 0x8]
 12399: 82 c0 10                 ra = u64 [a5 + 0x10]
 12402: 82 c2 18                 t0 = u64 [a5 + 0x18]
 12405: 7a 17 6c                 u32 [sp + 0x6c] = a0
 12408: 7a 18 68                 u32 [sp + 0x68] = a1
 12411: 78 19 70                 u8 [sp + 0x70] = a2
 12414: 7b 13 38                 u64 [sp + 0x38] = t1
 12417: 7b 14 40                 u64 [sp + 0x40] = t2
 12420: 7b 10 48                 u64 [sp + 0x48] = ra
 12423: 7b 12 50                 u64 [sp + 0x50] = t0
 12426: 95 17 18                 a0 = sp + 0x18
 12429: 7b 17 58                 u64 [sp + 0x58] = a0
 12432: 33 07 58 07 01           a0 = 0x10758
 12437: 7b 17 60                 u64 [sp + 0x60] = a0
 12440: 95 18 38                 a1 = sp + 0x38
 12443: 64 b7                    a0 = a4
 12445: b4 a0 02 2c 01           ra = 300, jump [a3]
      :                          @764 [@dyn 150]
 12450: 52 07 21                 jump @767 if a0 != 0
      :                          @765
 12453: 82 18 60                 a1 = u64 [sp + 0x60]
 12456: 82 17 58                 a0 = u64 [sp + 0x58]
 12459: 82 8a 18                 a3 = u64 [a1 + 0x18]
 12462: 33 08 9a 07 01           a1 = 0x1079a
 12467: 33 09 02                 a2 = 0x2
 12470: b4 a0 02 2e 01           ra = 302, jump [a3]
      :                          @766 [@dyn 151]
 12475: 64 76                    s1 = a0
 12477: 33 08 01                 a1 = 0x1
 12480: 28 e9 fe                 jump @752
      :                          @767
 12483: 33 08 01                 a1 = 0x1
 12486: 28 e3 fe                 jump @752
      :                          @768
 12489: 51 08 9b 00              jump @789 if a1 == 0
      :                          @769
 12493: 64 79                    a2 = a0
 12495: 7c 77                    a0 = u8 [a0]
 12497: 51 07 91 00              jump @788 if a0 == 0
      :                          @770
 12501: 51 27 ff 00 90 00        jump @790 if a0 == 255
      :                          @771
 12507: 6c 7a                    a3 = sext.b a0
 12509: 57 0a 09                 jump @773 if a3 <s 0
      :                          @772
 12512: 33 0a                    a3 = 0
 12514: 33 08                    a1 = 0
 12516: 28 73                    jump @787
      :                          @773
 12518: 55 27 c0 00 0d           jump @775 if a0 >=u 192
      :                          @774
 12523: 33 0a 01                 a3 = 0x1
 12526: 33 0b 80                 a4 = 0xffffffffffffff80
 12529: 28 4a                    jump @784
      :                          @775
 12531: 55 27 e0 00 0e           jump @777 if a0 >=u 224
      :                          @776
 12536: 33 0a 02                 a3 = 0x2
 12539: 33 0b 40 ff              a4 = 0xffffffffffffff40
 12543: 28 3c                    jump @784
      :                          @777
 12545: 55 27 f0 00 0e           jump @779 if a0 >=u 240
      :                          @778
 12550: 33 0a 03                 a3 = 0x3
 12553: 33 0b 20 ff              a4 = 0xffffffffffffff20
 12557: 28 2e                    jump @784
      :                          @779
 12559: 55 27 f8 00 0e           jump @781 if a0 >=u 248
      :                          @780
 12564: 33 0a 04                 a3 = 0x4
 12567: 33 0b 10 ff              a4 = 0xffffffffffffff10
 12571: 28 20                    jump @784
      :                          @781
 12573: 55 27 fc 00 0e           jump @783 if a0 >=u 252
      :                          @782
 12578: 33 0a 05                 a3 = 0x5
 12581: 33 0b 08 ff              a4 = 0xffffffffffffff08
 12585: 28 12                    jump @784
      :                          @783
 12587: 88 7a fe 00              a3 = a0 <u 0xfe
 12591: 33 0b 04 ff              a4 = 0xffffffffffffff04
 12595: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
 12599: 85 aa 07                 a3 = a3 ^ 0x7
 12602: 01                       fallthrough
      :                          @784
 12603: ae 8a 2b                 jump @791 if a3 >=u a1
      :                          @785
 12606: 33 08                    a1 = 0
 12608: c8 b7 07                 a0 = a0 + a4
 12611: 64 ab                    a4 = a3
 12613: 01                       fallthrough
      :                          @786
 12614: c8 b9 0c                 a5 = a2 + a4
 12617: 7c cc                    a5 = u8 [a5]
 12619: 97 88 08                 a1 = a1 << 0x8
 12622: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 12625: d4 c8 08                 a1 = a1 | a5
 12628: 52 0b f2                 jump @786 if a4 != 0
      :                          @787
 12631: 8a a9 03                 i32 a2 = a3 << 0x3
 12634: cf 97 07                 a0 = a0 << a2
 12637: c8 87 07                 a0 = a0 + a1
 12640: 32 00                    ret
      :                          @788
 12642: 32 00                    ret
      :                          @789
 12644: 00                       trap
      :                          @790
 12645: 00                       trap
      :                          @791
 12646: 00                       trap
