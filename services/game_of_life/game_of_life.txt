// RO data = 3670/3672 bytes
// RW data = 16/1052720 bytes
// Stack size = 1048576 bytes
// RO data = [0, 16, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 114, 101, 102, 105, 110, 101, 32, 99, 97, 108, 108, 101, 100, 32, 119, 105, 116, 104, 32, 119, 105, 95, 115, 101, 114, 118, 105, 99, 101, 95, 105, 110, 100, 101, 120, 61, 32, 119, 105, 95, 112, 97, 121, 108, 111, 97, 100, 95, 115, 116, 97, 114, 116, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 119, 105, 95, 112, 97, 121, 108, 111, 97, 100, 95, 108, 101, 110, 103, 116, 104, 61, 0, 0, 0, 0, 0, 0, 0, 8, 0, 1, 0, 0, 0, 0, 0, 44, 0, 0, 0, 0, 0, 0, 0, 52, 0, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 78, 0, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 70, 105, 114, 115, 116, 32, 114, 111, 117, 110, 100, 32, 115, 101, 116, 117, 112, 58, 32, 119, 105, 95, 112, 97, 121, 108, 111, 97, 100, 95, 108, 101, 110, 103, 116, 104, 61, 0, 0, 0, 152, 0, 1, 0, 0, 0, 0, 0, 45, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 115, 116, 101, 112, 95, 110, 61, 32, 99, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 32, 111, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 32, 119, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 80, 97, 114, 101, 110, 116, 58, 32, 112, 97, 103, 101, 115, 32, 109, 61, 32, 110, 117, 109, 95, 111, 102, 95, 103, 108, 111, 100, 101, 114, 115, 61, 44, 32, 109, 97, 99, 104, 105, 110, 101, 95, 105, 110, 100, 101, 120, 61, 32, 116, 111, 116, 97, 108, 95, 101, 120, 101, 99, 117, 116, 105, 111, 110, 95, 115, 116, 101, 112, 115, 61, 0, 0, 216, 0, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 39, 1, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 71, 1, 1, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 122, 61, 32, 115, 61, 32, 111, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 119, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 144, 1, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 154, 1, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 157, 1, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 247, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 174, 1, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 7, 1, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 191, 1, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 231, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 109, 97, 99, 104, 105, 110, 101, 32, 110, 101, 119, 32, 105, 110, 100, 101, 120, 61, 0, 0, 0, 0, 0, 0, 80, 2, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 83, 116, 97, 114, 116, 70, 101, 116, 99, 104, 80, 97, 114, 101, 110, 116, 58, 32, 102, 101, 116, 99, 104, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 32, 102, 101, 116, 99, 104, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 146, 2, 1, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 174, 2, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 102, 105, 114, 115, 116, 32, 115, 101, 103, 109, 101, 110, 116, 32, 109, 61, 32, 112, 97, 103, 101, 95, 105, 100, 61, 0, 0, 0, 0, 0, 0, 0, 224, 2, 1, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 248, 2, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 44, 32, 112, 97, 103, 101, 95, 105, 100, 61, 32, 112, 97, 103, 101, 115, 95, 114, 101, 115, 117, 108, 116, 61, 23, 1, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 40, 3, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 50, 3, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 112, 111, 107, 101, 32, 109, 61, 32, 111, 61, 32, 122, 61, 32, 112, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 0, 112, 3, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 154, 1, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 127, 3, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 130, 3, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 133, 3, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 102, 101, 116, 99, 104, 32, 114, 101, 116, 117, 114, 110, 101, 100, 32, 78, 79, 78, 69, 44, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 0, 0, 0, 0, 0, 232, 3, 1, 0, 0, 0, 0, 0, 43, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 105, 110, 118, 111, 107, 101, 32, 32, 105, 110, 118, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 32, 111, 109, 101, 103, 97, 95, 56, 61, 0, 40, 4, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 55, 4, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 70, 4, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 101, 120, 105, 116, 105, 110, 103, 32, 105, 110, 118, 111, 107, 101, 32, 108, 111, 111, 112, 32, 105, 110, 118, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 0, 128, 4, 1, 0, 0, 0, 0, 0, 42, 0, 0, 0, 0, 0, 0, 0, 70, 4, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 103, 97, 115, 32, 117, 115, 101, 100, 61, 32, 99, 104, 105, 108, 100, 95, 118, 109, 95, 114, 101, 103, 105, 115, 116, 101, 114, 115, 61, 0, 0, 0, 208, 4, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 225, 4, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 99, 104, 105, 108, 100, 95, 118, 109, 95, 114, 101, 103, 105, 115, 116, 101, 114, 115, 32, 97, 102, 116, 101, 114, 32, 105, 110, 118, 111, 107, 101, 61, 24, 5, 1, 0, 0, 0, 0, 0, 40, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 100, 111, 110, 101, 32, 119, 105, 116, 104, 32, 99, 104, 105, 108, 100, 32, 86, 77, 44, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 0, 0, 0, 0, 0, 0, 80, 5, 1, 0, 0, 0, 0, 0, 42, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 112, 97, 114, 115, 101, 95, 115, 116, 97, 110, 100, 97, 114, 100, 95, 112, 114, 111, 103, 114, 97, 109, 95, 105, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 95, 97, 114, 103, 115, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 114, 97, 119, 95, 98, 108, 111, 98, 95, 97, 100, 100, 114, 101, 115, 115, 58, 32, 32, 114, 97, 119, 95, 98, 108, 111, 98, 95, 108, 101, 110, 103, 116, 104, 58, 32, 0, 0, 0, 0, 0, 0, 144, 5, 1, 0, 0, 0, 0, 0, 80, 0, 0, 0, 0, 0, 0, 0, 224, 5, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 104, 105, 115, 116, 111, 114, 105, 99, 97, 108, 95, 108, 111, 111, 107, 117, 112, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 115, 101, 114, 118, 105, 99, 101, 32, 105, 110, 100, 101, 120, 58, 32, 32, 97, 110, 100, 32, 99, 111, 100, 101, 32, 104, 97, 115, 104, 32, 97, 100, 100, 114, 101, 115, 115, 58, 32, 0, 0, 0, 0, 24, 6, 1, 0, 0, 0, 0, 0, 52, 0, 0, 0, 0, 0, 0, 0, 76, 6, 1, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 73, 110, 118, 97, 108, 105, 100, 32, 112, 97, 121, 108, 111, 97, 100, 32, 108, 101, 110, 103, 116, 104, 58, 32, 101, 120, 112, 101, 99, 116, 101, 100, 32, 52, 52, 44, 32, 103, 111, 116, 32, 0, 0, 0, 0, 0, 0, 0, 136, 6, 1, 0, 0, 0, 0, 0, 49, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 115, 111, 108, 105, 99, 105, 116, 32, 99, 111, 100, 101, 95, 104, 97, 115, 104, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 111, 100, 101, 95, 108, 101, 110, 103, 116, 104, 61, 0, 208, 6, 1, 0, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 242, 6, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 222, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 224, 0, 0, 0, 0, 0, 0, 0, 230, 0, 0, 0, 0, 0, 0, 0, 238, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 18, 1, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 20, 1, 0, 0, 0, 0, 0, 0, 26, 1, 0, 0, 0, 0, 0, 0, 30, 1, 0, 0, 0, 0, 0, 0, 44, 32, 115, 61, 112, 101, 101, 107, 32, 32, 32, 32, 112, 111, 107, 101, 44, 32, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 61, 44, 32, 111, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 48, 120, 44, 32, 111, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 44, 32, 119, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 48, 120, 44, 32, 119, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 0, 0, 0, 0, 0, 104, 8, 1, 0, 0, 0, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 136, 7, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 145, 8, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 165, 8, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 182, 8, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 202, 8, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 55, 1, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 105, 110, 103, 32, 111, 95, 98, 121, 116, 101, 115, 58, 32, 111, 95, 115, 116, 97, 114, 116, 95, 112, 97, 103, 101, 61, 44, 32, 111, 95, 98, 121, 116, 101, 115, 95, 112, 97, 103, 101, 95, 108, 101, 110, 61, 80, 9, 1, 0, 0, 0, 0, 0, 69, 0, 0, 0, 0, 0, 0, 0, 149, 9, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 97, 103, 101, 115, 32, 114, 101, 115, 117, 108, 116, 32, 102, 111, 114, 32, 111, 95, 98, 121, 116, 101, 115, 58, 32, 0, 0, 0, 0, 0, 0, 0, 200, 9, 1, 0, 0, 0, 0, 0, 65, 0, 0, 0, 0, 0, 0, 0, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 105, 110, 103, 32, 119, 95, 98, 121, 116, 101, 115, 58, 32, 119, 95, 115, 116, 97, 114, 116, 95, 112, 97, 103, 101, 61, 44, 32, 119, 95, 98, 121, 116, 101, 115, 95, 112, 97, 103, 101, 95, 108, 101, 110, 61, 32, 10, 1, 0, 0, 0, 0, 0, 69, 0, 0, 0, 0, 0, 0, 0, 101, 10, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 97, 103, 101, 115, 32, 114, 101, 115, 117, 108, 116, 32, 102, 111, 114, 32, 119, 95, 98, 121, 116, 101, 115, 58, 32, 0, 0, 0, 0, 0, 0, 0, 152, 10, 1, 0, 0, 0, 0, 0, 65, 0, 0, 0, 0, 0, 0, 0, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 105, 110, 103, 32, 115, 116, 97, 99, 107, 58, 32, 115, 95, 115, 116, 97, 114, 116, 95, 112, 97, 103, 101, 61, 44, 32, 115, 116, 97, 99, 107, 95, 112, 97, 103, 101, 95, 108, 101, 110, 61, 0, 0, 0, 0, 240, 10, 1, 0, 0, 0, 0, 0, 67, 0, 0, 0, 0, 0, 0, 0, 51, 11, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 97, 103, 101, 115, 32, 114, 101, 115, 117, 108, 116, 32, 102, 111, 114, 32, 115, 116, 97, 99, 107, 58, 32, 0, 104, 11, 1, 0, 0, 0, 0, 0, 63, 0, 0, 0, 0, 0, 0, 0, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 105, 110, 103, 32, 111, 95, 98, 121, 116, 101, 115, 58, 32, 111, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 48, 120, 44, 32, 111, 95, 115, 116, 97, 114, 116, 95, 97, 100, 100, 114, 101, 101, 115, 115, 61, 48, 120, 0, 0, 184, 11, 1, 0, 0, 0, 0, 0, 73, 0, 0, 0, 0, 0, 0, 0, 1, 12, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 165, 8, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 105, 110, 103, 32, 119, 95, 98, 121, 116, 101, 115, 58, 32, 119, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 48, 120, 44, 32, 119, 95, 115, 116, 97, 114, 116, 95, 97, 100, 100, 114, 101, 115, 115, 61, 48, 120, 0, 0, 0, 72, 12, 1, 0, 0, 0, 0, 0, 73, 0, 0, 0, 0, 0, 0, 0, 145, 12, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 202, 8, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 115, 117, 99, 99, 101, 115, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 119, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 111, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 115, 116, 97, 99, 107, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 119, 95, 98, 121, 116, 101, 115, 44, 32, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 190, 13, 1, 0, 0, 0, 0, 0, 71, 0, 0, 0, 0, 0, 0, 0, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 111, 95, 98, 121, 116, 101, 115]
// RW data = [75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 3947
// Code size = 12589 bytes

      :                          @0
     0: 28 5e 03 00 00           jump @56
      :                          @1
     5: 28 4e 1e 00 00           jump @387
      :                          @2
    10: 28 fd 20                 jump @451
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 80 89 34                 a2 = u32 [a1 + 0x34]
    24: 82 77                    a0 = u64 [a0]
    26: 84 9a 10                 a3 = a2 & 0x10
    29: 52 0a 16                 jump @6 if a3 != 0
      :                          @4
    32: 84 99 20                 a2 = a2 & 0x20
    35: 52 09 40                 jump @9 if a2 != 0
      :                          @5
    38: 82 77                    a0 = u64 [a0]
    40: 82 10 80 00              ra = u64 [sp + 0x80]
    44: 95 11 88 00              sp = sp + 0x88
    48: 28 ae 26                 jump @592
      :                          @6
    51: 82 7b                    a4 = u64 [a0]
    53: 33 09 81 00              a2 = 0x81
    57: 95 17 7f                 a0 = sp + 0x7f
    60: 33 02 57                 t0 = 0x57
    63: 01                       fallthrough
      :                          @7
    64: 64 9c                    a5 = a2
    66: 98 ba 04                 a3 = a4 >> 0x4
    69: 84 bb 0f                 a4 = a4 & 0xf
    72: 88 b3 0a                 t1 = a4 <u 0xa
    75: 33 09 30                 a2 = 0x30
    78: da 32 09                 a2 = t0 if t1 == 0
    81: be b9 09                 i32 a2 = a2 + a4
    84: 78 79                    u8 [a0] = a2
    86: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
    89: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
    92: 64 ab                    a4 = a3
    94: 52 0a e2                 jump @7 if a3 != 0
      :                          @8
    97: 28 30                    jump @11
      :                          @9
    99: 82 7b                    a4 = u64 [a0]
   101: 33 09 81 00              a2 = 0x81
   105: 95 17 7f                 a0 = sp + 0x7f
   108: 33 02 37                 t0 = 0x37
   111: 01                       fallthrough
      :                          @10
   112: 64 9c                    a5 = a2
   114: 98 ba 04                 a3 = a4 >> 0x4
   117: 84 bb 0f                 a4 = a4 & 0xf
   120: 88 b3 0a                 t1 = a4 <u 0xa
   123: 33 09 30                 a2 = 0x30
   126: da 32 09                 a2 = t0 if t1 == 0
   129: be b9 09                 i32 a2 = a2 + a4
   132: 78 79                    u8 [a0] = a2
   134: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   137: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   140: 64 ab                    a4 = a3
   142: 52 0a e2                 jump @10 if a3 != 0
      :                          @11
   145: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   148: 56 27 80 00 27           jump @14 if a0 >u 128
      :                          @12
   153: 9a 9b 81 00              a4 = 0x81 - a2
   157: 64 1a                    a3 = sp
   159: c8 7a 0a                 a3 = a3 + a0
   162: 33 09 02                 a2 = 0x2
   165: 64 87                    a0 = a1
   167: 33 08 9e 07 01           a1 = 0x1079e
   172: 50 10 04 5a 27           ra = 4, jump @602
      :                          @13 [@dyn 2]
   177: 82 10 80 00              ra = u64 [sp + 0x80]
   181: 95 11 88 00              sp = sp + 0x88
   185: 32 00                    ret
      :                          @14
   187: 00                       trap
      :                          @15 [@dyn 3]
   188: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   192: 7b 10 80 00              u64 [sp + 0x80] = ra
   196: 80 89 34                 a2 = u32 [a1 + 0x34]
   199: 84 9a 10                 a3 = a2 & 0x10
   202: 52 0a 16                 jump @18 if a3 != 0
      :                          @16
   205: 84 99 20                 a2 = a2 & 0x20
   208: 52 09 40                 jump @21 if a2 != 0
      :                          @17
   211: 80 77                    a0 = u32 [a0]
   213: 82 10 80 00              ra = u64 [sp + 0x80]
   217: 95 11 88 00              sp = sp + 0x88
   221: 28 01 26                 jump @592
      :                          @18
   224: 81 7b                    a4 = i32 [a0]
   226: 33 09 81 00              a2 = 0x81
   230: 95 17 7f                 a0 = sp + 0x7f
   233: 33 02 57                 t0 = 0x57
   236: 01                       fallthrough
      :                          @19
   237: 64 9c                    a5 = a2
   239: 8b ba 04                 i32 a3 = a4 >> 0x4
   242: 84 bb 0f                 a4 = a4 & 0xf
   245: 88 b3 0a                 t1 = a4 <u 0xa
   248: 33 09 30                 a2 = 0x30
   251: da 32 09                 a2 = t0 if t1 == 0
   254: be b9 09                 i32 a2 = a2 + a4
   257: 78 79                    u8 [a0] = a2
   259: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   262: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   265: 64 ab                    a4 = a3
   267: 52 0a e2                 jump @19 if a3 != 0
      :                          @20
   270: 28 30                    jump @23
      :                          @21
   272: 81 7b                    a4 = i32 [a0]
   274: 33 09 81 00              a2 = 0x81
   278: 95 17 7f                 a0 = sp + 0x7f
   281: 33 02 37                 t0 = 0x37
   284: 01                       fallthrough
      :                          @22
   285: 64 9c                    a5 = a2
   287: 8b ba 04                 i32 a3 = a4 >> 0x4
   290: 84 bb 0f                 a4 = a4 & 0xf
   293: 88 b3 0a                 t1 = a4 <u 0xa
   296: 33 09 30                 a2 = 0x30
   299: da 32 09                 a2 = t0 if t1 == 0
   302: be b9 09                 i32 a2 = a2 + a4
   305: 78 79                    u8 [a0] = a2
   307: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   310: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   313: 64 ab                    a4 = a3
   315: 52 0a e2                 jump @22 if a3 != 0
      :                          @23
   318: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   321: 56 27 80 00 27           jump @26 if a0 >u 128
      :                          @24
   326: 9a 9b 81 00              a4 = 0x81 - a2
   330: 64 1a                    a3 = sp
   332: c8 7a 0a                 a3 = a3 + a0
   335: 33 09 02                 a2 = 0x2
   338: 64 87                    a0 = a1
   340: 33 08 9e 07 01           a1 = 0x1079e
   345: 50 10 08 ad 26           ra = 8, jump @602
      :                          @25 [@dyn 4]
   350: 82 10 80 00              ra = u64 [sp + 0x80]
   354: 95 11 88 00              sp = sp + 0x88
   358: 32 00                    ret
      :                          @26
   360: 00                       trap
      :                          @27 [@dyn 5]
   361: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   365: 7b 10 80 00              u64 [sp + 0x80] = ra
   369: 80 89 34                 a2 = u32 [a1 + 0x34]
   372: 84 9a 10                 a3 = a2 & 0x10
   375: 52 0a 16                 jump @30 if a3 != 0
      :                          @28
   378: 84 99 20                 a2 = a2 & 0x20
   381: 52 09 40                 jump @33 if a2 != 0
      :                          @29
   384: 82 77                    a0 = u64 [a0]
   386: 82 10 80 00              ra = u64 [sp + 0x80]
   390: 95 11 88 00              sp = sp + 0x88
   394: 28 54 25                 jump @592
      :                          @30
   397: 82 7b                    a4 = u64 [a0]
   399: 33 09 81 00              a2 = 0x81
   403: 95 17 7f                 a0 = sp + 0x7f
   406: 33 02 57                 t0 = 0x57
   409: 01                       fallthrough
      :                          @31
   410: 64 9c                    a5 = a2
   412: 98 ba 04                 a3 = a4 >> 0x4
   415: 84 bb 0f                 a4 = a4 & 0xf
   418: 88 b3 0a                 t1 = a4 <u 0xa
   421: 33 09 30                 a2 = 0x30
   424: da 32 09                 a2 = t0 if t1 == 0
   427: be b9 09                 i32 a2 = a2 + a4
   430: 78 79                    u8 [a0] = a2
   432: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   435: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   438: 64 ab                    a4 = a3
   440: 52 0a e2                 jump @31 if a3 != 0
      :                          @32
   443: 28 30                    jump @35
      :                          @33
   445: 82 7b                    a4 = u64 [a0]
   447: 33 09 81 00              a2 = 0x81
   451: 95 17 7f                 a0 = sp + 0x7f
   454: 33 02 37                 t0 = 0x37
   457: 01                       fallthrough
      :                          @34
   458: 64 9c                    a5 = a2
   460: 98 ba 04                 a3 = a4 >> 0x4
   463: 84 bb 0f                 a4 = a4 & 0xf
   466: 88 b3 0a                 t1 = a4 <u 0xa
   469: 33 09 30                 a2 = 0x30
   472: da 32 09                 a2 = t0 if t1 == 0
   475: be b9 09                 i32 a2 = a2 + a4
   478: 78 79                    u8 [a0] = a2
   480: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   483: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   486: 64 ab                    a4 = a3
   488: 52 0a e2                 jump @34 if a3 != 0
      :                          @35
   491: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   494: 56 27 80 00 27           jump @38 if a0 >u 128
      :                          @36
   499: 9a 9b 81 00              a4 = 0x81 - a2
   503: 64 1a                    a3 = sp
   505: c8 7a 0a                 a3 = a3 + a0
   508: 33 09 02                 a2 = 0x2
   511: 64 87                    a0 = a1
   513: 33 08 9e 07 01           a1 = 0x1079e
   518: 50 10 0c 00 26           ra = 12, jump @602
      :                          @37 [@dyn 6]
   523: 82 10 80 00              ra = u64 [sp + 0x80]
   527: 95 11 88 00              sp = sp + 0x88
   531: 32 00                    ret
      :                          @38
   533: 00                       trap
      :                          @39 [@dyn 7]
   534: 95 11 d0                 sp = sp + 0xffffffffffffffd0
   537: 7b 10 28                 u64 [sp + 0x28] = ra
   540: 7b 15 20                 u64 [sp + 0x20] = s0
   543: 7b 16 18                 u64 [sp + 0x18] = s1
   546: 64 85                    s0 = a1
   548: 82 88 28                 a1 = u64 [a1 + 0x28]
   551: 82 5a 20                 a3 = u64 [s0 + 0x20]
   554: 82 8b 18                 a4 = u64 [a1 + 0x18]
   557: 64 76                    s1 = a0
   559: 33 08 50 07 01           a1 = 0x10750
   564: 33 09 01                 a2 = 0x1
   567: 64 a7                    a0 = a3
   569: b4 b0 01 10              ra = 16, jump [a4]
      :                          @40 [@dyn 8]
   573: 7b 15                    u64 [sp] = s0
   575: 78 17 08                 u8 [sp + 0x8] = a0
   578: 46 11 09                 u8 [sp + 9] = 0
   581: 7b 16 10                 u64 [sp + 0x10] = s1
   584: 33 05 02                 s0 = 0x2
   587: 64 17                    a0 = sp
   589: 95 18 10                 a1 = sp + 0x10
   592: 33 09 02                 a2 = 0x2
   595: 50 10 12 fd 2c           ra = 18, jump @753
      :                          @41 [@dyn 9]
   600: 95 67 08                 a0 = s1 + 0x8
   603: 7b 17 10                 u64 [sp + 0x10] = a0
   606: 64 17                    a0 = sp
   608: 95 18 10                 a1 = sp + 0x10
   611: 64 59                    a2 = s0
   613: 50 10 14 eb 2c           ra = 20, jump @753
      :                          @42 [@dyn 10]
   618: 95 67 10                 a0 = s1 + 0x10
   621: 7b 17 10                 u64 [sp + 0x10] = a0
   624: 64 17                    a0 = sp
   626: 95 18 10                 a1 = sp + 0x10
   629: 64 59                    a2 = s0
   631: 50 10 16 d9 2c           ra = 22, jump @753
      :                          @43 [@dyn 11]
   636: 95 67 18                 a0 = s1 + 0x18
   639: 7b 17 10                 u64 [sp + 0x10] = a0
   642: 64 17                    a0 = sp
   644: 95 18 10                 a1 = sp + 0x10
   647: 64 59                    a2 = s0
   649: 50 10 18 c7 2c           ra = 24, jump @753
      :                          @44 [@dyn 12]
   654: 95 67 20                 a0 = s1 + 0x20
   657: 7b 17 10                 u64 [sp + 0x10] = a0
   660: 64 17                    a0 = sp
   662: 95 18 10                 a1 = sp + 0x10
   665: 64 59                    a2 = s0
   667: 50 10 1a b5 2c           ra = 26, jump @753
      :                          @45 [@dyn 13]
   672: 95 67 28                 a0 = s1 + 0x28
   675: 7b 17 10                 u64 [sp + 0x10] = a0
   678: 64 17                    a0 = sp
   680: 95 18 10                 a1 = sp + 0x10
   683: 64 59                    a2 = s0
   685: 50 10 1c a3 2c           ra = 28, jump @753
      :                          @46 [@dyn 14]
   690: 95 67 30                 a0 = s1 + 0x30
   693: 7b 17 10                 u64 [sp + 0x10] = a0
   696: 64 17                    a0 = sp
   698: 95 18 10                 a1 = sp + 0x10
   701: 64 59                    a2 = s0
   703: 50 10 1e 91 2c           ra = 30, jump @753
      :                          @47 [@dyn 15]
   708: 95 67 38                 a0 = s1 + 0x38
   711: 7b 17 10                 u64 [sp + 0x10] = a0
   714: 64 17                    a0 = sp
   716: 95 18 10                 a1 = sp + 0x10
   719: 64 59                    a2 = s0
   721: 50 10 20 7f 2c           ra = 32, jump @753
      :                          @48 [@dyn 16]
   726: 95 67 40                 a0 = s1 + 0x40
   729: 7b 17 10                 u64 [sp + 0x10] = a0
   732: 64 17                    a0 = sp
   734: 95 18 10                 a1 = sp + 0x10
   737: 64 59                    a2 = s0
   739: 50 10 22 6d 2c           ra = 34, jump @753
      :                          @49 [@dyn 17]
   744: 95 67 48                 a0 = s1 + 0x48
   747: 7b 17 10                 u64 [sp + 0x10] = a0
   750: 64 17                    a0 = sp
   752: 95 18 10                 a1 = sp + 0x10
   755: 64 59                    a2 = s0
   757: 50 10 24 5b 2c           ra = 36, jump @753
      :                          @50 [@dyn 18]
   762: 95 67 50                 a0 = s1 + 0x50
   765: 7b 17 10                 u64 [sp + 0x10] = a0
   768: 64 17                    a0 = sp
   770: 95 18 10                 a1 = sp + 0x10
   773: 64 59                    a2 = s0
   775: 50 10 26 49 2c           ra = 38, jump @753
      :                          @51 [@dyn 19]
   780: 95 67 58                 a0 = s1 + 0x58
   783: 7b 17 10                 u64 [sp + 0x10] = a0
   786: 64 17                    a0 = sp
   788: 95 18 10                 a1 = sp + 0x10
   791: 64 59                    a2 = s0
   793: 50 10 28 37 2c           ra = 40, jump @753
      :                          @52 [@dyn 20]
   798: 95 67 60                 a0 = s1 + 0x60
   801: 7b 17 10                 u64 [sp + 0x10] = a0
   804: 64 17                    a0 = sp
   806: 95 18 10                 a1 = sp + 0x10
   809: 64 59                    a2 = s0
   811: 50 10 2a 25 2c           ra = 42, jump @753
      :                          @53 [@dyn 21]
   816: 33 07 01                 a0 = 0x1
   819: 7c 18 08                 a1 = u8 [sp + 0x8]
   822: 52 08 1a                 jump @55 if a1 != 0
      :                          @54
   825: 82 17                    a0 = u64 [sp]
   827: 82 78 28                 a1 = u64 [a0 + 0x28]
   830: 82 77 20                 a0 = u64 [a0 + 0x20]
   833: 82 8a 18                 a3 = u64 [a1 + 0x18]
   836: 33 08 9d 07 01           a1 = 0x1079d
   841: 33 09 01                 a2 = 0x1
   844: b4 a0 01 2c              ra = 44, jump [a3]
      :                          @55 [@dyn 22]
   848: 82 10 28                 ra = u64 [sp + 0x28]
   851: 82 15 20                 s0 = u64 [sp + 0x20]
   854: 82 16 18                 s1 = u64 [sp + 0x18]
   857: 95 11 30                 sp = sp + 0x30
   860: 32 00                    ret
      :                          @56 [export #0: 'refine']
   862: 95 11 08 f8              sp = sp + 0xfffffffffffff808
   866: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
   870: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
   874: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
   878: 95 11 40 b4 fe           sp = sp + 0xfffffffffffeb440
   883: 64 86                    s1 = a1
   885: 64 7a                    a3 = a0
   887: 33 07 00 00 01           a0 = 0x10000
   892: 53 16 04 43              jump @65 if s1 <u 4
      :                          @57
   896: 7d a8                    a1 = i8 [a3]
   898: 33 05 01                 s0 = 0x1
   901: 59 08 37                 jump @64 if a1 >=s 0
      :                          @58
   904: 84 89 ff 00              a2 = a1 & 0xff
   908: 33 05 02                 s0 = 0x2
   911: 53 29 c0 00 2d           jump @64 if a2 <u 192
      :                          @59
   916: 33 05 03                 s0 = 0x3
   919: 53 29 e0 00 25           jump @64 if a2 <u 224
      :                          @60
   924: 33 05 04                 s0 = 0x4
   927: 53 29 f0 00 1d           jump @64 if a2 <u 240
      :                          @61
   932: 33 05 05                 s0 = 0x5
   935: 53 29 f8 00 15           jump @64 if a2 <u 248
      :                          @62
   940: 33 05 06                 s0 = 0x6
   943: 53 29 fc 00 0d           jump @64 if a2 <u 252
      :                          @63
   948: 88 98 fe 00              a1 = a2 <u 0xfe
   952: 9a 85 08                 s0 = 0x8 - a1
   955: 01                       fallthrough
      :                          @64
   956: ae 56 08                 jump @66 if s1 >=u s0
      :                          @65
   959: 33 05                    s0 = 0
   961: 28 eb 00                 jump @92
      :                          @66
   964: 64 a7                    a0 = a3
   966: 64 58                    a1 = s0
   968: 7b 1a 60                 u64 [sp + 0x60] = a3
   971: 50 10 2e c4 2c           ra = 46, jump @770
      :                          @67 [@dyn 23]
   976: aa 56 d4 00              jump @91 if s1 == s0
      :                          @68
   980: 82 17 60                 a0 = u64 [sp + 0x60]
   983: c8 57 07                 a0 = a0 + s0
   986: 7d 78                    a1 = i8 [a0]
   988: c9 56 0a                 a3 = s1 - s0
   991: 33 06 01                 s1 = 0x1
   994: 59 08 37                 jump @75 if a1 >=s 0
      :                          @69
   997: 84 89 ff 00              a2 = a1 & 0xff
  1001: 33 06 02                 s1 = 0x2
  1004: 53 29 c0 00 2d           jump @75 if a2 <u 192
      :                          @70
  1009: 33 06 03                 s1 = 0x3
  1012: 53 29 e0 00 25           jump @75 if a2 <u 224
      :                          @71
  1017: 33 06 04                 s1 = 0x4
  1020: 53 29 f0 00 1d           jump @75 if a2 <u 240
      :                          @72
  1025: 33 06 05                 s1 = 0x5
  1028: 53 29 f8 00 15           jump @75 if a2 <u 248
      :                          @73
  1033: 33 06 06                 s1 = 0x6
  1036: 53 29 fc 00 0d           jump @75 if a2 <u 252
      :                          @74
  1041: 88 98 fe 00              a1 = a2 <u 0xfe
  1045: 9a 86 08                 s1 = 0x8 - a1
  1048: 01                       fallthrough
      :                          @75
  1049: ac 6a 8b 00              jump @91 if a3 <u s1
      :                          @76
  1053: 64 68                    a1 = s1
  1055: 7b 1a 60                 u64 [sp + 0x60] = a3
  1058: 64 75                    s0 = a0
  1060: 50 10 30 6b 2c           ra = 48, jump @770
      :                          @77 [@dyn 24]
  1065: 64 7a                    a3 = a0
  1067: c8 56 07                 a0 = s1 + s0
  1070: 82 15 60                 s0 = u64 [sp + 0x60]
  1073: 7b 17 58                 u64 [sp + 0x58] = a0
  1076: ab 65 0b                 jump @79 if s0 != s1
      :                          @78
  1079: 33 08                    a1 = 0
  1081: 33 06                    s1 = 0
  1083: 33 07                    a0 = 0
  1085: 28 5d                    jump @90
      :                          @79
  1087: 7d 78                    a1 = i8 [a0]
  1089: c9 65 05                 s0 = s0 - s1
  1092: 33 06 01                 s1 = 0x1
  1095: 59 08 37                 jump @86 if a1 >=s 0
      :                          @80
  1098: 84 89 ff 00              a2 = a1 & 0xff
  1102: 33 06 02                 s1 = 0x2
  1105: 53 29 c0 00 2d           jump @86 if a2 <u 192
      :                          @81
  1110: 33 06 03                 s1 = 0x3
  1113: 53 29 e0 00 25           jump @86 if a2 <u 224
      :                          @82
  1118: 33 06 04                 s1 = 0x4
  1121: 53 29 f0 00 1d           jump @86 if a2 <u 240
      :                          @83
  1126: 33 06 05                 s1 = 0x5
  1129: 53 29 f8 00 15           jump @86 if a2 <u 248
      :                          @84
  1134: 33 06 06                 s1 = 0x6
  1137: 53 29 fc 00 0d           jump @86 if a2 <u 252
      :                          @85
  1142: 88 98 fe 00              a1 = a2 <u 0xfe
  1146: 9a 86 08                 s1 = 0x8 - a1
  1149: 01                       fallthrough
      :                          @86
  1150: 7b 1a 60                 u64 [sp + 0x60] = a3
  1153: ae 65 06                 jump @88 if s0 >=u s1
      :                          @87
  1156: 28 ce 19                 jump @386
      :                          @88
  1159: 64 68                    a1 = s1
  1161: 50 10 32 06 2c           ra = 50, jump @770
      :                          @89 [@dyn 25]
  1166: e4 65 08                 a1 = maxu(s0, s1)
  1169: c9 68 08                 a1 = a1 - s1
  1172: 82 1a 60                 a3 = u64 [sp + 0x60]
  1175: ac 78 0d                 jump @91 if a1 <u a0
      :                          @90
  1178: e4 78 08                 a1 = maxu(a1, a0)
  1181: c9 78 08                 a1 = a1 - a0
  1184: 55 18 20 28              jump @93 if a1 >=u 32
      :                          @91
  1188: 33 05                    s0 = 0
  1190: 33 07 00 00 01           a0 = 0x10000
  1195: 01                       fallthrough
      :                          @92
  1196: 64 58                    a1 = s0
  1198: 33 09 c0 4b 01           a2 = 0x14bc0
  1203: c8 91 01                 sp = sp + a2
  1206: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  1210: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  1214: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  1218: 95 11 f8 07              sp = sp + 0x7f8
  1222: 32 00                    ret
      :                          @93
  1224: 95 19 98 40 01           a2 = sp + 0x14098
  1229: 49 11 60 ff ff ef        u64 [sp + 96] = 0xffffffffffefffff
  1235: 82 18 58                 a1 = u64 [sp + 0x58]
  1238: c8 86 06                 s1 = s1 + a1
  1241: 7a 1a 6c                 u32 [sp + 0x6c] = a3
  1244: 7b 16 70                 u64 [sp + 0x70] = s1
  1247: 7b 17 78                 u64 [sp + 0x78] = a0
  1250: 95 17 6c                 a0 = sp + 0x6c
  1253: 7b 17 98 00              u64 [sp + 0x98] = a0
  1257: 33 07 06                 a0 = 0x6
  1260: 7b 17 a0 00              u64 [sp + 0xa0] = a0
  1264: 95 17 70                 a0 = sp + 0x70
  1267: 7b 17 a8 00              u64 [sp + 0xa8] = a0
  1271: 33 07 0a                 a0 = 0xa
  1274: 7b 17 b0 00              u64 [sp + 0xb0] = a0
  1278: 95 18 78                 a1 = sp + 0x78
  1281: 7b 18 b8 00              u64 [sp + 0xb8] = a1
  1285: 7b 17 c0 00              u64 [sp + 0xc0] = a0
  1289: 33 07 68 00 01           a0 = 0x10068
  1294: 7b 97 58                 u64 [a2 + 0x58] = a0
  1297: 49 19 60 03              u64 [a2 + 96] = 0x3
  1301: 49 19 78                 u64 [a2 + 120] = 0
  1304: 95 18 98 00              a1 = sp + 0x98
  1308: 7b 98 68                 u64 [a2 + 0x68] = a1
  1311: 49 19 70 03              u64 [a2 + 112] = 0x3
  1315: 95 17 10 52 01           a0 = sp + 0x15210
  1320: 95 18 f0 40 01           a1 = sp + 0x140f0
  1325: 50 10 34 23 1e           ra = 52, jump @508
      :                          @94 [@dyn 26]
  1330: 95 17 f8 50 01           a0 = sp + 0x150f8
  1335: 82 75 20 01              s0 = u64 [a0 + 0x120]
  1339: 82 7b 28 01              a4 = u64 [a0 + 0x128]
  1343: 82 76 18 01              s1 = u64 [a0 + 0x118]
  1347: 33 07 02                 a0 = 0x2
  1350: 33 08                    a1 = 0
  1352: 33 09                    a2 = 0
  1354: 64 5a                    a3 = s0
  1356: 33 00 36                 ra = 0x36
  1359: 0a 64                    ecalli 100 // 'log'
  1361: 01                       fallthrough
      :                          @95 [@dyn 27]
  1362: 82 17 60                 a0 = u64 [sp + 0x60]
  1365: c8 67 07                 a0 = a0 + s1
  1368: 53 37 00 00 f0 27        jump @101 if a0 <u 4293918720
      :                          @96
  1374: 33 07 20 10 03           a0 = 0x31020
  1379: 95 77 00 00 10           a0 = a0 + 0x100000
  1384: 01                       fallthrough
      :                          @97
  1385: 82 78                    a1 = u64 [a0]
  1387: c9 87 09                 a2 = a0 - a1
  1390: ab 59 11                 jump @101 if a2 != s0
      :                          @98
  1393: c9 68 09                 a2 = a1 - s1
  1396: 01                       fallthrough
      :                          @99
  1397: 82 7a                    a3 = u64 [a0]
  1399: ab 8a f2                 jump @97 if a3 != a1
      :                          @100
  1402: 7b 79                    u64 [a0] = a2
  1404: 33 0b                    a4 = 0
  1406: 01                       fallthrough
      :                          @101
  1407: 82 17 78                 a0 = u64 [sp + 0x78]
  1410: 51 17 2c a6 00           jump @112 if a0 == 44
      :                          @102
  1415: 95 19 f8 50 01           a2 = sp + 0x150f8
  1420: 52 17 24 bd 02           jump @141 if a0 != 36
      :                          @103
  1425: 95 17 78                 a0 = sp + 0x78
  1428: 7b 97 18 01              u64 [a2 + 0x118] = a0
  1432: 33 07 0a                 a0 = 0xa
  1435: 7b 97 20 01              u64 [a2 + 0x120] = a0
  1439: 33 07 c8 00 01           a0 = 0x100c8
  1444: 7b 17 98 00              u64 [sp + 0x98] = a0
  1448: 49 21 a0 00 01           u64 [sp + 160] = 0x1
  1453: 49 21 b8 00              u64 [sp + 184] = 0
  1457: 95 18 10 52 01           a1 = sp + 0x15210
  1462: 7b 18 a8 00              u64 [sp + 0xa8] = a1
  1466: 49 21 b0 00 01           u64 [sp + 176] = 0x1
  1471: 95 17 f0 40 01           a0 = sp + 0x140f0
  1476: 95 18 98 00              a1 = sp + 0x98
  1480: 50 10 38 88 1d           ra = 56, jump @508
      :                          @104 [@dyn 28]
  1485: 95 17 98 40 01           a0 = sp + 0x14098
  1490: 82 75 60                 s0 = u64 [a0 + 0x60]
  1493: 82 7b 68                 a4 = u64 [a0 + 0x68]
  1496: 82 76 58                 s1 = u64 [a0 + 0x58]
  1499: 33 07 02                 a0 = 0x2
  1502: 33 08                    a1 = 0
  1504: 33 09                    a2 = 0
  1506: 64 5a                    a3 = s0
  1508: 33 00 3a                 ra = 0x3a
  1511: 0a 64                    ecalli 100 // 'log'
  1513: 01                       fallthrough
      :                          @105 [@dyn 29]
  1514: 82 17 60                 a0 = u64 [sp + 0x60]
  1517: c8 67 07                 a0 = a0 + s1
  1520: 53 37 00 00 f0 2f        jump @111 if a0 <u 4293918720
      :                          @106
  1526: 33 07 20 10 03           a0 = 0x31020
  1531: 95 77 00 00 10           a0 = a0 + 0x100000
  1536: 01                       fallthrough
      :                          @107
  1537: 82 78                    a1 = u64 [a0]
  1539: c9 87 09                 a2 = a0 - a1
  1542: ab 59 19                 jump @111 if a2 != s0
      :                          @108
  1545: c9 68 09                 a2 = a1 - s1
  1548: 01                       fallthrough
      :                          @109
  1549: 82 7a                    a3 = u64 [a0]
  1551: ab 8a f2                 jump @107 if a3 != a1
      :                          @110
  1554: 7b 79                    u64 [a0] = a2
  1556: 33 0b                    a4 = 0
  1558: 82 17 70                 a0 = u64 [sp + 0x70]
  1561: 82 15 78                 s0 = u64 [sp + 0x78]
  1564: 28 90 fe                 jump @92
      :                          @111
  1567: 82 17 70                 a0 = u64 [sp + 0x70]
  1570: 82 15 78                 s0 = u64 [sp + 0x78]
  1573: 28 87 fe                 jump @92
      :                          @112
  1576: 82 18 70                 a1 = u64 [sp + 0x70]
  1579: 7b 18 80 00              u64 [sp + 0x80] = a1
  1583: 81 87 20                 a0 = i32 [a1 + 0x20]
  1586: 7a 17 8c 00              u32 [sp + 0x8c] = a0
  1590: 81 87 24                 a0 = i32 [a1 + 0x24]
  1593: 7a 17 90 00              u32 [sp + 0x90] = a0
  1597: 7b 18 58                 u64 [sp + 0x58] = a1
  1600: 81 87 28                 a0 = i32 [a1 + 0x28]
  1603: 7a 17 94 00              u32 [sp + 0x94] = a0
  1607: 95 17 8c 00              a0 = sp + 0x8c
  1611: 7b 17 98 00              u64 [sp + 0x98] = a0
  1615: 33 07 06                 a0 = 0x6
  1618: 7b 17 a0 00              u64 [sp + 0xa0] = a0
  1622: 95 18 90 00              a1 = sp + 0x90
  1626: 7b 18 a8 00              u64 [sp + 0xa8] = a1
  1630: 7b 17 b0 00              u64 [sp + 0xb0] = a0
  1634: 95 18 94 00              a1 = sp + 0x94
  1638: 7b 18 b8 00              u64 [sp + 0xb8] = a1
  1642: 7b 17 c0 00              u64 [sp + 0xc0] = a0
  1646: 33 07 60 01 01           a0 = 0x10160
  1651: 95 18 98 40 01           a1 = sp + 0x14098
  1656: 7b 87 58                 u64 [a1 + 0x58] = a0
  1659: 49 18 60 03              u64 [a1 + 96] = 0x3
  1663: 49 18 78                 u64 [a1 + 120] = 0
  1666: 95 19 98 00              a2 = sp + 0x98
  1670: 7b 89 68                 u64 [a1 + 0x68] = a2
  1673: 49 18 70 03              u64 [a1 + 112] = 0x3
  1677: 95 17 10 52 01           a0 = sp + 0x15210
  1682: 95 18 f0 40 01           a1 = sp + 0x140f0
  1687: 50 10 3c b9 1c           ra = 60, jump @508
      :                          @113 [@dyn 30]
  1692: 95 17 f8 50 01           a0 = sp + 0x150f8
  1697: 82 76 20 01              s1 = u64 [a0 + 0x120]
  1701: 82 7b 28 01              a4 = u64 [a0 + 0x128]
  1705: 82 75 18 01              s0 = u64 [a0 + 0x118]
  1709: 33 07 02                 a0 = 0x2
  1712: 33 08                    a1 = 0
  1714: 33 09                    a2 = 0
  1716: 64 6a                    a3 = s1
  1718: 33 00 3e                 ra = 0x3e
  1721: 0a 64                    ecalli 100 // 'log'
  1723: 01                       fallthrough
      :                          @114 [@dyn 31]
  1724: 82 17 60                 a0 = u64 [sp + 0x60]
  1727: c8 57 07                 a0 = a0 + s0
  1730: 53 37 00 00 f0 27        jump @120 if a0 <u 4293918720
      :                          @115
  1736: 33 07 20 10 03           a0 = 0x31020
  1741: 95 77 00 00 10           a0 = a0 + 0x100000
  1746: 01                       fallthrough
      :                          @116
  1747: 82 78                    a1 = u64 [a0]
  1749: c9 87 09                 a2 = a0 - a1
  1752: ab 69 11                 jump @120 if a2 != s1
      :                          @117
  1755: c9 58 09                 a2 = a1 - s0
  1758: 01                       fallthrough
      :                          @118
  1759: 82 7a                    a3 = u64 [a0]
  1761: ab 8a f2                 jump @116 if a3 != a1
      :                          @119
  1764: 7b 79                    u64 [a0] = a2
  1766: 33 0b                    a4 = 0
  1768: 01                       fallthrough
      :                          @120
  1769: 95 17 98 00              a0 = sp + 0x98
  1773: 33 09 00 40 01           a2 = 0x14000
  1778: 33 08                    a1 = 0
  1780: 50 10 40 88 1f           ra = 64, jump @576
      :                          @121 [@dyn 32]
  1785: 80 17 6c                 a0 = u32 [sp + 0x6c]
  1788: 95 18 98 40 01           a1 = sp + 0x14098
  1793: 95 19 98 00              a2 = sp + 0x98
  1797: 7b 89                    u64 [a1] = a2
  1799: 33 0b 00 40 01           a4 = 0x14000
  1804: 82 18 58                 a1 = u64 [sp + 0x58]
  1807: 33 0a                    a3 = 0
  1809: 33 00 42                 ra = 0x42
  1812: 0a 06                    ecalli 6 // 'historical_lookup'
  1814: 01                       fallthrough
      :                          @122 [@dyn 33]
  1815: 95 1b 98 40 01           a4 = sp + 0x14098
  1820: 7b b7 08                 u64 [a4 + 0x8] = a0
  1823: 51 17 ff c3 01           jump @151 if a0 == 4294967295
      :                          @123
  1828: 53 17 03 8c 00           jump @131 if a0 <u 3
      :                          @124
  1833: 95 79 fd                 a2 = a0 + 0xfffffffffffffffd
  1836: 53 19 03 84 00           jump @131 if a2 <u 3
      :                          @125
  1841: 84 78 fe                 a1 = a0 & 0xfffffffffffffffe
  1844: 51 18 06 7c              jump @131 if a1 == 6
      :                          @126
  1848: 95 78 f8                 a1 = a0 + 0xfffffffffffffff8
  1851: 53 18 03 75              jump @131 if a1 <u 3
      :                          @127
  1855: 7c 18 9a 00              a1 = u8 [sp + 0x9a]
  1859: 7c 19 99 00              a2 = u8 [sp + 0x99]
  1863: 7c 1a 98 00              a3 = u8 [sp + 0x98]
  1867: 97 88 10                 a1 = a1 << 0x10
  1870: 97 99 08                 a2 = a2 << 0x8
  1873: d4 98 08                 a1 = a1 | a2
  1876: d4 a8 08                 a1 = a1 | a3
  1879: 95 79 f5                 a2 = a0 + 0xfffffffffffffff5
  1882: ac 89 56                 jump @131 if a2 <u a1
      :                          @128
  1885: 7c 17 9d 00              a0 = u8 [sp + 0x9d]
  1889: 7c 1a 9c 00              a3 = u8 [sp + 0x9c]
  1893: 7c 1c 9b 00              a5 = u8 [sp + 0x9b]
  1897: 97 77 10                 a0 = a0 << 0x10
  1900: 97 aa 08                 a3 = a3 << 0x8
  1903: d4 a7 07                 a0 = a0 | a3
  1906: d4 c7 07                 a0 = a0 | a5
  1909: c9 89 09                 a2 = a2 - a1
  1912: ac 79 38                 jump @131 if a2 <u a0
      :                          @129
  1915: c9 79 06                 s1 = a2 - a0
  1918: 53 16 04 32              jump @131 if s1 <u 4
      :                          @130
  1922: 95 12 a3 00              t0 = sp + 0xa3
  1926: c8 28 03                 t1 = a1 + t0
  1929: c8 37 0a                 a3 = a0 + t1
  1932: 7c ac 03                 a5 = u8 [a3 + 0x3]
  1935: 7c a5 02                 s0 = u8 [a3 + 0x2]
  1938: 7c a4                    t2 = u8 [a3]
  1940: 7c a9 01                 a2 = u8 [a3 + 0x1]
  1943: 97 cc 10                 a5 = a5 << 0x10
  1946: 97 55 08                 s0 = s0 << 0x8
  1949: d4 5c 0c                 a5 = a5 | s0
  1952: d4 c9 09                 a2 = a2 | a5
  1955: 97 99 08                 a2 = a2 << 0x8
  1958: d4 49 0c                 a5 = a2 | t2
  1961: 95 66 fc                 s1 = s1 + 0xfffffffffffffffc
  1964: ae c6 cf 01              jump @161 if s1 >=u a5
      :                          @131
  1968: 95 17 98 40 01           a0 = sp + 0x14098
  1973: 95 16 f8 50 01           s1 = sp + 0x150f8
  1978: 7b 67 18 01              u64 [s1 + 0x118] = a0
  1982: 33 07 0a                 a0 = 0xa
  1985: 7b 67 20 01              u64 [s1 + 0x120] = a0
  1989: 95 18 a0 40 01           a1 = sp + 0x140a0
  1994: 7b 68 28 01              u64 [s1 + 0x128] = a1
  1998: 7b 67 30 01              u64 [s1 + 0x130] = a0
  2002: 33 07 f8 05 01           a0 = 0x105f8
  2007: 7b b7 58                 u64 [a4 + 0x58] = a0
  2010: 49 1b 60 02              u64 [a4 + 96] = 0x2
  2014: 49 1b 78                 u64 [a4 + 120] = 0
  2017: 95 18 10 52 01           a1 = sp + 0x15210
  2022: 7b b8 68                 u64 [a4 + 0x68] = a1
  2025: 49 1b 70 02              u64 [a4 + 112] = 0x2
  2029: 95 17 60 51 01           a0 = sp + 0x15160
  2034: 95 18 f0 40 01           a1 = sp + 0x140f0
  2039: 50 10 44 59 1b           ra = 68, jump @508
      :                          @132 [@dyn 34]
  2044: 82 65 70                 s0 = u64 [s1 + 0x70]
  2047: 82 6b 78                 a4 = u64 [s1 + 0x78]
  2050: 82 66 68                 s1 = u64 [s1 + 0x68]
  2053: 33 07 01                 a0 = 0x1
  2056: 33 08                    a1 = 0
  2058: 33 09                    a2 = 0
  2060: 64 5a                    a3 = s0
  2062: 33 00 46                 ra = 0x46
  2065: 0a 64                    ecalli 100 // 'log'
  2067: 01                       fallthrough
      :                          @133 [@dyn 35]
  2068: 82 17 60                 a0 = u64 [sp + 0x60]
  2071: c8 67 07                 a0 = a0 + s1
  2074: 53 37 00 00 f0 8a fc     jump @91 if a0 <u 4293918720
      :                          @134
  2081: 33 07 20 10 03           a0 = 0x31020
  2086: 95 77 00 00 10           a0 = a0 + 0x100000
  2091: 01                       fallthrough
      :                          @135
  2092: 82 78                    a1 = u64 [a0]
  2094: c9 87 09                 a2 = a0 - a1
  2097: ab 59 73 fc              jump @91 if a2 != s0
      :                          @136
  2101: c9 68 09                 a2 = a1 - s1
  2104: 01                       fallthrough
      :                          @137
  2105: 82 7a                    a3 = u64 [a0]
  2107: ab 8a f1                 jump @135 if a3 != a1
      :                          @138
  2110: 7b 79                    u64 [a0] = a2
  2112: 33 0b                    a4 = 0
  2114: 01                       fallthrough
      :                          @139
  2115: ab 8a e9                 jump @135 if a3 != a1
      :                          @140
  2118: 28 5e fc                 jump @91
      :                          @141
  2121: 95 17 78                 a0 = sp + 0x78
  2124: 7b 97 18 01              u64 [a2 + 0x118] = a0
  2128: 33 07 0a                 a0 = 0xa
  2131: 7b 97 20 01              u64 [a2 + 0x120] = a0
  2135: 33 07 c0 06 01           a0 = 0x106c0
  2140: 7b 17 98 00              u64 [sp + 0x98] = a0
  2144: 49 21 a0 00 01           u64 [sp + 160] = 0x1
  2149: 49 21 b8 00              u64 [sp + 184] = 0
  2153: 95 18 10 52 01           a1 = sp + 0x15210
  2158: 7b 18 a8 00              u64 [sp + 0xa8] = a1
  2162: 49 21 b0 00 01           u64 [sp + 176] = 0x1
  2167: 95 17 f0 40 01           a0 = sp + 0x140f0
  2172: 95 18 98 00              a1 = sp + 0x98
  2176: 50 10 48 d0 1a           ra = 72, jump @508
      :                          @142 [@dyn 36]
  2181: 95 17 98 40 01           a0 = sp + 0x14098
  2186: 82 76 60                 s1 = u64 [a0 + 0x60]
  2189: 82 7b 68                 a4 = u64 [a0 + 0x68]
  2192: 82 77 58                 a0 = u64 [a0 + 0x58]
  2195: 7b 17 58                 u64 [sp + 0x58] = a0
  2198: 33 07 02                 a0 = 0x2
  2201: 33 08                    a1 = 0
  2203: 33 09                    a2 = 0
  2205: 64 6a                    a3 = s1
  2207: 33 00 4a                 ra = 0x4a
  2210: 0a 64                    ecalli 100 // 'log'
  2212: 01                       fallthrough
      :                          @143 [@dyn 37]
  2213: 82 1c 58                 a5 = u64 [sp + 0x58]
  2216: 82 17 60                 a0 = u64 [sp + 0x60]
  2219: c8 7c 09                 a2 = a5 + a0
  2222: 33 07 00 00 01           a0 = 0x10000
  2227: 53 39 00 00 f0 0c fb     jump @65 if a2 <u 4293918720
      :                          @144
  2234: 33 07 20 10 03           a0 = 0x31020
  2239: 95 77 00 00 10           a0 = a0 + 0x100000
  2244: 01                       fallthrough
      :                          @145
  2245: 82 78                    a1 = u64 [a0]
  2247: c9 87 09                 a2 = a0 - a1
  2250: ab 69 da fb              jump @91 if a2 != s1
      :                          @146
  2254: c9 c8 09                 a2 = a1 - a5
  2257: 01                       fallthrough
      :                          @147
  2258: 82 7a                    a3 = u64 [a0]
  2260: ab 8a f1                 jump @145 if a3 != a1
      :                          @148
  2263: 7b 79                    u64 [a0] = a2
  2265: 33 0b                    a4 = 0
  2267: 01                       fallthrough
      :                          @149
  2268: ab 8a e9                 jump @145 if a3 != a1
      :                          @150
  2271: 28 c5 fb                 jump @91
      :                          @151
  2274: 95 17 6c                 a0 = sp + 0x6c
  2277: 95 16 f8 50 01           s1 = sp + 0x150f8
  2282: 7b 67 18 01              u64 [s1 + 0x118] = a0
  2286: 33 07 06                 a0 = 0x6
  2289: 7b 67 20 01              u64 [s1 + 0x120] = a0
  2293: 95 17 80 00              a0 = sp + 0x80
  2297: 7b 67 28 01              u64 [s1 + 0x128] = a0
  2301: 33 07 0a                 a0 = 0xa
  2304: 7b 67 30 01              u64 [s1 + 0x130] = a0
  2308: 33 07 68 06 01           a0 = 0x10668
  2313: 7b b7 58                 u64 [a4 + 0x58] = a0
  2316: 49 1b 60 02              u64 [a4 + 96] = 0x2
  2320: 49 1b 78                 u64 [a4 + 120] = 0
  2323: 95 18 10 52 01           a1 = sp + 0x15210
  2328: 7b b8 68                 u64 [a4 + 0x68] = a1
  2331: 49 1b 70 02              u64 [a4 + 112] = 0x2
  2335: 95 17 60 51 01           a0 = sp + 0x15160
  2340: 95 18 f0 40 01           a1 = sp + 0x140f0
  2345: 50 10 4c 27 1a           ra = 76, jump @508
      :                          @152 [@dyn 38]
  2350: 82 65 70                 s0 = u64 [s1 + 0x70]
  2353: 82 6b 78                 a4 = u64 [s1 + 0x78]
  2356: 82 66 68                 s1 = u64 [s1 + 0x68]
  2359: 33 07 01                 a0 = 0x1
  2362: 33 08                    a1 = 0
  2364: 33 09                    a2 = 0
  2366: 64 5a                    a3 = s0
  2368: 33 00 4e                 ra = 0x4e
  2371: 0a 64                    ecalli 100 // 'log'
  2373: 01                       fallthrough
      :                          @153 [@dyn 39]
  2374: 82 17 60                 a0 = u64 [sp + 0x60]
  2377: c8 67 07                 a0 = a0 + s1
  2380: 53 37 00 00 f0 58 fb     jump @91 if a0 <u 4293918720
      :                          @154
  2387: 33 07 20 10 03           a0 = 0x31020
  2392: 95 77 00 00 10           a0 = a0 + 0x100000
  2397: 01                       fallthrough
      :                          @155
  2398: 82 78                    a1 = u64 [a0]
  2400: c9 87 09                 a2 = a0 - a1
  2403: ab 59 41 fb              jump @91 if a2 != s0
      :                          @156
  2407: c9 68 09                 a2 = a1 - s1
  2410: 01                       fallthrough
      :                          @157
  2411: 82 7a                    a3 = u64 [a0]
  2413: ab 8a f1                 jump @155 if a3 != a1
      :                          @158
  2416: 7b 79                    u64 [a0] = a2
  2418: 33 0b                    a4 = 0
  2420: 01                       fallthrough
      :                          @159
  2421: ab 8a e9                 jump @155 if a3 != a1
      :                          @160
  2424: 28 2c fb                 jump @91
      :                          @161
  2427: 7c 19 9f 00              a2 = u8 [sp + 0x9f]
  2431: 7c 14 9e 00              t2 = u8 [sp + 0x9e]
  2435: 97 99 08                 a2 = a2 << 0x8
  2438: 7c 16 a2 00              s1 = u8 [sp + 0xa2]
  2442: 7c 15 a1 00              s0 = u8 [sp + 0xa1]
  2446: d4 49 04                 t2 = a2 | t2
  2449: 7c 19 a0 00              a2 = u8 [sp + 0xa0]
  2453: 97 66 10                 s1 = s1 << 0x10
  2456: 97 55 08                 s0 = s0 << 0x8
  2459: d4 65 05                 s0 = s0 | s1
  2462: d4 59 09                 a2 = a2 | s0
  2465: 95 aa 04                 a3 = a3 + 0x4
  2468: 7b b4 10                 u64 [a4 + 0x10] = t2
  2471: 7b b9 18                 u64 [a4 + 0x18] = a2
  2474: 7b b2 20                 u64 [a4 + 0x20] = t0
  2477: 7b b8 28                 u64 [a4 + 0x28] = a1
  2480: 7b b3 30                 u64 [a4 + 0x30] = t1
  2483: 7b b7 38                 u64 [a4 + 0x38] = a0
  2486: 7b ba 40                 u64 [a4 + 0x40] = a3
  2489: 7b bc 48                 u64 [a4 + 0x48] = a5
  2492: 95 17 a8 40 01           a0 = sp + 0x140a8
  2497: 7b b7 58                 u64 [a4 + 0x58] = a0
  2500: 33 08 0a                 a1 = 0xa
  2503: 7b b8 60                 u64 [a4 + 0x60] = a1
  2506: 95 17 b0 40 01           a0 = sp + 0x140b0
  2511: 7b b7 68                 u64 [a4 + 0x68] = a0
  2514: 7b b8 70                 u64 [a4 + 0x70] = a1
  2517: 95 17 b8 40 01           a0 = sp + 0x140b8
  2522: 7b b7 78                 u64 [a4 + 0x78] = a0
  2525: 7b b8 80 00              u64 [a4 + 0x80] = a1
  2529: 95 17 c0 40 01           a0 = sp + 0x140c0
  2534: 7b b7 88 00              u64 [a4 + 0x88] = a0
  2538: 7b b8 90 00              u64 [a4 + 0x90] = a1
  2542: 95 17 c8 40 01           a0 = sp + 0x140c8
  2547: 7b b7 98 00              u64 [a4 + 0x98] = a0
  2551: 7b b8 a0 00              u64 [a4 + 0xa0] = a1
  2555: 95 17 d0 40 01           a0 = sp + 0x140d0
  2560: 7b b7 a8 00              u64 [a4 + 0xa8] = a0
  2564: 7b b8 b0 00              u64 [a4 + 0xb0] = a1
  2568: 95 17 d8 40 01           a0 = sp + 0x140d8
  2573: 7b b7 b8 00              u64 [a4 + 0xb8] = a0
  2577: 7b b8 c0 00              u64 [a4 + 0xc0] = a1
  2581: 95 17 e0 40 01           a0 = sp + 0x140e0
  2586: 7b b7 c8 00              u64 [a4 + 0xc8] = a0
  2590: 7b 18 58                 u64 [sp + 0x58] = a1
  2593: 7b b8 d0 00              u64 [a4 + 0xd0] = a1
  2597: 33 07 d0 01 01           a0 = 0x101d0
  2602: 95 16 f8 50 01           s1 = sp + 0x150f8
  2607: 7b 67 18 01              u64 [s1 + 0x118] = a0
  2611: 49 26 20 01 08           u64 [s1 + 288] = 0x8
  2616: 49 26 38 01              u64 [s1 + 312] = 0
  2620: 95 18 f0 40 01           a1 = sp + 0x140f0
  2625: 7b 68 28 01              u64 [s1 + 0x128] = a1
  2629: 49 26 30 01 08           u64 [s1 + 304] = 0x8
  2634: 95 17 60 51 01           a0 = sp + 0x15160
  2639: 95 18 10 52 01           a1 = sp + 0x15210
  2644: 50 10 50 fc 18           ra = 80, jump @508
      :                          @162 [@dyn 40]
  2649: 82 65 70                 s0 = u64 [s1 + 0x70]
  2652: 82 6b 78                 a4 = u64 [s1 + 0x78]
  2655: 82 66 68                 s1 = u64 [s1 + 0x68]
  2658: 33 07 02                 a0 = 0x2
  2661: 33 08                    a1 = 0
  2663: 33 09                    a2 = 0
  2665: 64 5a                    a3 = s0
  2667: 33 00 52                 ra = 0x52
  2670: 0a 64                    ecalli 100 // 'log'
  2672: 01                       fallthrough
      :                          @163 [@dyn 41]
  2673: 82 17 60                 a0 = u64 [sp + 0x60]
  2676: c8 67 07                 a0 = a0 + s1
  2679: 53 37 00 00 f0 25        jump @169 if a0 <u 4293918720
      :                          @164
  2685: 33 07 20 10 03           a0 = 0x31020
  2690: 95 77 00 00 10           a0 = a0 + 0x100000
  2695: 01                       fallthrough
      :                          @165
  2696: 82 78                    a1 = u64 [a0]
  2698: c9 87 09                 a2 = a0 - a1
  2701: ab 59 0f                 jump @169 if a2 != s0
      :                          @166
  2704: c9 68 09                 a2 = a1 - s1
  2707: 01                       fallthrough
      :                          @167
  2708: 82 7a                    a3 = u64 [a0]
  2710: ab 8a f2                 jump @165 if a3 != a1
      :                          @168
  2713: 7b 79                    u64 [a0] = a2
  2715: 01                       fallthrough
      :                          @169
  2716: 95 15 98 40 01           s0 = sp + 0x14098
  2721: 82 57 40                 a0 = u64 [s0 + 0x40]
  2724: 82 58 48                 a1 = u64 [s0 + 0x48]
  2727: 33 09                    a2 = 0
  2729: 0a 08                    ecalli 8 // 'machine'
  2731: 7b 57 50                 u64 [s0 + 0x50] = a0
  2734: 95 17 e8 40 01           a0 = sp + 0x140e8
  2739: 95 16 f8 50 01           s1 = sp + 0x150f8
  2744: 7b 67 68                 u64 [s1 + 0x68] = a0
  2747: 82 17 58                 a0 = u64 [sp + 0x58]
  2750: 7b 67 70                 u64 [s1 + 0x70] = a0
  2753: 33 07 70 02 01           a0 = 0x10270
  2758: 7b 57 58                 u64 [s0 + 0x58] = a0
  2761: 95 17 60 51 01           a0 = sp + 0x15160
  2766: 7b 57 68                 u64 [s0 + 0x68] = a0
  2769: 49 15 60 01              u64 [s0 + 96] = 0x1
  2773: 49 15 70 01              u64 [s0 + 112] = 0x1
  2777: 49 15 78                 u64 [s0 + 120] = 0
  2780: 95 17 10 52 01           a0 = sp + 0x15210
  2785: 95 18 f0 40 01           a1 = sp + 0x140f0
  2790: 50 10 54 6a 18           ra = 84, jump @508
      :                          @170 [@dyn 42]
  2795: 82 65 20 01              s0 = u64 [s1 + 0x120]
  2799: 82 6b 28 01              a4 = u64 [s1 + 0x128]
  2803: 82 66 18 01              s1 = u64 [s1 + 0x118]
  2807: 33 07 02                 a0 = 0x2
  2810: 33 08                    a1 = 0
  2812: 33 09                    a2 = 0
  2814: 64 5a                    a3 = s0
  2816: 33 00 56                 ra = 0x56
  2819: 0a 64                    ecalli 100 // 'log'
  2821: 01                       fallthrough
      :                          @171 [@dyn 43]
  2822: 82 17 60                 a0 = u64 [sp + 0x60]
  2825: c8 67 07                 a0 = a0 + s1
  2828: 53 37 00 00 f0 25        jump @177 if a0 <u 4293918720
      :                          @172
  2834: 33 07 20 10 03           a0 = 0x31020
  2839: 95 77 00 00 10           a0 = a0 + 0x100000
  2844: 01                       fallthrough
      :                          @173
  2845: 82 78                    a1 = u64 [a0]
  2847: c9 87 09                 a2 = a0 - a1
  2850: ab 59 0f                 jump @177 if a2 != s0
      :                          @174
  2853: c9 68 09                 a2 = a1 - s1
  2856: 01                       fallthrough
      :                          @175
  2857: 82 7a                    a3 = u64 [a0]
  2859: ab 8a f2                 jump @173 if a3 != a1
      :                          @176
  2862: 7b 79                    u64 [a0] = a2
  2864: 01                       fallthrough
      :                          @177
  2865: 95 19 98 40 01           a2 = sp + 0x14098
  2870: 82 97 10                 a0 = u64 [a2 + 0x10]
  2873: 82 98 18                 a1 = u64 [a2 + 0x18]
  2876: 82 92 20                 t0 = u64 [a2 + 0x20]
  2879: 82 9a 28                 a3 = u64 [a2 + 0x28]
  2882: 82 9b 30                 a4 = u64 [a2 + 0x30]
  2885: 82 9c 38                 a5 = u64 [a2 + 0x38]
  2888: 82 95 50                 s0 = u64 [a2 + 0x50]
  2891: 33 03 f8 50 01           t1 = 0x150f8
  2896: c8 31 06                 s1 = sp + t1
  2899: 7b 67 30 02              u64 [s1 + 0x230] = a0
  2903: 7b 68 38 02              u64 [s1 + 0x238] = a1
  2907: 7b 62 40 02              u64 [s1 + 0x240] = t0
  2911: 7b 6a 48 02              u64 [s1 + 0x248] = a3
  2915: 7b 6b 50 02              u64 [s1 + 0x250] = a4
  2919: 7b 6c 58 02              u64 [s1 + 0x258] = a5
  2923: 7a 65 64 02              u32 [s1 + 0x264] = s0
  2927: 95 17 28 53 01           a0 = sp + 0x15328
  2932: 7b 97 58                 u64 [a2 + 0x58] = a0
  2935: 33 0a f2 00              a3 = 0xf2
  2939: 7b 9a 60                 u64 [a2 + 0x60] = a3
  2942: 95 17 30 53 01           a0 = sp + 0x15330
  2947: 7b 97 68                 u64 [a2 + 0x68] = a0
  2950: 7b 9a 70                 u64 [a2 + 0x70] = a3
  2953: 95 17 38 53 01           a0 = sp + 0x15338
  2958: 7b 97 78                 u64 [a2 + 0x78] = a0
  2961: 33 07 22 01              a0 = 0x122
  2965: 7b 97 80 00              u64 [a2 + 0x80] = a0
  2969: 95 18 40 53 01           a1 = sp + 0x15340
  2974: 7b 98 88 00              u64 [a2 + 0x88] = a1
  2978: 7b 9a 90 00              u64 [a2 + 0x90] = a3
  2982: 95 18 48 53 01           a1 = sp + 0x15348
  2987: 7b 98 98 00              u64 [a2 + 0x98] = a1
  2991: 7b 97 a0 00              u64 [a2 + 0xa0] = a0
  2995: 95 17 50 53 01           a0 = sp + 0x15350
  3000: 7b 97 a8 00              u64 [a2 + 0xa8] = a0
  3004: 7b 1a 58                 u64 [sp + 0x58] = a3
  3007: 7b 9a b0 00              u64 [a2 + 0xb0] = a3
  3011: 95 17 5c 53 01           a0 = sp + 0x1535c
  3016: 7b 97 b8 00              u64 [a2 + 0xb8] = a0
  3020: 33 07 20 01              a0 = 0x120
  3024: 7b 97 c0 00              u64 [a2 + 0xc0] = a0
  3028: 33 07 e0 08 01           a0 = 0x108e0
  3033: 7b 67 18 01              u64 [s1 + 0x118] = a0
  3037: 49 26 20 01 07           u64 [s1 + 288] = 0x7
  3042: 49 26 38 01              u64 [s1 + 312] = 0
  3046: 95 18 f0 40 01           a1 = sp + 0x140f0
  3051: 7b 68 28 01              u64 [s1 + 0x128] = a1
  3055: 49 26 30 01 07           u64 [s1 + 304] = 0x7
  3060: 95 17 60 51 01           a0 = sp + 0x15160
  3065: 95 18 10 52 01           a1 = sp + 0x15210
  3070: 50 10 58 52 17           ra = 88, jump @508
      :                          @178 [@dyn 44]
  3075: 82 65 70                 s0 = u64 [s1 + 0x70]
  3078: 82 6b 78                 a4 = u64 [s1 + 0x78]
  3081: 82 66 68                 s1 = u64 [s1 + 0x68]
  3084: 33 07 02                 a0 = 0x2
  3087: 33 08                    a1 = 0
  3089: 33 09                    a2 = 0
  3091: 64 5a                    a3 = s0
  3093: 33 00 5a                 ra = 0x5a
  3096: 0a 64                    ecalli 100 // 'log'
  3098: 01                       fallthrough
      :                          @179 [@dyn 45]
  3099: 82 18 60                 a1 = u64 [sp + 0x60]
  3102: c8 68 08                 a1 = a1 + s1
  3105: 33 07 02                 a0 = 0x2
  3108: 53 38 00 00 f0 27        jump @185 if a1 <u 4293918720
      :                          @180
  3114: 33 08 20 10 03           a1 = 0x31020
  3119: 95 88 00 00 10           a1 = a1 + 0x100000
  3124: 01                       fallthrough
      :                          @181
  3125: 82 89                    a2 = u64 [a1]
  3127: c9 98 0a                 a3 = a1 - a2
  3130: ab 5a 11                 jump @185 if a3 != s0
      :                          @182
  3133: c9 69 0a                 a3 = a2 - s1
  3136: 01                       fallthrough
      :                          @183
  3137: 82 8b                    a4 = u64 [a1]
  3139: ab 9b f2                 jump @181 if a4 != a2
      :                          @184
  3142: 7b 8a                    u64 [a1] = a3
  3144: 33 0c                    a5 = 0
  3146: 01                       fallthrough
      :                          @185
  3147: 95 16 f8 50 01           s1 = sp + 0x150f8
  3152: 82 68 48 02              a1 = u64 [s1 + 0x248]
  3156: 33 0b ff 0f              a4 = 0xfff
  3160: c8 b8 08                 a1 = a1 + a4
  3163: 82 69 58 02              a2 = u64 [s1 + 0x258]
  3167: 98 88 0c                 a1 = a1 >> 0xc
  3170: 7b 68 68 02              u64 [s1 + 0x268] = a1
  3174: 82 68 30 02              a1 = u64 [s1 + 0x230]
  3178: c8 b9 09                 a2 = a2 + a4
  3181: 82 6a 38 02              a3 = u64 [s1 + 0x238]
  3185: 98 99 0c                 a2 = a2 >> 0xc
  3188: c8 98 08                 a1 = a1 + a2
  3191: 7b 68 70 02              u64 [s1 + 0x270] = a1
  3195: 7b 1b 50                 u64 [sp + 0x50] = a4
  3198: c8 ba 0a                 a3 = a3 + a4
  3201: 98 aa 0c                 a3 = a3 >> 0xc
  3204: 7b 6a 78 02              u64 [s1 + 0x278] = a3
  3208: 49 26 80 02 00 00 01     u64 [s1 + 640] = 0x10000
  3215: 49 26 88 02 10           u64 [s1 + 648] = 0x10
  3220: 95 18 80 53 01           a1 = sp + 0x15380
  3225: 7b 68 18 01              u64 [s1 + 0x118] = a1
  3229: 82 19 58                 a2 = u64 [sp + 0x58]
  3232: 7b 69 20 01              u64 [s1 + 0x120] = a2
  3236: 95 18 60 53 01           a1 = sp + 0x15360
  3241: 7b 68 28 01              u64 [s1 + 0x128] = a1
  3245: 7b 69 30 01              u64 [s1 + 0x130] = a2
  3249: 33 08 a8 09 01           a1 = 0x109a8
  3254: 95 19 98 40 01           a2 = sp + 0x14098
  3259: 7b 98 58                 u64 [a2 + 0x58] = a1
  3262: 7b 97 60                 u64 [a2 + 0x60] = a0
  3265: 49 19 78                 u64 [a2 + 120] = 0
  3268: 95 18 10 52 01           a1 = sp + 0x15210
  3273: 7b 98 68                 u64 [a2 + 0x68] = a1
  3276: 7b 97 70                 u64 [a2 + 0x70] = a0
  3279: 95 17 60 51 01           a0 = sp + 0x15160
  3284: 95 18 f0 40 01           a1 = sp + 0x140f0
  3289: 50 10 5c 77 16           ra = 92, jump @508
      :                          @186 [@dyn 46]
  3294: 82 65 70                 s0 = u64 [s1 + 0x70]
  3297: 82 6b 78                 a4 = u64 [s1 + 0x78]
  3300: 82 66 68                 s1 = u64 [s1 + 0x68]
  3303: 33 07 02                 a0 = 0x2
  3306: 33 08                    a1 = 0
  3308: 33 09                    a2 = 0
  3310: 64 5a                    a3 = s0
  3312: 33 00 5e                 ra = 0x5e
  3315: 0a 64                    ecalli 100 // 'log'
  3317: 01                       fallthrough
      :                          @187 [@dyn 47]
  3318: 82 17 60                 a0 = u64 [sp + 0x60]
  3321: c8 67 07                 a0 = a0 + s1
  3324: 53 37 00 00 f0 25        jump @193 if a0 <u 4293918720
      :                          @188
  3330: 33 07 20 10 03           a0 = 0x31020
  3335: 95 77 00 00 10           a0 = a0 + 0x100000
  3340: 01                       fallthrough
      :                          @189
  3341: 82 78                    a1 = u64 [a0]
  3343: c9 87 09                 a2 = a0 - a1
  3346: ab 59 0f                 jump @193 if a2 != s0
      :                          @190
  3349: c9 68 09                 a2 = a1 - s1
  3352: 01                       fallthrough
      :                          @191
  3353: 82 7a                    a3 = u64 [a0]
  3355: ab 8a f2                 jump @189 if a3 != a1
      :                          @192
  3358: 7b 79                    u64 [a0] = a2
  3360: 01                       fallthrough
      :                          @193
  3361: 95 16 f8 50 01           s1 = sp + 0x150f8
  3366: 80 67 64 02              a0 = u32 [s1 + 0x264]
  3370: 82 68 88 02              a1 = u64 [s1 + 0x288]
  3374: 82 69 68 02              a2 = u64 [s1 + 0x268]
  3378: 33 0a 02                 a3 = 0x2
  3381: 0a 0b                    ecalli 11 // 'pages'
  3383: 7b 67 90 02              u64 [s1 + 0x290] = a0
  3387: 95 17 88 53 01           a0 = sp + 0x15388
  3392: 7b 67 68                 u64 [s1 + 0x68] = a0
  3395: 33 07 f2 00              a0 = 0xf2
  3399: 7b 67 70                 u64 [s1 + 0x70] = a0
  3402: 33 07 10 0a 01           a0 = 0x10a10
  3407: 95 18 98 40 01           a1 = sp + 0x14098
  3412: 7b 87 58                 u64 [a1 + 0x58] = a0
  3415: 95 17 60 51 01           a0 = sp + 0x15160
  3420: 7b 87 68                 u64 [a1 + 0x68] = a0
  3423: 49 18 60 01              u64 [a1 + 96] = 0x1
  3427: 49 18 70 01              u64 [a1 + 112] = 0x1
  3431: 49 18 78                 u64 [a1 + 120] = 0
  3434: 95 17 10 52 01           a0 = sp + 0x15210
  3439: 95 18 f0 40 01           a1 = sp + 0x140f0
  3444: 50 10 60 dc 15           ra = 96, jump @508
      :                          @194 [@dyn 48]
  3449: 82 65 20 01              s0 = u64 [s1 + 0x120]
  3453: 82 6b 28 01              a4 = u64 [s1 + 0x128]
  3457: 82 66 18 01              s1 = u64 [s1 + 0x118]
  3461: 33 07 02                 a0 = 0x2
  3464: 33 08                    a1 = 0
  3466: 33 09                    a2 = 0
  3468: 64 5a                    a3 = s0
  3470: 33 00 62                 ra = 0x62
  3473: 0a 64                    ecalli 100 // 'log'
  3475: 01                       fallthrough
      :                          @195 [@dyn 49]
  3476: 82 17 60                 a0 = u64 [sp + 0x60]
  3479: c8 67 07                 a0 = a0 + s1
  3482: 53 37 00 00 f0 27        jump @201 if a0 <u 4293918720
      :                          @196
  3488: 33 07 20 10 03           a0 = 0x31020
  3493: 95 77 00 00 10           a0 = a0 + 0x100000
  3498: 01                       fallthrough
      :                          @197
  3499: 82 78                    a1 = u64 [a0]
  3501: c9 87 09                 a2 = a0 - a1
  3504: ab 59 11                 jump @201 if a2 != s0
      :                          @198
  3507: c9 68 09                 a2 = a1 - s1
  3510: 01                       fallthrough
      :                          @199
  3511: 82 7a                    a3 = u64 [a0]
  3513: ab 8a f2                 jump @197 if a3 != a1
      :                          @200
  3516: 7b 79                    u64 [a0] = a2
  3518: 33 0b                    a4 = 0
  3520: 01                       fallthrough
      :                          @201
  3521: 95 17 f8 50 01           a0 = sp + 0x150f8
  3526: 82 77 90 02              a0 = u64 [a0 + 0x290]
  3530: 51 07 56 0b              jump @317 if a0 == 0
      :                          @202
  3534: 33 0a 18 0e 01           a3 = 0x10e18
  3539: 33 07 01                 a0 = 0x1
  3542: 33 0b 3e                 a4 = 0x3e
  3545: 33 08                    a1 = 0
  3547: 33 09                    a2 = 0
  3549: 0a 64                    ecalli 100 // 'log'
  3551: 01                       fallthrough
      :                          @203
  3552: 33 09 08 10              a2 = 0x1008
  3556: 95 17 f0 40 01           a0 = sp + 0x140f0
  3561: 33 08                    a1 = 0
  3563: 7b 19 48                 u64 [sp + 0x48] = a2
  3566: 50 10 64 8e 18           ra = 100, jump @576
      :                          @204 [@dyn 50]
  3571: 49 11 10                 u64 [sp + 16] = 0
  3574: 95 17 f8 50 01           a0 = sp + 0x150f8
  3579: 49 27 78 02              u64 [a0 + 632] = 0
  3583: 33 05 20 10 03           s0 = 0x31020
  3588: 33 0b 00 00 10           a4 = 0x100000
  3593: 33 07 80 02 01           a0 = 0x10280
  3598: 7b 17 38                 u64 [sp + 0x38] = a0
  3601: 33 07 0a                 a0 = 0xa
  3604: 7b 17 58                 u64 [sp + 0x58] = a0
  3607: 33 07 c0 02 01           a0 = 0x102c0
  3612: 7b 17 30                 u64 [sp + 0x30] = a0
  3615: 33 07 08 03 01           a0 = 0x10308
  3620: 7b 17 08                 u64 [sp + 0x8] = a0
  3623: 33 07 40 03 01           a0 = 0x10340
  3628: 7b 17 28                 u64 [sp + 0x28] = a0
  3631: 33 07 00 00 01           a0 = 0x10000
  3636: 7b 17 20                 u64 [sp + 0x20] = a0
  3639: 33 07 98 03 01           a0 = 0x10398
  3644: 7b 17 18                 u64 [sp + 0x18] = a0
  3647: 7b 15 40                 u64 [sp + 0x40] = s0
  3650: c8 b5 05                 s0 = s0 + a4
  3653: 28 18                    jump @206
      :                          @205
  3655: 95 18 f8 50 01           a1 = sp + 0x150f8
  3660: 82 87 78 02              a0 = u64 [a1 + 0x278]
  3664: 95 77 01                 a0 = a0 + 0x1
  3667: 7b 87 78 02              u64 [a1 + 0x278] = a0
  3671: 33 0b 00 00 10           a4 = 0x100000
  3676: 01                       fallthrough
      :                          @206
  3677: 82 58                    a1 = u64 [s0]
  3679: 95 87 12                 a0 = a1 + 0x12
  3682: ae 87 06                 jump @208 if a0 >=u a1
      :                          @207
  3685: 28 ec 0f                 jump @385
      :                          @208
  3688: 95 79 01                 a2 = a0 + 0x1
  3691: 88 9a 01                 a3 = a2 <u 0x1
  3694: d8 9b 09                 a2 = a4 <u a2
  3697: d4 a9 09                 a2 = a2 | a3
  3700: 51 09 06                 jump @210 if a2 == 0
      :                          @209
  3703: 28 da 0f                 jump @385
      :                          @210
  3706: 82 59                    a2 = u64 [s0]
  3708: ab 89 e1                 jump @206 if a2 != a1
      :                          @211
  3711: 7b 57                    u64 [s0] = a0
  3713: 82 16 40                 s1 = u64 [sp + 0x40]
  3716: c9 76 06                 s1 = s1 - a0
  3719: c8 b6 06                 s1 = s1 + a4
  3722: 33 09 12                 a2 = 0x12
  3725: 64 67                    a0 = s1
  3727: 82 18 38                 a1 = u64 [sp + 0x38]
  3730: 50 10 66 38 17           ra = 102, jump @558
      :                          @212 [@dyn 51]
  3735: 33 07 02                 a0 = 0x2
  3738: 33 0b 12                 a4 = 0x12
  3741: 33 08                    a1 = 0
  3743: 33 09                    a2 = 0
  3745: 64 6a                    a3 = s1
  3747: 33 00 68                 ra = 0x68
  3750: 0a 64                    ecalli 100 // 'log'
  3752: 01                       fallthrough
      :                          @213 [@dyn 52]
  3753: 82 57                    a0 = u64 [s0]
  3755: c9 75 08                 a1 = s0 - a0
  3758: ab 68 0f                 jump @217 if a1 != s1
      :                          @214
  3761: 95 78 ee                 a1 = a0 + 0xffffffffffffffee
  3764: 01                       fallthrough
      :                          @215
  3765: 82 59                    a2 = u64 [s0]
  3767: ab 79 f2                 jump @213 if a2 != a0
      :                          @216
  3770: 7b 58                    u64 [s0] = a1
  3772: 01                       fallthrough
      :                          @217
  3773: 95 16 f8 50 01           s1 = sp + 0x150f8
  3778: 82 6b 78 02              a4 = u64 [s1 + 0x278]
  3782: 95 17 f0 40 01           a0 = sp + 0x140f0
  3787: 33 0a 06                 a3 = 0x6
  3790: 33 08                    a1 = 0
  3792: 82 19 48                 a2 = u64 [sp + 0x48]
  3795: 33 0c                    a5 = 0
  3797: 0a 01                    ecalli 1 // 'fetch'
  3799: 01                       fallthrough
      :                          @218
  3800: 7b 67 90 02              u64 [s1 + 0x290] = a0
  3804: 51 17 ff d6 02           jump @251 if a0 == 4294967295
      :                          @219
  3809: 95 17 70 53 01           a0 = sp + 0x15370
  3814: 7b 67 68                 u64 [s1 + 0x68] = a0
  3817: 82 17 58                 a0 = u64 [sp + 0x58]
  3820: 7b 67 70                 u64 [s1 + 0x70] = a0
  3823: 95 18 88 53 01           a1 = sp + 0x15388
  3828: 7b 68 78                 u64 [s1 + 0x78] = a1
  3831: 7b 67 80 00              u64 [s1 + 0x80] = a0
  3835: 82 17 30                 a0 = u64 [sp + 0x30]
  3838: 7b 67 18 01              u64 [s1 + 0x118] = a0
  3842: 49 26 20 01 02           u64 [s1 + 288] = 0x2
  3847: 49 26 38 01              u64 [s1 + 312] = 0
  3851: 95 18 60 51 01           a1 = sp + 0x15160
  3856: 7b 68 28 01              u64 [s1 + 0x128] = a1
  3860: 49 26 30 01 02           u64 [s1 + 304] = 0x2
  3865: 95 17 f8 50 01           a0 = sp + 0x150f8
  3870: 95 18 10 52 01           a1 = sp + 0x15210
  3875: 50 10 6a 2d 14           ra = 106, jump @508
      :                          @220 [@dyn 53]
  3880: 95 17 f8 50 01           a0 = sp + 0x150f8
  3885: 82 76 08                 s1 = u64 [a0 + 0x8]
  3888: 82 7b 10                 a4 = u64 [a0 + 0x10]
  3891: 82 77                    a0 = u64 [a0]
  3893: 7b 17 50                 u64 [sp + 0x50] = a0
  3896: 33 07 02                 a0 = 0x2
  3899: 33 08                    a1 = 0
  3901: 33 09                    a2 = 0
  3903: 64 6a                    a3 = s1
  3905: 33 00 6c                 ra = 0x6c
  3908: 0a 64                    ecalli 100 // 'log'
  3910: 01                       fallthrough
      :                          @221 [@dyn 54]
  3911: 82 1b 50                 a4 = u64 [sp + 0x50]
  3914: 82 17 60                 a0 = u64 [sp + 0x60]
  3917: c8 b7 07                 a0 = a0 + a4
  3920: 53 37 00 00 f0 1a        jump @226 if a0 <u 4293918720
      :                          @222
  3926: 82 57                    a0 = u64 [s0]
  3928: c9 75 08                 a1 = s0 - a0
  3931: ab 68 0f                 jump @226 if a1 != s1
      :                          @223
  3934: c9 b7 08                 a1 = a0 - a4
  3937: 01                       fallthrough
      :                          @224
  3938: 82 59                    a2 = u64 [s0]
  3940: ab 79 f2                 jump @222 if a2 != a0
      :                          @225
  3943: 7b 58                    u64 [s0] = a1
  3945: 01                       fallthrough
      :                          @226
  3946: 95 18 98 40 01           a1 = sp + 0x14098
  3951: 80 87 58                 a0 = u32 [a1 + 0x58]
  3954: 80 88 5c                 a1 = u32 [a1 + 0x5c]
  3957: 95 16 f8 50 01           s1 = sp + 0x150f8
  3962: 82 69 78 02              a2 = u64 [s1 + 0x278]
  3966: 7b 67 80 02              u64 [s1 + 0x280] = a0
  3970: 7b 68 88 02              u64 [s1 + 0x288] = a1
  3974: 52 09 a1 00              jump @235 if a2 != 0
      :                          @227
  3978: 95 17 78 53 01           a0 = sp + 0x15378
  3983: 7b 67 68                 u64 [s1 + 0x68] = a0
  3986: 82 17 58                 a0 = u64 [sp + 0x58]
  3989: 7b 67 70                 u64 [s1 + 0x70] = a0
  3992: 95 18 80 53 01           a1 = sp + 0x15380
  3997: 7b 68 78                 u64 [s1 + 0x78] = a1
  4000: 7b 67 80 00              u64 [s1 + 0x80] = a0
  4004: 82 17 08                 a0 = u64 [sp + 0x8]
  4007: 7b 67 18 01              u64 [s1 + 0x118] = a0
  4011: 49 26 20 01 02           u64 [s1 + 288] = 0x2
  4016: 49 26 38 01              u64 [s1 + 312] = 0
  4020: 95 18 60 51 01           a1 = sp + 0x15160
  4025: 7b 68 28 01              u64 [s1 + 0x128] = a1
  4029: 49 26 30 01 02           u64 [s1 + 304] = 0x2
  4034: 95 17 f8 50 01           a0 = sp + 0x150f8
  4039: 95 18 10 52 01           a1 = sp + 0x15210
  4044: 50 10 6e 84 13           ra = 110, jump @508
      :                          @228 [@dyn 55]
  4049: 95 17 f8 50 01           a0 = sp + 0x150f8
  4054: 82 76 08                 s1 = u64 [a0 + 0x8]
  4057: 82 7b 10                 a4 = u64 [a0 + 0x10]
  4060: 82 77                    a0 = u64 [a0]
  4062: 7b 17 50                 u64 [sp + 0x50] = a0
  4065: 33 07 02                 a0 = 0x2
  4068: 33 08                    a1 = 0
  4070: 33 09                    a2 = 0
  4072: 64 6a                    a3 = s1
  4074: 33 00 70                 ra = 0x70
  4077: 0a 64                    ecalli 100 // 'log'
  4079: 01                       fallthrough
      :                          @229 [@dyn 56]
  4080: 82 1b 50                 a4 = u64 [sp + 0x50]
  4083: 82 17 60                 a0 = u64 [sp + 0x60]
  4086: c8 b7 07                 a0 = a0 + a4
  4089: 53 37 00 00 f0 1a        jump @234 if a0 <u 4293918720
      :                          @230
  4095: 82 57                    a0 = u64 [s0]
  4097: c9 75 08                 a1 = s0 - a0
  4100: ab 68 0f                 jump @234 if a1 != s1
      :                          @231
  4103: c9 b7 08                 a1 = a0 - a4
  4106: 01                       fallthrough
      :                          @232
  4107: 82 59                    a2 = u64 [s0]
  4109: ab 79 f2                 jump @230 if a2 != a0
      :                          @233
  4112: 7b 58                    u64 [s0] = a1
  4114: 01                       fallthrough
      :                          @234
  4115: 95 16 f8 50 01           s1 = sp + 0x150f8
  4120: 82 68 88 02              a1 = u64 [s1 + 0x288]
  4124: 82 67 80 02              a0 = u64 [s1 + 0x280]
  4128: 97 89 0c                 a2 = a1 << 0xc
  4131: 7b 19 10                 u64 [sp + 0x10] = a2
  4134: 01                       fallthrough
      :                          @235
  4135: 33 09 01                 a2 = 0x1
  4138: 33 0a 02                 a3 = 0x2
  4141: 0a 0b                    ecalli 11 // 'pages'
  4143: 7b 67 98 02              u64 [s1 + 0x298] = a0
  4147: 95 17 78 53 01           a0 = sp + 0x15378
  4152: 7b 67 18 01              u64 [s1 + 0x118] = a0
  4156: 82 17 58                 a0 = u64 [sp + 0x58]
  4159: 7b 67 20 01              u64 [s1 + 0x120] = a0
  4163: 95 18 80 53 01           a1 = sp + 0x15380
  4168: 7b 68 28 01              u64 [s1 + 0x128] = a1
  4172: 7b 67 30 01              u64 [s1 + 0x130] = a0
  4176: 95 18 90 53 01           a1 = sp + 0x15390
  4181: 7b 68 38 01              u64 [s1 + 0x138] = a1
  4185: 7b 67 40 01              u64 [s1 + 0x140] = a0
  4189: 82 17 28                 a0 = u64 [sp + 0x28]
  4192: 7b 67 68                 u64 [s1 + 0x68] = a0
  4195: 49 16 70 03              u64 [s1 + 112] = 0x3
  4199: 49 26 88 00              u64 [s1 + 136] = 0
  4203: 95 17 10 52 01           a0 = sp + 0x15210
  4208: 7b 67 78                 u64 [s1 + 0x78] = a0
  4211: 49 26 80 00 03           u64 [s1 + 128] = 0x3
  4216: 95 17 f8 50 01           a0 = sp + 0x150f8
  4221: 95 18 60 51 01           a1 = sp + 0x15160
  4226: 50 10 72 ce 12           ra = 114, jump @508
      :                          @236 [@dyn 57]
  4231: 95 17 f8 50 01           a0 = sp + 0x150f8
  4236: 82 76 08                 s1 = u64 [a0 + 0x8]
  4239: 82 7b 10                 a4 = u64 [a0 + 0x10]
  4242: 82 77                    a0 = u64 [a0]
  4244: 7b 17 50                 u64 [sp + 0x50] = a0
  4247: 33 07 02                 a0 = 0x2
  4250: 33 08                    a1 = 0
  4252: 33 09                    a2 = 0
  4254: 64 6a                    a3 = s1
  4256: 33 00 74                 ra = 0x74
  4259: 0a 64                    ecalli 100 // 'log'
  4261: 01                       fallthrough
      :                          @237 [@dyn 58]
  4262: 82 1b 50                 a4 = u64 [sp + 0x50]
  4265: 82 17 60                 a0 = u64 [sp + 0x60]
  4268: c8 b7 07                 a0 = a0 + a4
  4271: 53 37 00 00 f0 1a        jump @242 if a0 <u 4293918720
      :                          @238
  4277: 82 57                    a0 = u64 [s0]
  4279: c9 75 08                 a1 = s0 - a0
  4282: ab 68 0f                 jump @242 if a1 != s1
      :                          @239
  4285: c9 b7 08                 a1 = a0 - a4
  4288: 01                       fallthrough
      :                          @240
  4289: 82 59                    a2 = u64 [s0]
  4291: ab 79 f2                 jump @238 if a2 != a0
      :                          @241
  4294: 7b 58                    u64 [s0] = a1
  4296: 01                       fallthrough
      :                          @242
  4297: 95 1a f8 50 01           a3 = sp + 0x150f8
  4302: 82 a9 88 02              a2 = u64 [a3 + 0x288]
  4306: 82 a7 80 02              a0 = u64 [a3 + 0x280]
  4310: 95 18 f0 40 01           a1 = sp + 0x140f0
  4315: 7b a8 a0 02              u64 [a3 + 0x2a0] = a1
  4319: 97 99 0c                 a2 = a2 << 0xc
  4322: 7b a9 18 02              u64 [a3 + 0x218] = a2
  4326: 33 0a 00 10              a3 = 0x1000
  4330: 95 18 f8 40 01           a1 = sp + 0x140f8
  4335: 0a 0a                    ecalli 10 // 'poke'
  4337: 95 19 f8 50 01           a2 = sp + 0x150f8
  4342: 7b 97 d8 00              u64 [a2 + 0xd8] = a0
  4346: 95 17 78 53 01           a0 = sp + 0x15378
  4351: 7b 97 18 01              u64 [a2 + 0x118] = a0
  4355: 82 17 58                 a0 = u64 [sp + 0x58]
  4358: 7b 97 20 01              u64 [a2 + 0x120] = a0
  4362: 95 18 98 53 01           a1 = sp + 0x15398
  4367: 7b 98 28 01              u64 [a2 + 0x128] = a1
  4371: 7b 97 30 01              u64 [a2 + 0x130] = a0
  4375: 95 18 10 53 01           a1 = sp + 0x15310
  4380: 7b 98 38 01              u64 [a2 + 0x138] = a1
  4384: 7b 97 40 01              u64 [a2 + 0x140] = a0
  4388: 82 18 20                 a1 = u64 [sp + 0x20]
  4391: 7b 98 48 01              u64 [a2 + 0x148] = a1
  4395: 7b 97 50 01              u64 [a2 + 0x150] = a0
  4399: 95 18 d0 51 01           a1 = sp + 0x151d0
  4404: 7b 98 58 01              u64 [a2 + 0x158] = a1
  4408: 7b 97 60 01              u64 [a2 + 0x160] = a0
  4412: 82 17 18                 a0 = u64 [sp + 0x18]
  4415: 7b 97 68                 u64 [a2 + 0x68] = a0
  4418: 49 19 70 05              u64 [a2 + 112] = 0x5
  4422: 49 29 88 00              u64 [a2 + 136] = 0
  4426: 95 17 10 52 01           a0 = sp + 0x15210
  4431: 7b 97 78                 u64 [a2 + 0x78] = a0
  4434: 49 29 80 00 05           u64 [a2 + 128] = 0x5
  4439: 95 17 f8 50 01           a0 = sp + 0x150f8
  4444: 95 18 60 51 01           a1 = sp + 0x15160
  4449: 50 10 76 ef 11           ra = 118, jump @508
      :                          @243 [@dyn 59]
  4454: 95 17 f8 50 01           a0 = sp + 0x150f8
  4459: 82 76 08                 s1 = u64 [a0 + 0x8]
  4462: 82 7b 10                 a4 = u64 [a0 + 0x10]
  4465: 82 77                    a0 = u64 [a0]
  4467: 7b 17 50                 u64 [sp + 0x50] = a0
  4470: 33 07 02                 a0 = 0x2
  4473: 33 08                    a1 = 0
  4475: 33 09                    a2 = 0
  4477: 64 6a                    a3 = s1
  4479: 33 00 78                 ra = 0x78
  4482: 0a 64                    ecalli 100 // 'log'
  4484: 01                       fallthrough
      :                          @244 [@dyn 60]
  4485: 82 1b 50                 a4 = u64 [sp + 0x50]
  4488: 82 17 60                 a0 = u64 [sp + 0x60]
  4491: c8 b7 07                 a0 = a0 + a4
  4494: 53 37 00 00 f0 b9 fc     jump @205 if a0 <u 4293918720
      :                          @245
  4501: 82 57                    a0 = u64 [s0]
  4503: c9 75 08                 a1 = s0 - a0
  4506: ab 68 ad fc              jump @205 if a1 != s1
      :                          @246
  4510: c9 b7 08                 a1 = a0 - a4
  4513: 01                       fallthrough
      :                          @247
  4514: 82 59                    a2 = u64 [s0]
  4516: ab 79 f1                 jump @245 if a2 != a0
      :                          @248
  4519: 7b 58                    u64 [s0] = a1
  4521: 33 0a                    a3 = 0
  4523: 01                       fallthrough
      :                          @249
  4524: ab 79 e9                 jump @245 if a2 != a0
      :                          @250
  4527: 28 98 fc                 jump @205
      :                          @251
  4530: 95 17 70 53 01           a0 = sp + 0x15370
  4535: 7b 67                    u64 [s1] = a0
  4537: 33 07 0a                 a0 = 0xa
  4540: 7b 17 30                 u64 [sp + 0x30] = a0
  4543: 7b 67 08                 u64 [s1 + 0x8] = a0
  4546: 33 07 18 04 01           a0 = 0x10418
  4551: 7b 67 18 01              u64 [s1 + 0x118] = a0
  4555: 49 26 20 01 01           u64 [s1 + 288] = 0x1
  4560: 49 26 38 01              u64 [s1 + 312] = 0
  4564: 95 18 f8 50 01           a1 = sp + 0x150f8
  4569: 7b 68 28 01              u64 [s1 + 0x128] = a1
  4573: 49 26 30 01 01           u64 [s1 + 304] = 0x1
  4578: 95 17 60 51 01           a0 = sp + 0x15160
  4583: 95 18 10 52 01           a1 = sp + 0x15210
  4588: 50 10 7a 64 11           ra = 122, jump @508
      :                          @252 [@dyn 61]
  4593: 82 65 70                 s0 = u64 [s1 + 0x70]
  4596: 82 6b 78                 a4 = u64 [s1 + 0x78]
  4599: 95 17 f8 50 01           a0 = sp + 0x150f8
  4604: 82 76 68                 s1 = u64 [a0 + 0x68]
  4607: 33 07 02                 a0 = 0x2
  4610: 33 08                    a1 = 0
  4612: 33 09                    a2 = 0
  4614: 64 5a                    a3 = s0
  4616: 33 00 7c                 ra = 0x7c
  4619: 0a 64                    ecalli 100 // 'log'
  4621: 01                       fallthrough
      :                          @253 [@dyn 62]
  4622: 82 17 60                 a0 = u64 [sp + 0x60]
  4625: c8 67 07                 a0 = a0 + s1
  4628: 53 37 00 00 f0 25        jump @259 if a0 <u 4293918720
      :                          @254
  4634: 33 07 20 10 03           a0 = 0x31020
  4639: 95 77 00 00 10           a0 = a0 + 0x100000
  4644: 01                       fallthrough
      :                          @255
  4645: 82 78                    a1 = u64 [a0]
  4647: c9 87 09                 a2 = a0 - a1
  4650: ab 59 0f                 jump @259 if a2 != s0
      :                          @256
  4653: c9 68 09                 a2 = a1 - s1
  4656: 01                       fallthrough
      :                          @257
  4657: 82 7a                    a3 = u64 [a0]
  4659: ab 8a f2                 jump @255 if a3 != a1
      :                          @258
  4662: 7b 79                    u64 [a0] = a2
  4664: 01                       fallthrough
      :                          @259
  4665: 95 15 f8 50 01           s0 = sp + 0x150f8
  4670: 49 15 30                 u64 [s0 + 48] = 0
  4673: 49 15 28                 u64 [s0 + 40] = 0
  4676: 49 15 20                 u64 [s0 + 32] = 0
  4679: 49 15 18                 u64 [s0 + 24] = 0
  4682: 49 15 10                 u64 [s0 + 16] = 0
  4685: 49 15 60                 u64 [s0 + 96] = 0
  4688: 14 02 00 00 ff ff 00 00 00 00 t0 = 0xffff0000
  4698: 7b 52                    u64 [s0] = t0
  4700: 82 59 78 02              a2 = u64 [s0 + 0x278]
  4704: 14 08 00 00 fe fe 00 00 00 00 a1 = 0xfefe0000
  4714: 7b 58 08                 u64 [s0 + 0x8] = a1
  4717: 82 17 10                 a0 = u64 [sp + 0x10]
  4720: 7b 57 38                 u64 [s0 + 0x38] = a0
  4723: 97 99 0c                 a2 = a2 << 0xc
  4726: 80 1a 8c 00              a3 = u32 [sp + 0x8c]
  4730: 80 1b 90 00              a4 = u32 [sp + 0x90]
  4734: 80 1c 94 00              a5 = u32 [sp + 0x94]
  4738: 7b 59 40                 u64 [s0 + 0x40] = a2
  4741: 7b 5a 48                 u64 [s0 + 0x48] = a3
  4744: 7b 5b 50                 u64 [s0 + 0x50] = a4
  4747: 7b 5c 58                 u64 [s0 + 0x58] = a5
  4750: 49 15 68 ff ff ff 0f     u64 [s0 + 104] = 0xfffffff
  4757: 95 16 f8 50 01           s1 = sp + 0x150f8
  4762: 7b 62 70                 u64 [s1 + 0x70] = t0
  4765: 7b 68 78                 u64 [s1 + 0x78] = a1
  4768: 49 26 80 00              u64 [s1 + 128] = 0
  4772: 49 26 88 00              u64 [s1 + 136] = 0
  4776: 49 26 90 00              u64 [s1 + 144] = 0
  4780: 49 26 98 00              u64 [s1 + 152] = 0
  4784: 49 26 a0 00              u64 [s1 + 160] = 0
  4788: 7b 67 a8 00              u64 [s1 + 0xa8] = a0
  4792: 7b 69 b0 00              u64 [s1 + 0xb0] = a2
  4796: 7b 6a b8 00              u64 [s1 + 0xb8] = a3
  4800: 7b 6b c0 00              u64 [s1 + 0xc0] = a4
  4804: 7b 6c c8 00              u64 [s1 + 0xc8] = a5
  4808: 49 26 d0 00              u64 [s1 + 208] = 0
  4812: 33 07 50 04 01           a0 = 0x10450
  4817: 7b 17 28                 u64 [sp + 0x28] = a0
  4820: 33 07 20 10 03           a0 = 0x31020
  4825: 95 77 00 00 10           a0 = a0 + 0x100000
  4830: 7b 17 20                 u64 [sp + 0x20] = a0
  4833: 01                       fallthrough
      :                          @260
  4834: 95 17 98 40 01           a0 = sp + 0x14098
  4839: 82 77 50                 a0 = u64 [a0 + 0x50]
  4842: 95 18 60 51 01           a1 = sp + 0x15160
  4847: 0a 0c                    ecalli 12 // 'invoke'
  4849: 7b 67 90 02              u64 [s1 + 0x290] = a0
  4853: 7b 68 98 02              u64 [s1 + 0x298] = a1
  4857: 95 17 e8 40 01           a0 = sp + 0x140e8
  4862: 7b 67 18 01              u64 [s1 + 0x118] = a0
  4866: 82 17 30                 a0 = u64 [sp + 0x30]
  4869: 7b 67 20 01              u64 [s1 + 0x120] = a0
  4873: 95 18 88 53 01           a1 = sp + 0x15388
  4878: 7b 68 28 01              u64 [s1 + 0x128] = a1
  4882: 7b 67 30 01              u64 [s1 + 0x130] = a0
  4886: 95 18 90 53 01           a1 = sp + 0x15390
  4891: 7b 68 38 01              u64 [s1 + 0x138] = a1
  4895: 7b 67 40 01              u64 [s1 + 0x140] = a0
  4899: 82 17 28                 a0 = u64 [sp + 0x28]
  4902: 7b 67 d8 00              u64 [s1 + 0xd8] = a0
  4906: 49 26 e0 00 03           u64 [s1 + 224] = 0x3
  4911: 49 26 f8 00              u64 [s1 + 248] = 0
  4915: 95 17 10 52 01           a0 = sp + 0x15210
  4920: 7b 67 e8 00              u64 [s1 + 0xe8] = a0
  4924: 49 26 f0 00 03           u64 [s1 + 240] = 0x3
  4929: 95 17 10 53 01           a0 = sp + 0x15310
  4934: 95 18 d0 51 01           a1 = sp + 0x151d0
  4939: 50 10 7e 05 10           ra = 126, jump @508
      :                          @261 [@dyn 63]
  4944: 82 65 20 02              s0 = u64 [s1 + 0x220]
  4948: 82 6b 28 02              a4 = u64 [s1 + 0x228]
  4952: 95 17 f8 50 01           a0 = sp + 0x150f8
  4957: 82 76 18 02              s1 = u64 [a0 + 0x218]
  4961: 33 07 02                 a0 = 0x2
  4964: 33 08                    a1 = 0
  4966: 33 09                    a2 = 0
  4968: 64 5a                    a3 = s0
  4970: 33 00 80 00              ra = 0x80
  4974: 0a 64                    ecalli 100 // 'log'
  4976: 01                       fallthrough
      :                          @262 [@dyn 64]
  4977: 82 17 60                 a0 = u64 [sp + 0x60]
  4980: c8 67 07                 a0 = a0 + s1
  4983: 82 1b 20                 a4 = u64 [sp + 0x20]
  4986: 53 37 00 00 f0 1a        jump @267 if a0 <u 4293918720
      :                          @263
  4992: 82 b7                    a0 = u64 [a4]
  4994: c9 7b 08                 a1 = a4 - a0
  4997: ab 58 0f                 jump @267 if a1 != s0
      :                          @264
  5000: c9 67 08                 a1 = a0 - s1
  5003: 01                       fallthrough
      :                          @265
  5004: 82 b9                    a2 = u64 [a4]
  5006: ab 79 f2                 jump @263 if a2 != a0
      :                          @266
  5009: 7b b8                    u64 [a4] = a1
  5011: 01                       fallthrough
      :                          @267
  5012: 95 16 f8 50 01           s1 = sp + 0x150f8
  5017: 82 67 90 02              a0 = u64 [s1 + 0x290]
  5021: 82 68 98 02              a1 = u64 [s1 + 0x298]
  5025: 85 77 03                 a0 = a0 ^ 0x3
  5028: 85 88 64                 a1 = a1 ^ 0x64
  5031: d4 87 07                 a0 = a0 | a1
  5034: 52 07 a4 00              jump @271 if a0 != 0
      :                          @268
  5038: 95 17 f8 50 01           a0 = sp + 0x150f8
  5043: 33 09 68                 a2 = 0x68
  5046: 95 18 68 51 01           a1 = sp + 0x15168
  5051: 50 20 82 00 0f 12        ra = 130, jump @558
      :                          @269 [@dyn 65]
  5057: 82 67 38                 a0 = u64 [s1 + 0x38]
  5060: 7b 17 50                 u64 [sp + 0x50] = a0
  5063: 82 67 40                 a0 = u64 [s1 + 0x40]
  5066: 7b 17 40                 u64 [sp + 0x40] = a0
  5069: 82 67 48                 a0 = u64 [s1 + 0x48]
  5072: 7b 17 58                 u64 [sp + 0x58] = a0
  5075: 82 67 50                 a0 = u64 [s1 + 0x50]
  5078: 7b 17 48                 u64 [sp + 0x48] = a0
  5081: 82 67 58                 a0 = u64 [s1 + 0x58]
  5084: 7b 17 38                 u64 [sp + 0x38] = a0
  5087: 49 26 10 01              u64 [s1 + 272] = 0
  5091: 49 26 08 01              u64 [s1 + 264] = 0
  5095: 49 26 00 01              u64 [s1 + 256] = 0
  5099: 49 26 f8 00              u64 [s1 + 248] = 0
  5103: 49 26 f0 00              u64 [s1 + 240] = 0
  5107: 49 26 e8 00              u64 [s1 + 232] = 0
  5111: 49 26 e0 00              u64 [s1 + 224] = 0
  5115: 49 26 d8 00              u64 [s1 + 216] = 0
  5119: 95 17 10 52 01           a0 = sp + 0x15210
  5124: 33 09 00 01              a2 = 0x100
  5128: 33 08                    a1 = 0
  5130: 50 20 84 00 72 12        ra = 132, jump @576
      :                          @270 [@dyn 66]
  5136: 95 15 98 40 01           s0 = sp + 0x14098
  5141: 82 57 50                 a0 = u64 [s0 + 0x50]
  5144: 95 18 d0 51 01           a1 = sp + 0x151d0
  5149: 82 19 40                 a2 = u64 [sp + 0x40]
  5152: 82 1a 58                 a3 = u64 [sp + 0x58]
  5155: 0a 09                    ecalli 9 // 'peek'
  5157: 82 57 50                 a0 = u64 [s0 + 0x50]
  5160: 95 18 10 52 01           a1 = sp + 0x15210
  5165: 82 19 48                 a2 = u64 [sp + 0x48]
  5168: 82 15 38                 s0 = u64 [sp + 0x38]
  5171: 64 5a                    a3 = s0
  5173: 0a 09                    ecalli 9 // 'peek'
  5175: 95 18 d0 51 01           a1 = sp + 0x151d0
  5180: 95 1a 10 52 01           a3 = sp + 0x15210
  5185: 82 17 50                 a0 = u64 [sp + 0x50]
  5188: 82 19 58                 a2 = u64 [sp + 0x58]
  5191: 64 5b                    a4 = s0
  5193: 0a 64                    ecalli 100 // 'log'
  5195: 28 97 fe                 jump @260
      :                          @271
  5198: 95 17 88 53 01           a0 = sp + 0x15388
  5203: 7b 67 d8 00              u64 [s1 + 0xd8] = a0
  5207: 33 08 0a                 a1 = 0xa
  5210: 7b 68 e0 00              u64 [s1 + 0xe0] = a1
  5214: 95 17 90 53 01           a0 = sp + 0x15390
  5219: 7b 67 e8 00              u64 [s1 + 0xe8] = a0
  5223: 7b 18 58                 u64 [sp + 0x58] = a1
  5226: 7b 68 f0 00              u64 [s1 + 0xf0] = a1
  5230: 33 07 b0 04 01           a0 = 0x104b0
  5235: 7b 67 18 01              u64 [s1 + 0x118] = a0
  5239: 49 26 20 01 02           u64 [s1 + 288] = 0x2
  5244: 49 26 38 01              u64 [s1 + 312] = 0
  5248: 95 18 d0 51 01           a1 = sp + 0x151d0
  5253: 7b 68 28 01              u64 [s1 + 0x128] = a1
  5257: 49 26 30 01 02           u64 [s1 + 304] = 0x2
  5262: 95 17 10 53 01           a0 = sp + 0x15310
  5267: 95 18 10 52 01           a1 = sp + 0x15210
  5272: 50 20 86 00 b8 0e        ra = 134, jump @508
      :                          @272 [@dyn 67]
  5278: 82 65 20 02              s0 = u64 [s1 + 0x220]
  5282: 82 6b 28 02              a4 = u64 [s1 + 0x228]
  5286: 95 17 f8 50 01           a0 = sp + 0x150f8
  5291: 82 76 18 02              s1 = u64 [a0 + 0x218]
  5295: 33 07 02                 a0 = 0x2
  5298: 33 08                    a1 = 0
  5300: 33 09                    a2 = 0
  5302: 64 5a                    a3 = s0
  5304: 33 00 88 00              ra = 0x88
  5308: 0a 64                    ecalli 100 // 'log'
  5310: 01                       fallthrough
      :                          @273 [@dyn 68]
  5311: 82 17 60                 a0 = u64 [sp + 0x60]
  5314: c8 67 07                 a0 = a0 + s1
  5317: 53 37 00 00 f0 27        jump @279 if a0 <u 4293918720
      :                          @274
  5323: 33 07 20 10 03           a0 = 0x31020
  5328: 95 77 00 00 10           a0 = a0 + 0x100000
  5333: 01                       fallthrough
      :                          @275
  5334: 82 78                    a1 = u64 [a0]
  5336: c9 87 09                 a2 = a0 - a1
  5339: ab 59 11                 jump @279 if a2 != s0
      :                          @276
  5342: c9 68 09                 a2 = a1 - s1
  5345: 01                       fallthrough
      :                          @277
  5346: 82 7a                    a3 = u64 [a0]
  5348: ab 8a f2                 jump @275 if a3 != a1
      :                          @278
  5351: 7b 79                    u64 [a0] = a2
  5353: 33 0b                    a4 = 0
  5355: 01                       fallthrough
      :                          @279
  5356: 95 16 f8 50 01           s1 = sp + 0x150f8
  5361: 82 65 68                 s0 = u64 [s1 + 0x68]
  5364: 95 17 f8 50 01           a0 = sp + 0x150f8
  5369: 33 09 68                 a2 = 0x68
  5372: 95 18 68 51 01           a1 = sp + 0x15168
  5377: 50 20 8a 00 c9 10        ra = 138, jump @558
      :                          @280 [@dyn 69]
  5383: 9a 57 ff ff ff 0f        a0 = 0xfffffff - s0
  5389: 7b 67 a0 02              u64 [s1 + 0x2a0] = a0
  5393: 95 17 98 53 01           a0 = sp + 0x15398
  5398: 7b 67 d8 00              u64 [s1 + 0xd8] = a0
  5402: 82 17 58                 a0 = u64 [sp + 0x58]
  5405: 7b 67 e0 00              u64 [s1 + 0xe0] = a0
  5409: 95 17 f8 50 01           a0 = sp + 0x150f8
  5414: 7b 67 e8 00              u64 [s1 + 0xe8] = a0
  5418: 33 07 0e                 a0 = 0xe
  5421: 7b 17 58                 u64 [sp + 0x58] = a0
  5424: 7b 67 f0 00              u64 [s1 + 0xf0] = a0
  5428: 33 07 f8 04 01           a0 = 0x104f8
  5433: 7b 67 18 01              u64 [s1 + 0x118] = a0
  5437: 49 26 20 01 02           u64 [s1 + 288] = 0x2
  5442: 49 26 38 01              u64 [s1 + 312] = 0
  5446: 95 18 d0 51 01           a1 = sp + 0x151d0
  5451: 7b 68 28 01              u64 [s1 + 0x128] = a1
  5455: 49 26 30 01 02           u64 [s1 + 304] = 0x2
  5460: 95 17 10 53 01           a0 = sp + 0x15310
  5465: 95 18 10 52 01           a1 = sp + 0x15210
  5470: 50 20 8c 00 f2 0d        ra = 140, jump @508
      :                          @281 [@dyn 70]
  5476: 82 65 20 02              s0 = u64 [s1 + 0x220]
  5480: 82 6b 28 02              a4 = u64 [s1 + 0x228]
  5484: 82 66 18 02              s1 = u64 [s1 + 0x218]
  5488: 33 07 02                 a0 = 0x2
  5491: 33 08                    a1 = 0
  5493: 33 09                    a2 = 0
  5495: 64 5a                    a3 = s0
  5497: 33 00 8e 00              ra = 0x8e
  5501: 0a 64                    ecalli 100 // 'log'
  5503: 01                       fallthrough
      :                          @282 [@dyn 71]
  5504: 82 17 60                 a0 = u64 [sp + 0x60]
  5507: c8 67 07                 a0 = a0 + s1
  5510: 53 37 00 00 f0 27        jump @288 if a0 <u 4293918720
      :                          @283
  5516: 33 07 20 10 03           a0 = 0x31020
  5521: 95 77 00 00 10           a0 = a0 + 0x100000
  5526: 01                       fallthrough
      :                          @284
  5527: 82 78                    a1 = u64 [a0]
  5529: c9 87 09                 a2 = a0 - a1
  5532: ab 59 11                 jump @288 if a2 != s0
      :                          @285
  5535: c9 68 09                 a2 = a1 - s1
  5538: 01                       fallthrough
      :                          @286
  5539: 82 7a                    a3 = u64 [a0]
  5541: ab 8a f2                 jump @284 if a3 != a1
      :                          @287
  5544: 7b 79                    u64 [a0] = a2
  5546: 33 0b                    a4 = 0
  5548: 01                       fallthrough
      :                          @288
  5549: 95 16 f8 50 01           s1 = sp + 0x150f8
  5554: 95 17 f8 50 01           a0 = sp + 0x150f8
  5559: 7b 67 18 02              u64 [s1 + 0x218] = a0
  5563: 82 17 58                 a0 = u64 [sp + 0x58]
  5566: 7b 67 20 02              u64 [s1 + 0x220] = a0
  5570: 33 07 40 05 01           a0 = 0x10540
  5575: 7b 67 18 01              u64 [s1 + 0x118] = a0
  5579: 49 26 20 01 01           u64 [s1 + 288] = 0x1
  5584: 49 26 38 01              u64 [s1 + 312] = 0
  5588: 95 18 10 53 01           a1 = sp + 0x15310
  5593: 7b 68 28 01              u64 [s1 + 0x128] = a1
  5597: 49 26 30 01 01           u64 [s1 + 304] = 0x1
  5602: 95 17 d0 51 01           a0 = sp + 0x151d0
  5607: 95 18 10 52 01           a1 = sp + 0x15210
  5612: 50 20 90 00 64 0d        ra = 144, jump @508
      :                          @289 [@dyn 72]
  5618: 82 65 e0 00              s0 = u64 [s1 + 0xe0]
  5622: 82 6b e8 00              a4 = u64 [s1 + 0xe8]
  5626: 82 66 d8 00              s1 = u64 [s1 + 0xd8]
  5630: 33 07 02                 a0 = 0x2
  5633: 33 08                    a1 = 0
  5635: 33 09                    a2 = 0
  5637: 64 5a                    a3 = s0
  5639: 33 00 92 00              ra = 0x92
  5643: 0a 64                    ecalli 100 // 'log'
  5645: 01                       fallthrough
      :                          @290 [@dyn 73]
  5646: 82 17 60                 a0 = u64 [sp + 0x60]
  5649: c8 67 07                 a0 = a0 + s1
  5652: 53 37 00 00 f0 27        jump @296 if a0 <u 4293918720
      :                          @291
  5658: 33 07 20 10 03           a0 = 0x31020
  5663: 95 77 00 00 10           a0 = a0 + 0x100000
  5668: 01                       fallthrough
      :                          @292
  5669: 82 78                    a1 = u64 [a0]
  5671: c9 87 09                 a2 = a0 - a1
  5674: ab 59 11                 jump @296 if a2 != s0
      :                          @293
  5677: c9 68 09                 a2 = a1 - s1
  5680: 01                       fallthrough
      :                          @294
  5681: 82 7a                    a3 = u64 [a0]
  5683: ab 8a f2                 jump @292 if a3 != a1
      :                          @295
  5686: 7b 79                    u64 [a0] = a2
  5688: 33 0b                    a4 = 0
  5690: 01                       fallthrough
      :                          @296
  5691: 95 17 f8 50 01           a0 = sp + 0x150f8
  5696: 82 75 38                 s0 = u64 [a0 + 0x38]
  5699: 95 17 f8 40 01           a0 = sp + 0x140f8
  5704: 33 09 00 10              a2 = 0x1000
  5708: 33 06 00 10              s1 = 0x1000
  5712: 33 08                    a1 = 0
  5714: 50 20 94 00 2a 10        ra = 148, jump @576
      :                          @297 [@dyn 74]
  5720: 95 1a 98 40 01           a3 = sp + 0x14098
  5725: 82 a7 50                 a0 = u64 [a3 + 0x50]
  5728: 7a a7 58                 u32 [a3 + 0x58] = a0
  5731: 98 58 0c                 a1 = s0 >> 0xc
  5734: 7a a8 5c                 u32 [a3 + 0x5c] = a1
  5737: 33 0a 00 10              a3 = 0x1000
  5741: 95 18 f8 40 01           a1 = sp + 0x140f8
  5746: 64 59                    a2 = s0
  5748: 0a 09                    ecalli 9 // 'peek'
  5750: 83 68 08                 i32 a1 = s1 + 0x8
  5753: 7b 18 58                 u64 [sp + 0x58] = a1
  5756: 95 17 f0 40 01           a0 = sp + 0x140f0
  5761: 0a 07                    ecalli 7 // 'export'
  5763: 33 09 00 10              a2 = 0x1000
  5767: 95 17 f8 40 01           a0 = sp + 0x140f8
  5772: 33 08                    a1 = 0
  5774: 50 20 96 00 ee 0f        ra = 150, jump @576
      :                          @298 [@dyn 75]
  5780: 95 1a 98 40 01           a3 = sp + 0x14098
  5785: 82 a7 50                 a0 = u64 [a3 + 0x50]
  5788: 7a a7 58                 u32 [a3 + 0x58] = a0
  5791: c8 65 09                 a2 = s0 + s1
  5794: 98 98 0c                 a1 = a2 >> 0xc
  5797: 7a a8 5c                 u32 [a3 + 0x5c] = a1
  5800: 33 0a 00 10              a3 = 0x1000
  5804: 95 18 f8 40 01           a1 = sp + 0x140f8
  5809: 0a 09                    ecalli 9 // 'peek'
  5811: 95 17 f0 40 01           a0 = sp + 0x140f0
  5816: 82 16 58                 s1 = u64 [sp + 0x58]
  5819: 64 68                    a1 = s1
  5821: 0a 07                    ecalli 7 // 'export'
  5823: 33 09 00 10              a2 = 0x1000
  5827: 95 17 f8 40 01           a0 = sp + 0x140f8
  5832: 33 08                    a1 = 0
  5834: 50 20 98 00 b2 0f        ra = 152, jump @576
      :                          @299 [@dyn 76]
  5840: 95 1a 98 40 01           a3 = sp + 0x14098
  5845: 82 a7 50                 a0 = u64 [a3 + 0x50]
  5848: 7a a7 58                 u32 [a3 + 0x58] = a0
  5851: 95 59 00 20              a2 = s0 + 0x2000
  5855: 98 98 0c                 a1 = a2 >> 0xc
  5858: 7a a8 5c                 u32 [a3 + 0x5c] = a1
  5861: 33 0a 00 10              a3 = 0x1000
  5865: 95 18 f8 40 01           a1 = sp + 0x140f8
  5870: 0a 09                    ecalli 9 // 'peek'
  5872: 95 17 f0 40 01           a0 = sp + 0x140f0
  5877: 64 68                    a1 = s1
  5879: 0a 07                    ecalli 7 // 'export'
  5881: 33 09 00 10              a2 = 0x1000
  5885: 95 17 f8 40 01           a0 = sp + 0x140f8
  5890: 33 08                    a1 = 0
  5892: 50 20 9a 00 78 0f        ra = 154, jump @576
      :                          @300 [@dyn 77]
  5898: 95 18 98 40 01           a1 = sp + 0x14098
  5903: 82 87 50                 a0 = u64 [a1 + 0x50]
  5906: 7a 87 58                 u32 [a1 + 0x58] = a0
  5909: 95 1a 98 40 01           a3 = sp + 0x14098
  5914: 95 59 00 30              a2 = s0 + 0x3000
  5918: 64 56                    s1 = s0
  5920: 98 98 0c                 a1 = a2 >> 0xc
  5923: 7a a8 5c                 u32 [a3 + 0x5c] = a1
  5926: 33 0a 00 10              a3 = 0x1000
  5930: 95 18 f8 40 01           a1 = sp + 0x140f8
  5935: 0a 09                    ecalli 9 // 'peek'
  5937: 95 17 f0 40 01           a0 = sp + 0x140f0
  5942: 82 15 58                 s0 = u64 [sp + 0x58]
  5945: 64 58                    a1 = s0
  5947: 0a 07                    ecalli 7 // 'export'
  5949: 33 09 00 10              a2 = 0x1000
  5953: 95 17 f8 40 01           a0 = sp + 0x140f8
  5958: 33 08                    a1 = 0
  5960: 50 20 9c 00 34 0f        ra = 156, jump @576
      :                          @301 [@dyn 78]
  5966: 95 1a 98 40 01           a3 = sp + 0x14098
  5971: 82 a7 50                 a0 = u64 [a3 + 0x50]
  5974: 7a a7 58                 u32 [a3 + 0x58] = a0
  5977: 95 69 00 40              a2 = s1 + 0x4000
  5981: 98 98 0c                 a1 = a2 >> 0xc
  5984: 7a a8 5c                 u32 [a3 + 0x5c] = a1
  5987: 33 0a 00 10              a3 = 0x1000
  5991: 95 18 f8 40 01           a1 = sp + 0x140f8
  5996: 0a 09                    ecalli 9 // 'peek'
  5998: 95 17 f0 40 01           a0 = sp + 0x140f0
  6003: 64 58                    a1 = s0
  6005: 0a 07                    ecalli 7 // 'export'
  6007: 33 09 00 10              a2 = 0x1000
  6011: 95 17 f8 40 01           a0 = sp + 0x140f8
  6016: 33 08                    a1 = 0
  6018: 50 20 9e 00 fa 0e        ra = 158, jump @576
      :                          @302 [@dyn 79]
  6024: 95 18 98 40 01           a1 = sp + 0x14098
  6029: 82 87 50                 a0 = u64 [a1 + 0x50]
  6032: 7a 87 58                 u32 [a1 + 0x58] = a0
  6035: 95 1a 98 40 01           a3 = sp + 0x14098
  6040: 64 65                    s0 = s1
  6042: 7b 16 50                 u64 [sp + 0x50] = s1
  6045: 95 69 00 50              a2 = s1 + 0x5000
  6049: 98 98 0c                 a1 = a2 >> 0xc
  6052: 7a a8 5c                 u32 [a3 + 0x5c] = a1
  6055: 33 0a 00 10              a3 = 0x1000
  6059: 95 18 f8 40 01           a1 = sp + 0x140f8
  6064: 0a 09                    ecalli 9 // 'peek'
  6066: 95 17 f0 40 01           a0 = sp + 0x140f0
  6071: 82 16 58                 s1 = u64 [sp + 0x58]
  6074: 64 68                    a1 = s1
  6076: 0a 07                    ecalli 7 // 'export'
  6078: 33 09 00 10              a2 = 0x1000
  6082: 95 17 f8 40 01           a0 = sp + 0x140f8
  6087: 33 08                    a1 = 0
  6089: 50 20 a0 00 b3 0e        ra = 160, jump @576
      :                          @303 [@dyn 80]
  6095: 95 1a 98 40 01           a3 = sp + 0x14098
  6100: 82 a7 50                 a0 = u64 [a3 + 0x50]
  6103: 7a a7 58                 u32 [a3 + 0x58] = a0
  6106: 95 59 00 60              a2 = s0 + 0x6000
  6110: 98 98 0c                 a1 = a2 >> 0xc
  6113: 7a a8 5c                 u32 [a3 + 0x5c] = a1
  6116: 33 0a 00 10              a3 = 0x1000
  6120: 95 18 f8 40 01           a1 = sp + 0x140f8
  6125: 0a 09                    ecalli 9 // 'peek'
  6127: 95 17 f0 40 01           a0 = sp + 0x140f0
  6132: 64 68                    a1 = s1
  6134: 0a 07                    ecalli 7 // 'export'
  6136: 33 09 00 10              a2 = 0x1000
  6140: 95 17 f8 40 01           a0 = sp + 0x140f8
  6145: 33 08                    a1 = 0
  6147: 50 20 a2 00 79 0e        ra = 162, jump @576
      :                          @304 [@dyn 81]
  6153: 95 18 98 40 01           a1 = sp + 0x14098
  6158: 82 87 50                 a0 = u64 [a1 + 0x50]
  6161: 7a 87 58                 u32 [a1 + 0x58] = a0
  6164: 95 1a 98 40 01           a3 = sp + 0x14098
  6169: 95 59 00 70              a2 = s0 + 0x7000
  6173: 98 98 0c                 a1 = a2 >> 0xc
  6176: 7a a8 5c                 u32 [a3 + 0x5c] = a1
  6179: 33 0a 00 10              a3 = 0x1000
  6183: 95 18 f8 40 01           a1 = sp + 0x140f8
  6188: 0a 09                    ecalli 9 // 'peek'
  6190: 95 17 f0 40 01           a0 = sp + 0x140f0
  6195: 64 65                    s0 = s1
  6197: 64 68                    a1 = s1
  6199: 0a 07                    ecalli 7 // 'export'
  6201: 33 09 00 10              a2 = 0x1000
  6205: 95 17 f8 40 01           a0 = sp + 0x140f8
  6210: 33 08                    a1 = 0
  6212: 50 20 a4 00 38 0e        ra = 164, jump @576
      :                          @305 [@dyn 82]
  6218: 95 1a 98 40 01           a3 = sp + 0x14098
  6223: 82 a7 50                 a0 = u64 [a3 + 0x50]
  6226: 7a a7 58                 u32 [a3 + 0x58] = a0
  6229: 82 18 50                 a1 = u64 [sp + 0x50]
  6232: 95 89 00 80 00           a2 = a1 + 0x8000
  6237: 98 98 0c                 a1 = a2 >> 0xc
  6240: 7a a8 5c                 u32 [a3 + 0x5c] = a1
  6243: 95 16 98 40 01           s1 = sp + 0x14098
  6248: 33 0a 00 10              a3 = 0x1000
  6252: 95 18 f8 40 01           a1 = sp + 0x140f8
  6257: 0a 09                    ecalli 9 // 'peek'
  6259: 95 17 f0 40 01           a0 = sp + 0x140f0
  6264: 64 58                    a1 = s0
  6266: 0a 07                    ecalli 7 // 'export'
  6268: 82 67 50                 a0 = u64 [s1 + 0x50]
  6271: 0a 0d                    ecalli 13 // 'expunge'
  6273: 95 17 70 53 01           a0 = sp + 0x15370
  6278: 95 18 f8 50 01           a1 = sp + 0x150f8
  6283: 7b 87 18 02              u64 [a1 + 0x218] = a0
  6287: 33 07 0a                 a0 = 0xa
  6290: 7b 87 20 02              u64 [a1 + 0x220] = a0
  6294: 33 07 80 05 01           a0 = 0x10580
  6299: 7b 87 18 01              u64 [a1 + 0x118] = a0
  6303: 95 17 10 53 01           a0 = sp + 0x15310
  6308: 7b 87 28 01              u64 [a1 + 0x128] = a0
  6312: 49 28 20 01 01           u64 [a1 + 288] = 0x1
  6317: 49 28 30 01 01           u64 [a1 + 304] = 0x1
  6322: 49 28 38 01              u64 [a1 + 312] = 0
  6326: 95 16 f8 50 01           s1 = sp + 0x150f8
  6331: 95 17 d0 51 01           a0 = sp + 0x151d0
  6336: 95 18 10 52 01           a1 = sp + 0x15210
  6341: 50 20 a6 00 8b 0a        ra = 166, jump @508
      :                          @306 [@dyn 83]
  6347: 82 65 e0 00              s0 = u64 [s1 + 0xe0]
  6351: 82 6b e8 00              a4 = u64 [s1 + 0xe8]
  6355: 82 66 d8 00              s1 = u64 [s1 + 0xd8]
  6359: 33 07 02                 a0 = 0x2
  6362: 33 08                    a1 = 0
  6364: 33 09                    a2 = 0
  6366: 64 5a                    a3 = s0
  6368: 33 00 a8 00              ra = 0xa8
  6372: 0a 64                    ecalli 100 // 'log'
  6374: 01                       fallthrough
      :                          @307 [@dyn 84]
  6375: 82 17 60                 a0 = u64 [sp + 0x60]
  6378: c8 67 07                 a0 = a0 + s1
  6381: 55 37 00 00 f0 09        jump @309 if a0 >=u 4293918720
      :                          @308
  6387: 28 b1 eb                 jump @91
      :                          @309
  6390: 33 07 20 10 03           a0 = 0x31020
  6395: 95 77 00 00 10           a0 = a0 + 0x100000
  6400: 01                       fallthrough
      :                          @310
  6401: 82 78                    a1 = u64 [a0]
  6403: c9 87 09                 a2 = a0 - a1
  6406: aa 59 06                 jump @312 if a2 == s0
      :                          @311
  6409: 28 9b eb                 jump @91
      :                          @312
  6412: c9 68 09                 a2 = a1 - s1
  6415: 01                       fallthrough
      :                          @313
  6416: 82 7a                    a3 = u64 [a0]
  6418: ab 8a ef                 jump @310 if a3 != a1
      :                          @314
  6421: 7b 79                    u64 [a0] = a2
  6423: 33 0b                    a4 = 0
  6425: 01                       fallthrough
      :                          @315
  6426: ab 8a e7                 jump @310 if a3 != a1
      :                          @316
  6429: 28 87 eb                 jump @91
      :                          @317
  6432: 95 16 f8 50 01           s1 = sp + 0x150f8
  6437: 82 67 48 02              a0 = u64 [s1 + 0x248]
  6441: 95 77 ff ff 00           a0 = a0 + 0xffff
  6446: 84 77 00 00 ff           a0 = a0 & 0xffffffffffff0000
  6451: 95 77 00 00 02           a0 = a0 + 0x20000
  6456: 7b 67 98 02              u64 [s1 + 0x298] = a0
  6460: 98 77 0c                 a0 = a0 >> 0xc
  6463: 7b 67 a0 02              u64 [s1 + 0x2a0] = a0
  6467: 95 17 98 53 01           a0 = sp + 0x15398
  6472: 7b 67 18 01              u64 [s1 + 0x118] = a0
  6476: 33 08 f2 00              a1 = 0xf2
  6480: 7b 68 20 01              u64 [s1 + 0x120] = a1
  6484: 95 17 68 53 01           a0 = sp + 0x15368
  6489: 7b 67 28 01              u64 [s1 + 0x128] = a0
  6493: 7b 18 58                 u64 [sp + 0x58] = a1
  6496: 7b 68 30 01              u64 [s1 + 0x130] = a1
  6500: 33 07 78 0a 01           a0 = 0x10a78
  6505: 95 19 98 40 01           a2 = sp + 0x14098
  6510: 7b 97 58                 u64 [a2 + 0x58] = a0
  6513: 49 19 60 02              u64 [a2 + 96] = 0x2
  6517: 49 19 78                 u64 [a2 + 120] = 0
  6520: 95 18 10 52 01           a1 = sp + 0x15210
  6525: 7b 98 68                 u64 [a2 + 0x68] = a1
  6528: 49 19 70 02              u64 [a2 + 112] = 0x2
  6532: 95 17 60 51 01           a0 = sp + 0x15160
  6537: 95 18 f0 40 01           a1 = sp + 0x140f0
  6542: 50 20 aa 00 c2 09        ra = 170, jump @508
      :                          @318 [@dyn 85]
  6548: 82 65 70                 s0 = u64 [s1 + 0x70]
  6551: 82 6b 78                 a4 = u64 [s1 + 0x78]
  6554: 82 66 68                 s1 = u64 [s1 + 0x68]
  6557: 33 07 02                 a0 = 0x2
  6560: 33 08                    a1 = 0
  6562: 33 09                    a2 = 0
  6564: 64 5a                    a3 = s0
  6566: 33 00 ac 00              ra = 0xac
  6570: 0a 64                    ecalli 100 // 'log'
  6572: 01                       fallthrough
      :                          @319 [@dyn 86]
  6573: 82 17 60                 a0 = u64 [sp + 0x60]
  6576: c8 67 07                 a0 = a0 + s1
  6579: 53 37 00 00 f0 25        jump @325 if a0 <u 4293918720
      :                          @320
  6585: 33 07 20 10 03           a0 = 0x31020
  6590: 95 77 00 00 10           a0 = a0 + 0x100000
  6595: 01                       fallthrough
      :                          @321
  6596: 82 78                    a1 = u64 [a0]
  6598: c9 87 09                 a2 = a0 - a1
  6601: ab 59 0f                 jump @325 if a2 != s0
      :                          @322
  6604: c9 68 09                 a2 = a1 - s1
  6607: 01                       fallthrough
      :                          @323
  6608: 82 7a                    a3 = u64 [a0]
  6610: ab 8a f2                 jump @321 if a3 != a1
      :                          @324
  6613: 7b 79                    u64 [a0] = a2
  6615: 01                       fallthrough
      :                          @325
  6616: 95 16 f8 50 01           s1 = sp + 0x150f8
  6621: 80 67 64 02              a0 = u32 [s1 + 0x264]
  6625: 82 68 a0 02              a1 = u64 [s1 + 0x2a0]
  6629: 82 69 70 02              a2 = u64 [s1 + 0x270]
  6633: 33 0a 02                 a3 = 0x2
  6636: 0a 0b                    ecalli 11 // 'pages'
  6638: 7b 67 18 02              u64 [s1 + 0x218] = a0
  6642: 95 17 10 53 01           a0 = sp + 0x15310
  6647: 7b 67 68                 u64 [s1 + 0x68] = a0
  6650: 82 17 58                 a0 = u64 [sp + 0x58]
  6653: 7b 67 70                 u64 [s1 + 0x70] = a0
  6656: 33 07 e0 0a 01           a0 = 0x10ae0
  6661: 95 18 98 40 01           a1 = sp + 0x14098
  6666: 7b 87 58                 u64 [a1 + 0x58] = a0
  6669: 95 17 60 51 01           a0 = sp + 0x15160
  6674: 7b 87 68                 u64 [a1 + 0x68] = a0
  6677: 49 18 60 01              u64 [a1 + 96] = 0x1
  6681: 49 18 70 01              u64 [a1 + 112] = 0x1
  6685: 49 18 78                 u64 [a1 + 120] = 0
  6688: 95 17 10 52 01           a0 = sp + 0x15210
  6693: 95 18 f0 40 01           a1 = sp + 0x140f0
  6698: 50 20 ae 00 26 09        ra = 174, jump @508
      :                          @326 [@dyn 87]
  6704: 82 65 20 01              s0 = u64 [s1 + 0x120]
  6708: 82 6b 28 01              a4 = u64 [s1 + 0x128]
  6712: 82 66 18 01              s1 = u64 [s1 + 0x118]
  6716: 33 07 02                 a0 = 0x2
  6719: 33 08                    a1 = 0
  6721: 33 09                    a2 = 0
  6723: 64 5a                    a3 = s0
  6725: 33 00 b0 00              ra = 0xb0
  6729: 0a 64                    ecalli 100 // 'log'
  6731: 01                       fallthrough
      :                          @327 [@dyn 88]
  6732: 82 17 60                 a0 = u64 [sp + 0x60]
  6735: c8 67 07                 a0 = a0 + s1
  6738: 53 37 00 00 f0 27        jump @333 if a0 <u 4293918720
      :                          @328
  6744: 33 07 20 10 03           a0 = 0x31020
  6749: 95 77 00 00 10           a0 = a0 + 0x100000
  6754: 01                       fallthrough
      :                          @329
  6755: 82 78                    a1 = u64 [a0]
  6757: c9 87 09                 a2 = a0 - a1
  6760: ab 59 11                 jump @333 if a2 != s0
      :                          @330
  6763: c9 68 09                 a2 = a1 - s1
  6766: 01                       fallthrough
      :                          @331
  6767: 82 7a                    a3 = u64 [a0]
  6769: ab 8a f2                 jump @329 if a3 != a1
      :                          @332
  6772: 7b 79                    u64 [a0] = a2
  6774: 33 0b                    a4 = 0
  6776: 01                       fallthrough
      :                          @333
  6777: 95 17 f8 50 01           a0 = sp + 0x150f8
  6782: 82 77 18 02              a0 = u64 [a0 + 0x218]
  6786: 51 07 99 00              jump @344 if a0 == 0
      :                          @334
  6790: 95 17 10 53 01           a0 = sp + 0x15310
  6795: 95 16 f8 50 01           s1 = sp + 0x150f8
  6800: 7b 67 68                 u64 [s1 + 0x68] = a0
  6803: 33 07 f2 00              a0 = 0xf2
  6807: 7b 67 70                 u64 [s1 + 0x70] = a0
  6810: 33 07 08 0e 01           a0 = 0x10e08
  6815: 95 19 98 40 01           a2 = sp + 0x14098
  6820: 7b 97 58                 u64 [a2 + 0x58] = a0
  6823: 49 19 60 01              u64 [a2 + 96] = 0x1
  6827: 49 19 78                 u64 [a2 + 120] = 0
  6830: 95 18 60 51 01           a1 = sp + 0x15160
  6835: 7b 98 68                 u64 [a2 + 0x68] = a1
  6838: 49 19 70 01              u64 [a2 + 112] = 0x1
  6842: 95 17 10 52 01           a0 = sp + 0x15210
  6847: 95 18 f0 40 01           a1 = sp + 0x140f0
  6852: 50 20 b2 00 8c 08        ra = 178, jump @508
      :                          @335 [@dyn 89]
  6858: 82 65 20 01              s0 = u64 [s1 + 0x120]
  6862: 82 6b 28 01              a4 = u64 [s1 + 0x128]
  6866: 82 66 18 01              s1 = u64 [s1 + 0x118]
  6870: 33 07 01                 a0 = 0x1
  6873: 33 08                    a1 = 0
  6875: 33 09                    a2 = 0
  6877: 64 5a                    a3 = s0
  6879: 33 00 b4 00              ra = 0xb4
  6883: 0a 64                    ecalli 100 // 'log'
  6885: 01                       fallthrough
      :                          @336 [@dyn 90]
  6886: 82 17 60                 a0 = u64 [sp + 0x60]
  6889: c8 67 07                 a0 = a0 + s1
  6892: 53 37 00 00 f0 f4 f2     jump @203 if a0 <u 4293918720
      :                          @337
  6899: 33 07 20 10 03           a0 = 0x31020
  6904: 95 77 00 00 10           a0 = a0 + 0x100000
  6909: 01                       fallthrough
      :                          @338
  6910: 82 78                    a1 = u64 [a0]
  6912: c9 87 09                 a2 = a0 - a1
  6915: ab 59 dd f2              jump @203 if a2 != s0
      :                          @339
  6919: c9 68 09                 a2 = a1 - s1
  6922: 01                       fallthrough
      :                          @340
  6923: 82 7a                    a3 = u64 [a0]
  6925: ab 8a f1                 jump @338 if a3 != a1
      :                          @341
  6928: 7b 79                    u64 [a0] = a2
  6930: 33 0b                    a4 = 0
  6932: 01                       fallthrough
      :                          @342
  6933: ab 8a e9                 jump @338 if a3 != a1
      :                          @343
  6936: 28 c8 f2                 jump @203
      :                          @344
  6939: 95 16 f8 50 01           s1 = sp + 0x150f8
  6944: 82 67 38 02              a0 = u64 [s1 + 0x238]
  6948: 82 18 50                 a1 = u64 [sp + 0x50]
  6951: c8 87 07                 a0 = a0 + a1
  6954: 84 77 00 f0              a0 = a0 & 0xfffffffffffff000
  6958: 14 08 00 00 fe fe 00 00 00 00 a1 = 0xfefe0000
  6968: c9 78 08                 a1 = a1 - a0
  6971: 98 88 0c                 a1 = a1 >> 0xc
  6974: 7b 68 d8 00              u64 [s1 + 0xd8] = a1
  6978: 95 17 d0 51 01           a0 = sp + 0x151d0
  6983: 7b 67 18 01              u64 [s1 + 0x118] = a0
  6987: 33 08 f2 00              a1 = 0xf2
  6991: 7b 68 20 01              u64 [s1 + 0x120] = a1
  6995: 95 17 70 53 01           a0 = sp + 0x15370
  7000: 7b 67 28 01              u64 [s1 + 0x128] = a0
  7004: 7b 18 58                 u64 [sp + 0x58] = a1
  7007: 7b 68 30 01              u64 [s1 + 0x130] = a1
  7011: 33 07 48 0b 01           a0 = 0x10b48
  7016: 95 19 98 40 01           a2 = sp + 0x14098
  7021: 7b 97 58                 u64 [a2 + 0x58] = a0
  7024: 49 19 60 02              u64 [a2 + 96] = 0x2
  7028: 49 19 78                 u64 [a2 + 120] = 0
  7031: 95 18 10 52 01           a1 = sp + 0x15210
  7036: 7b 98 68                 u64 [a2 + 0x68] = a1
  7039: 49 19 70 02              u64 [a2 + 112] = 0x2
  7043: 95 17 60 51 01           a0 = sp + 0x15160
  7048: 95 18 f0 40 01           a1 = sp + 0x140f0
  7053: 50 20 b6 00 c3 07        ra = 182, jump @508
      :                          @345 [@dyn 91]
  7059: 82 65 70                 s0 = u64 [s1 + 0x70]
  7062: 82 6b 78                 a4 = u64 [s1 + 0x78]
  7065: 82 66 68                 s1 = u64 [s1 + 0x68]
  7068: 33 07 02                 a0 = 0x2
  7071: 33 08                    a1 = 0
  7073: 33 09                    a2 = 0
  7075: 64 5a                    a3 = s0
  7077: 33 00 b8 00              ra = 0xb8
  7081: 0a 64                    ecalli 100 // 'log'
  7083: 01                       fallthrough
      :                          @346 [@dyn 92]
  7084: 82 17 60                 a0 = u64 [sp + 0x60]
  7087: c8 67 07                 a0 = a0 + s1
  7090: 53 37 00 00 f0 25        jump @352 if a0 <u 4293918720
      :                          @347
  7096: 33 07 20 10 03           a0 = 0x31020
  7101: 95 77 00 00 10           a0 = a0 + 0x100000
  7106: 01                       fallthrough
      :                          @348
  7107: 82 78                    a1 = u64 [a0]
  7109: c9 87 09                 a2 = a0 - a1
  7112: ab 59 0f                 jump @352 if a2 != s0
      :                          @349
  7115: c9 68 09                 a2 = a1 - s1
  7118: 01                       fallthrough
      :                          @350
  7119: 82 7a                    a3 = u64 [a0]
  7121: ab 8a f2                 jump @348 if a3 != a1
      :                          @351
  7124: 7b 79                    u64 [a0] = a2
  7126: 01                       fallthrough
      :                          @352
  7127: 95 16 f8 50 01           s1 = sp + 0x150f8
  7132: 80 67 64 02              a0 = u32 [s1 + 0x264]
  7136: 82 68 d8 00              a1 = u64 [s1 + 0xd8]
  7140: 82 69 78 02              a2 = u64 [s1 + 0x278]
  7144: 33 0a 02                 a3 = 0x2
  7147: 0a 0b                    ecalli 11 // 'pages'
  7149: 7b 67                    u64 [s1] = a0
  7151: 82 17 58                 a0 = u64 [sp + 0x58]
  7154: 7b 67 70                 u64 [s1 + 0x70] = a0
  7157: 33 07 a8 0b 01           a0 = 0x10ba8
  7162: 95 18 98 40 01           a1 = sp + 0x14098
  7167: 7b 87 58                 u64 [a1 + 0x58] = a0
  7170: 95 17 60 51 01           a0 = sp + 0x15160
  7175: 7b 87 68                 u64 [a1 + 0x68] = a0
  7178: 49 18 60 01              u64 [a1 + 96] = 0x1
  7182: 49 18 70 01              u64 [a1 + 112] = 0x1
  7186: 7b 66 68                 u64 [s1 + 0x68] = s1
  7189: 49 18 78                 u64 [a1 + 120] = 0
  7192: 95 17 10 52 01           a0 = sp + 0x15210
  7197: 95 18 f0 40 01           a1 = sp + 0x140f0
  7202: 50 20 ba 00 2e 07        ra = 186, jump @508
      :                          @353 [@dyn 93]
  7208: 82 65 20 01              s0 = u64 [s1 + 0x120]
  7212: 82 6b 28 01              a4 = u64 [s1 + 0x128]
  7216: 82 66 18 01              s1 = u64 [s1 + 0x118]
  7220: 33 07 02                 a0 = 0x2
  7223: 33 08                    a1 = 0
  7225: 33 09                    a2 = 0
  7227: 64 5a                    a3 = s0
  7229: 33 00 bc 00              ra = 0xbc
  7233: 0a 64                    ecalli 100 // 'log'
  7235: 01                       fallthrough
      :                          @354 [@dyn 94]
  7236: 82 17 60                 a0 = u64 [sp + 0x60]
  7239: c8 67 07                 a0 = a0 + s1
  7242: 53 37 00 00 f0 27        jump @360 if a0 <u 4293918720
      :                          @355
  7248: 33 07 20 10 03           a0 = 0x31020
  7253: 95 77 00 00 10           a0 = a0 + 0x100000
  7258: 01                       fallthrough
      :                          @356
  7259: 82 78                    a1 = u64 [a0]
  7261: c9 87 09                 a2 = a0 - a1
  7264: ab 59 11                 jump @360 if a2 != s0
      :                          @357
  7267: c9 68 09                 a2 = a1 - s1
  7270: 01                       fallthrough
      :                          @358
  7271: 82 7a                    a3 = u64 [a0]
  7273: ab 8a f2                 jump @356 if a3 != a1
      :                          @359
  7276: 7b 79                    u64 [a0] = a2
  7278: 33 0b                    a4 = 0
  7280: 01                       fallthrough
      :                          @360
  7281: 95 17 f8 50 01           a0 = sp + 0x150f8
  7286: 82 77                    a0 = u64 [a0]
  7288: 51 07 17                 jump @362 if a0 == 0
      :                          @361
  7291: 33 0a 82 0d 01           a3 = 0x10d82
  7296: 33 07 01                 a0 = 0x1
  7299: 33 0b 3c                 a4 = 0x3c
  7302: 33 08                    a1 = 0
  7304: 33 09                    a2 = 0
  7306: 0a 64                    ecalli 100 // 'log'
  7308: 28 54 f1                 jump @203
      :                          @362
  7311: 95 17 38 53 01           a0 = sp + 0x15338
  7316: 95 19 98 40 01           a2 = sp + 0x14098
  7321: 7b 97 58                 u64 [a2 + 0x58] = a0
  7324: 33 07 22 01              a0 = 0x122
  7328: 7b 97 60                 u64 [a2 + 0x60] = a0
  7331: 95 18 78 53 01           a1 = sp + 0x15378
  7336: 7b 98 68                 u64 [a2 + 0x68] = a1
  7339: 7b 97 70                 u64 [a2 + 0x70] = a0
  7342: 95 17 40 53 01           a0 = sp + 0x15340
  7347: 7b 97 78                 u64 [a2 + 0x78] = a0
  7350: 33 07 f2 00              a0 = 0xf2
  7354: 7b 97 80 00              u64 [a2 + 0x80] = a0
  7358: 33 07 18 0c 01           a0 = 0x10c18
  7363: 95 16 f8 50 01           s1 = sp + 0x150f8
  7368: 7b 67 18 01              u64 [s1 + 0x118] = a0
  7372: 49 26 20 01 03           u64 [s1 + 288] = 0x3
  7377: 49 26 38 01              u64 [s1 + 312] = 0
  7381: 95 18 f0 40 01           a1 = sp + 0x140f0
  7386: 7b 68 28 01              u64 [s1 + 0x128] = a1
  7390: 49 26 30 01 03           u64 [s1 + 304] = 0x3
  7395: 95 17 60 51 01           a0 = sp + 0x15160
  7400: 95 18 10 52 01           a1 = sp + 0x15210
  7405: 50 20 be 00 63 06        ra = 190, jump @508
      :                          @363 [@dyn 95]
  7411: 82 65 70                 s0 = u64 [s1 + 0x70]
  7414: 82 6b 78                 a4 = u64 [s1 + 0x78]
  7417: 82 66 68                 s1 = u64 [s1 + 0x68]
  7420: 33 07 02                 a0 = 0x2
  7423: 33 08                    a1 = 0
  7425: 33 09                    a2 = 0
  7427: 64 5a                    a3 = s0
  7429: 33 00 c0 00              ra = 0xc0
  7433: 0a 64                    ecalli 100 // 'log'
  7435: 01                       fallthrough
      :                          @364 [@dyn 96]
  7436: 82 17 60                 a0 = u64 [sp + 0x60]
  7439: c8 67 07                 a0 = a0 + s1
  7442: 53 37 00 00 f0 25        jump @370 if a0 <u 4293918720
      :                          @365
  7448: 33 07 20 10 03           a0 = 0x31020
  7453: 95 77 00 00 10           a0 = a0 + 0x100000
  7458: 01                       fallthrough
      :                          @366
  7459: 82 78                    a1 = u64 [a0]
  7461: c9 87 09                 a2 = a0 - a1
  7464: ab 59 0f                 jump @370 if a2 != s0
      :                          @367
  7467: c9 68 09                 a2 = a1 - s1
  7470: 01                       fallthrough
      :                          @368
  7471: 82 7a                    a3 = u64 [a0]
  7473: ab 8a f2                 jump @366 if a3 != a1
      :                          @369
  7476: 7b 79                    u64 [a0] = a2
  7478: 01                       fallthrough
      :                          @370
  7479: 95 1a f8 50 01           a3 = sp + 0x150f8
  7484: 80 a7 64 02              a0 = u32 [a3 + 0x264]
  7488: 82 a8 40 02              a1 = u64 [a3 + 0x240]
  7492: 82 a9 80 02              a2 = u64 [a3 + 0x280]
  7496: 82 aa 48 02              a3 = u64 [a3 + 0x248]
  7500: 0a 0a                    ecalli 10 // 'poke'
  7502: 01                       fallthrough
      :                          @371
  7503: 51 07 17                 jump @373 if a0 == 0
      :                          @372
  7506: 33 0a 44 0d 01           a3 = 0x10d44
  7511: 33 07 01                 a0 = 0x1
  7514: 33 0b 3e                 a4 = 0x3e
  7517: 33 08                    a1 = 0
  7519: 33 09                    a2 = 0
  7521: 0a 64                    ecalli 100 // 'log'
  7523: 28 7d f0                 jump @203
      :                          @373
  7526: 95 17 48 53 01           a0 = sp + 0x15348
  7531: 95 19 98 40 01           a2 = sp + 0x14098
  7536: 7b 97 58                 u64 [a2 + 0x58] = a0
  7539: 33 07 22 01              a0 = 0x122
  7543: 7b 97 60                 u64 [a2 + 0x60] = a0
  7546: 95 18 90 53 01           a1 = sp + 0x15390
  7551: 7b 98 68                 u64 [a2 + 0x68] = a1
  7554: 7b 97 70                 u64 [a2 + 0x70] = a0
  7557: 95 17 50 53 01           a0 = sp + 0x15350
  7562: 7b 97 78                 u64 [a2 + 0x78] = a0
  7565: 33 07 f2 00              a0 = 0xf2
  7569: 7b 97 80 00              u64 [a2 + 0x80] = a0
  7573: 33 07 a8 0c 01           a0 = 0x10ca8
  7578: 95 16 f8 50 01           s1 = sp + 0x150f8
  7583: 7b 67 18 01              u64 [s1 + 0x118] = a0
  7587: 49 26 20 01 03           u64 [s1 + 288] = 0x3
  7592: 49 26 38 01              u64 [s1 + 312] = 0
  7596: 95 18 f0 40 01           a1 = sp + 0x140f0
  7601: 7b 68 28 01              u64 [s1 + 0x128] = a1
  7605: 49 26 30 01 03           u64 [s1 + 304] = 0x3
  7610: 95 17 60 51 01           a0 = sp + 0x15160
  7615: 95 18 10 52 01           a1 = sp + 0x15210
  7620: 50 20 c2 00 8c 05        ra = 194, jump @508
      :                          @374 [@dyn 97]
  7626: 82 65 70                 s0 = u64 [s1 + 0x70]
  7629: 82 6b 78                 a4 = u64 [s1 + 0x78]
  7632: 82 66 68                 s1 = u64 [s1 + 0x68]
  7635: 33 07 02                 a0 = 0x2
  7638: 33 08                    a1 = 0
  7640: 33 09                    a2 = 0
  7642: 64 5a                    a3 = s0
  7644: 33 00 c4 00              ra = 0xc4
  7648: 0a 64                    ecalli 100 // 'log'
  7650: 01                       fallthrough
      :                          @375 [@dyn 98]
  7651: 82 17 60                 a0 = u64 [sp + 0x60]
  7654: c8 67 07                 a0 = a0 + s1
  7657: 53 37 00 00 f0 25        jump @381 if a0 <u 4293918720
      :                          @376
  7663: 33 07 20 10 03           a0 = 0x31020
  7668: 95 77 00 00 10           a0 = a0 + 0x100000
  7673: 01                       fallthrough
      :                          @377
  7674: 82 78                    a1 = u64 [a0]
  7676: c9 87 09                 a2 = a0 - a1
  7679: ab 59 0f                 jump @381 if a2 != s0
      :                          @378
  7682: c9 68 09                 a2 = a1 - s1
  7685: 01                       fallthrough
      :                          @379
  7686: 82 7a                    a3 = u64 [a0]
  7688: ab 8a f2                 jump @377 if a3 != a1
      :                          @380
  7691: 7b 79                    u64 [a0] = a2
  7693: 01                       fallthrough
      :                          @381
  7694: 95 1a f8 50 01           a3 = sp + 0x150f8
  7699: 80 a7 64 02              a0 = u32 [a3 + 0x264]
  7703: 82 a8 50 02              a1 = u64 [a3 + 0x250]
  7707: 82 a9 98 02              a2 = u64 [a3 + 0x298]
  7711: 82 aa 58 02              a3 = u64 [a3 + 0x258]
  7715: 0a 0a                    ecalli 10 // 'poke'
  7717: 01                       fallthrough
      :                          @382
  7718: 51 07 17                 jump @384 if a0 == 0
      :                          @383
  7721: 33 0a 06 0d 01           a3 = 0x10d06
  7726: 33 07 01                 a0 = 0x1
  7729: 33 0b 3e                 a4 = 0x3e
  7732: 33 08                    a1 = 0
  7734: 33 09                    a2 = 0
  7736: 0a 64                    ecalli 100 // 'log'
  7738: 28 a6 ef                 jump @203
      :                          @384
  7741: 33 0a d8 0c 01           a3 = 0x10cd8
  7746: 33 07 02                 a0 = 0x2
  7749: 33 0b 2e                 a4 = 0x2e
  7752: 33 08                    a1 = 0
  7754: 33 09                    a2 = 0
  7756: 0a 64                    ecalli 100 // 'log'
  7758: 28 92 ef                 jump @203
      :                          @385
  7761: 00                       trap
      :                          @386
  7762: 00                       trap
      :                          @387 [export #1: 'accumulate']
  7763: 51 08 ab 02              jump @450 if a1 == 0
      :                          @388
  7767: 95 11 68 ff              sp = sp + 0xffffffffffffff68
  7771: 7b 10 90 00              u64 [sp + 0x90] = ra
  7775: 7b 15 88 00              u64 [sp + 0x88] = s0
  7779: 7b 16 80 00              u64 [sp + 0x80] = s1
  7783: 64 85                    s0 = a1
  7785: 7d 78                    a1 = i8 [a0]
  7787: 33 06 01                 s1 = 0x1
  7790: 59 08 37                 jump @395 if a1 >=s 0
      :                          @389
  7793: 84 89 ff 00              a2 = a1 & 0xff
  7797: 33 06 02                 s1 = 0x2
  7800: 53 29 c0 00 2d           jump @395 if a2 <u 192
      :                          @390
  7805: 33 06 03                 s1 = 0x3
  7808: 53 29 e0 00 25           jump @395 if a2 <u 224
      :                          @391
  7813: 33 06 04                 s1 = 0x4
  7816: 53 29 f0 00 1d           jump @395 if a2 <u 240
      :                          @392
  7821: 33 06 05                 s1 = 0x5
  7824: 53 29 f8 00 15           jump @395 if a2 <u 248
      :                          @393
  7829: 33 06 06                 s1 = 0x6
  7832: 53 29 fc 00 0d           jump @395 if a2 <u 252
      :                          @394
  7837: 88 98 fe 00              a1 = a2 <u 0xfe
  7841: 9a 86 08                 s1 = 0x8 - a1
  7844: 01                       fallthrough
      :                          @395
  7845: ac 65 40 02              jump @449 if s0 <u s1
      :                          @396
  7849: 64 68                    a1 = s1
  7851: 7b 17                    u64 [sp] = a0
  7853: 50 20 c6 00 e2 11        ra = 198, jump @770
      :                          @397 [@dyn 99]
  7859: 82 17                    a0 = u64 [sp]
  7861: aa 65 30 02              jump @449 if s0 == s1
      :                          @398
  7865: c8 67 07                 a0 = a0 + s1
  7868: 7d 78                    a1 = i8 [a0]
  7870: c9 65 0a                 a3 = s0 - s1
  7873: 33 05 01                 s0 = 0x1
  7876: 59 08 37                 jump @405 if a1 >=s 0
      :                          @399
  7879: 84 89 ff 00              a2 = a1 & 0xff
  7883: 33 05 02                 s0 = 0x2
  7886: 53 29 c0 00 2d           jump @405 if a2 <u 192
      :                          @400
  7891: 33 05 03                 s0 = 0x3
  7894: 53 29 e0 00 25           jump @405 if a2 <u 224
      :                          @401
  7899: 33 05 04                 s0 = 0x4
  7902: 53 29 f0 00 1d           jump @405 if a2 <u 240
      :                          @402
  7907: 33 05 05                 s0 = 0x5
  7910: 53 29 f8 00 15           jump @405 if a2 <u 248
      :                          @403
  7915: 33 05 06                 s0 = 0x6
  7918: 53 29 fc 00 0d           jump @405 if a2 <u 252
      :                          @404
  7923: 88 98 fe 00              a1 = a2 <u 0xfe
  7927: 9a 85 08                 s0 = 0x8 - a1
  7930: 01                       fallthrough
      :                          @405
  7931: ac 5a ea 01              jump @449 if a3 <u s0
      :                          @406
  7935: 64 58                    a1 = s0
  7937: 7b 1a                    u64 [sp] = a3
  7939: 64 76                    s1 = a0
  7941: 50 20 c8 00 8a 11        ra = 200, jump @770
      :                          @407 [@dyn 100]
  7947: c8 65 07                 a0 = s0 + s1
  7950: 82 16                    s1 = u64 [sp]
  7952: ab 56 0c                 jump @409 if s1 != s0
      :                          @408
  7955: 33 08                    a1 = 0
  7957: 33 00 ca 00              ra = 0xca
  7961: 28 76 11                 jump @770
      :                          @409
  7964: 7d 79                    a2 = i8 [a0]
  7966: c9 56 06                 s1 = s1 - s0
  7969: 33 08 01                 a1 = 0x1
  7972: 59 09 44                 jump @416 if a2 >=s 0
      :                          @410
  7975: 84 99 ff 00              a2 = a2 & 0xff
  7979: 33 0a c0 00              a3 = 0xc0
  7983: 33 08 02                 a1 = 0x2
  7986: ac a9 36                 jump @416 if a2 <u a3
      :                          @411
  7989: 33 0a e0 00              a3 = 0xe0
  7993: 33 08 03                 a1 = 0x3
  7996: ac a9 2c                 jump @416 if a2 <u a3
      :                          @412
  7999: 33 0a f0 00              a3 = 0xf0
  8003: 33 08 04                 a1 = 0x4
  8006: ac a9 22                 jump @416 if a2 <u a3
      :                          @413
  8009: 33 0a f8 00              a3 = 0xf8
  8013: 33 08 05                 a1 = 0x5
  8016: ac a9 18                 jump @416 if a2 <u a3
      :                          @414
  8019: 33 0a fc 00              a3 = 0xfc
  8023: 33 08 06                 a1 = 0x6
  8026: ac a9 0e                 jump @416 if a2 <u a3
      :                          @415
  8029: 88 98 fe 00              a1 = a2 <u 0xfe
  8033: 33 09 08                 a2 = 0x8
  8036: c9 89 08                 a1 = a2 - a1
  8039: 01                       fallthrough
      :                          @416
  8040: ac 86 7d 01              jump @449 if s1 <u a1
      :                          @417
  8044: 50 20 ca 00 23 11        ra = 202, jump @770
      :                          @418 [@dyn 101]
  8050: 33 07 11 00 03           a0 = 0x30011
  8055: 33 09 08 10              a2 = 0x1008
  8059: 33 0a 0f                 a3 = 0xf
  8062: 33 08                    a1 = 0
  8064: 33 0b                    a4 = 0
  8066: 33 0c                    a5 = 0
  8068: 33 00 cc 00              ra = 0xcc
  8072: 0a 01                    ecalli 1 // 'fetch'
  8074: 01                       fallthrough
      :                          @419 [@dyn 102]
  8075: 51 07 5a 01              jump @449 if a0 == 0
      :                          @420
  8079: 95 76 80                 s1 = a0 + 0xffffffffffffff80
  8082: 51 06 53 01              jump @449 if s1 == 0
      :                          @421
  8086: 35 07 91 00 03           a0 = i8 [0x30091]
  8091: 33 05 01                 s0 = 0x1
  8094: 59 07 37                 jump @428 if a0 >=s 0
      :                          @422
  8097: 84 77 ff 00              a0 = a0 & 0xff
  8101: 33 05 02                 s0 = 0x2
  8104: 53 27 c0 00 2d           jump @428 if a0 <u 192
      :                          @423
  8109: 33 05 03                 s0 = 0x3
  8112: 53 27 e0 00 25           jump @428 if a0 <u 224
      :                          @424
  8117: 33 05 04                 s0 = 0x4
  8120: 53 27 f0 00 1d           jump @428 if a0 <u 240
      :                          @425
  8125: 33 05 05                 s0 = 0x5
  8128: 53 27 f8 00 15           jump @428 if a0 <u 248
      :                          @426
  8133: 33 05 06                 s0 = 0x6
  8136: 53 27 fc 00 0d           jump @428 if a0 <u 252
      :                          @427
  8141: 88 77 fe 00              a0 = a0 <u 0xfe
  8145: 9a 75 08                 s0 = 0x8 - a0
  8148: 01                       fallthrough
      :                          @428
  8149: ac 56 10 01              jump @449 if s1 <u s0
      :                          @429
  8153: 33 07 11 00 03           a0 = 0x30011
  8158: 7b 17                    u64 [sp] = a0
  8160: 95 77 80 00              a0 = a0 + 0x80
  8164: 64 58                    a1 = s0
  8166: 50 20 ce 00 a9 10        ra = 206, jump @770
      :                          @430 [@dyn 103]
  8172: 85 57 ff                 a0 = s0 ^ 0xffffffffffffffff
  8175: c8 67 07                 a0 = a0 + s1
  8178: 51 07 f3 00              jump @449 if a0 == 0
      :                          @431
  8182: 82 18                    a1 = u64 [sp]
  8184: c8 85 05                 s0 = s0 + a1
  8187: 95 55 81 00              s0 = s0 + 0x81
  8191: 7d 58                    a1 = i8 [s0]
  8193: 33 06 01                 s1 = 0x1
  8196: 59 08 45                 jump @439 if a1 >=s 0
      :                          @432
  8199: 84 88 ff 00              a1 = a1 & 0xff
  8203: 33 09 c0 00              a2 = 0xc0
  8207: 33 06 02                 s1 = 0x2
  8210: ac 98 33                 jump @438 if a1 <u a2
      :                          @433
  8213: 33 09 e0 00              a2 = 0xe0
  8217: 33 06 03                 s1 = 0x3
  8220: ac 98 29                 jump @438 if a1 <u a2
      :                          @434
  8223: 33 09 f0 00              a2 = 0xf0
  8227: 33 06 04                 s1 = 0x4
  8230: ac 98 1f                 jump @438 if a1 <u a2
      :                          @435
  8233: 33 09 f8 00              a2 = 0xf8
  8237: 33 06 05                 s1 = 0x5
  8240: ac 98 15                 jump @438 if a1 <u a2
      :                          @436
  8243: 33 09 fc 00              a2 = 0xfc
  8247: 33 06 06                 s1 = 0x6
  8250: ac 98 0b                 jump @438 if a1 <u a2
      :                          @437
  8253: 88 88 fe 00              a1 = a1 <u 0xfe
  8257: 9a 86 08                 s1 = 0x8 - a1
  8260: 01                       fallthrough
      :                          @438
  8261: ac 67 a0 00              jump @449 if a0 <u s1
      :                          @439
  8265: 64 57                    a0 = s0
  8267: 64 68                    a1 = s1
  8269: 50 20 d0 00 42 10        ra = 208, jump @770
      :                          @440 [@dyn 104]
  8275: 52 17 24 92 00           jump @449 if a0 != 36
      :                          @441
  8280: c8 56 07                 a0 = s1 + s0
  8283: 7b 17 08                 u64 [sp + 0x8] = a0
  8286: 80 78 20                 a1 = u32 [a0 + 0x20]
  8289: 7b 18 10                 u64 [sp + 0x10] = a1
  8292: 0a 17                    ecalli 23 // 'solicit'
  8294: 95 17 08                 a0 = sp + 0x8
  8297: 7b 17 60                 u64 [sp + 0x60] = a0
  8300: 33 07 0a                 a0 = 0xa
  8303: 7b 17 68                 u64 [sp + 0x68] = a0
  8306: 95 18 10                 a1 = sp + 0x10
  8309: 7b 18 70                 u64 [sp + 0x70] = a1
  8312: 7b 17 78                 u64 [sp + 0x78] = a0
  8315: 33 07 00 07 01           a0 = 0x10700
  8320: 7b 17 30                 u64 [sp + 0x30] = a0
  8323: 49 11 38 02              u64 [sp + 56] = 0x2
  8327: 49 11 50                 u64 [sp + 80] = 0
  8330: 95 18 60                 a1 = sp + 0x60
  8333: 7b 18 40                 u64 [sp + 0x40] = a1
  8336: 49 11 48 02              u64 [sp + 72] = 0x2
  8340: 95 17 18                 a0 = sp + 0x18
  8343: 95 18 30                 a1 = sp + 0x30
  8346: 50 20 d2 00 b6 02        ra = 210, jump @508
      :                          @442 [@dyn 105]
  8352: 82 15 20                 s0 = u64 [sp + 0x20]
  8355: 82 1b 28                 a4 = u64 [sp + 0x28]
  8358: 82 16 18                 s1 = u64 [sp + 0x18]
  8361: 33 07 02                 a0 = 0x2
  8364: 33 08                    a1 = 0
  8366: 33 09                    a2 = 0
  8368: 64 5a                    a3 = s0
  8370: 33 00 d4 00              ra = 0xd4
  8374: 0a 64                    ecalli 100 // 'log'
  8376: 01                       fallthrough
      :                          @443 [@dyn 106]
  8377: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
  8382: 53 38 00 00 f0 27        jump @449 if a1 <u 4293918720
      :                          @444
  8388: 33 07 20 10 03           a0 = 0x31020
  8393: 95 77 00 00 10           a0 = a0 + 0x100000
  8398: 01                       fallthrough
      :                          @445
  8399: 82 78                    a1 = u64 [a0]
  8401: c9 87 09                 a2 = a0 - a1
  8404: ab 59 11                 jump @449 if a2 != s0
      :                          @446
  8407: c9 68 09                 a2 = a1 - s1
  8410: 01                       fallthrough
      :                          @447
  8411: 82 7a                    a3 = u64 [a0]
  8413: ab 8a f2                 jump @445 if a3 != a1
      :                          @448
  8416: 7b 79                    u64 [a0] = a2
  8418: 33 0b                    a4 = 0
  8420: 01                       fallthrough
      :                          @449
  8421: 82 10 90 00              ra = u64 [sp + 0x90]
  8425: 82 15 88 00              s0 = u64 [sp + 0x88]
  8429: 82 16 80 00              s1 = u64 [sp + 0x80]
  8433: 95 11 98 00              sp = sp + 0x98
  8437: 33 07 00 00 01           a0 = 0x10000
  8442: 33 08                    a1 = 0
  8444: 32 00                    ret
      :                          @450
  8446: 33 07 00 00 01           a0 = 0x10000
  8451: 33 08                    a1 = 0
  8453: 32 00                    ret
      :                          @451 [export #2: 'on_transfer']
  8455: 33 07 00 00 01           a0 = 0x10000
  8460: 33 08                    a1 = 0
  8462: 32 00                    ret
      :                          @452
  8464: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  8467: 7b 10 40                 u64 [sp + 0x40] = ra
  8470: 7b 15 38                 u64 [sp + 0x38] = s0
  8473: 7b 16 30                 u64 [sp + 0x30] = s1
  8476: c8 89 09                 a2 = a2 + a1
  8479: ac 89 53                 jump @460 if a2 <u a1
      :                          @453
  8482: 64 75                    s0 = a0
  8484: 82 77                    a0 = u64 [a0]
  8486: 97 78 01                 a1 = a0 << 0x1
  8489: 33 0a 08                 a3 = 0x8
  8492: e4 a9 09                 a2 = maxu(a2, a3)
  8495: e4 98 06                 s1 = maxu(a1, a2)
  8498: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  8501: 98 88 3f                 a1 = a1 >> 0x3f
  8504: 51 07 12                 jump @455 if a0 == 0
      :                          @454
  8507: 82 59 08                 a2 = u64 [s0 + 0x8]
  8510: 7b 19 18                 u64 [sp + 0x18] = a2
  8513: 49 11 20 01              u64 [sp + 32] = 0x1
  8517: 7b 17 28                 u64 [sp + 0x28] = a0
  8520: 28 06                    jump @456
      :                          @455
  8522: 49 11 20                 u64 [sp + 32] = 0
  8525: 01                       fallthrough
      :                          @456
  8526: 64 17                    a0 = sp
  8528: 95 1a 18                 a3 = sp + 0x18
  8531: 64 69                    a2 = s1
  8533: 50 20 d6 00 33           ra = 214, jump @464
      :                          @457 [@dyn 107]
  8538: 82 18                    a1 = u64 [sp]
  8540: 82 17 08                 a0 = u64 [sp + 0x8]
  8543: 51 08 14                 jump @461 if a1 == 0
      :                          @458
  8546: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  8556: aa 87 0d                 jump @462 if a0 == a1
      :                          @459
  8559: 52 07 18                 jump @463 if a0 != 0
      :                          @460
  8562: 00                       trap
      :                          @461
  8563: 7b 57 08                 u64 [s0 + 0x8] = a0
  8566: 7b 56                    u64 [s0] = s1
  8568: 01                       fallthrough
      :                          @462
  8569: 82 10 40                 ra = u64 [sp + 0x40]
  8572: 82 15 38                 s0 = u64 [sp + 0x38]
  8575: 82 16 30                 s1 = u64 [sp + 0x30]
  8578: 95 11 48                 sp = sp + 0x48
  8581: 32 00                    ret
      :                          @463
  8583: 00                       trap
      :                          @464
  8584: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  8587: 7b 10 30                 u64 [sp + 0x30] = ra
  8590: 7b 15 28                 u64 [sp + 0x28] = s0
  8593: 7b 16 20                 u64 [sp + 0x20] = s1
  8596: 64 95                    s0 = a2
  8598: 64 72                    t0 = a0
  8600: 51 08 7a                 jump @474 if a1 == 0
      :                          @465
  8603: 82 a7 08                 a0 = u64 [a3 + 0x8]
  8606: 51 07 7d                 jump @475 if a0 == 0
      :                          @466
  8609: 82 a9 10                 a2 = u64 [a3 + 0x10]
  8612: 51 09 ab 00              jump @482 if a2 == 0
      :                          @467
  8616: 82 a8                    a1 = u64 [a3]
  8618: 33 06 20 10 03           s1 = 0x31020
  8623: 33 03 00 00 10           t1 = 0x100000
  8628: c8 36 06                 s1 = s1 + t1
  8631: 01                       fallthrough
      :                          @468
  8632: 82 6a                    a3 = u64 [s1]
  8634: c8 5a 07                 a0 = a3 + s0
  8637: ac a7 d0 00              jump @488 if a0 <u a3
      :                          @469
  8641: 95 7b 01                 a4 = a0 + 0x1
  8644: 88 bc 01                 a5 = a4 <u 0x1
  8647: d8 b3 0b                 a4 = t1 <u a4
  8650: d4 cb 0b                 a4 = a4 | a5
  8653: 52 0b c0 00              jump @488 if a4 != 0
      :                          @470
  8657: 82 6b                    a4 = u64 [s1]
  8659: ab ab e5                 jump @468 if a4 != a3
      :                          @471
  8662: 7b 67                    u64 [s1] = a0
  8664: 33 0c                    a5 = 0
  8666: 7b 12 18                 u64 [sp + 0x18] = t0
  8669: 33 0a 20 10 03           a3 = 0x31020
  8674: 33 0b 00 00 10           a4 = 0x100000
  8679: 7b 1a                    u64 [sp] = a3
  8681: c8 ba 0a                 a3 = a3 + a4
  8684: c9 7a 07                 a0 = a3 - a0
  8687: 7b 17 10                 u64 [sp + 0x10] = a0
  8690: 7b 18 08                 u64 [sp + 0x8] = a1
  8693: 64 96                    s1 = a2
  8695: 50 20 d8 00 d3 03        ra = 216, jump @558
      :                          @472 [@dyn 108]
  8701: 54 36 00 00 10 98 00     jump @489 if s1 <=u 1048576
      :                          @473
  8708: 82 12 18                 t0 = u64 [sp + 0x18]
  8711: 82 18 10                 a1 = u64 [sp + 0x10]
  8714: 33 07                    a0 = 0
  8716: 7b 28 08                 u64 [t0 + 0x8] = a1
  8719: 28 b5 00                 jump @495
      :                          @474
  8722: 49 12 08                 u64 [t0 + 8] = 0
  8725: 33 07 01                 a0 = 0x1
  8728: 28 ac 00                 jump @495
      :                          @475
  8731: 33 09 20 10 03           a2 = 0x31020
  8736: 33 07 00 00 10           a0 = 0x100000
  8741: c8 79 09                 a2 = a2 + a0
  8744: 01                       fallthrough
      :                          @476
  8745: 82 9a                    a3 = u64 [a2]
  8747: c8 5a 08                 a1 = a3 + s0
  8750: ac a8 5f                 jump @488 if a1 <u a3
      :                          @477
  8753: 95 8b 01                 a4 = a1 + 0x1
  8756: 88 bc 01                 a5 = a4 <u 0x1
  8759: d8 b7 0b                 a4 = a0 <u a4
  8762: d4 cb 0b                 a4 = a4 | a5
  8765: 52 0b 50                 jump @488 if a4 != 0
      :                          @478
  8768: 82 9b                    a4 = u64 [a2]
  8770: ab ab e7                 jump @476 if a4 != a3
      :                          @479
  8773: 7b 98                    u64 [a2] = a1
  8775: 33 0c                    a5 = 0
  8777: 01                       fallthrough
      :                          @480
  8778: ab ab df                 jump @476 if a4 != a3
      :                          @481
  8781: 28 31                    jump @487
      :                          @482
  8783: 33 09 20 10 03           a2 = 0x31020
  8788: 33 07 00 00 10           a0 = 0x100000
  8793: c8 79 09                 a2 = a2 + a0
  8796: 01                       fallthrough
      :                          @483
  8797: 82 9a                    a3 = u64 [a2]
  8799: c8 5a 08                 a1 = a3 + s0
  8802: ac a8 2b                 jump @488 if a1 <u a3
      :                          @484
  8805: 95 8b 01                 a4 = a1 + 0x1
  8808: 88 bc 01                 a5 = a4 <u 0x1
  8811: d8 b7 0b                 a4 = a0 <u a4
  8814: d4 cb 0b                 a4 = a4 | a5
  8817: 52 0b 1c                 jump @488 if a4 != 0
      :                          @485
  8820: 82 9b                    a4 = u64 [a2]
  8822: ab ab e7                 jump @483 if a4 != a3
      :                          @486
  8825: 7b 98                    u64 [a2] = a1
  8827: 33 0c                    a5 = 0
  8829: 01                       fallthrough
      :                          @487
  8830: 33 07 20 10 13           a0 = 0x131020
  8835: c9 87 08                 a1 = a0 - a1
  8838: 33 07                    a0 = 0
  8840: 7b 28 08                 u64 [t0 + 0x8] = a1
  8843: 28 39                    jump @495
      :                          @488
  8845: 33 07 01                 a0 = 0x1
  8848: 7b 27 08                 u64 [t0 + 0x8] = a0
  8851: 28 31                    jump @495
      :                          @489
  8853: 64 6c                    a5 = s1
  8855: 82 17                    a0 = u64 [sp]
  8857: 95 77 00 00 10           a0 = a0 + 0x100000
  8862: 82 12 18                 t0 = u64 [sp + 0x18]
  8865: 82 16 08                 s1 = u64 [sp + 0x8]
  8868: 01                       fallthrough
      :                          @490
  8869: 82 78                    a1 = u64 [a0]
  8871: c9 87 09                 a2 = a0 - a1
  8874: ab 69 11                 jump @494 if a2 != s1
      :                          @491
  8877: c9 c8 09                 a2 = a1 - a5
  8880: 01                       fallthrough
      :                          @492
  8881: 82 7a                    a3 = u64 [a0]
  8883: ab 8a f2                 jump @490 if a3 != a1
      :                          @493
  8886: 7b 79                    u64 [a0] = a2
  8888: 33 0b                    a4 = 0
  8890: 01                       fallthrough
      :                          @494
  8891: 82 18 10                 a1 = u64 [sp + 0x10]
  8894: 33 07                    a0 = 0
  8896: 7b 28 08                 u64 [t0 + 0x8] = a1
  8899: 01                       fallthrough
      :                          @495
  8900: 7b 25 10                 u64 [t0 + 0x10] = s0
  8903: 7b 27                    u64 [t0] = a0
  8905: 82 10 30                 ra = u64 [sp + 0x30]
  8908: 82 15 28                 s0 = u64 [sp + 0x28]
  8911: 82 16 20                 s1 = u64 [sp + 0x20]
  8914: 95 11 38                 sp = sp + 0x38
  8917: 32 00                    ret
      :                          @496
  8919: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  8922: 7b 10 40                 u64 [sp + 0x40] = ra
  8925: 7b 15 38                 u64 [sp + 0x38] = s0
  8928: 7b 16 30                 u64 [sp + 0x30] = s1
  8931: 95 88 01                 a1 = a1 + 0x1
  8934: 51 08 54                 jump @504 if a1 == 0
      :                          @497
  8937: 64 75                    s0 = a0
  8939: 82 77                    a0 = u64 [a0]
  8941: 97 79 01                 a2 = a0 << 0x1
  8944: 33 0a 08                 a3 = 0x8
  8947: e4 a8 08                 a1 = maxu(a1, a3)
  8950: e4 89 06                 s1 = maxu(a2, a1)
  8953: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  8956: 98 88 3f                 a1 = a1 >> 0x3f
  8959: 51 07 12                 jump @499 if a0 == 0
      :                          @498
  8962: 82 59 08                 a2 = u64 [s0 + 0x8]
  8965: 7b 19 18                 u64 [sp + 0x18] = a2
  8968: 49 11 20 01              u64 [sp + 32] = 0x1
  8972: 7b 17 28                 u64 [sp + 0x28] = a0
  8975: 28 06                    jump @500
      :                          @499
  8977: 49 11 20                 u64 [sp + 32] = 0
  8980: 01                       fallthrough
      :                          @500
  8981: 64 17                    a0 = sp
  8983: 95 1a 18                 a3 = sp + 0x18
  8986: 64 69                    a2 = s1
  8988: 50 20 da 00 6c fe        ra = 218, jump @464
      :                          @501 [@dyn 109]
  8994: 82 18                    a1 = u64 [sp]
  8996: 82 17 08                 a0 = u64 [sp + 0x8]
  8999: 51 08 14                 jump @505 if a1 == 0
      :                          @502
  9002: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  9012: aa 87 0d                 jump @506 if a0 == a1
      :                          @503
  9015: 52 07 18                 jump @507 if a0 != 0
      :                          @504
  9018: 00                       trap
      :                          @505
  9019: 7b 57 08                 u64 [s0 + 0x8] = a0
  9022: 7b 56                    u64 [s0] = s1
  9024: 01                       fallthrough
      :                          @506
  9025: 82 10 40                 ra = u64 [sp + 0x40]
  9028: 82 15 38                 s0 = u64 [sp + 0x38]
  9031: 82 16 30                 s1 = u64 [sp + 0x30]
  9034: 95 11 48                 sp = sp + 0x48
  9037: 32 00                    ret
      :                          @507
  9039: 00                       trap
      :                          @508
  9040: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  9043: 7b 10 30                 u64 [sp + 0x30] = ra
  9046: 7b 15 28                 u64 [sp + 0x28] = s0
  9049: 7b 16 20                 u64 [sp + 0x20] = s1
  9052: 64 89                    a2 = a1
  9054: 82 8a 08                 a3 = u64 [a1 + 0x8]
  9057: 64 75                    s0 = a0
  9059: 51 0a 35                 jump @513 if a3 == 0
      :                          @509
  9062: 82 98                    a1 = u64 [a2]
  9064: 33 07                    a0 = 0
  9066: 95 8b 08                 a4 = a1 + 0x8
  9069: 01                       fallthrough
      :                          @510
  9070: 82 bc                    a5 = u64 [a4]
  9072: c8 c7 07                 a0 = a0 + a5
  9075: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  9078: 95 bb 10                 a4 = a4 + 0x10
  9081: 52 0a f5                 jump @510 if a3 != 0
      :                          @511
  9084: 82 9a 18                 a3 = u64 [a2 + 0x18]
  9087: 51 0a 24                 jump @515 if a3 == 0
      :                          @512
  9090: 82 88 08                 a1 = u64 [a1 + 0x8]
  9093: 8e 88                    a1 = a1 >u 0
  9095: 88 7a 10                 a3 = a0 <u 0x10
  9098: 85 aa 01                 a3 = a3 ^ 0x1
  9101: d4 a8 08                 a1 = a1 | a3
  9104: 89 7a                    a3 = a0 <s 0
  9106: e0 a8 08                 a1 = a1 & ~a3
  9109: 52 08 0a                 jump @514 if a1 != 0
      :                          @513
  9112: 33 07                    a0 = 0
  9114: 33 08 01                 a1 = 0x1
  9117: 28 4a                    jump @523
      :                          @514
  9119: 97 77 01                 a0 = a0 << 0x1
  9122: 01                       fallthrough
      :                          @515
  9123: 51 07 40                 jump @522 if a0 == 0
      :                          @516
  9126: 57 07 79                 jump @528 if a0 <s 0
      :                          @517
  9129: 64 52                    t0 = s0
  9131: 33 0b 20 10 03           a4 = 0x31020
  9136: 33 08 00 00 10           a1 = 0x100000
  9141: c8 8b 0b                 a4 = a4 + a1
  9144: 01                       fallthrough
      :                          @518
  9145: 82 bc                    a5 = u64 [a4]
  9147: c8 7c 0a                 a3 = a5 + a0
  9150: ac ca 5f                 jump @526 if a3 <u a5
      :                          @519
  9153: 95 a5 01                 s0 = a3 + 0x1
  9156: 88 56 01                 s1 = s0 <u 0x1
  9159: d8 58 05                 s0 = a1 <u s0
  9162: d4 65 05                 s0 = s0 | s1
  9165: 52 05 50                 jump @526 if s0 != 0
      :                          @520
  9168: 82 b6                    s1 = u64 [a4]
  9170: ab c6 e7                 jump @518 if s1 != a5
      :                          @521
  9173: 7b ba                    u64 [a4] = a3
  9175: 33 08 20 10 13           a1 = 0x131020
  9180: c9 a8 08                 a1 = a1 - a3
  9183: 64 25                    s0 = t0
  9185: 28 06                    jump @523
      :                          @522
  9187: 33 08 01                 a1 = 0x1
  9190: 01                       fallthrough
      :                          @523
  9191: 7b 17                    u64 [sp] = a0
  9193: 7b 18 08                 u64 [sp + 0x8] = a1
  9196: 49 11 10                 u64 [sp + 16] = 0
  9199: 33 08 20 07 01           a1 = 0x10720
  9204: 64 17                    a0 = sp
  9206: 50 20 dc 00 89 06        ra = 220, jump @654
      :                          @524 [@dyn 110]
  9212: 52 07 22                 jump @527 if a0 != 0
      :                          @525
  9215: 82 17 10                 a0 = u64 [sp + 0x10]
  9218: 82 18 08                 a1 = u64 [sp + 0x8]
  9221: 82 19                    a2 = u64 [sp]
  9223: 7b 57 10                 u64 [s0 + 0x10] = a0
  9226: 7b 58 08                 u64 [s0 + 0x8] = a1
  9229: 7b 59                    u64 [s0] = a2
  9231: 82 10 30                 ra = u64 [sp + 0x30]
  9234: 82 15 28                 s0 = u64 [sp + 0x28]
  9237: 82 16 20                 s1 = u64 [sp + 0x20]
  9240: 95 11 38                 sp = sp + 0x38
  9243: 32 00                    ret
      :                          @526
  9245: 00                       trap
      :                          @527
  9246: 00                       trap
      :                          @528
  9247: 00                       trap
      :                          @529 [@dyn 111]
  9248: 82 72                    t0 = u64 [a0]
  9250: 33 09 00 00 f0           a2 = 0xfffffffffff00000
  9255: 95 2a ff ff ef           a3 = t0 + 0xffffffffffefffff
  9260: ac 9a 28                 jump @535 if a3 <u a2
      :                          @530
  9263: 82 77 08                 a0 = u64 [a0 + 0x8]
  9266: 33 09 20 10 03           a2 = 0x31020
  9271: 95 99 00 00 10           a2 = a2 + 0x100000
  9276: 01                       fallthrough
      :                          @531
  9277: 82 9a                    a3 = u64 [a2]
  9279: c9 a9 0b                 a4 = a2 - a3
  9282: ab 7b 12                 jump @535 if a4 != a0
      :                          @532
  9285: c9 2a 0b                 a4 = a3 - t0
  9288: 01                       fallthrough
      :                          @533
  9289: 82 9c                    a5 = u64 [a2]
  9291: ab ac f2                 jump @531 if a5 != a3
      :                          @534
  9294: 7b 9b                    u64 [a2] = a4
  9296: 33 08                    a1 = 0
  9298: 32 00                    ret
      :                          @535
  9300: 32 00                    ret
      :                          @536 [@dyn 112]
  9302: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  9305: 7b 10 18                 u64 [sp + 0x18] = ra
  9308: 7b 15 10                 u64 [sp + 0x10] = s0
  9311: 7b 16 08                 u64 [sp + 0x8] = s1
  9314: 64 75                    s0 = a0
  9316: 82 7a 10                 a3 = u64 [a0 + 0x10]
  9319: 82 77                    a0 = u64 [a0]
  9321: c9 a7 07                 a0 = a0 - a3
  9324: 64 96                    s1 = a2
  9326: ac 97 2b                 jump @539 if a0 <u a2
      :                          @537
  9329: 7b 1a                    u64 [sp] = a3
  9331: 82 57 08                 a0 = u64 [s0 + 0x8]
  9334: c8 a7 07                 a0 = a0 + a3
  9337: 64 69                    a2 = s1
  9339: 50 20 e2 00 4f 01        ra = 226, jump @558
      :                          @538 [@dyn 113]
  9345: 82 17                    a0 = u64 [sp]
  9347: c8 76 06                 s1 = s1 + a0
  9350: 7b 56 10                 u64 [s0 + 0x10] = s1
  9353: 33 07                    a0 = 0
  9355: 82 10 18                 ra = u64 [sp + 0x18]
  9358: 82 15 10                 s0 = u64 [sp + 0x10]
  9361: 82 16 08                 s1 = u64 [sp + 0x8]
  9364: 95 11 20                 sp = sp + 0x20
  9367: 32 00                    ret
      :                          @539
  9369: 64 57                    a0 = s0
  9371: 7b 18                    u64 [sp] = a1
  9373: 64 a8                    a1 = a3
  9375: 64 69                    a2 = s1
  9377: 50 20 e4 00 6f fc        ra = 228, jump @452
      :                          @540 [@dyn 114]
  9383: 82 18                    a1 = u64 [sp]
  9385: 82 5a 10                 a3 = u64 [s0 + 0x10]
  9388: 28 c5                    jump @537
      :                          @541 [@dyn 115]
  9390: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  9393: 7b 10 20                 u64 [sp + 0x20] = ra
  9396: 7b 15 18                 u64 [sp + 0x18] = s0
  9399: 7b 16 10                 u64 [sp + 0x10] = s1
  9402: 64 86                    s1 = a1
  9404: 83 88                    i32 a1 = a1 + 0
  9406: 33 09 80 00              a2 = 0x80
  9410: 64 7a                    a3 = a0
  9412: ae 98 2c                 jump @546 if a1 >=u a2
      :                          @542
  9415: 82 a8 10                 a1 = u64 [a3 + 0x10]
  9418: 82 a7                    a0 = u64 [a3]
  9420: ab 78 13                 jump @545 if a1 != a0
      :                          @543
  9423: 64 a7                    a0 = a3
  9425: 64 a5                    s0 = a3
  9427: 50 20 e8 00 04 fe        ra = 232, jump @496
      :                          @544 [@dyn 116]
  9433: 64 5a                    a3 = s0
  9435: 82 58 10                 a1 = u64 [s0 + 0x10]
  9438: 01                       fallthrough
      :                          @545
  9439: 82 a7 08                 a0 = u64 [a3 + 0x8]
  9442: c8 87 07                 a0 = a0 + a1
  9445: 78 76                    u8 [a0] = s1
  9447: 95 88 01                 a1 = a1 + 0x1
  9450: 7b a8 10                 u64 [a3 + 0x10] = a1
  9453: 28 ac 00                 jump @554
      :                          @546
  9456: 8b 67 0b                 i32 a0 = s1 >> 0xb
  9459: 48 11 0c                 u32 [sp + 12] = 0
  9462: 52 07 1c                 jump @548 if a0 != 0
      :                          @547
  9465: 98 67 06                 a0 = s1 >> 0x6
  9468: 86 77 c0 00              a0 = a0 | 0xc0
  9472: 78 17 0c                 u8 [sp + 0xc] = a0
  9475: 84 67 3f                 a0 = s1 & 0x3f
  9478: 86 77 80 00              a0 = a0 | 0x80
  9482: 78 17 0d                 u8 [sp + 0xd] = a0
  9485: 33 06 02                 s1 = 0x2
  9488: 28 63                    jump @551
      :                          @548
  9490: 8b 67 10                 i32 a0 = s1 >> 0x10
  9493: 52 07 29                 jump @550 if a0 != 0
      :                          @549
  9496: 98 67 0c                 a0 = s1 >> 0xc
  9499: 86 77 e0 00              a0 = a0 | 0xe0
  9503: 78 17 0c                 u8 [sp + 0xc] = a0
  9506: 97 67 34                 a0 = s1 << 0x34
  9509: 98 77 3a                 a0 = a0 >> 0x3a
  9512: 95 77 80 00              a0 = a0 + 0x80
  9516: 78 17 0d                 u8 [sp + 0xd] = a0
  9519: 84 67 3f                 a0 = s1 & 0x3f
  9522: 86 77 80 00              a0 = a0 | 0x80
  9526: 78 17 0e                 u8 [sp + 0xe] = a0
  9529: 33 06 03                 s1 = 0x3
  9532: 28 37                    jump @551
      :                          @550
  9534: 97 67 2b                 a0 = s1 << 0x2b
  9537: 98 77 3d                 a0 = a0 >> 0x3d
  9540: 95 77 f0 00              a0 = a0 + 0xf0
  9544: 78 17 0c                 u8 [sp + 0xc] = a0
  9547: 97 67 2e                 a0 = s1 << 0x2e
  9550: 98 77 3a                 a0 = a0 >> 0x3a
  9553: 95 77 80 00              a0 = a0 + 0x80
  9557: 78 17 0d                 u8 [sp + 0xd] = a0
  9560: 97 67 34                 a0 = s1 << 0x34
  9563: 98 77 3a                 a0 = a0 >> 0x3a
  9566: 95 77 80 00              a0 = a0 + 0x80
  9570: 78 17 0e                 u8 [sp + 0xe] = a0
  9573: 84 67 3f                 a0 = s1 & 0x3f
  9576: 86 77 80 00              a0 = a0 | 0x80
  9580: 78 17 0f                 u8 [sp + 0xf] = a0
  9583: 33 06 04                 s1 = 0x4
  9586: 01                       fallthrough
      :                          @551
  9587: 82 a5 10                 s0 = u64 [a3 + 0x10]
  9590: 82 a7                    a0 = u64 [a3]
  9592: c9 57 07                 a0 = a0 - s0
  9595: ac 67 2e                 jump @555 if a0 <u s1
      :                          @552
  9598: 7b 1a                    u64 [sp] = a3
  9600: 82 a7 08                 a0 = u64 [a3 + 0x8]
  9603: c8 57 07                 a0 = a0 + s0
  9606: 95 18 0c                 a1 = sp + 0xc
  9609: 64 69                    a2 = s1
  9611: 50 20 ea 00 3f           ra = 234, jump @558
      :                          @553 [@dyn 117]
  9616: c8 56 06                 s1 = s1 + s0
  9619: 82 17                    a0 = u64 [sp]
  9621: 7b 76 10                 u64 [a0 + 0x10] = s1
  9624: 01                       fallthrough
      :                          @554
  9625: 33 07                    a0 = 0
  9627: 82 10 20                 ra = u64 [sp + 0x20]
  9630: 82 15 18                 s0 = u64 [sp + 0x18]
  9633: 82 16 10                 s1 = u64 [sp + 0x10]
  9636: 95 11 28                 sp = sp + 0x28
  9639: 32 00                    ret
      :                          @555
  9641: 64 a7                    a0 = a3
  9643: 64 58                    a1 = s0
  9645: 64 69                    a2 = s1
  9647: 64 a5                    s0 = a3
  9649: 50 20 ec 00 5f fb        ra = 236, jump @452
      :                          @556 [@dyn 118]
  9655: 64 5a                    a3 = s0
  9657: 82 55 10                 s0 = u64 [s0 + 0x10]
  9660: 28 c2                    jump @552
      :                          @557 [@dyn 119]
  9662: 64 8a                    a3 = a1
  9664: 33 08 20 07 01           a1 = 0x10720
  9669: 64 a9                    a2 = a3
  9671: 28 b8 04                 jump @654
      :                          @558
  9674: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  9677: 7b 10 18                 u64 [sp + 0x18] = ra
  9680: 7b 15 10                 u64 [sp + 0x10] = s0
  9683: 7b 16 08                 u64 [sp + 0x8] = s1
  9686: 53 19 10 64              jump @567 if a2 <u 16
      :                          @559
  9690: 8d 7a                    i32 a3 = -a0
  9692: 84 a2 07                 t0 = a3 & 0x7
  9695: c8 27 0b                 a4 = a0 + t0
  9698: 51 02 15                 jump @562 if t0 == 0
      :                          @560
  9701: 64 8c                    a5 = a1
  9703: 64 75                    s0 = a0
  9705: 01                       fallthrough
      :                          @561
  9706: 7c ca                    a3 = u8 [a5]
  9708: 78 5a                    u8 [s0] = a3
  9710: 95 55 01                 s0 = s0 + 0x1
  9713: 95 cc 01                 a5 = a5 + 0x1
  9716: ac b5 f6                 jump @561 if s0 <u a4
      :                          @562
  9719: c8 28 03                 t1 = a1 + t0
  9722: c9 29 02                 t0 = a2 - t0
  9725: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  9728: 84 38 07                 a1 = t1 & 0x7
  9731: c8 4b 0a                 a3 = a4 + t2
  9734: 51 08 3b                 jump @569 if a1 == 0
      :                          @563
  9737: 58 04 4b                 jump @572 if t2 <=s 0
      :                          @564
  9740: 97 38 03                 a1 = t1 << 0x3
  9743: 84 80 38                 ra = a1 & 0x38
  9746: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  9749: 82 c5                    s0 = u64 [a5]
  9751: 8d 88                    i32 a1 = -a1
  9753: 84 88 38                 a1 = a1 & 0x38
  9756: 95 cc 08                 a5 = a5 + 0x8
  9759: 01                       fallthrough
      :                          @565
  9760: 82 c6                    s1 = u64 [a5]
  9762: d0 05 05                 s0 = s0 >> ra
  9765: cf 86 09                 a2 = s1 << a1
  9768: d4 59 09                 a2 = a2 | s0
  9771: 7b b9                    u64 [a4] = a2
  9773: 95 bb 08                 a4 = a4 + 0x8
  9776: 95 cc 08                 a5 = a5 + 0x8
  9779: 64 65                    s0 = s1
  9781: ac ab eb                 jump @565 if a4 <u a3
      :                          @566
  9784: 28 1c                    jump @572
      :                          @567
  9786: 64 7a                    a3 = a0
  9788: 52 09 21                 jump @573 if a2 != 0
      :                          @568
  9791: 28 2f                    jump @575
      :                          @569
  9793: 58 04 13                 jump @572 if t2 <=s 0
      :                          @570
  9796: 64 38                    a1 = t1
  9798: 01                       fallthrough
      :                          @571
  9799: 82 89                    a2 = u64 [a1]
  9801: 7b b9                    u64 [a4] = a2
  9803: 95 bb 08                 a4 = a4 + 0x8
  9806: 95 88 08                 a1 = a1 + 0x8
  9809: ac ab f6                 jump @571 if a4 <u a3
      :                          @572
  9812: c8 43 08                 a1 = t1 + t2
  9815: 84 29 07                 a2 = t0 & 0x7
  9818: 51 09 14                 jump @575 if a2 == 0
      :                          @573
  9821: c8 a9 09                 a2 = a2 + a3
  9824: 01                       fallthrough
      :                          @574
  9825: 7c 8b                    a4 = u8 [a1]
  9827: 78 ab                    u8 [a3] = a4
  9829: 95 aa 01                 a3 = a3 + 0x1
  9832: 95 88 01                 a1 = a1 + 0x1
  9835: ac 9a f6                 jump @574 if a3 <u a2
      :                          @575
  9838: 82 10 18                 ra = u64 [sp + 0x18]
  9841: 82 15 10                 s0 = u64 [sp + 0x10]
  9844: 82 16 08                 s1 = u64 [sp + 0x8]
  9847: 95 11 20                 sp = sp + 0x20
  9850: 32 00                    ret
      :                          @576
  9852: 53 19 10 48              jump @585 if a2 <u 16
      :                          @577
  9856: 8d 7a                    i32 a3 = -a0
  9858: 84 aa 07                 a3 = a3 & 0x7
  9861: c8 a7 0b                 a4 = a0 + a3
  9864: 51 0a 0e                 jump @580 if a3 == 0
      :                          @578
  9867: 64 7c                    a5 = a0
  9869: 01                       fallthrough
      :                          @579
  9870: 78 c8                    u8 [a5] = a1
  9872: 95 cc 01                 a5 = a5 + 0x1
  9875: ac bc fb                 jump @579 if a5 <u a4
      :                          @580
  9878: c9 a9 03                 t1 = a2 - a3
  9881: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  9884: c8 cb 0a                 a3 = a4 + a5
  9887: 58 0c 1d                 jump @583 if a5 <=s 0
      :                          @581
  9890: 84 82 ff 00              t0 = a1 & 0xff
  9894: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  9904: ca 92 0c                 a5 = t0 * a2
  9907: 01                       fallthrough
      :                          @582
  9908: 7b bc                    u64 [a4] = a5
  9910: 95 bb 08                 a4 = a4 + 0x8
  9913: ac ab fb                 jump @582 if a4 <u a3
      :                          @583
  9916: 84 39 07                 a2 = t1 & 0x7
  9919: 52 09 0a                 jump @586 if a2 != 0
      :                          @584
  9922: 28 13                    jump @588
      :                          @585
  9924: 64 7a                    a3 = a0
  9926: 51 09 0f                 jump @588 if a2 == 0
      :                          @586
  9929: c8 a9 09                 a2 = a2 + a3
  9932: 01                       fallthrough
      :                          @587
  9933: 78 a8                    u8 [a3] = a1
  9935: 95 aa 01                 a3 = a3 + 0x1
  9938: ac 9a fb                 jump @587 if a3 <u a2
      :                          @588
  9941: 32 00                    ret
      :                          @589 [@dyn 120]
  9943: 82 77                    a0 = u64 [a0]
  9945: 01                       fallthrough
      :                          @590
  9946: 28                       jump @590
      :                          @591 [@dyn 121]
  9947: 82 77                    a0 = u64 [a0]
  9949: 01                       fallthrough
      :                          @592
  9950: 95 11 a8                 sp = sp + 0xffffffffffffffa8
  9953: 7b 10 50                 u64 [sp + 0x50] = ra
  9956: 7b 15 48                 u64 [sp + 0x48] = s0
  9959: 7b 16 40                 u64 [sp + 0x40] = s1
  9962: 7b 18                    u64 [sp] = a1
  9964: 98 79 04                 a2 = a0 >> 0x4
  9967: 33 08 27                 a1 = 0x27
  9970: 53 29 71 02 81 00        jump @595 if a2 <u 625
      :                          @593
  9976: 33 08 27                 a1 = 0x27
  9979: 95 1a 3e                 a3 = sp + 0x3e
  9982: 3a 09 00 00 03           a2 = u64 [0x30000]
  9987: 7b 19 10                 u64 [sp + 0x10] = a2
  9990: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
  9996: 33 04 7b 14              t2 = 0x147b
 10000: 33 0b a0 07 01           a4 = 0x107a0
 10005: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
 10011: 01                       fallthrough
      :                          @594
 10012: 64 72                    t0 = a0
 10014: 82 17 10                 a0 = u64 [sp + 0x10]
 10017: d6 72 07                 a0 = t0 mulhu a0
 10020: 98 77 0b                 a0 = a0 >> 0xb
 10023: 82 19 08                 a2 = u64 [sp + 0x8]
 10026: c0 97 0c                 i32 a5 = a0 * a2
 10029: c8 2c 06                 s1 = a5 + t0
 10032: 97 6c 30                 a5 = s1 << 0x30
 10035: 98 cc 32                 a5 = a5 >> 0x32
 10038: ca 4c 0c                 a5 = a5 * t2
 10041: 98 c3 11                 t1 = a5 >> 0x11
 10044: 98 cc 10                 a5 = a5 >> 0x10
 10047: 84 cc fe 07              a5 = a5 & 0x7fe
 10051: 96 39 9c                 a2 = t1 * 0xffffffffffffff9c
 10054: c8 69 09                 a2 = a2 + s1
 10057: 97 99 31                 a2 = a2 << 0x31
 10060: 98 99 30                 a2 = a2 >> 0x30
 10063: c8 bc 0c                 a5 = a5 + a4
 10066: 7c c6                    s1 = u8 [a5]
 10068: 7c cc 01                 a5 = u8 [a5 + 0x1]
 10071: c8 b9 09                 a2 = a2 + a4
 10074: 7c 95 01                 s0 = u8 [a2 + 0x1]
 10077: 7c 99                    a2 = u8 [a2]
 10079: 78 ac ff                 u8 [a3 + 0xffffffffffffffff] = a5
 10082: 78 a6 fe                 u8 [a3 + 0xfffffffffffffffe] = s1
 10085: 78 a5 01                 u8 [a3 + 0x1] = s0
 10088: 78 a9                    u8 [a3] = a2
 10090: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
 10093: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
 10096: ac 20 ac                 jump @594 if ra <u t0
      :                          @595
 10099: 54 17 63 3b              jump @597 if a0 <=u 99
      :                          @596
 10103: 97 79 30                 a2 = a0 << 0x30
 10106: 98 99 32                 a2 = a2 >> 0x32
 10109: 96 99 7b 14              a2 = a2 * 0x147b
 10113: 98 99 11                 a2 = a2 >> 0x11
 10116: 96 9a 9c                 a3 = a2 * 0xffffffffffffff9c
 10119: c8 a7 07                 a0 = a0 + a3
 10122: 97 77 31                 a0 = a0 << 0x31
 10125: 98 77 30                 a0 = a0 >> 0x30
 10128: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
 10131: 33 0a a0 07 01           a3 = 0x107a0
 10136: c8 a7 07                 a0 = a0 + a3
 10139: 7c 7a 01                 a3 = u8 [a0 + 0x1]
 10142: 7c 77                    a0 = u8 [a0]
 10144: 95 1b 19                 a4 = sp + 0x19
 10147: c8 8b 0b                 a4 = a4 + a1
 10150: 78 ba 01                 u8 [a4 + 0x1] = a3
 10153: 78 b7                    u8 [a4] = a0
 10155: 64 97                    a0 = a2
 10157: 01                       fallthrough
      :                          @597
 10158: 55 17 0a 14              jump @599 if a0 >=u 10
      :                          @598
 10162: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 10165: 95 19 19                 a2 = sp + 0x19
 10168: c8 89 09                 a2 = a2 + a1
 10171: 83 77 30                 i32 a0 = a0 + 0x30
 10174: 78 97                    u8 [a2] = a0
 10176: 28 21                    jump @600
      :                          @599
 10178: 97 77 01                 a0 = a0 << 0x1
 10181: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
 10184: 33 09 a0 07 01           a2 = 0x107a0
 10189: c8 97 07                 a0 = a0 + a2
 10192: 7c 79 01                 a2 = u8 [a0 + 0x1]
 10195: 7c 77                    a0 = u8 [a0]
 10197: 95 1a 19                 a3 = sp + 0x19
 10200: c8 8a 0a                 a3 = a3 + a1
 10203: 78 a9 01                 u8 [a3 + 0x1] = a2
 10206: 78 a7                    u8 [a3] = a0
 10208: 01                       fallthrough
      :                          @600
 10209: 95 1a 19                 a3 = sp + 0x19
 10212: c8 8a 0a                 a3 = a3 + a1
 10215: 9a 8b 27                 a4 = 0x27 - a1
 10218: 33 08 50 07 01           a1 = 0x10750
 10223: 82 17                    a0 = u64 [sp]
 10225: 33 09                    a2 = 0
 10227: 50 20 f4 00 13           ra = 244, jump @602
      :                          @601 [@dyn 122]
 10232: 82 10 50                 ra = u64 [sp + 0x50]
 10235: 82 15 48                 s0 = u64 [sp + 0x48]
 10238: 82 16 40                 s1 = u64 [sp + 0x40]
 10241: 95 11 58                 sp = sp + 0x58
 10244: 32 00                    ret
      :                          @602
 10246: 95 11 98                 sp = sp + 0xffffffffffffff98
 10249: 7b 10 60                 u64 [sp + 0x60] = ra
 10252: 7b 15 58                 u64 [sp + 0x58] = s0
 10255: 7b 16 50                 u64 [sp + 0x50] = s1
 10258: 80 73 34                 t1 = u32 [a0 + 0x34]
 10261: 7b 1a 20                 u64 [sp + 0x20] = a3
 10264: 64 9c                    a5 = a2
 10266: 84 36 01                 s1 = t1 & 0x1
 10269: 33 02 2b                 t0 = 0x2b
 10272: 33 09 00 00 11           a2 = 0x110000
 10277: 84 3a 04                 a3 = t1 & 0x4
 10280: 7b 1b 28                 u64 [sp + 0x28] = a4
 10283: c8 b6 04                 t2 = s1 + a4
 10286: 7b 1c 30                 u64 [sp + 0x30] = a5
 10289: 52 0a 10                 jump @605 if a3 != 0
      :                          @603
 10292: 49 11 38                 u64 [sp + 56] = 0
 10295: 82 78                    a1 = u64 [a0]
 10297: 94 69 2b                 a2 = 0x2b if s1 != 0
 10300: 52 08 35                 jump @609 if a1 != 0
      :                          @604
 10303: 28 56                    jump @614
      :                          @605
 10305: 7b 18 38                 u64 [sp + 0x38] = a1
 10308: 33 09                    a2 = 0
 10310: 51 0c 1b                 jump @608 if a5 == 0
      :                          @606
 10313: 82 1b 38                 a4 = u64 [sp + 0x38]
 10316: 01                       fallthrough
      :                          @607
 10317: 7d b5                    s0 = i8 [a4]
 10319: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
 10322: 85 5a 01                 a3 = s0 ^ 0x1
 10325: c8 a9 09                 a2 = a2 + a3
 10328: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 10331: 95 bb 01                 a4 = a4 + 0x1
 10334: 52 0c ef                 jump @607 if a5 != 0
      :                          @608
 10337: c8 94 04                 t2 = t2 + a2
 10340: 33 09 00 00 11           a2 = 0x110000
 10345: 82 78                    a1 = u64 [a0]
 10347: db 62 09                 a2 = t0 if s1 != 0
 10350: 51 08 27                 jump @614 if a1 == 0
      :                          @609
 10353: 82 7a 08                 a3 = u64 [a0 + 0x8]
 10356: ae a4 21                 jump @614 if t2 >=u a3
      :                          @610
 10359: 84 38 08                 a1 = t1 & 0x8
 10362: 52 08 51                 jump @617 if a1 != 0
      :                          @611
 10365: 7c 76 38                 s1 = u8 [a0 + 0x38]
 10368: c9 4a 0a                 a3 = a3 - t2
 10371: 7b 19 18                 u64 [sp + 0x18] = a2
 10374: 5a 16 01 a0 00           jump @624 if s1 >s 1
      :                          @612
 10379: 52 06 ad 00              jump @626 if s1 != 0
      :                          @613
 10383: 7b 1a 10                 u64 [sp + 0x10] = a3
 10386: 28 ac 00                 jump @627
      :                          @614
 10389: 82 75 20                 s0 = u64 [a0 + 0x20]
 10392: 82 76 28                 s1 = u64 [a0 + 0x28]
 10395: 64 57                    a0 = s0
 10397: 64 68                    a1 = s1
 10399: 82 1a 38                 a3 = u64 [sp + 0x38]
 10402: 82 1b 30                 a4 = u64 [sp + 0x30]
 10405: 50 20 f6 00 75 01        ra = 246, jump @647
      :                          @615 [@dyn 123]
 10411: 33 08 01                 a1 = 0x1
 10414: 52 07 be 00              jump @632 if a0 != 0
      :                          @616
 10418: 82 6c 18                 a5 = u64 [s1 + 0x18]
 10421: 64 57                    a0 = s0
 10423: 82 18 20                 a1 = u64 [sp + 0x20]
 10426: 82 19 28                 a2 = u64 [sp + 0x28]
 10429: 82 10 60                 ra = u64 [sp + 0x60]
 10432: 82 15 58                 s0 = u64 [sp + 0x58]
 10435: 82 16 50                 s1 = u64 [sp + 0x50]
 10438: 95 11 68                 sp = sp + 0x68
 10441: 32 0c                    jump [a5]
      :                          @617
 10443: 7b 1a 40                 u64 [sp + 0x40] = a3
 10446: 64 45                    s0 = t2
 10448: 81 78 30                 a1 = i32 [a0 + 0x30]
 10451: 7b 18 10                 u64 [sp + 0x10] = a1
 10454: 7c 7a 38                 a3 = u8 [a0 + 0x38]
 10457: 7b 1a 08                 u64 [sp + 0x8] = a3
 10460: 82 7a 20                 a3 = u64 [a0 + 0x20]
 10463: 82 78 28                 a1 = u64 [a0 + 0x28]
 10466: 48 17 30 30              u32 [a0 + 48] = 0x30
 10470: 7b 17                    u64 [sp] = a0
 10472: 46 17 38 01              u8 [a0 + 56] = 0x1
 10476: 7b 1a 48                 u64 [sp + 0x48] = a3
 10479: 64 a7                    a0 = a3
 10481: 64 86                    s1 = a1
 10483: 82 1a 38                 a3 = u64 [sp + 0x38]
 10486: 82 1b 30                 a4 = u64 [sp + 0x30]
 10489: 50 20 f8 00 21 01        ra = 248, jump @647
      :                          @618 [@dyn 124]
 10495: 52 07 69                 jump @631 if a0 != 0
      :                          @619
 10498: 82 17 40                 a0 = u64 [sp + 0x40]
 10501: c9 57 05                 s0 = a0 - s0
 10504: 95 55 01                 s0 = s0 + 0x1
 10507: 01                       fallthrough
      :                          @620
 10508: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 10511: 51 05 cb 00              jump @642 if s0 == 0
      :                          @621
 10515: 82 69 20                 a2 = u64 [s1 + 0x20]
 10518: 33 08 30                 a1 = 0x30
 10521: 82 17 48                 a0 = u64 [sp + 0x48]
 10524: b4 90 02 fa 00           ra = 250, jump [a2]
      :                          @622 [@dyn 125]
 10529: 51 07 eb                 jump @620 if a0 == 0
      :                          @623
 10532: 28 44                    jump @631
      :                          @624
 10534: 52 16 02 12              jump @626 if s1 != 2
      :                          @625
 10538: 98 a6 01                 s1 = a3 >> 0x1
 10541: 95 a8 01                 a1 = a3 + 0x1
 10544: 98 88 01                 a1 = a1 >> 0x1
 10547: 7b 18 10                 u64 [sp + 0x10] = a1
 10550: 28 08                    jump @627
      :                          @626
 10552: 64 a6                    s1 = a3
 10554: 49 11 10                 u64 [sp + 16] = 0
 10557: 01                       fallthrough
      :                          @627
 10558: 82 78 20                 a1 = u64 [a0 + 0x20]
 10561: 7b 18 48                 u64 [sp + 0x48] = a1
 10564: 82 75 28                 s0 = u64 [a0 + 0x28]
 10567: 81 77 30                 a0 = i32 [a0 + 0x30]
 10570: 7b 17 40                 u64 [sp + 0x40] = a0
 10573: 95 66 01                 s1 = s1 + 0x1
 10576: 01                       fallthrough
      :                          @628
 10577: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 10580: 51 06 28                 jump @633 if s1 == 0
      :                          @629
 10583: 82 59 20                 a2 = u64 [s0 + 0x20]
 10586: 82 17 48                 a0 = u64 [sp + 0x48]
 10589: 82 18 40                 a1 = u64 [sp + 0x40]
 10592: b4 90 02 fc 00           ra = 252, jump [a2]
      :                          @630 [@dyn 126]
 10597: 51 07 ec                 jump @628 if a0 == 0
      :                          @631
 10600: 33 08 01                 a1 = 0x1
 10603: 01                       fallthrough
      :                          @632
 10604: 64 87                    a0 = a1
 10606: 82 10 60                 ra = u64 [sp + 0x60]
 10609: 82 15 58                 s0 = u64 [sp + 0x58]
 10612: 82 16 50                 s1 = u64 [sp + 0x50]
 10615: 95 11 68                 sp = sp + 0x68
 10618: 32 00                    ret
      :                          @633
 10620: 82 16 48                 s1 = u64 [sp + 0x48]
 10623: 64 67                    a0 = s1
 10625: 64 58                    a1 = s0
 10627: 82 19 18                 a2 = u64 [sp + 0x18]
 10630: 82 1a 38                 a3 = u64 [sp + 0x38]
 10633: 82 1b 30                 a4 = u64 [sp + 0x30]
 10636: 50 20 fe 00 8e 00        ra = 254, jump @647
      :                          @634 [@dyn 127]
 10642: 33 08 01                 a1 = 0x1
 10645: 52 07 d7                 jump @632 if a0 != 0
      :                          @635
 10648: 82 5a 18                 a3 = u64 [s0 + 0x18]
 10651: 64 67                    a0 = s1
 10653: 82 18 20                 a1 = u64 [sp + 0x20]
 10656: 82 19 28                 a2 = u64 [sp + 0x28]
 10659: b4 a0 02 00 01           ra = 256, jump [a3]
      :                          @636 [@dyn 128]
 10664: 33 08 01                 a1 = 0x1
 10667: 52 07 c1                 jump @632 if a0 != 0
      :                          @637
 10670: 82 17 10                 a0 = u64 [sp + 0x10]
 10673: 9a 77                    a0 = -a0
 10675: 7b 17 38                 u64 [sp + 0x38] = a0
 10678: 33 06 ff                 s1 = 0xffffffffffffffff
 10681: 01                       fallthrough
      :                          @638
 10682: 82 17 38                 a0 = u64 [sp + 0x38]
 10685: c8 67 07                 a0 = a0 + s1
 10688: 51 17 ff 45              jump @645 if a0 == 4294967295
      :                          @639
 10692: 82 59 20                 a2 = u64 [s0 + 0x20]
 10695: 82 17 48                 a0 = u64 [sp + 0x48]
 10698: 82 18 40                 a1 = u64 [sp + 0x40]
 10701: b4 90 02 02 01           ra = 258, jump [a2]
      :                          @640 [@dyn 129]
 10706: 95 66 01                 s1 = s1 + 0x1
 10709: 51 07 e5                 jump @638 if a0 == 0
      :                          @641
 10712: 28 39                    jump @646
      :                          @642
 10714: 82 6a 18                 a3 = u64 [s1 + 0x18]
 10717: 82 17 48                 a0 = u64 [sp + 0x48]
 10720: 82 18 20                 a1 = u64 [sp + 0x20]
 10723: 82 19 28                 a2 = u64 [sp + 0x28]
 10726: b4 a0 02 04 01           ra = 260, jump [a3]
      :                          @643 [@dyn 130]
 10731: 33 08 01                 a1 = 0x1
 10734: 52 07 7e ff              jump @632 if a0 != 0
      :                          @644
 10738: 33 08                    a1 = 0
 10740: 82 16                    s1 = u64 [sp]
 10742: 82 17 10                 a0 = u64 [sp + 0x10]
 10745: 7a 67 30                 u32 [s1 + 0x30] = a0
 10748: 82 17 08                 a0 = u64 [sp + 0x8]
 10751: 78 67 38                 u8 [s1 + 0x38] = a0
 10754: 28 6a ff                 jump @632
      :                          @645
 10757: 82 16 10                 s1 = u64 [sp + 0x10]
 10760: 82 17 10                 a0 = u64 [sp + 0x10]
 10763: d8 76 08                 a1 = s1 <u a0
 10766: 28 5e ff                 jump @632
      :                          @646
 10769: 82 17 10                 a0 = u64 [sp + 0x10]
 10772: d8 76 08                 a1 = s1 <u a0
 10775: 28 55 ff                 jump @632
      :                          @647
 10778: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 10781: 7b 10 20                 u64 [sp + 0x20] = ra
 10784: 7b 15 18                 u64 [sp + 0x18] = s0
 10787: 7b 16 10                 u64 [sp + 0x10] = s1
 10790: 83 9c                    i32 a5 = a2 + 0
 10792: 33 02 00 00 11           t0 = 0x110000
 10797: 64 a6                    s1 = a3
 10799: 64 85                    s0 = a1
 10801: 64 7a                    a3 = a0
 10803: aa 2c 21                 jump @650 if a5 == t0
      :                          @648
 10806: 82 5c 20                 a5 = u64 [s0 + 0x20]
 10809: 64 a7                    a0 = a3
 10811: 64 98                    a1 = a2
 10813: 7b 1b 08                 u64 [sp + 0x8] = a4
 10816: 7b 1a                    u64 [sp] = a3
 10818: b4 c0 02 06 01           ra = 262, jump [a5]
      :                          @649 [@dyn 131]
 10823: 82 1a                    a3 = u64 [sp]
 10825: 82 1b 08                 a4 = u64 [sp + 0x8]
 10828: 64 78                    a1 = a0
 10830: 33 07 01                 a0 = 0x1
 10833: 52 08 20                 jump @653 if a1 != 0
      :                          @650
 10836: 51 06 1a                 jump @652 if s1 == 0
      :                          @651
 10839: 82 5c 18                 a5 = u64 [s0 + 0x18]
 10842: 64 a7                    a0 = a3
 10844: 64 68                    a1 = s1
 10846: 64 b9                    a2 = a4
 10848: 82 10 20                 ra = u64 [sp + 0x20]
 10851: 82 15 18                 s0 = u64 [sp + 0x18]
 10854: 82 16 10                 s1 = u64 [sp + 0x10]
 10857: 95 11 28                 sp = sp + 0x28
 10860: 32 0c                    jump [a5]
      :                          @652
 10862: 33 07                    a0 = 0
 10864: 01                       fallthrough
      :                          @653
 10865: 82 10 20                 ra = u64 [sp + 0x20]
 10868: 82 15 18                 s0 = u64 [sp + 0x18]
 10871: 82 16 10                 s1 = u64 [sp + 0x10]
 10874: 95 11 28                 sp = sp + 0x28
 10877: 32 00                    ret
      :                          @654
 10879: 95 11 78 ff              sp = sp + 0xffffffffffffff78
 10883: 7b 10 80 00              u64 [sp + 0x80] = ra
 10887: 7b 15 78                 u64 [sp + 0x78] = s0
 10890: 7b 16 70                 u64 [sp + 0x70] = s1
 10893: 49 11 60 20              u64 [sp + 96] = 0x20
 10897: 33 0a 03                 a3 = 0x3
 10900: 78 1a 68                 u8 [sp + 0x68] = a3
 10903: 82 96 20                 s1 = u64 [a2 + 0x20]
 10906: 49 11 30                 u64 [sp + 48] = 0
 10909: 49 11 40                 u64 [sp + 64] = 0
 10912: 7b 17 50                 u64 [sp + 0x50] = a0
 10915: 7b 18 58                 u64 [sp + 0x58] = a1
 10918: 51 06 0a 01              jump @676 if s1 == 0
      :                          @655
 10922: 82 97 28                 a0 = u64 [a2 + 0x28]
 10925: 51 07 79 01              jump @686 if a0 == 0
      :                          @656
 10929: 49 11 28                 u64 [sp + 40] = 0
 10932: 82 95                    s0 = u64 [a2]
 10934: 7b 19 08                 u64 [sp + 0x8] = a2
 10937: 82 98 10                 a1 = u64 [a2 + 0x10]
 10940: 7b 18 18                 u64 [sp + 0x18] = a1
 10943: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 10946: 97 88 03                 a1 = a1 << 0x3
 10949: 98 88 03                 a1 = a1 >> 0x3
 10952: 95 88 01                 a1 = a1 + 0x1
 10955: 7b 18                    u64 [sp] = a1
 10957: 95 55 08                 s0 = s0 + 0x8
 10960: 96 78 38                 a1 = a0 * 0x38
 10963: 95 66 18                 s1 = s1 + 0x18
 10966: 33 07 f0 00              a0 = 0xf0
 10970: 7b 17 10                 u64 [sp + 0x10] = a0
 10973: 01                       fallthrough
      :                          @657
 10974: 7b 18 20                 u64 [sp + 0x20] = a1
 10977: 82 59                    a2 = u64 [s0]
 10979: 51 09 18                 jump @660 if a2 == 0
      :                          @658
 10982: 82 1a 58                 a3 = u64 [sp + 0x58]
 10985: 82 17 50                 a0 = u64 [sp + 0x50]
 10988: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
 10991: 82 aa 18                 a3 = u64 [a3 + 0x18]
 10994: b4 a0 02 08 01           ra = 264, jump [a3]
      :                          @659 [@dyn 132]
 10999: 52 07 55 01              jump @689 if a0 != 0
      :                          @660
 11003: 81 67 10                 a0 = i32 [s1 + 0x10]
 11006: 7a 17 60                 u32 [sp + 0x60] = a0
 11009: 7c 67 18                 a0 = u8 [s1 + 0x18]
 11012: 78 17 68                 u8 [sp + 0x68] = a0
 11015: 81 67 14                 a0 = i32 [s1 + 0x14]
 11018: 7a 17 64                 u32 [sp + 0x64] = a0
 11021: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
 11024: 82 67                    a0 = u64 [s1]
 11026: 51 08 26                 jump @665 if a1 == 0
      :                          @661
 11029: 52 18 01 16              jump @663 if a1 != 1
      :                          @662
 11033: 97 77 04                 a0 = a0 << 0x4
 11036: 82 18 18                 a1 = u64 [sp + 0x18]
 11039: c8 87 07                 a0 = a0 + a1
 11042: 82 78 08                 a1 = u64 [a0 + 0x8]
 11045: 82 19 10                 a2 = u64 [sp + 0x10]
 11048: aa 98 07                 jump @664 if a1 == a2
      :                          @663
 11051: 33 08                    a1 = 0
 11053: 28 0f                    jump @666
      :                          @664
 11055: 82 77                    a0 = u64 [a0]
 11057: 82 77                    a0 = u64 [a0]
 11059: 33 08 01                 a1 = 0x1
 11062: 28 06                    jump @666
      :                          @665
 11064: 33 08 01                 a1 = 0x1
 11067: 01                       fallthrough
      :                          @666
 11068: 7b 18 30                 u64 [sp + 0x30] = a1
 11071: 7b 17 38                 u64 [sp + 0x38] = a0
 11074: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
 11077: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
 11080: 51 08 26                 jump @671 if a1 == 0
      :                          @667
 11083: 52 18 01 16              jump @669 if a1 != 1
      :                          @668
 11087: 97 77 04                 a0 = a0 << 0x4
 11090: 82 18 18                 a1 = u64 [sp + 0x18]
 11093: c8 87 07                 a0 = a0 + a1
 11096: 82 78 08                 a1 = u64 [a0 + 0x8]
 11099: 82 19 10                 a2 = u64 [sp + 0x10]
 11102: aa 98 07                 jump @670 if a1 == a2
      :                          @669
 11105: 33 08                    a1 = 0
 11107: 28 0f                    jump @672
      :                          @670
 11109: 82 77                    a0 = u64 [a0]
 11111: 82 77                    a0 = u64 [a0]
 11113: 33 08 01                 a1 = 0x1
 11116: 28 06                    jump @672
      :                          @671
 11118: 33 08 01                 a1 = 0x1
 11121: 01                       fallthrough
      :                          @672
 11122: 7b 18 40                 u64 [sp + 0x40] = a1
 11125: 7b 17 48                 u64 [sp + 0x48] = a0
 11128: 82 67 08                 a0 = u64 [s1 + 0x8]
 11131: 97 77 04                 a0 = a0 << 0x4
 11134: 82 18 18                 a1 = u64 [sp + 0x18]
 11137: c8 78 08                 a1 = a1 + a0
 11140: 82 87                    a0 = u64 [a1]
 11142: 82 89 08                 a2 = u64 [a1 + 0x8]
 11145: 95 18 30                 a1 = sp + 0x30
 11148: b4 90 02 0a 01           ra = 266, jump [a2]
      :                          @673 [@dyn 133]
 11153: 52 07 bb 00              jump @689 if a0 != 0
      :                          @674
 11157: 95 55 10                 s0 = s0 + 0x10
 11160: 82 18 20                 a1 = u64 [sp + 0x20]
 11163: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
 11166: 95 66 38                 s1 = s1 + 0x38
 11169: 82 17 28                 a0 = u64 [sp + 0x28]
 11172: 95 77 01                 a0 = a0 + 0x1
 11175: 7b 17 28                 u64 [sp + 0x28] = a0
 11178: 52 08 34 ff              jump @657 if a1 != 0
      :                          @675
 11182: 28 6b                    jump @684
      :                          @676
 11184: 82 97 18                 a0 = u64 [a2 + 0x18]
 11187: 51 07 73                 jump @686 if a0 == 0
      :                          @677
 11190: 82 95 10                 s0 = u64 [a2 + 0x10]
 11193: 33 0a                    a3 = 0
 11195: 97 78 04                 a1 = a0 << 0x4
 11198: c8 58 08                 a1 = a1 + s0
 11201: 7b 18 20                 u64 [sp + 0x20] = a1
 11204: 7b 19 08                 u64 [sp + 0x8] = a2
 11207: 82 96                    s1 = u64 [a2]
 11209: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 11212: 97 77 04                 a0 = a0 << 0x4
 11215: 98 77 04                 a0 = a0 >> 0x4
 11218: 95 77 01                 a0 = a0 + 0x1
 11221: 7b 17                    u64 [sp] = a0
 11223: 95 66 08                 s1 = s1 + 0x8
 11226: 01                       fallthrough
      :                          @678
 11227: 7b 1a 28                 u64 [sp + 0x28] = a3
 11230: 82 69                    a2 = u64 [s1]
 11232: 51 09 17                 jump @681 if a2 == 0
      :                          @679
 11235: 82 1a 58                 a3 = u64 [sp + 0x58]
 11238: 82 17 50                 a0 = u64 [sp + 0x50]
 11241: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
 11244: 82 aa 18                 a3 = u64 [a3 + 0x18]
 11247: b4 a0 02 0c 01           ra = 268, jump [a3]
      :                          @680 [@dyn 134]
 11252: 52 07 58                 jump @689 if a0 != 0
      :                          @681
 11255: 82 57                    a0 = u64 [s0]
 11257: 82 59 08                 a2 = u64 [s0 + 0x8]
 11260: 95 18 30                 a1 = sp + 0x30
 11263: b4 90 02 0e 01           ra = 270, jump [a2]
      :                          @682 [@dyn 135]
 11268: 52 07 48                 jump @689 if a0 != 0
      :                          @683
 11271: 95 66 10                 s1 = s1 + 0x10
 11274: 95 55 10                 s0 = s0 + 0x10
 11277: 82 1a 28                 a3 = u64 [sp + 0x28]
 11280: 95 aa 01                 a3 = a3 + 0x1
 11283: 82 17 20                 a0 = u64 [sp + 0x20]
 11286: ab 75 c5                 jump @678 if s0 != a0
      :                          @684
 11289: 82 19 08                 a2 = u64 [sp + 0x8]
 11292: 82 1a                    a3 = u64 [sp]
 11294: 82 97 08                 a0 = u64 [a2 + 0x8]
 11297: ac 7a 0d                 jump @687 if a3 <u a0
      :                          @685
 11300: 28 2d                    jump @690
      :                          @686
 11302: 33 0a                    a3 = 0
 11304: 82 97 08                 a0 = u64 [a2 + 0x8]
 11307: 54 07 26                 jump @690 if a0 <=u 0
      :                          @687
 11310: 82 97                    a0 = u64 [a2]
 11312: 97 a8 04                 a1 = a3 << 0x4
 11315: c8 87 09                 a2 = a0 + a1
 11318: 82 1a 58                 a3 = u64 [sp + 0x58]
 11321: 82 17 50                 a0 = u64 [sp + 0x50]
 11324: 82 98                    a1 = u64 [a2]
 11326: 82 99 08                 a2 = u64 [a2 + 0x8]
 11329: 82 aa 18                 a3 = u64 [a3 + 0x18]
 11332: b4 a0 02 10 01           ra = 272, jump [a3]
      :                          @688 [@dyn 136]
 11337: 51 07 08                 jump @690 if a0 == 0
      :                          @689
 11340: 33 07 01                 a0 = 0x1
 11343: 28 05                    jump @691
      :                          @690
 11345: 33 07                    a0 = 0
 11347: 01                       fallthrough
      :                          @691
 11348: 82 10 80 00              ra = u64 [sp + 0x80]
 11352: 82 15 78                 s0 = u64 [sp + 0x78]
 11355: 82 16 70                 s1 = u64 [sp + 0x70]
 11358: 95 11 88 00              sp = sp + 0x88
 11362: 32 00                    ret
      :                          @692 [@dyn 137]
 11364: 32 00                    ret
      :                          @693 [@dyn 138]
 11366: 95 11 80                 sp = sp + 0xffffffffffffff80
 11369: 7b 10 78                 u64 [sp + 0x78] = ra
 11372: 7b 15 70                 u64 [sp + 0x70] = s0
 11375: 7b 16 68                 u64 [sp + 0x68] = s1
 11378: 64 92                    t0 = a2
 11380: 33 00                    ra = 0
 11382: 33 0b                    a4 = 0
 11384: 33 05                    s0 = 0
 11386: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
 11396: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
 11402: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
 11412: 82 79 10                 a2 = u64 [a0 + 0x10]
 11415: 7b 19 48                 u64 [sp + 0x48] = a2
 11418: 82 79                    a2 = u64 [a0]
 11420: 7b 19 38                 u64 [sp + 0x38] = a2
 11423: 82 77 08                 a0 = u64 [a0 + 0x8]
 11426: 7b 17 30                 u64 [sp + 0x30] = a0
 11429: 33 07 90 07 01           a0 = 0x10790
 11434: 7b 17 08                 u64 [sp + 0x8] = a0
 11437: 3a 07 08 00 03           a0 = u64 [0x30008]
 11442: 7b 17 60                 u64 [sp + 0x60] = a0
 11445: 7b 18 58                 u64 [sp + 0x58] = a1
 11448: 95 88 08                 a1 = a1 + 0x8
 11451: 7b 18                    u64 [sp] = a1
 11453: 33 0c 0a                 a5 = 0xa
 11456: 7b 12 20                 u64 [sp + 0x20] = t0
 11459: 7b 13 18                 u64 [sp + 0x18] = t1
 11462: 7b 14 10                 u64 [sp + 0x10] = t2
 11465: 28 3b                    jump @697
      :                          @694
 11467: 64 06                    s1 = ra
 11469: c8 89 07                 a0 = a2 + a1
 11472: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
 11475: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
 11478: 88 77 01                 a0 = a0 <u 0x1
 11481: 01                       fallthrough
      :                          @695
 11482: 82 1a 48                 a3 = u64 [sp + 0x48]
 11485: 78 a7                    u8 [a3] = a0
 11487: 82 17 30                 a0 = u64 [sp + 0x30]
 11490: 82 7a 18                 a3 = u64 [a0 + 0x18]
 11493: 82 17 38                 a0 = u64 [sp + 0x38]
 11496: b4 a0 02 16 01           ra = 278, jump [a3]
      :                          @696 [@dyn 139]
 11501: 64 5b                    a4 = s0
 11503: 82 12 20                 t0 = u64 [sp + 0x20]
 11506: 82 13 18                 t1 = u64 [sp + 0x18]
 11509: 82 14 10                 t2 = u64 [sp + 0x10]
 11512: 64 60                    ra = s1
 11514: 33 0c 0a                 a5 = 0xa
 11517: 82 15 40                 s0 = u64 [sp + 0x40]
 11520: 52 07 64 01              jump @738 if a0 != 0
      :                          @697
 11524: 84 57 ff 00              a0 = s0 & 0xff
 11528: 52 07 58 01              jump @737 if a0 != 0
      :                          @698
 11532: 7b 1b 50                 u64 [sp + 0x50] = a4
 11535: ae 02 0a                 jump @701 if t0 >=u ra
      :                          @699
 11538: 28 ef 00                 jump @728
      :                          @700
 11541: ac 02 ec 00              jump @728 if t0 <u ra
      :                          @701
 11545: c9 02 08                 a1 = t0 - ra
 11548: 82 16 58                 s1 = u64 [sp + 0x58]
 11551: c8 06 06                 s1 = s1 + ra
 11554: 55 18 10 1d              jump @707 if a1 >=u 16
      :                          @702
 11558: aa 02 d8 00              jump @727 if t0 == ra
      :                          @703
 11562: 33 0a                    a3 = 0
 11564: 01                       fallthrough
      :                          @704
 11565: c8 a6 07                 a0 = s1 + a3
 11568: 7c 77                    a0 = u8 [a0]
 11570: aa c7 a5 00              jump @722 if a0 == a5
      :                          @705
 11574: 95 aa 01                 a3 = a3 + 0x1
 11577: ab a8 f4                 jump @704 if a1 != a3
      :                          @706
 11580: 28 c2 00                 jump @727
      :                          @707
 11583: 95 69 07                 a2 = s1 + 0x7
 11586: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
 11589: c9 6a 07                 a0 = a3 - s1
 11592: d3 6a 0a                 a3 = a3 ^ s1
 11595: 88 aa 01                 a3 = a3 <u 0x1
 11598: 88 7b 01                 a4 = a0 <u 0x1
 11601: d4 ba 0a                 a3 = a3 | a4
 11604: 51 0a 45                 jump @713 if a3 == 0
      :                          @708
 11607: 33 07                    a0 = 0
 11609: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
 11612: 82 1b                    a4 = u64 [sp]
 11614: c8 0b 0b                 a4 = a4 + ra
 11617: 28 08                    jump @710
      :                          @709
 11619: 82 1b                    a4 = u64 [sp]
 11621: c8 0b 0b                 a4 = a4 + ra
 11624: 01                       fallthrough
      :                          @710
 11625: c8 76 0c                 a5 = s1 + a0
 11628: 82 cc                    a5 = u64 [a5]
 11630: c8 7b 09                 a2 = a4 + a0
 11633: 82 99                    a2 = u64 [a2]
 11635: d3 4c 05                 s0 = a5 ^ t2
 11638: c8 35 05                 s0 = s0 + t1
 11641: e0 c5 0c                 a5 = s0 & ~a5
 11644: d3 49 05                 s0 = a2 ^ t2
 11647: c8 35 05                 s0 = s0 + t1
 11650: e0 95 09                 a2 = s0 & ~a2
 11653: d4 c9 09                 a2 = a2 | a5
 11656: 82 1c 60                 a5 = u64 [sp + 0x60]
 11659: d2 c9 09                 a2 = a2 & a5
 11662: 52 09 1f                 jump @716 if a2 != 0
      :                          @711
 11665: 95 77 10                 a0 = a0 + 0x10
 11668: ae 7a d5                 jump @710 if a3 >=u a0
      :                          @712
 11671: 28 16                    jump @716
      :                          @713
 11673: c8 a6 0b                 a4 = s1 + a3
 11676: 7c bb                    a4 = u8 [a4]
 11678: aa cb 51                 jump @725 if a4 == a5
      :                          @714
 11681: 95 aa 01                 a3 = a3 + 0x1
 11684: ab a7 f5                 jump @713 if a0 != a3
      :                          @715
 11687: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
 11690: ae 7a b9                 jump @709 if a3 >=u a0
      :                          @716
 11693: aa 87 9b 00              jump @734 if a0 == a1
      :                          @717
 11697: 33 0a                    a3 = 0
 11699: c8 76 06                 s1 = s1 + a0
 11702: c9 72 08                 a1 = t0 - a0
 11705: c9 08 08                 a1 = a1 - ra
 11708: 33 0c 0a                 a5 = 0xa
 11711: 82 1b 50                 a4 = u64 [sp + 0x50]
 11714: 01                       fallthrough
      :                          @718
 11715: c8 a6 09                 a2 = s1 + a3
 11718: 7c 99                    a2 = u8 [a2]
 11720: aa c9 0b                 jump @721 if a2 == a5
      :                          @719
 11723: 95 aa 01                 a3 = a3 + 0x1
 11726: ab a8 f5                 jump @718 if a1 != a3
      :                          @720
 11729: 28 2d                    jump @727
      :                          @721
 11731: c8 7a 0a                 a3 = a3 + a0
 11734: 01                       fallthrough
      :                          @722
 11735: c8 0a 0a                 a3 = a3 + ra
 11738: 95 a0 01                 ra = a3 + 0x1
 11741: ae 2a 38 ff              jump @700 if a3 >=u t0
      :                          @723
 11745: 82 17 58                 a0 = u64 [sp + 0x58]
 11748: c8 7a 0a                 a3 = a3 + a0
 11751: 7c a7                    a0 = u8 [a3]
 11753: ab c7 2c ff              jump @700 if a0 != a5
      :                          @724
 11757: 28 62                    jump @735
      :                          @725
 11759: 82 1b 50                 a4 = u64 [sp + 0x50]
 11762: c8 0a 0a                 a3 = a3 + ra
 11765: 95 a0 01                 ra = a3 + 0x1
 11768: ac 2a e9                 jump @723 if a3 <u t0
      :                          @726
 11771: 28 1a ff                 jump @700
      :                          @727
 11774: 64 20                    ra = t0
 11776: 01                       fallthrough
      :                          @728
 11777: 49 11 40 01              u64 [sp + 64] = 0x1
 11781: 64 b5                    s0 = a4
 11783: 64 26                    s1 = t0
 11785: aa 2b 57                 jump @737 if a4 == t0
      :                          @729
 11788: 82 17 48                 a0 = u64 [sp + 0x48]
 11791: 7c 77                    a0 = u8 [a0]
 11793: 51 07 23                 jump @732 if a0 == 0
      :                          @730
 11796: 82 17 30                 a0 = u64 [sp + 0x30]
 11799: 82 7a 18                 a3 = u64 [a0 + 0x18]
 11802: 33 09 04                 a2 = 0x4
 11805: 82 17 38                 a0 = u64 [sp + 0x38]
 11808: 82 18 08                 a1 = u64 [sp + 0x8]
 11811: 7b 10 28                 u64 [sp + 0x28] = ra
 11814: b4 a0 02 18 01           ra = 280, jump [a3]
      :                          @731 [@dyn 140]
 11819: 82 1b 50                 a4 = u64 [sp + 0x50]
 11822: 82 10 28                 ra = u64 [sp + 0x28]
 11825: 52 07 33                 jump @738 if a0 != 0
      :                          @732
 11828: c9 b6 09                 a2 = s1 - a4
 11831: 82 18 58                 a1 = u64 [sp + 0x58]
 11834: c8 b8 08                 a1 = a1 + a4
 11837: ab b6 8e fe              jump @694 if s1 != a4
      :                          @733
 11841: 64 06                    s1 = ra
 11843: 33 07                    a0 = 0
 11845: 28 95 fe                 jump @695
      :                          @734
 11848: 64 20                    ra = t0
 11850: 82 1b 50                 a4 = u64 [sp + 0x50]
 11853: 28 b4                    jump @728
      :                          @735
 11855: 49 11 40                 u64 [sp + 64] = 0
 11858: 64 05                    s0 = ra
 11860: 64 06                    s1 = ra
 11862: 82 17 48                 a0 = u64 [sp + 0x48]
 11865: 7c 77                    a0 = u8 [a0]
 11867: 52 07 b9                 jump @730 if a0 != 0
      :                          @736
 11870: 28 d6                    jump @732
      :                          @737
 11872: 33 07                    a0 = 0
 11874: 28 06                    jump @739
      :                          @738
 11876: 33 07 01                 a0 = 0x1
 11879: 01                       fallthrough
      :                          @739
 11880: 82 10 78                 ra = u64 [sp + 0x78]
 11883: 82 15 70                 s0 = u64 [sp + 0x70]
 11886: 82 16 68                 s1 = u64 [sp + 0x68]
 11889: 95 11 80 00              sp = sp + 0x80
 11893: 32 00                    ret
      :                          @740 [@dyn 141]
 11895: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 11898: 7b 10 20                 u64 [sp + 0x20] = ra
 11901: 7b 15 18                 u64 [sp + 0x18] = s0
 11904: 7b 16 10                 u64 [sp + 0x10] = s1
 11907: 82 75 10                 s0 = u64 [a0 + 0x10]
 11910: 7c 59                    a2 = u8 [s0]
 11912: 82 7b                    a4 = u64 [a0]
 11914: 82 76 08                 s1 = u64 [a0 + 0x8]
 11917: 51 09 33                 jump @744 if a2 == 0
      :                          @741
 11920: 82 6a 18                 a3 = u64 [s1 + 0x18]
 11923: 7b 18 08                 u64 [sp + 0x8] = a1
 11926: 33 08 90 07 01           a1 = 0x10790
 11931: 33 09 04                 a2 = 0x4
 11934: 64 b7                    a0 = a4
 11936: 7b 1b                    u64 [sp] = a4
 11938: b4 a0 02 1c 01           ra = 284, jump [a3]
      :                          @742 [@dyn 142]
 11943: 82 18 08                 a1 = u64 [sp + 0x8]
 11946: 82 1b                    a4 = u64 [sp]
 11948: 51 07 14                 jump @744 if a0 == 0
      :                          @743
 11951: 33 07 01                 a0 = 0x1
 11954: 82 10 20                 ra = u64 [sp + 0x20]
 11957: 82 15 18                 s0 = u64 [sp + 0x18]
 11960: 82 16 10                 s1 = u64 [sp + 0x10]
 11963: 95 11 28                 sp = sp + 0x28
 11966: 32 00                    ret
      :                          @744
 11968: 83 87                    i32 a0 = a1 + 0
 11970: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
 11973: 88 77 01                 a0 = a0 <u 0x1
 11976: 78 57                    u8 [s0] = a0
 11978: 82 6c 20                 a5 = u64 [s1 + 0x20]
 11981: 64 b7                    a0 = a4
 11983: 82 10 20                 ra = u64 [sp + 0x20]
 11986: 82 15 18                 s0 = u64 [sp + 0x18]
 11989: 82 16 10                 s1 = u64 [sp + 0x10]
 11992: 95 11 28                 sp = sp + 0x28
 11995: 32 0c                    jump [a5]
      :                          @745 [@dyn 143]
 11997: 64 8a                    a3 = a1
 11999: 33 08 58 07 01           a1 = 0x10758
 12004: 64 a9                    a2 = a3
 12006: 28 99 fb                 jump @654
      :                          @746 [@dyn 144]
 12009: 80 77                    a0 = u32 [a0]
 12011: 28 f3 f7                 jump @592
      :                          @747 [@dyn 145]
 12014: 95 11 78 ff              sp = sp + 0xffffffffffffff78
 12018: 7b 10 80 00              u64 [sp + 0x80] = ra
 12022: 82 7b                    a4 = u64 [a0]
 12024: 33 09 81 00              a2 = 0x81
 12028: 95 17 7f                 a0 = sp + 0x7f
 12031: 33 02 57                 t0 = 0x57
 12034: 01                       fallthrough
      :                          @748
 12035: 64 9c                    a5 = a2
 12037: 98 ba 04                 a3 = a4 >> 0x4
 12040: 84 bb 0f                 a4 = a4 & 0xf
 12043: 88 b3 0a                 t1 = a4 <u 0xa
 12046: 33 09 30                 a2 = 0x30
 12049: da 32 09                 a2 = t0 if t1 == 0
 12052: be b9 09                 i32 a2 = a2 + a4
 12055: 78 79                    u8 [a0] = a2
 12057: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 12060: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
 12063: 64 ab                    a4 = a3
 12065: 52 0a e2                 jump @748 if a3 != 0
      :                          @749
 12068: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
 12071: 56 27 80 00 28           jump @752 if a0 >u 128
      :                          @750
 12076: 9a 9b 81 00              a4 = 0x81 - a2
 12080: 64 1a                    a3 = sp
 12082: c8 7a 0a                 a3 = a3 + a0
 12085: 33 09 02                 a2 = 0x2
 12088: 64 87                    a0 = a1
 12090: 33 08 9e 07 01           a1 = 0x1079e
 12095: 50 20 24 01 c7 f8        ra = 292, jump @602
      :                          @751 [@dyn 146]
 12101: 82 10 80 00              ra = u64 [sp + 0x80]
 12105: 95 11 88 00              sp = sp + 0x88
 12109: 32 00                    ret
      :                          @752
 12111: 00                       trap
      :                          @753
 12112: 95 11 70 ff              sp = sp + 0xffffffffffffff70
 12116: 7b 10 88 00              u64 [sp + 0x88] = ra
 12120: 7b 15 80 00              u64 [sp + 0x80] = s0
 12124: 7b 16 78                 u64 [sp + 0x78] = s1
 12127: 64 75                    s0 = a0
 12129: 7c 77 08                 a0 = u8 [a0 + 0x8]
 12132: 64 8b                    a4 = a1
 12134: 33 08 01                 a1 = 0x1
 12137: 33 06 01                 s1 = 0x1
 12140: 51 07 1d                 jump @755 if a0 == 0
      :                          @754
 12143: 78 56 08                 u8 [s0 + 0x8] = s1
 12146: 46 15 09 01              u8 [s0 + 9] = 0x1
 12150: 64 57                    a0 = s0
 12152: 82 10 88 00              ra = u64 [sp + 0x88]
 12156: 82 15 80 00              s0 = u64 [sp + 0x80]
 12160: 82 16 78                 s1 = u64 [sp + 0x78]
 12163: 95 11 90 00              sp = sp + 0x90
 12167: 32 00                    ret
      :                          @755
 12169: 64 9a                    a3 = a2
 12171: 82 5c                    a5 = u64 [s0]
 12173: 80 c7 34                 a0 = u32 [a5 + 0x34]
 12176: 7c 58 09                 a1 = u8 [s0 + 0x9]
 12179: 84 79 04                 a2 = a0 & 0x4
 12182: 52 09 45                 jump @761 if a2 != 0
      :                          @756
 12185: 51 08 32                 jump @759 if a1 == 0
      :                          @757
 12188: 82 c8 28                 a1 = u64 [a5 + 0x28]
 12191: 82 c7 20                 a0 = u64 [a5 + 0x20]
 12194: 82 83 18                 t1 = u64 [a1 + 0x18]
 12197: 33 08 98 07 01           a1 = 0x10798
 12202: 33 09 02                 a2 = 0x2
 12205: 64 a6                    s1 = a3
 12207: 7b 1b 10                 u64 [sp + 0x10] = a4
 12210: 7b 1c 08                 u64 [sp + 0x8] = a5
 12213: b4 30 02 26 01           ra = 294, jump [t1]
      :                          @758 [@dyn 147]
 12218: 82 1c 08                 a5 = u64 [sp + 0x8]
 12221: 82 1b 10                 a4 = u64 [sp + 0x10]
 12224: 64 6a                    a3 = s1
 12226: 33 08 01                 a1 = 0x1
 12229: 33 06 01                 s1 = 0x1
 12232: 52 07 a7                 jump @754 if a0 != 0
      :                          @759
 12235: 64 b7                    a0 = a4
 12237: 64 c8                    a1 = a5
 12239: b4 a0 02 28 01           ra = 296, jump [a3]
      :                          @760 [@dyn 148]
 12244: 33 08 01                 a1 = 0x1
 12247: 64 76                    s1 = a0
 12249: 28 96                    jump @754
      :                          @761
 12251: 52 08 37                 jump @765 if a1 != 0
      :                          @762
 12254: 82 c8 28                 a1 = u64 [a5 + 0x28]
 12257: 82 c7 20                 a0 = u64 [a5 + 0x20]
 12260: 82 83 18                 t1 = u64 [a1 + 0x18]
 12263: 33 08 9c 07 01           a1 = 0x1079c
 12268: 33 09 01                 a2 = 0x1
 12271: 33 06 01                 s1 = 0x1
 12274: 7b 1a                    u64 [sp] = a3
 12276: 7b 1b 10                 u64 [sp + 0x10] = a4
 12279: 7b 1c 08                 u64 [sp + 0x8] = a5
 12282: b4 30 02 2a 01           ra = 298, jump [t1]
      :                          @763 [@dyn 149]
 12287: 82 1c 08                 a5 = u64 [sp + 0x8]
 12290: 82 1b 10                 a4 = u64 [sp + 0x10]
 12293: 82 1a                    a3 = u64 [sp]
 12295: 33 08 01                 a1 = 0x1
 12298: 52 07 65 ff              jump @754 if a0 != 0
      :                          @764
 12302: 81 c7 34                 a0 = i32 [a5 + 0x34]
 12305: 01                       fallthrough
      :                          @765
 12306: 33 06 01                 s1 = 0x1
 12309: 78 16 37                 u8 [sp + 0x37] = s1
 12312: 82 c8 20                 a1 = u64 [a5 + 0x20]
 12315: 82 c9 28                 a2 = u64 [a5 + 0x28]
 12318: 7b 18 18                 u64 [sp + 0x18] = a1
 12321: 7b 19 20                 u64 [sp + 0x20] = a2
 12324: 95 18 37                 a1 = sp + 0x37
 12327: 7b 18 28                 u64 [sp + 0x28] = a1
 12330: 81 c8 30                 a1 = i32 [a5 + 0x30]
 12333: 7c c9 38                 a2 = u8 [a5 + 0x38]
 12336: 82 c3                    t1 = u64 [a5]
 12338: 82 c4 08                 t2 = u64 [a5 + 0x8]
 12341: 82 c0 10                 ra = u64 [a5 + 0x10]
 12344: 82 c2 18                 t0 = u64 [a5 + 0x18]
 12347: 7a 17 6c                 u32 [sp + 0x6c] = a0
 12350: 7a 18 68                 u32 [sp + 0x68] = a1
 12353: 78 19 70                 u8 [sp + 0x70] = a2
 12356: 7b 13 38                 u64 [sp + 0x38] = t1
 12359: 7b 14 40                 u64 [sp + 0x40] = t2
 12362: 7b 10 48                 u64 [sp + 0x48] = ra
 12365: 7b 12 50                 u64 [sp + 0x50] = t0
 12368: 95 17 18                 a0 = sp + 0x18
 12371: 7b 17 58                 u64 [sp + 0x58] = a0
 12374: 33 07 58 07 01           a0 = 0x10758
 12379: 7b 17 60                 u64 [sp + 0x60] = a0
 12382: 95 18 38                 a1 = sp + 0x38
 12385: 64 b7                    a0 = a4
 12387: b4 a0 02 2c 01           ra = 300, jump [a3]
      :                          @766 [@dyn 150]
 12392: 52 07 21                 jump @769 if a0 != 0
      :                          @767
 12395: 82 18 60                 a1 = u64 [sp + 0x60]
 12398: 82 17 58                 a0 = u64 [sp + 0x58]
 12401: 82 8a 18                 a3 = u64 [a1 + 0x18]
 12404: 33 08 9a 07 01           a1 = 0x1079a
 12409: 33 09 02                 a2 = 0x2
 12412: b4 a0 02 2e 01           ra = 302, jump [a3]
      :                          @768 [@dyn 151]
 12417: 64 76                    s1 = a0
 12419: 33 08 01                 a1 = 0x1
 12422: 28 e9 fe                 jump @754
      :                          @769
 12425: 33 08 01                 a1 = 0x1
 12428: 28 e3 fe                 jump @754
      :                          @770
 12431: 51 08 9b 00              jump @791 if a1 == 0
      :                          @771
 12435: 64 79                    a2 = a0
 12437: 7c 77                    a0 = u8 [a0]
 12439: 51 07 91 00              jump @790 if a0 == 0
      :                          @772
 12443: 51 27 ff 00 90 00        jump @792 if a0 == 255
      :                          @773
 12449: 6c 7a                    a3 = sext.b a0
 12451: 57 0a 09                 jump @775 if a3 <s 0
      :                          @774
 12454: 33 0a                    a3 = 0
 12456: 33 08                    a1 = 0
 12458: 28 73                    jump @789
      :                          @775
 12460: 55 27 c0 00 0d           jump @777 if a0 >=u 192
      :                          @776
 12465: 33 0a 01                 a3 = 0x1
 12468: 33 0b 80                 a4 = 0xffffffffffffff80
 12471: 28 4a                    jump @786
      :                          @777
 12473: 55 27 e0 00 0e           jump @779 if a0 >=u 224
      :                          @778
 12478: 33 0a 02                 a3 = 0x2
 12481: 33 0b 40 ff              a4 = 0xffffffffffffff40
 12485: 28 3c                    jump @786
      :                          @779
 12487: 55 27 f0 00 0e           jump @781 if a0 >=u 240
      :                          @780
 12492: 33 0a 03                 a3 = 0x3
 12495: 33 0b 20 ff              a4 = 0xffffffffffffff20
 12499: 28 2e                    jump @786
      :                          @781
 12501: 55 27 f8 00 0e           jump @783 if a0 >=u 248
      :                          @782
 12506: 33 0a 04                 a3 = 0x4
 12509: 33 0b 10 ff              a4 = 0xffffffffffffff10
 12513: 28 20                    jump @786
      :                          @783
 12515: 55 27 fc 00 0e           jump @785 if a0 >=u 252
      :                          @784
 12520: 33 0a 05                 a3 = 0x5
 12523: 33 0b 08 ff              a4 = 0xffffffffffffff08
 12527: 28 12                    jump @786
      :                          @785
 12529: 88 7a fe 00              a3 = a0 <u 0xfe
 12533: 33 0b 04 ff              a4 = 0xffffffffffffff04
 12537: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
 12541: 85 aa 07                 a3 = a3 ^ 0x7
 12544: 01                       fallthrough
      :                          @786
 12545: ae 8a 2b                 jump @793 if a3 >=u a1
      :                          @787
 12548: 33 08                    a1 = 0
 12550: c8 b7 07                 a0 = a0 + a4
 12553: 64 ab                    a4 = a3
 12555: 01                       fallthrough
      :                          @788
 12556: c8 b9 0c                 a5 = a2 + a4
 12559: 7c cc                    a5 = u8 [a5]
 12561: 97 88 08                 a1 = a1 << 0x8
 12564: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 12567: d4 c8 08                 a1 = a1 | a5
 12570: 52 0b f2                 jump @788 if a4 != 0
      :                          @789
 12573: 8a a9 03                 i32 a2 = a3 << 0x3
 12576: cf 97 07                 a0 = a0 << a2
 12579: c8 87 07                 a0 = a0 + a1
 12582: 32 00                    ret
      :                          @790
 12584: 32 00                    ret
      :                          @791
 12586: 00                       trap
      :                          @792
 12587: 00                       trap
      :                          @793
 12588: 00                       trap
